; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--h264idct.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--h264idct.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@scan8 = internal constant [51 x i8] c"\0C\0D\14\15\0E\0F\16\17\1C\1D$%\1E\1F&'45<=67>?DELMFGNO\5C]de^_fglmtunovw\00(P", align 16
@ff_h264_luma_dc_dequant_idct_8_c.x_offset = internal constant [4 x i8] c"\00 \80\A0", align 1
@ff_h264_chroma422_dc_dequant_idct_8_c.x_offset = internal constant [2 x i8] c"\00\10", align 1
@ff_h264_luma_dc_dequant_idct_9_c.x_offset = internal constant [4 x i8] c"\00 \80\A0", align 1
@ff_h264_chroma422_dc_dequant_idct_9_c.x_offset = internal constant [2 x i8] c"\00\10", align 1
@ff_h264_luma_dc_dequant_idct_10_c.x_offset = internal constant [4 x i8] c"\00 \80\A0", align 1
@ff_h264_chroma422_dc_dequant_idct_10_c.x_offset = internal constant [2 x i8] c"\00\10", align 1
@ff_h264_luma_dc_dequant_idct_12_c.x_offset = internal constant [4 x i8] c"\00 \80\A0", align 1
@ff_h264_chroma422_dc_dequant_idct_12_c.x_offset = internal constant [2 x i8] c"\00\10", align 1
@ff_h264_luma_dc_dequant_idct_14_c.x_offset = internal constant [4 x i8] c"\00 \80\A0", align 1
@ff_h264_chroma422_dc_dequant_idct_14_c.x_offset = internal constant [2 x i8] c"\00\10", align 1

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add_8_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !59 {
entry:
  %retval.i188 = alloca i8, align 1
  %a.addr.i189 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i189, metadata !62, metadata !67), !dbg !68
  %retval.i177 = alloca i8, align 1
  %a.addr.i178 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i178, metadata !62, metadata !67), !dbg !73
  %retval.i166 = alloca i8, align 1
  %a.addr.i167 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i167, metadata !62, metadata !67), !dbg !75
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !62, metadata !67), !dbg !77
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i8*, align 8
  %block = alloca i16*, align 8
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  %z063 = alloca i32, align 4
  %z174 = alloca i32, align 4
  %z286 = alloca i32, align 4
  %z399 = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !79, metadata !67), !dbg !80
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !81, metadata !67), !dbg !82
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !83, metadata !67), !dbg !84
  call void @llvm.dbg.declare(metadata i32* %i, metadata !85, metadata !67), !dbg !86
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !87, metadata !67), !dbg !88
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !89
  store i8* %0, i8** %dst, align 8, !dbg !88
  call void @llvm.dbg.declare(metadata i16** %block, metadata !90, metadata !67), !dbg !91
  %1 = load i16*, i16** %_block.addr, align 8, !dbg !92
  store i16* %1, i16** %block, align 8, !dbg !91
  %2 = load i32, i32* %stride.addr, align 4, !dbg !93
  %shr = ashr i32 %2, 0, !dbg !93
  store i32 %shr, i32* %stride.addr, align 4, !dbg !93
  %3 = load i16*, i16** %block, align 8, !dbg !94
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 0, !dbg !94
  %4 = load i16, i16* %arrayidx, align 2, !dbg !95
  %conv = sext i16 %4 to i32, !dbg !95
  %add = add nsw i32 %conv, 32, !dbg !95
  %conv1 = trunc i32 %add to i16, !dbg !95
  store i16 %conv1, i16* %arrayidx, align 2, !dbg !95
  store i32 0, i32* %i, align 4, !dbg !96
  br label %for.cond, !dbg !98

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !99
  %cmp = icmp slt i32 %5, 4, !dbg !102
  br i1 %cmp, label %for.body, label %for.end, !dbg !103

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !104, metadata !67), !dbg !107
  %6 = load i32, i32* %i, align 4, !dbg !108
  %add3 = add nsw i32 %6, 0, !dbg !109
  %idxprom = sext i32 %add3 to i64, !dbg !110
  %7 = load i16*, i16** %block, align 8, !dbg !110
  %arrayidx4 = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !110
  %8 = load i16, i16* %arrayidx4, align 2, !dbg !110
  %conv5 = sext i16 %8 to i32, !dbg !110
  %9 = load i32, i32* %i, align 4, !dbg !111
  %add6 = add nsw i32 %9, 8, !dbg !112
  %idxprom7 = sext i32 %add6 to i64, !dbg !113
  %10 = load i16*, i16** %block, align 8, !dbg !113
  %arrayidx8 = getelementptr inbounds i16, i16* %10, i64 %idxprom7, !dbg !113
  %11 = load i16, i16* %arrayidx8, align 2, !dbg !113
  %conv9 = sext i16 %11 to i32, !dbg !114
  %add10 = add i32 %conv5, %conv9, !dbg !115
  store i32 %add10, i32* %z0, align 4, !dbg !107
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !116, metadata !67), !dbg !117
  %12 = load i32, i32* %i, align 4, !dbg !118
  %add11 = add nsw i32 %12, 0, !dbg !119
  %idxprom12 = sext i32 %add11 to i64, !dbg !120
  %13 = load i16*, i16** %block, align 8, !dbg !120
  %arrayidx13 = getelementptr inbounds i16, i16* %13, i64 %idxprom12, !dbg !120
  %14 = load i16, i16* %arrayidx13, align 2, !dbg !120
  %conv14 = sext i16 %14 to i32, !dbg !120
  %15 = load i32, i32* %i, align 4, !dbg !121
  %add15 = add nsw i32 %15, 8, !dbg !122
  %idxprom16 = sext i32 %add15 to i64, !dbg !123
  %16 = load i16*, i16** %block, align 8, !dbg !123
  %arrayidx17 = getelementptr inbounds i16, i16* %16, i64 %idxprom16, !dbg !123
  %17 = load i16, i16* %arrayidx17, align 2, !dbg !123
  %conv18 = sext i16 %17 to i32, !dbg !124
  %sub = sub i32 %conv14, %conv18, !dbg !125
  store i32 %sub, i32* %z1, align 4, !dbg !117
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !126, metadata !67), !dbg !127
  %18 = load i32, i32* %i, align 4, !dbg !128
  %add19 = add nsw i32 %18, 4, !dbg !129
  %idxprom20 = sext i32 %add19 to i64, !dbg !130
  %19 = load i16*, i16** %block, align 8, !dbg !130
  %arrayidx21 = getelementptr inbounds i16, i16* %19, i64 %idxprom20, !dbg !130
  %20 = load i16, i16* %arrayidx21, align 2, !dbg !130
  %conv22 = sext i16 %20 to i32, !dbg !130
  %shr23 = ashr i32 %conv22, 1, !dbg !131
  %21 = load i32, i32* %i, align 4, !dbg !132
  %add24 = add nsw i32 %21, 12, !dbg !133
  %idxprom25 = sext i32 %add24 to i64, !dbg !134
  %22 = load i16*, i16** %block, align 8, !dbg !134
  %arrayidx26 = getelementptr inbounds i16, i16* %22, i64 %idxprom25, !dbg !134
  %23 = load i16, i16* %arrayidx26, align 2, !dbg !134
  %conv27 = sext i16 %23 to i32, !dbg !135
  %sub28 = sub i32 %shr23, %conv27, !dbg !136
  store i32 %sub28, i32* %z2, align 4, !dbg !127
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !137, metadata !67), !dbg !138
  %24 = load i32, i32* %i, align 4, !dbg !139
  %add29 = add nsw i32 %24, 4, !dbg !140
  %idxprom30 = sext i32 %add29 to i64, !dbg !141
  %25 = load i16*, i16** %block, align 8, !dbg !141
  %arrayidx31 = getelementptr inbounds i16, i16* %25, i64 %idxprom30, !dbg !141
  %26 = load i16, i16* %arrayidx31, align 2, !dbg !141
  %conv32 = sext i16 %26 to i32, !dbg !141
  %27 = load i32, i32* %i, align 4, !dbg !142
  %add33 = add nsw i32 %27, 12, !dbg !143
  %idxprom34 = sext i32 %add33 to i64, !dbg !144
  %28 = load i16*, i16** %block, align 8, !dbg !144
  %arrayidx35 = getelementptr inbounds i16, i16* %28, i64 %idxprom34, !dbg !144
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !144
  %conv36 = sext i16 %29 to i32, !dbg !144
  %shr37 = ashr i32 %conv36, 1, !dbg !145
  %add38 = add i32 %conv32, %shr37, !dbg !146
  store i32 %add38, i32* %z3, align 4, !dbg !138
  %30 = load i32, i32* %z0, align 4, !dbg !147
  %31 = load i32, i32* %z3, align 4, !dbg !148
  %add39 = add i32 %30, %31, !dbg !149
  %conv40 = trunc i32 %add39 to i16, !dbg !147
  %32 = load i32, i32* %i, align 4, !dbg !150
  %add41 = add nsw i32 %32, 0, !dbg !151
  %idxprom42 = sext i32 %add41 to i64, !dbg !152
  %33 = load i16*, i16** %block, align 8, !dbg !152
  %arrayidx43 = getelementptr inbounds i16, i16* %33, i64 %idxprom42, !dbg !152
  store i16 %conv40, i16* %arrayidx43, align 2, !dbg !153
  %34 = load i32, i32* %z1, align 4, !dbg !154
  %35 = load i32, i32* %z2, align 4, !dbg !155
  %add44 = add i32 %34, %35, !dbg !156
  %conv45 = trunc i32 %add44 to i16, !dbg !154
  %36 = load i32, i32* %i, align 4, !dbg !157
  %add46 = add nsw i32 %36, 4, !dbg !158
  %idxprom47 = sext i32 %add46 to i64, !dbg !159
  %37 = load i16*, i16** %block, align 8, !dbg !159
  %arrayidx48 = getelementptr inbounds i16, i16* %37, i64 %idxprom47, !dbg !159
  store i16 %conv45, i16* %arrayidx48, align 2, !dbg !160
  %38 = load i32, i32* %z1, align 4, !dbg !161
  %39 = load i32, i32* %z2, align 4, !dbg !162
  %sub49 = sub i32 %38, %39, !dbg !163
  %conv50 = trunc i32 %sub49 to i16, !dbg !161
  %40 = load i32, i32* %i, align 4, !dbg !164
  %add51 = add nsw i32 %40, 8, !dbg !165
  %idxprom52 = sext i32 %add51 to i64, !dbg !166
  %41 = load i16*, i16** %block, align 8, !dbg !166
  %arrayidx53 = getelementptr inbounds i16, i16* %41, i64 %idxprom52, !dbg !166
  store i16 %conv50, i16* %arrayidx53, align 2, !dbg !167
  %42 = load i32, i32* %z0, align 4, !dbg !168
  %43 = load i32, i32* %z3, align 4, !dbg !169
  %sub54 = sub i32 %42, %43, !dbg !170
  %conv55 = trunc i32 %sub54 to i16, !dbg !168
  %44 = load i32, i32* %i, align 4, !dbg !171
  %add56 = add nsw i32 %44, 12, !dbg !172
  %idxprom57 = sext i32 %add56 to i64, !dbg !173
  %45 = load i16*, i16** %block, align 8, !dbg !173
  %arrayidx58 = getelementptr inbounds i16, i16* %45, i64 %idxprom57, !dbg !173
  store i16 %conv55, i16* %arrayidx58, align 2, !dbg !174
  br label %for.inc, !dbg !175

for.inc:                                          ; preds = %for.body
  %46 = load i32, i32* %i, align 4, !dbg !176
  %inc = add nsw i32 %46, 1, !dbg !176
  store i32 %inc, i32* %i, align 4, !dbg !176
  br label %for.cond, !dbg !178, !llvm.loop !179

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !181
  br label %for.cond59, !dbg !182

for.cond59:                                       ; preds = %for.inc163, %for.end
  %47 = load i32, i32* %i, align 4, !dbg !183
  %cmp60 = icmp slt i32 %47, 4, !dbg !185
  br i1 %cmp60, label %for.body62, label %for.end165, !dbg !186

for.body62:                                       ; preds = %for.cond59
  call void @llvm.dbg.declare(metadata i32* %z063, metadata !187, metadata !67), !dbg !188
  %48 = load i32, i32* %i, align 4, !dbg !189
  %mul = mul nsw i32 4, %48, !dbg !190
  %add64 = add nsw i32 0, %mul, !dbg !191
  %idxprom65 = sext i32 %add64 to i64, !dbg !192
  %49 = load i16*, i16** %block, align 8, !dbg !192
  %arrayidx66 = getelementptr inbounds i16, i16* %49, i64 %idxprom65, !dbg !192
  %50 = load i16, i16* %arrayidx66, align 2, !dbg !192
  %conv67 = sext i16 %50 to i32, !dbg !192
  %51 = load i32, i32* %i, align 4, !dbg !193
  %mul68 = mul nsw i32 4, %51, !dbg !194
  %add69 = add nsw i32 2, %mul68, !dbg !195
  %idxprom70 = sext i32 %add69 to i64, !dbg !196
  %52 = load i16*, i16** %block, align 8, !dbg !196
  %arrayidx71 = getelementptr inbounds i16, i16* %52, i64 %idxprom70, !dbg !196
  %53 = load i16, i16* %arrayidx71, align 2, !dbg !196
  %conv72 = sext i16 %53 to i32, !dbg !197
  %add73 = add i32 %conv67, %conv72, !dbg !198
  store i32 %add73, i32* %z063, align 4, !dbg !188
  call void @llvm.dbg.declare(metadata i32* %z174, metadata !199, metadata !67), !dbg !200
  %54 = load i32, i32* %i, align 4, !dbg !201
  %mul75 = mul nsw i32 4, %54, !dbg !202
  %add76 = add nsw i32 0, %mul75, !dbg !203
  %idxprom77 = sext i32 %add76 to i64, !dbg !204
  %55 = load i16*, i16** %block, align 8, !dbg !204
  %arrayidx78 = getelementptr inbounds i16, i16* %55, i64 %idxprom77, !dbg !204
  %56 = load i16, i16* %arrayidx78, align 2, !dbg !204
  %conv79 = sext i16 %56 to i32, !dbg !204
  %57 = load i32, i32* %i, align 4, !dbg !205
  %mul80 = mul nsw i32 4, %57, !dbg !206
  %add81 = add nsw i32 2, %mul80, !dbg !207
  %idxprom82 = sext i32 %add81 to i64, !dbg !208
  %58 = load i16*, i16** %block, align 8, !dbg !208
  %arrayidx83 = getelementptr inbounds i16, i16* %58, i64 %idxprom82, !dbg !208
  %59 = load i16, i16* %arrayidx83, align 2, !dbg !208
  %conv84 = sext i16 %59 to i32, !dbg !209
  %sub85 = sub i32 %conv79, %conv84, !dbg !210
  store i32 %sub85, i32* %z174, align 4, !dbg !200
  call void @llvm.dbg.declare(metadata i32* %z286, metadata !211, metadata !67), !dbg !212
  %60 = load i32, i32* %i, align 4, !dbg !213
  %mul87 = mul nsw i32 4, %60, !dbg !214
  %add88 = add nsw i32 1, %mul87, !dbg !215
  %idxprom89 = sext i32 %add88 to i64, !dbg !216
  %61 = load i16*, i16** %block, align 8, !dbg !216
  %arrayidx90 = getelementptr inbounds i16, i16* %61, i64 %idxprom89, !dbg !216
  %62 = load i16, i16* %arrayidx90, align 2, !dbg !216
  %conv91 = sext i16 %62 to i32, !dbg !216
  %shr92 = ashr i32 %conv91, 1, !dbg !217
  %63 = load i32, i32* %i, align 4, !dbg !218
  %mul93 = mul nsw i32 4, %63, !dbg !219
  %add94 = add nsw i32 3, %mul93, !dbg !220
  %idxprom95 = sext i32 %add94 to i64, !dbg !221
  %64 = load i16*, i16** %block, align 8, !dbg !221
  %arrayidx96 = getelementptr inbounds i16, i16* %64, i64 %idxprom95, !dbg !221
  %65 = load i16, i16* %arrayidx96, align 2, !dbg !221
  %conv97 = sext i16 %65 to i32, !dbg !222
  %sub98 = sub i32 %shr92, %conv97, !dbg !223
  store i32 %sub98, i32* %z286, align 4, !dbg !212
  call void @llvm.dbg.declare(metadata i32* %z399, metadata !224, metadata !67), !dbg !225
  %66 = load i32, i32* %i, align 4, !dbg !226
  %mul100 = mul nsw i32 4, %66, !dbg !227
  %add101 = add nsw i32 1, %mul100, !dbg !228
  %idxprom102 = sext i32 %add101 to i64, !dbg !229
  %67 = load i16*, i16** %block, align 8, !dbg !229
  %arrayidx103 = getelementptr inbounds i16, i16* %67, i64 %idxprom102, !dbg !229
  %68 = load i16, i16* %arrayidx103, align 2, !dbg !229
  %conv104 = sext i16 %68 to i32, !dbg !229
  %69 = load i32, i32* %i, align 4, !dbg !230
  %mul105 = mul nsw i32 4, %69, !dbg !231
  %add106 = add nsw i32 3, %mul105, !dbg !232
  %idxprom107 = sext i32 %add106 to i64, !dbg !233
  %70 = load i16*, i16** %block, align 8, !dbg !233
  %arrayidx108 = getelementptr inbounds i16, i16* %70, i64 %idxprom107, !dbg !233
  %71 = load i16, i16* %arrayidx108, align 2, !dbg !233
  %conv109 = sext i16 %71 to i32, !dbg !233
  %shr110 = ashr i32 %conv109, 1, !dbg !234
  %add111 = add i32 %conv104, %shr110, !dbg !235
  store i32 %add111, i32* %z399, align 4, !dbg !225
  %72 = load i32, i32* %i, align 4, !dbg !236
  %73 = load i32, i32* %stride.addr, align 4, !dbg !237
  %mul112 = mul nsw i32 0, %73, !dbg !238
  %add113 = add nsw i32 %72, %mul112, !dbg !239
  %idxprom114 = sext i32 %add113 to i64, !dbg !240
  %74 = load i8*, i8** %dst, align 8, !dbg !240
  %arrayidx115 = getelementptr inbounds i8, i8* %74, i64 %idxprom114, !dbg !240
  %75 = load i8, i8* %arrayidx115, align 1, !dbg !240
  %conv116 = zext i8 %75 to i32, !dbg !240
  %76 = load i32, i32* %z063, align 4, !dbg !241
  %77 = load i32, i32* %z399, align 4, !dbg !242
  %add117 = add i32 %76, %77, !dbg !243
  %shr118 = ashr i32 %add117, 6, !dbg !244
  %add119 = add nsw i32 %conv116, %shr118, !dbg !245
  store i32 %add119, i32* %a.addr.i, align 4, !dbg !246
  %78 = load i32, i32* %a.addr.i, align 4, !dbg !247
  %and.i = and i32 %78, -256, !dbg !249
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !249
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !250

if.then.i:                                        ; preds = %for.body62
  %79 = load i32, i32* %a.addr.i, align 4, !dbg !251
  %neg.i = xor i32 %79, -1, !dbg !253
  %shr.i = ashr i32 %neg.i, 31, !dbg !254
  %conv.i = trunc i32 %shr.i to i8, !dbg !255
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !256
  br label %av_clip_uint8_c.exit, !dbg !256

if.else.i:                                        ; preds = %for.body62
  %80 = load i32, i32* %a.addr.i, align 4, !dbg !257
  %conv1.i = trunc i32 %80 to i8, !dbg !257
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !258
  br label %av_clip_uint8_c.exit, !dbg !258

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %81 = load i8, i8* %retval.i, align 1, !dbg !259
  %82 = load i32, i32* %i, align 4, !dbg !260
  %83 = load i32, i32* %stride.addr, align 4, !dbg !261
  %mul120 = mul nsw i32 0, %83, !dbg !262
  %add121 = add nsw i32 %82, %mul120, !dbg !263
  %idxprom122 = sext i32 %add121 to i64, !dbg !264
  %84 = load i8*, i8** %dst, align 8, !dbg !264
  %arrayidx123 = getelementptr inbounds i8, i8* %84, i64 %idxprom122, !dbg !264
  store i8 %81, i8* %arrayidx123, align 1, !dbg !265
  %85 = load i32, i32* %i, align 4, !dbg !266
  %86 = load i32, i32* %stride.addr, align 4, !dbg !267
  %mul124 = mul nsw i32 1, %86, !dbg !268
  %add125 = add nsw i32 %85, %mul124, !dbg !269
  %idxprom126 = sext i32 %add125 to i64, !dbg !270
  %87 = load i8*, i8** %dst, align 8, !dbg !270
  %arrayidx127 = getelementptr inbounds i8, i8* %87, i64 %idxprom126, !dbg !270
  %88 = load i8, i8* %arrayidx127, align 1, !dbg !270
  %conv128 = zext i8 %88 to i32, !dbg !270
  %89 = load i32, i32* %z174, align 4, !dbg !271
  %90 = load i32, i32* %z286, align 4, !dbg !272
  %add129 = add i32 %89, %90, !dbg !273
  %shr130 = ashr i32 %add129, 6, !dbg !274
  %add131 = add nsw i32 %conv128, %shr130, !dbg !275
  store i32 %add131, i32* %a.addr.i189, align 4, !dbg !276
  %91 = load i32, i32* %a.addr.i189, align 4, !dbg !277
  %and.i190 = and i32 %91, -256, !dbg !278
  %tobool.i191 = icmp ne i32 %and.i190, 0, !dbg !278
  br i1 %tobool.i191, label %if.then.i195, label %if.else.i197, !dbg !279

if.then.i195:                                     ; preds = %av_clip_uint8_c.exit
  %92 = load i32, i32* %a.addr.i189, align 4, !dbg !280
  %neg.i192 = xor i32 %92, -1, !dbg !281
  %shr.i193 = ashr i32 %neg.i192, 31, !dbg !282
  %conv.i194 = trunc i32 %shr.i193 to i8, !dbg !283
  store i8 %conv.i194, i8* %retval.i188, align 1, !dbg !284
  br label %av_clip_uint8_c.exit198, !dbg !284

if.else.i197:                                     ; preds = %av_clip_uint8_c.exit
  %93 = load i32, i32* %a.addr.i189, align 4, !dbg !285
  %conv1.i196 = trunc i32 %93 to i8, !dbg !285
  store i8 %conv1.i196, i8* %retval.i188, align 1, !dbg !286
  br label %av_clip_uint8_c.exit198, !dbg !286

av_clip_uint8_c.exit198:                          ; preds = %if.then.i195, %if.else.i197
  %94 = load i8, i8* %retval.i188, align 1, !dbg !287
  %95 = load i32, i32* %i, align 4, !dbg !288
  %96 = load i32, i32* %stride.addr, align 4, !dbg !289
  %mul133 = mul nsw i32 1, %96, !dbg !290
  %add134 = add nsw i32 %95, %mul133, !dbg !291
  %idxprom135 = sext i32 %add134 to i64, !dbg !292
  %97 = load i8*, i8** %dst, align 8, !dbg !292
  %arrayidx136 = getelementptr inbounds i8, i8* %97, i64 %idxprom135, !dbg !292
  store i8 %94, i8* %arrayidx136, align 1, !dbg !293
  %98 = load i32, i32* %i, align 4, !dbg !294
  %99 = load i32, i32* %stride.addr, align 4, !dbg !295
  %mul137 = mul nsw i32 2, %99, !dbg !296
  %add138 = add nsw i32 %98, %mul137, !dbg !297
  %idxprom139 = sext i32 %add138 to i64, !dbg !298
  %100 = load i8*, i8** %dst, align 8, !dbg !298
  %arrayidx140 = getelementptr inbounds i8, i8* %100, i64 %idxprom139, !dbg !298
  %101 = load i8, i8* %arrayidx140, align 1, !dbg !298
  %conv141 = zext i8 %101 to i32, !dbg !298
  %102 = load i32, i32* %z174, align 4, !dbg !299
  %103 = load i32, i32* %z286, align 4, !dbg !300
  %sub142 = sub i32 %102, %103, !dbg !301
  %shr143 = ashr i32 %sub142, 6, !dbg !302
  %add144 = add nsw i32 %conv141, %shr143, !dbg !303
  store i32 %add144, i32* %a.addr.i178, align 4, !dbg !304
  %104 = load i32, i32* %a.addr.i178, align 4, !dbg !305
  %and.i179 = and i32 %104, -256, !dbg !306
  %tobool.i180 = icmp ne i32 %and.i179, 0, !dbg !306
  br i1 %tobool.i180, label %if.then.i184, label %if.else.i186, !dbg !307

if.then.i184:                                     ; preds = %av_clip_uint8_c.exit198
  %105 = load i32, i32* %a.addr.i178, align 4, !dbg !308
  %neg.i181 = xor i32 %105, -1, !dbg !309
  %shr.i182 = ashr i32 %neg.i181, 31, !dbg !310
  %conv.i183 = trunc i32 %shr.i182 to i8, !dbg !311
  store i8 %conv.i183, i8* %retval.i177, align 1, !dbg !312
  br label %av_clip_uint8_c.exit187, !dbg !312

if.else.i186:                                     ; preds = %av_clip_uint8_c.exit198
  %106 = load i32, i32* %a.addr.i178, align 4, !dbg !313
  %conv1.i185 = trunc i32 %106 to i8, !dbg !313
  store i8 %conv1.i185, i8* %retval.i177, align 1, !dbg !314
  br label %av_clip_uint8_c.exit187, !dbg !314

av_clip_uint8_c.exit187:                          ; preds = %if.then.i184, %if.else.i186
  %107 = load i8, i8* %retval.i177, align 1, !dbg !315
  %108 = load i32, i32* %i, align 4, !dbg !316
  %109 = load i32, i32* %stride.addr, align 4, !dbg !317
  %mul146 = mul nsw i32 2, %109, !dbg !318
  %add147 = add nsw i32 %108, %mul146, !dbg !319
  %idxprom148 = sext i32 %add147 to i64, !dbg !320
  %110 = load i8*, i8** %dst, align 8, !dbg !320
  %arrayidx149 = getelementptr inbounds i8, i8* %110, i64 %idxprom148, !dbg !320
  store i8 %107, i8* %arrayidx149, align 1, !dbg !321
  %111 = load i32, i32* %i, align 4, !dbg !322
  %112 = load i32, i32* %stride.addr, align 4, !dbg !323
  %mul150 = mul nsw i32 3, %112, !dbg !324
  %add151 = add nsw i32 %111, %mul150, !dbg !325
  %idxprom152 = sext i32 %add151 to i64, !dbg !326
  %113 = load i8*, i8** %dst, align 8, !dbg !326
  %arrayidx153 = getelementptr inbounds i8, i8* %113, i64 %idxprom152, !dbg !326
  %114 = load i8, i8* %arrayidx153, align 1, !dbg !326
  %conv154 = zext i8 %114 to i32, !dbg !326
  %115 = load i32, i32* %z063, align 4, !dbg !327
  %116 = load i32, i32* %z399, align 4, !dbg !328
  %sub155 = sub i32 %115, %116, !dbg !329
  %shr156 = ashr i32 %sub155, 6, !dbg !330
  %add157 = add nsw i32 %conv154, %shr156, !dbg !331
  store i32 %add157, i32* %a.addr.i167, align 4, !dbg !332
  %117 = load i32, i32* %a.addr.i167, align 4, !dbg !333
  %and.i168 = and i32 %117, -256, !dbg !334
  %tobool.i169 = icmp ne i32 %and.i168, 0, !dbg !334
  br i1 %tobool.i169, label %if.then.i173, label %if.else.i175, !dbg !335

if.then.i173:                                     ; preds = %av_clip_uint8_c.exit187
  %118 = load i32, i32* %a.addr.i167, align 4, !dbg !336
  %neg.i170 = xor i32 %118, -1, !dbg !337
  %shr.i171 = ashr i32 %neg.i170, 31, !dbg !338
  %conv.i172 = trunc i32 %shr.i171 to i8, !dbg !339
  store i8 %conv.i172, i8* %retval.i166, align 1, !dbg !340
  br label %av_clip_uint8_c.exit176, !dbg !340

if.else.i175:                                     ; preds = %av_clip_uint8_c.exit187
  %119 = load i32, i32* %a.addr.i167, align 4, !dbg !341
  %conv1.i174 = trunc i32 %119 to i8, !dbg !341
  store i8 %conv1.i174, i8* %retval.i166, align 1, !dbg !342
  br label %av_clip_uint8_c.exit176, !dbg !342

av_clip_uint8_c.exit176:                          ; preds = %if.then.i173, %if.else.i175
  %120 = load i8, i8* %retval.i166, align 1, !dbg !343
  %121 = load i32, i32* %i, align 4, !dbg !344
  %122 = load i32, i32* %stride.addr, align 4, !dbg !345
  %mul159 = mul nsw i32 3, %122, !dbg !346
  %add160 = add nsw i32 %121, %mul159, !dbg !347
  %idxprom161 = sext i32 %add160 to i64, !dbg !348
  %123 = load i8*, i8** %dst, align 8, !dbg !348
  %arrayidx162 = getelementptr inbounds i8, i8* %123, i64 %idxprom161, !dbg !348
  store i8 %120, i8* %arrayidx162, align 1, !dbg !349
  br label %for.inc163, !dbg !350

for.inc163:                                       ; preds = %av_clip_uint8_c.exit176
  %124 = load i32, i32* %i, align 4, !dbg !351
  %inc164 = add nsw i32 %124, 1, !dbg !351
  store i32 %inc164, i32* %i, align 4, !dbg !351
  br label %for.cond59, !dbg !353, !llvm.loop !354

for.end165:                                       ; preds = %for.cond59
  %125 = load i16*, i16** %block, align 8, !dbg !356
  %126 = bitcast i16* %125 to i8*, !dbg !357
  call void @llvm.memset.p0i8.i64(i8* %126, i8 0, i64 32, i32 2, i1 false), !dbg !357
  ret void, !dbg !358
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_add_8_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !359 {
entry:
  %retval.i520 = alloca i8, align 1
  %a.addr.i521 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i521, metadata !62, metadata !67), !dbg !360
  %retval.i509 = alloca i8, align 1
  %a.addr.i510 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i510, metadata !62, metadata !67), !dbg !365
  %retval.i498 = alloca i8, align 1
  %a.addr.i499 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i499, metadata !62, metadata !67), !dbg !367
  %retval.i487 = alloca i8, align 1
  %a.addr.i488 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i488, metadata !62, metadata !67), !dbg !369
  %retval.i476 = alloca i8, align 1
  %a.addr.i477 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i477, metadata !62, metadata !67), !dbg !371
  %retval.i465 = alloca i8, align 1
  %a.addr.i466 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i466, metadata !62, metadata !67), !dbg !373
  %retval.i454 = alloca i8, align 1
  %a.addr.i455 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i455, metadata !62, metadata !67), !dbg !375
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !62, metadata !67), !dbg !377
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i8*, align 8
  %block = alloca i16*, align 8
  %a0 = alloca i32, align 4
  %a2 = alloca i32, align 4
  %a4 = alloca i32, align 4
  %a6 = alloca i32, align 4
  %b0 = alloca i32, align 4
  %b2 = alloca i32, align 4
  %b4 = alloca i32, align 4
  %b6 = alloca i32, align 4
  %a1 = alloca i32, align 4
  %a3 = alloca i32, align 4
  %a5 = alloca i32, align 4
  %a7 = alloca i32, align 4
  %b1 = alloca i32, align 4
  %b3 = alloca i32, align 4
  %b5 = alloca i32, align 4
  %b7 = alloca i32, align 4
  %a0177 = alloca i32, align 4
  %a2188 = alloca i32, align 4
  %a4200 = alloca i32, align 4
  %a6213 = alloca i32, align 4
  %b0226 = alloca i32, align 4
  %b2228 = alloca i32, align 4
  %b4230 = alloca i32, align 4
  %b6232 = alloca i32, align 4
  %a1234 = alloca i32, align 4
  %a3260 = alloca i32, align 4
  %a5285 = alloca i32, align 4
  %a7311 = alloca i32, align 4
  %b1336 = alloca i32, align 4
  %b3339 = alloca i32, align 4
  %b5342 = alloca i32, align 4
  %b7345 = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !379, metadata !67), !dbg !380
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !381, metadata !67), !dbg !382
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !383, metadata !67), !dbg !384
  call void @llvm.dbg.declare(metadata i32* %i, metadata !385, metadata !67), !dbg !386
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !387, metadata !67), !dbg !388
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !389
  store i8* %0, i8** %dst, align 8, !dbg !388
  call void @llvm.dbg.declare(metadata i16** %block, metadata !390, metadata !67), !dbg !391
  %1 = load i16*, i16** %_block.addr, align 8, !dbg !392
  store i16* %1, i16** %block, align 8, !dbg !391
  %2 = load i32, i32* %stride.addr, align 4, !dbg !393
  %shr = ashr i32 %2, 0, !dbg !393
  store i32 %shr, i32* %stride.addr, align 4, !dbg !393
  %3 = load i16*, i16** %block, align 8, !dbg !394
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 0, !dbg !394
  %4 = load i16, i16* %arrayidx, align 2, !dbg !395
  %conv = sext i16 %4 to i32, !dbg !395
  %add = add nsw i32 %conv, 32, !dbg !395
  %conv1 = trunc i32 %add to i16, !dbg !395
  store i16 %conv1, i16* %arrayidx, align 2, !dbg !395
  store i32 0, i32* %i, align 4, !dbg !396
  br label %for.cond, !dbg !398

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !399
  %cmp = icmp slt i32 %5, 8, !dbg !402
  br i1 %cmp, label %for.body, label %for.end, !dbg !403

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %a0, metadata !404, metadata !67), !dbg !406
  %6 = load i32, i32* %i, align 4, !dbg !407
  %add3 = add nsw i32 %6, 0, !dbg !408
  %idxprom = sext i32 %add3 to i64, !dbg !409
  %7 = load i16*, i16** %block, align 8, !dbg !409
  %arrayidx4 = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !409
  %8 = load i16, i16* %arrayidx4, align 2, !dbg !409
  %conv5 = sext i16 %8 to i32, !dbg !409
  %9 = load i32, i32* %i, align 4, !dbg !410
  %add6 = add nsw i32 %9, 32, !dbg !411
  %idxprom7 = sext i32 %add6 to i64, !dbg !412
  %10 = load i16*, i16** %block, align 8, !dbg !412
  %arrayidx8 = getelementptr inbounds i16, i16* %10, i64 %idxprom7, !dbg !412
  %11 = load i16, i16* %arrayidx8, align 2, !dbg !412
  %conv9 = sext i16 %11 to i32, !dbg !413
  %add10 = add i32 %conv5, %conv9, !dbg !414
  store i32 %add10, i32* %a0, align 4, !dbg !406
  call void @llvm.dbg.declare(metadata i32* %a2, metadata !415, metadata !67), !dbg !416
  %12 = load i32, i32* %i, align 4, !dbg !417
  %add11 = add nsw i32 %12, 0, !dbg !418
  %idxprom12 = sext i32 %add11 to i64, !dbg !419
  %13 = load i16*, i16** %block, align 8, !dbg !419
  %arrayidx13 = getelementptr inbounds i16, i16* %13, i64 %idxprom12, !dbg !419
  %14 = load i16, i16* %arrayidx13, align 2, !dbg !419
  %conv14 = sext i16 %14 to i32, !dbg !419
  %15 = load i32, i32* %i, align 4, !dbg !420
  %add15 = add nsw i32 %15, 32, !dbg !421
  %idxprom16 = sext i32 %add15 to i64, !dbg !422
  %16 = load i16*, i16** %block, align 8, !dbg !422
  %arrayidx17 = getelementptr inbounds i16, i16* %16, i64 %idxprom16, !dbg !422
  %17 = load i16, i16* %arrayidx17, align 2, !dbg !422
  %conv18 = sext i16 %17 to i32, !dbg !423
  %sub = sub i32 %conv14, %conv18, !dbg !424
  store i32 %sub, i32* %a2, align 4, !dbg !416
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !425, metadata !67), !dbg !426
  %18 = load i32, i32* %i, align 4, !dbg !427
  %add19 = add nsw i32 %18, 16, !dbg !428
  %idxprom20 = sext i32 %add19 to i64, !dbg !429
  %19 = load i16*, i16** %block, align 8, !dbg !429
  %arrayidx21 = getelementptr inbounds i16, i16* %19, i64 %idxprom20, !dbg !429
  %20 = load i16, i16* %arrayidx21, align 2, !dbg !429
  %conv22 = sext i16 %20 to i32, !dbg !429
  %shr23 = ashr i32 %conv22, 1, !dbg !430
  %21 = load i32, i32* %i, align 4, !dbg !431
  %add24 = add nsw i32 %21, 48, !dbg !432
  %idxprom25 = sext i32 %add24 to i64, !dbg !433
  %22 = load i16*, i16** %block, align 8, !dbg !433
  %arrayidx26 = getelementptr inbounds i16, i16* %22, i64 %idxprom25, !dbg !433
  %23 = load i16, i16* %arrayidx26, align 2, !dbg !433
  %conv27 = sext i16 %23 to i32, !dbg !434
  %sub28 = sub i32 %shr23, %conv27, !dbg !435
  store i32 %sub28, i32* %a4, align 4, !dbg !426
  call void @llvm.dbg.declare(metadata i32* %a6, metadata !436, metadata !67), !dbg !437
  %24 = load i32, i32* %i, align 4, !dbg !438
  %add29 = add nsw i32 %24, 48, !dbg !439
  %idxprom30 = sext i32 %add29 to i64, !dbg !440
  %25 = load i16*, i16** %block, align 8, !dbg !440
  %arrayidx31 = getelementptr inbounds i16, i16* %25, i64 %idxprom30, !dbg !440
  %26 = load i16, i16* %arrayidx31, align 2, !dbg !440
  %conv32 = sext i16 %26 to i32, !dbg !440
  %shr33 = ashr i32 %conv32, 1, !dbg !441
  %27 = load i32, i32* %i, align 4, !dbg !442
  %add34 = add nsw i32 %27, 16, !dbg !443
  %idxprom35 = sext i32 %add34 to i64, !dbg !444
  %28 = load i16*, i16** %block, align 8, !dbg !444
  %arrayidx36 = getelementptr inbounds i16, i16* %28, i64 %idxprom35, !dbg !444
  %29 = load i16, i16* %arrayidx36, align 2, !dbg !444
  %conv37 = sext i16 %29 to i32, !dbg !445
  %add38 = add i32 %shr33, %conv37, !dbg !446
  store i32 %add38, i32* %a6, align 4, !dbg !437
  call void @llvm.dbg.declare(metadata i32* %b0, metadata !447, metadata !67), !dbg !448
  %30 = load i32, i32* %a0, align 4, !dbg !449
  %31 = load i32, i32* %a6, align 4, !dbg !450
  %add39 = add i32 %30, %31, !dbg !451
  store i32 %add39, i32* %b0, align 4, !dbg !448
  call void @llvm.dbg.declare(metadata i32* %b2, metadata !452, metadata !67), !dbg !453
  %32 = load i32, i32* %a2, align 4, !dbg !454
  %33 = load i32, i32* %a4, align 4, !dbg !455
  %add40 = add i32 %32, %33, !dbg !456
  store i32 %add40, i32* %b2, align 4, !dbg !453
  call void @llvm.dbg.declare(metadata i32* %b4, metadata !457, metadata !67), !dbg !458
  %34 = load i32, i32* %a2, align 4, !dbg !459
  %35 = load i32, i32* %a4, align 4, !dbg !460
  %sub41 = sub i32 %34, %35, !dbg !461
  store i32 %sub41, i32* %b4, align 4, !dbg !458
  call void @llvm.dbg.declare(metadata i32* %b6, metadata !462, metadata !67), !dbg !463
  %36 = load i32, i32* %a0, align 4, !dbg !464
  %37 = load i32, i32* %a6, align 4, !dbg !465
  %sub42 = sub i32 %36, %37, !dbg !466
  store i32 %sub42, i32* %b6, align 4, !dbg !463
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !467, metadata !67), !dbg !469
  %38 = load i32, i32* %i, align 4, !dbg !470
  %add43 = add nsw i32 %38, 24, !dbg !471
  %idxprom44 = sext i32 %add43 to i64, !dbg !472
  %39 = load i16*, i16** %block, align 8, !dbg !472
  %arrayidx45 = getelementptr inbounds i16, i16* %39, i64 %idxprom44, !dbg !472
  %40 = load i16, i16* %arrayidx45, align 2, !dbg !472
  %conv46 = sext i16 %40 to i32, !dbg !472
  %sub47 = sub nsw i32 0, %conv46, !dbg !473
  %41 = load i32, i32* %i, align 4, !dbg !474
  %add48 = add nsw i32 %41, 40, !dbg !475
  %idxprom49 = sext i32 %add48 to i64, !dbg !476
  %42 = load i16*, i16** %block, align 8, !dbg !476
  %arrayidx50 = getelementptr inbounds i16, i16* %42, i64 %idxprom49, !dbg !476
  %43 = load i16, i16* %arrayidx50, align 2, !dbg !476
  %conv51 = sext i16 %43 to i32, !dbg !477
  %add52 = add i32 %sub47, %conv51, !dbg !478
  %44 = load i32, i32* %i, align 4, !dbg !479
  %add53 = add nsw i32 %44, 56, !dbg !480
  %idxprom54 = sext i32 %add53 to i64, !dbg !481
  %45 = load i16*, i16** %block, align 8, !dbg !481
  %arrayidx55 = getelementptr inbounds i16, i16* %45, i64 %idxprom54, !dbg !481
  %46 = load i16, i16* %arrayidx55, align 2, !dbg !481
  %conv56 = sext i16 %46 to i32, !dbg !481
  %sub57 = sub i32 %add52, %conv56, !dbg !482
  %47 = load i32, i32* %i, align 4, !dbg !483
  %add58 = add nsw i32 %47, 56, !dbg !484
  %idxprom59 = sext i32 %add58 to i64, !dbg !485
  %48 = load i16*, i16** %block, align 8, !dbg !485
  %arrayidx60 = getelementptr inbounds i16, i16* %48, i64 %idxprom59, !dbg !485
  %49 = load i16, i16* %arrayidx60, align 2, !dbg !485
  %conv61 = sext i16 %49 to i32, !dbg !485
  %shr62 = ashr i32 %conv61, 1, !dbg !486
  %sub63 = sub i32 %sub57, %shr62, !dbg !487
  store i32 %sub63, i32* %a1, align 4, !dbg !469
  call void @llvm.dbg.declare(metadata i32* %a3, metadata !488, metadata !67), !dbg !489
  %50 = load i32, i32* %i, align 4, !dbg !490
  %add64 = add nsw i32 %50, 8, !dbg !491
  %idxprom65 = sext i32 %add64 to i64, !dbg !492
  %51 = load i16*, i16** %block, align 8, !dbg !492
  %arrayidx66 = getelementptr inbounds i16, i16* %51, i64 %idxprom65, !dbg !492
  %52 = load i16, i16* %arrayidx66, align 2, !dbg !492
  %conv67 = sext i16 %52 to i32, !dbg !492
  %53 = load i32, i32* %i, align 4, !dbg !493
  %add68 = add nsw i32 %53, 56, !dbg !494
  %idxprom69 = sext i32 %add68 to i64, !dbg !495
  %54 = load i16*, i16** %block, align 8, !dbg !495
  %arrayidx70 = getelementptr inbounds i16, i16* %54, i64 %idxprom69, !dbg !495
  %55 = load i16, i16* %arrayidx70, align 2, !dbg !495
  %conv71 = sext i16 %55 to i32, !dbg !496
  %add72 = add i32 %conv67, %conv71, !dbg !497
  %56 = load i32, i32* %i, align 4, !dbg !498
  %add73 = add nsw i32 %56, 24, !dbg !499
  %idxprom74 = sext i32 %add73 to i64, !dbg !500
  %57 = load i16*, i16** %block, align 8, !dbg !500
  %arrayidx75 = getelementptr inbounds i16, i16* %57, i64 %idxprom74, !dbg !500
  %58 = load i16, i16* %arrayidx75, align 2, !dbg !500
  %conv76 = sext i16 %58 to i32, !dbg !500
  %sub77 = sub i32 %add72, %conv76, !dbg !501
  %59 = load i32, i32* %i, align 4, !dbg !502
  %add78 = add nsw i32 %59, 24, !dbg !503
  %idxprom79 = sext i32 %add78 to i64, !dbg !504
  %60 = load i16*, i16** %block, align 8, !dbg !504
  %arrayidx80 = getelementptr inbounds i16, i16* %60, i64 %idxprom79, !dbg !504
  %61 = load i16, i16* %arrayidx80, align 2, !dbg !504
  %conv81 = sext i16 %61 to i32, !dbg !504
  %shr82 = ashr i32 %conv81, 1, !dbg !505
  %sub83 = sub i32 %sub77, %shr82, !dbg !506
  store i32 %sub83, i32* %a3, align 4, !dbg !489
  call void @llvm.dbg.declare(metadata i32* %a5, metadata !507, metadata !67), !dbg !508
  %62 = load i32, i32* %i, align 4, !dbg !509
  %add84 = add nsw i32 %62, 8, !dbg !510
  %idxprom85 = sext i32 %add84 to i64, !dbg !511
  %63 = load i16*, i16** %block, align 8, !dbg !511
  %arrayidx86 = getelementptr inbounds i16, i16* %63, i64 %idxprom85, !dbg !511
  %64 = load i16, i16* %arrayidx86, align 2, !dbg !511
  %conv87 = sext i16 %64 to i32, !dbg !511
  %sub88 = sub nsw i32 0, %conv87, !dbg !512
  %65 = load i32, i32* %i, align 4, !dbg !513
  %add89 = add nsw i32 %65, 56, !dbg !514
  %idxprom90 = sext i32 %add89 to i64, !dbg !515
  %66 = load i16*, i16** %block, align 8, !dbg !515
  %arrayidx91 = getelementptr inbounds i16, i16* %66, i64 %idxprom90, !dbg !515
  %67 = load i16, i16* %arrayidx91, align 2, !dbg !515
  %conv92 = sext i16 %67 to i32, !dbg !516
  %add93 = add i32 %sub88, %conv92, !dbg !517
  %68 = load i32, i32* %i, align 4, !dbg !518
  %add94 = add nsw i32 %68, 40, !dbg !519
  %idxprom95 = sext i32 %add94 to i64, !dbg !520
  %69 = load i16*, i16** %block, align 8, !dbg !520
  %arrayidx96 = getelementptr inbounds i16, i16* %69, i64 %idxprom95, !dbg !520
  %70 = load i16, i16* %arrayidx96, align 2, !dbg !520
  %conv97 = sext i16 %70 to i32, !dbg !520
  %add98 = add i32 %add93, %conv97, !dbg !521
  %71 = load i32, i32* %i, align 4, !dbg !522
  %add99 = add nsw i32 %71, 40, !dbg !523
  %idxprom100 = sext i32 %add99 to i64, !dbg !524
  %72 = load i16*, i16** %block, align 8, !dbg !524
  %arrayidx101 = getelementptr inbounds i16, i16* %72, i64 %idxprom100, !dbg !524
  %73 = load i16, i16* %arrayidx101, align 2, !dbg !524
  %conv102 = sext i16 %73 to i32, !dbg !524
  %shr103 = ashr i32 %conv102, 1, !dbg !525
  %add104 = add i32 %add98, %shr103, !dbg !526
  store i32 %add104, i32* %a5, align 4, !dbg !508
  call void @llvm.dbg.declare(metadata i32* %a7, metadata !527, metadata !67), !dbg !528
  %74 = load i32, i32* %i, align 4, !dbg !529
  %add105 = add nsw i32 %74, 24, !dbg !530
  %idxprom106 = sext i32 %add105 to i64, !dbg !531
  %75 = load i16*, i16** %block, align 8, !dbg !531
  %arrayidx107 = getelementptr inbounds i16, i16* %75, i64 %idxprom106, !dbg !531
  %76 = load i16, i16* %arrayidx107, align 2, !dbg !531
  %conv108 = sext i16 %76 to i32, !dbg !531
  %77 = load i32, i32* %i, align 4, !dbg !532
  %add109 = add nsw i32 %77, 40, !dbg !533
  %idxprom110 = sext i32 %add109 to i64, !dbg !534
  %78 = load i16*, i16** %block, align 8, !dbg !534
  %arrayidx111 = getelementptr inbounds i16, i16* %78, i64 %idxprom110, !dbg !534
  %79 = load i16, i16* %arrayidx111, align 2, !dbg !534
  %conv112 = sext i16 %79 to i32, !dbg !535
  %add113 = add i32 %conv108, %conv112, !dbg !536
  %80 = load i32, i32* %i, align 4, !dbg !537
  %add114 = add nsw i32 %80, 8, !dbg !538
  %idxprom115 = sext i32 %add114 to i64, !dbg !539
  %81 = load i16*, i16** %block, align 8, !dbg !539
  %arrayidx116 = getelementptr inbounds i16, i16* %81, i64 %idxprom115, !dbg !539
  %82 = load i16, i16* %arrayidx116, align 2, !dbg !539
  %conv117 = sext i16 %82 to i32, !dbg !539
  %add118 = add i32 %add113, %conv117, !dbg !540
  %83 = load i32, i32* %i, align 4, !dbg !541
  %add119 = add nsw i32 %83, 8, !dbg !542
  %idxprom120 = sext i32 %add119 to i64, !dbg !543
  %84 = load i16*, i16** %block, align 8, !dbg !543
  %arrayidx121 = getelementptr inbounds i16, i16* %84, i64 %idxprom120, !dbg !543
  %85 = load i16, i16* %arrayidx121, align 2, !dbg !543
  %conv122 = sext i16 %85 to i32, !dbg !543
  %shr123 = ashr i32 %conv122, 1, !dbg !544
  %add124 = add i32 %add118, %shr123, !dbg !545
  store i32 %add124, i32* %a7, align 4, !dbg !528
  call void @llvm.dbg.declare(metadata i32* %b1, metadata !546, metadata !67), !dbg !547
  %86 = load i32, i32* %a7, align 4, !dbg !548
  %shr125 = ashr i32 %86, 2, !dbg !549
  %87 = load i32, i32* %a1, align 4, !dbg !550
  %add126 = add i32 %shr125, %87, !dbg !551
  store i32 %add126, i32* %b1, align 4, !dbg !547
  call void @llvm.dbg.declare(metadata i32* %b3, metadata !552, metadata !67), !dbg !553
  %88 = load i32, i32* %a3, align 4, !dbg !554
  %89 = load i32, i32* %a5, align 4, !dbg !555
  %shr127 = ashr i32 %89, 2, !dbg !556
  %add128 = add i32 %88, %shr127, !dbg !557
  store i32 %add128, i32* %b3, align 4, !dbg !553
  call void @llvm.dbg.declare(metadata i32* %b5, metadata !558, metadata !67), !dbg !559
  %90 = load i32, i32* %a3, align 4, !dbg !560
  %shr129 = ashr i32 %90, 2, !dbg !561
  %91 = load i32, i32* %a5, align 4, !dbg !562
  %sub130 = sub i32 %shr129, %91, !dbg !563
  store i32 %sub130, i32* %b5, align 4, !dbg !559
  call void @llvm.dbg.declare(metadata i32* %b7, metadata !564, metadata !67), !dbg !565
  %92 = load i32, i32* %a7, align 4, !dbg !566
  %93 = load i32, i32* %a1, align 4, !dbg !567
  %shr131 = ashr i32 %93, 2, !dbg !568
  %sub132 = sub i32 %92, %shr131, !dbg !569
  store i32 %sub132, i32* %b7, align 4, !dbg !565
  %94 = load i32, i32* %b0, align 4, !dbg !570
  %95 = load i32, i32* %b7, align 4, !dbg !571
  %add133 = add i32 %94, %95, !dbg !572
  %conv134 = trunc i32 %add133 to i16, !dbg !570
  %96 = load i32, i32* %i, align 4, !dbg !573
  %add135 = add nsw i32 %96, 0, !dbg !574
  %idxprom136 = sext i32 %add135 to i64, !dbg !575
  %97 = load i16*, i16** %block, align 8, !dbg !575
  %arrayidx137 = getelementptr inbounds i16, i16* %97, i64 %idxprom136, !dbg !575
  store i16 %conv134, i16* %arrayidx137, align 2, !dbg !576
  %98 = load i32, i32* %b0, align 4, !dbg !577
  %99 = load i32, i32* %b7, align 4, !dbg !578
  %sub138 = sub i32 %98, %99, !dbg !579
  %conv139 = trunc i32 %sub138 to i16, !dbg !577
  %100 = load i32, i32* %i, align 4, !dbg !580
  %add140 = add nsw i32 %100, 56, !dbg !581
  %idxprom141 = sext i32 %add140 to i64, !dbg !582
  %101 = load i16*, i16** %block, align 8, !dbg !582
  %arrayidx142 = getelementptr inbounds i16, i16* %101, i64 %idxprom141, !dbg !582
  store i16 %conv139, i16* %arrayidx142, align 2, !dbg !583
  %102 = load i32, i32* %b2, align 4, !dbg !584
  %103 = load i32, i32* %b5, align 4, !dbg !585
  %add143 = add i32 %102, %103, !dbg !586
  %conv144 = trunc i32 %add143 to i16, !dbg !584
  %104 = load i32, i32* %i, align 4, !dbg !587
  %add145 = add nsw i32 %104, 8, !dbg !588
  %idxprom146 = sext i32 %add145 to i64, !dbg !589
  %105 = load i16*, i16** %block, align 8, !dbg !589
  %arrayidx147 = getelementptr inbounds i16, i16* %105, i64 %idxprom146, !dbg !589
  store i16 %conv144, i16* %arrayidx147, align 2, !dbg !590
  %106 = load i32, i32* %b2, align 4, !dbg !591
  %107 = load i32, i32* %b5, align 4, !dbg !592
  %sub148 = sub i32 %106, %107, !dbg !593
  %conv149 = trunc i32 %sub148 to i16, !dbg !591
  %108 = load i32, i32* %i, align 4, !dbg !594
  %add150 = add nsw i32 %108, 48, !dbg !595
  %idxprom151 = sext i32 %add150 to i64, !dbg !596
  %109 = load i16*, i16** %block, align 8, !dbg !596
  %arrayidx152 = getelementptr inbounds i16, i16* %109, i64 %idxprom151, !dbg !596
  store i16 %conv149, i16* %arrayidx152, align 2, !dbg !597
  %110 = load i32, i32* %b4, align 4, !dbg !598
  %111 = load i32, i32* %b3, align 4, !dbg !599
  %add153 = add i32 %110, %111, !dbg !600
  %conv154 = trunc i32 %add153 to i16, !dbg !598
  %112 = load i32, i32* %i, align 4, !dbg !601
  %add155 = add nsw i32 %112, 16, !dbg !602
  %idxprom156 = sext i32 %add155 to i64, !dbg !603
  %113 = load i16*, i16** %block, align 8, !dbg !603
  %arrayidx157 = getelementptr inbounds i16, i16* %113, i64 %idxprom156, !dbg !603
  store i16 %conv154, i16* %arrayidx157, align 2, !dbg !604
  %114 = load i32, i32* %b4, align 4, !dbg !605
  %115 = load i32, i32* %b3, align 4, !dbg !606
  %sub158 = sub i32 %114, %115, !dbg !607
  %conv159 = trunc i32 %sub158 to i16, !dbg !605
  %116 = load i32, i32* %i, align 4, !dbg !608
  %add160 = add nsw i32 %116, 40, !dbg !609
  %idxprom161 = sext i32 %add160 to i64, !dbg !610
  %117 = load i16*, i16** %block, align 8, !dbg !610
  %arrayidx162 = getelementptr inbounds i16, i16* %117, i64 %idxprom161, !dbg !610
  store i16 %conv159, i16* %arrayidx162, align 2, !dbg !611
  %118 = load i32, i32* %b6, align 4, !dbg !612
  %119 = load i32, i32* %b1, align 4, !dbg !613
  %add163 = add i32 %118, %119, !dbg !614
  %conv164 = trunc i32 %add163 to i16, !dbg !612
  %120 = load i32, i32* %i, align 4, !dbg !615
  %add165 = add nsw i32 %120, 24, !dbg !616
  %idxprom166 = sext i32 %add165 to i64, !dbg !617
  %121 = load i16*, i16** %block, align 8, !dbg !617
  %arrayidx167 = getelementptr inbounds i16, i16* %121, i64 %idxprom166, !dbg !617
  store i16 %conv164, i16* %arrayidx167, align 2, !dbg !618
  %122 = load i32, i32* %b6, align 4, !dbg !619
  %123 = load i32, i32* %b1, align 4, !dbg !620
  %sub168 = sub i32 %122, %123, !dbg !621
  %conv169 = trunc i32 %sub168 to i16, !dbg !619
  %124 = load i32, i32* %i, align 4, !dbg !622
  %add170 = add nsw i32 %124, 32, !dbg !623
  %idxprom171 = sext i32 %add170 to i64, !dbg !624
  %125 = load i16*, i16** %block, align 8, !dbg !624
  %arrayidx172 = getelementptr inbounds i16, i16* %125, i64 %idxprom171, !dbg !624
  store i16 %conv169, i16* %arrayidx172, align 2, !dbg !625
  br label %for.inc, !dbg !626

for.inc:                                          ; preds = %for.body
  %126 = load i32, i32* %i, align 4, !dbg !627
  %inc = add nsw i32 %126, 1, !dbg !627
  store i32 %inc, i32* %i, align 4, !dbg !627
  br label %for.cond, !dbg !629, !llvm.loop !630

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !632
  br label %for.cond173, !dbg !633

for.cond173:                                      ; preds = %for.inc451, %for.end
  %127 = load i32, i32* %i, align 4, !dbg !634
  %cmp174 = icmp slt i32 %127, 8, !dbg !636
  br i1 %cmp174, label %for.body176, label %for.end453, !dbg !637

for.body176:                                      ; preds = %for.cond173
  call void @llvm.dbg.declare(metadata i32* %a0177, metadata !638, metadata !67), !dbg !639
  %128 = load i32, i32* %i, align 4, !dbg !640
  %mul = mul nsw i32 %128, 8, !dbg !641
  %add178 = add nsw i32 0, %mul, !dbg !642
  %idxprom179 = sext i32 %add178 to i64, !dbg !643
  %129 = load i16*, i16** %block, align 8, !dbg !643
  %arrayidx180 = getelementptr inbounds i16, i16* %129, i64 %idxprom179, !dbg !643
  %130 = load i16, i16* %arrayidx180, align 2, !dbg !643
  %conv181 = sext i16 %130 to i32, !dbg !643
  %131 = load i32, i32* %i, align 4, !dbg !644
  %mul182 = mul nsw i32 %131, 8, !dbg !645
  %add183 = add nsw i32 4, %mul182, !dbg !646
  %idxprom184 = sext i32 %add183 to i64, !dbg !647
  %132 = load i16*, i16** %block, align 8, !dbg !647
  %arrayidx185 = getelementptr inbounds i16, i16* %132, i64 %idxprom184, !dbg !647
  %133 = load i16, i16* %arrayidx185, align 2, !dbg !647
  %conv186 = sext i16 %133 to i32, !dbg !648
  %add187 = add i32 %conv181, %conv186, !dbg !649
  store i32 %add187, i32* %a0177, align 4, !dbg !639
  call void @llvm.dbg.declare(metadata i32* %a2188, metadata !650, metadata !67), !dbg !651
  %134 = load i32, i32* %i, align 4, !dbg !652
  %mul189 = mul nsw i32 %134, 8, !dbg !653
  %add190 = add nsw i32 0, %mul189, !dbg !654
  %idxprom191 = sext i32 %add190 to i64, !dbg !655
  %135 = load i16*, i16** %block, align 8, !dbg !655
  %arrayidx192 = getelementptr inbounds i16, i16* %135, i64 %idxprom191, !dbg !655
  %136 = load i16, i16* %arrayidx192, align 2, !dbg !655
  %conv193 = sext i16 %136 to i32, !dbg !655
  %137 = load i32, i32* %i, align 4, !dbg !656
  %mul194 = mul nsw i32 %137, 8, !dbg !657
  %add195 = add nsw i32 4, %mul194, !dbg !658
  %idxprom196 = sext i32 %add195 to i64, !dbg !659
  %138 = load i16*, i16** %block, align 8, !dbg !659
  %arrayidx197 = getelementptr inbounds i16, i16* %138, i64 %idxprom196, !dbg !659
  %139 = load i16, i16* %arrayidx197, align 2, !dbg !659
  %conv198 = sext i16 %139 to i32, !dbg !660
  %sub199 = sub i32 %conv193, %conv198, !dbg !661
  store i32 %sub199, i32* %a2188, align 4, !dbg !651
  call void @llvm.dbg.declare(metadata i32* %a4200, metadata !662, metadata !67), !dbg !663
  %140 = load i32, i32* %i, align 4, !dbg !664
  %mul201 = mul nsw i32 %140, 8, !dbg !665
  %add202 = add nsw i32 2, %mul201, !dbg !666
  %idxprom203 = sext i32 %add202 to i64, !dbg !667
  %141 = load i16*, i16** %block, align 8, !dbg !667
  %arrayidx204 = getelementptr inbounds i16, i16* %141, i64 %idxprom203, !dbg !667
  %142 = load i16, i16* %arrayidx204, align 2, !dbg !667
  %conv205 = sext i16 %142 to i32, !dbg !667
  %shr206 = ashr i32 %conv205, 1, !dbg !668
  %143 = load i32, i32* %i, align 4, !dbg !669
  %mul207 = mul nsw i32 %143, 8, !dbg !670
  %add208 = add nsw i32 6, %mul207, !dbg !671
  %idxprom209 = sext i32 %add208 to i64, !dbg !672
  %144 = load i16*, i16** %block, align 8, !dbg !672
  %arrayidx210 = getelementptr inbounds i16, i16* %144, i64 %idxprom209, !dbg !672
  %145 = load i16, i16* %arrayidx210, align 2, !dbg !672
  %conv211 = sext i16 %145 to i32, !dbg !673
  %sub212 = sub i32 %shr206, %conv211, !dbg !674
  store i32 %sub212, i32* %a4200, align 4, !dbg !663
  call void @llvm.dbg.declare(metadata i32* %a6213, metadata !675, metadata !67), !dbg !676
  %146 = load i32, i32* %i, align 4, !dbg !677
  %mul214 = mul nsw i32 %146, 8, !dbg !678
  %add215 = add nsw i32 6, %mul214, !dbg !679
  %idxprom216 = sext i32 %add215 to i64, !dbg !680
  %147 = load i16*, i16** %block, align 8, !dbg !680
  %arrayidx217 = getelementptr inbounds i16, i16* %147, i64 %idxprom216, !dbg !680
  %148 = load i16, i16* %arrayidx217, align 2, !dbg !680
  %conv218 = sext i16 %148 to i32, !dbg !680
  %shr219 = ashr i32 %conv218, 1, !dbg !681
  %149 = load i32, i32* %i, align 4, !dbg !682
  %mul220 = mul nsw i32 %149, 8, !dbg !683
  %add221 = add nsw i32 2, %mul220, !dbg !684
  %idxprom222 = sext i32 %add221 to i64, !dbg !685
  %150 = load i16*, i16** %block, align 8, !dbg !685
  %arrayidx223 = getelementptr inbounds i16, i16* %150, i64 %idxprom222, !dbg !685
  %151 = load i16, i16* %arrayidx223, align 2, !dbg !685
  %conv224 = sext i16 %151 to i32, !dbg !686
  %add225 = add i32 %shr219, %conv224, !dbg !687
  store i32 %add225, i32* %a6213, align 4, !dbg !676
  call void @llvm.dbg.declare(metadata i32* %b0226, metadata !688, metadata !67), !dbg !689
  %152 = load i32, i32* %a0177, align 4, !dbg !690
  %153 = load i32, i32* %a6213, align 4, !dbg !691
  %add227 = add i32 %152, %153, !dbg !692
  store i32 %add227, i32* %b0226, align 4, !dbg !689
  call void @llvm.dbg.declare(metadata i32* %b2228, metadata !693, metadata !67), !dbg !694
  %154 = load i32, i32* %a2188, align 4, !dbg !695
  %155 = load i32, i32* %a4200, align 4, !dbg !696
  %add229 = add i32 %154, %155, !dbg !697
  store i32 %add229, i32* %b2228, align 4, !dbg !694
  call void @llvm.dbg.declare(metadata i32* %b4230, metadata !698, metadata !67), !dbg !699
  %156 = load i32, i32* %a2188, align 4, !dbg !700
  %157 = load i32, i32* %a4200, align 4, !dbg !701
  %sub231 = sub i32 %156, %157, !dbg !702
  store i32 %sub231, i32* %b4230, align 4, !dbg !699
  call void @llvm.dbg.declare(metadata i32* %b6232, metadata !703, metadata !67), !dbg !704
  %158 = load i32, i32* %a0177, align 4, !dbg !705
  %159 = load i32, i32* %a6213, align 4, !dbg !706
  %sub233 = sub i32 %158, %159, !dbg !707
  store i32 %sub233, i32* %b6232, align 4, !dbg !704
  call void @llvm.dbg.declare(metadata i32* %a1234, metadata !708, metadata !67), !dbg !709
  %160 = load i32, i32* %i, align 4, !dbg !710
  %mul235 = mul nsw i32 %160, 8, !dbg !711
  %add236 = add nsw i32 3, %mul235, !dbg !712
  %idxprom237 = sext i32 %add236 to i64, !dbg !713
  %161 = load i16*, i16** %block, align 8, !dbg !713
  %arrayidx238 = getelementptr inbounds i16, i16* %161, i64 %idxprom237, !dbg !713
  %162 = load i16, i16* %arrayidx238, align 2, !dbg !713
  %conv239 = sext i16 %162 to i32, !dbg !714
  %sub240 = sub i32 0, %conv239, !dbg !715
  %163 = load i32, i32* %i, align 4, !dbg !716
  %mul241 = mul nsw i32 %163, 8, !dbg !717
  %add242 = add nsw i32 5, %mul241, !dbg !718
  %idxprom243 = sext i32 %add242 to i64, !dbg !719
  %164 = load i16*, i16** %block, align 8, !dbg !719
  %arrayidx244 = getelementptr inbounds i16, i16* %164, i64 %idxprom243, !dbg !719
  %165 = load i16, i16* %arrayidx244, align 2, !dbg !719
  %conv245 = sext i16 %165 to i32, !dbg !719
  %add246 = add i32 %sub240, %conv245, !dbg !720
  %166 = load i32, i32* %i, align 4, !dbg !721
  %mul247 = mul nsw i32 %166, 8, !dbg !722
  %add248 = add nsw i32 7, %mul247, !dbg !723
  %idxprom249 = sext i32 %add248 to i64, !dbg !724
  %167 = load i16*, i16** %block, align 8, !dbg !724
  %arrayidx250 = getelementptr inbounds i16, i16* %167, i64 %idxprom249, !dbg !724
  %168 = load i16, i16* %arrayidx250, align 2, !dbg !724
  %conv251 = sext i16 %168 to i32, !dbg !724
  %sub252 = sub i32 %add246, %conv251, !dbg !725
  %169 = load i32, i32* %i, align 4, !dbg !726
  %mul253 = mul nsw i32 %169, 8, !dbg !727
  %add254 = add nsw i32 7, %mul253, !dbg !728
  %idxprom255 = sext i32 %add254 to i64, !dbg !729
  %170 = load i16*, i16** %block, align 8, !dbg !729
  %arrayidx256 = getelementptr inbounds i16, i16* %170, i64 %idxprom255, !dbg !729
  %171 = load i16, i16* %arrayidx256, align 2, !dbg !729
  %conv257 = sext i16 %171 to i32, !dbg !729
  %shr258 = ashr i32 %conv257, 1, !dbg !730
  %sub259 = sub i32 %sub252, %shr258, !dbg !731
  store i32 %sub259, i32* %a1234, align 4, !dbg !709
  call void @llvm.dbg.declare(metadata i32* %a3260, metadata !732, metadata !67), !dbg !733
  %172 = load i32, i32* %i, align 4, !dbg !734
  %mul261 = mul nsw i32 %172, 8, !dbg !735
  %add262 = add nsw i32 1, %mul261, !dbg !736
  %idxprom263 = sext i32 %add262 to i64, !dbg !737
  %173 = load i16*, i16** %block, align 8, !dbg !737
  %arrayidx264 = getelementptr inbounds i16, i16* %173, i64 %idxprom263, !dbg !737
  %174 = load i16, i16* %arrayidx264, align 2, !dbg !737
  %conv265 = sext i16 %174 to i32, !dbg !738
  %175 = load i32, i32* %i, align 4, !dbg !739
  %mul266 = mul nsw i32 %175, 8, !dbg !740
  %add267 = add nsw i32 7, %mul266, !dbg !741
  %idxprom268 = sext i32 %add267 to i64, !dbg !742
  %176 = load i16*, i16** %block, align 8, !dbg !742
  %arrayidx269 = getelementptr inbounds i16, i16* %176, i64 %idxprom268, !dbg !742
  %177 = load i16, i16* %arrayidx269, align 2, !dbg !742
  %conv270 = sext i16 %177 to i32, !dbg !742
  %add271 = add i32 %conv265, %conv270, !dbg !743
  %178 = load i32, i32* %i, align 4, !dbg !744
  %mul272 = mul nsw i32 %178, 8, !dbg !745
  %add273 = add nsw i32 3, %mul272, !dbg !746
  %idxprom274 = sext i32 %add273 to i64, !dbg !747
  %179 = load i16*, i16** %block, align 8, !dbg !747
  %arrayidx275 = getelementptr inbounds i16, i16* %179, i64 %idxprom274, !dbg !747
  %180 = load i16, i16* %arrayidx275, align 2, !dbg !747
  %conv276 = sext i16 %180 to i32, !dbg !747
  %sub277 = sub i32 %add271, %conv276, !dbg !748
  %181 = load i32, i32* %i, align 4, !dbg !749
  %mul278 = mul nsw i32 %181, 8, !dbg !750
  %add279 = add nsw i32 3, %mul278, !dbg !751
  %idxprom280 = sext i32 %add279 to i64, !dbg !752
  %182 = load i16*, i16** %block, align 8, !dbg !752
  %arrayidx281 = getelementptr inbounds i16, i16* %182, i64 %idxprom280, !dbg !752
  %183 = load i16, i16* %arrayidx281, align 2, !dbg !752
  %conv282 = sext i16 %183 to i32, !dbg !752
  %shr283 = ashr i32 %conv282, 1, !dbg !753
  %sub284 = sub i32 %sub277, %shr283, !dbg !754
  store i32 %sub284, i32* %a3260, align 4, !dbg !733
  call void @llvm.dbg.declare(metadata i32* %a5285, metadata !755, metadata !67), !dbg !756
  %184 = load i32, i32* %i, align 4, !dbg !757
  %mul286 = mul nsw i32 %184, 8, !dbg !758
  %add287 = add nsw i32 1, %mul286, !dbg !759
  %idxprom288 = sext i32 %add287 to i64, !dbg !760
  %185 = load i16*, i16** %block, align 8, !dbg !760
  %arrayidx289 = getelementptr inbounds i16, i16* %185, i64 %idxprom288, !dbg !760
  %186 = load i16, i16* %arrayidx289, align 2, !dbg !760
  %conv290 = sext i16 %186 to i32, !dbg !761
  %sub291 = sub i32 0, %conv290, !dbg !762
  %187 = load i32, i32* %i, align 4, !dbg !763
  %mul292 = mul nsw i32 %187, 8, !dbg !764
  %add293 = add nsw i32 7, %mul292, !dbg !765
  %idxprom294 = sext i32 %add293 to i64, !dbg !766
  %188 = load i16*, i16** %block, align 8, !dbg !766
  %arrayidx295 = getelementptr inbounds i16, i16* %188, i64 %idxprom294, !dbg !766
  %189 = load i16, i16* %arrayidx295, align 2, !dbg !766
  %conv296 = sext i16 %189 to i32, !dbg !766
  %add297 = add i32 %sub291, %conv296, !dbg !767
  %190 = load i32, i32* %i, align 4, !dbg !768
  %mul298 = mul nsw i32 %190, 8, !dbg !769
  %add299 = add nsw i32 5, %mul298, !dbg !770
  %idxprom300 = sext i32 %add299 to i64, !dbg !771
  %191 = load i16*, i16** %block, align 8, !dbg !771
  %arrayidx301 = getelementptr inbounds i16, i16* %191, i64 %idxprom300, !dbg !771
  %192 = load i16, i16* %arrayidx301, align 2, !dbg !771
  %conv302 = sext i16 %192 to i32, !dbg !771
  %add303 = add i32 %add297, %conv302, !dbg !772
  %193 = load i32, i32* %i, align 4, !dbg !773
  %mul304 = mul nsw i32 %193, 8, !dbg !774
  %add305 = add nsw i32 5, %mul304, !dbg !775
  %idxprom306 = sext i32 %add305 to i64, !dbg !776
  %194 = load i16*, i16** %block, align 8, !dbg !776
  %arrayidx307 = getelementptr inbounds i16, i16* %194, i64 %idxprom306, !dbg !776
  %195 = load i16, i16* %arrayidx307, align 2, !dbg !776
  %conv308 = sext i16 %195 to i32, !dbg !776
  %shr309 = ashr i32 %conv308, 1, !dbg !777
  %add310 = add i32 %add303, %shr309, !dbg !778
  store i32 %add310, i32* %a5285, align 4, !dbg !756
  call void @llvm.dbg.declare(metadata i32* %a7311, metadata !779, metadata !67), !dbg !780
  %196 = load i32, i32* %i, align 4, !dbg !781
  %mul312 = mul nsw i32 %196, 8, !dbg !782
  %add313 = add nsw i32 3, %mul312, !dbg !783
  %idxprom314 = sext i32 %add313 to i64, !dbg !784
  %197 = load i16*, i16** %block, align 8, !dbg !784
  %arrayidx315 = getelementptr inbounds i16, i16* %197, i64 %idxprom314, !dbg !784
  %198 = load i16, i16* %arrayidx315, align 2, !dbg !784
  %conv316 = sext i16 %198 to i32, !dbg !785
  %199 = load i32, i32* %i, align 4, !dbg !786
  %mul317 = mul nsw i32 %199, 8, !dbg !787
  %add318 = add nsw i32 5, %mul317, !dbg !788
  %idxprom319 = sext i32 %add318 to i64, !dbg !789
  %200 = load i16*, i16** %block, align 8, !dbg !789
  %arrayidx320 = getelementptr inbounds i16, i16* %200, i64 %idxprom319, !dbg !789
  %201 = load i16, i16* %arrayidx320, align 2, !dbg !789
  %conv321 = sext i16 %201 to i32, !dbg !789
  %add322 = add i32 %conv316, %conv321, !dbg !790
  %202 = load i32, i32* %i, align 4, !dbg !791
  %mul323 = mul nsw i32 %202, 8, !dbg !792
  %add324 = add nsw i32 1, %mul323, !dbg !793
  %idxprom325 = sext i32 %add324 to i64, !dbg !794
  %203 = load i16*, i16** %block, align 8, !dbg !794
  %arrayidx326 = getelementptr inbounds i16, i16* %203, i64 %idxprom325, !dbg !794
  %204 = load i16, i16* %arrayidx326, align 2, !dbg !794
  %conv327 = sext i16 %204 to i32, !dbg !794
  %add328 = add i32 %add322, %conv327, !dbg !795
  %205 = load i32, i32* %i, align 4, !dbg !796
  %mul329 = mul nsw i32 %205, 8, !dbg !797
  %add330 = add nsw i32 1, %mul329, !dbg !798
  %idxprom331 = sext i32 %add330 to i64, !dbg !799
  %206 = load i16*, i16** %block, align 8, !dbg !799
  %arrayidx332 = getelementptr inbounds i16, i16* %206, i64 %idxprom331, !dbg !799
  %207 = load i16, i16* %arrayidx332, align 2, !dbg !799
  %conv333 = sext i16 %207 to i32, !dbg !799
  %shr334 = ashr i32 %conv333, 1, !dbg !800
  %add335 = add i32 %add328, %shr334, !dbg !801
  store i32 %add335, i32* %a7311, align 4, !dbg !780
  call void @llvm.dbg.declare(metadata i32* %b1336, metadata !802, metadata !67), !dbg !803
  %208 = load i32, i32* %a7311, align 4, !dbg !804
  %shr337 = ashr i32 %208, 2, !dbg !805
  %209 = load i32, i32* %a1234, align 4, !dbg !806
  %add338 = add i32 %shr337, %209, !dbg !807
  store i32 %add338, i32* %b1336, align 4, !dbg !803
  call void @llvm.dbg.declare(metadata i32* %b3339, metadata !808, metadata !67), !dbg !809
  %210 = load i32, i32* %a3260, align 4, !dbg !810
  %211 = load i32, i32* %a5285, align 4, !dbg !811
  %shr340 = ashr i32 %211, 2, !dbg !812
  %add341 = add i32 %210, %shr340, !dbg !813
  store i32 %add341, i32* %b3339, align 4, !dbg !809
  call void @llvm.dbg.declare(metadata i32* %b5342, metadata !814, metadata !67), !dbg !815
  %212 = load i32, i32* %a3260, align 4, !dbg !816
  %shr343 = ashr i32 %212, 2, !dbg !817
  %213 = load i32, i32* %a5285, align 4, !dbg !818
  %sub344 = sub i32 %shr343, %213, !dbg !819
  store i32 %sub344, i32* %b5342, align 4, !dbg !815
  call void @llvm.dbg.declare(metadata i32* %b7345, metadata !820, metadata !67), !dbg !821
  %214 = load i32, i32* %a7311, align 4, !dbg !822
  %215 = load i32, i32* %a1234, align 4, !dbg !823
  %shr346 = ashr i32 %215, 2, !dbg !824
  %sub347 = sub i32 %214, %shr346, !dbg !825
  store i32 %sub347, i32* %b7345, align 4, !dbg !821
  %216 = load i32, i32* %i, align 4, !dbg !826
  %217 = load i32, i32* %stride.addr, align 4, !dbg !827
  %mul348 = mul nsw i32 0, %217, !dbg !828
  %add349 = add nsw i32 %216, %mul348, !dbg !829
  %idxprom350 = sext i32 %add349 to i64, !dbg !830
  %218 = load i8*, i8** %dst, align 8, !dbg !830
  %arrayidx351 = getelementptr inbounds i8, i8* %218, i64 %idxprom350, !dbg !830
  %219 = load i8, i8* %arrayidx351, align 1, !dbg !830
  %conv352 = zext i8 %219 to i32, !dbg !830
  %220 = load i32, i32* %b0226, align 4, !dbg !831
  %221 = load i32, i32* %b7345, align 4, !dbg !832
  %add353 = add i32 %220, %221, !dbg !833
  %shr354 = ashr i32 %add353, 6, !dbg !834
  %add355 = add nsw i32 %conv352, %shr354, !dbg !835
  store i32 %add355, i32* %a.addr.i, align 4, !dbg !836
  %222 = load i32, i32* %a.addr.i, align 4, !dbg !837
  %and.i = and i32 %222, -256, !dbg !838
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !838
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !839

if.then.i:                                        ; preds = %for.body176
  %223 = load i32, i32* %a.addr.i, align 4, !dbg !840
  %neg.i = xor i32 %223, -1, !dbg !841
  %shr.i = ashr i32 %neg.i, 31, !dbg !842
  %conv.i = trunc i32 %shr.i to i8, !dbg !843
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !844
  br label %av_clip_uint8_c.exit, !dbg !844

if.else.i:                                        ; preds = %for.body176
  %224 = load i32, i32* %a.addr.i, align 4, !dbg !845
  %conv1.i = trunc i32 %224 to i8, !dbg !845
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !846
  br label %av_clip_uint8_c.exit, !dbg !846

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %225 = load i8, i8* %retval.i, align 1, !dbg !847
  %226 = load i32, i32* %i, align 4, !dbg !848
  %227 = load i32, i32* %stride.addr, align 4, !dbg !849
  %mul356 = mul nsw i32 0, %227, !dbg !850
  %add357 = add nsw i32 %226, %mul356, !dbg !851
  %idxprom358 = sext i32 %add357 to i64, !dbg !852
  %228 = load i8*, i8** %dst, align 8, !dbg !852
  %arrayidx359 = getelementptr inbounds i8, i8* %228, i64 %idxprom358, !dbg !852
  store i8 %225, i8* %arrayidx359, align 1, !dbg !853
  %229 = load i32, i32* %i, align 4, !dbg !854
  %230 = load i32, i32* %stride.addr, align 4, !dbg !855
  %mul360 = mul nsw i32 1, %230, !dbg !856
  %add361 = add nsw i32 %229, %mul360, !dbg !857
  %idxprom362 = sext i32 %add361 to i64, !dbg !858
  %231 = load i8*, i8** %dst, align 8, !dbg !858
  %arrayidx363 = getelementptr inbounds i8, i8* %231, i64 %idxprom362, !dbg !858
  %232 = load i8, i8* %arrayidx363, align 1, !dbg !858
  %conv364 = zext i8 %232 to i32, !dbg !858
  %233 = load i32, i32* %b2228, align 4, !dbg !859
  %234 = load i32, i32* %b5342, align 4, !dbg !860
  %add365 = add i32 %233, %234, !dbg !861
  %shr366 = ashr i32 %add365, 6, !dbg !862
  %add367 = add nsw i32 %conv364, %shr366, !dbg !863
  store i32 %add367, i32* %a.addr.i521, align 4, !dbg !864
  %235 = load i32, i32* %a.addr.i521, align 4, !dbg !865
  %and.i522 = and i32 %235, -256, !dbg !866
  %tobool.i523 = icmp ne i32 %and.i522, 0, !dbg !866
  br i1 %tobool.i523, label %if.then.i527, label %if.else.i529, !dbg !867

if.then.i527:                                     ; preds = %av_clip_uint8_c.exit
  %236 = load i32, i32* %a.addr.i521, align 4, !dbg !868
  %neg.i524 = xor i32 %236, -1, !dbg !869
  %shr.i525 = ashr i32 %neg.i524, 31, !dbg !870
  %conv.i526 = trunc i32 %shr.i525 to i8, !dbg !871
  store i8 %conv.i526, i8* %retval.i520, align 1, !dbg !872
  br label %av_clip_uint8_c.exit530, !dbg !872

if.else.i529:                                     ; preds = %av_clip_uint8_c.exit
  %237 = load i32, i32* %a.addr.i521, align 4, !dbg !873
  %conv1.i528 = trunc i32 %237 to i8, !dbg !873
  store i8 %conv1.i528, i8* %retval.i520, align 1, !dbg !874
  br label %av_clip_uint8_c.exit530, !dbg !874

av_clip_uint8_c.exit530:                          ; preds = %if.then.i527, %if.else.i529
  %238 = load i8, i8* %retval.i520, align 1, !dbg !875
  %239 = load i32, i32* %i, align 4, !dbg !876
  %240 = load i32, i32* %stride.addr, align 4, !dbg !877
  %mul369 = mul nsw i32 1, %240, !dbg !878
  %add370 = add nsw i32 %239, %mul369, !dbg !879
  %idxprom371 = sext i32 %add370 to i64, !dbg !880
  %241 = load i8*, i8** %dst, align 8, !dbg !880
  %arrayidx372 = getelementptr inbounds i8, i8* %241, i64 %idxprom371, !dbg !880
  store i8 %238, i8* %arrayidx372, align 1, !dbg !881
  %242 = load i32, i32* %i, align 4, !dbg !882
  %243 = load i32, i32* %stride.addr, align 4, !dbg !883
  %mul373 = mul nsw i32 2, %243, !dbg !884
  %add374 = add nsw i32 %242, %mul373, !dbg !885
  %idxprom375 = sext i32 %add374 to i64, !dbg !886
  %244 = load i8*, i8** %dst, align 8, !dbg !886
  %arrayidx376 = getelementptr inbounds i8, i8* %244, i64 %idxprom375, !dbg !886
  %245 = load i8, i8* %arrayidx376, align 1, !dbg !886
  %conv377 = zext i8 %245 to i32, !dbg !886
  %246 = load i32, i32* %b4230, align 4, !dbg !887
  %247 = load i32, i32* %b3339, align 4, !dbg !888
  %add378 = add i32 %246, %247, !dbg !889
  %shr379 = ashr i32 %add378, 6, !dbg !890
  %add380 = add nsw i32 %conv377, %shr379, !dbg !891
  store i32 %add380, i32* %a.addr.i510, align 4, !dbg !892
  %248 = load i32, i32* %a.addr.i510, align 4, !dbg !893
  %and.i511 = and i32 %248, -256, !dbg !894
  %tobool.i512 = icmp ne i32 %and.i511, 0, !dbg !894
  br i1 %tobool.i512, label %if.then.i516, label %if.else.i518, !dbg !895

if.then.i516:                                     ; preds = %av_clip_uint8_c.exit530
  %249 = load i32, i32* %a.addr.i510, align 4, !dbg !896
  %neg.i513 = xor i32 %249, -1, !dbg !897
  %shr.i514 = ashr i32 %neg.i513, 31, !dbg !898
  %conv.i515 = trunc i32 %shr.i514 to i8, !dbg !899
  store i8 %conv.i515, i8* %retval.i509, align 1, !dbg !900
  br label %av_clip_uint8_c.exit519, !dbg !900

if.else.i518:                                     ; preds = %av_clip_uint8_c.exit530
  %250 = load i32, i32* %a.addr.i510, align 4, !dbg !901
  %conv1.i517 = trunc i32 %250 to i8, !dbg !901
  store i8 %conv1.i517, i8* %retval.i509, align 1, !dbg !902
  br label %av_clip_uint8_c.exit519, !dbg !902

av_clip_uint8_c.exit519:                          ; preds = %if.then.i516, %if.else.i518
  %251 = load i8, i8* %retval.i509, align 1, !dbg !903
  %252 = load i32, i32* %i, align 4, !dbg !904
  %253 = load i32, i32* %stride.addr, align 4, !dbg !905
  %mul382 = mul nsw i32 2, %253, !dbg !906
  %add383 = add nsw i32 %252, %mul382, !dbg !907
  %idxprom384 = sext i32 %add383 to i64, !dbg !908
  %254 = load i8*, i8** %dst, align 8, !dbg !908
  %arrayidx385 = getelementptr inbounds i8, i8* %254, i64 %idxprom384, !dbg !908
  store i8 %251, i8* %arrayidx385, align 1, !dbg !909
  %255 = load i32, i32* %i, align 4, !dbg !910
  %256 = load i32, i32* %stride.addr, align 4, !dbg !911
  %mul386 = mul nsw i32 3, %256, !dbg !912
  %add387 = add nsw i32 %255, %mul386, !dbg !913
  %idxprom388 = sext i32 %add387 to i64, !dbg !914
  %257 = load i8*, i8** %dst, align 8, !dbg !914
  %arrayidx389 = getelementptr inbounds i8, i8* %257, i64 %idxprom388, !dbg !914
  %258 = load i8, i8* %arrayidx389, align 1, !dbg !914
  %conv390 = zext i8 %258 to i32, !dbg !914
  %259 = load i32, i32* %b6232, align 4, !dbg !915
  %260 = load i32, i32* %b1336, align 4, !dbg !916
  %add391 = add i32 %259, %260, !dbg !917
  %shr392 = ashr i32 %add391, 6, !dbg !918
  %add393 = add nsw i32 %conv390, %shr392, !dbg !919
  store i32 %add393, i32* %a.addr.i499, align 4, !dbg !920
  %261 = load i32, i32* %a.addr.i499, align 4, !dbg !921
  %and.i500 = and i32 %261, -256, !dbg !922
  %tobool.i501 = icmp ne i32 %and.i500, 0, !dbg !922
  br i1 %tobool.i501, label %if.then.i505, label %if.else.i507, !dbg !923

if.then.i505:                                     ; preds = %av_clip_uint8_c.exit519
  %262 = load i32, i32* %a.addr.i499, align 4, !dbg !924
  %neg.i502 = xor i32 %262, -1, !dbg !925
  %shr.i503 = ashr i32 %neg.i502, 31, !dbg !926
  %conv.i504 = trunc i32 %shr.i503 to i8, !dbg !927
  store i8 %conv.i504, i8* %retval.i498, align 1, !dbg !928
  br label %av_clip_uint8_c.exit508, !dbg !928

if.else.i507:                                     ; preds = %av_clip_uint8_c.exit519
  %263 = load i32, i32* %a.addr.i499, align 4, !dbg !929
  %conv1.i506 = trunc i32 %263 to i8, !dbg !929
  store i8 %conv1.i506, i8* %retval.i498, align 1, !dbg !930
  br label %av_clip_uint8_c.exit508, !dbg !930

av_clip_uint8_c.exit508:                          ; preds = %if.then.i505, %if.else.i507
  %264 = load i8, i8* %retval.i498, align 1, !dbg !931
  %265 = load i32, i32* %i, align 4, !dbg !932
  %266 = load i32, i32* %stride.addr, align 4, !dbg !933
  %mul395 = mul nsw i32 3, %266, !dbg !934
  %add396 = add nsw i32 %265, %mul395, !dbg !935
  %idxprom397 = sext i32 %add396 to i64, !dbg !936
  %267 = load i8*, i8** %dst, align 8, !dbg !936
  %arrayidx398 = getelementptr inbounds i8, i8* %267, i64 %idxprom397, !dbg !936
  store i8 %264, i8* %arrayidx398, align 1, !dbg !937
  %268 = load i32, i32* %i, align 4, !dbg !938
  %269 = load i32, i32* %stride.addr, align 4, !dbg !939
  %mul399 = mul nsw i32 4, %269, !dbg !940
  %add400 = add nsw i32 %268, %mul399, !dbg !941
  %idxprom401 = sext i32 %add400 to i64, !dbg !942
  %270 = load i8*, i8** %dst, align 8, !dbg !942
  %arrayidx402 = getelementptr inbounds i8, i8* %270, i64 %idxprom401, !dbg !942
  %271 = load i8, i8* %arrayidx402, align 1, !dbg !942
  %conv403 = zext i8 %271 to i32, !dbg !942
  %272 = load i32, i32* %b6232, align 4, !dbg !943
  %273 = load i32, i32* %b1336, align 4, !dbg !944
  %sub404 = sub i32 %272, %273, !dbg !945
  %shr405 = ashr i32 %sub404, 6, !dbg !946
  %add406 = add nsw i32 %conv403, %shr405, !dbg !947
  store i32 %add406, i32* %a.addr.i488, align 4, !dbg !948
  %274 = load i32, i32* %a.addr.i488, align 4, !dbg !949
  %and.i489 = and i32 %274, -256, !dbg !950
  %tobool.i490 = icmp ne i32 %and.i489, 0, !dbg !950
  br i1 %tobool.i490, label %if.then.i494, label %if.else.i496, !dbg !951

if.then.i494:                                     ; preds = %av_clip_uint8_c.exit508
  %275 = load i32, i32* %a.addr.i488, align 4, !dbg !952
  %neg.i491 = xor i32 %275, -1, !dbg !953
  %shr.i492 = ashr i32 %neg.i491, 31, !dbg !954
  %conv.i493 = trunc i32 %shr.i492 to i8, !dbg !955
  store i8 %conv.i493, i8* %retval.i487, align 1, !dbg !956
  br label %av_clip_uint8_c.exit497, !dbg !956

if.else.i496:                                     ; preds = %av_clip_uint8_c.exit508
  %276 = load i32, i32* %a.addr.i488, align 4, !dbg !957
  %conv1.i495 = trunc i32 %276 to i8, !dbg !957
  store i8 %conv1.i495, i8* %retval.i487, align 1, !dbg !958
  br label %av_clip_uint8_c.exit497, !dbg !958

av_clip_uint8_c.exit497:                          ; preds = %if.then.i494, %if.else.i496
  %277 = load i8, i8* %retval.i487, align 1, !dbg !959
  %278 = load i32, i32* %i, align 4, !dbg !960
  %279 = load i32, i32* %stride.addr, align 4, !dbg !961
  %mul408 = mul nsw i32 4, %279, !dbg !962
  %add409 = add nsw i32 %278, %mul408, !dbg !963
  %idxprom410 = sext i32 %add409 to i64, !dbg !964
  %280 = load i8*, i8** %dst, align 8, !dbg !964
  %arrayidx411 = getelementptr inbounds i8, i8* %280, i64 %idxprom410, !dbg !964
  store i8 %277, i8* %arrayidx411, align 1, !dbg !965
  %281 = load i32, i32* %i, align 4, !dbg !966
  %282 = load i32, i32* %stride.addr, align 4, !dbg !967
  %mul412 = mul nsw i32 5, %282, !dbg !968
  %add413 = add nsw i32 %281, %mul412, !dbg !969
  %idxprom414 = sext i32 %add413 to i64, !dbg !970
  %283 = load i8*, i8** %dst, align 8, !dbg !970
  %arrayidx415 = getelementptr inbounds i8, i8* %283, i64 %idxprom414, !dbg !970
  %284 = load i8, i8* %arrayidx415, align 1, !dbg !970
  %conv416 = zext i8 %284 to i32, !dbg !970
  %285 = load i32, i32* %b4230, align 4, !dbg !971
  %286 = load i32, i32* %b3339, align 4, !dbg !972
  %sub417 = sub i32 %285, %286, !dbg !973
  %shr418 = ashr i32 %sub417, 6, !dbg !974
  %add419 = add nsw i32 %conv416, %shr418, !dbg !975
  store i32 %add419, i32* %a.addr.i477, align 4, !dbg !976
  %287 = load i32, i32* %a.addr.i477, align 4, !dbg !977
  %and.i478 = and i32 %287, -256, !dbg !978
  %tobool.i479 = icmp ne i32 %and.i478, 0, !dbg !978
  br i1 %tobool.i479, label %if.then.i483, label %if.else.i485, !dbg !979

if.then.i483:                                     ; preds = %av_clip_uint8_c.exit497
  %288 = load i32, i32* %a.addr.i477, align 4, !dbg !980
  %neg.i480 = xor i32 %288, -1, !dbg !981
  %shr.i481 = ashr i32 %neg.i480, 31, !dbg !982
  %conv.i482 = trunc i32 %shr.i481 to i8, !dbg !983
  store i8 %conv.i482, i8* %retval.i476, align 1, !dbg !984
  br label %av_clip_uint8_c.exit486, !dbg !984

if.else.i485:                                     ; preds = %av_clip_uint8_c.exit497
  %289 = load i32, i32* %a.addr.i477, align 4, !dbg !985
  %conv1.i484 = trunc i32 %289 to i8, !dbg !985
  store i8 %conv1.i484, i8* %retval.i476, align 1, !dbg !986
  br label %av_clip_uint8_c.exit486, !dbg !986

av_clip_uint8_c.exit486:                          ; preds = %if.then.i483, %if.else.i485
  %290 = load i8, i8* %retval.i476, align 1, !dbg !987
  %291 = load i32, i32* %i, align 4, !dbg !988
  %292 = load i32, i32* %stride.addr, align 4, !dbg !989
  %mul421 = mul nsw i32 5, %292, !dbg !990
  %add422 = add nsw i32 %291, %mul421, !dbg !991
  %idxprom423 = sext i32 %add422 to i64, !dbg !992
  %293 = load i8*, i8** %dst, align 8, !dbg !992
  %arrayidx424 = getelementptr inbounds i8, i8* %293, i64 %idxprom423, !dbg !992
  store i8 %290, i8* %arrayidx424, align 1, !dbg !993
  %294 = load i32, i32* %i, align 4, !dbg !994
  %295 = load i32, i32* %stride.addr, align 4, !dbg !995
  %mul425 = mul nsw i32 6, %295, !dbg !996
  %add426 = add nsw i32 %294, %mul425, !dbg !997
  %idxprom427 = sext i32 %add426 to i64, !dbg !998
  %296 = load i8*, i8** %dst, align 8, !dbg !998
  %arrayidx428 = getelementptr inbounds i8, i8* %296, i64 %idxprom427, !dbg !998
  %297 = load i8, i8* %arrayidx428, align 1, !dbg !998
  %conv429 = zext i8 %297 to i32, !dbg !998
  %298 = load i32, i32* %b2228, align 4, !dbg !999
  %299 = load i32, i32* %b5342, align 4, !dbg !1000
  %sub430 = sub i32 %298, %299, !dbg !1001
  %shr431 = ashr i32 %sub430, 6, !dbg !1002
  %add432 = add nsw i32 %conv429, %shr431, !dbg !1003
  store i32 %add432, i32* %a.addr.i466, align 4, !dbg !1004
  %300 = load i32, i32* %a.addr.i466, align 4, !dbg !1005
  %and.i467 = and i32 %300, -256, !dbg !1006
  %tobool.i468 = icmp ne i32 %and.i467, 0, !dbg !1006
  br i1 %tobool.i468, label %if.then.i472, label %if.else.i474, !dbg !1007

if.then.i472:                                     ; preds = %av_clip_uint8_c.exit486
  %301 = load i32, i32* %a.addr.i466, align 4, !dbg !1008
  %neg.i469 = xor i32 %301, -1, !dbg !1009
  %shr.i470 = ashr i32 %neg.i469, 31, !dbg !1010
  %conv.i471 = trunc i32 %shr.i470 to i8, !dbg !1011
  store i8 %conv.i471, i8* %retval.i465, align 1, !dbg !1012
  br label %av_clip_uint8_c.exit475, !dbg !1012

if.else.i474:                                     ; preds = %av_clip_uint8_c.exit486
  %302 = load i32, i32* %a.addr.i466, align 4, !dbg !1013
  %conv1.i473 = trunc i32 %302 to i8, !dbg !1013
  store i8 %conv1.i473, i8* %retval.i465, align 1, !dbg !1014
  br label %av_clip_uint8_c.exit475, !dbg !1014

av_clip_uint8_c.exit475:                          ; preds = %if.then.i472, %if.else.i474
  %303 = load i8, i8* %retval.i465, align 1, !dbg !1015
  %304 = load i32, i32* %i, align 4, !dbg !1016
  %305 = load i32, i32* %stride.addr, align 4, !dbg !1017
  %mul434 = mul nsw i32 6, %305, !dbg !1018
  %add435 = add nsw i32 %304, %mul434, !dbg !1019
  %idxprom436 = sext i32 %add435 to i64, !dbg !1020
  %306 = load i8*, i8** %dst, align 8, !dbg !1020
  %arrayidx437 = getelementptr inbounds i8, i8* %306, i64 %idxprom436, !dbg !1020
  store i8 %303, i8* %arrayidx437, align 1, !dbg !1021
  %307 = load i32, i32* %i, align 4, !dbg !1022
  %308 = load i32, i32* %stride.addr, align 4, !dbg !1023
  %mul438 = mul nsw i32 7, %308, !dbg !1024
  %add439 = add nsw i32 %307, %mul438, !dbg !1025
  %idxprom440 = sext i32 %add439 to i64, !dbg !1026
  %309 = load i8*, i8** %dst, align 8, !dbg !1026
  %arrayidx441 = getelementptr inbounds i8, i8* %309, i64 %idxprom440, !dbg !1026
  %310 = load i8, i8* %arrayidx441, align 1, !dbg !1026
  %conv442 = zext i8 %310 to i32, !dbg !1026
  %311 = load i32, i32* %b0226, align 4, !dbg !1027
  %312 = load i32, i32* %b7345, align 4, !dbg !1028
  %sub443 = sub i32 %311, %312, !dbg !1029
  %shr444 = ashr i32 %sub443, 6, !dbg !1030
  %add445 = add nsw i32 %conv442, %shr444, !dbg !1031
  store i32 %add445, i32* %a.addr.i455, align 4, !dbg !1032
  %313 = load i32, i32* %a.addr.i455, align 4, !dbg !1033
  %and.i456 = and i32 %313, -256, !dbg !1034
  %tobool.i457 = icmp ne i32 %and.i456, 0, !dbg !1034
  br i1 %tobool.i457, label %if.then.i461, label %if.else.i463, !dbg !1035

if.then.i461:                                     ; preds = %av_clip_uint8_c.exit475
  %314 = load i32, i32* %a.addr.i455, align 4, !dbg !1036
  %neg.i458 = xor i32 %314, -1, !dbg !1037
  %shr.i459 = ashr i32 %neg.i458, 31, !dbg !1038
  %conv.i460 = trunc i32 %shr.i459 to i8, !dbg !1039
  store i8 %conv.i460, i8* %retval.i454, align 1, !dbg !1040
  br label %av_clip_uint8_c.exit464, !dbg !1040

if.else.i463:                                     ; preds = %av_clip_uint8_c.exit475
  %315 = load i32, i32* %a.addr.i455, align 4, !dbg !1041
  %conv1.i462 = trunc i32 %315 to i8, !dbg !1041
  store i8 %conv1.i462, i8* %retval.i454, align 1, !dbg !1042
  br label %av_clip_uint8_c.exit464, !dbg !1042

av_clip_uint8_c.exit464:                          ; preds = %if.then.i461, %if.else.i463
  %316 = load i8, i8* %retval.i454, align 1, !dbg !1043
  %317 = load i32, i32* %i, align 4, !dbg !1044
  %318 = load i32, i32* %stride.addr, align 4, !dbg !1045
  %mul447 = mul nsw i32 7, %318, !dbg !1046
  %add448 = add nsw i32 %317, %mul447, !dbg !1047
  %idxprom449 = sext i32 %add448 to i64, !dbg !1048
  %319 = load i8*, i8** %dst, align 8, !dbg !1048
  %arrayidx450 = getelementptr inbounds i8, i8* %319, i64 %idxprom449, !dbg !1048
  store i8 %316, i8* %arrayidx450, align 1, !dbg !1049
  br label %for.inc451, !dbg !1050

for.inc451:                                       ; preds = %av_clip_uint8_c.exit464
  %320 = load i32, i32* %i, align 4, !dbg !1051
  %inc452 = add nsw i32 %320, 1, !dbg !1051
  store i32 %inc452, i32* %i, align 4, !dbg !1051
  br label %for.cond173, !dbg !1053, !llvm.loop !1054

for.end453:                                       ; preds = %for.cond173
  %321 = load i16*, i16** %block, align 8, !dbg !1056
  %322 = bitcast i16* %321 to i8*, !dbg !1057
  call void @llvm.memset.p0i8.i64(i8* %322, i8 0, i64 128, i32 2, i1 false), !dbg !1057
  ret void, !dbg !1058
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_dc_add_8_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !1059 {
entry:
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !62, metadata !67), !dbg !1060
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dst = alloca i8*, align 8
  %block = alloca i16*, align 8
  %dc = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !1067, metadata !67), !dbg !1068
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !1069, metadata !67), !dbg !1070
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !1071, metadata !67), !dbg !1072
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1073, metadata !67), !dbg !1074
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1075, metadata !67), !dbg !1076
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !1077, metadata !67), !dbg !1078
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !1079
  store i8* %0, i8** %dst, align 8, !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %block, metadata !1080, metadata !67), !dbg !1081
  %1 = load i16*, i16** %_block.addr, align 8, !dbg !1082
  store i16* %1, i16** %block, align 8, !dbg !1081
  call void @llvm.dbg.declare(metadata i32* %dc, metadata !1083, metadata !67), !dbg !1084
  %2 = load i16*, i16** %block, align 8, !dbg !1085
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 0, !dbg !1085
  %3 = load i16, i16* %arrayidx, align 2, !dbg !1085
  %conv = sext i16 %3 to i32, !dbg !1085
  %add = add nsw i32 %conv, 32, !dbg !1086
  %shr = ashr i32 %add, 6, !dbg !1087
  store i32 %shr, i32* %dc, align 4, !dbg !1084
  %4 = load i32, i32* %stride.addr, align 4, !dbg !1088
  %conv1 = sext i32 %4 to i64, !dbg !1088
  %div = udiv i64 %conv1, 1, !dbg !1088
  %conv2 = trunc i64 %div to i32, !dbg !1088
  store i32 %conv2, i32* %stride.addr, align 4, !dbg !1088
  %5 = load i16*, i16** %block, align 8, !dbg !1089
  %arrayidx3 = getelementptr inbounds i16, i16* %5, i64 0, !dbg !1089
  store i16 0, i16* %arrayidx3, align 2, !dbg !1090
  store i32 0, i32* %j, align 4, !dbg !1091
  br label %for.cond, !dbg !1092

for.cond:                                         ; preds = %for.inc14, %entry
  %6 = load i32, i32* %j, align 4, !dbg !1093
  %cmp = icmp slt i32 %6, 4, !dbg !1095
  br i1 %cmp, label %for.body, label %for.end16, !dbg !1096

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !1097
  br label %for.cond5, !dbg !1098

for.cond5:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !1099
  %cmp6 = icmp slt i32 %7, 4, !dbg !1101
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !1102

for.body8:                                        ; preds = %for.cond5
  %8 = load i32, i32* %i, align 4, !dbg !1103
  %idxprom = sext i32 %8 to i64, !dbg !1104
  %9 = load i8*, i8** %dst, align 8, !dbg !1104
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 %idxprom, !dbg !1104
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !1104
  %conv10 = zext i8 %10 to i32, !dbg !1104
  %11 = load i32, i32* %dc, align 4, !dbg !1105
  %add11 = add nsw i32 %conv10, %11, !dbg !1106
  store i32 %add11, i32* %a.addr.i, align 4, !dbg !1107
  %12 = load i32, i32* %a.addr.i, align 4, !dbg !1108
  %and.i = and i32 %12, -256, !dbg !1109
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !1109
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !1110

if.then.i:                                        ; preds = %for.body8
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !1111
  %neg.i = xor i32 %13, -1, !dbg !1112
  %shr.i = ashr i32 %neg.i, 31, !dbg !1113
  %conv.i = trunc i32 %shr.i to i8, !dbg !1114
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !1115
  br label %av_clip_uint8_c.exit, !dbg !1115

if.else.i:                                        ; preds = %for.body8
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !1116
  %conv1.i = trunc i32 %14 to i8, !dbg !1116
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !1117
  br label %av_clip_uint8_c.exit, !dbg !1117

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %15 = load i8, i8* %retval.i, align 1, !dbg !1118
  %16 = load i32, i32* %i, align 4, !dbg !1119
  %idxprom12 = sext i32 %16 to i64, !dbg !1120
  %17 = load i8*, i8** %dst, align 8, !dbg !1120
  %arrayidx13 = getelementptr inbounds i8, i8* %17, i64 %idxprom12, !dbg !1120
  store i8 %15, i8* %arrayidx13, align 1, !dbg !1121
  br label %for.inc, !dbg !1120

for.inc:                                          ; preds = %av_clip_uint8_c.exit
  %18 = load i32, i32* %i, align 4, !dbg !1122
  %inc = add nsw i32 %18, 1, !dbg !1122
  store i32 %inc, i32* %i, align 4, !dbg !1122
  br label %for.cond5, !dbg !1124, !llvm.loop !1125

for.end:                                          ; preds = %for.cond5
  %19 = load i32, i32* %stride.addr, align 4, !dbg !1127
  %20 = load i8*, i8** %dst, align 8, !dbg !1128
  %idx.ext = sext i32 %19 to i64, !dbg !1128
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %idx.ext, !dbg !1128
  store i8* %add.ptr, i8** %dst, align 8, !dbg !1128
  br label %for.inc14, !dbg !1129

for.inc14:                                        ; preds = %for.end
  %21 = load i32, i32* %j, align 4, !dbg !1130
  %inc15 = add nsw i32 %21, 1, !dbg !1130
  store i32 %inc15, i32* %j, align 4, !dbg !1130
  br label %for.cond, !dbg !1132, !llvm.loop !1133

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !1135
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_dc_add_8_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !1136 {
entry:
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !62, metadata !67), !dbg !1137
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dst = alloca i8*, align 8
  %block = alloca i16*, align 8
  %dc = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !1144, metadata !67), !dbg !1145
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !1146, metadata !67), !dbg !1147
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !1148, metadata !67), !dbg !1149
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1150, metadata !67), !dbg !1151
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1152, metadata !67), !dbg !1153
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !1154, metadata !67), !dbg !1155
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !1156
  store i8* %0, i8** %dst, align 8, !dbg !1155
  call void @llvm.dbg.declare(metadata i16** %block, metadata !1157, metadata !67), !dbg !1158
  %1 = load i16*, i16** %_block.addr, align 8, !dbg !1159
  store i16* %1, i16** %block, align 8, !dbg !1158
  call void @llvm.dbg.declare(metadata i32* %dc, metadata !1160, metadata !67), !dbg !1161
  %2 = load i16*, i16** %block, align 8, !dbg !1162
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 0, !dbg !1162
  %3 = load i16, i16* %arrayidx, align 2, !dbg !1162
  %conv = sext i16 %3 to i32, !dbg !1162
  %add = add nsw i32 %conv, 32, !dbg !1163
  %shr = ashr i32 %add, 6, !dbg !1164
  store i32 %shr, i32* %dc, align 4, !dbg !1161
  %4 = load i16*, i16** %block, align 8, !dbg !1165
  %arrayidx1 = getelementptr inbounds i16, i16* %4, i64 0, !dbg !1165
  store i16 0, i16* %arrayidx1, align 2, !dbg !1166
  %5 = load i32, i32* %stride.addr, align 4, !dbg !1167
  %conv2 = sext i32 %5 to i64, !dbg !1167
  %div = udiv i64 %conv2, 1, !dbg !1167
  %conv3 = trunc i64 %div to i32, !dbg !1167
  store i32 %conv3, i32* %stride.addr, align 4, !dbg !1167
  store i32 0, i32* %j, align 4, !dbg !1168
  br label %for.cond, !dbg !1169

for.cond:                                         ; preds = %for.inc14, %entry
  %6 = load i32, i32* %j, align 4, !dbg !1170
  %cmp = icmp slt i32 %6, 8, !dbg !1172
  br i1 %cmp, label %for.body, label %for.end16, !dbg !1173

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !1174
  br label %for.cond5, !dbg !1175

for.cond5:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !1176
  %cmp6 = icmp slt i32 %7, 8, !dbg !1178
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !1179

for.body8:                                        ; preds = %for.cond5
  %8 = load i32, i32* %i, align 4, !dbg !1180
  %idxprom = sext i32 %8 to i64, !dbg !1181
  %9 = load i8*, i8** %dst, align 8, !dbg !1181
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 %idxprom, !dbg !1181
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !1181
  %conv10 = zext i8 %10 to i32, !dbg !1181
  %11 = load i32, i32* %dc, align 4, !dbg !1182
  %add11 = add nsw i32 %conv10, %11, !dbg !1183
  store i32 %add11, i32* %a.addr.i, align 4, !dbg !1184
  %12 = load i32, i32* %a.addr.i, align 4, !dbg !1185
  %and.i = and i32 %12, -256, !dbg !1186
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !1186
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !1187

if.then.i:                                        ; preds = %for.body8
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !1188
  %neg.i = xor i32 %13, -1, !dbg !1189
  %shr.i = ashr i32 %neg.i, 31, !dbg !1190
  %conv.i = trunc i32 %shr.i to i8, !dbg !1191
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !1192
  br label %av_clip_uint8_c.exit, !dbg !1192

if.else.i:                                        ; preds = %for.body8
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !1193
  %conv1.i = trunc i32 %14 to i8, !dbg !1193
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !1194
  br label %av_clip_uint8_c.exit, !dbg !1194

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %15 = load i8, i8* %retval.i, align 1, !dbg !1195
  %16 = load i32, i32* %i, align 4, !dbg !1196
  %idxprom12 = sext i32 %16 to i64, !dbg !1197
  %17 = load i8*, i8** %dst, align 8, !dbg !1197
  %arrayidx13 = getelementptr inbounds i8, i8* %17, i64 %idxprom12, !dbg !1197
  store i8 %15, i8* %arrayidx13, align 1, !dbg !1198
  br label %for.inc, !dbg !1197

for.inc:                                          ; preds = %av_clip_uint8_c.exit
  %18 = load i32, i32* %i, align 4, !dbg !1199
  %inc = add nsw i32 %18, 1, !dbg !1199
  store i32 %inc, i32* %i, align 4, !dbg !1199
  br label %for.cond5, !dbg !1201, !llvm.loop !1202

for.end:                                          ; preds = %for.cond5
  %19 = load i32, i32* %stride.addr, align 4, !dbg !1204
  %20 = load i8*, i8** %dst, align 8, !dbg !1205
  %idx.ext = sext i32 %19 to i64, !dbg !1205
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %idx.ext, !dbg !1205
  store i8* %add.ptr, i8** %dst, align 8, !dbg !1205
  br label %for.inc14, !dbg !1206

for.inc14:                                        ; preds = %for.end
  %21 = load i32, i32* %j, align 4, !dbg !1207
  %inc15 = add nsw i32 %21, 1, !dbg !1207
  store i32 %inc15, i32* %j, align 4, !dbg !1207
  br label %for.cond, !dbg !1209, !llvm.loop !1210

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !1212
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add16_8_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !1213 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %nnz = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1218, metadata !67), !dbg !1219
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !1220, metadata !67), !dbg !1221
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !1222, metadata !67), !dbg !1223
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !1224, metadata !67), !dbg !1225
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !1226, metadata !67), !dbg !1227
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1228, metadata !67), !dbg !1229
  store i32 0, i32* %i, align 4, !dbg !1230
  br label %for.cond, !dbg !1232

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1233
  %cmp = icmp slt i32 %0, 16, !dbg !1236
  br i1 %cmp, label %for.body, label %for.end, !dbg !1237

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %nnz, metadata !1238, metadata !67), !dbg !1240
  %1 = load i32, i32* %i, align 4, !dbg !1241
  %idxprom = sext i32 %1 to i64, !dbg !1242
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !1242
  %2 = load i8, i8* %arrayidx, align 1, !dbg !1242
  %idxprom1 = zext i8 %2 to i64, !dbg !1243
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !1243
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !1243
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !1243
  %conv = zext i8 %4 to i32, !dbg !1243
  store i32 %conv, i32* %nnz, align 4, !dbg !1240
  %5 = load i32, i32* %nnz, align 4, !dbg !1244
  %tobool = icmp ne i32 %5, 0, !dbg !1244
  br i1 %tobool, label %if.then, label %if.end24, !dbg !1246

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %nnz, align 4, !dbg !1247
  %cmp3 = icmp eq i32 %6, 1, !dbg !1250
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !1251

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %i, align 4, !dbg !1252
  %mul = mul nsw i32 %7, 16, !dbg !1254
  %idxprom5 = sext i32 %mul to i64, !dbg !1255
  %8 = load i16*, i16** %block.addr, align 8, !dbg !1256
  %arrayidx6 = getelementptr inbounds i16, i16* %8, i64 %idxprom5, !dbg !1255
  %9 = load i16, i16* %arrayidx6, align 2, !dbg !1255
  %conv7 = sext i16 %9 to i32, !dbg !1255
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !1255
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !1257

if.then9:                                         ; preds = %land.lhs.true
  %10 = load i8*, i8** %dst.addr, align 8, !dbg !1258
  %11 = load i32, i32* %i, align 4, !dbg !1260
  %idxprom10 = sext i32 %11 to i64, !dbg !1261
  %12 = load i32*, i32** %block_offset.addr, align 8, !dbg !1261
  %arrayidx11 = getelementptr inbounds i32, i32* %12, i64 %idxprom10, !dbg !1261
  %13 = load i32, i32* %arrayidx11, align 4, !dbg !1261
  %idx.ext = sext i32 %13 to i64, !dbg !1262
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !1262
  %14 = load i16*, i16** %block.addr, align 8, !dbg !1263
  %15 = load i32, i32* %i, align 4, !dbg !1264
  %mul12 = mul nsw i32 %15, 16, !dbg !1265
  %conv13 = sext i32 %mul12 to i64, !dbg !1264
  %mul14 = mul i64 %conv13, 1, !dbg !1266
  %add.ptr15 = getelementptr inbounds i16, i16* %14, i64 %mul14, !dbg !1267
  %16 = load i32, i32* %stride.addr, align 4, !dbg !1268
  call void @ff_h264_idct_dc_add_8_c(i8* %add.ptr, i16* %add.ptr15, i32 %16), !dbg !1269
  br label %if.end, !dbg !1269

if.else:                                          ; preds = %land.lhs.true, %if.then
  %17 = load i8*, i8** %dst.addr, align 8, !dbg !1270
  %18 = load i32, i32* %i, align 4, !dbg !1271
  %idxprom16 = sext i32 %18 to i64, !dbg !1272
  %19 = load i32*, i32** %block_offset.addr, align 8, !dbg !1272
  %arrayidx17 = getelementptr inbounds i32, i32* %19, i64 %idxprom16, !dbg !1272
  %20 = load i32, i32* %arrayidx17, align 4, !dbg !1272
  %idx.ext18 = sext i32 %20 to i64, !dbg !1273
  %add.ptr19 = getelementptr inbounds i8, i8* %17, i64 %idx.ext18, !dbg !1273
  %21 = load i16*, i16** %block.addr, align 8, !dbg !1274
  %22 = load i32, i32* %i, align 4, !dbg !1275
  %mul20 = mul nsw i32 %22, 16, !dbg !1276
  %conv21 = sext i32 %mul20 to i64, !dbg !1275
  %mul22 = mul i64 %conv21, 1, !dbg !1277
  %add.ptr23 = getelementptr inbounds i16, i16* %21, i64 %mul22, !dbg !1278
  %23 = load i32, i32* %stride.addr, align 4, !dbg !1279
  call void @ff_h264_idct_add_8_c(i8* %add.ptr19, i16* %add.ptr23, i32 %23), !dbg !1280
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  br label %if.end24, !dbg !1281

if.end24:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !1282

for.inc:                                          ; preds = %if.end24
  %24 = load i32, i32* %i, align 4, !dbg !1283
  %inc = add nsw i32 %24, 1, !dbg !1283
  store i32 %inc, i32* %i, align 4, !dbg !1283
  br label %for.cond, !dbg !1285, !llvm.loop !1286

for.end:                                          ; preds = %for.cond
  ret void, !dbg !1288
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add16intra_8_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !1289 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1290, metadata !67), !dbg !1291
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !1292, metadata !67), !dbg !1293
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !1294, metadata !67), !dbg !1295
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !1296, metadata !67), !dbg !1297
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !1298, metadata !67), !dbg !1299
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1300, metadata !67), !dbg !1301
  store i32 0, i32* %i, align 4, !dbg !1302
  br label %for.cond, !dbg !1304

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1305
  %cmp = icmp slt i32 %0, 16, !dbg !1308
  br i1 %cmp, label %for.body, label %for.end, !dbg !1309

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !1310
  %idxprom = sext i32 %1 to i64, !dbg !1313
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !1313
  %2 = load i8, i8* %arrayidx, align 1, !dbg !1313
  %idxprom1 = zext i8 %2 to i64, !dbg !1314
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !1314
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !1314
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !1314
  %tobool = icmp ne i8 %4, 0, !dbg !1314
  br i1 %tobool, label %if.then, label %if.else, !dbg !1315

if.then:                                          ; preds = %for.body
  %5 = load i8*, i8** %dst.addr, align 8, !dbg !1316
  %6 = load i32, i32* %i, align 4, !dbg !1318
  %idxprom3 = sext i32 %6 to i64, !dbg !1319
  %7 = load i32*, i32** %block_offset.addr, align 8, !dbg !1319
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 %idxprom3, !dbg !1319
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !1319
  %idx.ext = sext i32 %8 to i64, !dbg !1320
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !1320
  %9 = load i16*, i16** %block.addr, align 8, !dbg !1321
  %10 = load i32, i32* %i, align 4, !dbg !1322
  %mul = mul nsw i32 %10, 16, !dbg !1323
  %conv = sext i32 %mul to i64, !dbg !1322
  %mul5 = mul i64 %conv, 1, !dbg !1324
  %add.ptr6 = getelementptr inbounds i16, i16* %9, i64 %mul5, !dbg !1325
  %11 = load i32, i32* %stride.addr, align 4, !dbg !1326
  call void @ff_h264_idct_add_8_c(i8* %add.ptr, i16* %add.ptr6, i32 %11), !dbg !1327
  br label %if.end20, !dbg !1327

if.else:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !1328
  %mul7 = mul nsw i32 %12, 16, !dbg !1330
  %idxprom8 = sext i32 %mul7 to i64, !dbg !1331
  %13 = load i16*, i16** %block.addr, align 8, !dbg !1332
  %arrayidx9 = getelementptr inbounds i16, i16* %13, i64 %idxprom8, !dbg !1331
  %14 = load i16, i16* %arrayidx9, align 2, !dbg !1331
  %tobool10 = icmp ne i16 %14, 0, !dbg !1331
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !1333

if.then11:                                        ; preds = %if.else
  %15 = load i8*, i8** %dst.addr, align 8, !dbg !1334
  %16 = load i32, i32* %i, align 4, !dbg !1336
  %idxprom12 = sext i32 %16 to i64, !dbg !1337
  %17 = load i32*, i32** %block_offset.addr, align 8, !dbg !1337
  %arrayidx13 = getelementptr inbounds i32, i32* %17, i64 %idxprom12, !dbg !1337
  %18 = load i32, i32* %arrayidx13, align 4, !dbg !1337
  %idx.ext14 = sext i32 %18 to i64, !dbg !1338
  %add.ptr15 = getelementptr inbounds i8, i8* %15, i64 %idx.ext14, !dbg !1338
  %19 = load i16*, i16** %block.addr, align 8, !dbg !1339
  %20 = load i32, i32* %i, align 4, !dbg !1340
  %mul16 = mul nsw i32 %20, 16, !dbg !1341
  %conv17 = sext i32 %mul16 to i64, !dbg !1340
  %mul18 = mul i64 %conv17, 1, !dbg !1342
  %add.ptr19 = getelementptr inbounds i16, i16* %19, i64 %mul18, !dbg !1343
  %21 = load i32, i32* %stride.addr, align 4, !dbg !1344
  call void @ff_h264_idct_dc_add_8_c(i8* %add.ptr15, i16* %add.ptr19, i32 %21), !dbg !1345
  br label %if.end, !dbg !1345

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !1346

for.inc:                                          ; preds = %if.end20
  %22 = load i32, i32* %i, align 4, !dbg !1347
  %inc = add nsw i32 %22, 1, !dbg !1347
  store i32 %inc, i32* %i, align 4, !dbg !1347
  br label %for.cond, !dbg !1349, !llvm.loop !1350

for.end:                                          ; preds = %for.cond
  ret void, !dbg !1352
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_add4_8_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !1353 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %nnz = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1354, metadata !67), !dbg !1355
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !1356, metadata !67), !dbg !1357
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !1358, metadata !67), !dbg !1359
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !1360, metadata !67), !dbg !1361
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !1362, metadata !67), !dbg !1363
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1364, metadata !67), !dbg !1365
  store i32 0, i32* %i, align 4, !dbg !1366
  br label %for.cond, !dbg !1368

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1369
  %cmp = icmp slt i32 %0, 16, !dbg !1372
  br i1 %cmp, label %for.body, label %for.end, !dbg !1373

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %nnz, metadata !1374, metadata !67), !dbg !1376
  %1 = load i32, i32* %i, align 4, !dbg !1377
  %idxprom = sext i32 %1 to i64, !dbg !1378
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !1378
  %2 = load i8, i8* %arrayidx, align 1, !dbg !1378
  %idxprom1 = zext i8 %2 to i64, !dbg !1379
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !1379
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !1379
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !1379
  %conv = zext i8 %4 to i32, !dbg !1379
  store i32 %conv, i32* %nnz, align 4, !dbg !1376
  %5 = load i32, i32* %nnz, align 4, !dbg !1380
  %tobool = icmp ne i32 %5, 0, !dbg !1380
  br i1 %tobool, label %if.then, label %if.end24, !dbg !1382

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %nnz, align 4, !dbg !1383
  %cmp3 = icmp eq i32 %6, 1, !dbg !1386
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !1387

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %i, align 4, !dbg !1388
  %mul = mul nsw i32 %7, 16, !dbg !1390
  %idxprom5 = sext i32 %mul to i64, !dbg !1391
  %8 = load i16*, i16** %block.addr, align 8, !dbg !1392
  %arrayidx6 = getelementptr inbounds i16, i16* %8, i64 %idxprom5, !dbg !1391
  %9 = load i16, i16* %arrayidx6, align 2, !dbg !1391
  %conv7 = sext i16 %9 to i32, !dbg !1391
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !1391
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !1393

if.then9:                                         ; preds = %land.lhs.true
  %10 = load i8*, i8** %dst.addr, align 8, !dbg !1394
  %11 = load i32, i32* %i, align 4, !dbg !1396
  %idxprom10 = sext i32 %11 to i64, !dbg !1397
  %12 = load i32*, i32** %block_offset.addr, align 8, !dbg !1397
  %arrayidx11 = getelementptr inbounds i32, i32* %12, i64 %idxprom10, !dbg !1397
  %13 = load i32, i32* %arrayidx11, align 4, !dbg !1397
  %idx.ext = sext i32 %13 to i64, !dbg !1398
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !1398
  %14 = load i16*, i16** %block.addr, align 8, !dbg !1399
  %15 = load i32, i32* %i, align 4, !dbg !1400
  %mul12 = mul nsw i32 %15, 16, !dbg !1401
  %conv13 = sext i32 %mul12 to i64, !dbg !1400
  %mul14 = mul i64 %conv13, 1, !dbg !1402
  %add.ptr15 = getelementptr inbounds i16, i16* %14, i64 %mul14, !dbg !1403
  %16 = load i32, i32* %stride.addr, align 4, !dbg !1404
  call void @ff_h264_idct8_dc_add_8_c(i8* %add.ptr, i16* %add.ptr15, i32 %16), !dbg !1405
  br label %if.end, !dbg !1405

if.else:                                          ; preds = %land.lhs.true, %if.then
  %17 = load i8*, i8** %dst.addr, align 8, !dbg !1406
  %18 = load i32, i32* %i, align 4, !dbg !1407
  %idxprom16 = sext i32 %18 to i64, !dbg !1408
  %19 = load i32*, i32** %block_offset.addr, align 8, !dbg !1408
  %arrayidx17 = getelementptr inbounds i32, i32* %19, i64 %idxprom16, !dbg !1408
  %20 = load i32, i32* %arrayidx17, align 4, !dbg !1408
  %idx.ext18 = sext i32 %20 to i64, !dbg !1409
  %add.ptr19 = getelementptr inbounds i8, i8* %17, i64 %idx.ext18, !dbg !1409
  %21 = load i16*, i16** %block.addr, align 8, !dbg !1410
  %22 = load i32, i32* %i, align 4, !dbg !1411
  %mul20 = mul nsw i32 %22, 16, !dbg !1412
  %conv21 = sext i32 %mul20 to i64, !dbg !1411
  %mul22 = mul i64 %conv21, 1, !dbg !1413
  %add.ptr23 = getelementptr inbounds i16, i16* %21, i64 %mul22, !dbg !1414
  %23 = load i32, i32* %stride.addr, align 4, !dbg !1415
  call void @ff_h264_idct8_add_8_c(i8* %add.ptr19, i16* %add.ptr23, i32 %23), !dbg !1416
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  br label %if.end24, !dbg !1417

if.end24:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !1418

for.inc:                                          ; preds = %if.end24
  %24 = load i32, i32* %i, align 4, !dbg !1419
  %add = add nsw i32 %24, 4, !dbg !1419
  store i32 %add, i32* %i, align 4, !dbg !1419
  br label %for.cond, !dbg !1421, !llvm.loop !1422

for.end:                                          ; preds = %for.cond
  ret void, !dbg !1424
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add8_8_c(i8** %dest, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !1425 {
entry:
  %dest.addr = alloca i8**, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !1429, metadata !67), !dbg !1430
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !1431, metadata !67), !dbg !1432
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !1433, metadata !67), !dbg !1434
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !1435, metadata !67), !dbg !1436
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !1437, metadata !67), !dbg !1438
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1439, metadata !67), !dbg !1440
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1441, metadata !67), !dbg !1442
  store i32 1, i32* %j, align 4, !dbg !1443
  br label %for.cond, !dbg !1445

for.cond:                                         ; preds = %for.inc31, %entry
  %0 = load i32, i32* %j, align 4, !dbg !1446
  %cmp = icmp slt i32 %0, 3, !dbg !1449
  br i1 %cmp, label %for.body, label %for.end33, !dbg !1450

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !1451
  %mul = mul nsw i32 %1, 16, !dbg !1454
  store i32 %mul, i32* %i, align 4, !dbg !1455
  br label %for.cond1, !dbg !1456

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !1457
  %3 = load i32, i32* %j, align 4, !dbg !1460
  %mul2 = mul nsw i32 %3, 16, !dbg !1461
  %add = add nsw i32 %mul2, 4, !dbg !1462
  %cmp3 = icmp slt i32 %2, %add, !dbg !1463
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !1464

for.body4:                                        ; preds = %for.cond1
  %4 = load i32, i32* %i, align 4, !dbg !1465
  %idxprom = sext i32 %4 to i64, !dbg !1468
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !1468
  %5 = load i8, i8* %arrayidx, align 1, !dbg !1468
  %idxprom5 = zext i8 %5 to i64, !dbg !1469
  %6 = load i8*, i8** %nnzc.addr, align 8, !dbg !1469
  %arrayidx6 = getelementptr inbounds i8, i8* %6, i64 %idxprom5, !dbg !1469
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !1469
  %tobool = icmp ne i8 %7, 0, !dbg !1469
  br i1 %tobool, label %if.then, label %if.else, !dbg !1470

if.then:                                          ; preds = %for.body4
  %8 = load i32, i32* %j, align 4, !dbg !1471
  %sub = sub nsw i32 %8, 1, !dbg !1472
  %idxprom7 = sext i32 %sub to i64, !dbg !1473
  %9 = load i8**, i8*** %dest.addr, align 8, !dbg !1473
  %arrayidx8 = getelementptr inbounds i8*, i8** %9, i64 %idxprom7, !dbg !1473
  %10 = load i8*, i8** %arrayidx8, align 8, !dbg !1473
  %11 = load i32, i32* %i, align 4, !dbg !1474
  %idxprom9 = sext i32 %11 to i64, !dbg !1475
  %12 = load i32*, i32** %block_offset.addr, align 8, !dbg !1475
  %arrayidx10 = getelementptr inbounds i32, i32* %12, i64 %idxprom9, !dbg !1475
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !1475
  %idx.ext = sext i32 %13 to i64, !dbg !1476
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !1476
  %14 = load i16*, i16** %block.addr, align 8, !dbg !1477
  %15 = load i32, i32* %i, align 4, !dbg !1478
  %mul11 = mul nsw i32 %15, 16, !dbg !1479
  %conv = sext i32 %mul11 to i64, !dbg !1478
  %mul12 = mul i64 %conv, 1, !dbg !1480
  %add.ptr13 = getelementptr inbounds i16, i16* %14, i64 %mul12, !dbg !1481
  %16 = load i32, i32* %stride.addr, align 4, !dbg !1482
  call void @ff_h264_idct_add_8_c(i8* %add.ptr, i16* %add.ptr13, i32 %16), !dbg !1483
  br label %if.end30, !dbg !1483

if.else:                                          ; preds = %for.body4
  %17 = load i32, i32* %i, align 4, !dbg !1484
  %mul14 = mul nsw i32 %17, 16, !dbg !1486
  %idxprom15 = sext i32 %mul14 to i64, !dbg !1487
  %18 = load i16*, i16** %block.addr, align 8, !dbg !1488
  %arrayidx16 = getelementptr inbounds i16, i16* %18, i64 %idxprom15, !dbg !1487
  %19 = load i16, i16* %arrayidx16, align 2, !dbg !1487
  %tobool17 = icmp ne i16 %19, 0, !dbg !1487
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !1489

if.then18:                                        ; preds = %if.else
  %20 = load i32, i32* %j, align 4, !dbg !1490
  %sub19 = sub nsw i32 %20, 1, !dbg !1491
  %idxprom20 = sext i32 %sub19 to i64, !dbg !1492
  %21 = load i8**, i8*** %dest.addr, align 8, !dbg !1492
  %arrayidx21 = getelementptr inbounds i8*, i8** %21, i64 %idxprom20, !dbg !1492
  %22 = load i8*, i8** %arrayidx21, align 8, !dbg !1492
  %23 = load i32, i32* %i, align 4, !dbg !1493
  %idxprom22 = sext i32 %23 to i64, !dbg !1494
  %24 = load i32*, i32** %block_offset.addr, align 8, !dbg !1494
  %arrayidx23 = getelementptr inbounds i32, i32* %24, i64 %idxprom22, !dbg !1494
  %25 = load i32, i32* %arrayidx23, align 4, !dbg !1494
  %idx.ext24 = sext i32 %25 to i64, !dbg !1495
  %add.ptr25 = getelementptr inbounds i8, i8* %22, i64 %idx.ext24, !dbg !1495
  %26 = load i16*, i16** %block.addr, align 8, !dbg !1496
  %27 = load i32, i32* %i, align 4, !dbg !1497
  %mul26 = mul nsw i32 %27, 16, !dbg !1498
  %conv27 = sext i32 %mul26 to i64, !dbg !1497
  %mul28 = mul i64 %conv27, 1, !dbg !1499
  %add.ptr29 = getelementptr inbounds i16, i16* %26, i64 %mul28, !dbg !1500
  %28 = load i32, i32* %stride.addr, align 4, !dbg !1501
  call void @ff_h264_idct_dc_add_8_c(i8* %add.ptr25, i16* %add.ptr29, i32 %28), !dbg !1502
  br label %if.end, !dbg !1502

if.end:                                           ; preds = %if.then18, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !1503

for.inc:                                          ; preds = %if.end30
  %29 = load i32, i32* %i, align 4, !dbg !1504
  %inc = add nsw i32 %29, 1, !dbg !1504
  store i32 %inc, i32* %i, align 4, !dbg !1504
  br label %for.cond1, !dbg !1506, !llvm.loop !1507

for.end:                                          ; preds = %for.cond1
  br label %for.inc31, !dbg !1509

for.inc31:                                        ; preds = %for.end
  %30 = load i32, i32* %j, align 4, !dbg !1510
  %inc32 = add nsw i32 %30, 1, !dbg !1510
  store i32 %inc32, i32* %j, align 4, !dbg !1510
  br label %for.cond, !dbg !1512, !llvm.loop !1513

for.end33:                                        ; preds = %for.cond
  ret void, !dbg !1515
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add8_422_8_c(i8** %dest, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !1516 {
entry:
  %dest.addr = alloca i8**, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !1517, metadata !67), !dbg !1518
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !1519, metadata !67), !dbg !1520
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !1521, metadata !67), !dbg !1522
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !1523, metadata !67), !dbg !1524
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !1525, metadata !67), !dbg !1526
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1527, metadata !67), !dbg !1528
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1529, metadata !67), !dbg !1530
  store i32 1, i32* %j, align 4, !dbg !1531
  br label %for.cond, !dbg !1533

for.cond:                                         ; preds = %for.inc31, %entry
  %0 = load i32, i32* %j, align 4, !dbg !1534
  %cmp = icmp slt i32 %0, 3, !dbg !1537
  br i1 %cmp, label %for.body, label %for.end33, !dbg !1538

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !1539
  %mul = mul nsw i32 %1, 16, !dbg !1542
  store i32 %mul, i32* %i, align 4, !dbg !1543
  br label %for.cond1, !dbg !1544

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !1545
  %3 = load i32, i32* %j, align 4, !dbg !1548
  %mul2 = mul nsw i32 %3, 16, !dbg !1549
  %add = add nsw i32 %mul2, 4, !dbg !1550
  %cmp3 = icmp slt i32 %2, %add, !dbg !1551
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !1552

for.body4:                                        ; preds = %for.cond1
  %4 = load i32, i32* %i, align 4, !dbg !1553
  %idxprom = sext i32 %4 to i64, !dbg !1556
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !1556
  %5 = load i8, i8* %arrayidx, align 1, !dbg !1556
  %idxprom5 = zext i8 %5 to i64, !dbg !1557
  %6 = load i8*, i8** %nnzc.addr, align 8, !dbg !1557
  %arrayidx6 = getelementptr inbounds i8, i8* %6, i64 %idxprom5, !dbg !1557
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !1557
  %tobool = icmp ne i8 %7, 0, !dbg !1557
  br i1 %tobool, label %if.then, label %if.else, !dbg !1558

if.then:                                          ; preds = %for.body4
  %8 = load i32, i32* %j, align 4, !dbg !1559
  %sub = sub nsw i32 %8, 1, !dbg !1560
  %idxprom7 = sext i32 %sub to i64, !dbg !1561
  %9 = load i8**, i8*** %dest.addr, align 8, !dbg !1561
  %arrayidx8 = getelementptr inbounds i8*, i8** %9, i64 %idxprom7, !dbg !1561
  %10 = load i8*, i8** %arrayidx8, align 8, !dbg !1561
  %11 = load i32, i32* %i, align 4, !dbg !1562
  %idxprom9 = sext i32 %11 to i64, !dbg !1563
  %12 = load i32*, i32** %block_offset.addr, align 8, !dbg !1563
  %arrayidx10 = getelementptr inbounds i32, i32* %12, i64 %idxprom9, !dbg !1563
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !1563
  %idx.ext = sext i32 %13 to i64, !dbg !1564
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !1564
  %14 = load i16*, i16** %block.addr, align 8, !dbg !1565
  %15 = load i32, i32* %i, align 4, !dbg !1566
  %mul11 = mul nsw i32 %15, 16, !dbg !1567
  %conv = sext i32 %mul11 to i64, !dbg !1566
  %mul12 = mul i64 %conv, 1, !dbg !1568
  %add.ptr13 = getelementptr inbounds i16, i16* %14, i64 %mul12, !dbg !1569
  %16 = load i32, i32* %stride.addr, align 4, !dbg !1570
  call void @ff_h264_idct_add_8_c(i8* %add.ptr, i16* %add.ptr13, i32 %16), !dbg !1571
  br label %if.end30, !dbg !1571

if.else:                                          ; preds = %for.body4
  %17 = load i32, i32* %i, align 4, !dbg !1572
  %mul14 = mul nsw i32 %17, 16, !dbg !1574
  %idxprom15 = sext i32 %mul14 to i64, !dbg !1575
  %18 = load i16*, i16** %block.addr, align 8, !dbg !1576
  %arrayidx16 = getelementptr inbounds i16, i16* %18, i64 %idxprom15, !dbg !1575
  %19 = load i16, i16* %arrayidx16, align 2, !dbg !1575
  %tobool17 = icmp ne i16 %19, 0, !dbg !1575
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !1577

if.then18:                                        ; preds = %if.else
  %20 = load i32, i32* %j, align 4, !dbg !1578
  %sub19 = sub nsw i32 %20, 1, !dbg !1579
  %idxprom20 = sext i32 %sub19 to i64, !dbg !1580
  %21 = load i8**, i8*** %dest.addr, align 8, !dbg !1580
  %arrayidx21 = getelementptr inbounds i8*, i8** %21, i64 %idxprom20, !dbg !1580
  %22 = load i8*, i8** %arrayidx21, align 8, !dbg !1580
  %23 = load i32, i32* %i, align 4, !dbg !1581
  %idxprom22 = sext i32 %23 to i64, !dbg !1582
  %24 = load i32*, i32** %block_offset.addr, align 8, !dbg !1582
  %arrayidx23 = getelementptr inbounds i32, i32* %24, i64 %idxprom22, !dbg !1582
  %25 = load i32, i32* %arrayidx23, align 4, !dbg !1582
  %idx.ext24 = sext i32 %25 to i64, !dbg !1583
  %add.ptr25 = getelementptr inbounds i8, i8* %22, i64 %idx.ext24, !dbg !1583
  %26 = load i16*, i16** %block.addr, align 8, !dbg !1584
  %27 = load i32, i32* %i, align 4, !dbg !1585
  %mul26 = mul nsw i32 %27, 16, !dbg !1586
  %conv27 = sext i32 %mul26 to i64, !dbg !1585
  %mul28 = mul i64 %conv27, 1, !dbg !1587
  %add.ptr29 = getelementptr inbounds i16, i16* %26, i64 %mul28, !dbg !1588
  %28 = load i32, i32* %stride.addr, align 4, !dbg !1589
  call void @ff_h264_idct_dc_add_8_c(i8* %add.ptr25, i16* %add.ptr29, i32 %28), !dbg !1590
  br label %if.end, !dbg !1590

if.end:                                           ; preds = %if.then18, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !1591

for.inc:                                          ; preds = %if.end30
  %29 = load i32, i32* %i, align 4, !dbg !1592
  %inc = add nsw i32 %29, 1, !dbg !1592
  store i32 %inc, i32* %i, align 4, !dbg !1592
  br label %for.cond1, !dbg !1594, !llvm.loop !1595

for.end:                                          ; preds = %for.cond1
  br label %for.inc31, !dbg !1597

for.inc31:                                        ; preds = %for.end
  %30 = load i32, i32* %j, align 4, !dbg !1598
  %inc32 = add nsw i32 %30, 1, !dbg !1598
  store i32 %inc32, i32* %j, align 4, !dbg !1598
  br label %for.cond, !dbg !1600, !llvm.loop !1601

for.end33:                                        ; preds = %for.cond
  store i32 1, i32* %j, align 4, !dbg !1603
  br label %for.cond34, !dbg !1605

for.cond34:                                       ; preds = %for.inc88, %for.end33
  %31 = load i32, i32* %j, align 4, !dbg !1606
  %cmp35 = icmp slt i32 %31, 3, !dbg !1609
  br i1 %cmp35, label %for.body37, label %for.end90, !dbg !1610

for.body37:                                       ; preds = %for.cond34
  %32 = load i32, i32* %j, align 4, !dbg !1611
  %mul38 = mul nsw i32 %32, 16, !dbg !1614
  %add39 = add nsw i32 %mul38, 4, !dbg !1615
  store i32 %add39, i32* %i, align 4, !dbg !1616
  br label %for.cond40, !dbg !1617

for.cond40:                                       ; preds = %for.inc85, %for.body37
  %33 = load i32, i32* %i, align 4, !dbg !1618
  %34 = load i32, i32* %j, align 4, !dbg !1621
  %mul41 = mul nsw i32 %34, 16, !dbg !1622
  %add42 = add nsw i32 %mul41, 8, !dbg !1623
  %cmp43 = icmp slt i32 %33, %add42, !dbg !1624
  br i1 %cmp43, label %for.body45, label %for.end87, !dbg !1625

for.body45:                                       ; preds = %for.cond40
  %35 = load i32, i32* %i, align 4, !dbg !1626
  %add46 = add nsw i32 %35, 4, !dbg !1629
  %idxprom47 = sext i32 %add46 to i64, !dbg !1630
  %arrayidx48 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom47, !dbg !1630
  %36 = load i8, i8* %arrayidx48, align 1, !dbg !1630
  %idxprom49 = zext i8 %36 to i64, !dbg !1631
  %37 = load i8*, i8** %nnzc.addr, align 8, !dbg !1631
  %arrayidx50 = getelementptr inbounds i8, i8* %37, i64 %idxprom49, !dbg !1631
  %38 = load i8, i8* %arrayidx50, align 1, !dbg !1631
  %tobool51 = icmp ne i8 %38, 0, !dbg !1631
  br i1 %tobool51, label %if.then52, label %if.else65, !dbg !1632

if.then52:                                        ; preds = %for.body45
  %39 = load i32, i32* %j, align 4, !dbg !1633
  %sub53 = sub nsw i32 %39, 1, !dbg !1634
  %idxprom54 = sext i32 %sub53 to i64, !dbg !1635
  %40 = load i8**, i8*** %dest.addr, align 8, !dbg !1635
  %arrayidx55 = getelementptr inbounds i8*, i8** %40, i64 %idxprom54, !dbg !1635
  %41 = load i8*, i8** %arrayidx55, align 8, !dbg !1635
  %42 = load i32, i32* %i, align 4, !dbg !1636
  %add56 = add nsw i32 %42, 4, !dbg !1637
  %idxprom57 = sext i32 %add56 to i64, !dbg !1638
  %43 = load i32*, i32** %block_offset.addr, align 8, !dbg !1638
  %arrayidx58 = getelementptr inbounds i32, i32* %43, i64 %idxprom57, !dbg !1638
  %44 = load i32, i32* %arrayidx58, align 4, !dbg !1638
  %idx.ext59 = sext i32 %44 to i64, !dbg !1639
  %add.ptr60 = getelementptr inbounds i8, i8* %41, i64 %idx.ext59, !dbg !1639
  %45 = load i16*, i16** %block.addr, align 8, !dbg !1640
  %46 = load i32, i32* %i, align 4, !dbg !1641
  %mul61 = mul nsw i32 %46, 16, !dbg !1642
  %conv62 = sext i32 %mul61 to i64, !dbg !1641
  %mul63 = mul i64 %conv62, 1, !dbg !1643
  %add.ptr64 = getelementptr inbounds i16, i16* %45, i64 %mul63, !dbg !1644
  %47 = load i32, i32* %stride.addr, align 4, !dbg !1645
  call void @ff_h264_idct_add_8_c(i8* %add.ptr60, i16* %add.ptr64, i32 %47), !dbg !1646
  br label %if.end84, !dbg !1646

if.else65:                                        ; preds = %for.body45
  %48 = load i32, i32* %i, align 4, !dbg !1647
  %mul66 = mul nsw i32 %48, 16, !dbg !1649
  %idxprom67 = sext i32 %mul66 to i64, !dbg !1650
  %49 = load i16*, i16** %block.addr, align 8, !dbg !1651
  %arrayidx68 = getelementptr inbounds i16, i16* %49, i64 %idxprom67, !dbg !1650
  %50 = load i16, i16* %arrayidx68, align 2, !dbg !1650
  %tobool69 = icmp ne i16 %50, 0, !dbg !1650
  br i1 %tobool69, label %if.then70, label %if.end83, !dbg !1652

if.then70:                                        ; preds = %if.else65
  %51 = load i32, i32* %j, align 4, !dbg !1653
  %sub71 = sub nsw i32 %51, 1, !dbg !1654
  %idxprom72 = sext i32 %sub71 to i64, !dbg !1655
  %52 = load i8**, i8*** %dest.addr, align 8, !dbg !1655
  %arrayidx73 = getelementptr inbounds i8*, i8** %52, i64 %idxprom72, !dbg !1655
  %53 = load i8*, i8** %arrayidx73, align 8, !dbg !1655
  %54 = load i32, i32* %i, align 4, !dbg !1656
  %add74 = add nsw i32 %54, 4, !dbg !1657
  %idxprom75 = sext i32 %add74 to i64, !dbg !1658
  %55 = load i32*, i32** %block_offset.addr, align 8, !dbg !1658
  %arrayidx76 = getelementptr inbounds i32, i32* %55, i64 %idxprom75, !dbg !1658
  %56 = load i32, i32* %arrayidx76, align 4, !dbg !1658
  %idx.ext77 = sext i32 %56 to i64, !dbg !1659
  %add.ptr78 = getelementptr inbounds i8, i8* %53, i64 %idx.ext77, !dbg !1659
  %57 = load i16*, i16** %block.addr, align 8, !dbg !1660
  %58 = load i32, i32* %i, align 4, !dbg !1661
  %mul79 = mul nsw i32 %58, 16, !dbg !1662
  %conv80 = sext i32 %mul79 to i64, !dbg !1661
  %mul81 = mul i64 %conv80, 1, !dbg !1663
  %add.ptr82 = getelementptr inbounds i16, i16* %57, i64 %mul81, !dbg !1664
  %59 = load i32, i32* %stride.addr, align 4, !dbg !1665
  call void @ff_h264_idct_dc_add_8_c(i8* %add.ptr78, i16* %add.ptr82, i32 %59), !dbg !1666
  br label %if.end83, !dbg !1666

if.end83:                                         ; preds = %if.then70, %if.else65
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then52
  br label %for.inc85, !dbg !1667

for.inc85:                                        ; preds = %if.end84
  %60 = load i32, i32* %i, align 4, !dbg !1668
  %inc86 = add nsw i32 %60, 1, !dbg !1668
  store i32 %inc86, i32* %i, align 4, !dbg !1668
  br label %for.cond40, !dbg !1670, !llvm.loop !1671

for.end87:                                        ; preds = %for.cond40
  br label %for.inc88, !dbg !1673

for.inc88:                                        ; preds = %for.end87
  %61 = load i32, i32* %j, align 4, !dbg !1674
  %inc89 = add nsw i32 %61, 1, !dbg !1674
  store i32 %inc89, i32* %j, align 4, !dbg !1674
  br label %for.cond34, !dbg !1676, !llvm.loop !1677

for.end90:                                        ; preds = %for.cond34
  ret void, !dbg !1679
}

; Function Attrs: nounwind uwtable
define void @ff_h264_luma_dc_dequant_idct_8_c(i16* %_output, i16* %_input, i32 %qmul) #0 !dbg !20 {
entry:
  %_output.addr = alloca i16*, align 8
  %_input.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca [16 x i32], align 16
  %input = alloca i16*, align 8
  %output = alloca i16*, align 8
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  %offset = alloca i32, align 4
  %z066 = alloca i32, align 4
  %z174 = alloca i32, align 4
  %z282 = alloca i32, align 4
  %z390 = alloca i32, align 4
  store i16* %_output, i16** %_output.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_output.addr, metadata !1680, metadata !67), !dbg !1681
  store i16* %_input, i16** %_input.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_input.addr, metadata !1682, metadata !67), !dbg !1683
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !1684, metadata !67), !dbg !1685
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1686, metadata !67), !dbg !1687
  call void @llvm.dbg.declare(metadata [16 x i32]* %temp, metadata !1688, metadata !67), !dbg !1692
  call void @llvm.dbg.declare(metadata i16** %input, metadata !1693, metadata !67), !dbg !1694
  %0 = load i16*, i16** %_input.addr, align 8, !dbg !1695
  store i16* %0, i16** %input, align 8, !dbg !1694
  call void @llvm.dbg.declare(metadata i16** %output, metadata !1696, metadata !67), !dbg !1697
  %1 = load i16*, i16** %_output.addr, align 8, !dbg !1698
  store i16* %1, i16** %output, align 8, !dbg !1697
  store i32 0, i32* %i, align 4, !dbg !1699
  br label %for.cond, !dbg !1701

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !1702
  %cmp = icmp slt i32 %2, 4, !dbg !1705
  br i1 %cmp, label %for.body, label %for.end, !dbg !1706

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !1707, metadata !67), !dbg !1709
  %3 = load i32, i32* %i, align 4, !dbg !1710
  %mul = mul nsw i32 4, %3, !dbg !1711
  %add = add nsw i32 %mul, 0, !dbg !1712
  %idxprom = sext i32 %add to i64, !dbg !1713
  %4 = load i16*, i16** %input, align 8, !dbg !1713
  %arrayidx = getelementptr inbounds i16, i16* %4, i64 %idxprom, !dbg !1713
  %5 = load i16, i16* %arrayidx, align 2, !dbg !1713
  %conv = sext i16 %5 to i32, !dbg !1713
  %6 = load i32, i32* %i, align 4, !dbg !1714
  %mul1 = mul nsw i32 4, %6, !dbg !1715
  %add2 = add nsw i32 %mul1, 1, !dbg !1716
  %idxprom3 = sext i32 %add2 to i64, !dbg !1717
  %7 = load i16*, i16** %input, align 8, !dbg !1717
  %arrayidx4 = getelementptr inbounds i16, i16* %7, i64 %idxprom3, !dbg !1717
  %8 = load i16, i16* %arrayidx4, align 2, !dbg !1717
  %conv5 = sext i16 %8 to i32, !dbg !1717
  %add6 = add nsw i32 %conv, %conv5, !dbg !1718
  store i32 %add6, i32* %z0, align 4, !dbg !1709
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !1719, metadata !67), !dbg !1720
  %9 = load i32, i32* %i, align 4, !dbg !1721
  %mul7 = mul nsw i32 4, %9, !dbg !1722
  %add8 = add nsw i32 %mul7, 0, !dbg !1723
  %idxprom9 = sext i32 %add8 to i64, !dbg !1724
  %10 = load i16*, i16** %input, align 8, !dbg !1724
  %arrayidx10 = getelementptr inbounds i16, i16* %10, i64 %idxprom9, !dbg !1724
  %11 = load i16, i16* %arrayidx10, align 2, !dbg !1724
  %conv11 = sext i16 %11 to i32, !dbg !1724
  %12 = load i32, i32* %i, align 4, !dbg !1725
  %mul12 = mul nsw i32 4, %12, !dbg !1726
  %add13 = add nsw i32 %mul12, 1, !dbg !1727
  %idxprom14 = sext i32 %add13 to i64, !dbg !1728
  %13 = load i16*, i16** %input, align 8, !dbg !1728
  %arrayidx15 = getelementptr inbounds i16, i16* %13, i64 %idxprom14, !dbg !1728
  %14 = load i16, i16* %arrayidx15, align 2, !dbg !1728
  %conv16 = sext i16 %14 to i32, !dbg !1728
  %sub = sub nsw i32 %conv11, %conv16, !dbg !1729
  store i32 %sub, i32* %z1, align 4, !dbg !1720
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !1730, metadata !67), !dbg !1731
  %15 = load i32, i32* %i, align 4, !dbg !1732
  %mul17 = mul nsw i32 4, %15, !dbg !1733
  %add18 = add nsw i32 %mul17, 2, !dbg !1734
  %idxprom19 = sext i32 %add18 to i64, !dbg !1735
  %16 = load i16*, i16** %input, align 8, !dbg !1735
  %arrayidx20 = getelementptr inbounds i16, i16* %16, i64 %idxprom19, !dbg !1735
  %17 = load i16, i16* %arrayidx20, align 2, !dbg !1735
  %conv21 = sext i16 %17 to i32, !dbg !1735
  %18 = load i32, i32* %i, align 4, !dbg !1736
  %mul22 = mul nsw i32 4, %18, !dbg !1737
  %add23 = add nsw i32 %mul22, 3, !dbg !1738
  %idxprom24 = sext i32 %add23 to i64, !dbg !1739
  %19 = load i16*, i16** %input, align 8, !dbg !1739
  %arrayidx25 = getelementptr inbounds i16, i16* %19, i64 %idxprom24, !dbg !1739
  %20 = load i16, i16* %arrayidx25, align 2, !dbg !1739
  %conv26 = sext i16 %20 to i32, !dbg !1739
  %sub27 = sub nsw i32 %conv21, %conv26, !dbg !1740
  store i32 %sub27, i32* %z2, align 4, !dbg !1731
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !1741, metadata !67), !dbg !1742
  %21 = load i32, i32* %i, align 4, !dbg !1743
  %mul28 = mul nsw i32 4, %21, !dbg !1744
  %add29 = add nsw i32 %mul28, 2, !dbg !1745
  %idxprom30 = sext i32 %add29 to i64, !dbg !1746
  %22 = load i16*, i16** %input, align 8, !dbg !1746
  %arrayidx31 = getelementptr inbounds i16, i16* %22, i64 %idxprom30, !dbg !1746
  %23 = load i16, i16* %arrayidx31, align 2, !dbg !1746
  %conv32 = sext i16 %23 to i32, !dbg !1746
  %24 = load i32, i32* %i, align 4, !dbg !1747
  %mul33 = mul nsw i32 4, %24, !dbg !1748
  %add34 = add nsw i32 %mul33, 3, !dbg !1749
  %idxprom35 = sext i32 %add34 to i64, !dbg !1750
  %25 = load i16*, i16** %input, align 8, !dbg !1750
  %arrayidx36 = getelementptr inbounds i16, i16* %25, i64 %idxprom35, !dbg !1750
  %26 = load i16, i16* %arrayidx36, align 2, !dbg !1750
  %conv37 = sext i16 %26 to i32, !dbg !1750
  %add38 = add nsw i32 %conv32, %conv37, !dbg !1751
  store i32 %add38, i32* %z3, align 4, !dbg !1742
  %27 = load i32, i32* %z0, align 4, !dbg !1752
  %28 = load i32, i32* %z3, align 4, !dbg !1753
  %add39 = add nsw i32 %27, %28, !dbg !1754
  %29 = load i32, i32* %i, align 4, !dbg !1755
  %mul40 = mul nsw i32 4, %29, !dbg !1756
  %add41 = add nsw i32 %mul40, 0, !dbg !1757
  %idxprom42 = sext i32 %add41 to i64, !dbg !1758
  %arrayidx43 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom42, !dbg !1758
  store i32 %add39, i32* %arrayidx43, align 4, !dbg !1759
  %30 = load i32, i32* %z0, align 4, !dbg !1760
  %31 = load i32, i32* %z3, align 4, !dbg !1761
  %sub44 = sub nsw i32 %30, %31, !dbg !1762
  %32 = load i32, i32* %i, align 4, !dbg !1763
  %mul45 = mul nsw i32 4, %32, !dbg !1764
  %add46 = add nsw i32 %mul45, 1, !dbg !1765
  %idxprom47 = sext i32 %add46 to i64, !dbg !1766
  %arrayidx48 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom47, !dbg !1766
  store i32 %sub44, i32* %arrayidx48, align 4, !dbg !1767
  %33 = load i32, i32* %z1, align 4, !dbg !1768
  %34 = load i32, i32* %z2, align 4, !dbg !1769
  %sub49 = sub nsw i32 %33, %34, !dbg !1770
  %35 = load i32, i32* %i, align 4, !dbg !1771
  %mul50 = mul nsw i32 4, %35, !dbg !1772
  %add51 = add nsw i32 %mul50, 2, !dbg !1773
  %idxprom52 = sext i32 %add51 to i64, !dbg !1774
  %arrayidx53 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom52, !dbg !1774
  store i32 %sub49, i32* %arrayidx53, align 4, !dbg !1775
  %36 = load i32, i32* %z1, align 4, !dbg !1776
  %37 = load i32, i32* %z2, align 4, !dbg !1777
  %add54 = add nsw i32 %36, %37, !dbg !1778
  %38 = load i32, i32* %i, align 4, !dbg !1779
  %mul55 = mul nsw i32 4, %38, !dbg !1780
  %add56 = add nsw i32 %mul55, 3, !dbg !1781
  %idxprom57 = sext i32 %add56 to i64, !dbg !1782
  %arrayidx58 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom57, !dbg !1782
  store i32 %add54, i32* %arrayidx58, align 4, !dbg !1783
  br label %for.inc, !dbg !1784

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !1785
  %inc = add nsw i32 %39, 1, !dbg !1785
  store i32 %inc, i32* %i, align 4, !dbg !1785
  br label %for.cond, !dbg !1787, !llvm.loop !1788

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !1790
  br label %for.cond59, !dbg !1792

for.cond59:                                       ; preds = %for.inc129, %for.end
  %40 = load i32, i32* %i, align 4, !dbg !1793
  %cmp60 = icmp slt i32 %40, 4, !dbg !1796
  br i1 %cmp60, label %for.body62, label %for.end131, !dbg !1797

for.body62:                                       ; preds = %for.cond59
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !1798, metadata !67), !dbg !1800
  %41 = load i32, i32* %i, align 4, !dbg !1801
  %idxprom63 = sext i32 %41 to i64, !dbg !1802
  %arrayidx64 = getelementptr inbounds [4 x i8], [4 x i8]* @ff_h264_luma_dc_dequant_idct_8_c.x_offset, i64 0, i64 %idxprom63, !dbg !1802
  %42 = load i8, i8* %arrayidx64, align 1, !dbg !1802
  %conv65 = zext i8 %42 to i32, !dbg !1802
  store i32 %conv65, i32* %offset, align 4, !dbg !1800
  call void @llvm.dbg.declare(metadata i32* %z066, metadata !1803, metadata !67), !dbg !1804
  %43 = load i32, i32* %i, align 4, !dbg !1805
  %add67 = add nsw i32 0, %43, !dbg !1806
  %idxprom68 = sext i32 %add67 to i64, !dbg !1807
  %arrayidx69 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom68, !dbg !1807
  %44 = load i32, i32* %arrayidx69, align 4, !dbg !1807
  %45 = load i32, i32* %i, align 4, !dbg !1808
  %add70 = add nsw i32 8, %45, !dbg !1809
  %idxprom71 = sext i32 %add70 to i64, !dbg !1810
  %arrayidx72 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom71, !dbg !1810
  %46 = load i32, i32* %arrayidx72, align 4, !dbg !1810
  %add73 = add nsw i32 %44, %46, !dbg !1811
  store i32 %add73, i32* %z066, align 4, !dbg !1804
  call void @llvm.dbg.declare(metadata i32* %z174, metadata !1812, metadata !67), !dbg !1813
  %47 = load i32, i32* %i, align 4, !dbg !1814
  %add75 = add nsw i32 0, %47, !dbg !1815
  %idxprom76 = sext i32 %add75 to i64, !dbg !1816
  %arrayidx77 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom76, !dbg !1816
  %48 = load i32, i32* %arrayidx77, align 4, !dbg !1816
  %49 = load i32, i32* %i, align 4, !dbg !1817
  %add78 = add nsw i32 8, %49, !dbg !1818
  %idxprom79 = sext i32 %add78 to i64, !dbg !1819
  %arrayidx80 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom79, !dbg !1819
  %50 = load i32, i32* %arrayidx80, align 4, !dbg !1819
  %sub81 = sub nsw i32 %48, %50, !dbg !1820
  store i32 %sub81, i32* %z174, align 4, !dbg !1813
  call void @llvm.dbg.declare(metadata i32* %z282, metadata !1821, metadata !67), !dbg !1822
  %51 = load i32, i32* %i, align 4, !dbg !1823
  %add83 = add nsw i32 4, %51, !dbg !1824
  %idxprom84 = sext i32 %add83 to i64, !dbg !1825
  %arrayidx85 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom84, !dbg !1825
  %52 = load i32, i32* %arrayidx85, align 4, !dbg !1825
  %53 = load i32, i32* %i, align 4, !dbg !1826
  %add86 = add nsw i32 12, %53, !dbg !1827
  %idxprom87 = sext i32 %add86 to i64, !dbg !1828
  %arrayidx88 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom87, !dbg !1828
  %54 = load i32, i32* %arrayidx88, align 4, !dbg !1828
  %sub89 = sub nsw i32 %52, %54, !dbg !1829
  store i32 %sub89, i32* %z282, align 4, !dbg !1822
  call void @llvm.dbg.declare(metadata i32* %z390, metadata !1830, metadata !67), !dbg !1831
  %55 = load i32, i32* %i, align 4, !dbg !1832
  %add91 = add nsw i32 4, %55, !dbg !1833
  %idxprom92 = sext i32 %add91 to i64, !dbg !1834
  %arrayidx93 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom92, !dbg !1834
  %56 = load i32, i32* %arrayidx93, align 4, !dbg !1834
  %57 = load i32, i32* %i, align 4, !dbg !1835
  %add94 = add nsw i32 12, %57, !dbg !1836
  %idxprom95 = sext i32 %add94 to i64, !dbg !1837
  %arrayidx96 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom95, !dbg !1837
  %58 = load i32, i32* %arrayidx96, align 4, !dbg !1837
  %add97 = add nsw i32 %56, %58, !dbg !1838
  store i32 %add97, i32* %z390, align 4, !dbg !1831
  %59 = load i32, i32* %z066, align 4, !dbg !1839
  %60 = load i32, i32* %z390, align 4, !dbg !1840
  %add98 = add i32 %59, %60, !dbg !1841
  %61 = load i32, i32* %qmul.addr, align 4, !dbg !1842
  %mul99 = mul i32 %add98, %61, !dbg !1843
  %add100 = add i32 %mul99, 128, !dbg !1844
  %shr = ashr i32 %add100, 8, !dbg !1845
  %conv101 = trunc i32 %shr to i16, !dbg !1846
  %62 = load i32, i32* %offset, align 4, !dbg !1847
  %add102 = add nsw i32 0, %62, !dbg !1848
  %idxprom103 = sext i32 %add102 to i64, !dbg !1849
  %63 = load i16*, i16** %output, align 8, !dbg !1849
  %arrayidx104 = getelementptr inbounds i16, i16* %63, i64 %idxprom103, !dbg !1849
  store i16 %conv101, i16* %arrayidx104, align 2, !dbg !1850
  %64 = load i32, i32* %z174, align 4, !dbg !1851
  %65 = load i32, i32* %z282, align 4, !dbg !1852
  %add105 = add i32 %64, %65, !dbg !1853
  %66 = load i32, i32* %qmul.addr, align 4, !dbg !1854
  %mul106 = mul i32 %add105, %66, !dbg !1855
  %add107 = add i32 %mul106, 128, !dbg !1856
  %shr108 = ashr i32 %add107, 8, !dbg !1857
  %conv109 = trunc i32 %shr108 to i16, !dbg !1858
  %67 = load i32, i32* %offset, align 4, !dbg !1859
  %add110 = add nsw i32 16, %67, !dbg !1860
  %idxprom111 = sext i32 %add110 to i64, !dbg !1861
  %68 = load i16*, i16** %output, align 8, !dbg !1861
  %arrayidx112 = getelementptr inbounds i16, i16* %68, i64 %idxprom111, !dbg !1861
  store i16 %conv109, i16* %arrayidx112, align 2, !dbg !1862
  %69 = load i32, i32* %z174, align 4, !dbg !1863
  %70 = load i32, i32* %z282, align 4, !dbg !1864
  %sub113 = sub i32 %69, %70, !dbg !1865
  %71 = load i32, i32* %qmul.addr, align 4, !dbg !1866
  %mul114 = mul i32 %sub113, %71, !dbg !1867
  %add115 = add i32 %mul114, 128, !dbg !1868
  %shr116 = ashr i32 %add115, 8, !dbg !1869
  %conv117 = trunc i32 %shr116 to i16, !dbg !1870
  %72 = load i32, i32* %offset, align 4, !dbg !1871
  %add118 = add nsw i32 64, %72, !dbg !1872
  %idxprom119 = sext i32 %add118 to i64, !dbg !1873
  %73 = load i16*, i16** %output, align 8, !dbg !1873
  %arrayidx120 = getelementptr inbounds i16, i16* %73, i64 %idxprom119, !dbg !1873
  store i16 %conv117, i16* %arrayidx120, align 2, !dbg !1874
  %74 = load i32, i32* %z066, align 4, !dbg !1875
  %75 = load i32, i32* %z390, align 4, !dbg !1876
  %sub121 = sub i32 %74, %75, !dbg !1877
  %76 = load i32, i32* %qmul.addr, align 4, !dbg !1878
  %mul122 = mul i32 %sub121, %76, !dbg !1879
  %add123 = add i32 %mul122, 128, !dbg !1880
  %shr124 = ashr i32 %add123, 8, !dbg !1881
  %conv125 = trunc i32 %shr124 to i16, !dbg !1882
  %77 = load i32, i32* %offset, align 4, !dbg !1883
  %add126 = add nsw i32 80, %77, !dbg !1884
  %idxprom127 = sext i32 %add126 to i64, !dbg !1885
  %78 = load i16*, i16** %output, align 8, !dbg !1885
  %arrayidx128 = getelementptr inbounds i16, i16* %78, i64 %idxprom127, !dbg !1885
  store i16 %conv125, i16* %arrayidx128, align 2, !dbg !1886
  br label %for.inc129, !dbg !1887

for.inc129:                                       ; preds = %for.body62
  %79 = load i32, i32* %i, align 4, !dbg !1888
  %inc130 = add nsw i32 %79, 1, !dbg !1888
  store i32 %inc130, i32* %i, align 4, !dbg !1888
  br label %for.cond59, !dbg !1890, !llvm.loop !1891

for.end131:                                       ; preds = %for.cond59
  ret void, !dbg !1893
}

; Function Attrs: nounwind uwtable
define void @ff_h264_chroma422_dc_dequant_idct_8_c(i16* %_block, i32 %qmul) #0 !dbg !29 {
entry:
  %_block.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %stride = alloca i32, align 4
  %xStride = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca [8 x i32], align 16
  %block = alloca i16*, align 8
  %offset = alloca i32, align 4
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !1894, metadata !67), !dbg !1895
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !1896, metadata !67), !dbg !1897
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !1898, metadata !67), !dbg !1899
  store i32 32, i32* %stride, align 4, !dbg !1899
  call void @llvm.dbg.declare(metadata i32* %xStride, metadata !1900, metadata !67), !dbg !1901
  store i32 16, i32* %xStride, align 4, !dbg !1901
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1902, metadata !67), !dbg !1903
  call void @llvm.dbg.declare(metadata [8 x i32]* %temp, metadata !1904, metadata !67), !dbg !1908
  call void @llvm.dbg.declare(metadata i16** %block, metadata !1909, metadata !67), !dbg !1910
  %0 = load i16*, i16** %_block.addr, align 8, !dbg !1911
  store i16* %0, i16** %block, align 8, !dbg !1910
  store i32 0, i32* %i, align 4, !dbg !1912
  br label %for.cond, !dbg !1914

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !1915
  %cmp = icmp slt i32 %1, 4, !dbg !1918
  br i1 %cmp, label %for.body, label %for.end, !dbg !1919

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !1920
  %mul = mul nsw i32 32, %2, !dbg !1922
  %add = add nsw i32 %mul, 0, !dbg !1923
  %idxprom = sext i32 %add to i64, !dbg !1924
  %3 = load i16*, i16** %block, align 8, !dbg !1924
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !1924
  %4 = load i16, i16* %arrayidx, align 2, !dbg !1924
  %conv = sext i16 %4 to i32, !dbg !1924
  %5 = load i32, i32* %i, align 4, !dbg !1925
  %mul1 = mul nsw i32 32, %5, !dbg !1926
  %add2 = add nsw i32 %mul1, 16, !dbg !1927
  %idxprom3 = sext i32 %add2 to i64, !dbg !1928
  %6 = load i16*, i16** %block, align 8, !dbg !1928
  %arrayidx4 = getelementptr inbounds i16, i16* %6, i64 %idxprom3, !dbg !1928
  %7 = load i16, i16* %arrayidx4, align 2, !dbg !1928
  %conv5 = sext i16 %7 to i32, !dbg !1928
  %add6 = add nsw i32 %conv, %conv5, !dbg !1929
  %8 = load i32, i32* %i, align 4, !dbg !1930
  %mul7 = mul nsw i32 2, %8, !dbg !1931
  %add8 = add nsw i32 %mul7, 0, !dbg !1932
  %idxprom9 = sext i32 %add8 to i64, !dbg !1933
  %arrayidx10 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom9, !dbg !1933
  store i32 %add6, i32* %arrayidx10, align 4, !dbg !1934
  %9 = load i32, i32* %i, align 4, !dbg !1935
  %mul11 = mul nsw i32 32, %9, !dbg !1936
  %add12 = add nsw i32 %mul11, 0, !dbg !1937
  %idxprom13 = sext i32 %add12 to i64, !dbg !1938
  %10 = load i16*, i16** %block, align 8, !dbg !1938
  %arrayidx14 = getelementptr inbounds i16, i16* %10, i64 %idxprom13, !dbg !1938
  %11 = load i16, i16* %arrayidx14, align 2, !dbg !1938
  %conv15 = sext i16 %11 to i32, !dbg !1938
  %12 = load i32, i32* %i, align 4, !dbg !1939
  %mul16 = mul nsw i32 32, %12, !dbg !1940
  %add17 = add nsw i32 %mul16, 16, !dbg !1941
  %idxprom18 = sext i32 %add17 to i64, !dbg !1942
  %13 = load i16*, i16** %block, align 8, !dbg !1942
  %arrayidx19 = getelementptr inbounds i16, i16* %13, i64 %idxprom18, !dbg !1942
  %14 = load i16, i16* %arrayidx19, align 2, !dbg !1942
  %conv20 = sext i16 %14 to i32, !dbg !1942
  %sub = sub nsw i32 %conv15, %conv20, !dbg !1943
  %15 = load i32, i32* %i, align 4, !dbg !1944
  %mul21 = mul nsw i32 2, %15, !dbg !1945
  %add22 = add nsw i32 %mul21, 1, !dbg !1946
  %idxprom23 = sext i32 %add22 to i64, !dbg !1947
  %arrayidx24 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom23, !dbg !1947
  store i32 %sub, i32* %arrayidx24, align 4, !dbg !1948
  br label %for.inc, !dbg !1949

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !1950
  %inc = add nsw i32 %16, 1, !dbg !1950
  store i32 %inc, i32* %i, align 4, !dbg !1950
  br label %for.cond, !dbg !1952, !llvm.loop !1953

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !1955
  br label %for.cond25, !dbg !1957

for.cond25:                                       ; preds = %for.inc91, %for.end
  %17 = load i32, i32* %i, align 4, !dbg !1958
  %cmp26 = icmp slt i32 %17, 2, !dbg !1961
  br i1 %cmp26, label %for.body28, label %for.end93, !dbg !1962

for.body28:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !1963, metadata !67), !dbg !1965
  %18 = load i32, i32* %i, align 4, !dbg !1966
  %idxprom29 = sext i32 %18 to i64, !dbg !1967
  %arrayidx30 = getelementptr inbounds [2 x i8], [2 x i8]* @ff_h264_chroma422_dc_dequant_idct_8_c.x_offset, i64 0, i64 %idxprom29, !dbg !1967
  %19 = load i8, i8* %arrayidx30, align 1, !dbg !1967
  %conv31 = zext i8 %19 to i32, !dbg !1967
  store i32 %conv31, i32* %offset, align 4, !dbg !1965
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !1968, metadata !67), !dbg !1969
  %20 = load i32, i32* %i, align 4, !dbg !1970
  %add32 = add nsw i32 0, %20, !dbg !1971
  %idxprom33 = sext i32 %add32 to i64, !dbg !1972
  %arrayidx34 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom33, !dbg !1972
  %21 = load i32, i32* %arrayidx34, align 4, !dbg !1972
  %22 = load i32, i32* %i, align 4, !dbg !1973
  %add35 = add nsw i32 4, %22, !dbg !1974
  %idxprom36 = sext i32 %add35 to i64, !dbg !1975
  %arrayidx37 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom36, !dbg !1975
  %23 = load i32, i32* %arrayidx37, align 4, !dbg !1975
  %add38 = add nsw i32 %21, %23, !dbg !1976
  store i32 %add38, i32* %z0, align 4, !dbg !1969
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !1977, metadata !67), !dbg !1978
  %24 = load i32, i32* %i, align 4, !dbg !1979
  %add39 = add nsw i32 0, %24, !dbg !1980
  %idxprom40 = sext i32 %add39 to i64, !dbg !1981
  %arrayidx41 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom40, !dbg !1981
  %25 = load i32, i32* %arrayidx41, align 4, !dbg !1981
  %26 = load i32, i32* %i, align 4, !dbg !1982
  %add42 = add nsw i32 4, %26, !dbg !1983
  %idxprom43 = sext i32 %add42 to i64, !dbg !1984
  %arrayidx44 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom43, !dbg !1984
  %27 = load i32, i32* %arrayidx44, align 4, !dbg !1984
  %sub45 = sub nsw i32 %25, %27, !dbg !1985
  store i32 %sub45, i32* %z1, align 4, !dbg !1978
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !1986, metadata !67), !dbg !1987
  %28 = load i32, i32* %i, align 4, !dbg !1988
  %add46 = add nsw i32 2, %28, !dbg !1989
  %idxprom47 = sext i32 %add46 to i64, !dbg !1990
  %arrayidx48 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom47, !dbg !1990
  %29 = load i32, i32* %arrayidx48, align 4, !dbg !1990
  %30 = load i32, i32* %i, align 4, !dbg !1991
  %add49 = add nsw i32 6, %30, !dbg !1992
  %idxprom50 = sext i32 %add49 to i64, !dbg !1993
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom50, !dbg !1993
  %31 = load i32, i32* %arrayidx51, align 4, !dbg !1993
  %sub52 = sub nsw i32 %29, %31, !dbg !1994
  store i32 %sub52, i32* %z2, align 4, !dbg !1987
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !1995, metadata !67), !dbg !1996
  %32 = load i32, i32* %i, align 4, !dbg !1997
  %add53 = add nsw i32 2, %32, !dbg !1998
  %idxprom54 = sext i32 %add53 to i64, !dbg !1999
  %arrayidx55 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom54, !dbg !1999
  %33 = load i32, i32* %arrayidx55, align 4, !dbg !1999
  %34 = load i32, i32* %i, align 4, !dbg !2000
  %add56 = add nsw i32 6, %34, !dbg !2001
  %idxprom57 = sext i32 %add56 to i64, !dbg !2002
  %arrayidx58 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom57, !dbg !2002
  %35 = load i32, i32* %arrayidx58, align 4, !dbg !2002
  %add59 = add nsw i32 %33, %35, !dbg !2003
  store i32 %add59, i32* %z3, align 4, !dbg !1996
  %36 = load i32, i32* %z0, align 4, !dbg !2004
  %37 = load i32, i32* %z3, align 4, !dbg !2005
  %add60 = add i32 %36, %37, !dbg !2006
  %38 = load i32, i32* %qmul.addr, align 4, !dbg !2007
  %mul61 = mul i32 %add60, %38, !dbg !2008
  %add62 = add i32 %mul61, 128, !dbg !2009
  %shr = ashr i32 %add62, 8, !dbg !2010
  %conv63 = trunc i32 %shr to i16, !dbg !2011
  %39 = load i32, i32* %offset, align 4, !dbg !2012
  %add64 = add nsw i32 0, %39, !dbg !2013
  %idxprom65 = sext i32 %add64 to i64, !dbg !2014
  %40 = load i16*, i16** %block, align 8, !dbg !2014
  %arrayidx66 = getelementptr inbounds i16, i16* %40, i64 %idxprom65, !dbg !2014
  store i16 %conv63, i16* %arrayidx66, align 2, !dbg !2015
  %41 = load i32, i32* %z1, align 4, !dbg !2016
  %42 = load i32, i32* %z2, align 4, !dbg !2017
  %add67 = add i32 %41, %42, !dbg !2018
  %43 = load i32, i32* %qmul.addr, align 4, !dbg !2019
  %mul68 = mul i32 %add67, %43, !dbg !2020
  %add69 = add i32 %mul68, 128, !dbg !2021
  %shr70 = ashr i32 %add69, 8, !dbg !2022
  %conv71 = trunc i32 %shr70 to i16, !dbg !2023
  %44 = load i32, i32* %offset, align 4, !dbg !2024
  %add72 = add nsw i32 32, %44, !dbg !2025
  %idxprom73 = sext i32 %add72 to i64, !dbg !2026
  %45 = load i16*, i16** %block, align 8, !dbg !2026
  %arrayidx74 = getelementptr inbounds i16, i16* %45, i64 %idxprom73, !dbg !2026
  store i16 %conv71, i16* %arrayidx74, align 2, !dbg !2027
  %46 = load i32, i32* %z1, align 4, !dbg !2028
  %47 = load i32, i32* %z2, align 4, !dbg !2029
  %sub75 = sub i32 %46, %47, !dbg !2030
  %48 = load i32, i32* %qmul.addr, align 4, !dbg !2031
  %mul76 = mul i32 %sub75, %48, !dbg !2032
  %add77 = add i32 %mul76, 128, !dbg !2033
  %shr78 = ashr i32 %add77, 8, !dbg !2034
  %conv79 = trunc i32 %shr78 to i16, !dbg !2035
  %49 = load i32, i32* %offset, align 4, !dbg !2036
  %add80 = add nsw i32 64, %49, !dbg !2037
  %idxprom81 = sext i32 %add80 to i64, !dbg !2038
  %50 = load i16*, i16** %block, align 8, !dbg !2038
  %arrayidx82 = getelementptr inbounds i16, i16* %50, i64 %idxprom81, !dbg !2038
  store i16 %conv79, i16* %arrayidx82, align 2, !dbg !2039
  %51 = load i32, i32* %z0, align 4, !dbg !2040
  %52 = load i32, i32* %z3, align 4, !dbg !2041
  %sub83 = sub i32 %51, %52, !dbg !2042
  %53 = load i32, i32* %qmul.addr, align 4, !dbg !2043
  %mul84 = mul i32 %sub83, %53, !dbg !2044
  %add85 = add i32 %mul84, 128, !dbg !2045
  %shr86 = ashr i32 %add85, 8, !dbg !2046
  %conv87 = trunc i32 %shr86 to i16, !dbg !2047
  %54 = load i32, i32* %offset, align 4, !dbg !2048
  %add88 = add nsw i32 96, %54, !dbg !2049
  %idxprom89 = sext i32 %add88 to i64, !dbg !2050
  %55 = load i16*, i16** %block, align 8, !dbg !2050
  %arrayidx90 = getelementptr inbounds i16, i16* %55, i64 %idxprom89, !dbg !2050
  store i16 %conv87, i16* %arrayidx90, align 2, !dbg !2051
  br label %for.inc91, !dbg !2052

for.inc91:                                        ; preds = %for.body28
  %56 = load i32, i32* %i, align 4, !dbg !2053
  %inc92 = add nsw i32 %56, 1, !dbg !2053
  store i32 %inc92, i32* %i, align 4, !dbg !2053
  br label %for.cond25, !dbg !2055, !llvm.loop !2056

for.end93:                                        ; preds = %for.cond25
  ret void, !dbg !2058
}

; Function Attrs: nounwind uwtable
define void @ff_h264_chroma_dc_dequant_idct_8_c(i16* %_block, i32 %qmul) #0 !dbg !2059 {
entry:
  %_block.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %stride = alloca i32, align 4
  %xStride = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %block = alloca i16*, align 8
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !2060, metadata !67), !dbg !2061
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !2062, metadata !67), !dbg !2063
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !2064, metadata !67), !dbg !2065
  store i32 32, i32* %stride, align 4, !dbg !2065
  call void @llvm.dbg.declare(metadata i32* %xStride, metadata !2066, metadata !67), !dbg !2067
  store i32 16, i32* %xStride, align 4, !dbg !2067
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2068, metadata !67), !dbg !2069
  call void @llvm.dbg.declare(metadata i32* %b, metadata !2070, metadata !67), !dbg !2071
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2072, metadata !67), !dbg !2073
  call void @llvm.dbg.declare(metadata i32* %d, metadata !2074, metadata !67), !dbg !2075
  call void @llvm.dbg.declare(metadata i32* %e, metadata !2076, metadata !67), !dbg !2077
  call void @llvm.dbg.declare(metadata i16** %block, metadata !2078, metadata !67), !dbg !2079
  %0 = load i16*, i16** %_block.addr, align 8, !dbg !2080
  store i16* %0, i16** %block, align 8, !dbg !2079
  %1 = load i16*, i16** %block, align 8, !dbg !2081
  %arrayidx = getelementptr inbounds i16, i16* %1, i64 0, !dbg !2081
  %2 = load i16, i16* %arrayidx, align 2, !dbg !2081
  %conv = sext i16 %2 to i32, !dbg !2081
  store i32 %conv, i32* %a, align 4, !dbg !2082
  %3 = load i16*, i16** %block, align 8, !dbg !2083
  %arrayidx1 = getelementptr inbounds i16, i16* %3, i64 16, !dbg !2083
  %4 = load i16, i16* %arrayidx1, align 2, !dbg !2083
  %conv2 = sext i16 %4 to i32, !dbg !2083
  store i32 %conv2, i32* %b, align 4, !dbg !2084
  %5 = load i16*, i16** %block, align 8, !dbg !2085
  %arrayidx3 = getelementptr inbounds i16, i16* %5, i64 32, !dbg !2085
  %6 = load i16, i16* %arrayidx3, align 2, !dbg !2085
  %conv4 = sext i16 %6 to i32, !dbg !2085
  store i32 %conv4, i32* %c, align 4, !dbg !2086
  %7 = load i16*, i16** %block, align 8, !dbg !2087
  %arrayidx5 = getelementptr inbounds i16, i16* %7, i64 48, !dbg !2087
  %8 = load i16, i16* %arrayidx5, align 2, !dbg !2087
  %conv6 = sext i16 %8 to i32, !dbg !2087
  store i32 %conv6, i32* %d, align 4, !dbg !2088
  %9 = load i32, i32* %a, align 4, !dbg !2089
  %10 = load i32, i32* %b, align 4, !dbg !2090
  %sub = sub i32 %9, %10, !dbg !2091
  store i32 %sub, i32* %e, align 4, !dbg !2092
  %11 = load i32, i32* %a, align 4, !dbg !2093
  %12 = load i32, i32* %b, align 4, !dbg !2094
  %add = add i32 %11, %12, !dbg !2095
  store i32 %add, i32* %a, align 4, !dbg !2096
  %13 = load i32, i32* %c, align 4, !dbg !2097
  %14 = load i32, i32* %d, align 4, !dbg !2098
  %sub7 = sub i32 %13, %14, !dbg !2099
  store i32 %sub7, i32* %b, align 4, !dbg !2100
  %15 = load i32, i32* %c, align 4, !dbg !2101
  %16 = load i32, i32* %d, align 4, !dbg !2102
  %add8 = add i32 %15, %16, !dbg !2103
  store i32 %add8, i32* %c, align 4, !dbg !2104
  %17 = load i32, i32* %a, align 4, !dbg !2105
  %18 = load i32, i32* %c, align 4, !dbg !2106
  %add9 = add i32 %17, %18, !dbg !2107
  %19 = load i32, i32* %qmul.addr, align 4, !dbg !2108
  %mul = mul i32 %add9, %19, !dbg !2109
  %shr = ashr i32 %mul, 7, !dbg !2110
  %conv10 = trunc i32 %shr to i16, !dbg !2111
  %20 = load i16*, i16** %block, align 8, !dbg !2112
  %arrayidx11 = getelementptr inbounds i16, i16* %20, i64 0, !dbg !2112
  store i16 %conv10, i16* %arrayidx11, align 2, !dbg !2113
  %21 = load i32, i32* %e, align 4, !dbg !2114
  %22 = load i32, i32* %b, align 4, !dbg !2115
  %add12 = add i32 %21, %22, !dbg !2116
  %23 = load i32, i32* %qmul.addr, align 4, !dbg !2117
  %mul13 = mul i32 %add12, %23, !dbg !2118
  %shr14 = ashr i32 %mul13, 7, !dbg !2119
  %conv15 = trunc i32 %shr14 to i16, !dbg !2120
  %24 = load i16*, i16** %block, align 8, !dbg !2121
  %arrayidx16 = getelementptr inbounds i16, i16* %24, i64 16, !dbg !2121
  store i16 %conv15, i16* %arrayidx16, align 2, !dbg !2122
  %25 = load i32, i32* %a, align 4, !dbg !2123
  %26 = load i32, i32* %c, align 4, !dbg !2124
  %sub17 = sub i32 %25, %26, !dbg !2125
  %27 = load i32, i32* %qmul.addr, align 4, !dbg !2126
  %mul18 = mul i32 %sub17, %27, !dbg !2127
  %shr19 = ashr i32 %mul18, 7, !dbg !2128
  %conv20 = trunc i32 %shr19 to i16, !dbg !2129
  %28 = load i16*, i16** %block, align 8, !dbg !2130
  %arrayidx21 = getelementptr inbounds i16, i16* %28, i64 32, !dbg !2130
  store i16 %conv20, i16* %arrayidx21, align 2, !dbg !2131
  %29 = load i32, i32* %e, align 4, !dbg !2132
  %30 = load i32, i32* %b, align 4, !dbg !2133
  %sub22 = sub i32 %29, %30, !dbg !2134
  %31 = load i32, i32* %qmul.addr, align 4, !dbg !2135
  %mul23 = mul i32 %sub22, %31, !dbg !2136
  %shr24 = ashr i32 %mul23, 7, !dbg !2137
  %conv25 = trunc i32 %shr24 to i16, !dbg !2138
  %32 = load i16*, i16** %block, align 8, !dbg !2139
  %arrayidx26 = getelementptr inbounds i16, i16* %32, i64 48, !dbg !2139
  store i16 %conv25, i16* %arrayidx26, align 2, !dbg !2140
  ret void, !dbg !2141
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add_9_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !2142 {
entry:
  %retval.i178 = alloca i32, align 4
  %a.addr.i179 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i179, metadata !2143, metadata !67), !dbg !2147
  %p.addr.i180 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i180, metadata !2152, metadata !67), !dbg !2153
  %retval.i162 = alloca i32, align 4
  %a.addr.i163 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i163, metadata !2143, metadata !67), !dbg !2154
  %p.addr.i164 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i164, metadata !2152, metadata !67), !dbg !2156
  %retval.i146 = alloca i32, align 4
  %a.addr.i147 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i147, metadata !2143, metadata !67), !dbg !2157
  %p.addr.i148 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i148, metadata !2152, metadata !67), !dbg !2159
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !2160
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !2162
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  %z048 = alloca i32, align 4
  %z157 = alloca i32, align 4
  %z267 = alloca i32, align 4
  %z378 = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !2163, metadata !67), !dbg !2164
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !2165, metadata !67), !dbg !2166
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !2167, metadata !67), !dbg !2168
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2169, metadata !67), !dbg !2170
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !2171, metadata !67), !dbg !2172
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !2173
  %1 = bitcast i8* %0 to i16*, !dbg !2174
  store i16* %1, i16** %dst, align 8, !dbg !2172
  call void @llvm.dbg.declare(metadata i32** %block, metadata !2175, metadata !67), !dbg !2176
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !2177
  %3 = bitcast i16* %2 to i32*, !dbg !2178
  store i32* %3, i32** %block, align 8, !dbg !2176
  %4 = load i32, i32* %stride.addr, align 4, !dbg !2179
  %shr = ashr i32 %4, 1, !dbg !2179
  store i32 %shr, i32* %stride.addr, align 4, !dbg !2179
  %5 = load i32*, i32** %block, align 8, !dbg !2180
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !2180
  %6 = load i32, i32* %arrayidx, align 4, !dbg !2181
  %add = add nsw i32 %6, 32, !dbg !2181
  store i32 %add, i32* %arrayidx, align 4, !dbg !2181
  store i32 0, i32* %i, align 4, !dbg !2182
  br label %for.cond, !dbg !2184

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !2185
  %cmp = icmp slt i32 %7, 4, !dbg !2188
  br i1 %cmp, label %for.body, label %for.end, !dbg !2189

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !2190, metadata !67), !dbg !2192
  %8 = load i32, i32* %i, align 4, !dbg !2193
  %add1 = add nsw i32 %8, 0, !dbg !2194
  %idxprom = sext i32 %add1 to i64, !dbg !2195
  %9 = load i32*, i32** %block, align 8, !dbg !2195
  %arrayidx2 = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !2195
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !2195
  %11 = load i32, i32* %i, align 4, !dbg !2196
  %add3 = add nsw i32 %11, 8, !dbg !2197
  %idxprom4 = sext i32 %add3 to i64, !dbg !2198
  %12 = load i32*, i32** %block, align 8, !dbg !2198
  %arrayidx5 = getelementptr inbounds i32, i32* %12, i64 %idxprom4, !dbg !2198
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !2198
  %add6 = add i32 %10, %13, !dbg !2199
  store i32 %add6, i32* %z0, align 4, !dbg !2192
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !2200, metadata !67), !dbg !2201
  %14 = load i32, i32* %i, align 4, !dbg !2202
  %add7 = add nsw i32 %14, 0, !dbg !2203
  %idxprom8 = sext i32 %add7 to i64, !dbg !2204
  %15 = load i32*, i32** %block, align 8, !dbg !2204
  %arrayidx9 = getelementptr inbounds i32, i32* %15, i64 %idxprom8, !dbg !2204
  %16 = load i32, i32* %arrayidx9, align 4, !dbg !2204
  %17 = load i32, i32* %i, align 4, !dbg !2205
  %add10 = add nsw i32 %17, 8, !dbg !2206
  %idxprom11 = sext i32 %add10 to i64, !dbg !2207
  %18 = load i32*, i32** %block, align 8, !dbg !2207
  %arrayidx12 = getelementptr inbounds i32, i32* %18, i64 %idxprom11, !dbg !2207
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !2207
  %sub = sub i32 %16, %19, !dbg !2208
  store i32 %sub, i32* %z1, align 4, !dbg !2201
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !2209, metadata !67), !dbg !2210
  %20 = load i32, i32* %i, align 4, !dbg !2211
  %add13 = add nsw i32 %20, 4, !dbg !2212
  %idxprom14 = sext i32 %add13 to i64, !dbg !2213
  %21 = load i32*, i32** %block, align 8, !dbg !2213
  %arrayidx15 = getelementptr inbounds i32, i32* %21, i64 %idxprom14, !dbg !2213
  %22 = load i32, i32* %arrayidx15, align 4, !dbg !2213
  %shr16 = ashr i32 %22, 1, !dbg !2214
  %23 = load i32, i32* %i, align 4, !dbg !2215
  %add17 = add nsw i32 %23, 12, !dbg !2216
  %idxprom18 = sext i32 %add17 to i64, !dbg !2217
  %24 = load i32*, i32** %block, align 8, !dbg !2217
  %arrayidx19 = getelementptr inbounds i32, i32* %24, i64 %idxprom18, !dbg !2217
  %25 = load i32, i32* %arrayidx19, align 4, !dbg !2217
  %sub20 = sub i32 %shr16, %25, !dbg !2218
  store i32 %sub20, i32* %z2, align 4, !dbg !2210
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !2219, metadata !67), !dbg !2220
  %26 = load i32, i32* %i, align 4, !dbg !2221
  %add21 = add nsw i32 %26, 4, !dbg !2222
  %idxprom22 = sext i32 %add21 to i64, !dbg !2223
  %27 = load i32*, i32** %block, align 8, !dbg !2223
  %arrayidx23 = getelementptr inbounds i32, i32* %27, i64 %idxprom22, !dbg !2223
  %28 = load i32, i32* %arrayidx23, align 4, !dbg !2223
  %29 = load i32, i32* %i, align 4, !dbg !2224
  %add24 = add nsw i32 %29, 12, !dbg !2225
  %idxprom25 = sext i32 %add24 to i64, !dbg !2226
  %30 = load i32*, i32** %block, align 8, !dbg !2226
  %arrayidx26 = getelementptr inbounds i32, i32* %30, i64 %idxprom25, !dbg !2226
  %31 = load i32, i32* %arrayidx26, align 4, !dbg !2226
  %shr27 = ashr i32 %31, 1, !dbg !2227
  %add28 = add i32 %28, %shr27, !dbg !2228
  store i32 %add28, i32* %z3, align 4, !dbg !2220
  %32 = load i32, i32* %z0, align 4, !dbg !2229
  %33 = load i32, i32* %z3, align 4, !dbg !2230
  %add29 = add i32 %32, %33, !dbg !2231
  %34 = load i32, i32* %i, align 4, !dbg !2232
  %add30 = add nsw i32 %34, 0, !dbg !2233
  %idxprom31 = sext i32 %add30 to i64, !dbg !2234
  %35 = load i32*, i32** %block, align 8, !dbg !2234
  %arrayidx32 = getelementptr inbounds i32, i32* %35, i64 %idxprom31, !dbg !2234
  store i32 %add29, i32* %arrayidx32, align 4, !dbg !2235
  %36 = load i32, i32* %z1, align 4, !dbg !2236
  %37 = load i32, i32* %z2, align 4, !dbg !2237
  %add33 = add i32 %36, %37, !dbg !2238
  %38 = load i32, i32* %i, align 4, !dbg !2239
  %add34 = add nsw i32 %38, 4, !dbg !2240
  %idxprom35 = sext i32 %add34 to i64, !dbg !2241
  %39 = load i32*, i32** %block, align 8, !dbg !2241
  %arrayidx36 = getelementptr inbounds i32, i32* %39, i64 %idxprom35, !dbg !2241
  store i32 %add33, i32* %arrayidx36, align 4, !dbg !2242
  %40 = load i32, i32* %z1, align 4, !dbg !2243
  %41 = load i32, i32* %z2, align 4, !dbg !2244
  %sub37 = sub i32 %40, %41, !dbg !2245
  %42 = load i32, i32* %i, align 4, !dbg !2246
  %add38 = add nsw i32 %42, 8, !dbg !2247
  %idxprom39 = sext i32 %add38 to i64, !dbg !2248
  %43 = load i32*, i32** %block, align 8, !dbg !2248
  %arrayidx40 = getelementptr inbounds i32, i32* %43, i64 %idxprom39, !dbg !2248
  store i32 %sub37, i32* %arrayidx40, align 4, !dbg !2249
  %44 = load i32, i32* %z0, align 4, !dbg !2250
  %45 = load i32, i32* %z3, align 4, !dbg !2251
  %sub41 = sub i32 %44, %45, !dbg !2252
  %46 = load i32, i32* %i, align 4, !dbg !2253
  %add42 = add nsw i32 %46, 12, !dbg !2254
  %idxprom43 = sext i32 %add42 to i64, !dbg !2255
  %47 = load i32*, i32** %block, align 8, !dbg !2255
  %arrayidx44 = getelementptr inbounds i32, i32* %47, i64 %idxprom43, !dbg !2255
  store i32 %sub41, i32* %arrayidx44, align 4, !dbg !2256
  br label %for.inc, !dbg !2257

for.inc:                                          ; preds = %for.body
  %48 = load i32, i32* %i, align 4, !dbg !2258
  %inc = add nsw i32 %48, 1, !dbg !2258
  store i32 %inc, i32* %i, align 4, !dbg !2258
  br label %for.cond, !dbg !2260, !llvm.loop !2261

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !2263
  br label %for.cond45, !dbg !2264

for.cond45:                                       ; preds = %for.inc143, %for.end
  %49 = load i32, i32* %i, align 4, !dbg !2265
  %cmp46 = icmp slt i32 %49, 4, !dbg !2267
  br i1 %cmp46, label %for.body47, label %for.end145, !dbg !2268

for.body47:                                       ; preds = %for.cond45
  call void @llvm.dbg.declare(metadata i32* %z048, metadata !2269, metadata !67), !dbg !2270
  %50 = load i32, i32* %i, align 4, !dbg !2271
  %mul = mul nsw i32 4, %50, !dbg !2272
  %add49 = add nsw i32 0, %mul, !dbg !2273
  %idxprom50 = sext i32 %add49 to i64, !dbg !2274
  %51 = load i32*, i32** %block, align 8, !dbg !2274
  %arrayidx51 = getelementptr inbounds i32, i32* %51, i64 %idxprom50, !dbg !2274
  %52 = load i32, i32* %arrayidx51, align 4, !dbg !2274
  %53 = load i32, i32* %i, align 4, !dbg !2275
  %mul52 = mul nsw i32 4, %53, !dbg !2276
  %add53 = add nsw i32 2, %mul52, !dbg !2277
  %idxprom54 = sext i32 %add53 to i64, !dbg !2278
  %54 = load i32*, i32** %block, align 8, !dbg !2278
  %arrayidx55 = getelementptr inbounds i32, i32* %54, i64 %idxprom54, !dbg !2278
  %55 = load i32, i32* %arrayidx55, align 4, !dbg !2278
  %add56 = add i32 %52, %55, !dbg !2279
  store i32 %add56, i32* %z048, align 4, !dbg !2270
  call void @llvm.dbg.declare(metadata i32* %z157, metadata !2280, metadata !67), !dbg !2281
  %56 = load i32, i32* %i, align 4, !dbg !2282
  %mul58 = mul nsw i32 4, %56, !dbg !2283
  %add59 = add nsw i32 0, %mul58, !dbg !2284
  %idxprom60 = sext i32 %add59 to i64, !dbg !2285
  %57 = load i32*, i32** %block, align 8, !dbg !2285
  %arrayidx61 = getelementptr inbounds i32, i32* %57, i64 %idxprom60, !dbg !2285
  %58 = load i32, i32* %arrayidx61, align 4, !dbg !2285
  %59 = load i32, i32* %i, align 4, !dbg !2286
  %mul62 = mul nsw i32 4, %59, !dbg !2287
  %add63 = add nsw i32 2, %mul62, !dbg !2288
  %idxprom64 = sext i32 %add63 to i64, !dbg !2289
  %60 = load i32*, i32** %block, align 8, !dbg !2289
  %arrayidx65 = getelementptr inbounds i32, i32* %60, i64 %idxprom64, !dbg !2289
  %61 = load i32, i32* %arrayidx65, align 4, !dbg !2289
  %sub66 = sub i32 %58, %61, !dbg !2290
  store i32 %sub66, i32* %z157, align 4, !dbg !2281
  call void @llvm.dbg.declare(metadata i32* %z267, metadata !2291, metadata !67), !dbg !2292
  %62 = load i32, i32* %i, align 4, !dbg !2293
  %mul68 = mul nsw i32 4, %62, !dbg !2294
  %add69 = add nsw i32 1, %mul68, !dbg !2295
  %idxprom70 = sext i32 %add69 to i64, !dbg !2296
  %63 = load i32*, i32** %block, align 8, !dbg !2296
  %arrayidx71 = getelementptr inbounds i32, i32* %63, i64 %idxprom70, !dbg !2296
  %64 = load i32, i32* %arrayidx71, align 4, !dbg !2296
  %shr72 = ashr i32 %64, 1, !dbg !2297
  %65 = load i32, i32* %i, align 4, !dbg !2298
  %mul73 = mul nsw i32 4, %65, !dbg !2299
  %add74 = add nsw i32 3, %mul73, !dbg !2300
  %idxprom75 = sext i32 %add74 to i64, !dbg !2301
  %66 = load i32*, i32** %block, align 8, !dbg !2301
  %arrayidx76 = getelementptr inbounds i32, i32* %66, i64 %idxprom75, !dbg !2301
  %67 = load i32, i32* %arrayidx76, align 4, !dbg !2301
  %sub77 = sub i32 %shr72, %67, !dbg !2302
  store i32 %sub77, i32* %z267, align 4, !dbg !2292
  call void @llvm.dbg.declare(metadata i32* %z378, metadata !2303, metadata !67), !dbg !2304
  %68 = load i32, i32* %i, align 4, !dbg !2305
  %mul79 = mul nsw i32 4, %68, !dbg !2306
  %add80 = add nsw i32 1, %mul79, !dbg !2307
  %idxprom81 = sext i32 %add80 to i64, !dbg !2308
  %69 = load i32*, i32** %block, align 8, !dbg !2308
  %arrayidx82 = getelementptr inbounds i32, i32* %69, i64 %idxprom81, !dbg !2308
  %70 = load i32, i32* %arrayidx82, align 4, !dbg !2308
  %71 = load i32, i32* %i, align 4, !dbg !2309
  %mul83 = mul nsw i32 4, %71, !dbg !2310
  %add84 = add nsw i32 3, %mul83, !dbg !2311
  %idxprom85 = sext i32 %add84 to i64, !dbg !2312
  %72 = load i32*, i32** %block, align 8, !dbg !2312
  %arrayidx86 = getelementptr inbounds i32, i32* %72, i64 %idxprom85, !dbg !2312
  %73 = load i32, i32* %arrayidx86, align 4, !dbg !2312
  %shr87 = ashr i32 %73, 1, !dbg !2313
  %add88 = add i32 %70, %shr87, !dbg !2314
  store i32 %add88, i32* %z378, align 4, !dbg !2304
  %74 = load i32, i32* %i, align 4, !dbg !2315
  %75 = load i32, i32* %stride.addr, align 4, !dbg !2316
  %mul89 = mul nsw i32 0, %75, !dbg !2317
  %add90 = add nsw i32 %74, %mul89, !dbg !2318
  %idxprom91 = sext i32 %add90 to i64, !dbg !2319
  %76 = load i16*, i16** %dst, align 8, !dbg !2319
  %arrayidx92 = getelementptr inbounds i16, i16* %76, i64 %idxprom91, !dbg !2319
  %77 = load i16, i16* %arrayidx92, align 2, !dbg !2319
  %conv = zext i16 %77 to i32, !dbg !2319
  %78 = load i32, i32* %z048, align 4, !dbg !2320
  %79 = load i32, i32* %z378, align 4, !dbg !2321
  %add93 = add i32 %78, %79, !dbg !2322
  %shr94 = ashr i32 %add93, 6, !dbg !2323
  %add95 = add nsw i32 %conv, %shr94, !dbg !2324
  store i32 %add95, i32* %a.addr.i, align 4, !dbg !2325
  store i32 9, i32* %p.addr.i, align 4, !dbg !2325
  %80 = load i32, i32* %a.addr.i, align 4, !dbg !2326
  %81 = load i32, i32* %p.addr.i, align 4, !dbg !2328
  %shl.i = shl i32 1, %81, !dbg !2329
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !2330
  %neg.i = xor i32 %sub.i, -1, !dbg !2331
  %and.i = and i32 %80, %neg.i, !dbg !2332
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !2332
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !2333

if.then.i:                                        ; preds = %for.body47
  %82 = load i32, i32* %a.addr.i, align 4, !dbg !2334
  %neg1.i = xor i32 %82, -1, !dbg !2336
  %shr.i = ashr i32 %neg1.i, 31, !dbg !2337
  %83 = load i32, i32* %p.addr.i, align 4, !dbg !2338
  %shl2.i = shl i32 1, %83, !dbg !2339
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !2340
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !2341
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !2342
  br label %av_clip_uintp2_c.exit, !dbg !2342

if.else.i:                                        ; preds = %for.body47
  %84 = load i32, i32* %a.addr.i, align 4, !dbg !2343
  store i32 %84, i32* %retval.i, align 4, !dbg !2344
  br label %av_clip_uintp2_c.exit, !dbg !2344

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %85 = load i32, i32* %retval.i, align 4, !dbg !2345
  %conv96 = trunc i32 %85 to i16, !dbg !2325
  %86 = load i32, i32* %i, align 4, !dbg !2346
  %87 = load i32, i32* %stride.addr, align 4, !dbg !2347
  %mul97 = mul nsw i32 0, %87, !dbg !2348
  %add98 = add nsw i32 %86, %mul97, !dbg !2349
  %idxprom99 = sext i32 %add98 to i64, !dbg !2350
  %88 = load i16*, i16** %dst, align 8, !dbg !2350
  %arrayidx100 = getelementptr inbounds i16, i16* %88, i64 %idxprom99, !dbg !2350
  store i16 %conv96, i16* %arrayidx100, align 2, !dbg !2351
  %89 = load i32, i32* %i, align 4, !dbg !2352
  %90 = load i32, i32* %stride.addr, align 4, !dbg !2353
  %mul101 = mul nsw i32 1, %90, !dbg !2354
  %add102 = add nsw i32 %89, %mul101, !dbg !2355
  %idxprom103 = sext i32 %add102 to i64, !dbg !2356
  %91 = load i16*, i16** %dst, align 8, !dbg !2356
  %arrayidx104 = getelementptr inbounds i16, i16* %91, i64 %idxprom103, !dbg !2356
  %92 = load i16, i16* %arrayidx104, align 2, !dbg !2356
  %conv105 = zext i16 %92 to i32, !dbg !2356
  %93 = load i32, i32* %z157, align 4, !dbg !2357
  %94 = load i32, i32* %z267, align 4, !dbg !2358
  %add106 = add i32 %93, %94, !dbg !2359
  %shr107 = ashr i32 %add106, 6, !dbg !2360
  %add108 = add nsw i32 %conv105, %shr107, !dbg !2361
  store i32 %add108, i32* %a.addr.i179, align 4, !dbg !2362
  store i32 9, i32* %p.addr.i180, align 4, !dbg !2362
  %95 = load i32, i32* %a.addr.i179, align 4, !dbg !2363
  %96 = load i32, i32* %p.addr.i180, align 4, !dbg !2364
  %shl.i181 = shl i32 1, %96, !dbg !2365
  %sub.i182 = sub nsw i32 %shl.i181, 1, !dbg !2366
  %neg.i183 = xor i32 %sub.i182, -1, !dbg !2367
  %and.i184 = and i32 %95, %neg.i183, !dbg !2368
  %tobool.i185 = icmp ne i32 %and.i184, 0, !dbg !2368
  br i1 %tobool.i185, label %if.then.i191, label %if.else.i192, !dbg !2369

if.then.i191:                                     ; preds = %av_clip_uintp2_c.exit
  %97 = load i32, i32* %a.addr.i179, align 4, !dbg !2370
  %neg1.i186 = xor i32 %97, -1, !dbg !2371
  %shr.i187 = ashr i32 %neg1.i186, 31, !dbg !2372
  %98 = load i32, i32* %p.addr.i180, align 4, !dbg !2373
  %shl2.i188 = shl i32 1, %98, !dbg !2374
  %sub3.i189 = sub nsw i32 %shl2.i188, 1, !dbg !2375
  %and4.i190 = and i32 %shr.i187, %sub3.i189, !dbg !2376
  store i32 %and4.i190, i32* %retval.i178, align 4, !dbg !2377
  br label %av_clip_uintp2_c.exit193, !dbg !2377

if.else.i192:                                     ; preds = %av_clip_uintp2_c.exit
  %99 = load i32, i32* %a.addr.i179, align 4, !dbg !2378
  store i32 %99, i32* %retval.i178, align 4, !dbg !2379
  br label %av_clip_uintp2_c.exit193, !dbg !2379

av_clip_uintp2_c.exit193:                         ; preds = %if.then.i191, %if.else.i192
  %100 = load i32, i32* %retval.i178, align 4, !dbg !2380
  %conv110 = trunc i32 %100 to i16, !dbg !2362
  %101 = load i32, i32* %i, align 4, !dbg !2381
  %102 = load i32, i32* %stride.addr, align 4, !dbg !2382
  %mul111 = mul nsw i32 1, %102, !dbg !2383
  %add112 = add nsw i32 %101, %mul111, !dbg !2384
  %idxprom113 = sext i32 %add112 to i64, !dbg !2385
  %103 = load i16*, i16** %dst, align 8, !dbg !2385
  %arrayidx114 = getelementptr inbounds i16, i16* %103, i64 %idxprom113, !dbg !2385
  store i16 %conv110, i16* %arrayidx114, align 2, !dbg !2386
  %104 = load i32, i32* %i, align 4, !dbg !2387
  %105 = load i32, i32* %stride.addr, align 4, !dbg !2388
  %mul115 = mul nsw i32 2, %105, !dbg !2389
  %add116 = add nsw i32 %104, %mul115, !dbg !2390
  %idxprom117 = sext i32 %add116 to i64, !dbg !2391
  %106 = load i16*, i16** %dst, align 8, !dbg !2391
  %arrayidx118 = getelementptr inbounds i16, i16* %106, i64 %idxprom117, !dbg !2391
  %107 = load i16, i16* %arrayidx118, align 2, !dbg !2391
  %conv119 = zext i16 %107 to i32, !dbg !2391
  %108 = load i32, i32* %z157, align 4, !dbg !2392
  %109 = load i32, i32* %z267, align 4, !dbg !2393
  %sub120 = sub i32 %108, %109, !dbg !2394
  %shr121 = ashr i32 %sub120, 6, !dbg !2395
  %add122 = add nsw i32 %conv119, %shr121, !dbg !2396
  store i32 %add122, i32* %a.addr.i163, align 4, !dbg !2397
  store i32 9, i32* %p.addr.i164, align 4, !dbg !2397
  %110 = load i32, i32* %a.addr.i163, align 4, !dbg !2398
  %111 = load i32, i32* %p.addr.i164, align 4, !dbg !2399
  %shl.i165 = shl i32 1, %111, !dbg !2400
  %sub.i166 = sub nsw i32 %shl.i165, 1, !dbg !2401
  %neg.i167 = xor i32 %sub.i166, -1, !dbg !2402
  %and.i168 = and i32 %110, %neg.i167, !dbg !2403
  %tobool.i169 = icmp ne i32 %and.i168, 0, !dbg !2403
  br i1 %tobool.i169, label %if.then.i175, label %if.else.i176, !dbg !2404

if.then.i175:                                     ; preds = %av_clip_uintp2_c.exit193
  %112 = load i32, i32* %a.addr.i163, align 4, !dbg !2405
  %neg1.i170 = xor i32 %112, -1, !dbg !2406
  %shr.i171 = ashr i32 %neg1.i170, 31, !dbg !2407
  %113 = load i32, i32* %p.addr.i164, align 4, !dbg !2408
  %shl2.i172 = shl i32 1, %113, !dbg !2409
  %sub3.i173 = sub nsw i32 %shl2.i172, 1, !dbg !2410
  %and4.i174 = and i32 %shr.i171, %sub3.i173, !dbg !2411
  store i32 %and4.i174, i32* %retval.i162, align 4, !dbg !2412
  br label %av_clip_uintp2_c.exit177, !dbg !2412

if.else.i176:                                     ; preds = %av_clip_uintp2_c.exit193
  %114 = load i32, i32* %a.addr.i163, align 4, !dbg !2413
  store i32 %114, i32* %retval.i162, align 4, !dbg !2414
  br label %av_clip_uintp2_c.exit177, !dbg !2414

av_clip_uintp2_c.exit177:                         ; preds = %if.then.i175, %if.else.i176
  %115 = load i32, i32* %retval.i162, align 4, !dbg !2415
  %conv124 = trunc i32 %115 to i16, !dbg !2397
  %116 = load i32, i32* %i, align 4, !dbg !2416
  %117 = load i32, i32* %stride.addr, align 4, !dbg !2417
  %mul125 = mul nsw i32 2, %117, !dbg !2418
  %add126 = add nsw i32 %116, %mul125, !dbg !2419
  %idxprom127 = sext i32 %add126 to i64, !dbg !2420
  %118 = load i16*, i16** %dst, align 8, !dbg !2420
  %arrayidx128 = getelementptr inbounds i16, i16* %118, i64 %idxprom127, !dbg !2420
  store i16 %conv124, i16* %arrayidx128, align 2, !dbg !2421
  %119 = load i32, i32* %i, align 4, !dbg !2422
  %120 = load i32, i32* %stride.addr, align 4, !dbg !2423
  %mul129 = mul nsw i32 3, %120, !dbg !2424
  %add130 = add nsw i32 %119, %mul129, !dbg !2425
  %idxprom131 = sext i32 %add130 to i64, !dbg !2426
  %121 = load i16*, i16** %dst, align 8, !dbg !2426
  %arrayidx132 = getelementptr inbounds i16, i16* %121, i64 %idxprom131, !dbg !2426
  %122 = load i16, i16* %arrayidx132, align 2, !dbg !2426
  %conv133 = zext i16 %122 to i32, !dbg !2426
  %123 = load i32, i32* %z048, align 4, !dbg !2427
  %124 = load i32, i32* %z378, align 4, !dbg !2428
  %sub134 = sub i32 %123, %124, !dbg !2429
  %shr135 = ashr i32 %sub134, 6, !dbg !2430
  %add136 = add nsw i32 %conv133, %shr135, !dbg !2431
  store i32 %add136, i32* %a.addr.i147, align 4, !dbg !2432
  store i32 9, i32* %p.addr.i148, align 4, !dbg !2432
  %125 = load i32, i32* %a.addr.i147, align 4, !dbg !2433
  %126 = load i32, i32* %p.addr.i148, align 4, !dbg !2434
  %shl.i149 = shl i32 1, %126, !dbg !2435
  %sub.i150 = sub nsw i32 %shl.i149, 1, !dbg !2436
  %neg.i151 = xor i32 %sub.i150, -1, !dbg !2437
  %and.i152 = and i32 %125, %neg.i151, !dbg !2438
  %tobool.i153 = icmp ne i32 %and.i152, 0, !dbg !2438
  br i1 %tobool.i153, label %if.then.i159, label %if.else.i160, !dbg !2439

if.then.i159:                                     ; preds = %av_clip_uintp2_c.exit177
  %127 = load i32, i32* %a.addr.i147, align 4, !dbg !2440
  %neg1.i154 = xor i32 %127, -1, !dbg !2441
  %shr.i155 = ashr i32 %neg1.i154, 31, !dbg !2442
  %128 = load i32, i32* %p.addr.i148, align 4, !dbg !2443
  %shl2.i156 = shl i32 1, %128, !dbg !2444
  %sub3.i157 = sub nsw i32 %shl2.i156, 1, !dbg !2445
  %and4.i158 = and i32 %shr.i155, %sub3.i157, !dbg !2446
  store i32 %and4.i158, i32* %retval.i146, align 4, !dbg !2447
  br label %av_clip_uintp2_c.exit161, !dbg !2447

if.else.i160:                                     ; preds = %av_clip_uintp2_c.exit177
  %129 = load i32, i32* %a.addr.i147, align 4, !dbg !2448
  store i32 %129, i32* %retval.i146, align 4, !dbg !2449
  br label %av_clip_uintp2_c.exit161, !dbg !2449

av_clip_uintp2_c.exit161:                         ; preds = %if.then.i159, %if.else.i160
  %130 = load i32, i32* %retval.i146, align 4, !dbg !2450
  %conv138 = trunc i32 %130 to i16, !dbg !2432
  %131 = load i32, i32* %i, align 4, !dbg !2451
  %132 = load i32, i32* %stride.addr, align 4, !dbg !2452
  %mul139 = mul nsw i32 3, %132, !dbg !2453
  %add140 = add nsw i32 %131, %mul139, !dbg !2454
  %idxprom141 = sext i32 %add140 to i64, !dbg !2455
  %133 = load i16*, i16** %dst, align 8, !dbg !2455
  %arrayidx142 = getelementptr inbounds i16, i16* %133, i64 %idxprom141, !dbg !2455
  store i16 %conv138, i16* %arrayidx142, align 2, !dbg !2456
  br label %for.inc143, !dbg !2457

for.inc143:                                       ; preds = %av_clip_uintp2_c.exit161
  %134 = load i32, i32* %i, align 4, !dbg !2458
  %inc144 = add nsw i32 %134, 1, !dbg !2458
  store i32 %inc144, i32* %i, align 4, !dbg !2458
  br label %for.cond45, !dbg !2460, !llvm.loop !2461

for.end145:                                       ; preds = %for.cond45
  %135 = load i32*, i32** %block, align 8, !dbg !2463
  %136 = bitcast i32* %135 to i8*, !dbg !2464
  call void @llvm.memset.p0i8.i64(i8* %136, i8 0, i64 64, i32 4, i1 false), !dbg !2464
  ret void, !dbg !2465
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_add_9_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !2466 {
entry:
  %retval.i498 = alloca i32, align 4
  %a.addr.i499 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i499, metadata !2143, metadata !67), !dbg !2467
  %p.addr.i500 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i500, metadata !2152, metadata !67), !dbg !2472
  %retval.i482 = alloca i32, align 4
  %a.addr.i483 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i483, metadata !2143, metadata !67), !dbg !2473
  %p.addr.i484 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i484, metadata !2152, metadata !67), !dbg !2475
  %retval.i466 = alloca i32, align 4
  %a.addr.i467 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i467, metadata !2143, metadata !67), !dbg !2476
  %p.addr.i468 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i468, metadata !2152, metadata !67), !dbg !2478
  %retval.i450 = alloca i32, align 4
  %a.addr.i451 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i451, metadata !2143, metadata !67), !dbg !2479
  %p.addr.i452 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i452, metadata !2152, metadata !67), !dbg !2481
  %retval.i434 = alloca i32, align 4
  %a.addr.i435 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i435, metadata !2143, metadata !67), !dbg !2482
  %p.addr.i436 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i436, metadata !2152, metadata !67), !dbg !2484
  %retval.i418 = alloca i32, align 4
  %a.addr.i419 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i419, metadata !2143, metadata !67), !dbg !2485
  %p.addr.i420 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i420, metadata !2152, metadata !67), !dbg !2487
  %retval.i402 = alloca i32, align 4
  %a.addr.i403 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i403, metadata !2143, metadata !67), !dbg !2488
  %p.addr.i404 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i404, metadata !2152, metadata !67), !dbg !2490
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !2491
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !2493
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %a0 = alloca i32, align 4
  %a2 = alloca i32, align 4
  %a4 = alloca i32, align 4
  %a6 = alloca i32, align 4
  %b0 = alloca i32, align 4
  %b2 = alloca i32, align 4
  %b4 = alloca i32, align 4
  %b6 = alloca i32, align 4
  %a1 = alloca i32, align 4
  %a3 = alloca i32, align 4
  %a5 = alloca i32, align 4
  %a7 = alloca i32, align 4
  %b1 = alloca i32, align 4
  %b3 = alloca i32, align 4
  %b5 = alloca i32, align 4
  %b7 = alloca i32, align 4
  %a0142 = alloca i32, align 4
  %a2151 = alloca i32, align 4
  %a4161 = alloca i32, align 4
  %a6172 = alloca i32, align 4
  %b0183 = alloca i32, align 4
  %b2185 = alloca i32, align 4
  %b4187 = alloca i32, align 4
  %b6189 = alloca i32, align 4
  %a1191 = alloca i32, align 4
  %a3213 = alloca i32, align 4
  %a5234 = alloca i32, align 4
  %a7256 = alloca i32, align 4
  %b1277 = alloca i32, align 4
  %b3280 = alloca i32, align 4
  %b5283 = alloca i32, align 4
  %b7286 = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !2494, metadata !67), !dbg !2495
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !2496, metadata !67), !dbg !2497
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !2498, metadata !67), !dbg !2499
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2500, metadata !67), !dbg !2501
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !2502, metadata !67), !dbg !2503
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !2504
  %1 = bitcast i8* %0 to i16*, !dbg !2505
  store i16* %1, i16** %dst, align 8, !dbg !2503
  call void @llvm.dbg.declare(metadata i32** %block, metadata !2506, metadata !67), !dbg !2507
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !2508
  %3 = bitcast i16* %2 to i32*, !dbg !2509
  store i32* %3, i32** %block, align 8, !dbg !2507
  %4 = load i32, i32* %stride.addr, align 4, !dbg !2510
  %shr = ashr i32 %4, 1, !dbg !2510
  store i32 %shr, i32* %stride.addr, align 4, !dbg !2510
  %5 = load i32*, i32** %block, align 8, !dbg !2511
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !2511
  %6 = load i32, i32* %arrayidx, align 4, !dbg !2512
  %add = add nsw i32 %6, 32, !dbg !2512
  store i32 %add, i32* %arrayidx, align 4, !dbg !2512
  store i32 0, i32* %i, align 4, !dbg !2513
  br label %for.cond, !dbg !2515

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !2516
  %cmp = icmp slt i32 %7, 8, !dbg !2519
  br i1 %cmp, label %for.body, label %for.end, !dbg !2520

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %a0, metadata !2521, metadata !67), !dbg !2523
  %8 = load i32, i32* %i, align 4, !dbg !2524
  %add1 = add nsw i32 %8, 0, !dbg !2525
  %idxprom = sext i32 %add1 to i64, !dbg !2526
  %9 = load i32*, i32** %block, align 8, !dbg !2526
  %arrayidx2 = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !2526
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !2526
  %11 = load i32, i32* %i, align 4, !dbg !2527
  %add3 = add nsw i32 %11, 32, !dbg !2528
  %idxprom4 = sext i32 %add3 to i64, !dbg !2529
  %12 = load i32*, i32** %block, align 8, !dbg !2529
  %arrayidx5 = getelementptr inbounds i32, i32* %12, i64 %idxprom4, !dbg !2529
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !2529
  %add6 = add i32 %10, %13, !dbg !2530
  store i32 %add6, i32* %a0, align 4, !dbg !2523
  call void @llvm.dbg.declare(metadata i32* %a2, metadata !2531, metadata !67), !dbg !2532
  %14 = load i32, i32* %i, align 4, !dbg !2533
  %add7 = add nsw i32 %14, 0, !dbg !2534
  %idxprom8 = sext i32 %add7 to i64, !dbg !2535
  %15 = load i32*, i32** %block, align 8, !dbg !2535
  %arrayidx9 = getelementptr inbounds i32, i32* %15, i64 %idxprom8, !dbg !2535
  %16 = load i32, i32* %arrayidx9, align 4, !dbg !2535
  %17 = load i32, i32* %i, align 4, !dbg !2536
  %add10 = add nsw i32 %17, 32, !dbg !2537
  %idxprom11 = sext i32 %add10 to i64, !dbg !2538
  %18 = load i32*, i32** %block, align 8, !dbg !2538
  %arrayidx12 = getelementptr inbounds i32, i32* %18, i64 %idxprom11, !dbg !2538
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !2538
  %sub = sub i32 %16, %19, !dbg !2539
  store i32 %sub, i32* %a2, align 4, !dbg !2532
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !2540, metadata !67), !dbg !2541
  %20 = load i32, i32* %i, align 4, !dbg !2542
  %add13 = add nsw i32 %20, 16, !dbg !2543
  %idxprom14 = sext i32 %add13 to i64, !dbg !2544
  %21 = load i32*, i32** %block, align 8, !dbg !2544
  %arrayidx15 = getelementptr inbounds i32, i32* %21, i64 %idxprom14, !dbg !2544
  %22 = load i32, i32* %arrayidx15, align 4, !dbg !2544
  %shr16 = ashr i32 %22, 1, !dbg !2545
  %23 = load i32, i32* %i, align 4, !dbg !2546
  %add17 = add nsw i32 %23, 48, !dbg !2547
  %idxprom18 = sext i32 %add17 to i64, !dbg !2548
  %24 = load i32*, i32** %block, align 8, !dbg !2548
  %arrayidx19 = getelementptr inbounds i32, i32* %24, i64 %idxprom18, !dbg !2548
  %25 = load i32, i32* %arrayidx19, align 4, !dbg !2548
  %sub20 = sub i32 %shr16, %25, !dbg !2549
  store i32 %sub20, i32* %a4, align 4, !dbg !2541
  call void @llvm.dbg.declare(metadata i32* %a6, metadata !2550, metadata !67), !dbg !2551
  %26 = load i32, i32* %i, align 4, !dbg !2552
  %add21 = add nsw i32 %26, 48, !dbg !2553
  %idxprom22 = sext i32 %add21 to i64, !dbg !2554
  %27 = load i32*, i32** %block, align 8, !dbg !2554
  %arrayidx23 = getelementptr inbounds i32, i32* %27, i64 %idxprom22, !dbg !2554
  %28 = load i32, i32* %arrayidx23, align 4, !dbg !2554
  %shr24 = ashr i32 %28, 1, !dbg !2555
  %29 = load i32, i32* %i, align 4, !dbg !2556
  %add25 = add nsw i32 %29, 16, !dbg !2557
  %idxprom26 = sext i32 %add25 to i64, !dbg !2558
  %30 = load i32*, i32** %block, align 8, !dbg !2558
  %arrayidx27 = getelementptr inbounds i32, i32* %30, i64 %idxprom26, !dbg !2558
  %31 = load i32, i32* %arrayidx27, align 4, !dbg !2558
  %add28 = add i32 %shr24, %31, !dbg !2559
  store i32 %add28, i32* %a6, align 4, !dbg !2551
  call void @llvm.dbg.declare(metadata i32* %b0, metadata !2560, metadata !67), !dbg !2561
  %32 = load i32, i32* %a0, align 4, !dbg !2562
  %33 = load i32, i32* %a6, align 4, !dbg !2563
  %add29 = add i32 %32, %33, !dbg !2564
  store i32 %add29, i32* %b0, align 4, !dbg !2561
  call void @llvm.dbg.declare(metadata i32* %b2, metadata !2565, metadata !67), !dbg !2566
  %34 = load i32, i32* %a2, align 4, !dbg !2567
  %35 = load i32, i32* %a4, align 4, !dbg !2568
  %add30 = add i32 %34, %35, !dbg !2569
  store i32 %add30, i32* %b2, align 4, !dbg !2566
  call void @llvm.dbg.declare(metadata i32* %b4, metadata !2570, metadata !67), !dbg !2571
  %36 = load i32, i32* %a2, align 4, !dbg !2572
  %37 = load i32, i32* %a4, align 4, !dbg !2573
  %sub31 = sub i32 %36, %37, !dbg !2574
  store i32 %sub31, i32* %b4, align 4, !dbg !2571
  call void @llvm.dbg.declare(metadata i32* %b6, metadata !2575, metadata !67), !dbg !2576
  %38 = load i32, i32* %a0, align 4, !dbg !2577
  %39 = load i32, i32* %a6, align 4, !dbg !2578
  %sub32 = sub i32 %38, %39, !dbg !2579
  store i32 %sub32, i32* %b6, align 4, !dbg !2576
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !2580, metadata !67), !dbg !2581
  %40 = load i32, i32* %i, align 4, !dbg !2582
  %add33 = add nsw i32 %40, 24, !dbg !2583
  %idxprom34 = sext i32 %add33 to i64, !dbg !2584
  %41 = load i32*, i32** %block, align 8, !dbg !2584
  %arrayidx35 = getelementptr inbounds i32, i32* %41, i64 %idxprom34, !dbg !2584
  %42 = load i32, i32* %arrayidx35, align 4, !dbg !2584
  %sub36 = sub nsw i32 0, %42, !dbg !2585
  %43 = load i32, i32* %i, align 4, !dbg !2586
  %add37 = add nsw i32 %43, 40, !dbg !2587
  %idxprom38 = sext i32 %add37 to i64, !dbg !2588
  %44 = load i32*, i32** %block, align 8, !dbg !2588
  %arrayidx39 = getelementptr inbounds i32, i32* %44, i64 %idxprom38, !dbg !2588
  %45 = load i32, i32* %arrayidx39, align 4, !dbg !2588
  %add40 = add i32 %sub36, %45, !dbg !2589
  %46 = load i32, i32* %i, align 4, !dbg !2590
  %add41 = add nsw i32 %46, 56, !dbg !2591
  %idxprom42 = sext i32 %add41 to i64, !dbg !2592
  %47 = load i32*, i32** %block, align 8, !dbg !2592
  %arrayidx43 = getelementptr inbounds i32, i32* %47, i64 %idxprom42, !dbg !2592
  %48 = load i32, i32* %arrayidx43, align 4, !dbg !2592
  %sub44 = sub i32 %add40, %48, !dbg !2593
  %49 = load i32, i32* %i, align 4, !dbg !2594
  %add45 = add nsw i32 %49, 56, !dbg !2595
  %idxprom46 = sext i32 %add45 to i64, !dbg !2596
  %50 = load i32*, i32** %block, align 8, !dbg !2596
  %arrayidx47 = getelementptr inbounds i32, i32* %50, i64 %idxprom46, !dbg !2596
  %51 = load i32, i32* %arrayidx47, align 4, !dbg !2596
  %shr48 = ashr i32 %51, 1, !dbg !2597
  %sub49 = sub i32 %sub44, %shr48, !dbg !2598
  store i32 %sub49, i32* %a1, align 4, !dbg !2581
  call void @llvm.dbg.declare(metadata i32* %a3, metadata !2599, metadata !67), !dbg !2600
  %52 = load i32, i32* %i, align 4, !dbg !2601
  %add50 = add nsw i32 %52, 8, !dbg !2602
  %idxprom51 = sext i32 %add50 to i64, !dbg !2603
  %53 = load i32*, i32** %block, align 8, !dbg !2603
  %arrayidx52 = getelementptr inbounds i32, i32* %53, i64 %idxprom51, !dbg !2603
  %54 = load i32, i32* %arrayidx52, align 4, !dbg !2603
  %55 = load i32, i32* %i, align 4, !dbg !2604
  %add53 = add nsw i32 %55, 56, !dbg !2605
  %idxprom54 = sext i32 %add53 to i64, !dbg !2606
  %56 = load i32*, i32** %block, align 8, !dbg !2606
  %arrayidx55 = getelementptr inbounds i32, i32* %56, i64 %idxprom54, !dbg !2606
  %57 = load i32, i32* %arrayidx55, align 4, !dbg !2606
  %add56 = add i32 %54, %57, !dbg !2607
  %58 = load i32, i32* %i, align 4, !dbg !2608
  %add57 = add nsw i32 %58, 24, !dbg !2609
  %idxprom58 = sext i32 %add57 to i64, !dbg !2610
  %59 = load i32*, i32** %block, align 8, !dbg !2610
  %arrayidx59 = getelementptr inbounds i32, i32* %59, i64 %idxprom58, !dbg !2610
  %60 = load i32, i32* %arrayidx59, align 4, !dbg !2610
  %sub60 = sub i32 %add56, %60, !dbg !2611
  %61 = load i32, i32* %i, align 4, !dbg !2612
  %add61 = add nsw i32 %61, 24, !dbg !2613
  %idxprom62 = sext i32 %add61 to i64, !dbg !2614
  %62 = load i32*, i32** %block, align 8, !dbg !2614
  %arrayidx63 = getelementptr inbounds i32, i32* %62, i64 %idxprom62, !dbg !2614
  %63 = load i32, i32* %arrayidx63, align 4, !dbg !2614
  %shr64 = ashr i32 %63, 1, !dbg !2615
  %sub65 = sub i32 %sub60, %shr64, !dbg !2616
  store i32 %sub65, i32* %a3, align 4, !dbg !2600
  call void @llvm.dbg.declare(metadata i32* %a5, metadata !2617, metadata !67), !dbg !2618
  %64 = load i32, i32* %i, align 4, !dbg !2619
  %add66 = add nsw i32 %64, 8, !dbg !2620
  %idxprom67 = sext i32 %add66 to i64, !dbg !2621
  %65 = load i32*, i32** %block, align 8, !dbg !2621
  %arrayidx68 = getelementptr inbounds i32, i32* %65, i64 %idxprom67, !dbg !2621
  %66 = load i32, i32* %arrayidx68, align 4, !dbg !2621
  %sub69 = sub nsw i32 0, %66, !dbg !2622
  %67 = load i32, i32* %i, align 4, !dbg !2623
  %add70 = add nsw i32 %67, 56, !dbg !2624
  %idxprom71 = sext i32 %add70 to i64, !dbg !2625
  %68 = load i32*, i32** %block, align 8, !dbg !2625
  %arrayidx72 = getelementptr inbounds i32, i32* %68, i64 %idxprom71, !dbg !2625
  %69 = load i32, i32* %arrayidx72, align 4, !dbg !2625
  %add73 = add i32 %sub69, %69, !dbg !2626
  %70 = load i32, i32* %i, align 4, !dbg !2627
  %add74 = add nsw i32 %70, 40, !dbg !2628
  %idxprom75 = sext i32 %add74 to i64, !dbg !2629
  %71 = load i32*, i32** %block, align 8, !dbg !2629
  %arrayidx76 = getelementptr inbounds i32, i32* %71, i64 %idxprom75, !dbg !2629
  %72 = load i32, i32* %arrayidx76, align 4, !dbg !2629
  %add77 = add i32 %add73, %72, !dbg !2630
  %73 = load i32, i32* %i, align 4, !dbg !2631
  %add78 = add nsw i32 %73, 40, !dbg !2632
  %idxprom79 = sext i32 %add78 to i64, !dbg !2633
  %74 = load i32*, i32** %block, align 8, !dbg !2633
  %arrayidx80 = getelementptr inbounds i32, i32* %74, i64 %idxprom79, !dbg !2633
  %75 = load i32, i32* %arrayidx80, align 4, !dbg !2633
  %shr81 = ashr i32 %75, 1, !dbg !2634
  %add82 = add i32 %add77, %shr81, !dbg !2635
  store i32 %add82, i32* %a5, align 4, !dbg !2618
  call void @llvm.dbg.declare(metadata i32* %a7, metadata !2636, metadata !67), !dbg !2637
  %76 = load i32, i32* %i, align 4, !dbg !2638
  %add83 = add nsw i32 %76, 24, !dbg !2639
  %idxprom84 = sext i32 %add83 to i64, !dbg !2640
  %77 = load i32*, i32** %block, align 8, !dbg !2640
  %arrayidx85 = getelementptr inbounds i32, i32* %77, i64 %idxprom84, !dbg !2640
  %78 = load i32, i32* %arrayidx85, align 4, !dbg !2640
  %79 = load i32, i32* %i, align 4, !dbg !2641
  %add86 = add nsw i32 %79, 40, !dbg !2642
  %idxprom87 = sext i32 %add86 to i64, !dbg !2643
  %80 = load i32*, i32** %block, align 8, !dbg !2643
  %arrayidx88 = getelementptr inbounds i32, i32* %80, i64 %idxprom87, !dbg !2643
  %81 = load i32, i32* %arrayidx88, align 4, !dbg !2643
  %add89 = add i32 %78, %81, !dbg !2644
  %82 = load i32, i32* %i, align 4, !dbg !2645
  %add90 = add nsw i32 %82, 8, !dbg !2646
  %idxprom91 = sext i32 %add90 to i64, !dbg !2647
  %83 = load i32*, i32** %block, align 8, !dbg !2647
  %arrayidx92 = getelementptr inbounds i32, i32* %83, i64 %idxprom91, !dbg !2647
  %84 = load i32, i32* %arrayidx92, align 4, !dbg !2647
  %add93 = add i32 %add89, %84, !dbg !2648
  %85 = load i32, i32* %i, align 4, !dbg !2649
  %add94 = add nsw i32 %85, 8, !dbg !2650
  %idxprom95 = sext i32 %add94 to i64, !dbg !2651
  %86 = load i32*, i32** %block, align 8, !dbg !2651
  %arrayidx96 = getelementptr inbounds i32, i32* %86, i64 %idxprom95, !dbg !2651
  %87 = load i32, i32* %arrayidx96, align 4, !dbg !2651
  %shr97 = ashr i32 %87, 1, !dbg !2652
  %add98 = add i32 %add93, %shr97, !dbg !2653
  store i32 %add98, i32* %a7, align 4, !dbg !2637
  call void @llvm.dbg.declare(metadata i32* %b1, metadata !2654, metadata !67), !dbg !2655
  %88 = load i32, i32* %a7, align 4, !dbg !2656
  %shr99 = ashr i32 %88, 2, !dbg !2657
  %89 = load i32, i32* %a1, align 4, !dbg !2658
  %add100 = add i32 %shr99, %89, !dbg !2659
  store i32 %add100, i32* %b1, align 4, !dbg !2655
  call void @llvm.dbg.declare(metadata i32* %b3, metadata !2660, metadata !67), !dbg !2661
  %90 = load i32, i32* %a3, align 4, !dbg !2662
  %91 = load i32, i32* %a5, align 4, !dbg !2663
  %shr101 = ashr i32 %91, 2, !dbg !2664
  %add102 = add i32 %90, %shr101, !dbg !2665
  store i32 %add102, i32* %b3, align 4, !dbg !2661
  call void @llvm.dbg.declare(metadata i32* %b5, metadata !2666, metadata !67), !dbg !2667
  %92 = load i32, i32* %a3, align 4, !dbg !2668
  %shr103 = ashr i32 %92, 2, !dbg !2669
  %93 = load i32, i32* %a5, align 4, !dbg !2670
  %sub104 = sub i32 %shr103, %93, !dbg !2671
  store i32 %sub104, i32* %b5, align 4, !dbg !2667
  call void @llvm.dbg.declare(metadata i32* %b7, metadata !2672, metadata !67), !dbg !2673
  %94 = load i32, i32* %a7, align 4, !dbg !2674
  %95 = load i32, i32* %a1, align 4, !dbg !2675
  %shr105 = ashr i32 %95, 2, !dbg !2676
  %sub106 = sub i32 %94, %shr105, !dbg !2677
  store i32 %sub106, i32* %b7, align 4, !dbg !2673
  %96 = load i32, i32* %b0, align 4, !dbg !2678
  %97 = load i32, i32* %b7, align 4, !dbg !2679
  %add107 = add i32 %96, %97, !dbg !2680
  %98 = load i32, i32* %i, align 4, !dbg !2681
  %add108 = add nsw i32 %98, 0, !dbg !2682
  %idxprom109 = sext i32 %add108 to i64, !dbg !2683
  %99 = load i32*, i32** %block, align 8, !dbg !2683
  %arrayidx110 = getelementptr inbounds i32, i32* %99, i64 %idxprom109, !dbg !2683
  store i32 %add107, i32* %arrayidx110, align 4, !dbg !2684
  %100 = load i32, i32* %b0, align 4, !dbg !2685
  %101 = load i32, i32* %b7, align 4, !dbg !2686
  %sub111 = sub i32 %100, %101, !dbg !2687
  %102 = load i32, i32* %i, align 4, !dbg !2688
  %add112 = add nsw i32 %102, 56, !dbg !2689
  %idxprom113 = sext i32 %add112 to i64, !dbg !2690
  %103 = load i32*, i32** %block, align 8, !dbg !2690
  %arrayidx114 = getelementptr inbounds i32, i32* %103, i64 %idxprom113, !dbg !2690
  store i32 %sub111, i32* %arrayidx114, align 4, !dbg !2691
  %104 = load i32, i32* %b2, align 4, !dbg !2692
  %105 = load i32, i32* %b5, align 4, !dbg !2693
  %add115 = add i32 %104, %105, !dbg !2694
  %106 = load i32, i32* %i, align 4, !dbg !2695
  %add116 = add nsw i32 %106, 8, !dbg !2696
  %idxprom117 = sext i32 %add116 to i64, !dbg !2697
  %107 = load i32*, i32** %block, align 8, !dbg !2697
  %arrayidx118 = getelementptr inbounds i32, i32* %107, i64 %idxprom117, !dbg !2697
  store i32 %add115, i32* %arrayidx118, align 4, !dbg !2698
  %108 = load i32, i32* %b2, align 4, !dbg !2699
  %109 = load i32, i32* %b5, align 4, !dbg !2700
  %sub119 = sub i32 %108, %109, !dbg !2701
  %110 = load i32, i32* %i, align 4, !dbg !2702
  %add120 = add nsw i32 %110, 48, !dbg !2703
  %idxprom121 = sext i32 %add120 to i64, !dbg !2704
  %111 = load i32*, i32** %block, align 8, !dbg !2704
  %arrayidx122 = getelementptr inbounds i32, i32* %111, i64 %idxprom121, !dbg !2704
  store i32 %sub119, i32* %arrayidx122, align 4, !dbg !2705
  %112 = load i32, i32* %b4, align 4, !dbg !2706
  %113 = load i32, i32* %b3, align 4, !dbg !2707
  %add123 = add i32 %112, %113, !dbg !2708
  %114 = load i32, i32* %i, align 4, !dbg !2709
  %add124 = add nsw i32 %114, 16, !dbg !2710
  %idxprom125 = sext i32 %add124 to i64, !dbg !2711
  %115 = load i32*, i32** %block, align 8, !dbg !2711
  %arrayidx126 = getelementptr inbounds i32, i32* %115, i64 %idxprom125, !dbg !2711
  store i32 %add123, i32* %arrayidx126, align 4, !dbg !2712
  %116 = load i32, i32* %b4, align 4, !dbg !2713
  %117 = load i32, i32* %b3, align 4, !dbg !2714
  %sub127 = sub i32 %116, %117, !dbg !2715
  %118 = load i32, i32* %i, align 4, !dbg !2716
  %add128 = add nsw i32 %118, 40, !dbg !2717
  %idxprom129 = sext i32 %add128 to i64, !dbg !2718
  %119 = load i32*, i32** %block, align 8, !dbg !2718
  %arrayidx130 = getelementptr inbounds i32, i32* %119, i64 %idxprom129, !dbg !2718
  store i32 %sub127, i32* %arrayidx130, align 4, !dbg !2719
  %120 = load i32, i32* %b6, align 4, !dbg !2720
  %121 = load i32, i32* %b1, align 4, !dbg !2721
  %add131 = add i32 %120, %121, !dbg !2722
  %122 = load i32, i32* %i, align 4, !dbg !2723
  %add132 = add nsw i32 %122, 24, !dbg !2724
  %idxprom133 = sext i32 %add132 to i64, !dbg !2725
  %123 = load i32*, i32** %block, align 8, !dbg !2725
  %arrayidx134 = getelementptr inbounds i32, i32* %123, i64 %idxprom133, !dbg !2725
  store i32 %add131, i32* %arrayidx134, align 4, !dbg !2726
  %124 = load i32, i32* %b6, align 4, !dbg !2727
  %125 = load i32, i32* %b1, align 4, !dbg !2728
  %sub135 = sub i32 %124, %125, !dbg !2729
  %126 = load i32, i32* %i, align 4, !dbg !2730
  %add136 = add nsw i32 %126, 32, !dbg !2731
  %idxprom137 = sext i32 %add136 to i64, !dbg !2732
  %127 = load i32*, i32** %block, align 8, !dbg !2732
  %arrayidx138 = getelementptr inbounds i32, i32* %127, i64 %idxprom137, !dbg !2732
  store i32 %sub135, i32* %arrayidx138, align 4, !dbg !2733
  br label %for.inc, !dbg !2734

for.inc:                                          ; preds = %for.body
  %128 = load i32, i32* %i, align 4, !dbg !2735
  %inc = add nsw i32 %128, 1, !dbg !2735
  store i32 %inc, i32* %i, align 4, !dbg !2735
  br label %for.cond, !dbg !2737, !llvm.loop !2738

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !2740
  br label %for.cond139, !dbg !2741

for.cond139:                                      ; preds = %for.inc399, %for.end
  %129 = load i32, i32* %i, align 4, !dbg !2742
  %cmp140 = icmp slt i32 %129, 8, !dbg !2744
  br i1 %cmp140, label %for.body141, label %for.end401, !dbg !2745

for.body141:                                      ; preds = %for.cond139
  call void @llvm.dbg.declare(metadata i32* %a0142, metadata !2746, metadata !67), !dbg !2747
  %130 = load i32, i32* %i, align 4, !dbg !2748
  %mul = mul nsw i32 %130, 8, !dbg !2749
  %add143 = add nsw i32 0, %mul, !dbg !2750
  %idxprom144 = sext i32 %add143 to i64, !dbg !2751
  %131 = load i32*, i32** %block, align 8, !dbg !2751
  %arrayidx145 = getelementptr inbounds i32, i32* %131, i64 %idxprom144, !dbg !2751
  %132 = load i32, i32* %arrayidx145, align 4, !dbg !2751
  %133 = load i32, i32* %i, align 4, !dbg !2752
  %mul146 = mul nsw i32 %133, 8, !dbg !2753
  %add147 = add nsw i32 4, %mul146, !dbg !2754
  %idxprom148 = sext i32 %add147 to i64, !dbg !2755
  %134 = load i32*, i32** %block, align 8, !dbg !2755
  %arrayidx149 = getelementptr inbounds i32, i32* %134, i64 %idxprom148, !dbg !2755
  %135 = load i32, i32* %arrayidx149, align 4, !dbg !2755
  %add150 = add i32 %132, %135, !dbg !2756
  store i32 %add150, i32* %a0142, align 4, !dbg !2747
  call void @llvm.dbg.declare(metadata i32* %a2151, metadata !2757, metadata !67), !dbg !2758
  %136 = load i32, i32* %i, align 4, !dbg !2759
  %mul152 = mul nsw i32 %136, 8, !dbg !2760
  %add153 = add nsw i32 0, %mul152, !dbg !2761
  %idxprom154 = sext i32 %add153 to i64, !dbg !2762
  %137 = load i32*, i32** %block, align 8, !dbg !2762
  %arrayidx155 = getelementptr inbounds i32, i32* %137, i64 %idxprom154, !dbg !2762
  %138 = load i32, i32* %arrayidx155, align 4, !dbg !2762
  %139 = load i32, i32* %i, align 4, !dbg !2763
  %mul156 = mul nsw i32 %139, 8, !dbg !2764
  %add157 = add nsw i32 4, %mul156, !dbg !2765
  %idxprom158 = sext i32 %add157 to i64, !dbg !2766
  %140 = load i32*, i32** %block, align 8, !dbg !2766
  %arrayidx159 = getelementptr inbounds i32, i32* %140, i64 %idxprom158, !dbg !2766
  %141 = load i32, i32* %arrayidx159, align 4, !dbg !2766
  %sub160 = sub i32 %138, %141, !dbg !2767
  store i32 %sub160, i32* %a2151, align 4, !dbg !2758
  call void @llvm.dbg.declare(metadata i32* %a4161, metadata !2768, metadata !67), !dbg !2769
  %142 = load i32, i32* %i, align 4, !dbg !2770
  %mul162 = mul nsw i32 %142, 8, !dbg !2771
  %add163 = add nsw i32 2, %mul162, !dbg !2772
  %idxprom164 = sext i32 %add163 to i64, !dbg !2773
  %143 = load i32*, i32** %block, align 8, !dbg !2773
  %arrayidx165 = getelementptr inbounds i32, i32* %143, i64 %idxprom164, !dbg !2773
  %144 = load i32, i32* %arrayidx165, align 4, !dbg !2773
  %shr166 = ashr i32 %144, 1, !dbg !2774
  %145 = load i32, i32* %i, align 4, !dbg !2775
  %mul167 = mul nsw i32 %145, 8, !dbg !2776
  %add168 = add nsw i32 6, %mul167, !dbg !2777
  %idxprom169 = sext i32 %add168 to i64, !dbg !2778
  %146 = load i32*, i32** %block, align 8, !dbg !2778
  %arrayidx170 = getelementptr inbounds i32, i32* %146, i64 %idxprom169, !dbg !2778
  %147 = load i32, i32* %arrayidx170, align 4, !dbg !2778
  %sub171 = sub i32 %shr166, %147, !dbg !2779
  store i32 %sub171, i32* %a4161, align 4, !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %a6172, metadata !2780, metadata !67), !dbg !2781
  %148 = load i32, i32* %i, align 4, !dbg !2782
  %mul173 = mul nsw i32 %148, 8, !dbg !2783
  %add174 = add nsw i32 6, %mul173, !dbg !2784
  %idxprom175 = sext i32 %add174 to i64, !dbg !2785
  %149 = load i32*, i32** %block, align 8, !dbg !2785
  %arrayidx176 = getelementptr inbounds i32, i32* %149, i64 %idxprom175, !dbg !2785
  %150 = load i32, i32* %arrayidx176, align 4, !dbg !2785
  %shr177 = ashr i32 %150, 1, !dbg !2786
  %151 = load i32, i32* %i, align 4, !dbg !2787
  %mul178 = mul nsw i32 %151, 8, !dbg !2788
  %add179 = add nsw i32 2, %mul178, !dbg !2789
  %idxprom180 = sext i32 %add179 to i64, !dbg !2790
  %152 = load i32*, i32** %block, align 8, !dbg !2790
  %arrayidx181 = getelementptr inbounds i32, i32* %152, i64 %idxprom180, !dbg !2790
  %153 = load i32, i32* %arrayidx181, align 4, !dbg !2790
  %add182 = add i32 %shr177, %153, !dbg !2791
  store i32 %add182, i32* %a6172, align 4, !dbg !2781
  call void @llvm.dbg.declare(metadata i32* %b0183, metadata !2792, metadata !67), !dbg !2793
  %154 = load i32, i32* %a0142, align 4, !dbg !2794
  %155 = load i32, i32* %a6172, align 4, !dbg !2795
  %add184 = add i32 %154, %155, !dbg !2796
  store i32 %add184, i32* %b0183, align 4, !dbg !2793
  call void @llvm.dbg.declare(metadata i32* %b2185, metadata !2797, metadata !67), !dbg !2798
  %156 = load i32, i32* %a2151, align 4, !dbg !2799
  %157 = load i32, i32* %a4161, align 4, !dbg !2800
  %add186 = add i32 %156, %157, !dbg !2801
  store i32 %add186, i32* %b2185, align 4, !dbg !2798
  call void @llvm.dbg.declare(metadata i32* %b4187, metadata !2802, metadata !67), !dbg !2803
  %158 = load i32, i32* %a2151, align 4, !dbg !2804
  %159 = load i32, i32* %a4161, align 4, !dbg !2805
  %sub188 = sub i32 %158, %159, !dbg !2806
  store i32 %sub188, i32* %b4187, align 4, !dbg !2803
  call void @llvm.dbg.declare(metadata i32* %b6189, metadata !2807, metadata !67), !dbg !2808
  %160 = load i32, i32* %a0142, align 4, !dbg !2809
  %161 = load i32, i32* %a6172, align 4, !dbg !2810
  %sub190 = sub i32 %160, %161, !dbg !2811
  store i32 %sub190, i32* %b6189, align 4, !dbg !2808
  call void @llvm.dbg.declare(metadata i32* %a1191, metadata !2812, metadata !67), !dbg !2813
  %162 = load i32, i32* %i, align 4, !dbg !2814
  %mul192 = mul nsw i32 %162, 8, !dbg !2815
  %add193 = add nsw i32 3, %mul192, !dbg !2816
  %idxprom194 = sext i32 %add193 to i64, !dbg !2817
  %163 = load i32*, i32** %block, align 8, !dbg !2817
  %arrayidx195 = getelementptr inbounds i32, i32* %163, i64 %idxprom194, !dbg !2817
  %164 = load i32, i32* %arrayidx195, align 4, !dbg !2817
  %sub196 = sub i32 0, %164, !dbg !2818
  %165 = load i32, i32* %i, align 4, !dbg !2819
  %mul197 = mul nsw i32 %165, 8, !dbg !2820
  %add198 = add nsw i32 5, %mul197, !dbg !2821
  %idxprom199 = sext i32 %add198 to i64, !dbg !2822
  %166 = load i32*, i32** %block, align 8, !dbg !2822
  %arrayidx200 = getelementptr inbounds i32, i32* %166, i64 %idxprom199, !dbg !2822
  %167 = load i32, i32* %arrayidx200, align 4, !dbg !2822
  %add201 = add i32 %sub196, %167, !dbg !2823
  %168 = load i32, i32* %i, align 4, !dbg !2824
  %mul202 = mul nsw i32 %168, 8, !dbg !2825
  %add203 = add nsw i32 7, %mul202, !dbg !2826
  %idxprom204 = sext i32 %add203 to i64, !dbg !2827
  %169 = load i32*, i32** %block, align 8, !dbg !2827
  %arrayidx205 = getelementptr inbounds i32, i32* %169, i64 %idxprom204, !dbg !2827
  %170 = load i32, i32* %arrayidx205, align 4, !dbg !2827
  %sub206 = sub i32 %add201, %170, !dbg !2828
  %171 = load i32, i32* %i, align 4, !dbg !2829
  %mul207 = mul nsw i32 %171, 8, !dbg !2830
  %add208 = add nsw i32 7, %mul207, !dbg !2831
  %idxprom209 = sext i32 %add208 to i64, !dbg !2832
  %172 = load i32*, i32** %block, align 8, !dbg !2832
  %arrayidx210 = getelementptr inbounds i32, i32* %172, i64 %idxprom209, !dbg !2832
  %173 = load i32, i32* %arrayidx210, align 4, !dbg !2832
  %shr211 = ashr i32 %173, 1, !dbg !2833
  %sub212 = sub i32 %sub206, %shr211, !dbg !2834
  store i32 %sub212, i32* %a1191, align 4, !dbg !2813
  call void @llvm.dbg.declare(metadata i32* %a3213, metadata !2835, metadata !67), !dbg !2836
  %174 = load i32, i32* %i, align 4, !dbg !2837
  %mul214 = mul nsw i32 %174, 8, !dbg !2838
  %add215 = add nsw i32 1, %mul214, !dbg !2839
  %idxprom216 = sext i32 %add215 to i64, !dbg !2840
  %175 = load i32*, i32** %block, align 8, !dbg !2840
  %arrayidx217 = getelementptr inbounds i32, i32* %175, i64 %idxprom216, !dbg !2840
  %176 = load i32, i32* %arrayidx217, align 4, !dbg !2840
  %177 = load i32, i32* %i, align 4, !dbg !2841
  %mul218 = mul nsw i32 %177, 8, !dbg !2842
  %add219 = add nsw i32 7, %mul218, !dbg !2843
  %idxprom220 = sext i32 %add219 to i64, !dbg !2844
  %178 = load i32*, i32** %block, align 8, !dbg !2844
  %arrayidx221 = getelementptr inbounds i32, i32* %178, i64 %idxprom220, !dbg !2844
  %179 = load i32, i32* %arrayidx221, align 4, !dbg !2844
  %add222 = add i32 %176, %179, !dbg !2845
  %180 = load i32, i32* %i, align 4, !dbg !2846
  %mul223 = mul nsw i32 %180, 8, !dbg !2847
  %add224 = add nsw i32 3, %mul223, !dbg !2848
  %idxprom225 = sext i32 %add224 to i64, !dbg !2849
  %181 = load i32*, i32** %block, align 8, !dbg !2849
  %arrayidx226 = getelementptr inbounds i32, i32* %181, i64 %idxprom225, !dbg !2849
  %182 = load i32, i32* %arrayidx226, align 4, !dbg !2849
  %sub227 = sub i32 %add222, %182, !dbg !2850
  %183 = load i32, i32* %i, align 4, !dbg !2851
  %mul228 = mul nsw i32 %183, 8, !dbg !2852
  %add229 = add nsw i32 3, %mul228, !dbg !2853
  %idxprom230 = sext i32 %add229 to i64, !dbg !2854
  %184 = load i32*, i32** %block, align 8, !dbg !2854
  %arrayidx231 = getelementptr inbounds i32, i32* %184, i64 %idxprom230, !dbg !2854
  %185 = load i32, i32* %arrayidx231, align 4, !dbg !2854
  %shr232 = ashr i32 %185, 1, !dbg !2855
  %sub233 = sub i32 %sub227, %shr232, !dbg !2856
  store i32 %sub233, i32* %a3213, align 4, !dbg !2836
  call void @llvm.dbg.declare(metadata i32* %a5234, metadata !2857, metadata !67), !dbg !2858
  %186 = load i32, i32* %i, align 4, !dbg !2859
  %mul235 = mul nsw i32 %186, 8, !dbg !2860
  %add236 = add nsw i32 1, %mul235, !dbg !2861
  %idxprom237 = sext i32 %add236 to i64, !dbg !2862
  %187 = load i32*, i32** %block, align 8, !dbg !2862
  %arrayidx238 = getelementptr inbounds i32, i32* %187, i64 %idxprom237, !dbg !2862
  %188 = load i32, i32* %arrayidx238, align 4, !dbg !2862
  %sub239 = sub i32 0, %188, !dbg !2863
  %189 = load i32, i32* %i, align 4, !dbg !2864
  %mul240 = mul nsw i32 %189, 8, !dbg !2865
  %add241 = add nsw i32 7, %mul240, !dbg !2866
  %idxprom242 = sext i32 %add241 to i64, !dbg !2867
  %190 = load i32*, i32** %block, align 8, !dbg !2867
  %arrayidx243 = getelementptr inbounds i32, i32* %190, i64 %idxprom242, !dbg !2867
  %191 = load i32, i32* %arrayidx243, align 4, !dbg !2867
  %add244 = add i32 %sub239, %191, !dbg !2868
  %192 = load i32, i32* %i, align 4, !dbg !2869
  %mul245 = mul nsw i32 %192, 8, !dbg !2870
  %add246 = add nsw i32 5, %mul245, !dbg !2871
  %idxprom247 = sext i32 %add246 to i64, !dbg !2872
  %193 = load i32*, i32** %block, align 8, !dbg !2872
  %arrayidx248 = getelementptr inbounds i32, i32* %193, i64 %idxprom247, !dbg !2872
  %194 = load i32, i32* %arrayidx248, align 4, !dbg !2872
  %add249 = add i32 %add244, %194, !dbg !2873
  %195 = load i32, i32* %i, align 4, !dbg !2874
  %mul250 = mul nsw i32 %195, 8, !dbg !2875
  %add251 = add nsw i32 5, %mul250, !dbg !2876
  %idxprom252 = sext i32 %add251 to i64, !dbg !2877
  %196 = load i32*, i32** %block, align 8, !dbg !2877
  %arrayidx253 = getelementptr inbounds i32, i32* %196, i64 %idxprom252, !dbg !2877
  %197 = load i32, i32* %arrayidx253, align 4, !dbg !2877
  %shr254 = ashr i32 %197, 1, !dbg !2878
  %add255 = add i32 %add249, %shr254, !dbg !2879
  store i32 %add255, i32* %a5234, align 4, !dbg !2858
  call void @llvm.dbg.declare(metadata i32* %a7256, metadata !2880, metadata !67), !dbg !2881
  %198 = load i32, i32* %i, align 4, !dbg !2882
  %mul257 = mul nsw i32 %198, 8, !dbg !2883
  %add258 = add nsw i32 3, %mul257, !dbg !2884
  %idxprom259 = sext i32 %add258 to i64, !dbg !2885
  %199 = load i32*, i32** %block, align 8, !dbg !2885
  %arrayidx260 = getelementptr inbounds i32, i32* %199, i64 %idxprom259, !dbg !2885
  %200 = load i32, i32* %arrayidx260, align 4, !dbg !2885
  %201 = load i32, i32* %i, align 4, !dbg !2886
  %mul261 = mul nsw i32 %201, 8, !dbg !2887
  %add262 = add nsw i32 5, %mul261, !dbg !2888
  %idxprom263 = sext i32 %add262 to i64, !dbg !2889
  %202 = load i32*, i32** %block, align 8, !dbg !2889
  %arrayidx264 = getelementptr inbounds i32, i32* %202, i64 %idxprom263, !dbg !2889
  %203 = load i32, i32* %arrayidx264, align 4, !dbg !2889
  %add265 = add i32 %200, %203, !dbg !2890
  %204 = load i32, i32* %i, align 4, !dbg !2891
  %mul266 = mul nsw i32 %204, 8, !dbg !2892
  %add267 = add nsw i32 1, %mul266, !dbg !2893
  %idxprom268 = sext i32 %add267 to i64, !dbg !2894
  %205 = load i32*, i32** %block, align 8, !dbg !2894
  %arrayidx269 = getelementptr inbounds i32, i32* %205, i64 %idxprom268, !dbg !2894
  %206 = load i32, i32* %arrayidx269, align 4, !dbg !2894
  %add270 = add i32 %add265, %206, !dbg !2895
  %207 = load i32, i32* %i, align 4, !dbg !2896
  %mul271 = mul nsw i32 %207, 8, !dbg !2897
  %add272 = add nsw i32 1, %mul271, !dbg !2898
  %idxprom273 = sext i32 %add272 to i64, !dbg !2899
  %208 = load i32*, i32** %block, align 8, !dbg !2899
  %arrayidx274 = getelementptr inbounds i32, i32* %208, i64 %idxprom273, !dbg !2899
  %209 = load i32, i32* %arrayidx274, align 4, !dbg !2899
  %shr275 = ashr i32 %209, 1, !dbg !2900
  %add276 = add i32 %add270, %shr275, !dbg !2901
  store i32 %add276, i32* %a7256, align 4, !dbg !2881
  call void @llvm.dbg.declare(metadata i32* %b1277, metadata !2902, metadata !67), !dbg !2903
  %210 = load i32, i32* %a7256, align 4, !dbg !2904
  %shr278 = ashr i32 %210, 2, !dbg !2905
  %211 = load i32, i32* %a1191, align 4, !dbg !2906
  %add279 = add i32 %shr278, %211, !dbg !2907
  store i32 %add279, i32* %b1277, align 4, !dbg !2903
  call void @llvm.dbg.declare(metadata i32* %b3280, metadata !2908, metadata !67), !dbg !2909
  %212 = load i32, i32* %a3213, align 4, !dbg !2910
  %213 = load i32, i32* %a5234, align 4, !dbg !2911
  %shr281 = ashr i32 %213, 2, !dbg !2912
  %add282 = add i32 %212, %shr281, !dbg !2913
  store i32 %add282, i32* %b3280, align 4, !dbg !2909
  call void @llvm.dbg.declare(metadata i32* %b5283, metadata !2914, metadata !67), !dbg !2915
  %214 = load i32, i32* %a3213, align 4, !dbg !2916
  %shr284 = ashr i32 %214, 2, !dbg !2917
  %215 = load i32, i32* %a5234, align 4, !dbg !2918
  %sub285 = sub i32 %shr284, %215, !dbg !2919
  store i32 %sub285, i32* %b5283, align 4, !dbg !2915
  call void @llvm.dbg.declare(metadata i32* %b7286, metadata !2920, metadata !67), !dbg !2921
  %216 = load i32, i32* %a7256, align 4, !dbg !2922
  %217 = load i32, i32* %a1191, align 4, !dbg !2923
  %shr287 = ashr i32 %217, 2, !dbg !2924
  %sub288 = sub i32 %216, %shr287, !dbg !2925
  store i32 %sub288, i32* %b7286, align 4, !dbg !2921
  %218 = load i32, i32* %i, align 4, !dbg !2926
  %219 = load i32, i32* %stride.addr, align 4, !dbg !2927
  %mul289 = mul nsw i32 0, %219, !dbg !2928
  %add290 = add nsw i32 %218, %mul289, !dbg !2929
  %idxprom291 = sext i32 %add290 to i64, !dbg !2930
  %220 = load i16*, i16** %dst, align 8, !dbg !2930
  %arrayidx292 = getelementptr inbounds i16, i16* %220, i64 %idxprom291, !dbg !2930
  %221 = load i16, i16* %arrayidx292, align 2, !dbg !2930
  %conv = zext i16 %221 to i32, !dbg !2930
  %222 = load i32, i32* %b0183, align 4, !dbg !2931
  %223 = load i32, i32* %b7286, align 4, !dbg !2932
  %add293 = add i32 %222, %223, !dbg !2933
  %shr294 = ashr i32 %add293, 6, !dbg !2934
  %add295 = add nsw i32 %conv, %shr294, !dbg !2935
  store i32 %add295, i32* %a.addr.i, align 4, !dbg !2936
  store i32 9, i32* %p.addr.i, align 4, !dbg !2936
  %224 = load i32, i32* %a.addr.i, align 4, !dbg !2937
  %225 = load i32, i32* %p.addr.i, align 4, !dbg !2938
  %shl.i = shl i32 1, %225, !dbg !2939
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !2940
  %neg.i = xor i32 %sub.i, -1, !dbg !2941
  %and.i = and i32 %224, %neg.i, !dbg !2942
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !2942
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !2943

if.then.i:                                        ; preds = %for.body141
  %226 = load i32, i32* %a.addr.i, align 4, !dbg !2944
  %neg1.i = xor i32 %226, -1, !dbg !2945
  %shr.i = ashr i32 %neg1.i, 31, !dbg !2946
  %227 = load i32, i32* %p.addr.i, align 4, !dbg !2947
  %shl2.i = shl i32 1, %227, !dbg !2948
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !2949
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !2950
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !2951
  br label %av_clip_uintp2_c.exit, !dbg !2951

if.else.i:                                        ; preds = %for.body141
  %228 = load i32, i32* %a.addr.i, align 4, !dbg !2952
  store i32 %228, i32* %retval.i, align 4, !dbg !2953
  br label %av_clip_uintp2_c.exit, !dbg !2953

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %229 = load i32, i32* %retval.i, align 4, !dbg !2954
  %conv296 = trunc i32 %229 to i16, !dbg !2936
  %230 = load i32, i32* %i, align 4, !dbg !2955
  %231 = load i32, i32* %stride.addr, align 4, !dbg !2956
  %mul297 = mul nsw i32 0, %231, !dbg !2957
  %add298 = add nsw i32 %230, %mul297, !dbg !2958
  %idxprom299 = sext i32 %add298 to i64, !dbg !2959
  %232 = load i16*, i16** %dst, align 8, !dbg !2959
  %arrayidx300 = getelementptr inbounds i16, i16* %232, i64 %idxprom299, !dbg !2959
  store i16 %conv296, i16* %arrayidx300, align 2, !dbg !2960
  %233 = load i32, i32* %i, align 4, !dbg !2961
  %234 = load i32, i32* %stride.addr, align 4, !dbg !2962
  %mul301 = mul nsw i32 1, %234, !dbg !2963
  %add302 = add nsw i32 %233, %mul301, !dbg !2964
  %idxprom303 = sext i32 %add302 to i64, !dbg !2965
  %235 = load i16*, i16** %dst, align 8, !dbg !2965
  %arrayidx304 = getelementptr inbounds i16, i16* %235, i64 %idxprom303, !dbg !2965
  %236 = load i16, i16* %arrayidx304, align 2, !dbg !2965
  %conv305 = zext i16 %236 to i32, !dbg !2965
  %237 = load i32, i32* %b2185, align 4, !dbg !2966
  %238 = load i32, i32* %b5283, align 4, !dbg !2967
  %add306 = add i32 %237, %238, !dbg !2968
  %shr307 = ashr i32 %add306, 6, !dbg !2969
  %add308 = add nsw i32 %conv305, %shr307, !dbg !2970
  store i32 %add308, i32* %a.addr.i499, align 4, !dbg !2971
  store i32 9, i32* %p.addr.i500, align 4, !dbg !2971
  %239 = load i32, i32* %a.addr.i499, align 4, !dbg !2972
  %240 = load i32, i32* %p.addr.i500, align 4, !dbg !2973
  %shl.i501 = shl i32 1, %240, !dbg !2974
  %sub.i502 = sub nsw i32 %shl.i501, 1, !dbg !2975
  %neg.i503 = xor i32 %sub.i502, -1, !dbg !2976
  %and.i504 = and i32 %239, %neg.i503, !dbg !2977
  %tobool.i505 = icmp ne i32 %and.i504, 0, !dbg !2977
  br i1 %tobool.i505, label %if.then.i511, label %if.else.i512, !dbg !2978

if.then.i511:                                     ; preds = %av_clip_uintp2_c.exit
  %241 = load i32, i32* %a.addr.i499, align 4, !dbg !2979
  %neg1.i506 = xor i32 %241, -1, !dbg !2980
  %shr.i507 = ashr i32 %neg1.i506, 31, !dbg !2981
  %242 = load i32, i32* %p.addr.i500, align 4, !dbg !2982
  %shl2.i508 = shl i32 1, %242, !dbg !2983
  %sub3.i509 = sub nsw i32 %shl2.i508, 1, !dbg !2984
  %and4.i510 = and i32 %shr.i507, %sub3.i509, !dbg !2985
  store i32 %and4.i510, i32* %retval.i498, align 4, !dbg !2986
  br label %av_clip_uintp2_c.exit513, !dbg !2986

if.else.i512:                                     ; preds = %av_clip_uintp2_c.exit
  %243 = load i32, i32* %a.addr.i499, align 4, !dbg !2987
  store i32 %243, i32* %retval.i498, align 4, !dbg !2988
  br label %av_clip_uintp2_c.exit513, !dbg !2988

av_clip_uintp2_c.exit513:                         ; preds = %if.then.i511, %if.else.i512
  %244 = load i32, i32* %retval.i498, align 4, !dbg !2989
  %conv310 = trunc i32 %244 to i16, !dbg !2971
  %245 = load i32, i32* %i, align 4, !dbg !2990
  %246 = load i32, i32* %stride.addr, align 4, !dbg !2991
  %mul311 = mul nsw i32 1, %246, !dbg !2992
  %add312 = add nsw i32 %245, %mul311, !dbg !2993
  %idxprom313 = sext i32 %add312 to i64, !dbg !2994
  %247 = load i16*, i16** %dst, align 8, !dbg !2994
  %arrayidx314 = getelementptr inbounds i16, i16* %247, i64 %idxprom313, !dbg !2994
  store i16 %conv310, i16* %arrayidx314, align 2, !dbg !2995
  %248 = load i32, i32* %i, align 4, !dbg !2996
  %249 = load i32, i32* %stride.addr, align 4, !dbg !2997
  %mul315 = mul nsw i32 2, %249, !dbg !2998
  %add316 = add nsw i32 %248, %mul315, !dbg !2999
  %idxprom317 = sext i32 %add316 to i64, !dbg !3000
  %250 = load i16*, i16** %dst, align 8, !dbg !3000
  %arrayidx318 = getelementptr inbounds i16, i16* %250, i64 %idxprom317, !dbg !3000
  %251 = load i16, i16* %arrayidx318, align 2, !dbg !3000
  %conv319 = zext i16 %251 to i32, !dbg !3000
  %252 = load i32, i32* %b4187, align 4, !dbg !3001
  %253 = load i32, i32* %b3280, align 4, !dbg !3002
  %add320 = add i32 %252, %253, !dbg !3003
  %shr321 = ashr i32 %add320, 6, !dbg !3004
  %add322 = add nsw i32 %conv319, %shr321, !dbg !3005
  store i32 %add322, i32* %a.addr.i483, align 4, !dbg !3006
  store i32 9, i32* %p.addr.i484, align 4, !dbg !3006
  %254 = load i32, i32* %a.addr.i483, align 4, !dbg !3007
  %255 = load i32, i32* %p.addr.i484, align 4, !dbg !3008
  %shl.i485 = shl i32 1, %255, !dbg !3009
  %sub.i486 = sub nsw i32 %shl.i485, 1, !dbg !3010
  %neg.i487 = xor i32 %sub.i486, -1, !dbg !3011
  %and.i488 = and i32 %254, %neg.i487, !dbg !3012
  %tobool.i489 = icmp ne i32 %and.i488, 0, !dbg !3012
  br i1 %tobool.i489, label %if.then.i495, label %if.else.i496, !dbg !3013

if.then.i495:                                     ; preds = %av_clip_uintp2_c.exit513
  %256 = load i32, i32* %a.addr.i483, align 4, !dbg !3014
  %neg1.i490 = xor i32 %256, -1, !dbg !3015
  %shr.i491 = ashr i32 %neg1.i490, 31, !dbg !3016
  %257 = load i32, i32* %p.addr.i484, align 4, !dbg !3017
  %shl2.i492 = shl i32 1, %257, !dbg !3018
  %sub3.i493 = sub nsw i32 %shl2.i492, 1, !dbg !3019
  %and4.i494 = and i32 %shr.i491, %sub3.i493, !dbg !3020
  store i32 %and4.i494, i32* %retval.i482, align 4, !dbg !3021
  br label %av_clip_uintp2_c.exit497, !dbg !3021

if.else.i496:                                     ; preds = %av_clip_uintp2_c.exit513
  %258 = load i32, i32* %a.addr.i483, align 4, !dbg !3022
  store i32 %258, i32* %retval.i482, align 4, !dbg !3023
  br label %av_clip_uintp2_c.exit497, !dbg !3023

av_clip_uintp2_c.exit497:                         ; preds = %if.then.i495, %if.else.i496
  %259 = load i32, i32* %retval.i482, align 4, !dbg !3024
  %conv324 = trunc i32 %259 to i16, !dbg !3006
  %260 = load i32, i32* %i, align 4, !dbg !3025
  %261 = load i32, i32* %stride.addr, align 4, !dbg !3026
  %mul325 = mul nsw i32 2, %261, !dbg !3027
  %add326 = add nsw i32 %260, %mul325, !dbg !3028
  %idxprom327 = sext i32 %add326 to i64, !dbg !3029
  %262 = load i16*, i16** %dst, align 8, !dbg !3029
  %arrayidx328 = getelementptr inbounds i16, i16* %262, i64 %idxprom327, !dbg !3029
  store i16 %conv324, i16* %arrayidx328, align 2, !dbg !3030
  %263 = load i32, i32* %i, align 4, !dbg !3031
  %264 = load i32, i32* %stride.addr, align 4, !dbg !3032
  %mul329 = mul nsw i32 3, %264, !dbg !3033
  %add330 = add nsw i32 %263, %mul329, !dbg !3034
  %idxprom331 = sext i32 %add330 to i64, !dbg !3035
  %265 = load i16*, i16** %dst, align 8, !dbg !3035
  %arrayidx332 = getelementptr inbounds i16, i16* %265, i64 %idxprom331, !dbg !3035
  %266 = load i16, i16* %arrayidx332, align 2, !dbg !3035
  %conv333 = zext i16 %266 to i32, !dbg !3035
  %267 = load i32, i32* %b6189, align 4, !dbg !3036
  %268 = load i32, i32* %b1277, align 4, !dbg !3037
  %add334 = add i32 %267, %268, !dbg !3038
  %shr335 = ashr i32 %add334, 6, !dbg !3039
  %add336 = add nsw i32 %conv333, %shr335, !dbg !3040
  store i32 %add336, i32* %a.addr.i467, align 4, !dbg !3041
  store i32 9, i32* %p.addr.i468, align 4, !dbg !3041
  %269 = load i32, i32* %a.addr.i467, align 4, !dbg !3042
  %270 = load i32, i32* %p.addr.i468, align 4, !dbg !3043
  %shl.i469 = shl i32 1, %270, !dbg !3044
  %sub.i470 = sub nsw i32 %shl.i469, 1, !dbg !3045
  %neg.i471 = xor i32 %sub.i470, -1, !dbg !3046
  %and.i472 = and i32 %269, %neg.i471, !dbg !3047
  %tobool.i473 = icmp ne i32 %and.i472, 0, !dbg !3047
  br i1 %tobool.i473, label %if.then.i479, label %if.else.i480, !dbg !3048

if.then.i479:                                     ; preds = %av_clip_uintp2_c.exit497
  %271 = load i32, i32* %a.addr.i467, align 4, !dbg !3049
  %neg1.i474 = xor i32 %271, -1, !dbg !3050
  %shr.i475 = ashr i32 %neg1.i474, 31, !dbg !3051
  %272 = load i32, i32* %p.addr.i468, align 4, !dbg !3052
  %shl2.i476 = shl i32 1, %272, !dbg !3053
  %sub3.i477 = sub nsw i32 %shl2.i476, 1, !dbg !3054
  %and4.i478 = and i32 %shr.i475, %sub3.i477, !dbg !3055
  store i32 %and4.i478, i32* %retval.i466, align 4, !dbg !3056
  br label %av_clip_uintp2_c.exit481, !dbg !3056

if.else.i480:                                     ; preds = %av_clip_uintp2_c.exit497
  %273 = load i32, i32* %a.addr.i467, align 4, !dbg !3057
  store i32 %273, i32* %retval.i466, align 4, !dbg !3058
  br label %av_clip_uintp2_c.exit481, !dbg !3058

av_clip_uintp2_c.exit481:                         ; preds = %if.then.i479, %if.else.i480
  %274 = load i32, i32* %retval.i466, align 4, !dbg !3059
  %conv338 = trunc i32 %274 to i16, !dbg !3041
  %275 = load i32, i32* %i, align 4, !dbg !3060
  %276 = load i32, i32* %stride.addr, align 4, !dbg !3061
  %mul339 = mul nsw i32 3, %276, !dbg !3062
  %add340 = add nsw i32 %275, %mul339, !dbg !3063
  %idxprom341 = sext i32 %add340 to i64, !dbg !3064
  %277 = load i16*, i16** %dst, align 8, !dbg !3064
  %arrayidx342 = getelementptr inbounds i16, i16* %277, i64 %idxprom341, !dbg !3064
  store i16 %conv338, i16* %arrayidx342, align 2, !dbg !3065
  %278 = load i32, i32* %i, align 4, !dbg !3066
  %279 = load i32, i32* %stride.addr, align 4, !dbg !3067
  %mul343 = mul nsw i32 4, %279, !dbg !3068
  %add344 = add nsw i32 %278, %mul343, !dbg !3069
  %idxprom345 = sext i32 %add344 to i64, !dbg !3070
  %280 = load i16*, i16** %dst, align 8, !dbg !3070
  %arrayidx346 = getelementptr inbounds i16, i16* %280, i64 %idxprom345, !dbg !3070
  %281 = load i16, i16* %arrayidx346, align 2, !dbg !3070
  %conv347 = zext i16 %281 to i32, !dbg !3070
  %282 = load i32, i32* %b6189, align 4, !dbg !3071
  %283 = load i32, i32* %b1277, align 4, !dbg !3072
  %sub348 = sub i32 %282, %283, !dbg !3073
  %shr349 = ashr i32 %sub348, 6, !dbg !3074
  %add350 = add nsw i32 %conv347, %shr349, !dbg !3075
  store i32 %add350, i32* %a.addr.i451, align 4, !dbg !3076
  store i32 9, i32* %p.addr.i452, align 4, !dbg !3076
  %284 = load i32, i32* %a.addr.i451, align 4, !dbg !3077
  %285 = load i32, i32* %p.addr.i452, align 4, !dbg !3078
  %shl.i453 = shl i32 1, %285, !dbg !3079
  %sub.i454 = sub nsw i32 %shl.i453, 1, !dbg !3080
  %neg.i455 = xor i32 %sub.i454, -1, !dbg !3081
  %and.i456 = and i32 %284, %neg.i455, !dbg !3082
  %tobool.i457 = icmp ne i32 %and.i456, 0, !dbg !3082
  br i1 %tobool.i457, label %if.then.i463, label %if.else.i464, !dbg !3083

if.then.i463:                                     ; preds = %av_clip_uintp2_c.exit481
  %286 = load i32, i32* %a.addr.i451, align 4, !dbg !3084
  %neg1.i458 = xor i32 %286, -1, !dbg !3085
  %shr.i459 = ashr i32 %neg1.i458, 31, !dbg !3086
  %287 = load i32, i32* %p.addr.i452, align 4, !dbg !3087
  %shl2.i460 = shl i32 1, %287, !dbg !3088
  %sub3.i461 = sub nsw i32 %shl2.i460, 1, !dbg !3089
  %and4.i462 = and i32 %shr.i459, %sub3.i461, !dbg !3090
  store i32 %and4.i462, i32* %retval.i450, align 4, !dbg !3091
  br label %av_clip_uintp2_c.exit465, !dbg !3091

if.else.i464:                                     ; preds = %av_clip_uintp2_c.exit481
  %288 = load i32, i32* %a.addr.i451, align 4, !dbg !3092
  store i32 %288, i32* %retval.i450, align 4, !dbg !3093
  br label %av_clip_uintp2_c.exit465, !dbg !3093

av_clip_uintp2_c.exit465:                         ; preds = %if.then.i463, %if.else.i464
  %289 = load i32, i32* %retval.i450, align 4, !dbg !3094
  %conv352 = trunc i32 %289 to i16, !dbg !3076
  %290 = load i32, i32* %i, align 4, !dbg !3095
  %291 = load i32, i32* %stride.addr, align 4, !dbg !3096
  %mul353 = mul nsw i32 4, %291, !dbg !3097
  %add354 = add nsw i32 %290, %mul353, !dbg !3098
  %idxprom355 = sext i32 %add354 to i64, !dbg !3099
  %292 = load i16*, i16** %dst, align 8, !dbg !3099
  %arrayidx356 = getelementptr inbounds i16, i16* %292, i64 %idxprom355, !dbg !3099
  store i16 %conv352, i16* %arrayidx356, align 2, !dbg !3100
  %293 = load i32, i32* %i, align 4, !dbg !3101
  %294 = load i32, i32* %stride.addr, align 4, !dbg !3102
  %mul357 = mul nsw i32 5, %294, !dbg !3103
  %add358 = add nsw i32 %293, %mul357, !dbg !3104
  %idxprom359 = sext i32 %add358 to i64, !dbg !3105
  %295 = load i16*, i16** %dst, align 8, !dbg !3105
  %arrayidx360 = getelementptr inbounds i16, i16* %295, i64 %idxprom359, !dbg !3105
  %296 = load i16, i16* %arrayidx360, align 2, !dbg !3105
  %conv361 = zext i16 %296 to i32, !dbg !3105
  %297 = load i32, i32* %b4187, align 4, !dbg !3106
  %298 = load i32, i32* %b3280, align 4, !dbg !3107
  %sub362 = sub i32 %297, %298, !dbg !3108
  %shr363 = ashr i32 %sub362, 6, !dbg !3109
  %add364 = add nsw i32 %conv361, %shr363, !dbg !3110
  store i32 %add364, i32* %a.addr.i435, align 4, !dbg !3111
  store i32 9, i32* %p.addr.i436, align 4, !dbg !3111
  %299 = load i32, i32* %a.addr.i435, align 4, !dbg !3112
  %300 = load i32, i32* %p.addr.i436, align 4, !dbg !3113
  %shl.i437 = shl i32 1, %300, !dbg !3114
  %sub.i438 = sub nsw i32 %shl.i437, 1, !dbg !3115
  %neg.i439 = xor i32 %sub.i438, -1, !dbg !3116
  %and.i440 = and i32 %299, %neg.i439, !dbg !3117
  %tobool.i441 = icmp ne i32 %and.i440, 0, !dbg !3117
  br i1 %tobool.i441, label %if.then.i447, label %if.else.i448, !dbg !3118

if.then.i447:                                     ; preds = %av_clip_uintp2_c.exit465
  %301 = load i32, i32* %a.addr.i435, align 4, !dbg !3119
  %neg1.i442 = xor i32 %301, -1, !dbg !3120
  %shr.i443 = ashr i32 %neg1.i442, 31, !dbg !3121
  %302 = load i32, i32* %p.addr.i436, align 4, !dbg !3122
  %shl2.i444 = shl i32 1, %302, !dbg !3123
  %sub3.i445 = sub nsw i32 %shl2.i444, 1, !dbg !3124
  %and4.i446 = and i32 %shr.i443, %sub3.i445, !dbg !3125
  store i32 %and4.i446, i32* %retval.i434, align 4, !dbg !3126
  br label %av_clip_uintp2_c.exit449, !dbg !3126

if.else.i448:                                     ; preds = %av_clip_uintp2_c.exit465
  %303 = load i32, i32* %a.addr.i435, align 4, !dbg !3127
  store i32 %303, i32* %retval.i434, align 4, !dbg !3128
  br label %av_clip_uintp2_c.exit449, !dbg !3128

av_clip_uintp2_c.exit449:                         ; preds = %if.then.i447, %if.else.i448
  %304 = load i32, i32* %retval.i434, align 4, !dbg !3129
  %conv366 = trunc i32 %304 to i16, !dbg !3111
  %305 = load i32, i32* %i, align 4, !dbg !3130
  %306 = load i32, i32* %stride.addr, align 4, !dbg !3131
  %mul367 = mul nsw i32 5, %306, !dbg !3132
  %add368 = add nsw i32 %305, %mul367, !dbg !3133
  %idxprom369 = sext i32 %add368 to i64, !dbg !3134
  %307 = load i16*, i16** %dst, align 8, !dbg !3134
  %arrayidx370 = getelementptr inbounds i16, i16* %307, i64 %idxprom369, !dbg !3134
  store i16 %conv366, i16* %arrayidx370, align 2, !dbg !3135
  %308 = load i32, i32* %i, align 4, !dbg !3136
  %309 = load i32, i32* %stride.addr, align 4, !dbg !3137
  %mul371 = mul nsw i32 6, %309, !dbg !3138
  %add372 = add nsw i32 %308, %mul371, !dbg !3139
  %idxprom373 = sext i32 %add372 to i64, !dbg !3140
  %310 = load i16*, i16** %dst, align 8, !dbg !3140
  %arrayidx374 = getelementptr inbounds i16, i16* %310, i64 %idxprom373, !dbg !3140
  %311 = load i16, i16* %arrayidx374, align 2, !dbg !3140
  %conv375 = zext i16 %311 to i32, !dbg !3140
  %312 = load i32, i32* %b2185, align 4, !dbg !3141
  %313 = load i32, i32* %b5283, align 4, !dbg !3142
  %sub376 = sub i32 %312, %313, !dbg !3143
  %shr377 = ashr i32 %sub376, 6, !dbg !3144
  %add378 = add nsw i32 %conv375, %shr377, !dbg !3145
  store i32 %add378, i32* %a.addr.i419, align 4, !dbg !3146
  store i32 9, i32* %p.addr.i420, align 4, !dbg !3146
  %314 = load i32, i32* %a.addr.i419, align 4, !dbg !3147
  %315 = load i32, i32* %p.addr.i420, align 4, !dbg !3148
  %shl.i421 = shl i32 1, %315, !dbg !3149
  %sub.i422 = sub nsw i32 %shl.i421, 1, !dbg !3150
  %neg.i423 = xor i32 %sub.i422, -1, !dbg !3151
  %and.i424 = and i32 %314, %neg.i423, !dbg !3152
  %tobool.i425 = icmp ne i32 %and.i424, 0, !dbg !3152
  br i1 %tobool.i425, label %if.then.i431, label %if.else.i432, !dbg !3153

if.then.i431:                                     ; preds = %av_clip_uintp2_c.exit449
  %316 = load i32, i32* %a.addr.i419, align 4, !dbg !3154
  %neg1.i426 = xor i32 %316, -1, !dbg !3155
  %shr.i427 = ashr i32 %neg1.i426, 31, !dbg !3156
  %317 = load i32, i32* %p.addr.i420, align 4, !dbg !3157
  %shl2.i428 = shl i32 1, %317, !dbg !3158
  %sub3.i429 = sub nsw i32 %shl2.i428, 1, !dbg !3159
  %and4.i430 = and i32 %shr.i427, %sub3.i429, !dbg !3160
  store i32 %and4.i430, i32* %retval.i418, align 4, !dbg !3161
  br label %av_clip_uintp2_c.exit433, !dbg !3161

if.else.i432:                                     ; preds = %av_clip_uintp2_c.exit449
  %318 = load i32, i32* %a.addr.i419, align 4, !dbg !3162
  store i32 %318, i32* %retval.i418, align 4, !dbg !3163
  br label %av_clip_uintp2_c.exit433, !dbg !3163

av_clip_uintp2_c.exit433:                         ; preds = %if.then.i431, %if.else.i432
  %319 = load i32, i32* %retval.i418, align 4, !dbg !3164
  %conv380 = trunc i32 %319 to i16, !dbg !3146
  %320 = load i32, i32* %i, align 4, !dbg !3165
  %321 = load i32, i32* %stride.addr, align 4, !dbg !3166
  %mul381 = mul nsw i32 6, %321, !dbg !3167
  %add382 = add nsw i32 %320, %mul381, !dbg !3168
  %idxprom383 = sext i32 %add382 to i64, !dbg !3169
  %322 = load i16*, i16** %dst, align 8, !dbg !3169
  %arrayidx384 = getelementptr inbounds i16, i16* %322, i64 %idxprom383, !dbg !3169
  store i16 %conv380, i16* %arrayidx384, align 2, !dbg !3170
  %323 = load i32, i32* %i, align 4, !dbg !3171
  %324 = load i32, i32* %stride.addr, align 4, !dbg !3172
  %mul385 = mul nsw i32 7, %324, !dbg !3173
  %add386 = add nsw i32 %323, %mul385, !dbg !3174
  %idxprom387 = sext i32 %add386 to i64, !dbg !3175
  %325 = load i16*, i16** %dst, align 8, !dbg !3175
  %arrayidx388 = getelementptr inbounds i16, i16* %325, i64 %idxprom387, !dbg !3175
  %326 = load i16, i16* %arrayidx388, align 2, !dbg !3175
  %conv389 = zext i16 %326 to i32, !dbg !3175
  %327 = load i32, i32* %b0183, align 4, !dbg !3176
  %328 = load i32, i32* %b7286, align 4, !dbg !3177
  %sub390 = sub i32 %327, %328, !dbg !3178
  %shr391 = ashr i32 %sub390, 6, !dbg !3179
  %add392 = add nsw i32 %conv389, %shr391, !dbg !3180
  store i32 %add392, i32* %a.addr.i403, align 4, !dbg !3181
  store i32 9, i32* %p.addr.i404, align 4, !dbg !3181
  %329 = load i32, i32* %a.addr.i403, align 4, !dbg !3182
  %330 = load i32, i32* %p.addr.i404, align 4, !dbg !3183
  %shl.i405 = shl i32 1, %330, !dbg !3184
  %sub.i406 = sub nsw i32 %shl.i405, 1, !dbg !3185
  %neg.i407 = xor i32 %sub.i406, -1, !dbg !3186
  %and.i408 = and i32 %329, %neg.i407, !dbg !3187
  %tobool.i409 = icmp ne i32 %and.i408, 0, !dbg !3187
  br i1 %tobool.i409, label %if.then.i415, label %if.else.i416, !dbg !3188

if.then.i415:                                     ; preds = %av_clip_uintp2_c.exit433
  %331 = load i32, i32* %a.addr.i403, align 4, !dbg !3189
  %neg1.i410 = xor i32 %331, -1, !dbg !3190
  %shr.i411 = ashr i32 %neg1.i410, 31, !dbg !3191
  %332 = load i32, i32* %p.addr.i404, align 4, !dbg !3192
  %shl2.i412 = shl i32 1, %332, !dbg !3193
  %sub3.i413 = sub nsw i32 %shl2.i412, 1, !dbg !3194
  %and4.i414 = and i32 %shr.i411, %sub3.i413, !dbg !3195
  store i32 %and4.i414, i32* %retval.i402, align 4, !dbg !3196
  br label %av_clip_uintp2_c.exit417, !dbg !3196

if.else.i416:                                     ; preds = %av_clip_uintp2_c.exit433
  %333 = load i32, i32* %a.addr.i403, align 4, !dbg !3197
  store i32 %333, i32* %retval.i402, align 4, !dbg !3198
  br label %av_clip_uintp2_c.exit417, !dbg !3198

av_clip_uintp2_c.exit417:                         ; preds = %if.then.i415, %if.else.i416
  %334 = load i32, i32* %retval.i402, align 4, !dbg !3199
  %conv394 = trunc i32 %334 to i16, !dbg !3181
  %335 = load i32, i32* %i, align 4, !dbg !3200
  %336 = load i32, i32* %stride.addr, align 4, !dbg !3201
  %mul395 = mul nsw i32 7, %336, !dbg !3202
  %add396 = add nsw i32 %335, %mul395, !dbg !3203
  %idxprom397 = sext i32 %add396 to i64, !dbg !3204
  %337 = load i16*, i16** %dst, align 8, !dbg !3204
  %arrayidx398 = getelementptr inbounds i16, i16* %337, i64 %idxprom397, !dbg !3204
  store i16 %conv394, i16* %arrayidx398, align 2, !dbg !3205
  br label %for.inc399, !dbg !3206

for.inc399:                                       ; preds = %av_clip_uintp2_c.exit417
  %338 = load i32, i32* %i, align 4, !dbg !3207
  %inc400 = add nsw i32 %338, 1, !dbg !3207
  store i32 %inc400, i32* %i, align 4, !dbg !3207
  br label %for.cond139, !dbg !3209, !llvm.loop !3210

for.end401:                                       ; preds = %for.cond139
  %339 = load i32*, i32** %block, align 8, !dbg !3212
  %340 = bitcast i32* %339 to i8*, !dbg !3213
  call void @llvm.memset.p0i8.i64(i8* %340, i8 0, i64 256, i32 4, i1 false), !dbg !3213
  ret void, !dbg !3214
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_dc_add_9_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !3215 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !3216
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !3223
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %dc = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !3224, metadata !67), !dbg !3225
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !3226, metadata !67), !dbg !3227
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !3228, metadata !67), !dbg !3229
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3230, metadata !67), !dbg !3231
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3232, metadata !67), !dbg !3233
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !3234, metadata !67), !dbg !3235
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !3236
  %1 = bitcast i8* %0 to i16*, !dbg !3237
  store i16* %1, i16** %dst, align 8, !dbg !3235
  call void @llvm.dbg.declare(metadata i32** %block, metadata !3238, metadata !67), !dbg !3239
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !3240
  %3 = bitcast i16* %2 to i32*, !dbg !3241
  store i32* %3, i32** %block, align 8, !dbg !3239
  call void @llvm.dbg.declare(metadata i32* %dc, metadata !3242, metadata !67), !dbg !3243
  %4 = load i32*, i32** %block, align 8, !dbg !3244
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 0, !dbg !3244
  %5 = load i32, i32* %arrayidx, align 4, !dbg !3244
  %add = add nsw i32 %5, 32, !dbg !3245
  %shr = ashr i32 %add, 6, !dbg !3246
  store i32 %shr, i32* %dc, align 4, !dbg !3243
  %6 = load i32, i32* %stride.addr, align 4, !dbg !3247
  %conv = sext i32 %6 to i64, !dbg !3247
  %div = udiv i64 %conv, 2, !dbg !3247
  %conv1 = trunc i64 %div to i32, !dbg !3247
  store i32 %conv1, i32* %stride.addr, align 4, !dbg !3247
  %7 = load i32*, i32** %block, align 8, !dbg !3248
  %arrayidx2 = getelementptr inbounds i32, i32* %7, i64 0, !dbg !3248
  store i32 0, i32* %arrayidx2, align 4, !dbg !3249
  store i32 0, i32* %j, align 4, !dbg !3250
  br label %for.cond, !dbg !3251

for.cond:                                         ; preds = %for.inc14, %entry
  %8 = load i32, i32* %j, align 4, !dbg !3252
  %cmp = icmp slt i32 %8, 4, !dbg !3254
  br i1 %cmp, label %for.body, label %for.end16, !dbg !3255

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3256
  br label %for.cond4, !dbg !3257

for.cond4:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !3258
  %cmp5 = icmp slt i32 %9, 4, !dbg !3260
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !3261

for.body7:                                        ; preds = %for.cond4
  %10 = load i32, i32* %i, align 4, !dbg !3262
  %idxprom = sext i32 %10 to i64, !dbg !3263
  %11 = load i16*, i16** %dst, align 8, !dbg !3263
  %arrayidx8 = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !3263
  %12 = load i16, i16* %arrayidx8, align 2, !dbg !3263
  %conv9 = zext i16 %12 to i32, !dbg !3263
  %13 = load i32, i32* %dc, align 4, !dbg !3264
  %add10 = add nsw i32 %conv9, %13, !dbg !3265
  store i32 %add10, i32* %a.addr.i, align 4, !dbg !3266
  store i32 9, i32* %p.addr.i, align 4, !dbg !3266
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !3267
  %15 = load i32, i32* %p.addr.i, align 4, !dbg !3268
  %shl.i = shl i32 1, %15, !dbg !3269
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !3270
  %neg.i = xor i32 %sub.i, -1, !dbg !3271
  %and.i = and i32 %14, %neg.i, !dbg !3272
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !3272
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !3273

if.then.i:                                        ; preds = %for.body7
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !3274
  %neg1.i = xor i32 %16, -1, !dbg !3275
  %shr.i = ashr i32 %neg1.i, 31, !dbg !3276
  %17 = load i32, i32* %p.addr.i, align 4, !dbg !3277
  %shl2.i = shl i32 1, %17, !dbg !3278
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !3279
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !3280
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !3281
  br label %av_clip_uintp2_c.exit, !dbg !3281

if.else.i:                                        ; preds = %for.body7
  %18 = load i32, i32* %a.addr.i, align 4, !dbg !3282
  store i32 %18, i32* %retval.i, align 4, !dbg !3283
  br label %av_clip_uintp2_c.exit, !dbg !3283

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %19 = load i32, i32* %retval.i, align 4, !dbg !3284
  %conv11 = trunc i32 %19 to i16, !dbg !3266
  %20 = load i32, i32* %i, align 4, !dbg !3285
  %idxprom12 = sext i32 %20 to i64, !dbg !3286
  %21 = load i16*, i16** %dst, align 8, !dbg !3286
  %arrayidx13 = getelementptr inbounds i16, i16* %21, i64 %idxprom12, !dbg !3286
  store i16 %conv11, i16* %arrayidx13, align 2, !dbg !3287
  br label %for.inc, !dbg !3286

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %22 = load i32, i32* %i, align 4, !dbg !3288
  %inc = add nsw i32 %22, 1, !dbg !3288
  store i32 %inc, i32* %i, align 4, !dbg !3288
  br label %for.cond4, !dbg !3290, !llvm.loop !3291

for.end:                                          ; preds = %for.cond4
  %23 = load i32, i32* %stride.addr, align 4, !dbg !3293
  %24 = load i16*, i16** %dst, align 8, !dbg !3294
  %idx.ext = sext i32 %23 to i64, !dbg !3294
  %add.ptr = getelementptr inbounds i16, i16* %24, i64 %idx.ext, !dbg !3294
  store i16* %add.ptr, i16** %dst, align 8, !dbg !3294
  br label %for.inc14, !dbg !3295

for.inc14:                                        ; preds = %for.end
  %25 = load i32, i32* %j, align 4, !dbg !3296
  %inc15 = add nsw i32 %25, 1, !dbg !3296
  store i32 %inc15, i32* %j, align 4, !dbg !3296
  br label %for.cond, !dbg !3298, !llvm.loop !3299

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !3301
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_dc_add_9_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !3302 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !3303
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !3310
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %dc = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !3311, metadata !67), !dbg !3312
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !3313, metadata !67), !dbg !3314
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !3315, metadata !67), !dbg !3316
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3317, metadata !67), !dbg !3318
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3319, metadata !67), !dbg !3320
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !3321, metadata !67), !dbg !3322
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !3323
  %1 = bitcast i8* %0 to i16*, !dbg !3324
  store i16* %1, i16** %dst, align 8, !dbg !3322
  call void @llvm.dbg.declare(metadata i32** %block, metadata !3325, metadata !67), !dbg !3326
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !3327
  %3 = bitcast i16* %2 to i32*, !dbg !3328
  store i32* %3, i32** %block, align 8, !dbg !3326
  call void @llvm.dbg.declare(metadata i32* %dc, metadata !3329, metadata !67), !dbg !3330
  %4 = load i32*, i32** %block, align 8, !dbg !3331
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 0, !dbg !3331
  %5 = load i32, i32* %arrayidx, align 4, !dbg !3331
  %add = add nsw i32 %5, 32, !dbg !3332
  %shr = ashr i32 %add, 6, !dbg !3333
  store i32 %shr, i32* %dc, align 4, !dbg !3330
  %6 = load i32*, i32** %block, align 8, !dbg !3334
  %arrayidx1 = getelementptr inbounds i32, i32* %6, i64 0, !dbg !3334
  store i32 0, i32* %arrayidx1, align 4, !dbg !3335
  %7 = load i32, i32* %stride.addr, align 4, !dbg !3336
  %conv = sext i32 %7 to i64, !dbg !3336
  %div = udiv i64 %conv, 2, !dbg !3336
  %conv2 = trunc i64 %div to i32, !dbg !3336
  store i32 %conv2, i32* %stride.addr, align 4, !dbg !3336
  store i32 0, i32* %j, align 4, !dbg !3337
  br label %for.cond, !dbg !3338

for.cond:                                         ; preds = %for.inc14, %entry
  %8 = load i32, i32* %j, align 4, !dbg !3339
  %cmp = icmp slt i32 %8, 8, !dbg !3341
  br i1 %cmp, label %for.body, label %for.end16, !dbg !3342

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3343
  br label %for.cond4, !dbg !3344

for.cond4:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !3345
  %cmp5 = icmp slt i32 %9, 8, !dbg !3347
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !3348

for.body7:                                        ; preds = %for.cond4
  %10 = load i32, i32* %i, align 4, !dbg !3349
  %idxprom = sext i32 %10 to i64, !dbg !3350
  %11 = load i16*, i16** %dst, align 8, !dbg !3350
  %arrayidx8 = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !3350
  %12 = load i16, i16* %arrayidx8, align 2, !dbg !3350
  %conv9 = zext i16 %12 to i32, !dbg !3350
  %13 = load i32, i32* %dc, align 4, !dbg !3351
  %add10 = add nsw i32 %conv9, %13, !dbg !3352
  store i32 %add10, i32* %a.addr.i, align 4, !dbg !3353
  store i32 9, i32* %p.addr.i, align 4, !dbg !3353
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !3354
  %15 = load i32, i32* %p.addr.i, align 4, !dbg !3355
  %shl.i = shl i32 1, %15, !dbg !3356
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !3357
  %neg.i = xor i32 %sub.i, -1, !dbg !3358
  %and.i = and i32 %14, %neg.i, !dbg !3359
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !3359
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !3360

if.then.i:                                        ; preds = %for.body7
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !3361
  %neg1.i = xor i32 %16, -1, !dbg !3362
  %shr.i = ashr i32 %neg1.i, 31, !dbg !3363
  %17 = load i32, i32* %p.addr.i, align 4, !dbg !3364
  %shl2.i = shl i32 1, %17, !dbg !3365
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !3366
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !3367
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !3368
  br label %av_clip_uintp2_c.exit, !dbg !3368

if.else.i:                                        ; preds = %for.body7
  %18 = load i32, i32* %a.addr.i, align 4, !dbg !3369
  store i32 %18, i32* %retval.i, align 4, !dbg !3370
  br label %av_clip_uintp2_c.exit, !dbg !3370

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %19 = load i32, i32* %retval.i, align 4, !dbg !3371
  %conv11 = trunc i32 %19 to i16, !dbg !3353
  %20 = load i32, i32* %i, align 4, !dbg !3372
  %idxprom12 = sext i32 %20 to i64, !dbg !3373
  %21 = load i16*, i16** %dst, align 8, !dbg !3373
  %arrayidx13 = getelementptr inbounds i16, i16* %21, i64 %idxprom12, !dbg !3373
  store i16 %conv11, i16* %arrayidx13, align 2, !dbg !3374
  br label %for.inc, !dbg !3373

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %22 = load i32, i32* %i, align 4, !dbg !3375
  %inc = add nsw i32 %22, 1, !dbg !3375
  store i32 %inc, i32* %i, align 4, !dbg !3375
  br label %for.cond4, !dbg !3377, !llvm.loop !3378

for.end:                                          ; preds = %for.cond4
  %23 = load i32, i32* %stride.addr, align 4, !dbg !3380
  %24 = load i16*, i16** %dst, align 8, !dbg !3381
  %idx.ext = sext i32 %23 to i64, !dbg !3381
  %add.ptr = getelementptr inbounds i16, i16* %24, i64 %idx.ext, !dbg !3381
  store i16* %add.ptr, i16** %dst, align 8, !dbg !3381
  br label %for.inc14, !dbg !3382

for.inc14:                                        ; preds = %for.end
  %25 = load i32, i32* %j, align 4, !dbg !3383
  %inc15 = add nsw i32 %25, 1, !dbg !3383
  store i32 %inc15, i32* %j, align 4, !dbg !3383
  br label %for.cond, !dbg !3385, !llvm.loop !3386

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !3388
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add16_9_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !3389 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %nnz = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3390, metadata !67), !dbg !3391
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !3392, metadata !67), !dbg !3393
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !3394, metadata !67), !dbg !3395
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !3396, metadata !67), !dbg !3397
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !3398, metadata !67), !dbg !3399
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3400, metadata !67), !dbg !3401
  store i32 0, i32* %i, align 4, !dbg !3402
  br label %for.cond, !dbg !3404

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3405
  %cmp = icmp slt i32 %0, 16, !dbg !3408
  br i1 %cmp, label %for.body, label %for.end, !dbg !3409

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %nnz, metadata !3410, metadata !67), !dbg !3412
  %1 = load i32, i32* %i, align 4, !dbg !3413
  %idxprom = sext i32 %1 to i64, !dbg !3414
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !3414
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3414
  %idxprom1 = zext i8 %2 to i64, !dbg !3415
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !3415
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !3415
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !3415
  %conv = zext i8 %4 to i32, !dbg !3415
  store i32 %conv, i32* %nnz, align 4, !dbg !3412
  %5 = load i32, i32* %nnz, align 4, !dbg !3416
  %tobool = icmp ne i32 %5, 0, !dbg !3416
  br i1 %tobool, label %if.then, label %if.end23, !dbg !3418

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %nnz, align 4, !dbg !3419
  %cmp3 = icmp eq i32 %6, 1, !dbg !3422
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !3423

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %i, align 4, !dbg !3424
  %mul = mul nsw i32 %7, 16, !dbg !3426
  %idxprom5 = sext i32 %mul to i64, !dbg !3427
  %8 = load i16*, i16** %block.addr, align 8, !dbg !3428
  %9 = bitcast i16* %8 to i32*, !dbg !3427
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i64 %idxprom5, !dbg !3427
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !3427
  %tobool7 = icmp ne i32 %10, 0, !dbg !3427
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !3429

if.then8:                                         ; preds = %land.lhs.true
  %11 = load i8*, i8** %dst.addr, align 8, !dbg !3430
  %12 = load i32, i32* %i, align 4, !dbg !3432
  %idxprom9 = sext i32 %12 to i64, !dbg !3433
  %13 = load i32*, i32** %block_offset.addr, align 8, !dbg !3433
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 %idxprom9, !dbg !3433
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !3433
  %idx.ext = sext i32 %14 to i64, !dbg !3434
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !3434
  %15 = load i16*, i16** %block.addr, align 8, !dbg !3435
  %16 = load i32, i32* %i, align 4, !dbg !3436
  %mul11 = mul nsw i32 %16, 16, !dbg !3437
  %conv12 = sext i32 %mul11 to i64, !dbg !3436
  %mul13 = mul i64 %conv12, 2, !dbg !3438
  %add.ptr14 = getelementptr inbounds i16, i16* %15, i64 %mul13, !dbg !3439
  %17 = load i32, i32* %stride.addr, align 4, !dbg !3440
  call void @ff_h264_idct_dc_add_9_c(i8* %add.ptr, i16* %add.ptr14, i32 %17), !dbg !3441
  br label %if.end, !dbg !3441

if.else:                                          ; preds = %land.lhs.true, %if.then
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !3442
  %19 = load i32, i32* %i, align 4, !dbg !3443
  %idxprom15 = sext i32 %19 to i64, !dbg !3444
  %20 = load i32*, i32** %block_offset.addr, align 8, !dbg !3444
  %arrayidx16 = getelementptr inbounds i32, i32* %20, i64 %idxprom15, !dbg !3444
  %21 = load i32, i32* %arrayidx16, align 4, !dbg !3444
  %idx.ext17 = sext i32 %21 to i64, !dbg !3445
  %add.ptr18 = getelementptr inbounds i8, i8* %18, i64 %idx.ext17, !dbg !3445
  %22 = load i16*, i16** %block.addr, align 8, !dbg !3446
  %23 = load i32, i32* %i, align 4, !dbg !3447
  %mul19 = mul nsw i32 %23, 16, !dbg !3448
  %conv20 = sext i32 %mul19 to i64, !dbg !3447
  %mul21 = mul i64 %conv20, 2, !dbg !3449
  %add.ptr22 = getelementptr inbounds i16, i16* %22, i64 %mul21, !dbg !3450
  %24 = load i32, i32* %stride.addr, align 4, !dbg !3451
  call void @ff_h264_idct_add_9_c(i8* %add.ptr18, i16* %add.ptr22, i32 %24), !dbg !3452
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end23, !dbg !3453

if.end23:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !3454

for.inc:                                          ; preds = %if.end23
  %25 = load i32, i32* %i, align 4, !dbg !3455
  %inc = add nsw i32 %25, 1, !dbg !3455
  store i32 %inc, i32* %i, align 4, !dbg !3455
  br label %for.cond, !dbg !3457, !llvm.loop !3458

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3460
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add16intra_9_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !3461 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3462, metadata !67), !dbg !3463
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !3464, metadata !67), !dbg !3465
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !3466, metadata !67), !dbg !3467
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !3468, metadata !67), !dbg !3469
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !3470, metadata !67), !dbg !3471
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3472, metadata !67), !dbg !3473
  store i32 0, i32* %i, align 4, !dbg !3474
  br label %for.cond, !dbg !3476

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3477
  %cmp = icmp slt i32 %0, 16, !dbg !3480
  br i1 %cmp, label %for.body, label %for.end, !dbg !3481

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3482
  %idxprom = sext i32 %1 to i64, !dbg !3485
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !3485
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3485
  %idxprom1 = zext i8 %2 to i64, !dbg !3486
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !3486
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !3486
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !3486
  %tobool = icmp ne i8 %4, 0, !dbg !3486
  br i1 %tobool, label %if.then, label %if.else, !dbg !3487

if.then:                                          ; preds = %for.body
  %5 = load i8*, i8** %dst.addr, align 8, !dbg !3488
  %6 = load i32, i32* %i, align 4, !dbg !3490
  %idxprom3 = sext i32 %6 to i64, !dbg !3491
  %7 = load i32*, i32** %block_offset.addr, align 8, !dbg !3491
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 %idxprom3, !dbg !3491
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !3491
  %idx.ext = sext i32 %8 to i64, !dbg !3492
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !3492
  %9 = load i16*, i16** %block.addr, align 8, !dbg !3493
  %10 = load i32, i32* %i, align 4, !dbg !3494
  %mul = mul nsw i32 %10, 16, !dbg !3495
  %conv = sext i32 %mul to i64, !dbg !3494
  %mul5 = mul i64 %conv, 2, !dbg !3496
  %add.ptr6 = getelementptr inbounds i16, i16* %9, i64 %mul5, !dbg !3497
  %11 = load i32, i32* %stride.addr, align 4, !dbg !3498
  call void @ff_h264_idct_add_9_c(i8* %add.ptr, i16* %add.ptr6, i32 %11), !dbg !3499
  br label %if.end20, !dbg !3499

if.else:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !3500
  %mul7 = mul nsw i32 %12, 16, !dbg !3502
  %idxprom8 = sext i32 %mul7 to i64, !dbg !3503
  %13 = load i16*, i16** %block.addr, align 8, !dbg !3504
  %14 = bitcast i16* %13 to i32*, !dbg !3503
  %arrayidx9 = getelementptr inbounds i32, i32* %14, i64 %idxprom8, !dbg !3503
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !3503
  %tobool10 = icmp ne i32 %15, 0, !dbg !3503
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !3505

if.then11:                                        ; preds = %if.else
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !3506
  %17 = load i32, i32* %i, align 4, !dbg !3508
  %idxprom12 = sext i32 %17 to i64, !dbg !3509
  %18 = load i32*, i32** %block_offset.addr, align 8, !dbg !3509
  %arrayidx13 = getelementptr inbounds i32, i32* %18, i64 %idxprom12, !dbg !3509
  %19 = load i32, i32* %arrayidx13, align 4, !dbg !3509
  %idx.ext14 = sext i32 %19 to i64, !dbg !3510
  %add.ptr15 = getelementptr inbounds i8, i8* %16, i64 %idx.ext14, !dbg !3510
  %20 = load i16*, i16** %block.addr, align 8, !dbg !3511
  %21 = load i32, i32* %i, align 4, !dbg !3512
  %mul16 = mul nsw i32 %21, 16, !dbg !3513
  %conv17 = sext i32 %mul16 to i64, !dbg !3512
  %mul18 = mul i64 %conv17, 2, !dbg !3514
  %add.ptr19 = getelementptr inbounds i16, i16* %20, i64 %mul18, !dbg !3515
  %22 = load i32, i32* %stride.addr, align 4, !dbg !3516
  call void @ff_h264_idct_dc_add_9_c(i8* %add.ptr15, i16* %add.ptr19, i32 %22), !dbg !3517
  br label %if.end, !dbg !3517

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !3518

for.inc:                                          ; preds = %if.end20
  %23 = load i32, i32* %i, align 4, !dbg !3519
  %inc = add nsw i32 %23, 1, !dbg !3519
  store i32 %inc, i32* %i, align 4, !dbg !3519
  br label %for.cond, !dbg !3521, !llvm.loop !3522

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3524
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_add4_9_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !3525 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %nnz = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3526, metadata !67), !dbg !3527
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !3528, metadata !67), !dbg !3529
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !3530, metadata !67), !dbg !3531
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !3532, metadata !67), !dbg !3533
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !3534, metadata !67), !dbg !3535
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3536, metadata !67), !dbg !3537
  store i32 0, i32* %i, align 4, !dbg !3538
  br label %for.cond, !dbg !3540

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3541
  %cmp = icmp slt i32 %0, 16, !dbg !3544
  br i1 %cmp, label %for.body, label %for.end, !dbg !3545

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %nnz, metadata !3546, metadata !67), !dbg !3548
  %1 = load i32, i32* %i, align 4, !dbg !3549
  %idxprom = sext i32 %1 to i64, !dbg !3550
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !3550
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3550
  %idxprom1 = zext i8 %2 to i64, !dbg !3551
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !3551
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !3551
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !3551
  %conv = zext i8 %4 to i32, !dbg !3551
  store i32 %conv, i32* %nnz, align 4, !dbg !3548
  %5 = load i32, i32* %nnz, align 4, !dbg !3552
  %tobool = icmp ne i32 %5, 0, !dbg !3552
  br i1 %tobool, label %if.then, label %if.end23, !dbg !3554

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %nnz, align 4, !dbg !3555
  %cmp3 = icmp eq i32 %6, 1, !dbg !3558
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !3559

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %i, align 4, !dbg !3560
  %mul = mul nsw i32 %7, 16, !dbg !3562
  %idxprom5 = sext i32 %mul to i64, !dbg !3563
  %8 = load i16*, i16** %block.addr, align 8, !dbg !3564
  %9 = bitcast i16* %8 to i32*, !dbg !3563
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i64 %idxprom5, !dbg !3563
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !3563
  %tobool7 = icmp ne i32 %10, 0, !dbg !3563
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !3565

if.then8:                                         ; preds = %land.lhs.true
  %11 = load i8*, i8** %dst.addr, align 8, !dbg !3566
  %12 = load i32, i32* %i, align 4, !dbg !3568
  %idxprom9 = sext i32 %12 to i64, !dbg !3569
  %13 = load i32*, i32** %block_offset.addr, align 8, !dbg !3569
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 %idxprom9, !dbg !3569
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !3569
  %idx.ext = sext i32 %14 to i64, !dbg !3570
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !3570
  %15 = load i16*, i16** %block.addr, align 8, !dbg !3571
  %16 = load i32, i32* %i, align 4, !dbg !3572
  %mul11 = mul nsw i32 %16, 16, !dbg !3573
  %conv12 = sext i32 %mul11 to i64, !dbg !3572
  %mul13 = mul i64 %conv12, 2, !dbg !3574
  %add.ptr14 = getelementptr inbounds i16, i16* %15, i64 %mul13, !dbg !3575
  %17 = load i32, i32* %stride.addr, align 4, !dbg !3576
  call void @ff_h264_idct8_dc_add_9_c(i8* %add.ptr, i16* %add.ptr14, i32 %17), !dbg !3577
  br label %if.end, !dbg !3577

if.else:                                          ; preds = %land.lhs.true, %if.then
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !3578
  %19 = load i32, i32* %i, align 4, !dbg !3579
  %idxprom15 = sext i32 %19 to i64, !dbg !3580
  %20 = load i32*, i32** %block_offset.addr, align 8, !dbg !3580
  %arrayidx16 = getelementptr inbounds i32, i32* %20, i64 %idxprom15, !dbg !3580
  %21 = load i32, i32* %arrayidx16, align 4, !dbg !3580
  %idx.ext17 = sext i32 %21 to i64, !dbg !3581
  %add.ptr18 = getelementptr inbounds i8, i8* %18, i64 %idx.ext17, !dbg !3581
  %22 = load i16*, i16** %block.addr, align 8, !dbg !3582
  %23 = load i32, i32* %i, align 4, !dbg !3583
  %mul19 = mul nsw i32 %23, 16, !dbg !3584
  %conv20 = sext i32 %mul19 to i64, !dbg !3583
  %mul21 = mul i64 %conv20, 2, !dbg !3585
  %add.ptr22 = getelementptr inbounds i16, i16* %22, i64 %mul21, !dbg !3586
  %24 = load i32, i32* %stride.addr, align 4, !dbg !3587
  call void @ff_h264_idct8_add_9_c(i8* %add.ptr18, i16* %add.ptr22, i32 %24), !dbg !3588
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end23, !dbg !3589

if.end23:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !3590

for.inc:                                          ; preds = %if.end23
  %25 = load i32, i32* %i, align 4, !dbg !3591
  %add = add nsw i32 %25, 4, !dbg !3591
  store i32 %add, i32* %i, align 4, !dbg !3591
  br label %for.cond, !dbg !3593, !llvm.loop !3594

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3596
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add8_9_c(i8** %dest, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !3597 {
entry:
  %dest.addr = alloca i8**, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !3598, metadata !67), !dbg !3599
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !3600, metadata !67), !dbg !3601
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !3602, metadata !67), !dbg !3603
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !3604, metadata !67), !dbg !3605
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !3606, metadata !67), !dbg !3607
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3608, metadata !67), !dbg !3609
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3610, metadata !67), !dbg !3611
  store i32 1, i32* %j, align 4, !dbg !3612
  br label %for.cond, !dbg !3614

for.cond:                                         ; preds = %for.inc31, %entry
  %0 = load i32, i32* %j, align 4, !dbg !3615
  %cmp = icmp slt i32 %0, 3, !dbg !3618
  br i1 %cmp, label %for.body, label %for.end33, !dbg !3619

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !3620
  %mul = mul nsw i32 %1, 16, !dbg !3623
  store i32 %mul, i32* %i, align 4, !dbg !3624
  br label %for.cond1, !dbg !3625

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !3626
  %3 = load i32, i32* %j, align 4, !dbg !3629
  %mul2 = mul nsw i32 %3, 16, !dbg !3630
  %add = add nsw i32 %mul2, 4, !dbg !3631
  %cmp3 = icmp slt i32 %2, %add, !dbg !3632
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !3633

for.body4:                                        ; preds = %for.cond1
  %4 = load i32, i32* %i, align 4, !dbg !3634
  %idxprom = sext i32 %4 to i64, !dbg !3637
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !3637
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3637
  %idxprom5 = zext i8 %5 to i64, !dbg !3638
  %6 = load i8*, i8** %nnzc.addr, align 8, !dbg !3638
  %arrayidx6 = getelementptr inbounds i8, i8* %6, i64 %idxprom5, !dbg !3638
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !3638
  %tobool = icmp ne i8 %7, 0, !dbg !3638
  br i1 %tobool, label %if.then, label %if.else, !dbg !3639

if.then:                                          ; preds = %for.body4
  %8 = load i32, i32* %j, align 4, !dbg !3640
  %sub = sub nsw i32 %8, 1, !dbg !3641
  %idxprom7 = sext i32 %sub to i64, !dbg !3642
  %9 = load i8**, i8*** %dest.addr, align 8, !dbg !3642
  %arrayidx8 = getelementptr inbounds i8*, i8** %9, i64 %idxprom7, !dbg !3642
  %10 = load i8*, i8** %arrayidx8, align 8, !dbg !3642
  %11 = load i32, i32* %i, align 4, !dbg !3643
  %idxprom9 = sext i32 %11 to i64, !dbg !3644
  %12 = load i32*, i32** %block_offset.addr, align 8, !dbg !3644
  %arrayidx10 = getelementptr inbounds i32, i32* %12, i64 %idxprom9, !dbg !3644
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !3644
  %idx.ext = sext i32 %13 to i64, !dbg !3645
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !3645
  %14 = load i16*, i16** %block.addr, align 8, !dbg !3646
  %15 = load i32, i32* %i, align 4, !dbg !3647
  %mul11 = mul nsw i32 %15, 16, !dbg !3648
  %conv = sext i32 %mul11 to i64, !dbg !3647
  %mul12 = mul i64 %conv, 2, !dbg !3649
  %add.ptr13 = getelementptr inbounds i16, i16* %14, i64 %mul12, !dbg !3650
  %16 = load i32, i32* %stride.addr, align 4, !dbg !3651
  call void @ff_h264_idct_add_9_c(i8* %add.ptr, i16* %add.ptr13, i32 %16), !dbg !3652
  br label %if.end30, !dbg !3652

if.else:                                          ; preds = %for.body4
  %17 = load i32, i32* %i, align 4, !dbg !3653
  %mul14 = mul nsw i32 %17, 16, !dbg !3655
  %idxprom15 = sext i32 %mul14 to i64, !dbg !3656
  %18 = load i16*, i16** %block.addr, align 8, !dbg !3657
  %19 = bitcast i16* %18 to i32*, !dbg !3656
  %arrayidx16 = getelementptr inbounds i32, i32* %19, i64 %idxprom15, !dbg !3656
  %20 = load i32, i32* %arrayidx16, align 4, !dbg !3656
  %tobool17 = icmp ne i32 %20, 0, !dbg !3656
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !3658

if.then18:                                        ; preds = %if.else
  %21 = load i32, i32* %j, align 4, !dbg !3659
  %sub19 = sub nsw i32 %21, 1, !dbg !3660
  %idxprom20 = sext i32 %sub19 to i64, !dbg !3661
  %22 = load i8**, i8*** %dest.addr, align 8, !dbg !3661
  %arrayidx21 = getelementptr inbounds i8*, i8** %22, i64 %idxprom20, !dbg !3661
  %23 = load i8*, i8** %arrayidx21, align 8, !dbg !3661
  %24 = load i32, i32* %i, align 4, !dbg !3662
  %idxprom22 = sext i32 %24 to i64, !dbg !3663
  %25 = load i32*, i32** %block_offset.addr, align 8, !dbg !3663
  %arrayidx23 = getelementptr inbounds i32, i32* %25, i64 %idxprom22, !dbg !3663
  %26 = load i32, i32* %arrayidx23, align 4, !dbg !3663
  %idx.ext24 = sext i32 %26 to i64, !dbg !3664
  %add.ptr25 = getelementptr inbounds i8, i8* %23, i64 %idx.ext24, !dbg !3664
  %27 = load i16*, i16** %block.addr, align 8, !dbg !3665
  %28 = load i32, i32* %i, align 4, !dbg !3666
  %mul26 = mul nsw i32 %28, 16, !dbg !3667
  %conv27 = sext i32 %mul26 to i64, !dbg !3666
  %mul28 = mul i64 %conv27, 2, !dbg !3668
  %add.ptr29 = getelementptr inbounds i16, i16* %27, i64 %mul28, !dbg !3669
  %29 = load i32, i32* %stride.addr, align 4, !dbg !3670
  call void @ff_h264_idct_dc_add_9_c(i8* %add.ptr25, i16* %add.ptr29, i32 %29), !dbg !3671
  br label %if.end, !dbg !3671

if.end:                                           ; preds = %if.then18, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !3672

for.inc:                                          ; preds = %if.end30
  %30 = load i32, i32* %i, align 4, !dbg !3673
  %inc = add nsw i32 %30, 1, !dbg !3673
  store i32 %inc, i32* %i, align 4, !dbg !3673
  br label %for.cond1, !dbg !3675, !llvm.loop !3676

for.end:                                          ; preds = %for.cond1
  br label %for.inc31, !dbg !3678

for.inc31:                                        ; preds = %for.end
  %31 = load i32, i32* %j, align 4, !dbg !3679
  %inc32 = add nsw i32 %31, 1, !dbg !3679
  store i32 %inc32, i32* %j, align 4, !dbg !3679
  br label %for.cond, !dbg !3681, !llvm.loop !3682

for.end33:                                        ; preds = %for.cond
  ret void, !dbg !3684
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add8_422_9_c(i8** %dest, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !3685 {
entry:
  %dest.addr = alloca i8**, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !3686, metadata !67), !dbg !3687
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !3688, metadata !67), !dbg !3689
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !3690, metadata !67), !dbg !3691
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !3692, metadata !67), !dbg !3693
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !3694, metadata !67), !dbg !3695
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3696, metadata !67), !dbg !3697
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3698, metadata !67), !dbg !3699
  store i32 1, i32* %j, align 4, !dbg !3700
  br label %for.cond, !dbg !3702

for.cond:                                         ; preds = %for.inc31, %entry
  %0 = load i32, i32* %j, align 4, !dbg !3703
  %cmp = icmp slt i32 %0, 3, !dbg !3706
  br i1 %cmp, label %for.body, label %for.end33, !dbg !3707

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !3708
  %mul = mul nsw i32 %1, 16, !dbg !3711
  store i32 %mul, i32* %i, align 4, !dbg !3712
  br label %for.cond1, !dbg !3713

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !3714
  %3 = load i32, i32* %j, align 4, !dbg !3717
  %mul2 = mul nsw i32 %3, 16, !dbg !3718
  %add = add nsw i32 %mul2, 4, !dbg !3719
  %cmp3 = icmp slt i32 %2, %add, !dbg !3720
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !3721

for.body4:                                        ; preds = %for.cond1
  %4 = load i32, i32* %i, align 4, !dbg !3722
  %idxprom = sext i32 %4 to i64, !dbg !3725
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !3725
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3725
  %idxprom5 = zext i8 %5 to i64, !dbg !3726
  %6 = load i8*, i8** %nnzc.addr, align 8, !dbg !3726
  %arrayidx6 = getelementptr inbounds i8, i8* %6, i64 %idxprom5, !dbg !3726
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !3726
  %tobool = icmp ne i8 %7, 0, !dbg !3726
  br i1 %tobool, label %if.then, label %if.else, !dbg !3727

if.then:                                          ; preds = %for.body4
  %8 = load i32, i32* %j, align 4, !dbg !3728
  %sub = sub nsw i32 %8, 1, !dbg !3729
  %idxprom7 = sext i32 %sub to i64, !dbg !3730
  %9 = load i8**, i8*** %dest.addr, align 8, !dbg !3730
  %arrayidx8 = getelementptr inbounds i8*, i8** %9, i64 %idxprom7, !dbg !3730
  %10 = load i8*, i8** %arrayidx8, align 8, !dbg !3730
  %11 = load i32, i32* %i, align 4, !dbg !3731
  %idxprom9 = sext i32 %11 to i64, !dbg !3732
  %12 = load i32*, i32** %block_offset.addr, align 8, !dbg !3732
  %arrayidx10 = getelementptr inbounds i32, i32* %12, i64 %idxprom9, !dbg !3732
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !3732
  %idx.ext = sext i32 %13 to i64, !dbg !3733
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !3733
  %14 = load i16*, i16** %block.addr, align 8, !dbg !3734
  %15 = load i32, i32* %i, align 4, !dbg !3735
  %mul11 = mul nsw i32 %15, 16, !dbg !3736
  %conv = sext i32 %mul11 to i64, !dbg !3735
  %mul12 = mul i64 %conv, 2, !dbg !3737
  %add.ptr13 = getelementptr inbounds i16, i16* %14, i64 %mul12, !dbg !3738
  %16 = load i32, i32* %stride.addr, align 4, !dbg !3739
  call void @ff_h264_idct_add_9_c(i8* %add.ptr, i16* %add.ptr13, i32 %16), !dbg !3740
  br label %if.end30, !dbg !3740

if.else:                                          ; preds = %for.body4
  %17 = load i32, i32* %i, align 4, !dbg !3741
  %mul14 = mul nsw i32 %17, 16, !dbg !3743
  %idxprom15 = sext i32 %mul14 to i64, !dbg !3744
  %18 = load i16*, i16** %block.addr, align 8, !dbg !3745
  %19 = bitcast i16* %18 to i32*, !dbg !3744
  %arrayidx16 = getelementptr inbounds i32, i32* %19, i64 %idxprom15, !dbg !3744
  %20 = load i32, i32* %arrayidx16, align 4, !dbg !3744
  %tobool17 = icmp ne i32 %20, 0, !dbg !3744
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !3746

if.then18:                                        ; preds = %if.else
  %21 = load i32, i32* %j, align 4, !dbg !3747
  %sub19 = sub nsw i32 %21, 1, !dbg !3748
  %idxprom20 = sext i32 %sub19 to i64, !dbg !3749
  %22 = load i8**, i8*** %dest.addr, align 8, !dbg !3749
  %arrayidx21 = getelementptr inbounds i8*, i8** %22, i64 %idxprom20, !dbg !3749
  %23 = load i8*, i8** %arrayidx21, align 8, !dbg !3749
  %24 = load i32, i32* %i, align 4, !dbg !3750
  %idxprom22 = sext i32 %24 to i64, !dbg !3751
  %25 = load i32*, i32** %block_offset.addr, align 8, !dbg !3751
  %arrayidx23 = getelementptr inbounds i32, i32* %25, i64 %idxprom22, !dbg !3751
  %26 = load i32, i32* %arrayidx23, align 4, !dbg !3751
  %idx.ext24 = sext i32 %26 to i64, !dbg !3752
  %add.ptr25 = getelementptr inbounds i8, i8* %23, i64 %idx.ext24, !dbg !3752
  %27 = load i16*, i16** %block.addr, align 8, !dbg !3753
  %28 = load i32, i32* %i, align 4, !dbg !3754
  %mul26 = mul nsw i32 %28, 16, !dbg !3755
  %conv27 = sext i32 %mul26 to i64, !dbg !3754
  %mul28 = mul i64 %conv27, 2, !dbg !3756
  %add.ptr29 = getelementptr inbounds i16, i16* %27, i64 %mul28, !dbg !3757
  %29 = load i32, i32* %stride.addr, align 4, !dbg !3758
  call void @ff_h264_idct_dc_add_9_c(i8* %add.ptr25, i16* %add.ptr29, i32 %29), !dbg !3759
  br label %if.end, !dbg !3759

if.end:                                           ; preds = %if.then18, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !3760

for.inc:                                          ; preds = %if.end30
  %30 = load i32, i32* %i, align 4, !dbg !3761
  %inc = add nsw i32 %30, 1, !dbg !3761
  store i32 %inc, i32* %i, align 4, !dbg !3761
  br label %for.cond1, !dbg !3763, !llvm.loop !3764

for.end:                                          ; preds = %for.cond1
  br label %for.inc31, !dbg !3766

for.inc31:                                        ; preds = %for.end
  %31 = load i32, i32* %j, align 4, !dbg !3767
  %inc32 = add nsw i32 %31, 1, !dbg !3767
  store i32 %inc32, i32* %j, align 4, !dbg !3767
  br label %for.cond, !dbg !3769, !llvm.loop !3770

for.end33:                                        ; preds = %for.cond
  store i32 1, i32* %j, align 4, !dbg !3772
  br label %for.cond34, !dbg !3774

for.cond34:                                       ; preds = %for.inc88, %for.end33
  %32 = load i32, i32* %j, align 4, !dbg !3775
  %cmp35 = icmp slt i32 %32, 3, !dbg !3778
  br i1 %cmp35, label %for.body37, label %for.end90, !dbg !3779

for.body37:                                       ; preds = %for.cond34
  %33 = load i32, i32* %j, align 4, !dbg !3780
  %mul38 = mul nsw i32 %33, 16, !dbg !3783
  %add39 = add nsw i32 %mul38, 4, !dbg !3784
  store i32 %add39, i32* %i, align 4, !dbg !3785
  br label %for.cond40, !dbg !3786

for.cond40:                                       ; preds = %for.inc85, %for.body37
  %34 = load i32, i32* %i, align 4, !dbg !3787
  %35 = load i32, i32* %j, align 4, !dbg !3790
  %mul41 = mul nsw i32 %35, 16, !dbg !3791
  %add42 = add nsw i32 %mul41, 8, !dbg !3792
  %cmp43 = icmp slt i32 %34, %add42, !dbg !3793
  br i1 %cmp43, label %for.body45, label %for.end87, !dbg !3794

for.body45:                                       ; preds = %for.cond40
  %36 = load i32, i32* %i, align 4, !dbg !3795
  %add46 = add nsw i32 %36, 4, !dbg !3798
  %idxprom47 = sext i32 %add46 to i64, !dbg !3799
  %arrayidx48 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom47, !dbg !3799
  %37 = load i8, i8* %arrayidx48, align 1, !dbg !3799
  %idxprom49 = zext i8 %37 to i64, !dbg !3800
  %38 = load i8*, i8** %nnzc.addr, align 8, !dbg !3800
  %arrayidx50 = getelementptr inbounds i8, i8* %38, i64 %idxprom49, !dbg !3800
  %39 = load i8, i8* %arrayidx50, align 1, !dbg !3800
  %tobool51 = icmp ne i8 %39, 0, !dbg !3800
  br i1 %tobool51, label %if.then52, label %if.else65, !dbg !3801

if.then52:                                        ; preds = %for.body45
  %40 = load i32, i32* %j, align 4, !dbg !3802
  %sub53 = sub nsw i32 %40, 1, !dbg !3803
  %idxprom54 = sext i32 %sub53 to i64, !dbg !3804
  %41 = load i8**, i8*** %dest.addr, align 8, !dbg !3804
  %arrayidx55 = getelementptr inbounds i8*, i8** %41, i64 %idxprom54, !dbg !3804
  %42 = load i8*, i8** %arrayidx55, align 8, !dbg !3804
  %43 = load i32, i32* %i, align 4, !dbg !3805
  %add56 = add nsw i32 %43, 4, !dbg !3806
  %idxprom57 = sext i32 %add56 to i64, !dbg !3807
  %44 = load i32*, i32** %block_offset.addr, align 8, !dbg !3807
  %arrayidx58 = getelementptr inbounds i32, i32* %44, i64 %idxprom57, !dbg !3807
  %45 = load i32, i32* %arrayidx58, align 4, !dbg !3807
  %idx.ext59 = sext i32 %45 to i64, !dbg !3808
  %add.ptr60 = getelementptr inbounds i8, i8* %42, i64 %idx.ext59, !dbg !3808
  %46 = load i16*, i16** %block.addr, align 8, !dbg !3809
  %47 = load i32, i32* %i, align 4, !dbg !3810
  %mul61 = mul nsw i32 %47, 16, !dbg !3811
  %conv62 = sext i32 %mul61 to i64, !dbg !3810
  %mul63 = mul i64 %conv62, 2, !dbg !3812
  %add.ptr64 = getelementptr inbounds i16, i16* %46, i64 %mul63, !dbg !3813
  %48 = load i32, i32* %stride.addr, align 4, !dbg !3814
  call void @ff_h264_idct_add_9_c(i8* %add.ptr60, i16* %add.ptr64, i32 %48), !dbg !3815
  br label %if.end84, !dbg !3815

if.else65:                                        ; preds = %for.body45
  %49 = load i32, i32* %i, align 4, !dbg !3816
  %mul66 = mul nsw i32 %49, 16, !dbg !3818
  %idxprom67 = sext i32 %mul66 to i64, !dbg !3819
  %50 = load i16*, i16** %block.addr, align 8, !dbg !3820
  %51 = bitcast i16* %50 to i32*, !dbg !3819
  %arrayidx68 = getelementptr inbounds i32, i32* %51, i64 %idxprom67, !dbg !3819
  %52 = load i32, i32* %arrayidx68, align 4, !dbg !3819
  %tobool69 = icmp ne i32 %52, 0, !dbg !3819
  br i1 %tobool69, label %if.then70, label %if.end83, !dbg !3821

if.then70:                                        ; preds = %if.else65
  %53 = load i32, i32* %j, align 4, !dbg !3822
  %sub71 = sub nsw i32 %53, 1, !dbg !3823
  %idxprom72 = sext i32 %sub71 to i64, !dbg !3824
  %54 = load i8**, i8*** %dest.addr, align 8, !dbg !3824
  %arrayidx73 = getelementptr inbounds i8*, i8** %54, i64 %idxprom72, !dbg !3824
  %55 = load i8*, i8** %arrayidx73, align 8, !dbg !3824
  %56 = load i32, i32* %i, align 4, !dbg !3825
  %add74 = add nsw i32 %56, 4, !dbg !3826
  %idxprom75 = sext i32 %add74 to i64, !dbg !3827
  %57 = load i32*, i32** %block_offset.addr, align 8, !dbg !3827
  %arrayidx76 = getelementptr inbounds i32, i32* %57, i64 %idxprom75, !dbg !3827
  %58 = load i32, i32* %arrayidx76, align 4, !dbg !3827
  %idx.ext77 = sext i32 %58 to i64, !dbg !3828
  %add.ptr78 = getelementptr inbounds i8, i8* %55, i64 %idx.ext77, !dbg !3828
  %59 = load i16*, i16** %block.addr, align 8, !dbg !3829
  %60 = load i32, i32* %i, align 4, !dbg !3830
  %mul79 = mul nsw i32 %60, 16, !dbg !3831
  %conv80 = sext i32 %mul79 to i64, !dbg !3830
  %mul81 = mul i64 %conv80, 2, !dbg !3832
  %add.ptr82 = getelementptr inbounds i16, i16* %59, i64 %mul81, !dbg !3833
  %61 = load i32, i32* %stride.addr, align 4, !dbg !3834
  call void @ff_h264_idct_dc_add_9_c(i8* %add.ptr78, i16* %add.ptr82, i32 %61), !dbg !3835
  br label %if.end83, !dbg !3835

if.end83:                                         ; preds = %if.then70, %if.else65
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then52
  br label %for.inc85, !dbg !3836

for.inc85:                                        ; preds = %if.end84
  %62 = load i32, i32* %i, align 4, !dbg !3837
  %inc86 = add nsw i32 %62, 1, !dbg !3837
  store i32 %inc86, i32* %i, align 4, !dbg !3837
  br label %for.cond40, !dbg !3839, !llvm.loop !3840

for.end87:                                        ; preds = %for.cond40
  br label %for.inc88, !dbg !3842

for.inc88:                                        ; preds = %for.end87
  %63 = load i32, i32* %j, align 4, !dbg !3843
  %inc89 = add nsw i32 %63, 1, !dbg !3843
  store i32 %inc89, i32* %j, align 4, !dbg !3843
  br label %for.cond34, !dbg !3845, !llvm.loop !3846

for.end90:                                        ; preds = %for.cond34
  ret void, !dbg !3848
}

; Function Attrs: nounwind uwtable
define void @ff_h264_luma_dc_dequant_idct_9_c(i16* %_output, i16* %_input, i32 %qmul) #0 !dbg !36 {
entry:
  %_output.addr = alloca i16*, align 8
  %_input.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca [16 x i32], align 16
  %input = alloca i32*, align 8
  %output = alloca i32*, align 8
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  %offset = alloca i32, align 4
  %z057 = alloca i32, align 4
  %z165 = alloca i32, align 4
  %z273 = alloca i32, align 4
  %z381 = alloca i32, align 4
  store i16* %_output, i16** %_output.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_output.addr, metadata !3849, metadata !67), !dbg !3850
  store i16* %_input, i16** %_input.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_input.addr, metadata !3851, metadata !67), !dbg !3852
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !3853, metadata !67), !dbg !3854
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3855, metadata !67), !dbg !3856
  call void @llvm.dbg.declare(metadata [16 x i32]* %temp, metadata !3857, metadata !67), !dbg !3858
  call void @llvm.dbg.declare(metadata i32** %input, metadata !3859, metadata !67), !dbg !3860
  %0 = load i16*, i16** %_input.addr, align 8, !dbg !3861
  %1 = bitcast i16* %0 to i32*, !dbg !3862
  store i32* %1, i32** %input, align 8, !dbg !3860
  call void @llvm.dbg.declare(metadata i32** %output, metadata !3863, metadata !67), !dbg !3864
  %2 = load i16*, i16** %_output.addr, align 8, !dbg !3865
  %3 = bitcast i16* %2 to i32*, !dbg !3866
  store i32* %3, i32** %output, align 8, !dbg !3864
  store i32 0, i32* %i, align 4, !dbg !3867
  br label %for.cond, !dbg !3869

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !3870
  %cmp = icmp slt i32 %4, 4, !dbg !3873
  br i1 %cmp, label %for.body, label %for.end, !dbg !3874

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !3875, metadata !67), !dbg !3877
  %5 = load i32, i32* %i, align 4, !dbg !3878
  %mul = mul nsw i32 4, %5, !dbg !3879
  %add = add nsw i32 %mul, 0, !dbg !3880
  %idxprom = sext i32 %add to i64, !dbg !3881
  %6 = load i32*, i32** %input, align 8, !dbg !3881
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !3881
  %7 = load i32, i32* %arrayidx, align 4, !dbg !3881
  %8 = load i32, i32* %i, align 4, !dbg !3882
  %mul1 = mul nsw i32 4, %8, !dbg !3883
  %add2 = add nsw i32 %mul1, 1, !dbg !3884
  %idxprom3 = sext i32 %add2 to i64, !dbg !3885
  %9 = load i32*, i32** %input, align 8, !dbg !3885
  %arrayidx4 = getelementptr inbounds i32, i32* %9, i64 %idxprom3, !dbg !3885
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !3885
  %add5 = add nsw i32 %7, %10, !dbg !3886
  store i32 %add5, i32* %z0, align 4, !dbg !3877
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !3887, metadata !67), !dbg !3888
  %11 = load i32, i32* %i, align 4, !dbg !3889
  %mul6 = mul nsw i32 4, %11, !dbg !3890
  %add7 = add nsw i32 %mul6, 0, !dbg !3891
  %idxprom8 = sext i32 %add7 to i64, !dbg !3892
  %12 = load i32*, i32** %input, align 8, !dbg !3892
  %arrayidx9 = getelementptr inbounds i32, i32* %12, i64 %idxprom8, !dbg !3892
  %13 = load i32, i32* %arrayidx9, align 4, !dbg !3892
  %14 = load i32, i32* %i, align 4, !dbg !3893
  %mul10 = mul nsw i32 4, %14, !dbg !3894
  %add11 = add nsw i32 %mul10, 1, !dbg !3895
  %idxprom12 = sext i32 %add11 to i64, !dbg !3896
  %15 = load i32*, i32** %input, align 8, !dbg !3896
  %arrayidx13 = getelementptr inbounds i32, i32* %15, i64 %idxprom12, !dbg !3896
  %16 = load i32, i32* %arrayidx13, align 4, !dbg !3896
  %sub = sub nsw i32 %13, %16, !dbg !3897
  store i32 %sub, i32* %z1, align 4, !dbg !3888
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !3898, metadata !67), !dbg !3899
  %17 = load i32, i32* %i, align 4, !dbg !3900
  %mul14 = mul nsw i32 4, %17, !dbg !3901
  %add15 = add nsw i32 %mul14, 2, !dbg !3902
  %idxprom16 = sext i32 %add15 to i64, !dbg !3903
  %18 = load i32*, i32** %input, align 8, !dbg !3903
  %arrayidx17 = getelementptr inbounds i32, i32* %18, i64 %idxprom16, !dbg !3903
  %19 = load i32, i32* %arrayidx17, align 4, !dbg !3903
  %20 = load i32, i32* %i, align 4, !dbg !3904
  %mul18 = mul nsw i32 4, %20, !dbg !3905
  %add19 = add nsw i32 %mul18, 3, !dbg !3906
  %idxprom20 = sext i32 %add19 to i64, !dbg !3907
  %21 = load i32*, i32** %input, align 8, !dbg !3907
  %arrayidx21 = getelementptr inbounds i32, i32* %21, i64 %idxprom20, !dbg !3907
  %22 = load i32, i32* %arrayidx21, align 4, !dbg !3907
  %sub22 = sub nsw i32 %19, %22, !dbg !3908
  store i32 %sub22, i32* %z2, align 4, !dbg !3899
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !3909, metadata !67), !dbg !3910
  %23 = load i32, i32* %i, align 4, !dbg !3911
  %mul23 = mul nsw i32 4, %23, !dbg !3912
  %add24 = add nsw i32 %mul23, 2, !dbg !3913
  %idxprom25 = sext i32 %add24 to i64, !dbg !3914
  %24 = load i32*, i32** %input, align 8, !dbg !3914
  %arrayidx26 = getelementptr inbounds i32, i32* %24, i64 %idxprom25, !dbg !3914
  %25 = load i32, i32* %arrayidx26, align 4, !dbg !3914
  %26 = load i32, i32* %i, align 4, !dbg !3915
  %mul27 = mul nsw i32 4, %26, !dbg !3916
  %add28 = add nsw i32 %mul27, 3, !dbg !3917
  %idxprom29 = sext i32 %add28 to i64, !dbg !3918
  %27 = load i32*, i32** %input, align 8, !dbg !3918
  %arrayidx30 = getelementptr inbounds i32, i32* %27, i64 %idxprom29, !dbg !3918
  %28 = load i32, i32* %arrayidx30, align 4, !dbg !3918
  %add31 = add nsw i32 %25, %28, !dbg !3919
  store i32 %add31, i32* %z3, align 4, !dbg !3910
  %29 = load i32, i32* %z0, align 4, !dbg !3920
  %30 = load i32, i32* %z3, align 4, !dbg !3921
  %add32 = add nsw i32 %29, %30, !dbg !3922
  %31 = load i32, i32* %i, align 4, !dbg !3923
  %mul33 = mul nsw i32 4, %31, !dbg !3924
  %add34 = add nsw i32 %mul33, 0, !dbg !3925
  %idxprom35 = sext i32 %add34 to i64, !dbg !3926
  %arrayidx36 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom35, !dbg !3926
  store i32 %add32, i32* %arrayidx36, align 4, !dbg !3927
  %32 = load i32, i32* %z0, align 4, !dbg !3928
  %33 = load i32, i32* %z3, align 4, !dbg !3929
  %sub37 = sub nsw i32 %32, %33, !dbg !3930
  %34 = load i32, i32* %i, align 4, !dbg !3931
  %mul38 = mul nsw i32 4, %34, !dbg !3932
  %add39 = add nsw i32 %mul38, 1, !dbg !3933
  %idxprom40 = sext i32 %add39 to i64, !dbg !3934
  %arrayidx41 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom40, !dbg !3934
  store i32 %sub37, i32* %arrayidx41, align 4, !dbg !3935
  %35 = load i32, i32* %z1, align 4, !dbg !3936
  %36 = load i32, i32* %z2, align 4, !dbg !3937
  %sub42 = sub nsw i32 %35, %36, !dbg !3938
  %37 = load i32, i32* %i, align 4, !dbg !3939
  %mul43 = mul nsw i32 4, %37, !dbg !3940
  %add44 = add nsw i32 %mul43, 2, !dbg !3941
  %idxprom45 = sext i32 %add44 to i64, !dbg !3942
  %arrayidx46 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom45, !dbg !3942
  store i32 %sub42, i32* %arrayidx46, align 4, !dbg !3943
  %38 = load i32, i32* %z1, align 4, !dbg !3944
  %39 = load i32, i32* %z2, align 4, !dbg !3945
  %add47 = add nsw i32 %38, %39, !dbg !3946
  %40 = load i32, i32* %i, align 4, !dbg !3947
  %mul48 = mul nsw i32 4, %40, !dbg !3948
  %add49 = add nsw i32 %mul48, 3, !dbg !3949
  %idxprom50 = sext i32 %add49 to i64, !dbg !3950
  %arrayidx51 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom50, !dbg !3950
  store i32 %add47, i32* %arrayidx51, align 4, !dbg !3951
  br label %for.inc, !dbg !3952

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %i, align 4, !dbg !3953
  %inc = add nsw i32 %41, 1, !dbg !3953
  store i32 %inc, i32* %i, align 4, !dbg !3953
  br label %for.cond, !dbg !3955, !llvm.loop !3956

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3958
  br label %for.cond52, !dbg !3960

for.cond52:                                       ; preds = %for.inc116, %for.end
  %42 = load i32, i32* %i, align 4, !dbg !3961
  %cmp53 = icmp slt i32 %42, 4, !dbg !3964
  br i1 %cmp53, label %for.body54, label %for.end118, !dbg !3965

for.body54:                                       ; preds = %for.cond52
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !3966, metadata !67), !dbg !3968
  %43 = load i32, i32* %i, align 4, !dbg !3969
  %idxprom55 = sext i32 %43 to i64, !dbg !3970
  %arrayidx56 = getelementptr inbounds [4 x i8], [4 x i8]* @ff_h264_luma_dc_dequant_idct_9_c.x_offset, i64 0, i64 %idxprom55, !dbg !3970
  %44 = load i8, i8* %arrayidx56, align 1, !dbg !3970
  %conv = zext i8 %44 to i32, !dbg !3970
  store i32 %conv, i32* %offset, align 4, !dbg !3968
  call void @llvm.dbg.declare(metadata i32* %z057, metadata !3971, metadata !67), !dbg !3972
  %45 = load i32, i32* %i, align 4, !dbg !3973
  %add58 = add nsw i32 0, %45, !dbg !3974
  %idxprom59 = sext i32 %add58 to i64, !dbg !3975
  %arrayidx60 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom59, !dbg !3975
  %46 = load i32, i32* %arrayidx60, align 4, !dbg !3975
  %47 = load i32, i32* %i, align 4, !dbg !3976
  %add61 = add nsw i32 8, %47, !dbg !3977
  %idxprom62 = sext i32 %add61 to i64, !dbg !3978
  %arrayidx63 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom62, !dbg !3978
  %48 = load i32, i32* %arrayidx63, align 4, !dbg !3978
  %add64 = add nsw i32 %46, %48, !dbg !3979
  store i32 %add64, i32* %z057, align 4, !dbg !3972
  call void @llvm.dbg.declare(metadata i32* %z165, metadata !3980, metadata !67), !dbg !3981
  %49 = load i32, i32* %i, align 4, !dbg !3982
  %add66 = add nsw i32 0, %49, !dbg !3983
  %idxprom67 = sext i32 %add66 to i64, !dbg !3984
  %arrayidx68 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom67, !dbg !3984
  %50 = load i32, i32* %arrayidx68, align 4, !dbg !3984
  %51 = load i32, i32* %i, align 4, !dbg !3985
  %add69 = add nsw i32 8, %51, !dbg !3986
  %idxprom70 = sext i32 %add69 to i64, !dbg !3987
  %arrayidx71 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom70, !dbg !3987
  %52 = load i32, i32* %arrayidx71, align 4, !dbg !3987
  %sub72 = sub nsw i32 %50, %52, !dbg !3988
  store i32 %sub72, i32* %z165, align 4, !dbg !3981
  call void @llvm.dbg.declare(metadata i32* %z273, metadata !3989, metadata !67), !dbg !3990
  %53 = load i32, i32* %i, align 4, !dbg !3991
  %add74 = add nsw i32 4, %53, !dbg !3992
  %idxprom75 = sext i32 %add74 to i64, !dbg !3993
  %arrayidx76 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom75, !dbg !3993
  %54 = load i32, i32* %arrayidx76, align 4, !dbg !3993
  %55 = load i32, i32* %i, align 4, !dbg !3994
  %add77 = add nsw i32 12, %55, !dbg !3995
  %idxprom78 = sext i32 %add77 to i64, !dbg !3996
  %arrayidx79 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom78, !dbg !3996
  %56 = load i32, i32* %arrayidx79, align 4, !dbg !3996
  %sub80 = sub nsw i32 %54, %56, !dbg !3997
  store i32 %sub80, i32* %z273, align 4, !dbg !3990
  call void @llvm.dbg.declare(metadata i32* %z381, metadata !3998, metadata !67), !dbg !3999
  %57 = load i32, i32* %i, align 4, !dbg !4000
  %add82 = add nsw i32 4, %57, !dbg !4001
  %idxprom83 = sext i32 %add82 to i64, !dbg !4002
  %arrayidx84 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom83, !dbg !4002
  %58 = load i32, i32* %arrayidx84, align 4, !dbg !4002
  %59 = load i32, i32* %i, align 4, !dbg !4003
  %add85 = add nsw i32 12, %59, !dbg !4004
  %idxprom86 = sext i32 %add85 to i64, !dbg !4005
  %arrayidx87 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom86, !dbg !4005
  %60 = load i32, i32* %arrayidx87, align 4, !dbg !4005
  %add88 = add nsw i32 %58, %60, !dbg !4006
  store i32 %add88, i32* %z381, align 4, !dbg !3999
  %61 = load i32, i32* %z057, align 4, !dbg !4007
  %62 = load i32, i32* %z381, align 4, !dbg !4008
  %add89 = add i32 %61, %62, !dbg !4009
  %63 = load i32, i32* %qmul.addr, align 4, !dbg !4010
  %mul90 = mul i32 %add89, %63, !dbg !4011
  %add91 = add i32 %mul90, 128, !dbg !4012
  %shr = ashr i32 %add91, 8, !dbg !4013
  %64 = load i32, i32* %offset, align 4, !dbg !4014
  %add92 = add nsw i32 0, %64, !dbg !4015
  %idxprom93 = sext i32 %add92 to i64, !dbg !4016
  %65 = load i32*, i32** %output, align 8, !dbg !4016
  %arrayidx94 = getelementptr inbounds i32, i32* %65, i64 %idxprom93, !dbg !4016
  store i32 %shr, i32* %arrayidx94, align 4, !dbg !4017
  %66 = load i32, i32* %z165, align 4, !dbg !4018
  %67 = load i32, i32* %z273, align 4, !dbg !4019
  %add95 = add i32 %66, %67, !dbg !4020
  %68 = load i32, i32* %qmul.addr, align 4, !dbg !4021
  %mul96 = mul i32 %add95, %68, !dbg !4022
  %add97 = add i32 %mul96, 128, !dbg !4023
  %shr98 = ashr i32 %add97, 8, !dbg !4024
  %69 = load i32, i32* %offset, align 4, !dbg !4025
  %add99 = add nsw i32 16, %69, !dbg !4026
  %idxprom100 = sext i32 %add99 to i64, !dbg !4027
  %70 = load i32*, i32** %output, align 8, !dbg !4027
  %arrayidx101 = getelementptr inbounds i32, i32* %70, i64 %idxprom100, !dbg !4027
  store i32 %shr98, i32* %arrayidx101, align 4, !dbg !4028
  %71 = load i32, i32* %z165, align 4, !dbg !4029
  %72 = load i32, i32* %z273, align 4, !dbg !4030
  %sub102 = sub i32 %71, %72, !dbg !4031
  %73 = load i32, i32* %qmul.addr, align 4, !dbg !4032
  %mul103 = mul i32 %sub102, %73, !dbg !4033
  %add104 = add i32 %mul103, 128, !dbg !4034
  %shr105 = ashr i32 %add104, 8, !dbg !4035
  %74 = load i32, i32* %offset, align 4, !dbg !4036
  %add106 = add nsw i32 64, %74, !dbg !4037
  %idxprom107 = sext i32 %add106 to i64, !dbg !4038
  %75 = load i32*, i32** %output, align 8, !dbg !4038
  %arrayidx108 = getelementptr inbounds i32, i32* %75, i64 %idxprom107, !dbg !4038
  store i32 %shr105, i32* %arrayidx108, align 4, !dbg !4039
  %76 = load i32, i32* %z057, align 4, !dbg !4040
  %77 = load i32, i32* %z381, align 4, !dbg !4041
  %sub109 = sub i32 %76, %77, !dbg !4042
  %78 = load i32, i32* %qmul.addr, align 4, !dbg !4043
  %mul110 = mul i32 %sub109, %78, !dbg !4044
  %add111 = add i32 %mul110, 128, !dbg !4045
  %shr112 = ashr i32 %add111, 8, !dbg !4046
  %79 = load i32, i32* %offset, align 4, !dbg !4047
  %add113 = add nsw i32 80, %79, !dbg !4048
  %idxprom114 = sext i32 %add113 to i64, !dbg !4049
  %80 = load i32*, i32** %output, align 8, !dbg !4049
  %arrayidx115 = getelementptr inbounds i32, i32* %80, i64 %idxprom114, !dbg !4049
  store i32 %shr112, i32* %arrayidx115, align 4, !dbg !4050
  br label %for.inc116, !dbg !4051

for.inc116:                                       ; preds = %for.body54
  %81 = load i32, i32* %i, align 4, !dbg !4052
  %inc117 = add nsw i32 %81, 1, !dbg !4052
  store i32 %inc117, i32* %i, align 4, !dbg !4052
  br label %for.cond52, !dbg !4054, !llvm.loop !4055

for.end118:                                       ; preds = %for.cond52
  ret void, !dbg !4057
}

; Function Attrs: nounwind uwtable
define void @ff_h264_chroma422_dc_dequant_idct_9_c(i16* %_block, i32 %qmul) #0 !dbg !38 {
entry:
  %_block.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %stride = alloca i32, align 4
  %xStride = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca [8 x i32], align 16
  %block = alloca i32*, align 8
  %offset = alloca i32, align 4
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !4058, metadata !67), !dbg !4059
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !4060, metadata !67), !dbg !4061
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !4062, metadata !67), !dbg !4063
  store i32 32, i32* %stride, align 4, !dbg !4063
  call void @llvm.dbg.declare(metadata i32* %xStride, metadata !4064, metadata !67), !dbg !4065
  store i32 16, i32* %xStride, align 4, !dbg !4065
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4066, metadata !67), !dbg !4067
  call void @llvm.dbg.declare(metadata [8 x i32]* %temp, metadata !4068, metadata !67), !dbg !4069
  call void @llvm.dbg.declare(metadata i32** %block, metadata !4070, metadata !67), !dbg !4071
  %0 = load i16*, i16** %_block.addr, align 8, !dbg !4072
  %1 = bitcast i16* %0 to i32*, !dbg !4073
  store i32* %1, i32** %block, align 8, !dbg !4071
  store i32 0, i32* %i, align 4, !dbg !4074
  br label %for.cond, !dbg !4076

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4077
  %cmp = icmp slt i32 %2, 4, !dbg !4080
  br i1 %cmp, label %for.body, label %for.end, !dbg !4081

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !4082
  %mul = mul nsw i32 32, %3, !dbg !4084
  %add = add nsw i32 %mul, 0, !dbg !4085
  %idxprom = sext i32 %add to i64, !dbg !4086
  %4 = load i32*, i32** %block, align 8, !dbg !4086
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !4086
  %5 = load i32, i32* %arrayidx, align 4, !dbg !4086
  %6 = load i32, i32* %i, align 4, !dbg !4087
  %mul1 = mul nsw i32 32, %6, !dbg !4088
  %add2 = add nsw i32 %mul1, 16, !dbg !4089
  %idxprom3 = sext i32 %add2 to i64, !dbg !4090
  %7 = load i32*, i32** %block, align 8, !dbg !4090
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 %idxprom3, !dbg !4090
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !4090
  %add5 = add nsw i32 %5, %8, !dbg !4091
  %9 = load i32, i32* %i, align 4, !dbg !4092
  %mul6 = mul nsw i32 2, %9, !dbg !4093
  %add7 = add nsw i32 %mul6, 0, !dbg !4094
  %idxprom8 = sext i32 %add7 to i64, !dbg !4095
  %arrayidx9 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom8, !dbg !4095
  store i32 %add5, i32* %arrayidx9, align 4, !dbg !4096
  %10 = load i32, i32* %i, align 4, !dbg !4097
  %mul10 = mul nsw i32 32, %10, !dbg !4098
  %add11 = add nsw i32 %mul10, 0, !dbg !4099
  %idxprom12 = sext i32 %add11 to i64, !dbg !4100
  %11 = load i32*, i32** %block, align 8, !dbg !4100
  %arrayidx13 = getelementptr inbounds i32, i32* %11, i64 %idxprom12, !dbg !4100
  %12 = load i32, i32* %arrayidx13, align 4, !dbg !4100
  %13 = load i32, i32* %i, align 4, !dbg !4101
  %mul14 = mul nsw i32 32, %13, !dbg !4102
  %add15 = add nsw i32 %mul14, 16, !dbg !4103
  %idxprom16 = sext i32 %add15 to i64, !dbg !4104
  %14 = load i32*, i32** %block, align 8, !dbg !4104
  %arrayidx17 = getelementptr inbounds i32, i32* %14, i64 %idxprom16, !dbg !4104
  %15 = load i32, i32* %arrayidx17, align 4, !dbg !4104
  %sub = sub nsw i32 %12, %15, !dbg !4105
  %16 = load i32, i32* %i, align 4, !dbg !4106
  %mul18 = mul nsw i32 2, %16, !dbg !4107
  %add19 = add nsw i32 %mul18, 1, !dbg !4108
  %idxprom20 = sext i32 %add19 to i64, !dbg !4109
  %arrayidx21 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom20, !dbg !4109
  store i32 %sub, i32* %arrayidx21, align 4, !dbg !4110
  br label %for.inc, !dbg !4111

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !4112
  %inc = add nsw i32 %17, 1, !dbg !4112
  store i32 %inc, i32* %i, align 4, !dbg !4112
  br label %for.cond, !dbg !4114, !llvm.loop !4115

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4117
  br label %for.cond22, !dbg !4119

for.cond22:                                       ; preds = %for.inc82, %for.end
  %18 = load i32, i32* %i, align 4, !dbg !4120
  %cmp23 = icmp slt i32 %18, 2, !dbg !4123
  br i1 %cmp23, label %for.body24, label %for.end84, !dbg !4124

for.body24:                                       ; preds = %for.cond22
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !4125, metadata !67), !dbg !4127
  %19 = load i32, i32* %i, align 4, !dbg !4128
  %idxprom25 = sext i32 %19 to i64, !dbg !4129
  %arrayidx26 = getelementptr inbounds [2 x i8], [2 x i8]* @ff_h264_chroma422_dc_dequant_idct_9_c.x_offset, i64 0, i64 %idxprom25, !dbg !4129
  %20 = load i8, i8* %arrayidx26, align 1, !dbg !4129
  %conv = zext i8 %20 to i32, !dbg !4129
  store i32 %conv, i32* %offset, align 4, !dbg !4127
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !4130, metadata !67), !dbg !4131
  %21 = load i32, i32* %i, align 4, !dbg !4132
  %add27 = add nsw i32 0, %21, !dbg !4133
  %idxprom28 = sext i32 %add27 to i64, !dbg !4134
  %arrayidx29 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom28, !dbg !4134
  %22 = load i32, i32* %arrayidx29, align 4, !dbg !4134
  %23 = load i32, i32* %i, align 4, !dbg !4135
  %add30 = add nsw i32 4, %23, !dbg !4136
  %idxprom31 = sext i32 %add30 to i64, !dbg !4137
  %arrayidx32 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom31, !dbg !4137
  %24 = load i32, i32* %arrayidx32, align 4, !dbg !4137
  %add33 = add nsw i32 %22, %24, !dbg !4138
  store i32 %add33, i32* %z0, align 4, !dbg !4131
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !4139, metadata !67), !dbg !4140
  %25 = load i32, i32* %i, align 4, !dbg !4141
  %add34 = add nsw i32 0, %25, !dbg !4142
  %idxprom35 = sext i32 %add34 to i64, !dbg !4143
  %arrayidx36 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom35, !dbg !4143
  %26 = load i32, i32* %arrayidx36, align 4, !dbg !4143
  %27 = load i32, i32* %i, align 4, !dbg !4144
  %add37 = add nsw i32 4, %27, !dbg !4145
  %idxprom38 = sext i32 %add37 to i64, !dbg !4146
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom38, !dbg !4146
  %28 = load i32, i32* %arrayidx39, align 4, !dbg !4146
  %sub40 = sub nsw i32 %26, %28, !dbg !4147
  store i32 %sub40, i32* %z1, align 4, !dbg !4140
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !4148, metadata !67), !dbg !4149
  %29 = load i32, i32* %i, align 4, !dbg !4150
  %add41 = add nsw i32 2, %29, !dbg !4151
  %idxprom42 = sext i32 %add41 to i64, !dbg !4152
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom42, !dbg !4152
  %30 = load i32, i32* %arrayidx43, align 4, !dbg !4152
  %31 = load i32, i32* %i, align 4, !dbg !4153
  %add44 = add nsw i32 6, %31, !dbg !4154
  %idxprom45 = sext i32 %add44 to i64, !dbg !4155
  %arrayidx46 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom45, !dbg !4155
  %32 = load i32, i32* %arrayidx46, align 4, !dbg !4155
  %sub47 = sub nsw i32 %30, %32, !dbg !4156
  store i32 %sub47, i32* %z2, align 4, !dbg !4149
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !4157, metadata !67), !dbg !4158
  %33 = load i32, i32* %i, align 4, !dbg !4159
  %add48 = add nsw i32 2, %33, !dbg !4160
  %idxprom49 = sext i32 %add48 to i64, !dbg !4161
  %arrayidx50 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom49, !dbg !4161
  %34 = load i32, i32* %arrayidx50, align 4, !dbg !4161
  %35 = load i32, i32* %i, align 4, !dbg !4162
  %add51 = add nsw i32 6, %35, !dbg !4163
  %idxprom52 = sext i32 %add51 to i64, !dbg !4164
  %arrayidx53 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom52, !dbg !4164
  %36 = load i32, i32* %arrayidx53, align 4, !dbg !4164
  %add54 = add nsw i32 %34, %36, !dbg !4165
  store i32 %add54, i32* %z3, align 4, !dbg !4158
  %37 = load i32, i32* %z0, align 4, !dbg !4166
  %38 = load i32, i32* %z3, align 4, !dbg !4167
  %add55 = add i32 %37, %38, !dbg !4168
  %39 = load i32, i32* %qmul.addr, align 4, !dbg !4169
  %mul56 = mul i32 %add55, %39, !dbg !4170
  %add57 = add i32 %mul56, 128, !dbg !4171
  %shr = ashr i32 %add57, 8, !dbg !4172
  %40 = load i32, i32* %offset, align 4, !dbg !4173
  %add58 = add nsw i32 0, %40, !dbg !4174
  %idxprom59 = sext i32 %add58 to i64, !dbg !4175
  %41 = load i32*, i32** %block, align 8, !dbg !4175
  %arrayidx60 = getelementptr inbounds i32, i32* %41, i64 %idxprom59, !dbg !4175
  store i32 %shr, i32* %arrayidx60, align 4, !dbg !4176
  %42 = load i32, i32* %z1, align 4, !dbg !4177
  %43 = load i32, i32* %z2, align 4, !dbg !4178
  %add61 = add i32 %42, %43, !dbg !4179
  %44 = load i32, i32* %qmul.addr, align 4, !dbg !4180
  %mul62 = mul i32 %add61, %44, !dbg !4181
  %add63 = add i32 %mul62, 128, !dbg !4182
  %shr64 = ashr i32 %add63, 8, !dbg !4183
  %45 = load i32, i32* %offset, align 4, !dbg !4184
  %add65 = add nsw i32 32, %45, !dbg !4185
  %idxprom66 = sext i32 %add65 to i64, !dbg !4186
  %46 = load i32*, i32** %block, align 8, !dbg !4186
  %arrayidx67 = getelementptr inbounds i32, i32* %46, i64 %idxprom66, !dbg !4186
  store i32 %shr64, i32* %arrayidx67, align 4, !dbg !4187
  %47 = load i32, i32* %z1, align 4, !dbg !4188
  %48 = load i32, i32* %z2, align 4, !dbg !4189
  %sub68 = sub i32 %47, %48, !dbg !4190
  %49 = load i32, i32* %qmul.addr, align 4, !dbg !4191
  %mul69 = mul i32 %sub68, %49, !dbg !4192
  %add70 = add i32 %mul69, 128, !dbg !4193
  %shr71 = ashr i32 %add70, 8, !dbg !4194
  %50 = load i32, i32* %offset, align 4, !dbg !4195
  %add72 = add nsw i32 64, %50, !dbg !4196
  %idxprom73 = sext i32 %add72 to i64, !dbg !4197
  %51 = load i32*, i32** %block, align 8, !dbg !4197
  %arrayidx74 = getelementptr inbounds i32, i32* %51, i64 %idxprom73, !dbg !4197
  store i32 %shr71, i32* %arrayidx74, align 4, !dbg !4198
  %52 = load i32, i32* %z0, align 4, !dbg !4199
  %53 = load i32, i32* %z3, align 4, !dbg !4200
  %sub75 = sub i32 %52, %53, !dbg !4201
  %54 = load i32, i32* %qmul.addr, align 4, !dbg !4202
  %mul76 = mul i32 %sub75, %54, !dbg !4203
  %add77 = add i32 %mul76, 128, !dbg !4204
  %shr78 = ashr i32 %add77, 8, !dbg !4205
  %55 = load i32, i32* %offset, align 4, !dbg !4206
  %add79 = add nsw i32 96, %55, !dbg !4207
  %idxprom80 = sext i32 %add79 to i64, !dbg !4208
  %56 = load i32*, i32** %block, align 8, !dbg !4208
  %arrayidx81 = getelementptr inbounds i32, i32* %56, i64 %idxprom80, !dbg !4208
  store i32 %shr78, i32* %arrayidx81, align 4, !dbg !4209
  br label %for.inc82, !dbg !4210

for.inc82:                                        ; preds = %for.body24
  %57 = load i32, i32* %i, align 4, !dbg !4211
  %inc83 = add nsw i32 %57, 1, !dbg !4211
  store i32 %inc83, i32* %i, align 4, !dbg !4211
  br label %for.cond22, !dbg !4213, !llvm.loop !4214

for.end84:                                        ; preds = %for.cond22
  ret void, !dbg !4216
}

; Function Attrs: nounwind uwtable
define void @ff_h264_chroma_dc_dequant_idct_9_c(i16* %_block, i32 %qmul) #0 !dbg !4217 {
entry:
  %_block.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %stride = alloca i32, align 4
  %xStride = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %block = alloca i32*, align 8
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !4218, metadata !67), !dbg !4219
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !4220, metadata !67), !dbg !4221
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !4222, metadata !67), !dbg !4223
  store i32 32, i32* %stride, align 4, !dbg !4223
  call void @llvm.dbg.declare(metadata i32* %xStride, metadata !4224, metadata !67), !dbg !4225
  store i32 16, i32* %xStride, align 4, !dbg !4225
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4226, metadata !67), !dbg !4227
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4228, metadata !67), !dbg !4229
  call void @llvm.dbg.declare(metadata i32* %c, metadata !4230, metadata !67), !dbg !4231
  call void @llvm.dbg.declare(metadata i32* %d, metadata !4232, metadata !67), !dbg !4233
  call void @llvm.dbg.declare(metadata i32* %e, metadata !4234, metadata !67), !dbg !4235
  call void @llvm.dbg.declare(metadata i32** %block, metadata !4236, metadata !67), !dbg !4237
  %0 = load i16*, i16** %_block.addr, align 8, !dbg !4238
  %1 = bitcast i16* %0 to i32*, !dbg !4239
  store i32* %1, i32** %block, align 8, !dbg !4237
  %2 = load i32*, i32** %block, align 8, !dbg !4240
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 0, !dbg !4240
  %3 = load i32, i32* %arrayidx, align 4, !dbg !4240
  store i32 %3, i32* %a, align 4, !dbg !4241
  %4 = load i32*, i32** %block, align 8, !dbg !4242
  %arrayidx1 = getelementptr inbounds i32, i32* %4, i64 16, !dbg !4242
  %5 = load i32, i32* %arrayidx1, align 4, !dbg !4242
  store i32 %5, i32* %b, align 4, !dbg !4243
  %6 = load i32*, i32** %block, align 8, !dbg !4244
  %arrayidx2 = getelementptr inbounds i32, i32* %6, i64 32, !dbg !4244
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !4244
  store i32 %7, i32* %c, align 4, !dbg !4245
  %8 = load i32*, i32** %block, align 8, !dbg !4246
  %arrayidx3 = getelementptr inbounds i32, i32* %8, i64 48, !dbg !4246
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !4246
  store i32 %9, i32* %d, align 4, !dbg !4247
  %10 = load i32, i32* %a, align 4, !dbg !4248
  %11 = load i32, i32* %b, align 4, !dbg !4249
  %sub = sub i32 %10, %11, !dbg !4250
  store i32 %sub, i32* %e, align 4, !dbg !4251
  %12 = load i32, i32* %a, align 4, !dbg !4252
  %13 = load i32, i32* %b, align 4, !dbg !4253
  %add = add i32 %12, %13, !dbg !4254
  store i32 %add, i32* %a, align 4, !dbg !4255
  %14 = load i32, i32* %c, align 4, !dbg !4256
  %15 = load i32, i32* %d, align 4, !dbg !4257
  %sub4 = sub i32 %14, %15, !dbg !4258
  store i32 %sub4, i32* %b, align 4, !dbg !4259
  %16 = load i32, i32* %c, align 4, !dbg !4260
  %17 = load i32, i32* %d, align 4, !dbg !4261
  %add5 = add i32 %16, %17, !dbg !4262
  store i32 %add5, i32* %c, align 4, !dbg !4263
  %18 = load i32, i32* %a, align 4, !dbg !4264
  %19 = load i32, i32* %c, align 4, !dbg !4265
  %add6 = add i32 %18, %19, !dbg !4266
  %20 = load i32, i32* %qmul.addr, align 4, !dbg !4267
  %mul = mul i32 %add6, %20, !dbg !4268
  %shr = ashr i32 %mul, 7, !dbg !4269
  %21 = load i32*, i32** %block, align 8, !dbg !4270
  %arrayidx7 = getelementptr inbounds i32, i32* %21, i64 0, !dbg !4270
  store i32 %shr, i32* %arrayidx7, align 4, !dbg !4271
  %22 = load i32, i32* %e, align 4, !dbg !4272
  %23 = load i32, i32* %b, align 4, !dbg !4273
  %add8 = add i32 %22, %23, !dbg !4274
  %24 = load i32, i32* %qmul.addr, align 4, !dbg !4275
  %mul9 = mul i32 %add8, %24, !dbg !4276
  %shr10 = ashr i32 %mul9, 7, !dbg !4277
  %25 = load i32*, i32** %block, align 8, !dbg !4278
  %arrayidx11 = getelementptr inbounds i32, i32* %25, i64 16, !dbg !4278
  store i32 %shr10, i32* %arrayidx11, align 4, !dbg !4279
  %26 = load i32, i32* %a, align 4, !dbg !4280
  %27 = load i32, i32* %c, align 4, !dbg !4281
  %sub12 = sub i32 %26, %27, !dbg !4282
  %28 = load i32, i32* %qmul.addr, align 4, !dbg !4283
  %mul13 = mul i32 %sub12, %28, !dbg !4284
  %shr14 = ashr i32 %mul13, 7, !dbg !4285
  %29 = load i32*, i32** %block, align 8, !dbg !4286
  %arrayidx15 = getelementptr inbounds i32, i32* %29, i64 32, !dbg !4286
  store i32 %shr14, i32* %arrayidx15, align 4, !dbg !4287
  %30 = load i32, i32* %e, align 4, !dbg !4288
  %31 = load i32, i32* %b, align 4, !dbg !4289
  %sub16 = sub i32 %30, %31, !dbg !4290
  %32 = load i32, i32* %qmul.addr, align 4, !dbg !4291
  %mul17 = mul i32 %sub16, %32, !dbg !4292
  %shr18 = ashr i32 %mul17, 7, !dbg !4293
  %33 = load i32*, i32** %block, align 8, !dbg !4294
  %arrayidx19 = getelementptr inbounds i32, i32* %33, i64 48, !dbg !4294
  store i32 %shr18, i32* %arrayidx19, align 4, !dbg !4295
  ret void, !dbg !4296
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add_10_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !4297 {
entry:
  %retval.i178 = alloca i32, align 4
  %a.addr.i179 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i179, metadata !2143, metadata !67), !dbg !4298
  %p.addr.i180 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i180, metadata !2152, metadata !67), !dbg !4303
  %retval.i162 = alloca i32, align 4
  %a.addr.i163 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i163, metadata !2143, metadata !67), !dbg !4304
  %p.addr.i164 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i164, metadata !2152, metadata !67), !dbg !4306
  %retval.i146 = alloca i32, align 4
  %a.addr.i147 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i147, metadata !2143, metadata !67), !dbg !4307
  %p.addr.i148 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i148, metadata !2152, metadata !67), !dbg !4309
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !4310
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !4312
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  %z048 = alloca i32, align 4
  %z157 = alloca i32, align 4
  %z267 = alloca i32, align 4
  %z378 = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !4313, metadata !67), !dbg !4314
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !4315, metadata !67), !dbg !4316
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !4317, metadata !67), !dbg !4318
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4319, metadata !67), !dbg !4320
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !4321, metadata !67), !dbg !4322
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !4323
  %1 = bitcast i8* %0 to i16*, !dbg !4324
  store i16* %1, i16** %dst, align 8, !dbg !4322
  call void @llvm.dbg.declare(metadata i32** %block, metadata !4325, metadata !67), !dbg !4326
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !4327
  %3 = bitcast i16* %2 to i32*, !dbg !4328
  store i32* %3, i32** %block, align 8, !dbg !4326
  %4 = load i32, i32* %stride.addr, align 4, !dbg !4329
  %shr = ashr i32 %4, 1, !dbg !4329
  store i32 %shr, i32* %stride.addr, align 4, !dbg !4329
  %5 = load i32*, i32** %block, align 8, !dbg !4330
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !4330
  %6 = load i32, i32* %arrayidx, align 4, !dbg !4331
  %add = add nsw i32 %6, 32, !dbg !4331
  store i32 %add, i32* %arrayidx, align 4, !dbg !4331
  store i32 0, i32* %i, align 4, !dbg !4332
  br label %for.cond, !dbg !4334

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !4335
  %cmp = icmp slt i32 %7, 4, !dbg !4338
  br i1 %cmp, label %for.body, label %for.end, !dbg !4339

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !4340, metadata !67), !dbg !4342
  %8 = load i32, i32* %i, align 4, !dbg !4343
  %add1 = add nsw i32 %8, 0, !dbg !4344
  %idxprom = sext i32 %add1 to i64, !dbg !4345
  %9 = load i32*, i32** %block, align 8, !dbg !4345
  %arrayidx2 = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !4345
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !4345
  %11 = load i32, i32* %i, align 4, !dbg !4346
  %add3 = add nsw i32 %11, 8, !dbg !4347
  %idxprom4 = sext i32 %add3 to i64, !dbg !4348
  %12 = load i32*, i32** %block, align 8, !dbg !4348
  %arrayidx5 = getelementptr inbounds i32, i32* %12, i64 %idxprom4, !dbg !4348
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !4348
  %add6 = add i32 %10, %13, !dbg !4349
  store i32 %add6, i32* %z0, align 4, !dbg !4342
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !4350, metadata !67), !dbg !4351
  %14 = load i32, i32* %i, align 4, !dbg !4352
  %add7 = add nsw i32 %14, 0, !dbg !4353
  %idxprom8 = sext i32 %add7 to i64, !dbg !4354
  %15 = load i32*, i32** %block, align 8, !dbg !4354
  %arrayidx9 = getelementptr inbounds i32, i32* %15, i64 %idxprom8, !dbg !4354
  %16 = load i32, i32* %arrayidx9, align 4, !dbg !4354
  %17 = load i32, i32* %i, align 4, !dbg !4355
  %add10 = add nsw i32 %17, 8, !dbg !4356
  %idxprom11 = sext i32 %add10 to i64, !dbg !4357
  %18 = load i32*, i32** %block, align 8, !dbg !4357
  %arrayidx12 = getelementptr inbounds i32, i32* %18, i64 %idxprom11, !dbg !4357
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !4357
  %sub = sub i32 %16, %19, !dbg !4358
  store i32 %sub, i32* %z1, align 4, !dbg !4351
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !4359, metadata !67), !dbg !4360
  %20 = load i32, i32* %i, align 4, !dbg !4361
  %add13 = add nsw i32 %20, 4, !dbg !4362
  %idxprom14 = sext i32 %add13 to i64, !dbg !4363
  %21 = load i32*, i32** %block, align 8, !dbg !4363
  %arrayidx15 = getelementptr inbounds i32, i32* %21, i64 %idxprom14, !dbg !4363
  %22 = load i32, i32* %arrayidx15, align 4, !dbg !4363
  %shr16 = ashr i32 %22, 1, !dbg !4364
  %23 = load i32, i32* %i, align 4, !dbg !4365
  %add17 = add nsw i32 %23, 12, !dbg !4366
  %idxprom18 = sext i32 %add17 to i64, !dbg !4367
  %24 = load i32*, i32** %block, align 8, !dbg !4367
  %arrayidx19 = getelementptr inbounds i32, i32* %24, i64 %idxprom18, !dbg !4367
  %25 = load i32, i32* %arrayidx19, align 4, !dbg !4367
  %sub20 = sub i32 %shr16, %25, !dbg !4368
  store i32 %sub20, i32* %z2, align 4, !dbg !4360
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !4369, metadata !67), !dbg !4370
  %26 = load i32, i32* %i, align 4, !dbg !4371
  %add21 = add nsw i32 %26, 4, !dbg !4372
  %idxprom22 = sext i32 %add21 to i64, !dbg !4373
  %27 = load i32*, i32** %block, align 8, !dbg !4373
  %arrayidx23 = getelementptr inbounds i32, i32* %27, i64 %idxprom22, !dbg !4373
  %28 = load i32, i32* %arrayidx23, align 4, !dbg !4373
  %29 = load i32, i32* %i, align 4, !dbg !4374
  %add24 = add nsw i32 %29, 12, !dbg !4375
  %idxprom25 = sext i32 %add24 to i64, !dbg !4376
  %30 = load i32*, i32** %block, align 8, !dbg !4376
  %arrayidx26 = getelementptr inbounds i32, i32* %30, i64 %idxprom25, !dbg !4376
  %31 = load i32, i32* %arrayidx26, align 4, !dbg !4376
  %shr27 = ashr i32 %31, 1, !dbg !4377
  %add28 = add i32 %28, %shr27, !dbg !4378
  store i32 %add28, i32* %z3, align 4, !dbg !4370
  %32 = load i32, i32* %z0, align 4, !dbg !4379
  %33 = load i32, i32* %z3, align 4, !dbg !4380
  %add29 = add i32 %32, %33, !dbg !4381
  %34 = load i32, i32* %i, align 4, !dbg !4382
  %add30 = add nsw i32 %34, 0, !dbg !4383
  %idxprom31 = sext i32 %add30 to i64, !dbg !4384
  %35 = load i32*, i32** %block, align 8, !dbg !4384
  %arrayidx32 = getelementptr inbounds i32, i32* %35, i64 %idxprom31, !dbg !4384
  store i32 %add29, i32* %arrayidx32, align 4, !dbg !4385
  %36 = load i32, i32* %z1, align 4, !dbg !4386
  %37 = load i32, i32* %z2, align 4, !dbg !4387
  %add33 = add i32 %36, %37, !dbg !4388
  %38 = load i32, i32* %i, align 4, !dbg !4389
  %add34 = add nsw i32 %38, 4, !dbg !4390
  %idxprom35 = sext i32 %add34 to i64, !dbg !4391
  %39 = load i32*, i32** %block, align 8, !dbg !4391
  %arrayidx36 = getelementptr inbounds i32, i32* %39, i64 %idxprom35, !dbg !4391
  store i32 %add33, i32* %arrayidx36, align 4, !dbg !4392
  %40 = load i32, i32* %z1, align 4, !dbg !4393
  %41 = load i32, i32* %z2, align 4, !dbg !4394
  %sub37 = sub i32 %40, %41, !dbg !4395
  %42 = load i32, i32* %i, align 4, !dbg !4396
  %add38 = add nsw i32 %42, 8, !dbg !4397
  %idxprom39 = sext i32 %add38 to i64, !dbg !4398
  %43 = load i32*, i32** %block, align 8, !dbg !4398
  %arrayidx40 = getelementptr inbounds i32, i32* %43, i64 %idxprom39, !dbg !4398
  store i32 %sub37, i32* %arrayidx40, align 4, !dbg !4399
  %44 = load i32, i32* %z0, align 4, !dbg !4400
  %45 = load i32, i32* %z3, align 4, !dbg !4401
  %sub41 = sub i32 %44, %45, !dbg !4402
  %46 = load i32, i32* %i, align 4, !dbg !4403
  %add42 = add nsw i32 %46, 12, !dbg !4404
  %idxprom43 = sext i32 %add42 to i64, !dbg !4405
  %47 = load i32*, i32** %block, align 8, !dbg !4405
  %arrayidx44 = getelementptr inbounds i32, i32* %47, i64 %idxprom43, !dbg !4405
  store i32 %sub41, i32* %arrayidx44, align 4, !dbg !4406
  br label %for.inc, !dbg !4407

for.inc:                                          ; preds = %for.body
  %48 = load i32, i32* %i, align 4, !dbg !4408
  %inc = add nsw i32 %48, 1, !dbg !4408
  store i32 %inc, i32* %i, align 4, !dbg !4408
  br label %for.cond, !dbg !4410, !llvm.loop !4411

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4413
  br label %for.cond45, !dbg !4414

for.cond45:                                       ; preds = %for.inc143, %for.end
  %49 = load i32, i32* %i, align 4, !dbg !4415
  %cmp46 = icmp slt i32 %49, 4, !dbg !4417
  br i1 %cmp46, label %for.body47, label %for.end145, !dbg !4418

for.body47:                                       ; preds = %for.cond45
  call void @llvm.dbg.declare(metadata i32* %z048, metadata !4419, metadata !67), !dbg !4420
  %50 = load i32, i32* %i, align 4, !dbg !4421
  %mul = mul nsw i32 4, %50, !dbg !4422
  %add49 = add nsw i32 0, %mul, !dbg !4423
  %idxprom50 = sext i32 %add49 to i64, !dbg !4424
  %51 = load i32*, i32** %block, align 8, !dbg !4424
  %arrayidx51 = getelementptr inbounds i32, i32* %51, i64 %idxprom50, !dbg !4424
  %52 = load i32, i32* %arrayidx51, align 4, !dbg !4424
  %53 = load i32, i32* %i, align 4, !dbg !4425
  %mul52 = mul nsw i32 4, %53, !dbg !4426
  %add53 = add nsw i32 2, %mul52, !dbg !4427
  %idxprom54 = sext i32 %add53 to i64, !dbg !4428
  %54 = load i32*, i32** %block, align 8, !dbg !4428
  %arrayidx55 = getelementptr inbounds i32, i32* %54, i64 %idxprom54, !dbg !4428
  %55 = load i32, i32* %arrayidx55, align 4, !dbg !4428
  %add56 = add i32 %52, %55, !dbg !4429
  store i32 %add56, i32* %z048, align 4, !dbg !4420
  call void @llvm.dbg.declare(metadata i32* %z157, metadata !4430, metadata !67), !dbg !4431
  %56 = load i32, i32* %i, align 4, !dbg !4432
  %mul58 = mul nsw i32 4, %56, !dbg !4433
  %add59 = add nsw i32 0, %mul58, !dbg !4434
  %idxprom60 = sext i32 %add59 to i64, !dbg !4435
  %57 = load i32*, i32** %block, align 8, !dbg !4435
  %arrayidx61 = getelementptr inbounds i32, i32* %57, i64 %idxprom60, !dbg !4435
  %58 = load i32, i32* %arrayidx61, align 4, !dbg !4435
  %59 = load i32, i32* %i, align 4, !dbg !4436
  %mul62 = mul nsw i32 4, %59, !dbg !4437
  %add63 = add nsw i32 2, %mul62, !dbg !4438
  %idxprom64 = sext i32 %add63 to i64, !dbg !4439
  %60 = load i32*, i32** %block, align 8, !dbg !4439
  %arrayidx65 = getelementptr inbounds i32, i32* %60, i64 %idxprom64, !dbg !4439
  %61 = load i32, i32* %arrayidx65, align 4, !dbg !4439
  %sub66 = sub i32 %58, %61, !dbg !4440
  store i32 %sub66, i32* %z157, align 4, !dbg !4431
  call void @llvm.dbg.declare(metadata i32* %z267, metadata !4441, metadata !67), !dbg !4442
  %62 = load i32, i32* %i, align 4, !dbg !4443
  %mul68 = mul nsw i32 4, %62, !dbg !4444
  %add69 = add nsw i32 1, %mul68, !dbg !4445
  %idxprom70 = sext i32 %add69 to i64, !dbg !4446
  %63 = load i32*, i32** %block, align 8, !dbg !4446
  %arrayidx71 = getelementptr inbounds i32, i32* %63, i64 %idxprom70, !dbg !4446
  %64 = load i32, i32* %arrayidx71, align 4, !dbg !4446
  %shr72 = ashr i32 %64, 1, !dbg !4447
  %65 = load i32, i32* %i, align 4, !dbg !4448
  %mul73 = mul nsw i32 4, %65, !dbg !4449
  %add74 = add nsw i32 3, %mul73, !dbg !4450
  %idxprom75 = sext i32 %add74 to i64, !dbg !4451
  %66 = load i32*, i32** %block, align 8, !dbg !4451
  %arrayidx76 = getelementptr inbounds i32, i32* %66, i64 %idxprom75, !dbg !4451
  %67 = load i32, i32* %arrayidx76, align 4, !dbg !4451
  %sub77 = sub i32 %shr72, %67, !dbg !4452
  store i32 %sub77, i32* %z267, align 4, !dbg !4442
  call void @llvm.dbg.declare(metadata i32* %z378, metadata !4453, metadata !67), !dbg !4454
  %68 = load i32, i32* %i, align 4, !dbg !4455
  %mul79 = mul nsw i32 4, %68, !dbg !4456
  %add80 = add nsw i32 1, %mul79, !dbg !4457
  %idxprom81 = sext i32 %add80 to i64, !dbg !4458
  %69 = load i32*, i32** %block, align 8, !dbg !4458
  %arrayidx82 = getelementptr inbounds i32, i32* %69, i64 %idxprom81, !dbg !4458
  %70 = load i32, i32* %arrayidx82, align 4, !dbg !4458
  %71 = load i32, i32* %i, align 4, !dbg !4459
  %mul83 = mul nsw i32 4, %71, !dbg !4460
  %add84 = add nsw i32 3, %mul83, !dbg !4461
  %idxprom85 = sext i32 %add84 to i64, !dbg !4462
  %72 = load i32*, i32** %block, align 8, !dbg !4462
  %arrayidx86 = getelementptr inbounds i32, i32* %72, i64 %idxprom85, !dbg !4462
  %73 = load i32, i32* %arrayidx86, align 4, !dbg !4462
  %shr87 = ashr i32 %73, 1, !dbg !4463
  %add88 = add i32 %70, %shr87, !dbg !4464
  store i32 %add88, i32* %z378, align 4, !dbg !4454
  %74 = load i32, i32* %i, align 4, !dbg !4465
  %75 = load i32, i32* %stride.addr, align 4, !dbg !4466
  %mul89 = mul nsw i32 0, %75, !dbg !4467
  %add90 = add nsw i32 %74, %mul89, !dbg !4468
  %idxprom91 = sext i32 %add90 to i64, !dbg !4469
  %76 = load i16*, i16** %dst, align 8, !dbg !4469
  %arrayidx92 = getelementptr inbounds i16, i16* %76, i64 %idxprom91, !dbg !4469
  %77 = load i16, i16* %arrayidx92, align 2, !dbg !4469
  %conv = zext i16 %77 to i32, !dbg !4469
  %78 = load i32, i32* %z048, align 4, !dbg !4470
  %79 = load i32, i32* %z378, align 4, !dbg !4471
  %add93 = add i32 %78, %79, !dbg !4472
  %shr94 = ashr i32 %add93, 6, !dbg !4473
  %add95 = add nsw i32 %conv, %shr94, !dbg !4474
  store i32 %add95, i32* %a.addr.i, align 4, !dbg !4475
  store i32 10, i32* %p.addr.i, align 4, !dbg !4475
  %80 = load i32, i32* %a.addr.i, align 4, !dbg !4476
  %81 = load i32, i32* %p.addr.i, align 4, !dbg !4477
  %shl.i = shl i32 1, %81, !dbg !4478
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !4479
  %neg.i = xor i32 %sub.i, -1, !dbg !4480
  %and.i = and i32 %80, %neg.i, !dbg !4481
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !4481
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !4482

if.then.i:                                        ; preds = %for.body47
  %82 = load i32, i32* %a.addr.i, align 4, !dbg !4483
  %neg1.i = xor i32 %82, -1, !dbg !4484
  %shr.i = ashr i32 %neg1.i, 31, !dbg !4485
  %83 = load i32, i32* %p.addr.i, align 4, !dbg !4486
  %shl2.i = shl i32 1, %83, !dbg !4487
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !4488
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !4489
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !4490
  br label %av_clip_uintp2_c.exit, !dbg !4490

if.else.i:                                        ; preds = %for.body47
  %84 = load i32, i32* %a.addr.i, align 4, !dbg !4491
  store i32 %84, i32* %retval.i, align 4, !dbg !4492
  br label %av_clip_uintp2_c.exit, !dbg !4492

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %85 = load i32, i32* %retval.i, align 4, !dbg !4493
  %conv96 = trunc i32 %85 to i16, !dbg !4475
  %86 = load i32, i32* %i, align 4, !dbg !4494
  %87 = load i32, i32* %stride.addr, align 4, !dbg !4495
  %mul97 = mul nsw i32 0, %87, !dbg !4496
  %add98 = add nsw i32 %86, %mul97, !dbg !4497
  %idxprom99 = sext i32 %add98 to i64, !dbg !4498
  %88 = load i16*, i16** %dst, align 8, !dbg !4498
  %arrayidx100 = getelementptr inbounds i16, i16* %88, i64 %idxprom99, !dbg !4498
  store i16 %conv96, i16* %arrayidx100, align 2, !dbg !4499
  %89 = load i32, i32* %i, align 4, !dbg !4500
  %90 = load i32, i32* %stride.addr, align 4, !dbg !4501
  %mul101 = mul nsw i32 1, %90, !dbg !4502
  %add102 = add nsw i32 %89, %mul101, !dbg !4503
  %idxprom103 = sext i32 %add102 to i64, !dbg !4504
  %91 = load i16*, i16** %dst, align 8, !dbg !4504
  %arrayidx104 = getelementptr inbounds i16, i16* %91, i64 %idxprom103, !dbg !4504
  %92 = load i16, i16* %arrayidx104, align 2, !dbg !4504
  %conv105 = zext i16 %92 to i32, !dbg !4504
  %93 = load i32, i32* %z157, align 4, !dbg !4505
  %94 = load i32, i32* %z267, align 4, !dbg !4506
  %add106 = add i32 %93, %94, !dbg !4507
  %shr107 = ashr i32 %add106, 6, !dbg !4508
  %add108 = add nsw i32 %conv105, %shr107, !dbg !4509
  store i32 %add108, i32* %a.addr.i179, align 4, !dbg !4510
  store i32 10, i32* %p.addr.i180, align 4, !dbg !4510
  %95 = load i32, i32* %a.addr.i179, align 4, !dbg !4511
  %96 = load i32, i32* %p.addr.i180, align 4, !dbg !4512
  %shl.i181 = shl i32 1, %96, !dbg !4513
  %sub.i182 = sub nsw i32 %shl.i181, 1, !dbg !4514
  %neg.i183 = xor i32 %sub.i182, -1, !dbg !4515
  %and.i184 = and i32 %95, %neg.i183, !dbg !4516
  %tobool.i185 = icmp ne i32 %and.i184, 0, !dbg !4516
  br i1 %tobool.i185, label %if.then.i191, label %if.else.i192, !dbg !4517

if.then.i191:                                     ; preds = %av_clip_uintp2_c.exit
  %97 = load i32, i32* %a.addr.i179, align 4, !dbg !4518
  %neg1.i186 = xor i32 %97, -1, !dbg !4519
  %shr.i187 = ashr i32 %neg1.i186, 31, !dbg !4520
  %98 = load i32, i32* %p.addr.i180, align 4, !dbg !4521
  %shl2.i188 = shl i32 1, %98, !dbg !4522
  %sub3.i189 = sub nsw i32 %shl2.i188, 1, !dbg !4523
  %and4.i190 = and i32 %shr.i187, %sub3.i189, !dbg !4524
  store i32 %and4.i190, i32* %retval.i178, align 4, !dbg !4525
  br label %av_clip_uintp2_c.exit193, !dbg !4525

if.else.i192:                                     ; preds = %av_clip_uintp2_c.exit
  %99 = load i32, i32* %a.addr.i179, align 4, !dbg !4526
  store i32 %99, i32* %retval.i178, align 4, !dbg !4527
  br label %av_clip_uintp2_c.exit193, !dbg !4527

av_clip_uintp2_c.exit193:                         ; preds = %if.then.i191, %if.else.i192
  %100 = load i32, i32* %retval.i178, align 4, !dbg !4528
  %conv110 = trunc i32 %100 to i16, !dbg !4510
  %101 = load i32, i32* %i, align 4, !dbg !4529
  %102 = load i32, i32* %stride.addr, align 4, !dbg !4530
  %mul111 = mul nsw i32 1, %102, !dbg !4531
  %add112 = add nsw i32 %101, %mul111, !dbg !4532
  %idxprom113 = sext i32 %add112 to i64, !dbg !4533
  %103 = load i16*, i16** %dst, align 8, !dbg !4533
  %arrayidx114 = getelementptr inbounds i16, i16* %103, i64 %idxprom113, !dbg !4533
  store i16 %conv110, i16* %arrayidx114, align 2, !dbg !4534
  %104 = load i32, i32* %i, align 4, !dbg !4535
  %105 = load i32, i32* %stride.addr, align 4, !dbg !4536
  %mul115 = mul nsw i32 2, %105, !dbg !4537
  %add116 = add nsw i32 %104, %mul115, !dbg !4538
  %idxprom117 = sext i32 %add116 to i64, !dbg !4539
  %106 = load i16*, i16** %dst, align 8, !dbg !4539
  %arrayidx118 = getelementptr inbounds i16, i16* %106, i64 %idxprom117, !dbg !4539
  %107 = load i16, i16* %arrayidx118, align 2, !dbg !4539
  %conv119 = zext i16 %107 to i32, !dbg !4539
  %108 = load i32, i32* %z157, align 4, !dbg !4540
  %109 = load i32, i32* %z267, align 4, !dbg !4541
  %sub120 = sub i32 %108, %109, !dbg !4542
  %shr121 = ashr i32 %sub120, 6, !dbg !4543
  %add122 = add nsw i32 %conv119, %shr121, !dbg !4544
  store i32 %add122, i32* %a.addr.i163, align 4, !dbg !4545
  store i32 10, i32* %p.addr.i164, align 4, !dbg !4545
  %110 = load i32, i32* %a.addr.i163, align 4, !dbg !4546
  %111 = load i32, i32* %p.addr.i164, align 4, !dbg !4547
  %shl.i165 = shl i32 1, %111, !dbg !4548
  %sub.i166 = sub nsw i32 %shl.i165, 1, !dbg !4549
  %neg.i167 = xor i32 %sub.i166, -1, !dbg !4550
  %and.i168 = and i32 %110, %neg.i167, !dbg !4551
  %tobool.i169 = icmp ne i32 %and.i168, 0, !dbg !4551
  br i1 %tobool.i169, label %if.then.i175, label %if.else.i176, !dbg !4552

if.then.i175:                                     ; preds = %av_clip_uintp2_c.exit193
  %112 = load i32, i32* %a.addr.i163, align 4, !dbg !4553
  %neg1.i170 = xor i32 %112, -1, !dbg !4554
  %shr.i171 = ashr i32 %neg1.i170, 31, !dbg !4555
  %113 = load i32, i32* %p.addr.i164, align 4, !dbg !4556
  %shl2.i172 = shl i32 1, %113, !dbg !4557
  %sub3.i173 = sub nsw i32 %shl2.i172, 1, !dbg !4558
  %and4.i174 = and i32 %shr.i171, %sub3.i173, !dbg !4559
  store i32 %and4.i174, i32* %retval.i162, align 4, !dbg !4560
  br label %av_clip_uintp2_c.exit177, !dbg !4560

if.else.i176:                                     ; preds = %av_clip_uintp2_c.exit193
  %114 = load i32, i32* %a.addr.i163, align 4, !dbg !4561
  store i32 %114, i32* %retval.i162, align 4, !dbg !4562
  br label %av_clip_uintp2_c.exit177, !dbg !4562

av_clip_uintp2_c.exit177:                         ; preds = %if.then.i175, %if.else.i176
  %115 = load i32, i32* %retval.i162, align 4, !dbg !4563
  %conv124 = trunc i32 %115 to i16, !dbg !4545
  %116 = load i32, i32* %i, align 4, !dbg !4564
  %117 = load i32, i32* %stride.addr, align 4, !dbg !4565
  %mul125 = mul nsw i32 2, %117, !dbg !4566
  %add126 = add nsw i32 %116, %mul125, !dbg !4567
  %idxprom127 = sext i32 %add126 to i64, !dbg !4568
  %118 = load i16*, i16** %dst, align 8, !dbg !4568
  %arrayidx128 = getelementptr inbounds i16, i16* %118, i64 %idxprom127, !dbg !4568
  store i16 %conv124, i16* %arrayidx128, align 2, !dbg !4569
  %119 = load i32, i32* %i, align 4, !dbg !4570
  %120 = load i32, i32* %stride.addr, align 4, !dbg !4571
  %mul129 = mul nsw i32 3, %120, !dbg !4572
  %add130 = add nsw i32 %119, %mul129, !dbg !4573
  %idxprom131 = sext i32 %add130 to i64, !dbg !4574
  %121 = load i16*, i16** %dst, align 8, !dbg !4574
  %arrayidx132 = getelementptr inbounds i16, i16* %121, i64 %idxprom131, !dbg !4574
  %122 = load i16, i16* %arrayidx132, align 2, !dbg !4574
  %conv133 = zext i16 %122 to i32, !dbg !4574
  %123 = load i32, i32* %z048, align 4, !dbg !4575
  %124 = load i32, i32* %z378, align 4, !dbg !4576
  %sub134 = sub i32 %123, %124, !dbg !4577
  %shr135 = ashr i32 %sub134, 6, !dbg !4578
  %add136 = add nsw i32 %conv133, %shr135, !dbg !4579
  store i32 %add136, i32* %a.addr.i147, align 4, !dbg !4580
  store i32 10, i32* %p.addr.i148, align 4, !dbg !4580
  %125 = load i32, i32* %a.addr.i147, align 4, !dbg !4581
  %126 = load i32, i32* %p.addr.i148, align 4, !dbg !4582
  %shl.i149 = shl i32 1, %126, !dbg !4583
  %sub.i150 = sub nsw i32 %shl.i149, 1, !dbg !4584
  %neg.i151 = xor i32 %sub.i150, -1, !dbg !4585
  %and.i152 = and i32 %125, %neg.i151, !dbg !4586
  %tobool.i153 = icmp ne i32 %and.i152, 0, !dbg !4586
  br i1 %tobool.i153, label %if.then.i159, label %if.else.i160, !dbg !4587

if.then.i159:                                     ; preds = %av_clip_uintp2_c.exit177
  %127 = load i32, i32* %a.addr.i147, align 4, !dbg !4588
  %neg1.i154 = xor i32 %127, -1, !dbg !4589
  %shr.i155 = ashr i32 %neg1.i154, 31, !dbg !4590
  %128 = load i32, i32* %p.addr.i148, align 4, !dbg !4591
  %shl2.i156 = shl i32 1, %128, !dbg !4592
  %sub3.i157 = sub nsw i32 %shl2.i156, 1, !dbg !4593
  %and4.i158 = and i32 %shr.i155, %sub3.i157, !dbg !4594
  store i32 %and4.i158, i32* %retval.i146, align 4, !dbg !4595
  br label %av_clip_uintp2_c.exit161, !dbg !4595

if.else.i160:                                     ; preds = %av_clip_uintp2_c.exit177
  %129 = load i32, i32* %a.addr.i147, align 4, !dbg !4596
  store i32 %129, i32* %retval.i146, align 4, !dbg !4597
  br label %av_clip_uintp2_c.exit161, !dbg !4597

av_clip_uintp2_c.exit161:                         ; preds = %if.then.i159, %if.else.i160
  %130 = load i32, i32* %retval.i146, align 4, !dbg !4598
  %conv138 = trunc i32 %130 to i16, !dbg !4580
  %131 = load i32, i32* %i, align 4, !dbg !4599
  %132 = load i32, i32* %stride.addr, align 4, !dbg !4600
  %mul139 = mul nsw i32 3, %132, !dbg !4601
  %add140 = add nsw i32 %131, %mul139, !dbg !4602
  %idxprom141 = sext i32 %add140 to i64, !dbg !4603
  %133 = load i16*, i16** %dst, align 8, !dbg !4603
  %arrayidx142 = getelementptr inbounds i16, i16* %133, i64 %idxprom141, !dbg !4603
  store i16 %conv138, i16* %arrayidx142, align 2, !dbg !4604
  br label %for.inc143, !dbg !4605

for.inc143:                                       ; preds = %av_clip_uintp2_c.exit161
  %134 = load i32, i32* %i, align 4, !dbg !4606
  %inc144 = add nsw i32 %134, 1, !dbg !4606
  store i32 %inc144, i32* %i, align 4, !dbg !4606
  br label %for.cond45, !dbg !4608, !llvm.loop !4609

for.end145:                                       ; preds = %for.cond45
  %135 = load i32*, i32** %block, align 8, !dbg !4611
  %136 = bitcast i32* %135 to i8*, !dbg !4612
  call void @llvm.memset.p0i8.i64(i8* %136, i8 0, i64 64, i32 4, i1 false), !dbg !4612
  ret void, !dbg !4613
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_add_10_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !4614 {
entry:
  %retval.i498 = alloca i32, align 4
  %a.addr.i499 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i499, metadata !2143, metadata !67), !dbg !4615
  %p.addr.i500 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i500, metadata !2152, metadata !67), !dbg !4620
  %retval.i482 = alloca i32, align 4
  %a.addr.i483 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i483, metadata !2143, metadata !67), !dbg !4621
  %p.addr.i484 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i484, metadata !2152, metadata !67), !dbg !4623
  %retval.i466 = alloca i32, align 4
  %a.addr.i467 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i467, metadata !2143, metadata !67), !dbg !4624
  %p.addr.i468 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i468, metadata !2152, metadata !67), !dbg !4626
  %retval.i450 = alloca i32, align 4
  %a.addr.i451 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i451, metadata !2143, metadata !67), !dbg !4627
  %p.addr.i452 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i452, metadata !2152, metadata !67), !dbg !4629
  %retval.i434 = alloca i32, align 4
  %a.addr.i435 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i435, metadata !2143, metadata !67), !dbg !4630
  %p.addr.i436 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i436, metadata !2152, metadata !67), !dbg !4632
  %retval.i418 = alloca i32, align 4
  %a.addr.i419 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i419, metadata !2143, metadata !67), !dbg !4633
  %p.addr.i420 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i420, metadata !2152, metadata !67), !dbg !4635
  %retval.i402 = alloca i32, align 4
  %a.addr.i403 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i403, metadata !2143, metadata !67), !dbg !4636
  %p.addr.i404 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i404, metadata !2152, metadata !67), !dbg !4638
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !4639
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !4641
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %a0 = alloca i32, align 4
  %a2 = alloca i32, align 4
  %a4 = alloca i32, align 4
  %a6 = alloca i32, align 4
  %b0 = alloca i32, align 4
  %b2 = alloca i32, align 4
  %b4 = alloca i32, align 4
  %b6 = alloca i32, align 4
  %a1 = alloca i32, align 4
  %a3 = alloca i32, align 4
  %a5 = alloca i32, align 4
  %a7 = alloca i32, align 4
  %b1 = alloca i32, align 4
  %b3 = alloca i32, align 4
  %b5 = alloca i32, align 4
  %b7 = alloca i32, align 4
  %a0142 = alloca i32, align 4
  %a2151 = alloca i32, align 4
  %a4161 = alloca i32, align 4
  %a6172 = alloca i32, align 4
  %b0183 = alloca i32, align 4
  %b2185 = alloca i32, align 4
  %b4187 = alloca i32, align 4
  %b6189 = alloca i32, align 4
  %a1191 = alloca i32, align 4
  %a3213 = alloca i32, align 4
  %a5234 = alloca i32, align 4
  %a7256 = alloca i32, align 4
  %b1277 = alloca i32, align 4
  %b3280 = alloca i32, align 4
  %b5283 = alloca i32, align 4
  %b7286 = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !4642, metadata !67), !dbg !4643
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !4644, metadata !67), !dbg !4645
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !4646, metadata !67), !dbg !4647
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4648, metadata !67), !dbg !4649
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !4650, metadata !67), !dbg !4651
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !4652
  %1 = bitcast i8* %0 to i16*, !dbg !4653
  store i16* %1, i16** %dst, align 8, !dbg !4651
  call void @llvm.dbg.declare(metadata i32** %block, metadata !4654, metadata !67), !dbg !4655
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !4656
  %3 = bitcast i16* %2 to i32*, !dbg !4657
  store i32* %3, i32** %block, align 8, !dbg !4655
  %4 = load i32, i32* %stride.addr, align 4, !dbg !4658
  %shr = ashr i32 %4, 1, !dbg !4658
  store i32 %shr, i32* %stride.addr, align 4, !dbg !4658
  %5 = load i32*, i32** %block, align 8, !dbg !4659
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !4659
  %6 = load i32, i32* %arrayidx, align 4, !dbg !4660
  %add = add nsw i32 %6, 32, !dbg !4660
  store i32 %add, i32* %arrayidx, align 4, !dbg !4660
  store i32 0, i32* %i, align 4, !dbg !4661
  br label %for.cond, !dbg !4663

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !4664
  %cmp = icmp slt i32 %7, 8, !dbg !4667
  br i1 %cmp, label %for.body, label %for.end, !dbg !4668

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %a0, metadata !4669, metadata !67), !dbg !4671
  %8 = load i32, i32* %i, align 4, !dbg !4672
  %add1 = add nsw i32 %8, 0, !dbg !4673
  %idxprom = sext i32 %add1 to i64, !dbg !4674
  %9 = load i32*, i32** %block, align 8, !dbg !4674
  %arrayidx2 = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !4674
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !4674
  %11 = load i32, i32* %i, align 4, !dbg !4675
  %add3 = add nsw i32 %11, 32, !dbg !4676
  %idxprom4 = sext i32 %add3 to i64, !dbg !4677
  %12 = load i32*, i32** %block, align 8, !dbg !4677
  %arrayidx5 = getelementptr inbounds i32, i32* %12, i64 %idxprom4, !dbg !4677
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !4677
  %add6 = add i32 %10, %13, !dbg !4678
  store i32 %add6, i32* %a0, align 4, !dbg !4671
  call void @llvm.dbg.declare(metadata i32* %a2, metadata !4679, metadata !67), !dbg !4680
  %14 = load i32, i32* %i, align 4, !dbg !4681
  %add7 = add nsw i32 %14, 0, !dbg !4682
  %idxprom8 = sext i32 %add7 to i64, !dbg !4683
  %15 = load i32*, i32** %block, align 8, !dbg !4683
  %arrayidx9 = getelementptr inbounds i32, i32* %15, i64 %idxprom8, !dbg !4683
  %16 = load i32, i32* %arrayidx9, align 4, !dbg !4683
  %17 = load i32, i32* %i, align 4, !dbg !4684
  %add10 = add nsw i32 %17, 32, !dbg !4685
  %idxprom11 = sext i32 %add10 to i64, !dbg !4686
  %18 = load i32*, i32** %block, align 8, !dbg !4686
  %arrayidx12 = getelementptr inbounds i32, i32* %18, i64 %idxprom11, !dbg !4686
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !4686
  %sub = sub i32 %16, %19, !dbg !4687
  store i32 %sub, i32* %a2, align 4, !dbg !4680
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !4688, metadata !67), !dbg !4689
  %20 = load i32, i32* %i, align 4, !dbg !4690
  %add13 = add nsw i32 %20, 16, !dbg !4691
  %idxprom14 = sext i32 %add13 to i64, !dbg !4692
  %21 = load i32*, i32** %block, align 8, !dbg !4692
  %arrayidx15 = getelementptr inbounds i32, i32* %21, i64 %idxprom14, !dbg !4692
  %22 = load i32, i32* %arrayidx15, align 4, !dbg !4692
  %shr16 = ashr i32 %22, 1, !dbg !4693
  %23 = load i32, i32* %i, align 4, !dbg !4694
  %add17 = add nsw i32 %23, 48, !dbg !4695
  %idxprom18 = sext i32 %add17 to i64, !dbg !4696
  %24 = load i32*, i32** %block, align 8, !dbg !4696
  %arrayidx19 = getelementptr inbounds i32, i32* %24, i64 %idxprom18, !dbg !4696
  %25 = load i32, i32* %arrayidx19, align 4, !dbg !4696
  %sub20 = sub i32 %shr16, %25, !dbg !4697
  store i32 %sub20, i32* %a4, align 4, !dbg !4689
  call void @llvm.dbg.declare(metadata i32* %a6, metadata !4698, metadata !67), !dbg !4699
  %26 = load i32, i32* %i, align 4, !dbg !4700
  %add21 = add nsw i32 %26, 48, !dbg !4701
  %idxprom22 = sext i32 %add21 to i64, !dbg !4702
  %27 = load i32*, i32** %block, align 8, !dbg !4702
  %arrayidx23 = getelementptr inbounds i32, i32* %27, i64 %idxprom22, !dbg !4702
  %28 = load i32, i32* %arrayidx23, align 4, !dbg !4702
  %shr24 = ashr i32 %28, 1, !dbg !4703
  %29 = load i32, i32* %i, align 4, !dbg !4704
  %add25 = add nsw i32 %29, 16, !dbg !4705
  %idxprom26 = sext i32 %add25 to i64, !dbg !4706
  %30 = load i32*, i32** %block, align 8, !dbg !4706
  %arrayidx27 = getelementptr inbounds i32, i32* %30, i64 %idxprom26, !dbg !4706
  %31 = load i32, i32* %arrayidx27, align 4, !dbg !4706
  %add28 = add i32 %shr24, %31, !dbg !4707
  store i32 %add28, i32* %a6, align 4, !dbg !4699
  call void @llvm.dbg.declare(metadata i32* %b0, metadata !4708, metadata !67), !dbg !4709
  %32 = load i32, i32* %a0, align 4, !dbg !4710
  %33 = load i32, i32* %a6, align 4, !dbg !4711
  %add29 = add i32 %32, %33, !dbg !4712
  store i32 %add29, i32* %b0, align 4, !dbg !4709
  call void @llvm.dbg.declare(metadata i32* %b2, metadata !4713, metadata !67), !dbg !4714
  %34 = load i32, i32* %a2, align 4, !dbg !4715
  %35 = load i32, i32* %a4, align 4, !dbg !4716
  %add30 = add i32 %34, %35, !dbg !4717
  store i32 %add30, i32* %b2, align 4, !dbg !4714
  call void @llvm.dbg.declare(metadata i32* %b4, metadata !4718, metadata !67), !dbg !4719
  %36 = load i32, i32* %a2, align 4, !dbg !4720
  %37 = load i32, i32* %a4, align 4, !dbg !4721
  %sub31 = sub i32 %36, %37, !dbg !4722
  store i32 %sub31, i32* %b4, align 4, !dbg !4719
  call void @llvm.dbg.declare(metadata i32* %b6, metadata !4723, metadata !67), !dbg !4724
  %38 = load i32, i32* %a0, align 4, !dbg !4725
  %39 = load i32, i32* %a6, align 4, !dbg !4726
  %sub32 = sub i32 %38, %39, !dbg !4727
  store i32 %sub32, i32* %b6, align 4, !dbg !4724
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !4728, metadata !67), !dbg !4729
  %40 = load i32, i32* %i, align 4, !dbg !4730
  %add33 = add nsw i32 %40, 24, !dbg !4731
  %idxprom34 = sext i32 %add33 to i64, !dbg !4732
  %41 = load i32*, i32** %block, align 8, !dbg !4732
  %arrayidx35 = getelementptr inbounds i32, i32* %41, i64 %idxprom34, !dbg !4732
  %42 = load i32, i32* %arrayidx35, align 4, !dbg !4732
  %sub36 = sub nsw i32 0, %42, !dbg !4733
  %43 = load i32, i32* %i, align 4, !dbg !4734
  %add37 = add nsw i32 %43, 40, !dbg !4735
  %idxprom38 = sext i32 %add37 to i64, !dbg !4736
  %44 = load i32*, i32** %block, align 8, !dbg !4736
  %arrayidx39 = getelementptr inbounds i32, i32* %44, i64 %idxprom38, !dbg !4736
  %45 = load i32, i32* %arrayidx39, align 4, !dbg !4736
  %add40 = add i32 %sub36, %45, !dbg !4737
  %46 = load i32, i32* %i, align 4, !dbg !4738
  %add41 = add nsw i32 %46, 56, !dbg !4739
  %idxprom42 = sext i32 %add41 to i64, !dbg !4740
  %47 = load i32*, i32** %block, align 8, !dbg !4740
  %arrayidx43 = getelementptr inbounds i32, i32* %47, i64 %idxprom42, !dbg !4740
  %48 = load i32, i32* %arrayidx43, align 4, !dbg !4740
  %sub44 = sub i32 %add40, %48, !dbg !4741
  %49 = load i32, i32* %i, align 4, !dbg !4742
  %add45 = add nsw i32 %49, 56, !dbg !4743
  %idxprom46 = sext i32 %add45 to i64, !dbg !4744
  %50 = load i32*, i32** %block, align 8, !dbg !4744
  %arrayidx47 = getelementptr inbounds i32, i32* %50, i64 %idxprom46, !dbg !4744
  %51 = load i32, i32* %arrayidx47, align 4, !dbg !4744
  %shr48 = ashr i32 %51, 1, !dbg !4745
  %sub49 = sub i32 %sub44, %shr48, !dbg !4746
  store i32 %sub49, i32* %a1, align 4, !dbg !4729
  call void @llvm.dbg.declare(metadata i32* %a3, metadata !4747, metadata !67), !dbg !4748
  %52 = load i32, i32* %i, align 4, !dbg !4749
  %add50 = add nsw i32 %52, 8, !dbg !4750
  %idxprom51 = sext i32 %add50 to i64, !dbg !4751
  %53 = load i32*, i32** %block, align 8, !dbg !4751
  %arrayidx52 = getelementptr inbounds i32, i32* %53, i64 %idxprom51, !dbg !4751
  %54 = load i32, i32* %arrayidx52, align 4, !dbg !4751
  %55 = load i32, i32* %i, align 4, !dbg !4752
  %add53 = add nsw i32 %55, 56, !dbg !4753
  %idxprom54 = sext i32 %add53 to i64, !dbg !4754
  %56 = load i32*, i32** %block, align 8, !dbg !4754
  %arrayidx55 = getelementptr inbounds i32, i32* %56, i64 %idxprom54, !dbg !4754
  %57 = load i32, i32* %arrayidx55, align 4, !dbg !4754
  %add56 = add i32 %54, %57, !dbg !4755
  %58 = load i32, i32* %i, align 4, !dbg !4756
  %add57 = add nsw i32 %58, 24, !dbg !4757
  %idxprom58 = sext i32 %add57 to i64, !dbg !4758
  %59 = load i32*, i32** %block, align 8, !dbg !4758
  %arrayidx59 = getelementptr inbounds i32, i32* %59, i64 %idxprom58, !dbg !4758
  %60 = load i32, i32* %arrayidx59, align 4, !dbg !4758
  %sub60 = sub i32 %add56, %60, !dbg !4759
  %61 = load i32, i32* %i, align 4, !dbg !4760
  %add61 = add nsw i32 %61, 24, !dbg !4761
  %idxprom62 = sext i32 %add61 to i64, !dbg !4762
  %62 = load i32*, i32** %block, align 8, !dbg !4762
  %arrayidx63 = getelementptr inbounds i32, i32* %62, i64 %idxprom62, !dbg !4762
  %63 = load i32, i32* %arrayidx63, align 4, !dbg !4762
  %shr64 = ashr i32 %63, 1, !dbg !4763
  %sub65 = sub i32 %sub60, %shr64, !dbg !4764
  store i32 %sub65, i32* %a3, align 4, !dbg !4748
  call void @llvm.dbg.declare(metadata i32* %a5, metadata !4765, metadata !67), !dbg !4766
  %64 = load i32, i32* %i, align 4, !dbg !4767
  %add66 = add nsw i32 %64, 8, !dbg !4768
  %idxprom67 = sext i32 %add66 to i64, !dbg !4769
  %65 = load i32*, i32** %block, align 8, !dbg !4769
  %arrayidx68 = getelementptr inbounds i32, i32* %65, i64 %idxprom67, !dbg !4769
  %66 = load i32, i32* %arrayidx68, align 4, !dbg !4769
  %sub69 = sub nsw i32 0, %66, !dbg !4770
  %67 = load i32, i32* %i, align 4, !dbg !4771
  %add70 = add nsw i32 %67, 56, !dbg !4772
  %idxprom71 = sext i32 %add70 to i64, !dbg !4773
  %68 = load i32*, i32** %block, align 8, !dbg !4773
  %arrayidx72 = getelementptr inbounds i32, i32* %68, i64 %idxprom71, !dbg !4773
  %69 = load i32, i32* %arrayidx72, align 4, !dbg !4773
  %add73 = add i32 %sub69, %69, !dbg !4774
  %70 = load i32, i32* %i, align 4, !dbg !4775
  %add74 = add nsw i32 %70, 40, !dbg !4776
  %idxprom75 = sext i32 %add74 to i64, !dbg !4777
  %71 = load i32*, i32** %block, align 8, !dbg !4777
  %arrayidx76 = getelementptr inbounds i32, i32* %71, i64 %idxprom75, !dbg !4777
  %72 = load i32, i32* %arrayidx76, align 4, !dbg !4777
  %add77 = add i32 %add73, %72, !dbg !4778
  %73 = load i32, i32* %i, align 4, !dbg !4779
  %add78 = add nsw i32 %73, 40, !dbg !4780
  %idxprom79 = sext i32 %add78 to i64, !dbg !4781
  %74 = load i32*, i32** %block, align 8, !dbg !4781
  %arrayidx80 = getelementptr inbounds i32, i32* %74, i64 %idxprom79, !dbg !4781
  %75 = load i32, i32* %arrayidx80, align 4, !dbg !4781
  %shr81 = ashr i32 %75, 1, !dbg !4782
  %add82 = add i32 %add77, %shr81, !dbg !4783
  store i32 %add82, i32* %a5, align 4, !dbg !4766
  call void @llvm.dbg.declare(metadata i32* %a7, metadata !4784, metadata !67), !dbg !4785
  %76 = load i32, i32* %i, align 4, !dbg !4786
  %add83 = add nsw i32 %76, 24, !dbg !4787
  %idxprom84 = sext i32 %add83 to i64, !dbg !4788
  %77 = load i32*, i32** %block, align 8, !dbg !4788
  %arrayidx85 = getelementptr inbounds i32, i32* %77, i64 %idxprom84, !dbg !4788
  %78 = load i32, i32* %arrayidx85, align 4, !dbg !4788
  %79 = load i32, i32* %i, align 4, !dbg !4789
  %add86 = add nsw i32 %79, 40, !dbg !4790
  %idxprom87 = sext i32 %add86 to i64, !dbg !4791
  %80 = load i32*, i32** %block, align 8, !dbg !4791
  %arrayidx88 = getelementptr inbounds i32, i32* %80, i64 %idxprom87, !dbg !4791
  %81 = load i32, i32* %arrayidx88, align 4, !dbg !4791
  %add89 = add i32 %78, %81, !dbg !4792
  %82 = load i32, i32* %i, align 4, !dbg !4793
  %add90 = add nsw i32 %82, 8, !dbg !4794
  %idxprom91 = sext i32 %add90 to i64, !dbg !4795
  %83 = load i32*, i32** %block, align 8, !dbg !4795
  %arrayidx92 = getelementptr inbounds i32, i32* %83, i64 %idxprom91, !dbg !4795
  %84 = load i32, i32* %arrayidx92, align 4, !dbg !4795
  %add93 = add i32 %add89, %84, !dbg !4796
  %85 = load i32, i32* %i, align 4, !dbg !4797
  %add94 = add nsw i32 %85, 8, !dbg !4798
  %idxprom95 = sext i32 %add94 to i64, !dbg !4799
  %86 = load i32*, i32** %block, align 8, !dbg !4799
  %arrayidx96 = getelementptr inbounds i32, i32* %86, i64 %idxprom95, !dbg !4799
  %87 = load i32, i32* %arrayidx96, align 4, !dbg !4799
  %shr97 = ashr i32 %87, 1, !dbg !4800
  %add98 = add i32 %add93, %shr97, !dbg !4801
  store i32 %add98, i32* %a7, align 4, !dbg !4785
  call void @llvm.dbg.declare(metadata i32* %b1, metadata !4802, metadata !67), !dbg !4803
  %88 = load i32, i32* %a7, align 4, !dbg !4804
  %shr99 = ashr i32 %88, 2, !dbg !4805
  %89 = load i32, i32* %a1, align 4, !dbg !4806
  %add100 = add i32 %shr99, %89, !dbg !4807
  store i32 %add100, i32* %b1, align 4, !dbg !4803
  call void @llvm.dbg.declare(metadata i32* %b3, metadata !4808, metadata !67), !dbg !4809
  %90 = load i32, i32* %a3, align 4, !dbg !4810
  %91 = load i32, i32* %a5, align 4, !dbg !4811
  %shr101 = ashr i32 %91, 2, !dbg !4812
  %add102 = add i32 %90, %shr101, !dbg !4813
  store i32 %add102, i32* %b3, align 4, !dbg !4809
  call void @llvm.dbg.declare(metadata i32* %b5, metadata !4814, metadata !67), !dbg !4815
  %92 = load i32, i32* %a3, align 4, !dbg !4816
  %shr103 = ashr i32 %92, 2, !dbg !4817
  %93 = load i32, i32* %a5, align 4, !dbg !4818
  %sub104 = sub i32 %shr103, %93, !dbg !4819
  store i32 %sub104, i32* %b5, align 4, !dbg !4815
  call void @llvm.dbg.declare(metadata i32* %b7, metadata !4820, metadata !67), !dbg !4821
  %94 = load i32, i32* %a7, align 4, !dbg !4822
  %95 = load i32, i32* %a1, align 4, !dbg !4823
  %shr105 = ashr i32 %95, 2, !dbg !4824
  %sub106 = sub i32 %94, %shr105, !dbg !4825
  store i32 %sub106, i32* %b7, align 4, !dbg !4821
  %96 = load i32, i32* %b0, align 4, !dbg !4826
  %97 = load i32, i32* %b7, align 4, !dbg !4827
  %add107 = add i32 %96, %97, !dbg !4828
  %98 = load i32, i32* %i, align 4, !dbg !4829
  %add108 = add nsw i32 %98, 0, !dbg !4830
  %idxprom109 = sext i32 %add108 to i64, !dbg !4831
  %99 = load i32*, i32** %block, align 8, !dbg !4831
  %arrayidx110 = getelementptr inbounds i32, i32* %99, i64 %idxprom109, !dbg !4831
  store i32 %add107, i32* %arrayidx110, align 4, !dbg !4832
  %100 = load i32, i32* %b0, align 4, !dbg !4833
  %101 = load i32, i32* %b7, align 4, !dbg !4834
  %sub111 = sub i32 %100, %101, !dbg !4835
  %102 = load i32, i32* %i, align 4, !dbg !4836
  %add112 = add nsw i32 %102, 56, !dbg !4837
  %idxprom113 = sext i32 %add112 to i64, !dbg !4838
  %103 = load i32*, i32** %block, align 8, !dbg !4838
  %arrayidx114 = getelementptr inbounds i32, i32* %103, i64 %idxprom113, !dbg !4838
  store i32 %sub111, i32* %arrayidx114, align 4, !dbg !4839
  %104 = load i32, i32* %b2, align 4, !dbg !4840
  %105 = load i32, i32* %b5, align 4, !dbg !4841
  %add115 = add i32 %104, %105, !dbg !4842
  %106 = load i32, i32* %i, align 4, !dbg !4843
  %add116 = add nsw i32 %106, 8, !dbg !4844
  %idxprom117 = sext i32 %add116 to i64, !dbg !4845
  %107 = load i32*, i32** %block, align 8, !dbg !4845
  %arrayidx118 = getelementptr inbounds i32, i32* %107, i64 %idxprom117, !dbg !4845
  store i32 %add115, i32* %arrayidx118, align 4, !dbg !4846
  %108 = load i32, i32* %b2, align 4, !dbg !4847
  %109 = load i32, i32* %b5, align 4, !dbg !4848
  %sub119 = sub i32 %108, %109, !dbg !4849
  %110 = load i32, i32* %i, align 4, !dbg !4850
  %add120 = add nsw i32 %110, 48, !dbg !4851
  %idxprom121 = sext i32 %add120 to i64, !dbg !4852
  %111 = load i32*, i32** %block, align 8, !dbg !4852
  %arrayidx122 = getelementptr inbounds i32, i32* %111, i64 %idxprom121, !dbg !4852
  store i32 %sub119, i32* %arrayidx122, align 4, !dbg !4853
  %112 = load i32, i32* %b4, align 4, !dbg !4854
  %113 = load i32, i32* %b3, align 4, !dbg !4855
  %add123 = add i32 %112, %113, !dbg !4856
  %114 = load i32, i32* %i, align 4, !dbg !4857
  %add124 = add nsw i32 %114, 16, !dbg !4858
  %idxprom125 = sext i32 %add124 to i64, !dbg !4859
  %115 = load i32*, i32** %block, align 8, !dbg !4859
  %arrayidx126 = getelementptr inbounds i32, i32* %115, i64 %idxprom125, !dbg !4859
  store i32 %add123, i32* %arrayidx126, align 4, !dbg !4860
  %116 = load i32, i32* %b4, align 4, !dbg !4861
  %117 = load i32, i32* %b3, align 4, !dbg !4862
  %sub127 = sub i32 %116, %117, !dbg !4863
  %118 = load i32, i32* %i, align 4, !dbg !4864
  %add128 = add nsw i32 %118, 40, !dbg !4865
  %idxprom129 = sext i32 %add128 to i64, !dbg !4866
  %119 = load i32*, i32** %block, align 8, !dbg !4866
  %arrayidx130 = getelementptr inbounds i32, i32* %119, i64 %idxprom129, !dbg !4866
  store i32 %sub127, i32* %arrayidx130, align 4, !dbg !4867
  %120 = load i32, i32* %b6, align 4, !dbg !4868
  %121 = load i32, i32* %b1, align 4, !dbg !4869
  %add131 = add i32 %120, %121, !dbg !4870
  %122 = load i32, i32* %i, align 4, !dbg !4871
  %add132 = add nsw i32 %122, 24, !dbg !4872
  %idxprom133 = sext i32 %add132 to i64, !dbg !4873
  %123 = load i32*, i32** %block, align 8, !dbg !4873
  %arrayidx134 = getelementptr inbounds i32, i32* %123, i64 %idxprom133, !dbg !4873
  store i32 %add131, i32* %arrayidx134, align 4, !dbg !4874
  %124 = load i32, i32* %b6, align 4, !dbg !4875
  %125 = load i32, i32* %b1, align 4, !dbg !4876
  %sub135 = sub i32 %124, %125, !dbg !4877
  %126 = load i32, i32* %i, align 4, !dbg !4878
  %add136 = add nsw i32 %126, 32, !dbg !4879
  %idxprom137 = sext i32 %add136 to i64, !dbg !4880
  %127 = load i32*, i32** %block, align 8, !dbg !4880
  %arrayidx138 = getelementptr inbounds i32, i32* %127, i64 %idxprom137, !dbg !4880
  store i32 %sub135, i32* %arrayidx138, align 4, !dbg !4881
  br label %for.inc, !dbg !4882

for.inc:                                          ; preds = %for.body
  %128 = load i32, i32* %i, align 4, !dbg !4883
  %inc = add nsw i32 %128, 1, !dbg !4883
  store i32 %inc, i32* %i, align 4, !dbg !4883
  br label %for.cond, !dbg !4885, !llvm.loop !4886

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4888
  br label %for.cond139, !dbg !4889

for.cond139:                                      ; preds = %for.inc399, %for.end
  %129 = load i32, i32* %i, align 4, !dbg !4890
  %cmp140 = icmp slt i32 %129, 8, !dbg !4892
  br i1 %cmp140, label %for.body141, label %for.end401, !dbg !4893

for.body141:                                      ; preds = %for.cond139
  call void @llvm.dbg.declare(metadata i32* %a0142, metadata !4894, metadata !67), !dbg !4895
  %130 = load i32, i32* %i, align 4, !dbg !4896
  %mul = mul nsw i32 %130, 8, !dbg !4897
  %add143 = add nsw i32 0, %mul, !dbg !4898
  %idxprom144 = sext i32 %add143 to i64, !dbg !4899
  %131 = load i32*, i32** %block, align 8, !dbg !4899
  %arrayidx145 = getelementptr inbounds i32, i32* %131, i64 %idxprom144, !dbg !4899
  %132 = load i32, i32* %arrayidx145, align 4, !dbg !4899
  %133 = load i32, i32* %i, align 4, !dbg !4900
  %mul146 = mul nsw i32 %133, 8, !dbg !4901
  %add147 = add nsw i32 4, %mul146, !dbg !4902
  %idxprom148 = sext i32 %add147 to i64, !dbg !4903
  %134 = load i32*, i32** %block, align 8, !dbg !4903
  %arrayidx149 = getelementptr inbounds i32, i32* %134, i64 %idxprom148, !dbg !4903
  %135 = load i32, i32* %arrayidx149, align 4, !dbg !4903
  %add150 = add i32 %132, %135, !dbg !4904
  store i32 %add150, i32* %a0142, align 4, !dbg !4895
  call void @llvm.dbg.declare(metadata i32* %a2151, metadata !4905, metadata !67), !dbg !4906
  %136 = load i32, i32* %i, align 4, !dbg !4907
  %mul152 = mul nsw i32 %136, 8, !dbg !4908
  %add153 = add nsw i32 0, %mul152, !dbg !4909
  %idxprom154 = sext i32 %add153 to i64, !dbg !4910
  %137 = load i32*, i32** %block, align 8, !dbg !4910
  %arrayidx155 = getelementptr inbounds i32, i32* %137, i64 %idxprom154, !dbg !4910
  %138 = load i32, i32* %arrayidx155, align 4, !dbg !4910
  %139 = load i32, i32* %i, align 4, !dbg !4911
  %mul156 = mul nsw i32 %139, 8, !dbg !4912
  %add157 = add nsw i32 4, %mul156, !dbg !4913
  %idxprom158 = sext i32 %add157 to i64, !dbg !4914
  %140 = load i32*, i32** %block, align 8, !dbg !4914
  %arrayidx159 = getelementptr inbounds i32, i32* %140, i64 %idxprom158, !dbg !4914
  %141 = load i32, i32* %arrayidx159, align 4, !dbg !4914
  %sub160 = sub i32 %138, %141, !dbg !4915
  store i32 %sub160, i32* %a2151, align 4, !dbg !4906
  call void @llvm.dbg.declare(metadata i32* %a4161, metadata !4916, metadata !67), !dbg !4917
  %142 = load i32, i32* %i, align 4, !dbg !4918
  %mul162 = mul nsw i32 %142, 8, !dbg !4919
  %add163 = add nsw i32 2, %mul162, !dbg !4920
  %idxprom164 = sext i32 %add163 to i64, !dbg !4921
  %143 = load i32*, i32** %block, align 8, !dbg !4921
  %arrayidx165 = getelementptr inbounds i32, i32* %143, i64 %idxprom164, !dbg !4921
  %144 = load i32, i32* %arrayidx165, align 4, !dbg !4921
  %shr166 = ashr i32 %144, 1, !dbg !4922
  %145 = load i32, i32* %i, align 4, !dbg !4923
  %mul167 = mul nsw i32 %145, 8, !dbg !4924
  %add168 = add nsw i32 6, %mul167, !dbg !4925
  %idxprom169 = sext i32 %add168 to i64, !dbg !4926
  %146 = load i32*, i32** %block, align 8, !dbg !4926
  %arrayidx170 = getelementptr inbounds i32, i32* %146, i64 %idxprom169, !dbg !4926
  %147 = load i32, i32* %arrayidx170, align 4, !dbg !4926
  %sub171 = sub i32 %shr166, %147, !dbg !4927
  store i32 %sub171, i32* %a4161, align 4, !dbg !4917
  call void @llvm.dbg.declare(metadata i32* %a6172, metadata !4928, metadata !67), !dbg !4929
  %148 = load i32, i32* %i, align 4, !dbg !4930
  %mul173 = mul nsw i32 %148, 8, !dbg !4931
  %add174 = add nsw i32 6, %mul173, !dbg !4932
  %idxprom175 = sext i32 %add174 to i64, !dbg !4933
  %149 = load i32*, i32** %block, align 8, !dbg !4933
  %arrayidx176 = getelementptr inbounds i32, i32* %149, i64 %idxprom175, !dbg !4933
  %150 = load i32, i32* %arrayidx176, align 4, !dbg !4933
  %shr177 = ashr i32 %150, 1, !dbg !4934
  %151 = load i32, i32* %i, align 4, !dbg !4935
  %mul178 = mul nsw i32 %151, 8, !dbg !4936
  %add179 = add nsw i32 2, %mul178, !dbg !4937
  %idxprom180 = sext i32 %add179 to i64, !dbg !4938
  %152 = load i32*, i32** %block, align 8, !dbg !4938
  %arrayidx181 = getelementptr inbounds i32, i32* %152, i64 %idxprom180, !dbg !4938
  %153 = load i32, i32* %arrayidx181, align 4, !dbg !4938
  %add182 = add i32 %shr177, %153, !dbg !4939
  store i32 %add182, i32* %a6172, align 4, !dbg !4929
  call void @llvm.dbg.declare(metadata i32* %b0183, metadata !4940, metadata !67), !dbg !4941
  %154 = load i32, i32* %a0142, align 4, !dbg !4942
  %155 = load i32, i32* %a6172, align 4, !dbg !4943
  %add184 = add i32 %154, %155, !dbg !4944
  store i32 %add184, i32* %b0183, align 4, !dbg !4941
  call void @llvm.dbg.declare(metadata i32* %b2185, metadata !4945, metadata !67), !dbg !4946
  %156 = load i32, i32* %a2151, align 4, !dbg !4947
  %157 = load i32, i32* %a4161, align 4, !dbg !4948
  %add186 = add i32 %156, %157, !dbg !4949
  store i32 %add186, i32* %b2185, align 4, !dbg !4946
  call void @llvm.dbg.declare(metadata i32* %b4187, metadata !4950, metadata !67), !dbg !4951
  %158 = load i32, i32* %a2151, align 4, !dbg !4952
  %159 = load i32, i32* %a4161, align 4, !dbg !4953
  %sub188 = sub i32 %158, %159, !dbg !4954
  store i32 %sub188, i32* %b4187, align 4, !dbg !4951
  call void @llvm.dbg.declare(metadata i32* %b6189, metadata !4955, metadata !67), !dbg !4956
  %160 = load i32, i32* %a0142, align 4, !dbg !4957
  %161 = load i32, i32* %a6172, align 4, !dbg !4958
  %sub190 = sub i32 %160, %161, !dbg !4959
  store i32 %sub190, i32* %b6189, align 4, !dbg !4956
  call void @llvm.dbg.declare(metadata i32* %a1191, metadata !4960, metadata !67), !dbg !4961
  %162 = load i32, i32* %i, align 4, !dbg !4962
  %mul192 = mul nsw i32 %162, 8, !dbg !4963
  %add193 = add nsw i32 3, %mul192, !dbg !4964
  %idxprom194 = sext i32 %add193 to i64, !dbg !4965
  %163 = load i32*, i32** %block, align 8, !dbg !4965
  %arrayidx195 = getelementptr inbounds i32, i32* %163, i64 %idxprom194, !dbg !4965
  %164 = load i32, i32* %arrayidx195, align 4, !dbg !4965
  %sub196 = sub i32 0, %164, !dbg !4966
  %165 = load i32, i32* %i, align 4, !dbg !4967
  %mul197 = mul nsw i32 %165, 8, !dbg !4968
  %add198 = add nsw i32 5, %mul197, !dbg !4969
  %idxprom199 = sext i32 %add198 to i64, !dbg !4970
  %166 = load i32*, i32** %block, align 8, !dbg !4970
  %arrayidx200 = getelementptr inbounds i32, i32* %166, i64 %idxprom199, !dbg !4970
  %167 = load i32, i32* %arrayidx200, align 4, !dbg !4970
  %add201 = add i32 %sub196, %167, !dbg !4971
  %168 = load i32, i32* %i, align 4, !dbg !4972
  %mul202 = mul nsw i32 %168, 8, !dbg !4973
  %add203 = add nsw i32 7, %mul202, !dbg !4974
  %idxprom204 = sext i32 %add203 to i64, !dbg !4975
  %169 = load i32*, i32** %block, align 8, !dbg !4975
  %arrayidx205 = getelementptr inbounds i32, i32* %169, i64 %idxprom204, !dbg !4975
  %170 = load i32, i32* %arrayidx205, align 4, !dbg !4975
  %sub206 = sub i32 %add201, %170, !dbg !4976
  %171 = load i32, i32* %i, align 4, !dbg !4977
  %mul207 = mul nsw i32 %171, 8, !dbg !4978
  %add208 = add nsw i32 7, %mul207, !dbg !4979
  %idxprom209 = sext i32 %add208 to i64, !dbg !4980
  %172 = load i32*, i32** %block, align 8, !dbg !4980
  %arrayidx210 = getelementptr inbounds i32, i32* %172, i64 %idxprom209, !dbg !4980
  %173 = load i32, i32* %arrayidx210, align 4, !dbg !4980
  %shr211 = ashr i32 %173, 1, !dbg !4981
  %sub212 = sub i32 %sub206, %shr211, !dbg !4982
  store i32 %sub212, i32* %a1191, align 4, !dbg !4961
  call void @llvm.dbg.declare(metadata i32* %a3213, metadata !4983, metadata !67), !dbg !4984
  %174 = load i32, i32* %i, align 4, !dbg !4985
  %mul214 = mul nsw i32 %174, 8, !dbg !4986
  %add215 = add nsw i32 1, %mul214, !dbg !4987
  %idxprom216 = sext i32 %add215 to i64, !dbg !4988
  %175 = load i32*, i32** %block, align 8, !dbg !4988
  %arrayidx217 = getelementptr inbounds i32, i32* %175, i64 %idxprom216, !dbg !4988
  %176 = load i32, i32* %arrayidx217, align 4, !dbg !4988
  %177 = load i32, i32* %i, align 4, !dbg !4989
  %mul218 = mul nsw i32 %177, 8, !dbg !4990
  %add219 = add nsw i32 7, %mul218, !dbg !4991
  %idxprom220 = sext i32 %add219 to i64, !dbg !4992
  %178 = load i32*, i32** %block, align 8, !dbg !4992
  %arrayidx221 = getelementptr inbounds i32, i32* %178, i64 %idxprom220, !dbg !4992
  %179 = load i32, i32* %arrayidx221, align 4, !dbg !4992
  %add222 = add i32 %176, %179, !dbg !4993
  %180 = load i32, i32* %i, align 4, !dbg !4994
  %mul223 = mul nsw i32 %180, 8, !dbg !4995
  %add224 = add nsw i32 3, %mul223, !dbg !4996
  %idxprom225 = sext i32 %add224 to i64, !dbg !4997
  %181 = load i32*, i32** %block, align 8, !dbg !4997
  %arrayidx226 = getelementptr inbounds i32, i32* %181, i64 %idxprom225, !dbg !4997
  %182 = load i32, i32* %arrayidx226, align 4, !dbg !4997
  %sub227 = sub i32 %add222, %182, !dbg !4998
  %183 = load i32, i32* %i, align 4, !dbg !4999
  %mul228 = mul nsw i32 %183, 8, !dbg !5000
  %add229 = add nsw i32 3, %mul228, !dbg !5001
  %idxprom230 = sext i32 %add229 to i64, !dbg !5002
  %184 = load i32*, i32** %block, align 8, !dbg !5002
  %arrayidx231 = getelementptr inbounds i32, i32* %184, i64 %idxprom230, !dbg !5002
  %185 = load i32, i32* %arrayidx231, align 4, !dbg !5002
  %shr232 = ashr i32 %185, 1, !dbg !5003
  %sub233 = sub i32 %sub227, %shr232, !dbg !5004
  store i32 %sub233, i32* %a3213, align 4, !dbg !4984
  call void @llvm.dbg.declare(metadata i32* %a5234, metadata !5005, metadata !67), !dbg !5006
  %186 = load i32, i32* %i, align 4, !dbg !5007
  %mul235 = mul nsw i32 %186, 8, !dbg !5008
  %add236 = add nsw i32 1, %mul235, !dbg !5009
  %idxprom237 = sext i32 %add236 to i64, !dbg !5010
  %187 = load i32*, i32** %block, align 8, !dbg !5010
  %arrayidx238 = getelementptr inbounds i32, i32* %187, i64 %idxprom237, !dbg !5010
  %188 = load i32, i32* %arrayidx238, align 4, !dbg !5010
  %sub239 = sub i32 0, %188, !dbg !5011
  %189 = load i32, i32* %i, align 4, !dbg !5012
  %mul240 = mul nsw i32 %189, 8, !dbg !5013
  %add241 = add nsw i32 7, %mul240, !dbg !5014
  %idxprom242 = sext i32 %add241 to i64, !dbg !5015
  %190 = load i32*, i32** %block, align 8, !dbg !5015
  %arrayidx243 = getelementptr inbounds i32, i32* %190, i64 %idxprom242, !dbg !5015
  %191 = load i32, i32* %arrayidx243, align 4, !dbg !5015
  %add244 = add i32 %sub239, %191, !dbg !5016
  %192 = load i32, i32* %i, align 4, !dbg !5017
  %mul245 = mul nsw i32 %192, 8, !dbg !5018
  %add246 = add nsw i32 5, %mul245, !dbg !5019
  %idxprom247 = sext i32 %add246 to i64, !dbg !5020
  %193 = load i32*, i32** %block, align 8, !dbg !5020
  %arrayidx248 = getelementptr inbounds i32, i32* %193, i64 %idxprom247, !dbg !5020
  %194 = load i32, i32* %arrayidx248, align 4, !dbg !5020
  %add249 = add i32 %add244, %194, !dbg !5021
  %195 = load i32, i32* %i, align 4, !dbg !5022
  %mul250 = mul nsw i32 %195, 8, !dbg !5023
  %add251 = add nsw i32 5, %mul250, !dbg !5024
  %idxprom252 = sext i32 %add251 to i64, !dbg !5025
  %196 = load i32*, i32** %block, align 8, !dbg !5025
  %arrayidx253 = getelementptr inbounds i32, i32* %196, i64 %idxprom252, !dbg !5025
  %197 = load i32, i32* %arrayidx253, align 4, !dbg !5025
  %shr254 = ashr i32 %197, 1, !dbg !5026
  %add255 = add i32 %add249, %shr254, !dbg !5027
  store i32 %add255, i32* %a5234, align 4, !dbg !5006
  call void @llvm.dbg.declare(metadata i32* %a7256, metadata !5028, metadata !67), !dbg !5029
  %198 = load i32, i32* %i, align 4, !dbg !5030
  %mul257 = mul nsw i32 %198, 8, !dbg !5031
  %add258 = add nsw i32 3, %mul257, !dbg !5032
  %idxprom259 = sext i32 %add258 to i64, !dbg !5033
  %199 = load i32*, i32** %block, align 8, !dbg !5033
  %arrayidx260 = getelementptr inbounds i32, i32* %199, i64 %idxprom259, !dbg !5033
  %200 = load i32, i32* %arrayidx260, align 4, !dbg !5033
  %201 = load i32, i32* %i, align 4, !dbg !5034
  %mul261 = mul nsw i32 %201, 8, !dbg !5035
  %add262 = add nsw i32 5, %mul261, !dbg !5036
  %idxprom263 = sext i32 %add262 to i64, !dbg !5037
  %202 = load i32*, i32** %block, align 8, !dbg !5037
  %arrayidx264 = getelementptr inbounds i32, i32* %202, i64 %idxprom263, !dbg !5037
  %203 = load i32, i32* %arrayidx264, align 4, !dbg !5037
  %add265 = add i32 %200, %203, !dbg !5038
  %204 = load i32, i32* %i, align 4, !dbg !5039
  %mul266 = mul nsw i32 %204, 8, !dbg !5040
  %add267 = add nsw i32 1, %mul266, !dbg !5041
  %idxprom268 = sext i32 %add267 to i64, !dbg !5042
  %205 = load i32*, i32** %block, align 8, !dbg !5042
  %arrayidx269 = getelementptr inbounds i32, i32* %205, i64 %idxprom268, !dbg !5042
  %206 = load i32, i32* %arrayidx269, align 4, !dbg !5042
  %add270 = add i32 %add265, %206, !dbg !5043
  %207 = load i32, i32* %i, align 4, !dbg !5044
  %mul271 = mul nsw i32 %207, 8, !dbg !5045
  %add272 = add nsw i32 1, %mul271, !dbg !5046
  %idxprom273 = sext i32 %add272 to i64, !dbg !5047
  %208 = load i32*, i32** %block, align 8, !dbg !5047
  %arrayidx274 = getelementptr inbounds i32, i32* %208, i64 %idxprom273, !dbg !5047
  %209 = load i32, i32* %arrayidx274, align 4, !dbg !5047
  %shr275 = ashr i32 %209, 1, !dbg !5048
  %add276 = add i32 %add270, %shr275, !dbg !5049
  store i32 %add276, i32* %a7256, align 4, !dbg !5029
  call void @llvm.dbg.declare(metadata i32* %b1277, metadata !5050, metadata !67), !dbg !5051
  %210 = load i32, i32* %a7256, align 4, !dbg !5052
  %shr278 = ashr i32 %210, 2, !dbg !5053
  %211 = load i32, i32* %a1191, align 4, !dbg !5054
  %add279 = add i32 %shr278, %211, !dbg !5055
  store i32 %add279, i32* %b1277, align 4, !dbg !5051
  call void @llvm.dbg.declare(metadata i32* %b3280, metadata !5056, metadata !67), !dbg !5057
  %212 = load i32, i32* %a3213, align 4, !dbg !5058
  %213 = load i32, i32* %a5234, align 4, !dbg !5059
  %shr281 = ashr i32 %213, 2, !dbg !5060
  %add282 = add i32 %212, %shr281, !dbg !5061
  store i32 %add282, i32* %b3280, align 4, !dbg !5057
  call void @llvm.dbg.declare(metadata i32* %b5283, metadata !5062, metadata !67), !dbg !5063
  %214 = load i32, i32* %a3213, align 4, !dbg !5064
  %shr284 = ashr i32 %214, 2, !dbg !5065
  %215 = load i32, i32* %a5234, align 4, !dbg !5066
  %sub285 = sub i32 %shr284, %215, !dbg !5067
  store i32 %sub285, i32* %b5283, align 4, !dbg !5063
  call void @llvm.dbg.declare(metadata i32* %b7286, metadata !5068, metadata !67), !dbg !5069
  %216 = load i32, i32* %a7256, align 4, !dbg !5070
  %217 = load i32, i32* %a1191, align 4, !dbg !5071
  %shr287 = ashr i32 %217, 2, !dbg !5072
  %sub288 = sub i32 %216, %shr287, !dbg !5073
  store i32 %sub288, i32* %b7286, align 4, !dbg !5069
  %218 = load i32, i32* %i, align 4, !dbg !5074
  %219 = load i32, i32* %stride.addr, align 4, !dbg !5075
  %mul289 = mul nsw i32 0, %219, !dbg !5076
  %add290 = add nsw i32 %218, %mul289, !dbg !5077
  %idxprom291 = sext i32 %add290 to i64, !dbg !5078
  %220 = load i16*, i16** %dst, align 8, !dbg !5078
  %arrayidx292 = getelementptr inbounds i16, i16* %220, i64 %idxprom291, !dbg !5078
  %221 = load i16, i16* %arrayidx292, align 2, !dbg !5078
  %conv = zext i16 %221 to i32, !dbg !5078
  %222 = load i32, i32* %b0183, align 4, !dbg !5079
  %223 = load i32, i32* %b7286, align 4, !dbg !5080
  %add293 = add i32 %222, %223, !dbg !5081
  %shr294 = ashr i32 %add293, 6, !dbg !5082
  %add295 = add nsw i32 %conv, %shr294, !dbg !5083
  store i32 %add295, i32* %a.addr.i, align 4, !dbg !5084
  store i32 10, i32* %p.addr.i, align 4, !dbg !5084
  %224 = load i32, i32* %a.addr.i, align 4, !dbg !5085
  %225 = load i32, i32* %p.addr.i, align 4, !dbg !5086
  %shl.i = shl i32 1, %225, !dbg !5087
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !5088
  %neg.i = xor i32 %sub.i, -1, !dbg !5089
  %and.i = and i32 %224, %neg.i, !dbg !5090
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !5090
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5091

if.then.i:                                        ; preds = %for.body141
  %226 = load i32, i32* %a.addr.i, align 4, !dbg !5092
  %neg1.i = xor i32 %226, -1, !dbg !5093
  %shr.i = ashr i32 %neg1.i, 31, !dbg !5094
  %227 = load i32, i32* %p.addr.i, align 4, !dbg !5095
  %shl2.i = shl i32 1, %227, !dbg !5096
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !5097
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !5098
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !5099
  br label %av_clip_uintp2_c.exit, !dbg !5099

if.else.i:                                        ; preds = %for.body141
  %228 = load i32, i32* %a.addr.i, align 4, !dbg !5100
  store i32 %228, i32* %retval.i, align 4, !dbg !5101
  br label %av_clip_uintp2_c.exit, !dbg !5101

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %229 = load i32, i32* %retval.i, align 4, !dbg !5102
  %conv296 = trunc i32 %229 to i16, !dbg !5084
  %230 = load i32, i32* %i, align 4, !dbg !5103
  %231 = load i32, i32* %stride.addr, align 4, !dbg !5104
  %mul297 = mul nsw i32 0, %231, !dbg !5105
  %add298 = add nsw i32 %230, %mul297, !dbg !5106
  %idxprom299 = sext i32 %add298 to i64, !dbg !5107
  %232 = load i16*, i16** %dst, align 8, !dbg !5107
  %arrayidx300 = getelementptr inbounds i16, i16* %232, i64 %idxprom299, !dbg !5107
  store i16 %conv296, i16* %arrayidx300, align 2, !dbg !5108
  %233 = load i32, i32* %i, align 4, !dbg !5109
  %234 = load i32, i32* %stride.addr, align 4, !dbg !5110
  %mul301 = mul nsw i32 1, %234, !dbg !5111
  %add302 = add nsw i32 %233, %mul301, !dbg !5112
  %idxprom303 = sext i32 %add302 to i64, !dbg !5113
  %235 = load i16*, i16** %dst, align 8, !dbg !5113
  %arrayidx304 = getelementptr inbounds i16, i16* %235, i64 %idxprom303, !dbg !5113
  %236 = load i16, i16* %arrayidx304, align 2, !dbg !5113
  %conv305 = zext i16 %236 to i32, !dbg !5113
  %237 = load i32, i32* %b2185, align 4, !dbg !5114
  %238 = load i32, i32* %b5283, align 4, !dbg !5115
  %add306 = add i32 %237, %238, !dbg !5116
  %shr307 = ashr i32 %add306, 6, !dbg !5117
  %add308 = add nsw i32 %conv305, %shr307, !dbg !5118
  store i32 %add308, i32* %a.addr.i499, align 4, !dbg !5119
  store i32 10, i32* %p.addr.i500, align 4, !dbg !5119
  %239 = load i32, i32* %a.addr.i499, align 4, !dbg !5120
  %240 = load i32, i32* %p.addr.i500, align 4, !dbg !5121
  %shl.i501 = shl i32 1, %240, !dbg !5122
  %sub.i502 = sub nsw i32 %shl.i501, 1, !dbg !5123
  %neg.i503 = xor i32 %sub.i502, -1, !dbg !5124
  %and.i504 = and i32 %239, %neg.i503, !dbg !5125
  %tobool.i505 = icmp ne i32 %and.i504, 0, !dbg !5125
  br i1 %tobool.i505, label %if.then.i511, label %if.else.i512, !dbg !5126

if.then.i511:                                     ; preds = %av_clip_uintp2_c.exit
  %241 = load i32, i32* %a.addr.i499, align 4, !dbg !5127
  %neg1.i506 = xor i32 %241, -1, !dbg !5128
  %shr.i507 = ashr i32 %neg1.i506, 31, !dbg !5129
  %242 = load i32, i32* %p.addr.i500, align 4, !dbg !5130
  %shl2.i508 = shl i32 1, %242, !dbg !5131
  %sub3.i509 = sub nsw i32 %shl2.i508, 1, !dbg !5132
  %and4.i510 = and i32 %shr.i507, %sub3.i509, !dbg !5133
  store i32 %and4.i510, i32* %retval.i498, align 4, !dbg !5134
  br label %av_clip_uintp2_c.exit513, !dbg !5134

if.else.i512:                                     ; preds = %av_clip_uintp2_c.exit
  %243 = load i32, i32* %a.addr.i499, align 4, !dbg !5135
  store i32 %243, i32* %retval.i498, align 4, !dbg !5136
  br label %av_clip_uintp2_c.exit513, !dbg !5136

av_clip_uintp2_c.exit513:                         ; preds = %if.then.i511, %if.else.i512
  %244 = load i32, i32* %retval.i498, align 4, !dbg !5137
  %conv310 = trunc i32 %244 to i16, !dbg !5119
  %245 = load i32, i32* %i, align 4, !dbg !5138
  %246 = load i32, i32* %stride.addr, align 4, !dbg !5139
  %mul311 = mul nsw i32 1, %246, !dbg !5140
  %add312 = add nsw i32 %245, %mul311, !dbg !5141
  %idxprom313 = sext i32 %add312 to i64, !dbg !5142
  %247 = load i16*, i16** %dst, align 8, !dbg !5142
  %arrayidx314 = getelementptr inbounds i16, i16* %247, i64 %idxprom313, !dbg !5142
  store i16 %conv310, i16* %arrayidx314, align 2, !dbg !5143
  %248 = load i32, i32* %i, align 4, !dbg !5144
  %249 = load i32, i32* %stride.addr, align 4, !dbg !5145
  %mul315 = mul nsw i32 2, %249, !dbg !5146
  %add316 = add nsw i32 %248, %mul315, !dbg !5147
  %idxprom317 = sext i32 %add316 to i64, !dbg !5148
  %250 = load i16*, i16** %dst, align 8, !dbg !5148
  %arrayidx318 = getelementptr inbounds i16, i16* %250, i64 %idxprom317, !dbg !5148
  %251 = load i16, i16* %arrayidx318, align 2, !dbg !5148
  %conv319 = zext i16 %251 to i32, !dbg !5148
  %252 = load i32, i32* %b4187, align 4, !dbg !5149
  %253 = load i32, i32* %b3280, align 4, !dbg !5150
  %add320 = add i32 %252, %253, !dbg !5151
  %shr321 = ashr i32 %add320, 6, !dbg !5152
  %add322 = add nsw i32 %conv319, %shr321, !dbg !5153
  store i32 %add322, i32* %a.addr.i483, align 4, !dbg !5154
  store i32 10, i32* %p.addr.i484, align 4, !dbg !5154
  %254 = load i32, i32* %a.addr.i483, align 4, !dbg !5155
  %255 = load i32, i32* %p.addr.i484, align 4, !dbg !5156
  %shl.i485 = shl i32 1, %255, !dbg !5157
  %sub.i486 = sub nsw i32 %shl.i485, 1, !dbg !5158
  %neg.i487 = xor i32 %sub.i486, -1, !dbg !5159
  %and.i488 = and i32 %254, %neg.i487, !dbg !5160
  %tobool.i489 = icmp ne i32 %and.i488, 0, !dbg !5160
  br i1 %tobool.i489, label %if.then.i495, label %if.else.i496, !dbg !5161

if.then.i495:                                     ; preds = %av_clip_uintp2_c.exit513
  %256 = load i32, i32* %a.addr.i483, align 4, !dbg !5162
  %neg1.i490 = xor i32 %256, -1, !dbg !5163
  %shr.i491 = ashr i32 %neg1.i490, 31, !dbg !5164
  %257 = load i32, i32* %p.addr.i484, align 4, !dbg !5165
  %shl2.i492 = shl i32 1, %257, !dbg !5166
  %sub3.i493 = sub nsw i32 %shl2.i492, 1, !dbg !5167
  %and4.i494 = and i32 %shr.i491, %sub3.i493, !dbg !5168
  store i32 %and4.i494, i32* %retval.i482, align 4, !dbg !5169
  br label %av_clip_uintp2_c.exit497, !dbg !5169

if.else.i496:                                     ; preds = %av_clip_uintp2_c.exit513
  %258 = load i32, i32* %a.addr.i483, align 4, !dbg !5170
  store i32 %258, i32* %retval.i482, align 4, !dbg !5171
  br label %av_clip_uintp2_c.exit497, !dbg !5171

av_clip_uintp2_c.exit497:                         ; preds = %if.then.i495, %if.else.i496
  %259 = load i32, i32* %retval.i482, align 4, !dbg !5172
  %conv324 = trunc i32 %259 to i16, !dbg !5154
  %260 = load i32, i32* %i, align 4, !dbg !5173
  %261 = load i32, i32* %stride.addr, align 4, !dbg !5174
  %mul325 = mul nsw i32 2, %261, !dbg !5175
  %add326 = add nsw i32 %260, %mul325, !dbg !5176
  %idxprom327 = sext i32 %add326 to i64, !dbg !5177
  %262 = load i16*, i16** %dst, align 8, !dbg !5177
  %arrayidx328 = getelementptr inbounds i16, i16* %262, i64 %idxprom327, !dbg !5177
  store i16 %conv324, i16* %arrayidx328, align 2, !dbg !5178
  %263 = load i32, i32* %i, align 4, !dbg !5179
  %264 = load i32, i32* %stride.addr, align 4, !dbg !5180
  %mul329 = mul nsw i32 3, %264, !dbg !5181
  %add330 = add nsw i32 %263, %mul329, !dbg !5182
  %idxprom331 = sext i32 %add330 to i64, !dbg !5183
  %265 = load i16*, i16** %dst, align 8, !dbg !5183
  %arrayidx332 = getelementptr inbounds i16, i16* %265, i64 %idxprom331, !dbg !5183
  %266 = load i16, i16* %arrayidx332, align 2, !dbg !5183
  %conv333 = zext i16 %266 to i32, !dbg !5183
  %267 = load i32, i32* %b6189, align 4, !dbg !5184
  %268 = load i32, i32* %b1277, align 4, !dbg !5185
  %add334 = add i32 %267, %268, !dbg !5186
  %shr335 = ashr i32 %add334, 6, !dbg !5187
  %add336 = add nsw i32 %conv333, %shr335, !dbg !5188
  store i32 %add336, i32* %a.addr.i467, align 4, !dbg !5189
  store i32 10, i32* %p.addr.i468, align 4, !dbg !5189
  %269 = load i32, i32* %a.addr.i467, align 4, !dbg !5190
  %270 = load i32, i32* %p.addr.i468, align 4, !dbg !5191
  %shl.i469 = shl i32 1, %270, !dbg !5192
  %sub.i470 = sub nsw i32 %shl.i469, 1, !dbg !5193
  %neg.i471 = xor i32 %sub.i470, -1, !dbg !5194
  %and.i472 = and i32 %269, %neg.i471, !dbg !5195
  %tobool.i473 = icmp ne i32 %and.i472, 0, !dbg !5195
  br i1 %tobool.i473, label %if.then.i479, label %if.else.i480, !dbg !5196

if.then.i479:                                     ; preds = %av_clip_uintp2_c.exit497
  %271 = load i32, i32* %a.addr.i467, align 4, !dbg !5197
  %neg1.i474 = xor i32 %271, -1, !dbg !5198
  %shr.i475 = ashr i32 %neg1.i474, 31, !dbg !5199
  %272 = load i32, i32* %p.addr.i468, align 4, !dbg !5200
  %shl2.i476 = shl i32 1, %272, !dbg !5201
  %sub3.i477 = sub nsw i32 %shl2.i476, 1, !dbg !5202
  %and4.i478 = and i32 %shr.i475, %sub3.i477, !dbg !5203
  store i32 %and4.i478, i32* %retval.i466, align 4, !dbg !5204
  br label %av_clip_uintp2_c.exit481, !dbg !5204

if.else.i480:                                     ; preds = %av_clip_uintp2_c.exit497
  %273 = load i32, i32* %a.addr.i467, align 4, !dbg !5205
  store i32 %273, i32* %retval.i466, align 4, !dbg !5206
  br label %av_clip_uintp2_c.exit481, !dbg !5206

av_clip_uintp2_c.exit481:                         ; preds = %if.then.i479, %if.else.i480
  %274 = load i32, i32* %retval.i466, align 4, !dbg !5207
  %conv338 = trunc i32 %274 to i16, !dbg !5189
  %275 = load i32, i32* %i, align 4, !dbg !5208
  %276 = load i32, i32* %stride.addr, align 4, !dbg !5209
  %mul339 = mul nsw i32 3, %276, !dbg !5210
  %add340 = add nsw i32 %275, %mul339, !dbg !5211
  %idxprom341 = sext i32 %add340 to i64, !dbg !5212
  %277 = load i16*, i16** %dst, align 8, !dbg !5212
  %arrayidx342 = getelementptr inbounds i16, i16* %277, i64 %idxprom341, !dbg !5212
  store i16 %conv338, i16* %arrayidx342, align 2, !dbg !5213
  %278 = load i32, i32* %i, align 4, !dbg !5214
  %279 = load i32, i32* %stride.addr, align 4, !dbg !5215
  %mul343 = mul nsw i32 4, %279, !dbg !5216
  %add344 = add nsw i32 %278, %mul343, !dbg !5217
  %idxprom345 = sext i32 %add344 to i64, !dbg !5218
  %280 = load i16*, i16** %dst, align 8, !dbg !5218
  %arrayidx346 = getelementptr inbounds i16, i16* %280, i64 %idxprom345, !dbg !5218
  %281 = load i16, i16* %arrayidx346, align 2, !dbg !5218
  %conv347 = zext i16 %281 to i32, !dbg !5218
  %282 = load i32, i32* %b6189, align 4, !dbg !5219
  %283 = load i32, i32* %b1277, align 4, !dbg !5220
  %sub348 = sub i32 %282, %283, !dbg !5221
  %shr349 = ashr i32 %sub348, 6, !dbg !5222
  %add350 = add nsw i32 %conv347, %shr349, !dbg !5223
  store i32 %add350, i32* %a.addr.i451, align 4, !dbg !5224
  store i32 10, i32* %p.addr.i452, align 4, !dbg !5224
  %284 = load i32, i32* %a.addr.i451, align 4, !dbg !5225
  %285 = load i32, i32* %p.addr.i452, align 4, !dbg !5226
  %shl.i453 = shl i32 1, %285, !dbg !5227
  %sub.i454 = sub nsw i32 %shl.i453, 1, !dbg !5228
  %neg.i455 = xor i32 %sub.i454, -1, !dbg !5229
  %and.i456 = and i32 %284, %neg.i455, !dbg !5230
  %tobool.i457 = icmp ne i32 %and.i456, 0, !dbg !5230
  br i1 %tobool.i457, label %if.then.i463, label %if.else.i464, !dbg !5231

if.then.i463:                                     ; preds = %av_clip_uintp2_c.exit481
  %286 = load i32, i32* %a.addr.i451, align 4, !dbg !5232
  %neg1.i458 = xor i32 %286, -1, !dbg !5233
  %shr.i459 = ashr i32 %neg1.i458, 31, !dbg !5234
  %287 = load i32, i32* %p.addr.i452, align 4, !dbg !5235
  %shl2.i460 = shl i32 1, %287, !dbg !5236
  %sub3.i461 = sub nsw i32 %shl2.i460, 1, !dbg !5237
  %and4.i462 = and i32 %shr.i459, %sub3.i461, !dbg !5238
  store i32 %and4.i462, i32* %retval.i450, align 4, !dbg !5239
  br label %av_clip_uintp2_c.exit465, !dbg !5239

if.else.i464:                                     ; preds = %av_clip_uintp2_c.exit481
  %288 = load i32, i32* %a.addr.i451, align 4, !dbg !5240
  store i32 %288, i32* %retval.i450, align 4, !dbg !5241
  br label %av_clip_uintp2_c.exit465, !dbg !5241

av_clip_uintp2_c.exit465:                         ; preds = %if.then.i463, %if.else.i464
  %289 = load i32, i32* %retval.i450, align 4, !dbg !5242
  %conv352 = trunc i32 %289 to i16, !dbg !5224
  %290 = load i32, i32* %i, align 4, !dbg !5243
  %291 = load i32, i32* %stride.addr, align 4, !dbg !5244
  %mul353 = mul nsw i32 4, %291, !dbg !5245
  %add354 = add nsw i32 %290, %mul353, !dbg !5246
  %idxprom355 = sext i32 %add354 to i64, !dbg !5247
  %292 = load i16*, i16** %dst, align 8, !dbg !5247
  %arrayidx356 = getelementptr inbounds i16, i16* %292, i64 %idxprom355, !dbg !5247
  store i16 %conv352, i16* %arrayidx356, align 2, !dbg !5248
  %293 = load i32, i32* %i, align 4, !dbg !5249
  %294 = load i32, i32* %stride.addr, align 4, !dbg !5250
  %mul357 = mul nsw i32 5, %294, !dbg !5251
  %add358 = add nsw i32 %293, %mul357, !dbg !5252
  %idxprom359 = sext i32 %add358 to i64, !dbg !5253
  %295 = load i16*, i16** %dst, align 8, !dbg !5253
  %arrayidx360 = getelementptr inbounds i16, i16* %295, i64 %idxprom359, !dbg !5253
  %296 = load i16, i16* %arrayidx360, align 2, !dbg !5253
  %conv361 = zext i16 %296 to i32, !dbg !5253
  %297 = load i32, i32* %b4187, align 4, !dbg !5254
  %298 = load i32, i32* %b3280, align 4, !dbg !5255
  %sub362 = sub i32 %297, %298, !dbg !5256
  %shr363 = ashr i32 %sub362, 6, !dbg !5257
  %add364 = add nsw i32 %conv361, %shr363, !dbg !5258
  store i32 %add364, i32* %a.addr.i435, align 4, !dbg !5259
  store i32 10, i32* %p.addr.i436, align 4, !dbg !5259
  %299 = load i32, i32* %a.addr.i435, align 4, !dbg !5260
  %300 = load i32, i32* %p.addr.i436, align 4, !dbg !5261
  %shl.i437 = shl i32 1, %300, !dbg !5262
  %sub.i438 = sub nsw i32 %shl.i437, 1, !dbg !5263
  %neg.i439 = xor i32 %sub.i438, -1, !dbg !5264
  %and.i440 = and i32 %299, %neg.i439, !dbg !5265
  %tobool.i441 = icmp ne i32 %and.i440, 0, !dbg !5265
  br i1 %tobool.i441, label %if.then.i447, label %if.else.i448, !dbg !5266

if.then.i447:                                     ; preds = %av_clip_uintp2_c.exit465
  %301 = load i32, i32* %a.addr.i435, align 4, !dbg !5267
  %neg1.i442 = xor i32 %301, -1, !dbg !5268
  %shr.i443 = ashr i32 %neg1.i442, 31, !dbg !5269
  %302 = load i32, i32* %p.addr.i436, align 4, !dbg !5270
  %shl2.i444 = shl i32 1, %302, !dbg !5271
  %sub3.i445 = sub nsw i32 %shl2.i444, 1, !dbg !5272
  %and4.i446 = and i32 %shr.i443, %sub3.i445, !dbg !5273
  store i32 %and4.i446, i32* %retval.i434, align 4, !dbg !5274
  br label %av_clip_uintp2_c.exit449, !dbg !5274

if.else.i448:                                     ; preds = %av_clip_uintp2_c.exit465
  %303 = load i32, i32* %a.addr.i435, align 4, !dbg !5275
  store i32 %303, i32* %retval.i434, align 4, !dbg !5276
  br label %av_clip_uintp2_c.exit449, !dbg !5276

av_clip_uintp2_c.exit449:                         ; preds = %if.then.i447, %if.else.i448
  %304 = load i32, i32* %retval.i434, align 4, !dbg !5277
  %conv366 = trunc i32 %304 to i16, !dbg !5259
  %305 = load i32, i32* %i, align 4, !dbg !5278
  %306 = load i32, i32* %stride.addr, align 4, !dbg !5279
  %mul367 = mul nsw i32 5, %306, !dbg !5280
  %add368 = add nsw i32 %305, %mul367, !dbg !5281
  %idxprom369 = sext i32 %add368 to i64, !dbg !5282
  %307 = load i16*, i16** %dst, align 8, !dbg !5282
  %arrayidx370 = getelementptr inbounds i16, i16* %307, i64 %idxprom369, !dbg !5282
  store i16 %conv366, i16* %arrayidx370, align 2, !dbg !5283
  %308 = load i32, i32* %i, align 4, !dbg !5284
  %309 = load i32, i32* %stride.addr, align 4, !dbg !5285
  %mul371 = mul nsw i32 6, %309, !dbg !5286
  %add372 = add nsw i32 %308, %mul371, !dbg !5287
  %idxprom373 = sext i32 %add372 to i64, !dbg !5288
  %310 = load i16*, i16** %dst, align 8, !dbg !5288
  %arrayidx374 = getelementptr inbounds i16, i16* %310, i64 %idxprom373, !dbg !5288
  %311 = load i16, i16* %arrayidx374, align 2, !dbg !5288
  %conv375 = zext i16 %311 to i32, !dbg !5288
  %312 = load i32, i32* %b2185, align 4, !dbg !5289
  %313 = load i32, i32* %b5283, align 4, !dbg !5290
  %sub376 = sub i32 %312, %313, !dbg !5291
  %shr377 = ashr i32 %sub376, 6, !dbg !5292
  %add378 = add nsw i32 %conv375, %shr377, !dbg !5293
  store i32 %add378, i32* %a.addr.i419, align 4, !dbg !5294
  store i32 10, i32* %p.addr.i420, align 4, !dbg !5294
  %314 = load i32, i32* %a.addr.i419, align 4, !dbg !5295
  %315 = load i32, i32* %p.addr.i420, align 4, !dbg !5296
  %shl.i421 = shl i32 1, %315, !dbg !5297
  %sub.i422 = sub nsw i32 %shl.i421, 1, !dbg !5298
  %neg.i423 = xor i32 %sub.i422, -1, !dbg !5299
  %and.i424 = and i32 %314, %neg.i423, !dbg !5300
  %tobool.i425 = icmp ne i32 %and.i424, 0, !dbg !5300
  br i1 %tobool.i425, label %if.then.i431, label %if.else.i432, !dbg !5301

if.then.i431:                                     ; preds = %av_clip_uintp2_c.exit449
  %316 = load i32, i32* %a.addr.i419, align 4, !dbg !5302
  %neg1.i426 = xor i32 %316, -1, !dbg !5303
  %shr.i427 = ashr i32 %neg1.i426, 31, !dbg !5304
  %317 = load i32, i32* %p.addr.i420, align 4, !dbg !5305
  %shl2.i428 = shl i32 1, %317, !dbg !5306
  %sub3.i429 = sub nsw i32 %shl2.i428, 1, !dbg !5307
  %and4.i430 = and i32 %shr.i427, %sub3.i429, !dbg !5308
  store i32 %and4.i430, i32* %retval.i418, align 4, !dbg !5309
  br label %av_clip_uintp2_c.exit433, !dbg !5309

if.else.i432:                                     ; preds = %av_clip_uintp2_c.exit449
  %318 = load i32, i32* %a.addr.i419, align 4, !dbg !5310
  store i32 %318, i32* %retval.i418, align 4, !dbg !5311
  br label %av_clip_uintp2_c.exit433, !dbg !5311

av_clip_uintp2_c.exit433:                         ; preds = %if.then.i431, %if.else.i432
  %319 = load i32, i32* %retval.i418, align 4, !dbg !5312
  %conv380 = trunc i32 %319 to i16, !dbg !5294
  %320 = load i32, i32* %i, align 4, !dbg !5313
  %321 = load i32, i32* %stride.addr, align 4, !dbg !5314
  %mul381 = mul nsw i32 6, %321, !dbg !5315
  %add382 = add nsw i32 %320, %mul381, !dbg !5316
  %idxprom383 = sext i32 %add382 to i64, !dbg !5317
  %322 = load i16*, i16** %dst, align 8, !dbg !5317
  %arrayidx384 = getelementptr inbounds i16, i16* %322, i64 %idxprom383, !dbg !5317
  store i16 %conv380, i16* %arrayidx384, align 2, !dbg !5318
  %323 = load i32, i32* %i, align 4, !dbg !5319
  %324 = load i32, i32* %stride.addr, align 4, !dbg !5320
  %mul385 = mul nsw i32 7, %324, !dbg !5321
  %add386 = add nsw i32 %323, %mul385, !dbg !5322
  %idxprom387 = sext i32 %add386 to i64, !dbg !5323
  %325 = load i16*, i16** %dst, align 8, !dbg !5323
  %arrayidx388 = getelementptr inbounds i16, i16* %325, i64 %idxprom387, !dbg !5323
  %326 = load i16, i16* %arrayidx388, align 2, !dbg !5323
  %conv389 = zext i16 %326 to i32, !dbg !5323
  %327 = load i32, i32* %b0183, align 4, !dbg !5324
  %328 = load i32, i32* %b7286, align 4, !dbg !5325
  %sub390 = sub i32 %327, %328, !dbg !5326
  %shr391 = ashr i32 %sub390, 6, !dbg !5327
  %add392 = add nsw i32 %conv389, %shr391, !dbg !5328
  store i32 %add392, i32* %a.addr.i403, align 4, !dbg !5329
  store i32 10, i32* %p.addr.i404, align 4, !dbg !5329
  %329 = load i32, i32* %a.addr.i403, align 4, !dbg !5330
  %330 = load i32, i32* %p.addr.i404, align 4, !dbg !5331
  %shl.i405 = shl i32 1, %330, !dbg !5332
  %sub.i406 = sub nsw i32 %shl.i405, 1, !dbg !5333
  %neg.i407 = xor i32 %sub.i406, -1, !dbg !5334
  %and.i408 = and i32 %329, %neg.i407, !dbg !5335
  %tobool.i409 = icmp ne i32 %and.i408, 0, !dbg !5335
  br i1 %tobool.i409, label %if.then.i415, label %if.else.i416, !dbg !5336

if.then.i415:                                     ; preds = %av_clip_uintp2_c.exit433
  %331 = load i32, i32* %a.addr.i403, align 4, !dbg !5337
  %neg1.i410 = xor i32 %331, -1, !dbg !5338
  %shr.i411 = ashr i32 %neg1.i410, 31, !dbg !5339
  %332 = load i32, i32* %p.addr.i404, align 4, !dbg !5340
  %shl2.i412 = shl i32 1, %332, !dbg !5341
  %sub3.i413 = sub nsw i32 %shl2.i412, 1, !dbg !5342
  %and4.i414 = and i32 %shr.i411, %sub3.i413, !dbg !5343
  store i32 %and4.i414, i32* %retval.i402, align 4, !dbg !5344
  br label %av_clip_uintp2_c.exit417, !dbg !5344

if.else.i416:                                     ; preds = %av_clip_uintp2_c.exit433
  %333 = load i32, i32* %a.addr.i403, align 4, !dbg !5345
  store i32 %333, i32* %retval.i402, align 4, !dbg !5346
  br label %av_clip_uintp2_c.exit417, !dbg !5346

av_clip_uintp2_c.exit417:                         ; preds = %if.then.i415, %if.else.i416
  %334 = load i32, i32* %retval.i402, align 4, !dbg !5347
  %conv394 = trunc i32 %334 to i16, !dbg !5329
  %335 = load i32, i32* %i, align 4, !dbg !5348
  %336 = load i32, i32* %stride.addr, align 4, !dbg !5349
  %mul395 = mul nsw i32 7, %336, !dbg !5350
  %add396 = add nsw i32 %335, %mul395, !dbg !5351
  %idxprom397 = sext i32 %add396 to i64, !dbg !5352
  %337 = load i16*, i16** %dst, align 8, !dbg !5352
  %arrayidx398 = getelementptr inbounds i16, i16* %337, i64 %idxprom397, !dbg !5352
  store i16 %conv394, i16* %arrayidx398, align 2, !dbg !5353
  br label %for.inc399, !dbg !5354

for.inc399:                                       ; preds = %av_clip_uintp2_c.exit417
  %338 = load i32, i32* %i, align 4, !dbg !5355
  %inc400 = add nsw i32 %338, 1, !dbg !5355
  store i32 %inc400, i32* %i, align 4, !dbg !5355
  br label %for.cond139, !dbg !5357, !llvm.loop !5358

for.end401:                                       ; preds = %for.cond139
  %339 = load i32*, i32** %block, align 8, !dbg !5360
  %340 = bitcast i32* %339 to i8*, !dbg !5361
  call void @llvm.memset.p0i8.i64(i8* %340, i8 0, i64 256, i32 4, i1 false), !dbg !5361
  ret void, !dbg !5362
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_dc_add_10_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !5363 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !5364
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !5371
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %dc = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !5372, metadata !67), !dbg !5373
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !5374, metadata !67), !dbg !5375
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5376, metadata !67), !dbg !5377
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5378, metadata !67), !dbg !5379
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5380, metadata !67), !dbg !5381
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !5382, metadata !67), !dbg !5383
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !5384
  %1 = bitcast i8* %0 to i16*, !dbg !5385
  store i16* %1, i16** %dst, align 8, !dbg !5383
  call void @llvm.dbg.declare(metadata i32** %block, metadata !5386, metadata !67), !dbg !5387
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !5388
  %3 = bitcast i16* %2 to i32*, !dbg !5389
  store i32* %3, i32** %block, align 8, !dbg !5387
  call void @llvm.dbg.declare(metadata i32* %dc, metadata !5390, metadata !67), !dbg !5391
  %4 = load i32*, i32** %block, align 8, !dbg !5392
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 0, !dbg !5392
  %5 = load i32, i32* %arrayidx, align 4, !dbg !5392
  %add = add nsw i32 %5, 32, !dbg !5393
  %shr = ashr i32 %add, 6, !dbg !5394
  store i32 %shr, i32* %dc, align 4, !dbg !5391
  %6 = load i32, i32* %stride.addr, align 4, !dbg !5395
  %conv = sext i32 %6 to i64, !dbg !5395
  %div = udiv i64 %conv, 2, !dbg !5395
  %conv1 = trunc i64 %div to i32, !dbg !5395
  store i32 %conv1, i32* %stride.addr, align 4, !dbg !5395
  %7 = load i32*, i32** %block, align 8, !dbg !5396
  %arrayidx2 = getelementptr inbounds i32, i32* %7, i64 0, !dbg !5396
  store i32 0, i32* %arrayidx2, align 4, !dbg !5397
  store i32 0, i32* %j, align 4, !dbg !5398
  br label %for.cond, !dbg !5399

for.cond:                                         ; preds = %for.inc14, %entry
  %8 = load i32, i32* %j, align 4, !dbg !5400
  %cmp = icmp slt i32 %8, 4, !dbg !5402
  br i1 %cmp, label %for.body, label %for.end16, !dbg !5403

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5404
  br label %for.cond4, !dbg !5405

for.cond4:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !5406
  %cmp5 = icmp slt i32 %9, 4, !dbg !5408
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !5409

for.body7:                                        ; preds = %for.cond4
  %10 = load i32, i32* %i, align 4, !dbg !5410
  %idxprom = sext i32 %10 to i64, !dbg !5411
  %11 = load i16*, i16** %dst, align 8, !dbg !5411
  %arrayidx8 = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !5411
  %12 = load i16, i16* %arrayidx8, align 2, !dbg !5411
  %conv9 = zext i16 %12 to i32, !dbg !5411
  %13 = load i32, i32* %dc, align 4, !dbg !5412
  %add10 = add nsw i32 %conv9, %13, !dbg !5413
  store i32 %add10, i32* %a.addr.i, align 4, !dbg !5414
  store i32 10, i32* %p.addr.i, align 4, !dbg !5414
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !5415
  %15 = load i32, i32* %p.addr.i, align 4, !dbg !5416
  %shl.i = shl i32 1, %15, !dbg !5417
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !5418
  %neg.i = xor i32 %sub.i, -1, !dbg !5419
  %and.i = and i32 %14, %neg.i, !dbg !5420
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !5420
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5421

if.then.i:                                        ; preds = %for.body7
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !5422
  %neg1.i = xor i32 %16, -1, !dbg !5423
  %shr.i = ashr i32 %neg1.i, 31, !dbg !5424
  %17 = load i32, i32* %p.addr.i, align 4, !dbg !5425
  %shl2.i = shl i32 1, %17, !dbg !5426
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !5427
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !5428
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !5429
  br label %av_clip_uintp2_c.exit, !dbg !5429

if.else.i:                                        ; preds = %for.body7
  %18 = load i32, i32* %a.addr.i, align 4, !dbg !5430
  store i32 %18, i32* %retval.i, align 4, !dbg !5431
  br label %av_clip_uintp2_c.exit, !dbg !5431

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %19 = load i32, i32* %retval.i, align 4, !dbg !5432
  %conv11 = trunc i32 %19 to i16, !dbg !5414
  %20 = load i32, i32* %i, align 4, !dbg !5433
  %idxprom12 = sext i32 %20 to i64, !dbg !5434
  %21 = load i16*, i16** %dst, align 8, !dbg !5434
  %arrayidx13 = getelementptr inbounds i16, i16* %21, i64 %idxprom12, !dbg !5434
  store i16 %conv11, i16* %arrayidx13, align 2, !dbg !5435
  br label %for.inc, !dbg !5434

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %22 = load i32, i32* %i, align 4, !dbg !5436
  %inc = add nsw i32 %22, 1, !dbg !5436
  store i32 %inc, i32* %i, align 4, !dbg !5436
  br label %for.cond4, !dbg !5438, !llvm.loop !5439

for.end:                                          ; preds = %for.cond4
  %23 = load i32, i32* %stride.addr, align 4, !dbg !5441
  %24 = load i16*, i16** %dst, align 8, !dbg !5442
  %idx.ext = sext i32 %23 to i64, !dbg !5442
  %add.ptr = getelementptr inbounds i16, i16* %24, i64 %idx.ext, !dbg !5442
  store i16* %add.ptr, i16** %dst, align 8, !dbg !5442
  br label %for.inc14, !dbg !5443

for.inc14:                                        ; preds = %for.end
  %25 = load i32, i32* %j, align 4, !dbg !5444
  %inc15 = add nsw i32 %25, 1, !dbg !5444
  store i32 %inc15, i32* %j, align 4, !dbg !5444
  br label %for.cond, !dbg !5446, !llvm.loop !5447

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !5449
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_dc_add_10_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !5450 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !5451
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !5458
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %dc = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !5459, metadata !67), !dbg !5460
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !5461, metadata !67), !dbg !5462
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5463, metadata !67), !dbg !5464
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5465, metadata !67), !dbg !5466
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5467, metadata !67), !dbg !5468
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !5469, metadata !67), !dbg !5470
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !5471
  %1 = bitcast i8* %0 to i16*, !dbg !5472
  store i16* %1, i16** %dst, align 8, !dbg !5470
  call void @llvm.dbg.declare(metadata i32** %block, metadata !5473, metadata !67), !dbg !5474
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !5475
  %3 = bitcast i16* %2 to i32*, !dbg !5476
  store i32* %3, i32** %block, align 8, !dbg !5474
  call void @llvm.dbg.declare(metadata i32* %dc, metadata !5477, metadata !67), !dbg !5478
  %4 = load i32*, i32** %block, align 8, !dbg !5479
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 0, !dbg !5479
  %5 = load i32, i32* %arrayidx, align 4, !dbg !5479
  %add = add nsw i32 %5, 32, !dbg !5480
  %shr = ashr i32 %add, 6, !dbg !5481
  store i32 %shr, i32* %dc, align 4, !dbg !5478
  %6 = load i32*, i32** %block, align 8, !dbg !5482
  %arrayidx1 = getelementptr inbounds i32, i32* %6, i64 0, !dbg !5482
  store i32 0, i32* %arrayidx1, align 4, !dbg !5483
  %7 = load i32, i32* %stride.addr, align 4, !dbg !5484
  %conv = sext i32 %7 to i64, !dbg !5484
  %div = udiv i64 %conv, 2, !dbg !5484
  %conv2 = trunc i64 %div to i32, !dbg !5484
  store i32 %conv2, i32* %stride.addr, align 4, !dbg !5484
  store i32 0, i32* %j, align 4, !dbg !5485
  br label %for.cond, !dbg !5486

for.cond:                                         ; preds = %for.inc14, %entry
  %8 = load i32, i32* %j, align 4, !dbg !5487
  %cmp = icmp slt i32 %8, 8, !dbg !5489
  br i1 %cmp, label %for.body, label %for.end16, !dbg !5490

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5491
  br label %for.cond4, !dbg !5492

for.cond4:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !5493
  %cmp5 = icmp slt i32 %9, 8, !dbg !5495
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !5496

for.body7:                                        ; preds = %for.cond4
  %10 = load i32, i32* %i, align 4, !dbg !5497
  %idxprom = sext i32 %10 to i64, !dbg !5498
  %11 = load i16*, i16** %dst, align 8, !dbg !5498
  %arrayidx8 = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !5498
  %12 = load i16, i16* %arrayidx8, align 2, !dbg !5498
  %conv9 = zext i16 %12 to i32, !dbg !5498
  %13 = load i32, i32* %dc, align 4, !dbg !5499
  %add10 = add nsw i32 %conv9, %13, !dbg !5500
  store i32 %add10, i32* %a.addr.i, align 4, !dbg !5501
  store i32 10, i32* %p.addr.i, align 4, !dbg !5501
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !5502
  %15 = load i32, i32* %p.addr.i, align 4, !dbg !5503
  %shl.i = shl i32 1, %15, !dbg !5504
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !5505
  %neg.i = xor i32 %sub.i, -1, !dbg !5506
  %and.i = and i32 %14, %neg.i, !dbg !5507
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !5507
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5508

if.then.i:                                        ; preds = %for.body7
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !5509
  %neg1.i = xor i32 %16, -1, !dbg !5510
  %shr.i = ashr i32 %neg1.i, 31, !dbg !5511
  %17 = load i32, i32* %p.addr.i, align 4, !dbg !5512
  %shl2.i = shl i32 1, %17, !dbg !5513
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !5514
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !5515
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !5516
  br label %av_clip_uintp2_c.exit, !dbg !5516

if.else.i:                                        ; preds = %for.body7
  %18 = load i32, i32* %a.addr.i, align 4, !dbg !5517
  store i32 %18, i32* %retval.i, align 4, !dbg !5518
  br label %av_clip_uintp2_c.exit, !dbg !5518

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %19 = load i32, i32* %retval.i, align 4, !dbg !5519
  %conv11 = trunc i32 %19 to i16, !dbg !5501
  %20 = load i32, i32* %i, align 4, !dbg !5520
  %idxprom12 = sext i32 %20 to i64, !dbg !5521
  %21 = load i16*, i16** %dst, align 8, !dbg !5521
  %arrayidx13 = getelementptr inbounds i16, i16* %21, i64 %idxprom12, !dbg !5521
  store i16 %conv11, i16* %arrayidx13, align 2, !dbg !5522
  br label %for.inc, !dbg !5521

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %22 = load i32, i32* %i, align 4, !dbg !5523
  %inc = add nsw i32 %22, 1, !dbg !5523
  store i32 %inc, i32* %i, align 4, !dbg !5523
  br label %for.cond4, !dbg !5525, !llvm.loop !5526

for.end:                                          ; preds = %for.cond4
  %23 = load i32, i32* %stride.addr, align 4, !dbg !5528
  %24 = load i16*, i16** %dst, align 8, !dbg !5529
  %idx.ext = sext i32 %23 to i64, !dbg !5529
  %add.ptr = getelementptr inbounds i16, i16* %24, i64 %idx.ext, !dbg !5529
  store i16* %add.ptr, i16** %dst, align 8, !dbg !5529
  br label %for.inc14, !dbg !5530

for.inc14:                                        ; preds = %for.end
  %25 = load i32, i32* %j, align 4, !dbg !5531
  %inc15 = add nsw i32 %25, 1, !dbg !5531
  store i32 %inc15, i32* %j, align 4, !dbg !5531
  br label %for.cond, !dbg !5533, !llvm.loop !5534

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !5536
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add16_10_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !5537 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %nnz = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !5538, metadata !67), !dbg !5539
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !5540, metadata !67), !dbg !5541
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !5542, metadata !67), !dbg !5543
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5544, metadata !67), !dbg !5545
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !5546, metadata !67), !dbg !5547
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5548, metadata !67), !dbg !5549
  store i32 0, i32* %i, align 4, !dbg !5550
  br label %for.cond, !dbg !5552

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5553
  %cmp = icmp slt i32 %0, 16, !dbg !5556
  br i1 %cmp, label %for.body, label %for.end, !dbg !5557

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %nnz, metadata !5558, metadata !67), !dbg !5560
  %1 = load i32, i32* %i, align 4, !dbg !5561
  %idxprom = sext i32 %1 to i64, !dbg !5562
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !5562
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5562
  %idxprom1 = zext i8 %2 to i64, !dbg !5563
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !5563
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !5563
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !5563
  %conv = zext i8 %4 to i32, !dbg !5563
  store i32 %conv, i32* %nnz, align 4, !dbg !5560
  %5 = load i32, i32* %nnz, align 4, !dbg !5564
  %tobool = icmp ne i32 %5, 0, !dbg !5564
  br i1 %tobool, label %if.then, label %if.end23, !dbg !5566

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %nnz, align 4, !dbg !5567
  %cmp3 = icmp eq i32 %6, 1, !dbg !5570
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !5571

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %i, align 4, !dbg !5572
  %mul = mul nsw i32 %7, 16, !dbg !5574
  %idxprom5 = sext i32 %mul to i64, !dbg !5575
  %8 = load i16*, i16** %block.addr, align 8, !dbg !5576
  %9 = bitcast i16* %8 to i32*, !dbg !5575
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i64 %idxprom5, !dbg !5575
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !5575
  %tobool7 = icmp ne i32 %10, 0, !dbg !5575
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !5577

if.then8:                                         ; preds = %land.lhs.true
  %11 = load i8*, i8** %dst.addr, align 8, !dbg !5578
  %12 = load i32, i32* %i, align 4, !dbg !5580
  %idxprom9 = sext i32 %12 to i64, !dbg !5581
  %13 = load i32*, i32** %block_offset.addr, align 8, !dbg !5581
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 %idxprom9, !dbg !5581
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !5581
  %idx.ext = sext i32 %14 to i64, !dbg !5582
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !5582
  %15 = load i16*, i16** %block.addr, align 8, !dbg !5583
  %16 = load i32, i32* %i, align 4, !dbg !5584
  %mul11 = mul nsw i32 %16, 16, !dbg !5585
  %conv12 = sext i32 %mul11 to i64, !dbg !5584
  %mul13 = mul i64 %conv12, 2, !dbg !5586
  %add.ptr14 = getelementptr inbounds i16, i16* %15, i64 %mul13, !dbg !5587
  %17 = load i32, i32* %stride.addr, align 4, !dbg !5588
  call void @ff_h264_idct_dc_add_10_c(i8* %add.ptr, i16* %add.ptr14, i32 %17), !dbg !5589
  br label %if.end, !dbg !5589

if.else:                                          ; preds = %land.lhs.true, %if.then
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !5590
  %19 = load i32, i32* %i, align 4, !dbg !5591
  %idxprom15 = sext i32 %19 to i64, !dbg !5592
  %20 = load i32*, i32** %block_offset.addr, align 8, !dbg !5592
  %arrayidx16 = getelementptr inbounds i32, i32* %20, i64 %idxprom15, !dbg !5592
  %21 = load i32, i32* %arrayidx16, align 4, !dbg !5592
  %idx.ext17 = sext i32 %21 to i64, !dbg !5593
  %add.ptr18 = getelementptr inbounds i8, i8* %18, i64 %idx.ext17, !dbg !5593
  %22 = load i16*, i16** %block.addr, align 8, !dbg !5594
  %23 = load i32, i32* %i, align 4, !dbg !5595
  %mul19 = mul nsw i32 %23, 16, !dbg !5596
  %conv20 = sext i32 %mul19 to i64, !dbg !5595
  %mul21 = mul i64 %conv20, 2, !dbg !5597
  %add.ptr22 = getelementptr inbounds i16, i16* %22, i64 %mul21, !dbg !5598
  %24 = load i32, i32* %stride.addr, align 4, !dbg !5599
  call void @ff_h264_idct_add_10_c(i8* %add.ptr18, i16* %add.ptr22, i32 %24), !dbg !5600
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end23, !dbg !5601

if.end23:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !5602

for.inc:                                          ; preds = %if.end23
  %25 = load i32, i32* %i, align 4, !dbg !5603
  %inc = add nsw i32 %25, 1, !dbg !5603
  store i32 %inc, i32* %i, align 4, !dbg !5603
  br label %for.cond, !dbg !5605, !llvm.loop !5606

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5608
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add16intra_10_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !5609 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !5610, metadata !67), !dbg !5611
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !5612, metadata !67), !dbg !5613
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !5614, metadata !67), !dbg !5615
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5616, metadata !67), !dbg !5617
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !5618, metadata !67), !dbg !5619
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5620, metadata !67), !dbg !5621
  store i32 0, i32* %i, align 4, !dbg !5622
  br label %for.cond, !dbg !5624

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5625
  %cmp = icmp slt i32 %0, 16, !dbg !5628
  br i1 %cmp, label %for.body, label %for.end, !dbg !5629

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !5630
  %idxprom = sext i32 %1 to i64, !dbg !5633
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !5633
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5633
  %idxprom1 = zext i8 %2 to i64, !dbg !5634
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !5634
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !5634
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !5634
  %tobool = icmp ne i8 %4, 0, !dbg !5634
  br i1 %tobool, label %if.then, label %if.else, !dbg !5635

if.then:                                          ; preds = %for.body
  %5 = load i8*, i8** %dst.addr, align 8, !dbg !5636
  %6 = load i32, i32* %i, align 4, !dbg !5638
  %idxprom3 = sext i32 %6 to i64, !dbg !5639
  %7 = load i32*, i32** %block_offset.addr, align 8, !dbg !5639
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 %idxprom3, !dbg !5639
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !5639
  %idx.ext = sext i32 %8 to i64, !dbg !5640
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !5640
  %9 = load i16*, i16** %block.addr, align 8, !dbg !5641
  %10 = load i32, i32* %i, align 4, !dbg !5642
  %mul = mul nsw i32 %10, 16, !dbg !5643
  %conv = sext i32 %mul to i64, !dbg !5642
  %mul5 = mul i64 %conv, 2, !dbg !5644
  %add.ptr6 = getelementptr inbounds i16, i16* %9, i64 %mul5, !dbg !5645
  %11 = load i32, i32* %stride.addr, align 4, !dbg !5646
  call void @ff_h264_idct_add_10_c(i8* %add.ptr, i16* %add.ptr6, i32 %11), !dbg !5647
  br label %if.end20, !dbg !5647

if.else:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !5648
  %mul7 = mul nsw i32 %12, 16, !dbg !5650
  %idxprom8 = sext i32 %mul7 to i64, !dbg !5651
  %13 = load i16*, i16** %block.addr, align 8, !dbg !5652
  %14 = bitcast i16* %13 to i32*, !dbg !5651
  %arrayidx9 = getelementptr inbounds i32, i32* %14, i64 %idxprom8, !dbg !5651
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !5651
  %tobool10 = icmp ne i32 %15, 0, !dbg !5651
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !5653

if.then11:                                        ; preds = %if.else
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !5654
  %17 = load i32, i32* %i, align 4, !dbg !5656
  %idxprom12 = sext i32 %17 to i64, !dbg !5657
  %18 = load i32*, i32** %block_offset.addr, align 8, !dbg !5657
  %arrayidx13 = getelementptr inbounds i32, i32* %18, i64 %idxprom12, !dbg !5657
  %19 = load i32, i32* %arrayidx13, align 4, !dbg !5657
  %idx.ext14 = sext i32 %19 to i64, !dbg !5658
  %add.ptr15 = getelementptr inbounds i8, i8* %16, i64 %idx.ext14, !dbg !5658
  %20 = load i16*, i16** %block.addr, align 8, !dbg !5659
  %21 = load i32, i32* %i, align 4, !dbg !5660
  %mul16 = mul nsw i32 %21, 16, !dbg !5661
  %conv17 = sext i32 %mul16 to i64, !dbg !5660
  %mul18 = mul i64 %conv17, 2, !dbg !5662
  %add.ptr19 = getelementptr inbounds i16, i16* %20, i64 %mul18, !dbg !5663
  %22 = load i32, i32* %stride.addr, align 4, !dbg !5664
  call void @ff_h264_idct_dc_add_10_c(i8* %add.ptr15, i16* %add.ptr19, i32 %22), !dbg !5665
  br label %if.end, !dbg !5665

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !5666

for.inc:                                          ; preds = %if.end20
  %23 = load i32, i32* %i, align 4, !dbg !5667
  %inc = add nsw i32 %23, 1, !dbg !5667
  store i32 %inc, i32* %i, align 4, !dbg !5667
  br label %for.cond, !dbg !5669, !llvm.loop !5670

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5672
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_add4_10_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !5673 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %nnz = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !5674, metadata !67), !dbg !5675
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !5676, metadata !67), !dbg !5677
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !5678, metadata !67), !dbg !5679
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5680, metadata !67), !dbg !5681
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !5682, metadata !67), !dbg !5683
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5684, metadata !67), !dbg !5685
  store i32 0, i32* %i, align 4, !dbg !5686
  br label %for.cond, !dbg !5688

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5689
  %cmp = icmp slt i32 %0, 16, !dbg !5692
  br i1 %cmp, label %for.body, label %for.end, !dbg !5693

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %nnz, metadata !5694, metadata !67), !dbg !5696
  %1 = load i32, i32* %i, align 4, !dbg !5697
  %idxprom = sext i32 %1 to i64, !dbg !5698
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !5698
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5698
  %idxprom1 = zext i8 %2 to i64, !dbg !5699
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !5699
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !5699
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !5699
  %conv = zext i8 %4 to i32, !dbg !5699
  store i32 %conv, i32* %nnz, align 4, !dbg !5696
  %5 = load i32, i32* %nnz, align 4, !dbg !5700
  %tobool = icmp ne i32 %5, 0, !dbg !5700
  br i1 %tobool, label %if.then, label %if.end23, !dbg !5702

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %nnz, align 4, !dbg !5703
  %cmp3 = icmp eq i32 %6, 1, !dbg !5706
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !5707

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %i, align 4, !dbg !5708
  %mul = mul nsw i32 %7, 16, !dbg !5710
  %idxprom5 = sext i32 %mul to i64, !dbg !5711
  %8 = load i16*, i16** %block.addr, align 8, !dbg !5712
  %9 = bitcast i16* %8 to i32*, !dbg !5711
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i64 %idxprom5, !dbg !5711
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !5711
  %tobool7 = icmp ne i32 %10, 0, !dbg !5711
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !5713

if.then8:                                         ; preds = %land.lhs.true
  %11 = load i8*, i8** %dst.addr, align 8, !dbg !5714
  %12 = load i32, i32* %i, align 4, !dbg !5716
  %idxprom9 = sext i32 %12 to i64, !dbg !5717
  %13 = load i32*, i32** %block_offset.addr, align 8, !dbg !5717
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 %idxprom9, !dbg !5717
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !5717
  %idx.ext = sext i32 %14 to i64, !dbg !5718
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !5718
  %15 = load i16*, i16** %block.addr, align 8, !dbg !5719
  %16 = load i32, i32* %i, align 4, !dbg !5720
  %mul11 = mul nsw i32 %16, 16, !dbg !5721
  %conv12 = sext i32 %mul11 to i64, !dbg !5720
  %mul13 = mul i64 %conv12, 2, !dbg !5722
  %add.ptr14 = getelementptr inbounds i16, i16* %15, i64 %mul13, !dbg !5723
  %17 = load i32, i32* %stride.addr, align 4, !dbg !5724
  call void @ff_h264_idct8_dc_add_10_c(i8* %add.ptr, i16* %add.ptr14, i32 %17), !dbg !5725
  br label %if.end, !dbg !5725

if.else:                                          ; preds = %land.lhs.true, %if.then
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !5726
  %19 = load i32, i32* %i, align 4, !dbg !5727
  %idxprom15 = sext i32 %19 to i64, !dbg !5728
  %20 = load i32*, i32** %block_offset.addr, align 8, !dbg !5728
  %arrayidx16 = getelementptr inbounds i32, i32* %20, i64 %idxprom15, !dbg !5728
  %21 = load i32, i32* %arrayidx16, align 4, !dbg !5728
  %idx.ext17 = sext i32 %21 to i64, !dbg !5729
  %add.ptr18 = getelementptr inbounds i8, i8* %18, i64 %idx.ext17, !dbg !5729
  %22 = load i16*, i16** %block.addr, align 8, !dbg !5730
  %23 = load i32, i32* %i, align 4, !dbg !5731
  %mul19 = mul nsw i32 %23, 16, !dbg !5732
  %conv20 = sext i32 %mul19 to i64, !dbg !5731
  %mul21 = mul i64 %conv20, 2, !dbg !5733
  %add.ptr22 = getelementptr inbounds i16, i16* %22, i64 %mul21, !dbg !5734
  %24 = load i32, i32* %stride.addr, align 4, !dbg !5735
  call void @ff_h264_idct8_add_10_c(i8* %add.ptr18, i16* %add.ptr22, i32 %24), !dbg !5736
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end23, !dbg !5737

if.end23:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !5738

for.inc:                                          ; preds = %if.end23
  %25 = load i32, i32* %i, align 4, !dbg !5739
  %add = add nsw i32 %25, 4, !dbg !5739
  store i32 %add, i32* %i, align 4, !dbg !5739
  br label %for.cond, !dbg !5741, !llvm.loop !5742

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5744
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add8_10_c(i8** %dest, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !5745 {
entry:
  %dest.addr = alloca i8**, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !5746, metadata !67), !dbg !5747
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !5748, metadata !67), !dbg !5749
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !5750, metadata !67), !dbg !5751
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5752, metadata !67), !dbg !5753
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !5754, metadata !67), !dbg !5755
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5756, metadata !67), !dbg !5757
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5758, metadata !67), !dbg !5759
  store i32 1, i32* %j, align 4, !dbg !5760
  br label %for.cond, !dbg !5762

for.cond:                                         ; preds = %for.inc31, %entry
  %0 = load i32, i32* %j, align 4, !dbg !5763
  %cmp = icmp slt i32 %0, 3, !dbg !5766
  br i1 %cmp, label %for.body, label %for.end33, !dbg !5767

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !5768
  %mul = mul nsw i32 %1, 16, !dbg !5771
  store i32 %mul, i32* %i, align 4, !dbg !5772
  br label %for.cond1, !dbg !5773

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !5774
  %3 = load i32, i32* %j, align 4, !dbg !5777
  %mul2 = mul nsw i32 %3, 16, !dbg !5778
  %add = add nsw i32 %mul2, 4, !dbg !5779
  %cmp3 = icmp slt i32 %2, %add, !dbg !5780
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !5781

for.body4:                                        ; preds = %for.cond1
  %4 = load i32, i32* %i, align 4, !dbg !5782
  %idxprom = sext i32 %4 to i64, !dbg !5785
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !5785
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5785
  %idxprom5 = zext i8 %5 to i64, !dbg !5786
  %6 = load i8*, i8** %nnzc.addr, align 8, !dbg !5786
  %arrayidx6 = getelementptr inbounds i8, i8* %6, i64 %idxprom5, !dbg !5786
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !5786
  %tobool = icmp ne i8 %7, 0, !dbg !5786
  br i1 %tobool, label %if.then, label %if.else, !dbg !5787

if.then:                                          ; preds = %for.body4
  %8 = load i32, i32* %j, align 4, !dbg !5788
  %sub = sub nsw i32 %8, 1, !dbg !5789
  %idxprom7 = sext i32 %sub to i64, !dbg !5790
  %9 = load i8**, i8*** %dest.addr, align 8, !dbg !5790
  %arrayidx8 = getelementptr inbounds i8*, i8** %9, i64 %idxprom7, !dbg !5790
  %10 = load i8*, i8** %arrayidx8, align 8, !dbg !5790
  %11 = load i32, i32* %i, align 4, !dbg !5791
  %idxprom9 = sext i32 %11 to i64, !dbg !5792
  %12 = load i32*, i32** %block_offset.addr, align 8, !dbg !5792
  %arrayidx10 = getelementptr inbounds i32, i32* %12, i64 %idxprom9, !dbg !5792
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !5792
  %idx.ext = sext i32 %13 to i64, !dbg !5793
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !5793
  %14 = load i16*, i16** %block.addr, align 8, !dbg !5794
  %15 = load i32, i32* %i, align 4, !dbg !5795
  %mul11 = mul nsw i32 %15, 16, !dbg !5796
  %conv = sext i32 %mul11 to i64, !dbg !5795
  %mul12 = mul i64 %conv, 2, !dbg !5797
  %add.ptr13 = getelementptr inbounds i16, i16* %14, i64 %mul12, !dbg !5798
  %16 = load i32, i32* %stride.addr, align 4, !dbg !5799
  call void @ff_h264_idct_add_10_c(i8* %add.ptr, i16* %add.ptr13, i32 %16), !dbg !5800
  br label %if.end30, !dbg !5800

if.else:                                          ; preds = %for.body4
  %17 = load i32, i32* %i, align 4, !dbg !5801
  %mul14 = mul nsw i32 %17, 16, !dbg !5803
  %idxprom15 = sext i32 %mul14 to i64, !dbg !5804
  %18 = load i16*, i16** %block.addr, align 8, !dbg !5805
  %19 = bitcast i16* %18 to i32*, !dbg !5804
  %arrayidx16 = getelementptr inbounds i32, i32* %19, i64 %idxprom15, !dbg !5804
  %20 = load i32, i32* %arrayidx16, align 4, !dbg !5804
  %tobool17 = icmp ne i32 %20, 0, !dbg !5804
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !5806

if.then18:                                        ; preds = %if.else
  %21 = load i32, i32* %j, align 4, !dbg !5807
  %sub19 = sub nsw i32 %21, 1, !dbg !5808
  %idxprom20 = sext i32 %sub19 to i64, !dbg !5809
  %22 = load i8**, i8*** %dest.addr, align 8, !dbg !5809
  %arrayidx21 = getelementptr inbounds i8*, i8** %22, i64 %idxprom20, !dbg !5809
  %23 = load i8*, i8** %arrayidx21, align 8, !dbg !5809
  %24 = load i32, i32* %i, align 4, !dbg !5810
  %idxprom22 = sext i32 %24 to i64, !dbg !5811
  %25 = load i32*, i32** %block_offset.addr, align 8, !dbg !5811
  %arrayidx23 = getelementptr inbounds i32, i32* %25, i64 %idxprom22, !dbg !5811
  %26 = load i32, i32* %arrayidx23, align 4, !dbg !5811
  %idx.ext24 = sext i32 %26 to i64, !dbg !5812
  %add.ptr25 = getelementptr inbounds i8, i8* %23, i64 %idx.ext24, !dbg !5812
  %27 = load i16*, i16** %block.addr, align 8, !dbg !5813
  %28 = load i32, i32* %i, align 4, !dbg !5814
  %mul26 = mul nsw i32 %28, 16, !dbg !5815
  %conv27 = sext i32 %mul26 to i64, !dbg !5814
  %mul28 = mul i64 %conv27, 2, !dbg !5816
  %add.ptr29 = getelementptr inbounds i16, i16* %27, i64 %mul28, !dbg !5817
  %29 = load i32, i32* %stride.addr, align 4, !dbg !5818
  call void @ff_h264_idct_dc_add_10_c(i8* %add.ptr25, i16* %add.ptr29, i32 %29), !dbg !5819
  br label %if.end, !dbg !5819

if.end:                                           ; preds = %if.then18, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !5820

for.inc:                                          ; preds = %if.end30
  %30 = load i32, i32* %i, align 4, !dbg !5821
  %inc = add nsw i32 %30, 1, !dbg !5821
  store i32 %inc, i32* %i, align 4, !dbg !5821
  br label %for.cond1, !dbg !5823, !llvm.loop !5824

for.end:                                          ; preds = %for.cond1
  br label %for.inc31, !dbg !5826

for.inc31:                                        ; preds = %for.end
  %31 = load i32, i32* %j, align 4, !dbg !5827
  %inc32 = add nsw i32 %31, 1, !dbg !5827
  store i32 %inc32, i32* %j, align 4, !dbg !5827
  br label %for.cond, !dbg !5829, !llvm.loop !5830

for.end33:                                        ; preds = %for.cond
  ret void, !dbg !5832
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add8_422_10_c(i8** %dest, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !5833 {
entry:
  %dest.addr = alloca i8**, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !5834, metadata !67), !dbg !5835
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !5836, metadata !67), !dbg !5837
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !5838, metadata !67), !dbg !5839
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5840, metadata !67), !dbg !5841
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !5842, metadata !67), !dbg !5843
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5844, metadata !67), !dbg !5845
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5846, metadata !67), !dbg !5847
  store i32 1, i32* %j, align 4, !dbg !5848
  br label %for.cond, !dbg !5850

for.cond:                                         ; preds = %for.inc31, %entry
  %0 = load i32, i32* %j, align 4, !dbg !5851
  %cmp = icmp slt i32 %0, 3, !dbg !5854
  br i1 %cmp, label %for.body, label %for.end33, !dbg !5855

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !5856
  %mul = mul nsw i32 %1, 16, !dbg !5859
  store i32 %mul, i32* %i, align 4, !dbg !5860
  br label %for.cond1, !dbg !5861

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !5862
  %3 = load i32, i32* %j, align 4, !dbg !5865
  %mul2 = mul nsw i32 %3, 16, !dbg !5866
  %add = add nsw i32 %mul2, 4, !dbg !5867
  %cmp3 = icmp slt i32 %2, %add, !dbg !5868
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !5869

for.body4:                                        ; preds = %for.cond1
  %4 = load i32, i32* %i, align 4, !dbg !5870
  %idxprom = sext i32 %4 to i64, !dbg !5873
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !5873
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5873
  %idxprom5 = zext i8 %5 to i64, !dbg !5874
  %6 = load i8*, i8** %nnzc.addr, align 8, !dbg !5874
  %arrayidx6 = getelementptr inbounds i8, i8* %6, i64 %idxprom5, !dbg !5874
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !5874
  %tobool = icmp ne i8 %7, 0, !dbg !5874
  br i1 %tobool, label %if.then, label %if.else, !dbg !5875

if.then:                                          ; preds = %for.body4
  %8 = load i32, i32* %j, align 4, !dbg !5876
  %sub = sub nsw i32 %8, 1, !dbg !5877
  %idxprom7 = sext i32 %sub to i64, !dbg !5878
  %9 = load i8**, i8*** %dest.addr, align 8, !dbg !5878
  %arrayidx8 = getelementptr inbounds i8*, i8** %9, i64 %idxprom7, !dbg !5878
  %10 = load i8*, i8** %arrayidx8, align 8, !dbg !5878
  %11 = load i32, i32* %i, align 4, !dbg !5879
  %idxprom9 = sext i32 %11 to i64, !dbg !5880
  %12 = load i32*, i32** %block_offset.addr, align 8, !dbg !5880
  %arrayidx10 = getelementptr inbounds i32, i32* %12, i64 %idxprom9, !dbg !5880
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !5880
  %idx.ext = sext i32 %13 to i64, !dbg !5881
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !5881
  %14 = load i16*, i16** %block.addr, align 8, !dbg !5882
  %15 = load i32, i32* %i, align 4, !dbg !5883
  %mul11 = mul nsw i32 %15, 16, !dbg !5884
  %conv = sext i32 %mul11 to i64, !dbg !5883
  %mul12 = mul i64 %conv, 2, !dbg !5885
  %add.ptr13 = getelementptr inbounds i16, i16* %14, i64 %mul12, !dbg !5886
  %16 = load i32, i32* %stride.addr, align 4, !dbg !5887
  call void @ff_h264_idct_add_10_c(i8* %add.ptr, i16* %add.ptr13, i32 %16), !dbg !5888
  br label %if.end30, !dbg !5888

if.else:                                          ; preds = %for.body4
  %17 = load i32, i32* %i, align 4, !dbg !5889
  %mul14 = mul nsw i32 %17, 16, !dbg !5891
  %idxprom15 = sext i32 %mul14 to i64, !dbg !5892
  %18 = load i16*, i16** %block.addr, align 8, !dbg !5893
  %19 = bitcast i16* %18 to i32*, !dbg !5892
  %arrayidx16 = getelementptr inbounds i32, i32* %19, i64 %idxprom15, !dbg !5892
  %20 = load i32, i32* %arrayidx16, align 4, !dbg !5892
  %tobool17 = icmp ne i32 %20, 0, !dbg !5892
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !5894

if.then18:                                        ; preds = %if.else
  %21 = load i32, i32* %j, align 4, !dbg !5895
  %sub19 = sub nsw i32 %21, 1, !dbg !5896
  %idxprom20 = sext i32 %sub19 to i64, !dbg !5897
  %22 = load i8**, i8*** %dest.addr, align 8, !dbg !5897
  %arrayidx21 = getelementptr inbounds i8*, i8** %22, i64 %idxprom20, !dbg !5897
  %23 = load i8*, i8** %arrayidx21, align 8, !dbg !5897
  %24 = load i32, i32* %i, align 4, !dbg !5898
  %idxprom22 = sext i32 %24 to i64, !dbg !5899
  %25 = load i32*, i32** %block_offset.addr, align 8, !dbg !5899
  %arrayidx23 = getelementptr inbounds i32, i32* %25, i64 %idxprom22, !dbg !5899
  %26 = load i32, i32* %arrayidx23, align 4, !dbg !5899
  %idx.ext24 = sext i32 %26 to i64, !dbg !5900
  %add.ptr25 = getelementptr inbounds i8, i8* %23, i64 %idx.ext24, !dbg !5900
  %27 = load i16*, i16** %block.addr, align 8, !dbg !5901
  %28 = load i32, i32* %i, align 4, !dbg !5902
  %mul26 = mul nsw i32 %28, 16, !dbg !5903
  %conv27 = sext i32 %mul26 to i64, !dbg !5902
  %mul28 = mul i64 %conv27, 2, !dbg !5904
  %add.ptr29 = getelementptr inbounds i16, i16* %27, i64 %mul28, !dbg !5905
  %29 = load i32, i32* %stride.addr, align 4, !dbg !5906
  call void @ff_h264_idct_dc_add_10_c(i8* %add.ptr25, i16* %add.ptr29, i32 %29), !dbg !5907
  br label %if.end, !dbg !5907

if.end:                                           ; preds = %if.then18, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !5908

for.inc:                                          ; preds = %if.end30
  %30 = load i32, i32* %i, align 4, !dbg !5909
  %inc = add nsw i32 %30, 1, !dbg !5909
  store i32 %inc, i32* %i, align 4, !dbg !5909
  br label %for.cond1, !dbg !5911, !llvm.loop !5912

for.end:                                          ; preds = %for.cond1
  br label %for.inc31, !dbg !5914

for.inc31:                                        ; preds = %for.end
  %31 = load i32, i32* %j, align 4, !dbg !5915
  %inc32 = add nsw i32 %31, 1, !dbg !5915
  store i32 %inc32, i32* %j, align 4, !dbg !5915
  br label %for.cond, !dbg !5917, !llvm.loop !5918

for.end33:                                        ; preds = %for.cond
  store i32 1, i32* %j, align 4, !dbg !5920
  br label %for.cond34, !dbg !5922

for.cond34:                                       ; preds = %for.inc88, %for.end33
  %32 = load i32, i32* %j, align 4, !dbg !5923
  %cmp35 = icmp slt i32 %32, 3, !dbg !5926
  br i1 %cmp35, label %for.body37, label %for.end90, !dbg !5927

for.body37:                                       ; preds = %for.cond34
  %33 = load i32, i32* %j, align 4, !dbg !5928
  %mul38 = mul nsw i32 %33, 16, !dbg !5931
  %add39 = add nsw i32 %mul38, 4, !dbg !5932
  store i32 %add39, i32* %i, align 4, !dbg !5933
  br label %for.cond40, !dbg !5934

for.cond40:                                       ; preds = %for.inc85, %for.body37
  %34 = load i32, i32* %i, align 4, !dbg !5935
  %35 = load i32, i32* %j, align 4, !dbg !5938
  %mul41 = mul nsw i32 %35, 16, !dbg !5939
  %add42 = add nsw i32 %mul41, 8, !dbg !5940
  %cmp43 = icmp slt i32 %34, %add42, !dbg !5941
  br i1 %cmp43, label %for.body45, label %for.end87, !dbg !5942

for.body45:                                       ; preds = %for.cond40
  %36 = load i32, i32* %i, align 4, !dbg !5943
  %add46 = add nsw i32 %36, 4, !dbg !5946
  %idxprom47 = sext i32 %add46 to i64, !dbg !5947
  %arrayidx48 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom47, !dbg !5947
  %37 = load i8, i8* %arrayidx48, align 1, !dbg !5947
  %idxprom49 = zext i8 %37 to i64, !dbg !5948
  %38 = load i8*, i8** %nnzc.addr, align 8, !dbg !5948
  %arrayidx50 = getelementptr inbounds i8, i8* %38, i64 %idxprom49, !dbg !5948
  %39 = load i8, i8* %arrayidx50, align 1, !dbg !5948
  %tobool51 = icmp ne i8 %39, 0, !dbg !5948
  br i1 %tobool51, label %if.then52, label %if.else65, !dbg !5949

if.then52:                                        ; preds = %for.body45
  %40 = load i32, i32* %j, align 4, !dbg !5950
  %sub53 = sub nsw i32 %40, 1, !dbg !5951
  %idxprom54 = sext i32 %sub53 to i64, !dbg !5952
  %41 = load i8**, i8*** %dest.addr, align 8, !dbg !5952
  %arrayidx55 = getelementptr inbounds i8*, i8** %41, i64 %idxprom54, !dbg !5952
  %42 = load i8*, i8** %arrayidx55, align 8, !dbg !5952
  %43 = load i32, i32* %i, align 4, !dbg !5953
  %add56 = add nsw i32 %43, 4, !dbg !5954
  %idxprom57 = sext i32 %add56 to i64, !dbg !5955
  %44 = load i32*, i32** %block_offset.addr, align 8, !dbg !5955
  %arrayidx58 = getelementptr inbounds i32, i32* %44, i64 %idxprom57, !dbg !5955
  %45 = load i32, i32* %arrayidx58, align 4, !dbg !5955
  %idx.ext59 = sext i32 %45 to i64, !dbg !5956
  %add.ptr60 = getelementptr inbounds i8, i8* %42, i64 %idx.ext59, !dbg !5956
  %46 = load i16*, i16** %block.addr, align 8, !dbg !5957
  %47 = load i32, i32* %i, align 4, !dbg !5958
  %mul61 = mul nsw i32 %47, 16, !dbg !5959
  %conv62 = sext i32 %mul61 to i64, !dbg !5958
  %mul63 = mul i64 %conv62, 2, !dbg !5960
  %add.ptr64 = getelementptr inbounds i16, i16* %46, i64 %mul63, !dbg !5961
  %48 = load i32, i32* %stride.addr, align 4, !dbg !5962
  call void @ff_h264_idct_add_10_c(i8* %add.ptr60, i16* %add.ptr64, i32 %48), !dbg !5963
  br label %if.end84, !dbg !5963

if.else65:                                        ; preds = %for.body45
  %49 = load i32, i32* %i, align 4, !dbg !5964
  %mul66 = mul nsw i32 %49, 16, !dbg !5966
  %idxprom67 = sext i32 %mul66 to i64, !dbg !5967
  %50 = load i16*, i16** %block.addr, align 8, !dbg !5968
  %51 = bitcast i16* %50 to i32*, !dbg !5967
  %arrayidx68 = getelementptr inbounds i32, i32* %51, i64 %idxprom67, !dbg !5967
  %52 = load i32, i32* %arrayidx68, align 4, !dbg !5967
  %tobool69 = icmp ne i32 %52, 0, !dbg !5967
  br i1 %tobool69, label %if.then70, label %if.end83, !dbg !5969

if.then70:                                        ; preds = %if.else65
  %53 = load i32, i32* %j, align 4, !dbg !5970
  %sub71 = sub nsw i32 %53, 1, !dbg !5971
  %idxprom72 = sext i32 %sub71 to i64, !dbg !5972
  %54 = load i8**, i8*** %dest.addr, align 8, !dbg !5972
  %arrayidx73 = getelementptr inbounds i8*, i8** %54, i64 %idxprom72, !dbg !5972
  %55 = load i8*, i8** %arrayidx73, align 8, !dbg !5972
  %56 = load i32, i32* %i, align 4, !dbg !5973
  %add74 = add nsw i32 %56, 4, !dbg !5974
  %idxprom75 = sext i32 %add74 to i64, !dbg !5975
  %57 = load i32*, i32** %block_offset.addr, align 8, !dbg !5975
  %arrayidx76 = getelementptr inbounds i32, i32* %57, i64 %idxprom75, !dbg !5975
  %58 = load i32, i32* %arrayidx76, align 4, !dbg !5975
  %idx.ext77 = sext i32 %58 to i64, !dbg !5976
  %add.ptr78 = getelementptr inbounds i8, i8* %55, i64 %idx.ext77, !dbg !5976
  %59 = load i16*, i16** %block.addr, align 8, !dbg !5977
  %60 = load i32, i32* %i, align 4, !dbg !5978
  %mul79 = mul nsw i32 %60, 16, !dbg !5979
  %conv80 = sext i32 %mul79 to i64, !dbg !5978
  %mul81 = mul i64 %conv80, 2, !dbg !5980
  %add.ptr82 = getelementptr inbounds i16, i16* %59, i64 %mul81, !dbg !5981
  %61 = load i32, i32* %stride.addr, align 4, !dbg !5982
  call void @ff_h264_idct_dc_add_10_c(i8* %add.ptr78, i16* %add.ptr82, i32 %61), !dbg !5983
  br label %if.end83, !dbg !5983

if.end83:                                         ; preds = %if.then70, %if.else65
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then52
  br label %for.inc85, !dbg !5984

for.inc85:                                        ; preds = %if.end84
  %62 = load i32, i32* %i, align 4, !dbg !5985
  %inc86 = add nsw i32 %62, 1, !dbg !5985
  store i32 %inc86, i32* %i, align 4, !dbg !5985
  br label %for.cond40, !dbg !5987, !llvm.loop !5988

for.end87:                                        ; preds = %for.cond40
  br label %for.inc88, !dbg !5990

for.inc88:                                        ; preds = %for.end87
  %63 = load i32, i32* %j, align 4, !dbg !5991
  %inc89 = add nsw i32 %63, 1, !dbg !5991
  store i32 %inc89, i32* %j, align 4, !dbg !5991
  br label %for.cond34, !dbg !5993, !llvm.loop !5994

for.end90:                                        ; preds = %for.cond34
  ret void, !dbg !5996
}

; Function Attrs: nounwind uwtable
define void @ff_h264_luma_dc_dequant_idct_10_c(i16* %_output, i16* %_input, i32 %qmul) #0 !dbg !40 {
entry:
  %_output.addr = alloca i16*, align 8
  %_input.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca [16 x i32], align 16
  %input = alloca i32*, align 8
  %output = alloca i32*, align 8
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  %offset = alloca i32, align 4
  %z057 = alloca i32, align 4
  %z165 = alloca i32, align 4
  %z273 = alloca i32, align 4
  %z381 = alloca i32, align 4
  store i16* %_output, i16** %_output.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_output.addr, metadata !5997, metadata !67), !dbg !5998
  store i16* %_input, i16** %_input.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_input.addr, metadata !5999, metadata !67), !dbg !6000
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !6001, metadata !67), !dbg !6002
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6003, metadata !67), !dbg !6004
  call void @llvm.dbg.declare(metadata [16 x i32]* %temp, metadata !6005, metadata !67), !dbg !6006
  call void @llvm.dbg.declare(metadata i32** %input, metadata !6007, metadata !67), !dbg !6008
  %0 = load i16*, i16** %_input.addr, align 8, !dbg !6009
  %1 = bitcast i16* %0 to i32*, !dbg !6010
  store i32* %1, i32** %input, align 8, !dbg !6008
  call void @llvm.dbg.declare(metadata i32** %output, metadata !6011, metadata !67), !dbg !6012
  %2 = load i16*, i16** %_output.addr, align 8, !dbg !6013
  %3 = bitcast i16* %2 to i32*, !dbg !6014
  store i32* %3, i32** %output, align 8, !dbg !6012
  store i32 0, i32* %i, align 4, !dbg !6015
  br label %for.cond, !dbg !6017

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !6018
  %cmp = icmp slt i32 %4, 4, !dbg !6021
  br i1 %cmp, label %for.body, label %for.end, !dbg !6022

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !6023, metadata !67), !dbg !6025
  %5 = load i32, i32* %i, align 4, !dbg !6026
  %mul = mul nsw i32 4, %5, !dbg !6027
  %add = add nsw i32 %mul, 0, !dbg !6028
  %idxprom = sext i32 %add to i64, !dbg !6029
  %6 = load i32*, i32** %input, align 8, !dbg !6029
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !6029
  %7 = load i32, i32* %arrayidx, align 4, !dbg !6029
  %8 = load i32, i32* %i, align 4, !dbg !6030
  %mul1 = mul nsw i32 4, %8, !dbg !6031
  %add2 = add nsw i32 %mul1, 1, !dbg !6032
  %idxprom3 = sext i32 %add2 to i64, !dbg !6033
  %9 = load i32*, i32** %input, align 8, !dbg !6033
  %arrayidx4 = getelementptr inbounds i32, i32* %9, i64 %idxprom3, !dbg !6033
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !6033
  %add5 = add nsw i32 %7, %10, !dbg !6034
  store i32 %add5, i32* %z0, align 4, !dbg !6025
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !6035, metadata !67), !dbg !6036
  %11 = load i32, i32* %i, align 4, !dbg !6037
  %mul6 = mul nsw i32 4, %11, !dbg !6038
  %add7 = add nsw i32 %mul6, 0, !dbg !6039
  %idxprom8 = sext i32 %add7 to i64, !dbg !6040
  %12 = load i32*, i32** %input, align 8, !dbg !6040
  %arrayidx9 = getelementptr inbounds i32, i32* %12, i64 %idxprom8, !dbg !6040
  %13 = load i32, i32* %arrayidx9, align 4, !dbg !6040
  %14 = load i32, i32* %i, align 4, !dbg !6041
  %mul10 = mul nsw i32 4, %14, !dbg !6042
  %add11 = add nsw i32 %mul10, 1, !dbg !6043
  %idxprom12 = sext i32 %add11 to i64, !dbg !6044
  %15 = load i32*, i32** %input, align 8, !dbg !6044
  %arrayidx13 = getelementptr inbounds i32, i32* %15, i64 %idxprom12, !dbg !6044
  %16 = load i32, i32* %arrayidx13, align 4, !dbg !6044
  %sub = sub nsw i32 %13, %16, !dbg !6045
  store i32 %sub, i32* %z1, align 4, !dbg !6036
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !6046, metadata !67), !dbg !6047
  %17 = load i32, i32* %i, align 4, !dbg !6048
  %mul14 = mul nsw i32 4, %17, !dbg !6049
  %add15 = add nsw i32 %mul14, 2, !dbg !6050
  %idxprom16 = sext i32 %add15 to i64, !dbg !6051
  %18 = load i32*, i32** %input, align 8, !dbg !6051
  %arrayidx17 = getelementptr inbounds i32, i32* %18, i64 %idxprom16, !dbg !6051
  %19 = load i32, i32* %arrayidx17, align 4, !dbg !6051
  %20 = load i32, i32* %i, align 4, !dbg !6052
  %mul18 = mul nsw i32 4, %20, !dbg !6053
  %add19 = add nsw i32 %mul18, 3, !dbg !6054
  %idxprom20 = sext i32 %add19 to i64, !dbg !6055
  %21 = load i32*, i32** %input, align 8, !dbg !6055
  %arrayidx21 = getelementptr inbounds i32, i32* %21, i64 %idxprom20, !dbg !6055
  %22 = load i32, i32* %arrayidx21, align 4, !dbg !6055
  %sub22 = sub nsw i32 %19, %22, !dbg !6056
  store i32 %sub22, i32* %z2, align 4, !dbg !6047
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !6057, metadata !67), !dbg !6058
  %23 = load i32, i32* %i, align 4, !dbg !6059
  %mul23 = mul nsw i32 4, %23, !dbg !6060
  %add24 = add nsw i32 %mul23, 2, !dbg !6061
  %idxprom25 = sext i32 %add24 to i64, !dbg !6062
  %24 = load i32*, i32** %input, align 8, !dbg !6062
  %arrayidx26 = getelementptr inbounds i32, i32* %24, i64 %idxprom25, !dbg !6062
  %25 = load i32, i32* %arrayidx26, align 4, !dbg !6062
  %26 = load i32, i32* %i, align 4, !dbg !6063
  %mul27 = mul nsw i32 4, %26, !dbg !6064
  %add28 = add nsw i32 %mul27, 3, !dbg !6065
  %idxprom29 = sext i32 %add28 to i64, !dbg !6066
  %27 = load i32*, i32** %input, align 8, !dbg !6066
  %arrayidx30 = getelementptr inbounds i32, i32* %27, i64 %idxprom29, !dbg !6066
  %28 = load i32, i32* %arrayidx30, align 4, !dbg !6066
  %add31 = add nsw i32 %25, %28, !dbg !6067
  store i32 %add31, i32* %z3, align 4, !dbg !6058
  %29 = load i32, i32* %z0, align 4, !dbg !6068
  %30 = load i32, i32* %z3, align 4, !dbg !6069
  %add32 = add nsw i32 %29, %30, !dbg !6070
  %31 = load i32, i32* %i, align 4, !dbg !6071
  %mul33 = mul nsw i32 4, %31, !dbg !6072
  %add34 = add nsw i32 %mul33, 0, !dbg !6073
  %idxprom35 = sext i32 %add34 to i64, !dbg !6074
  %arrayidx36 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom35, !dbg !6074
  store i32 %add32, i32* %arrayidx36, align 4, !dbg !6075
  %32 = load i32, i32* %z0, align 4, !dbg !6076
  %33 = load i32, i32* %z3, align 4, !dbg !6077
  %sub37 = sub nsw i32 %32, %33, !dbg !6078
  %34 = load i32, i32* %i, align 4, !dbg !6079
  %mul38 = mul nsw i32 4, %34, !dbg !6080
  %add39 = add nsw i32 %mul38, 1, !dbg !6081
  %idxprom40 = sext i32 %add39 to i64, !dbg !6082
  %arrayidx41 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom40, !dbg !6082
  store i32 %sub37, i32* %arrayidx41, align 4, !dbg !6083
  %35 = load i32, i32* %z1, align 4, !dbg !6084
  %36 = load i32, i32* %z2, align 4, !dbg !6085
  %sub42 = sub nsw i32 %35, %36, !dbg !6086
  %37 = load i32, i32* %i, align 4, !dbg !6087
  %mul43 = mul nsw i32 4, %37, !dbg !6088
  %add44 = add nsw i32 %mul43, 2, !dbg !6089
  %idxprom45 = sext i32 %add44 to i64, !dbg !6090
  %arrayidx46 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom45, !dbg !6090
  store i32 %sub42, i32* %arrayidx46, align 4, !dbg !6091
  %38 = load i32, i32* %z1, align 4, !dbg !6092
  %39 = load i32, i32* %z2, align 4, !dbg !6093
  %add47 = add nsw i32 %38, %39, !dbg !6094
  %40 = load i32, i32* %i, align 4, !dbg !6095
  %mul48 = mul nsw i32 4, %40, !dbg !6096
  %add49 = add nsw i32 %mul48, 3, !dbg !6097
  %idxprom50 = sext i32 %add49 to i64, !dbg !6098
  %arrayidx51 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom50, !dbg !6098
  store i32 %add47, i32* %arrayidx51, align 4, !dbg !6099
  br label %for.inc, !dbg !6100

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %i, align 4, !dbg !6101
  %inc = add nsw i32 %41, 1, !dbg !6101
  store i32 %inc, i32* %i, align 4, !dbg !6101
  br label %for.cond, !dbg !6103, !llvm.loop !6104

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6106
  br label %for.cond52, !dbg !6108

for.cond52:                                       ; preds = %for.inc116, %for.end
  %42 = load i32, i32* %i, align 4, !dbg !6109
  %cmp53 = icmp slt i32 %42, 4, !dbg !6112
  br i1 %cmp53, label %for.body54, label %for.end118, !dbg !6113

for.body54:                                       ; preds = %for.cond52
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !6114, metadata !67), !dbg !6116
  %43 = load i32, i32* %i, align 4, !dbg !6117
  %idxprom55 = sext i32 %43 to i64, !dbg !6118
  %arrayidx56 = getelementptr inbounds [4 x i8], [4 x i8]* @ff_h264_luma_dc_dequant_idct_10_c.x_offset, i64 0, i64 %idxprom55, !dbg !6118
  %44 = load i8, i8* %arrayidx56, align 1, !dbg !6118
  %conv = zext i8 %44 to i32, !dbg !6118
  store i32 %conv, i32* %offset, align 4, !dbg !6116
  call void @llvm.dbg.declare(metadata i32* %z057, metadata !6119, metadata !67), !dbg !6120
  %45 = load i32, i32* %i, align 4, !dbg !6121
  %add58 = add nsw i32 0, %45, !dbg !6122
  %idxprom59 = sext i32 %add58 to i64, !dbg !6123
  %arrayidx60 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom59, !dbg !6123
  %46 = load i32, i32* %arrayidx60, align 4, !dbg !6123
  %47 = load i32, i32* %i, align 4, !dbg !6124
  %add61 = add nsw i32 8, %47, !dbg !6125
  %idxprom62 = sext i32 %add61 to i64, !dbg !6126
  %arrayidx63 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom62, !dbg !6126
  %48 = load i32, i32* %arrayidx63, align 4, !dbg !6126
  %add64 = add nsw i32 %46, %48, !dbg !6127
  store i32 %add64, i32* %z057, align 4, !dbg !6120
  call void @llvm.dbg.declare(metadata i32* %z165, metadata !6128, metadata !67), !dbg !6129
  %49 = load i32, i32* %i, align 4, !dbg !6130
  %add66 = add nsw i32 0, %49, !dbg !6131
  %idxprom67 = sext i32 %add66 to i64, !dbg !6132
  %arrayidx68 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom67, !dbg !6132
  %50 = load i32, i32* %arrayidx68, align 4, !dbg !6132
  %51 = load i32, i32* %i, align 4, !dbg !6133
  %add69 = add nsw i32 8, %51, !dbg !6134
  %idxprom70 = sext i32 %add69 to i64, !dbg !6135
  %arrayidx71 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom70, !dbg !6135
  %52 = load i32, i32* %arrayidx71, align 4, !dbg !6135
  %sub72 = sub nsw i32 %50, %52, !dbg !6136
  store i32 %sub72, i32* %z165, align 4, !dbg !6129
  call void @llvm.dbg.declare(metadata i32* %z273, metadata !6137, metadata !67), !dbg !6138
  %53 = load i32, i32* %i, align 4, !dbg !6139
  %add74 = add nsw i32 4, %53, !dbg !6140
  %idxprom75 = sext i32 %add74 to i64, !dbg !6141
  %arrayidx76 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom75, !dbg !6141
  %54 = load i32, i32* %arrayidx76, align 4, !dbg !6141
  %55 = load i32, i32* %i, align 4, !dbg !6142
  %add77 = add nsw i32 12, %55, !dbg !6143
  %idxprom78 = sext i32 %add77 to i64, !dbg !6144
  %arrayidx79 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom78, !dbg !6144
  %56 = load i32, i32* %arrayidx79, align 4, !dbg !6144
  %sub80 = sub nsw i32 %54, %56, !dbg !6145
  store i32 %sub80, i32* %z273, align 4, !dbg !6138
  call void @llvm.dbg.declare(metadata i32* %z381, metadata !6146, metadata !67), !dbg !6147
  %57 = load i32, i32* %i, align 4, !dbg !6148
  %add82 = add nsw i32 4, %57, !dbg !6149
  %idxprom83 = sext i32 %add82 to i64, !dbg !6150
  %arrayidx84 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom83, !dbg !6150
  %58 = load i32, i32* %arrayidx84, align 4, !dbg !6150
  %59 = load i32, i32* %i, align 4, !dbg !6151
  %add85 = add nsw i32 12, %59, !dbg !6152
  %idxprom86 = sext i32 %add85 to i64, !dbg !6153
  %arrayidx87 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom86, !dbg !6153
  %60 = load i32, i32* %arrayidx87, align 4, !dbg !6153
  %add88 = add nsw i32 %58, %60, !dbg !6154
  store i32 %add88, i32* %z381, align 4, !dbg !6147
  %61 = load i32, i32* %z057, align 4, !dbg !6155
  %62 = load i32, i32* %z381, align 4, !dbg !6156
  %add89 = add i32 %61, %62, !dbg !6157
  %63 = load i32, i32* %qmul.addr, align 4, !dbg !6158
  %mul90 = mul i32 %add89, %63, !dbg !6159
  %add91 = add i32 %mul90, 128, !dbg !6160
  %shr = ashr i32 %add91, 8, !dbg !6161
  %64 = load i32, i32* %offset, align 4, !dbg !6162
  %add92 = add nsw i32 0, %64, !dbg !6163
  %idxprom93 = sext i32 %add92 to i64, !dbg !6164
  %65 = load i32*, i32** %output, align 8, !dbg !6164
  %arrayidx94 = getelementptr inbounds i32, i32* %65, i64 %idxprom93, !dbg !6164
  store i32 %shr, i32* %arrayidx94, align 4, !dbg !6165
  %66 = load i32, i32* %z165, align 4, !dbg !6166
  %67 = load i32, i32* %z273, align 4, !dbg !6167
  %add95 = add i32 %66, %67, !dbg !6168
  %68 = load i32, i32* %qmul.addr, align 4, !dbg !6169
  %mul96 = mul i32 %add95, %68, !dbg !6170
  %add97 = add i32 %mul96, 128, !dbg !6171
  %shr98 = ashr i32 %add97, 8, !dbg !6172
  %69 = load i32, i32* %offset, align 4, !dbg !6173
  %add99 = add nsw i32 16, %69, !dbg !6174
  %idxprom100 = sext i32 %add99 to i64, !dbg !6175
  %70 = load i32*, i32** %output, align 8, !dbg !6175
  %arrayidx101 = getelementptr inbounds i32, i32* %70, i64 %idxprom100, !dbg !6175
  store i32 %shr98, i32* %arrayidx101, align 4, !dbg !6176
  %71 = load i32, i32* %z165, align 4, !dbg !6177
  %72 = load i32, i32* %z273, align 4, !dbg !6178
  %sub102 = sub i32 %71, %72, !dbg !6179
  %73 = load i32, i32* %qmul.addr, align 4, !dbg !6180
  %mul103 = mul i32 %sub102, %73, !dbg !6181
  %add104 = add i32 %mul103, 128, !dbg !6182
  %shr105 = ashr i32 %add104, 8, !dbg !6183
  %74 = load i32, i32* %offset, align 4, !dbg !6184
  %add106 = add nsw i32 64, %74, !dbg !6185
  %idxprom107 = sext i32 %add106 to i64, !dbg !6186
  %75 = load i32*, i32** %output, align 8, !dbg !6186
  %arrayidx108 = getelementptr inbounds i32, i32* %75, i64 %idxprom107, !dbg !6186
  store i32 %shr105, i32* %arrayidx108, align 4, !dbg !6187
  %76 = load i32, i32* %z057, align 4, !dbg !6188
  %77 = load i32, i32* %z381, align 4, !dbg !6189
  %sub109 = sub i32 %76, %77, !dbg !6190
  %78 = load i32, i32* %qmul.addr, align 4, !dbg !6191
  %mul110 = mul i32 %sub109, %78, !dbg !6192
  %add111 = add i32 %mul110, 128, !dbg !6193
  %shr112 = ashr i32 %add111, 8, !dbg !6194
  %79 = load i32, i32* %offset, align 4, !dbg !6195
  %add113 = add nsw i32 80, %79, !dbg !6196
  %idxprom114 = sext i32 %add113 to i64, !dbg !6197
  %80 = load i32*, i32** %output, align 8, !dbg !6197
  %arrayidx115 = getelementptr inbounds i32, i32* %80, i64 %idxprom114, !dbg !6197
  store i32 %shr112, i32* %arrayidx115, align 4, !dbg !6198
  br label %for.inc116, !dbg !6199

for.inc116:                                       ; preds = %for.body54
  %81 = load i32, i32* %i, align 4, !dbg !6200
  %inc117 = add nsw i32 %81, 1, !dbg !6200
  store i32 %inc117, i32* %i, align 4, !dbg !6200
  br label %for.cond52, !dbg !6202, !llvm.loop !6203

for.end118:                                       ; preds = %for.cond52
  ret void, !dbg !6205
}

; Function Attrs: nounwind uwtable
define void @ff_h264_chroma422_dc_dequant_idct_10_c(i16* %_block, i32 %qmul) #0 !dbg !42 {
entry:
  %_block.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %stride = alloca i32, align 4
  %xStride = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca [8 x i32], align 16
  %block = alloca i32*, align 8
  %offset = alloca i32, align 4
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !6206, metadata !67), !dbg !6207
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !6208, metadata !67), !dbg !6209
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !6210, metadata !67), !dbg !6211
  store i32 32, i32* %stride, align 4, !dbg !6211
  call void @llvm.dbg.declare(metadata i32* %xStride, metadata !6212, metadata !67), !dbg !6213
  store i32 16, i32* %xStride, align 4, !dbg !6213
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6214, metadata !67), !dbg !6215
  call void @llvm.dbg.declare(metadata [8 x i32]* %temp, metadata !6216, metadata !67), !dbg !6217
  call void @llvm.dbg.declare(metadata i32** %block, metadata !6218, metadata !67), !dbg !6219
  %0 = load i16*, i16** %_block.addr, align 8, !dbg !6220
  %1 = bitcast i16* %0 to i32*, !dbg !6221
  store i32* %1, i32** %block, align 8, !dbg !6219
  store i32 0, i32* %i, align 4, !dbg !6222
  br label %for.cond, !dbg !6224

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !6225
  %cmp = icmp slt i32 %2, 4, !dbg !6228
  br i1 %cmp, label %for.body, label %for.end, !dbg !6229

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !6230
  %mul = mul nsw i32 32, %3, !dbg !6232
  %add = add nsw i32 %mul, 0, !dbg !6233
  %idxprom = sext i32 %add to i64, !dbg !6234
  %4 = load i32*, i32** %block, align 8, !dbg !6234
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !6234
  %5 = load i32, i32* %arrayidx, align 4, !dbg !6234
  %6 = load i32, i32* %i, align 4, !dbg !6235
  %mul1 = mul nsw i32 32, %6, !dbg !6236
  %add2 = add nsw i32 %mul1, 16, !dbg !6237
  %idxprom3 = sext i32 %add2 to i64, !dbg !6238
  %7 = load i32*, i32** %block, align 8, !dbg !6238
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 %idxprom3, !dbg !6238
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !6238
  %add5 = add nsw i32 %5, %8, !dbg !6239
  %9 = load i32, i32* %i, align 4, !dbg !6240
  %mul6 = mul nsw i32 2, %9, !dbg !6241
  %add7 = add nsw i32 %mul6, 0, !dbg !6242
  %idxprom8 = sext i32 %add7 to i64, !dbg !6243
  %arrayidx9 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom8, !dbg !6243
  store i32 %add5, i32* %arrayidx9, align 4, !dbg !6244
  %10 = load i32, i32* %i, align 4, !dbg !6245
  %mul10 = mul nsw i32 32, %10, !dbg !6246
  %add11 = add nsw i32 %mul10, 0, !dbg !6247
  %idxprom12 = sext i32 %add11 to i64, !dbg !6248
  %11 = load i32*, i32** %block, align 8, !dbg !6248
  %arrayidx13 = getelementptr inbounds i32, i32* %11, i64 %idxprom12, !dbg !6248
  %12 = load i32, i32* %arrayidx13, align 4, !dbg !6248
  %13 = load i32, i32* %i, align 4, !dbg !6249
  %mul14 = mul nsw i32 32, %13, !dbg !6250
  %add15 = add nsw i32 %mul14, 16, !dbg !6251
  %idxprom16 = sext i32 %add15 to i64, !dbg !6252
  %14 = load i32*, i32** %block, align 8, !dbg !6252
  %arrayidx17 = getelementptr inbounds i32, i32* %14, i64 %idxprom16, !dbg !6252
  %15 = load i32, i32* %arrayidx17, align 4, !dbg !6252
  %sub = sub nsw i32 %12, %15, !dbg !6253
  %16 = load i32, i32* %i, align 4, !dbg !6254
  %mul18 = mul nsw i32 2, %16, !dbg !6255
  %add19 = add nsw i32 %mul18, 1, !dbg !6256
  %idxprom20 = sext i32 %add19 to i64, !dbg !6257
  %arrayidx21 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom20, !dbg !6257
  store i32 %sub, i32* %arrayidx21, align 4, !dbg !6258
  br label %for.inc, !dbg !6259

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !6260
  %inc = add nsw i32 %17, 1, !dbg !6260
  store i32 %inc, i32* %i, align 4, !dbg !6260
  br label %for.cond, !dbg !6262, !llvm.loop !6263

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6265
  br label %for.cond22, !dbg !6267

for.cond22:                                       ; preds = %for.inc82, %for.end
  %18 = load i32, i32* %i, align 4, !dbg !6268
  %cmp23 = icmp slt i32 %18, 2, !dbg !6271
  br i1 %cmp23, label %for.body24, label %for.end84, !dbg !6272

for.body24:                                       ; preds = %for.cond22
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !6273, metadata !67), !dbg !6275
  %19 = load i32, i32* %i, align 4, !dbg !6276
  %idxprom25 = sext i32 %19 to i64, !dbg !6277
  %arrayidx26 = getelementptr inbounds [2 x i8], [2 x i8]* @ff_h264_chroma422_dc_dequant_idct_10_c.x_offset, i64 0, i64 %idxprom25, !dbg !6277
  %20 = load i8, i8* %arrayidx26, align 1, !dbg !6277
  %conv = zext i8 %20 to i32, !dbg !6277
  store i32 %conv, i32* %offset, align 4, !dbg !6275
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !6278, metadata !67), !dbg !6279
  %21 = load i32, i32* %i, align 4, !dbg !6280
  %add27 = add nsw i32 0, %21, !dbg !6281
  %idxprom28 = sext i32 %add27 to i64, !dbg !6282
  %arrayidx29 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom28, !dbg !6282
  %22 = load i32, i32* %arrayidx29, align 4, !dbg !6282
  %23 = load i32, i32* %i, align 4, !dbg !6283
  %add30 = add nsw i32 4, %23, !dbg !6284
  %idxprom31 = sext i32 %add30 to i64, !dbg !6285
  %arrayidx32 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom31, !dbg !6285
  %24 = load i32, i32* %arrayidx32, align 4, !dbg !6285
  %add33 = add nsw i32 %22, %24, !dbg !6286
  store i32 %add33, i32* %z0, align 4, !dbg !6279
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !6287, metadata !67), !dbg !6288
  %25 = load i32, i32* %i, align 4, !dbg !6289
  %add34 = add nsw i32 0, %25, !dbg !6290
  %idxprom35 = sext i32 %add34 to i64, !dbg !6291
  %arrayidx36 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom35, !dbg !6291
  %26 = load i32, i32* %arrayidx36, align 4, !dbg !6291
  %27 = load i32, i32* %i, align 4, !dbg !6292
  %add37 = add nsw i32 4, %27, !dbg !6293
  %idxprom38 = sext i32 %add37 to i64, !dbg !6294
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom38, !dbg !6294
  %28 = load i32, i32* %arrayidx39, align 4, !dbg !6294
  %sub40 = sub nsw i32 %26, %28, !dbg !6295
  store i32 %sub40, i32* %z1, align 4, !dbg !6288
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !6296, metadata !67), !dbg !6297
  %29 = load i32, i32* %i, align 4, !dbg !6298
  %add41 = add nsw i32 2, %29, !dbg !6299
  %idxprom42 = sext i32 %add41 to i64, !dbg !6300
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom42, !dbg !6300
  %30 = load i32, i32* %arrayidx43, align 4, !dbg !6300
  %31 = load i32, i32* %i, align 4, !dbg !6301
  %add44 = add nsw i32 6, %31, !dbg !6302
  %idxprom45 = sext i32 %add44 to i64, !dbg !6303
  %arrayidx46 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom45, !dbg !6303
  %32 = load i32, i32* %arrayidx46, align 4, !dbg !6303
  %sub47 = sub nsw i32 %30, %32, !dbg !6304
  store i32 %sub47, i32* %z2, align 4, !dbg !6297
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !6305, metadata !67), !dbg !6306
  %33 = load i32, i32* %i, align 4, !dbg !6307
  %add48 = add nsw i32 2, %33, !dbg !6308
  %idxprom49 = sext i32 %add48 to i64, !dbg !6309
  %arrayidx50 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom49, !dbg !6309
  %34 = load i32, i32* %arrayidx50, align 4, !dbg !6309
  %35 = load i32, i32* %i, align 4, !dbg !6310
  %add51 = add nsw i32 6, %35, !dbg !6311
  %idxprom52 = sext i32 %add51 to i64, !dbg !6312
  %arrayidx53 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom52, !dbg !6312
  %36 = load i32, i32* %arrayidx53, align 4, !dbg !6312
  %add54 = add nsw i32 %34, %36, !dbg !6313
  store i32 %add54, i32* %z3, align 4, !dbg !6306
  %37 = load i32, i32* %z0, align 4, !dbg !6314
  %38 = load i32, i32* %z3, align 4, !dbg !6315
  %add55 = add i32 %37, %38, !dbg !6316
  %39 = load i32, i32* %qmul.addr, align 4, !dbg !6317
  %mul56 = mul i32 %add55, %39, !dbg !6318
  %add57 = add i32 %mul56, 128, !dbg !6319
  %shr = ashr i32 %add57, 8, !dbg !6320
  %40 = load i32, i32* %offset, align 4, !dbg !6321
  %add58 = add nsw i32 0, %40, !dbg !6322
  %idxprom59 = sext i32 %add58 to i64, !dbg !6323
  %41 = load i32*, i32** %block, align 8, !dbg !6323
  %arrayidx60 = getelementptr inbounds i32, i32* %41, i64 %idxprom59, !dbg !6323
  store i32 %shr, i32* %arrayidx60, align 4, !dbg !6324
  %42 = load i32, i32* %z1, align 4, !dbg !6325
  %43 = load i32, i32* %z2, align 4, !dbg !6326
  %add61 = add i32 %42, %43, !dbg !6327
  %44 = load i32, i32* %qmul.addr, align 4, !dbg !6328
  %mul62 = mul i32 %add61, %44, !dbg !6329
  %add63 = add i32 %mul62, 128, !dbg !6330
  %shr64 = ashr i32 %add63, 8, !dbg !6331
  %45 = load i32, i32* %offset, align 4, !dbg !6332
  %add65 = add nsw i32 32, %45, !dbg !6333
  %idxprom66 = sext i32 %add65 to i64, !dbg !6334
  %46 = load i32*, i32** %block, align 8, !dbg !6334
  %arrayidx67 = getelementptr inbounds i32, i32* %46, i64 %idxprom66, !dbg !6334
  store i32 %shr64, i32* %arrayidx67, align 4, !dbg !6335
  %47 = load i32, i32* %z1, align 4, !dbg !6336
  %48 = load i32, i32* %z2, align 4, !dbg !6337
  %sub68 = sub i32 %47, %48, !dbg !6338
  %49 = load i32, i32* %qmul.addr, align 4, !dbg !6339
  %mul69 = mul i32 %sub68, %49, !dbg !6340
  %add70 = add i32 %mul69, 128, !dbg !6341
  %shr71 = ashr i32 %add70, 8, !dbg !6342
  %50 = load i32, i32* %offset, align 4, !dbg !6343
  %add72 = add nsw i32 64, %50, !dbg !6344
  %idxprom73 = sext i32 %add72 to i64, !dbg !6345
  %51 = load i32*, i32** %block, align 8, !dbg !6345
  %arrayidx74 = getelementptr inbounds i32, i32* %51, i64 %idxprom73, !dbg !6345
  store i32 %shr71, i32* %arrayidx74, align 4, !dbg !6346
  %52 = load i32, i32* %z0, align 4, !dbg !6347
  %53 = load i32, i32* %z3, align 4, !dbg !6348
  %sub75 = sub i32 %52, %53, !dbg !6349
  %54 = load i32, i32* %qmul.addr, align 4, !dbg !6350
  %mul76 = mul i32 %sub75, %54, !dbg !6351
  %add77 = add i32 %mul76, 128, !dbg !6352
  %shr78 = ashr i32 %add77, 8, !dbg !6353
  %55 = load i32, i32* %offset, align 4, !dbg !6354
  %add79 = add nsw i32 96, %55, !dbg !6355
  %idxprom80 = sext i32 %add79 to i64, !dbg !6356
  %56 = load i32*, i32** %block, align 8, !dbg !6356
  %arrayidx81 = getelementptr inbounds i32, i32* %56, i64 %idxprom80, !dbg !6356
  store i32 %shr78, i32* %arrayidx81, align 4, !dbg !6357
  br label %for.inc82, !dbg !6358

for.inc82:                                        ; preds = %for.body24
  %57 = load i32, i32* %i, align 4, !dbg !6359
  %inc83 = add nsw i32 %57, 1, !dbg !6359
  store i32 %inc83, i32* %i, align 4, !dbg !6359
  br label %for.cond22, !dbg !6361, !llvm.loop !6362

for.end84:                                        ; preds = %for.cond22
  ret void, !dbg !6364
}

; Function Attrs: nounwind uwtable
define void @ff_h264_chroma_dc_dequant_idct_10_c(i16* %_block, i32 %qmul) #0 !dbg !6365 {
entry:
  %_block.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %stride = alloca i32, align 4
  %xStride = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %block = alloca i32*, align 8
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !6366, metadata !67), !dbg !6367
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !6368, metadata !67), !dbg !6369
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !6370, metadata !67), !dbg !6371
  store i32 32, i32* %stride, align 4, !dbg !6371
  call void @llvm.dbg.declare(metadata i32* %xStride, metadata !6372, metadata !67), !dbg !6373
  store i32 16, i32* %xStride, align 4, !dbg !6373
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6374, metadata !67), !dbg !6375
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6376, metadata !67), !dbg !6377
  call void @llvm.dbg.declare(metadata i32* %c, metadata !6378, metadata !67), !dbg !6379
  call void @llvm.dbg.declare(metadata i32* %d, metadata !6380, metadata !67), !dbg !6381
  call void @llvm.dbg.declare(metadata i32* %e, metadata !6382, metadata !67), !dbg !6383
  call void @llvm.dbg.declare(metadata i32** %block, metadata !6384, metadata !67), !dbg !6385
  %0 = load i16*, i16** %_block.addr, align 8, !dbg !6386
  %1 = bitcast i16* %0 to i32*, !dbg !6387
  store i32* %1, i32** %block, align 8, !dbg !6385
  %2 = load i32*, i32** %block, align 8, !dbg !6388
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 0, !dbg !6388
  %3 = load i32, i32* %arrayidx, align 4, !dbg !6388
  store i32 %3, i32* %a, align 4, !dbg !6389
  %4 = load i32*, i32** %block, align 8, !dbg !6390
  %arrayidx1 = getelementptr inbounds i32, i32* %4, i64 16, !dbg !6390
  %5 = load i32, i32* %arrayidx1, align 4, !dbg !6390
  store i32 %5, i32* %b, align 4, !dbg !6391
  %6 = load i32*, i32** %block, align 8, !dbg !6392
  %arrayidx2 = getelementptr inbounds i32, i32* %6, i64 32, !dbg !6392
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !6392
  store i32 %7, i32* %c, align 4, !dbg !6393
  %8 = load i32*, i32** %block, align 8, !dbg !6394
  %arrayidx3 = getelementptr inbounds i32, i32* %8, i64 48, !dbg !6394
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !6394
  store i32 %9, i32* %d, align 4, !dbg !6395
  %10 = load i32, i32* %a, align 4, !dbg !6396
  %11 = load i32, i32* %b, align 4, !dbg !6397
  %sub = sub i32 %10, %11, !dbg !6398
  store i32 %sub, i32* %e, align 4, !dbg !6399
  %12 = load i32, i32* %a, align 4, !dbg !6400
  %13 = load i32, i32* %b, align 4, !dbg !6401
  %add = add i32 %12, %13, !dbg !6402
  store i32 %add, i32* %a, align 4, !dbg !6403
  %14 = load i32, i32* %c, align 4, !dbg !6404
  %15 = load i32, i32* %d, align 4, !dbg !6405
  %sub4 = sub i32 %14, %15, !dbg !6406
  store i32 %sub4, i32* %b, align 4, !dbg !6407
  %16 = load i32, i32* %c, align 4, !dbg !6408
  %17 = load i32, i32* %d, align 4, !dbg !6409
  %add5 = add i32 %16, %17, !dbg !6410
  store i32 %add5, i32* %c, align 4, !dbg !6411
  %18 = load i32, i32* %a, align 4, !dbg !6412
  %19 = load i32, i32* %c, align 4, !dbg !6413
  %add6 = add i32 %18, %19, !dbg !6414
  %20 = load i32, i32* %qmul.addr, align 4, !dbg !6415
  %mul = mul i32 %add6, %20, !dbg !6416
  %shr = ashr i32 %mul, 7, !dbg !6417
  %21 = load i32*, i32** %block, align 8, !dbg !6418
  %arrayidx7 = getelementptr inbounds i32, i32* %21, i64 0, !dbg !6418
  store i32 %shr, i32* %arrayidx7, align 4, !dbg !6419
  %22 = load i32, i32* %e, align 4, !dbg !6420
  %23 = load i32, i32* %b, align 4, !dbg !6421
  %add8 = add i32 %22, %23, !dbg !6422
  %24 = load i32, i32* %qmul.addr, align 4, !dbg !6423
  %mul9 = mul i32 %add8, %24, !dbg !6424
  %shr10 = ashr i32 %mul9, 7, !dbg !6425
  %25 = load i32*, i32** %block, align 8, !dbg !6426
  %arrayidx11 = getelementptr inbounds i32, i32* %25, i64 16, !dbg !6426
  store i32 %shr10, i32* %arrayidx11, align 4, !dbg !6427
  %26 = load i32, i32* %a, align 4, !dbg !6428
  %27 = load i32, i32* %c, align 4, !dbg !6429
  %sub12 = sub i32 %26, %27, !dbg !6430
  %28 = load i32, i32* %qmul.addr, align 4, !dbg !6431
  %mul13 = mul i32 %sub12, %28, !dbg !6432
  %shr14 = ashr i32 %mul13, 7, !dbg !6433
  %29 = load i32*, i32** %block, align 8, !dbg !6434
  %arrayidx15 = getelementptr inbounds i32, i32* %29, i64 32, !dbg !6434
  store i32 %shr14, i32* %arrayidx15, align 4, !dbg !6435
  %30 = load i32, i32* %e, align 4, !dbg !6436
  %31 = load i32, i32* %b, align 4, !dbg !6437
  %sub16 = sub i32 %30, %31, !dbg !6438
  %32 = load i32, i32* %qmul.addr, align 4, !dbg !6439
  %mul17 = mul i32 %sub16, %32, !dbg !6440
  %shr18 = ashr i32 %mul17, 7, !dbg !6441
  %33 = load i32*, i32** %block, align 8, !dbg !6442
  %arrayidx19 = getelementptr inbounds i32, i32* %33, i64 48, !dbg !6442
  store i32 %shr18, i32* %arrayidx19, align 4, !dbg !6443
  ret void, !dbg !6444
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add_12_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !6445 {
entry:
  %retval.i178 = alloca i32, align 4
  %a.addr.i179 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i179, metadata !2143, metadata !67), !dbg !6446
  %p.addr.i180 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i180, metadata !2152, metadata !67), !dbg !6451
  %retval.i162 = alloca i32, align 4
  %a.addr.i163 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i163, metadata !2143, metadata !67), !dbg !6452
  %p.addr.i164 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i164, metadata !2152, metadata !67), !dbg !6454
  %retval.i146 = alloca i32, align 4
  %a.addr.i147 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i147, metadata !2143, metadata !67), !dbg !6455
  %p.addr.i148 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i148, metadata !2152, metadata !67), !dbg !6457
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !6458
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !6460
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  %z048 = alloca i32, align 4
  %z157 = alloca i32, align 4
  %z267 = alloca i32, align 4
  %z378 = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !6461, metadata !67), !dbg !6462
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !6463, metadata !67), !dbg !6464
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !6465, metadata !67), !dbg !6466
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6467, metadata !67), !dbg !6468
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !6469, metadata !67), !dbg !6470
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !6471
  %1 = bitcast i8* %0 to i16*, !dbg !6472
  store i16* %1, i16** %dst, align 8, !dbg !6470
  call void @llvm.dbg.declare(metadata i32** %block, metadata !6473, metadata !67), !dbg !6474
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !6475
  %3 = bitcast i16* %2 to i32*, !dbg !6476
  store i32* %3, i32** %block, align 8, !dbg !6474
  %4 = load i32, i32* %stride.addr, align 4, !dbg !6477
  %shr = ashr i32 %4, 1, !dbg !6477
  store i32 %shr, i32* %stride.addr, align 4, !dbg !6477
  %5 = load i32*, i32** %block, align 8, !dbg !6478
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !6478
  %6 = load i32, i32* %arrayidx, align 4, !dbg !6479
  %add = add nsw i32 %6, 32, !dbg !6479
  store i32 %add, i32* %arrayidx, align 4, !dbg !6479
  store i32 0, i32* %i, align 4, !dbg !6480
  br label %for.cond, !dbg !6482

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !6483
  %cmp = icmp slt i32 %7, 4, !dbg !6486
  br i1 %cmp, label %for.body, label %for.end, !dbg !6487

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !6488, metadata !67), !dbg !6490
  %8 = load i32, i32* %i, align 4, !dbg !6491
  %add1 = add nsw i32 %8, 0, !dbg !6492
  %idxprom = sext i32 %add1 to i64, !dbg !6493
  %9 = load i32*, i32** %block, align 8, !dbg !6493
  %arrayidx2 = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !6493
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !6493
  %11 = load i32, i32* %i, align 4, !dbg !6494
  %add3 = add nsw i32 %11, 8, !dbg !6495
  %idxprom4 = sext i32 %add3 to i64, !dbg !6496
  %12 = load i32*, i32** %block, align 8, !dbg !6496
  %arrayidx5 = getelementptr inbounds i32, i32* %12, i64 %idxprom4, !dbg !6496
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !6496
  %add6 = add i32 %10, %13, !dbg !6497
  store i32 %add6, i32* %z0, align 4, !dbg !6490
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !6498, metadata !67), !dbg !6499
  %14 = load i32, i32* %i, align 4, !dbg !6500
  %add7 = add nsw i32 %14, 0, !dbg !6501
  %idxprom8 = sext i32 %add7 to i64, !dbg !6502
  %15 = load i32*, i32** %block, align 8, !dbg !6502
  %arrayidx9 = getelementptr inbounds i32, i32* %15, i64 %idxprom8, !dbg !6502
  %16 = load i32, i32* %arrayidx9, align 4, !dbg !6502
  %17 = load i32, i32* %i, align 4, !dbg !6503
  %add10 = add nsw i32 %17, 8, !dbg !6504
  %idxprom11 = sext i32 %add10 to i64, !dbg !6505
  %18 = load i32*, i32** %block, align 8, !dbg !6505
  %arrayidx12 = getelementptr inbounds i32, i32* %18, i64 %idxprom11, !dbg !6505
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !6505
  %sub = sub i32 %16, %19, !dbg !6506
  store i32 %sub, i32* %z1, align 4, !dbg !6499
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !6507, metadata !67), !dbg !6508
  %20 = load i32, i32* %i, align 4, !dbg !6509
  %add13 = add nsw i32 %20, 4, !dbg !6510
  %idxprom14 = sext i32 %add13 to i64, !dbg !6511
  %21 = load i32*, i32** %block, align 8, !dbg !6511
  %arrayidx15 = getelementptr inbounds i32, i32* %21, i64 %idxprom14, !dbg !6511
  %22 = load i32, i32* %arrayidx15, align 4, !dbg !6511
  %shr16 = ashr i32 %22, 1, !dbg !6512
  %23 = load i32, i32* %i, align 4, !dbg !6513
  %add17 = add nsw i32 %23, 12, !dbg !6514
  %idxprom18 = sext i32 %add17 to i64, !dbg !6515
  %24 = load i32*, i32** %block, align 8, !dbg !6515
  %arrayidx19 = getelementptr inbounds i32, i32* %24, i64 %idxprom18, !dbg !6515
  %25 = load i32, i32* %arrayidx19, align 4, !dbg !6515
  %sub20 = sub i32 %shr16, %25, !dbg !6516
  store i32 %sub20, i32* %z2, align 4, !dbg !6508
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !6517, metadata !67), !dbg !6518
  %26 = load i32, i32* %i, align 4, !dbg !6519
  %add21 = add nsw i32 %26, 4, !dbg !6520
  %idxprom22 = sext i32 %add21 to i64, !dbg !6521
  %27 = load i32*, i32** %block, align 8, !dbg !6521
  %arrayidx23 = getelementptr inbounds i32, i32* %27, i64 %idxprom22, !dbg !6521
  %28 = load i32, i32* %arrayidx23, align 4, !dbg !6521
  %29 = load i32, i32* %i, align 4, !dbg !6522
  %add24 = add nsw i32 %29, 12, !dbg !6523
  %idxprom25 = sext i32 %add24 to i64, !dbg !6524
  %30 = load i32*, i32** %block, align 8, !dbg !6524
  %arrayidx26 = getelementptr inbounds i32, i32* %30, i64 %idxprom25, !dbg !6524
  %31 = load i32, i32* %arrayidx26, align 4, !dbg !6524
  %shr27 = ashr i32 %31, 1, !dbg !6525
  %add28 = add i32 %28, %shr27, !dbg !6526
  store i32 %add28, i32* %z3, align 4, !dbg !6518
  %32 = load i32, i32* %z0, align 4, !dbg !6527
  %33 = load i32, i32* %z3, align 4, !dbg !6528
  %add29 = add i32 %32, %33, !dbg !6529
  %34 = load i32, i32* %i, align 4, !dbg !6530
  %add30 = add nsw i32 %34, 0, !dbg !6531
  %idxprom31 = sext i32 %add30 to i64, !dbg !6532
  %35 = load i32*, i32** %block, align 8, !dbg !6532
  %arrayidx32 = getelementptr inbounds i32, i32* %35, i64 %idxprom31, !dbg !6532
  store i32 %add29, i32* %arrayidx32, align 4, !dbg !6533
  %36 = load i32, i32* %z1, align 4, !dbg !6534
  %37 = load i32, i32* %z2, align 4, !dbg !6535
  %add33 = add i32 %36, %37, !dbg !6536
  %38 = load i32, i32* %i, align 4, !dbg !6537
  %add34 = add nsw i32 %38, 4, !dbg !6538
  %idxprom35 = sext i32 %add34 to i64, !dbg !6539
  %39 = load i32*, i32** %block, align 8, !dbg !6539
  %arrayidx36 = getelementptr inbounds i32, i32* %39, i64 %idxprom35, !dbg !6539
  store i32 %add33, i32* %arrayidx36, align 4, !dbg !6540
  %40 = load i32, i32* %z1, align 4, !dbg !6541
  %41 = load i32, i32* %z2, align 4, !dbg !6542
  %sub37 = sub i32 %40, %41, !dbg !6543
  %42 = load i32, i32* %i, align 4, !dbg !6544
  %add38 = add nsw i32 %42, 8, !dbg !6545
  %idxprom39 = sext i32 %add38 to i64, !dbg !6546
  %43 = load i32*, i32** %block, align 8, !dbg !6546
  %arrayidx40 = getelementptr inbounds i32, i32* %43, i64 %idxprom39, !dbg !6546
  store i32 %sub37, i32* %arrayidx40, align 4, !dbg !6547
  %44 = load i32, i32* %z0, align 4, !dbg !6548
  %45 = load i32, i32* %z3, align 4, !dbg !6549
  %sub41 = sub i32 %44, %45, !dbg !6550
  %46 = load i32, i32* %i, align 4, !dbg !6551
  %add42 = add nsw i32 %46, 12, !dbg !6552
  %idxprom43 = sext i32 %add42 to i64, !dbg !6553
  %47 = load i32*, i32** %block, align 8, !dbg !6553
  %arrayidx44 = getelementptr inbounds i32, i32* %47, i64 %idxprom43, !dbg !6553
  store i32 %sub41, i32* %arrayidx44, align 4, !dbg !6554
  br label %for.inc, !dbg !6555

for.inc:                                          ; preds = %for.body
  %48 = load i32, i32* %i, align 4, !dbg !6556
  %inc = add nsw i32 %48, 1, !dbg !6556
  store i32 %inc, i32* %i, align 4, !dbg !6556
  br label %for.cond, !dbg !6558, !llvm.loop !6559

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6561
  br label %for.cond45, !dbg !6562

for.cond45:                                       ; preds = %for.inc143, %for.end
  %49 = load i32, i32* %i, align 4, !dbg !6563
  %cmp46 = icmp slt i32 %49, 4, !dbg !6565
  br i1 %cmp46, label %for.body47, label %for.end145, !dbg !6566

for.body47:                                       ; preds = %for.cond45
  call void @llvm.dbg.declare(metadata i32* %z048, metadata !6567, metadata !67), !dbg !6568
  %50 = load i32, i32* %i, align 4, !dbg !6569
  %mul = mul nsw i32 4, %50, !dbg !6570
  %add49 = add nsw i32 0, %mul, !dbg !6571
  %idxprom50 = sext i32 %add49 to i64, !dbg !6572
  %51 = load i32*, i32** %block, align 8, !dbg !6572
  %arrayidx51 = getelementptr inbounds i32, i32* %51, i64 %idxprom50, !dbg !6572
  %52 = load i32, i32* %arrayidx51, align 4, !dbg !6572
  %53 = load i32, i32* %i, align 4, !dbg !6573
  %mul52 = mul nsw i32 4, %53, !dbg !6574
  %add53 = add nsw i32 2, %mul52, !dbg !6575
  %idxprom54 = sext i32 %add53 to i64, !dbg !6576
  %54 = load i32*, i32** %block, align 8, !dbg !6576
  %arrayidx55 = getelementptr inbounds i32, i32* %54, i64 %idxprom54, !dbg !6576
  %55 = load i32, i32* %arrayidx55, align 4, !dbg !6576
  %add56 = add i32 %52, %55, !dbg !6577
  store i32 %add56, i32* %z048, align 4, !dbg !6568
  call void @llvm.dbg.declare(metadata i32* %z157, metadata !6578, metadata !67), !dbg !6579
  %56 = load i32, i32* %i, align 4, !dbg !6580
  %mul58 = mul nsw i32 4, %56, !dbg !6581
  %add59 = add nsw i32 0, %mul58, !dbg !6582
  %idxprom60 = sext i32 %add59 to i64, !dbg !6583
  %57 = load i32*, i32** %block, align 8, !dbg !6583
  %arrayidx61 = getelementptr inbounds i32, i32* %57, i64 %idxprom60, !dbg !6583
  %58 = load i32, i32* %arrayidx61, align 4, !dbg !6583
  %59 = load i32, i32* %i, align 4, !dbg !6584
  %mul62 = mul nsw i32 4, %59, !dbg !6585
  %add63 = add nsw i32 2, %mul62, !dbg !6586
  %idxprom64 = sext i32 %add63 to i64, !dbg !6587
  %60 = load i32*, i32** %block, align 8, !dbg !6587
  %arrayidx65 = getelementptr inbounds i32, i32* %60, i64 %idxprom64, !dbg !6587
  %61 = load i32, i32* %arrayidx65, align 4, !dbg !6587
  %sub66 = sub i32 %58, %61, !dbg !6588
  store i32 %sub66, i32* %z157, align 4, !dbg !6579
  call void @llvm.dbg.declare(metadata i32* %z267, metadata !6589, metadata !67), !dbg !6590
  %62 = load i32, i32* %i, align 4, !dbg !6591
  %mul68 = mul nsw i32 4, %62, !dbg !6592
  %add69 = add nsw i32 1, %mul68, !dbg !6593
  %idxprom70 = sext i32 %add69 to i64, !dbg !6594
  %63 = load i32*, i32** %block, align 8, !dbg !6594
  %arrayidx71 = getelementptr inbounds i32, i32* %63, i64 %idxprom70, !dbg !6594
  %64 = load i32, i32* %arrayidx71, align 4, !dbg !6594
  %shr72 = ashr i32 %64, 1, !dbg !6595
  %65 = load i32, i32* %i, align 4, !dbg !6596
  %mul73 = mul nsw i32 4, %65, !dbg !6597
  %add74 = add nsw i32 3, %mul73, !dbg !6598
  %idxprom75 = sext i32 %add74 to i64, !dbg !6599
  %66 = load i32*, i32** %block, align 8, !dbg !6599
  %arrayidx76 = getelementptr inbounds i32, i32* %66, i64 %idxprom75, !dbg !6599
  %67 = load i32, i32* %arrayidx76, align 4, !dbg !6599
  %sub77 = sub i32 %shr72, %67, !dbg !6600
  store i32 %sub77, i32* %z267, align 4, !dbg !6590
  call void @llvm.dbg.declare(metadata i32* %z378, metadata !6601, metadata !67), !dbg !6602
  %68 = load i32, i32* %i, align 4, !dbg !6603
  %mul79 = mul nsw i32 4, %68, !dbg !6604
  %add80 = add nsw i32 1, %mul79, !dbg !6605
  %idxprom81 = sext i32 %add80 to i64, !dbg !6606
  %69 = load i32*, i32** %block, align 8, !dbg !6606
  %arrayidx82 = getelementptr inbounds i32, i32* %69, i64 %idxprom81, !dbg !6606
  %70 = load i32, i32* %arrayidx82, align 4, !dbg !6606
  %71 = load i32, i32* %i, align 4, !dbg !6607
  %mul83 = mul nsw i32 4, %71, !dbg !6608
  %add84 = add nsw i32 3, %mul83, !dbg !6609
  %idxprom85 = sext i32 %add84 to i64, !dbg !6610
  %72 = load i32*, i32** %block, align 8, !dbg !6610
  %arrayidx86 = getelementptr inbounds i32, i32* %72, i64 %idxprom85, !dbg !6610
  %73 = load i32, i32* %arrayidx86, align 4, !dbg !6610
  %shr87 = ashr i32 %73, 1, !dbg !6611
  %add88 = add i32 %70, %shr87, !dbg !6612
  store i32 %add88, i32* %z378, align 4, !dbg !6602
  %74 = load i32, i32* %i, align 4, !dbg !6613
  %75 = load i32, i32* %stride.addr, align 4, !dbg !6614
  %mul89 = mul nsw i32 0, %75, !dbg !6615
  %add90 = add nsw i32 %74, %mul89, !dbg !6616
  %idxprom91 = sext i32 %add90 to i64, !dbg !6617
  %76 = load i16*, i16** %dst, align 8, !dbg !6617
  %arrayidx92 = getelementptr inbounds i16, i16* %76, i64 %idxprom91, !dbg !6617
  %77 = load i16, i16* %arrayidx92, align 2, !dbg !6617
  %conv = zext i16 %77 to i32, !dbg !6617
  %78 = load i32, i32* %z048, align 4, !dbg !6618
  %79 = load i32, i32* %z378, align 4, !dbg !6619
  %add93 = add i32 %78, %79, !dbg !6620
  %shr94 = ashr i32 %add93, 6, !dbg !6621
  %add95 = add nsw i32 %conv, %shr94, !dbg !6622
  store i32 %add95, i32* %a.addr.i, align 4, !dbg !6623
  store i32 12, i32* %p.addr.i, align 4, !dbg !6623
  %80 = load i32, i32* %a.addr.i, align 4, !dbg !6624
  %81 = load i32, i32* %p.addr.i, align 4, !dbg !6625
  %shl.i = shl i32 1, %81, !dbg !6626
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !6627
  %neg.i = xor i32 %sub.i, -1, !dbg !6628
  %and.i = and i32 %80, %neg.i, !dbg !6629
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !6629
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !6630

if.then.i:                                        ; preds = %for.body47
  %82 = load i32, i32* %a.addr.i, align 4, !dbg !6631
  %neg1.i = xor i32 %82, -1, !dbg !6632
  %shr.i = ashr i32 %neg1.i, 31, !dbg !6633
  %83 = load i32, i32* %p.addr.i, align 4, !dbg !6634
  %shl2.i = shl i32 1, %83, !dbg !6635
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !6636
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !6637
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !6638
  br label %av_clip_uintp2_c.exit, !dbg !6638

if.else.i:                                        ; preds = %for.body47
  %84 = load i32, i32* %a.addr.i, align 4, !dbg !6639
  store i32 %84, i32* %retval.i, align 4, !dbg !6640
  br label %av_clip_uintp2_c.exit, !dbg !6640

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %85 = load i32, i32* %retval.i, align 4, !dbg !6641
  %conv96 = trunc i32 %85 to i16, !dbg !6623
  %86 = load i32, i32* %i, align 4, !dbg !6642
  %87 = load i32, i32* %stride.addr, align 4, !dbg !6643
  %mul97 = mul nsw i32 0, %87, !dbg !6644
  %add98 = add nsw i32 %86, %mul97, !dbg !6645
  %idxprom99 = sext i32 %add98 to i64, !dbg !6646
  %88 = load i16*, i16** %dst, align 8, !dbg !6646
  %arrayidx100 = getelementptr inbounds i16, i16* %88, i64 %idxprom99, !dbg !6646
  store i16 %conv96, i16* %arrayidx100, align 2, !dbg !6647
  %89 = load i32, i32* %i, align 4, !dbg !6648
  %90 = load i32, i32* %stride.addr, align 4, !dbg !6649
  %mul101 = mul nsw i32 1, %90, !dbg !6650
  %add102 = add nsw i32 %89, %mul101, !dbg !6651
  %idxprom103 = sext i32 %add102 to i64, !dbg !6652
  %91 = load i16*, i16** %dst, align 8, !dbg !6652
  %arrayidx104 = getelementptr inbounds i16, i16* %91, i64 %idxprom103, !dbg !6652
  %92 = load i16, i16* %arrayidx104, align 2, !dbg !6652
  %conv105 = zext i16 %92 to i32, !dbg !6652
  %93 = load i32, i32* %z157, align 4, !dbg !6653
  %94 = load i32, i32* %z267, align 4, !dbg !6654
  %add106 = add i32 %93, %94, !dbg !6655
  %shr107 = ashr i32 %add106, 6, !dbg !6656
  %add108 = add nsw i32 %conv105, %shr107, !dbg !6657
  store i32 %add108, i32* %a.addr.i179, align 4, !dbg !6658
  store i32 12, i32* %p.addr.i180, align 4, !dbg !6658
  %95 = load i32, i32* %a.addr.i179, align 4, !dbg !6659
  %96 = load i32, i32* %p.addr.i180, align 4, !dbg !6660
  %shl.i181 = shl i32 1, %96, !dbg !6661
  %sub.i182 = sub nsw i32 %shl.i181, 1, !dbg !6662
  %neg.i183 = xor i32 %sub.i182, -1, !dbg !6663
  %and.i184 = and i32 %95, %neg.i183, !dbg !6664
  %tobool.i185 = icmp ne i32 %and.i184, 0, !dbg !6664
  br i1 %tobool.i185, label %if.then.i191, label %if.else.i192, !dbg !6665

if.then.i191:                                     ; preds = %av_clip_uintp2_c.exit
  %97 = load i32, i32* %a.addr.i179, align 4, !dbg !6666
  %neg1.i186 = xor i32 %97, -1, !dbg !6667
  %shr.i187 = ashr i32 %neg1.i186, 31, !dbg !6668
  %98 = load i32, i32* %p.addr.i180, align 4, !dbg !6669
  %shl2.i188 = shl i32 1, %98, !dbg !6670
  %sub3.i189 = sub nsw i32 %shl2.i188, 1, !dbg !6671
  %and4.i190 = and i32 %shr.i187, %sub3.i189, !dbg !6672
  store i32 %and4.i190, i32* %retval.i178, align 4, !dbg !6673
  br label %av_clip_uintp2_c.exit193, !dbg !6673

if.else.i192:                                     ; preds = %av_clip_uintp2_c.exit
  %99 = load i32, i32* %a.addr.i179, align 4, !dbg !6674
  store i32 %99, i32* %retval.i178, align 4, !dbg !6675
  br label %av_clip_uintp2_c.exit193, !dbg !6675

av_clip_uintp2_c.exit193:                         ; preds = %if.then.i191, %if.else.i192
  %100 = load i32, i32* %retval.i178, align 4, !dbg !6676
  %conv110 = trunc i32 %100 to i16, !dbg !6658
  %101 = load i32, i32* %i, align 4, !dbg !6677
  %102 = load i32, i32* %stride.addr, align 4, !dbg !6678
  %mul111 = mul nsw i32 1, %102, !dbg !6679
  %add112 = add nsw i32 %101, %mul111, !dbg !6680
  %idxprom113 = sext i32 %add112 to i64, !dbg !6681
  %103 = load i16*, i16** %dst, align 8, !dbg !6681
  %arrayidx114 = getelementptr inbounds i16, i16* %103, i64 %idxprom113, !dbg !6681
  store i16 %conv110, i16* %arrayidx114, align 2, !dbg !6682
  %104 = load i32, i32* %i, align 4, !dbg !6683
  %105 = load i32, i32* %stride.addr, align 4, !dbg !6684
  %mul115 = mul nsw i32 2, %105, !dbg !6685
  %add116 = add nsw i32 %104, %mul115, !dbg !6686
  %idxprom117 = sext i32 %add116 to i64, !dbg !6687
  %106 = load i16*, i16** %dst, align 8, !dbg !6687
  %arrayidx118 = getelementptr inbounds i16, i16* %106, i64 %idxprom117, !dbg !6687
  %107 = load i16, i16* %arrayidx118, align 2, !dbg !6687
  %conv119 = zext i16 %107 to i32, !dbg !6687
  %108 = load i32, i32* %z157, align 4, !dbg !6688
  %109 = load i32, i32* %z267, align 4, !dbg !6689
  %sub120 = sub i32 %108, %109, !dbg !6690
  %shr121 = ashr i32 %sub120, 6, !dbg !6691
  %add122 = add nsw i32 %conv119, %shr121, !dbg !6692
  store i32 %add122, i32* %a.addr.i163, align 4, !dbg !6693
  store i32 12, i32* %p.addr.i164, align 4, !dbg !6693
  %110 = load i32, i32* %a.addr.i163, align 4, !dbg !6694
  %111 = load i32, i32* %p.addr.i164, align 4, !dbg !6695
  %shl.i165 = shl i32 1, %111, !dbg !6696
  %sub.i166 = sub nsw i32 %shl.i165, 1, !dbg !6697
  %neg.i167 = xor i32 %sub.i166, -1, !dbg !6698
  %and.i168 = and i32 %110, %neg.i167, !dbg !6699
  %tobool.i169 = icmp ne i32 %and.i168, 0, !dbg !6699
  br i1 %tobool.i169, label %if.then.i175, label %if.else.i176, !dbg !6700

if.then.i175:                                     ; preds = %av_clip_uintp2_c.exit193
  %112 = load i32, i32* %a.addr.i163, align 4, !dbg !6701
  %neg1.i170 = xor i32 %112, -1, !dbg !6702
  %shr.i171 = ashr i32 %neg1.i170, 31, !dbg !6703
  %113 = load i32, i32* %p.addr.i164, align 4, !dbg !6704
  %shl2.i172 = shl i32 1, %113, !dbg !6705
  %sub3.i173 = sub nsw i32 %shl2.i172, 1, !dbg !6706
  %and4.i174 = and i32 %shr.i171, %sub3.i173, !dbg !6707
  store i32 %and4.i174, i32* %retval.i162, align 4, !dbg !6708
  br label %av_clip_uintp2_c.exit177, !dbg !6708

if.else.i176:                                     ; preds = %av_clip_uintp2_c.exit193
  %114 = load i32, i32* %a.addr.i163, align 4, !dbg !6709
  store i32 %114, i32* %retval.i162, align 4, !dbg !6710
  br label %av_clip_uintp2_c.exit177, !dbg !6710

av_clip_uintp2_c.exit177:                         ; preds = %if.then.i175, %if.else.i176
  %115 = load i32, i32* %retval.i162, align 4, !dbg !6711
  %conv124 = trunc i32 %115 to i16, !dbg !6693
  %116 = load i32, i32* %i, align 4, !dbg !6712
  %117 = load i32, i32* %stride.addr, align 4, !dbg !6713
  %mul125 = mul nsw i32 2, %117, !dbg !6714
  %add126 = add nsw i32 %116, %mul125, !dbg !6715
  %idxprom127 = sext i32 %add126 to i64, !dbg !6716
  %118 = load i16*, i16** %dst, align 8, !dbg !6716
  %arrayidx128 = getelementptr inbounds i16, i16* %118, i64 %idxprom127, !dbg !6716
  store i16 %conv124, i16* %arrayidx128, align 2, !dbg !6717
  %119 = load i32, i32* %i, align 4, !dbg !6718
  %120 = load i32, i32* %stride.addr, align 4, !dbg !6719
  %mul129 = mul nsw i32 3, %120, !dbg !6720
  %add130 = add nsw i32 %119, %mul129, !dbg !6721
  %idxprom131 = sext i32 %add130 to i64, !dbg !6722
  %121 = load i16*, i16** %dst, align 8, !dbg !6722
  %arrayidx132 = getelementptr inbounds i16, i16* %121, i64 %idxprom131, !dbg !6722
  %122 = load i16, i16* %arrayidx132, align 2, !dbg !6722
  %conv133 = zext i16 %122 to i32, !dbg !6722
  %123 = load i32, i32* %z048, align 4, !dbg !6723
  %124 = load i32, i32* %z378, align 4, !dbg !6724
  %sub134 = sub i32 %123, %124, !dbg !6725
  %shr135 = ashr i32 %sub134, 6, !dbg !6726
  %add136 = add nsw i32 %conv133, %shr135, !dbg !6727
  store i32 %add136, i32* %a.addr.i147, align 4, !dbg !6728
  store i32 12, i32* %p.addr.i148, align 4, !dbg !6728
  %125 = load i32, i32* %a.addr.i147, align 4, !dbg !6729
  %126 = load i32, i32* %p.addr.i148, align 4, !dbg !6730
  %shl.i149 = shl i32 1, %126, !dbg !6731
  %sub.i150 = sub nsw i32 %shl.i149, 1, !dbg !6732
  %neg.i151 = xor i32 %sub.i150, -1, !dbg !6733
  %and.i152 = and i32 %125, %neg.i151, !dbg !6734
  %tobool.i153 = icmp ne i32 %and.i152, 0, !dbg !6734
  br i1 %tobool.i153, label %if.then.i159, label %if.else.i160, !dbg !6735

if.then.i159:                                     ; preds = %av_clip_uintp2_c.exit177
  %127 = load i32, i32* %a.addr.i147, align 4, !dbg !6736
  %neg1.i154 = xor i32 %127, -1, !dbg !6737
  %shr.i155 = ashr i32 %neg1.i154, 31, !dbg !6738
  %128 = load i32, i32* %p.addr.i148, align 4, !dbg !6739
  %shl2.i156 = shl i32 1, %128, !dbg !6740
  %sub3.i157 = sub nsw i32 %shl2.i156, 1, !dbg !6741
  %and4.i158 = and i32 %shr.i155, %sub3.i157, !dbg !6742
  store i32 %and4.i158, i32* %retval.i146, align 4, !dbg !6743
  br label %av_clip_uintp2_c.exit161, !dbg !6743

if.else.i160:                                     ; preds = %av_clip_uintp2_c.exit177
  %129 = load i32, i32* %a.addr.i147, align 4, !dbg !6744
  store i32 %129, i32* %retval.i146, align 4, !dbg !6745
  br label %av_clip_uintp2_c.exit161, !dbg !6745

av_clip_uintp2_c.exit161:                         ; preds = %if.then.i159, %if.else.i160
  %130 = load i32, i32* %retval.i146, align 4, !dbg !6746
  %conv138 = trunc i32 %130 to i16, !dbg !6728
  %131 = load i32, i32* %i, align 4, !dbg !6747
  %132 = load i32, i32* %stride.addr, align 4, !dbg !6748
  %mul139 = mul nsw i32 3, %132, !dbg !6749
  %add140 = add nsw i32 %131, %mul139, !dbg !6750
  %idxprom141 = sext i32 %add140 to i64, !dbg !6751
  %133 = load i16*, i16** %dst, align 8, !dbg !6751
  %arrayidx142 = getelementptr inbounds i16, i16* %133, i64 %idxprom141, !dbg !6751
  store i16 %conv138, i16* %arrayidx142, align 2, !dbg !6752
  br label %for.inc143, !dbg !6753

for.inc143:                                       ; preds = %av_clip_uintp2_c.exit161
  %134 = load i32, i32* %i, align 4, !dbg !6754
  %inc144 = add nsw i32 %134, 1, !dbg !6754
  store i32 %inc144, i32* %i, align 4, !dbg !6754
  br label %for.cond45, !dbg !6756, !llvm.loop !6757

for.end145:                                       ; preds = %for.cond45
  %135 = load i32*, i32** %block, align 8, !dbg !6759
  %136 = bitcast i32* %135 to i8*, !dbg !6760
  call void @llvm.memset.p0i8.i64(i8* %136, i8 0, i64 64, i32 4, i1 false), !dbg !6760
  ret void, !dbg !6761
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_add_12_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !6762 {
entry:
  %retval.i498 = alloca i32, align 4
  %a.addr.i499 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i499, metadata !2143, metadata !67), !dbg !6763
  %p.addr.i500 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i500, metadata !2152, metadata !67), !dbg !6768
  %retval.i482 = alloca i32, align 4
  %a.addr.i483 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i483, metadata !2143, metadata !67), !dbg !6769
  %p.addr.i484 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i484, metadata !2152, metadata !67), !dbg !6771
  %retval.i466 = alloca i32, align 4
  %a.addr.i467 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i467, metadata !2143, metadata !67), !dbg !6772
  %p.addr.i468 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i468, metadata !2152, metadata !67), !dbg !6774
  %retval.i450 = alloca i32, align 4
  %a.addr.i451 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i451, metadata !2143, metadata !67), !dbg !6775
  %p.addr.i452 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i452, metadata !2152, metadata !67), !dbg !6777
  %retval.i434 = alloca i32, align 4
  %a.addr.i435 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i435, metadata !2143, metadata !67), !dbg !6778
  %p.addr.i436 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i436, metadata !2152, metadata !67), !dbg !6780
  %retval.i418 = alloca i32, align 4
  %a.addr.i419 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i419, metadata !2143, metadata !67), !dbg !6781
  %p.addr.i420 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i420, metadata !2152, metadata !67), !dbg !6783
  %retval.i402 = alloca i32, align 4
  %a.addr.i403 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i403, metadata !2143, metadata !67), !dbg !6784
  %p.addr.i404 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i404, metadata !2152, metadata !67), !dbg !6786
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !6787
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !6789
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %a0 = alloca i32, align 4
  %a2 = alloca i32, align 4
  %a4 = alloca i32, align 4
  %a6 = alloca i32, align 4
  %b0 = alloca i32, align 4
  %b2 = alloca i32, align 4
  %b4 = alloca i32, align 4
  %b6 = alloca i32, align 4
  %a1 = alloca i32, align 4
  %a3 = alloca i32, align 4
  %a5 = alloca i32, align 4
  %a7 = alloca i32, align 4
  %b1 = alloca i32, align 4
  %b3 = alloca i32, align 4
  %b5 = alloca i32, align 4
  %b7 = alloca i32, align 4
  %a0142 = alloca i32, align 4
  %a2151 = alloca i32, align 4
  %a4161 = alloca i32, align 4
  %a6172 = alloca i32, align 4
  %b0183 = alloca i32, align 4
  %b2185 = alloca i32, align 4
  %b4187 = alloca i32, align 4
  %b6189 = alloca i32, align 4
  %a1191 = alloca i32, align 4
  %a3213 = alloca i32, align 4
  %a5234 = alloca i32, align 4
  %a7256 = alloca i32, align 4
  %b1277 = alloca i32, align 4
  %b3280 = alloca i32, align 4
  %b5283 = alloca i32, align 4
  %b7286 = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !6790, metadata !67), !dbg !6791
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !6792, metadata !67), !dbg !6793
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !6794, metadata !67), !dbg !6795
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6796, metadata !67), !dbg !6797
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !6798, metadata !67), !dbg !6799
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !6800
  %1 = bitcast i8* %0 to i16*, !dbg !6801
  store i16* %1, i16** %dst, align 8, !dbg !6799
  call void @llvm.dbg.declare(metadata i32** %block, metadata !6802, metadata !67), !dbg !6803
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !6804
  %3 = bitcast i16* %2 to i32*, !dbg !6805
  store i32* %3, i32** %block, align 8, !dbg !6803
  %4 = load i32, i32* %stride.addr, align 4, !dbg !6806
  %shr = ashr i32 %4, 1, !dbg !6806
  store i32 %shr, i32* %stride.addr, align 4, !dbg !6806
  %5 = load i32*, i32** %block, align 8, !dbg !6807
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !6807
  %6 = load i32, i32* %arrayidx, align 4, !dbg !6808
  %add = add nsw i32 %6, 32, !dbg !6808
  store i32 %add, i32* %arrayidx, align 4, !dbg !6808
  store i32 0, i32* %i, align 4, !dbg !6809
  br label %for.cond, !dbg !6811

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !6812
  %cmp = icmp slt i32 %7, 8, !dbg !6815
  br i1 %cmp, label %for.body, label %for.end, !dbg !6816

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %a0, metadata !6817, metadata !67), !dbg !6819
  %8 = load i32, i32* %i, align 4, !dbg !6820
  %add1 = add nsw i32 %8, 0, !dbg !6821
  %idxprom = sext i32 %add1 to i64, !dbg !6822
  %9 = load i32*, i32** %block, align 8, !dbg !6822
  %arrayidx2 = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !6822
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !6822
  %11 = load i32, i32* %i, align 4, !dbg !6823
  %add3 = add nsw i32 %11, 32, !dbg !6824
  %idxprom4 = sext i32 %add3 to i64, !dbg !6825
  %12 = load i32*, i32** %block, align 8, !dbg !6825
  %arrayidx5 = getelementptr inbounds i32, i32* %12, i64 %idxprom4, !dbg !6825
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !6825
  %add6 = add i32 %10, %13, !dbg !6826
  store i32 %add6, i32* %a0, align 4, !dbg !6819
  call void @llvm.dbg.declare(metadata i32* %a2, metadata !6827, metadata !67), !dbg !6828
  %14 = load i32, i32* %i, align 4, !dbg !6829
  %add7 = add nsw i32 %14, 0, !dbg !6830
  %idxprom8 = sext i32 %add7 to i64, !dbg !6831
  %15 = load i32*, i32** %block, align 8, !dbg !6831
  %arrayidx9 = getelementptr inbounds i32, i32* %15, i64 %idxprom8, !dbg !6831
  %16 = load i32, i32* %arrayidx9, align 4, !dbg !6831
  %17 = load i32, i32* %i, align 4, !dbg !6832
  %add10 = add nsw i32 %17, 32, !dbg !6833
  %idxprom11 = sext i32 %add10 to i64, !dbg !6834
  %18 = load i32*, i32** %block, align 8, !dbg !6834
  %arrayidx12 = getelementptr inbounds i32, i32* %18, i64 %idxprom11, !dbg !6834
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !6834
  %sub = sub i32 %16, %19, !dbg !6835
  store i32 %sub, i32* %a2, align 4, !dbg !6828
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !6836, metadata !67), !dbg !6837
  %20 = load i32, i32* %i, align 4, !dbg !6838
  %add13 = add nsw i32 %20, 16, !dbg !6839
  %idxprom14 = sext i32 %add13 to i64, !dbg !6840
  %21 = load i32*, i32** %block, align 8, !dbg !6840
  %arrayidx15 = getelementptr inbounds i32, i32* %21, i64 %idxprom14, !dbg !6840
  %22 = load i32, i32* %arrayidx15, align 4, !dbg !6840
  %shr16 = ashr i32 %22, 1, !dbg !6841
  %23 = load i32, i32* %i, align 4, !dbg !6842
  %add17 = add nsw i32 %23, 48, !dbg !6843
  %idxprom18 = sext i32 %add17 to i64, !dbg !6844
  %24 = load i32*, i32** %block, align 8, !dbg !6844
  %arrayidx19 = getelementptr inbounds i32, i32* %24, i64 %idxprom18, !dbg !6844
  %25 = load i32, i32* %arrayidx19, align 4, !dbg !6844
  %sub20 = sub i32 %shr16, %25, !dbg !6845
  store i32 %sub20, i32* %a4, align 4, !dbg !6837
  call void @llvm.dbg.declare(metadata i32* %a6, metadata !6846, metadata !67), !dbg !6847
  %26 = load i32, i32* %i, align 4, !dbg !6848
  %add21 = add nsw i32 %26, 48, !dbg !6849
  %idxprom22 = sext i32 %add21 to i64, !dbg !6850
  %27 = load i32*, i32** %block, align 8, !dbg !6850
  %arrayidx23 = getelementptr inbounds i32, i32* %27, i64 %idxprom22, !dbg !6850
  %28 = load i32, i32* %arrayidx23, align 4, !dbg !6850
  %shr24 = ashr i32 %28, 1, !dbg !6851
  %29 = load i32, i32* %i, align 4, !dbg !6852
  %add25 = add nsw i32 %29, 16, !dbg !6853
  %idxprom26 = sext i32 %add25 to i64, !dbg !6854
  %30 = load i32*, i32** %block, align 8, !dbg !6854
  %arrayidx27 = getelementptr inbounds i32, i32* %30, i64 %idxprom26, !dbg !6854
  %31 = load i32, i32* %arrayidx27, align 4, !dbg !6854
  %add28 = add i32 %shr24, %31, !dbg !6855
  store i32 %add28, i32* %a6, align 4, !dbg !6847
  call void @llvm.dbg.declare(metadata i32* %b0, metadata !6856, metadata !67), !dbg !6857
  %32 = load i32, i32* %a0, align 4, !dbg !6858
  %33 = load i32, i32* %a6, align 4, !dbg !6859
  %add29 = add i32 %32, %33, !dbg !6860
  store i32 %add29, i32* %b0, align 4, !dbg !6857
  call void @llvm.dbg.declare(metadata i32* %b2, metadata !6861, metadata !67), !dbg !6862
  %34 = load i32, i32* %a2, align 4, !dbg !6863
  %35 = load i32, i32* %a4, align 4, !dbg !6864
  %add30 = add i32 %34, %35, !dbg !6865
  store i32 %add30, i32* %b2, align 4, !dbg !6862
  call void @llvm.dbg.declare(metadata i32* %b4, metadata !6866, metadata !67), !dbg !6867
  %36 = load i32, i32* %a2, align 4, !dbg !6868
  %37 = load i32, i32* %a4, align 4, !dbg !6869
  %sub31 = sub i32 %36, %37, !dbg !6870
  store i32 %sub31, i32* %b4, align 4, !dbg !6867
  call void @llvm.dbg.declare(metadata i32* %b6, metadata !6871, metadata !67), !dbg !6872
  %38 = load i32, i32* %a0, align 4, !dbg !6873
  %39 = load i32, i32* %a6, align 4, !dbg !6874
  %sub32 = sub i32 %38, %39, !dbg !6875
  store i32 %sub32, i32* %b6, align 4, !dbg !6872
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !6876, metadata !67), !dbg !6877
  %40 = load i32, i32* %i, align 4, !dbg !6878
  %add33 = add nsw i32 %40, 24, !dbg !6879
  %idxprom34 = sext i32 %add33 to i64, !dbg !6880
  %41 = load i32*, i32** %block, align 8, !dbg !6880
  %arrayidx35 = getelementptr inbounds i32, i32* %41, i64 %idxprom34, !dbg !6880
  %42 = load i32, i32* %arrayidx35, align 4, !dbg !6880
  %sub36 = sub nsw i32 0, %42, !dbg !6881
  %43 = load i32, i32* %i, align 4, !dbg !6882
  %add37 = add nsw i32 %43, 40, !dbg !6883
  %idxprom38 = sext i32 %add37 to i64, !dbg !6884
  %44 = load i32*, i32** %block, align 8, !dbg !6884
  %arrayidx39 = getelementptr inbounds i32, i32* %44, i64 %idxprom38, !dbg !6884
  %45 = load i32, i32* %arrayidx39, align 4, !dbg !6884
  %add40 = add i32 %sub36, %45, !dbg !6885
  %46 = load i32, i32* %i, align 4, !dbg !6886
  %add41 = add nsw i32 %46, 56, !dbg !6887
  %idxprom42 = sext i32 %add41 to i64, !dbg !6888
  %47 = load i32*, i32** %block, align 8, !dbg !6888
  %arrayidx43 = getelementptr inbounds i32, i32* %47, i64 %idxprom42, !dbg !6888
  %48 = load i32, i32* %arrayidx43, align 4, !dbg !6888
  %sub44 = sub i32 %add40, %48, !dbg !6889
  %49 = load i32, i32* %i, align 4, !dbg !6890
  %add45 = add nsw i32 %49, 56, !dbg !6891
  %idxprom46 = sext i32 %add45 to i64, !dbg !6892
  %50 = load i32*, i32** %block, align 8, !dbg !6892
  %arrayidx47 = getelementptr inbounds i32, i32* %50, i64 %idxprom46, !dbg !6892
  %51 = load i32, i32* %arrayidx47, align 4, !dbg !6892
  %shr48 = ashr i32 %51, 1, !dbg !6893
  %sub49 = sub i32 %sub44, %shr48, !dbg !6894
  store i32 %sub49, i32* %a1, align 4, !dbg !6877
  call void @llvm.dbg.declare(metadata i32* %a3, metadata !6895, metadata !67), !dbg !6896
  %52 = load i32, i32* %i, align 4, !dbg !6897
  %add50 = add nsw i32 %52, 8, !dbg !6898
  %idxprom51 = sext i32 %add50 to i64, !dbg !6899
  %53 = load i32*, i32** %block, align 8, !dbg !6899
  %arrayidx52 = getelementptr inbounds i32, i32* %53, i64 %idxprom51, !dbg !6899
  %54 = load i32, i32* %arrayidx52, align 4, !dbg !6899
  %55 = load i32, i32* %i, align 4, !dbg !6900
  %add53 = add nsw i32 %55, 56, !dbg !6901
  %idxprom54 = sext i32 %add53 to i64, !dbg !6902
  %56 = load i32*, i32** %block, align 8, !dbg !6902
  %arrayidx55 = getelementptr inbounds i32, i32* %56, i64 %idxprom54, !dbg !6902
  %57 = load i32, i32* %arrayidx55, align 4, !dbg !6902
  %add56 = add i32 %54, %57, !dbg !6903
  %58 = load i32, i32* %i, align 4, !dbg !6904
  %add57 = add nsw i32 %58, 24, !dbg !6905
  %idxprom58 = sext i32 %add57 to i64, !dbg !6906
  %59 = load i32*, i32** %block, align 8, !dbg !6906
  %arrayidx59 = getelementptr inbounds i32, i32* %59, i64 %idxprom58, !dbg !6906
  %60 = load i32, i32* %arrayidx59, align 4, !dbg !6906
  %sub60 = sub i32 %add56, %60, !dbg !6907
  %61 = load i32, i32* %i, align 4, !dbg !6908
  %add61 = add nsw i32 %61, 24, !dbg !6909
  %idxprom62 = sext i32 %add61 to i64, !dbg !6910
  %62 = load i32*, i32** %block, align 8, !dbg !6910
  %arrayidx63 = getelementptr inbounds i32, i32* %62, i64 %idxprom62, !dbg !6910
  %63 = load i32, i32* %arrayidx63, align 4, !dbg !6910
  %shr64 = ashr i32 %63, 1, !dbg !6911
  %sub65 = sub i32 %sub60, %shr64, !dbg !6912
  store i32 %sub65, i32* %a3, align 4, !dbg !6896
  call void @llvm.dbg.declare(metadata i32* %a5, metadata !6913, metadata !67), !dbg !6914
  %64 = load i32, i32* %i, align 4, !dbg !6915
  %add66 = add nsw i32 %64, 8, !dbg !6916
  %idxprom67 = sext i32 %add66 to i64, !dbg !6917
  %65 = load i32*, i32** %block, align 8, !dbg !6917
  %arrayidx68 = getelementptr inbounds i32, i32* %65, i64 %idxprom67, !dbg !6917
  %66 = load i32, i32* %arrayidx68, align 4, !dbg !6917
  %sub69 = sub nsw i32 0, %66, !dbg !6918
  %67 = load i32, i32* %i, align 4, !dbg !6919
  %add70 = add nsw i32 %67, 56, !dbg !6920
  %idxprom71 = sext i32 %add70 to i64, !dbg !6921
  %68 = load i32*, i32** %block, align 8, !dbg !6921
  %arrayidx72 = getelementptr inbounds i32, i32* %68, i64 %idxprom71, !dbg !6921
  %69 = load i32, i32* %arrayidx72, align 4, !dbg !6921
  %add73 = add i32 %sub69, %69, !dbg !6922
  %70 = load i32, i32* %i, align 4, !dbg !6923
  %add74 = add nsw i32 %70, 40, !dbg !6924
  %idxprom75 = sext i32 %add74 to i64, !dbg !6925
  %71 = load i32*, i32** %block, align 8, !dbg !6925
  %arrayidx76 = getelementptr inbounds i32, i32* %71, i64 %idxprom75, !dbg !6925
  %72 = load i32, i32* %arrayidx76, align 4, !dbg !6925
  %add77 = add i32 %add73, %72, !dbg !6926
  %73 = load i32, i32* %i, align 4, !dbg !6927
  %add78 = add nsw i32 %73, 40, !dbg !6928
  %idxprom79 = sext i32 %add78 to i64, !dbg !6929
  %74 = load i32*, i32** %block, align 8, !dbg !6929
  %arrayidx80 = getelementptr inbounds i32, i32* %74, i64 %idxprom79, !dbg !6929
  %75 = load i32, i32* %arrayidx80, align 4, !dbg !6929
  %shr81 = ashr i32 %75, 1, !dbg !6930
  %add82 = add i32 %add77, %shr81, !dbg !6931
  store i32 %add82, i32* %a5, align 4, !dbg !6914
  call void @llvm.dbg.declare(metadata i32* %a7, metadata !6932, metadata !67), !dbg !6933
  %76 = load i32, i32* %i, align 4, !dbg !6934
  %add83 = add nsw i32 %76, 24, !dbg !6935
  %idxprom84 = sext i32 %add83 to i64, !dbg !6936
  %77 = load i32*, i32** %block, align 8, !dbg !6936
  %arrayidx85 = getelementptr inbounds i32, i32* %77, i64 %idxprom84, !dbg !6936
  %78 = load i32, i32* %arrayidx85, align 4, !dbg !6936
  %79 = load i32, i32* %i, align 4, !dbg !6937
  %add86 = add nsw i32 %79, 40, !dbg !6938
  %idxprom87 = sext i32 %add86 to i64, !dbg !6939
  %80 = load i32*, i32** %block, align 8, !dbg !6939
  %arrayidx88 = getelementptr inbounds i32, i32* %80, i64 %idxprom87, !dbg !6939
  %81 = load i32, i32* %arrayidx88, align 4, !dbg !6939
  %add89 = add i32 %78, %81, !dbg !6940
  %82 = load i32, i32* %i, align 4, !dbg !6941
  %add90 = add nsw i32 %82, 8, !dbg !6942
  %idxprom91 = sext i32 %add90 to i64, !dbg !6943
  %83 = load i32*, i32** %block, align 8, !dbg !6943
  %arrayidx92 = getelementptr inbounds i32, i32* %83, i64 %idxprom91, !dbg !6943
  %84 = load i32, i32* %arrayidx92, align 4, !dbg !6943
  %add93 = add i32 %add89, %84, !dbg !6944
  %85 = load i32, i32* %i, align 4, !dbg !6945
  %add94 = add nsw i32 %85, 8, !dbg !6946
  %idxprom95 = sext i32 %add94 to i64, !dbg !6947
  %86 = load i32*, i32** %block, align 8, !dbg !6947
  %arrayidx96 = getelementptr inbounds i32, i32* %86, i64 %idxprom95, !dbg !6947
  %87 = load i32, i32* %arrayidx96, align 4, !dbg !6947
  %shr97 = ashr i32 %87, 1, !dbg !6948
  %add98 = add i32 %add93, %shr97, !dbg !6949
  store i32 %add98, i32* %a7, align 4, !dbg !6933
  call void @llvm.dbg.declare(metadata i32* %b1, metadata !6950, metadata !67), !dbg !6951
  %88 = load i32, i32* %a7, align 4, !dbg !6952
  %shr99 = ashr i32 %88, 2, !dbg !6953
  %89 = load i32, i32* %a1, align 4, !dbg !6954
  %add100 = add i32 %shr99, %89, !dbg !6955
  store i32 %add100, i32* %b1, align 4, !dbg !6951
  call void @llvm.dbg.declare(metadata i32* %b3, metadata !6956, metadata !67), !dbg !6957
  %90 = load i32, i32* %a3, align 4, !dbg !6958
  %91 = load i32, i32* %a5, align 4, !dbg !6959
  %shr101 = ashr i32 %91, 2, !dbg !6960
  %add102 = add i32 %90, %shr101, !dbg !6961
  store i32 %add102, i32* %b3, align 4, !dbg !6957
  call void @llvm.dbg.declare(metadata i32* %b5, metadata !6962, metadata !67), !dbg !6963
  %92 = load i32, i32* %a3, align 4, !dbg !6964
  %shr103 = ashr i32 %92, 2, !dbg !6965
  %93 = load i32, i32* %a5, align 4, !dbg !6966
  %sub104 = sub i32 %shr103, %93, !dbg !6967
  store i32 %sub104, i32* %b5, align 4, !dbg !6963
  call void @llvm.dbg.declare(metadata i32* %b7, metadata !6968, metadata !67), !dbg !6969
  %94 = load i32, i32* %a7, align 4, !dbg !6970
  %95 = load i32, i32* %a1, align 4, !dbg !6971
  %shr105 = ashr i32 %95, 2, !dbg !6972
  %sub106 = sub i32 %94, %shr105, !dbg !6973
  store i32 %sub106, i32* %b7, align 4, !dbg !6969
  %96 = load i32, i32* %b0, align 4, !dbg !6974
  %97 = load i32, i32* %b7, align 4, !dbg !6975
  %add107 = add i32 %96, %97, !dbg !6976
  %98 = load i32, i32* %i, align 4, !dbg !6977
  %add108 = add nsw i32 %98, 0, !dbg !6978
  %idxprom109 = sext i32 %add108 to i64, !dbg !6979
  %99 = load i32*, i32** %block, align 8, !dbg !6979
  %arrayidx110 = getelementptr inbounds i32, i32* %99, i64 %idxprom109, !dbg !6979
  store i32 %add107, i32* %arrayidx110, align 4, !dbg !6980
  %100 = load i32, i32* %b0, align 4, !dbg !6981
  %101 = load i32, i32* %b7, align 4, !dbg !6982
  %sub111 = sub i32 %100, %101, !dbg !6983
  %102 = load i32, i32* %i, align 4, !dbg !6984
  %add112 = add nsw i32 %102, 56, !dbg !6985
  %idxprom113 = sext i32 %add112 to i64, !dbg !6986
  %103 = load i32*, i32** %block, align 8, !dbg !6986
  %arrayidx114 = getelementptr inbounds i32, i32* %103, i64 %idxprom113, !dbg !6986
  store i32 %sub111, i32* %arrayidx114, align 4, !dbg !6987
  %104 = load i32, i32* %b2, align 4, !dbg !6988
  %105 = load i32, i32* %b5, align 4, !dbg !6989
  %add115 = add i32 %104, %105, !dbg !6990
  %106 = load i32, i32* %i, align 4, !dbg !6991
  %add116 = add nsw i32 %106, 8, !dbg !6992
  %idxprom117 = sext i32 %add116 to i64, !dbg !6993
  %107 = load i32*, i32** %block, align 8, !dbg !6993
  %arrayidx118 = getelementptr inbounds i32, i32* %107, i64 %idxprom117, !dbg !6993
  store i32 %add115, i32* %arrayidx118, align 4, !dbg !6994
  %108 = load i32, i32* %b2, align 4, !dbg !6995
  %109 = load i32, i32* %b5, align 4, !dbg !6996
  %sub119 = sub i32 %108, %109, !dbg !6997
  %110 = load i32, i32* %i, align 4, !dbg !6998
  %add120 = add nsw i32 %110, 48, !dbg !6999
  %idxprom121 = sext i32 %add120 to i64, !dbg !7000
  %111 = load i32*, i32** %block, align 8, !dbg !7000
  %arrayidx122 = getelementptr inbounds i32, i32* %111, i64 %idxprom121, !dbg !7000
  store i32 %sub119, i32* %arrayidx122, align 4, !dbg !7001
  %112 = load i32, i32* %b4, align 4, !dbg !7002
  %113 = load i32, i32* %b3, align 4, !dbg !7003
  %add123 = add i32 %112, %113, !dbg !7004
  %114 = load i32, i32* %i, align 4, !dbg !7005
  %add124 = add nsw i32 %114, 16, !dbg !7006
  %idxprom125 = sext i32 %add124 to i64, !dbg !7007
  %115 = load i32*, i32** %block, align 8, !dbg !7007
  %arrayidx126 = getelementptr inbounds i32, i32* %115, i64 %idxprom125, !dbg !7007
  store i32 %add123, i32* %arrayidx126, align 4, !dbg !7008
  %116 = load i32, i32* %b4, align 4, !dbg !7009
  %117 = load i32, i32* %b3, align 4, !dbg !7010
  %sub127 = sub i32 %116, %117, !dbg !7011
  %118 = load i32, i32* %i, align 4, !dbg !7012
  %add128 = add nsw i32 %118, 40, !dbg !7013
  %idxprom129 = sext i32 %add128 to i64, !dbg !7014
  %119 = load i32*, i32** %block, align 8, !dbg !7014
  %arrayidx130 = getelementptr inbounds i32, i32* %119, i64 %idxprom129, !dbg !7014
  store i32 %sub127, i32* %arrayidx130, align 4, !dbg !7015
  %120 = load i32, i32* %b6, align 4, !dbg !7016
  %121 = load i32, i32* %b1, align 4, !dbg !7017
  %add131 = add i32 %120, %121, !dbg !7018
  %122 = load i32, i32* %i, align 4, !dbg !7019
  %add132 = add nsw i32 %122, 24, !dbg !7020
  %idxprom133 = sext i32 %add132 to i64, !dbg !7021
  %123 = load i32*, i32** %block, align 8, !dbg !7021
  %arrayidx134 = getelementptr inbounds i32, i32* %123, i64 %idxprom133, !dbg !7021
  store i32 %add131, i32* %arrayidx134, align 4, !dbg !7022
  %124 = load i32, i32* %b6, align 4, !dbg !7023
  %125 = load i32, i32* %b1, align 4, !dbg !7024
  %sub135 = sub i32 %124, %125, !dbg !7025
  %126 = load i32, i32* %i, align 4, !dbg !7026
  %add136 = add nsw i32 %126, 32, !dbg !7027
  %idxprom137 = sext i32 %add136 to i64, !dbg !7028
  %127 = load i32*, i32** %block, align 8, !dbg !7028
  %arrayidx138 = getelementptr inbounds i32, i32* %127, i64 %idxprom137, !dbg !7028
  store i32 %sub135, i32* %arrayidx138, align 4, !dbg !7029
  br label %for.inc, !dbg !7030

for.inc:                                          ; preds = %for.body
  %128 = load i32, i32* %i, align 4, !dbg !7031
  %inc = add nsw i32 %128, 1, !dbg !7031
  store i32 %inc, i32* %i, align 4, !dbg !7031
  br label %for.cond, !dbg !7033, !llvm.loop !7034

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7036
  br label %for.cond139, !dbg !7037

for.cond139:                                      ; preds = %for.inc399, %for.end
  %129 = load i32, i32* %i, align 4, !dbg !7038
  %cmp140 = icmp slt i32 %129, 8, !dbg !7040
  br i1 %cmp140, label %for.body141, label %for.end401, !dbg !7041

for.body141:                                      ; preds = %for.cond139
  call void @llvm.dbg.declare(metadata i32* %a0142, metadata !7042, metadata !67), !dbg !7043
  %130 = load i32, i32* %i, align 4, !dbg !7044
  %mul = mul nsw i32 %130, 8, !dbg !7045
  %add143 = add nsw i32 0, %mul, !dbg !7046
  %idxprom144 = sext i32 %add143 to i64, !dbg !7047
  %131 = load i32*, i32** %block, align 8, !dbg !7047
  %arrayidx145 = getelementptr inbounds i32, i32* %131, i64 %idxprom144, !dbg !7047
  %132 = load i32, i32* %arrayidx145, align 4, !dbg !7047
  %133 = load i32, i32* %i, align 4, !dbg !7048
  %mul146 = mul nsw i32 %133, 8, !dbg !7049
  %add147 = add nsw i32 4, %mul146, !dbg !7050
  %idxprom148 = sext i32 %add147 to i64, !dbg !7051
  %134 = load i32*, i32** %block, align 8, !dbg !7051
  %arrayidx149 = getelementptr inbounds i32, i32* %134, i64 %idxprom148, !dbg !7051
  %135 = load i32, i32* %arrayidx149, align 4, !dbg !7051
  %add150 = add i32 %132, %135, !dbg !7052
  store i32 %add150, i32* %a0142, align 4, !dbg !7043
  call void @llvm.dbg.declare(metadata i32* %a2151, metadata !7053, metadata !67), !dbg !7054
  %136 = load i32, i32* %i, align 4, !dbg !7055
  %mul152 = mul nsw i32 %136, 8, !dbg !7056
  %add153 = add nsw i32 0, %mul152, !dbg !7057
  %idxprom154 = sext i32 %add153 to i64, !dbg !7058
  %137 = load i32*, i32** %block, align 8, !dbg !7058
  %arrayidx155 = getelementptr inbounds i32, i32* %137, i64 %idxprom154, !dbg !7058
  %138 = load i32, i32* %arrayidx155, align 4, !dbg !7058
  %139 = load i32, i32* %i, align 4, !dbg !7059
  %mul156 = mul nsw i32 %139, 8, !dbg !7060
  %add157 = add nsw i32 4, %mul156, !dbg !7061
  %idxprom158 = sext i32 %add157 to i64, !dbg !7062
  %140 = load i32*, i32** %block, align 8, !dbg !7062
  %arrayidx159 = getelementptr inbounds i32, i32* %140, i64 %idxprom158, !dbg !7062
  %141 = load i32, i32* %arrayidx159, align 4, !dbg !7062
  %sub160 = sub i32 %138, %141, !dbg !7063
  store i32 %sub160, i32* %a2151, align 4, !dbg !7054
  call void @llvm.dbg.declare(metadata i32* %a4161, metadata !7064, metadata !67), !dbg !7065
  %142 = load i32, i32* %i, align 4, !dbg !7066
  %mul162 = mul nsw i32 %142, 8, !dbg !7067
  %add163 = add nsw i32 2, %mul162, !dbg !7068
  %idxprom164 = sext i32 %add163 to i64, !dbg !7069
  %143 = load i32*, i32** %block, align 8, !dbg !7069
  %arrayidx165 = getelementptr inbounds i32, i32* %143, i64 %idxprom164, !dbg !7069
  %144 = load i32, i32* %arrayidx165, align 4, !dbg !7069
  %shr166 = ashr i32 %144, 1, !dbg !7070
  %145 = load i32, i32* %i, align 4, !dbg !7071
  %mul167 = mul nsw i32 %145, 8, !dbg !7072
  %add168 = add nsw i32 6, %mul167, !dbg !7073
  %idxprom169 = sext i32 %add168 to i64, !dbg !7074
  %146 = load i32*, i32** %block, align 8, !dbg !7074
  %arrayidx170 = getelementptr inbounds i32, i32* %146, i64 %idxprom169, !dbg !7074
  %147 = load i32, i32* %arrayidx170, align 4, !dbg !7074
  %sub171 = sub i32 %shr166, %147, !dbg !7075
  store i32 %sub171, i32* %a4161, align 4, !dbg !7065
  call void @llvm.dbg.declare(metadata i32* %a6172, metadata !7076, metadata !67), !dbg !7077
  %148 = load i32, i32* %i, align 4, !dbg !7078
  %mul173 = mul nsw i32 %148, 8, !dbg !7079
  %add174 = add nsw i32 6, %mul173, !dbg !7080
  %idxprom175 = sext i32 %add174 to i64, !dbg !7081
  %149 = load i32*, i32** %block, align 8, !dbg !7081
  %arrayidx176 = getelementptr inbounds i32, i32* %149, i64 %idxprom175, !dbg !7081
  %150 = load i32, i32* %arrayidx176, align 4, !dbg !7081
  %shr177 = ashr i32 %150, 1, !dbg !7082
  %151 = load i32, i32* %i, align 4, !dbg !7083
  %mul178 = mul nsw i32 %151, 8, !dbg !7084
  %add179 = add nsw i32 2, %mul178, !dbg !7085
  %idxprom180 = sext i32 %add179 to i64, !dbg !7086
  %152 = load i32*, i32** %block, align 8, !dbg !7086
  %arrayidx181 = getelementptr inbounds i32, i32* %152, i64 %idxprom180, !dbg !7086
  %153 = load i32, i32* %arrayidx181, align 4, !dbg !7086
  %add182 = add i32 %shr177, %153, !dbg !7087
  store i32 %add182, i32* %a6172, align 4, !dbg !7077
  call void @llvm.dbg.declare(metadata i32* %b0183, metadata !7088, metadata !67), !dbg !7089
  %154 = load i32, i32* %a0142, align 4, !dbg !7090
  %155 = load i32, i32* %a6172, align 4, !dbg !7091
  %add184 = add i32 %154, %155, !dbg !7092
  store i32 %add184, i32* %b0183, align 4, !dbg !7089
  call void @llvm.dbg.declare(metadata i32* %b2185, metadata !7093, metadata !67), !dbg !7094
  %156 = load i32, i32* %a2151, align 4, !dbg !7095
  %157 = load i32, i32* %a4161, align 4, !dbg !7096
  %add186 = add i32 %156, %157, !dbg !7097
  store i32 %add186, i32* %b2185, align 4, !dbg !7094
  call void @llvm.dbg.declare(metadata i32* %b4187, metadata !7098, metadata !67), !dbg !7099
  %158 = load i32, i32* %a2151, align 4, !dbg !7100
  %159 = load i32, i32* %a4161, align 4, !dbg !7101
  %sub188 = sub i32 %158, %159, !dbg !7102
  store i32 %sub188, i32* %b4187, align 4, !dbg !7099
  call void @llvm.dbg.declare(metadata i32* %b6189, metadata !7103, metadata !67), !dbg !7104
  %160 = load i32, i32* %a0142, align 4, !dbg !7105
  %161 = load i32, i32* %a6172, align 4, !dbg !7106
  %sub190 = sub i32 %160, %161, !dbg !7107
  store i32 %sub190, i32* %b6189, align 4, !dbg !7104
  call void @llvm.dbg.declare(metadata i32* %a1191, metadata !7108, metadata !67), !dbg !7109
  %162 = load i32, i32* %i, align 4, !dbg !7110
  %mul192 = mul nsw i32 %162, 8, !dbg !7111
  %add193 = add nsw i32 3, %mul192, !dbg !7112
  %idxprom194 = sext i32 %add193 to i64, !dbg !7113
  %163 = load i32*, i32** %block, align 8, !dbg !7113
  %arrayidx195 = getelementptr inbounds i32, i32* %163, i64 %idxprom194, !dbg !7113
  %164 = load i32, i32* %arrayidx195, align 4, !dbg !7113
  %sub196 = sub i32 0, %164, !dbg !7114
  %165 = load i32, i32* %i, align 4, !dbg !7115
  %mul197 = mul nsw i32 %165, 8, !dbg !7116
  %add198 = add nsw i32 5, %mul197, !dbg !7117
  %idxprom199 = sext i32 %add198 to i64, !dbg !7118
  %166 = load i32*, i32** %block, align 8, !dbg !7118
  %arrayidx200 = getelementptr inbounds i32, i32* %166, i64 %idxprom199, !dbg !7118
  %167 = load i32, i32* %arrayidx200, align 4, !dbg !7118
  %add201 = add i32 %sub196, %167, !dbg !7119
  %168 = load i32, i32* %i, align 4, !dbg !7120
  %mul202 = mul nsw i32 %168, 8, !dbg !7121
  %add203 = add nsw i32 7, %mul202, !dbg !7122
  %idxprom204 = sext i32 %add203 to i64, !dbg !7123
  %169 = load i32*, i32** %block, align 8, !dbg !7123
  %arrayidx205 = getelementptr inbounds i32, i32* %169, i64 %idxprom204, !dbg !7123
  %170 = load i32, i32* %arrayidx205, align 4, !dbg !7123
  %sub206 = sub i32 %add201, %170, !dbg !7124
  %171 = load i32, i32* %i, align 4, !dbg !7125
  %mul207 = mul nsw i32 %171, 8, !dbg !7126
  %add208 = add nsw i32 7, %mul207, !dbg !7127
  %idxprom209 = sext i32 %add208 to i64, !dbg !7128
  %172 = load i32*, i32** %block, align 8, !dbg !7128
  %arrayidx210 = getelementptr inbounds i32, i32* %172, i64 %idxprom209, !dbg !7128
  %173 = load i32, i32* %arrayidx210, align 4, !dbg !7128
  %shr211 = ashr i32 %173, 1, !dbg !7129
  %sub212 = sub i32 %sub206, %shr211, !dbg !7130
  store i32 %sub212, i32* %a1191, align 4, !dbg !7109
  call void @llvm.dbg.declare(metadata i32* %a3213, metadata !7131, metadata !67), !dbg !7132
  %174 = load i32, i32* %i, align 4, !dbg !7133
  %mul214 = mul nsw i32 %174, 8, !dbg !7134
  %add215 = add nsw i32 1, %mul214, !dbg !7135
  %idxprom216 = sext i32 %add215 to i64, !dbg !7136
  %175 = load i32*, i32** %block, align 8, !dbg !7136
  %arrayidx217 = getelementptr inbounds i32, i32* %175, i64 %idxprom216, !dbg !7136
  %176 = load i32, i32* %arrayidx217, align 4, !dbg !7136
  %177 = load i32, i32* %i, align 4, !dbg !7137
  %mul218 = mul nsw i32 %177, 8, !dbg !7138
  %add219 = add nsw i32 7, %mul218, !dbg !7139
  %idxprom220 = sext i32 %add219 to i64, !dbg !7140
  %178 = load i32*, i32** %block, align 8, !dbg !7140
  %arrayidx221 = getelementptr inbounds i32, i32* %178, i64 %idxprom220, !dbg !7140
  %179 = load i32, i32* %arrayidx221, align 4, !dbg !7140
  %add222 = add i32 %176, %179, !dbg !7141
  %180 = load i32, i32* %i, align 4, !dbg !7142
  %mul223 = mul nsw i32 %180, 8, !dbg !7143
  %add224 = add nsw i32 3, %mul223, !dbg !7144
  %idxprom225 = sext i32 %add224 to i64, !dbg !7145
  %181 = load i32*, i32** %block, align 8, !dbg !7145
  %arrayidx226 = getelementptr inbounds i32, i32* %181, i64 %idxprom225, !dbg !7145
  %182 = load i32, i32* %arrayidx226, align 4, !dbg !7145
  %sub227 = sub i32 %add222, %182, !dbg !7146
  %183 = load i32, i32* %i, align 4, !dbg !7147
  %mul228 = mul nsw i32 %183, 8, !dbg !7148
  %add229 = add nsw i32 3, %mul228, !dbg !7149
  %idxprom230 = sext i32 %add229 to i64, !dbg !7150
  %184 = load i32*, i32** %block, align 8, !dbg !7150
  %arrayidx231 = getelementptr inbounds i32, i32* %184, i64 %idxprom230, !dbg !7150
  %185 = load i32, i32* %arrayidx231, align 4, !dbg !7150
  %shr232 = ashr i32 %185, 1, !dbg !7151
  %sub233 = sub i32 %sub227, %shr232, !dbg !7152
  store i32 %sub233, i32* %a3213, align 4, !dbg !7132
  call void @llvm.dbg.declare(metadata i32* %a5234, metadata !7153, metadata !67), !dbg !7154
  %186 = load i32, i32* %i, align 4, !dbg !7155
  %mul235 = mul nsw i32 %186, 8, !dbg !7156
  %add236 = add nsw i32 1, %mul235, !dbg !7157
  %idxprom237 = sext i32 %add236 to i64, !dbg !7158
  %187 = load i32*, i32** %block, align 8, !dbg !7158
  %arrayidx238 = getelementptr inbounds i32, i32* %187, i64 %idxprom237, !dbg !7158
  %188 = load i32, i32* %arrayidx238, align 4, !dbg !7158
  %sub239 = sub i32 0, %188, !dbg !7159
  %189 = load i32, i32* %i, align 4, !dbg !7160
  %mul240 = mul nsw i32 %189, 8, !dbg !7161
  %add241 = add nsw i32 7, %mul240, !dbg !7162
  %idxprom242 = sext i32 %add241 to i64, !dbg !7163
  %190 = load i32*, i32** %block, align 8, !dbg !7163
  %arrayidx243 = getelementptr inbounds i32, i32* %190, i64 %idxprom242, !dbg !7163
  %191 = load i32, i32* %arrayidx243, align 4, !dbg !7163
  %add244 = add i32 %sub239, %191, !dbg !7164
  %192 = load i32, i32* %i, align 4, !dbg !7165
  %mul245 = mul nsw i32 %192, 8, !dbg !7166
  %add246 = add nsw i32 5, %mul245, !dbg !7167
  %idxprom247 = sext i32 %add246 to i64, !dbg !7168
  %193 = load i32*, i32** %block, align 8, !dbg !7168
  %arrayidx248 = getelementptr inbounds i32, i32* %193, i64 %idxprom247, !dbg !7168
  %194 = load i32, i32* %arrayidx248, align 4, !dbg !7168
  %add249 = add i32 %add244, %194, !dbg !7169
  %195 = load i32, i32* %i, align 4, !dbg !7170
  %mul250 = mul nsw i32 %195, 8, !dbg !7171
  %add251 = add nsw i32 5, %mul250, !dbg !7172
  %idxprom252 = sext i32 %add251 to i64, !dbg !7173
  %196 = load i32*, i32** %block, align 8, !dbg !7173
  %arrayidx253 = getelementptr inbounds i32, i32* %196, i64 %idxprom252, !dbg !7173
  %197 = load i32, i32* %arrayidx253, align 4, !dbg !7173
  %shr254 = ashr i32 %197, 1, !dbg !7174
  %add255 = add i32 %add249, %shr254, !dbg !7175
  store i32 %add255, i32* %a5234, align 4, !dbg !7154
  call void @llvm.dbg.declare(metadata i32* %a7256, metadata !7176, metadata !67), !dbg !7177
  %198 = load i32, i32* %i, align 4, !dbg !7178
  %mul257 = mul nsw i32 %198, 8, !dbg !7179
  %add258 = add nsw i32 3, %mul257, !dbg !7180
  %idxprom259 = sext i32 %add258 to i64, !dbg !7181
  %199 = load i32*, i32** %block, align 8, !dbg !7181
  %arrayidx260 = getelementptr inbounds i32, i32* %199, i64 %idxprom259, !dbg !7181
  %200 = load i32, i32* %arrayidx260, align 4, !dbg !7181
  %201 = load i32, i32* %i, align 4, !dbg !7182
  %mul261 = mul nsw i32 %201, 8, !dbg !7183
  %add262 = add nsw i32 5, %mul261, !dbg !7184
  %idxprom263 = sext i32 %add262 to i64, !dbg !7185
  %202 = load i32*, i32** %block, align 8, !dbg !7185
  %arrayidx264 = getelementptr inbounds i32, i32* %202, i64 %idxprom263, !dbg !7185
  %203 = load i32, i32* %arrayidx264, align 4, !dbg !7185
  %add265 = add i32 %200, %203, !dbg !7186
  %204 = load i32, i32* %i, align 4, !dbg !7187
  %mul266 = mul nsw i32 %204, 8, !dbg !7188
  %add267 = add nsw i32 1, %mul266, !dbg !7189
  %idxprom268 = sext i32 %add267 to i64, !dbg !7190
  %205 = load i32*, i32** %block, align 8, !dbg !7190
  %arrayidx269 = getelementptr inbounds i32, i32* %205, i64 %idxprom268, !dbg !7190
  %206 = load i32, i32* %arrayidx269, align 4, !dbg !7190
  %add270 = add i32 %add265, %206, !dbg !7191
  %207 = load i32, i32* %i, align 4, !dbg !7192
  %mul271 = mul nsw i32 %207, 8, !dbg !7193
  %add272 = add nsw i32 1, %mul271, !dbg !7194
  %idxprom273 = sext i32 %add272 to i64, !dbg !7195
  %208 = load i32*, i32** %block, align 8, !dbg !7195
  %arrayidx274 = getelementptr inbounds i32, i32* %208, i64 %idxprom273, !dbg !7195
  %209 = load i32, i32* %arrayidx274, align 4, !dbg !7195
  %shr275 = ashr i32 %209, 1, !dbg !7196
  %add276 = add i32 %add270, %shr275, !dbg !7197
  store i32 %add276, i32* %a7256, align 4, !dbg !7177
  call void @llvm.dbg.declare(metadata i32* %b1277, metadata !7198, metadata !67), !dbg !7199
  %210 = load i32, i32* %a7256, align 4, !dbg !7200
  %shr278 = ashr i32 %210, 2, !dbg !7201
  %211 = load i32, i32* %a1191, align 4, !dbg !7202
  %add279 = add i32 %shr278, %211, !dbg !7203
  store i32 %add279, i32* %b1277, align 4, !dbg !7199
  call void @llvm.dbg.declare(metadata i32* %b3280, metadata !7204, metadata !67), !dbg !7205
  %212 = load i32, i32* %a3213, align 4, !dbg !7206
  %213 = load i32, i32* %a5234, align 4, !dbg !7207
  %shr281 = ashr i32 %213, 2, !dbg !7208
  %add282 = add i32 %212, %shr281, !dbg !7209
  store i32 %add282, i32* %b3280, align 4, !dbg !7205
  call void @llvm.dbg.declare(metadata i32* %b5283, metadata !7210, metadata !67), !dbg !7211
  %214 = load i32, i32* %a3213, align 4, !dbg !7212
  %shr284 = ashr i32 %214, 2, !dbg !7213
  %215 = load i32, i32* %a5234, align 4, !dbg !7214
  %sub285 = sub i32 %shr284, %215, !dbg !7215
  store i32 %sub285, i32* %b5283, align 4, !dbg !7211
  call void @llvm.dbg.declare(metadata i32* %b7286, metadata !7216, metadata !67), !dbg !7217
  %216 = load i32, i32* %a7256, align 4, !dbg !7218
  %217 = load i32, i32* %a1191, align 4, !dbg !7219
  %shr287 = ashr i32 %217, 2, !dbg !7220
  %sub288 = sub i32 %216, %shr287, !dbg !7221
  store i32 %sub288, i32* %b7286, align 4, !dbg !7217
  %218 = load i32, i32* %i, align 4, !dbg !7222
  %219 = load i32, i32* %stride.addr, align 4, !dbg !7223
  %mul289 = mul nsw i32 0, %219, !dbg !7224
  %add290 = add nsw i32 %218, %mul289, !dbg !7225
  %idxprom291 = sext i32 %add290 to i64, !dbg !7226
  %220 = load i16*, i16** %dst, align 8, !dbg !7226
  %arrayidx292 = getelementptr inbounds i16, i16* %220, i64 %idxprom291, !dbg !7226
  %221 = load i16, i16* %arrayidx292, align 2, !dbg !7226
  %conv = zext i16 %221 to i32, !dbg !7226
  %222 = load i32, i32* %b0183, align 4, !dbg !7227
  %223 = load i32, i32* %b7286, align 4, !dbg !7228
  %add293 = add i32 %222, %223, !dbg !7229
  %shr294 = ashr i32 %add293, 6, !dbg !7230
  %add295 = add nsw i32 %conv, %shr294, !dbg !7231
  store i32 %add295, i32* %a.addr.i, align 4, !dbg !7232
  store i32 12, i32* %p.addr.i, align 4, !dbg !7232
  %224 = load i32, i32* %a.addr.i, align 4, !dbg !7233
  %225 = load i32, i32* %p.addr.i, align 4, !dbg !7234
  %shl.i = shl i32 1, %225, !dbg !7235
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !7236
  %neg.i = xor i32 %sub.i, -1, !dbg !7237
  %and.i = and i32 %224, %neg.i, !dbg !7238
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !7238
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !7239

if.then.i:                                        ; preds = %for.body141
  %226 = load i32, i32* %a.addr.i, align 4, !dbg !7240
  %neg1.i = xor i32 %226, -1, !dbg !7241
  %shr.i = ashr i32 %neg1.i, 31, !dbg !7242
  %227 = load i32, i32* %p.addr.i, align 4, !dbg !7243
  %shl2.i = shl i32 1, %227, !dbg !7244
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !7245
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !7246
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !7247
  br label %av_clip_uintp2_c.exit, !dbg !7247

if.else.i:                                        ; preds = %for.body141
  %228 = load i32, i32* %a.addr.i, align 4, !dbg !7248
  store i32 %228, i32* %retval.i, align 4, !dbg !7249
  br label %av_clip_uintp2_c.exit, !dbg !7249

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %229 = load i32, i32* %retval.i, align 4, !dbg !7250
  %conv296 = trunc i32 %229 to i16, !dbg !7232
  %230 = load i32, i32* %i, align 4, !dbg !7251
  %231 = load i32, i32* %stride.addr, align 4, !dbg !7252
  %mul297 = mul nsw i32 0, %231, !dbg !7253
  %add298 = add nsw i32 %230, %mul297, !dbg !7254
  %idxprom299 = sext i32 %add298 to i64, !dbg !7255
  %232 = load i16*, i16** %dst, align 8, !dbg !7255
  %arrayidx300 = getelementptr inbounds i16, i16* %232, i64 %idxprom299, !dbg !7255
  store i16 %conv296, i16* %arrayidx300, align 2, !dbg !7256
  %233 = load i32, i32* %i, align 4, !dbg !7257
  %234 = load i32, i32* %stride.addr, align 4, !dbg !7258
  %mul301 = mul nsw i32 1, %234, !dbg !7259
  %add302 = add nsw i32 %233, %mul301, !dbg !7260
  %idxprom303 = sext i32 %add302 to i64, !dbg !7261
  %235 = load i16*, i16** %dst, align 8, !dbg !7261
  %arrayidx304 = getelementptr inbounds i16, i16* %235, i64 %idxprom303, !dbg !7261
  %236 = load i16, i16* %arrayidx304, align 2, !dbg !7261
  %conv305 = zext i16 %236 to i32, !dbg !7261
  %237 = load i32, i32* %b2185, align 4, !dbg !7262
  %238 = load i32, i32* %b5283, align 4, !dbg !7263
  %add306 = add i32 %237, %238, !dbg !7264
  %shr307 = ashr i32 %add306, 6, !dbg !7265
  %add308 = add nsw i32 %conv305, %shr307, !dbg !7266
  store i32 %add308, i32* %a.addr.i499, align 4, !dbg !7267
  store i32 12, i32* %p.addr.i500, align 4, !dbg !7267
  %239 = load i32, i32* %a.addr.i499, align 4, !dbg !7268
  %240 = load i32, i32* %p.addr.i500, align 4, !dbg !7269
  %shl.i501 = shl i32 1, %240, !dbg !7270
  %sub.i502 = sub nsw i32 %shl.i501, 1, !dbg !7271
  %neg.i503 = xor i32 %sub.i502, -1, !dbg !7272
  %and.i504 = and i32 %239, %neg.i503, !dbg !7273
  %tobool.i505 = icmp ne i32 %and.i504, 0, !dbg !7273
  br i1 %tobool.i505, label %if.then.i511, label %if.else.i512, !dbg !7274

if.then.i511:                                     ; preds = %av_clip_uintp2_c.exit
  %241 = load i32, i32* %a.addr.i499, align 4, !dbg !7275
  %neg1.i506 = xor i32 %241, -1, !dbg !7276
  %shr.i507 = ashr i32 %neg1.i506, 31, !dbg !7277
  %242 = load i32, i32* %p.addr.i500, align 4, !dbg !7278
  %shl2.i508 = shl i32 1, %242, !dbg !7279
  %sub3.i509 = sub nsw i32 %shl2.i508, 1, !dbg !7280
  %and4.i510 = and i32 %shr.i507, %sub3.i509, !dbg !7281
  store i32 %and4.i510, i32* %retval.i498, align 4, !dbg !7282
  br label %av_clip_uintp2_c.exit513, !dbg !7282

if.else.i512:                                     ; preds = %av_clip_uintp2_c.exit
  %243 = load i32, i32* %a.addr.i499, align 4, !dbg !7283
  store i32 %243, i32* %retval.i498, align 4, !dbg !7284
  br label %av_clip_uintp2_c.exit513, !dbg !7284

av_clip_uintp2_c.exit513:                         ; preds = %if.then.i511, %if.else.i512
  %244 = load i32, i32* %retval.i498, align 4, !dbg !7285
  %conv310 = trunc i32 %244 to i16, !dbg !7267
  %245 = load i32, i32* %i, align 4, !dbg !7286
  %246 = load i32, i32* %stride.addr, align 4, !dbg !7287
  %mul311 = mul nsw i32 1, %246, !dbg !7288
  %add312 = add nsw i32 %245, %mul311, !dbg !7289
  %idxprom313 = sext i32 %add312 to i64, !dbg !7290
  %247 = load i16*, i16** %dst, align 8, !dbg !7290
  %arrayidx314 = getelementptr inbounds i16, i16* %247, i64 %idxprom313, !dbg !7290
  store i16 %conv310, i16* %arrayidx314, align 2, !dbg !7291
  %248 = load i32, i32* %i, align 4, !dbg !7292
  %249 = load i32, i32* %stride.addr, align 4, !dbg !7293
  %mul315 = mul nsw i32 2, %249, !dbg !7294
  %add316 = add nsw i32 %248, %mul315, !dbg !7295
  %idxprom317 = sext i32 %add316 to i64, !dbg !7296
  %250 = load i16*, i16** %dst, align 8, !dbg !7296
  %arrayidx318 = getelementptr inbounds i16, i16* %250, i64 %idxprom317, !dbg !7296
  %251 = load i16, i16* %arrayidx318, align 2, !dbg !7296
  %conv319 = zext i16 %251 to i32, !dbg !7296
  %252 = load i32, i32* %b4187, align 4, !dbg !7297
  %253 = load i32, i32* %b3280, align 4, !dbg !7298
  %add320 = add i32 %252, %253, !dbg !7299
  %shr321 = ashr i32 %add320, 6, !dbg !7300
  %add322 = add nsw i32 %conv319, %shr321, !dbg !7301
  store i32 %add322, i32* %a.addr.i483, align 4, !dbg !7302
  store i32 12, i32* %p.addr.i484, align 4, !dbg !7302
  %254 = load i32, i32* %a.addr.i483, align 4, !dbg !7303
  %255 = load i32, i32* %p.addr.i484, align 4, !dbg !7304
  %shl.i485 = shl i32 1, %255, !dbg !7305
  %sub.i486 = sub nsw i32 %shl.i485, 1, !dbg !7306
  %neg.i487 = xor i32 %sub.i486, -1, !dbg !7307
  %and.i488 = and i32 %254, %neg.i487, !dbg !7308
  %tobool.i489 = icmp ne i32 %and.i488, 0, !dbg !7308
  br i1 %tobool.i489, label %if.then.i495, label %if.else.i496, !dbg !7309

if.then.i495:                                     ; preds = %av_clip_uintp2_c.exit513
  %256 = load i32, i32* %a.addr.i483, align 4, !dbg !7310
  %neg1.i490 = xor i32 %256, -1, !dbg !7311
  %shr.i491 = ashr i32 %neg1.i490, 31, !dbg !7312
  %257 = load i32, i32* %p.addr.i484, align 4, !dbg !7313
  %shl2.i492 = shl i32 1, %257, !dbg !7314
  %sub3.i493 = sub nsw i32 %shl2.i492, 1, !dbg !7315
  %and4.i494 = and i32 %shr.i491, %sub3.i493, !dbg !7316
  store i32 %and4.i494, i32* %retval.i482, align 4, !dbg !7317
  br label %av_clip_uintp2_c.exit497, !dbg !7317

if.else.i496:                                     ; preds = %av_clip_uintp2_c.exit513
  %258 = load i32, i32* %a.addr.i483, align 4, !dbg !7318
  store i32 %258, i32* %retval.i482, align 4, !dbg !7319
  br label %av_clip_uintp2_c.exit497, !dbg !7319

av_clip_uintp2_c.exit497:                         ; preds = %if.then.i495, %if.else.i496
  %259 = load i32, i32* %retval.i482, align 4, !dbg !7320
  %conv324 = trunc i32 %259 to i16, !dbg !7302
  %260 = load i32, i32* %i, align 4, !dbg !7321
  %261 = load i32, i32* %stride.addr, align 4, !dbg !7322
  %mul325 = mul nsw i32 2, %261, !dbg !7323
  %add326 = add nsw i32 %260, %mul325, !dbg !7324
  %idxprom327 = sext i32 %add326 to i64, !dbg !7325
  %262 = load i16*, i16** %dst, align 8, !dbg !7325
  %arrayidx328 = getelementptr inbounds i16, i16* %262, i64 %idxprom327, !dbg !7325
  store i16 %conv324, i16* %arrayidx328, align 2, !dbg !7326
  %263 = load i32, i32* %i, align 4, !dbg !7327
  %264 = load i32, i32* %stride.addr, align 4, !dbg !7328
  %mul329 = mul nsw i32 3, %264, !dbg !7329
  %add330 = add nsw i32 %263, %mul329, !dbg !7330
  %idxprom331 = sext i32 %add330 to i64, !dbg !7331
  %265 = load i16*, i16** %dst, align 8, !dbg !7331
  %arrayidx332 = getelementptr inbounds i16, i16* %265, i64 %idxprom331, !dbg !7331
  %266 = load i16, i16* %arrayidx332, align 2, !dbg !7331
  %conv333 = zext i16 %266 to i32, !dbg !7331
  %267 = load i32, i32* %b6189, align 4, !dbg !7332
  %268 = load i32, i32* %b1277, align 4, !dbg !7333
  %add334 = add i32 %267, %268, !dbg !7334
  %shr335 = ashr i32 %add334, 6, !dbg !7335
  %add336 = add nsw i32 %conv333, %shr335, !dbg !7336
  store i32 %add336, i32* %a.addr.i467, align 4, !dbg !7337
  store i32 12, i32* %p.addr.i468, align 4, !dbg !7337
  %269 = load i32, i32* %a.addr.i467, align 4, !dbg !7338
  %270 = load i32, i32* %p.addr.i468, align 4, !dbg !7339
  %shl.i469 = shl i32 1, %270, !dbg !7340
  %sub.i470 = sub nsw i32 %shl.i469, 1, !dbg !7341
  %neg.i471 = xor i32 %sub.i470, -1, !dbg !7342
  %and.i472 = and i32 %269, %neg.i471, !dbg !7343
  %tobool.i473 = icmp ne i32 %and.i472, 0, !dbg !7343
  br i1 %tobool.i473, label %if.then.i479, label %if.else.i480, !dbg !7344

if.then.i479:                                     ; preds = %av_clip_uintp2_c.exit497
  %271 = load i32, i32* %a.addr.i467, align 4, !dbg !7345
  %neg1.i474 = xor i32 %271, -1, !dbg !7346
  %shr.i475 = ashr i32 %neg1.i474, 31, !dbg !7347
  %272 = load i32, i32* %p.addr.i468, align 4, !dbg !7348
  %shl2.i476 = shl i32 1, %272, !dbg !7349
  %sub3.i477 = sub nsw i32 %shl2.i476, 1, !dbg !7350
  %and4.i478 = and i32 %shr.i475, %sub3.i477, !dbg !7351
  store i32 %and4.i478, i32* %retval.i466, align 4, !dbg !7352
  br label %av_clip_uintp2_c.exit481, !dbg !7352

if.else.i480:                                     ; preds = %av_clip_uintp2_c.exit497
  %273 = load i32, i32* %a.addr.i467, align 4, !dbg !7353
  store i32 %273, i32* %retval.i466, align 4, !dbg !7354
  br label %av_clip_uintp2_c.exit481, !dbg !7354

av_clip_uintp2_c.exit481:                         ; preds = %if.then.i479, %if.else.i480
  %274 = load i32, i32* %retval.i466, align 4, !dbg !7355
  %conv338 = trunc i32 %274 to i16, !dbg !7337
  %275 = load i32, i32* %i, align 4, !dbg !7356
  %276 = load i32, i32* %stride.addr, align 4, !dbg !7357
  %mul339 = mul nsw i32 3, %276, !dbg !7358
  %add340 = add nsw i32 %275, %mul339, !dbg !7359
  %idxprom341 = sext i32 %add340 to i64, !dbg !7360
  %277 = load i16*, i16** %dst, align 8, !dbg !7360
  %arrayidx342 = getelementptr inbounds i16, i16* %277, i64 %idxprom341, !dbg !7360
  store i16 %conv338, i16* %arrayidx342, align 2, !dbg !7361
  %278 = load i32, i32* %i, align 4, !dbg !7362
  %279 = load i32, i32* %stride.addr, align 4, !dbg !7363
  %mul343 = mul nsw i32 4, %279, !dbg !7364
  %add344 = add nsw i32 %278, %mul343, !dbg !7365
  %idxprom345 = sext i32 %add344 to i64, !dbg !7366
  %280 = load i16*, i16** %dst, align 8, !dbg !7366
  %arrayidx346 = getelementptr inbounds i16, i16* %280, i64 %idxprom345, !dbg !7366
  %281 = load i16, i16* %arrayidx346, align 2, !dbg !7366
  %conv347 = zext i16 %281 to i32, !dbg !7366
  %282 = load i32, i32* %b6189, align 4, !dbg !7367
  %283 = load i32, i32* %b1277, align 4, !dbg !7368
  %sub348 = sub i32 %282, %283, !dbg !7369
  %shr349 = ashr i32 %sub348, 6, !dbg !7370
  %add350 = add nsw i32 %conv347, %shr349, !dbg !7371
  store i32 %add350, i32* %a.addr.i451, align 4, !dbg !7372
  store i32 12, i32* %p.addr.i452, align 4, !dbg !7372
  %284 = load i32, i32* %a.addr.i451, align 4, !dbg !7373
  %285 = load i32, i32* %p.addr.i452, align 4, !dbg !7374
  %shl.i453 = shl i32 1, %285, !dbg !7375
  %sub.i454 = sub nsw i32 %shl.i453, 1, !dbg !7376
  %neg.i455 = xor i32 %sub.i454, -1, !dbg !7377
  %and.i456 = and i32 %284, %neg.i455, !dbg !7378
  %tobool.i457 = icmp ne i32 %and.i456, 0, !dbg !7378
  br i1 %tobool.i457, label %if.then.i463, label %if.else.i464, !dbg !7379

if.then.i463:                                     ; preds = %av_clip_uintp2_c.exit481
  %286 = load i32, i32* %a.addr.i451, align 4, !dbg !7380
  %neg1.i458 = xor i32 %286, -1, !dbg !7381
  %shr.i459 = ashr i32 %neg1.i458, 31, !dbg !7382
  %287 = load i32, i32* %p.addr.i452, align 4, !dbg !7383
  %shl2.i460 = shl i32 1, %287, !dbg !7384
  %sub3.i461 = sub nsw i32 %shl2.i460, 1, !dbg !7385
  %and4.i462 = and i32 %shr.i459, %sub3.i461, !dbg !7386
  store i32 %and4.i462, i32* %retval.i450, align 4, !dbg !7387
  br label %av_clip_uintp2_c.exit465, !dbg !7387

if.else.i464:                                     ; preds = %av_clip_uintp2_c.exit481
  %288 = load i32, i32* %a.addr.i451, align 4, !dbg !7388
  store i32 %288, i32* %retval.i450, align 4, !dbg !7389
  br label %av_clip_uintp2_c.exit465, !dbg !7389

av_clip_uintp2_c.exit465:                         ; preds = %if.then.i463, %if.else.i464
  %289 = load i32, i32* %retval.i450, align 4, !dbg !7390
  %conv352 = trunc i32 %289 to i16, !dbg !7372
  %290 = load i32, i32* %i, align 4, !dbg !7391
  %291 = load i32, i32* %stride.addr, align 4, !dbg !7392
  %mul353 = mul nsw i32 4, %291, !dbg !7393
  %add354 = add nsw i32 %290, %mul353, !dbg !7394
  %idxprom355 = sext i32 %add354 to i64, !dbg !7395
  %292 = load i16*, i16** %dst, align 8, !dbg !7395
  %arrayidx356 = getelementptr inbounds i16, i16* %292, i64 %idxprom355, !dbg !7395
  store i16 %conv352, i16* %arrayidx356, align 2, !dbg !7396
  %293 = load i32, i32* %i, align 4, !dbg !7397
  %294 = load i32, i32* %stride.addr, align 4, !dbg !7398
  %mul357 = mul nsw i32 5, %294, !dbg !7399
  %add358 = add nsw i32 %293, %mul357, !dbg !7400
  %idxprom359 = sext i32 %add358 to i64, !dbg !7401
  %295 = load i16*, i16** %dst, align 8, !dbg !7401
  %arrayidx360 = getelementptr inbounds i16, i16* %295, i64 %idxprom359, !dbg !7401
  %296 = load i16, i16* %arrayidx360, align 2, !dbg !7401
  %conv361 = zext i16 %296 to i32, !dbg !7401
  %297 = load i32, i32* %b4187, align 4, !dbg !7402
  %298 = load i32, i32* %b3280, align 4, !dbg !7403
  %sub362 = sub i32 %297, %298, !dbg !7404
  %shr363 = ashr i32 %sub362, 6, !dbg !7405
  %add364 = add nsw i32 %conv361, %shr363, !dbg !7406
  store i32 %add364, i32* %a.addr.i435, align 4, !dbg !7407
  store i32 12, i32* %p.addr.i436, align 4, !dbg !7407
  %299 = load i32, i32* %a.addr.i435, align 4, !dbg !7408
  %300 = load i32, i32* %p.addr.i436, align 4, !dbg !7409
  %shl.i437 = shl i32 1, %300, !dbg !7410
  %sub.i438 = sub nsw i32 %shl.i437, 1, !dbg !7411
  %neg.i439 = xor i32 %sub.i438, -1, !dbg !7412
  %and.i440 = and i32 %299, %neg.i439, !dbg !7413
  %tobool.i441 = icmp ne i32 %and.i440, 0, !dbg !7413
  br i1 %tobool.i441, label %if.then.i447, label %if.else.i448, !dbg !7414

if.then.i447:                                     ; preds = %av_clip_uintp2_c.exit465
  %301 = load i32, i32* %a.addr.i435, align 4, !dbg !7415
  %neg1.i442 = xor i32 %301, -1, !dbg !7416
  %shr.i443 = ashr i32 %neg1.i442, 31, !dbg !7417
  %302 = load i32, i32* %p.addr.i436, align 4, !dbg !7418
  %shl2.i444 = shl i32 1, %302, !dbg !7419
  %sub3.i445 = sub nsw i32 %shl2.i444, 1, !dbg !7420
  %and4.i446 = and i32 %shr.i443, %sub3.i445, !dbg !7421
  store i32 %and4.i446, i32* %retval.i434, align 4, !dbg !7422
  br label %av_clip_uintp2_c.exit449, !dbg !7422

if.else.i448:                                     ; preds = %av_clip_uintp2_c.exit465
  %303 = load i32, i32* %a.addr.i435, align 4, !dbg !7423
  store i32 %303, i32* %retval.i434, align 4, !dbg !7424
  br label %av_clip_uintp2_c.exit449, !dbg !7424

av_clip_uintp2_c.exit449:                         ; preds = %if.then.i447, %if.else.i448
  %304 = load i32, i32* %retval.i434, align 4, !dbg !7425
  %conv366 = trunc i32 %304 to i16, !dbg !7407
  %305 = load i32, i32* %i, align 4, !dbg !7426
  %306 = load i32, i32* %stride.addr, align 4, !dbg !7427
  %mul367 = mul nsw i32 5, %306, !dbg !7428
  %add368 = add nsw i32 %305, %mul367, !dbg !7429
  %idxprom369 = sext i32 %add368 to i64, !dbg !7430
  %307 = load i16*, i16** %dst, align 8, !dbg !7430
  %arrayidx370 = getelementptr inbounds i16, i16* %307, i64 %idxprom369, !dbg !7430
  store i16 %conv366, i16* %arrayidx370, align 2, !dbg !7431
  %308 = load i32, i32* %i, align 4, !dbg !7432
  %309 = load i32, i32* %stride.addr, align 4, !dbg !7433
  %mul371 = mul nsw i32 6, %309, !dbg !7434
  %add372 = add nsw i32 %308, %mul371, !dbg !7435
  %idxprom373 = sext i32 %add372 to i64, !dbg !7436
  %310 = load i16*, i16** %dst, align 8, !dbg !7436
  %arrayidx374 = getelementptr inbounds i16, i16* %310, i64 %idxprom373, !dbg !7436
  %311 = load i16, i16* %arrayidx374, align 2, !dbg !7436
  %conv375 = zext i16 %311 to i32, !dbg !7436
  %312 = load i32, i32* %b2185, align 4, !dbg !7437
  %313 = load i32, i32* %b5283, align 4, !dbg !7438
  %sub376 = sub i32 %312, %313, !dbg !7439
  %shr377 = ashr i32 %sub376, 6, !dbg !7440
  %add378 = add nsw i32 %conv375, %shr377, !dbg !7441
  store i32 %add378, i32* %a.addr.i419, align 4, !dbg !7442
  store i32 12, i32* %p.addr.i420, align 4, !dbg !7442
  %314 = load i32, i32* %a.addr.i419, align 4, !dbg !7443
  %315 = load i32, i32* %p.addr.i420, align 4, !dbg !7444
  %shl.i421 = shl i32 1, %315, !dbg !7445
  %sub.i422 = sub nsw i32 %shl.i421, 1, !dbg !7446
  %neg.i423 = xor i32 %sub.i422, -1, !dbg !7447
  %and.i424 = and i32 %314, %neg.i423, !dbg !7448
  %tobool.i425 = icmp ne i32 %and.i424, 0, !dbg !7448
  br i1 %tobool.i425, label %if.then.i431, label %if.else.i432, !dbg !7449

if.then.i431:                                     ; preds = %av_clip_uintp2_c.exit449
  %316 = load i32, i32* %a.addr.i419, align 4, !dbg !7450
  %neg1.i426 = xor i32 %316, -1, !dbg !7451
  %shr.i427 = ashr i32 %neg1.i426, 31, !dbg !7452
  %317 = load i32, i32* %p.addr.i420, align 4, !dbg !7453
  %shl2.i428 = shl i32 1, %317, !dbg !7454
  %sub3.i429 = sub nsw i32 %shl2.i428, 1, !dbg !7455
  %and4.i430 = and i32 %shr.i427, %sub3.i429, !dbg !7456
  store i32 %and4.i430, i32* %retval.i418, align 4, !dbg !7457
  br label %av_clip_uintp2_c.exit433, !dbg !7457

if.else.i432:                                     ; preds = %av_clip_uintp2_c.exit449
  %318 = load i32, i32* %a.addr.i419, align 4, !dbg !7458
  store i32 %318, i32* %retval.i418, align 4, !dbg !7459
  br label %av_clip_uintp2_c.exit433, !dbg !7459

av_clip_uintp2_c.exit433:                         ; preds = %if.then.i431, %if.else.i432
  %319 = load i32, i32* %retval.i418, align 4, !dbg !7460
  %conv380 = trunc i32 %319 to i16, !dbg !7442
  %320 = load i32, i32* %i, align 4, !dbg !7461
  %321 = load i32, i32* %stride.addr, align 4, !dbg !7462
  %mul381 = mul nsw i32 6, %321, !dbg !7463
  %add382 = add nsw i32 %320, %mul381, !dbg !7464
  %idxprom383 = sext i32 %add382 to i64, !dbg !7465
  %322 = load i16*, i16** %dst, align 8, !dbg !7465
  %arrayidx384 = getelementptr inbounds i16, i16* %322, i64 %idxprom383, !dbg !7465
  store i16 %conv380, i16* %arrayidx384, align 2, !dbg !7466
  %323 = load i32, i32* %i, align 4, !dbg !7467
  %324 = load i32, i32* %stride.addr, align 4, !dbg !7468
  %mul385 = mul nsw i32 7, %324, !dbg !7469
  %add386 = add nsw i32 %323, %mul385, !dbg !7470
  %idxprom387 = sext i32 %add386 to i64, !dbg !7471
  %325 = load i16*, i16** %dst, align 8, !dbg !7471
  %arrayidx388 = getelementptr inbounds i16, i16* %325, i64 %idxprom387, !dbg !7471
  %326 = load i16, i16* %arrayidx388, align 2, !dbg !7471
  %conv389 = zext i16 %326 to i32, !dbg !7471
  %327 = load i32, i32* %b0183, align 4, !dbg !7472
  %328 = load i32, i32* %b7286, align 4, !dbg !7473
  %sub390 = sub i32 %327, %328, !dbg !7474
  %shr391 = ashr i32 %sub390, 6, !dbg !7475
  %add392 = add nsw i32 %conv389, %shr391, !dbg !7476
  store i32 %add392, i32* %a.addr.i403, align 4, !dbg !7477
  store i32 12, i32* %p.addr.i404, align 4, !dbg !7477
  %329 = load i32, i32* %a.addr.i403, align 4, !dbg !7478
  %330 = load i32, i32* %p.addr.i404, align 4, !dbg !7479
  %shl.i405 = shl i32 1, %330, !dbg !7480
  %sub.i406 = sub nsw i32 %shl.i405, 1, !dbg !7481
  %neg.i407 = xor i32 %sub.i406, -1, !dbg !7482
  %and.i408 = and i32 %329, %neg.i407, !dbg !7483
  %tobool.i409 = icmp ne i32 %and.i408, 0, !dbg !7483
  br i1 %tobool.i409, label %if.then.i415, label %if.else.i416, !dbg !7484

if.then.i415:                                     ; preds = %av_clip_uintp2_c.exit433
  %331 = load i32, i32* %a.addr.i403, align 4, !dbg !7485
  %neg1.i410 = xor i32 %331, -1, !dbg !7486
  %shr.i411 = ashr i32 %neg1.i410, 31, !dbg !7487
  %332 = load i32, i32* %p.addr.i404, align 4, !dbg !7488
  %shl2.i412 = shl i32 1, %332, !dbg !7489
  %sub3.i413 = sub nsw i32 %shl2.i412, 1, !dbg !7490
  %and4.i414 = and i32 %shr.i411, %sub3.i413, !dbg !7491
  store i32 %and4.i414, i32* %retval.i402, align 4, !dbg !7492
  br label %av_clip_uintp2_c.exit417, !dbg !7492

if.else.i416:                                     ; preds = %av_clip_uintp2_c.exit433
  %333 = load i32, i32* %a.addr.i403, align 4, !dbg !7493
  store i32 %333, i32* %retval.i402, align 4, !dbg !7494
  br label %av_clip_uintp2_c.exit417, !dbg !7494

av_clip_uintp2_c.exit417:                         ; preds = %if.then.i415, %if.else.i416
  %334 = load i32, i32* %retval.i402, align 4, !dbg !7495
  %conv394 = trunc i32 %334 to i16, !dbg !7477
  %335 = load i32, i32* %i, align 4, !dbg !7496
  %336 = load i32, i32* %stride.addr, align 4, !dbg !7497
  %mul395 = mul nsw i32 7, %336, !dbg !7498
  %add396 = add nsw i32 %335, %mul395, !dbg !7499
  %idxprom397 = sext i32 %add396 to i64, !dbg !7500
  %337 = load i16*, i16** %dst, align 8, !dbg !7500
  %arrayidx398 = getelementptr inbounds i16, i16* %337, i64 %idxprom397, !dbg !7500
  store i16 %conv394, i16* %arrayidx398, align 2, !dbg !7501
  br label %for.inc399, !dbg !7502

for.inc399:                                       ; preds = %av_clip_uintp2_c.exit417
  %338 = load i32, i32* %i, align 4, !dbg !7503
  %inc400 = add nsw i32 %338, 1, !dbg !7503
  store i32 %inc400, i32* %i, align 4, !dbg !7503
  br label %for.cond139, !dbg !7505, !llvm.loop !7506

for.end401:                                       ; preds = %for.cond139
  %339 = load i32*, i32** %block, align 8, !dbg !7508
  %340 = bitcast i32* %339 to i8*, !dbg !7509
  call void @llvm.memset.p0i8.i64(i8* %340, i8 0, i64 256, i32 4, i1 false), !dbg !7509
  ret void, !dbg !7510
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_dc_add_12_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !7511 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !7512
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !7519
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %dc = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !7520, metadata !67), !dbg !7521
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !7522, metadata !67), !dbg !7523
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7524, metadata !67), !dbg !7525
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7526, metadata !67), !dbg !7527
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7528, metadata !67), !dbg !7529
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !7530, metadata !67), !dbg !7531
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !7532
  %1 = bitcast i8* %0 to i16*, !dbg !7533
  store i16* %1, i16** %dst, align 8, !dbg !7531
  call void @llvm.dbg.declare(metadata i32** %block, metadata !7534, metadata !67), !dbg !7535
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !7536
  %3 = bitcast i16* %2 to i32*, !dbg !7537
  store i32* %3, i32** %block, align 8, !dbg !7535
  call void @llvm.dbg.declare(metadata i32* %dc, metadata !7538, metadata !67), !dbg !7539
  %4 = load i32*, i32** %block, align 8, !dbg !7540
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 0, !dbg !7540
  %5 = load i32, i32* %arrayidx, align 4, !dbg !7540
  %add = add nsw i32 %5, 32, !dbg !7541
  %shr = ashr i32 %add, 6, !dbg !7542
  store i32 %shr, i32* %dc, align 4, !dbg !7539
  %6 = load i32, i32* %stride.addr, align 4, !dbg !7543
  %conv = sext i32 %6 to i64, !dbg !7543
  %div = udiv i64 %conv, 2, !dbg !7543
  %conv1 = trunc i64 %div to i32, !dbg !7543
  store i32 %conv1, i32* %stride.addr, align 4, !dbg !7543
  %7 = load i32*, i32** %block, align 8, !dbg !7544
  %arrayidx2 = getelementptr inbounds i32, i32* %7, i64 0, !dbg !7544
  store i32 0, i32* %arrayidx2, align 4, !dbg !7545
  store i32 0, i32* %j, align 4, !dbg !7546
  br label %for.cond, !dbg !7547

for.cond:                                         ; preds = %for.inc14, %entry
  %8 = load i32, i32* %j, align 4, !dbg !7548
  %cmp = icmp slt i32 %8, 4, !dbg !7550
  br i1 %cmp, label %for.body, label %for.end16, !dbg !7551

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7552
  br label %for.cond4, !dbg !7553

for.cond4:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !7554
  %cmp5 = icmp slt i32 %9, 4, !dbg !7556
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !7557

for.body7:                                        ; preds = %for.cond4
  %10 = load i32, i32* %i, align 4, !dbg !7558
  %idxprom = sext i32 %10 to i64, !dbg !7559
  %11 = load i16*, i16** %dst, align 8, !dbg !7559
  %arrayidx8 = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !7559
  %12 = load i16, i16* %arrayidx8, align 2, !dbg !7559
  %conv9 = zext i16 %12 to i32, !dbg !7559
  %13 = load i32, i32* %dc, align 4, !dbg !7560
  %add10 = add nsw i32 %conv9, %13, !dbg !7561
  store i32 %add10, i32* %a.addr.i, align 4, !dbg !7562
  store i32 12, i32* %p.addr.i, align 4, !dbg !7562
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !7563
  %15 = load i32, i32* %p.addr.i, align 4, !dbg !7564
  %shl.i = shl i32 1, %15, !dbg !7565
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !7566
  %neg.i = xor i32 %sub.i, -1, !dbg !7567
  %and.i = and i32 %14, %neg.i, !dbg !7568
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !7568
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !7569

if.then.i:                                        ; preds = %for.body7
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !7570
  %neg1.i = xor i32 %16, -1, !dbg !7571
  %shr.i = ashr i32 %neg1.i, 31, !dbg !7572
  %17 = load i32, i32* %p.addr.i, align 4, !dbg !7573
  %shl2.i = shl i32 1, %17, !dbg !7574
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !7575
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !7576
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !7577
  br label %av_clip_uintp2_c.exit, !dbg !7577

if.else.i:                                        ; preds = %for.body7
  %18 = load i32, i32* %a.addr.i, align 4, !dbg !7578
  store i32 %18, i32* %retval.i, align 4, !dbg !7579
  br label %av_clip_uintp2_c.exit, !dbg !7579

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %19 = load i32, i32* %retval.i, align 4, !dbg !7580
  %conv11 = trunc i32 %19 to i16, !dbg !7562
  %20 = load i32, i32* %i, align 4, !dbg !7581
  %idxprom12 = sext i32 %20 to i64, !dbg !7582
  %21 = load i16*, i16** %dst, align 8, !dbg !7582
  %arrayidx13 = getelementptr inbounds i16, i16* %21, i64 %idxprom12, !dbg !7582
  store i16 %conv11, i16* %arrayidx13, align 2, !dbg !7583
  br label %for.inc, !dbg !7582

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %22 = load i32, i32* %i, align 4, !dbg !7584
  %inc = add nsw i32 %22, 1, !dbg !7584
  store i32 %inc, i32* %i, align 4, !dbg !7584
  br label %for.cond4, !dbg !7586, !llvm.loop !7587

for.end:                                          ; preds = %for.cond4
  %23 = load i32, i32* %stride.addr, align 4, !dbg !7589
  %24 = load i16*, i16** %dst, align 8, !dbg !7590
  %idx.ext = sext i32 %23 to i64, !dbg !7590
  %add.ptr = getelementptr inbounds i16, i16* %24, i64 %idx.ext, !dbg !7590
  store i16* %add.ptr, i16** %dst, align 8, !dbg !7590
  br label %for.inc14, !dbg !7591

for.inc14:                                        ; preds = %for.end
  %25 = load i32, i32* %j, align 4, !dbg !7592
  %inc15 = add nsw i32 %25, 1, !dbg !7592
  store i32 %inc15, i32* %j, align 4, !dbg !7592
  br label %for.cond, !dbg !7594, !llvm.loop !7595

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !7597
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_dc_add_12_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !7598 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !7599
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !7606
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %dc = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !7607, metadata !67), !dbg !7608
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !7609, metadata !67), !dbg !7610
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7611, metadata !67), !dbg !7612
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7613, metadata !67), !dbg !7614
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7615, metadata !67), !dbg !7616
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !7617, metadata !67), !dbg !7618
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !7619
  %1 = bitcast i8* %0 to i16*, !dbg !7620
  store i16* %1, i16** %dst, align 8, !dbg !7618
  call void @llvm.dbg.declare(metadata i32** %block, metadata !7621, metadata !67), !dbg !7622
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !7623
  %3 = bitcast i16* %2 to i32*, !dbg !7624
  store i32* %3, i32** %block, align 8, !dbg !7622
  call void @llvm.dbg.declare(metadata i32* %dc, metadata !7625, metadata !67), !dbg !7626
  %4 = load i32*, i32** %block, align 8, !dbg !7627
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 0, !dbg !7627
  %5 = load i32, i32* %arrayidx, align 4, !dbg !7627
  %add = add nsw i32 %5, 32, !dbg !7628
  %shr = ashr i32 %add, 6, !dbg !7629
  store i32 %shr, i32* %dc, align 4, !dbg !7626
  %6 = load i32*, i32** %block, align 8, !dbg !7630
  %arrayidx1 = getelementptr inbounds i32, i32* %6, i64 0, !dbg !7630
  store i32 0, i32* %arrayidx1, align 4, !dbg !7631
  %7 = load i32, i32* %stride.addr, align 4, !dbg !7632
  %conv = sext i32 %7 to i64, !dbg !7632
  %div = udiv i64 %conv, 2, !dbg !7632
  %conv2 = trunc i64 %div to i32, !dbg !7632
  store i32 %conv2, i32* %stride.addr, align 4, !dbg !7632
  store i32 0, i32* %j, align 4, !dbg !7633
  br label %for.cond, !dbg !7634

for.cond:                                         ; preds = %for.inc14, %entry
  %8 = load i32, i32* %j, align 4, !dbg !7635
  %cmp = icmp slt i32 %8, 8, !dbg !7637
  br i1 %cmp, label %for.body, label %for.end16, !dbg !7638

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7639
  br label %for.cond4, !dbg !7640

for.cond4:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !7641
  %cmp5 = icmp slt i32 %9, 8, !dbg !7643
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !7644

for.body7:                                        ; preds = %for.cond4
  %10 = load i32, i32* %i, align 4, !dbg !7645
  %idxprom = sext i32 %10 to i64, !dbg !7646
  %11 = load i16*, i16** %dst, align 8, !dbg !7646
  %arrayidx8 = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !7646
  %12 = load i16, i16* %arrayidx8, align 2, !dbg !7646
  %conv9 = zext i16 %12 to i32, !dbg !7646
  %13 = load i32, i32* %dc, align 4, !dbg !7647
  %add10 = add nsw i32 %conv9, %13, !dbg !7648
  store i32 %add10, i32* %a.addr.i, align 4, !dbg !7649
  store i32 12, i32* %p.addr.i, align 4, !dbg !7649
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !7650
  %15 = load i32, i32* %p.addr.i, align 4, !dbg !7651
  %shl.i = shl i32 1, %15, !dbg !7652
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !7653
  %neg.i = xor i32 %sub.i, -1, !dbg !7654
  %and.i = and i32 %14, %neg.i, !dbg !7655
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !7655
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !7656

if.then.i:                                        ; preds = %for.body7
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !7657
  %neg1.i = xor i32 %16, -1, !dbg !7658
  %shr.i = ashr i32 %neg1.i, 31, !dbg !7659
  %17 = load i32, i32* %p.addr.i, align 4, !dbg !7660
  %shl2.i = shl i32 1, %17, !dbg !7661
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !7662
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !7663
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !7664
  br label %av_clip_uintp2_c.exit, !dbg !7664

if.else.i:                                        ; preds = %for.body7
  %18 = load i32, i32* %a.addr.i, align 4, !dbg !7665
  store i32 %18, i32* %retval.i, align 4, !dbg !7666
  br label %av_clip_uintp2_c.exit, !dbg !7666

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %19 = load i32, i32* %retval.i, align 4, !dbg !7667
  %conv11 = trunc i32 %19 to i16, !dbg !7649
  %20 = load i32, i32* %i, align 4, !dbg !7668
  %idxprom12 = sext i32 %20 to i64, !dbg !7669
  %21 = load i16*, i16** %dst, align 8, !dbg !7669
  %arrayidx13 = getelementptr inbounds i16, i16* %21, i64 %idxprom12, !dbg !7669
  store i16 %conv11, i16* %arrayidx13, align 2, !dbg !7670
  br label %for.inc, !dbg !7669

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %22 = load i32, i32* %i, align 4, !dbg !7671
  %inc = add nsw i32 %22, 1, !dbg !7671
  store i32 %inc, i32* %i, align 4, !dbg !7671
  br label %for.cond4, !dbg !7673, !llvm.loop !7674

for.end:                                          ; preds = %for.cond4
  %23 = load i32, i32* %stride.addr, align 4, !dbg !7676
  %24 = load i16*, i16** %dst, align 8, !dbg !7677
  %idx.ext = sext i32 %23 to i64, !dbg !7677
  %add.ptr = getelementptr inbounds i16, i16* %24, i64 %idx.ext, !dbg !7677
  store i16* %add.ptr, i16** %dst, align 8, !dbg !7677
  br label %for.inc14, !dbg !7678

for.inc14:                                        ; preds = %for.end
  %25 = load i32, i32* %j, align 4, !dbg !7679
  %inc15 = add nsw i32 %25, 1, !dbg !7679
  store i32 %inc15, i32* %j, align 4, !dbg !7679
  br label %for.cond, !dbg !7681, !llvm.loop !7682

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !7684
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add16_12_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !7685 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %nnz = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !7686, metadata !67), !dbg !7687
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !7688, metadata !67), !dbg !7689
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !7690, metadata !67), !dbg !7691
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7692, metadata !67), !dbg !7693
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !7694, metadata !67), !dbg !7695
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7696, metadata !67), !dbg !7697
  store i32 0, i32* %i, align 4, !dbg !7698
  br label %for.cond, !dbg !7700

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7701
  %cmp = icmp slt i32 %0, 16, !dbg !7704
  br i1 %cmp, label %for.body, label %for.end, !dbg !7705

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %nnz, metadata !7706, metadata !67), !dbg !7708
  %1 = load i32, i32* %i, align 4, !dbg !7709
  %idxprom = sext i32 %1 to i64, !dbg !7710
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !7710
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7710
  %idxprom1 = zext i8 %2 to i64, !dbg !7711
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !7711
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !7711
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !7711
  %conv = zext i8 %4 to i32, !dbg !7711
  store i32 %conv, i32* %nnz, align 4, !dbg !7708
  %5 = load i32, i32* %nnz, align 4, !dbg !7712
  %tobool = icmp ne i32 %5, 0, !dbg !7712
  br i1 %tobool, label %if.then, label %if.end23, !dbg !7714

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %nnz, align 4, !dbg !7715
  %cmp3 = icmp eq i32 %6, 1, !dbg !7718
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !7719

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %i, align 4, !dbg !7720
  %mul = mul nsw i32 %7, 16, !dbg !7722
  %idxprom5 = sext i32 %mul to i64, !dbg !7723
  %8 = load i16*, i16** %block.addr, align 8, !dbg !7724
  %9 = bitcast i16* %8 to i32*, !dbg !7723
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i64 %idxprom5, !dbg !7723
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !7723
  %tobool7 = icmp ne i32 %10, 0, !dbg !7723
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !7725

if.then8:                                         ; preds = %land.lhs.true
  %11 = load i8*, i8** %dst.addr, align 8, !dbg !7726
  %12 = load i32, i32* %i, align 4, !dbg !7728
  %idxprom9 = sext i32 %12 to i64, !dbg !7729
  %13 = load i32*, i32** %block_offset.addr, align 8, !dbg !7729
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 %idxprom9, !dbg !7729
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !7729
  %idx.ext = sext i32 %14 to i64, !dbg !7730
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !7730
  %15 = load i16*, i16** %block.addr, align 8, !dbg !7731
  %16 = load i32, i32* %i, align 4, !dbg !7732
  %mul11 = mul nsw i32 %16, 16, !dbg !7733
  %conv12 = sext i32 %mul11 to i64, !dbg !7732
  %mul13 = mul i64 %conv12, 2, !dbg !7734
  %add.ptr14 = getelementptr inbounds i16, i16* %15, i64 %mul13, !dbg !7735
  %17 = load i32, i32* %stride.addr, align 4, !dbg !7736
  call void @ff_h264_idct_dc_add_12_c(i8* %add.ptr, i16* %add.ptr14, i32 %17), !dbg !7737
  br label %if.end, !dbg !7737

if.else:                                          ; preds = %land.lhs.true, %if.then
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !7738
  %19 = load i32, i32* %i, align 4, !dbg !7739
  %idxprom15 = sext i32 %19 to i64, !dbg !7740
  %20 = load i32*, i32** %block_offset.addr, align 8, !dbg !7740
  %arrayidx16 = getelementptr inbounds i32, i32* %20, i64 %idxprom15, !dbg !7740
  %21 = load i32, i32* %arrayidx16, align 4, !dbg !7740
  %idx.ext17 = sext i32 %21 to i64, !dbg !7741
  %add.ptr18 = getelementptr inbounds i8, i8* %18, i64 %idx.ext17, !dbg !7741
  %22 = load i16*, i16** %block.addr, align 8, !dbg !7742
  %23 = load i32, i32* %i, align 4, !dbg !7743
  %mul19 = mul nsw i32 %23, 16, !dbg !7744
  %conv20 = sext i32 %mul19 to i64, !dbg !7743
  %mul21 = mul i64 %conv20, 2, !dbg !7745
  %add.ptr22 = getelementptr inbounds i16, i16* %22, i64 %mul21, !dbg !7746
  %24 = load i32, i32* %stride.addr, align 4, !dbg !7747
  call void @ff_h264_idct_add_12_c(i8* %add.ptr18, i16* %add.ptr22, i32 %24), !dbg !7748
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end23, !dbg !7749

if.end23:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !7750

for.inc:                                          ; preds = %if.end23
  %25 = load i32, i32* %i, align 4, !dbg !7751
  %inc = add nsw i32 %25, 1, !dbg !7751
  store i32 %inc, i32* %i, align 4, !dbg !7751
  br label %for.cond, !dbg !7753, !llvm.loop !7754

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7756
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add16intra_12_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !7757 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !7758, metadata !67), !dbg !7759
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !7760, metadata !67), !dbg !7761
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !7762, metadata !67), !dbg !7763
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7764, metadata !67), !dbg !7765
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !7766, metadata !67), !dbg !7767
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7768, metadata !67), !dbg !7769
  store i32 0, i32* %i, align 4, !dbg !7770
  br label %for.cond, !dbg !7772

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7773
  %cmp = icmp slt i32 %0, 16, !dbg !7776
  br i1 %cmp, label %for.body, label %for.end, !dbg !7777

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !7778
  %idxprom = sext i32 %1 to i64, !dbg !7781
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !7781
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7781
  %idxprom1 = zext i8 %2 to i64, !dbg !7782
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !7782
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !7782
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !7782
  %tobool = icmp ne i8 %4, 0, !dbg !7782
  br i1 %tobool, label %if.then, label %if.else, !dbg !7783

if.then:                                          ; preds = %for.body
  %5 = load i8*, i8** %dst.addr, align 8, !dbg !7784
  %6 = load i32, i32* %i, align 4, !dbg !7786
  %idxprom3 = sext i32 %6 to i64, !dbg !7787
  %7 = load i32*, i32** %block_offset.addr, align 8, !dbg !7787
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 %idxprom3, !dbg !7787
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !7787
  %idx.ext = sext i32 %8 to i64, !dbg !7788
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7788
  %9 = load i16*, i16** %block.addr, align 8, !dbg !7789
  %10 = load i32, i32* %i, align 4, !dbg !7790
  %mul = mul nsw i32 %10, 16, !dbg !7791
  %conv = sext i32 %mul to i64, !dbg !7790
  %mul5 = mul i64 %conv, 2, !dbg !7792
  %add.ptr6 = getelementptr inbounds i16, i16* %9, i64 %mul5, !dbg !7793
  %11 = load i32, i32* %stride.addr, align 4, !dbg !7794
  call void @ff_h264_idct_add_12_c(i8* %add.ptr, i16* %add.ptr6, i32 %11), !dbg !7795
  br label %if.end20, !dbg !7795

if.else:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !7796
  %mul7 = mul nsw i32 %12, 16, !dbg !7798
  %idxprom8 = sext i32 %mul7 to i64, !dbg !7799
  %13 = load i16*, i16** %block.addr, align 8, !dbg !7800
  %14 = bitcast i16* %13 to i32*, !dbg !7799
  %arrayidx9 = getelementptr inbounds i32, i32* %14, i64 %idxprom8, !dbg !7799
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !7799
  %tobool10 = icmp ne i32 %15, 0, !dbg !7799
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !7801

if.then11:                                        ; preds = %if.else
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !7802
  %17 = load i32, i32* %i, align 4, !dbg !7804
  %idxprom12 = sext i32 %17 to i64, !dbg !7805
  %18 = load i32*, i32** %block_offset.addr, align 8, !dbg !7805
  %arrayidx13 = getelementptr inbounds i32, i32* %18, i64 %idxprom12, !dbg !7805
  %19 = load i32, i32* %arrayidx13, align 4, !dbg !7805
  %idx.ext14 = sext i32 %19 to i64, !dbg !7806
  %add.ptr15 = getelementptr inbounds i8, i8* %16, i64 %idx.ext14, !dbg !7806
  %20 = load i16*, i16** %block.addr, align 8, !dbg !7807
  %21 = load i32, i32* %i, align 4, !dbg !7808
  %mul16 = mul nsw i32 %21, 16, !dbg !7809
  %conv17 = sext i32 %mul16 to i64, !dbg !7808
  %mul18 = mul i64 %conv17, 2, !dbg !7810
  %add.ptr19 = getelementptr inbounds i16, i16* %20, i64 %mul18, !dbg !7811
  %22 = load i32, i32* %stride.addr, align 4, !dbg !7812
  call void @ff_h264_idct_dc_add_12_c(i8* %add.ptr15, i16* %add.ptr19, i32 %22), !dbg !7813
  br label %if.end, !dbg !7813

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !7814

for.inc:                                          ; preds = %if.end20
  %23 = load i32, i32* %i, align 4, !dbg !7815
  %inc = add nsw i32 %23, 1, !dbg !7815
  store i32 %inc, i32* %i, align 4, !dbg !7815
  br label %for.cond, !dbg !7817, !llvm.loop !7818

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7820
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_add4_12_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !7821 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %nnz = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !7822, metadata !67), !dbg !7823
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !7824, metadata !67), !dbg !7825
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !7826, metadata !67), !dbg !7827
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7828, metadata !67), !dbg !7829
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !7830, metadata !67), !dbg !7831
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7832, metadata !67), !dbg !7833
  store i32 0, i32* %i, align 4, !dbg !7834
  br label %for.cond, !dbg !7836

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7837
  %cmp = icmp slt i32 %0, 16, !dbg !7840
  br i1 %cmp, label %for.body, label %for.end, !dbg !7841

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %nnz, metadata !7842, metadata !67), !dbg !7844
  %1 = load i32, i32* %i, align 4, !dbg !7845
  %idxprom = sext i32 %1 to i64, !dbg !7846
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !7846
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7846
  %idxprom1 = zext i8 %2 to i64, !dbg !7847
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !7847
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !7847
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !7847
  %conv = zext i8 %4 to i32, !dbg !7847
  store i32 %conv, i32* %nnz, align 4, !dbg !7844
  %5 = load i32, i32* %nnz, align 4, !dbg !7848
  %tobool = icmp ne i32 %5, 0, !dbg !7848
  br i1 %tobool, label %if.then, label %if.end23, !dbg !7850

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %nnz, align 4, !dbg !7851
  %cmp3 = icmp eq i32 %6, 1, !dbg !7854
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !7855

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %i, align 4, !dbg !7856
  %mul = mul nsw i32 %7, 16, !dbg !7858
  %idxprom5 = sext i32 %mul to i64, !dbg !7859
  %8 = load i16*, i16** %block.addr, align 8, !dbg !7860
  %9 = bitcast i16* %8 to i32*, !dbg !7859
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i64 %idxprom5, !dbg !7859
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !7859
  %tobool7 = icmp ne i32 %10, 0, !dbg !7859
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !7861

if.then8:                                         ; preds = %land.lhs.true
  %11 = load i8*, i8** %dst.addr, align 8, !dbg !7862
  %12 = load i32, i32* %i, align 4, !dbg !7864
  %idxprom9 = sext i32 %12 to i64, !dbg !7865
  %13 = load i32*, i32** %block_offset.addr, align 8, !dbg !7865
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 %idxprom9, !dbg !7865
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !7865
  %idx.ext = sext i32 %14 to i64, !dbg !7866
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !7866
  %15 = load i16*, i16** %block.addr, align 8, !dbg !7867
  %16 = load i32, i32* %i, align 4, !dbg !7868
  %mul11 = mul nsw i32 %16, 16, !dbg !7869
  %conv12 = sext i32 %mul11 to i64, !dbg !7868
  %mul13 = mul i64 %conv12, 2, !dbg !7870
  %add.ptr14 = getelementptr inbounds i16, i16* %15, i64 %mul13, !dbg !7871
  %17 = load i32, i32* %stride.addr, align 4, !dbg !7872
  call void @ff_h264_idct8_dc_add_12_c(i8* %add.ptr, i16* %add.ptr14, i32 %17), !dbg !7873
  br label %if.end, !dbg !7873

if.else:                                          ; preds = %land.lhs.true, %if.then
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !7874
  %19 = load i32, i32* %i, align 4, !dbg !7875
  %idxprom15 = sext i32 %19 to i64, !dbg !7876
  %20 = load i32*, i32** %block_offset.addr, align 8, !dbg !7876
  %arrayidx16 = getelementptr inbounds i32, i32* %20, i64 %idxprom15, !dbg !7876
  %21 = load i32, i32* %arrayidx16, align 4, !dbg !7876
  %idx.ext17 = sext i32 %21 to i64, !dbg !7877
  %add.ptr18 = getelementptr inbounds i8, i8* %18, i64 %idx.ext17, !dbg !7877
  %22 = load i16*, i16** %block.addr, align 8, !dbg !7878
  %23 = load i32, i32* %i, align 4, !dbg !7879
  %mul19 = mul nsw i32 %23, 16, !dbg !7880
  %conv20 = sext i32 %mul19 to i64, !dbg !7879
  %mul21 = mul i64 %conv20, 2, !dbg !7881
  %add.ptr22 = getelementptr inbounds i16, i16* %22, i64 %mul21, !dbg !7882
  %24 = load i32, i32* %stride.addr, align 4, !dbg !7883
  call void @ff_h264_idct8_add_12_c(i8* %add.ptr18, i16* %add.ptr22, i32 %24), !dbg !7884
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end23, !dbg !7885

if.end23:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !7886

for.inc:                                          ; preds = %if.end23
  %25 = load i32, i32* %i, align 4, !dbg !7887
  %add = add nsw i32 %25, 4, !dbg !7887
  store i32 %add, i32* %i, align 4, !dbg !7887
  br label %for.cond, !dbg !7889, !llvm.loop !7890

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7892
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add8_12_c(i8** %dest, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !7893 {
entry:
  %dest.addr = alloca i8**, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !7894, metadata !67), !dbg !7895
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !7896, metadata !67), !dbg !7897
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !7898, metadata !67), !dbg !7899
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7900, metadata !67), !dbg !7901
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !7902, metadata !67), !dbg !7903
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7904, metadata !67), !dbg !7905
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7906, metadata !67), !dbg !7907
  store i32 1, i32* %j, align 4, !dbg !7908
  br label %for.cond, !dbg !7910

for.cond:                                         ; preds = %for.inc31, %entry
  %0 = load i32, i32* %j, align 4, !dbg !7911
  %cmp = icmp slt i32 %0, 3, !dbg !7914
  br i1 %cmp, label %for.body, label %for.end33, !dbg !7915

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !7916
  %mul = mul nsw i32 %1, 16, !dbg !7919
  store i32 %mul, i32* %i, align 4, !dbg !7920
  br label %for.cond1, !dbg !7921

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !7922
  %3 = load i32, i32* %j, align 4, !dbg !7925
  %mul2 = mul nsw i32 %3, 16, !dbg !7926
  %add = add nsw i32 %mul2, 4, !dbg !7927
  %cmp3 = icmp slt i32 %2, %add, !dbg !7928
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !7929

for.body4:                                        ; preds = %for.cond1
  %4 = load i32, i32* %i, align 4, !dbg !7930
  %idxprom = sext i32 %4 to i64, !dbg !7933
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !7933
  %5 = load i8, i8* %arrayidx, align 1, !dbg !7933
  %idxprom5 = zext i8 %5 to i64, !dbg !7934
  %6 = load i8*, i8** %nnzc.addr, align 8, !dbg !7934
  %arrayidx6 = getelementptr inbounds i8, i8* %6, i64 %idxprom5, !dbg !7934
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !7934
  %tobool = icmp ne i8 %7, 0, !dbg !7934
  br i1 %tobool, label %if.then, label %if.else, !dbg !7935

if.then:                                          ; preds = %for.body4
  %8 = load i32, i32* %j, align 4, !dbg !7936
  %sub = sub nsw i32 %8, 1, !dbg !7937
  %idxprom7 = sext i32 %sub to i64, !dbg !7938
  %9 = load i8**, i8*** %dest.addr, align 8, !dbg !7938
  %arrayidx8 = getelementptr inbounds i8*, i8** %9, i64 %idxprom7, !dbg !7938
  %10 = load i8*, i8** %arrayidx8, align 8, !dbg !7938
  %11 = load i32, i32* %i, align 4, !dbg !7939
  %idxprom9 = sext i32 %11 to i64, !dbg !7940
  %12 = load i32*, i32** %block_offset.addr, align 8, !dbg !7940
  %arrayidx10 = getelementptr inbounds i32, i32* %12, i64 %idxprom9, !dbg !7940
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !7940
  %idx.ext = sext i32 %13 to i64, !dbg !7941
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !7941
  %14 = load i16*, i16** %block.addr, align 8, !dbg !7942
  %15 = load i32, i32* %i, align 4, !dbg !7943
  %mul11 = mul nsw i32 %15, 16, !dbg !7944
  %conv = sext i32 %mul11 to i64, !dbg !7943
  %mul12 = mul i64 %conv, 2, !dbg !7945
  %add.ptr13 = getelementptr inbounds i16, i16* %14, i64 %mul12, !dbg !7946
  %16 = load i32, i32* %stride.addr, align 4, !dbg !7947
  call void @ff_h264_idct_add_12_c(i8* %add.ptr, i16* %add.ptr13, i32 %16), !dbg !7948
  br label %if.end30, !dbg !7948

if.else:                                          ; preds = %for.body4
  %17 = load i32, i32* %i, align 4, !dbg !7949
  %mul14 = mul nsw i32 %17, 16, !dbg !7951
  %idxprom15 = sext i32 %mul14 to i64, !dbg !7952
  %18 = load i16*, i16** %block.addr, align 8, !dbg !7953
  %19 = bitcast i16* %18 to i32*, !dbg !7952
  %arrayidx16 = getelementptr inbounds i32, i32* %19, i64 %idxprom15, !dbg !7952
  %20 = load i32, i32* %arrayidx16, align 4, !dbg !7952
  %tobool17 = icmp ne i32 %20, 0, !dbg !7952
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !7954

if.then18:                                        ; preds = %if.else
  %21 = load i32, i32* %j, align 4, !dbg !7955
  %sub19 = sub nsw i32 %21, 1, !dbg !7956
  %idxprom20 = sext i32 %sub19 to i64, !dbg !7957
  %22 = load i8**, i8*** %dest.addr, align 8, !dbg !7957
  %arrayidx21 = getelementptr inbounds i8*, i8** %22, i64 %idxprom20, !dbg !7957
  %23 = load i8*, i8** %arrayidx21, align 8, !dbg !7957
  %24 = load i32, i32* %i, align 4, !dbg !7958
  %idxprom22 = sext i32 %24 to i64, !dbg !7959
  %25 = load i32*, i32** %block_offset.addr, align 8, !dbg !7959
  %arrayidx23 = getelementptr inbounds i32, i32* %25, i64 %idxprom22, !dbg !7959
  %26 = load i32, i32* %arrayidx23, align 4, !dbg !7959
  %idx.ext24 = sext i32 %26 to i64, !dbg !7960
  %add.ptr25 = getelementptr inbounds i8, i8* %23, i64 %idx.ext24, !dbg !7960
  %27 = load i16*, i16** %block.addr, align 8, !dbg !7961
  %28 = load i32, i32* %i, align 4, !dbg !7962
  %mul26 = mul nsw i32 %28, 16, !dbg !7963
  %conv27 = sext i32 %mul26 to i64, !dbg !7962
  %mul28 = mul i64 %conv27, 2, !dbg !7964
  %add.ptr29 = getelementptr inbounds i16, i16* %27, i64 %mul28, !dbg !7965
  %29 = load i32, i32* %stride.addr, align 4, !dbg !7966
  call void @ff_h264_idct_dc_add_12_c(i8* %add.ptr25, i16* %add.ptr29, i32 %29), !dbg !7967
  br label %if.end, !dbg !7967

if.end:                                           ; preds = %if.then18, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !7968

for.inc:                                          ; preds = %if.end30
  %30 = load i32, i32* %i, align 4, !dbg !7969
  %inc = add nsw i32 %30, 1, !dbg !7969
  store i32 %inc, i32* %i, align 4, !dbg !7969
  br label %for.cond1, !dbg !7971, !llvm.loop !7972

for.end:                                          ; preds = %for.cond1
  br label %for.inc31, !dbg !7974

for.inc31:                                        ; preds = %for.end
  %31 = load i32, i32* %j, align 4, !dbg !7975
  %inc32 = add nsw i32 %31, 1, !dbg !7975
  store i32 %inc32, i32* %j, align 4, !dbg !7975
  br label %for.cond, !dbg !7977, !llvm.loop !7978

for.end33:                                        ; preds = %for.cond
  ret void, !dbg !7980
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add8_422_12_c(i8** %dest, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !7981 {
entry:
  %dest.addr = alloca i8**, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !7982, metadata !67), !dbg !7983
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !7984, metadata !67), !dbg !7985
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !7986, metadata !67), !dbg !7987
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7988, metadata !67), !dbg !7989
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !7990, metadata !67), !dbg !7991
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7992, metadata !67), !dbg !7993
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7994, metadata !67), !dbg !7995
  store i32 1, i32* %j, align 4, !dbg !7996
  br label %for.cond, !dbg !7998

for.cond:                                         ; preds = %for.inc31, %entry
  %0 = load i32, i32* %j, align 4, !dbg !7999
  %cmp = icmp slt i32 %0, 3, !dbg !8002
  br i1 %cmp, label %for.body, label %for.end33, !dbg !8003

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !8004
  %mul = mul nsw i32 %1, 16, !dbg !8007
  store i32 %mul, i32* %i, align 4, !dbg !8008
  br label %for.cond1, !dbg !8009

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !8010
  %3 = load i32, i32* %j, align 4, !dbg !8013
  %mul2 = mul nsw i32 %3, 16, !dbg !8014
  %add = add nsw i32 %mul2, 4, !dbg !8015
  %cmp3 = icmp slt i32 %2, %add, !dbg !8016
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !8017

for.body4:                                        ; preds = %for.cond1
  %4 = load i32, i32* %i, align 4, !dbg !8018
  %idxprom = sext i32 %4 to i64, !dbg !8021
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !8021
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8021
  %idxprom5 = zext i8 %5 to i64, !dbg !8022
  %6 = load i8*, i8** %nnzc.addr, align 8, !dbg !8022
  %arrayidx6 = getelementptr inbounds i8, i8* %6, i64 %idxprom5, !dbg !8022
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !8022
  %tobool = icmp ne i8 %7, 0, !dbg !8022
  br i1 %tobool, label %if.then, label %if.else, !dbg !8023

if.then:                                          ; preds = %for.body4
  %8 = load i32, i32* %j, align 4, !dbg !8024
  %sub = sub nsw i32 %8, 1, !dbg !8025
  %idxprom7 = sext i32 %sub to i64, !dbg !8026
  %9 = load i8**, i8*** %dest.addr, align 8, !dbg !8026
  %arrayidx8 = getelementptr inbounds i8*, i8** %9, i64 %idxprom7, !dbg !8026
  %10 = load i8*, i8** %arrayidx8, align 8, !dbg !8026
  %11 = load i32, i32* %i, align 4, !dbg !8027
  %idxprom9 = sext i32 %11 to i64, !dbg !8028
  %12 = load i32*, i32** %block_offset.addr, align 8, !dbg !8028
  %arrayidx10 = getelementptr inbounds i32, i32* %12, i64 %idxprom9, !dbg !8028
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !8028
  %idx.ext = sext i32 %13 to i64, !dbg !8029
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !8029
  %14 = load i16*, i16** %block.addr, align 8, !dbg !8030
  %15 = load i32, i32* %i, align 4, !dbg !8031
  %mul11 = mul nsw i32 %15, 16, !dbg !8032
  %conv = sext i32 %mul11 to i64, !dbg !8031
  %mul12 = mul i64 %conv, 2, !dbg !8033
  %add.ptr13 = getelementptr inbounds i16, i16* %14, i64 %mul12, !dbg !8034
  %16 = load i32, i32* %stride.addr, align 4, !dbg !8035
  call void @ff_h264_idct_add_12_c(i8* %add.ptr, i16* %add.ptr13, i32 %16), !dbg !8036
  br label %if.end30, !dbg !8036

if.else:                                          ; preds = %for.body4
  %17 = load i32, i32* %i, align 4, !dbg !8037
  %mul14 = mul nsw i32 %17, 16, !dbg !8039
  %idxprom15 = sext i32 %mul14 to i64, !dbg !8040
  %18 = load i16*, i16** %block.addr, align 8, !dbg !8041
  %19 = bitcast i16* %18 to i32*, !dbg !8040
  %arrayidx16 = getelementptr inbounds i32, i32* %19, i64 %idxprom15, !dbg !8040
  %20 = load i32, i32* %arrayidx16, align 4, !dbg !8040
  %tobool17 = icmp ne i32 %20, 0, !dbg !8040
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !8042

if.then18:                                        ; preds = %if.else
  %21 = load i32, i32* %j, align 4, !dbg !8043
  %sub19 = sub nsw i32 %21, 1, !dbg !8044
  %idxprom20 = sext i32 %sub19 to i64, !dbg !8045
  %22 = load i8**, i8*** %dest.addr, align 8, !dbg !8045
  %arrayidx21 = getelementptr inbounds i8*, i8** %22, i64 %idxprom20, !dbg !8045
  %23 = load i8*, i8** %arrayidx21, align 8, !dbg !8045
  %24 = load i32, i32* %i, align 4, !dbg !8046
  %idxprom22 = sext i32 %24 to i64, !dbg !8047
  %25 = load i32*, i32** %block_offset.addr, align 8, !dbg !8047
  %arrayidx23 = getelementptr inbounds i32, i32* %25, i64 %idxprom22, !dbg !8047
  %26 = load i32, i32* %arrayidx23, align 4, !dbg !8047
  %idx.ext24 = sext i32 %26 to i64, !dbg !8048
  %add.ptr25 = getelementptr inbounds i8, i8* %23, i64 %idx.ext24, !dbg !8048
  %27 = load i16*, i16** %block.addr, align 8, !dbg !8049
  %28 = load i32, i32* %i, align 4, !dbg !8050
  %mul26 = mul nsw i32 %28, 16, !dbg !8051
  %conv27 = sext i32 %mul26 to i64, !dbg !8050
  %mul28 = mul i64 %conv27, 2, !dbg !8052
  %add.ptr29 = getelementptr inbounds i16, i16* %27, i64 %mul28, !dbg !8053
  %29 = load i32, i32* %stride.addr, align 4, !dbg !8054
  call void @ff_h264_idct_dc_add_12_c(i8* %add.ptr25, i16* %add.ptr29, i32 %29), !dbg !8055
  br label %if.end, !dbg !8055

if.end:                                           ; preds = %if.then18, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !8056

for.inc:                                          ; preds = %if.end30
  %30 = load i32, i32* %i, align 4, !dbg !8057
  %inc = add nsw i32 %30, 1, !dbg !8057
  store i32 %inc, i32* %i, align 4, !dbg !8057
  br label %for.cond1, !dbg !8059, !llvm.loop !8060

for.end:                                          ; preds = %for.cond1
  br label %for.inc31, !dbg !8062

for.inc31:                                        ; preds = %for.end
  %31 = load i32, i32* %j, align 4, !dbg !8063
  %inc32 = add nsw i32 %31, 1, !dbg !8063
  store i32 %inc32, i32* %j, align 4, !dbg !8063
  br label %for.cond, !dbg !8065, !llvm.loop !8066

for.end33:                                        ; preds = %for.cond
  store i32 1, i32* %j, align 4, !dbg !8068
  br label %for.cond34, !dbg !8070

for.cond34:                                       ; preds = %for.inc88, %for.end33
  %32 = load i32, i32* %j, align 4, !dbg !8071
  %cmp35 = icmp slt i32 %32, 3, !dbg !8074
  br i1 %cmp35, label %for.body37, label %for.end90, !dbg !8075

for.body37:                                       ; preds = %for.cond34
  %33 = load i32, i32* %j, align 4, !dbg !8076
  %mul38 = mul nsw i32 %33, 16, !dbg !8079
  %add39 = add nsw i32 %mul38, 4, !dbg !8080
  store i32 %add39, i32* %i, align 4, !dbg !8081
  br label %for.cond40, !dbg !8082

for.cond40:                                       ; preds = %for.inc85, %for.body37
  %34 = load i32, i32* %i, align 4, !dbg !8083
  %35 = load i32, i32* %j, align 4, !dbg !8086
  %mul41 = mul nsw i32 %35, 16, !dbg !8087
  %add42 = add nsw i32 %mul41, 8, !dbg !8088
  %cmp43 = icmp slt i32 %34, %add42, !dbg !8089
  br i1 %cmp43, label %for.body45, label %for.end87, !dbg !8090

for.body45:                                       ; preds = %for.cond40
  %36 = load i32, i32* %i, align 4, !dbg !8091
  %add46 = add nsw i32 %36, 4, !dbg !8094
  %idxprom47 = sext i32 %add46 to i64, !dbg !8095
  %arrayidx48 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom47, !dbg !8095
  %37 = load i8, i8* %arrayidx48, align 1, !dbg !8095
  %idxprom49 = zext i8 %37 to i64, !dbg !8096
  %38 = load i8*, i8** %nnzc.addr, align 8, !dbg !8096
  %arrayidx50 = getelementptr inbounds i8, i8* %38, i64 %idxprom49, !dbg !8096
  %39 = load i8, i8* %arrayidx50, align 1, !dbg !8096
  %tobool51 = icmp ne i8 %39, 0, !dbg !8096
  br i1 %tobool51, label %if.then52, label %if.else65, !dbg !8097

if.then52:                                        ; preds = %for.body45
  %40 = load i32, i32* %j, align 4, !dbg !8098
  %sub53 = sub nsw i32 %40, 1, !dbg !8099
  %idxprom54 = sext i32 %sub53 to i64, !dbg !8100
  %41 = load i8**, i8*** %dest.addr, align 8, !dbg !8100
  %arrayidx55 = getelementptr inbounds i8*, i8** %41, i64 %idxprom54, !dbg !8100
  %42 = load i8*, i8** %arrayidx55, align 8, !dbg !8100
  %43 = load i32, i32* %i, align 4, !dbg !8101
  %add56 = add nsw i32 %43, 4, !dbg !8102
  %idxprom57 = sext i32 %add56 to i64, !dbg !8103
  %44 = load i32*, i32** %block_offset.addr, align 8, !dbg !8103
  %arrayidx58 = getelementptr inbounds i32, i32* %44, i64 %idxprom57, !dbg !8103
  %45 = load i32, i32* %arrayidx58, align 4, !dbg !8103
  %idx.ext59 = sext i32 %45 to i64, !dbg !8104
  %add.ptr60 = getelementptr inbounds i8, i8* %42, i64 %idx.ext59, !dbg !8104
  %46 = load i16*, i16** %block.addr, align 8, !dbg !8105
  %47 = load i32, i32* %i, align 4, !dbg !8106
  %mul61 = mul nsw i32 %47, 16, !dbg !8107
  %conv62 = sext i32 %mul61 to i64, !dbg !8106
  %mul63 = mul i64 %conv62, 2, !dbg !8108
  %add.ptr64 = getelementptr inbounds i16, i16* %46, i64 %mul63, !dbg !8109
  %48 = load i32, i32* %stride.addr, align 4, !dbg !8110
  call void @ff_h264_idct_add_12_c(i8* %add.ptr60, i16* %add.ptr64, i32 %48), !dbg !8111
  br label %if.end84, !dbg !8111

if.else65:                                        ; preds = %for.body45
  %49 = load i32, i32* %i, align 4, !dbg !8112
  %mul66 = mul nsw i32 %49, 16, !dbg !8114
  %idxprom67 = sext i32 %mul66 to i64, !dbg !8115
  %50 = load i16*, i16** %block.addr, align 8, !dbg !8116
  %51 = bitcast i16* %50 to i32*, !dbg !8115
  %arrayidx68 = getelementptr inbounds i32, i32* %51, i64 %idxprom67, !dbg !8115
  %52 = load i32, i32* %arrayidx68, align 4, !dbg !8115
  %tobool69 = icmp ne i32 %52, 0, !dbg !8115
  br i1 %tobool69, label %if.then70, label %if.end83, !dbg !8117

if.then70:                                        ; preds = %if.else65
  %53 = load i32, i32* %j, align 4, !dbg !8118
  %sub71 = sub nsw i32 %53, 1, !dbg !8119
  %idxprom72 = sext i32 %sub71 to i64, !dbg !8120
  %54 = load i8**, i8*** %dest.addr, align 8, !dbg !8120
  %arrayidx73 = getelementptr inbounds i8*, i8** %54, i64 %idxprom72, !dbg !8120
  %55 = load i8*, i8** %arrayidx73, align 8, !dbg !8120
  %56 = load i32, i32* %i, align 4, !dbg !8121
  %add74 = add nsw i32 %56, 4, !dbg !8122
  %idxprom75 = sext i32 %add74 to i64, !dbg !8123
  %57 = load i32*, i32** %block_offset.addr, align 8, !dbg !8123
  %arrayidx76 = getelementptr inbounds i32, i32* %57, i64 %idxprom75, !dbg !8123
  %58 = load i32, i32* %arrayidx76, align 4, !dbg !8123
  %idx.ext77 = sext i32 %58 to i64, !dbg !8124
  %add.ptr78 = getelementptr inbounds i8, i8* %55, i64 %idx.ext77, !dbg !8124
  %59 = load i16*, i16** %block.addr, align 8, !dbg !8125
  %60 = load i32, i32* %i, align 4, !dbg !8126
  %mul79 = mul nsw i32 %60, 16, !dbg !8127
  %conv80 = sext i32 %mul79 to i64, !dbg !8126
  %mul81 = mul i64 %conv80, 2, !dbg !8128
  %add.ptr82 = getelementptr inbounds i16, i16* %59, i64 %mul81, !dbg !8129
  %61 = load i32, i32* %stride.addr, align 4, !dbg !8130
  call void @ff_h264_idct_dc_add_12_c(i8* %add.ptr78, i16* %add.ptr82, i32 %61), !dbg !8131
  br label %if.end83, !dbg !8131

if.end83:                                         ; preds = %if.then70, %if.else65
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then52
  br label %for.inc85, !dbg !8132

for.inc85:                                        ; preds = %if.end84
  %62 = load i32, i32* %i, align 4, !dbg !8133
  %inc86 = add nsw i32 %62, 1, !dbg !8133
  store i32 %inc86, i32* %i, align 4, !dbg !8133
  br label %for.cond40, !dbg !8135, !llvm.loop !8136

for.end87:                                        ; preds = %for.cond40
  br label %for.inc88, !dbg !8138

for.inc88:                                        ; preds = %for.end87
  %63 = load i32, i32* %j, align 4, !dbg !8139
  %inc89 = add nsw i32 %63, 1, !dbg !8139
  store i32 %inc89, i32* %j, align 4, !dbg !8139
  br label %for.cond34, !dbg !8141, !llvm.loop !8142

for.end90:                                        ; preds = %for.cond34
  ret void, !dbg !8144
}

; Function Attrs: nounwind uwtable
define void @ff_h264_luma_dc_dequant_idct_12_c(i16* %_output, i16* %_input, i32 %qmul) #0 !dbg !44 {
entry:
  %_output.addr = alloca i16*, align 8
  %_input.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca [16 x i32], align 16
  %input = alloca i32*, align 8
  %output = alloca i32*, align 8
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  %offset = alloca i32, align 4
  %z057 = alloca i32, align 4
  %z165 = alloca i32, align 4
  %z273 = alloca i32, align 4
  %z381 = alloca i32, align 4
  store i16* %_output, i16** %_output.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_output.addr, metadata !8145, metadata !67), !dbg !8146
  store i16* %_input, i16** %_input.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_input.addr, metadata !8147, metadata !67), !dbg !8148
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !8149, metadata !67), !dbg !8150
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8151, metadata !67), !dbg !8152
  call void @llvm.dbg.declare(metadata [16 x i32]* %temp, metadata !8153, metadata !67), !dbg !8154
  call void @llvm.dbg.declare(metadata i32** %input, metadata !8155, metadata !67), !dbg !8156
  %0 = load i16*, i16** %_input.addr, align 8, !dbg !8157
  %1 = bitcast i16* %0 to i32*, !dbg !8158
  store i32* %1, i32** %input, align 8, !dbg !8156
  call void @llvm.dbg.declare(metadata i32** %output, metadata !8159, metadata !67), !dbg !8160
  %2 = load i16*, i16** %_output.addr, align 8, !dbg !8161
  %3 = bitcast i16* %2 to i32*, !dbg !8162
  store i32* %3, i32** %output, align 8, !dbg !8160
  store i32 0, i32* %i, align 4, !dbg !8163
  br label %for.cond, !dbg !8165

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !8166
  %cmp = icmp slt i32 %4, 4, !dbg !8169
  br i1 %cmp, label %for.body, label %for.end, !dbg !8170

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !8171, metadata !67), !dbg !8173
  %5 = load i32, i32* %i, align 4, !dbg !8174
  %mul = mul nsw i32 4, %5, !dbg !8175
  %add = add nsw i32 %mul, 0, !dbg !8176
  %idxprom = sext i32 %add to i64, !dbg !8177
  %6 = load i32*, i32** %input, align 8, !dbg !8177
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !8177
  %7 = load i32, i32* %arrayidx, align 4, !dbg !8177
  %8 = load i32, i32* %i, align 4, !dbg !8178
  %mul1 = mul nsw i32 4, %8, !dbg !8179
  %add2 = add nsw i32 %mul1, 1, !dbg !8180
  %idxprom3 = sext i32 %add2 to i64, !dbg !8181
  %9 = load i32*, i32** %input, align 8, !dbg !8181
  %arrayidx4 = getelementptr inbounds i32, i32* %9, i64 %idxprom3, !dbg !8181
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !8181
  %add5 = add nsw i32 %7, %10, !dbg !8182
  store i32 %add5, i32* %z0, align 4, !dbg !8173
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !8183, metadata !67), !dbg !8184
  %11 = load i32, i32* %i, align 4, !dbg !8185
  %mul6 = mul nsw i32 4, %11, !dbg !8186
  %add7 = add nsw i32 %mul6, 0, !dbg !8187
  %idxprom8 = sext i32 %add7 to i64, !dbg !8188
  %12 = load i32*, i32** %input, align 8, !dbg !8188
  %arrayidx9 = getelementptr inbounds i32, i32* %12, i64 %idxprom8, !dbg !8188
  %13 = load i32, i32* %arrayidx9, align 4, !dbg !8188
  %14 = load i32, i32* %i, align 4, !dbg !8189
  %mul10 = mul nsw i32 4, %14, !dbg !8190
  %add11 = add nsw i32 %mul10, 1, !dbg !8191
  %idxprom12 = sext i32 %add11 to i64, !dbg !8192
  %15 = load i32*, i32** %input, align 8, !dbg !8192
  %arrayidx13 = getelementptr inbounds i32, i32* %15, i64 %idxprom12, !dbg !8192
  %16 = load i32, i32* %arrayidx13, align 4, !dbg !8192
  %sub = sub nsw i32 %13, %16, !dbg !8193
  store i32 %sub, i32* %z1, align 4, !dbg !8184
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !8194, metadata !67), !dbg !8195
  %17 = load i32, i32* %i, align 4, !dbg !8196
  %mul14 = mul nsw i32 4, %17, !dbg !8197
  %add15 = add nsw i32 %mul14, 2, !dbg !8198
  %idxprom16 = sext i32 %add15 to i64, !dbg !8199
  %18 = load i32*, i32** %input, align 8, !dbg !8199
  %arrayidx17 = getelementptr inbounds i32, i32* %18, i64 %idxprom16, !dbg !8199
  %19 = load i32, i32* %arrayidx17, align 4, !dbg !8199
  %20 = load i32, i32* %i, align 4, !dbg !8200
  %mul18 = mul nsw i32 4, %20, !dbg !8201
  %add19 = add nsw i32 %mul18, 3, !dbg !8202
  %idxprom20 = sext i32 %add19 to i64, !dbg !8203
  %21 = load i32*, i32** %input, align 8, !dbg !8203
  %arrayidx21 = getelementptr inbounds i32, i32* %21, i64 %idxprom20, !dbg !8203
  %22 = load i32, i32* %arrayidx21, align 4, !dbg !8203
  %sub22 = sub nsw i32 %19, %22, !dbg !8204
  store i32 %sub22, i32* %z2, align 4, !dbg !8195
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !8205, metadata !67), !dbg !8206
  %23 = load i32, i32* %i, align 4, !dbg !8207
  %mul23 = mul nsw i32 4, %23, !dbg !8208
  %add24 = add nsw i32 %mul23, 2, !dbg !8209
  %idxprom25 = sext i32 %add24 to i64, !dbg !8210
  %24 = load i32*, i32** %input, align 8, !dbg !8210
  %arrayidx26 = getelementptr inbounds i32, i32* %24, i64 %idxprom25, !dbg !8210
  %25 = load i32, i32* %arrayidx26, align 4, !dbg !8210
  %26 = load i32, i32* %i, align 4, !dbg !8211
  %mul27 = mul nsw i32 4, %26, !dbg !8212
  %add28 = add nsw i32 %mul27, 3, !dbg !8213
  %idxprom29 = sext i32 %add28 to i64, !dbg !8214
  %27 = load i32*, i32** %input, align 8, !dbg !8214
  %arrayidx30 = getelementptr inbounds i32, i32* %27, i64 %idxprom29, !dbg !8214
  %28 = load i32, i32* %arrayidx30, align 4, !dbg !8214
  %add31 = add nsw i32 %25, %28, !dbg !8215
  store i32 %add31, i32* %z3, align 4, !dbg !8206
  %29 = load i32, i32* %z0, align 4, !dbg !8216
  %30 = load i32, i32* %z3, align 4, !dbg !8217
  %add32 = add nsw i32 %29, %30, !dbg !8218
  %31 = load i32, i32* %i, align 4, !dbg !8219
  %mul33 = mul nsw i32 4, %31, !dbg !8220
  %add34 = add nsw i32 %mul33, 0, !dbg !8221
  %idxprom35 = sext i32 %add34 to i64, !dbg !8222
  %arrayidx36 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom35, !dbg !8222
  store i32 %add32, i32* %arrayidx36, align 4, !dbg !8223
  %32 = load i32, i32* %z0, align 4, !dbg !8224
  %33 = load i32, i32* %z3, align 4, !dbg !8225
  %sub37 = sub nsw i32 %32, %33, !dbg !8226
  %34 = load i32, i32* %i, align 4, !dbg !8227
  %mul38 = mul nsw i32 4, %34, !dbg !8228
  %add39 = add nsw i32 %mul38, 1, !dbg !8229
  %idxprom40 = sext i32 %add39 to i64, !dbg !8230
  %arrayidx41 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom40, !dbg !8230
  store i32 %sub37, i32* %arrayidx41, align 4, !dbg !8231
  %35 = load i32, i32* %z1, align 4, !dbg !8232
  %36 = load i32, i32* %z2, align 4, !dbg !8233
  %sub42 = sub nsw i32 %35, %36, !dbg !8234
  %37 = load i32, i32* %i, align 4, !dbg !8235
  %mul43 = mul nsw i32 4, %37, !dbg !8236
  %add44 = add nsw i32 %mul43, 2, !dbg !8237
  %idxprom45 = sext i32 %add44 to i64, !dbg !8238
  %arrayidx46 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom45, !dbg !8238
  store i32 %sub42, i32* %arrayidx46, align 4, !dbg !8239
  %38 = load i32, i32* %z1, align 4, !dbg !8240
  %39 = load i32, i32* %z2, align 4, !dbg !8241
  %add47 = add nsw i32 %38, %39, !dbg !8242
  %40 = load i32, i32* %i, align 4, !dbg !8243
  %mul48 = mul nsw i32 4, %40, !dbg !8244
  %add49 = add nsw i32 %mul48, 3, !dbg !8245
  %idxprom50 = sext i32 %add49 to i64, !dbg !8246
  %arrayidx51 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom50, !dbg !8246
  store i32 %add47, i32* %arrayidx51, align 4, !dbg !8247
  br label %for.inc, !dbg !8248

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %i, align 4, !dbg !8249
  %inc = add nsw i32 %41, 1, !dbg !8249
  store i32 %inc, i32* %i, align 4, !dbg !8249
  br label %for.cond, !dbg !8251, !llvm.loop !8252

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8254
  br label %for.cond52, !dbg !8256

for.cond52:                                       ; preds = %for.inc116, %for.end
  %42 = load i32, i32* %i, align 4, !dbg !8257
  %cmp53 = icmp slt i32 %42, 4, !dbg !8260
  br i1 %cmp53, label %for.body54, label %for.end118, !dbg !8261

for.body54:                                       ; preds = %for.cond52
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8262, metadata !67), !dbg !8264
  %43 = load i32, i32* %i, align 4, !dbg !8265
  %idxprom55 = sext i32 %43 to i64, !dbg !8266
  %arrayidx56 = getelementptr inbounds [4 x i8], [4 x i8]* @ff_h264_luma_dc_dequant_idct_12_c.x_offset, i64 0, i64 %idxprom55, !dbg !8266
  %44 = load i8, i8* %arrayidx56, align 1, !dbg !8266
  %conv = zext i8 %44 to i32, !dbg !8266
  store i32 %conv, i32* %offset, align 4, !dbg !8264
  call void @llvm.dbg.declare(metadata i32* %z057, metadata !8267, metadata !67), !dbg !8268
  %45 = load i32, i32* %i, align 4, !dbg !8269
  %add58 = add nsw i32 0, %45, !dbg !8270
  %idxprom59 = sext i32 %add58 to i64, !dbg !8271
  %arrayidx60 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom59, !dbg !8271
  %46 = load i32, i32* %arrayidx60, align 4, !dbg !8271
  %47 = load i32, i32* %i, align 4, !dbg !8272
  %add61 = add nsw i32 8, %47, !dbg !8273
  %idxprom62 = sext i32 %add61 to i64, !dbg !8274
  %arrayidx63 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom62, !dbg !8274
  %48 = load i32, i32* %arrayidx63, align 4, !dbg !8274
  %add64 = add nsw i32 %46, %48, !dbg !8275
  store i32 %add64, i32* %z057, align 4, !dbg !8268
  call void @llvm.dbg.declare(metadata i32* %z165, metadata !8276, metadata !67), !dbg !8277
  %49 = load i32, i32* %i, align 4, !dbg !8278
  %add66 = add nsw i32 0, %49, !dbg !8279
  %idxprom67 = sext i32 %add66 to i64, !dbg !8280
  %arrayidx68 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom67, !dbg !8280
  %50 = load i32, i32* %arrayidx68, align 4, !dbg !8280
  %51 = load i32, i32* %i, align 4, !dbg !8281
  %add69 = add nsw i32 8, %51, !dbg !8282
  %idxprom70 = sext i32 %add69 to i64, !dbg !8283
  %arrayidx71 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom70, !dbg !8283
  %52 = load i32, i32* %arrayidx71, align 4, !dbg !8283
  %sub72 = sub nsw i32 %50, %52, !dbg !8284
  store i32 %sub72, i32* %z165, align 4, !dbg !8277
  call void @llvm.dbg.declare(metadata i32* %z273, metadata !8285, metadata !67), !dbg !8286
  %53 = load i32, i32* %i, align 4, !dbg !8287
  %add74 = add nsw i32 4, %53, !dbg !8288
  %idxprom75 = sext i32 %add74 to i64, !dbg !8289
  %arrayidx76 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom75, !dbg !8289
  %54 = load i32, i32* %arrayidx76, align 4, !dbg !8289
  %55 = load i32, i32* %i, align 4, !dbg !8290
  %add77 = add nsw i32 12, %55, !dbg !8291
  %idxprom78 = sext i32 %add77 to i64, !dbg !8292
  %arrayidx79 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom78, !dbg !8292
  %56 = load i32, i32* %arrayidx79, align 4, !dbg !8292
  %sub80 = sub nsw i32 %54, %56, !dbg !8293
  store i32 %sub80, i32* %z273, align 4, !dbg !8286
  call void @llvm.dbg.declare(metadata i32* %z381, metadata !8294, metadata !67), !dbg !8295
  %57 = load i32, i32* %i, align 4, !dbg !8296
  %add82 = add nsw i32 4, %57, !dbg !8297
  %idxprom83 = sext i32 %add82 to i64, !dbg !8298
  %arrayidx84 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom83, !dbg !8298
  %58 = load i32, i32* %arrayidx84, align 4, !dbg !8298
  %59 = load i32, i32* %i, align 4, !dbg !8299
  %add85 = add nsw i32 12, %59, !dbg !8300
  %idxprom86 = sext i32 %add85 to i64, !dbg !8301
  %arrayidx87 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom86, !dbg !8301
  %60 = load i32, i32* %arrayidx87, align 4, !dbg !8301
  %add88 = add nsw i32 %58, %60, !dbg !8302
  store i32 %add88, i32* %z381, align 4, !dbg !8295
  %61 = load i32, i32* %z057, align 4, !dbg !8303
  %62 = load i32, i32* %z381, align 4, !dbg !8304
  %add89 = add i32 %61, %62, !dbg !8305
  %63 = load i32, i32* %qmul.addr, align 4, !dbg !8306
  %mul90 = mul i32 %add89, %63, !dbg !8307
  %add91 = add i32 %mul90, 128, !dbg !8308
  %shr = ashr i32 %add91, 8, !dbg !8309
  %64 = load i32, i32* %offset, align 4, !dbg !8310
  %add92 = add nsw i32 0, %64, !dbg !8311
  %idxprom93 = sext i32 %add92 to i64, !dbg !8312
  %65 = load i32*, i32** %output, align 8, !dbg !8312
  %arrayidx94 = getelementptr inbounds i32, i32* %65, i64 %idxprom93, !dbg !8312
  store i32 %shr, i32* %arrayidx94, align 4, !dbg !8313
  %66 = load i32, i32* %z165, align 4, !dbg !8314
  %67 = load i32, i32* %z273, align 4, !dbg !8315
  %add95 = add i32 %66, %67, !dbg !8316
  %68 = load i32, i32* %qmul.addr, align 4, !dbg !8317
  %mul96 = mul i32 %add95, %68, !dbg !8318
  %add97 = add i32 %mul96, 128, !dbg !8319
  %shr98 = ashr i32 %add97, 8, !dbg !8320
  %69 = load i32, i32* %offset, align 4, !dbg !8321
  %add99 = add nsw i32 16, %69, !dbg !8322
  %idxprom100 = sext i32 %add99 to i64, !dbg !8323
  %70 = load i32*, i32** %output, align 8, !dbg !8323
  %arrayidx101 = getelementptr inbounds i32, i32* %70, i64 %idxprom100, !dbg !8323
  store i32 %shr98, i32* %arrayidx101, align 4, !dbg !8324
  %71 = load i32, i32* %z165, align 4, !dbg !8325
  %72 = load i32, i32* %z273, align 4, !dbg !8326
  %sub102 = sub i32 %71, %72, !dbg !8327
  %73 = load i32, i32* %qmul.addr, align 4, !dbg !8328
  %mul103 = mul i32 %sub102, %73, !dbg !8329
  %add104 = add i32 %mul103, 128, !dbg !8330
  %shr105 = ashr i32 %add104, 8, !dbg !8331
  %74 = load i32, i32* %offset, align 4, !dbg !8332
  %add106 = add nsw i32 64, %74, !dbg !8333
  %idxprom107 = sext i32 %add106 to i64, !dbg !8334
  %75 = load i32*, i32** %output, align 8, !dbg !8334
  %arrayidx108 = getelementptr inbounds i32, i32* %75, i64 %idxprom107, !dbg !8334
  store i32 %shr105, i32* %arrayidx108, align 4, !dbg !8335
  %76 = load i32, i32* %z057, align 4, !dbg !8336
  %77 = load i32, i32* %z381, align 4, !dbg !8337
  %sub109 = sub i32 %76, %77, !dbg !8338
  %78 = load i32, i32* %qmul.addr, align 4, !dbg !8339
  %mul110 = mul i32 %sub109, %78, !dbg !8340
  %add111 = add i32 %mul110, 128, !dbg !8341
  %shr112 = ashr i32 %add111, 8, !dbg !8342
  %79 = load i32, i32* %offset, align 4, !dbg !8343
  %add113 = add nsw i32 80, %79, !dbg !8344
  %idxprom114 = sext i32 %add113 to i64, !dbg !8345
  %80 = load i32*, i32** %output, align 8, !dbg !8345
  %arrayidx115 = getelementptr inbounds i32, i32* %80, i64 %idxprom114, !dbg !8345
  store i32 %shr112, i32* %arrayidx115, align 4, !dbg !8346
  br label %for.inc116, !dbg !8347

for.inc116:                                       ; preds = %for.body54
  %81 = load i32, i32* %i, align 4, !dbg !8348
  %inc117 = add nsw i32 %81, 1, !dbg !8348
  store i32 %inc117, i32* %i, align 4, !dbg !8348
  br label %for.cond52, !dbg !8350, !llvm.loop !8351

for.end118:                                       ; preds = %for.cond52
  ret void, !dbg !8353
}

; Function Attrs: nounwind uwtable
define void @ff_h264_chroma422_dc_dequant_idct_12_c(i16* %_block, i32 %qmul) #0 !dbg !46 {
entry:
  %_block.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %stride = alloca i32, align 4
  %xStride = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca [8 x i32], align 16
  %block = alloca i32*, align 8
  %offset = alloca i32, align 4
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !8354, metadata !67), !dbg !8355
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !8356, metadata !67), !dbg !8357
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !8358, metadata !67), !dbg !8359
  store i32 32, i32* %stride, align 4, !dbg !8359
  call void @llvm.dbg.declare(metadata i32* %xStride, metadata !8360, metadata !67), !dbg !8361
  store i32 16, i32* %xStride, align 4, !dbg !8361
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8362, metadata !67), !dbg !8363
  call void @llvm.dbg.declare(metadata [8 x i32]* %temp, metadata !8364, metadata !67), !dbg !8365
  call void @llvm.dbg.declare(metadata i32** %block, metadata !8366, metadata !67), !dbg !8367
  %0 = load i16*, i16** %_block.addr, align 8, !dbg !8368
  %1 = bitcast i16* %0 to i32*, !dbg !8369
  store i32* %1, i32** %block, align 8, !dbg !8367
  store i32 0, i32* %i, align 4, !dbg !8370
  br label %for.cond, !dbg !8372

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !8373
  %cmp = icmp slt i32 %2, 4, !dbg !8376
  br i1 %cmp, label %for.body, label %for.end, !dbg !8377

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !8378
  %mul = mul nsw i32 32, %3, !dbg !8380
  %add = add nsw i32 %mul, 0, !dbg !8381
  %idxprom = sext i32 %add to i64, !dbg !8382
  %4 = load i32*, i32** %block, align 8, !dbg !8382
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !8382
  %5 = load i32, i32* %arrayidx, align 4, !dbg !8382
  %6 = load i32, i32* %i, align 4, !dbg !8383
  %mul1 = mul nsw i32 32, %6, !dbg !8384
  %add2 = add nsw i32 %mul1, 16, !dbg !8385
  %idxprom3 = sext i32 %add2 to i64, !dbg !8386
  %7 = load i32*, i32** %block, align 8, !dbg !8386
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 %idxprom3, !dbg !8386
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !8386
  %add5 = add nsw i32 %5, %8, !dbg !8387
  %9 = load i32, i32* %i, align 4, !dbg !8388
  %mul6 = mul nsw i32 2, %9, !dbg !8389
  %add7 = add nsw i32 %mul6, 0, !dbg !8390
  %idxprom8 = sext i32 %add7 to i64, !dbg !8391
  %arrayidx9 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom8, !dbg !8391
  store i32 %add5, i32* %arrayidx9, align 4, !dbg !8392
  %10 = load i32, i32* %i, align 4, !dbg !8393
  %mul10 = mul nsw i32 32, %10, !dbg !8394
  %add11 = add nsw i32 %mul10, 0, !dbg !8395
  %idxprom12 = sext i32 %add11 to i64, !dbg !8396
  %11 = load i32*, i32** %block, align 8, !dbg !8396
  %arrayidx13 = getelementptr inbounds i32, i32* %11, i64 %idxprom12, !dbg !8396
  %12 = load i32, i32* %arrayidx13, align 4, !dbg !8396
  %13 = load i32, i32* %i, align 4, !dbg !8397
  %mul14 = mul nsw i32 32, %13, !dbg !8398
  %add15 = add nsw i32 %mul14, 16, !dbg !8399
  %idxprom16 = sext i32 %add15 to i64, !dbg !8400
  %14 = load i32*, i32** %block, align 8, !dbg !8400
  %arrayidx17 = getelementptr inbounds i32, i32* %14, i64 %idxprom16, !dbg !8400
  %15 = load i32, i32* %arrayidx17, align 4, !dbg !8400
  %sub = sub nsw i32 %12, %15, !dbg !8401
  %16 = load i32, i32* %i, align 4, !dbg !8402
  %mul18 = mul nsw i32 2, %16, !dbg !8403
  %add19 = add nsw i32 %mul18, 1, !dbg !8404
  %idxprom20 = sext i32 %add19 to i64, !dbg !8405
  %arrayidx21 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom20, !dbg !8405
  store i32 %sub, i32* %arrayidx21, align 4, !dbg !8406
  br label %for.inc, !dbg !8407

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !8408
  %inc = add nsw i32 %17, 1, !dbg !8408
  store i32 %inc, i32* %i, align 4, !dbg !8408
  br label %for.cond, !dbg !8410, !llvm.loop !8411

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8413
  br label %for.cond22, !dbg !8415

for.cond22:                                       ; preds = %for.inc82, %for.end
  %18 = load i32, i32* %i, align 4, !dbg !8416
  %cmp23 = icmp slt i32 %18, 2, !dbg !8419
  br i1 %cmp23, label %for.body24, label %for.end84, !dbg !8420

for.body24:                                       ; preds = %for.cond22
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8421, metadata !67), !dbg !8423
  %19 = load i32, i32* %i, align 4, !dbg !8424
  %idxprom25 = sext i32 %19 to i64, !dbg !8425
  %arrayidx26 = getelementptr inbounds [2 x i8], [2 x i8]* @ff_h264_chroma422_dc_dequant_idct_12_c.x_offset, i64 0, i64 %idxprom25, !dbg !8425
  %20 = load i8, i8* %arrayidx26, align 1, !dbg !8425
  %conv = zext i8 %20 to i32, !dbg !8425
  store i32 %conv, i32* %offset, align 4, !dbg !8423
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !8426, metadata !67), !dbg !8427
  %21 = load i32, i32* %i, align 4, !dbg !8428
  %add27 = add nsw i32 0, %21, !dbg !8429
  %idxprom28 = sext i32 %add27 to i64, !dbg !8430
  %arrayidx29 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom28, !dbg !8430
  %22 = load i32, i32* %arrayidx29, align 4, !dbg !8430
  %23 = load i32, i32* %i, align 4, !dbg !8431
  %add30 = add nsw i32 4, %23, !dbg !8432
  %idxprom31 = sext i32 %add30 to i64, !dbg !8433
  %arrayidx32 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom31, !dbg !8433
  %24 = load i32, i32* %arrayidx32, align 4, !dbg !8433
  %add33 = add nsw i32 %22, %24, !dbg !8434
  store i32 %add33, i32* %z0, align 4, !dbg !8427
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !8435, metadata !67), !dbg !8436
  %25 = load i32, i32* %i, align 4, !dbg !8437
  %add34 = add nsw i32 0, %25, !dbg !8438
  %idxprom35 = sext i32 %add34 to i64, !dbg !8439
  %arrayidx36 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom35, !dbg !8439
  %26 = load i32, i32* %arrayidx36, align 4, !dbg !8439
  %27 = load i32, i32* %i, align 4, !dbg !8440
  %add37 = add nsw i32 4, %27, !dbg !8441
  %idxprom38 = sext i32 %add37 to i64, !dbg !8442
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom38, !dbg !8442
  %28 = load i32, i32* %arrayidx39, align 4, !dbg !8442
  %sub40 = sub nsw i32 %26, %28, !dbg !8443
  store i32 %sub40, i32* %z1, align 4, !dbg !8436
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !8444, metadata !67), !dbg !8445
  %29 = load i32, i32* %i, align 4, !dbg !8446
  %add41 = add nsw i32 2, %29, !dbg !8447
  %idxprom42 = sext i32 %add41 to i64, !dbg !8448
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom42, !dbg !8448
  %30 = load i32, i32* %arrayidx43, align 4, !dbg !8448
  %31 = load i32, i32* %i, align 4, !dbg !8449
  %add44 = add nsw i32 6, %31, !dbg !8450
  %idxprom45 = sext i32 %add44 to i64, !dbg !8451
  %arrayidx46 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom45, !dbg !8451
  %32 = load i32, i32* %arrayidx46, align 4, !dbg !8451
  %sub47 = sub nsw i32 %30, %32, !dbg !8452
  store i32 %sub47, i32* %z2, align 4, !dbg !8445
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !8453, metadata !67), !dbg !8454
  %33 = load i32, i32* %i, align 4, !dbg !8455
  %add48 = add nsw i32 2, %33, !dbg !8456
  %idxprom49 = sext i32 %add48 to i64, !dbg !8457
  %arrayidx50 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom49, !dbg !8457
  %34 = load i32, i32* %arrayidx50, align 4, !dbg !8457
  %35 = load i32, i32* %i, align 4, !dbg !8458
  %add51 = add nsw i32 6, %35, !dbg !8459
  %idxprom52 = sext i32 %add51 to i64, !dbg !8460
  %arrayidx53 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom52, !dbg !8460
  %36 = load i32, i32* %arrayidx53, align 4, !dbg !8460
  %add54 = add nsw i32 %34, %36, !dbg !8461
  store i32 %add54, i32* %z3, align 4, !dbg !8454
  %37 = load i32, i32* %z0, align 4, !dbg !8462
  %38 = load i32, i32* %z3, align 4, !dbg !8463
  %add55 = add i32 %37, %38, !dbg !8464
  %39 = load i32, i32* %qmul.addr, align 4, !dbg !8465
  %mul56 = mul i32 %add55, %39, !dbg !8466
  %add57 = add i32 %mul56, 128, !dbg !8467
  %shr = ashr i32 %add57, 8, !dbg !8468
  %40 = load i32, i32* %offset, align 4, !dbg !8469
  %add58 = add nsw i32 0, %40, !dbg !8470
  %idxprom59 = sext i32 %add58 to i64, !dbg !8471
  %41 = load i32*, i32** %block, align 8, !dbg !8471
  %arrayidx60 = getelementptr inbounds i32, i32* %41, i64 %idxprom59, !dbg !8471
  store i32 %shr, i32* %arrayidx60, align 4, !dbg !8472
  %42 = load i32, i32* %z1, align 4, !dbg !8473
  %43 = load i32, i32* %z2, align 4, !dbg !8474
  %add61 = add i32 %42, %43, !dbg !8475
  %44 = load i32, i32* %qmul.addr, align 4, !dbg !8476
  %mul62 = mul i32 %add61, %44, !dbg !8477
  %add63 = add i32 %mul62, 128, !dbg !8478
  %shr64 = ashr i32 %add63, 8, !dbg !8479
  %45 = load i32, i32* %offset, align 4, !dbg !8480
  %add65 = add nsw i32 32, %45, !dbg !8481
  %idxprom66 = sext i32 %add65 to i64, !dbg !8482
  %46 = load i32*, i32** %block, align 8, !dbg !8482
  %arrayidx67 = getelementptr inbounds i32, i32* %46, i64 %idxprom66, !dbg !8482
  store i32 %shr64, i32* %arrayidx67, align 4, !dbg !8483
  %47 = load i32, i32* %z1, align 4, !dbg !8484
  %48 = load i32, i32* %z2, align 4, !dbg !8485
  %sub68 = sub i32 %47, %48, !dbg !8486
  %49 = load i32, i32* %qmul.addr, align 4, !dbg !8487
  %mul69 = mul i32 %sub68, %49, !dbg !8488
  %add70 = add i32 %mul69, 128, !dbg !8489
  %shr71 = ashr i32 %add70, 8, !dbg !8490
  %50 = load i32, i32* %offset, align 4, !dbg !8491
  %add72 = add nsw i32 64, %50, !dbg !8492
  %idxprom73 = sext i32 %add72 to i64, !dbg !8493
  %51 = load i32*, i32** %block, align 8, !dbg !8493
  %arrayidx74 = getelementptr inbounds i32, i32* %51, i64 %idxprom73, !dbg !8493
  store i32 %shr71, i32* %arrayidx74, align 4, !dbg !8494
  %52 = load i32, i32* %z0, align 4, !dbg !8495
  %53 = load i32, i32* %z3, align 4, !dbg !8496
  %sub75 = sub i32 %52, %53, !dbg !8497
  %54 = load i32, i32* %qmul.addr, align 4, !dbg !8498
  %mul76 = mul i32 %sub75, %54, !dbg !8499
  %add77 = add i32 %mul76, 128, !dbg !8500
  %shr78 = ashr i32 %add77, 8, !dbg !8501
  %55 = load i32, i32* %offset, align 4, !dbg !8502
  %add79 = add nsw i32 96, %55, !dbg !8503
  %idxprom80 = sext i32 %add79 to i64, !dbg !8504
  %56 = load i32*, i32** %block, align 8, !dbg !8504
  %arrayidx81 = getelementptr inbounds i32, i32* %56, i64 %idxprom80, !dbg !8504
  store i32 %shr78, i32* %arrayidx81, align 4, !dbg !8505
  br label %for.inc82, !dbg !8506

for.inc82:                                        ; preds = %for.body24
  %57 = load i32, i32* %i, align 4, !dbg !8507
  %inc83 = add nsw i32 %57, 1, !dbg !8507
  store i32 %inc83, i32* %i, align 4, !dbg !8507
  br label %for.cond22, !dbg !8509, !llvm.loop !8510

for.end84:                                        ; preds = %for.cond22
  ret void, !dbg !8512
}

; Function Attrs: nounwind uwtable
define void @ff_h264_chroma_dc_dequant_idct_12_c(i16* %_block, i32 %qmul) #0 !dbg !8513 {
entry:
  %_block.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %stride = alloca i32, align 4
  %xStride = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %block = alloca i32*, align 8
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !8514, metadata !67), !dbg !8515
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !8516, metadata !67), !dbg !8517
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !8518, metadata !67), !dbg !8519
  store i32 32, i32* %stride, align 4, !dbg !8519
  call void @llvm.dbg.declare(metadata i32* %xStride, metadata !8520, metadata !67), !dbg !8521
  store i32 16, i32* %xStride, align 4, !dbg !8521
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8522, metadata !67), !dbg !8523
  call void @llvm.dbg.declare(metadata i32* %b, metadata !8524, metadata !67), !dbg !8525
  call void @llvm.dbg.declare(metadata i32* %c, metadata !8526, metadata !67), !dbg !8527
  call void @llvm.dbg.declare(metadata i32* %d, metadata !8528, metadata !67), !dbg !8529
  call void @llvm.dbg.declare(metadata i32* %e, metadata !8530, metadata !67), !dbg !8531
  call void @llvm.dbg.declare(metadata i32** %block, metadata !8532, metadata !67), !dbg !8533
  %0 = load i16*, i16** %_block.addr, align 8, !dbg !8534
  %1 = bitcast i16* %0 to i32*, !dbg !8535
  store i32* %1, i32** %block, align 8, !dbg !8533
  %2 = load i32*, i32** %block, align 8, !dbg !8536
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 0, !dbg !8536
  %3 = load i32, i32* %arrayidx, align 4, !dbg !8536
  store i32 %3, i32* %a, align 4, !dbg !8537
  %4 = load i32*, i32** %block, align 8, !dbg !8538
  %arrayidx1 = getelementptr inbounds i32, i32* %4, i64 16, !dbg !8538
  %5 = load i32, i32* %arrayidx1, align 4, !dbg !8538
  store i32 %5, i32* %b, align 4, !dbg !8539
  %6 = load i32*, i32** %block, align 8, !dbg !8540
  %arrayidx2 = getelementptr inbounds i32, i32* %6, i64 32, !dbg !8540
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !8540
  store i32 %7, i32* %c, align 4, !dbg !8541
  %8 = load i32*, i32** %block, align 8, !dbg !8542
  %arrayidx3 = getelementptr inbounds i32, i32* %8, i64 48, !dbg !8542
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !8542
  store i32 %9, i32* %d, align 4, !dbg !8543
  %10 = load i32, i32* %a, align 4, !dbg !8544
  %11 = load i32, i32* %b, align 4, !dbg !8545
  %sub = sub i32 %10, %11, !dbg !8546
  store i32 %sub, i32* %e, align 4, !dbg !8547
  %12 = load i32, i32* %a, align 4, !dbg !8548
  %13 = load i32, i32* %b, align 4, !dbg !8549
  %add = add i32 %12, %13, !dbg !8550
  store i32 %add, i32* %a, align 4, !dbg !8551
  %14 = load i32, i32* %c, align 4, !dbg !8552
  %15 = load i32, i32* %d, align 4, !dbg !8553
  %sub4 = sub i32 %14, %15, !dbg !8554
  store i32 %sub4, i32* %b, align 4, !dbg !8555
  %16 = load i32, i32* %c, align 4, !dbg !8556
  %17 = load i32, i32* %d, align 4, !dbg !8557
  %add5 = add i32 %16, %17, !dbg !8558
  store i32 %add5, i32* %c, align 4, !dbg !8559
  %18 = load i32, i32* %a, align 4, !dbg !8560
  %19 = load i32, i32* %c, align 4, !dbg !8561
  %add6 = add i32 %18, %19, !dbg !8562
  %20 = load i32, i32* %qmul.addr, align 4, !dbg !8563
  %mul = mul i32 %add6, %20, !dbg !8564
  %shr = ashr i32 %mul, 7, !dbg !8565
  %21 = load i32*, i32** %block, align 8, !dbg !8566
  %arrayidx7 = getelementptr inbounds i32, i32* %21, i64 0, !dbg !8566
  store i32 %shr, i32* %arrayidx7, align 4, !dbg !8567
  %22 = load i32, i32* %e, align 4, !dbg !8568
  %23 = load i32, i32* %b, align 4, !dbg !8569
  %add8 = add i32 %22, %23, !dbg !8570
  %24 = load i32, i32* %qmul.addr, align 4, !dbg !8571
  %mul9 = mul i32 %add8, %24, !dbg !8572
  %shr10 = ashr i32 %mul9, 7, !dbg !8573
  %25 = load i32*, i32** %block, align 8, !dbg !8574
  %arrayidx11 = getelementptr inbounds i32, i32* %25, i64 16, !dbg !8574
  store i32 %shr10, i32* %arrayidx11, align 4, !dbg !8575
  %26 = load i32, i32* %a, align 4, !dbg !8576
  %27 = load i32, i32* %c, align 4, !dbg !8577
  %sub12 = sub i32 %26, %27, !dbg !8578
  %28 = load i32, i32* %qmul.addr, align 4, !dbg !8579
  %mul13 = mul i32 %sub12, %28, !dbg !8580
  %shr14 = ashr i32 %mul13, 7, !dbg !8581
  %29 = load i32*, i32** %block, align 8, !dbg !8582
  %arrayidx15 = getelementptr inbounds i32, i32* %29, i64 32, !dbg !8582
  store i32 %shr14, i32* %arrayidx15, align 4, !dbg !8583
  %30 = load i32, i32* %e, align 4, !dbg !8584
  %31 = load i32, i32* %b, align 4, !dbg !8585
  %sub16 = sub i32 %30, %31, !dbg !8586
  %32 = load i32, i32* %qmul.addr, align 4, !dbg !8587
  %mul17 = mul i32 %sub16, %32, !dbg !8588
  %shr18 = ashr i32 %mul17, 7, !dbg !8589
  %33 = load i32*, i32** %block, align 8, !dbg !8590
  %arrayidx19 = getelementptr inbounds i32, i32* %33, i64 48, !dbg !8590
  store i32 %shr18, i32* %arrayidx19, align 4, !dbg !8591
  ret void, !dbg !8592
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add_14_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !8593 {
entry:
  %retval.i178 = alloca i32, align 4
  %a.addr.i179 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i179, metadata !2143, metadata !67), !dbg !8594
  %p.addr.i180 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i180, metadata !2152, metadata !67), !dbg !8599
  %retval.i162 = alloca i32, align 4
  %a.addr.i163 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i163, metadata !2143, metadata !67), !dbg !8600
  %p.addr.i164 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i164, metadata !2152, metadata !67), !dbg !8602
  %retval.i146 = alloca i32, align 4
  %a.addr.i147 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i147, metadata !2143, metadata !67), !dbg !8603
  %p.addr.i148 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i148, metadata !2152, metadata !67), !dbg !8605
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !8606
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !8608
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  %z048 = alloca i32, align 4
  %z157 = alloca i32, align 4
  %z267 = alloca i32, align 4
  %z378 = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !8609, metadata !67), !dbg !8610
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !8611, metadata !67), !dbg !8612
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !8613, metadata !67), !dbg !8614
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8615, metadata !67), !dbg !8616
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !8617, metadata !67), !dbg !8618
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !8619
  %1 = bitcast i8* %0 to i16*, !dbg !8620
  store i16* %1, i16** %dst, align 8, !dbg !8618
  call void @llvm.dbg.declare(metadata i32** %block, metadata !8621, metadata !67), !dbg !8622
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !8623
  %3 = bitcast i16* %2 to i32*, !dbg !8624
  store i32* %3, i32** %block, align 8, !dbg !8622
  %4 = load i32, i32* %stride.addr, align 4, !dbg !8625
  %shr = ashr i32 %4, 1, !dbg !8625
  store i32 %shr, i32* %stride.addr, align 4, !dbg !8625
  %5 = load i32*, i32** %block, align 8, !dbg !8626
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !8626
  %6 = load i32, i32* %arrayidx, align 4, !dbg !8627
  %add = add nsw i32 %6, 32, !dbg !8627
  store i32 %add, i32* %arrayidx, align 4, !dbg !8627
  store i32 0, i32* %i, align 4, !dbg !8628
  br label %for.cond, !dbg !8630

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !8631
  %cmp = icmp slt i32 %7, 4, !dbg !8634
  br i1 %cmp, label %for.body, label %for.end, !dbg !8635

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !8636, metadata !67), !dbg !8638
  %8 = load i32, i32* %i, align 4, !dbg !8639
  %add1 = add nsw i32 %8, 0, !dbg !8640
  %idxprom = sext i32 %add1 to i64, !dbg !8641
  %9 = load i32*, i32** %block, align 8, !dbg !8641
  %arrayidx2 = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !8641
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !8641
  %11 = load i32, i32* %i, align 4, !dbg !8642
  %add3 = add nsw i32 %11, 8, !dbg !8643
  %idxprom4 = sext i32 %add3 to i64, !dbg !8644
  %12 = load i32*, i32** %block, align 8, !dbg !8644
  %arrayidx5 = getelementptr inbounds i32, i32* %12, i64 %idxprom4, !dbg !8644
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !8644
  %add6 = add i32 %10, %13, !dbg !8645
  store i32 %add6, i32* %z0, align 4, !dbg !8638
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !8646, metadata !67), !dbg !8647
  %14 = load i32, i32* %i, align 4, !dbg !8648
  %add7 = add nsw i32 %14, 0, !dbg !8649
  %idxprom8 = sext i32 %add7 to i64, !dbg !8650
  %15 = load i32*, i32** %block, align 8, !dbg !8650
  %arrayidx9 = getelementptr inbounds i32, i32* %15, i64 %idxprom8, !dbg !8650
  %16 = load i32, i32* %arrayidx9, align 4, !dbg !8650
  %17 = load i32, i32* %i, align 4, !dbg !8651
  %add10 = add nsw i32 %17, 8, !dbg !8652
  %idxprom11 = sext i32 %add10 to i64, !dbg !8653
  %18 = load i32*, i32** %block, align 8, !dbg !8653
  %arrayidx12 = getelementptr inbounds i32, i32* %18, i64 %idxprom11, !dbg !8653
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !8653
  %sub = sub i32 %16, %19, !dbg !8654
  store i32 %sub, i32* %z1, align 4, !dbg !8647
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !8655, metadata !67), !dbg !8656
  %20 = load i32, i32* %i, align 4, !dbg !8657
  %add13 = add nsw i32 %20, 4, !dbg !8658
  %idxprom14 = sext i32 %add13 to i64, !dbg !8659
  %21 = load i32*, i32** %block, align 8, !dbg !8659
  %arrayidx15 = getelementptr inbounds i32, i32* %21, i64 %idxprom14, !dbg !8659
  %22 = load i32, i32* %arrayidx15, align 4, !dbg !8659
  %shr16 = ashr i32 %22, 1, !dbg !8660
  %23 = load i32, i32* %i, align 4, !dbg !8661
  %add17 = add nsw i32 %23, 12, !dbg !8662
  %idxprom18 = sext i32 %add17 to i64, !dbg !8663
  %24 = load i32*, i32** %block, align 8, !dbg !8663
  %arrayidx19 = getelementptr inbounds i32, i32* %24, i64 %idxprom18, !dbg !8663
  %25 = load i32, i32* %arrayidx19, align 4, !dbg !8663
  %sub20 = sub i32 %shr16, %25, !dbg !8664
  store i32 %sub20, i32* %z2, align 4, !dbg !8656
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !8665, metadata !67), !dbg !8666
  %26 = load i32, i32* %i, align 4, !dbg !8667
  %add21 = add nsw i32 %26, 4, !dbg !8668
  %idxprom22 = sext i32 %add21 to i64, !dbg !8669
  %27 = load i32*, i32** %block, align 8, !dbg !8669
  %arrayidx23 = getelementptr inbounds i32, i32* %27, i64 %idxprom22, !dbg !8669
  %28 = load i32, i32* %arrayidx23, align 4, !dbg !8669
  %29 = load i32, i32* %i, align 4, !dbg !8670
  %add24 = add nsw i32 %29, 12, !dbg !8671
  %idxprom25 = sext i32 %add24 to i64, !dbg !8672
  %30 = load i32*, i32** %block, align 8, !dbg !8672
  %arrayidx26 = getelementptr inbounds i32, i32* %30, i64 %idxprom25, !dbg !8672
  %31 = load i32, i32* %arrayidx26, align 4, !dbg !8672
  %shr27 = ashr i32 %31, 1, !dbg !8673
  %add28 = add i32 %28, %shr27, !dbg !8674
  store i32 %add28, i32* %z3, align 4, !dbg !8666
  %32 = load i32, i32* %z0, align 4, !dbg !8675
  %33 = load i32, i32* %z3, align 4, !dbg !8676
  %add29 = add i32 %32, %33, !dbg !8677
  %34 = load i32, i32* %i, align 4, !dbg !8678
  %add30 = add nsw i32 %34, 0, !dbg !8679
  %idxprom31 = sext i32 %add30 to i64, !dbg !8680
  %35 = load i32*, i32** %block, align 8, !dbg !8680
  %arrayidx32 = getelementptr inbounds i32, i32* %35, i64 %idxprom31, !dbg !8680
  store i32 %add29, i32* %arrayidx32, align 4, !dbg !8681
  %36 = load i32, i32* %z1, align 4, !dbg !8682
  %37 = load i32, i32* %z2, align 4, !dbg !8683
  %add33 = add i32 %36, %37, !dbg !8684
  %38 = load i32, i32* %i, align 4, !dbg !8685
  %add34 = add nsw i32 %38, 4, !dbg !8686
  %idxprom35 = sext i32 %add34 to i64, !dbg !8687
  %39 = load i32*, i32** %block, align 8, !dbg !8687
  %arrayidx36 = getelementptr inbounds i32, i32* %39, i64 %idxprom35, !dbg !8687
  store i32 %add33, i32* %arrayidx36, align 4, !dbg !8688
  %40 = load i32, i32* %z1, align 4, !dbg !8689
  %41 = load i32, i32* %z2, align 4, !dbg !8690
  %sub37 = sub i32 %40, %41, !dbg !8691
  %42 = load i32, i32* %i, align 4, !dbg !8692
  %add38 = add nsw i32 %42, 8, !dbg !8693
  %idxprom39 = sext i32 %add38 to i64, !dbg !8694
  %43 = load i32*, i32** %block, align 8, !dbg !8694
  %arrayidx40 = getelementptr inbounds i32, i32* %43, i64 %idxprom39, !dbg !8694
  store i32 %sub37, i32* %arrayidx40, align 4, !dbg !8695
  %44 = load i32, i32* %z0, align 4, !dbg !8696
  %45 = load i32, i32* %z3, align 4, !dbg !8697
  %sub41 = sub i32 %44, %45, !dbg !8698
  %46 = load i32, i32* %i, align 4, !dbg !8699
  %add42 = add nsw i32 %46, 12, !dbg !8700
  %idxprom43 = sext i32 %add42 to i64, !dbg !8701
  %47 = load i32*, i32** %block, align 8, !dbg !8701
  %arrayidx44 = getelementptr inbounds i32, i32* %47, i64 %idxprom43, !dbg !8701
  store i32 %sub41, i32* %arrayidx44, align 4, !dbg !8702
  br label %for.inc, !dbg !8703

for.inc:                                          ; preds = %for.body
  %48 = load i32, i32* %i, align 4, !dbg !8704
  %inc = add nsw i32 %48, 1, !dbg !8704
  store i32 %inc, i32* %i, align 4, !dbg !8704
  br label %for.cond, !dbg !8706, !llvm.loop !8707

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8709
  br label %for.cond45, !dbg !8710

for.cond45:                                       ; preds = %for.inc143, %for.end
  %49 = load i32, i32* %i, align 4, !dbg !8711
  %cmp46 = icmp slt i32 %49, 4, !dbg !8713
  br i1 %cmp46, label %for.body47, label %for.end145, !dbg !8714

for.body47:                                       ; preds = %for.cond45
  call void @llvm.dbg.declare(metadata i32* %z048, metadata !8715, metadata !67), !dbg !8716
  %50 = load i32, i32* %i, align 4, !dbg !8717
  %mul = mul nsw i32 4, %50, !dbg !8718
  %add49 = add nsw i32 0, %mul, !dbg !8719
  %idxprom50 = sext i32 %add49 to i64, !dbg !8720
  %51 = load i32*, i32** %block, align 8, !dbg !8720
  %arrayidx51 = getelementptr inbounds i32, i32* %51, i64 %idxprom50, !dbg !8720
  %52 = load i32, i32* %arrayidx51, align 4, !dbg !8720
  %53 = load i32, i32* %i, align 4, !dbg !8721
  %mul52 = mul nsw i32 4, %53, !dbg !8722
  %add53 = add nsw i32 2, %mul52, !dbg !8723
  %idxprom54 = sext i32 %add53 to i64, !dbg !8724
  %54 = load i32*, i32** %block, align 8, !dbg !8724
  %arrayidx55 = getelementptr inbounds i32, i32* %54, i64 %idxprom54, !dbg !8724
  %55 = load i32, i32* %arrayidx55, align 4, !dbg !8724
  %add56 = add i32 %52, %55, !dbg !8725
  store i32 %add56, i32* %z048, align 4, !dbg !8716
  call void @llvm.dbg.declare(metadata i32* %z157, metadata !8726, metadata !67), !dbg !8727
  %56 = load i32, i32* %i, align 4, !dbg !8728
  %mul58 = mul nsw i32 4, %56, !dbg !8729
  %add59 = add nsw i32 0, %mul58, !dbg !8730
  %idxprom60 = sext i32 %add59 to i64, !dbg !8731
  %57 = load i32*, i32** %block, align 8, !dbg !8731
  %arrayidx61 = getelementptr inbounds i32, i32* %57, i64 %idxprom60, !dbg !8731
  %58 = load i32, i32* %arrayidx61, align 4, !dbg !8731
  %59 = load i32, i32* %i, align 4, !dbg !8732
  %mul62 = mul nsw i32 4, %59, !dbg !8733
  %add63 = add nsw i32 2, %mul62, !dbg !8734
  %idxprom64 = sext i32 %add63 to i64, !dbg !8735
  %60 = load i32*, i32** %block, align 8, !dbg !8735
  %arrayidx65 = getelementptr inbounds i32, i32* %60, i64 %idxprom64, !dbg !8735
  %61 = load i32, i32* %arrayidx65, align 4, !dbg !8735
  %sub66 = sub i32 %58, %61, !dbg !8736
  store i32 %sub66, i32* %z157, align 4, !dbg !8727
  call void @llvm.dbg.declare(metadata i32* %z267, metadata !8737, metadata !67), !dbg !8738
  %62 = load i32, i32* %i, align 4, !dbg !8739
  %mul68 = mul nsw i32 4, %62, !dbg !8740
  %add69 = add nsw i32 1, %mul68, !dbg !8741
  %idxprom70 = sext i32 %add69 to i64, !dbg !8742
  %63 = load i32*, i32** %block, align 8, !dbg !8742
  %arrayidx71 = getelementptr inbounds i32, i32* %63, i64 %idxprom70, !dbg !8742
  %64 = load i32, i32* %arrayidx71, align 4, !dbg !8742
  %shr72 = ashr i32 %64, 1, !dbg !8743
  %65 = load i32, i32* %i, align 4, !dbg !8744
  %mul73 = mul nsw i32 4, %65, !dbg !8745
  %add74 = add nsw i32 3, %mul73, !dbg !8746
  %idxprom75 = sext i32 %add74 to i64, !dbg !8747
  %66 = load i32*, i32** %block, align 8, !dbg !8747
  %arrayidx76 = getelementptr inbounds i32, i32* %66, i64 %idxprom75, !dbg !8747
  %67 = load i32, i32* %arrayidx76, align 4, !dbg !8747
  %sub77 = sub i32 %shr72, %67, !dbg !8748
  store i32 %sub77, i32* %z267, align 4, !dbg !8738
  call void @llvm.dbg.declare(metadata i32* %z378, metadata !8749, metadata !67), !dbg !8750
  %68 = load i32, i32* %i, align 4, !dbg !8751
  %mul79 = mul nsw i32 4, %68, !dbg !8752
  %add80 = add nsw i32 1, %mul79, !dbg !8753
  %idxprom81 = sext i32 %add80 to i64, !dbg !8754
  %69 = load i32*, i32** %block, align 8, !dbg !8754
  %arrayidx82 = getelementptr inbounds i32, i32* %69, i64 %idxprom81, !dbg !8754
  %70 = load i32, i32* %arrayidx82, align 4, !dbg !8754
  %71 = load i32, i32* %i, align 4, !dbg !8755
  %mul83 = mul nsw i32 4, %71, !dbg !8756
  %add84 = add nsw i32 3, %mul83, !dbg !8757
  %idxprom85 = sext i32 %add84 to i64, !dbg !8758
  %72 = load i32*, i32** %block, align 8, !dbg !8758
  %arrayidx86 = getelementptr inbounds i32, i32* %72, i64 %idxprom85, !dbg !8758
  %73 = load i32, i32* %arrayidx86, align 4, !dbg !8758
  %shr87 = ashr i32 %73, 1, !dbg !8759
  %add88 = add i32 %70, %shr87, !dbg !8760
  store i32 %add88, i32* %z378, align 4, !dbg !8750
  %74 = load i32, i32* %i, align 4, !dbg !8761
  %75 = load i32, i32* %stride.addr, align 4, !dbg !8762
  %mul89 = mul nsw i32 0, %75, !dbg !8763
  %add90 = add nsw i32 %74, %mul89, !dbg !8764
  %idxprom91 = sext i32 %add90 to i64, !dbg !8765
  %76 = load i16*, i16** %dst, align 8, !dbg !8765
  %arrayidx92 = getelementptr inbounds i16, i16* %76, i64 %idxprom91, !dbg !8765
  %77 = load i16, i16* %arrayidx92, align 2, !dbg !8765
  %conv = zext i16 %77 to i32, !dbg !8765
  %78 = load i32, i32* %z048, align 4, !dbg !8766
  %79 = load i32, i32* %z378, align 4, !dbg !8767
  %add93 = add i32 %78, %79, !dbg !8768
  %shr94 = ashr i32 %add93, 6, !dbg !8769
  %add95 = add nsw i32 %conv, %shr94, !dbg !8770
  store i32 %add95, i32* %a.addr.i, align 4, !dbg !8771
  store i32 14, i32* %p.addr.i, align 4, !dbg !8771
  %80 = load i32, i32* %a.addr.i, align 4, !dbg !8772
  %81 = load i32, i32* %p.addr.i, align 4, !dbg !8773
  %shl.i = shl i32 1, %81, !dbg !8774
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !8775
  %neg.i = xor i32 %sub.i, -1, !dbg !8776
  %and.i = and i32 %80, %neg.i, !dbg !8777
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !8777
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !8778

if.then.i:                                        ; preds = %for.body47
  %82 = load i32, i32* %a.addr.i, align 4, !dbg !8779
  %neg1.i = xor i32 %82, -1, !dbg !8780
  %shr.i = ashr i32 %neg1.i, 31, !dbg !8781
  %83 = load i32, i32* %p.addr.i, align 4, !dbg !8782
  %shl2.i = shl i32 1, %83, !dbg !8783
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !8784
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !8785
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !8786
  br label %av_clip_uintp2_c.exit, !dbg !8786

if.else.i:                                        ; preds = %for.body47
  %84 = load i32, i32* %a.addr.i, align 4, !dbg !8787
  store i32 %84, i32* %retval.i, align 4, !dbg !8788
  br label %av_clip_uintp2_c.exit, !dbg !8788

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %85 = load i32, i32* %retval.i, align 4, !dbg !8789
  %conv96 = trunc i32 %85 to i16, !dbg !8771
  %86 = load i32, i32* %i, align 4, !dbg !8790
  %87 = load i32, i32* %stride.addr, align 4, !dbg !8791
  %mul97 = mul nsw i32 0, %87, !dbg !8792
  %add98 = add nsw i32 %86, %mul97, !dbg !8793
  %idxprom99 = sext i32 %add98 to i64, !dbg !8794
  %88 = load i16*, i16** %dst, align 8, !dbg !8794
  %arrayidx100 = getelementptr inbounds i16, i16* %88, i64 %idxprom99, !dbg !8794
  store i16 %conv96, i16* %arrayidx100, align 2, !dbg !8795
  %89 = load i32, i32* %i, align 4, !dbg !8796
  %90 = load i32, i32* %stride.addr, align 4, !dbg !8797
  %mul101 = mul nsw i32 1, %90, !dbg !8798
  %add102 = add nsw i32 %89, %mul101, !dbg !8799
  %idxprom103 = sext i32 %add102 to i64, !dbg !8800
  %91 = load i16*, i16** %dst, align 8, !dbg !8800
  %arrayidx104 = getelementptr inbounds i16, i16* %91, i64 %idxprom103, !dbg !8800
  %92 = load i16, i16* %arrayidx104, align 2, !dbg !8800
  %conv105 = zext i16 %92 to i32, !dbg !8800
  %93 = load i32, i32* %z157, align 4, !dbg !8801
  %94 = load i32, i32* %z267, align 4, !dbg !8802
  %add106 = add i32 %93, %94, !dbg !8803
  %shr107 = ashr i32 %add106, 6, !dbg !8804
  %add108 = add nsw i32 %conv105, %shr107, !dbg !8805
  store i32 %add108, i32* %a.addr.i179, align 4, !dbg !8806
  store i32 14, i32* %p.addr.i180, align 4, !dbg !8806
  %95 = load i32, i32* %a.addr.i179, align 4, !dbg !8807
  %96 = load i32, i32* %p.addr.i180, align 4, !dbg !8808
  %shl.i181 = shl i32 1, %96, !dbg !8809
  %sub.i182 = sub nsw i32 %shl.i181, 1, !dbg !8810
  %neg.i183 = xor i32 %sub.i182, -1, !dbg !8811
  %and.i184 = and i32 %95, %neg.i183, !dbg !8812
  %tobool.i185 = icmp ne i32 %and.i184, 0, !dbg !8812
  br i1 %tobool.i185, label %if.then.i191, label %if.else.i192, !dbg !8813

if.then.i191:                                     ; preds = %av_clip_uintp2_c.exit
  %97 = load i32, i32* %a.addr.i179, align 4, !dbg !8814
  %neg1.i186 = xor i32 %97, -1, !dbg !8815
  %shr.i187 = ashr i32 %neg1.i186, 31, !dbg !8816
  %98 = load i32, i32* %p.addr.i180, align 4, !dbg !8817
  %shl2.i188 = shl i32 1, %98, !dbg !8818
  %sub3.i189 = sub nsw i32 %shl2.i188, 1, !dbg !8819
  %and4.i190 = and i32 %shr.i187, %sub3.i189, !dbg !8820
  store i32 %and4.i190, i32* %retval.i178, align 4, !dbg !8821
  br label %av_clip_uintp2_c.exit193, !dbg !8821

if.else.i192:                                     ; preds = %av_clip_uintp2_c.exit
  %99 = load i32, i32* %a.addr.i179, align 4, !dbg !8822
  store i32 %99, i32* %retval.i178, align 4, !dbg !8823
  br label %av_clip_uintp2_c.exit193, !dbg !8823

av_clip_uintp2_c.exit193:                         ; preds = %if.then.i191, %if.else.i192
  %100 = load i32, i32* %retval.i178, align 4, !dbg !8824
  %conv110 = trunc i32 %100 to i16, !dbg !8806
  %101 = load i32, i32* %i, align 4, !dbg !8825
  %102 = load i32, i32* %stride.addr, align 4, !dbg !8826
  %mul111 = mul nsw i32 1, %102, !dbg !8827
  %add112 = add nsw i32 %101, %mul111, !dbg !8828
  %idxprom113 = sext i32 %add112 to i64, !dbg !8829
  %103 = load i16*, i16** %dst, align 8, !dbg !8829
  %arrayidx114 = getelementptr inbounds i16, i16* %103, i64 %idxprom113, !dbg !8829
  store i16 %conv110, i16* %arrayidx114, align 2, !dbg !8830
  %104 = load i32, i32* %i, align 4, !dbg !8831
  %105 = load i32, i32* %stride.addr, align 4, !dbg !8832
  %mul115 = mul nsw i32 2, %105, !dbg !8833
  %add116 = add nsw i32 %104, %mul115, !dbg !8834
  %idxprom117 = sext i32 %add116 to i64, !dbg !8835
  %106 = load i16*, i16** %dst, align 8, !dbg !8835
  %arrayidx118 = getelementptr inbounds i16, i16* %106, i64 %idxprom117, !dbg !8835
  %107 = load i16, i16* %arrayidx118, align 2, !dbg !8835
  %conv119 = zext i16 %107 to i32, !dbg !8835
  %108 = load i32, i32* %z157, align 4, !dbg !8836
  %109 = load i32, i32* %z267, align 4, !dbg !8837
  %sub120 = sub i32 %108, %109, !dbg !8838
  %shr121 = ashr i32 %sub120, 6, !dbg !8839
  %add122 = add nsw i32 %conv119, %shr121, !dbg !8840
  store i32 %add122, i32* %a.addr.i163, align 4, !dbg !8841
  store i32 14, i32* %p.addr.i164, align 4, !dbg !8841
  %110 = load i32, i32* %a.addr.i163, align 4, !dbg !8842
  %111 = load i32, i32* %p.addr.i164, align 4, !dbg !8843
  %shl.i165 = shl i32 1, %111, !dbg !8844
  %sub.i166 = sub nsw i32 %shl.i165, 1, !dbg !8845
  %neg.i167 = xor i32 %sub.i166, -1, !dbg !8846
  %and.i168 = and i32 %110, %neg.i167, !dbg !8847
  %tobool.i169 = icmp ne i32 %and.i168, 0, !dbg !8847
  br i1 %tobool.i169, label %if.then.i175, label %if.else.i176, !dbg !8848

if.then.i175:                                     ; preds = %av_clip_uintp2_c.exit193
  %112 = load i32, i32* %a.addr.i163, align 4, !dbg !8849
  %neg1.i170 = xor i32 %112, -1, !dbg !8850
  %shr.i171 = ashr i32 %neg1.i170, 31, !dbg !8851
  %113 = load i32, i32* %p.addr.i164, align 4, !dbg !8852
  %shl2.i172 = shl i32 1, %113, !dbg !8853
  %sub3.i173 = sub nsw i32 %shl2.i172, 1, !dbg !8854
  %and4.i174 = and i32 %shr.i171, %sub3.i173, !dbg !8855
  store i32 %and4.i174, i32* %retval.i162, align 4, !dbg !8856
  br label %av_clip_uintp2_c.exit177, !dbg !8856

if.else.i176:                                     ; preds = %av_clip_uintp2_c.exit193
  %114 = load i32, i32* %a.addr.i163, align 4, !dbg !8857
  store i32 %114, i32* %retval.i162, align 4, !dbg !8858
  br label %av_clip_uintp2_c.exit177, !dbg !8858

av_clip_uintp2_c.exit177:                         ; preds = %if.then.i175, %if.else.i176
  %115 = load i32, i32* %retval.i162, align 4, !dbg !8859
  %conv124 = trunc i32 %115 to i16, !dbg !8841
  %116 = load i32, i32* %i, align 4, !dbg !8860
  %117 = load i32, i32* %stride.addr, align 4, !dbg !8861
  %mul125 = mul nsw i32 2, %117, !dbg !8862
  %add126 = add nsw i32 %116, %mul125, !dbg !8863
  %idxprom127 = sext i32 %add126 to i64, !dbg !8864
  %118 = load i16*, i16** %dst, align 8, !dbg !8864
  %arrayidx128 = getelementptr inbounds i16, i16* %118, i64 %idxprom127, !dbg !8864
  store i16 %conv124, i16* %arrayidx128, align 2, !dbg !8865
  %119 = load i32, i32* %i, align 4, !dbg !8866
  %120 = load i32, i32* %stride.addr, align 4, !dbg !8867
  %mul129 = mul nsw i32 3, %120, !dbg !8868
  %add130 = add nsw i32 %119, %mul129, !dbg !8869
  %idxprom131 = sext i32 %add130 to i64, !dbg !8870
  %121 = load i16*, i16** %dst, align 8, !dbg !8870
  %arrayidx132 = getelementptr inbounds i16, i16* %121, i64 %idxprom131, !dbg !8870
  %122 = load i16, i16* %arrayidx132, align 2, !dbg !8870
  %conv133 = zext i16 %122 to i32, !dbg !8870
  %123 = load i32, i32* %z048, align 4, !dbg !8871
  %124 = load i32, i32* %z378, align 4, !dbg !8872
  %sub134 = sub i32 %123, %124, !dbg !8873
  %shr135 = ashr i32 %sub134, 6, !dbg !8874
  %add136 = add nsw i32 %conv133, %shr135, !dbg !8875
  store i32 %add136, i32* %a.addr.i147, align 4, !dbg !8876
  store i32 14, i32* %p.addr.i148, align 4, !dbg !8876
  %125 = load i32, i32* %a.addr.i147, align 4, !dbg !8877
  %126 = load i32, i32* %p.addr.i148, align 4, !dbg !8878
  %shl.i149 = shl i32 1, %126, !dbg !8879
  %sub.i150 = sub nsw i32 %shl.i149, 1, !dbg !8880
  %neg.i151 = xor i32 %sub.i150, -1, !dbg !8881
  %and.i152 = and i32 %125, %neg.i151, !dbg !8882
  %tobool.i153 = icmp ne i32 %and.i152, 0, !dbg !8882
  br i1 %tobool.i153, label %if.then.i159, label %if.else.i160, !dbg !8883

if.then.i159:                                     ; preds = %av_clip_uintp2_c.exit177
  %127 = load i32, i32* %a.addr.i147, align 4, !dbg !8884
  %neg1.i154 = xor i32 %127, -1, !dbg !8885
  %shr.i155 = ashr i32 %neg1.i154, 31, !dbg !8886
  %128 = load i32, i32* %p.addr.i148, align 4, !dbg !8887
  %shl2.i156 = shl i32 1, %128, !dbg !8888
  %sub3.i157 = sub nsw i32 %shl2.i156, 1, !dbg !8889
  %and4.i158 = and i32 %shr.i155, %sub3.i157, !dbg !8890
  store i32 %and4.i158, i32* %retval.i146, align 4, !dbg !8891
  br label %av_clip_uintp2_c.exit161, !dbg !8891

if.else.i160:                                     ; preds = %av_clip_uintp2_c.exit177
  %129 = load i32, i32* %a.addr.i147, align 4, !dbg !8892
  store i32 %129, i32* %retval.i146, align 4, !dbg !8893
  br label %av_clip_uintp2_c.exit161, !dbg !8893

av_clip_uintp2_c.exit161:                         ; preds = %if.then.i159, %if.else.i160
  %130 = load i32, i32* %retval.i146, align 4, !dbg !8894
  %conv138 = trunc i32 %130 to i16, !dbg !8876
  %131 = load i32, i32* %i, align 4, !dbg !8895
  %132 = load i32, i32* %stride.addr, align 4, !dbg !8896
  %mul139 = mul nsw i32 3, %132, !dbg !8897
  %add140 = add nsw i32 %131, %mul139, !dbg !8898
  %idxprom141 = sext i32 %add140 to i64, !dbg !8899
  %133 = load i16*, i16** %dst, align 8, !dbg !8899
  %arrayidx142 = getelementptr inbounds i16, i16* %133, i64 %idxprom141, !dbg !8899
  store i16 %conv138, i16* %arrayidx142, align 2, !dbg !8900
  br label %for.inc143, !dbg !8901

for.inc143:                                       ; preds = %av_clip_uintp2_c.exit161
  %134 = load i32, i32* %i, align 4, !dbg !8902
  %inc144 = add nsw i32 %134, 1, !dbg !8902
  store i32 %inc144, i32* %i, align 4, !dbg !8902
  br label %for.cond45, !dbg !8904, !llvm.loop !8905

for.end145:                                       ; preds = %for.cond45
  %135 = load i32*, i32** %block, align 8, !dbg !8907
  %136 = bitcast i32* %135 to i8*, !dbg !8908
  call void @llvm.memset.p0i8.i64(i8* %136, i8 0, i64 64, i32 4, i1 false), !dbg !8908
  ret void, !dbg !8909
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_add_14_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !8910 {
entry:
  %retval.i498 = alloca i32, align 4
  %a.addr.i499 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i499, metadata !2143, metadata !67), !dbg !8911
  %p.addr.i500 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i500, metadata !2152, metadata !67), !dbg !8916
  %retval.i482 = alloca i32, align 4
  %a.addr.i483 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i483, metadata !2143, metadata !67), !dbg !8917
  %p.addr.i484 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i484, metadata !2152, metadata !67), !dbg !8919
  %retval.i466 = alloca i32, align 4
  %a.addr.i467 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i467, metadata !2143, metadata !67), !dbg !8920
  %p.addr.i468 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i468, metadata !2152, metadata !67), !dbg !8922
  %retval.i450 = alloca i32, align 4
  %a.addr.i451 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i451, metadata !2143, metadata !67), !dbg !8923
  %p.addr.i452 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i452, metadata !2152, metadata !67), !dbg !8925
  %retval.i434 = alloca i32, align 4
  %a.addr.i435 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i435, metadata !2143, metadata !67), !dbg !8926
  %p.addr.i436 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i436, metadata !2152, metadata !67), !dbg !8928
  %retval.i418 = alloca i32, align 4
  %a.addr.i419 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i419, metadata !2143, metadata !67), !dbg !8929
  %p.addr.i420 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i420, metadata !2152, metadata !67), !dbg !8931
  %retval.i402 = alloca i32, align 4
  %a.addr.i403 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i403, metadata !2143, metadata !67), !dbg !8932
  %p.addr.i404 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i404, metadata !2152, metadata !67), !dbg !8934
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !8935
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !8937
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %a0 = alloca i32, align 4
  %a2 = alloca i32, align 4
  %a4 = alloca i32, align 4
  %a6 = alloca i32, align 4
  %b0 = alloca i32, align 4
  %b2 = alloca i32, align 4
  %b4 = alloca i32, align 4
  %b6 = alloca i32, align 4
  %a1 = alloca i32, align 4
  %a3 = alloca i32, align 4
  %a5 = alloca i32, align 4
  %a7 = alloca i32, align 4
  %b1 = alloca i32, align 4
  %b3 = alloca i32, align 4
  %b5 = alloca i32, align 4
  %b7 = alloca i32, align 4
  %a0142 = alloca i32, align 4
  %a2151 = alloca i32, align 4
  %a4161 = alloca i32, align 4
  %a6172 = alloca i32, align 4
  %b0183 = alloca i32, align 4
  %b2185 = alloca i32, align 4
  %b4187 = alloca i32, align 4
  %b6189 = alloca i32, align 4
  %a1191 = alloca i32, align 4
  %a3213 = alloca i32, align 4
  %a5234 = alloca i32, align 4
  %a7256 = alloca i32, align 4
  %b1277 = alloca i32, align 4
  %b3280 = alloca i32, align 4
  %b5283 = alloca i32, align 4
  %b7286 = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !8938, metadata !67), !dbg !8939
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !8940, metadata !67), !dbg !8941
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !8942, metadata !67), !dbg !8943
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8944, metadata !67), !dbg !8945
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !8946, metadata !67), !dbg !8947
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !8948
  %1 = bitcast i8* %0 to i16*, !dbg !8949
  store i16* %1, i16** %dst, align 8, !dbg !8947
  call void @llvm.dbg.declare(metadata i32** %block, metadata !8950, metadata !67), !dbg !8951
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !8952
  %3 = bitcast i16* %2 to i32*, !dbg !8953
  store i32* %3, i32** %block, align 8, !dbg !8951
  %4 = load i32, i32* %stride.addr, align 4, !dbg !8954
  %shr = ashr i32 %4, 1, !dbg !8954
  store i32 %shr, i32* %stride.addr, align 4, !dbg !8954
  %5 = load i32*, i32** %block, align 8, !dbg !8955
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !8955
  %6 = load i32, i32* %arrayidx, align 4, !dbg !8956
  %add = add nsw i32 %6, 32, !dbg !8956
  store i32 %add, i32* %arrayidx, align 4, !dbg !8956
  store i32 0, i32* %i, align 4, !dbg !8957
  br label %for.cond, !dbg !8959

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !8960
  %cmp = icmp slt i32 %7, 8, !dbg !8963
  br i1 %cmp, label %for.body, label %for.end, !dbg !8964

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %a0, metadata !8965, metadata !67), !dbg !8967
  %8 = load i32, i32* %i, align 4, !dbg !8968
  %add1 = add nsw i32 %8, 0, !dbg !8969
  %idxprom = sext i32 %add1 to i64, !dbg !8970
  %9 = load i32*, i32** %block, align 8, !dbg !8970
  %arrayidx2 = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !8970
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !8970
  %11 = load i32, i32* %i, align 4, !dbg !8971
  %add3 = add nsw i32 %11, 32, !dbg !8972
  %idxprom4 = sext i32 %add3 to i64, !dbg !8973
  %12 = load i32*, i32** %block, align 8, !dbg !8973
  %arrayidx5 = getelementptr inbounds i32, i32* %12, i64 %idxprom4, !dbg !8973
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !8973
  %add6 = add i32 %10, %13, !dbg !8974
  store i32 %add6, i32* %a0, align 4, !dbg !8967
  call void @llvm.dbg.declare(metadata i32* %a2, metadata !8975, metadata !67), !dbg !8976
  %14 = load i32, i32* %i, align 4, !dbg !8977
  %add7 = add nsw i32 %14, 0, !dbg !8978
  %idxprom8 = sext i32 %add7 to i64, !dbg !8979
  %15 = load i32*, i32** %block, align 8, !dbg !8979
  %arrayidx9 = getelementptr inbounds i32, i32* %15, i64 %idxprom8, !dbg !8979
  %16 = load i32, i32* %arrayidx9, align 4, !dbg !8979
  %17 = load i32, i32* %i, align 4, !dbg !8980
  %add10 = add nsw i32 %17, 32, !dbg !8981
  %idxprom11 = sext i32 %add10 to i64, !dbg !8982
  %18 = load i32*, i32** %block, align 8, !dbg !8982
  %arrayidx12 = getelementptr inbounds i32, i32* %18, i64 %idxprom11, !dbg !8982
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !8982
  %sub = sub i32 %16, %19, !dbg !8983
  store i32 %sub, i32* %a2, align 4, !dbg !8976
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !8984, metadata !67), !dbg !8985
  %20 = load i32, i32* %i, align 4, !dbg !8986
  %add13 = add nsw i32 %20, 16, !dbg !8987
  %idxprom14 = sext i32 %add13 to i64, !dbg !8988
  %21 = load i32*, i32** %block, align 8, !dbg !8988
  %arrayidx15 = getelementptr inbounds i32, i32* %21, i64 %idxprom14, !dbg !8988
  %22 = load i32, i32* %arrayidx15, align 4, !dbg !8988
  %shr16 = ashr i32 %22, 1, !dbg !8989
  %23 = load i32, i32* %i, align 4, !dbg !8990
  %add17 = add nsw i32 %23, 48, !dbg !8991
  %idxprom18 = sext i32 %add17 to i64, !dbg !8992
  %24 = load i32*, i32** %block, align 8, !dbg !8992
  %arrayidx19 = getelementptr inbounds i32, i32* %24, i64 %idxprom18, !dbg !8992
  %25 = load i32, i32* %arrayidx19, align 4, !dbg !8992
  %sub20 = sub i32 %shr16, %25, !dbg !8993
  store i32 %sub20, i32* %a4, align 4, !dbg !8985
  call void @llvm.dbg.declare(metadata i32* %a6, metadata !8994, metadata !67), !dbg !8995
  %26 = load i32, i32* %i, align 4, !dbg !8996
  %add21 = add nsw i32 %26, 48, !dbg !8997
  %idxprom22 = sext i32 %add21 to i64, !dbg !8998
  %27 = load i32*, i32** %block, align 8, !dbg !8998
  %arrayidx23 = getelementptr inbounds i32, i32* %27, i64 %idxprom22, !dbg !8998
  %28 = load i32, i32* %arrayidx23, align 4, !dbg !8998
  %shr24 = ashr i32 %28, 1, !dbg !8999
  %29 = load i32, i32* %i, align 4, !dbg !9000
  %add25 = add nsw i32 %29, 16, !dbg !9001
  %idxprom26 = sext i32 %add25 to i64, !dbg !9002
  %30 = load i32*, i32** %block, align 8, !dbg !9002
  %arrayidx27 = getelementptr inbounds i32, i32* %30, i64 %idxprom26, !dbg !9002
  %31 = load i32, i32* %arrayidx27, align 4, !dbg !9002
  %add28 = add i32 %shr24, %31, !dbg !9003
  store i32 %add28, i32* %a6, align 4, !dbg !8995
  call void @llvm.dbg.declare(metadata i32* %b0, metadata !9004, metadata !67), !dbg !9005
  %32 = load i32, i32* %a0, align 4, !dbg !9006
  %33 = load i32, i32* %a6, align 4, !dbg !9007
  %add29 = add i32 %32, %33, !dbg !9008
  store i32 %add29, i32* %b0, align 4, !dbg !9005
  call void @llvm.dbg.declare(metadata i32* %b2, metadata !9009, metadata !67), !dbg !9010
  %34 = load i32, i32* %a2, align 4, !dbg !9011
  %35 = load i32, i32* %a4, align 4, !dbg !9012
  %add30 = add i32 %34, %35, !dbg !9013
  store i32 %add30, i32* %b2, align 4, !dbg !9010
  call void @llvm.dbg.declare(metadata i32* %b4, metadata !9014, metadata !67), !dbg !9015
  %36 = load i32, i32* %a2, align 4, !dbg !9016
  %37 = load i32, i32* %a4, align 4, !dbg !9017
  %sub31 = sub i32 %36, %37, !dbg !9018
  store i32 %sub31, i32* %b4, align 4, !dbg !9015
  call void @llvm.dbg.declare(metadata i32* %b6, metadata !9019, metadata !67), !dbg !9020
  %38 = load i32, i32* %a0, align 4, !dbg !9021
  %39 = load i32, i32* %a6, align 4, !dbg !9022
  %sub32 = sub i32 %38, %39, !dbg !9023
  store i32 %sub32, i32* %b6, align 4, !dbg !9020
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !9024, metadata !67), !dbg !9025
  %40 = load i32, i32* %i, align 4, !dbg !9026
  %add33 = add nsw i32 %40, 24, !dbg !9027
  %idxprom34 = sext i32 %add33 to i64, !dbg !9028
  %41 = load i32*, i32** %block, align 8, !dbg !9028
  %arrayidx35 = getelementptr inbounds i32, i32* %41, i64 %idxprom34, !dbg !9028
  %42 = load i32, i32* %arrayidx35, align 4, !dbg !9028
  %sub36 = sub nsw i32 0, %42, !dbg !9029
  %43 = load i32, i32* %i, align 4, !dbg !9030
  %add37 = add nsw i32 %43, 40, !dbg !9031
  %idxprom38 = sext i32 %add37 to i64, !dbg !9032
  %44 = load i32*, i32** %block, align 8, !dbg !9032
  %arrayidx39 = getelementptr inbounds i32, i32* %44, i64 %idxprom38, !dbg !9032
  %45 = load i32, i32* %arrayidx39, align 4, !dbg !9032
  %add40 = add i32 %sub36, %45, !dbg !9033
  %46 = load i32, i32* %i, align 4, !dbg !9034
  %add41 = add nsw i32 %46, 56, !dbg !9035
  %idxprom42 = sext i32 %add41 to i64, !dbg !9036
  %47 = load i32*, i32** %block, align 8, !dbg !9036
  %arrayidx43 = getelementptr inbounds i32, i32* %47, i64 %idxprom42, !dbg !9036
  %48 = load i32, i32* %arrayidx43, align 4, !dbg !9036
  %sub44 = sub i32 %add40, %48, !dbg !9037
  %49 = load i32, i32* %i, align 4, !dbg !9038
  %add45 = add nsw i32 %49, 56, !dbg !9039
  %idxprom46 = sext i32 %add45 to i64, !dbg !9040
  %50 = load i32*, i32** %block, align 8, !dbg !9040
  %arrayidx47 = getelementptr inbounds i32, i32* %50, i64 %idxprom46, !dbg !9040
  %51 = load i32, i32* %arrayidx47, align 4, !dbg !9040
  %shr48 = ashr i32 %51, 1, !dbg !9041
  %sub49 = sub i32 %sub44, %shr48, !dbg !9042
  store i32 %sub49, i32* %a1, align 4, !dbg !9025
  call void @llvm.dbg.declare(metadata i32* %a3, metadata !9043, metadata !67), !dbg !9044
  %52 = load i32, i32* %i, align 4, !dbg !9045
  %add50 = add nsw i32 %52, 8, !dbg !9046
  %idxprom51 = sext i32 %add50 to i64, !dbg !9047
  %53 = load i32*, i32** %block, align 8, !dbg !9047
  %arrayidx52 = getelementptr inbounds i32, i32* %53, i64 %idxprom51, !dbg !9047
  %54 = load i32, i32* %arrayidx52, align 4, !dbg !9047
  %55 = load i32, i32* %i, align 4, !dbg !9048
  %add53 = add nsw i32 %55, 56, !dbg !9049
  %idxprom54 = sext i32 %add53 to i64, !dbg !9050
  %56 = load i32*, i32** %block, align 8, !dbg !9050
  %arrayidx55 = getelementptr inbounds i32, i32* %56, i64 %idxprom54, !dbg !9050
  %57 = load i32, i32* %arrayidx55, align 4, !dbg !9050
  %add56 = add i32 %54, %57, !dbg !9051
  %58 = load i32, i32* %i, align 4, !dbg !9052
  %add57 = add nsw i32 %58, 24, !dbg !9053
  %idxprom58 = sext i32 %add57 to i64, !dbg !9054
  %59 = load i32*, i32** %block, align 8, !dbg !9054
  %arrayidx59 = getelementptr inbounds i32, i32* %59, i64 %idxprom58, !dbg !9054
  %60 = load i32, i32* %arrayidx59, align 4, !dbg !9054
  %sub60 = sub i32 %add56, %60, !dbg !9055
  %61 = load i32, i32* %i, align 4, !dbg !9056
  %add61 = add nsw i32 %61, 24, !dbg !9057
  %idxprom62 = sext i32 %add61 to i64, !dbg !9058
  %62 = load i32*, i32** %block, align 8, !dbg !9058
  %arrayidx63 = getelementptr inbounds i32, i32* %62, i64 %idxprom62, !dbg !9058
  %63 = load i32, i32* %arrayidx63, align 4, !dbg !9058
  %shr64 = ashr i32 %63, 1, !dbg !9059
  %sub65 = sub i32 %sub60, %shr64, !dbg !9060
  store i32 %sub65, i32* %a3, align 4, !dbg !9044
  call void @llvm.dbg.declare(metadata i32* %a5, metadata !9061, metadata !67), !dbg !9062
  %64 = load i32, i32* %i, align 4, !dbg !9063
  %add66 = add nsw i32 %64, 8, !dbg !9064
  %idxprom67 = sext i32 %add66 to i64, !dbg !9065
  %65 = load i32*, i32** %block, align 8, !dbg !9065
  %arrayidx68 = getelementptr inbounds i32, i32* %65, i64 %idxprom67, !dbg !9065
  %66 = load i32, i32* %arrayidx68, align 4, !dbg !9065
  %sub69 = sub nsw i32 0, %66, !dbg !9066
  %67 = load i32, i32* %i, align 4, !dbg !9067
  %add70 = add nsw i32 %67, 56, !dbg !9068
  %idxprom71 = sext i32 %add70 to i64, !dbg !9069
  %68 = load i32*, i32** %block, align 8, !dbg !9069
  %arrayidx72 = getelementptr inbounds i32, i32* %68, i64 %idxprom71, !dbg !9069
  %69 = load i32, i32* %arrayidx72, align 4, !dbg !9069
  %add73 = add i32 %sub69, %69, !dbg !9070
  %70 = load i32, i32* %i, align 4, !dbg !9071
  %add74 = add nsw i32 %70, 40, !dbg !9072
  %idxprom75 = sext i32 %add74 to i64, !dbg !9073
  %71 = load i32*, i32** %block, align 8, !dbg !9073
  %arrayidx76 = getelementptr inbounds i32, i32* %71, i64 %idxprom75, !dbg !9073
  %72 = load i32, i32* %arrayidx76, align 4, !dbg !9073
  %add77 = add i32 %add73, %72, !dbg !9074
  %73 = load i32, i32* %i, align 4, !dbg !9075
  %add78 = add nsw i32 %73, 40, !dbg !9076
  %idxprom79 = sext i32 %add78 to i64, !dbg !9077
  %74 = load i32*, i32** %block, align 8, !dbg !9077
  %arrayidx80 = getelementptr inbounds i32, i32* %74, i64 %idxprom79, !dbg !9077
  %75 = load i32, i32* %arrayidx80, align 4, !dbg !9077
  %shr81 = ashr i32 %75, 1, !dbg !9078
  %add82 = add i32 %add77, %shr81, !dbg !9079
  store i32 %add82, i32* %a5, align 4, !dbg !9062
  call void @llvm.dbg.declare(metadata i32* %a7, metadata !9080, metadata !67), !dbg !9081
  %76 = load i32, i32* %i, align 4, !dbg !9082
  %add83 = add nsw i32 %76, 24, !dbg !9083
  %idxprom84 = sext i32 %add83 to i64, !dbg !9084
  %77 = load i32*, i32** %block, align 8, !dbg !9084
  %arrayidx85 = getelementptr inbounds i32, i32* %77, i64 %idxprom84, !dbg !9084
  %78 = load i32, i32* %arrayidx85, align 4, !dbg !9084
  %79 = load i32, i32* %i, align 4, !dbg !9085
  %add86 = add nsw i32 %79, 40, !dbg !9086
  %idxprom87 = sext i32 %add86 to i64, !dbg !9087
  %80 = load i32*, i32** %block, align 8, !dbg !9087
  %arrayidx88 = getelementptr inbounds i32, i32* %80, i64 %idxprom87, !dbg !9087
  %81 = load i32, i32* %arrayidx88, align 4, !dbg !9087
  %add89 = add i32 %78, %81, !dbg !9088
  %82 = load i32, i32* %i, align 4, !dbg !9089
  %add90 = add nsw i32 %82, 8, !dbg !9090
  %idxprom91 = sext i32 %add90 to i64, !dbg !9091
  %83 = load i32*, i32** %block, align 8, !dbg !9091
  %arrayidx92 = getelementptr inbounds i32, i32* %83, i64 %idxprom91, !dbg !9091
  %84 = load i32, i32* %arrayidx92, align 4, !dbg !9091
  %add93 = add i32 %add89, %84, !dbg !9092
  %85 = load i32, i32* %i, align 4, !dbg !9093
  %add94 = add nsw i32 %85, 8, !dbg !9094
  %idxprom95 = sext i32 %add94 to i64, !dbg !9095
  %86 = load i32*, i32** %block, align 8, !dbg !9095
  %arrayidx96 = getelementptr inbounds i32, i32* %86, i64 %idxprom95, !dbg !9095
  %87 = load i32, i32* %arrayidx96, align 4, !dbg !9095
  %shr97 = ashr i32 %87, 1, !dbg !9096
  %add98 = add i32 %add93, %shr97, !dbg !9097
  store i32 %add98, i32* %a7, align 4, !dbg !9081
  call void @llvm.dbg.declare(metadata i32* %b1, metadata !9098, metadata !67), !dbg !9099
  %88 = load i32, i32* %a7, align 4, !dbg !9100
  %shr99 = ashr i32 %88, 2, !dbg !9101
  %89 = load i32, i32* %a1, align 4, !dbg !9102
  %add100 = add i32 %shr99, %89, !dbg !9103
  store i32 %add100, i32* %b1, align 4, !dbg !9099
  call void @llvm.dbg.declare(metadata i32* %b3, metadata !9104, metadata !67), !dbg !9105
  %90 = load i32, i32* %a3, align 4, !dbg !9106
  %91 = load i32, i32* %a5, align 4, !dbg !9107
  %shr101 = ashr i32 %91, 2, !dbg !9108
  %add102 = add i32 %90, %shr101, !dbg !9109
  store i32 %add102, i32* %b3, align 4, !dbg !9105
  call void @llvm.dbg.declare(metadata i32* %b5, metadata !9110, metadata !67), !dbg !9111
  %92 = load i32, i32* %a3, align 4, !dbg !9112
  %shr103 = ashr i32 %92, 2, !dbg !9113
  %93 = load i32, i32* %a5, align 4, !dbg !9114
  %sub104 = sub i32 %shr103, %93, !dbg !9115
  store i32 %sub104, i32* %b5, align 4, !dbg !9111
  call void @llvm.dbg.declare(metadata i32* %b7, metadata !9116, metadata !67), !dbg !9117
  %94 = load i32, i32* %a7, align 4, !dbg !9118
  %95 = load i32, i32* %a1, align 4, !dbg !9119
  %shr105 = ashr i32 %95, 2, !dbg !9120
  %sub106 = sub i32 %94, %shr105, !dbg !9121
  store i32 %sub106, i32* %b7, align 4, !dbg !9117
  %96 = load i32, i32* %b0, align 4, !dbg !9122
  %97 = load i32, i32* %b7, align 4, !dbg !9123
  %add107 = add i32 %96, %97, !dbg !9124
  %98 = load i32, i32* %i, align 4, !dbg !9125
  %add108 = add nsw i32 %98, 0, !dbg !9126
  %idxprom109 = sext i32 %add108 to i64, !dbg !9127
  %99 = load i32*, i32** %block, align 8, !dbg !9127
  %arrayidx110 = getelementptr inbounds i32, i32* %99, i64 %idxprom109, !dbg !9127
  store i32 %add107, i32* %arrayidx110, align 4, !dbg !9128
  %100 = load i32, i32* %b0, align 4, !dbg !9129
  %101 = load i32, i32* %b7, align 4, !dbg !9130
  %sub111 = sub i32 %100, %101, !dbg !9131
  %102 = load i32, i32* %i, align 4, !dbg !9132
  %add112 = add nsw i32 %102, 56, !dbg !9133
  %idxprom113 = sext i32 %add112 to i64, !dbg !9134
  %103 = load i32*, i32** %block, align 8, !dbg !9134
  %arrayidx114 = getelementptr inbounds i32, i32* %103, i64 %idxprom113, !dbg !9134
  store i32 %sub111, i32* %arrayidx114, align 4, !dbg !9135
  %104 = load i32, i32* %b2, align 4, !dbg !9136
  %105 = load i32, i32* %b5, align 4, !dbg !9137
  %add115 = add i32 %104, %105, !dbg !9138
  %106 = load i32, i32* %i, align 4, !dbg !9139
  %add116 = add nsw i32 %106, 8, !dbg !9140
  %idxprom117 = sext i32 %add116 to i64, !dbg !9141
  %107 = load i32*, i32** %block, align 8, !dbg !9141
  %arrayidx118 = getelementptr inbounds i32, i32* %107, i64 %idxprom117, !dbg !9141
  store i32 %add115, i32* %arrayidx118, align 4, !dbg !9142
  %108 = load i32, i32* %b2, align 4, !dbg !9143
  %109 = load i32, i32* %b5, align 4, !dbg !9144
  %sub119 = sub i32 %108, %109, !dbg !9145
  %110 = load i32, i32* %i, align 4, !dbg !9146
  %add120 = add nsw i32 %110, 48, !dbg !9147
  %idxprom121 = sext i32 %add120 to i64, !dbg !9148
  %111 = load i32*, i32** %block, align 8, !dbg !9148
  %arrayidx122 = getelementptr inbounds i32, i32* %111, i64 %idxprom121, !dbg !9148
  store i32 %sub119, i32* %arrayidx122, align 4, !dbg !9149
  %112 = load i32, i32* %b4, align 4, !dbg !9150
  %113 = load i32, i32* %b3, align 4, !dbg !9151
  %add123 = add i32 %112, %113, !dbg !9152
  %114 = load i32, i32* %i, align 4, !dbg !9153
  %add124 = add nsw i32 %114, 16, !dbg !9154
  %idxprom125 = sext i32 %add124 to i64, !dbg !9155
  %115 = load i32*, i32** %block, align 8, !dbg !9155
  %arrayidx126 = getelementptr inbounds i32, i32* %115, i64 %idxprom125, !dbg !9155
  store i32 %add123, i32* %arrayidx126, align 4, !dbg !9156
  %116 = load i32, i32* %b4, align 4, !dbg !9157
  %117 = load i32, i32* %b3, align 4, !dbg !9158
  %sub127 = sub i32 %116, %117, !dbg !9159
  %118 = load i32, i32* %i, align 4, !dbg !9160
  %add128 = add nsw i32 %118, 40, !dbg !9161
  %idxprom129 = sext i32 %add128 to i64, !dbg !9162
  %119 = load i32*, i32** %block, align 8, !dbg !9162
  %arrayidx130 = getelementptr inbounds i32, i32* %119, i64 %idxprom129, !dbg !9162
  store i32 %sub127, i32* %arrayidx130, align 4, !dbg !9163
  %120 = load i32, i32* %b6, align 4, !dbg !9164
  %121 = load i32, i32* %b1, align 4, !dbg !9165
  %add131 = add i32 %120, %121, !dbg !9166
  %122 = load i32, i32* %i, align 4, !dbg !9167
  %add132 = add nsw i32 %122, 24, !dbg !9168
  %idxprom133 = sext i32 %add132 to i64, !dbg !9169
  %123 = load i32*, i32** %block, align 8, !dbg !9169
  %arrayidx134 = getelementptr inbounds i32, i32* %123, i64 %idxprom133, !dbg !9169
  store i32 %add131, i32* %arrayidx134, align 4, !dbg !9170
  %124 = load i32, i32* %b6, align 4, !dbg !9171
  %125 = load i32, i32* %b1, align 4, !dbg !9172
  %sub135 = sub i32 %124, %125, !dbg !9173
  %126 = load i32, i32* %i, align 4, !dbg !9174
  %add136 = add nsw i32 %126, 32, !dbg !9175
  %idxprom137 = sext i32 %add136 to i64, !dbg !9176
  %127 = load i32*, i32** %block, align 8, !dbg !9176
  %arrayidx138 = getelementptr inbounds i32, i32* %127, i64 %idxprom137, !dbg !9176
  store i32 %sub135, i32* %arrayidx138, align 4, !dbg !9177
  br label %for.inc, !dbg !9178

for.inc:                                          ; preds = %for.body
  %128 = load i32, i32* %i, align 4, !dbg !9179
  %inc = add nsw i32 %128, 1, !dbg !9179
  store i32 %inc, i32* %i, align 4, !dbg !9179
  br label %for.cond, !dbg !9181, !llvm.loop !9182

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9184
  br label %for.cond139, !dbg !9185

for.cond139:                                      ; preds = %for.inc399, %for.end
  %129 = load i32, i32* %i, align 4, !dbg !9186
  %cmp140 = icmp slt i32 %129, 8, !dbg !9188
  br i1 %cmp140, label %for.body141, label %for.end401, !dbg !9189

for.body141:                                      ; preds = %for.cond139
  call void @llvm.dbg.declare(metadata i32* %a0142, metadata !9190, metadata !67), !dbg !9191
  %130 = load i32, i32* %i, align 4, !dbg !9192
  %mul = mul nsw i32 %130, 8, !dbg !9193
  %add143 = add nsw i32 0, %mul, !dbg !9194
  %idxprom144 = sext i32 %add143 to i64, !dbg !9195
  %131 = load i32*, i32** %block, align 8, !dbg !9195
  %arrayidx145 = getelementptr inbounds i32, i32* %131, i64 %idxprom144, !dbg !9195
  %132 = load i32, i32* %arrayidx145, align 4, !dbg !9195
  %133 = load i32, i32* %i, align 4, !dbg !9196
  %mul146 = mul nsw i32 %133, 8, !dbg !9197
  %add147 = add nsw i32 4, %mul146, !dbg !9198
  %idxprom148 = sext i32 %add147 to i64, !dbg !9199
  %134 = load i32*, i32** %block, align 8, !dbg !9199
  %arrayidx149 = getelementptr inbounds i32, i32* %134, i64 %idxprom148, !dbg !9199
  %135 = load i32, i32* %arrayidx149, align 4, !dbg !9199
  %add150 = add i32 %132, %135, !dbg !9200
  store i32 %add150, i32* %a0142, align 4, !dbg !9191
  call void @llvm.dbg.declare(metadata i32* %a2151, metadata !9201, metadata !67), !dbg !9202
  %136 = load i32, i32* %i, align 4, !dbg !9203
  %mul152 = mul nsw i32 %136, 8, !dbg !9204
  %add153 = add nsw i32 0, %mul152, !dbg !9205
  %idxprom154 = sext i32 %add153 to i64, !dbg !9206
  %137 = load i32*, i32** %block, align 8, !dbg !9206
  %arrayidx155 = getelementptr inbounds i32, i32* %137, i64 %idxprom154, !dbg !9206
  %138 = load i32, i32* %arrayidx155, align 4, !dbg !9206
  %139 = load i32, i32* %i, align 4, !dbg !9207
  %mul156 = mul nsw i32 %139, 8, !dbg !9208
  %add157 = add nsw i32 4, %mul156, !dbg !9209
  %idxprom158 = sext i32 %add157 to i64, !dbg !9210
  %140 = load i32*, i32** %block, align 8, !dbg !9210
  %arrayidx159 = getelementptr inbounds i32, i32* %140, i64 %idxprom158, !dbg !9210
  %141 = load i32, i32* %arrayidx159, align 4, !dbg !9210
  %sub160 = sub i32 %138, %141, !dbg !9211
  store i32 %sub160, i32* %a2151, align 4, !dbg !9202
  call void @llvm.dbg.declare(metadata i32* %a4161, metadata !9212, metadata !67), !dbg !9213
  %142 = load i32, i32* %i, align 4, !dbg !9214
  %mul162 = mul nsw i32 %142, 8, !dbg !9215
  %add163 = add nsw i32 2, %mul162, !dbg !9216
  %idxprom164 = sext i32 %add163 to i64, !dbg !9217
  %143 = load i32*, i32** %block, align 8, !dbg !9217
  %arrayidx165 = getelementptr inbounds i32, i32* %143, i64 %idxprom164, !dbg !9217
  %144 = load i32, i32* %arrayidx165, align 4, !dbg !9217
  %shr166 = ashr i32 %144, 1, !dbg !9218
  %145 = load i32, i32* %i, align 4, !dbg !9219
  %mul167 = mul nsw i32 %145, 8, !dbg !9220
  %add168 = add nsw i32 6, %mul167, !dbg !9221
  %idxprom169 = sext i32 %add168 to i64, !dbg !9222
  %146 = load i32*, i32** %block, align 8, !dbg !9222
  %arrayidx170 = getelementptr inbounds i32, i32* %146, i64 %idxprom169, !dbg !9222
  %147 = load i32, i32* %arrayidx170, align 4, !dbg !9222
  %sub171 = sub i32 %shr166, %147, !dbg !9223
  store i32 %sub171, i32* %a4161, align 4, !dbg !9213
  call void @llvm.dbg.declare(metadata i32* %a6172, metadata !9224, metadata !67), !dbg !9225
  %148 = load i32, i32* %i, align 4, !dbg !9226
  %mul173 = mul nsw i32 %148, 8, !dbg !9227
  %add174 = add nsw i32 6, %mul173, !dbg !9228
  %idxprom175 = sext i32 %add174 to i64, !dbg !9229
  %149 = load i32*, i32** %block, align 8, !dbg !9229
  %arrayidx176 = getelementptr inbounds i32, i32* %149, i64 %idxprom175, !dbg !9229
  %150 = load i32, i32* %arrayidx176, align 4, !dbg !9229
  %shr177 = ashr i32 %150, 1, !dbg !9230
  %151 = load i32, i32* %i, align 4, !dbg !9231
  %mul178 = mul nsw i32 %151, 8, !dbg !9232
  %add179 = add nsw i32 2, %mul178, !dbg !9233
  %idxprom180 = sext i32 %add179 to i64, !dbg !9234
  %152 = load i32*, i32** %block, align 8, !dbg !9234
  %arrayidx181 = getelementptr inbounds i32, i32* %152, i64 %idxprom180, !dbg !9234
  %153 = load i32, i32* %arrayidx181, align 4, !dbg !9234
  %add182 = add i32 %shr177, %153, !dbg !9235
  store i32 %add182, i32* %a6172, align 4, !dbg !9225
  call void @llvm.dbg.declare(metadata i32* %b0183, metadata !9236, metadata !67), !dbg !9237
  %154 = load i32, i32* %a0142, align 4, !dbg !9238
  %155 = load i32, i32* %a6172, align 4, !dbg !9239
  %add184 = add i32 %154, %155, !dbg !9240
  store i32 %add184, i32* %b0183, align 4, !dbg !9237
  call void @llvm.dbg.declare(metadata i32* %b2185, metadata !9241, metadata !67), !dbg !9242
  %156 = load i32, i32* %a2151, align 4, !dbg !9243
  %157 = load i32, i32* %a4161, align 4, !dbg !9244
  %add186 = add i32 %156, %157, !dbg !9245
  store i32 %add186, i32* %b2185, align 4, !dbg !9242
  call void @llvm.dbg.declare(metadata i32* %b4187, metadata !9246, metadata !67), !dbg !9247
  %158 = load i32, i32* %a2151, align 4, !dbg !9248
  %159 = load i32, i32* %a4161, align 4, !dbg !9249
  %sub188 = sub i32 %158, %159, !dbg !9250
  store i32 %sub188, i32* %b4187, align 4, !dbg !9247
  call void @llvm.dbg.declare(metadata i32* %b6189, metadata !9251, metadata !67), !dbg !9252
  %160 = load i32, i32* %a0142, align 4, !dbg !9253
  %161 = load i32, i32* %a6172, align 4, !dbg !9254
  %sub190 = sub i32 %160, %161, !dbg !9255
  store i32 %sub190, i32* %b6189, align 4, !dbg !9252
  call void @llvm.dbg.declare(metadata i32* %a1191, metadata !9256, metadata !67), !dbg !9257
  %162 = load i32, i32* %i, align 4, !dbg !9258
  %mul192 = mul nsw i32 %162, 8, !dbg !9259
  %add193 = add nsw i32 3, %mul192, !dbg !9260
  %idxprom194 = sext i32 %add193 to i64, !dbg !9261
  %163 = load i32*, i32** %block, align 8, !dbg !9261
  %arrayidx195 = getelementptr inbounds i32, i32* %163, i64 %idxprom194, !dbg !9261
  %164 = load i32, i32* %arrayidx195, align 4, !dbg !9261
  %sub196 = sub i32 0, %164, !dbg !9262
  %165 = load i32, i32* %i, align 4, !dbg !9263
  %mul197 = mul nsw i32 %165, 8, !dbg !9264
  %add198 = add nsw i32 5, %mul197, !dbg !9265
  %idxprom199 = sext i32 %add198 to i64, !dbg !9266
  %166 = load i32*, i32** %block, align 8, !dbg !9266
  %arrayidx200 = getelementptr inbounds i32, i32* %166, i64 %idxprom199, !dbg !9266
  %167 = load i32, i32* %arrayidx200, align 4, !dbg !9266
  %add201 = add i32 %sub196, %167, !dbg !9267
  %168 = load i32, i32* %i, align 4, !dbg !9268
  %mul202 = mul nsw i32 %168, 8, !dbg !9269
  %add203 = add nsw i32 7, %mul202, !dbg !9270
  %idxprom204 = sext i32 %add203 to i64, !dbg !9271
  %169 = load i32*, i32** %block, align 8, !dbg !9271
  %arrayidx205 = getelementptr inbounds i32, i32* %169, i64 %idxprom204, !dbg !9271
  %170 = load i32, i32* %arrayidx205, align 4, !dbg !9271
  %sub206 = sub i32 %add201, %170, !dbg !9272
  %171 = load i32, i32* %i, align 4, !dbg !9273
  %mul207 = mul nsw i32 %171, 8, !dbg !9274
  %add208 = add nsw i32 7, %mul207, !dbg !9275
  %idxprom209 = sext i32 %add208 to i64, !dbg !9276
  %172 = load i32*, i32** %block, align 8, !dbg !9276
  %arrayidx210 = getelementptr inbounds i32, i32* %172, i64 %idxprom209, !dbg !9276
  %173 = load i32, i32* %arrayidx210, align 4, !dbg !9276
  %shr211 = ashr i32 %173, 1, !dbg !9277
  %sub212 = sub i32 %sub206, %shr211, !dbg !9278
  store i32 %sub212, i32* %a1191, align 4, !dbg !9257
  call void @llvm.dbg.declare(metadata i32* %a3213, metadata !9279, metadata !67), !dbg !9280
  %174 = load i32, i32* %i, align 4, !dbg !9281
  %mul214 = mul nsw i32 %174, 8, !dbg !9282
  %add215 = add nsw i32 1, %mul214, !dbg !9283
  %idxprom216 = sext i32 %add215 to i64, !dbg !9284
  %175 = load i32*, i32** %block, align 8, !dbg !9284
  %arrayidx217 = getelementptr inbounds i32, i32* %175, i64 %idxprom216, !dbg !9284
  %176 = load i32, i32* %arrayidx217, align 4, !dbg !9284
  %177 = load i32, i32* %i, align 4, !dbg !9285
  %mul218 = mul nsw i32 %177, 8, !dbg !9286
  %add219 = add nsw i32 7, %mul218, !dbg !9287
  %idxprom220 = sext i32 %add219 to i64, !dbg !9288
  %178 = load i32*, i32** %block, align 8, !dbg !9288
  %arrayidx221 = getelementptr inbounds i32, i32* %178, i64 %idxprom220, !dbg !9288
  %179 = load i32, i32* %arrayidx221, align 4, !dbg !9288
  %add222 = add i32 %176, %179, !dbg !9289
  %180 = load i32, i32* %i, align 4, !dbg !9290
  %mul223 = mul nsw i32 %180, 8, !dbg !9291
  %add224 = add nsw i32 3, %mul223, !dbg !9292
  %idxprom225 = sext i32 %add224 to i64, !dbg !9293
  %181 = load i32*, i32** %block, align 8, !dbg !9293
  %arrayidx226 = getelementptr inbounds i32, i32* %181, i64 %idxprom225, !dbg !9293
  %182 = load i32, i32* %arrayidx226, align 4, !dbg !9293
  %sub227 = sub i32 %add222, %182, !dbg !9294
  %183 = load i32, i32* %i, align 4, !dbg !9295
  %mul228 = mul nsw i32 %183, 8, !dbg !9296
  %add229 = add nsw i32 3, %mul228, !dbg !9297
  %idxprom230 = sext i32 %add229 to i64, !dbg !9298
  %184 = load i32*, i32** %block, align 8, !dbg !9298
  %arrayidx231 = getelementptr inbounds i32, i32* %184, i64 %idxprom230, !dbg !9298
  %185 = load i32, i32* %arrayidx231, align 4, !dbg !9298
  %shr232 = ashr i32 %185, 1, !dbg !9299
  %sub233 = sub i32 %sub227, %shr232, !dbg !9300
  store i32 %sub233, i32* %a3213, align 4, !dbg !9280
  call void @llvm.dbg.declare(metadata i32* %a5234, metadata !9301, metadata !67), !dbg !9302
  %186 = load i32, i32* %i, align 4, !dbg !9303
  %mul235 = mul nsw i32 %186, 8, !dbg !9304
  %add236 = add nsw i32 1, %mul235, !dbg !9305
  %idxprom237 = sext i32 %add236 to i64, !dbg !9306
  %187 = load i32*, i32** %block, align 8, !dbg !9306
  %arrayidx238 = getelementptr inbounds i32, i32* %187, i64 %idxprom237, !dbg !9306
  %188 = load i32, i32* %arrayidx238, align 4, !dbg !9306
  %sub239 = sub i32 0, %188, !dbg !9307
  %189 = load i32, i32* %i, align 4, !dbg !9308
  %mul240 = mul nsw i32 %189, 8, !dbg !9309
  %add241 = add nsw i32 7, %mul240, !dbg !9310
  %idxprom242 = sext i32 %add241 to i64, !dbg !9311
  %190 = load i32*, i32** %block, align 8, !dbg !9311
  %arrayidx243 = getelementptr inbounds i32, i32* %190, i64 %idxprom242, !dbg !9311
  %191 = load i32, i32* %arrayidx243, align 4, !dbg !9311
  %add244 = add i32 %sub239, %191, !dbg !9312
  %192 = load i32, i32* %i, align 4, !dbg !9313
  %mul245 = mul nsw i32 %192, 8, !dbg !9314
  %add246 = add nsw i32 5, %mul245, !dbg !9315
  %idxprom247 = sext i32 %add246 to i64, !dbg !9316
  %193 = load i32*, i32** %block, align 8, !dbg !9316
  %arrayidx248 = getelementptr inbounds i32, i32* %193, i64 %idxprom247, !dbg !9316
  %194 = load i32, i32* %arrayidx248, align 4, !dbg !9316
  %add249 = add i32 %add244, %194, !dbg !9317
  %195 = load i32, i32* %i, align 4, !dbg !9318
  %mul250 = mul nsw i32 %195, 8, !dbg !9319
  %add251 = add nsw i32 5, %mul250, !dbg !9320
  %idxprom252 = sext i32 %add251 to i64, !dbg !9321
  %196 = load i32*, i32** %block, align 8, !dbg !9321
  %arrayidx253 = getelementptr inbounds i32, i32* %196, i64 %idxprom252, !dbg !9321
  %197 = load i32, i32* %arrayidx253, align 4, !dbg !9321
  %shr254 = ashr i32 %197, 1, !dbg !9322
  %add255 = add i32 %add249, %shr254, !dbg !9323
  store i32 %add255, i32* %a5234, align 4, !dbg !9302
  call void @llvm.dbg.declare(metadata i32* %a7256, metadata !9324, metadata !67), !dbg !9325
  %198 = load i32, i32* %i, align 4, !dbg !9326
  %mul257 = mul nsw i32 %198, 8, !dbg !9327
  %add258 = add nsw i32 3, %mul257, !dbg !9328
  %idxprom259 = sext i32 %add258 to i64, !dbg !9329
  %199 = load i32*, i32** %block, align 8, !dbg !9329
  %arrayidx260 = getelementptr inbounds i32, i32* %199, i64 %idxprom259, !dbg !9329
  %200 = load i32, i32* %arrayidx260, align 4, !dbg !9329
  %201 = load i32, i32* %i, align 4, !dbg !9330
  %mul261 = mul nsw i32 %201, 8, !dbg !9331
  %add262 = add nsw i32 5, %mul261, !dbg !9332
  %idxprom263 = sext i32 %add262 to i64, !dbg !9333
  %202 = load i32*, i32** %block, align 8, !dbg !9333
  %arrayidx264 = getelementptr inbounds i32, i32* %202, i64 %idxprom263, !dbg !9333
  %203 = load i32, i32* %arrayidx264, align 4, !dbg !9333
  %add265 = add i32 %200, %203, !dbg !9334
  %204 = load i32, i32* %i, align 4, !dbg !9335
  %mul266 = mul nsw i32 %204, 8, !dbg !9336
  %add267 = add nsw i32 1, %mul266, !dbg !9337
  %idxprom268 = sext i32 %add267 to i64, !dbg !9338
  %205 = load i32*, i32** %block, align 8, !dbg !9338
  %arrayidx269 = getelementptr inbounds i32, i32* %205, i64 %idxprom268, !dbg !9338
  %206 = load i32, i32* %arrayidx269, align 4, !dbg !9338
  %add270 = add i32 %add265, %206, !dbg !9339
  %207 = load i32, i32* %i, align 4, !dbg !9340
  %mul271 = mul nsw i32 %207, 8, !dbg !9341
  %add272 = add nsw i32 1, %mul271, !dbg !9342
  %idxprom273 = sext i32 %add272 to i64, !dbg !9343
  %208 = load i32*, i32** %block, align 8, !dbg !9343
  %arrayidx274 = getelementptr inbounds i32, i32* %208, i64 %idxprom273, !dbg !9343
  %209 = load i32, i32* %arrayidx274, align 4, !dbg !9343
  %shr275 = ashr i32 %209, 1, !dbg !9344
  %add276 = add i32 %add270, %shr275, !dbg !9345
  store i32 %add276, i32* %a7256, align 4, !dbg !9325
  call void @llvm.dbg.declare(metadata i32* %b1277, metadata !9346, metadata !67), !dbg !9347
  %210 = load i32, i32* %a7256, align 4, !dbg !9348
  %shr278 = ashr i32 %210, 2, !dbg !9349
  %211 = load i32, i32* %a1191, align 4, !dbg !9350
  %add279 = add i32 %shr278, %211, !dbg !9351
  store i32 %add279, i32* %b1277, align 4, !dbg !9347
  call void @llvm.dbg.declare(metadata i32* %b3280, metadata !9352, metadata !67), !dbg !9353
  %212 = load i32, i32* %a3213, align 4, !dbg !9354
  %213 = load i32, i32* %a5234, align 4, !dbg !9355
  %shr281 = ashr i32 %213, 2, !dbg !9356
  %add282 = add i32 %212, %shr281, !dbg !9357
  store i32 %add282, i32* %b3280, align 4, !dbg !9353
  call void @llvm.dbg.declare(metadata i32* %b5283, metadata !9358, metadata !67), !dbg !9359
  %214 = load i32, i32* %a3213, align 4, !dbg !9360
  %shr284 = ashr i32 %214, 2, !dbg !9361
  %215 = load i32, i32* %a5234, align 4, !dbg !9362
  %sub285 = sub i32 %shr284, %215, !dbg !9363
  store i32 %sub285, i32* %b5283, align 4, !dbg !9359
  call void @llvm.dbg.declare(metadata i32* %b7286, metadata !9364, metadata !67), !dbg !9365
  %216 = load i32, i32* %a7256, align 4, !dbg !9366
  %217 = load i32, i32* %a1191, align 4, !dbg !9367
  %shr287 = ashr i32 %217, 2, !dbg !9368
  %sub288 = sub i32 %216, %shr287, !dbg !9369
  store i32 %sub288, i32* %b7286, align 4, !dbg !9365
  %218 = load i32, i32* %i, align 4, !dbg !9370
  %219 = load i32, i32* %stride.addr, align 4, !dbg !9371
  %mul289 = mul nsw i32 0, %219, !dbg !9372
  %add290 = add nsw i32 %218, %mul289, !dbg !9373
  %idxprom291 = sext i32 %add290 to i64, !dbg !9374
  %220 = load i16*, i16** %dst, align 8, !dbg !9374
  %arrayidx292 = getelementptr inbounds i16, i16* %220, i64 %idxprom291, !dbg !9374
  %221 = load i16, i16* %arrayidx292, align 2, !dbg !9374
  %conv = zext i16 %221 to i32, !dbg !9374
  %222 = load i32, i32* %b0183, align 4, !dbg !9375
  %223 = load i32, i32* %b7286, align 4, !dbg !9376
  %add293 = add i32 %222, %223, !dbg !9377
  %shr294 = ashr i32 %add293, 6, !dbg !9378
  %add295 = add nsw i32 %conv, %shr294, !dbg !9379
  store i32 %add295, i32* %a.addr.i, align 4, !dbg !9380
  store i32 14, i32* %p.addr.i, align 4, !dbg !9380
  %224 = load i32, i32* %a.addr.i, align 4, !dbg !9381
  %225 = load i32, i32* %p.addr.i, align 4, !dbg !9382
  %shl.i = shl i32 1, %225, !dbg !9383
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !9384
  %neg.i = xor i32 %sub.i, -1, !dbg !9385
  %and.i = and i32 %224, %neg.i, !dbg !9386
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !9386
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !9387

if.then.i:                                        ; preds = %for.body141
  %226 = load i32, i32* %a.addr.i, align 4, !dbg !9388
  %neg1.i = xor i32 %226, -1, !dbg !9389
  %shr.i = ashr i32 %neg1.i, 31, !dbg !9390
  %227 = load i32, i32* %p.addr.i, align 4, !dbg !9391
  %shl2.i = shl i32 1, %227, !dbg !9392
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !9393
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !9394
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !9395
  br label %av_clip_uintp2_c.exit, !dbg !9395

if.else.i:                                        ; preds = %for.body141
  %228 = load i32, i32* %a.addr.i, align 4, !dbg !9396
  store i32 %228, i32* %retval.i, align 4, !dbg !9397
  br label %av_clip_uintp2_c.exit, !dbg !9397

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %229 = load i32, i32* %retval.i, align 4, !dbg !9398
  %conv296 = trunc i32 %229 to i16, !dbg !9380
  %230 = load i32, i32* %i, align 4, !dbg !9399
  %231 = load i32, i32* %stride.addr, align 4, !dbg !9400
  %mul297 = mul nsw i32 0, %231, !dbg !9401
  %add298 = add nsw i32 %230, %mul297, !dbg !9402
  %idxprom299 = sext i32 %add298 to i64, !dbg !9403
  %232 = load i16*, i16** %dst, align 8, !dbg !9403
  %arrayidx300 = getelementptr inbounds i16, i16* %232, i64 %idxprom299, !dbg !9403
  store i16 %conv296, i16* %arrayidx300, align 2, !dbg !9404
  %233 = load i32, i32* %i, align 4, !dbg !9405
  %234 = load i32, i32* %stride.addr, align 4, !dbg !9406
  %mul301 = mul nsw i32 1, %234, !dbg !9407
  %add302 = add nsw i32 %233, %mul301, !dbg !9408
  %idxprom303 = sext i32 %add302 to i64, !dbg !9409
  %235 = load i16*, i16** %dst, align 8, !dbg !9409
  %arrayidx304 = getelementptr inbounds i16, i16* %235, i64 %idxprom303, !dbg !9409
  %236 = load i16, i16* %arrayidx304, align 2, !dbg !9409
  %conv305 = zext i16 %236 to i32, !dbg !9409
  %237 = load i32, i32* %b2185, align 4, !dbg !9410
  %238 = load i32, i32* %b5283, align 4, !dbg !9411
  %add306 = add i32 %237, %238, !dbg !9412
  %shr307 = ashr i32 %add306, 6, !dbg !9413
  %add308 = add nsw i32 %conv305, %shr307, !dbg !9414
  store i32 %add308, i32* %a.addr.i499, align 4, !dbg !9415
  store i32 14, i32* %p.addr.i500, align 4, !dbg !9415
  %239 = load i32, i32* %a.addr.i499, align 4, !dbg !9416
  %240 = load i32, i32* %p.addr.i500, align 4, !dbg !9417
  %shl.i501 = shl i32 1, %240, !dbg !9418
  %sub.i502 = sub nsw i32 %shl.i501, 1, !dbg !9419
  %neg.i503 = xor i32 %sub.i502, -1, !dbg !9420
  %and.i504 = and i32 %239, %neg.i503, !dbg !9421
  %tobool.i505 = icmp ne i32 %and.i504, 0, !dbg !9421
  br i1 %tobool.i505, label %if.then.i511, label %if.else.i512, !dbg !9422

if.then.i511:                                     ; preds = %av_clip_uintp2_c.exit
  %241 = load i32, i32* %a.addr.i499, align 4, !dbg !9423
  %neg1.i506 = xor i32 %241, -1, !dbg !9424
  %shr.i507 = ashr i32 %neg1.i506, 31, !dbg !9425
  %242 = load i32, i32* %p.addr.i500, align 4, !dbg !9426
  %shl2.i508 = shl i32 1, %242, !dbg !9427
  %sub3.i509 = sub nsw i32 %shl2.i508, 1, !dbg !9428
  %and4.i510 = and i32 %shr.i507, %sub3.i509, !dbg !9429
  store i32 %and4.i510, i32* %retval.i498, align 4, !dbg !9430
  br label %av_clip_uintp2_c.exit513, !dbg !9430

if.else.i512:                                     ; preds = %av_clip_uintp2_c.exit
  %243 = load i32, i32* %a.addr.i499, align 4, !dbg !9431
  store i32 %243, i32* %retval.i498, align 4, !dbg !9432
  br label %av_clip_uintp2_c.exit513, !dbg !9432

av_clip_uintp2_c.exit513:                         ; preds = %if.then.i511, %if.else.i512
  %244 = load i32, i32* %retval.i498, align 4, !dbg !9433
  %conv310 = trunc i32 %244 to i16, !dbg !9415
  %245 = load i32, i32* %i, align 4, !dbg !9434
  %246 = load i32, i32* %stride.addr, align 4, !dbg !9435
  %mul311 = mul nsw i32 1, %246, !dbg !9436
  %add312 = add nsw i32 %245, %mul311, !dbg !9437
  %idxprom313 = sext i32 %add312 to i64, !dbg !9438
  %247 = load i16*, i16** %dst, align 8, !dbg !9438
  %arrayidx314 = getelementptr inbounds i16, i16* %247, i64 %idxprom313, !dbg !9438
  store i16 %conv310, i16* %arrayidx314, align 2, !dbg !9439
  %248 = load i32, i32* %i, align 4, !dbg !9440
  %249 = load i32, i32* %stride.addr, align 4, !dbg !9441
  %mul315 = mul nsw i32 2, %249, !dbg !9442
  %add316 = add nsw i32 %248, %mul315, !dbg !9443
  %idxprom317 = sext i32 %add316 to i64, !dbg !9444
  %250 = load i16*, i16** %dst, align 8, !dbg !9444
  %arrayidx318 = getelementptr inbounds i16, i16* %250, i64 %idxprom317, !dbg !9444
  %251 = load i16, i16* %arrayidx318, align 2, !dbg !9444
  %conv319 = zext i16 %251 to i32, !dbg !9444
  %252 = load i32, i32* %b4187, align 4, !dbg !9445
  %253 = load i32, i32* %b3280, align 4, !dbg !9446
  %add320 = add i32 %252, %253, !dbg !9447
  %shr321 = ashr i32 %add320, 6, !dbg !9448
  %add322 = add nsw i32 %conv319, %shr321, !dbg !9449
  store i32 %add322, i32* %a.addr.i483, align 4, !dbg !9450
  store i32 14, i32* %p.addr.i484, align 4, !dbg !9450
  %254 = load i32, i32* %a.addr.i483, align 4, !dbg !9451
  %255 = load i32, i32* %p.addr.i484, align 4, !dbg !9452
  %shl.i485 = shl i32 1, %255, !dbg !9453
  %sub.i486 = sub nsw i32 %shl.i485, 1, !dbg !9454
  %neg.i487 = xor i32 %sub.i486, -1, !dbg !9455
  %and.i488 = and i32 %254, %neg.i487, !dbg !9456
  %tobool.i489 = icmp ne i32 %and.i488, 0, !dbg !9456
  br i1 %tobool.i489, label %if.then.i495, label %if.else.i496, !dbg !9457

if.then.i495:                                     ; preds = %av_clip_uintp2_c.exit513
  %256 = load i32, i32* %a.addr.i483, align 4, !dbg !9458
  %neg1.i490 = xor i32 %256, -1, !dbg !9459
  %shr.i491 = ashr i32 %neg1.i490, 31, !dbg !9460
  %257 = load i32, i32* %p.addr.i484, align 4, !dbg !9461
  %shl2.i492 = shl i32 1, %257, !dbg !9462
  %sub3.i493 = sub nsw i32 %shl2.i492, 1, !dbg !9463
  %and4.i494 = and i32 %shr.i491, %sub3.i493, !dbg !9464
  store i32 %and4.i494, i32* %retval.i482, align 4, !dbg !9465
  br label %av_clip_uintp2_c.exit497, !dbg !9465

if.else.i496:                                     ; preds = %av_clip_uintp2_c.exit513
  %258 = load i32, i32* %a.addr.i483, align 4, !dbg !9466
  store i32 %258, i32* %retval.i482, align 4, !dbg !9467
  br label %av_clip_uintp2_c.exit497, !dbg !9467

av_clip_uintp2_c.exit497:                         ; preds = %if.then.i495, %if.else.i496
  %259 = load i32, i32* %retval.i482, align 4, !dbg !9468
  %conv324 = trunc i32 %259 to i16, !dbg !9450
  %260 = load i32, i32* %i, align 4, !dbg !9469
  %261 = load i32, i32* %stride.addr, align 4, !dbg !9470
  %mul325 = mul nsw i32 2, %261, !dbg !9471
  %add326 = add nsw i32 %260, %mul325, !dbg !9472
  %idxprom327 = sext i32 %add326 to i64, !dbg !9473
  %262 = load i16*, i16** %dst, align 8, !dbg !9473
  %arrayidx328 = getelementptr inbounds i16, i16* %262, i64 %idxprom327, !dbg !9473
  store i16 %conv324, i16* %arrayidx328, align 2, !dbg !9474
  %263 = load i32, i32* %i, align 4, !dbg !9475
  %264 = load i32, i32* %stride.addr, align 4, !dbg !9476
  %mul329 = mul nsw i32 3, %264, !dbg !9477
  %add330 = add nsw i32 %263, %mul329, !dbg !9478
  %idxprom331 = sext i32 %add330 to i64, !dbg !9479
  %265 = load i16*, i16** %dst, align 8, !dbg !9479
  %arrayidx332 = getelementptr inbounds i16, i16* %265, i64 %idxprom331, !dbg !9479
  %266 = load i16, i16* %arrayidx332, align 2, !dbg !9479
  %conv333 = zext i16 %266 to i32, !dbg !9479
  %267 = load i32, i32* %b6189, align 4, !dbg !9480
  %268 = load i32, i32* %b1277, align 4, !dbg !9481
  %add334 = add i32 %267, %268, !dbg !9482
  %shr335 = ashr i32 %add334, 6, !dbg !9483
  %add336 = add nsw i32 %conv333, %shr335, !dbg !9484
  store i32 %add336, i32* %a.addr.i467, align 4, !dbg !9485
  store i32 14, i32* %p.addr.i468, align 4, !dbg !9485
  %269 = load i32, i32* %a.addr.i467, align 4, !dbg !9486
  %270 = load i32, i32* %p.addr.i468, align 4, !dbg !9487
  %shl.i469 = shl i32 1, %270, !dbg !9488
  %sub.i470 = sub nsw i32 %shl.i469, 1, !dbg !9489
  %neg.i471 = xor i32 %sub.i470, -1, !dbg !9490
  %and.i472 = and i32 %269, %neg.i471, !dbg !9491
  %tobool.i473 = icmp ne i32 %and.i472, 0, !dbg !9491
  br i1 %tobool.i473, label %if.then.i479, label %if.else.i480, !dbg !9492

if.then.i479:                                     ; preds = %av_clip_uintp2_c.exit497
  %271 = load i32, i32* %a.addr.i467, align 4, !dbg !9493
  %neg1.i474 = xor i32 %271, -1, !dbg !9494
  %shr.i475 = ashr i32 %neg1.i474, 31, !dbg !9495
  %272 = load i32, i32* %p.addr.i468, align 4, !dbg !9496
  %shl2.i476 = shl i32 1, %272, !dbg !9497
  %sub3.i477 = sub nsw i32 %shl2.i476, 1, !dbg !9498
  %and4.i478 = and i32 %shr.i475, %sub3.i477, !dbg !9499
  store i32 %and4.i478, i32* %retval.i466, align 4, !dbg !9500
  br label %av_clip_uintp2_c.exit481, !dbg !9500

if.else.i480:                                     ; preds = %av_clip_uintp2_c.exit497
  %273 = load i32, i32* %a.addr.i467, align 4, !dbg !9501
  store i32 %273, i32* %retval.i466, align 4, !dbg !9502
  br label %av_clip_uintp2_c.exit481, !dbg !9502

av_clip_uintp2_c.exit481:                         ; preds = %if.then.i479, %if.else.i480
  %274 = load i32, i32* %retval.i466, align 4, !dbg !9503
  %conv338 = trunc i32 %274 to i16, !dbg !9485
  %275 = load i32, i32* %i, align 4, !dbg !9504
  %276 = load i32, i32* %stride.addr, align 4, !dbg !9505
  %mul339 = mul nsw i32 3, %276, !dbg !9506
  %add340 = add nsw i32 %275, %mul339, !dbg !9507
  %idxprom341 = sext i32 %add340 to i64, !dbg !9508
  %277 = load i16*, i16** %dst, align 8, !dbg !9508
  %arrayidx342 = getelementptr inbounds i16, i16* %277, i64 %idxprom341, !dbg !9508
  store i16 %conv338, i16* %arrayidx342, align 2, !dbg !9509
  %278 = load i32, i32* %i, align 4, !dbg !9510
  %279 = load i32, i32* %stride.addr, align 4, !dbg !9511
  %mul343 = mul nsw i32 4, %279, !dbg !9512
  %add344 = add nsw i32 %278, %mul343, !dbg !9513
  %idxprom345 = sext i32 %add344 to i64, !dbg !9514
  %280 = load i16*, i16** %dst, align 8, !dbg !9514
  %arrayidx346 = getelementptr inbounds i16, i16* %280, i64 %idxprom345, !dbg !9514
  %281 = load i16, i16* %arrayidx346, align 2, !dbg !9514
  %conv347 = zext i16 %281 to i32, !dbg !9514
  %282 = load i32, i32* %b6189, align 4, !dbg !9515
  %283 = load i32, i32* %b1277, align 4, !dbg !9516
  %sub348 = sub i32 %282, %283, !dbg !9517
  %shr349 = ashr i32 %sub348, 6, !dbg !9518
  %add350 = add nsw i32 %conv347, %shr349, !dbg !9519
  store i32 %add350, i32* %a.addr.i451, align 4, !dbg !9520
  store i32 14, i32* %p.addr.i452, align 4, !dbg !9520
  %284 = load i32, i32* %a.addr.i451, align 4, !dbg !9521
  %285 = load i32, i32* %p.addr.i452, align 4, !dbg !9522
  %shl.i453 = shl i32 1, %285, !dbg !9523
  %sub.i454 = sub nsw i32 %shl.i453, 1, !dbg !9524
  %neg.i455 = xor i32 %sub.i454, -1, !dbg !9525
  %and.i456 = and i32 %284, %neg.i455, !dbg !9526
  %tobool.i457 = icmp ne i32 %and.i456, 0, !dbg !9526
  br i1 %tobool.i457, label %if.then.i463, label %if.else.i464, !dbg !9527

if.then.i463:                                     ; preds = %av_clip_uintp2_c.exit481
  %286 = load i32, i32* %a.addr.i451, align 4, !dbg !9528
  %neg1.i458 = xor i32 %286, -1, !dbg !9529
  %shr.i459 = ashr i32 %neg1.i458, 31, !dbg !9530
  %287 = load i32, i32* %p.addr.i452, align 4, !dbg !9531
  %shl2.i460 = shl i32 1, %287, !dbg !9532
  %sub3.i461 = sub nsw i32 %shl2.i460, 1, !dbg !9533
  %and4.i462 = and i32 %shr.i459, %sub3.i461, !dbg !9534
  store i32 %and4.i462, i32* %retval.i450, align 4, !dbg !9535
  br label %av_clip_uintp2_c.exit465, !dbg !9535

if.else.i464:                                     ; preds = %av_clip_uintp2_c.exit481
  %288 = load i32, i32* %a.addr.i451, align 4, !dbg !9536
  store i32 %288, i32* %retval.i450, align 4, !dbg !9537
  br label %av_clip_uintp2_c.exit465, !dbg !9537

av_clip_uintp2_c.exit465:                         ; preds = %if.then.i463, %if.else.i464
  %289 = load i32, i32* %retval.i450, align 4, !dbg !9538
  %conv352 = trunc i32 %289 to i16, !dbg !9520
  %290 = load i32, i32* %i, align 4, !dbg !9539
  %291 = load i32, i32* %stride.addr, align 4, !dbg !9540
  %mul353 = mul nsw i32 4, %291, !dbg !9541
  %add354 = add nsw i32 %290, %mul353, !dbg !9542
  %idxprom355 = sext i32 %add354 to i64, !dbg !9543
  %292 = load i16*, i16** %dst, align 8, !dbg !9543
  %arrayidx356 = getelementptr inbounds i16, i16* %292, i64 %idxprom355, !dbg !9543
  store i16 %conv352, i16* %arrayidx356, align 2, !dbg !9544
  %293 = load i32, i32* %i, align 4, !dbg !9545
  %294 = load i32, i32* %stride.addr, align 4, !dbg !9546
  %mul357 = mul nsw i32 5, %294, !dbg !9547
  %add358 = add nsw i32 %293, %mul357, !dbg !9548
  %idxprom359 = sext i32 %add358 to i64, !dbg !9549
  %295 = load i16*, i16** %dst, align 8, !dbg !9549
  %arrayidx360 = getelementptr inbounds i16, i16* %295, i64 %idxprom359, !dbg !9549
  %296 = load i16, i16* %arrayidx360, align 2, !dbg !9549
  %conv361 = zext i16 %296 to i32, !dbg !9549
  %297 = load i32, i32* %b4187, align 4, !dbg !9550
  %298 = load i32, i32* %b3280, align 4, !dbg !9551
  %sub362 = sub i32 %297, %298, !dbg !9552
  %shr363 = ashr i32 %sub362, 6, !dbg !9553
  %add364 = add nsw i32 %conv361, %shr363, !dbg !9554
  store i32 %add364, i32* %a.addr.i435, align 4, !dbg !9555
  store i32 14, i32* %p.addr.i436, align 4, !dbg !9555
  %299 = load i32, i32* %a.addr.i435, align 4, !dbg !9556
  %300 = load i32, i32* %p.addr.i436, align 4, !dbg !9557
  %shl.i437 = shl i32 1, %300, !dbg !9558
  %sub.i438 = sub nsw i32 %shl.i437, 1, !dbg !9559
  %neg.i439 = xor i32 %sub.i438, -1, !dbg !9560
  %and.i440 = and i32 %299, %neg.i439, !dbg !9561
  %tobool.i441 = icmp ne i32 %and.i440, 0, !dbg !9561
  br i1 %tobool.i441, label %if.then.i447, label %if.else.i448, !dbg !9562

if.then.i447:                                     ; preds = %av_clip_uintp2_c.exit465
  %301 = load i32, i32* %a.addr.i435, align 4, !dbg !9563
  %neg1.i442 = xor i32 %301, -1, !dbg !9564
  %shr.i443 = ashr i32 %neg1.i442, 31, !dbg !9565
  %302 = load i32, i32* %p.addr.i436, align 4, !dbg !9566
  %shl2.i444 = shl i32 1, %302, !dbg !9567
  %sub3.i445 = sub nsw i32 %shl2.i444, 1, !dbg !9568
  %and4.i446 = and i32 %shr.i443, %sub3.i445, !dbg !9569
  store i32 %and4.i446, i32* %retval.i434, align 4, !dbg !9570
  br label %av_clip_uintp2_c.exit449, !dbg !9570

if.else.i448:                                     ; preds = %av_clip_uintp2_c.exit465
  %303 = load i32, i32* %a.addr.i435, align 4, !dbg !9571
  store i32 %303, i32* %retval.i434, align 4, !dbg !9572
  br label %av_clip_uintp2_c.exit449, !dbg !9572

av_clip_uintp2_c.exit449:                         ; preds = %if.then.i447, %if.else.i448
  %304 = load i32, i32* %retval.i434, align 4, !dbg !9573
  %conv366 = trunc i32 %304 to i16, !dbg !9555
  %305 = load i32, i32* %i, align 4, !dbg !9574
  %306 = load i32, i32* %stride.addr, align 4, !dbg !9575
  %mul367 = mul nsw i32 5, %306, !dbg !9576
  %add368 = add nsw i32 %305, %mul367, !dbg !9577
  %idxprom369 = sext i32 %add368 to i64, !dbg !9578
  %307 = load i16*, i16** %dst, align 8, !dbg !9578
  %arrayidx370 = getelementptr inbounds i16, i16* %307, i64 %idxprom369, !dbg !9578
  store i16 %conv366, i16* %arrayidx370, align 2, !dbg !9579
  %308 = load i32, i32* %i, align 4, !dbg !9580
  %309 = load i32, i32* %stride.addr, align 4, !dbg !9581
  %mul371 = mul nsw i32 6, %309, !dbg !9582
  %add372 = add nsw i32 %308, %mul371, !dbg !9583
  %idxprom373 = sext i32 %add372 to i64, !dbg !9584
  %310 = load i16*, i16** %dst, align 8, !dbg !9584
  %arrayidx374 = getelementptr inbounds i16, i16* %310, i64 %idxprom373, !dbg !9584
  %311 = load i16, i16* %arrayidx374, align 2, !dbg !9584
  %conv375 = zext i16 %311 to i32, !dbg !9584
  %312 = load i32, i32* %b2185, align 4, !dbg !9585
  %313 = load i32, i32* %b5283, align 4, !dbg !9586
  %sub376 = sub i32 %312, %313, !dbg !9587
  %shr377 = ashr i32 %sub376, 6, !dbg !9588
  %add378 = add nsw i32 %conv375, %shr377, !dbg !9589
  store i32 %add378, i32* %a.addr.i419, align 4, !dbg !9590
  store i32 14, i32* %p.addr.i420, align 4, !dbg !9590
  %314 = load i32, i32* %a.addr.i419, align 4, !dbg !9591
  %315 = load i32, i32* %p.addr.i420, align 4, !dbg !9592
  %shl.i421 = shl i32 1, %315, !dbg !9593
  %sub.i422 = sub nsw i32 %shl.i421, 1, !dbg !9594
  %neg.i423 = xor i32 %sub.i422, -1, !dbg !9595
  %and.i424 = and i32 %314, %neg.i423, !dbg !9596
  %tobool.i425 = icmp ne i32 %and.i424, 0, !dbg !9596
  br i1 %tobool.i425, label %if.then.i431, label %if.else.i432, !dbg !9597

if.then.i431:                                     ; preds = %av_clip_uintp2_c.exit449
  %316 = load i32, i32* %a.addr.i419, align 4, !dbg !9598
  %neg1.i426 = xor i32 %316, -1, !dbg !9599
  %shr.i427 = ashr i32 %neg1.i426, 31, !dbg !9600
  %317 = load i32, i32* %p.addr.i420, align 4, !dbg !9601
  %shl2.i428 = shl i32 1, %317, !dbg !9602
  %sub3.i429 = sub nsw i32 %shl2.i428, 1, !dbg !9603
  %and4.i430 = and i32 %shr.i427, %sub3.i429, !dbg !9604
  store i32 %and4.i430, i32* %retval.i418, align 4, !dbg !9605
  br label %av_clip_uintp2_c.exit433, !dbg !9605

if.else.i432:                                     ; preds = %av_clip_uintp2_c.exit449
  %318 = load i32, i32* %a.addr.i419, align 4, !dbg !9606
  store i32 %318, i32* %retval.i418, align 4, !dbg !9607
  br label %av_clip_uintp2_c.exit433, !dbg !9607

av_clip_uintp2_c.exit433:                         ; preds = %if.then.i431, %if.else.i432
  %319 = load i32, i32* %retval.i418, align 4, !dbg !9608
  %conv380 = trunc i32 %319 to i16, !dbg !9590
  %320 = load i32, i32* %i, align 4, !dbg !9609
  %321 = load i32, i32* %stride.addr, align 4, !dbg !9610
  %mul381 = mul nsw i32 6, %321, !dbg !9611
  %add382 = add nsw i32 %320, %mul381, !dbg !9612
  %idxprom383 = sext i32 %add382 to i64, !dbg !9613
  %322 = load i16*, i16** %dst, align 8, !dbg !9613
  %arrayidx384 = getelementptr inbounds i16, i16* %322, i64 %idxprom383, !dbg !9613
  store i16 %conv380, i16* %arrayidx384, align 2, !dbg !9614
  %323 = load i32, i32* %i, align 4, !dbg !9615
  %324 = load i32, i32* %stride.addr, align 4, !dbg !9616
  %mul385 = mul nsw i32 7, %324, !dbg !9617
  %add386 = add nsw i32 %323, %mul385, !dbg !9618
  %idxprom387 = sext i32 %add386 to i64, !dbg !9619
  %325 = load i16*, i16** %dst, align 8, !dbg !9619
  %arrayidx388 = getelementptr inbounds i16, i16* %325, i64 %idxprom387, !dbg !9619
  %326 = load i16, i16* %arrayidx388, align 2, !dbg !9619
  %conv389 = zext i16 %326 to i32, !dbg !9619
  %327 = load i32, i32* %b0183, align 4, !dbg !9620
  %328 = load i32, i32* %b7286, align 4, !dbg !9621
  %sub390 = sub i32 %327, %328, !dbg !9622
  %shr391 = ashr i32 %sub390, 6, !dbg !9623
  %add392 = add nsw i32 %conv389, %shr391, !dbg !9624
  store i32 %add392, i32* %a.addr.i403, align 4, !dbg !9625
  store i32 14, i32* %p.addr.i404, align 4, !dbg !9625
  %329 = load i32, i32* %a.addr.i403, align 4, !dbg !9626
  %330 = load i32, i32* %p.addr.i404, align 4, !dbg !9627
  %shl.i405 = shl i32 1, %330, !dbg !9628
  %sub.i406 = sub nsw i32 %shl.i405, 1, !dbg !9629
  %neg.i407 = xor i32 %sub.i406, -1, !dbg !9630
  %and.i408 = and i32 %329, %neg.i407, !dbg !9631
  %tobool.i409 = icmp ne i32 %and.i408, 0, !dbg !9631
  br i1 %tobool.i409, label %if.then.i415, label %if.else.i416, !dbg !9632

if.then.i415:                                     ; preds = %av_clip_uintp2_c.exit433
  %331 = load i32, i32* %a.addr.i403, align 4, !dbg !9633
  %neg1.i410 = xor i32 %331, -1, !dbg !9634
  %shr.i411 = ashr i32 %neg1.i410, 31, !dbg !9635
  %332 = load i32, i32* %p.addr.i404, align 4, !dbg !9636
  %shl2.i412 = shl i32 1, %332, !dbg !9637
  %sub3.i413 = sub nsw i32 %shl2.i412, 1, !dbg !9638
  %and4.i414 = and i32 %shr.i411, %sub3.i413, !dbg !9639
  store i32 %and4.i414, i32* %retval.i402, align 4, !dbg !9640
  br label %av_clip_uintp2_c.exit417, !dbg !9640

if.else.i416:                                     ; preds = %av_clip_uintp2_c.exit433
  %333 = load i32, i32* %a.addr.i403, align 4, !dbg !9641
  store i32 %333, i32* %retval.i402, align 4, !dbg !9642
  br label %av_clip_uintp2_c.exit417, !dbg !9642

av_clip_uintp2_c.exit417:                         ; preds = %if.then.i415, %if.else.i416
  %334 = load i32, i32* %retval.i402, align 4, !dbg !9643
  %conv394 = trunc i32 %334 to i16, !dbg !9625
  %335 = load i32, i32* %i, align 4, !dbg !9644
  %336 = load i32, i32* %stride.addr, align 4, !dbg !9645
  %mul395 = mul nsw i32 7, %336, !dbg !9646
  %add396 = add nsw i32 %335, %mul395, !dbg !9647
  %idxprom397 = sext i32 %add396 to i64, !dbg !9648
  %337 = load i16*, i16** %dst, align 8, !dbg !9648
  %arrayidx398 = getelementptr inbounds i16, i16* %337, i64 %idxprom397, !dbg !9648
  store i16 %conv394, i16* %arrayidx398, align 2, !dbg !9649
  br label %for.inc399, !dbg !9650

for.inc399:                                       ; preds = %av_clip_uintp2_c.exit417
  %338 = load i32, i32* %i, align 4, !dbg !9651
  %inc400 = add nsw i32 %338, 1, !dbg !9651
  store i32 %inc400, i32* %i, align 4, !dbg !9651
  br label %for.cond139, !dbg !9653, !llvm.loop !9654

for.end401:                                       ; preds = %for.cond139
  %339 = load i32*, i32** %block, align 8, !dbg !9656
  %340 = bitcast i32* %339 to i8*, !dbg !9657
  call void @llvm.memset.p0i8.i64(i8* %340, i8 0, i64 256, i32 4, i1 false), !dbg !9657
  ret void, !dbg !9658
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_dc_add_14_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !9659 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !9660
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !9667
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %dc = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !9668, metadata !67), !dbg !9669
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !9670, metadata !67), !dbg !9671
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !9672, metadata !67), !dbg !9673
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9674, metadata !67), !dbg !9675
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9676, metadata !67), !dbg !9677
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !9678, metadata !67), !dbg !9679
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !9680
  %1 = bitcast i8* %0 to i16*, !dbg !9681
  store i16* %1, i16** %dst, align 8, !dbg !9679
  call void @llvm.dbg.declare(metadata i32** %block, metadata !9682, metadata !67), !dbg !9683
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !9684
  %3 = bitcast i16* %2 to i32*, !dbg !9685
  store i32* %3, i32** %block, align 8, !dbg !9683
  call void @llvm.dbg.declare(metadata i32* %dc, metadata !9686, metadata !67), !dbg !9687
  %4 = load i32*, i32** %block, align 8, !dbg !9688
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 0, !dbg !9688
  %5 = load i32, i32* %arrayidx, align 4, !dbg !9688
  %add = add nsw i32 %5, 32, !dbg !9689
  %shr = ashr i32 %add, 6, !dbg !9690
  store i32 %shr, i32* %dc, align 4, !dbg !9687
  %6 = load i32, i32* %stride.addr, align 4, !dbg !9691
  %conv = sext i32 %6 to i64, !dbg !9691
  %div = udiv i64 %conv, 2, !dbg !9691
  %conv1 = trunc i64 %div to i32, !dbg !9691
  store i32 %conv1, i32* %stride.addr, align 4, !dbg !9691
  %7 = load i32*, i32** %block, align 8, !dbg !9692
  %arrayidx2 = getelementptr inbounds i32, i32* %7, i64 0, !dbg !9692
  store i32 0, i32* %arrayidx2, align 4, !dbg !9693
  store i32 0, i32* %j, align 4, !dbg !9694
  br label %for.cond, !dbg !9695

for.cond:                                         ; preds = %for.inc14, %entry
  %8 = load i32, i32* %j, align 4, !dbg !9696
  %cmp = icmp slt i32 %8, 4, !dbg !9698
  br i1 %cmp, label %for.body, label %for.end16, !dbg !9699

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9700
  br label %for.cond4, !dbg !9701

for.cond4:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !9702
  %cmp5 = icmp slt i32 %9, 4, !dbg !9704
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !9705

for.body7:                                        ; preds = %for.cond4
  %10 = load i32, i32* %i, align 4, !dbg !9706
  %idxprom = sext i32 %10 to i64, !dbg !9707
  %11 = load i16*, i16** %dst, align 8, !dbg !9707
  %arrayidx8 = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !9707
  %12 = load i16, i16* %arrayidx8, align 2, !dbg !9707
  %conv9 = zext i16 %12 to i32, !dbg !9707
  %13 = load i32, i32* %dc, align 4, !dbg !9708
  %add10 = add nsw i32 %conv9, %13, !dbg !9709
  store i32 %add10, i32* %a.addr.i, align 4, !dbg !9710
  store i32 14, i32* %p.addr.i, align 4, !dbg !9710
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !9711
  %15 = load i32, i32* %p.addr.i, align 4, !dbg !9712
  %shl.i = shl i32 1, %15, !dbg !9713
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !9714
  %neg.i = xor i32 %sub.i, -1, !dbg !9715
  %and.i = and i32 %14, %neg.i, !dbg !9716
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !9716
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !9717

if.then.i:                                        ; preds = %for.body7
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !9718
  %neg1.i = xor i32 %16, -1, !dbg !9719
  %shr.i = ashr i32 %neg1.i, 31, !dbg !9720
  %17 = load i32, i32* %p.addr.i, align 4, !dbg !9721
  %shl2.i = shl i32 1, %17, !dbg !9722
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !9723
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !9724
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !9725
  br label %av_clip_uintp2_c.exit, !dbg !9725

if.else.i:                                        ; preds = %for.body7
  %18 = load i32, i32* %a.addr.i, align 4, !dbg !9726
  store i32 %18, i32* %retval.i, align 4, !dbg !9727
  br label %av_clip_uintp2_c.exit, !dbg !9727

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %19 = load i32, i32* %retval.i, align 4, !dbg !9728
  %conv11 = trunc i32 %19 to i16, !dbg !9710
  %20 = load i32, i32* %i, align 4, !dbg !9729
  %idxprom12 = sext i32 %20 to i64, !dbg !9730
  %21 = load i16*, i16** %dst, align 8, !dbg !9730
  %arrayidx13 = getelementptr inbounds i16, i16* %21, i64 %idxprom12, !dbg !9730
  store i16 %conv11, i16* %arrayidx13, align 2, !dbg !9731
  br label %for.inc, !dbg !9730

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %22 = load i32, i32* %i, align 4, !dbg !9732
  %inc = add nsw i32 %22, 1, !dbg !9732
  store i32 %inc, i32* %i, align 4, !dbg !9732
  br label %for.cond4, !dbg !9734, !llvm.loop !9735

for.end:                                          ; preds = %for.cond4
  %23 = load i32, i32* %stride.addr, align 4, !dbg !9737
  %24 = load i16*, i16** %dst, align 8, !dbg !9738
  %idx.ext = sext i32 %23 to i64, !dbg !9738
  %add.ptr = getelementptr inbounds i16, i16* %24, i64 %idx.ext, !dbg !9738
  store i16* %add.ptr, i16** %dst, align 8, !dbg !9738
  br label %for.inc14, !dbg !9739

for.inc14:                                        ; preds = %for.end
  %25 = load i32, i32* %j, align 4, !dbg !9740
  %inc15 = add nsw i32 %25, 1, !dbg !9740
  store i32 %inc15, i32* %j, align 4, !dbg !9740
  br label %for.cond, !dbg !9742, !llvm.loop !9743

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !9745
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_dc_add_14_c(i8* %_dst, i16* %_block, i32 %stride) #0 !dbg !9746 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2143, metadata !67), !dbg !9747
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !2152, metadata !67), !dbg !9754
  %_dst.addr = alloca i8*, align 8
  %_block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dst = alloca i16*, align 8
  %block = alloca i32*, align 8
  %dc = alloca i32, align 4
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !9755, metadata !67), !dbg !9756
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !9757, metadata !67), !dbg !9758
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !9759, metadata !67), !dbg !9760
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9761, metadata !67), !dbg !9762
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9763, metadata !67), !dbg !9764
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !9765, metadata !67), !dbg !9766
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !9767
  %1 = bitcast i8* %0 to i16*, !dbg !9768
  store i16* %1, i16** %dst, align 8, !dbg !9766
  call void @llvm.dbg.declare(metadata i32** %block, metadata !9769, metadata !67), !dbg !9770
  %2 = load i16*, i16** %_block.addr, align 8, !dbg !9771
  %3 = bitcast i16* %2 to i32*, !dbg !9772
  store i32* %3, i32** %block, align 8, !dbg !9770
  call void @llvm.dbg.declare(metadata i32* %dc, metadata !9773, metadata !67), !dbg !9774
  %4 = load i32*, i32** %block, align 8, !dbg !9775
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 0, !dbg !9775
  %5 = load i32, i32* %arrayidx, align 4, !dbg !9775
  %add = add nsw i32 %5, 32, !dbg !9776
  %shr = ashr i32 %add, 6, !dbg !9777
  store i32 %shr, i32* %dc, align 4, !dbg !9774
  %6 = load i32*, i32** %block, align 8, !dbg !9778
  %arrayidx1 = getelementptr inbounds i32, i32* %6, i64 0, !dbg !9778
  store i32 0, i32* %arrayidx1, align 4, !dbg !9779
  %7 = load i32, i32* %stride.addr, align 4, !dbg !9780
  %conv = sext i32 %7 to i64, !dbg !9780
  %div = udiv i64 %conv, 2, !dbg !9780
  %conv2 = trunc i64 %div to i32, !dbg !9780
  store i32 %conv2, i32* %stride.addr, align 4, !dbg !9780
  store i32 0, i32* %j, align 4, !dbg !9781
  br label %for.cond, !dbg !9782

for.cond:                                         ; preds = %for.inc14, %entry
  %8 = load i32, i32* %j, align 4, !dbg !9783
  %cmp = icmp slt i32 %8, 8, !dbg !9785
  br i1 %cmp, label %for.body, label %for.end16, !dbg !9786

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9787
  br label %for.cond4, !dbg !9788

for.cond4:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !9789
  %cmp5 = icmp slt i32 %9, 8, !dbg !9791
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !9792

for.body7:                                        ; preds = %for.cond4
  %10 = load i32, i32* %i, align 4, !dbg !9793
  %idxprom = sext i32 %10 to i64, !dbg !9794
  %11 = load i16*, i16** %dst, align 8, !dbg !9794
  %arrayidx8 = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !9794
  %12 = load i16, i16* %arrayidx8, align 2, !dbg !9794
  %conv9 = zext i16 %12 to i32, !dbg !9794
  %13 = load i32, i32* %dc, align 4, !dbg !9795
  %add10 = add nsw i32 %conv9, %13, !dbg !9796
  store i32 %add10, i32* %a.addr.i, align 4, !dbg !9797
  store i32 14, i32* %p.addr.i, align 4, !dbg !9797
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !9798
  %15 = load i32, i32* %p.addr.i, align 4, !dbg !9799
  %shl.i = shl i32 1, %15, !dbg !9800
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !9801
  %neg.i = xor i32 %sub.i, -1, !dbg !9802
  %and.i = and i32 %14, %neg.i, !dbg !9803
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !9803
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !9804

if.then.i:                                        ; preds = %for.body7
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !9805
  %neg1.i = xor i32 %16, -1, !dbg !9806
  %shr.i = ashr i32 %neg1.i, 31, !dbg !9807
  %17 = load i32, i32* %p.addr.i, align 4, !dbg !9808
  %shl2.i = shl i32 1, %17, !dbg !9809
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !9810
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !9811
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !9812
  br label %av_clip_uintp2_c.exit, !dbg !9812

if.else.i:                                        ; preds = %for.body7
  %18 = load i32, i32* %a.addr.i, align 4, !dbg !9813
  store i32 %18, i32* %retval.i, align 4, !dbg !9814
  br label %av_clip_uintp2_c.exit, !dbg !9814

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %19 = load i32, i32* %retval.i, align 4, !dbg !9815
  %conv11 = trunc i32 %19 to i16, !dbg !9797
  %20 = load i32, i32* %i, align 4, !dbg !9816
  %idxprom12 = sext i32 %20 to i64, !dbg !9817
  %21 = load i16*, i16** %dst, align 8, !dbg !9817
  %arrayidx13 = getelementptr inbounds i16, i16* %21, i64 %idxprom12, !dbg !9817
  store i16 %conv11, i16* %arrayidx13, align 2, !dbg !9818
  br label %for.inc, !dbg !9817

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %22 = load i32, i32* %i, align 4, !dbg !9819
  %inc = add nsw i32 %22, 1, !dbg !9819
  store i32 %inc, i32* %i, align 4, !dbg !9819
  br label %for.cond4, !dbg !9821, !llvm.loop !9822

for.end:                                          ; preds = %for.cond4
  %23 = load i32, i32* %stride.addr, align 4, !dbg !9824
  %24 = load i16*, i16** %dst, align 8, !dbg !9825
  %idx.ext = sext i32 %23 to i64, !dbg !9825
  %add.ptr = getelementptr inbounds i16, i16* %24, i64 %idx.ext, !dbg !9825
  store i16* %add.ptr, i16** %dst, align 8, !dbg !9825
  br label %for.inc14, !dbg !9826

for.inc14:                                        ; preds = %for.end
  %25 = load i32, i32* %j, align 4, !dbg !9827
  %inc15 = add nsw i32 %25, 1, !dbg !9827
  store i32 %inc15, i32* %j, align 4, !dbg !9827
  br label %for.cond, !dbg !9829, !llvm.loop !9830

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !9832
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add16_14_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !9833 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %nnz = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !9834, metadata !67), !dbg !9835
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !9836, metadata !67), !dbg !9837
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !9838, metadata !67), !dbg !9839
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !9840, metadata !67), !dbg !9841
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !9842, metadata !67), !dbg !9843
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9844, metadata !67), !dbg !9845
  store i32 0, i32* %i, align 4, !dbg !9846
  br label %for.cond, !dbg !9848

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9849
  %cmp = icmp slt i32 %0, 16, !dbg !9852
  br i1 %cmp, label %for.body, label %for.end, !dbg !9853

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %nnz, metadata !9854, metadata !67), !dbg !9856
  %1 = load i32, i32* %i, align 4, !dbg !9857
  %idxprom = sext i32 %1 to i64, !dbg !9858
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !9858
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9858
  %idxprom1 = zext i8 %2 to i64, !dbg !9859
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !9859
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !9859
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !9859
  %conv = zext i8 %4 to i32, !dbg !9859
  store i32 %conv, i32* %nnz, align 4, !dbg !9856
  %5 = load i32, i32* %nnz, align 4, !dbg !9860
  %tobool = icmp ne i32 %5, 0, !dbg !9860
  br i1 %tobool, label %if.then, label %if.end23, !dbg !9862

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %nnz, align 4, !dbg !9863
  %cmp3 = icmp eq i32 %6, 1, !dbg !9866
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !9867

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %i, align 4, !dbg !9868
  %mul = mul nsw i32 %7, 16, !dbg !9870
  %idxprom5 = sext i32 %mul to i64, !dbg !9871
  %8 = load i16*, i16** %block.addr, align 8, !dbg !9872
  %9 = bitcast i16* %8 to i32*, !dbg !9871
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i64 %idxprom5, !dbg !9871
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !9871
  %tobool7 = icmp ne i32 %10, 0, !dbg !9871
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !9873

if.then8:                                         ; preds = %land.lhs.true
  %11 = load i8*, i8** %dst.addr, align 8, !dbg !9874
  %12 = load i32, i32* %i, align 4, !dbg !9876
  %idxprom9 = sext i32 %12 to i64, !dbg !9877
  %13 = load i32*, i32** %block_offset.addr, align 8, !dbg !9877
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 %idxprom9, !dbg !9877
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !9877
  %idx.ext = sext i32 %14 to i64, !dbg !9878
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !9878
  %15 = load i16*, i16** %block.addr, align 8, !dbg !9879
  %16 = load i32, i32* %i, align 4, !dbg !9880
  %mul11 = mul nsw i32 %16, 16, !dbg !9881
  %conv12 = sext i32 %mul11 to i64, !dbg !9880
  %mul13 = mul i64 %conv12, 2, !dbg !9882
  %add.ptr14 = getelementptr inbounds i16, i16* %15, i64 %mul13, !dbg !9883
  %17 = load i32, i32* %stride.addr, align 4, !dbg !9884
  call void @ff_h264_idct_dc_add_14_c(i8* %add.ptr, i16* %add.ptr14, i32 %17), !dbg !9885
  br label %if.end, !dbg !9885

if.else:                                          ; preds = %land.lhs.true, %if.then
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !9886
  %19 = load i32, i32* %i, align 4, !dbg !9887
  %idxprom15 = sext i32 %19 to i64, !dbg !9888
  %20 = load i32*, i32** %block_offset.addr, align 8, !dbg !9888
  %arrayidx16 = getelementptr inbounds i32, i32* %20, i64 %idxprom15, !dbg !9888
  %21 = load i32, i32* %arrayidx16, align 4, !dbg !9888
  %idx.ext17 = sext i32 %21 to i64, !dbg !9889
  %add.ptr18 = getelementptr inbounds i8, i8* %18, i64 %idx.ext17, !dbg !9889
  %22 = load i16*, i16** %block.addr, align 8, !dbg !9890
  %23 = load i32, i32* %i, align 4, !dbg !9891
  %mul19 = mul nsw i32 %23, 16, !dbg !9892
  %conv20 = sext i32 %mul19 to i64, !dbg !9891
  %mul21 = mul i64 %conv20, 2, !dbg !9893
  %add.ptr22 = getelementptr inbounds i16, i16* %22, i64 %mul21, !dbg !9894
  %24 = load i32, i32* %stride.addr, align 4, !dbg !9895
  call void @ff_h264_idct_add_14_c(i8* %add.ptr18, i16* %add.ptr22, i32 %24), !dbg !9896
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end23, !dbg !9897

if.end23:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !9898

for.inc:                                          ; preds = %if.end23
  %25 = load i32, i32* %i, align 4, !dbg !9899
  %inc = add nsw i32 %25, 1, !dbg !9899
  store i32 %inc, i32* %i, align 4, !dbg !9899
  br label %for.cond, !dbg !9901, !llvm.loop !9902

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9904
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add16intra_14_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !9905 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !9906, metadata !67), !dbg !9907
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !9908, metadata !67), !dbg !9909
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !9910, metadata !67), !dbg !9911
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !9912, metadata !67), !dbg !9913
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !9914, metadata !67), !dbg !9915
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9916, metadata !67), !dbg !9917
  store i32 0, i32* %i, align 4, !dbg !9918
  br label %for.cond, !dbg !9920

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9921
  %cmp = icmp slt i32 %0, 16, !dbg !9924
  br i1 %cmp, label %for.body, label %for.end, !dbg !9925

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !9926
  %idxprom = sext i32 %1 to i64, !dbg !9929
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !9929
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9929
  %idxprom1 = zext i8 %2 to i64, !dbg !9930
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !9930
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !9930
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !9930
  %tobool = icmp ne i8 %4, 0, !dbg !9930
  br i1 %tobool, label %if.then, label %if.else, !dbg !9931

if.then:                                          ; preds = %for.body
  %5 = load i8*, i8** %dst.addr, align 8, !dbg !9932
  %6 = load i32, i32* %i, align 4, !dbg !9934
  %idxprom3 = sext i32 %6 to i64, !dbg !9935
  %7 = load i32*, i32** %block_offset.addr, align 8, !dbg !9935
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 %idxprom3, !dbg !9935
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !9935
  %idx.ext = sext i32 %8 to i64, !dbg !9936
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !9936
  %9 = load i16*, i16** %block.addr, align 8, !dbg !9937
  %10 = load i32, i32* %i, align 4, !dbg !9938
  %mul = mul nsw i32 %10, 16, !dbg !9939
  %conv = sext i32 %mul to i64, !dbg !9938
  %mul5 = mul i64 %conv, 2, !dbg !9940
  %add.ptr6 = getelementptr inbounds i16, i16* %9, i64 %mul5, !dbg !9941
  %11 = load i32, i32* %stride.addr, align 4, !dbg !9942
  call void @ff_h264_idct_add_14_c(i8* %add.ptr, i16* %add.ptr6, i32 %11), !dbg !9943
  br label %if.end20, !dbg !9943

if.else:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !9944
  %mul7 = mul nsw i32 %12, 16, !dbg !9946
  %idxprom8 = sext i32 %mul7 to i64, !dbg !9947
  %13 = load i16*, i16** %block.addr, align 8, !dbg !9948
  %14 = bitcast i16* %13 to i32*, !dbg !9947
  %arrayidx9 = getelementptr inbounds i32, i32* %14, i64 %idxprom8, !dbg !9947
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !9947
  %tobool10 = icmp ne i32 %15, 0, !dbg !9947
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !9949

if.then11:                                        ; preds = %if.else
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !9950
  %17 = load i32, i32* %i, align 4, !dbg !9952
  %idxprom12 = sext i32 %17 to i64, !dbg !9953
  %18 = load i32*, i32** %block_offset.addr, align 8, !dbg !9953
  %arrayidx13 = getelementptr inbounds i32, i32* %18, i64 %idxprom12, !dbg !9953
  %19 = load i32, i32* %arrayidx13, align 4, !dbg !9953
  %idx.ext14 = sext i32 %19 to i64, !dbg !9954
  %add.ptr15 = getelementptr inbounds i8, i8* %16, i64 %idx.ext14, !dbg !9954
  %20 = load i16*, i16** %block.addr, align 8, !dbg !9955
  %21 = load i32, i32* %i, align 4, !dbg !9956
  %mul16 = mul nsw i32 %21, 16, !dbg !9957
  %conv17 = sext i32 %mul16 to i64, !dbg !9956
  %mul18 = mul i64 %conv17, 2, !dbg !9958
  %add.ptr19 = getelementptr inbounds i16, i16* %20, i64 %mul18, !dbg !9959
  %22 = load i32, i32* %stride.addr, align 4, !dbg !9960
  call void @ff_h264_idct_dc_add_14_c(i8* %add.ptr15, i16* %add.ptr19, i32 %22), !dbg !9961
  br label %if.end, !dbg !9961

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !9962

for.inc:                                          ; preds = %if.end20
  %23 = load i32, i32* %i, align 4, !dbg !9963
  %inc = add nsw i32 %23, 1, !dbg !9963
  store i32 %inc, i32* %i, align 4, !dbg !9963
  br label %for.cond, !dbg !9965, !llvm.loop !9966

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9968
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct8_add4_14_c(i8* %dst, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !9969 {
entry:
  %dst.addr = alloca i8*, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %nnz = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !9970, metadata !67), !dbg !9971
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !9972, metadata !67), !dbg !9973
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !9974, metadata !67), !dbg !9975
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !9976, metadata !67), !dbg !9977
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !9978, metadata !67), !dbg !9979
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9980, metadata !67), !dbg !9981
  store i32 0, i32* %i, align 4, !dbg !9982
  br label %for.cond, !dbg !9984

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9985
  %cmp = icmp slt i32 %0, 16, !dbg !9988
  br i1 %cmp, label %for.body, label %for.end, !dbg !9989

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %nnz, metadata !9990, metadata !67), !dbg !9992
  %1 = load i32, i32* %i, align 4, !dbg !9993
  %idxprom = sext i32 %1 to i64, !dbg !9994
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !9994
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9994
  %idxprom1 = zext i8 %2 to i64, !dbg !9995
  %3 = load i8*, i8** %nnzc.addr, align 8, !dbg !9995
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !9995
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !9995
  %conv = zext i8 %4 to i32, !dbg !9995
  store i32 %conv, i32* %nnz, align 4, !dbg !9992
  %5 = load i32, i32* %nnz, align 4, !dbg !9996
  %tobool = icmp ne i32 %5, 0, !dbg !9996
  br i1 %tobool, label %if.then, label %if.end23, !dbg !9998

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %nnz, align 4, !dbg !9999
  %cmp3 = icmp eq i32 %6, 1, !dbg !10002
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !10003

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %i, align 4, !dbg !10004
  %mul = mul nsw i32 %7, 16, !dbg !10006
  %idxprom5 = sext i32 %mul to i64, !dbg !10007
  %8 = load i16*, i16** %block.addr, align 8, !dbg !10008
  %9 = bitcast i16* %8 to i32*, !dbg !10007
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i64 %idxprom5, !dbg !10007
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !10007
  %tobool7 = icmp ne i32 %10, 0, !dbg !10007
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !10009

if.then8:                                         ; preds = %land.lhs.true
  %11 = load i8*, i8** %dst.addr, align 8, !dbg !10010
  %12 = load i32, i32* %i, align 4, !dbg !10012
  %idxprom9 = sext i32 %12 to i64, !dbg !10013
  %13 = load i32*, i32** %block_offset.addr, align 8, !dbg !10013
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 %idxprom9, !dbg !10013
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !10013
  %idx.ext = sext i32 %14 to i64, !dbg !10014
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !10014
  %15 = load i16*, i16** %block.addr, align 8, !dbg !10015
  %16 = load i32, i32* %i, align 4, !dbg !10016
  %mul11 = mul nsw i32 %16, 16, !dbg !10017
  %conv12 = sext i32 %mul11 to i64, !dbg !10016
  %mul13 = mul i64 %conv12, 2, !dbg !10018
  %add.ptr14 = getelementptr inbounds i16, i16* %15, i64 %mul13, !dbg !10019
  %17 = load i32, i32* %stride.addr, align 4, !dbg !10020
  call void @ff_h264_idct8_dc_add_14_c(i8* %add.ptr, i16* %add.ptr14, i32 %17), !dbg !10021
  br label %if.end, !dbg !10021

if.else:                                          ; preds = %land.lhs.true, %if.then
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !10022
  %19 = load i32, i32* %i, align 4, !dbg !10023
  %idxprom15 = sext i32 %19 to i64, !dbg !10024
  %20 = load i32*, i32** %block_offset.addr, align 8, !dbg !10024
  %arrayidx16 = getelementptr inbounds i32, i32* %20, i64 %idxprom15, !dbg !10024
  %21 = load i32, i32* %arrayidx16, align 4, !dbg !10024
  %idx.ext17 = sext i32 %21 to i64, !dbg !10025
  %add.ptr18 = getelementptr inbounds i8, i8* %18, i64 %idx.ext17, !dbg !10025
  %22 = load i16*, i16** %block.addr, align 8, !dbg !10026
  %23 = load i32, i32* %i, align 4, !dbg !10027
  %mul19 = mul nsw i32 %23, 16, !dbg !10028
  %conv20 = sext i32 %mul19 to i64, !dbg !10027
  %mul21 = mul i64 %conv20, 2, !dbg !10029
  %add.ptr22 = getelementptr inbounds i16, i16* %22, i64 %mul21, !dbg !10030
  %24 = load i32, i32* %stride.addr, align 4, !dbg !10031
  call void @ff_h264_idct8_add_14_c(i8* %add.ptr18, i16* %add.ptr22, i32 %24), !dbg !10032
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end23, !dbg !10033

if.end23:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !10034

for.inc:                                          ; preds = %if.end23
  %25 = load i32, i32* %i, align 4, !dbg !10035
  %add = add nsw i32 %25, 4, !dbg !10035
  store i32 %add, i32* %i, align 4, !dbg !10035
  br label %for.cond, !dbg !10037, !llvm.loop !10038

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10040
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add8_14_c(i8** %dest, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !10041 {
entry:
  %dest.addr = alloca i8**, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !10042, metadata !67), !dbg !10043
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !10044, metadata !67), !dbg !10045
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !10046, metadata !67), !dbg !10047
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !10048, metadata !67), !dbg !10049
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !10050, metadata !67), !dbg !10051
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10052, metadata !67), !dbg !10053
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10054, metadata !67), !dbg !10055
  store i32 1, i32* %j, align 4, !dbg !10056
  br label %for.cond, !dbg !10058

for.cond:                                         ; preds = %for.inc31, %entry
  %0 = load i32, i32* %j, align 4, !dbg !10059
  %cmp = icmp slt i32 %0, 3, !dbg !10062
  br i1 %cmp, label %for.body, label %for.end33, !dbg !10063

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !10064
  %mul = mul nsw i32 %1, 16, !dbg !10067
  store i32 %mul, i32* %i, align 4, !dbg !10068
  br label %for.cond1, !dbg !10069

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !10070
  %3 = load i32, i32* %j, align 4, !dbg !10073
  %mul2 = mul nsw i32 %3, 16, !dbg !10074
  %add = add nsw i32 %mul2, 4, !dbg !10075
  %cmp3 = icmp slt i32 %2, %add, !dbg !10076
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !10077

for.body4:                                        ; preds = %for.cond1
  %4 = load i32, i32* %i, align 4, !dbg !10078
  %idxprom = sext i32 %4 to i64, !dbg !10081
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !10081
  %5 = load i8, i8* %arrayidx, align 1, !dbg !10081
  %idxprom5 = zext i8 %5 to i64, !dbg !10082
  %6 = load i8*, i8** %nnzc.addr, align 8, !dbg !10082
  %arrayidx6 = getelementptr inbounds i8, i8* %6, i64 %idxprom5, !dbg !10082
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !10082
  %tobool = icmp ne i8 %7, 0, !dbg !10082
  br i1 %tobool, label %if.then, label %if.else, !dbg !10083

if.then:                                          ; preds = %for.body4
  %8 = load i32, i32* %j, align 4, !dbg !10084
  %sub = sub nsw i32 %8, 1, !dbg !10085
  %idxprom7 = sext i32 %sub to i64, !dbg !10086
  %9 = load i8**, i8*** %dest.addr, align 8, !dbg !10086
  %arrayidx8 = getelementptr inbounds i8*, i8** %9, i64 %idxprom7, !dbg !10086
  %10 = load i8*, i8** %arrayidx8, align 8, !dbg !10086
  %11 = load i32, i32* %i, align 4, !dbg !10087
  %idxprom9 = sext i32 %11 to i64, !dbg !10088
  %12 = load i32*, i32** %block_offset.addr, align 8, !dbg !10088
  %arrayidx10 = getelementptr inbounds i32, i32* %12, i64 %idxprom9, !dbg !10088
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !10088
  %idx.ext = sext i32 %13 to i64, !dbg !10089
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !10089
  %14 = load i16*, i16** %block.addr, align 8, !dbg !10090
  %15 = load i32, i32* %i, align 4, !dbg !10091
  %mul11 = mul nsw i32 %15, 16, !dbg !10092
  %conv = sext i32 %mul11 to i64, !dbg !10091
  %mul12 = mul i64 %conv, 2, !dbg !10093
  %add.ptr13 = getelementptr inbounds i16, i16* %14, i64 %mul12, !dbg !10094
  %16 = load i32, i32* %stride.addr, align 4, !dbg !10095
  call void @ff_h264_idct_add_14_c(i8* %add.ptr, i16* %add.ptr13, i32 %16), !dbg !10096
  br label %if.end30, !dbg !10096

if.else:                                          ; preds = %for.body4
  %17 = load i32, i32* %i, align 4, !dbg !10097
  %mul14 = mul nsw i32 %17, 16, !dbg !10099
  %idxprom15 = sext i32 %mul14 to i64, !dbg !10100
  %18 = load i16*, i16** %block.addr, align 8, !dbg !10101
  %19 = bitcast i16* %18 to i32*, !dbg !10100
  %arrayidx16 = getelementptr inbounds i32, i32* %19, i64 %idxprom15, !dbg !10100
  %20 = load i32, i32* %arrayidx16, align 4, !dbg !10100
  %tobool17 = icmp ne i32 %20, 0, !dbg !10100
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !10102

if.then18:                                        ; preds = %if.else
  %21 = load i32, i32* %j, align 4, !dbg !10103
  %sub19 = sub nsw i32 %21, 1, !dbg !10104
  %idxprom20 = sext i32 %sub19 to i64, !dbg !10105
  %22 = load i8**, i8*** %dest.addr, align 8, !dbg !10105
  %arrayidx21 = getelementptr inbounds i8*, i8** %22, i64 %idxprom20, !dbg !10105
  %23 = load i8*, i8** %arrayidx21, align 8, !dbg !10105
  %24 = load i32, i32* %i, align 4, !dbg !10106
  %idxprom22 = sext i32 %24 to i64, !dbg !10107
  %25 = load i32*, i32** %block_offset.addr, align 8, !dbg !10107
  %arrayidx23 = getelementptr inbounds i32, i32* %25, i64 %idxprom22, !dbg !10107
  %26 = load i32, i32* %arrayidx23, align 4, !dbg !10107
  %idx.ext24 = sext i32 %26 to i64, !dbg !10108
  %add.ptr25 = getelementptr inbounds i8, i8* %23, i64 %idx.ext24, !dbg !10108
  %27 = load i16*, i16** %block.addr, align 8, !dbg !10109
  %28 = load i32, i32* %i, align 4, !dbg !10110
  %mul26 = mul nsw i32 %28, 16, !dbg !10111
  %conv27 = sext i32 %mul26 to i64, !dbg !10110
  %mul28 = mul i64 %conv27, 2, !dbg !10112
  %add.ptr29 = getelementptr inbounds i16, i16* %27, i64 %mul28, !dbg !10113
  %29 = load i32, i32* %stride.addr, align 4, !dbg !10114
  call void @ff_h264_idct_dc_add_14_c(i8* %add.ptr25, i16* %add.ptr29, i32 %29), !dbg !10115
  br label %if.end, !dbg !10115

if.end:                                           ; preds = %if.then18, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10116

for.inc:                                          ; preds = %if.end30
  %30 = load i32, i32* %i, align 4, !dbg !10117
  %inc = add nsw i32 %30, 1, !dbg !10117
  store i32 %inc, i32* %i, align 4, !dbg !10117
  br label %for.cond1, !dbg !10119, !llvm.loop !10120

for.end:                                          ; preds = %for.cond1
  br label %for.inc31, !dbg !10122

for.inc31:                                        ; preds = %for.end
  %31 = load i32, i32* %j, align 4, !dbg !10123
  %inc32 = add nsw i32 %31, 1, !dbg !10123
  store i32 %inc32, i32* %j, align 4, !dbg !10123
  br label %for.cond, !dbg !10125, !llvm.loop !10126

for.end33:                                        ; preds = %for.cond
  ret void, !dbg !10128
}

; Function Attrs: nounwind uwtable
define void @ff_h264_idct_add8_422_14_c(i8** %dest, i32* %block_offset, i16* %block, i32 %stride, i8* %nnzc) #0 !dbg !10129 {
entry:
  %dest.addr = alloca i8**, align 8
  %block_offset.addr = alloca i32*, align 8
  %block.addr = alloca i16*, align 8
  %stride.addr = alloca i32, align 4
  %nnzc.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !10130, metadata !67), !dbg !10131
  store i32* %block_offset, i32** %block_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_offset.addr, metadata !10132, metadata !67), !dbg !10133
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !10134, metadata !67), !dbg !10135
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !10136, metadata !67), !dbg !10137
  store i8* %nnzc, i8** %nnzc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nnzc.addr, metadata !10138, metadata !67), !dbg !10139
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10140, metadata !67), !dbg !10141
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10142, metadata !67), !dbg !10143
  store i32 1, i32* %j, align 4, !dbg !10144
  br label %for.cond, !dbg !10146

for.cond:                                         ; preds = %for.inc31, %entry
  %0 = load i32, i32* %j, align 4, !dbg !10147
  %cmp = icmp slt i32 %0, 3, !dbg !10150
  br i1 %cmp, label %for.body, label %for.end33, !dbg !10151

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !10152
  %mul = mul nsw i32 %1, 16, !dbg !10155
  store i32 %mul, i32* %i, align 4, !dbg !10156
  br label %for.cond1, !dbg !10157

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !10158
  %3 = load i32, i32* %j, align 4, !dbg !10161
  %mul2 = mul nsw i32 %3, 16, !dbg !10162
  %add = add nsw i32 %mul2, 4, !dbg !10163
  %cmp3 = icmp slt i32 %2, %add, !dbg !10164
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !10165

for.body4:                                        ; preds = %for.cond1
  %4 = load i32, i32* %i, align 4, !dbg !10166
  %idxprom = sext i32 %4 to i64, !dbg !10169
  %arrayidx = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom, !dbg !10169
  %5 = load i8, i8* %arrayidx, align 1, !dbg !10169
  %idxprom5 = zext i8 %5 to i64, !dbg !10170
  %6 = load i8*, i8** %nnzc.addr, align 8, !dbg !10170
  %arrayidx6 = getelementptr inbounds i8, i8* %6, i64 %idxprom5, !dbg !10170
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !10170
  %tobool = icmp ne i8 %7, 0, !dbg !10170
  br i1 %tobool, label %if.then, label %if.else, !dbg !10171

if.then:                                          ; preds = %for.body4
  %8 = load i32, i32* %j, align 4, !dbg !10172
  %sub = sub nsw i32 %8, 1, !dbg !10173
  %idxprom7 = sext i32 %sub to i64, !dbg !10174
  %9 = load i8**, i8*** %dest.addr, align 8, !dbg !10174
  %arrayidx8 = getelementptr inbounds i8*, i8** %9, i64 %idxprom7, !dbg !10174
  %10 = load i8*, i8** %arrayidx8, align 8, !dbg !10174
  %11 = load i32, i32* %i, align 4, !dbg !10175
  %idxprom9 = sext i32 %11 to i64, !dbg !10176
  %12 = load i32*, i32** %block_offset.addr, align 8, !dbg !10176
  %arrayidx10 = getelementptr inbounds i32, i32* %12, i64 %idxprom9, !dbg !10176
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !10176
  %idx.ext = sext i32 %13 to i64, !dbg !10177
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !10177
  %14 = load i16*, i16** %block.addr, align 8, !dbg !10178
  %15 = load i32, i32* %i, align 4, !dbg !10179
  %mul11 = mul nsw i32 %15, 16, !dbg !10180
  %conv = sext i32 %mul11 to i64, !dbg !10179
  %mul12 = mul i64 %conv, 2, !dbg !10181
  %add.ptr13 = getelementptr inbounds i16, i16* %14, i64 %mul12, !dbg !10182
  %16 = load i32, i32* %stride.addr, align 4, !dbg !10183
  call void @ff_h264_idct_add_14_c(i8* %add.ptr, i16* %add.ptr13, i32 %16), !dbg !10184
  br label %if.end30, !dbg !10184

if.else:                                          ; preds = %for.body4
  %17 = load i32, i32* %i, align 4, !dbg !10185
  %mul14 = mul nsw i32 %17, 16, !dbg !10187
  %idxprom15 = sext i32 %mul14 to i64, !dbg !10188
  %18 = load i16*, i16** %block.addr, align 8, !dbg !10189
  %19 = bitcast i16* %18 to i32*, !dbg !10188
  %arrayidx16 = getelementptr inbounds i32, i32* %19, i64 %idxprom15, !dbg !10188
  %20 = load i32, i32* %arrayidx16, align 4, !dbg !10188
  %tobool17 = icmp ne i32 %20, 0, !dbg !10188
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !10190

if.then18:                                        ; preds = %if.else
  %21 = load i32, i32* %j, align 4, !dbg !10191
  %sub19 = sub nsw i32 %21, 1, !dbg !10192
  %idxprom20 = sext i32 %sub19 to i64, !dbg !10193
  %22 = load i8**, i8*** %dest.addr, align 8, !dbg !10193
  %arrayidx21 = getelementptr inbounds i8*, i8** %22, i64 %idxprom20, !dbg !10193
  %23 = load i8*, i8** %arrayidx21, align 8, !dbg !10193
  %24 = load i32, i32* %i, align 4, !dbg !10194
  %idxprom22 = sext i32 %24 to i64, !dbg !10195
  %25 = load i32*, i32** %block_offset.addr, align 8, !dbg !10195
  %arrayidx23 = getelementptr inbounds i32, i32* %25, i64 %idxprom22, !dbg !10195
  %26 = load i32, i32* %arrayidx23, align 4, !dbg !10195
  %idx.ext24 = sext i32 %26 to i64, !dbg !10196
  %add.ptr25 = getelementptr inbounds i8, i8* %23, i64 %idx.ext24, !dbg !10196
  %27 = load i16*, i16** %block.addr, align 8, !dbg !10197
  %28 = load i32, i32* %i, align 4, !dbg !10198
  %mul26 = mul nsw i32 %28, 16, !dbg !10199
  %conv27 = sext i32 %mul26 to i64, !dbg !10198
  %mul28 = mul i64 %conv27, 2, !dbg !10200
  %add.ptr29 = getelementptr inbounds i16, i16* %27, i64 %mul28, !dbg !10201
  %29 = load i32, i32* %stride.addr, align 4, !dbg !10202
  call void @ff_h264_idct_dc_add_14_c(i8* %add.ptr25, i16* %add.ptr29, i32 %29), !dbg !10203
  br label %if.end, !dbg !10203

if.end:                                           ; preds = %if.then18, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10204

for.inc:                                          ; preds = %if.end30
  %30 = load i32, i32* %i, align 4, !dbg !10205
  %inc = add nsw i32 %30, 1, !dbg !10205
  store i32 %inc, i32* %i, align 4, !dbg !10205
  br label %for.cond1, !dbg !10207, !llvm.loop !10208

for.end:                                          ; preds = %for.cond1
  br label %for.inc31, !dbg !10210

for.inc31:                                        ; preds = %for.end
  %31 = load i32, i32* %j, align 4, !dbg !10211
  %inc32 = add nsw i32 %31, 1, !dbg !10211
  store i32 %inc32, i32* %j, align 4, !dbg !10211
  br label %for.cond, !dbg !10213, !llvm.loop !10214

for.end33:                                        ; preds = %for.cond
  store i32 1, i32* %j, align 4, !dbg !10216
  br label %for.cond34, !dbg !10218

for.cond34:                                       ; preds = %for.inc88, %for.end33
  %32 = load i32, i32* %j, align 4, !dbg !10219
  %cmp35 = icmp slt i32 %32, 3, !dbg !10222
  br i1 %cmp35, label %for.body37, label %for.end90, !dbg !10223

for.body37:                                       ; preds = %for.cond34
  %33 = load i32, i32* %j, align 4, !dbg !10224
  %mul38 = mul nsw i32 %33, 16, !dbg !10227
  %add39 = add nsw i32 %mul38, 4, !dbg !10228
  store i32 %add39, i32* %i, align 4, !dbg !10229
  br label %for.cond40, !dbg !10230

for.cond40:                                       ; preds = %for.inc85, %for.body37
  %34 = load i32, i32* %i, align 4, !dbg !10231
  %35 = load i32, i32* %j, align 4, !dbg !10234
  %mul41 = mul nsw i32 %35, 16, !dbg !10235
  %add42 = add nsw i32 %mul41, 8, !dbg !10236
  %cmp43 = icmp slt i32 %34, %add42, !dbg !10237
  br i1 %cmp43, label %for.body45, label %for.end87, !dbg !10238

for.body45:                                       ; preds = %for.cond40
  %36 = load i32, i32* %i, align 4, !dbg !10239
  %add46 = add nsw i32 %36, 4, !dbg !10242
  %idxprom47 = sext i32 %add46 to i64, !dbg !10243
  %arrayidx48 = getelementptr inbounds [51 x i8], [51 x i8]* @scan8, i64 0, i64 %idxprom47, !dbg !10243
  %37 = load i8, i8* %arrayidx48, align 1, !dbg !10243
  %idxprom49 = zext i8 %37 to i64, !dbg !10244
  %38 = load i8*, i8** %nnzc.addr, align 8, !dbg !10244
  %arrayidx50 = getelementptr inbounds i8, i8* %38, i64 %idxprom49, !dbg !10244
  %39 = load i8, i8* %arrayidx50, align 1, !dbg !10244
  %tobool51 = icmp ne i8 %39, 0, !dbg !10244
  br i1 %tobool51, label %if.then52, label %if.else65, !dbg !10245

if.then52:                                        ; preds = %for.body45
  %40 = load i32, i32* %j, align 4, !dbg !10246
  %sub53 = sub nsw i32 %40, 1, !dbg !10247
  %idxprom54 = sext i32 %sub53 to i64, !dbg !10248
  %41 = load i8**, i8*** %dest.addr, align 8, !dbg !10248
  %arrayidx55 = getelementptr inbounds i8*, i8** %41, i64 %idxprom54, !dbg !10248
  %42 = load i8*, i8** %arrayidx55, align 8, !dbg !10248
  %43 = load i32, i32* %i, align 4, !dbg !10249
  %add56 = add nsw i32 %43, 4, !dbg !10250
  %idxprom57 = sext i32 %add56 to i64, !dbg !10251
  %44 = load i32*, i32** %block_offset.addr, align 8, !dbg !10251
  %arrayidx58 = getelementptr inbounds i32, i32* %44, i64 %idxprom57, !dbg !10251
  %45 = load i32, i32* %arrayidx58, align 4, !dbg !10251
  %idx.ext59 = sext i32 %45 to i64, !dbg !10252
  %add.ptr60 = getelementptr inbounds i8, i8* %42, i64 %idx.ext59, !dbg !10252
  %46 = load i16*, i16** %block.addr, align 8, !dbg !10253
  %47 = load i32, i32* %i, align 4, !dbg !10254
  %mul61 = mul nsw i32 %47, 16, !dbg !10255
  %conv62 = sext i32 %mul61 to i64, !dbg !10254
  %mul63 = mul i64 %conv62, 2, !dbg !10256
  %add.ptr64 = getelementptr inbounds i16, i16* %46, i64 %mul63, !dbg !10257
  %48 = load i32, i32* %stride.addr, align 4, !dbg !10258
  call void @ff_h264_idct_add_14_c(i8* %add.ptr60, i16* %add.ptr64, i32 %48), !dbg !10259
  br label %if.end84, !dbg !10259

if.else65:                                        ; preds = %for.body45
  %49 = load i32, i32* %i, align 4, !dbg !10260
  %mul66 = mul nsw i32 %49, 16, !dbg !10262
  %idxprom67 = sext i32 %mul66 to i64, !dbg !10263
  %50 = load i16*, i16** %block.addr, align 8, !dbg !10264
  %51 = bitcast i16* %50 to i32*, !dbg !10263
  %arrayidx68 = getelementptr inbounds i32, i32* %51, i64 %idxprom67, !dbg !10263
  %52 = load i32, i32* %arrayidx68, align 4, !dbg !10263
  %tobool69 = icmp ne i32 %52, 0, !dbg !10263
  br i1 %tobool69, label %if.then70, label %if.end83, !dbg !10265

if.then70:                                        ; preds = %if.else65
  %53 = load i32, i32* %j, align 4, !dbg !10266
  %sub71 = sub nsw i32 %53, 1, !dbg !10267
  %idxprom72 = sext i32 %sub71 to i64, !dbg !10268
  %54 = load i8**, i8*** %dest.addr, align 8, !dbg !10268
  %arrayidx73 = getelementptr inbounds i8*, i8** %54, i64 %idxprom72, !dbg !10268
  %55 = load i8*, i8** %arrayidx73, align 8, !dbg !10268
  %56 = load i32, i32* %i, align 4, !dbg !10269
  %add74 = add nsw i32 %56, 4, !dbg !10270
  %idxprom75 = sext i32 %add74 to i64, !dbg !10271
  %57 = load i32*, i32** %block_offset.addr, align 8, !dbg !10271
  %arrayidx76 = getelementptr inbounds i32, i32* %57, i64 %idxprom75, !dbg !10271
  %58 = load i32, i32* %arrayidx76, align 4, !dbg !10271
  %idx.ext77 = sext i32 %58 to i64, !dbg !10272
  %add.ptr78 = getelementptr inbounds i8, i8* %55, i64 %idx.ext77, !dbg !10272
  %59 = load i16*, i16** %block.addr, align 8, !dbg !10273
  %60 = load i32, i32* %i, align 4, !dbg !10274
  %mul79 = mul nsw i32 %60, 16, !dbg !10275
  %conv80 = sext i32 %mul79 to i64, !dbg !10274
  %mul81 = mul i64 %conv80, 2, !dbg !10276
  %add.ptr82 = getelementptr inbounds i16, i16* %59, i64 %mul81, !dbg !10277
  %61 = load i32, i32* %stride.addr, align 4, !dbg !10278
  call void @ff_h264_idct_dc_add_14_c(i8* %add.ptr78, i16* %add.ptr82, i32 %61), !dbg !10279
  br label %if.end83, !dbg !10279

if.end83:                                         ; preds = %if.then70, %if.else65
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then52
  br label %for.inc85, !dbg !10280

for.inc85:                                        ; preds = %if.end84
  %62 = load i32, i32* %i, align 4, !dbg !10281
  %inc86 = add nsw i32 %62, 1, !dbg !10281
  store i32 %inc86, i32* %i, align 4, !dbg !10281
  br label %for.cond40, !dbg !10283, !llvm.loop !10284

for.end87:                                        ; preds = %for.cond40
  br label %for.inc88, !dbg !10286

for.inc88:                                        ; preds = %for.end87
  %63 = load i32, i32* %j, align 4, !dbg !10287
  %inc89 = add nsw i32 %63, 1, !dbg !10287
  store i32 %inc89, i32* %j, align 4, !dbg !10287
  br label %for.cond34, !dbg !10289, !llvm.loop !10290

for.end90:                                        ; preds = %for.cond34
  ret void, !dbg !10292
}

; Function Attrs: nounwind uwtable
define void @ff_h264_luma_dc_dequant_idct_14_c(i16* %_output, i16* %_input, i32 %qmul) #0 !dbg !48 {
entry:
  %_output.addr = alloca i16*, align 8
  %_input.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca [16 x i32], align 16
  %input = alloca i32*, align 8
  %output = alloca i32*, align 8
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  %offset = alloca i32, align 4
  %z057 = alloca i32, align 4
  %z165 = alloca i32, align 4
  %z273 = alloca i32, align 4
  %z381 = alloca i32, align 4
  store i16* %_output, i16** %_output.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_output.addr, metadata !10293, metadata !67), !dbg !10294
  store i16* %_input, i16** %_input.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_input.addr, metadata !10295, metadata !67), !dbg !10296
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !10297, metadata !67), !dbg !10298
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10299, metadata !67), !dbg !10300
  call void @llvm.dbg.declare(metadata [16 x i32]* %temp, metadata !10301, metadata !67), !dbg !10302
  call void @llvm.dbg.declare(metadata i32** %input, metadata !10303, metadata !67), !dbg !10304
  %0 = load i16*, i16** %_input.addr, align 8, !dbg !10305
  %1 = bitcast i16* %0 to i32*, !dbg !10306
  store i32* %1, i32** %input, align 8, !dbg !10304
  call void @llvm.dbg.declare(metadata i32** %output, metadata !10307, metadata !67), !dbg !10308
  %2 = load i16*, i16** %_output.addr, align 8, !dbg !10309
  %3 = bitcast i16* %2 to i32*, !dbg !10310
  store i32* %3, i32** %output, align 8, !dbg !10308
  store i32 0, i32* %i, align 4, !dbg !10311
  br label %for.cond, !dbg !10313

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !10314
  %cmp = icmp slt i32 %4, 4, !dbg !10317
  br i1 %cmp, label %for.body, label %for.end, !dbg !10318

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !10319, metadata !67), !dbg !10321
  %5 = load i32, i32* %i, align 4, !dbg !10322
  %mul = mul nsw i32 4, %5, !dbg !10323
  %add = add nsw i32 %mul, 0, !dbg !10324
  %idxprom = sext i32 %add to i64, !dbg !10325
  %6 = load i32*, i32** %input, align 8, !dbg !10325
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !10325
  %7 = load i32, i32* %arrayidx, align 4, !dbg !10325
  %8 = load i32, i32* %i, align 4, !dbg !10326
  %mul1 = mul nsw i32 4, %8, !dbg !10327
  %add2 = add nsw i32 %mul1, 1, !dbg !10328
  %idxprom3 = sext i32 %add2 to i64, !dbg !10329
  %9 = load i32*, i32** %input, align 8, !dbg !10329
  %arrayidx4 = getelementptr inbounds i32, i32* %9, i64 %idxprom3, !dbg !10329
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !10329
  %add5 = add nsw i32 %7, %10, !dbg !10330
  store i32 %add5, i32* %z0, align 4, !dbg !10321
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !10331, metadata !67), !dbg !10332
  %11 = load i32, i32* %i, align 4, !dbg !10333
  %mul6 = mul nsw i32 4, %11, !dbg !10334
  %add7 = add nsw i32 %mul6, 0, !dbg !10335
  %idxprom8 = sext i32 %add7 to i64, !dbg !10336
  %12 = load i32*, i32** %input, align 8, !dbg !10336
  %arrayidx9 = getelementptr inbounds i32, i32* %12, i64 %idxprom8, !dbg !10336
  %13 = load i32, i32* %arrayidx9, align 4, !dbg !10336
  %14 = load i32, i32* %i, align 4, !dbg !10337
  %mul10 = mul nsw i32 4, %14, !dbg !10338
  %add11 = add nsw i32 %mul10, 1, !dbg !10339
  %idxprom12 = sext i32 %add11 to i64, !dbg !10340
  %15 = load i32*, i32** %input, align 8, !dbg !10340
  %arrayidx13 = getelementptr inbounds i32, i32* %15, i64 %idxprom12, !dbg !10340
  %16 = load i32, i32* %arrayidx13, align 4, !dbg !10340
  %sub = sub nsw i32 %13, %16, !dbg !10341
  store i32 %sub, i32* %z1, align 4, !dbg !10332
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !10342, metadata !67), !dbg !10343
  %17 = load i32, i32* %i, align 4, !dbg !10344
  %mul14 = mul nsw i32 4, %17, !dbg !10345
  %add15 = add nsw i32 %mul14, 2, !dbg !10346
  %idxprom16 = sext i32 %add15 to i64, !dbg !10347
  %18 = load i32*, i32** %input, align 8, !dbg !10347
  %arrayidx17 = getelementptr inbounds i32, i32* %18, i64 %idxprom16, !dbg !10347
  %19 = load i32, i32* %arrayidx17, align 4, !dbg !10347
  %20 = load i32, i32* %i, align 4, !dbg !10348
  %mul18 = mul nsw i32 4, %20, !dbg !10349
  %add19 = add nsw i32 %mul18, 3, !dbg !10350
  %idxprom20 = sext i32 %add19 to i64, !dbg !10351
  %21 = load i32*, i32** %input, align 8, !dbg !10351
  %arrayidx21 = getelementptr inbounds i32, i32* %21, i64 %idxprom20, !dbg !10351
  %22 = load i32, i32* %arrayidx21, align 4, !dbg !10351
  %sub22 = sub nsw i32 %19, %22, !dbg !10352
  store i32 %sub22, i32* %z2, align 4, !dbg !10343
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !10353, metadata !67), !dbg !10354
  %23 = load i32, i32* %i, align 4, !dbg !10355
  %mul23 = mul nsw i32 4, %23, !dbg !10356
  %add24 = add nsw i32 %mul23, 2, !dbg !10357
  %idxprom25 = sext i32 %add24 to i64, !dbg !10358
  %24 = load i32*, i32** %input, align 8, !dbg !10358
  %arrayidx26 = getelementptr inbounds i32, i32* %24, i64 %idxprom25, !dbg !10358
  %25 = load i32, i32* %arrayidx26, align 4, !dbg !10358
  %26 = load i32, i32* %i, align 4, !dbg !10359
  %mul27 = mul nsw i32 4, %26, !dbg !10360
  %add28 = add nsw i32 %mul27, 3, !dbg !10361
  %idxprom29 = sext i32 %add28 to i64, !dbg !10362
  %27 = load i32*, i32** %input, align 8, !dbg !10362
  %arrayidx30 = getelementptr inbounds i32, i32* %27, i64 %idxprom29, !dbg !10362
  %28 = load i32, i32* %arrayidx30, align 4, !dbg !10362
  %add31 = add nsw i32 %25, %28, !dbg !10363
  store i32 %add31, i32* %z3, align 4, !dbg !10354
  %29 = load i32, i32* %z0, align 4, !dbg !10364
  %30 = load i32, i32* %z3, align 4, !dbg !10365
  %add32 = add nsw i32 %29, %30, !dbg !10366
  %31 = load i32, i32* %i, align 4, !dbg !10367
  %mul33 = mul nsw i32 4, %31, !dbg !10368
  %add34 = add nsw i32 %mul33, 0, !dbg !10369
  %idxprom35 = sext i32 %add34 to i64, !dbg !10370
  %arrayidx36 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom35, !dbg !10370
  store i32 %add32, i32* %arrayidx36, align 4, !dbg !10371
  %32 = load i32, i32* %z0, align 4, !dbg !10372
  %33 = load i32, i32* %z3, align 4, !dbg !10373
  %sub37 = sub nsw i32 %32, %33, !dbg !10374
  %34 = load i32, i32* %i, align 4, !dbg !10375
  %mul38 = mul nsw i32 4, %34, !dbg !10376
  %add39 = add nsw i32 %mul38, 1, !dbg !10377
  %idxprom40 = sext i32 %add39 to i64, !dbg !10378
  %arrayidx41 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom40, !dbg !10378
  store i32 %sub37, i32* %arrayidx41, align 4, !dbg !10379
  %35 = load i32, i32* %z1, align 4, !dbg !10380
  %36 = load i32, i32* %z2, align 4, !dbg !10381
  %sub42 = sub nsw i32 %35, %36, !dbg !10382
  %37 = load i32, i32* %i, align 4, !dbg !10383
  %mul43 = mul nsw i32 4, %37, !dbg !10384
  %add44 = add nsw i32 %mul43, 2, !dbg !10385
  %idxprom45 = sext i32 %add44 to i64, !dbg !10386
  %arrayidx46 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom45, !dbg !10386
  store i32 %sub42, i32* %arrayidx46, align 4, !dbg !10387
  %38 = load i32, i32* %z1, align 4, !dbg !10388
  %39 = load i32, i32* %z2, align 4, !dbg !10389
  %add47 = add nsw i32 %38, %39, !dbg !10390
  %40 = load i32, i32* %i, align 4, !dbg !10391
  %mul48 = mul nsw i32 4, %40, !dbg !10392
  %add49 = add nsw i32 %mul48, 3, !dbg !10393
  %idxprom50 = sext i32 %add49 to i64, !dbg !10394
  %arrayidx51 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom50, !dbg !10394
  store i32 %add47, i32* %arrayidx51, align 4, !dbg !10395
  br label %for.inc, !dbg !10396

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %i, align 4, !dbg !10397
  %inc = add nsw i32 %41, 1, !dbg !10397
  store i32 %inc, i32* %i, align 4, !dbg !10397
  br label %for.cond, !dbg !10399, !llvm.loop !10400

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10402
  br label %for.cond52, !dbg !10404

for.cond52:                                       ; preds = %for.inc116, %for.end
  %42 = load i32, i32* %i, align 4, !dbg !10405
  %cmp53 = icmp slt i32 %42, 4, !dbg !10408
  br i1 %cmp53, label %for.body54, label %for.end118, !dbg !10409

for.body54:                                       ; preds = %for.cond52
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !10410, metadata !67), !dbg !10412
  %43 = load i32, i32* %i, align 4, !dbg !10413
  %idxprom55 = sext i32 %43 to i64, !dbg !10414
  %arrayidx56 = getelementptr inbounds [4 x i8], [4 x i8]* @ff_h264_luma_dc_dequant_idct_14_c.x_offset, i64 0, i64 %idxprom55, !dbg !10414
  %44 = load i8, i8* %arrayidx56, align 1, !dbg !10414
  %conv = zext i8 %44 to i32, !dbg !10414
  store i32 %conv, i32* %offset, align 4, !dbg !10412
  call void @llvm.dbg.declare(metadata i32* %z057, metadata !10415, metadata !67), !dbg !10416
  %45 = load i32, i32* %i, align 4, !dbg !10417
  %add58 = add nsw i32 0, %45, !dbg !10418
  %idxprom59 = sext i32 %add58 to i64, !dbg !10419
  %arrayidx60 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom59, !dbg !10419
  %46 = load i32, i32* %arrayidx60, align 4, !dbg !10419
  %47 = load i32, i32* %i, align 4, !dbg !10420
  %add61 = add nsw i32 8, %47, !dbg !10421
  %idxprom62 = sext i32 %add61 to i64, !dbg !10422
  %arrayidx63 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom62, !dbg !10422
  %48 = load i32, i32* %arrayidx63, align 4, !dbg !10422
  %add64 = add nsw i32 %46, %48, !dbg !10423
  store i32 %add64, i32* %z057, align 4, !dbg !10416
  call void @llvm.dbg.declare(metadata i32* %z165, metadata !10424, metadata !67), !dbg !10425
  %49 = load i32, i32* %i, align 4, !dbg !10426
  %add66 = add nsw i32 0, %49, !dbg !10427
  %idxprom67 = sext i32 %add66 to i64, !dbg !10428
  %arrayidx68 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom67, !dbg !10428
  %50 = load i32, i32* %arrayidx68, align 4, !dbg !10428
  %51 = load i32, i32* %i, align 4, !dbg !10429
  %add69 = add nsw i32 8, %51, !dbg !10430
  %idxprom70 = sext i32 %add69 to i64, !dbg !10431
  %arrayidx71 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom70, !dbg !10431
  %52 = load i32, i32* %arrayidx71, align 4, !dbg !10431
  %sub72 = sub nsw i32 %50, %52, !dbg !10432
  store i32 %sub72, i32* %z165, align 4, !dbg !10425
  call void @llvm.dbg.declare(metadata i32* %z273, metadata !10433, metadata !67), !dbg !10434
  %53 = load i32, i32* %i, align 4, !dbg !10435
  %add74 = add nsw i32 4, %53, !dbg !10436
  %idxprom75 = sext i32 %add74 to i64, !dbg !10437
  %arrayidx76 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom75, !dbg !10437
  %54 = load i32, i32* %arrayidx76, align 4, !dbg !10437
  %55 = load i32, i32* %i, align 4, !dbg !10438
  %add77 = add nsw i32 12, %55, !dbg !10439
  %idxprom78 = sext i32 %add77 to i64, !dbg !10440
  %arrayidx79 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom78, !dbg !10440
  %56 = load i32, i32* %arrayidx79, align 4, !dbg !10440
  %sub80 = sub nsw i32 %54, %56, !dbg !10441
  store i32 %sub80, i32* %z273, align 4, !dbg !10434
  call void @llvm.dbg.declare(metadata i32* %z381, metadata !10442, metadata !67), !dbg !10443
  %57 = load i32, i32* %i, align 4, !dbg !10444
  %add82 = add nsw i32 4, %57, !dbg !10445
  %idxprom83 = sext i32 %add82 to i64, !dbg !10446
  %arrayidx84 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom83, !dbg !10446
  %58 = load i32, i32* %arrayidx84, align 4, !dbg !10446
  %59 = load i32, i32* %i, align 4, !dbg !10447
  %add85 = add nsw i32 12, %59, !dbg !10448
  %idxprom86 = sext i32 %add85 to i64, !dbg !10449
  %arrayidx87 = getelementptr inbounds [16 x i32], [16 x i32]* %temp, i64 0, i64 %idxprom86, !dbg !10449
  %60 = load i32, i32* %arrayidx87, align 4, !dbg !10449
  %add88 = add nsw i32 %58, %60, !dbg !10450
  store i32 %add88, i32* %z381, align 4, !dbg !10443
  %61 = load i32, i32* %z057, align 4, !dbg !10451
  %62 = load i32, i32* %z381, align 4, !dbg !10452
  %add89 = add i32 %61, %62, !dbg !10453
  %63 = load i32, i32* %qmul.addr, align 4, !dbg !10454
  %mul90 = mul i32 %add89, %63, !dbg !10455
  %add91 = add i32 %mul90, 128, !dbg !10456
  %shr = ashr i32 %add91, 8, !dbg !10457
  %64 = load i32, i32* %offset, align 4, !dbg !10458
  %add92 = add nsw i32 0, %64, !dbg !10459
  %idxprom93 = sext i32 %add92 to i64, !dbg !10460
  %65 = load i32*, i32** %output, align 8, !dbg !10460
  %arrayidx94 = getelementptr inbounds i32, i32* %65, i64 %idxprom93, !dbg !10460
  store i32 %shr, i32* %arrayidx94, align 4, !dbg !10461
  %66 = load i32, i32* %z165, align 4, !dbg !10462
  %67 = load i32, i32* %z273, align 4, !dbg !10463
  %add95 = add i32 %66, %67, !dbg !10464
  %68 = load i32, i32* %qmul.addr, align 4, !dbg !10465
  %mul96 = mul i32 %add95, %68, !dbg !10466
  %add97 = add i32 %mul96, 128, !dbg !10467
  %shr98 = ashr i32 %add97, 8, !dbg !10468
  %69 = load i32, i32* %offset, align 4, !dbg !10469
  %add99 = add nsw i32 16, %69, !dbg !10470
  %idxprom100 = sext i32 %add99 to i64, !dbg !10471
  %70 = load i32*, i32** %output, align 8, !dbg !10471
  %arrayidx101 = getelementptr inbounds i32, i32* %70, i64 %idxprom100, !dbg !10471
  store i32 %shr98, i32* %arrayidx101, align 4, !dbg !10472
  %71 = load i32, i32* %z165, align 4, !dbg !10473
  %72 = load i32, i32* %z273, align 4, !dbg !10474
  %sub102 = sub i32 %71, %72, !dbg !10475
  %73 = load i32, i32* %qmul.addr, align 4, !dbg !10476
  %mul103 = mul i32 %sub102, %73, !dbg !10477
  %add104 = add i32 %mul103, 128, !dbg !10478
  %shr105 = ashr i32 %add104, 8, !dbg !10479
  %74 = load i32, i32* %offset, align 4, !dbg !10480
  %add106 = add nsw i32 64, %74, !dbg !10481
  %idxprom107 = sext i32 %add106 to i64, !dbg !10482
  %75 = load i32*, i32** %output, align 8, !dbg !10482
  %arrayidx108 = getelementptr inbounds i32, i32* %75, i64 %idxprom107, !dbg !10482
  store i32 %shr105, i32* %arrayidx108, align 4, !dbg !10483
  %76 = load i32, i32* %z057, align 4, !dbg !10484
  %77 = load i32, i32* %z381, align 4, !dbg !10485
  %sub109 = sub i32 %76, %77, !dbg !10486
  %78 = load i32, i32* %qmul.addr, align 4, !dbg !10487
  %mul110 = mul i32 %sub109, %78, !dbg !10488
  %add111 = add i32 %mul110, 128, !dbg !10489
  %shr112 = ashr i32 %add111, 8, !dbg !10490
  %79 = load i32, i32* %offset, align 4, !dbg !10491
  %add113 = add nsw i32 80, %79, !dbg !10492
  %idxprom114 = sext i32 %add113 to i64, !dbg !10493
  %80 = load i32*, i32** %output, align 8, !dbg !10493
  %arrayidx115 = getelementptr inbounds i32, i32* %80, i64 %idxprom114, !dbg !10493
  store i32 %shr112, i32* %arrayidx115, align 4, !dbg !10494
  br label %for.inc116, !dbg !10495

for.inc116:                                       ; preds = %for.body54
  %81 = load i32, i32* %i, align 4, !dbg !10496
  %inc117 = add nsw i32 %81, 1, !dbg !10496
  store i32 %inc117, i32* %i, align 4, !dbg !10496
  br label %for.cond52, !dbg !10498, !llvm.loop !10499

for.end118:                                       ; preds = %for.cond52
  ret void, !dbg !10501
}

; Function Attrs: nounwind uwtable
define void @ff_h264_chroma422_dc_dequant_idct_14_c(i16* %_block, i32 %qmul) #0 !dbg !50 {
entry:
  %_block.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %stride = alloca i32, align 4
  %xStride = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca [8 x i32], align 16
  %block = alloca i32*, align 8
  %offset = alloca i32, align 4
  %z0 = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %z3 = alloca i32, align 4
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !10502, metadata !67), !dbg !10503
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !10504, metadata !67), !dbg !10505
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !10506, metadata !67), !dbg !10507
  store i32 32, i32* %stride, align 4, !dbg !10507
  call void @llvm.dbg.declare(metadata i32* %xStride, metadata !10508, metadata !67), !dbg !10509
  store i32 16, i32* %xStride, align 4, !dbg !10509
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10510, metadata !67), !dbg !10511
  call void @llvm.dbg.declare(metadata [8 x i32]* %temp, metadata !10512, metadata !67), !dbg !10513
  call void @llvm.dbg.declare(metadata i32** %block, metadata !10514, metadata !67), !dbg !10515
  %0 = load i16*, i16** %_block.addr, align 8, !dbg !10516
  %1 = bitcast i16* %0 to i32*, !dbg !10517
  store i32* %1, i32** %block, align 8, !dbg !10515
  store i32 0, i32* %i, align 4, !dbg !10518
  br label %for.cond, !dbg !10520

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10521
  %cmp = icmp slt i32 %2, 4, !dbg !10524
  br i1 %cmp, label %for.body, label %for.end, !dbg !10525

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !10526
  %mul = mul nsw i32 32, %3, !dbg !10528
  %add = add nsw i32 %mul, 0, !dbg !10529
  %idxprom = sext i32 %add to i64, !dbg !10530
  %4 = load i32*, i32** %block, align 8, !dbg !10530
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !10530
  %5 = load i32, i32* %arrayidx, align 4, !dbg !10530
  %6 = load i32, i32* %i, align 4, !dbg !10531
  %mul1 = mul nsw i32 32, %6, !dbg !10532
  %add2 = add nsw i32 %mul1, 16, !dbg !10533
  %idxprom3 = sext i32 %add2 to i64, !dbg !10534
  %7 = load i32*, i32** %block, align 8, !dbg !10534
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 %idxprom3, !dbg !10534
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !10534
  %add5 = add nsw i32 %5, %8, !dbg !10535
  %9 = load i32, i32* %i, align 4, !dbg !10536
  %mul6 = mul nsw i32 2, %9, !dbg !10537
  %add7 = add nsw i32 %mul6, 0, !dbg !10538
  %idxprom8 = sext i32 %add7 to i64, !dbg !10539
  %arrayidx9 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom8, !dbg !10539
  store i32 %add5, i32* %arrayidx9, align 4, !dbg !10540
  %10 = load i32, i32* %i, align 4, !dbg !10541
  %mul10 = mul nsw i32 32, %10, !dbg !10542
  %add11 = add nsw i32 %mul10, 0, !dbg !10543
  %idxprom12 = sext i32 %add11 to i64, !dbg !10544
  %11 = load i32*, i32** %block, align 8, !dbg !10544
  %arrayidx13 = getelementptr inbounds i32, i32* %11, i64 %idxprom12, !dbg !10544
  %12 = load i32, i32* %arrayidx13, align 4, !dbg !10544
  %13 = load i32, i32* %i, align 4, !dbg !10545
  %mul14 = mul nsw i32 32, %13, !dbg !10546
  %add15 = add nsw i32 %mul14, 16, !dbg !10547
  %idxprom16 = sext i32 %add15 to i64, !dbg !10548
  %14 = load i32*, i32** %block, align 8, !dbg !10548
  %arrayidx17 = getelementptr inbounds i32, i32* %14, i64 %idxprom16, !dbg !10548
  %15 = load i32, i32* %arrayidx17, align 4, !dbg !10548
  %sub = sub nsw i32 %12, %15, !dbg !10549
  %16 = load i32, i32* %i, align 4, !dbg !10550
  %mul18 = mul nsw i32 2, %16, !dbg !10551
  %add19 = add nsw i32 %mul18, 1, !dbg !10552
  %idxprom20 = sext i32 %add19 to i64, !dbg !10553
  %arrayidx21 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom20, !dbg !10553
  store i32 %sub, i32* %arrayidx21, align 4, !dbg !10554
  br label %for.inc, !dbg !10555

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !10556
  %inc = add nsw i32 %17, 1, !dbg !10556
  store i32 %inc, i32* %i, align 4, !dbg !10556
  br label %for.cond, !dbg !10558, !llvm.loop !10559

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10561
  br label %for.cond22, !dbg !10563

for.cond22:                                       ; preds = %for.inc82, %for.end
  %18 = load i32, i32* %i, align 4, !dbg !10564
  %cmp23 = icmp slt i32 %18, 2, !dbg !10567
  br i1 %cmp23, label %for.body24, label %for.end84, !dbg !10568

for.body24:                                       ; preds = %for.cond22
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !10569, metadata !67), !dbg !10571
  %19 = load i32, i32* %i, align 4, !dbg !10572
  %idxprom25 = sext i32 %19 to i64, !dbg !10573
  %arrayidx26 = getelementptr inbounds [2 x i8], [2 x i8]* @ff_h264_chroma422_dc_dequant_idct_14_c.x_offset, i64 0, i64 %idxprom25, !dbg !10573
  %20 = load i8, i8* %arrayidx26, align 1, !dbg !10573
  %conv = zext i8 %20 to i32, !dbg !10573
  store i32 %conv, i32* %offset, align 4, !dbg !10571
  call void @llvm.dbg.declare(metadata i32* %z0, metadata !10574, metadata !67), !dbg !10575
  %21 = load i32, i32* %i, align 4, !dbg !10576
  %add27 = add nsw i32 0, %21, !dbg !10577
  %idxprom28 = sext i32 %add27 to i64, !dbg !10578
  %arrayidx29 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom28, !dbg !10578
  %22 = load i32, i32* %arrayidx29, align 4, !dbg !10578
  %23 = load i32, i32* %i, align 4, !dbg !10579
  %add30 = add nsw i32 4, %23, !dbg !10580
  %idxprom31 = sext i32 %add30 to i64, !dbg !10581
  %arrayidx32 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom31, !dbg !10581
  %24 = load i32, i32* %arrayidx32, align 4, !dbg !10581
  %add33 = add nsw i32 %22, %24, !dbg !10582
  store i32 %add33, i32* %z0, align 4, !dbg !10575
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !10583, metadata !67), !dbg !10584
  %25 = load i32, i32* %i, align 4, !dbg !10585
  %add34 = add nsw i32 0, %25, !dbg !10586
  %idxprom35 = sext i32 %add34 to i64, !dbg !10587
  %arrayidx36 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom35, !dbg !10587
  %26 = load i32, i32* %arrayidx36, align 4, !dbg !10587
  %27 = load i32, i32* %i, align 4, !dbg !10588
  %add37 = add nsw i32 4, %27, !dbg !10589
  %idxprom38 = sext i32 %add37 to i64, !dbg !10590
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom38, !dbg !10590
  %28 = load i32, i32* %arrayidx39, align 4, !dbg !10590
  %sub40 = sub nsw i32 %26, %28, !dbg !10591
  store i32 %sub40, i32* %z1, align 4, !dbg !10584
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !10592, metadata !67), !dbg !10593
  %29 = load i32, i32* %i, align 4, !dbg !10594
  %add41 = add nsw i32 2, %29, !dbg !10595
  %idxprom42 = sext i32 %add41 to i64, !dbg !10596
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom42, !dbg !10596
  %30 = load i32, i32* %arrayidx43, align 4, !dbg !10596
  %31 = load i32, i32* %i, align 4, !dbg !10597
  %add44 = add nsw i32 6, %31, !dbg !10598
  %idxprom45 = sext i32 %add44 to i64, !dbg !10599
  %arrayidx46 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom45, !dbg !10599
  %32 = load i32, i32* %arrayidx46, align 4, !dbg !10599
  %sub47 = sub nsw i32 %30, %32, !dbg !10600
  store i32 %sub47, i32* %z2, align 4, !dbg !10593
  call void @llvm.dbg.declare(metadata i32* %z3, metadata !10601, metadata !67), !dbg !10602
  %33 = load i32, i32* %i, align 4, !dbg !10603
  %add48 = add nsw i32 2, %33, !dbg !10604
  %idxprom49 = sext i32 %add48 to i64, !dbg !10605
  %arrayidx50 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom49, !dbg !10605
  %34 = load i32, i32* %arrayidx50, align 4, !dbg !10605
  %35 = load i32, i32* %i, align 4, !dbg !10606
  %add51 = add nsw i32 6, %35, !dbg !10607
  %idxprom52 = sext i32 %add51 to i64, !dbg !10608
  %arrayidx53 = getelementptr inbounds [8 x i32], [8 x i32]* %temp, i64 0, i64 %idxprom52, !dbg !10608
  %36 = load i32, i32* %arrayidx53, align 4, !dbg !10608
  %add54 = add nsw i32 %34, %36, !dbg !10609
  store i32 %add54, i32* %z3, align 4, !dbg !10602
  %37 = load i32, i32* %z0, align 4, !dbg !10610
  %38 = load i32, i32* %z3, align 4, !dbg !10611
  %add55 = add i32 %37, %38, !dbg !10612
  %39 = load i32, i32* %qmul.addr, align 4, !dbg !10613
  %mul56 = mul i32 %add55, %39, !dbg !10614
  %add57 = add i32 %mul56, 128, !dbg !10615
  %shr = ashr i32 %add57, 8, !dbg !10616
  %40 = load i32, i32* %offset, align 4, !dbg !10617
  %add58 = add nsw i32 0, %40, !dbg !10618
  %idxprom59 = sext i32 %add58 to i64, !dbg !10619
  %41 = load i32*, i32** %block, align 8, !dbg !10619
  %arrayidx60 = getelementptr inbounds i32, i32* %41, i64 %idxprom59, !dbg !10619
  store i32 %shr, i32* %arrayidx60, align 4, !dbg !10620
  %42 = load i32, i32* %z1, align 4, !dbg !10621
  %43 = load i32, i32* %z2, align 4, !dbg !10622
  %add61 = add i32 %42, %43, !dbg !10623
  %44 = load i32, i32* %qmul.addr, align 4, !dbg !10624
  %mul62 = mul i32 %add61, %44, !dbg !10625
  %add63 = add i32 %mul62, 128, !dbg !10626
  %shr64 = ashr i32 %add63, 8, !dbg !10627
  %45 = load i32, i32* %offset, align 4, !dbg !10628
  %add65 = add nsw i32 32, %45, !dbg !10629
  %idxprom66 = sext i32 %add65 to i64, !dbg !10630
  %46 = load i32*, i32** %block, align 8, !dbg !10630
  %arrayidx67 = getelementptr inbounds i32, i32* %46, i64 %idxprom66, !dbg !10630
  store i32 %shr64, i32* %arrayidx67, align 4, !dbg !10631
  %47 = load i32, i32* %z1, align 4, !dbg !10632
  %48 = load i32, i32* %z2, align 4, !dbg !10633
  %sub68 = sub i32 %47, %48, !dbg !10634
  %49 = load i32, i32* %qmul.addr, align 4, !dbg !10635
  %mul69 = mul i32 %sub68, %49, !dbg !10636
  %add70 = add i32 %mul69, 128, !dbg !10637
  %shr71 = ashr i32 %add70, 8, !dbg !10638
  %50 = load i32, i32* %offset, align 4, !dbg !10639
  %add72 = add nsw i32 64, %50, !dbg !10640
  %idxprom73 = sext i32 %add72 to i64, !dbg !10641
  %51 = load i32*, i32** %block, align 8, !dbg !10641
  %arrayidx74 = getelementptr inbounds i32, i32* %51, i64 %idxprom73, !dbg !10641
  store i32 %shr71, i32* %arrayidx74, align 4, !dbg !10642
  %52 = load i32, i32* %z0, align 4, !dbg !10643
  %53 = load i32, i32* %z3, align 4, !dbg !10644
  %sub75 = sub i32 %52, %53, !dbg !10645
  %54 = load i32, i32* %qmul.addr, align 4, !dbg !10646
  %mul76 = mul i32 %sub75, %54, !dbg !10647
  %add77 = add i32 %mul76, 128, !dbg !10648
  %shr78 = ashr i32 %add77, 8, !dbg !10649
  %55 = load i32, i32* %offset, align 4, !dbg !10650
  %add79 = add nsw i32 96, %55, !dbg !10651
  %idxprom80 = sext i32 %add79 to i64, !dbg !10652
  %56 = load i32*, i32** %block, align 8, !dbg !10652
  %arrayidx81 = getelementptr inbounds i32, i32* %56, i64 %idxprom80, !dbg !10652
  store i32 %shr78, i32* %arrayidx81, align 4, !dbg !10653
  br label %for.inc82, !dbg !10654

for.inc82:                                        ; preds = %for.body24
  %57 = load i32, i32* %i, align 4, !dbg !10655
  %inc83 = add nsw i32 %57, 1, !dbg !10655
  store i32 %inc83, i32* %i, align 4, !dbg !10655
  br label %for.cond22, !dbg !10657, !llvm.loop !10658

for.end84:                                        ; preds = %for.cond22
  ret void, !dbg !10660
}

; Function Attrs: nounwind uwtable
define void @ff_h264_chroma_dc_dequant_idct_14_c(i16* %_block, i32 %qmul) #0 !dbg !10661 {
entry:
  %_block.addr = alloca i16*, align 8
  %qmul.addr = alloca i32, align 4
  %stride = alloca i32, align 4
  %xStride = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %block = alloca i32*, align 8
  store i16* %_block, i16** %_block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_block.addr, metadata !10662, metadata !67), !dbg !10663
  store i32 %qmul, i32* %qmul.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qmul.addr, metadata !10664, metadata !67), !dbg !10665
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !10666, metadata !67), !dbg !10667
  store i32 32, i32* %stride, align 4, !dbg !10667
  call void @llvm.dbg.declare(metadata i32* %xStride, metadata !10668, metadata !67), !dbg !10669
  store i32 16, i32* %xStride, align 4, !dbg !10669
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10670, metadata !67), !dbg !10671
  call void @llvm.dbg.declare(metadata i32* %b, metadata !10672, metadata !67), !dbg !10673
  call void @llvm.dbg.declare(metadata i32* %c, metadata !10674, metadata !67), !dbg !10675
  call void @llvm.dbg.declare(metadata i32* %d, metadata !10676, metadata !67), !dbg !10677
  call void @llvm.dbg.declare(metadata i32* %e, metadata !10678, metadata !67), !dbg !10679
  call void @llvm.dbg.declare(metadata i32** %block, metadata !10680, metadata !67), !dbg !10681
  %0 = load i16*, i16** %_block.addr, align 8, !dbg !10682
  %1 = bitcast i16* %0 to i32*, !dbg !10683
  store i32* %1, i32** %block, align 8, !dbg !10681
  %2 = load i32*, i32** %block, align 8, !dbg !10684
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 0, !dbg !10684
  %3 = load i32, i32* %arrayidx, align 4, !dbg !10684
  store i32 %3, i32* %a, align 4, !dbg !10685
  %4 = load i32*, i32** %block, align 8, !dbg !10686
  %arrayidx1 = getelementptr inbounds i32, i32* %4, i64 16, !dbg !10686
  %5 = load i32, i32* %arrayidx1, align 4, !dbg !10686
  store i32 %5, i32* %b, align 4, !dbg !10687
  %6 = load i32*, i32** %block, align 8, !dbg !10688
  %arrayidx2 = getelementptr inbounds i32, i32* %6, i64 32, !dbg !10688
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !10688
  store i32 %7, i32* %c, align 4, !dbg !10689
  %8 = load i32*, i32** %block, align 8, !dbg !10690
  %arrayidx3 = getelementptr inbounds i32, i32* %8, i64 48, !dbg !10690
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !10690
  store i32 %9, i32* %d, align 4, !dbg !10691
  %10 = load i32, i32* %a, align 4, !dbg !10692
  %11 = load i32, i32* %b, align 4, !dbg !10693
  %sub = sub i32 %10, %11, !dbg !10694
  store i32 %sub, i32* %e, align 4, !dbg !10695
  %12 = load i32, i32* %a, align 4, !dbg !10696
  %13 = load i32, i32* %b, align 4, !dbg !10697
  %add = add i32 %12, %13, !dbg !10698
  store i32 %add, i32* %a, align 4, !dbg !10699
  %14 = load i32, i32* %c, align 4, !dbg !10700
  %15 = load i32, i32* %d, align 4, !dbg !10701
  %sub4 = sub i32 %14, %15, !dbg !10702
  store i32 %sub4, i32* %b, align 4, !dbg !10703
  %16 = load i32, i32* %c, align 4, !dbg !10704
  %17 = load i32, i32* %d, align 4, !dbg !10705
  %add5 = add i32 %16, %17, !dbg !10706
  store i32 %add5, i32* %c, align 4, !dbg !10707
  %18 = load i32, i32* %a, align 4, !dbg !10708
  %19 = load i32, i32* %c, align 4, !dbg !10709
  %add6 = add i32 %18, %19, !dbg !10710
  %20 = load i32, i32* %qmul.addr, align 4, !dbg !10711
  %mul = mul i32 %add6, %20, !dbg !10712
  %shr = ashr i32 %mul, 7, !dbg !10713
  %21 = load i32*, i32** %block, align 8, !dbg !10714
  %arrayidx7 = getelementptr inbounds i32, i32* %21, i64 0, !dbg !10714
  store i32 %shr, i32* %arrayidx7, align 4, !dbg !10715
  %22 = load i32, i32* %e, align 4, !dbg !10716
  %23 = load i32, i32* %b, align 4, !dbg !10717
  %add8 = add i32 %22, %23, !dbg !10718
  %24 = load i32, i32* %qmul.addr, align 4, !dbg !10719
  %mul9 = mul i32 %add8, %24, !dbg !10720
  %shr10 = ashr i32 %mul9, 7, !dbg !10721
  %25 = load i32*, i32** %block, align 8, !dbg !10722
  %arrayidx11 = getelementptr inbounds i32, i32* %25, i64 16, !dbg !10722
  store i32 %shr10, i32* %arrayidx11, align 4, !dbg !10723
  %26 = load i32, i32* %a, align 4, !dbg !10724
  %27 = load i32, i32* %c, align 4, !dbg !10725
  %sub12 = sub i32 %26, %27, !dbg !10726
  %28 = load i32, i32* %qmul.addr, align 4, !dbg !10727
  %mul13 = mul i32 %sub12, %28, !dbg !10728
  %shr14 = ashr i32 %mul13, 7, !dbg !10729
  %29 = load i32*, i32** %block, align 8, !dbg !10730
  %arrayidx15 = getelementptr inbounds i32, i32* %29, i64 32, !dbg !10730
  store i32 %shr14, i32* %arrayidx15, align 4, !dbg !10731
  %30 = load i32, i32* %e, align 4, !dbg !10732
  %31 = load i32, i32* %b, align 4, !dbg !10733
  %sub16 = sub i32 %30, %31, !dbg !10734
  %32 = load i32, i32* %qmul.addr, align 4, !dbg !10735
  %mul17 = mul i32 %sub16, %32, !dbg !10736
  %shr18 = ashr i32 %mul17, 7, !dbg !10737
  %33 = load i32*, i32** %block, align 8, !dbg !10738
  %arrayidx19 = getelementptr inbounds i32, i32* %33, i64 48, !dbg !10738
  store i32 %shr18, i32* %arrayidx19, align 4, !dbg !10739
  ret void, !dbg !10740
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!56, !57}
!llvm.ident = !{!58}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3, globals: !18)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--h264idct.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{}
!3 = !{!4, !8, !11, !12, !13, !16}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !6, line: 48, baseType: !7)
!6 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, align: 64)
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !6, line: 37, baseType: !10)
!10 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!11 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!12 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64, align: 64)
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !6, line: 49, baseType: !15)
!15 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !6, line: 38, baseType: !12)
!18 = !{!19, !28, !35, !37, !39, !41, !43, !45, !47, !49, !51}
!19 = distinct !DIGlobalVariable(name: "x_offset", scope: !20, file: !21, line: 246, type: !24, isLocal: true, isDefinition: true, variable: [4 x i8]* @ff_h264_luma_dc_dequant_idct_8_c.x_offset)
!20 = distinct !DISubprogram(name: "ff_h264_luma_dc_dequant_idct_8_c", scope: !21, file: !21, line: 242, type: !22, isLocal: false, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!21 = !DIFile(filename: "libavcodec/h264idct_template.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!22 = !DISubroutineType(types: !23)
!23 = !{null, !8, !8, !12}
!24 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 32, align: 8, elements: !26)
!25 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!26 = !{!27}
!27 = !DISubrange(count: 4)
!28 = distinct !DIGlobalVariable(name: "x_offset", scope: !29, file: !21, line: 282, type: !32, isLocal: true, isDefinition: true, variable: [2 x i8]* @ff_h264_chroma422_dc_dequant_idct_8_c.x_offset)
!29 = distinct !DISubprogram(name: "ff_h264_chroma422_dc_dequant_idct_8_c", scope: !21, file: !21, line: 277, type: !30, isLocal: false, isDefinition: true, scopeLine: 277, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!30 = !DISubroutineType(types: !31)
!31 = !{null, !8, !12}
!32 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 16, align: 8, elements: !33)
!33 = !{!34}
!34 = !DISubrange(count: 2)
!35 = distinct !DIGlobalVariable(name: "x_offset", scope: !36, file: !21, line: 246, type: !24, isLocal: true, isDefinition: true, variable: [4 x i8]* @ff_h264_luma_dc_dequant_idct_9_c.x_offset)
!36 = distinct !DISubprogram(name: "ff_h264_luma_dc_dequant_idct_9_c", scope: !21, file: !21, line: 242, type: !22, isLocal: false, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!37 = distinct !DIGlobalVariable(name: "x_offset", scope: !38, file: !21, line: 282, type: !32, isLocal: true, isDefinition: true, variable: [2 x i8]* @ff_h264_chroma422_dc_dequant_idct_9_c.x_offset)
!38 = distinct !DISubprogram(name: "ff_h264_chroma422_dc_dequant_idct_9_c", scope: !21, file: !21, line: 277, type: !30, isLocal: false, isDefinition: true, scopeLine: 277, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!39 = distinct !DIGlobalVariable(name: "x_offset", scope: !40, file: !21, line: 246, type: !24, isLocal: true, isDefinition: true, variable: [4 x i8]* @ff_h264_luma_dc_dequant_idct_10_c.x_offset)
!40 = distinct !DISubprogram(name: "ff_h264_luma_dc_dequant_idct_10_c", scope: !21, file: !21, line: 242, type: !22, isLocal: false, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!41 = distinct !DIGlobalVariable(name: "x_offset", scope: !42, file: !21, line: 282, type: !32, isLocal: true, isDefinition: true, variable: [2 x i8]* @ff_h264_chroma422_dc_dequant_idct_10_c.x_offset)
!42 = distinct !DISubprogram(name: "ff_h264_chroma422_dc_dequant_idct_10_c", scope: !21, file: !21, line: 277, type: !30, isLocal: false, isDefinition: true, scopeLine: 277, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!43 = distinct !DIGlobalVariable(name: "x_offset", scope: !44, file: !21, line: 246, type: !24, isLocal: true, isDefinition: true, variable: [4 x i8]* @ff_h264_luma_dc_dequant_idct_12_c.x_offset)
!44 = distinct !DISubprogram(name: "ff_h264_luma_dc_dequant_idct_12_c", scope: !21, file: !21, line: 242, type: !22, isLocal: false, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!45 = distinct !DIGlobalVariable(name: "x_offset", scope: !46, file: !21, line: 282, type: !32, isLocal: true, isDefinition: true, variable: [2 x i8]* @ff_h264_chroma422_dc_dequant_idct_12_c.x_offset)
!46 = distinct !DISubprogram(name: "ff_h264_chroma422_dc_dequant_idct_12_c", scope: !21, file: !21, line: 277, type: !30, isLocal: false, isDefinition: true, scopeLine: 277, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!47 = distinct !DIGlobalVariable(name: "x_offset", scope: !48, file: !21, line: 246, type: !24, isLocal: true, isDefinition: true, variable: [4 x i8]* @ff_h264_luma_dc_dequant_idct_14_c.x_offset)
!48 = distinct !DISubprogram(name: "ff_h264_luma_dc_dequant_idct_14_c", scope: !21, file: !21, line: 242, type: !22, isLocal: false, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!49 = distinct !DIGlobalVariable(name: "x_offset", scope: !50, file: !21, line: 282, type: !32, isLocal: true, isDefinition: true, variable: [2 x i8]* @ff_h264_chroma422_dc_dequant_idct_14_c.x_offset)
!50 = distinct !DISubprogram(name: "ff_h264_chroma422_dc_dequant_idct_14_c", scope: !21, file: !21, line: 277, type: !30, isLocal: false, isDefinition: true, scopeLine: 277, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!51 = distinct !DIGlobalVariable(name: "scan8", scope: !0, file: !52, line: 644, type: !53, isLocal: true, isDefinition: true, variable: [51 x i8]* @scan8)
!52 = !DIFile(filename: "libavcodec/h264dec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!53 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 408, align: 8, elements: !54)
!54 = !{!55}
!55 = !DISubrange(count: 51)
!56 = !{i32 2, !"Dwarf Version", i32 4}
!57 = !{i32 2, !"Debug Info Version", i32 3}
!58 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!59 = distinct !DISubprogram(name: "ff_h264_idct_add_8_c", scope: !21, file: !21, line: 33, type: !60, isLocal: false, isDefinition: true, scopeLine: 34, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!60 = !DISubroutineType(types: !61)
!61 = !{null, !4, !8, !12}
!62 = !DILocalVariable(name: "a", arg: 1, scope: !63, file: !64, line: 159, type: !12)
!63 = distinct !DISubprogram(name: "av_clip_uint8_c", scope: !64, file: !64, line: 159, type: !65, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!64 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!65 = !DISubroutineType(types: !66)
!66 = !{!5, !12}
!67 = !DIExpression()
!68 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !69)
!69 = distinct !DILocation(line: 61, column: 28, scope: !70)
!70 = distinct !DILexicalBlock(scope: !71, file: !21, line: 54, column: 23)
!71 = distinct !DILexicalBlock(scope: !72, file: !21, line: 54, column: 5)
!72 = distinct !DILexicalBlock(scope: !59, file: !21, line: 54, column: 5)
!73 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !74)
!74 = distinct !DILocation(line: 62, column: 28, scope: !70)
!75 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !76)
!76 = distinct !DILocation(line: 63, column: 28, scope: !70)
!77 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !78)
!78 = distinct !DILocation(line: 60, column: 28, scope: !70)
!79 = !DILocalVariable(name: "_dst", arg: 1, scope: !59, file: !21, line: 33, type: !4)
!80 = !DILocation(line: 33, column: 36, scope: !59)
!81 = !DILocalVariable(name: "_block", arg: 2, scope: !59, file: !21, line: 33, type: !8)
!82 = !DILocation(line: 33, column: 51, scope: !59)
!83 = !DILocalVariable(name: "stride", arg: 3, scope: !59, file: !21, line: 33, type: !12)
!84 = !DILocation(line: 33, column: 63, scope: !59)
!85 = !DILocalVariable(name: "i", scope: !59, file: !21, line: 35, type: !12)
!86 = !DILocation(line: 35, column: 9, scope: !59)
!87 = !DILocalVariable(name: "dst", scope: !59, file: !21, line: 36, type: !4)
!88 = !DILocation(line: 36, column: 14, scope: !59)
!89 = !DILocation(line: 36, column: 30, scope: !59)
!90 = !DILocalVariable(name: "block", scope: !59, file: !21, line: 37, type: !8)
!91 = !DILocation(line: 37, column: 14, scope: !59)
!92 = !DILocation(line: 37, column: 32, scope: !59)
!93 = !DILocation(line: 38, column: 12, scope: !59)
!94 = !DILocation(line: 40, column: 5, scope: !59)
!95 = !DILocation(line: 40, column: 14, scope: !59)
!96 = !DILocation(line: 42, column: 10, scope: !97)
!97 = distinct !DILexicalBlock(scope: !59, file: !21, line: 42, column: 5)
!98 = !DILocation(line: 42, column: 9, scope: !97)
!99 = !DILocation(line: 42, column: 14, scope: !100)
!100 = !DILexicalBlockFile(scope: !101, file: !21, discriminator: 1)
!101 = distinct !DILexicalBlock(scope: !97, file: !21, line: 42, column: 5)
!102 = !DILocation(line: 42, column: 15, scope: !100)
!103 = !DILocation(line: 42, column: 5, scope: !100)
!104 = !DILocalVariable(name: "z0", scope: !105, file: !21, line: 43, type: !106)
!105 = distinct !DILexicalBlock(scope: !101, file: !21, line: 42, column: 23)
!106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11)
!107 = !DILocation(line: 43, column: 24, scope: !105)
!108 = !DILocation(line: 43, column: 34, scope: !105)
!109 = !DILocation(line: 43, column: 36, scope: !105)
!110 = !DILocation(line: 43, column: 28, scope: !105)
!111 = !DILocation(line: 43, column: 61, scope: !105)
!112 = !DILocation(line: 43, column: 63, scope: !105)
!113 = !DILocation(line: 43, column: 55, scope: !105)
!114 = !DILocation(line: 43, column: 45, scope: !105)
!115 = !DILocation(line: 43, column: 43, scope: !105)
!116 = !DILocalVariable(name: "z1", scope: !105, file: !21, line: 44, type: !106)
!117 = !DILocation(line: 44, column: 24, scope: !105)
!118 = !DILocation(line: 44, column: 34, scope: !105)
!119 = !DILocation(line: 44, column: 36, scope: !105)
!120 = !DILocation(line: 44, column: 28, scope: !105)
!121 = !DILocation(line: 44, column: 61, scope: !105)
!122 = !DILocation(line: 44, column: 63, scope: !105)
!123 = !DILocation(line: 44, column: 55, scope: !105)
!124 = !DILocation(line: 44, column: 45, scope: !105)
!125 = !DILocation(line: 44, column: 43, scope: !105)
!126 = !DILocalVariable(name: "z2", scope: !105, file: !21, line: 45, type: !106)
!127 = !DILocation(line: 45, column: 24, scope: !105)
!128 = !DILocation(line: 45, column: 35, scope: !105)
!129 = !DILocation(line: 45, column: 37, scope: !105)
!130 = !DILocation(line: 45, column: 29, scope: !105)
!131 = !DILocation(line: 45, column: 43, scope: !105)
!132 = !DILocation(line: 45, column: 66, scope: !105)
!133 = !DILocation(line: 45, column: 68, scope: !105)
!134 = !DILocation(line: 45, column: 60, scope: !105)
!135 = !DILocation(line: 45, column: 50, scope: !105)
!136 = !DILocation(line: 45, column: 48, scope: !105)
!137 = !DILocalVariable(name: "z3", scope: !105, file: !21, line: 46, type: !106)
!138 = !DILocation(line: 46, column: 24, scope: !105)
!139 = !DILocation(line: 46, column: 34, scope: !105)
!140 = !DILocation(line: 46, column: 36, scope: !105)
!141 = !DILocation(line: 46, column: 28, scope: !105)
!142 = !DILocation(line: 46, column: 62, scope: !105)
!143 = !DILocation(line: 46, column: 64, scope: !105)
!144 = !DILocation(line: 46, column: 56, scope: !105)
!145 = !DILocation(line: 46, column: 70, scope: !105)
!146 = !DILocation(line: 46, column: 43, scope: !105)
!147 = !DILocation(line: 48, column: 25, scope: !105)
!148 = !DILocation(line: 48, column: 30, scope: !105)
!149 = !DILocation(line: 48, column: 28, scope: !105)
!150 = !DILocation(line: 48, column: 15, scope: !105)
!151 = !DILocation(line: 48, column: 17, scope: !105)
!152 = !DILocation(line: 48, column: 9, scope: !105)
!153 = !DILocation(line: 48, column: 23, scope: !105)
!154 = !DILocation(line: 49, column: 25, scope: !105)
!155 = !DILocation(line: 49, column: 30, scope: !105)
!156 = !DILocation(line: 49, column: 28, scope: !105)
!157 = !DILocation(line: 49, column: 15, scope: !105)
!158 = !DILocation(line: 49, column: 17, scope: !105)
!159 = !DILocation(line: 49, column: 9, scope: !105)
!160 = !DILocation(line: 49, column: 23, scope: !105)
!161 = !DILocation(line: 50, column: 25, scope: !105)
!162 = !DILocation(line: 50, column: 30, scope: !105)
!163 = !DILocation(line: 50, column: 28, scope: !105)
!164 = !DILocation(line: 50, column: 15, scope: !105)
!165 = !DILocation(line: 50, column: 17, scope: !105)
!166 = !DILocation(line: 50, column: 9, scope: !105)
!167 = !DILocation(line: 50, column: 23, scope: !105)
!168 = !DILocation(line: 51, column: 25, scope: !105)
!169 = !DILocation(line: 51, column: 30, scope: !105)
!170 = !DILocation(line: 51, column: 28, scope: !105)
!171 = !DILocation(line: 51, column: 15, scope: !105)
!172 = !DILocation(line: 51, column: 17, scope: !105)
!173 = !DILocation(line: 51, column: 9, scope: !105)
!174 = !DILocation(line: 51, column: 23, scope: !105)
!175 = !DILocation(line: 52, column: 5, scope: !105)
!176 = !DILocation(line: 42, column: 20, scope: !177)
!177 = !DILexicalBlockFile(scope: !101, file: !21, discriminator: 2)
!178 = !DILocation(line: 42, column: 5, scope: !177)
!179 = distinct !{!179, !180}
!180 = !DILocation(line: 42, column: 5, scope: !59)
!181 = !DILocation(line: 54, column: 10, scope: !72)
!182 = !DILocation(line: 54, column: 9, scope: !72)
!183 = !DILocation(line: 54, column: 14, scope: !184)
!184 = !DILexicalBlockFile(scope: !71, file: !21, discriminator: 1)
!185 = !DILocation(line: 54, column: 15, scope: !184)
!186 = !DILocation(line: 54, column: 5, scope: !184)
!187 = !DILocalVariable(name: "z0", scope: !70, file: !21, line: 55, type: !106)
!188 = !DILocation(line: 55, column: 24, scope: !70)
!189 = !DILocation(line: 55, column: 40, scope: !70)
!190 = !DILocation(line: 55, column: 39, scope: !70)
!191 = !DILocation(line: 55, column: 36, scope: !70)
!192 = !DILocation(line: 55, column: 28, scope: !70)
!193 = !DILocation(line: 55, column: 67, scope: !70)
!194 = !DILocation(line: 55, column: 66, scope: !70)
!195 = !DILocation(line: 55, column: 63, scope: !70)
!196 = !DILocation(line: 55, column: 55, scope: !70)
!197 = !DILocation(line: 55, column: 45, scope: !70)
!198 = !DILocation(line: 55, column: 43, scope: !70)
!199 = !DILocalVariable(name: "z1", scope: !70, file: !21, line: 56, type: !106)
!200 = !DILocation(line: 56, column: 24, scope: !70)
!201 = !DILocation(line: 56, column: 40, scope: !70)
!202 = !DILocation(line: 56, column: 39, scope: !70)
!203 = !DILocation(line: 56, column: 36, scope: !70)
!204 = !DILocation(line: 56, column: 28, scope: !70)
!205 = !DILocation(line: 56, column: 67, scope: !70)
!206 = !DILocation(line: 56, column: 66, scope: !70)
!207 = !DILocation(line: 56, column: 63, scope: !70)
!208 = !DILocation(line: 56, column: 55, scope: !70)
!209 = !DILocation(line: 56, column: 45, scope: !70)
!210 = !DILocation(line: 56, column: 43, scope: !70)
!211 = !DILocalVariable(name: "z2", scope: !70, file: !21, line: 57, type: !106)
!212 = !DILocation(line: 57, column: 24, scope: !70)
!213 = !DILocation(line: 57, column: 41, scope: !70)
!214 = !DILocation(line: 57, column: 40, scope: !70)
!215 = !DILocation(line: 57, column: 37, scope: !70)
!216 = !DILocation(line: 57, column: 29, scope: !70)
!217 = !DILocation(line: 57, column: 43, scope: !70)
!218 = !DILocation(line: 57, column: 72, scope: !70)
!219 = !DILocation(line: 57, column: 71, scope: !70)
!220 = !DILocation(line: 57, column: 68, scope: !70)
!221 = !DILocation(line: 57, column: 60, scope: !70)
!222 = !DILocation(line: 57, column: 50, scope: !70)
!223 = !DILocation(line: 57, column: 48, scope: !70)
!224 = !DILocalVariable(name: "z3", scope: !70, file: !21, line: 58, type: !106)
!225 = !DILocation(line: 58, column: 24, scope: !70)
!226 = !DILocation(line: 58, column: 40, scope: !70)
!227 = !DILocation(line: 58, column: 39, scope: !70)
!228 = !DILocation(line: 58, column: 36, scope: !70)
!229 = !DILocation(line: 58, column: 28, scope: !70)
!230 = !DILocation(line: 58, column: 68, scope: !70)
!231 = !DILocation(line: 58, column: 67, scope: !70)
!232 = !DILocation(line: 58, column: 64, scope: !70)
!233 = !DILocation(line: 58, column: 56, scope: !70)
!234 = !DILocation(line: 58, column: 70, scope: !70)
!235 = !DILocation(line: 58, column: 43, scope: !70)
!236 = !DILocation(line: 60, column: 48, scope: !70)
!237 = !DILocation(line: 60, column: 54, scope: !70)
!238 = !DILocation(line: 60, column: 53, scope: !70)
!239 = !DILocation(line: 60, column: 50, scope: !70)
!240 = !DILocation(line: 60, column: 44, scope: !70)
!241 = !DILocation(line: 60, column: 71, scope: !70)
!242 = !DILocation(line: 60, column: 76, scope: !70)
!243 = !DILocation(line: 60, column: 74, scope: !70)
!244 = !DILocation(line: 60, column: 80, scope: !70)
!245 = !DILocation(line: 60, column: 62, scope: !70)
!246 = !DILocation(line: 60, column: 28, scope: !70)
!247 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !78)
!248 = distinct !DILexicalBlock(scope: !63, file: !64, line: 161, column: 9)
!249 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !78)
!250 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !78)
!251 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !78)
!252 = !DILexicalBlockFile(scope: !248, file: !64, discriminator: 1)
!253 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !78)
!254 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !78)
!255 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !78)
!256 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !78)
!257 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !78)
!258 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !78)
!259 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !78)
!260 = !DILocation(line: 60, column: 13, scope: !70)
!261 = !DILocation(line: 60, column: 19, scope: !70)
!262 = !DILocation(line: 60, column: 18, scope: !70)
!263 = !DILocation(line: 60, column: 15, scope: !70)
!264 = !DILocation(line: 60, column: 9, scope: !70)
!265 = !DILocation(line: 60, column: 26, scope: !70)
!266 = !DILocation(line: 61, column: 48, scope: !70)
!267 = !DILocation(line: 61, column: 54, scope: !70)
!268 = !DILocation(line: 61, column: 53, scope: !70)
!269 = !DILocation(line: 61, column: 50, scope: !70)
!270 = !DILocation(line: 61, column: 44, scope: !70)
!271 = !DILocation(line: 61, column: 71, scope: !70)
!272 = !DILocation(line: 61, column: 76, scope: !70)
!273 = !DILocation(line: 61, column: 74, scope: !70)
!274 = !DILocation(line: 61, column: 80, scope: !70)
!275 = !DILocation(line: 61, column: 62, scope: !70)
!276 = !DILocation(line: 61, column: 28, scope: !70)
!277 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !69)
!278 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !69)
!279 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !69)
!280 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !69)
!281 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !69)
!282 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !69)
!283 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !69)
!284 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !69)
!285 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !69)
!286 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !69)
!287 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !69)
!288 = !DILocation(line: 61, column: 13, scope: !70)
!289 = !DILocation(line: 61, column: 19, scope: !70)
!290 = !DILocation(line: 61, column: 18, scope: !70)
!291 = !DILocation(line: 61, column: 15, scope: !70)
!292 = !DILocation(line: 61, column: 9, scope: !70)
!293 = !DILocation(line: 61, column: 26, scope: !70)
!294 = !DILocation(line: 62, column: 48, scope: !70)
!295 = !DILocation(line: 62, column: 54, scope: !70)
!296 = !DILocation(line: 62, column: 53, scope: !70)
!297 = !DILocation(line: 62, column: 50, scope: !70)
!298 = !DILocation(line: 62, column: 44, scope: !70)
!299 = !DILocation(line: 62, column: 71, scope: !70)
!300 = !DILocation(line: 62, column: 76, scope: !70)
!301 = !DILocation(line: 62, column: 74, scope: !70)
!302 = !DILocation(line: 62, column: 80, scope: !70)
!303 = !DILocation(line: 62, column: 62, scope: !70)
!304 = !DILocation(line: 62, column: 28, scope: !70)
!305 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !74)
!306 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !74)
!307 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !74)
!308 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !74)
!309 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !74)
!310 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !74)
!311 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !74)
!312 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !74)
!313 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !74)
!314 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !74)
!315 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !74)
!316 = !DILocation(line: 62, column: 13, scope: !70)
!317 = !DILocation(line: 62, column: 19, scope: !70)
!318 = !DILocation(line: 62, column: 18, scope: !70)
!319 = !DILocation(line: 62, column: 15, scope: !70)
!320 = !DILocation(line: 62, column: 9, scope: !70)
!321 = !DILocation(line: 62, column: 26, scope: !70)
!322 = !DILocation(line: 63, column: 48, scope: !70)
!323 = !DILocation(line: 63, column: 54, scope: !70)
!324 = !DILocation(line: 63, column: 53, scope: !70)
!325 = !DILocation(line: 63, column: 50, scope: !70)
!326 = !DILocation(line: 63, column: 44, scope: !70)
!327 = !DILocation(line: 63, column: 71, scope: !70)
!328 = !DILocation(line: 63, column: 76, scope: !70)
!329 = !DILocation(line: 63, column: 74, scope: !70)
!330 = !DILocation(line: 63, column: 80, scope: !70)
!331 = !DILocation(line: 63, column: 62, scope: !70)
!332 = !DILocation(line: 63, column: 28, scope: !70)
!333 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !76)
!334 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !76)
!335 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !76)
!336 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !76)
!337 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !76)
!338 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !76)
!339 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !76)
!340 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !76)
!341 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !76)
!342 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !76)
!343 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !76)
!344 = !DILocation(line: 63, column: 13, scope: !70)
!345 = !DILocation(line: 63, column: 19, scope: !70)
!346 = !DILocation(line: 63, column: 18, scope: !70)
!347 = !DILocation(line: 63, column: 15, scope: !70)
!348 = !DILocation(line: 63, column: 9, scope: !70)
!349 = !DILocation(line: 63, column: 26, scope: !70)
!350 = !DILocation(line: 64, column: 5, scope: !70)
!351 = !DILocation(line: 54, column: 20, scope: !352)
!352 = !DILexicalBlockFile(scope: !71, file: !21, discriminator: 2)
!353 = !DILocation(line: 54, column: 5, scope: !352)
!354 = distinct !{!354, !355}
!355 = !DILocation(line: 54, column: 5, scope: !59)
!356 = !DILocation(line: 66, column: 12, scope: !59)
!357 = !DILocation(line: 66, column: 5, scope: !59)
!358 = !DILocation(line: 67, column: 1, scope: !59)
!359 = distinct !DISubprogram(name: "ff_h264_idct8_add_8_c", scope: !21, file: !21, line: 69, type: !60, isLocal: false, isDefinition: true, scopeLine: 69, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!360 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !361)
!361 = distinct !DILocation(line: 131, column: 29, scope: !362)
!362 = distinct !DILexicalBlock(scope: !363, file: !21, line: 109, column: 5)
!363 = distinct !DILexicalBlock(scope: !364, file: !21, line: 108, column: 5)
!364 = distinct !DILexicalBlock(scope: !359, file: !21, line: 108, column: 5)
!365 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !366)
!366 = distinct !DILocation(line: 132, column: 29, scope: !362)
!367 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !368)
!368 = distinct !DILocation(line: 133, column: 29, scope: !362)
!369 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !370)
!370 = distinct !DILocation(line: 134, column: 29, scope: !362)
!371 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !372)
!372 = distinct !DILocation(line: 135, column: 29, scope: !362)
!373 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !374)
!374 = distinct !DILocation(line: 136, column: 29, scope: !362)
!375 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !376)
!376 = distinct !DILocation(line: 137, column: 29, scope: !362)
!377 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !378)
!378 = distinct !DILocation(line: 130, column: 29, scope: !362)
!379 = !DILocalVariable(name: "_dst", arg: 1, scope: !359, file: !21, line: 69, type: !4)
!380 = !DILocation(line: 69, column: 37, scope: !359)
!381 = !DILocalVariable(name: "_block", arg: 2, scope: !359, file: !21, line: 69, type: !8)
!382 = !DILocation(line: 69, column: 52, scope: !359)
!383 = !DILocalVariable(name: "stride", arg: 3, scope: !359, file: !21, line: 69, type: !12)
!384 = !DILocation(line: 69, column: 64, scope: !359)
!385 = !DILocalVariable(name: "i", scope: !359, file: !21, line: 70, type: !12)
!386 = !DILocation(line: 70, column: 9, scope: !359)
!387 = !DILocalVariable(name: "dst", scope: !359, file: !21, line: 71, type: !4)
!388 = !DILocation(line: 71, column: 14, scope: !359)
!389 = !DILocation(line: 71, column: 30, scope: !359)
!390 = !DILocalVariable(name: "block", scope: !359, file: !21, line: 72, type: !8)
!391 = !DILocation(line: 72, column: 14, scope: !359)
!392 = !DILocation(line: 72, column: 32, scope: !359)
!393 = !DILocation(line: 73, column: 12, scope: !359)
!394 = !DILocation(line: 75, column: 5, scope: !359)
!395 = !DILocation(line: 75, column: 14, scope: !359)
!396 = !DILocation(line: 77, column: 12, scope: !397)
!397 = distinct !DILexicalBlock(scope: !359, file: !21, line: 77, column: 5)
!398 = !DILocation(line: 77, column: 10, scope: !397)
!399 = !DILocation(line: 77, column: 17, scope: !400)
!400 = !DILexicalBlockFile(scope: !401, file: !21, discriminator: 1)
!401 = distinct !DILexicalBlock(scope: !397, file: !21, line: 77, column: 5)
!402 = !DILocation(line: 77, column: 19, scope: !400)
!403 = !DILocation(line: 77, column: 5, scope: !400)
!404 = !DILocalVariable(name: "a0", scope: !405, file: !21, line: 79, type: !106)
!405 = distinct !DILexicalBlock(scope: !401, file: !21, line: 78, column: 5)
!406 = !DILocation(line: 79, column: 28, scope: !405)
!407 = !DILocation(line: 79, column: 39, scope: !405)
!408 = !DILocation(line: 79, column: 40, scope: !405)
!409 = !DILocation(line: 79, column: 33, scope: !405)
!410 = !DILocation(line: 79, column: 64, scope: !405)
!411 = !DILocation(line: 79, column: 65, scope: !405)
!412 = !DILocation(line: 79, column: 58, scope: !405)
!413 = !DILocation(line: 79, column: 48, scope: !405)
!414 = !DILocation(line: 79, column: 46, scope: !405)
!415 = !DILocalVariable(name: "a2", scope: !405, file: !21, line: 80, type: !106)
!416 = !DILocation(line: 80, column: 28, scope: !405)
!417 = !DILocation(line: 80, column: 39, scope: !405)
!418 = !DILocation(line: 80, column: 40, scope: !405)
!419 = !DILocation(line: 80, column: 33, scope: !405)
!420 = !DILocation(line: 80, column: 64, scope: !405)
!421 = !DILocation(line: 80, column: 65, scope: !405)
!422 = !DILocation(line: 80, column: 58, scope: !405)
!423 = !DILocation(line: 80, column: 48, scope: !405)
!424 = !DILocation(line: 80, column: 46, scope: !405)
!425 = !DILocalVariable(name: "a4", scope: !405, file: !21, line: 81, type: !106)
!426 = !DILocation(line: 81, column: 28, scope: !405)
!427 = !DILocation(line: 81, column: 40, scope: !405)
!428 = !DILocation(line: 81, column: 41, scope: !405)
!429 = !DILocation(line: 81, column: 34, scope: !405)
!430 = !DILocation(line: 81, column: 46, scope: !405)
!431 = !DILocation(line: 81, column: 69, scope: !405)
!432 = !DILocation(line: 81, column: 70, scope: !405)
!433 = !DILocation(line: 81, column: 63, scope: !405)
!434 = !DILocation(line: 81, column: 53, scope: !405)
!435 = !DILocation(line: 81, column: 51, scope: !405)
!436 = !DILocalVariable(name: "a6", scope: !405, file: !21, line: 82, type: !106)
!437 = !DILocation(line: 82, column: 28, scope: !405)
!438 = !DILocation(line: 82, column: 40, scope: !405)
!439 = !DILocation(line: 82, column: 41, scope: !405)
!440 = !DILocation(line: 82, column: 34, scope: !405)
!441 = !DILocation(line: 82, column: 46, scope: !405)
!442 = !DILocation(line: 82, column: 69, scope: !405)
!443 = !DILocation(line: 82, column: 70, scope: !405)
!444 = !DILocation(line: 82, column: 63, scope: !405)
!445 = !DILocation(line: 82, column: 53, scope: !405)
!446 = !DILocation(line: 82, column: 51, scope: !405)
!447 = !DILocalVariable(name: "b0", scope: !405, file: !21, line: 84, type: !106)
!448 = !DILocation(line: 84, column: 28, scope: !405)
!449 = !DILocation(line: 84, column: 33, scope: !405)
!450 = !DILocation(line: 84, column: 38, scope: !405)
!451 = !DILocation(line: 84, column: 36, scope: !405)
!452 = !DILocalVariable(name: "b2", scope: !405, file: !21, line: 85, type: !106)
!453 = !DILocation(line: 85, column: 28, scope: !405)
!454 = !DILocation(line: 85, column: 33, scope: !405)
!455 = !DILocation(line: 85, column: 38, scope: !405)
!456 = !DILocation(line: 85, column: 36, scope: !405)
!457 = !DILocalVariable(name: "b4", scope: !405, file: !21, line: 86, type: !106)
!458 = !DILocation(line: 86, column: 28, scope: !405)
!459 = !DILocation(line: 86, column: 33, scope: !405)
!460 = !DILocation(line: 86, column: 38, scope: !405)
!461 = !DILocation(line: 86, column: 36, scope: !405)
!462 = !DILocalVariable(name: "b6", scope: !405, file: !21, line: 87, type: !106)
!463 = !DILocation(line: 87, column: 28, scope: !405)
!464 = !DILocation(line: 87, column: 33, scope: !405)
!465 = !DILocation(line: 87, column: 38, scope: !405)
!466 = !DILocation(line: 87, column: 36, scope: !405)
!467 = !DILocalVariable(name: "a1", scope: !405, file: !21, line: 89, type: !468)
!468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!469 = !DILocation(line: 89, column: 19, scope: !405)
!470 = !DILocation(line: 89, column: 31, scope: !405)
!471 = !DILocation(line: 89, column: 32, scope: !405)
!472 = !DILocation(line: 89, column: 25, scope: !405)
!473 = !DILocation(line: 89, column: 24, scope: !405)
!474 = !DILocation(line: 89, column: 56, scope: !405)
!475 = !DILocation(line: 89, column: 57, scope: !405)
!476 = !DILocation(line: 89, column: 50, scope: !405)
!477 = !DILocation(line: 89, column: 40, scope: !405)
!478 = !DILocation(line: 89, column: 38, scope: !405)
!479 = !DILocation(line: 89, column: 71, scope: !405)
!480 = !DILocation(line: 89, column: 72, scope: !405)
!481 = !DILocation(line: 89, column: 65, scope: !405)
!482 = !DILocation(line: 89, column: 63, scope: !405)
!483 = !DILocation(line: 89, column: 87, scope: !405)
!484 = !DILocation(line: 89, column: 88, scope: !405)
!485 = !DILocation(line: 89, column: 81, scope: !405)
!486 = !DILocation(line: 89, column: 93, scope: !405)
!487 = !DILocation(line: 89, column: 78, scope: !405)
!488 = !DILocalVariable(name: "a3", scope: !405, file: !21, line: 90, type: !468)
!489 = !DILocation(line: 90, column: 19, scope: !405)
!490 = !DILocation(line: 90, column: 30, scope: !405)
!491 = !DILocation(line: 90, column: 31, scope: !405)
!492 = !DILocation(line: 90, column: 24, scope: !405)
!493 = !DILocation(line: 90, column: 55, scope: !405)
!494 = !DILocation(line: 90, column: 56, scope: !405)
!495 = !DILocation(line: 90, column: 49, scope: !405)
!496 = !DILocation(line: 90, column: 39, scope: !405)
!497 = !DILocation(line: 90, column: 37, scope: !405)
!498 = !DILocation(line: 90, column: 70, scope: !405)
!499 = !DILocation(line: 90, column: 71, scope: !405)
!500 = !DILocation(line: 90, column: 64, scope: !405)
!501 = !DILocation(line: 90, column: 62, scope: !405)
!502 = !DILocation(line: 90, column: 86, scope: !405)
!503 = !DILocation(line: 90, column: 87, scope: !405)
!504 = !DILocation(line: 90, column: 80, scope: !405)
!505 = !DILocation(line: 90, column: 92, scope: !405)
!506 = !DILocation(line: 90, column: 77, scope: !405)
!507 = !DILocalVariable(name: "a5", scope: !405, file: !21, line: 91, type: !468)
!508 = !DILocation(line: 91, column: 19, scope: !405)
!509 = !DILocation(line: 91, column: 31, scope: !405)
!510 = !DILocation(line: 91, column: 32, scope: !405)
!511 = !DILocation(line: 91, column: 25, scope: !405)
!512 = !DILocation(line: 91, column: 24, scope: !405)
!513 = !DILocation(line: 91, column: 56, scope: !405)
!514 = !DILocation(line: 91, column: 57, scope: !405)
!515 = !DILocation(line: 91, column: 50, scope: !405)
!516 = !DILocation(line: 91, column: 40, scope: !405)
!517 = !DILocation(line: 91, column: 38, scope: !405)
!518 = !DILocation(line: 91, column: 71, scope: !405)
!519 = !DILocation(line: 91, column: 72, scope: !405)
!520 = !DILocation(line: 91, column: 65, scope: !405)
!521 = !DILocation(line: 91, column: 63, scope: !405)
!522 = !DILocation(line: 91, column: 87, scope: !405)
!523 = !DILocation(line: 91, column: 88, scope: !405)
!524 = !DILocation(line: 91, column: 81, scope: !405)
!525 = !DILocation(line: 91, column: 93, scope: !405)
!526 = !DILocation(line: 91, column: 78, scope: !405)
!527 = !DILocalVariable(name: "a7", scope: !405, file: !21, line: 92, type: !468)
!528 = !DILocation(line: 92, column: 19, scope: !405)
!529 = !DILocation(line: 92, column: 30, scope: !405)
!530 = !DILocation(line: 92, column: 31, scope: !405)
!531 = !DILocation(line: 92, column: 24, scope: !405)
!532 = !DILocation(line: 92, column: 55, scope: !405)
!533 = !DILocation(line: 92, column: 56, scope: !405)
!534 = !DILocation(line: 92, column: 49, scope: !405)
!535 = !DILocation(line: 92, column: 39, scope: !405)
!536 = !DILocation(line: 92, column: 37, scope: !405)
!537 = !DILocation(line: 92, column: 70, scope: !405)
!538 = !DILocation(line: 92, column: 71, scope: !405)
!539 = !DILocation(line: 92, column: 64, scope: !405)
!540 = !DILocation(line: 92, column: 62, scope: !405)
!541 = !DILocation(line: 92, column: 86, scope: !405)
!542 = !DILocation(line: 92, column: 87, scope: !405)
!543 = !DILocation(line: 92, column: 80, scope: !405)
!544 = !DILocation(line: 92, column: 92, scope: !405)
!545 = !DILocation(line: 92, column: 77, scope: !405)
!546 = !DILocalVariable(name: "b1", scope: !405, file: !21, line: 94, type: !468)
!547 = !DILocation(line: 94, column: 19, scope: !405)
!548 = !DILocation(line: 94, column: 25, scope: !405)
!549 = !DILocation(line: 94, column: 27, scope: !405)
!550 = !DILocation(line: 94, column: 44, scope: !405)
!551 = !DILocation(line: 94, column: 32, scope: !405)
!552 = !DILocalVariable(name: "b3", scope: !405, file: !21, line: 95, type: !468)
!553 = !DILocation(line: 95, column: 19, scope: !405)
!554 = !DILocation(line: 95, column: 34, scope: !405)
!555 = !DILocation(line: 95, column: 40, scope: !405)
!556 = !DILocation(line: 95, column: 42, scope: !405)
!557 = !DILocation(line: 95, column: 37, scope: !405)
!558 = !DILocalVariable(name: "b5", scope: !405, file: !21, line: 96, type: !468)
!559 = !DILocation(line: 96, column: 19, scope: !405)
!560 = !DILocation(line: 96, column: 25, scope: !405)
!561 = !DILocation(line: 96, column: 27, scope: !405)
!562 = !DILocation(line: 96, column: 44, scope: !405)
!563 = !DILocation(line: 96, column: 32, scope: !405)
!564 = !DILocalVariable(name: "b7", scope: !405, file: !21, line: 97, type: !468)
!565 = !DILocation(line: 97, column: 19, scope: !405)
!566 = !DILocation(line: 97, column: 34, scope: !405)
!567 = !DILocation(line: 97, column: 40, scope: !405)
!568 = !DILocation(line: 97, column: 42, scope: !405)
!569 = !DILocation(line: 97, column: 37, scope: !405)
!570 = !DILocation(line: 99, column: 24, scope: !405)
!571 = !DILocation(line: 99, column: 29, scope: !405)
!572 = !DILocation(line: 99, column: 27, scope: !405)
!573 = !DILocation(line: 99, column: 15, scope: !405)
!574 = !DILocation(line: 99, column: 16, scope: !405)
!575 = !DILocation(line: 99, column: 9, scope: !405)
!576 = !DILocation(line: 99, column: 22, scope: !405)
!577 = !DILocation(line: 100, column: 24, scope: !405)
!578 = !DILocation(line: 100, column: 29, scope: !405)
!579 = !DILocation(line: 100, column: 27, scope: !405)
!580 = !DILocation(line: 100, column: 15, scope: !405)
!581 = !DILocation(line: 100, column: 16, scope: !405)
!582 = !DILocation(line: 100, column: 9, scope: !405)
!583 = !DILocation(line: 100, column: 22, scope: !405)
!584 = !DILocation(line: 101, column: 24, scope: !405)
!585 = !DILocation(line: 101, column: 29, scope: !405)
!586 = !DILocation(line: 101, column: 27, scope: !405)
!587 = !DILocation(line: 101, column: 15, scope: !405)
!588 = !DILocation(line: 101, column: 16, scope: !405)
!589 = !DILocation(line: 101, column: 9, scope: !405)
!590 = !DILocation(line: 101, column: 22, scope: !405)
!591 = !DILocation(line: 102, column: 24, scope: !405)
!592 = !DILocation(line: 102, column: 29, scope: !405)
!593 = !DILocation(line: 102, column: 27, scope: !405)
!594 = !DILocation(line: 102, column: 15, scope: !405)
!595 = !DILocation(line: 102, column: 16, scope: !405)
!596 = !DILocation(line: 102, column: 9, scope: !405)
!597 = !DILocation(line: 102, column: 22, scope: !405)
!598 = !DILocation(line: 103, column: 24, scope: !405)
!599 = !DILocation(line: 103, column: 29, scope: !405)
!600 = !DILocation(line: 103, column: 27, scope: !405)
!601 = !DILocation(line: 103, column: 15, scope: !405)
!602 = !DILocation(line: 103, column: 16, scope: !405)
!603 = !DILocation(line: 103, column: 9, scope: !405)
!604 = !DILocation(line: 103, column: 22, scope: !405)
!605 = !DILocation(line: 104, column: 24, scope: !405)
!606 = !DILocation(line: 104, column: 29, scope: !405)
!607 = !DILocation(line: 104, column: 27, scope: !405)
!608 = !DILocation(line: 104, column: 15, scope: !405)
!609 = !DILocation(line: 104, column: 16, scope: !405)
!610 = !DILocation(line: 104, column: 9, scope: !405)
!611 = !DILocation(line: 104, column: 22, scope: !405)
!612 = !DILocation(line: 105, column: 24, scope: !405)
!613 = !DILocation(line: 105, column: 29, scope: !405)
!614 = !DILocation(line: 105, column: 27, scope: !405)
!615 = !DILocation(line: 105, column: 15, scope: !405)
!616 = !DILocation(line: 105, column: 16, scope: !405)
!617 = !DILocation(line: 105, column: 9, scope: !405)
!618 = !DILocation(line: 105, column: 22, scope: !405)
!619 = !DILocation(line: 106, column: 24, scope: !405)
!620 = !DILocation(line: 106, column: 29, scope: !405)
!621 = !DILocation(line: 106, column: 27, scope: !405)
!622 = !DILocation(line: 106, column: 15, scope: !405)
!623 = !DILocation(line: 106, column: 16, scope: !405)
!624 = !DILocation(line: 106, column: 9, scope: !405)
!625 = !DILocation(line: 106, column: 22, scope: !405)
!626 = !DILocation(line: 107, column: 5, scope: !405)
!627 = !DILocation(line: 77, column: 25, scope: !628)
!628 = !DILexicalBlockFile(scope: !401, file: !21, discriminator: 2)
!629 = !DILocation(line: 77, column: 5, scope: !628)
!630 = distinct !{!630, !631}
!631 = !DILocation(line: 77, column: 5, scope: !359)
!632 = !DILocation(line: 108, column: 12, scope: !364)
!633 = !DILocation(line: 108, column: 10, scope: !364)
!634 = !DILocation(line: 108, column: 17, scope: !635)
!635 = !DILexicalBlockFile(scope: !363, file: !21, discriminator: 1)
!636 = !DILocation(line: 108, column: 19, scope: !635)
!637 = !DILocation(line: 108, column: 5, scope: !635)
!638 = !DILocalVariable(name: "a0", scope: !362, file: !21, line: 110, type: !106)
!639 = !DILocation(line: 110, column: 24, scope: !362)
!640 = !DILocation(line: 110, column: 37, scope: !362)
!641 = !DILocation(line: 110, column: 38, scope: !362)
!642 = !DILocation(line: 110, column: 36, scope: !362)
!643 = !DILocation(line: 110, column: 29, scope: !362)
!644 = !DILocation(line: 110, column: 62, scope: !362)
!645 = !DILocation(line: 110, column: 63, scope: !362)
!646 = !DILocation(line: 110, column: 61, scope: !362)
!647 = !DILocation(line: 110, column: 54, scope: !362)
!648 = !DILocation(line: 110, column: 44, scope: !362)
!649 = !DILocation(line: 110, column: 42, scope: !362)
!650 = !DILocalVariable(name: "a2", scope: !362, file: !21, line: 111, type: !106)
!651 = !DILocation(line: 111, column: 24, scope: !362)
!652 = !DILocation(line: 111, column: 37, scope: !362)
!653 = !DILocation(line: 111, column: 38, scope: !362)
!654 = !DILocation(line: 111, column: 36, scope: !362)
!655 = !DILocation(line: 111, column: 29, scope: !362)
!656 = !DILocation(line: 111, column: 62, scope: !362)
!657 = !DILocation(line: 111, column: 63, scope: !362)
!658 = !DILocation(line: 111, column: 61, scope: !362)
!659 = !DILocation(line: 111, column: 54, scope: !362)
!660 = !DILocation(line: 111, column: 44, scope: !362)
!661 = !DILocation(line: 111, column: 42, scope: !362)
!662 = !DILocalVariable(name: "a4", scope: !362, file: !21, line: 112, type: !106)
!663 = !DILocation(line: 112, column: 24, scope: !362)
!664 = !DILocation(line: 112, column: 38, scope: !362)
!665 = !DILocation(line: 112, column: 39, scope: !362)
!666 = !DILocation(line: 112, column: 37, scope: !362)
!667 = !DILocation(line: 112, column: 30, scope: !362)
!668 = !DILocation(line: 112, column: 42, scope: !362)
!669 = !DILocation(line: 112, column: 67, scope: !362)
!670 = !DILocation(line: 112, column: 68, scope: !362)
!671 = !DILocation(line: 112, column: 66, scope: !362)
!672 = !DILocation(line: 112, column: 59, scope: !362)
!673 = !DILocation(line: 112, column: 49, scope: !362)
!674 = !DILocation(line: 112, column: 47, scope: !362)
!675 = !DILocalVariable(name: "a6", scope: !362, file: !21, line: 113, type: !106)
!676 = !DILocation(line: 113, column: 24, scope: !362)
!677 = !DILocation(line: 113, column: 38, scope: !362)
!678 = !DILocation(line: 113, column: 39, scope: !362)
!679 = !DILocation(line: 113, column: 37, scope: !362)
!680 = !DILocation(line: 113, column: 30, scope: !362)
!681 = !DILocation(line: 113, column: 42, scope: !362)
!682 = !DILocation(line: 113, column: 67, scope: !362)
!683 = !DILocation(line: 113, column: 68, scope: !362)
!684 = !DILocation(line: 113, column: 66, scope: !362)
!685 = !DILocation(line: 113, column: 59, scope: !362)
!686 = !DILocation(line: 113, column: 49, scope: !362)
!687 = !DILocation(line: 113, column: 47, scope: !362)
!688 = !DILocalVariable(name: "b0", scope: !362, file: !21, line: 115, type: !106)
!689 = !DILocation(line: 115, column: 24, scope: !362)
!690 = !DILocation(line: 115, column: 29, scope: !362)
!691 = !DILocation(line: 115, column: 34, scope: !362)
!692 = !DILocation(line: 115, column: 32, scope: !362)
!693 = !DILocalVariable(name: "b2", scope: !362, file: !21, line: 116, type: !106)
!694 = !DILocation(line: 116, column: 24, scope: !362)
!695 = !DILocation(line: 116, column: 29, scope: !362)
!696 = !DILocation(line: 116, column: 34, scope: !362)
!697 = !DILocation(line: 116, column: 32, scope: !362)
!698 = !DILocalVariable(name: "b4", scope: !362, file: !21, line: 117, type: !106)
!699 = !DILocation(line: 117, column: 24, scope: !362)
!700 = !DILocation(line: 117, column: 29, scope: !362)
!701 = !DILocation(line: 117, column: 34, scope: !362)
!702 = !DILocation(line: 117, column: 32, scope: !362)
!703 = !DILocalVariable(name: "b6", scope: !362, file: !21, line: 118, type: !106)
!704 = !DILocation(line: 118, column: 24, scope: !362)
!705 = !DILocation(line: 118, column: 29, scope: !362)
!706 = !DILocation(line: 118, column: 34, scope: !362)
!707 = !DILocation(line: 118, column: 32, scope: !362)
!708 = !DILocalVariable(name: "a1", scope: !362, file: !21, line: 120, type: !468)
!709 = !DILocation(line: 120, column: 19, scope: !362)
!710 = !DILocation(line: 120, column: 43, scope: !362)
!711 = !DILocation(line: 120, column: 44, scope: !362)
!712 = !DILocation(line: 120, column: 42, scope: !362)
!713 = !DILocation(line: 120, column: 35, scope: !362)
!714 = !DILocation(line: 120, column: 25, scope: !362)
!715 = !DILocation(line: 120, column: 24, scope: !362)
!716 = !DILocation(line: 120, column: 58, scope: !362)
!717 = !DILocation(line: 120, column: 59, scope: !362)
!718 = !DILocation(line: 120, column: 57, scope: !362)
!719 = !DILocation(line: 120, column: 50, scope: !362)
!720 = !DILocation(line: 120, column: 48, scope: !362)
!721 = !DILocation(line: 120, column: 73, scope: !362)
!722 = !DILocation(line: 120, column: 74, scope: !362)
!723 = !DILocation(line: 120, column: 72, scope: !362)
!724 = !DILocation(line: 120, column: 65, scope: !362)
!725 = !DILocation(line: 120, column: 63, scope: !362)
!726 = !DILocation(line: 120, column: 89, scope: !362)
!727 = !DILocation(line: 120, column: 90, scope: !362)
!728 = !DILocation(line: 120, column: 88, scope: !362)
!729 = !DILocation(line: 120, column: 81, scope: !362)
!730 = !DILocation(line: 120, column: 93, scope: !362)
!731 = !DILocation(line: 120, column: 78, scope: !362)
!732 = !DILocalVariable(name: "a3", scope: !362, file: !21, line: 121, type: !468)
!733 = !DILocation(line: 121, column: 19, scope: !362)
!734 = !DILocation(line: 121, column: 42, scope: !362)
!735 = !DILocation(line: 121, column: 43, scope: !362)
!736 = !DILocation(line: 121, column: 41, scope: !362)
!737 = !DILocation(line: 121, column: 34, scope: !362)
!738 = !DILocation(line: 121, column: 24, scope: !362)
!739 = !DILocation(line: 121, column: 57, scope: !362)
!740 = !DILocation(line: 121, column: 58, scope: !362)
!741 = !DILocation(line: 121, column: 56, scope: !362)
!742 = !DILocation(line: 121, column: 49, scope: !362)
!743 = !DILocation(line: 121, column: 47, scope: !362)
!744 = !DILocation(line: 121, column: 72, scope: !362)
!745 = !DILocation(line: 121, column: 73, scope: !362)
!746 = !DILocation(line: 121, column: 71, scope: !362)
!747 = !DILocation(line: 121, column: 64, scope: !362)
!748 = !DILocation(line: 121, column: 62, scope: !362)
!749 = !DILocation(line: 121, column: 88, scope: !362)
!750 = !DILocation(line: 121, column: 89, scope: !362)
!751 = !DILocation(line: 121, column: 87, scope: !362)
!752 = !DILocation(line: 121, column: 80, scope: !362)
!753 = !DILocation(line: 121, column: 92, scope: !362)
!754 = !DILocation(line: 121, column: 77, scope: !362)
!755 = !DILocalVariable(name: "a5", scope: !362, file: !21, line: 122, type: !468)
!756 = !DILocation(line: 122, column: 19, scope: !362)
!757 = !DILocation(line: 122, column: 43, scope: !362)
!758 = !DILocation(line: 122, column: 44, scope: !362)
!759 = !DILocation(line: 122, column: 42, scope: !362)
!760 = !DILocation(line: 122, column: 35, scope: !362)
!761 = !DILocation(line: 122, column: 25, scope: !362)
!762 = !DILocation(line: 122, column: 24, scope: !362)
!763 = !DILocation(line: 122, column: 58, scope: !362)
!764 = !DILocation(line: 122, column: 59, scope: !362)
!765 = !DILocation(line: 122, column: 57, scope: !362)
!766 = !DILocation(line: 122, column: 50, scope: !362)
!767 = !DILocation(line: 122, column: 48, scope: !362)
!768 = !DILocation(line: 122, column: 73, scope: !362)
!769 = !DILocation(line: 122, column: 74, scope: !362)
!770 = !DILocation(line: 122, column: 72, scope: !362)
!771 = !DILocation(line: 122, column: 65, scope: !362)
!772 = !DILocation(line: 122, column: 63, scope: !362)
!773 = !DILocation(line: 122, column: 89, scope: !362)
!774 = !DILocation(line: 122, column: 90, scope: !362)
!775 = !DILocation(line: 122, column: 88, scope: !362)
!776 = !DILocation(line: 122, column: 81, scope: !362)
!777 = !DILocation(line: 122, column: 93, scope: !362)
!778 = !DILocation(line: 122, column: 78, scope: !362)
!779 = !DILocalVariable(name: "a7", scope: !362, file: !21, line: 123, type: !468)
!780 = !DILocation(line: 123, column: 19, scope: !362)
!781 = !DILocation(line: 123, column: 42, scope: !362)
!782 = !DILocation(line: 123, column: 43, scope: !362)
!783 = !DILocation(line: 123, column: 41, scope: !362)
!784 = !DILocation(line: 123, column: 34, scope: !362)
!785 = !DILocation(line: 123, column: 24, scope: !362)
!786 = !DILocation(line: 123, column: 57, scope: !362)
!787 = !DILocation(line: 123, column: 58, scope: !362)
!788 = !DILocation(line: 123, column: 56, scope: !362)
!789 = !DILocation(line: 123, column: 49, scope: !362)
!790 = !DILocation(line: 123, column: 47, scope: !362)
!791 = !DILocation(line: 123, column: 72, scope: !362)
!792 = !DILocation(line: 123, column: 73, scope: !362)
!793 = !DILocation(line: 123, column: 71, scope: !362)
!794 = !DILocation(line: 123, column: 64, scope: !362)
!795 = !DILocation(line: 123, column: 62, scope: !362)
!796 = !DILocation(line: 123, column: 88, scope: !362)
!797 = !DILocation(line: 123, column: 89, scope: !362)
!798 = !DILocation(line: 123, column: 87, scope: !362)
!799 = !DILocation(line: 123, column: 80, scope: !362)
!800 = !DILocation(line: 123, column: 92, scope: !362)
!801 = !DILocation(line: 123, column: 77, scope: !362)
!802 = !DILocalVariable(name: "b1", scope: !362, file: !21, line: 125, type: !106)
!803 = !DILocation(line: 125, column: 24, scope: !362)
!804 = !DILocation(line: 125, column: 30, scope: !362)
!805 = !DILocation(line: 125, column: 32, scope: !362)
!806 = !DILocation(line: 125, column: 49, scope: !362)
!807 = !DILocation(line: 125, column: 37, scope: !362)
!808 = !DILocalVariable(name: "b3", scope: !362, file: !21, line: 126, type: !106)
!809 = !DILocation(line: 126, column: 24, scope: !362)
!810 = !DILocation(line: 126, column: 39, scope: !362)
!811 = !DILocation(line: 126, column: 45, scope: !362)
!812 = !DILocation(line: 126, column: 47, scope: !362)
!813 = !DILocation(line: 126, column: 42, scope: !362)
!814 = !DILocalVariable(name: "b5", scope: !362, file: !21, line: 127, type: !106)
!815 = !DILocation(line: 127, column: 24, scope: !362)
!816 = !DILocation(line: 127, column: 30, scope: !362)
!817 = !DILocation(line: 127, column: 32, scope: !362)
!818 = !DILocation(line: 127, column: 49, scope: !362)
!819 = !DILocation(line: 127, column: 37, scope: !362)
!820 = !DILocalVariable(name: "b7", scope: !362, file: !21, line: 128, type: !106)
!821 = !DILocation(line: 128, column: 24, scope: !362)
!822 = !DILocation(line: 128, column: 39, scope: !362)
!823 = !DILocation(line: 128, column: 45, scope: !362)
!824 = !DILocation(line: 128, column: 47, scope: !362)
!825 = !DILocation(line: 128, column: 42, scope: !362)
!826 = !DILocation(line: 130, column: 49, scope: !362)
!827 = !DILocation(line: 130, column: 55, scope: !362)
!828 = !DILocation(line: 130, column: 54, scope: !362)
!829 = !DILocation(line: 130, column: 51, scope: !362)
!830 = !DILocation(line: 130, column: 45, scope: !362)
!831 = !DILocation(line: 130, column: 72, scope: !362)
!832 = !DILocation(line: 130, column: 77, scope: !362)
!833 = !DILocation(line: 130, column: 75, scope: !362)
!834 = !DILocation(line: 130, column: 81, scope: !362)
!835 = !DILocation(line: 130, column: 63, scope: !362)
!836 = !DILocation(line: 130, column: 29, scope: !362)
!837 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !378)
!838 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !378)
!839 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !378)
!840 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !378)
!841 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !378)
!842 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !378)
!843 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !378)
!844 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !378)
!845 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !378)
!846 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !378)
!847 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !378)
!848 = !DILocation(line: 130, column: 13, scope: !362)
!849 = !DILocation(line: 130, column: 19, scope: !362)
!850 = !DILocation(line: 130, column: 18, scope: !362)
!851 = !DILocation(line: 130, column: 15, scope: !362)
!852 = !DILocation(line: 130, column: 9, scope: !362)
!853 = !DILocation(line: 130, column: 27, scope: !362)
!854 = !DILocation(line: 131, column: 49, scope: !362)
!855 = !DILocation(line: 131, column: 55, scope: !362)
!856 = !DILocation(line: 131, column: 54, scope: !362)
!857 = !DILocation(line: 131, column: 51, scope: !362)
!858 = !DILocation(line: 131, column: 45, scope: !362)
!859 = !DILocation(line: 131, column: 72, scope: !362)
!860 = !DILocation(line: 131, column: 77, scope: !362)
!861 = !DILocation(line: 131, column: 75, scope: !362)
!862 = !DILocation(line: 131, column: 81, scope: !362)
!863 = !DILocation(line: 131, column: 63, scope: !362)
!864 = !DILocation(line: 131, column: 29, scope: !362)
!865 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !361)
!866 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !361)
!867 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !361)
!868 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !361)
!869 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !361)
!870 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !361)
!871 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !361)
!872 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !361)
!873 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !361)
!874 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !361)
!875 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !361)
!876 = !DILocation(line: 131, column: 13, scope: !362)
!877 = !DILocation(line: 131, column: 19, scope: !362)
!878 = !DILocation(line: 131, column: 18, scope: !362)
!879 = !DILocation(line: 131, column: 15, scope: !362)
!880 = !DILocation(line: 131, column: 9, scope: !362)
!881 = !DILocation(line: 131, column: 27, scope: !362)
!882 = !DILocation(line: 132, column: 49, scope: !362)
!883 = !DILocation(line: 132, column: 55, scope: !362)
!884 = !DILocation(line: 132, column: 54, scope: !362)
!885 = !DILocation(line: 132, column: 51, scope: !362)
!886 = !DILocation(line: 132, column: 45, scope: !362)
!887 = !DILocation(line: 132, column: 72, scope: !362)
!888 = !DILocation(line: 132, column: 77, scope: !362)
!889 = !DILocation(line: 132, column: 75, scope: !362)
!890 = !DILocation(line: 132, column: 81, scope: !362)
!891 = !DILocation(line: 132, column: 63, scope: !362)
!892 = !DILocation(line: 132, column: 29, scope: !362)
!893 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !366)
!894 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !366)
!895 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !366)
!896 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !366)
!897 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !366)
!898 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !366)
!899 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !366)
!900 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !366)
!901 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !366)
!902 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !366)
!903 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !366)
!904 = !DILocation(line: 132, column: 13, scope: !362)
!905 = !DILocation(line: 132, column: 19, scope: !362)
!906 = !DILocation(line: 132, column: 18, scope: !362)
!907 = !DILocation(line: 132, column: 15, scope: !362)
!908 = !DILocation(line: 132, column: 9, scope: !362)
!909 = !DILocation(line: 132, column: 27, scope: !362)
!910 = !DILocation(line: 133, column: 49, scope: !362)
!911 = !DILocation(line: 133, column: 55, scope: !362)
!912 = !DILocation(line: 133, column: 54, scope: !362)
!913 = !DILocation(line: 133, column: 51, scope: !362)
!914 = !DILocation(line: 133, column: 45, scope: !362)
!915 = !DILocation(line: 133, column: 72, scope: !362)
!916 = !DILocation(line: 133, column: 77, scope: !362)
!917 = !DILocation(line: 133, column: 75, scope: !362)
!918 = !DILocation(line: 133, column: 81, scope: !362)
!919 = !DILocation(line: 133, column: 63, scope: !362)
!920 = !DILocation(line: 133, column: 29, scope: !362)
!921 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !368)
!922 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !368)
!923 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !368)
!924 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !368)
!925 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !368)
!926 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !368)
!927 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !368)
!928 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !368)
!929 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !368)
!930 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !368)
!931 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !368)
!932 = !DILocation(line: 133, column: 13, scope: !362)
!933 = !DILocation(line: 133, column: 19, scope: !362)
!934 = !DILocation(line: 133, column: 18, scope: !362)
!935 = !DILocation(line: 133, column: 15, scope: !362)
!936 = !DILocation(line: 133, column: 9, scope: !362)
!937 = !DILocation(line: 133, column: 27, scope: !362)
!938 = !DILocation(line: 134, column: 49, scope: !362)
!939 = !DILocation(line: 134, column: 55, scope: !362)
!940 = !DILocation(line: 134, column: 54, scope: !362)
!941 = !DILocation(line: 134, column: 51, scope: !362)
!942 = !DILocation(line: 134, column: 45, scope: !362)
!943 = !DILocation(line: 134, column: 72, scope: !362)
!944 = !DILocation(line: 134, column: 77, scope: !362)
!945 = !DILocation(line: 134, column: 75, scope: !362)
!946 = !DILocation(line: 134, column: 81, scope: !362)
!947 = !DILocation(line: 134, column: 63, scope: !362)
!948 = !DILocation(line: 134, column: 29, scope: !362)
!949 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !370)
!950 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !370)
!951 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !370)
!952 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !370)
!953 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !370)
!954 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !370)
!955 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !370)
!956 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !370)
!957 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !370)
!958 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !370)
!959 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !370)
!960 = !DILocation(line: 134, column: 13, scope: !362)
!961 = !DILocation(line: 134, column: 19, scope: !362)
!962 = !DILocation(line: 134, column: 18, scope: !362)
!963 = !DILocation(line: 134, column: 15, scope: !362)
!964 = !DILocation(line: 134, column: 9, scope: !362)
!965 = !DILocation(line: 134, column: 27, scope: !362)
!966 = !DILocation(line: 135, column: 49, scope: !362)
!967 = !DILocation(line: 135, column: 55, scope: !362)
!968 = !DILocation(line: 135, column: 54, scope: !362)
!969 = !DILocation(line: 135, column: 51, scope: !362)
!970 = !DILocation(line: 135, column: 45, scope: !362)
!971 = !DILocation(line: 135, column: 72, scope: !362)
!972 = !DILocation(line: 135, column: 77, scope: !362)
!973 = !DILocation(line: 135, column: 75, scope: !362)
!974 = !DILocation(line: 135, column: 81, scope: !362)
!975 = !DILocation(line: 135, column: 63, scope: !362)
!976 = !DILocation(line: 135, column: 29, scope: !362)
!977 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !372)
!978 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !372)
!979 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !372)
!980 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !372)
!981 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !372)
!982 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !372)
!983 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !372)
!984 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !372)
!985 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !372)
!986 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !372)
!987 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !372)
!988 = !DILocation(line: 135, column: 13, scope: !362)
!989 = !DILocation(line: 135, column: 19, scope: !362)
!990 = !DILocation(line: 135, column: 18, scope: !362)
!991 = !DILocation(line: 135, column: 15, scope: !362)
!992 = !DILocation(line: 135, column: 9, scope: !362)
!993 = !DILocation(line: 135, column: 27, scope: !362)
!994 = !DILocation(line: 136, column: 49, scope: !362)
!995 = !DILocation(line: 136, column: 55, scope: !362)
!996 = !DILocation(line: 136, column: 54, scope: !362)
!997 = !DILocation(line: 136, column: 51, scope: !362)
!998 = !DILocation(line: 136, column: 45, scope: !362)
!999 = !DILocation(line: 136, column: 72, scope: !362)
!1000 = !DILocation(line: 136, column: 77, scope: !362)
!1001 = !DILocation(line: 136, column: 75, scope: !362)
!1002 = !DILocation(line: 136, column: 81, scope: !362)
!1003 = !DILocation(line: 136, column: 63, scope: !362)
!1004 = !DILocation(line: 136, column: 29, scope: !362)
!1005 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !374)
!1006 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !374)
!1007 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !374)
!1008 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !374)
!1009 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !374)
!1010 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !374)
!1011 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !374)
!1012 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !374)
!1013 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !374)
!1014 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !374)
!1015 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !374)
!1016 = !DILocation(line: 136, column: 13, scope: !362)
!1017 = !DILocation(line: 136, column: 19, scope: !362)
!1018 = !DILocation(line: 136, column: 18, scope: !362)
!1019 = !DILocation(line: 136, column: 15, scope: !362)
!1020 = !DILocation(line: 136, column: 9, scope: !362)
!1021 = !DILocation(line: 136, column: 27, scope: !362)
!1022 = !DILocation(line: 137, column: 49, scope: !362)
!1023 = !DILocation(line: 137, column: 55, scope: !362)
!1024 = !DILocation(line: 137, column: 54, scope: !362)
!1025 = !DILocation(line: 137, column: 51, scope: !362)
!1026 = !DILocation(line: 137, column: 45, scope: !362)
!1027 = !DILocation(line: 137, column: 72, scope: !362)
!1028 = !DILocation(line: 137, column: 77, scope: !362)
!1029 = !DILocation(line: 137, column: 75, scope: !362)
!1030 = !DILocation(line: 137, column: 81, scope: !362)
!1031 = !DILocation(line: 137, column: 63, scope: !362)
!1032 = !DILocation(line: 137, column: 29, scope: !362)
!1033 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !376)
!1034 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !376)
!1035 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !376)
!1036 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !376)
!1037 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !376)
!1038 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !376)
!1039 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !376)
!1040 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !376)
!1041 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !376)
!1042 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !376)
!1043 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !376)
!1044 = !DILocation(line: 137, column: 13, scope: !362)
!1045 = !DILocation(line: 137, column: 19, scope: !362)
!1046 = !DILocation(line: 137, column: 18, scope: !362)
!1047 = !DILocation(line: 137, column: 15, scope: !362)
!1048 = !DILocation(line: 137, column: 9, scope: !362)
!1049 = !DILocation(line: 137, column: 27, scope: !362)
!1050 = !DILocation(line: 138, column: 5, scope: !362)
!1051 = !DILocation(line: 108, column: 25, scope: !1052)
!1052 = !DILexicalBlockFile(scope: !363, file: !21, discriminator: 2)
!1053 = !DILocation(line: 108, column: 5, scope: !1052)
!1054 = distinct !{!1054, !1055}
!1055 = !DILocation(line: 108, column: 5, scope: !359)
!1056 = !DILocation(line: 140, column: 12, scope: !359)
!1057 = !DILocation(line: 140, column: 5, scope: !359)
!1058 = !DILocation(line: 141, column: 1, scope: !359)
!1059 = distinct !DISubprogram(name: "ff_h264_idct_dc_add_8_c", scope: !21, file: !21, line: 144, type: !60, isLocal: false, isDefinition: true, scopeLine: 144, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1060 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !1061)
!1061 = distinct !DILocation(line: 154, column: 22, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1063, file: !21, line: 153, column: 9)
!1063 = distinct !DILexicalBlock(scope: !1064, file: !21, line: 153, column: 9)
!1064 = distinct !DILexicalBlock(scope: !1065, file: !21, line: 152, column: 5)
!1065 = distinct !DILexicalBlock(scope: !1066, file: !21, line: 151, column: 5)
!1066 = distinct !DILexicalBlock(scope: !1059, file: !21, line: 151, column: 5)
!1067 = !DILocalVariable(name: "_dst", arg: 1, scope: !1059, file: !21, line: 144, type: !4)
!1068 = !DILocation(line: 144, column: 39, scope: !1059)
!1069 = !DILocalVariable(name: "_block", arg: 2, scope: !1059, file: !21, line: 144, type: !8)
!1070 = !DILocation(line: 144, column: 54, scope: !1059)
!1071 = !DILocalVariable(name: "stride", arg: 3, scope: !1059, file: !21, line: 144, type: !12)
!1072 = !DILocation(line: 144, column: 66, scope: !1059)
!1073 = !DILocalVariable(name: "i", scope: !1059, file: !21, line: 145, type: !12)
!1074 = !DILocation(line: 145, column: 9, scope: !1059)
!1075 = !DILocalVariable(name: "j", scope: !1059, file: !21, line: 145, type: !12)
!1076 = !DILocation(line: 145, column: 12, scope: !1059)
!1077 = !DILocalVariable(name: "dst", scope: !1059, file: !21, line: 146, type: !4)
!1078 = !DILocation(line: 146, column: 14, scope: !1059)
!1079 = !DILocation(line: 146, column: 30, scope: !1059)
!1080 = !DILocalVariable(name: "block", scope: !1059, file: !21, line: 147, type: !8)
!1081 = !DILocation(line: 147, column: 14, scope: !1059)
!1082 = !DILocation(line: 147, column: 32, scope: !1059)
!1083 = !DILocalVariable(name: "dc", scope: !1059, file: !21, line: 148, type: !12)
!1084 = !DILocation(line: 148, column: 9, scope: !1059)
!1085 = !DILocation(line: 148, column: 15, scope: !1059)
!1086 = !DILocation(line: 148, column: 24, scope: !1059)
!1087 = !DILocation(line: 148, column: 30, scope: !1059)
!1088 = !DILocation(line: 149, column: 12, scope: !1059)
!1089 = !DILocation(line: 150, column: 5, scope: !1059)
!1090 = !DILocation(line: 150, column: 14, scope: !1059)
!1091 = !DILocation(line: 151, column: 12, scope: !1066)
!1092 = !DILocation(line: 151, column: 10, scope: !1066)
!1093 = !DILocation(line: 151, column: 17, scope: !1094)
!1094 = !DILexicalBlockFile(scope: !1065, file: !21, discriminator: 1)
!1095 = !DILocation(line: 151, column: 19, scope: !1094)
!1096 = !DILocation(line: 151, column: 5, scope: !1094)
!1097 = !DILocation(line: 153, column: 16, scope: !1063)
!1098 = !DILocation(line: 153, column: 14, scope: !1063)
!1099 = !DILocation(line: 153, column: 21, scope: !1100)
!1100 = !DILexicalBlockFile(scope: !1062, file: !21, discriminator: 1)
!1101 = !DILocation(line: 153, column: 23, scope: !1100)
!1102 = !DILocation(line: 153, column: 9, scope: !1100)
!1103 = !DILocation(line: 154, column: 42, scope: !1062)
!1104 = !DILocation(line: 154, column: 38, scope: !1062)
!1105 = !DILocation(line: 154, column: 47, scope: !1062)
!1106 = !DILocation(line: 154, column: 45, scope: !1062)
!1107 = !DILocation(line: 154, column: 22, scope: !1062)
!1108 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !1061)
!1109 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !1061)
!1110 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !1061)
!1111 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !1061)
!1112 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !1061)
!1113 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !1061)
!1114 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !1061)
!1115 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !1061)
!1116 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !1061)
!1117 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !1061)
!1118 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !1061)
!1119 = !DILocation(line: 154, column: 17, scope: !1062)
!1120 = !DILocation(line: 154, column: 13, scope: !1062)
!1121 = !DILocation(line: 154, column: 20, scope: !1062)
!1122 = !DILocation(line: 153, column: 29, scope: !1123)
!1123 = !DILexicalBlockFile(scope: !1062, file: !21, discriminator: 2)
!1124 = !DILocation(line: 153, column: 9, scope: !1123)
!1125 = distinct !{!1125, !1126}
!1126 = !DILocation(line: 153, column: 9, scope: !1064)
!1127 = !DILocation(line: 155, column: 16, scope: !1064)
!1128 = !DILocation(line: 155, column: 13, scope: !1064)
!1129 = !DILocation(line: 156, column: 5, scope: !1064)
!1130 = !DILocation(line: 151, column: 25, scope: !1131)
!1131 = !DILexicalBlockFile(scope: !1065, file: !21, discriminator: 2)
!1132 = !DILocation(line: 151, column: 5, scope: !1131)
!1133 = distinct !{!1133, !1134}
!1134 = !DILocation(line: 151, column: 5, scope: !1059)
!1135 = !DILocation(line: 157, column: 1, scope: !1059)
!1136 = distinct !DISubprogram(name: "ff_h264_idct8_dc_add_8_c", scope: !21, file: !21, line: 159, type: !60, isLocal: false, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1137 = !DILocation(line: 159, column: 97, scope: !63, inlinedAt: !1138)
!1138 = distinct !DILocation(line: 169, column: 22, scope: !1139)
!1139 = distinct !DILexicalBlock(scope: !1140, file: !21, line: 168, column: 9)
!1140 = distinct !DILexicalBlock(scope: !1141, file: !21, line: 168, column: 9)
!1141 = distinct !DILexicalBlock(scope: !1142, file: !21, line: 167, column: 5)
!1142 = distinct !DILexicalBlock(scope: !1143, file: !21, line: 166, column: 5)
!1143 = distinct !DILexicalBlock(scope: !1136, file: !21, line: 166, column: 5)
!1144 = !DILocalVariable(name: "_dst", arg: 1, scope: !1136, file: !21, line: 159, type: !4)
!1145 = !DILocation(line: 159, column: 40, scope: !1136)
!1146 = !DILocalVariable(name: "_block", arg: 2, scope: !1136, file: !21, line: 159, type: !8)
!1147 = !DILocation(line: 159, column: 55, scope: !1136)
!1148 = !DILocalVariable(name: "stride", arg: 3, scope: !1136, file: !21, line: 159, type: !12)
!1149 = !DILocation(line: 159, column: 67, scope: !1136)
!1150 = !DILocalVariable(name: "i", scope: !1136, file: !21, line: 160, type: !12)
!1151 = !DILocation(line: 160, column: 9, scope: !1136)
!1152 = !DILocalVariable(name: "j", scope: !1136, file: !21, line: 160, type: !12)
!1153 = !DILocation(line: 160, column: 12, scope: !1136)
!1154 = !DILocalVariable(name: "dst", scope: !1136, file: !21, line: 161, type: !4)
!1155 = !DILocation(line: 161, column: 14, scope: !1136)
!1156 = !DILocation(line: 161, column: 30, scope: !1136)
!1157 = !DILocalVariable(name: "block", scope: !1136, file: !21, line: 162, type: !8)
!1158 = !DILocation(line: 162, column: 14, scope: !1136)
!1159 = !DILocation(line: 162, column: 32, scope: !1136)
!1160 = !DILocalVariable(name: "dc", scope: !1136, file: !21, line: 163, type: !12)
!1161 = !DILocation(line: 163, column: 9, scope: !1136)
!1162 = !DILocation(line: 163, column: 15, scope: !1136)
!1163 = !DILocation(line: 163, column: 24, scope: !1136)
!1164 = !DILocation(line: 163, column: 30, scope: !1136)
!1165 = !DILocation(line: 164, column: 5, scope: !1136)
!1166 = !DILocation(line: 164, column: 14, scope: !1136)
!1167 = !DILocation(line: 165, column: 12, scope: !1136)
!1168 = !DILocation(line: 166, column: 12, scope: !1143)
!1169 = !DILocation(line: 166, column: 10, scope: !1143)
!1170 = !DILocation(line: 166, column: 17, scope: !1171)
!1171 = !DILexicalBlockFile(scope: !1142, file: !21, discriminator: 1)
!1172 = !DILocation(line: 166, column: 19, scope: !1171)
!1173 = !DILocation(line: 166, column: 5, scope: !1171)
!1174 = !DILocation(line: 168, column: 16, scope: !1140)
!1175 = !DILocation(line: 168, column: 14, scope: !1140)
!1176 = !DILocation(line: 168, column: 21, scope: !1177)
!1177 = !DILexicalBlockFile(scope: !1139, file: !21, discriminator: 1)
!1178 = !DILocation(line: 168, column: 23, scope: !1177)
!1179 = !DILocation(line: 168, column: 9, scope: !1177)
!1180 = !DILocation(line: 169, column: 42, scope: !1139)
!1181 = !DILocation(line: 169, column: 38, scope: !1139)
!1182 = !DILocation(line: 169, column: 47, scope: !1139)
!1183 = !DILocation(line: 169, column: 45, scope: !1139)
!1184 = !DILocation(line: 169, column: 22, scope: !1139)
!1185 = !DILocation(line: 161, column: 9, scope: !248, inlinedAt: !1138)
!1186 = !DILocation(line: 161, column: 10, scope: !248, inlinedAt: !1138)
!1187 = !DILocation(line: 161, column: 9, scope: !63, inlinedAt: !1138)
!1188 = !DILocation(line: 161, column: 29, scope: !252, inlinedAt: !1138)
!1189 = !DILocation(line: 161, column: 28, scope: !252, inlinedAt: !1138)
!1190 = !DILocation(line: 161, column: 31, scope: !252, inlinedAt: !1138)
!1191 = !DILocation(line: 161, column: 27, scope: !252, inlinedAt: !1138)
!1192 = !DILocation(line: 161, column: 20, scope: !252, inlinedAt: !1138)
!1193 = !DILocation(line: 162, column: 17, scope: !248, inlinedAt: !1138)
!1194 = !DILocation(line: 162, column: 10, scope: !248, inlinedAt: !1138)
!1195 = !DILocation(line: 163, column: 1, scope: !63, inlinedAt: !1138)
!1196 = !DILocation(line: 169, column: 17, scope: !1139)
!1197 = !DILocation(line: 169, column: 13, scope: !1139)
!1198 = !DILocation(line: 169, column: 20, scope: !1139)
!1199 = !DILocation(line: 168, column: 29, scope: !1200)
!1200 = !DILexicalBlockFile(scope: !1139, file: !21, discriminator: 2)
!1201 = !DILocation(line: 168, column: 9, scope: !1200)
!1202 = distinct !{!1202, !1203}
!1203 = !DILocation(line: 168, column: 9, scope: !1141)
!1204 = !DILocation(line: 170, column: 16, scope: !1141)
!1205 = !DILocation(line: 170, column: 13, scope: !1141)
!1206 = !DILocation(line: 171, column: 5, scope: !1141)
!1207 = !DILocation(line: 166, column: 25, scope: !1208)
!1208 = !DILexicalBlockFile(scope: !1142, file: !21, discriminator: 2)
!1209 = !DILocation(line: 166, column: 5, scope: !1208)
!1210 = distinct !{!1210, !1211}
!1211 = !DILocation(line: 166, column: 5, scope: !1136)
!1212 = !DILocation(line: 172, column: 1, scope: !1136)
!1213 = distinct !DISubprogram(name: "ff_h264_idct_add16_8_c", scope: !21, file: !21, line: 174, type: !1214, isLocal: false, isDefinition: true, scopeLine: 174, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{null, !4, !1216, !8, !12, !1217}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64, align: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64, align: 64)
!1218 = !DILocalVariable(name: "dst", arg: 1, scope: !1213, file: !21, line: 174, type: !4)
!1219 = !DILocation(line: 174, column: 38, scope: !1213)
!1220 = !DILocalVariable(name: "block_offset", arg: 2, scope: !1213, file: !21, line: 174, type: !1216)
!1221 = !DILocation(line: 174, column: 54, scope: !1213)
!1222 = !DILocalVariable(name: "block", arg: 3, scope: !1213, file: !21, line: 174, type: !8)
!1223 = !DILocation(line: 174, column: 77, scope: !1213)
!1224 = !DILocalVariable(name: "stride", arg: 4, scope: !1213, file: !21, line: 174, type: !12)
!1225 = !DILocation(line: 174, column: 88, scope: !1213)
!1226 = !DILocalVariable(name: "nnzc", arg: 5, scope: !1213, file: !21, line: 174, type: !1217)
!1227 = !DILocation(line: 174, column: 110, scope: !1213)
!1228 = !DILocalVariable(name: "i", scope: !1213, file: !21, line: 175, type: !12)
!1229 = !DILocation(line: 175, column: 9, scope: !1213)
!1230 = !DILocation(line: 176, column: 10, scope: !1231)
!1231 = distinct !DILexicalBlock(scope: !1213, file: !21, line: 176, column: 5)
!1232 = !DILocation(line: 176, column: 9, scope: !1231)
!1233 = !DILocation(line: 176, column: 14, scope: !1234)
!1234 = !DILexicalBlockFile(scope: !1235, file: !21, discriminator: 1)
!1235 = distinct !DILexicalBlock(scope: !1231, file: !21, line: 176, column: 5)
!1236 = !DILocation(line: 176, column: 15, scope: !1234)
!1237 = !DILocation(line: 176, column: 5, scope: !1234)
!1238 = !DILocalVariable(name: "nnz", scope: !1239, file: !21, line: 177, type: !12)
!1239 = distinct !DILexicalBlock(scope: !1235, file: !21, line: 176, column: 24)
!1240 = !DILocation(line: 177, column: 13, scope: !1239)
!1241 = !DILocation(line: 177, column: 31, scope: !1239)
!1242 = !DILocation(line: 177, column: 25, scope: !1239)
!1243 = !DILocation(line: 177, column: 19, scope: !1239)
!1244 = !DILocation(line: 178, column: 12, scope: !1245)
!1245 = distinct !DILexicalBlock(scope: !1239, file: !21, line: 178, column: 12)
!1246 = !DILocation(line: 178, column: 12, scope: !1239)
!1247 = !DILocation(line: 179, column: 16, scope: !1248)
!1248 = distinct !DILexicalBlock(scope: !1249, file: !21, line: 179, column: 16)
!1249 = distinct !DILexicalBlock(scope: !1245, file: !21, line: 178, column: 16)
!1250 = !DILocation(line: 179, column: 19, scope: !1248)
!1251 = !DILocation(line: 179, column: 23, scope: !1248)
!1252 = !DILocation(line: 179, column: 44, scope: !1253)
!1253 = !DILexicalBlockFile(scope: !1248, file: !21, discriminator: 1)
!1254 = !DILocation(line: 179, column: 45, scope: !1253)
!1255 = !DILocation(line: 179, column: 26, scope: !1253)
!1256 = !DILocation(line: 179, column: 37, scope: !1253)
!1257 = !DILocation(line: 179, column: 16, scope: !1253)
!1258 = !DILocation(line: 179, column: 75, scope: !1259)
!1259 = !DILexicalBlockFile(scope: !1248, file: !21, discriminator: 2)
!1260 = !DILocation(line: 179, column: 94, scope: !1259)
!1261 = !DILocation(line: 179, column: 81, scope: !1259)
!1262 = !DILocation(line: 179, column: 79, scope: !1259)
!1263 = !DILocation(line: 179, column: 98, scope: !1259)
!1264 = !DILocation(line: 179, column: 106, scope: !1259)
!1265 = !DILocation(line: 179, column: 107, scope: !1259)
!1266 = !DILocation(line: 179, column: 110, scope: !1259)
!1267 = !DILocation(line: 179, column: 104, scope: !1259)
!1268 = !DILocation(line: 179, column: 128, scope: !1259)
!1269 = !DILocation(line: 179, column: 51, scope: !1259)
!1270 = !DILocation(line: 180, column: 39, scope: !1248)
!1271 = !DILocation(line: 180, column: 58, scope: !1248)
!1272 = !DILocation(line: 180, column: 45, scope: !1248)
!1273 = !DILocation(line: 180, column: 43, scope: !1248)
!1274 = !DILocation(line: 180, column: 62, scope: !1248)
!1275 = !DILocation(line: 180, column: 70, scope: !1248)
!1276 = !DILocation(line: 180, column: 71, scope: !1248)
!1277 = !DILocation(line: 180, column: 74, scope: !1248)
!1278 = !DILocation(line: 180, column: 68, scope: !1248)
!1279 = !DILocation(line: 180, column: 92, scope: !1248)
!1280 = !DILocation(line: 180, column: 18, scope: !1248)
!1281 = !DILocation(line: 181, column: 9, scope: !1249)
!1282 = !DILocation(line: 182, column: 5, scope: !1239)
!1283 = !DILocation(line: 176, column: 21, scope: !1284)
!1284 = !DILexicalBlockFile(scope: !1235, file: !21, discriminator: 2)
!1285 = !DILocation(line: 176, column: 5, scope: !1284)
!1286 = distinct !{!1286, !1287}
!1287 = !DILocation(line: 176, column: 5, scope: !1213)
!1288 = !DILocation(line: 183, column: 1, scope: !1213)
!1289 = distinct !DISubprogram(name: "ff_h264_idct_add16intra_8_c", scope: !21, file: !21, line: 185, type: !1214, isLocal: false, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1290 = !DILocalVariable(name: "dst", arg: 1, scope: !1289, file: !21, line: 185, type: !4)
!1291 = !DILocation(line: 185, column: 43, scope: !1289)
!1292 = !DILocalVariable(name: "block_offset", arg: 2, scope: !1289, file: !21, line: 185, type: !1216)
!1293 = !DILocation(line: 185, column: 59, scope: !1289)
!1294 = !DILocalVariable(name: "block", arg: 3, scope: !1289, file: !21, line: 185, type: !8)
!1295 = !DILocation(line: 185, column: 82, scope: !1289)
!1296 = !DILocalVariable(name: "stride", arg: 4, scope: !1289, file: !21, line: 185, type: !12)
!1297 = !DILocation(line: 185, column: 93, scope: !1289)
!1298 = !DILocalVariable(name: "nnzc", arg: 5, scope: !1289, file: !21, line: 185, type: !1217)
!1299 = !DILocation(line: 185, column: 115, scope: !1289)
!1300 = !DILocalVariable(name: "i", scope: !1289, file: !21, line: 186, type: !12)
!1301 = !DILocation(line: 186, column: 9, scope: !1289)
!1302 = !DILocation(line: 187, column: 10, scope: !1303)
!1303 = distinct !DILexicalBlock(scope: !1289, file: !21, line: 187, column: 5)
!1304 = !DILocation(line: 187, column: 9, scope: !1303)
!1305 = !DILocation(line: 187, column: 14, scope: !1306)
!1306 = !DILexicalBlockFile(scope: !1307, file: !21, discriminator: 1)
!1307 = distinct !DILexicalBlock(scope: !1303, file: !21, line: 187, column: 5)
!1308 = !DILocation(line: 187, column: 15, scope: !1306)
!1309 = !DILocation(line: 187, column: 5, scope: !1306)
!1310 = !DILocation(line: 188, column: 24, scope: !1311)
!1311 = distinct !DILexicalBlock(scope: !1312, file: !21, line: 188, column: 12)
!1312 = distinct !DILexicalBlock(scope: !1307, file: !21, line: 187, column: 24)
!1313 = !DILocation(line: 188, column: 18, scope: !1311)
!1314 = !DILocation(line: 188, column: 12, scope: !1311)
!1315 = !DILocation(line: 188, column: 12, scope: !1312)
!1316 = !DILocation(line: 188, column: 51, scope: !1317)
!1317 = !DILexicalBlockFile(scope: !1311, file: !21, discriminator: 1)
!1318 = !DILocation(line: 188, column: 70, scope: !1317)
!1319 = !DILocation(line: 188, column: 57, scope: !1317)
!1320 = !DILocation(line: 188, column: 55, scope: !1317)
!1321 = !DILocation(line: 188, column: 74, scope: !1317)
!1322 = !DILocation(line: 188, column: 82, scope: !1317)
!1323 = !DILocation(line: 188, column: 83, scope: !1317)
!1324 = !DILocation(line: 188, column: 86, scope: !1317)
!1325 = !DILocation(line: 188, column: 80, scope: !1317)
!1326 = !DILocation(line: 188, column: 104, scope: !1317)
!1327 = !DILocation(line: 188, column: 30, scope: !1317)
!1328 = !DILocation(line: 189, column: 35, scope: !1329)
!1329 = distinct !DILexicalBlock(scope: !1311, file: !21, line: 189, column: 17)
!1330 = !DILocation(line: 189, column: 36, scope: !1329)
!1331 = !DILocation(line: 189, column: 17, scope: !1329)
!1332 = !DILocation(line: 189, column: 28, scope: !1329)
!1333 = !DILocation(line: 189, column: 17, scope: !1311)
!1334 = !DILocation(line: 189, column: 66, scope: !1335)
!1335 = !DILexicalBlockFile(scope: !1329, file: !21, discriminator: 1)
!1336 = !DILocation(line: 189, column: 85, scope: !1335)
!1337 = !DILocation(line: 189, column: 72, scope: !1335)
!1338 = !DILocation(line: 189, column: 70, scope: !1335)
!1339 = !DILocation(line: 189, column: 89, scope: !1335)
!1340 = !DILocation(line: 189, column: 97, scope: !1335)
!1341 = !DILocation(line: 189, column: 98, scope: !1335)
!1342 = !DILocation(line: 189, column: 101, scope: !1335)
!1343 = !DILocation(line: 189, column: 95, scope: !1335)
!1344 = !DILocation(line: 189, column: 119, scope: !1335)
!1345 = !DILocation(line: 189, column: 42, scope: !1335)
!1346 = !DILocation(line: 190, column: 5, scope: !1312)
!1347 = !DILocation(line: 187, column: 21, scope: !1348)
!1348 = !DILexicalBlockFile(scope: !1307, file: !21, discriminator: 2)
!1349 = !DILocation(line: 187, column: 5, scope: !1348)
!1350 = distinct !{!1350, !1351}
!1351 = !DILocation(line: 187, column: 5, scope: !1289)
!1352 = !DILocation(line: 191, column: 1, scope: !1289)
!1353 = distinct !DISubprogram(name: "ff_h264_idct8_add4_8_c", scope: !21, file: !21, line: 193, type: !1214, isLocal: false, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1354 = !DILocalVariable(name: "dst", arg: 1, scope: !1353, file: !21, line: 193, type: !4)
!1355 = !DILocation(line: 193, column: 38, scope: !1353)
!1356 = !DILocalVariable(name: "block_offset", arg: 2, scope: !1353, file: !21, line: 193, type: !1216)
!1357 = !DILocation(line: 193, column: 54, scope: !1353)
!1358 = !DILocalVariable(name: "block", arg: 3, scope: !1353, file: !21, line: 193, type: !8)
!1359 = !DILocation(line: 193, column: 77, scope: !1353)
!1360 = !DILocalVariable(name: "stride", arg: 4, scope: !1353, file: !21, line: 193, type: !12)
!1361 = !DILocation(line: 193, column: 88, scope: !1353)
!1362 = !DILocalVariable(name: "nnzc", arg: 5, scope: !1353, file: !21, line: 193, type: !1217)
!1363 = !DILocation(line: 193, column: 110, scope: !1353)
!1364 = !DILocalVariable(name: "i", scope: !1353, file: !21, line: 194, type: !12)
!1365 = !DILocation(line: 194, column: 9, scope: !1353)
!1366 = !DILocation(line: 195, column: 10, scope: !1367)
!1367 = distinct !DILexicalBlock(scope: !1353, file: !21, line: 195, column: 5)
!1368 = !DILocation(line: 195, column: 9, scope: !1367)
!1369 = !DILocation(line: 195, column: 14, scope: !1370)
!1370 = !DILexicalBlockFile(scope: !1371, file: !21, discriminator: 1)
!1371 = distinct !DILexicalBlock(scope: !1367, file: !21, line: 195, column: 5)
!1372 = !DILocation(line: 195, column: 15, scope: !1370)
!1373 = !DILocation(line: 195, column: 5, scope: !1370)
!1374 = !DILocalVariable(name: "nnz", scope: !1375, file: !21, line: 196, type: !12)
!1375 = distinct !DILexicalBlock(scope: !1371, file: !21, line: 195, column: 25)
!1376 = !DILocation(line: 196, column: 13, scope: !1375)
!1377 = !DILocation(line: 196, column: 31, scope: !1375)
!1378 = !DILocation(line: 196, column: 25, scope: !1375)
!1379 = !DILocation(line: 196, column: 19, scope: !1375)
!1380 = !DILocation(line: 197, column: 12, scope: !1381)
!1381 = distinct !DILexicalBlock(scope: !1375, file: !21, line: 197, column: 12)
!1382 = !DILocation(line: 197, column: 12, scope: !1375)
!1383 = !DILocation(line: 198, column: 16, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1385, file: !21, line: 198, column: 16)
!1385 = distinct !DILexicalBlock(scope: !1381, file: !21, line: 197, column: 16)
!1386 = !DILocation(line: 198, column: 19, scope: !1384)
!1387 = !DILocation(line: 198, column: 23, scope: !1384)
!1388 = !DILocation(line: 198, column: 44, scope: !1389)
!1389 = !DILexicalBlockFile(scope: !1384, file: !21, discriminator: 1)
!1390 = !DILocation(line: 198, column: 45, scope: !1389)
!1391 = !DILocation(line: 198, column: 26, scope: !1389)
!1392 = !DILocation(line: 198, column: 37, scope: !1389)
!1393 = !DILocation(line: 198, column: 16, scope: !1389)
!1394 = !DILocation(line: 198, column: 76, scope: !1395)
!1395 = !DILexicalBlockFile(scope: !1384, file: !21, discriminator: 2)
!1396 = !DILocation(line: 198, column: 95, scope: !1395)
!1397 = !DILocation(line: 198, column: 82, scope: !1395)
!1398 = !DILocation(line: 198, column: 80, scope: !1395)
!1399 = !DILocation(line: 198, column: 99, scope: !1395)
!1400 = !DILocation(line: 198, column: 107, scope: !1395)
!1401 = !DILocation(line: 198, column: 108, scope: !1395)
!1402 = !DILocation(line: 198, column: 111, scope: !1395)
!1403 = !DILocation(line: 198, column: 105, scope: !1395)
!1404 = !DILocation(line: 198, column: 129, scope: !1395)
!1405 = !DILocation(line: 198, column: 51, scope: !1395)
!1406 = !DILocation(line: 199, column: 40, scope: !1384)
!1407 = !DILocation(line: 199, column: 59, scope: !1384)
!1408 = !DILocation(line: 199, column: 46, scope: !1384)
!1409 = !DILocation(line: 199, column: 44, scope: !1384)
!1410 = !DILocation(line: 199, column: 63, scope: !1384)
!1411 = !DILocation(line: 199, column: 71, scope: !1384)
!1412 = !DILocation(line: 199, column: 72, scope: !1384)
!1413 = !DILocation(line: 199, column: 75, scope: !1384)
!1414 = !DILocation(line: 199, column: 69, scope: !1384)
!1415 = !DILocation(line: 199, column: 93, scope: !1384)
!1416 = !DILocation(line: 199, column: 18, scope: !1384)
!1417 = !DILocation(line: 200, column: 9, scope: !1385)
!1418 = !DILocation(line: 201, column: 5, scope: !1375)
!1419 = !DILocation(line: 195, column: 21, scope: !1420)
!1420 = !DILexicalBlockFile(scope: !1371, file: !21, discriminator: 2)
!1421 = !DILocation(line: 195, column: 5, scope: !1420)
!1422 = distinct !{!1422, !1423}
!1423 = !DILocation(line: 195, column: 5, scope: !1353)
!1424 = !DILocation(line: 202, column: 1, scope: !1353)
!1425 = distinct !DISubprogram(name: "ff_h264_idct_add8_8_c", scope: !21, file: !21, line: 204, type: !1426, isLocal: false, isDefinition: true, scopeLine: 204, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{null, !1428, !1216, !8, !12, !1217}
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!1429 = !DILocalVariable(name: "dest", arg: 1, scope: !1425, file: !21, line: 204, type: !1428)
!1430 = !DILocation(line: 204, column: 38, scope: !1425)
!1431 = !DILocalVariable(name: "block_offset", arg: 2, scope: !1425, file: !21, line: 204, type: !1216)
!1432 = !DILocation(line: 204, column: 55, scope: !1425)
!1433 = !DILocalVariable(name: "block", arg: 3, scope: !1425, file: !21, line: 204, type: !8)
!1434 = !DILocation(line: 204, column: 78, scope: !1425)
!1435 = !DILocalVariable(name: "stride", arg: 4, scope: !1425, file: !21, line: 204, type: !12)
!1436 = !DILocation(line: 204, column: 89, scope: !1425)
!1437 = !DILocalVariable(name: "nnzc", arg: 5, scope: !1425, file: !21, line: 204, type: !1217)
!1438 = !DILocation(line: 204, column: 111, scope: !1425)
!1439 = !DILocalVariable(name: "i", scope: !1425, file: !21, line: 205, type: !12)
!1440 = !DILocation(line: 205, column: 9, scope: !1425)
!1441 = !DILocalVariable(name: "j", scope: !1425, file: !21, line: 205, type: !12)
!1442 = !DILocation(line: 205, column: 12, scope: !1425)
!1443 = !DILocation(line: 206, column: 10, scope: !1444)
!1444 = distinct !DILexicalBlock(scope: !1425, file: !21, line: 206, column: 5)
!1445 = !DILocation(line: 206, column: 9, scope: !1444)
!1446 = !DILocation(line: 206, column: 14, scope: !1447)
!1447 = !DILexicalBlockFile(scope: !1448, file: !21, discriminator: 1)
!1448 = distinct !DILexicalBlock(scope: !1444, file: !21, line: 206, column: 5)
!1449 = !DILocation(line: 206, column: 15, scope: !1447)
!1450 = !DILocation(line: 206, column: 5, scope: !1447)
!1451 = !DILocation(line: 207, column: 15, scope: !1452)
!1452 = distinct !DILexicalBlock(scope: !1453, file: !21, line: 207, column: 9)
!1453 = distinct !DILexicalBlock(scope: !1448, file: !21, line: 206, column: 23)
!1454 = !DILocation(line: 207, column: 16, scope: !1452)
!1455 = !DILocation(line: 207, column: 14, scope: !1452)
!1456 = !DILocation(line: 207, column: 13, scope: !1452)
!1457 = !DILocation(line: 207, column: 21, scope: !1458)
!1458 = !DILexicalBlockFile(scope: !1459, file: !21, discriminator: 1)
!1459 = distinct !DILexicalBlock(scope: !1452, file: !21, line: 207, column: 9)
!1460 = !DILocation(line: 207, column: 23, scope: !1458)
!1461 = !DILocation(line: 207, column: 24, scope: !1458)
!1462 = !DILocation(line: 207, column: 27, scope: !1458)
!1463 = !DILocation(line: 207, column: 22, scope: !1458)
!1464 = !DILocation(line: 207, column: 9, scope: !1458)
!1465 = !DILocation(line: 208, column: 28, scope: !1466)
!1466 = distinct !DILexicalBlock(scope: !1467, file: !21, line: 208, column: 16)
!1467 = distinct !DILexicalBlock(scope: !1459, file: !21, line: 207, column: 35)
!1468 = !DILocation(line: 208, column: 22, scope: !1466)
!1469 = !DILocation(line: 208, column: 16, scope: !1466)
!1470 = !DILocation(line: 208, column: 16, scope: !1467)
!1471 = !DILocation(line: 209, column: 43, scope: !1466)
!1472 = !DILocation(line: 209, column: 44, scope: !1466)
!1473 = !DILocation(line: 209, column: 38, scope: !1466)
!1474 = !DILocation(line: 209, column: 63, scope: !1466)
!1475 = !DILocation(line: 209, column: 50, scope: !1466)
!1476 = !DILocation(line: 209, column: 48, scope: !1466)
!1477 = !DILocation(line: 209, column: 67, scope: !1466)
!1478 = !DILocation(line: 209, column: 75, scope: !1466)
!1479 = !DILocation(line: 209, column: 76, scope: !1466)
!1480 = !DILocation(line: 209, column: 79, scope: !1466)
!1481 = !DILocation(line: 209, column: 73, scope: !1466)
!1482 = !DILocation(line: 209, column: 97, scope: !1466)
!1483 = !DILocation(line: 209, column: 17, scope: !1466)
!1484 = !DILocation(line: 210, column: 39, scope: !1485)
!1485 = distinct !DILexicalBlock(scope: !1466, file: !21, line: 210, column: 21)
!1486 = !DILocation(line: 210, column: 40, scope: !1485)
!1487 = !DILocation(line: 210, column: 21, scope: !1485)
!1488 = !DILocation(line: 210, column: 32, scope: !1485)
!1489 = !DILocation(line: 210, column: 21, scope: !1466)
!1490 = !DILocation(line: 211, column: 46, scope: !1485)
!1491 = !DILocation(line: 211, column: 47, scope: !1485)
!1492 = !DILocation(line: 211, column: 41, scope: !1485)
!1493 = !DILocation(line: 211, column: 66, scope: !1485)
!1494 = !DILocation(line: 211, column: 53, scope: !1485)
!1495 = !DILocation(line: 211, column: 51, scope: !1485)
!1496 = !DILocation(line: 211, column: 70, scope: !1485)
!1497 = !DILocation(line: 211, column: 78, scope: !1485)
!1498 = !DILocation(line: 211, column: 79, scope: !1485)
!1499 = !DILocation(line: 211, column: 82, scope: !1485)
!1500 = !DILocation(line: 211, column: 76, scope: !1485)
!1501 = !DILocation(line: 211, column: 100, scope: !1485)
!1502 = !DILocation(line: 211, column: 17, scope: !1485)
!1503 = !DILocation(line: 212, column: 9, scope: !1467)
!1504 = !DILocation(line: 207, column: 32, scope: !1505)
!1505 = !DILexicalBlockFile(scope: !1459, file: !21, discriminator: 2)
!1506 = !DILocation(line: 207, column: 9, scope: !1505)
!1507 = distinct !{!1507, !1508}
!1508 = !DILocation(line: 207, column: 9, scope: !1453)
!1509 = !DILocation(line: 213, column: 5, scope: !1453)
!1510 = !DILocation(line: 206, column: 20, scope: !1511)
!1511 = !DILexicalBlockFile(scope: !1448, file: !21, discriminator: 2)
!1512 = !DILocation(line: 206, column: 5, scope: !1511)
!1513 = distinct !{!1513, !1514}
!1514 = !DILocation(line: 206, column: 5, scope: !1425)
!1515 = !DILocation(line: 214, column: 1, scope: !1425)
!1516 = distinct !DISubprogram(name: "ff_h264_idct_add8_422_8_c", scope: !21, file: !21, line: 216, type: !1426, isLocal: false, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!1517 = !DILocalVariable(name: "dest", arg: 1, scope: !1516, file: !21, line: 216, type: !1428)
!1518 = !DILocation(line: 216, column: 42, scope: !1516)
!1519 = !DILocalVariable(name: "block_offset", arg: 2, scope: !1516, file: !21, line: 216, type: !1216)
!1520 = !DILocation(line: 216, column: 59, scope: !1516)
!1521 = !DILocalVariable(name: "block", arg: 3, scope: !1516, file: !21, line: 216, type: !8)
!1522 = !DILocation(line: 216, column: 82, scope: !1516)
!1523 = !DILocalVariable(name: "stride", arg: 4, scope: !1516, file: !21, line: 216, type: !12)
!1524 = !DILocation(line: 216, column: 93, scope: !1516)
!1525 = !DILocalVariable(name: "nnzc", arg: 5, scope: !1516, file: !21, line: 216, type: !1217)
!1526 = !DILocation(line: 216, column: 115, scope: !1516)
!1527 = !DILocalVariable(name: "i", scope: !1516, file: !21, line: 217, type: !12)
!1528 = !DILocation(line: 217, column: 9, scope: !1516)
!1529 = !DILocalVariable(name: "j", scope: !1516, file: !21, line: 217, type: !12)
!1530 = !DILocation(line: 217, column: 12, scope: !1516)
!1531 = !DILocation(line: 219, column: 10, scope: !1532)
!1532 = distinct !DILexicalBlock(scope: !1516, file: !21, line: 219, column: 5)
!1533 = !DILocation(line: 219, column: 9, scope: !1532)
!1534 = !DILocation(line: 219, column: 14, scope: !1535)
!1535 = !DILexicalBlockFile(scope: !1536, file: !21, discriminator: 1)
!1536 = distinct !DILexicalBlock(scope: !1532, file: !21, line: 219, column: 5)
!1537 = !DILocation(line: 219, column: 15, scope: !1535)
!1538 = !DILocation(line: 219, column: 5, scope: !1535)
!1539 = !DILocation(line: 220, column: 15, scope: !1540)
!1540 = distinct !DILexicalBlock(scope: !1541, file: !21, line: 220, column: 9)
!1541 = distinct !DILexicalBlock(scope: !1536, file: !21, line: 219, column: 23)
!1542 = !DILocation(line: 220, column: 16, scope: !1540)
!1543 = !DILocation(line: 220, column: 14, scope: !1540)
!1544 = !DILocation(line: 220, column: 13, scope: !1540)
!1545 = !DILocation(line: 220, column: 21, scope: !1546)
!1546 = !DILexicalBlockFile(scope: !1547, file: !21, discriminator: 1)
!1547 = distinct !DILexicalBlock(scope: !1540, file: !21, line: 220, column: 9)
!1548 = !DILocation(line: 220, column: 23, scope: !1546)
!1549 = !DILocation(line: 220, column: 24, scope: !1546)
!1550 = !DILocation(line: 220, column: 27, scope: !1546)
!1551 = !DILocation(line: 220, column: 22, scope: !1546)
!1552 = !DILocation(line: 220, column: 9, scope: !1546)
!1553 = !DILocation(line: 221, column: 28, scope: !1554)
!1554 = distinct !DILexicalBlock(scope: !1555, file: !21, line: 221, column: 16)
!1555 = distinct !DILexicalBlock(scope: !1547, file: !21, line: 220, column: 35)
!1556 = !DILocation(line: 221, column: 22, scope: !1554)
!1557 = !DILocation(line: 221, column: 16, scope: !1554)
!1558 = !DILocation(line: 221, column: 16, scope: !1555)
!1559 = !DILocation(line: 222, column: 43, scope: !1554)
!1560 = !DILocation(line: 222, column: 44, scope: !1554)
!1561 = !DILocation(line: 222, column: 38, scope: !1554)
!1562 = !DILocation(line: 222, column: 63, scope: !1554)
!1563 = !DILocation(line: 222, column: 50, scope: !1554)
!1564 = !DILocation(line: 222, column: 48, scope: !1554)
!1565 = !DILocation(line: 222, column: 67, scope: !1554)
!1566 = !DILocation(line: 222, column: 75, scope: !1554)
!1567 = !DILocation(line: 222, column: 76, scope: !1554)
!1568 = !DILocation(line: 222, column: 79, scope: !1554)
!1569 = !DILocation(line: 222, column: 73, scope: !1554)
!1570 = !DILocation(line: 222, column: 97, scope: !1554)
!1571 = !DILocation(line: 222, column: 17, scope: !1554)
!1572 = !DILocation(line: 223, column: 39, scope: !1573)
!1573 = distinct !DILexicalBlock(scope: !1554, file: !21, line: 223, column: 21)
!1574 = !DILocation(line: 223, column: 40, scope: !1573)
!1575 = !DILocation(line: 223, column: 21, scope: !1573)
!1576 = !DILocation(line: 223, column: 32, scope: !1573)
!1577 = !DILocation(line: 223, column: 21, scope: !1554)
!1578 = !DILocation(line: 224, column: 46, scope: !1573)
!1579 = !DILocation(line: 224, column: 47, scope: !1573)
!1580 = !DILocation(line: 224, column: 41, scope: !1573)
!1581 = !DILocation(line: 224, column: 66, scope: !1573)
!1582 = !DILocation(line: 224, column: 53, scope: !1573)
!1583 = !DILocation(line: 224, column: 51, scope: !1573)
!1584 = !DILocation(line: 224, column: 70, scope: !1573)
!1585 = !DILocation(line: 224, column: 78, scope: !1573)
!1586 = !DILocation(line: 224, column: 79, scope: !1573)
!1587 = !DILocation(line: 224, column: 82, scope: !1573)
!1588 = !DILocation(line: 224, column: 76, scope: !1573)
!1589 = !DILocation(line: 224, column: 100, scope: !1573)
!1590 = !DILocation(line: 224, column: 17, scope: !1573)
!1591 = !DILocation(line: 225, column: 9, scope: !1555)
!1592 = !DILocation(line: 220, column: 32, scope: !1593)
!1593 = !DILexicalBlockFile(scope: !1547, file: !21, discriminator: 2)
!1594 = !DILocation(line: 220, column: 9, scope: !1593)
!1595 = distinct !{!1595, !1596}
!1596 = !DILocation(line: 220, column: 9, scope: !1541)
!1597 = !DILocation(line: 226, column: 5, scope: !1541)
!1598 = !DILocation(line: 219, column: 20, scope: !1599)
!1599 = !DILexicalBlockFile(scope: !1536, file: !21, discriminator: 2)
!1600 = !DILocation(line: 219, column: 5, scope: !1599)
!1601 = distinct !{!1601, !1602}
!1602 = !DILocation(line: 219, column: 5, scope: !1516)
!1603 = !DILocation(line: 228, column: 10, scope: !1604)
!1604 = distinct !DILexicalBlock(scope: !1516, file: !21, line: 228, column: 5)
!1605 = !DILocation(line: 228, column: 9, scope: !1604)
!1606 = !DILocation(line: 228, column: 14, scope: !1607)
!1607 = !DILexicalBlockFile(scope: !1608, file: !21, discriminator: 1)
!1608 = distinct !DILexicalBlock(scope: !1604, file: !21, line: 228, column: 5)
!1609 = !DILocation(line: 228, column: 15, scope: !1607)
!1610 = !DILocation(line: 228, column: 5, scope: !1607)
!1611 = !DILocation(line: 229, column: 15, scope: !1612)
!1612 = distinct !DILexicalBlock(scope: !1613, file: !21, line: 229, column: 9)
!1613 = distinct !DILexicalBlock(scope: !1608, file: !21, line: 228, column: 23)
!1614 = !DILocation(line: 229, column: 16, scope: !1612)
!1615 = !DILocation(line: 229, column: 19, scope: !1612)
!1616 = !DILocation(line: 229, column: 14, scope: !1612)
!1617 = !DILocation(line: 229, column: 13, scope: !1612)
!1618 = !DILocation(line: 229, column: 23, scope: !1619)
!1619 = !DILexicalBlockFile(scope: !1620, file: !21, discriminator: 1)
!1620 = distinct !DILexicalBlock(scope: !1612, file: !21, line: 229, column: 9)
!1621 = !DILocation(line: 229, column: 25, scope: !1619)
!1622 = !DILocation(line: 229, column: 26, scope: !1619)
!1623 = !DILocation(line: 229, column: 29, scope: !1619)
!1624 = !DILocation(line: 229, column: 24, scope: !1619)
!1625 = !DILocation(line: 229, column: 9, scope: !1619)
!1626 = !DILocation(line: 230, column: 28, scope: !1627)
!1627 = distinct !DILexicalBlock(scope: !1628, file: !21, line: 230, column: 16)
!1628 = distinct !DILexicalBlock(scope: !1620, file: !21, line: 229, column: 37)
!1629 = !DILocation(line: 230, column: 29, scope: !1627)
!1630 = !DILocation(line: 230, column: 22, scope: !1627)
!1631 = !DILocation(line: 230, column: 16, scope: !1627)
!1632 = !DILocation(line: 230, column: 16, scope: !1628)
!1633 = !DILocation(line: 231, column: 43, scope: !1627)
!1634 = !DILocation(line: 231, column: 44, scope: !1627)
!1635 = !DILocation(line: 231, column: 38, scope: !1627)
!1636 = !DILocation(line: 231, column: 63, scope: !1627)
!1637 = !DILocation(line: 231, column: 64, scope: !1627)
!1638 = !DILocation(line: 231, column: 50, scope: !1627)
!1639 = !DILocation(line: 231, column: 48, scope: !1627)
!1640 = !DILocation(line: 231, column: 69, scope: !1627)
!1641 = !DILocation(line: 231, column: 77, scope: !1627)
!1642 = !DILocation(line: 231, column: 78, scope: !1627)
!1643 = !DILocation(line: 231, column: 81, scope: !1627)
!1644 = !DILocation(line: 231, column: 75, scope: !1627)
!1645 = !DILocation(line: 231, column: 99, scope: !1627)
!1646 = !DILocation(line: 231, column: 17, scope: !1627)
!1647 = !DILocation(line: 232, column: 39, scope: !1648)
!1648 = distinct !DILexicalBlock(scope: !1627, file: !21, line: 232, column: 21)
!1649 = !DILocation(line: 232, column: 40, scope: !1648)
!1650 = !DILocation(line: 232, column: 21, scope: !1648)
!1651 = !DILocation(line: 232, column: 32, scope: !1648)
!1652 = !DILocation(line: 232, column: 21, scope: !1627)
!1653 = !DILocation(line: 233, column: 46, scope: !1648)
!1654 = !DILocation(line: 233, column: 47, scope: !1648)
!1655 = !DILocation(line: 233, column: 41, scope: !1648)
!1656 = !DILocation(line: 233, column: 66, scope: !1648)
!1657 = !DILocation(line: 233, column: 67, scope: !1648)
!1658 = !DILocation(line: 233, column: 53, scope: !1648)
!1659 = !DILocation(line: 233, column: 51, scope: !1648)
!1660 = !DILocation(line: 233, column: 72, scope: !1648)
!1661 = !DILocation(line: 233, column: 80, scope: !1648)
!1662 = !DILocation(line: 233, column: 81, scope: !1648)
!1663 = !DILocation(line: 233, column: 84, scope: !1648)
!1664 = !DILocation(line: 233, column: 78, scope: !1648)
!1665 = !DILocation(line: 233, column: 102, scope: !1648)
!1666 = !DILocation(line: 233, column: 17, scope: !1648)
!1667 = !DILocation(line: 234, column: 9, scope: !1628)
!1668 = !DILocation(line: 229, column: 34, scope: !1669)
!1669 = !DILexicalBlockFile(scope: !1620, file: !21, discriminator: 2)
!1670 = !DILocation(line: 229, column: 9, scope: !1669)
!1671 = distinct !{!1671, !1672}
!1672 = !DILocation(line: 229, column: 9, scope: !1613)
!1673 = !DILocation(line: 235, column: 5, scope: !1613)
!1674 = !DILocation(line: 228, column: 20, scope: !1675)
!1675 = !DILexicalBlockFile(scope: !1608, file: !21, discriminator: 2)
!1676 = !DILocation(line: 228, column: 5, scope: !1675)
!1677 = distinct !{!1677, !1678}
!1678 = !DILocation(line: 228, column: 5, scope: !1516)
!1679 = !DILocation(line: 236, column: 1, scope: !1516)
!1680 = !DILocalVariable(name: "_output", arg: 1, scope: !20, file: !21, line: 242, type: !8)
!1681 = !DILocation(line: 242, column: 48, scope: !20)
!1682 = !DILocalVariable(name: "_input", arg: 2, scope: !20, file: !21, line: 242, type: !8)
!1683 = !DILocation(line: 242, column: 66, scope: !20)
!1684 = !DILocalVariable(name: "qmul", arg: 3, scope: !20, file: !21, line: 242, type: !12)
!1685 = !DILocation(line: 242, column: 78, scope: !20)
!1686 = !DILocalVariable(name: "i", scope: !20, file: !21, line: 244, type: !12)
!1687 = !DILocation(line: 244, column: 9, scope: !20)
!1688 = !DILocalVariable(name: "temp", scope: !20, file: !21, line: 245, type: !1689)
!1689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 512, align: 32, elements: !1690)
!1690 = !{!1691}
!1691 = !DISubrange(count: 16)
!1692 = !DILocation(line: 245, column: 9, scope: !20)
!1693 = !DILocalVariable(name: "input", scope: !20, file: !21, line: 247, type: !8)
!1694 = !DILocation(line: 247, column: 14, scope: !20)
!1695 = !DILocation(line: 247, column: 32, scope: !20)
!1696 = !DILocalVariable(name: "output", scope: !20, file: !21, line: 248, type: !8)
!1697 = !DILocation(line: 248, column: 14, scope: !20)
!1698 = !DILocation(line: 248, column: 33, scope: !20)
!1699 = !DILocation(line: 250, column: 10, scope: !1700)
!1700 = distinct !DILexicalBlock(scope: !20, file: !21, line: 250, column: 5)
!1701 = !DILocation(line: 250, column: 9, scope: !1700)
!1702 = !DILocation(line: 250, column: 14, scope: !1703)
!1703 = !DILexicalBlockFile(scope: !1704, file: !21, discriminator: 1)
!1704 = distinct !DILexicalBlock(scope: !1700, file: !21, line: 250, column: 5)
!1705 = !DILocation(line: 250, column: 15, scope: !1703)
!1706 = !DILocation(line: 250, column: 5, scope: !1703)
!1707 = !DILocalVariable(name: "z0", scope: !1708, file: !21, line: 251, type: !468)
!1708 = distinct !DILexicalBlock(scope: !1704, file: !21, line: 250, column: 23)
!1709 = !DILocation(line: 251, column: 19, scope: !1708)
!1710 = !DILocation(line: 251, column: 31, scope: !1708)
!1711 = !DILocation(line: 251, column: 30, scope: !1708)
!1712 = !DILocation(line: 251, column: 32, scope: !1708)
!1713 = !DILocation(line: 251, column: 23, scope: !1708)
!1714 = !DILocation(line: 251, column: 46, scope: !1708)
!1715 = !DILocation(line: 251, column: 45, scope: !1708)
!1716 = !DILocation(line: 251, column: 47, scope: !1708)
!1717 = !DILocation(line: 251, column: 38, scope: !1708)
!1718 = !DILocation(line: 251, column: 36, scope: !1708)
!1719 = !DILocalVariable(name: "z1", scope: !1708, file: !21, line: 252, type: !468)
!1720 = !DILocation(line: 252, column: 19, scope: !1708)
!1721 = !DILocation(line: 252, column: 31, scope: !1708)
!1722 = !DILocation(line: 252, column: 30, scope: !1708)
!1723 = !DILocation(line: 252, column: 32, scope: !1708)
!1724 = !DILocation(line: 252, column: 23, scope: !1708)
!1725 = !DILocation(line: 252, column: 46, scope: !1708)
!1726 = !DILocation(line: 252, column: 45, scope: !1708)
!1727 = !DILocation(line: 252, column: 47, scope: !1708)
!1728 = !DILocation(line: 252, column: 38, scope: !1708)
!1729 = !DILocation(line: 252, column: 36, scope: !1708)
!1730 = !DILocalVariable(name: "z2", scope: !1708, file: !21, line: 253, type: !468)
!1731 = !DILocation(line: 253, column: 19, scope: !1708)
!1732 = !DILocation(line: 253, column: 31, scope: !1708)
!1733 = !DILocation(line: 253, column: 30, scope: !1708)
!1734 = !DILocation(line: 253, column: 32, scope: !1708)
!1735 = !DILocation(line: 253, column: 23, scope: !1708)
!1736 = !DILocation(line: 253, column: 46, scope: !1708)
!1737 = !DILocation(line: 253, column: 45, scope: !1708)
!1738 = !DILocation(line: 253, column: 47, scope: !1708)
!1739 = !DILocation(line: 253, column: 38, scope: !1708)
!1740 = !DILocation(line: 253, column: 36, scope: !1708)
!1741 = !DILocalVariable(name: "z3", scope: !1708, file: !21, line: 254, type: !468)
!1742 = !DILocation(line: 254, column: 19, scope: !1708)
!1743 = !DILocation(line: 254, column: 31, scope: !1708)
!1744 = !DILocation(line: 254, column: 30, scope: !1708)
!1745 = !DILocation(line: 254, column: 32, scope: !1708)
!1746 = !DILocation(line: 254, column: 23, scope: !1708)
!1747 = !DILocation(line: 254, column: 46, scope: !1708)
!1748 = !DILocation(line: 254, column: 45, scope: !1708)
!1749 = !DILocation(line: 254, column: 47, scope: !1708)
!1750 = !DILocation(line: 254, column: 38, scope: !1708)
!1751 = !DILocation(line: 254, column: 36, scope: !1708)
!1752 = !DILocation(line: 256, column: 22, scope: !1708)
!1753 = !DILocation(line: 256, column: 25, scope: !1708)
!1754 = !DILocation(line: 256, column: 24, scope: !1708)
!1755 = !DILocation(line: 256, column: 16, scope: !1708)
!1756 = !DILocation(line: 256, column: 15, scope: !1708)
!1757 = !DILocation(line: 256, column: 17, scope: !1708)
!1758 = !DILocation(line: 256, column: 9, scope: !1708)
!1759 = !DILocation(line: 256, column: 20, scope: !1708)
!1760 = !DILocation(line: 257, column: 22, scope: !1708)
!1761 = !DILocation(line: 257, column: 25, scope: !1708)
!1762 = !DILocation(line: 257, column: 24, scope: !1708)
!1763 = !DILocation(line: 257, column: 16, scope: !1708)
!1764 = !DILocation(line: 257, column: 15, scope: !1708)
!1765 = !DILocation(line: 257, column: 17, scope: !1708)
!1766 = !DILocation(line: 257, column: 9, scope: !1708)
!1767 = !DILocation(line: 257, column: 20, scope: !1708)
!1768 = !DILocation(line: 258, column: 22, scope: !1708)
!1769 = !DILocation(line: 258, column: 25, scope: !1708)
!1770 = !DILocation(line: 258, column: 24, scope: !1708)
!1771 = !DILocation(line: 258, column: 16, scope: !1708)
!1772 = !DILocation(line: 258, column: 15, scope: !1708)
!1773 = !DILocation(line: 258, column: 17, scope: !1708)
!1774 = !DILocation(line: 258, column: 9, scope: !1708)
!1775 = !DILocation(line: 258, column: 20, scope: !1708)
!1776 = !DILocation(line: 259, column: 22, scope: !1708)
!1777 = !DILocation(line: 259, column: 25, scope: !1708)
!1778 = !DILocation(line: 259, column: 24, scope: !1708)
!1779 = !DILocation(line: 259, column: 16, scope: !1708)
!1780 = !DILocation(line: 259, column: 15, scope: !1708)
!1781 = !DILocation(line: 259, column: 17, scope: !1708)
!1782 = !DILocation(line: 259, column: 9, scope: !1708)
!1783 = !DILocation(line: 259, column: 20, scope: !1708)
!1784 = !DILocation(line: 260, column: 5, scope: !1708)
!1785 = !DILocation(line: 250, column: 20, scope: !1786)
!1786 = !DILexicalBlockFile(scope: !1704, file: !21, discriminator: 2)
!1787 = !DILocation(line: 250, column: 5, scope: !1786)
!1788 = distinct !{!1788, !1789}
!1789 = !DILocation(line: 250, column: 5, scope: !20)
!1790 = !DILocation(line: 262, column: 10, scope: !1791)
!1791 = distinct !DILexicalBlock(scope: !20, file: !21, line: 262, column: 5)
!1792 = !DILocation(line: 262, column: 9, scope: !1791)
!1793 = !DILocation(line: 262, column: 14, scope: !1794)
!1794 = !DILexicalBlockFile(scope: !1795, file: !21, discriminator: 1)
!1795 = distinct !DILexicalBlock(scope: !1791, file: !21, line: 262, column: 5)
!1796 = !DILocation(line: 262, column: 15, scope: !1794)
!1797 = !DILocation(line: 262, column: 5, scope: !1794)
!1798 = !DILocalVariable(name: "offset", scope: !1799, file: !21, line: 263, type: !468)
!1799 = distinct !DILexicalBlock(scope: !1795, file: !21, line: 262, column: 23)
!1800 = !DILocation(line: 263, column: 19, scope: !1799)
!1801 = !DILocation(line: 263, column: 36, scope: !1799)
!1802 = !DILocation(line: 263, column: 27, scope: !1799)
!1803 = !DILocalVariable(name: "z0", scope: !1799, file: !21, line: 264, type: !106)
!1804 = !DILocation(line: 264, column: 24, scope: !1799)
!1805 = !DILocation(line: 264, column: 37, scope: !1799)
!1806 = !DILocation(line: 264, column: 36, scope: !1799)
!1807 = !DILocation(line: 264, column: 28, scope: !1799)
!1808 = !DILocation(line: 264, column: 51, scope: !1799)
!1809 = !DILocation(line: 264, column: 50, scope: !1799)
!1810 = !DILocation(line: 264, column: 42, scope: !1799)
!1811 = !DILocation(line: 264, column: 40, scope: !1799)
!1812 = !DILocalVariable(name: "z1", scope: !1799, file: !21, line: 265, type: !106)
!1813 = !DILocation(line: 265, column: 24, scope: !1799)
!1814 = !DILocation(line: 265, column: 37, scope: !1799)
!1815 = !DILocation(line: 265, column: 36, scope: !1799)
!1816 = !DILocation(line: 265, column: 28, scope: !1799)
!1817 = !DILocation(line: 265, column: 51, scope: !1799)
!1818 = !DILocation(line: 265, column: 50, scope: !1799)
!1819 = !DILocation(line: 265, column: 42, scope: !1799)
!1820 = !DILocation(line: 265, column: 40, scope: !1799)
!1821 = !DILocalVariable(name: "z2", scope: !1799, file: !21, line: 266, type: !106)
!1822 = !DILocation(line: 266, column: 24, scope: !1799)
!1823 = !DILocation(line: 266, column: 37, scope: !1799)
!1824 = !DILocation(line: 266, column: 36, scope: !1799)
!1825 = !DILocation(line: 266, column: 28, scope: !1799)
!1826 = !DILocation(line: 266, column: 51, scope: !1799)
!1827 = !DILocation(line: 266, column: 50, scope: !1799)
!1828 = !DILocation(line: 266, column: 42, scope: !1799)
!1829 = !DILocation(line: 266, column: 40, scope: !1799)
!1830 = !DILocalVariable(name: "z3", scope: !1799, file: !21, line: 267, type: !106)
!1831 = !DILocation(line: 267, column: 24, scope: !1799)
!1832 = !DILocation(line: 267, column: 37, scope: !1799)
!1833 = !DILocation(line: 267, column: 36, scope: !1799)
!1834 = !DILocation(line: 267, column: 28, scope: !1799)
!1835 = !DILocation(line: 267, column: 51, scope: !1799)
!1836 = !DILocation(line: 267, column: 50, scope: !1799)
!1837 = !DILocation(line: 267, column: 42, scope: !1799)
!1838 = !DILocation(line: 267, column: 40, scope: !1799)
!1839 = !DILocation(line: 269, column: 38, scope: !1799)
!1840 = !DILocation(line: 269, column: 43, scope: !1799)
!1841 = !DILocation(line: 269, column: 41, scope: !1799)
!1842 = !DILocation(line: 269, column: 47, scope: !1799)
!1843 = !DILocation(line: 269, column: 46, scope: !1799)
!1844 = !DILocation(line: 269, column: 52, scope: !1799)
!1845 = !DILocation(line: 269, column: 60, scope: !1799)
!1846 = !DILocation(line: 269, column: 31, scope: !1799)
!1847 = !DILocation(line: 269, column: 22, scope: !1799)
!1848 = !DILocation(line: 269, column: 21, scope: !1799)
!1849 = !DILocation(line: 269, column: 9, scope: !1799)
!1850 = !DILocation(line: 269, column: 29, scope: !1799)
!1851 = !DILocation(line: 270, column: 38, scope: !1799)
!1852 = !DILocation(line: 270, column: 43, scope: !1799)
!1853 = !DILocation(line: 270, column: 41, scope: !1799)
!1854 = !DILocation(line: 270, column: 47, scope: !1799)
!1855 = !DILocation(line: 270, column: 46, scope: !1799)
!1856 = !DILocation(line: 270, column: 52, scope: !1799)
!1857 = !DILocation(line: 270, column: 60, scope: !1799)
!1858 = !DILocation(line: 270, column: 31, scope: !1799)
!1859 = !DILocation(line: 270, column: 22, scope: !1799)
!1860 = !DILocation(line: 270, column: 21, scope: !1799)
!1861 = !DILocation(line: 270, column: 9, scope: !1799)
!1862 = !DILocation(line: 270, column: 29, scope: !1799)
!1863 = !DILocation(line: 271, column: 38, scope: !1799)
!1864 = !DILocation(line: 271, column: 43, scope: !1799)
!1865 = !DILocation(line: 271, column: 41, scope: !1799)
!1866 = !DILocation(line: 271, column: 47, scope: !1799)
!1867 = !DILocation(line: 271, column: 46, scope: !1799)
!1868 = !DILocation(line: 271, column: 52, scope: !1799)
!1869 = !DILocation(line: 271, column: 60, scope: !1799)
!1870 = !DILocation(line: 271, column: 31, scope: !1799)
!1871 = !DILocation(line: 271, column: 22, scope: !1799)
!1872 = !DILocation(line: 271, column: 21, scope: !1799)
!1873 = !DILocation(line: 271, column: 9, scope: !1799)
!1874 = !DILocation(line: 271, column: 29, scope: !1799)
!1875 = !DILocation(line: 272, column: 38, scope: !1799)
!1876 = !DILocation(line: 272, column: 43, scope: !1799)
!1877 = !DILocation(line: 272, column: 41, scope: !1799)
!1878 = !DILocation(line: 272, column: 47, scope: !1799)
!1879 = !DILocation(line: 272, column: 46, scope: !1799)
!1880 = !DILocation(line: 272, column: 52, scope: !1799)
!1881 = !DILocation(line: 272, column: 60, scope: !1799)
!1882 = !DILocation(line: 272, column: 31, scope: !1799)
!1883 = !DILocation(line: 272, column: 22, scope: !1799)
!1884 = !DILocation(line: 272, column: 21, scope: !1799)
!1885 = !DILocation(line: 272, column: 9, scope: !1799)
!1886 = !DILocation(line: 272, column: 29, scope: !1799)
!1887 = !DILocation(line: 273, column: 5, scope: !1799)
!1888 = !DILocation(line: 262, column: 20, scope: !1889)
!1889 = !DILexicalBlockFile(scope: !1795, file: !21, discriminator: 2)
!1890 = !DILocation(line: 262, column: 5, scope: !1889)
!1891 = distinct !{!1891, !1892}
!1892 = !DILocation(line: 262, column: 5, scope: !20)
!1893 = !DILocation(line: 275, column: 1, scope: !20)
!1894 = !DILocalVariable(name: "_block", arg: 1, scope: !29, file: !21, line: 277, type: !8)
!1895 = !DILocation(line: 277, column: 53, scope: !29)
!1896 = !DILocalVariable(name: "qmul", arg: 2, scope: !29, file: !21, line: 277, type: !12)
!1897 = !DILocation(line: 277, column: 65, scope: !29)
!1898 = !DILocalVariable(name: "stride", scope: !29, file: !21, line: 278, type: !468)
!1899 = !DILocation(line: 278, column: 15, scope: !29)
!1900 = !DILocalVariable(name: "xStride", scope: !29, file: !21, line: 279, type: !468)
!1901 = !DILocation(line: 279, column: 15, scope: !29)
!1902 = !DILocalVariable(name: "i", scope: !29, file: !21, line: 280, type: !12)
!1903 = !DILocation(line: 280, column: 9, scope: !29)
!1904 = !DILocalVariable(name: "temp", scope: !29, file: !21, line: 281, type: !1905)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 256, align: 32, elements: !1906)
!1906 = !{!1907}
!1907 = !DISubrange(count: 8)
!1908 = !DILocation(line: 281, column: 9, scope: !29)
!1909 = !DILocalVariable(name: "block", scope: !29, file: !21, line: 283, type: !8)
!1910 = !DILocation(line: 283, column: 14, scope: !29)
!1911 = !DILocation(line: 283, column: 32, scope: !29)
!1912 = !DILocation(line: 285, column: 10, scope: !1913)
!1913 = distinct !DILexicalBlock(scope: !29, file: !21, line: 285, column: 5)
!1914 = !DILocation(line: 285, column: 9, scope: !1913)
!1915 = !DILocation(line: 285, column: 14, scope: !1916)
!1916 = !DILexicalBlockFile(scope: !1917, file: !21, discriminator: 1)
!1917 = distinct !DILexicalBlock(scope: !1913, file: !21, line: 285, column: 5)
!1918 = !DILocation(line: 285, column: 15, scope: !1916)
!1919 = !DILocation(line: 285, column: 5, scope: !1916)
!1920 = !DILocation(line: 286, column: 36, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1917, file: !21, line: 285, column: 23)
!1922 = !DILocation(line: 286, column: 35, scope: !1921)
!1923 = !DILocation(line: 286, column: 38, scope: !1921)
!1924 = !DILocation(line: 286, column: 23, scope: !1921)
!1925 = !DILocation(line: 286, column: 66, scope: !1921)
!1926 = !DILocation(line: 286, column: 65, scope: !1921)
!1927 = !DILocation(line: 286, column: 68, scope: !1921)
!1928 = !DILocation(line: 286, column: 53, scope: !1921)
!1929 = !DILocation(line: 286, column: 51, scope: !1921)
!1930 = !DILocation(line: 286, column: 16, scope: !1921)
!1931 = !DILocation(line: 286, column: 15, scope: !1921)
!1932 = !DILocation(line: 286, column: 17, scope: !1921)
!1933 = !DILocation(line: 286, column: 9, scope: !1921)
!1934 = !DILocation(line: 286, column: 21, scope: !1921)
!1935 = !DILocation(line: 287, column: 36, scope: !1921)
!1936 = !DILocation(line: 287, column: 35, scope: !1921)
!1937 = !DILocation(line: 287, column: 38, scope: !1921)
!1938 = !DILocation(line: 287, column: 23, scope: !1921)
!1939 = !DILocation(line: 287, column: 66, scope: !1921)
!1940 = !DILocation(line: 287, column: 65, scope: !1921)
!1941 = !DILocation(line: 287, column: 68, scope: !1921)
!1942 = !DILocation(line: 287, column: 53, scope: !1921)
!1943 = !DILocation(line: 287, column: 51, scope: !1921)
!1944 = !DILocation(line: 287, column: 16, scope: !1921)
!1945 = !DILocation(line: 287, column: 15, scope: !1921)
!1946 = !DILocation(line: 287, column: 17, scope: !1921)
!1947 = !DILocation(line: 287, column: 9, scope: !1921)
!1948 = !DILocation(line: 287, column: 21, scope: !1921)
!1949 = !DILocation(line: 288, column: 5, scope: !1921)
!1950 = !DILocation(line: 285, column: 20, scope: !1951)
!1951 = !DILexicalBlockFile(scope: !1917, file: !21, discriminator: 2)
!1952 = !DILocation(line: 285, column: 5, scope: !1951)
!1953 = distinct !{!1953, !1954}
!1954 = !DILocation(line: 285, column: 5, scope: !29)
!1955 = !DILocation(line: 290, column: 10, scope: !1956)
!1956 = distinct !DILexicalBlock(scope: !29, file: !21, line: 290, column: 5)
!1957 = !DILocation(line: 290, column: 9, scope: !1956)
!1958 = !DILocation(line: 290, column: 14, scope: !1959)
!1959 = !DILexicalBlockFile(scope: !1960, file: !21, discriminator: 1)
!1960 = distinct !DILexicalBlock(scope: !1956, file: !21, line: 290, column: 5)
!1961 = !DILocation(line: 290, column: 15, scope: !1959)
!1962 = !DILocation(line: 290, column: 5, scope: !1959)
!1963 = !DILocalVariable(name: "offset", scope: !1964, file: !21, line: 291, type: !468)
!1964 = distinct !DILexicalBlock(scope: !1960, file: !21, line: 290, column: 23)
!1965 = !DILocation(line: 291, column: 19, scope: !1964)
!1966 = !DILocation(line: 291, column: 36, scope: !1964)
!1967 = !DILocation(line: 291, column: 27, scope: !1964)
!1968 = !DILocalVariable(name: "z0", scope: !1964, file: !21, line: 292, type: !106)
!1969 = !DILocation(line: 292, column: 24, scope: !1964)
!1970 = !DILocation(line: 292, column: 37, scope: !1964)
!1971 = !DILocation(line: 292, column: 36, scope: !1964)
!1972 = !DILocation(line: 292, column: 28, scope: !1964)
!1973 = !DILocation(line: 292, column: 51, scope: !1964)
!1974 = !DILocation(line: 292, column: 50, scope: !1964)
!1975 = !DILocation(line: 292, column: 42, scope: !1964)
!1976 = !DILocation(line: 292, column: 40, scope: !1964)
!1977 = !DILocalVariable(name: "z1", scope: !1964, file: !21, line: 293, type: !106)
!1978 = !DILocation(line: 293, column: 24, scope: !1964)
!1979 = !DILocation(line: 293, column: 37, scope: !1964)
!1980 = !DILocation(line: 293, column: 36, scope: !1964)
!1981 = !DILocation(line: 293, column: 28, scope: !1964)
!1982 = !DILocation(line: 293, column: 51, scope: !1964)
!1983 = !DILocation(line: 293, column: 50, scope: !1964)
!1984 = !DILocation(line: 293, column: 42, scope: !1964)
!1985 = !DILocation(line: 293, column: 40, scope: !1964)
!1986 = !DILocalVariable(name: "z2", scope: !1964, file: !21, line: 294, type: !106)
!1987 = !DILocation(line: 294, column: 24, scope: !1964)
!1988 = !DILocation(line: 294, column: 37, scope: !1964)
!1989 = !DILocation(line: 294, column: 36, scope: !1964)
!1990 = !DILocation(line: 294, column: 28, scope: !1964)
!1991 = !DILocation(line: 294, column: 51, scope: !1964)
!1992 = !DILocation(line: 294, column: 50, scope: !1964)
!1993 = !DILocation(line: 294, column: 42, scope: !1964)
!1994 = !DILocation(line: 294, column: 40, scope: !1964)
!1995 = !DILocalVariable(name: "z3", scope: !1964, file: !21, line: 295, type: !106)
!1996 = !DILocation(line: 295, column: 24, scope: !1964)
!1997 = !DILocation(line: 295, column: 37, scope: !1964)
!1998 = !DILocation(line: 295, column: 36, scope: !1964)
!1999 = !DILocation(line: 295, column: 28, scope: !1964)
!2000 = !DILocation(line: 295, column: 51, scope: !1964)
!2001 = !DILocation(line: 295, column: 50, scope: !1964)
!2002 = !DILocation(line: 295, column: 42, scope: !1964)
!2003 = !DILocation(line: 295, column: 40, scope: !1964)
!2004 = !DILocation(line: 297, column: 40, scope: !1964)
!2005 = !DILocation(line: 297, column: 45, scope: !1964)
!2006 = !DILocation(line: 297, column: 43, scope: !1964)
!2007 = !DILocation(line: 297, column: 49, scope: !1964)
!2008 = !DILocation(line: 297, column: 48, scope: !1964)
!2009 = !DILocation(line: 297, column: 54, scope: !1964)
!2010 = !DILocation(line: 297, column: 61, scope: !1964)
!2011 = !DILocation(line: 297, column: 33, scope: !1964)
!2012 = !DILocation(line: 297, column: 24, scope: !1964)
!2013 = !DILocation(line: 297, column: 23, scope: !1964)
!2014 = !DILocation(line: 297, column: 9, scope: !1964)
!2015 = !DILocation(line: 297, column: 31, scope: !1964)
!2016 = !DILocation(line: 298, column: 40, scope: !1964)
!2017 = !DILocation(line: 298, column: 45, scope: !1964)
!2018 = !DILocation(line: 298, column: 43, scope: !1964)
!2019 = !DILocation(line: 298, column: 49, scope: !1964)
!2020 = !DILocation(line: 298, column: 48, scope: !1964)
!2021 = !DILocation(line: 298, column: 54, scope: !1964)
!2022 = !DILocation(line: 298, column: 61, scope: !1964)
!2023 = !DILocation(line: 298, column: 33, scope: !1964)
!2024 = !DILocation(line: 298, column: 24, scope: !1964)
!2025 = !DILocation(line: 298, column: 23, scope: !1964)
!2026 = !DILocation(line: 298, column: 9, scope: !1964)
!2027 = !DILocation(line: 298, column: 31, scope: !1964)
!2028 = !DILocation(line: 299, column: 40, scope: !1964)
!2029 = !DILocation(line: 299, column: 45, scope: !1964)
!2030 = !DILocation(line: 299, column: 43, scope: !1964)
!2031 = !DILocation(line: 299, column: 49, scope: !1964)
!2032 = !DILocation(line: 299, column: 48, scope: !1964)
!2033 = !DILocation(line: 299, column: 54, scope: !1964)
!2034 = !DILocation(line: 299, column: 61, scope: !1964)
!2035 = !DILocation(line: 299, column: 33, scope: !1964)
!2036 = !DILocation(line: 299, column: 24, scope: !1964)
!2037 = !DILocation(line: 299, column: 23, scope: !1964)
!2038 = !DILocation(line: 299, column: 9, scope: !1964)
!2039 = !DILocation(line: 299, column: 31, scope: !1964)
!2040 = !DILocation(line: 300, column: 40, scope: !1964)
!2041 = !DILocation(line: 300, column: 45, scope: !1964)
!2042 = !DILocation(line: 300, column: 43, scope: !1964)
!2043 = !DILocation(line: 300, column: 49, scope: !1964)
!2044 = !DILocation(line: 300, column: 48, scope: !1964)
!2045 = !DILocation(line: 300, column: 54, scope: !1964)
!2046 = !DILocation(line: 300, column: 61, scope: !1964)
!2047 = !DILocation(line: 300, column: 33, scope: !1964)
!2048 = !DILocation(line: 300, column: 24, scope: !1964)
!2049 = !DILocation(line: 300, column: 23, scope: !1964)
!2050 = !DILocation(line: 300, column: 9, scope: !1964)
!2051 = !DILocation(line: 300, column: 31, scope: !1964)
!2052 = !DILocation(line: 301, column: 5, scope: !1964)
!2053 = !DILocation(line: 290, column: 20, scope: !2054)
!2054 = !DILexicalBlockFile(scope: !1960, file: !21, discriminator: 2)
!2055 = !DILocation(line: 290, column: 5, scope: !2054)
!2056 = distinct !{!2056, !2057}
!2057 = !DILocation(line: 290, column: 5, scope: !29)
!2058 = !DILocation(line: 302, column: 1, scope: !29)
!2059 = distinct !DISubprogram(name: "ff_h264_chroma_dc_dequant_idct_8_c", scope: !21, file: !21, line: 304, type: !30, isLocal: false, isDefinition: true, scopeLine: 304, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!2060 = !DILocalVariable(name: "_block", arg: 1, scope: !2059, file: !21, line: 304, type: !8)
!2061 = !DILocation(line: 304, column: 50, scope: !2059)
!2062 = !DILocalVariable(name: "qmul", arg: 2, scope: !2059, file: !21, line: 304, type: !12)
!2063 = !DILocation(line: 304, column: 62, scope: !2059)
!2064 = !DILocalVariable(name: "stride", scope: !2059, file: !21, line: 305, type: !468)
!2065 = !DILocation(line: 305, column: 15, scope: !2059)
!2066 = !DILocalVariable(name: "xStride", scope: !2059, file: !21, line: 306, type: !468)
!2067 = !DILocation(line: 306, column: 15, scope: !2059)
!2068 = !DILocalVariable(name: "a", scope: !2059, file: !21, line: 307, type: !11)
!2069 = !DILocation(line: 307, column: 14, scope: !2059)
!2070 = !DILocalVariable(name: "b", scope: !2059, file: !21, line: 307, type: !11)
!2071 = !DILocation(line: 307, column: 16, scope: !2059)
!2072 = !DILocalVariable(name: "c", scope: !2059, file: !21, line: 307, type: !11)
!2073 = !DILocation(line: 307, column: 18, scope: !2059)
!2074 = !DILocalVariable(name: "d", scope: !2059, file: !21, line: 307, type: !11)
!2075 = !DILocation(line: 307, column: 20, scope: !2059)
!2076 = !DILocalVariable(name: "e", scope: !2059, file: !21, line: 307, type: !11)
!2077 = !DILocation(line: 307, column: 22, scope: !2059)
!2078 = !DILocalVariable(name: "block", scope: !2059, file: !21, line: 308, type: !8)
!2079 = !DILocation(line: 308, column: 14, scope: !2059)
!2080 = !DILocation(line: 308, column: 32, scope: !2059)
!2081 = !DILocation(line: 310, column: 8, scope: !2059)
!2082 = !DILocation(line: 310, column: 6, scope: !2059)
!2083 = !DILocation(line: 311, column: 8, scope: !2059)
!2084 = !DILocation(line: 311, column: 6, scope: !2059)
!2085 = !DILocation(line: 312, column: 8, scope: !2059)
!2086 = !DILocation(line: 312, column: 6, scope: !2059)
!2087 = !DILocation(line: 313, column: 8, scope: !2059)
!2088 = !DILocation(line: 313, column: 6, scope: !2059)
!2089 = !DILocation(line: 315, column: 8, scope: !2059)
!2090 = !DILocation(line: 315, column: 10, scope: !2059)
!2091 = !DILocation(line: 315, column: 9, scope: !2059)
!2092 = !DILocation(line: 315, column: 6, scope: !2059)
!2093 = !DILocation(line: 316, column: 8, scope: !2059)
!2094 = !DILocation(line: 316, column: 10, scope: !2059)
!2095 = !DILocation(line: 316, column: 9, scope: !2059)
!2096 = !DILocation(line: 316, column: 6, scope: !2059)
!2097 = !DILocation(line: 317, column: 8, scope: !2059)
!2098 = !DILocation(line: 317, column: 10, scope: !2059)
!2099 = !DILocation(line: 317, column: 9, scope: !2059)
!2100 = !DILocation(line: 317, column: 6, scope: !2059)
!2101 = !DILocation(line: 318, column: 8, scope: !2059)
!2102 = !DILocation(line: 318, column: 10, scope: !2059)
!2103 = !DILocation(line: 318, column: 9, scope: !2059)
!2104 = !DILocation(line: 318, column: 6, scope: !2059)
!2105 = !DILocation(line: 320, column: 41, scope: !2059)
!2106 = !DILocation(line: 320, column: 43, scope: !2059)
!2107 = !DILocation(line: 320, column: 42, scope: !2059)
!2108 = !DILocation(line: 320, column: 46, scope: !2059)
!2109 = !DILocation(line: 320, column: 45, scope: !2059)
!2110 = !DILocation(line: 320, column: 52, scope: !2059)
!2111 = !DILocation(line: 320, column: 34, scope: !2059)
!2112 = !DILocation(line: 320, column: 5, scope: !2059)
!2113 = !DILocation(line: 320, column: 32, scope: !2059)
!2114 = !DILocation(line: 321, column: 41, scope: !2059)
!2115 = !DILocation(line: 321, column: 43, scope: !2059)
!2116 = !DILocation(line: 321, column: 42, scope: !2059)
!2117 = !DILocation(line: 321, column: 46, scope: !2059)
!2118 = !DILocation(line: 321, column: 45, scope: !2059)
!2119 = !DILocation(line: 321, column: 52, scope: !2059)
!2120 = !DILocation(line: 321, column: 34, scope: !2059)
!2121 = !DILocation(line: 321, column: 5, scope: !2059)
!2122 = !DILocation(line: 321, column: 32, scope: !2059)
!2123 = !DILocation(line: 322, column: 41, scope: !2059)
!2124 = !DILocation(line: 322, column: 43, scope: !2059)
!2125 = !DILocation(line: 322, column: 42, scope: !2059)
!2126 = !DILocation(line: 322, column: 46, scope: !2059)
!2127 = !DILocation(line: 322, column: 45, scope: !2059)
!2128 = !DILocation(line: 322, column: 52, scope: !2059)
!2129 = !DILocation(line: 322, column: 34, scope: !2059)
!2130 = !DILocation(line: 322, column: 5, scope: !2059)
!2131 = !DILocation(line: 322, column: 32, scope: !2059)
!2132 = !DILocation(line: 323, column: 41, scope: !2059)
!2133 = !DILocation(line: 323, column: 43, scope: !2059)
!2134 = !DILocation(line: 323, column: 42, scope: !2059)
!2135 = !DILocation(line: 323, column: 46, scope: !2059)
!2136 = !DILocation(line: 323, column: 45, scope: !2059)
!2137 = !DILocation(line: 323, column: 52, scope: !2059)
!2138 = !DILocation(line: 323, column: 34, scope: !2059)
!2139 = !DILocation(line: 323, column: 5, scope: !2059)
!2140 = !DILocation(line: 323, column: 32, scope: !2059)
!2141 = !DILocation(line: 324, column: 1, scope: !2059)
!2142 = distinct !DISubprogram(name: "ff_h264_idct_add_9_c", scope: !21, file: !21, line: 33, type: !60, isLocal: false, isDefinition: true, scopeLine: 34, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!2143 = !DILocalVariable(name: "a", arg: 1, scope: !2144, file: !64, line: 229, type: !12)
!2144 = distinct !DISubprogram(name: "av_clip_uintp2_c", scope: !64, file: !64, line: 229, type: !2145, isLocal: true, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!11, !12, !12}
!2147 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !2148)
!2148 = distinct !DILocation(line: 61, column: 28, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !2150, file: !21, line: 54, column: 23)
!2150 = distinct !DILexicalBlock(scope: !2151, file: !21, line: 54, column: 5)
!2151 = distinct !DILexicalBlock(scope: !2142, file: !21, line: 54, column: 5)
!2152 = !DILocalVariable(name: "p", arg: 2, scope: !2144, file: !64, line: 229, type: !12)
!2153 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !2148)
!2154 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !2155)
!2155 = distinct !DILocation(line: 62, column: 28, scope: !2149)
!2156 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !2155)
!2157 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !2158)
!2158 = distinct !DILocation(line: 63, column: 28, scope: !2149)
!2159 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !2158)
!2160 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !2161)
!2161 = distinct !DILocation(line: 60, column: 28, scope: !2149)
!2162 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !2161)
!2163 = !DILocalVariable(name: "_dst", arg: 1, scope: !2142, file: !21, line: 33, type: !4)
!2164 = !DILocation(line: 33, column: 36, scope: !2142)
!2165 = !DILocalVariable(name: "_block", arg: 2, scope: !2142, file: !21, line: 33, type: !8)
!2166 = !DILocation(line: 33, column: 51, scope: !2142)
!2167 = !DILocalVariable(name: "stride", arg: 3, scope: !2142, file: !21, line: 33, type: !12)
!2168 = !DILocation(line: 33, column: 63, scope: !2142)
!2169 = !DILocalVariable(name: "i", scope: !2142, file: !21, line: 35, type: !12)
!2170 = !DILocation(line: 35, column: 9, scope: !2142)
!2171 = !DILocalVariable(name: "dst", scope: !2142, file: !21, line: 36, type: !13)
!2172 = !DILocation(line: 36, column: 15, scope: !2142)
!2173 = !DILocation(line: 36, column: 32, scope: !2142)
!2174 = !DILocation(line: 36, column: 21, scope: !2142)
!2175 = !DILocalVariable(name: "block", scope: !2142, file: !21, line: 37, type: !16)
!2176 = !DILocation(line: 37, column: 14, scope: !2142)
!2177 = !DILocation(line: 37, column: 32, scope: !2142)
!2178 = !DILocation(line: 37, column: 22, scope: !2142)
!2179 = !DILocation(line: 38, column: 12, scope: !2142)
!2180 = !DILocation(line: 40, column: 5, scope: !2142)
!2181 = !DILocation(line: 40, column: 14, scope: !2142)
!2182 = !DILocation(line: 42, column: 10, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2142, file: !21, line: 42, column: 5)
!2184 = !DILocation(line: 42, column: 9, scope: !2183)
!2185 = !DILocation(line: 42, column: 14, scope: !2186)
!2186 = !DILexicalBlockFile(scope: !2187, file: !21, discriminator: 1)
!2187 = distinct !DILexicalBlock(scope: !2183, file: !21, line: 42, column: 5)
!2188 = !DILocation(line: 42, column: 15, scope: !2186)
!2189 = !DILocation(line: 42, column: 5, scope: !2186)
!2190 = !DILocalVariable(name: "z0", scope: !2191, file: !21, line: 43, type: !106)
!2191 = distinct !DILexicalBlock(scope: !2187, file: !21, line: 42, column: 23)
!2192 = !DILocation(line: 43, column: 24, scope: !2191)
!2193 = !DILocation(line: 43, column: 34, scope: !2191)
!2194 = !DILocation(line: 43, column: 36, scope: !2191)
!2195 = !DILocation(line: 43, column: 28, scope: !2191)
!2196 = !DILocation(line: 43, column: 61, scope: !2191)
!2197 = !DILocation(line: 43, column: 63, scope: !2191)
!2198 = !DILocation(line: 43, column: 55, scope: !2191)
!2199 = !DILocation(line: 43, column: 43, scope: !2191)
!2200 = !DILocalVariable(name: "z1", scope: !2191, file: !21, line: 44, type: !106)
!2201 = !DILocation(line: 44, column: 24, scope: !2191)
!2202 = !DILocation(line: 44, column: 34, scope: !2191)
!2203 = !DILocation(line: 44, column: 36, scope: !2191)
!2204 = !DILocation(line: 44, column: 28, scope: !2191)
!2205 = !DILocation(line: 44, column: 61, scope: !2191)
!2206 = !DILocation(line: 44, column: 63, scope: !2191)
!2207 = !DILocation(line: 44, column: 55, scope: !2191)
!2208 = !DILocation(line: 44, column: 43, scope: !2191)
!2209 = !DILocalVariable(name: "z2", scope: !2191, file: !21, line: 45, type: !106)
!2210 = !DILocation(line: 45, column: 24, scope: !2191)
!2211 = !DILocation(line: 45, column: 35, scope: !2191)
!2212 = !DILocation(line: 45, column: 37, scope: !2191)
!2213 = !DILocation(line: 45, column: 29, scope: !2191)
!2214 = !DILocation(line: 45, column: 43, scope: !2191)
!2215 = !DILocation(line: 45, column: 66, scope: !2191)
!2216 = !DILocation(line: 45, column: 68, scope: !2191)
!2217 = !DILocation(line: 45, column: 60, scope: !2191)
!2218 = !DILocation(line: 45, column: 48, scope: !2191)
!2219 = !DILocalVariable(name: "z3", scope: !2191, file: !21, line: 46, type: !106)
!2220 = !DILocation(line: 46, column: 24, scope: !2191)
!2221 = !DILocation(line: 46, column: 34, scope: !2191)
!2222 = !DILocation(line: 46, column: 36, scope: !2191)
!2223 = !DILocation(line: 46, column: 28, scope: !2191)
!2224 = !DILocation(line: 46, column: 62, scope: !2191)
!2225 = !DILocation(line: 46, column: 64, scope: !2191)
!2226 = !DILocation(line: 46, column: 56, scope: !2191)
!2227 = !DILocation(line: 46, column: 70, scope: !2191)
!2228 = !DILocation(line: 46, column: 43, scope: !2191)
!2229 = !DILocation(line: 48, column: 25, scope: !2191)
!2230 = !DILocation(line: 48, column: 30, scope: !2191)
!2231 = !DILocation(line: 48, column: 28, scope: !2191)
!2232 = !DILocation(line: 48, column: 15, scope: !2191)
!2233 = !DILocation(line: 48, column: 17, scope: !2191)
!2234 = !DILocation(line: 48, column: 9, scope: !2191)
!2235 = !DILocation(line: 48, column: 23, scope: !2191)
!2236 = !DILocation(line: 49, column: 25, scope: !2191)
!2237 = !DILocation(line: 49, column: 30, scope: !2191)
!2238 = !DILocation(line: 49, column: 28, scope: !2191)
!2239 = !DILocation(line: 49, column: 15, scope: !2191)
!2240 = !DILocation(line: 49, column: 17, scope: !2191)
!2241 = !DILocation(line: 49, column: 9, scope: !2191)
!2242 = !DILocation(line: 49, column: 23, scope: !2191)
!2243 = !DILocation(line: 50, column: 25, scope: !2191)
!2244 = !DILocation(line: 50, column: 30, scope: !2191)
!2245 = !DILocation(line: 50, column: 28, scope: !2191)
!2246 = !DILocation(line: 50, column: 15, scope: !2191)
!2247 = !DILocation(line: 50, column: 17, scope: !2191)
!2248 = !DILocation(line: 50, column: 9, scope: !2191)
!2249 = !DILocation(line: 50, column: 23, scope: !2191)
!2250 = !DILocation(line: 51, column: 25, scope: !2191)
!2251 = !DILocation(line: 51, column: 30, scope: !2191)
!2252 = !DILocation(line: 51, column: 28, scope: !2191)
!2253 = !DILocation(line: 51, column: 15, scope: !2191)
!2254 = !DILocation(line: 51, column: 17, scope: !2191)
!2255 = !DILocation(line: 51, column: 9, scope: !2191)
!2256 = !DILocation(line: 51, column: 23, scope: !2191)
!2257 = !DILocation(line: 52, column: 5, scope: !2191)
!2258 = !DILocation(line: 42, column: 20, scope: !2259)
!2259 = !DILexicalBlockFile(scope: !2187, file: !21, discriminator: 2)
!2260 = !DILocation(line: 42, column: 5, scope: !2259)
!2261 = distinct !{!2261, !2262}
!2262 = !DILocation(line: 42, column: 5, scope: !2142)
!2263 = !DILocation(line: 54, column: 10, scope: !2151)
!2264 = !DILocation(line: 54, column: 9, scope: !2151)
!2265 = !DILocation(line: 54, column: 14, scope: !2266)
!2266 = !DILexicalBlockFile(scope: !2150, file: !21, discriminator: 1)
!2267 = !DILocation(line: 54, column: 15, scope: !2266)
!2268 = !DILocation(line: 54, column: 5, scope: !2266)
!2269 = !DILocalVariable(name: "z0", scope: !2149, file: !21, line: 55, type: !106)
!2270 = !DILocation(line: 55, column: 24, scope: !2149)
!2271 = !DILocation(line: 55, column: 40, scope: !2149)
!2272 = !DILocation(line: 55, column: 39, scope: !2149)
!2273 = !DILocation(line: 55, column: 36, scope: !2149)
!2274 = !DILocation(line: 55, column: 28, scope: !2149)
!2275 = !DILocation(line: 55, column: 67, scope: !2149)
!2276 = !DILocation(line: 55, column: 66, scope: !2149)
!2277 = !DILocation(line: 55, column: 63, scope: !2149)
!2278 = !DILocation(line: 55, column: 55, scope: !2149)
!2279 = !DILocation(line: 55, column: 43, scope: !2149)
!2280 = !DILocalVariable(name: "z1", scope: !2149, file: !21, line: 56, type: !106)
!2281 = !DILocation(line: 56, column: 24, scope: !2149)
!2282 = !DILocation(line: 56, column: 40, scope: !2149)
!2283 = !DILocation(line: 56, column: 39, scope: !2149)
!2284 = !DILocation(line: 56, column: 36, scope: !2149)
!2285 = !DILocation(line: 56, column: 28, scope: !2149)
!2286 = !DILocation(line: 56, column: 67, scope: !2149)
!2287 = !DILocation(line: 56, column: 66, scope: !2149)
!2288 = !DILocation(line: 56, column: 63, scope: !2149)
!2289 = !DILocation(line: 56, column: 55, scope: !2149)
!2290 = !DILocation(line: 56, column: 43, scope: !2149)
!2291 = !DILocalVariable(name: "z2", scope: !2149, file: !21, line: 57, type: !106)
!2292 = !DILocation(line: 57, column: 24, scope: !2149)
!2293 = !DILocation(line: 57, column: 41, scope: !2149)
!2294 = !DILocation(line: 57, column: 40, scope: !2149)
!2295 = !DILocation(line: 57, column: 37, scope: !2149)
!2296 = !DILocation(line: 57, column: 29, scope: !2149)
!2297 = !DILocation(line: 57, column: 43, scope: !2149)
!2298 = !DILocation(line: 57, column: 72, scope: !2149)
!2299 = !DILocation(line: 57, column: 71, scope: !2149)
!2300 = !DILocation(line: 57, column: 68, scope: !2149)
!2301 = !DILocation(line: 57, column: 60, scope: !2149)
!2302 = !DILocation(line: 57, column: 48, scope: !2149)
!2303 = !DILocalVariable(name: "z3", scope: !2149, file: !21, line: 58, type: !106)
!2304 = !DILocation(line: 58, column: 24, scope: !2149)
!2305 = !DILocation(line: 58, column: 40, scope: !2149)
!2306 = !DILocation(line: 58, column: 39, scope: !2149)
!2307 = !DILocation(line: 58, column: 36, scope: !2149)
!2308 = !DILocation(line: 58, column: 28, scope: !2149)
!2309 = !DILocation(line: 58, column: 68, scope: !2149)
!2310 = !DILocation(line: 58, column: 67, scope: !2149)
!2311 = !DILocation(line: 58, column: 64, scope: !2149)
!2312 = !DILocation(line: 58, column: 56, scope: !2149)
!2313 = !DILocation(line: 58, column: 70, scope: !2149)
!2314 = !DILocation(line: 58, column: 43, scope: !2149)
!2315 = !DILocation(line: 60, column: 49, scope: !2149)
!2316 = !DILocation(line: 60, column: 55, scope: !2149)
!2317 = !DILocation(line: 60, column: 54, scope: !2149)
!2318 = !DILocation(line: 60, column: 51, scope: !2149)
!2319 = !DILocation(line: 60, column: 45, scope: !2149)
!2320 = !DILocation(line: 60, column: 72, scope: !2149)
!2321 = !DILocation(line: 60, column: 77, scope: !2149)
!2322 = !DILocation(line: 60, column: 75, scope: !2149)
!2323 = !DILocation(line: 60, column: 81, scope: !2149)
!2324 = !DILocation(line: 60, column: 63, scope: !2149)
!2325 = !DILocation(line: 60, column: 28, scope: !2149)
!2326 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !2161)
!2327 = distinct !DILexicalBlock(scope: !2144, file: !64, line: 231, column: 9)
!2328 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !2161)
!2329 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !2161)
!2330 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !2161)
!2331 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !2161)
!2332 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !2161)
!2333 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !2161)
!2334 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !2161)
!2335 = !DILexicalBlockFile(scope: !2327, file: !64, discriminator: 1)
!2336 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !2161)
!2337 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !2161)
!2338 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !2161)
!2339 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !2161)
!2340 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !2161)
!2341 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !2161)
!2342 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !2161)
!2343 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !2161)
!2344 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !2161)
!2345 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !2161)
!2346 = !DILocation(line: 60, column: 13, scope: !2149)
!2347 = !DILocation(line: 60, column: 19, scope: !2149)
!2348 = !DILocation(line: 60, column: 18, scope: !2149)
!2349 = !DILocation(line: 60, column: 15, scope: !2149)
!2350 = !DILocation(line: 60, column: 9, scope: !2149)
!2351 = !DILocation(line: 60, column: 26, scope: !2149)
!2352 = !DILocation(line: 61, column: 49, scope: !2149)
!2353 = !DILocation(line: 61, column: 55, scope: !2149)
!2354 = !DILocation(line: 61, column: 54, scope: !2149)
!2355 = !DILocation(line: 61, column: 51, scope: !2149)
!2356 = !DILocation(line: 61, column: 45, scope: !2149)
!2357 = !DILocation(line: 61, column: 72, scope: !2149)
!2358 = !DILocation(line: 61, column: 77, scope: !2149)
!2359 = !DILocation(line: 61, column: 75, scope: !2149)
!2360 = !DILocation(line: 61, column: 81, scope: !2149)
!2361 = !DILocation(line: 61, column: 63, scope: !2149)
!2362 = !DILocation(line: 61, column: 28, scope: !2149)
!2363 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !2148)
!2364 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !2148)
!2365 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !2148)
!2366 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !2148)
!2367 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !2148)
!2368 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !2148)
!2369 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !2148)
!2370 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !2148)
!2371 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !2148)
!2372 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !2148)
!2373 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !2148)
!2374 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !2148)
!2375 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !2148)
!2376 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !2148)
!2377 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !2148)
!2378 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !2148)
!2379 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !2148)
!2380 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !2148)
!2381 = !DILocation(line: 61, column: 13, scope: !2149)
!2382 = !DILocation(line: 61, column: 19, scope: !2149)
!2383 = !DILocation(line: 61, column: 18, scope: !2149)
!2384 = !DILocation(line: 61, column: 15, scope: !2149)
!2385 = !DILocation(line: 61, column: 9, scope: !2149)
!2386 = !DILocation(line: 61, column: 26, scope: !2149)
!2387 = !DILocation(line: 62, column: 49, scope: !2149)
!2388 = !DILocation(line: 62, column: 55, scope: !2149)
!2389 = !DILocation(line: 62, column: 54, scope: !2149)
!2390 = !DILocation(line: 62, column: 51, scope: !2149)
!2391 = !DILocation(line: 62, column: 45, scope: !2149)
!2392 = !DILocation(line: 62, column: 72, scope: !2149)
!2393 = !DILocation(line: 62, column: 77, scope: !2149)
!2394 = !DILocation(line: 62, column: 75, scope: !2149)
!2395 = !DILocation(line: 62, column: 81, scope: !2149)
!2396 = !DILocation(line: 62, column: 63, scope: !2149)
!2397 = !DILocation(line: 62, column: 28, scope: !2149)
!2398 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !2155)
!2399 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !2155)
!2400 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !2155)
!2401 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !2155)
!2402 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !2155)
!2403 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !2155)
!2404 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !2155)
!2405 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !2155)
!2406 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !2155)
!2407 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !2155)
!2408 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !2155)
!2409 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !2155)
!2410 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !2155)
!2411 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !2155)
!2412 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !2155)
!2413 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !2155)
!2414 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !2155)
!2415 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !2155)
!2416 = !DILocation(line: 62, column: 13, scope: !2149)
!2417 = !DILocation(line: 62, column: 19, scope: !2149)
!2418 = !DILocation(line: 62, column: 18, scope: !2149)
!2419 = !DILocation(line: 62, column: 15, scope: !2149)
!2420 = !DILocation(line: 62, column: 9, scope: !2149)
!2421 = !DILocation(line: 62, column: 26, scope: !2149)
!2422 = !DILocation(line: 63, column: 49, scope: !2149)
!2423 = !DILocation(line: 63, column: 55, scope: !2149)
!2424 = !DILocation(line: 63, column: 54, scope: !2149)
!2425 = !DILocation(line: 63, column: 51, scope: !2149)
!2426 = !DILocation(line: 63, column: 45, scope: !2149)
!2427 = !DILocation(line: 63, column: 72, scope: !2149)
!2428 = !DILocation(line: 63, column: 77, scope: !2149)
!2429 = !DILocation(line: 63, column: 75, scope: !2149)
!2430 = !DILocation(line: 63, column: 81, scope: !2149)
!2431 = !DILocation(line: 63, column: 63, scope: !2149)
!2432 = !DILocation(line: 63, column: 28, scope: !2149)
!2433 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !2158)
!2434 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !2158)
!2435 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !2158)
!2436 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !2158)
!2437 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !2158)
!2438 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !2158)
!2439 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !2158)
!2440 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !2158)
!2441 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !2158)
!2442 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !2158)
!2443 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !2158)
!2444 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !2158)
!2445 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !2158)
!2446 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !2158)
!2447 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !2158)
!2448 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !2158)
!2449 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !2158)
!2450 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !2158)
!2451 = !DILocation(line: 63, column: 13, scope: !2149)
!2452 = !DILocation(line: 63, column: 19, scope: !2149)
!2453 = !DILocation(line: 63, column: 18, scope: !2149)
!2454 = !DILocation(line: 63, column: 15, scope: !2149)
!2455 = !DILocation(line: 63, column: 9, scope: !2149)
!2456 = !DILocation(line: 63, column: 26, scope: !2149)
!2457 = !DILocation(line: 64, column: 5, scope: !2149)
!2458 = !DILocation(line: 54, column: 20, scope: !2459)
!2459 = !DILexicalBlockFile(scope: !2150, file: !21, discriminator: 2)
!2460 = !DILocation(line: 54, column: 5, scope: !2459)
!2461 = distinct !{!2461, !2462}
!2462 = !DILocation(line: 54, column: 5, scope: !2142)
!2463 = !DILocation(line: 66, column: 12, scope: !2142)
!2464 = !DILocation(line: 66, column: 5, scope: !2142)
!2465 = !DILocation(line: 67, column: 1, scope: !2142)
!2466 = distinct !DISubprogram(name: "ff_h264_idct8_add_9_c", scope: !21, file: !21, line: 69, type: !60, isLocal: false, isDefinition: true, scopeLine: 69, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!2467 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !2468)
!2468 = distinct !DILocation(line: 131, column: 29, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2470, file: !21, line: 109, column: 5)
!2470 = distinct !DILexicalBlock(scope: !2471, file: !21, line: 108, column: 5)
!2471 = distinct !DILexicalBlock(scope: !2466, file: !21, line: 108, column: 5)
!2472 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !2468)
!2473 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !2474)
!2474 = distinct !DILocation(line: 132, column: 29, scope: !2469)
!2475 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !2474)
!2476 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !2477)
!2477 = distinct !DILocation(line: 133, column: 29, scope: !2469)
!2478 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !2477)
!2479 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !2480)
!2480 = distinct !DILocation(line: 134, column: 29, scope: !2469)
!2481 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !2480)
!2482 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !2483)
!2483 = distinct !DILocation(line: 135, column: 29, scope: !2469)
!2484 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !2483)
!2485 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !2486)
!2486 = distinct !DILocation(line: 136, column: 29, scope: !2469)
!2487 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !2486)
!2488 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !2489)
!2489 = distinct !DILocation(line: 137, column: 29, scope: !2469)
!2490 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !2489)
!2491 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !2492)
!2492 = distinct !DILocation(line: 130, column: 29, scope: !2469)
!2493 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !2492)
!2494 = !DILocalVariable(name: "_dst", arg: 1, scope: !2466, file: !21, line: 69, type: !4)
!2495 = !DILocation(line: 69, column: 37, scope: !2466)
!2496 = !DILocalVariable(name: "_block", arg: 2, scope: !2466, file: !21, line: 69, type: !8)
!2497 = !DILocation(line: 69, column: 52, scope: !2466)
!2498 = !DILocalVariable(name: "stride", arg: 3, scope: !2466, file: !21, line: 69, type: !12)
!2499 = !DILocation(line: 69, column: 64, scope: !2466)
!2500 = !DILocalVariable(name: "i", scope: !2466, file: !21, line: 70, type: !12)
!2501 = !DILocation(line: 70, column: 9, scope: !2466)
!2502 = !DILocalVariable(name: "dst", scope: !2466, file: !21, line: 71, type: !13)
!2503 = !DILocation(line: 71, column: 15, scope: !2466)
!2504 = !DILocation(line: 71, column: 32, scope: !2466)
!2505 = !DILocation(line: 71, column: 21, scope: !2466)
!2506 = !DILocalVariable(name: "block", scope: !2466, file: !21, line: 72, type: !16)
!2507 = !DILocation(line: 72, column: 14, scope: !2466)
!2508 = !DILocation(line: 72, column: 32, scope: !2466)
!2509 = !DILocation(line: 72, column: 22, scope: !2466)
!2510 = !DILocation(line: 73, column: 12, scope: !2466)
!2511 = !DILocation(line: 75, column: 5, scope: !2466)
!2512 = !DILocation(line: 75, column: 14, scope: !2466)
!2513 = !DILocation(line: 77, column: 12, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2466, file: !21, line: 77, column: 5)
!2515 = !DILocation(line: 77, column: 10, scope: !2514)
!2516 = !DILocation(line: 77, column: 17, scope: !2517)
!2517 = !DILexicalBlockFile(scope: !2518, file: !21, discriminator: 1)
!2518 = distinct !DILexicalBlock(scope: !2514, file: !21, line: 77, column: 5)
!2519 = !DILocation(line: 77, column: 19, scope: !2517)
!2520 = !DILocation(line: 77, column: 5, scope: !2517)
!2521 = !DILocalVariable(name: "a0", scope: !2522, file: !21, line: 79, type: !106)
!2522 = distinct !DILexicalBlock(scope: !2518, file: !21, line: 78, column: 5)
!2523 = !DILocation(line: 79, column: 28, scope: !2522)
!2524 = !DILocation(line: 79, column: 39, scope: !2522)
!2525 = !DILocation(line: 79, column: 40, scope: !2522)
!2526 = !DILocation(line: 79, column: 33, scope: !2522)
!2527 = !DILocation(line: 79, column: 64, scope: !2522)
!2528 = !DILocation(line: 79, column: 65, scope: !2522)
!2529 = !DILocation(line: 79, column: 58, scope: !2522)
!2530 = !DILocation(line: 79, column: 46, scope: !2522)
!2531 = !DILocalVariable(name: "a2", scope: !2522, file: !21, line: 80, type: !106)
!2532 = !DILocation(line: 80, column: 28, scope: !2522)
!2533 = !DILocation(line: 80, column: 39, scope: !2522)
!2534 = !DILocation(line: 80, column: 40, scope: !2522)
!2535 = !DILocation(line: 80, column: 33, scope: !2522)
!2536 = !DILocation(line: 80, column: 64, scope: !2522)
!2537 = !DILocation(line: 80, column: 65, scope: !2522)
!2538 = !DILocation(line: 80, column: 58, scope: !2522)
!2539 = !DILocation(line: 80, column: 46, scope: !2522)
!2540 = !DILocalVariable(name: "a4", scope: !2522, file: !21, line: 81, type: !106)
!2541 = !DILocation(line: 81, column: 28, scope: !2522)
!2542 = !DILocation(line: 81, column: 40, scope: !2522)
!2543 = !DILocation(line: 81, column: 41, scope: !2522)
!2544 = !DILocation(line: 81, column: 34, scope: !2522)
!2545 = !DILocation(line: 81, column: 46, scope: !2522)
!2546 = !DILocation(line: 81, column: 69, scope: !2522)
!2547 = !DILocation(line: 81, column: 70, scope: !2522)
!2548 = !DILocation(line: 81, column: 63, scope: !2522)
!2549 = !DILocation(line: 81, column: 51, scope: !2522)
!2550 = !DILocalVariable(name: "a6", scope: !2522, file: !21, line: 82, type: !106)
!2551 = !DILocation(line: 82, column: 28, scope: !2522)
!2552 = !DILocation(line: 82, column: 40, scope: !2522)
!2553 = !DILocation(line: 82, column: 41, scope: !2522)
!2554 = !DILocation(line: 82, column: 34, scope: !2522)
!2555 = !DILocation(line: 82, column: 46, scope: !2522)
!2556 = !DILocation(line: 82, column: 69, scope: !2522)
!2557 = !DILocation(line: 82, column: 70, scope: !2522)
!2558 = !DILocation(line: 82, column: 63, scope: !2522)
!2559 = !DILocation(line: 82, column: 51, scope: !2522)
!2560 = !DILocalVariable(name: "b0", scope: !2522, file: !21, line: 84, type: !106)
!2561 = !DILocation(line: 84, column: 28, scope: !2522)
!2562 = !DILocation(line: 84, column: 33, scope: !2522)
!2563 = !DILocation(line: 84, column: 38, scope: !2522)
!2564 = !DILocation(line: 84, column: 36, scope: !2522)
!2565 = !DILocalVariable(name: "b2", scope: !2522, file: !21, line: 85, type: !106)
!2566 = !DILocation(line: 85, column: 28, scope: !2522)
!2567 = !DILocation(line: 85, column: 33, scope: !2522)
!2568 = !DILocation(line: 85, column: 38, scope: !2522)
!2569 = !DILocation(line: 85, column: 36, scope: !2522)
!2570 = !DILocalVariable(name: "b4", scope: !2522, file: !21, line: 86, type: !106)
!2571 = !DILocation(line: 86, column: 28, scope: !2522)
!2572 = !DILocation(line: 86, column: 33, scope: !2522)
!2573 = !DILocation(line: 86, column: 38, scope: !2522)
!2574 = !DILocation(line: 86, column: 36, scope: !2522)
!2575 = !DILocalVariable(name: "b6", scope: !2522, file: !21, line: 87, type: !106)
!2576 = !DILocation(line: 87, column: 28, scope: !2522)
!2577 = !DILocation(line: 87, column: 33, scope: !2522)
!2578 = !DILocation(line: 87, column: 38, scope: !2522)
!2579 = !DILocation(line: 87, column: 36, scope: !2522)
!2580 = !DILocalVariable(name: "a1", scope: !2522, file: !21, line: 89, type: !468)
!2581 = !DILocation(line: 89, column: 19, scope: !2522)
!2582 = !DILocation(line: 89, column: 31, scope: !2522)
!2583 = !DILocation(line: 89, column: 32, scope: !2522)
!2584 = !DILocation(line: 89, column: 25, scope: !2522)
!2585 = !DILocation(line: 89, column: 24, scope: !2522)
!2586 = !DILocation(line: 89, column: 56, scope: !2522)
!2587 = !DILocation(line: 89, column: 57, scope: !2522)
!2588 = !DILocation(line: 89, column: 50, scope: !2522)
!2589 = !DILocation(line: 89, column: 38, scope: !2522)
!2590 = !DILocation(line: 89, column: 71, scope: !2522)
!2591 = !DILocation(line: 89, column: 72, scope: !2522)
!2592 = !DILocation(line: 89, column: 65, scope: !2522)
!2593 = !DILocation(line: 89, column: 63, scope: !2522)
!2594 = !DILocation(line: 89, column: 87, scope: !2522)
!2595 = !DILocation(line: 89, column: 88, scope: !2522)
!2596 = !DILocation(line: 89, column: 81, scope: !2522)
!2597 = !DILocation(line: 89, column: 93, scope: !2522)
!2598 = !DILocation(line: 89, column: 78, scope: !2522)
!2599 = !DILocalVariable(name: "a3", scope: !2522, file: !21, line: 90, type: !468)
!2600 = !DILocation(line: 90, column: 19, scope: !2522)
!2601 = !DILocation(line: 90, column: 30, scope: !2522)
!2602 = !DILocation(line: 90, column: 31, scope: !2522)
!2603 = !DILocation(line: 90, column: 24, scope: !2522)
!2604 = !DILocation(line: 90, column: 55, scope: !2522)
!2605 = !DILocation(line: 90, column: 56, scope: !2522)
!2606 = !DILocation(line: 90, column: 49, scope: !2522)
!2607 = !DILocation(line: 90, column: 37, scope: !2522)
!2608 = !DILocation(line: 90, column: 70, scope: !2522)
!2609 = !DILocation(line: 90, column: 71, scope: !2522)
!2610 = !DILocation(line: 90, column: 64, scope: !2522)
!2611 = !DILocation(line: 90, column: 62, scope: !2522)
!2612 = !DILocation(line: 90, column: 86, scope: !2522)
!2613 = !DILocation(line: 90, column: 87, scope: !2522)
!2614 = !DILocation(line: 90, column: 80, scope: !2522)
!2615 = !DILocation(line: 90, column: 92, scope: !2522)
!2616 = !DILocation(line: 90, column: 77, scope: !2522)
!2617 = !DILocalVariable(name: "a5", scope: !2522, file: !21, line: 91, type: !468)
!2618 = !DILocation(line: 91, column: 19, scope: !2522)
!2619 = !DILocation(line: 91, column: 31, scope: !2522)
!2620 = !DILocation(line: 91, column: 32, scope: !2522)
!2621 = !DILocation(line: 91, column: 25, scope: !2522)
!2622 = !DILocation(line: 91, column: 24, scope: !2522)
!2623 = !DILocation(line: 91, column: 56, scope: !2522)
!2624 = !DILocation(line: 91, column: 57, scope: !2522)
!2625 = !DILocation(line: 91, column: 50, scope: !2522)
!2626 = !DILocation(line: 91, column: 38, scope: !2522)
!2627 = !DILocation(line: 91, column: 71, scope: !2522)
!2628 = !DILocation(line: 91, column: 72, scope: !2522)
!2629 = !DILocation(line: 91, column: 65, scope: !2522)
!2630 = !DILocation(line: 91, column: 63, scope: !2522)
!2631 = !DILocation(line: 91, column: 87, scope: !2522)
!2632 = !DILocation(line: 91, column: 88, scope: !2522)
!2633 = !DILocation(line: 91, column: 81, scope: !2522)
!2634 = !DILocation(line: 91, column: 93, scope: !2522)
!2635 = !DILocation(line: 91, column: 78, scope: !2522)
!2636 = !DILocalVariable(name: "a7", scope: !2522, file: !21, line: 92, type: !468)
!2637 = !DILocation(line: 92, column: 19, scope: !2522)
!2638 = !DILocation(line: 92, column: 30, scope: !2522)
!2639 = !DILocation(line: 92, column: 31, scope: !2522)
!2640 = !DILocation(line: 92, column: 24, scope: !2522)
!2641 = !DILocation(line: 92, column: 55, scope: !2522)
!2642 = !DILocation(line: 92, column: 56, scope: !2522)
!2643 = !DILocation(line: 92, column: 49, scope: !2522)
!2644 = !DILocation(line: 92, column: 37, scope: !2522)
!2645 = !DILocation(line: 92, column: 70, scope: !2522)
!2646 = !DILocation(line: 92, column: 71, scope: !2522)
!2647 = !DILocation(line: 92, column: 64, scope: !2522)
!2648 = !DILocation(line: 92, column: 62, scope: !2522)
!2649 = !DILocation(line: 92, column: 86, scope: !2522)
!2650 = !DILocation(line: 92, column: 87, scope: !2522)
!2651 = !DILocation(line: 92, column: 80, scope: !2522)
!2652 = !DILocation(line: 92, column: 92, scope: !2522)
!2653 = !DILocation(line: 92, column: 77, scope: !2522)
!2654 = !DILocalVariable(name: "b1", scope: !2522, file: !21, line: 94, type: !468)
!2655 = !DILocation(line: 94, column: 19, scope: !2522)
!2656 = !DILocation(line: 94, column: 25, scope: !2522)
!2657 = !DILocation(line: 94, column: 27, scope: !2522)
!2658 = !DILocation(line: 94, column: 44, scope: !2522)
!2659 = !DILocation(line: 94, column: 32, scope: !2522)
!2660 = !DILocalVariable(name: "b3", scope: !2522, file: !21, line: 95, type: !468)
!2661 = !DILocation(line: 95, column: 19, scope: !2522)
!2662 = !DILocation(line: 95, column: 34, scope: !2522)
!2663 = !DILocation(line: 95, column: 40, scope: !2522)
!2664 = !DILocation(line: 95, column: 42, scope: !2522)
!2665 = !DILocation(line: 95, column: 37, scope: !2522)
!2666 = !DILocalVariable(name: "b5", scope: !2522, file: !21, line: 96, type: !468)
!2667 = !DILocation(line: 96, column: 19, scope: !2522)
!2668 = !DILocation(line: 96, column: 25, scope: !2522)
!2669 = !DILocation(line: 96, column: 27, scope: !2522)
!2670 = !DILocation(line: 96, column: 44, scope: !2522)
!2671 = !DILocation(line: 96, column: 32, scope: !2522)
!2672 = !DILocalVariable(name: "b7", scope: !2522, file: !21, line: 97, type: !468)
!2673 = !DILocation(line: 97, column: 19, scope: !2522)
!2674 = !DILocation(line: 97, column: 34, scope: !2522)
!2675 = !DILocation(line: 97, column: 40, scope: !2522)
!2676 = !DILocation(line: 97, column: 42, scope: !2522)
!2677 = !DILocation(line: 97, column: 37, scope: !2522)
!2678 = !DILocation(line: 99, column: 24, scope: !2522)
!2679 = !DILocation(line: 99, column: 29, scope: !2522)
!2680 = !DILocation(line: 99, column: 27, scope: !2522)
!2681 = !DILocation(line: 99, column: 15, scope: !2522)
!2682 = !DILocation(line: 99, column: 16, scope: !2522)
!2683 = !DILocation(line: 99, column: 9, scope: !2522)
!2684 = !DILocation(line: 99, column: 22, scope: !2522)
!2685 = !DILocation(line: 100, column: 24, scope: !2522)
!2686 = !DILocation(line: 100, column: 29, scope: !2522)
!2687 = !DILocation(line: 100, column: 27, scope: !2522)
!2688 = !DILocation(line: 100, column: 15, scope: !2522)
!2689 = !DILocation(line: 100, column: 16, scope: !2522)
!2690 = !DILocation(line: 100, column: 9, scope: !2522)
!2691 = !DILocation(line: 100, column: 22, scope: !2522)
!2692 = !DILocation(line: 101, column: 24, scope: !2522)
!2693 = !DILocation(line: 101, column: 29, scope: !2522)
!2694 = !DILocation(line: 101, column: 27, scope: !2522)
!2695 = !DILocation(line: 101, column: 15, scope: !2522)
!2696 = !DILocation(line: 101, column: 16, scope: !2522)
!2697 = !DILocation(line: 101, column: 9, scope: !2522)
!2698 = !DILocation(line: 101, column: 22, scope: !2522)
!2699 = !DILocation(line: 102, column: 24, scope: !2522)
!2700 = !DILocation(line: 102, column: 29, scope: !2522)
!2701 = !DILocation(line: 102, column: 27, scope: !2522)
!2702 = !DILocation(line: 102, column: 15, scope: !2522)
!2703 = !DILocation(line: 102, column: 16, scope: !2522)
!2704 = !DILocation(line: 102, column: 9, scope: !2522)
!2705 = !DILocation(line: 102, column: 22, scope: !2522)
!2706 = !DILocation(line: 103, column: 24, scope: !2522)
!2707 = !DILocation(line: 103, column: 29, scope: !2522)
!2708 = !DILocation(line: 103, column: 27, scope: !2522)
!2709 = !DILocation(line: 103, column: 15, scope: !2522)
!2710 = !DILocation(line: 103, column: 16, scope: !2522)
!2711 = !DILocation(line: 103, column: 9, scope: !2522)
!2712 = !DILocation(line: 103, column: 22, scope: !2522)
!2713 = !DILocation(line: 104, column: 24, scope: !2522)
!2714 = !DILocation(line: 104, column: 29, scope: !2522)
!2715 = !DILocation(line: 104, column: 27, scope: !2522)
!2716 = !DILocation(line: 104, column: 15, scope: !2522)
!2717 = !DILocation(line: 104, column: 16, scope: !2522)
!2718 = !DILocation(line: 104, column: 9, scope: !2522)
!2719 = !DILocation(line: 104, column: 22, scope: !2522)
!2720 = !DILocation(line: 105, column: 24, scope: !2522)
!2721 = !DILocation(line: 105, column: 29, scope: !2522)
!2722 = !DILocation(line: 105, column: 27, scope: !2522)
!2723 = !DILocation(line: 105, column: 15, scope: !2522)
!2724 = !DILocation(line: 105, column: 16, scope: !2522)
!2725 = !DILocation(line: 105, column: 9, scope: !2522)
!2726 = !DILocation(line: 105, column: 22, scope: !2522)
!2727 = !DILocation(line: 106, column: 24, scope: !2522)
!2728 = !DILocation(line: 106, column: 29, scope: !2522)
!2729 = !DILocation(line: 106, column: 27, scope: !2522)
!2730 = !DILocation(line: 106, column: 15, scope: !2522)
!2731 = !DILocation(line: 106, column: 16, scope: !2522)
!2732 = !DILocation(line: 106, column: 9, scope: !2522)
!2733 = !DILocation(line: 106, column: 22, scope: !2522)
!2734 = !DILocation(line: 107, column: 5, scope: !2522)
!2735 = !DILocation(line: 77, column: 25, scope: !2736)
!2736 = !DILexicalBlockFile(scope: !2518, file: !21, discriminator: 2)
!2737 = !DILocation(line: 77, column: 5, scope: !2736)
!2738 = distinct !{!2738, !2739}
!2739 = !DILocation(line: 77, column: 5, scope: !2466)
!2740 = !DILocation(line: 108, column: 12, scope: !2471)
!2741 = !DILocation(line: 108, column: 10, scope: !2471)
!2742 = !DILocation(line: 108, column: 17, scope: !2743)
!2743 = !DILexicalBlockFile(scope: !2470, file: !21, discriminator: 1)
!2744 = !DILocation(line: 108, column: 19, scope: !2743)
!2745 = !DILocation(line: 108, column: 5, scope: !2743)
!2746 = !DILocalVariable(name: "a0", scope: !2469, file: !21, line: 110, type: !106)
!2747 = !DILocation(line: 110, column: 24, scope: !2469)
!2748 = !DILocation(line: 110, column: 37, scope: !2469)
!2749 = !DILocation(line: 110, column: 38, scope: !2469)
!2750 = !DILocation(line: 110, column: 36, scope: !2469)
!2751 = !DILocation(line: 110, column: 29, scope: !2469)
!2752 = !DILocation(line: 110, column: 62, scope: !2469)
!2753 = !DILocation(line: 110, column: 63, scope: !2469)
!2754 = !DILocation(line: 110, column: 61, scope: !2469)
!2755 = !DILocation(line: 110, column: 54, scope: !2469)
!2756 = !DILocation(line: 110, column: 42, scope: !2469)
!2757 = !DILocalVariable(name: "a2", scope: !2469, file: !21, line: 111, type: !106)
!2758 = !DILocation(line: 111, column: 24, scope: !2469)
!2759 = !DILocation(line: 111, column: 37, scope: !2469)
!2760 = !DILocation(line: 111, column: 38, scope: !2469)
!2761 = !DILocation(line: 111, column: 36, scope: !2469)
!2762 = !DILocation(line: 111, column: 29, scope: !2469)
!2763 = !DILocation(line: 111, column: 62, scope: !2469)
!2764 = !DILocation(line: 111, column: 63, scope: !2469)
!2765 = !DILocation(line: 111, column: 61, scope: !2469)
!2766 = !DILocation(line: 111, column: 54, scope: !2469)
!2767 = !DILocation(line: 111, column: 42, scope: !2469)
!2768 = !DILocalVariable(name: "a4", scope: !2469, file: !21, line: 112, type: !106)
!2769 = !DILocation(line: 112, column: 24, scope: !2469)
!2770 = !DILocation(line: 112, column: 38, scope: !2469)
!2771 = !DILocation(line: 112, column: 39, scope: !2469)
!2772 = !DILocation(line: 112, column: 37, scope: !2469)
!2773 = !DILocation(line: 112, column: 30, scope: !2469)
!2774 = !DILocation(line: 112, column: 42, scope: !2469)
!2775 = !DILocation(line: 112, column: 67, scope: !2469)
!2776 = !DILocation(line: 112, column: 68, scope: !2469)
!2777 = !DILocation(line: 112, column: 66, scope: !2469)
!2778 = !DILocation(line: 112, column: 59, scope: !2469)
!2779 = !DILocation(line: 112, column: 47, scope: !2469)
!2780 = !DILocalVariable(name: "a6", scope: !2469, file: !21, line: 113, type: !106)
!2781 = !DILocation(line: 113, column: 24, scope: !2469)
!2782 = !DILocation(line: 113, column: 38, scope: !2469)
!2783 = !DILocation(line: 113, column: 39, scope: !2469)
!2784 = !DILocation(line: 113, column: 37, scope: !2469)
!2785 = !DILocation(line: 113, column: 30, scope: !2469)
!2786 = !DILocation(line: 113, column: 42, scope: !2469)
!2787 = !DILocation(line: 113, column: 67, scope: !2469)
!2788 = !DILocation(line: 113, column: 68, scope: !2469)
!2789 = !DILocation(line: 113, column: 66, scope: !2469)
!2790 = !DILocation(line: 113, column: 59, scope: !2469)
!2791 = !DILocation(line: 113, column: 47, scope: !2469)
!2792 = !DILocalVariable(name: "b0", scope: !2469, file: !21, line: 115, type: !106)
!2793 = !DILocation(line: 115, column: 24, scope: !2469)
!2794 = !DILocation(line: 115, column: 29, scope: !2469)
!2795 = !DILocation(line: 115, column: 34, scope: !2469)
!2796 = !DILocation(line: 115, column: 32, scope: !2469)
!2797 = !DILocalVariable(name: "b2", scope: !2469, file: !21, line: 116, type: !106)
!2798 = !DILocation(line: 116, column: 24, scope: !2469)
!2799 = !DILocation(line: 116, column: 29, scope: !2469)
!2800 = !DILocation(line: 116, column: 34, scope: !2469)
!2801 = !DILocation(line: 116, column: 32, scope: !2469)
!2802 = !DILocalVariable(name: "b4", scope: !2469, file: !21, line: 117, type: !106)
!2803 = !DILocation(line: 117, column: 24, scope: !2469)
!2804 = !DILocation(line: 117, column: 29, scope: !2469)
!2805 = !DILocation(line: 117, column: 34, scope: !2469)
!2806 = !DILocation(line: 117, column: 32, scope: !2469)
!2807 = !DILocalVariable(name: "b6", scope: !2469, file: !21, line: 118, type: !106)
!2808 = !DILocation(line: 118, column: 24, scope: !2469)
!2809 = !DILocation(line: 118, column: 29, scope: !2469)
!2810 = !DILocation(line: 118, column: 34, scope: !2469)
!2811 = !DILocation(line: 118, column: 32, scope: !2469)
!2812 = !DILocalVariable(name: "a1", scope: !2469, file: !21, line: 120, type: !468)
!2813 = !DILocation(line: 120, column: 19, scope: !2469)
!2814 = !DILocation(line: 120, column: 43, scope: !2469)
!2815 = !DILocation(line: 120, column: 44, scope: !2469)
!2816 = !DILocation(line: 120, column: 42, scope: !2469)
!2817 = !DILocation(line: 120, column: 35, scope: !2469)
!2818 = !DILocation(line: 120, column: 24, scope: !2469)
!2819 = !DILocation(line: 120, column: 58, scope: !2469)
!2820 = !DILocation(line: 120, column: 59, scope: !2469)
!2821 = !DILocation(line: 120, column: 57, scope: !2469)
!2822 = !DILocation(line: 120, column: 50, scope: !2469)
!2823 = !DILocation(line: 120, column: 48, scope: !2469)
!2824 = !DILocation(line: 120, column: 73, scope: !2469)
!2825 = !DILocation(line: 120, column: 74, scope: !2469)
!2826 = !DILocation(line: 120, column: 72, scope: !2469)
!2827 = !DILocation(line: 120, column: 65, scope: !2469)
!2828 = !DILocation(line: 120, column: 63, scope: !2469)
!2829 = !DILocation(line: 120, column: 89, scope: !2469)
!2830 = !DILocation(line: 120, column: 90, scope: !2469)
!2831 = !DILocation(line: 120, column: 88, scope: !2469)
!2832 = !DILocation(line: 120, column: 81, scope: !2469)
!2833 = !DILocation(line: 120, column: 93, scope: !2469)
!2834 = !DILocation(line: 120, column: 78, scope: !2469)
!2835 = !DILocalVariable(name: "a3", scope: !2469, file: !21, line: 121, type: !468)
!2836 = !DILocation(line: 121, column: 19, scope: !2469)
!2837 = !DILocation(line: 121, column: 42, scope: !2469)
!2838 = !DILocation(line: 121, column: 43, scope: !2469)
!2839 = !DILocation(line: 121, column: 41, scope: !2469)
!2840 = !DILocation(line: 121, column: 34, scope: !2469)
!2841 = !DILocation(line: 121, column: 57, scope: !2469)
!2842 = !DILocation(line: 121, column: 58, scope: !2469)
!2843 = !DILocation(line: 121, column: 56, scope: !2469)
!2844 = !DILocation(line: 121, column: 49, scope: !2469)
!2845 = !DILocation(line: 121, column: 47, scope: !2469)
!2846 = !DILocation(line: 121, column: 72, scope: !2469)
!2847 = !DILocation(line: 121, column: 73, scope: !2469)
!2848 = !DILocation(line: 121, column: 71, scope: !2469)
!2849 = !DILocation(line: 121, column: 64, scope: !2469)
!2850 = !DILocation(line: 121, column: 62, scope: !2469)
!2851 = !DILocation(line: 121, column: 88, scope: !2469)
!2852 = !DILocation(line: 121, column: 89, scope: !2469)
!2853 = !DILocation(line: 121, column: 87, scope: !2469)
!2854 = !DILocation(line: 121, column: 80, scope: !2469)
!2855 = !DILocation(line: 121, column: 92, scope: !2469)
!2856 = !DILocation(line: 121, column: 77, scope: !2469)
!2857 = !DILocalVariable(name: "a5", scope: !2469, file: !21, line: 122, type: !468)
!2858 = !DILocation(line: 122, column: 19, scope: !2469)
!2859 = !DILocation(line: 122, column: 43, scope: !2469)
!2860 = !DILocation(line: 122, column: 44, scope: !2469)
!2861 = !DILocation(line: 122, column: 42, scope: !2469)
!2862 = !DILocation(line: 122, column: 35, scope: !2469)
!2863 = !DILocation(line: 122, column: 24, scope: !2469)
!2864 = !DILocation(line: 122, column: 58, scope: !2469)
!2865 = !DILocation(line: 122, column: 59, scope: !2469)
!2866 = !DILocation(line: 122, column: 57, scope: !2469)
!2867 = !DILocation(line: 122, column: 50, scope: !2469)
!2868 = !DILocation(line: 122, column: 48, scope: !2469)
!2869 = !DILocation(line: 122, column: 73, scope: !2469)
!2870 = !DILocation(line: 122, column: 74, scope: !2469)
!2871 = !DILocation(line: 122, column: 72, scope: !2469)
!2872 = !DILocation(line: 122, column: 65, scope: !2469)
!2873 = !DILocation(line: 122, column: 63, scope: !2469)
!2874 = !DILocation(line: 122, column: 89, scope: !2469)
!2875 = !DILocation(line: 122, column: 90, scope: !2469)
!2876 = !DILocation(line: 122, column: 88, scope: !2469)
!2877 = !DILocation(line: 122, column: 81, scope: !2469)
!2878 = !DILocation(line: 122, column: 93, scope: !2469)
!2879 = !DILocation(line: 122, column: 78, scope: !2469)
!2880 = !DILocalVariable(name: "a7", scope: !2469, file: !21, line: 123, type: !468)
!2881 = !DILocation(line: 123, column: 19, scope: !2469)
!2882 = !DILocation(line: 123, column: 42, scope: !2469)
!2883 = !DILocation(line: 123, column: 43, scope: !2469)
!2884 = !DILocation(line: 123, column: 41, scope: !2469)
!2885 = !DILocation(line: 123, column: 34, scope: !2469)
!2886 = !DILocation(line: 123, column: 57, scope: !2469)
!2887 = !DILocation(line: 123, column: 58, scope: !2469)
!2888 = !DILocation(line: 123, column: 56, scope: !2469)
!2889 = !DILocation(line: 123, column: 49, scope: !2469)
!2890 = !DILocation(line: 123, column: 47, scope: !2469)
!2891 = !DILocation(line: 123, column: 72, scope: !2469)
!2892 = !DILocation(line: 123, column: 73, scope: !2469)
!2893 = !DILocation(line: 123, column: 71, scope: !2469)
!2894 = !DILocation(line: 123, column: 64, scope: !2469)
!2895 = !DILocation(line: 123, column: 62, scope: !2469)
!2896 = !DILocation(line: 123, column: 88, scope: !2469)
!2897 = !DILocation(line: 123, column: 89, scope: !2469)
!2898 = !DILocation(line: 123, column: 87, scope: !2469)
!2899 = !DILocation(line: 123, column: 80, scope: !2469)
!2900 = !DILocation(line: 123, column: 92, scope: !2469)
!2901 = !DILocation(line: 123, column: 77, scope: !2469)
!2902 = !DILocalVariable(name: "b1", scope: !2469, file: !21, line: 125, type: !106)
!2903 = !DILocation(line: 125, column: 24, scope: !2469)
!2904 = !DILocation(line: 125, column: 30, scope: !2469)
!2905 = !DILocation(line: 125, column: 32, scope: !2469)
!2906 = !DILocation(line: 125, column: 49, scope: !2469)
!2907 = !DILocation(line: 125, column: 37, scope: !2469)
!2908 = !DILocalVariable(name: "b3", scope: !2469, file: !21, line: 126, type: !106)
!2909 = !DILocation(line: 126, column: 24, scope: !2469)
!2910 = !DILocation(line: 126, column: 39, scope: !2469)
!2911 = !DILocation(line: 126, column: 45, scope: !2469)
!2912 = !DILocation(line: 126, column: 47, scope: !2469)
!2913 = !DILocation(line: 126, column: 42, scope: !2469)
!2914 = !DILocalVariable(name: "b5", scope: !2469, file: !21, line: 127, type: !106)
!2915 = !DILocation(line: 127, column: 24, scope: !2469)
!2916 = !DILocation(line: 127, column: 30, scope: !2469)
!2917 = !DILocation(line: 127, column: 32, scope: !2469)
!2918 = !DILocation(line: 127, column: 49, scope: !2469)
!2919 = !DILocation(line: 127, column: 37, scope: !2469)
!2920 = !DILocalVariable(name: "b7", scope: !2469, file: !21, line: 128, type: !106)
!2921 = !DILocation(line: 128, column: 24, scope: !2469)
!2922 = !DILocation(line: 128, column: 39, scope: !2469)
!2923 = !DILocation(line: 128, column: 45, scope: !2469)
!2924 = !DILocation(line: 128, column: 47, scope: !2469)
!2925 = !DILocation(line: 128, column: 42, scope: !2469)
!2926 = !DILocation(line: 130, column: 50, scope: !2469)
!2927 = !DILocation(line: 130, column: 56, scope: !2469)
!2928 = !DILocation(line: 130, column: 55, scope: !2469)
!2929 = !DILocation(line: 130, column: 52, scope: !2469)
!2930 = !DILocation(line: 130, column: 46, scope: !2469)
!2931 = !DILocation(line: 130, column: 73, scope: !2469)
!2932 = !DILocation(line: 130, column: 78, scope: !2469)
!2933 = !DILocation(line: 130, column: 76, scope: !2469)
!2934 = !DILocation(line: 130, column: 82, scope: !2469)
!2935 = !DILocation(line: 130, column: 64, scope: !2469)
!2936 = !DILocation(line: 130, column: 29, scope: !2469)
!2937 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !2492)
!2938 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !2492)
!2939 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !2492)
!2940 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !2492)
!2941 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !2492)
!2942 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !2492)
!2943 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !2492)
!2944 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !2492)
!2945 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !2492)
!2946 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !2492)
!2947 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !2492)
!2948 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !2492)
!2949 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !2492)
!2950 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !2492)
!2951 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !2492)
!2952 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !2492)
!2953 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !2492)
!2954 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !2492)
!2955 = !DILocation(line: 130, column: 13, scope: !2469)
!2956 = !DILocation(line: 130, column: 19, scope: !2469)
!2957 = !DILocation(line: 130, column: 18, scope: !2469)
!2958 = !DILocation(line: 130, column: 15, scope: !2469)
!2959 = !DILocation(line: 130, column: 9, scope: !2469)
!2960 = !DILocation(line: 130, column: 27, scope: !2469)
!2961 = !DILocation(line: 131, column: 50, scope: !2469)
!2962 = !DILocation(line: 131, column: 56, scope: !2469)
!2963 = !DILocation(line: 131, column: 55, scope: !2469)
!2964 = !DILocation(line: 131, column: 52, scope: !2469)
!2965 = !DILocation(line: 131, column: 46, scope: !2469)
!2966 = !DILocation(line: 131, column: 73, scope: !2469)
!2967 = !DILocation(line: 131, column: 78, scope: !2469)
!2968 = !DILocation(line: 131, column: 76, scope: !2469)
!2969 = !DILocation(line: 131, column: 82, scope: !2469)
!2970 = !DILocation(line: 131, column: 64, scope: !2469)
!2971 = !DILocation(line: 131, column: 29, scope: !2469)
!2972 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !2468)
!2973 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !2468)
!2974 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !2468)
!2975 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !2468)
!2976 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !2468)
!2977 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !2468)
!2978 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !2468)
!2979 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !2468)
!2980 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !2468)
!2981 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !2468)
!2982 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !2468)
!2983 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !2468)
!2984 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !2468)
!2985 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !2468)
!2986 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !2468)
!2987 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !2468)
!2988 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !2468)
!2989 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !2468)
!2990 = !DILocation(line: 131, column: 13, scope: !2469)
!2991 = !DILocation(line: 131, column: 19, scope: !2469)
!2992 = !DILocation(line: 131, column: 18, scope: !2469)
!2993 = !DILocation(line: 131, column: 15, scope: !2469)
!2994 = !DILocation(line: 131, column: 9, scope: !2469)
!2995 = !DILocation(line: 131, column: 27, scope: !2469)
!2996 = !DILocation(line: 132, column: 50, scope: !2469)
!2997 = !DILocation(line: 132, column: 56, scope: !2469)
!2998 = !DILocation(line: 132, column: 55, scope: !2469)
!2999 = !DILocation(line: 132, column: 52, scope: !2469)
!3000 = !DILocation(line: 132, column: 46, scope: !2469)
!3001 = !DILocation(line: 132, column: 73, scope: !2469)
!3002 = !DILocation(line: 132, column: 78, scope: !2469)
!3003 = !DILocation(line: 132, column: 76, scope: !2469)
!3004 = !DILocation(line: 132, column: 82, scope: !2469)
!3005 = !DILocation(line: 132, column: 64, scope: !2469)
!3006 = !DILocation(line: 132, column: 29, scope: !2469)
!3007 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !2474)
!3008 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !2474)
!3009 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !2474)
!3010 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !2474)
!3011 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !2474)
!3012 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !2474)
!3013 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !2474)
!3014 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !2474)
!3015 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !2474)
!3016 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !2474)
!3017 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !2474)
!3018 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !2474)
!3019 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !2474)
!3020 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !2474)
!3021 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !2474)
!3022 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !2474)
!3023 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !2474)
!3024 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !2474)
!3025 = !DILocation(line: 132, column: 13, scope: !2469)
!3026 = !DILocation(line: 132, column: 19, scope: !2469)
!3027 = !DILocation(line: 132, column: 18, scope: !2469)
!3028 = !DILocation(line: 132, column: 15, scope: !2469)
!3029 = !DILocation(line: 132, column: 9, scope: !2469)
!3030 = !DILocation(line: 132, column: 27, scope: !2469)
!3031 = !DILocation(line: 133, column: 50, scope: !2469)
!3032 = !DILocation(line: 133, column: 56, scope: !2469)
!3033 = !DILocation(line: 133, column: 55, scope: !2469)
!3034 = !DILocation(line: 133, column: 52, scope: !2469)
!3035 = !DILocation(line: 133, column: 46, scope: !2469)
!3036 = !DILocation(line: 133, column: 73, scope: !2469)
!3037 = !DILocation(line: 133, column: 78, scope: !2469)
!3038 = !DILocation(line: 133, column: 76, scope: !2469)
!3039 = !DILocation(line: 133, column: 82, scope: !2469)
!3040 = !DILocation(line: 133, column: 64, scope: !2469)
!3041 = !DILocation(line: 133, column: 29, scope: !2469)
!3042 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !2477)
!3043 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !2477)
!3044 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !2477)
!3045 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !2477)
!3046 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !2477)
!3047 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !2477)
!3048 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !2477)
!3049 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !2477)
!3050 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !2477)
!3051 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !2477)
!3052 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !2477)
!3053 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !2477)
!3054 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !2477)
!3055 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !2477)
!3056 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !2477)
!3057 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !2477)
!3058 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !2477)
!3059 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !2477)
!3060 = !DILocation(line: 133, column: 13, scope: !2469)
!3061 = !DILocation(line: 133, column: 19, scope: !2469)
!3062 = !DILocation(line: 133, column: 18, scope: !2469)
!3063 = !DILocation(line: 133, column: 15, scope: !2469)
!3064 = !DILocation(line: 133, column: 9, scope: !2469)
!3065 = !DILocation(line: 133, column: 27, scope: !2469)
!3066 = !DILocation(line: 134, column: 50, scope: !2469)
!3067 = !DILocation(line: 134, column: 56, scope: !2469)
!3068 = !DILocation(line: 134, column: 55, scope: !2469)
!3069 = !DILocation(line: 134, column: 52, scope: !2469)
!3070 = !DILocation(line: 134, column: 46, scope: !2469)
!3071 = !DILocation(line: 134, column: 73, scope: !2469)
!3072 = !DILocation(line: 134, column: 78, scope: !2469)
!3073 = !DILocation(line: 134, column: 76, scope: !2469)
!3074 = !DILocation(line: 134, column: 82, scope: !2469)
!3075 = !DILocation(line: 134, column: 64, scope: !2469)
!3076 = !DILocation(line: 134, column: 29, scope: !2469)
!3077 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !2480)
!3078 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !2480)
!3079 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !2480)
!3080 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !2480)
!3081 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !2480)
!3082 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !2480)
!3083 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !2480)
!3084 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !2480)
!3085 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !2480)
!3086 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !2480)
!3087 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !2480)
!3088 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !2480)
!3089 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !2480)
!3090 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !2480)
!3091 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !2480)
!3092 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !2480)
!3093 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !2480)
!3094 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !2480)
!3095 = !DILocation(line: 134, column: 13, scope: !2469)
!3096 = !DILocation(line: 134, column: 19, scope: !2469)
!3097 = !DILocation(line: 134, column: 18, scope: !2469)
!3098 = !DILocation(line: 134, column: 15, scope: !2469)
!3099 = !DILocation(line: 134, column: 9, scope: !2469)
!3100 = !DILocation(line: 134, column: 27, scope: !2469)
!3101 = !DILocation(line: 135, column: 50, scope: !2469)
!3102 = !DILocation(line: 135, column: 56, scope: !2469)
!3103 = !DILocation(line: 135, column: 55, scope: !2469)
!3104 = !DILocation(line: 135, column: 52, scope: !2469)
!3105 = !DILocation(line: 135, column: 46, scope: !2469)
!3106 = !DILocation(line: 135, column: 73, scope: !2469)
!3107 = !DILocation(line: 135, column: 78, scope: !2469)
!3108 = !DILocation(line: 135, column: 76, scope: !2469)
!3109 = !DILocation(line: 135, column: 82, scope: !2469)
!3110 = !DILocation(line: 135, column: 64, scope: !2469)
!3111 = !DILocation(line: 135, column: 29, scope: !2469)
!3112 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !2483)
!3113 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !2483)
!3114 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !2483)
!3115 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !2483)
!3116 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !2483)
!3117 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !2483)
!3118 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !2483)
!3119 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !2483)
!3120 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !2483)
!3121 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !2483)
!3122 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !2483)
!3123 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !2483)
!3124 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !2483)
!3125 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !2483)
!3126 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !2483)
!3127 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !2483)
!3128 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !2483)
!3129 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !2483)
!3130 = !DILocation(line: 135, column: 13, scope: !2469)
!3131 = !DILocation(line: 135, column: 19, scope: !2469)
!3132 = !DILocation(line: 135, column: 18, scope: !2469)
!3133 = !DILocation(line: 135, column: 15, scope: !2469)
!3134 = !DILocation(line: 135, column: 9, scope: !2469)
!3135 = !DILocation(line: 135, column: 27, scope: !2469)
!3136 = !DILocation(line: 136, column: 50, scope: !2469)
!3137 = !DILocation(line: 136, column: 56, scope: !2469)
!3138 = !DILocation(line: 136, column: 55, scope: !2469)
!3139 = !DILocation(line: 136, column: 52, scope: !2469)
!3140 = !DILocation(line: 136, column: 46, scope: !2469)
!3141 = !DILocation(line: 136, column: 73, scope: !2469)
!3142 = !DILocation(line: 136, column: 78, scope: !2469)
!3143 = !DILocation(line: 136, column: 76, scope: !2469)
!3144 = !DILocation(line: 136, column: 82, scope: !2469)
!3145 = !DILocation(line: 136, column: 64, scope: !2469)
!3146 = !DILocation(line: 136, column: 29, scope: !2469)
!3147 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !2486)
!3148 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !2486)
!3149 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !2486)
!3150 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !2486)
!3151 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !2486)
!3152 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !2486)
!3153 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !2486)
!3154 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !2486)
!3155 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !2486)
!3156 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !2486)
!3157 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !2486)
!3158 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !2486)
!3159 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !2486)
!3160 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !2486)
!3161 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !2486)
!3162 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !2486)
!3163 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !2486)
!3164 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !2486)
!3165 = !DILocation(line: 136, column: 13, scope: !2469)
!3166 = !DILocation(line: 136, column: 19, scope: !2469)
!3167 = !DILocation(line: 136, column: 18, scope: !2469)
!3168 = !DILocation(line: 136, column: 15, scope: !2469)
!3169 = !DILocation(line: 136, column: 9, scope: !2469)
!3170 = !DILocation(line: 136, column: 27, scope: !2469)
!3171 = !DILocation(line: 137, column: 50, scope: !2469)
!3172 = !DILocation(line: 137, column: 56, scope: !2469)
!3173 = !DILocation(line: 137, column: 55, scope: !2469)
!3174 = !DILocation(line: 137, column: 52, scope: !2469)
!3175 = !DILocation(line: 137, column: 46, scope: !2469)
!3176 = !DILocation(line: 137, column: 73, scope: !2469)
!3177 = !DILocation(line: 137, column: 78, scope: !2469)
!3178 = !DILocation(line: 137, column: 76, scope: !2469)
!3179 = !DILocation(line: 137, column: 82, scope: !2469)
!3180 = !DILocation(line: 137, column: 64, scope: !2469)
!3181 = !DILocation(line: 137, column: 29, scope: !2469)
!3182 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !2489)
!3183 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !2489)
!3184 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !2489)
!3185 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !2489)
!3186 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !2489)
!3187 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !2489)
!3188 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !2489)
!3189 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !2489)
!3190 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !2489)
!3191 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !2489)
!3192 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !2489)
!3193 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !2489)
!3194 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !2489)
!3195 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !2489)
!3196 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !2489)
!3197 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !2489)
!3198 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !2489)
!3199 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !2489)
!3200 = !DILocation(line: 137, column: 13, scope: !2469)
!3201 = !DILocation(line: 137, column: 19, scope: !2469)
!3202 = !DILocation(line: 137, column: 18, scope: !2469)
!3203 = !DILocation(line: 137, column: 15, scope: !2469)
!3204 = !DILocation(line: 137, column: 9, scope: !2469)
!3205 = !DILocation(line: 137, column: 27, scope: !2469)
!3206 = !DILocation(line: 138, column: 5, scope: !2469)
!3207 = !DILocation(line: 108, column: 25, scope: !3208)
!3208 = !DILexicalBlockFile(scope: !2470, file: !21, discriminator: 2)
!3209 = !DILocation(line: 108, column: 5, scope: !3208)
!3210 = distinct !{!3210, !3211}
!3211 = !DILocation(line: 108, column: 5, scope: !2466)
!3212 = !DILocation(line: 140, column: 12, scope: !2466)
!3213 = !DILocation(line: 140, column: 5, scope: !2466)
!3214 = !DILocation(line: 141, column: 1, scope: !2466)
!3215 = distinct !DISubprogram(name: "ff_h264_idct_dc_add_9_c", scope: !21, file: !21, line: 144, type: !60, isLocal: false, isDefinition: true, scopeLine: 144, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3216 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !3217)
!3217 = distinct !DILocation(line: 154, column: 22, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3219, file: !21, line: 153, column: 9)
!3219 = distinct !DILexicalBlock(scope: !3220, file: !21, line: 153, column: 9)
!3220 = distinct !DILexicalBlock(scope: !3221, file: !21, line: 152, column: 5)
!3221 = distinct !DILexicalBlock(scope: !3222, file: !21, line: 151, column: 5)
!3222 = distinct !DILexicalBlock(scope: !3215, file: !21, line: 151, column: 5)
!3223 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !3217)
!3224 = !DILocalVariable(name: "_dst", arg: 1, scope: !3215, file: !21, line: 144, type: !4)
!3225 = !DILocation(line: 144, column: 39, scope: !3215)
!3226 = !DILocalVariable(name: "_block", arg: 2, scope: !3215, file: !21, line: 144, type: !8)
!3227 = !DILocation(line: 144, column: 54, scope: !3215)
!3228 = !DILocalVariable(name: "stride", arg: 3, scope: !3215, file: !21, line: 144, type: !12)
!3229 = !DILocation(line: 144, column: 66, scope: !3215)
!3230 = !DILocalVariable(name: "i", scope: !3215, file: !21, line: 145, type: !12)
!3231 = !DILocation(line: 145, column: 9, scope: !3215)
!3232 = !DILocalVariable(name: "j", scope: !3215, file: !21, line: 145, type: !12)
!3233 = !DILocation(line: 145, column: 12, scope: !3215)
!3234 = !DILocalVariable(name: "dst", scope: !3215, file: !21, line: 146, type: !13)
!3235 = !DILocation(line: 146, column: 15, scope: !3215)
!3236 = !DILocation(line: 146, column: 32, scope: !3215)
!3237 = !DILocation(line: 146, column: 21, scope: !3215)
!3238 = !DILocalVariable(name: "block", scope: !3215, file: !21, line: 147, type: !16)
!3239 = !DILocation(line: 147, column: 14, scope: !3215)
!3240 = !DILocation(line: 147, column: 32, scope: !3215)
!3241 = !DILocation(line: 147, column: 22, scope: !3215)
!3242 = !DILocalVariable(name: "dc", scope: !3215, file: !21, line: 148, type: !12)
!3243 = !DILocation(line: 148, column: 9, scope: !3215)
!3244 = !DILocation(line: 148, column: 15, scope: !3215)
!3245 = !DILocation(line: 148, column: 24, scope: !3215)
!3246 = !DILocation(line: 148, column: 30, scope: !3215)
!3247 = !DILocation(line: 149, column: 12, scope: !3215)
!3248 = !DILocation(line: 150, column: 5, scope: !3215)
!3249 = !DILocation(line: 150, column: 14, scope: !3215)
!3250 = !DILocation(line: 151, column: 12, scope: !3222)
!3251 = !DILocation(line: 151, column: 10, scope: !3222)
!3252 = !DILocation(line: 151, column: 17, scope: !3253)
!3253 = !DILexicalBlockFile(scope: !3221, file: !21, discriminator: 1)
!3254 = !DILocation(line: 151, column: 19, scope: !3253)
!3255 = !DILocation(line: 151, column: 5, scope: !3253)
!3256 = !DILocation(line: 153, column: 16, scope: !3219)
!3257 = !DILocation(line: 153, column: 14, scope: !3219)
!3258 = !DILocation(line: 153, column: 21, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3218, file: !21, discriminator: 1)
!3260 = !DILocation(line: 153, column: 23, scope: !3259)
!3261 = !DILocation(line: 153, column: 9, scope: !3259)
!3262 = !DILocation(line: 154, column: 43, scope: !3218)
!3263 = !DILocation(line: 154, column: 39, scope: !3218)
!3264 = !DILocation(line: 154, column: 48, scope: !3218)
!3265 = !DILocation(line: 154, column: 46, scope: !3218)
!3266 = !DILocation(line: 154, column: 22, scope: !3218)
!3267 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !3217)
!3268 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !3217)
!3269 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !3217)
!3270 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !3217)
!3271 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !3217)
!3272 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !3217)
!3273 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !3217)
!3274 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !3217)
!3275 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !3217)
!3276 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !3217)
!3277 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !3217)
!3278 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !3217)
!3279 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !3217)
!3280 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !3217)
!3281 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !3217)
!3282 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !3217)
!3283 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !3217)
!3284 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !3217)
!3285 = !DILocation(line: 154, column: 17, scope: !3218)
!3286 = !DILocation(line: 154, column: 13, scope: !3218)
!3287 = !DILocation(line: 154, column: 20, scope: !3218)
!3288 = !DILocation(line: 153, column: 29, scope: !3289)
!3289 = !DILexicalBlockFile(scope: !3218, file: !21, discriminator: 2)
!3290 = !DILocation(line: 153, column: 9, scope: !3289)
!3291 = distinct !{!3291, !3292}
!3292 = !DILocation(line: 153, column: 9, scope: !3220)
!3293 = !DILocation(line: 155, column: 16, scope: !3220)
!3294 = !DILocation(line: 155, column: 13, scope: !3220)
!3295 = !DILocation(line: 156, column: 5, scope: !3220)
!3296 = !DILocation(line: 151, column: 25, scope: !3297)
!3297 = !DILexicalBlockFile(scope: !3221, file: !21, discriminator: 2)
!3298 = !DILocation(line: 151, column: 5, scope: !3297)
!3299 = distinct !{!3299, !3300}
!3300 = !DILocation(line: 151, column: 5, scope: !3215)
!3301 = !DILocation(line: 157, column: 1, scope: !3215)
!3302 = distinct !DISubprogram(name: "ff_h264_idct8_dc_add_9_c", scope: !21, file: !21, line: 159, type: !60, isLocal: false, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3303 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !3304)
!3304 = distinct !DILocation(line: 169, column: 22, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !21, line: 168, column: 9)
!3306 = distinct !DILexicalBlock(scope: !3307, file: !21, line: 168, column: 9)
!3307 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 167, column: 5)
!3308 = distinct !DILexicalBlock(scope: !3309, file: !21, line: 166, column: 5)
!3309 = distinct !DILexicalBlock(scope: !3302, file: !21, line: 166, column: 5)
!3310 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !3304)
!3311 = !DILocalVariable(name: "_dst", arg: 1, scope: !3302, file: !21, line: 159, type: !4)
!3312 = !DILocation(line: 159, column: 40, scope: !3302)
!3313 = !DILocalVariable(name: "_block", arg: 2, scope: !3302, file: !21, line: 159, type: !8)
!3314 = !DILocation(line: 159, column: 55, scope: !3302)
!3315 = !DILocalVariable(name: "stride", arg: 3, scope: !3302, file: !21, line: 159, type: !12)
!3316 = !DILocation(line: 159, column: 67, scope: !3302)
!3317 = !DILocalVariable(name: "i", scope: !3302, file: !21, line: 160, type: !12)
!3318 = !DILocation(line: 160, column: 9, scope: !3302)
!3319 = !DILocalVariable(name: "j", scope: !3302, file: !21, line: 160, type: !12)
!3320 = !DILocation(line: 160, column: 12, scope: !3302)
!3321 = !DILocalVariable(name: "dst", scope: !3302, file: !21, line: 161, type: !13)
!3322 = !DILocation(line: 161, column: 15, scope: !3302)
!3323 = !DILocation(line: 161, column: 32, scope: !3302)
!3324 = !DILocation(line: 161, column: 21, scope: !3302)
!3325 = !DILocalVariable(name: "block", scope: !3302, file: !21, line: 162, type: !16)
!3326 = !DILocation(line: 162, column: 14, scope: !3302)
!3327 = !DILocation(line: 162, column: 32, scope: !3302)
!3328 = !DILocation(line: 162, column: 22, scope: !3302)
!3329 = !DILocalVariable(name: "dc", scope: !3302, file: !21, line: 163, type: !12)
!3330 = !DILocation(line: 163, column: 9, scope: !3302)
!3331 = !DILocation(line: 163, column: 15, scope: !3302)
!3332 = !DILocation(line: 163, column: 24, scope: !3302)
!3333 = !DILocation(line: 163, column: 30, scope: !3302)
!3334 = !DILocation(line: 164, column: 5, scope: !3302)
!3335 = !DILocation(line: 164, column: 14, scope: !3302)
!3336 = !DILocation(line: 165, column: 12, scope: !3302)
!3337 = !DILocation(line: 166, column: 12, scope: !3309)
!3338 = !DILocation(line: 166, column: 10, scope: !3309)
!3339 = !DILocation(line: 166, column: 17, scope: !3340)
!3340 = !DILexicalBlockFile(scope: !3308, file: !21, discriminator: 1)
!3341 = !DILocation(line: 166, column: 19, scope: !3340)
!3342 = !DILocation(line: 166, column: 5, scope: !3340)
!3343 = !DILocation(line: 168, column: 16, scope: !3306)
!3344 = !DILocation(line: 168, column: 14, scope: !3306)
!3345 = !DILocation(line: 168, column: 21, scope: !3346)
!3346 = !DILexicalBlockFile(scope: !3305, file: !21, discriminator: 1)
!3347 = !DILocation(line: 168, column: 23, scope: !3346)
!3348 = !DILocation(line: 168, column: 9, scope: !3346)
!3349 = !DILocation(line: 169, column: 43, scope: !3305)
!3350 = !DILocation(line: 169, column: 39, scope: !3305)
!3351 = !DILocation(line: 169, column: 48, scope: !3305)
!3352 = !DILocation(line: 169, column: 46, scope: !3305)
!3353 = !DILocation(line: 169, column: 22, scope: !3305)
!3354 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !3304)
!3355 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !3304)
!3356 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !3304)
!3357 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !3304)
!3358 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !3304)
!3359 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !3304)
!3360 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !3304)
!3361 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !3304)
!3362 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !3304)
!3363 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !3304)
!3364 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !3304)
!3365 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !3304)
!3366 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !3304)
!3367 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !3304)
!3368 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !3304)
!3369 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !3304)
!3370 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !3304)
!3371 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !3304)
!3372 = !DILocation(line: 169, column: 17, scope: !3305)
!3373 = !DILocation(line: 169, column: 13, scope: !3305)
!3374 = !DILocation(line: 169, column: 20, scope: !3305)
!3375 = !DILocation(line: 168, column: 29, scope: !3376)
!3376 = !DILexicalBlockFile(scope: !3305, file: !21, discriminator: 2)
!3377 = !DILocation(line: 168, column: 9, scope: !3376)
!3378 = distinct !{!3378, !3379}
!3379 = !DILocation(line: 168, column: 9, scope: !3307)
!3380 = !DILocation(line: 170, column: 16, scope: !3307)
!3381 = !DILocation(line: 170, column: 13, scope: !3307)
!3382 = !DILocation(line: 171, column: 5, scope: !3307)
!3383 = !DILocation(line: 166, column: 25, scope: !3384)
!3384 = !DILexicalBlockFile(scope: !3308, file: !21, discriminator: 2)
!3385 = !DILocation(line: 166, column: 5, scope: !3384)
!3386 = distinct !{!3386, !3387}
!3387 = !DILocation(line: 166, column: 5, scope: !3302)
!3388 = !DILocation(line: 172, column: 1, scope: !3302)
!3389 = distinct !DISubprogram(name: "ff_h264_idct_add16_9_c", scope: !21, file: !21, line: 174, type: !1214, isLocal: false, isDefinition: true, scopeLine: 174, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3390 = !DILocalVariable(name: "dst", arg: 1, scope: !3389, file: !21, line: 174, type: !4)
!3391 = !DILocation(line: 174, column: 38, scope: !3389)
!3392 = !DILocalVariable(name: "block_offset", arg: 2, scope: !3389, file: !21, line: 174, type: !1216)
!3393 = !DILocation(line: 174, column: 54, scope: !3389)
!3394 = !DILocalVariable(name: "block", arg: 3, scope: !3389, file: !21, line: 174, type: !8)
!3395 = !DILocation(line: 174, column: 77, scope: !3389)
!3396 = !DILocalVariable(name: "stride", arg: 4, scope: !3389, file: !21, line: 174, type: !12)
!3397 = !DILocation(line: 174, column: 88, scope: !3389)
!3398 = !DILocalVariable(name: "nnzc", arg: 5, scope: !3389, file: !21, line: 174, type: !1217)
!3399 = !DILocation(line: 174, column: 110, scope: !3389)
!3400 = !DILocalVariable(name: "i", scope: !3389, file: !21, line: 175, type: !12)
!3401 = !DILocation(line: 175, column: 9, scope: !3389)
!3402 = !DILocation(line: 176, column: 10, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3389, file: !21, line: 176, column: 5)
!3404 = !DILocation(line: 176, column: 9, scope: !3403)
!3405 = !DILocation(line: 176, column: 14, scope: !3406)
!3406 = !DILexicalBlockFile(scope: !3407, file: !21, discriminator: 1)
!3407 = distinct !DILexicalBlock(scope: !3403, file: !21, line: 176, column: 5)
!3408 = !DILocation(line: 176, column: 15, scope: !3406)
!3409 = !DILocation(line: 176, column: 5, scope: !3406)
!3410 = !DILocalVariable(name: "nnz", scope: !3411, file: !21, line: 177, type: !12)
!3411 = distinct !DILexicalBlock(scope: !3407, file: !21, line: 176, column: 24)
!3412 = !DILocation(line: 177, column: 13, scope: !3411)
!3413 = !DILocation(line: 177, column: 31, scope: !3411)
!3414 = !DILocation(line: 177, column: 25, scope: !3411)
!3415 = !DILocation(line: 177, column: 19, scope: !3411)
!3416 = !DILocation(line: 178, column: 12, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3411, file: !21, line: 178, column: 12)
!3418 = !DILocation(line: 178, column: 12, scope: !3411)
!3419 = !DILocation(line: 179, column: 16, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !21, line: 179, column: 16)
!3421 = distinct !DILexicalBlock(scope: !3417, file: !21, line: 178, column: 16)
!3422 = !DILocation(line: 179, column: 19, scope: !3420)
!3423 = !DILocation(line: 179, column: 23, scope: !3420)
!3424 = !DILocation(line: 179, column: 44, scope: !3425)
!3425 = !DILexicalBlockFile(scope: !3420, file: !21, discriminator: 1)
!3426 = !DILocation(line: 179, column: 45, scope: !3425)
!3427 = !DILocation(line: 179, column: 26, scope: !3425)
!3428 = !DILocation(line: 179, column: 37, scope: !3425)
!3429 = !DILocation(line: 179, column: 16, scope: !3425)
!3430 = !DILocation(line: 179, column: 75, scope: !3431)
!3431 = !DILexicalBlockFile(scope: !3420, file: !21, discriminator: 2)
!3432 = !DILocation(line: 179, column: 94, scope: !3431)
!3433 = !DILocation(line: 179, column: 81, scope: !3431)
!3434 = !DILocation(line: 179, column: 79, scope: !3431)
!3435 = !DILocation(line: 179, column: 98, scope: !3431)
!3436 = !DILocation(line: 179, column: 106, scope: !3431)
!3437 = !DILocation(line: 179, column: 107, scope: !3431)
!3438 = !DILocation(line: 179, column: 110, scope: !3431)
!3439 = !DILocation(line: 179, column: 104, scope: !3431)
!3440 = !DILocation(line: 179, column: 129, scope: !3431)
!3441 = !DILocation(line: 179, column: 51, scope: !3431)
!3442 = !DILocation(line: 180, column: 39, scope: !3420)
!3443 = !DILocation(line: 180, column: 58, scope: !3420)
!3444 = !DILocation(line: 180, column: 45, scope: !3420)
!3445 = !DILocation(line: 180, column: 43, scope: !3420)
!3446 = !DILocation(line: 180, column: 62, scope: !3420)
!3447 = !DILocation(line: 180, column: 70, scope: !3420)
!3448 = !DILocation(line: 180, column: 71, scope: !3420)
!3449 = !DILocation(line: 180, column: 74, scope: !3420)
!3450 = !DILocation(line: 180, column: 68, scope: !3420)
!3451 = !DILocation(line: 180, column: 93, scope: !3420)
!3452 = !DILocation(line: 180, column: 18, scope: !3420)
!3453 = !DILocation(line: 181, column: 9, scope: !3421)
!3454 = !DILocation(line: 182, column: 5, scope: !3411)
!3455 = !DILocation(line: 176, column: 21, scope: !3456)
!3456 = !DILexicalBlockFile(scope: !3407, file: !21, discriminator: 2)
!3457 = !DILocation(line: 176, column: 5, scope: !3456)
!3458 = distinct !{!3458, !3459}
!3459 = !DILocation(line: 176, column: 5, scope: !3389)
!3460 = !DILocation(line: 183, column: 1, scope: !3389)
!3461 = distinct !DISubprogram(name: "ff_h264_idct_add16intra_9_c", scope: !21, file: !21, line: 185, type: !1214, isLocal: false, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3462 = !DILocalVariable(name: "dst", arg: 1, scope: !3461, file: !21, line: 185, type: !4)
!3463 = !DILocation(line: 185, column: 43, scope: !3461)
!3464 = !DILocalVariable(name: "block_offset", arg: 2, scope: !3461, file: !21, line: 185, type: !1216)
!3465 = !DILocation(line: 185, column: 59, scope: !3461)
!3466 = !DILocalVariable(name: "block", arg: 3, scope: !3461, file: !21, line: 185, type: !8)
!3467 = !DILocation(line: 185, column: 82, scope: !3461)
!3468 = !DILocalVariable(name: "stride", arg: 4, scope: !3461, file: !21, line: 185, type: !12)
!3469 = !DILocation(line: 185, column: 93, scope: !3461)
!3470 = !DILocalVariable(name: "nnzc", arg: 5, scope: !3461, file: !21, line: 185, type: !1217)
!3471 = !DILocation(line: 185, column: 115, scope: !3461)
!3472 = !DILocalVariable(name: "i", scope: !3461, file: !21, line: 186, type: !12)
!3473 = !DILocation(line: 186, column: 9, scope: !3461)
!3474 = !DILocation(line: 187, column: 10, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3461, file: !21, line: 187, column: 5)
!3476 = !DILocation(line: 187, column: 9, scope: !3475)
!3477 = !DILocation(line: 187, column: 14, scope: !3478)
!3478 = !DILexicalBlockFile(scope: !3479, file: !21, discriminator: 1)
!3479 = distinct !DILexicalBlock(scope: !3475, file: !21, line: 187, column: 5)
!3480 = !DILocation(line: 187, column: 15, scope: !3478)
!3481 = !DILocation(line: 187, column: 5, scope: !3478)
!3482 = !DILocation(line: 188, column: 24, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !21, line: 188, column: 12)
!3484 = distinct !DILexicalBlock(scope: !3479, file: !21, line: 187, column: 24)
!3485 = !DILocation(line: 188, column: 18, scope: !3483)
!3486 = !DILocation(line: 188, column: 12, scope: !3483)
!3487 = !DILocation(line: 188, column: 12, scope: !3484)
!3488 = !DILocation(line: 188, column: 51, scope: !3489)
!3489 = !DILexicalBlockFile(scope: !3483, file: !21, discriminator: 1)
!3490 = !DILocation(line: 188, column: 70, scope: !3489)
!3491 = !DILocation(line: 188, column: 57, scope: !3489)
!3492 = !DILocation(line: 188, column: 55, scope: !3489)
!3493 = !DILocation(line: 188, column: 74, scope: !3489)
!3494 = !DILocation(line: 188, column: 82, scope: !3489)
!3495 = !DILocation(line: 188, column: 83, scope: !3489)
!3496 = !DILocation(line: 188, column: 86, scope: !3489)
!3497 = !DILocation(line: 188, column: 80, scope: !3489)
!3498 = !DILocation(line: 188, column: 105, scope: !3489)
!3499 = !DILocation(line: 188, column: 30, scope: !3489)
!3500 = !DILocation(line: 189, column: 35, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3483, file: !21, line: 189, column: 17)
!3502 = !DILocation(line: 189, column: 36, scope: !3501)
!3503 = !DILocation(line: 189, column: 17, scope: !3501)
!3504 = !DILocation(line: 189, column: 28, scope: !3501)
!3505 = !DILocation(line: 189, column: 17, scope: !3483)
!3506 = !DILocation(line: 189, column: 66, scope: !3507)
!3507 = !DILexicalBlockFile(scope: !3501, file: !21, discriminator: 1)
!3508 = !DILocation(line: 189, column: 85, scope: !3507)
!3509 = !DILocation(line: 189, column: 72, scope: !3507)
!3510 = !DILocation(line: 189, column: 70, scope: !3507)
!3511 = !DILocation(line: 189, column: 89, scope: !3507)
!3512 = !DILocation(line: 189, column: 97, scope: !3507)
!3513 = !DILocation(line: 189, column: 98, scope: !3507)
!3514 = !DILocation(line: 189, column: 101, scope: !3507)
!3515 = !DILocation(line: 189, column: 95, scope: !3507)
!3516 = !DILocation(line: 189, column: 120, scope: !3507)
!3517 = !DILocation(line: 189, column: 42, scope: !3507)
!3518 = !DILocation(line: 190, column: 5, scope: !3484)
!3519 = !DILocation(line: 187, column: 21, scope: !3520)
!3520 = !DILexicalBlockFile(scope: !3479, file: !21, discriminator: 2)
!3521 = !DILocation(line: 187, column: 5, scope: !3520)
!3522 = distinct !{!3522, !3523}
!3523 = !DILocation(line: 187, column: 5, scope: !3461)
!3524 = !DILocation(line: 191, column: 1, scope: !3461)
!3525 = distinct !DISubprogram(name: "ff_h264_idct8_add4_9_c", scope: !21, file: !21, line: 193, type: !1214, isLocal: false, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3526 = !DILocalVariable(name: "dst", arg: 1, scope: !3525, file: !21, line: 193, type: !4)
!3527 = !DILocation(line: 193, column: 38, scope: !3525)
!3528 = !DILocalVariable(name: "block_offset", arg: 2, scope: !3525, file: !21, line: 193, type: !1216)
!3529 = !DILocation(line: 193, column: 54, scope: !3525)
!3530 = !DILocalVariable(name: "block", arg: 3, scope: !3525, file: !21, line: 193, type: !8)
!3531 = !DILocation(line: 193, column: 77, scope: !3525)
!3532 = !DILocalVariable(name: "stride", arg: 4, scope: !3525, file: !21, line: 193, type: !12)
!3533 = !DILocation(line: 193, column: 88, scope: !3525)
!3534 = !DILocalVariable(name: "nnzc", arg: 5, scope: !3525, file: !21, line: 193, type: !1217)
!3535 = !DILocation(line: 193, column: 110, scope: !3525)
!3536 = !DILocalVariable(name: "i", scope: !3525, file: !21, line: 194, type: !12)
!3537 = !DILocation(line: 194, column: 9, scope: !3525)
!3538 = !DILocation(line: 195, column: 10, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3525, file: !21, line: 195, column: 5)
!3540 = !DILocation(line: 195, column: 9, scope: !3539)
!3541 = !DILocation(line: 195, column: 14, scope: !3542)
!3542 = !DILexicalBlockFile(scope: !3543, file: !21, discriminator: 1)
!3543 = distinct !DILexicalBlock(scope: !3539, file: !21, line: 195, column: 5)
!3544 = !DILocation(line: 195, column: 15, scope: !3542)
!3545 = !DILocation(line: 195, column: 5, scope: !3542)
!3546 = !DILocalVariable(name: "nnz", scope: !3547, file: !21, line: 196, type: !12)
!3547 = distinct !DILexicalBlock(scope: !3543, file: !21, line: 195, column: 25)
!3548 = !DILocation(line: 196, column: 13, scope: !3547)
!3549 = !DILocation(line: 196, column: 31, scope: !3547)
!3550 = !DILocation(line: 196, column: 25, scope: !3547)
!3551 = !DILocation(line: 196, column: 19, scope: !3547)
!3552 = !DILocation(line: 197, column: 12, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3547, file: !21, line: 197, column: 12)
!3554 = !DILocation(line: 197, column: 12, scope: !3547)
!3555 = !DILocation(line: 198, column: 16, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3557, file: !21, line: 198, column: 16)
!3557 = distinct !DILexicalBlock(scope: !3553, file: !21, line: 197, column: 16)
!3558 = !DILocation(line: 198, column: 19, scope: !3556)
!3559 = !DILocation(line: 198, column: 23, scope: !3556)
!3560 = !DILocation(line: 198, column: 44, scope: !3561)
!3561 = !DILexicalBlockFile(scope: !3556, file: !21, discriminator: 1)
!3562 = !DILocation(line: 198, column: 45, scope: !3561)
!3563 = !DILocation(line: 198, column: 26, scope: !3561)
!3564 = !DILocation(line: 198, column: 37, scope: !3561)
!3565 = !DILocation(line: 198, column: 16, scope: !3561)
!3566 = !DILocation(line: 198, column: 76, scope: !3567)
!3567 = !DILexicalBlockFile(scope: !3556, file: !21, discriminator: 2)
!3568 = !DILocation(line: 198, column: 95, scope: !3567)
!3569 = !DILocation(line: 198, column: 82, scope: !3567)
!3570 = !DILocation(line: 198, column: 80, scope: !3567)
!3571 = !DILocation(line: 198, column: 99, scope: !3567)
!3572 = !DILocation(line: 198, column: 107, scope: !3567)
!3573 = !DILocation(line: 198, column: 108, scope: !3567)
!3574 = !DILocation(line: 198, column: 111, scope: !3567)
!3575 = !DILocation(line: 198, column: 105, scope: !3567)
!3576 = !DILocation(line: 198, column: 130, scope: !3567)
!3577 = !DILocation(line: 198, column: 51, scope: !3567)
!3578 = !DILocation(line: 199, column: 40, scope: !3556)
!3579 = !DILocation(line: 199, column: 59, scope: !3556)
!3580 = !DILocation(line: 199, column: 46, scope: !3556)
!3581 = !DILocation(line: 199, column: 44, scope: !3556)
!3582 = !DILocation(line: 199, column: 63, scope: !3556)
!3583 = !DILocation(line: 199, column: 71, scope: !3556)
!3584 = !DILocation(line: 199, column: 72, scope: !3556)
!3585 = !DILocation(line: 199, column: 75, scope: !3556)
!3586 = !DILocation(line: 199, column: 69, scope: !3556)
!3587 = !DILocation(line: 199, column: 94, scope: !3556)
!3588 = !DILocation(line: 199, column: 18, scope: !3556)
!3589 = !DILocation(line: 200, column: 9, scope: !3557)
!3590 = !DILocation(line: 201, column: 5, scope: !3547)
!3591 = !DILocation(line: 195, column: 21, scope: !3592)
!3592 = !DILexicalBlockFile(scope: !3543, file: !21, discriminator: 2)
!3593 = !DILocation(line: 195, column: 5, scope: !3592)
!3594 = distinct !{!3594, !3595}
!3595 = !DILocation(line: 195, column: 5, scope: !3525)
!3596 = !DILocation(line: 202, column: 1, scope: !3525)
!3597 = distinct !DISubprogram(name: "ff_h264_idct_add8_9_c", scope: !21, file: !21, line: 204, type: !1426, isLocal: false, isDefinition: true, scopeLine: 204, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3598 = !DILocalVariable(name: "dest", arg: 1, scope: !3597, file: !21, line: 204, type: !1428)
!3599 = !DILocation(line: 204, column: 38, scope: !3597)
!3600 = !DILocalVariable(name: "block_offset", arg: 2, scope: !3597, file: !21, line: 204, type: !1216)
!3601 = !DILocation(line: 204, column: 55, scope: !3597)
!3602 = !DILocalVariable(name: "block", arg: 3, scope: !3597, file: !21, line: 204, type: !8)
!3603 = !DILocation(line: 204, column: 78, scope: !3597)
!3604 = !DILocalVariable(name: "stride", arg: 4, scope: !3597, file: !21, line: 204, type: !12)
!3605 = !DILocation(line: 204, column: 89, scope: !3597)
!3606 = !DILocalVariable(name: "nnzc", arg: 5, scope: !3597, file: !21, line: 204, type: !1217)
!3607 = !DILocation(line: 204, column: 111, scope: !3597)
!3608 = !DILocalVariable(name: "i", scope: !3597, file: !21, line: 205, type: !12)
!3609 = !DILocation(line: 205, column: 9, scope: !3597)
!3610 = !DILocalVariable(name: "j", scope: !3597, file: !21, line: 205, type: !12)
!3611 = !DILocation(line: 205, column: 12, scope: !3597)
!3612 = !DILocation(line: 206, column: 10, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3597, file: !21, line: 206, column: 5)
!3614 = !DILocation(line: 206, column: 9, scope: !3613)
!3615 = !DILocation(line: 206, column: 14, scope: !3616)
!3616 = !DILexicalBlockFile(scope: !3617, file: !21, discriminator: 1)
!3617 = distinct !DILexicalBlock(scope: !3613, file: !21, line: 206, column: 5)
!3618 = !DILocation(line: 206, column: 15, scope: !3616)
!3619 = !DILocation(line: 206, column: 5, scope: !3616)
!3620 = !DILocation(line: 207, column: 15, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3622, file: !21, line: 207, column: 9)
!3622 = distinct !DILexicalBlock(scope: !3617, file: !21, line: 206, column: 23)
!3623 = !DILocation(line: 207, column: 16, scope: !3621)
!3624 = !DILocation(line: 207, column: 14, scope: !3621)
!3625 = !DILocation(line: 207, column: 13, scope: !3621)
!3626 = !DILocation(line: 207, column: 21, scope: !3627)
!3627 = !DILexicalBlockFile(scope: !3628, file: !21, discriminator: 1)
!3628 = distinct !DILexicalBlock(scope: !3621, file: !21, line: 207, column: 9)
!3629 = !DILocation(line: 207, column: 23, scope: !3627)
!3630 = !DILocation(line: 207, column: 24, scope: !3627)
!3631 = !DILocation(line: 207, column: 27, scope: !3627)
!3632 = !DILocation(line: 207, column: 22, scope: !3627)
!3633 = !DILocation(line: 207, column: 9, scope: !3627)
!3634 = !DILocation(line: 208, column: 28, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3636, file: !21, line: 208, column: 16)
!3636 = distinct !DILexicalBlock(scope: !3628, file: !21, line: 207, column: 35)
!3637 = !DILocation(line: 208, column: 22, scope: !3635)
!3638 = !DILocation(line: 208, column: 16, scope: !3635)
!3639 = !DILocation(line: 208, column: 16, scope: !3636)
!3640 = !DILocation(line: 209, column: 43, scope: !3635)
!3641 = !DILocation(line: 209, column: 44, scope: !3635)
!3642 = !DILocation(line: 209, column: 38, scope: !3635)
!3643 = !DILocation(line: 209, column: 63, scope: !3635)
!3644 = !DILocation(line: 209, column: 50, scope: !3635)
!3645 = !DILocation(line: 209, column: 48, scope: !3635)
!3646 = !DILocation(line: 209, column: 67, scope: !3635)
!3647 = !DILocation(line: 209, column: 75, scope: !3635)
!3648 = !DILocation(line: 209, column: 76, scope: !3635)
!3649 = !DILocation(line: 209, column: 79, scope: !3635)
!3650 = !DILocation(line: 209, column: 73, scope: !3635)
!3651 = !DILocation(line: 209, column: 98, scope: !3635)
!3652 = !DILocation(line: 209, column: 17, scope: !3635)
!3653 = !DILocation(line: 210, column: 39, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3635, file: !21, line: 210, column: 21)
!3655 = !DILocation(line: 210, column: 40, scope: !3654)
!3656 = !DILocation(line: 210, column: 21, scope: !3654)
!3657 = !DILocation(line: 210, column: 32, scope: !3654)
!3658 = !DILocation(line: 210, column: 21, scope: !3635)
!3659 = !DILocation(line: 211, column: 46, scope: !3654)
!3660 = !DILocation(line: 211, column: 47, scope: !3654)
!3661 = !DILocation(line: 211, column: 41, scope: !3654)
!3662 = !DILocation(line: 211, column: 66, scope: !3654)
!3663 = !DILocation(line: 211, column: 53, scope: !3654)
!3664 = !DILocation(line: 211, column: 51, scope: !3654)
!3665 = !DILocation(line: 211, column: 70, scope: !3654)
!3666 = !DILocation(line: 211, column: 78, scope: !3654)
!3667 = !DILocation(line: 211, column: 79, scope: !3654)
!3668 = !DILocation(line: 211, column: 82, scope: !3654)
!3669 = !DILocation(line: 211, column: 76, scope: !3654)
!3670 = !DILocation(line: 211, column: 101, scope: !3654)
!3671 = !DILocation(line: 211, column: 17, scope: !3654)
!3672 = !DILocation(line: 212, column: 9, scope: !3636)
!3673 = !DILocation(line: 207, column: 32, scope: !3674)
!3674 = !DILexicalBlockFile(scope: !3628, file: !21, discriminator: 2)
!3675 = !DILocation(line: 207, column: 9, scope: !3674)
!3676 = distinct !{!3676, !3677}
!3677 = !DILocation(line: 207, column: 9, scope: !3622)
!3678 = !DILocation(line: 213, column: 5, scope: !3622)
!3679 = !DILocation(line: 206, column: 20, scope: !3680)
!3680 = !DILexicalBlockFile(scope: !3617, file: !21, discriminator: 2)
!3681 = !DILocation(line: 206, column: 5, scope: !3680)
!3682 = distinct !{!3682, !3683}
!3683 = !DILocation(line: 206, column: 5, scope: !3597)
!3684 = !DILocation(line: 214, column: 1, scope: !3597)
!3685 = distinct !DISubprogram(name: "ff_h264_idct_add8_422_9_c", scope: !21, file: !21, line: 216, type: !1426, isLocal: false, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!3686 = !DILocalVariable(name: "dest", arg: 1, scope: !3685, file: !21, line: 216, type: !1428)
!3687 = !DILocation(line: 216, column: 42, scope: !3685)
!3688 = !DILocalVariable(name: "block_offset", arg: 2, scope: !3685, file: !21, line: 216, type: !1216)
!3689 = !DILocation(line: 216, column: 59, scope: !3685)
!3690 = !DILocalVariable(name: "block", arg: 3, scope: !3685, file: !21, line: 216, type: !8)
!3691 = !DILocation(line: 216, column: 82, scope: !3685)
!3692 = !DILocalVariable(name: "stride", arg: 4, scope: !3685, file: !21, line: 216, type: !12)
!3693 = !DILocation(line: 216, column: 93, scope: !3685)
!3694 = !DILocalVariable(name: "nnzc", arg: 5, scope: !3685, file: !21, line: 216, type: !1217)
!3695 = !DILocation(line: 216, column: 115, scope: !3685)
!3696 = !DILocalVariable(name: "i", scope: !3685, file: !21, line: 217, type: !12)
!3697 = !DILocation(line: 217, column: 9, scope: !3685)
!3698 = !DILocalVariable(name: "j", scope: !3685, file: !21, line: 217, type: !12)
!3699 = !DILocation(line: 217, column: 12, scope: !3685)
!3700 = !DILocation(line: 219, column: 10, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3685, file: !21, line: 219, column: 5)
!3702 = !DILocation(line: 219, column: 9, scope: !3701)
!3703 = !DILocation(line: 219, column: 14, scope: !3704)
!3704 = !DILexicalBlockFile(scope: !3705, file: !21, discriminator: 1)
!3705 = distinct !DILexicalBlock(scope: !3701, file: !21, line: 219, column: 5)
!3706 = !DILocation(line: 219, column: 15, scope: !3704)
!3707 = !DILocation(line: 219, column: 5, scope: !3704)
!3708 = !DILocation(line: 220, column: 15, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !21, line: 220, column: 9)
!3710 = distinct !DILexicalBlock(scope: !3705, file: !21, line: 219, column: 23)
!3711 = !DILocation(line: 220, column: 16, scope: !3709)
!3712 = !DILocation(line: 220, column: 14, scope: !3709)
!3713 = !DILocation(line: 220, column: 13, scope: !3709)
!3714 = !DILocation(line: 220, column: 21, scope: !3715)
!3715 = !DILexicalBlockFile(scope: !3716, file: !21, discriminator: 1)
!3716 = distinct !DILexicalBlock(scope: !3709, file: !21, line: 220, column: 9)
!3717 = !DILocation(line: 220, column: 23, scope: !3715)
!3718 = !DILocation(line: 220, column: 24, scope: !3715)
!3719 = !DILocation(line: 220, column: 27, scope: !3715)
!3720 = !DILocation(line: 220, column: 22, scope: !3715)
!3721 = !DILocation(line: 220, column: 9, scope: !3715)
!3722 = !DILocation(line: 221, column: 28, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3724, file: !21, line: 221, column: 16)
!3724 = distinct !DILexicalBlock(scope: !3716, file: !21, line: 220, column: 35)
!3725 = !DILocation(line: 221, column: 22, scope: !3723)
!3726 = !DILocation(line: 221, column: 16, scope: !3723)
!3727 = !DILocation(line: 221, column: 16, scope: !3724)
!3728 = !DILocation(line: 222, column: 43, scope: !3723)
!3729 = !DILocation(line: 222, column: 44, scope: !3723)
!3730 = !DILocation(line: 222, column: 38, scope: !3723)
!3731 = !DILocation(line: 222, column: 63, scope: !3723)
!3732 = !DILocation(line: 222, column: 50, scope: !3723)
!3733 = !DILocation(line: 222, column: 48, scope: !3723)
!3734 = !DILocation(line: 222, column: 67, scope: !3723)
!3735 = !DILocation(line: 222, column: 75, scope: !3723)
!3736 = !DILocation(line: 222, column: 76, scope: !3723)
!3737 = !DILocation(line: 222, column: 79, scope: !3723)
!3738 = !DILocation(line: 222, column: 73, scope: !3723)
!3739 = !DILocation(line: 222, column: 98, scope: !3723)
!3740 = !DILocation(line: 222, column: 17, scope: !3723)
!3741 = !DILocation(line: 223, column: 39, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3723, file: !21, line: 223, column: 21)
!3743 = !DILocation(line: 223, column: 40, scope: !3742)
!3744 = !DILocation(line: 223, column: 21, scope: !3742)
!3745 = !DILocation(line: 223, column: 32, scope: !3742)
!3746 = !DILocation(line: 223, column: 21, scope: !3723)
!3747 = !DILocation(line: 224, column: 46, scope: !3742)
!3748 = !DILocation(line: 224, column: 47, scope: !3742)
!3749 = !DILocation(line: 224, column: 41, scope: !3742)
!3750 = !DILocation(line: 224, column: 66, scope: !3742)
!3751 = !DILocation(line: 224, column: 53, scope: !3742)
!3752 = !DILocation(line: 224, column: 51, scope: !3742)
!3753 = !DILocation(line: 224, column: 70, scope: !3742)
!3754 = !DILocation(line: 224, column: 78, scope: !3742)
!3755 = !DILocation(line: 224, column: 79, scope: !3742)
!3756 = !DILocation(line: 224, column: 82, scope: !3742)
!3757 = !DILocation(line: 224, column: 76, scope: !3742)
!3758 = !DILocation(line: 224, column: 101, scope: !3742)
!3759 = !DILocation(line: 224, column: 17, scope: !3742)
!3760 = !DILocation(line: 225, column: 9, scope: !3724)
!3761 = !DILocation(line: 220, column: 32, scope: !3762)
!3762 = !DILexicalBlockFile(scope: !3716, file: !21, discriminator: 2)
!3763 = !DILocation(line: 220, column: 9, scope: !3762)
!3764 = distinct !{!3764, !3765}
!3765 = !DILocation(line: 220, column: 9, scope: !3710)
!3766 = !DILocation(line: 226, column: 5, scope: !3710)
!3767 = !DILocation(line: 219, column: 20, scope: !3768)
!3768 = !DILexicalBlockFile(scope: !3705, file: !21, discriminator: 2)
!3769 = !DILocation(line: 219, column: 5, scope: !3768)
!3770 = distinct !{!3770, !3771}
!3771 = !DILocation(line: 219, column: 5, scope: !3685)
!3772 = !DILocation(line: 228, column: 10, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3685, file: !21, line: 228, column: 5)
!3774 = !DILocation(line: 228, column: 9, scope: !3773)
!3775 = !DILocation(line: 228, column: 14, scope: !3776)
!3776 = !DILexicalBlockFile(scope: !3777, file: !21, discriminator: 1)
!3777 = distinct !DILexicalBlock(scope: !3773, file: !21, line: 228, column: 5)
!3778 = !DILocation(line: 228, column: 15, scope: !3776)
!3779 = !DILocation(line: 228, column: 5, scope: !3776)
!3780 = !DILocation(line: 229, column: 15, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !21, line: 229, column: 9)
!3782 = distinct !DILexicalBlock(scope: !3777, file: !21, line: 228, column: 23)
!3783 = !DILocation(line: 229, column: 16, scope: !3781)
!3784 = !DILocation(line: 229, column: 19, scope: !3781)
!3785 = !DILocation(line: 229, column: 14, scope: !3781)
!3786 = !DILocation(line: 229, column: 13, scope: !3781)
!3787 = !DILocation(line: 229, column: 23, scope: !3788)
!3788 = !DILexicalBlockFile(scope: !3789, file: !21, discriminator: 1)
!3789 = distinct !DILexicalBlock(scope: !3781, file: !21, line: 229, column: 9)
!3790 = !DILocation(line: 229, column: 25, scope: !3788)
!3791 = !DILocation(line: 229, column: 26, scope: !3788)
!3792 = !DILocation(line: 229, column: 29, scope: !3788)
!3793 = !DILocation(line: 229, column: 24, scope: !3788)
!3794 = !DILocation(line: 229, column: 9, scope: !3788)
!3795 = !DILocation(line: 230, column: 28, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !21, line: 230, column: 16)
!3797 = distinct !DILexicalBlock(scope: !3789, file: !21, line: 229, column: 37)
!3798 = !DILocation(line: 230, column: 29, scope: !3796)
!3799 = !DILocation(line: 230, column: 22, scope: !3796)
!3800 = !DILocation(line: 230, column: 16, scope: !3796)
!3801 = !DILocation(line: 230, column: 16, scope: !3797)
!3802 = !DILocation(line: 231, column: 43, scope: !3796)
!3803 = !DILocation(line: 231, column: 44, scope: !3796)
!3804 = !DILocation(line: 231, column: 38, scope: !3796)
!3805 = !DILocation(line: 231, column: 63, scope: !3796)
!3806 = !DILocation(line: 231, column: 64, scope: !3796)
!3807 = !DILocation(line: 231, column: 50, scope: !3796)
!3808 = !DILocation(line: 231, column: 48, scope: !3796)
!3809 = !DILocation(line: 231, column: 69, scope: !3796)
!3810 = !DILocation(line: 231, column: 77, scope: !3796)
!3811 = !DILocation(line: 231, column: 78, scope: !3796)
!3812 = !DILocation(line: 231, column: 81, scope: !3796)
!3813 = !DILocation(line: 231, column: 75, scope: !3796)
!3814 = !DILocation(line: 231, column: 100, scope: !3796)
!3815 = !DILocation(line: 231, column: 17, scope: !3796)
!3816 = !DILocation(line: 232, column: 39, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3796, file: !21, line: 232, column: 21)
!3818 = !DILocation(line: 232, column: 40, scope: !3817)
!3819 = !DILocation(line: 232, column: 21, scope: !3817)
!3820 = !DILocation(line: 232, column: 32, scope: !3817)
!3821 = !DILocation(line: 232, column: 21, scope: !3796)
!3822 = !DILocation(line: 233, column: 46, scope: !3817)
!3823 = !DILocation(line: 233, column: 47, scope: !3817)
!3824 = !DILocation(line: 233, column: 41, scope: !3817)
!3825 = !DILocation(line: 233, column: 66, scope: !3817)
!3826 = !DILocation(line: 233, column: 67, scope: !3817)
!3827 = !DILocation(line: 233, column: 53, scope: !3817)
!3828 = !DILocation(line: 233, column: 51, scope: !3817)
!3829 = !DILocation(line: 233, column: 72, scope: !3817)
!3830 = !DILocation(line: 233, column: 80, scope: !3817)
!3831 = !DILocation(line: 233, column: 81, scope: !3817)
!3832 = !DILocation(line: 233, column: 84, scope: !3817)
!3833 = !DILocation(line: 233, column: 78, scope: !3817)
!3834 = !DILocation(line: 233, column: 103, scope: !3817)
!3835 = !DILocation(line: 233, column: 17, scope: !3817)
!3836 = !DILocation(line: 234, column: 9, scope: !3797)
!3837 = !DILocation(line: 229, column: 34, scope: !3838)
!3838 = !DILexicalBlockFile(scope: !3789, file: !21, discriminator: 2)
!3839 = !DILocation(line: 229, column: 9, scope: !3838)
!3840 = distinct !{!3840, !3841}
!3841 = !DILocation(line: 229, column: 9, scope: !3782)
!3842 = !DILocation(line: 235, column: 5, scope: !3782)
!3843 = !DILocation(line: 228, column: 20, scope: !3844)
!3844 = !DILexicalBlockFile(scope: !3777, file: !21, discriminator: 2)
!3845 = !DILocation(line: 228, column: 5, scope: !3844)
!3846 = distinct !{!3846, !3847}
!3847 = !DILocation(line: 228, column: 5, scope: !3685)
!3848 = !DILocation(line: 236, column: 1, scope: !3685)
!3849 = !DILocalVariable(name: "_output", arg: 1, scope: !36, file: !21, line: 242, type: !8)
!3850 = !DILocation(line: 242, column: 48, scope: !36)
!3851 = !DILocalVariable(name: "_input", arg: 2, scope: !36, file: !21, line: 242, type: !8)
!3852 = !DILocation(line: 242, column: 66, scope: !36)
!3853 = !DILocalVariable(name: "qmul", arg: 3, scope: !36, file: !21, line: 242, type: !12)
!3854 = !DILocation(line: 242, column: 78, scope: !36)
!3855 = !DILocalVariable(name: "i", scope: !36, file: !21, line: 244, type: !12)
!3856 = !DILocation(line: 244, column: 9, scope: !36)
!3857 = !DILocalVariable(name: "temp", scope: !36, file: !21, line: 245, type: !1689)
!3858 = !DILocation(line: 245, column: 9, scope: !36)
!3859 = !DILocalVariable(name: "input", scope: !36, file: !21, line: 247, type: !16)
!3860 = !DILocation(line: 247, column: 14, scope: !36)
!3861 = !DILocation(line: 247, column: 32, scope: !36)
!3862 = !DILocation(line: 247, column: 22, scope: !36)
!3863 = !DILocalVariable(name: "output", scope: !36, file: !21, line: 248, type: !16)
!3864 = !DILocation(line: 248, column: 14, scope: !36)
!3865 = !DILocation(line: 248, column: 33, scope: !36)
!3866 = !DILocation(line: 248, column: 23, scope: !36)
!3867 = !DILocation(line: 250, column: 10, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !36, file: !21, line: 250, column: 5)
!3869 = !DILocation(line: 250, column: 9, scope: !3868)
!3870 = !DILocation(line: 250, column: 14, scope: !3871)
!3871 = !DILexicalBlockFile(scope: !3872, file: !21, discriminator: 1)
!3872 = distinct !DILexicalBlock(scope: !3868, file: !21, line: 250, column: 5)
!3873 = !DILocation(line: 250, column: 15, scope: !3871)
!3874 = !DILocation(line: 250, column: 5, scope: !3871)
!3875 = !DILocalVariable(name: "z0", scope: !3876, file: !21, line: 251, type: !468)
!3876 = distinct !DILexicalBlock(scope: !3872, file: !21, line: 250, column: 23)
!3877 = !DILocation(line: 251, column: 19, scope: !3876)
!3878 = !DILocation(line: 251, column: 31, scope: !3876)
!3879 = !DILocation(line: 251, column: 30, scope: !3876)
!3880 = !DILocation(line: 251, column: 32, scope: !3876)
!3881 = !DILocation(line: 251, column: 23, scope: !3876)
!3882 = !DILocation(line: 251, column: 46, scope: !3876)
!3883 = !DILocation(line: 251, column: 45, scope: !3876)
!3884 = !DILocation(line: 251, column: 47, scope: !3876)
!3885 = !DILocation(line: 251, column: 38, scope: !3876)
!3886 = !DILocation(line: 251, column: 36, scope: !3876)
!3887 = !DILocalVariable(name: "z1", scope: !3876, file: !21, line: 252, type: !468)
!3888 = !DILocation(line: 252, column: 19, scope: !3876)
!3889 = !DILocation(line: 252, column: 31, scope: !3876)
!3890 = !DILocation(line: 252, column: 30, scope: !3876)
!3891 = !DILocation(line: 252, column: 32, scope: !3876)
!3892 = !DILocation(line: 252, column: 23, scope: !3876)
!3893 = !DILocation(line: 252, column: 46, scope: !3876)
!3894 = !DILocation(line: 252, column: 45, scope: !3876)
!3895 = !DILocation(line: 252, column: 47, scope: !3876)
!3896 = !DILocation(line: 252, column: 38, scope: !3876)
!3897 = !DILocation(line: 252, column: 36, scope: !3876)
!3898 = !DILocalVariable(name: "z2", scope: !3876, file: !21, line: 253, type: !468)
!3899 = !DILocation(line: 253, column: 19, scope: !3876)
!3900 = !DILocation(line: 253, column: 31, scope: !3876)
!3901 = !DILocation(line: 253, column: 30, scope: !3876)
!3902 = !DILocation(line: 253, column: 32, scope: !3876)
!3903 = !DILocation(line: 253, column: 23, scope: !3876)
!3904 = !DILocation(line: 253, column: 46, scope: !3876)
!3905 = !DILocation(line: 253, column: 45, scope: !3876)
!3906 = !DILocation(line: 253, column: 47, scope: !3876)
!3907 = !DILocation(line: 253, column: 38, scope: !3876)
!3908 = !DILocation(line: 253, column: 36, scope: !3876)
!3909 = !DILocalVariable(name: "z3", scope: !3876, file: !21, line: 254, type: !468)
!3910 = !DILocation(line: 254, column: 19, scope: !3876)
!3911 = !DILocation(line: 254, column: 31, scope: !3876)
!3912 = !DILocation(line: 254, column: 30, scope: !3876)
!3913 = !DILocation(line: 254, column: 32, scope: !3876)
!3914 = !DILocation(line: 254, column: 23, scope: !3876)
!3915 = !DILocation(line: 254, column: 46, scope: !3876)
!3916 = !DILocation(line: 254, column: 45, scope: !3876)
!3917 = !DILocation(line: 254, column: 47, scope: !3876)
!3918 = !DILocation(line: 254, column: 38, scope: !3876)
!3919 = !DILocation(line: 254, column: 36, scope: !3876)
!3920 = !DILocation(line: 256, column: 22, scope: !3876)
!3921 = !DILocation(line: 256, column: 25, scope: !3876)
!3922 = !DILocation(line: 256, column: 24, scope: !3876)
!3923 = !DILocation(line: 256, column: 16, scope: !3876)
!3924 = !DILocation(line: 256, column: 15, scope: !3876)
!3925 = !DILocation(line: 256, column: 17, scope: !3876)
!3926 = !DILocation(line: 256, column: 9, scope: !3876)
!3927 = !DILocation(line: 256, column: 20, scope: !3876)
!3928 = !DILocation(line: 257, column: 22, scope: !3876)
!3929 = !DILocation(line: 257, column: 25, scope: !3876)
!3930 = !DILocation(line: 257, column: 24, scope: !3876)
!3931 = !DILocation(line: 257, column: 16, scope: !3876)
!3932 = !DILocation(line: 257, column: 15, scope: !3876)
!3933 = !DILocation(line: 257, column: 17, scope: !3876)
!3934 = !DILocation(line: 257, column: 9, scope: !3876)
!3935 = !DILocation(line: 257, column: 20, scope: !3876)
!3936 = !DILocation(line: 258, column: 22, scope: !3876)
!3937 = !DILocation(line: 258, column: 25, scope: !3876)
!3938 = !DILocation(line: 258, column: 24, scope: !3876)
!3939 = !DILocation(line: 258, column: 16, scope: !3876)
!3940 = !DILocation(line: 258, column: 15, scope: !3876)
!3941 = !DILocation(line: 258, column: 17, scope: !3876)
!3942 = !DILocation(line: 258, column: 9, scope: !3876)
!3943 = !DILocation(line: 258, column: 20, scope: !3876)
!3944 = !DILocation(line: 259, column: 22, scope: !3876)
!3945 = !DILocation(line: 259, column: 25, scope: !3876)
!3946 = !DILocation(line: 259, column: 24, scope: !3876)
!3947 = !DILocation(line: 259, column: 16, scope: !3876)
!3948 = !DILocation(line: 259, column: 15, scope: !3876)
!3949 = !DILocation(line: 259, column: 17, scope: !3876)
!3950 = !DILocation(line: 259, column: 9, scope: !3876)
!3951 = !DILocation(line: 259, column: 20, scope: !3876)
!3952 = !DILocation(line: 260, column: 5, scope: !3876)
!3953 = !DILocation(line: 250, column: 20, scope: !3954)
!3954 = !DILexicalBlockFile(scope: !3872, file: !21, discriminator: 2)
!3955 = !DILocation(line: 250, column: 5, scope: !3954)
!3956 = distinct !{!3956, !3957}
!3957 = !DILocation(line: 250, column: 5, scope: !36)
!3958 = !DILocation(line: 262, column: 10, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !36, file: !21, line: 262, column: 5)
!3960 = !DILocation(line: 262, column: 9, scope: !3959)
!3961 = !DILocation(line: 262, column: 14, scope: !3962)
!3962 = !DILexicalBlockFile(scope: !3963, file: !21, discriminator: 1)
!3963 = distinct !DILexicalBlock(scope: !3959, file: !21, line: 262, column: 5)
!3964 = !DILocation(line: 262, column: 15, scope: !3962)
!3965 = !DILocation(line: 262, column: 5, scope: !3962)
!3966 = !DILocalVariable(name: "offset", scope: !3967, file: !21, line: 263, type: !468)
!3967 = distinct !DILexicalBlock(scope: !3963, file: !21, line: 262, column: 23)
!3968 = !DILocation(line: 263, column: 19, scope: !3967)
!3969 = !DILocation(line: 263, column: 36, scope: !3967)
!3970 = !DILocation(line: 263, column: 27, scope: !3967)
!3971 = !DILocalVariable(name: "z0", scope: !3967, file: !21, line: 264, type: !106)
!3972 = !DILocation(line: 264, column: 24, scope: !3967)
!3973 = !DILocation(line: 264, column: 37, scope: !3967)
!3974 = !DILocation(line: 264, column: 36, scope: !3967)
!3975 = !DILocation(line: 264, column: 28, scope: !3967)
!3976 = !DILocation(line: 264, column: 51, scope: !3967)
!3977 = !DILocation(line: 264, column: 50, scope: !3967)
!3978 = !DILocation(line: 264, column: 42, scope: !3967)
!3979 = !DILocation(line: 264, column: 40, scope: !3967)
!3980 = !DILocalVariable(name: "z1", scope: !3967, file: !21, line: 265, type: !106)
!3981 = !DILocation(line: 265, column: 24, scope: !3967)
!3982 = !DILocation(line: 265, column: 37, scope: !3967)
!3983 = !DILocation(line: 265, column: 36, scope: !3967)
!3984 = !DILocation(line: 265, column: 28, scope: !3967)
!3985 = !DILocation(line: 265, column: 51, scope: !3967)
!3986 = !DILocation(line: 265, column: 50, scope: !3967)
!3987 = !DILocation(line: 265, column: 42, scope: !3967)
!3988 = !DILocation(line: 265, column: 40, scope: !3967)
!3989 = !DILocalVariable(name: "z2", scope: !3967, file: !21, line: 266, type: !106)
!3990 = !DILocation(line: 266, column: 24, scope: !3967)
!3991 = !DILocation(line: 266, column: 37, scope: !3967)
!3992 = !DILocation(line: 266, column: 36, scope: !3967)
!3993 = !DILocation(line: 266, column: 28, scope: !3967)
!3994 = !DILocation(line: 266, column: 51, scope: !3967)
!3995 = !DILocation(line: 266, column: 50, scope: !3967)
!3996 = !DILocation(line: 266, column: 42, scope: !3967)
!3997 = !DILocation(line: 266, column: 40, scope: !3967)
!3998 = !DILocalVariable(name: "z3", scope: !3967, file: !21, line: 267, type: !106)
!3999 = !DILocation(line: 267, column: 24, scope: !3967)
!4000 = !DILocation(line: 267, column: 37, scope: !3967)
!4001 = !DILocation(line: 267, column: 36, scope: !3967)
!4002 = !DILocation(line: 267, column: 28, scope: !3967)
!4003 = !DILocation(line: 267, column: 51, scope: !3967)
!4004 = !DILocation(line: 267, column: 50, scope: !3967)
!4005 = !DILocation(line: 267, column: 42, scope: !3967)
!4006 = !DILocation(line: 267, column: 40, scope: !3967)
!4007 = !DILocation(line: 269, column: 38, scope: !3967)
!4008 = !DILocation(line: 269, column: 43, scope: !3967)
!4009 = !DILocation(line: 269, column: 41, scope: !3967)
!4010 = !DILocation(line: 269, column: 47, scope: !3967)
!4011 = !DILocation(line: 269, column: 46, scope: !3967)
!4012 = !DILocation(line: 269, column: 52, scope: !3967)
!4013 = !DILocation(line: 269, column: 60, scope: !3967)
!4014 = !DILocation(line: 269, column: 22, scope: !3967)
!4015 = !DILocation(line: 269, column: 21, scope: !3967)
!4016 = !DILocation(line: 269, column: 9, scope: !3967)
!4017 = !DILocation(line: 269, column: 29, scope: !3967)
!4018 = !DILocation(line: 270, column: 38, scope: !3967)
!4019 = !DILocation(line: 270, column: 43, scope: !3967)
!4020 = !DILocation(line: 270, column: 41, scope: !3967)
!4021 = !DILocation(line: 270, column: 47, scope: !3967)
!4022 = !DILocation(line: 270, column: 46, scope: !3967)
!4023 = !DILocation(line: 270, column: 52, scope: !3967)
!4024 = !DILocation(line: 270, column: 60, scope: !3967)
!4025 = !DILocation(line: 270, column: 22, scope: !3967)
!4026 = !DILocation(line: 270, column: 21, scope: !3967)
!4027 = !DILocation(line: 270, column: 9, scope: !3967)
!4028 = !DILocation(line: 270, column: 29, scope: !3967)
!4029 = !DILocation(line: 271, column: 38, scope: !3967)
!4030 = !DILocation(line: 271, column: 43, scope: !3967)
!4031 = !DILocation(line: 271, column: 41, scope: !3967)
!4032 = !DILocation(line: 271, column: 47, scope: !3967)
!4033 = !DILocation(line: 271, column: 46, scope: !3967)
!4034 = !DILocation(line: 271, column: 52, scope: !3967)
!4035 = !DILocation(line: 271, column: 60, scope: !3967)
!4036 = !DILocation(line: 271, column: 22, scope: !3967)
!4037 = !DILocation(line: 271, column: 21, scope: !3967)
!4038 = !DILocation(line: 271, column: 9, scope: !3967)
!4039 = !DILocation(line: 271, column: 29, scope: !3967)
!4040 = !DILocation(line: 272, column: 38, scope: !3967)
!4041 = !DILocation(line: 272, column: 43, scope: !3967)
!4042 = !DILocation(line: 272, column: 41, scope: !3967)
!4043 = !DILocation(line: 272, column: 47, scope: !3967)
!4044 = !DILocation(line: 272, column: 46, scope: !3967)
!4045 = !DILocation(line: 272, column: 52, scope: !3967)
!4046 = !DILocation(line: 272, column: 60, scope: !3967)
!4047 = !DILocation(line: 272, column: 22, scope: !3967)
!4048 = !DILocation(line: 272, column: 21, scope: !3967)
!4049 = !DILocation(line: 272, column: 9, scope: !3967)
!4050 = !DILocation(line: 272, column: 29, scope: !3967)
!4051 = !DILocation(line: 273, column: 5, scope: !3967)
!4052 = !DILocation(line: 262, column: 20, scope: !4053)
!4053 = !DILexicalBlockFile(scope: !3963, file: !21, discriminator: 2)
!4054 = !DILocation(line: 262, column: 5, scope: !4053)
!4055 = distinct !{!4055, !4056}
!4056 = !DILocation(line: 262, column: 5, scope: !36)
!4057 = !DILocation(line: 275, column: 1, scope: !36)
!4058 = !DILocalVariable(name: "_block", arg: 1, scope: !38, file: !21, line: 277, type: !8)
!4059 = !DILocation(line: 277, column: 53, scope: !38)
!4060 = !DILocalVariable(name: "qmul", arg: 2, scope: !38, file: !21, line: 277, type: !12)
!4061 = !DILocation(line: 277, column: 65, scope: !38)
!4062 = !DILocalVariable(name: "stride", scope: !38, file: !21, line: 278, type: !468)
!4063 = !DILocation(line: 278, column: 15, scope: !38)
!4064 = !DILocalVariable(name: "xStride", scope: !38, file: !21, line: 279, type: !468)
!4065 = !DILocation(line: 279, column: 15, scope: !38)
!4066 = !DILocalVariable(name: "i", scope: !38, file: !21, line: 280, type: !12)
!4067 = !DILocation(line: 280, column: 9, scope: !38)
!4068 = !DILocalVariable(name: "temp", scope: !38, file: !21, line: 281, type: !1905)
!4069 = !DILocation(line: 281, column: 9, scope: !38)
!4070 = !DILocalVariable(name: "block", scope: !38, file: !21, line: 283, type: !16)
!4071 = !DILocation(line: 283, column: 14, scope: !38)
!4072 = !DILocation(line: 283, column: 32, scope: !38)
!4073 = !DILocation(line: 283, column: 22, scope: !38)
!4074 = !DILocation(line: 285, column: 10, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !38, file: !21, line: 285, column: 5)
!4076 = !DILocation(line: 285, column: 9, scope: !4075)
!4077 = !DILocation(line: 285, column: 14, scope: !4078)
!4078 = !DILexicalBlockFile(scope: !4079, file: !21, discriminator: 1)
!4079 = distinct !DILexicalBlock(scope: !4075, file: !21, line: 285, column: 5)
!4080 = !DILocation(line: 285, column: 15, scope: !4078)
!4081 = !DILocation(line: 285, column: 5, scope: !4078)
!4082 = !DILocation(line: 286, column: 36, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4079, file: !21, line: 285, column: 23)
!4084 = !DILocation(line: 286, column: 35, scope: !4083)
!4085 = !DILocation(line: 286, column: 38, scope: !4083)
!4086 = !DILocation(line: 286, column: 23, scope: !4083)
!4087 = !DILocation(line: 286, column: 66, scope: !4083)
!4088 = !DILocation(line: 286, column: 65, scope: !4083)
!4089 = !DILocation(line: 286, column: 68, scope: !4083)
!4090 = !DILocation(line: 286, column: 53, scope: !4083)
!4091 = !DILocation(line: 286, column: 51, scope: !4083)
!4092 = !DILocation(line: 286, column: 16, scope: !4083)
!4093 = !DILocation(line: 286, column: 15, scope: !4083)
!4094 = !DILocation(line: 286, column: 17, scope: !4083)
!4095 = !DILocation(line: 286, column: 9, scope: !4083)
!4096 = !DILocation(line: 286, column: 21, scope: !4083)
!4097 = !DILocation(line: 287, column: 36, scope: !4083)
!4098 = !DILocation(line: 287, column: 35, scope: !4083)
!4099 = !DILocation(line: 287, column: 38, scope: !4083)
!4100 = !DILocation(line: 287, column: 23, scope: !4083)
!4101 = !DILocation(line: 287, column: 66, scope: !4083)
!4102 = !DILocation(line: 287, column: 65, scope: !4083)
!4103 = !DILocation(line: 287, column: 68, scope: !4083)
!4104 = !DILocation(line: 287, column: 53, scope: !4083)
!4105 = !DILocation(line: 287, column: 51, scope: !4083)
!4106 = !DILocation(line: 287, column: 16, scope: !4083)
!4107 = !DILocation(line: 287, column: 15, scope: !4083)
!4108 = !DILocation(line: 287, column: 17, scope: !4083)
!4109 = !DILocation(line: 287, column: 9, scope: !4083)
!4110 = !DILocation(line: 287, column: 21, scope: !4083)
!4111 = !DILocation(line: 288, column: 5, scope: !4083)
!4112 = !DILocation(line: 285, column: 20, scope: !4113)
!4113 = !DILexicalBlockFile(scope: !4079, file: !21, discriminator: 2)
!4114 = !DILocation(line: 285, column: 5, scope: !4113)
!4115 = distinct !{!4115, !4116}
!4116 = !DILocation(line: 285, column: 5, scope: !38)
!4117 = !DILocation(line: 290, column: 10, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !38, file: !21, line: 290, column: 5)
!4119 = !DILocation(line: 290, column: 9, scope: !4118)
!4120 = !DILocation(line: 290, column: 14, scope: !4121)
!4121 = !DILexicalBlockFile(scope: !4122, file: !21, discriminator: 1)
!4122 = distinct !DILexicalBlock(scope: !4118, file: !21, line: 290, column: 5)
!4123 = !DILocation(line: 290, column: 15, scope: !4121)
!4124 = !DILocation(line: 290, column: 5, scope: !4121)
!4125 = !DILocalVariable(name: "offset", scope: !4126, file: !21, line: 291, type: !468)
!4126 = distinct !DILexicalBlock(scope: !4122, file: !21, line: 290, column: 23)
!4127 = !DILocation(line: 291, column: 19, scope: !4126)
!4128 = !DILocation(line: 291, column: 36, scope: !4126)
!4129 = !DILocation(line: 291, column: 27, scope: !4126)
!4130 = !DILocalVariable(name: "z0", scope: !4126, file: !21, line: 292, type: !106)
!4131 = !DILocation(line: 292, column: 24, scope: !4126)
!4132 = !DILocation(line: 292, column: 37, scope: !4126)
!4133 = !DILocation(line: 292, column: 36, scope: !4126)
!4134 = !DILocation(line: 292, column: 28, scope: !4126)
!4135 = !DILocation(line: 292, column: 51, scope: !4126)
!4136 = !DILocation(line: 292, column: 50, scope: !4126)
!4137 = !DILocation(line: 292, column: 42, scope: !4126)
!4138 = !DILocation(line: 292, column: 40, scope: !4126)
!4139 = !DILocalVariable(name: "z1", scope: !4126, file: !21, line: 293, type: !106)
!4140 = !DILocation(line: 293, column: 24, scope: !4126)
!4141 = !DILocation(line: 293, column: 37, scope: !4126)
!4142 = !DILocation(line: 293, column: 36, scope: !4126)
!4143 = !DILocation(line: 293, column: 28, scope: !4126)
!4144 = !DILocation(line: 293, column: 51, scope: !4126)
!4145 = !DILocation(line: 293, column: 50, scope: !4126)
!4146 = !DILocation(line: 293, column: 42, scope: !4126)
!4147 = !DILocation(line: 293, column: 40, scope: !4126)
!4148 = !DILocalVariable(name: "z2", scope: !4126, file: !21, line: 294, type: !106)
!4149 = !DILocation(line: 294, column: 24, scope: !4126)
!4150 = !DILocation(line: 294, column: 37, scope: !4126)
!4151 = !DILocation(line: 294, column: 36, scope: !4126)
!4152 = !DILocation(line: 294, column: 28, scope: !4126)
!4153 = !DILocation(line: 294, column: 51, scope: !4126)
!4154 = !DILocation(line: 294, column: 50, scope: !4126)
!4155 = !DILocation(line: 294, column: 42, scope: !4126)
!4156 = !DILocation(line: 294, column: 40, scope: !4126)
!4157 = !DILocalVariable(name: "z3", scope: !4126, file: !21, line: 295, type: !106)
!4158 = !DILocation(line: 295, column: 24, scope: !4126)
!4159 = !DILocation(line: 295, column: 37, scope: !4126)
!4160 = !DILocation(line: 295, column: 36, scope: !4126)
!4161 = !DILocation(line: 295, column: 28, scope: !4126)
!4162 = !DILocation(line: 295, column: 51, scope: !4126)
!4163 = !DILocation(line: 295, column: 50, scope: !4126)
!4164 = !DILocation(line: 295, column: 42, scope: !4126)
!4165 = !DILocation(line: 295, column: 40, scope: !4126)
!4166 = !DILocation(line: 297, column: 40, scope: !4126)
!4167 = !DILocation(line: 297, column: 45, scope: !4126)
!4168 = !DILocation(line: 297, column: 43, scope: !4126)
!4169 = !DILocation(line: 297, column: 49, scope: !4126)
!4170 = !DILocation(line: 297, column: 48, scope: !4126)
!4171 = !DILocation(line: 297, column: 54, scope: !4126)
!4172 = !DILocation(line: 297, column: 61, scope: !4126)
!4173 = !DILocation(line: 297, column: 24, scope: !4126)
!4174 = !DILocation(line: 297, column: 23, scope: !4126)
!4175 = !DILocation(line: 297, column: 9, scope: !4126)
!4176 = !DILocation(line: 297, column: 31, scope: !4126)
!4177 = !DILocation(line: 298, column: 40, scope: !4126)
!4178 = !DILocation(line: 298, column: 45, scope: !4126)
!4179 = !DILocation(line: 298, column: 43, scope: !4126)
!4180 = !DILocation(line: 298, column: 49, scope: !4126)
!4181 = !DILocation(line: 298, column: 48, scope: !4126)
!4182 = !DILocation(line: 298, column: 54, scope: !4126)
!4183 = !DILocation(line: 298, column: 61, scope: !4126)
!4184 = !DILocation(line: 298, column: 24, scope: !4126)
!4185 = !DILocation(line: 298, column: 23, scope: !4126)
!4186 = !DILocation(line: 298, column: 9, scope: !4126)
!4187 = !DILocation(line: 298, column: 31, scope: !4126)
!4188 = !DILocation(line: 299, column: 40, scope: !4126)
!4189 = !DILocation(line: 299, column: 45, scope: !4126)
!4190 = !DILocation(line: 299, column: 43, scope: !4126)
!4191 = !DILocation(line: 299, column: 49, scope: !4126)
!4192 = !DILocation(line: 299, column: 48, scope: !4126)
!4193 = !DILocation(line: 299, column: 54, scope: !4126)
!4194 = !DILocation(line: 299, column: 61, scope: !4126)
!4195 = !DILocation(line: 299, column: 24, scope: !4126)
!4196 = !DILocation(line: 299, column: 23, scope: !4126)
!4197 = !DILocation(line: 299, column: 9, scope: !4126)
!4198 = !DILocation(line: 299, column: 31, scope: !4126)
!4199 = !DILocation(line: 300, column: 40, scope: !4126)
!4200 = !DILocation(line: 300, column: 45, scope: !4126)
!4201 = !DILocation(line: 300, column: 43, scope: !4126)
!4202 = !DILocation(line: 300, column: 49, scope: !4126)
!4203 = !DILocation(line: 300, column: 48, scope: !4126)
!4204 = !DILocation(line: 300, column: 54, scope: !4126)
!4205 = !DILocation(line: 300, column: 61, scope: !4126)
!4206 = !DILocation(line: 300, column: 24, scope: !4126)
!4207 = !DILocation(line: 300, column: 23, scope: !4126)
!4208 = !DILocation(line: 300, column: 9, scope: !4126)
!4209 = !DILocation(line: 300, column: 31, scope: !4126)
!4210 = !DILocation(line: 301, column: 5, scope: !4126)
!4211 = !DILocation(line: 290, column: 20, scope: !4212)
!4212 = !DILexicalBlockFile(scope: !4122, file: !21, discriminator: 2)
!4213 = !DILocation(line: 290, column: 5, scope: !4212)
!4214 = distinct !{!4214, !4215}
!4215 = !DILocation(line: 290, column: 5, scope: !38)
!4216 = !DILocation(line: 302, column: 1, scope: !38)
!4217 = distinct !DISubprogram(name: "ff_h264_chroma_dc_dequant_idct_9_c", scope: !21, file: !21, line: 304, type: !30, isLocal: false, isDefinition: true, scopeLine: 304, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!4218 = !DILocalVariable(name: "_block", arg: 1, scope: !4217, file: !21, line: 304, type: !8)
!4219 = !DILocation(line: 304, column: 50, scope: !4217)
!4220 = !DILocalVariable(name: "qmul", arg: 2, scope: !4217, file: !21, line: 304, type: !12)
!4221 = !DILocation(line: 304, column: 62, scope: !4217)
!4222 = !DILocalVariable(name: "stride", scope: !4217, file: !21, line: 305, type: !468)
!4223 = !DILocation(line: 305, column: 15, scope: !4217)
!4224 = !DILocalVariable(name: "xStride", scope: !4217, file: !21, line: 306, type: !468)
!4225 = !DILocation(line: 306, column: 15, scope: !4217)
!4226 = !DILocalVariable(name: "a", scope: !4217, file: !21, line: 307, type: !11)
!4227 = !DILocation(line: 307, column: 14, scope: !4217)
!4228 = !DILocalVariable(name: "b", scope: !4217, file: !21, line: 307, type: !11)
!4229 = !DILocation(line: 307, column: 16, scope: !4217)
!4230 = !DILocalVariable(name: "c", scope: !4217, file: !21, line: 307, type: !11)
!4231 = !DILocation(line: 307, column: 18, scope: !4217)
!4232 = !DILocalVariable(name: "d", scope: !4217, file: !21, line: 307, type: !11)
!4233 = !DILocation(line: 307, column: 20, scope: !4217)
!4234 = !DILocalVariable(name: "e", scope: !4217, file: !21, line: 307, type: !11)
!4235 = !DILocation(line: 307, column: 22, scope: !4217)
!4236 = !DILocalVariable(name: "block", scope: !4217, file: !21, line: 308, type: !16)
!4237 = !DILocation(line: 308, column: 14, scope: !4217)
!4238 = !DILocation(line: 308, column: 32, scope: !4217)
!4239 = !DILocation(line: 308, column: 22, scope: !4217)
!4240 = !DILocation(line: 310, column: 8, scope: !4217)
!4241 = !DILocation(line: 310, column: 6, scope: !4217)
!4242 = !DILocation(line: 311, column: 8, scope: !4217)
!4243 = !DILocation(line: 311, column: 6, scope: !4217)
!4244 = !DILocation(line: 312, column: 8, scope: !4217)
!4245 = !DILocation(line: 312, column: 6, scope: !4217)
!4246 = !DILocation(line: 313, column: 8, scope: !4217)
!4247 = !DILocation(line: 313, column: 6, scope: !4217)
!4248 = !DILocation(line: 315, column: 8, scope: !4217)
!4249 = !DILocation(line: 315, column: 10, scope: !4217)
!4250 = !DILocation(line: 315, column: 9, scope: !4217)
!4251 = !DILocation(line: 315, column: 6, scope: !4217)
!4252 = !DILocation(line: 316, column: 8, scope: !4217)
!4253 = !DILocation(line: 316, column: 10, scope: !4217)
!4254 = !DILocation(line: 316, column: 9, scope: !4217)
!4255 = !DILocation(line: 316, column: 6, scope: !4217)
!4256 = !DILocation(line: 317, column: 8, scope: !4217)
!4257 = !DILocation(line: 317, column: 10, scope: !4217)
!4258 = !DILocation(line: 317, column: 9, scope: !4217)
!4259 = !DILocation(line: 317, column: 6, scope: !4217)
!4260 = !DILocation(line: 318, column: 8, scope: !4217)
!4261 = !DILocation(line: 318, column: 10, scope: !4217)
!4262 = !DILocation(line: 318, column: 9, scope: !4217)
!4263 = !DILocation(line: 318, column: 6, scope: !4217)
!4264 = !DILocation(line: 320, column: 41, scope: !4217)
!4265 = !DILocation(line: 320, column: 43, scope: !4217)
!4266 = !DILocation(line: 320, column: 42, scope: !4217)
!4267 = !DILocation(line: 320, column: 46, scope: !4217)
!4268 = !DILocation(line: 320, column: 45, scope: !4217)
!4269 = !DILocation(line: 320, column: 52, scope: !4217)
!4270 = !DILocation(line: 320, column: 5, scope: !4217)
!4271 = !DILocation(line: 320, column: 32, scope: !4217)
!4272 = !DILocation(line: 321, column: 41, scope: !4217)
!4273 = !DILocation(line: 321, column: 43, scope: !4217)
!4274 = !DILocation(line: 321, column: 42, scope: !4217)
!4275 = !DILocation(line: 321, column: 46, scope: !4217)
!4276 = !DILocation(line: 321, column: 45, scope: !4217)
!4277 = !DILocation(line: 321, column: 52, scope: !4217)
!4278 = !DILocation(line: 321, column: 5, scope: !4217)
!4279 = !DILocation(line: 321, column: 32, scope: !4217)
!4280 = !DILocation(line: 322, column: 41, scope: !4217)
!4281 = !DILocation(line: 322, column: 43, scope: !4217)
!4282 = !DILocation(line: 322, column: 42, scope: !4217)
!4283 = !DILocation(line: 322, column: 46, scope: !4217)
!4284 = !DILocation(line: 322, column: 45, scope: !4217)
!4285 = !DILocation(line: 322, column: 52, scope: !4217)
!4286 = !DILocation(line: 322, column: 5, scope: !4217)
!4287 = !DILocation(line: 322, column: 32, scope: !4217)
!4288 = !DILocation(line: 323, column: 41, scope: !4217)
!4289 = !DILocation(line: 323, column: 43, scope: !4217)
!4290 = !DILocation(line: 323, column: 42, scope: !4217)
!4291 = !DILocation(line: 323, column: 46, scope: !4217)
!4292 = !DILocation(line: 323, column: 45, scope: !4217)
!4293 = !DILocation(line: 323, column: 52, scope: !4217)
!4294 = !DILocation(line: 323, column: 5, scope: !4217)
!4295 = !DILocation(line: 323, column: 32, scope: !4217)
!4296 = !DILocation(line: 324, column: 1, scope: !4217)
!4297 = distinct !DISubprogram(name: "ff_h264_idct_add_10_c", scope: !21, file: !21, line: 33, type: !60, isLocal: false, isDefinition: true, scopeLine: 34, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!4298 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !4299)
!4299 = distinct !DILocation(line: 61, column: 28, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4301, file: !21, line: 54, column: 23)
!4301 = distinct !DILexicalBlock(scope: !4302, file: !21, line: 54, column: 5)
!4302 = distinct !DILexicalBlock(scope: !4297, file: !21, line: 54, column: 5)
!4303 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !4299)
!4304 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !4305)
!4305 = distinct !DILocation(line: 62, column: 28, scope: !4300)
!4306 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !4305)
!4307 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !4308)
!4308 = distinct !DILocation(line: 63, column: 28, scope: !4300)
!4309 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !4308)
!4310 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !4311)
!4311 = distinct !DILocation(line: 60, column: 28, scope: !4300)
!4312 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !4311)
!4313 = !DILocalVariable(name: "_dst", arg: 1, scope: !4297, file: !21, line: 33, type: !4)
!4314 = !DILocation(line: 33, column: 37, scope: !4297)
!4315 = !DILocalVariable(name: "_block", arg: 2, scope: !4297, file: !21, line: 33, type: !8)
!4316 = !DILocation(line: 33, column: 52, scope: !4297)
!4317 = !DILocalVariable(name: "stride", arg: 3, scope: !4297, file: !21, line: 33, type: !12)
!4318 = !DILocation(line: 33, column: 64, scope: !4297)
!4319 = !DILocalVariable(name: "i", scope: !4297, file: !21, line: 35, type: !12)
!4320 = !DILocation(line: 35, column: 9, scope: !4297)
!4321 = !DILocalVariable(name: "dst", scope: !4297, file: !21, line: 36, type: !13)
!4322 = !DILocation(line: 36, column: 15, scope: !4297)
!4323 = !DILocation(line: 36, column: 32, scope: !4297)
!4324 = !DILocation(line: 36, column: 21, scope: !4297)
!4325 = !DILocalVariable(name: "block", scope: !4297, file: !21, line: 37, type: !16)
!4326 = !DILocation(line: 37, column: 14, scope: !4297)
!4327 = !DILocation(line: 37, column: 32, scope: !4297)
!4328 = !DILocation(line: 37, column: 22, scope: !4297)
!4329 = !DILocation(line: 38, column: 12, scope: !4297)
!4330 = !DILocation(line: 40, column: 5, scope: !4297)
!4331 = !DILocation(line: 40, column: 14, scope: !4297)
!4332 = !DILocation(line: 42, column: 10, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4297, file: !21, line: 42, column: 5)
!4334 = !DILocation(line: 42, column: 9, scope: !4333)
!4335 = !DILocation(line: 42, column: 14, scope: !4336)
!4336 = !DILexicalBlockFile(scope: !4337, file: !21, discriminator: 1)
!4337 = distinct !DILexicalBlock(scope: !4333, file: !21, line: 42, column: 5)
!4338 = !DILocation(line: 42, column: 15, scope: !4336)
!4339 = !DILocation(line: 42, column: 5, scope: !4336)
!4340 = !DILocalVariable(name: "z0", scope: !4341, file: !21, line: 43, type: !106)
!4341 = distinct !DILexicalBlock(scope: !4337, file: !21, line: 42, column: 23)
!4342 = !DILocation(line: 43, column: 24, scope: !4341)
!4343 = !DILocation(line: 43, column: 34, scope: !4341)
!4344 = !DILocation(line: 43, column: 36, scope: !4341)
!4345 = !DILocation(line: 43, column: 28, scope: !4341)
!4346 = !DILocation(line: 43, column: 61, scope: !4341)
!4347 = !DILocation(line: 43, column: 63, scope: !4341)
!4348 = !DILocation(line: 43, column: 55, scope: !4341)
!4349 = !DILocation(line: 43, column: 43, scope: !4341)
!4350 = !DILocalVariable(name: "z1", scope: !4341, file: !21, line: 44, type: !106)
!4351 = !DILocation(line: 44, column: 24, scope: !4341)
!4352 = !DILocation(line: 44, column: 34, scope: !4341)
!4353 = !DILocation(line: 44, column: 36, scope: !4341)
!4354 = !DILocation(line: 44, column: 28, scope: !4341)
!4355 = !DILocation(line: 44, column: 61, scope: !4341)
!4356 = !DILocation(line: 44, column: 63, scope: !4341)
!4357 = !DILocation(line: 44, column: 55, scope: !4341)
!4358 = !DILocation(line: 44, column: 43, scope: !4341)
!4359 = !DILocalVariable(name: "z2", scope: !4341, file: !21, line: 45, type: !106)
!4360 = !DILocation(line: 45, column: 24, scope: !4341)
!4361 = !DILocation(line: 45, column: 35, scope: !4341)
!4362 = !DILocation(line: 45, column: 37, scope: !4341)
!4363 = !DILocation(line: 45, column: 29, scope: !4341)
!4364 = !DILocation(line: 45, column: 43, scope: !4341)
!4365 = !DILocation(line: 45, column: 66, scope: !4341)
!4366 = !DILocation(line: 45, column: 68, scope: !4341)
!4367 = !DILocation(line: 45, column: 60, scope: !4341)
!4368 = !DILocation(line: 45, column: 48, scope: !4341)
!4369 = !DILocalVariable(name: "z3", scope: !4341, file: !21, line: 46, type: !106)
!4370 = !DILocation(line: 46, column: 24, scope: !4341)
!4371 = !DILocation(line: 46, column: 34, scope: !4341)
!4372 = !DILocation(line: 46, column: 36, scope: !4341)
!4373 = !DILocation(line: 46, column: 28, scope: !4341)
!4374 = !DILocation(line: 46, column: 62, scope: !4341)
!4375 = !DILocation(line: 46, column: 64, scope: !4341)
!4376 = !DILocation(line: 46, column: 56, scope: !4341)
!4377 = !DILocation(line: 46, column: 70, scope: !4341)
!4378 = !DILocation(line: 46, column: 43, scope: !4341)
!4379 = !DILocation(line: 48, column: 25, scope: !4341)
!4380 = !DILocation(line: 48, column: 30, scope: !4341)
!4381 = !DILocation(line: 48, column: 28, scope: !4341)
!4382 = !DILocation(line: 48, column: 15, scope: !4341)
!4383 = !DILocation(line: 48, column: 17, scope: !4341)
!4384 = !DILocation(line: 48, column: 9, scope: !4341)
!4385 = !DILocation(line: 48, column: 23, scope: !4341)
!4386 = !DILocation(line: 49, column: 25, scope: !4341)
!4387 = !DILocation(line: 49, column: 30, scope: !4341)
!4388 = !DILocation(line: 49, column: 28, scope: !4341)
!4389 = !DILocation(line: 49, column: 15, scope: !4341)
!4390 = !DILocation(line: 49, column: 17, scope: !4341)
!4391 = !DILocation(line: 49, column: 9, scope: !4341)
!4392 = !DILocation(line: 49, column: 23, scope: !4341)
!4393 = !DILocation(line: 50, column: 25, scope: !4341)
!4394 = !DILocation(line: 50, column: 30, scope: !4341)
!4395 = !DILocation(line: 50, column: 28, scope: !4341)
!4396 = !DILocation(line: 50, column: 15, scope: !4341)
!4397 = !DILocation(line: 50, column: 17, scope: !4341)
!4398 = !DILocation(line: 50, column: 9, scope: !4341)
!4399 = !DILocation(line: 50, column: 23, scope: !4341)
!4400 = !DILocation(line: 51, column: 25, scope: !4341)
!4401 = !DILocation(line: 51, column: 30, scope: !4341)
!4402 = !DILocation(line: 51, column: 28, scope: !4341)
!4403 = !DILocation(line: 51, column: 15, scope: !4341)
!4404 = !DILocation(line: 51, column: 17, scope: !4341)
!4405 = !DILocation(line: 51, column: 9, scope: !4341)
!4406 = !DILocation(line: 51, column: 23, scope: !4341)
!4407 = !DILocation(line: 52, column: 5, scope: !4341)
!4408 = !DILocation(line: 42, column: 20, scope: !4409)
!4409 = !DILexicalBlockFile(scope: !4337, file: !21, discriminator: 2)
!4410 = !DILocation(line: 42, column: 5, scope: !4409)
!4411 = distinct !{!4411, !4412}
!4412 = !DILocation(line: 42, column: 5, scope: !4297)
!4413 = !DILocation(line: 54, column: 10, scope: !4302)
!4414 = !DILocation(line: 54, column: 9, scope: !4302)
!4415 = !DILocation(line: 54, column: 14, scope: !4416)
!4416 = !DILexicalBlockFile(scope: !4301, file: !21, discriminator: 1)
!4417 = !DILocation(line: 54, column: 15, scope: !4416)
!4418 = !DILocation(line: 54, column: 5, scope: !4416)
!4419 = !DILocalVariable(name: "z0", scope: !4300, file: !21, line: 55, type: !106)
!4420 = !DILocation(line: 55, column: 24, scope: !4300)
!4421 = !DILocation(line: 55, column: 40, scope: !4300)
!4422 = !DILocation(line: 55, column: 39, scope: !4300)
!4423 = !DILocation(line: 55, column: 36, scope: !4300)
!4424 = !DILocation(line: 55, column: 28, scope: !4300)
!4425 = !DILocation(line: 55, column: 67, scope: !4300)
!4426 = !DILocation(line: 55, column: 66, scope: !4300)
!4427 = !DILocation(line: 55, column: 63, scope: !4300)
!4428 = !DILocation(line: 55, column: 55, scope: !4300)
!4429 = !DILocation(line: 55, column: 43, scope: !4300)
!4430 = !DILocalVariable(name: "z1", scope: !4300, file: !21, line: 56, type: !106)
!4431 = !DILocation(line: 56, column: 24, scope: !4300)
!4432 = !DILocation(line: 56, column: 40, scope: !4300)
!4433 = !DILocation(line: 56, column: 39, scope: !4300)
!4434 = !DILocation(line: 56, column: 36, scope: !4300)
!4435 = !DILocation(line: 56, column: 28, scope: !4300)
!4436 = !DILocation(line: 56, column: 67, scope: !4300)
!4437 = !DILocation(line: 56, column: 66, scope: !4300)
!4438 = !DILocation(line: 56, column: 63, scope: !4300)
!4439 = !DILocation(line: 56, column: 55, scope: !4300)
!4440 = !DILocation(line: 56, column: 43, scope: !4300)
!4441 = !DILocalVariable(name: "z2", scope: !4300, file: !21, line: 57, type: !106)
!4442 = !DILocation(line: 57, column: 24, scope: !4300)
!4443 = !DILocation(line: 57, column: 41, scope: !4300)
!4444 = !DILocation(line: 57, column: 40, scope: !4300)
!4445 = !DILocation(line: 57, column: 37, scope: !4300)
!4446 = !DILocation(line: 57, column: 29, scope: !4300)
!4447 = !DILocation(line: 57, column: 43, scope: !4300)
!4448 = !DILocation(line: 57, column: 72, scope: !4300)
!4449 = !DILocation(line: 57, column: 71, scope: !4300)
!4450 = !DILocation(line: 57, column: 68, scope: !4300)
!4451 = !DILocation(line: 57, column: 60, scope: !4300)
!4452 = !DILocation(line: 57, column: 48, scope: !4300)
!4453 = !DILocalVariable(name: "z3", scope: !4300, file: !21, line: 58, type: !106)
!4454 = !DILocation(line: 58, column: 24, scope: !4300)
!4455 = !DILocation(line: 58, column: 40, scope: !4300)
!4456 = !DILocation(line: 58, column: 39, scope: !4300)
!4457 = !DILocation(line: 58, column: 36, scope: !4300)
!4458 = !DILocation(line: 58, column: 28, scope: !4300)
!4459 = !DILocation(line: 58, column: 68, scope: !4300)
!4460 = !DILocation(line: 58, column: 67, scope: !4300)
!4461 = !DILocation(line: 58, column: 64, scope: !4300)
!4462 = !DILocation(line: 58, column: 56, scope: !4300)
!4463 = !DILocation(line: 58, column: 70, scope: !4300)
!4464 = !DILocation(line: 58, column: 43, scope: !4300)
!4465 = !DILocation(line: 60, column: 49, scope: !4300)
!4466 = !DILocation(line: 60, column: 55, scope: !4300)
!4467 = !DILocation(line: 60, column: 54, scope: !4300)
!4468 = !DILocation(line: 60, column: 51, scope: !4300)
!4469 = !DILocation(line: 60, column: 45, scope: !4300)
!4470 = !DILocation(line: 60, column: 72, scope: !4300)
!4471 = !DILocation(line: 60, column: 77, scope: !4300)
!4472 = !DILocation(line: 60, column: 75, scope: !4300)
!4473 = !DILocation(line: 60, column: 81, scope: !4300)
!4474 = !DILocation(line: 60, column: 63, scope: !4300)
!4475 = !DILocation(line: 60, column: 28, scope: !4300)
!4476 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !4311)
!4477 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !4311)
!4478 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !4311)
!4479 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !4311)
!4480 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !4311)
!4481 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !4311)
!4482 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !4311)
!4483 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !4311)
!4484 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !4311)
!4485 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !4311)
!4486 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !4311)
!4487 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !4311)
!4488 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !4311)
!4489 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !4311)
!4490 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !4311)
!4491 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !4311)
!4492 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !4311)
!4493 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !4311)
!4494 = !DILocation(line: 60, column: 13, scope: !4300)
!4495 = !DILocation(line: 60, column: 19, scope: !4300)
!4496 = !DILocation(line: 60, column: 18, scope: !4300)
!4497 = !DILocation(line: 60, column: 15, scope: !4300)
!4498 = !DILocation(line: 60, column: 9, scope: !4300)
!4499 = !DILocation(line: 60, column: 26, scope: !4300)
!4500 = !DILocation(line: 61, column: 49, scope: !4300)
!4501 = !DILocation(line: 61, column: 55, scope: !4300)
!4502 = !DILocation(line: 61, column: 54, scope: !4300)
!4503 = !DILocation(line: 61, column: 51, scope: !4300)
!4504 = !DILocation(line: 61, column: 45, scope: !4300)
!4505 = !DILocation(line: 61, column: 72, scope: !4300)
!4506 = !DILocation(line: 61, column: 77, scope: !4300)
!4507 = !DILocation(line: 61, column: 75, scope: !4300)
!4508 = !DILocation(line: 61, column: 81, scope: !4300)
!4509 = !DILocation(line: 61, column: 63, scope: !4300)
!4510 = !DILocation(line: 61, column: 28, scope: !4300)
!4511 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !4299)
!4512 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !4299)
!4513 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !4299)
!4514 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !4299)
!4515 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !4299)
!4516 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !4299)
!4517 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !4299)
!4518 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !4299)
!4519 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !4299)
!4520 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !4299)
!4521 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !4299)
!4522 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !4299)
!4523 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !4299)
!4524 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !4299)
!4525 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !4299)
!4526 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !4299)
!4527 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !4299)
!4528 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !4299)
!4529 = !DILocation(line: 61, column: 13, scope: !4300)
!4530 = !DILocation(line: 61, column: 19, scope: !4300)
!4531 = !DILocation(line: 61, column: 18, scope: !4300)
!4532 = !DILocation(line: 61, column: 15, scope: !4300)
!4533 = !DILocation(line: 61, column: 9, scope: !4300)
!4534 = !DILocation(line: 61, column: 26, scope: !4300)
!4535 = !DILocation(line: 62, column: 49, scope: !4300)
!4536 = !DILocation(line: 62, column: 55, scope: !4300)
!4537 = !DILocation(line: 62, column: 54, scope: !4300)
!4538 = !DILocation(line: 62, column: 51, scope: !4300)
!4539 = !DILocation(line: 62, column: 45, scope: !4300)
!4540 = !DILocation(line: 62, column: 72, scope: !4300)
!4541 = !DILocation(line: 62, column: 77, scope: !4300)
!4542 = !DILocation(line: 62, column: 75, scope: !4300)
!4543 = !DILocation(line: 62, column: 81, scope: !4300)
!4544 = !DILocation(line: 62, column: 63, scope: !4300)
!4545 = !DILocation(line: 62, column: 28, scope: !4300)
!4546 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !4305)
!4547 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !4305)
!4548 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !4305)
!4549 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !4305)
!4550 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !4305)
!4551 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !4305)
!4552 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !4305)
!4553 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !4305)
!4554 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !4305)
!4555 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !4305)
!4556 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !4305)
!4557 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !4305)
!4558 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !4305)
!4559 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !4305)
!4560 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !4305)
!4561 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !4305)
!4562 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !4305)
!4563 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !4305)
!4564 = !DILocation(line: 62, column: 13, scope: !4300)
!4565 = !DILocation(line: 62, column: 19, scope: !4300)
!4566 = !DILocation(line: 62, column: 18, scope: !4300)
!4567 = !DILocation(line: 62, column: 15, scope: !4300)
!4568 = !DILocation(line: 62, column: 9, scope: !4300)
!4569 = !DILocation(line: 62, column: 26, scope: !4300)
!4570 = !DILocation(line: 63, column: 49, scope: !4300)
!4571 = !DILocation(line: 63, column: 55, scope: !4300)
!4572 = !DILocation(line: 63, column: 54, scope: !4300)
!4573 = !DILocation(line: 63, column: 51, scope: !4300)
!4574 = !DILocation(line: 63, column: 45, scope: !4300)
!4575 = !DILocation(line: 63, column: 72, scope: !4300)
!4576 = !DILocation(line: 63, column: 77, scope: !4300)
!4577 = !DILocation(line: 63, column: 75, scope: !4300)
!4578 = !DILocation(line: 63, column: 81, scope: !4300)
!4579 = !DILocation(line: 63, column: 63, scope: !4300)
!4580 = !DILocation(line: 63, column: 28, scope: !4300)
!4581 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !4308)
!4582 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !4308)
!4583 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !4308)
!4584 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !4308)
!4585 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !4308)
!4586 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !4308)
!4587 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !4308)
!4588 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !4308)
!4589 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !4308)
!4590 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !4308)
!4591 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !4308)
!4592 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !4308)
!4593 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !4308)
!4594 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !4308)
!4595 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !4308)
!4596 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !4308)
!4597 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !4308)
!4598 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !4308)
!4599 = !DILocation(line: 63, column: 13, scope: !4300)
!4600 = !DILocation(line: 63, column: 19, scope: !4300)
!4601 = !DILocation(line: 63, column: 18, scope: !4300)
!4602 = !DILocation(line: 63, column: 15, scope: !4300)
!4603 = !DILocation(line: 63, column: 9, scope: !4300)
!4604 = !DILocation(line: 63, column: 26, scope: !4300)
!4605 = !DILocation(line: 64, column: 5, scope: !4300)
!4606 = !DILocation(line: 54, column: 20, scope: !4607)
!4607 = !DILexicalBlockFile(scope: !4301, file: !21, discriminator: 2)
!4608 = !DILocation(line: 54, column: 5, scope: !4607)
!4609 = distinct !{!4609, !4610}
!4610 = !DILocation(line: 54, column: 5, scope: !4297)
!4611 = !DILocation(line: 66, column: 12, scope: !4297)
!4612 = !DILocation(line: 66, column: 5, scope: !4297)
!4613 = !DILocation(line: 67, column: 1, scope: !4297)
!4614 = distinct !DISubprogram(name: "ff_h264_idct8_add_10_c", scope: !21, file: !21, line: 69, type: !60, isLocal: false, isDefinition: true, scopeLine: 69, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!4615 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !4616)
!4616 = distinct !DILocation(line: 131, column: 29, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4618, file: !21, line: 109, column: 5)
!4618 = distinct !DILexicalBlock(scope: !4619, file: !21, line: 108, column: 5)
!4619 = distinct !DILexicalBlock(scope: !4614, file: !21, line: 108, column: 5)
!4620 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !4616)
!4621 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !4622)
!4622 = distinct !DILocation(line: 132, column: 29, scope: !4617)
!4623 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !4622)
!4624 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !4625)
!4625 = distinct !DILocation(line: 133, column: 29, scope: !4617)
!4626 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !4625)
!4627 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !4628)
!4628 = distinct !DILocation(line: 134, column: 29, scope: !4617)
!4629 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !4628)
!4630 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !4631)
!4631 = distinct !DILocation(line: 135, column: 29, scope: !4617)
!4632 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !4631)
!4633 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !4634)
!4634 = distinct !DILocation(line: 136, column: 29, scope: !4617)
!4635 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !4634)
!4636 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !4637)
!4637 = distinct !DILocation(line: 137, column: 29, scope: !4617)
!4638 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !4637)
!4639 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !4640)
!4640 = distinct !DILocation(line: 130, column: 29, scope: !4617)
!4641 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !4640)
!4642 = !DILocalVariable(name: "_dst", arg: 1, scope: !4614, file: !21, line: 69, type: !4)
!4643 = !DILocation(line: 69, column: 38, scope: !4614)
!4644 = !DILocalVariable(name: "_block", arg: 2, scope: !4614, file: !21, line: 69, type: !8)
!4645 = !DILocation(line: 69, column: 53, scope: !4614)
!4646 = !DILocalVariable(name: "stride", arg: 3, scope: !4614, file: !21, line: 69, type: !12)
!4647 = !DILocation(line: 69, column: 65, scope: !4614)
!4648 = !DILocalVariable(name: "i", scope: !4614, file: !21, line: 70, type: !12)
!4649 = !DILocation(line: 70, column: 9, scope: !4614)
!4650 = !DILocalVariable(name: "dst", scope: !4614, file: !21, line: 71, type: !13)
!4651 = !DILocation(line: 71, column: 15, scope: !4614)
!4652 = !DILocation(line: 71, column: 32, scope: !4614)
!4653 = !DILocation(line: 71, column: 21, scope: !4614)
!4654 = !DILocalVariable(name: "block", scope: !4614, file: !21, line: 72, type: !16)
!4655 = !DILocation(line: 72, column: 14, scope: !4614)
!4656 = !DILocation(line: 72, column: 32, scope: !4614)
!4657 = !DILocation(line: 72, column: 22, scope: !4614)
!4658 = !DILocation(line: 73, column: 12, scope: !4614)
!4659 = !DILocation(line: 75, column: 5, scope: !4614)
!4660 = !DILocation(line: 75, column: 14, scope: !4614)
!4661 = !DILocation(line: 77, column: 12, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4614, file: !21, line: 77, column: 5)
!4663 = !DILocation(line: 77, column: 10, scope: !4662)
!4664 = !DILocation(line: 77, column: 17, scope: !4665)
!4665 = !DILexicalBlockFile(scope: !4666, file: !21, discriminator: 1)
!4666 = distinct !DILexicalBlock(scope: !4662, file: !21, line: 77, column: 5)
!4667 = !DILocation(line: 77, column: 19, scope: !4665)
!4668 = !DILocation(line: 77, column: 5, scope: !4665)
!4669 = !DILocalVariable(name: "a0", scope: !4670, file: !21, line: 79, type: !106)
!4670 = distinct !DILexicalBlock(scope: !4666, file: !21, line: 78, column: 5)
!4671 = !DILocation(line: 79, column: 28, scope: !4670)
!4672 = !DILocation(line: 79, column: 39, scope: !4670)
!4673 = !DILocation(line: 79, column: 40, scope: !4670)
!4674 = !DILocation(line: 79, column: 33, scope: !4670)
!4675 = !DILocation(line: 79, column: 64, scope: !4670)
!4676 = !DILocation(line: 79, column: 65, scope: !4670)
!4677 = !DILocation(line: 79, column: 58, scope: !4670)
!4678 = !DILocation(line: 79, column: 46, scope: !4670)
!4679 = !DILocalVariable(name: "a2", scope: !4670, file: !21, line: 80, type: !106)
!4680 = !DILocation(line: 80, column: 28, scope: !4670)
!4681 = !DILocation(line: 80, column: 39, scope: !4670)
!4682 = !DILocation(line: 80, column: 40, scope: !4670)
!4683 = !DILocation(line: 80, column: 33, scope: !4670)
!4684 = !DILocation(line: 80, column: 64, scope: !4670)
!4685 = !DILocation(line: 80, column: 65, scope: !4670)
!4686 = !DILocation(line: 80, column: 58, scope: !4670)
!4687 = !DILocation(line: 80, column: 46, scope: !4670)
!4688 = !DILocalVariable(name: "a4", scope: !4670, file: !21, line: 81, type: !106)
!4689 = !DILocation(line: 81, column: 28, scope: !4670)
!4690 = !DILocation(line: 81, column: 40, scope: !4670)
!4691 = !DILocation(line: 81, column: 41, scope: !4670)
!4692 = !DILocation(line: 81, column: 34, scope: !4670)
!4693 = !DILocation(line: 81, column: 46, scope: !4670)
!4694 = !DILocation(line: 81, column: 69, scope: !4670)
!4695 = !DILocation(line: 81, column: 70, scope: !4670)
!4696 = !DILocation(line: 81, column: 63, scope: !4670)
!4697 = !DILocation(line: 81, column: 51, scope: !4670)
!4698 = !DILocalVariable(name: "a6", scope: !4670, file: !21, line: 82, type: !106)
!4699 = !DILocation(line: 82, column: 28, scope: !4670)
!4700 = !DILocation(line: 82, column: 40, scope: !4670)
!4701 = !DILocation(line: 82, column: 41, scope: !4670)
!4702 = !DILocation(line: 82, column: 34, scope: !4670)
!4703 = !DILocation(line: 82, column: 46, scope: !4670)
!4704 = !DILocation(line: 82, column: 69, scope: !4670)
!4705 = !DILocation(line: 82, column: 70, scope: !4670)
!4706 = !DILocation(line: 82, column: 63, scope: !4670)
!4707 = !DILocation(line: 82, column: 51, scope: !4670)
!4708 = !DILocalVariable(name: "b0", scope: !4670, file: !21, line: 84, type: !106)
!4709 = !DILocation(line: 84, column: 28, scope: !4670)
!4710 = !DILocation(line: 84, column: 33, scope: !4670)
!4711 = !DILocation(line: 84, column: 38, scope: !4670)
!4712 = !DILocation(line: 84, column: 36, scope: !4670)
!4713 = !DILocalVariable(name: "b2", scope: !4670, file: !21, line: 85, type: !106)
!4714 = !DILocation(line: 85, column: 28, scope: !4670)
!4715 = !DILocation(line: 85, column: 33, scope: !4670)
!4716 = !DILocation(line: 85, column: 38, scope: !4670)
!4717 = !DILocation(line: 85, column: 36, scope: !4670)
!4718 = !DILocalVariable(name: "b4", scope: !4670, file: !21, line: 86, type: !106)
!4719 = !DILocation(line: 86, column: 28, scope: !4670)
!4720 = !DILocation(line: 86, column: 33, scope: !4670)
!4721 = !DILocation(line: 86, column: 38, scope: !4670)
!4722 = !DILocation(line: 86, column: 36, scope: !4670)
!4723 = !DILocalVariable(name: "b6", scope: !4670, file: !21, line: 87, type: !106)
!4724 = !DILocation(line: 87, column: 28, scope: !4670)
!4725 = !DILocation(line: 87, column: 33, scope: !4670)
!4726 = !DILocation(line: 87, column: 38, scope: !4670)
!4727 = !DILocation(line: 87, column: 36, scope: !4670)
!4728 = !DILocalVariable(name: "a1", scope: !4670, file: !21, line: 89, type: !468)
!4729 = !DILocation(line: 89, column: 19, scope: !4670)
!4730 = !DILocation(line: 89, column: 31, scope: !4670)
!4731 = !DILocation(line: 89, column: 32, scope: !4670)
!4732 = !DILocation(line: 89, column: 25, scope: !4670)
!4733 = !DILocation(line: 89, column: 24, scope: !4670)
!4734 = !DILocation(line: 89, column: 56, scope: !4670)
!4735 = !DILocation(line: 89, column: 57, scope: !4670)
!4736 = !DILocation(line: 89, column: 50, scope: !4670)
!4737 = !DILocation(line: 89, column: 38, scope: !4670)
!4738 = !DILocation(line: 89, column: 71, scope: !4670)
!4739 = !DILocation(line: 89, column: 72, scope: !4670)
!4740 = !DILocation(line: 89, column: 65, scope: !4670)
!4741 = !DILocation(line: 89, column: 63, scope: !4670)
!4742 = !DILocation(line: 89, column: 87, scope: !4670)
!4743 = !DILocation(line: 89, column: 88, scope: !4670)
!4744 = !DILocation(line: 89, column: 81, scope: !4670)
!4745 = !DILocation(line: 89, column: 93, scope: !4670)
!4746 = !DILocation(line: 89, column: 78, scope: !4670)
!4747 = !DILocalVariable(name: "a3", scope: !4670, file: !21, line: 90, type: !468)
!4748 = !DILocation(line: 90, column: 19, scope: !4670)
!4749 = !DILocation(line: 90, column: 30, scope: !4670)
!4750 = !DILocation(line: 90, column: 31, scope: !4670)
!4751 = !DILocation(line: 90, column: 24, scope: !4670)
!4752 = !DILocation(line: 90, column: 55, scope: !4670)
!4753 = !DILocation(line: 90, column: 56, scope: !4670)
!4754 = !DILocation(line: 90, column: 49, scope: !4670)
!4755 = !DILocation(line: 90, column: 37, scope: !4670)
!4756 = !DILocation(line: 90, column: 70, scope: !4670)
!4757 = !DILocation(line: 90, column: 71, scope: !4670)
!4758 = !DILocation(line: 90, column: 64, scope: !4670)
!4759 = !DILocation(line: 90, column: 62, scope: !4670)
!4760 = !DILocation(line: 90, column: 86, scope: !4670)
!4761 = !DILocation(line: 90, column: 87, scope: !4670)
!4762 = !DILocation(line: 90, column: 80, scope: !4670)
!4763 = !DILocation(line: 90, column: 92, scope: !4670)
!4764 = !DILocation(line: 90, column: 77, scope: !4670)
!4765 = !DILocalVariable(name: "a5", scope: !4670, file: !21, line: 91, type: !468)
!4766 = !DILocation(line: 91, column: 19, scope: !4670)
!4767 = !DILocation(line: 91, column: 31, scope: !4670)
!4768 = !DILocation(line: 91, column: 32, scope: !4670)
!4769 = !DILocation(line: 91, column: 25, scope: !4670)
!4770 = !DILocation(line: 91, column: 24, scope: !4670)
!4771 = !DILocation(line: 91, column: 56, scope: !4670)
!4772 = !DILocation(line: 91, column: 57, scope: !4670)
!4773 = !DILocation(line: 91, column: 50, scope: !4670)
!4774 = !DILocation(line: 91, column: 38, scope: !4670)
!4775 = !DILocation(line: 91, column: 71, scope: !4670)
!4776 = !DILocation(line: 91, column: 72, scope: !4670)
!4777 = !DILocation(line: 91, column: 65, scope: !4670)
!4778 = !DILocation(line: 91, column: 63, scope: !4670)
!4779 = !DILocation(line: 91, column: 87, scope: !4670)
!4780 = !DILocation(line: 91, column: 88, scope: !4670)
!4781 = !DILocation(line: 91, column: 81, scope: !4670)
!4782 = !DILocation(line: 91, column: 93, scope: !4670)
!4783 = !DILocation(line: 91, column: 78, scope: !4670)
!4784 = !DILocalVariable(name: "a7", scope: !4670, file: !21, line: 92, type: !468)
!4785 = !DILocation(line: 92, column: 19, scope: !4670)
!4786 = !DILocation(line: 92, column: 30, scope: !4670)
!4787 = !DILocation(line: 92, column: 31, scope: !4670)
!4788 = !DILocation(line: 92, column: 24, scope: !4670)
!4789 = !DILocation(line: 92, column: 55, scope: !4670)
!4790 = !DILocation(line: 92, column: 56, scope: !4670)
!4791 = !DILocation(line: 92, column: 49, scope: !4670)
!4792 = !DILocation(line: 92, column: 37, scope: !4670)
!4793 = !DILocation(line: 92, column: 70, scope: !4670)
!4794 = !DILocation(line: 92, column: 71, scope: !4670)
!4795 = !DILocation(line: 92, column: 64, scope: !4670)
!4796 = !DILocation(line: 92, column: 62, scope: !4670)
!4797 = !DILocation(line: 92, column: 86, scope: !4670)
!4798 = !DILocation(line: 92, column: 87, scope: !4670)
!4799 = !DILocation(line: 92, column: 80, scope: !4670)
!4800 = !DILocation(line: 92, column: 92, scope: !4670)
!4801 = !DILocation(line: 92, column: 77, scope: !4670)
!4802 = !DILocalVariable(name: "b1", scope: !4670, file: !21, line: 94, type: !468)
!4803 = !DILocation(line: 94, column: 19, scope: !4670)
!4804 = !DILocation(line: 94, column: 25, scope: !4670)
!4805 = !DILocation(line: 94, column: 27, scope: !4670)
!4806 = !DILocation(line: 94, column: 44, scope: !4670)
!4807 = !DILocation(line: 94, column: 32, scope: !4670)
!4808 = !DILocalVariable(name: "b3", scope: !4670, file: !21, line: 95, type: !468)
!4809 = !DILocation(line: 95, column: 19, scope: !4670)
!4810 = !DILocation(line: 95, column: 34, scope: !4670)
!4811 = !DILocation(line: 95, column: 40, scope: !4670)
!4812 = !DILocation(line: 95, column: 42, scope: !4670)
!4813 = !DILocation(line: 95, column: 37, scope: !4670)
!4814 = !DILocalVariable(name: "b5", scope: !4670, file: !21, line: 96, type: !468)
!4815 = !DILocation(line: 96, column: 19, scope: !4670)
!4816 = !DILocation(line: 96, column: 25, scope: !4670)
!4817 = !DILocation(line: 96, column: 27, scope: !4670)
!4818 = !DILocation(line: 96, column: 44, scope: !4670)
!4819 = !DILocation(line: 96, column: 32, scope: !4670)
!4820 = !DILocalVariable(name: "b7", scope: !4670, file: !21, line: 97, type: !468)
!4821 = !DILocation(line: 97, column: 19, scope: !4670)
!4822 = !DILocation(line: 97, column: 34, scope: !4670)
!4823 = !DILocation(line: 97, column: 40, scope: !4670)
!4824 = !DILocation(line: 97, column: 42, scope: !4670)
!4825 = !DILocation(line: 97, column: 37, scope: !4670)
!4826 = !DILocation(line: 99, column: 24, scope: !4670)
!4827 = !DILocation(line: 99, column: 29, scope: !4670)
!4828 = !DILocation(line: 99, column: 27, scope: !4670)
!4829 = !DILocation(line: 99, column: 15, scope: !4670)
!4830 = !DILocation(line: 99, column: 16, scope: !4670)
!4831 = !DILocation(line: 99, column: 9, scope: !4670)
!4832 = !DILocation(line: 99, column: 22, scope: !4670)
!4833 = !DILocation(line: 100, column: 24, scope: !4670)
!4834 = !DILocation(line: 100, column: 29, scope: !4670)
!4835 = !DILocation(line: 100, column: 27, scope: !4670)
!4836 = !DILocation(line: 100, column: 15, scope: !4670)
!4837 = !DILocation(line: 100, column: 16, scope: !4670)
!4838 = !DILocation(line: 100, column: 9, scope: !4670)
!4839 = !DILocation(line: 100, column: 22, scope: !4670)
!4840 = !DILocation(line: 101, column: 24, scope: !4670)
!4841 = !DILocation(line: 101, column: 29, scope: !4670)
!4842 = !DILocation(line: 101, column: 27, scope: !4670)
!4843 = !DILocation(line: 101, column: 15, scope: !4670)
!4844 = !DILocation(line: 101, column: 16, scope: !4670)
!4845 = !DILocation(line: 101, column: 9, scope: !4670)
!4846 = !DILocation(line: 101, column: 22, scope: !4670)
!4847 = !DILocation(line: 102, column: 24, scope: !4670)
!4848 = !DILocation(line: 102, column: 29, scope: !4670)
!4849 = !DILocation(line: 102, column: 27, scope: !4670)
!4850 = !DILocation(line: 102, column: 15, scope: !4670)
!4851 = !DILocation(line: 102, column: 16, scope: !4670)
!4852 = !DILocation(line: 102, column: 9, scope: !4670)
!4853 = !DILocation(line: 102, column: 22, scope: !4670)
!4854 = !DILocation(line: 103, column: 24, scope: !4670)
!4855 = !DILocation(line: 103, column: 29, scope: !4670)
!4856 = !DILocation(line: 103, column: 27, scope: !4670)
!4857 = !DILocation(line: 103, column: 15, scope: !4670)
!4858 = !DILocation(line: 103, column: 16, scope: !4670)
!4859 = !DILocation(line: 103, column: 9, scope: !4670)
!4860 = !DILocation(line: 103, column: 22, scope: !4670)
!4861 = !DILocation(line: 104, column: 24, scope: !4670)
!4862 = !DILocation(line: 104, column: 29, scope: !4670)
!4863 = !DILocation(line: 104, column: 27, scope: !4670)
!4864 = !DILocation(line: 104, column: 15, scope: !4670)
!4865 = !DILocation(line: 104, column: 16, scope: !4670)
!4866 = !DILocation(line: 104, column: 9, scope: !4670)
!4867 = !DILocation(line: 104, column: 22, scope: !4670)
!4868 = !DILocation(line: 105, column: 24, scope: !4670)
!4869 = !DILocation(line: 105, column: 29, scope: !4670)
!4870 = !DILocation(line: 105, column: 27, scope: !4670)
!4871 = !DILocation(line: 105, column: 15, scope: !4670)
!4872 = !DILocation(line: 105, column: 16, scope: !4670)
!4873 = !DILocation(line: 105, column: 9, scope: !4670)
!4874 = !DILocation(line: 105, column: 22, scope: !4670)
!4875 = !DILocation(line: 106, column: 24, scope: !4670)
!4876 = !DILocation(line: 106, column: 29, scope: !4670)
!4877 = !DILocation(line: 106, column: 27, scope: !4670)
!4878 = !DILocation(line: 106, column: 15, scope: !4670)
!4879 = !DILocation(line: 106, column: 16, scope: !4670)
!4880 = !DILocation(line: 106, column: 9, scope: !4670)
!4881 = !DILocation(line: 106, column: 22, scope: !4670)
!4882 = !DILocation(line: 107, column: 5, scope: !4670)
!4883 = !DILocation(line: 77, column: 25, scope: !4884)
!4884 = !DILexicalBlockFile(scope: !4666, file: !21, discriminator: 2)
!4885 = !DILocation(line: 77, column: 5, scope: !4884)
!4886 = distinct !{!4886, !4887}
!4887 = !DILocation(line: 77, column: 5, scope: !4614)
!4888 = !DILocation(line: 108, column: 12, scope: !4619)
!4889 = !DILocation(line: 108, column: 10, scope: !4619)
!4890 = !DILocation(line: 108, column: 17, scope: !4891)
!4891 = !DILexicalBlockFile(scope: !4618, file: !21, discriminator: 1)
!4892 = !DILocation(line: 108, column: 19, scope: !4891)
!4893 = !DILocation(line: 108, column: 5, scope: !4891)
!4894 = !DILocalVariable(name: "a0", scope: !4617, file: !21, line: 110, type: !106)
!4895 = !DILocation(line: 110, column: 24, scope: !4617)
!4896 = !DILocation(line: 110, column: 37, scope: !4617)
!4897 = !DILocation(line: 110, column: 38, scope: !4617)
!4898 = !DILocation(line: 110, column: 36, scope: !4617)
!4899 = !DILocation(line: 110, column: 29, scope: !4617)
!4900 = !DILocation(line: 110, column: 62, scope: !4617)
!4901 = !DILocation(line: 110, column: 63, scope: !4617)
!4902 = !DILocation(line: 110, column: 61, scope: !4617)
!4903 = !DILocation(line: 110, column: 54, scope: !4617)
!4904 = !DILocation(line: 110, column: 42, scope: !4617)
!4905 = !DILocalVariable(name: "a2", scope: !4617, file: !21, line: 111, type: !106)
!4906 = !DILocation(line: 111, column: 24, scope: !4617)
!4907 = !DILocation(line: 111, column: 37, scope: !4617)
!4908 = !DILocation(line: 111, column: 38, scope: !4617)
!4909 = !DILocation(line: 111, column: 36, scope: !4617)
!4910 = !DILocation(line: 111, column: 29, scope: !4617)
!4911 = !DILocation(line: 111, column: 62, scope: !4617)
!4912 = !DILocation(line: 111, column: 63, scope: !4617)
!4913 = !DILocation(line: 111, column: 61, scope: !4617)
!4914 = !DILocation(line: 111, column: 54, scope: !4617)
!4915 = !DILocation(line: 111, column: 42, scope: !4617)
!4916 = !DILocalVariable(name: "a4", scope: !4617, file: !21, line: 112, type: !106)
!4917 = !DILocation(line: 112, column: 24, scope: !4617)
!4918 = !DILocation(line: 112, column: 38, scope: !4617)
!4919 = !DILocation(line: 112, column: 39, scope: !4617)
!4920 = !DILocation(line: 112, column: 37, scope: !4617)
!4921 = !DILocation(line: 112, column: 30, scope: !4617)
!4922 = !DILocation(line: 112, column: 42, scope: !4617)
!4923 = !DILocation(line: 112, column: 67, scope: !4617)
!4924 = !DILocation(line: 112, column: 68, scope: !4617)
!4925 = !DILocation(line: 112, column: 66, scope: !4617)
!4926 = !DILocation(line: 112, column: 59, scope: !4617)
!4927 = !DILocation(line: 112, column: 47, scope: !4617)
!4928 = !DILocalVariable(name: "a6", scope: !4617, file: !21, line: 113, type: !106)
!4929 = !DILocation(line: 113, column: 24, scope: !4617)
!4930 = !DILocation(line: 113, column: 38, scope: !4617)
!4931 = !DILocation(line: 113, column: 39, scope: !4617)
!4932 = !DILocation(line: 113, column: 37, scope: !4617)
!4933 = !DILocation(line: 113, column: 30, scope: !4617)
!4934 = !DILocation(line: 113, column: 42, scope: !4617)
!4935 = !DILocation(line: 113, column: 67, scope: !4617)
!4936 = !DILocation(line: 113, column: 68, scope: !4617)
!4937 = !DILocation(line: 113, column: 66, scope: !4617)
!4938 = !DILocation(line: 113, column: 59, scope: !4617)
!4939 = !DILocation(line: 113, column: 47, scope: !4617)
!4940 = !DILocalVariable(name: "b0", scope: !4617, file: !21, line: 115, type: !106)
!4941 = !DILocation(line: 115, column: 24, scope: !4617)
!4942 = !DILocation(line: 115, column: 29, scope: !4617)
!4943 = !DILocation(line: 115, column: 34, scope: !4617)
!4944 = !DILocation(line: 115, column: 32, scope: !4617)
!4945 = !DILocalVariable(name: "b2", scope: !4617, file: !21, line: 116, type: !106)
!4946 = !DILocation(line: 116, column: 24, scope: !4617)
!4947 = !DILocation(line: 116, column: 29, scope: !4617)
!4948 = !DILocation(line: 116, column: 34, scope: !4617)
!4949 = !DILocation(line: 116, column: 32, scope: !4617)
!4950 = !DILocalVariable(name: "b4", scope: !4617, file: !21, line: 117, type: !106)
!4951 = !DILocation(line: 117, column: 24, scope: !4617)
!4952 = !DILocation(line: 117, column: 29, scope: !4617)
!4953 = !DILocation(line: 117, column: 34, scope: !4617)
!4954 = !DILocation(line: 117, column: 32, scope: !4617)
!4955 = !DILocalVariable(name: "b6", scope: !4617, file: !21, line: 118, type: !106)
!4956 = !DILocation(line: 118, column: 24, scope: !4617)
!4957 = !DILocation(line: 118, column: 29, scope: !4617)
!4958 = !DILocation(line: 118, column: 34, scope: !4617)
!4959 = !DILocation(line: 118, column: 32, scope: !4617)
!4960 = !DILocalVariable(name: "a1", scope: !4617, file: !21, line: 120, type: !468)
!4961 = !DILocation(line: 120, column: 19, scope: !4617)
!4962 = !DILocation(line: 120, column: 43, scope: !4617)
!4963 = !DILocation(line: 120, column: 44, scope: !4617)
!4964 = !DILocation(line: 120, column: 42, scope: !4617)
!4965 = !DILocation(line: 120, column: 35, scope: !4617)
!4966 = !DILocation(line: 120, column: 24, scope: !4617)
!4967 = !DILocation(line: 120, column: 58, scope: !4617)
!4968 = !DILocation(line: 120, column: 59, scope: !4617)
!4969 = !DILocation(line: 120, column: 57, scope: !4617)
!4970 = !DILocation(line: 120, column: 50, scope: !4617)
!4971 = !DILocation(line: 120, column: 48, scope: !4617)
!4972 = !DILocation(line: 120, column: 73, scope: !4617)
!4973 = !DILocation(line: 120, column: 74, scope: !4617)
!4974 = !DILocation(line: 120, column: 72, scope: !4617)
!4975 = !DILocation(line: 120, column: 65, scope: !4617)
!4976 = !DILocation(line: 120, column: 63, scope: !4617)
!4977 = !DILocation(line: 120, column: 89, scope: !4617)
!4978 = !DILocation(line: 120, column: 90, scope: !4617)
!4979 = !DILocation(line: 120, column: 88, scope: !4617)
!4980 = !DILocation(line: 120, column: 81, scope: !4617)
!4981 = !DILocation(line: 120, column: 93, scope: !4617)
!4982 = !DILocation(line: 120, column: 78, scope: !4617)
!4983 = !DILocalVariable(name: "a3", scope: !4617, file: !21, line: 121, type: !468)
!4984 = !DILocation(line: 121, column: 19, scope: !4617)
!4985 = !DILocation(line: 121, column: 42, scope: !4617)
!4986 = !DILocation(line: 121, column: 43, scope: !4617)
!4987 = !DILocation(line: 121, column: 41, scope: !4617)
!4988 = !DILocation(line: 121, column: 34, scope: !4617)
!4989 = !DILocation(line: 121, column: 57, scope: !4617)
!4990 = !DILocation(line: 121, column: 58, scope: !4617)
!4991 = !DILocation(line: 121, column: 56, scope: !4617)
!4992 = !DILocation(line: 121, column: 49, scope: !4617)
!4993 = !DILocation(line: 121, column: 47, scope: !4617)
!4994 = !DILocation(line: 121, column: 72, scope: !4617)
!4995 = !DILocation(line: 121, column: 73, scope: !4617)
!4996 = !DILocation(line: 121, column: 71, scope: !4617)
!4997 = !DILocation(line: 121, column: 64, scope: !4617)
!4998 = !DILocation(line: 121, column: 62, scope: !4617)
!4999 = !DILocation(line: 121, column: 88, scope: !4617)
!5000 = !DILocation(line: 121, column: 89, scope: !4617)
!5001 = !DILocation(line: 121, column: 87, scope: !4617)
!5002 = !DILocation(line: 121, column: 80, scope: !4617)
!5003 = !DILocation(line: 121, column: 92, scope: !4617)
!5004 = !DILocation(line: 121, column: 77, scope: !4617)
!5005 = !DILocalVariable(name: "a5", scope: !4617, file: !21, line: 122, type: !468)
!5006 = !DILocation(line: 122, column: 19, scope: !4617)
!5007 = !DILocation(line: 122, column: 43, scope: !4617)
!5008 = !DILocation(line: 122, column: 44, scope: !4617)
!5009 = !DILocation(line: 122, column: 42, scope: !4617)
!5010 = !DILocation(line: 122, column: 35, scope: !4617)
!5011 = !DILocation(line: 122, column: 24, scope: !4617)
!5012 = !DILocation(line: 122, column: 58, scope: !4617)
!5013 = !DILocation(line: 122, column: 59, scope: !4617)
!5014 = !DILocation(line: 122, column: 57, scope: !4617)
!5015 = !DILocation(line: 122, column: 50, scope: !4617)
!5016 = !DILocation(line: 122, column: 48, scope: !4617)
!5017 = !DILocation(line: 122, column: 73, scope: !4617)
!5018 = !DILocation(line: 122, column: 74, scope: !4617)
!5019 = !DILocation(line: 122, column: 72, scope: !4617)
!5020 = !DILocation(line: 122, column: 65, scope: !4617)
!5021 = !DILocation(line: 122, column: 63, scope: !4617)
!5022 = !DILocation(line: 122, column: 89, scope: !4617)
!5023 = !DILocation(line: 122, column: 90, scope: !4617)
!5024 = !DILocation(line: 122, column: 88, scope: !4617)
!5025 = !DILocation(line: 122, column: 81, scope: !4617)
!5026 = !DILocation(line: 122, column: 93, scope: !4617)
!5027 = !DILocation(line: 122, column: 78, scope: !4617)
!5028 = !DILocalVariable(name: "a7", scope: !4617, file: !21, line: 123, type: !468)
!5029 = !DILocation(line: 123, column: 19, scope: !4617)
!5030 = !DILocation(line: 123, column: 42, scope: !4617)
!5031 = !DILocation(line: 123, column: 43, scope: !4617)
!5032 = !DILocation(line: 123, column: 41, scope: !4617)
!5033 = !DILocation(line: 123, column: 34, scope: !4617)
!5034 = !DILocation(line: 123, column: 57, scope: !4617)
!5035 = !DILocation(line: 123, column: 58, scope: !4617)
!5036 = !DILocation(line: 123, column: 56, scope: !4617)
!5037 = !DILocation(line: 123, column: 49, scope: !4617)
!5038 = !DILocation(line: 123, column: 47, scope: !4617)
!5039 = !DILocation(line: 123, column: 72, scope: !4617)
!5040 = !DILocation(line: 123, column: 73, scope: !4617)
!5041 = !DILocation(line: 123, column: 71, scope: !4617)
!5042 = !DILocation(line: 123, column: 64, scope: !4617)
!5043 = !DILocation(line: 123, column: 62, scope: !4617)
!5044 = !DILocation(line: 123, column: 88, scope: !4617)
!5045 = !DILocation(line: 123, column: 89, scope: !4617)
!5046 = !DILocation(line: 123, column: 87, scope: !4617)
!5047 = !DILocation(line: 123, column: 80, scope: !4617)
!5048 = !DILocation(line: 123, column: 92, scope: !4617)
!5049 = !DILocation(line: 123, column: 77, scope: !4617)
!5050 = !DILocalVariable(name: "b1", scope: !4617, file: !21, line: 125, type: !106)
!5051 = !DILocation(line: 125, column: 24, scope: !4617)
!5052 = !DILocation(line: 125, column: 30, scope: !4617)
!5053 = !DILocation(line: 125, column: 32, scope: !4617)
!5054 = !DILocation(line: 125, column: 49, scope: !4617)
!5055 = !DILocation(line: 125, column: 37, scope: !4617)
!5056 = !DILocalVariable(name: "b3", scope: !4617, file: !21, line: 126, type: !106)
!5057 = !DILocation(line: 126, column: 24, scope: !4617)
!5058 = !DILocation(line: 126, column: 39, scope: !4617)
!5059 = !DILocation(line: 126, column: 45, scope: !4617)
!5060 = !DILocation(line: 126, column: 47, scope: !4617)
!5061 = !DILocation(line: 126, column: 42, scope: !4617)
!5062 = !DILocalVariable(name: "b5", scope: !4617, file: !21, line: 127, type: !106)
!5063 = !DILocation(line: 127, column: 24, scope: !4617)
!5064 = !DILocation(line: 127, column: 30, scope: !4617)
!5065 = !DILocation(line: 127, column: 32, scope: !4617)
!5066 = !DILocation(line: 127, column: 49, scope: !4617)
!5067 = !DILocation(line: 127, column: 37, scope: !4617)
!5068 = !DILocalVariable(name: "b7", scope: !4617, file: !21, line: 128, type: !106)
!5069 = !DILocation(line: 128, column: 24, scope: !4617)
!5070 = !DILocation(line: 128, column: 39, scope: !4617)
!5071 = !DILocation(line: 128, column: 45, scope: !4617)
!5072 = !DILocation(line: 128, column: 47, scope: !4617)
!5073 = !DILocation(line: 128, column: 42, scope: !4617)
!5074 = !DILocation(line: 130, column: 50, scope: !4617)
!5075 = !DILocation(line: 130, column: 56, scope: !4617)
!5076 = !DILocation(line: 130, column: 55, scope: !4617)
!5077 = !DILocation(line: 130, column: 52, scope: !4617)
!5078 = !DILocation(line: 130, column: 46, scope: !4617)
!5079 = !DILocation(line: 130, column: 73, scope: !4617)
!5080 = !DILocation(line: 130, column: 78, scope: !4617)
!5081 = !DILocation(line: 130, column: 76, scope: !4617)
!5082 = !DILocation(line: 130, column: 82, scope: !4617)
!5083 = !DILocation(line: 130, column: 64, scope: !4617)
!5084 = !DILocation(line: 130, column: 29, scope: !4617)
!5085 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !4640)
!5086 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !4640)
!5087 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !4640)
!5088 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !4640)
!5089 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !4640)
!5090 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !4640)
!5091 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !4640)
!5092 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !4640)
!5093 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !4640)
!5094 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !4640)
!5095 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !4640)
!5096 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !4640)
!5097 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !4640)
!5098 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !4640)
!5099 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !4640)
!5100 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !4640)
!5101 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !4640)
!5102 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !4640)
!5103 = !DILocation(line: 130, column: 13, scope: !4617)
!5104 = !DILocation(line: 130, column: 19, scope: !4617)
!5105 = !DILocation(line: 130, column: 18, scope: !4617)
!5106 = !DILocation(line: 130, column: 15, scope: !4617)
!5107 = !DILocation(line: 130, column: 9, scope: !4617)
!5108 = !DILocation(line: 130, column: 27, scope: !4617)
!5109 = !DILocation(line: 131, column: 50, scope: !4617)
!5110 = !DILocation(line: 131, column: 56, scope: !4617)
!5111 = !DILocation(line: 131, column: 55, scope: !4617)
!5112 = !DILocation(line: 131, column: 52, scope: !4617)
!5113 = !DILocation(line: 131, column: 46, scope: !4617)
!5114 = !DILocation(line: 131, column: 73, scope: !4617)
!5115 = !DILocation(line: 131, column: 78, scope: !4617)
!5116 = !DILocation(line: 131, column: 76, scope: !4617)
!5117 = !DILocation(line: 131, column: 82, scope: !4617)
!5118 = !DILocation(line: 131, column: 64, scope: !4617)
!5119 = !DILocation(line: 131, column: 29, scope: !4617)
!5120 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !4616)
!5121 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !4616)
!5122 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !4616)
!5123 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !4616)
!5124 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !4616)
!5125 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !4616)
!5126 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !4616)
!5127 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !4616)
!5128 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !4616)
!5129 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !4616)
!5130 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !4616)
!5131 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !4616)
!5132 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !4616)
!5133 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !4616)
!5134 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !4616)
!5135 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !4616)
!5136 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !4616)
!5137 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !4616)
!5138 = !DILocation(line: 131, column: 13, scope: !4617)
!5139 = !DILocation(line: 131, column: 19, scope: !4617)
!5140 = !DILocation(line: 131, column: 18, scope: !4617)
!5141 = !DILocation(line: 131, column: 15, scope: !4617)
!5142 = !DILocation(line: 131, column: 9, scope: !4617)
!5143 = !DILocation(line: 131, column: 27, scope: !4617)
!5144 = !DILocation(line: 132, column: 50, scope: !4617)
!5145 = !DILocation(line: 132, column: 56, scope: !4617)
!5146 = !DILocation(line: 132, column: 55, scope: !4617)
!5147 = !DILocation(line: 132, column: 52, scope: !4617)
!5148 = !DILocation(line: 132, column: 46, scope: !4617)
!5149 = !DILocation(line: 132, column: 73, scope: !4617)
!5150 = !DILocation(line: 132, column: 78, scope: !4617)
!5151 = !DILocation(line: 132, column: 76, scope: !4617)
!5152 = !DILocation(line: 132, column: 82, scope: !4617)
!5153 = !DILocation(line: 132, column: 64, scope: !4617)
!5154 = !DILocation(line: 132, column: 29, scope: !4617)
!5155 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !4622)
!5156 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !4622)
!5157 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !4622)
!5158 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !4622)
!5159 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !4622)
!5160 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !4622)
!5161 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !4622)
!5162 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !4622)
!5163 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !4622)
!5164 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !4622)
!5165 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !4622)
!5166 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !4622)
!5167 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !4622)
!5168 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !4622)
!5169 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !4622)
!5170 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !4622)
!5171 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !4622)
!5172 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !4622)
!5173 = !DILocation(line: 132, column: 13, scope: !4617)
!5174 = !DILocation(line: 132, column: 19, scope: !4617)
!5175 = !DILocation(line: 132, column: 18, scope: !4617)
!5176 = !DILocation(line: 132, column: 15, scope: !4617)
!5177 = !DILocation(line: 132, column: 9, scope: !4617)
!5178 = !DILocation(line: 132, column: 27, scope: !4617)
!5179 = !DILocation(line: 133, column: 50, scope: !4617)
!5180 = !DILocation(line: 133, column: 56, scope: !4617)
!5181 = !DILocation(line: 133, column: 55, scope: !4617)
!5182 = !DILocation(line: 133, column: 52, scope: !4617)
!5183 = !DILocation(line: 133, column: 46, scope: !4617)
!5184 = !DILocation(line: 133, column: 73, scope: !4617)
!5185 = !DILocation(line: 133, column: 78, scope: !4617)
!5186 = !DILocation(line: 133, column: 76, scope: !4617)
!5187 = !DILocation(line: 133, column: 82, scope: !4617)
!5188 = !DILocation(line: 133, column: 64, scope: !4617)
!5189 = !DILocation(line: 133, column: 29, scope: !4617)
!5190 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !4625)
!5191 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !4625)
!5192 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !4625)
!5193 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !4625)
!5194 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !4625)
!5195 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !4625)
!5196 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !4625)
!5197 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !4625)
!5198 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !4625)
!5199 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !4625)
!5200 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !4625)
!5201 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !4625)
!5202 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !4625)
!5203 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !4625)
!5204 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !4625)
!5205 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !4625)
!5206 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !4625)
!5207 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !4625)
!5208 = !DILocation(line: 133, column: 13, scope: !4617)
!5209 = !DILocation(line: 133, column: 19, scope: !4617)
!5210 = !DILocation(line: 133, column: 18, scope: !4617)
!5211 = !DILocation(line: 133, column: 15, scope: !4617)
!5212 = !DILocation(line: 133, column: 9, scope: !4617)
!5213 = !DILocation(line: 133, column: 27, scope: !4617)
!5214 = !DILocation(line: 134, column: 50, scope: !4617)
!5215 = !DILocation(line: 134, column: 56, scope: !4617)
!5216 = !DILocation(line: 134, column: 55, scope: !4617)
!5217 = !DILocation(line: 134, column: 52, scope: !4617)
!5218 = !DILocation(line: 134, column: 46, scope: !4617)
!5219 = !DILocation(line: 134, column: 73, scope: !4617)
!5220 = !DILocation(line: 134, column: 78, scope: !4617)
!5221 = !DILocation(line: 134, column: 76, scope: !4617)
!5222 = !DILocation(line: 134, column: 82, scope: !4617)
!5223 = !DILocation(line: 134, column: 64, scope: !4617)
!5224 = !DILocation(line: 134, column: 29, scope: !4617)
!5225 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !4628)
!5226 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !4628)
!5227 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !4628)
!5228 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !4628)
!5229 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !4628)
!5230 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !4628)
!5231 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !4628)
!5232 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !4628)
!5233 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !4628)
!5234 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !4628)
!5235 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !4628)
!5236 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !4628)
!5237 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !4628)
!5238 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !4628)
!5239 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !4628)
!5240 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !4628)
!5241 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !4628)
!5242 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !4628)
!5243 = !DILocation(line: 134, column: 13, scope: !4617)
!5244 = !DILocation(line: 134, column: 19, scope: !4617)
!5245 = !DILocation(line: 134, column: 18, scope: !4617)
!5246 = !DILocation(line: 134, column: 15, scope: !4617)
!5247 = !DILocation(line: 134, column: 9, scope: !4617)
!5248 = !DILocation(line: 134, column: 27, scope: !4617)
!5249 = !DILocation(line: 135, column: 50, scope: !4617)
!5250 = !DILocation(line: 135, column: 56, scope: !4617)
!5251 = !DILocation(line: 135, column: 55, scope: !4617)
!5252 = !DILocation(line: 135, column: 52, scope: !4617)
!5253 = !DILocation(line: 135, column: 46, scope: !4617)
!5254 = !DILocation(line: 135, column: 73, scope: !4617)
!5255 = !DILocation(line: 135, column: 78, scope: !4617)
!5256 = !DILocation(line: 135, column: 76, scope: !4617)
!5257 = !DILocation(line: 135, column: 82, scope: !4617)
!5258 = !DILocation(line: 135, column: 64, scope: !4617)
!5259 = !DILocation(line: 135, column: 29, scope: !4617)
!5260 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !4631)
!5261 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !4631)
!5262 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !4631)
!5263 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !4631)
!5264 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !4631)
!5265 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !4631)
!5266 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !4631)
!5267 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !4631)
!5268 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !4631)
!5269 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !4631)
!5270 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !4631)
!5271 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !4631)
!5272 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !4631)
!5273 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !4631)
!5274 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !4631)
!5275 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !4631)
!5276 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !4631)
!5277 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !4631)
!5278 = !DILocation(line: 135, column: 13, scope: !4617)
!5279 = !DILocation(line: 135, column: 19, scope: !4617)
!5280 = !DILocation(line: 135, column: 18, scope: !4617)
!5281 = !DILocation(line: 135, column: 15, scope: !4617)
!5282 = !DILocation(line: 135, column: 9, scope: !4617)
!5283 = !DILocation(line: 135, column: 27, scope: !4617)
!5284 = !DILocation(line: 136, column: 50, scope: !4617)
!5285 = !DILocation(line: 136, column: 56, scope: !4617)
!5286 = !DILocation(line: 136, column: 55, scope: !4617)
!5287 = !DILocation(line: 136, column: 52, scope: !4617)
!5288 = !DILocation(line: 136, column: 46, scope: !4617)
!5289 = !DILocation(line: 136, column: 73, scope: !4617)
!5290 = !DILocation(line: 136, column: 78, scope: !4617)
!5291 = !DILocation(line: 136, column: 76, scope: !4617)
!5292 = !DILocation(line: 136, column: 82, scope: !4617)
!5293 = !DILocation(line: 136, column: 64, scope: !4617)
!5294 = !DILocation(line: 136, column: 29, scope: !4617)
!5295 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !4634)
!5296 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !4634)
!5297 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !4634)
!5298 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !4634)
!5299 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !4634)
!5300 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !4634)
!5301 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !4634)
!5302 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !4634)
!5303 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !4634)
!5304 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !4634)
!5305 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !4634)
!5306 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !4634)
!5307 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !4634)
!5308 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !4634)
!5309 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !4634)
!5310 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !4634)
!5311 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !4634)
!5312 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !4634)
!5313 = !DILocation(line: 136, column: 13, scope: !4617)
!5314 = !DILocation(line: 136, column: 19, scope: !4617)
!5315 = !DILocation(line: 136, column: 18, scope: !4617)
!5316 = !DILocation(line: 136, column: 15, scope: !4617)
!5317 = !DILocation(line: 136, column: 9, scope: !4617)
!5318 = !DILocation(line: 136, column: 27, scope: !4617)
!5319 = !DILocation(line: 137, column: 50, scope: !4617)
!5320 = !DILocation(line: 137, column: 56, scope: !4617)
!5321 = !DILocation(line: 137, column: 55, scope: !4617)
!5322 = !DILocation(line: 137, column: 52, scope: !4617)
!5323 = !DILocation(line: 137, column: 46, scope: !4617)
!5324 = !DILocation(line: 137, column: 73, scope: !4617)
!5325 = !DILocation(line: 137, column: 78, scope: !4617)
!5326 = !DILocation(line: 137, column: 76, scope: !4617)
!5327 = !DILocation(line: 137, column: 82, scope: !4617)
!5328 = !DILocation(line: 137, column: 64, scope: !4617)
!5329 = !DILocation(line: 137, column: 29, scope: !4617)
!5330 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !4637)
!5331 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !4637)
!5332 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !4637)
!5333 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !4637)
!5334 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !4637)
!5335 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !4637)
!5336 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !4637)
!5337 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !4637)
!5338 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !4637)
!5339 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !4637)
!5340 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !4637)
!5341 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !4637)
!5342 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !4637)
!5343 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !4637)
!5344 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !4637)
!5345 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !4637)
!5346 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !4637)
!5347 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !4637)
!5348 = !DILocation(line: 137, column: 13, scope: !4617)
!5349 = !DILocation(line: 137, column: 19, scope: !4617)
!5350 = !DILocation(line: 137, column: 18, scope: !4617)
!5351 = !DILocation(line: 137, column: 15, scope: !4617)
!5352 = !DILocation(line: 137, column: 9, scope: !4617)
!5353 = !DILocation(line: 137, column: 27, scope: !4617)
!5354 = !DILocation(line: 138, column: 5, scope: !4617)
!5355 = !DILocation(line: 108, column: 25, scope: !5356)
!5356 = !DILexicalBlockFile(scope: !4618, file: !21, discriminator: 2)
!5357 = !DILocation(line: 108, column: 5, scope: !5356)
!5358 = distinct !{!5358, !5359}
!5359 = !DILocation(line: 108, column: 5, scope: !4614)
!5360 = !DILocation(line: 140, column: 12, scope: !4614)
!5361 = !DILocation(line: 140, column: 5, scope: !4614)
!5362 = !DILocation(line: 141, column: 1, scope: !4614)
!5363 = distinct !DISubprogram(name: "ff_h264_idct_dc_add_10_c", scope: !21, file: !21, line: 144, type: !60, isLocal: false, isDefinition: true, scopeLine: 144, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!5364 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !5365)
!5365 = distinct !DILocation(line: 154, column: 22, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5367, file: !21, line: 153, column: 9)
!5367 = distinct !DILexicalBlock(scope: !5368, file: !21, line: 153, column: 9)
!5368 = distinct !DILexicalBlock(scope: !5369, file: !21, line: 152, column: 5)
!5369 = distinct !DILexicalBlock(scope: !5370, file: !21, line: 151, column: 5)
!5370 = distinct !DILexicalBlock(scope: !5363, file: !21, line: 151, column: 5)
!5371 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !5365)
!5372 = !DILocalVariable(name: "_dst", arg: 1, scope: !5363, file: !21, line: 144, type: !4)
!5373 = !DILocation(line: 144, column: 40, scope: !5363)
!5374 = !DILocalVariable(name: "_block", arg: 2, scope: !5363, file: !21, line: 144, type: !8)
!5375 = !DILocation(line: 144, column: 55, scope: !5363)
!5376 = !DILocalVariable(name: "stride", arg: 3, scope: !5363, file: !21, line: 144, type: !12)
!5377 = !DILocation(line: 144, column: 67, scope: !5363)
!5378 = !DILocalVariable(name: "i", scope: !5363, file: !21, line: 145, type: !12)
!5379 = !DILocation(line: 145, column: 9, scope: !5363)
!5380 = !DILocalVariable(name: "j", scope: !5363, file: !21, line: 145, type: !12)
!5381 = !DILocation(line: 145, column: 12, scope: !5363)
!5382 = !DILocalVariable(name: "dst", scope: !5363, file: !21, line: 146, type: !13)
!5383 = !DILocation(line: 146, column: 15, scope: !5363)
!5384 = !DILocation(line: 146, column: 32, scope: !5363)
!5385 = !DILocation(line: 146, column: 21, scope: !5363)
!5386 = !DILocalVariable(name: "block", scope: !5363, file: !21, line: 147, type: !16)
!5387 = !DILocation(line: 147, column: 14, scope: !5363)
!5388 = !DILocation(line: 147, column: 32, scope: !5363)
!5389 = !DILocation(line: 147, column: 22, scope: !5363)
!5390 = !DILocalVariable(name: "dc", scope: !5363, file: !21, line: 148, type: !12)
!5391 = !DILocation(line: 148, column: 9, scope: !5363)
!5392 = !DILocation(line: 148, column: 15, scope: !5363)
!5393 = !DILocation(line: 148, column: 24, scope: !5363)
!5394 = !DILocation(line: 148, column: 30, scope: !5363)
!5395 = !DILocation(line: 149, column: 12, scope: !5363)
!5396 = !DILocation(line: 150, column: 5, scope: !5363)
!5397 = !DILocation(line: 150, column: 14, scope: !5363)
!5398 = !DILocation(line: 151, column: 12, scope: !5370)
!5399 = !DILocation(line: 151, column: 10, scope: !5370)
!5400 = !DILocation(line: 151, column: 17, scope: !5401)
!5401 = !DILexicalBlockFile(scope: !5369, file: !21, discriminator: 1)
!5402 = !DILocation(line: 151, column: 19, scope: !5401)
!5403 = !DILocation(line: 151, column: 5, scope: !5401)
!5404 = !DILocation(line: 153, column: 16, scope: !5367)
!5405 = !DILocation(line: 153, column: 14, scope: !5367)
!5406 = !DILocation(line: 153, column: 21, scope: !5407)
!5407 = !DILexicalBlockFile(scope: !5366, file: !21, discriminator: 1)
!5408 = !DILocation(line: 153, column: 23, scope: !5407)
!5409 = !DILocation(line: 153, column: 9, scope: !5407)
!5410 = !DILocation(line: 154, column: 43, scope: !5366)
!5411 = !DILocation(line: 154, column: 39, scope: !5366)
!5412 = !DILocation(line: 154, column: 48, scope: !5366)
!5413 = !DILocation(line: 154, column: 46, scope: !5366)
!5414 = !DILocation(line: 154, column: 22, scope: !5366)
!5415 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !5365)
!5416 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !5365)
!5417 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !5365)
!5418 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !5365)
!5419 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !5365)
!5420 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !5365)
!5421 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !5365)
!5422 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !5365)
!5423 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !5365)
!5424 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !5365)
!5425 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !5365)
!5426 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !5365)
!5427 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !5365)
!5428 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !5365)
!5429 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !5365)
!5430 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !5365)
!5431 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !5365)
!5432 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !5365)
!5433 = !DILocation(line: 154, column: 17, scope: !5366)
!5434 = !DILocation(line: 154, column: 13, scope: !5366)
!5435 = !DILocation(line: 154, column: 20, scope: !5366)
!5436 = !DILocation(line: 153, column: 29, scope: !5437)
!5437 = !DILexicalBlockFile(scope: !5366, file: !21, discriminator: 2)
!5438 = !DILocation(line: 153, column: 9, scope: !5437)
!5439 = distinct !{!5439, !5440}
!5440 = !DILocation(line: 153, column: 9, scope: !5368)
!5441 = !DILocation(line: 155, column: 16, scope: !5368)
!5442 = !DILocation(line: 155, column: 13, scope: !5368)
!5443 = !DILocation(line: 156, column: 5, scope: !5368)
!5444 = !DILocation(line: 151, column: 25, scope: !5445)
!5445 = !DILexicalBlockFile(scope: !5369, file: !21, discriminator: 2)
!5446 = !DILocation(line: 151, column: 5, scope: !5445)
!5447 = distinct !{!5447, !5448}
!5448 = !DILocation(line: 151, column: 5, scope: !5363)
!5449 = !DILocation(line: 157, column: 1, scope: !5363)
!5450 = distinct !DISubprogram(name: "ff_h264_idct8_dc_add_10_c", scope: !21, file: !21, line: 159, type: !60, isLocal: false, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!5451 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !5452)
!5452 = distinct !DILocation(line: 169, column: 22, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5454, file: !21, line: 168, column: 9)
!5454 = distinct !DILexicalBlock(scope: !5455, file: !21, line: 168, column: 9)
!5455 = distinct !DILexicalBlock(scope: !5456, file: !21, line: 167, column: 5)
!5456 = distinct !DILexicalBlock(scope: !5457, file: !21, line: 166, column: 5)
!5457 = distinct !DILexicalBlock(scope: !5450, file: !21, line: 166, column: 5)
!5458 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !5452)
!5459 = !DILocalVariable(name: "_dst", arg: 1, scope: !5450, file: !21, line: 159, type: !4)
!5460 = !DILocation(line: 159, column: 41, scope: !5450)
!5461 = !DILocalVariable(name: "_block", arg: 2, scope: !5450, file: !21, line: 159, type: !8)
!5462 = !DILocation(line: 159, column: 56, scope: !5450)
!5463 = !DILocalVariable(name: "stride", arg: 3, scope: !5450, file: !21, line: 159, type: !12)
!5464 = !DILocation(line: 159, column: 68, scope: !5450)
!5465 = !DILocalVariable(name: "i", scope: !5450, file: !21, line: 160, type: !12)
!5466 = !DILocation(line: 160, column: 9, scope: !5450)
!5467 = !DILocalVariable(name: "j", scope: !5450, file: !21, line: 160, type: !12)
!5468 = !DILocation(line: 160, column: 12, scope: !5450)
!5469 = !DILocalVariable(name: "dst", scope: !5450, file: !21, line: 161, type: !13)
!5470 = !DILocation(line: 161, column: 15, scope: !5450)
!5471 = !DILocation(line: 161, column: 32, scope: !5450)
!5472 = !DILocation(line: 161, column: 21, scope: !5450)
!5473 = !DILocalVariable(name: "block", scope: !5450, file: !21, line: 162, type: !16)
!5474 = !DILocation(line: 162, column: 14, scope: !5450)
!5475 = !DILocation(line: 162, column: 32, scope: !5450)
!5476 = !DILocation(line: 162, column: 22, scope: !5450)
!5477 = !DILocalVariable(name: "dc", scope: !5450, file: !21, line: 163, type: !12)
!5478 = !DILocation(line: 163, column: 9, scope: !5450)
!5479 = !DILocation(line: 163, column: 15, scope: !5450)
!5480 = !DILocation(line: 163, column: 24, scope: !5450)
!5481 = !DILocation(line: 163, column: 30, scope: !5450)
!5482 = !DILocation(line: 164, column: 5, scope: !5450)
!5483 = !DILocation(line: 164, column: 14, scope: !5450)
!5484 = !DILocation(line: 165, column: 12, scope: !5450)
!5485 = !DILocation(line: 166, column: 12, scope: !5457)
!5486 = !DILocation(line: 166, column: 10, scope: !5457)
!5487 = !DILocation(line: 166, column: 17, scope: !5488)
!5488 = !DILexicalBlockFile(scope: !5456, file: !21, discriminator: 1)
!5489 = !DILocation(line: 166, column: 19, scope: !5488)
!5490 = !DILocation(line: 166, column: 5, scope: !5488)
!5491 = !DILocation(line: 168, column: 16, scope: !5454)
!5492 = !DILocation(line: 168, column: 14, scope: !5454)
!5493 = !DILocation(line: 168, column: 21, scope: !5494)
!5494 = !DILexicalBlockFile(scope: !5453, file: !21, discriminator: 1)
!5495 = !DILocation(line: 168, column: 23, scope: !5494)
!5496 = !DILocation(line: 168, column: 9, scope: !5494)
!5497 = !DILocation(line: 169, column: 43, scope: !5453)
!5498 = !DILocation(line: 169, column: 39, scope: !5453)
!5499 = !DILocation(line: 169, column: 48, scope: !5453)
!5500 = !DILocation(line: 169, column: 46, scope: !5453)
!5501 = !DILocation(line: 169, column: 22, scope: !5453)
!5502 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !5452)
!5503 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !5452)
!5504 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !5452)
!5505 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !5452)
!5506 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !5452)
!5507 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !5452)
!5508 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !5452)
!5509 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !5452)
!5510 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !5452)
!5511 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !5452)
!5512 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !5452)
!5513 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !5452)
!5514 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !5452)
!5515 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !5452)
!5516 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !5452)
!5517 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !5452)
!5518 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !5452)
!5519 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !5452)
!5520 = !DILocation(line: 169, column: 17, scope: !5453)
!5521 = !DILocation(line: 169, column: 13, scope: !5453)
!5522 = !DILocation(line: 169, column: 20, scope: !5453)
!5523 = !DILocation(line: 168, column: 29, scope: !5524)
!5524 = !DILexicalBlockFile(scope: !5453, file: !21, discriminator: 2)
!5525 = !DILocation(line: 168, column: 9, scope: !5524)
!5526 = distinct !{!5526, !5527}
!5527 = !DILocation(line: 168, column: 9, scope: !5455)
!5528 = !DILocation(line: 170, column: 16, scope: !5455)
!5529 = !DILocation(line: 170, column: 13, scope: !5455)
!5530 = !DILocation(line: 171, column: 5, scope: !5455)
!5531 = !DILocation(line: 166, column: 25, scope: !5532)
!5532 = !DILexicalBlockFile(scope: !5456, file: !21, discriminator: 2)
!5533 = !DILocation(line: 166, column: 5, scope: !5532)
!5534 = distinct !{!5534, !5535}
!5535 = !DILocation(line: 166, column: 5, scope: !5450)
!5536 = !DILocation(line: 172, column: 1, scope: !5450)
!5537 = distinct !DISubprogram(name: "ff_h264_idct_add16_10_c", scope: !21, file: !21, line: 174, type: !1214, isLocal: false, isDefinition: true, scopeLine: 174, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!5538 = !DILocalVariable(name: "dst", arg: 1, scope: !5537, file: !21, line: 174, type: !4)
!5539 = !DILocation(line: 174, column: 39, scope: !5537)
!5540 = !DILocalVariable(name: "block_offset", arg: 2, scope: !5537, file: !21, line: 174, type: !1216)
!5541 = !DILocation(line: 174, column: 55, scope: !5537)
!5542 = !DILocalVariable(name: "block", arg: 3, scope: !5537, file: !21, line: 174, type: !8)
!5543 = !DILocation(line: 174, column: 78, scope: !5537)
!5544 = !DILocalVariable(name: "stride", arg: 4, scope: !5537, file: !21, line: 174, type: !12)
!5545 = !DILocation(line: 174, column: 89, scope: !5537)
!5546 = !DILocalVariable(name: "nnzc", arg: 5, scope: !5537, file: !21, line: 174, type: !1217)
!5547 = !DILocation(line: 174, column: 111, scope: !5537)
!5548 = !DILocalVariable(name: "i", scope: !5537, file: !21, line: 175, type: !12)
!5549 = !DILocation(line: 175, column: 9, scope: !5537)
!5550 = !DILocation(line: 176, column: 10, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5537, file: !21, line: 176, column: 5)
!5552 = !DILocation(line: 176, column: 9, scope: !5551)
!5553 = !DILocation(line: 176, column: 14, scope: !5554)
!5554 = !DILexicalBlockFile(scope: !5555, file: !21, discriminator: 1)
!5555 = distinct !DILexicalBlock(scope: !5551, file: !21, line: 176, column: 5)
!5556 = !DILocation(line: 176, column: 15, scope: !5554)
!5557 = !DILocation(line: 176, column: 5, scope: !5554)
!5558 = !DILocalVariable(name: "nnz", scope: !5559, file: !21, line: 177, type: !12)
!5559 = distinct !DILexicalBlock(scope: !5555, file: !21, line: 176, column: 24)
!5560 = !DILocation(line: 177, column: 13, scope: !5559)
!5561 = !DILocation(line: 177, column: 31, scope: !5559)
!5562 = !DILocation(line: 177, column: 25, scope: !5559)
!5563 = !DILocation(line: 177, column: 19, scope: !5559)
!5564 = !DILocation(line: 178, column: 12, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5559, file: !21, line: 178, column: 12)
!5566 = !DILocation(line: 178, column: 12, scope: !5559)
!5567 = !DILocation(line: 179, column: 16, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !21, line: 179, column: 16)
!5569 = distinct !DILexicalBlock(scope: !5565, file: !21, line: 178, column: 16)
!5570 = !DILocation(line: 179, column: 19, scope: !5568)
!5571 = !DILocation(line: 179, column: 23, scope: !5568)
!5572 = !DILocation(line: 179, column: 44, scope: !5573)
!5573 = !DILexicalBlockFile(scope: !5568, file: !21, discriminator: 1)
!5574 = !DILocation(line: 179, column: 45, scope: !5573)
!5575 = !DILocation(line: 179, column: 26, scope: !5573)
!5576 = !DILocation(line: 179, column: 37, scope: !5573)
!5577 = !DILocation(line: 179, column: 16, scope: !5573)
!5578 = !DILocation(line: 179, column: 76, scope: !5579)
!5579 = !DILexicalBlockFile(scope: !5568, file: !21, discriminator: 2)
!5580 = !DILocation(line: 179, column: 95, scope: !5579)
!5581 = !DILocation(line: 179, column: 82, scope: !5579)
!5582 = !DILocation(line: 179, column: 80, scope: !5579)
!5583 = !DILocation(line: 179, column: 99, scope: !5579)
!5584 = !DILocation(line: 179, column: 107, scope: !5579)
!5585 = !DILocation(line: 179, column: 108, scope: !5579)
!5586 = !DILocation(line: 179, column: 111, scope: !5579)
!5587 = !DILocation(line: 179, column: 105, scope: !5579)
!5588 = !DILocation(line: 179, column: 130, scope: !5579)
!5589 = !DILocation(line: 179, column: 51, scope: !5579)
!5590 = !DILocation(line: 180, column: 40, scope: !5568)
!5591 = !DILocation(line: 180, column: 59, scope: !5568)
!5592 = !DILocation(line: 180, column: 46, scope: !5568)
!5593 = !DILocation(line: 180, column: 44, scope: !5568)
!5594 = !DILocation(line: 180, column: 63, scope: !5568)
!5595 = !DILocation(line: 180, column: 71, scope: !5568)
!5596 = !DILocation(line: 180, column: 72, scope: !5568)
!5597 = !DILocation(line: 180, column: 75, scope: !5568)
!5598 = !DILocation(line: 180, column: 69, scope: !5568)
!5599 = !DILocation(line: 180, column: 94, scope: !5568)
!5600 = !DILocation(line: 180, column: 18, scope: !5568)
!5601 = !DILocation(line: 181, column: 9, scope: !5569)
!5602 = !DILocation(line: 182, column: 5, scope: !5559)
!5603 = !DILocation(line: 176, column: 21, scope: !5604)
!5604 = !DILexicalBlockFile(scope: !5555, file: !21, discriminator: 2)
!5605 = !DILocation(line: 176, column: 5, scope: !5604)
!5606 = distinct !{!5606, !5607}
!5607 = !DILocation(line: 176, column: 5, scope: !5537)
!5608 = !DILocation(line: 183, column: 1, scope: !5537)
!5609 = distinct !DISubprogram(name: "ff_h264_idct_add16intra_10_c", scope: !21, file: !21, line: 185, type: !1214, isLocal: false, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!5610 = !DILocalVariable(name: "dst", arg: 1, scope: !5609, file: !21, line: 185, type: !4)
!5611 = !DILocation(line: 185, column: 44, scope: !5609)
!5612 = !DILocalVariable(name: "block_offset", arg: 2, scope: !5609, file: !21, line: 185, type: !1216)
!5613 = !DILocation(line: 185, column: 60, scope: !5609)
!5614 = !DILocalVariable(name: "block", arg: 3, scope: !5609, file: !21, line: 185, type: !8)
!5615 = !DILocation(line: 185, column: 83, scope: !5609)
!5616 = !DILocalVariable(name: "stride", arg: 4, scope: !5609, file: !21, line: 185, type: !12)
!5617 = !DILocation(line: 185, column: 94, scope: !5609)
!5618 = !DILocalVariable(name: "nnzc", arg: 5, scope: !5609, file: !21, line: 185, type: !1217)
!5619 = !DILocation(line: 185, column: 116, scope: !5609)
!5620 = !DILocalVariable(name: "i", scope: !5609, file: !21, line: 186, type: !12)
!5621 = !DILocation(line: 186, column: 9, scope: !5609)
!5622 = !DILocation(line: 187, column: 10, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5609, file: !21, line: 187, column: 5)
!5624 = !DILocation(line: 187, column: 9, scope: !5623)
!5625 = !DILocation(line: 187, column: 14, scope: !5626)
!5626 = !DILexicalBlockFile(scope: !5627, file: !21, discriminator: 1)
!5627 = distinct !DILexicalBlock(scope: !5623, file: !21, line: 187, column: 5)
!5628 = !DILocation(line: 187, column: 15, scope: !5626)
!5629 = !DILocation(line: 187, column: 5, scope: !5626)
!5630 = !DILocation(line: 188, column: 24, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !21, line: 188, column: 12)
!5632 = distinct !DILexicalBlock(scope: !5627, file: !21, line: 187, column: 24)
!5633 = !DILocation(line: 188, column: 18, scope: !5631)
!5634 = !DILocation(line: 188, column: 12, scope: !5631)
!5635 = !DILocation(line: 188, column: 12, scope: !5632)
!5636 = !DILocation(line: 188, column: 52, scope: !5637)
!5637 = !DILexicalBlockFile(scope: !5631, file: !21, discriminator: 1)
!5638 = !DILocation(line: 188, column: 71, scope: !5637)
!5639 = !DILocation(line: 188, column: 58, scope: !5637)
!5640 = !DILocation(line: 188, column: 56, scope: !5637)
!5641 = !DILocation(line: 188, column: 75, scope: !5637)
!5642 = !DILocation(line: 188, column: 83, scope: !5637)
!5643 = !DILocation(line: 188, column: 84, scope: !5637)
!5644 = !DILocation(line: 188, column: 87, scope: !5637)
!5645 = !DILocation(line: 188, column: 81, scope: !5637)
!5646 = !DILocation(line: 188, column: 106, scope: !5637)
!5647 = !DILocation(line: 188, column: 30, scope: !5637)
!5648 = !DILocation(line: 189, column: 35, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5631, file: !21, line: 189, column: 17)
!5650 = !DILocation(line: 189, column: 36, scope: !5649)
!5651 = !DILocation(line: 189, column: 17, scope: !5649)
!5652 = !DILocation(line: 189, column: 28, scope: !5649)
!5653 = !DILocation(line: 189, column: 17, scope: !5631)
!5654 = !DILocation(line: 189, column: 67, scope: !5655)
!5655 = !DILexicalBlockFile(scope: !5649, file: !21, discriminator: 1)
!5656 = !DILocation(line: 189, column: 86, scope: !5655)
!5657 = !DILocation(line: 189, column: 73, scope: !5655)
!5658 = !DILocation(line: 189, column: 71, scope: !5655)
!5659 = !DILocation(line: 189, column: 90, scope: !5655)
!5660 = !DILocation(line: 189, column: 98, scope: !5655)
!5661 = !DILocation(line: 189, column: 99, scope: !5655)
!5662 = !DILocation(line: 189, column: 102, scope: !5655)
!5663 = !DILocation(line: 189, column: 96, scope: !5655)
!5664 = !DILocation(line: 189, column: 121, scope: !5655)
!5665 = !DILocation(line: 189, column: 42, scope: !5655)
!5666 = !DILocation(line: 190, column: 5, scope: !5632)
!5667 = !DILocation(line: 187, column: 21, scope: !5668)
!5668 = !DILexicalBlockFile(scope: !5627, file: !21, discriminator: 2)
!5669 = !DILocation(line: 187, column: 5, scope: !5668)
!5670 = distinct !{!5670, !5671}
!5671 = !DILocation(line: 187, column: 5, scope: !5609)
!5672 = !DILocation(line: 191, column: 1, scope: !5609)
!5673 = distinct !DISubprogram(name: "ff_h264_idct8_add4_10_c", scope: !21, file: !21, line: 193, type: !1214, isLocal: false, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!5674 = !DILocalVariable(name: "dst", arg: 1, scope: !5673, file: !21, line: 193, type: !4)
!5675 = !DILocation(line: 193, column: 39, scope: !5673)
!5676 = !DILocalVariable(name: "block_offset", arg: 2, scope: !5673, file: !21, line: 193, type: !1216)
!5677 = !DILocation(line: 193, column: 55, scope: !5673)
!5678 = !DILocalVariable(name: "block", arg: 3, scope: !5673, file: !21, line: 193, type: !8)
!5679 = !DILocation(line: 193, column: 78, scope: !5673)
!5680 = !DILocalVariable(name: "stride", arg: 4, scope: !5673, file: !21, line: 193, type: !12)
!5681 = !DILocation(line: 193, column: 89, scope: !5673)
!5682 = !DILocalVariable(name: "nnzc", arg: 5, scope: !5673, file: !21, line: 193, type: !1217)
!5683 = !DILocation(line: 193, column: 111, scope: !5673)
!5684 = !DILocalVariable(name: "i", scope: !5673, file: !21, line: 194, type: !12)
!5685 = !DILocation(line: 194, column: 9, scope: !5673)
!5686 = !DILocation(line: 195, column: 10, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5673, file: !21, line: 195, column: 5)
!5688 = !DILocation(line: 195, column: 9, scope: !5687)
!5689 = !DILocation(line: 195, column: 14, scope: !5690)
!5690 = !DILexicalBlockFile(scope: !5691, file: !21, discriminator: 1)
!5691 = distinct !DILexicalBlock(scope: !5687, file: !21, line: 195, column: 5)
!5692 = !DILocation(line: 195, column: 15, scope: !5690)
!5693 = !DILocation(line: 195, column: 5, scope: !5690)
!5694 = !DILocalVariable(name: "nnz", scope: !5695, file: !21, line: 196, type: !12)
!5695 = distinct !DILexicalBlock(scope: !5691, file: !21, line: 195, column: 25)
!5696 = !DILocation(line: 196, column: 13, scope: !5695)
!5697 = !DILocation(line: 196, column: 31, scope: !5695)
!5698 = !DILocation(line: 196, column: 25, scope: !5695)
!5699 = !DILocation(line: 196, column: 19, scope: !5695)
!5700 = !DILocation(line: 197, column: 12, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5695, file: !21, line: 197, column: 12)
!5702 = !DILocation(line: 197, column: 12, scope: !5695)
!5703 = !DILocation(line: 198, column: 16, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !21, line: 198, column: 16)
!5705 = distinct !DILexicalBlock(scope: !5701, file: !21, line: 197, column: 16)
!5706 = !DILocation(line: 198, column: 19, scope: !5704)
!5707 = !DILocation(line: 198, column: 23, scope: !5704)
!5708 = !DILocation(line: 198, column: 44, scope: !5709)
!5709 = !DILexicalBlockFile(scope: !5704, file: !21, discriminator: 1)
!5710 = !DILocation(line: 198, column: 45, scope: !5709)
!5711 = !DILocation(line: 198, column: 26, scope: !5709)
!5712 = !DILocation(line: 198, column: 37, scope: !5709)
!5713 = !DILocation(line: 198, column: 16, scope: !5709)
!5714 = !DILocation(line: 198, column: 77, scope: !5715)
!5715 = !DILexicalBlockFile(scope: !5704, file: !21, discriminator: 2)
!5716 = !DILocation(line: 198, column: 96, scope: !5715)
!5717 = !DILocation(line: 198, column: 83, scope: !5715)
!5718 = !DILocation(line: 198, column: 81, scope: !5715)
!5719 = !DILocation(line: 198, column: 100, scope: !5715)
!5720 = !DILocation(line: 198, column: 108, scope: !5715)
!5721 = !DILocation(line: 198, column: 109, scope: !5715)
!5722 = !DILocation(line: 198, column: 112, scope: !5715)
!5723 = !DILocation(line: 198, column: 106, scope: !5715)
!5724 = !DILocation(line: 198, column: 131, scope: !5715)
!5725 = !DILocation(line: 198, column: 51, scope: !5715)
!5726 = !DILocation(line: 199, column: 41, scope: !5704)
!5727 = !DILocation(line: 199, column: 60, scope: !5704)
!5728 = !DILocation(line: 199, column: 47, scope: !5704)
!5729 = !DILocation(line: 199, column: 45, scope: !5704)
!5730 = !DILocation(line: 199, column: 64, scope: !5704)
!5731 = !DILocation(line: 199, column: 72, scope: !5704)
!5732 = !DILocation(line: 199, column: 73, scope: !5704)
!5733 = !DILocation(line: 199, column: 76, scope: !5704)
!5734 = !DILocation(line: 199, column: 70, scope: !5704)
!5735 = !DILocation(line: 199, column: 95, scope: !5704)
!5736 = !DILocation(line: 199, column: 18, scope: !5704)
!5737 = !DILocation(line: 200, column: 9, scope: !5705)
!5738 = !DILocation(line: 201, column: 5, scope: !5695)
!5739 = !DILocation(line: 195, column: 21, scope: !5740)
!5740 = !DILexicalBlockFile(scope: !5691, file: !21, discriminator: 2)
!5741 = !DILocation(line: 195, column: 5, scope: !5740)
!5742 = distinct !{!5742, !5743}
!5743 = !DILocation(line: 195, column: 5, scope: !5673)
!5744 = !DILocation(line: 202, column: 1, scope: !5673)
!5745 = distinct !DISubprogram(name: "ff_h264_idct_add8_10_c", scope: !21, file: !21, line: 204, type: !1426, isLocal: false, isDefinition: true, scopeLine: 204, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!5746 = !DILocalVariable(name: "dest", arg: 1, scope: !5745, file: !21, line: 204, type: !1428)
!5747 = !DILocation(line: 204, column: 39, scope: !5745)
!5748 = !DILocalVariable(name: "block_offset", arg: 2, scope: !5745, file: !21, line: 204, type: !1216)
!5749 = !DILocation(line: 204, column: 56, scope: !5745)
!5750 = !DILocalVariable(name: "block", arg: 3, scope: !5745, file: !21, line: 204, type: !8)
!5751 = !DILocation(line: 204, column: 79, scope: !5745)
!5752 = !DILocalVariable(name: "stride", arg: 4, scope: !5745, file: !21, line: 204, type: !12)
!5753 = !DILocation(line: 204, column: 90, scope: !5745)
!5754 = !DILocalVariable(name: "nnzc", arg: 5, scope: !5745, file: !21, line: 204, type: !1217)
!5755 = !DILocation(line: 204, column: 112, scope: !5745)
!5756 = !DILocalVariable(name: "i", scope: !5745, file: !21, line: 205, type: !12)
!5757 = !DILocation(line: 205, column: 9, scope: !5745)
!5758 = !DILocalVariable(name: "j", scope: !5745, file: !21, line: 205, type: !12)
!5759 = !DILocation(line: 205, column: 12, scope: !5745)
!5760 = !DILocation(line: 206, column: 10, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5745, file: !21, line: 206, column: 5)
!5762 = !DILocation(line: 206, column: 9, scope: !5761)
!5763 = !DILocation(line: 206, column: 14, scope: !5764)
!5764 = !DILexicalBlockFile(scope: !5765, file: !21, discriminator: 1)
!5765 = distinct !DILexicalBlock(scope: !5761, file: !21, line: 206, column: 5)
!5766 = !DILocation(line: 206, column: 15, scope: !5764)
!5767 = !DILocation(line: 206, column: 5, scope: !5764)
!5768 = !DILocation(line: 207, column: 15, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5770, file: !21, line: 207, column: 9)
!5770 = distinct !DILexicalBlock(scope: !5765, file: !21, line: 206, column: 23)
!5771 = !DILocation(line: 207, column: 16, scope: !5769)
!5772 = !DILocation(line: 207, column: 14, scope: !5769)
!5773 = !DILocation(line: 207, column: 13, scope: !5769)
!5774 = !DILocation(line: 207, column: 21, scope: !5775)
!5775 = !DILexicalBlockFile(scope: !5776, file: !21, discriminator: 1)
!5776 = distinct !DILexicalBlock(scope: !5769, file: !21, line: 207, column: 9)
!5777 = !DILocation(line: 207, column: 23, scope: !5775)
!5778 = !DILocation(line: 207, column: 24, scope: !5775)
!5779 = !DILocation(line: 207, column: 27, scope: !5775)
!5780 = !DILocation(line: 207, column: 22, scope: !5775)
!5781 = !DILocation(line: 207, column: 9, scope: !5775)
!5782 = !DILocation(line: 208, column: 28, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5784, file: !21, line: 208, column: 16)
!5784 = distinct !DILexicalBlock(scope: !5776, file: !21, line: 207, column: 35)
!5785 = !DILocation(line: 208, column: 22, scope: !5783)
!5786 = !DILocation(line: 208, column: 16, scope: !5783)
!5787 = !DILocation(line: 208, column: 16, scope: !5784)
!5788 = !DILocation(line: 209, column: 44, scope: !5783)
!5789 = !DILocation(line: 209, column: 45, scope: !5783)
!5790 = !DILocation(line: 209, column: 39, scope: !5783)
!5791 = !DILocation(line: 209, column: 64, scope: !5783)
!5792 = !DILocation(line: 209, column: 51, scope: !5783)
!5793 = !DILocation(line: 209, column: 49, scope: !5783)
!5794 = !DILocation(line: 209, column: 68, scope: !5783)
!5795 = !DILocation(line: 209, column: 76, scope: !5783)
!5796 = !DILocation(line: 209, column: 77, scope: !5783)
!5797 = !DILocation(line: 209, column: 80, scope: !5783)
!5798 = !DILocation(line: 209, column: 74, scope: !5783)
!5799 = !DILocation(line: 209, column: 99, scope: !5783)
!5800 = !DILocation(line: 209, column: 17, scope: !5783)
!5801 = !DILocation(line: 210, column: 39, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5783, file: !21, line: 210, column: 21)
!5803 = !DILocation(line: 210, column: 40, scope: !5802)
!5804 = !DILocation(line: 210, column: 21, scope: !5802)
!5805 = !DILocation(line: 210, column: 32, scope: !5802)
!5806 = !DILocation(line: 210, column: 21, scope: !5783)
!5807 = !DILocation(line: 211, column: 47, scope: !5802)
!5808 = !DILocation(line: 211, column: 48, scope: !5802)
!5809 = !DILocation(line: 211, column: 42, scope: !5802)
!5810 = !DILocation(line: 211, column: 67, scope: !5802)
!5811 = !DILocation(line: 211, column: 54, scope: !5802)
!5812 = !DILocation(line: 211, column: 52, scope: !5802)
!5813 = !DILocation(line: 211, column: 71, scope: !5802)
!5814 = !DILocation(line: 211, column: 79, scope: !5802)
!5815 = !DILocation(line: 211, column: 80, scope: !5802)
!5816 = !DILocation(line: 211, column: 83, scope: !5802)
!5817 = !DILocation(line: 211, column: 77, scope: !5802)
!5818 = !DILocation(line: 211, column: 102, scope: !5802)
!5819 = !DILocation(line: 211, column: 17, scope: !5802)
!5820 = !DILocation(line: 212, column: 9, scope: !5784)
!5821 = !DILocation(line: 207, column: 32, scope: !5822)
!5822 = !DILexicalBlockFile(scope: !5776, file: !21, discriminator: 2)
!5823 = !DILocation(line: 207, column: 9, scope: !5822)
!5824 = distinct !{!5824, !5825}
!5825 = !DILocation(line: 207, column: 9, scope: !5770)
!5826 = !DILocation(line: 213, column: 5, scope: !5770)
!5827 = !DILocation(line: 206, column: 20, scope: !5828)
!5828 = !DILexicalBlockFile(scope: !5765, file: !21, discriminator: 2)
!5829 = !DILocation(line: 206, column: 5, scope: !5828)
!5830 = distinct !{!5830, !5831}
!5831 = !DILocation(line: 206, column: 5, scope: !5745)
!5832 = !DILocation(line: 214, column: 1, scope: !5745)
!5833 = distinct !DISubprogram(name: "ff_h264_idct_add8_422_10_c", scope: !21, file: !21, line: 216, type: !1426, isLocal: false, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!5834 = !DILocalVariable(name: "dest", arg: 1, scope: !5833, file: !21, line: 216, type: !1428)
!5835 = !DILocation(line: 216, column: 43, scope: !5833)
!5836 = !DILocalVariable(name: "block_offset", arg: 2, scope: !5833, file: !21, line: 216, type: !1216)
!5837 = !DILocation(line: 216, column: 60, scope: !5833)
!5838 = !DILocalVariable(name: "block", arg: 3, scope: !5833, file: !21, line: 216, type: !8)
!5839 = !DILocation(line: 216, column: 83, scope: !5833)
!5840 = !DILocalVariable(name: "stride", arg: 4, scope: !5833, file: !21, line: 216, type: !12)
!5841 = !DILocation(line: 216, column: 94, scope: !5833)
!5842 = !DILocalVariable(name: "nnzc", arg: 5, scope: !5833, file: !21, line: 216, type: !1217)
!5843 = !DILocation(line: 216, column: 116, scope: !5833)
!5844 = !DILocalVariable(name: "i", scope: !5833, file: !21, line: 217, type: !12)
!5845 = !DILocation(line: 217, column: 9, scope: !5833)
!5846 = !DILocalVariable(name: "j", scope: !5833, file: !21, line: 217, type: !12)
!5847 = !DILocation(line: 217, column: 12, scope: !5833)
!5848 = !DILocation(line: 219, column: 10, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5833, file: !21, line: 219, column: 5)
!5850 = !DILocation(line: 219, column: 9, scope: !5849)
!5851 = !DILocation(line: 219, column: 14, scope: !5852)
!5852 = !DILexicalBlockFile(scope: !5853, file: !21, discriminator: 1)
!5853 = distinct !DILexicalBlock(scope: !5849, file: !21, line: 219, column: 5)
!5854 = !DILocation(line: 219, column: 15, scope: !5852)
!5855 = !DILocation(line: 219, column: 5, scope: !5852)
!5856 = !DILocation(line: 220, column: 15, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5858, file: !21, line: 220, column: 9)
!5858 = distinct !DILexicalBlock(scope: !5853, file: !21, line: 219, column: 23)
!5859 = !DILocation(line: 220, column: 16, scope: !5857)
!5860 = !DILocation(line: 220, column: 14, scope: !5857)
!5861 = !DILocation(line: 220, column: 13, scope: !5857)
!5862 = !DILocation(line: 220, column: 21, scope: !5863)
!5863 = !DILexicalBlockFile(scope: !5864, file: !21, discriminator: 1)
!5864 = distinct !DILexicalBlock(scope: !5857, file: !21, line: 220, column: 9)
!5865 = !DILocation(line: 220, column: 23, scope: !5863)
!5866 = !DILocation(line: 220, column: 24, scope: !5863)
!5867 = !DILocation(line: 220, column: 27, scope: !5863)
!5868 = !DILocation(line: 220, column: 22, scope: !5863)
!5869 = !DILocation(line: 220, column: 9, scope: !5863)
!5870 = !DILocation(line: 221, column: 28, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5872, file: !21, line: 221, column: 16)
!5872 = distinct !DILexicalBlock(scope: !5864, file: !21, line: 220, column: 35)
!5873 = !DILocation(line: 221, column: 22, scope: !5871)
!5874 = !DILocation(line: 221, column: 16, scope: !5871)
!5875 = !DILocation(line: 221, column: 16, scope: !5872)
!5876 = !DILocation(line: 222, column: 44, scope: !5871)
!5877 = !DILocation(line: 222, column: 45, scope: !5871)
!5878 = !DILocation(line: 222, column: 39, scope: !5871)
!5879 = !DILocation(line: 222, column: 64, scope: !5871)
!5880 = !DILocation(line: 222, column: 51, scope: !5871)
!5881 = !DILocation(line: 222, column: 49, scope: !5871)
!5882 = !DILocation(line: 222, column: 68, scope: !5871)
!5883 = !DILocation(line: 222, column: 76, scope: !5871)
!5884 = !DILocation(line: 222, column: 77, scope: !5871)
!5885 = !DILocation(line: 222, column: 80, scope: !5871)
!5886 = !DILocation(line: 222, column: 74, scope: !5871)
!5887 = !DILocation(line: 222, column: 99, scope: !5871)
!5888 = !DILocation(line: 222, column: 17, scope: !5871)
!5889 = !DILocation(line: 223, column: 39, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5871, file: !21, line: 223, column: 21)
!5891 = !DILocation(line: 223, column: 40, scope: !5890)
!5892 = !DILocation(line: 223, column: 21, scope: !5890)
!5893 = !DILocation(line: 223, column: 32, scope: !5890)
!5894 = !DILocation(line: 223, column: 21, scope: !5871)
!5895 = !DILocation(line: 224, column: 47, scope: !5890)
!5896 = !DILocation(line: 224, column: 48, scope: !5890)
!5897 = !DILocation(line: 224, column: 42, scope: !5890)
!5898 = !DILocation(line: 224, column: 67, scope: !5890)
!5899 = !DILocation(line: 224, column: 54, scope: !5890)
!5900 = !DILocation(line: 224, column: 52, scope: !5890)
!5901 = !DILocation(line: 224, column: 71, scope: !5890)
!5902 = !DILocation(line: 224, column: 79, scope: !5890)
!5903 = !DILocation(line: 224, column: 80, scope: !5890)
!5904 = !DILocation(line: 224, column: 83, scope: !5890)
!5905 = !DILocation(line: 224, column: 77, scope: !5890)
!5906 = !DILocation(line: 224, column: 102, scope: !5890)
!5907 = !DILocation(line: 224, column: 17, scope: !5890)
!5908 = !DILocation(line: 225, column: 9, scope: !5872)
!5909 = !DILocation(line: 220, column: 32, scope: !5910)
!5910 = !DILexicalBlockFile(scope: !5864, file: !21, discriminator: 2)
!5911 = !DILocation(line: 220, column: 9, scope: !5910)
!5912 = distinct !{!5912, !5913}
!5913 = !DILocation(line: 220, column: 9, scope: !5858)
!5914 = !DILocation(line: 226, column: 5, scope: !5858)
!5915 = !DILocation(line: 219, column: 20, scope: !5916)
!5916 = !DILexicalBlockFile(scope: !5853, file: !21, discriminator: 2)
!5917 = !DILocation(line: 219, column: 5, scope: !5916)
!5918 = distinct !{!5918, !5919}
!5919 = !DILocation(line: 219, column: 5, scope: !5833)
!5920 = !DILocation(line: 228, column: 10, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5833, file: !21, line: 228, column: 5)
!5922 = !DILocation(line: 228, column: 9, scope: !5921)
!5923 = !DILocation(line: 228, column: 14, scope: !5924)
!5924 = !DILexicalBlockFile(scope: !5925, file: !21, discriminator: 1)
!5925 = distinct !DILexicalBlock(scope: !5921, file: !21, line: 228, column: 5)
!5926 = !DILocation(line: 228, column: 15, scope: !5924)
!5927 = !DILocation(line: 228, column: 5, scope: !5924)
!5928 = !DILocation(line: 229, column: 15, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5930, file: !21, line: 229, column: 9)
!5930 = distinct !DILexicalBlock(scope: !5925, file: !21, line: 228, column: 23)
!5931 = !DILocation(line: 229, column: 16, scope: !5929)
!5932 = !DILocation(line: 229, column: 19, scope: !5929)
!5933 = !DILocation(line: 229, column: 14, scope: !5929)
!5934 = !DILocation(line: 229, column: 13, scope: !5929)
!5935 = !DILocation(line: 229, column: 23, scope: !5936)
!5936 = !DILexicalBlockFile(scope: !5937, file: !21, discriminator: 1)
!5937 = distinct !DILexicalBlock(scope: !5929, file: !21, line: 229, column: 9)
!5938 = !DILocation(line: 229, column: 25, scope: !5936)
!5939 = !DILocation(line: 229, column: 26, scope: !5936)
!5940 = !DILocation(line: 229, column: 29, scope: !5936)
!5941 = !DILocation(line: 229, column: 24, scope: !5936)
!5942 = !DILocation(line: 229, column: 9, scope: !5936)
!5943 = !DILocation(line: 230, column: 28, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !21, line: 230, column: 16)
!5945 = distinct !DILexicalBlock(scope: !5937, file: !21, line: 229, column: 37)
!5946 = !DILocation(line: 230, column: 29, scope: !5944)
!5947 = !DILocation(line: 230, column: 22, scope: !5944)
!5948 = !DILocation(line: 230, column: 16, scope: !5944)
!5949 = !DILocation(line: 230, column: 16, scope: !5945)
!5950 = !DILocation(line: 231, column: 44, scope: !5944)
!5951 = !DILocation(line: 231, column: 45, scope: !5944)
!5952 = !DILocation(line: 231, column: 39, scope: !5944)
!5953 = !DILocation(line: 231, column: 64, scope: !5944)
!5954 = !DILocation(line: 231, column: 65, scope: !5944)
!5955 = !DILocation(line: 231, column: 51, scope: !5944)
!5956 = !DILocation(line: 231, column: 49, scope: !5944)
!5957 = !DILocation(line: 231, column: 70, scope: !5944)
!5958 = !DILocation(line: 231, column: 78, scope: !5944)
!5959 = !DILocation(line: 231, column: 79, scope: !5944)
!5960 = !DILocation(line: 231, column: 82, scope: !5944)
!5961 = !DILocation(line: 231, column: 76, scope: !5944)
!5962 = !DILocation(line: 231, column: 101, scope: !5944)
!5963 = !DILocation(line: 231, column: 17, scope: !5944)
!5964 = !DILocation(line: 232, column: 39, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5944, file: !21, line: 232, column: 21)
!5966 = !DILocation(line: 232, column: 40, scope: !5965)
!5967 = !DILocation(line: 232, column: 21, scope: !5965)
!5968 = !DILocation(line: 232, column: 32, scope: !5965)
!5969 = !DILocation(line: 232, column: 21, scope: !5944)
!5970 = !DILocation(line: 233, column: 47, scope: !5965)
!5971 = !DILocation(line: 233, column: 48, scope: !5965)
!5972 = !DILocation(line: 233, column: 42, scope: !5965)
!5973 = !DILocation(line: 233, column: 67, scope: !5965)
!5974 = !DILocation(line: 233, column: 68, scope: !5965)
!5975 = !DILocation(line: 233, column: 54, scope: !5965)
!5976 = !DILocation(line: 233, column: 52, scope: !5965)
!5977 = !DILocation(line: 233, column: 73, scope: !5965)
!5978 = !DILocation(line: 233, column: 81, scope: !5965)
!5979 = !DILocation(line: 233, column: 82, scope: !5965)
!5980 = !DILocation(line: 233, column: 85, scope: !5965)
!5981 = !DILocation(line: 233, column: 79, scope: !5965)
!5982 = !DILocation(line: 233, column: 104, scope: !5965)
!5983 = !DILocation(line: 233, column: 17, scope: !5965)
!5984 = !DILocation(line: 234, column: 9, scope: !5945)
!5985 = !DILocation(line: 229, column: 34, scope: !5986)
!5986 = !DILexicalBlockFile(scope: !5937, file: !21, discriminator: 2)
!5987 = !DILocation(line: 229, column: 9, scope: !5986)
!5988 = distinct !{!5988, !5989}
!5989 = !DILocation(line: 229, column: 9, scope: !5930)
!5990 = !DILocation(line: 235, column: 5, scope: !5930)
!5991 = !DILocation(line: 228, column: 20, scope: !5992)
!5992 = !DILexicalBlockFile(scope: !5925, file: !21, discriminator: 2)
!5993 = !DILocation(line: 228, column: 5, scope: !5992)
!5994 = distinct !{!5994, !5995}
!5995 = !DILocation(line: 228, column: 5, scope: !5833)
!5996 = !DILocation(line: 236, column: 1, scope: !5833)
!5997 = !DILocalVariable(name: "_output", arg: 1, scope: !40, file: !21, line: 242, type: !8)
!5998 = !DILocation(line: 242, column: 49, scope: !40)
!5999 = !DILocalVariable(name: "_input", arg: 2, scope: !40, file: !21, line: 242, type: !8)
!6000 = !DILocation(line: 242, column: 67, scope: !40)
!6001 = !DILocalVariable(name: "qmul", arg: 3, scope: !40, file: !21, line: 242, type: !12)
!6002 = !DILocation(line: 242, column: 79, scope: !40)
!6003 = !DILocalVariable(name: "i", scope: !40, file: !21, line: 244, type: !12)
!6004 = !DILocation(line: 244, column: 9, scope: !40)
!6005 = !DILocalVariable(name: "temp", scope: !40, file: !21, line: 245, type: !1689)
!6006 = !DILocation(line: 245, column: 9, scope: !40)
!6007 = !DILocalVariable(name: "input", scope: !40, file: !21, line: 247, type: !16)
!6008 = !DILocation(line: 247, column: 14, scope: !40)
!6009 = !DILocation(line: 247, column: 32, scope: !40)
!6010 = !DILocation(line: 247, column: 22, scope: !40)
!6011 = !DILocalVariable(name: "output", scope: !40, file: !21, line: 248, type: !16)
!6012 = !DILocation(line: 248, column: 14, scope: !40)
!6013 = !DILocation(line: 248, column: 33, scope: !40)
!6014 = !DILocation(line: 248, column: 23, scope: !40)
!6015 = !DILocation(line: 250, column: 10, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !40, file: !21, line: 250, column: 5)
!6017 = !DILocation(line: 250, column: 9, scope: !6016)
!6018 = !DILocation(line: 250, column: 14, scope: !6019)
!6019 = !DILexicalBlockFile(scope: !6020, file: !21, discriminator: 1)
!6020 = distinct !DILexicalBlock(scope: !6016, file: !21, line: 250, column: 5)
!6021 = !DILocation(line: 250, column: 15, scope: !6019)
!6022 = !DILocation(line: 250, column: 5, scope: !6019)
!6023 = !DILocalVariable(name: "z0", scope: !6024, file: !21, line: 251, type: !468)
!6024 = distinct !DILexicalBlock(scope: !6020, file: !21, line: 250, column: 23)
!6025 = !DILocation(line: 251, column: 19, scope: !6024)
!6026 = !DILocation(line: 251, column: 31, scope: !6024)
!6027 = !DILocation(line: 251, column: 30, scope: !6024)
!6028 = !DILocation(line: 251, column: 32, scope: !6024)
!6029 = !DILocation(line: 251, column: 23, scope: !6024)
!6030 = !DILocation(line: 251, column: 46, scope: !6024)
!6031 = !DILocation(line: 251, column: 45, scope: !6024)
!6032 = !DILocation(line: 251, column: 47, scope: !6024)
!6033 = !DILocation(line: 251, column: 38, scope: !6024)
!6034 = !DILocation(line: 251, column: 36, scope: !6024)
!6035 = !DILocalVariable(name: "z1", scope: !6024, file: !21, line: 252, type: !468)
!6036 = !DILocation(line: 252, column: 19, scope: !6024)
!6037 = !DILocation(line: 252, column: 31, scope: !6024)
!6038 = !DILocation(line: 252, column: 30, scope: !6024)
!6039 = !DILocation(line: 252, column: 32, scope: !6024)
!6040 = !DILocation(line: 252, column: 23, scope: !6024)
!6041 = !DILocation(line: 252, column: 46, scope: !6024)
!6042 = !DILocation(line: 252, column: 45, scope: !6024)
!6043 = !DILocation(line: 252, column: 47, scope: !6024)
!6044 = !DILocation(line: 252, column: 38, scope: !6024)
!6045 = !DILocation(line: 252, column: 36, scope: !6024)
!6046 = !DILocalVariable(name: "z2", scope: !6024, file: !21, line: 253, type: !468)
!6047 = !DILocation(line: 253, column: 19, scope: !6024)
!6048 = !DILocation(line: 253, column: 31, scope: !6024)
!6049 = !DILocation(line: 253, column: 30, scope: !6024)
!6050 = !DILocation(line: 253, column: 32, scope: !6024)
!6051 = !DILocation(line: 253, column: 23, scope: !6024)
!6052 = !DILocation(line: 253, column: 46, scope: !6024)
!6053 = !DILocation(line: 253, column: 45, scope: !6024)
!6054 = !DILocation(line: 253, column: 47, scope: !6024)
!6055 = !DILocation(line: 253, column: 38, scope: !6024)
!6056 = !DILocation(line: 253, column: 36, scope: !6024)
!6057 = !DILocalVariable(name: "z3", scope: !6024, file: !21, line: 254, type: !468)
!6058 = !DILocation(line: 254, column: 19, scope: !6024)
!6059 = !DILocation(line: 254, column: 31, scope: !6024)
!6060 = !DILocation(line: 254, column: 30, scope: !6024)
!6061 = !DILocation(line: 254, column: 32, scope: !6024)
!6062 = !DILocation(line: 254, column: 23, scope: !6024)
!6063 = !DILocation(line: 254, column: 46, scope: !6024)
!6064 = !DILocation(line: 254, column: 45, scope: !6024)
!6065 = !DILocation(line: 254, column: 47, scope: !6024)
!6066 = !DILocation(line: 254, column: 38, scope: !6024)
!6067 = !DILocation(line: 254, column: 36, scope: !6024)
!6068 = !DILocation(line: 256, column: 22, scope: !6024)
!6069 = !DILocation(line: 256, column: 25, scope: !6024)
!6070 = !DILocation(line: 256, column: 24, scope: !6024)
!6071 = !DILocation(line: 256, column: 16, scope: !6024)
!6072 = !DILocation(line: 256, column: 15, scope: !6024)
!6073 = !DILocation(line: 256, column: 17, scope: !6024)
!6074 = !DILocation(line: 256, column: 9, scope: !6024)
!6075 = !DILocation(line: 256, column: 20, scope: !6024)
!6076 = !DILocation(line: 257, column: 22, scope: !6024)
!6077 = !DILocation(line: 257, column: 25, scope: !6024)
!6078 = !DILocation(line: 257, column: 24, scope: !6024)
!6079 = !DILocation(line: 257, column: 16, scope: !6024)
!6080 = !DILocation(line: 257, column: 15, scope: !6024)
!6081 = !DILocation(line: 257, column: 17, scope: !6024)
!6082 = !DILocation(line: 257, column: 9, scope: !6024)
!6083 = !DILocation(line: 257, column: 20, scope: !6024)
!6084 = !DILocation(line: 258, column: 22, scope: !6024)
!6085 = !DILocation(line: 258, column: 25, scope: !6024)
!6086 = !DILocation(line: 258, column: 24, scope: !6024)
!6087 = !DILocation(line: 258, column: 16, scope: !6024)
!6088 = !DILocation(line: 258, column: 15, scope: !6024)
!6089 = !DILocation(line: 258, column: 17, scope: !6024)
!6090 = !DILocation(line: 258, column: 9, scope: !6024)
!6091 = !DILocation(line: 258, column: 20, scope: !6024)
!6092 = !DILocation(line: 259, column: 22, scope: !6024)
!6093 = !DILocation(line: 259, column: 25, scope: !6024)
!6094 = !DILocation(line: 259, column: 24, scope: !6024)
!6095 = !DILocation(line: 259, column: 16, scope: !6024)
!6096 = !DILocation(line: 259, column: 15, scope: !6024)
!6097 = !DILocation(line: 259, column: 17, scope: !6024)
!6098 = !DILocation(line: 259, column: 9, scope: !6024)
!6099 = !DILocation(line: 259, column: 20, scope: !6024)
!6100 = !DILocation(line: 260, column: 5, scope: !6024)
!6101 = !DILocation(line: 250, column: 20, scope: !6102)
!6102 = !DILexicalBlockFile(scope: !6020, file: !21, discriminator: 2)
!6103 = !DILocation(line: 250, column: 5, scope: !6102)
!6104 = distinct !{!6104, !6105}
!6105 = !DILocation(line: 250, column: 5, scope: !40)
!6106 = !DILocation(line: 262, column: 10, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !40, file: !21, line: 262, column: 5)
!6108 = !DILocation(line: 262, column: 9, scope: !6107)
!6109 = !DILocation(line: 262, column: 14, scope: !6110)
!6110 = !DILexicalBlockFile(scope: !6111, file: !21, discriminator: 1)
!6111 = distinct !DILexicalBlock(scope: !6107, file: !21, line: 262, column: 5)
!6112 = !DILocation(line: 262, column: 15, scope: !6110)
!6113 = !DILocation(line: 262, column: 5, scope: !6110)
!6114 = !DILocalVariable(name: "offset", scope: !6115, file: !21, line: 263, type: !468)
!6115 = distinct !DILexicalBlock(scope: !6111, file: !21, line: 262, column: 23)
!6116 = !DILocation(line: 263, column: 19, scope: !6115)
!6117 = !DILocation(line: 263, column: 36, scope: !6115)
!6118 = !DILocation(line: 263, column: 27, scope: !6115)
!6119 = !DILocalVariable(name: "z0", scope: !6115, file: !21, line: 264, type: !106)
!6120 = !DILocation(line: 264, column: 24, scope: !6115)
!6121 = !DILocation(line: 264, column: 37, scope: !6115)
!6122 = !DILocation(line: 264, column: 36, scope: !6115)
!6123 = !DILocation(line: 264, column: 28, scope: !6115)
!6124 = !DILocation(line: 264, column: 51, scope: !6115)
!6125 = !DILocation(line: 264, column: 50, scope: !6115)
!6126 = !DILocation(line: 264, column: 42, scope: !6115)
!6127 = !DILocation(line: 264, column: 40, scope: !6115)
!6128 = !DILocalVariable(name: "z1", scope: !6115, file: !21, line: 265, type: !106)
!6129 = !DILocation(line: 265, column: 24, scope: !6115)
!6130 = !DILocation(line: 265, column: 37, scope: !6115)
!6131 = !DILocation(line: 265, column: 36, scope: !6115)
!6132 = !DILocation(line: 265, column: 28, scope: !6115)
!6133 = !DILocation(line: 265, column: 51, scope: !6115)
!6134 = !DILocation(line: 265, column: 50, scope: !6115)
!6135 = !DILocation(line: 265, column: 42, scope: !6115)
!6136 = !DILocation(line: 265, column: 40, scope: !6115)
!6137 = !DILocalVariable(name: "z2", scope: !6115, file: !21, line: 266, type: !106)
!6138 = !DILocation(line: 266, column: 24, scope: !6115)
!6139 = !DILocation(line: 266, column: 37, scope: !6115)
!6140 = !DILocation(line: 266, column: 36, scope: !6115)
!6141 = !DILocation(line: 266, column: 28, scope: !6115)
!6142 = !DILocation(line: 266, column: 51, scope: !6115)
!6143 = !DILocation(line: 266, column: 50, scope: !6115)
!6144 = !DILocation(line: 266, column: 42, scope: !6115)
!6145 = !DILocation(line: 266, column: 40, scope: !6115)
!6146 = !DILocalVariable(name: "z3", scope: !6115, file: !21, line: 267, type: !106)
!6147 = !DILocation(line: 267, column: 24, scope: !6115)
!6148 = !DILocation(line: 267, column: 37, scope: !6115)
!6149 = !DILocation(line: 267, column: 36, scope: !6115)
!6150 = !DILocation(line: 267, column: 28, scope: !6115)
!6151 = !DILocation(line: 267, column: 51, scope: !6115)
!6152 = !DILocation(line: 267, column: 50, scope: !6115)
!6153 = !DILocation(line: 267, column: 42, scope: !6115)
!6154 = !DILocation(line: 267, column: 40, scope: !6115)
!6155 = !DILocation(line: 269, column: 38, scope: !6115)
!6156 = !DILocation(line: 269, column: 43, scope: !6115)
!6157 = !DILocation(line: 269, column: 41, scope: !6115)
!6158 = !DILocation(line: 269, column: 47, scope: !6115)
!6159 = !DILocation(line: 269, column: 46, scope: !6115)
!6160 = !DILocation(line: 269, column: 52, scope: !6115)
!6161 = !DILocation(line: 269, column: 60, scope: !6115)
!6162 = !DILocation(line: 269, column: 22, scope: !6115)
!6163 = !DILocation(line: 269, column: 21, scope: !6115)
!6164 = !DILocation(line: 269, column: 9, scope: !6115)
!6165 = !DILocation(line: 269, column: 29, scope: !6115)
!6166 = !DILocation(line: 270, column: 38, scope: !6115)
!6167 = !DILocation(line: 270, column: 43, scope: !6115)
!6168 = !DILocation(line: 270, column: 41, scope: !6115)
!6169 = !DILocation(line: 270, column: 47, scope: !6115)
!6170 = !DILocation(line: 270, column: 46, scope: !6115)
!6171 = !DILocation(line: 270, column: 52, scope: !6115)
!6172 = !DILocation(line: 270, column: 60, scope: !6115)
!6173 = !DILocation(line: 270, column: 22, scope: !6115)
!6174 = !DILocation(line: 270, column: 21, scope: !6115)
!6175 = !DILocation(line: 270, column: 9, scope: !6115)
!6176 = !DILocation(line: 270, column: 29, scope: !6115)
!6177 = !DILocation(line: 271, column: 38, scope: !6115)
!6178 = !DILocation(line: 271, column: 43, scope: !6115)
!6179 = !DILocation(line: 271, column: 41, scope: !6115)
!6180 = !DILocation(line: 271, column: 47, scope: !6115)
!6181 = !DILocation(line: 271, column: 46, scope: !6115)
!6182 = !DILocation(line: 271, column: 52, scope: !6115)
!6183 = !DILocation(line: 271, column: 60, scope: !6115)
!6184 = !DILocation(line: 271, column: 22, scope: !6115)
!6185 = !DILocation(line: 271, column: 21, scope: !6115)
!6186 = !DILocation(line: 271, column: 9, scope: !6115)
!6187 = !DILocation(line: 271, column: 29, scope: !6115)
!6188 = !DILocation(line: 272, column: 38, scope: !6115)
!6189 = !DILocation(line: 272, column: 43, scope: !6115)
!6190 = !DILocation(line: 272, column: 41, scope: !6115)
!6191 = !DILocation(line: 272, column: 47, scope: !6115)
!6192 = !DILocation(line: 272, column: 46, scope: !6115)
!6193 = !DILocation(line: 272, column: 52, scope: !6115)
!6194 = !DILocation(line: 272, column: 60, scope: !6115)
!6195 = !DILocation(line: 272, column: 22, scope: !6115)
!6196 = !DILocation(line: 272, column: 21, scope: !6115)
!6197 = !DILocation(line: 272, column: 9, scope: !6115)
!6198 = !DILocation(line: 272, column: 29, scope: !6115)
!6199 = !DILocation(line: 273, column: 5, scope: !6115)
!6200 = !DILocation(line: 262, column: 20, scope: !6201)
!6201 = !DILexicalBlockFile(scope: !6111, file: !21, discriminator: 2)
!6202 = !DILocation(line: 262, column: 5, scope: !6201)
!6203 = distinct !{!6203, !6204}
!6204 = !DILocation(line: 262, column: 5, scope: !40)
!6205 = !DILocation(line: 275, column: 1, scope: !40)
!6206 = !DILocalVariable(name: "_block", arg: 1, scope: !42, file: !21, line: 277, type: !8)
!6207 = !DILocation(line: 277, column: 54, scope: !42)
!6208 = !DILocalVariable(name: "qmul", arg: 2, scope: !42, file: !21, line: 277, type: !12)
!6209 = !DILocation(line: 277, column: 66, scope: !42)
!6210 = !DILocalVariable(name: "stride", scope: !42, file: !21, line: 278, type: !468)
!6211 = !DILocation(line: 278, column: 15, scope: !42)
!6212 = !DILocalVariable(name: "xStride", scope: !42, file: !21, line: 279, type: !468)
!6213 = !DILocation(line: 279, column: 15, scope: !42)
!6214 = !DILocalVariable(name: "i", scope: !42, file: !21, line: 280, type: !12)
!6215 = !DILocation(line: 280, column: 9, scope: !42)
!6216 = !DILocalVariable(name: "temp", scope: !42, file: !21, line: 281, type: !1905)
!6217 = !DILocation(line: 281, column: 9, scope: !42)
!6218 = !DILocalVariable(name: "block", scope: !42, file: !21, line: 283, type: !16)
!6219 = !DILocation(line: 283, column: 14, scope: !42)
!6220 = !DILocation(line: 283, column: 32, scope: !42)
!6221 = !DILocation(line: 283, column: 22, scope: !42)
!6222 = !DILocation(line: 285, column: 10, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !42, file: !21, line: 285, column: 5)
!6224 = !DILocation(line: 285, column: 9, scope: !6223)
!6225 = !DILocation(line: 285, column: 14, scope: !6226)
!6226 = !DILexicalBlockFile(scope: !6227, file: !21, discriminator: 1)
!6227 = distinct !DILexicalBlock(scope: !6223, file: !21, line: 285, column: 5)
!6228 = !DILocation(line: 285, column: 15, scope: !6226)
!6229 = !DILocation(line: 285, column: 5, scope: !6226)
!6230 = !DILocation(line: 286, column: 36, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6227, file: !21, line: 285, column: 23)
!6232 = !DILocation(line: 286, column: 35, scope: !6231)
!6233 = !DILocation(line: 286, column: 38, scope: !6231)
!6234 = !DILocation(line: 286, column: 23, scope: !6231)
!6235 = !DILocation(line: 286, column: 66, scope: !6231)
!6236 = !DILocation(line: 286, column: 65, scope: !6231)
!6237 = !DILocation(line: 286, column: 68, scope: !6231)
!6238 = !DILocation(line: 286, column: 53, scope: !6231)
!6239 = !DILocation(line: 286, column: 51, scope: !6231)
!6240 = !DILocation(line: 286, column: 16, scope: !6231)
!6241 = !DILocation(line: 286, column: 15, scope: !6231)
!6242 = !DILocation(line: 286, column: 17, scope: !6231)
!6243 = !DILocation(line: 286, column: 9, scope: !6231)
!6244 = !DILocation(line: 286, column: 21, scope: !6231)
!6245 = !DILocation(line: 287, column: 36, scope: !6231)
!6246 = !DILocation(line: 287, column: 35, scope: !6231)
!6247 = !DILocation(line: 287, column: 38, scope: !6231)
!6248 = !DILocation(line: 287, column: 23, scope: !6231)
!6249 = !DILocation(line: 287, column: 66, scope: !6231)
!6250 = !DILocation(line: 287, column: 65, scope: !6231)
!6251 = !DILocation(line: 287, column: 68, scope: !6231)
!6252 = !DILocation(line: 287, column: 53, scope: !6231)
!6253 = !DILocation(line: 287, column: 51, scope: !6231)
!6254 = !DILocation(line: 287, column: 16, scope: !6231)
!6255 = !DILocation(line: 287, column: 15, scope: !6231)
!6256 = !DILocation(line: 287, column: 17, scope: !6231)
!6257 = !DILocation(line: 287, column: 9, scope: !6231)
!6258 = !DILocation(line: 287, column: 21, scope: !6231)
!6259 = !DILocation(line: 288, column: 5, scope: !6231)
!6260 = !DILocation(line: 285, column: 20, scope: !6261)
!6261 = !DILexicalBlockFile(scope: !6227, file: !21, discriminator: 2)
!6262 = !DILocation(line: 285, column: 5, scope: !6261)
!6263 = distinct !{!6263, !6264}
!6264 = !DILocation(line: 285, column: 5, scope: !42)
!6265 = !DILocation(line: 290, column: 10, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !42, file: !21, line: 290, column: 5)
!6267 = !DILocation(line: 290, column: 9, scope: !6266)
!6268 = !DILocation(line: 290, column: 14, scope: !6269)
!6269 = !DILexicalBlockFile(scope: !6270, file: !21, discriminator: 1)
!6270 = distinct !DILexicalBlock(scope: !6266, file: !21, line: 290, column: 5)
!6271 = !DILocation(line: 290, column: 15, scope: !6269)
!6272 = !DILocation(line: 290, column: 5, scope: !6269)
!6273 = !DILocalVariable(name: "offset", scope: !6274, file: !21, line: 291, type: !468)
!6274 = distinct !DILexicalBlock(scope: !6270, file: !21, line: 290, column: 23)
!6275 = !DILocation(line: 291, column: 19, scope: !6274)
!6276 = !DILocation(line: 291, column: 36, scope: !6274)
!6277 = !DILocation(line: 291, column: 27, scope: !6274)
!6278 = !DILocalVariable(name: "z0", scope: !6274, file: !21, line: 292, type: !106)
!6279 = !DILocation(line: 292, column: 24, scope: !6274)
!6280 = !DILocation(line: 292, column: 37, scope: !6274)
!6281 = !DILocation(line: 292, column: 36, scope: !6274)
!6282 = !DILocation(line: 292, column: 28, scope: !6274)
!6283 = !DILocation(line: 292, column: 51, scope: !6274)
!6284 = !DILocation(line: 292, column: 50, scope: !6274)
!6285 = !DILocation(line: 292, column: 42, scope: !6274)
!6286 = !DILocation(line: 292, column: 40, scope: !6274)
!6287 = !DILocalVariable(name: "z1", scope: !6274, file: !21, line: 293, type: !106)
!6288 = !DILocation(line: 293, column: 24, scope: !6274)
!6289 = !DILocation(line: 293, column: 37, scope: !6274)
!6290 = !DILocation(line: 293, column: 36, scope: !6274)
!6291 = !DILocation(line: 293, column: 28, scope: !6274)
!6292 = !DILocation(line: 293, column: 51, scope: !6274)
!6293 = !DILocation(line: 293, column: 50, scope: !6274)
!6294 = !DILocation(line: 293, column: 42, scope: !6274)
!6295 = !DILocation(line: 293, column: 40, scope: !6274)
!6296 = !DILocalVariable(name: "z2", scope: !6274, file: !21, line: 294, type: !106)
!6297 = !DILocation(line: 294, column: 24, scope: !6274)
!6298 = !DILocation(line: 294, column: 37, scope: !6274)
!6299 = !DILocation(line: 294, column: 36, scope: !6274)
!6300 = !DILocation(line: 294, column: 28, scope: !6274)
!6301 = !DILocation(line: 294, column: 51, scope: !6274)
!6302 = !DILocation(line: 294, column: 50, scope: !6274)
!6303 = !DILocation(line: 294, column: 42, scope: !6274)
!6304 = !DILocation(line: 294, column: 40, scope: !6274)
!6305 = !DILocalVariable(name: "z3", scope: !6274, file: !21, line: 295, type: !106)
!6306 = !DILocation(line: 295, column: 24, scope: !6274)
!6307 = !DILocation(line: 295, column: 37, scope: !6274)
!6308 = !DILocation(line: 295, column: 36, scope: !6274)
!6309 = !DILocation(line: 295, column: 28, scope: !6274)
!6310 = !DILocation(line: 295, column: 51, scope: !6274)
!6311 = !DILocation(line: 295, column: 50, scope: !6274)
!6312 = !DILocation(line: 295, column: 42, scope: !6274)
!6313 = !DILocation(line: 295, column: 40, scope: !6274)
!6314 = !DILocation(line: 297, column: 40, scope: !6274)
!6315 = !DILocation(line: 297, column: 45, scope: !6274)
!6316 = !DILocation(line: 297, column: 43, scope: !6274)
!6317 = !DILocation(line: 297, column: 49, scope: !6274)
!6318 = !DILocation(line: 297, column: 48, scope: !6274)
!6319 = !DILocation(line: 297, column: 54, scope: !6274)
!6320 = !DILocation(line: 297, column: 61, scope: !6274)
!6321 = !DILocation(line: 297, column: 24, scope: !6274)
!6322 = !DILocation(line: 297, column: 23, scope: !6274)
!6323 = !DILocation(line: 297, column: 9, scope: !6274)
!6324 = !DILocation(line: 297, column: 31, scope: !6274)
!6325 = !DILocation(line: 298, column: 40, scope: !6274)
!6326 = !DILocation(line: 298, column: 45, scope: !6274)
!6327 = !DILocation(line: 298, column: 43, scope: !6274)
!6328 = !DILocation(line: 298, column: 49, scope: !6274)
!6329 = !DILocation(line: 298, column: 48, scope: !6274)
!6330 = !DILocation(line: 298, column: 54, scope: !6274)
!6331 = !DILocation(line: 298, column: 61, scope: !6274)
!6332 = !DILocation(line: 298, column: 24, scope: !6274)
!6333 = !DILocation(line: 298, column: 23, scope: !6274)
!6334 = !DILocation(line: 298, column: 9, scope: !6274)
!6335 = !DILocation(line: 298, column: 31, scope: !6274)
!6336 = !DILocation(line: 299, column: 40, scope: !6274)
!6337 = !DILocation(line: 299, column: 45, scope: !6274)
!6338 = !DILocation(line: 299, column: 43, scope: !6274)
!6339 = !DILocation(line: 299, column: 49, scope: !6274)
!6340 = !DILocation(line: 299, column: 48, scope: !6274)
!6341 = !DILocation(line: 299, column: 54, scope: !6274)
!6342 = !DILocation(line: 299, column: 61, scope: !6274)
!6343 = !DILocation(line: 299, column: 24, scope: !6274)
!6344 = !DILocation(line: 299, column: 23, scope: !6274)
!6345 = !DILocation(line: 299, column: 9, scope: !6274)
!6346 = !DILocation(line: 299, column: 31, scope: !6274)
!6347 = !DILocation(line: 300, column: 40, scope: !6274)
!6348 = !DILocation(line: 300, column: 45, scope: !6274)
!6349 = !DILocation(line: 300, column: 43, scope: !6274)
!6350 = !DILocation(line: 300, column: 49, scope: !6274)
!6351 = !DILocation(line: 300, column: 48, scope: !6274)
!6352 = !DILocation(line: 300, column: 54, scope: !6274)
!6353 = !DILocation(line: 300, column: 61, scope: !6274)
!6354 = !DILocation(line: 300, column: 24, scope: !6274)
!6355 = !DILocation(line: 300, column: 23, scope: !6274)
!6356 = !DILocation(line: 300, column: 9, scope: !6274)
!6357 = !DILocation(line: 300, column: 31, scope: !6274)
!6358 = !DILocation(line: 301, column: 5, scope: !6274)
!6359 = !DILocation(line: 290, column: 20, scope: !6360)
!6360 = !DILexicalBlockFile(scope: !6270, file: !21, discriminator: 2)
!6361 = !DILocation(line: 290, column: 5, scope: !6360)
!6362 = distinct !{!6362, !6363}
!6363 = !DILocation(line: 290, column: 5, scope: !42)
!6364 = !DILocation(line: 302, column: 1, scope: !42)
!6365 = distinct !DISubprogram(name: "ff_h264_chroma_dc_dequant_idct_10_c", scope: !21, file: !21, line: 304, type: !30, isLocal: false, isDefinition: true, scopeLine: 304, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!6366 = !DILocalVariable(name: "_block", arg: 1, scope: !6365, file: !21, line: 304, type: !8)
!6367 = !DILocation(line: 304, column: 51, scope: !6365)
!6368 = !DILocalVariable(name: "qmul", arg: 2, scope: !6365, file: !21, line: 304, type: !12)
!6369 = !DILocation(line: 304, column: 63, scope: !6365)
!6370 = !DILocalVariable(name: "stride", scope: !6365, file: !21, line: 305, type: !468)
!6371 = !DILocation(line: 305, column: 15, scope: !6365)
!6372 = !DILocalVariable(name: "xStride", scope: !6365, file: !21, line: 306, type: !468)
!6373 = !DILocation(line: 306, column: 15, scope: !6365)
!6374 = !DILocalVariable(name: "a", scope: !6365, file: !21, line: 307, type: !11)
!6375 = !DILocation(line: 307, column: 14, scope: !6365)
!6376 = !DILocalVariable(name: "b", scope: !6365, file: !21, line: 307, type: !11)
!6377 = !DILocation(line: 307, column: 16, scope: !6365)
!6378 = !DILocalVariable(name: "c", scope: !6365, file: !21, line: 307, type: !11)
!6379 = !DILocation(line: 307, column: 18, scope: !6365)
!6380 = !DILocalVariable(name: "d", scope: !6365, file: !21, line: 307, type: !11)
!6381 = !DILocation(line: 307, column: 20, scope: !6365)
!6382 = !DILocalVariable(name: "e", scope: !6365, file: !21, line: 307, type: !11)
!6383 = !DILocation(line: 307, column: 22, scope: !6365)
!6384 = !DILocalVariable(name: "block", scope: !6365, file: !21, line: 308, type: !16)
!6385 = !DILocation(line: 308, column: 14, scope: !6365)
!6386 = !DILocation(line: 308, column: 32, scope: !6365)
!6387 = !DILocation(line: 308, column: 22, scope: !6365)
!6388 = !DILocation(line: 310, column: 8, scope: !6365)
!6389 = !DILocation(line: 310, column: 6, scope: !6365)
!6390 = !DILocation(line: 311, column: 8, scope: !6365)
!6391 = !DILocation(line: 311, column: 6, scope: !6365)
!6392 = !DILocation(line: 312, column: 8, scope: !6365)
!6393 = !DILocation(line: 312, column: 6, scope: !6365)
!6394 = !DILocation(line: 313, column: 8, scope: !6365)
!6395 = !DILocation(line: 313, column: 6, scope: !6365)
!6396 = !DILocation(line: 315, column: 8, scope: !6365)
!6397 = !DILocation(line: 315, column: 10, scope: !6365)
!6398 = !DILocation(line: 315, column: 9, scope: !6365)
!6399 = !DILocation(line: 315, column: 6, scope: !6365)
!6400 = !DILocation(line: 316, column: 8, scope: !6365)
!6401 = !DILocation(line: 316, column: 10, scope: !6365)
!6402 = !DILocation(line: 316, column: 9, scope: !6365)
!6403 = !DILocation(line: 316, column: 6, scope: !6365)
!6404 = !DILocation(line: 317, column: 8, scope: !6365)
!6405 = !DILocation(line: 317, column: 10, scope: !6365)
!6406 = !DILocation(line: 317, column: 9, scope: !6365)
!6407 = !DILocation(line: 317, column: 6, scope: !6365)
!6408 = !DILocation(line: 318, column: 8, scope: !6365)
!6409 = !DILocation(line: 318, column: 10, scope: !6365)
!6410 = !DILocation(line: 318, column: 9, scope: !6365)
!6411 = !DILocation(line: 318, column: 6, scope: !6365)
!6412 = !DILocation(line: 320, column: 41, scope: !6365)
!6413 = !DILocation(line: 320, column: 43, scope: !6365)
!6414 = !DILocation(line: 320, column: 42, scope: !6365)
!6415 = !DILocation(line: 320, column: 46, scope: !6365)
!6416 = !DILocation(line: 320, column: 45, scope: !6365)
!6417 = !DILocation(line: 320, column: 52, scope: !6365)
!6418 = !DILocation(line: 320, column: 5, scope: !6365)
!6419 = !DILocation(line: 320, column: 32, scope: !6365)
!6420 = !DILocation(line: 321, column: 41, scope: !6365)
!6421 = !DILocation(line: 321, column: 43, scope: !6365)
!6422 = !DILocation(line: 321, column: 42, scope: !6365)
!6423 = !DILocation(line: 321, column: 46, scope: !6365)
!6424 = !DILocation(line: 321, column: 45, scope: !6365)
!6425 = !DILocation(line: 321, column: 52, scope: !6365)
!6426 = !DILocation(line: 321, column: 5, scope: !6365)
!6427 = !DILocation(line: 321, column: 32, scope: !6365)
!6428 = !DILocation(line: 322, column: 41, scope: !6365)
!6429 = !DILocation(line: 322, column: 43, scope: !6365)
!6430 = !DILocation(line: 322, column: 42, scope: !6365)
!6431 = !DILocation(line: 322, column: 46, scope: !6365)
!6432 = !DILocation(line: 322, column: 45, scope: !6365)
!6433 = !DILocation(line: 322, column: 52, scope: !6365)
!6434 = !DILocation(line: 322, column: 5, scope: !6365)
!6435 = !DILocation(line: 322, column: 32, scope: !6365)
!6436 = !DILocation(line: 323, column: 41, scope: !6365)
!6437 = !DILocation(line: 323, column: 43, scope: !6365)
!6438 = !DILocation(line: 323, column: 42, scope: !6365)
!6439 = !DILocation(line: 323, column: 46, scope: !6365)
!6440 = !DILocation(line: 323, column: 45, scope: !6365)
!6441 = !DILocation(line: 323, column: 52, scope: !6365)
!6442 = !DILocation(line: 323, column: 5, scope: !6365)
!6443 = !DILocation(line: 323, column: 32, scope: !6365)
!6444 = !DILocation(line: 324, column: 1, scope: !6365)
!6445 = distinct !DISubprogram(name: "ff_h264_idct_add_12_c", scope: !21, file: !21, line: 33, type: !60, isLocal: false, isDefinition: true, scopeLine: 34, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!6446 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !6447)
!6447 = distinct !DILocation(line: 61, column: 28, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6449, file: !21, line: 54, column: 23)
!6449 = distinct !DILexicalBlock(scope: !6450, file: !21, line: 54, column: 5)
!6450 = distinct !DILexicalBlock(scope: !6445, file: !21, line: 54, column: 5)
!6451 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !6447)
!6452 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !6453)
!6453 = distinct !DILocation(line: 62, column: 28, scope: !6448)
!6454 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !6453)
!6455 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !6456)
!6456 = distinct !DILocation(line: 63, column: 28, scope: !6448)
!6457 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !6456)
!6458 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !6459)
!6459 = distinct !DILocation(line: 60, column: 28, scope: !6448)
!6460 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !6459)
!6461 = !DILocalVariable(name: "_dst", arg: 1, scope: !6445, file: !21, line: 33, type: !4)
!6462 = !DILocation(line: 33, column: 37, scope: !6445)
!6463 = !DILocalVariable(name: "_block", arg: 2, scope: !6445, file: !21, line: 33, type: !8)
!6464 = !DILocation(line: 33, column: 52, scope: !6445)
!6465 = !DILocalVariable(name: "stride", arg: 3, scope: !6445, file: !21, line: 33, type: !12)
!6466 = !DILocation(line: 33, column: 64, scope: !6445)
!6467 = !DILocalVariable(name: "i", scope: !6445, file: !21, line: 35, type: !12)
!6468 = !DILocation(line: 35, column: 9, scope: !6445)
!6469 = !DILocalVariable(name: "dst", scope: !6445, file: !21, line: 36, type: !13)
!6470 = !DILocation(line: 36, column: 15, scope: !6445)
!6471 = !DILocation(line: 36, column: 32, scope: !6445)
!6472 = !DILocation(line: 36, column: 21, scope: !6445)
!6473 = !DILocalVariable(name: "block", scope: !6445, file: !21, line: 37, type: !16)
!6474 = !DILocation(line: 37, column: 14, scope: !6445)
!6475 = !DILocation(line: 37, column: 32, scope: !6445)
!6476 = !DILocation(line: 37, column: 22, scope: !6445)
!6477 = !DILocation(line: 38, column: 12, scope: !6445)
!6478 = !DILocation(line: 40, column: 5, scope: !6445)
!6479 = !DILocation(line: 40, column: 14, scope: !6445)
!6480 = !DILocation(line: 42, column: 10, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6445, file: !21, line: 42, column: 5)
!6482 = !DILocation(line: 42, column: 9, scope: !6481)
!6483 = !DILocation(line: 42, column: 14, scope: !6484)
!6484 = !DILexicalBlockFile(scope: !6485, file: !21, discriminator: 1)
!6485 = distinct !DILexicalBlock(scope: !6481, file: !21, line: 42, column: 5)
!6486 = !DILocation(line: 42, column: 15, scope: !6484)
!6487 = !DILocation(line: 42, column: 5, scope: !6484)
!6488 = !DILocalVariable(name: "z0", scope: !6489, file: !21, line: 43, type: !106)
!6489 = distinct !DILexicalBlock(scope: !6485, file: !21, line: 42, column: 23)
!6490 = !DILocation(line: 43, column: 24, scope: !6489)
!6491 = !DILocation(line: 43, column: 34, scope: !6489)
!6492 = !DILocation(line: 43, column: 36, scope: !6489)
!6493 = !DILocation(line: 43, column: 28, scope: !6489)
!6494 = !DILocation(line: 43, column: 61, scope: !6489)
!6495 = !DILocation(line: 43, column: 63, scope: !6489)
!6496 = !DILocation(line: 43, column: 55, scope: !6489)
!6497 = !DILocation(line: 43, column: 43, scope: !6489)
!6498 = !DILocalVariable(name: "z1", scope: !6489, file: !21, line: 44, type: !106)
!6499 = !DILocation(line: 44, column: 24, scope: !6489)
!6500 = !DILocation(line: 44, column: 34, scope: !6489)
!6501 = !DILocation(line: 44, column: 36, scope: !6489)
!6502 = !DILocation(line: 44, column: 28, scope: !6489)
!6503 = !DILocation(line: 44, column: 61, scope: !6489)
!6504 = !DILocation(line: 44, column: 63, scope: !6489)
!6505 = !DILocation(line: 44, column: 55, scope: !6489)
!6506 = !DILocation(line: 44, column: 43, scope: !6489)
!6507 = !DILocalVariable(name: "z2", scope: !6489, file: !21, line: 45, type: !106)
!6508 = !DILocation(line: 45, column: 24, scope: !6489)
!6509 = !DILocation(line: 45, column: 35, scope: !6489)
!6510 = !DILocation(line: 45, column: 37, scope: !6489)
!6511 = !DILocation(line: 45, column: 29, scope: !6489)
!6512 = !DILocation(line: 45, column: 43, scope: !6489)
!6513 = !DILocation(line: 45, column: 66, scope: !6489)
!6514 = !DILocation(line: 45, column: 68, scope: !6489)
!6515 = !DILocation(line: 45, column: 60, scope: !6489)
!6516 = !DILocation(line: 45, column: 48, scope: !6489)
!6517 = !DILocalVariable(name: "z3", scope: !6489, file: !21, line: 46, type: !106)
!6518 = !DILocation(line: 46, column: 24, scope: !6489)
!6519 = !DILocation(line: 46, column: 34, scope: !6489)
!6520 = !DILocation(line: 46, column: 36, scope: !6489)
!6521 = !DILocation(line: 46, column: 28, scope: !6489)
!6522 = !DILocation(line: 46, column: 62, scope: !6489)
!6523 = !DILocation(line: 46, column: 64, scope: !6489)
!6524 = !DILocation(line: 46, column: 56, scope: !6489)
!6525 = !DILocation(line: 46, column: 70, scope: !6489)
!6526 = !DILocation(line: 46, column: 43, scope: !6489)
!6527 = !DILocation(line: 48, column: 25, scope: !6489)
!6528 = !DILocation(line: 48, column: 30, scope: !6489)
!6529 = !DILocation(line: 48, column: 28, scope: !6489)
!6530 = !DILocation(line: 48, column: 15, scope: !6489)
!6531 = !DILocation(line: 48, column: 17, scope: !6489)
!6532 = !DILocation(line: 48, column: 9, scope: !6489)
!6533 = !DILocation(line: 48, column: 23, scope: !6489)
!6534 = !DILocation(line: 49, column: 25, scope: !6489)
!6535 = !DILocation(line: 49, column: 30, scope: !6489)
!6536 = !DILocation(line: 49, column: 28, scope: !6489)
!6537 = !DILocation(line: 49, column: 15, scope: !6489)
!6538 = !DILocation(line: 49, column: 17, scope: !6489)
!6539 = !DILocation(line: 49, column: 9, scope: !6489)
!6540 = !DILocation(line: 49, column: 23, scope: !6489)
!6541 = !DILocation(line: 50, column: 25, scope: !6489)
!6542 = !DILocation(line: 50, column: 30, scope: !6489)
!6543 = !DILocation(line: 50, column: 28, scope: !6489)
!6544 = !DILocation(line: 50, column: 15, scope: !6489)
!6545 = !DILocation(line: 50, column: 17, scope: !6489)
!6546 = !DILocation(line: 50, column: 9, scope: !6489)
!6547 = !DILocation(line: 50, column: 23, scope: !6489)
!6548 = !DILocation(line: 51, column: 25, scope: !6489)
!6549 = !DILocation(line: 51, column: 30, scope: !6489)
!6550 = !DILocation(line: 51, column: 28, scope: !6489)
!6551 = !DILocation(line: 51, column: 15, scope: !6489)
!6552 = !DILocation(line: 51, column: 17, scope: !6489)
!6553 = !DILocation(line: 51, column: 9, scope: !6489)
!6554 = !DILocation(line: 51, column: 23, scope: !6489)
!6555 = !DILocation(line: 52, column: 5, scope: !6489)
!6556 = !DILocation(line: 42, column: 20, scope: !6557)
!6557 = !DILexicalBlockFile(scope: !6485, file: !21, discriminator: 2)
!6558 = !DILocation(line: 42, column: 5, scope: !6557)
!6559 = distinct !{!6559, !6560}
!6560 = !DILocation(line: 42, column: 5, scope: !6445)
!6561 = !DILocation(line: 54, column: 10, scope: !6450)
!6562 = !DILocation(line: 54, column: 9, scope: !6450)
!6563 = !DILocation(line: 54, column: 14, scope: !6564)
!6564 = !DILexicalBlockFile(scope: !6449, file: !21, discriminator: 1)
!6565 = !DILocation(line: 54, column: 15, scope: !6564)
!6566 = !DILocation(line: 54, column: 5, scope: !6564)
!6567 = !DILocalVariable(name: "z0", scope: !6448, file: !21, line: 55, type: !106)
!6568 = !DILocation(line: 55, column: 24, scope: !6448)
!6569 = !DILocation(line: 55, column: 40, scope: !6448)
!6570 = !DILocation(line: 55, column: 39, scope: !6448)
!6571 = !DILocation(line: 55, column: 36, scope: !6448)
!6572 = !DILocation(line: 55, column: 28, scope: !6448)
!6573 = !DILocation(line: 55, column: 67, scope: !6448)
!6574 = !DILocation(line: 55, column: 66, scope: !6448)
!6575 = !DILocation(line: 55, column: 63, scope: !6448)
!6576 = !DILocation(line: 55, column: 55, scope: !6448)
!6577 = !DILocation(line: 55, column: 43, scope: !6448)
!6578 = !DILocalVariable(name: "z1", scope: !6448, file: !21, line: 56, type: !106)
!6579 = !DILocation(line: 56, column: 24, scope: !6448)
!6580 = !DILocation(line: 56, column: 40, scope: !6448)
!6581 = !DILocation(line: 56, column: 39, scope: !6448)
!6582 = !DILocation(line: 56, column: 36, scope: !6448)
!6583 = !DILocation(line: 56, column: 28, scope: !6448)
!6584 = !DILocation(line: 56, column: 67, scope: !6448)
!6585 = !DILocation(line: 56, column: 66, scope: !6448)
!6586 = !DILocation(line: 56, column: 63, scope: !6448)
!6587 = !DILocation(line: 56, column: 55, scope: !6448)
!6588 = !DILocation(line: 56, column: 43, scope: !6448)
!6589 = !DILocalVariable(name: "z2", scope: !6448, file: !21, line: 57, type: !106)
!6590 = !DILocation(line: 57, column: 24, scope: !6448)
!6591 = !DILocation(line: 57, column: 41, scope: !6448)
!6592 = !DILocation(line: 57, column: 40, scope: !6448)
!6593 = !DILocation(line: 57, column: 37, scope: !6448)
!6594 = !DILocation(line: 57, column: 29, scope: !6448)
!6595 = !DILocation(line: 57, column: 43, scope: !6448)
!6596 = !DILocation(line: 57, column: 72, scope: !6448)
!6597 = !DILocation(line: 57, column: 71, scope: !6448)
!6598 = !DILocation(line: 57, column: 68, scope: !6448)
!6599 = !DILocation(line: 57, column: 60, scope: !6448)
!6600 = !DILocation(line: 57, column: 48, scope: !6448)
!6601 = !DILocalVariable(name: "z3", scope: !6448, file: !21, line: 58, type: !106)
!6602 = !DILocation(line: 58, column: 24, scope: !6448)
!6603 = !DILocation(line: 58, column: 40, scope: !6448)
!6604 = !DILocation(line: 58, column: 39, scope: !6448)
!6605 = !DILocation(line: 58, column: 36, scope: !6448)
!6606 = !DILocation(line: 58, column: 28, scope: !6448)
!6607 = !DILocation(line: 58, column: 68, scope: !6448)
!6608 = !DILocation(line: 58, column: 67, scope: !6448)
!6609 = !DILocation(line: 58, column: 64, scope: !6448)
!6610 = !DILocation(line: 58, column: 56, scope: !6448)
!6611 = !DILocation(line: 58, column: 70, scope: !6448)
!6612 = !DILocation(line: 58, column: 43, scope: !6448)
!6613 = !DILocation(line: 60, column: 49, scope: !6448)
!6614 = !DILocation(line: 60, column: 55, scope: !6448)
!6615 = !DILocation(line: 60, column: 54, scope: !6448)
!6616 = !DILocation(line: 60, column: 51, scope: !6448)
!6617 = !DILocation(line: 60, column: 45, scope: !6448)
!6618 = !DILocation(line: 60, column: 72, scope: !6448)
!6619 = !DILocation(line: 60, column: 77, scope: !6448)
!6620 = !DILocation(line: 60, column: 75, scope: !6448)
!6621 = !DILocation(line: 60, column: 81, scope: !6448)
!6622 = !DILocation(line: 60, column: 63, scope: !6448)
!6623 = !DILocation(line: 60, column: 28, scope: !6448)
!6624 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !6459)
!6625 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !6459)
!6626 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !6459)
!6627 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !6459)
!6628 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !6459)
!6629 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !6459)
!6630 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !6459)
!6631 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !6459)
!6632 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !6459)
!6633 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !6459)
!6634 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !6459)
!6635 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !6459)
!6636 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !6459)
!6637 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !6459)
!6638 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !6459)
!6639 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !6459)
!6640 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !6459)
!6641 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !6459)
!6642 = !DILocation(line: 60, column: 13, scope: !6448)
!6643 = !DILocation(line: 60, column: 19, scope: !6448)
!6644 = !DILocation(line: 60, column: 18, scope: !6448)
!6645 = !DILocation(line: 60, column: 15, scope: !6448)
!6646 = !DILocation(line: 60, column: 9, scope: !6448)
!6647 = !DILocation(line: 60, column: 26, scope: !6448)
!6648 = !DILocation(line: 61, column: 49, scope: !6448)
!6649 = !DILocation(line: 61, column: 55, scope: !6448)
!6650 = !DILocation(line: 61, column: 54, scope: !6448)
!6651 = !DILocation(line: 61, column: 51, scope: !6448)
!6652 = !DILocation(line: 61, column: 45, scope: !6448)
!6653 = !DILocation(line: 61, column: 72, scope: !6448)
!6654 = !DILocation(line: 61, column: 77, scope: !6448)
!6655 = !DILocation(line: 61, column: 75, scope: !6448)
!6656 = !DILocation(line: 61, column: 81, scope: !6448)
!6657 = !DILocation(line: 61, column: 63, scope: !6448)
!6658 = !DILocation(line: 61, column: 28, scope: !6448)
!6659 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !6447)
!6660 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !6447)
!6661 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !6447)
!6662 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !6447)
!6663 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !6447)
!6664 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !6447)
!6665 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !6447)
!6666 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !6447)
!6667 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !6447)
!6668 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !6447)
!6669 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !6447)
!6670 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !6447)
!6671 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !6447)
!6672 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !6447)
!6673 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !6447)
!6674 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !6447)
!6675 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !6447)
!6676 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !6447)
!6677 = !DILocation(line: 61, column: 13, scope: !6448)
!6678 = !DILocation(line: 61, column: 19, scope: !6448)
!6679 = !DILocation(line: 61, column: 18, scope: !6448)
!6680 = !DILocation(line: 61, column: 15, scope: !6448)
!6681 = !DILocation(line: 61, column: 9, scope: !6448)
!6682 = !DILocation(line: 61, column: 26, scope: !6448)
!6683 = !DILocation(line: 62, column: 49, scope: !6448)
!6684 = !DILocation(line: 62, column: 55, scope: !6448)
!6685 = !DILocation(line: 62, column: 54, scope: !6448)
!6686 = !DILocation(line: 62, column: 51, scope: !6448)
!6687 = !DILocation(line: 62, column: 45, scope: !6448)
!6688 = !DILocation(line: 62, column: 72, scope: !6448)
!6689 = !DILocation(line: 62, column: 77, scope: !6448)
!6690 = !DILocation(line: 62, column: 75, scope: !6448)
!6691 = !DILocation(line: 62, column: 81, scope: !6448)
!6692 = !DILocation(line: 62, column: 63, scope: !6448)
!6693 = !DILocation(line: 62, column: 28, scope: !6448)
!6694 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !6453)
!6695 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !6453)
!6696 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !6453)
!6697 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !6453)
!6698 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !6453)
!6699 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !6453)
!6700 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !6453)
!6701 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !6453)
!6702 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !6453)
!6703 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !6453)
!6704 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !6453)
!6705 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !6453)
!6706 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !6453)
!6707 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !6453)
!6708 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !6453)
!6709 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !6453)
!6710 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !6453)
!6711 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !6453)
!6712 = !DILocation(line: 62, column: 13, scope: !6448)
!6713 = !DILocation(line: 62, column: 19, scope: !6448)
!6714 = !DILocation(line: 62, column: 18, scope: !6448)
!6715 = !DILocation(line: 62, column: 15, scope: !6448)
!6716 = !DILocation(line: 62, column: 9, scope: !6448)
!6717 = !DILocation(line: 62, column: 26, scope: !6448)
!6718 = !DILocation(line: 63, column: 49, scope: !6448)
!6719 = !DILocation(line: 63, column: 55, scope: !6448)
!6720 = !DILocation(line: 63, column: 54, scope: !6448)
!6721 = !DILocation(line: 63, column: 51, scope: !6448)
!6722 = !DILocation(line: 63, column: 45, scope: !6448)
!6723 = !DILocation(line: 63, column: 72, scope: !6448)
!6724 = !DILocation(line: 63, column: 77, scope: !6448)
!6725 = !DILocation(line: 63, column: 75, scope: !6448)
!6726 = !DILocation(line: 63, column: 81, scope: !6448)
!6727 = !DILocation(line: 63, column: 63, scope: !6448)
!6728 = !DILocation(line: 63, column: 28, scope: !6448)
!6729 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !6456)
!6730 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !6456)
!6731 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !6456)
!6732 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !6456)
!6733 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !6456)
!6734 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !6456)
!6735 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !6456)
!6736 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !6456)
!6737 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !6456)
!6738 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !6456)
!6739 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !6456)
!6740 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !6456)
!6741 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !6456)
!6742 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !6456)
!6743 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !6456)
!6744 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !6456)
!6745 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !6456)
!6746 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !6456)
!6747 = !DILocation(line: 63, column: 13, scope: !6448)
!6748 = !DILocation(line: 63, column: 19, scope: !6448)
!6749 = !DILocation(line: 63, column: 18, scope: !6448)
!6750 = !DILocation(line: 63, column: 15, scope: !6448)
!6751 = !DILocation(line: 63, column: 9, scope: !6448)
!6752 = !DILocation(line: 63, column: 26, scope: !6448)
!6753 = !DILocation(line: 64, column: 5, scope: !6448)
!6754 = !DILocation(line: 54, column: 20, scope: !6755)
!6755 = !DILexicalBlockFile(scope: !6449, file: !21, discriminator: 2)
!6756 = !DILocation(line: 54, column: 5, scope: !6755)
!6757 = distinct !{!6757, !6758}
!6758 = !DILocation(line: 54, column: 5, scope: !6445)
!6759 = !DILocation(line: 66, column: 12, scope: !6445)
!6760 = !DILocation(line: 66, column: 5, scope: !6445)
!6761 = !DILocation(line: 67, column: 1, scope: !6445)
!6762 = distinct !DISubprogram(name: "ff_h264_idct8_add_12_c", scope: !21, file: !21, line: 69, type: !60, isLocal: false, isDefinition: true, scopeLine: 69, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!6763 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !6764)
!6764 = distinct !DILocation(line: 131, column: 29, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6766, file: !21, line: 109, column: 5)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !21, line: 108, column: 5)
!6767 = distinct !DILexicalBlock(scope: !6762, file: !21, line: 108, column: 5)
!6768 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !6764)
!6769 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !6770)
!6770 = distinct !DILocation(line: 132, column: 29, scope: !6765)
!6771 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !6770)
!6772 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !6773)
!6773 = distinct !DILocation(line: 133, column: 29, scope: !6765)
!6774 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !6773)
!6775 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !6776)
!6776 = distinct !DILocation(line: 134, column: 29, scope: !6765)
!6777 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !6776)
!6778 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !6779)
!6779 = distinct !DILocation(line: 135, column: 29, scope: !6765)
!6780 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !6779)
!6781 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !6782)
!6782 = distinct !DILocation(line: 136, column: 29, scope: !6765)
!6783 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !6782)
!6784 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !6785)
!6785 = distinct !DILocation(line: 137, column: 29, scope: !6765)
!6786 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !6785)
!6787 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !6788)
!6788 = distinct !DILocation(line: 130, column: 29, scope: !6765)
!6789 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !6788)
!6790 = !DILocalVariable(name: "_dst", arg: 1, scope: !6762, file: !21, line: 69, type: !4)
!6791 = !DILocation(line: 69, column: 38, scope: !6762)
!6792 = !DILocalVariable(name: "_block", arg: 2, scope: !6762, file: !21, line: 69, type: !8)
!6793 = !DILocation(line: 69, column: 53, scope: !6762)
!6794 = !DILocalVariable(name: "stride", arg: 3, scope: !6762, file: !21, line: 69, type: !12)
!6795 = !DILocation(line: 69, column: 65, scope: !6762)
!6796 = !DILocalVariable(name: "i", scope: !6762, file: !21, line: 70, type: !12)
!6797 = !DILocation(line: 70, column: 9, scope: !6762)
!6798 = !DILocalVariable(name: "dst", scope: !6762, file: !21, line: 71, type: !13)
!6799 = !DILocation(line: 71, column: 15, scope: !6762)
!6800 = !DILocation(line: 71, column: 32, scope: !6762)
!6801 = !DILocation(line: 71, column: 21, scope: !6762)
!6802 = !DILocalVariable(name: "block", scope: !6762, file: !21, line: 72, type: !16)
!6803 = !DILocation(line: 72, column: 14, scope: !6762)
!6804 = !DILocation(line: 72, column: 32, scope: !6762)
!6805 = !DILocation(line: 72, column: 22, scope: !6762)
!6806 = !DILocation(line: 73, column: 12, scope: !6762)
!6807 = !DILocation(line: 75, column: 5, scope: !6762)
!6808 = !DILocation(line: 75, column: 14, scope: !6762)
!6809 = !DILocation(line: 77, column: 12, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6762, file: !21, line: 77, column: 5)
!6811 = !DILocation(line: 77, column: 10, scope: !6810)
!6812 = !DILocation(line: 77, column: 17, scope: !6813)
!6813 = !DILexicalBlockFile(scope: !6814, file: !21, discriminator: 1)
!6814 = distinct !DILexicalBlock(scope: !6810, file: !21, line: 77, column: 5)
!6815 = !DILocation(line: 77, column: 19, scope: !6813)
!6816 = !DILocation(line: 77, column: 5, scope: !6813)
!6817 = !DILocalVariable(name: "a0", scope: !6818, file: !21, line: 79, type: !106)
!6818 = distinct !DILexicalBlock(scope: !6814, file: !21, line: 78, column: 5)
!6819 = !DILocation(line: 79, column: 28, scope: !6818)
!6820 = !DILocation(line: 79, column: 39, scope: !6818)
!6821 = !DILocation(line: 79, column: 40, scope: !6818)
!6822 = !DILocation(line: 79, column: 33, scope: !6818)
!6823 = !DILocation(line: 79, column: 64, scope: !6818)
!6824 = !DILocation(line: 79, column: 65, scope: !6818)
!6825 = !DILocation(line: 79, column: 58, scope: !6818)
!6826 = !DILocation(line: 79, column: 46, scope: !6818)
!6827 = !DILocalVariable(name: "a2", scope: !6818, file: !21, line: 80, type: !106)
!6828 = !DILocation(line: 80, column: 28, scope: !6818)
!6829 = !DILocation(line: 80, column: 39, scope: !6818)
!6830 = !DILocation(line: 80, column: 40, scope: !6818)
!6831 = !DILocation(line: 80, column: 33, scope: !6818)
!6832 = !DILocation(line: 80, column: 64, scope: !6818)
!6833 = !DILocation(line: 80, column: 65, scope: !6818)
!6834 = !DILocation(line: 80, column: 58, scope: !6818)
!6835 = !DILocation(line: 80, column: 46, scope: !6818)
!6836 = !DILocalVariable(name: "a4", scope: !6818, file: !21, line: 81, type: !106)
!6837 = !DILocation(line: 81, column: 28, scope: !6818)
!6838 = !DILocation(line: 81, column: 40, scope: !6818)
!6839 = !DILocation(line: 81, column: 41, scope: !6818)
!6840 = !DILocation(line: 81, column: 34, scope: !6818)
!6841 = !DILocation(line: 81, column: 46, scope: !6818)
!6842 = !DILocation(line: 81, column: 69, scope: !6818)
!6843 = !DILocation(line: 81, column: 70, scope: !6818)
!6844 = !DILocation(line: 81, column: 63, scope: !6818)
!6845 = !DILocation(line: 81, column: 51, scope: !6818)
!6846 = !DILocalVariable(name: "a6", scope: !6818, file: !21, line: 82, type: !106)
!6847 = !DILocation(line: 82, column: 28, scope: !6818)
!6848 = !DILocation(line: 82, column: 40, scope: !6818)
!6849 = !DILocation(line: 82, column: 41, scope: !6818)
!6850 = !DILocation(line: 82, column: 34, scope: !6818)
!6851 = !DILocation(line: 82, column: 46, scope: !6818)
!6852 = !DILocation(line: 82, column: 69, scope: !6818)
!6853 = !DILocation(line: 82, column: 70, scope: !6818)
!6854 = !DILocation(line: 82, column: 63, scope: !6818)
!6855 = !DILocation(line: 82, column: 51, scope: !6818)
!6856 = !DILocalVariable(name: "b0", scope: !6818, file: !21, line: 84, type: !106)
!6857 = !DILocation(line: 84, column: 28, scope: !6818)
!6858 = !DILocation(line: 84, column: 33, scope: !6818)
!6859 = !DILocation(line: 84, column: 38, scope: !6818)
!6860 = !DILocation(line: 84, column: 36, scope: !6818)
!6861 = !DILocalVariable(name: "b2", scope: !6818, file: !21, line: 85, type: !106)
!6862 = !DILocation(line: 85, column: 28, scope: !6818)
!6863 = !DILocation(line: 85, column: 33, scope: !6818)
!6864 = !DILocation(line: 85, column: 38, scope: !6818)
!6865 = !DILocation(line: 85, column: 36, scope: !6818)
!6866 = !DILocalVariable(name: "b4", scope: !6818, file: !21, line: 86, type: !106)
!6867 = !DILocation(line: 86, column: 28, scope: !6818)
!6868 = !DILocation(line: 86, column: 33, scope: !6818)
!6869 = !DILocation(line: 86, column: 38, scope: !6818)
!6870 = !DILocation(line: 86, column: 36, scope: !6818)
!6871 = !DILocalVariable(name: "b6", scope: !6818, file: !21, line: 87, type: !106)
!6872 = !DILocation(line: 87, column: 28, scope: !6818)
!6873 = !DILocation(line: 87, column: 33, scope: !6818)
!6874 = !DILocation(line: 87, column: 38, scope: !6818)
!6875 = !DILocation(line: 87, column: 36, scope: !6818)
!6876 = !DILocalVariable(name: "a1", scope: !6818, file: !21, line: 89, type: !468)
!6877 = !DILocation(line: 89, column: 19, scope: !6818)
!6878 = !DILocation(line: 89, column: 31, scope: !6818)
!6879 = !DILocation(line: 89, column: 32, scope: !6818)
!6880 = !DILocation(line: 89, column: 25, scope: !6818)
!6881 = !DILocation(line: 89, column: 24, scope: !6818)
!6882 = !DILocation(line: 89, column: 56, scope: !6818)
!6883 = !DILocation(line: 89, column: 57, scope: !6818)
!6884 = !DILocation(line: 89, column: 50, scope: !6818)
!6885 = !DILocation(line: 89, column: 38, scope: !6818)
!6886 = !DILocation(line: 89, column: 71, scope: !6818)
!6887 = !DILocation(line: 89, column: 72, scope: !6818)
!6888 = !DILocation(line: 89, column: 65, scope: !6818)
!6889 = !DILocation(line: 89, column: 63, scope: !6818)
!6890 = !DILocation(line: 89, column: 87, scope: !6818)
!6891 = !DILocation(line: 89, column: 88, scope: !6818)
!6892 = !DILocation(line: 89, column: 81, scope: !6818)
!6893 = !DILocation(line: 89, column: 93, scope: !6818)
!6894 = !DILocation(line: 89, column: 78, scope: !6818)
!6895 = !DILocalVariable(name: "a3", scope: !6818, file: !21, line: 90, type: !468)
!6896 = !DILocation(line: 90, column: 19, scope: !6818)
!6897 = !DILocation(line: 90, column: 30, scope: !6818)
!6898 = !DILocation(line: 90, column: 31, scope: !6818)
!6899 = !DILocation(line: 90, column: 24, scope: !6818)
!6900 = !DILocation(line: 90, column: 55, scope: !6818)
!6901 = !DILocation(line: 90, column: 56, scope: !6818)
!6902 = !DILocation(line: 90, column: 49, scope: !6818)
!6903 = !DILocation(line: 90, column: 37, scope: !6818)
!6904 = !DILocation(line: 90, column: 70, scope: !6818)
!6905 = !DILocation(line: 90, column: 71, scope: !6818)
!6906 = !DILocation(line: 90, column: 64, scope: !6818)
!6907 = !DILocation(line: 90, column: 62, scope: !6818)
!6908 = !DILocation(line: 90, column: 86, scope: !6818)
!6909 = !DILocation(line: 90, column: 87, scope: !6818)
!6910 = !DILocation(line: 90, column: 80, scope: !6818)
!6911 = !DILocation(line: 90, column: 92, scope: !6818)
!6912 = !DILocation(line: 90, column: 77, scope: !6818)
!6913 = !DILocalVariable(name: "a5", scope: !6818, file: !21, line: 91, type: !468)
!6914 = !DILocation(line: 91, column: 19, scope: !6818)
!6915 = !DILocation(line: 91, column: 31, scope: !6818)
!6916 = !DILocation(line: 91, column: 32, scope: !6818)
!6917 = !DILocation(line: 91, column: 25, scope: !6818)
!6918 = !DILocation(line: 91, column: 24, scope: !6818)
!6919 = !DILocation(line: 91, column: 56, scope: !6818)
!6920 = !DILocation(line: 91, column: 57, scope: !6818)
!6921 = !DILocation(line: 91, column: 50, scope: !6818)
!6922 = !DILocation(line: 91, column: 38, scope: !6818)
!6923 = !DILocation(line: 91, column: 71, scope: !6818)
!6924 = !DILocation(line: 91, column: 72, scope: !6818)
!6925 = !DILocation(line: 91, column: 65, scope: !6818)
!6926 = !DILocation(line: 91, column: 63, scope: !6818)
!6927 = !DILocation(line: 91, column: 87, scope: !6818)
!6928 = !DILocation(line: 91, column: 88, scope: !6818)
!6929 = !DILocation(line: 91, column: 81, scope: !6818)
!6930 = !DILocation(line: 91, column: 93, scope: !6818)
!6931 = !DILocation(line: 91, column: 78, scope: !6818)
!6932 = !DILocalVariable(name: "a7", scope: !6818, file: !21, line: 92, type: !468)
!6933 = !DILocation(line: 92, column: 19, scope: !6818)
!6934 = !DILocation(line: 92, column: 30, scope: !6818)
!6935 = !DILocation(line: 92, column: 31, scope: !6818)
!6936 = !DILocation(line: 92, column: 24, scope: !6818)
!6937 = !DILocation(line: 92, column: 55, scope: !6818)
!6938 = !DILocation(line: 92, column: 56, scope: !6818)
!6939 = !DILocation(line: 92, column: 49, scope: !6818)
!6940 = !DILocation(line: 92, column: 37, scope: !6818)
!6941 = !DILocation(line: 92, column: 70, scope: !6818)
!6942 = !DILocation(line: 92, column: 71, scope: !6818)
!6943 = !DILocation(line: 92, column: 64, scope: !6818)
!6944 = !DILocation(line: 92, column: 62, scope: !6818)
!6945 = !DILocation(line: 92, column: 86, scope: !6818)
!6946 = !DILocation(line: 92, column: 87, scope: !6818)
!6947 = !DILocation(line: 92, column: 80, scope: !6818)
!6948 = !DILocation(line: 92, column: 92, scope: !6818)
!6949 = !DILocation(line: 92, column: 77, scope: !6818)
!6950 = !DILocalVariable(name: "b1", scope: !6818, file: !21, line: 94, type: !468)
!6951 = !DILocation(line: 94, column: 19, scope: !6818)
!6952 = !DILocation(line: 94, column: 25, scope: !6818)
!6953 = !DILocation(line: 94, column: 27, scope: !6818)
!6954 = !DILocation(line: 94, column: 44, scope: !6818)
!6955 = !DILocation(line: 94, column: 32, scope: !6818)
!6956 = !DILocalVariable(name: "b3", scope: !6818, file: !21, line: 95, type: !468)
!6957 = !DILocation(line: 95, column: 19, scope: !6818)
!6958 = !DILocation(line: 95, column: 34, scope: !6818)
!6959 = !DILocation(line: 95, column: 40, scope: !6818)
!6960 = !DILocation(line: 95, column: 42, scope: !6818)
!6961 = !DILocation(line: 95, column: 37, scope: !6818)
!6962 = !DILocalVariable(name: "b5", scope: !6818, file: !21, line: 96, type: !468)
!6963 = !DILocation(line: 96, column: 19, scope: !6818)
!6964 = !DILocation(line: 96, column: 25, scope: !6818)
!6965 = !DILocation(line: 96, column: 27, scope: !6818)
!6966 = !DILocation(line: 96, column: 44, scope: !6818)
!6967 = !DILocation(line: 96, column: 32, scope: !6818)
!6968 = !DILocalVariable(name: "b7", scope: !6818, file: !21, line: 97, type: !468)
!6969 = !DILocation(line: 97, column: 19, scope: !6818)
!6970 = !DILocation(line: 97, column: 34, scope: !6818)
!6971 = !DILocation(line: 97, column: 40, scope: !6818)
!6972 = !DILocation(line: 97, column: 42, scope: !6818)
!6973 = !DILocation(line: 97, column: 37, scope: !6818)
!6974 = !DILocation(line: 99, column: 24, scope: !6818)
!6975 = !DILocation(line: 99, column: 29, scope: !6818)
!6976 = !DILocation(line: 99, column: 27, scope: !6818)
!6977 = !DILocation(line: 99, column: 15, scope: !6818)
!6978 = !DILocation(line: 99, column: 16, scope: !6818)
!6979 = !DILocation(line: 99, column: 9, scope: !6818)
!6980 = !DILocation(line: 99, column: 22, scope: !6818)
!6981 = !DILocation(line: 100, column: 24, scope: !6818)
!6982 = !DILocation(line: 100, column: 29, scope: !6818)
!6983 = !DILocation(line: 100, column: 27, scope: !6818)
!6984 = !DILocation(line: 100, column: 15, scope: !6818)
!6985 = !DILocation(line: 100, column: 16, scope: !6818)
!6986 = !DILocation(line: 100, column: 9, scope: !6818)
!6987 = !DILocation(line: 100, column: 22, scope: !6818)
!6988 = !DILocation(line: 101, column: 24, scope: !6818)
!6989 = !DILocation(line: 101, column: 29, scope: !6818)
!6990 = !DILocation(line: 101, column: 27, scope: !6818)
!6991 = !DILocation(line: 101, column: 15, scope: !6818)
!6992 = !DILocation(line: 101, column: 16, scope: !6818)
!6993 = !DILocation(line: 101, column: 9, scope: !6818)
!6994 = !DILocation(line: 101, column: 22, scope: !6818)
!6995 = !DILocation(line: 102, column: 24, scope: !6818)
!6996 = !DILocation(line: 102, column: 29, scope: !6818)
!6997 = !DILocation(line: 102, column: 27, scope: !6818)
!6998 = !DILocation(line: 102, column: 15, scope: !6818)
!6999 = !DILocation(line: 102, column: 16, scope: !6818)
!7000 = !DILocation(line: 102, column: 9, scope: !6818)
!7001 = !DILocation(line: 102, column: 22, scope: !6818)
!7002 = !DILocation(line: 103, column: 24, scope: !6818)
!7003 = !DILocation(line: 103, column: 29, scope: !6818)
!7004 = !DILocation(line: 103, column: 27, scope: !6818)
!7005 = !DILocation(line: 103, column: 15, scope: !6818)
!7006 = !DILocation(line: 103, column: 16, scope: !6818)
!7007 = !DILocation(line: 103, column: 9, scope: !6818)
!7008 = !DILocation(line: 103, column: 22, scope: !6818)
!7009 = !DILocation(line: 104, column: 24, scope: !6818)
!7010 = !DILocation(line: 104, column: 29, scope: !6818)
!7011 = !DILocation(line: 104, column: 27, scope: !6818)
!7012 = !DILocation(line: 104, column: 15, scope: !6818)
!7013 = !DILocation(line: 104, column: 16, scope: !6818)
!7014 = !DILocation(line: 104, column: 9, scope: !6818)
!7015 = !DILocation(line: 104, column: 22, scope: !6818)
!7016 = !DILocation(line: 105, column: 24, scope: !6818)
!7017 = !DILocation(line: 105, column: 29, scope: !6818)
!7018 = !DILocation(line: 105, column: 27, scope: !6818)
!7019 = !DILocation(line: 105, column: 15, scope: !6818)
!7020 = !DILocation(line: 105, column: 16, scope: !6818)
!7021 = !DILocation(line: 105, column: 9, scope: !6818)
!7022 = !DILocation(line: 105, column: 22, scope: !6818)
!7023 = !DILocation(line: 106, column: 24, scope: !6818)
!7024 = !DILocation(line: 106, column: 29, scope: !6818)
!7025 = !DILocation(line: 106, column: 27, scope: !6818)
!7026 = !DILocation(line: 106, column: 15, scope: !6818)
!7027 = !DILocation(line: 106, column: 16, scope: !6818)
!7028 = !DILocation(line: 106, column: 9, scope: !6818)
!7029 = !DILocation(line: 106, column: 22, scope: !6818)
!7030 = !DILocation(line: 107, column: 5, scope: !6818)
!7031 = !DILocation(line: 77, column: 25, scope: !7032)
!7032 = !DILexicalBlockFile(scope: !6814, file: !21, discriminator: 2)
!7033 = !DILocation(line: 77, column: 5, scope: !7032)
!7034 = distinct !{!7034, !7035}
!7035 = !DILocation(line: 77, column: 5, scope: !6762)
!7036 = !DILocation(line: 108, column: 12, scope: !6767)
!7037 = !DILocation(line: 108, column: 10, scope: !6767)
!7038 = !DILocation(line: 108, column: 17, scope: !7039)
!7039 = !DILexicalBlockFile(scope: !6766, file: !21, discriminator: 1)
!7040 = !DILocation(line: 108, column: 19, scope: !7039)
!7041 = !DILocation(line: 108, column: 5, scope: !7039)
!7042 = !DILocalVariable(name: "a0", scope: !6765, file: !21, line: 110, type: !106)
!7043 = !DILocation(line: 110, column: 24, scope: !6765)
!7044 = !DILocation(line: 110, column: 37, scope: !6765)
!7045 = !DILocation(line: 110, column: 38, scope: !6765)
!7046 = !DILocation(line: 110, column: 36, scope: !6765)
!7047 = !DILocation(line: 110, column: 29, scope: !6765)
!7048 = !DILocation(line: 110, column: 62, scope: !6765)
!7049 = !DILocation(line: 110, column: 63, scope: !6765)
!7050 = !DILocation(line: 110, column: 61, scope: !6765)
!7051 = !DILocation(line: 110, column: 54, scope: !6765)
!7052 = !DILocation(line: 110, column: 42, scope: !6765)
!7053 = !DILocalVariable(name: "a2", scope: !6765, file: !21, line: 111, type: !106)
!7054 = !DILocation(line: 111, column: 24, scope: !6765)
!7055 = !DILocation(line: 111, column: 37, scope: !6765)
!7056 = !DILocation(line: 111, column: 38, scope: !6765)
!7057 = !DILocation(line: 111, column: 36, scope: !6765)
!7058 = !DILocation(line: 111, column: 29, scope: !6765)
!7059 = !DILocation(line: 111, column: 62, scope: !6765)
!7060 = !DILocation(line: 111, column: 63, scope: !6765)
!7061 = !DILocation(line: 111, column: 61, scope: !6765)
!7062 = !DILocation(line: 111, column: 54, scope: !6765)
!7063 = !DILocation(line: 111, column: 42, scope: !6765)
!7064 = !DILocalVariable(name: "a4", scope: !6765, file: !21, line: 112, type: !106)
!7065 = !DILocation(line: 112, column: 24, scope: !6765)
!7066 = !DILocation(line: 112, column: 38, scope: !6765)
!7067 = !DILocation(line: 112, column: 39, scope: !6765)
!7068 = !DILocation(line: 112, column: 37, scope: !6765)
!7069 = !DILocation(line: 112, column: 30, scope: !6765)
!7070 = !DILocation(line: 112, column: 42, scope: !6765)
!7071 = !DILocation(line: 112, column: 67, scope: !6765)
!7072 = !DILocation(line: 112, column: 68, scope: !6765)
!7073 = !DILocation(line: 112, column: 66, scope: !6765)
!7074 = !DILocation(line: 112, column: 59, scope: !6765)
!7075 = !DILocation(line: 112, column: 47, scope: !6765)
!7076 = !DILocalVariable(name: "a6", scope: !6765, file: !21, line: 113, type: !106)
!7077 = !DILocation(line: 113, column: 24, scope: !6765)
!7078 = !DILocation(line: 113, column: 38, scope: !6765)
!7079 = !DILocation(line: 113, column: 39, scope: !6765)
!7080 = !DILocation(line: 113, column: 37, scope: !6765)
!7081 = !DILocation(line: 113, column: 30, scope: !6765)
!7082 = !DILocation(line: 113, column: 42, scope: !6765)
!7083 = !DILocation(line: 113, column: 67, scope: !6765)
!7084 = !DILocation(line: 113, column: 68, scope: !6765)
!7085 = !DILocation(line: 113, column: 66, scope: !6765)
!7086 = !DILocation(line: 113, column: 59, scope: !6765)
!7087 = !DILocation(line: 113, column: 47, scope: !6765)
!7088 = !DILocalVariable(name: "b0", scope: !6765, file: !21, line: 115, type: !106)
!7089 = !DILocation(line: 115, column: 24, scope: !6765)
!7090 = !DILocation(line: 115, column: 29, scope: !6765)
!7091 = !DILocation(line: 115, column: 34, scope: !6765)
!7092 = !DILocation(line: 115, column: 32, scope: !6765)
!7093 = !DILocalVariable(name: "b2", scope: !6765, file: !21, line: 116, type: !106)
!7094 = !DILocation(line: 116, column: 24, scope: !6765)
!7095 = !DILocation(line: 116, column: 29, scope: !6765)
!7096 = !DILocation(line: 116, column: 34, scope: !6765)
!7097 = !DILocation(line: 116, column: 32, scope: !6765)
!7098 = !DILocalVariable(name: "b4", scope: !6765, file: !21, line: 117, type: !106)
!7099 = !DILocation(line: 117, column: 24, scope: !6765)
!7100 = !DILocation(line: 117, column: 29, scope: !6765)
!7101 = !DILocation(line: 117, column: 34, scope: !6765)
!7102 = !DILocation(line: 117, column: 32, scope: !6765)
!7103 = !DILocalVariable(name: "b6", scope: !6765, file: !21, line: 118, type: !106)
!7104 = !DILocation(line: 118, column: 24, scope: !6765)
!7105 = !DILocation(line: 118, column: 29, scope: !6765)
!7106 = !DILocation(line: 118, column: 34, scope: !6765)
!7107 = !DILocation(line: 118, column: 32, scope: !6765)
!7108 = !DILocalVariable(name: "a1", scope: !6765, file: !21, line: 120, type: !468)
!7109 = !DILocation(line: 120, column: 19, scope: !6765)
!7110 = !DILocation(line: 120, column: 43, scope: !6765)
!7111 = !DILocation(line: 120, column: 44, scope: !6765)
!7112 = !DILocation(line: 120, column: 42, scope: !6765)
!7113 = !DILocation(line: 120, column: 35, scope: !6765)
!7114 = !DILocation(line: 120, column: 24, scope: !6765)
!7115 = !DILocation(line: 120, column: 58, scope: !6765)
!7116 = !DILocation(line: 120, column: 59, scope: !6765)
!7117 = !DILocation(line: 120, column: 57, scope: !6765)
!7118 = !DILocation(line: 120, column: 50, scope: !6765)
!7119 = !DILocation(line: 120, column: 48, scope: !6765)
!7120 = !DILocation(line: 120, column: 73, scope: !6765)
!7121 = !DILocation(line: 120, column: 74, scope: !6765)
!7122 = !DILocation(line: 120, column: 72, scope: !6765)
!7123 = !DILocation(line: 120, column: 65, scope: !6765)
!7124 = !DILocation(line: 120, column: 63, scope: !6765)
!7125 = !DILocation(line: 120, column: 89, scope: !6765)
!7126 = !DILocation(line: 120, column: 90, scope: !6765)
!7127 = !DILocation(line: 120, column: 88, scope: !6765)
!7128 = !DILocation(line: 120, column: 81, scope: !6765)
!7129 = !DILocation(line: 120, column: 93, scope: !6765)
!7130 = !DILocation(line: 120, column: 78, scope: !6765)
!7131 = !DILocalVariable(name: "a3", scope: !6765, file: !21, line: 121, type: !468)
!7132 = !DILocation(line: 121, column: 19, scope: !6765)
!7133 = !DILocation(line: 121, column: 42, scope: !6765)
!7134 = !DILocation(line: 121, column: 43, scope: !6765)
!7135 = !DILocation(line: 121, column: 41, scope: !6765)
!7136 = !DILocation(line: 121, column: 34, scope: !6765)
!7137 = !DILocation(line: 121, column: 57, scope: !6765)
!7138 = !DILocation(line: 121, column: 58, scope: !6765)
!7139 = !DILocation(line: 121, column: 56, scope: !6765)
!7140 = !DILocation(line: 121, column: 49, scope: !6765)
!7141 = !DILocation(line: 121, column: 47, scope: !6765)
!7142 = !DILocation(line: 121, column: 72, scope: !6765)
!7143 = !DILocation(line: 121, column: 73, scope: !6765)
!7144 = !DILocation(line: 121, column: 71, scope: !6765)
!7145 = !DILocation(line: 121, column: 64, scope: !6765)
!7146 = !DILocation(line: 121, column: 62, scope: !6765)
!7147 = !DILocation(line: 121, column: 88, scope: !6765)
!7148 = !DILocation(line: 121, column: 89, scope: !6765)
!7149 = !DILocation(line: 121, column: 87, scope: !6765)
!7150 = !DILocation(line: 121, column: 80, scope: !6765)
!7151 = !DILocation(line: 121, column: 92, scope: !6765)
!7152 = !DILocation(line: 121, column: 77, scope: !6765)
!7153 = !DILocalVariable(name: "a5", scope: !6765, file: !21, line: 122, type: !468)
!7154 = !DILocation(line: 122, column: 19, scope: !6765)
!7155 = !DILocation(line: 122, column: 43, scope: !6765)
!7156 = !DILocation(line: 122, column: 44, scope: !6765)
!7157 = !DILocation(line: 122, column: 42, scope: !6765)
!7158 = !DILocation(line: 122, column: 35, scope: !6765)
!7159 = !DILocation(line: 122, column: 24, scope: !6765)
!7160 = !DILocation(line: 122, column: 58, scope: !6765)
!7161 = !DILocation(line: 122, column: 59, scope: !6765)
!7162 = !DILocation(line: 122, column: 57, scope: !6765)
!7163 = !DILocation(line: 122, column: 50, scope: !6765)
!7164 = !DILocation(line: 122, column: 48, scope: !6765)
!7165 = !DILocation(line: 122, column: 73, scope: !6765)
!7166 = !DILocation(line: 122, column: 74, scope: !6765)
!7167 = !DILocation(line: 122, column: 72, scope: !6765)
!7168 = !DILocation(line: 122, column: 65, scope: !6765)
!7169 = !DILocation(line: 122, column: 63, scope: !6765)
!7170 = !DILocation(line: 122, column: 89, scope: !6765)
!7171 = !DILocation(line: 122, column: 90, scope: !6765)
!7172 = !DILocation(line: 122, column: 88, scope: !6765)
!7173 = !DILocation(line: 122, column: 81, scope: !6765)
!7174 = !DILocation(line: 122, column: 93, scope: !6765)
!7175 = !DILocation(line: 122, column: 78, scope: !6765)
!7176 = !DILocalVariable(name: "a7", scope: !6765, file: !21, line: 123, type: !468)
!7177 = !DILocation(line: 123, column: 19, scope: !6765)
!7178 = !DILocation(line: 123, column: 42, scope: !6765)
!7179 = !DILocation(line: 123, column: 43, scope: !6765)
!7180 = !DILocation(line: 123, column: 41, scope: !6765)
!7181 = !DILocation(line: 123, column: 34, scope: !6765)
!7182 = !DILocation(line: 123, column: 57, scope: !6765)
!7183 = !DILocation(line: 123, column: 58, scope: !6765)
!7184 = !DILocation(line: 123, column: 56, scope: !6765)
!7185 = !DILocation(line: 123, column: 49, scope: !6765)
!7186 = !DILocation(line: 123, column: 47, scope: !6765)
!7187 = !DILocation(line: 123, column: 72, scope: !6765)
!7188 = !DILocation(line: 123, column: 73, scope: !6765)
!7189 = !DILocation(line: 123, column: 71, scope: !6765)
!7190 = !DILocation(line: 123, column: 64, scope: !6765)
!7191 = !DILocation(line: 123, column: 62, scope: !6765)
!7192 = !DILocation(line: 123, column: 88, scope: !6765)
!7193 = !DILocation(line: 123, column: 89, scope: !6765)
!7194 = !DILocation(line: 123, column: 87, scope: !6765)
!7195 = !DILocation(line: 123, column: 80, scope: !6765)
!7196 = !DILocation(line: 123, column: 92, scope: !6765)
!7197 = !DILocation(line: 123, column: 77, scope: !6765)
!7198 = !DILocalVariable(name: "b1", scope: !6765, file: !21, line: 125, type: !106)
!7199 = !DILocation(line: 125, column: 24, scope: !6765)
!7200 = !DILocation(line: 125, column: 30, scope: !6765)
!7201 = !DILocation(line: 125, column: 32, scope: !6765)
!7202 = !DILocation(line: 125, column: 49, scope: !6765)
!7203 = !DILocation(line: 125, column: 37, scope: !6765)
!7204 = !DILocalVariable(name: "b3", scope: !6765, file: !21, line: 126, type: !106)
!7205 = !DILocation(line: 126, column: 24, scope: !6765)
!7206 = !DILocation(line: 126, column: 39, scope: !6765)
!7207 = !DILocation(line: 126, column: 45, scope: !6765)
!7208 = !DILocation(line: 126, column: 47, scope: !6765)
!7209 = !DILocation(line: 126, column: 42, scope: !6765)
!7210 = !DILocalVariable(name: "b5", scope: !6765, file: !21, line: 127, type: !106)
!7211 = !DILocation(line: 127, column: 24, scope: !6765)
!7212 = !DILocation(line: 127, column: 30, scope: !6765)
!7213 = !DILocation(line: 127, column: 32, scope: !6765)
!7214 = !DILocation(line: 127, column: 49, scope: !6765)
!7215 = !DILocation(line: 127, column: 37, scope: !6765)
!7216 = !DILocalVariable(name: "b7", scope: !6765, file: !21, line: 128, type: !106)
!7217 = !DILocation(line: 128, column: 24, scope: !6765)
!7218 = !DILocation(line: 128, column: 39, scope: !6765)
!7219 = !DILocation(line: 128, column: 45, scope: !6765)
!7220 = !DILocation(line: 128, column: 47, scope: !6765)
!7221 = !DILocation(line: 128, column: 42, scope: !6765)
!7222 = !DILocation(line: 130, column: 50, scope: !6765)
!7223 = !DILocation(line: 130, column: 56, scope: !6765)
!7224 = !DILocation(line: 130, column: 55, scope: !6765)
!7225 = !DILocation(line: 130, column: 52, scope: !6765)
!7226 = !DILocation(line: 130, column: 46, scope: !6765)
!7227 = !DILocation(line: 130, column: 73, scope: !6765)
!7228 = !DILocation(line: 130, column: 78, scope: !6765)
!7229 = !DILocation(line: 130, column: 76, scope: !6765)
!7230 = !DILocation(line: 130, column: 82, scope: !6765)
!7231 = !DILocation(line: 130, column: 64, scope: !6765)
!7232 = !DILocation(line: 130, column: 29, scope: !6765)
!7233 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !6788)
!7234 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !6788)
!7235 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !6788)
!7236 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !6788)
!7237 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !6788)
!7238 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !6788)
!7239 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !6788)
!7240 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !6788)
!7241 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !6788)
!7242 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !6788)
!7243 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !6788)
!7244 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !6788)
!7245 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !6788)
!7246 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !6788)
!7247 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !6788)
!7248 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !6788)
!7249 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !6788)
!7250 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !6788)
!7251 = !DILocation(line: 130, column: 13, scope: !6765)
!7252 = !DILocation(line: 130, column: 19, scope: !6765)
!7253 = !DILocation(line: 130, column: 18, scope: !6765)
!7254 = !DILocation(line: 130, column: 15, scope: !6765)
!7255 = !DILocation(line: 130, column: 9, scope: !6765)
!7256 = !DILocation(line: 130, column: 27, scope: !6765)
!7257 = !DILocation(line: 131, column: 50, scope: !6765)
!7258 = !DILocation(line: 131, column: 56, scope: !6765)
!7259 = !DILocation(line: 131, column: 55, scope: !6765)
!7260 = !DILocation(line: 131, column: 52, scope: !6765)
!7261 = !DILocation(line: 131, column: 46, scope: !6765)
!7262 = !DILocation(line: 131, column: 73, scope: !6765)
!7263 = !DILocation(line: 131, column: 78, scope: !6765)
!7264 = !DILocation(line: 131, column: 76, scope: !6765)
!7265 = !DILocation(line: 131, column: 82, scope: !6765)
!7266 = !DILocation(line: 131, column: 64, scope: !6765)
!7267 = !DILocation(line: 131, column: 29, scope: !6765)
!7268 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !6764)
!7269 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !6764)
!7270 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !6764)
!7271 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !6764)
!7272 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !6764)
!7273 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !6764)
!7274 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !6764)
!7275 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !6764)
!7276 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !6764)
!7277 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !6764)
!7278 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !6764)
!7279 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !6764)
!7280 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !6764)
!7281 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !6764)
!7282 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !6764)
!7283 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !6764)
!7284 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !6764)
!7285 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !6764)
!7286 = !DILocation(line: 131, column: 13, scope: !6765)
!7287 = !DILocation(line: 131, column: 19, scope: !6765)
!7288 = !DILocation(line: 131, column: 18, scope: !6765)
!7289 = !DILocation(line: 131, column: 15, scope: !6765)
!7290 = !DILocation(line: 131, column: 9, scope: !6765)
!7291 = !DILocation(line: 131, column: 27, scope: !6765)
!7292 = !DILocation(line: 132, column: 50, scope: !6765)
!7293 = !DILocation(line: 132, column: 56, scope: !6765)
!7294 = !DILocation(line: 132, column: 55, scope: !6765)
!7295 = !DILocation(line: 132, column: 52, scope: !6765)
!7296 = !DILocation(line: 132, column: 46, scope: !6765)
!7297 = !DILocation(line: 132, column: 73, scope: !6765)
!7298 = !DILocation(line: 132, column: 78, scope: !6765)
!7299 = !DILocation(line: 132, column: 76, scope: !6765)
!7300 = !DILocation(line: 132, column: 82, scope: !6765)
!7301 = !DILocation(line: 132, column: 64, scope: !6765)
!7302 = !DILocation(line: 132, column: 29, scope: !6765)
!7303 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !6770)
!7304 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !6770)
!7305 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !6770)
!7306 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !6770)
!7307 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !6770)
!7308 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !6770)
!7309 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !6770)
!7310 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !6770)
!7311 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !6770)
!7312 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !6770)
!7313 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !6770)
!7314 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !6770)
!7315 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !6770)
!7316 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !6770)
!7317 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !6770)
!7318 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !6770)
!7319 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !6770)
!7320 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !6770)
!7321 = !DILocation(line: 132, column: 13, scope: !6765)
!7322 = !DILocation(line: 132, column: 19, scope: !6765)
!7323 = !DILocation(line: 132, column: 18, scope: !6765)
!7324 = !DILocation(line: 132, column: 15, scope: !6765)
!7325 = !DILocation(line: 132, column: 9, scope: !6765)
!7326 = !DILocation(line: 132, column: 27, scope: !6765)
!7327 = !DILocation(line: 133, column: 50, scope: !6765)
!7328 = !DILocation(line: 133, column: 56, scope: !6765)
!7329 = !DILocation(line: 133, column: 55, scope: !6765)
!7330 = !DILocation(line: 133, column: 52, scope: !6765)
!7331 = !DILocation(line: 133, column: 46, scope: !6765)
!7332 = !DILocation(line: 133, column: 73, scope: !6765)
!7333 = !DILocation(line: 133, column: 78, scope: !6765)
!7334 = !DILocation(line: 133, column: 76, scope: !6765)
!7335 = !DILocation(line: 133, column: 82, scope: !6765)
!7336 = !DILocation(line: 133, column: 64, scope: !6765)
!7337 = !DILocation(line: 133, column: 29, scope: !6765)
!7338 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !6773)
!7339 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !6773)
!7340 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !6773)
!7341 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !6773)
!7342 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !6773)
!7343 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !6773)
!7344 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !6773)
!7345 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !6773)
!7346 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !6773)
!7347 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !6773)
!7348 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !6773)
!7349 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !6773)
!7350 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !6773)
!7351 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !6773)
!7352 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !6773)
!7353 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !6773)
!7354 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !6773)
!7355 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !6773)
!7356 = !DILocation(line: 133, column: 13, scope: !6765)
!7357 = !DILocation(line: 133, column: 19, scope: !6765)
!7358 = !DILocation(line: 133, column: 18, scope: !6765)
!7359 = !DILocation(line: 133, column: 15, scope: !6765)
!7360 = !DILocation(line: 133, column: 9, scope: !6765)
!7361 = !DILocation(line: 133, column: 27, scope: !6765)
!7362 = !DILocation(line: 134, column: 50, scope: !6765)
!7363 = !DILocation(line: 134, column: 56, scope: !6765)
!7364 = !DILocation(line: 134, column: 55, scope: !6765)
!7365 = !DILocation(line: 134, column: 52, scope: !6765)
!7366 = !DILocation(line: 134, column: 46, scope: !6765)
!7367 = !DILocation(line: 134, column: 73, scope: !6765)
!7368 = !DILocation(line: 134, column: 78, scope: !6765)
!7369 = !DILocation(line: 134, column: 76, scope: !6765)
!7370 = !DILocation(line: 134, column: 82, scope: !6765)
!7371 = !DILocation(line: 134, column: 64, scope: !6765)
!7372 = !DILocation(line: 134, column: 29, scope: !6765)
!7373 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !6776)
!7374 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !6776)
!7375 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !6776)
!7376 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !6776)
!7377 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !6776)
!7378 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !6776)
!7379 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !6776)
!7380 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !6776)
!7381 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !6776)
!7382 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !6776)
!7383 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !6776)
!7384 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !6776)
!7385 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !6776)
!7386 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !6776)
!7387 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !6776)
!7388 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !6776)
!7389 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !6776)
!7390 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !6776)
!7391 = !DILocation(line: 134, column: 13, scope: !6765)
!7392 = !DILocation(line: 134, column: 19, scope: !6765)
!7393 = !DILocation(line: 134, column: 18, scope: !6765)
!7394 = !DILocation(line: 134, column: 15, scope: !6765)
!7395 = !DILocation(line: 134, column: 9, scope: !6765)
!7396 = !DILocation(line: 134, column: 27, scope: !6765)
!7397 = !DILocation(line: 135, column: 50, scope: !6765)
!7398 = !DILocation(line: 135, column: 56, scope: !6765)
!7399 = !DILocation(line: 135, column: 55, scope: !6765)
!7400 = !DILocation(line: 135, column: 52, scope: !6765)
!7401 = !DILocation(line: 135, column: 46, scope: !6765)
!7402 = !DILocation(line: 135, column: 73, scope: !6765)
!7403 = !DILocation(line: 135, column: 78, scope: !6765)
!7404 = !DILocation(line: 135, column: 76, scope: !6765)
!7405 = !DILocation(line: 135, column: 82, scope: !6765)
!7406 = !DILocation(line: 135, column: 64, scope: !6765)
!7407 = !DILocation(line: 135, column: 29, scope: !6765)
!7408 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !6779)
!7409 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !6779)
!7410 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !6779)
!7411 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !6779)
!7412 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !6779)
!7413 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !6779)
!7414 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !6779)
!7415 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !6779)
!7416 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !6779)
!7417 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !6779)
!7418 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !6779)
!7419 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !6779)
!7420 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !6779)
!7421 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !6779)
!7422 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !6779)
!7423 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !6779)
!7424 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !6779)
!7425 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !6779)
!7426 = !DILocation(line: 135, column: 13, scope: !6765)
!7427 = !DILocation(line: 135, column: 19, scope: !6765)
!7428 = !DILocation(line: 135, column: 18, scope: !6765)
!7429 = !DILocation(line: 135, column: 15, scope: !6765)
!7430 = !DILocation(line: 135, column: 9, scope: !6765)
!7431 = !DILocation(line: 135, column: 27, scope: !6765)
!7432 = !DILocation(line: 136, column: 50, scope: !6765)
!7433 = !DILocation(line: 136, column: 56, scope: !6765)
!7434 = !DILocation(line: 136, column: 55, scope: !6765)
!7435 = !DILocation(line: 136, column: 52, scope: !6765)
!7436 = !DILocation(line: 136, column: 46, scope: !6765)
!7437 = !DILocation(line: 136, column: 73, scope: !6765)
!7438 = !DILocation(line: 136, column: 78, scope: !6765)
!7439 = !DILocation(line: 136, column: 76, scope: !6765)
!7440 = !DILocation(line: 136, column: 82, scope: !6765)
!7441 = !DILocation(line: 136, column: 64, scope: !6765)
!7442 = !DILocation(line: 136, column: 29, scope: !6765)
!7443 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !6782)
!7444 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !6782)
!7445 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !6782)
!7446 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !6782)
!7447 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !6782)
!7448 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !6782)
!7449 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !6782)
!7450 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !6782)
!7451 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !6782)
!7452 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !6782)
!7453 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !6782)
!7454 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !6782)
!7455 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !6782)
!7456 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !6782)
!7457 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !6782)
!7458 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !6782)
!7459 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !6782)
!7460 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !6782)
!7461 = !DILocation(line: 136, column: 13, scope: !6765)
!7462 = !DILocation(line: 136, column: 19, scope: !6765)
!7463 = !DILocation(line: 136, column: 18, scope: !6765)
!7464 = !DILocation(line: 136, column: 15, scope: !6765)
!7465 = !DILocation(line: 136, column: 9, scope: !6765)
!7466 = !DILocation(line: 136, column: 27, scope: !6765)
!7467 = !DILocation(line: 137, column: 50, scope: !6765)
!7468 = !DILocation(line: 137, column: 56, scope: !6765)
!7469 = !DILocation(line: 137, column: 55, scope: !6765)
!7470 = !DILocation(line: 137, column: 52, scope: !6765)
!7471 = !DILocation(line: 137, column: 46, scope: !6765)
!7472 = !DILocation(line: 137, column: 73, scope: !6765)
!7473 = !DILocation(line: 137, column: 78, scope: !6765)
!7474 = !DILocation(line: 137, column: 76, scope: !6765)
!7475 = !DILocation(line: 137, column: 82, scope: !6765)
!7476 = !DILocation(line: 137, column: 64, scope: !6765)
!7477 = !DILocation(line: 137, column: 29, scope: !6765)
!7478 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !6785)
!7479 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !6785)
!7480 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !6785)
!7481 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !6785)
!7482 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !6785)
!7483 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !6785)
!7484 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !6785)
!7485 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !6785)
!7486 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !6785)
!7487 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !6785)
!7488 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !6785)
!7489 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !6785)
!7490 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !6785)
!7491 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !6785)
!7492 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !6785)
!7493 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !6785)
!7494 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !6785)
!7495 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !6785)
!7496 = !DILocation(line: 137, column: 13, scope: !6765)
!7497 = !DILocation(line: 137, column: 19, scope: !6765)
!7498 = !DILocation(line: 137, column: 18, scope: !6765)
!7499 = !DILocation(line: 137, column: 15, scope: !6765)
!7500 = !DILocation(line: 137, column: 9, scope: !6765)
!7501 = !DILocation(line: 137, column: 27, scope: !6765)
!7502 = !DILocation(line: 138, column: 5, scope: !6765)
!7503 = !DILocation(line: 108, column: 25, scope: !7504)
!7504 = !DILexicalBlockFile(scope: !6766, file: !21, discriminator: 2)
!7505 = !DILocation(line: 108, column: 5, scope: !7504)
!7506 = distinct !{!7506, !7507}
!7507 = !DILocation(line: 108, column: 5, scope: !6762)
!7508 = !DILocation(line: 140, column: 12, scope: !6762)
!7509 = !DILocation(line: 140, column: 5, scope: !6762)
!7510 = !DILocation(line: 141, column: 1, scope: !6762)
!7511 = distinct !DISubprogram(name: "ff_h264_idct_dc_add_12_c", scope: !21, file: !21, line: 144, type: !60, isLocal: false, isDefinition: true, scopeLine: 144, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!7512 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !7513)
!7513 = distinct !DILocation(line: 154, column: 22, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !21, line: 153, column: 9)
!7515 = distinct !DILexicalBlock(scope: !7516, file: !21, line: 153, column: 9)
!7516 = distinct !DILexicalBlock(scope: !7517, file: !21, line: 152, column: 5)
!7517 = distinct !DILexicalBlock(scope: !7518, file: !21, line: 151, column: 5)
!7518 = distinct !DILexicalBlock(scope: !7511, file: !21, line: 151, column: 5)
!7519 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !7513)
!7520 = !DILocalVariable(name: "_dst", arg: 1, scope: !7511, file: !21, line: 144, type: !4)
!7521 = !DILocation(line: 144, column: 40, scope: !7511)
!7522 = !DILocalVariable(name: "_block", arg: 2, scope: !7511, file: !21, line: 144, type: !8)
!7523 = !DILocation(line: 144, column: 55, scope: !7511)
!7524 = !DILocalVariable(name: "stride", arg: 3, scope: !7511, file: !21, line: 144, type: !12)
!7525 = !DILocation(line: 144, column: 67, scope: !7511)
!7526 = !DILocalVariable(name: "i", scope: !7511, file: !21, line: 145, type: !12)
!7527 = !DILocation(line: 145, column: 9, scope: !7511)
!7528 = !DILocalVariable(name: "j", scope: !7511, file: !21, line: 145, type: !12)
!7529 = !DILocation(line: 145, column: 12, scope: !7511)
!7530 = !DILocalVariable(name: "dst", scope: !7511, file: !21, line: 146, type: !13)
!7531 = !DILocation(line: 146, column: 15, scope: !7511)
!7532 = !DILocation(line: 146, column: 32, scope: !7511)
!7533 = !DILocation(line: 146, column: 21, scope: !7511)
!7534 = !DILocalVariable(name: "block", scope: !7511, file: !21, line: 147, type: !16)
!7535 = !DILocation(line: 147, column: 14, scope: !7511)
!7536 = !DILocation(line: 147, column: 32, scope: !7511)
!7537 = !DILocation(line: 147, column: 22, scope: !7511)
!7538 = !DILocalVariable(name: "dc", scope: !7511, file: !21, line: 148, type: !12)
!7539 = !DILocation(line: 148, column: 9, scope: !7511)
!7540 = !DILocation(line: 148, column: 15, scope: !7511)
!7541 = !DILocation(line: 148, column: 24, scope: !7511)
!7542 = !DILocation(line: 148, column: 30, scope: !7511)
!7543 = !DILocation(line: 149, column: 12, scope: !7511)
!7544 = !DILocation(line: 150, column: 5, scope: !7511)
!7545 = !DILocation(line: 150, column: 14, scope: !7511)
!7546 = !DILocation(line: 151, column: 12, scope: !7518)
!7547 = !DILocation(line: 151, column: 10, scope: !7518)
!7548 = !DILocation(line: 151, column: 17, scope: !7549)
!7549 = !DILexicalBlockFile(scope: !7517, file: !21, discriminator: 1)
!7550 = !DILocation(line: 151, column: 19, scope: !7549)
!7551 = !DILocation(line: 151, column: 5, scope: !7549)
!7552 = !DILocation(line: 153, column: 16, scope: !7515)
!7553 = !DILocation(line: 153, column: 14, scope: !7515)
!7554 = !DILocation(line: 153, column: 21, scope: !7555)
!7555 = !DILexicalBlockFile(scope: !7514, file: !21, discriminator: 1)
!7556 = !DILocation(line: 153, column: 23, scope: !7555)
!7557 = !DILocation(line: 153, column: 9, scope: !7555)
!7558 = !DILocation(line: 154, column: 43, scope: !7514)
!7559 = !DILocation(line: 154, column: 39, scope: !7514)
!7560 = !DILocation(line: 154, column: 48, scope: !7514)
!7561 = !DILocation(line: 154, column: 46, scope: !7514)
!7562 = !DILocation(line: 154, column: 22, scope: !7514)
!7563 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !7513)
!7564 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !7513)
!7565 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !7513)
!7566 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !7513)
!7567 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !7513)
!7568 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !7513)
!7569 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !7513)
!7570 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !7513)
!7571 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !7513)
!7572 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !7513)
!7573 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !7513)
!7574 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !7513)
!7575 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !7513)
!7576 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !7513)
!7577 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !7513)
!7578 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !7513)
!7579 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !7513)
!7580 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !7513)
!7581 = !DILocation(line: 154, column: 17, scope: !7514)
!7582 = !DILocation(line: 154, column: 13, scope: !7514)
!7583 = !DILocation(line: 154, column: 20, scope: !7514)
!7584 = !DILocation(line: 153, column: 29, scope: !7585)
!7585 = !DILexicalBlockFile(scope: !7514, file: !21, discriminator: 2)
!7586 = !DILocation(line: 153, column: 9, scope: !7585)
!7587 = distinct !{!7587, !7588}
!7588 = !DILocation(line: 153, column: 9, scope: !7516)
!7589 = !DILocation(line: 155, column: 16, scope: !7516)
!7590 = !DILocation(line: 155, column: 13, scope: !7516)
!7591 = !DILocation(line: 156, column: 5, scope: !7516)
!7592 = !DILocation(line: 151, column: 25, scope: !7593)
!7593 = !DILexicalBlockFile(scope: !7517, file: !21, discriminator: 2)
!7594 = !DILocation(line: 151, column: 5, scope: !7593)
!7595 = distinct !{!7595, !7596}
!7596 = !DILocation(line: 151, column: 5, scope: !7511)
!7597 = !DILocation(line: 157, column: 1, scope: !7511)
!7598 = distinct !DISubprogram(name: "ff_h264_idct8_dc_add_12_c", scope: !21, file: !21, line: 159, type: !60, isLocal: false, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!7599 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !7600)
!7600 = distinct !DILocation(line: 169, column: 22, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7602, file: !21, line: 168, column: 9)
!7602 = distinct !DILexicalBlock(scope: !7603, file: !21, line: 168, column: 9)
!7603 = distinct !DILexicalBlock(scope: !7604, file: !21, line: 167, column: 5)
!7604 = distinct !DILexicalBlock(scope: !7605, file: !21, line: 166, column: 5)
!7605 = distinct !DILexicalBlock(scope: !7598, file: !21, line: 166, column: 5)
!7606 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !7600)
!7607 = !DILocalVariable(name: "_dst", arg: 1, scope: !7598, file: !21, line: 159, type: !4)
!7608 = !DILocation(line: 159, column: 41, scope: !7598)
!7609 = !DILocalVariable(name: "_block", arg: 2, scope: !7598, file: !21, line: 159, type: !8)
!7610 = !DILocation(line: 159, column: 56, scope: !7598)
!7611 = !DILocalVariable(name: "stride", arg: 3, scope: !7598, file: !21, line: 159, type: !12)
!7612 = !DILocation(line: 159, column: 68, scope: !7598)
!7613 = !DILocalVariable(name: "i", scope: !7598, file: !21, line: 160, type: !12)
!7614 = !DILocation(line: 160, column: 9, scope: !7598)
!7615 = !DILocalVariable(name: "j", scope: !7598, file: !21, line: 160, type: !12)
!7616 = !DILocation(line: 160, column: 12, scope: !7598)
!7617 = !DILocalVariable(name: "dst", scope: !7598, file: !21, line: 161, type: !13)
!7618 = !DILocation(line: 161, column: 15, scope: !7598)
!7619 = !DILocation(line: 161, column: 32, scope: !7598)
!7620 = !DILocation(line: 161, column: 21, scope: !7598)
!7621 = !DILocalVariable(name: "block", scope: !7598, file: !21, line: 162, type: !16)
!7622 = !DILocation(line: 162, column: 14, scope: !7598)
!7623 = !DILocation(line: 162, column: 32, scope: !7598)
!7624 = !DILocation(line: 162, column: 22, scope: !7598)
!7625 = !DILocalVariable(name: "dc", scope: !7598, file: !21, line: 163, type: !12)
!7626 = !DILocation(line: 163, column: 9, scope: !7598)
!7627 = !DILocation(line: 163, column: 15, scope: !7598)
!7628 = !DILocation(line: 163, column: 24, scope: !7598)
!7629 = !DILocation(line: 163, column: 30, scope: !7598)
!7630 = !DILocation(line: 164, column: 5, scope: !7598)
!7631 = !DILocation(line: 164, column: 14, scope: !7598)
!7632 = !DILocation(line: 165, column: 12, scope: !7598)
!7633 = !DILocation(line: 166, column: 12, scope: !7605)
!7634 = !DILocation(line: 166, column: 10, scope: !7605)
!7635 = !DILocation(line: 166, column: 17, scope: !7636)
!7636 = !DILexicalBlockFile(scope: !7604, file: !21, discriminator: 1)
!7637 = !DILocation(line: 166, column: 19, scope: !7636)
!7638 = !DILocation(line: 166, column: 5, scope: !7636)
!7639 = !DILocation(line: 168, column: 16, scope: !7602)
!7640 = !DILocation(line: 168, column: 14, scope: !7602)
!7641 = !DILocation(line: 168, column: 21, scope: !7642)
!7642 = !DILexicalBlockFile(scope: !7601, file: !21, discriminator: 1)
!7643 = !DILocation(line: 168, column: 23, scope: !7642)
!7644 = !DILocation(line: 168, column: 9, scope: !7642)
!7645 = !DILocation(line: 169, column: 43, scope: !7601)
!7646 = !DILocation(line: 169, column: 39, scope: !7601)
!7647 = !DILocation(line: 169, column: 48, scope: !7601)
!7648 = !DILocation(line: 169, column: 46, scope: !7601)
!7649 = !DILocation(line: 169, column: 22, scope: !7601)
!7650 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !7600)
!7651 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !7600)
!7652 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !7600)
!7653 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !7600)
!7654 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !7600)
!7655 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !7600)
!7656 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !7600)
!7657 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !7600)
!7658 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !7600)
!7659 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !7600)
!7660 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !7600)
!7661 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !7600)
!7662 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !7600)
!7663 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !7600)
!7664 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !7600)
!7665 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !7600)
!7666 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !7600)
!7667 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !7600)
!7668 = !DILocation(line: 169, column: 17, scope: !7601)
!7669 = !DILocation(line: 169, column: 13, scope: !7601)
!7670 = !DILocation(line: 169, column: 20, scope: !7601)
!7671 = !DILocation(line: 168, column: 29, scope: !7672)
!7672 = !DILexicalBlockFile(scope: !7601, file: !21, discriminator: 2)
!7673 = !DILocation(line: 168, column: 9, scope: !7672)
!7674 = distinct !{!7674, !7675}
!7675 = !DILocation(line: 168, column: 9, scope: !7603)
!7676 = !DILocation(line: 170, column: 16, scope: !7603)
!7677 = !DILocation(line: 170, column: 13, scope: !7603)
!7678 = !DILocation(line: 171, column: 5, scope: !7603)
!7679 = !DILocation(line: 166, column: 25, scope: !7680)
!7680 = !DILexicalBlockFile(scope: !7604, file: !21, discriminator: 2)
!7681 = !DILocation(line: 166, column: 5, scope: !7680)
!7682 = distinct !{!7682, !7683}
!7683 = !DILocation(line: 166, column: 5, scope: !7598)
!7684 = !DILocation(line: 172, column: 1, scope: !7598)
!7685 = distinct !DISubprogram(name: "ff_h264_idct_add16_12_c", scope: !21, file: !21, line: 174, type: !1214, isLocal: false, isDefinition: true, scopeLine: 174, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!7686 = !DILocalVariable(name: "dst", arg: 1, scope: !7685, file: !21, line: 174, type: !4)
!7687 = !DILocation(line: 174, column: 39, scope: !7685)
!7688 = !DILocalVariable(name: "block_offset", arg: 2, scope: !7685, file: !21, line: 174, type: !1216)
!7689 = !DILocation(line: 174, column: 55, scope: !7685)
!7690 = !DILocalVariable(name: "block", arg: 3, scope: !7685, file: !21, line: 174, type: !8)
!7691 = !DILocation(line: 174, column: 78, scope: !7685)
!7692 = !DILocalVariable(name: "stride", arg: 4, scope: !7685, file: !21, line: 174, type: !12)
!7693 = !DILocation(line: 174, column: 89, scope: !7685)
!7694 = !DILocalVariable(name: "nnzc", arg: 5, scope: !7685, file: !21, line: 174, type: !1217)
!7695 = !DILocation(line: 174, column: 111, scope: !7685)
!7696 = !DILocalVariable(name: "i", scope: !7685, file: !21, line: 175, type: !12)
!7697 = !DILocation(line: 175, column: 9, scope: !7685)
!7698 = !DILocation(line: 176, column: 10, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7685, file: !21, line: 176, column: 5)
!7700 = !DILocation(line: 176, column: 9, scope: !7699)
!7701 = !DILocation(line: 176, column: 14, scope: !7702)
!7702 = !DILexicalBlockFile(scope: !7703, file: !21, discriminator: 1)
!7703 = distinct !DILexicalBlock(scope: !7699, file: !21, line: 176, column: 5)
!7704 = !DILocation(line: 176, column: 15, scope: !7702)
!7705 = !DILocation(line: 176, column: 5, scope: !7702)
!7706 = !DILocalVariable(name: "nnz", scope: !7707, file: !21, line: 177, type: !12)
!7707 = distinct !DILexicalBlock(scope: !7703, file: !21, line: 176, column: 24)
!7708 = !DILocation(line: 177, column: 13, scope: !7707)
!7709 = !DILocation(line: 177, column: 31, scope: !7707)
!7710 = !DILocation(line: 177, column: 25, scope: !7707)
!7711 = !DILocation(line: 177, column: 19, scope: !7707)
!7712 = !DILocation(line: 178, column: 12, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7707, file: !21, line: 178, column: 12)
!7714 = !DILocation(line: 178, column: 12, scope: !7707)
!7715 = !DILocation(line: 179, column: 16, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !21, line: 179, column: 16)
!7717 = distinct !DILexicalBlock(scope: !7713, file: !21, line: 178, column: 16)
!7718 = !DILocation(line: 179, column: 19, scope: !7716)
!7719 = !DILocation(line: 179, column: 23, scope: !7716)
!7720 = !DILocation(line: 179, column: 44, scope: !7721)
!7721 = !DILexicalBlockFile(scope: !7716, file: !21, discriminator: 1)
!7722 = !DILocation(line: 179, column: 45, scope: !7721)
!7723 = !DILocation(line: 179, column: 26, scope: !7721)
!7724 = !DILocation(line: 179, column: 37, scope: !7721)
!7725 = !DILocation(line: 179, column: 16, scope: !7721)
!7726 = !DILocation(line: 179, column: 76, scope: !7727)
!7727 = !DILexicalBlockFile(scope: !7716, file: !21, discriminator: 2)
!7728 = !DILocation(line: 179, column: 95, scope: !7727)
!7729 = !DILocation(line: 179, column: 82, scope: !7727)
!7730 = !DILocation(line: 179, column: 80, scope: !7727)
!7731 = !DILocation(line: 179, column: 99, scope: !7727)
!7732 = !DILocation(line: 179, column: 107, scope: !7727)
!7733 = !DILocation(line: 179, column: 108, scope: !7727)
!7734 = !DILocation(line: 179, column: 111, scope: !7727)
!7735 = !DILocation(line: 179, column: 105, scope: !7727)
!7736 = !DILocation(line: 179, column: 130, scope: !7727)
!7737 = !DILocation(line: 179, column: 51, scope: !7727)
!7738 = !DILocation(line: 180, column: 40, scope: !7716)
!7739 = !DILocation(line: 180, column: 59, scope: !7716)
!7740 = !DILocation(line: 180, column: 46, scope: !7716)
!7741 = !DILocation(line: 180, column: 44, scope: !7716)
!7742 = !DILocation(line: 180, column: 63, scope: !7716)
!7743 = !DILocation(line: 180, column: 71, scope: !7716)
!7744 = !DILocation(line: 180, column: 72, scope: !7716)
!7745 = !DILocation(line: 180, column: 75, scope: !7716)
!7746 = !DILocation(line: 180, column: 69, scope: !7716)
!7747 = !DILocation(line: 180, column: 94, scope: !7716)
!7748 = !DILocation(line: 180, column: 18, scope: !7716)
!7749 = !DILocation(line: 181, column: 9, scope: !7717)
!7750 = !DILocation(line: 182, column: 5, scope: !7707)
!7751 = !DILocation(line: 176, column: 21, scope: !7752)
!7752 = !DILexicalBlockFile(scope: !7703, file: !21, discriminator: 2)
!7753 = !DILocation(line: 176, column: 5, scope: !7752)
!7754 = distinct !{!7754, !7755}
!7755 = !DILocation(line: 176, column: 5, scope: !7685)
!7756 = !DILocation(line: 183, column: 1, scope: !7685)
!7757 = distinct !DISubprogram(name: "ff_h264_idct_add16intra_12_c", scope: !21, file: !21, line: 185, type: !1214, isLocal: false, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!7758 = !DILocalVariable(name: "dst", arg: 1, scope: !7757, file: !21, line: 185, type: !4)
!7759 = !DILocation(line: 185, column: 44, scope: !7757)
!7760 = !DILocalVariable(name: "block_offset", arg: 2, scope: !7757, file: !21, line: 185, type: !1216)
!7761 = !DILocation(line: 185, column: 60, scope: !7757)
!7762 = !DILocalVariable(name: "block", arg: 3, scope: !7757, file: !21, line: 185, type: !8)
!7763 = !DILocation(line: 185, column: 83, scope: !7757)
!7764 = !DILocalVariable(name: "stride", arg: 4, scope: !7757, file: !21, line: 185, type: !12)
!7765 = !DILocation(line: 185, column: 94, scope: !7757)
!7766 = !DILocalVariable(name: "nnzc", arg: 5, scope: !7757, file: !21, line: 185, type: !1217)
!7767 = !DILocation(line: 185, column: 116, scope: !7757)
!7768 = !DILocalVariable(name: "i", scope: !7757, file: !21, line: 186, type: !12)
!7769 = !DILocation(line: 186, column: 9, scope: !7757)
!7770 = !DILocation(line: 187, column: 10, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7757, file: !21, line: 187, column: 5)
!7772 = !DILocation(line: 187, column: 9, scope: !7771)
!7773 = !DILocation(line: 187, column: 14, scope: !7774)
!7774 = !DILexicalBlockFile(scope: !7775, file: !21, discriminator: 1)
!7775 = distinct !DILexicalBlock(scope: !7771, file: !21, line: 187, column: 5)
!7776 = !DILocation(line: 187, column: 15, scope: !7774)
!7777 = !DILocation(line: 187, column: 5, scope: !7774)
!7778 = !DILocation(line: 188, column: 24, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !21, line: 188, column: 12)
!7780 = distinct !DILexicalBlock(scope: !7775, file: !21, line: 187, column: 24)
!7781 = !DILocation(line: 188, column: 18, scope: !7779)
!7782 = !DILocation(line: 188, column: 12, scope: !7779)
!7783 = !DILocation(line: 188, column: 12, scope: !7780)
!7784 = !DILocation(line: 188, column: 52, scope: !7785)
!7785 = !DILexicalBlockFile(scope: !7779, file: !21, discriminator: 1)
!7786 = !DILocation(line: 188, column: 71, scope: !7785)
!7787 = !DILocation(line: 188, column: 58, scope: !7785)
!7788 = !DILocation(line: 188, column: 56, scope: !7785)
!7789 = !DILocation(line: 188, column: 75, scope: !7785)
!7790 = !DILocation(line: 188, column: 83, scope: !7785)
!7791 = !DILocation(line: 188, column: 84, scope: !7785)
!7792 = !DILocation(line: 188, column: 87, scope: !7785)
!7793 = !DILocation(line: 188, column: 81, scope: !7785)
!7794 = !DILocation(line: 188, column: 106, scope: !7785)
!7795 = !DILocation(line: 188, column: 30, scope: !7785)
!7796 = !DILocation(line: 189, column: 35, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7779, file: !21, line: 189, column: 17)
!7798 = !DILocation(line: 189, column: 36, scope: !7797)
!7799 = !DILocation(line: 189, column: 17, scope: !7797)
!7800 = !DILocation(line: 189, column: 28, scope: !7797)
!7801 = !DILocation(line: 189, column: 17, scope: !7779)
!7802 = !DILocation(line: 189, column: 67, scope: !7803)
!7803 = !DILexicalBlockFile(scope: !7797, file: !21, discriminator: 1)
!7804 = !DILocation(line: 189, column: 86, scope: !7803)
!7805 = !DILocation(line: 189, column: 73, scope: !7803)
!7806 = !DILocation(line: 189, column: 71, scope: !7803)
!7807 = !DILocation(line: 189, column: 90, scope: !7803)
!7808 = !DILocation(line: 189, column: 98, scope: !7803)
!7809 = !DILocation(line: 189, column: 99, scope: !7803)
!7810 = !DILocation(line: 189, column: 102, scope: !7803)
!7811 = !DILocation(line: 189, column: 96, scope: !7803)
!7812 = !DILocation(line: 189, column: 121, scope: !7803)
!7813 = !DILocation(line: 189, column: 42, scope: !7803)
!7814 = !DILocation(line: 190, column: 5, scope: !7780)
!7815 = !DILocation(line: 187, column: 21, scope: !7816)
!7816 = !DILexicalBlockFile(scope: !7775, file: !21, discriminator: 2)
!7817 = !DILocation(line: 187, column: 5, scope: !7816)
!7818 = distinct !{!7818, !7819}
!7819 = !DILocation(line: 187, column: 5, scope: !7757)
!7820 = !DILocation(line: 191, column: 1, scope: !7757)
!7821 = distinct !DISubprogram(name: "ff_h264_idct8_add4_12_c", scope: !21, file: !21, line: 193, type: !1214, isLocal: false, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!7822 = !DILocalVariable(name: "dst", arg: 1, scope: !7821, file: !21, line: 193, type: !4)
!7823 = !DILocation(line: 193, column: 39, scope: !7821)
!7824 = !DILocalVariable(name: "block_offset", arg: 2, scope: !7821, file: !21, line: 193, type: !1216)
!7825 = !DILocation(line: 193, column: 55, scope: !7821)
!7826 = !DILocalVariable(name: "block", arg: 3, scope: !7821, file: !21, line: 193, type: !8)
!7827 = !DILocation(line: 193, column: 78, scope: !7821)
!7828 = !DILocalVariable(name: "stride", arg: 4, scope: !7821, file: !21, line: 193, type: !12)
!7829 = !DILocation(line: 193, column: 89, scope: !7821)
!7830 = !DILocalVariable(name: "nnzc", arg: 5, scope: !7821, file: !21, line: 193, type: !1217)
!7831 = !DILocation(line: 193, column: 111, scope: !7821)
!7832 = !DILocalVariable(name: "i", scope: !7821, file: !21, line: 194, type: !12)
!7833 = !DILocation(line: 194, column: 9, scope: !7821)
!7834 = !DILocation(line: 195, column: 10, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7821, file: !21, line: 195, column: 5)
!7836 = !DILocation(line: 195, column: 9, scope: !7835)
!7837 = !DILocation(line: 195, column: 14, scope: !7838)
!7838 = !DILexicalBlockFile(scope: !7839, file: !21, discriminator: 1)
!7839 = distinct !DILexicalBlock(scope: !7835, file: !21, line: 195, column: 5)
!7840 = !DILocation(line: 195, column: 15, scope: !7838)
!7841 = !DILocation(line: 195, column: 5, scope: !7838)
!7842 = !DILocalVariable(name: "nnz", scope: !7843, file: !21, line: 196, type: !12)
!7843 = distinct !DILexicalBlock(scope: !7839, file: !21, line: 195, column: 25)
!7844 = !DILocation(line: 196, column: 13, scope: !7843)
!7845 = !DILocation(line: 196, column: 31, scope: !7843)
!7846 = !DILocation(line: 196, column: 25, scope: !7843)
!7847 = !DILocation(line: 196, column: 19, scope: !7843)
!7848 = !DILocation(line: 197, column: 12, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7843, file: !21, line: 197, column: 12)
!7850 = !DILocation(line: 197, column: 12, scope: !7843)
!7851 = !DILocation(line: 198, column: 16, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !21, line: 198, column: 16)
!7853 = distinct !DILexicalBlock(scope: !7849, file: !21, line: 197, column: 16)
!7854 = !DILocation(line: 198, column: 19, scope: !7852)
!7855 = !DILocation(line: 198, column: 23, scope: !7852)
!7856 = !DILocation(line: 198, column: 44, scope: !7857)
!7857 = !DILexicalBlockFile(scope: !7852, file: !21, discriminator: 1)
!7858 = !DILocation(line: 198, column: 45, scope: !7857)
!7859 = !DILocation(line: 198, column: 26, scope: !7857)
!7860 = !DILocation(line: 198, column: 37, scope: !7857)
!7861 = !DILocation(line: 198, column: 16, scope: !7857)
!7862 = !DILocation(line: 198, column: 77, scope: !7863)
!7863 = !DILexicalBlockFile(scope: !7852, file: !21, discriminator: 2)
!7864 = !DILocation(line: 198, column: 96, scope: !7863)
!7865 = !DILocation(line: 198, column: 83, scope: !7863)
!7866 = !DILocation(line: 198, column: 81, scope: !7863)
!7867 = !DILocation(line: 198, column: 100, scope: !7863)
!7868 = !DILocation(line: 198, column: 108, scope: !7863)
!7869 = !DILocation(line: 198, column: 109, scope: !7863)
!7870 = !DILocation(line: 198, column: 112, scope: !7863)
!7871 = !DILocation(line: 198, column: 106, scope: !7863)
!7872 = !DILocation(line: 198, column: 131, scope: !7863)
!7873 = !DILocation(line: 198, column: 51, scope: !7863)
!7874 = !DILocation(line: 199, column: 41, scope: !7852)
!7875 = !DILocation(line: 199, column: 60, scope: !7852)
!7876 = !DILocation(line: 199, column: 47, scope: !7852)
!7877 = !DILocation(line: 199, column: 45, scope: !7852)
!7878 = !DILocation(line: 199, column: 64, scope: !7852)
!7879 = !DILocation(line: 199, column: 72, scope: !7852)
!7880 = !DILocation(line: 199, column: 73, scope: !7852)
!7881 = !DILocation(line: 199, column: 76, scope: !7852)
!7882 = !DILocation(line: 199, column: 70, scope: !7852)
!7883 = !DILocation(line: 199, column: 95, scope: !7852)
!7884 = !DILocation(line: 199, column: 18, scope: !7852)
!7885 = !DILocation(line: 200, column: 9, scope: !7853)
!7886 = !DILocation(line: 201, column: 5, scope: !7843)
!7887 = !DILocation(line: 195, column: 21, scope: !7888)
!7888 = !DILexicalBlockFile(scope: !7839, file: !21, discriminator: 2)
!7889 = !DILocation(line: 195, column: 5, scope: !7888)
!7890 = distinct !{!7890, !7891}
!7891 = !DILocation(line: 195, column: 5, scope: !7821)
!7892 = !DILocation(line: 202, column: 1, scope: !7821)
!7893 = distinct !DISubprogram(name: "ff_h264_idct_add8_12_c", scope: !21, file: !21, line: 204, type: !1426, isLocal: false, isDefinition: true, scopeLine: 204, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!7894 = !DILocalVariable(name: "dest", arg: 1, scope: !7893, file: !21, line: 204, type: !1428)
!7895 = !DILocation(line: 204, column: 39, scope: !7893)
!7896 = !DILocalVariable(name: "block_offset", arg: 2, scope: !7893, file: !21, line: 204, type: !1216)
!7897 = !DILocation(line: 204, column: 56, scope: !7893)
!7898 = !DILocalVariable(name: "block", arg: 3, scope: !7893, file: !21, line: 204, type: !8)
!7899 = !DILocation(line: 204, column: 79, scope: !7893)
!7900 = !DILocalVariable(name: "stride", arg: 4, scope: !7893, file: !21, line: 204, type: !12)
!7901 = !DILocation(line: 204, column: 90, scope: !7893)
!7902 = !DILocalVariable(name: "nnzc", arg: 5, scope: !7893, file: !21, line: 204, type: !1217)
!7903 = !DILocation(line: 204, column: 112, scope: !7893)
!7904 = !DILocalVariable(name: "i", scope: !7893, file: !21, line: 205, type: !12)
!7905 = !DILocation(line: 205, column: 9, scope: !7893)
!7906 = !DILocalVariable(name: "j", scope: !7893, file: !21, line: 205, type: !12)
!7907 = !DILocation(line: 205, column: 12, scope: !7893)
!7908 = !DILocation(line: 206, column: 10, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7893, file: !21, line: 206, column: 5)
!7910 = !DILocation(line: 206, column: 9, scope: !7909)
!7911 = !DILocation(line: 206, column: 14, scope: !7912)
!7912 = !DILexicalBlockFile(scope: !7913, file: !21, discriminator: 1)
!7913 = distinct !DILexicalBlock(scope: !7909, file: !21, line: 206, column: 5)
!7914 = !DILocation(line: 206, column: 15, scope: !7912)
!7915 = !DILocation(line: 206, column: 5, scope: !7912)
!7916 = !DILocation(line: 207, column: 15, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7918, file: !21, line: 207, column: 9)
!7918 = distinct !DILexicalBlock(scope: !7913, file: !21, line: 206, column: 23)
!7919 = !DILocation(line: 207, column: 16, scope: !7917)
!7920 = !DILocation(line: 207, column: 14, scope: !7917)
!7921 = !DILocation(line: 207, column: 13, scope: !7917)
!7922 = !DILocation(line: 207, column: 21, scope: !7923)
!7923 = !DILexicalBlockFile(scope: !7924, file: !21, discriminator: 1)
!7924 = distinct !DILexicalBlock(scope: !7917, file: !21, line: 207, column: 9)
!7925 = !DILocation(line: 207, column: 23, scope: !7923)
!7926 = !DILocation(line: 207, column: 24, scope: !7923)
!7927 = !DILocation(line: 207, column: 27, scope: !7923)
!7928 = !DILocation(line: 207, column: 22, scope: !7923)
!7929 = !DILocation(line: 207, column: 9, scope: !7923)
!7930 = !DILocation(line: 208, column: 28, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7932, file: !21, line: 208, column: 16)
!7932 = distinct !DILexicalBlock(scope: !7924, file: !21, line: 207, column: 35)
!7933 = !DILocation(line: 208, column: 22, scope: !7931)
!7934 = !DILocation(line: 208, column: 16, scope: !7931)
!7935 = !DILocation(line: 208, column: 16, scope: !7932)
!7936 = !DILocation(line: 209, column: 44, scope: !7931)
!7937 = !DILocation(line: 209, column: 45, scope: !7931)
!7938 = !DILocation(line: 209, column: 39, scope: !7931)
!7939 = !DILocation(line: 209, column: 64, scope: !7931)
!7940 = !DILocation(line: 209, column: 51, scope: !7931)
!7941 = !DILocation(line: 209, column: 49, scope: !7931)
!7942 = !DILocation(line: 209, column: 68, scope: !7931)
!7943 = !DILocation(line: 209, column: 76, scope: !7931)
!7944 = !DILocation(line: 209, column: 77, scope: !7931)
!7945 = !DILocation(line: 209, column: 80, scope: !7931)
!7946 = !DILocation(line: 209, column: 74, scope: !7931)
!7947 = !DILocation(line: 209, column: 99, scope: !7931)
!7948 = !DILocation(line: 209, column: 17, scope: !7931)
!7949 = !DILocation(line: 210, column: 39, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7931, file: !21, line: 210, column: 21)
!7951 = !DILocation(line: 210, column: 40, scope: !7950)
!7952 = !DILocation(line: 210, column: 21, scope: !7950)
!7953 = !DILocation(line: 210, column: 32, scope: !7950)
!7954 = !DILocation(line: 210, column: 21, scope: !7931)
!7955 = !DILocation(line: 211, column: 47, scope: !7950)
!7956 = !DILocation(line: 211, column: 48, scope: !7950)
!7957 = !DILocation(line: 211, column: 42, scope: !7950)
!7958 = !DILocation(line: 211, column: 67, scope: !7950)
!7959 = !DILocation(line: 211, column: 54, scope: !7950)
!7960 = !DILocation(line: 211, column: 52, scope: !7950)
!7961 = !DILocation(line: 211, column: 71, scope: !7950)
!7962 = !DILocation(line: 211, column: 79, scope: !7950)
!7963 = !DILocation(line: 211, column: 80, scope: !7950)
!7964 = !DILocation(line: 211, column: 83, scope: !7950)
!7965 = !DILocation(line: 211, column: 77, scope: !7950)
!7966 = !DILocation(line: 211, column: 102, scope: !7950)
!7967 = !DILocation(line: 211, column: 17, scope: !7950)
!7968 = !DILocation(line: 212, column: 9, scope: !7932)
!7969 = !DILocation(line: 207, column: 32, scope: !7970)
!7970 = !DILexicalBlockFile(scope: !7924, file: !21, discriminator: 2)
!7971 = !DILocation(line: 207, column: 9, scope: !7970)
!7972 = distinct !{!7972, !7973}
!7973 = !DILocation(line: 207, column: 9, scope: !7918)
!7974 = !DILocation(line: 213, column: 5, scope: !7918)
!7975 = !DILocation(line: 206, column: 20, scope: !7976)
!7976 = !DILexicalBlockFile(scope: !7913, file: !21, discriminator: 2)
!7977 = !DILocation(line: 206, column: 5, scope: !7976)
!7978 = distinct !{!7978, !7979}
!7979 = !DILocation(line: 206, column: 5, scope: !7893)
!7980 = !DILocation(line: 214, column: 1, scope: !7893)
!7981 = distinct !DISubprogram(name: "ff_h264_idct_add8_422_12_c", scope: !21, file: !21, line: 216, type: !1426, isLocal: false, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!7982 = !DILocalVariable(name: "dest", arg: 1, scope: !7981, file: !21, line: 216, type: !1428)
!7983 = !DILocation(line: 216, column: 43, scope: !7981)
!7984 = !DILocalVariable(name: "block_offset", arg: 2, scope: !7981, file: !21, line: 216, type: !1216)
!7985 = !DILocation(line: 216, column: 60, scope: !7981)
!7986 = !DILocalVariable(name: "block", arg: 3, scope: !7981, file: !21, line: 216, type: !8)
!7987 = !DILocation(line: 216, column: 83, scope: !7981)
!7988 = !DILocalVariable(name: "stride", arg: 4, scope: !7981, file: !21, line: 216, type: !12)
!7989 = !DILocation(line: 216, column: 94, scope: !7981)
!7990 = !DILocalVariable(name: "nnzc", arg: 5, scope: !7981, file: !21, line: 216, type: !1217)
!7991 = !DILocation(line: 216, column: 116, scope: !7981)
!7992 = !DILocalVariable(name: "i", scope: !7981, file: !21, line: 217, type: !12)
!7993 = !DILocation(line: 217, column: 9, scope: !7981)
!7994 = !DILocalVariable(name: "j", scope: !7981, file: !21, line: 217, type: !12)
!7995 = !DILocation(line: 217, column: 12, scope: !7981)
!7996 = !DILocation(line: 219, column: 10, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7981, file: !21, line: 219, column: 5)
!7998 = !DILocation(line: 219, column: 9, scope: !7997)
!7999 = !DILocation(line: 219, column: 14, scope: !8000)
!8000 = !DILexicalBlockFile(scope: !8001, file: !21, discriminator: 1)
!8001 = distinct !DILexicalBlock(scope: !7997, file: !21, line: 219, column: 5)
!8002 = !DILocation(line: 219, column: 15, scope: !8000)
!8003 = !DILocation(line: 219, column: 5, scope: !8000)
!8004 = !DILocation(line: 220, column: 15, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !21, line: 220, column: 9)
!8006 = distinct !DILexicalBlock(scope: !8001, file: !21, line: 219, column: 23)
!8007 = !DILocation(line: 220, column: 16, scope: !8005)
!8008 = !DILocation(line: 220, column: 14, scope: !8005)
!8009 = !DILocation(line: 220, column: 13, scope: !8005)
!8010 = !DILocation(line: 220, column: 21, scope: !8011)
!8011 = !DILexicalBlockFile(scope: !8012, file: !21, discriminator: 1)
!8012 = distinct !DILexicalBlock(scope: !8005, file: !21, line: 220, column: 9)
!8013 = !DILocation(line: 220, column: 23, scope: !8011)
!8014 = !DILocation(line: 220, column: 24, scope: !8011)
!8015 = !DILocation(line: 220, column: 27, scope: !8011)
!8016 = !DILocation(line: 220, column: 22, scope: !8011)
!8017 = !DILocation(line: 220, column: 9, scope: !8011)
!8018 = !DILocation(line: 221, column: 28, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8020, file: !21, line: 221, column: 16)
!8020 = distinct !DILexicalBlock(scope: !8012, file: !21, line: 220, column: 35)
!8021 = !DILocation(line: 221, column: 22, scope: !8019)
!8022 = !DILocation(line: 221, column: 16, scope: !8019)
!8023 = !DILocation(line: 221, column: 16, scope: !8020)
!8024 = !DILocation(line: 222, column: 44, scope: !8019)
!8025 = !DILocation(line: 222, column: 45, scope: !8019)
!8026 = !DILocation(line: 222, column: 39, scope: !8019)
!8027 = !DILocation(line: 222, column: 64, scope: !8019)
!8028 = !DILocation(line: 222, column: 51, scope: !8019)
!8029 = !DILocation(line: 222, column: 49, scope: !8019)
!8030 = !DILocation(line: 222, column: 68, scope: !8019)
!8031 = !DILocation(line: 222, column: 76, scope: !8019)
!8032 = !DILocation(line: 222, column: 77, scope: !8019)
!8033 = !DILocation(line: 222, column: 80, scope: !8019)
!8034 = !DILocation(line: 222, column: 74, scope: !8019)
!8035 = !DILocation(line: 222, column: 99, scope: !8019)
!8036 = !DILocation(line: 222, column: 17, scope: !8019)
!8037 = !DILocation(line: 223, column: 39, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8019, file: !21, line: 223, column: 21)
!8039 = !DILocation(line: 223, column: 40, scope: !8038)
!8040 = !DILocation(line: 223, column: 21, scope: !8038)
!8041 = !DILocation(line: 223, column: 32, scope: !8038)
!8042 = !DILocation(line: 223, column: 21, scope: !8019)
!8043 = !DILocation(line: 224, column: 47, scope: !8038)
!8044 = !DILocation(line: 224, column: 48, scope: !8038)
!8045 = !DILocation(line: 224, column: 42, scope: !8038)
!8046 = !DILocation(line: 224, column: 67, scope: !8038)
!8047 = !DILocation(line: 224, column: 54, scope: !8038)
!8048 = !DILocation(line: 224, column: 52, scope: !8038)
!8049 = !DILocation(line: 224, column: 71, scope: !8038)
!8050 = !DILocation(line: 224, column: 79, scope: !8038)
!8051 = !DILocation(line: 224, column: 80, scope: !8038)
!8052 = !DILocation(line: 224, column: 83, scope: !8038)
!8053 = !DILocation(line: 224, column: 77, scope: !8038)
!8054 = !DILocation(line: 224, column: 102, scope: !8038)
!8055 = !DILocation(line: 224, column: 17, scope: !8038)
!8056 = !DILocation(line: 225, column: 9, scope: !8020)
!8057 = !DILocation(line: 220, column: 32, scope: !8058)
!8058 = !DILexicalBlockFile(scope: !8012, file: !21, discriminator: 2)
!8059 = !DILocation(line: 220, column: 9, scope: !8058)
!8060 = distinct !{!8060, !8061}
!8061 = !DILocation(line: 220, column: 9, scope: !8006)
!8062 = !DILocation(line: 226, column: 5, scope: !8006)
!8063 = !DILocation(line: 219, column: 20, scope: !8064)
!8064 = !DILexicalBlockFile(scope: !8001, file: !21, discriminator: 2)
!8065 = !DILocation(line: 219, column: 5, scope: !8064)
!8066 = distinct !{!8066, !8067}
!8067 = !DILocation(line: 219, column: 5, scope: !7981)
!8068 = !DILocation(line: 228, column: 10, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !7981, file: !21, line: 228, column: 5)
!8070 = !DILocation(line: 228, column: 9, scope: !8069)
!8071 = !DILocation(line: 228, column: 14, scope: !8072)
!8072 = !DILexicalBlockFile(scope: !8073, file: !21, discriminator: 1)
!8073 = distinct !DILexicalBlock(scope: !8069, file: !21, line: 228, column: 5)
!8074 = !DILocation(line: 228, column: 15, scope: !8072)
!8075 = !DILocation(line: 228, column: 5, scope: !8072)
!8076 = !DILocation(line: 229, column: 15, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8078, file: !21, line: 229, column: 9)
!8078 = distinct !DILexicalBlock(scope: !8073, file: !21, line: 228, column: 23)
!8079 = !DILocation(line: 229, column: 16, scope: !8077)
!8080 = !DILocation(line: 229, column: 19, scope: !8077)
!8081 = !DILocation(line: 229, column: 14, scope: !8077)
!8082 = !DILocation(line: 229, column: 13, scope: !8077)
!8083 = !DILocation(line: 229, column: 23, scope: !8084)
!8084 = !DILexicalBlockFile(scope: !8085, file: !21, discriminator: 1)
!8085 = distinct !DILexicalBlock(scope: !8077, file: !21, line: 229, column: 9)
!8086 = !DILocation(line: 229, column: 25, scope: !8084)
!8087 = !DILocation(line: 229, column: 26, scope: !8084)
!8088 = !DILocation(line: 229, column: 29, scope: !8084)
!8089 = !DILocation(line: 229, column: 24, scope: !8084)
!8090 = !DILocation(line: 229, column: 9, scope: !8084)
!8091 = !DILocation(line: 230, column: 28, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8093, file: !21, line: 230, column: 16)
!8093 = distinct !DILexicalBlock(scope: !8085, file: !21, line: 229, column: 37)
!8094 = !DILocation(line: 230, column: 29, scope: !8092)
!8095 = !DILocation(line: 230, column: 22, scope: !8092)
!8096 = !DILocation(line: 230, column: 16, scope: !8092)
!8097 = !DILocation(line: 230, column: 16, scope: !8093)
!8098 = !DILocation(line: 231, column: 44, scope: !8092)
!8099 = !DILocation(line: 231, column: 45, scope: !8092)
!8100 = !DILocation(line: 231, column: 39, scope: !8092)
!8101 = !DILocation(line: 231, column: 64, scope: !8092)
!8102 = !DILocation(line: 231, column: 65, scope: !8092)
!8103 = !DILocation(line: 231, column: 51, scope: !8092)
!8104 = !DILocation(line: 231, column: 49, scope: !8092)
!8105 = !DILocation(line: 231, column: 70, scope: !8092)
!8106 = !DILocation(line: 231, column: 78, scope: !8092)
!8107 = !DILocation(line: 231, column: 79, scope: !8092)
!8108 = !DILocation(line: 231, column: 82, scope: !8092)
!8109 = !DILocation(line: 231, column: 76, scope: !8092)
!8110 = !DILocation(line: 231, column: 101, scope: !8092)
!8111 = !DILocation(line: 231, column: 17, scope: !8092)
!8112 = !DILocation(line: 232, column: 39, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8092, file: !21, line: 232, column: 21)
!8114 = !DILocation(line: 232, column: 40, scope: !8113)
!8115 = !DILocation(line: 232, column: 21, scope: !8113)
!8116 = !DILocation(line: 232, column: 32, scope: !8113)
!8117 = !DILocation(line: 232, column: 21, scope: !8092)
!8118 = !DILocation(line: 233, column: 47, scope: !8113)
!8119 = !DILocation(line: 233, column: 48, scope: !8113)
!8120 = !DILocation(line: 233, column: 42, scope: !8113)
!8121 = !DILocation(line: 233, column: 67, scope: !8113)
!8122 = !DILocation(line: 233, column: 68, scope: !8113)
!8123 = !DILocation(line: 233, column: 54, scope: !8113)
!8124 = !DILocation(line: 233, column: 52, scope: !8113)
!8125 = !DILocation(line: 233, column: 73, scope: !8113)
!8126 = !DILocation(line: 233, column: 81, scope: !8113)
!8127 = !DILocation(line: 233, column: 82, scope: !8113)
!8128 = !DILocation(line: 233, column: 85, scope: !8113)
!8129 = !DILocation(line: 233, column: 79, scope: !8113)
!8130 = !DILocation(line: 233, column: 104, scope: !8113)
!8131 = !DILocation(line: 233, column: 17, scope: !8113)
!8132 = !DILocation(line: 234, column: 9, scope: !8093)
!8133 = !DILocation(line: 229, column: 34, scope: !8134)
!8134 = !DILexicalBlockFile(scope: !8085, file: !21, discriminator: 2)
!8135 = !DILocation(line: 229, column: 9, scope: !8134)
!8136 = distinct !{!8136, !8137}
!8137 = !DILocation(line: 229, column: 9, scope: !8078)
!8138 = !DILocation(line: 235, column: 5, scope: !8078)
!8139 = !DILocation(line: 228, column: 20, scope: !8140)
!8140 = !DILexicalBlockFile(scope: !8073, file: !21, discriminator: 2)
!8141 = !DILocation(line: 228, column: 5, scope: !8140)
!8142 = distinct !{!8142, !8143}
!8143 = !DILocation(line: 228, column: 5, scope: !7981)
!8144 = !DILocation(line: 236, column: 1, scope: !7981)
!8145 = !DILocalVariable(name: "_output", arg: 1, scope: !44, file: !21, line: 242, type: !8)
!8146 = !DILocation(line: 242, column: 49, scope: !44)
!8147 = !DILocalVariable(name: "_input", arg: 2, scope: !44, file: !21, line: 242, type: !8)
!8148 = !DILocation(line: 242, column: 67, scope: !44)
!8149 = !DILocalVariable(name: "qmul", arg: 3, scope: !44, file: !21, line: 242, type: !12)
!8150 = !DILocation(line: 242, column: 79, scope: !44)
!8151 = !DILocalVariable(name: "i", scope: !44, file: !21, line: 244, type: !12)
!8152 = !DILocation(line: 244, column: 9, scope: !44)
!8153 = !DILocalVariable(name: "temp", scope: !44, file: !21, line: 245, type: !1689)
!8154 = !DILocation(line: 245, column: 9, scope: !44)
!8155 = !DILocalVariable(name: "input", scope: !44, file: !21, line: 247, type: !16)
!8156 = !DILocation(line: 247, column: 14, scope: !44)
!8157 = !DILocation(line: 247, column: 32, scope: !44)
!8158 = !DILocation(line: 247, column: 22, scope: !44)
!8159 = !DILocalVariable(name: "output", scope: !44, file: !21, line: 248, type: !16)
!8160 = !DILocation(line: 248, column: 14, scope: !44)
!8161 = !DILocation(line: 248, column: 33, scope: !44)
!8162 = !DILocation(line: 248, column: 23, scope: !44)
!8163 = !DILocation(line: 250, column: 10, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !44, file: !21, line: 250, column: 5)
!8165 = !DILocation(line: 250, column: 9, scope: !8164)
!8166 = !DILocation(line: 250, column: 14, scope: !8167)
!8167 = !DILexicalBlockFile(scope: !8168, file: !21, discriminator: 1)
!8168 = distinct !DILexicalBlock(scope: !8164, file: !21, line: 250, column: 5)
!8169 = !DILocation(line: 250, column: 15, scope: !8167)
!8170 = !DILocation(line: 250, column: 5, scope: !8167)
!8171 = !DILocalVariable(name: "z0", scope: !8172, file: !21, line: 251, type: !468)
!8172 = distinct !DILexicalBlock(scope: !8168, file: !21, line: 250, column: 23)
!8173 = !DILocation(line: 251, column: 19, scope: !8172)
!8174 = !DILocation(line: 251, column: 31, scope: !8172)
!8175 = !DILocation(line: 251, column: 30, scope: !8172)
!8176 = !DILocation(line: 251, column: 32, scope: !8172)
!8177 = !DILocation(line: 251, column: 23, scope: !8172)
!8178 = !DILocation(line: 251, column: 46, scope: !8172)
!8179 = !DILocation(line: 251, column: 45, scope: !8172)
!8180 = !DILocation(line: 251, column: 47, scope: !8172)
!8181 = !DILocation(line: 251, column: 38, scope: !8172)
!8182 = !DILocation(line: 251, column: 36, scope: !8172)
!8183 = !DILocalVariable(name: "z1", scope: !8172, file: !21, line: 252, type: !468)
!8184 = !DILocation(line: 252, column: 19, scope: !8172)
!8185 = !DILocation(line: 252, column: 31, scope: !8172)
!8186 = !DILocation(line: 252, column: 30, scope: !8172)
!8187 = !DILocation(line: 252, column: 32, scope: !8172)
!8188 = !DILocation(line: 252, column: 23, scope: !8172)
!8189 = !DILocation(line: 252, column: 46, scope: !8172)
!8190 = !DILocation(line: 252, column: 45, scope: !8172)
!8191 = !DILocation(line: 252, column: 47, scope: !8172)
!8192 = !DILocation(line: 252, column: 38, scope: !8172)
!8193 = !DILocation(line: 252, column: 36, scope: !8172)
!8194 = !DILocalVariable(name: "z2", scope: !8172, file: !21, line: 253, type: !468)
!8195 = !DILocation(line: 253, column: 19, scope: !8172)
!8196 = !DILocation(line: 253, column: 31, scope: !8172)
!8197 = !DILocation(line: 253, column: 30, scope: !8172)
!8198 = !DILocation(line: 253, column: 32, scope: !8172)
!8199 = !DILocation(line: 253, column: 23, scope: !8172)
!8200 = !DILocation(line: 253, column: 46, scope: !8172)
!8201 = !DILocation(line: 253, column: 45, scope: !8172)
!8202 = !DILocation(line: 253, column: 47, scope: !8172)
!8203 = !DILocation(line: 253, column: 38, scope: !8172)
!8204 = !DILocation(line: 253, column: 36, scope: !8172)
!8205 = !DILocalVariable(name: "z3", scope: !8172, file: !21, line: 254, type: !468)
!8206 = !DILocation(line: 254, column: 19, scope: !8172)
!8207 = !DILocation(line: 254, column: 31, scope: !8172)
!8208 = !DILocation(line: 254, column: 30, scope: !8172)
!8209 = !DILocation(line: 254, column: 32, scope: !8172)
!8210 = !DILocation(line: 254, column: 23, scope: !8172)
!8211 = !DILocation(line: 254, column: 46, scope: !8172)
!8212 = !DILocation(line: 254, column: 45, scope: !8172)
!8213 = !DILocation(line: 254, column: 47, scope: !8172)
!8214 = !DILocation(line: 254, column: 38, scope: !8172)
!8215 = !DILocation(line: 254, column: 36, scope: !8172)
!8216 = !DILocation(line: 256, column: 22, scope: !8172)
!8217 = !DILocation(line: 256, column: 25, scope: !8172)
!8218 = !DILocation(line: 256, column: 24, scope: !8172)
!8219 = !DILocation(line: 256, column: 16, scope: !8172)
!8220 = !DILocation(line: 256, column: 15, scope: !8172)
!8221 = !DILocation(line: 256, column: 17, scope: !8172)
!8222 = !DILocation(line: 256, column: 9, scope: !8172)
!8223 = !DILocation(line: 256, column: 20, scope: !8172)
!8224 = !DILocation(line: 257, column: 22, scope: !8172)
!8225 = !DILocation(line: 257, column: 25, scope: !8172)
!8226 = !DILocation(line: 257, column: 24, scope: !8172)
!8227 = !DILocation(line: 257, column: 16, scope: !8172)
!8228 = !DILocation(line: 257, column: 15, scope: !8172)
!8229 = !DILocation(line: 257, column: 17, scope: !8172)
!8230 = !DILocation(line: 257, column: 9, scope: !8172)
!8231 = !DILocation(line: 257, column: 20, scope: !8172)
!8232 = !DILocation(line: 258, column: 22, scope: !8172)
!8233 = !DILocation(line: 258, column: 25, scope: !8172)
!8234 = !DILocation(line: 258, column: 24, scope: !8172)
!8235 = !DILocation(line: 258, column: 16, scope: !8172)
!8236 = !DILocation(line: 258, column: 15, scope: !8172)
!8237 = !DILocation(line: 258, column: 17, scope: !8172)
!8238 = !DILocation(line: 258, column: 9, scope: !8172)
!8239 = !DILocation(line: 258, column: 20, scope: !8172)
!8240 = !DILocation(line: 259, column: 22, scope: !8172)
!8241 = !DILocation(line: 259, column: 25, scope: !8172)
!8242 = !DILocation(line: 259, column: 24, scope: !8172)
!8243 = !DILocation(line: 259, column: 16, scope: !8172)
!8244 = !DILocation(line: 259, column: 15, scope: !8172)
!8245 = !DILocation(line: 259, column: 17, scope: !8172)
!8246 = !DILocation(line: 259, column: 9, scope: !8172)
!8247 = !DILocation(line: 259, column: 20, scope: !8172)
!8248 = !DILocation(line: 260, column: 5, scope: !8172)
!8249 = !DILocation(line: 250, column: 20, scope: !8250)
!8250 = !DILexicalBlockFile(scope: !8168, file: !21, discriminator: 2)
!8251 = !DILocation(line: 250, column: 5, scope: !8250)
!8252 = distinct !{!8252, !8253}
!8253 = !DILocation(line: 250, column: 5, scope: !44)
!8254 = !DILocation(line: 262, column: 10, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !44, file: !21, line: 262, column: 5)
!8256 = !DILocation(line: 262, column: 9, scope: !8255)
!8257 = !DILocation(line: 262, column: 14, scope: !8258)
!8258 = !DILexicalBlockFile(scope: !8259, file: !21, discriminator: 1)
!8259 = distinct !DILexicalBlock(scope: !8255, file: !21, line: 262, column: 5)
!8260 = !DILocation(line: 262, column: 15, scope: !8258)
!8261 = !DILocation(line: 262, column: 5, scope: !8258)
!8262 = !DILocalVariable(name: "offset", scope: !8263, file: !21, line: 263, type: !468)
!8263 = distinct !DILexicalBlock(scope: !8259, file: !21, line: 262, column: 23)
!8264 = !DILocation(line: 263, column: 19, scope: !8263)
!8265 = !DILocation(line: 263, column: 36, scope: !8263)
!8266 = !DILocation(line: 263, column: 27, scope: !8263)
!8267 = !DILocalVariable(name: "z0", scope: !8263, file: !21, line: 264, type: !106)
!8268 = !DILocation(line: 264, column: 24, scope: !8263)
!8269 = !DILocation(line: 264, column: 37, scope: !8263)
!8270 = !DILocation(line: 264, column: 36, scope: !8263)
!8271 = !DILocation(line: 264, column: 28, scope: !8263)
!8272 = !DILocation(line: 264, column: 51, scope: !8263)
!8273 = !DILocation(line: 264, column: 50, scope: !8263)
!8274 = !DILocation(line: 264, column: 42, scope: !8263)
!8275 = !DILocation(line: 264, column: 40, scope: !8263)
!8276 = !DILocalVariable(name: "z1", scope: !8263, file: !21, line: 265, type: !106)
!8277 = !DILocation(line: 265, column: 24, scope: !8263)
!8278 = !DILocation(line: 265, column: 37, scope: !8263)
!8279 = !DILocation(line: 265, column: 36, scope: !8263)
!8280 = !DILocation(line: 265, column: 28, scope: !8263)
!8281 = !DILocation(line: 265, column: 51, scope: !8263)
!8282 = !DILocation(line: 265, column: 50, scope: !8263)
!8283 = !DILocation(line: 265, column: 42, scope: !8263)
!8284 = !DILocation(line: 265, column: 40, scope: !8263)
!8285 = !DILocalVariable(name: "z2", scope: !8263, file: !21, line: 266, type: !106)
!8286 = !DILocation(line: 266, column: 24, scope: !8263)
!8287 = !DILocation(line: 266, column: 37, scope: !8263)
!8288 = !DILocation(line: 266, column: 36, scope: !8263)
!8289 = !DILocation(line: 266, column: 28, scope: !8263)
!8290 = !DILocation(line: 266, column: 51, scope: !8263)
!8291 = !DILocation(line: 266, column: 50, scope: !8263)
!8292 = !DILocation(line: 266, column: 42, scope: !8263)
!8293 = !DILocation(line: 266, column: 40, scope: !8263)
!8294 = !DILocalVariable(name: "z3", scope: !8263, file: !21, line: 267, type: !106)
!8295 = !DILocation(line: 267, column: 24, scope: !8263)
!8296 = !DILocation(line: 267, column: 37, scope: !8263)
!8297 = !DILocation(line: 267, column: 36, scope: !8263)
!8298 = !DILocation(line: 267, column: 28, scope: !8263)
!8299 = !DILocation(line: 267, column: 51, scope: !8263)
!8300 = !DILocation(line: 267, column: 50, scope: !8263)
!8301 = !DILocation(line: 267, column: 42, scope: !8263)
!8302 = !DILocation(line: 267, column: 40, scope: !8263)
!8303 = !DILocation(line: 269, column: 38, scope: !8263)
!8304 = !DILocation(line: 269, column: 43, scope: !8263)
!8305 = !DILocation(line: 269, column: 41, scope: !8263)
!8306 = !DILocation(line: 269, column: 47, scope: !8263)
!8307 = !DILocation(line: 269, column: 46, scope: !8263)
!8308 = !DILocation(line: 269, column: 52, scope: !8263)
!8309 = !DILocation(line: 269, column: 60, scope: !8263)
!8310 = !DILocation(line: 269, column: 22, scope: !8263)
!8311 = !DILocation(line: 269, column: 21, scope: !8263)
!8312 = !DILocation(line: 269, column: 9, scope: !8263)
!8313 = !DILocation(line: 269, column: 29, scope: !8263)
!8314 = !DILocation(line: 270, column: 38, scope: !8263)
!8315 = !DILocation(line: 270, column: 43, scope: !8263)
!8316 = !DILocation(line: 270, column: 41, scope: !8263)
!8317 = !DILocation(line: 270, column: 47, scope: !8263)
!8318 = !DILocation(line: 270, column: 46, scope: !8263)
!8319 = !DILocation(line: 270, column: 52, scope: !8263)
!8320 = !DILocation(line: 270, column: 60, scope: !8263)
!8321 = !DILocation(line: 270, column: 22, scope: !8263)
!8322 = !DILocation(line: 270, column: 21, scope: !8263)
!8323 = !DILocation(line: 270, column: 9, scope: !8263)
!8324 = !DILocation(line: 270, column: 29, scope: !8263)
!8325 = !DILocation(line: 271, column: 38, scope: !8263)
!8326 = !DILocation(line: 271, column: 43, scope: !8263)
!8327 = !DILocation(line: 271, column: 41, scope: !8263)
!8328 = !DILocation(line: 271, column: 47, scope: !8263)
!8329 = !DILocation(line: 271, column: 46, scope: !8263)
!8330 = !DILocation(line: 271, column: 52, scope: !8263)
!8331 = !DILocation(line: 271, column: 60, scope: !8263)
!8332 = !DILocation(line: 271, column: 22, scope: !8263)
!8333 = !DILocation(line: 271, column: 21, scope: !8263)
!8334 = !DILocation(line: 271, column: 9, scope: !8263)
!8335 = !DILocation(line: 271, column: 29, scope: !8263)
!8336 = !DILocation(line: 272, column: 38, scope: !8263)
!8337 = !DILocation(line: 272, column: 43, scope: !8263)
!8338 = !DILocation(line: 272, column: 41, scope: !8263)
!8339 = !DILocation(line: 272, column: 47, scope: !8263)
!8340 = !DILocation(line: 272, column: 46, scope: !8263)
!8341 = !DILocation(line: 272, column: 52, scope: !8263)
!8342 = !DILocation(line: 272, column: 60, scope: !8263)
!8343 = !DILocation(line: 272, column: 22, scope: !8263)
!8344 = !DILocation(line: 272, column: 21, scope: !8263)
!8345 = !DILocation(line: 272, column: 9, scope: !8263)
!8346 = !DILocation(line: 272, column: 29, scope: !8263)
!8347 = !DILocation(line: 273, column: 5, scope: !8263)
!8348 = !DILocation(line: 262, column: 20, scope: !8349)
!8349 = !DILexicalBlockFile(scope: !8259, file: !21, discriminator: 2)
!8350 = !DILocation(line: 262, column: 5, scope: !8349)
!8351 = distinct !{!8351, !8352}
!8352 = !DILocation(line: 262, column: 5, scope: !44)
!8353 = !DILocation(line: 275, column: 1, scope: !44)
!8354 = !DILocalVariable(name: "_block", arg: 1, scope: !46, file: !21, line: 277, type: !8)
!8355 = !DILocation(line: 277, column: 54, scope: !46)
!8356 = !DILocalVariable(name: "qmul", arg: 2, scope: !46, file: !21, line: 277, type: !12)
!8357 = !DILocation(line: 277, column: 66, scope: !46)
!8358 = !DILocalVariable(name: "stride", scope: !46, file: !21, line: 278, type: !468)
!8359 = !DILocation(line: 278, column: 15, scope: !46)
!8360 = !DILocalVariable(name: "xStride", scope: !46, file: !21, line: 279, type: !468)
!8361 = !DILocation(line: 279, column: 15, scope: !46)
!8362 = !DILocalVariable(name: "i", scope: !46, file: !21, line: 280, type: !12)
!8363 = !DILocation(line: 280, column: 9, scope: !46)
!8364 = !DILocalVariable(name: "temp", scope: !46, file: !21, line: 281, type: !1905)
!8365 = !DILocation(line: 281, column: 9, scope: !46)
!8366 = !DILocalVariable(name: "block", scope: !46, file: !21, line: 283, type: !16)
!8367 = !DILocation(line: 283, column: 14, scope: !46)
!8368 = !DILocation(line: 283, column: 32, scope: !46)
!8369 = !DILocation(line: 283, column: 22, scope: !46)
!8370 = !DILocation(line: 285, column: 10, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !46, file: !21, line: 285, column: 5)
!8372 = !DILocation(line: 285, column: 9, scope: !8371)
!8373 = !DILocation(line: 285, column: 14, scope: !8374)
!8374 = !DILexicalBlockFile(scope: !8375, file: !21, discriminator: 1)
!8375 = distinct !DILexicalBlock(scope: !8371, file: !21, line: 285, column: 5)
!8376 = !DILocation(line: 285, column: 15, scope: !8374)
!8377 = !DILocation(line: 285, column: 5, scope: !8374)
!8378 = !DILocation(line: 286, column: 36, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8375, file: !21, line: 285, column: 23)
!8380 = !DILocation(line: 286, column: 35, scope: !8379)
!8381 = !DILocation(line: 286, column: 38, scope: !8379)
!8382 = !DILocation(line: 286, column: 23, scope: !8379)
!8383 = !DILocation(line: 286, column: 66, scope: !8379)
!8384 = !DILocation(line: 286, column: 65, scope: !8379)
!8385 = !DILocation(line: 286, column: 68, scope: !8379)
!8386 = !DILocation(line: 286, column: 53, scope: !8379)
!8387 = !DILocation(line: 286, column: 51, scope: !8379)
!8388 = !DILocation(line: 286, column: 16, scope: !8379)
!8389 = !DILocation(line: 286, column: 15, scope: !8379)
!8390 = !DILocation(line: 286, column: 17, scope: !8379)
!8391 = !DILocation(line: 286, column: 9, scope: !8379)
!8392 = !DILocation(line: 286, column: 21, scope: !8379)
!8393 = !DILocation(line: 287, column: 36, scope: !8379)
!8394 = !DILocation(line: 287, column: 35, scope: !8379)
!8395 = !DILocation(line: 287, column: 38, scope: !8379)
!8396 = !DILocation(line: 287, column: 23, scope: !8379)
!8397 = !DILocation(line: 287, column: 66, scope: !8379)
!8398 = !DILocation(line: 287, column: 65, scope: !8379)
!8399 = !DILocation(line: 287, column: 68, scope: !8379)
!8400 = !DILocation(line: 287, column: 53, scope: !8379)
!8401 = !DILocation(line: 287, column: 51, scope: !8379)
!8402 = !DILocation(line: 287, column: 16, scope: !8379)
!8403 = !DILocation(line: 287, column: 15, scope: !8379)
!8404 = !DILocation(line: 287, column: 17, scope: !8379)
!8405 = !DILocation(line: 287, column: 9, scope: !8379)
!8406 = !DILocation(line: 287, column: 21, scope: !8379)
!8407 = !DILocation(line: 288, column: 5, scope: !8379)
!8408 = !DILocation(line: 285, column: 20, scope: !8409)
!8409 = !DILexicalBlockFile(scope: !8375, file: !21, discriminator: 2)
!8410 = !DILocation(line: 285, column: 5, scope: !8409)
!8411 = distinct !{!8411, !8412}
!8412 = !DILocation(line: 285, column: 5, scope: !46)
!8413 = !DILocation(line: 290, column: 10, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !46, file: !21, line: 290, column: 5)
!8415 = !DILocation(line: 290, column: 9, scope: !8414)
!8416 = !DILocation(line: 290, column: 14, scope: !8417)
!8417 = !DILexicalBlockFile(scope: !8418, file: !21, discriminator: 1)
!8418 = distinct !DILexicalBlock(scope: !8414, file: !21, line: 290, column: 5)
!8419 = !DILocation(line: 290, column: 15, scope: !8417)
!8420 = !DILocation(line: 290, column: 5, scope: !8417)
!8421 = !DILocalVariable(name: "offset", scope: !8422, file: !21, line: 291, type: !468)
!8422 = distinct !DILexicalBlock(scope: !8418, file: !21, line: 290, column: 23)
!8423 = !DILocation(line: 291, column: 19, scope: !8422)
!8424 = !DILocation(line: 291, column: 36, scope: !8422)
!8425 = !DILocation(line: 291, column: 27, scope: !8422)
!8426 = !DILocalVariable(name: "z0", scope: !8422, file: !21, line: 292, type: !106)
!8427 = !DILocation(line: 292, column: 24, scope: !8422)
!8428 = !DILocation(line: 292, column: 37, scope: !8422)
!8429 = !DILocation(line: 292, column: 36, scope: !8422)
!8430 = !DILocation(line: 292, column: 28, scope: !8422)
!8431 = !DILocation(line: 292, column: 51, scope: !8422)
!8432 = !DILocation(line: 292, column: 50, scope: !8422)
!8433 = !DILocation(line: 292, column: 42, scope: !8422)
!8434 = !DILocation(line: 292, column: 40, scope: !8422)
!8435 = !DILocalVariable(name: "z1", scope: !8422, file: !21, line: 293, type: !106)
!8436 = !DILocation(line: 293, column: 24, scope: !8422)
!8437 = !DILocation(line: 293, column: 37, scope: !8422)
!8438 = !DILocation(line: 293, column: 36, scope: !8422)
!8439 = !DILocation(line: 293, column: 28, scope: !8422)
!8440 = !DILocation(line: 293, column: 51, scope: !8422)
!8441 = !DILocation(line: 293, column: 50, scope: !8422)
!8442 = !DILocation(line: 293, column: 42, scope: !8422)
!8443 = !DILocation(line: 293, column: 40, scope: !8422)
!8444 = !DILocalVariable(name: "z2", scope: !8422, file: !21, line: 294, type: !106)
!8445 = !DILocation(line: 294, column: 24, scope: !8422)
!8446 = !DILocation(line: 294, column: 37, scope: !8422)
!8447 = !DILocation(line: 294, column: 36, scope: !8422)
!8448 = !DILocation(line: 294, column: 28, scope: !8422)
!8449 = !DILocation(line: 294, column: 51, scope: !8422)
!8450 = !DILocation(line: 294, column: 50, scope: !8422)
!8451 = !DILocation(line: 294, column: 42, scope: !8422)
!8452 = !DILocation(line: 294, column: 40, scope: !8422)
!8453 = !DILocalVariable(name: "z3", scope: !8422, file: !21, line: 295, type: !106)
!8454 = !DILocation(line: 295, column: 24, scope: !8422)
!8455 = !DILocation(line: 295, column: 37, scope: !8422)
!8456 = !DILocation(line: 295, column: 36, scope: !8422)
!8457 = !DILocation(line: 295, column: 28, scope: !8422)
!8458 = !DILocation(line: 295, column: 51, scope: !8422)
!8459 = !DILocation(line: 295, column: 50, scope: !8422)
!8460 = !DILocation(line: 295, column: 42, scope: !8422)
!8461 = !DILocation(line: 295, column: 40, scope: !8422)
!8462 = !DILocation(line: 297, column: 40, scope: !8422)
!8463 = !DILocation(line: 297, column: 45, scope: !8422)
!8464 = !DILocation(line: 297, column: 43, scope: !8422)
!8465 = !DILocation(line: 297, column: 49, scope: !8422)
!8466 = !DILocation(line: 297, column: 48, scope: !8422)
!8467 = !DILocation(line: 297, column: 54, scope: !8422)
!8468 = !DILocation(line: 297, column: 61, scope: !8422)
!8469 = !DILocation(line: 297, column: 24, scope: !8422)
!8470 = !DILocation(line: 297, column: 23, scope: !8422)
!8471 = !DILocation(line: 297, column: 9, scope: !8422)
!8472 = !DILocation(line: 297, column: 31, scope: !8422)
!8473 = !DILocation(line: 298, column: 40, scope: !8422)
!8474 = !DILocation(line: 298, column: 45, scope: !8422)
!8475 = !DILocation(line: 298, column: 43, scope: !8422)
!8476 = !DILocation(line: 298, column: 49, scope: !8422)
!8477 = !DILocation(line: 298, column: 48, scope: !8422)
!8478 = !DILocation(line: 298, column: 54, scope: !8422)
!8479 = !DILocation(line: 298, column: 61, scope: !8422)
!8480 = !DILocation(line: 298, column: 24, scope: !8422)
!8481 = !DILocation(line: 298, column: 23, scope: !8422)
!8482 = !DILocation(line: 298, column: 9, scope: !8422)
!8483 = !DILocation(line: 298, column: 31, scope: !8422)
!8484 = !DILocation(line: 299, column: 40, scope: !8422)
!8485 = !DILocation(line: 299, column: 45, scope: !8422)
!8486 = !DILocation(line: 299, column: 43, scope: !8422)
!8487 = !DILocation(line: 299, column: 49, scope: !8422)
!8488 = !DILocation(line: 299, column: 48, scope: !8422)
!8489 = !DILocation(line: 299, column: 54, scope: !8422)
!8490 = !DILocation(line: 299, column: 61, scope: !8422)
!8491 = !DILocation(line: 299, column: 24, scope: !8422)
!8492 = !DILocation(line: 299, column: 23, scope: !8422)
!8493 = !DILocation(line: 299, column: 9, scope: !8422)
!8494 = !DILocation(line: 299, column: 31, scope: !8422)
!8495 = !DILocation(line: 300, column: 40, scope: !8422)
!8496 = !DILocation(line: 300, column: 45, scope: !8422)
!8497 = !DILocation(line: 300, column: 43, scope: !8422)
!8498 = !DILocation(line: 300, column: 49, scope: !8422)
!8499 = !DILocation(line: 300, column: 48, scope: !8422)
!8500 = !DILocation(line: 300, column: 54, scope: !8422)
!8501 = !DILocation(line: 300, column: 61, scope: !8422)
!8502 = !DILocation(line: 300, column: 24, scope: !8422)
!8503 = !DILocation(line: 300, column: 23, scope: !8422)
!8504 = !DILocation(line: 300, column: 9, scope: !8422)
!8505 = !DILocation(line: 300, column: 31, scope: !8422)
!8506 = !DILocation(line: 301, column: 5, scope: !8422)
!8507 = !DILocation(line: 290, column: 20, scope: !8508)
!8508 = !DILexicalBlockFile(scope: !8418, file: !21, discriminator: 2)
!8509 = !DILocation(line: 290, column: 5, scope: !8508)
!8510 = distinct !{!8510, !8511}
!8511 = !DILocation(line: 290, column: 5, scope: !46)
!8512 = !DILocation(line: 302, column: 1, scope: !46)
!8513 = distinct !DISubprogram(name: "ff_h264_chroma_dc_dequant_idct_12_c", scope: !21, file: !21, line: 304, type: !30, isLocal: false, isDefinition: true, scopeLine: 304, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!8514 = !DILocalVariable(name: "_block", arg: 1, scope: !8513, file: !21, line: 304, type: !8)
!8515 = !DILocation(line: 304, column: 51, scope: !8513)
!8516 = !DILocalVariable(name: "qmul", arg: 2, scope: !8513, file: !21, line: 304, type: !12)
!8517 = !DILocation(line: 304, column: 63, scope: !8513)
!8518 = !DILocalVariable(name: "stride", scope: !8513, file: !21, line: 305, type: !468)
!8519 = !DILocation(line: 305, column: 15, scope: !8513)
!8520 = !DILocalVariable(name: "xStride", scope: !8513, file: !21, line: 306, type: !468)
!8521 = !DILocation(line: 306, column: 15, scope: !8513)
!8522 = !DILocalVariable(name: "a", scope: !8513, file: !21, line: 307, type: !11)
!8523 = !DILocation(line: 307, column: 14, scope: !8513)
!8524 = !DILocalVariable(name: "b", scope: !8513, file: !21, line: 307, type: !11)
!8525 = !DILocation(line: 307, column: 16, scope: !8513)
!8526 = !DILocalVariable(name: "c", scope: !8513, file: !21, line: 307, type: !11)
!8527 = !DILocation(line: 307, column: 18, scope: !8513)
!8528 = !DILocalVariable(name: "d", scope: !8513, file: !21, line: 307, type: !11)
!8529 = !DILocation(line: 307, column: 20, scope: !8513)
!8530 = !DILocalVariable(name: "e", scope: !8513, file: !21, line: 307, type: !11)
!8531 = !DILocation(line: 307, column: 22, scope: !8513)
!8532 = !DILocalVariable(name: "block", scope: !8513, file: !21, line: 308, type: !16)
!8533 = !DILocation(line: 308, column: 14, scope: !8513)
!8534 = !DILocation(line: 308, column: 32, scope: !8513)
!8535 = !DILocation(line: 308, column: 22, scope: !8513)
!8536 = !DILocation(line: 310, column: 8, scope: !8513)
!8537 = !DILocation(line: 310, column: 6, scope: !8513)
!8538 = !DILocation(line: 311, column: 8, scope: !8513)
!8539 = !DILocation(line: 311, column: 6, scope: !8513)
!8540 = !DILocation(line: 312, column: 8, scope: !8513)
!8541 = !DILocation(line: 312, column: 6, scope: !8513)
!8542 = !DILocation(line: 313, column: 8, scope: !8513)
!8543 = !DILocation(line: 313, column: 6, scope: !8513)
!8544 = !DILocation(line: 315, column: 8, scope: !8513)
!8545 = !DILocation(line: 315, column: 10, scope: !8513)
!8546 = !DILocation(line: 315, column: 9, scope: !8513)
!8547 = !DILocation(line: 315, column: 6, scope: !8513)
!8548 = !DILocation(line: 316, column: 8, scope: !8513)
!8549 = !DILocation(line: 316, column: 10, scope: !8513)
!8550 = !DILocation(line: 316, column: 9, scope: !8513)
!8551 = !DILocation(line: 316, column: 6, scope: !8513)
!8552 = !DILocation(line: 317, column: 8, scope: !8513)
!8553 = !DILocation(line: 317, column: 10, scope: !8513)
!8554 = !DILocation(line: 317, column: 9, scope: !8513)
!8555 = !DILocation(line: 317, column: 6, scope: !8513)
!8556 = !DILocation(line: 318, column: 8, scope: !8513)
!8557 = !DILocation(line: 318, column: 10, scope: !8513)
!8558 = !DILocation(line: 318, column: 9, scope: !8513)
!8559 = !DILocation(line: 318, column: 6, scope: !8513)
!8560 = !DILocation(line: 320, column: 41, scope: !8513)
!8561 = !DILocation(line: 320, column: 43, scope: !8513)
!8562 = !DILocation(line: 320, column: 42, scope: !8513)
!8563 = !DILocation(line: 320, column: 46, scope: !8513)
!8564 = !DILocation(line: 320, column: 45, scope: !8513)
!8565 = !DILocation(line: 320, column: 52, scope: !8513)
!8566 = !DILocation(line: 320, column: 5, scope: !8513)
!8567 = !DILocation(line: 320, column: 32, scope: !8513)
!8568 = !DILocation(line: 321, column: 41, scope: !8513)
!8569 = !DILocation(line: 321, column: 43, scope: !8513)
!8570 = !DILocation(line: 321, column: 42, scope: !8513)
!8571 = !DILocation(line: 321, column: 46, scope: !8513)
!8572 = !DILocation(line: 321, column: 45, scope: !8513)
!8573 = !DILocation(line: 321, column: 52, scope: !8513)
!8574 = !DILocation(line: 321, column: 5, scope: !8513)
!8575 = !DILocation(line: 321, column: 32, scope: !8513)
!8576 = !DILocation(line: 322, column: 41, scope: !8513)
!8577 = !DILocation(line: 322, column: 43, scope: !8513)
!8578 = !DILocation(line: 322, column: 42, scope: !8513)
!8579 = !DILocation(line: 322, column: 46, scope: !8513)
!8580 = !DILocation(line: 322, column: 45, scope: !8513)
!8581 = !DILocation(line: 322, column: 52, scope: !8513)
!8582 = !DILocation(line: 322, column: 5, scope: !8513)
!8583 = !DILocation(line: 322, column: 32, scope: !8513)
!8584 = !DILocation(line: 323, column: 41, scope: !8513)
!8585 = !DILocation(line: 323, column: 43, scope: !8513)
!8586 = !DILocation(line: 323, column: 42, scope: !8513)
!8587 = !DILocation(line: 323, column: 46, scope: !8513)
!8588 = !DILocation(line: 323, column: 45, scope: !8513)
!8589 = !DILocation(line: 323, column: 52, scope: !8513)
!8590 = !DILocation(line: 323, column: 5, scope: !8513)
!8591 = !DILocation(line: 323, column: 32, scope: !8513)
!8592 = !DILocation(line: 324, column: 1, scope: !8513)
!8593 = distinct !DISubprogram(name: "ff_h264_idct_add_14_c", scope: !21, file: !21, line: 33, type: !60, isLocal: false, isDefinition: true, scopeLine: 34, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!8594 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !8595)
!8595 = distinct !DILocation(line: 61, column: 28, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8597, file: !21, line: 54, column: 23)
!8597 = distinct !DILexicalBlock(scope: !8598, file: !21, line: 54, column: 5)
!8598 = distinct !DILexicalBlock(scope: !8593, file: !21, line: 54, column: 5)
!8599 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !8595)
!8600 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !8601)
!8601 = distinct !DILocation(line: 62, column: 28, scope: !8596)
!8602 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !8601)
!8603 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !8604)
!8604 = distinct !DILocation(line: 63, column: 28, scope: !8596)
!8605 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !8604)
!8606 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !8607)
!8607 = distinct !DILocation(line: 60, column: 28, scope: !8596)
!8608 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !8607)
!8609 = !DILocalVariable(name: "_dst", arg: 1, scope: !8593, file: !21, line: 33, type: !4)
!8610 = !DILocation(line: 33, column: 37, scope: !8593)
!8611 = !DILocalVariable(name: "_block", arg: 2, scope: !8593, file: !21, line: 33, type: !8)
!8612 = !DILocation(line: 33, column: 52, scope: !8593)
!8613 = !DILocalVariable(name: "stride", arg: 3, scope: !8593, file: !21, line: 33, type: !12)
!8614 = !DILocation(line: 33, column: 64, scope: !8593)
!8615 = !DILocalVariable(name: "i", scope: !8593, file: !21, line: 35, type: !12)
!8616 = !DILocation(line: 35, column: 9, scope: !8593)
!8617 = !DILocalVariable(name: "dst", scope: !8593, file: !21, line: 36, type: !13)
!8618 = !DILocation(line: 36, column: 15, scope: !8593)
!8619 = !DILocation(line: 36, column: 32, scope: !8593)
!8620 = !DILocation(line: 36, column: 21, scope: !8593)
!8621 = !DILocalVariable(name: "block", scope: !8593, file: !21, line: 37, type: !16)
!8622 = !DILocation(line: 37, column: 14, scope: !8593)
!8623 = !DILocation(line: 37, column: 32, scope: !8593)
!8624 = !DILocation(line: 37, column: 22, scope: !8593)
!8625 = !DILocation(line: 38, column: 12, scope: !8593)
!8626 = !DILocation(line: 40, column: 5, scope: !8593)
!8627 = !DILocation(line: 40, column: 14, scope: !8593)
!8628 = !DILocation(line: 42, column: 10, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8593, file: !21, line: 42, column: 5)
!8630 = !DILocation(line: 42, column: 9, scope: !8629)
!8631 = !DILocation(line: 42, column: 14, scope: !8632)
!8632 = !DILexicalBlockFile(scope: !8633, file: !21, discriminator: 1)
!8633 = distinct !DILexicalBlock(scope: !8629, file: !21, line: 42, column: 5)
!8634 = !DILocation(line: 42, column: 15, scope: !8632)
!8635 = !DILocation(line: 42, column: 5, scope: !8632)
!8636 = !DILocalVariable(name: "z0", scope: !8637, file: !21, line: 43, type: !106)
!8637 = distinct !DILexicalBlock(scope: !8633, file: !21, line: 42, column: 23)
!8638 = !DILocation(line: 43, column: 24, scope: !8637)
!8639 = !DILocation(line: 43, column: 34, scope: !8637)
!8640 = !DILocation(line: 43, column: 36, scope: !8637)
!8641 = !DILocation(line: 43, column: 28, scope: !8637)
!8642 = !DILocation(line: 43, column: 61, scope: !8637)
!8643 = !DILocation(line: 43, column: 63, scope: !8637)
!8644 = !DILocation(line: 43, column: 55, scope: !8637)
!8645 = !DILocation(line: 43, column: 43, scope: !8637)
!8646 = !DILocalVariable(name: "z1", scope: !8637, file: !21, line: 44, type: !106)
!8647 = !DILocation(line: 44, column: 24, scope: !8637)
!8648 = !DILocation(line: 44, column: 34, scope: !8637)
!8649 = !DILocation(line: 44, column: 36, scope: !8637)
!8650 = !DILocation(line: 44, column: 28, scope: !8637)
!8651 = !DILocation(line: 44, column: 61, scope: !8637)
!8652 = !DILocation(line: 44, column: 63, scope: !8637)
!8653 = !DILocation(line: 44, column: 55, scope: !8637)
!8654 = !DILocation(line: 44, column: 43, scope: !8637)
!8655 = !DILocalVariable(name: "z2", scope: !8637, file: !21, line: 45, type: !106)
!8656 = !DILocation(line: 45, column: 24, scope: !8637)
!8657 = !DILocation(line: 45, column: 35, scope: !8637)
!8658 = !DILocation(line: 45, column: 37, scope: !8637)
!8659 = !DILocation(line: 45, column: 29, scope: !8637)
!8660 = !DILocation(line: 45, column: 43, scope: !8637)
!8661 = !DILocation(line: 45, column: 66, scope: !8637)
!8662 = !DILocation(line: 45, column: 68, scope: !8637)
!8663 = !DILocation(line: 45, column: 60, scope: !8637)
!8664 = !DILocation(line: 45, column: 48, scope: !8637)
!8665 = !DILocalVariable(name: "z3", scope: !8637, file: !21, line: 46, type: !106)
!8666 = !DILocation(line: 46, column: 24, scope: !8637)
!8667 = !DILocation(line: 46, column: 34, scope: !8637)
!8668 = !DILocation(line: 46, column: 36, scope: !8637)
!8669 = !DILocation(line: 46, column: 28, scope: !8637)
!8670 = !DILocation(line: 46, column: 62, scope: !8637)
!8671 = !DILocation(line: 46, column: 64, scope: !8637)
!8672 = !DILocation(line: 46, column: 56, scope: !8637)
!8673 = !DILocation(line: 46, column: 70, scope: !8637)
!8674 = !DILocation(line: 46, column: 43, scope: !8637)
!8675 = !DILocation(line: 48, column: 25, scope: !8637)
!8676 = !DILocation(line: 48, column: 30, scope: !8637)
!8677 = !DILocation(line: 48, column: 28, scope: !8637)
!8678 = !DILocation(line: 48, column: 15, scope: !8637)
!8679 = !DILocation(line: 48, column: 17, scope: !8637)
!8680 = !DILocation(line: 48, column: 9, scope: !8637)
!8681 = !DILocation(line: 48, column: 23, scope: !8637)
!8682 = !DILocation(line: 49, column: 25, scope: !8637)
!8683 = !DILocation(line: 49, column: 30, scope: !8637)
!8684 = !DILocation(line: 49, column: 28, scope: !8637)
!8685 = !DILocation(line: 49, column: 15, scope: !8637)
!8686 = !DILocation(line: 49, column: 17, scope: !8637)
!8687 = !DILocation(line: 49, column: 9, scope: !8637)
!8688 = !DILocation(line: 49, column: 23, scope: !8637)
!8689 = !DILocation(line: 50, column: 25, scope: !8637)
!8690 = !DILocation(line: 50, column: 30, scope: !8637)
!8691 = !DILocation(line: 50, column: 28, scope: !8637)
!8692 = !DILocation(line: 50, column: 15, scope: !8637)
!8693 = !DILocation(line: 50, column: 17, scope: !8637)
!8694 = !DILocation(line: 50, column: 9, scope: !8637)
!8695 = !DILocation(line: 50, column: 23, scope: !8637)
!8696 = !DILocation(line: 51, column: 25, scope: !8637)
!8697 = !DILocation(line: 51, column: 30, scope: !8637)
!8698 = !DILocation(line: 51, column: 28, scope: !8637)
!8699 = !DILocation(line: 51, column: 15, scope: !8637)
!8700 = !DILocation(line: 51, column: 17, scope: !8637)
!8701 = !DILocation(line: 51, column: 9, scope: !8637)
!8702 = !DILocation(line: 51, column: 23, scope: !8637)
!8703 = !DILocation(line: 52, column: 5, scope: !8637)
!8704 = !DILocation(line: 42, column: 20, scope: !8705)
!8705 = !DILexicalBlockFile(scope: !8633, file: !21, discriminator: 2)
!8706 = !DILocation(line: 42, column: 5, scope: !8705)
!8707 = distinct !{!8707, !8708}
!8708 = !DILocation(line: 42, column: 5, scope: !8593)
!8709 = !DILocation(line: 54, column: 10, scope: !8598)
!8710 = !DILocation(line: 54, column: 9, scope: !8598)
!8711 = !DILocation(line: 54, column: 14, scope: !8712)
!8712 = !DILexicalBlockFile(scope: !8597, file: !21, discriminator: 1)
!8713 = !DILocation(line: 54, column: 15, scope: !8712)
!8714 = !DILocation(line: 54, column: 5, scope: !8712)
!8715 = !DILocalVariable(name: "z0", scope: !8596, file: !21, line: 55, type: !106)
!8716 = !DILocation(line: 55, column: 24, scope: !8596)
!8717 = !DILocation(line: 55, column: 40, scope: !8596)
!8718 = !DILocation(line: 55, column: 39, scope: !8596)
!8719 = !DILocation(line: 55, column: 36, scope: !8596)
!8720 = !DILocation(line: 55, column: 28, scope: !8596)
!8721 = !DILocation(line: 55, column: 67, scope: !8596)
!8722 = !DILocation(line: 55, column: 66, scope: !8596)
!8723 = !DILocation(line: 55, column: 63, scope: !8596)
!8724 = !DILocation(line: 55, column: 55, scope: !8596)
!8725 = !DILocation(line: 55, column: 43, scope: !8596)
!8726 = !DILocalVariable(name: "z1", scope: !8596, file: !21, line: 56, type: !106)
!8727 = !DILocation(line: 56, column: 24, scope: !8596)
!8728 = !DILocation(line: 56, column: 40, scope: !8596)
!8729 = !DILocation(line: 56, column: 39, scope: !8596)
!8730 = !DILocation(line: 56, column: 36, scope: !8596)
!8731 = !DILocation(line: 56, column: 28, scope: !8596)
!8732 = !DILocation(line: 56, column: 67, scope: !8596)
!8733 = !DILocation(line: 56, column: 66, scope: !8596)
!8734 = !DILocation(line: 56, column: 63, scope: !8596)
!8735 = !DILocation(line: 56, column: 55, scope: !8596)
!8736 = !DILocation(line: 56, column: 43, scope: !8596)
!8737 = !DILocalVariable(name: "z2", scope: !8596, file: !21, line: 57, type: !106)
!8738 = !DILocation(line: 57, column: 24, scope: !8596)
!8739 = !DILocation(line: 57, column: 41, scope: !8596)
!8740 = !DILocation(line: 57, column: 40, scope: !8596)
!8741 = !DILocation(line: 57, column: 37, scope: !8596)
!8742 = !DILocation(line: 57, column: 29, scope: !8596)
!8743 = !DILocation(line: 57, column: 43, scope: !8596)
!8744 = !DILocation(line: 57, column: 72, scope: !8596)
!8745 = !DILocation(line: 57, column: 71, scope: !8596)
!8746 = !DILocation(line: 57, column: 68, scope: !8596)
!8747 = !DILocation(line: 57, column: 60, scope: !8596)
!8748 = !DILocation(line: 57, column: 48, scope: !8596)
!8749 = !DILocalVariable(name: "z3", scope: !8596, file: !21, line: 58, type: !106)
!8750 = !DILocation(line: 58, column: 24, scope: !8596)
!8751 = !DILocation(line: 58, column: 40, scope: !8596)
!8752 = !DILocation(line: 58, column: 39, scope: !8596)
!8753 = !DILocation(line: 58, column: 36, scope: !8596)
!8754 = !DILocation(line: 58, column: 28, scope: !8596)
!8755 = !DILocation(line: 58, column: 68, scope: !8596)
!8756 = !DILocation(line: 58, column: 67, scope: !8596)
!8757 = !DILocation(line: 58, column: 64, scope: !8596)
!8758 = !DILocation(line: 58, column: 56, scope: !8596)
!8759 = !DILocation(line: 58, column: 70, scope: !8596)
!8760 = !DILocation(line: 58, column: 43, scope: !8596)
!8761 = !DILocation(line: 60, column: 49, scope: !8596)
!8762 = !DILocation(line: 60, column: 55, scope: !8596)
!8763 = !DILocation(line: 60, column: 54, scope: !8596)
!8764 = !DILocation(line: 60, column: 51, scope: !8596)
!8765 = !DILocation(line: 60, column: 45, scope: !8596)
!8766 = !DILocation(line: 60, column: 72, scope: !8596)
!8767 = !DILocation(line: 60, column: 77, scope: !8596)
!8768 = !DILocation(line: 60, column: 75, scope: !8596)
!8769 = !DILocation(line: 60, column: 81, scope: !8596)
!8770 = !DILocation(line: 60, column: 63, scope: !8596)
!8771 = !DILocation(line: 60, column: 28, scope: !8596)
!8772 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !8607)
!8773 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !8607)
!8774 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !8607)
!8775 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !8607)
!8776 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !8607)
!8777 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !8607)
!8778 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !8607)
!8779 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !8607)
!8780 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !8607)
!8781 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !8607)
!8782 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !8607)
!8783 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !8607)
!8784 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !8607)
!8785 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !8607)
!8786 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !8607)
!8787 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !8607)
!8788 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !8607)
!8789 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !8607)
!8790 = !DILocation(line: 60, column: 13, scope: !8596)
!8791 = !DILocation(line: 60, column: 19, scope: !8596)
!8792 = !DILocation(line: 60, column: 18, scope: !8596)
!8793 = !DILocation(line: 60, column: 15, scope: !8596)
!8794 = !DILocation(line: 60, column: 9, scope: !8596)
!8795 = !DILocation(line: 60, column: 26, scope: !8596)
!8796 = !DILocation(line: 61, column: 49, scope: !8596)
!8797 = !DILocation(line: 61, column: 55, scope: !8596)
!8798 = !DILocation(line: 61, column: 54, scope: !8596)
!8799 = !DILocation(line: 61, column: 51, scope: !8596)
!8800 = !DILocation(line: 61, column: 45, scope: !8596)
!8801 = !DILocation(line: 61, column: 72, scope: !8596)
!8802 = !DILocation(line: 61, column: 77, scope: !8596)
!8803 = !DILocation(line: 61, column: 75, scope: !8596)
!8804 = !DILocation(line: 61, column: 81, scope: !8596)
!8805 = !DILocation(line: 61, column: 63, scope: !8596)
!8806 = !DILocation(line: 61, column: 28, scope: !8596)
!8807 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !8595)
!8808 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !8595)
!8809 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !8595)
!8810 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !8595)
!8811 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !8595)
!8812 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !8595)
!8813 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !8595)
!8814 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !8595)
!8815 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !8595)
!8816 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !8595)
!8817 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !8595)
!8818 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !8595)
!8819 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !8595)
!8820 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !8595)
!8821 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !8595)
!8822 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !8595)
!8823 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !8595)
!8824 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !8595)
!8825 = !DILocation(line: 61, column: 13, scope: !8596)
!8826 = !DILocation(line: 61, column: 19, scope: !8596)
!8827 = !DILocation(line: 61, column: 18, scope: !8596)
!8828 = !DILocation(line: 61, column: 15, scope: !8596)
!8829 = !DILocation(line: 61, column: 9, scope: !8596)
!8830 = !DILocation(line: 61, column: 26, scope: !8596)
!8831 = !DILocation(line: 62, column: 49, scope: !8596)
!8832 = !DILocation(line: 62, column: 55, scope: !8596)
!8833 = !DILocation(line: 62, column: 54, scope: !8596)
!8834 = !DILocation(line: 62, column: 51, scope: !8596)
!8835 = !DILocation(line: 62, column: 45, scope: !8596)
!8836 = !DILocation(line: 62, column: 72, scope: !8596)
!8837 = !DILocation(line: 62, column: 77, scope: !8596)
!8838 = !DILocation(line: 62, column: 75, scope: !8596)
!8839 = !DILocation(line: 62, column: 81, scope: !8596)
!8840 = !DILocation(line: 62, column: 63, scope: !8596)
!8841 = !DILocation(line: 62, column: 28, scope: !8596)
!8842 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !8601)
!8843 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !8601)
!8844 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !8601)
!8845 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !8601)
!8846 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !8601)
!8847 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !8601)
!8848 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !8601)
!8849 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !8601)
!8850 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !8601)
!8851 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !8601)
!8852 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !8601)
!8853 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !8601)
!8854 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !8601)
!8855 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !8601)
!8856 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !8601)
!8857 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !8601)
!8858 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !8601)
!8859 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !8601)
!8860 = !DILocation(line: 62, column: 13, scope: !8596)
!8861 = !DILocation(line: 62, column: 19, scope: !8596)
!8862 = !DILocation(line: 62, column: 18, scope: !8596)
!8863 = !DILocation(line: 62, column: 15, scope: !8596)
!8864 = !DILocation(line: 62, column: 9, scope: !8596)
!8865 = !DILocation(line: 62, column: 26, scope: !8596)
!8866 = !DILocation(line: 63, column: 49, scope: !8596)
!8867 = !DILocation(line: 63, column: 55, scope: !8596)
!8868 = !DILocation(line: 63, column: 54, scope: !8596)
!8869 = !DILocation(line: 63, column: 51, scope: !8596)
!8870 = !DILocation(line: 63, column: 45, scope: !8596)
!8871 = !DILocation(line: 63, column: 72, scope: !8596)
!8872 = !DILocation(line: 63, column: 77, scope: !8596)
!8873 = !DILocation(line: 63, column: 75, scope: !8596)
!8874 = !DILocation(line: 63, column: 81, scope: !8596)
!8875 = !DILocation(line: 63, column: 63, scope: !8596)
!8876 = !DILocation(line: 63, column: 28, scope: !8596)
!8877 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !8604)
!8878 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !8604)
!8879 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !8604)
!8880 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !8604)
!8881 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !8604)
!8882 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !8604)
!8883 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !8604)
!8884 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !8604)
!8885 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !8604)
!8886 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !8604)
!8887 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !8604)
!8888 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !8604)
!8889 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !8604)
!8890 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !8604)
!8891 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !8604)
!8892 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !8604)
!8893 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !8604)
!8894 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !8604)
!8895 = !DILocation(line: 63, column: 13, scope: !8596)
!8896 = !DILocation(line: 63, column: 19, scope: !8596)
!8897 = !DILocation(line: 63, column: 18, scope: !8596)
!8898 = !DILocation(line: 63, column: 15, scope: !8596)
!8899 = !DILocation(line: 63, column: 9, scope: !8596)
!8900 = !DILocation(line: 63, column: 26, scope: !8596)
!8901 = !DILocation(line: 64, column: 5, scope: !8596)
!8902 = !DILocation(line: 54, column: 20, scope: !8903)
!8903 = !DILexicalBlockFile(scope: !8597, file: !21, discriminator: 2)
!8904 = !DILocation(line: 54, column: 5, scope: !8903)
!8905 = distinct !{!8905, !8906}
!8906 = !DILocation(line: 54, column: 5, scope: !8593)
!8907 = !DILocation(line: 66, column: 12, scope: !8593)
!8908 = !DILocation(line: 66, column: 5, scope: !8593)
!8909 = !DILocation(line: 67, column: 1, scope: !8593)
!8910 = distinct !DISubprogram(name: "ff_h264_idct8_add_14_c", scope: !21, file: !21, line: 69, type: !60, isLocal: false, isDefinition: true, scopeLine: 69, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!8911 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !8912)
!8912 = distinct !DILocation(line: 131, column: 29, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8914, file: !21, line: 109, column: 5)
!8914 = distinct !DILexicalBlock(scope: !8915, file: !21, line: 108, column: 5)
!8915 = distinct !DILexicalBlock(scope: !8910, file: !21, line: 108, column: 5)
!8916 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !8912)
!8917 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !8918)
!8918 = distinct !DILocation(line: 132, column: 29, scope: !8913)
!8919 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !8918)
!8920 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !8921)
!8921 = distinct !DILocation(line: 133, column: 29, scope: !8913)
!8922 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !8921)
!8923 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !8924)
!8924 = distinct !DILocation(line: 134, column: 29, scope: !8913)
!8925 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !8924)
!8926 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !8927)
!8927 = distinct !DILocation(line: 135, column: 29, scope: !8913)
!8928 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !8927)
!8929 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !8930)
!8930 = distinct !DILocation(line: 136, column: 29, scope: !8913)
!8931 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !8930)
!8932 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !8933)
!8933 = distinct !DILocation(line: 137, column: 29, scope: !8913)
!8934 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !8933)
!8935 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !8936)
!8936 = distinct !DILocation(line: 130, column: 29, scope: !8913)
!8937 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !8936)
!8938 = !DILocalVariable(name: "_dst", arg: 1, scope: !8910, file: !21, line: 69, type: !4)
!8939 = !DILocation(line: 69, column: 38, scope: !8910)
!8940 = !DILocalVariable(name: "_block", arg: 2, scope: !8910, file: !21, line: 69, type: !8)
!8941 = !DILocation(line: 69, column: 53, scope: !8910)
!8942 = !DILocalVariable(name: "stride", arg: 3, scope: !8910, file: !21, line: 69, type: !12)
!8943 = !DILocation(line: 69, column: 65, scope: !8910)
!8944 = !DILocalVariable(name: "i", scope: !8910, file: !21, line: 70, type: !12)
!8945 = !DILocation(line: 70, column: 9, scope: !8910)
!8946 = !DILocalVariable(name: "dst", scope: !8910, file: !21, line: 71, type: !13)
!8947 = !DILocation(line: 71, column: 15, scope: !8910)
!8948 = !DILocation(line: 71, column: 32, scope: !8910)
!8949 = !DILocation(line: 71, column: 21, scope: !8910)
!8950 = !DILocalVariable(name: "block", scope: !8910, file: !21, line: 72, type: !16)
!8951 = !DILocation(line: 72, column: 14, scope: !8910)
!8952 = !DILocation(line: 72, column: 32, scope: !8910)
!8953 = !DILocation(line: 72, column: 22, scope: !8910)
!8954 = !DILocation(line: 73, column: 12, scope: !8910)
!8955 = !DILocation(line: 75, column: 5, scope: !8910)
!8956 = !DILocation(line: 75, column: 14, scope: !8910)
!8957 = !DILocation(line: 77, column: 12, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8910, file: !21, line: 77, column: 5)
!8959 = !DILocation(line: 77, column: 10, scope: !8958)
!8960 = !DILocation(line: 77, column: 17, scope: !8961)
!8961 = !DILexicalBlockFile(scope: !8962, file: !21, discriminator: 1)
!8962 = distinct !DILexicalBlock(scope: !8958, file: !21, line: 77, column: 5)
!8963 = !DILocation(line: 77, column: 19, scope: !8961)
!8964 = !DILocation(line: 77, column: 5, scope: !8961)
!8965 = !DILocalVariable(name: "a0", scope: !8966, file: !21, line: 79, type: !106)
!8966 = distinct !DILexicalBlock(scope: !8962, file: !21, line: 78, column: 5)
!8967 = !DILocation(line: 79, column: 28, scope: !8966)
!8968 = !DILocation(line: 79, column: 39, scope: !8966)
!8969 = !DILocation(line: 79, column: 40, scope: !8966)
!8970 = !DILocation(line: 79, column: 33, scope: !8966)
!8971 = !DILocation(line: 79, column: 64, scope: !8966)
!8972 = !DILocation(line: 79, column: 65, scope: !8966)
!8973 = !DILocation(line: 79, column: 58, scope: !8966)
!8974 = !DILocation(line: 79, column: 46, scope: !8966)
!8975 = !DILocalVariable(name: "a2", scope: !8966, file: !21, line: 80, type: !106)
!8976 = !DILocation(line: 80, column: 28, scope: !8966)
!8977 = !DILocation(line: 80, column: 39, scope: !8966)
!8978 = !DILocation(line: 80, column: 40, scope: !8966)
!8979 = !DILocation(line: 80, column: 33, scope: !8966)
!8980 = !DILocation(line: 80, column: 64, scope: !8966)
!8981 = !DILocation(line: 80, column: 65, scope: !8966)
!8982 = !DILocation(line: 80, column: 58, scope: !8966)
!8983 = !DILocation(line: 80, column: 46, scope: !8966)
!8984 = !DILocalVariable(name: "a4", scope: !8966, file: !21, line: 81, type: !106)
!8985 = !DILocation(line: 81, column: 28, scope: !8966)
!8986 = !DILocation(line: 81, column: 40, scope: !8966)
!8987 = !DILocation(line: 81, column: 41, scope: !8966)
!8988 = !DILocation(line: 81, column: 34, scope: !8966)
!8989 = !DILocation(line: 81, column: 46, scope: !8966)
!8990 = !DILocation(line: 81, column: 69, scope: !8966)
!8991 = !DILocation(line: 81, column: 70, scope: !8966)
!8992 = !DILocation(line: 81, column: 63, scope: !8966)
!8993 = !DILocation(line: 81, column: 51, scope: !8966)
!8994 = !DILocalVariable(name: "a6", scope: !8966, file: !21, line: 82, type: !106)
!8995 = !DILocation(line: 82, column: 28, scope: !8966)
!8996 = !DILocation(line: 82, column: 40, scope: !8966)
!8997 = !DILocation(line: 82, column: 41, scope: !8966)
!8998 = !DILocation(line: 82, column: 34, scope: !8966)
!8999 = !DILocation(line: 82, column: 46, scope: !8966)
!9000 = !DILocation(line: 82, column: 69, scope: !8966)
!9001 = !DILocation(line: 82, column: 70, scope: !8966)
!9002 = !DILocation(line: 82, column: 63, scope: !8966)
!9003 = !DILocation(line: 82, column: 51, scope: !8966)
!9004 = !DILocalVariable(name: "b0", scope: !8966, file: !21, line: 84, type: !106)
!9005 = !DILocation(line: 84, column: 28, scope: !8966)
!9006 = !DILocation(line: 84, column: 33, scope: !8966)
!9007 = !DILocation(line: 84, column: 38, scope: !8966)
!9008 = !DILocation(line: 84, column: 36, scope: !8966)
!9009 = !DILocalVariable(name: "b2", scope: !8966, file: !21, line: 85, type: !106)
!9010 = !DILocation(line: 85, column: 28, scope: !8966)
!9011 = !DILocation(line: 85, column: 33, scope: !8966)
!9012 = !DILocation(line: 85, column: 38, scope: !8966)
!9013 = !DILocation(line: 85, column: 36, scope: !8966)
!9014 = !DILocalVariable(name: "b4", scope: !8966, file: !21, line: 86, type: !106)
!9015 = !DILocation(line: 86, column: 28, scope: !8966)
!9016 = !DILocation(line: 86, column: 33, scope: !8966)
!9017 = !DILocation(line: 86, column: 38, scope: !8966)
!9018 = !DILocation(line: 86, column: 36, scope: !8966)
!9019 = !DILocalVariable(name: "b6", scope: !8966, file: !21, line: 87, type: !106)
!9020 = !DILocation(line: 87, column: 28, scope: !8966)
!9021 = !DILocation(line: 87, column: 33, scope: !8966)
!9022 = !DILocation(line: 87, column: 38, scope: !8966)
!9023 = !DILocation(line: 87, column: 36, scope: !8966)
!9024 = !DILocalVariable(name: "a1", scope: !8966, file: !21, line: 89, type: !468)
!9025 = !DILocation(line: 89, column: 19, scope: !8966)
!9026 = !DILocation(line: 89, column: 31, scope: !8966)
!9027 = !DILocation(line: 89, column: 32, scope: !8966)
!9028 = !DILocation(line: 89, column: 25, scope: !8966)
!9029 = !DILocation(line: 89, column: 24, scope: !8966)
!9030 = !DILocation(line: 89, column: 56, scope: !8966)
!9031 = !DILocation(line: 89, column: 57, scope: !8966)
!9032 = !DILocation(line: 89, column: 50, scope: !8966)
!9033 = !DILocation(line: 89, column: 38, scope: !8966)
!9034 = !DILocation(line: 89, column: 71, scope: !8966)
!9035 = !DILocation(line: 89, column: 72, scope: !8966)
!9036 = !DILocation(line: 89, column: 65, scope: !8966)
!9037 = !DILocation(line: 89, column: 63, scope: !8966)
!9038 = !DILocation(line: 89, column: 87, scope: !8966)
!9039 = !DILocation(line: 89, column: 88, scope: !8966)
!9040 = !DILocation(line: 89, column: 81, scope: !8966)
!9041 = !DILocation(line: 89, column: 93, scope: !8966)
!9042 = !DILocation(line: 89, column: 78, scope: !8966)
!9043 = !DILocalVariable(name: "a3", scope: !8966, file: !21, line: 90, type: !468)
!9044 = !DILocation(line: 90, column: 19, scope: !8966)
!9045 = !DILocation(line: 90, column: 30, scope: !8966)
!9046 = !DILocation(line: 90, column: 31, scope: !8966)
!9047 = !DILocation(line: 90, column: 24, scope: !8966)
!9048 = !DILocation(line: 90, column: 55, scope: !8966)
!9049 = !DILocation(line: 90, column: 56, scope: !8966)
!9050 = !DILocation(line: 90, column: 49, scope: !8966)
!9051 = !DILocation(line: 90, column: 37, scope: !8966)
!9052 = !DILocation(line: 90, column: 70, scope: !8966)
!9053 = !DILocation(line: 90, column: 71, scope: !8966)
!9054 = !DILocation(line: 90, column: 64, scope: !8966)
!9055 = !DILocation(line: 90, column: 62, scope: !8966)
!9056 = !DILocation(line: 90, column: 86, scope: !8966)
!9057 = !DILocation(line: 90, column: 87, scope: !8966)
!9058 = !DILocation(line: 90, column: 80, scope: !8966)
!9059 = !DILocation(line: 90, column: 92, scope: !8966)
!9060 = !DILocation(line: 90, column: 77, scope: !8966)
!9061 = !DILocalVariable(name: "a5", scope: !8966, file: !21, line: 91, type: !468)
!9062 = !DILocation(line: 91, column: 19, scope: !8966)
!9063 = !DILocation(line: 91, column: 31, scope: !8966)
!9064 = !DILocation(line: 91, column: 32, scope: !8966)
!9065 = !DILocation(line: 91, column: 25, scope: !8966)
!9066 = !DILocation(line: 91, column: 24, scope: !8966)
!9067 = !DILocation(line: 91, column: 56, scope: !8966)
!9068 = !DILocation(line: 91, column: 57, scope: !8966)
!9069 = !DILocation(line: 91, column: 50, scope: !8966)
!9070 = !DILocation(line: 91, column: 38, scope: !8966)
!9071 = !DILocation(line: 91, column: 71, scope: !8966)
!9072 = !DILocation(line: 91, column: 72, scope: !8966)
!9073 = !DILocation(line: 91, column: 65, scope: !8966)
!9074 = !DILocation(line: 91, column: 63, scope: !8966)
!9075 = !DILocation(line: 91, column: 87, scope: !8966)
!9076 = !DILocation(line: 91, column: 88, scope: !8966)
!9077 = !DILocation(line: 91, column: 81, scope: !8966)
!9078 = !DILocation(line: 91, column: 93, scope: !8966)
!9079 = !DILocation(line: 91, column: 78, scope: !8966)
!9080 = !DILocalVariable(name: "a7", scope: !8966, file: !21, line: 92, type: !468)
!9081 = !DILocation(line: 92, column: 19, scope: !8966)
!9082 = !DILocation(line: 92, column: 30, scope: !8966)
!9083 = !DILocation(line: 92, column: 31, scope: !8966)
!9084 = !DILocation(line: 92, column: 24, scope: !8966)
!9085 = !DILocation(line: 92, column: 55, scope: !8966)
!9086 = !DILocation(line: 92, column: 56, scope: !8966)
!9087 = !DILocation(line: 92, column: 49, scope: !8966)
!9088 = !DILocation(line: 92, column: 37, scope: !8966)
!9089 = !DILocation(line: 92, column: 70, scope: !8966)
!9090 = !DILocation(line: 92, column: 71, scope: !8966)
!9091 = !DILocation(line: 92, column: 64, scope: !8966)
!9092 = !DILocation(line: 92, column: 62, scope: !8966)
!9093 = !DILocation(line: 92, column: 86, scope: !8966)
!9094 = !DILocation(line: 92, column: 87, scope: !8966)
!9095 = !DILocation(line: 92, column: 80, scope: !8966)
!9096 = !DILocation(line: 92, column: 92, scope: !8966)
!9097 = !DILocation(line: 92, column: 77, scope: !8966)
!9098 = !DILocalVariable(name: "b1", scope: !8966, file: !21, line: 94, type: !468)
!9099 = !DILocation(line: 94, column: 19, scope: !8966)
!9100 = !DILocation(line: 94, column: 25, scope: !8966)
!9101 = !DILocation(line: 94, column: 27, scope: !8966)
!9102 = !DILocation(line: 94, column: 44, scope: !8966)
!9103 = !DILocation(line: 94, column: 32, scope: !8966)
!9104 = !DILocalVariable(name: "b3", scope: !8966, file: !21, line: 95, type: !468)
!9105 = !DILocation(line: 95, column: 19, scope: !8966)
!9106 = !DILocation(line: 95, column: 34, scope: !8966)
!9107 = !DILocation(line: 95, column: 40, scope: !8966)
!9108 = !DILocation(line: 95, column: 42, scope: !8966)
!9109 = !DILocation(line: 95, column: 37, scope: !8966)
!9110 = !DILocalVariable(name: "b5", scope: !8966, file: !21, line: 96, type: !468)
!9111 = !DILocation(line: 96, column: 19, scope: !8966)
!9112 = !DILocation(line: 96, column: 25, scope: !8966)
!9113 = !DILocation(line: 96, column: 27, scope: !8966)
!9114 = !DILocation(line: 96, column: 44, scope: !8966)
!9115 = !DILocation(line: 96, column: 32, scope: !8966)
!9116 = !DILocalVariable(name: "b7", scope: !8966, file: !21, line: 97, type: !468)
!9117 = !DILocation(line: 97, column: 19, scope: !8966)
!9118 = !DILocation(line: 97, column: 34, scope: !8966)
!9119 = !DILocation(line: 97, column: 40, scope: !8966)
!9120 = !DILocation(line: 97, column: 42, scope: !8966)
!9121 = !DILocation(line: 97, column: 37, scope: !8966)
!9122 = !DILocation(line: 99, column: 24, scope: !8966)
!9123 = !DILocation(line: 99, column: 29, scope: !8966)
!9124 = !DILocation(line: 99, column: 27, scope: !8966)
!9125 = !DILocation(line: 99, column: 15, scope: !8966)
!9126 = !DILocation(line: 99, column: 16, scope: !8966)
!9127 = !DILocation(line: 99, column: 9, scope: !8966)
!9128 = !DILocation(line: 99, column: 22, scope: !8966)
!9129 = !DILocation(line: 100, column: 24, scope: !8966)
!9130 = !DILocation(line: 100, column: 29, scope: !8966)
!9131 = !DILocation(line: 100, column: 27, scope: !8966)
!9132 = !DILocation(line: 100, column: 15, scope: !8966)
!9133 = !DILocation(line: 100, column: 16, scope: !8966)
!9134 = !DILocation(line: 100, column: 9, scope: !8966)
!9135 = !DILocation(line: 100, column: 22, scope: !8966)
!9136 = !DILocation(line: 101, column: 24, scope: !8966)
!9137 = !DILocation(line: 101, column: 29, scope: !8966)
!9138 = !DILocation(line: 101, column: 27, scope: !8966)
!9139 = !DILocation(line: 101, column: 15, scope: !8966)
!9140 = !DILocation(line: 101, column: 16, scope: !8966)
!9141 = !DILocation(line: 101, column: 9, scope: !8966)
!9142 = !DILocation(line: 101, column: 22, scope: !8966)
!9143 = !DILocation(line: 102, column: 24, scope: !8966)
!9144 = !DILocation(line: 102, column: 29, scope: !8966)
!9145 = !DILocation(line: 102, column: 27, scope: !8966)
!9146 = !DILocation(line: 102, column: 15, scope: !8966)
!9147 = !DILocation(line: 102, column: 16, scope: !8966)
!9148 = !DILocation(line: 102, column: 9, scope: !8966)
!9149 = !DILocation(line: 102, column: 22, scope: !8966)
!9150 = !DILocation(line: 103, column: 24, scope: !8966)
!9151 = !DILocation(line: 103, column: 29, scope: !8966)
!9152 = !DILocation(line: 103, column: 27, scope: !8966)
!9153 = !DILocation(line: 103, column: 15, scope: !8966)
!9154 = !DILocation(line: 103, column: 16, scope: !8966)
!9155 = !DILocation(line: 103, column: 9, scope: !8966)
!9156 = !DILocation(line: 103, column: 22, scope: !8966)
!9157 = !DILocation(line: 104, column: 24, scope: !8966)
!9158 = !DILocation(line: 104, column: 29, scope: !8966)
!9159 = !DILocation(line: 104, column: 27, scope: !8966)
!9160 = !DILocation(line: 104, column: 15, scope: !8966)
!9161 = !DILocation(line: 104, column: 16, scope: !8966)
!9162 = !DILocation(line: 104, column: 9, scope: !8966)
!9163 = !DILocation(line: 104, column: 22, scope: !8966)
!9164 = !DILocation(line: 105, column: 24, scope: !8966)
!9165 = !DILocation(line: 105, column: 29, scope: !8966)
!9166 = !DILocation(line: 105, column: 27, scope: !8966)
!9167 = !DILocation(line: 105, column: 15, scope: !8966)
!9168 = !DILocation(line: 105, column: 16, scope: !8966)
!9169 = !DILocation(line: 105, column: 9, scope: !8966)
!9170 = !DILocation(line: 105, column: 22, scope: !8966)
!9171 = !DILocation(line: 106, column: 24, scope: !8966)
!9172 = !DILocation(line: 106, column: 29, scope: !8966)
!9173 = !DILocation(line: 106, column: 27, scope: !8966)
!9174 = !DILocation(line: 106, column: 15, scope: !8966)
!9175 = !DILocation(line: 106, column: 16, scope: !8966)
!9176 = !DILocation(line: 106, column: 9, scope: !8966)
!9177 = !DILocation(line: 106, column: 22, scope: !8966)
!9178 = !DILocation(line: 107, column: 5, scope: !8966)
!9179 = !DILocation(line: 77, column: 25, scope: !9180)
!9180 = !DILexicalBlockFile(scope: !8962, file: !21, discriminator: 2)
!9181 = !DILocation(line: 77, column: 5, scope: !9180)
!9182 = distinct !{!9182, !9183}
!9183 = !DILocation(line: 77, column: 5, scope: !8910)
!9184 = !DILocation(line: 108, column: 12, scope: !8915)
!9185 = !DILocation(line: 108, column: 10, scope: !8915)
!9186 = !DILocation(line: 108, column: 17, scope: !9187)
!9187 = !DILexicalBlockFile(scope: !8914, file: !21, discriminator: 1)
!9188 = !DILocation(line: 108, column: 19, scope: !9187)
!9189 = !DILocation(line: 108, column: 5, scope: !9187)
!9190 = !DILocalVariable(name: "a0", scope: !8913, file: !21, line: 110, type: !106)
!9191 = !DILocation(line: 110, column: 24, scope: !8913)
!9192 = !DILocation(line: 110, column: 37, scope: !8913)
!9193 = !DILocation(line: 110, column: 38, scope: !8913)
!9194 = !DILocation(line: 110, column: 36, scope: !8913)
!9195 = !DILocation(line: 110, column: 29, scope: !8913)
!9196 = !DILocation(line: 110, column: 62, scope: !8913)
!9197 = !DILocation(line: 110, column: 63, scope: !8913)
!9198 = !DILocation(line: 110, column: 61, scope: !8913)
!9199 = !DILocation(line: 110, column: 54, scope: !8913)
!9200 = !DILocation(line: 110, column: 42, scope: !8913)
!9201 = !DILocalVariable(name: "a2", scope: !8913, file: !21, line: 111, type: !106)
!9202 = !DILocation(line: 111, column: 24, scope: !8913)
!9203 = !DILocation(line: 111, column: 37, scope: !8913)
!9204 = !DILocation(line: 111, column: 38, scope: !8913)
!9205 = !DILocation(line: 111, column: 36, scope: !8913)
!9206 = !DILocation(line: 111, column: 29, scope: !8913)
!9207 = !DILocation(line: 111, column: 62, scope: !8913)
!9208 = !DILocation(line: 111, column: 63, scope: !8913)
!9209 = !DILocation(line: 111, column: 61, scope: !8913)
!9210 = !DILocation(line: 111, column: 54, scope: !8913)
!9211 = !DILocation(line: 111, column: 42, scope: !8913)
!9212 = !DILocalVariable(name: "a4", scope: !8913, file: !21, line: 112, type: !106)
!9213 = !DILocation(line: 112, column: 24, scope: !8913)
!9214 = !DILocation(line: 112, column: 38, scope: !8913)
!9215 = !DILocation(line: 112, column: 39, scope: !8913)
!9216 = !DILocation(line: 112, column: 37, scope: !8913)
!9217 = !DILocation(line: 112, column: 30, scope: !8913)
!9218 = !DILocation(line: 112, column: 42, scope: !8913)
!9219 = !DILocation(line: 112, column: 67, scope: !8913)
!9220 = !DILocation(line: 112, column: 68, scope: !8913)
!9221 = !DILocation(line: 112, column: 66, scope: !8913)
!9222 = !DILocation(line: 112, column: 59, scope: !8913)
!9223 = !DILocation(line: 112, column: 47, scope: !8913)
!9224 = !DILocalVariable(name: "a6", scope: !8913, file: !21, line: 113, type: !106)
!9225 = !DILocation(line: 113, column: 24, scope: !8913)
!9226 = !DILocation(line: 113, column: 38, scope: !8913)
!9227 = !DILocation(line: 113, column: 39, scope: !8913)
!9228 = !DILocation(line: 113, column: 37, scope: !8913)
!9229 = !DILocation(line: 113, column: 30, scope: !8913)
!9230 = !DILocation(line: 113, column: 42, scope: !8913)
!9231 = !DILocation(line: 113, column: 67, scope: !8913)
!9232 = !DILocation(line: 113, column: 68, scope: !8913)
!9233 = !DILocation(line: 113, column: 66, scope: !8913)
!9234 = !DILocation(line: 113, column: 59, scope: !8913)
!9235 = !DILocation(line: 113, column: 47, scope: !8913)
!9236 = !DILocalVariable(name: "b0", scope: !8913, file: !21, line: 115, type: !106)
!9237 = !DILocation(line: 115, column: 24, scope: !8913)
!9238 = !DILocation(line: 115, column: 29, scope: !8913)
!9239 = !DILocation(line: 115, column: 34, scope: !8913)
!9240 = !DILocation(line: 115, column: 32, scope: !8913)
!9241 = !DILocalVariable(name: "b2", scope: !8913, file: !21, line: 116, type: !106)
!9242 = !DILocation(line: 116, column: 24, scope: !8913)
!9243 = !DILocation(line: 116, column: 29, scope: !8913)
!9244 = !DILocation(line: 116, column: 34, scope: !8913)
!9245 = !DILocation(line: 116, column: 32, scope: !8913)
!9246 = !DILocalVariable(name: "b4", scope: !8913, file: !21, line: 117, type: !106)
!9247 = !DILocation(line: 117, column: 24, scope: !8913)
!9248 = !DILocation(line: 117, column: 29, scope: !8913)
!9249 = !DILocation(line: 117, column: 34, scope: !8913)
!9250 = !DILocation(line: 117, column: 32, scope: !8913)
!9251 = !DILocalVariable(name: "b6", scope: !8913, file: !21, line: 118, type: !106)
!9252 = !DILocation(line: 118, column: 24, scope: !8913)
!9253 = !DILocation(line: 118, column: 29, scope: !8913)
!9254 = !DILocation(line: 118, column: 34, scope: !8913)
!9255 = !DILocation(line: 118, column: 32, scope: !8913)
!9256 = !DILocalVariable(name: "a1", scope: !8913, file: !21, line: 120, type: !468)
!9257 = !DILocation(line: 120, column: 19, scope: !8913)
!9258 = !DILocation(line: 120, column: 43, scope: !8913)
!9259 = !DILocation(line: 120, column: 44, scope: !8913)
!9260 = !DILocation(line: 120, column: 42, scope: !8913)
!9261 = !DILocation(line: 120, column: 35, scope: !8913)
!9262 = !DILocation(line: 120, column: 24, scope: !8913)
!9263 = !DILocation(line: 120, column: 58, scope: !8913)
!9264 = !DILocation(line: 120, column: 59, scope: !8913)
!9265 = !DILocation(line: 120, column: 57, scope: !8913)
!9266 = !DILocation(line: 120, column: 50, scope: !8913)
!9267 = !DILocation(line: 120, column: 48, scope: !8913)
!9268 = !DILocation(line: 120, column: 73, scope: !8913)
!9269 = !DILocation(line: 120, column: 74, scope: !8913)
!9270 = !DILocation(line: 120, column: 72, scope: !8913)
!9271 = !DILocation(line: 120, column: 65, scope: !8913)
!9272 = !DILocation(line: 120, column: 63, scope: !8913)
!9273 = !DILocation(line: 120, column: 89, scope: !8913)
!9274 = !DILocation(line: 120, column: 90, scope: !8913)
!9275 = !DILocation(line: 120, column: 88, scope: !8913)
!9276 = !DILocation(line: 120, column: 81, scope: !8913)
!9277 = !DILocation(line: 120, column: 93, scope: !8913)
!9278 = !DILocation(line: 120, column: 78, scope: !8913)
!9279 = !DILocalVariable(name: "a3", scope: !8913, file: !21, line: 121, type: !468)
!9280 = !DILocation(line: 121, column: 19, scope: !8913)
!9281 = !DILocation(line: 121, column: 42, scope: !8913)
!9282 = !DILocation(line: 121, column: 43, scope: !8913)
!9283 = !DILocation(line: 121, column: 41, scope: !8913)
!9284 = !DILocation(line: 121, column: 34, scope: !8913)
!9285 = !DILocation(line: 121, column: 57, scope: !8913)
!9286 = !DILocation(line: 121, column: 58, scope: !8913)
!9287 = !DILocation(line: 121, column: 56, scope: !8913)
!9288 = !DILocation(line: 121, column: 49, scope: !8913)
!9289 = !DILocation(line: 121, column: 47, scope: !8913)
!9290 = !DILocation(line: 121, column: 72, scope: !8913)
!9291 = !DILocation(line: 121, column: 73, scope: !8913)
!9292 = !DILocation(line: 121, column: 71, scope: !8913)
!9293 = !DILocation(line: 121, column: 64, scope: !8913)
!9294 = !DILocation(line: 121, column: 62, scope: !8913)
!9295 = !DILocation(line: 121, column: 88, scope: !8913)
!9296 = !DILocation(line: 121, column: 89, scope: !8913)
!9297 = !DILocation(line: 121, column: 87, scope: !8913)
!9298 = !DILocation(line: 121, column: 80, scope: !8913)
!9299 = !DILocation(line: 121, column: 92, scope: !8913)
!9300 = !DILocation(line: 121, column: 77, scope: !8913)
!9301 = !DILocalVariable(name: "a5", scope: !8913, file: !21, line: 122, type: !468)
!9302 = !DILocation(line: 122, column: 19, scope: !8913)
!9303 = !DILocation(line: 122, column: 43, scope: !8913)
!9304 = !DILocation(line: 122, column: 44, scope: !8913)
!9305 = !DILocation(line: 122, column: 42, scope: !8913)
!9306 = !DILocation(line: 122, column: 35, scope: !8913)
!9307 = !DILocation(line: 122, column: 24, scope: !8913)
!9308 = !DILocation(line: 122, column: 58, scope: !8913)
!9309 = !DILocation(line: 122, column: 59, scope: !8913)
!9310 = !DILocation(line: 122, column: 57, scope: !8913)
!9311 = !DILocation(line: 122, column: 50, scope: !8913)
!9312 = !DILocation(line: 122, column: 48, scope: !8913)
!9313 = !DILocation(line: 122, column: 73, scope: !8913)
!9314 = !DILocation(line: 122, column: 74, scope: !8913)
!9315 = !DILocation(line: 122, column: 72, scope: !8913)
!9316 = !DILocation(line: 122, column: 65, scope: !8913)
!9317 = !DILocation(line: 122, column: 63, scope: !8913)
!9318 = !DILocation(line: 122, column: 89, scope: !8913)
!9319 = !DILocation(line: 122, column: 90, scope: !8913)
!9320 = !DILocation(line: 122, column: 88, scope: !8913)
!9321 = !DILocation(line: 122, column: 81, scope: !8913)
!9322 = !DILocation(line: 122, column: 93, scope: !8913)
!9323 = !DILocation(line: 122, column: 78, scope: !8913)
!9324 = !DILocalVariable(name: "a7", scope: !8913, file: !21, line: 123, type: !468)
!9325 = !DILocation(line: 123, column: 19, scope: !8913)
!9326 = !DILocation(line: 123, column: 42, scope: !8913)
!9327 = !DILocation(line: 123, column: 43, scope: !8913)
!9328 = !DILocation(line: 123, column: 41, scope: !8913)
!9329 = !DILocation(line: 123, column: 34, scope: !8913)
!9330 = !DILocation(line: 123, column: 57, scope: !8913)
!9331 = !DILocation(line: 123, column: 58, scope: !8913)
!9332 = !DILocation(line: 123, column: 56, scope: !8913)
!9333 = !DILocation(line: 123, column: 49, scope: !8913)
!9334 = !DILocation(line: 123, column: 47, scope: !8913)
!9335 = !DILocation(line: 123, column: 72, scope: !8913)
!9336 = !DILocation(line: 123, column: 73, scope: !8913)
!9337 = !DILocation(line: 123, column: 71, scope: !8913)
!9338 = !DILocation(line: 123, column: 64, scope: !8913)
!9339 = !DILocation(line: 123, column: 62, scope: !8913)
!9340 = !DILocation(line: 123, column: 88, scope: !8913)
!9341 = !DILocation(line: 123, column: 89, scope: !8913)
!9342 = !DILocation(line: 123, column: 87, scope: !8913)
!9343 = !DILocation(line: 123, column: 80, scope: !8913)
!9344 = !DILocation(line: 123, column: 92, scope: !8913)
!9345 = !DILocation(line: 123, column: 77, scope: !8913)
!9346 = !DILocalVariable(name: "b1", scope: !8913, file: !21, line: 125, type: !106)
!9347 = !DILocation(line: 125, column: 24, scope: !8913)
!9348 = !DILocation(line: 125, column: 30, scope: !8913)
!9349 = !DILocation(line: 125, column: 32, scope: !8913)
!9350 = !DILocation(line: 125, column: 49, scope: !8913)
!9351 = !DILocation(line: 125, column: 37, scope: !8913)
!9352 = !DILocalVariable(name: "b3", scope: !8913, file: !21, line: 126, type: !106)
!9353 = !DILocation(line: 126, column: 24, scope: !8913)
!9354 = !DILocation(line: 126, column: 39, scope: !8913)
!9355 = !DILocation(line: 126, column: 45, scope: !8913)
!9356 = !DILocation(line: 126, column: 47, scope: !8913)
!9357 = !DILocation(line: 126, column: 42, scope: !8913)
!9358 = !DILocalVariable(name: "b5", scope: !8913, file: !21, line: 127, type: !106)
!9359 = !DILocation(line: 127, column: 24, scope: !8913)
!9360 = !DILocation(line: 127, column: 30, scope: !8913)
!9361 = !DILocation(line: 127, column: 32, scope: !8913)
!9362 = !DILocation(line: 127, column: 49, scope: !8913)
!9363 = !DILocation(line: 127, column: 37, scope: !8913)
!9364 = !DILocalVariable(name: "b7", scope: !8913, file: !21, line: 128, type: !106)
!9365 = !DILocation(line: 128, column: 24, scope: !8913)
!9366 = !DILocation(line: 128, column: 39, scope: !8913)
!9367 = !DILocation(line: 128, column: 45, scope: !8913)
!9368 = !DILocation(line: 128, column: 47, scope: !8913)
!9369 = !DILocation(line: 128, column: 42, scope: !8913)
!9370 = !DILocation(line: 130, column: 50, scope: !8913)
!9371 = !DILocation(line: 130, column: 56, scope: !8913)
!9372 = !DILocation(line: 130, column: 55, scope: !8913)
!9373 = !DILocation(line: 130, column: 52, scope: !8913)
!9374 = !DILocation(line: 130, column: 46, scope: !8913)
!9375 = !DILocation(line: 130, column: 73, scope: !8913)
!9376 = !DILocation(line: 130, column: 78, scope: !8913)
!9377 = !DILocation(line: 130, column: 76, scope: !8913)
!9378 = !DILocation(line: 130, column: 82, scope: !8913)
!9379 = !DILocation(line: 130, column: 64, scope: !8913)
!9380 = !DILocation(line: 130, column: 29, scope: !8913)
!9381 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !8936)
!9382 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !8936)
!9383 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !8936)
!9384 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !8936)
!9385 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !8936)
!9386 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !8936)
!9387 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !8936)
!9388 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !8936)
!9389 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !8936)
!9390 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !8936)
!9391 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !8936)
!9392 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !8936)
!9393 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !8936)
!9394 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !8936)
!9395 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !8936)
!9396 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !8936)
!9397 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !8936)
!9398 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !8936)
!9399 = !DILocation(line: 130, column: 13, scope: !8913)
!9400 = !DILocation(line: 130, column: 19, scope: !8913)
!9401 = !DILocation(line: 130, column: 18, scope: !8913)
!9402 = !DILocation(line: 130, column: 15, scope: !8913)
!9403 = !DILocation(line: 130, column: 9, scope: !8913)
!9404 = !DILocation(line: 130, column: 27, scope: !8913)
!9405 = !DILocation(line: 131, column: 50, scope: !8913)
!9406 = !DILocation(line: 131, column: 56, scope: !8913)
!9407 = !DILocation(line: 131, column: 55, scope: !8913)
!9408 = !DILocation(line: 131, column: 52, scope: !8913)
!9409 = !DILocation(line: 131, column: 46, scope: !8913)
!9410 = !DILocation(line: 131, column: 73, scope: !8913)
!9411 = !DILocation(line: 131, column: 78, scope: !8913)
!9412 = !DILocation(line: 131, column: 76, scope: !8913)
!9413 = !DILocation(line: 131, column: 82, scope: !8913)
!9414 = !DILocation(line: 131, column: 64, scope: !8913)
!9415 = !DILocation(line: 131, column: 29, scope: !8913)
!9416 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !8912)
!9417 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !8912)
!9418 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !8912)
!9419 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !8912)
!9420 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !8912)
!9421 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !8912)
!9422 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !8912)
!9423 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !8912)
!9424 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !8912)
!9425 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !8912)
!9426 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !8912)
!9427 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !8912)
!9428 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !8912)
!9429 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !8912)
!9430 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !8912)
!9431 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !8912)
!9432 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !8912)
!9433 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !8912)
!9434 = !DILocation(line: 131, column: 13, scope: !8913)
!9435 = !DILocation(line: 131, column: 19, scope: !8913)
!9436 = !DILocation(line: 131, column: 18, scope: !8913)
!9437 = !DILocation(line: 131, column: 15, scope: !8913)
!9438 = !DILocation(line: 131, column: 9, scope: !8913)
!9439 = !DILocation(line: 131, column: 27, scope: !8913)
!9440 = !DILocation(line: 132, column: 50, scope: !8913)
!9441 = !DILocation(line: 132, column: 56, scope: !8913)
!9442 = !DILocation(line: 132, column: 55, scope: !8913)
!9443 = !DILocation(line: 132, column: 52, scope: !8913)
!9444 = !DILocation(line: 132, column: 46, scope: !8913)
!9445 = !DILocation(line: 132, column: 73, scope: !8913)
!9446 = !DILocation(line: 132, column: 78, scope: !8913)
!9447 = !DILocation(line: 132, column: 76, scope: !8913)
!9448 = !DILocation(line: 132, column: 82, scope: !8913)
!9449 = !DILocation(line: 132, column: 64, scope: !8913)
!9450 = !DILocation(line: 132, column: 29, scope: !8913)
!9451 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !8918)
!9452 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !8918)
!9453 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !8918)
!9454 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !8918)
!9455 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !8918)
!9456 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !8918)
!9457 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !8918)
!9458 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !8918)
!9459 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !8918)
!9460 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !8918)
!9461 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !8918)
!9462 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !8918)
!9463 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !8918)
!9464 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !8918)
!9465 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !8918)
!9466 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !8918)
!9467 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !8918)
!9468 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !8918)
!9469 = !DILocation(line: 132, column: 13, scope: !8913)
!9470 = !DILocation(line: 132, column: 19, scope: !8913)
!9471 = !DILocation(line: 132, column: 18, scope: !8913)
!9472 = !DILocation(line: 132, column: 15, scope: !8913)
!9473 = !DILocation(line: 132, column: 9, scope: !8913)
!9474 = !DILocation(line: 132, column: 27, scope: !8913)
!9475 = !DILocation(line: 133, column: 50, scope: !8913)
!9476 = !DILocation(line: 133, column: 56, scope: !8913)
!9477 = !DILocation(line: 133, column: 55, scope: !8913)
!9478 = !DILocation(line: 133, column: 52, scope: !8913)
!9479 = !DILocation(line: 133, column: 46, scope: !8913)
!9480 = !DILocation(line: 133, column: 73, scope: !8913)
!9481 = !DILocation(line: 133, column: 78, scope: !8913)
!9482 = !DILocation(line: 133, column: 76, scope: !8913)
!9483 = !DILocation(line: 133, column: 82, scope: !8913)
!9484 = !DILocation(line: 133, column: 64, scope: !8913)
!9485 = !DILocation(line: 133, column: 29, scope: !8913)
!9486 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !8921)
!9487 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !8921)
!9488 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !8921)
!9489 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !8921)
!9490 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !8921)
!9491 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !8921)
!9492 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !8921)
!9493 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !8921)
!9494 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !8921)
!9495 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !8921)
!9496 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !8921)
!9497 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !8921)
!9498 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !8921)
!9499 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !8921)
!9500 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !8921)
!9501 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !8921)
!9502 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !8921)
!9503 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !8921)
!9504 = !DILocation(line: 133, column: 13, scope: !8913)
!9505 = !DILocation(line: 133, column: 19, scope: !8913)
!9506 = !DILocation(line: 133, column: 18, scope: !8913)
!9507 = !DILocation(line: 133, column: 15, scope: !8913)
!9508 = !DILocation(line: 133, column: 9, scope: !8913)
!9509 = !DILocation(line: 133, column: 27, scope: !8913)
!9510 = !DILocation(line: 134, column: 50, scope: !8913)
!9511 = !DILocation(line: 134, column: 56, scope: !8913)
!9512 = !DILocation(line: 134, column: 55, scope: !8913)
!9513 = !DILocation(line: 134, column: 52, scope: !8913)
!9514 = !DILocation(line: 134, column: 46, scope: !8913)
!9515 = !DILocation(line: 134, column: 73, scope: !8913)
!9516 = !DILocation(line: 134, column: 78, scope: !8913)
!9517 = !DILocation(line: 134, column: 76, scope: !8913)
!9518 = !DILocation(line: 134, column: 82, scope: !8913)
!9519 = !DILocation(line: 134, column: 64, scope: !8913)
!9520 = !DILocation(line: 134, column: 29, scope: !8913)
!9521 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !8924)
!9522 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !8924)
!9523 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !8924)
!9524 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !8924)
!9525 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !8924)
!9526 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !8924)
!9527 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !8924)
!9528 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !8924)
!9529 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !8924)
!9530 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !8924)
!9531 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !8924)
!9532 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !8924)
!9533 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !8924)
!9534 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !8924)
!9535 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !8924)
!9536 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !8924)
!9537 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !8924)
!9538 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !8924)
!9539 = !DILocation(line: 134, column: 13, scope: !8913)
!9540 = !DILocation(line: 134, column: 19, scope: !8913)
!9541 = !DILocation(line: 134, column: 18, scope: !8913)
!9542 = !DILocation(line: 134, column: 15, scope: !8913)
!9543 = !DILocation(line: 134, column: 9, scope: !8913)
!9544 = !DILocation(line: 134, column: 27, scope: !8913)
!9545 = !DILocation(line: 135, column: 50, scope: !8913)
!9546 = !DILocation(line: 135, column: 56, scope: !8913)
!9547 = !DILocation(line: 135, column: 55, scope: !8913)
!9548 = !DILocation(line: 135, column: 52, scope: !8913)
!9549 = !DILocation(line: 135, column: 46, scope: !8913)
!9550 = !DILocation(line: 135, column: 73, scope: !8913)
!9551 = !DILocation(line: 135, column: 78, scope: !8913)
!9552 = !DILocation(line: 135, column: 76, scope: !8913)
!9553 = !DILocation(line: 135, column: 82, scope: !8913)
!9554 = !DILocation(line: 135, column: 64, scope: !8913)
!9555 = !DILocation(line: 135, column: 29, scope: !8913)
!9556 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !8927)
!9557 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !8927)
!9558 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !8927)
!9559 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !8927)
!9560 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !8927)
!9561 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !8927)
!9562 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !8927)
!9563 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !8927)
!9564 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !8927)
!9565 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !8927)
!9566 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !8927)
!9567 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !8927)
!9568 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !8927)
!9569 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !8927)
!9570 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !8927)
!9571 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !8927)
!9572 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !8927)
!9573 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !8927)
!9574 = !DILocation(line: 135, column: 13, scope: !8913)
!9575 = !DILocation(line: 135, column: 19, scope: !8913)
!9576 = !DILocation(line: 135, column: 18, scope: !8913)
!9577 = !DILocation(line: 135, column: 15, scope: !8913)
!9578 = !DILocation(line: 135, column: 9, scope: !8913)
!9579 = !DILocation(line: 135, column: 27, scope: !8913)
!9580 = !DILocation(line: 136, column: 50, scope: !8913)
!9581 = !DILocation(line: 136, column: 56, scope: !8913)
!9582 = !DILocation(line: 136, column: 55, scope: !8913)
!9583 = !DILocation(line: 136, column: 52, scope: !8913)
!9584 = !DILocation(line: 136, column: 46, scope: !8913)
!9585 = !DILocation(line: 136, column: 73, scope: !8913)
!9586 = !DILocation(line: 136, column: 78, scope: !8913)
!9587 = !DILocation(line: 136, column: 76, scope: !8913)
!9588 = !DILocation(line: 136, column: 82, scope: !8913)
!9589 = !DILocation(line: 136, column: 64, scope: !8913)
!9590 = !DILocation(line: 136, column: 29, scope: !8913)
!9591 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !8930)
!9592 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !8930)
!9593 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !8930)
!9594 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !8930)
!9595 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !8930)
!9596 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !8930)
!9597 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !8930)
!9598 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !8930)
!9599 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !8930)
!9600 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !8930)
!9601 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !8930)
!9602 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !8930)
!9603 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !8930)
!9604 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !8930)
!9605 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !8930)
!9606 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !8930)
!9607 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !8930)
!9608 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !8930)
!9609 = !DILocation(line: 136, column: 13, scope: !8913)
!9610 = !DILocation(line: 136, column: 19, scope: !8913)
!9611 = !DILocation(line: 136, column: 18, scope: !8913)
!9612 = !DILocation(line: 136, column: 15, scope: !8913)
!9613 = !DILocation(line: 136, column: 9, scope: !8913)
!9614 = !DILocation(line: 136, column: 27, scope: !8913)
!9615 = !DILocation(line: 137, column: 50, scope: !8913)
!9616 = !DILocation(line: 137, column: 56, scope: !8913)
!9617 = !DILocation(line: 137, column: 55, scope: !8913)
!9618 = !DILocation(line: 137, column: 52, scope: !8913)
!9619 = !DILocation(line: 137, column: 46, scope: !8913)
!9620 = !DILocation(line: 137, column: 73, scope: !8913)
!9621 = !DILocation(line: 137, column: 78, scope: !8913)
!9622 = !DILocation(line: 137, column: 76, scope: !8913)
!9623 = !DILocation(line: 137, column: 82, scope: !8913)
!9624 = !DILocation(line: 137, column: 64, scope: !8913)
!9625 = !DILocation(line: 137, column: 29, scope: !8913)
!9626 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !8933)
!9627 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !8933)
!9628 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !8933)
!9629 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !8933)
!9630 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !8933)
!9631 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !8933)
!9632 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !8933)
!9633 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !8933)
!9634 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !8933)
!9635 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !8933)
!9636 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !8933)
!9637 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !8933)
!9638 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !8933)
!9639 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !8933)
!9640 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !8933)
!9641 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !8933)
!9642 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !8933)
!9643 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !8933)
!9644 = !DILocation(line: 137, column: 13, scope: !8913)
!9645 = !DILocation(line: 137, column: 19, scope: !8913)
!9646 = !DILocation(line: 137, column: 18, scope: !8913)
!9647 = !DILocation(line: 137, column: 15, scope: !8913)
!9648 = !DILocation(line: 137, column: 9, scope: !8913)
!9649 = !DILocation(line: 137, column: 27, scope: !8913)
!9650 = !DILocation(line: 138, column: 5, scope: !8913)
!9651 = !DILocation(line: 108, column: 25, scope: !9652)
!9652 = !DILexicalBlockFile(scope: !8914, file: !21, discriminator: 2)
!9653 = !DILocation(line: 108, column: 5, scope: !9652)
!9654 = distinct !{!9654, !9655}
!9655 = !DILocation(line: 108, column: 5, scope: !8910)
!9656 = !DILocation(line: 140, column: 12, scope: !8910)
!9657 = !DILocation(line: 140, column: 5, scope: !8910)
!9658 = !DILocation(line: 141, column: 1, scope: !8910)
!9659 = distinct !DISubprogram(name: "ff_h264_idct_dc_add_14_c", scope: !21, file: !21, line: 144, type: !60, isLocal: false, isDefinition: true, scopeLine: 144, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!9660 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !9661)
!9661 = distinct !DILocation(line: 154, column: 22, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9663, file: !21, line: 153, column: 9)
!9663 = distinct !DILexicalBlock(scope: !9664, file: !21, line: 153, column: 9)
!9664 = distinct !DILexicalBlock(scope: !9665, file: !21, line: 152, column: 5)
!9665 = distinct !DILexicalBlock(scope: !9666, file: !21, line: 151, column: 5)
!9666 = distinct !DILexicalBlock(scope: !9659, file: !21, line: 151, column: 5)
!9667 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !9661)
!9668 = !DILocalVariable(name: "_dst", arg: 1, scope: !9659, file: !21, line: 144, type: !4)
!9669 = !DILocation(line: 144, column: 40, scope: !9659)
!9670 = !DILocalVariable(name: "_block", arg: 2, scope: !9659, file: !21, line: 144, type: !8)
!9671 = !DILocation(line: 144, column: 55, scope: !9659)
!9672 = !DILocalVariable(name: "stride", arg: 3, scope: !9659, file: !21, line: 144, type: !12)
!9673 = !DILocation(line: 144, column: 67, scope: !9659)
!9674 = !DILocalVariable(name: "i", scope: !9659, file: !21, line: 145, type: !12)
!9675 = !DILocation(line: 145, column: 9, scope: !9659)
!9676 = !DILocalVariable(name: "j", scope: !9659, file: !21, line: 145, type: !12)
!9677 = !DILocation(line: 145, column: 12, scope: !9659)
!9678 = !DILocalVariable(name: "dst", scope: !9659, file: !21, line: 146, type: !13)
!9679 = !DILocation(line: 146, column: 15, scope: !9659)
!9680 = !DILocation(line: 146, column: 32, scope: !9659)
!9681 = !DILocation(line: 146, column: 21, scope: !9659)
!9682 = !DILocalVariable(name: "block", scope: !9659, file: !21, line: 147, type: !16)
!9683 = !DILocation(line: 147, column: 14, scope: !9659)
!9684 = !DILocation(line: 147, column: 32, scope: !9659)
!9685 = !DILocation(line: 147, column: 22, scope: !9659)
!9686 = !DILocalVariable(name: "dc", scope: !9659, file: !21, line: 148, type: !12)
!9687 = !DILocation(line: 148, column: 9, scope: !9659)
!9688 = !DILocation(line: 148, column: 15, scope: !9659)
!9689 = !DILocation(line: 148, column: 24, scope: !9659)
!9690 = !DILocation(line: 148, column: 30, scope: !9659)
!9691 = !DILocation(line: 149, column: 12, scope: !9659)
!9692 = !DILocation(line: 150, column: 5, scope: !9659)
!9693 = !DILocation(line: 150, column: 14, scope: !9659)
!9694 = !DILocation(line: 151, column: 12, scope: !9666)
!9695 = !DILocation(line: 151, column: 10, scope: !9666)
!9696 = !DILocation(line: 151, column: 17, scope: !9697)
!9697 = !DILexicalBlockFile(scope: !9665, file: !21, discriminator: 1)
!9698 = !DILocation(line: 151, column: 19, scope: !9697)
!9699 = !DILocation(line: 151, column: 5, scope: !9697)
!9700 = !DILocation(line: 153, column: 16, scope: !9663)
!9701 = !DILocation(line: 153, column: 14, scope: !9663)
!9702 = !DILocation(line: 153, column: 21, scope: !9703)
!9703 = !DILexicalBlockFile(scope: !9662, file: !21, discriminator: 1)
!9704 = !DILocation(line: 153, column: 23, scope: !9703)
!9705 = !DILocation(line: 153, column: 9, scope: !9703)
!9706 = !DILocation(line: 154, column: 43, scope: !9662)
!9707 = !DILocation(line: 154, column: 39, scope: !9662)
!9708 = !DILocation(line: 154, column: 48, scope: !9662)
!9709 = !DILocation(line: 154, column: 46, scope: !9662)
!9710 = !DILocation(line: 154, column: 22, scope: !9662)
!9711 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !9661)
!9712 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !9661)
!9713 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !9661)
!9714 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !9661)
!9715 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !9661)
!9716 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !9661)
!9717 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !9661)
!9718 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !9661)
!9719 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !9661)
!9720 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !9661)
!9721 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !9661)
!9722 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !9661)
!9723 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !9661)
!9724 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !9661)
!9725 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !9661)
!9726 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !9661)
!9727 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !9661)
!9728 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !9661)
!9729 = !DILocation(line: 154, column: 17, scope: !9662)
!9730 = !DILocation(line: 154, column: 13, scope: !9662)
!9731 = !DILocation(line: 154, column: 20, scope: !9662)
!9732 = !DILocation(line: 153, column: 29, scope: !9733)
!9733 = !DILexicalBlockFile(scope: !9662, file: !21, discriminator: 2)
!9734 = !DILocation(line: 153, column: 9, scope: !9733)
!9735 = distinct !{!9735, !9736}
!9736 = !DILocation(line: 153, column: 9, scope: !9664)
!9737 = !DILocation(line: 155, column: 16, scope: !9664)
!9738 = !DILocation(line: 155, column: 13, scope: !9664)
!9739 = !DILocation(line: 156, column: 5, scope: !9664)
!9740 = !DILocation(line: 151, column: 25, scope: !9741)
!9741 = !DILexicalBlockFile(scope: !9665, file: !21, discriminator: 2)
!9742 = !DILocation(line: 151, column: 5, scope: !9741)
!9743 = distinct !{!9743, !9744}
!9744 = !DILocation(line: 151, column: 5, scope: !9659)
!9745 = !DILocation(line: 157, column: 1, scope: !9659)
!9746 = distinct !DISubprogram(name: "ff_h264_idct8_dc_add_14_c", scope: !21, file: !21, line: 159, type: !60, isLocal: false, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!9747 = !DILocation(line: 229, column: 99, scope: !2144, inlinedAt: !9748)
!9748 = distinct !DILocation(line: 169, column: 22, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9750, file: !21, line: 168, column: 9)
!9750 = distinct !DILexicalBlock(scope: !9751, file: !21, line: 168, column: 9)
!9751 = distinct !DILexicalBlock(scope: !9752, file: !21, line: 167, column: 5)
!9752 = distinct !DILexicalBlock(scope: !9753, file: !21, line: 166, column: 5)
!9753 = distinct !DILexicalBlock(scope: !9746, file: !21, line: 166, column: 5)
!9754 = !DILocation(line: 229, column: 106, scope: !2144, inlinedAt: !9748)
!9755 = !DILocalVariable(name: "_dst", arg: 1, scope: !9746, file: !21, line: 159, type: !4)
!9756 = !DILocation(line: 159, column: 41, scope: !9746)
!9757 = !DILocalVariable(name: "_block", arg: 2, scope: !9746, file: !21, line: 159, type: !8)
!9758 = !DILocation(line: 159, column: 56, scope: !9746)
!9759 = !DILocalVariable(name: "stride", arg: 3, scope: !9746, file: !21, line: 159, type: !12)
!9760 = !DILocation(line: 159, column: 68, scope: !9746)
!9761 = !DILocalVariable(name: "i", scope: !9746, file: !21, line: 160, type: !12)
!9762 = !DILocation(line: 160, column: 9, scope: !9746)
!9763 = !DILocalVariable(name: "j", scope: !9746, file: !21, line: 160, type: !12)
!9764 = !DILocation(line: 160, column: 12, scope: !9746)
!9765 = !DILocalVariable(name: "dst", scope: !9746, file: !21, line: 161, type: !13)
!9766 = !DILocation(line: 161, column: 15, scope: !9746)
!9767 = !DILocation(line: 161, column: 32, scope: !9746)
!9768 = !DILocation(line: 161, column: 21, scope: !9746)
!9769 = !DILocalVariable(name: "block", scope: !9746, file: !21, line: 162, type: !16)
!9770 = !DILocation(line: 162, column: 14, scope: !9746)
!9771 = !DILocation(line: 162, column: 32, scope: !9746)
!9772 = !DILocation(line: 162, column: 22, scope: !9746)
!9773 = !DILocalVariable(name: "dc", scope: !9746, file: !21, line: 163, type: !12)
!9774 = !DILocation(line: 163, column: 9, scope: !9746)
!9775 = !DILocation(line: 163, column: 15, scope: !9746)
!9776 = !DILocation(line: 163, column: 24, scope: !9746)
!9777 = !DILocation(line: 163, column: 30, scope: !9746)
!9778 = !DILocation(line: 164, column: 5, scope: !9746)
!9779 = !DILocation(line: 164, column: 14, scope: !9746)
!9780 = !DILocation(line: 165, column: 12, scope: !9746)
!9781 = !DILocation(line: 166, column: 12, scope: !9753)
!9782 = !DILocation(line: 166, column: 10, scope: !9753)
!9783 = !DILocation(line: 166, column: 17, scope: !9784)
!9784 = !DILexicalBlockFile(scope: !9752, file: !21, discriminator: 1)
!9785 = !DILocation(line: 166, column: 19, scope: !9784)
!9786 = !DILocation(line: 166, column: 5, scope: !9784)
!9787 = !DILocation(line: 168, column: 16, scope: !9750)
!9788 = !DILocation(line: 168, column: 14, scope: !9750)
!9789 = !DILocation(line: 168, column: 21, scope: !9790)
!9790 = !DILexicalBlockFile(scope: !9749, file: !21, discriminator: 1)
!9791 = !DILocation(line: 168, column: 23, scope: !9790)
!9792 = !DILocation(line: 168, column: 9, scope: !9790)
!9793 = !DILocation(line: 169, column: 43, scope: !9749)
!9794 = !DILocation(line: 169, column: 39, scope: !9749)
!9795 = !DILocation(line: 169, column: 48, scope: !9749)
!9796 = !DILocation(line: 169, column: 46, scope: !9749)
!9797 = !DILocation(line: 169, column: 22, scope: !9749)
!9798 = !DILocation(line: 231, column: 9, scope: !2327, inlinedAt: !9748)
!9799 = !DILocation(line: 231, column: 19, scope: !2327, inlinedAt: !9748)
!9800 = !DILocation(line: 231, column: 17, scope: !2327, inlinedAt: !9748)
!9801 = !DILocation(line: 231, column: 22, scope: !2327, inlinedAt: !9748)
!9802 = !DILocation(line: 231, column: 13, scope: !2327, inlinedAt: !9748)
!9803 = !DILocation(line: 231, column: 11, scope: !2327, inlinedAt: !9748)
!9804 = !DILocation(line: 231, column: 9, scope: !2144, inlinedAt: !9748)
!9805 = !DILocation(line: 231, column: 37, scope: !2335, inlinedAt: !9748)
!9806 = !DILocation(line: 231, column: 36, scope: !2335, inlinedAt: !9748)
!9807 = !DILocation(line: 231, column: 40, scope: !2335, inlinedAt: !9748)
!9808 = !DILocation(line: 231, column: 53, scope: !2335, inlinedAt: !9748)
!9809 = !DILocation(line: 231, column: 51, scope: !2335, inlinedAt: !9748)
!9810 = !DILocation(line: 231, column: 56, scope: !2335, inlinedAt: !9748)
!9811 = !DILocation(line: 231, column: 46, scope: !2335, inlinedAt: !9748)
!9812 = !DILocation(line: 231, column: 28, scope: !2335, inlinedAt: !9748)
!9813 = !DILocation(line: 232, column: 17, scope: !2327, inlinedAt: !9748)
!9814 = !DILocation(line: 232, column: 10, scope: !2327, inlinedAt: !9748)
!9815 = !DILocation(line: 233, column: 1, scope: !2144, inlinedAt: !9748)
!9816 = !DILocation(line: 169, column: 17, scope: !9749)
!9817 = !DILocation(line: 169, column: 13, scope: !9749)
!9818 = !DILocation(line: 169, column: 20, scope: !9749)
!9819 = !DILocation(line: 168, column: 29, scope: !9820)
!9820 = !DILexicalBlockFile(scope: !9749, file: !21, discriminator: 2)
!9821 = !DILocation(line: 168, column: 9, scope: !9820)
!9822 = distinct !{!9822, !9823}
!9823 = !DILocation(line: 168, column: 9, scope: !9751)
!9824 = !DILocation(line: 170, column: 16, scope: !9751)
!9825 = !DILocation(line: 170, column: 13, scope: !9751)
!9826 = !DILocation(line: 171, column: 5, scope: !9751)
!9827 = !DILocation(line: 166, column: 25, scope: !9828)
!9828 = !DILexicalBlockFile(scope: !9752, file: !21, discriminator: 2)
!9829 = !DILocation(line: 166, column: 5, scope: !9828)
!9830 = distinct !{!9830, !9831}
!9831 = !DILocation(line: 166, column: 5, scope: !9746)
!9832 = !DILocation(line: 172, column: 1, scope: !9746)
!9833 = distinct !DISubprogram(name: "ff_h264_idct_add16_14_c", scope: !21, file: !21, line: 174, type: !1214, isLocal: false, isDefinition: true, scopeLine: 174, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!9834 = !DILocalVariable(name: "dst", arg: 1, scope: !9833, file: !21, line: 174, type: !4)
!9835 = !DILocation(line: 174, column: 39, scope: !9833)
!9836 = !DILocalVariable(name: "block_offset", arg: 2, scope: !9833, file: !21, line: 174, type: !1216)
!9837 = !DILocation(line: 174, column: 55, scope: !9833)
!9838 = !DILocalVariable(name: "block", arg: 3, scope: !9833, file: !21, line: 174, type: !8)
!9839 = !DILocation(line: 174, column: 78, scope: !9833)
!9840 = !DILocalVariable(name: "stride", arg: 4, scope: !9833, file: !21, line: 174, type: !12)
!9841 = !DILocation(line: 174, column: 89, scope: !9833)
!9842 = !DILocalVariable(name: "nnzc", arg: 5, scope: !9833, file: !21, line: 174, type: !1217)
!9843 = !DILocation(line: 174, column: 111, scope: !9833)
!9844 = !DILocalVariable(name: "i", scope: !9833, file: !21, line: 175, type: !12)
!9845 = !DILocation(line: 175, column: 9, scope: !9833)
!9846 = !DILocation(line: 176, column: 10, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9833, file: !21, line: 176, column: 5)
!9848 = !DILocation(line: 176, column: 9, scope: !9847)
!9849 = !DILocation(line: 176, column: 14, scope: !9850)
!9850 = !DILexicalBlockFile(scope: !9851, file: !21, discriminator: 1)
!9851 = distinct !DILexicalBlock(scope: !9847, file: !21, line: 176, column: 5)
!9852 = !DILocation(line: 176, column: 15, scope: !9850)
!9853 = !DILocation(line: 176, column: 5, scope: !9850)
!9854 = !DILocalVariable(name: "nnz", scope: !9855, file: !21, line: 177, type: !12)
!9855 = distinct !DILexicalBlock(scope: !9851, file: !21, line: 176, column: 24)
!9856 = !DILocation(line: 177, column: 13, scope: !9855)
!9857 = !DILocation(line: 177, column: 31, scope: !9855)
!9858 = !DILocation(line: 177, column: 25, scope: !9855)
!9859 = !DILocation(line: 177, column: 19, scope: !9855)
!9860 = !DILocation(line: 178, column: 12, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9855, file: !21, line: 178, column: 12)
!9862 = !DILocation(line: 178, column: 12, scope: !9855)
!9863 = !DILocation(line: 179, column: 16, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9865, file: !21, line: 179, column: 16)
!9865 = distinct !DILexicalBlock(scope: !9861, file: !21, line: 178, column: 16)
!9866 = !DILocation(line: 179, column: 19, scope: !9864)
!9867 = !DILocation(line: 179, column: 23, scope: !9864)
!9868 = !DILocation(line: 179, column: 44, scope: !9869)
!9869 = !DILexicalBlockFile(scope: !9864, file: !21, discriminator: 1)
!9870 = !DILocation(line: 179, column: 45, scope: !9869)
!9871 = !DILocation(line: 179, column: 26, scope: !9869)
!9872 = !DILocation(line: 179, column: 37, scope: !9869)
!9873 = !DILocation(line: 179, column: 16, scope: !9869)
!9874 = !DILocation(line: 179, column: 76, scope: !9875)
!9875 = !DILexicalBlockFile(scope: !9864, file: !21, discriminator: 2)
!9876 = !DILocation(line: 179, column: 95, scope: !9875)
!9877 = !DILocation(line: 179, column: 82, scope: !9875)
!9878 = !DILocation(line: 179, column: 80, scope: !9875)
!9879 = !DILocation(line: 179, column: 99, scope: !9875)
!9880 = !DILocation(line: 179, column: 107, scope: !9875)
!9881 = !DILocation(line: 179, column: 108, scope: !9875)
!9882 = !DILocation(line: 179, column: 111, scope: !9875)
!9883 = !DILocation(line: 179, column: 105, scope: !9875)
!9884 = !DILocation(line: 179, column: 130, scope: !9875)
!9885 = !DILocation(line: 179, column: 51, scope: !9875)
!9886 = !DILocation(line: 180, column: 40, scope: !9864)
!9887 = !DILocation(line: 180, column: 59, scope: !9864)
!9888 = !DILocation(line: 180, column: 46, scope: !9864)
!9889 = !DILocation(line: 180, column: 44, scope: !9864)
!9890 = !DILocation(line: 180, column: 63, scope: !9864)
!9891 = !DILocation(line: 180, column: 71, scope: !9864)
!9892 = !DILocation(line: 180, column: 72, scope: !9864)
!9893 = !DILocation(line: 180, column: 75, scope: !9864)
!9894 = !DILocation(line: 180, column: 69, scope: !9864)
!9895 = !DILocation(line: 180, column: 94, scope: !9864)
!9896 = !DILocation(line: 180, column: 18, scope: !9864)
!9897 = !DILocation(line: 181, column: 9, scope: !9865)
!9898 = !DILocation(line: 182, column: 5, scope: !9855)
!9899 = !DILocation(line: 176, column: 21, scope: !9900)
!9900 = !DILexicalBlockFile(scope: !9851, file: !21, discriminator: 2)
!9901 = !DILocation(line: 176, column: 5, scope: !9900)
!9902 = distinct !{!9902, !9903}
!9903 = !DILocation(line: 176, column: 5, scope: !9833)
!9904 = !DILocation(line: 183, column: 1, scope: !9833)
!9905 = distinct !DISubprogram(name: "ff_h264_idct_add16intra_14_c", scope: !21, file: !21, line: 185, type: !1214, isLocal: false, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!9906 = !DILocalVariable(name: "dst", arg: 1, scope: !9905, file: !21, line: 185, type: !4)
!9907 = !DILocation(line: 185, column: 44, scope: !9905)
!9908 = !DILocalVariable(name: "block_offset", arg: 2, scope: !9905, file: !21, line: 185, type: !1216)
!9909 = !DILocation(line: 185, column: 60, scope: !9905)
!9910 = !DILocalVariable(name: "block", arg: 3, scope: !9905, file: !21, line: 185, type: !8)
!9911 = !DILocation(line: 185, column: 83, scope: !9905)
!9912 = !DILocalVariable(name: "stride", arg: 4, scope: !9905, file: !21, line: 185, type: !12)
!9913 = !DILocation(line: 185, column: 94, scope: !9905)
!9914 = !DILocalVariable(name: "nnzc", arg: 5, scope: !9905, file: !21, line: 185, type: !1217)
!9915 = !DILocation(line: 185, column: 116, scope: !9905)
!9916 = !DILocalVariable(name: "i", scope: !9905, file: !21, line: 186, type: !12)
!9917 = !DILocation(line: 186, column: 9, scope: !9905)
!9918 = !DILocation(line: 187, column: 10, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9905, file: !21, line: 187, column: 5)
!9920 = !DILocation(line: 187, column: 9, scope: !9919)
!9921 = !DILocation(line: 187, column: 14, scope: !9922)
!9922 = !DILexicalBlockFile(scope: !9923, file: !21, discriminator: 1)
!9923 = distinct !DILexicalBlock(scope: !9919, file: !21, line: 187, column: 5)
!9924 = !DILocation(line: 187, column: 15, scope: !9922)
!9925 = !DILocation(line: 187, column: 5, scope: !9922)
!9926 = !DILocation(line: 188, column: 24, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9928, file: !21, line: 188, column: 12)
!9928 = distinct !DILexicalBlock(scope: !9923, file: !21, line: 187, column: 24)
!9929 = !DILocation(line: 188, column: 18, scope: !9927)
!9930 = !DILocation(line: 188, column: 12, scope: !9927)
!9931 = !DILocation(line: 188, column: 12, scope: !9928)
!9932 = !DILocation(line: 188, column: 52, scope: !9933)
!9933 = !DILexicalBlockFile(scope: !9927, file: !21, discriminator: 1)
!9934 = !DILocation(line: 188, column: 71, scope: !9933)
!9935 = !DILocation(line: 188, column: 58, scope: !9933)
!9936 = !DILocation(line: 188, column: 56, scope: !9933)
!9937 = !DILocation(line: 188, column: 75, scope: !9933)
!9938 = !DILocation(line: 188, column: 83, scope: !9933)
!9939 = !DILocation(line: 188, column: 84, scope: !9933)
!9940 = !DILocation(line: 188, column: 87, scope: !9933)
!9941 = !DILocation(line: 188, column: 81, scope: !9933)
!9942 = !DILocation(line: 188, column: 106, scope: !9933)
!9943 = !DILocation(line: 188, column: 30, scope: !9933)
!9944 = !DILocation(line: 189, column: 35, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9927, file: !21, line: 189, column: 17)
!9946 = !DILocation(line: 189, column: 36, scope: !9945)
!9947 = !DILocation(line: 189, column: 17, scope: !9945)
!9948 = !DILocation(line: 189, column: 28, scope: !9945)
!9949 = !DILocation(line: 189, column: 17, scope: !9927)
!9950 = !DILocation(line: 189, column: 67, scope: !9951)
!9951 = !DILexicalBlockFile(scope: !9945, file: !21, discriminator: 1)
!9952 = !DILocation(line: 189, column: 86, scope: !9951)
!9953 = !DILocation(line: 189, column: 73, scope: !9951)
!9954 = !DILocation(line: 189, column: 71, scope: !9951)
!9955 = !DILocation(line: 189, column: 90, scope: !9951)
!9956 = !DILocation(line: 189, column: 98, scope: !9951)
!9957 = !DILocation(line: 189, column: 99, scope: !9951)
!9958 = !DILocation(line: 189, column: 102, scope: !9951)
!9959 = !DILocation(line: 189, column: 96, scope: !9951)
!9960 = !DILocation(line: 189, column: 121, scope: !9951)
!9961 = !DILocation(line: 189, column: 42, scope: !9951)
!9962 = !DILocation(line: 190, column: 5, scope: !9928)
!9963 = !DILocation(line: 187, column: 21, scope: !9964)
!9964 = !DILexicalBlockFile(scope: !9923, file: !21, discriminator: 2)
!9965 = !DILocation(line: 187, column: 5, scope: !9964)
!9966 = distinct !{!9966, !9967}
!9967 = !DILocation(line: 187, column: 5, scope: !9905)
!9968 = !DILocation(line: 191, column: 1, scope: !9905)
!9969 = distinct !DISubprogram(name: "ff_h264_idct8_add4_14_c", scope: !21, file: !21, line: 193, type: !1214, isLocal: false, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!9970 = !DILocalVariable(name: "dst", arg: 1, scope: !9969, file: !21, line: 193, type: !4)
!9971 = !DILocation(line: 193, column: 39, scope: !9969)
!9972 = !DILocalVariable(name: "block_offset", arg: 2, scope: !9969, file: !21, line: 193, type: !1216)
!9973 = !DILocation(line: 193, column: 55, scope: !9969)
!9974 = !DILocalVariable(name: "block", arg: 3, scope: !9969, file: !21, line: 193, type: !8)
!9975 = !DILocation(line: 193, column: 78, scope: !9969)
!9976 = !DILocalVariable(name: "stride", arg: 4, scope: !9969, file: !21, line: 193, type: !12)
!9977 = !DILocation(line: 193, column: 89, scope: !9969)
!9978 = !DILocalVariable(name: "nnzc", arg: 5, scope: !9969, file: !21, line: 193, type: !1217)
!9979 = !DILocation(line: 193, column: 111, scope: !9969)
!9980 = !DILocalVariable(name: "i", scope: !9969, file: !21, line: 194, type: !12)
!9981 = !DILocation(line: 194, column: 9, scope: !9969)
!9982 = !DILocation(line: 195, column: 10, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9969, file: !21, line: 195, column: 5)
!9984 = !DILocation(line: 195, column: 9, scope: !9983)
!9985 = !DILocation(line: 195, column: 14, scope: !9986)
!9986 = !DILexicalBlockFile(scope: !9987, file: !21, discriminator: 1)
!9987 = distinct !DILexicalBlock(scope: !9983, file: !21, line: 195, column: 5)
!9988 = !DILocation(line: 195, column: 15, scope: !9986)
!9989 = !DILocation(line: 195, column: 5, scope: !9986)
!9990 = !DILocalVariable(name: "nnz", scope: !9991, file: !21, line: 196, type: !12)
!9991 = distinct !DILexicalBlock(scope: !9987, file: !21, line: 195, column: 25)
!9992 = !DILocation(line: 196, column: 13, scope: !9991)
!9993 = !DILocation(line: 196, column: 31, scope: !9991)
!9994 = !DILocation(line: 196, column: 25, scope: !9991)
!9995 = !DILocation(line: 196, column: 19, scope: !9991)
!9996 = !DILocation(line: 197, column: 12, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9991, file: !21, line: 197, column: 12)
!9998 = !DILocation(line: 197, column: 12, scope: !9991)
!9999 = !DILocation(line: 198, column: 16, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !10001, file: !21, line: 198, column: 16)
!10001 = distinct !DILexicalBlock(scope: !9997, file: !21, line: 197, column: 16)
!10002 = !DILocation(line: 198, column: 19, scope: !10000)
!10003 = !DILocation(line: 198, column: 23, scope: !10000)
!10004 = !DILocation(line: 198, column: 44, scope: !10005)
!10005 = !DILexicalBlockFile(scope: !10000, file: !21, discriminator: 1)
!10006 = !DILocation(line: 198, column: 45, scope: !10005)
!10007 = !DILocation(line: 198, column: 26, scope: !10005)
!10008 = !DILocation(line: 198, column: 37, scope: !10005)
!10009 = !DILocation(line: 198, column: 16, scope: !10005)
!10010 = !DILocation(line: 198, column: 77, scope: !10011)
!10011 = !DILexicalBlockFile(scope: !10000, file: !21, discriminator: 2)
!10012 = !DILocation(line: 198, column: 96, scope: !10011)
!10013 = !DILocation(line: 198, column: 83, scope: !10011)
!10014 = !DILocation(line: 198, column: 81, scope: !10011)
!10015 = !DILocation(line: 198, column: 100, scope: !10011)
!10016 = !DILocation(line: 198, column: 108, scope: !10011)
!10017 = !DILocation(line: 198, column: 109, scope: !10011)
!10018 = !DILocation(line: 198, column: 112, scope: !10011)
!10019 = !DILocation(line: 198, column: 106, scope: !10011)
!10020 = !DILocation(line: 198, column: 131, scope: !10011)
!10021 = !DILocation(line: 198, column: 51, scope: !10011)
!10022 = !DILocation(line: 199, column: 41, scope: !10000)
!10023 = !DILocation(line: 199, column: 60, scope: !10000)
!10024 = !DILocation(line: 199, column: 47, scope: !10000)
!10025 = !DILocation(line: 199, column: 45, scope: !10000)
!10026 = !DILocation(line: 199, column: 64, scope: !10000)
!10027 = !DILocation(line: 199, column: 72, scope: !10000)
!10028 = !DILocation(line: 199, column: 73, scope: !10000)
!10029 = !DILocation(line: 199, column: 76, scope: !10000)
!10030 = !DILocation(line: 199, column: 70, scope: !10000)
!10031 = !DILocation(line: 199, column: 95, scope: !10000)
!10032 = !DILocation(line: 199, column: 18, scope: !10000)
!10033 = !DILocation(line: 200, column: 9, scope: !10001)
!10034 = !DILocation(line: 201, column: 5, scope: !9991)
!10035 = !DILocation(line: 195, column: 21, scope: !10036)
!10036 = !DILexicalBlockFile(scope: !9987, file: !21, discriminator: 2)
!10037 = !DILocation(line: 195, column: 5, scope: !10036)
!10038 = distinct !{!10038, !10039}
!10039 = !DILocation(line: 195, column: 5, scope: !9969)
!10040 = !DILocation(line: 202, column: 1, scope: !9969)
!10041 = distinct !DISubprogram(name: "ff_h264_idct_add8_14_c", scope: !21, file: !21, line: 204, type: !1426, isLocal: false, isDefinition: true, scopeLine: 204, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!10042 = !DILocalVariable(name: "dest", arg: 1, scope: !10041, file: !21, line: 204, type: !1428)
!10043 = !DILocation(line: 204, column: 39, scope: !10041)
!10044 = !DILocalVariable(name: "block_offset", arg: 2, scope: !10041, file: !21, line: 204, type: !1216)
!10045 = !DILocation(line: 204, column: 56, scope: !10041)
!10046 = !DILocalVariable(name: "block", arg: 3, scope: !10041, file: !21, line: 204, type: !8)
!10047 = !DILocation(line: 204, column: 79, scope: !10041)
!10048 = !DILocalVariable(name: "stride", arg: 4, scope: !10041, file: !21, line: 204, type: !12)
!10049 = !DILocation(line: 204, column: 90, scope: !10041)
!10050 = !DILocalVariable(name: "nnzc", arg: 5, scope: !10041, file: !21, line: 204, type: !1217)
!10051 = !DILocation(line: 204, column: 112, scope: !10041)
!10052 = !DILocalVariable(name: "i", scope: !10041, file: !21, line: 205, type: !12)
!10053 = !DILocation(line: 205, column: 9, scope: !10041)
!10054 = !DILocalVariable(name: "j", scope: !10041, file: !21, line: 205, type: !12)
!10055 = !DILocation(line: 205, column: 12, scope: !10041)
!10056 = !DILocation(line: 206, column: 10, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10041, file: !21, line: 206, column: 5)
!10058 = !DILocation(line: 206, column: 9, scope: !10057)
!10059 = !DILocation(line: 206, column: 14, scope: !10060)
!10060 = !DILexicalBlockFile(scope: !10061, file: !21, discriminator: 1)
!10061 = distinct !DILexicalBlock(scope: !10057, file: !21, line: 206, column: 5)
!10062 = !DILocation(line: 206, column: 15, scope: !10060)
!10063 = !DILocation(line: 206, column: 5, scope: !10060)
!10064 = !DILocation(line: 207, column: 15, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10066, file: !21, line: 207, column: 9)
!10066 = distinct !DILexicalBlock(scope: !10061, file: !21, line: 206, column: 23)
!10067 = !DILocation(line: 207, column: 16, scope: !10065)
!10068 = !DILocation(line: 207, column: 14, scope: !10065)
!10069 = !DILocation(line: 207, column: 13, scope: !10065)
!10070 = !DILocation(line: 207, column: 21, scope: !10071)
!10071 = !DILexicalBlockFile(scope: !10072, file: !21, discriminator: 1)
!10072 = distinct !DILexicalBlock(scope: !10065, file: !21, line: 207, column: 9)
!10073 = !DILocation(line: 207, column: 23, scope: !10071)
!10074 = !DILocation(line: 207, column: 24, scope: !10071)
!10075 = !DILocation(line: 207, column: 27, scope: !10071)
!10076 = !DILocation(line: 207, column: 22, scope: !10071)
!10077 = !DILocation(line: 207, column: 9, scope: !10071)
!10078 = !DILocation(line: 208, column: 28, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10080, file: !21, line: 208, column: 16)
!10080 = distinct !DILexicalBlock(scope: !10072, file: !21, line: 207, column: 35)
!10081 = !DILocation(line: 208, column: 22, scope: !10079)
!10082 = !DILocation(line: 208, column: 16, scope: !10079)
!10083 = !DILocation(line: 208, column: 16, scope: !10080)
!10084 = !DILocation(line: 209, column: 44, scope: !10079)
!10085 = !DILocation(line: 209, column: 45, scope: !10079)
!10086 = !DILocation(line: 209, column: 39, scope: !10079)
!10087 = !DILocation(line: 209, column: 64, scope: !10079)
!10088 = !DILocation(line: 209, column: 51, scope: !10079)
!10089 = !DILocation(line: 209, column: 49, scope: !10079)
!10090 = !DILocation(line: 209, column: 68, scope: !10079)
!10091 = !DILocation(line: 209, column: 76, scope: !10079)
!10092 = !DILocation(line: 209, column: 77, scope: !10079)
!10093 = !DILocation(line: 209, column: 80, scope: !10079)
!10094 = !DILocation(line: 209, column: 74, scope: !10079)
!10095 = !DILocation(line: 209, column: 99, scope: !10079)
!10096 = !DILocation(line: 209, column: 17, scope: !10079)
!10097 = !DILocation(line: 210, column: 39, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10079, file: !21, line: 210, column: 21)
!10099 = !DILocation(line: 210, column: 40, scope: !10098)
!10100 = !DILocation(line: 210, column: 21, scope: !10098)
!10101 = !DILocation(line: 210, column: 32, scope: !10098)
!10102 = !DILocation(line: 210, column: 21, scope: !10079)
!10103 = !DILocation(line: 211, column: 47, scope: !10098)
!10104 = !DILocation(line: 211, column: 48, scope: !10098)
!10105 = !DILocation(line: 211, column: 42, scope: !10098)
!10106 = !DILocation(line: 211, column: 67, scope: !10098)
!10107 = !DILocation(line: 211, column: 54, scope: !10098)
!10108 = !DILocation(line: 211, column: 52, scope: !10098)
!10109 = !DILocation(line: 211, column: 71, scope: !10098)
!10110 = !DILocation(line: 211, column: 79, scope: !10098)
!10111 = !DILocation(line: 211, column: 80, scope: !10098)
!10112 = !DILocation(line: 211, column: 83, scope: !10098)
!10113 = !DILocation(line: 211, column: 77, scope: !10098)
!10114 = !DILocation(line: 211, column: 102, scope: !10098)
!10115 = !DILocation(line: 211, column: 17, scope: !10098)
!10116 = !DILocation(line: 212, column: 9, scope: !10080)
!10117 = !DILocation(line: 207, column: 32, scope: !10118)
!10118 = !DILexicalBlockFile(scope: !10072, file: !21, discriminator: 2)
!10119 = !DILocation(line: 207, column: 9, scope: !10118)
!10120 = distinct !{!10120, !10121}
!10121 = !DILocation(line: 207, column: 9, scope: !10066)
!10122 = !DILocation(line: 213, column: 5, scope: !10066)
!10123 = !DILocation(line: 206, column: 20, scope: !10124)
!10124 = !DILexicalBlockFile(scope: !10061, file: !21, discriminator: 2)
!10125 = !DILocation(line: 206, column: 5, scope: !10124)
!10126 = distinct !{!10126, !10127}
!10127 = !DILocation(line: 206, column: 5, scope: !10041)
!10128 = !DILocation(line: 214, column: 1, scope: !10041)
!10129 = distinct !DISubprogram(name: "ff_h264_idct_add8_422_14_c", scope: !21, file: !21, line: 216, type: !1426, isLocal: false, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!10130 = !DILocalVariable(name: "dest", arg: 1, scope: !10129, file: !21, line: 216, type: !1428)
!10131 = !DILocation(line: 216, column: 43, scope: !10129)
!10132 = !DILocalVariable(name: "block_offset", arg: 2, scope: !10129, file: !21, line: 216, type: !1216)
!10133 = !DILocation(line: 216, column: 60, scope: !10129)
!10134 = !DILocalVariable(name: "block", arg: 3, scope: !10129, file: !21, line: 216, type: !8)
!10135 = !DILocation(line: 216, column: 83, scope: !10129)
!10136 = !DILocalVariable(name: "stride", arg: 4, scope: !10129, file: !21, line: 216, type: !12)
!10137 = !DILocation(line: 216, column: 94, scope: !10129)
!10138 = !DILocalVariable(name: "nnzc", arg: 5, scope: !10129, file: !21, line: 216, type: !1217)
!10139 = !DILocation(line: 216, column: 116, scope: !10129)
!10140 = !DILocalVariable(name: "i", scope: !10129, file: !21, line: 217, type: !12)
!10141 = !DILocation(line: 217, column: 9, scope: !10129)
!10142 = !DILocalVariable(name: "j", scope: !10129, file: !21, line: 217, type: !12)
!10143 = !DILocation(line: 217, column: 12, scope: !10129)
!10144 = !DILocation(line: 219, column: 10, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10129, file: !21, line: 219, column: 5)
!10146 = !DILocation(line: 219, column: 9, scope: !10145)
!10147 = !DILocation(line: 219, column: 14, scope: !10148)
!10148 = !DILexicalBlockFile(scope: !10149, file: !21, discriminator: 1)
!10149 = distinct !DILexicalBlock(scope: !10145, file: !21, line: 219, column: 5)
!10150 = !DILocation(line: 219, column: 15, scope: !10148)
!10151 = !DILocation(line: 219, column: 5, scope: !10148)
!10152 = !DILocation(line: 220, column: 15, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10154, file: !21, line: 220, column: 9)
!10154 = distinct !DILexicalBlock(scope: !10149, file: !21, line: 219, column: 23)
!10155 = !DILocation(line: 220, column: 16, scope: !10153)
!10156 = !DILocation(line: 220, column: 14, scope: !10153)
!10157 = !DILocation(line: 220, column: 13, scope: !10153)
!10158 = !DILocation(line: 220, column: 21, scope: !10159)
!10159 = !DILexicalBlockFile(scope: !10160, file: !21, discriminator: 1)
!10160 = distinct !DILexicalBlock(scope: !10153, file: !21, line: 220, column: 9)
!10161 = !DILocation(line: 220, column: 23, scope: !10159)
!10162 = !DILocation(line: 220, column: 24, scope: !10159)
!10163 = !DILocation(line: 220, column: 27, scope: !10159)
!10164 = !DILocation(line: 220, column: 22, scope: !10159)
!10165 = !DILocation(line: 220, column: 9, scope: !10159)
!10166 = !DILocation(line: 221, column: 28, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10168, file: !21, line: 221, column: 16)
!10168 = distinct !DILexicalBlock(scope: !10160, file: !21, line: 220, column: 35)
!10169 = !DILocation(line: 221, column: 22, scope: !10167)
!10170 = !DILocation(line: 221, column: 16, scope: !10167)
!10171 = !DILocation(line: 221, column: 16, scope: !10168)
!10172 = !DILocation(line: 222, column: 44, scope: !10167)
!10173 = !DILocation(line: 222, column: 45, scope: !10167)
!10174 = !DILocation(line: 222, column: 39, scope: !10167)
!10175 = !DILocation(line: 222, column: 64, scope: !10167)
!10176 = !DILocation(line: 222, column: 51, scope: !10167)
!10177 = !DILocation(line: 222, column: 49, scope: !10167)
!10178 = !DILocation(line: 222, column: 68, scope: !10167)
!10179 = !DILocation(line: 222, column: 76, scope: !10167)
!10180 = !DILocation(line: 222, column: 77, scope: !10167)
!10181 = !DILocation(line: 222, column: 80, scope: !10167)
!10182 = !DILocation(line: 222, column: 74, scope: !10167)
!10183 = !DILocation(line: 222, column: 99, scope: !10167)
!10184 = !DILocation(line: 222, column: 17, scope: !10167)
!10185 = !DILocation(line: 223, column: 39, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10167, file: !21, line: 223, column: 21)
!10187 = !DILocation(line: 223, column: 40, scope: !10186)
!10188 = !DILocation(line: 223, column: 21, scope: !10186)
!10189 = !DILocation(line: 223, column: 32, scope: !10186)
!10190 = !DILocation(line: 223, column: 21, scope: !10167)
!10191 = !DILocation(line: 224, column: 47, scope: !10186)
!10192 = !DILocation(line: 224, column: 48, scope: !10186)
!10193 = !DILocation(line: 224, column: 42, scope: !10186)
!10194 = !DILocation(line: 224, column: 67, scope: !10186)
!10195 = !DILocation(line: 224, column: 54, scope: !10186)
!10196 = !DILocation(line: 224, column: 52, scope: !10186)
!10197 = !DILocation(line: 224, column: 71, scope: !10186)
!10198 = !DILocation(line: 224, column: 79, scope: !10186)
!10199 = !DILocation(line: 224, column: 80, scope: !10186)
!10200 = !DILocation(line: 224, column: 83, scope: !10186)
!10201 = !DILocation(line: 224, column: 77, scope: !10186)
!10202 = !DILocation(line: 224, column: 102, scope: !10186)
!10203 = !DILocation(line: 224, column: 17, scope: !10186)
!10204 = !DILocation(line: 225, column: 9, scope: !10168)
!10205 = !DILocation(line: 220, column: 32, scope: !10206)
!10206 = !DILexicalBlockFile(scope: !10160, file: !21, discriminator: 2)
!10207 = !DILocation(line: 220, column: 9, scope: !10206)
!10208 = distinct !{!10208, !10209}
!10209 = !DILocation(line: 220, column: 9, scope: !10154)
!10210 = !DILocation(line: 226, column: 5, scope: !10154)
!10211 = !DILocation(line: 219, column: 20, scope: !10212)
!10212 = !DILexicalBlockFile(scope: !10149, file: !21, discriminator: 2)
!10213 = !DILocation(line: 219, column: 5, scope: !10212)
!10214 = distinct !{!10214, !10215}
!10215 = !DILocation(line: 219, column: 5, scope: !10129)
!10216 = !DILocation(line: 228, column: 10, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10129, file: !21, line: 228, column: 5)
!10218 = !DILocation(line: 228, column: 9, scope: !10217)
!10219 = !DILocation(line: 228, column: 14, scope: !10220)
!10220 = !DILexicalBlockFile(scope: !10221, file: !21, discriminator: 1)
!10221 = distinct !DILexicalBlock(scope: !10217, file: !21, line: 228, column: 5)
!10222 = !DILocation(line: 228, column: 15, scope: !10220)
!10223 = !DILocation(line: 228, column: 5, scope: !10220)
!10224 = !DILocation(line: 229, column: 15, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !10226, file: !21, line: 229, column: 9)
!10226 = distinct !DILexicalBlock(scope: !10221, file: !21, line: 228, column: 23)
!10227 = !DILocation(line: 229, column: 16, scope: !10225)
!10228 = !DILocation(line: 229, column: 19, scope: !10225)
!10229 = !DILocation(line: 229, column: 14, scope: !10225)
!10230 = !DILocation(line: 229, column: 13, scope: !10225)
!10231 = !DILocation(line: 229, column: 23, scope: !10232)
!10232 = !DILexicalBlockFile(scope: !10233, file: !21, discriminator: 1)
!10233 = distinct !DILexicalBlock(scope: !10225, file: !21, line: 229, column: 9)
!10234 = !DILocation(line: 229, column: 25, scope: !10232)
!10235 = !DILocation(line: 229, column: 26, scope: !10232)
!10236 = !DILocation(line: 229, column: 29, scope: !10232)
!10237 = !DILocation(line: 229, column: 24, scope: !10232)
!10238 = !DILocation(line: 229, column: 9, scope: !10232)
!10239 = !DILocation(line: 230, column: 28, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10241, file: !21, line: 230, column: 16)
!10241 = distinct !DILexicalBlock(scope: !10233, file: !21, line: 229, column: 37)
!10242 = !DILocation(line: 230, column: 29, scope: !10240)
!10243 = !DILocation(line: 230, column: 22, scope: !10240)
!10244 = !DILocation(line: 230, column: 16, scope: !10240)
!10245 = !DILocation(line: 230, column: 16, scope: !10241)
!10246 = !DILocation(line: 231, column: 44, scope: !10240)
!10247 = !DILocation(line: 231, column: 45, scope: !10240)
!10248 = !DILocation(line: 231, column: 39, scope: !10240)
!10249 = !DILocation(line: 231, column: 64, scope: !10240)
!10250 = !DILocation(line: 231, column: 65, scope: !10240)
!10251 = !DILocation(line: 231, column: 51, scope: !10240)
!10252 = !DILocation(line: 231, column: 49, scope: !10240)
!10253 = !DILocation(line: 231, column: 70, scope: !10240)
!10254 = !DILocation(line: 231, column: 78, scope: !10240)
!10255 = !DILocation(line: 231, column: 79, scope: !10240)
!10256 = !DILocation(line: 231, column: 82, scope: !10240)
!10257 = !DILocation(line: 231, column: 76, scope: !10240)
!10258 = !DILocation(line: 231, column: 101, scope: !10240)
!10259 = !DILocation(line: 231, column: 17, scope: !10240)
!10260 = !DILocation(line: 232, column: 39, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10240, file: !21, line: 232, column: 21)
!10262 = !DILocation(line: 232, column: 40, scope: !10261)
!10263 = !DILocation(line: 232, column: 21, scope: !10261)
!10264 = !DILocation(line: 232, column: 32, scope: !10261)
!10265 = !DILocation(line: 232, column: 21, scope: !10240)
!10266 = !DILocation(line: 233, column: 47, scope: !10261)
!10267 = !DILocation(line: 233, column: 48, scope: !10261)
!10268 = !DILocation(line: 233, column: 42, scope: !10261)
!10269 = !DILocation(line: 233, column: 67, scope: !10261)
!10270 = !DILocation(line: 233, column: 68, scope: !10261)
!10271 = !DILocation(line: 233, column: 54, scope: !10261)
!10272 = !DILocation(line: 233, column: 52, scope: !10261)
!10273 = !DILocation(line: 233, column: 73, scope: !10261)
!10274 = !DILocation(line: 233, column: 81, scope: !10261)
!10275 = !DILocation(line: 233, column: 82, scope: !10261)
!10276 = !DILocation(line: 233, column: 85, scope: !10261)
!10277 = !DILocation(line: 233, column: 79, scope: !10261)
!10278 = !DILocation(line: 233, column: 104, scope: !10261)
!10279 = !DILocation(line: 233, column: 17, scope: !10261)
!10280 = !DILocation(line: 234, column: 9, scope: !10241)
!10281 = !DILocation(line: 229, column: 34, scope: !10282)
!10282 = !DILexicalBlockFile(scope: !10233, file: !21, discriminator: 2)
!10283 = !DILocation(line: 229, column: 9, scope: !10282)
!10284 = distinct !{!10284, !10285}
!10285 = !DILocation(line: 229, column: 9, scope: !10226)
!10286 = !DILocation(line: 235, column: 5, scope: !10226)
!10287 = !DILocation(line: 228, column: 20, scope: !10288)
!10288 = !DILexicalBlockFile(scope: !10221, file: !21, discriminator: 2)
!10289 = !DILocation(line: 228, column: 5, scope: !10288)
!10290 = distinct !{!10290, !10291}
!10291 = !DILocation(line: 228, column: 5, scope: !10129)
!10292 = !DILocation(line: 236, column: 1, scope: !10129)
!10293 = !DILocalVariable(name: "_output", arg: 1, scope: !48, file: !21, line: 242, type: !8)
!10294 = !DILocation(line: 242, column: 49, scope: !48)
!10295 = !DILocalVariable(name: "_input", arg: 2, scope: !48, file: !21, line: 242, type: !8)
!10296 = !DILocation(line: 242, column: 67, scope: !48)
!10297 = !DILocalVariable(name: "qmul", arg: 3, scope: !48, file: !21, line: 242, type: !12)
!10298 = !DILocation(line: 242, column: 79, scope: !48)
!10299 = !DILocalVariable(name: "i", scope: !48, file: !21, line: 244, type: !12)
!10300 = !DILocation(line: 244, column: 9, scope: !48)
!10301 = !DILocalVariable(name: "temp", scope: !48, file: !21, line: 245, type: !1689)
!10302 = !DILocation(line: 245, column: 9, scope: !48)
!10303 = !DILocalVariable(name: "input", scope: !48, file: !21, line: 247, type: !16)
!10304 = !DILocation(line: 247, column: 14, scope: !48)
!10305 = !DILocation(line: 247, column: 32, scope: !48)
!10306 = !DILocation(line: 247, column: 22, scope: !48)
!10307 = !DILocalVariable(name: "output", scope: !48, file: !21, line: 248, type: !16)
!10308 = !DILocation(line: 248, column: 14, scope: !48)
!10309 = !DILocation(line: 248, column: 33, scope: !48)
!10310 = !DILocation(line: 248, column: 23, scope: !48)
!10311 = !DILocation(line: 250, column: 10, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !48, file: !21, line: 250, column: 5)
!10313 = !DILocation(line: 250, column: 9, scope: !10312)
!10314 = !DILocation(line: 250, column: 14, scope: !10315)
!10315 = !DILexicalBlockFile(scope: !10316, file: !21, discriminator: 1)
!10316 = distinct !DILexicalBlock(scope: !10312, file: !21, line: 250, column: 5)
!10317 = !DILocation(line: 250, column: 15, scope: !10315)
!10318 = !DILocation(line: 250, column: 5, scope: !10315)
!10319 = !DILocalVariable(name: "z0", scope: !10320, file: !21, line: 251, type: !468)
!10320 = distinct !DILexicalBlock(scope: !10316, file: !21, line: 250, column: 23)
!10321 = !DILocation(line: 251, column: 19, scope: !10320)
!10322 = !DILocation(line: 251, column: 31, scope: !10320)
!10323 = !DILocation(line: 251, column: 30, scope: !10320)
!10324 = !DILocation(line: 251, column: 32, scope: !10320)
!10325 = !DILocation(line: 251, column: 23, scope: !10320)
!10326 = !DILocation(line: 251, column: 46, scope: !10320)
!10327 = !DILocation(line: 251, column: 45, scope: !10320)
!10328 = !DILocation(line: 251, column: 47, scope: !10320)
!10329 = !DILocation(line: 251, column: 38, scope: !10320)
!10330 = !DILocation(line: 251, column: 36, scope: !10320)
!10331 = !DILocalVariable(name: "z1", scope: !10320, file: !21, line: 252, type: !468)
!10332 = !DILocation(line: 252, column: 19, scope: !10320)
!10333 = !DILocation(line: 252, column: 31, scope: !10320)
!10334 = !DILocation(line: 252, column: 30, scope: !10320)
!10335 = !DILocation(line: 252, column: 32, scope: !10320)
!10336 = !DILocation(line: 252, column: 23, scope: !10320)
!10337 = !DILocation(line: 252, column: 46, scope: !10320)
!10338 = !DILocation(line: 252, column: 45, scope: !10320)
!10339 = !DILocation(line: 252, column: 47, scope: !10320)
!10340 = !DILocation(line: 252, column: 38, scope: !10320)
!10341 = !DILocation(line: 252, column: 36, scope: !10320)
!10342 = !DILocalVariable(name: "z2", scope: !10320, file: !21, line: 253, type: !468)
!10343 = !DILocation(line: 253, column: 19, scope: !10320)
!10344 = !DILocation(line: 253, column: 31, scope: !10320)
!10345 = !DILocation(line: 253, column: 30, scope: !10320)
!10346 = !DILocation(line: 253, column: 32, scope: !10320)
!10347 = !DILocation(line: 253, column: 23, scope: !10320)
!10348 = !DILocation(line: 253, column: 46, scope: !10320)
!10349 = !DILocation(line: 253, column: 45, scope: !10320)
!10350 = !DILocation(line: 253, column: 47, scope: !10320)
!10351 = !DILocation(line: 253, column: 38, scope: !10320)
!10352 = !DILocation(line: 253, column: 36, scope: !10320)
!10353 = !DILocalVariable(name: "z3", scope: !10320, file: !21, line: 254, type: !468)
!10354 = !DILocation(line: 254, column: 19, scope: !10320)
!10355 = !DILocation(line: 254, column: 31, scope: !10320)
!10356 = !DILocation(line: 254, column: 30, scope: !10320)
!10357 = !DILocation(line: 254, column: 32, scope: !10320)
!10358 = !DILocation(line: 254, column: 23, scope: !10320)
!10359 = !DILocation(line: 254, column: 46, scope: !10320)
!10360 = !DILocation(line: 254, column: 45, scope: !10320)
!10361 = !DILocation(line: 254, column: 47, scope: !10320)
!10362 = !DILocation(line: 254, column: 38, scope: !10320)
!10363 = !DILocation(line: 254, column: 36, scope: !10320)
!10364 = !DILocation(line: 256, column: 22, scope: !10320)
!10365 = !DILocation(line: 256, column: 25, scope: !10320)
!10366 = !DILocation(line: 256, column: 24, scope: !10320)
!10367 = !DILocation(line: 256, column: 16, scope: !10320)
!10368 = !DILocation(line: 256, column: 15, scope: !10320)
!10369 = !DILocation(line: 256, column: 17, scope: !10320)
!10370 = !DILocation(line: 256, column: 9, scope: !10320)
!10371 = !DILocation(line: 256, column: 20, scope: !10320)
!10372 = !DILocation(line: 257, column: 22, scope: !10320)
!10373 = !DILocation(line: 257, column: 25, scope: !10320)
!10374 = !DILocation(line: 257, column: 24, scope: !10320)
!10375 = !DILocation(line: 257, column: 16, scope: !10320)
!10376 = !DILocation(line: 257, column: 15, scope: !10320)
!10377 = !DILocation(line: 257, column: 17, scope: !10320)
!10378 = !DILocation(line: 257, column: 9, scope: !10320)
!10379 = !DILocation(line: 257, column: 20, scope: !10320)
!10380 = !DILocation(line: 258, column: 22, scope: !10320)
!10381 = !DILocation(line: 258, column: 25, scope: !10320)
!10382 = !DILocation(line: 258, column: 24, scope: !10320)
!10383 = !DILocation(line: 258, column: 16, scope: !10320)
!10384 = !DILocation(line: 258, column: 15, scope: !10320)
!10385 = !DILocation(line: 258, column: 17, scope: !10320)
!10386 = !DILocation(line: 258, column: 9, scope: !10320)
!10387 = !DILocation(line: 258, column: 20, scope: !10320)
!10388 = !DILocation(line: 259, column: 22, scope: !10320)
!10389 = !DILocation(line: 259, column: 25, scope: !10320)
!10390 = !DILocation(line: 259, column: 24, scope: !10320)
!10391 = !DILocation(line: 259, column: 16, scope: !10320)
!10392 = !DILocation(line: 259, column: 15, scope: !10320)
!10393 = !DILocation(line: 259, column: 17, scope: !10320)
!10394 = !DILocation(line: 259, column: 9, scope: !10320)
!10395 = !DILocation(line: 259, column: 20, scope: !10320)
!10396 = !DILocation(line: 260, column: 5, scope: !10320)
!10397 = !DILocation(line: 250, column: 20, scope: !10398)
!10398 = !DILexicalBlockFile(scope: !10316, file: !21, discriminator: 2)
!10399 = !DILocation(line: 250, column: 5, scope: !10398)
!10400 = distinct !{!10400, !10401}
!10401 = !DILocation(line: 250, column: 5, scope: !48)
!10402 = !DILocation(line: 262, column: 10, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !48, file: !21, line: 262, column: 5)
!10404 = !DILocation(line: 262, column: 9, scope: !10403)
!10405 = !DILocation(line: 262, column: 14, scope: !10406)
!10406 = !DILexicalBlockFile(scope: !10407, file: !21, discriminator: 1)
!10407 = distinct !DILexicalBlock(scope: !10403, file: !21, line: 262, column: 5)
!10408 = !DILocation(line: 262, column: 15, scope: !10406)
!10409 = !DILocation(line: 262, column: 5, scope: !10406)
!10410 = !DILocalVariable(name: "offset", scope: !10411, file: !21, line: 263, type: !468)
!10411 = distinct !DILexicalBlock(scope: !10407, file: !21, line: 262, column: 23)
!10412 = !DILocation(line: 263, column: 19, scope: !10411)
!10413 = !DILocation(line: 263, column: 36, scope: !10411)
!10414 = !DILocation(line: 263, column: 27, scope: !10411)
!10415 = !DILocalVariable(name: "z0", scope: !10411, file: !21, line: 264, type: !106)
!10416 = !DILocation(line: 264, column: 24, scope: !10411)
!10417 = !DILocation(line: 264, column: 37, scope: !10411)
!10418 = !DILocation(line: 264, column: 36, scope: !10411)
!10419 = !DILocation(line: 264, column: 28, scope: !10411)
!10420 = !DILocation(line: 264, column: 51, scope: !10411)
!10421 = !DILocation(line: 264, column: 50, scope: !10411)
!10422 = !DILocation(line: 264, column: 42, scope: !10411)
!10423 = !DILocation(line: 264, column: 40, scope: !10411)
!10424 = !DILocalVariable(name: "z1", scope: !10411, file: !21, line: 265, type: !106)
!10425 = !DILocation(line: 265, column: 24, scope: !10411)
!10426 = !DILocation(line: 265, column: 37, scope: !10411)
!10427 = !DILocation(line: 265, column: 36, scope: !10411)
!10428 = !DILocation(line: 265, column: 28, scope: !10411)
!10429 = !DILocation(line: 265, column: 51, scope: !10411)
!10430 = !DILocation(line: 265, column: 50, scope: !10411)
!10431 = !DILocation(line: 265, column: 42, scope: !10411)
!10432 = !DILocation(line: 265, column: 40, scope: !10411)
!10433 = !DILocalVariable(name: "z2", scope: !10411, file: !21, line: 266, type: !106)
!10434 = !DILocation(line: 266, column: 24, scope: !10411)
!10435 = !DILocation(line: 266, column: 37, scope: !10411)
!10436 = !DILocation(line: 266, column: 36, scope: !10411)
!10437 = !DILocation(line: 266, column: 28, scope: !10411)
!10438 = !DILocation(line: 266, column: 51, scope: !10411)
!10439 = !DILocation(line: 266, column: 50, scope: !10411)
!10440 = !DILocation(line: 266, column: 42, scope: !10411)
!10441 = !DILocation(line: 266, column: 40, scope: !10411)
!10442 = !DILocalVariable(name: "z3", scope: !10411, file: !21, line: 267, type: !106)
!10443 = !DILocation(line: 267, column: 24, scope: !10411)
!10444 = !DILocation(line: 267, column: 37, scope: !10411)
!10445 = !DILocation(line: 267, column: 36, scope: !10411)
!10446 = !DILocation(line: 267, column: 28, scope: !10411)
!10447 = !DILocation(line: 267, column: 51, scope: !10411)
!10448 = !DILocation(line: 267, column: 50, scope: !10411)
!10449 = !DILocation(line: 267, column: 42, scope: !10411)
!10450 = !DILocation(line: 267, column: 40, scope: !10411)
!10451 = !DILocation(line: 269, column: 38, scope: !10411)
!10452 = !DILocation(line: 269, column: 43, scope: !10411)
!10453 = !DILocation(line: 269, column: 41, scope: !10411)
!10454 = !DILocation(line: 269, column: 47, scope: !10411)
!10455 = !DILocation(line: 269, column: 46, scope: !10411)
!10456 = !DILocation(line: 269, column: 52, scope: !10411)
!10457 = !DILocation(line: 269, column: 60, scope: !10411)
!10458 = !DILocation(line: 269, column: 22, scope: !10411)
!10459 = !DILocation(line: 269, column: 21, scope: !10411)
!10460 = !DILocation(line: 269, column: 9, scope: !10411)
!10461 = !DILocation(line: 269, column: 29, scope: !10411)
!10462 = !DILocation(line: 270, column: 38, scope: !10411)
!10463 = !DILocation(line: 270, column: 43, scope: !10411)
!10464 = !DILocation(line: 270, column: 41, scope: !10411)
!10465 = !DILocation(line: 270, column: 47, scope: !10411)
!10466 = !DILocation(line: 270, column: 46, scope: !10411)
!10467 = !DILocation(line: 270, column: 52, scope: !10411)
!10468 = !DILocation(line: 270, column: 60, scope: !10411)
!10469 = !DILocation(line: 270, column: 22, scope: !10411)
!10470 = !DILocation(line: 270, column: 21, scope: !10411)
!10471 = !DILocation(line: 270, column: 9, scope: !10411)
!10472 = !DILocation(line: 270, column: 29, scope: !10411)
!10473 = !DILocation(line: 271, column: 38, scope: !10411)
!10474 = !DILocation(line: 271, column: 43, scope: !10411)
!10475 = !DILocation(line: 271, column: 41, scope: !10411)
!10476 = !DILocation(line: 271, column: 47, scope: !10411)
!10477 = !DILocation(line: 271, column: 46, scope: !10411)
!10478 = !DILocation(line: 271, column: 52, scope: !10411)
!10479 = !DILocation(line: 271, column: 60, scope: !10411)
!10480 = !DILocation(line: 271, column: 22, scope: !10411)
!10481 = !DILocation(line: 271, column: 21, scope: !10411)
!10482 = !DILocation(line: 271, column: 9, scope: !10411)
!10483 = !DILocation(line: 271, column: 29, scope: !10411)
!10484 = !DILocation(line: 272, column: 38, scope: !10411)
!10485 = !DILocation(line: 272, column: 43, scope: !10411)
!10486 = !DILocation(line: 272, column: 41, scope: !10411)
!10487 = !DILocation(line: 272, column: 47, scope: !10411)
!10488 = !DILocation(line: 272, column: 46, scope: !10411)
!10489 = !DILocation(line: 272, column: 52, scope: !10411)
!10490 = !DILocation(line: 272, column: 60, scope: !10411)
!10491 = !DILocation(line: 272, column: 22, scope: !10411)
!10492 = !DILocation(line: 272, column: 21, scope: !10411)
!10493 = !DILocation(line: 272, column: 9, scope: !10411)
!10494 = !DILocation(line: 272, column: 29, scope: !10411)
!10495 = !DILocation(line: 273, column: 5, scope: !10411)
!10496 = !DILocation(line: 262, column: 20, scope: !10497)
!10497 = !DILexicalBlockFile(scope: !10407, file: !21, discriminator: 2)
!10498 = !DILocation(line: 262, column: 5, scope: !10497)
!10499 = distinct !{!10499, !10500}
!10500 = !DILocation(line: 262, column: 5, scope: !48)
!10501 = !DILocation(line: 275, column: 1, scope: !48)
!10502 = !DILocalVariable(name: "_block", arg: 1, scope: !50, file: !21, line: 277, type: !8)
!10503 = !DILocation(line: 277, column: 54, scope: !50)
!10504 = !DILocalVariable(name: "qmul", arg: 2, scope: !50, file: !21, line: 277, type: !12)
!10505 = !DILocation(line: 277, column: 66, scope: !50)
!10506 = !DILocalVariable(name: "stride", scope: !50, file: !21, line: 278, type: !468)
!10507 = !DILocation(line: 278, column: 15, scope: !50)
!10508 = !DILocalVariable(name: "xStride", scope: !50, file: !21, line: 279, type: !468)
!10509 = !DILocation(line: 279, column: 15, scope: !50)
!10510 = !DILocalVariable(name: "i", scope: !50, file: !21, line: 280, type: !12)
!10511 = !DILocation(line: 280, column: 9, scope: !50)
!10512 = !DILocalVariable(name: "temp", scope: !50, file: !21, line: 281, type: !1905)
!10513 = !DILocation(line: 281, column: 9, scope: !50)
!10514 = !DILocalVariable(name: "block", scope: !50, file: !21, line: 283, type: !16)
!10515 = !DILocation(line: 283, column: 14, scope: !50)
!10516 = !DILocation(line: 283, column: 32, scope: !50)
!10517 = !DILocation(line: 283, column: 22, scope: !50)
!10518 = !DILocation(line: 285, column: 10, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !50, file: !21, line: 285, column: 5)
!10520 = !DILocation(line: 285, column: 9, scope: !10519)
!10521 = !DILocation(line: 285, column: 14, scope: !10522)
!10522 = !DILexicalBlockFile(scope: !10523, file: !21, discriminator: 1)
!10523 = distinct !DILexicalBlock(scope: !10519, file: !21, line: 285, column: 5)
!10524 = !DILocation(line: 285, column: 15, scope: !10522)
!10525 = !DILocation(line: 285, column: 5, scope: !10522)
!10526 = !DILocation(line: 286, column: 36, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10523, file: !21, line: 285, column: 23)
!10528 = !DILocation(line: 286, column: 35, scope: !10527)
!10529 = !DILocation(line: 286, column: 38, scope: !10527)
!10530 = !DILocation(line: 286, column: 23, scope: !10527)
!10531 = !DILocation(line: 286, column: 66, scope: !10527)
!10532 = !DILocation(line: 286, column: 65, scope: !10527)
!10533 = !DILocation(line: 286, column: 68, scope: !10527)
!10534 = !DILocation(line: 286, column: 53, scope: !10527)
!10535 = !DILocation(line: 286, column: 51, scope: !10527)
!10536 = !DILocation(line: 286, column: 16, scope: !10527)
!10537 = !DILocation(line: 286, column: 15, scope: !10527)
!10538 = !DILocation(line: 286, column: 17, scope: !10527)
!10539 = !DILocation(line: 286, column: 9, scope: !10527)
!10540 = !DILocation(line: 286, column: 21, scope: !10527)
!10541 = !DILocation(line: 287, column: 36, scope: !10527)
!10542 = !DILocation(line: 287, column: 35, scope: !10527)
!10543 = !DILocation(line: 287, column: 38, scope: !10527)
!10544 = !DILocation(line: 287, column: 23, scope: !10527)
!10545 = !DILocation(line: 287, column: 66, scope: !10527)
!10546 = !DILocation(line: 287, column: 65, scope: !10527)
!10547 = !DILocation(line: 287, column: 68, scope: !10527)
!10548 = !DILocation(line: 287, column: 53, scope: !10527)
!10549 = !DILocation(line: 287, column: 51, scope: !10527)
!10550 = !DILocation(line: 287, column: 16, scope: !10527)
!10551 = !DILocation(line: 287, column: 15, scope: !10527)
!10552 = !DILocation(line: 287, column: 17, scope: !10527)
!10553 = !DILocation(line: 287, column: 9, scope: !10527)
!10554 = !DILocation(line: 287, column: 21, scope: !10527)
!10555 = !DILocation(line: 288, column: 5, scope: !10527)
!10556 = !DILocation(line: 285, column: 20, scope: !10557)
!10557 = !DILexicalBlockFile(scope: !10523, file: !21, discriminator: 2)
!10558 = !DILocation(line: 285, column: 5, scope: !10557)
!10559 = distinct !{!10559, !10560}
!10560 = !DILocation(line: 285, column: 5, scope: !50)
!10561 = !DILocation(line: 290, column: 10, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !50, file: !21, line: 290, column: 5)
!10563 = !DILocation(line: 290, column: 9, scope: !10562)
!10564 = !DILocation(line: 290, column: 14, scope: !10565)
!10565 = !DILexicalBlockFile(scope: !10566, file: !21, discriminator: 1)
!10566 = distinct !DILexicalBlock(scope: !10562, file: !21, line: 290, column: 5)
!10567 = !DILocation(line: 290, column: 15, scope: !10565)
!10568 = !DILocation(line: 290, column: 5, scope: !10565)
!10569 = !DILocalVariable(name: "offset", scope: !10570, file: !21, line: 291, type: !468)
!10570 = distinct !DILexicalBlock(scope: !10566, file: !21, line: 290, column: 23)
!10571 = !DILocation(line: 291, column: 19, scope: !10570)
!10572 = !DILocation(line: 291, column: 36, scope: !10570)
!10573 = !DILocation(line: 291, column: 27, scope: !10570)
!10574 = !DILocalVariable(name: "z0", scope: !10570, file: !21, line: 292, type: !106)
!10575 = !DILocation(line: 292, column: 24, scope: !10570)
!10576 = !DILocation(line: 292, column: 37, scope: !10570)
!10577 = !DILocation(line: 292, column: 36, scope: !10570)
!10578 = !DILocation(line: 292, column: 28, scope: !10570)
!10579 = !DILocation(line: 292, column: 51, scope: !10570)
!10580 = !DILocation(line: 292, column: 50, scope: !10570)
!10581 = !DILocation(line: 292, column: 42, scope: !10570)
!10582 = !DILocation(line: 292, column: 40, scope: !10570)
!10583 = !DILocalVariable(name: "z1", scope: !10570, file: !21, line: 293, type: !106)
!10584 = !DILocation(line: 293, column: 24, scope: !10570)
!10585 = !DILocation(line: 293, column: 37, scope: !10570)
!10586 = !DILocation(line: 293, column: 36, scope: !10570)
!10587 = !DILocation(line: 293, column: 28, scope: !10570)
!10588 = !DILocation(line: 293, column: 51, scope: !10570)
!10589 = !DILocation(line: 293, column: 50, scope: !10570)
!10590 = !DILocation(line: 293, column: 42, scope: !10570)
!10591 = !DILocation(line: 293, column: 40, scope: !10570)
!10592 = !DILocalVariable(name: "z2", scope: !10570, file: !21, line: 294, type: !106)
!10593 = !DILocation(line: 294, column: 24, scope: !10570)
!10594 = !DILocation(line: 294, column: 37, scope: !10570)
!10595 = !DILocation(line: 294, column: 36, scope: !10570)
!10596 = !DILocation(line: 294, column: 28, scope: !10570)
!10597 = !DILocation(line: 294, column: 51, scope: !10570)
!10598 = !DILocation(line: 294, column: 50, scope: !10570)
!10599 = !DILocation(line: 294, column: 42, scope: !10570)
!10600 = !DILocation(line: 294, column: 40, scope: !10570)
!10601 = !DILocalVariable(name: "z3", scope: !10570, file: !21, line: 295, type: !106)
!10602 = !DILocation(line: 295, column: 24, scope: !10570)
!10603 = !DILocation(line: 295, column: 37, scope: !10570)
!10604 = !DILocation(line: 295, column: 36, scope: !10570)
!10605 = !DILocation(line: 295, column: 28, scope: !10570)
!10606 = !DILocation(line: 295, column: 51, scope: !10570)
!10607 = !DILocation(line: 295, column: 50, scope: !10570)
!10608 = !DILocation(line: 295, column: 42, scope: !10570)
!10609 = !DILocation(line: 295, column: 40, scope: !10570)
!10610 = !DILocation(line: 297, column: 40, scope: !10570)
!10611 = !DILocation(line: 297, column: 45, scope: !10570)
!10612 = !DILocation(line: 297, column: 43, scope: !10570)
!10613 = !DILocation(line: 297, column: 49, scope: !10570)
!10614 = !DILocation(line: 297, column: 48, scope: !10570)
!10615 = !DILocation(line: 297, column: 54, scope: !10570)
!10616 = !DILocation(line: 297, column: 61, scope: !10570)
!10617 = !DILocation(line: 297, column: 24, scope: !10570)
!10618 = !DILocation(line: 297, column: 23, scope: !10570)
!10619 = !DILocation(line: 297, column: 9, scope: !10570)
!10620 = !DILocation(line: 297, column: 31, scope: !10570)
!10621 = !DILocation(line: 298, column: 40, scope: !10570)
!10622 = !DILocation(line: 298, column: 45, scope: !10570)
!10623 = !DILocation(line: 298, column: 43, scope: !10570)
!10624 = !DILocation(line: 298, column: 49, scope: !10570)
!10625 = !DILocation(line: 298, column: 48, scope: !10570)
!10626 = !DILocation(line: 298, column: 54, scope: !10570)
!10627 = !DILocation(line: 298, column: 61, scope: !10570)
!10628 = !DILocation(line: 298, column: 24, scope: !10570)
!10629 = !DILocation(line: 298, column: 23, scope: !10570)
!10630 = !DILocation(line: 298, column: 9, scope: !10570)
!10631 = !DILocation(line: 298, column: 31, scope: !10570)
!10632 = !DILocation(line: 299, column: 40, scope: !10570)
!10633 = !DILocation(line: 299, column: 45, scope: !10570)
!10634 = !DILocation(line: 299, column: 43, scope: !10570)
!10635 = !DILocation(line: 299, column: 49, scope: !10570)
!10636 = !DILocation(line: 299, column: 48, scope: !10570)
!10637 = !DILocation(line: 299, column: 54, scope: !10570)
!10638 = !DILocation(line: 299, column: 61, scope: !10570)
!10639 = !DILocation(line: 299, column: 24, scope: !10570)
!10640 = !DILocation(line: 299, column: 23, scope: !10570)
!10641 = !DILocation(line: 299, column: 9, scope: !10570)
!10642 = !DILocation(line: 299, column: 31, scope: !10570)
!10643 = !DILocation(line: 300, column: 40, scope: !10570)
!10644 = !DILocation(line: 300, column: 45, scope: !10570)
!10645 = !DILocation(line: 300, column: 43, scope: !10570)
!10646 = !DILocation(line: 300, column: 49, scope: !10570)
!10647 = !DILocation(line: 300, column: 48, scope: !10570)
!10648 = !DILocation(line: 300, column: 54, scope: !10570)
!10649 = !DILocation(line: 300, column: 61, scope: !10570)
!10650 = !DILocation(line: 300, column: 24, scope: !10570)
!10651 = !DILocation(line: 300, column: 23, scope: !10570)
!10652 = !DILocation(line: 300, column: 9, scope: !10570)
!10653 = !DILocation(line: 300, column: 31, scope: !10570)
!10654 = !DILocation(line: 301, column: 5, scope: !10570)
!10655 = !DILocation(line: 290, column: 20, scope: !10656)
!10656 = !DILexicalBlockFile(scope: !10566, file: !21, discriminator: 2)
!10657 = !DILocation(line: 290, column: 5, scope: !10656)
!10658 = distinct !{!10658, !10659}
!10659 = !DILocation(line: 290, column: 5, scope: !50)
!10660 = !DILocation(line: 302, column: 1, scope: !50)
!10661 = distinct !DISubprogram(name: "ff_h264_chroma_dc_dequant_idct_14_c", scope: !21, file: !21, line: 304, type: !30, isLocal: false, isDefinition: true, scopeLine: 304, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!10662 = !DILocalVariable(name: "_block", arg: 1, scope: !10661, file: !21, line: 304, type: !8)
!10663 = !DILocation(line: 304, column: 51, scope: !10661)
!10664 = !DILocalVariable(name: "qmul", arg: 2, scope: !10661, file: !21, line: 304, type: !12)
!10665 = !DILocation(line: 304, column: 63, scope: !10661)
!10666 = !DILocalVariable(name: "stride", scope: !10661, file: !21, line: 305, type: !468)
!10667 = !DILocation(line: 305, column: 15, scope: !10661)
!10668 = !DILocalVariable(name: "xStride", scope: !10661, file: !21, line: 306, type: !468)
!10669 = !DILocation(line: 306, column: 15, scope: !10661)
!10670 = !DILocalVariable(name: "a", scope: !10661, file: !21, line: 307, type: !11)
!10671 = !DILocation(line: 307, column: 14, scope: !10661)
!10672 = !DILocalVariable(name: "b", scope: !10661, file: !21, line: 307, type: !11)
!10673 = !DILocation(line: 307, column: 16, scope: !10661)
!10674 = !DILocalVariable(name: "c", scope: !10661, file: !21, line: 307, type: !11)
!10675 = !DILocation(line: 307, column: 18, scope: !10661)
!10676 = !DILocalVariable(name: "d", scope: !10661, file: !21, line: 307, type: !11)
!10677 = !DILocation(line: 307, column: 20, scope: !10661)
!10678 = !DILocalVariable(name: "e", scope: !10661, file: !21, line: 307, type: !11)
!10679 = !DILocation(line: 307, column: 22, scope: !10661)
!10680 = !DILocalVariable(name: "block", scope: !10661, file: !21, line: 308, type: !16)
!10681 = !DILocation(line: 308, column: 14, scope: !10661)
!10682 = !DILocation(line: 308, column: 32, scope: !10661)
!10683 = !DILocation(line: 308, column: 22, scope: !10661)
!10684 = !DILocation(line: 310, column: 8, scope: !10661)
!10685 = !DILocation(line: 310, column: 6, scope: !10661)
!10686 = !DILocation(line: 311, column: 8, scope: !10661)
!10687 = !DILocation(line: 311, column: 6, scope: !10661)
!10688 = !DILocation(line: 312, column: 8, scope: !10661)
!10689 = !DILocation(line: 312, column: 6, scope: !10661)
!10690 = !DILocation(line: 313, column: 8, scope: !10661)
!10691 = !DILocation(line: 313, column: 6, scope: !10661)
!10692 = !DILocation(line: 315, column: 8, scope: !10661)
!10693 = !DILocation(line: 315, column: 10, scope: !10661)
!10694 = !DILocation(line: 315, column: 9, scope: !10661)
!10695 = !DILocation(line: 315, column: 6, scope: !10661)
!10696 = !DILocation(line: 316, column: 8, scope: !10661)
!10697 = !DILocation(line: 316, column: 10, scope: !10661)
!10698 = !DILocation(line: 316, column: 9, scope: !10661)
!10699 = !DILocation(line: 316, column: 6, scope: !10661)
!10700 = !DILocation(line: 317, column: 8, scope: !10661)
!10701 = !DILocation(line: 317, column: 10, scope: !10661)
!10702 = !DILocation(line: 317, column: 9, scope: !10661)
!10703 = !DILocation(line: 317, column: 6, scope: !10661)
!10704 = !DILocation(line: 318, column: 8, scope: !10661)
!10705 = !DILocation(line: 318, column: 10, scope: !10661)
!10706 = !DILocation(line: 318, column: 9, scope: !10661)
!10707 = !DILocation(line: 318, column: 6, scope: !10661)
!10708 = !DILocation(line: 320, column: 41, scope: !10661)
!10709 = !DILocation(line: 320, column: 43, scope: !10661)
!10710 = !DILocation(line: 320, column: 42, scope: !10661)
!10711 = !DILocation(line: 320, column: 46, scope: !10661)
!10712 = !DILocation(line: 320, column: 45, scope: !10661)
!10713 = !DILocation(line: 320, column: 52, scope: !10661)
!10714 = !DILocation(line: 320, column: 5, scope: !10661)
!10715 = !DILocation(line: 320, column: 32, scope: !10661)
!10716 = !DILocation(line: 321, column: 41, scope: !10661)
!10717 = !DILocation(line: 321, column: 43, scope: !10661)
!10718 = !DILocation(line: 321, column: 42, scope: !10661)
!10719 = !DILocation(line: 321, column: 46, scope: !10661)
!10720 = !DILocation(line: 321, column: 45, scope: !10661)
!10721 = !DILocation(line: 321, column: 52, scope: !10661)
!10722 = !DILocation(line: 321, column: 5, scope: !10661)
!10723 = !DILocation(line: 321, column: 32, scope: !10661)
!10724 = !DILocation(line: 322, column: 41, scope: !10661)
!10725 = !DILocation(line: 322, column: 43, scope: !10661)
!10726 = !DILocation(line: 322, column: 42, scope: !10661)
!10727 = !DILocation(line: 322, column: 46, scope: !10661)
!10728 = !DILocation(line: 322, column: 45, scope: !10661)
!10729 = !DILocation(line: 322, column: 52, scope: !10661)
!10730 = !DILocation(line: 322, column: 5, scope: !10661)
!10731 = !DILocation(line: 322, column: 32, scope: !10661)
!10732 = !DILocation(line: 323, column: 41, scope: !10661)
!10733 = !DILocation(line: 323, column: 43, scope: !10661)
!10734 = !DILocation(line: 323, column: 42, scope: !10661)
!10735 = !DILocation(line: 323, column: 46, scope: !10661)
!10736 = !DILocation(line: 323, column: 45, scope: !10661)
!10737 = !DILocation(line: 323, column: 52, scope: !10661)
!10738 = !DILocation(line: 323, column: 5, scope: !10661)
!10739 = !DILocation(line: 323, column: 32, scope: !10661)
!10740 = !DILocation(line: 324, column: 1, scope: !10661)
