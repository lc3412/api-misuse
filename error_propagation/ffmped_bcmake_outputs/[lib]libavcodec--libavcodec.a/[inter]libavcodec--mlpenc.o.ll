; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--mlpenc.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--mlpenc.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.ChannelInformation = type { i8, i8, i8, i8 }
%struct.ChannelParams = type { [2 x %struct.FilterParams], [2 x [8 x i32]], i16, i32, i8, i8 }
%struct.FilterParams = type { i8, i8, [8 x i32], i32, i32 }
%struct.DecodingParams = type { i16, [8 x i8], %struct.MatrixParams, i8 }
%struct.MatrixParams = type { i8, [8 x i8], [8 x [10 x i32]], [8 x [10 x i32]], [8 x i8], [8 x i8] }
%struct.BestOffset = type { i16, i32, i32, i16, i16 }
%struct.MLPEncodeContext = type { %struct.AVCodecContext*, i32, i32, [2 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32, i32, i32, i32, i32*, i32*, i32*, i32, i32, i32, i32, i32, i16, i16, i8, i8, i8, i8, [16 x i32], [16 x i32], i32, %struct.ChannelParams*, [17 x [8 x [4 x %struct.BestOffset]]], %struct.DecodingParams*, [4 x %struct.RestartHeader], [17 x [8 x %struct.ChannelParams]], [17 x [4 x %struct.DecodingParams]], [17 x [4 x i32]], i32, i32, i32, [4 x %struct.BestOffset]*, %struct.ChannelParams*, %struct.DecodingParams*, %struct.RestartHeader*, %struct.AudioFrameQueue, i32, i32, i32, i32, i32, %struct.ChannelParams*, %struct.DecodingParams*, %struct.ChannelParams*, %struct.DecodingParams*, i32, [20 x i8], %struct.LPCContext }
%struct.RestartHeader = type { i8, i8, i8, i8, i32, i32, i32, i8, i8 }
%struct.AudioFrameQueue = type { %struct.AVCodecContext*, i32, i32, %struct.AudioFrame*, i32, i32 }
%struct.AudioFrame = type { i64, i32 }
%struct.LPCContext = type { i32, i32, i32, double*, double*, void (i32*, i32, double*)*, void (double*, i32, i32, double*)*, [16 x i8], [2 x %struct.LLSModel] }
%struct.LLSModel = type { [36 x [36 x double]], [32 x [32 x double]], [32 x double], i32, void (%struct.LLSModel*, double*)*, double (%struct.LLSModel*, double*, i32)*, [8 x i8] }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%union.unaligned_16 = type { i16 }
%union.unaligned_32 = type { i32 }
%struct.PathCounter = type { [19 x i8], i32 }

@.str = private unnamed_addr constant [4 x i8] c"mlp\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"MLP (Meridian Lossless Packing)\00", align 1
@.compoundliteral = internal constant [7 x i32] [i32 44100, i32 48000, i32 88200, i32 96000, i32 176400, i32 192000, i32 0], align 4
@.compoundliteral.2 = internal constant [2 x i32] [i32 1, i32 -1], align 4
@ff_mlp_channel_layouts = external constant [12 x i64], align 16
@ff_mlp_encoder = global %struct.AVCodec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86045, i32 608, %struct.AVRational* null, i32* null, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.compoundliteral, i32 0, i32 0), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral.2, i32 0, i32 0), i64* getelementptr inbounds ([12 x i64], [12 x i64]* @ff_mlp_channel_layouts, i32 0, i32 0), i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 116128, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @mlp_encode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* @mlp_encode_frame, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*)* @mlp_encode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.3 = private unnamed_addr constant [7 x i8] c"truehd\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"TrueHD\00", align 1
@.compoundliteral.5 = internal constant [7 x i32] [i32 44100, i32 48000, i32 88200, i32 96000, i32 176400, i32 192000, i32 0], align 4
@.compoundliteral.6 = internal constant [2 x i32] [i32 1, i32 -1], align 4
@.compoundliteral.7 = internal constant [4 x i64] [i64 3, i64 55, i64 63, i64 0], align 8
@ff_truehd_encoder = global %struct.AVCodec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i32 1, i32 86060, i32 608, %struct.AVRational* null, i32* null, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.compoundliteral.5, i32 0, i32 0), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral.6, i32 0, i32 0), i64* getelementptr inbounds ([4 x i64], [4 x i64]* @.compoundliteral.7, i32 0, i32 0), i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 116128, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @mlp_encode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* @mlp_encode_frame, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*)* @mlp_encode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.8 = private unnamed_addr constant [104 x i8] c"Unsupported sample rate %d. Supported sample rates are 44100, 88200, 176400, 48000, 96000, and 192000.\0A\00", align 1
@.str.9 = private unnamed_addr constant [51 x i8] c"Only mono and stereo are supported at the moment.\0A\00", align 1
@.str.10 = private unnamed_addr constant [73 x i8] c"Sample format not supported. Only 16- and 24-bit samples are supported.\0A\00", align 1
@.str.11 = private unnamed_addr constant [42 x i8] c"Not enough memory for buffering samples.\0A\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"Unsupported channel arrangement\0A\00", align 1
@ff_mlp_ch_info = external constant [21 x %struct.ChannelInformation], align 16
@.str.13 = private unnamed_addr constant [41 x i8] c"Not enough memory for analysis context.\0A\00", align 1
@restart_channel_params = internal global [8 x %struct.ChannelParams] zeroinitializer, align 16
@restart_decoding_params = internal global [4 x %struct.DecodingParams] zeroinitializer, align 16
@.str.14 = private unnamed_addr constant [36 x i8] c"Not enough memory for LPC context.\0A\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"Invalid frame size (%d > %d)\0A\00", align 1
@.str.16 = private unnamed_addr constant [41 x i8] c"Not enough memory for applying filters.\0A\00", align 1
@.str.17 = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@.str.18 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"s->buf_ptr < s->buf_end\00", align 1
@.str.20 = private unnamed_addr constant [22 x i8] c"libavcodec/put_bits.h\00", align 1
@ff_mlp_huffman_tables = external constant [3 x [18 x [2 x i8]]], align 16
@determine_bits.temp_bo = private unnamed_addr constant %struct.BestOffset { i16 0, i32 2147483647, i32 0, i16 0, i16 0 }, align 4
@codebook_extremes = internal constant [3 x [2 x i32]] [[2 x i32] [i32 -9, i32 8], [2 x i32] [i32 -8, i32 7], [2 x i32] [i32 -15, i32 14]], align 16
@restart_best_offset = internal global [4 x %struct.BestOffset] zeroinitializer, align 16
@path_counter_codebook = internal global [4 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0)], align 16
@.str.21 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"3\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @mlp_encode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1743 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ctx = alloca %struct.MLPEncodeContext*, align 8
  %substr = alloca i32, align 4
  %index = alloca i32, align 4
  %sum = alloca i32, align 4
  %size = alloca i32, align 4
  %ret = alloca i32, align 4
  %rh = alloca %struct.RestartHeader*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1745, metadata !1746), !dbg !1747
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx, metadata !1748, metadata !1746), !dbg !1911
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1912
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1913
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1913
  %2 = bitcast i8* %1 to %struct.MLPEncodeContext*, !dbg !1912
  store %struct.MLPEncodeContext* %2, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1911
  call void @llvm.dbg.declare(metadata i32* %substr, metadata !1914, metadata !1746), !dbg !1915
  call void @llvm.dbg.declare(metadata i32* %index, metadata !1916, metadata !1746), !dbg !1917
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !1918, metadata !1746), !dbg !1919
  store i32 0, i32* %sum, align 4, !dbg !1919
  call void @llvm.dbg.declare(metadata i32* %size, metadata !1920, metadata !1746), !dbg !1921
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1922, metadata !1746), !dbg !1923
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1924
  %4 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1925
  %avctx1 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %4, i32 0, i32 0, !dbg !1926
  store %struct.AVCodecContext* %3, %struct.AVCodecContext** %avctx1, align 32, !dbg !1927
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1928
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 82, !dbg !1929
  %6 = load i32, i32* %sample_rate, align 8, !dbg !1929
  switch i32 %6, label %sw.default [
    i32 44100, label %sw.bb
    i32 88200, label %sw.bb2
    i32 176400, label %sw.bb7
    i32 48000, label %sw.bb12
    i32 96000, label %sw.bb17
    i32 192000, label %sw.bb22
  ], !dbg !1930

sw.bb:                                            ; preds = %entry
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1931
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 85, !dbg !1933
  store i32 40, i32* %frame_size, align 4, !dbg !1934
  %8 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1935
  %coded_sample_rate = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %8, i32 0, i32 4, !dbg !1936
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_rate, i64 0, i64 0, !dbg !1935
  store i32 8, i32* %arrayidx, align 8, !dbg !1937
  %9 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1938
  %fs = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %9, i32 0, i32 8, !dbg !1939
  store i32 9, i32* %fs, align 4, !dbg !1940
  br label %sw.epilog, !dbg !1941

sw.bb2:                                           ; preds = %entry
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1942
  %frame_size3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 85, !dbg !1943
  store i32 80, i32* %frame_size3, align 4, !dbg !1944
  %11 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1945
  %coded_sample_rate4 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %11, i32 0, i32 4, !dbg !1946
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_rate4, i64 0, i64 0, !dbg !1945
  store i32 9, i32* %arrayidx5, align 8, !dbg !1947
  %12 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1948
  %fs6 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %12, i32 0, i32 8, !dbg !1949
  store i32 13, i32* %fs6, align 4, !dbg !1950
  br label %sw.epilog, !dbg !1951

sw.bb7:                                           ; preds = %entry
  %13 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1952
  %substream_info = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %13, i32 0, i32 7, !dbg !1953
  %14 = load i32, i32* %substream_info, align 8, !dbg !1954
  %or = or i32 %14, 2, !dbg !1954
  store i32 %or, i32* %substream_info, align 8, !dbg !1954
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1955
  %frame_size8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 85, !dbg !1956
  store i32 160, i32* %frame_size8, align 4, !dbg !1957
  %16 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1958
  %coded_sample_rate9 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %16, i32 0, i32 4, !dbg !1959
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_rate9, i64 0, i64 0, !dbg !1958
  store i32 10, i32* %arrayidx10, align 8, !dbg !1960
  %17 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1961
  %fs11 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %17, i32 0, i32 8, !dbg !1962
  store i32 17, i32* %fs11, align 4, !dbg !1963
  br label %sw.epilog, !dbg !1964

sw.bb12:                                          ; preds = %entry
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1965
  %frame_size13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 85, !dbg !1966
  store i32 40, i32* %frame_size13, align 4, !dbg !1967
  %19 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1968
  %coded_sample_rate14 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %19, i32 0, i32 4, !dbg !1969
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_rate14, i64 0, i64 0, !dbg !1968
  store i32 0, i32* %arrayidx15, align 8, !dbg !1970
  %20 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1971
  %fs16 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %20, i32 0, i32 8, !dbg !1972
  store i32 10, i32* %fs16, align 4, !dbg !1973
  br label %sw.epilog, !dbg !1974

sw.bb17:                                          ; preds = %entry
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1975
  %frame_size18 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 85, !dbg !1976
  store i32 80, i32* %frame_size18, align 4, !dbg !1977
  %22 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1978
  %coded_sample_rate19 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %22, i32 0, i32 4, !dbg !1979
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_rate19, i64 0, i64 0, !dbg !1978
  store i32 1, i32* %arrayidx20, align 8, !dbg !1980
  %23 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1981
  %fs21 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %23, i32 0, i32 8, !dbg !1982
  store i32 14, i32* %fs21, align 4, !dbg !1983
  br label %sw.epilog, !dbg !1984

sw.bb22:                                          ; preds = %entry
  %24 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1985
  %substream_info23 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %24, i32 0, i32 7, !dbg !1986
  %25 = load i32, i32* %substream_info23, align 8, !dbg !1987
  %or24 = or i32 %25, 2, !dbg !1987
  store i32 %or24, i32* %substream_info23, align 8, !dbg !1987
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1988
  %frame_size25 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 85, !dbg !1989
  store i32 160, i32* %frame_size25, align 4, !dbg !1990
  %27 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1991
  %coded_sample_rate26 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %27, i32 0, i32 4, !dbg !1992
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_rate26, i64 0, i64 0, !dbg !1991
  store i32 2, i32* %arrayidx27, align 8, !dbg !1993
  %28 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !1994
  %fs28 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %28, i32 0, i32 8, !dbg !1995
  store i32 18, i32* %fs28, align 4, !dbg !1996
  br label %sw.epilog, !dbg !1997

sw.default:                                       ; preds = %entry
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1998
  %30 = bitcast %struct.AVCodecContext* %29 to i8*, !dbg !1998
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1999
  %sample_rate29 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 82, !dbg !2000
  %32 = load i32, i32* %sample_rate29, align 8, !dbg !2000
  call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 16, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.8, i32 0, i32 0), i32 %32), !dbg !2001
  store i32 -1, i32* %retval, align 4, !dbg !2002
  br label %return, !dbg !2002

sw.epilog:                                        ; preds = %sw.bb22, %sw.bb17, %sw.bb12, %sw.bb7, %sw.bb2, %sw.bb
  %33 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2003
  %coded_sample_rate30 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %33, i32 0, i32 4, !dbg !2004
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_rate30, i64 0, i64 1, !dbg !2003
  store i32 15, i32* %arrayidx31, align 4, !dbg !2005
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2006
  %sample_rate32 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 82, !dbg !2007
  %35 = load i32, i32* %sample_rate32, align 8, !dbg !2007
  %call = call i32 @mlp_peak_bitrate(i32 9600000, i32 %35), !dbg !2008
  %36 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2009
  %coded_peak_bitrate = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %36, i32 0, i32 5, !dbg !2010
  store i32 %call, i32* %coded_peak_bitrate, align 32, !dbg !2011
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2012
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i32 0, i32 83, !dbg !2014
  %38 = load i32, i32* %channels, align 4, !dbg !2014
  %cmp = icmp sgt i32 %38, 2, !dbg !2015
  br i1 %cmp, label %if.then, label %if.end, !dbg !2016

if.then:                                          ; preds = %sw.epilog
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2017
  %40 = bitcast %struct.AVCodecContext* %39 to i8*, !dbg !2017
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 24, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.9, i32 0, i32 0)), !dbg !2019
  br label %if.end, !dbg !2020

if.end:                                           ; preds = %if.then, %sw.epilog
  %41 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2021
  %substream_info33 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %41, i32 0, i32 7, !dbg !2022
  %42 = load i32, i32* %substream_info33, align 8, !dbg !2023
  %or34 = or i32 %42, 4, !dbg !2023
  store i32 %or34, i32* %substream_info33, align 8, !dbg !2023
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2024
  %channels35 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %43, i32 0, i32 83, !dbg !2026
  %44 = load i32, i32* %channels35, align 4, !dbg !2026
  %cmp36 = icmp sle i32 %44, 2, !dbg !2027
  br i1 %cmp36, label %if.then37, label %if.end40, !dbg !2028

if.then37:                                        ; preds = %if.end
  %45 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2029
  %substream_info38 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %45, i32 0, i32 7, !dbg !2031
  %46 = load i32, i32* %substream_info38, align 8, !dbg !2032
  %or39 = or i32 %46, 1, !dbg !2032
  store i32 %or39, i32* %substream_info38, align 8, !dbg !2032
  br label %if.end40, !dbg !2033

if.end40:                                         ; preds = %if.then37, %if.end
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2034
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %47, i32 0, i32 84, !dbg !2035
  %48 = load i32, i32* %sample_fmt, align 8, !dbg !2035
  switch i32 %48, label %sw.default48 [
    i32 1, label %sw.bb41
    i32 2, label %sw.bb43
  ], !dbg !2036

sw.bb41:                                          ; preds = %if.end40
  %49 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2037
  %coded_sample_fmt = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %49, i32 0, i32 3, !dbg !2039
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_fmt, i64 0, i64 0, !dbg !2037
  store i32 0, i32* %arrayidx42, align 16, !dbg !2040
  %50 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2041
  %wordlength = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %50, i32 0, i32 9, !dbg !2042
  store i32 16, i32* %wordlength, align 16, !dbg !2043
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2044
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %51, i32 0, i32 143, !dbg !2045
  store i32 16, i32* %bits_per_raw_sample, align 4, !dbg !2046
  br label %sw.epilog49, !dbg !2047

sw.bb43:                                          ; preds = %if.end40
  %52 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2048
  %coded_sample_fmt44 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %52, i32 0, i32 3, !dbg !2049
  %arrayidx45 = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_fmt44, i64 0, i64 0, !dbg !2048
  store i32 2, i32* %arrayidx45, align 16, !dbg !2050
  %53 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2051
  %wordlength46 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %53, i32 0, i32 9, !dbg !2052
  store i32 24, i32* %wordlength46, align 16, !dbg !2053
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2054
  %bits_per_raw_sample47 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %54, i32 0, i32 143, !dbg !2055
  store i32 24, i32* %bits_per_raw_sample47, align 4, !dbg !2056
  br label %sw.epilog49, !dbg !2057

sw.default48:                                     ; preds = %if.end40
  %55 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2058
  %56 = bitcast %struct.AVCodecContext* %55 to i8*, !dbg !2058
  call void (i8*, i32, i8*, ...) @av_log(i8* %56, i32 16, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.10, i32 0, i32 0)), !dbg !2059
  store i32 -1, i32* %retval, align 4, !dbg !2060
  br label %return, !dbg !2060

sw.epilog49:                                      ; preds = %sw.bb43, %sw.bb41
  %57 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2061
  %coded_sample_fmt50 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %57, i32 0, i32 3, !dbg !2062
  %arrayidx51 = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_fmt50, i64 0, i64 1, !dbg !2061
  store i32 15, i32* %arrayidx51, align 4, !dbg !2063
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2064
  %frame_size52 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %58, i32 0, i32 85, !dbg !2065
  %59 = load i32, i32* %frame_size52, align 4, !dbg !2065
  %sub = sub nsw i32 0, %59, !dbg !2066
  %conv = trunc i32 %sub to i16, !dbg !2066
  %60 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2067
  %dts = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %60, i32 0, i32 32, !dbg !2068
  store i16 %conv, i16* %dts, align 2, !dbg !2069
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2070
  %channels53 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %61, i32 0, i32 83, !dbg !2071
  %62 = load i32, i32* %channels53, align 4, !dbg !2071
  %add = add nsw i32 %62, 2, !dbg !2072
  %63 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2073
  %num_channels = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %63, i32 0, i32 2, !dbg !2074
  store i32 %add, i32* %num_channels, align 4, !dbg !2075
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2076
  %frame_size54 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %64, i32 0, i32 85, !dbg !2077
  %65 = load i32, i32* %frame_size54, align 4, !dbg !2077
  %66 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2078
  %num_channels55 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %66, i32 0, i32 2, !dbg !2079
  %67 = load i32, i32* %num_channels55, align 4, !dbg !2079
  %mul = mul nsw i32 %65, %67, !dbg !2080
  %68 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2081
  %one_sample_buffer_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %68, i32 0, i32 27, !dbg !2082
  store i32 %mul, i32* %one_sample_buffer_size, align 4, !dbg !2083
  %69 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2084
  %max_restart_interval = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %69, i32 0, i32 28, !dbg !2085
  store i32 16, i32* %max_restart_interval, align 8, !dbg !2086
  %70 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2087
  %max_codebook_search = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %70, i32 0, i32 64, !dbg !2088
  store i32 3, i32* %max_codebook_search, align 8, !dbg !2089
  %71 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2090
  %min_restart_interval = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %71, i32 0, i32 29, !dbg !2091
  store i32 16, i32* %min_restart_interval, align 4, !dbg !2092
  %72 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2093
  %max_restart_interval56 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %72, i32 0, i32 28, !dbg !2094
  %73 = load i32, i32* %max_restart_interval56, align 8, !dbg !2094
  %74 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2095
  %min_restart_interval57 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %74, i32 0, i32 29, !dbg !2096
  %75 = load i32, i32* %min_restart_interval57, align 4, !dbg !2096
  %div = udiv i32 %73, %75, !dbg !2097
  %76 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2098
  %restart_intervals = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %76, i32 0, i32 30, !dbg !2099
  store i32 %div, i32* %restart_intervals, align 16, !dbg !2100
  %77 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2101
  %frame_size58 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %77, i32 0, i32 85, !dbg !2102
  %78 = load i32, i32* %frame_size58, align 4, !dbg !2102
  %79 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2103
  %max_restart_interval59 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %79, i32 0, i32 28, !dbg !2104
  %80 = load i32, i32* %max_restart_interval59, align 8, !dbg !2104
  %mul60 = mul i32 %78, %80, !dbg !2105
  store i32 %mul60, i32* %size, align 4, !dbg !2106
  %81 = load i32, i32* %size, align 4, !dbg !2107
  %conv61 = zext i32 %81 to i64, !dbg !2107
  %call62 = call i8* @av_malloc_array(i64 %conv61, i64 4), !dbg !2108
  %82 = bitcast i8* %call62 to i32*, !dbg !2108
  %83 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2109
  %lpc_sample_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %83, i32 0, i32 18, !dbg !2110
  store i32* %82, i32** %lpc_sample_buffer, align 16, !dbg !2111
  %84 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2112
  %lpc_sample_buffer63 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %84, i32 0, i32 18, !dbg !2114
  %85 = load i32*, i32** %lpc_sample_buffer63, align 16, !dbg !2114
  %tobool = icmp ne i32* %85, null, !dbg !2112
  br i1 %tobool, label %if.end65, label %if.then64, !dbg !2115

if.then64:                                        ; preds = %sw.epilog49
  %86 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2116
  %87 = bitcast %struct.AVCodecContext* %86 to i8*, !dbg !2116
  call void (i8*, i32, i8*, ...) @av_log(i8* %87, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i32 0, i32 0)), !dbg !2118
  store i32 -12, i32* %retval, align 4, !dbg !2119
  br label %return, !dbg !2119

if.end65:                                         ; preds = %sw.epilog49
  %88 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2120
  %one_sample_buffer_size66 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %88, i32 0, i32 27, !dbg !2121
  %89 = load i32, i32* %one_sample_buffer_size66, align 4, !dbg !2121
  %90 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2122
  %max_restart_interval67 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %90, i32 0, i32 28, !dbg !2123
  %91 = load i32, i32* %max_restart_interval67, align 8, !dbg !2123
  %mul68 = mul i32 %89, %91, !dbg !2124
  store i32 %mul68, i32* %size, align 4, !dbg !2125
  %92 = load i32, i32* %size, align 4, !dbg !2126
  %conv69 = zext i32 %92 to i64, !dbg !2126
  %call70 = call i8* @av_malloc_array(i64 %conv69, i64 4), !dbg !2127
  %93 = bitcast i8* %call70 to i32*, !dbg !2127
  %94 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2128
  %major_scratch_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %94, i32 0, i32 16, !dbg !2129
  store i32* %93, i32** %major_scratch_buffer, align 32, !dbg !2130
  %95 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2131
  %major_scratch_buffer71 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %95, i32 0, i32 16, !dbg !2133
  %96 = load i32*, i32** %major_scratch_buffer71, align 32, !dbg !2133
  %tobool72 = icmp ne i32* %96, null, !dbg !2131
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !2134

if.then73:                                        ; preds = %if.end65
  %97 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2135
  %98 = bitcast %struct.AVCodecContext* %97 to i8*, !dbg !2135
  call void (i8*, i32, i8*, ...) @av_log(i8* %98, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i32 0, i32 0)), !dbg !2137
  store i32 -12, i32* %retval, align 4, !dbg !2138
  br label %return, !dbg !2138

if.end74:                                         ; preds = %if.end65
  %99 = load i32, i32* %size, align 4, !dbg !2139
  %conv75 = zext i32 %99 to i64, !dbg !2139
  %call76 = call i8* @av_malloc_array(i64 %conv75, i64 4), !dbg !2140
  %100 = bitcast i8* %call76 to i32*, !dbg !2140
  %101 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2141
  %major_inout_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %101, i32 0, i32 13, !dbg !2142
  store i32* %100, i32** %major_inout_buffer, align 8, !dbg !2143
  %102 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2144
  %major_inout_buffer77 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %102, i32 0, i32 13, !dbg !2146
  %103 = load i32*, i32** %major_inout_buffer77, align 8, !dbg !2146
  %tobool78 = icmp ne i32* %103, null, !dbg !2144
  br i1 %tobool78, label %if.end80, label %if.then79, !dbg !2147

if.then79:                                        ; preds = %if.end74
  %104 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2148
  %105 = bitcast %struct.AVCodecContext* %104 to i8*, !dbg !2148
  call void (i8*, i32, i8*, ...) @av_log(i8* %105, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i32 0, i32 0)), !dbg !2150
  store i32 -12, i32* %retval, align 4, !dbg !2151
  br label %return, !dbg !2151

if.end80:                                         ; preds = %if.end74
  call void @ff_mlp_init_crc(), !dbg !2152
  %106 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2153
  %num_substreams = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %106, i32 0, i32 1, !dbg !2154
  store i32 1, i32* %num_substreams, align 8, !dbg !2155
  %107 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2156
  %avctx81 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %107, i32 0, i32 0, !dbg !2158
  %108 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx81, align 32, !dbg !2158
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %108, i32 0, i32 4, !dbg !2159
  %109 = load i32, i32* %codec_id, align 8, !dbg !2159
  %cmp82 = icmp eq i32 %109, 86045, !dbg !2160
  br i1 %cmp82, label %if.then84, label %if.else, !dbg !2161

if.then84:                                        ; preds = %if.end80
  %110 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2162
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %110, i32 0, i32 89, !dbg !2164
  %111 = load i64, i64* %channel_layout, align 8, !dbg !2164
  switch i64 %111, label %sw.default106 [
    i64 4, label %sw.bb85
    i64 3, label %sw.bb86
    i64 259, label %sw.bb88
    i64 51, label %sw.bb90
    i64 11, label %sw.bb92
    i64 7, label %sw.bb94
    i64 263, label %sw.bb96
    i64 55, label %sw.bb98
    i64 15, label %sw.bb100
    i64 271, label %sw.bb102
    i64 63, label %sw.bb104
  ], !dbg !2165

sw.bb85:                                          ; preds = %if.then84
  %112 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2166
  %channel_arrangement = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %112, i32 0, i32 33, !dbg !2168
  store i8 0, i8* %channel_arrangement, align 8, !dbg !2169
  br label %sw.epilog107, !dbg !2170

sw.bb86:                                          ; preds = %if.then84
  %113 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2171
  %channel_arrangement87 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %113, i32 0, i32 33, !dbg !2172
  store i8 1, i8* %channel_arrangement87, align 8, !dbg !2173
  br label %sw.epilog107, !dbg !2174

sw.bb88:                                          ; preds = %if.then84
  %114 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2175
  %channel_arrangement89 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %114, i32 0, i32 33, !dbg !2176
  store i8 2, i8* %channel_arrangement89, align 8, !dbg !2177
  br label %sw.epilog107, !dbg !2178

sw.bb90:                                          ; preds = %if.then84
  %115 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2179
  %channel_arrangement91 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %115, i32 0, i32 33, !dbg !2180
  store i8 3, i8* %channel_arrangement91, align 8, !dbg !2181
  br label %sw.epilog107, !dbg !2182

sw.bb92:                                          ; preds = %if.then84
  %116 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2183
  %channel_arrangement93 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %116, i32 0, i32 33, !dbg !2184
  store i8 4, i8* %channel_arrangement93, align 8, !dbg !2185
  br label %sw.epilog107, !dbg !2186

sw.bb94:                                          ; preds = %if.then84
  %117 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2187
  %channel_arrangement95 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %117, i32 0, i32 33, !dbg !2188
  store i8 7, i8* %channel_arrangement95, align 8, !dbg !2189
  br label %sw.epilog107, !dbg !2190

sw.bb96:                                          ; preds = %if.then84
  %118 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2191
  %channel_arrangement97 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %118, i32 0, i32 33, !dbg !2192
  store i8 8, i8* %channel_arrangement97, align 8, !dbg !2193
  br label %sw.epilog107, !dbg !2194

sw.bb98:                                          ; preds = %if.then84
  %119 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2195
  %channel_arrangement99 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %119, i32 0, i32 33, !dbg !2196
  store i8 9, i8* %channel_arrangement99, align 8, !dbg !2197
  br label %sw.epilog107, !dbg !2198

sw.bb100:                                         ; preds = %if.then84
  %120 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2199
  %channel_arrangement101 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %120, i32 0, i32 33, !dbg !2200
  store i8 10, i8* %channel_arrangement101, align 8, !dbg !2201
  br label %sw.epilog107, !dbg !2202

sw.bb102:                                         ; preds = %if.then84
  %121 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2203
  %channel_arrangement103 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %121, i32 0, i32 33, !dbg !2204
  store i8 11, i8* %channel_arrangement103, align 8, !dbg !2205
  br label %sw.epilog107, !dbg !2206

sw.bb104:                                         ; preds = %if.then84
  %122 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2207
  %channel_arrangement105 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %122, i32 0, i32 33, !dbg !2208
  store i8 12, i8* %channel_arrangement105, align 8, !dbg !2209
  br label %sw.epilog107, !dbg !2210

sw.default106:                                    ; preds = %if.then84
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2211
  %124 = bitcast %struct.AVCodecContext* %123 to i8*, !dbg !2211
  call void (i8*, i32, i8*, ...) @av_log(i8* %124, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i32 0, i32 0)), !dbg !2212
  store i32 -1, i32* %retval, align 4, !dbg !2213
  br label %return, !dbg !2213

sw.epilog107:                                     ; preds = %sw.bb104, %sw.bb102, %sw.bb100, %sw.bb98, %sw.bb96, %sw.bb94, %sw.bb92, %sw.bb90, %sw.bb88, %sw.bb86, %sw.bb85
  %125 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2214
  %flags = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %125, i32 0, i32 6, !dbg !2215
  store i32 16384, i32* %flags, align 4, !dbg !2216
  %126 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2217
  %channel_arrangement108 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %126, i32 0, i32 33, !dbg !2218
  %127 = load i8, i8* %channel_arrangement108, align 8, !dbg !2218
  %idxprom = zext i8 %127 to i64, !dbg !2219
  %arrayidx109 = getelementptr inbounds [21 x %struct.ChannelInformation], [21 x %struct.ChannelInformation]* @ff_mlp_ch_info, i64 0, i64 %idxprom, !dbg !2219
  %channel_occupancy = getelementptr inbounds %struct.ChannelInformation, %struct.ChannelInformation* %arrayidx109, i32 0, i32 0, !dbg !2220
  %128 = load i8, i8* %channel_occupancy, align 4, !dbg !2220
  %conv110 = zext i8 %128 to i32, !dbg !2219
  %129 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2221
  %channel_occupancy111 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %129, i32 0, i32 10, !dbg !2222
  store i32 %conv110, i32* %channel_occupancy111, align 4, !dbg !2223
  %130 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2224
  %channel_arrangement112 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %130, i32 0, i32 33, !dbg !2225
  %131 = load i8, i8* %channel_arrangement112, align 8, !dbg !2225
  %idxprom113 = zext i8 %131 to i64, !dbg !2226
  %arrayidx114 = getelementptr inbounds [21 x %struct.ChannelInformation], [21 x %struct.ChannelInformation]* @ff_mlp_ch_info, i64 0, i64 %idxprom113, !dbg !2226
  %summary_info = getelementptr inbounds %struct.ChannelInformation, %struct.ChannelInformation* %arrayidx114, i32 0, i32 3, !dbg !2227
  %132 = load i8, i8* %summary_info, align 1, !dbg !2227
  %conv115 = zext i8 %132 to i32, !dbg !2226
  %133 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2228
  %summary_info116 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %133, i32 0, i32 11, !dbg !2229
  store i32 %conv115, i32* %summary_info116, align 8, !dbg !2230
  br label %if.end135, !dbg !2231

if.else:                                          ; preds = %if.end80
  %134 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2232
  %channel_layout117 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %134, i32 0, i32 89, !dbg !2234
  %135 = load i64, i64* %channel_layout117, align 8, !dbg !2234
  switch i64 %135, label %sw.default130 [
    i64 3, label %sw.bb118
    i64 55, label %sw.bb120
    i64 63, label %sw.bb125
  ], !dbg !2235

sw.bb118:                                         ; preds = %if.else
  %136 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2236
  %ch_modifier_thd0 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %136, i32 0, i32 34, !dbg !2238
  store i8 0, i8* %ch_modifier_thd0, align 1, !dbg !2239
  %137 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2240
  %ch_modifier_thd1 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %137, i32 0, i32 35, !dbg !2241
  store i8 0, i8* %ch_modifier_thd1, align 2, !dbg !2242
  %138 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2243
  %ch_modifier_thd2 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %138, i32 0, i32 36, !dbg !2244
  store i8 0, i8* %ch_modifier_thd2, align 1, !dbg !2245
  %139 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2246
  %channel_arrangement119 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %139, i32 0, i32 33, !dbg !2247
  store i8 1, i8* %channel_arrangement119, align 8, !dbg !2248
  br label %sw.epilog131, !dbg !2249

sw.bb120:                                         ; preds = %if.else
  %140 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2250
  %ch_modifier_thd0121 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %140, i32 0, i32 34, !dbg !2251
  store i8 1, i8* %ch_modifier_thd0121, align 1, !dbg !2252
  %141 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2253
  %ch_modifier_thd1122 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %141, i32 0, i32 35, !dbg !2254
  store i8 1, i8* %ch_modifier_thd1122, align 2, !dbg !2255
  %142 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2256
  %ch_modifier_thd2123 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %142, i32 0, i32 36, !dbg !2257
  store i8 1, i8* %ch_modifier_thd2123, align 1, !dbg !2258
  %143 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2259
  %channel_arrangement124 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %143, i32 0, i32 33, !dbg !2260
  store i8 11, i8* %channel_arrangement124, align 8, !dbg !2261
  br label %sw.epilog131, !dbg !2262

sw.bb125:                                         ; preds = %if.else
  %144 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2263
  %ch_modifier_thd0126 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %144, i32 0, i32 34, !dbg !2264
  store i8 2, i8* %ch_modifier_thd0126, align 1, !dbg !2265
  %145 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2266
  %ch_modifier_thd1127 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %145, i32 0, i32 35, !dbg !2267
  store i8 1, i8* %ch_modifier_thd1127, align 2, !dbg !2268
  %146 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2269
  %ch_modifier_thd2128 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %146, i32 0, i32 36, !dbg !2270
  store i8 2, i8* %ch_modifier_thd2128, align 1, !dbg !2271
  %147 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2272
  %channel_arrangement129 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %147, i32 0, i32 33, !dbg !2273
  store i8 15, i8* %channel_arrangement129, align 8, !dbg !2274
  br label %sw.epilog131, !dbg !2275

sw.default130:                                    ; preds = %if.else
  %148 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2276
  %149 = bitcast %struct.AVCodecContext* %148 to i8*, !dbg !2276
  call void (i8*, i32, i8*, ...) @av_log(i8* %149, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i32 0, i32 0)), !dbg !2277
  store i32 -1, i32* %retval, align 4, !dbg !2278
  br label %return, !dbg !2278

sw.epilog131:                                     ; preds = %sw.bb125, %sw.bb120, %sw.bb118
  %150 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2279
  %flags132 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %150, i32 0, i32 6, !dbg !2280
  store i32 0, i32* %flags132, align 4, !dbg !2281
  %151 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2282
  %channel_occupancy133 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %151, i32 0, i32 10, !dbg !2283
  store i32 0, i32* %channel_occupancy133, align 4, !dbg !2284
  %152 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2285
  %summary_info134 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %152, i32 0, i32 11, !dbg !2286
  store i32 0, i32* %summary_info134, align 8, !dbg !2287
  br label %if.end135

if.end135:                                        ; preds = %sw.epilog131, %sw.epilog107
  %153 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2288
  %max_restart_interval136 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %153, i32 0, i32 28, !dbg !2289
  %154 = load i32, i32* %max_restart_interval136, align 8, !dbg !2289
  %conv137 = zext i32 %154 to i64, !dbg !2288
  %mul138 = mul i64 4, %conv137, !dbg !2290
  %conv139 = trunc i64 %mul138 to i32, !dbg !2291
  store i32 %conv139, i32* %size, align 4, !dbg !2292
  %155 = load i32, i32* %size, align 4, !dbg !2293
  %conv140 = zext i32 %155 to i64, !dbg !2293
  %call141 = call noalias i8* @av_malloc(i64 %conv140), !dbg !2294
  %156 = bitcast i8* %call141 to i32*, !dbg !2294
  %157 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2295
  %frame_size142 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %157, i32 0, i32 25, !dbg !2296
  store i32* %156, i32** %frame_size142, align 8, !dbg !2297
  %158 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2298
  %frame_size143 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %158, i32 0, i32 25, !dbg !2300
  %159 = load i32*, i32** %frame_size143, align 8, !dbg !2300
  %tobool144 = icmp ne i32* %159, null, !dbg !2298
  br i1 %tobool144, label %if.end146, label %if.then145, !dbg !2301

if.then145:                                       ; preds = %if.end135
  store i32 -12, i32* %retval, align 4, !dbg !2302
  br label %return, !dbg !2302

if.end146:                                        ; preds = %if.end135
  %160 = load i32, i32* %size, align 4, !dbg !2303
  %conv147 = zext i32 %160 to i64, !dbg !2303
  %call148 = call noalias i8* @av_malloc(i64 %conv147), !dbg !2304
  %161 = bitcast i8* %call148 to i32*, !dbg !2304
  %162 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2305
  %max_output_bits = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %162, i32 0, i32 24, !dbg !2306
  store i32* %161, i32** %max_output_bits, align 16, !dbg !2307
  %163 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2308
  %max_output_bits149 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %163, i32 0, i32 24, !dbg !2310
  %164 = load i32*, i32** %max_output_bits149, align 16, !dbg !2310
  %tobool150 = icmp ne i32* %164, null, !dbg !2308
  br i1 %tobool150, label %if.end152, label %if.then151, !dbg !2311

if.then151:                                       ; preds = %if.end146
  store i32 -12, i32* %retval, align 4, !dbg !2312
  br label %return, !dbg !2312

if.end152:                                        ; preds = %if.end146
  %165 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2313
  %num_substreams153 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %165, i32 0, i32 1, !dbg !2314
  %166 = load i32, i32* %num_substreams153, align 8, !dbg !2314
  %conv154 = sext i32 %166 to i64, !dbg !2313
  %mul155 = mul i64 4, %conv154, !dbg !2315
  %167 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2316
  %max_restart_interval156 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %167, i32 0, i32 28, !dbg !2317
  %168 = load i32, i32* %max_restart_interval156, align 8, !dbg !2317
  %conv157 = zext i32 %168 to i64, !dbg !2316
  %mul158 = mul i64 %mul155, %conv157, !dbg !2318
  %conv159 = trunc i64 %mul158 to i32, !dbg !2319
  store i32 %conv159, i32* %size, align 4, !dbg !2320
  %169 = load i32, i32* %size, align 4, !dbg !2321
  %conv160 = zext i32 %169 to i64, !dbg !2321
  %call161 = call noalias i8* @av_malloc(i64 %conv160), !dbg !2322
  %170 = bitcast i8* %call161 to i32*, !dbg !2322
  %171 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2323
  %lossless_check_data = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %171, i32 0, i32 23, !dbg !2324
  store i32* %170, i32** %lossless_check_data, align 8, !dbg !2325
  %172 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2326
  %lossless_check_data162 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %172, i32 0, i32 23, !dbg !2328
  %173 = load i32*, i32** %lossless_check_data162, align 8, !dbg !2328
  %tobool163 = icmp ne i32* %173, null, !dbg !2326
  br i1 %tobool163, label %if.end165, label %if.then164, !dbg !2329

if.then164:                                       ; preds = %if.end152
  store i32 -12, i32* %retval, align 4, !dbg !2330
  br label %return, !dbg !2330

if.end165:                                        ; preds = %if.end152
  store i32 0, i32* %index, align 4, !dbg !2331
  br label %for.cond, !dbg !2333

for.cond:                                         ; preds = %for.inc, %if.end165
  %174 = load i32, i32* %index, align 4, !dbg !2334
  %175 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2337
  %restart_intervals166 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %175, i32 0, i32 30, !dbg !2338
  %176 = load i32, i32* %restart_intervals166, align 16, !dbg !2338
  %cmp167 = icmp ult i32 %174, %176, !dbg !2339
  br i1 %cmp167, label %for.body, label %for.end, !dbg !2340

for.body:                                         ; preds = %for.cond
  %177 = load i32, i32* %sum, align 4, !dbg !2341
  %178 = load i32, i32* %index, align 4, !dbg !2343
  %idxprom169 = zext i32 %178 to i64, !dbg !2344
  %179 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2344
  %seq_offset = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %179, i32 0, i32 38, !dbg !2345
  %arrayidx170 = getelementptr inbounds [16 x i32], [16 x i32]* %seq_offset, i64 0, i64 %idxprom169, !dbg !2344
  store i32 %177, i32* %arrayidx170, align 4, !dbg !2346
  %180 = load i32, i32* %index, align 4, !dbg !2347
  %add171 = add i32 %180, 1, !dbg !2348
  %181 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2349
  %min_restart_interval172 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %181, i32 0, i32 29, !dbg !2350
  %182 = load i32, i32* %min_restart_interval172, align 4, !dbg !2350
  %mul173 = mul i32 %add171, %182, !dbg !2351
  %add174 = add i32 %mul173, 1, !dbg !2352
  %183 = load i32, i32* %index, align 4, !dbg !2353
  %idxprom175 = zext i32 %183 to i64, !dbg !2354
  %184 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2354
  %seq_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %184, i32 0, i32 37, !dbg !2355
  %arrayidx176 = getelementptr inbounds [16 x i32], [16 x i32]* %seq_size, i64 0, i64 %idxprom175, !dbg !2354
  store i32 %add174, i32* %arrayidx176, align 4, !dbg !2356
  %185 = load i32, i32* %index, align 4, !dbg !2357
  %idxprom177 = zext i32 %185 to i64, !dbg !2358
  %186 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2358
  %seq_size178 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %186, i32 0, i32 37, !dbg !2359
  %arrayidx179 = getelementptr inbounds [16 x i32], [16 x i32]* %seq_size178, i64 0, i64 %idxprom177, !dbg !2358
  %187 = load i32, i32* %arrayidx179, align 4, !dbg !2358
  %188 = load i32, i32* %sum, align 4, !dbg !2360
  %add180 = add i32 %188, %187, !dbg !2360
  store i32 %add180, i32* %sum, align 4, !dbg !2360
  br label %for.inc, !dbg !2361

for.inc:                                          ; preds = %for.body
  %189 = load i32, i32* %index, align 4, !dbg !2362
  %inc = add i32 %189, 1, !dbg !2362
  store i32 %inc, i32* %index, align 4, !dbg !2362
  br label %for.cond, !dbg !2364, !llvm.loop !2365

for.end:                                          ; preds = %for.cond
  %190 = load i32, i32* %sum, align 4, !dbg !2367
  %191 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2368
  %sequence_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %191, i32 0, i32 39, !dbg !2369
  store i32 %190, i32* %sequence_size, align 4, !dbg !2370
  %192 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2371
  %restart_intervals181 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %192, i32 0, i32 30, !dbg !2372
  %193 = load i32, i32* %restart_intervals181, align 16, !dbg !2372
  %conv182 = zext i32 %193 to i64, !dbg !2371
  %mul183 = mul i64 164, %conv182, !dbg !2373
  %194 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2374
  %sequence_size184 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %194, i32 0, i32 39, !dbg !2375
  %195 = load i32, i32* %sequence_size184, align 4, !dbg !2375
  %conv185 = zext i32 %195 to i64, !dbg !2374
  %mul186 = mul i64 %mul183, %conv185, !dbg !2376
  %196 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2377
  %avctx187 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %196, i32 0, i32 0, !dbg !2378
  %197 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx187, align 32, !dbg !2378
  %channels188 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %197, i32 0, i32 83, !dbg !2379
  %198 = load i32, i32* %channels188, align 4, !dbg !2379
  %conv189 = sext i32 %198 to i64, !dbg !2377
  %mul190 = mul i64 %mul186, %conv189, !dbg !2380
  %conv191 = trunc i64 %mul190 to i32, !dbg !2381
  store i32 %conv191, i32* %size, align 4, !dbg !2382
  %199 = load i32, i32* %size, align 4, !dbg !2383
  %conv192 = zext i32 %199 to i64, !dbg !2383
  %call193 = call noalias i8* @av_malloc(i64 %conv192), !dbg !2384
  %200 = bitcast i8* %call193 to %struct.ChannelParams*, !dbg !2384
  %201 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2385
  %channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %201, i32 0, i32 40, !dbg !2386
  store %struct.ChannelParams* %200, %struct.ChannelParams** %channel_params, align 32, !dbg !2387
  %202 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2388
  %channel_params194 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %202, i32 0, i32 40, !dbg !2390
  %203 = load %struct.ChannelParams*, %struct.ChannelParams** %channel_params194, align 32, !dbg !2390
  %tobool195 = icmp ne %struct.ChannelParams* %203, null, !dbg !2388
  br i1 %tobool195, label %if.end197, label %if.then196, !dbg !2391

if.then196:                                       ; preds = %for.end
  %204 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2392
  %205 = bitcast %struct.AVCodecContext* %204 to i8*, !dbg !2392
  call void (i8*, i32, i8*, ...) @av_log(i8* %205, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.13, i32 0, i32 0)), !dbg !2394
  store i32 -12, i32* %retval, align 4, !dbg !2395
  br label %return, !dbg !2395

if.end197:                                        ; preds = %for.end
  %206 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2396
  %restart_intervals198 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %206, i32 0, i32 30, !dbg !2397
  %207 = load i32, i32* %restart_intervals198, align 16, !dbg !2397
  %conv199 = zext i32 %207 to i64, !dbg !2396
  %mul200 = mul i64 684, %conv199, !dbg !2398
  %208 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2399
  %sequence_size201 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %208, i32 0, i32 39, !dbg !2400
  %209 = load i32, i32* %sequence_size201, align 4, !dbg !2400
  %conv202 = zext i32 %209 to i64, !dbg !2399
  %mul203 = mul i64 %mul200, %conv202, !dbg !2401
  %210 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2402
  %num_substreams204 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %210, i32 0, i32 1, !dbg !2403
  %211 = load i32, i32* %num_substreams204, align 8, !dbg !2403
  %conv205 = sext i32 %211 to i64, !dbg !2402
  %mul206 = mul i64 %mul203, %conv205, !dbg !2404
  %conv207 = trunc i64 %mul206 to i32, !dbg !2405
  store i32 %conv207, i32* %size, align 4, !dbg !2406
  %212 = load i32, i32* %size, align 4, !dbg !2407
  %conv208 = zext i32 %212 to i64, !dbg !2407
  %call209 = call noalias i8* @av_malloc(i64 %conv208), !dbg !2408
  %213 = bitcast i8* %call209 to %struct.DecodingParams*, !dbg !2408
  %214 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2409
  %decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %214, i32 0, i32 42, !dbg !2410
  store %struct.DecodingParams* %213, %struct.DecodingParams** %decoding_params, align 8, !dbg !2411
  %215 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2412
  %decoding_params210 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %215, i32 0, i32 42, !dbg !2414
  %216 = load %struct.DecodingParams*, %struct.DecodingParams** %decoding_params210, align 8, !dbg !2414
  %tobool211 = icmp ne %struct.DecodingParams* %216, null, !dbg !2412
  br i1 %tobool211, label %if.end213, label %if.then212, !dbg !2415

if.then212:                                       ; preds = %if.end197
  %217 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2416
  %218 = bitcast %struct.AVCodecContext* %217 to i8*, !dbg !2416
  call void (i8*, i32, i8*, ...) @av_log(i8* %218, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.13, i32 0, i32 0)), !dbg !2418
  store i32 -12, i32* %retval, align 4, !dbg !2419
  br label %return, !dbg !2419

if.end213:                                        ; preds = %if.end197
  store i32 0, i32* %substr, align 4, !dbg !2420
  br label %for.cond214, !dbg !2422

for.cond214:                                      ; preds = %for.inc225, %if.end213
  %219 = load i32, i32* %substr, align 4, !dbg !2423
  %220 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2426
  %num_substreams215 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %220, i32 0, i32 1, !dbg !2427
  %221 = load i32, i32* %num_substreams215, align 8, !dbg !2427
  %cmp216 = icmp ult i32 %219, %221, !dbg !2428
  br i1 %cmp216, label %for.body218, label %for.end227, !dbg !2429

for.body218:                                      ; preds = %for.cond214
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !2430, metadata !1746), !dbg !2432
  %222 = load i32, i32* %substr, align 4, !dbg !2433
  %idxprom219 = zext i32 %222 to i64, !dbg !2434
  %223 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2434
  %restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %223, i32 0, i32 43, !dbg !2435
  %arrayidx220 = getelementptr inbounds [4 x %struct.RestartHeader], [4 x %struct.RestartHeader]* %restart_header, i64 0, i64 %idxprom219, !dbg !2434
  store %struct.RestartHeader* %arrayidx220, %struct.RestartHeader** %rh, align 8, !dbg !2432
  %224 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !2436
  %noisegen_seed = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %224, i32 0, i32 4, !dbg !2437
  store i32 0, i32* %noisegen_seed, align 4, !dbg !2438
  %225 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !2439
  %min_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %225, i32 0, i32 0, !dbg !2440
  store i8 0, i8* %min_channel, align 4, !dbg !2441
  %226 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2442
  %channels221 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %226, i32 0, i32 83, !dbg !2443
  %227 = load i32, i32* %channels221, align 4, !dbg !2443
  %sub222 = sub nsw i32 %227, 1, !dbg !2444
  %conv223 = trunc i32 %sub222 to i8, !dbg !2442
  %228 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !2445
  %max_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %228, i32 0, i32 1, !dbg !2446
  store i8 %conv223, i8* %max_channel, align 1, !dbg !2447
  %229 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !2448
  %max_channel224 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %229, i32 0, i32 1, !dbg !2449
  %230 = load i8, i8* %max_channel224, align 1, !dbg !2449
  %231 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !2450
  %max_matrix_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %231, i32 0, i32 2, !dbg !2451
  store i8 %230, i8* %max_matrix_channel, align 2, !dbg !2452
  br label %for.inc225, !dbg !2453

for.inc225:                                       ; preds = %for.body218
  %232 = load i32, i32* %substr, align 4, !dbg !2454
  %inc226 = add i32 %232, 1, !dbg !2454
  store i32 %inc226, i32* %substr, align 4, !dbg !2454
  br label %for.cond214, !dbg !2456, !llvm.loop !2457

for.end227:                                       ; preds = %for.cond214
  %233 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2459
  call void @clear_channel_params(%struct.MLPEncodeContext* %233, %struct.ChannelParams* getelementptr inbounds ([8 x %struct.ChannelParams], [8 x %struct.ChannelParams]* @restart_channel_params, i32 0, i32 0)), !dbg !2460
  %234 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2461
  call void @clear_decoding_params(%struct.MLPEncodeContext* %234, %struct.DecodingParams* getelementptr inbounds ([4 x %struct.DecodingParams], [4 x %struct.DecodingParams]* @restart_decoding_params, i32 0, i32 0)), !dbg !2462
  %235 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2463
  %lpc_ctx = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %235, i32 0, i32 66, !dbg !2465
  %236 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2466
  %number_of_samples = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %236, i32 0, i32 57, !dbg !2467
  %237 = load i32, i32* %number_of_samples, align 8, !dbg !2467
  %call228 = call i32 @ff_lpc_init(%struct.LPCContext* %lpc_ctx, i32 %237, i32 8, i32 2), !dbg !2468
  store i32 %call228, i32* %ret, align 4, !dbg !2469
  %cmp229 = icmp slt i32 %call228, 0, !dbg !2470
  br i1 %cmp229, label %if.then231, label %if.end232, !dbg !2471

if.then231:                                       ; preds = %for.end227
  %238 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2472
  %239 = bitcast %struct.AVCodecContext* %238 to i8*, !dbg !2472
  call void (i8*, i32, i8*, ...) @av_log(i8* %239, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.14, i32 0, i32 0)), !dbg !2474
  %240 = load i32, i32* %ret, align 4, !dbg !2475
  store i32 %240, i32* %retval, align 4, !dbg !2476
  br label %return, !dbg !2476

if.end232:                                        ; preds = %for.end227
  %241 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2477
  %242 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2478
  %afq = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %242, i32 0, i32 54, !dbg !2479
  call void @ff_af_queue_init(%struct.AVCodecContext* %241, %struct.AudioFrameQueue* %afq), !dbg !2480
  store i32 0, i32* %retval, align 4, !dbg !2481
  br label %return, !dbg !2481

return:                                           ; preds = %if.end232, %if.then231, %if.then212, %if.then196, %if.then164, %if.then151, %if.then145, %sw.default130, %sw.default106, %if.then79, %if.then73, %if.then64, %sw.default48, %sw.default
  %243 = load i32, i32* %retval, align 4, !dbg !2482
  ret i32 %243, !dbg !2482
}

; Function Attrs: nounwind uwtable
define internal i32 @mlp_encode_frame(%struct.AVCodecContext* %avctx, %struct.AVPacket* %avpkt, %struct.AVFrame* %frame, i32* %got_packet) #1 !dbg !2483 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %got_packet.addr = alloca i32*, align 8
  %ctx = alloca %struct.MLPEncodeContext*, align 8
  %bytes_written = alloca i32, align 4
  %restart_frame = alloca i32, align 4
  %ret = alloca i32, align 4
  %data = alloca i8*, align 8
  %seq_index = alloca i32, align 4
  %number_of_samples = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2484, metadata !1746), !dbg !2485
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2486, metadata !1746), !dbg !2487
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !2488, metadata !1746), !dbg !2489
  store i32* %got_packet, i32** %got_packet.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_packet.addr, metadata !2490, metadata !1746), !dbg !2491
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx, metadata !2492, metadata !1746), !dbg !2493
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2494
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2495
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2495
  %2 = bitcast i8* %1 to %struct.MLPEncodeContext*, !dbg !2494
  store %struct.MLPEncodeContext* %2, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2493
  call void @llvm.dbg.declare(metadata i32* %bytes_written, metadata !2496, metadata !1746), !dbg !2497
  store i32 0, i32* %bytes_written, align 4, !dbg !2497
  call void @llvm.dbg.declare(metadata i32* %restart_frame, metadata !2498, metadata !1746), !dbg !2499
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2500, metadata !1746), !dbg !2501
  call void @llvm.dbg.declare(metadata i8** %data, metadata !2502, metadata !1746), !dbg !2503
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2504
  %4 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2506
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2507
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 83, !dbg !2508
  %6 = load i32, i32* %channels, align 4, !dbg !2508
  %mul = mul nsw i32 87500, %6, !dbg !2509
  %conv = sext i32 %mul to i64, !dbg !2510
  %call = call i32 @ff_alloc_packet2(%struct.AVCodecContext* %3, %struct.AVPacket* %4, i64 %conv, i64 0), !dbg !2511
  store i32 %call, i32* %ret, align 4, !dbg !2512
  %cmp = icmp slt i32 %call, 0, !dbg !2513
  br i1 %cmp, label %if.then, label %if.end, !dbg !2514

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %ret, align 4, !dbg !2515
  store i32 %7, i32* %retval, align 4, !dbg !2516
  br label %return, !dbg !2516

if.end:                                           ; preds = %entry
  %8 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2517
  %tobool = icmp ne %struct.AVFrame* %8, null, !dbg !2517
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !2519

if.then2:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !2520
  br label %return, !dbg !2520

if.end3:                                          ; preds = %if.end
  %9 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2521
  %tobool4 = icmp ne %struct.AVFrame* %9, null, !dbg !2521
  br i1 %tobool4, label %if.then5, label %if.end11, !dbg !2523

if.then5:                                         ; preds = %if.end3
  %10 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2524
  %afq = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %10, i32 0, i32 54, !dbg !2527
  %11 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2528
  %call6 = call i32 @ff_af_queue_add(%struct.AudioFrameQueue* %afq, %struct.AVFrame* %11), !dbg !2529
  store i32 %call6, i32* %ret, align 4, !dbg !2530
  %cmp7 = icmp slt i32 %call6, 0, !dbg !2531
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2532

if.then9:                                         ; preds = %if.then5
  %12 = load i32, i32* %ret, align 4, !dbg !2533
  store i32 %12, i32* %retval, align 4, !dbg !2534
  br label %return, !dbg !2534

if.end10:                                         ; preds = %if.then5
  br label %if.end11, !dbg !2535

if.end11:                                         ; preds = %if.end10, %if.end3
  %13 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2536
  %data12 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %13, i32 0, i32 0, !dbg !2537
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data12, i64 0, i64 0, !dbg !2536
  %14 = load i8*, i8** %arrayidx, align 8, !dbg !2536
  store i8* %14, i8** %data, align 8, !dbg !2538
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2539
  %frame_number = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 86, !dbg !2540
  %16 = load i32, i32* %frame_number, align 8, !dbg !2540
  %17 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2541
  %max_restart_interval = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %17, i32 0, i32 28, !dbg !2542
  %18 = load i32, i32* %max_restart_interval, align 8, !dbg !2542
  %rem = urem i32 %16, %18, !dbg !2543
  %19 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2544
  %frame_index = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %19, i32 0, i32 26, !dbg !2545
  store i32 %rem, i32* %frame_index, align 32, !dbg !2546
  %20 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2547
  %major_inout_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %20, i32 0, i32 13, !dbg !2548
  %21 = load i32*, i32** %major_inout_buffer, align 8, !dbg !2548
  %22 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2549
  %frame_index13 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %22, i32 0, i32 26, !dbg !2550
  %23 = load i32, i32* %frame_index13, align 32, !dbg !2550
  %24 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2551
  %one_sample_buffer_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %24, i32 0, i32 27, !dbg !2552
  %25 = load i32, i32* %one_sample_buffer_size, align 4, !dbg !2552
  %mul14 = mul i32 %23, %25, !dbg !2553
  %idx.ext = zext i32 %mul14 to i64, !dbg !2554
  %add.ptr = getelementptr inbounds i32, i32* %21, i64 %idx.ext, !dbg !2554
  %26 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2555
  %inout_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %26, i32 0, i32 12, !dbg !2556
  store i32* %add.ptr, i32** %inout_buffer, align 32, !dbg !2557
  %27 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2558
  %last_frame = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %27, i32 0, i32 17, !dbg !2560
  %28 = load i32*, i32** %last_frame, align 8, !dbg !2560
  %29 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2561
  %inout_buffer15 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %29, i32 0, i32 12, !dbg !2562
  %30 = load i32*, i32** %inout_buffer15, align 32, !dbg !2562
  %cmp16 = icmp eq i32* %28, %30, !dbg !2563
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !2564

if.then18:                                        ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !2565
  br label %return, !dbg !2565

if.end19:                                         ; preds = %if.end11
  %31 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2567
  %major_scratch_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %31, i32 0, i32 16, !dbg !2568
  %32 = load i32*, i32** %major_scratch_buffer, align 32, !dbg !2568
  %33 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2569
  %frame_index20 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %33, i32 0, i32 26, !dbg !2570
  %34 = load i32, i32* %frame_index20, align 32, !dbg !2570
  %35 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2571
  %one_sample_buffer_size21 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %35, i32 0, i32 27, !dbg !2572
  %36 = load i32, i32* %one_sample_buffer_size21, align 4, !dbg !2572
  %mul22 = mul i32 %34, %36, !dbg !2573
  %idx.ext23 = zext i32 %mul22 to i64, !dbg !2574
  %add.ptr24 = getelementptr inbounds i32, i32* %32, i64 %idx.ext23, !dbg !2574
  %37 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2575
  %sample_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %37, i32 0, i32 15, !dbg !2576
  store i32* %add.ptr24, i32** %sample_buffer, align 8, !dbg !2577
  %38 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2578
  %inout_buffer25 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %38, i32 0, i32 12, !dbg !2579
  %39 = load i32*, i32** %inout_buffer25, align 32, !dbg !2579
  %40 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2580
  %write_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %40, i32 0, i32 14, !dbg !2581
  store i32* %39, i32** %write_buffer, align 16, !dbg !2582
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2583
  %frame_number26 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 86, !dbg !2585
  %42 = load i32, i32* %frame_number26, align 8, !dbg !2585
  %43 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2586
  %max_restart_interval27 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %43, i32 0, i32 28, !dbg !2587
  %44 = load i32, i32* %max_restart_interval27, align 8, !dbg !2587
  %cmp28 = icmp ult i32 %42, %44, !dbg !2588
  br i1 %cmp28, label %if.then30, label %if.end41, !dbg !2589

if.then30:                                        ; preds = %if.end19
  %45 = load i8*, i8** %data, align 8, !dbg !2590
  %tobool31 = icmp ne i8* %45, null, !dbg !2590
  br i1 %tobool31, label %if.then32, label %if.else, !dbg !2593

if.then32:                                        ; preds = %if.then30
  br label %input_and_return, !dbg !2594

if.else:                                          ; preds = %if.then30
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2596
  %frame_number33 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %46, i32 0, i32 86, !dbg !2598
  %47 = load i32, i32* %frame_number33, align 8, !dbg !2598
  %48 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2599
  %max_restart_interval34 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %48, i32 0, i32 28, !dbg !2600
  store i32 %47, i32* %max_restart_interval34, align 8, !dbg !2601
  %49 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2602
  %frame_index35 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %49, i32 0, i32 26, !dbg !2603
  store i32 0, i32* %frame_index35, align 32, !dbg !2604
  %50 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2605
  %major_scratch_buffer36 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %50, i32 0, i32 16, !dbg !2606
  %51 = load i32*, i32** %major_scratch_buffer36, align 32, !dbg !2606
  %52 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2607
  %sample_buffer37 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %52, i32 0, i32 15, !dbg !2608
  store i32* %51, i32** %sample_buffer37, align 8, !dbg !2609
  %53 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2610
  %major_inout_buffer38 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %53, i32 0, i32 13, !dbg !2611
  %54 = load i32*, i32** %major_inout_buffer38, align 8, !dbg !2611
  %55 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2612
  %inout_buffer39 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %55, i32 0, i32 12, !dbg !2613
  store i32* %54, i32** %inout_buffer39, align 32, !dbg !2614
  br label %if.end40

if.end40:                                         ; preds = %if.else
  br label %if.end41, !dbg !2615

if.end41:                                         ; preds = %if.end40, %if.end19
  %56 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2616
  %frame_index42 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %56, i32 0, i32 26, !dbg !2618
  %57 = load i32, i32* %frame_index42, align 32, !dbg !2618
  %idxprom = zext i32 %57 to i64, !dbg !2619
  %58 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2619
  %frame_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %58, i32 0, i32 25, !dbg !2620
  %59 = load i32*, i32** %frame_size, align 8, !dbg !2620
  %arrayidx43 = getelementptr inbounds i32, i32* %59, i64 %idxprom, !dbg !2619
  %60 = load i32, i32* %arrayidx43, align 4, !dbg !2619
  %cmp44 = icmp ugt i32 %60, 160, !dbg !2621
  br i1 %cmp44, label %if.then46, label %if.end51, !dbg !2622

if.then46:                                        ; preds = %if.end41
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2623
  %62 = bitcast %struct.AVCodecContext* %61 to i8*, !dbg !2623
  %63 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2625
  %frame_index47 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %63, i32 0, i32 26, !dbg !2626
  %64 = load i32, i32* %frame_index47, align 32, !dbg !2626
  %idxprom48 = zext i32 %64 to i64, !dbg !2627
  %65 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2627
  %frame_size49 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %65, i32 0, i32 25, !dbg !2628
  %66 = load i32*, i32** %frame_size49, align 8, !dbg !2628
  %arrayidx50 = getelementptr inbounds i32, i32* %66, i64 %idxprom48, !dbg !2627
  %67 = load i32, i32* %arrayidx50, align 4, !dbg !2627
  call void (i8*, i32, i8*, ...) @av_log(i8* %62, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i32 0, i32 0), i32 %67, i32 160), !dbg !2629
  store i32 -1, i32* %retval, align 4, !dbg !2630
  br label %return, !dbg !2630

if.end51:                                         ; preds = %if.end41
  %68 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2631
  %frame_index52 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %68, i32 0, i32 26, !dbg !2632
  %69 = load i32, i32* %frame_index52, align 32, !dbg !2632
  %tobool53 = icmp ne i32 %69, 0, !dbg !2633
  %lnot = xor i1 %tobool53, true, !dbg !2633
  %lnot.ext = zext i1 %lnot to i32, !dbg !2633
  store i32 %lnot.ext, i32* %restart_frame, align 4, !dbg !2634
  %70 = load i32, i32* %restart_frame, align 4, !dbg !2635
  %tobool54 = icmp ne i32 %70, 0, !dbg !2635
  br i1 %tobool54, label %if.then55, label %if.end61, !dbg !2637

if.then55:                                        ; preds = %if.end51
  %71 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2638
  call void @set_major_params(%struct.MLPEncodeContext* %71), !dbg !2640
  %72 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2641
  %min_restart_interval = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %72, i32 0, i32 29, !dbg !2643
  %73 = load i32, i32* %min_restart_interval, align 4, !dbg !2643
  %74 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2644
  %max_restart_interval56 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %74, i32 0, i32 28, !dbg !2645
  %75 = load i32, i32* %max_restart_interval56, align 8, !dbg !2645
  %cmp57 = icmp ne i32 %73, %75, !dbg !2646
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !2647

if.then59:                                        ; preds = %if.then55
  %76 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2648
  call void @process_major_frame(%struct.MLPEncodeContext* %76), !dbg !2649
  br label %if.end60, !dbg !2649

if.end60:                                         ; preds = %if.then59, %if.then55
  br label %if.end61, !dbg !2650

if.end61:                                         ; preds = %if.end60, %if.end51
  %77 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2651
  %min_restart_interval62 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %77, i32 0, i32 29, !dbg !2653
  %78 = load i32, i32* %min_restart_interval62, align 4, !dbg !2653
  %79 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2654
  %max_restart_interval63 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %79, i32 0, i32 28, !dbg !2655
  %80 = load i32, i32* %max_restart_interval63, align 8, !dbg !2655
  %cmp64 = icmp eq i32 %78, %80, !dbg !2656
  br i1 %cmp64, label %if.then66, label %if.end69, !dbg !2657

if.then66:                                        ; preds = %if.end61
  %81 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2658
  %sample_buffer67 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %81, i32 0, i32 15, !dbg !2659
  %82 = load i32*, i32** %sample_buffer67, align 8, !dbg !2659
  %83 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2660
  %write_buffer68 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %83, i32 0, i32 14, !dbg !2661
  store i32* %82, i32** %write_buffer68, align 16, !dbg !2662
  br label %if.end69, !dbg !2660

if.end69:                                         ; preds = %if.then66, %if.end61
  %84 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2663
  %85 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2664
  %data70 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %85, i32 0, i32 3, !dbg !2665
  %86 = load i8*, i8** %data70, align 8, !dbg !2665
  %87 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2666
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %87, i32 0, i32 4, !dbg !2667
  %88 = load i32, i32* %size, align 8, !dbg !2667
  %89 = load i32, i32* %restart_frame, align 4, !dbg !2668
  %call71 = call i32 @write_access_unit(%struct.MLPEncodeContext* %84, i8* %86, i32 %88, i32 %89), !dbg !2669
  store i32 %call71, i32* %bytes_written, align 4, !dbg !2670
  %90 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2671
  %frame_index72 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %90, i32 0, i32 26, !dbg !2672
  %91 = load i32, i32* %frame_index72, align 32, !dbg !2672
  %idxprom73 = zext i32 %91 to i64, !dbg !2673
  %92 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2673
  %frame_size74 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %92, i32 0, i32 25, !dbg !2674
  %93 = load i32*, i32** %frame_size74, align 8, !dbg !2674
  %arrayidx75 = getelementptr inbounds i32, i32* %93, i64 %idxprom73, !dbg !2673
  %94 = load i32, i32* %arrayidx75, align 4, !dbg !2673
  %95 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2675
  %timestamp = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %95, i32 0, i32 31, !dbg !2676
  %96 = load i16, i16* %timestamp, align 4, !dbg !2677
  %conv76 = zext i16 %96 to i32, !dbg !2677
  %add = add i32 %conv76, %94, !dbg !2677
  %conv77 = trunc i32 %add to i16, !dbg !2677
  store i16 %conv77, i16* %timestamp, align 4, !dbg !2677
  %97 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2678
  %frame_index78 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %97, i32 0, i32 26, !dbg !2679
  %98 = load i32, i32* %frame_index78, align 32, !dbg !2679
  %idxprom79 = zext i32 %98 to i64, !dbg !2680
  %99 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2680
  %frame_size80 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %99, i32 0, i32 25, !dbg !2681
  %100 = load i32*, i32** %frame_size80, align 8, !dbg !2681
  %arrayidx81 = getelementptr inbounds i32, i32* %100, i64 %idxprom79, !dbg !2680
  %101 = load i32, i32* %arrayidx81, align 4, !dbg !2680
  %102 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2682
  %dts = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %102, i32 0, i32 32, !dbg !2683
  %103 = load i16, i16* %dts, align 2, !dbg !2684
  %conv82 = zext i16 %103 to i32, !dbg !2684
  %add83 = add i32 %conv82, %101, !dbg !2684
  %conv84 = trunc i32 %add83 to i16, !dbg !2684
  store i16 %conv84, i16* %dts, align 2, !dbg !2684
  br label %input_and_return, !dbg !2682

input_and_return:                                 ; preds = %if.end69, %if.then32
  %104 = load i8*, i8** %data, align 8, !dbg !2685
  %tobool85 = icmp ne i8* %104, null, !dbg !2685
  br i1 %tobool85, label %if.then86, label %if.else94, !dbg !2687

if.then86:                                        ; preds = %input_and_return
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2688
  %frame_size87 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %105, i32 0, i32 85, !dbg !2690
  %106 = load i32, i32* %frame_size87, align 4, !dbg !2690
  %107 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2691
  %frame_index88 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %107, i32 0, i32 26, !dbg !2692
  %108 = load i32, i32* %frame_index88, align 32, !dbg !2692
  %idxprom89 = zext i32 %108 to i64, !dbg !2693
  %109 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2693
  %frame_size90 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %109, i32 0, i32 25, !dbg !2694
  %110 = load i32*, i32** %frame_size90, align 8, !dbg !2694
  %arrayidx91 = getelementptr inbounds i32, i32* %110, i64 %idxprom89, !dbg !2693
  store i32 %106, i32* %arrayidx91, align 4, !dbg !2695
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2696
  %frame_size92 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %111, i32 0, i32 85, !dbg !2697
  %112 = load i32, i32* %frame_size92, align 4, !dbg !2697
  %113 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2698
  %next_major_frame_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %113, i32 0, i32 22, !dbg !2699
  %114 = load i32, i32* %next_major_frame_size, align 4, !dbg !2700
  %add93 = add i32 %114, %112, !dbg !2700
  store i32 %add93, i32* %next_major_frame_size, align 4, !dbg !2700
  %115 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2701
  %next_major_number_of_frames = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %115, i32 0, i32 20, !dbg !2702
  %116 = load i32, i32* %next_major_number_of_frames, align 4, !dbg !2703
  %inc = add i32 %116, 1, !dbg !2703
  store i32 %inc, i32* %next_major_number_of_frames, align 4, !dbg !2703
  %117 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2704
  %118 = load i8*, i8** %data, align 8, !dbg !2705
  call void @input_data(%struct.MLPEncodeContext* %117, i8* %118), !dbg !2706
  br label %if.end101, !dbg !2707

if.else94:                                        ; preds = %input_and_return
  %119 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2708
  %last_frame95 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %119, i32 0, i32 17, !dbg !2711
  %120 = load i32*, i32** %last_frame95, align 8, !dbg !2711
  %tobool96 = icmp ne i32* %120, null, !dbg !2708
  br i1 %tobool96, label %if.end100, label %if.then97, !dbg !2712

if.then97:                                        ; preds = %if.else94
  %121 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2713
  %inout_buffer98 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %121, i32 0, i32 12, !dbg !2715
  %122 = load i32*, i32** %inout_buffer98, align 32, !dbg !2715
  %123 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2716
  %last_frame99 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %123, i32 0, i32 17, !dbg !2717
  store i32* %122, i32** %last_frame99, align 8, !dbg !2718
  br label %if.end100, !dbg !2719

if.end100:                                        ; preds = %if.then97, %if.else94
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then86
  %124 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2720
  %frame_index102 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %124, i32 0, i32 26, !dbg !2721
  %125 = load i32, i32* %frame_index102, align 32, !dbg !2721
  %add103 = add i32 %125, 1, !dbg !2722
  %126 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2723
  %min_restart_interval104 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %126, i32 0, i32 29, !dbg !2724
  %127 = load i32, i32* %min_restart_interval104, align 4, !dbg !2724
  %rem105 = urem i32 %add103, %127, !dbg !2725
  store i32 %rem105, i32* %restart_frame, align 4, !dbg !2726
  %128 = load i32, i32* %restart_frame, align 4, !dbg !2727
  %tobool106 = icmp ne i32 %128, 0, !dbg !2727
  br i1 %tobool106, label %if.end218, label %if.then107, !dbg !2729

if.then107:                                       ; preds = %if.end101
  call void @llvm.dbg.declare(metadata i32* %seq_index, metadata !2730, metadata !1746), !dbg !2732
  store i32 0, i32* %seq_index, align 4, !dbg !2733
  br label %for.cond, !dbg !2735

for.cond:                                         ; preds = %for.inc200, %if.then107
  %129 = load i32, i32* %seq_index, align 4, !dbg !2736
  %130 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2738
  %restart_intervals = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %130, i32 0, i32 30, !dbg !2739
  %131 = load i32, i32* %restart_intervals, align 16, !dbg !2739
  %cmp108 = icmp ult i32 %129, %131, !dbg !2740
  br i1 %cmp108, label %land.rhs, label %land.end, !dbg !2741

land.rhs:                                         ; preds = %for.cond
  %132 = load i32, i32* %seq_index, align 4, !dbg !2742
  %133 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2744
  %min_restart_interval110 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %133, i32 0, i32 29, !dbg !2745
  %134 = load i32, i32* %min_restart_interval110, align 4, !dbg !2745
  %mul111 = mul i32 %132, %134, !dbg !2746
  %135 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2747
  %avctx112 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %135, i32 0, i32 0, !dbg !2748
  %136 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx112, align 32, !dbg !2748
  %frame_number113 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %136, i32 0, i32 86, !dbg !2749
  %137 = load i32, i32* %frame_number113, align 8, !dbg !2749
  %cmp114 = icmp ule i32 %mul111, %137, !dbg !2750
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %138 = phi i1 [ false, %for.cond ], [ %cmp114, %land.rhs ]
  br i1 %138, label %for.body, label %for.end202, !dbg !2751

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %number_of_samples, metadata !2753, metadata !1746), !dbg !2755
  store i32 0, i32* %number_of_samples, align 4, !dbg !2755
  call void @llvm.dbg.declare(metadata i32* %index, metadata !2756, metadata !1746), !dbg !2757
  %139 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2758
  %major_scratch_buffer116 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %139, i32 0, i32 16, !dbg !2759
  %140 = load i32*, i32** %major_scratch_buffer116, align 32, !dbg !2759
  %141 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2760
  %sample_buffer117 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %141, i32 0, i32 15, !dbg !2761
  store i32* %140, i32** %sample_buffer117, align 8, !dbg !2762
  %142 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2763
  %major_inout_buffer118 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %142, i32 0, i32 13, !dbg !2764
  %143 = load i32*, i32** %major_inout_buffer118, align 8, !dbg !2764
  %144 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2765
  %inout_buffer119 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %144, i32 0, i32 12, !dbg !2766
  store i32* %143, i32** %inout_buffer119, align 32, !dbg !2767
  %145 = load i32, i32* %seq_index, align 4, !dbg !2768
  %146 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2769
  %seq_index120 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %146, i32 0, i32 59, !dbg !2770
  store i32 %145, i32* %seq_index120, align 32, !dbg !2771
  %147 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2772
  %avctx121 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %147, i32 0, i32 0, !dbg !2773
  %148 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx121, align 32, !dbg !2773
  %frame_number122 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %148, i32 0, i32 86, !dbg !2774
  %149 = load i32, i32* %frame_number122, align 8, !dbg !2774
  %150 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2775
  %avctx123 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %150, i32 0, i32 0, !dbg !2776
  %151 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx123, align 32, !dbg !2776
  %frame_number124 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %151, i32 0, i32 86, !dbg !2777
  %152 = load i32, i32* %frame_number124, align 8, !dbg !2777
  %153 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2778
  %min_restart_interval125 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %153, i32 0, i32 29, !dbg !2779
  %154 = load i32, i32* %min_restart_interval125, align 4, !dbg !2779
  %rem126 = urem i32 %152, %154, !dbg !2780
  %sub = sub i32 %149, %rem126, !dbg !2781
  %155 = load i32, i32* %seq_index, align 4, !dbg !2782
  %156 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2783
  %min_restart_interval127 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %156, i32 0, i32 29, !dbg !2784
  %157 = load i32, i32* %min_restart_interval127, align 4, !dbg !2784
  %mul128 = mul i32 %155, %157, !dbg !2785
  %sub129 = sub i32 %sub, %mul128, !dbg !2786
  %158 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2787
  %max_restart_interval130 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %158, i32 0, i32 28, !dbg !2788
  %159 = load i32, i32* %max_restart_interval130, align 8, !dbg !2788
  %rem131 = urem i32 %sub129, %159, !dbg !2789
  %160 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2790
  %starting_frame_index = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %160, i32 0, i32 55, !dbg !2791
  store i32 %rem131, i32* %starting_frame_index, align 16, !dbg !2792
  %161 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2793
  %next_major_number_of_frames132 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %161, i32 0, i32 20, !dbg !2794
  %162 = load i32, i32* %next_major_number_of_frames132, align 4, !dbg !2794
  %163 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2795
  %number_of_frames = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %163, i32 0, i32 56, !dbg !2796
  store i32 %162, i32* %number_of_frames, align 4, !dbg !2797
  %164 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2798
  %next_major_number_of_frames133 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %164, i32 0, i32 20, !dbg !2799
  %165 = load i32, i32* %next_major_number_of_frames133, align 4, !dbg !2799
  %add134 = add i32 %165, 1, !dbg !2800
  %166 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2801
  %number_of_subblocks = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %166, i32 0, i32 58, !dbg !2802
  store i32 %add134, i32* %number_of_subblocks, align 4, !dbg !2803
  %167 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2804
  %channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %167, i32 0, i32 40, !dbg !2805
  %168 = load %struct.ChannelParams*, %struct.ChannelParams** %channel_params, align 32, !dbg !2805
  %169 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2806
  %frame_index135 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %169, i32 0, i32 26, !dbg !2807
  %170 = load i32, i32* %frame_index135, align 32, !dbg !2807
  %171 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2808
  %min_restart_interval136 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %171, i32 0, i32 29, !dbg !2809
  %172 = load i32, i32* %min_restart_interval136, align 4, !dbg !2809
  %div = udiv i32 %170, %172, !dbg !2810
  %173 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2811
  %sequence_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %173, i32 0, i32 39, !dbg !2812
  %174 = load i32, i32* %sequence_size, align 4, !dbg !2812
  %mul137 = mul i32 %div, %174, !dbg !2813
  %175 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2814
  %avctx138 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %175, i32 0, i32 0, !dbg !2815
  %176 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx138, align 32, !dbg !2815
  %channels139 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %176, i32 0, i32 83, !dbg !2816
  %177 = load i32, i32* %channels139, align 4, !dbg !2816
  %mul140 = mul i32 %mul137, %177, !dbg !2817
  %idx.ext141 = zext i32 %mul140 to i64, !dbg !2818
  %add.ptr142 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %168, i64 %idx.ext141, !dbg !2818
  %178 = load i32, i32* %seq_index, align 4, !dbg !2819
  %idxprom143 = sext i32 %178 to i64, !dbg !2820
  %179 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2820
  %seq_offset = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %179, i32 0, i32 38, !dbg !2821
  %arrayidx144 = getelementptr inbounds [16 x i32], [16 x i32]* %seq_offset, i64 0, i64 %idxprom143, !dbg !2820
  %180 = load i32, i32* %arrayidx144, align 4, !dbg !2820
  %181 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2822
  %avctx145 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %181, i32 0, i32 0, !dbg !2823
  %182 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx145, align 32, !dbg !2823
  %channels146 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %182, i32 0, i32 83, !dbg !2824
  %183 = load i32, i32* %channels146, align 4, !dbg !2824
  %mul147 = mul i32 %180, %183, !dbg !2825
  %idx.ext148 = zext i32 %mul147 to i64, !dbg !2826
  %add.ptr149 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %add.ptr142, i64 %idx.ext148, !dbg !2826
  %184 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2827
  %seq_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %184, i32 0, i32 62, !dbg !2828
  store %struct.ChannelParams* %add.ptr149, %struct.ChannelParams** %seq_channel_params, align 8, !dbg !2829
  %185 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2830
  %decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %185, i32 0, i32 42, !dbg !2831
  %186 = load %struct.DecodingParams*, %struct.DecodingParams** %decoding_params, align 8, !dbg !2831
  %187 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2832
  %frame_index150 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %187, i32 0, i32 26, !dbg !2833
  %188 = load i32, i32* %frame_index150, align 32, !dbg !2833
  %189 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2834
  %min_restart_interval151 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %189, i32 0, i32 29, !dbg !2835
  %190 = load i32, i32* %min_restart_interval151, align 4, !dbg !2835
  %div152 = udiv i32 %188, %190, !dbg !2836
  %191 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2837
  %sequence_size153 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %191, i32 0, i32 39, !dbg !2838
  %192 = load i32, i32* %sequence_size153, align 4, !dbg !2838
  %mul154 = mul i32 %div152, %192, !dbg !2839
  %193 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2840
  %num_substreams = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %193, i32 0, i32 1, !dbg !2841
  %194 = load i32, i32* %num_substreams, align 8, !dbg !2841
  %mul155 = mul i32 %mul154, %194, !dbg !2842
  %idx.ext156 = zext i32 %mul155 to i64, !dbg !2843
  %add.ptr157 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %186, i64 %idx.ext156, !dbg !2843
  %195 = load i32, i32* %seq_index, align 4, !dbg !2844
  %idxprom158 = sext i32 %195 to i64, !dbg !2845
  %196 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2845
  %seq_offset159 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %196, i32 0, i32 38, !dbg !2846
  %arrayidx160 = getelementptr inbounds [16 x i32], [16 x i32]* %seq_offset159, i64 0, i64 %idxprom158, !dbg !2845
  %197 = load i32, i32* %arrayidx160, align 4, !dbg !2845
  %198 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2847
  %num_substreams161 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %198, i32 0, i32 1, !dbg !2848
  %199 = load i32, i32* %num_substreams161, align 8, !dbg !2848
  %mul162 = mul i32 %197, %199, !dbg !2849
  %idx.ext163 = zext i32 %mul162 to i64, !dbg !2850
  %add.ptr164 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %add.ptr157, i64 %idx.ext163, !dbg !2850
  %200 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2851
  %seq_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %200, i32 0, i32 63, !dbg !2852
  store %struct.DecodingParams* %add.ptr164, %struct.DecodingParams** %seq_decoding_params, align 32, !dbg !2853
  store i32 0, i32* %index, align 4, !dbg !2854
  br label %for.cond165, !dbg !2856

for.cond165:                                      ; preds = %for.inc, %for.body
  %201 = load i32, i32* %index, align 4, !dbg !2857
  %202 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2860
  %number_of_frames166 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %202, i32 0, i32 56, !dbg !2861
  %203 = load i32, i32* %number_of_frames166, align 4, !dbg !2861
  %cmp167 = icmp ult i32 %201, %203, !dbg !2862
  br i1 %cmp167, label %for.body169, label %for.end, !dbg !2863

for.body169:                                      ; preds = %for.cond165
  %204 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2864
  %starting_frame_index170 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %204, i32 0, i32 55, !dbg !2866
  %205 = load i32, i32* %starting_frame_index170, align 16, !dbg !2866
  %206 = load i32, i32* %index, align 4, !dbg !2867
  %add171 = add i32 %205, %206, !dbg !2868
  %207 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2869
  %max_restart_interval172 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %207, i32 0, i32 28, !dbg !2870
  %208 = load i32, i32* %max_restart_interval172, align 8, !dbg !2870
  %rem173 = urem i32 %add171, %208, !dbg !2871
  %idxprom174 = zext i32 %rem173 to i64, !dbg !2872
  %209 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2872
  %frame_size175 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %209, i32 0, i32 25, !dbg !2873
  %210 = load i32*, i32** %frame_size175, align 8, !dbg !2873
  %arrayidx176 = getelementptr inbounds i32, i32* %210, i64 %idxprom174, !dbg !2872
  %211 = load i32, i32* %arrayidx176, align 4, !dbg !2872
  %212 = load i32, i32* %number_of_samples, align 4, !dbg !2874
  %add177 = add i32 %212, %211, !dbg !2874
  store i32 %add177, i32* %number_of_samples, align 4, !dbg !2874
  br label %for.inc, !dbg !2875

for.inc:                                          ; preds = %for.body169
  %213 = load i32, i32* %index, align 4, !dbg !2876
  %inc178 = add i32 %213, 1, !dbg !2876
  store i32 %inc178, i32* %index, align 4, !dbg !2876
  br label %for.cond165, !dbg !2878, !llvm.loop !2879

for.end:                                          ; preds = %for.cond165
  %214 = load i32, i32* %number_of_samples, align 4, !dbg !2881
  %215 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2882
  %number_of_samples179 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %215, i32 0, i32 57, !dbg !2883
  store i32 %214, i32* %number_of_samples179, align 8, !dbg !2884
  store i32 0, i32* %index, align 4, !dbg !2885
  br label %for.cond180, !dbg !2887

for.cond180:                                      ; preds = %for.inc197, %for.end
  %216 = load i32, i32* %index, align 4, !dbg !2888
  %217 = load i32, i32* %seq_index, align 4, !dbg !2891
  %idxprom181 = sext i32 %217 to i64, !dbg !2892
  %218 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2892
  %seq_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %218, i32 0, i32 37, !dbg !2893
  %arrayidx182 = getelementptr inbounds [16 x i32], [16 x i32]* %seq_size, i64 0, i64 %idxprom181, !dbg !2892
  %219 = load i32, i32* %arrayidx182, align 4, !dbg !2892
  %cmp183 = icmp ult i32 %216, %219, !dbg !2894
  br i1 %cmp183, label %for.body185, label %for.end199, !dbg !2895

for.body185:                                      ; preds = %for.cond180
  %220 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2896
  %221 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2898
  %seq_channel_params186 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %221, i32 0, i32 62, !dbg !2899
  %222 = load %struct.ChannelParams*, %struct.ChannelParams** %seq_channel_params186, align 8, !dbg !2899
  %223 = load i32, i32* %index, align 4, !dbg !2900
  %224 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2901
  %avctx187 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %224, i32 0, i32 0, !dbg !2902
  %225 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx187, align 32, !dbg !2902
  %channels188 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %225, i32 0, i32 83, !dbg !2903
  %226 = load i32, i32* %channels188, align 4, !dbg !2903
  %mul189 = mul i32 %223, %226, !dbg !2904
  %idx.ext190 = zext i32 %mul189 to i64, !dbg !2905
  %add.ptr191 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %222, i64 %idx.ext190, !dbg !2905
  call void @clear_channel_params(%struct.MLPEncodeContext* %220, %struct.ChannelParams* %add.ptr191), !dbg !2906
  %227 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2907
  %228 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2908
  %seq_decoding_params192 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %228, i32 0, i32 63, !dbg !2909
  %229 = load %struct.DecodingParams*, %struct.DecodingParams** %seq_decoding_params192, align 32, !dbg !2909
  %230 = load i32, i32* %index, align 4, !dbg !2910
  %231 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2911
  %num_substreams193 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %231, i32 0, i32 1, !dbg !2912
  %232 = load i32, i32* %num_substreams193, align 8, !dbg !2912
  %mul194 = mul i32 %230, %232, !dbg !2913
  %idx.ext195 = zext i32 %mul194 to i64, !dbg !2914
  %add.ptr196 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %229, i64 %idx.ext195, !dbg !2914
  call void @default_decoding_params(%struct.MLPEncodeContext* %227, %struct.DecodingParams* %add.ptr196), !dbg !2915
  br label %for.inc197, !dbg !2916

for.inc197:                                       ; preds = %for.body185
  %233 = load i32, i32* %index, align 4, !dbg !2917
  %inc198 = add i32 %233, 1, !dbg !2917
  store i32 %inc198, i32* %index, align 4, !dbg !2917
  br label %for.cond180, !dbg !2919, !llvm.loop !2920

for.end199:                                       ; preds = %for.cond180
  %234 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2922
  call void @input_to_sample_buffer(%struct.MLPEncodeContext* %234), !dbg !2923
  %235 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2924
  call void @analyze_sample_buffer(%struct.MLPEncodeContext* %235), !dbg !2925
  br label %for.inc200, !dbg !2926

for.inc200:                                       ; preds = %for.end199
  %236 = load i32, i32* %seq_index, align 4, !dbg !2927
  %inc201 = add nsw i32 %236, 1, !dbg !2927
  store i32 %inc201, i32* %seq_index, align 4, !dbg !2927
  br label %for.cond, !dbg !2928, !llvm.loop !2930

for.end202:                                       ; preds = %land.end
  %237 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2932
  %frame_index203 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %237, i32 0, i32 26, !dbg !2934
  %238 = load i32, i32* %frame_index203, align 32, !dbg !2934
  %239 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2935
  %max_restart_interval204 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %239, i32 0, i32 28, !dbg !2936
  %240 = load i32, i32* %max_restart_interval204, align 8, !dbg !2936
  %sub205 = sub i32 %240, 1, !dbg !2937
  %cmp206 = icmp eq i32 %238, %sub205, !dbg !2938
  br i1 %cmp206, label %if.then208, label %if.end217, !dbg !2939

if.then208:                                       ; preds = %for.end202
  %241 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2940
  %next_major_frame_size209 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %241, i32 0, i32 22, !dbg !2942
  %242 = load i32, i32* %next_major_frame_size209, align 4, !dbg !2942
  %243 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2943
  %major_frame_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %243, i32 0, i32 21, !dbg !2944
  store i32 %242, i32* %major_frame_size, align 32, !dbg !2945
  %244 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2946
  %next_major_frame_size210 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %244, i32 0, i32 22, !dbg !2947
  store i32 0, i32* %next_major_frame_size210, align 4, !dbg !2948
  %245 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2949
  %next_major_number_of_frames211 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %245, i32 0, i32 20, !dbg !2950
  %246 = load i32, i32* %next_major_number_of_frames211, align 4, !dbg !2950
  %247 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2951
  %major_number_of_frames = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %247, i32 0, i32 19, !dbg !2952
  store i32 %246, i32* %major_number_of_frames, align 8, !dbg !2953
  %248 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2954
  %next_major_number_of_frames212 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %248, i32 0, i32 20, !dbg !2955
  store i32 0, i32* %next_major_number_of_frames212, align 4, !dbg !2956
  %249 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2957
  %major_frame_size213 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %249, i32 0, i32 21, !dbg !2959
  %250 = load i32, i32* %major_frame_size213, align 32, !dbg !2959
  %tobool214 = icmp ne i32 %250, 0, !dbg !2957
  br i1 %tobool214, label %if.end216, label %if.then215, !dbg !2960

if.then215:                                       ; preds = %if.then208
  br label %no_data_left, !dbg !2961

if.end216:                                        ; preds = %if.then208
  br label %if.end217, !dbg !2962

if.end217:                                        ; preds = %if.end216, %for.end202
  br label %if.end218, !dbg !2963

if.end218:                                        ; preds = %if.end217, %if.end101
  br label %no_data_left, !dbg !2964

no_data_left:                                     ; preds = %if.end218, %if.then215
  %251 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2966
  %afq219 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %251, i32 0, i32 54, !dbg !2967
  %252 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2968
  %frame_size220 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %252, i32 0, i32 85, !dbg !2969
  %253 = load i32, i32* %frame_size220, align 4, !dbg !2969
  %254 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2970
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %254, i32 0, i32 1, !dbg !2971
  %255 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2972
  %duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %255, i32 0, i32 9, !dbg !2973
  call void @ff_af_queue_remove(%struct.AudioFrameQueue* %afq219, i32 %253, i64* %pts, i64* %duration), !dbg !2974
  %256 = load i32, i32* %bytes_written, align 4, !dbg !2975
  %257 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2976
  %size221 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %257, i32 0, i32 4, !dbg !2977
  store i32 %256, i32* %size221, align 8, !dbg !2978
  %258 = load i32*, i32** %got_packet.addr, align 8, !dbg !2979
  store i32 1, i32* %258, align 4, !dbg !2980
  store i32 0, i32* %retval, align 4, !dbg !2981
  br label %return, !dbg !2981

return:                                           ; preds = %no_data_left, %if.then46, %if.then18, %if.then9, %if.then2, %if.then
  %259 = load i32, i32* %retval, align 4, !dbg !2982
  ret i32 %259, !dbg !2982
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @mlp_encode_close(%struct.AVCodecContext* %avctx) #0 !dbg !2983 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ctx = alloca %struct.MLPEncodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2984, metadata !1746), !dbg !2985
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx, metadata !2986, metadata !1746), !dbg !2987
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2988
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2989
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2989
  %2 = bitcast i8* %1 to %struct.MLPEncodeContext*, !dbg !2988
  store %struct.MLPEncodeContext* %2, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2987
  %3 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2990
  %lpc_ctx = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %3, i32 0, i32 66, !dbg !2991
  call void @ff_lpc_end(%struct.LPCContext* %lpc_ctx), !dbg !2992
  %4 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2993
  %lossless_check_data = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %4, i32 0, i32 23, !dbg !2994
  %5 = bitcast i32** %lossless_check_data to i8*, !dbg !2995
  call void @av_freep(i8* %5), !dbg !2996
  %6 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !2997
  %major_scratch_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %6, i32 0, i32 16, !dbg !2998
  %7 = bitcast i32** %major_scratch_buffer to i8*, !dbg !2999
  call void @av_freep(i8* %7), !dbg !3000
  %8 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !3001
  %major_inout_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %8, i32 0, i32 13, !dbg !3002
  %9 = bitcast i32** %major_inout_buffer to i8*, !dbg !3003
  call void @av_freep(i8* %9), !dbg !3004
  %10 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !3005
  %lpc_sample_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %10, i32 0, i32 18, !dbg !3006
  %11 = bitcast i32** %lpc_sample_buffer to i8*, !dbg !3007
  call void @av_freep(i8* %11), !dbg !3008
  %12 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !3009
  %decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %12, i32 0, i32 42, !dbg !3010
  %13 = bitcast %struct.DecodingParams** %decoding_params to i8*, !dbg !3011
  call void @av_freep(i8* %13), !dbg !3012
  %14 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !3013
  %channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %14, i32 0, i32 40, !dbg !3014
  %15 = bitcast %struct.ChannelParams** %channel_params to i8*, !dbg !3015
  call void @av_freep(i8* %15), !dbg !3016
  %16 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !3017
  %frame_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %16, i32 0, i32 25, !dbg !3018
  %17 = bitcast i32** %frame_size to i8*, !dbg !3019
  call void @av_freep(i8* %17), !dbg !3020
  %18 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx, align 8, !dbg !3021
  %afq = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %18, i32 0, i32 54, !dbg !3022
  call void @ff_af_queue_close(%struct.AudioFrameQueue* %afq), !dbg !3023
  ret i32 0, !dbg !3024
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @mlp_peak_bitrate(i32 %peak_bitrate, i32 %sample_rate) #1 !dbg !3025 {
entry:
  %peak_bitrate.addr = alloca i32, align 4
  %sample_rate.addr = alloca i32, align 4
  store i32 %peak_bitrate, i32* %peak_bitrate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %peak_bitrate.addr, metadata !3028, metadata !1746), !dbg !3029
  store i32 %sample_rate, i32* %sample_rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sample_rate.addr, metadata !3030, metadata !1746), !dbg !3031
  %0 = load i32, i32* %peak_bitrate.addr, align 4, !dbg !3032
  %shl = shl i32 %0, 4, !dbg !3033
  %sub = sub nsw i32 %shl, 8, !dbg !3034
  %1 = load i32, i32* %sample_rate.addr, align 4, !dbg !3035
  %div = sdiv i32 %sub, %1, !dbg !3036
  ret i32 %div, !dbg !3037
}

declare i8* @av_malloc_array(i64, i64) #3

declare void @ff_mlp_init_crc() #3

declare noalias i8* @av_malloc(i64) #3

; Function Attrs: nounwind uwtable
define internal void @clear_channel_params(%struct.MLPEncodeContext* %ctx, %struct.ChannelParams* %channel_params) #1 !dbg !3038 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %channel_params.addr = alloca %struct.ChannelParams*, align 8
  %channel = alloca i32, align 4
  %cp = alloca %struct.ChannelParams*, align 8
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !3041, metadata !1746), !dbg !3042
  store %struct.ChannelParams* %channel_params, %struct.ChannelParams** %channel_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %channel_params.addr, metadata !3043, metadata !1746), !dbg !3044
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !3045, metadata !1746), !dbg !3046
  store i32 0, i32* %channel, align 4, !dbg !3047
  br label %for.cond, !dbg !3049

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %channel, align 4, !dbg !3050
  %1 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3053
  %avctx = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %1, i32 0, i32 0, !dbg !3054
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !3054
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 83, !dbg !3055
  %3 = load i32, i32* %channels, align 4, !dbg !3055
  %cmp = icmp ult i32 %0, %3, !dbg !3056
  br i1 %cmp, label %for.body, label %for.end, !dbg !3057

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %cp, metadata !3058, metadata !1746), !dbg !3060
  %4 = load i32, i32* %channel, align 4, !dbg !3061
  %idxprom = zext i32 %4 to i64, !dbg !3062
  %5 = load %struct.ChannelParams*, %struct.ChannelParams** %channel_params.addr, align 8, !dbg !3062
  %arrayidx = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %5, i64 %idxprom, !dbg !3062
  store %struct.ChannelParams* %arrayidx, %struct.ChannelParams** %cp, align 8, !dbg !3060
  %6 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !3063
  %filter_params = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %6, i32 0, i32 0, !dbg !3064
  %7 = bitcast [2 x %struct.FilterParams]* %filter_params to i8*, !dbg !3065
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 88, i32 4, i1 false), !dbg !3065
  %8 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !3066
  %huff_offset = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %8, i32 0, i32 2, !dbg !3067
  store i16 0, i16* %huff_offset, align 4, !dbg !3068
  %9 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !3069
  %codebook = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %9, i32 0, i32 4, !dbg !3070
  store i8 0, i8* %codebook, align 4, !dbg !3071
  %10 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !3072
  %huff_lsbs = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %10, i32 0, i32 5, !dbg !3073
  store i8 24, i8* %huff_lsbs, align 1, !dbg !3074
  br label %for.inc, !dbg !3075

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %channel, align 4, !dbg !3076
  %inc = add i32 %11, 1, !dbg !3076
  store i32 %inc, i32* %channel, align 4, !dbg !3076
  br label %for.cond, !dbg !3078, !llvm.loop !3079

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3081
}

; Function Attrs: nounwind uwtable
define internal void @clear_decoding_params(%struct.MLPEncodeContext* %ctx, %struct.DecodingParams* %decoding_params) #1 !dbg !3082 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %decoding_params.addr = alloca %struct.DecodingParams*, align 8
  %substr = alloca i32, align 4
  %dp = alloca %struct.DecodingParams*, align 8
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !3085, metadata !1746), !dbg !3086
  store %struct.DecodingParams* %decoding_params, %struct.DecodingParams** %decoding_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %decoding_params.addr, metadata !3087, metadata !1746), !dbg !3088
  call void @llvm.dbg.declare(metadata i32* %substr, metadata !3089, metadata !1746), !dbg !3090
  store i32 0, i32* %substr, align 4, !dbg !3091
  br label %for.cond, !dbg !3093

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %substr, align 4, !dbg !3094
  %1 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3097
  %num_substreams = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %1, i32 0, i32 1, !dbg !3098
  %2 = load i32, i32* %num_substreams, align 8, !dbg !3098
  %cmp = icmp ult i32 %0, %2, !dbg !3099
  br i1 %cmp, label %for.body, label %for.end, !dbg !3100

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !3101, metadata !1746), !dbg !3103
  %3 = load i32, i32* %substr, align 4, !dbg !3104
  %idxprom = zext i32 %3 to i64, !dbg !3105
  %4 = load %struct.DecodingParams*, %struct.DecodingParams** %decoding_params.addr, align 8, !dbg !3105
  %arrayidx = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %4, i64 %idxprom, !dbg !3105
  store %struct.DecodingParams* %arrayidx, %struct.DecodingParams** %dp, align 8, !dbg !3103
  %5 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !3106
  %param_presence_flags = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %5, i32 0, i32 3, !dbg !3107
  store i8 -1, i8* %param_presence_flags, align 4, !dbg !3108
  %6 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !3109
  %blocksize = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %6, i32 0, i32 0, !dbg !3110
  store i16 8, i16* %blocksize, align 4, !dbg !3111
  %7 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !3112
  %matrix_params = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %7, i32 0, i32 2, !dbg !3113
  %8 = bitcast %struct.MatrixParams* %matrix_params to i8*, !dbg !3114
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 668, i32 4, i1 false), !dbg !3114
  %9 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !3115
  %quant_step_size = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %9, i32 0, i32 1, !dbg !3116
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %quant_step_size, i32 0, i32 0, !dbg !3117
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 0, i64 8, i32 2, i1 false), !dbg !3117
  br label %for.inc, !dbg !3118

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %substr, align 4, !dbg !3119
  %inc = add i32 %10, 1, !dbg !3119
  store i32 %inc, i32* %substr, align 4, !dbg !3119
  br label %for.cond, !dbg !3121, !llvm.loop !3122

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3124
}

declare i32 @ff_lpc_init(%struct.LPCContext*, i32, i32, i32) #3

declare void @ff_af_queue_init(%struct.AVCodecContext*, %struct.AudioFrameQueue*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

declare i32 @ff_alloc_packet2(%struct.AVCodecContext*, %struct.AVPacket*, i64, i64) #3

declare i32 @ff_af_queue_add(%struct.AudioFrameQueue*, %struct.AVFrame*) #3

; Function Attrs: nounwind uwtable
define internal void @set_major_params(%struct.MLPEncodeContext* %ctx) #1 !dbg !3125 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %rh = alloca %struct.RestartHeader*, align 8
  %index = alloca i32, align 4
  %substr = alloca i32, align 4
  %max_huff_lsbs = alloca i8, align 1
  %max_output_bits = alloca i8, align 1
  %seq_dp = alloca %struct.DecodingParams*, align 8
  %seq_cp = alloca %struct.ChannelParams*, align 8
  %channel = alloca i32, align 4
  %huff_lsbs = alloca i8, align 1
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !3128, metadata !1746), !dbg !3129
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !3130, metadata !1746), !dbg !3131
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3132
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 53, !dbg !3133
  %1 = load %struct.RestartHeader*, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !3133
  store %struct.RestartHeader* %1, %struct.RestartHeader** %rh, align 8, !dbg !3131
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3134, metadata !1746), !dbg !3135
  call void @llvm.dbg.declare(metadata i32* %substr, metadata !3136, metadata !1746), !dbg !3137
  call void @llvm.dbg.declare(metadata i8* %max_huff_lsbs, metadata !3138, metadata !1746), !dbg !3139
  store i8 0, i8* %max_huff_lsbs, align 1, !dbg !3139
  call void @llvm.dbg.declare(metadata i8* %max_output_bits, metadata !3140, metadata !1746), !dbg !3141
  store i8 0, i8* %max_output_bits, align 1, !dbg !3141
  store i32 0, i32* %substr, align 4, !dbg !3142
  br label %for.cond, !dbg !3144

for.cond:                                         ; preds = %for.inc75, %entry
  %2 = load i32, i32* %substr, align 4, !dbg !3145
  %3 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3148
  %num_substreams = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %3, i32 0, i32 1, !dbg !3149
  %4 = load i32, i32* %num_substreams, align 8, !dbg !3149
  %cmp = icmp ult i32 %2, %4, !dbg !3150
  br i1 %cmp, label %for.body, label %for.end77, !dbg !3151

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %seq_dp, metadata !3152, metadata !1746), !dbg !3154
  %5 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3155
  %decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %5, i32 0, i32 42, !dbg !3156
  %6 = load %struct.DecodingParams*, %struct.DecodingParams** %decoding_params, align 8, !dbg !3156
  %7 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3157
  %restart_intervals = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %7, i32 0, i32 30, !dbg !3158
  %8 = load i32, i32* %restart_intervals, align 16, !dbg !3158
  %sub = sub i32 %8, 1, !dbg !3159
  %9 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3160
  %sequence_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %9, i32 0, i32 39, !dbg !3161
  %10 = load i32, i32* %sequence_size, align 4, !dbg !3161
  %mul = mul i32 %sub, %10, !dbg !3162
  %11 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3163
  %avctx = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %11, i32 0, i32 0, !dbg !3164
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !3164
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 83, !dbg !3165
  %13 = load i32, i32* %channels, align 4, !dbg !3165
  %mul1 = mul i32 %mul, %13, !dbg !3166
  %idx.ext = zext i32 %mul1 to i64, !dbg !3167
  %add.ptr = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %6, i64 %idx.ext, !dbg !3167
  %14 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3168
  %restart_intervals2 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %14, i32 0, i32 30, !dbg !3169
  %15 = load i32, i32* %restart_intervals2, align 16, !dbg !3169
  %sub3 = sub i32 %15, 1, !dbg !3170
  %idxprom = zext i32 %sub3 to i64, !dbg !3171
  %16 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3171
  %seq_offset = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %16, i32 0, i32 38, !dbg !3172
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %seq_offset, i64 0, i64 %idxprom, !dbg !3171
  %17 = load i32, i32* %arrayidx, align 4, !dbg !3171
  %18 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3173
  %avctx4 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %18, i32 0, i32 0, !dbg !3174
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx4, align 32, !dbg !3174
  %channels5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 83, !dbg !3175
  %20 = load i32, i32* %channels5, align 4, !dbg !3175
  %mul6 = mul i32 %17, %20, !dbg !3176
  %idx.ext7 = zext i32 %mul6 to i64, !dbg !3177
  %add.ptr8 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %add.ptr, i64 %idx.ext7, !dbg !3177
  store %struct.DecodingParams* %add.ptr8, %struct.DecodingParams** %seq_dp, align 8, !dbg !3154
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %seq_cp, metadata !3178, metadata !1746), !dbg !3179
  %21 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3180
  %channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %21, i32 0, i32 40, !dbg !3181
  %22 = load %struct.ChannelParams*, %struct.ChannelParams** %channel_params, align 32, !dbg !3181
  %23 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3182
  %restart_intervals9 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %23, i32 0, i32 30, !dbg !3183
  %24 = load i32, i32* %restart_intervals9, align 16, !dbg !3183
  %sub10 = sub i32 %24, 1, !dbg !3184
  %25 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3185
  %sequence_size11 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %25, i32 0, i32 39, !dbg !3186
  %26 = load i32, i32* %sequence_size11, align 4, !dbg !3186
  %mul12 = mul i32 %sub10, %26, !dbg !3187
  %27 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3188
  %avctx13 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %27, i32 0, i32 0, !dbg !3189
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx13, align 32, !dbg !3189
  %channels14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 83, !dbg !3190
  %29 = load i32, i32* %channels14, align 4, !dbg !3190
  %mul15 = mul i32 %mul12, %29, !dbg !3191
  %idx.ext16 = zext i32 %mul15 to i64, !dbg !3192
  %add.ptr17 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %22, i64 %idx.ext16, !dbg !3192
  %30 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3193
  %restart_intervals18 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %30, i32 0, i32 30, !dbg !3194
  %31 = load i32, i32* %restart_intervals18, align 16, !dbg !3194
  %sub19 = sub i32 %31, 1, !dbg !3195
  %idxprom20 = zext i32 %sub19 to i64, !dbg !3196
  %32 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3196
  %seq_offset21 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %32, i32 0, i32 38, !dbg !3197
  %arrayidx22 = getelementptr inbounds [16 x i32], [16 x i32]* %seq_offset21, i64 0, i64 %idxprom20, !dbg !3196
  %33 = load i32, i32* %arrayidx22, align 4, !dbg !3196
  %34 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3198
  %avctx23 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %34, i32 0, i32 0, !dbg !3199
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx23, align 32, !dbg !3199
  %channels24 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %35, i32 0, i32 83, !dbg !3200
  %36 = load i32, i32* %channels24, align 4, !dbg !3200
  %mul25 = mul i32 %33, %36, !dbg !3201
  %idx.ext26 = zext i32 %mul25 to i64, !dbg !3202
  %add.ptr27 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %add.ptr17, i64 %idx.ext26, !dbg !3202
  store %struct.ChannelParams* %add.ptr27, %struct.ChannelParams** %seq_cp, align 8, !dbg !3179
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !3203, metadata !1746), !dbg !3204
  store i32 0, i32* %index, align 4, !dbg !3205
  br label %for.cond28, !dbg !3207

for.cond28:                                       ; preds = %for.inc72, %for.body
  %37 = load i32, i32* %index, align 4, !dbg !3208
  %38 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3211
  %restart_intervals29 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %38, i32 0, i32 30, !dbg !3212
  %39 = load i32, i32* %restart_intervals29, align 16, !dbg !3212
  %sub30 = sub i32 %39, 1, !dbg !3213
  %idxprom31 = zext i32 %sub30 to i64, !dbg !3214
  %40 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3214
  %seq_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %40, i32 0, i32 37, !dbg !3215
  %arrayidx32 = getelementptr inbounds [16 x i32], [16 x i32]* %seq_size, i64 0, i64 %idxprom31, !dbg !3214
  %41 = load i32, i32* %arrayidx32, align 4, !dbg !3214
  %cmp33 = icmp ult i32 %37, %41, !dbg !3216
  br i1 %cmp33, label %for.body34, label %for.end74, !dbg !3217

for.body34:                                       ; preds = %for.cond28
  %42 = load i32, i32* %substr, align 4, !dbg !3218
  %idxprom35 = zext i32 %42 to i64, !dbg !3220
  %43 = load i32, i32* %index, align 4, !dbg !3221
  %idxprom36 = zext i32 %43 to i64, !dbg !3220
  %44 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3220
  %major_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %44, i32 0, i32 45, !dbg !3222
  %arrayidx37 = getelementptr inbounds [17 x [4 x %struct.DecodingParams]], [17 x [4 x %struct.DecodingParams]]* %major_decoding_params, i64 0, i64 %idxprom36, !dbg !3220
  %arrayidx38 = getelementptr inbounds [4 x %struct.DecodingParams], [4 x %struct.DecodingParams]* %arrayidx37, i64 0, i64 %idxprom35, !dbg !3220
  %45 = bitcast %struct.DecodingParams* %arrayidx38 to i8*, !dbg !3223
  %46 = load %struct.DecodingParams*, %struct.DecodingParams** %seq_dp, align 8, !dbg !3224
  %47 = load i32, i32* %index, align 4, !dbg !3225
  %48 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3226
  %num_substreams39 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %48, i32 0, i32 1, !dbg !3227
  %49 = load i32, i32* %num_substreams39, align 8, !dbg !3227
  %mul40 = mul i32 %47, %49, !dbg !3228
  %idx.ext41 = zext i32 %mul40 to i64, !dbg !3229
  %add.ptr42 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %46, i64 %idx.ext41, !dbg !3229
  %50 = load i32, i32* %substr, align 4, !dbg !3230
  %idx.ext43 = zext i32 %50 to i64, !dbg !3231
  %add.ptr44 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %add.ptr42, i64 %idx.ext43, !dbg !3231
  %51 = bitcast %struct.DecodingParams* %add.ptr44 to i8*, !dbg !3223
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %51, i64 684, i32 4, i1 false), !dbg !3223
  store i32 0, i32* %channel, align 4, !dbg !3232
  br label %for.cond45, !dbg !3234

for.cond45:                                       ; preds = %for.inc, %for.body34
  %52 = load i32, i32* %channel, align 4, !dbg !3235
  %53 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3238
  %avctx46 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %53, i32 0, i32 0, !dbg !3239
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx46, align 32, !dbg !3239
  %channels47 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %54, i32 0, i32 83, !dbg !3240
  %55 = load i32, i32* %channels47, align 4, !dbg !3240
  %cmp48 = icmp ult i32 %52, %55, !dbg !3241
  br i1 %cmp48, label %for.body49, label %for.end, !dbg !3242

for.body49:                                       ; preds = %for.cond45
  call void @llvm.dbg.declare(metadata i8* %huff_lsbs, metadata !3243, metadata !1746), !dbg !3245
  %56 = load %struct.ChannelParams*, %struct.ChannelParams** %seq_cp, align 8, !dbg !3246
  %57 = load i32, i32* %index, align 4, !dbg !3247
  %58 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3248
  %avctx50 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %58, i32 0, i32 0, !dbg !3249
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx50, align 32, !dbg !3249
  %channels51 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %59, i32 0, i32 83, !dbg !3250
  %60 = load i32, i32* %channels51, align 4, !dbg !3250
  %mul52 = mul i32 %57, %60, !dbg !3251
  %idx.ext53 = zext i32 %mul52 to i64, !dbg !3252
  %add.ptr54 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %56, i64 %idx.ext53, !dbg !3252
  %61 = load i32, i32* %channel, align 4, !dbg !3253
  %idx.ext55 = zext i32 %61 to i64, !dbg !3254
  %add.ptr56 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %add.ptr54, i64 %idx.ext55, !dbg !3254
  %huff_lsbs57 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %add.ptr56, i32 0, i32 5, !dbg !3255
  %62 = load i8, i8* %huff_lsbs57, align 1, !dbg !3255
  store i8 %62, i8* %huff_lsbs, align 1, !dbg !3245
  %63 = load i8, i8* %max_huff_lsbs, align 1, !dbg !3256
  %conv = zext i8 %63 to i32, !dbg !3256
  %64 = load i8, i8* %huff_lsbs, align 1, !dbg !3258
  %conv58 = zext i8 %64 to i32, !dbg !3258
  %cmp59 = icmp slt i32 %conv, %conv58, !dbg !3259
  br i1 %cmp59, label %if.then, label %if.end, !dbg !3260

if.then:                                          ; preds = %for.body49
  %65 = load i8, i8* %huff_lsbs, align 1, !dbg !3261
  store i8 %65, i8* %max_huff_lsbs, align 1, !dbg !3262
  br label %if.end, !dbg !3263

if.end:                                           ; preds = %if.then, %for.body49
  %66 = load i32, i32* %channel, align 4, !dbg !3264
  %idxprom61 = zext i32 %66 to i64, !dbg !3265
  %67 = load i32, i32* %index, align 4, !dbg !3266
  %idxprom62 = zext i32 %67 to i64, !dbg !3265
  %68 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3265
  %major_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %68, i32 0, i32 44, !dbg !3267
  %arrayidx63 = getelementptr inbounds [17 x [8 x %struct.ChannelParams]], [17 x [8 x %struct.ChannelParams]]* %major_channel_params, i64 0, i64 %idxprom62, !dbg !3265
  %arrayidx64 = getelementptr inbounds [8 x %struct.ChannelParams], [8 x %struct.ChannelParams]* %arrayidx63, i64 0, i64 %idxprom61, !dbg !3265
  %69 = bitcast %struct.ChannelParams* %arrayidx64 to i8*, !dbg !3268
  %70 = load %struct.ChannelParams*, %struct.ChannelParams** %seq_cp, align 8, !dbg !3269
  %71 = load i32, i32* %index, align 4, !dbg !3270
  %72 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3271
  %avctx65 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %72, i32 0, i32 0, !dbg !3272
  %73 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx65, align 32, !dbg !3272
  %channels66 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %73, i32 0, i32 83, !dbg !3273
  %74 = load i32, i32* %channels66, align 4, !dbg !3273
  %mul67 = mul i32 %71, %74, !dbg !3274
  %idx.ext68 = zext i32 %mul67 to i64, !dbg !3275
  %add.ptr69 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %70, i64 %idx.ext68, !dbg !3275
  %75 = load i32, i32* %channel, align 4, !dbg !3276
  %idx.ext70 = zext i32 %75 to i64, !dbg !3277
  %add.ptr71 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %add.ptr69, i64 %idx.ext70, !dbg !3277
  %76 = bitcast %struct.ChannelParams* %add.ptr71 to i8*, !dbg !3268
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %76, i64 164, i32 4, i1 false), !dbg !3268
  br label %for.inc, !dbg !3278

for.inc:                                          ; preds = %if.end
  %77 = load i32, i32* %channel, align 4, !dbg !3279
  %inc = add i32 %77, 1, !dbg !3279
  store i32 %inc, i32* %channel, align 4, !dbg !3279
  br label %for.cond45, !dbg !3281, !llvm.loop !3282

for.end:                                          ; preds = %for.cond45
  br label %for.inc72, !dbg !3284

for.inc72:                                        ; preds = %for.end
  %78 = load i32, i32* %index, align 4, !dbg !3285
  %inc73 = add i32 %78, 1, !dbg !3285
  store i32 %inc73, i32* %index, align 4, !dbg !3285
  br label %for.cond28, !dbg !3287, !llvm.loop !3288

for.end74:                                        ; preds = %for.cond28
  br label %for.inc75, !dbg !3290

for.inc75:                                        ; preds = %for.end74
  %79 = load i32, i32* %substr, align 4, !dbg !3291
  %inc76 = add i32 %79, 1, !dbg !3291
  store i32 %inc76, i32* %substr, align 4, !dbg !3291
  br label %for.cond, !dbg !3293, !llvm.loop !3294

for.end77:                                        ; preds = %for.cond
  %80 = load i8, i8* %max_huff_lsbs, align 1, !dbg !3296
  %81 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !3297
  %max_huff_lsbs78 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %81, i32 0, i32 7, !dbg !3298
  store i8 %80, i8* %max_huff_lsbs78, align 4, !dbg !3299
  store i32 0, i32* %index, align 4, !dbg !3300
  br label %for.cond79, !dbg !3302

for.cond79:                                       ; preds = %for.inc95, %for.end77
  %82 = load i32, i32* %index, align 4, !dbg !3303
  %83 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3306
  %number_of_frames = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %83, i32 0, i32 56, !dbg !3307
  %84 = load i32, i32* %number_of_frames, align 4, !dbg !3307
  %cmp80 = icmp ult i32 %82, %84, !dbg !3308
  br i1 %cmp80, label %for.body82, label %for.end97, !dbg !3309

for.body82:                                       ; preds = %for.cond79
  %85 = load i8, i8* %max_output_bits, align 1, !dbg !3310
  %conv83 = zext i8 %85 to i32, !dbg !3310
  %86 = load i32, i32* %index, align 4, !dbg !3312
  %idxprom84 = zext i32 %86 to i64, !dbg !3313
  %87 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3313
  %max_output_bits85 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %87, i32 0, i32 24, !dbg !3314
  %88 = load i32*, i32** %max_output_bits85, align 16, !dbg !3314
  %arrayidx86 = getelementptr inbounds i32, i32* %88, i64 %idxprom84, !dbg !3313
  %89 = load i32, i32* %arrayidx86, align 4, !dbg !3313
  %cmp87 = icmp ult i32 %conv83, %89, !dbg !3315
  br i1 %cmp87, label %if.then89, label %if.end94, !dbg !3316

if.then89:                                        ; preds = %for.body82
  %90 = load i32, i32* %index, align 4, !dbg !3317
  %idxprom90 = zext i32 %90 to i64, !dbg !3318
  %91 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3318
  %max_output_bits91 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %91, i32 0, i32 24, !dbg !3319
  %92 = load i32*, i32** %max_output_bits91, align 16, !dbg !3319
  %arrayidx92 = getelementptr inbounds i32, i32* %92, i64 %idxprom90, !dbg !3318
  %93 = load i32, i32* %arrayidx92, align 4, !dbg !3318
  %conv93 = trunc i32 %93 to i8, !dbg !3318
  store i8 %conv93, i8* %max_output_bits, align 1, !dbg !3320
  br label %if.end94, !dbg !3321

if.end94:                                         ; preds = %if.then89, %for.body82
  br label %for.inc95, !dbg !3322

for.inc95:                                        ; preds = %if.end94
  %94 = load i32, i32* %index, align 4, !dbg !3324
  %inc96 = add i32 %94, 1, !dbg !3324
  store i32 %inc96, i32* %index, align 4, !dbg !3324
  br label %for.cond79, !dbg !3326, !llvm.loop !3327

for.end97:                                        ; preds = %for.cond79
  %95 = load i8, i8* %max_output_bits, align 1, !dbg !3329
  %96 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !3330
  %max_output_bits98 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %96, i32 0, i32 8, !dbg !3331
  store i8 %95, i8* %max_output_bits98, align 1, !dbg !3332
  store i32 0, i32* %substr, align 4, !dbg !3333
  br label %for.cond99, !dbg !3335

for.cond99:                                       ; preds = %for.inc132, %for.end97
  %97 = load i32, i32* %substr, align 4, !dbg !3336
  %98 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3339
  %num_substreams100 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %98, i32 0, i32 1, !dbg !3340
  %99 = load i32, i32* %num_substreams100, align 8, !dbg !3340
  %cmp101 = icmp ult i32 %97, %99, !dbg !3341
  br i1 %cmp101, label %for.body103, label %for.end134, !dbg !3342

for.body103:                                      ; preds = %for.cond99
  %100 = load i32, i32* %substr, align 4, !dbg !3343
  %idxprom104 = zext i32 %100 to i64, !dbg !3345
  %101 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3345
  %restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %101, i32 0, i32 43, !dbg !3346
  %arrayidx105 = getelementptr inbounds [4 x %struct.RestartHeader], [4 x %struct.RestartHeader]* %restart_header, i64 0, i64 %idxprom104, !dbg !3345
  %102 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3347
  %cur_restart_header106 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %102, i32 0, i32 53, !dbg !3348
  store %struct.RestartHeader* %arrayidx105, %struct.RestartHeader** %cur_restart_header106, align 8, !dbg !3349
  %103 = load i32, i32* %substr, align 4, !dbg !3350
  %idxprom107 = zext i32 %103 to i64, !dbg !3351
  %arrayidx108 = getelementptr inbounds [4 x %struct.DecodingParams], [4 x %struct.DecodingParams]* @restart_decoding_params, i64 0, i64 %idxprom107, !dbg !3351
  %104 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3352
  %prev_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %104, i32 0, i32 61, !dbg !3353
  store %struct.DecodingParams* %arrayidx108, %struct.DecodingParams** %prev_decoding_params, align 16, !dbg !3354
  %105 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3355
  %prev_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %105, i32 0, i32 60, !dbg !3356
  store %struct.ChannelParams* getelementptr inbounds ([8 x %struct.ChannelParams], [8 x %struct.ChannelParams]* @restart_channel_params, i32 0, i32 0), %struct.ChannelParams** %prev_channel_params, align 8, !dbg !3357
  store i32 0, i32* %index, align 4, !dbg !3358
  br label %for.cond109, !dbg !3360

for.cond109:                                      ; preds = %for.inc129, %for.body103
  %106 = load i32, i32* %index, align 4, !dbg !3361
  %cmp110 = icmp ult i32 %106, 17, !dbg !3364
  br i1 %cmp110, label %for.body112, label %for.end131, !dbg !3365

for.body112:                                      ; preds = %for.cond109
  %107 = load i32, i32* %substr, align 4, !dbg !3366
  %idxprom113 = zext i32 %107 to i64, !dbg !3368
  %108 = load i32, i32* %index, align 4, !dbg !3369
  %idxprom114 = zext i32 %108 to i64, !dbg !3368
  %109 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3368
  %major_decoding_params115 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %109, i32 0, i32 45, !dbg !3370
  %arrayidx116 = getelementptr inbounds [17 x [4 x %struct.DecodingParams]], [17 x [4 x %struct.DecodingParams]]* %major_decoding_params115, i64 0, i64 %idxprom114, !dbg !3368
  %arrayidx117 = getelementptr inbounds [4 x %struct.DecodingParams], [4 x %struct.DecodingParams]* %arrayidx116, i64 0, i64 %idxprom113, !dbg !3368
  %110 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3371
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %110, i32 0, i32 52, !dbg !3372
  store %struct.DecodingParams* %arrayidx117, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !3373
  %111 = load i32, i32* %index, align 4, !dbg !3374
  %idxprom118 = zext i32 %111 to i64, !dbg !3375
  %112 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3375
  %major_channel_params119 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %112, i32 0, i32 44, !dbg !3376
  %arrayidx120 = getelementptr inbounds [17 x [8 x %struct.ChannelParams]], [17 x [8 x %struct.ChannelParams]]* %major_channel_params119, i64 0, i64 %idxprom118, !dbg !3375
  %arraydecay = getelementptr inbounds [8 x %struct.ChannelParams], [8 x %struct.ChannelParams]* %arrayidx120, i32 0, i32 0, !dbg !3375
  %113 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3377
  %cur_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %113, i32 0, i32 51, !dbg !3378
  store %struct.ChannelParams* %arraydecay, %struct.ChannelParams** %cur_channel_params, align 8, !dbg !3379
  %114 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3380
  %call = call i32 @compare_decoding_params(%struct.MLPEncodeContext* %114), !dbg !3381
  %115 = load i32, i32* %substr, align 4, !dbg !3382
  %idxprom121 = zext i32 %115 to i64, !dbg !3383
  %116 = load i32, i32* %index, align 4, !dbg !3384
  %idxprom122 = zext i32 %116 to i64, !dbg !3383
  %117 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3383
  %major_params_changed = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %117, i32 0, i32 46, !dbg !3385
  %arrayidx123 = getelementptr inbounds [17 x [4 x i32]], [17 x [4 x i32]]* %major_params_changed, i64 0, i64 %idxprom122, !dbg !3383
  %arrayidx124 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx123, i64 0, i64 %idxprom121, !dbg !3383
  store i32 %call, i32* %arrayidx124, align 4, !dbg !3386
  %118 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3387
  %cur_decoding_params125 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %118, i32 0, i32 52, !dbg !3388
  %119 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params125, align 32, !dbg !3388
  %120 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3389
  %prev_decoding_params126 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %120, i32 0, i32 61, !dbg !3390
  store %struct.DecodingParams* %119, %struct.DecodingParams** %prev_decoding_params126, align 16, !dbg !3391
  %121 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3392
  %cur_channel_params127 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %121, i32 0, i32 51, !dbg !3393
  %122 = load %struct.ChannelParams*, %struct.ChannelParams** %cur_channel_params127, align 8, !dbg !3393
  %123 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3394
  %prev_channel_params128 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %123, i32 0, i32 60, !dbg !3395
  store %struct.ChannelParams* %122, %struct.ChannelParams** %prev_channel_params128, align 8, !dbg !3396
  br label %for.inc129, !dbg !3397

for.inc129:                                       ; preds = %for.body112
  %124 = load i32, i32* %index, align 4, !dbg !3398
  %inc130 = add i32 %124, 1, !dbg !3398
  store i32 %inc130, i32* %index, align 4, !dbg !3398
  br label %for.cond109, !dbg !3400, !llvm.loop !3401

for.end131:                                       ; preds = %for.cond109
  br label %for.inc132, !dbg !3403

for.inc132:                                       ; preds = %for.end131
  %125 = load i32, i32* %substr, align 4, !dbg !3404
  %inc133 = add i32 %125, 1, !dbg !3404
  store i32 %inc133, i32* %substr, align 4, !dbg !3404
  br label %for.cond99, !dbg !3406, !llvm.loop !3407

for.end134:                                       ; preds = %for.cond99
  %126 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3409
  %number_of_subblocks = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %126, i32 0, i32 58, !dbg !3410
  %127 = load i32, i32* %number_of_subblocks, align 4, !dbg !3410
  %128 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3411
  %major_number_of_subblocks = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %128, i32 0, i32 49, !dbg !3412
  store i32 %127, i32* %major_number_of_subblocks, align 8, !dbg !3413
  %129 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3414
  %major_filter_state_subblock = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %129, i32 0, i32 48, !dbg !3415
  store i32 1, i32* %major_filter_state_subblock, align 4, !dbg !3416
  %130 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3417
  %major_cur_subblock_index = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %130, i32 0, i32 47, !dbg !3418
  store i32 0, i32* %major_cur_subblock_index, align 32, !dbg !3419
  ret void, !dbg !3420
}

; Function Attrs: nounwind uwtable
define internal void @process_major_frame(%struct.MLPEncodeContext* %ctx) #1 !dbg !3421 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %substr = alloca i32, align 4
  %rh = alloca %struct.RestartHeader*, align 8
  %channel = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !3422, metadata !1746), !dbg !3423
  call void @llvm.dbg.declare(metadata i32* %substr, metadata !3424, metadata !1746), !dbg !3425
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3426
  %major_inout_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 13, !dbg !3427
  %1 = load i32*, i32** %major_inout_buffer, align 8, !dbg !3427
  %2 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3428
  %sample_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %2, i32 0, i32 15, !dbg !3429
  store i32* %1, i32** %sample_buffer, align 8, !dbg !3430
  %3 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3431
  %starting_frame_index = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %3, i32 0, i32 55, !dbg !3432
  store i32 0, i32* %starting_frame_index, align 16, !dbg !3433
  %4 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3434
  %major_number_of_frames = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %4, i32 0, i32 19, !dbg !3435
  %5 = load i32, i32* %major_number_of_frames, align 8, !dbg !3435
  %6 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3436
  %number_of_frames = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %6, i32 0, i32 56, !dbg !3437
  store i32 %5, i32* %number_of_frames, align 4, !dbg !3438
  %7 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3439
  %major_frame_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %7, i32 0, i32 21, !dbg !3440
  %8 = load i32, i32* %major_frame_size, align 32, !dbg !3440
  %9 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3441
  %number_of_samples = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %9, i32 0, i32 57, !dbg !3442
  store i32 %8, i32* %number_of_samples, align 8, !dbg !3443
  store i32 0, i32* %substr, align 4, !dbg !3444
  br label %for.cond, !dbg !3446

for.cond:                                         ; preds = %for.inc11, %entry
  %10 = load i32, i32* %substr, align 4, !dbg !3447
  %11 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3450
  %num_substreams = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %11, i32 0, i32 1, !dbg !3451
  %12 = load i32, i32* %num_substreams, align 8, !dbg !3451
  %cmp = icmp ult i32 %10, %12, !dbg !3452
  br i1 %cmp, label %for.body, label %for.end13, !dbg !3453

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !3454, metadata !1746), !dbg !3456
  %13 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3457
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %13, i32 0, i32 53, !dbg !3458
  %14 = load %struct.RestartHeader*, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !3458
  store %struct.RestartHeader* %14, %struct.RestartHeader** %rh, align 8, !dbg !3456
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !3459, metadata !1746), !dbg !3460
  %15 = load i32, i32* %substr, align 4, !dbg !3461
  %idxprom = zext i32 %15 to i64, !dbg !3462
  %16 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3462
  %restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %16, i32 0, i32 43, !dbg !3463
  %arrayidx = getelementptr inbounds [4 x %struct.RestartHeader], [4 x %struct.RestartHeader]* %restart_header, i64 0, i64 %idxprom, !dbg !3462
  %17 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3464
  %cur_restart_header1 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %17, i32 0, i32 53, !dbg !3465
  store %struct.RestartHeader* %arrayidx, %struct.RestartHeader** %cur_restart_header1, align 8, !dbg !3466
  %18 = load i32, i32* %substr, align 4, !dbg !3467
  %idxprom2 = zext i32 %18 to i64, !dbg !3468
  %19 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3468
  %major_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %19, i32 0, i32 45, !dbg !3469
  %arrayidx3 = getelementptr inbounds [17 x [4 x %struct.DecodingParams]], [17 x [4 x %struct.DecodingParams]]* %major_decoding_params, i64 0, i64 1, !dbg !3468
  %arrayidx4 = getelementptr inbounds [4 x %struct.DecodingParams], [4 x %struct.DecodingParams]* %arrayidx3, i64 0, i64 %idxprom2, !dbg !3468
  %20 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3470
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %20, i32 0, i32 52, !dbg !3471
  store %struct.DecodingParams* %arrayidx4, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !3472
  %21 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3473
  %major_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %21, i32 0, i32 44, !dbg !3474
  %arrayidx5 = getelementptr inbounds [17 x [8 x %struct.ChannelParams]], [17 x [8 x %struct.ChannelParams]]* %major_channel_params, i64 0, i64 1, !dbg !3473
  %arraydecay = getelementptr inbounds [8 x %struct.ChannelParams], [8 x %struct.ChannelParams]* %arrayidx5, i32 0, i32 0, !dbg !3473
  %22 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3475
  %cur_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %22, i32 0, i32 51, !dbg !3476
  store %struct.ChannelParams* %arraydecay, %struct.ChannelParams** %cur_channel_params, align 8, !dbg !3477
  %23 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3478
  call void @generate_2_noise_channels(%struct.MLPEncodeContext* %23), !dbg !3479
  %24 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3480
  call void @rematrix_channels(%struct.MLPEncodeContext* %24), !dbg !3481
  %25 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !3482
  %min_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %25, i32 0, i32 0, !dbg !3484
  %26 = load i8, i8* %min_channel, align 4, !dbg !3484
  %conv = zext i8 %26 to i32, !dbg !3482
  store i32 %conv, i32* %channel, align 4, !dbg !3485
  br label %for.cond6, !dbg !3486

for.cond6:                                        ; preds = %for.inc, %for.body
  %27 = load i32, i32* %channel, align 4, !dbg !3487
  %28 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !3490
  %max_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %28, i32 0, i32 1, !dbg !3491
  %29 = load i8, i8* %max_channel, align 1, !dbg !3491
  %conv7 = zext i8 %29 to i32, !dbg !3490
  %cmp8 = icmp ule i32 %27, %conv7, !dbg !3492
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !3493

for.body10:                                       ; preds = %for.cond6
  %30 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3494
  %31 = load i32, i32* %channel, align 4, !dbg !3495
  %call = call i32 @apply_filter(%struct.MLPEncodeContext* %30, i32 %31), !dbg !3496
  br label %for.inc, !dbg !3496

for.inc:                                          ; preds = %for.body10
  %32 = load i32, i32* %channel, align 4, !dbg !3497
  %inc = add i32 %32, 1, !dbg !3497
  store i32 %inc, i32* %channel, align 4, !dbg !3497
  br label %for.cond6, !dbg !3499, !llvm.loop !3500

for.end:                                          ; preds = %for.cond6
  br label %for.inc11, !dbg !3502

for.inc11:                                        ; preds = %for.end
  %33 = load i32, i32* %substr, align 4, !dbg !3503
  %inc12 = add i32 %33, 1, !dbg !3503
  store i32 %inc12, i32* %substr, align 4, !dbg !3503
  br label %for.cond, !dbg !3505, !llvm.loop !3506

for.end13:                                        ; preds = %for.cond
  ret void, !dbg !3508
}

; Function Attrs: nounwind uwtable
define internal i32 @write_access_unit(%struct.MLPEncodeContext* %ctx, i8* %buf, i32 %buf_size, i32 %restart_frame) #1 !dbg !3509 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %restart_frame.addr = alloca i32, align 4
  %substream_data_len = alloca [4 x i16], align 2
  %buf1 = alloca i8*, align 8
  %buf0 = alloca i8*, align 8
  %substr = alloca i32, align 4
  %total_length = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !3512, metadata !1746), !dbg !3513
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !3514, metadata !1746), !dbg !3515
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !3516, metadata !1746), !dbg !3517
  store i32 %restart_frame, i32* %restart_frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %restart_frame.addr, metadata !3518, metadata !1746), !dbg !3519
  call void @llvm.dbg.declare(metadata [4 x i16]* %substream_data_len, metadata !3520, metadata !1746), !dbg !3522
  call void @llvm.dbg.declare(metadata i8** %buf1, metadata !3523, metadata !1746), !dbg !3524
  call void @llvm.dbg.declare(metadata i8** %buf0, metadata !3525, metadata !1746), !dbg !3526
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !3527
  store i8* %0, i8** %buf0, align 8, !dbg !3526
  call void @llvm.dbg.declare(metadata i32* %substr, metadata !3528, metadata !1746), !dbg !3529
  call void @llvm.dbg.declare(metadata i32* %total_length, metadata !3530, metadata !1746), !dbg !3531
  %1 = load i32, i32* %buf_size.addr, align 4, !dbg !3532
  %cmp = icmp slt i32 %1, 4, !dbg !3534
  br i1 %cmp, label %if.then, label %if.end, !dbg !3535

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !3536
  br label %return, !dbg !3536

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !3537
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 4, !dbg !3537
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !3537
  %3 = load i32, i32* %buf_size.addr, align 4, !dbg !3538
  %sub = sub nsw i32 %3, 4, !dbg !3538
  store i32 %sub, i32* %buf_size.addr, align 4, !dbg !3538
  %4 = load i32, i32* %restart_frame.addr, align 4, !dbg !3539
  %tobool = icmp ne i32 %4, 0, !dbg !3539
  br i1 %tobool, label %if.then1, label %if.end7, !dbg !3541

if.then1:                                         ; preds = %if.end
  %5 = load i32, i32* %buf_size.addr, align 4, !dbg !3542
  %cmp2 = icmp slt i32 %5, 28, !dbg !3545
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3546

if.then3:                                         ; preds = %if.then1
  store i32 -1, i32* %retval, align 4, !dbg !3547
  br label %return, !dbg !3547

if.end4:                                          ; preds = %if.then1
  %6 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3548
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !3549
  %8 = load i32, i32* %buf_size.addr, align 4, !dbg !3550
  call void @write_major_sync(%struct.MLPEncodeContext* %6, i8* %7, i32 %8), !dbg !3551
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !3552
  %add.ptr5 = getelementptr inbounds i8, i8* %9, i64 28, !dbg !3552
  store i8* %add.ptr5, i8** %buf.addr, align 8, !dbg !3552
  %10 = load i32, i32* %buf_size.addr, align 4, !dbg !3553
  %sub6 = sub nsw i32 %10, 28, !dbg !3553
  store i32 %sub6, i32* %buf_size.addr, align 4, !dbg !3553
  br label %if.end7, !dbg !3554

if.end7:                                          ; preds = %if.end4, %if.end
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !3555
  store i8* %11, i8** %buf1, align 8, !dbg !3556
  store i32 0, i32* %substr, align 4, !dbg !3557
  br label %for.cond, !dbg !3559

for.cond:                                         ; preds = %for.inc, %if.end7
  %12 = load i32, i32* %substr, align 4, !dbg !3560
  %13 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3563
  %num_substreams = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %13, i32 0, i32 1, !dbg !3564
  %14 = load i32, i32* %num_substreams, align 8, !dbg !3564
  %cmp8 = icmp ult i32 %12, %14, !dbg !3565
  br i1 %cmp8, label %for.body, label %for.end, !dbg !3566

for.body:                                         ; preds = %for.cond
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !3567
  %add.ptr9 = getelementptr inbounds i8, i8* %15, i64 2, !dbg !3567
  store i8* %add.ptr9, i8** %buf.addr, align 8, !dbg !3567
  %16 = load i32, i32* %buf_size.addr, align 4, !dbg !3569
  %sub10 = sub nsw i32 %16, 2, !dbg !3569
  store i32 %sub10, i32* %buf_size.addr, align 4, !dbg !3569
  br label %for.inc, !dbg !3570

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %substr, align 4, !dbg !3571
  %inc = add i32 %17, 1, !dbg !3571
  store i32 %inc, i32* %substr, align 4, !dbg !3571
  br label %for.cond, !dbg !3573, !llvm.loop !3574

for.end:                                          ; preds = %for.cond
  %18 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3576
  %19 = load i8*, i8** %buf.addr, align 8, !dbg !3577
  %20 = load i32, i32* %buf_size.addr, align 4, !dbg !3578
  %21 = load i32, i32* %restart_frame.addr, align 4, !dbg !3579
  %arraydecay = getelementptr inbounds [4 x i16], [4 x i16]* %substream_data_len, i32 0, i32 0, !dbg !3580
  %call = call i8* @write_substrs(%struct.MLPEncodeContext* %18, i8* %19, i32 %20, i32 %21, i16* %arraydecay), !dbg !3581
  store i8* %call, i8** %buf.addr, align 8, !dbg !3582
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !3583
  %23 = load i8*, i8** %buf0, align 8, !dbg !3584
  %sub.ptr.lhs.cast = ptrtoint i8* %22 to i64, !dbg !3585
  %sub.ptr.rhs.cast = ptrtoint i8* %23 to i64, !dbg !3585
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3585
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !3583
  store i32 %conv, i32* %total_length, align 4, !dbg !3586
  %24 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3587
  %25 = load i8*, i8** %buf0, align 8, !dbg !3588
  %26 = load i8*, i8** %buf1, align 8, !dbg !3589
  %27 = load i32, i32* %total_length, align 4, !dbg !3590
  %div = sdiv i32 %27, 2, !dbg !3591
  %28 = load i32, i32* %restart_frame.addr, align 4, !dbg !3592
  %arraydecay11 = getelementptr inbounds [4 x i16], [4 x i16]* %substream_data_len, i32 0, i32 0, !dbg !3593
  call void @write_frame_headers(%struct.MLPEncodeContext* %24, i8* %25, i8* %26, i32 %div, i32 %28, i16* %arraydecay11), !dbg !3594
  %29 = load i32, i32* %total_length, align 4, !dbg !3595
  store i32 %29, i32* %retval, align 4, !dbg !3596
  br label %return, !dbg !3596

return:                                           ; preds = %for.end, %if.then3, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !3597
  ret i32 %30, !dbg !3597
}

; Function Attrs: nounwind uwtable
define internal void @input_data(%struct.MLPEncodeContext* %ctx, i8* %samples) #1 !dbg !3598 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %samples.addr = alloca i8*, align 8
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !3601, metadata !1746), !dbg !3602
  store i8* %samples, i8** %samples.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %samples.addr, metadata !3603, metadata !1746), !dbg !3604
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3605
  %avctx = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 0, !dbg !3607
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !3607
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 84, !dbg !3608
  %2 = load i32, i32* %sample_fmt, align 8, !dbg !3608
  %cmp = icmp eq i32 %2, 2, !dbg !3609
  br i1 %cmp, label %if.then, label %if.else, !dbg !3610

if.then:                                          ; preds = %entry
  %3 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3611
  %4 = load i8*, i8** %samples.addr, align 8, !dbg !3612
  call void @input_data_internal(%struct.MLPEncodeContext* %3, i8* %4, i32 1), !dbg !3613
  br label %if.end, !dbg !3613

if.else:                                          ; preds = %entry
  %5 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3614
  %6 = load i8*, i8** %samples.addr, align 8, !dbg !3615
  call void @input_data_internal(%struct.MLPEncodeContext* %5, i8* %6, i32 0), !dbg !3616
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3617
}

; Function Attrs: nounwind uwtable
define internal void @default_decoding_params(%struct.MLPEncodeContext* %ctx, %struct.DecodingParams* %decoding_params) #1 !dbg !3618 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %decoding_params.addr = alloca %struct.DecodingParams*, align 8
  %substr = alloca i32, align 4
  %dp = alloca %struct.DecodingParams*, align 8
  %param_presence_flags = alloca i8, align 1
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !3619, metadata !1746), !dbg !3620
  store %struct.DecodingParams* %decoding_params, %struct.DecodingParams** %decoding_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %decoding_params.addr, metadata !3621, metadata !1746), !dbg !3622
  call void @llvm.dbg.declare(metadata i32* %substr, metadata !3623, metadata !1746), !dbg !3624
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3625
  %1 = load %struct.DecodingParams*, %struct.DecodingParams** %decoding_params.addr, align 8, !dbg !3626
  call void @clear_decoding_params(%struct.MLPEncodeContext* %0, %struct.DecodingParams* %1), !dbg !3627
  store i32 0, i32* %substr, align 4, !dbg !3628
  br label %for.cond, !dbg !3630

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %substr, align 4, !dbg !3631
  %3 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3634
  %num_substreams = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %3, i32 0, i32 1, !dbg !3635
  %4 = load i32, i32* %num_substreams, align 8, !dbg !3635
  %cmp = icmp ult i32 %2, %4, !dbg !3636
  br i1 %cmp, label %for.body, label %for.end, !dbg !3637

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !3638, metadata !1746), !dbg !3640
  %5 = load i32, i32* %substr, align 4, !dbg !3641
  %idxprom = zext i32 %5 to i64, !dbg !3642
  %6 = load %struct.DecodingParams*, %struct.DecodingParams** %decoding_params.addr, align 8, !dbg !3642
  %arrayidx = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %6, i64 %idxprom, !dbg !3642
  store %struct.DecodingParams* %arrayidx, %struct.DecodingParams** %dp, align 8, !dbg !3640
  call void @llvm.dbg.declare(metadata i8* %param_presence_flags, metadata !3643, metadata !1746), !dbg !3644
  store i8 0, i8* %param_presence_flags, align 1, !dbg !3644
  %7 = load i8, i8* %param_presence_flags, align 1, !dbg !3645
  %conv = zext i8 %7 to i32, !dbg !3645
  %or = or i32 %conv, 128, !dbg !3645
  %conv1 = trunc i32 %or to i8, !dbg !3645
  store i8 %conv1, i8* %param_presence_flags, align 1, !dbg !3645
  %8 = load i8, i8* %param_presence_flags, align 1, !dbg !3646
  %conv2 = zext i8 %8 to i32, !dbg !3646
  %or3 = or i32 %conv2, 64, !dbg !3646
  %conv4 = trunc i32 %or3 to i8, !dbg !3646
  store i8 %conv4, i8* %param_presence_flags, align 1, !dbg !3646
  %9 = load i8, i8* %param_presence_flags, align 1, !dbg !3647
  %conv5 = zext i8 %9 to i32, !dbg !3647
  %or6 = or i32 %conv5, 32, !dbg !3647
  %conv7 = trunc i32 %or6 to i8, !dbg !3647
  store i8 %conv7, i8* %param_presence_flags, align 1, !dbg !3647
  %10 = load i8, i8* %param_presence_flags, align 1, !dbg !3648
  %conv8 = zext i8 %10 to i32, !dbg !3648
  %or9 = or i32 %conv8, 16, !dbg !3648
  %conv10 = trunc i32 %or9 to i8, !dbg !3648
  store i8 %conv10, i8* %param_presence_flags, align 1, !dbg !3648
  %11 = load i8, i8* %param_presence_flags, align 1, !dbg !3649
  %conv11 = zext i8 %11 to i32, !dbg !3649
  %or12 = or i32 %conv11, 8, !dbg !3649
  %conv13 = trunc i32 %or12 to i8, !dbg !3649
  store i8 %conv13, i8* %param_presence_flags, align 1, !dbg !3649
  %12 = load i8, i8* %param_presence_flags, align 1, !dbg !3650
  %conv14 = zext i8 %12 to i32, !dbg !3650
  %or15 = or i32 %conv14, 2, !dbg !3650
  %conv16 = trunc i32 %or15 to i8, !dbg !3650
  store i8 %conv16, i8* %param_presence_flags, align 1, !dbg !3650
  %13 = load i8, i8* %param_presence_flags, align 1, !dbg !3651
  %conv17 = zext i8 %13 to i32, !dbg !3651
  %or18 = or i32 %conv17, 1, !dbg !3651
  %conv19 = trunc i32 %or18 to i8, !dbg !3651
  store i8 %conv19, i8* %param_presence_flags, align 1, !dbg !3651
  %14 = load i8, i8* %param_presence_flags, align 1, !dbg !3652
  %15 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !3653
  %param_presence_flags20 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %15, i32 0, i32 3, !dbg !3654
  store i8 %14, i8* %param_presence_flags20, align 4, !dbg !3655
  br label %for.inc, !dbg !3656

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %substr, align 4, !dbg !3657
  %inc = add i32 %16, 1, !dbg !3657
  store i32 %inc, i32* %substr, align 4, !dbg !3657
  br label %for.cond, !dbg !3659, !llvm.loop !3660

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3662
}

; Function Attrs: nounwind uwtable
define internal void @input_to_sample_buffer(%struct.MLPEncodeContext* %ctx) #1 !dbg !3663 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %sample_buffer = alloca i32*, align 8
  %index = alloca i32, align 4
  %cur_index = alloca i32, align 4
  %input_buffer = alloca i32*, align 8
  %i = alloca i32, align 4
  %channel = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !3664, metadata !1746), !dbg !3665
  call void @llvm.dbg.declare(metadata i32** %sample_buffer, metadata !3666, metadata !1746), !dbg !3667
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3668
  %sample_buffer1 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 15, !dbg !3669
  %1 = load i32*, i32** %sample_buffer1, align 8, !dbg !3669
  store i32* %1, i32** %sample_buffer, align 8, !dbg !3667
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3670, metadata !1746), !dbg !3671
  store i32 0, i32* %index, align 4, !dbg !3672
  br label %for.cond, !dbg !3674

for.cond:                                         ; preds = %for.inc14, %entry
  %2 = load i32, i32* %index, align 4, !dbg !3675
  %3 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3678
  %number_of_frames = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %3, i32 0, i32 56, !dbg !3679
  %4 = load i32, i32* %number_of_frames, align 4, !dbg !3679
  %cmp = icmp ult i32 %2, %4, !dbg !3680
  br i1 %cmp, label %for.body, label %for.end16, !dbg !3681

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %cur_index, metadata !3682, metadata !1746), !dbg !3684
  %5 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3685
  %starting_frame_index = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %5, i32 0, i32 55, !dbg !3686
  %6 = load i32, i32* %starting_frame_index, align 16, !dbg !3686
  %7 = load i32, i32* %index, align 4, !dbg !3687
  %add = add i32 %6, %7, !dbg !3688
  %8 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3689
  %max_restart_interval = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %8, i32 0, i32 28, !dbg !3690
  %9 = load i32, i32* %max_restart_interval, align 8, !dbg !3690
  %rem = urem i32 %add, %9, !dbg !3691
  store i32 %rem, i32* %cur_index, align 4, !dbg !3684
  call void @llvm.dbg.declare(metadata i32** %input_buffer, metadata !3692, metadata !1746), !dbg !3693
  %10 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3694
  %inout_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %10, i32 0, i32 12, !dbg !3695
  %11 = load i32*, i32** %inout_buffer, align 32, !dbg !3695
  %12 = load i32, i32* %cur_index, align 4, !dbg !3696
  %13 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3697
  %one_sample_buffer_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %13, i32 0, i32 27, !dbg !3698
  %14 = load i32, i32* %one_sample_buffer_size, align 4, !dbg !3698
  %mul = mul i32 %12, %14, !dbg !3699
  %idx.ext = zext i32 %mul to i64, !dbg !3700
  %add.ptr = getelementptr inbounds i32, i32* %11, i64 %idx.ext, !dbg !3700
  store i32* %add.ptr, i32** %input_buffer, align 8, !dbg !3693
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3701, metadata !1746), !dbg !3702
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !3703, metadata !1746), !dbg !3704
  store i32 0, i32* %i, align 4, !dbg !3705
  br label %for.cond2, !dbg !3707

for.cond2:                                        ; preds = %for.inc11, %for.body
  %15 = load i32, i32* %i, align 4, !dbg !3708
  %16 = load i32, i32* %cur_index, align 4, !dbg !3711
  %idxprom = zext i32 %16 to i64, !dbg !3712
  %17 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3712
  %frame_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %17, i32 0, i32 25, !dbg !3713
  %18 = load i32*, i32** %frame_size, align 8, !dbg !3713
  %arrayidx = getelementptr inbounds i32, i32* %18, i64 %idxprom, !dbg !3712
  %19 = load i32, i32* %arrayidx, align 4, !dbg !3712
  %cmp3 = icmp ult i32 %15, %19, !dbg !3714
  br i1 %cmp3, label %for.body4, label %for.end13, !dbg !3715

for.body4:                                        ; preds = %for.cond2
  store i32 0, i32* %channel, align 4, !dbg !3716
  br label %for.cond5, !dbg !3719

for.cond5:                                        ; preds = %for.inc, %for.body4
  %20 = load i32, i32* %channel, align 4, !dbg !3720
  %21 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3723
  %avctx = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %21, i32 0, i32 0, !dbg !3724
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !3724
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 83, !dbg !3725
  %23 = load i32, i32* %channels, align 4, !dbg !3725
  %cmp6 = icmp ult i32 %20, %23, !dbg !3726
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !3727

for.body7:                                        ; preds = %for.cond5
  %24 = load i32*, i32** %input_buffer, align 8, !dbg !3728
  %incdec.ptr = getelementptr inbounds i32, i32* %24, i32 1, !dbg !3728
  store i32* %incdec.ptr, i32** %input_buffer, align 8, !dbg !3728
  %25 = load i32, i32* %24, align 4, !dbg !3729
  %26 = load i32*, i32** %sample_buffer, align 8, !dbg !3730
  %incdec.ptr8 = getelementptr inbounds i32, i32* %26, i32 1, !dbg !3730
  store i32* %incdec.ptr8, i32** %sample_buffer, align 8, !dbg !3730
  store i32 %25, i32* %26, align 4, !dbg !3731
  br label %for.inc, !dbg !3732

for.inc:                                          ; preds = %for.body7
  %27 = load i32, i32* %channel, align 4, !dbg !3733
  %inc = add i32 %27, 1, !dbg !3733
  store i32 %inc, i32* %channel, align 4, !dbg !3733
  br label %for.cond5, !dbg !3735, !llvm.loop !3736

for.end:                                          ; preds = %for.cond5
  %28 = load i32*, i32** %sample_buffer, align 8, !dbg !3738
  %add.ptr9 = getelementptr inbounds i32, i32* %28, i64 2, !dbg !3738
  store i32* %add.ptr9, i32** %sample_buffer, align 8, !dbg !3738
  %29 = load i32*, i32** %input_buffer, align 8, !dbg !3739
  %add.ptr10 = getelementptr inbounds i32, i32* %29, i64 2, !dbg !3739
  store i32* %add.ptr10, i32** %input_buffer, align 8, !dbg !3739
  br label %for.inc11, !dbg !3740

for.inc11:                                        ; preds = %for.end
  %30 = load i32, i32* %i, align 4, !dbg !3741
  %inc12 = add i32 %30, 1, !dbg !3741
  store i32 %inc12, i32* %i, align 4, !dbg !3741
  br label %for.cond2, !dbg !3743, !llvm.loop !3744

for.end13:                                        ; preds = %for.cond2
  br label %for.inc14, !dbg !3746

for.inc14:                                        ; preds = %for.end13
  %31 = load i32, i32* %index, align 4, !dbg !3747
  %inc15 = add i32 %31, 1, !dbg !3747
  store i32 %inc15, i32* %index, align 4, !dbg !3747
  br label %for.cond, !dbg !3749, !llvm.loop !3750

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !3752
}

; Function Attrs: nounwind uwtable
define internal void @analyze_sample_buffer(%struct.MLPEncodeContext* %ctx) #1 !dbg !3753 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %seq_cp = alloca %struct.ChannelParams*, align 8
  %seq_dp = alloca %struct.DecodingParams*, align 8
  %index = alloca i32, align 4
  %substr = alloca i32, align 4
  %dp = alloca %struct.DecodingParams*, align 8
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !3754, metadata !1746), !dbg !3755
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %seq_cp, metadata !3756, metadata !1746), !dbg !3757
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3758
  %seq_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 62, !dbg !3759
  %1 = load %struct.ChannelParams*, %struct.ChannelParams** %seq_channel_params, align 8, !dbg !3759
  store %struct.ChannelParams* %1, %struct.ChannelParams** %seq_cp, align 8, !dbg !3757
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %seq_dp, metadata !3760, metadata !1746), !dbg !3761
  %2 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3762
  %seq_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %2, i32 0, i32 63, !dbg !3763
  %3 = load %struct.DecodingParams*, %struct.DecodingParams** %seq_decoding_params, align 32, !dbg !3763
  store %struct.DecodingParams* %3, %struct.DecodingParams** %seq_dp, align 8, !dbg !3761
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3764, metadata !1746), !dbg !3765
  call void @llvm.dbg.declare(metadata i32* %substr, metadata !3766, metadata !1746), !dbg !3767
  store i32 0, i32* %substr, align 4, !dbg !3768
  br label %for.cond, !dbg !3770

for.cond:                                         ; preds = %for.inc58, %entry
  %4 = load i32, i32* %substr, align 4, !dbg !3771
  %5 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3774
  %num_substreams = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %5, i32 0, i32 1, !dbg !3775
  %6 = load i32, i32* %num_substreams, align 8, !dbg !3775
  %cmp = icmp ult i32 %4, %6, !dbg !3776
  br i1 %cmp, label %for.body, label %for.end60, !dbg !3777

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %substr, align 4, !dbg !3778
  %idxprom = zext i32 %7 to i64, !dbg !3780
  %8 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3780
  %restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %8, i32 0, i32 43, !dbg !3781
  %arrayidx = getelementptr inbounds [4 x %struct.RestartHeader], [4 x %struct.RestartHeader]* %restart_header, i64 0, i64 %idxprom, !dbg !3780
  %9 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3782
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %9, i32 0, i32 53, !dbg !3783
  store %struct.RestartHeader* %arrayidx, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !3784
  %10 = load %struct.DecodingParams*, %struct.DecodingParams** %seq_dp, align 8, !dbg !3785
  %11 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3786
  %num_substreams1 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %11, i32 0, i32 1, !dbg !3787
  %12 = load i32, i32* %num_substreams1, align 8, !dbg !3787
  %mul = mul nsw i32 1, %12, !dbg !3788
  %idx.ext = sext i32 %mul to i64, !dbg !3789
  %add.ptr = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %10, i64 %idx.ext, !dbg !3789
  %13 = load i32, i32* %substr, align 4, !dbg !3790
  %idx.ext2 = zext i32 %13 to i64, !dbg !3791
  %add.ptr3 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %add.ptr, i64 %idx.ext2, !dbg !3791
  %14 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3792
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %14, i32 0, i32 52, !dbg !3793
  store %struct.DecodingParams* %add.ptr3, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !3794
  %15 = load %struct.ChannelParams*, %struct.ChannelParams** %seq_cp, align 8, !dbg !3795
  %16 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3796
  %avctx = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %16, i32 0, i32 0, !dbg !3797
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !3797
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 83, !dbg !3798
  %18 = load i32, i32* %channels, align 4, !dbg !3798
  %mul4 = mul nsw i32 1, %18, !dbg !3799
  %idx.ext5 = sext i32 %mul4 to i64, !dbg !3800
  %add.ptr6 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %15, i64 %idx.ext5, !dbg !3800
  %19 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3801
  %cur_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %19, i32 0, i32 51, !dbg !3802
  store %struct.ChannelParams* %add.ptr6, %struct.ChannelParams** %cur_channel_params, align 8, !dbg !3803
  %20 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3804
  call void @determine_quant_step_size(%struct.MLPEncodeContext* %20), !dbg !3805
  %21 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3806
  call void @generate_2_noise_channels(%struct.MLPEncodeContext* %21), !dbg !3807
  %22 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3808
  call void @lossless_matrix_coeffs(%struct.MLPEncodeContext* %22), !dbg !3809
  %23 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3810
  call void @rematrix_channels(%struct.MLPEncodeContext* %23), !dbg !3811
  %24 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3812
  call void @determine_filters(%struct.MLPEncodeContext* %24), !dbg !3813
  %25 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3814
  call void @apply_filters(%struct.MLPEncodeContext* %25), !dbg !3815
  %26 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3816
  %27 = load i32, i32* %substr, align 4, !dbg !3817
  call void @copy_restart_frame_params(%struct.MLPEncodeContext* %26, i32 %27), !dbg !3818
  store i32 0, i32* %index, align 4, !dbg !3819
  br label %for.cond7, !dbg !3821

for.cond7:                                        ; preds = %for.inc, %for.body
  %28 = load i32, i32* %index, align 4, !dbg !3822
  %29 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3825
  %number_of_frames = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %29, i32 0, i32 56, !dbg !3826
  %30 = load i32, i32* %number_of_frames, align 4, !dbg !3826
  %cmp8 = icmp ult i32 %28, %30, !dbg !3827
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !3828

for.body9:                                        ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !3829, metadata !1746), !dbg !3831
  %31 = load %struct.DecodingParams*, %struct.DecodingParams** %seq_dp, align 8, !dbg !3832
  %32 = load i32, i32* %index, align 4, !dbg !3833
  %add = add i32 %32, 1, !dbg !3834
  %33 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3835
  %num_substreams10 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %33, i32 0, i32 1, !dbg !3836
  %34 = load i32, i32* %num_substreams10, align 8, !dbg !3836
  %mul11 = mul i32 %add, %34, !dbg !3837
  %idx.ext12 = zext i32 %mul11 to i64, !dbg !3838
  %add.ptr13 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %31, i64 %idx.ext12, !dbg !3838
  %35 = load i32, i32* %substr, align 4, !dbg !3839
  %idx.ext14 = zext i32 %35 to i64, !dbg !3840
  %add.ptr15 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %add.ptr13, i64 %idx.ext14, !dbg !3840
  store %struct.DecodingParams* %add.ptr15, %struct.DecodingParams** %dp, align 8, !dbg !3831
  %36 = load i32, i32* %index, align 4, !dbg !3841
  %idxprom16 = zext i32 %36 to i64, !dbg !3842
  %37 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3842
  %frame_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %37, i32 0, i32 25, !dbg !3843
  %38 = load i32*, i32** %frame_size, align 8, !dbg !3843
  %arrayidx17 = getelementptr inbounds i32, i32* %38, i64 %idxprom16, !dbg !3842
  %39 = load i32, i32* %arrayidx17, align 4, !dbg !3842
  %conv = trunc i32 %39 to i16, !dbg !3842
  %40 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !3844
  %blocksize = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %40, i32 0, i32 0, !dbg !3845
  store i16 %conv, i16* %blocksize, align 4, !dbg !3846
  br label %for.inc, !dbg !3847

for.inc:                                          ; preds = %for.body9
  %41 = load i32, i32* %index, align 4, !dbg !3848
  %inc = add i32 %41, 1, !dbg !3848
  store i32 %inc, i32* %index, align 4, !dbg !3848
  br label %for.cond7, !dbg !3850, !llvm.loop !3851

for.end:                                          ; preds = %for.cond7
  %42 = load %struct.DecodingParams*, %struct.DecodingParams** %seq_dp, align 8, !dbg !3853
  %43 = load i32, i32* %substr, align 4, !dbg !3854
  %idx.ext18 = zext i32 %43 to i64, !dbg !3855
  %add.ptr19 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %42, i64 %idx.ext18, !dbg !3855
  %blocksize20 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %add.ptr19, i32 0, i32 0, !dbg !3856
  store i16 8, i16* %blocksize20, align 4, !dbg !3857
  %44 = load %struct.DecodingParams*, %struct.DecodingParams** %seq_dp, align 8, !dbg !3858
  %45 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3859
  %num_substreams21 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %45, i32 0, i32 1, !dbg !3860
  %46 = load i32, i32* %num_substreams21, align 8, !dbg !3860
  %mul22 = mul nsw i32 1, %46, !dbg !3861
  %idx.ext23 = sext i32 %mul22 to i64, !dbg !3862
  %add.ptr24 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %44, i64 %idx.ext23, !dbg !3862
  %47 = load i32, i32* %substr, align 4, !dbg !3863
  %idx.ext25 = zext i32 %47 to i64, !dbg !3864
  %add.ptr26 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %add.ptr24, i64 %idx.ext25, !dbg !3864
  %blocksize27 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %add.ptr26, i32 0, i32 0, !dbg !3865
  %48 = load i16, i16* %blocksize27, align 4, !dbg !3866
  %conv28 = zext i16 %48 to i32, !dbg !3866
  %sub = sub nsw i32 %conv28, 8, !dbg !3866
  %conv29 = trunc i32 %sub to i16, !dbg !3866
  store i16 %conv29, i16* %blocksize27, align 4, !dbg !3866
  store i32 0, i32* %index, align 4, !dbg !3867
  br label %for.cond30, !dbg !3869

for.cond30:                                       ; preds = %for.inc55, %for.end
  %49 = load i32, i32* %index, align 4, !dbg !3870
  %50 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3873
  %number_of_subblocks = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %50, i32 0, i32 58, !dbg !3874
  %51 = load i32, i32* %number_of_subblocks, align 4, !dbg !3874
  %cmp31 = icmp ult i32 %49, %51, !dbg !3875
  br i1 %cmp31, label %for.body33, label %for.end57, !dbg !3876

for.body33:                                       ; preds = %for.cond30
  %52 = load %struct.DecodingParams*, %struct.DecodingParams** %seq_dp, align 8, !dbg !3877
  %53 = load i32, i32* %index, align 4, !dbg !3879
  %54 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3880
  %num_substreams34 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %54, i32 0, i32 1, !dbg !3881
  %55 = load i32, i32* %num_substreams34, align 8, !dbg !3881
  %mul35 = mul i32 %53, %55, !dbg !3882
  %idx.ext36 = zext i32 %mul35 to i64, !dbg !3883
  %add.ptr37 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %52, i64 %idx.ext36, !dbg !3883
  %56 = load i32, i32* %substr, align 4, !dbg !3884
  %idx.ext38 = zext i32 %56 to i64, !dbg !3885
  %add.ptr39 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %add.ptr37, i64 %idx.ext38, !dbg !3885
  %57 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3886
  %cur_decoding_params40 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %57, i32 0, i32 52, !dbg !3887
  store %struct.DecodingParams* %add.ptr39, %struct.DecodingParams** %cur_decoding_params40, align 32, !dbg !3888
  %58 = load %struct.ChannelParams*, %struct.ChannelParams** %seq_cp, align 8, !dbg !3889
  %59 = load i32, i32* %index, align 4, !dbg !3890
  %60 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3891
  %avctx41 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %60, i32 0, i32 0, !dbg !3892
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx41, align 32, !dbg !3892
  %channels42 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %61, i32 0, i32 83, !dbg !3893
  %62 = load i32, i32* %channels42, align 4, !dbg !3893
  %mul43 = mul i32 %59, %62, !dbg !3894
  %idx.ext44 = zext i32 %mul43 to i64, !dbg !3895
  %add.ptr45 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %58, i64 %idx.ext44, !dbg !3895
  %63 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3896
  %cur_channel_params46 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %63, i32 0, i32 51, !dbg !3897
  store %struct.ChannelParams* %add.ptr45, %struct.ChannelParams** %cur_channel_params46, align 8, !dbg !3898
  %64 = load i32, i32* %index, align 4, !dbg !3899
  %idxprom47 = zext i32 %64 to i64, !dbg !3900
  %65 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3900
  %best_offset = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %65, i32 0, i32 41, !dbg !3901
  %arrayidx48 = getelementptr inbounds [17 x [8 x [4 x %struct.BestOffset]]], [17 x [8 x [4 x %struct.BestOffset]]]* %best_offset, i64 0, i64 %idxprom47, !dbg !3900
  %arraydecay = getelementptr inbounds [8 x [4 x %struct.BestOffset]], [8 x [4 x %struct.BestOffset]]* %arrayidx48, i32 0, i32 0, !dbg !3900
  %66 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3902
  %cur_best_offset = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %66, i32 0, i32 50, !dbg !3903
  store [4 x %struct.BestOffset]* %arraydecay, [4 x %struct.BestOffset]** %cur_best_offset, align 16, !dbg !3904
  %67 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3905
  call void @determine_bits(%struct.MLPEncodeContext* %67), !dbg !3906
  %68 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3907
  %cur_decoding_params49 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %68, i32 0, i32 52, !dbg !3908
  %69 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params49, align 32, !dbg !3908
  %blocksize50 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %69, i32 0, i32 0, !dbg !3909
  %70 = load i16, i16* %blocksize50, align 4, !dbg !3909
  %conv51 = zext i16 %70 to i32, !dbg !3907
  %71 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3910
  %num_channels = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %71, i32 0, i32 2, !dbg !3911
  %72 = load i32, i32* %num_channels, align 4, !dbg !3911
  %mul52 = mul nsw i32 %conv51, %72, !dbg !3912
  %73 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3913
  %sample_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %73, i32 0, i32 15, !dbg !3914
  %74 = load i32*, i32** %sample_buffer, align 8, !dbg !3915
  %idx.ext53 = sext i32 %mul52 to i64, !dbg !3915
  %add.ptr54 = getelementptr inbounds i32, i32* %74, i64 %idx.ext53, !dbg !3915
  store i32* %add.ptr54, i32** %sample_buffer, align 8, !dbg !3915
  br label %for.inc55, !dbg !3916

for.inc55:                                        ; preds = %for.body33
  %75 = load i32, i32* %index, align 4, !dbg !3917
  %inc56 = add i32 %75, 1, !dbg !3917
  store i32 %inc56, i32* %index, align 4, !dbg !3917
  br label %for.cond30, !dbg !3919, !llvm.loop !3920

for.end57:                                        ; preds = %for.cond30
  %76 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3922
  call void @set_best_codebook(%struct.MLPEncodeContext* %76), !dbg !3923
  br label %for.inc58, !dbg !3924

for.inc58:                                        ; preds = %for.end57
  %77 = load i32, i32* %substr, align 4, !dbg !3925
  %inc59 = add i32 %77, 1, !dbg !3925
  store i32 %inc59, i32* %substr, align 4, !dbg !3925
  br label %for.cond, !dbg !3927, !llvm.loop !3928

for.end60:                                        ; preds = %for.cond
  ret void, !dbg !3930
}

declare void @ff_af_queue_remove(%struct.AudioFrameQueue*, i32, i64*, i64*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @compare_decoding_params(%struct.MLPEncodeContext* %ctx) #1 !dbg !3931 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %prev = alloca %struct.DecodingParams*, align 8
  %dp = alloca %struct.DecodingParams*, align 8
  %prev_mp = alloca %struct.MatrixParams*, align 8
  %mp = alloca %struct.MatrixParams*, align 8
  %rh = alloca %struct.RestartHeader*, align 8
  %ch = alloca i32, align 4
  %retval2 = alloca i32, align 4
  %prev_cp = alloca %struct.ChannelParams*, align 8
  %cp = alloca %struct.ChannelParams*, align 8
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !3934, metadata !1746), !dbg !3935
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %prev, metadata !3936, metadata !1746), !dbg !3937
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3938
  %prev_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 61, !dbg !3939
  %1 = load %struct.DecodingParams*, %struct.DecodingParams** %prev_decoding_params, align 16, !dbg !3939
  store %struct.DecodingParams* %1, %struct.DecodingParams** %prev, align 8, !dbg !3937
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !3940, metadata !1746), !dbg !3941
  %2 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3942
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %2, i32 0, i32 52, !dbg !3943
  %3 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !3943
  store %struct.DecodingParams* %3, %struct.DecodingParams** %dp, align 8, !dbg !3941
  call void @llvm.dbg.declare(metadata %struct.MatrixParams** %prev_mp, metadata !3944, metadata !1746), !dbg !3946
  %4 = load %struct.DecodingParams*, %struct.DecodingParams** %prev, align 8, !dbg !3947
  %matrix_params = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %4, i32 0, i32 2, !dbg !3948
  store %struct.MatrixParams* %matrix_params, %struct.MatrixParams** %prev_mp, align 8, !dbg !3946
  call void @llvm.dbg.declare(metadata %struct.MatrixParams** %mp, metadata !3949, metadata !1746), !dbg !3950
  %5 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !3951
  %matrix_params1 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %5, i32 0, i32 2, !dbg !3952
  store %struct.MatrixParams* %matrix_params1, %struct.MatrixParams** %mp, align 8, !dbg !3950
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !3953, metadata !1746), !dbg !3954
  %6 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3955
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %6, i32 0, i32 53, !dbg !3956
  %7 = load %struct.RestartHeader*, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !3956
  store %struct.RestartHeader* %7, %struct.RestartHeader** %rh, align 8, !dbg !3954
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3957, metadata !1746), !dbg !3958
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !3959, metadata !1746), !dbg !3960
  store i32 0, i32* %retval2, align 4, !dbg !3960
  %8 = load %struct.DecodingParams*, %struct.DecodingParams** %prev, align 8, !dbg !3961
  %param_presence_flags = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %8, i32 0, i32 3, !dbg !3963
  %9 = load i8, i8* %param_presence_flags, align 4, !dbg !3963
  %conv = zext i8 %9 to i32, !dbg !3961
  %10 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !3964
  %param_presence_flags3 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %10, i32 0, i32 3, !dbg !3965
  %11 = load i8, i8* %param_presence_flags3, align 4, !dbg !3965
  %conv4 = zext i8 %11 to i32, !dbg !3964
  %cmp = icmp ne i32 %conv, %conv4, !dbg !3966
  br i1 %cmp, label %if.then, label %if.end, !dbg !3967

if.then:                                          ; preds = %entry
  %12 = load i32, i32* %retval2, align 4, !dbg !3968
  %or = or i32 %12, 256, !dbg !3968
  store i32 %or, i32* %retval2, align 4, !dbg !3968
  br label %if.end, !dbg !3969

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.DecodingParams*, %struct.DecodingParams** %prev, align 8, !dbg !3970
  %blocksize = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %13, i32 0, i32 0, !dbg !3972
  %14 = load i16, i16* %blocksize, align 4, !dbg !3972
  %conv6 = zext i16 %14 to i32, !dbg !3970
  %15 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !3973
  %blocksize7 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %15, i32 0, i32 0, !dbg !3974
  %16 = load i16, i16* %blocksize7, align 4, !dbg !3974
  %conv8 = zext i16 %16 to i32, !dbg !3973
  %cmp9 = icmp ne i32 %conv6, %conv8, !dbg !3975
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !3976

if.then11:                                        ; preds = %if.end
  %17 = load i32, i32* %retval2, align 4, !dbg !3977
  %or12 = or i32 %17, 128, !dbg !3977
  store i32 %or12, i32* %retval2, align 4, !dbg !3977
  br label %if.end13, !dbg !3978

if.end13:                                         ; preds = %if.then11, %if.end
  %18 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !3979
  %19 = load %struct.MatrixParams*, %struct.MatrixParams** %prev_mp, align 8, !dbg !3981
  %20 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !3982
  %call = call i32 @compare_matrix_params(%struct.MLPEncodeContext* %18, %struct.MatrixParams* %19, %struct.MatrixParams* %20), !dbg !3983
  %tobool = icmp ne i32 %call, 0, !dbg !3983
  br i1 %tobool, label %if.then14, label %if.end16, !dbg !3984

if.then14:                                        ; preds = %if.end13
  %21 = load i32, i32* %retval2, align 4, !dbg !3985
  %or15 = or i32 %21, 64, !dbg !3985
  store i32 %or15, i32* %retval2, align 4, !dbg !3985
  br label %if.end16, !dbg !3986

if.end16:                                         ; preds = %if.then14, %if.end13
  store i32 0, i32* %ch, align 4, !dbg !3987
  br label %for.cond, !dbg !3989

for.cond:                                         ; preds = %for.inc, %if.end16
  %22 = load i32, i32* %ch, align 4, !dbg !3990
  %23 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !3993
  %max_matrix_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %23, i32 0, i32 2, !dbg !3994
  %24 = load i8, i8* %max_matrix_channel, align 2, !dbg !3994
  %conv17 = zext i8 %24 to i32, !dbg !3993
  %cmp18 = icmp ule i32 %22, %conv17, !dbg !3995
  br i1 %cmp18, label %for.body, label %for.end, !dbg !3996

for.body:                                         ; preds = %for.cond
  %25 = load i32, i32* %ch, align 4, !dbg !3997
  %idxprom = zext i32 %25 to i64, !dbg !3999
  %26 = load %struct.MatrixParams*, %struct.MatrixParams** %prev_mp, align 8, !dbg !3999
  %shift = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %26, i32 0, i32 5, !dbg !4000
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %shift, i64 0, i64 %idxprom, !dbg !3999
  %27 = load i8, i8* %arrayidx, align 1, !dbg !3999
  %conv20 = sext i8 %27 to i32, !dbg !3999
  %28 = load i32, i32* %ch, align 4, !dbg !4001
  %idxprom21 = zext i32 %28 to i64, !dbg !4002
  %29 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !4002
  %shift22 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %29, i32 0, i32 5, !dbg !4003
  %arrayidx23 = getelementptr inbounds [8 x i8], [8 x i8]* %shift22, i64 0, i64 %idxprom21, !dbg !4002
  %30 = load i8, i8* %arrayidx23, align 1, !dbg !4002
  %conv24 = sext i8 %30 to i32, !dbg !4002
  %cmp25 = icmp ne i32 %conv20, %conv24, !dbg !4004
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !4005

if.then27:                                        ; preds = %for.body
  %31 = load i32, i32* %retval2, align 4, !dbg !4006
  %or28 = or i32 %31, 32, !dbg !4006
  store i32 %or28, i32* %retval2, align 4, !dbg !4006
  br label %for.end, !dbg !4008

if.end29:                                         ; preds = %for.body
  br label %for.inc, !dbg !4009

for.inc:                                          ; preds = %if.end29
  %32 = load i32, i32* %ch, align 4, !dbg !4011
  %inc = add i32 %32, 1, !dbg !4011
  store i32 %inc, i32* %ch, align 4, !dbg !4011
  br label %for.cond, !dbg !4013, !llvm.loop !4014

for.end:                                          ; preds = %if.then27, %for.cond
  store i32 0, i32* %ch, align 4, !dbg !4016
  br label %for.cond30, !dbg !4018

for.cond30:                                       ; preds = %for.inc47, %for.end
  %33 = load i32, i32* %ch, align 4, !dbg !4019
  %34 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !4022
  %max_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %34, i32 0, i32 1, !dbg !4023
  %35 = load i8, i8* %max_channel, align 1, !dbg !4023
  %conv31 = zext i8 %35 to i32, !dbg !4022
  %cmp32 = icmp ule i32 %33, %conv31, !dbg !4024
  br i1 %cmp32, label %for.body34, label %for.end49, !dbg !4025

for.body34:                                       ; preds = %for.cond30
  %36 = load i32, i32* %ch, align 4, !dbg !4026
  %idxprom35 = zext i32 %36 to i64, !dbg !4028
  %37 = load %struct.DecodingParams*, %struct.DecodingParams** %prev, align 8, !dbg !4028
  %quant_step_size = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %37, i32 0, i32 1, !dbg !4029
  %arrayidx36 = getelementptr inbounds [8 x i8], [8 x i8]* %quant_step_size, i64 0, i64 %idxprom35, !dbg !4028
  %38 = load i8, i8* %arrayidx36, align 1, !dbg !4028
  %conv37 = zext i8 %38 to i32, !dbg !4028
  %39 = load i32, i32* %ch, align 4, !dbg !4030
  %idxprom38 = zext i32 %39 to i64, !dbg !4031
  %40 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !4031
  %quant_step_size39 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %40, i32 0, i32 1, !dbg !4032
  %arrayidx40 = getelementptr inbounds [8 x i8], [8 x i8]* %quant_step_size39, i64 0, i64 %idxprom38, !dbg !4031
  %41 = load i8, i8* %arrayidx40, align 1, !dbg !4031
  %conv41 = zext i8 %41 to i32, !dbg !4031
  %cmp42 = icmp ne i32 %conv37, %conv41, !dbg !4033
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !4034

if.then44:                                        ; preds = %for.body34
  %42 = load i32, i32* %retval2, align 4, !dbg !4035
  %or45 = or i32 %42, 16, !dbg !4035
  store i32 %or45, i32* %retval2, align 4, !dbg !4035
  br label %for.end49, !dbg !4037

if.end46:                                         ; preds = %for.body34
  br label %for.inc47, !dbg !4038

for.inc47:                                        ; preds = %if.end46
  %43 = load i32, i32* %ch, align 4, !dbg !4040
  %inc48 = add i32 %43, 1, !dbg !4040
  store i32 %inc48, i32* %ch, align 4, !dbg !4040
  br label %for.cond30, !dbg !4042, !llvm.loop !4043

for.end49:                                        ; preds = %if.then44, %for.cond30
  %44 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !4045
  %min_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %44, i32 0, i32 0, !dbg !4047
  %45 = load i8, i8* %min_channel, align 4, !dbg !4047
  %conv50 = zext i8 %45 to i32, !dbg !4045
  store i32 %conv50, i32* %ch, align 4, !dbg !4048
  br label %for.cond51, !dbg !4049

for.cond51:                                       ; preds = %for.inc96, %for.end49
  %46 = load i32, i32* %ch, align 4, !dbg !4050
  %47 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !4053
  %max_channel52 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %47, i32 0, i32 1, !dbg !4054
  %48 = load i8, i8* %max_channel52, align 1, !dbg !4054
  %conv53 = zext i8 %48 to i32, !dbg !4053
  %cmp54 = icmp ule i32 %46, %conv53, !dbg !4055
  br i1 %cmp54, label %for.body56, label %for.end98, !dbg !4056

for.body56:                                       ; preds = %for.cond51
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %prev_cp, metadata !4057, metadata !1746), !dbg !4059
  %49 = load i32, i32* %ch, align 4, !dbg !4060
  %idxprom57 = zext i32 %49 to i64, !dbg !4061
  %50 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4061
  %prev_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %50, i32 0, i32 60, !dbg !4062
  %51 = load %struct.ChannelParams*, %struct.ChannelParams** %prev_channel_params, align 8, !dbg !4062
  %arrayidx58 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %51, i64 %idxprom57, !dbg !4061
  store %struct.ChannelParams* %arrayidx58, %struct.ChannelParams** %prev_cp, align 8, !dbg !4059
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %cp, metadata !4063, metadata !1746), !dbg !4064
  %52 = load i32, i32* %ch, align 4, !dbg !4065
  %idxprom59 = zext i32 %52 to i64, !dbg !4066
  %53 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4066
  %cur_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %53, i32 0, i32 51, !dbg !4067
  %54 = load %struct.ChannelParams*, %struct.ChannelParams** %cur_channel_params, align 8, !dbg !4067
  %arrayidx60 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %54, i64 %idxprom59, !dbg !4066
  store %struct.ChannelParams* %arrayidx60, %struct.ChannelParams** %cp, align 8, !dbg !4064
  %55 = load i32, i32* %retval2, align 4, !dbg !4068
  %and = and i32 %55, 8, !dbg !4070
  %tobool61 = icmp ne i32 %and, 0, !dbg !4070
  br i1 %tobool61, label %if.end66, label %land.lhs.true, !dbg !4071

land.lhs.true:                                    ; preds = %for.body56
  %56 = load %struct.ChannelParams*, %struct.ChannelParams** %prev_cp, align 8, !dbg !4072
  %57 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !4073
  %call62 = call i32 @compare_filter_params(%struct.ChannelParams* %56, %struct.ChannelParams* %57, i32 0), !dbg !4074
  %tobool63 = icmp ne i32 %call62, 0, !dbg !4074
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !4075

if.then64:                                        ; preds = %land.lhs.true
  %58 = load i32, i32* %retval2, align 4, !dbg !4077
  %or65 = or i32 %58, 8, !dbg !4077
  store i32 %or65, i32* %retval2, align 4, !dbg !4077
  br label %if.end66, !dbg !4078

if.end66:                                         ; preds = %if.then64, %land.lhs.true, %for.body56
  %59 = load i32, i32* %retval2, align 4, !dbg !4079
  %and67 = and i32 %59, 4, !dbg !4081
  %tobool68 = icmp ne i32 %and67, 0, !dbg !4081
  br i1 %tobool68, label %if.end74, label %land.lhs.true69, !dbg !4082

land.lhs.true69:                                  ; preds = %if.end66
  %60 = load %struct.ChannelParams*, %struct.ChannelParams** %prev_cp, align 8, !dbg !4083
  %61 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !4084
  %call70 = call i32 @compare_filter_params(%struct.ChannelParams* %60, %struct.ChannelParams* %61, i32 1), !dbg !4085
  %tobool71 = icmp ne i32 %call70, 0, !dbg !4085
  br i1 %tobool71, label %if.then72, label %if.end74, !dbg !4086

if.then72:                                        ; preds = %land.lhs.true69
  %62 = load i32, i32* %retval2, align 4, !dbg !4087
  %or73 = or i32 %62, 4, !dbg !4087
  store i32 %or73, i32* %retval2, align 4, !dbg !4087
  br label %if.end74, !dbg !4088

if.end74:                                         ; preds = %if.then72, %land.lhs.true69, %if.end66
  %63 = load %struct.ChannelParams*, %struct.ChannelParams** %prev_cp, align 8, !dbg !4089
  %huff_offset = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %63, i32 0, i32 2, !dbg !4091
  %64 = load i16, i16* %huff_offset, align 4, !dbg !4091
  %conv75 = sext i16 %64 to i32, !dbg !4089
  %65 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !4092
  %huff_offset76 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %65, i32 0, i32 2, !dbg !4093
  %66 = load i16, i16* %huff_offset76, align 4, !dbg !4093
  %conv77 = sext i16 %66 to i32, !dbg !4092
  %cmp78 = icmp ne i32 %conv75, %conv77, !dbg !4094
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !4095

if.then80:                                        ; preds = %if.end74
  %67 = load i32, i32* %retval2, align 4, !dbg !4096
  %or81 = or i32 %67, 2, !dbg !4096
  store i32 %or81, i32* %retval2, align 4, !dbg !4096
  br label %if.end82, !dbg !4097

if.end82:                                         ; preds = %if.then80, %if.end74
  %68 = load %struct.ChannelParams*, %struct.ChannelParams** %prev_cp, align 8, !dbg !4098
  %codebook = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %68, i32 0, i32 4, !dbg !4100
  %69 = load i8, i8* %codebook, align 4, !dbg !4100
  %conv83 = zext i8 %69 to i32, !dbg !4098
  %70 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !4101
  %codebook84 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %70, i32 0, i32 4, !dbg !4102
  %71 = load i8, i8* %codebook84, align 4, !dbg !4102
  %conv85 = zext i8 %71 to i32, !dbg !4101
  %cmp86 = icmp ne i32 %conv83, %conv85, !dbg !4103
  br i1 %cmp86, label %if.then93, label %lor.lhs.false, !dbg !4104

lor.lhs.false:                                    ; preds = %if.end82
  %72 = load %struct.ChannelParams*, %struct.ChannelParams** %prev_cp, align 8, !dbg !4105
  %huff_lsbs = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %72, i32 0, i32 5, !dbg !4106
  %73 = load i8, i8* %huff_lsbs, align 1, !dbg !4106
  %conv88 = zext i8 %73 to i32, !dbg !4105
  %74 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !4107
  %huff_lsbs89 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %74, i32 0, i32 5, !dbg !4108
  %75 = load i8, i8* %huff_lsbs89, align 1, !dbg !4108
  %conv90 = zext i8 %75 to i32, !dbg !4107
  %cmp91 = icmp ne i32 %conv88, %conv90, !dbg !4109
  br i1 %cmp91, label %if.then93, label %if.end95, !dbg !4110

if.then93:                                        ; preds = %lor.lhs.false, %if.end82
  %76 = load i32, i32* %retval2, align 4, !dbg !4111
  %or94 = or i32 %76, 1, !dbg !4111
  store i32 %or94, i32* %retval2, align 4, !dbg !4111
  br label %if.end95, !dbg !4112

if.end95:                                         ; preds = %if.then93, %lor.lhs.false
  br label %for.inc96, !dbg !4113

for.inc96:                                        ; preds = %if.end95
  %77 = load i32, i32* %ch, align 4, !dbg !4114
  %inc97 = add i32 %77, 1, !dbg !4114
  store i32 %inc97, i32* %ch, align 4, !dbg !4114
  br label %for.cond51, !dbg !4116, !llvm.loop !4117

for.end98:                                        ; preds = %for.cond51
  %78 = load i32, i32* %retval2, align 4, !dbg !4119
  ret i32 %78, !dbg !4120
}

; Function Attrs: nounwind uwtable
define internal i32 @compare_matrix_params(%struct.MLPEncodeContext* %ctx, %struct.MatrixParams* %prev, %struct.MatrixParams* %mp) #1 !dbg !4121 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %prev.addr = alloca %struct.MatrixParams*, align 8
  %mp.addr = alloca %struct.MatrixParams*, align 8
  %rh = alloca %struct.RestartHeader*, align 8
  %channel = alloca i32, align 4
  %mat = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !4126, metadata !1746), !dbg !4127
  store %struct.MatrixParams* %prev, %struct.MatrixParams** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatrixParams** %prev.addr, metadata !4128, metadata !1746), !dbg !4129
  store %struct.MatrixParams* %mp, %struct.MatrixParams** %mp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatrixParams** %mp.addr, metadata !4130, metadata !1746), !dbg !4131
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !4132, metadata !1746), !dbg !4133
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4134
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 53, !dbg !4135
  %1 = load %struct.RestartHeader*, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !4135
  store %struct.RestartHeader* %1, %struct.RestartHeader** %rh, align 8, !dbg !4133
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !4136, metadata !1746), !dbg !4137
  call void @llvm.dbg.declare(metadata i32* %mat, metadata !4138, metadata !1746), !dbg !4139
  %2 = load %struct.MatrixParams*, %struct.MatrixParams** %prev.addr, align 8, !dbg !4140
  %count = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %2, i32 0, i32 0, !dbg !4142
  %3 = load i8, i8* %count, align 4, !dbg !4142
  %conv = zext i8 %3 to i32, !dbg !4140
  %4 = load %struct.MatrixParams*, %struct.MatrixParams** %mp.addr, align 8, !dbg !4143
  %count1 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %4, i32 0, i32 0, !dbg !4144
  %5 = load i8, i8* %count1, align 4, !dbg !4144
  %conv2 = zext i8 %5 to i32, !dbg !4143
  %cmp = icmp ne i32 %conv, %conv2, !dbg !4145
  br i1 %cmp, label %if.then, label %if.end, !dbg !4146

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !4147
  br label %return, !dbg !4147

if.end:                                           ; preds = %entry
  %6 = load %struct.MatrixParams*, %struct.MatrixParams** %prev.addr, align 8, !dbg !4148
  %count4 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %6, i32 0, i32 0, !dbg !4150
  %7 = load i8, i8* %count4, align 4, !dbg !4150
  %tobool = icmp ne i8 %7, 0, !dbg !4148
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !4151

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4152
  br label %return, !dbg !4152

if.end6:                                          ; preds = %if.end
  %8 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !4153
  %min_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %8, i32 0, i32 0, !dbg !4155
  %9 = load i8, i8* %min_channel, align 4, !dbg !4155
  %conv7 = zext i8 %9 to i32, !dbg !4153
  store i32 %conv7, i32* %channel, align 4, !dbg !4156
  br label %for.cond, !dbg !4157

for.cond:                                         ; preds = %for.inc, %if.end6
  %10 = load i32, i32* %channel, align 4, !dbg !4158
  %11 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !4161
  %max_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %11, i32 0, i32 1, !dbg !4162
  %12 = load i8, i8* %max_channel, align 1, !dbg !4162
  %conv8 = zext i8 %12 to i32, !dbg !4161
  %cmp9 = icmp ule i32 %10, %conv8, !dbg !4163
  br i1 %cmp9, label %for.body, label %for.end, !dbg !4164

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %channel, align 4, !dbg !4165
  %idxprom = zext i32 %13 to i64, !dbg !4167
  %14 = load %struct.MatrixParams*, %struct.MatrixParams** %prev.addr, align 8, !dbg !4167
  %fbits = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %14, i32 0, i32 4, !dbg !4168
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %fbits, i64 0, i64 %idxprom, !dbg !4167
  %15 = load i8, i8* %arrayidx, align 1, !dbg !4167
  %conv11 = zext i8 %15 to i32, !dbg !4167
  %16 = load i32, i32* %channel, align 4, !dbg !4169
  %idxprom12 = zext i32 %16 to i64, !dbg !4170
  %17 = load %struct.MatrixParams*, %struct.MatrixParams** %mp.addr, align 8, !dbg !4170
  %fbits13 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %17, i32 0, i32 4, !dbg !4171
  %arrayidx14 = getelementptr inbounds [8 x i8], [8 x i8]* %fbits13, i64 0, i64 %idxprom12, !dbg !4170
  %18 = load i8, i8* %arrayidx14, align 1, !dbg !4170
  %conv15 = zext i8 %18 to i32, !dbg !4170
  %cmp16 = icmp ne i32 %conv11, %conv15, !dbg !4172
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !4173

if.then18:                                        ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !4174
  br label %return, !dbg !4174

if.end19:                                         ; preds = %for.body
  br label %for.inc, !dbg !4175

for.inc:                                          ; preds = %if.end19
  %19 = load i32, i32* %channel, align 4, !dbg !4177
  %inc = add i32 %19, 1, !dbg !4177
  store i32 %inc, i32* %channel, align 4, !dbg !4177
  br label %for.cond, !dbg !4179, !llvm.loop !4180

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %mat, align 4, !dbg !4182
  br label %for.cond20, !dbg !4184

for.cond20:                                       ; preds = %for.inc57, %for.end
  %20 = load i32, i32* %mat, align 4, !dbg !4185
  %21 = load %struct.MatrixParams*, %struct.MatrixParams** %mp.addr, align 8, !dbg !4188
  %count21 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %21, i32 0, i32 0, !dbg !4189
  %22 = load i8, i8* %count21, align 4, !dbg !4189
  %conv22 = zext i8 %22 to i32, !dbg !4188
  %cmp23 = icmp ult i32 %20, %conv22, !dbg !4190
  br i1 %cmp23, label %for.body25, label %for.end59, !dbg !4191

for.body25:                                       ; preds = %for.cond20
  %23 = load i32, i32* %mat, align 4, !dbg !4192
  %idxprom26 = zext i32 %23 to i64, !dbg !4195
  %24 = load %struct.MatrixParams*, %struct.MatrixParams** %prev.addr, align 8, !dbg !4195
  %outch = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %24, i32 0, i32 1, !dbg !4196
  %arrayidx27 = getelementptr inbounds [8 x i8], [8 x i8]* %outch, i64 0, i64 %idxprom26, !dbg !4195
  %25 = load i8, i8* %arrayidx27, align 1, !dbg !4195
  %conv28 = zext i8 %25 to i32, !dbg !4195
  %26 = load i32, i32* %mat, align 4, !dbg !4197
  %idxprom29 = zext i32 %26 to i64, !dbg !4198
  %27 = load %struct.MatrixParams*, %struct.MatrixParams** %mp.addr, align 8, !dbg !4198
  %outch30 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %27, i32 0, i32 1, !dbg !4199
  %arrayidx31 = getelementptr inbounds [8 x i8], [8 x i8]* %outch30, i64 0, i64 %idxprom29, !dbg !4198
  %28 = load i8, i8* %arrayidx31, align 1, !dbg !4198
  %conv32 = zext i8 %28 to i32, !dbg !4198
  %cmp33 = icmp ne i32 %conv28, %conv32, !dbg !4200
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !4201

if.then35:                                        ; preds = %for.body25
  store i32 1, i32* %retval, align 4, !dbg !4202
  br label %return, !dbg !4202

if.end36:                                         ; preds = %for.body25
  store i32 0, i32* %channel, align 4, !dbg !4203
  br label %for.cond37, !dbg !4205

for.cond37:                                       ; preds = %for.inc54, %if.end36
  %29 = load i32, i32* %channel, align 4, !dbg !4206
  %30 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4209
  %num_channels = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %30, i32 0, i32 2, !dbg !4210
  %31 = load i32, i32* %num_channels, align 4, !dbg !4210
  %cmp38 = icmp ult i32 %29, %31, !dbg !4211
  br i1 %cmp38, label %for.body40, label %for.end56, !dbg !4212

for.body40:                                       ; preds = %for.cond37
  %32 = load i32, i32* %channel, align 4, !dbg !4213
  %idxprom41 = zext i32 %32 to i64, !dbg !4215
  %33 = load i32, i32* %mat, align 4, !dbg !4216
  %idxprom42 = zext i32 %33 to i64, !dbg !4215
  %34 = load %struct.MatrixParams*, %struct.MatrixParams** %prev.addr, align 8, !dbg !4215
  %coeff = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %34, i32 0, i32 3, !dbg !4217
  %arrayidx43 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff, i64 0, i64 %idxprom42, !dbg !4215
  %arrayidx44 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx43, i64 0, i64 %idxprom41, !dbg !4215
  %35 = load i32, i32* %arrayidx44, align 4, !dbg !4215
  %36 = load i32, i32* %channel, align 4, !dbg !4218
  %idxprom45 = zext i32 %36 to i64, !dbg !4219
  %37 = load i32, i32* %mat, align 4, !dbg !4220
  %idxprom46 = zext i32 %37 to i64, !dbg !4219
  %38 = load %struct.MatrixParams*, %struct.MatrixParams** %mp.addr, align 8, !dbg !4219
  %coeff47 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %38, i32 0, i32 3, !dbg !4221
  %arrayidx48 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff47, i64 0, i64 %idxprom46, !dbg !4219
  %arrayidx49 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx48, i64 0, i64 %idxprom45, !dbg !4219
  %39 = load i32, i32* %arrayidx49, align 4, !dbg !4219
  %cmp50 = icmp ne i32 %35, %39, !dbg !4222
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !4223

if.then52:                                        ; preds = %for.body40
  store i32 1, i32* %retval, align 4, !dbg !4224
  br label %return, !dbg !4224

if.end53:                                         ; preds = %for.body40
  br label %for.inc54, !dbg !4225

for.inc54:                                        ; preds = %if.end53
  %40 = load i32, i32* %channel, align 4, !dbg !4227
  %inc55 = add i32 %40, 1, !dbg !4227
  store i32 %inc55, i32* %channel, align 4, !dbg !4227
  br label %for.cond37, !dbg !4229, !llvm.loop !4230

for.end56:                                        ; preds = %for.cond37
  br label %for.inc57, !dbg !4232

for.inc57:                                        ; preds = %for.end56
  %41 = load i32, i32* %mat, align 4, !dbg !4233
  %inc58 = add i32 %41, 1, !dbg !4233
  store i32 %inc58, i32* %mat, align 4, !dbg !4233
  br label %for.cond20, !dbg !4235, !llvm.loop !4236

for.end59:                                        ; preds = %for.cond20
  store i32 0, i32* %retval, align 4, !dbg !4238
  br label %return, !dbg !4238

return:                                           ; preds = %for.end59, %if.then52, %if.then35, %if.then18, %if.then5, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !4239
  ret i32 %42, !dbg !4239
}

; Function Attrs: nounwind uwtable
define internal i32 @compare_filter_params(%struct.ChannelParams* %prev_cp, %struct.ChannelParams* %cp, i32 %filter) #1 !dbg !4240 {
entry:
  %retval = alloca i32, align 4
  %prev_cp.addr = alloca %struct.ChannelParams*, align 8
  %cp.addr = alloca %struct.ChannelParams*, align 8
  %filter.addr = alloca i32, align 4
  %prev = alloca %struct.FilterParams*, align 8
  %fp = alloca %struct.FilterParams*, align 8
  %i = alloca i32, align 4
  store %struct.ChannelParams* %prev_cp, %struct.ChannelParams** %prev_cp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %prev_cp.addr, metadata !4245, metadata !1746), !dbg !4246
  store %struct.ChannelParams* %cp, %struct.ChannelParams** %cp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %cp.addr, metadata !4247, metadata !1746), !dbg !4248
  store i32 %filter, i32* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr, metadata !4249, metadata !1746), !dbg !4250
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %prev, metadata !4251, metadata !1746), !dbg !4254
  %0 = load i32, i32* %filter.addr, align 4, !dbg !4255
  %idxprom = sext i32 %0 to i64, !dbg !4256
  %1 = load %struct.ChannelParams*, %struct.ChannelParams** %prev_cp.addr, align 8, !dbg !4256
  %filter_params = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %1, i32 0, i32 0, !dbg !4257
  %arrayidx = getelementptr inbounds [2 x %struct.FilterParams], [2 x %struct.FilterParams]* %filter_params, i64 0, i64 %idxprom, !dbg !4256
  store %struct.FilterParams* %arrayidx, %struct.FilterParams** %prev, align 8, !dbg !4254
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %fp, metadata !4258, metadata !1746), !dbg !4259
  %2 = load i32, i32* %filter.addr, align 4, !dbg !4260
  %idxprom1 = sext i32 %2 to i64, !dbg !4261
  %3 = load %struct.ChannelParams*, %struct.ChannelParams** %cp.addr, align 8, !dbg !4261
  %filter_params2 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %3, i32 0, i32 0, !dbg !4262
  %arrayidx3 = getelementptr inbounds [2 x %struct.FilterParams], [2 x %struct.FilterParams]* %filter_params2, i64 0, i64 %idxprom1, !dbg !4261
  store %struct.FilterParams* %arrayidx3, %struct.FilterParams** %fp, align 8, !dbg !4259
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4263, metadata !1746), !dbg !4264
  %4 = load %struct.FilterParams*, %struct.FilterParams** %prev, align 8, !dbg !4265
  %order = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %4, i32 0, i32 0, !dbg !4267
  %5 = load i8, i8* %order, align 4, !dbg !4267
  %conv = zext i8 %5 to i32, !dbg !4265
  %6 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !4268
  %order4 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 0, !dbg !4269
  %7 = load i8, i8* %order4, align 4, !dbg !4269
  %conv5 = zext i8 %7 to i32, !dbg !4268
  %cmp = icmp ne i32 %conv, %conv5, !dbg !4270
  br i1 %cmp, label %if.then, label %if.end, !dbg !4271

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !4272
  br label %return, !dbg !4272

if.end:                                           ; preds = %entry
  %8 = load %struct.FilterParams*, %struct.FilterParams** %prev, align 8, !dbg !4273
  %order7 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %8, i32 0, i32 0, !dbg !4275
  %9 = load i8, i8* %order7, align 4, !dbg !4275
  %tobool = icmp ne i8 %9, 0, !dbg !4273
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !4276

if.then8:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4277
  br label %return, !dbg !4277

if.end9:                                          ; preds = %if.end
  %10 = load %struct.FilterParams*, %struct.FilterParams** %prev, align 8, !dbg !4278
  %shift = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %10, i32 0, i32 1, !dbg !4280
  %11 = load i8, i8* %shift, align 1, !dbg !4280
  %conv10 = zext i8 %11 to i32, !dbg !4278
  %12 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !4281
  %shift11 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %12, i32 0, i32 1, !dbg !4282
  %13 = load i8, i8* %shift11, align 1, !dbg !4282
  %conv12 = zext i8 %13 to i32, !dbg !4281
  %cmp13 = icmp ne i32 %conv10, %conv12, !dbg !4283
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !4284

if.then15:                                        ; preds = %if.end9
  store i32 1, i32* %retval, align 4, !dbg !4285
  br label %return, !dbg !4285

if.end16:                                         ; preds = %if.end9
  store i32 0, i32* %i, align 4, !dbg !4286
  br label %for.cond, !dbg !4288

for.cond:                                         ; preds = %for.inc, %if.end16
  %14 = load i32, i32* %i, align 4, !dbg !4289
  %15 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !4292
  %order17 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %15, i32 0, i32 0, !dbg !4293
  %16 = load i8, i8* %order17, align 4, !dbg !4293
  %conv18 = zext i8 %16 to i32, !dbg !4292
  %cmp19 = icmp slt i32 %14, %conv18, !dbg !4294
  br i1 %cmp19, label %for.body, label %for.end, !dbg !4295

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* %i, align 4, !dbg !4296
  %idxprom21 = sext i32 %17 to i64, !dbg !4298
  %18 = load i32, i32* %filter.addr, align 4, !dbg !4299
  %idxprom22 = sext i32 %18 to i64, !dbg !4298
  %19 = load %struct.ChannelParams*, %struct.ChannelParams** %prev_cp.addr, align 8, !dbg !4298
  %coeff = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %19, i32 0, i32 1, !dbg !4300
  %arrayidx23 = getelementptr inbounds [2 x [8 x i32]], [2 x [8 x i32]]* %coeff, i64 0, i64 %idxprom22, !dbg !4298
  %arrayidx24 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx23, i64 0, i64 %idxprom21, !dbg !4298
  %20 = load i32, i32* %arrayidx24, align 4, !dbg !4298
  %21 = load i32, i32* %i, align 4, !dbg !4301
  %idxprom25 = sext i32 %21 to i64, !dbg !4302
  %22 = load i32, i32* %filter.addr, align 4, !dbg !4303
  %idxprom26 = sext i32 %22 to i64, !dbg !4302
  %23 = load %struct.ChannelParams*, %struct.ChannelParams** %cp.addr, align 8, !dbg !4302
  %coeff27 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %23, i32 0, i32 1, !dbg !4304
  %arrayidx28 = getelementptr inbounds [2 x [8 x i32]], [2 x [8 x i32]]* %coeff27, i64 0, i64 %idxprom26, !dbg !4302
  %arrayidx29 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx28, i64 0, i64 %idxprom25, !dbg !4302
  %24 = load i32, i32* %arrayidx29, align 4, !dbg !4302
  %cmp30 = icmp ne i32 %20, %24, !dbg !4305
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4306

if.then32:                                        ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !4307
  br label %return, !dbg !4307

if.end33:                                         ; preds = %for.body
  br label %for.inc, !dbg !4308

for.inc:                                          ; preds = %if.end33
  %25 = load i32, i32* %i, align 4, !dbg !4310
  %inc = add nsw i32 %25, 1, !dbg !4310
  store i32 %inc, i32* %i, align 4, !dbg !4310
  br label %for.cond, !dbg !4312, !llvm.loop !4313

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !4315
  br label %return, !dbg !4315

return:                                           ; preds = %for.end, %if.then32, %if.then15, %if.then8, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !4316
  ret i32 %26, !dbg !4316
}

; Function Attrs: nounwind uwtable
define internal void @generate_2_noise_channels(%struct.MLPEncodeContext* %ctx) #1 !dbg !4317 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %sample_buffer = alloca i32*, align 8
  %rh = alloca %struct.RestartHeader*, align 8
  %i = alloca i32, align 4
  %seed = alloca i32, align 4
  %seed_shr7 = alloca i16, align 2
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !4318, metadata !1746), !dbg !4319
  call void @llvm.dbg.declare(metadata i32** %sample_buffer, metadata !4320, metadata !1746), !dbg !4321
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4322
  %sample_buffer1 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 15, !dbg !4323
  %1 = load i32*, i32** %sample_buffer1, align 8, !dbg !4323
  %2 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4324
  %num_channels = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %2, i32 0, i32 2, !dbg !4325
  %3 = load i32, i32* %num_channels, align 4, !dbg !4325
  %idx.ext = sext i32 %3 to i64, !dbg !4326
  %add.ptr = getelementptr inbounds i32, i32* %1, i64 %idx.ext, !dbg !4326
  %add.ptr2 = getelementptr inbounds i32, i32* %add.ptr, i64 -2, !dbg !4327
  store i32* %add.ptr2, i32** %sample_buffer, align 8, !dbg !4321
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !4328, metadata !1746), !dbg !4329
  %4 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4330
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %4, i32 0, i32 53, !dbg !4331
  %5 = load %struct.RestartHeader*, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !4331
  store %struct.RestartHeader* %5, %struct.RestartHeader** %rh, align 8, !dbg !4329
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4332, metadata !1746), !dbg !4333
  call void @llvm.dbg.declare(metadata i32* %seed, metadata !4334, metadata !1746), !dbg !4335
  %6 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !4336
  %noisegen_seed = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %6, i32 0, i32 4, !dbg !4337
  %7 = load i32, i32* %noisegen_seed, align 4, !dbg !4337
  store i32 %7, i32* %seed, align 4, !dbg !4335
  store i32 0, i32* %i, align 4, !dbg !4338
  br label %for.cond, !dbg !4340

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !4341
  %9 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4344
  %number_of_samples = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %9, i32 0, i32 57, !dbg !4345
  %10 = load i32, i32* %number_of_samples, align 8, !dbg !4345
  %cmp = icmp ult i32 %8, %10, !dbg !4346
  br i1 %cmp, label %for.body, label %for.end, !dbg !4347

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %seed_shr7, metadata !4348, metadata !1746), !dbg !4350
  %11 = load i32, i32* %seed, align 4, !dbg !4351
  %shr = lshr i32 %11, 7, !dbg !4352
  %conv = trunc i32 %shr to i16, !dbg !4351
  store i16 %conv, i16* %seed_shr7, align 2, !dbg !4350
  %12 = load i32, i32* %seed, align 4, !dbg !4353
  %shr3 = lshr i32 %12, 15, !dbg !4354
  %conv4 = trunc i32 %shr3 to i8, !dbg !4355
  %conv5 = sext i8 %conv4 to i32, !dbg !4356
  %13 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !4357
  %noise_shift = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %13, i32 0, i32 3, !dbg !4358
  %14 = load i8, i8* %noise_shift, align 1, !dbg !4358
  %conv6 = zext i8 %14 to i32, !dbg !4357
  %shl = shl i32 %conv5, %conv6, !dbg !4359
  %15 = load i32*, i32** %sample_buffer, align 8, !dbg !4360
  %incdec.ptr = getelementptr inbounds i32, i32* %15, i32 1, !dbg !4360
  store i32* %incdec.ptr, i32** %sample_buffer, align 8, !dbg !4360
  store i32 %shl, i32* %15, align 4, !dbg !4361
  %16 = load i16, i16* %seed_shr7, align 2, !dbg !4362
  %conv7 = trunc i16 %16 to i8, !dbg !4363
  %conv8 = sext i8 %conv7 to i32, !dbg !4364
  %17 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !4365
  %noise_shift9 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %17, i32 0, i32 3, !dbg !4366
  %18 = load i8, i8* %noise_shift9, align 1, !dbg !4366
  %conv10 = zext i8 %18 to i32, !dbg !4365
  %shl11 = shl i32 %conv8, %conv10, !dbg !4367
  %19 = load i32*, i32** %sample_buffer, align 8, !dbg !4368
  %incdec.ptr12 = getelementptr inbounds i32, i32* %19, i32 1, !dbg !4368
  store i32* %incdec.ptr12, i32** %sample_buffer, align 8, !dbg !4368
  store i32 %shl11, i32* %19, align 4, !dbg !4369
  %20 = load i32, i32* %seed, align 4, !dbg !4370
  %shl13 = shl i32 %20, 16, !dbg !4371
  %21 = load i16, i16* %seed_shr7, align 2, !dbg !4372
  %conv14 = zext i16 %21 to i32, !dbg !4372
  %xor = xor i32 %shl13, %conv14, !dbg !4373
  %22 = load i16, i16* %seed_shr7, align 2, !dbg !4374
  %conv15 = zext i16 %22 to i32, !dbg !4374
  %shl16 = shl i32 %conv15, 5, !dbg !4375
  %xor17 = xor i32 %xor, %shl16, !dbg !4376
  store i32 %xor17, i32* %seed, align 4, !dbg !4377
  %23 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4378
  %num_channels18 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %23, i32 0, i32 2, !dbg !4379
  %24 = load i32, i32* %num_channels18, align 4, !dbg !4379
  %sub = sub nsw i32 %24, 2, !dbg !4380
  %25 = load i32*, i32** %sample_buffer, align 8, !dbg !4381
  %idx.ext19 = sext i32 %sub to i64, !dbg !4381
  %add.ptr20 = getelementptr inbounds i32, i32* %25, i64 %idx.ext19, !dbg !4381
  store i32* %add.ptr20, i32** %sample_buffer, align 8, !dbg !4381
  br label %for.inc, !dbg !4382

for.inc:                                          ; preds = %for.body
  %26 = load i32, i32* %i, align 4, !dbg !4383
  %inc = add i32 %26, 1, !dbg !4383
  store i32 %inc, i32* %i, align 4, !dbg !4383
  br label %for.cond, !dbg !4385, !llvm.loop !4386

for.end:                                          ; preds = %for.cond
  %27 = load i32, i32* %seed, align 4, !dbg !4388
  %and = and i32 %27, 16777215, !dbg !4389
  %28 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !4390
  %noisegen_seed21 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %28, i32 0, i32 4, !dbg !4391
  store i32 %and, i32* %noisegen_seed21, align 4, !dbg !4392
  ret void, !dbg !4393
}

; Function Attrs: nounwind uwtable
define internal void @rematrix_channels(%struct.MLPEncodeContext* %ctx) #1 !dbg !4394 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %dp = alloca %struct.DecodingParams*, align 8
  %mp = alloca %struct.MatrixParams*, align 8
  %sample_buffer = alloca i32*, align 8
  %mat = alloca i32, align 4
  %i = alloca i32, align 4
  %maxchan = alloca i32, align 4
  %msb_mask_bits = alloca i32, align 4
  %mask = alloca i32, align 4
  %outch = alloca i32, align 4
  %src_ch = alloca i32, align 4
  %accum = alloca i64, align 8
  %sample = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !4395, metadata !1746), !dbg !4396
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !4397, metadata !1746), !dbg !4398
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4399
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 52, !dbg !4400
  %1 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !4400
  store %struct.DecodingParams* %1, %struct.DecodingParams** %dp, align 8, !dbg !4398
  call void @llvm.dbg.declare(metadata %struct.MatrixParams** %mp, metadata !4401, metadata !1746), !dbg !4402
  %2 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !4403
  %matrix_params = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %2, i32 0, i32 2, !dbg !4404
  store %struct.MatrixParams* %matrix_params, %struct.MatrixParams** %mp, align 8, !dbg !4402
  call void @llvm.dbg.declare(metadata i32** %sample_buffer, metadata !4405, metadata !1746), !dbg !4406
  %3 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4407
  %sample_buffer1 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %3, i32 0, i32 15, !dbg !4408
  %4 = load i32*, i32** %sample_buffer1, align 8, !dbg !4408
  store i32* %4, i32** %sample_buffer, align 8, !dbg !4406
  call void @llvm.dbg.declare(metadata i32* %mat, metadata !4409, metadata !1746), !dbg !4410
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4411, metadata !1746), !dbg !4412
  call void @llvm.dbg.declare(metadata i32* %maxchan, metadata !4413, metadata !1746), !dbg !4414
  %5 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4415
  %num_channels = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %5, i32 0, i32 2, !dbg !4416
  %6 = load i32, i32* %num_channels, align 4, !dbg !4416
  store i32 %6, i32* %maxchan, align 4, !dbg !4417
  store i32 0, i32* %mat, align 4, !dbg !4418
  br label %for.cond, !dbg !4420

for.cond:                                         ; preds = %for.inc35, %entry
  %7 = load i32, i32* %mat, align 4, !dbg !4421
  %8 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !4424
  %count = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %8, i32 0, i32 0, !dbg !4425
  %9 = load i8, i8* %count, align 4, !dbg !4425
  %conv = zext i8 %9 to i32, !dbg !4424
  %cmp = icmp ult i32 %7, %conv, !dbg !4426
  br i1 %cmp, label %for.body, label %for.end37, !dbg !4427

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %msb_mask_bits, metadata !4428, metadata !1746), !dbg !4430
  %10 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4431
  %avctx = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %10, i32 0, i32 0, !dbg !4432
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4432
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 84, !dbg !4433
  %12 = load i32, i32* %sample_fmt, align 8, !dbg !4433
  %cmp3 = icmp eq i32 %12, 1, !dbg !4434
  %cond = select i1 %cmp3, i32 8, i32 0, !dbg !4431
  %13 = load i32, i32* %mat, align 4, !dbg !4435
  %idxprom = zext i32 %13 to i64, !dbg !4436
  %14 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !4436
  %shift = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %14, i32 0, i32 5, !dbg !4437
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %shift, i64 0, i64 %idxprom, !dbg !4436
  %15 = load i8, i8* %arrayidx, align 1, !dbg !4436
  %conv5 = sext i8 %15 to i32, !dbg !4436
  %sub = sub nsw i32 %cond, %conv5, !dbg !4438
  store i32 %sub, i32* %msb_mask_bits, align 4, !dbg !4430
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !4439, metadata !1746), !dbg !4440
  %16 = load i32, i32* %msb_mask_bits, align 4, !dbg !4441
  %shl = shl i32 -1, %16, !dbg !4442
  store i32 %shl, i32* %mask, align 4, !dbg !4440
  call void @llvm.dbg.declare(metadata i32* %outch, metadata !4443, metadata !1746), !dbg !4444
  %17 = load i32, i32* %mat, align 4, !dbg !4445
  %idxprom6 = zext i32 %17 to i64, !dbg !4446
  %18 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !4446
  %outch7 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %18, i32 0, i32 1, !dbg !4447
  %arrayidx8 = getelementptr inbounds [8 x i8], [8 x i8]* %outch7, i64 0, i64 %idxprom6, !dbg !4446
  %19 = load i8, i8* %arrayidx8, align 1, !dbg !4446
  %conv9 = zext i8 %19 to i32, !dbg !4446
  store i32 %conv9, i32* %outch, align 4, !dbg !4444
  %20 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4448
  %sample_buffer10 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %20, i32 0, i32 15, !dbg !4449
  %21 = load i32*, i32** %sample_buffer10, align 8, !dbg !4449
  store i32* %21, i32** %sample_buffer, align 8, !dbg !4450
  store i32 0, i32* %i, align 4, !dbg !4451
  br label %for.cond11, !dbg !4453

for.cond11:                                       ; preds = %for.inc32, %for.body
  %22 = load i32, i32* %i, align 4, !dbg !4454
  %23 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4457
  %number_of_samples = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %23, i32 0, i32 57, !dbg !4458
  %24 = load i32, i32* %number_of_samples, align 8, !dbg !4458
  %cmp12 = icmp ult i32 %22, %24, !dbg !4459
  br i1 %cmp12, label %for.body14, label %for.end34, !dbg !4460

for.body14:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata i32* %src_ch, metadata !4461, metadata !1746), !dbg !4463
  call void @llvm.dbg.declare(metadata i64* %accum, metadata !4464, metadata !1746), !dbg !4465
  store i64 0, i64* %accum, align 8, !dbg !4465
  store i32 0, i32* %src_ch, align 4, !dbg !4466
  br label %for.cond15, !dbg !4468

for.cond15:                                       ; preds = %for.inc, %for.body14
  %25 = load i32, i32* %src_ch, align 4, !dbg !4469
  %26 = load i32, i32* %maxchan, align 4, !dbg !4472
  %cmp16 = icmp ult i32 %25, %26, !dbg !4473
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !4474

for.body18:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !4475, metadata !1746), !dbg !4477
  %27 = load i32*, i32** %sample_buffer, align 8, !dbg !4478
  %28 = load i32, i32* %src_ch, align 4, !dbg !4479
  %idx.ext = zext i32 %28 to i64, !dbg !4480
  %add.ptr = getelementptr inbounds i32, i32* %27, i64 %idx.ext, !dbg !4480
  %29 = load i32, i32* %add.ptr, align 4, !dbg !4481
  store i32 %29, i32* %sample, align 4, !dbg !4477
  %30 = load i32, i32* %sample, align 4, !dbg !4482
  %conv19 = sext i32 %30 to i64, !dbg !4483
  %31 = load i32, i32* %src_ch, align 4, !dbg !4484
  %idxprom20 = zext i32 %31 to i64, !dbg !4485
  %32 = load i32, i32* %mat, align 4, !dbg !4486
  %idxprom21 = zext i32 %32 to i64, !dbg !4485
  %33 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !4485
  %forco = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %33, i32 0, i32 2, !dbg !4487
  %arrayidx22 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %forco, i64 0, i64 %idxprom21, !dbg !4485
  %arrayidx23 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx22, i64 0, i64 %idxprom20, !dbg !4485
  %34 = load i32, i32* %arrayidx23, align 4, !dbg !4485
  %conv24 = sext i32 %34 to i64, !dbg !4485
  %mul = mul nsw i64 %conv19, %conv24, !dbg !4488
  %35 = load i64, i64* %accum, align 8, !dbg !4489
  %add = add nsw i64 %35, %mul, !dbg !4489
  store i64 %add, i64* %accum, align 8, !dbg !4489
  br label %for.inc, !dbg !4490

for.inc:                                          ; preds = %for.body18
  %36 = load i32, i32* %src_ch, align 4, !dbg !4491
  %inc = add i32 %36, 1, !dbg !4491
  store i32 %inc, i32* %src_ch, align 4, !dbg !4491
  br label %for.cond15, !dbg !4493, !llvm.loop !4494

for.end:                                          ; preds = %for.cond15
  %37 = load i64, i64* %accum, align 8, !dbg !4496
  %shr = ashr i64 %37, 14, !dbg !4497
  %38 = load i32, i32* %mask, align 4, !dbg !4498
  %conv25 = sext i32 %38 to i64, !dbg !4498
  %and = and i64 %shr, %conv25, !dbg !4499
  %conv26 = trunc i64 %and to i32, !dbg !4500
  %39 = load i32, i32* %outch, align 4, !dbg !4501
  %idxprom27 = zext i32 %39 to i64, !dbg !4502
  %40 = load i32*, i32** %sample_buffer, align 8, !dbg !4502
  %arrayidx28 = getelementptr inbounds i32, i32* %40, i64 %idxprom27, !dbg !4502
  store i32 %conv26, i32* %arrayidx28, align 4, !dbg !4503
  %41 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4504
  %num_channels29 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %41, i32 0, i32 2, !dbg !4505
  %42 = load i32, i32* %num_channels29, align 4, !dbg !4505
  %43 = load i32*, i32** %sample_buffer, align 8, !dbg !4506
  %idx.ext30 = sext i32 %42 to i64, !dbg !4506
  %add.ptr31 = getelementptr inbounds i32, i32* %43, i64 %idx.ext30, !dbg !4506
  store i32* %add.ptr31, i32** %sample_buffer, align 8, !dbg !4506
  br label %for.inc32, !dbg !4507

for.inc32:                                        ; preds = %for.end
  %44 = load i32, i32* %i, align 4, !dbg !4508
  %inc33 = add i32 %44, 1, !dbg !4508
  store i32 %inc33, i32* %i, align 4, !dbg !4508
  br label %for.cond11, !dbg !4510, !llvm.loop !4511

for.end34:                                        ; preds = %for.cond11
  br label %for.inc35, !dbg !4513

for.inc35:                                        ; preds = %for.end34
  %45 = load i32, i32* %mat, align 4, !dbg !4514
  %inc36 = add i32 %45, 1, !dbg !4514
  store i32 %inc36, i32* %mat, align 4, !dbg !4514
  br label %for.cond, !dbg !4516, !llvm.loop !4517

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !4519
}

; Function Attrs: nounwind uwtable
define internal i32 @apply_filter(%struct.MLPEncodeContext* %ctx, i32 %channel) #1 !dbg !4520 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %channel.addr = alloca i32, align 4
  %fp = alloca [2 x %struct.FilterParams*], align 16
  %filter_state_buffer = alloca [2 x i32*], align 16
  %mask = alloca i32, align 4
  %sample_buffer = alloca i32*, align 8
  %number_of_samples = alloca i32, align 4
  %filter_shift = alloca i32, align 4
  %filter = alloca i32, align 4
  %i = alloca i32, align 4
  %size = alloca i32, align 4
  %sample = alloca i32, align 4
  %order = alloca i32, align 4
  %accum = alloca i64, align 8
  %residual = alloca i32, align 4
  %fcoeff = alloca i32*, align 8
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !4523, metadata !1746), !dbg !4524
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !4525, metadata !1746), !dbg !4526
  call void @llvm.dbg.declare(metadata [2 x %struct.FilterParams*]* %fp, metadata !4527, metadata !1746), !dbg !4530
  %arrayinit.begin = getelementptr inbounds [2 x %struct.FilterParams*], [2 x %struct.FilterParams*]* %fp, i64 0, i64 0, !dbg !4531
  %0 = load i32, i32* %channel.addr, align 4, !dbg !4532
  %idxprom = zext i32 %0 to i64, !dbg !4533
  %1 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4533
  %cur_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %1, i32 0, i32 51, !dbg !4534
  %2 = load %struct.ChannelParams*, %struct.ChannelParams** %cur_channel_params, align 8, !dbg !4534
  %arrayidx = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %2, i64 %idxprom, !dbg !4533
  %filter_params = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %arrayidx, i32 0, i32 0, !dbg !4535
  %arrayidx1 = getelementptr inbounds [2 x %struct.FilterParams], [2 x %struct.FilterParams]* %filter_params, i64 0, i64 0, !dbg !4533
  store %struct.FilterParams* %arrayidx1, %struct.FilterParams** %arrayinit.begin, align 8, !dbg !4531
  %arrayinit.element = getelementptr inbounds %struct.FilterParams*, %struct.FilterParams** %arrayinit.begin, i64 1, !dbg !4531
  %3 = load i32, i32* %channel.addr, align 4, !dbg !4536
  %idxprom2 = zext i32 %3 to i64, !dbg !4537
  %4 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4537
  %cur_channel_params3 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %4, i32 0, i32 51, !dbg !4538
  %5 = load %struct.ChannelParams*, %struct.ChannelParams** %cur_channel_params3, align 8, !dbg !4538
  %arrayidx4 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %5, i64 %idxprom2, !dbg !4537
  %filter_params5 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %arrayidx4, i32 0, i32 0, !dbg !4539
  %arrayidx6 = getelementptr inbounds [2 x %struct.FilterParams], [2 x %struct.FilterParams]* %filter_params5, i64 0, i64 1, !dbg !4537
  store %struct.FilterParams* %arrayidx6, %struct.FilterParams** %arrayinit.element, align 8, !dbg !4531
  call void @llvm.dbg.declare(metadata [2 x i32*]* %filter_state_buffer, metadata !4540, metadata !1746), !dbg !4542
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !4543, metadata !1746), !dbg !4544
  %6 = load i32, i32* %channel.addr, align 4, !dbg !4545
  %idxprom7 = zext i32 %6 to i64, !dbg !4546
  %7 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4546
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %7, i32 0, i32 52, !dbg !4547
  %8 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !4547
  %quant_step_size = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %8, i32 0, i32 1, !dbg !4548
  %arrayidx8 = getelementptr inbounds [8 x i8], [8 x i8]* %quant_step_size, i64 0, i64 %idxprom7, !dbg !4546
  %9 = load i8, i8* %arrayidx8, align 1, !dbg !4546
  %conv = zext i8 %9 to i32, !dbg !4546
  %shl = shl i32 -1, %conv, !dbg !4549
  store i32 %shl, i32* %mask, align 4, !dbg !4544
  call void @llvm.dbg.declare(metadata i32** %sample_buffer, metadata !4550, metadata !1746), !dbg !4551
  %10 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4552
  %sample_buffer9 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %10, i32 0, i32 15, !dbg !4553
  %11 = load i32*, i32** %sample_buffer9, align 8, !dbg !4553
  %12 = load i32, i32* %channel.addr, align 4, !dbg !4554
  %idx.ext = zext i32 %12 to i64, !dbg !4555
  %add.ptr = getelementptr inbounds i32, i32* %11, i64 %idx.ext, !dbg !4555
  store i32* %add.ptr, i32** %sample_buffer, align 8, !dbg !4551
  call void @llvm.dbg.declare(metadata i32* %number_of_samples, metadata !4556, metadata !1746), !dbg !4557
  %13 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4558
  %number_of_samples10 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %13, i32 0, i32 57, !dbg !4559
  %14 = load i32, i32* %number_of_samples10, align 8, !dbg !4559
  store i32 %14, i32* %number_of_samples, align 4, !dbg !4557
  call void @llvm.dbg.declare(metadata i32* %filter_shift, metadata !4560, metadata !1746), !dbg !4561
  %arrayidx11 = getelementptr inbounds [2 x %struct.FilterParams*], [2 x %struct.FilterParams*]* %fp, i64 0, i64 0, !dbg !4562
  %15 = load %struct.FilterParams*, %struct.FilterParams** %arrayidx11, align 16, !dbg !4562
  %shift = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %15, i32 0, i32 1, !dbg !4563
  %16 = load i8, i8* %shift, align 1, !dbg !4563
  %conv12 = zext i8 %16 to i32, !dbg !4562
  store i32 %conv12, i32* %filter_shift, align 4, !dbg !4561
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !4564, metadata !1746), !dbg !4565
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4566, metadata !1746), !dbg !4567
  store i32 0, i32* %i, align 4, !dbg !4568
  br label %for.cond, !dbg !4570

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load i32, i32* %i, align 4, !dbg !4571
  %cmp = icmp slt i32 %17, 2, !dbg !4574
  br i1 %cmp, label %for.body, label %for.end, !dbg !4575

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %size, metadata !4576, metadata !1746), !dbg !4578
  %18 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4579
  %number_of_samples14 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %18, i32 0, i32 57, !dbg !4580
  %19 = load i32, i32* %number_of_samples14, align 8, !dbg !4580
  store i32 %19, i32* %size, align 4, !dbg !4578
  %20 = load i32, i32* %size, align 4, !dbg !4581
  %conv15 = zext i32 %20 to i64, !dbg !4581
  %mul = mul i64 %conv15, 4, !dbg !4582
  %call = call noalias i8* @av_malloc(i64 %mul), !dbg !4583
  %21 = bitcast i8* %call to i32*, !dbg !4583
  %22 = load i32, i32* %i, align 4, !dbg !4584
  %idxprom16 = sext i32 %22 to i64, !dbg !4585
  %arrayidx17 = getelementptr inbounds [2 x i32*], [2 x i32*]* %filter_state_buffer, i64 0, i64 %idxprom16, !dbg !4585
  store i32* %21, i32** %arrayidx17, align 8, !dbg !4586
  %23 = load i32, i32* %i, align 4, !dbg !4587
  %idxprom18 = sext i32 %23 to i64, !dbg !4589
  %arrayidx19 = getelementptr inbounds [2 x i32*], [2 x i32*]* %filter_state_buffer, i64 0, i64 %idxprom18, !dbg !4589
  %24 = load i32*, i32** %arrayidx19, align 8, !dbg !4589
  %tobool = icmp ne i32* %24, null, !dbg !4589
  br i1 %tobool, label %if.end, label %if.then, !dbg !4590

if.then:                                          ; preds = %for.body
  %25 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4591
  %avctx = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %25, i32 0, i32 0, !dbg !4593
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4593
  %27 = bitcast %struct.AVCodecContext* %26 to i8*, !dbg !4591
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i32 0, i32 0)), !dbg !4594
  store i32 -1, i32* %retval, align 4, !dbg !4595
  br label %return, !dbg !4595

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4596

for.inc:                                          ; preds = %if.end
  %28 = load i32, i32* %i, align 4, !dbg !4597
  %inc = add nsw i32 %28, 1, !dbg !4597
  store i32 %inc, i32* %i, align 4, !dbg !4597
  br label %for.cond, !dbg !4599, !llvm.loop !4600

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4602
  br label %for.cond20, !dbg !4604

for.cond20:                                       ; preds = %for.inc32, %for.end
  %29 = load i32, i32* %i, align 4, !dbg !4605
  %cmp21 = icmp slt i32 %29, 8, !dbg !4608
  br i1 %cmp21, label %for.body23, label %for.end34, !dbg !4609

for.body23:                                       ; preds = %for.cond20
  %30 = load i32*, i32** %sample_buffer, align 8, !dbg !4610
  %31 = load i32, i32* %30, align 4, !dbg !4612
  %32 = load i32, i32* %i, align 4, !dbg !4613
  %idxprom24 = sext i32 %32 to i64, !dbg !4614
  %arrayidx25 = getelementptr inbounds [2 x i32*], [2 x i32*]* %filter_state_buffer, i64 0, i64 0, !dbg !4614
  %33 = load i32*, i32** %arrayidx25, align 16, !dbg !4614
  %arrayidx26 = getelementptr inbounds i32, i32* %33, i64 %idxprom24, !dbg !4614
  store i32 %31, i32* %arrayidx26, align 4, !dbg !4615
  %34 = load i32*, i32** %sample_buffer, align 8, !dbg !4616
  %35 = load i32, i32* %34, align 4, !dbg !4617
  %36 = load i32, i32* %i, align 4, !dbg !4618
  %idxprom27 = sext i32 %36 to i64, !dbg !4619
  %arrayidx28 = getelementptr inbounds [2 x i32*], [2 x i32*]* %filter_state_buffer, i64 0, i64 1, !dbg !4619
  %37 = load i32*, i32** %arrayidx28, align 8, !dbg !4619
  %arrayidx29 = getelementptr inbounds i32, i32* %37, i64 %idxprom27, !dbg !4619
  store i32 %35, i32* %arrayidx29, align 4, !dbg !4620
  %38 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4621
  %num_channels = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %38, i32 0, i32 2, !dbg !4622
  %39 = load i32, i32* %num_channels, align 4, !dbg !4622
  %40 = load i32*, i32** %sample_buffer, align 8, !dbg !4623
  %idx.ext30 = sext i32 %39 to i64, !dbg !4623
  %add.ptr31 = getelementptr inbounds i32, i32* %40, i64 %idx.ext30, !dbg !4623
  store i32* %add.ptr31, i32** %sample_buffer, align 8, !dbg !4623
  br label %for.inc32, !dbg !4624

for.inc32:                                        ; preds = %for.body23
  %41 = load i32, i32* %i, align 4, !dbg !4625
  %inc33 = add nsw i32 %41, 1, !dbg !4625
  store i32 %inc33, i32* %i, align 4, !dbg !4625
  br label %for.cond20, !dbg !4627, !llvm.loop !4628

for.end34:                                        ; preds = %for.cond20
  store i32 8, i32* %i, align 4, !dbg !4630
  br label %for.cond35, !dbg !4632

for.cond35:                                       ; preds = %for.inc98, %for.end34
  %42 = load i32, i32* %i, align 4, !dbg !4633
  %43 = load i32, i32* %number_of_samples, align 4, !dbg !4636
  %cmp36 = icmp ult i32 %42, %43, !dbg !4637
  br i1 %cmp36, label %for.body38, label %for.end100, !dbg !4638

for.body38:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !4639, metadata !1746), !dbg !4641
  %44 = load i32*, i32** %sample_buffer, align 8, !dbg !4642
  %45 = load i32, i32* %44, align 4, !dbg !4643
  store i32 %45, i32* %sample, align 4, !dbg !4641
  call void @llvm.dbg.declare(metadata i32* %order, metadata !4644, metadata !1746), !dbg !4645
  call void @llvm.dbg.declare(metadata i64* %accum, metadata !4646, metadata !1746), !dbg !4647
  store i64 0, i64* %accum, align 8, !dbg !4647
  call void @llvm.dbg.declare(metadata i32* %residual, metadata !4648, metadata !1746), !dbg !4649
  store i32 0, i32* %filter, align 4, !dbg !4650
  br label %for.cond39, !dbg !4652

for.cond39:                                       ; preds = %for.inc69, %for.body38
  %46 = load i32, i32* %filter, align 4, !dbg !4653
  %cmp40 = icmp slt i32 %46, 2, !dbg !4656
  br i1 %cmp40, label %for.body42, label %for.end71, !dbg !4657

for.body42:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata i32** %fcoeff, metadata !4658, metadata !1746), !dbg !4660
  %47 = load i32, i32* %filter, align 4, !dbg !4661
  %idxprom43 = sext i32 %47 to i64, !dbg !4662
  %48 = load i32, i32* %channel.addr, align 4, !dbg !4663
  %idxprom44 = zext i32 %48 to i64, !dbg !4662
  %49 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4662
  %cur_channel_params45 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %49, i32 0, i32 51, !dbg !4664
  %50 = load %struct.ChannelParams*, %struct.ChannelParams** %cur_channel_params45, align 8, !dbg !4664
  %arrayidx46 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %50, i64 %idxprom44, !dbg !4662
  %coeff = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %arrayidx46, i32 0, i32 1, !dbg !4665
  %arrayidx47 = getelementptr inbounds [2 x [8 x i32]], [2 x [8 x i32]]* %coeff, i64 0, i64 %idxprom43, !dbg !4662
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx47, i32 0, i32 0, !dbg !4662
  store i32* %arraydecay, i32** %fcoeff, align 8, !dbg !4660
  store i32 0, i32* %order, align 4, !dbg !4666
  br label %for.cond48, !dbg !4668

for.cond48:                                       ; preds = %for.inc66, %for.body42
  %51 = load i32, i32* %order, align 4, !dbg !4669
  %52 = load i32, i32* %filter, align 4, !dbg !4672
  %idxprom49 = sext i32 %52 to i64, !dbg !4673
  %arrayidx50 = getelementptr inbounds [2 x %struct.FilterParams*], [2 x %struct.FilterParams*]* %fp, i64 0, i64 %idxprom49, !dbg !4673
  %53 = load %struct.FilterParams*, %struct.FilterParams** %arrayidx50, align 8, !dbg !4673
  %order51 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %53, i32 0, i32 0, !dbg !4674
  %54 = load i8, i8* %order51, align 4, !dbg !4674
  %conv52 = zext i8 %54 to i32, !dbg !4673
  %cmp53 = icmp ult i32 %51, %conv52, !dbg !4675
  br i1 %cmp53, label %for.body55, label %for.end68, !dbg !4676

for.body55:                                       ; preds = %for.cond48
  %55 = load i32, i32* %i, align 4, !dbg !4677
  %sub = sub nsw i32 %55, 1, !dbg !4678
  %56 = load i32, i32* %order, align 4, !dbg !4679
  %sub56 = sub i32 %sub, %56, !dbg !4680
  %idxprom57 = zext i32 %sub56 to i64, !dbg !4681
  %57 = load i32, i32* %filter, align 4, !dbg !4682
  %idxprom58 = sext i32 %57 to i64, !dbg !4681
  %arrayidx59 = getelementptr inbounds [2 x i32*], [2 x i32*]* %filter_state_buffer, i64 0, i64 %idxprom58, !dbg !4681
  %58 = load i32*, i32** %arrayidx59, align 8, !dbg !4681
  %arrayidx60 = getelementptr inbounds i32, i32* %58, i64 %idxprom57, !dbg !4681
  %59 = load i32, i32* %arrayidx60, align 4, !dbg !4681
  %conv61 = sext i32 %59 to i64, !dbg !4683
  %60 = load i32, i32* %order, align 4, !dbg !4684
  %idxprom62 = zext i32 %60 to i64, !dbg !4685
  %61 = load i32*, i32** %fcoeff, align 8, !dbg !4685
  %arrayidx63 = getelementptr inbounds i32, i32* %61, i64 %idxprom62, !dbg !4685
  %62 = load i32, i32* %arrayidx63, align 4, !dbg !4685
  %conv64 = sext i32 %62 to i64, !dbg !4685
  %mul65 = mul nsw i64 %conv61, %conv64, !dbg !4686
  %63 = load i64, i64* %accum, align 8, !dbg !4687
  %add = add nsw i64 %63, %mul65, !dbg !4687
  store i64 %add, i64* %accum, align 8, !dbg !4687
  br label %for.inc66, !dbg !4688

for.inc66:                                        ; preds = %for.body55
  %64 = load i32, i32* %order, align 4, !dbg !4689
  %inc67 = add i32 %64, 1, !dbg !4689
  store i32 %inc67, i32* %order, align 4, !dbg !4689
  br label %for.cond48, !dbg !4691, !llvm.loop !4692

for.end68:                                        ; preds = %for.cond48
  br label %for.inc69, !dbg !4694

for.inc69:                                        ; preds = %for.end68
  %65 = load i32, i32* %filter, align 4, !dbg !4695
  %inc70 = add nsw i32 %65, 1, !dbg !4695
  store i32 %inc70, i32* %filter, align 4, !dbg !4695
  br label %for.cond39, !dbg !4697, !llvm.loop !4698

for.end71:                                        ; preds = %for.cond39
  %66 = load i32, i32* %filter_shift, align 4, !dbg !4700
  %67 = load i64, i64* %accum, align 8, !dbg !4701
  %sh_prom = zext i32 %66 to i64, !dbg !4701
  %shr = ashr i64 %67, %sh_prom, !dbg !4701
  store i64 %shr, i64* %accum, align 8, !dbg !4701
  %68 = load i32, i32* %sample, align 4, !dbg !4702
  %conv72 = sext i32 %68 to i64, !dbg !4702
  %69 = load i64, i64* %accum, align 8, !dbg !4703
  %70 = load i32, i32* %mask, align 4, !dbg !4704
  %conv73 = sext i32 %70 to i64, !dbg !4704
  %and = and i64 %69, %conv73, !dbg !4705
  %sub74 = sub nsw i64 %conv72, %and, !dbg !4706
  %conv75 = trunc i64 %sub74 to i32, !dbg !4702
  store i32 %conv75, i32* %residual, align 4, !dbg !4707
  %71 = load i32, i32* %residual, align 4, !dbg !4708
  %72 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4710
  %wordlength = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %72, i32 0, i32 9, !dbg !4711
  %73 = load i32, i32* %wordlength, align 16, !dbg !4711
  %sub76 = sub nsw i32 %73, 1, !dbg !4712
  %shl77 = shl i32 1, %sub76, !dbg !4713
  %sub78 = sub nsw i32 %shl77, 1, !dbg !4714
  %neg = xor i32 %sub78, -1, !dbg !4715
  %cmp79 = icmp slt i32 %71, %neg, !dbg !4716
  br i1 %cmp79, label %if.then87, label %lor.lhs.false, !dbg !4717

lor.lhs.false:                                    ; preds = %for.end71
  %74 = load i32, i32* %residual, align 4, !dbg !4718
  %75 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4720
  %wordlength81 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %75, i32 0, i32 9, !dbg !4721
  %76 = load i32, i32* %wordlength81, align 16, !dbg !4721
  %sub82 = sub nsw i32 %76, 1, !dbg !4722
  %shl83 = shl i32 1, %sub82, !dbg !4723
  %sub84 = sub nsw i32 %shl83, 1, !dbg !4724
  %cmp85 = icmp sgt i32 %74, %sub84, !dbg !4725
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !4726

if.then87:                                        ; preds = %lor.lhs.false, %for.end71
  store i32 -1, i32* %retval, align 4, !dbg !4727
  br label %return, !dbg !4727

if.end88:                                         ; preds = %lor.lhs.false
  %77 = load i32, i32* %sample, align 4, !dbg !4728
  %78 = load i32, i32* %i, align 4, !dbg !4729
  %idxprom89 = sext i32 %78 to i64, !dbg !4730
  %arrayidx90 = getelementptr inbounds [2 x i32*], [2 x i32*]* %filter_state_buffer, i64 0, i64 0, !dbg !4730
  %79 = load i32*, i32** %arrayidx90, align 16, !dbg !4730
  %arrayidx91 = getelementptr inbounds i32, i32* %79, i64 %idxprom89, !dbg !4730
  store i32 %77, i32* %arrayidx91, align 4, !dbg !4731
  %80 = load i32, i32* %residual, align 4, !dbg !4732
  %81 = load i32, i32* %i, align 4, !dbg !4733
  %idxprom92 = sext i32 %81 to i64, !dbg !4734
  %arrayidx93 = getelementptr inbounds [2 x i32*], [2 x i32*]* %filter_state_buffer, i64 0, i64 1, !dbg !4734
  %82 = load i32*, i32** %arrayidx93, align 8, !dbg !4734
  %arrayidx94 = getelementptr inbounds i32, i32* %82, i64 %idxprom92, !dbg !4734
  store i32 %80, i32* %arrayidx94, align 4, !dbg !4735
  %83 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4736
  %num_channels95 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %83, i32 0, i32 2, !dbg !4737
  %84 = load i32, i32* %num_channels95, align 4, !dbg !4737
  %85 = load i32*, i32** %sample_buffer, align 8, !dbg !4738
  %idx.ext96 = sext i32 %84 to i64, !dbg !4738
  %add.ptr97 = getelementptr inbounds i32, i32* %85, i64 %idx.ext96, !dbg !4738
  store i32* %add.ptr97, i32** %sample_buffer, align 8, !dbg !4738
  br label %for.inc98, !dbg !4739

for.inc98:                                        ; preds = %if.end88
  %86 = load i32, i32* %i, align 4, !dbg !4740
  %inc99 = add nsw i32 %86, 1, !dbg !4740
  store i32 %inc99, i32* %i, align 4, !dbg !4740
  br label %for.cond35, !dbg !4742, !llvm.loop !4743

for.end100:                                       ; preds = %for.cond35
  %87 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4745
  %sample_buffer101 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %87, i32 0, i32 15, !dbg !4746
  %88 = load i32*, i32** %sample_buffer101, align 8, !dbg !4746
  %89 = load i32, i32* %channel.addr, align 4, !dbg !4747
  %idx.ext102 = zext i32 %89 to i64, !dbg !4748
  %add.ptr103 = getelementptr inbounds i32, i32* %88, i64 %idx.ext102, !dbg !4748
  store i32* %add.ptr103, i32** %sample_buffer, align 8, !dbg !4749
  store i32 0, i32* %i, align 4, !dbg !4750
  br label %for.cond104, !dbg !4752

for.cond104:                                      ; preds = %for.inc114, %for.end100
  %90 = load i32, i32* %i, align 4, !dbg !4753
  %91 = load i32, i32* %number_of_samples, align 4, !dbg !4756
  %cmp105 = icmp ult i32 %90, %91, !dbg !4757
  br i1 %cmp105, label %for.body107, label %for.end116, !dbg !4758

for.body107:                                      ; preds = %for.cond104
  %92 = load i32, i32* %i, align 4, !dbg !4759
  %idxprom108 = sext i32 %92 to i64, !dbg !4761
  %arrayidx109 = getelementptr inbounds [2 x i32*], [2 x i32*]* %filter_state_buffer, i64 0, i64 1, !dbg !4761
  %93 = load i32*, i32** %arrayidx109, align 8, !dbg !4761
  %arrayidx110 = getelementptr inbounds i32, i32* %93, i64 %idxprom108, !dbg !4761
  %94 = load i32, i32* %arrayidx110, align 4, !dbg !4761
  %95 = load i32*, i32** %sample_buffer, align 8, !dbg !4762
  store i32 %94, i32* %95, align 4, !dbg !4763
  %96 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4764
  %num_channels111 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %96, i32 0, i32 2, !dbg !4765
  %97 = load i32, i32* %num_channels111, align 4, !dbg !4765
  %98 = load i32*, i32** %sample_buffer, align 8, !dbg !4766
  %idx.ext112 = sext i32 %97 to i64, !dbg !4766
  %add.ptr113 = getelementptr inbounds i32, i32* %98, i64 %idx.ext112, !dbg !4766
  store i32* %add.ptr113, i32** %sample_buffer, align 8, !dbg !4766
  br label %for.inc114, !dbg !4767

for.inc114:                                       ; preds = %for.body107
  %99 = load i32, i32* %i, align 4, !dbg !4768
  %inc115 = add nsw i32 %99, 1, !dbg !4768
  store i32 %inc115, i32* %i, align 4, !dbg !4768
  br label %for.cond104, !dbg !4770, !llvm.loop !4771

for.end116:                                       ; preds = %for.cond104
  store i32 0, i32* %i, align 4, !dbg !4773
  br label %for.cond117, !dbg !4775

for.cond117:                                      ; preds = %for.inc123, %for.end116
  %100 = load i32, i32* %i, align 4, !dbg !4776
  %cmp118 = icmp slt i32 %100, 2, !dbg !4779
  br i1 %cmp118, label %for.body120, label %for.end125, !dbg !4780

for.body120:                                      ; preds = %for.cond117
  %101 = load i32, i32* %i, align 4, !dbg !4781
  %idxprom121 = sext i32 %101 to i64, !dbg !4783
  %arrayidx122 = getelementptr inbounds [2 x i32*], [2 x i32*]* %filter_state_buffer, i64 0, i64 %idxprom121, !dbg !4783
  %102 = bitcast i32** %arrayidx122 to i8*, !dbg !4784
  call void @av_freep(i8* %102), !dbg !4785
  br label %for.inc123, !dbg !4786

for.inc123:                                       ; preds = %for.body120
  %103 = load i32, i32* %i, align 4, !dbg !4787
  %inc124 = add nsw i32 %103, 1, !dbg !4787
  store i32 %inc124, i32* %i, align 4, !dbg !4787
  br label %for.cond117, !dbg !4789, !llvm.loop !4790

for.end125:                                       ; preds = %for.cond117
  store i32 0, i32* %retval, align 4, !dbg !4792
  br label %return, !dbg !4792

return:                                           ; preds = %for.end125, %if.then87, %if.then
  %104 = load i32, i32* %retval, align 4, !dbg !4793
  ret i32 %104, !dbg !4793
}

declare void @av_freep(i8*) #3

; Function Attrs: nounwind uwtable
define internal void @write_major_sync(%struct.MLPEncodeContext* %ctx, i8* %buf, i32 %buf_size) #1 !dbg !4794 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %pb = alloca %struct.PutBitContext, align 8
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !4797, metadata !1746), !dbg !4798
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4799, metadata !1746), !dbg !4800
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !4801, metadata !1746), !dbg !4802
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %pb, metadata !4803, metadata !1746), !dbg !4814
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !4815
  %1 = load i32, i32* %buf_size.addr, align 4, !dbg !4816
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %0, i32 %1), !dbg !4817
  call void @put_bits(%struct.PutBitContext* %pb, i32 24, i32 16282223), !dbg !4818
  %2 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4819
  %avctx = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %2, i32 0, i32 0, !dbg !4821
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4821
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 4, !dbg !4822
  %4 = load i32, i32* %codec_id, align 8, !dbg !4822
  %cmp = icmp eq i32 %4, 86045, !dbg !4823
  br i1 %cmp, label %if.then, label %if.else, !dbg !4824

if.then:                                          ; preds = %entry
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 187), !dbg !4825
  %5 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4827
  %coded_sample_fmt = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %5, i32 0, i32 3, !dbg !4828
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_fmt, i64 0, i64 0, !dbg !4827
  %6 = load i32, i32* %arrayidx, align 16, !dbg !4827
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 %6), !dbg !4829
  %7 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4830
  %coded_sample_fmt1 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %7, i32 0, i32 3, !dbg !4831
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_fmt1, i64 0, i64 1, !dbg !4830
  %8 = load i32, i32* %arrayidx2, align 4, !dbg !4830
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 %8), !dbg !4832
  %9 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4833
  %coded_sample_rate = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %9, i32 0, i32 4, !dbg !4834
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_rate, i64 0, i64 0, !dbg !4833
  %10 = load i32, i32* %arrayidx3, align 8, !dbg !4833
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 %10), !dbg !4835
  %11 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4836
  %coded_sample_rate4 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %11, i32 0, i32 4, !dbg !4837
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_rate4, i64 0, i64 1, !dbg !4836
  %12 = load i32, i32* %arrayidx5, align 4, !dbg !4836
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 %12), !dbg !4838
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 0), !dbg !4839
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 0), !dbg !4840
  call void @put_bits(%struct.PutBitContext* %pb, i32 3, i32 0), !dbg !4841
  %13 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4842
  %channel_arrangement = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %13, i32 0, i32 33, !dbg !4843
  %14 = load i8, i8* %channel_arrangement, align 8, !dbg !4843
  %conv = zext i8 %14 to i32, !dbg !4842
  call void @put_bits(%struct.PutBitContext* %pb, i32 5, i32 %conv), !dbg !4844
  br label %if.end20, !dbg !4845

if.else:                                          ; preds = %entry
  %15 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4846
  %avctx6 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %15, i32 0, i32 0, !dbg !4849
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx6, align 32, !dbg !4849
  %codec_id7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 4, !dbg !4850
  %17 = load i32, i32* %codec_id7, align 8, !dbg !4850
  %cmp8 = icmp eq i32 %17, 86060, !dbg !4851
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !4846

if.then10:                                        ; preds = %if.else
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 186), !dbg !4852
  %18 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4854
  %coded_sample_rate11 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %18, i32 0, i32 4, !dbg !4855
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %coded_sample_rate11, i64 0, i64 0, !dbg !4854
  %19 = load i32, i32* %arrayidx12, align 8, !dbg !4854
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 %19), !dbg !4856
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 0), !dbg !4857
  %20 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4858
  %ch_modifier_thd0 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %20, i32 0, i32 34, !dbg !4859
  %21 = load i8, i8* %ch_modifier_thd0, align 1, !dbg !4859
  %conv13 = zext i8 %21 to i32, !dbg !4858
  call void @put_bits(%struct.PutBitContext* %pb, i32 2, i32 %conv13), !dbg !4860
  %22 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4861
  %ch_modifier_thd1 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %22, i32 0, i32 35, !dbg !4862
  %23 = load i8, i8* %ch_modifier_thd1, align 2, !dbg !4862
  %conv14 = zext i8 %23 to i32, !dbg !4861
  call void @put_bits(%struct.PutBitContext* %pb, i32 2, i32 %conv14), !dbg !4863
  %24 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4864
  %channel_arrangement15 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %24, i32 0, i32 33, !dbg !4865
  %25 = load i8, i8* %channel_arrangement15, align 8, !dbg !4865
  %conv16 = zext i8 %25 to i32, !dbg !4864
  call void @put_bits(%struct.PutBitContext* %pb, i32 5, i32 %conv16), !dbg !4866
  %26 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4867
  %ch_modifier_thd2 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %26, i32 0, i32 36, !dbg !4868
  %27 = load i8, i8* %ch_modifier_thd2, align 1, !dbg !4868
  %conv17 = zext i8 %27 to i32, !dbg !4867
  call void @put_bits(%struct.PutBitContext* %pb, i32 2, i32 %conv17), !dbg !4869
  %28 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4870
  %channel_arrangement18 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %28, i32 0, i32 33, !dbg !4871
  %29 = load i8, i8* %channel_arrangement18, align 8, !dbg !4871
  %conv19 = zext i8 %29 to i32, !dbg !4870
  call void @put_bits(%struct.PutBitContext* %pb, i32 13, i32 %conv19), !dbg !4872
  br label %if.end, !dbg !4873

if.end:                                           ; preds = %if.then10, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 46930), !dbg !4874
  %30 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4875
  %flags = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %30, i32 0, i32 6, !dbg !4876
  %31 = load i32, i32* %flags, align 4, !dbg !4876
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 %31), !dbg !4877
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 0), !dbg !4878
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 1), !dbg !4879
  %32 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4880
  %coded_peak_bitrate = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %32, i32 0, i32 5, !dbg !4881
  %33 = load i32, i32* %coded_peak_bitrate, align 32, !dbg !4881
  call void @put_bits(%struct.PutBitContext* %pb, i32 15, i32 %33), !dbg !4882
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 1), !dbg !4883
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 1), !dbg !4884
  %34 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4885
  %substream_info = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %34, i32 0, i32 7, !dbg !4886
  %35 = load i32, i32* %substream_info, align 8, !dbg !4886
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %35), !dbg !4887
  %36 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4888
  %fs = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %36, i32 0, i32 8, !dbg !4889
  %37 = load i32, i32* %fs, align 4, !dbg !4889
  call void @put_bits(%struct.PutBitContext* %pb, i32 5, i32 %37), !dbg !4890
  %38 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4891
  %wordlength = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %38, i32 0, i32 9, !dbg !4892
  %39 = load i32, i32* %wordlength, align 16, !dbg !4892
  call void @put_bits(%struct.PutBitContext* %pb, i32 5, i32 %39), !dbg !4893
  %40 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4894
  %channel_occupancy = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %40, i32 0, i32 10, !dbg !4895
  %41 = load i32, i32* %channel_occupancy, align 4, !dbg !4895
  call void @put_bits(%struct.PutBitContext* %pb, i32 6, i32 %41), !dbg !4896
  call void @put_bits(%struct.PutBitContext* %pb, i32 3, i32 0), !dbg !4897
  call void @put_bits(%struct.PutBitContext* %pb, i32 10, i32 0), !dbg !4898
  call void @put_bits(%struct.PutBitContext* %pb, i32 3, i32 0), !dbg !4899
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 32896), !dbg !4900
  call void @put_bits(%struct.PutBitContext* %pb, i32 7, i32 0), !dbg !4901
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 0), !dbg !4902
  %42 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4903
  %summary_info = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %42, i32 0, i32 11, !dbg !4904
  %43 = load i32, i32* %summary_info, align 8, !dbg !4904
  call void @put_bits(%struct.PutBitContext* %pb, i32 5, i32 %43), !dbg !4905
  call void @flush_put_bits(%struct.PutBitContext* %pb), !dbg !4906
  %44 = load i8*, i8** %buf.addr, align 8, !dbg !4907
  %call = call zeroext i16 @ff_mlp_checksum16(i8* %44, i32 26), !dbg !4908
  %45 = load i8*, i8** %buf.addr, align 8, !dbg !4909
  %add.ptr = getelementptr inbounds i8, i8* %45, i64 26, !dbg !4910
  %46 = bitcast i8* %add.ptr to %union.unaligned_16*, !dbg !4911
  %l = bitcast %union.unaligned_16* %46 to i16*, !dbg !4911
  store i16 %call, i16* %l, align 1, !dbg !4912
  ret void, !dbg !4913
}

; Function Attrs: nounwind uwtable
define internal i8* @write_substrs(%struct.MLPEncodeContext* %ctx, i8* %buf, i32 %buf_size, i32 %restart_frame, i16* %substream_data_len) #1 !dbg !4914 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %restart_frame.addr = alloca i32, align 4
  %substream_data_len.addr = alloca i16*, align 8
  %lossless_check_data = alloca i32*, align 8
  %substr = alloca i32, align 4
  %end = alloca i32, align 4
  %cur_subblock_index = alloca i32, align 4
  %num_subblocks = alloca i32, align 4
  %subblock = alloca i32, align 4
  %rh = alloca %struct.RestartHeader*, align 8
  %substr_restart_frame = alloca i32, align 4
  %parity = alloca i8, align 1
  %checksum = alloca i8, align 1
  %pb = alloca %struct.PutBitContext, align 8
  %tmpb = alloca %struct.PutBitContext, align 8
  %params_changed = alloca i32, align 4
  %subblock_index = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !4917, metadata !1746), !dbg !4918
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4919, metadata !1746), !dbg !4920
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !4921, metadata !1746), !dbg !4922
  store i32 %restart_frame, i32* %restart_frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %restart_frame.addr, metadata !4923, metadata !1746), !dbg !4924
  store i16* %substream_data_len, i16** %substream_data_len.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %substream_data_len.addr, metadata !4925, metadata !1746), !dbg !4926
  call void @llvm.dbg.declare(metadata i32** %lossless_check_data, metadata !4927, metadata !1746), !dbg !4928
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4929
  %lossless_check_data1 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 23, !dbg !4930
  %1 = load i32*, i32** %lossless_check_data1, align 8, !dbg !4930
  store i32* %1, i32** %lossless_check_data, align 8, !dbg !4928
  call void @llvm.dbg.declare(metadata i32* %substr, metadata !4931, metadata !1746), !dbg !4932
  call void @llvm.dbg.declare(metadata i32* %end, metadata !4933, metadata !1746), !dbg !4934
  store i32 0, i32* %end, align 4, !dbg !4934
  %2 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4935
  %frame_index = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %2, i32 0, i32 26, !dbg !4936
  %3 = load i32, i32* %frame_index, align 32, !dbg !4936
  %4 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4937
  %num_substreams = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %4, i32 0, i32 1, !dbg !4938
  %5 = load i32, i32* %num_substreams, align 8, !dbg !4938
  %mul = mul i32 %3, %5, !dbg !4939
  %6 = load i32*, i32** %lossless_check_data, align 8, !dbg !4940
  %idx.ext = zext i32 %mul to i64, !dbg !4940
  %add.ptr = getelementptr inbounds i32, i32* %6, i64 %idx.ext, !dbg !4940
  store i32* %add.ptr, i32** %lossless_check_data, align 8, !dbg !4940
  store i32 0, i32* %substr, align 4, !dbg !4941
  br label %for.cond, !dbg !4943

for.cond:                                         ; preds = %for.inc46, %entry
  %7 = load i32, i32* %substr, align 4, !dbg !4944
  %8 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4947
  %num_substreams2 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %8, i32 0, i32 1, !dbg !4948
  %9 = load i32, i32* %num_substreams2, align 8, !dbg !4948
  %cmp = icmp ult i32 %7, %9, !dbg !4949
  br i1 %cmp, label %for.body, label %for.end48, !dbg !4950

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %cur_subblock_index, metadata !4951, metadata !1746), !dbg !4953
  %10 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4954
  %major_cur_subblock_index = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %10, i32 0, i32 47, !dbg !4955
  %11 = load i32, i32* %major_cur_subblock_index, align 32, !dbg !4955
  store i32 %11, i32* %cur_subblock_index, align 4, !dbg !4953
  call void @llvm.dbg.declare(metadata i32* %num_subblocks, metadata !4956, metadata !1746), !dbg !4957
  %12 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4958
  %major_filter_state_subblock = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %12, i32 0, i32 48, !dbg !4959
  %13 = load i32, i32* %major_filter_state_subblock, align 4, !dbg !4959
  store i32 %13, i32* %num_subblocks, align 4, !dbg !4957
  call void @llvm.dbg.declare(metadata i32* %subblock, metadata !4960, metadata !1746), !dbg !4961
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !4962, metadata !1746), !dbg !4963
  %14 = load i32, i32* %substr, align 4, !dbg !4964
  %idxprom = zext i32 %14 to i64, !dbg !4965
  %15 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4965
  %restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %15, i32 0, i32 43, !dbg !4966
  %arrayidx = getelementptr inbounds [4 x %struct.RestartHeader], [4 x %struct.RestartHeader]* %restart_header, i64 0, i64 %idxprom, !dbg !4965
  store %struct.RestartHeader* %arrayidx, %struct.RestartHeader** %rh, align 8, !dbg !4963
  call void @llvm.dbg.declare(metadata i32* %substr_restart_frame, metadata !4967, metadata !1746), !dbg !4968
  %16 = load i32, i32* %restart_frame.addr, align 4, !dbg !4969
  store i32 %16, i32* %substr_restart_frame, align 4, !dbg !4968
  call void @llvm.dbg.declare(metadata i8* %parity, metadata !4970, metadata !1746), !dbg !4971
  call void @llvm.dbg.declare(metadata i8* %checksum, metadata !4972, metadata !1746), !dbg !4973
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %pb, metadata !4974, metadata !1746), !dbg !4975
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %tmpb, metadata !4976, metadata !1746), !dbg !4977
  call void @llvm.dbg.declare(metadata i32* %params_changed, metadata !4978, metadata !1746), !dbg !4979
  %17 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !4980
  %18 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !4981
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %18, i32 0, i32 53, !dbg !4982
  store %struct.RestartHeader* %17, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !4983
  %19 = load i8*, i8** %buf.addr, align 8, !dbg !4984
  %20 = load i32, i32* %buf_size.addr, align 4, !dbg !4985
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %19, i32 %20), !dbg !4986
  store i32 0, i32* %subblock, align 4, !dbg !4987
  br label %for.cond3, !dbg !4989

for.cond3:                                        ; preds = %for.inc, %for.body
  %21 = load i32, i32* %subblock, align 4, !dbg !4990
  %22 = load i32, i32* %num_subblocks, align 4, !dbg !4993
  %cmp4 = icmp ule i32 %21, %22, !dbg !4994
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !4995

for.body5:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata i32* %subblock_index, metadata !4996, metadata !1746), !dbg !4998
  %23 = load i32, i32* %cur_subblock_index, align 4, !dbg !4999
  %inc = add i32 %23, 1, !dbg !4999
  store i32 %inc, i32* %cur_subblock_index, align 4, !dbg !4999
  store i32 %23, i32* %subblock_index, align 4, !dbg !5000
  %24 = load i32, i32* %substr, align 4, !dbg !5001
  %idxprom6 = zext i32 %24 to i64, !dbg !5002
  %25 = load i32, i32* %subblock_index, align 4, !dbg !5003
  %idxprom7 = zext i32 %25 to i64, !dbg !5002
  %26 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5002
  %major_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %26, i32 0, i32 45, !dbg !5004
  %arrayidx8 = getelementptr inbounds [17 x [4 x %struct.DecodingParams]], [17 x [4 x %struct.DecodingParams]]* %major_decoding_params, i64 0, i64 %idxprom7, !dbg !5002
  %arrayidx9 = getelementptr inbounds [4 x %struct.DecodingParams], [4 x %struct.DecodingParams]* %arrayidx8, i64 0, i64 %idxprom6, !dbg !5002
  %27 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5005
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %27, i32 0, i32 52, !dbg !5006
  store %struct.DecodingParams* %arrayidx9, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !5007
  %28 = load i32, i32* %subblock_index, align 4, !dbg !5008
  %idxprom10 = zext i32 %28 to i64, !dbg !5009
  %29 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5009
  %major_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %29, i32 0, i32 44, !dbg !5010
  %arrayidx11 = getelementptr inbounds [17 x [8 x %struct.ChannelParams]], [17 x [8 x %struct.ChannelParams]]* %major_channel_params, i64 0, i64 %idxprom10, !dbg !5009
  %arraydecay = getelementptr inbounds [8 x %struct.ChannelParams], [8 x %struct.ChannelParams]* %arrayidx11, i32 0, i32 0, !dbg !5009
  %30 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5011
  %cur_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %30, i32 0, i32 51, !dbg !5012
  store %struct.ChannelParams* %arraydecay, %struct.ChannelParams** %cur_channel_params, align 8, !dbg !5013
  %31 = load i32, i32* %substr, align 4, !dbg !5014
  %idxprom12 = zext i32 %31 to i64, !dbg !5015
  %32 = load i32, i32* %subblock_index, align 4, !dbg !5016
  %idxprom13 = zext i32 %32 to i64, !dbg !5015
  %33 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5015
  %major_params_changed = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %33, i32 0, i32 46, !dbg !5017
  %arrayidx14 = getelementptr inbounds [17 x [4 x i32]], [17 x [4 x i32]]* %major_params_changed, i64 0, i64 %idxprom13, !dbg !5015
  %arrayidx15 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx14, i64 0, i64 %idxprom12, !dbg !5015
  %34 = load i32, i32* %arrayidx15, align 4, !dbg !5015
  store i32 %34, i32* %params_changed, align 4, !dbg !5018
  %35 = load i32, i32* %substr_restart_frame, align 4, !dbg !5019
  %tobool = icmp ne i32 %35, 0, !dbg !5019
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5021

lor.lhs.false:                                    ; preds = %for.body5
  %36 = load i32, i32* %params_changed, align 4, !dbg !5022
  %tobool16 = icmp ne i32 %36, 0, !dbg !5022
  br i1 %tobool16, label %if.then, label %if.else20, !dbg !5024

if.then:                                          ; preds = %lor.lhs.false, %for.body5
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 1), !dbg !5025
  %37 = load i32, i32* %substr_restart_frame, align 4, !dbg !5027
  %tobool17 = icmp ne i32 %37, 0, !dbg !5027
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !5029

if.then18:                                        ; preds = %if.then
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 1), !dbg !5030
  %38 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5032
  call void @write_restart_header(%struct.MLPEncodeContext* %38, %struct.PutBitContext* %pb), !dbg !5033
  %39 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5034
  %lossless_check_data19 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %39, i32 0, i32 6, !dbg !5035
  store i32 0, i32* %lossless_check_data19, align 4, !dbg !5036
  br label %if.end, !dbg !5037

if.else:                                          ; preds = %if.then
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 0), !dbg !5038
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then18
  %40 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5040
  %41 = load i32, i32* %params_changed, align 4, !dbg !5041
  call void @write_decoding_params(%struct.MLPEncodeContext* %40, %struct.PutBitContext* %pb, i32 %41), !dbg !5042
  br label %if.end21, !dbg !5043

if.else20:                                        ; preds = %lor.lhs.false
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 0), !dbg !5044
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.end
  %42 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5046
  call void @write_block_data(%struct.MLPEncodeContext* %42, %struct.PutBitContext* %pb), !dbg !5047
  %43 = load i32, i32* %substr_restart_frame, align 4, !dbg !5048
  %tobool22 = icmp ne i32 %43, 0, !dbg !5049
  %lnot = xor i1 %tobool22, true, !dbg !5049
  %lnot.ext = zext i1 %lnot to i32, !dbg !5049
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %lnot.ext), !dbg !5050
  store i32 0, i32* %substr_restart_frame, align 4, !dbg !5051
  br label %for.inc, !dbg !5052

for.inc:                                          ; preds = %if.end21
  %44 = load i32, i32* %subblock, align 4, !dbg !5053
  %inc23 = add i32 %44, 1, !dbg !5053
  store i32 %inc23, i32* %subblock, align 4, !dbg !5053
  br label %for.cond3, !dbg !5055, !llvm.loop !5056

for.end:                                          ; preds = %for.cond3
  %call = call i32 @put_bits_count(%struct.PutBitContext* %pb), !dbg !5058
  %sub = sub nsw i32 0, %call, !dbg !5059
  %and = and i32 %sub, 15, !dbg !5060
  call void @put_bits(%struct.PutBitContext* %pb, i32 %and, i32 0), !dbg !5061
  %45 = load i32*, i32** %lossless_check_data, align 8, !dbg !5063
  %incdec.ptr = getelementptr inbounds i32, i32* %45, i32 1, !dbg !5063
  store i32* %incdec.ptr, i32** %lossless_check_data, align 8, !dbg !5063
  %46 = load i32, i32* %45, align 4, !dbg !5064
  %47 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5065
  %lossless_check_data24 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %47, i32 0, i32 6, !dbg !5066
  %48 = load i32, i32* %lossless_check_data24, align 4, !dbg !5067
  %xor = xor i32 %48, %46, !dbg !5067
  store i32 %xor, i32* %lossless_check_data24, align 4, !dbg !5067
  %49 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5068
  %last_frame = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %49, i32 0, i32 17, !dbg !5070
  %50 = load i32*, i32** %last_frame, align 8, !dbg !5070
  %51 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5071
  %inout_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %51, i32 0, i32 12, !dbg !5072
  %52 = load i32*, i32** %inout_buffer, align 32, !dbg !5072
  %cmp25 = icmp eq i32* %50, %52, !dbg !5073
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !5074

if.then26:                                        ; preds = %for.end
  call void @put_bits(%struct.PutBitContext* %pb, i32 32, i32 -768290252), !dbg !5075
  br label %if.end27, !dbg !5077

if.end27:                                         ; preds = %if.then26, %for.end
  %53 = bitcast %struct.PutBitContext* %tmpb to i8*, !dbg !5078
  %54 = bitcast %struct.PutBitContext* %pb to i8*, !dbg !5078
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 40, i32 8, i1 false), !dbg !5078
  call void @flush_put_bits(%struct.PutBitContext* %tmpb), !dbg !5079
  %55 = load i8*, i8** %buf.addr, align 8, !dbg !5080
  %call28 = call i32 @put_bits_count(%struct.PutBitContext* %pb), !dbg !5081
  %shr = ashr i32 %call28, 3, !dbg !5082
  %call29 = call zeroext i8 @ff_mlp_calculate_parity(i8* %55, i32 %shr), !dbg !5083
  %conv = zext i8 %call29 to i32, !dbg !5084
  %xor30 = xor i32 %conv, 169, !dbg !5085
  %conv31 = trunc i32 %xor30 to i8, !dbg !5084
  store i8 %conv31, i8* %parity, align 1, !dbg !5086
  %56 = load i8*, i8** %buf.addr, align 8, !dbg !5087
  %call32 = call i32 @put_bits_count(%struct.PutBitContext* %pb), !dbg !5088
  %shr33 = ashr i32 %call32, 3, !dbg !5089
  %call34 = call zeroext i8 @ff_mlp_checksum8(i8* %56, i32 %shr33), !dbg !5090
  store i8 %call34, i8* %checksum, align 1, !dbg !5091
  %57 = load i8, i8* %parity, align 1, !dbg !5092
  %conv35 = zext i8 %57 to i32, !dbg !5092
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %conv35), !dbg !5093
  %58 = load i8, i8* %checksum, align 1, !dbg !5094
  %conv36 = zext i8 %58 to i32, !dbg !5094
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %conv36), !dbg !5095
  call void @flush_put_bits(%struct.PutBitContext* %pb), !dbg !5096
  %call37 = call i32 @put_bits_count(%struct.PutBitContext* %pb), !dbg !5097
  %shr38 = ashr i32 %call37, 3, !dbg !5098
  %59 = load i32, i32* %end, align 4, !dbg !5099
  %add = add nsw i32 %59, %shr38, !dbg !5099
  store i32 %add, i32* %end, align 4, !dbg !5099
  %60 = load i32, i32* %end, align 4, !dbg !5100
  %conv39 = trunc i32 %60 to i16, !dbg !5100
  %61 = load i32, i32* %substr, align 4, !dbg !5101
  %idxprom40 = zext i32 %61 to i64, !dbg !5102
  %62 = load i16*, i16** %substream_data_len.addr, align 8, !dbg !5102
  %arrayidx41 = getelementptr inbounds i16, i16* %62, i64 %idxprom40, !dbg !5102
  store i16 %conv39, i16* %arrayidx41, align 2, !dbg !5103
  %call42 = call i32 @put_bits_count(%struct.PutBitContext* %pb), !dbg !5104
  %shr43 = ashr i32 %call42, 3, !dbg !5105
  %63 = load i8*, i8** %buf.addr, align 8, !dbg !5106
  %idx.ext44 = sext i32 %shr43 to i64, !dbg !5106
  %add.ptr45 = getelementptr inbounds i8, i8* %63, i64 %idx.ext44, !dbg !5106
  store i8* %add.ptr45, i8** %buf.addr, align 8, !dbg !5106
  br label %for.inc46, !dbg !5107

for.inc46:                                        ; preds = %if.end27
  %64 = load i32, i32* %substr, align 4, !dbg !5108
  %inc47 = add i32 %64, 1, !dbg !5108
  store i32 %inc47, i32* %substr, align 4, !dbg !5108
  br label %for.cond, !dbg !5110, !llvm.loop !5111

for.end48:                                        ; preds = %for.cond
  %65 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5113
  %major_filter_state_subblock49 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %65, i32 0, i32 48, !dbg !5114
  %66 = load i32, i32* %major_filter_state_subblock49, align 4, !dbg !5114
  %add50 = add i32 %66, 1, !dbg !5115
  %67 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5116
  %major_cur_subblock_index51 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %67, i32 0, i32 47, !dbg !5117
  %68 = load i32, i32* %major_cur_subblock_index51, align 32, !dbg !5118
  %add52 = add i32 %68, %add50, !dbg !5118
  store i32 %add52, i32* %major_cur_subblock_index51, align 32, !dbg !5118
  %69 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5119
  %major_filter_state_subblock53 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %69, i32 0, i32 48, !dbg !5120
  store i32 0, i32* %major_filter_state_subblock53, align 4, !dbg !5121
  %70 = load i8*, i8** %buf.addr, align 8, !dbg !5122
  ret i8* %70, !dbg !5123
}

; Function Attrs: nounwind uwtable
define internal void @write_frame_headers(%struct.MLPEncodeContext* %ctx, i8* %frame_header, i8* %substream_headers, i32 %length, i32 %restart_frame, i16* %substream_data_len) #1 !dbg !5124 {
entry:
  %x.addr.i59 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i59, metadata !5127, metadata !1746), !dbg !5132
  %x.addr.i52 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i52, metadata !5127, metadata !1746), !dbg !5134
  %x.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i, metadata !5127, metadata !1746), !dbg !5136
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %frame_header.addr = alloca i8*, align 8
  %substream_headers.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %restart_frame.addr = alloca i32, align 4
  %substream_data_len.addr = alloca i16*, align 8
  %access_unit_header = alloca i16, align 2
  %parity_nibble = alloca i16, align 2
  %substr = alloca i32, align 4
  %substr_hdr = alloca i16, align 2
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !5141, metadata !1746), !dbg !5142
  store i8* %frame_header, i8** %frame_header.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %frame_header.addr, metadata !5143, metadata !1746), !dbg !5144
  store i8* %substream_headers, i8** %substream_headers.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %substream_headers.addr, metadata !5145, metadata !1746), !dbg !5146
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !5147, metadata !1746), !dbg !5148
  store i32 %restart_frame, i32* %restart_frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %restart_frame.addr, metadata !5149, metadata !1746), !dbg !5150
  store i16* %substream_data_len, i16** %substream_data_len.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %substream_data_len.addr, metadata !5151, metadata !1746), !dbg !5152
  call void @llvm.dbg.declare(metadata i16* %access_unit_header, metadata !5153, metadata !1746), !dbg !5154
  store i16 0, i16* %access_unit_header, align 2, !dbg !5154
  call void @llvm.dbg.declare(metadata i16* %parity_nibble, metadata !5155, metadata !1746), !dbg !5156
  store i16 0, i16* %parity_nibble, align 2, !dbg !5156
  call void @llvm.dbg.declare(metadata i32* %substr, metadata !5157, metadata !1746), !dbg !5158
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5159
  %dts = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 32, !dbg !5160
  %1 = load i16, i16* %dts, align 2, !dbg !5160
  store i16 %1, i16* %parity_nibble, align 2, !dbg !5161
  %2 = load i32, i32* %length.addr, align 4, !dbg !5162
  %3 = load i16, i16* %parity_nibble, align 2, !dbg !5163
  %conv = zext i16 %3 to i32, !dbg !5163
  %xor = xor i32 %conv, %2, !dbg !5163
  %conv1 = trunc i32 %xor to i16, !dbg !5163
  store i16 %conv1, i16* %parity_nibble, align 2, !dbg !5163
  store i32 0, i32* %substr, align 4, !dbg !5164
  br label %for.cond, !dbg !5165

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %substr, align 4, !dbg !5166
  %5 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5168
  %num_substreams = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %5, i32 0, i32 1, !dbg !5169
  %6 = load i32, i32* %num_substreams, align 8, !dbg !5169
  %cmp = icmp ult i32 %4, %6, !dbg !5170
  br i1 %cmp, label %for.body, label %for.end, !dbg !5171

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %substr_hdr, metadata !5172, metadata !1746), !dbg !5173
  store i16 0, i16* %substr_hdr, align 2, !dbg !5173
  %7 = load i16, i16* %substr_hdr, align 2, !dbg !5174
  %conv3 = zext i16 %7 to i32, !dbg !5174
  %conv4 = trunc i32 %conv3 to i16, !dbg !5174
  store i16 %conv4, i16* %substr_hdr, align 2, !dbg !5174
  %8 = load i32, i32* %restart_frame.addr, align 4, !dbg !5175
  %tobool = icmp ne i32 %8, 0, !dbg !5176
  %lnot = xor i1 %tobool, true, !dbg !5176
  %lnot.ext = zext i1 %lnot to i32, !dbg !5176
  %shl = shl i32 %lnot.ext, 14, !dbg !5177
  %9 = load i16, i16* %substr_hdr, align 2, !dbg !5178
  %conv5 = zext i16 %9 to i32, !dbg !5178
  %or = or i32 %conv5, %shl, !dbg !5178
  %conv6 = trunc i32 %or to i16, !dbg !5178
  store i16 %conv6, i16* %substr_hdr, align 2, !dbg !5178
  %10 = load i16, i16* %substr_hdr, align 2, !dbg !5179
  %conv7 = zext i16 %10 to i32, !dbg !5179
  %or8 = or i32 %conv7, 8192, !dbg !5179
  %conv9 = trunc i32 %or8 to i16, !dbg !5179
  store i16 %conv9, i16* %substr_hdr, align 2, !dbg !5179
  %11 = load i16, i16* %substr_hdr, align 2, !dbg !5180
  %conv10 = zext i16 %11 to i32, !dbg !5180
  %conv11 = trunc i32 %conv10 to i16, !dbg !5180
  store i16 %conv11, i16* %substr_hdr, align 2, !dbg !5180
  %12 = load i32, i32* %substr, align 4, !dbg !5181
  %idxprom = zext i32 %12 to i64, !dbg !5182
  %13 = load i16*, i16** %substream_data_len.addr, align 8, !dbg !5182
  %arrayidx = getelementptr inbounds i16, i16* %13, i64 %idxprom, !dbg !5182
  %14 = load i16, i16* %arrayidx, align 2, !dbg !5182
  %conv12 = zext i16 %14 to i32, !dbg !5182
  %div = sdiv i32 %conv12, 2, !dbg !5183
  %and = and i32 %div, 4095, !dbg !5184
  %15 = load i16, i16* %substr_hdr, align 2, !dbg !5185
  %conv13 = zext i16 %15 to i32, !dbg !5185
  %or14 = or i32 %conv13, %and, !dbg !5185
  %conv15 = trunc i32 %or14 to i16, !dbg !5185
  store i16 %conv15, i16* %substr_hdr, align 2, !dbg !5185
  %16 = load i16, i16* %substr_hdr, align 2, !dbg !5186
  store i16 %16, i16* %x.addr.i, align 2, !dbg !5187
  %17 = load i16, i16* %x.addr.i, align 2, !dbg !5188
  %conv.i = zext i16 %17 to i32, !dbg !5188
  %shr.i = ashr i32 %conv.i, 8, !dbg !5189
  %18 = load i16, i16* %x.addr.i, align 2, !dbg !5190
  %conv1.i = zext i16 %18 to i32, !dbg !5190
  %shl.i = shl i32 %conv1.i, 8, !dbg !5191
  %or.i = or i32 %shr.i, %shl.i, !dbg !5192
  %conv2.i = trunc i32 %or.i to i16, !dbg !5193
  store i16 %conv2.i, i16* %x.addr.i, align 2, !dbg !5194
  %19 = load i16, i16* %x.addr.i, align 2, !dbg !5195
  %20 = load i8*, i8** %substream_headers.addr, align 8, !dbg !5196
  %21 = bitcast i8* %20 to %union.unaligned_16*, !dbg !5197
  %l = bitcast %union.unaligned_16* %21 to i16*, !dbg !5197
  store i16 %19, i16* %l, align 1, !dbg !5198
  %22 = load i8*, i8** %substream_headers.addr, align 8, !dbg !5199
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !5199
  store i8* %incdec.ptr, i8** %substream_headers.addr, align 8, !dbg !5199
  %23 = load i8, i8* %22, align 1, !dbg !5200
  %conv16 = zext i8 %23 to i32, !dbg !5200
  %24 = load i16, i16* %parity_nibble, align 2, !dbg !5201
  %conv17 = zext i16 %24 to i32, !dbg !5201
  %xor18 = xor i32 %conv17, %conv16, !dbg !5201
  %conv19 = trunc i32 %xor18 to i16, !dbg !5201
  store i16 %conv19, i16* %parity_nibble, align 2, !dbg !5201
  %25 = load i8*, i8** %substream_headers.addr, align 8, !dbg !5202
  %incdec.ptr20 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !5202
  store i8* %incdec.ptr20, i8** %substream_headers.addr, align 8, !dbg !5202
  %26 = load i8, i8* %25, align 1, !dbg !5203
  %conv21 = zext i8 %26 to i32, !dbg !5203
  %27 = load i16, i16* %parity_nibble, align 2, !dbg !5204
  %conv22 = zext i16 %27 to i32, !dbg !5204
  %xor23 = xor i32 %conv22, %conv21, !dbg !5204
  %conv24 = trunc i32 %xor23 to i16, !dbg !5204
  store i16 %conv24, i16* %parity_nibble, align 2, !dbg !5204
  br label %for.inc, !dbg !5205

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %substr, align 4, !dbg !5206
  %inc = add i32 %28, 1, !dbg !5206
  store i32 %inc, i32* %substr, align 4, !dbg !5206
  br label %for.cond, !dbg !5208, !llvm.loop !5209

for.end:                                          ; preds = %for.cond
  %29 = load i16, i16* %parity_nibble, align 2, !dbg !5211
  %conv25 = zext i16 %29 to i32, !dbg !5211
  %shr = ashr i32 %conv25, 8, !dbg !5212
  %30 = load i16, i16* %parity_nibble, align 2, !dbg !5213
  %conv26 = zext i16 %30 to i32, !dbg !5213
  %xor27 = xor i32 %conv26, %shr, !dbg !5213
  %conv28 = trunc i32 %xor27 to i16, !dbg !5213
  store i16 %conv28, i16* %parity_nibble, align 2, !dbg !5213
  %31 = load i16, i16* %parity_nibble, align 2, !dbg !5214
  %conv29 = zext i16 %31 to i32, !dbg !5214
  %shr30 = ashr i32 %conv29, 4, !dbg !5215
  %32 = load i16, i16* %parity_nibble, align 2, !dbg !5216
  %conv31 = zext i16 %32 to i32, !dbg !5216
  %xor32 = xor i32 %conv31, %shr30, !dbg !5216
  %conv33 = trunc i32 %xor32 to i16, !dbg !5216
  store i16 %conv33, i16* %parity_nibble, align 2, !dbg !5216
  %33 = load i16, i16* %parity_nibble, align 2, !dbg !5217
  %conv34 = zext i16 %33 to i32, !dbg !5217
  %and35 = and i32 %conv34, 15, !dbg !5217
  %conv36 = trunc i32 %and35 to i16, !dbg !5217
  store i16 %conv36, i16* %parity_nibble, align 2, !dbg !5217
  %34 = load i16, i16* %parity_nibble, align 2, !dbg !5218
  %conv37 = zext i16 %34 to i32, !dbg !5218
  %xor38 = xor i32 %conv37, 15, !dbg !5219
  %shl39 = shl i32 %xor38, 12, !dbg !5220
  %35 = load i16, i16* %access_unit_header, align 2, !dbg !5221
  %conv40 = zext i16 %35 to i32, !dbg !5221
  %or41 = or i32 %conv40, %shl39, !dbg !5221
  %conv42 = trunc i32 %or41 to i16, !dbg !5221
  store i16 %conv42, i16* %access_unit_header, align 2, !dbg !5221
  %36 = load i32, i32* %length.addr, align 4, !dbg !5222
  %and43 = and i32 %36, 4095, !dbg !5223
  %37 = load i16, i16* %access_unit_header, align 2, !dbg !5224
  %conv44 = zext i16 %37 to i32, !dbg !5224
  %or45 = or i32 %conv44, %and43, !dbg !5224
  %conv46 = trunc i32 %or45 to i16, !dbg !5224
  store i16 %conv46, i16* %access_unit_header, align 2, !dbg !5224
  %38 = load i16, i16* %access_unit_header, align 2, !dbg !5225
  store i16 %38, i16* %x.addr.i59, align 2, !dbg !5226
  %39 = load i16, i16* %x.addr.i59, align 2, !dbg !5227
  %conv.i60 = zext i16 %39 to i32, !dbg !5227
  %shr.i61 = ashr i32 %conv.i60, 8, !dbg !5228
  %40 = load i16, i16* %x.addr.i59, align 2, !dbg !5229
  %conv1.i62 = zext i16 %40 to i32, !dbg !5229
  %shl.i63 = shl i32 %conv1.i62, 8, !dbg !5230
  %or.i64 = or i32 %shr.i61, %shl.i63, !dbg !5231
  %conv2.i65 = trunc i32 %or.i64 to i16, !dbg !5232
  store i16 %conv2.i65, i16* %x.addr.i59, align 2, !dbg !5233
  %41 = load i16, i16* %x.addr.i59, align 2, !dbg !5234
  %42 = load i8*, i8** %frame_header.addr, align 8, !dbg !5235
  %43 = bitcast i8* %42 to %union.unaligned_16*, !dbg !5236
  %l48 = bitcast %union.unaligned_16* %43 to i16*, !dbg !5236
  store i16 %41, i16* %l48, align 1, !dbg !5237
  %44 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5238
  %dts49 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %44, i32 0, i32 32, !dbg !5239
  %45 = load i16, i16* %dts49, align 2, !dbg !5239
  store i16 %45, i16* %x.addr.i52, align 2, !dbg !5240
  %46 = load i16, i16* %x.addr.i52, align 2, !dbg !5241
  %conv.i53 = zext i16 %46 to i32, !dbg !5241
  %shr.i54 = ashr i32 %conv.i53, 8, !dbg !5242
  %47 = load i16, i16* %x.addr.i52, align 2, !dbg !5243
  %conv1.i55 = zext i16 %47 to i32, !dbg !5243
  %shl.i56 = shl i32 %conv1.i55, 8, !dbg !5244
  %or.i57 = or i32 %shr.i54, %shl.i56, !dbg !5245
  %conv2.i58 = trunc i32 %or.i57 to i16, !dbg !5246
  store i16 %conv2.i58, i16* %x.addr.i52, align 2, !dbg !5247
  %48 = load i16, i16* %x.addr.i52, align 2, !dbg !5248
  %49 = load i8*, i8** %frame_header.addr, align 8, !dbg !5249
  %add.ptr = getelementptr inbounds i8, i8* %49, i64 2, !dbg !5250
  %50 = bitcast i8* %add.ptr to %union.unaligned_16*, !dbg !5251
  %l51 = bitcast %union.unaligned_16* %50 to i16*, !dbg !5251
  store i16 %48, i16* %l51, align 1, !dbg !5252
  ret void, !dbg !5253
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_put_bits(%struct.PutBitContext* %s, i8* %buffer, i32 %buffer_size) #5 !dbg !5254 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffer_size.addr = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5258, metadata !1746), !dbg !5259
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !5260, metadata !1746), !dbg !5261
  store i32 %buffer_size, i32* %buffer_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.addr, metadata !5262, metadata !1746), !dbg !5263
  %0 = load i32, i32* %buffer_size.addr, align 4, !dbg !5264
  %cmp = icmp slt i32 %0, 0, !dbg !5266
  br i1 %cmp, label %if.then, label %if.end, !dbg !5267

if.then:                                          ; preds = %entry
  store i32 0, i32* %buffer_size.addr, align 4, !dbg !5268
  store i8* null, i8** %buffer.addr, align 8, !dbg !5270
  br label %if.end, !dbg !5271

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %buffer_size.addr, align 4, !dbg !5272
  %mul = mul nsw i32 8, %1, !dbg !5273
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5274
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 5, !dbg !5275
  store i32 %mul, i32* %size_in_bits, align 8, !dbg !5276
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !5277
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5278
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 2, !dbg !5279
  store i8* %3, i8** %buf, align 8, !dbg !5280
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5281
  %buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %5, i32 0, i32 2, !dbg !5282
  %6 = load i8*, i8** %buf1, align 8, !dbg !5282
  %7 = load i32, i32* %buffer_size.addr, align 4, !dbg !5283
  %idx.ext = sext i32 %7 to i64, !dbg !5284
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !5284
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5285
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 4, !dbg !5286
  store i8* %add.ptr, i8** %buf_end, align 8, !dbg !5287
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5288
  %buf2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 2, !dbg !5289
  %10 = load i8*, i8** %buf2, align 8, !dbg !5289
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5290
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !5291
  store i8* %10, i8** %buf_ptr, align 8, !dbg !5292
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5293
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 1, !dbg !5294
  store i32 32, i32* %bit_left, align 4, !dbg !5295
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5296
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %13, i32 0, i32 0, !dbg !5297
  store i32 0, i32* %bit_buf, align 8, !dbg !5298
  ret void, !dbg !5299
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_bits(%struct.PutBitContext* %s, i32 %n, i32 %value) #5 !dbg !5300 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !5303, metadata !1746), !dbg !5307
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5313, metadata !1746), !dbg !5314
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5315, metadata !1746), !dbg !5316
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5317, metadata !1746), !dbg !5318
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !5319, metadata !1746), !dbg !5320
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !5321, metadata !1746), !dbg !5322
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5323
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !5324
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !5324
  store i32 %1, i32* %bit_buf, align 4, !dbg !5325
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5326
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !5327
  %3 = load i32, i32* %bit_left2, align 4, !dbg !5327
  store i32 %3, i32* %bit_left, align 4, !dbg !5328
  %4 = load i32, i32* %n.addr, align 4, !dbg !5329
  %5 = load i32, i32* %bit_left, align 4, !dbg !5330
  %cmp = icmp slt i32 %4, %5, !dbg !5331
  br i1 %cmp, label %if.then, label %if.else, !dbg !5332

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %bit_buf, align 4, !dbg !5333
  %7 = load i32, i32* %n.addr, align 4, !dbg !5335
  %shl = shl i32 %6, %7, !dbg !5336
  %8 = load i32, i32* %value.addr, align 4, !dbg !5337
  %or = or i32 %shl, %8, !dbg !5338
  store i32 %or, i32* %bit_buf, align 4, !dbg !5339
  %9 = load i32, i32* %n.addr, align 4, !dbg !5340
  %10 = load i32, i32* %bit_left, align 4, !dbg !5341
  %sub = sub nsw i32 %10, %9, !dbg !5341
  store i32 %sub, i32* %bit_left, align 4, !dbg !5341
  br label %if.end12, !dbg !5342

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %bit_left, align 4, !dbg !5343
  %12 = load i32, i32* %bit_buf, align 4, !dbg !5344
  %shl3 = shl i32 %12, %11, !dbg !5344
  store i32 %shl3, i32* %bit_buf, align 4, !dbg !5344
  %13 = load i32, i32* %value.addr, align 4, !dbg !5345
  %14 = load i32, i32* %n.addr, align 4, !dbg !5346
  %15 = load i32, i32* %bit_left, align 4, !dbg !5347
  %sub4 = sub nsw i32 %14, %15, !dbg !5348
  %shr = lshr i32 %13, %sub4, !dbg !5349
  %16 = load i32, i32* %bit_buf, align 4, !dbg !5350
  %or5 = or i32 %16, %shr, !dbg !5350
  store i32 %or5, i32* %bit_buf, align 4, !dbg !5350
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5351
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %17, i32 0, i32 4, !dbg !5352
  %18 = load i8*, i8** %buf_end, align 8, !dbg !5352
  %19 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5353
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %19, i32 0, i32 3, !dbg !5354
  %20 = load i8*, i8** %buf_ptr, align 8, !dbg !5354
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !5355
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !5355
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5355
  %cmp6 = icmp slt i64 3, %sub.ptr.sub, !dbg !5356
  br i1 %cmp6, label %if.then7, label %if.else10, !dbg !5357

if.then7:                                         ; preds = %if.else
  %21 = load i32, i32* %bit_buf, align 4, !dbg !5358
  store i32 %21, i32* %x.addr.i, align 4, !dbg !5359
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !5360
  %shl.i = shl i32 %22, 8, !dbg !5361
  %and.i = and i32 %shl.i, 65280, !dbg !5362
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !5363
  %shr.i = lshr i32 %23, 8, !dbg !5364
  %and1.i = and i32 %shr.i, 255, !dbg !5365
  %or.i = or i32 %and.i, %and1.i, !dbg !5366
  %shl2.i = shl i32 %or.i, 16, !dbg !5367
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !5368
  %shr3.i = lshr i32 %24, 16, !dbg !5369
  %shl4.i = shl i32 %shr3.i, 8, !dbg !5370
  %and5.i = and i32 %shl4.i, 65280, !dbg !5371
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !5372
  %shr6.i = lshr i32 %25, 16, !dbg !5373
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !5374
  %and8.i = and i32 %shr7.i, 255, !dbg !5375
  %or9.i = or i32 %and5.i, %and8.i, !dbg !5376
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !5377
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5378
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %26, i32 0, i32 3, !dbg !5379
  %27 = load i8*, i8** %buf_ptr8, align 8, !dbg !5379
  %28 = bitcast i8* %27 to %union.unaligned_32*, !dbg !5380
  %l = bitcast %union.unaligned_32* %28 to i32*, !dbg !5380
  store i32 %or10.i, i32* %l, align 1, !dbg !5381
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5382
  %buf_ptr9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %29, i32 0, i32 3, !dbg !5383
  %30 = load i8*, i8** %buf_ptr9, align 8, !dbg !5384
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 4, !dbg !5384
  store i8* %add.ptr, i8** %buf_ptr9, align 8, !dbg !5384
  br label %if.end, !dbg !5385

if.else10:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17, i32 0, i32 0)), !dbg !5386
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  %31 = load i32, i32* %n.addr, align 4, !dbg !5388
  %sub11 = sub nsw i32 32, %31, !dbg !5389
  %32 = load i32, i32* %bit_left, align 4, !dbg !5390
  %add = add nsw i32 %32, %sub11, !dbg !5390
  store i32 %add, i32* %bit_left, align 4, !dbg !5390
  %33 = load i32, i32* %value.addr, align 4, !dbg !5391
  store i32 %33, i32* %bit_buf, align 4, !dbg !5392
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %34 = load i32, i32* %bit_buf, align 4, !dbg !5393
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5394
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %35, i32 0, i32 0, !dbg !5395
  store i32 %34, i32* %bit_buf13, align 8, !dbg !5396
  %36 = load i32, i32* %bit_left, align 4, !dbg !5397
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5398
  %bit_left14 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %37, i32 0, i32 1, !dbg !5399
  store i32 %36, i32* %bit_left14, align 4, !dbg !5400
  ret void, !dbg !5401
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @flush_put_bits(%struct.PutBitContext* %s) #5 !dbg !5402 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5405, metadata !1746), !dbg !5406
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5407
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 1, !dbg !5409
  %1 = load i32, i32* %bit_left, align 4, !dbg !5409
  %cmp = icmp slt i32 %1, 32, !dbg !5410
  br i1 %cmp, label %if.then, label %if.end, !dbg !5411

if.then:                                          ; preds = %entry
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5412
  %bit_left1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !5413
  %3 = load i32, i32* %bit_left1, align 4, !dbg !5413
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5414
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 0, !dbg !5415
  %5 = load i32, i32* %bit_buf, align 8, !dbg !5416
  %shl = shl i32 %5, %3, !dbg !5416
  store i32 %shl, i32* %bit_buf, align 8, !dbg !5416
  br label %if.end, !dbg !5414

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !5417

while.cond:                                       ; preds = %do.end, %if.end
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5418
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %6, i32 0, i32 1, !dbg !5420
  %7 = load i32, i32* %bit_left2, align 4, !dbg !5420
  %cmp3 = icmp slt i32 %7, 32, !dbg !5421
  br i1 %cmp3, label %while.body, label %while.end, !dbg !5422

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !5423, !llvm.loop !5425

do.body:                                          ; preds = %while.body
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5426
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 3, !dbg !5430
  %9 = load i8*, i8** %buf_ptr, align 8, !dbg !5430
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5431
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %10, i32 0, i32 4, !dbg !5432
  %11 = load i8*, i8** %buf_end, align 8, !dbg !5432
  %cmp4 = icmp ult i8* %9, %11, !dbg !5433
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !5434

if.then5:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i32 0, i32 0), i32 108), !dbg !5435
  call void @abort() #7, !dbg !5438
  unreachable, !dbg !5440

if.end6:                                          ; preds = %do.body
  br label %do.end, !dbg !5441

do.end:                                           ; preds = %if.end6
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5443
  %bit_buf7 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 0, !dbg !5444
  %13 = load i32, i32* %bit_buf7, align 8, !dbg !5444
  %shr = lshr i32 %13, 24, !dbg !5445
  %conv = trunc i32 %shr to i8, !dbg !5443
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5446
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %14, i32 0, i32 3, !dbg !5447
  %15 = load i8*, i8** %buf_ptr8, align 8, !dbg !5448
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !5448
  store i8* %incdec.ptr, i8** %buf_ptr8, align 8, !dbg !5448
  store i8 %conv, i8* %15, align 1, !dbg !5449
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5450
  %bit_buf9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %16, i32 0, i32 0, !dbg !5451
  %17 = load i32, i32* %bit_buf9, align 8, !dbg !5452
  %shl10 = shl i32 %17, 8, !dbg !5452
  store i32 %shl10, i32* %bit_buf9, align 8, !dbg !5452
  %18 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5453
  %bit_left11 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %18, i32 0, i32 1, !dbg !5454
  %19 = load i32, i32* %bit_left11, align 4, !dbg !5455
  %add = add nsw i32 %19, 8, !dbg !5455
  store i32 %add, i32* %bit_left11, align 4, !dbg !5455
  br label %while.cond, !dbg !5456, !llvm.loop !5458

while.end:                                        ; preds = %while.cond
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5459
  %bit_left12 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %20, i32 0, i32 1, !dbg !5460
  store i32 32, i32* %bit_left12, align 4, !dbg !5461
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5462
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %21, i32 0, i32 0, !dbg !5463
  store i32 0, i32* %bit_buf13, align 8, !dbg !5464
  ret void, !dbg !5465
}

declare zeroext i16 @ff_mlp_checksum16(i8*, i32) #3

; Function Attrs: noreturn nounwind
declare void @abort() #6

; Function Attrs: nounwind uwtable
define internal void @write_restart_header(%struct.MLPEncodeContext* %ctx, %struct.PutBitContext* %pb) #1 !dbg !5466 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %rh = alloca %struct.RestartHeader*, align 8
  %lossless_check = alloca i32, align 4
  %start_count = alloca i32, align 4
  %tmpb = alloca %struct.PutBitContext, align 8
  %checksum = alloca i8, align 1
  %ch = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !5469, metadata !1746), !dbg !5470
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !5471, metadata !1746), !dbg !5472
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !5473, metadata !1746), !dbg !5474
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5475
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 53, !dbg !5476
  %1 = load %struct.RestartHeader*, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !5476
  store %struct.RestartHeader* %1, %struct.RestartHeader** %rh, align 8, !dbg !5474
  call void @llvm.dbg.declare(metadata i32* %lossless_check, metadata !5477, metadata !1746), !dbg !5478
  %2 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5479
  %lossless_check_data = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %2, i32 0, i32 6, !dbg !5480
  %3 = load i32, i32* %lossless_check_data, align 4, !dbg !5480
  %call = call zeroext i8 @xor_32_to_8(i32 %3), !dbg !5481
  %conv = zext i8 %call to i32, !dbg !5481
  store i32 %conv, i32* %lossless_check, align 4, !dbg !5478
  call void @llvm.dbg.declare(metadata i32* %start_count, metadata !5482, metadata !1746), !dbg !5483
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5484
  %call1 = call i32 @put_bits_count(%struct.PutBitContext* %4), !dbg !5485
  store i32 %call1, i32* %start_count, align 4, !dbg !5483
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %tmpb, metadata !5486, metadata !1746), !dbg !5487
  call void @llvm.dbg.declare(metadata i8* %checksum, metadata !5488, metadata !1746), !dbg !5489
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5490, metadata !1746), !dbg !5491
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5492
  call void @put_bits(%struct.PutBitContext* %5, i32 14, i32 12778), !dbg !5493
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5494
  %7 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5495
  %timestamp = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %7, i32 0, i32 31, !dbg !5496
  %8 = load i16, i16* %timestamp, align 4, !dbg !5496
  %conv2 = zext i16 %8 to i32, !dbg !5495
  call void @put_bits(%struct.PutBitContext* %6, i32 16, i32 %conv2), !dbg !5497
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5498
  %10 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5499
  %min_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %10, i32 0, i32 0, !dbg !5500
  %11 = load i8, i8* %min_channel, align 4, !dbg !5500
  %conv3 = zext i8 %11 to i32, !dbg !5499
  call void @put_bits(%struct.PutBitContext* %9, i32 4, i32 %conv3), !dbg !5501
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5502
  %13 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5503
  %max_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %13, i32 0, i32 1, !dbg !5504
  %14 = load i8, i8* %max_channel, align 1, !dbg !5504
  %conv4 = zext i8 %14 to i32, !dbg !5503
  call void @put_bits(%struct.PutBitContext* %12, i32 4, i32 %conv4), !dbg !5505
  %15 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5506
  %16 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5507
  %max_matrix_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %16, i32 0, i32 2, !dbg !5508
  %17 = load i8, i8* %max_matrix_channel, align 2, !dbg !5508
  %conv5 = zext i8 %17 to i32, !dbg !5507
  call void @put_bits(%struct.PutBitContext* %15, i32 4, i32 %conv5), !dbg !5509
  %18 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5510
  %19 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5511
  %noise_shift = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %19, i32 0, i32 3, !dbg !5512
  %20 = load i8, i8* %noise_shift, align 1, !dbg !5512
  %conv6 = zext i8 %20 to i32, !dbg !5511
  call void @put_bits(%struct.PutBitContext* %18, i32 4, i32 %conv6), !dbg !5513
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5514
  %22 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5515
  %noisegen_seed = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %22, i32 0, i32 4, !dbg !5516
  %23 = load i32, i32* %noisegen_seed, align 4, !dbg !5516
  call void @put_bits(%struct.PutBitContext* %21, i32 23, i32 %23), !dbg !5517
  %24 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5518
  call void @put_bits(%struct.PutBitContext* %24, i32 4, i32 0), !dbg !5519
  %25 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5520
  %26 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5521
  %max_huff_lsbs = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %26, i32 0, i32 7, !dbg !5522
  %27 = load i8, i8* %max_huff_lsbs, align 4, !dbg !5522
  %conv7 = zext i8 %27 to i32, !dbg !5521
  call void @put_bits(%struct.PutBitContext* %25, i32 5, i32 %conv7), !dbg !5523
  %28 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5524
  %29 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5525
  %max_output_bits = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %29, i32 0, i32 8, !dbg !5526
  %30 = load i8, i8* %max_output_bits, align 1, !dbg !5526
  %conv8 = zext i8 %30 to i32, !dbg !5525
  call void @put_bits(%struct.PutBitContext* %28, i32 5, i32 %conv8), !dbg !5527
  %31 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5528
  %32 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5529
  %max_output_bits9 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %32, i32 0, i32 8, !dbg !5530
  %33 = load i8, i8* %max_output_bits9, align 1, !dbg !5530
  %conv10 = zext i8 %33 to i32, !dbg !5529
  call void @put_bits(%struct.PutBitContext* %31, i32 5, i32 %conv10), !dbg !5531
  %34 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5532
  %35 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5533
  %data_check_present = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %35, i32 0, i32 5, !dbg !5534
  %36 = load i32, i32* %data_check_present, align 4, !dbg !5534
  call void @put_bits(%struct.PutBitContext* %34, i32 1, i32 %36), !dbg !5535
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5536
  %38 = load i32, i32* %lossless_check, align 4, !dbg !5537
  call void @put_bits(%struct.PutBitContext* %37, i32 8, i32 %38), !dbg !5538
  %39 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5539
  call void @put_bits(%struct.PutBitContext* %39, i32 16, i32 0), !dbg !5540
  store i32 0, i32* %ch, align 4, !dbg !5541
  br label %for.cond, !dbg !5543

for.cond:                                         ; preds = %for.inc, %entry
  %40 = load i32, i32* %ch, align 4, !dbg !5544
  %41 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5547
  %max_matrix_channel11 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %41, i32 0, i32 2, !dbg !5548
  %42 = load i8, i8* %max_matrix_channel11, align 2, !dbg !5548
  %conv12 = zext i8 %42 to i32, !dbg !5547
  %cmp = icmp ule i32 %40, %conv12, !dbg !5549
  br i1 %cmp, label %for.body, label %for.end, !dbg !5550

for.body:                                         ; preds = %for.cond
  %43 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5551
  %44 = load i32, i32* %ch, align 4, !dbg !5552
  call void @put_bits(%struct.PutBitContext* %43, i32 6, i32 %44), !dbg !5553
  br label %for.inc, !dbg !5553

for.inc:                                          ; preds = %for.body
  %45 = load i32, i32* %ch, align 4, !dbg !5554
  %inc = add i32 %45, 1, !dbg !5554
  store i32 %inc, i32* %ch, align 4, !dbg !5554
  br label %for.cond, !dbg !5556, !llvm.loop !5557

for.end:                                          ; preds = %for.cond
  %46 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5559
  %47 = bitcast %struct.PutBitContext* %tmpb to i8*, !dbg !5560
  %48 = bitcast %struct.PutBitContext* %46 to i8*, !dbg !5560
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 40, i32 8, i1 false), !dbg !5560
  call void @flush_put_bits(%struct.PutBitContext* %tmpb), !dbg !5561
  %49 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5562
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %49, i32 0, i32 2, !dbg !5563
  %50 = load i8*, i8** %buf, align 8, !dbg !5563
  %51 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5564
  %call14 = call i32 @put_bits_count(%struct.PutBitContext* %51), !dbg !5565
  %52 = load i32, i32* %start_count, align 4, !dbg !5566
  %sub = sub i32 %call14, %52, !dbg !5567
  %call15 = call zeroext i8 @ff_mlp_restart_checksum(i8* %50, i32 %sub), !dbg !5568
  store i8 %call15, i8* %checksum, align 1, !dbg !5570
  %53 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5571
  %54 = load i8, i8* %checksum, align 1, !dbg !5572
  %conv16 = zext i8 %54 to i32, !dbg !5572
  call void @put_bits(%struct.PutBitContext* %53, i32 8, i32 %conv16), !dbg !5573
  ret void, !dbg !5574
}

; Function Attrs: nounwind uwtable
define internal void @write_decoding_params(%struct.MLPEncodeContext* %ctx, %struct.PutBitContext* %pb, i32 %params_changed) #1 !dbg !5575 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %params_changed.addr = alloca i32, align 4
  %dp = alloca %struct.DecodingParams*, align 8
  %rh = alloca %struct.RestartHeader*, align 8
  %mp = alloca %struct.MatrixParams*, align 8
  %ch = alloca i32, align 4
  %cp = alloca %struct.ChannelParams*, align 8
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !5578, metadata !1746), !dbg !5579
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !5580, metadata !1746), !dbg !5581
  store i32 %params_changed, i32* %params_changed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %params_changed.addr, metadata !5582, metadata !1746), !dbg !5583
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !5584, metadata !1746), !dbg !5585
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5586
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 52, !dbg !5587
  %1 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !5587
  store %struct.DecodingParams* %1, %struct.DecodingParams** %dp, align 8, !dbg !5585
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !5588, metadata !1746), !dbg !5589
  %2 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5590
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %2, i32 0, i32 53, !dbg !5591
  %3 = load %struct.RestartHeader*, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !5591
  store %struct.RestartHeader* %3, %struct.RestartHeader** %rh, align 8, !dbg !5589
  call void @llvm.dbg.declare(metadata %struct.MatrixParams** %mp, metadata !5592, metadata !1746), !dbg !5593
  %4 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5594
  %matrix_params = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %4, i32 0, i32 2, !dbg !5595
  store %struct.MatrixParams* %matrix_params, %struct.MatrixParams** %mp, align 8, !dbg !5593
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5596, metadata !1746), !dbg !5597
  %5 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5598
  %param_presence_flags = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %5, i32 0, i32 3, !dbg !5600
  %6 = load i8, i8* %param_presence_flags, align 4, !dbg !5600
  %conv = zext i8 %6 to i32, !dbg !5598
  %cmp = icmp ne i32 %conv, 255, !dbg !5601
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5602

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %params_changed.addr, align 4, !dbg !5603
  %and = and i32 %7, 256, !dbg !5604
  %tobool = icmp ne i32 %and, 0, !dbg !5604
  br i1 %tobool, label %if.then, label %if.else, !dbg !5605

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5607
  call void @put_bits(%struct.PutBitContext* %8, i32 1, i32 1), !dbg !5609
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5610
  %10 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5611
  %param_presence_flags2 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %10, i32 0, i32 3, !dbg !5612
  %11 = load i8, i8* %param_presence_flags2, align 4, !dbg !5612
  %conv3 = zext i8 %11 to i32, !dbg !5611
  call void @put_bits(%struct.PutBitContext* %9, i32 8, i32 %conv3), !dbg !5613
  br label %if.end, !dbg !5614

if.else:                                          ; preds = %land.lhs.true, %entry
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5615
  call void @put_bits(%struct.PutBitContext* %12, i32 1, i32 0), !dbg !5617
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5618
  %param_presence_flags4 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %13, i32 0, i32 3, !dbg !5620
  %14 = load i8, i8* %param_presence_flags4, align 4, !dbg !5620
  %conv5 = zext i8 %14 to i32, !dbg !5618
  %and6 = and i32 %conv5, 128, !dbg !5621
  %tobool7 = icmp ne i32 %and6, 0, !dbg !5621
  br i1 %tobool7, label %if.then8, label %if.end15, !dbg !5622

if.then8:                                         ; preds = %if.end
  %15 = load i32, i32* %params_changed.addr, align 4, !dbg !5623
  %and9 = and i32 %15, 128, !dbg !5626
  %tobool10 = icmp ne i32 %and9, 0, !dbg !5626
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !5627

if.then11:                                        ; preds = %if.then8
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5628
  call void @put_bits(%struct.PutBitContext* %16, i32 1, i32 1), !dbg !5630
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5631
  %18 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5632
  %blocksize = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %18, i32 0, i32 0, !dbg !5633
  %19 = load i16, i16* %blocksize, align 4, !dbg !5633
  %conv12 = zext i16 %19 to i32, !dbg !5632
  call void @put_bits(%struct.PutBitContext* %17, i32 9, i32 %conv12), !dbg !5634
  br label %if.end14, !dbg !5635

if.else13:                                        ; preds = %if.then8
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5636
  call void @put_bits(%struct.PutBitContext* %20, i32 1, i32 0), !dbg !5638
  br label %if.end14

if.end14:                                         ; preds = %if.else13, %if.then11
  br label %if.end15, !dbg !5639

if.end15:                                         ; preds = %if.end14, %if.end
  %21 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5640
  %param_presence_flags16 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %21, i32 0, i32 3, !dbg !5642
  %22 = load i8, i8* %param_presence_flags16, align 4, !dbg !5642
  %conv17 = zext i8 %22 to i32, !dbg !5640
  %and18 = and i32 %conv17, 64, !dbg !5643
  %tobool19 = icmp ne i32 %and18, 0, !dbg !5643
  br i1 %tobool19, label %if.then20, label %if.end26, !dbg !5644

if.then20:                                        ; preds = %if.end15
  %23 = load i32, i32* %params_changed.addr, align 4, !dbg !5645
  %and21 = and i32 %23, 64, !dbg !5648
  %tobool22 = icmp ne i32 %and21, 0, !dbg !5648
  br i1 %tobool22, label %if.then23, label %if.else24, !dbg !5649

if.then23:                                        ; preds = %if.then20
  %24 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5650
  call void @put_bits(%struct.PutBitContext* %24, i32 1, i32 1), !dbg !5652
  %25 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5653
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5654
  call void @write_matrix_params(%struct.MLPEncodeContext* %25, %struct.PutBitContext* %26), !dbg !5655
  br label %if.end25, !dbg !5656

if.else24:                                        ; preds = %if.then20
  %27 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5657
  call void @put_bits(%struct.PutBitContext* %27, i32 1, i32 0), !dbg !5659
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.then23
  br label %if.end26, !dbg !5660

if.end26:                                         ; preds = %if.end25, %if.end15
  %28 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5661
  %param_presence_flags27 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %28, i32 0, i32 3, !dbg !5663
  %29 = load i8, i8* %param_presence_flags27, align 4, !dbg !5663
  %conv28 = zext i8 %29 to i32, !dbg !5661
  %and29 = and i32 %conv28, 32, !dbg !5664
  %tobool30 = icmp ne i32 %and29, 0, !dbg !5664
  br i1 %tobool30, label %if.then31, label %if.end41, !dbg !5665

if.then31:                                        ; preds = %if.end26
  %30 = load i32, i32* %params_changed.addr, align 4, !dbg !5666
  %and32 = and i32 %30, 32, !dbg !5669
  %tobool33 = icmp ne i32 %and32, 0, !dbg !5669
  br i1 %tobool33, label %if.then34, label %if.else39, !dbg !5670

if.then34:                                        ; preds = %if.then31
  %31 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5671
  call void @put_bits(%struct.PutBitContext* %31, i32 1, i32 1), !dbg !5673
  store i32 0, i32* %ch, align 4, !dbg !5674
  br label %for.cond, !dbg !5676

for.cond:                                         ; preds = %for.inc, %if.then34
  %32 = load i32, i32* %ch, align 4, !dbg !5677
  %33 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5680
  %max_matrix_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %33, i32 0, i32 2, !dbg !5681
  %34 = load i8, i8* %max_matrix_channel, align 2, !dbg !5681
  %conv35 = zext i8 %34 to i32, !dbg !5680
  %cmp36 = icmp ule i32 %32, %conv35, !dbg !5682
  br i1 %cmp36, label %for.body, label %for.end, !dbg !5683

for.body:                                         ; preds = %for.cond
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5684
  %36 = load i32, i32* %ch, align 4, !dbg !5685
  %idxprom = zext i32 %36 to i64, !dbg !5686
  %37 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !5686
  %shift = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %37, i32 0, i32 5, !dbg !5687
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %shift, i64 0, i64 %idxprom, !dbg !5686
  %38 = load i8, i8* %arrayidx, align 1, !dbg !5686
  %conv38 = sext i8 %38 to i32, !dbg !5686
  call void @put_sbits(%struct.PutBitContext* %35, i32 4, i32 %conv38), !dbg !5688
  br label %for.inc, !dbg !5688

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %ch, align 4, !dbg !5689
  %inc = add i32 %39, 1, !dbg !5689
  store i32 %inc, i32* %ch, align 4, !dbg !5689
  br label %for.cond, !dbg !5691, !llvm.loop !5692

for.end:                                          ; preds = %for.cond
  br label %if.end40, !dbg !5694

if.else39:                                        ; preds = %if.then31
  %40 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5695
  call void @put_bits(%struct.PutBitContext* %40, i32 1, i32 0), !dbg !5697
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %for.end
  br label %if.end41, !dbg !5698

if.end41:                                         ; preds = %if.end40, %if.end26
  %41 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5699
  %param_presence_flags42 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %41, i32 0, i32 3, !dbg !5701
  %42 = load i8, i8* %param_presence_flags42, align 4, !dbg !5701
  %conv43 = zext i8 %42 to i32, !dbg !5699
  %and44 = and i32 %conv43, 16, !dbg !5702
  %tobool45 = icmp ne i32 %and44, 0, !dbg !5702
  br i1 %tobool45, label %if.then46, label %if.end63, !dbg !5703

if.then46:                                        ; preds = %if.end41
  %43 = load i32, i32* %params_changed.addr, align 4, !dbg !5704
  %and47 = and i32 %43, 16, !dbg !5707
  %tobool48 = icmp ne i32 %and47, 0, !dbg !5707
  br i1 %tobool48, label %if.then49, label %if.else61, !dbg !5708

if.then49:                                        ; preds = %if.then46
  %44 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5709
  call void @put_bits(%struct.PutBitContext* %44, i32 1, i32 1), !dbg !5711
  store i32 0, i32* %ch, align 4, !dbg !5712
  br label %for.cond50, !dbg !5714

for.cond50:                                       ; preds = %for.inc58, %if.then49
  %45 = load i32, i32* %ch, align 4, !dbg !5715
  %46 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5718
  %max_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %46, i32 0, i32 1, !dbg !5719
  %47 = load i8, i8* %max_channel, align 1, !dbg !5719
  %conv51 = zext i8 %47 to i32, !dbg !5718
  %cmp52 = icmp ule i32 %45, %conv51, !dbg !5720
  br i1 %cmp52, label %for.body54, label %for.end60, !dbg !5721

for.body54:                                       ; preds = %for.cond50
  %48 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5722
  %49 = load i32, i32* %ch, align 4, !dbg !5723
  %idxprom55 = zext i32 %49 to i64, !dbg !5724
  %50 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5724
  %quant_step_size = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %50, i32 0, i32 1, !dbg !5725
  %arrayidx56 = getelementptr inbounds [8 x i8], [8 x i8]* %quant_step_size, i64 0, i64 %idxprom55, !dbg !5724
  %51 = load i8, i8* %arrayidx56, align 1, !dbg !5724
  %conv57 = zext i8 %51 to i32, !dbg !5724
  call void @put_bits(%struct.PutBitContext* %48, i32 4, i32 %conv57), !dbg !5726
  br label %for.inc58, !dbg !5726

for.inc58:                                        ; preds = %for.body54
  %52 = load i32, i32* %ch, align 4, !dbg !5727
  %inc59 = add i32 %52, 1, !dbg !5727
  store i32 %inc59, i32* %ch, align 4, !dbg !5727
  br label %for.cond50, !dbg !5729, !llvm.loop !5730

for.end60:                                        ; preds = %for.cond50
  br label %if.end62, !dbg !5732

if.else61:                                        ; preds = %if.then46
  %53 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5733
  call void @put_bits(%struct.PutBitContext* %53, i32 1, i32 0), !dbg !5735
  br label %if.end62

if.end62:                                         ; preds = %if.else61, %for.end60
  br label %if.end63, !dbg !5736

if.end63:                                         ; preds = %if.end62, %if.end41
  %54 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5737
  %min_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %54, i32 0, i32 0, !dbg !5739
  %55 = load i8, i8* %min_channel, align 4, !dbg !5739
  %conv64 = zext i8 %55 to i32, !dbg !5737
  store i32 %conv64, i32* %ch, align 4, !dbg !5740
  br label %for.cond65, !dbg !5741

for.cond65:                                       ; preds = %for.inc116, %if.end63
  %56 = load i32, i32* %ch, align 4, !dbg !5742
  %57 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5745
  %max_channel66 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %57, i32 0, i32 1, !dbg !5746
  %58 = load i8, i8* %max_channel66, align 1, !dbg !5746
  %conv67 = zext i8 %58 to i32, !dbg !5745
  %cmp68 = icmp ule i32 %56, %conv67, !dbg !5747
  br i1 %cmp68, label %for.body70, label %for.end118, !dbg !5748

for.body70:                                       ; preds = %for.cond65
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %cp, metadata !5749, metadata !1746), !dbg !5751
  %59 = load i32, i32* %ch, align 4, !dbg !5752
  %idxprom71 = zext i32 %59 to i64, !dbg !5753
  %60 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5753
  %cur_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %60, i32 0, i32 51, !dbg !5754
  %61 = load %struct.ChannelParams*, %struct.ChannelParams** %cur_channel_params, align 8, !dbg !5754
  %arrayidx72 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %61, i64 %idxprom71, !dbg !5753
  store %struct.ChannelParams* %arrayidx72, %struct.ChannelParams** %cp, align 8, !dbg !5751
  %62 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5755
  %param_presence_flags73 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %62, i32 0, i32 3, !dbg !5757
  %63 = load i8, i8* %param_presence_flags73, align 4, !dbg !5757
  %conv74 = zext i8 %63 to i32, !dbg !5755
  %and75 = and i32 %conv74, 15, !dbg !5758
  %tobool76 = icmp ne i32 %and75, 0, !dbg !5758
  br i1 %tobool76, label %if.then77, label %if.else114, !dbg !5759

if.then77:                                        ; preds = %for.body70
  %64 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5760
  call void @put_bits(%struct.PutBitContext* %64, i32 1, i32 1), !dbg !5762
  %65 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5763
  %param_presence_flags78 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %65, i32 0, i32 3, !dbg !5765
  %66 = load i8, i8* %param_presence_flags78, align 4, !dbg !5765
  %conv79 = zext i8 %66 to i32, !dbg !5763
  %and80 = and i32 %conv79, 8, !dbg !5766
  %tobool81 = icmp ne i32 %and80, 0, !dbg !5766
  br i1 %tobool81, label %if.then82, label %if.end88, !dbg !5767

if.then82:                                        ; preds = %if.then77
  %67 = load i32, i32* %params_changed.addr, align 4, !dbg !5768
  %and83 = and i32 %67, 8, !dbg !5771
  %tobool84 = icmp ne i32 %and83, 0, !dbg !5771
  br i1 %tobool84, label %if.then85, label %if.else86, !dbg !5772

if.then85:                                        ; preds = %if.then82
  %68 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5773
  call void @put_bits(%struct.PutBitContext* %68, i32 1, i32 1), !dbg !5775
  %69 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5776
  %70 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5777
  %71 = load i32, i32* %ch, align 4, !dbg !5778
  call void @write_filter_params(%struct.MLPEncodeContext* %69, %struct.PutBitContext* %70, i32 %71, i32 0), !dbg !5779
  br label %if.end87, !dbg !5780

if.else86:                                        ; preds = %if.then82
  %72 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5781
  call void @put_bits(%struct.PutBitContext* %72, i32 1, i32 0), !dbg !5783
  br label %if.end87

if.end87:                                         ; preds = %if.else86, %if.then85
  br label %if.end88, !dbg !5784

if.end88:                                         ; preds = %if.end87, %if.then77
  %73 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5785
  %param_presence_flags89 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %73, i32 0, i32 3, !dbg !5787
  %74 = load i8, i8* %param_presence_flags89, align 4, !dbg !5787
  %conv90 = zext i8 %74 to i32, !dbg !5785
  %and91 = and i32 %conv90, 4, !dbg !5788
  %tobool92 = icmp ne i32 %and91, 0, !dbg !5788
  br i1 %tobool92, label %if.then93, label %if.end99, !dbg !5789

if.then93:                                        ; preds = %if.end88
  %75 = load i32, i32* %params_changed.addr, align 4, !dbg !5790
  %and94 = and i32 %75, 4, !dbg !5793
  %tobool95 = icmp ne i32 %and94, 0, !dbg !5793
  br i1 %tobool95, label %if.then96, label %if.else97, !dbg !5794

if.then96:                                        ; preds = %if.then93
  %76 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5795
  call void @put_bits(%struct.PutBitContext* %76, i32 1, i32 1), !dbg !5797
  %77 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5798
  %78 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5799
  %79 = load i32, i32* %ch, align 4, !dbg !5800
  call void @write_filter_params(%struct.MLPEncodeContext* %77, %struct.PutBitContext* %78, i32 %79, i32 1), !dbg !5801
  br label %if.end98, !dbg !5802

if.else97:                                        ; preds = %if.then93
  %80 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5803
  call void @put_bits(%struct.PutBitContext* %80, i32 1, i32 0), !dbg !5805
  br label %if.end98

if.end98:                                         ; preds = %if.else97, %if.then96
  br label %if.end99, !dbg !5806

if.end99:                                         ; preds = %if.end98, %if.end88
  %81 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5807
  %param_presence_flags100 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %81, i32 0, i32 3, !dbg !5809
  %82 = load i8, i8* %param_presence_flags100, align 4, !dbg !5809
  %conv101 = zext i8 %82 to i32, !dbg !5807
  %and102 = and i32 %conv101, 2, !dbg !5810
  %tobool103 = icmp ne i32 %and102, 0, !dbg !5810
  br i1 %tobool103, label %if.then104, label %if.end111, !dbg !5811

if.then104:                                       ; preds = %if.end99
  %83 = load i32, i32* %params_changed.addr, align 4, !dbg !5812
  %and105 = and i32 %83, 2, !dbg !5815
  %tobool106 = icmp ne i32 %and105, 0, !dbg !5815
  br i1 %tobool106, label %if.then107, label %if.else109, !dbg !5816

if.then107:                                       ; preds = %if.then104
  %84 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5817
  call void @put_bits(%struct.PutBitContext* %84, i32 1, i32 1), !dbg !5819
  %85 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5820
  %86 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !5821
  %huff_offset = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %86, i32 0, i32 2, !dbg !5822
  %87 = load i16, i16* %huff_offset, align 4, !dbg !5822
  %conv108 = sext i16 %87 to i32, !dbg !5821
  call void @put_sbits(%struct.PutBitContext* %85, i32 15, i32 %conv108), !dbg !5823
  br label %if.end110, !dbg !5824

if.else109:                                       ; preds = %if.then104
  %88 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5825
  call void @put_bits(%struct.PutBitContext* %88, i32 1, i32 0), !dbg !5827
  br label %if.end110

if.end110:                                        ; preds = %if.else109, %if.then107
  br label %if.end111, !dbg !5828

if.end111:                                        ; preds = %if.end110, %if.end99
  %89 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5829
  %90 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !5830
  %codebook = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %90, i32 0, i32 4, !dbg !5831
  %91 = load i8, i8* %codebook, align 4, !dbg !5831
  %conv112 = zext i8 %91 to i32, !dbg !5830
  call void @put_bits(%struct.PutBitContext* %89, i32 2, i32 %conv112), !dbg !5832
  %92 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5833
  %93 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !5834
  %huff_lsbs = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %93, i32 0, i32 5, !dbg !5835
  %94 = load i8, i8* %huff_lsbs, align 1, !dbg !5835
  %conv113 = zext i8 %94 to i32, !dbg !5834
  call void @put_bits(%struct.PutBitContext* %92, i32 5, i32 %conv113), !dbg !5836
  br label %if.end115, !dbg !5837

if.else114:                                       ; preds = %for.body70
  %95 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5838
  call void @put_bits(%struct.PutBitContext* %95, i32 1, i32 0), !dbg !5840
  br label %if.end115

if.end115:                                        ; preds = %if.else114, %if.end111
  br label %for.inc116, !dbg !5841

for.inc116:                                       ; preds = %if.end115
  %96 = load i32, i32* %ch, align 4, !dbg !5842
  %inc117 = add i32 %96, 1, !dbg !5842
  store i32 %inc117, i32* %ch, align 4, !dbg !5842
  br label %for.cond65, !dbg !5844, !llvm.loop !5845

for.end118:                                       ; preds = %for.cond65
  ret void, !dbg !5847
}

; Function Attrs: nounwind uwtable
define internal void @write_block_data(%struct.MLPEncodeContext* %ctx, %struct.PutBitContext* %pb) #1 !dbg !5848 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %dp = alloca %struct.DecodingParams*, align 8
  %rh = alloca %struct.RestartHeader*, align 8
  %sample_buffer = alloca i32*, align 8
  %sign_huff_offset = alloca [8 x i32], align 16
  %codebook_index = alloca [8 x i32], align 16
  %lsb_bits = alloca [8 x i32], align 16
  %i = alloca i32, align 4
  %ch = alloca i32, align 4
  %cp = alloca %struct.ChannelParams*, align 8
  %sign_shift = alloca i32, align 4
  %sample = alloca i32, align 4
  %vlc = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !5849, metadata !1746), !dbg !5850
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !5851, metadata !1746), !dbg !5852
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !5853, metadata !1746), !dbg !5854
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5855
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 52, !dbg !5856
  %1 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !5856
  store %struct.DecodingParams* %1, %struct.DecodingParams** %dp, align 8, !dbg !5854
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !5857, metadata !1746), !dbg !5858
  %2 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5859
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %2, i32 0, i32 53, !dbg !5860
  %3 = load %struct.RestartHeader*, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !5860
  store %struct.RestartHeader* %3, %struct.RestartHeader** %rh, align 8, !dbg !5858
  call void @llvm.dbg.declare(metadata i32** %sample_buffer, metadata !5861, metadata !1746), !dbg !5862
  %4 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5863
  %write_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %4, i32 0, i32 14, !dbg !5864
  %5 = load i32*, i32** %write_buffer, align 16, !dbg !5864
  store i32* %5, i32** %sample_buffer, align 8, !dbg !5862
  call void @llvm.dbg.declare(metadata [8 x i32]* %sign_huff_offset, metadata !5865, metadata !1746), !dbg !5866
  call void @llvm.dbg.declare(metadata [8 x i32]* %codebook_index, metadata !5867, metadata !1746), !dbg !5868
  call void @llvm.dbg.declare(metadata [8 x i32]* %lsb_bits, metadata !5869, metadata !1746), !dbg !5870
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5871, metadata !1746), !dbg !5872
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5873, metadata !1746), !dbg !5874
  %6 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5875
  %min_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %6, i32 0, i32 0, !dbg !5877
  %7 = load i8, i8* %min_channel, align 4, !dbg !5877
  %conv = zext i8 %7 to i32, !dbg !5875
  store i32 %conv, i32* %ch, align 4, !dbg !5878
  br label %for.cond, !dbg !5879

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %ch, align 4, !dbg !5880
  %9 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5883
  %max_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %9, i32 0, i32 1, !dbg !5884
  %10 = load i8, i8* %max_channel, align 1, !dbg !5884
  %conv1 = zext i8 %10 to i32, !dbg !5883
  %cmp = icmp ule i32 %8, %conv1, !dbg !5885
  br i1 %cmp, label %for.body, label %for.end, !dbg !5886

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %cp, metadata !5887, metadata !1746), !dbg !5889
  %11 = load i32, i32* %ch, align 4, !dbg !5890
  %idxprom = zext i32 %11 to i64, !dbg !5891
  %12 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !5891
  %cur_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %12, i32 0, i32 51, !dbg !5892
  %13 = load %struct.ChannelParams*, %struct.ChannelParams** %cur_channel_params, align 8, !dbg !5892
  %arrayidx = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %13, i64 %idxprom, !dbg !5891
  store %struct.ChannelParams* %arrayidx, %struct.ChannelParams** %cp, align 8, !dbg !5889
  call void @llvm.dbg.declare(metadata i32* %sign_shift, metadata !5893, metadata !1746), !dbg !5894
  %14 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !5895
  %huff_lsbs = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %14, i32 0, i32 5, !dbg !5896
  %15 = load i8, i8* %huff_lsbs, align 1, !dbg !5896
  %conv3 = zext i8 %15 to i32, !dbg !5895
  %16 = load i32, i32* %ch, align 4, !dbg !5897
  %idxprom4 = zext i32 %16 to i64, !dbg !5898
  %17 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5898
  %quant_step_size = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %17, i32 0, i32 1, !dbg !5899
  %arrayidx5 = getelementptr inbounds [8 x i8], [8 x i8]* %quant_step_size, i64 0, i64 %idxprom4, !dbg !5898
  %18 = load i8, i8* %arrayidx5, align 1, !dbg !5898
  %conv6 = zext i8 %18 to i32, !dbg !5898
  %sub = sub nsw i32 %conv3, %conv6, !dbg !5900
  %19 = load i32, i32* %ch, align 4, !dbg !5901
  %idxprom7 = zext i32 %19 to i64, !dbg !5902
  %arrayidx8 = getelementptr inbounds [8 x i32], [8 x i32]* %lsb_bits, i64 0, i64 %idxprom7, !dbg !5902
  store i32 %sub, i32* %arrayidx8, align 4, !dbg !5903
  %20 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !5904
  %codebook = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %20, i32 0, i32 4, !dbg !5905
  %21 = load i8, i8* %codebook, align 4, !dbg !5905
  %conv9 = zext i8 %21 to i32, !dbg !5904
  %sub10 = sub nsw i32 %conv9, 1, !dbg !5906
  %22 = load i32, i32* %ch, align 4, !dbg !5907
  %idxprom11 = zext i32 %22 to i64, !dbg !5908
  %arrayidx12 = getelementptr inbounds [8 x i32], [8 x i32]* %codebook_index, i64 0, i64 %idxprom11, !dbg !5908
  store i32 %sub10, i32* %arrayidx12, align 4, !dbg !5909
  %23 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !5910
  %huff_offset = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %23, i32 0, i32 2, !dbg !5911
  %24 = load i16, i16* %huff_offset, align 4, !dbg !5911
  %conv13 = sext i16 %24 to i32, !dbg !5910
  %25 = load i32, i32* %ch, align 4, !dbg !5912
  %idxprom14 = zext i32 %25 to i64, !dbg !5913
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %sign_huff_offset, i64 0, i64 %idxprom14, !dbg !5913
  store i32 %conv13, i32* %arrayidx15, align 4, !dbg !5914
  %26 = load i32, i32* %ch, align 4, !dbg !5915
  %idxprom16 = zext i32 %26 to i64, !dbg !5916
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %lsb_bits, i64 0, i64 %idxprom16, !dbg !5916
  %27 = load i32, i32* %arrayidx17, align 4, !dbg !5916
  %sub18 = sub nsw i32 %27, 1, !dbg !5917
  store i32 %sub18, i32* %sign_shift, align 4, !dbg !5918
  %28 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !5919
  %codebook19 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %28, i32 0, i32 4, !dbg !5921
  %29 = load i8, i8* %codebook19, align 4, !dbg !5921
  %conv20 = zext i8 %29 to i32, !dbg !5919
  %cmp21 = icmp sgt i32 %conv20, 0, !dbg !5922
  br i1 %cmp21, label %if.then, label %if.end, !dbg !5923

if.then:                                          ; preds = %for.body
  %30 = load i32, i32* %ch, align 4, !dbg !5924
  %idxprom23 = zext i32 %30 to i64, !dbg !5926
  %arrayidx24 = getelementptr inbounds [8 x i32], [8 x i32]* %lsb_bits, i64 0, i64 %idxprom23, !dbg !5926
  %31 = load i32, i32* %arrayidx24, align 4, !dbg !5926
  %shl = shl i32 7, %31, !dbg !5927
  %32 = load i32, i32* %ch, align 4, !dbg !5928
  %idxprom25 = zext i32 %32 to i64, !dbg !5929
  %arrayidx26 = getelementptr inbounds [8 x i32], [8 x i32]* %sign_huff_offset, i64 0, i64 %idxprom25, !dbg !5929
  %33 = load i32, i32* %arrayidx26, align 4, !dbg !5930
  %sub27 = sub nsw i32 %33, %shl, !dbg !5930
  store i32 %sub27, i32* %arrayidx26, align 4, !dbg !5930
  %34 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !5931
  %codebook28 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %34, i32 0, i32 4, !dbg !5932
  %35 = load i8, i8* %codebook28, align 4, !dbg !5932
  %conv29 = zext i8 %35 to i32, !dbg !5931
  %sub30 = sub nsw i32 3, %conv29, !dbg !5933
  %36 = load i32, i32* %sign_shift, align 4, !dbg !5934
  %add = add nsw i32 %36, %sub30, !dbg !5934
  store i32 %add, i32* %sign_shift, align 4, !dbg !5934
  br label %if.end, !dbg !5935

if.end:                                           ; preds = %if.then, %for.body
  %37 = load i32, i32* %sign_shift, align 4, !dbg !5936
  %cmp31 = icmp sge i32 %37, 0, !dbg !5938
  br i1 %cmp31, label %if.then33, label %if.end38, !dbg !5939

if.then33:                                        ; preds = %if.end
  %38 = load i32, i32* %sign_shift, align 4, !dbg !5940
  %shl34 = shl i32 1, %38, !dbg !5941
  %39 = load i32, i32* %ch, align 4, !dbg !5942
  %idxprom35 = zext i32 %39 to i64, !dbg !5943
  %arrayidx36 = getelementptr inbounds [8 x i32], [8 x i32]* %sign_huff_offset, i64 0, i64 %idxprom35, !dbg !5943
  %40 = load i32, i32* %arrayidx36, align 4, !dbg !5944
  %sub37 = sub nsw i32 %40, %shl34, !dbg !5944
  store i32 %sub37, i32* %arrayidx36, align 4, !dbg !5944
  br label %if.end38, !dbg !5943

if.end38:                                         ; preds = %if.then33, %if.end
  br label %for.inc, !dbg !5945

for.inc:                                          ; preds = %if.end38
  %41 = load i32, i32* %ch, align 4, !dbg !5946
  %inc = add i32 %41, 1, !dbg !5946
  store i32 %inc, i32* %ch, align 4, !dbg !5946
  br label %for.cond, !dbg !5948, !llvm.loop !5949

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5951
  br label %for.cond39, !dbg !5953

for.cond39:                                       ; preds = %for.inc89, %for.end
  %42 = load i32, i32* %i, align 4, !dbg !5954
  %43 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5957
  %blocksize = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %43, i32 0, i32 0, !dbg !5958
  %44 = load i16, i16* %blocksize, align 4, !dbg !5958
  %conv40 = zext i16 %44 to i32, !dbg !5957
  %cmp41 = icmp ult i32 %42, %conv40, !dbg !5959
  br i1 %cmp41, label %for.body43, label %for.end91, !dbg !5960

for.body43:                                       ; preds = %for.cond39
  %45 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5961
  %min_channel44 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %45, i32 0, i32 0, !dbg !5964
  %46 = load i8, i8* %min_channel44, align 4, !dbg !5964
  %conv45 = zext i8 %46 to i32, !dbg !5961
  store i32 %conv45, i32* %ch, align 4, !dbg !5965
  br label %for.cond46, !dbg !5966

for.cond46:                                       ; preds = %for.inc86, %for.body43
  %47 = load i32, i32* %ch, align 4, !dbg !5967
  %48 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !5970
  %max_channel47 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %48, i32 0, i32 1, !dbg !5971
  %49 = load i8, i8* %max_channel47, align 1, !dbg !5971
  %conv48 = zext i8 %49 to i32, !dbg !5970
  %cmp49 = icmp ule i32 %47, %conv48, !dbg !5972
  br i1 %cmp49, label %for.body51, label %for.end88, !dbg !5973

for.body51:                                       ; preds = %for.cond46
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !5974, metadata !1746), !dbg !5976
  %50 = load i32*, i32** %sample_buffer, align 8, !dbg !5977
  %incdec.ptr = getelementptr inbounds i32, i32* %50, i32 1, !dbg !5977
  store i32* %incdec.ptr, i32** %sample_buffer, align 8, !dbg !5977
  %51 = load i32, i32* %50, align 4, !dbg !5978
  %52 = load i32, i32* %ch, align 4, !dbg !5979
  %idxprom52 = zext i32 %52 to i64, !dbg !5980
  %53 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !5980
  %quant_step_size53 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %53, i32 0, i32 1, !dbg !5981
  %arrayidx54 = getelementptr inbounds [8 x i8], [8 x i8]* %quant_step_size53, i64 0, i64 %idxprom52, !dbg !5980
  %54 = load i8, i8* %arrayidx54, align 1, !dbg !5980
  %conv55 = zext i8 %54 to i32, !dbg !5980
  %shr = ashr i32 %51, %conv55, !dbg !5982
  store i32 %shr, i32* %sample, align 4, !dbg !5976
  %55 = load i32, i32* %ch, align 4, !dbg !5983
  %idxprom56 = zext i32 %55 to i64, !dbg !5984
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %sign_huff_offset, i64 0, i64 %idxprom56, !dbg !5984
  %56 = load i32, i32* %arrayidx57, align 4, !dbg !5984
  %57 = load i32, i32* %sample, align 4, !dbg !5985
  %sub58 = sub nsw i32 %57, %56, !dbg !5985
  store i32 %sub58, i32* %sample, align 4, !dbg !5985
  %58 = load i32, i32* %ch, align 4, !dbg !5986
  %idxprom59 = zext i32 %58 to i64, !dbg !5988
  %arrayidx60 = getelementptr inbounds [8 x i32], [8 x i32]* %codebook_index, i64 0, i64 %idxprom59, !dbg !5988
  %59 = load i32, i32* %arrayidx60, align 4, !dbg !5988
  %cmp61 = icmp sge i32 %59, 0, !dbg !5989
  br i1 %cmp61, label %if.then63, label %if.end83, !dbg !5990

if.then63:                                        ; preds = %for.body51
  call void @llvm.dbg.declare(metadata i32* %vlc, metadata !5991, metadata !1746), !dbg !5993
  %60 = load i32, i32* %sample, align 4, !dbg !5994
  %61 = load i32, i32* %ch, align 4, !dbg !5995
  %idxprom64 = zext i32 %61 to i64, !dbg !5996
  %arrayidx65 = getelementptr inbounds [8 x i32], [8 x i32]* %lsb_bits, i64 0, i64 %idxprom64, !dbg !5996
  %62 = load i32, i32* %arrayidx65, align 4, !dbg !5996
  %shr66 = ashr i32 %60, %62, !dbg !5997
  store i32 %shr66, i32* %vlc, align 4, !dbg !5993
  %63 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5998
  %64 = load i32, i32* %vlc, align 4, !dbg !5999
  %idxprom67 = sext i32 %64 to i64, !dbg !6000
  %65 = load i32, i32* %ch, align 4, !dbg !6001
  %idxprom68 = zext i32 %65 to i64, !dbg !6002
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %codebook_index, i64 0, i64 %idxprom68, !dbg !6002
  %66 = load i32, i32* %arrayidx69, align 4, !dbg !6002
  %idxprom70 = sext i32 %66 to i64, !dbg !6000
  %arrayidx71 = getelementptr inbounds [3 x [18 x [2 x i8]]], [3 x [18 x [2 x i8]]]* @ff_mlp_huffman_tables, i64 0, i64 %idxprom70, !dbg !6000
  %arrayidx72 = getelementptr inbounds [18 x [2 x i8]], [18 x [2 x i8]]* %arrayidx71, i64 0, i64 %idxprom67, !dbg !6000
  %arrayidx73 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx72, i64 0, i64 1, !dbg !6000
  %67 = load i8, i8* %arrayidx73, align 1, !dbg !6000
  %conv74 = zext i8 %67 to i32, !dbg !6000
  %68 = load i32, i32* %vlc, align 4, !dbg !6003
  %idxprom75 = sext i32 %68 to i64, !dbg !6004
  %69 = load i32, i32* %ch, align 4, !dbg !6005
  %idxprom76 = zext i32 %69 to i64, !dbg !6006
  %arrayidx77 = getelementptr inbounds [8 x i32], [8 x i32]* %codebook_index, i64 0, i64 %idxprom76, !dbg !6006
  %70 = load i32, i32* %arrayidx77, align 4, !dbg !6006
  %idxprom78 = sext i32 %70 to i64, !dbg !6004
  %arrayidx79 = getelementptr inbounds [3 x [18 x [2 x i8]]], [3 x [18 x [2 x i8]]]* @ff_mlp_huffman_tables, i64 0, i64 %idxprom78, !dbg !6004
  %arrayidx80 = getelementptr inbounds [18 x [2 x i8]], [18 x [2 x i8]]* %arrayidx79, i64 0, i64 %idxprom75, !dbg !6004
  %arrayidx81 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx80, i64 0, i64 0, !dbg !6004
  %71 = load i8, i8* %arrayidx81, align 2, !dbg !6004
  %conv82 = zext i8 %71 to i32, !dbg !6004
  call void @put_bits(%struct.PutBitContext* %63, i32 %conv74, i32 %conv82), !dbg !6007
  br label %if.end83, !dbg !6008

if.end83:                                         ; preds = %if.then63, %for.body51
  %72 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6009
  %73 = load i32, i32* %ch, align 4, !dbg !6010
  %idxprom84 = zext i32 %73 to i64, !dbg !6011
  %arrayidx85 = getelementptr inbounds [8 x i32], [8 x i32]* %lsb_bits, i64 0, i64 %idxprom84, !dbg !6011
  %74 = load i32, i32* %arrayidx85, align 4, !dbg !6011
  %75 = load i32, i32* %sample, align 4, !dbg !6012
  call void @put_sbits(%struct.PutBitContext* %72, i32 %74, i32 %75), !dbg !6013
  br label %for.inc86, !dbg !6014

for.inc86:                                        ; preds = %if.end83
  %76 = load i32, i32* %ch, align 4, !dbg !6015
  %inc87 = add i32 %76, 1, !dbg !6015
  store i32 %inc87, i32* %ch, align 4, !dbg !6015
  br label %for.cond46, !dbg !6017, !llvm.loop !6018

for.end88:                                        ; preds = %for.cond46
  %77 = load i32*, i32** %sample_buffer, align 8, !dbg !6020
  %add.ptr = getelementptr inbounds i32, i32* %77, i64 2, !dbg !6020
  store i32* %add.ptr, i32** %sample_buffer, align 8, !dbg !6020
  br label %for.inc89, !dbg !6021

for.inc89:                                        ; preds = %for.end88
  %78 = load i32, i32* %i, align 4, !dbg !6022
  %inc90 = add i32 %78, 1, !dbg !6022
  store i32 %inc90, i32* %i, align 4, !dbg !6022
  br label %for.cond39, !dbg !6024, !llvm.loop !6025

for.end91:                                        ; preds = %for.cond39
  %79 = load i32*, i32** %sample_buffer, align 8, !dbg !6027
  %80 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6028
  %write_buffer92 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %80, i32 0, i32 14, !dbg !6029
  store i32* %79, i32** %write_buffer92, align 16, !dbg !6030
  ret void, !dbg !6031
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @put_bits_count(%struct.PutBitContext* %s) #5 !dbg !6032 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !6035, metadata !1746), !dbg !6036
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6037
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 3, !dbg !6038
  %1 = load i8*, i8** %buf_ptr, align 8, !dbg !6038
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6039
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 2, !dbg !6040
  %3 = load i8*, i8** %buf, align 8, !dbg !6040
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !6041
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !6041
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6041
  %mul = mul nsw i64 %sub.ptr.sub, 8, !dbg !6042
  %add = add nsw i64 %mul, 32, !dbg !6043
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6044
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 1, !dbg !6045
  %5 = load i32, i32* %bit_left, align 4, !dbg !6045
  %conv = sext i32 %5 to i64, !dbg !6044
  %sub = sub nsw i64 %add, %conv, !dbg !6046
  %conv1 = trunc i64 %sub to i32, !dbg !6047
  ret i32 %conv1, !dbg !6048
}

declare zeroext i8 @ff_mlp_calculate_parity(i8*, i32) #3

declare zeroext i8 @ff_mlp_checksum8(i8*, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @xor_32_to_8(i32 %value) #5 !dbg !6049 {
entry:
  %value.addr = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6052, metadata !1746), !dbg !6053
  %0 = load i32, i32* %value.addr, align 4, !dbg !6054
  %shr = lshr i32 %0, 16, !dbg !6055
  %1 = load i32, i32* %value.addr, align 4, !dbg !6056
  %xor = xor i32 %1, %shr, !dbg !6056
  store i32 %xor, i32* %value.addr, align 4, !dbg !6056
  %2 = load i32, i32* %value.addr, align 4, !dbg !6057
  %shr1 = lshr i32 %2, 8, !dbg !6058
  %3 = load i32, i32* %value.addr, align 4, !dbg !6059
  %xor2 = xor i32 %3, %shr1, !dbg !6059
  store i32 %xor2, i32* %value.addr, align 4, !dbg !6059
  %4 = load i32, i32* %value.addr, align 4, !dbg !6060
  %conv = trunc i32 %4 to i8, !dbg !6060
  ret i8 %conv, !dbg !6061
}

declare zeroext i8 @ff_mlp_restart_checksum(i8*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @write_matrix_params(%struct.MLPEncodeContext* %ctx, %struct.PutBitContext* %pb) #1 !dbg !6062 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %dp = alloca %struct.DecodingParams*, align 8
  %mp = alloca %struct.MatrixParams*, align 8
  %mat = alloca i32, align 4
  %channel = alloca i32, align 4
  %coeff = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !6063, metadata !1746), !dbg !6064
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !6065, metadata !1746), !dbg !6066
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !6067, metadata !1746), !dbg !6068
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6069
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 52, !dbg !6070
  %1 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !6070
  store %struct.DecodingParams* %1, %struct.DecodingParams** %dp, align 8, !dbg !6068
  call void @llvm.dbg.declare(metadata %struct.MatrixParams** %mp, metadata !6071, metadata !1746), !dbg !6072
  %2 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !6073
  %matrix_params = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %2, i32 0, i32 2, !dbg !6074
  store %struct.MatrixParams* %matrix_params, %struct.MatrixParams** %mp, align 8, !dbg !6072
  call void @llvm.dbg.declare(metadata i32* %mat, metadata !6075, metadata !1746), !dbg !6076
  %3 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6077
  %4 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6078
  %count = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %4, i32 0, i32 0, !dbg !6079
  %5 = load i8, i8* %count, align 4, !dbg !6079
  %conv = zext i8 %5 to i32, !dbg !6078
  call void @put_bits(%struct.PutBitContext* %3, i32 4, i32 %conv), !dbg !6080
  store i32 0, i32* %mat, align 4, !dbg !6081
  br label %for.cond, !dbg !6083

for.cond:                                         ; preds = %for.inc25, %entry
  %6 = load i32, i32* %mat, align 4, !dbg !6084
  %7 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6087
  %count1 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %7, i32 0, i32 0, !dbg !6088
  %8 = load i8, i8* %count1, align 4, !dbg !6088
  %conv2 = zext i8 %8 to i32, !dbg !6087
  %cmp = icmp ult i32 %6, %conv2, !dbg !6089
  br i1 %cmp, label %for.body, label %for.end27, !dbg !6090

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !6091, metadata !1746), !dbg !6093
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6094
  %10 = load i32, i32* %mat, align 4, !dbg !6095
  %idxprom = zext i32 %10 to i64, !dbg !6096
  %11 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6096
  %outch = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %11, i32 0, i32 1, !dbg !6097
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %outch, i64 0, i64 %idxprom, !dbg !6096
  %12 = load i8, i8* %arrayidx, align 1, !dbg !6096
  %conv4 = zext i8 %12 to i32, !dbg !6096
  call void @put_bits(%struct.PutBitContext* %9, i32 4, i32 %conv4), !dbg !6098
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6099
  %14 = load i32, i32* %mat, align 4, !dbg !6100
  %idxprom5 = zext i32 %14 to i64, !dbg !6101
  %15 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6101
  %fbits = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %15, i32 0, i32 4, !dbg !6102
  %arrayidx6 = getelementptr inbounds [8 x i8], [8 x i8]* %fbits, i64 0, i64 %idxprom5, !dbg !6101
  %16 = load i8, i8* %arrayidx6, align 1, !dbg !6101
  %conv7 = zext i8 %16 to i32, !dbg !6101
  call void @put_bits(%struct.PutBitContext* %13, i32 4, i32 %conv7), !dbg !6103
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6104
  call void @put_bits(%struct.PutBitContext* %17, i32 1, i32 0), !dbg !6105
  store i32 0, i32* %channel, align 4, !dbg !6106
  br label %for.cond8, !dbg !6108

for.cond8:                                        ; preds = %for.inc, %for.body
  %18 = load i32, i32* %channel, align 4, !dbg !6109
  %19 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6112
  %num_channels = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %19, i32 0, i32 2, !dbg !6113
  %20 = load i32, i32* %num_channels, align 4, !dbg !6113
  %cmp9 = icmp ult i32 %18, %20, !dbg !6114
  br i1 %cmp9, label %for.body11, label %for.end, !dbg !6115

for.body11:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata i32* %coeff, metadata !6116, metadata !1746), !dbg !6118
  %21 = load i32, i32* %channel, align 4, !dbg !6119
  %idxprom12 = zext i32 %21 to i64, !dbg !6120
  %22 = load i32, i32* %mat, align 4, !dbg !6121
  %idxprom13 = zext i32 %22 to i64, !dbg !6120
  %23 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6120
  %coeff14 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %23, i32 0, i32 3, !dbg !6122
  %arrayidx15 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff14, i64 0, i64 %idxprom13, !dbg !6120
  %arrayidx16 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx15, i64 0, i64 %idxprom12, !dbg !6120
  %24 = load i32, i32* %arrayidx16, align 4, !dbg !6120
  store i32 %24, i32* %coeff, align 4, !dbg !6118
  %25 = load i32, i32* %coeff, align 4, !dbg !6123
  %tobool = icmp ne i32 %25, 0, !dbg !6123
  br i1 %tobool, label %if.then, label %if.else, !dbg !6125

if.then:                                          ; preds = %for.body11
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6126
  call void @put_bits(%struct.PutBitContext* %26, i32 1, i32 1), !dbg !6128
  %27 = load i32, i32* %mat, align 4, !dbg !6129
  %idxprom17 = zext i32 %27 to i64, !dbg !6130
  %28 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6130
  %fbits18 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %28, i32 0, i32 4, !dbg !6131
  %arrayidx19 = getelementptr inbounds [8 x i8], [8 x i8]* %fbits18, i64 0, i64 %idxprom17, !dbg !6130
  %29 = load i8, i8* %arrayidx19, align 1, !dbg !6130
  %conv20 = zext i8 %29 to i32, !dbg !6130
  %sub = sub nsw i32 14, %conv20, !dbg !6132
  %30 = load i32, i32* %coeff, align 4, !dbg !6133
  %shr = ashr i32 %30, %sub, !dbg !6133
  store i32 %shr, i32* %coeff, align 4, !dbg !6133
  %31 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6134
  %32 = load i32, i32* %mat, align 4, !dbg !6135
  %idxprom21 = zext i32 %32 to i64, !dbg !6136
  %33 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6136
  %fbits22 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %33, i32 0, i32 4, !dbg !6137
  %arrayidx23 = getelementptr inbounds [8 x i8], [8 x i8]* %fbits22, i64 0, i64 %idxprom21, !dbg !6136
  %34 = load i8, i8* %arrayidx23, align 1, !dbg !6136
  %conv24 = zext i8 %34 to i32, !dbg !6136
  %add = add nsw i32 %conv24, 2, !dbg !6138
  %35 = load i32, i32* %coeff, align 4, !dbg !6139
  call void @put_sbits(%struct.PutBitContext* %31, i32 %add, i32 %35), !dbg !6140
  br label %if.end, !dbg !6141

if.else:                                          ; preds = %for.body11
  %36 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6142
  call void @put_bits(%struct.PutBitContext* %36, i32 1, i32 0), !dbg !6144
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !6145

for.inc:                                          ; preds = %if.end
  %37 = load i32, i32* %channel, align 4, !dbg !6146
  %inc = add i32 %37, 1, !dbg !6146
  store i32 %inc, i32* %channel, align 4, !dbg !6146
  br label %for.cond8, !dbg !6148, !llvm.loop !6149

for.end:                                          ; preds = %for.cond8
  br label %for.inc25, !dbg !6151

for.inc25:                                        ; preds = %for.end
  %38 = load i32, i32* %mat, align 4, !dbg !6152
  %inc26 = add i32 %38, 1, !dbg !6152
  store i32 %inc26, i32* %mat, align 4, !dbg !6152
  br label %for.cond, !dbg !6154, !llvm.loop !6155

for.end27:                                        ; preds = %for.cond
  ret void, !dbg !6157
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_sbits(%struct.PutBitContext* %pb, i32 %n, i32 %value) #5 !dbg !6158 {
entry:
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6161, metadata !1746), !dbg !6166
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !6168, metadata !1746), !dbg !6169
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !6170, metadata !1746), !dbg !6171
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6172, metadata !1746), !dbg !6173
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6174, metadata !1746), !dbg !6175
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6176
  %1 = load i32, i32* %n.addr, align 4, !dbg !6177
  %2 = load i32, i32* %value.addr, align 4, !dbg !6178
  %3 = load i32, i32* %n.addr, align 4, !dbg !6179
  store i32 %2, i32* %a.addr.i, align 4, !dbg !6180
  store i32 %3, i32* %p.addr.i, align 4, !dbg !6180
  %4 = load i32, i32* %a.addr.i, align 4, !dbg !6181
  %5 = load i32, i32* %p.addr.i, align 4, !dbg !6182
  %shl.i = shl i32 1, %5, !dbg !6183
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !6184
  %and.i = and i32 %4, %sub.i, !dbg !6185
  call void @put_bits(%struct.PutBitContext* %0, i32 %1, i32 %and.i), !dbg !6186
  ret void, !dbg !6188
}

; Function Attrs: nounwind uwtable
define internal void @write_filter_params(%struct.MLPEncodeContext* %ctx, %struct.PutBitContext* %pb, i32 %channel, i32 %filter) #1 !dbg !6189 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %channel.addr = alloca i32, align 4
  %filter.addr = alloca i32, align 4
  %fp = alloca %struct.FilterParams*, align 8
  %i = alloca i32, align 4
  %fcoeff = alloca i32*, align 8
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !6192, metadata !1746), !dbg !6193
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !6194, metadata !1746), !dbg !6195
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !6196, metadata !1746), !dbg !6197
  store i32 %filter, i32* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr, metadata !6198, metadata !1746), !dbg !6199
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %fp, metadata !6200, metadata !1746), !dbg !6201
  %0 = load i32, i32* %filter.addr, align 4, !dbg !6202
  %idxprom = zext i32 %0 to i64, !dbg !6203
  %1 = load i32, i32* %channel.addr, align 4, !dbg !6204
  %idxprom1 = zext i32 %1 to i64, !dbg !6203
  %2 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6203
  %cur_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %2, i32 0, i32 51, !dbg !6205
  %3 = load %struct.ChannelParams*, %struct.ChannelParams** %cur_channel_params, align 8, !dbg !6205
  %arrayidx = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %3, i64 %idxprom1, !dbg !6203
  %filter_params = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %arrayidx, i32 0, i32 0, !dbg !6206
  %arrayidx2 = getelementptr inbounds [2 x %struct.FilterParams], [2 x %struct.FilterParams]* %filter_params, i64 0, i64 %idxprom, !dbg !6203
  store %struct.FilterParams* %arrayidx2, %struct.FilterParams** %fp, align 8, !dbg !6201
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6207
  %5 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !6208
  %order = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %5, i32 0, i32 0, !dbg !6209
  %6 = load i8, i8* %order, align 4, !dbg !6209
  %conv = zext i8 %6 to i32, !dbg !6208
  call void @put_bits(%struct.PutBitContext* %4, i32 4, i32 %conv), !dbg !6210
  %7 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !6211
  %order3 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %7, i32 0, i32 0, !dbg !6213
  %8 = load i8, i8* %order3, align 4, !dbg !6213
  %conv4 = zext i8 %8 to i32, !dbg !6211
  %cmp = icmp sgt i32 %conv4, 0, !dbg !6214
  br i1 %cmp, label %if.then, label %if.end, !dbg !6215

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6216, metadata !1746), !dbg !6218
  call void @llvm.dbg.declare(metadata i32** %fcoeff, metadata !6219, metadata !1746), !dbg !6220
  %9 = load i32, i32* %filter.addr, align 4, !dbg !6221
  %idxprom6 = zext i32 %9 to i64, !dbg !6222
  %10 = load i32, i32* %channel.addr, align 4, !dbg !6223
  %idxprom7 = zext i32 %10 to i64, !dbg !6222
  %11 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6222
  %cur_channel_params8 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %11, i32 0, i32 51, !dbg !6224
  %12 = load %struct.ChannelParams*, %struct.ChannelParams** %cur_channel_params8, align 8, !dbg !6224
  %arrayidx9 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %12, i64 %idxprom7, !dbg !6222
  %coeff = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %arrayidx9, i32 0, i32 1, !dbg !6225
  %arrayidx10 = getelementptr inbounds [2 x [8 x i32]], [2 x [8 x i32]]* %coeff, i64 0, i64 %idxprom6, !dbg !6222
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx10, i32 0, i32 0, !dbg !6222
  store i32* %arraydecay, i32** %fcoeff, align 8, !dbg !6220
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6226
  %14 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !6227
  %shift = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %14, i32 0, i32 1, !dbg !6228
  %15 = load i8, i8* %shift, align 1, !dbg !6228
  %conv11 = zext i8 %15 to i32, !dbg !6227
  call void @put_bits(%struct.PutBitContext* %13, i32 4, i32 %conv11), !dbg !6229
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6230
  %17 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !6231
  %coeff_bits = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %17, i32 0, i32 3, !dbg !6232
  %18 = load i32, i32* %coeff_bits, align 4, !dbg !6232
  call void @put_bits(%struct.PutBitContext* %16, i32 5, i32 %18), !dbg !6233
  %19 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6234
  %20 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !6235
  %coeff_shift = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %20, i32 0, i32 4, !dbg !6236
  %21 = load i32, i32* %coeff_shift, align 4, !dbg !6236
  call void @put_bits(%struct.PutBitContext* %19, i32 3, i32 %21), !dbg !6237
  store i32 0, i32* %i, align 4, !dbg !6238
  br label %for.cond, !dbg !6240

for.cond:                                         ; preds = %for.inc, %if.then
  %22 = load i32, i32* %i, align 4, !dbg !6241
  %23 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !6244
  %order12 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %23, i32 0, i32 0, !dbg !6245
  %24 = load i8, i8* %order12, align 4, !dbg !6245
  %conv13 = zext i8 %24 to i32, !dbg !6244
  %cmp14 = icmp slt i32 %22, %conv13, !dbg !6246
  br i1 %cmp14, label %for.body, label %for.end, !dbg !6247

for.body:                                         ; preds = %for.cond
  %25 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6248
  %26 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !6250
  %coeff_bits16 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %26, i32 0, i32 3, !dbg !6251
  %27 = load i32, i32* %coeff_bits16, align 4, !dbg !6251
  %28 = load i32, i32* %i, align 4, !dbg !6252
  %idxprom17 = sext i32 %28 to i64, !dbg !6253
  %29 = load i32*, i32** %fcoeff, align 8, !dbg !6253
  %arrayidx18 = getelementptr inbounds i32, i32* %29, i64 %idxprom17, !dbg !6253
  %30 = load i32, i32* %arrayidx18, align 4, !dbg !6253
  %31 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !6254
  %coeff_shift19 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %31, i32 0, i32 4, !dbg !6255
  %32 = load i32, i32* %coeff_shift19, align 4, !dbg !6255
  %shr = ashr i32 %30, %32, !dbg !6256
  call void @put_sbits(%struct.PutBitContext* %25, i32 %27, i32 %shr), !dbg !6257
  br label %for.inc, !dbg !6258

for.inc:                                          ; preds = %for.body
  %33 = load i32, i32* %i, align 4, !dbg !6259
  %inc = add nsw i32 %33, 1, !dbg !6259
  store i32 %inc, i32* %i, align 4, !dbg !6259
  br label %for.cond, !dbg !6261, !llvm.loop !6262

for.end:                                          ; preds = %for.cond
  %34 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6264
  call void @put_bits(%struct.PutBitContext* %34, i32 1, i32 0), !dbg !6265
  br label %if.end, !dbg !6266

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !6267
}

; Function Attrs: nounwind uwtable
define internal void @input_data_internal(%struct.MLPEncodeContext* %ctx, i8* %samples, i32 %is24) #1 !dbg !6268 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %samples.addr = alloca i8*, align 8
  %is24.addr = alloca i32, align 4
  %lossless_check_data = alloca i32*, align 8
  %samples_32 = alloca i32*, align 8
  %samples_16 = alloca i16*, align 8
  %substr = alloca i32, align 4
  %rh = alloca %struct.RestartHeader*, align 8
  %sample_buffer = alloca i32*, align 8
  %temp_lossless_check_data = alloca i32, align 4
  %greatest = alloca i32, align 4
  %channel = alloca i32, align 4
  %i = alloca i32, align 4
  %abs_sample = alloca i32, align 4
  %sample = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !6271, metadata !1746), !dbg !6272
  store i8* %samples, i8** %samples.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %samples.addr, metadata !6273, metadata !1746), !dbg !6274
  store i32 %is24, i32* %is24.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is24.addr, metadata !6275, metadata !1746), !dbg !6276
  call void @llvm.dbg.declare(metadata i32** %lossless_check_data, metadata !6277, metadata !1746), !dbg !6278
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6279
  %lossless_check_data1 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 23, !dbg !6280
  %1 = load i32*, i32** %lossless_check_data1, align 8, !dbg !6280
  store i32* %1, i32** %lossless_check_data, align 8, !dbg !6278
  call void @llvm.dbg.declare(metadata i32** %samples_32, metadata !6281, metadata !1746), !dbg !6282
  %2 = load i8*, i8** %samples.addr, align 8, !dbg !6283
  %3 = bitcast i8* %2 to i32*, !dbg !6284
  store i32* %3, i32** %samples_32, align 8, !dbg !6282
  call void @llvm.dbg.declare(metadata i16** %samples_16, metadata !6285, metadata !1746), !dbg !6286
  %4 = load i8*, i8** %samples.addr, align 8, !dbg !6287
  %5 = bitcast i8* %4 to i16*, !dbg !6288
  store i16* %5, i16** %samples_16, align 8, !dbg !6286
  call void @llvm.dbg.declare(metadata i32* %substr, metadata !6289, metadata !1746), !dbg !6290
  %6 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6291
  %frame_index = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %6, i32 0, i32 26, !dbg !6292
  %7 = load i32, i32* %frame_index, align 32, !dbg !6292
  %8 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6293
  %num_substreams = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %8, i32 0, i32 1, !dbg !6294
  %9 = load i32, i32* %num_substreams, align 8, !dbg !6294
  %mul = mul i32 %7, %9, !dbg !6295
  %10 = load i32*, i32** %lossless_check_data, align 8, !dbg !6296
  %idx.ext = zext i32 %mul to i64, !dbg !6296
  %add.ptr = getelementptr inbounds i32, i32* %10, i64 %idx.ext, !dbg !6296
  store i32* %add.ptr, i32** %lossless_check_data, align 8, !dbg !6296
  store i32 0, i32* %substr, align 4, !dbg !6297
  br label %for.cond, !dbg !6299

for.cond:                                         ; preds = %for.inc33, %entry
  %11 = load i32, i32* %substr, align 4, !dbg !6300
  %12 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6303
  %num_substreams2 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %12, i32 0, i32 1, !dbg !6304
  %13 = load i32, i32* %num_substreams2, align 8, !dbg !6304
  %cmp = icmp ult i32 %11, %13, !dbg !6305
  br i1 %cmp, label %for.body, label %for.end35, !dbg !6306

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !6307, metadata !1746), !dbg !6309
  %14 = load i32, i32* %substr, align 4, !dbg !6310
  %idxprom = zext i32 %14 to i64, !dbg !6311
  %15 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6311
  %restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %15, i32 0, i32 43, !dbg !6312
  %arrayidx = getelementptr inbounds [4 x %struct.RestartHeader], [4 x %struct.RestartHeader]* %restart_header, i64 0, i64 %idxprom, !dbg !6311
  store %struct.RestartHeader* %arrayidx, %struct.RestartHeader** %rh, align 8, !dbg !6309
  call void @llvm.dbg.declare(metadata i32** %sample_buffer, metadata !6313, metadata !1746), !dbg !6314
  %16 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6315
  %inout_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %16, i32 0, i32 12, !dbg !6316
  %17 = load i32*, i32** %inout_buffer, align 32, !dbg !6316
  store i32* %17, i32** %sample_buffer, align 8, !dbg !6314
  call void @llvm.dbg.declare(metadata i32* %temp_lossless_check_data, metadata !6317, metadata !1746), !dbg !6318
  store i32 0, i32* %temp_lossless_check_data, align 4, !dbg !6318
  call void @llvm.dbg.declare(metadata i32* %greatest, metadata !6319, metadata !1746), !dbg !6320
  store i32 0, i32* %greatest, align 4, !dbg !6320
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !6321, metadata !1746), !dbg !6322
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6323, metadata !1746), !dbg !6324
  store i32 0, i32* %i, align 4, !dbg !6325
  br label %for.cond3, !dbg !6327

for.cond3:                                        ; preds = %for.inc26, %for.body
  %18 = load i32, i32* %i, align 4, !dbg !6328
  %19 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6331
  %frame_index4 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %19, i32 0, i32 26, !dbg !6332
  %20 = load i32, i32* %frame_index4, align 32, !dbg !6332
  %idxprom5 = zext i32 %20 to i64, !dbg !6333
  %21 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6333
  %frame_size = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %21, i32 0, i32 25, !dbg !6334
  %22 = load i32*, i32** %frame_size, align 8, !dbg !6334
  %arrayidx6 = getelementptr inbounds i32, i32* %22, i64 %idxprom5, !dbg !6333
  %23 = load i32, i32* %arrayidx6, align 4, !dbg !6333
  %cmp7 = icmp ult i32 %18, %23, !dbg !6335
  br i1 %cmp7, label %for.body8, label %for.end28, !dbg !6336

for.body8:                                        ; preds = %for.cond3
  store i32 0, i32* %channel, align 4, !dbg !6337
  br label %for.cond9, !dbg !6340

for.cond9:                                        ; preds = %for.inc, %for.body8
  %24 = load i32, i32* %channel, align 4, !dbg !6341
  %25 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !6344
  %max_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %25, i32 0, i32 1, !dbg !6345
  %26 = load i8, i8* %max_channel, align 1, !dbg !6345
  %conv = zext i8 %26 to i32, !dbg !6344
  %cmp10 = icmp ule i32 %24, %conv, !dbg !6346
  br i1 %cmp10, label %for.body12, label %for.end, !dbg !6347

for.body12:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata i32* %abs_sample, metadata !6348, metadata !1746), !dbg !6350
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !6351, metadata !1746), !dbg !6352
  %27 = load i32, i32* %is24.addr, align 4, !dbg !6353
  %tobool = icmp ne i32 %27, 0, !dbg !6353
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6353

cond.true:                                        ; preds = %for.body12
  %28 = load i32*, i32** %samples_32, align 8, !dbg !6354
  %incdec.ptr = getelementptr inbounds i32, i32* %28, i32 1, !dbg !6354
  store i32* %incdec.ptr, i32** %samples_32, align 8, !dbg !6354
  %29 = load i32, i32* %28, align 4, !dbg !6356
  %shr = ashr i32 %29, 8, !dbg !6357
  br label %cond.end, !dbg !6358

cond.false:                                       ; preds = %for.body12
  %30 = load i16*, i16** %samples_16, align 8, !dbg !6359
  %incdec.ptr13 = getelementptr inbounds i16, i16* %30, i32 1, !dbg !6359
  store i16* %incdec.ptr13, i16** %samples_16, align 8, !dbg !6359
  %31 = load i16, i16* %30, align 2, !dbg !6361
  %conv14 = sext i16 %31 to i32, !dbg !6361
  %shl = shl i32 %conv14, 8, !dbg !6362
  br label %cond.end, !dbg !6363

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %shr, %cond.true ], [ %shl, %cond.false ], !dbg !6364
  store i32 %cond, i32* %sample, align 4, !dbg !6366
  %32 = load i32, i32* %sample, align 4, !dbg !6367
  %cmp15 = icmp sge i32 %32, 0, !dbg !6368
  br i1 %cmp15, label %cond.true17, label %cond.false18, !dbg !6369

cond.true17:                                      ; preds = %cond.end
  %33 = load i32, i32* %sample, align 4, !dbg !6370
  br label %cond.end19, !dbg !6371

cond.false18:                                     ; preds = %cond.end
  %34 = load i32, i32* %sample, align 4, !dbg !6372
  %sub = sub nsw i32 0, %34, !dbg !6373
  br label %cond.end19, !dbg !6374

cond.end19:                                       ; preds = %cond.false18, %cond.true17
  %cond20 = phi i32 [ %33, %cond.true17 ], [ %sub, %cond.false18 ], !dbg !6375
  store i32 %cond20, i32* %abs_sample, align 4, !dbg !6376
  %35 = load i32, i32* %greatest, align 4, !dbg !6377
  %36 = load i32, i32* %abs_sample, align 4, !dbg !6379
  %cmp21 = icmp ult i32 %35, %36, !dbg !6380
  br i1 %cmp21, label %if.then, label %if.end, !dbg !6381

if.then:                                          ; preds = %cond.end19
  %37 = load i32, i32* %abs_sample, align 4, !dbg !6382
  store i32 %37, i32* %greatest, align 4, !dbg !6383
  br label %if.end, !dbg !6384

if.end:                                           ; preds = %if.then, %cond.end19
  %38 = load i32, i32* %sample, align 4, !dbg !6385
  %and = and i32 %38, 16777215, !dbg !6386
  %39 = load i32, i32* %channel, align 4, !dbg !6387
  %shl23 = shl i32 %and, %39, !dbg !6388
  %40 = load i32, i32* %temp_lossless_check_data, align 4, !dbg !6389
  %xor = xor i32 %40, %shl23, !dbg !6389
  store i32 %xor, i32* %temp_lossless_check_data, align 4, !dbg !6389
  %41 = load i32, i32* %sample, align 4, !dbg !6390
  %42 = load i32*, i32** %sample_buffer, align 8, !dbg !6391
  %incdec.ptr24 = getelementptr inbounds i32, i32* %42, i32 1, !dbg !6391
  store i32* %incdec.ptr24, i32** %sample_buffer, align 8, !dbg !6391
  store i32 %41, i32* %42, align 4, !dbg !6392
  br label %for.inc, !dbg !6393

for.inc:                                          ; preds = %if.end
  %43 = load i32, i32* %channel, align 4, !dbg !6394
  %inc = add i32 %43, 1, !dbg !6394
  store i32 %inc, i32* %channel, align 4, !dbg !6394
  br label %for.cond9, !dbg !6396, !llvm.loop !6397

for.end:                                          ; preds = %for.cond9
  %44 = load i32*, i32** %sample_buffer, align 8, !dbg !6399
  %add.ptr25 = getelementptr inbounds i32, i32* %44, i64 2, !dbg !6399
  store i32* %add.ptr25, i32** %sample_buffer, align 8, !dbg !6399
  br label %for.inc26, !dbg !6400

for.inc26:                                        ; preds = %for.end
  %45 = load i32, i32* %i, align 4, !dbg !6401
  %inc27 = add nsw i32 %45, 1, !dbg !6401
  store i32 %inc27, i32* %i, align 4, !dbg !6401
  br label %for.cond3, !dbg !6403, !llvm.loop !6404

for.end28:                                        ; preds = %for.cond3
  %46 = load i32, i32* %greatest, align 4, !dbg !6406
  %call = call i32 @number_sbits(i32 %46), !dbg !6407
  %47 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6408
  %frame_index29 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %47, i32 0, i32 26, !dbg !6409
  %48 = load i32, i32* %frame_index29, align 32, !dbg !6409
  %idxprom30 = zext i32 %48 to i64, !dbg !6410
  %49 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6410
  %max_output_bits = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %49, i32 0, i32 24, !dbg !6411
  %50 = load i32*, i32** %max_output_bits, align 16, !dbg !6411
  %arrayidx31 = getelementptr inbounds i32, i32* %50, i64 %idxprom30, !dbg !6410
  store i32 %call, i32* %arrayidx31, align 4, !dbg !6412
  %51 = load i32, i32* %temp_lossless_check_data, align 4, !dbg !6413
  %52 = load i32*, i32** %lossless_check_data, align 8, !dbg !6414
  %incdec.ptr32 = getelementptr inbounds i32, i32* %52, i32 1, !dbg !6414
  store i32* %incdec.ptr32, i32** %lossless_check_data, align 8, !dbg !6414
  store i32 %51, i32* %52, align 4, !dbg !6415
  br label %for.inc33, !dbg !6416

for.inc33:                                        ; preds = %for.end28
  %53 = load i32, i32* %substr, align 4, !dbg !6417
  %inc34 = add i32 %53, 1, !dbg !6417
  store i32 %inc34, i32* %substr, align 4, !dbg !6417
  br label %for.cond, !dbg !6419, !llvm.loop !6420

for.end35:                                        ; preds = %for.cond
  ret void, !dbg !6422
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @number_sbits(i32 %number) #5 !dbg !6423 {
entry:
  %number.addr = alloca i32, align 4
  store i32 %number, i32* %number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number.addr, metadata !6426, metadata !1746), !dbg !6427
  %0 = load i32, i32* %number.addr, align 4, !dbg !6428
  %cmp = icmp slt i32 %0, 0, !dbg !6430
  br i1 %cmp, label %if.then, label %if.end, !dbg !6431

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %number.addr, align 4, !dbg !6432
  %inc = add nsw i32 %1, 1, !dbg !6432
  store i32 %inc, i32* %number.addr, align 4, !dbg !6432
  br label %if.end, !dbg !6433

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %number.addr, align 4, !dbg !6434
  %cmp1 = icmp sge i32 %2, 0, !dbg !6435
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !6436

cond.true:                                        ; preds = %if.end
  %3 = load i32, i32* %number.addr, align 4, !dbg !6437
  br label %cond.end, !dbg !6439

cond.false:                                       ; preds = %if.end
  %4 = load i32, i32* %number.addr, align 4, !dbg !6440
  %sub = sub nsw i32 0, %4, !dbg !6442
  br label %cond.end, !dbg !6443

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ %sub, %cond.false ], !dbg !6444
  %or = or i32 %cond, 1, !dbg !6446
  %5 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !6447
  %sub2 = sub nsw i32 31, %5, !dbg !6448
  %add = add nsw i32 %sub2, 1, !dbg !6449
  %6 = load i32, i32* %number.addr, align 4, !dbg !6450
  %tobool = icmp ne i32 %6, 0, !dbg !6451
  %lnot = xor i1 %tobool, true, !dbg !6451
  %lnot3 = xor i1 %lnot, true, !dbg !6452
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !6452
  %add4 = add nsw i32 %add, %lnot.ext, !dbg !6453
  ret i32 %add4, !dbg !6454
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

; Function Attrs: nounwind uwtable
define internal void @determine_quant_step_size(%struct.MLPEncodeContext* %ctx) #1 !dbg !6455 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %dp = alloca %struct.DecodingParams*, align 8
  %rh = alloca %struct.RestartHeader*, align 8
  %mp = alloca %struct.MatrixParams*, align 8
  %sample_buffer = alloca i32*, align 8
  %sample_mask = alloca [8 x i32], align 16
  %channel = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !6456, metadata !1746), !dbg !6457
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !6458, metadata !1746), !dbg !6459
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6460
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 52, !dbg !6461
  %1 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !6461
  store %struct.DecodingParams* %1, %struct.DecodingParams** %dp, align 8, !dbg !6459
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !6462, metadata !1746), !dbg !6463
  %2 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6464
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %2, i32 0, i32 53, !dbg !6465
  %3 = load %struct.RestartHeader*, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !6465
  store %struct.RestartHeader* %3, %struct.RestartHeader** %rh, align 8, !dbg !6463
  call void @llvm.dbg.declare(metadata %struct.MatrixParams** %mp, metadata !6466, metadata !1746), !dbg !6467
  %4 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !6468
  %matrix_params = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %4, i32 0, i32 2, !dbg !6469
  store %struct.MatrixParams* %matrix_params, %struct.MatrixParams** %mp, align 8, !dbg !6467
  call void @llvm.dbg.declare(metadata i32** %sample_buffer, metadata !6470, metadata !1746), !dbg !6471
  %5 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6472
  %sample_buffer1 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %5, i32 0, i32 15, !dbg !6473
  %6 = load i32*, i32** %sample_buffer1, align 8, !dbg !6473
  store i32* %6, i32** %sample_buffer, align 8, !dbg !6471
  call void @llvm.dbg.declare(metadata [8 x i32]* %sample_mask, metadata !6474, metadata !1746), !dbg !6475
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !6476, metadata !1746), !dbg !6477
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6478, metadata !1746), !dbg !6479
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %sample_mask, i32 0, i32 0, !dbg !6480
  %7 = bitcast i32* %arraydecay to i8*, !dbg !6480
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 32, i32 16, i1 false), !dbg !6480
  store i32 0, i32* %i, align 4, !dbg !6481
  br label %for.cond, !dbg !6483

for.cond:                                         ; preds = %for.inc6, %entry
  %8 = load i32, i32* %i, align 4, !dbg !6484
  %9 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6487
  %number_of_samples = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %9, i32 0, i32 57, !dbg !6488
  %10 = load i32, i32* %number_of_samples, align 8, !dbg !6488
  %cmp = icmp ult i32 %8, %10, !dbg !6489
  br i1 %cmp, label %for.body, label %for.end8, !dbg !6490

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %channel, align 4, !dbg !6491
  br label %for.cond2, !dbg !6494

for.cond2:                                        ; preds = %for.inc, %for.body
  %11 = load i32, i32* %channel, align 4, !dbg !6495
  %12 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !6498
  %max_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %12, i32 0, i32 1, !dbg !6499
  %13 = load i8, i8* %max_channel, align 1, !dbg !6499
  %conv = zext i8 %13 to i32, !dbg !6498
  %cmp3 = icmp ule i32 %11, %conv, !dbg !6500
  br i1 %cmp3, label %for.body5, label %for.end, !dbg !6501

for.body5:                                        ; preds = %for.cond2
  %14 = load i32*, i32** %sample_buffer, align 8, !dbg !6502
  %incdec.ptr = getelementptr inbounds i32, i32* %14, i32 1, !dbg !6502
  store i32* %incdec.ptr, i32** %sample_buffer, align 8, !dbg !6502
  %15 = load i32, i32* %14, align 4, !dbg !6503
  %16 = load i32, i32* %channel, align 4, !dbg !6504
  %idxprom = zext i32 %16 to i64, !dbg !6505
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %sample_mask, i64 0, i64 %idxprom, !dbg !6505
  %17 = load i32, i32* %arrayidx, align 4, !dbg !6506
  %or = or i32 %17, %15, !dbg !6506
  store i32 %or, i32* %arrayidx, align 4, !dbg !6506
  br label %for.inc, !dbg !6505

for.inc:                                          ; preds = %for.body5
  %18 = load i32, i32* %channel, align 4, !dbg !6507
  %inc = add i32 %18, 1, !dbg !6507
  store i32 %inc, i32* %channel, align 4, !dbg !6507
  br label %for.cond2, !dbg !6509, !llvm.loop !6510

for.end:                                          ; preds = %for.cond2
  %19 = load i32*, i32** %sample_buffer, align 8, !dbg !6512
  %add.ptr = getelementptr inbounds i32, i32* %19, i64 2, !dbg !6512
  store i32* %add.ptr, i32** %sample_buffer, align 8, !dbg !6512
  br label %for.inc6, !dbg !6513

for.inc6:                                         ; preds = %for.end
  %20 = load i32, i32* %i, align 4, !dbg !6514
  %inc7 = add nsw i32 %20, 1, !dbg !6514
  store i32 %inc7, i32* %i, align 4, !dbg !6514
  br label %for.cond, !dbg !6516, !llvm.loop !6517

for.end8:                                         ; preds = %for.cond
  store i32 0, i32* %channel, align 4, !dbg !6519
  br label %for.cond9, !dbg !6521

for.cond9:                                        ; preds = %for.inc23, %for.end8
  %21 = load i32, i32* %channel, align 4, !dbg !6522
  %22 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !6525
  %max_channel10 = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %22, i32 0, i32 1, !dbg !6526
  %23 = load i8, i8* %max_channel10, align 1, !dbg !6526
  %conv11 = zext i8 %23 to i32, !dbg !6525
  %cmp12 = icmp ule i32 %21, %conv11, !dbg !6527
  br i1 %cmp12, label %for.body14, label %for.end25, !dbg !6528

for.body14:                                       ; preds = %for.cond9
  %24 = load i32, i32* %channel, align 4, !dbg !6529
  %idxprom15 = zext i32 %24 to i64, !dbg !6530
  %arrayidx16 = getelementptr inbounds [8 x i32], [8 x i32]* %sample_mask, i64 0, i64 %idxprom15, !dbg !6530
  %25 = load i32, i32* %arrayidx16, align 4, !dbg !6530
  %call = call i32 @number_trailing_zeroes(i32 %25), !dbg !6531
  %26 = load i32, i32* %channel, align 4, !dbg !6532
  %idxprom17 = zext i32 %26 to i64, !dbg !6533
  %27 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6533
  %shift = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %27, i32 0, i32 5, !dbg !6534
  %arrayidx18 = getelementptr inbounds [8 x i8], [8 x i8]* %shift, i64 0, i64 %idxprom17, !dbg !6533
  %28 = load i8, i8* %arrayidx18, align 1, !dbg !6533
  %conv19 = sext i8 %28 to i32, !dbg !6533
  %sub = sub nsw i32 %call, %conv19, !dbg !6535
  %conv20 = trunc i32 %sub to i8, !dbg !6531
  %29 = load i32, i32* %channel, align 4, !dbg !6536
  %idxprom21 = zext i32 %29 to i64, !dbg !6537
  %30 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !6537
  %quant_step_size = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %30, i32 0, i32 1, !dbg !6538
  %arrayidx22 = getelementptr inbounds [8 x i8], [8 x i8]* %quant_step_size, i64 0, i64 %idxprom21, !dbg !6537
  store i8 %conv20, i8* %arrayidx22, align 1, !dbg !6539
  br label %for.inc23, !dbg !6537

for.inc23:                                        ; preds = %for.body14
  %31 = load i32, i32* %channel, align 4, !dbg !6540
  %inc24 = add i32 %31, 1, !dbg !6540
  store i32 %inc24, i32* %channel, align 4, !dbg !6540
  br label %for.cond9, !dbg !6542, !llvm.loop !6543

for.end25:                                        ; preds = %for.cond9
  ret void, !dbg !6545
}

; Function Attrs: nounwind uwtable
define internal void @lossless_matrix_coeffs(%struct.MLPEncodeContext* %ctx) #1 !dbg !6546 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %dp = alloca %struct.DecodingParams*, align 8
  %mp = alloca %struct.MatrixParams*, align 8
  %shift = alloca i32, align 4
  %channel = alloca i32, align 4
  %mat = alloca i32, align 4
  %mode = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !6547, metadata !1746), !dbg !6548
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !6549, metadata !1746), !dbg !6550
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6551
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 52, !dbg !6552
  %1 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !6552
  store %struct.DecodingParams* %1, %struct.DecodingParams** %dp, align 8, !dbg !6550
  call void @llvm.dbg.declare(metadata %struct.MatrixParams** %mp, metadata !6553, metadata !1746), !dbg !6554
  %2 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !6555
  %matrix_params = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %2, i32 0, i32 2, !dbg !6556
  store %struct.MatrixParams* %matrix_params, %struct.MatrixParams** %mp, align 8, !dbg !6554
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !6557, metadata !1746), !dbg !6558
  store i32 0, i32* %shift, align 4, !dbg !6558
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !6559, metadata !1746), !dbg !6560
  call void @llvm.dbg.declare(metadata i32* %mat, metadata !6561, metadata !1746), !dbg !6562
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !6563, metadata !1746), !dbg !6564
  %3 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6565
  %num_channels = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %3, i32 0, i32 2, !dbg !6567
  %4 = load i32, i32* %num_channels, align 4, !dbg !6567
  %sub = sub nsw i32 %4, 2, !dbg !6568
  %cmp = icmp ne i32 %sub, 2, !dbg !6569
  br i1 %cmp, label %if.then, label %if.end, !dbg !6570

if.then:                                          ; preds = %entry
  %5 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6571
  %count = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %5, i32 0, i32 0, !dbg !6573
  store i8 0, i8* %count, align 4, !dbg !6574
  br label %for.end67, !dbg !6575

if.end:                                           ; preds = %entry
  %6 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6576
  %call = call i32 @estimate_stereo_mode(%struct.MLPEncodeContext* %6), !dbg !6577
  store i32 %call, i32* %mode, align 4, !dbg !6578
  %7 = load i32, i32* %mode, align 4, !dbg !6579
  switch i32 %7, label %sw.epilog [
    i32 3, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb26
  ], !dbg !6580

sw.bb:                                            ; preds = %if.end, %if.end
  %8 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6581
  %count1 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %8, i32 0, i32 0, !dbg !6583
  store i8 0, i8* %count1, align 4, !dbg !6584
  br label %sw.epilog, !dbg !6585

sw.bb2:                                           ; preds = %if.end
  %9 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6586
  %count3 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %9, i32 0, i32 0, !dbg !6587
  store i8 1, i8* %count3, align 4, !dbg !6588
  %10 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6589
  %outch = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %10, i32 0, i32 1, !dbg !6590
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %outch, i64 0, i64 0, !dbg !6589
  store i8 1, i8* %arrayidx, align 1, !dbg !6591
  %11 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6592
  %coeff = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %11, i32 0, i32 3, !dbg !6593
  %arrayidx4 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff, i64 0, i64 0, !dbg !6592
  %arrayidx5 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx4, i64 0, i64 0, !dbg !6592
  store i32 16384, i32* %arrayidx5, align 4, !dbg !6594
  %12 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6595
  %coeff6 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %12, i32 0, i32 3, !dbg !6596
  %arrayidx7 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff6, i64 0, i64 0, !dbg !6595
  %arrayidx8 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx7, i64 0, i64 1, !dbg !6595
  store i32 -16384, i32* %arrayidx8, align 4, !dbg !6597
  %13 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6598
  %coeff9 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %13, i32 0, i32 3, !dbg !6599
  %arrayidx10 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff9, i64 0, i64 0, !dbg !6598
  %arrayidx11 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx10, i64 0, i64 2, !dbg !6598
  store i32 0, i32* %arrayidx11, align 4, !dbg !6600
  %14 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6601
  %coeff12 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %14, i32 0, i32 3, !dbg !6602
  %arrayidx13 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff12, i64 0, i64 0, !dbg !6601
  %arrayidx14 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx13, i64 0, i64 2, !dbg !6601
  store i32 0, i32* %arrayidx14, align 4, !dbg !6603
  %15 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6604
  %forco = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %15, i32 0, i32 2, !dbg !6605
  %arrayidx15 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %forco, i64 0, i64 0, !dbg !6604
  %arrayidx16 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx15, i64 0, i64 0, !dbg !6604
  store i32 16384, i32* %arrayidx16, align 4, !dbg !6606
  %16 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6607
  %forco17 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %16, i32 0, i32 2, !dbg !6608
  %arrayidx18 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %forco17, i64 0, i64 0, !dbg !6607
  %arrayidx19 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx18, i64 0, i64 1, !dbg !6607
  store i32 -16384, i32* %arrayidx19, align 4, !dbg !6609
  %17 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6610
  %forco20 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %17, i32 0, i32 2, !dbg !6611
  %arrayidx21 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %forco20, i64 0, i64 0, !dbg !6610
  %arrayidx22 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx21, i64 0, i64 2, !dbg !6610
  store i32 0, i32* %arrayidx22, align 4, !dbg !6612
  %18 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6613
  %forco23 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %18, i32 0, i32 2, !dbg !6614
  %arrayidx24 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %forco23, i64 0, i64 0, !dbg !6613
  %arrayidx25 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx24, i64 0, i64 2, !dbg !6613
  store i32 0, i32* %arrayidx25, align 4, !dbg !6615
  br label %sw.epilog, !dbg !6616

sw.bb26:                                          ; preds = %if.end
  %19 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6617
  %count27 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %19, i32 0, i32 0, !dbg !6618
  store i8 1, i8* %count27, align 4, !dbg !6619
  %20 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6620
  %outch28 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %20, i32 0, i32 1, !dbg !6621
  %arrayidx29 = getelementptr inbounds [8 x i8], [8 x i8]* %outch28, i64 0, i64 0, !dbg !6620
  store i8 0, i8* %arrayidx29, align 1, !dbg !6622
  %21 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6623
  %coeff30 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %21, i32 0, i32 3, !dbg !6624
  %arrayidx31 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff30, i64 0, i64 0, !dbg !6623
  %arrayidx32 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx31, i64 0, i64 0, !dbg !6623
  store i32 16384, i32* %arrayidx32, align 4, !dbg !6625
  %22 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6626
  %coeff33 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %22, i32 0, i32 3, !dbg !6627
  %arrayidx34 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff33, i64 0, i64 0, !dbg !6626
  %arrayidx35 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx34, i64 0, i64 1, !dbg !6626
  store i32 16384, i32* %arrayidx35, align 4, !dbg !6628
  %23 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6629
  %coeff36 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %23, i32 0, i32 3, !dbg !6630
  %arrayidx37 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff36, i64 0, i64 0, !dbg !6629
  %arrayidx38 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx37, i64 0, i64 2, !dbg !6629
  store i32 0, i32* %arrayidx38, align 4, !dbg !6631
  %24 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6632
  %coeff39 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %24, i32 0, i32 3, !dbg !6633
  %arrayidx40 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff39, i64 0, i64 0, !dbg !6632
  %arrayidx41 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx40, i64 0, i64 2, !dbg !6632
  store i32 0, i32* %arrayidx41, align 4, !dbg !6634
  %25 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6635
  %forco42 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %25, i32 0, i32 2, !dbg !6636
  %arrayidx43 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %forco42, i64 0, i64 0, !dbg !6635
  %arrayidx44 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx43, i64 0, i64 0, !dbg !6635
  store i32 16384, i32* %arrayidx44, align 4, !dbg !6637
  %26 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6638
  %forco45 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %26, i32 0, i32 2, !dbg !6639
  %arrayidx46 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %forco45, i64 0, i64 0, !dbg !6638
  %arrayidx47 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx46, i64 0, i64 1, !dbg !6638
  store i32 -16384, i32* %arrayidx47, align 4, !dbg !6640
  %27 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6641
  %forco48 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %27, i32 0, i32 2, !dbg !6642
  %arrayidx49 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %forco48, i64 0, i64 0, !dbg !6641
  %arrayidx50 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx49, i64 0, i64 2, !dbg !6641
  store i32 0, i32* %arrayidx50, align 4, !dbg !6643
  %28 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6644
  %forco51 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %28, i32 0, i32 2, !dbg !6645
  %arrayidx52 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %forco51, i64 0, i64 0, !dbg !6644
  %arrayidx53 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx52, i64 0, i64 2, !dbg !6644
  store i32 0, i32* %arrayidx53, align 4, !dbg !6646
  br label %sw.epilog, !dbg !6647

sw.epilog:                                        ; preds = %if.end, %sw.bb26, %sw.bb2, %sw.bb
  store i32 0, i32* %mat, align 4, !dbg !6648
  br label %for.cond, !dbg !6650

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %29 = load i32, i32* %mat, align 4, !dbg !6651
  %30 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6654
  %count54 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %30, i32 0, i32 0, !dbg !6655
  %31 = load i8, i8* %count54, align 4, !dbg !6655
  %conv = zext i8 %31 to i32, !dbg !6654
  %cmp55 = icmp slt i32 %29, %conv, !dbg !6656
  br i1 %cmp55, label %for.body, label %for.end, !dbg !6657

for.body:                                         ; preds = %for.cond
  %32 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6658
  %33 = load i32, i32* %mat, align 4, !dbg !6659
  call void @code_matrix_coeffs(%struct.MLPEncodeContext* %32, i32 %33), !dbg !6660
  br label %for.inc, !dbg !6660

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %mat, align 4, !dbg !6661
  %inc = add nsw i32 %34, 1, !dbg !6661
  store i32 %inc, i32* %mat, align 4, !dbg !6661
  br label %for.cond, !dbg !6663, !llvm.loop !6664

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %channel, align 4, !dbg !6666
  br label %for.cond57, !dbg !6668

for.cond57:                                       ; preds = %for.inc65, %for.end
  %35 = load i32, i32* %channel, align 4, !dbg !6669
  %36 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6672
  %num_channels58 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %36, i32 0, i32 2, !dbg !6673
  %37 = load i32, i32* %num_channels58, align 4, !dbg !6673
  %cmp59 = icmp ult i32 %35, %37, !dbg !6674
  br i1 %cmp59, label %for.body61, label %for.end67, !dbg !6675

for.body61:                                       ; preds = %for.cond57
  %38 = load i32, i32* %shift, align 4, !dbg !6676
  %conv62 = trunc i32 %38 to i8, !dbg !6676
  %39 = load i32, i32* %channel, align 4, !dbg !6677
  %idxprom = zext i32 %39 to i64, !dbg !6678
  %40 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !6678
  %shift63 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %40, i32 0, i32 5, !dbg !6679
  %arrayidx64 = getelementptr inbounds [8 x i8], [8 x i8]* %shift63, i64 0, i64 %idxprom, !dbg !6678
  store i8 %conv62, i8* %arrayidx64, align 1, !dbg !6680
  br label %for.inc65, !dbg !6678

for.inc65:                                        ; preds = %for.body61
  %41 = load i32, i32* %channel, align 4, !dbg !6681
  %inc66 = add i32 %41, 1, !dbg !6681
  store i32 %inc66, i32* %channel, align 4, !dbg !6681
  br label %for.cond57, !dbg !6683, !llvm.loop !6684

for.end67:                                        ; preds = %if.then, %for.cond57
  ret void, !dbg !6686
}

; Function Attrs: nounwind uwtable
define internal void @determine_filters(%struct.MLPEncodeContext* %ctx) #1 !dbg !6687 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %rh = alloca %struct.RestartHeader*, align 8
  %channel = alloca i32, align 4
  %filter = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !6688, metadata !1746), !dbg !6689
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !6690, metadata !1746), !dbg !6691
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6692
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 53, !dbg !6693
  %1 = load %struct.RestartHeader*, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !6693
  store %struct.RestartHeader* %1, %struct.RestartHeader** %rh, align 8, !dbg !6691
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !6694, metadata !1746), !dbg !6695
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !6696, metadata !1746), !dbg !6697
  %2 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !6698
  %min_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %2, i32 0, i32 0, !dbg !6700
  %3 = load i8, i8* %min_channel, align 4, !dbg !6700
  %conv = zext i8 %3 to i32, !dbg !6698
  store i32 %conv, i32* %channel, align 4, !dbg !6701
  br label %for.cond, !dbg !6702

for.cond:                                         ; preds = %for.inc7, %entry
  %4 = load i32, i32* %channel, align 4, !dbg !6703
  %5 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !6706
  %max_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %5, i32 0, i32 1, !dbg !6707
  %6 = load i8, i8* %max_channel, align 1, !dbg !6707
  %conv1 = zext i8 %6 to i32, !dbg !6706
  %cmp = icmp sle i32 %4, %conv1, !dbg !6708
  br i1 %cmp, label %for.body, label %for.end9, !dbg !6709

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %filter, align 4, !dbg !6710
  br label %for.cond3, !dbg !6713

for.cond3:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %filter, align 4, !dbg !6714
  %cmp4 = icmp slt i32 %7, 2, !dbg !6717
  br i1 %cmp4, label %for.body6, label %for.end, !dbg !6718

for.body6:                                        ; preds = %for.cond3
  %8 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6719
  %9 = load i32, i32* %channel, align 4, !dbg !6720
  %10 = load i32, i32* %filter, align 4, !dbg !6721
  call void @set_filter_params(%struct.MLPEncodeContext* %8, i32 %9, i32 %10, i32 0), !dbg !6722
  br label %for.inc, !dbg !6722

for.inc:                                          ; preds = %for.body6
  %11 = load i32, i32* %filter, align 4, !dbg !6723
  %inc = add nsw i32 %11, 1, !dbg !6723
  store i32 %inc, i32* %filter, align 4, !dbg !6723
  br label %for.cond3, !dbg !6725, !llvm.loop !6726

for.end:                                          ; preds = %for.cond3
  br label %for.inc7, !dbg !6728

for.inc7:                                         ; preds = %for.end
  %12 = load i32, i32* %channel, align 4, !dbg !6729
  %inc8 = add nsw i32 %12, 1, !dbg !6729
  store i32 %inc8, i32* %channel, align 4, !dbg !6729
  br label %for.cond, !dbg !6731, !llvm.loop !6732

for.end9:                                         ; preds = %for.cond
  ret void, !dbg !6734
}

; Function Attrs: nounwind uwtable
define internal void @apply_filters(%struct.MLPEncodeContext* %ctx) #1 !dbg !6735 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %rh = alloca %struct.RestartHeader*, align 8
  %channel = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !6736, metadata !1746), !dbg !6737
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !6738, metadata !1746), !dbg !6739
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6740
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 53, !dbg !6741
  %1 = load %struct.RestartHeader*, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !6741
  store %struct.RestartHeader* %1, %struct.RestartHeader** %rh, align 8, !dbg !6739
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !6742, metadata !1746), !dbg !6743
  %2 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !6744
  %min_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %2, i32 0, i32 0, !dbg !6746
  %3 = load i8, i8* %min_channel, align 4, !dbg !6746
  %conv = zext i8 %3 to i32, !dbg !6744
  store i32 %conv, i32* %channel, align 4, !dbg !6747
  br label %for.cond, !dbg !6748

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %channel, align 4, !dbg !6749
  %5 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !6752
  %max_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %5, i32 0, i32 1, !dbg !6753
  %6 = load i8, i8* %max_channel, align 1, !dbg !6753
  %conv1 = zext i8 %6 to i32, !dbg !6752
  %cmp = icmp sle i32 %4, %conv1, !dbg !6754
  br i1 %cmp, label %for.body, label %for.end, !dbg !6755

for.body:                                         ; preds = %for.cond
  %7 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6756
  %8 = load i32, i32* %channel, align 4, !dbg !6759
  %call = call i32 @apply_filter(%struct.MLPEncodeContext* %7, i32 %8), !dbg !6760
  %cmp3 = icmp slt i32 %call, 0, !dbg !6761
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6762

if.then:                                          ; preds = %for.body
  %9 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6763
  %10 = load i32, i32* %channel, align 4, !dbg !6765
  call void @set_filter_params(%struct.MLPEncodeContext* %9, i32 %10, i32 0, i32 1), !dbg !6766
  %11 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6767
  %12 = load i32, i32* %channel, align 4, !dbg !6768
  call void @set_filter_params(%struct.MLPEncodeContext* %11, i32 %12, i32 1, i32 1), !dbg !6769
  %13 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6770
  %14 = load i32, i32* %channel, align 4, !dbg !6771
  %call5 = call i32 @apply_filter(%struct.MLPEncodeContext* %13, i32 %14), !dbg !6772
  br label %if.end, !dbg !6773

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6774

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %channel, align 4, !dbg !6775
  %inc = add nsw i32 %15, 1, !dbg !6775
  store i32 %inc, i32* %channel, align 4, !dbg !6775
  br label %for.cond, !dbg !6777, !llvm.loop !6778

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6780
}

; Function Attrs: nounwind uwtable
define internal void @copy_restart_frame_params(%struct.MLPEncodeContext* %ctx, i32 %substr) #1 !dbg !6781 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %substr.addr = alloca i32, align 4
  %index = alloca i32, align 4
  %dp = alloca %struct.DecodingParams*, align 8
  %channel = alloca i32, align 4
  %cp = alloca %struct.ChannelParams*, align 8
  %filter = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !6784, metadata !1746), !dbg !6785
  store i32 %substr, i32* %substr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %substr.addr, metadata !6786, metadata !1746), !dbg !6787
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6788, metadata !1746), !dbg !6789
  store i32 0, i32* %index, align 4, !dbg !6790
  br label %for.cond, !dbg !6792

for.cond:                                         ; preds = %for.inc34, %entry
  %0 = load i32, i32* %index, align 4, !dbg !6793
  %1 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6796
  %number_of_subblocks = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %1, i32 0, i32 58, !dbg !6797
  %2 = load i32, i32* %number_of_subblocks, align 4, !dbg !6797
  %cmp = icmp ult i32 %0, %2, !dbg !6798
  br i1 %cmp, label %for.body, label %for.end36, !dbg !6799

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !6800, metadata !1746), !dbg !6802
  %3 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6803
  %seq_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %3, i32 0, i32 63, !dbg !6804
  %4 = load %struct.DecodingParams*, %struct.DecodingParams** %seq_decoding_params, align 32, !dbg !6804
  %5 = load i32, i32* %index, align 4, !dbg !6805
  %6 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6806
  %num_substreams = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %6, i32 0, i32 1, !dbg !6807
  %7 = load i32, i32* %num_substreams, align 8, !dbg !6807
  %mul = mul i32 %5, %7, !dbg !6808
  %idx.ext = zext i32 %mul to i64, !dbg !6809
  %add.ptr = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %4, i64 %idx.ext, !dbg !6809
  %8 = load i32, i32* %substr.addr, align 4, !dbg !6810
  %idx.ext1 = zext i32 %8 to i64, !dbg !6811
  %add.ptr2 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %add.ptr, i64 %idx.ext1, !dbg !6811
  store %struct.DecodingParams* %add.ptr2, %struct.DecodingParams** %dp, align 8, !dbg !6802
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !6812, metadata !1746), !dbg !6813
  %9 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !6814
  %matrix_params = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %9, i32 0, i32 2, !dbg !6815
  %10 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6816
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %10, i32 0, i32 52, !dbg !6817
  %11 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !6817
  %matrix_params3 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %11, i32 0, i32 2, !dbg !6818
  call void @copy_matrix_params(%struct.MatrixParams* %matrix_params, %struct.MatrixParams* %matrix_params3), !dbg !6819
  store i32 0, i32* %channel, align 4, !dbg !6820
  br label %for.cond4, !dbg !6822

for.cond4:                                        ; preds = %for.inc31, %for.body
  %12 = load i32, i32* %channel, align 4, !dbg !6823
  %13 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6826
  %avctx = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %13, i32 0, i32 0, !dbg !6827
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !6827
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %14, i32 0, i32 83, !dbg !6828
  %15 = load i32, i32* %channels, align 4, !dbg !6828
  %cmp5 = icmp ult i32 %12, %15, !dbg !6829
  br i1 %cmp5, label %for.body6, label %for.end33, !dbg !6830

for.body6:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %cp, metadata !6831, metadata !1746), !dbg !6833
  %16 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6834
  %seq_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %16, i32 0, i32 62, !dbg !6835
  %17 = load %struct.ChannelParams*, %struct.ChannelParams** %seq_channel_params, align 8, !dbg !6835
  %18 = load i32, i32* %index, align 4, !dbg !6836
  %19 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6837
  %avctx7 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %19, i32 0, i32 0, !dbg !6838
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx7, align 32, !dbg !6838
  %channels8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 83, !dbg !6839
  %21 = load i32, i32* %channels8, align 4, !dbg !6839
  %mul9 = mul i32 %18, %21, !dbg !6840
  %idx.ext10 = zext i32 %mul9 to i64, !dbg !6841
  %add.ptr11 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %17, i64 %idx.ext10, !dbg !6841
  %22 = load i32, i32* %channel, align 4, !dbg !6842
  %idx.ext12 = zext i32 %22 to i64, !dbg !6843
  %add.ptr13 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %add.ptr11, i64 %idx.ext12, !dbg !6843
  store %struct.ChannelParams* %add.ptr13, %struct.ChannelParams** %cp, align 8, !dbg !6833
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !6844, metadata !1746), !dbg !6845
  %23 = load i32, i32* %channel, align 4, !dbg !6846
  %idxprom = zext i32 %23 to i64, !dbg !6847
  %24 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6847
  %cur_decoding_params14 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %24, i32 0, i32 52, !dbg !6848
  %25 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params14, align 32, !dbg !6848
  %quant_step_size = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %25, i32 0, i32 1, !dbg !6849
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %quant_step_size, i64 0, i64 %idxprom, !dbg !6847
  %26 = load i8, i8* %arrayidx, align 1, !dbg !6847
  %27 = load i32, i32* %channel, align 4, !dbg !6850
  %idxprom15 = zext i32 %27 to i64, !dbg !6851
  %28 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !6851
  %quant_step_size16 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %28, i32 0, i32 1, !dbg !6852
  %arrayidx17 = getelementptr inbounds [8 x i8], [8 x i8]* %quant_step_size16, i64 0, i64 %idxprom15, !dbg !6851
  store i8 %26, i8* %arrayidx17, align 1, !dbg !6853
  %29 = load i32, i32* %channel, align 4, !dbg !6854
  %idxprom18 = zext i32 %29 to i64, !dbg !6855
  %30 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6855
  %cur_decoding_params19 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %30, i32 0, i32 52, !dbg !6856
  %31 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params19, align 32, !dbg !6856
  %matrix_params20 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %31, i32 0, i32 2, !dbg !6857
  %shift = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %matrix_params20, i32 0, i32 5, !dbg !6858
  %arrayidx21 = getelementptr inbounds [8 x i8], [8 x i8]* %shift, i64 0, i64 %idxprom18, !dbg !6855
  %32 = load i8, i8* %arrayidx21, align 1, !dbg !6855
  %33 = load i32, i32* %channel, align 4, !dbg !6859
  %idxprom22 = zext i32 %33 to i64, !dbg !6860
  %34 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !6860
  %matrix_params23 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %34, i32 0, i32 2, !dbg !6861
  %shift24 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %matrix_params23, i32 0, i32 5, !dbg !6862
  %arrayidx25 = getelementptr inbounds [8 x i8], [8 x i8]* %shift24, i64 0, i64 %idxprom22, !dbg !6860
  store i8 %32, i8* %arrayidx25, align 1, !dbg !6863
  %35 = load i32, i32* %index, align 4, !dbg !6864
  %tobool = icmp ne i32 %35, 0, !dbg !6864
  br i1 %tobool, label %if.then, label %if.end, !dbg !6866

if.then:                                          ; preds = %for.body6
  store i32 0, i32* %filter, align 4, !dbg !6867
  br label %for.cond26, !dbg !6869

for.cond26:                                       ; preds = %for.inc, %if.then
  %36 = load i32, i32* %filter, align 4, !dbg !6870
  %cmp27 = icmp ult i32 %36, 2, !dbg !6873
  br i1 %cmp27, label %for.body28, label %for.end, !dbg !6874

for.body28:                                       ; preds = %for.cond26
  %37 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !6875
  %38 = load i32, i32* %channel, align 4, !dbg !6876
  %idxprom29 = zext i32 %38 to i64, !dbg !6877
  %39 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6877
  %cur_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %39, i32 0, i32 51, !dbg !6878
  %40 = load %struct.ChannelParams*, %struct.ChannelParams** %cur_channel_params, align 8, !dbg !6878
  %arrayidx30 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %40, i64 %idxprom29, !dbg !6877
  %41 = load i32, i32* %filter, align 4, !dbg !6879
  call void @copy_filter_params(%struct.ChannelParams* %37, %struct.ChannelParams* %arrayidx30, i32 %41), !dbg !6880
  br label %for.inc, !dbg !6880

for.inc:                                          ; preds = %for.body28
  %42 = load i32, i32* %filter, align 4, !dbg !6881
  %inc = add i32 %42, 1, !dbg !6881
  store i32 %inc, i32* %filter, align 4, !dbg !6881
  br label %for.cond26, !dbg !6883, !llvm.loop !6884

for.end:                                          ; preds = %for.cond26
  br label %if.end, !dbg !6886

if.end:                                           ; preds = %for.end, %for.body6
  br label %for.inc31, !dbg !6888

for.inc31:                                        ; preds = %if.end
  %43 = load i32, i32* %channel, align 4, !dbg !6889
  %inc32 = add i32 %43, 1, !dbg !6889
  store i32 %inc32, i32* %channel, align 4, !dbg !6889
  br label %for.cond4, !dbg !6891, !llvm.loop !6892

for.end33:                                        ; preds = %for.cond4
  br label %for.inc34, !dbg !6894

for.inc34:                                        ; preds = %for.end33
  %44 = load i32, i32* %index, align 4, !dbg !6895
  %inc35 = add i32 %44, 1, !dbg !6895
  store i32 %inc35, i32* %index, align 4, !dbg !6895
  br label %for.cond, !dbg !6897, !llvm.loop !6898

for.end36:                                        ; preds = %for.cond
  ret void, !dbg !6900
}

; Function Attrs: nounwind uwtable
define internal void @determine_bits(%struct.MLPEncodeContext* %ctx) #1 !dbg !6901 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6902, metadata !1746), !dbg !6906
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6913, metadata !1746), !dbg !6914
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6915, metadata !1746), !dbg !6916
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %dp = alloca %struct.DecodingParams*, align 8
  %rh = alloca %struct.RestartHeader*, align 8
  %channel = alloca i32, align 4
  %cp = alloca %struct.ChannelParams*, align 8
  %sample_buffer = alloca i32*, align 8
  %min = alloca i32, align 4
  %max = alloca i32, align 4
  %no_filters_used = alloca i32, align 4
  %average = alloca i32, align 4
  %offset = alloca i32, align 4
  %i = alloca i32, align 4
  %sample = alloca i32, align 4
  %temp_bo = alloca %struct.BestOffset, align 4
  %offset_max = alloca i16, align 2
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !6917, metadata !1746), !dbg !6918
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !6919, metadata !1746), !dbg !6920
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6921
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 52, !dbg !6922
  %1 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !6922
  store %struct.DecodingParams* %1, %struct.DecodingParams** %dp, align 8, !dbg !6920
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !6923, metadata !1746), !dbg !6924
  %2 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6925
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %2, i32 0, i32 53, !dbg !6926
  %3 = load %struct.RestartHeader*, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !6926
  store %struct.RestartHeader* %3, %struct.RestartHeader** %rh, align 8, !dbg !6924
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !6927, metadata !1746), !dbg !6928
  store i32 0, i32* %channel, align 4, !dbg !6929
  br label %for.cond, !dbg !6930

for.cond:                                         ; preds = %for.inc57, %entry
  %4 = load i32, i32* %channel, align 4, !dbg !6931
  %5 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !6933
  %max_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %5, i32 0, i32 1, !dbg !6934
  %6 = load i8, i8* %max_channel, align 1, !dbg !6934
  %conv = zext i8 %6 to i32, !dbg !6933
  %cmp = icmp ule i32 %4, %conv, !dbg !6935
  br i1 %cmp, label %for.body, label %for.end59, !dbg !6936

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %cp, metadata !6937, metadata !1746), !dbg !6938
  %7 = load i32, i32* %channel, align 4, !dbg !6939
  %idxprom = zext i32 %7 to i64, !dbg !6940
  %8 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6940
  %cur_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %8, i32 0, i32 51, !dbg !6941
  %9 = load %struct.ChannelParams*, %struct.ChannelParams** %cur_channel_params, align 8, !dbg !6941
  %arrayidx = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %9, i64 %idxprom, !dbg !6940
  store %struct.ChannelParams* %arrayidx, %struct.ChannelParams** %cp, align 8, !dbg !6938
  call void @llvm.dbg.declare(metadata i32** %sample_buffer, metadata !6942, metadata !1746), !dbg !6943
  %10 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !6944
  %sample_buffer2 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %10, i32 0, i32 15, !dbg !6945
  %11 = load i32*, i32** %sample_buffer2, align 8, !dbg !6945
  %12 = load i32, i32* %channel, align 4, !dbg !6946
  %idx.ext = zext i32 %12 to i64, !dbg !6947
  %add.ptr = getelementptr inbounds i32, i32* %11, i64 %idx.ext, !dbg !6947
  store i32* %add.ptr, i32** %sample_buffer, align 8, !dbg !6943
  call void @llvm.dbg.declare(metadata i32* %min, metadata !6948, metadata !1746), !dbg !6949
  store i32 2147483647, i32* %min, align 4, !dbg !6949
  call void @llvm.dbg.declare(metadata i32* %max, metadata !6950, metadata !1746), !dbg !6951
  store i32 -2147483648, i32* %max, align 4, !dbg !6951
  call void @llvm.dbg.declare(metadata i32* %no_filters_used, metadata !6952, metadata !1746), !dbg !6953
  %13 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !6954
  %filter_params = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %13, i32 0, i32 0, !dbg !6955
  %arrayidx3 = getelementptr inbounds [2 x %struct.FilterParams], [2 x %struct.FilterParams]* %filter_params, i64 0, i64 0, !dbg !6954
  %order = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %arrayidx3, i32 0, i32 0, !dbg !6956
  %14 = load i8, i8* %order, align 4, !dbg !6956
  %tobool = icmp ne i8 %14, 0, !dbg !6957
  %lnot = xor i1 %tobool, true, !dbg !6957
  %lnot.ext = zext i1 %lnot to i32, !dbg !6957
  store i32 %lnot.ext, i32* %no_filters_used, align 4, !dbg !6953
  call void @llvm.dbg.declare(metadata i32* %average, metadata !6958, metadata !1746), !dbg !6959
  store i32 0, i32* %average, align 4, !dbg !6959
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !6960, metadata !1746), !dbg !6961
  store i32 0, i32* %offset, align 4, !dbg !6961
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6962, metadata !1746), !dbg !6963
  store i32 0, i32* %i, align 4, !dbg !6964
  br label %for.cond4, !dbg !6966

for.cond4:                                        ; preds = %for.inc, %for.body
  %15 = load i32, i32* %i, align 4, !dbg !6967
  %16 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !6970
  %blocksize = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %16, i32 0, i32 0, !dbg !6971
  %17 = load i16, i16* %blocksize, align 4, !dbg !6971
  %conv5 = zext i16 %17 to i32, !dbg !6970
  %cmp6 = icmp slt i32 %15, %conv5, !dbg !6972
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !6973

for.body8:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !6974, metadata !1746), !dbg !6976
  %18 = load i32*, i32** %sample_buffer, align 8, !dbg !6977
  %19 = load i32, i32* %18, align 4, !dbg !6978
  %20 = load i32, i32* %channel, align 4, !dbg !6979
  %idxprom9 = zext i32 %20 to i64, !dbg !6980
  %21 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !6980
  %quant_step_size = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %21, i32 0, i32 1, !dbg !6981
  %arrayidx10 = getelementptr inbounds [8 x i8], [8 x i8]* %quant_step_size, i64 0, i64 %idxprom9, !dbg !6980
  %22 = load i8, i8* %arrayidx10, align 1, !dbg !6980
  %conv11 = zext i8 %22 to i32, !dbg !6980
  %shr = ashr i32 %19, %conv11, !dbg !6982
  store i32 %shr, i32* %sample, align 4, !dbg !6976
  %23 = load i32, i32* %sample, align 4, !dbg !6983
  %24 = load i32, i32* %min, align 4, !dbg !6985
  %cmp12 = icmp slt i32 %23, %24, !dbg !6986
  br i1 %cmp12, label %if.then, label %if.end, !dbg !6987

if.then:                                          ; preds = %for.body8
  %25 = load i32, i32* %sample, align 4, !dbg !6988
  store i32 %25, i32* %min, align 4, !dbg !6989
  br label %if.end, !dbg !6990

if.end:                                           ; preds = %if.then, %for.body8
  %26 = load i32, i32* %sample, align 4, !dbg !6991
  %27 = load i32, i32* %max, align 4, !dbg !6993
  %cmp14 = icmp sgt i32 %26, %27, !dbg !6994
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !6995

if.then16:                                        ; preds = %if.end
  %28 = load i32, i32* %sample, align 4, !dbg !6996
  store i32 %28, i32* %max, align 4, !dbg !6997
  br label %if.end17, !dbg !6998

if.end17:                                         ; preds = %if.then16, %if.end
  %29 = load i32, i32* %sample, align 4, !dbg !6999
  %30 = load i32, i32* %average, align 4, !dbg !7000
  %add = add nsw i32 %30, %29, !dbg !7000
  store i32 %add, i32* %average, align 4, !dbg !7000
  %31 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7001
  %num_channels = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %31, i32 0, i32 2, !dbg !7002
  %32 = load i32, i32* %num_channels, align 4, !dbg !7002
  %33 = load i32*, i32** %sample_buffer, align 8, !dbg !7003
  %idx.ext18 = sext i32 %32 to i64, !dbg !7003
  %add.ptr19 = getelementptr inbounds i32, i32* %33, i64 %idx.ext18, !dbg !7003
  store i32* %add.ptr19, i32** %sample_buffer, align 8, !dbg !7003
  br label %for.inc, !dbg !7004

for.inc:                                          ; preds = %if.end17
  %34 = load i32, i32* %i, align 4, !dbg !7005
  %inc = add nsw i32 %34, 1, !dbg !7005
  store i32 %inc, i32* %i, align 4, !dbg !7005
  br label %for.cond4, !dbg !7007, !llvm.loop !7008

for.end:                                          ; preds = %for.cond4
  %35 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !7010
  %blocksize20 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %35, i32 0, i32 0, !dbg !7011
  %36 = load i16, i16* %blocksize20, align 4, !dbg !7011
  %conv21 = zext i16 %36 to i32, !dbg !7010
  %37 = load i32, i32* %average, align 4, !dbg !7012
  %div = sdiv i32 %37, %conv21, !dbg !7012
  store i32 %div, i32* %average, align 4, !dbg !7012
  %38 = load i32, i32* %no_filters_used, align 4, !dbg !7013
  %tobool22 = icmp ne i32 %38, 0, !dbg !7013
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !7014

if.then23:                                        ; preds = %for.end
  %39 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7015
  %40 = load i32, i32* %channel, align 4, !dbg !7016
  %41 = load i32, i32* %min, align 4, !dbg !7017
  %42 = load i32, i32* %max, align 4, !dbg !7018
  %43 = load i32, i32* %channel, align 4, !dbg !7019
  %idxprom24 = zext i32 %43 to i64, !dbg !7020
  %44 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7020
  %cur_best_offset = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %44, i32 0, i32 50, !dbg !7021
  %45 = load [4 x %struct.BestOffset]*, [4 x %struct.BestOffset]** %cur_best_offset, align 16, !dbg !7021
  %arrayidx25 = getelementptr inbounds [4 x %struct.BestOffset], [4 x %struct.BestOffset]* %45, i64 %idxprom24, !dbg !7020
  %arrayidx26 = getelementptr inbounds [4 x %struct.BestOffset], [4 x %struct.BestOffset]* %arrayidx25, i64 0, i64 0, !dbg !7020
  call void @no_codebook_bits(%struct.MLPEncodeContext* %39, i32 %40, i32 %41, i32 %42, %struct.BestOffset* %arrayidx26), !dbg !7022
  %46 = load i32, i32* %average, align 4, !dbg !7023
  store i32 %46, i32* %a.addr.i, align 4, !dbg !7024
  store i32 -16384, i32* %amin.addr.i, align 4, !dbg !7024
  store i32 16383, i32* %amax.addr.i, align 4, !dbg !7024
  %47 = load i32, i32* %a.addr.i, align 4, !dbg !7025
  %48 = load i32, i32* %amin.addr.i, align 4, !dbg !7027
  %cmp.i = icmp slt i32 %47, %48, !dbg !7028
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !7029

if.then.i:                                        ; preds = %if.then23
  %49 = load i32, i32* %amin.addr.i, align 4, !dbg !7030
  store i32 %49, i32* %retval.i, align 4, !dbg !7032
  br label %av_clip_c.exit, !dbg !7032

if.else.i:                                        ; preds = %if.then23
  %50 = load i32, i32* %a.addr.i, align 4, !dbg !7033
  %51 = load i32, i32* %amax.addr.i, align 4, !dbg !7035
  %cmp1.i = icmp sgt i32 %50, %51, !dbg !7036
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !7037

if.then2.i:                                       ; preds = %if.else.i
  %52 = load i32, i32* %amax.addr.i, align 4, !dbg !7038
  store i32 %52, i32* %retval.i, align 4, !dbg !7040
  br label %av_clip_c.exit, !dbg !7040

if.else3.i:                                       ; preds = %if.else.i
  %53 = load i32, i32* %a.addr.i, align 4, !dbg !7041
  store i32 %53, i32* %retval.i, align 4, !dbg !7042
  br label %av_clip_c.exit, !dbg !7042

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %54 = load i32, i32* %retval.i, align 4, !dbg !7043
  store i32 %54, i32* %offset, align 4, !dbg !7044
  br label %if.end32, !dbg !7045

if.else:                                          ; preds = %for.end
  %55 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7046
  %56 = load i32, i32* %channel, align 4, !dbg !7048
  %57 = load i32, i32* %offset, align 4, !dbg !7049
  %conv27 = trunc i32 %57 to i16, !dbg !7049
  %58 = load i32, i32* %min, align 4, !dbg !7050
  %59 = load i32, i32* %max, align 4, !dbg !7051
  %60 = load i32, i32* %channel, align 4, !dbg !7052
  %idxprom28 = zext i32 %60 to i64, !dbg !7053
  %61 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7053
  %cur_best_offset29 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %61, i32 0, i32 50, !dbg !7054
  %62 = load [4 x %struct.BestOffset]*, [4 x %struct.BestOffset]** %cur_best_offset29, align 16, !dbg !7054
  %arrayidx30 = getelementptr inbounds [4 x %struct.BestOffset], [4 x %struct.BestOffset]* %62, i64 %idxprom28, !dbg !7053
  %arrayidx31 = getelementptr inbounds [4 x %struct.BestOffset], [4 x %struct.BestOffset]* %arrayidx30, i64 0, i64 0, !dbg !7053
  call void @no_codebook_bits_offset(%struct.MLPEncodeContext* %55, i32 %56, i16 signext %conv27, i32 %58, i32 %59, %struct.BestOffset* %arrayidx31), !dbg !7055
  br label %if.end32

if.end32:                                         ; preds = %if.else, %av_clip_c.exit
  store i32 1, i32* %i, align 4, !dbg !7056
  br label %for.cond33, !dbg !7058

for.cond33:                                       ; preds = %for.inc54, %if.end32
  %63 = load i32, i32* %i, align 4, !dbg !7059
  %cmp34 = icmp slt i32 %63, 4, !dbg !7062
  br i1 %cmp34, label %for.body36, label %for.end56, !dbg !7063

for.body36:                                       ; preds = %for.cond33
  call void @llvm.dbg.declare(metadata %struct.BestOffset* %temp_bo, metadata !7064, metadata !1746), !dbg !7066
  %64 = bitcast %struct.BestOffset* %temp_bo to i8*, !dbg !7066
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* bitcast (%struct.BestOffset* @determine_bits.temp_bo to i8*), i64 16, i32 4, i1 false), !dbg !7066
  call void @llvm.dbg.declare(metadata i16* %offset_max, metadata !7067, metadata !1746), !dbg !7068
  %65 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7069
  %66 = load i32, i32* %channel, align 4, !dbg !7070
  %67 = load i32, i32* %i, align 4, !dbg !7071
  %sub = sub nsw i32 %67, 1, !dbg !7072
  %68 = load i32, i32* %min, align 4, !dbg !7073
  %69 = load i32, i32* %max, align 4, !dbg !7074
  %70 = load i32, i32* %offset, align 4, !dbg !7075
  %conv37 = trunc i32 %70 to i16, !dbg !7075
  call void @codebook_bits_offset(%struct.MLPEncodeContext* %65, i32 %66, i32 %sub, i32 %68, i32 %69, i16 signext %conv37, %struct.BestOffset* %temp_bo), !dbg !7076
  %71 = load i32, i32* %no_filters_used, align 4, !dbg !7077
  %tobool38 = icmp ne i32 %71, 0, !dbg !7077
  br i1 %tobool38, label %if.then39, label %if.end48, !dbg !7079

if.then39:                                        ; preds = %for.body36
  %max40 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %temp_bo, i32 0, i32 4, !dbg !7080
  %72 = load i16, i16* %max40, align 2, !dbg !7080
  store i16 %72, i16* %offset_max, align 2, !dbg !7082
  %73 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7083
  %74 = load i32, i32* %channel, align 4, !dbg !7084
  %75 = load i32, i32* %i, align 4, !dbg !7085
  %sub41 = sub nsw i32 %75, 1, !dbg !7086
  %min42 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %temp_bo, i32 0, i32 3, !dbg !7087
  %76 = load i16, i16* %min42, align 4, !dbg !7087
  %conv43 = sext i16 %76 to i32, !dbg !7088
  %sub44 = sub nsw i32 %conv43, 1, !dbg !7089
  %77 = load i32, i32* %min, align 4, !dbg !7090
  %78 = load i32, i32* %max, align 4, !dbg !7091
  call void @codebook_bits(%struct.MLPEncodeContext* %73, i32 %74, i32 %sub41, i32 %sub44, i32 %77, i32 %78, %struct.BestOffset* %temp_bo, i32 0), !dbg !7092
  %79 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7093
  %80 = load i32, i32* %channel, align 4, !dbg !7094
  %81 = load i32, i32* %i, align 4, !dbg !7095
  %sub45 = sub nsw i32 %81, 1, !dbg !7096
  %82 = load i16, i16* %offset_max, align 2, !dbg !7097
  %conv46 = sext i16 %82 to i32, !dbg !7097
  %add47 = add nsw i32 %conv46, 1, !dbg !7098
  %83 = load i32, i32* %min, align 4, !dbg !7099
  %84 = load i32, i32* %max, align 4, !dbg !7100
  call void @codebook_bits(%struct.MLPEncodeContext* %79, i32 %80, i32 %sub45, i32 %add47, i32 %83, i32 %84, %struct.BestOffset* %temp_bo, i32 1), !dbg !7101
  br label %if.end48, !dbg !7102

if.end48:                                         ; preds = %if.then39, %for.body36
  %85 = load i32, i32* %i, align 4, !dbg !7103
  %idxprom49 = sext i32 %85 to i64, !dbg !7104
  %86 = load i32, i32* %channel, align 4, !dbg !7105
  %idxprom50 = zext i32 %86 to i64, !dbg !7104
  %87 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7104
  %cur_best_offset51 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %87, i32 0, i32 50, !dbg !7106
  %88 = load [4 x %struct.BestOffset]*, [4 x %struct.BestOffset]** %cur_best_offset51, align 16, !dbg !7106
  %arrayidx52 = getelementptr inbounds [4 x %struct.BestOffset], [4 x %struct.BestOffset]* %88, i64 %idxprom50, !dbg !7104
  %arrayidx53 = getelementptr inbounds [4 x %struct.BestOffset], [4 x %struct.BestOffset]* %arrayidx52, i64 0, i64 %idxprom49, !dbg !7104
  %89 = bitcast %struct.BestOffset* %arrayidx53 to i8*, !dbg !7107
  %90 = bitcast %struct.BestOffset* %temp_bo to i8*, !dbg !7107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 16, i32 4, i1 false), !dbg !7107
  br label %for.inc54, !dbg !7108

for.inc54:                                        ; preds = %if.end48
  %91 = load i32, i32* %i, align 4, !dbg !7109
  %inc55 = add nsw i32 %91, 1, !dbg !7109
  store i32 %inc55, i32* %i, align 4, !dbg !7109
  br label %for.cond33, !dbg !7111, !llvm.loop !7112

for.end56:                                        ; preds = %for.cond33
  br label %for.inc57, !dbg !7114

for.inc57:                                        ; preds = %for.end56
  %92 = load i32, i32* %channel, align 4, !dbg !7115
  %inc58 = add i32 %92, 1, !dbg !7115
  store i32 %inc58, i32* %channel, align 4, !dbg !7115
  br label %for.cond, !dbg !7117, !llvm.loop !7118

for.end59:                                        ; preds = %for.cond
  ret void, !dbg !7120
}

; Function Attrs: nounwind uwtable
define internal void @set_best_codebook(%struct.MLPEncodeContext* %ctx) #1 !dbg !7121 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %dp = alloca %struct.DecodingParams*, align 8
  %rh = alloca %struct.RestartHeader*, align 8
  %channel = alloca i32, align 4
  %cur_bo = alloca %struct.BestOffset*, align 8
  %prev_bo = alloca %struct.BestOffset*, align 8
  %path_counter = alloca [5 x %struct.PathCounter], align 16
  %best_codebook = alloca i32, align 4
  %index = alloca i32, align 4
  %best_path = alloca i8*, align 8
  %best_bitcount = alloca i32, align 4
  %codebook = alloca i32, align 4
  %prev_best_bitcount = alloca i32, align 4
  %last_best = alloca i32, align 4
  %dst_path = alloca %struct.PathCounter*, align 8
  %src_path = alloca %struct.PathCounter*, align 8
  %temp_bitcount = alloca i32, align 4
  %cp = alloca %struct.ChannelParams*, align 8
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !7122, metadata !1746), !dbg !7123
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !7124, metadata !1746), !dbg !7125
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7126
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 52, !dbg !7127
  %1 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !7127
  store %struct.DecodingParams* %1, %struct.DecodingParams** %dp, align 8, !dbg !7125
  call void @llvm.dbg.declare(metadata %struct.RestartHeader** %rh, metadata !7128, metadata !1746), !dbg !7129
  %2 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7130
  %cur_restart_header = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %2, i32 0, i32 53, !dbg !7131
  %3 = load %struct.RestartHeader*, %struct.RestartHeader** %cur_restart_header, align 8, !dbg !7131
  store %struct.RestartHeader* %3, %struct.RestartHeader** %rh, align 8, !dbg !7129
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !7132, metadata !1746), !dbg !7133
  %4 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !7134
  %min_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %4, i32 0, i32 0, !dbg !7136
  %5 = load i8, i8* %min_channel, align 4, !dbg !7136
  %conv = zext i8 %5 to i32, !dbg !7134
  store i32 %conv, i32* %channel, align 4, !dbg !7137
  br label %for.cond, !dbg !7138

for.cond:                                         ; preds = %for.inc85, %entry
  %6 = load i32, i32* %channel, align 4, !dbg !7139
  %7 = load %struct.RestartHeader*, %struct.RestartHeader** %rh, align 8, !dbg !7142
  %max_channel = getelementptr inbounds %struct.RestartHeader, %struct.RestartHeader* %7, i32 0, i32 1, !dbg !7143
  %8 = load i8, i8* %max_channel, align 1, !dbg !7143
  %conv1 = zext i8 %8 to i32, !dbg !7142
  %cmp = icmp ule i32 %6, %conv1, !dbg !7144
  br i1 %cmp, label %for.body, label %for.end87, !dbg !7145

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BestOffset** %cur_bo, metadata !7146, metadata !1746), !dbg !7149
  call void @llvm.dbg.declare(metadata %struct.BestOffset** %prev_bo, metadata !7150, metadata !1746), !dbg !7151
  store %struct.BestOffset* getelementptr inbounds ([4 x %struct.BestOffset], [4 x %struct.BestOffset]* @restart_best_offset, i32 0, i32 0), %struct.BestOffset** %prev_bo, align 8, !dbg !7151
  call void @llvm.dbg.declare(metadata [5 x %struct.PathCounter]* %path_counter, metadata !7152, metadata !1746), !dbg !7164
  call void @llvm.dbg.declare(metadata i32* %best_codebook, metadata !7165, metadata !1746), !dbg !7166
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7167, metadata !1746), !dbg !7168
  call void @llvm.dbg.declare(metadata i8** %best_path, metadata !7169, metadata !1746), !dbg !7170
  %arraydecay = getelementptr inbounds [5 x %struct.PathCounter], [5 x %struct.PathCounter]* %path_counter, i32 0, i32 0, !dbg !7171
  call void @clear_path_counter(%struct.PathCounter* %arraydecay), !dbg !7172
  store i32 0, i32* %index, align 4, !dbg !7173
  br label %for.cond3, !dbg !7175

for.cond3:                                        ; preds = %for.inc54, %for.body
  %9 = load i32, i32* %index, align 4, !dbg !7176
  %10 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7179
  %number_of_subblocks = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %10, i32 0, i32 58, !dbg !7180
  %11 = load i32, i32* %number_of_subblocks, align 4, !dbg !7180
  %cmp4 = icmp ult i32 %9, %11, !dbg !7181
  br i1 %cmp4, label %for.body6, label %for.end56, !dbg !7182

for.body6:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata i32* %best_bitcount, metadata !7183, metadata !1746), !dbg !7185
  store i32 2147483647, i32* %best_bitcount, align 4, !dbg !7185
  call void @llvm.dbg.declare(metadata i32* %codebook, metadata !7186, metadata !1746), !dbg !7187
  %12 = load i32, i32* %channel, align 4, !dbg !7188
  %idxprom = zext i32 %12 to i64, !dbg !7189
  %13 = load i32, i32* %index, align 4, !dbg !7190
  %idxprom7 = zext i32 %13 to i64, !dbg !7189
  %14 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7189
  %best_offset = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %14, i32 0, i32 41, !dbg !7191
  %arrayidx = getelementptr inbounds [17 x [8 x [4 x %struct.BestOffset]]], [17 x [8 x [4 x %struct.BestOffset]]]* %best_offset, i64 0, i64 %idxprom7, !dbg !7189
  %arrayidx8 = getelementptr inbounds [8 x [4 x %struct.BestOffset]], [8 x [4 x %struct.BestOffset]]* %arrayidx, i64 0, i64 %idxprom, !dbg !7189
  %arraydecay9 = getelementptr inbounds [4 x %struct.BestOffset], [4 x %struct.BestOffset]* %arrayidx8, i32 0, i32 0, !dbg !7189
  store %struct.BestOffset* %arraydecay9, %struct.BestOffset** %cur_bo, align 8, !dbg !7192
  store i32 0, i32* %codebook, align 4, !dbg !7193
  br label %for.cond10, !dbg !7195

for.cond10:                                       ; preds = %for.inc48, %for.body6
  %15 = load i32, i32* %codebook, align 4, !dbg !7196
  %cmp11 = icmp ult i32 %15, 4, !dbg !7199
  br i1 %cmp11, label %for.body13, label %for.end50, !dbg !7200

for.body13:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i32* %prev_best_bitcount, metadata !7201, metadata !1746), !dbg !7203
  store i32 2147483647, i32* %prev_best_bitcount, align 4, !dbg !7203
  call void @llvm.dbg.declare(metadata i32* %last_best, metadata !7204, metadata !1746), !dbg !7205
  store i32 0, i32* %last_best, align 4, !dbg !7206
  br label %for.cond14, !dbg !7208

for.cond14:                                       ; preds = %for.inc, %for.body13
  %16 = load i32, i32* %last_best, align 4, !dbg !7209
  %cmp15 = icmp slt i32 %16, 2, !dbg !7212
  br i1 %cmp15, label %for.body17, label %for.end, !dbg !7213

for.body17:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata %struct.PathCounter** %dst_path, metadata !7214, metadata !1746), !dbg !7217
  %17 = load i32, i32* %codebook, align 4, !dbg !7218
  %idxprom18 = zext i32 %17 to i64, !dbg !7219
  %arrayidx19 = getelementptr inbounds [5 x %struct.PathCounter], [5 x %struct.PathCounter]* %path_counter, i64 0, i64 %idxprom18, !dbg !7219
  store %struct.PathCounter* %arrayidx19, %struct.PathCounter** %dst_path, align 8, !dbg !7217
  call void @llvm.dbg.declare(metadata %struct.PathCounter** %src_path, metadata !7220, metadata !1746), !dbg !7221
  call void @llvm.dbg.declare(metadata i32* %temp_bitcount, metadata !7222, metadata !1746), !dbg !7223
  %18 = load i32, i32* %last_best, align 4, !dbg !7224
  %tobool = icmp ne i32 %18, 0, !dbg !7224
  br i1 %tobool, label %if.then, label %if.else, !dbg !7226

if.then:                                          ; preds = %for.body17
  %arrayidx20 = getelementptr inbounds [5 x %struct.PathCounter], [5 x %struct.PathCounter]* %path_counter, i64 0, i64 4, !dbg !7227
  store %struct.PathCounter* %arrayidx20, %struct.PathCounter** %src_path, align 8, !dbg !7229
  br label %if.end30, !dbg !7230

if.else:                                          ; preds = %for.body17
  %19 = load i32, i32* %codebook, align 4, !dbg !7231
  %idxprom21 = zext i32 %19 to i64, !dbg !7234
  %20 = load %struct.BestOffset*, %struct.BestOffset** %prev_bo, align 8, !dbg !7234
  %arrayidx22 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %20, i64 %idxprom21, !dbg !7234
  %21 = load i32, i32* %codebook, align 4, !dbg !7235
  %idxprom23 = zext i32 %21 to i64, !dbg !7236
  %22 = load %struct.BestOffset*, %struct.BestOffset** %cur_bo, align 8, !dbg !7236
  %arrayidx24 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %22, i64 %idxprom23, !dbg !7236
  %call = call i32 @compare_best_offset(%struct.BestOffset* %arrayidx22, %struct.BestOffset* %arrayidx24), !dbg !7237
  %tobool25 = icmp ne i32 %call, 0, !dbg !7237
  br i1 %tobool25, label %if.then26, label %if.else27, !dbg !7238

if.then26:                                        ; preds = %if.else
  br label %for.inc, !dbg !7239

if.else27:                                        ; preds = %if.else
  %23 = load i32, i32* %codebook, align 4, !dbg !7240
  %idxprom28 = zext i32 %23 to i64, !dbg !7241
  %arrayidx29 = getelementptr inbounds [5 x %struct.PathCounter], [5 x %struct.PathCounter]* %path_counter, i64 0, i64 %idxprom28, !dbg !7241
  store %struct.PathCounter* %arrayidx29, %struct.PathCounter** %src_path, align 8, !dbg !7242
  br label %if.end

if.end:                                           ; preds = %if.else27
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  %24 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7243
  %25 = load i32, i32* %channel, align 4, !dbg !7244
  %26 = load %struct.PathCounter*, %struct.PathCounter** %src_path, align 8, !dbg !7245
  %27 = load i32, i32* %codebook, align 4, !dbg !7246
  %call31 = call i32 @best_codebook_path_cost(%struct.MLPEncodeContext* %24, i32 %25, %struct.PathCounter* %26, i32 %27), !dbg !7247
  store i32 %call31, i32* %temp_bitcount, align 4, !dbg !7248
  %28 = load i32, i32* %temp_bitcount, align 4, !dbg !7249
  %29 = load i32, i32* %best_bitcount, align 4, !dbg !7251
  %cmp32 = icmp ult i32 %28, %29, !dbg !7252
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !7253

if.then34:                                        ; preds = %if.end30
  %30 = load i32, i32* %temp_bitcount, align 4, !dbg !7254
  store i32 %30, i32* %best_bitcount, align 4, !dbg !7256
  %31 = load i32, i32* %codebook, align 4, !dbg !7257
  store i32 %31, i32* %best_codebook, align 4, !dbg !7258
  br label %if.end35, !dbg !7259

if.end35:                                         ; preds = %if.then34, %if.end30
  %32 = load i32, i32* %temp_bitcount, align 4, !dbg !7260
  %33 = load i32, i32* %prev_best_bitcount, align 4, !dbg !7262
  %cmp36 = icmp slt i32 %32, %33, !dbg !7263
  br i1 %cmp36, label %if.then38, label %if.end47, !dbg !7264

if.then38:                                        ; preds = %if.end35
  %34 = load i32, i32* %temp_bitcount, align 4, !dbg !7265
  store i32 %34, i32* %prev_best_bitcount, align 4, !dbg !7267
  %35 = load %struct.PathCounter*, %struct.PathCounter** %src_path, align 8, !dbg !7268
  %36 = load %struct.PathCounter*, %struct.PathCounter** %dst_path, align 8, !dbg !7270
  %cmp39 = icmp ne %struct.PathCounter* %35, %36, !dbg !7271
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !7272

if.then41:                                        ; preds = %if.then38
  %37 = load %struct.PathCounter*, %struct.PathCounter** %dst_path, align 8, !dbg !7273
  %38 = bitcast %struct.PathCounter* %37 to i8*, !dbg !7274
  %39 = load %struct.PathCounter*, %struct.PathCounter** %src_path, align 8, !dbg !7275
  %40 = bitcast %struct.PathCounter* %39 to i8*, !dbg !7274
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %40, i64 24, i32 4, i1 false), !dbg !7274
  br label %if.end42, !dbg !7274

if.end42:                                         ; preds = %if.then41, %if.then38
  %41 = load %struct.PathCounter*, %struct.PathCounter** %dst_path, align 8, !dbg !7276
  %path = getelementptr inbounds %struct.PathCounter, %struct.PathCounter* %41, i32 0, i32 0, !dbg !7277
  %arraydecay43 = getelementptr inbounds [19 x i8], [19 x i8]* %path, i32 0, i32 0, !dbg !7276
  %42 = load i32, i32* %codebook, align 4, !dbg !7278
  %idxprom44 = zext i32 %42 to i64, !dbg !7279
  %arrayidx45 = getelementptr inbounds [4 x i8*], [4 x i8*]* @path_counter_codebook, i64 0, i64 %idxprom44, !dbg !7279
  %43 = load i8*, i8** %arrayidx45, align 8, !dbg !7279
  %call46 = call i64 @av_strlcat(i8* %arraydecay43, i8* %43, i64 19), !dbg !7280
  %44 = load i32, i32* %temp_bitcount, align 4, !dbg !7281
  %45 = load %struct.PathCounter*, %struct.PathCounter** %dst_path, align 8, !dbg !7282
  %bitcount = getelementptr inbounds %struct.PathCounter, %struct.PathCounter* %45, i32 0, i32 1, !dbg !7283
  store i32 %44, i32* %bitcount, align 4, !dbg !7284
  br label %if.end47, !dbg !7285

if.end47:                                         ; preds = %if.end42, %if.end35
  br label %for.inc, !dbg !7286

for.inc:                                          ; preds = %if.end47, %if.then26
  %46 = load i32, i32* %last_best, align 4, !dbg !7287
  %inc = add nsw i32 %46, 1, !dbg !7287
  store i32 %inc, i32* %last_best, align 4, !dbg !7287
  br label %for.cond14, !dbg !7289, !llvm.loop !7290

for.end:                                          ; preds = %for.cond14
  br label %for.inc48, !dbg !7292

for.inc48:                                        ; preds = %for.end
  %47 = load i32, i32* %codebook, align 4, !dbg !7293
  %inc49 = add i32 %47, 1, !dbg !7293
  store i32 %inc49, i32* %codebook, align 4, !dbg !7293
  br label %for.cond10, !dbg !7295, !llvm.loop !7296

for.end50:                                        ; preds = %for.cond10
  %48 = load %struct.BestOffset*, %struct.BestOffset** %cur_bo, align 8, !dbg !7298
  store %struct.BestOffset* %48, %struct.BestOffset** %prev_bo, align 8, !dbg !7299
  %arrayidx51 = getelementptr inbounds [5 x %struct.PathCounter], [5 x %struct.PathCounter]* %path_counter, i64 0, i64 4, !dbg !7300
  %49 = bitcast %struct.PathCounter* %arrayidx51 to i8*, !dbg !7301
  %50 = load i32, i32* %best_codebook, align 4, !dbg !7302
  %idxprom52 = zext i32 %50 to i64, !dbg !7303
  %arrayidx53 = getelementptr inbounds [5 x %struct.PathCounter], [5 x %struct.PathCounter]* %path_counter, i64 0, i64 %idxprom52, !dbg !7303
  %51 = bitcast %struct.PathCounter* %arrayidx53 to i8*, !dbg !7301
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %51, i64 24, i32 8, i1 false), !dbg !7301
  br label %for.inc54, !dbg !7304

for.inc54:                                        ; preds = %for.end50
  %52 = load i32, i32* %index, align 4, !dbg !7305
  %inc55 = add i32 %52, 1, !dbg !7305
  store i32 %inc55, i32* %index, align 4, !dbg !7305
  br label %for.cond3, !dbg !7307, !llvm.loop !7308

for.end56:                                        ; preds = %for.cond3
  %arrayidx57 = getelementptr inbounds [5 x %struct.PathCounter], [5 x %struct.PathCounter]* %path_counter, i64 0, i64 4, !dbg !7310
  %path58 = getelementptr inbounds %struct.PathCounter, %struct.PathCounter* %arrayidx57, i32 0, i32 0, !dbg !7311
  %arraydecay59 = getelementptr inbounds [19 x i8], [19 x i8]* %path58, i32 0, i32 0, !dbg !7310
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay59, i64 1, !dbg !7312
  store i8* %add.ptr, i8** %best_path, align 8, !dbg !7313
  store i32 0, i32* %index, align 4, !dbg !7314
  br label %for.cond60, !dbg !7316

for.cond60:                                       ; preds = %for.inc82, %for.end56
  %53 = load i32, i32* %index, align 4, !dbg !7317
  %54 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7320
  %number_of_subblocks61 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %54, i32 0, i32 58, !dbg !7321
  %55 = load i32, i32* %number_of_subblocks61, align 4, !dbg !7321
  %cmp62 = icmp ult i32 %53, %55, !dbg !7322
  br i1 %cmp62, label %for.body64, label %for.end84, !dbg !7323

for.body64:                                       ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %cp, metadata !7324, metadata !1746), !dbg !7326
  %56 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7327
  %seq_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %56, i32 0, i32 62, !dbg !7328
  %57 = load %struct.ChannelParams*, %struct.ChannelParams** %seq_channel_params, align 8, !dbg !7328
  %58 = load i32, i32* %index, align 4, !dbg !7329
  %59 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7330
  %avctx = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %59, i32 0, i32 0, !dbg !7331
  %60 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !7331
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %60, i32 0, i32 83, !dbg !7332
  %61 = load i32, i32* %channels, align 4, !dbg !7332
  %mul = mul i32 %58, %61, !dbg !7333
  %idx.ext = zext i32 %mul to i64, !dbg !7334
  %add.ptr65 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %57, i64 %idx.ext, !dbg !7334
  %62 = load i32, i32* %channel, align 4, !dbg !7335
  %idx.ext66 = zext i32 %62 to i64, !dbg !7336
  %add.ptr67 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %add.ptr65, i64 %idx.ext66, !dbg !7336
  store %struct.ChannelParams* %add.ptr67, %struct.ChannelParams** %cp, align 8, !dbg !7326
  %63 = load i8*, i8** %best_path, align 8, !dbg !7337
  %incdec.ptr = getelementptr inbounds i8, i8* %63, i32 1, !dbg !7337
  store i8* %incdec.ptr, i8** %best_path, align 8, !dbg !7337
  %64 = load i8, i8* %63, align 1, !dbg !7338
  %conv68 = sext i8 %64 to i32, !dbg !7338
  %sub = sub nsw i32 %conv68, 48, !dbg !7339
  store i32 %sub, i32* %best_codebook, align 4, !dbg !7340
  %65 = load i32, i32* %best_codebook, align 4, !dbg !7341
  %idxprom69 = zext i32 %65 to i64, !dbg !7342
  %66 = load i32, i32* %channel, align 4, !dbg !7343
  %idxprom70 = zext i32 %66 to i64, !dbg !7342
  %67 = load i32, i32* %index, align 4, !dbg !7344
  %idxprom71 = zext i32 %67 to i64, !dbg !7342
  %68 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7342
  %best_offset72 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %68, i32 0, i32 41, !dbg !7345
  %arrayidx73 = getelementptr inbounds [17 x [8 x [4 x %struct.BestOffset]]], [17 x [8 x [4 x %struct.BestOffset]]]* %best_offset72, i64 0, i64 %idxprom71, !dbg !7342
  %arrayidx74 = getelementptr inbounds [8 x [4 x %struct.BestOffset]], [8 x [4 x %struct.BestOffset]]* %arrayidx73, i64 0, i64 %idxprom70, !dbg !7342
  %arrayidx75 = getelementptr inbounds [4 x %struct.BestOffset], [4 x %struct.BestOffset]* %arrayidx74, i64 0, i64 %idxprom69, !dbg !7342
  store %struct.BestOffset* %arrayidx75, %struct.BestOffset** %cur_bo, align 8, !dbg !7346
  %69 = load %struct.BestOffset*, %struct.BestOffset** %cur_bo, align 8, !dbg !7347
  %offset = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %69, i32 0, i32 0, !dbg !7348
  %70 = load i16, i16* %offset, align 4, !dbg !7348
  %71 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !7349
  %huff_offset = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %71, i32 0, i32 2, !dbg !7350
  store i16 %70, i16* %huff_offset, align 4, !dbg !7351
  %72 = load %struct.BestOffset*, %struct.BestOffset** %cur_bo, align 8, !dbg !7352
  %lsb_bits = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %72, i32 0, i32 2, !dbg !7353
  %73 = load i32, i32* %lsb_bits, align 4, !dbg !7353
  %74 = load i32, i32* %channel, align 4, !dbg !7354
  %idxprom76 = zext i32 %74 to i64, !dbg !7355
  %75 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !7355
  %quant_step_size = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %75, i32 0, i32 1, !dbg !7356
  %arrayidx77 = getelementptr inbounds [8 x i8], [8 x i8]* %quant_step_size, i64 0, i64 %idxprom76, !dbg !7355
  %76 = load i8, i8* %arrayidx77, align 1, !dbg !7355
  %conv78 = zext i8 %76 to i32, !dbg !7355
  %add = add nsw i32 %73, %conv78, !dbg !7357
  %conv79 = trunc i32 %add to i8, !dbg !7352
  %77 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !7358
  %huff_lsbs = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %77, i32 0, i32 5, !dbg !7359
  store i8 %conv79, i8* %huff_lsbs, align 1, !dbg !7360
  %78 = load i32, i32* %best_codebook, align 4, !dbg !7361
  %conv80 = trunc i32 %78 to i8, !dbg !7361
  %79 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !7362
  %codebook81 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %79, i32 0, i32 4, !dbg !7363
  store i8 %conv80, i8* %codebook81, align 4, !dbg !7364
  br label %for.inc82, !dbg !7365

for.inc82:                                        ; preds = %for.body64
  %80 = load i32, i32* %index, align 4, !dbg !7366
  %inc83 = add i32 %80, 1, !dbg !7366
  store i32 %inc83, i32* %index, align 4, !dbg !7366
  br label %for.cond60, !dbg !7368, !llvm.loop !7369

for.end84:                                        ; preds = %for.cond60
  br label %for.inc85, !dbg !7371

for.inc85:                                        ; preds = %for.end84
  %81 = load i32, i32* %channel, align 4, !dbg !7372
  %inc86 = add i32 %81, 1, !dbg !7372
  store i32 %inc86, i32* %channel, align 4, !dbg !7372
  br label %for.cond, !dbg !7374, !llvm.loop !7375

for.end87:                                        ; preds = %for.cond
  ret void, !dbg !7377
}

; Function Attrs: nounwind uwtable
define internal i32 @number_trailing_zeroes(i32 %sample) #1 !dbg !7378 {
entry:
  %retval = alloca i32, align 4
  %sample.addr = alloca i32, align 4
  %bits = alloca i32, align 4
  store i32 %sample, i32* %sample.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sample.addr, metadata !7381, metadata !1746), !dbg !7382
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !7383, metadata !1746), !dbg !7384
  store i32 0, i32* %bits, align 4, !dbg !7385
  br label %for.cond, !dbg !7387

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %bits, align 4, !dbg !7388
  %cmp = icmp slt i32 %0, 24, !dbg !7391
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7392

land.rhs:                                         ; preds = %for.cond
  %1 = load i32, i32* %sample.addr, align 4, !dbg !7393
  %2 = load i32, i32* %bits, align 4, !dbg !7395
  %shl = shl i32 1, %2, !dbg !7396
  %and = and i32 %1, %shl, !dbg !7397
  %tobool = icmp ne i32 %and, 0, !dbg !7398
  %lnot = xor i1 %tobool, true, !dbg !7398
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %3 = phi i1 [ false, %for.cond ], [ %lnot, %land.rhs ]
  br i1 %3, label %for.body, label %for.end, !dbg !7399

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !7401

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %bits, align 4, !dbg !7403
  %inc = add nsw i32 %4, 1, !dbg !7403
  store i32 %inc, i32* %bits, align 4, !dbg !7403
  br label %for.cond, !dbg !7405, !llvm.loop !7406

for.end:                                          ; preds = %land.end
  %5 = load i32, i32* %bits, align 4, !dbg !7408
  %cmp1 = icmp eq i32 %5, 24, !dbg !7410
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7411

if.then:                                          ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !7412
  br label %return, !dbg !7412

if.end:                                           ; preds = %for.end
  %6 = load i32, i32* %bits, align 4, !dbg !7413
  store i32 %6, i32* %retval, align 4, !dbg !7414
  br label %return, !dbg !7414

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !7415
  ret i32 %7, !dbg !7415
}

; Function Attrs: nounwind uwtable
define internal i32 @estimate_stereo_mode(%struct.MLPEncodeContext* %ctx) #1 !dbg !7416 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %score = alloca [4 x i64], align 16
  %sum = alloca [4 x i64], align 16
  %right_ch = alloca i32*, align 8
  %left_ch = alloca i32*, align 8
  %i = alloca i32, align 4
  %best = alloca i32, align 4
  %left = alloca i32, align 4
  %right = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !7419, metadata !1746), !dbg !7420
  call void @llvm.dbg.declare(metadata [4 x i64]* %score, metadata !7421, metadata !1746), !dbg !7423
  call void @llvm.dbg.declare(metadata [4 x i64]* %sum, metadata !7424, metadata !1746), !dbg !7425
  %0 = bitcast [4 x i64]* %sum to i8*, !dbg !7425
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 32, i32 16, i1 false), !dbg !7425
  call void @llvm.dbg.declare(metadata i32** %right_ch, metadata !7426, metadata !1746), !dbg !7427
  %1 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7428
  %sample_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %1, i32 0, i32 15, !dbg !7429
  %2 = load i32*, i32** %sample_buffer, align 8, !dbg !7429
  %add.ptr = getelementptr inbounds i32, i32* %2, i64 1, !dbg !7430
  store i32* %add.ptr, i32** %right_ch, align 8, !dbg !7427
  call void @llvm.dbg.declare(metadata i32** %left_ch, metadata !7431, metadata !1746), !dbg !7432
  %3 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7433
  %sample_buffer1 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %3, i32 0, i32 15, !dbg !7434
  %4 = load i32*, i32** %sample_buffer1, align 8, !dbg !7434
  store i32* %4, i32** %left_ch, align 8, !dbg !7432
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7435, metadata !1746), !dbg !7436
  call void @llvm.dbg.declare(metadata i32* %best, metadata !7437, metadata !1746), !dbg !7438
  store i32 0, i32* %best, align 4, !dbg !7438
  store i32 2, i32* %i, align 4, !dbg !7439
  br label %for.cond, !dbg !7441

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !7442
  %6 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7445
  %number_of_samples = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %6, i32 0, i32 57, !dbg !7446
  %7 = load i32, i32* %number_of_samples, align 8, !dbg !7446
  %cmp = icmp ult i32 %5, %7, !dbg !7447
  br i1 %cmp, label %for.body, label %for.end, !dbg !7448

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %left, metadata !7449, metadata !1746), !dbg !7451
  %8 = load i32, i32* %i, align 4, !dbg !7452
  %9 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7453
  %num_channels = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %9, i32 0, i32 2, !dbg !7454
  %10 = load i32, i32* %num_channels, align 4, !dbg !7454
  %mul = mul nsw i32 %8, %10, !dbg !7455
  %idxprom = sext i32 %mul to i64, !dbg !7456
  %11 = load i32*, i32** %left_ch, align 8, !dbg !7456
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom, !dbg !7456
  %12 = load i32, i32* %arrayidx, align 4, !dbg !7456
  %13 = load i32, i32* %i, align 4, !dbg !7457
  %sub = sub nsw i32 %13, 1, !dbg !7458
  %14 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7459
  %num_channels2 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %14, i32 0, i32 2, !dbg !7460
  %15 = load i32, i32* %num_channels2, align 4, !dbg !7460
  %mul3 = mul nsw i32 %sub, %15, !dbg !7461
  %idxprom4 = sext i32 %mul3 to i64, !dbg !7462
  %16 = load i32*, i32** %left_ch, align 8, !dbg !7462
  %arrayidx5 = getelementptr inbounds i32, i32* %16, i64 %idxprom4, !dbg !7462
  %17 = load i32, i32* %arrayidx5, align 4, !dbg !7462
  %mul6 = mul nsw i32 2, %17, !dbg !7463
  %sub7 = sub nsw i32 %12, %mul6, !dbg !7464
  %18 = load i32, i32* %i, align 4, !dbg !7465
  %sub8 = sub nsw i32 %18, 2, !dbg !7466
  %19 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7467
  %num_channels9 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %19, i32 0, i32 2, !dbg !7468
  %20 = load i32, i32* %num_channels9, align 4, !dbg !7468
  %mul10 = mul nsw i32 %sub8, %20, !dbg !7469
  %idxprom11 = sext i32 %mul10 to i64, !dbg !7470
  %21 = load i32*, i32** %left_ch, align 8, !dbg !7470
  %arrayidx12 = getelementptr inbounds i32, i32* %21, i64 %idxprom11, !dbg !7470
  %22 = load i32, i32* %arrayidx12, align 4, !dbg !7470
  %add = add nsw i32 %sub7, %22, !dbg !7471
  store i32 %add, i32* %left, align 4, !dbg !7451
  call void @llvm.dbg.declare(metadata i32* %right, metadata !7472, metadata !1746), !dbg !7473
  %23 = load i32, i32* %i, align 4, !dbg !7474
  %24 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7475
  %num_channels13 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %24, i32 0, i32 2, !dbg !7476
  %25 = load i32, i32* %num_channels13, align 4, !dbg !7476
  %mul14 = mul nsw i32 %23, %25, !dbg !7477
  %idxprom15 = sext i32 %mul14 to i64, !dbg !7478
  %26 = load i32*, i32** %right_ch, align 8, !dbg !7478
  %arrayidx16 = getelementptr inbounds i32, i32* %26, i64 %idxprom15, !dbg !7478
  %27 = load i32, i32* %arrayidx16, align 4, !dbg !7478
  %28 = load i32, i32* %i, align 4, !dbg !7479
  %sub17 = sub nsw i32 %28, 1, !dbg !7480
  %29 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7481
  %num_channels18 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %29, i32 0, i32 2, !dbg !7482
  %30 = load i32, i32* %num_channels18, align 4, !dbg !7482
  %mul19 = mul nsw i32 %sub17, %30, !dbg !7483
  %idxprom20 = sext i32 %mul19 to i64, !dbg !7484
  %31 = load i32*, i32** %right_ch, align 8, !dbg !7484
  %arrayidx21 = getelementptr inbounds i32, i32* %31, i64 %idxprom20, !dbg !7484
  %32 = load i32, i32* %arrayidx21, align 4, !dbg !7484
  %mul22 = mul nsw i32 2, %32, !dbg !7485
  %sub23 = sub nsw i32 %27, %mul22, !dbg !7486
  %33 = load i32, i32* %i, align 4, !dbg !7487
  %sub24 = sub nsw i32 %33, 2, !dbg !7488
  %34 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7489
  %num_channels25 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %34, i32 0, i32 2, !dbg !7490
  %35 = load i32, i32* %num_channels25, align 4, !dbg !7490
  %mul26 = mul nsw i32 %sub24, %35, !dbg !7491
  %idxprom27 = sext i32 %mul26 to i64, !dbg !7492
  %36 = load i32*, i32** %right_ch, align 8, !dbg !7492
  %arrayidx28 = getelementptr inbounds i32, i32* %36, i64 %idxprom27, !dbg !7492
  %37 = load i32, i32* %arrayidx28, align 4, !dbg !7492
  %add29 = add nsw i32 %sub23, %37, !dbg !7493
  store i32 %add29, i32* %right, align 4, !dbg !7473
  %38 = load i32, i32* %left, align 4, !dbg !7494
  %cmp30 = icmp sge i32 %38, 0, !dbg !7495
  br i1 %cmp30, label %cond.true, label %cond.false, !dbg !7496

cond.true:                                        ; preds = %for.body
  %39 = load i32, i32* %left, align 4, !dbg !7497
  br label %cond.end, !dbg !7499

cond.false:                                       ; preds = %for.body
  %40 = load i32, i32* %left, align 4, !dbg !7500
  %sub31 = sub nsw i32 0, %40, !dbg !7502
  br label %cond.end, !dbg !7503

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %39, %cond.true ], [ %sub31, %cond.false ], !dbg !7504
  %conv = sext i32 %cond to i64, !dbg !7506
  %arrayidx32 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 0, !dbg !7507
  %41 = load i64, i64* %arrayidx32, align 16, !dbg !7508
  %add33 = add i64 %41, %conv, !dbg !7508
  store i64 %add33, i64* %arrayidx32, align 16, !dbg !7508
  %42 = load i32, i32* %right, align 4, !dbg !7509
  %cmp34 = icmp sge i32 %42, 0, !dbg !7510
  br i1 %cmp34, label %cond.true36, label %cond.false37, !dbg !7511

cond.true36:                                      ; preds = %cond.end
  %43 = load i32, i32* %right, align 4, !dbg !7512
  br label %cond.end39, !dbg !7513

cond.false37:                                     ; preds = %cond.end
  %44 = load i32, i32* %right, align 4, !dbg !7514
  %sub38 = sub nsw i32 0, %44, !dbg !7515
  br label %cond.end39, !dbg !7516

cond.end39:                                       ; preds = %cond.false37, %cond.true36
  %cond40 = phi i32 [ %43, %cond.true36 ], [ %sub38, %cond.false37 ], !dbg !7517
  %conv41 = sext i32 %cond40 to i64, !dbg !7518
  %arrayidx42 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 1, !dbg !7519
  %45 = load i64, i64* %arrayidx42, align 8, !dbg !7520
  %add43 = add i64 %45, %conv41, !dbg !7520
  store i64 %add43, i64* %arrayidx42, align 8, !dbg !7520
  %46 = load i32, i32* %left, align 4, !dbg !7521
  %47 = load i32, i32* %right, align 4, !dbg !7522
  %add44 = add nsw i32 %46, %47, !dbg !7523
  %shr = ashr i32 %add44, 1, !dbg !7524
  %cmp45 = icmp sge i32 %shr, 0, !dbg !7525
  br i1 %cmp45, label %cond.true47, label %cond.false50, !dbg !7526

cond.true47:                                      ; preds = %cond.end39
  %48 = load i32, i32* %left, align 4, !dbg !7527
  %49 = load i32, i32* %right, align 4, !dbg !7528
  %add48 = add nsw i32 %48, %49, !dbg !7529
  %shr49 = ashr i32 %add48, 1, !dbg !7530
  br label %cond.end54, !dbg !7531

cond.false50:                                     ; preds = %cond.end39
  %50 = load i32, i32* %left, align 4, !dbg !7532
  %51 = load i32, i32* %right, align 4, !dbg !7533
  %add51 = add nsw i32 %50, %51, !dbg !7534
  %shr52 = ashr i32 %add51, 1, !dbg !7535
  %sub53 = sub nsw i32 0, %shr52, !dbg !7536
  br label %cond.end54, !dbg !7537

cond.end54:                                       ; preds = %cond.false50, %cond.true47
  %cond55 = phi i32 [ %shr49, %cond.true47 ], [ %sub53, %cond.false50 ], !dbg !7538
  %conv56 = sext i32 %cond55 to i64, !dbg !7539
  %arrayidx57 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 2, !dbg !7540
  %52 = load i64, i64* %arrayidx57, align 16, !dbg !7541
  %add58 = add i64 %52, %conv56, !dbg !7541
  store i64 %add58, i64* %arrayidx57, align 16, !dbg !7541
  %53 = load i32, i32* %left, align 4, !dbg !7542
  %54 = load i32, i32* %right, align 4, !dbg !7543
  %sub59 = sub nsw i32 %53, %54, !dbg !7544
  %cmp60 = icmp sge i32 %sub59, 0, !dbg !7545
  br i1 %cmp60, label %cond.true62, label %cond.false64, !dbg !7546

cond.true62:                                      ; preds = %cond.end54
  %55 = load i32, i32* %left, align 4, !dbg !7547
  %56 = load i32, i32* %right, align 4, !dbg !7548
  %sub63 = sub nsw i32 %55, %56, !dbg !7549
  br label %cond.end67, !dbg !7550

cond.false64:                                     ; preds = %cond.end54
  %57 = load i32, i32* %left, align 4, !dbg !7551
  %58 = load i32, i32* %right, align 4, !dbg !7552
  %sub65 = sub nsw i32 %57, %58, !dbg !7553
  %sub66 = sub nsw i32 0, %sub65, !dbg !7554
  br label %cond.end67, !dbg !7555

cond.end67:                                       ; preds = %cond.false64, %cond.true62
  %cond68 = phi i32 [ %sub63, %cond.true62 ], [ %sub66, %cond.false64 ], !dbg !7556
  %conv69 = sext i32 %cond68 to i64, !dbg !7557
  %arrayidx70 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 3, !dbg !7558
  %59 = load i64, i64* %arrayidx70, align 8, !dbg !7559
  %add71 = add i64 %59, %conv69, !dbg !7559
  store i64 %add71, i64* %arrayidx70, align 8, !dbg !7559
  br label %for.inc, !dbg !7560

for.inc:                                          ; preds = %cond.end67
  %60 = load i32, i32* %i, align 4, !dbg !7561
  %inc = add nsw i32 %60, 1, !dbg !7561
  store i32 %inc, i32* %i, align 4, !dbg !7561
  br label %for.cond, !dbg !7563, !llvm.loop !7564

for.end:                                          ; preds = %for.cond
  %arrayidx72 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 0, !dbg !7566
  %61 = load i64, i64* %arrayidx72, align 16, !dbg !7566
  %arrayidx73 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 1, !dbg !7567
  %62 = load i64, i64* %arrayidx73, align 8, !dbg !7567
  %add74 = add i64 %61, %62, !dbg !7568
  %arrayidx75 = getelementptr inbounds [4 x i64], [4 x i64]* %score, i64 0, i64 0, !dbg !7569
  store i64 %add74, i64* %arrayidx75, align 16, !dbg !7570
  %arrayidx76 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 0, !dbg !7571
  %63 = load i64, i64* %arrayidx76, align 16, !dbg !7571
  %arrayidx77 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 3, !dbg !7572
  %64 = load i64, i64* %arrayidx77, align 8, !dbg !7572
  %add78 = add i64 %63, %64, !dbg !7573
  %arrayidx79 = getelementptr inbounds [4 x i64], [4 x i64]* %score, i64 0, i64 1, !dbg !7574
  store i64 %add78, i64* %arrayidx79, align 8, !dbg !7575
  %arrayidx80 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 1, !dbg !7576
  %65 = load i64, i64* %arrayidx80, align 8, !dbg !7576
  %arrayidx81 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 3, !dbg !7577
  %66 = load i64, i64* %arrayidx81, align 8, !dbg !7577
  %add82 = add i64 %65, %66, !dbg !7578
  %arrayidx83 = getelementptr inbounds [4 x i64], [4 x i64]* %score, i64 0, i64 2, !dbg !7579
  store i64 %add82, i64* %arrayidx83, align 16, !dbg !7580
  %arrayidx84 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 2, !dbg !7581
  %67 = load i64, i64* %arrayidx84, align 16, !dbg !7581
  %arrayidx85 = getelementptr inbounds [4 x i64], [4 x i64]* %sum, i64 0, i64 3, !dbg !7582
  %68 = load i64, i64* %arrayidx85, align 8, !dbg !7582
  %add86 = add i64 %67, %68, !dbg !7583
  %arrayidx87 = getelementptr inbounds [4 x i64], [4 x i64]* %score, i64 0, i64 3, !dbg !7584
  store i64 %add86, i64* %arrayidx87, align 8, !dbg !7585
  store i32 1, i32* %i, align 4, !dbg !7586
  br label %for.cond88, !dbg !7588

for.cond88:                                       ; preds = %for.inc98, %for.end
  %69 = load i32, i32* %i, align 4, !dbg !7589
  %cmp89 = icmp slt i32 %69, 3, !dbg !7592
  br i1 %cmp89, label %for.body91, label %for.end100, !dbg !7593

for.body91:                                       ; preds = %for.cond88
  %70 = load i32, i32* %i, align 4, !dbg !7594
  %idxprom92 = sext i32 %70 to i64, !dbg !7596
  %arrayidx93 = getelementptr inbounds [4 x i64], [4 x i64]* %score, i64 0, i64 %idxprom92, !dbg !7596
  %71 = load i64, i64* %arrayidx93, align 8, !dbg !7596
  %72 = load i32, i32* %best, align 4, !dbg !7597
  %idxprom94 = zext i32 %72 to i64, !dbg !7598
  %arrayidx95 = getelementptr inbounds [4 x i64], [4 x i64]* %score, i64 0, i64 %idxprom94, !dbg !7598
  %73 = load i64, i64* %arrayidx95, align 8, !dbg !7598
  %cmp96 = icmp ult i64 %71, %73, !dbg !7599
  br i1 %cmp96, label %if.then, label %if.end, !dbg !7600

if.then:                                          ; preds = %for.body91
  %74 = load i32, i32* %i, align 4, !dbg !7601
  store i32 %74, i32* %best, align 4, !dbg !7602
  br label %if.end, !dbg !7603

if.end:                                           ; preds = %if.then, %for.body91
  br label %for.inc98, !dbg !7604

for.inc98:                                        ; preds = %if.end
  %75 = load i32, i32* %i, align 4, !dbg !7606
  %inc99 = add nsw i32 %75, 1, !dbg !7606
  store i32 %inc99, i32* %i, align 4, !dbg !7606
  br label %for.cond88, !dbg !7608, !llvm.loop !7609

for.end100:                                       ; preds = %for.cond88
  %76 = load i32, i32* %best, align 4, !dbg !7611
  ret i32 %76, !dbg !7612
}

; Function Attrs: nounwind uwtable
define internal void @code_matrix_coeffs(%struct.MLPEncodeContext* %ctx, i32 %mat) #1 !dbg !7613 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %mat.addr = alloca i32, align 4
  %dp = alloca %struct.DecodingParams*, align 8
  %mp = alloca %struct.MatrixParams*, align 8
  %coeff_mask = alloca i32, align 4
  %channel = alloca i32, align 4
  %bits = alloca i32, align 4
  %coeff = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !7614, metadata !1746), !dbg !7615
  store i32 %mat, i32* %mat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mat.addr, metadata !7616, metadata !1746), !dbg !7617
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !7618, metadata !1746), !dbg !7619
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7620
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 52, !dbg !7621
  %1 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !7621
  store %struct.DecodingParams* %1, %struct.DecodingParams** %dp, align 8, !dbg !7619
  call void @llvm.dbg.declare(metadata %struct.MatrixParams** %mp, metadata !7622, metadata !1746), !dbg !7623
  %2 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !7624
  %matrix_params = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %2, i32 0, i32 2, !dbg !7625
  store %struct.MatrixParams* %matrix_params, %struct.MatrixParams** %mp, align 8, !dbg !7623
  call void @llvm.dbg.declare(metadata i32* %coeff_mask, metadata !7626, metadata !1746), !dbg !7627
  store i32 0, i32* %coeff_mask, align 4, !dbg !7627
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !7628, metadata !1746), !dbg !7629
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !7630, metadata !1746), !dbg !7631
  store i32 0, i32* %channel, align 4, !dbg !7632
  br label %for.cond, !dbg !7634

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %channel, align 4, !dbg !7635
  %4 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7638
  %num_channels = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %4, i32 0, i32 2, !dbg !7639
  %5 = load i32, i32* %num_channels, align 4, !dbg !7639
  %cmp = icmp ult i32 %3, %5, !dbg !7640
  br i1 %cmp, label %for.body, label %for.end, !dbg !7641

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %coeff, metadata !7642, metadata !1746), !dbg !7644
  %6 = load i32, i32* %channel, align 4, !dbg !7645
  %idxprom = zext i32 %6 to i64, !dbg !7646
  %7 = load i32, i32* %mat.addr, align 4, !dbg !7647
  %idxprom1 = zext i32 %7 to i64, !dbg !7646
  %8 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !7646
  %coeff2 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %8, i32 0, i32 3, !dbg !7648
  %arrayidx = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff2, i64 0, i64 %idxprom1, !dbg !7646
  %arrayidx3 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx, i64 0, i64 %idxprom, !dbg !7646
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !7646
  store i32 %9, i32* %coeff, align 4, !dbg !7644
  %10 = load i32, i32* %coeff, align 4, !dbg !7649
  %11 = load i32, i32* %coeff_mask, align 4, !dbg !7650
  %or = or i32 %11, %10, !dbg !7650
  store i32 %or, i32* %coeff_mask, align 4, !dbg !7650
  br label %for.inc, !dbg !7651

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %channel, align 4, !dbg !7652
  %inc = add i32 %12, 1, !dbg !7652
  store i32 %inc, i32* %channel, align 4, !dbg !7652
  br label %for.cond, !dbg !7654, !llvm.loop !7655

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %bits, align 4, !dbg !7657
  br label %for.cond4, !dbg !7659

for.cond4:                                        ; preds = %for.inc7, %for.end
  %13 = load i32, i32* %bits, align 4, !dbg !7660
  %cmp5 = icmp ult i32 %13, 14, !dbg !7663
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !7664

land.rhs:                                         ; preds = %for.cond4
  %14 = load i32, i32* %coeff_mask, align 4, !dbg !7665
  %15 = load i32, i32* %bits, align 4, !dbg !7667
  %shl = shl i32 1, %15, !dbg !7668
  %and = and i32 %14, %shl, !dbg !7669
  %tobool = icmp ne i32 %and, 0, !dbg !7670
  %lnot = xor i1 %tobool, true, !dbg !7670
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond4
  %16 = phi i1 [ false, %for.cond4 ], [ %lnot, %land.rhs ]
  br i1 %16, label %for.body6, label %for.end9, !dbg !7671

for.body6:                                        ; preds = %land.end
  br label %for.inc7, !dbg !7673

for.inc7:                                         ; preds = %for.body6
  %17 = load i32, i32* %bits, align 4, !dbg !7675
  %inc8 = add i32 %17, 1, !dbg !7675
  store i32 %inc8, i32* %bits, align 4, !dbg !7675
  br label %for.cond4, !dbg !7677, !llvm.loop !7678

for.end9:                                         ; preds = %land.end
  %18 = load i32, i32* %bits, align 4, !dbg !7680
  %sub = sub i32 14, %18, !dbg !7681
  %conv = trunc i32 %sub to i8, !dbg !7682
  %19 = load i32, i32* %mat.addr, align 4, !dbg !7683
  %idxprom10 = zext i32 %19 to i64, !dbg !7684
  %20 = load %struct.MatrixParams*, %struct.MatrixParams** %mp, align 8, !dbg !7684
  %fbits = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %20, i32 0, i32 4, !dbg !7685
  %arrayidx11 = getelementptr inbounds [8 x i8], [8 x i8]* %fbits, i64 0, i64 %idxprom10, !dbg !7684
  store i8 %conv, i8* %arrayidx11, align 1, !dbg !7686
  ret void, !dbg !7687
}

; Function Attrs: nounwind uwtable
define internal void @set_filter_params(%struct.MLPEncodeContext* %ctx, i32 %channel, i32 %filter, i32 %clear_filter) #1 !dbg !7688 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %channel.addr = alloca i32, align 4
  %filter.addr = alloca i32, align 4
  %clear_filter.addr = alloca i32, align 4
  %cp = alloca %struct.ChannelParams*, align 8
  %fp = alloca %struct.FilterParams*, align 8
  %max_order = alloca i32, align 4
  %sample_buffer = alloca i32*, align 8
  %coefs = alloca [32 x [32 x i32]], align 16
  %lpc_samples = alloca i32*, align 8
  %fcoeff = alloca i32*, align 8
  %shift = alloca [8 x i32], align 16
  %i = alloca i32, align 4
  %order19 = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !7691, metadata !1746), !dbg !7692
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7693, metadata !1746), !dbg !7694
  store i32 %filter, i32* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr, metadata !7695, metadata !1746), !dbg !7696
  store i32 %clear_filter, i32* %clear_filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clear_filter.addr, metadata !7697, metadata !1746), !dbg !7698
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %cp, metadata !7699, metadata !1746), !dbg !7700
  %0 = load i32, i32* %channel.addr, align 4, !dbg !7701
  %idxprom = zext i32 %0 to i64, !dbg !7702
  %1 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7702
  %cur_channel_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %1, i32 0, i32 51, !dbg !7703
  %2 = load %struct.ChannelParams*, %struct.ChannelParams** %cur_channel_params, align 8, !dbg !7703
  %arrayidx = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %2, i64 %idxprom, !dbg !7702
  store %struct.ChannelParams* %arrayidx, %struct.ChannelParams** %cp, align 8, !dbg !7700
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %fp, metadata !7704, metadata !1746), !dbg !7705
  %3 = load i32, i32* %filter.addr, align 4, !dbg !7706
  %idxprom1 = zext i32 %3 to i64, !dbg !7707
  %4 = load %struct.ChannelParams*, %struct.ChannelParams** %cp, align 8, !dbg !7707
  %filter_params = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %4, i32 0, i32 0, !dbg !7708
  %arrayidx2 = getelementptr inbounds [2 x %struct.FilterParams], [2 x %struct.FilterParams]* %filter_params, i64 0, i64 %idxprom1, !dbg !7707
  store %struct.FilterParams* %arrayidx2, %struct.FilterParams** %fp, align 8, !dbg !7705
  %5 = load i32, i32* %filter.addr, align 4, !dbg !7709
  %cmp = icmp eq i32 %5, 1, !dbg !7711
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !7712

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7713
  %substream_info = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %6, i32 0, i32 7, !dbg !7715
  %7 = load i32, i32* %substream_info, align 8, !dbg !7715
  %and = and i32 %7, 2, !dbg !7716
  %tobool = icmp ne i32 %and, 0, !dbg !7716
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7717

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %8 = load i32, i32* %clear_filter.addr, align 4, !dbg !7718
  %tobool3 = icmp ne i32 %8, 0, !dbg !7718
  br i1 %tobool3, label %if.then, label %if.else, !dbg !7719

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %9 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !7721
  %order = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %9, i32 0, i32 0, !dbg !7723
  store i8 0, i8* %order, align 4, !dbg !7724
  br label %if.end47, !dbg !7725

if.else:                                          ; preds = %lor.lhs.false
  %10 = load i32, i32* %filter.addr, align 4, !dbg !7726
  %cmp4 = icmp eq i32 %10, 1, !dbg !7729
  br i1 %cmp4, label %if.then5, label %if.else7, !dbg !7726

if.then5:                                         ; preds = %if.else
  %11 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !7730
  %order6 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %11, i32 0, i32 0, !dbg !7732
  store i8 0, i8* %order6, align 4, !dbg !7733
  br label %if.end46, !dbg !7734

if.else7:                                         ; preds = %if.else
  %12 = load i32, i32* %filter.addr, align 4, !dbg !7735
  %cmp8 = icmp eq i32 %12, 0, !dbg !7738
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !7735

if.then9:                                         ; preds = %if.else7
  call void @llvm.dbg.declare(metadata i32* %max_order, metadata !7739, metadata !1746), !dbg !7741
  %13 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7742
  %substream_info10 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %13, i32 0, i32 7, !dbg !7743
  %14 = load i32, i32* %substream_info10, align 8, !dbg !7743
  %and11 = and i32 %14, 2, !dbg !7744
  %tobool12 = icmp ne i32 %and11, 0, !dbg !7745
  %cond = select i1 %tobool12, i32 4, i32 8, !dbg !7745
  store i32 %cond, i32* %max_order, align 4, !dbg !7741
  call void @llvm.dbg.declare(metadata i32** %sample_buffer, metadata !7746, metadata !1746), !dbg !7747
  %15 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7748
  %sample_buffer13 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %15, i32 0, i32 15, !dbg !7749
  %16 = load i32*, i32** %sample_buffer13, align 8, !dbg !7749
  %17 = load i32, i32* %channel.addr, align 4, !dbg !7750
  %idx.ext = zext i32 %17 to i64, !dbg !7751
  %add.ptr = getelementptr inbounds i32, i32* %16, i64 %idx.ext, !dbg !7751
  store i32* %add.ptr, i32** %sample_buffer, align 8, !dbg !7747
  call void @llvm.dbg.declare(metadata [32 x [32 x i32]]* %coefs, metadata !7752, metadata !1746), !dbg !7754
  call void @llvm.dbg.declare(metadata i32** %lpc_samples, metadata !7755, metadata !1746), !dbg !7756
  %18 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7757
  %lpc_sample_buffer = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %18, i32 0, i32 18, !dbg !7758
  %19 = load i32*, i32** %lpc_sample_buffer, align 16, !dbg !7758
  store i32* %19, i32** %lpc_samples, align 8, !dbg !7756
  call void @llvm.dbg.declare(metadata i32** %fcoeff, metadata !7759, metadata !1746), !dbg !7760
  %20 = load i32, i32* %filter.addr, align 4, !dbg !7761
  %idxprom14 = zext i32 %20 to i64, !dbg !7762
  %21 = load i32, i32* %channel.addr, align 4, !dbg !7763
  %idxprom15 = zext i32 %21 to i64, !dbg !7762
  %22 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7762
  %cur_channel_params16 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %22, i32 0, i32 51, !dbg !7764
  %23 = load %struct.ChannelParams*, %struct.ChannelParams** %cur_channel_params16, align 8, !dbg !7764
  %arrayidx17 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %23, i64 %idxprom15, !dbg !7762
  %coeff = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %arrayidx17, i32 0, i32 1, !dbg !7765
  %arrayidx18 = getelementptr inbounds [2 x [8 x i32]], [2 x [8 x i32]]* %coeff, i64 0, i64 %idxprom14, !dbg !7762
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx18, i32 0, i32 0, !dbg !7762
  store i32* %arraydecay, i32** %fcoeff, align 8, !dbg !7760
  call void @llvm.dbg.declare(metadata [8 x i32]* %shift, metadata !7766, metadata !1746), !dbg !7767
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7768, metadata !1746), !dbg !7769
  call void @llvm.dbg.declare(metadata i32* %order19, metadata !7770, metadata !1746), !dbg !7771
  store i32 0, i32* %i, align 4, !dbg !7772
  br label %for.cond, !dbg !7774

for.cond:                                         ; preds = %for.inc, %if.then9
  %24 = load i32, i32* %i, align 4, !dbg !7775
  %25 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7778
  %number_of_samples = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %25, i32 0, i32 57, !dbg !7779
  %26 = load i32, i32* %number_of_samples, align 8, !dbg !7779
  %cmp20 = icmp ult i32 %24, %26, !dbg !7780
  br i1 %cmp20, label %for.body, label %for.end, !dbg !7781

for.body:                                         ; preds = %for.cond
  %27 = load i32*, i32** %sample_buffer, align 8, !dbg !7782
  %28 = load i32, i32* %27, align 4, !dbg !7784
  %29 = load i32*, i32** %lpc_samples, align 8, !dbg !7785
  %incdec.ptr = getelementptr inbounds i32, i32* %29, i32 1, !dbg !7785
  store i32* %incdec.ptr, i32** %lpc_samples, align 8, !dbg !7785
  store i32 %28, i32* %29, align 4, !dbg !7786
  %30 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7787
  %num_channels = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %30, i32 0, i32 2, !dbg !7788
  %31 = load i32, i32* %num_channels, align 4, !dbg !7788
  %32 = load i32*, i32** %sample_buffer, align 8, !dbg !7789
  %idx.ext21 = sext i32 %31 to i64, !dbg !7789
  %add.ptr22 = getelementptr inbounds i32, i32* %32, i64 %idx.ext21, !dbg !7789
  store i32* %add.ptr22, i32** %sample_buffer, align 8, !dbg !7789
  br label %for.inc, !dbg !7790

for.inc:                                          ; preds = %for.body
  %33 = load i32, i32* %i, align 4, !dbg !7791
  %inc = add i32 %33, 1, !dbg !7791
  store i32 %inc, i32* %i, align 4, !dbg !7791
  br label %for.cond, !dbg !7793, !llvm.loop !7794

for.end:                                          ; preds = %for.cond
  %34 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7796
  %lpc_ctx = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %34, i32 0, i32 66, !dbg !7797
  %35 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7798
  %lpc_sample_buffer23 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %35, i32 0, i32 18, !dbg !7799
  %36 = load i32*, i32** %lpc_sample_buffer23, align 16, !dbg !7799
  %37 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7800
  %number_of_samples24 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %37, i32 0, i32 57, !dbg !7801
  %38 = load i32, i32* %number_of_samples24, align 8, !dbg !7801
  %39 = load i32, i32* %max_order, align 4, !dbg !7802
  %arraydecay25 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %coefs, i32 0, i32 0, !dbg !7803
  %arraydecay26 = getelementptr inbounds [8 x i32], [8 x i32]* %shift, i32 0, i32 0, !dbg !7804
  %call = call i32 @ff_lpc_calc_coefs(%struct.LPCContext* %lpc_ctx, i32* %36, i32 %38, i32 1, i32 %39, i32 11, [32 x i32]* %arraydecay25, i32* %arraydecay26, i32 2, i32 0, i32 0, i32 8, i32 15, i32 8), !dbg !7805
  store i32 %call, i32* %order19, align 4, !dbg !7806
  %40 = load i32, i32* %order19, align 4, !dbg !7807
  %conv = trunc i32 %40 to i8, !dbg !7807
  %41 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !7808
  %order27 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %41, i32 0, i32 0, !dbg !7809
  store i8 %conv, i8* %order27, align 4, !dbg !7810
  %42 = load i32, i32* %order19, align 4, !dbg !7811
  %sub = sub nsw i32 %42, 1, !dbg !7812
  %idxprom28 = sext i32 %sub to i64, !dbg !7813
  %arrayidx29 = getelementptr inbounds [8 x i32], [8 x i32]* %shift, i64 0, i64 %idxprom28, !dbg !7813
  %43 = load i32, i32* %arrayidx29, align 4, !dbg !7813
  %conv30 = trunc i32 %43 to i8, !dbg !7813
  %44 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !7814
  %shift31 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %44, i32 0, i32 1, !dbg !7815
  store i8 %conv30, i8* %shift31, align 1, !dbg !7816
  store i32 0, i32* %i, align 4, !dbg !7817
  br label %for.cond32, !dbg !7819

for.cond32:                                       ; preds = %for.inc43, %for.end
  %45 = load i32, i32* %i, align 4, !dbg !7820
  %46 = load i32, i32* %order19, align 4, !dbg !7823
  %cmp33 = icmp ult i32 %45, %46, !dbg !7824
  br i1 %cmp33, label %for.body35, label %for.end45, !dbg !7825

for.body35:                                       ; preds = %for.cond32
  %47 = load i32, i32* %i, align 4, !dbg !7826
  %idxprom36 = zext i32 %47 to i64, !dbg !7827
  %48 = load i32, i32* %order19, align 4, !dbg !7828
  %sub37 = sub nsw i32 %48, 1, !dbg !7829
  %idxprom38 = sext i32 %sub37 to i64, !dbg !7827
  %arrayidx39 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %coefs, i64 0, i64 %idxprom38, !dbg !7827
  %arrayidx40 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx39, i64 0, i64 %idxprom36, !dbg !7827
  %49 = load i32, i32* %arrayidx40, align 4, !dbg !7827
  %50 = load i32, i32* %i, align 4, !dbg !7830
  %idxprom41 = zext i32 %50 to i64, !dbg !7831
  %51 = load i32*, i32** %fcoeff, align 8, !dbg !7831
  %arrayidx42 = getelementptr inbounds i32, i32* %51, i64 %idxprom41, !dbg !7831
  store i32 %49, i32* %arrayidx42, align 4, !dbg !7832
  br label %for.inc43, !dbg !7831

for.inc43:                                        ; preds = %for.body35
  %52 = load i32, i32* %i, align 4, !dbg !7833
  %inc44 = add i32 %52, 1, !dbg !7833
  store i32 %inc44, i32* %i, align 4, !dbg !7833
  br label %for.cond32, !dbg !7835, !llvm.loop !7836

for.end45:                                        ; preds = %for.cond32
  %53 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !7838
  %54 = load %struct.FilterParams*, %struct.FilterParams** %fp, align 8, !dbg !7839
  %55 = load i32*, i32** %fcoeff, align 8, !dbg !7840
  call void @code_filter_coeffs(%struct.MLPEncodeContext* %53, %struct.FilterParams* %54, i32* %55), !dbg !7841
  br label %if.end, !dbg !7842

if.end:                                           ; preds = %for.end45, %if.else7
  br label %if.end46

if.end46:                                         ; preds = %if.end, %if.then5
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then
  ret void, !dbg !7843
}

declare i32 @ff_lpc_calc_coefs(%struct.LPCContext*, i32*, i32, i32, i32, i32, [32 x i32]*, i32*, i32, i32, i32, i32, i32, i32) #3

; Function Attrs: nounwind uwtable
define internal void @code_filter_coeffs(%struct.MLPEncodeContext* %ctx, %struct.FilterParams* %fp, i32* %fcoeff) #1 !dbg !7844 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %fp.addr = alloca %struct.FilterParams*, align 8
  %fcoeff.addr = alloca i32*, align 8
  %min = alloca i32, align 4
  %max = alloca i32, align 4
  %bits = alloca i32, align 4
  %shift = alloca i32, align 4
  %coeff_mask = alloca i32, align 4
  %order = alloca i32, align 4
  %coeff = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !7847, metadata !1746), !dbg !7848
  store %struct.FilterParams* %fp, %struct.FilterParams** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %fp.addr, metadata !7849, metadata !1746), !dbg !7850
  store i32* %fcoeff, i32** %fcoeff.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fcoeff.addr, metadata !7851, metadata !1746), !dbg !7852
  call void @llvm.dbg.declare(metadata i32* %min, metadata !7853, metadata !1746), !dbg !7854
  store i32 2147483647, i32* %min, align 4, !dbg !7854
  call void @llvm.dbg.declare(metadata i32* %max, metadata !7855, metadata !1746), !dbg !7856
  store i32 -2147483648, i32* %max, align 4, !dbg !7856
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !7857, metadata !1746), !dbg !7858
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !7859, metadata !1746), !dbg !7860
  call void @llvm.dbg.declare(metadata i32* %coeff_mask, metadata !7861, metadata !1746), !dbg !7862
  store i32 0, i32* %coeff_mask, align 4, !dbg !7862
  call void @llvm.dbg.declare(metadata i32* %order, metadata !7863, metadata !1746), !dbg !7864
  store i32 0, i32* %order, align 4, !dbg !7865
  br label %for.cond, !dbg !7867

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %order, align 4, !dbg !7868
  %1 = load %struct.FilterParams*, %struct.FilterParams** %fp.addr, align 8, !dbg !7871
  %order1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %1, i32 0, i32 0, !dbg !7872
  %2 = load i8, i8* %order1, align 4, !dbg !7872
  %conv = zext i8 %2 to i32, !dbg !7871
  %cmp = icmp slt i32 %0, %conv, !dbg !7873
  br i1 %cmp, label %for.body, label %for.end, !dbg !7874

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %coeff, metadata !7875, metadata !1746), !dbg !7877
  %3 = load i32, i32* %order, align 4, !dbg !7878
  %idxprom = sext i32 %3 to i64, !dbg !7879
  %4 = load i32*, i32** %fcoeff.addr, align 8, !dbg !7879
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !7879
  %5 = load i32, i32* %arrayidx, align 4, !dbg !7879
  store i32 %5, i32* %coeff, align 4, !dbg !7877
  %6 = load i32, i32* %coeff, align 4, !dbg !7880
  %7 = load i32, i32* %min, align 4, !dbg !7882
  %cmp3 = icmp slt i32 %6, %7, !dbg !7883
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7884

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %coeff, align 4, !dbg !7885
  store i32 %8, i32* %min, align 4, !dbg !7886
  br label %if.end, !dbg !7887

if.end:                                           ; preds = %if.then, %for.body
  %9 = load i32, i32* %coeff, align 4, !dbg !7888
  %10 = load i32, i32* %max, align 4, !dbg !7890
  %cmp5 = icmp sgt i32 %9, %10, !dbg !7891
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !7892

if.then7:                                         ; preds = %if.end
  %11 = load i32, i32* %coeff, align 4, !dbg !7893
  store i32 %11, i32* %max, align 4, !dbg !7894
  br label %if.end8, !dbg !7895

if.end8:                                          ; preds = %if.then7, %if.end
  %12 = load i32, i32* %coeff, align 4, !dbg !7896
  %13 = load i32, i32* %coeff_mask, align 4, !dbg !7897
  %or = or i32 %13, %12, !dbg !7897
  store i32 %or, i32* %coeff_mask, align 4, !dbg !7897
  br label %for.inc, !dbg !7898

for.inc:                                          ; preds = %if.end8
  %14 = load i32, i32* %order, align 4, !dbg !7899
  %inc = add nsw i32 %14, 1, !dbg !7899
  store i32 %inc, i32* %order, align 4, !dbg !7899
  br label %for.cond, !dbg !7901, !llvm.loop !7902

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* %min, align 4, !dbg !7904
  %call = call i32 @number_sbits(i32 %15), !dbg !7905
  %16 = load i32, i32* %max, align 4, !dbg !7906
  %call9 = call i32 @number_sbits(i32 %16), !dbg !7907
  %cmp10 = icmp sgt i32 %call, %call9, !dbg !7909
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !7910

cond.true:                                        ; preds = %for.end
  %17 = load i32, i32* %min, align 4, !dbg !7911
  %call12 = call i32 @number_sbits(i32 %17), !dbg !7913
  br label %cond.end, !dbg !7914

cond.false:                                       ; preds = %for.end
  %18 = load i32, i32* %max, align 4, !dbg !7915
  %call13 = call i32 @number_sbits(i32 %18), !dbg !7917
  br label %cond.end, !dbg !7918

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call12, %cond.true ], [ %call13, %cond.false ], !dbg !7919
  store i32 %cond, i32* %bits, align 4, !dbg !7921
  store i32 0, i32* %shift, align 4, !dbg !7922
  br label %for.cond14, !dbg !7924

for.cond14:                                       ; preds = %for.inc20, %cond.end
  %19 = load i32, i32* %shift, align 4, !dbg !7925
  %cmp15 = icmp slt i32 %19, 7, !dbg !7928
  br i1 %cmp15, label %land.lhs.true, label %land.end, !dbg !7929

land.lhs.true:                                    ; preds = %for.cond14
  %20 = load i32, i32* %bits, align 4, !dbg !7930
  %21 = load i32, i32* %shift, align 4, !dbg !7932
  %add = add nsw i32 %20, %21, !dbg !7933
  %cmp17 = icmp slt i32 %add, 16, !dbg !7934
  br i1 %cmp17, label %land.rhs, label %land.end, !dbg !7935

land.rhs:                                         ; preds = %land.lhs.true
  %22 = load i32, i32* %coeff_mask, align 4, !dbg !7936
  %23 = load i32, i32* %shift, align 4, !dbg !7938
  %shl = shl i32 1, %23, !dbg !7939
  %and = and i32 %22, %shl, !dbg !7940
  %tobool = icmp ne i32 %and, 0, !dbg !7941
  %lnot = xor i1 %tobool, true, !dbg !7941
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %for.cond14
  %24 = phi i1 [ false, %land.lhs.true ], [ false, %for.cond14 ], [ %lnot, %land.rhs ]
  br i1 %24, label %for.body19, label %for.end22, !dbg !7942

for.body19:                                       ; preds = %land.end
  br label %for.inc20, !dbg !7944

for.inc20:                                        ; preds = %for.body19
  %25 = load i32, i32* %shift, align 4, !dbg !7946
  %inc21 = add nsw i32 %25, 1, !dbg !7946
  store i32 %inc21, i32* %shift, align 4, !dbg !7946
  br label %for.cond14, !dbg !7948, !llvm.loop !7949

for.end22:                                        ; preds = %land.end
  %26 = load i32, i32* %bits, align 4, !dbg !7951
  %27 = load %struct.FilterParams*, %struct.FilterParams** %fp.addr, align 8, !dbg !7952
  %coeff_bits = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %27, i32 0, i32 3, !dbg !7953
  store i32 %26, i32* %coeff_bits, align 4, !dbg !7954
  %28 = load i32, i32* %shift, align 4, !dbg !7955
  %29 = load %struct.FilterParams*, %struct.FilterParams** %fp.addr, align 8, !dbg !7956
  %coeff_shift = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %29, i32 0, i32 4, !dbg !7957
  store i32 %28, i32* %coeff_shift, align 4, !dbg !7958
  ret void, !dbg !7959
}

; Function Attrs: nounwind uwtable
define internal void @copy_matrix_params(%struct.MatrixParams* %dst, %struct.MatrixParams* %src) #1 !dbg !7960 {
entry:
  %dst.addr = alloca %struct.MatrixParams*, align 8
  %src.addr = alloca %struct.MatrixParams*, align 8
  %channel = alloca i32, align 4
  %count3 = alloca i32, align 4
  store %struct.MatrixParams* %dst, %struct.MatrixParams** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatrixParams** %dst.addr, metadata !7963, metadata !1746), !dbg !7964
  store %struct.MatrixParams* %src, %struct.MatrixParams** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatrixParams** %src.addr, metadata !7965, metadata !1746), !dbg !7966
  %0 = load %struct.MatrixParams*, %struct.MatrixParams** %src.addr, align 8, !dbg !7967
  %count = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %0, i32 0, i32 0, !dbg !7968
  %1 = load i8, i8* %count, align 4, !dbg !7968
  %2 = load %struct.MatrixParams*, %struct.MatrixParams** %dst.addr, align 8, !dbg !7969
  %count1 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %2, i32 0, i32 0, !dbg !7970
  store i8 %1, i8* %count1, align 4, !dbg !7971
  %3 = load %struct.MatrixParams*, %struct.MatrixParams** %dst.addr, align 8, !dbg !7972
  %count2 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %3, i32 0, i32 0, !dbg !7974
  %4 = load i8, i8* %count2, align 4, !dbg !7974
  %tobool = icmp ne i8 %4, 0, !dbg !7972
  br i1 %tobool, label %if.then, label %if.end, !dbg !7975

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !7976, metadata !1746), !dbg !7978
  call void @llvm.dbg.declare(metadata i32* %count3, metadata !7979, metadata !1746), !dbg !7980
  store i32 0, i32* %channel, align 4, !dbg !7981
  br label %for.cond, !dbg !7983

for.cond:                                         ; preds = %for.inc24, %if.then
  %5 = load i32, i32* %channel, align 4, !dbg !7984
  %cmp = icmp ult i32 %5, 8, !dbg !7987
  br i1 %cmp, label %for.body, label %for.end26, !dbg !7988

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %channel, align 4, !dbg !7989
  %idxprom = zext i32 %6 to i64, !dbg !7991
  %7 = load %struct.MatrixParams*, %struct.MatrixParams** %src.addr, align 8, !dbg !7991
  %fbits = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %7, i32 0, i32 4, !dbg !7992
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %fbits, i64 0, i64 %idxprom, !dbg !7991
  %8 = load i8, i8* %arrayidx, align 1, !dbg !7991
  %9 = load i32, i32* %channel, align 4, !dbg !7993
  %idxprom4 = zext i32 %9 to i64, !dbg !7994
  %10 = load %struct.MatrixParams*, %struct.MatrixParams** %dst.addr, align 8, !dbg !7994
  %fbits5 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %10, i32 0, i32 4, !dbg !7995
  %arrayidx6 = getelementptr inbounds [8 x i8], [8 x i8]* %fbits5, i64 0, i64 %idxprom4, !dbg !7994
  store i8 %8, i8* %arrayidx6, align 1, !dbg !7996
  %11 = load i32, i32* %channel, align 4, !dbg !7997
  %idxprom7 = zext i32 %11 to i64, !dbg !7998
  %12 = load %struct.MatrixParams*, %struct.MatrixParams** %src.addr, align 8, !dbg !7998
  %shift = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %12, i32 0, i32 5, !dbg !7999
  %arrayidx8 = getelementptr inbounds [8 x i8], [8 x i8]* %shift, i64 0, i64 %idxprom7, !dbg !7998
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !7998
  %14 = load i32, i32* %channel, align 4, !dbg !8000
  %idxprom9 = zext i32 %14 to i64, !dbg !8001
  %15 = load %struct.MatrixParams*, %struct.MatrixParams** %dst.addr, align 8, !dbg !8001
  %shift10 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %15, i32 0, i32 5, !dbg !8002
  %arrayidx11 = getelementptr inbounds [8 x i8], [8 x i8]* %shift10, i64 0, i64 %idxprom9, !dbg !8001
  store i8 %13, i8* %arrayidx11, align 1, !dbg !8003
  store i32 0, i32* %count3, align 4, !dbg !8004
  br label %for.cond12, !dbg !8006

for.cond12:                                       ; preds = %for.inc, %for.body
  %16 = load i32, i32* %count3, align 4, !dbg !8007
  %cmp13 = icmp ult i32 %16, 8, !dbg !8010
  br i1 %cmp13, label %for.body14, label %for.end, !dbg !8011

for.body14:                                       ; preds = %for.cond12
  %17 = load i32, i32* %channel, align 4, !dbg !8012
  %idxprom15 = zext i32 %17 to i64, !dbg !8013
  %18 = load i32, i32* %count3, align 4, !dbg !8014
  %idxprom16 = zext i32 %18 to i64, !dbg !8013
  %19 = load %struct.MatrixParams*, %struct.MatrixParams** %src.addr, align 8, !dbg !8013
  %coeff = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %19, i32 0, i32 3, !dbg !8015
  %arrayidx17 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff, i64 0, i64 %idxprom16, !dbg !8013
  %arrayidx18 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx17, i64 0, i64 %idxprom15, !dbg !8013
  %20 = load i32, i32* %arrayidx18, align 4, !dbg !8013
  %21 = load i32, i32* %channel, align 4, !dbg !8016
  %idxprom19 = zext i32 %21 to i64, !dbg !8017
  %22 = load i32, i32* %count3, align 4, !dbg !8018
  %idxprom20 = zext i32 %22 to i64, !dbg !8017
  %23 = load %struct.MatrixParams*, %struct.MatrixParams** %dst.addr, align 8, !dbg !8017
  %coeff21 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %23, i32 0, i32 3, !dbg !8019
  %arrayidx22 = getelementptr inbounds [8 x [10 x i32]], [8 x [10 x i32]]* %coeff21, i64 0, i64 %idxprom20, !dbg !8017
  %arrayidx23 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx22, i64 0, i64 %idxprom19, !dbg !8017
  store i32 %20, i32* %arrayidx23, align 4, !dbg !8020
  br label %for.inc, !dbg !8017

for.inc:                                          ; preds = %for.body14
  %24 = load i32, i32* %count3, align 4, !dbg !8021
  %inc = add i32 %24, 1, !dbg !8021
  store i32 %inc, i32* %count3, align 4, !dbg !8021
  br label %for.cond12, !dbg !8023, !llvm.loop !8024

for.end:                                          ; preds = %for.cond12
  br label %for.inc24, !dbg !8026

for.inc24:                                        ; preds = %for.end
  %25 = load i32, i32* %channel, align 4, !dbg !8027
  %inc25 = add i32 %25, 1, !dbg !8027
  store i32 %inc25, i32* %channel, align 4, !dbg !8027
  br label %for.cond, !dbg !8029, !llvm.loop !8030

for.end26:                                        ; preds = %for.cond
  store i32 0, i32* %count3, align 4, !dbg !8032
  br label %for.cond27, !dbg !8034

for.cond27:                                       ; preds = %for.inc35, %for.end26
  %26 = load i32, i32* %count3, align 4, !dbg !8035
  %cmp28 = icmp ult i32 %26, 8, !dbg !8038
  br i1 %cmp28, label %for.body29, label %for.end37, !dbg !8039

for.body29:                                       ; preds = %for.cond27
  %27 = load i32, i32* %count3, align 4, !dbg !8040
  %idxprom30 = zext i32 %27 to i64, !dbg !8041
  %28 = load %struct.MatrixParams*, %struct.MatrixParams** %src.addr, align 8, !dbg !8041
  %outch = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %28, i32 0, i32 1, !dbg !8042
  %arrayidx31 = getelementptr inbounds [8 x i8], [8 x i8]* %outch, i64 0, i64 %idxprom30, !dbg !8041
  %29 = load i8, i8* %arrayidx31, align 1, !dbg !8041
  %30 = load i32, i32* %count3, align 4, !dbg !8043
  %idxprom32 = zext i32 %30 to i64, !dbg !8044
  %31 = load %struct.MatrixParams*, %struct.MatrixParams** %dst.addr, align 8, !dbg !8044
  %outch33 = getelementptr inbounds %struct.MatrixParams, %struct.MatrixParams* %31, i32 0, i32 1, !dbg !8045
  %arrayidx34 = getelementptr inbounds [8 x i8], [8 x i8]* %outch33, i64 0, i64 %idxprom32, !dbg !8044
  store i8 %29, i8* %arrayidx34, align 1, !dbg !8046
  br label %for.inc35, !dbg !8044

for.inc35:                                        ; preds = %for.body29
  %32 = load i32, i32* %count3, align 4, !dbg !8047
  %inc36 = add i32 %32, 1, !dbg !8047
  store i32 %inc36, i32* %count3, align 4, !dbg !8047
  br label %for.cond27, !dbg !8049, !llvm.loop !8050

for.end37:                                        ; preds = %for.cond27
  br label %if.end, !dbg !8052

if.end:                                           ; preds = %for.end37, %entry
  ret void, !dbg !8053
}

; Function Attrs: nounwind uwtable
define internal void @copy_filter_params(%struct.ChannelParams* %dst_cp, %struct.ChannelParams* %src_cp, i32 %filter) #1 !dbg !8054 {
entry:
  %dst_cp.addr = alloca %struct.ChannelParams*, align 8
  %src_cp.addr = alloca %struct.ChannelParams*, align 8
  %filter.addr = alloca i32, align 4
  %dst = alloca %struct.FilterParams*, align 8
  %src = alloca %struct.FilterParams*, align 8
  %order = alloca i32, align 4
  store %struct.ChannelParams* %dst_cp, %struct.ChannelParams** %dst_cp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %dst_cp.addr, metadata !8057, metadata !1746), !dbg !8058
  store %struct.ChannelParams* %src_cp, %struct.ChannelParams** %src_cp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelParams** %src_cp.addr, metadata !8059, metadata !1746), !dbg !8060
  store i32 %filter, i32* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr, metadata !8061, metadata !1746), !dbg !8062
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %dst, metadata !8063, metadata !1746), !dbg !8064
  %0 = load i32, i32* %filter.addr, align 4, !dbg !8065
  %idxprom = sext i32 %0 to i64, !dbg !8066
  %1 = load %struct.ChannelParams*, %struct.ChannelParams** %dst_cp.addr, align 8, !dbg !8066
  %filter_params = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %1, i32 0, i32 0, !dbg !8067
  %arrayidx = getelementptr inbounds [2 x %struct.FilterParams], [2 x %struct.FilterParams]* %filter_params, i64 0, i64 %idxprom, !dbg !8066
  store %struct.FilterParams* %arrayidx, %struct.FilterParams** %dst, align 8, !dbg !8064
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %src, metadata !8068, metadata !1746), !dbg !8069
  %2 = load i32, i32* %filter.addr, align 4, !dbg !8070
  %idxprom1 = sext i32 %2 to i64, !dbg !8071
  %3 = load %struct.ChannelParams*, %struct.ChannelParams** %src_cp.addr, align 8, !dbg !8071
  %filter_params2 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %3, i32 0, i32 0, !dbg !8072
  %arrayidx3 = getelementptr inbounds [2 x %struct.FilterParams], [2 x %struct.FilterParams]* %filter_params2, i64 0, i64 %idxprom1, !dbg !8071
  store %struct.FilterParams* %arrayidx3, %struct.FilterParams** %src, align 8, !dbg !8069
  call void @llvm.dbg.declare(metadata i32* %order, metadata !8073, metadata !1746), !dbg !8074
  %4 = load %struct.FilterParams*, %struct.FilterParams** %src, align 8, !dbg !8075
  %order4 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %4, i32 0, i32 0, !dbg !8076
  %5 = load i8, i8* %order4, align 4, !dbg !8076
  %6 = load %struct.FilterParams*, %struct.FilterParams** %dst, align 8, !dbg !8077
  %order5 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 0, !dbg !8078
  store i8 %5, i8* %order5, align 4, !dbg !8079
  %7 = load %struct.FilterParams*, %struct.FilterParams** %dst, align 8, !dbg !8080
  %order6 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %7, i32 0, i32 0, !dbg !8082
  %8 = load i8, i8* %order6, align 4, !dbg !8082
  %tobool = icmp ne i8 %8, 0, !dbg !8080
  br i1 %tobool, label %if.then, label %if.end, !dbg !8083

if.then:                                          ; preds = %entry
  %9 = load %struct.FilterParams*, %struct.FilterParams** %src, align 8, !dbg !8084
  %shift = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %9, i32 0, i32 1, !dbg !8086
  %10 = load i8, i8* %shift, align 1, !dbg !8086
  %11 = load %struct.FilterParams*, %struct.FilterParams** %dst, align 8, !dbg !8087
  %shift7 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %11, i32 0, i32 1, !dbg !8088
  store i8 %10, i8* %shift7, align 1, !dbg !8089
  %12 = load %struct.FilterParams*, %struct.FilterParams** %src, align 8, !dbg !8090
  %coeff_shift = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %12, i32 0, i32 4, !dbg !8091
  %13 = load i32, i32* %coeff_shift, align 4, !dbg !8091
  %14 = load %struct.FilterParams*, %struct.FilterParams** %dst, align 8, !dbg !8092
  %coeff_shift8 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %14, i32 0, i32 4, !dbg !8093
  store i32 %13, i32* %coeff_shift8, align 4, !dbg !8094
  %15 = load %struct.FilterParams*, %struct.FilterParams** %src, align 8, !dbg !8095
  %coeff_bits = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %15, i32 0, i32 3, !dbg !8096
  %16 = load i32, i32* %coeff_bits, align 4, !dbg !8096
  %17 = load %struct.FilterParams*, %struct.FilterParams** %dst, align 8, !dbg !8097
  %coeff_bits9 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %17, i32 0, i32 3, !dbg !8098
  store i32 %16, i32* %coeff_bits9, align 4, !dbg !8099
  br label %if.end, !dbg !8100

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %order, align 4, !dbg !8101
  br label %for.cond, !dbg !8103

for.cond:                                         ; preds = %for.inc, %if.end
  %18 = load i32, i32* %order, align 4, !dbg !8104
  %19 = load %struct.FilterParams*, %struct.FilterParams** %dst, align 8, !dbg !8107
  %order10 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %19, i32 0, i32 0, !dbg !8108
  %20 = load i8, i8* %order10, align 4, !dbg !8108
  %conv = zext i8 %20 to i32, !dbg !8107
  %cmp = icmp ult i32 %18, %conv, !dbg !8109
  br i1 %cmp, label %for.body, label %for.end, !dbg !8110

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %order, align 4, !dbg !8111
  %idxprom12 = zext i32 %21 to i64, !dbg !8112
  %22 = load i32, i32* %filter.addr, align 4, !dbg !8113
  %idxprom13 = sext i32 %22 to i64, !dbg !8112
  %23 = load %struct.ChannelParams*, %struct.ChannelParams** %src_cp.addr, align 8, !dbg !8112
  %coeff = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %23, i32 0, i32 1, !dbg !8114
  %arrayidx14 = getelementptr inbounds [2 x [8 x i32]], [2 x [8 x i32]]* %coeff, i64 0, i64 %idxprom13, !dbg !8112
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx14, i64 0, i64 %idxprom12, !dbg !8112
  %24 = load i32, i32* %arrayidx15, align 4, !dbg !8112
  %25 = load i32, i32* %order, align 4, !dbg !8115
  %idxprom16 = zext i32 %25 to i64, !dbg !8116
  %26 = load i32, i32* %filter.addr, align 4, !dbg !8117
  %idxprom17 = sext i32 %26 to i64, !dbg !8116
  %27 = load %struct.ChannelParams*, %struct.ChannelParams** %dst_cp.addr, align 8, !dbg !8116
  %coeff18 = getelementptr inbounds %struct.ChannelParams, %struct.ChannelParams* %27, i32 0, i32 1, !dbg !8118
  %arrayidx19 = getelementptr inbounds [2 x [8 x i32]], [2 x [8 x i32]]* %coeff18, i64 0, i64 %idxprom17, !dbg !8116
  %arrayidx20 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx19, i64 0, i64 %idxprom16, !dbg !8116
  store i32 %24, i32* %arrayidx20, align 4, !dbg !8119
  br label %for.inc, !dbg !8116

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %order, align 4, !dbg !8120
  %inc = add i32 %28, 1, !dbg !8120
  store i32 %inc, i32* %order, align 4, !dbg !8120
  br label %for.cond, !dbg !8122, !llvm.loop !8123

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8125
}

; Function Attrs: nounwind uwtable
define internal void @no_codebook_bits(%struct.MLPEncodeContext* %ctx, i32 %channel, i32 %min, i32 %max, %struct.BestOffset* %bo) #1 !dbg !8126 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %channel.addr = alloca i32, align 4
  %min.addr = alloca i32, align 4
  %max.addr = alloca i32, align 4
  %bo.addr = alloca %struct.BestOffset*, align 8
  %dp = alloca %struct.DecodingParams*, align 8
  %offset = alloca i16, align 2
  %unsign = alloca i32, align 4
  %diff = alloca i32, align 4
  %lsb_bits = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !8129, metadata !1746), !dbg !8130
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8131, metadata !1746), !dbg !8132
  store i32 %min, i32* %min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min.addr, metadata !8133, metadata !1746), !dbg !8134
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !8135, metadata !1746), !dbg !8136
  store %struct.BestOffset* %bo, %struct.BestOffset** %bo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BestOffset** %bo.addr, metadata !8137, metadata !1746), !dbg !8138
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !8139, metadata !1746), !dbg !8140
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !8141
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 52, !dbg !8142
  %1 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !8142
  store %struct.DecodingParams* %1, %struct.DecodingParams** %dp, align 8, !dbg !8140
  call void @llvm.dbg.declare(metadata i16* %offset, metadata !8143, metadata !1746), !dbg !8144
  call void @llvm.dbg.declare(metadata i32* %unsign, metadata !8145, metadata !1746), !dbg !8146
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8147, metadata !1746), !dbg !8148
  call void @llvm.dbg.declare(metadata i32* %lsb_bits, metadata !8149, metadata !1746), !dbg !8150
  %2 = load i32, i32* %min.addr, align 4, !dbg !8151
  %cmp = icmp slt i32 %2, -16384, !dbg !8153
  br i1 %cmp, label %if.then, label %if.end, !dbg !8154

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %max.addr, align 4, !dbg !8155
  %4 = load i32, i32* %min.addr, align 4, !dbg !8156
  %sub = sub nsw i32 -32768, %4, !dbg !8157
  %add = add nsw i32 %sub, 1, !dbg !8158
  %cmp1 = icmp sgt i32 %3, %add, !dbg !8159
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8160

cond.true:                                        ; preds = %if.then
  %5 = load i32, i32* %max.addr, align 4, !dbg !8161
  br label %cond.end, !dbg !8163

cond.false:                                       ; preds = %if.then
  %6 = load i32, i32* %min.addr, align 4, !dbg !8164
  %sub2 = sub nsw i32 -32768, %6, !dbg !8166
  %add3 = add nsw i32 %sub2, 1, !dbg !8167
  br label %cond.end, !dbg !8168

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %add3, %cond.false ], !dbg !8169
  store i32 %cond, i32* %max.addr, align 4, !dbg !8171
  br label %if.end, !dbg !8172

if.end:                                           ; preds = %cond.end, %entry
  %7 = load i32, i32* %max.addr, align 4, !dbg !8173
  %cmp4 = icmp sgt i32 %7, 16383, !dbg !8175
  br i1 %cmp4, label %if.then5, label %if.end15, !dbg !8176

if.then5:                                         ; preds = %if.end
  %8 = load i32, i32* %min.addr, align 4, !dbg !8177
  %9 = load i32, i32* %max.addr, align 4, !dbg !8178
  %sub6 = sub nsw i32 32766, %9, !dbg !8179
  %sub7 = sub nsw i32 %sub6, 1, !dbg !8180
  %cmp8 = icmp sgt i32 %8, %sub7, !dbg !8181
  br i1 %cmp8, label %cond.true9, label %cond.false12, !dbg !8182

cond.true9:                                       ; preds = %if.then5
  %10 = load i32, i32* %max.addr, align 4, !dbg !8183
  %sub10 = sub nsw i32 32766, %10, !dbg !8185
  %sub11 = sub nsw i32 %sub10, 1, !dbg !8186
  br label %cond.end13, !dbg !8187

cond.false12:                                     ; preds = %if.then5
  %11 = load i32, i32* %min.addr, align 4, !dbg !8188
  br label %cond.end13, !dbg !8190

cond.end13:                                       ; preds = %cond.false12, %cond.true9
  %cond14 = phi i32 [ %sub11, %cond.true9 ], [ %11, %cond.false12 ], !dbg !8191
  store i32 %cond14, i32* %min.addr, align 4, !dbg !8193
  br label %if.end15, !dbg !8194

if.end15:                                         ; preds = %cond.end13, %if.end
  %12 = load i32, i32* %max.addr, align 4, !dbg !8195
  %13 = load i32, i32* %min.addr, align 4, !dbg !8196
  %sub16 = sub nsw i32 %12, %13, !dbg !8197
  store i32 %sub16, i32* %diff, align 4, !dbg !8198
  %14 = load i32, i32* %diff, align 4, !dbg !8199
  %call = call i32 @number_sbits(i32 %14), !dbg !8200
  %sub17 = sub nsw i32 %call, 1, !dbg !8201
  store i32 %sub17, i32* %lsb_bits, align 4, !dbg !8202
  %15 = load i32, i32* %lsb_bits, align 4, !dbg !8203
  %sub18 = sub nsw i32 %15, 1, !dbg !8204
  %shl = shl i32 1, %sub18, !dbg !8205
  store i32 %shl, i32* %unsign, align 4, !dbg !8206
  %16 = load i32, i32* %min.addr, align 4, !dbg !8207
  %17 = load i32, i32* %diff, align 4, !dbg !8208
  %div = udiv i32 %17, 2, !dbg !8209
  %add19 = add i32 %16, %div, !dbg !8210
  %18 = load i32, i32* %lsb_bits, align 4, !dbg !8211
  %tobool = icmp ne i32 %18, 0, !dbg !8212
  %lnot = xor i1 %tobool, true, !dbg !8212
  %lnot20 = xor i1 %lnot, true, !dbg !8213
  %lnot.ext = zext i1 %lnot20 to i32, !dbg !8213
  %add21 = add i32 %add19, %lnot.ext, !dbg !8214
  %conv = trunc i32 %add21 to i16, !dbg !8207
  store i16 %conv, i16* %offset, align 2, !dbg !8215
  %19 = load i16, i16* %offset, align 2, !dbg !8216
  %20 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8217
  %offset22 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %20, i32 0, i32 0, !dbg !8218
  store i16 %19, i16* %offset22, align 4, !dbg !8219
  %21 = load i32, i32* %lsb_bits, align 4, !dbg !8220
  %22 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8221
  %lsb_bits23 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %22, i32 0, i32 2, !dbg !8222
  store i32 %21, i32* %lsb_bits23, align 4, !dbg !8223
  %23 = load i32, i32* %lsb_bits, align 4, !dbg !8224
  %24 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !8225
  %blocksize = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %24, i32 0, i32 0, !dbg !8226
  %25 = load i16, i16* %blocksize, align 4, !dbg !8226
  %conv24 = zext i16 %25 to i32, !dbg !8225
  %mul = mul nsw i32 %23, %conv24, !dbg !8227
  %26 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8228
  %bitcount = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %26, i32 0, i32 1, !dbg !8229
  store i32 %mul, i32* %bitcount, align 4, !dbg !8230
  %27 = load i32, i32* %max.addr, align 4, !dbg !8231
  %28 = load i32, i32* %unsign, align 4, !dbg !8232
  %sub25 = sub nsw i32 %27, %28, !dbg !8233
  %add26 = add nsw i32 %sub25, 1, !dbg !8234
  %conv27 = trunc i32 %add26 to i16, !dbg !8231
  %29 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8235
  %min28 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %29, i32 0, i32 3, !dbg !8236
  store i16 %conv27, i16* %min28, align 4, !dbg !8237
  %30 = load i32, i32* %min.addr, align 4, !dbg !8238
  %31 = load i32, i32* %unsign, align 4, !dbg !8239
  %add29 = add nsw i32 %30, %31, !dbg !8240
  %conv30 = trunc i32 %add29 to i16, !dbg !8238
  %32 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8241
  %max31 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %32, i32 0, i32 4, !dbg !8242
  store i16 %conv30, i16* %max31, align 2, !dbg !8243
  ret void, !dbg !8244
}

; Function Attrs: nounwind uwtable
define internal void @no_codebook_bits_offset(%struct.MLPEncodeContext* %ctx, i32 %channel, i16 signext %offset, i32 %min, i32 %max, %struct.BestOffset* %bo) #1 !dbg !8245 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %channel.addr = alloca i32, align 4
  %offset.addr = alloca i16, align 2
  %min.addr = alloca i32, align 4
  %max.addr = alloca i32, align 4
  %bo.addr = alloca %struct.BestOffset*, align 8
  %dp = alloca %struct.DecodingParams*, align 8
  %unsign = alloca i32, align 4
  %lsb_bits = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !8248, metadata !1746), !dbg !8249
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8250, metadata !1746), !dbg !8251
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !8252, metadata !1746), !dbg !8253
  store i32 %min, i32* %min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min.addr, metadata !8254, metadata !1746), !dbg !8255
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !8256, metadata !1746), !dbg !8257
  store %struct.BestOffset* %bo, %struct.BestOffset** %bo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BestOffset** %bo.addr, metadata !8258, metadata !1746), !dbg !8259
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !8260, metadata !1746), !dbg !8261
  %0 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !8262
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %0, i32 0, i32 52, !dbg !8263
  %1 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !8263
  store %struct.DecodingParams* %1, %struct.DecodingParams** %dp, align 8, !dbg !8261
  call void @llvm.dbg.declare(metadata i32* %unsign, metadata !8264, metadata !1746), !dbg !8265
  call void @llvm.dbg.declare(metadata i32* %lsb_bits, metadata !8266, metadata !1746), !dbg !8267
  %2 = load i16, i16* %offset.addr, align 2, !dbg !8268
  %conv = sext i16 %2 to i32, !dbg !8268
  %3 = load i32, i32* %min.addr, align 4, !dbg !8269
  %sub = sub nsw i32 %3, %conv, !dbg !8269
  store i32 %sub, i32* %min.addr, align 4, !dbg !8269
  %4 = load i16, i16* %offset.addr, align 2, !dbg !8270
  %conv1 = sext i16 %4 to i32, !dbg !8270
  %5 = load i32, i32* %max.addr, align 4, !dbg !8271
  %sub2 = sub nsw i32 %5, %conv1, !dbg !8271
  store i32 %sub2, i32* %max.addr, align 4, !dbg !8271
  %6 = load i32, i32* %min.addr, align 4, !dbg !8272
  %call = call i32 @number_sbits(i32 %6), !dbg !8273
  %7 = load i32, i32* %max.addr, align 4, !dbg !8274
  %call3 = call i32 @number_sbits(i32 %7), !dbg !8275
  %cmp = icmp sgt i32 %call, %call3, !dbg !8277
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8278

cond.true:                                        ; preds = %entry
  %8 = load i32, i32* %min.addr, align 4, !dbg !8279
  %call5 = call i32 @number_sbits(i32 %8), !dbg !8281
  br label %cond.end, !dbg !8282

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %max.addr, align 4, !dbg !8283
  %call6 = call i32 @number_sbits(i32 %9), !dbg !8285
  br label %cond.end, !dbg !8286

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call5, %cond.true ], [ %call6, %cond.false ], !dbg !8287
  %sub7 = sub nsw i32 %cond, 1, !dbg !8289
  store i32 %sub7, i32* %lsb_bits, align 4, !dbg !8290
  %10 = load i32, i32* %lsb_bits, align 4, !dbg !8291
  %tobool = icmp ne i32 %10, 0, !dbg !8292
  %lnot = xor i1 %tobool, true, !dbg !8292
  %lnot8 = xor i1 %lnot, true, !dbg !8293
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !8293
  %11 = load i32, i32* %lsb_bits, align 4, !dbg !8294
  %add = add nsw i32 %11, %lnot.ext, !dbg !8294
  store i32 %add, i32* %lsb_bits, align 4, !dbg !8294
  %12 = load i32, i32* %lsb_bits, align 4, !dbg !8295
  %sub9 = sub nsw i32 %12, 1, !dbg !8296
  %shl = shl i32 1, %sub9, !dbg !8297
  store i32 %shl, i32* %unsign, align 4, !dbg !8298
  %13 = load i16, i16* %offset.addr, align 2, !dbg !8299
  %14 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8300
  %offset10 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %14, i32 0, i32 0, !dbg !8301
  store i16 %13, i16* %offset10, align 4, !dbg !8302
  %15 = load i32, i32* %lsb_bits, align 4, !dbg !8303
  %16 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8304
  %lsb_bits11 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %16, i32 0, i32 2, !dbg !8305
  store i32 %15, i32* %lsb_bits11, align 4, !dbg !8306
  %17 = load i32, i32* %lsb_bits, align 4, !dbg !8307
  %18 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !8308
  %blocksize = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %18, i32 0, i32 0, !dbg !8309
  %19 = load i16, i16* %blocksize, align 4, !dbg !8309
  %conv12 = zext i16 %19 to i32, !dbg !8308
  %mul = mul nsw i32 %17, %conv12, !dbg !8310
  %20 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8311
  %bitcount = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %20, i32 0, i32 1, !dbg !8312
  store i32 %mul, i32* %bitcount, align 4, !dbg !8313
  %21 = load i16, i16* %offset.addr, align 2, !dbg !8314
  %conv13 = sext i16 %21 to i32, !dbg !8314
  %22 = load i32, i32* %unsign, align 4, !dbg !8315
  %sub14 = sub nsw i32 %conv13, %22, !dbg !8316
  %add15 = add nsw i32 %sub14, 1, !dbg !8317
  %conv16 = trunc i32 %add15 to i16, !dbg !8314
  %23 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8318
  %min17 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %23, i32 0, i32 3, !dbg !8319
  store i16 %conv16, i16* %min17, align 4, !dbg !8320
  %24 = load i16, i16* %offset.addr, align 2, !dbg !8321
  %conv18 = sext i16 %24 to i32, !dbg !8321
  %25 = load i32, i32* %unsign, align 4, !dbg !8322
  %add19 = add nsw i32 %conv18, %25, !dbg !8323
  %conv20 = trunc i32 %add19 to i16, !dbg !8321
  %26 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8324
  %max21 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %26, i32 0, i32 4, !dbg !8325
  store i16 %conv20, i16* %max21, align 2, !dbg !8326
  ret void, !dbg !8327
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @codebook_bits_offset(%struct.MLPEncodeContext* %ctx, i32 %channel, i32 %codebook, i32 %sample_min, i32 %sample_max, i16 signext %offset, %struct.BestOffset* %bo) #5 !dbg !8328 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %channel.addr = alloca i32, align 4
  %codebook.addr = alloca i32, align 4
  %sample_min.addr = alloca i32, align 4
  %sample_max.addr = alloca i32, align 4
  %offset.addr = alloca i16, align 2
  %bo.addr = alloca %struct.BestOffset*, align 8
  %codebook_min = alloca i32, align 4
  %codebook_max = alloca i32, align 4
  %sample_buffer = alloca i32*, align 8
  %dp = alloca %struct.DecodingParams*, align 8
  %codebook_offset = alloca i32, align 4
  %unsign_offset = alloca i32, align 4
  %lsb_bits = alloca i32, align 4
  %bitcount = alloca i32, align 4
  %offset_min = alloca i32, align 4
  %offset_max = alloca i32, align 4
  %unsign = alloca i32, align 4
  %mask = alloca i32, align 4
  %i = alloca i32, align 4
  %sample = alloca i32, align 4
  %temp_min = alloca i32, align 4
  %temp_max = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !8331, metadata !1746), !dbg !8332
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8333, metadata !1746), !dbg !8334
  store i32 %codebook, i32* %codebook.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %codebook.addr, metadata !8335, metadata !1746), !dbg !8336
  store i32 %sample_min, i32* %sample_min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sample_min.addr, metadata !8337, metadata !1746), !dbg !8338
  store i32 %sample_max, i32* %sample_max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sample_max.addr, metadata !8339, metadata !1746), !dbg !8340
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !8341, metadata !1746), !dbg !8342
  store %struct.BestOffset* %bo, %struct.BestOffset** %bo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BestOffset** %bo.addr, metadata !8343, metadata !1746), !dbg !8344
  call void @llvm.dbg.declare(metadata i32* %codebook_min, metadata !8345, metadata !1746), !dbg !8346
  %0 = load i32, i32* %codebook.addr, align 4, !dbg !8347
  %idxprom = sext i32 %0 to i64, !dbg !8348
  %arrayidx = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @codebook_extremes, i64 0, i64 %idxprom, !dbg !8348
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 0, !dbg !8348
  %1 = load i32, i32* %arrayidx1, align 8, !dbg !8348
  store i32 %1, i32* %codebook_min, align 4, !dbg !8346
  call void @llvm.dbg.declare(metadata i32* %codebook_max, metadata !8349, metadata !1746), !dbg !8350
  %2 = load i32, i32* %codebook.addr, align 4, !dbg !8351
  %idxprom2 = sext i32 %2 to i64, !dbg !8352
  %arrayidx3 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @codebook_extremes, i64 0, i64 %idxprom2, !dbg !8352
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx3, i64 0, i64 1, !dbg !8352
  %3 = load i32, i32* %arrayidx4, align 4, !dbg !8352
  store i32 %3, i32* %codebook_max, align 4, !dbg !8350
  call void @llvm.dbg.declare(metadata i32** %sample_buffer, metadata !8353, metadata !1746), !dbg !8354
  %4 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !8355
  %sample_buffer5 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %4, i32 0, i32 15, !dbg !8356
  %5 = load i32*, i32** %sample_buffer5, align 8, !dbg !8356
  %6 = load i32, i32* %channel.addr, align 4, !dbg !8357
  %idx.ext = zext i32 %6 to i64, !dbg !8358
  %add.ptr = getelementptr inbounds i32, i32* %5, i64 %idx.ext, !dbg !8358
  store i32* %add.ptr, i32** %sample_buffer, align 8, !dbg !8354
  call void @llvm.dbg.declare(metadata %struct.DecodingParams** %dp, metadata !8359, metadata !1746), !dbg !8360
  %7 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !8361
  %cur_decoding_params = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %7, i32 0, i32 52, !dbg !8362
  %8 = load %struct.DecodingParams*, %struct.DecodingParams** %cur_decoding_params, align 32, !dbg !8362
  store %struct.DecodingParams* %8, %struct.DecodingParams** %dp, align 8, !dbg !8360
  call void @llvm.dbg.declare(metadata i32* %codebook_offset, metadata !8363, metadata !1746), !dbg !8364
  %9 = load i32, i32* %codebook.addr, align 4, !dbg !8365
  %sub = sub nsw i32 2, %9, !dbg !8366
  %add = add nsw i32 7, %sub, !dbg !8367
  store i32 %add, i32* %codebook_offset, align 4, !dbg !8364
  call void @llvm.dbg.declare(metadata i32* %unsign_offset, metadata !8368, metadata !1746), !dbg !8369
  %10 = load i16, i16* %offset.addr, align 2, !dbg !8370
  %conv = sext i16 %10 to i32, !dbg !8370
  store i32 %conv, i32* %unsign_offset, align 4, !dbg !8369
  call void @llvm.dbg.declare(metadata i32* %lsb_bits, metadata !8371, metadata !1746), !dbg !8372
  store i32 0, i32* %lsb_bits, align 4, !dbg !8372
  call void @llvm.dbg.declare(metadata i32* %bitcount, metadata !8373, metadata !1746), !dbg !8374
  store i32 0, i32* %bitcount, align 4, !dbg !8374
  call void @llvm.dbg.declare(metadata i32* %offset_min, metadata !8375, metadata !1746), !dbg !8376
  store i32 2147483647, i32* %offset_min, align 4, !dbg !8376
  call void @llvm.dbg.declare(metadata i32* %offset_max, metadata !8377, metadata !1746), !dbg !8378
  store i32 2147483647, i32* %offset_max, align 4, !dbg !8378
  call void @llvm.dbg.declare(metadata i32* %unsign, metadata !8379, metadata !1746), !dbg !8380
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !8381, metadata !1746), !dbg !8382
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8383, metadata !1746), !dbg !8384
  %11 = load i16, i16* %offset.addr, align 2, !dbg !8385
  %conv6 = sext i16 %11 to i32, !dbg !8385
  %12 = load i32, i32* %sample_min.addr, align 4, !dbg !8386
  %sub7 = sub nsw i32 %12, %conv6, !dbg !8386
  store i32 %sub7, i32* %sample_min.addr, align 4, !dbg !8386
  %13 = load i16, i16* %offset.addr, align 2, !dbg !8387
  %conv8 = sext i16 %13 to i32, !dbg !8387
  %14 = load i32, i32* %sample_max.addr, align 4, !dbg !8388
  %sub9 = sub nsw i32 %14, %conv8, !dbg !8388
  store i32 %sub9, i32* %sample_max.addr, align 4, !dbg !8388
  br label %while.cond, !dbg !8389

while.cond:                                       ; preds = %while.body, %entry
  %15 = load i32, i32* %sample_min.addr, align 4, !dbg !8390
  %16 = load i32, i32* %codebook_min, align 4, !dbg !8392
  %cmp = icmp slt i32 %15, %16, !dbg !8393
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8394

lor.rhs:                                          ; preds = %while.cond
  %17 = load i32, i32* %sample_max.addr, align 4, !dbg !8395
  %18 = load i32, i32* %codebook_max, align 4, !dbg !8397
  %cmp11 = icmp sgt i32 %17, %18, !dbg !8398
  br label %lor.end, !dbg !8399

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %19 = phi i1 [ true, %while.cond ], [ %cmp11, %lor.rhs ]
  br i1 %19, label %while.body, label %while.end, !dbg !8400

while.body:                                       ; preds = %lor.end
  %20 = load i32, i32* %lsb_bits, align 4, !dbg !8402
  %inc = add nsw i32 %20, 1, !dbg !8402
  store i32 %inc, i32* %lsb_bits, align 4, !dbg !8402
  %21 = load i32, i32* %sample_min.addr, align 4, !dbg !8404
  %shr = ashr i32 %21, 1, !dbg !8404
  store i32 %shr, i32* %sample_min.addr, align 4, !dbg !8404
  %22 = load i32, i32* %sample_max.addr, align 4, !dbg !8405
  %shr13 = ashr i32 %22, 1, !dbg !8405
  store i32 %shr13, i32* %sample_max.addr, align 4, !dbg !8405
  br label %while.cond, !dbg !8406, !llvm.loop !8408

while.end:                                        ; preds = %lor.end
  %23 = load i32, i32* %lsb_bits, align 4, !dbg !8409
  %shl = shl i32 1, %23, !dbg !8410
  store i32 %shl, i32* %unsign, align 4, !dbg !8411
  %24 = load i32, i32* %unsign, align 4, !dbg !8412
  %sub14 = sub nsw i32 %24, 1, !dbg !8413
  store i32 %sub14, i32* %mask, align 4, !dbg !8414
  %25 = load i32, i32* %codebook.addr, align 4, !dbg !8415
  %cmp15 = icmp eq i32 %25, 2, !dbg !8417
  br i1 %cmp15, label %if.then, label %if.end, !dbg !8418

if.then:                                          ; preds = %while.end
  %26 = load i32, i32* %unsign, align 4, !dbg !8419
  %27 = load i32, i32* %unsign_offset, align 4, !dbg !8421
  %sub17 = sub nsw i32 %27, %26, !dbg !8421
  store i32 %sub17, i32* %unsign_offset, align 4, !dbg !8421
  %28 = load i32, i32* %lsb_bits, align 4, !dbg !8422
  %inc18 = add nsw i32 %28, 1, !dbg !8422
  store i32 %inc18, i32* %lsb_bits, align 4, !dbg !8422
  br label %if.end, !dbg !8423

if.end:                                           ; preds = %if.then, %while.end
  store i32 0, i32* %i, align 4, !dbg !8424
  br label %for.cond, !dbg !8426

for.cond:                                         ; preds = %for.inc, %if.end
  %29 = load i32, i32* %i, align 4, !dbg !8427
  %30 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !8430
  %blocksize = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %30, i32 0, i32 0, !dbg !8431
  %31 = load i16, i16* %blocksize, align 4, !dbg !8431
  %conv19 = zext i16 %31 to i32, !dbg !8430
  %cmp20 = icmp slt i32 %29, %conv19, !dbg !8432
  br i1 %cmp20, label %for.body, label %for.end, !dbg !8433

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !8434, metadata !1746), !dbg !8436
  %32 = load i32*, i32** %sample_buffer, align 8, !dbg !8437
  %33 = load i32, i32* %32, align 4, !dbg !8438
  %34 = load i32, i32* %channel.addr, align 4, !dbg !8439
  %idxprom22 = zext i32 %34 to i64, !dbg !8440
  %35 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !8440
  %quant_step_size = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %35, i32 0, i32 1, !dbg !8441
  %arrayidx23 = getelementptr inbounds [8 x i8], [8 x i8]* %quant_step_size, i64 0, i64 %idxprom22, !dbg !8440
  %36 = load i8, i8* %arrayidx23, align 1, !dbg !8440
  %conv24 = zext i8 %36 to i32, !dbg !8440
  %shr25 = ashr i32 %33, %conv24, !dbg !8442
  store i32 %shr25, i32* %sample, align 4, !dbg !8436
  call void @llvm.dbg.declare(metadata i32* %temp_min, metadata !8443, metadata !1746), !dbg !8444
  call void @llvm.dbg.declare(metadata i32* %temp_max, metadata !8445, metadata !1746), !dbg !8446
  %37 = load i32, i32* %unsign_offset, align 4, !dbg !8447
  %38 = load i32, i32* %sample, align 4, !dbg !8448
  %sub26 = sub nsw i32 %38, %37, !dbg !8448
  store i32 %sub26, i32* %sample, align 4, !dbg !8448
  %39 = load i32, i32* %sample, align 4, !dbg !8449
  %40 = load i32, i32* %mask, align 4, !dbg !8450
  %and = and i32 %39, %40, !dbg !8451
  store i32 %and, i32* %temp_min, align 4, !dbg !8452
  %41 = load i32, i32* %temp_min, align 4, !dbg !8453
  %42 = load i32, i32* %offset_min, align 4, !dbg !8455
  %cmp27 = icmp slt i32 %41, %42, !dbg !8456
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !8457

if.then29:                                        ; preds = %for.body
  %43 = load i32, i32* %temp_min, align 4, !dbg !8458
  store i32 %43, i32* %offset_min, align 4, !dbg !8459
  br label %if.end30, !dbg !8460

if.end30:                                         ; preds = %if.then29, %for.body
  %44 = load i32, i32* %unsign, align 4, !dbg !8461
  %45 = load i32, i32* %temp_min, align 4, !dbg !8462
  %sub31 = sub nsw i32 %44, %45, !dbg !8463
  %sub32 = sub nsw i32 %sub31, 1, !dbg !8464
  store i32 %sub32, i32* %temp_max, align 4, !dbg !8465
  %46 = load i32, i32* %temp_max, align 4, !dbg !8466
  %47 = load i32, i32* %offset_max, align 4, !dbg !8468
  %cmp33 = icmp slt i32 %46, %47, !dbg !8469
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !8470

if.then35:                                        ; preds = %if.end30
  %48 = load i32, i32* %temp_max, align 4, !dbg !8471
  store i32 %48, i32* %offset_max, align 4, !dbg !8472
  br label %if.end36, !dbg !8473

if.end36:                                         ; preds = %if.then35, %if.end30
  %49 = load i32, i32* %lsb_bits, align 4, !dbg !8474
  %50 = load i32, i32* %sample, align 4, !dbg !8475
  %shr37 = ashr i32 %50, %49, !dbg !8475
  store i32 %shr37, i32* %sample, align 4, !dbg !8475
  %51 = load i32, i32* %sample, align 4, !dbg !8476
  %52 = load i32, i32* %codebook_offset, align 4, !dbg !8477
  %add38 = add nsw i32 %51, %52, !dbg !8478
  %idxprom39 = sext i32 %add38 to i64, !dbg !8479
  %53 = load i32, i32* %codebook.addr, align 4, !dbg !8480
  %idxprom40 = sext i32 %53 to i64, !dbg !8479
  %arrayidx41 = getelementptr inbounds [3 x [18 x [2 x i8]]], [3 x [18 x [2 x i8]]]* @ff_mlp_huffman_tables, i64 0, i64 %idxprom40, !dbg !8479
  %arrayidx42 = getelementptr inbounds [18 x [2 x i8]], [18 x [2 x i8]]* %arrayidx41, i64 0, i64 %idxprom39, !dbg !8479
  %arrayidx43 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx42, i64 0, i64 1, !dbg !8479
  %54 = load i8, i8* %arrayidx43, align 1, !dbg !8479
  %conv44 = zext i8 %54 to i32, !dbg !8479
  %55 = load i32, i32* %bitcount, align 4, !dbg !8481
  %add45 = add nsw i32 %55, %conv44, !dbg !8481
  store i32 %add45, i32* %bitcount, align 4, !dbg !8481
  %56 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !8482
  %num_channels = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %56, i32 0, i32 2, !dbg !8483
  %57 = load i32, i32* %num_channels, align 4, !dbg !8483
  %58 = load i32*, i32** %sample_buffer, align 8, !dbg !8484
  %idx.ext46 = sext i32 %57 to i64, !dbg !8484
  %add.ptr47 = getelementptr inbounds i32, i32* %58, i64 %idx.ext46, !dbg !8484
  store i32* %add.ptr47, i32** %sample_buffer, align 8, !dbg !8484
  br label %for.inc, !dbg !8485

for.inc:                                          ; preds = %if.end36
  %59 = load i32, i32* %i, align 4, !dbg !8486
  %inc48 = add nsw i32 %59, 1, !dbg !8486
  store i32 %inc48, i32* %i, align 4, !dbg !8486
  br label %for.cond, !dbg !8488, !llvm.loop !8489

for.end:                                          ; preds = %for.cond
  %60 = load i16, i16* %offset.addr, align 2, !dbg !8491
  %61 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8492
  %offset49 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %61, i32 0, i32 0, !dbg !8493
  store i16 %60, i16* %offset49, align 4, !dbg !8494
  %62 = load i32, i32* %lsb_bits, align 4, !dbg !8495
  %63 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8496
  %lsb_bits50 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %63, i32 0, i32 2, !dbg !8497
  store i32 %62, i32* %lsb_bits50, align 4, !dbg !8498
  %64 = load i32, i32* %lsb_bits, align 4, !dbg !8499
  %65 = load %struct.DecodingParams*, %struct.DecodingParams** %dp, align 8, !dbg !8500
  %blocksize51 = getelementptr inbounds %struct.DecodingParams, %struct.DecodingParams* %65, i32 0, i32 0, !dbg !8501
  %66 = load i16, i16* %blocksize51, align 4, !dbg !8501
  %conv52 = zext i16 %66 to i32, !dbg !8500
  %mul = mul nsw i32 %64, %conv52, !dbg !8502
  %67 = load i32, i32* %bitcount, align 4, !dbg !8503
  %add53 = add nsw i32 %mul, %67, !dbg !8504
  %68 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8505
  %bitcount54 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %68, i32 0, i32 1, !dbg !8506
  store i32 %add53, i32* %bitcount54, align 4, !dbg !8507
  %69 = load i16, i16* %offset.addr, align 2, !dbg !8508
  %conv55 = sext i16 %69 to i32, !dbg !8508
  %70 = load i32, i32* %offset_min, align 4, !dbg !8509
  %sub56 = sub nsw i32 %conv55, %70, !dbg !8510
  %cmp57 = icmp sgt i32 %sub56, -16384, !dbg !8511
  br i1 %cmp57, label %cond.true, label %cond.false, !dbg !8512

cond.true:                                        ; preds = %for.end
  %71 = load i16, i16* %offset.addr, align 2, !dbg !8513
  %conv59 = sext i16 %71 to i32, !dbg !8513
  %72 = load i32, i32* %offset_min, align 4, !dbg !8514
  %sub60 = sub nsw i32 %conv59, %72, !dbg !8515
  br label %cond.end, !dbg !8516

cond.false:                                       ; preds = %for.end
  br label %cond.end, !dbg !8517

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub60, %cond.true ], [ -16384, %cond.false ], !dbg !8518
  %conv61 = trunc i32 %cond to i16, !dbg !8519
  %73 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8520
  %min = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %73, i32 0, i32 3, !dbg !8521
  store i16 %conv61, i16* %min, align 4, !dbg !8522
  %74 = load i16, i16* %offset.addr, align 2, !dbg !8523
  %conv62 = sext i16 %74 to i32, !dbg !8523
  %75 = load i32, i32* %offset_max, align 4, !dbg !8524
  %add63 = add nsw i32 %conv62, %75, !dbg !8525
  %cmp64 = icmp sgt i32 %add63, 16383, !dbg !8526
  br i1 %cmp64, label %cond.true66, label %cond.false67, !dbg !8527

cond.true66:                                      ; preds = %cond.end
  br label %cond.end70, !dbg !8528

cond.false67:                                     ; preds = %cond.end
  %76 = load i16, i16* %offset.addr, align 2, !dbg !8529
  %conv68 = sext i16 %76 to i32, !dbg !8529
  %77 = load i32, i32* %offset_max, align 4, !dbg !8530
  %add69 = add nsw i32 %conv68, %77, !dbg !8531
  br label %cond.end70, !dbg !8532

cond.end70:                                       ; preds = %cond.false67, %cond.true66
  %cond71 = phi i32 [ 16383, %cond.true66 ], [ %add69, %cond.false67 ], !dbg !8533
  %conv72 = trunc i32 %cond71 to i16, !dbg !8534
  %78 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8535
  %max = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %78, i32 0, i32 4, !dbg !8536
  store i16 %conv72, i16* %max, align 2, !dbg !8537
  ret void, !dbg !8538
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @codebook_bits(%struct.MLPEncodeContext* %ctx, i32 %channel, i32 %codebook, i32 %offset, i32 %min, i32 %max, %struct.BestOffset* %bo, i32 %direction) #5 !dbg !8539 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %channel.addr = alloca i32, align 4
  %codebook.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %min.addr = alloca i32, align 4
  %max.addr = alloca i32, align 4
  %bo.addr = alloca %struct.BestOffset*, align 8
  %direction.addr = alloca i32, align 4
  %previous_count = alloca i32, align 4
  %offset_min = alloca i32, align 4
  %offset_max = alloca i32, align 4
  %is_greater = alloca i32, align 4
  %temp_bo = alloca %struct.BestOffset, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !8542, metadata !1746), !dbg !8543
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8544, metadata !1746), !dbg !8545
  store i32 %codebook, i32* %codebook.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %codebook.addr, metadata !8546, metadata !1746), !dbg !8547
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8548, metadata !1746), !dbg !8549
  store i32 %min, i32* %min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min.addr, metadata !8550, metadata !1746), !dbg !8551
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !8552, metadata !1746), !dbg !8553
  store %struct.BestOffset* %bo, %struct.BestOffset** %bo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BestOffset** %bo.addr, metadata !8554, metadata !1746), !dbg !8555
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !8556, metadata !1746), !dbg !8557
  call void @llvm.dbg.declare(metadata i32* %previous_count, metadata !8558, metadata !1746), !dbg !8559
  store i32 2147483647, i32* %previous_count, align 4, !dbg !8559
  call void @llvm.dbg.declare(metadata i32* %offset_min, metadata !8560, metadata !1746), !dbg !8561
  call void @llvm.dbg.declare(metadata i32* %offset_max, metadata !8562, metadata !1746), !dbg !8563
  call void @llvm.dbg.declare(metadata i32* %is_greater, metadata !8564, metadata !1746), !dbg !8565
  store i32 0, i32* %is_greater, align 4, !dbg !8565
  %0 = load i32, i32* %min.addr, align 4, !dbg !8566
  %cmp = icmp sgt i32 %0, -16384, !dbg !8567
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8568

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %min.addr, align 4, !dbg !8569
  br label %cond.end, !dbg !8571

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8572

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ -16384, %cond.false ], !dbg !8574
  store i32 %cond, i32* %offset_min, align 4, !dbg !8576
  %2 = load i32, i32* %max.addr, align 4, !dbg !8577
  %cmp1 = icmp sgt i32 %2, 16383, !dbg !8578
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !8579

cond.true2:                                       ; preds = %cond.end
  br label %cond.end4, !dbg !8580

cond.false3:                                      ; preds = %cond.end
  %3 = load i32, i32* %max.addr, align 4, !dbg !8581
  br label %cond.end4, !dbg !8582

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ 16383, %cond.true2 ], [ %3, %cond.false3 ], !dbg !8583
  store i32 %cond5, i32* %offset_max, align 4, !dbg !8584
  br label %for.cond, !dbg !8585

for.cond:                                         ; preds = %if.end33, %cond.end4
  call void @llvm.dbg.declare(metadata %struct.BestOffset* %temp_bo, metadata !8586, metadata !1746), !dbg !8590
  %4 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !8591
  %5 = load i32, i32* %channel.addr, align 4, !dbg !8592
  %6 = load i32, i32* %codebook.addr, align 4, !dbg !8593
  %7 = load i32, i32* %min.addr, align 4, !dbg !8594
  %8 = load i32, i32* %max.addr, align 4, !dbg !8595
  %9 = load i32, i32* %offset.addr, align 4, !dbg !8596
  %conv = trunc i32 %9 to i16, !dbg !8596
  call void @codebook_bits_offset(%struct.MLPEncodeContext* %4, i32 %5, i32 %6, i32 %7, i32 %8, i16 signext %conv, %struct.BestOffset* %temp_bo), !dbg !8597
  %bitcount = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %temp_bo, i32 0, i32 1, !dbg !8598
  %10 = load i32, i32* %bitcount, align 4, !dbg !8598
  %11 = load i32, i32* %previous_count, align 4, !dbg !8600
  %cmp6 = icmp slt i32 %10, %11, !dbg !8601
  br i1 %cmp6, label %if.then, label %if.else, !dbg !8602

if.then:                                          ; preds = %for.cond
  %bitcount8 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %temp_bo, i32 0, i32 1, !dbg !8603
  %12 = load i32, i32* %bitcount8, align 4, !dbg !8603
  %13 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8606
  %bitcount9 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %13, i32 0, i32 1, !dbg !8607
  %14 = load i32, i32* %bitcount9, align 4, !dbg !8607
  %cmp10 = icmp slt i32 %12, %14, !dbg !8608
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !8609

if.then12:                                        ; preds = %if.then
  %15 = load %struct.BestOffset*, %struct.BestOffset** %bo.addr, align 8, !dbg !8610
  %16 = bitcast %struct.BestOffset* %15 to i8*, !dbg !8611
  %17 = bitcast %struct.BestOffset* %temp_bo to i8*, !dbg !8611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 16, i32 4, i1 false), !dbg !8611
  br label %if.end, !dbg !8612

if.end:                                           ; preds = %if.then12, %if.then
  store i32 0, i32* %is_greater, align 4, !dbg !8613
  br label %if.end17, !dbg !8614

if.else:                                          ; preds = %for.cond
  %18 = load i32, i32* %is_greater, align 4, !dbg !8615
  %inc = add nsw i32 %18, 1, !dbg !8615
  store i32 %inc, i32* %is_greater, align 4, !dbg !8615
  %19 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !8618
  %max_codebook_search = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %19, i32 0, i32 64, !dbg !8619
  %20 = load i32, i32* %max_codebook_search, align 8, !dbg !8619
  %cmp13 = icmp uge i32 %inc, %20, !dbg !8620
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !8615

if.then15:                                        ; preds = %if.else
  br label %for.end, !dbg !8621

if.end16:                                         ; preds = %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.end
  %bitcount18 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %temp_bo, i32 0, i32 1, !dbg !8622
  %21 = load i32, i32* %bitcount18, align 4, !dbg !8622
  store i32 %21, i32* %previous_count, align 4, !dbg !8623
  %22 = load i32, i32* %direction.addr, align 4, !dbg !8624
  %tobool = icmp ne i32 %22, 0, !dbg !8624
  br i1 %tobool, label %if.then19, label %if.else26, !dbg !8626

if.then19:                                        ; preds = %if.end17
  %max20 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %temp_bo, i32 0, i32 4, !dbg !8627
  %23 = load i16, i16* %max20, align 2, !dbg !8627
  %conv21 = sext i16 %23 to i32, !dbg !8629
  %add = add nsw i32 %conv21, 1, !dbg !8630
  store i32 %add, i32* %offset.addr, align 4, !dbg !8631
  %24 = load i32, i32* %offset.addr, align 4, !dbg !8632
  %25 = load i32, i32* %offset_max, align 4, !dbg !8634
  %cmp22 = icmp sgt i32 %24, %25, !dbg !8635
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !8636

if.then24:                                        ; preds = %if.then19
  br label %for.end, !dbg !8637

if.end25:                                         ; preds = %if.then19
  br label %if.end33, !dbg !8638

if.else26:                                        ; preds = %if.end17
  %min27 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %temp_bo, i32 0, i32 3, !dbg !8639
  %26 = load i16, i16* %min27, align 4, !dbg !8639
  %conv28 = sext i16 %26 to i32, !dbg !8641
  %sub = sub nsw i32 %conv28, 1, !dbg !8642
  store i32 %sub, i32* %offset.addr, align 4, !dbg !8643
  %27 = load i32, i32* %offset.addr, align 4, !dbg !8644
  %28 = load i32, i32* %offset_min, align 4, !dbg !8646
  %cmp29 = icmp slt i32 %27, %28, !dbg !8647
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !8648

if.then31:                                        ; preds = %if.else26
  br label %for.end, !dbg !8649

if.end32:                                         ; preds = %if.else26
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end25
  br label %for.cond, !dbg !8650, !llvm.loop !8652

for.end:                                          ; preds = %if.then31, %if.then24, %if.then15
  ret void, !dbg !8653
}

; Function Attrs: nounwind uwtable
define internal void @clear_path_counter(%struct.PathCounter* %path_counter) #1 !dbg !8654 {
entry:
  %path_counter.addr = alloca %struct.PathCounter*, align 8
  %i = alloca i32, align 4
  store %struct.PathCounter* %path_counter, %struct.PathCounter** %path_counter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PathCounter** %path_counter.addr, metadata !8657, metadata !1746), !dbg !8658
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8659, metadata !1746), !dbg !8660
  store i32 0, i32* %i, align 4, !dbg !8661
  br label %for.cond, !dbg !8663

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8664
  %cmp = icmp ult i32 %0, 5, !dbg !8667
  br i1 %cmp, label %for.body, label %for.end, !dbg !8668

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !8669
  %idxprom = zext i32 %1 to i64, !dbg !8671
  %2 = load %struct.PathCounter*, %struct.PathCounter** %path_counter.addr, align 8, !dbg !8671
  %arrayidx = getelementptr inbounds %struct.PathCounter, %struct.PathCounter* %2, i64 %idxprom, !dbg !8671
  %path = getelementptr inbounds %struct.PathCounter, %struct.PathCounter* %arrayidx, i32 0, i32 0, !dbg !8672
  %arrayidx1 = getelementptr inbounds [19 x i8], [19 x i8]* %path, i64 0, i64 0, !dbg !8671
  store i8 48, i8* %arrayidx1, align 4, !dbg !8673
  %3 = load i32, i32* %i, align 4, !dbg !8674
  %idxprom2 = zext i32 %3 to i64, !dbg !8675
  %4 = load %struct.PathCounter*, %struct.PathCounter** %path_counter.addr, align 8, !dbg !8675
  %arrayidx3 = getelementptr inbounds %struct.PathCounter, %struct.PathCounter* %4, i64 %idxprom2, !dbg !8675
  %path4 = getelementptr inbounds %struct.PathCounter, %struct.PathCounter* %arrayidx3, i32 0, i32 0, !dbg !8676
  %arrayidx5 = getelementptr inbounds [19 x i8], [19 x i8]* %path4, i64 0, i64 1, !dbg !8675
  store i8 0, i8* %arrayidx5, align 1, !dbg !8677
  %5 = load i32, i32* %i, align 4, !dbg !8678
  %idxprom6 = zext i32 %5 to i64, !dbg !8679
  %6 = load %struct.PathCounter*, %struct.PathCounter** %path_counter.addr, align 8, !dbg !8679
  %arrayidx7 = getelementptr inbounds %struct.PathCounter, %struct.PathCounter* %6, i64 %idxprom6, !dbg !8679
  %bitcount = getelementptr inbounds %struct.PathCounter, %struct.PathCounter* %arrayidx7, i32 0, i32 1, !dbg !8680
  store i32 0, i32* %bitcount, align 4, !dbg !8681
  br label %for.inc, !dbg !8682

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !8683
  %inc = add i32 %7, 1, !dbg !8683
  store i32 %inc, i32* %i, align 4, !dbg !8683
  br label %for.cond, !dbg !8685, !llvm.loop !8686

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8688
}

; Function Attrs: nounwind uwtable
define internal i32 @compare_best_offset(%struct.BestOffset* %prev, %struct.BestOffset* %cur) #1 !dbg !8689 {
entry:
  %retval = alloca i32, align 4
  %prev.addr = alloca %struct.BestOffset*, align 8
  %cur.addr = alloca %struct.BestOffset*, align 8
  store %struct.BestOffset* %prev, %struct.BestOffset** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BestOffset** %prev.addr, metadata !8692, metadata !1746), !dbg !8693
  store %struct.BestOffset* %cur, %struct.BestOffset** %cur.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BestOffset** %cur.addr, metadata !8694, metadata !1746), !dbg !8695
  %0 = load %struct.BestOffset*, %struct.BestOffset** %prev.addr, align 8, !dbg !8696
  %lsb_bits = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %0, i32 0, i32 2, !dbg !8698
  %1 = load i32, i32* %lsb_bits, align 4, !dbg !8698
  %2 = load %struct.BestOffset*, %struct.BestOffset** %cur.addr, align 8, !dbg !8699
  %lsb_bits1 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %2, i32 0, i32 2, !dbg !8700
  %3 = load i32, i32* %lsb_bits1, align 4, !dbg !8700
  %cmp = icmp ne i32 %1, %3, !dbg !8701
  br i1 %cmp, label %if.then, label %if.end, !dbg !8702

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8703
  br label %return, !dbg !8703

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8704
  br label %return, !dbg !8704

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !8705
  ret i32 %4, !dbg !8705
}

; Function Attrs: nounwind uwtable
define internal i32 @best_codebook_path_cost(%struct.MLPEncodeContext* %ctx, i32 %channel, %struct.PathCounter* %src, i32 %cur_codebook) #1 !dbg !8706 {
entry:
  %ctx.addr = alloca %struct.MLPEncodeContext*, align 8
  %channel.addr = alloca i32, align 4
  %src.addr = alloca %struct.PathCounter*, align 8
  %cur_codebook.addr = alloca i32, align 4
  %cur_bo = alloca %struct.BestOffset*, align 8
  %prev_bo = alloca %struct.BestOffset*, align 8
  %bitcount = alloca i32, align 4
  %path = alloca i8*, align 8
  %prev_codebook = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.MLPEncodeContext* %ctx, %struct.MLPEncodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLPEncodeContext** %ctx.addr, metadata !8709, metadata !1746), !dbg !8710
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8711, metadata !1746), !dbg !8712
  store %struct.PathCounter* %src, %struct.PathCounter** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PathCounter** %src.addr, metadata !8713, metadata !1746), !dbg !8714
  store i32 %cur_codebook, i32* %cur_codebook.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cur_codebook.addr, metadata !8715, metadata !1746), !dbg !8716
  call void @llvm.dbg.declare(metadata %struct.BestOffset** %cur_bo, metadata !8717, metadata !1746), !dbg !8718
  call void @llvm.dbg.declare(metadata %struct.BestOffset** %prev_bo, metadata !8719, metadata !1746), !dbg !8720
  store %struct.BestOffset* getelementptr inbounds ([4 x %struct.BestOffset], [4 x %struct.BestOffset]* @restart_best_offset, i32 0, i32 0), %struct.BestOffset** %prev_bo, align 8, !dbg !8720
  call void @llvm.dbg.declare(metadata i32* %bitcount, metadata !8721, metadata !1746), !dbg !8722
  %0 = load %struct.PathCounter*, %struct.PathCounter** %src.addr, align 8, !dbg !8723
  %bitcount1 = getelementptr inbounds %struct.PathCounter, %struct.PathCounter* %0, i32 0, i32 1, !dbg !8724
  %1 = load i32, i32* %bitcount1, align 4, !dbg !8724
  store i32 %1, i32* %bitcount, align 4, !dbg !8722
  call void @llvm.dbg.declare(metadata i8** %path, metadata !8725, metadata !1746), !dbg !8726
  %2 = load %struct.PathCounter*, %struct.PathCounter** %src.addr, align 8, !dbg !8727
  %path2 = getelementptr inbounds %struct.PathCounter, %struct.PathCounter* %2, i32 0, i32 0, !dbg !8728
  %arraydecay = getelementptr inbounds [19 x i8], [19 x i8]* %path2, i32 0, i32 0, !dbg !8727
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !8729
  store i8* %add.ptr, i8** %path, align 8, !dbg !8726
  call void @llvm.dbg.declare(metadata i32* %prev_codebook, metadata !8730, metadata !1746), !dbg !8731
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8732, metadata !1746), !dbg !8733
  store i32 0, i32* %i, align 4, !dbg !8734
  br label %for.cond, !dbg !8736

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !8737
  %idxprom = sext i32 %3 to i64, !dbg !8740
  %4 = load i8*, i8** %path, align 8, !dbg !8740
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !8740
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8740
  %tobool = icmp ne i8 %5, 0, !dbg !8741
  br i1 %tobool, label %for.body, label %for.end, !dbg !8741

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %channel.addr, align 4, !dbg !8742
  %idxprom3 = zext i32 %6 to i64, !dbg !8743
  %7 = load i32, i32* %i, align 4, !dbg !8744
  %idxprom4 = sext i32 %7 to i64, !dbg !8743
  %8 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !8743
  %best_offset = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %8, i32 0, i32 41, !dbg !8745
  %arrayidx5 = getelementptr inbounds [17 x [8 x [4 x %struct.BestOffset]]], [17 x [8 x [4 x %struct.BestOffset]]]* %best_offset, i64 0, i64 %idxprom4, !dbg !8743
  %arrayidx6 = getelementptr inbounds [8 x [4 x %struct.BestOffset]], [8 x [4 x %struct.BestOffset]]* %arrayidx5, i64 0, i64 %idxprom3, !dbg !8743
  %arraydecay7 = getelementptr inbounds [4 x %struct.BestOffset], [4 x %struct.BestOffset]* %arrayidx6, i32 0, i32 0, !dbg !8743
  store %struct.BestOffset* %arraydecay7, %struct.BestOffset** %prev_bo, align 8, !dbg !8746
  br label %for.inc, !dbg !8747

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !8748
  %inc = add nsw i32 %9, 1, !dbg !8748
  store i32 %inc, i32* %i, align 4, !dbg !8748
  br label %for.cond, !dbg !8750, !llvm.loop !8751

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !8753
  %sub = sub nsw i32 %10, 1, !dbg !8754
  %idxprom8 = sext i32 %sub to i64, !dbg !8755
  %11 = load i8*, i8** %path, align 8, !dbg !8755
  %arrayidx9 = getelementptr inbounds i8, i8* %11, i64 %idxprom8, !dbg !8755
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !8755
  %conv = sext i8 %12 to i32, !dbg !8755
  %sub10 = sub nsw i32 %conv, 48, !dbg !8756
  store i32 %sub10, i32* %prev_codebook, align 4, !dbg !8757
  %13 = load i32, i32* %channel.addr, align 4, !dbg !8758
  %idxprom11 = zext i32 %13 to i64, !dbg !8759
  %14 = load i32, i32* %i, align 4, !dbg !8760
  %idxprom12 = sext i32 %14 to i64, !dbg !8759
  %15 = load %struct.MLPEncodeContext*, %struct.MLPEncodeContext** %ctx.addr, align 8, !dbg !8759
  %best_offset13 = getelementptr inbounds %struct.MLPEncodeContext, %struct.MLPEncodeContext* %15, i32 0, i32 41, !dbg !8761
  %arrayidx14 = getelementptr inbounds [17 x [8 x [4 x %struct.BestOffset]]], [17 x [8 x [4 x %struct.BestOffset]]]* %best_offset13, i64 0, i64 %idxprom12, !dbg !8759
  %arrayidx15 = getelementptr inbounds [8 x [4 x %struct.BestOffset]], [8 x [4 x %struct.BestOffset]]* %arrayidx14, i64 0, i64 %idxprom11, !dbg !8759
  %arraydecay16 = getelementptr inbounds [4 x %struct.BestOffset], [4 x %struct.BestOffset]* %arrayidx15, i32 0, i32 0, !dbg !8759
  store %struct.BestOffset* %arraydecay16, %struct.BestOffset** %cur_bo, align 8, !dbg !8762
  %16 = load i32, i32* %cur_codebook.addr, align 4, !dbg !8763
  %idxprom17 = sext i32 %16 to i64, !dbg !8764
  %17 = load %struct.BestOffset*, %struct.BestOffset** %cur_bo, align 8, !dbg !8764
  %arrayidx18 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %17, i64 %idxprom17, !dbg !8764
  %bitcount19 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %arrayidx18, i32 0, i32 1, !dbg !8765
  %18 = load i32, i32* %bitcount19, align 4, !dbg !8765
  %19 = load i32, i32* %bitcount, align 4, !dbg !8766
  %add = add nsw i32 %19, %18, !dbg !8766
  store i32 %add, i32* %bitcount, align 4, !dbg !8766
  %20 = load i32, i32* %prev_codebook, align 4, !dbg !8767
  %21 = load i32, i32* %cur_codebook.addr, align 4, !dbg !8769
  %cmp = icmp ne i32 %20, %21, !dbg !8770
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8771

lor.lhs.false:                                    ; preds = %for.end
  %22 = load i32, i32* %prev_codebook, align 4, !dbg !8772
  %idxprom21 = sext i32 %22 to i64, !dbg !8773
  %23 = load %struct.BestOffset*, %struct.BestOffset** %prev_bo, align 8, !dbg !8773
  %arrayidx22 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %23, i64 %idxprom21, !dbg !8773
  %24 = load i32, i32* %cur_codebook.addr, align 4, !dbg !8774
  %idxprom23 = sext i32 %24 to i64, !dbg !8775
  %25 = load %struct.BestOffset*, %struct.BestOffset** %cur_bo, align 8, !dbg !8775
  %arrayidx24 = getelementptr inbounds %struct.BestOffset, %struct.BestOffset* %25, i64 %idxprom23, !dbg !8775
  %call = call i32 @compare_best_offset(%struct.BestOffset* %arrayidx22, %struct.BestOffset* %arrayidx24), !dbg !8776
  %tobool25 = icmp ne i32 %call, 0, !dbg !8776
  br i1 %tobool25, label %if.then, label %if.end, !dbg !8777

if.then:                                          ; preds = %lor.lhs.false, %for.end
  %26 = load i32, i32* %bitcount, align 4, !dbg !8779
  %add26 = add nsw i32 %26, 21, !dbg !8779
  store i32 %add26, i32* %bitcount, align 4, !dbg !8779
  br label %if.end, !dbg !8780

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %27 = load i32, i32* %bitcount, align 4, !dbg !8781
  ret i32 %27, !dbg !8782
}

declare i64 @av_strlcat(i8*, i8*, i64) #3

declare void @ff_lpc_end(%struct.LPCContext*) #3

declare void @ff_af_queue_close(%struct.AudioFrameQueue*) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1740, !1741}
!llvm.ident = !{!1742}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !920, globals: !999)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--mlpenc.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881, !887, !896, !902, !914}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FFLPCType", file: !888, line: 43, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/lpc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!889 = !{!890, !891, !892, !893, !894, !895}
!890 = !DIEnumerator(name: "FF_LPC_TYPE_DEFAULT", value: -1)
!891 = !DIEnumerator(name: "FF_LPC_TYPE_NONE", value: 0)
!892 = !DIEnumerator(name: "FF_LPC_TYPE_FIXED", value: 1)
!893 = !DIEnumerator(name: "FF_LPC_TYPE_LEVINSON", value: 2)
!894 = !DIEnumerator(name: "FF_LPC_TYPE_CHOLESKY", value: 3)
!895 = !DIEnumerator(name: "FF_LPC_TYPE_NB", value: 4)
!896 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "InputBitDepth", file: !897, line: 475, size: 32, align: 32, elements: !898)
!897 = !DIFile(filename: "libavcodec/mlpenc.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!898 = !{!899, !900, !901}
!899 = !DIEnumerator(name: "BITS_16", value: 0)
!900 = !DIEnumerator(name: "BITS_20", value: 1)
!901 = !DIEnumerator(name: "BITS_24", value: 2)
!902 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ParamFlags", file: !897, line: 66, size: 32, align: 32, elements: !903)
!903 = !{!904, !905, !906, !907, !908, !909, !910, !911, !912, !913}
!904 = !DIEnumerator(name: "PARAMS_DEFAULT", value: 255)
!905 = !DIEnumerator(name: "PARAM_PRESENCE_FLAGS", value: 256)
!906 = !DIEnumerator(name: "PARAM_BLOCKSIZE", value: 128)
!907 = !DIEnumerator(name: "PARAM_MATRIX", value: 64)
!908 = !DIEnumerator(name: "PARAM_OUTSHIFT", value: 32)
!909 = !DIEnumerator(name: "PARAM_QUANTSTEP", value: 16)
!910 = !DIEnumerator(name: "PARAM_FIR", value: 8)
!911 = !DIEnumerator(name: "PARAM_IIR", value: 4)
!912 = !DIEnumerator(name: "PARAM_HUFFOFFSET", value: 2)
!913 = !DIEnumerator(name: "PARAM_PRESENT", value: 1)
!914 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MLPChMode", file: !897, line: 1440, size: 32, align: 32, elements: !915)
!915 = !{!916, !917, !918, !919}
!916 = !DIEnumerator(name: "MLP_CHMODE_LEFT_RIGHT", value: 0)
!917 = !DIEnumerator(name: "MLP_CHMODE_LEFT_SIDE", value: 1)
!918 = !DIEnumerator(name: "MLP_CHMODE_RIGHT_SIDE", value: 2)
!919 = !DIEnumerator(name: "MLP_CHMODE_MID_SIDE", value: 3)
!920 = !{!921, !955, !978, !981, !983, !988, !994, !995, !997}
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64, align: 64)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelParams", file: !923, line: 93, baseType: !924)
!923 = !DIFile(filename: "libavcodec/mlp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelParams", file: !923, line: 85, size: 1312, align: 32, elements: !925)
!925 = !{!926, !946, !949, !952, !953, !954}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "filter_params", scope: !924, file: !923, line: 86, baseType: !927, size: 704, align: 32)
!927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !928, size: 704, align: 32, elements: !944)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterParams", file: !923, line: 82, baseType: !929)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FilterParams", file: !923, line: 74, size: 352, align: 32, elements: !930)
!930 = !{!931, !935, !936, !942, !943}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !929, file: !923, line: 75, baseType: !932, size: 8, align: 8)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !933, line: 48, baseType: !934)
!933 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!934 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !929, file: !923, line: 76, baseType: !932, size: 8, align: 8, offset: 8)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !929, file: !923, line: 78, baseType: !937, size: 256, align: 32, offset: 32)
!937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 256, align: 32, elements: !940)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !933, line: 38, baseType: !939)
!939 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!940 = !{!941}
!941 = !DISubrange(count: 8)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "coeff_bits", scope: !929, file: !923, line: 80, baseType: !939, size: 32, align: 32, offset: 288)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "coeff_shift", scope: !929, file: !923, line: 81, baseType: !939, size: 32, align: 32, offset: 320)
!944 = !{!945}
!945 = !DISubrange(count: 2)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "coeff", scope: !924, file: !923, line: 87, baseType: !947, size: 512, align: 32, offset: 704)
!947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 512, align: 32, elements: !948)
!948 = !{!945, !941}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "huff_offset", scope: !924, file: !923, line: 89, baseType: !950, size: 16, align: 16, offset: 1216)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !933, line: 37, baseType: !951)
!951 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "sign_huff_offset", scope: !924, file: !923, line: 90, baseType: !938, size: 32, align: 32, offset: 1248)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "codebook", scope: !924, file: !923, line: 91, baseType: !932, size: 8, align: 8, offset: 1280)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "huff_lsbs", scope: !924, file: !923, line: 92, baseType: !932, size: 8, align: 8, offset: 1288)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64, align: 64)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodingParams", file: !897, line: 86, baseType: !957)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !897, line: 79, size: 5472, align: 32, elements: !958)
!958 = !{!959, !962, !964, !980}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "blocksize", scope: !957, file: !897, line: 80, baseType: !960, size: 16, align: 16)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !933, line: 49, baseType: !961)
!961 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "quant_step_size", scope: !957, file: !897, line: 81, baseType: !963, size: 64, align: 8, offset: 16)
!963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !932, size: 64, align: 8, elements: !940)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_params", scope: !957, file: !897, line: 83, baseType: !965, size: 5344, align: 32, offset: 96)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatrixParams", file: !897, line: 64, baseType: !966)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !897, line: 55, size: 5344, align: 32, elements: !967)
!967 = !{!968, !969, !970, !974, !975, !976}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !966, file: !897, line: 56, baseType: !932, size: 8, align: 8)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "outch", scope: !966, file: !897, line: 58, baseType: !963, size: 64, align: 8, offset: 8)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "forco", scope: !966, file: !897, line: 59, baseType: !971, size: 2560, align: 32, offset: 96)
!971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 2560, align: 32, elements: !972)
!972 = !{!941, !973}
!973 = !DISubrange(count: 10)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "coeff", scope: !966, file: !897, line: 60, baseType: !971, size: 2560, align: 32, offset: 2656)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "fbits", scope: !966, file: !897, line: 61, baseType: !963, size: 64, align: 8, offset: 5216)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !966, file: !897, line: 63, baseType: !977, size: 64, align: 8, offset: 5280)
!977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !978, size: 64, align: 8, elements: !940)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !933, line: 36, baseType: !979)
!979 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "param_presence_flags", scope: !957, file: !897, line: 85, baseType: !932, size: 8, align: 8, offset: 5440)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !933, line: 40, baseType: !982)
!982 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64, align: 64)
!984 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !985, line: 222, size: 16, align: 8, elements: !986)
!985 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!986 = !{!987}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !984, file: !985, line: 222, baseType: !960, size: 16, align: 16)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !985, line: 221, size: 32, align: 8, elements: !990)
!990 = !{!991}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !989, file: !985, line: 221, baseType: !992, size: 32, align: 32)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !933, line: 51, baseType: !993)
!993 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64, align: 64)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !938)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64, align: 64)
!998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !950)
!999 = !{!1000, !1719, !1720, !1722, !1724, !1728, !1738}
!1000 = distinct !DIGlobalVariable(name: "ff_mlp_encoder", scope: !0, file: !897, line: 2386, type: !1001, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_mlp_encoder)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !1003)
!1003 = !{!1004, !1008, !1009, !1010, !1011, !1012, !1021, !1024, !1027, !1030, !1035, !1036, !1077, !1085, !1086, !1087, !1089, !1634, !1640, !1648, !1652, !1653, !1690, !1694, !1698, !1699, !1703, !1707, !1708, !1712, !1713, !1714}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1002, file: !14, line: 3475, baseType: !1005, size: 64, align: 64)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64, align: 64)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1007)
!1007 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1002, file: !14, line: 3480, baseType: !1005, size: 64, align: 64, offset: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1002, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1002, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1002, file: !14, line: 3487, baseType: !939, size: 32, align: 32, offset: 192)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1002, file: !14, line: 3488, baseType: !1013, size: 64, align: 64, offset: 256)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64, align: 64)
!1014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1016, line: 61, baseType: !1017)
!1016 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1016, line: 58, size: 64, align: 32, elements: !1018)
!1018 = !{!1019, !1020}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1017, file: !1016, line: 59, baseType: !939, size: 32, align: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1017, file: !1016, line: 60, baseType: !939, size: 32, align: 32, offset: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1002, file: !14, line: 3489, baseType: !1022, size: 64, align: 64, offset: 320)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64, align: 64)
!1023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1002, file: !14, line: 3490, baseType: !1025, size: 64, align: 64, offset: 384)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64, align: 64)
!1026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !939)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1002, file: !14, line: 3491, baseType: !1028, size: 64, align: 64, offset: 448)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64, align: 64)
!1029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1002, file: !14, line: 3492, baseType: !1031, size: 64, align: 64, offset: 512)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1033)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !933, line: 55, baseType: !1034)
!1034 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1002, file: !14, line: 3493, baseType: !932, size: 8, align: 8, offset: 576)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1002, file: !14, line: 3494, baseType: !1037, size: 64, align: 64, offset: 640)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64, align: 64)
!1038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !1040)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !1041)
!1041 = !{!1042, !1043, !1047, !1051, !1052, !1053, !1054, !1058, !1064, !1066, !1070}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1040, file: !691, line: 72, baseType: !1005, size: 64, align: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1040, file: !691, line: 78, baseType: !1044, size: 64, align: 64, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64, align: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!1005, !994}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1040, file: !691, line: 85, baseType: !1048, size: 64, align: 64, offset: 128)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64, align: 64)
!1049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1050)
!1050 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1040, file: !691, line: 93, baseType: !939, size: 32, align: 32, offset: 192)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1040, file: !691, line: 99, baseType: !939, size: 32, align: 32, offset: 224)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1040, file: !691, line: 108, baseType: !939, size: 32, align: 32, offset: 256)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1040, file: !691, line: 113, baseType: !1055, size: 64, align: 64, offset: 320)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!994, !994, !994}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1040, file: !691, line: 123, baseType: !1059, size: 64, align: 64, offset: 384)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64, align: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!1062, !1062}
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64, align: 64)
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1040, file: !691, line: 130, baseType: !1065, size: 32, align: 32, offset: 448)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1040, file: !691, line: 136, baseType: !1067, size: 64, align: 64, offset: 512)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64, align: 64)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!1065, !994}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1040, file: !691, line: 142, baseType: !1071, size: 64, align: 64, offset: 576)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!939, !1074, !994, !1005, !939}
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64, align: 64)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1076 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1002, file: !14, line: 3495, baseType: !1078, size: 64, align: 64, offset: 704)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64, align: 64)
!1079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1080)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1081)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1082)
!1082 = !{!1083, !1084}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1081, file: !14, line: 3402, baseType: !939, size: 32, align: 32)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1081, file: !14, line: 3403, baseType: !1005, size: 64, align: 64, offset: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1002, file: !14, line: 3507, baseType: !1005, size: 64, align: 64, offset: 768)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1002, file: !14, line: 3516, baseType: !939, size: 32, align: 32, offset: 832)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1002, file: !14, line: 3517, baseType: !1088, size: 64, align: 64, offset: 896)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64, align: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1002, file: !14, line: 3527, baseType: !1090, size: 64, align: 64, offset: 960)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64, align: 64)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!939, !1093}
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64, align: 64)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1095)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1096)
!1096 = !{!1097, !1098, !1099, !1100, !1103, !1104, !1105, !1106, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1382, !1386, !1387, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1572, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1095, file: !14, line: 1561, baseType: !1037, size: 64, align: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1095, file: !14, line: 1562, baseType: !939, size: 32, align: 32, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1095, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1095, file: !14, line: 1565, baseType: !1101, size: 64, align: 64, offset: 128)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64, align: 64)
!1102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1095, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1095, file: !14, line: 1581, baseType: !993, size: 32, align: 32, offset: 224)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1095, file: !14, line: 1583, baseType: !994, size: 64, align: 64, offset: 256)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1095, file: !14, line: 1591, baseType: !1107, size: 64, align: 64, offset: 320)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64, align: 64)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1109, line: 129, size: 1664, align: 64, elements: !1110)
!1109 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1110 = !{!1111, !1112, !1113, !1114, !1208, !1229, !1230, !1259, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1108, file: !1109, line: 136, baseType: !939, size: 32, align: 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1108, file: !1109, line: 151, baseType: !939, size: 32, align: 32, offset: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1108, file: !1109, line: 157, baseType: !939, size: 32, align: 32, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1108, file: !1109, line: 159, baseType: !1115, size: 64, align: 64, offset: 128)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1118)
!1118 = !{!1119, !1122, !1124, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1162, !1164, !1165, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1196, !1197, !1198, !1199, !1200, !1201, !1204, !1205, !1206, !1207}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1117, file: !722, line: 282, baseType: !1120, size: 512, align: 64)
!1120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1121, size: 512, align: 64, elements: !940)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64, align: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1117, file: !722, line: 299, baseType: !1123, size: 256, align: 32, offset: 512)
!1123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 256, align: 32, elements: !940)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1117, file: !722, line: 315, baseType: !1125, size: 64, align: 64, offset: 768)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64, align: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1117, file: !722, line: 326, baseType: !939, size: 32, align: 32, offset: 832)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1117, file: !722, line: 326, baseType: !939, size: 32, align: 32, offset: 864)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1117, file: !722, line: 334, baseType: !939, size: 32, align: 32, offset: 896)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1117, file: !722, line: 341, baseType: !939, size: 32, align: 32, offset: 928)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1117, file: !722, line: 346, baseType: !939, size: 32, align: 32, offset: 960)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1117, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1117, file: !722, line: 356, baseType: !1015, size: 64, align: 32, offset: 1024)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1117, file: !722, line: 361, baseType: !981, size: 64, align: 64, offset: 1088)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1117, file: !722, line: 369, baseType: !981, size: 64, align: 64, offset: 1152)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1117, file: !722, line: 377, baseType: !981, size: 64, align: 64, offset: 1216)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1117, file: !722, line: 382, baseType: !939, size: 32, align: 32, offset: 1280)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1117, file: !722, line: 386, baseType: !939, size: 32, align: 32, offset: 1312)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1117, file: !722, line: 391, baseType: !939, size: 32, align: 32, offset: 1344)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1117, file: !722, line: 396, baseType: !994, size: 64, align: 64, offset: 1408)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1117, file: !722, line: 403, baseType: !1141, size: 512, align: 64, offset: 1472)
!1141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 512, align: 64, elements: !940)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1117, file: !722, line: 410, baseType: !939, size: 32, align: 32, offset: 1984)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1117, file: !722, line: 415, baseType: !939, size: 32, align: 32, offset: 2016)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1117, file: !722, line: 420, baseType: !939, size: 32, align: 32, offset: 2048)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1117, file: !722, line: 425, baseType: !939, size: 32, align: 32, offset: 2080)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1117, file: !722, line: 435, baseType: !981, size: 64, align: 64, offset: 2112)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1117, file: !722, line: 440, baseType: !939, size: 32, align: 32, offset: 2176)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1117, file: !722, line: 445, baseType: !1033, size: 64, align: 64, offset: 2240)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1117, file: !722, line: 459, baseType: !1150, size: 512, align: 64, offset: 2304)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1151, size: 512, align: 64, elements: !940)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64, align: 64)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1153, line: 94, baseType: !1154)
!1153 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1153, line: 81, size: 192, align: 64, elements: !1155)
!1155 = !{!1156, !1160, !1161}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1154, file: !1153, line: 82, baseType: !1157, size: 64, align: 64)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64, align: 64)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1153, line: 73, baseType: !1159)
!1159 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1153, line: 73, flags: DIFlagFwdDecl)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1154, file: !1153, line: 89, baseType: !1121, size: 64, align: 64, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1154, file: !1153, line: 93, baseType: !939, size: 32, align: 32, offset: 128)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1117, file: !722, line: 473, baseType: !1163, size: 64, align: 64, offset: 2816)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64, align: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1117, file: !722, line: 477, baseType: !939, size: 32, align: 32, offset: 2880)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1117, file: !722, line: 479, baseType: !1166, size: 64, align: 64, offset: 2944)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64, align: 64)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64, align: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1170)
!1170 = !{!1171, !1172, !1173, !1174, !1179}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1169, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1169, file: !722, line: 203, baseType: !1121, size: 64, align: 64, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1169, file: !722, line: 204, baseType: !939, size: 32, align: 32, offset: 128)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1169, file: !722, line: 205, baseType: !1175, size: 64, align: 64, offset: 192)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1177, line: 86, baseType: !1178)
!1177 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1178 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1177, line: 86, flags: DIFlagFwdDecl)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1169, file: !722, line: 206, baseType: !1151, size: 64, align: 64, offset: 256)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1117, file: !722, line: 480, baseType: !939, size: 32, align: 32, offset: 3008)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1117, file: !722, line: 505, baseType: !939, size: 32, align: 32, offset: 3040)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1117, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1117, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1117, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1117, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1117, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1117, file: !722, line: 532, baseType: !981, size: 64, align: 64, offset: 3264)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1117, file: !722, line: 539, baseType: !981, size: 64, align: 64, offset: 3328)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1117, file: !722, line: 547, baseType: !981, size: 64, align: 64, offset: 3392)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1117, file: !722, line: 554, baseType: !1175, size: 64, align: 64, offset: 3456)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1117, file: !722, line: 563, baseType: !939, size: 32, align: 32, offset: 3520)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1117, file: !722, line: 572, baseType: !939, size: 32, align: 32, offset: 3552)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1117, file: !722, line: 581, baseType: !939, size: 32, align: 32, offset: 3584)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1117, file: !722, line: 588, baseType: !1195, size: 64, align: 64, offset: 3648)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64, align: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1117, file: !722, line: 593, baseType: !939, size: 32, align: 32, offset: 3712)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1117, file: !722, line: 596, baseType: !939, size: 32, align: 32, offset: 3744)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1117, file: !722, line: 599, baseType: !1151, size: 64, align: 64, offset: 3776)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1117, file: !722, line: 605, baseType: !1151, size: 64, align: 64, offset: 3840)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1117, file: !722, line: 616, baseType: !1151, size: 64, align: 64, offset: 3904)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1117, file: !722, line: 626, baseType: !1202, size: 64, align: 64, offset: 3968)
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1203, line: 216, baseType: !1034)
!1203 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1117, file: !722, line: 627, baseType: !1202, size: 64, align: 64, offset: 4032)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1117, file: !722, line: 628, baseType: !1202, size: 64, align: 64, offset: 4096)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1117, file: !722, line: 629, baseType: !1202, size: 64, align: 64, offset: 4160)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1117, file: !722, line: 645, baseType: !1151, size: 64, align: 64, offset: 4224)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1108, file: !1109, line: 161, baseType: !1209, size: 64, align: 64, offset: 192)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1109, line: 117, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1109, line: 100, size: 832, align: 64, elements: !1212)
!1212 = !{!1213, !1220, !1221, !1222, !1223, !1224, !1226, !1227, !1228}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1211, file: !1109, line: 105, baseType: !1214, size: 256, align: 64)
!1214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 256, align: 64, elements: !1218)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64, align: 64)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1153, line: 238, baseType: !1217)
!1217 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1153, line: 238, flags: DIFlagFwdDecl)
!1218 = !{!1219}
!1219 = !DISubrange(count: 4)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1211, file: !1109, line: 110, baseType: !939, size: 32, align: 32, offset: 256)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1211, file: !1109, line: 111, baseType: !939, size: 32, align: 32, offset: 288)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1211, file: !1109, line: 111, baseType: !939, size: 32, align: 32, offset: 320)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1211, file: !1109, line: 112, baseType: !1123, size: 256, align: 32, offset: 352)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1211, file: !1109, line: 113, baseType: !1225, size: 128, align: 32, offset: 608)
!1225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 128, align: 32, elements: !1218)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1211, file: !1109, line: 114, baseType: !939, size: 32, align: 32, offset: 736)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1211, file: !1109, line: 115, baseType: !939, size: 32, align: 32, offset: 768)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1211, file: !1109, line: 116, baseType: !939, size: 32, align: 32, offset: 800)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1108, file: !1109, line: 163, baseType: !994, size: 64, align: 64, offset: 256)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1108, file: !1109, line: 165, baseType: !1231, size: 128, align: 64, offset: 320)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1109, line: 122, baseType: !1232)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1109, line: 119, size: 128, align: 64, elements: !1233)
!1233 = !{!1234, !1258}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1232, file: !1109, line: 120, baseType: !1235, size: 64, align: 64)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64, align: 64)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1237)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1238)
!1238 = !{!1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1254, !1255, !1256, !1257}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1237, file: !14, line: 1451, baseType: !1151, size: 64, align: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1237, file: !14, line: 1461, baseType: !981, size: 64, align: 64, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1237, file: !14, line: 1467, baseType: !981, size: 64, align: 64, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1237, file: !14, line: 1468, baseType: !1121, size: 64, align: 64, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1237, file: !14, line: 1469, baseType: !939, size: 32, align: 32, offset: 256)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1237, file: !14, line: 1470, baseType: !939, size: 32, align: 32, offset: 288)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1237, file: !14, line: 1474, baseType: !939, size: 32, align: 32, offset: 320)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1237, file: !14, line: 1479, baseType: !1247, size: 64, align: 64, offset: 384)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64, align: 64)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1250)
!1250 = !{!1251, !1252, !1253}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1249, file: !14, line: 1412, baseType: !1121, size: 64, align: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1249, file: !14, line: 1413, baseType: !939, size: 32, align: 32, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1249, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1237, file: !14, line: 1480, baseType: !939, size: 32, align: 32, offset: 448)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1237, file: !14, line: 1486, baseType: !981, size: 64, align: 64, offset: 512)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1237, file: !14, line: 1488, baseType: !981, size: 64, align: 64, offset: 576)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1237, file: !14, line: 1497, baseType: !981, size: 64, align: 64, offset: 640)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1232, file: !1109, line: 121, baseType: !1115, size: 64, align: 64, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1108, file: !1109, line: 166, baseType: !1260, size: 128, align: 64, offset: 448)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1109, line: 127, baseType: !1261)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1109, line: 124, size: 128, align: 64, elements: !1262)
!1262 = !{!1263, !1336}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1261, file: !1109, line: 125, baseType: !1264, size: 64, align: 64)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64, align: 64)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64, align: 64)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1268)
!1268 = !{!1269, !1270, !1294, !1298, !1299, !1333, !1334, !1335}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1267, file: !14, line: 5751, baseType: !1037, size: 64, align: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1267, file: !14, line: 5756, baseType: !1271, size: 64, align: 64, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64, align: 64)
!1272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1274)
!1274 = !{!1275, !1276, !1279, !1280, !1281, !1285, !1289, !1293}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1273, file: !14, line: 5797, baseType: !1005, size: 64, align: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1273, file: !14, line: 5804, baseType: !1277, size: 64, align: 64, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64, align: 64)
!1278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1273, file: !14, line: 5815, baseType: !1037, size: 64, align: 64, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1273, file: !14, line: 5825, baseType: !939, size: 32, align: 32, offset: 192)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1273, file: !14, line: 5826, baseType: !1282, size: 64, align: 64, offset: 256)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64, align: 64)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!939, !1265}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1273, file: !14, line: 5827, baseType: !1286, size: 64, align: 64, offset: 320)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64, align: 64)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!939, !1265, !1235}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1273, file: !14, line: 5828, baseType: !1290, size: 64, align: 64, offset: 384)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64, align: 64)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{null, !1265}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1273, file: !14, line: 5829, baseType: !1290, size: 64, align: 64, offset: 448)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1267, file: !14, line: 5762, baseType: !1295, size: 64, align: 64, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64, align: 64)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1297)
!1297 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1267, file: !14, line: 5768, baseType: !994, size: 64, align: 64, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1267, file: !14, line: 5775, baseType: !1300, size: 64, align: 64, offset: 256)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64, align: 64)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1302, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1302, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1302, file: !14, line: 3948, baseType: !992, size: 32, align: 32, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1302, file: !14, line: 3958, baseType: !1121, size: 64, align: 64, offset: 128)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1302, file: !14, line: 3962, baseType: !939, size: 32, align: 32, offset: 192)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1302, file: !14, line: 3968, baseType: !939, size: 32, align: 32, offset: 224)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1302, file: !14, line: 3973, baseType: !981, size: 64, align: 64, offset: 256)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1302, file: !14, line: 3986, baseType: !939, size: 32, align: 32, offset: 320)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1302, file: !14, line: 3999, baseType: !939, size: 32, align: 32, offset: 352)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1302, file: !14, line: 4004, baseType: !939, size: 32, align: 32, offset: 384)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1302, file: !14, line: 4005, baseType: !939, size: 32, align: 32, offset: 416)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1302, file: !14, line: 4010, baseType: !939, size: 32, align: 32, offset: 448)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1302, file: !14, line: 4011, baseType: !939, size: 32, align: 32, offset: 480)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1302, file: !14, line: 4020, baseType: !1015, size: 64, align: 32, offset: 512)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1302, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1302, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1302, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1302, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1302, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1302, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1302, file: !14, line: 4039, baseType: !939, size: 32, align: 32, offset: 768)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1302, file: !14, line: 4046, baseType: !1033, size: 64, align: 64, offset: 832)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1302, file: !14, line: 4050, baseType: !939, size: 32, align: 32, offset: 896)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1302, file: !14, line: 4054, baseType: !939, size: 32, align: 32, offset: 928)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1302, file: !14, line: 4061, baseType: !939, size: 32, align: 32, offset: 960)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1302, file: !14, line: 4065, baseType: !939, size: 32, align: 32, offset: 992)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1302, file: !14, line: 4073, baseType: !939, size: 32, align: 32, offset: 1024)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1302, file: !14, line: 4080, baseType: !939, size: 32, align: 32, offset: 1056)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1302, file: !14, line: 4084, baseType: !939, size: 32, align: 32, offset: 1088)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1267, file: !14, line: 5781, baseType: !1300, size: 64, align: 64, offset: 320)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1267, file: !14, line: 5787, baseType: !1015, size: 64, align: 32, offset: 384)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1267, file: !14, line: 5793, baseType: !1015, size: 64, align: 32, offset: 448)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1261, file: !1109, line: 126, baseType: !939, size: 32, align: 32, offset: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1108, file: !1109, line: 172, baseType: !1235, size: 64, align: 64, offset: 576)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1108, file: !1109, line: 177, baseType: !1121, size: 64, align: 64, offset: 640)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1108, file: !1109, line: 178, baseType: !993, size: 32, align: 32, offset: 704)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1108, file: !1109, line: 180, baseType: !994, size: 64, align: 64, offset: 768)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1108, file: !1109, line: 185, baseType: !939, size: 32, align: 32, offset: 832)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1108, file: !1109, line: 190, baseType: !994, size: 64, align: 64, offset: 896)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1108, file: !1109, line: 195, baseType: !939, size: 32, align: 32, offset: 960)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1108, file: !1109, line: 200, baseType: !1235, size: 64, align: 64, offset: 1024)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1108, file: !1109, line: 201, baseType: !939, size: 32, align: 32, offset: 1088)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1108, file: !1109, line: 202, baseType: !1115, size: 64, align: 64, offset: 1152)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1108, file: !1109, line: 203, baseType: !939, size: 32, align: 32, offset: 1216)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1108, file: !1109, line: 205, baseType: !939, size: 32, align: 32, offset: 1248)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1108, file: !1109, line: 206, baseType: !939, size: 32, align: 32, offset: 1280)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1108, file: !1109, line: 209, baseType: !1202, size: 64, align: 64, offset: 1344)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1108, file: !1109, line: 212, baseType: !1202, size: 64, align: 64, offset: 1408)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1108, file: !1109, line: 213, baseType: !1115, size: 64, align: 64, offset: 1472)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1108, file: !1109, line: 215, baseType: !939, size: 32, align: 32, offset: 1536)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1108, file: !1109, line: 217, baseType: !939, size: 32, align: 32, offset: 1568)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1108, file: !1109, line: 220, baseType: !939, size: 32, align: 32, offset: 1600)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1095, file: !14, line: 1598, baseType: !994, size: 64, align: 64, offset: 384)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1095, file: !14, line: 1606, baseType: !981, size: 64, align: 64, offset: 448)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1095, file: !14, line: 1614, baseType: !939, size: 32, align: 32, offset: 512)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1095, file: !14, line: 1622, baseType: !939, size: 32, align: 32, offset: 544)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1095, file: !14, line: 1628, baseType: !939, size: 32, align: 32, offset: 576)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1095, file: !14, line: 1636, baseType: !939, size: 32, align: 32, offset: 608)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1095, file: !14, line: 1643, baseType: !939, size: 32, align: 32, offset: 640)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1095, file: !14, line: 1657, baseType: !1121, size: 64, align: 64, offset: 704)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1095, file: !14, line: 1658, baseType: !939, size: 32, align: 32, offset: 768)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1095, file: !14, line: 1679, baseType: !1015, size: 64, align: 32, offset: 800)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1095, file: !14, line: 1688, baseType: !939, size: 32, align: 32, offset: 864)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1095, file: !14, line: 1712, baseType: !939, size: 32, align: 32, offset: 896)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1095, file: !14, line: 1729, baseType: !939, size: 32, align: 32, offset: 928)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1095, file: !14, line: 1729, baseType: !939, size: 32, align: 32, offset: 960)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1095, file: !14, line: 1744, baseType: !939, size: 32, align: 32, offset: 992)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1095, file: !14, line: 1744, baseType: !939, size: 32, align: 32, offset: 1024)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1095, file: !14, line: 1751, baseType: !939, size: 32, align: 32, offset: 1056)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1095, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1095, file: !14, line: 1791, baseType: !1375, size: 64, align: 64, offset: 1152)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64, align: 64)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{null, !1378, !1379, !1381, !939, !939, !939}
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64, align: 64)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64, align: 64)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1116)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64, align: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1095, file: !14, line: 1808, baseType: !1383, size: 64, align: 64, offset: 1216)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64, align: 64)
!1384 = !DISubroutineType(types: !1385)
!1385 = !{!473, !1378, !1022}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1095, file: !14, line: 1816, baseType: !939, size: 32, align: 32, offset: 1280)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1095, file: !14, line: 1825, baseType: !1388, size: 32, align: 32, offset: 1312)
!1388 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1095, file: !14, line: 1830, baseType: !939, size: 32, align: 32, offset: 1344)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1095, file: !14, line: 1838, baseType: !1388, size: 32, align: 32, offset: 1376)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1095, file: !14, line: 1846, baseType: !939, size: 32, align: 32, offset: 1408)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1095, file: !14, line: 1851, baseType: !939, size: 32, align: 32, offset: 1440)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1095, file: !14, line: 1861, baseType: !1388, size: 32, align: 32, offset: 1472)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1095, file: !14, line: 1868, baseType: !1388, size: 32, align: 32, offset: 1504)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1095, file: !14, line: 1875, baseType: !1388, size: 32, align: 32, offset: 1536)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1095, file: !14, line: 1882, baseType: !1388, size: 32, align: 32, offset: 1568)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1095, file: !14, line: 1889, baseType: !1388, size: 32, align: 32, offset: 1600)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1095, file: !14, line: 1896, baseType: !1388, size: 32, align: 32, offset: 1632)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1095, file: !14, line: 1903, baseType: !1388, size: 32, align: 32, offset: 1664)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1095, file: !14, line: 1910, baseType: !939, size: 32, align: 32, offset: 1696)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1095, file: !14, line: 1915, baseType: !939, size: 32, align: 32, offset: 1728)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1095, file: !14, line: 1926, baseType: !1381, size: 64, align: 64, offset: 1792)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1095, file: !14, line: 1935, baseType: !1015, size: 64, align: 32, offset: 1856)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1095, file: !14, line: 1942, baseType: !939, size: 32, align: 32, offset: 1920)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1095, file: !14, line: 1948, baseType: !939, size: 32, align: 32, offset: 1952)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1095, file: !14, line: 1954, baseType: !939, size: 32, align: 32, offset: 1984)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1095, file: !14, line: 1960, baseType: !939, size: 32, align: 32, offset: 2016)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1095, file: !14, line: 1984, baseType: !939, size: 32, align: 32, offset: 2048)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1095, file: !14, line: 1991, baseType: !939, size: 32, align: 32, offset: 2080)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1095, file: !14, line: 1996, baseType: !939, size: 32, align: 32, offset: 2112)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1095, file: !14, line: 2004, baseType: !939, size: 32, align: 32, offset: 2144)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1095, file: !14, line: 2011, baseType: !939, size: 32, align: 32, offset: 2176)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1095, file: !14, line: 2018, baseType: !939, size: 32, align: 32, offset: 2208)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1095, file: !14, line: 2027, baseType: !939, size: 32, align: 32, offset: 2240)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1095, file: !14, line: 2034, baseType: !939, size: 32, align: 32, offset: 2272)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1095, file: !14, line: 2044, baseType: !939, size: 32, align: 32, offset: 2304)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1095, file: !14, line: 2054, baseType: !1418, size: 64, align: 64, offset: 2368)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64, align: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1095, file: !14, line: 2061, baseType: !1418, size: 64, align: 64, offset: 2432)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1095, file: !14, line: 2066, baseType: !939, size: 32, align: 32, offset: 2496)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1095, file: !14, line: 2070, baseType: !939, size: 32, align: 32, offset: 2528)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1095, file: !14, line: 2078, baseType: !939, size: 32, align: 32, offset: 2560)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1095, file: !14, line: 2085, baseType: !939, size: 32, align: 32, offset: 2592)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1095, file: !14, line: 2092, baseType: !939, size: 32, align: 32, offset: 2624)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1095, file: !14, line: 2099, baseType: !939, size: 32, align: 32, offset: 2656)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1095, file: !14, line: 2106, baseType: !939, size: 32, align: 32, offset: 2688)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1095, file: !14, line: 2113, baseType: !939, size: 32, align: 32, offset: 2720)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1095, file: !14, line: 2120, baseType: !939, size: 32, align: 32, offset: 2752)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1095, file: !14, line: 2125, baseType: !939, size: 32, align: 32, offset: 2784)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1095, file: !14, line: 2133, baseType: !939, size: 32, align: 32, offset: 2816)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1095, file: !14, line: 2140, baseType: !939, size: 32, align: 32, offset: 2848)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1095, file: !14, line: 2145, baseType: !939, size: 32, align: 32, offset: 2880)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1095, file: !14, line: 2153, baseType: !939, size: 32, align: 32, offset: 2912)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1095, file: !14, line: 2158, baseType: !939, size: 32, align: 32, offset: 2944)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1095, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1095, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1095, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1095, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1095, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1095, file: !14, line: 2203, baseType: !939, size: 32, align: 32, offset: 3136)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1095, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1095, file: !14, line: 2212, baseType: !939, size: 32, align: 32, offset: 3200)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1095, file: !14, line: 2213, baseType: !939, size: 32, align: 32, offset: 3232)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1095, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1095, file: !14, line: 2232, baseType: !939, size: 32, align: 32, offset: 3296)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1095, file: !14, line: 2243, baseType: !939, size: 32, align: 32, offset: 3328)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1095, file: !14, line: 2249, baseType: !939, size: 32, align: 32, offset: 3360)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1095, file: !14, line: 2256, baseType: !939, size: 32, align: 32, offset: 3392)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1095, file: !14, line: 2263, baseType: !1033, size: 64, align: 64, offset: 3456)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1095, file: !14, line: 2270, baseType: !1033, size: 64, align: 64, offset: 3520)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1095, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1095, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1095, file: !14, line: 2367, baseType: !1454, size: 64, align: 64, offset: 3648)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64, align: 64)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!939, !1378, !1115, !939}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1095, file: !14, line: 2383, baseType: !939, size: 32, align: 32, offset: 3712)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1095, file: !14, line: 2386, baseType: !1388, size: 32, align: 32, offset: 3744)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1095, file: !14, line: 2387, baseType: !1388, size: 32, align: 32, offset: 3776)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1095, file: !14, line: 2394, baseType: !939, size: 32, align: 32, offset: 3808)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1095, file: !14, line: 2401, baseType: !939, size: 32, align: 32, offset: 3840)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1095, file: !14, line: 2408, baseType: !939, size: 32, align: 32, offset: 3872)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1095, file: !14, line: 2415, baseType: !939, size: 32, align: 32, offset: 3904)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1095, file: !14, line: 2422, baseType: !939, size: 32, align: 32, offset: 3936)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1095, file: !14, line: 2423, baseType: !1466, size: 64, align: 64, offset: 3968)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64, align: 64)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1469)
!1469 = !{!1470, !1471, !1472, !1473}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1468, file: !14, line: 827, baseType: !939, size: 32, align: 32)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1468, file: !14, line: 828, baseType: !939, size: 32, align: 32, offset: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1468, file: !14, line: 829, baseType: !939, size: 32, align: 32, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1468, file: !14, line: 830, baseType: !1388, size: 32, align: 32, offset: 96)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1095, file: !14, line: 2430, baseType: !981, size: 64, align: 64, offset: 4032)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1095, file: !14, line: 2437, baseType: !981, size: 64, align: 64, offset: 4096)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1095, file: !14, line: 2444, baseType: !1388, size: 32, align: 32, offset: 4160)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1095, file: !14, line: 2451, baseType: !1388, size: 32, align: 32, offset: 4192)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1095, file: !14, line: 2458, baseType: !939, size: 32, align: 32, offset: 4224)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1095, file: !14, line: 2469, baseType: !939, size: 32, align: 32, offset: 4256)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1095, file: !14, line: 2475, baseType: !939, size: 32, align: 32, offset: 4288)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1095, file: !14, line: 2481, baseType: !939, size: 32, align: 32, offset: 4320)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1095, file: !14, line: 2485, baseType: !939, size: 32, align: 32, offset: 4352)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1095, file: !14, line: 2489, baseType: !939, size: 32, align: 32, offset: 4384)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1095, file: !14, line: 2493, baseType: !939, size: 32, align: 32, offset: 4416)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1095, file: !14, line: 2501, baseType: !939, size: 32, align: 32, offset: 4448)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1095, file: !14, line: 2506, baseType: !939, size: 32, align: 32, offset: 4480)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1095, file: !14, line: 2510, baseType: !939, size: 32, align: 32, offset: 4512)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1095, file: !14, line: 2514, baseType: !981, size: 64, align: 64, offset: 4544)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1095, file: !14, line: 2528, baseType: !1490, size: 64, align: 64, offset: 4608)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64, align: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{null, !1378, !994, !939, !939}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1095, file: !14, line: 2534, baseType: !939, size: 32, align: 32, offset: 4672)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1095, file: !14, line: 2545, baseType: !939, size: 32, align: 32, offset: 4704)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1095, file: !14, line: 2547, baseType: !939, size: 32, align: 32, offset: 4736)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1095, file: !14, line: 2549, baseType: !939, size: 32, align: 32, offset: 4768)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1095, file: !14, line: 2551, baseType: !939, size: 32, align: 32, offset: 4800)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1095, file: !14, line: 2553, baseType: !939, size: 32, align: 32, offset: 4832)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1095, file: !14, line: 2555, baseType: !939, size: 32, align: 32, offset: 4864)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1095, file: !14, line: 2557, baseType: !939, size: 32, align: 32, offset: 4896)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1095, file: !14, line: 2559, baseType: !939, size: 32, align: 32, offset: 4928)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1095, file: !14, line: 2563, baseType: !939, size: 32, align: 32, offset: 4960)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1095, file: !14, line: 2571, baseType: !1504, size: 64, align: 64, offset: 4992)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64, align: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1095, file: !14, line: 2579, baseType: !1504, size: 64, align: 64, offset: 5056)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1095, file: !14, line: 2586, baseType: !939, size: 32, align: 32, offset: 5120)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1095, file: !14, line: 2615, baseType: !939, size: 32, align: 32, offset: 5152)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1095, file: !14, line: 2627, baseType: !939, size: 32, align: 32, offset: 5184)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1095, file: !14, line: 2637, baseType: !939, size: 32, align: 32, offset: 5216)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1095, file: !14, line: 2681, baseType: !939, size: 32, align: 32, offset: 5248)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1095, file: !14, line: 2709, baseType: !981, size: 64, align: 64, offset: 5312)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1095, file: !14, line: 2716, baseType: !1513, size: 64, align: 64, offset: 5376)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64, align: 64)
!1514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1520, !1521, !1522, !1526, !1532, !1536, !1537, !1538, !1539, !1545, !1546, !1547, !1548, !1549}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1515, file: !14, line: 3642, baseType: !1005, size: 64, align: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1515, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1515, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1515, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1515, file: !14, line: 3669, baseType: !939, size: 32, align: 32, offset: 160)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1515, file: !14, line: 3682, baseType: !1523, size: 64, align: 64, offset: 192)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64, align: 64)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!939, !1093, !1115}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1515, file: !14, line: 3698, baseType: !1527, size: 64, align: 64, offset: 256)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64, align: 64)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!939, !1093, !1530, !992}
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64, align: 64)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !932)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1515, file: !14, line: 3712, baseType: !1533, size: 64, align: 64, offset: 320)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64, align: 64)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!939, !1093, !939, !1530, !992}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1515, file: !14, line: 3726, baseType: !1527, size: 64, align: 64, offset: 384)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1515, file: !14, line: 3737, baseType: !1090, size: 64, align: 64, offset: 448)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1515, file: !14, line: 3746, baseType: !939, size: 32, align: 32, offset: 512)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1515, file: !14, line: 3757, baseType: !1540, size: 64, align: 64, offset: 576)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64, align: 64)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{null, !1543}
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64, align: 64)
!1544 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1515, file: !14, line: 3766, baseType: !1090, size: 64, align: 64, offset: 640)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1515, file: !14, line: 3774, baseType: !1090, size: 64, align: 64, offset: 704)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1515, file: !14, line: 3780, baseType: !939, size: 32, align: 32, offset: 768)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1515, file: !14, line: 3785, baseType: !939, size: 32, align: 32, offset: 800)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1515, file: !14, line: 3795, baseType: !1550, size: 64, align: 64, offset: 832)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64, align: 64)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!939, !1093, !1151}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1095, file: !14, line: 2728, baseType: !994, size: 64, align: 64, offset: 5440)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1095, file: !14, line: 2735, baseType: !1141, size: 512, align: 64, offset: 5504)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1095, file: !14, line: 2742, baseType: !939, size: 32, align: 32, offset: 6016)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1095, file: !14, line: 2755, baseType: !939, size: 32, align: 32, offset: 6048)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1095, file: !14, line: 2776, baseType: !939, size: 32, align: 32, offset: 6080)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1095, file: !14, line: 2783, baseType: !939, size: 32, align: 32, offset: 6112)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1095, file: !14, line: 2791, baseType: !939, size: 32, align: 32, offset: 6144)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1095, file: !14, line: 2802, baseType: !1115, size: 64, align: 64, offset: 6208)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1095, file: !14, line: 2811, baseType: !939, size: 32, align: 32, offset: 6272)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1095, file: !14, line: 2821, baseType: !939, size: 32, align: 32, offset: 6304)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1095, file: !14, line: 2830, baseType: !939, size: 32, align: 32, offset: 6336)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1095, file: !14, line: 2840, baseType: !939, size: 32, align: 32, offset: 6368)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1095, file: !14, line: 2851, baseType: !1566, size: 64, align: 64, offset: 6400)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64, align: 64)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!939, !1378, !1569, !994, !1381, !939, !939}
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64, align: 64)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!939, !1378, !994}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1095, file: !14, line: 2871, baseType: !1573, size: 64, align: 64, offset: 6464)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64, align: 64)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!939, !1378, !1576, !994, !1381, !939}
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64, align: 64)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!939, !1378, !994, !939, !939}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1095, file: !14, line: 2878, baseType: !939, size: 32, align: 32, offset: 6528)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1095, file: !14, line: 2885, baseType: !939, size: 32, align: 32, offset: 6560)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1095, file: !14, line: 3005, baseType: !939, size: 32, align: 32, offset: 6592)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1095, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1095, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1095, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1095, file: !14, line: 3037, baseType: !1121, size: 64, align: 64, offset: 6720)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1095, file: !14, line: 3038, baseType: !939, size: 32, align: 32, offset: 6784)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1095, file: !14, line: 3050, baseType: !1033, size: 64, align: 64, offset: 6848)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1095, file: !14, line: 3065, baseType: !939, size: 32, align: 32, offset: 6912)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1095, file: !14, line: 3083, baseType: !939, size: 32, align: 32, offset: 6944)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1095, file: !14, line: 3092, baseType: !1015, size: 64, align: 32, offset: 6976)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1095, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1095, file: !14, line: 3106, baseType: !1015, size: 64, align: 32, offset: 7072)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1095, file: !14, line: 3113, baseType: !1594, size: 64, align: 64, offset: 7168)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64, align: 64)
!1595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1596)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1598)
!1598 = !{!1599, !1600, !1601, !1602, !1603, !1604, !1607}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1597, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1597, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1597, file: !14, line: 720, baseType: !1005, size: 64, align: 64, offset: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1597, file: !14, line: 724, baseType: !1005, size: 64, align: 64, offset: 128)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1597, file: !14, line: 728, baseType: !939, size: 32, align: 32, offset: 192)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1597, file: !14, line: 734, baseType: !1605, size: 64, align: 64, offset: 256)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64, align: 64)
!1606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1005)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1597, file: !14, line: 739, baseType: !1608, size: 64, align: 64, offset: 320)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64, align: 64)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1081)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1095, file: !14, line: 3129, baseType: !981, size: 64, align: 64, offset: 7232)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1095, file: !14, line: 3130, baseType: !981, size: 64, align: 64, offset: 7296)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1095, file: !14, line: 3131, baseType: !981, size: 64, align: 64, offset: 7360)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1095, file: !14, line: 3132, baseType: !981, size: 64, align: 64, offset: 7424)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1095, file: !14, line: 3139, baseType: !1504, size: 64, align: 64, offset: 7488)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1095, file: !14, line: 3147, baseType: !939, size: 32, align: 32, offset: 7552)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1095, file: !14, line: 3165, baseType: !939, size: 32, align: 32, offset: 7584)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1095, file: !14, line: 3172, baseType: !939, size: 32, align: 32, offset: 7616)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1095, file: !14, line: 3180, baseType: !939, size: 32, align: 32, offset: 7648)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1095, file: !14, line: 3191, baseType: !1418, size: 64, align: 64, offset: 7680)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1095, file: !14, line: 3199, baseType: !1121, size: 64, align: 64, offset: 7744)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1095, file: !14, line: 3207, baseType: !1504, size: 64, align: 64, offset: 7808)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1095, file: !14, line: 3214, baseType: !993, size: 32, align: 32, offset: 7872)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1095, file: !14, line: 3224, baseType: !1247, size: 64, align: 64, offset: 7936)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1095, file: !14, line: 3225, baseType: !939, size: 32, align: 32, offset: 8000)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1095, file: !14, line: 3249, baseType: !1151, size: 64, align: 64, offset: 8064)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1095, file: !14, line: 3256, baseType: !939, size: 32, align: 32, offset: 8128)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1095, file: !14, line: 3271, baseType: !939, size: 32, align: 32, offset: 8160)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1095, file: !14, line: 3279, baseType: !981, size: 64, align: 64, offset: 8192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1095, file: !14, line: 3301, baseType: !1151, size: 64, align: 64, offset: 8256)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1095, file: !14, line: 3310, baseType: !939, size: 32, align: 32, offset: 8320)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1095, file: !14, line: 3337, baseType: !939, size: 32, align: 32, offset: 8352)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1095, file: !14, line: 3351, baseType: !939, size: 32, align: 32, offset: 8384)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1095, file: !14, line: 3359, baseType: !939, size: 32, align: 32, offset: 8416)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1002, file: !14, line: 3535, baseType: !1635, size: 64, align: 64, offset: 1024)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64, align: 64)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!939, !1093, !1638}
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64, align: 64)
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1094)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1002, file: !14, line: 3541, baseType: !1641, size: 64, align: 64, offset: 1088)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64, align: 64)
!1642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1643)
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1109, line: 223, size: 128, align: 64, elements: !1645)
!1645 = !{!1646, !1647}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1644, file: !1109, line: 224, baseType: !1530, size: 64, align: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1644, file: !1109, line: 225, baseType: !1530, size: 64, align: 64, offset: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1002, file: !14, line: 3549, baseType: !1649, size: 64, align: 64, offset: 1152)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64, align: 64)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{null, !1088}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1002, file: !14, line: 3551, baseType: !1090, size: 64, align: 64, offset: 1216)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1002, file: !14, line: 3552, baseType: !1654, size: 64, align: 64, offset: 1280)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64, align: 64)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!939, !1093, !1121, !939, !1657}
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64, align: 64)
!1658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1660)
!1660 = !{!1661, !1662, !1663, !1664, !1665, !1689}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1659, file: !14, line: 3921, baseType: !960, size: 16, align: 16)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1659, file: !14, line: 3922, baseType: !992, size: 32, align: 32, offset: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1659, file: !14, line: 3923, baseType: !992, size: 32, align: 32, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1659, file: !14, line: 3924, baseType: !993, size: 32, align: 32, offset: 96)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1659, file: !14, line: 3925, baseType: !1666, size: 64, align: 64, offset: 128)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64, align: 64)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64, align: 64)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1669)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1670)
!1670 = !{!1671, !1672, !1673, !1674, !1675, !1676, !1682, !1684, !1685, !1686, !1687, !1688}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1669, file: !14, line: 3886, baseType: !939, size: 32, align: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1669, file: !14, line: 3887, baseType: !939, size: 32, align: 32, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1669, file: !14, line: 3888, baseType: !939, size: 32, align: 32, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1669, file: !14, line: 3889, baseType: !939, size: 32, align: 32, offset: 96)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1669, file: !14, line: 3890, baseType: !939, size: 32, align: 32, offset: 128)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1669, file: !14, line: 3897, baseType: !1677, size: 768, align: 64, offset: 192)
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1679)
!1679 = !{!1680, !1681}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1678, file: !14, line: 3855, baseType: !1120, size: 512, align: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1678, file: !14, line: 3857, baseType: !1123, size: 256, align: 32, offset: 512)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1669, file: !14, line: 3903, baseType: !1683, size: 256, align: 64, offset: 960)
!1683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1121, size: 256, align: 64, elements: !1218)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1669, file: !14, line: 3904, baseType: !1225, size: 128, align: 32, offset: 1216)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1669, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1669, file: !14, line: 3908, baseType: !1504, size: 64, align: 64, offset: 1408)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1669, file: !14, line: 3915, baseType: !1504, size: 64, align: 64, offset: 1472)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1669, file: !14, line: 3917, baseType: !939, size: 32, align: 32, offset: 1536)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1659, file: !14, line: 3926, baseType: !981, size: 64, align: 64, offset: 192)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1002, file: !14, line: 3564, baseType: !1691, size: 64, align: 64, offset: 1344)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64, align: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!939, !1093, !1235, !1379, !1381}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1002, file: !14, line: 3566, baseType: !1695, size: 64, align: 64, offset: 1408)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64, align: 64)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!939, !1093, !994, !1381, !1235}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1002, file: !14, line: 3567, baseType: !1090, size: 64, align: 64, offset: 1472)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1002, file: !14, line: 3576, baseType: !1700, size: 64, align: 64, offset: 1536)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64, align: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!939, !1093, !1379}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1002, file: !14, line: 3577, baseType: !1704, size: 64, align: 64, offset: 1600)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64, align: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!939, !1093, !1235}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1002, file: !14, line: 3584, baseType: !1523, size: 64, align: 64, offset: 1664)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1002, file: !14, line: 3589, baseType: !1709, size: 64, align: 64, offset: 1728)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64, align: 64)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{null, !1093}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1002, file: !14, line: 3594, baseType: !939, size: 32, align: 32, offset: 1792)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1002, file: !14, line: 3600, baseType: !1005, size: 64, align: 64, offset: 1856)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1002, file: !14, line: 3609, baseType: !1715, size: 64, align: 64, offset: 1920)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64, align: 64)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64, align: 64)
!1717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1718)
!1718 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1719 = distinct !DIGlobalVariable(name: "ff_truehd_encoder", scope: !0, file: !897, line: 2402, type: !1001, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_truehd_encoder)
!1720 = distinct !DIGlobalVariable(name: "restart_channel_params", scope: !0, file: !897, line: 203, type: !1721, isLocal: true, isDefinition: true, variable: [8 x %struct.ChannelParams]* @restart_channel_params)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !922, size: 10496, align: 32, elements: !940)
!1722 = distinct !DIGlobalVariable(name: "restart_decoding_params", scope: !0, file: !897, line: 204, type: !1723, isLocal: true, isDefinition: true, variable: [4 x %struct.DecodingParams]* @restart_decoding_params)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 21888, align: 32, elements: !1218)
!1724 = distinct !DIGlobalVariable(name: "codebook_extremes", scope: !0, file: !897, line: 1552, type: !1725, isLocal: true, isDefinition: true, variable: [3 x [2 x i32]]* @codebook_extremes)
!1725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1026, size: 192, align: 32, elements: !1726)
!1726 = !{!1727, !945}
!1727 = !DISubrange(count: 3)
!1728 = distinct !DIGlobalVariable(name: "restart_best_offset", scope: !0, file: !897, line: 205, type: !1729, isLocal: true, isDefinition: true, variable: [4 x %struct.BestOffset]* @restart_best_offset)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 512, align: 32, elements: !1218)
!1730 = !DIDerivedType(tag: DW_TAG_typedef, name: "BestOffset", file: !897, line: 94, baseType: !1731)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BestOffset", file: !897, line: 88, size: 128, align: 32, elements: !1732)
!1732 = !{!1733, !1734, !1735, !1736, !1737}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1731, file: !897, line: 89, baseType: !950, size: 16, align: 16)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "bitcount", scope: !1731, file: !897, line: 90, baseType: !939, size: 32, align: 32, offset: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "lsb_bits", scope: !1731, file: !897, line: 91, baseType: !939, size: 32, align: 32, offset: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1731, file: !897, line: 92, baseType: !950, size: 16, align: 16, offset: 96)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1731, file: !897, line: 93, baseType: !950, size: 16, align: 16, offset: 112)
!1738 = distinct !DIGlobalVariable(name: "path_counter_codebook", scope: !0, file: !897, line: 1951, type: !1739, isLocal: true, isDefinition: true, variable: [4 x i8*]* @path_counter_codebook)
!1739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1005, size: 256, align: 64, elements: !1218)
!1740 = !{i32 2, !"Dwarf Version", i32 4}
!1741 = !{i32 2, !"Debug Info Version", i32 3}
!1742 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1743 = distinct !DISubprogram(name: "mlp_encode_init", scope: !897, file: !897, line: 486, type: !1091, isLocal: true, isDefinition: true, scopeLine: 487, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!1744 = !{}
!1745 = !DILocalVariable(name: "avctx", arg: 1, scope: !1743, file: !897, line: 486, type: !1093)
!1746 = !DIExpression()
!1747 = !DILocation(line: 486, column: 66, scope: !1743)
!1748 = !DILocalVariable(name: "ctx", scope: !1743, file: !897, line: 488, type: !1749)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64, align: 64)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLPEncodeContext", file: !897, line: 201, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !897, line: 102, size: 929024, align: 256, elements: !1752)
!1752 = !{!1753, !1754, !1755, !1756, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1797, !1798, !1799, !1800, !1804, !1805, !1819, !1822, !1825, !1827, !1828, !1829, !1830, !1832, !1833, !1834, !1836, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1751, file: !897, line: 103, baseType: !1093, size: 64, align: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "num_substreams", scope: !1751, file: !897, line: 105, baseType: !939, size: 32, align: 32, offset: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "num_channels", scope: !1751, file: !897, line: 107, baseType: !939, size: 32, align: 32, offset: 96)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "coded_sample_fmt", scope: !1751, file: !897, line: 110, baseType: !1757, size: 64, align: 32, offset: 128)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 64, align: 32, elements: !944)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "coded_sample_rate", scope: !1751, file: !897, line: 111, baseType: !1757, size: 64, align: 32, offset: 192)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "coded_peak_bitrate", scope: !1751, file: !897, line: 112, baseType: !939, size: 32, align: 32, offset: 256)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1751, file: !897, line: 114, baseType: !939, size: 32, align: 32, offset: 288)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "substream_info", scope: !1751, file: !897, line: 117, baseType: !939, size: 32, align: 32, offset: 320)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1751, file: !897, line: 118, baseType: !939, size: 32, align: 32, offset: 352)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "wordlength", scope: !1751, file: !897, line: 119, baseType: !939, size: 32, align: 32, offset: 384)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "channel_occupancy", scope: !1751, file: !897, line: 120, baseType: !939, size: 32, align: 32, offset: 416)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "summary_info", scope: !1751, file: !897, line: 121, baseType: !939, size: 32, align: 32, offset: 448)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "inout_buffer", scope: !1751, file: !897, line: 123, baseType: !1767, size: 64, align: 64, offset: 512)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64, align: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "major_inout_buffer", scope: !1751, file: !897, line: 124, baseType: !1767, size: 64, align: 64, offset: 576)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "write_buffer", scope: !1751, file: !897, line: 125, baseType: !1767, size: 64, align: 64, offset: 640)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "sample_buffer", scope: !1751, file: !897, line: 126, baseType: !1767, size: 64, align: 64, offset: 704)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "major_scratch_buffer", scope: !1751, file: !897, line: 127, baseType: !1767, size: 64, align: 64, offset: 768)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !1751, file: !897, line: 128, baseType: !1767, size: 64, align: 64, offset: 832)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_sample_buffer", scope: !1751, file: !897, line: 130, baseType: !1767, size: 64, align: 64, offset: 896)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "major_number_of_frames", scope: !1751, file: !897, line: 132, baseType: !993, size: 32, align: 32, offset: 960)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "next_major_number_of_frames", scope: !1751, file: !897, line: 133, baseType: !993, size: 32, align: 32, offset: 992)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "major_frame_size", scope: !1751, file: !897, line: 135, baseType: !993, size: 32, align: 32, offset: 1024)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "next_major_frame_size", scope: !1751, file: !897, line: 136, baseType: !993, size: 32, align: 32, offset: 1056)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "lossless_check_data", scope: !1751, file: !897, line: 138, baseType: !1767, size: 64, align: 64, offset: 1088)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "max_output_bits", scope: !1751, file: !897, line: 140, baseType: !1780, size: 64, align: 64, offset: 1152)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64, align: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1751, file: !897, line: 141, baseType: !1780, size: 64, align: 64, offset: 1216)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "frame_index", scope: !1751, file: !897, line: 142, baseType: !993, size: 32, align: 32, offset: 1280)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "one_sample_buffer_size", scope: !1751, file: !897, line: 144, baseType: !993, size: 32, align: 32, offset: 1312)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "max_restart_interval", scope: !1751, file: !897, line: 146, baseType: !993, size: 32, align: 32, offset: 1344)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "min_restart_interval", scope: !1751, file: !897, line: 147, baseType: !993, size: 32, align: 32, offset: 1376)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "restart_intervals", scope: !1751, file: !897, line: 148, baseType: !993, size: 32, align: 32, offset: 1408)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1751, file: !897, line: 150, baseType: !960, size: 16, align: 16, offset: 1440)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1751, file: !897, line: 151, baseType: !960, size: 16, align: 16, offset: 1456)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "channel_arrangement", scope: !1751, file: !897, line: 153, baseType: !932, size: 8, align: 8, offset: 1472)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ch_modifier_thd0", scope: !1751, file: !897, line: 155, baseType: !932, size: 8, align: 8, offset: 1480)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ch_modifier_thd1", scope: !1751, file: !897, line: 156, baseType: !932, size: 8, align: 8, offset: 1488)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ch_modifier_thd2", scope: !1751, file: !897, line: 157, baseType: !932, size: 8, align: 8, offset: 1496)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "seq_size", scope: !1751, file: !897, line: 159, baseType: !1794, size: 512, align: 32, offset: 1504)
!1794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !993, size: 512, align: 32, elements: !1795)
!1795 = !{!1796}
!1796 = !DISubrange(count: 16)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "seq_offset", scope: !1751, file: !897, line: 160, baseType: !1794, size: 512, align: 32, offset: 2016)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "sequence_size", scope: !1751, file: !897, line: 161, baseType: !993, size: 32, align: 32, offset: 2528)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "channel_params", scope: !1751, file: !897, line: 163, baseType: !921, size: 64, align: 64, offset: 2560)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "best_offset", scope: !1751, file: !897, line: 165, baseType: !1801, size: 69632, align: 32, offset: 2624)
!1801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 69632, align: 32, elements: !1802)
!1802 = !{!1803, !941, !1219}
!1803 = !DISubrange(count: 17)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "decoding_params", scope: !1751, file: !897, line: 167, baseType: !955, size: 64, align: 64, offset: 72256)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "restart_header", scope: !1751, file: !897, line: 168, baseType: !1806, size: 640, align: 32, offset: 72320)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1807, size: 640, align: 32, elements: !1218)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "RestartHeader", file: !897, line: 53, baseType: !1808)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !897, line: 39, size: 160, align: 32, elements: !1809)
!1809 = !{!1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "min_channel", scope: !1808, file: !897, line: 40, baseType: !932, size: 8, align: 8)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !1808, file: !897, line: 41, baseType: !932, size: 8, align: 8, offset: 8)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "max_matrix_channel", scope: !1808, file: !897, line: 42, baseType: !932, size: 8, align: 8, offset: 16)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "noise_shift", scope: !1808, file: !897, line: 44, baseType: !932, size: 8, align: 8, offset: 24)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "noisegen_seed", scope: !1808, file: !897, line: 45, baseType: !992, size: 32, align: 32, offset: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "data_check_present", scope: !1808, file: !897, line: 47, baseType: !939, size: 32, align: 32, offset: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "lossless_check_data", scope: !1808, file: !897, line: 49, baseType: !938, size: 32, align: 32, offset: 96)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "max_huff_lsbs", scope: !1808, file: !897, line: 51, baseType: !932, size: 8, align: 8, offset: 128)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "max_output_bits", scope: !1808, file: !897, line: 52, baseType: !932, size: 8, align: 8, offset: 136)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "major_channel_params", scope: !1751, file: !897, line: 170, baseType: !1820, size: 178432, align: 32, offset: 72960)
!1820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !922, size: 178432, align: 32, elements: !1821)
!1821 = !{!1803, !941}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "major_decoding_params", scope: !1751, file: !897, line: 171, baseType: !1823, size: 372096, align: 32, offset: 251392)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 372096, align: 32, elements: !1824)
!1824 = !{!1803, !1219}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "major_params_changed", scope: !1751, file: !897, line: 172, baseType: !1826, size: 2176, align: 32, offset: 623488)
!1826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 2176, align: 32, elements: !1824)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "major_cur_subblock_index", scope: !1751, file: !897, line: 174, baseType: !993, size: 32, align: 32, offset: 625664)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "major_filter_state_subblock", scope: !1751, file: !897, line: 175, baseType: !993, size: 32, align: 32, offset: 625696)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "major_number_of_subblocks", scope: !1751, file: !897, line: 176, baseType: !993, size: 32, align: 32, offset: 625728)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "cur_best_offset", scope: !1751, file: !897, line: 178, baseType: !1831, size: 64, align: 64, offset: 625792)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64, align: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "cur_channel_params", scope: !1751, file: !897, line: 179, baseType: !921, size: 64, align: 64, offset: 625856)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "cur_decoding_params", scope: !1751, file: !897, line: 180, baseType: !955, size: 64, align: 64, offset: 625920)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "cur_restart_header", scope: !1751, file: !897, line: 181, baseType: !1835, size: 64, align: 64, offset: 625984)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64, align: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "afq", scope: !1751, file: !897, line: 183, baseType: !1837, size: 256, align: 64, offset: 626048)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioFrameQueue", file: !1838, line: 39, baseType: !1839)
!1838 = !DIFile(filename: "libavcodec/audio_frame_queue.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioFrameQueue", file: !1838, line: 32, size: 256, align: 64, elements: !1840)
!1840 = !{!1841, !1842, !1843, !1844, !1851, !1852}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1839, file: !1838, line: 33, baseType: !1093, size: 64, align: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_delay", scope: !1839, file: !1838, line: 34, baseType: !939, size: 32, align: 32, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_samples", scope: !1839, file: !1838, line: 35, baseType: !939, size: 32, align: 32, offset: 96)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1839, file: !1838, line: 36, baseType: !1845, size: 64, align: 64, offset: 128)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64, align: 64)
!1846 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioFrame", file: !1838, line: 30, baseType: !1847)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioFrame", file: !1838, line: 27, size: 128, align: 64, elements: !1848)
!1848 = !{!1849, !1850}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1847, file: !1838, line: 28, baseType: !981, size: 64, align: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1847, file: !1838, line: 29, baseType: !939, size: 32, align: 32, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count", scope: !1839, file: !1838, line: 37, baseType: !993, size: 32, align: 32, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "frame_alloc", scope: !1839, file: !1838, line: 38, baseType: !993, size: 32, align: 32, offset: 224)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "starting_frame_index", scope: !1751, file: !897, line: 186, baseType: !993, size: 32, align: 32, offset: 626304)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "number_of_frames", scope: !1751, file: !897, line: 187, baseType: !993, size: 32, align: 32, offset: 626336)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "number_of_samples", scope: !1751, file: !897, line: 188, baseType: !993, size: 32, align: 32, offset: 626368)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "number_of_subblocks", scope: !1751, file: !897, line: 189, baseType: !993, size: 32, align: 32, offset: 626400)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "seq_index", scope: !1751, file: !897, line: 190, baseType: !993, size: 32, align: 32, offset: 626432)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "prev_channel_params", scope: !1751, file: !897, line: 192, baseType: !921, size: 64, align: 64, offset: 626496)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "prev_decoding_params", scope: !1751, file: !897, line: 193, baseType: !955, size: 64, align: 64, offset: 626560)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "seq_channel_params", scope: !1751, file: !897, line: 195, baseType: !921, size: 64, align: 64, offset: 626624)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "seq_decoding_params", scope: !1751, file: !897, line: 196, baseType: !955, size: 64, align: 64, offset: 626688)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "max_codebook_search", scope: !1751, file: !897, line: 198, baseType: !993, size: 32, align: 32, offset: 626752)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_ctx", scope: !1751, file: !897, line: 200, baseType: !1864, size: 302080, align: 256, offset: 626944)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "LPCContext", file: !888, line: 87, baseType: !1865)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LPCContext", file: !888, line: 52, size: 302080, align: 256, elements: !1866)
!1866 = !{!1867, !1868, !1869, !1870, !1873, !1874, !1878, !1884}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "blocksize", scope: !1865, file: !888, line: 53, baseType: !939, size: 32, align: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "max_order", scope: !1865, file: !888, line: 54, baseType: !939, size: 32, align: 32, offset: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_type", scope: !1865, file: !888, line: 55, baseType: !887, size: 32, align: 32, offset: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "windowed_buffer", scope: !1865, file: !888, line: 56, baseType: !1871, size: 64, align: 64, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64, align: 64)
!1872 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "windowed_samples", scope: !1865, file: !888, line: 57, baseType: !1871, size: 64, align: 64, offset: 192)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_apply_welch_window", scope: !1865, file: !888, line: 67, baseType: !1875, size: 64, align: 64, offset: 256)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64, align: 64)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{null, !995, !939, !1871}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_compute_autocorr", scope: !1865, file: !888, line: 82, baseType: !1879, size: 64, align: 64, offset: 320)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64, align: 64)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{null, !1882, !939, !939, !1871}
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64, align: 64)
!1883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1872)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "lls_models", scope: !1865, file: !888, line: 86, baseType: !1885, size: 301568, align: 256, offset: 512)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 301568, align: 256, elements: !944)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "LLSModel", file: !1887, line: 58, baseType: !1888)
!1887 = !DIFile(filename: "./libavutil/lls.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LLSModel", file: !1887, line: 38, size: 150784, align: 256, elements: !1889)
!1889 = !{!1890, !1894, !1898, !1901, !1902, !1907}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "covariance", scope: !1888, file: !1887, line: 39, baseType: !1891, size: 82944, align: 64)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1872, size: 82944, align: 64, elements: !1892)
!1892 = !{!1893, !1893}
!1893 = !DISubrange(count: 36)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "coeff", scope: !1888, file: !1887, line: 40, baseType: !1895, size: 65536, align: 64, offset: 82944)
!1895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1872, size: 65536, align: 64, elements: !1896)
!1896 = !{!1897, !1897}
!1897 = !DISubrange(count: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "variance", scope: !1888, file: !1887, line: 41, baseType: !1899, size: 2048, align: 64, offset: 148480)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1872, size: 2048, align: 64, elements: !1900)
!1900 = !{!1897}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "indep_count", scope: !1888, file: !1887, line: 42, baseType: !939, size: 32, align: 32, offset: 150528)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "update_lls", scope: !1888, file: !1887, line: 50, baseType: !1903, size: 64, align: 64, offset: 150592)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64, align: 64)
!1904 = !DISubroutineType(types: !1905)
!1905 = !{null, !1906, !1882}
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64, align: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_lls", scope: !1888, file: !1887, line: 57, baseType: !1908, size: 64, align: 64, offset: 150656)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64, align: 64)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{!1872, !1906, !1882, !939}
!1911 = !DILocation(line: 488, column: 23, scope: !1743)
!1912 = !DILocation(line: 488, column: 29, scope: !1743)
!1913 = !DILocation(line: 488, column: 36, scope: !1743)
!1914 = !DILocalVariable(name: "substr", scope: !1743, file: !897, line: 489, type: !993)
!1915 = !DILocation(line: 489, column: 18, scope: !1743)
!1916 = !DILocalVariable(name: "index", scope: !1743, file: !897, line: 489, type: !993)
!1917 = !DILocation(line: 489, column: 26, scope: !1743)
!1918 = !DILocalVariable(name: "sum", scope: !1743, file: !897, line: 490, type: !993)
!1919 = !DILocation(line: 490, column: 18, scope: !1743)
!1920 = !DILocalVariable(name: "size", scope: !1743, file: !897, line: 491, type: !993)
!1921 = !DILocation(line: 491, column: 18, scope: !1743)
!1922 = !DILocalVariable(name: "ret", scope: !1743, file: !897, line: 492, type: !939)
!1923 = !DILocation(line: 492, column: 9, scope: !1743)
!1924 = !DILocation(line: 494, column: 18, scope: !1743)
!1925 = !DILocation(line: 494, column: 5, scope: !1743)
!1926 = !DILocation(line: 494, column: 10, scope: !1743)
!1927 = !DILocation(line: 494, column: 16, scope: !1743)
!1928 = !DILocation(line: 496, column: 13, scope: !1743)
!1929 = !DILocation(line: 496, column: 20, scope: !1743)
!1930 = !DILocation(line: 496, column: 5, scope: !1743)
!1931 = !DILocation(line: 498, column: 9, scope: !1932)
!1932 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 496, column: 33)
!1933 = !DILocation(line: 498, column: 16, scope: !1932)
!1934 = !DILocation(line: 498, column: 27, scope: !1932)
!1935 = !DILocation(line: 499, column: 9, scope: !1932)
!1936 = !DILocation(line: 499, column: 14, scope: !1932)
!1937 = !DILocation(line: 499, column: 35, scope: !1932)
!1938 = !DILocation(line: 500, column: 9, scope: !1932)
!1939 = !DILocation(line: 500, column: 14, scope: !1932)
!1940 = !DILocation(line: 500, column: 17, scope: !1932)
!1941 = !DILocation(line: 501, column: 9, scope: !1932)
!1942 = !DILocation(line: 503, column: 9, scope: !1932)
!1943 = !DILocation(line: 503, column: 16, scope: !1932)
!1944 = !DILocation(line: 503, column: 27, scope: !1932)
!1945 = !DILocation(line: 504, column: 9, scope: !1932)
!1946 = !DILocation(line: 504, column: 14, scope: !1932)
!1947 = !DILocation(line: 504, column: 35, scope: !1932)
!1948 = !DILocation(line: 505, column: 9, scope: !1932)
!1949 = !DILocation(line: 505, column: 14, scope: !1932)
!1950 = !DILocation(line: 505, column: 17, scope: !1932)
!1951 = !DILocation(line: 506, column: 9, scope: !1932)
!1952 = !DILocation(line: 508, column: 9, scope: !1932)
!1953 = !DILocation(line: 508, column: 14, scope: !1932)
!1954 = !DILocation(line: 508, column: 29, scope: !1932)
!1955 = !DILocation(line: 509, column: 9, scope: !1932)
!1956 = !DILocation(line: 509, column: 16, scope: !1932)
!1957 = !DILocation(line: 509, column: 27, scope: !1932)
!1958 = !DILocation(line: 510, column: 9, scope: !1932)
!1959 = !DILocation(line: 510, column: 14, scope: !1932)
!1960 = !DILocation(line: 510, column: 35, scope: !1932)
!1961 = !DILocation(line: 511, column: 9, scope: !1932)
!1962 = !DILocation(line: 511, column: 14, scope: !1932)
!1963 = !DILocation(line: 511, column: 17, scope: !1932)
!1964 = !DILocation(line: 512, column: 9, scope: !1932)
!1965 = !DILocation(line: 514, column: 9, scope: !1932)
!1966 = !DILocation(line: 514, column: 16, scope: !1932)
!1967 = !DILocation(line: 514, column: 27, scope: !1932)
!1968 = !DILocation(line: 515, column: 9, scope: !1932)
!1969 = !DILocation(line: 515, column: 14, scope: !1932)
!1970 = !DILocation(line: 515, column: 35, scope: !1932)
!1971 = !DILocation(line: 516, column: 9, scope: !1932)
!1972 = !DILocation(line: 516, column: 14, scope: !1932)
!1973 = !DILocation(line: 516, column: 17, scope: !1932)
!1974 = !DILocation(line: 517, column: 9, scope: !1932)
!1975 = !DILocation(line: 519, column: 9, scope: !1932)
!1976 = !DILocation(line: 519, column: 16, scope: !1932)
!1977 = !DILocation(line: 519, column: 27, scope: !1932)
!1978 = !DILocation(line: 520, column: 9, scope: !1932)
!1979 = !DILocation(line: 520, column: 14, scope: !1932)
!1980 = !DILocation(line: 520, column: 35, scope: !1932)
!1981 = !DILocation(line: 521, column: 9, scope: !1932)
!1982 = !DILocation(line: 521, column: 14, scope: !1932)
!1983 = !DILocation(line: 521, column: 17, scope: !1932)
!1984 = !DILocation(line: 522, column: 9, scope: !1932)
!1985 = !DILocation(line: 524, column: 9, scope: !1932)
!1986 = !DILocation(line: 524, column: 14, scope: !1932)
!1987 = !DILocation(line: 524, column: 29, scope: !1932)
!1988 = !DILocation(line: 525, column: 9, scope: !1932)
!1989 = !DILocation(line: 525, column: 16, scope: !1932)
!1990 = !DILocation(line: 525, column: 27, scope: !1932)
!1991 = !DILocation(line: 526, column: 9, scope: !1932)
!1992 = !DILocation(line: 526, column: 14, scope: !1932)
!1993 = !DILocation(line: 526, column: 35, scope: !1932)
!1994 = !DILocation(line: 527, column: 9, scope: !1932)
!1995 = !DILocation(line: 527, column: 14, scope: !1932)
!1996 = !DILocation(line: 527, column: 17, scope: !1932)
!1997 = !DILocation(line: 528, column: 9, scope: !1932)
!1998 = !DILocation(line: 530, column: 16, scope: !1932)
!1999 = !DILocation(line: 532, column: 53, scope: !1932)
!2000 = !DILocation(line: 532, column: 60, scope: !1932)
!2001 = !DILocation(line: 530, column: 9, scope: !1932)
!2002 = !DILocation(line: 533, column: 9, scope: !1932)
!2003 = !DILocation(line: 535, column: 5, scope: !1743)
!2004 = !DILocation(line: 535, column: 10, scope: !1743)
!2005 = !DILocation(line: 535, column: 31, scope: !1743)
!2006 = !DILocation(line: 538, column: 57, scope: !1743)
!2007 = !DILocation(line: 538, column: 64, scope: !1743)
!2008 = !DILocation(line: 538, column: 31, scope: !1743)
!2009 = !DILocation(line: 538, column: 5, scope: !1743)
!2010 = !DILocation(line: 538, column: 10, scope: !1743)
!2011 = !DILocation(line: 538, column: 29, scope: !1743)
!2012 = !DILocation(line: 541, column: 9, scope: !2013)
!2013 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 541, column: 9)
!2014 = !DILocation(line: 541, column: 16, scope: !2013)
!2015 = !DILocation(line: 541, column: 25, scope: !2013)
!2016 = !DILocation(line: 541, column: 9, scope: !1743)
!2017 = !DILocation(line: 542, column: 16, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !2013, file: !897, line: 541, column: 30)
!2019 = !DILocation(line: 542, column: 9, scope: !2018)
!2020 = !DILocation(line: 544, column: 5, scope: !2018)
!2021 = !DILocation(line: 546, column: 5, scope: !1743)
!2022 = !DILocation(line: 546, column: 10, scope: !1743)
!2023 = !DILocation(line: 546, column: 25, scope: !1743)
!2024 = !DILocation(line: 547, column: 9, scope: !2025)
!2025 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 547, column: 9)
!2026 = !DILocation(line: 547, column: 16, scope: !2025)
!2027 = !DILocation(line: 547, column: 25, scope: !2025)
!2028 = !DILocation(line: 547, column: 9, scope: !1743)
!2029 = !DILocation(line: 548, column: 9, scope: !2030)
!2030 = distinct !DILexicalBlock(scope: !2025, file: !897, line: 547, column: 31)
!2031 = !DILocation(line: 548, column: 14, scope: !2030)
!2032 = !DILocation(line: 548, column: 29, scope: !2030)
!2033 = !DILocation(line: 549, column: 5, scope: !2030)
!2034 = !DILocation(line: 551, column: 13, scope: !1743)
!2035 = !DILocation(line: 551, column: 20, scope: !1743)
!2036 = !DILocation(line: 551, column: 5, scope: !1743)
!2037 = !DILocation(line: 553, column: 9, scope: !2038)
!2038 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 551, column: 32)
!2039 = !DILocation(line: 553, column: 14, scope: !2038)
!2040 = !DILocation(line: 553, column: 34, scope: !2038)
!2041 = !DILocation(line: 554, column: 9, scope: !2038)
!2042 = !DILocation(line: 554, column: 14, scope: !2038)
!2043 = !DILocation(line: 554, column: 25, scope: !2038)
!2044 = !DILocation(line: 555, column: 9, scope: !2038)
!2045 = !DILocation(line: 555, column: 16, scope: !2038)
!2046 = !DILocation(line: 555, column: 36, scope: !2038)
!2047 = !DILocation(line: 556, column: 9, scope: !2038)
!2048 = !DILocation(line: 559, column: 9, scope: !2038)
!2049 = !DILocation(line: 559, column: 14, scope: !2038)
!2050 = !DILocation(line: 559, column: 34, scope: !2038)
!2051 = !DILocation(line: 560, column: 9, scope: !2038)
!2052 = !DILocation(line: 560, column: 14, scope: !2038)
!2053 = !DILocation(line: 560, column: 25, scope: !2038)
!2054 = !DILocation(line: 561, column: 9, scope: !2038)
!2055 = !DILocation(line: 561, column: 16, scope: !2038)
!2056 = !DILocation(line: 561, column: 36, scope: !2038)
!2057 = !DILocation(line: 562, column: 9, scope: !2038)
!2058 = !DILocation(line: 564, column: 16, scope: !2038)
!2059 = !DILocation(line: 564, column: 9, scope: !2038)
!2060 = !DILocation(line: 566, column: 9, scope: !2038)
!2061 = !DILocation(line: 568, column: 5, scope: !1743)
!2062 = !DILocation(line: 568, column: 10, scope: !1743)
!2063 = !DILocation(line: 568, column: 30, scope: !1743)
!2064 = !DILocation(line: 570, column: 17, scope: !1743)
!2065 = !DILocation(line: 570, column: 24, scope: !1743)
!2066 = !DILocation(line: 570, column: 16, scope: !1743)
!2067 = !DILocation(line: 570, column: 5, scope: !1743)
!2068 = !DILocation(line: 570, column: 10, scope: !1743)
!2069 = !DILocation(line: 570, column: 14, scope: !1743)
!2070 = !DILocation(line: 572, column: 25, scope: !1743)
!2071 = !DILocation(line: 572, column: 32, scope: !1743)
!2072 = !DILocation(line: 572, column: 41, scope: !1743)
!2073 = !DILocation(line: 572, column: 5, scope: !1743)
!2074 = !DILocation(line: 572, column: 10, scope: !1743)
!2075 = !DILocation(line: 572, column: 23, scope: !1743)
!2076 = !DILocation(line: 573, column: 35, scope: !1743)
!2077 = !DILocation(line: 573, column: 42, scope: !1743)
!2078 = !DILocation(line: 574, column: 35, scope: !1743)
!2079 = !DILocation(line: 574, column: 40, scope: !1743)
!2080 = !DILocation(line: 574, column: 33, scope: !1743)
!2081 = !DILocation(line: 573, column: 5, scope: !1743)
!2082 = !DILocation(line: 573, column: 10, scope: !1743)
!2083 = !DILocation(line: 573, column: 33, scope: !1743)
!2084 = !DILocation(line: 576, column: 5, scope: !1743)
!2085 = !DILocation(line: 576, column: 10, scope: !1743)
!2086 = !DILocation(line: 576, column: 31, scope: !1743)
!2087 = !DILocation(line: 578, column: 5, scope: !1743)
!2088 = !DILocation(line: 578, column: 10, scope: !1743)
!2089 = !DILocation(line: 578, column: 30, scope: !1743)
!2090 = !DILocation(line: 579, column: 5, scope: !1743)
!2091 = !DILocation(line: 579, column: 10, scope: !1743)
!2092 = !DILocation(line: 579, column: 31, scope: !1743)
!2093 = !DILocation(line: 580, column: 30, scope: !1743)
!2094 = !DILocation(line: 580, column: 35, scope: !1743)
!2095 = !DILocation(line: 580, column: 58, scope: !1743)
!2096 = !DILocation(line: 580, column: 63, scope: !1743)
!2097 = !DILocation(line: 580, column: 56, scope: !1743)
!2098 = !DILocation(line: 580, column: 5, scope: !1743)
!2099 = !DILocation(line: 580, column: 10, scope: !1743)
!2100 = !DILocation(line: 580, column: 28, scope: !1743)
!2101 = !DILocation(line: 584, column: 12, scope: !1743)
!2102 = !DILocation(line: 584, column: 19, scope: !1743)
!2103 = !DILocation(line: 584, column: 32, scope: !1743)
!2104 = !DILocation(line: 584, column: 37, scope: !1743)
!2105 = !DILocation(line: 584, column: 30, scope: !1743)
!2106 = !DILocation(line: 584, column: 10, scope: !1743)
!2107 = !DILocation(line: 586, column: 46, scope: !1743)
!2108 = !DILocation(line: 586, column: 30, scope: !1743)
!2109 = !DILocation(line: 586, column: 5, scope: !1743)
!2110 = !DILocation(line: 586, column: 10, scope: !1743)
!2111 = !DILocation(line: 586, column: 28, scope: !1743)
!2112 = !DILocation(line: 587, column: 10, scope: !2113)
!2113 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 587, column: 9)
!2114 = !DILocation(line: 587, column: 15, scope: !2113)
!2115 = !DILocation(line: 587, column: 9, scope: !1743)
!2116 = !DILocation(line: 588, column: 16, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !2113, file: !897, line: 587, column: 34)
!2118 = !DILocation(line: 588, column: 9, scope: !2117)
!2119 = !DILocation(line: 590, column: 9, scope: !2117)
!2120 = !DILocation(line: 593, column: 12, scope: !1743)
!2121 = !DILocation(line: 593, column: 17, scope: !1743)
!2122 = !DILocation(line: 593, column: 42, scope: !1743)
!2123 = !DILocation(line: 593, column: 47, scope: !1743)
!2124 = !DILocation(line: 593, column: 40, scope: !1743)
!2125 = !DILocation(line: 593, column: 10, scope: !1743)
!2126 = !DILocation(line: 595, column: 49, scope: !1743)
!2127 = !DILocation(line: 595, column: 33, scope: !1743)
!2128 = !DILocation(line: 595, column: 5, scope: !1743)
!2129 = !DILocation(line: 595, column: 10, scope: !1743)
!2130 = !DILocation(line: 595, column: 31, scope: !1743)
!2131 = !DILocation(line: 596, column: 10, scope: !2132)
!2132 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 596, column: 9)
!2133 = !DILocation(line: 596, column: 15, scope: !2132)
!2134 = !DILocation(line: 596, column: 9, scope: !1743)
!2135 = !DILocation(line: 597, column: 16, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2132, file: !897, line: 596, column: 37)
!2137 = !DILocation(line: 597, column: 9, scope: !2136)
!2138 = !DILocation(line: 599, column: 9, scope: !2136)
!2139 = !DILocation(line: 602, column: 47, scope: !1743)
!2140 = !DILocation(line: 602, column: 31, scope: !1743)
!2141 = !DILocation(line: 602, column: 5, scope: !1743)
!2142 = !DILocation(line: 602, column: 10, scope: !1743)
!2143 = !DILocation(line: 602, column: 29, scope: !1743)
!2144 = !DILocation(line: 603, column: 10, scope: !2145)
!2145 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 603, column: 9)
!2146 = !DILocation(line: 603, column: 15, scope: !2145)
!2147 = !DILocation(line: 603, column: 9, scope: !1743)
!2148 = !DILocation(line: 604, column: 16, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !2145, file: !897, line: 603, column: 35)
!2150 = !DILocation(line: 604, column: 9, scope: !2149)
!2151 = !DILocation(line: 606, column: 9, scope: !2149)
!2152 = !DILocation(line: 609, column: 5, scope: !1743)
!2153 = !DILocation(line: 611, column: 5, scope: !1743)
!2154 = !DILocation(line: 611, column: 10, scope: !1743)
!2155 = !DILocation(line: 611, column: 25, scope: !1743)
!2156 = !DILocation(line: 613, column: 9, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 613, column: 9)
!2158 = !DILocation(line: 613, column: 14, scope: !2157)
!2159 = !DILocation(line: 613, column: 21, scope: !2157)
!2160 = !DILocation(line: 613, column: 30, scope: !2157)
!2161 = !DILocation(line: 613, column: 9, scope: !1743)
!2162 = !DILocation(line: 615, column: 16, scope: !2163)
!2163 = distinct !DILexicalBlock(scope: !2157, file: !897, line: 613, column: 50)
!2164 = !DILocation(line: 615, column: 23, scope: !2163)
!2165 = !DILocation(line: 615, column: 9, scope: !2163)
!2166 = !DILocation(line: 617, column: 13, scope: !2167)
!2167 = distinct !DILexicalBlock(scope: !2163, file: !897, line: 615, column: 39)
!2168 = !DILocation(line: 617, column: 18, scope: !2167)
!2169 = !DILocation(line: 617, column: 38, scope: !2167)
!2170 = !DILocation(line: 617, column: 43, scope: !2167)
!2171 = !DILocation(line: 619, column: 13, scope: !2167)
!2172 = !DILocation(line: 619, column: 18, scope: !2167)
!2173 = !DILocation(line: 619, column: 38, scope: !2167)
!2174 = !DILocation(line: 619, column: 43, scope: !2167)
!2175 = !DILocation(line: 621, column: 13, scope: !2167)
!2176 = !DILocation(line: 621, column: 18, scope: !2167)
!2177 = !DILocation(line: 621, column: 38, scope: !2167)
!2178 = !DILocation(line: 621, column: 43, scope: !2167)
!2179 = !DILocation(line: 623, column: 13, scope: !2167)
!2180 = !DILocation(line: 623, column: 18, scope: !2167)
!2181 = !DILocation(line: 623, column: 38, scope: !2167)
!2182 = !DILocation(line: 623, column: 43, scope: !2167)
!2183 = !DILocation(line: 625, column: 13, scope: !2167)
!2184 = !DILocation(line: 625, column: 18, scope: !2167)
!2185 = !DILocation(line: 625, column: 38, scope: !2167)
!2186 = !DILocation(line: 625, column: 43, scope: !2167)
!2187 = !DILocation(line: 627, column: 13, scope: !2167)
!2188 = !DILocation(line: 627, column: 18, scope: !2167)
!2189 = !DILocation(line: 627, column: 38, scope: !2167)
!2190 = !DILocation(line: 627, column: 43, scope: !2167)
!2191 = !DILocation(line: 629, column: 13, scope: !2167)
!2192 = !DILocation(line: 629, column: 18, scope: !2167)
!2193 = !DILocation(line: 629, column: 38, scope: !2167)
!2194 = !DILocation(line: 629, column: 43, scope: !2167)
!2195 = !DILocation(line: 631, column: 13, scope: !2167)
!2196 = !DILocation(line: 631, column: 18, scope: !2167)
!2197 = !DILocation(line: 631, column: 38, scope: !2167)
!2198 = !DILocation(line: 631, column: 43, scope: !2167)
!2199 = !DILocation(line: 633, column: 13, scope: !2167)
!2200 = !DILocation(line: 633, column: 18, scope: !2167)
!2201 = !DILocation(line: 633, column: 38, scope: !2167)
!2202 = !DILocation(line: 633, column: 44, scope: !2167)
!2203 = !DILocation(line: 635, column: 13, scope: !2167)
!2204 = !DILocation(line: 635, column: 18, scope: !2167)
!2205 = !DILocation(line: 635, column: 38, scope: !2167)
!2206 = !DILocation(line: 635, column: 44, scope: !2167)
!2207 = !DILocation(line: 637, column: 13, scope: !2167)
!2208 = !DILocation(line: 637, column: 18, scope: !2167)
!2209 = !DILocation(line: 637, column: 38, scope: !2167)
!2210 = !DILocation(line: 637, column: 44, scope: !2167)
!2211 = !DILocation(line: 639, column: 20, scope: !2167)
!2212 = !DILocation(line: 639, column: 13, scope: !2167)
!2213 = !DILocation(line: 640, column: 13, scope: !2167)
!2214 = !DILocation(line: 642, column: 9, scope: !2163)
!2215 = !DILocation(line: 642, column: 14, scope: !2163)
!2216 = !DILocation(line: 642, column: 20, scope: !2163)
!2217 = !DILocation(line: 643, column: 49, scope: !2163)
!2218 = !DILocation(line: 643, column: 54, scope: !2163)
!2219 = !DILocation(line: 643, column: 34, scope: !2163)
!2220 = !DILocation(line: 643, column: 75, scope: !2163)
!2221 = !DILocation(line: 643, column: 9, scope: !2163)
!2222 = !DILocation(line: 643, column: 14, scope: !2163)
!2223 = !DILocation(line: 643, column: 32, scope: !2163)
!2224 = !DILocation(line: 644, column: 44, scope: !2163)
!2225 = !DILocation(line: 644, column: 49, scope: !2163)
!2226 = !DILocation(line: 644, column: 29, scope: !2163)
!2227 = !DILocation(line: 644, column: 70, scope: !2163)
!2228 = !DILocation(line: 644, column: 9, scope: !2163)
!2229 = !DILocation(line: 644, column: 14, scope: !2163)
!2230 = !DILocation(line: 644, column: 27, scope: !2163)
!2231 = !DILocation(line: 645, column: 5, scope: !2163)
!2232 = !DILocation(line: 647, column: 16, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !2157, file: !897, line: 645, column: 12)
!2234 = !DILocation(line: 647, column: 23, scope: !2233)
!2235 = !DILocation(line: 647, column: 9, scope: !2233)
!2236 = !DILocation(line: 649, column: 13, scope: !2237)
!2237 = distinct !DILexicalBlock(scope: !2233, file: !897, line: 647, column: 39)
!2238 = !DILocation(line: 649, column: 18, scope: !2237)
!2239 = !DILocation(line: 649, column: 35, scope: !2237)
!2240 = !DILocation(line: 650, column: 13, scope: !2237)
!2241 = !DILocation(line: 650, column: 18, scope: !2237)
!2242 = !DILocation(line: 650, column: 35, scope: !2237)
!2243 = !DILocation(line: 651, column: 13, scope: !2237)
!2244 = !DILocation(line: 651, column: 18, scope: !2237)
!2245 = !DILocation(line: 651, column: 35, scope: !2237)
!2246 = !DILocation(line: 652, column: 13, scope: !2237)
!2247 = !DILocation(line: 652, column: 18, scope: !2237)
!2248 = !DILocation(line: 652, column: 38, scope: !2237)
!2249 = !DILocation(line: 653, column: 13, scope: !2237)
!2250 = !DILocation(line: 655, column: 13, scope: !2237)
!2251 = !DILocation(line: 655, column: 18, scope: !2237)
!2252 = !DILocation(line: 655, column: 35, scope: !2237)
!2253 = !DILocation(line: 656, column: 13, scope: !2237)
!2254 = !DILocation(line: 656, column: 18, scope: !2237)
!2255 = !DILocation(line: 656, column: 35, scope: !2237)
!2256 = !DILocation(line: 657, column: 13, scope: !2237)
!2257 = !DILocation(line: 657, column: 18, scope: !2237)
!2258 = !DILocation(line: 657, column: 35, scope: !2237)
!2259 = !DILocation(line: 658, column: 13, scope: !2237)
!2260 = !DILocation(line: 658, column: 18, scope: !2237)
!2261 = !DILocation(line: 658, column: 38, scope: !2237)
!2262 = !DILocation(line: 659, column: 13, scope: !2237)
!2263 = !DILocation(line: 661, column: 13, scope: !2237)
!2264 = !DILocation(line: 661, column: 18, scope: !2237)
!2265 = !DILocation(line: 661, column: 35, scope: !2237)
!2266 = !DILocation(line: 662, column: 13, scope: !2237)
!2267 = !DILocation(line: 662, column: 18, scope: !2237)
!2268 = !DILocation(line: 662, column: 35, scope: !2237)
!2269 = !DILocation(line: 663, column: 13, scope: !2237)
!2270 = !DILocation(line: 663, column: 18, scope: !2237)
!2271 = !DILocation(line: 663, column: 35, scope: !2237)
!2272 = !DILocation(line: 664, column: 13, scope: !2237)
!2273 = !DILocation(line: 664, column: 18, scope: !2237)
!2274 = !DILocation(line: 664, column: 38, scope: !2237)
!2275 = !DILocation(line: 665, column: 13, scope: !2237)
!2276 = !DILocation(line: 667, column: 20, scope: !2237)
!2277 = !DILocation(line: 667, column: 13, scope: !2237)
!2278 = !DILocation(line: 668, column: 13, scope: !2237)
!2279 = !DILocation(line: 670, column: 9, scope: !2233)
!2280 = !DILocation(line: 670, column: 14, scope: !2233)
!2281 = !DILocation(line: 670, column: 20, scope: !2233)
!2282 = !DILocation(line: 671, column: 9, scope: !2233)
!2283 = !DILocation(line: 671, column: 14, scope: !2233)
!2284 = !DILocation(line: 671, column: 32, scope: !2233)
!2285 = !DILocation(line: 672, column: 9, scope: !2233)
!2286 = !DILocation(line: 672, column: 14, scope: !2233)
!2287 = !DILocation(line: 672, column: 27, scope: !2233)
!2288 = !DILocation(line: 675, column: 35, scope: !1743)
!2289 = !DILocation(line: 675, column: 40, scope: !1743)
!2290 = !DILocation(line: 675, column: 33, scope: !1743)
!2291 = !DILocation(line: 675, column: 12, scope: !1743)
!2292 = !DILocation(line: 675, column: 10, scope: !1743)
!2293 = !DILocation(line: 677, column: 33, scope: !1743)
!2294 = !DILocation(line: 677, column: 23, scope: !1743)
!2295 = !DILocation(line: 677, column: 5, scope: !1743)
!2296 = !DILocation(line: 677, column: 10, scope: !1743)
!2297 = !DILocation(line: 677, column: 21, scope: !1743)
!2298 = !DILocation(line: 678, column: 10, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 678, column: 9)
!2300 = !DILocation(line: 678, column: 15, scope: !2299)
!2301 = !DILocation(line: 678, column: 9, scope: !1743)
!2302 = !DILocation(line: 679, column: 9, scope: !2299)
!2303 = !DILocation(line: 681, column: 38, scope: !1743)
!2304 = !DILocation(line: 681, column: 28, scope: !1743)
!2305 = !DILocation(line: 681, column: 5, scope: !1743)
!2306 = !DILocation(line: 681, column: 10, scope: !1743)
!2307 = !DILocation(line: 681, column: 26, scope: !1743)
!2308 = !DILocation(line: 682, column: 10, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 682, column: 9)
!2310 = !DILocation(line: 682, column: 15, scope: !2309)
!2311 = !DILocation(line: 682, column: 9, scope: !1743)
!2312 = !DILocation(line: 683, column: 9, scope: !2309)
!2313 = !DILocation(line: 686, column: 12, scope: !1743)
!2314 = !DILocation(line: 686, column: 17, scope: !1743)
!2315 = !DILocation(line: 686, column: 10, scope: !1743)
!2316 = !DILocation(line: 686, column: 34, scope: !1743)
!2317 = !DILocation(line: 686, column: 39, scope: !1743)
!2318 = !DILocation(line: 686, column: 32, scope: !1743)
!2319 = !DILocation(line: 685, column: 12, scope: !1743)
!2320 = !DILocation(line: 685, column: 10, scope: !1743)
!2321 = !DILocation(line: 688, column: 42, scope: !1743)
!2322 = !DILocation(line: 688, column: 32, scope: !1743)
!2323 = !DILocation(line: 688, column: 5, scope: !1743)
!2324 = !DILocation(line: 688, column: 10, scope: !1743)
!2325 = !DILocation(line: 688, column: 30, scope: !1743)
!2326 = !DILocation(line: 689, column: 10, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 689, column: 9)
!2328 = !DILocation(line: 689, column: 15, scope: !2327)
!2329 = !DILocation(line: 689, column: 9, scope: !1743)
!2330 = !DILocation(line: 690, column: 9, scope: !2327)
!2331 = !DILocation(line: 692, column: 16, scope: !2332)
!2332 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 692, column: 5)
!2333 = !DILocation(line: 692, column: 10, scope: !2332)
!2334 = !DILocation(line: 692, column: 21, scope: !2335)
!2335 = !DILexicalBlockFile(scope: !2336, file: !897, discriminator: 1)
!2336 = distinct !DILexicalBlock(scope: !2332, file: !897, line: 692, column: 5)
!2337 = !DILocation(line: 692, column: 29, scope: !2335)
!2338 = !DILocation(line: 692, column: 34, scope: !2335)
!2339 = !DILocation(line: 692, column: 27, scope: !2335)
!2340 = !DILocation(line: 692, column: 5, scope: !2335)
!2341 = !DILocation(line: 693, column: 34, scope: !2342)
!2342 = distinct !DILexicalBlock(scope: !2336, file: !897, line: 692, column: 62)
!2343 = !DILocation(line: 693, column: 25, scope: !2342)
!2344 = !DILocation(line: 693, column: 9, scope: !2342)
!2345 = !DILocation(line: 693, column: 14, scope: !2342)
!2346 = !DILocation(line: 693, column: 32, scope: !2342)
!2347 = !DILocation(line: 694, column: 35, scope: !2342)
!2348 = !DILocation(line: 694, column: 41, scope: !2342)
!2349 = !DILocation(line: 694, column: 48, scope: !2342)
!2350 = !DILocation(line: 694, column: 53, scope: !2342)
!2351 = !DILocation(line: 694, column: 46, scope: !2342)
!2352 = !DILocation(line: 694, column: 75, scope: !2342)
!2353 = !DILocation(line: 694, column: 24, scope: !2342)
!2354 = !DILocation(line: 694, column: 9, scope: !2342)
!2355 = !DILocation(line: 694, column: 14, scope: !2342)
!2356 = !DILocation(line: 694, column: 31, scope: !2342)
!2357 = !DILocation(line: 695, column: 30, scope: !2342)
!2358 = !DILocation(line: 695, column: 16, scope: !2342)
!2359 = !DILocation(line: 695, column: 21, scope: !2342)
!2360 = !DILocation(line: 695, column: 13, scope: !2342)
!2361 = !DILocation(line: 696, column: 5, scope: !2342)
!2362 = !DILocation(line: 692, column: 58, scope: !2363)
!2363 = !DILexicalBlockFile(scope: !2336, file: !897, discriminator: 2)
!2364 = !DILocation(line: 692, column: 5, scope: !2363)
!2365 = distinct !{!2365, !2366}
!2366 = !DILocation(line: 692, column: 5, scope: !1743)
!2367 = !DILocation(line: 697, column: 26, scope: !1743)
!2368 = !DILocation(line: 697, column: 5, scope: !1743)
!2369 = !DILocation(line: 697, column: 10, scope: !1743)
!2370 = !DILocation(line: 697, column: 24, scope: !1743)
!2371 = !DILocation(line: 699, column: 12, scope: !1743)
!2372 = !DILocation(line: 699, column: 17, scope: !1743)
!2373 = !DILocation(line: 699, column: 10, scope: !1743)
!2374 = !DILocation(line: 699, column: 37, scope: !1743)
!2375 = !DILocation(line: 699, column: 42, scope: !1743)
!2376 = !DILocation(line: 699, column: 35, scope: !1743)
!2377 = !DILocation(line: 699, column: 58, scope: !1743)
!2378 = !DILocation(line: 699, column: 63, scope: !1743)
!2379 = !DILocation(line: 699, column: 70, scope: !1743)
!2380 = !DILocation(line: 699, column: 56, scope: !1743)
!2381 = !DILocation(line: 698, column: 12, scope: !1743)
!2382 = !DILocation(line: 698, column: 10, scope: !1743)
!2383 = !DILocation(line: 700, column: 37, scope: !1743)
!2384 = !DILocation(line: 700, column: 27, scope: !1743)
!2385 = !DILocation(line: 700, column: 5, scope: !1743)
!2386 = !DILocation(line: 700, column: 10, scope: !1743)
!2387 = !DILocation(line: 700, column: 25, scope: !1743)
!2388 = !DILocation(line: 701, column: 10, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 701, column: 9)
!2390 = !DILocation(line: 701, column: 15, scope: !2389)
!2391 = !DILocation(line: 701, column: 9, scope: !1743)
!2392 = !DILocation(line: 702, column: 16, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2389, file: !897, line: 701, column: 31)
!2394 = !DILocation(line: 702, column: 9, scope: !2393)
!2395 = !DILocation(line: 704, column: 9, scope: !2393)
!2396 = !DILocation(line: 708, column: 12, scope: !1743)
!2397 = !DILocation(line: 708, column: 17, scope: !1743)
!2398 = !DILocation(line: 708, column: 10, scope: !1743)
!2399 = !DILocation(line: 708, column: 37, scope: !1743)
!2400 = !DILocation(line: 708, column: 42, scope: !1743)
!2401 = !DILocation(line: 708, column: 35, scope: !1743)
!2402 = !DILocation(line: 708, column: 58, scope: !1743)
!2403 = !DILocation(line: 708, column: 63, scope: !1743)
!2404 = !DILocation(line: 708, column: 56, scope: !1743)
!2405 = !DILocation(line: 707, column: 12, scope: !1743)
!2406 = !DILocation(line: 707, column: 10, scope: !1743)
!2407 = !DILocation(line: 709, column: 38, scope: !1743)
!2408 = !DILocation(line: 709, column: 28, scope: !1743)
!2409 = !DILocation(line: 709, column: 5, scope: !1743)
!2410 = !DILocation(line: 709, column: 10, scope: !1743)
!2411 = !DILocation(line: 709, column: 26, scope: !1743)
!2412 = !DILocation(line: 710, column: 10, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 710, column: 9)
!2414 = !DILocation(line: 710, column: 15, scope: !2413)
!2415 = !DILocation(line: 710, column: 9, scope: !1743)
!2416 = !DILocation(line: 711, column: 16, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2413, file: !897, line: 710, column: 32)
!2418 = !DILocation(line: 711, column: 9, scope: !2417)
!2419 = !DILocation(line: 713, column: 9, scope: !2417)
!2420 = !DILocation(line: 716, column: 17, scope: !2421)
!2421 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 716, column: 5)
!2422 = !DILocation(line: 716, column: 10, scope: !2421)
!2423 = !DILocation(line: 716, column: 22, scope: !2424)
!2424 = !DILexicalBlockFile(scope: !2425, file: !897, discriminator: 1)
!2425 = distinct !DILexicalBlock(scope: !2421, file: !897, line: 716, column: 5)
!2426 = !DILocation(line: 716, column: 31, scope: !2424)
!2427 = !DILocation(line: 716, column: 36, scope: !2424)
!2428 = !DILocation(line: 716, column: 29, scope: !2424)
!2429 = !DILocation(line: 716, column: 5, scope: !2424)
!2430 = !DILocalVariable(name: "rh", scope: !2431, file: !897, line: 717, type: !1835)
!2431 = distinct !DILexicalBlock(scope: !2425, file: !897, line: 716, column: 62)
!2432 = !DILocation(line: 717, column: 24, scope: !2431)
!2433 = !DILocation(line: 717, column: 51, scope: !2431)
!2434 = !DILocation(line: 717, column: 30, scope: !2431)
!2435 = !DILocation(line: 717, column: 35, scope: !2431)
!2436 = !DILocation(line: 720, column: 9, scope: !2431)
!2437 = !DILocation(line: 720, column: 13, scope: !2431)
!2438 = !DILocation(line: 720, column: 27, scope: !2431)
!2439 = !DILocation(line: 722, column: 9, scope: !2431)
!2440 = !DILocation(line: 722, column: 13, scope: !2431)
!2441 = !DILocation(line: 722, column: 25, scope: !2431)
!2442 = !DILocation(line: 723, column: 27, scope: !2431)
!2443 = !DILocation(line: 723, column: 34, scope: !2431)
!2444 = !DILocation(line: 723, column: 43, scope: !2431)
!2445 = !DILocation(line: 723, column: 9, scope: !2431)
!2446 = !DILocation(line: 723, column: 13, scope: !2431)
!2447 = !DILocation(line: 723, column: 25, scope: !2431)
!2448 = !DILocation(line: 725, column: 34, scope: !2431)
!2449 = !DILocation(line: 725, column: 38, scope: !2431)
!2450 = !DILocation(line: 725, column: 9, scope: !2431)
!2451 = !DILocation(line: 725, column: 13, scope: !2431)
!2452 = !DILocation(line: 725, column: 32, scope: !2431)
!2453 = !DILocation(line: 726, column: 5, scope: !2431)
!2454 = !DILocation(line: 716, column: 58, scope: !2455)
!2455 = !DILexicalBlockFile(scope: !2425, file: !897, discriminator: 2)
!2456 = !DILocation(line: 716, column: 5, scope: !2455)
!2457 = distinct !{!2457, !2458}
!2458 = !DILocation(line: 716, column: 5, scope: !1743)
!2459 = !DILocation(line: 728, column: 26, scope: !1743)
!2460 = !DILocation(line: 728, column: 5, scope: !1743)
!2461 = !DILocation(line: 729, column: 27, scope: !1743)
!2462 = !DILocation(line: 729, column: 5, scope: !1743)
!2463 = !DILocation(line: 731, column: 29, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !1743, file: !897, line: 731, column: 9)
!2465 = !DILocation(line: 731, column: 34, scope: !2464)
!2466 = !DILocation(line: 731, column: 43, scope: !2464)
!2467 = !DILocation(line: 731, column: 48, scope: !2464)
!2468 = !DILocation(line: 731, column: 16, scope: !2464)
!2469 = !DILocation(line: 731, column: 14, scope: !2464)
!2470 = !DILocation(line: 732, column: 47, scope: !2464)
!2471 = !DILocation(line: 731, column: 9, scope: !1743)
!2472 = !DILocation(line: 733, column: 16, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2464, file: !897, line: 732, column: 52)
!2474 = !DILocation(line: 733, column: 9, scope: !2473)
!2475 = !DILocation(line: 735, column: 16, scope: !2473)
!2476 = !DILocation(line: 735, column: 9, scope: !2473)
!2477 = !DILocation(line: 738, column: 22, scope: !1743)
!2478 = !DILocation(line: 738, column: 30, scope: !1743)
!2479 = !DILocation(line: 738, column: 35, scope: !1743)
!2480 = !DILocation(line: 738, column: 5, scope: !1743)
!2481 = !DILocation(line: 740, column: 5, scope: !1743)
!2482 = !DILocation(line: 741, column: 1, scope: !1743)
!2483 = distinct !DISubprogram(name: "mlp_encode_frame", scope: !897, file: !897, line: 2220, type: !1692, isLocal: true, isDefinition: true, scopeLine: 2222, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!2484 = !DILocalVariable(name: "avctx", arg: 1, scope: !2483, file: !897, line: 2220, type: !1093)
!2485 = !DILocation(line: 2220, column: 45, scope: !2483)
!2486 = !DILocalVariable(name: "avpkt", arg: 2, scope: !2483, file: !897, line: 2220, type: !1235)
!2487 = !DILocation(line: 2220, column: 62, scope: !2483)
!2488 = !DILocalVariable(name: "frame", arg: 3, scope: !2483, file: !897, line: 2221, type: !1379)
!2489 = !DILocation(line: 2221, column: 44, scope: !2483)
!2490 = !DILocalVariable(name: "got_packet", arg: 4, scope: !2483, file: !897, line: 2221, type: !1381)
!2491 = !DILocation(line: 2221, column: 56, scope: !2483)
!2492 = !DILocalVariable(name: "ctx", scope: !2483, file: !897, line: 2223, type: !1749)
!2493 = !DILocation(line: 2223, column: 23, scope: !2483)
!2494 = !DILocation(line: 2223, column: 29, scope: !2483)
!2495 = !DILocation(line: 2223, column: 36, scope: !2483)
!2496 = !DILocalVariable(name: "bytes_written", scope: !2483, file: !897, line: 2224, type: !993)
!2497 = !DILocation(line: 2224, column: 18, scope: !2483)
!2498 = !DILocalVariable(name: "restart_frame", scope: !2483, file: !897, line: 2225, type: !939)
!2499 = !DILocation(line: 2225, column: 9, scope: !2483)
!2500 = !DILocalVariable(name: "ret", scope: !2483, file: !897, line: 2225, type: !939)
!2501 = !DILocation(line: 2225, column: 24, scope: !2483)
!2502 = !DILocalVariable(name: "data", scope: !2483, file: !897, line: 2226, type: !1121)
!2503 = !DILocation(line: 2226, column: 14, scope: !2483)
!2504 = !DILocation(line: 2228, column: 33, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2483, file: !897, line: 2228, column: 9)
!2506 = !DILocation(line: 2228, column: 40, scope: !2505)
!2507 = !DILocation(line: 2228, column: 55, scope: !2505)
!2508 = !DILocation(line: 2228, column: 62, scope: !2505)
!2509 = !DILocation(line: 2228, column: 53, scope: !2505)
!2510 = !DILocation(line: 2228, column: 47, scope: !2505)
!2511 = !DILocation(line: 2228, column: 16, scope: !2505)
!2512 = !DILocation(line: 2228, column: 14, scope: !2505)
!2513 = !DILocation(line: 2228, column: 76, scope: !2505)
!2514 = !DILocation(line: 2228, column: 9, scope: !2483)
!2515 = !DILocation(line: 2229, column: 16, scope: !2505)
!2516 = !DILocation(line: 2229, column: 9, scope: !2505)
!2517 = !DILocation(line: 2231, column: 10, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2483, file: !897, line: 2231, column: 9)
!2519 = !DILocation(line: 2231, column: 9, scope: !2483)
!2520 = !DILocation(line: 2232, column: 9, scope: !2518)
!2521 = !DILocation(line: 2235, column: 9, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2483, file: !897, line: 2235, column: 9)
!2523 = !DILocation(line: 2235, column: 9, scope: !2483)
!2524 = !DILocation(line: 2236, column: 37, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2526, file: !897, line: 2236, column: 13)
!2526 = distinct !DILexicalBlock(scope: !2522, file: !897, line: 2235, column: 16)
!2527 = !DILocation(line: 2236, column: 42, scope: !2525)
!2528 = !DILocation(line: 2236, column: 47, scope: !2525)
!2529 = !DILocation(line: 2236, column: 20, scope: !2525)
!2530 = !DILocation(line: 2236, column: 18, scope: !2525)
!2531 = !DILocation(line: 2236, column: 55, scope: !2525)
!2532 = !DILocation(line: 2236, column: 13, scope: !2526)
!2533 = !DILocation(line: 2237, column: 20, scope: !2525)
!2534 = !DILocation(line: 2237, column: 13, scope: !2525)
!2535 = !DILocation(line: 2238, column: 5, scope: !2526)
!2536 = !DILocation(line: 2240, column: 12, scope: !2483)
!2537 = !DILocation(line: 2240, column: 19, scope: !2483)
!2538 = !DILocation(line: 2240, column: 10, scope: !2483)
!2539 = !DILocation(line: 2242, column: 24, scope: !2483)
!2540 = !DILocation(line: 2242, column: 31, scope: !2483)
!2541 = !DILocation(line: 2242, column: 46, scope: !2483)
!2542 = !DILocation(line: 2242, column: 51, scope: !2483)
!2543 = !DILocation(line: 2242, column: 44, scope: !2483)
!2544 = !DILocation(line: 2242, column: 5, scope: !2483)
!2545 = !DILocation(line: 2242, column: 10, scope: !2483)
!2546 = !DILocation(line: 2242, column: 22, scope: !2483)
!2547 = !DILocation(line: 2244, column: 25, scope: !2483)
!2548 = !DILocation(line: 2244, column: 30, scope: !2483)
!2549 = !DILocation(line: 2245, column: 25, scope: !2483)
!2550 = !DILocation(line: 2245, column: 30, scope: !2483)
!2551 = !DILocation(line: 2245, column: 44, scope: !2483)
!2552 = !DILocation(line: 2245, column: 49, scope: !2483)
!2553 = !DILocation(line: 2245, column: 42, scope: !2483)
!2554 = !DILocation(line: 2245, column: 23, scope: !2483)
!2555 = !DILocation(line: 2244, column: 5, scope: !2483)
!2556 = !DILocation(line: 2244, column: 10, scope: !2483)
!2557 = !DILocation(line: 2244, column: 23, scope: !2483)
!2558 = !DILocation(line: 2247, column: 9, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2483, file: !897, line: 2247, column: 9)
!2560 = !DILocation(line: 2247, column: 14, scope: !2559)
!2561 = !DILocation(line: 2247, column: 28, scope: !2559)
!2562 = !DILocation(line: 2247, column: 33, scope: !2559)
!2563 = !DILocation(line: 2247, column: 25, scope: !2559)
!2564 = !DILocation(line: 2247, column: 9, scope: !2483)
!2565 = !DILocation(line: 2248, column: 9, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2559, file: !897, line: 2247, column: 47)
!2567 = !DILocation(line: 2251, column: 26, scope: !2483)
!2568 = !DILocation(line: 2251, column: 31, scope: !2483)
!2569 = !DILocation(line: 2252, column: 26, scope: !2483)
!2570 = !DILocation(line: 2252, column: 31, scope: !2483)
!2571 = !DILocation(line: 2252, column: 45, scope: !2483)
!2572 = !DILocation(line: 2252, column: 50, scope: !2483)
!2573 = !DILocation(line: 2252, column: 43, scope: !2483)
!2574 = !DILocation(line: 2252, column: 24, scope: !2483)
!2575 = !DILocation(line: 2251, column: 5, scope: !2483)
!2576 = !DILocation(line: 2251, column: 10, scope: !2483)
!2577 = !DILocation(line: 2251, column: 24, scope: !2483)
!2578 = !DILocation(line: 2254, column: 25, scope: !2483)
!2579 = !DILocation(line: 2254, column: 30, scope: !2483)
!2580 = !DILocation(line: 2254, column: 5, scope: !2483)
!2581 = !DILocation(line: 2254, column: 10, scope: !2483)
!2582 = !DILocation(line: 2254, column: 23, scope: !2483)
!2583 = !DILocation(line: 2256, column: 9, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2483, file: !897, line: 2256, column: 9)
!2585 = !DILocation(line: 2256, column: 16, scope: !2584)
!2586 = !DILocation(line: 2256, column: 31, scope: !2584)
!2587 = !DILocation(line: 2256, column: 36, scope: !2584)
!2588 = !DILocation(line: 2256, column: 29, scope: !2584)
!2589 = !DILocation(line: 2256, column: 9, scope: !2483)
!2590 = !DILocation(line: 2257, column: 13, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2592, file: !897, line: 2257, column: 13)
!2592 = distinct !DILexicalBlock(scope: !2584, file: !897, line: 2256, column: 58)
!2593 = !DILocation(line: 2257, column: 13, scope: !2592)
!2594 = !DILocation(line: 2258, column: 13, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2591, file: !897, line: 2257, column: 19)
!2596 = !DILocation(line: 2263, column: 41, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2591, file: !897, line: 2259, column: 16)
!2598 = !DILocation(line: 2263, column: 48, scope: !2597)
!2599 = !DILocation(line: 2263, column: 13, scope: !2597)
!2600 = !DILocation(line: 2263, column: 18, scope: !2597)
!2601 = !DILocation(line: 2263, column: 39, scope: !2597)
!2602 = !DILocation(line: 2264, column: 13, scope: !2597)
!2603 = !DILocation(line: 2264, column: 18, scope: !2597)
!2604 = !DILocation(line: 2264, column: 30, scope: !2597)
!2605 = !DILocation(line: 2266, column: 34, scope: !2597)
!2606 = !DILocation(line: 2266, column: 39, scope: !2597)
!2607 = !DILocation(line: 2266, column: 13, scope: !2597)
!2608 = !DILocation(line: 2266, column: 18, scope: !2597)
!2609 = !DILocation(line: 2266, column: 32, scope: !2597)
!2610 = !DILocation(line: 2267, column: 33, scope: !2597)
!2611 = !DILocation(line: 2267, column: 38, scope: !2597)
!2612 = !DILocation(line: 2267, column: 13, scope: !2597)
!2613 = !DILocation(line: 2267, column: 18, scope: !2597)
!2614 = !DILocation(line: 2267, column: 31, scope: !2597)
!2615 = !DILocation(line: 2269, column: 5, scope: !2592)
!2616 = !DILocation(line: 2271, column: 25, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2483, file: !897, line: 2271, column: 9)
!2618 = !DILocation(line: 2271, column: 30, scope: !2617)
!2619 = !DILocation(line: 2271, column: 9, scope: !2617)
!2620 = !DILocation(line: 2271, column: 14, scope: !2617)
!2621 = !DILocation(line: 2271, column: 43, scope: !2617)
!2622 = !DILocation(line: 2271, column: 9, scope: !2483)
!2623 = !DILocation(line: 2272, column: 16, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2617, file: !897, line: 2271, column: 55)
!2625 = !DILocation(line: 2273, column: 32, scope: !2624)
!2626 = !DILocation(line: 2273, column: 37, scope: !2624)
!2627 = !DILocation(line: 2273, column: 16, scope: !2624)
!2628 = !DILocation(line: 2273, column: 21, scope: !2624)
!2629 = !DILocation(line: 2272, column: 9, scope: !2624)
!2630 = !DILocation(line: 2274, column: 9, scope: !2624)
!2631 = !DILocation(line: 2277, column: 22, scope: !2483)
!2632 = !DILocation(line: 2277, column: 27, scope: !2483)
!2633 = !DILocation(line: 2277, column: 21, scope: !2483)
!2634 = !DILocation(line: 2277, column: 19, scope: !2483)
!2635 = !DILocation(line: 2279, column: 9, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2483, file: !897, line: 2279, column: 9)
!2637 = !DILocation(line: 2279, column: 9, scope: !2483)
!2638 = !DILocation(line: 2280, column: 26, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2636, file: !897, line: 2279, column: 24)
!2640 = !DILocation(line: 2280, column: 9, scope: !2639)
!2641 = !DILocation(line: 2281, column: 13, scope: !2642)
!2642 = distinct !DILexicalBlock(scope: !2639, file: !897, line: 2281, column: 13)
!2643 = !DILocation(line: 2281, column: 18, scope: !2642)
!2644 = !DILocation(line: 2281, column: 42, scope: !2642)
!2645 = !DILocation(line: 2281, column: 47, scope: !2642)
!2646 = !DILocation(line: 2281, column: 39, scope: !2642)
!2647 = !DILocation(line: 2281, column: 13, scope: !2639)
!2648 = !DILocation(line: 2282, column: 29, scope: !2642)
!2649 = !DILocation(line: 2282, column: 9, scope: !2642)
!2650 = !DILocation(line: 2283, column: 5, scope: !2639)
!2651 = !DILocation(line: 2285, column: 9, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2483, file: !897, line: 2285, column: 9)
!2653 = !DILocation(line: 2285, column: 14, scope: !2652)
!2654 = !DILocation(line: 2285, column: 38, scope: !2652)
!2655 = !DILocation(line: 2285, column: 43, scope: !2652)
!2656 = !DILocation(line: 2285, column: 35, scope: !2652)
!2657 = !DILocation(line: 2285, column: 9, scope: !2483)
!2658 = !DILocation(line: 2286, column: 29, scope: !2652)
!2659 = !DILocation(line: 2286, column: 34, scope: !2652)
!2660 = !DILocation(line: 2286, column: 9, scope: !2652)
!2661 = !DILocation(line: 2286, column: 14, scope: !2652)
!2662 = !DILocation(line: 2286, column: 27, scope: !2652)
!2663 = !DILocation(line: 2288, column: 39, scope: !2483)
!2664 = !DILocation(line: 2288, column: 44, scope: !2483)
!2665 = !DILocation(line: 2288, column: 51, scope: !2483)
!2666 = !DILocation(line: 2288, column: 57, scope: !2483)
!2667 = !DILocation(line: 2288, column: 64, scope: !2483)
!2668 = !DILocation(line: 2288, column: 70, scope: !2483)
!2669 = !DILocation(line: 2288, column: 21, scope: !2483)
!2670 = !DILocation(line: 2288, column: 19, scope: !2483)
!2671 = !DILocation(line: 2290, column: 39, scope: !2483)
!2672 = !DILocation(line: 2290, column: 44, scope: !2483)
!2673 = !DILocation(line: 2290, column: 23, scope: !2483)
!2674 = !DILocation(line: 2290, column: 28, scope: !2483)
!2675 = !DILocation(line: 2290, column: 5, scope: !2483)
!2676 = !DILocation(line: 2290, column: 10, scope: !2483)
!2677 = !DILocation(line: 2290, column: 20, scope: !2483)
!2678 = !DILocation(line: 2291, column: 33, scope: !2483)
!2679 = !DILocation(line: 2291, column: 38, scope: !2483)
!2680 = !DILocation(line: 2291, column: 17, scope: !2483)
!2681 = !DILocation(line: 2291, column: 22, scope: !2483)
!2682 = !DILocation(line: 2291, column: 5, scope: !2483)
!2683 = !DILocation(line: 2291, column: 10, scope: !2483)
!2684 = !DILocation(line: 2291, column: 14, scope: !2483)
!2685 = !DILocation(line: 2295, column: 9, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2483, file: !897, line: 2295, column: 9)
!2687 = !DILocation(line: 2295, column: 9, scope: !2483)
!2688 = !DILocation(line: 2296, column: 45, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2686, file: !897, line: 2295, column: 15)
!2690 = !DILocation(line: 2296, column: 52, scope: !2689)
!2691 = !DILocation(line: 2296, column: 25, scope: !2689)
!2692 = !DILocation(line: 2296, column: 30, scope: !2689)
!2693 = !DILocation(line: 2296, column: 9, scope: !2689)
!2694 = !DILocation(line: 2296, column: 14, scope: !2689)
!2695 = !DILocation(line: 2296, column: 43, scope: !2689)
!2696 = !DILocation(line: 2297, column: 39, scope: !2689)
!2697 = !DILocation(line: 2297, column: 46, scope: !2689)
!2698 = !DILocation(line: 2297, column: 9, scope: !2689)
!2699 = !DILocation(line: 2297, column: 14, scope: !2689)
!2700 = !DILocation(line: 2297, column: 36, scope: !2689)
!2701 = !DILocation(line: 2298, column: 9, scope: !2689)
!2702 = !DILocation(line: 2298, column: 14, scope: !2689)
!2703 = !DILocation(line: 2298, column: 41, scope: !2689)
!2704 = !DILocation(line: 2299, column: 20, scope: !2689)
!2705 = !DILocation(line: 2299, column: 25, scope: !2689)
!2706 = !DILocation(line: 2299, column: 9, scope: !2689)
!2707 = !DILocation(line: 2300, column: 5, scope: !2689)
!2708 = !DILocation(line: 2300, column: 17, scope: !2709)
!2709 = !DILexicalBlockFile(scope: !2710, file: !897, discriminator: 1)
!2710 = distinct !DILexicalBlock(scope: !2686, file: !897, line: 2300, column: 16)
!2711 = !DILocation(line: 2300, column: 22, scope: !2709)
!2712 = !DILocation(line: 2300, column: 16, scope: !2709)
!2713 = !DILocation(line: 2301, column: 27, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2710, file: !897, line: 2300, column: 34)
!2715 = !DILocation(line: 2301, column: 32, scope: !2714)
!2716 = !DILocation(line: 2301, column: 9, scope: !2714)
!2717 = !DILocation(line: 2301, column: 14, scope: !2714)
!2718 = !DILocation(line: 2301, column: 25, scope: !2714)
!2719 = !DILocation(line: 2302, column: 5, scope: !2714)
!2720 = !DILocation(line: 2304, column: 22, scope: !2483)
!2721 = !DILocation(line: 2304, column: 27, scope: !2483)
!2722 = !DILocation(line: 2304, column: 39, scope: !2483)
!2723 = !DILocation(line: 2304, column: 46, scope: !2483)
!2724 = !DILocation(line: 2304, column: 51, scope: !2483)
!2725 = !DILocation(line: 2304, column: 44, scope: !2483)
!2726 = !DILocation(line: 2304, column: 19, scope: !2483)
!2727 = !DILocation(line: 2306, column: 10, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2483, file: !897, line: 2306, column: 9)
!2729 = !DILocation(line: 2306, column: 9, scope: !2483)
!2730 = !DILocalVariable(name: "seq_index", scope: !2731, file: !897, line: 2307, type: !939)
!2731 = distinct !DILexicalBlock(scope: !2728, file: !897, line: 2306, column: 25)
!2732 = !DILocation(line: 2307, column: 13, scope: !2731)
!2733 = !DILocation(line: 2309, column: 24, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2731, file: !897, line: 2309, column: 9)
!2735 = !DILocation(line: 2309, column: 14, scope: !2734)
!2736 = !DILocation(line: 2310, column: 14, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2734, file: !897, line: 2309, column: 9)
!2738 = !DILocation(line: 2310, column: 26, scope: !2737)
!2739 = !DILocation(line: 2310, column: 31, scope: !2737)
!2740 = !DILocation(line: 2310, column: 24, scope: !2737)
!2741 = !DILocation(line: 2310, column: 49, scope: !2737)
!2742 = !DILocation(line: 2310, column: 53, scope: !2743)
!2743 = !DILexicalBlockFile(scope: !2737, file: !897, discriminator: 1)
!2744 = !DILocation(line: 2310, column: 65, scope: !2743)
!2745 = !DILocation(line: 2310, column: 70, scope: !2743)
!2746 = !DILocation(line: 2310, column: 63, scope: !2743)
!2747 = !DILocation(line: 2310, column: 95, scope: !2743)
!2748 = !DILocation(line: 2310, column: 100, scope: !2743)
!2749 = !DILocation(line: 2310, column: 107, scope: !2743)
!2750 = !DILocation(line: 2310, column: 92, scope: !2743)
!2751 = !DILocation(line: 2309, column: 9, scope: !2752)
!2752 = !DILexicalBlockFile(scope: !2734, file: !897, discriminator: 1)
!2753 = !DILocalVariable(name: "number_of_samples", scope: !2754, file: !897, line: 2312, type: !993)
!2754 = distinct !DILexicalBlock(scope: !2737, file: !897, line: 2311, column: 27)
!2755 = !DILocation(line: 2312, column: 26, scope: !2754)
!2756 = !DILocalVariable(name: "index", scope: !2754, file: !897, line: 2313, type: !993)
!2757 = !DILocation(line: 2313, column: 26, scope: !2754)
!2758 = !DILocation(line: 2315, column: 34, scope: !2754)
!2759 = !DILocation(line: 2315, column: 39, scope: !2754)
!2760 = !DILocation(line: 2315, column: 13, scope: !2754)
!2761 = !DILocation(line: 2315, column: 18, scope: !2754)
!2762 = !DILocation(line: 2315, column: 32, scope: !2754)
!2763 = !DILocation(line: 2316, column: 33, scope: !2754)
!2764 = !DILocation(line: 2316, column: 38, scope: !2754)
!2765 = !DILocation(line: 2316, column: 13, scope: !2754)
!2766 = !DILocation(line: 2316, column: 18, scope: !2754)
!2767 = !DILocation(line: 2316, column: 31, scope: !2754)
!2768 = !DILocation(line: 2317, column: 30, scope: !2754)
!2769 = !DILocation(line: 2317, column: 13, scope: !2754)
!2770 = !DILocation(line: 2317, column: 18, scope: !2754)
!2771 = !DILocation(line: 2317, column: 28, scope: !2754)
!2772 = !DILocation(line: 2319, column: 42, scope: !2754)
!2773 = !DILocation(line: 2319, column: 47, scope: !2754)
!2774 = !DILocation(line: 2319, column: 54, scope: !2754)
!2775 = !DILocation(line: 2319, column: 70, scope: !2754)
!2776 = !DILocation(line: 2319, column: 75, scope: !2754)
!2777 = !DILocation(line: 2319, column: 82, scope: !2754)
!2778 = !DILocation(line: 2319, column: 97, scope: !2754)
!2779 = !DILocation(line: 2319, column: 102, scope: !2754)
!2780 = !DILocation(line: 2319, column: 95, scope: !2754)
!2781 = !DILocation(line: 2319, column: 67, scope: !2754)
!2782 = !DILocation(line: 2320, column: 42, scope: !2754)
!2783 = !DILocation(line: 2320, column: 54, scope: !2754)
!2784 = !DILocation(line: 2320, column: 59, scope: !2754)
!2785 = !DILocation(line: 2320, column: 52, scope: !2754)
!2786 = !DILocation(line: 2320, column: 39, scope: !2754)
!2787 = !DILocation(line: 2320, column: 84, scope: !2754)
!2788 = !DILocation(line: 2320, column: 89, scope: !2754)
!2789 = !DILocation(line: 2320, column: 82, scope: !2754)
!2790 = !DILocation(line: 2319, column: 13, scope: !2754)
!2791 = !DILocation(line: 2319, column: 18, scope: !2754)
!2792 = !DILocation(line: 2319, column: 39, scope: !2754)
!2793 = !DILocation(line: 2321, column: 37, scope: !2754)
!2794 = !DILocation(line: 2321, column: 42, scope: !2754)
!2795 = !DILocation(line: 2321, column: 13, scope: !2754)
!2796 = !DILocation(line: 2321, column: 18, scope: !2754)
!2797 = !DILocation(line: 2321, column: 35, scope: !2754)
!2798 = !DILocation(line: 2322, column: 40, scope: !2754)
!2799 = !DILocation(line: 2322, column: 45, scope: !2754)
!2800 = !DILocation(line: 2322, column: 73, scope: !2754)
!2801 = !DILocation(line: 2322, column: 13, scope: !2754)
!2802 = !DILocation(line: 2322, column: 18, scope: !2754)
!2803 = !DILocation(line: 2322, column: 38, scope: !2754)
!2804 = !DILocation(line: 2324, column: 57, scope: !2754)
!2805 = !DILocation(line: 2324, column: 62, scope: !2754)
!2806 = !DILocation(line: 2325, column: 40, scope: !2754)
!2807 = !DILocation(line: 2325, column: 45, scope: !2754)
!2808 = !DILocation(line: 2325, column: 59, scope: !2754)
!2809 = !DILocation(line: 2325, column: 64, scope: !2754)
!2810 = !DILocation(line: 2325, column: 57, scope: !2754)
!2811 = !DILocation(line: 2325, column: 87, scope: !2754)
!2812 = !DILocation(line: 2325, column: 92, scope: !2754)
!2813 = !DILocation(line: 2325, column: 85, scope: !2754)
!2814 = !DILocation(line: 2325, column: 108, scope: !2754)
!2815 = !DILocation(line: 2325, column: 113, scope: !2754)
!2816 = !DILocation(line: 2325, column: 120, scope: !2754)
!2817 = !DILocation(line: 2325, column: 106, scope: !2754)
!2818 = !DILocation(line: 2324, column: 77, scope: !2754)
!2819 = !DILocation(line: 2326, column: 56, scope: !2754)
!2820 = !DILocation(line: 2326, column: 40, scope: !2754)
!2821 = !DILocation(line: 2326, column: 45, scope: !2754)
!2822 = !DILocation(line: 2326, column: 69, scope: !2754)
!2823 = !DILocation(line: 2326, column: 74, scope: !2754)
!2824 = !DILocation(line: 2326, column: 81, scope: !2754)
!2825 = !DILocation(line: 2326, column: 67, scope: !2754)
!2826 = !DILocation(line: 2325, column: 130, scope: !2754)
!2827 = !DILocation(line: 2324, column: 13, scope: !2754)
!2828 = !DILocation(line: 2324, column: 18, scope: !2754)
!2829 = !DILocation(line: 2324, column: 37, scope: !2754)
!2830 = !DILocation(line: 2328, column: 59, scope: !2754)
!2831 = !DILocation(line: 2328, column: 64, scope: !2754)
!2832 = !DILocation(line: 2329, column: 41, scope: !2754)
!2833 = !DILocation(line: 2329, column: 46, scope: !2754)
!2834 = !DILocation(line: 2329, column: 60, scope: !2754)
!2835 = !DILocation(line: 2329, column: 65, scope: !2754)
!2836 = !DILocation(line: 2329, column: 58, scope: !2754)
!2837 = !DILocation(line: 2329, column: 88, scope: !2754)
!2838 = !DILocation(line: 2329, column: 93, scope: !2754)
!2839 = !DILocation(line: 2329, column: 86, scope: !2754)
!2840 = !DILocation(line: 2329, column: 109, scope: !2754)
!2841 = !DILocation(line: 2329, column: 114, scope: !2754)
!2842 = !DILocation(line: 2329, column: 107, scope: !2754)
!2843 = !DILocation(line: 2328, column: 80, scope: !2754)
!2844 = !DILocation(line: 2330, column: 57, scope: !2754)
!2845 = !DILocation(line: 2330, column: 41, scope: !2754)
!2846 = !DILocation(line: 2330, column: 46, scope: !2754)
!2847 = !DILocation(line: 2330, column: 70, scope: !2754)
!2848 = !DILocation(line: 2330, column: 75, scope: !2754)
!2849 = !DILocation(line: 2330, column: 68, scope: !2754)
!2850 = !DILocation(line: 2329, column: 130, scope: !2754)
!2851 = !DILocation(line: 2328, column: 13, scope: !2754)
!2852 = !DILocation(line: 2328, column: 18, scope: !2754)
!2853 = !DILocation(line: 2328, column: 38, scope: !2754)
!2854 = !DILocation(line: 2332, column: 24, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2754, file: !897, line: 2332, column: 13)
!2856 = !DILocation(line: 2332, column: 18, scope: !2855)
!2857 = !DILocation(line: 2332, column: 29, scope: !2858)
!2858 = !DILexicalBlockFile(scope: !2859, file: !897, discriminator: 1)
!2859 = distinct !DILexicalBlock(scope: !2855, file: !897, line: 2332, column: 13)
!2860 = !DILocation(line: 2332, column: 37, scope: !2858)
!2861 = !DILocation(line: 2332, column: 42, scope: !2858)
!2862 = !DILocation(line: 2332, column: 35, scope: !2858)
!2863 = !DILocation(line: 2332, column: 13, scope: !2858)
!2864 = !DILocation(line: 2333, column: 55, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2859, file: !897, line: 2332, column: 69)
!2866 = !DILocation(line: 2333, column: 60, scope: !2865)
!2867 = !DILocation(line: 2333, column: 83, scope: !2865)
!2868 = !DILocation(line: 2333, column: 81, scope: !2865)
!2869 = !DILocation(line: 2333, column: 92, scope: !2865)
!2870 = !DILocation(line: 2333, column: 97, scope: !2865)
!2871 = !DILocation(line: 2333, column: 90, scope: !2865)
!2872 = !DILocation(line: 2333, column: 38, scope: !2865)
!2873 = !DILocation(line: 2333, column: 43, scope: !2865)
!2874 = !DILocation(line: 2333, column: 35, scope: !2865)
!2875 = !DILocation(line: 2334, column: 13, scope: !2865)
!2876 = !DILocation(line: 2332, column: 65, scope: !2877)
!2877 = !DILexicalBlockFile(scope: !2859, file: !897, discriminator: 2)
!2878 = !DILocation(line: 2332, column: 13, scope: !2877)
!2879 = distinct !{!2879, !2880}
!2880 = !DILocation(line: 2332, column: 13, scope: !2754)
!2881 = !DILocation(line: 2335, column: 38, scope: !2754)
!2882 = !DILocation(line: 2335, column: 13, scope: !2754)
!2883 = !DILocation(line: 2335, column: 18, scope: !2754)
!2884 = !DILocation(line: 2335, column: 36, scope: !2754)
!2885 = !DILocation(line: 2337, column: 24, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2754, file: !897, line: 2337, column: 13)
!2887 = !DILocation(line: 2337, column: 18, scope: !2886)
!2888 = !DILocation(line: 2337, column: 29, scope: !2889)
!2889 = !DILexicalBlockFile(scope: !2890, file: !897, discriminator: 1)
!2890 = distinct !DILexicalBlock(scope: !2886, file: !897, line: 2337, column: 13)
!2891 = !DILocation(line: 2337, column: 51, scope: !2889)
!2892 = !DILocation(line: 2337, column: 37, scope: !2889)
!2893 = !DILocation(line: 2337, column: 42, scope: !2889)
!2894 = !DILocation(line: 2337, column: 35, scope: !2889)
!2895 = !DILocation(line: 2337, column: 13, scope: !2889)
!2896 = !DILocation(line: 2338, column: 38, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2890, file: !897, line: 2337, column: 72)
!2898 = !DILocation(line: 2338, column: 43, scope: !2897)
!2899 = !DILocation(line: 2338, column: 48, scope: !2897)
!2900 = !DILocation(line: 2338, column: 69, scope: !2897)
!2901 = !DILocation(line: 2338, column: 76, scope: !2897)
!2902 = !DILocation(line: 2338, column: 81, scope: !2897)
!2903 = !DILocation(line: 2338, column: 88, scope: !2897)
!2904 = !DILocation(line: 2338, column: 74, scope: !2897)
!2905 = !DILocation(line: 2338, column: 67, scope: !2897)
!2906 = !DILocation(line: 2338, column: 17, scope: !2897)
!2907 = !DILocation(line: 2339, column: 41, scope: !2897)
!2908 = !DILocation(line: 2339, column: 46, scope: !2897)
!2909 = !DILocation(line: 2339, column: 51, scope: !2897)
!2910 = !DILocation(line: 2339, column: 73, scope: !2897)
!2911 = !DILocation(line: 2339, column: 80, scope: !2897)
!2912 = !DILocation(line: 2339, column: 85, scope: !2897)
!2913 = !DILocation(line: 2339, column: 78, scope: !2897)
!2914 = !DILocation(line: 2339, column: 71, scope: !2897)
!2915 = !DILocation(line: 2339, column: 17, scope: !2897)
!2916 = !DILocation(line: 2340, column: 13, scope: !2897)
!2917 = !DILocation(line: 2337, column: 68, scope: !2918)
!2918 = !DILexicalBlockFile(scope: !2890, file: !897, discriminator: 2)
!2919 = !DILocation(line: 2337, column: 13, scope: !2918)
!2920 = distinct !{!2920, !2921}
!2921 = !DILocation(line: 2337, column: 13, scope: !2754)
!2922 = !DILocation(line: 2342, column: 36, scope: !2754)
!2923 = !DILocation(line: 2342, column: 13, scope: !2754)
!2924 = !DILocation(line: 2344, column: 35, scope: !2754)
!2925 = !DILocation(line: 2344, column: 13, scope: !2754)
!2926 = !DILocation(line: 2345, column: 9, scope: !2754)
!2927 = !DILocation(line: 2311, column: 23, scope: !2737)
!2928 = !DILocation(line: 2309, column: 9, scope: !2929)
!2929 = !DILexicalBlockFile(scope: !2737, file: !897, discriminator: 2)
!2930 = distinct !{!2930, !2931}
!2931 = !DILocation(line: 2309, column: 9, scope: !2731)
!2932 = !DILocation(line: 2347, column: 13, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2731, file: !897, line: 2347, column: 13)
!2934 = !DILocation(line: 2347, column: 18, scope: !2933)
!2935 = !DILocation(line: 2347, column: 34, scope: !2933)
!2936 = !DILocation(line: 2347, column: 39, scope: !2933)
!2937 = !DILocation(line: 2347, column: 60, scope: !2933)
!2938 = !DILocation(line: 2347, column: 30, scope: !2933)
!2939 = !DILocation(line: 2347, column: 13, scope: !2731)
!2940 = !DILocation(line: 2348, column: 37, scope: !2941)
!2941 = distinct !DILexicalBlock(scope: !2933, file: !897, line: 2347, column: 66)
!2942 = !DILocation(line: 2348, column: 42, scope: !2941)
!2943 = !DILocation(line: 2348, column: 13, scope: !2941)
!2944 = !DILocation(line: 2348, column: 18, scope: !2941)
!2945 = !DILocation(line: 2348, column: 35, scope: !2941)
!2946 = !DILocation(line: 2349, column: 13, scope: !2941)
!2947 = !DILocation(line: 2349, column: 18, scope: !2941)
!2948 = !DILocation(line: 2349, column: 40, scope: !2941)
!2949 = !DILocation(line: 2350, column: 43, scope: !2941)
!2950 = !DILocation(line: 2350, column: 48, scope: !2941)
!2951 = !DILocation(line: 2350, column: 13, scope: !2941)
!2952 = !DILocation(line: 2350, column: 18, scope: !2941)
!2953 = !DILocation(line: 2350, column: 41, scope: !2941)
!2954 = !DILocation(line: 2351, column: 13, scope: !2941)
!2955 = !DILocation(line: 2351, column: 18, scope: !2941)
!2956 = !DILocation(line: 2351, column: 46, scope: !2941)
!2957 = !DILocation(line: 2353, column: 18, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2941, file: !897, line: 2353, column: 17)
!2959 = !DILocation(line: 2353, column: 23, scope: !2958)
!2960 = !DILocation(line: 2353, column: 17, scope: !2941)
!2961 = !DILocation(line: 2354, column: 17, scope: !2958)
!2962 = !DILocation(line: 2355, column: 9, scope: !2941)
!2963 = !DILocation(line: 2356, column: 5, scope: !2731)
!2964 = !DILocation(line: 2306, column: 10, scope: !2965)
!2965 = !DILexicalBlockFile(scope: !2728, file: !897, discriminator: 1)
!2966 = !DILocation(line: 2360, column: 25, scope: !2483)
!2967 = !DILocation(line: 2360, column: 30, scope: !2483)
!2968 = !DILocation(line: 2360, column: 35, scope: !2483)
!2969 = !DILocation(line: 2360, column: 42, scope: !2483)
!2970 = !DILocation(line: 2360, column: 55, scope: !2483)
!2971 = !DILocation(line: 2360, column: 62, scope: !2483)
!2972 = !DILocation(line: 2361, column: 25, scope: !2483)
!2973 = !DILocation(line: 2361, column: 32, scope: !2483)
!2974 = !DILocation(line: 2360, column: 5, scope: !2483)
!2975 = !DILocation(line: 2362, column: 19, scope: !2483)
!2976 = !DILocation(line: 2362, column: 5, scope: !2483)
!2977 = !DILocation(line: 2362, column: 12, scope: !2483)
!2978 = !DILocation(line: 2362, column: 17, scope: !2483)
!2979 = !DILocation(line: 2363, column: 6, scope: !2483)
!2980 = !DILocation(line: 2363, column: 17, scope: !2483)
!2981 = !DILocation(line: 2364, column: 5, scope: !2483)
!2982 = !DILocation(line: 2365, column: 1, scope: !2483)
!2983 = distinct !DISubprogram(name: "mlp_encode_close", scope: !897, file: !897, line: 2367, type: !1091, isLocal: true, isDefinition: true, scopeLine: 2368, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!2984 = !DILocalVariable(name: "avctx", arg: 1, scope: !2983, file: !897, line: 2367, type: !1093)
!2985 = !DILocation(line: 2367, column: 67, scope: !2983)
!2986 = !DILocalVariable(name: "ctx", scope: !2983, file: !897, line: 2369, type: !1749)
!2987 = !DILocation(line: 2369, column: 23, scope: !2983)
!2988 = !DILocation(line: 2369, column: 29, scope: !2983)
!2989 = !DILocation(line: 2369, column: 36, scope: !2983)
!2990 = !DILocation(line: 2371, column: 17, scope: !2983)
!2991 = !DILocation(line: 2371, column: 22, scope: !2983)
!2992 = !DILocation(line: 2371, column: 5, scope: !2983)
!2993 = !DILocation(line: 2373, column: 15, scope: !2983)
!2994 = !DILocation(line: 2373, column: 20, scope: !2983)
!2995 = !DILocation(line: 2373, column: 14, scope: !2983)
!2996 = !DILocation(line: 2373, column: 5, scope: !2983)
!2997 = !DILocation(line: 2374, column: 15, scope: !2983)
!2998 = !DILocation(line: 2374, column: 20, scope: !2983)
!2999 = !DILocation(line: 2374, column: 14, scope: !2983)
!3000 = !DILocation(line: 2374, column: 5, scope: !2983)
!3001 = !DILocation(line: 2375, column: 15, scope: !2983)
!3002 = !DILocation(line: 2375, column: 20, scope: !2983)
!3003 = !DILocation(line: 2375, column: 14, scope: !2983)
!3004 = !DILocation(line: 2375, column: 5, scope: !2983)
!3005 = !DILocation(line: 2376, column: 15, scope: !2983)
!3006 = !DILocation(line: 2376, column: 20, scope: !2983)
!3007 = !DILocation(line: 2376, column: 14, scope: !2983)
!3008 = !DILocation(line: 2376, column: 5, scope: !2983)
!3009 = !DILocation(line: 2377, column: 15, scope: !2983)
!3010 = !DILocation(line: 2377, column: 20, scope: !2983)
!3011 = !DILocation(line: 2377, column: 14, scope: !2983)
!3012 = !DILocation(line: 2377, column: 5, scope: !2983)
!3013 = !DILocation(line: 2378, column: 15, scope: !2983)
!3014 = !DILocation(line: 2378, column: 20, scope: !2983)
!3015 = !DILocation(line: 2378, column: 14, scope: !2983)
!3016 = !DILocation(line: 2378, column: 5, scope: !2983)
!3017 = !DILocation(line: 2379, column: 15, scope: !2983)
!3018 = !DILocation(line: 2379, column: 20, scope: !2983)
!3019 = !DILocation(line: 2379, column: 14, scope: !2983)
!3020 = !DILocation(line: 2379, column: 5, scope: !2983)
!3021 = !DILocation(line: 2380, column: 24, scope: !2983)
!3022 = !DILocation(line: 2380, column: 29, scope: !2983)
!3023 = !DILocation(line: 2380, column: 5, scope: !2983)
!3024 = !DILocation(line: 2382, column: 5, scope: !2983)
!3025 = distinct !DISubprogram(name: "mlp_peak_bitrate", scope: !897, file: !897, line: 481, type: !3026, isLocal: true, isDefinition: true, scopeLine: 482, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!3026 = !DISubroutineType(types: !3027)
!3027 = !{!939, !939, !939}
!3028 = !DILocalVariable(name: "peak_bitrate", arg: 1, scope: !3025, file: !897, line: 481, type: !939)
!3029 = !DILocation(line: 481, column: 33, scope: !3025)
!3030 = !DILocalVariable(name: "sample_rate", arg: 2, scope: !3025, file: !897, line: 481, type: !939)
!3031 = !DILocation(line: 481, column: 51, scope: !3025)
!3032 = !DILocation(line: 483, column: 14, scope: !3025)
!3033 = !DILocation(line: 483, column: 27, scope: !3025)
!3034 = !DILocation(line: 483, column: 33, scope: !3025)
!3035 = !DILocation(line: 483, column: 40, scope: !3025)
!3036 = !DILocation(line: 483, column: 38, scope: !3025)
!3037 = !DILocation(line: 483, column: 5, scope: !3025)
!3038 = distinct !DISubprogram(name: "clear_channel_params", scope: !897, file: !897, line: 421, type: !3039, isLocal: true, isDefinition: true, scopeLine: 422, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{null, !1749, !921}
!3041 = !DILocalVariable(name: "ctx", arg: 1, scope: !3038, file: !897, line: 421, type: !1749)
!3042 = !DILocation(line: 421, column: 52, scope: !3038)
!3043 = !DILocalVariable(name: "channel_params", arg: 2, scope: !3038, file: !897, line: 421, type: !921)
!3044 = !DILocation(line: 421, column: 71, scope: !3038)
!3045 = !DILocalVariable(name: "channel", scope: !3038, file: !897, line: 423, type: !993)
!3046 = !DILocation(line: 423, column: 18, scope: !3038)
!3047 = !DILocation(line: 425, column: 18, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3038, file: !897, line: 425, column: 5)
!3049 = !DILocation(line: 425, column: 10, scope: !3048)
!3050 = !DILocation(line: 425, column: 23, scope: !3051)
!3051 = !DILexicalBlockFile(scope: !3052, file: !897, discriminator: 1)
!3052 = distinct !DILexicalBlock(scope: !3048, file: !897, line: 425, column: 5)
!3053 = !DILocation(line: 425, column: 33, scope: !3051)
!3054 = !DILocation(line: 425, column: 38, scope: !3051)
!3055 = !DILocation(line: 425, column: 45, scope: !3051)
!3056 = !DILocation(line: 425, column: 31, scope: !3051)
!3057 = !DILocation(line: 425, column: 5, scope: !3051)
!3058 = !DILocalVariable(name: "cp", scope: !3059, file: !897, line: 426, type: !921)
!3059 = distinct !DILexicalBlock(scope: !3052, file: !897, line: 425, column: 66)
!3060 = !DILocation(line: 426, column: 24, scope: !3059)
!3061 = !DILocation(line: 426, column: 45, scope: !3059)
!3062 = !DILocation(line: 426, column: 30, scope: !3059)
!3063 = !DILocation(line: 428, column: 17, scope: !3059)
!3064 = !DILocation(line: 428, column: 21, scope: !3059)
!3065 = !DILocation(line: 428, column: 9, scope: !3059)
!3066 = !DILocation(line: 431, column: 9, scope: !3059)
!3067 = !DILocation(line: 431, column: 13, scope: !3059)
!3068 = !DILocation(line: 431, column: 25, scope: !3059)
!3069 = !DILocation(line: 432, column: 9, scope: !3059)
!3070 = !DILocation(line: 432, column: 13, scope: !3059)
!3071 = !DILocation(line: 432, column: 22, scope: !3059)
!3072 = !DILocation(line: 433, column: 9, scope: !3059)
!3073 = !DILocation(line: 433, column: 13, scope: !3059)
!3074 = !DILocation(line: 433, column: 23, scope: !3059)
!3075 = !DILocation(line: 434, column: 5, scope: !3059)
!3076 = !DILocation(line: 425, column: 62, scope: !3077)
!3077 = !DILexicalBlockFile(scope: !3052, file: !897, discriminator: 2)
!3078 = !DILocation(line: 425, column: 5, scope: !3077)
!3079 = distinct !{!3079, !3080}
!3080 = !DILocation(line: 425, column: 5, scope: !3038)
!3081 = !DILocation(line: 435, column: 1, scope: !3038)
!3082 = distinct !DISubprogram(name: "clear_decoding_params", scope: !897, file: !897, line: 405, type: !3083, isLocal: true, isDefinition: true, scopeLine: 406, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!3083 = !DISubroutineType(types: !3084)
!3084 = !{null, !1749, !955}
!3085 = !DILocalVariable(name: "ctx", arg: 1, scope: !3082, file: !897, line: 405, type: !1749)
!3086 = !DILocation(line: 405, column: 53, scope: !3082)
!3087 = !DILocalVariable(name: "decoding_params", arg: 2, scope: !3082, file: !897, line: 405, type: !955)
!3088 = !DILocation(line: 405, column: 73, scope: !3082)
!3089 = !DILocalVariable(name: "substr", scope: !3082, file: !897, line: 407, type: !993)
!3090 = !DILocation(line: 407, column: 18, scope: !3082)
!3091 = !DILocation(line: 409, column: 17, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3082, file: !897, line: 409, column: 5)
!3093 = !DILocation(line: 409, column: 10, scope: !3092)
!3094 = !DILocation(line: 409, column: 22, scope: !3095)
!3095 = !DILexicalBlockFile(scope: !3096, file: !897, discriminator: 1)
!3096 = distinct !DILexicalBlock(scope: !3092, file: !897, line: 409, column: 5)
!3097 = !DILocation(line: 409, column: 31, scope: !3095)
!3098 = !DILocation(line: 409, column: 36, scope: !3095)
!3099 = !DILocation(line: 409, column: 29, scope: !3095)
!3100 = !DILocation(line: 409, column: 5, scope: !3095)
!3101 = !DILocalVariable(name: "dp", scope: !3102, file: !897, line: 410, type: !955)
!3102 = distinct !DILexicalBlock(scope: !3096, file: !897, line: 409, column: 62)
!3103 = !DILocation(line: 410, column: 25, scope: !3102)
!3104 = !DILocation(line: 410, column: 47, scope: !3102)
!3105 = !DILocation(line: 410, column: 31, scope: !3102)
!3106 = !DILocation(line: 412, column: 9, scope: !3102)
!3107 = !DILocation(line: 412, column: 13, scope: !3102)
!3108 = !DILocation(line: 412, column: 34, scope: !3102)
!3109 = !DILocation(line: 413, column: 9, scope: !3102)
!3110 = !DILocation(line: 413, column: 13, scope: !3102)
!3111 = !DILocation(line: 413, column: 23, scope: !3102)
!3112 = !DILocation(line: 415, column: 17, scope: !3102)
!3113 = !DILocation(line: 415, column: 21, scope: !3102)
!3114 = !DILocation(line: 415, column: 9, scope: !3102)
!3115 = !DILocation(line: 416, column: 16, scope: !3102)
!3116 = !DILocation(line: 416, column: 20, scope: !3102)
!3117 = !DILocation(line: 416, column: 9, scope: !3102)
!3118 = !DILocation(line: 417, column: 5, scope: !3102)
!3119 = !DILocation(line: 409, column: 58, scope: !3120)
!3120 = !DILexicalBlockFile(scope: !3096, file: !897, discriminator: 2)
!3121 = !DILocation(line: 409, column: 5, scope: !3120)
!3122 = distinct !{!3122, !3123}
!3123 = !DILocation(line: 409, column: 5, scope: !3082)
!3124 = !DILocation(line: 418, column: 1, scope: !3082)
!3125 = distinct !DISubprogram(name: "set_major_params", scope: !897, file: !897, line: 2083, type: !3126, isLocal: true, isDefinition: true, scopeLine: 2084, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!3126 = !DISubroutineType(types: !3127)
!3127 = !{null, !1749}
!3128 = !DILocalVariable(name: "ctx", arg: 1, scope: !3125, file: !897, line: 2083, type: !1749)
!3129 = !DILocation(line: 2083, column: 48, scope: !3125)
!3130 = !DILocalVariable(name: "rh", scope: !3125, file: !897, line: 2085, type: !1835)
!3131 = !DILocation(line: 2085, column: 20, scope: !3125)
!3132 = !DILocation(line: 2085, column: 25, scope: !3125)
!3133 = !DILocation(line: 2085, column: 30, scope: !3125)
!3134 = !DILocalVariable(name: "index", scope: !3125, file: !897, line: 2086, type: !993)
!3135 = !DILocation(line: 2086, column: 18, scope: !3125)
!3136 = !DILocalVariable(name: "substr", scope: !3125, file: !897, line: 2087, type: !993)
!3137 = !DILocation(line: 2087, column: 18, scope: !3125)
!3138 = !DILocalVariable(name: "max_huff_lsbs", scope: !3125, file: !897, line: 2088, type: !932)
!3139 = !DILocation(line: 2088, column: 13, scope: !3125)
!3140 = !DILocalVariable(name: "max_output_bits", scope: !3125, file: !897, line: 2089, type: !932)
!3141 = !DILocation(line: 2089, column: 13, scope: !3125)
!3142 = !DILocation(line: 2091, column: 17, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3125, file: !897, line: 2091, column: 5)
!3144 = !DILocation(line: 2091, column: 10, scope: !3143)
!3145 = !DILocation(line: 2091, column: 22, scope: !3146)
!3146 = !DILexicalBlockFile(scope: !3147, file: !897, discriminator: 1)
!3147 = distinct !DILexicalBlock(scope: !3143, file: !897, line: 2091, column: 5)
!3148 = !DILocation(line: 2091, column: 31, scope: !3146)
!3149 = !DILocation(line: 2091, column: 36, scope: !3146)
!3150 = !DILocation(line: 2091, column: 29, scope: !3146)
!3151 = !DILocation(line: 2091, column: 5, scope: !3146)
!3152 = !DILocalVariable(name: "seq_dp", scope: !3153, file: !897, line: 2092, type: !955)
!3153 = distinct !DILexicalBlock(scope: !3147, file: !897, line: 2091, column: 62)
!3154 = !DILocation(line: 2092, column: 25, scope: !3153)
!3155 = !DILocation(line: 2092, column: 53, scope: !3153)
!3156 = !DILocation(line: 2092, column: 58, scope: !3153)
!3157 = !DILocation(line: 2093, column: 35, scope: !3153)
!3158 = !DILocation(line: 2093, column: 40, scope: !3153)
!3159 = !DILocation(line: 2093, column: 58, scope: !3153)
!3160 = !DILocation(line: 2093, column: 64, scope: !3153)
!3161 = !DILocation(line: 2093, column: 69, scope: !3153)
!3162 = !DILocation(line: 2093, column: 62, scope: !3153)
!3163 = !DILocation(line: 2093, column: 85, scope: !3153)
!3164 = !DILocation(line: 2093, column: 90, scope: !3153)
!3165 = !DILocation(line: 2093, column: 97, scope: !3153)
!3166 = !DILocation(line: 2093, column: 83, scope: !3153)
!3167 = !DILocation(line: 2092, column: 73, scope: !3153)
!3168 = !DILocation(line: 2094, column: 51, scope: !3153)
!3169 = !DILocation(line: 2094, column: 56, scope: !3153)
!3170 = !DILocation(line: 2094, column: 74, scope: !3153)
!3171 = !DILocation(line: 2094, column: 35, scope: !3153)
!3172 = !DILocation(line: 2094, column: 40, scope: !3153)
!3173 = !DILocation(line: 2094, column: 81, scope: !3153)
!3174 = !DILocation(line: 2094, column: 86, scope: !3153)
!3175 = !DILocation(line: 2094, column: 93, scope: !3153)
!3176 = !DILocation(line: 2094, column: 79, scope: !3153)
!3177 = !DILocation(line: 2093, column: 107, scope: !3153)
!3178 = !DILocalVariable(name: "seq_cp", scope: !3153, file: !897, line: 2096, type: !921)
!3179 = !DILocation(line: 2096, column: 24, scope: !3153)
!3180 = !DILocation(line: 2096, column: 51, scope: !3153)
!3181 = !DILocation(line: 2096, column: 56, scope: !3153)
!3182 = !DILocation(line: 2097, column: 34, scope: !3153)
!3183 = !DILocation(line: 2097, column: 39, scope: !3153)
!3184 = !DILocation(line: 2097, column: 57, scope: !3153)
!3185 = !DILocation(line: 2097, column: 63, scope: !3153)
!3186 = !DILocation(line: 2097, column: 68, scope: !3153)
!3187 = !DILocation(line: 2097, column: 61, scope: !3153)
!3188 = !DILocation(line: 2097, column: 84, scope: !3153)
!3189 = !DILocation(line: 2097, column: 89, scope: !3153)
!3190 = !DILocation(line: 2097, column: 96, scope: !3153)
!3191 = !DILocation(line: 2097, column: 82, scope: !3153)
!3192 = !DILocation(line: 2096, column: 71, scope: !3153)
!3193 = !DILocation(line: 2098, column: 50, scope: !3153)
!3194 = !DILocation(line: 2098, column: 55, scope: !3153)
!3195 = !DILocation(line: 2098, column: 73, scope: !3153)
!3196 = !DILocation(line: 2098, column: 34, scope: !3153)
!3197 = !DILocation(line: 2098, column: 39, scope: !3153)
!3198 = !DILocation(line: 2098, column: 80, scope: !3153)
!3199 = !DILocation(line: 2098, column: 85, scope: !3153)
!3200 = !DILocation(line: 2098, column: 92, scope: !3153)
!3201 = !DILocation(line: 2098, column: 78, scope: !3153)
!3202 = !DILocation(line: 2097, column: 106, scope: !3153)
!3203 = !DILocalVariable(name: "channel", scope: !3153, file: !897, line: 2099, type: !993)
!3204 = !DILocation(line: 2099, column: 22, scope: !3153)
!3205 = !DILocation(line: 2100, column: 20, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3153, file: !897, line: 2100, column: 9)
!3207 = !DILocation(line: 2100, column: 14, scope: !3206)
!3208 = !DILocation(line: 2100, column: 25, scope: !3209)
!3209 = !DILexicalBlockFile(scope: !3210, file: !897, discriminator: 1)
!3210 = distinct !DILexicalBlock(scope: !3206, file: !897, line: 2100, column: 9)
!3211 = !DILocation(line: 2100, column: 47, scope: !3209)
!3212 = !DILocation(line: 2100, column: 52, scope: !3209)
!3213 = !DILocation(line: 2100, column: 69, scope: !3209)
!3214 = !DILocation(line: 2100, column: 33, scope: !3209)
!3215 = !DILocation(line: 2100, column: 38, scope: !3209)
!3216 = !DILocation(line: 2100, column: 31, scope: !3209)
!3217 = !DILocation(line: 2100, column: 9, scope: !3209)
!3218 = !DILocation(line: 2101, column: 55, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3210, file: !897, line: 2100, column: 83)
!3220 = !DILocation(line: 2101, column: 21, scope: !3219)
!3221 = !DILocation(line: 2101, column: 48, scope: !3219)
!3222 = !DILocation(line: 2101, column: 26, scope: !3219)
!3223 = !DILocation(line: 2101, column: 13, scope: !3219)
!3224 = !DILocation(line: 2101, column: 64, scope: !3219)
!3225 = !DILocation(line: 2101, column: 73, scope: !3219)
!3226 = !DILocation(line: 2101, column: 80, scope: !3219)
!3227 = !DILocation(line: 2101, column: 85, scope: !3219)
!3228 = !DILocation(line: 2101, column: 78, scope: !3219)
!3229 = !DILocation(line: 2101, column: 71, scope: !3219)
!3230 = !DILocation(line: 2101, column: 103, scope: !3219)
!3231 = !DILocation(line: 2101, column: 101, scope: !3219)
!3232 = !DILocation(line: 2102, column: 26, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3219, file: !897, line: 2102, column: 13)
!3234 = !DILocation(line: 2102, column: 18, scope: !3233)
!3235 = !DILocation(line: 2102, column: 31, scope: !3236)
!3236 = !DILexicalBlockFile(scope: !3237, file: !897, discriminator: 1)
!3237 = distinct !DILexicalBlock(scope: !3233, file: !897, line: 2102, column: 13)
!3238 = !DILocation(line: 2102, column: 41, scope: !3236)
!3239 = !DILocation(line: 2102, column: 46, scope: !3236)
!3240 = !DILocation(line: 2102, column: 53, scope: !3236)
!3241 = !DILocation(line: 2102, column: 39, scope: !3236)
!3242 = !DILocation(line: 2102, column: 13, scope: !3236)
!3243 = !DILocalVariable(name: "huff_lsbs", scope: !3244, file: !897, line: 2103, type: !932)
!3244 = distinct !DILexicalBlock(scope: !3237, file: !897, line: 2102, column: 74)
!3245 = !DILocation(line: 2103, column: 25, scope: !3244)
!3246 = !DILocation(line: 2103, column: 38, scope: !3244)
!3247 = !DILocation(line: 2103, column: 47, scope: !3244)
!3248 = !DILocation(line: 2103, column: 54, scope: !3244)
!3249 = !DILocation(line: 2103, column: 59, scope: !3244)
!3250 = !DILocation(line: 2103, column: 66, scope: !3244)
!3251 = !DILocation(line: 2103, column: 52, scope: !3244)
!3252 = !DILocation(line: 2103, column: 45, scope: !3244)
!3253 = !DILocation(line: 2103, column: 78, scope: !3244)
!3254 = !DILocation(line: 2103, column: 76, scope: !3244)
!3255 = !DILocation(line: 2103, column: 88, scope: !3244)
!3256 = !DILocation(line: 2104, column: 21, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3244, file: !897, line: 2104, column: 21)
!3258 = !DILocation(line: 2104, column: 37, scope: !3257)
!3259 = !DILocation(line: 2104, column: 35, scope: !3257)
!3260 = !DILocation(line: 2104, column: 21, scope: !3244)
!3261 = !DILocation(line: 2105, column: 37, scope: !3257)
!3262 = !DILocation(line: 2105, column: 35, scope: !3257)
!3263 = !DILocation(line: 2105, column: 21, scope: !3257)
!3264 = !DILocation(line: 2106, column: 58, scope: !3244)
!3265 = !DILocation(line: 2106, column: 25, scope: !3244)
!3266 = !DILocation(line: 2106, column: 51, scope: !3244)
!3267 = !DILocation(line: 2106, column: 30, scope: !3244)
!3268 = !DILocation(line: 2106, column: 17, scope: !3244)
!3269 = !DILocation(line: 2107, column: 25, scope: !3244)
!3270 = !DILocation(line: 2107, column: 34, scope: !3244)
!3271 = !DILocation(line: 2107, column: 41, scope: !3244)
!3272 = !DILocation(line: 2107, column: 46, scope: !3244)
!3273 = !DILocation(line: 2107, column: 53, scope: !3244)
!3274 = !DILocation(line: 2107, column: 39, scope: !3244)
!3275 = !DILocation(line: 2107, column: 32, scope: !3244)
!3276 = !DILocation(line: 2107, column: 65, scope: !3244)
!3277 = !DILocation(line: 2107, column: 63, scope: !3244)
!3278 = !DILocation(line: 2109, column: 13, scope: !3244)
!3279 = !DILocation(line: 2102, column: 70, scope: !3280)
!3280 = !DILexicalBlockFile(scope: !3237, file: !897, discriminator: 2)
!3281 = !DILocation(line: 2102, column: 13, scope: !3280)
!3282 = distinct !{!3282, !3283}
!3283 = !DILocation(line: 2102, column: 13, scope: !3219)
!3284 = !DILocation(line: 2110, column: 9, scope: !3219)
!3285 = !DILocation(line: 2100, column: 79, scope: !3286)
!3286 = !DILexicalBlockFile(scope: !3210, file: !897, discriminator: 2)
!3287 = !DILocation(line: 2100, column: 9, scope: !3286)
!3288 = distinct !{!3288, !3289}
!3289 = !DILocation(line: 2100, column: 9, scope: !3153)
!3290 = !DILocation(line: 2111, column: 5, scope: !3153)
!3291 = !DILocation(line: 2091, column: 58, scope: !3292)
!3292 = !DILexicalBlockFile(scope: !3147, file: !897, discriminator: 2)
!3293 = !DILocation(line: 2091, column: 5, scope: !3292)
!3294 = distinct !{!3294, !3295}
!3295 = !DILocation(line: 2091, column: 5, scope: !3125)
!3296 = !DILocation(line: 2113, column: 25, scope: !3125)
!3297 = !DILocation(line: 2113, column: 5, scope: !3125)
!3298 = !DILocation(line: 2113, column: 9, scope: !3125)
!3299 = !DILocation(line: 2113, column: 23, scope: !3125)
!3300 = !DILocation(line: 2115, column: 16, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3125, file: !897, line: 2115, column: 5)
!3302 = !DILocation(line: 2115, column: 10, scope: !3301)
!3303 = !DILocation(line: 2115, column: 21, scope: !3304)
!3304 = !DILexicalBlockFile(scope: !3305, file: !897, discriminator: 1)
!3305 = distinct !DILexicalBlock(scope: !3301, file: !897, line: 2115, column: 5)
!3306 = !DILocation(line: 2115, column: 29, scope: !3304)
!3307 = !DILocation(line: 2115, column: 34, scope: !3304)
!3308 = !DILocation(line: 2115, column: 27, scope: !3304)
!3309 = !DILocation(line: 2115, column: 5, scope: !3304)
!3310 = !DILocation(line: 2116, column: 13, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3305, file: !897, line: 2116, column: 13)
!3312 = !DILocation(line: 2116, column: 52, scope: !3311)
!3313 = !DILocation(line: 2116, column: 31, scope: !3311)
!3314 = !DILocation(line: 2116, column: 36, scope: !3311)
!3315 = !DILocation(line: 2116, column: 29, scope: !3311)
!3316 = !DILocation(line: 2116, column: 13, scope: !3305)
!3317 = !DILocation(line: 2117, column: 52, scope: !3311)
!3318 = !DILocation(line: 2117, column: 31, scope: !3311)
!3319 = !DILocation(line: 2117, column: 36, scope: !3311)
!3320 = !DILocation(line: 2117, column: 29, scope: !3311)
!3321 = !DILocation(line: 2117, column: 13, scope: !3311)
!3322 = !DILocation(line: 2116, column: 57, scope: !3323)
!3323 = !DILexicalBlockFile(scope: !3311, file: !897, discriminator: 1)
!3324 = !DILocation(line: 2115, column: 57, scope: !3325)
!3325 = !DILexicalBlockFile(scope: !3305, file: !897, discriminator: 2)
!3326 = !DILocation(line: 2115, column: 5, scope: !3325)
!3327 = distinct !{!3327, !3328}
!3328 = !DILocation(line: 2115, column: 5, scope: !3125)
!3329 = !DILocation(line: 2118, column: 27, scope: !3125)
!3330 = !DILocation(line: 2118, column: 5, scope: !3125)
!3331 = !DILocation(line: 2118, column: 9, scope: !3125)
!3332 = !DILocation(line: 2118, column: 25, scope: !3125)
!3333 = !DILocation(line: 2120, column: 17, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3125, file: !897, line: 2120, column: 5)
!3335 = !DILocation(line: 2120, column: 10, scope: !3334)
!3336 = !DILocation(line: 2120, column: 22, scope: !3337)
!3337 = !DILexicalBlockFile(scope: !3338, file: !897, discriminator: 1)
!3338 = distinct !DILexicalBlock(scope: !3334, file: !897, line: 2120, column: 5)
!3339 = !DILocation(line: 2120, column: 31, scope: !3337)
!3340 = !DILocation(line: 2120, column: 36, scope: !3337)
!3341 = !DILocation(line: 2120, column: 29, scope: !3337)
!3342 = !DILocation(line: 2120, column: 5, scope: !3337)
!3343 = !DILocation(line: 2122, column: 56, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3338, file: !897, line: 2120, column: 62)
!3345 = !DILocation(line: 2122, column: 36, scope: !3344)
!3346 = !DILocation(line: 2122, column: 41, scope: !3344)
!3347 = !DILocation(line: 2122, column: 9, scope: !3344)
!3348 = !DILocation(line: 2122, column: 14, scope: !3344)
!3349 = !DILocation(line: 2122, column: 33, scope: !3344)
!3350 = !DILocation(line: 2124, column: 62, scope: !3344)
!3351 = !DILocation(line: 2124, column: 38, scope: !3344)
!3352 = !DILocation(line: 2124, column: 9, scope: !3344)
!3353 = !DILocation(line: 2124, column: 14, scope: !3344)
!3354 = !DILocation(line: 2124, column: 35, scope: !3344)
!3355 = !DILocation(line: 2125, column: 9, scope: !3344)
!3356 = !DILocation(line: 2125, column: 14, scope: !3344)
!3357 = !DILocation(line: 2125, column: 34, scope: !3344)
!3358 = !DILocation(line: 2127, column: 20, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3344, file: !897, line: 2127, column: 9)
!3360 = !DILocation(line: 2127, column: 14, scope: !3359)
!3361 = !DILocation(line: 2127, column: 25, scope: !3362)
!3362 = !DILexicalBlockFile(scope: !3363, file: !897, discriminator: 1)
!3363 = distinct !DILexicalBlock(scope: !3359, file: !897, line: 2127, column: 9)
!3364 = !DILocation(line: 2127, column: 31, scope: !3362)
!3365 = !DILocation(line: 2127, column: 9, scope: !3362)
!3366 = !DILocation(line: 2128, column: 79, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3363, file: !897, line: 2127, column: 50)
!3368 = !DILocation(line: 2128, column: 45, scope: !3367)
!3369 = !DILocation(line: 2128, column: 72, scope: !3367)
!3370 = !DILocation(line: 2128, column: 50, scope: !3367)
!3371 = !DILocation(line: 2128, column: 17, scope: !3367)
!3372 = !DILocation(line: 2128, column: 22, scope: !3367)
!3373 = !DILocation(line: 2128, column: 42, scope: !3367)
!3374 = !DILocation(line: 2129, column: 69, scope: !3367)
!3375 = !DILocation(line: 2129, column: 43, scope: !3367)
!3376 = !DILocation(line: 2129, column: 48, scope: !3367)
!3377 = !DILocation(line: 2129, column: 17, scope: !3367)
!3378 = !DILocation(line: 2129, column: 22, scope: !3367)
!3379 = !DILocation(line: 2129, column: 41, scope: !3367)
!3380 = !DILocation(line: 2131, column: 84, scope: !3367)
!3381 = !DILocation(line: 2131, column: 60, scope: !3367)
!3382 = !DILocation(line: 2131, column: 50, scope: !3367)
!3383 = !DILocation(line: 2131, column: 17, scope: !3367)
!3384 = !DILocation(line: 2131, column: 43, scope: !3367)
!3385 = !DILocation(line: 2131, column: 22, scope: !3367)
!3386 = !DILocation(line: 2131, column: 58, scope: !3367)
!3387 = !DILocation(line: 2133, column: 45, scope: !3367)
!3388 = !DILocation(line: 2133, column: 50, scope: !3367)
!3389 = !DILocation(line: 2133, column: 17, scope: !3367)
!3390 = !DILocation(line: 2133, column: 22, scope: !3367)
!3391 = !DILocation(line: 2133, column: 43, scope: !3367)
!3392 = !DILocation(line: 2134, column: 44, scope: !3367)
!3393 = !DILocation(line: 2134, column: 49, scope: !3367)
!3394 = !DILocation(line: 2134, column: 17, scope: !3367)
!3395 = !DILocation(line: 2134, column: 22, scope: !3367)
!3396 = !DILocation(line: 2134, column: 42, scope: !3367)
!3397 = !DILocation(line: 2135, column: 9, scope: !3367)
!3398 = !DILocation(line: 2127, column: 46, scope: !3399)
!3399 = !DILexicalBlockFile(scope: !3363, file: !897, discriminator: 2)
!3400 = !DILocation(line: 2127, column: 9, scope: !3399)
!3401 = distinct !{!3401, !3402}
!3402 = !DILocation(line: 2127, column: 9, scope: !3344)
!3403 = !DILocation(line: 2136, column: 5, scope: !3344)
!3404 = !DILocation(line: 2120, column: 58, scope: !3405)
!3405 = !DILexicalBlockFile(scope: !3338, file: !897, discriminator: 2)
!3406 = !DILocation(line: 2120, column: 5, scope: !3405)
!3407 = distinct !{!3407, !3408}
!3408 = !DILocation(line: 2120, column: 5, scope: !3125)
!3409 = !DILocation(line: 2138, column: 38, scope: !3125)
!3410 = !DILocation(line: 2138, column: 43, scope: !3125)
!3411 = !DILocation(line: 2138, column: 5, scope: !3125)
!3412 = !DILocation(line: 2138, column: 10, scope: !3125)
!3413 = !DILocation(line: 2138, column: 36, scope: !3125)
!3414 = !DILocation(line: 2139, column: 5, scope: !3125)
!3415 = !DILocation(line: 2139, column: 10, scope: !3125)
!3416 = !DILocation(line: 2139, column: 38, scope: !3125)
!3417 = !DILocation(line: 2140, column: 5, scope: !3125)
!3418 = !DILocation(line: 2140, column: 10, scope: !3125)
!3419 = !DILocation(line: 2140, column: 35, scope: !3125)
!3420 = !DILocation(line: 2141, column: 1, scope: !3125)
!3421 = distinct !DISubprogram(name: "process_major_frame", scope: !897, file: !897, line: 2191, type: !3126, isLocal: true, isDefinition: true, scopeLine: 2192, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!3422 = !DILocalVariable(name: "ctx", arg: 1, scope: !3421, file: !897, line: 2191, type: !1749)
!3423 = !DILocation(line: 2191, column: 51, scope: !3421)
!3424 = !DILocalVariable(name: "substr", scope: !3421, file: !897, line: 2193, type: !993)
!3425 = !DILocation(line: 2193, column: 18, scope: !3421)
!3426 = !DILocation(line: 2195, column: 26, scope: !3421)
!3427 = !DILocation(line: 2195, column: 31, scope: !3421)
!3428 = !DILocation(line: 2195, column: 5, scope: !3421)
!3429 = !DILocation(line: 2195, column: 10, scope: !3421)
!3430 = !DILocation(line: 2195, column: 24, scope: !3421)
!3431 = !DILocation(line: 2197, column: 5, scope: !3421)
!3432 = !DILocation(line: 2197, column: 10, scope: !3421)
!3433 = !DILocation(line: 2197, column: 31, scope: !3421)
!3434 = !DILocation(line: 2198, column: 29, scope: !3421)
!3435 = !DILocation(line: 2198, column: 34, scope: !3421)
!3436 = !DILocation(line: 2198, column: 5, scope: !3421)
!3437 = !DILocation(line: 2198, column: 10, scope: !3421)
!3438 = !DILocation(line: 2198, column: 27, scope: !3421)
!3439 = !DILocation(line: 2199, column: 30, scope: !3421)
!3440 = !DILocation(line: 2199, column: 35, scope: !3421)
!3441 = !DILocation(line: 2199, column: 5, scope: !3421)
!3442 = !DILocation(line: 2199, column: 10, scope: !3421)
!3443 = !DILocation(line: 2199, column: 28, scope: !3421)
!3444 = !DILocation(line: 2201, column: 17, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3421, file: !897, line: 2201, column: 5)
!3446 = !DILocation(line: 2201, column: 10, scope: !3445)
!3447 = !DILocation(line: 2201, column: 22, scope: !3448)
!3448 = !DILexicalBlockFile(scope: !3449, file: !897, discriminator: 1)
!3449 = distinct !DILexicalBlock(scope: !3445, file: !897, line: 2201, column: 5)
!3450 = !DILocation(line: 2201, column: 31, scope: !3448)
!3451 = !DILocation(line: 2201, column: 36, scope: !3448)
!3452 = !DILocation(line: 2201, column: 29, scope: !3448)
!3453 = !DILocation(line: 2201, column: 5, scope: !3448)
!3454 = !DILocalVariable(name: "rh", scope: !3455, file: !897, line: 2202, type: !1835)
!3455 = distinct !DILexicalBlock(scope: !3449, file: !897, line: 2201, column: 62)
!3456 = !DILocation(line: 2202, column: 24, scope: !3455)
!3457 = !DILocation(line: 2202, column: 29, scope: !3455)
!3458 = !DILocation(line: 2202, column: 34, scope: !3455)
!3459 = !DILocalVariable(name: "channel", scope: !3455, file: !897, line: 2203, type: !993)
!3460 = !DILocation(line: 2203, column: 22, scope: !3455)
!3461 = !DILocation(line: 2205, column: 56, scope: !3455)
!3462 = !DILocation(line: 2205, column: 36, scope: !3455)
!3463 = !DILocation(line: 2205, column: 41, scope: !3455)
!3464 = !DILocation(line: 2205, column: 9, scope: !3455)
!3465 = !DILocation(line: 2205, column: 14, scope: !3455)
!3466 = !DILocation(line: 2205, column: 33, scope: !3455)
!3467 = !DILocation(line: 2207, column: 67, scope: !3455)
!3468 = !DILocation(line: 2207, column: 37, scope: !3455)
!3469 = !DILocation(line: 2207, column: 42, scope: !3455)
!3470 = !DILocation(line: 2207, column: 9, scope: !3455)
!3471 = !DILocation(line: 2207, column: 14, scope: !3455)
!3472 = !DILocation(line: 2207, column: 34, scope: !3455)
!3473 = !DILocation(line: 2208, column: 35, scope: !3455)
!3474 = !DILocation(line: 2208, column: 40, scope: !3455)
!3475 = !DILocation(line: 2208, column: 9, scope: !3455)
!3476 = !DILocation(line: 2208, column: 14, scope: !3455)
!3477 = !DILocation(line: 2208, column: 33, scope: !3455)
!3478 = !DILocation(line: 2210, column: 35, scope: !3455)
!3479 = !DILocation(line: 2210, column: 9, scope: !3455)
!3480 = !DILocation(line: 2211, column: 28, scope: !3455)
!3481 = !DILocation(line: 2211, column: 9, scope: !3455)
!3482 = !DILocation(line: 2213, column: 24, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3455, file: !897, line: 2213, column: 9)
!3484 = !DILocation(line: 2213, column: 28, scope: !3483)
!3485 = !DILocation(line: 2213, column: 22, scope: !3483)
!3486 = !DILocation(line: 2213, column: 14, scope: !3483)
!3487 = !DILocation(line: 2213, column: 41, scope: !3488)
!3488 = !DILexicalBlockFile(scope: !3489, file: !897, discriminator: 1)
!3489 = distinct !DILexicalBlock(scope: !3483, file: !897, line: 2213, column: 9)
!3490 = !DILocation(line: 2213, column: 52, scope: !3488)
!3491 = !DILocation(line: 2213, column: 56, scope: !3488)
!3492 = !DILocation(line: 2213, column: 49, scope: !3488)
!3493 = !DILocation(line: 2213, column: 9, scope: !3488)
!3494 = !DILocation(line: 2214, column: 26, scope: !3489)
!3495 = !DILocation(line: 2214, column: 31, scope: !3489)
!3496 = !DILocation(line: 2214, column: 13, scope: !3489)
!3497 = !DILocation(line: 2213, column: 76, scope: !3498)
!3498 = !DILexicalBlockFile(scope: !3489, file: !897, discriminator: 2)
!3499 = !DILocation(line: 2213, column: 9, scope: !3498)
!3500 = distinct !{!3500, !3501}
!3501 = !DILocation(line: 2213, column: 9, scope: !3455)
!3502 = !DILocation(line: 2215, column: 5, scope: !3455)
!3503 = !DILocation(line: 2201, column: 58, scope: !3504)
!3504 = !DILexicalBlockFile(scope: !3449, file: !897, discriminator: 2)
!3505 = !DILocation(line: 2201, column: 5, scope: !3504)
!3506 = distinct !{!3506, !3507}
!3507 = !DILocation(line: 2201, column: 5, scope: !3421)
!3508 = !DILocation(line: 2216, column: 1, scope: !3421)
!3509 = distinct !DISubprogram(name: "write_access_unit", scope: !897, file: !897, line: 1183, type: !3510, isLocal: true, isDefinition: true, scopeLine: 1185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{!993, !1749, !1121, !939, !939}
!3512 = !DILocalVariable(name: "ctx", arg: 1, scope: !3509, file: !897, line: 1183, type: !1749)
!3513 = !DILocation(line: 1183, column: 57, scope: !3509)
!3514 = !DILocalVariable(name: "buf", arg: 2, scope: !3509, file: !897, line: 1183, type: !1121)
!3515 = !DILocation(line: 1183, column: 71, scope: !3509)
!3516 = !DILocalVariable(name: "buf_size", arg: 3, scope: !3509, file: !897, line: 1184, type: !939)
!3517 = !DILocation(line: 1184, column: 43, scope: !3509)
!3518 = !DILocalVariable(name: "restart_frame", arg: 4, scope: !3509, file: !897, line: 1184, type: !939)
!3519 = !DILocation(line: 1184, column: 57, scope: !3509)
!3520 = !DILocalVariable(name: "substream_data_len", scope: !3509, file: !897, line: 1186, type: !3521)
!3521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !960, size: 64, align: 16, elements: !1218)
!3522 = !DILocation(line: 1186, column: 14, scope: !3509)
!3523 = !DILocalVariable(name: "buf1", scope: !3509, file: !897, line: 1187, type: !1121)
!3524 = !DILocation(line: 1187, column: 14, scope: !3509)
!3525 = !DILocalVariable(name: "buf0", scope: !3509, file: !897, line: 1187, type: !1121)
!3526 = !DILocation(line: 1187, column: 21, scope: !3509)
!3527 = !DILocation(line: 1187, column: 28, scope: !3509)
!3528 = !DILocalVariable(name: "substr", scope: !3509, file: !897, line: 1188, type: !993)
!3529 = !DILocation(line: 1188, column: 18, scope: !3509)
!3530 = !DILocalVariable(name: "total_length", scope: !3509, file: !897, line: 1189, type: !939)
!3531 = !DILocation(line: 1189, column: 9, scope: !3509)
!3532 = !DILocation(line: 1191, column: 9, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3509, file: !897, line: 1191, column: 9)
!3534 = !DILocation(line: 1191, column: 18, scope: !3533)
!3535 = !DILocation(line: 1191, column: 9, scope: !3509)
!3536 = !DILocation(line: 1192, column: 9, scope: !3533)
!3537 = !DILocation(line: 1195, column: 9, scope: !3509)
!3538 = !DILocation(line: 1196, column: 14, scope: !3509)
!3539 = !DILocation(line: 1198, column: 9, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3509, file: !897, line: 1198, column: 9)
!3541 = !DILocation(line: 1198, column: 9, scope: !3509)
!3542 = !DILocation(line: 1199, column: 13, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !897, line: 1199, column: 13)
!3544 = distinct !DILexicalBlock(scope: !3540, file: !897, line: 1198, column: 24)
!3545 = !DILocation(line: 1199, column: 22, scope: !3543)
!3546 = !DILocation(line: 1199, column: 13, scope: !3544)
!3547 = !DILocation(line: 1200, column: 13, scope: !3543)
!3548 = !DILocation(line: 1201, column: 26, scope: !3544)
!3549 = !DILocation(line: 1201, column: 31, scope: !3544)
!3550 = !DILocation(line: 1201, column: 36, scope: !3544)
!3551 = !DILocation(line: 1201, column: 9, scope: !3544)
!3552 = !DILocation(line: 1202, column: 13, scope: !3544)
!3553 = !DILocation(line: 1203, column: 18, scope: !3544)
!3554 = !DILocation(line: 1204, column: 5, scope: !3544)
!3555 = !DILocation(line: 1206, column: 12, scope: !3509)
!3556 = !DILocation(line: 1206, column: 10, scope: !3509)
!3557 = !DILocation(line: 1209, column: 17, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3509, file: !897, line: 1209, column: 5)
!3559 = !DILocation(line: 1209, column: 10, scope: !3558)
!3560 = !DILocation(line: 1209, column: 22, scope: !3561)
!3561 = !DILexicalBlockFile(scope: !3562, file: !897, discriminator: 1)
!3562 = distinct !DILexicalBlock(scope: !3558, file: !897, line: 1209, column: 5)
!3563 = !DILocation(line: 1209, column: 31, scope: !3561)
!3564 = !DILocation(line: 1209, column: 36, scope: !3561)
!3565 = !DILocation(line: 1209, column: 29, scope: !3561)
!3566 = !DILocation(line: 1209, column: 5, scope: !3561)
!3567 = !DILocation(line: 1210, column: 13, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3562, file: !897, line: 1209, column: 62)
!3569 = !DILocation(line: 1211, column: 18, scope: !3568)
!3570 = !DILocation(line: 1212, column: 5, scope: !3568)
!3571 = !DILocation(line: 1209, column: 58, scope: !3572)
!3572 = !DILexicalBlockFile(scope: !3562, file: !897, discriminator: 2)
!3573 = !DILocation(line: 1209, column: 5, scope: !3572)
!3574 = distinct !{!3574, !3575}
!3575 = !DILocation(line: 1209, column: 5, scope: !3509)
!3576 = !DILocation(line: 1214, column: 25, scope: !3509)
!3577 = !DILocation(line: 1214, column: 30, scope: !3509)
!3578 = !DILocation(line: 1214, column: 35, scope: !3509)
!3579 = !DILocation(line: 1214, column: 45, scope: !3509)
!3580 = !DILocation(line: 1214, column: 60, scope: !3509)
!3581 = !DILocation(line: 1214, column: 11, scope: !3509)
!3582 = !DILocation(line: 1214, column: 9, scope: !3509)
!3583 = !DILocation(line: 1216, column: 20, scope: !3509)
!3584 = !DILocation(line: 1216, column: 26, scope: !3509)
!3585 = !DILocation(line: 1216, column: 24, scope: !3509)
!3586 = !DILocation(line: 1216, column: 18, scope: !3509)
!3587 = !DILocation(line: 1218, column: 25, scope: !3509)
!3588 = !DILocation(line: 1218, column: 30, scope: !3509)
!3589 = !DILocation(line: 1218, column: 36, scope: !3509)
!3590 = !DILocation(line: 1218, column: 42, scope: !3509)
!3591 = !DILocation(line: 1218, column: 55, scope: !3509)
!3592 = !DILocation(line: 1218, column: 60, scope: !3509)
!3593 = !DILocation(line: 1218, column: 75, scope: !3509)
!3594 = !DILocation(line: 1218, column: 5, scope: !3509)
!3595 = !DILocation(line: 1220, column: 12, scope: !3509)
!3596 = !DILocation(line: 1220, column: 5, scope: !3509)
!3597 = !DILocation(line: 1221, column: 1, scope: !3509)
!3598 = distinct !DISubprogram(name: "input_data", scope: !897, file: !897, line: 1275, type: !3599, isLocal: true, isDefinition: true, scopeLine: 1276, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!3599 = !DISubroutineType(types: !3600)
!3600 = !{null, !1749, !994}
!3601 = !DILocalVariable(name: "ctx", arg: 1, scope: !3598, file: !897, line: 1275, type: !1749)
!3602 = !DILocation(line: 1275, column: 42, scope: !3598)
!3603 = !DILocalVariable(name: "samples", arg: 2, scope: !3598, file: !897, line: 1275, type: !994)
!3604 = !DILocation(line: 1275, column: 53, scope: !3598)
!3605 = !DILocation(line: 1277, column: 9, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3598, file: !897, line: 1277, column: 9)
!3607 = !DILocation(line: 1277, column: 14, scope: !3606)
!3608 = !DILocation(line: 1277, column: 21, scope: !3606)
!3609 = !DILocation(line: 1277, column: 32, scope: !3606)
!3610 = !DILocation(line: 1277, column: 9, scope: !3598)
!3611 = !DILocation(line: 1278, column: 29, scope: !3606)
!3612 = !DILocation(line: 1278, column: 34, scope: !3606)
!3613 = !DILocation(line: 1278, column: 9, scope: !3606)
!3614 = !DILocation(line: 1280, column: 29, scope: !3606)
!3615 = !DILocation(line: 1280, column: 34, scope: !3606)
!3616 = !DILocation(line: 1280, column: 9, scope: !3606)
!3617 = !DILocation(line: 1281, column: 1, scope: !3598)
!3618 = distinct !DISubprogram(name: "default_decoding_params", scope: !897, file: !897, line: 438, type: !3083, isLocal: true, isDefinition: true, scopeLine: 440, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!3619 = !DILocalVariable(name: "ctx", arg: 1, scope: !3618, file: !897, line: 438, type: !1749)
!3620 = !DILocation(line: 438, column: 55, scope: !3618)
!3621 = !DILocalVariable(name: "decoding_params", arg: 2, scope: !3618, file: !897, line: 439, type: !955)
!3622 = !DILocation(line: 439, column: 21, scope: !3618)
!3623 = !DILocalVariable(name: "substr", scope: !3618, file: !897, line: 441, type: !993)
!3624 = !DILocation(line: 441, column: 18, scope: !3618)
!3625 = !DILocation(line: 443, column: 27, scope: !3618)
!3626 = !DILocation(line: 443, column: 32, scope: !3618)
!3627 = !DILocation(line: 443, column: 5, scope: !3618)
!3628 = !DILocation(line: 445, column: 17, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3618, file: !897, line: 445, column: 5)
!3630 = !DILocation(line: 445, column: 10, scope: !3629)
!3631 = !DILocation(line: 445, column: 22, scope: !3632)
!3632 = !DILexicalBlockFile(scope: !3633, file: !897, discriminator: 1)
!3633 = distinct !DILexicalBlock(scope: !3629, file: !897, line: 445, column: 5)
!3634 = !DILocation(line: 445, column: 31, scope: !3632)
!3635 = !DILocation(line: 445, column: 36, scope: !3632)
!3636 = !DILocation(line: 445, column: 29, scope: !3632)
!3637 = !DILocation(line: 445, column: 5, scope: !3632)
!3638 = !DILocalVariable(name: "dp", scope: !3639, file: !897, line: 446, type: !955)
!3639 = distinct !DILexicalBlock(scope: !3633, file: !897, line: 445, column: 62)
!3640 = !DILocation(line: 446, column: 25, scope: !3639)
!3641 = !DILocation(line: 446, column: 47, scope: !3639)
!3642 = !DILocation(line: 446, column: 31, scope: !3639)
!3643 = !DILocalVariable(name: "param_presence_flags", scope: !3639, file: !897, line: 447, type: !932)
!3644 = !DILocation(line: 447, column: 17, scope: !3639)
!3645 = !DILocation(line: 449, column: 30, scope: !3639)
!3646 = !DILocation(line: 450, column: 30, scope: !3639)
!3647 = !DILocation(line: 451, column: 30, scope: !3639)
!3648 = !DILocation(line: 452, column: 30, scope: !3639)
!3649 = !DILocation(line: 453, column: 30, scope: !3639)
!3650 = !DILocation(line: 455, column: 30, scope: !3639)
!3651 = !DILocation(line: 456, column: 30, scope: !3639)
!3652 = !DILocation(line: 458, column: 36, scope: !3639)
!3653 = !DILocation(line: 458, column: 9, scope: !3639)
!3654 = !DILocation(line: 458, column: 13, scope: !3639)
!3655 = !DILocation(line: 458, column: 34, scope: !3639)
!3656 = !DILocation(line: 459, column: 5, scope: !3639)
!3657 = !DILocation(line: 445, column: 58, scope: !3658)
!3658 = !DILexicalBlockFile(scope: !3633, file: !897, discriminator: 2)
!3659 = !DILocation(line: 445, column: 5, scope: !3658)
!3660 = distinct !{!3660, !3661}
!3661 = !DILocation(line: 445, column: 5, scope: !3618)
!3662 = !DILocation(line: 460, column: 1, scope: !3618)
!3663 = distinct !DISubprogram(name: "input_to_sample_buffer", scope: !897, file: !897, line: 1283, type: !3126, isLocal: true, isDefinition: true, scopeLine: 1284, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!3664 = !DILocalVariable(name: "ctx", arg: 1, scope: !3663, file: !897, line: 1283, type: !1749)
!3665 = !DILocation(line: 1283, column: 54, scope: !3663)
!3666 = !DILocalVariable(name: "sample_buffer", scope: !3663, file: !897, line: 1285, type: !1767)
!3667 = !DILocation(line: 1285, column: 14, scope: !3663)
!3668 = !DILocation(line: 1285, column: 30, scope: !3663)
!3669 = !DILocation(line: 1285, column: 35, scope: !3663)
!3670 = !DILocalVariable(name: "index", scope: !3663, file: !897, line: 1286, type: !993)
!3671 = !DILocation(line: 1286, column: 18, scope: !3663)
!3672 = !DILocation(line: 1288, column: 16, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3663, file: !897, line: 1288, column: 5)
!3674 = !DILocation(line: 1288, column: 10, scope: !3673)
!3675 = !DILocation(line: 1288, column: 21, scope: !3676)
!3676 = !DILexicalBlockFile(scope: !3677, file: !897, discriminator: 1)
!3677 = distinct !DILexicalBlock(scope: !3673, file: !897, line: 1288, column: 5)
!3678 = !DILocation(line: 1288, column: 29, scope: !3676)
!3679 = !DILocation(line: 1288, column: 34, scope: !3676)
!3680 = !DILocation(line: 1288, column: 27, scope: !3676)
!3681 = !DILocation(line: 1288, column: 5, scope: !3676)
!3682 = !DILocalVariable(name: "cur_index", scope: !3683, file: !897, line: 1289, type: !993)
!3683 = distinct !DILexicalBlock(scope: !3677, file: !897, line: 1288, column: 61)
!3684 = !DILocation(line: 1289, column: 22, scope: !3683)
!3685 = !DILocation(line: 1289, column: 35, scope: !3683)
!3686 = !DILocation(line: 1289, column: 40, scope: !3683)
!3687 = !DILocation(line: 1289, column: 63, scope: !3683)
!3688 = !DILocation(line: 1289, column: 61, scope: !3683)
!3689 = !DILocation(line: 1289, column: 72, scope: !3683)
!3690 = !DILocation(line: 1289, column: 77, scope: !3683)
!3691 = !DILocation(line: 1289, column: 70, scope: !3683)
!3692 = !DILocalVariable(name: "input_buffer", scope: !3683, file: !897, line: 1290, type: !1767)
!3693 = !DILocation(line: 1290, column: 18, scope: !3683)
!3694 = !DILocation(line: 1290, column: 33, scope: !3683)
!3695 = !DILocation(line: 1290, column: 38, scope: !3683)
!3696 = !DILocation(line: 1290, column: 53, scope: !3683)
!3697 = !DILocation(line: 1290, column: 65, scope: !3683)
!3698 = !DILocation(line: 1290, column: 70, scope: !3683)
!3699 = !DILocation(line: 1290, column: 63, scope: !3683)
!3700 = !DILocation(line: 1290, column: 51, scope: !3683)
!3701 = !DILocalVariable(name: "i", scope: !3683, file: !897, line: 1291, type: !993)
!3702 = !DILocation(line: 1291, column: 22, scope: !3683)
!3703 = !DILocalVariable(name: "channel", scope: !3683, file: !897, line: 1291, type: !993)
!3704 = !DILocation(line: 1291, column: 25, scope: !3683)
!3705 = !DILocation(line: 1293, column: 16, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3683, file: !897, line: 1293, column: 9)
!3707 = !DILocation(line: 1293, column: 14, scope: !3706)
!3708 = !DILocation(line: 1293, column: 21, scope: !3709)
!3709 = !DILexicalBlockFile(scope: !3710, file: !897, discriminator: 1)
!3710 = distinct !DILexicalBlock(scope: !3706, file: !897, line: 1293, column: 9)
!3711 = !DILocation(line: 1293, column: 41, scope: !3709)
!3712 = !DILocation(line: 1293, column: 25, scope: !3709)
!3713 = !DILocation(line: 1293, column: 30, scope: !3709)
!3714 = !DILocation(line: 1293, column: 23, scope: !3709)
!3715 = !DILocation(line: 1293, column: 9, scope: !3709)
!3716 = !DILocation(line: 1294, column: 26, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !897, line: 1294, column: 13)
!3718 = distinct !DILexicalBlock(scope: !3710, file: !897, line: 1293, column: 58)
!3719 = !DILocation(line: 1294, column: 18, scope: !3717)
!3720 = !DILocation(line: 1294, column: 31, scope: !3721)
!3721 = !DILexicalBlockFile(scope: !3722, file: !897, discriminator: 1)
!3722 = distinct !DILexicalBlock(scope: !3717, file: !897, line: 1294, column: 13)
!3723 = !DILocation(line: 1294, column: 41, scope: !3721)
!3724 = !DILocation(line: 1294, column: 46, scope: !3721)
!3725 = !DILocation(line: 1294, column: 53, scope: !3721)
!3726 = !DILocation(line: 1294, column: 39, scope: !3721)
!3727 = !DILocation(line: 1294, column: 13, scope: !3721)
!3728 = !DILocation(line: 1295, column: 49, scope: !3722)
!3729 = !DILocation(line: 1295, column: 36, scope: !3722)
!3730 = !DILocation(line: 1295, column: 31, scope: !3722)
!3731 = !DILocation(line: 1295, column: 34, scope: !3722)
!3732 = !DILocation(line: 1295, column: 17, scope: !3722)
!3733 = !DILocation(line: 1294, column: 70, scope: !3734)
!3734 = !DILexicalBlockFile(scope: !3722, file: !897, discriminator: 2)
!3735 = !DILocation(line: 1294, column: 13, scope: !3734)
!3736 = distinct !{!3736, !3737}
!3737 = !DILocation(line: 1294, column: 13, scope: !3718)
!3738 = !DILocation(line: 1296, column: 27, scope: !3718)
!3739 = !DILocation(line: 1297, column: 26, scope: !3718)
!3740 = !DILocation(line: 1298, column: 9, scope: !3718)
!3741 = !DILocation(line: 1293, column: 54, scope: !3742)
!3742 = !DILexicalBlockFile(scope: !3710, file: !897, discriminator: 2)
!3743 = !DILocation(line: 1293, column: 9, scope: !3742)
!3744 = distinct !{!3744, !3745}
!3745 = !DILocation(line: 1293, column: 9, scope: !3683)
!3746 = !DILocation(line: 1299, column: 5, scope: !3683)
!3747 = !DILocation(line: 1288, column: 57, scope: !3748)
!3748 = !DILexicalBlockFile(scope: !3677, file: !897, discriminator: 2)
!3749 = !DILocation(line: 1288, column: 5, scope: !3748)
!3750 = distinct !{!3750, !3751}
!3751 = !DILocation(line: 1288, column: 5, scope: !3663)
!3752 = !DILocation(line: 1300, column: 1, scope: !3663)
!3753 = distinct !DISubprogram(name: "analyze_sample_buffer", scope: !897, file: !897, line: 2143, type: !3126, isLocal: true, isDefinition: true, scopeLine: 2144, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!3754 = !DILocalVariable(name: "ctx", arg: 1, scope: !3753, file: !897, line: 2143, type: !1749)
!3755 = !DILocation(line: 2143, column: 53, scope: !3753)
!3756 = !DILocalVariable(name: "seq_cp", scope: !3753, file: !897, line: 2145, type: !921)
!3757 = !DILocation(line: 2145, column: 20, scope: !3753)
!3758 = !DILocation(line: 2145, column: 29, scope: !3753)
!3759 = !DILocation(line: 2145, column: 34, scope: !3753)
!3760 = !DILocalVariable(name: "seq_dp", scope: !3753, file: !897, line: 2146, type: !955)
!3761 = !DILocation(line: 2146, column: 21, scope: !3753)
!3762 = !DILocation(line: 2146, column: 30, scope: !3753)
!3763 = !DILocation(line: 2146, column: 35, scope: !3753)
!3764 = !DILocalVariable(name: "index", scope: !3753, file: !897, line: 2147, type: !993)
!3765 = !DILocation(line: 2147, column: 18, scope: !3753)
!3766 = !DILocalVariable(name: "substr", scope: !3753, file: !897, line: 2148, type: !993)
!3767 = !DILocation(line: 2148, column: 18, scope: !3753)
!3768 = !DILocation(line: 2150, column: 17, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3753, file: !897, line: 2150, column: 5)
!3770 = !DILocation(line: 2150, column: 10, scope: !3769)
!3771 = !DILocation(line: 2150, column: 22, scope: !3772)
!3772 = !DILexicalBlockFile(scope: !3773, file: !897, discriminator: 1)
!3773 = distinct !DILexicalBlock(scope: !3769, file: !897, line: 2150, column: 5)
!3774 = !DILocation(line: 2150, column: 31, scope: !3772)
!3775 = !DILocation(line: 2150, column: 36, scope: !3772)
!3776 = !DILocation(line: 2150, column: 29, scope: !3772)
!3777 = !DILocation(line: 2150, column: 5, scope: !3772)
!3778 = !DILocation(line: 2152, column: 56, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3773, file: !897, line: 2150, column: 62)
!3780 = !DILocation(line: 2152, column: 36, scope: !3779)
!3781 = !DILocation(line: 2152, column: 41, scope: !3779)
!3782 = !DILocation(line: 2152, column: 9, scope: !3779)
!3783 = !DILocation(line: 2152, column: 14, scope: !3779)
!3784 = !DILocation(line: 2152, column: 33, scope: !3779)
!3785 = !DILocation(line: 2153, column: 36, scope: !3779)
!3786 = !DILocation(line: 2153, column: 48, scope: !3779)
!3787 = !DILocation(line: 2153, column: 53, scope: !3779)
!3788 = !DILocation(line: 2153, column: 46, scope: !3779)
!3789 = !DILocation(line: 2153, column: 43, scope: !3779)
!3790 = !DILocation(line: 2153, column: 71, scope: !3779)
!3791 = !DILocation(line: 2153, column: 69, scope: !3779)
!3792 = !DILocation(line: 2153, column: 9, scope: !3779)
!3793 = !DILocation(line: 2153, column: 14, scope: !3779)
!3794 = !DILocation(line: 2153, column: 34, scope: !3779)
!3795 = !DILocation(line: 2154, column: 35, scope: !3779)
!3796 = !DILocation(line: 2154, column: 47, scope: !3779)
!3797 = !DILocation(line: 2154, column: 52, scope: !3779)
!3798 = !DILocation(line: 2154, column: 59, scope: !3779)
!3799 = !DILocation(line: 2154, column: 45, scope: !3779)
!3800 = !DILocation(line: 2154, column: 42, scope: !3779)
!3801 = !DILocation(line: 2154, column: 9, scope: !3779)
!3802 = !DILocation(line: 2154, column: 14, scope: !3779)
!3803 = !DILocation(line: 2154, column: 33, scope: !3779)
!3804 = !DILocation(line: 2156, column: 35, scope: !3779)
!3805 = !DILocation(line: 2156, column: 9, scope: !3779)
!3806 = !DILocation(line: 2157, column: 35, scope: !3779)
!3807 = !DILocation(line: 2157, column: 9, scope: !3779)
!3808 = !DILocation(line: 2158, column: 33, scope: !3779)
!3809 = !DILocation(line: 2158, column: 9, scope: !3779)
!3810 = !DILocation(line: 2159, column: 28, scope: !3779)
!3811 = !DILocation(line: 2159, column: 9, scope: !3779)
!3812 = !DILocation(line: 2160, column: 28, scope: !3779)
!3813 = !DILocation(line: 2160, column: 9, scope: !3779)
!3814 = !DILocation(line: 2161, column: 24, scope: !3779)
!3815 = !DILocation(line: 2161, column: 9, scope: !3779)
!3816 = !DILocation(line: 2163, column: 35, scope: !3779)
!3817 = !DILocation(line: 2163, column: 40, scope: !3779)
!3818 = !DILocation(line: 2163, column: 9, scope: !3779)
!3819 = !DILocation(line: 2168, column: 20, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3779, file: !897, line: 2168, column: 9)
!3821 = !DILocation(line: 2168, column: 14, scope: !3820)
!3822 = !DILocation(line: 2168, column: 25, scope: !3823)
!3823 = !DILexicalBlockFile(scope: !3824, file: !897, discriminator: 1)
!3824 = distinct !DILexicalBlock(scope: !3820, file: !897, line: 2168, column: 9)
!3825 = !DILocation(line: 2168, column: 33, scope: !3823)
!3826 = !DILocation(line: 2168, column: 38, scope: !3823)
!3827 = !DILocation(line: 2168, column: 31, scope: !3823)
!3828 = !DILocation(line: 2168, column: 9, scope: !3823)
!3829 = !DILocalVariable(name: "dp", scope: !3830, file: !897, line: 2169, type: !955)
!3830 = distinct !DILexicalBlock(scope: !3824, file: !897, line: 2168, column: 65)
!3831 = !DILocation(line: 2169, column: 29, scope: !3830)
!3832 = !DILocation(line: 2169, column: 34, scope: !3830)
!3833 = !DILocation(line: 2169, column: 44, scope: !3830)
!3834 = !DILocation(line: 2169, column: 50, scope: !3830)
!3835 = !DILocation(line: 2169, column: 56, scope: !3830)
!3836 = !DILocation(line: 2169, column: 61, scope: !3830)
!3837 = !DILocation(line: 2169, column: 54, scope: !3830)
!3838 = !DILocation(line: 2169, column: 41, scope: !3830)
!3839 = !DILocation(line: 2169, column: 79, scope: !3830)
!3840 = !DILocation(line: 2169, column: 77, scope: !3830)
!3841 = !DILocation(line: 2170, column: 45, scope: !3830)
!3842 = !DILocation(line: 2170, column: 29, scope: !3830)
!3843 = !DILocation(line: 2170, column: 34, scope: !3830)
!3844 = !DILocation(line: 2170, column: 13, scope: !3830)
!3845 = !DILocation(line: 2170, column: 17, scope: !3830)
!3846 = !DILocation(line: 2170, column: 27, scope: !3830)
!3847 = !DILocation(line: 2171, column: 9, scope: !3830)
!3848 = !DILocation(line: 2168, column: 61, scope: !3849)
!3849 = !DILexicalBlockFile(scope: !3824, file: !897, discriminator: 2)
!3850 = !DILocation(line: 2168, column: 9, scope: !3849)
!3851 = distinct !{!3851, !3852}
!3852 = !DILocation(line: 2168, column: 9, scope: !3779)
!3853 = !DILocation(line: 2176, column: 10, scope: !3779)
!3854 = !DILocation(line: 2176, column: 19, scope: !3779)
!3855 = !DILocation(line: 2176, column: 17, scope: !3779)
!3856 = !DILocation(line: 2176, column: 28, scope: !3779)
!3857 = !DILocation(line: 2176, column: 38, scope: !3779)
!3858 = !DILocation(line: 2177, column: 10, scope: !3779)
!3859 = !DILocation(line: 2177, column: 22, scope: !3779)
!3860 = !DILocation(line: 2177, column: 27, scope: !3779)
!3861 = !DILocation(line: 2177, column: 20, scope: !3779)
!3862 = !DILocation(line: 2177, column: 17, scope: !3779)
!3863 = !DILocation(line: 2177, column: 45, scope: !3779)
!3864 = !DILocation(line: 2177, column: 43, scope: !3779)
!3865 = !DILocation(line: 2177, column: 54, scope: !3779)
!3866 = !DILocation(line: 2177, column: 64, scope: !3779)
!3867 = !DILocation(line: 2179, column: 20, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3779, file: !897, line: 2179, column: 9)
!3869 = !DILocation(line: 2179, column: 14, scope: !3868)
!3870 = !DILocation(line: 2179, column: 25, scope: !3871)
!3871 = !DILexicalBlockFile(scope: !3872, file: !897, discriminator: 1)
!3872 = distinct !DILexicalBlock(scope: !3868, file: !897, line: 2179, column: 9)
!3873 = !DILocation(line: 2179, column: 33, scope: !3871)
!3874 = !DILocation(line: 2179, column: 38, scope: !3871)
!3875 = !DILocation(line: 2179, column: 31, scope: !3871)
!3876 = !DILocation(line: 2179, column: 9, scope: !3871)
!3877 = !DILocation(line: 2180, column: 44, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3872, file: !897, line: 2179, column: 68)
!3879 = !DILocation(line: 2180, column: 53, scope: !3878)
!3880 = !DILocation(line: 2180, column: 60, scope: !3878)
!3881 = !DILocation(line: 2180, column: 65, scope: !3878)
!3882 = !DILocation(line: 2180, column: 58, scope: !3878)
!3883 = !DILocation(line: 2180, column: 51, scope: !3878)
!3884 = !DILocation(line: 2180, column: 83, scope: !3878)
!3885 = !DILocation(line: 2180, column: 81, scope: !3878)
!3886 = !DILocation(line: 2180, column: 17, scope: !3878)
!3887 = !DILocation(line: 2180, column: 22, scope: !3878)
!3888 = !DILocation(line: 2180, column: 42, scope: !3878)
!3889 = !DILocation(line: 2181, column: 43, scope: !3878)
!3890 = !DILocation(line: 2181, column: 52, scope: !3878)
!3891 = !DILocation(line: 2181, column: 59, scope: !3878)
!3892 = !DILocation(line: 2181, column: 64, scope: !3878)
!3893 = !DILocation(line: 2181, column: 71, scope: !3878)
!3894 = !DILocation(line: 2181, column: 57, scope: !3878)
!3895 = !DILocation(line: 2181, column: 50, scope: !3878)
!3896 = !DILocation(line: 2181, column: 17, scope: !3878)
!3897 = !DILocation(line: 2181, column: 22, scope: !3878)
!3898 = !DILocation(line: 2181, column: 41, scope: !3878)
!3899 = !DILocation(line: 2182, column: 57, scope: !3878)
!3900 = !DILocation(line: 2182, column: 40, scope: !3878)
!3901 = !DILocation(line: 2182, column: 45, scope: !3878)
!3902 = !DILocation(line: 2182, column: 17, scope: !3878)
!3903 = !DILocation(line: 2182, column: 22, scope: !3878)
!3904 = !DILocation(line: 2182, column: 38, scope: !3878)
!3905 = !DILocation(line: 2183, column: 32, scope: !3878)
!3906 = !DILocation(line: 2183, column: 17, scope: !3878)
!3907 = !DILocation(line: 2184, column: 39, scope: !3878)
!3908 = !DILocation(line: 2184, column: 44, scope: !3878)
!3909 = !DILocation(line: 2184, column: 65, scope: !3878)
!3910 = !DILocation(line: 2184, column: 77, scope: !3878)
!3911 = !DILocation(line: 2184, column: 82, scope: !3878)
!3912 = !DILocation(line: 2184, column: 75, scope: !3878)
!3913 = !DILocation(line: 2184, column: 17, scope: !3878)
!3914 = !DILocation(line: 2184, column: 22, scope: !3878)
!3915 = !DILocation(line: 2184, column: 36, scope: !3878)
!3916 = !DILocation(line: 2185, column: 9, scope: !3878)
!3917 = !DILocation(line: 2179, column: 64, scope: !3918)
!3918 = !DILexicalBlockFile(scope: !3872, file: !897, discriminator: 2)
!3919 = !DILocation(line: 2179, column: 9, scope: !3918)
!3920 = distinct !{!3920, !3921}
!3921 = !DILocation(line: 2179, column: 9, scope: !3779)
!3922 = !DILocation(line: 2187, column: 27, scope: !3779)
!3923 = !DILocation(line: 2187, column: 9, scope: !3779)
!3924 = !DILocation(line: 2188, column: 5, scope: !3779)
!3925 = !DILocation(line: 2150, column: 58, scope: !3926)
!3926 = !DILexicalBlockFile(scope: !3773, file: !897, discriminator: 2)
!3927 = !DILocation(line: 2150, column: 5, scope: !3926)
!3928 = distinct !{!3928, !3929}
!3929 = !DILocation(line: 2150, column: 5, scope: !3753)
!3930 = !DILocation(line: 2189, column: 1, scope: !3753)
!3931 = distinct !DISubprogram(name: "compare_decoding_params", scope: !897, file: !897, line: 285, type: !3932, isLocal: true, isDefinition: true, scopeLine: 286, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!3932 = !DISubroutineType(types: !3933)
!3933 = !{!939, !1749}
!3934 = !DILocalVariable(name: "ctx", arg: 1, scope: !3931, file: !897, line: 285, type: !1749)
!3935 = !DILocation(line: 285, column: 54, scope: !3931)
!3936 = !DILocalVariable(name: "prev", scope: !3931, file: !897, line: 287, type: !955)
!3937 = !DILocation(line: 287, column: 21, scope: !3931)
!3938 = !DILocation(line: 287, column: 28, scope: !3931)
!3939 = !DILocation(line: 287, column: 33, scope: !3931)
!3940 = !DILocalVariable(name: "dp", scope: !3931, file: !897, line: 288, type: !955)
!3941 = !DILocation(line: 288, column: 21, scope: !3931)
!3942 = !DILocation(line: 288, column: 26, scope: !3931)
!3943 = !DILocation(line: 288, column: 31, scope: !3931)
!3944 = !DILocalVariable(name: "prev_mp", scope: !3931, file: !897, line: 289, type: !3945)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64, align: 64)
!3946 = !DILocation(line: 289, column: 19, scope: !3931)
!3947 = !DILocation(line: 289, column: 30, scope: !3931)
!3948 = !DILocation(line: 289, column: 36, scope: !3931)
!3949 = !DILocalVariable(name: "mp", scope: !3931, file: !897, line: 290, type: !3945)
!3950 = !DILocation(line: 290, column: 19, scope: !3931)
!3951 = !DILocation(line: 290, column: 25, scope: !3931)
!3952 = !DILocation(line: 290, column: 29, scope: !3931)
!3953 = !DILocalVariable(name: "rh", scope: !3931, file: !897, line: 291, type: !1835)
!3954 = !DILocation(line: 291, column: 20, scope: !3931)
!3955 = !DILocation(line: 291, column: 25, scope: !3931)
!3956 = !DILocation(line: 291, column: 30, scope: !3931)
!3957 = !DILocalVariable(name: "ch", scope: !3931, file: !897, line: 292, type: !993)
!3958 = !DILocation(line: 292, column: 18, scope: !3931)
!3959 = !DILocalVariable(name: "retval", scope: !3931, file: !897, line: 293, type: !939)
!3960 = !DILocation(line: 293, column: 9, scope: !3931)
!3961 = !DILocation(line: 295, column: 9, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3931, file: !897, line: 295, column: 9)
!3963 = !DILocation(line: 295, column: 15, scope: !3962)
!3964 = !DILocation(line: 295, column: 39, scope: !3962)
!3965 = !DILocation(line: 295, column: 43, scope: !3962)
!3966 = !DILocation(line: 295, column: 36, scope: !3962)
!3967 = !DILocation(line: 295, column: 9, scope: !3931)
!3968 = !DILocation(line: 296, column: 16, scope: !3962)
!3969 = !DILocation(line: 296, column: 9, scope: !3962)
!3970 = !DILocation(line: 298, column: 9, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3931, file: !897, line: 298, column: 9)
!3972 = !DILocation(line: 298, column: 15, scope: !3971)
!3973 = !DILocation(line: 298, column: 28, scope: !3971)
!3974 = !DILocation(line: 298, column: 32, scope: !3971)
!3975 = !DILocation(line: 298, column: 25, scope: !3971)
!3976 = !DILocation(line: 298, column: 9, scope: !3931)
!3977 = !DILocation(line: 299, column: 16, scope: !3971)
!3978 = !DILocation(line: 299, column: 9, scope: !3971)
!3979 = !DILocation(line: 301, column: 31, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3931, file: !897, line: 301, column: 9)
!3981 = !DILocation(line: 301, column: 36, scope: !3980)
!3982 = !DILocation(line: 301, column: 45, scope: !3980)
!3983 = !DILocation(line: 301, column: 9, scope: !3980)
!3984 = !DILocation(line: 301, column: 9, scope: !3931)
!3985 = !DILocation(line: 302, column: 16, scope: !3980)
!3986 = !DILocation(line: 302, column: 9, scope: !3980)
!3987 = !DILocation(line: 304, column: 13, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3931, file: !897, line: 304, column: 5)
!3989 = !DILocation(line: 304, column: 10, scope: !3988)
!3990 = !DILocation(line: 304, column: 18, scope: !3991)
!3991 = !DILexicalBlockFile(scope: !3992, file: !897, discriminator: 1)
!3992 = distinct !DILexicalBlock(scope: !3988, file: !897, line: 304, column: 5)
!3993 = !DILocation(line: 304, column: 24, scope: !3991)
!3994 = !DILocation(line: 304, column: 28, scope: !3991)
!3995 = !DILocation(line: 304, column: 21, scope: !3991)
!3996 = !DILocation(line: 304, column: 5, scope: !3991)
!3997 = !DILocation(line: 305, column: 28, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3992, file: !897, line: 305, column: 13)
!3999 = !DILocation(line: 305, column: 13, scope: !3998)
!4000 = !DILocation(line: 305, column: 22, scope: !3998)
!4001 = !DILocation(line: 305, column: 45, scope: !3998)
!4002 = !DILocation(line: 305, column: 35, scope: !3998)
!4003 = !DILocation(line: 305, column: 39, scope: !3998)
!4004 = !DILocation(line: 305, column: 32, scope: !3998)
!4005 = !DILocation(line: 305, column: 13, scope: !3992)
!4006 = !DILocation(line: 306, column: 20, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3998, file: !897, line: 305, column: 50)
!4008 = !DILocation(line: 307, column: 13, scope: !4007)
!4009 = !DILocation(line: 305, column: 47, scope: !4010)
!4010 = !DILexicalBlockFile(scope: !3998, file: !897, discriminator: 1)
!4011 = !DILocation(line: 304, column: 50, scope: !4012)
!4012 = !DILexicalBlockFile(scope: !3992, file: !897, discriminator: 2)
!4013 = !DILocation(line: 304, column: 5, scope: !4012)
!4014 = distinct !{!4014, !4015}
!4015 = !DILocation(line: 304, column: 5, scope: !3931)
!4016 = !DILocation(line: 310, column: 13, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !3931, file: !897, line: 310, column: 5)
!4018 = !DILocation(line: 310, column: 10, scope: !4017)
!4019 = !DILocation(line: 310, column: 18, scope: !4020)
!4020 = !DILexicalBlockFile(scope: !4021, file: !897, discriminator: 1)
!4021 = distinct !DILexicalBlock(scope: !4017, file: !897, line: 310, column: 5)
!4022 = !DILocation(line: 310, column: 24, scope: !4020)
!4023 = !DILocation(line: 310, column: 28, scope: !4020)
!4024 = !DILocation(line: 310, column: 21, scope: !4020)
!4025 = !DILocation(line: 310, column: 5, scope: !4020)
!4026 = !DILocation(line: 311, column: 35, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4021, file: !897, line: 311, column: 13)
!4028 = !DILocation(line: 311, column: 13, scope: !4027)
!4029 = !DILocation(line: 311, column: 19, scope: !4027)
!4030 = !DILocation(line: 311, column: 62, scope: !4027)
!4031 = !DILocation(line: 311, column: 42, scope: !4027)
!4032 = !DILocation(line: 311, column: 46, scope: !4027)
!4033 = !DILocation(line: 311, column: 39, scope: !4027)
!4034 = !DILocation(line: 311, column: 13, scope: !4021)
!4035 = !DILocation(line: 312, column: 20, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4027, file: !897, line: 311, column: 67)
!4037 = !DILocation(line: 313, column: 13, scope: !4036)
!4038 = !DILocation(line: 311, column: 64, scope: !4039)
!4039 = !DILexicalBlockFile(scope: !4027, file: !897, discriminator: 1)
!4040 = !DILocation(line: 310, column: 43, scope: !4041)
!4041 = !DILexicalBlockFile(scope: !4021, file: !897, discriminator: 2)
!4042 = !DILocation(line: 310, column: 5, scope: !4041)
!4043 = distinct !{!4043, !4044}
!4044 = !DILocation(line: 310, column: 5, scope: !3931)
!4045 = !DILocation(line: 316, column: 15, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !3931, file: !897, line: 316, column: 5)
!4047 = !DILocation(line: 316, column: 19, scope: !4046)
!4048 = !DILocation(line: 316, column: 13, scope: !4046)
!4049 = !DILocation(line: 316, column: 10, scope: !4046)
!4050 = !DILocation(line: 316, column: 32, scope: !4051)
!4051 = !DILexicalBlockFile(scope: !4052, file: !897, discriminator: 1)
!4052 = distinct !DILexicalBlock(scope: !4046, file: !897, line: 316, column: 5)
!4053 = !DILocation(line: 316, column: 38, scope: !4051)
!4054 = !DILocation(line: 316, column: 42, scope: !4051)
!4055 = !DILocation(line: 316, column: 35, scope: !4051)
!4056 = !DILocation(line: 316, column: 5, scope: !4051)
!4057 = !DILocalVariable(name: "prev_cp", scope: !4058, file: !897, line: 317, type: !921)
!4058 = distinct !DILexicalBlock(scope: !4052, file: !897, line: 316, column: 61)
!4059 = !DILocation(line: 317, column: 24, scope: !4058)
!4060 = !DILocation(line: 317, column: 60, scope: !4058)
!4061 = !DILocation(line: 317, column: 35, scope: !4058)
!4062 = !DILocation(line: 317, column: 40, scope: !4058)
!4063 = !DILocalVariable(name: "cp", scope: !4058, file: !897, line: 318, type: !921)
!4064 = !DILocation(line: 318, column: 24, scope: !4058)
!4065 = !DILocation(line: 318, column: 54, scope: !4058)
!4066 = !DILocation(line: 318, column: 30, scope: !4058)
!4067 = !DILocation(line: 318, column: 35, scope: !4058)
!4068 = !DILocation(line: 320, column: 15, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4058, file: !897, line: 320, column: 13)
!4070 = !DILocation(line: 320, column: 22, scope: !4069)
!4071 = !DILocation(line: 320, column: 35, scope: !4069)
!4072 = !DILocation(line: 321, column: 35, scope: !4069)
!4073 = !DILocation(line: 321, column: 44, scope: !4069)
!4074 = !DILocation(line: 321, column: 13, scope: !4069)
!4075 = !DILocation(line: 320, column: 13, scope: !4076)
!4076 = !DILexicalBlockFile(scope: !4058, file: !897, discriminator: 1)
!4077 = !DILocation(line: 322, column: 20, scope: !4069)
!4078 = !DILocation(line: 322, column: 13, scope: !4069)
!4079 = !DILocation(line: 324, column: 15, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4058, file: !897, line: 324, column: 13)
!4081 = !DILocation(line: 324, column: 22, scope: !4080)
!4082 = !DILocation(line: 324, column: 35, scope: !4080)
!4083 = !DILocation(line: 325, column: 35, scope: !4080)
!4084 = !DILocation(line: 325, column: 44, scope: !4080)
!4085 = !DILocation(line: 325, column: 13, scope: !4080)
!4086 = !DILocation(line: 324, column: 13, scope: !4076)
!4087 = !DILocation(line: 326, column: 20, scope: !4080)
!4088 = !DILocation(line: 326, column: 13, scope: !4080)
!4089 = !DILocation(line: 328, column: 13, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4058, file: !897, line: 328, column: 13)
!4091 = !DILocation(line: 328, column: 22, scope: !4090)
!4092 = !DILocation(line: 328, column: 37, scope: !4090)
!4093 = !DILocation(line: 328, column: 41, scope: !4090)
!4094 = !DILocation(line: 328, column: 34, scope: !4090)
!4095 = !DILocation(line: 328, column: 13, scope: !4058)
!4096 = !DILocation(line: 329, column: 20, scope: !4090)
!4097 = !DILocation(line: 329, column: 13, scope: !4090)
!4098 = !DILocation(line: 331, column: 13, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4058, file: !897, line: 331, column: 13)
!4100 = !DILocation(line: 331, column: 22, scope: !4099)
!4101 = !DILocation(line: 331, column: 34, scope: !4099)
!4102 = !DILocation(line: 331, column: 38, scope: !4099)
!4103 = !DILocation(line: 331, column: 31, scope: !4099)
!4104 = !DILocation(line: 331, column: 47, scope: !4099)
!4105 = !DILocation(line: 332, column: 13, scope: !4099)
!4106 = !DILocation(line: 332, column: 22, scope: !4099)
!4107 = !DILocation(line: 332, column: 35, scope: !4099)
!4108 = !DILocation(line: 332, column: 39, scope: !4099)
!4109 = !DILocation(line: 332, column: 32, scope: !4099)
!4110 = !DILocation(line: 331, column: 13, scope: !4076)
!4111 = !DILocation(line: 333, column: 20, scope: !4099)
!4112 = !DILocation(line: 333, column: 13, scope: !4099)
!4113 = !DILocation(line: 334, column: 5, scope: !4058)
!4114 = !DILocation(line: 316, column: 57, scope: !4115)
!4115 = !DILexicalBlockFile(scope: !4052, file: !897, discriminator: 2)
!4116 = !DILocation(line: 316, column: 5, scope: !4115)
!4117 = distinct !{!4117, !4118}
!4118 = !DILocation(line: 316, column: 5, scope: !3931)
!4119 = !DILocation(line: 336, column: 12, scope: !3931)
!4120 = !DILocation(line: 336, column: 5, scope: !3931)
!4121 = distinct !DISubprogram(name: "compare_matrix_params", scope: !897, file: !897, line: 255, type: !4122, isLocal: true, isDefinition: true, scopeLine: 256, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!939, !1749, !4124, !4124}
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64, align: 64)
!4125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!4126 = !DILocalVariable(name: "ctx", arg: 1, scope: !4121, file: !897, line: 255, type: !1749)
!4127 = !DILocation(line: 255, column: 52, scope: !4121)
!4128 = !DILocalVariable(name: "prev", arg: 2, scope: !4121, file: !897, line: 255, type: !4124)
!4129 = !DILocation(line: 255, column: 77, scope: !4121)
!4130 = !DILocalVariable(name: "mp", arg: 3, scope: !4121, file: !897, line: 255, type: !4124)
!4131 = !DILocation(line: 255, column: 103, scope: !4121)
!4132 = !DILocalVariable(name: "rh", scope: !4121, file: !897, line: 257, type: !1835)
!4133 = !DILocation(line: 257, column: 20, scope: !4121)
!4134 = !DILocation(line: 257, column: 25, scope: !4121)
!4135 = !DILocation(line: 257, column: 30, scope: !4121)
!4136 = !DILocalVariable(name: "channel", scope: !4121, file: !897, line: 258, type: !993)
!4137 = !DILocation(line: 258, column: 18, scope: !4121)
!4138 = !DILocalVariable(name: "mat", scope: !4121, file: !897, line: 258, type: !993)
!4139 = !DILocation(line: 258, column: 27, scope: !4121)
!4140 = !DILocation(line: 260, column: 9, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4121, file: !897, line: 260, column: 9)
!4142 = !DILocation(line: 260, column: 15, scope: !4141)
!4143 = !DILocation(line: 260, column: 24, scope: !4141)
!4144 = !DILocation(line: 260, column: 28, scope: !4141)
!4145 = !DILocation(line: 260, column: 21, scope: !4141)
!4146 = !DILocation(line: 260, column: 9, scope: !4121)
!4147 = !DILocation(line: 261, column: 9, scope: !4141)
!4148 = !DILocation(line: 263, column: 10, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4121, file: !897, line: 263, column: 9)
!4150 = !DILocation(line: 263, column: 16, scope: !4149)
!4151 = !DILocation(line: 263, column: 9, scope: !4121)
!4152 = !DILocation(line: 264, column: 9, scope: !4149)
!4153 = !DILocation(line: 266, column: 20, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4121, file: !897, line: 266, column: 5)
!4155 = !DILocation(line: 266, column: 24, scope: !4154)
!4156 = !DILocation(line: 266, column: 18, scope: !4154)
!4157 = !DILocation(line: 266, column: 10, scope: !4154)
!4158 = !DILocation(line: 266, column: 37, scope: !4159)
!4159 = !DILexicalBlockFile(scope: !4160, file: !897, discriminator: 1)
!4160 = distinct !DILexicalBlock(scope: !4154, file: !897, line: 266, column: 5)
!4161 = !DILocation(line: 266, column: 48, scope: !4159)
!4162 = !DILocation(line: 266, column: 52, scope: !4159)
!4163 = !DILocation(line: 266, column: 45, scope: !4159)
!4164 = !DILocation(line: 266, column: 5, scope: !4159)
!4165 = !DILocation(line: 267, column: 25, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4160, file: !897, line: 267, column: 13)
!4167 = !DILocation(line: 267, column: 13, scope: !4166)
!4168 = !DILocation(line: 267, column: 19, scope: !4166)
!4169 = !DILocation(line: 267, column: 47, scope: !4166)
!4170 = !DILocation(line: 267, column: 37, scope: !4166)
!4171 = !DILocation(line: 267, column: 41, scope: !4166)
!4172 = !DILocation(line: 267, column: 34, scope: !4166)
!4173 = !DILocation(line: 267, column: 13, scope: !4160)
!4174 = !DILocation(line: 268, column: 13, scope: !4166)
!4175 = !DILocation(line: 267, column: 54, scope: !4176)
!4176 = !DILexicalBlockFile(scope: !4166, file: !897, discriminator: 1)
!4177 = !DILocation(line: 266, column: 72, scope: !4178)
!4178 = !DILexicalBlockFile(scope: !4160, file: !897, discriminator: 2)
!4179 = !DILocation(line: 266, column: 5, scope: !4178)
!4180 = distinct !{!4180, !4181}
!4181 = !DILocation(line: 266, column: 5, scope: !4121)
!4182 = !DILocation(line: 270, column: 14, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4121, file: !897, line: 270, column: 5)
!4184 = !DILocation(line: 270, column: 10, scope: !4183)
!4185 = !DILocation(line: 270, column: 19, scope: !4186)
!4186 = !DILexicalBlockFile(scope: !4187, file: !897, discriminator: 1)
!4187 = distinct !DILexicalBlock(scope: !4183, file: !897, line: 270, column: 5)
!4188 = !DILocation(line: 270, column: 25, scope: !4186)
!4189 = !DILocation(line: 270, column: 29, scope: !4186)
!4190 = !DILocation(line: 270, column: 23, scope: !4186)
!4191 = !DILocation(line: 270, column: 5, scope: !4186)
!4192 = !DILocation(line: 271, column: 25, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4194, file: !897, line: 271, column: 13)
!4194 = distinct !DILexicalBlock(scope: !4187, file: !897, line: 270, column: 43)
!4195 = !DILocation(line: 271, column: 13, scope: !4193)
!4196 = !DILocation(line: 271, column: 19, scope: !4193)
!4197 = !DILocation(line: 271, column: 43, scope: !4193)
!4198 = !DILocation(line: 271, column: 33, scope: !4193)
!4199 = !DILocation(line: 271, column: 37, scope: !4193)
!4200 = !DILocation(line: 271, column: 30, scope: !4193)
!4201 = !DILocation(line: 271, column: 13, scope: !4194)
!4202 = !DILocation(line: 272, column: 13, scope: !4193)
!4203 = !DILocation(line: 274, column: 22, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4194, file: !897, line: 274, column: 9)
!4205 = !DILocation(line: 274, column: 14, scope: !4204)
!4206 = !DILocation(line: 274, column: 27, scope: !4207)
!4207 = !DILexicalBlockFile(scope: !4208, file: !897, discriminator: 1)
!4208 = distinct !DILexicalBlock(scope: !4204, file: !897, line: 274, column: 9)
!4209 = !DILocation(line: 274, column: 37, scope: !4207)
!4210 = !DILocation(line: 274, column: 42, scope: !4207)
!4211 = !DILocation(line: 274, column: 35, scope: !4207)
!4212 = !DILocation(line: 274, column: 9, scope: !4207)
!4213 = !DILocation(line: 275, column: 34, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4208, file: !897, line: 275, column: 17)
!4215 = !DILocation(line: 275, column: 17, scope: !4214)
!4216 = !DILocation(line: 275, column: 29, scope: !4214)
!4217 = !DILocation(line: 275, column: 23, scope: !4214)
!4218 = !DILocation(line: 275, column: 61, scope: !4214)
!4219 = !DILocation(line: 275, column: 46, scope: !4214)
!4220 = !DILocation(line: 275, column: 56, scope: !4214)
!4221 = !DILocation(line: 275, column: 50, scope: !4214)
!4222 = !DILocation(line: 275, column: 43, scope: !4214)
!4223 = !DILocation(line: 275, column: 17, scope: !4208)
!4224 = !DILocation(line: 276, column: 17, scope: !4214)
!4225 = !DILocation(line: 275, column: 68, scope: !4226)
!4226 = !DILexicalBlockFile(scope: !4214, file: !897, discriminator: 1)
!4227 = !DILocation(line: 274, column: 63, scope: !4228)
!4228 = !DILexicalBlockFile(scope: !4208, file: !897, discriminator: 2)
!4229 = !DILocation(line: 274, column: 9, scope: !4228)
!4230 = distinct !{!4230, !4231}
!4231 = !DILocation(line: 274, column: 9, scope: !4194)
!4232 = !DILocation(line: 277, column: 5, scope: !4194)
!4233 = !DILocation(line: 270, column: 39, scope: !4234)
!4234 = !DILexicalBlockFile(scope: !4187, file: !897, discriminator: 2)
!4235 = !DILocation(line: 270, column: 5, scope: !4234)
!4236 = distinct !{!4236, !4237}
!4237 = !DILocation(line: 270, column: 5, scope: !4121)
!4238 = !DILocation(line: 279, column: 5, scope: !4121)
!4239 = !DILocation(line: 280, column: 1, scope: !4121)
!4240 = distinct !DISubprogram(name: "compare_filter_params", scope: !897, file: !897, line: 230, type: !4241, isLocal: true, isDefinition: true, scopeLine: 231, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!4241 = !DISubroutineType(types: !4242)
!4242 = !{!939, !4243, !4243, !939}
!4243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4244, size: 64, align: 64)
!4244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !922)
!4245 = !DILocalVariable(name: "prev_cp", arg: 1, scope: !4240, file: !897, line: 230, type: !4243)
!4246 = !DILocation(line: 230, column: 55, scope: !4240)
!4247 = !DILocalVariable(name: "cp", arg: 2, scope: !4240, file: !897, line: 230, type: !4243)
!4248 = !DILocation(line: 230, column: 85, scope: !4240)
!4249 = !DILocalVariable(name: "filter", arg: 3, scope: !4240, file: !897, line: 230, type: !939)
!4250 = !DILocation(line: 230, column: 93, scope: !4240)
!4251 = !DILocalVariable(name: "prev", scope: !4240, file: !897, line: 232, type: !4252)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64, align: 64)
!4253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !928)
!4254 = !DILocation(line: 232, column: 25, scope: !4240)
!4255 = !DILocation(line: 232, column: 56, scope: !4240)
!4256 = !DILocation(line: 232, column: 33, scope: !4240)
!4257 = !DILocation(line: 232, column: 42, scope: !4240)
!4258 = !DILocalVariable(name: "fp", scope: !4240, file: !897, line: 233, type: !4252)
!4259 = !DILocation(line: 233, column: 25, scope: !4240)
!4260 = !DILocation(line: 233, column: 49, scope: !4240)
!4261 = !DILocation(line: 233, column: 31, scope: !4240)
!4262 = !DILocation(line: 233, column: 35, scope: !4240)
!4263 = !DILocalVariable(name: "i", scope: !4240, file: !897, line: 234, type: !939)
!4264 = !DILocation(line: 234, column: 9, scope: !4240)
!4265 = !DILocation(line: 236, column: 9, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4240, file: !897, line: 236, column: 9)
!4267 = !DILocation(line: 236, column: 15, scope: !4266)
!4268 = !DILocation(line: 236, column: 24, scope: !4266)
!4269 = !DILocation(line: 236, column: 28, scope: !4266)
!4270 = !DILocation(line: 236, column: 21, scope: !4266)
!4271 = !DILocation(line: 236, column: 9, scope: !4240)
!4272 = !DILocation(line: 237, column: 9, scope: !4266)
!4273 = !DILocation(line: 239, column: 10, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4240, file: !897, line: 239, column: 9)
!4275 = !DILocation(line: 239, column: 16, scope: !4274)
!4276 = !DILocation(line: 239, column: 9, scope: !4240)
!4277 = !DILocation(line: 240, column: 9, scope: !4274)
!4278 = !DILocation(line: 242, column: 9, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4240, file: !897, line: 242, column: 9)
!4280 = !DILocation(line: 242, column: 15, scope: !4279)
!4281 = !DILocation(line: 242, column: 24, scope: !4279)
!4282 = !DILocation(line: 242, column: 28, scope: !4279)
!4283 = !DILocation(line: 242, column: 21, scope: !4279)
!4284 = !DILocation(line: 242, column: 9, scope: !4240)
!4285 = !DILocation(line: 243, column: 9, scope: !4279)
!4286 = !DILocation(line: 245, column: 12, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4240, file: !897, line: 245, column: 5)
!4288 = !DILocation(line: 245, column: 10, scope: !4287)
!4289 = !DILocation(line: 245, column: 17, scope: !4290)
!4290 = !DILexicalBlockFile(scope: !4291, file: !897, discriminator: 1)
!4291 = distinct !DILexicalBlock(scope: !4287, file: !897, line: 245, column: 5)
!4292 = !DILocation(line: 245, column: 21, scope: !4290)
!4293 = !DILocation(line: 245, column: 25, scope: !4290)
!4294 = !DILocation(line: 245, column: 19, scope: !4290)
!4295 = !DILocation(line: 245, column: 5, scope: !4290)
!4296 = !DILocation(line: 246, column: 36, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4291, file: !897, line: 246, column: 13)
!4298 = !DILocation(line: 246, column: 13, scope: !4297)
!4299 = !DILocation(line: 246, column: 28, scope: !4297)
!4300 = !DILocation(line: 246, column: 22, scope: !4297)
!4301 = !DILocation(line: 246, column: 60, scope: !4297)
!4302 = !DILocation(line: 246, column: 42, scope: !4297)
!4303 = !DILocation(line: 246, column: 52, scope: !4297)
!4304 = !DILocation(line: 246, column: 46, scope: !4297)
!4305 = !DILocation(line: 246, column: 39, scope: !4297)
!4306 = !DILocation(line: 246, column: 13, scope: !4291)
!4307 = !DILocation(line: 247, column: 13, scope: !4297)
!4308 = !DILocation(line: 246, column: 61, scope: !4309)
!4309 = !DILexicalBlockFile(scope: !4297, file: !897, discriminator: 1)
!4310 = !DILocation(line: 245, column: 33, scope: !4311)
!4311 = !DILexicalBlockFile(scope: !4291, file: !897, discriminator: 2)
!4312 = !DILocation(line: 245, column: 5, scope: !4311)
!4313 = distinct !{!4313, !4314}
!4314 = !DILocation(line: 245, column: 5, scope: !4240)
!4315 = !DILocation(line: 249, column: 5, scope: !4240)
!4316 = !DILocation(line: 250, column: 1, scope: !4240)
!4317 = distinct !DISubprogram(name: "generate_2_noise_channels", scope: !897, file: !897, line: 1891, type: !3126, isLocal: true, isDefinition: true, scopeLine: 1892, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!4318 = !DILocalVariable(name: "ctx", arg: 1, scope: !4317, file: !897, line: 1891, type: !1749)
!4319 = !DILocation(line: 1891, column: 57, scope: !4317)
!4320 = !DILocalVariable(name: "sample_buffer", scope: !4317, file: !897, line: 1893, type: !1767)
!4321 = !DILocation(line: 1893, column: 14, scope: !4317)
!4322 = !DILocation(line: 1893, column: 30, scope: !4317)
!4323 = !DILocation(line: 1893, column: 35, scope: !4317)
!4324 = !DILocation(line: 1893, column: 51, scope: !4317)
!4325 = !DILocation(line: 1893, column: 56, scope: !4317)
!4326 = !DILocation(line: 1893, column: 49, scope: !4317)
!4327 = !DILocation(line: 1893, column: 69, scope: !4317)
!4328 = !DILocalVariable(name: "rh", scope: !4317, file: !897, line: 1894, type: !1835)
!4329 = !DILocation(line: 1894, column: 20, scope: !4317)
!4330 = !DILocation(line: 1894, column: 25, scope: !4317)
!4331 = !DILocation(line: 1894, column: 30, scope: !4317)
!4332 = !DILocalVariable(name: "i", scope: !4317, file: !897, line: 1895, type: !993)
!4333 = !DILocation(line: 1895, column: 18, scope: !4317)
!4334 = !DILocalVariable(name: "seed", scope: !4317, file: !897, line: 1896, type: !992)
!4335 = !DILocation(line: 1896, column: 14, scope: !4317)
!4336 = !DILocation(line: 1896, column: 21, scope: !4317)
!4337 = !DILocation(line: 1896, column: 25, scope: !4317)
!4338 = !DILocation(line: 1898, column: 12, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4317, file: !897, line: 1898, column: 5)
!4340 = !DILocation(line: 1898, column: 10, scope: !4339)
!4341 = !DILocation(line: 1898, column: 17, scope: !4342)
!4342 = !DILexicalBlockFile(scope: !4343, file: !897, discriminator: 1)
!4343 = distinct !DILexicalBlock(scope: !4339, file: !897, line: 1898, column: 5)
!4344 = !DILocation(line: 1898, column: 21, scope: !4342)
!4345 = !DILocation(line: 1898, column: 26, scope: !4342)
!4346 = !DILocation(line: 1898, column: 19, scope: !4342)
!4347 = !DILocation(line: 1898, column: 5, scope: !4342)
!4348 = !DILocalVariable(name: "seed_shr7", scope: !4349, file: !897, line: 1899, type: !960)
!4349 = distinct !DILexicalBlock(scope: !4343, file: !897, line: 1898, column: 50)
!4350 = !DILocation(line: 1899, column: 18, scope: !4349)
!4351 = !DILocation(line: 1899, column: 30, scope: !4349)
!4352 = !DILocation(line: 1899, column: 35, scope: !4349)
!4353 = !DILocation(line: 1900, column: 38, scope: !4349)
!4354 = !DILocation(line: 1900, column: 43, scope: !4349)
!4355 = !DILocation(line: 1900, column: 29, scope: !4349)
!4356 = !DILocation(line: 1900, column: 28, scope: !4349)
!4357 = !DILocation(line: 1900, column: 54, scope: !4349)
!4358 = !DILocation(line: 1900, column: 58, scope: !4349)
!4359 = !DILocation(line: 1900, column: 51, scope: !4349)
!4360 = !DILocation(line: 1900, column: 23, scope: !4349)
!4361 = !DILocation(line: 1900, column: 26, scope: !4349)
!4362 = !DILocation(line: 1901, column: 38, scope: !4349)
!4363 = !DILocation(line: 1901, column: 29, scope: !4349)
!4364 = !DILocation(line: 1901, column: 28, scope: !4349)
!4365 = !DILocation(line: 1901, column: 52, scope: !4349)
!4366 = !DILocation(line: 1901, column: 56, scope: !4349)
!4367 = !DILocation(line: 1901, column: 49, scope: !4349)
!4368 = !DILocation(line: 1901, column: 23, scope: !4349)
!4369 = !DILocation(line: 1901, column: 26, scope: !4349)
!4370 = !DILocation(line: 1903, column: 17, scope: !4349)
!4371 = !DILocation(line: 1903, column: 22, scope: !4349)
!4372 = !DILocation(line: 1903, column: 31, scope: !4349)
!4373 = !DILocation(line: 1903, column: 29, scope: !4349)
!4374 = !DILocation(line: 1903, column: 44, scope: !4349)
!4375 = !DILocation(line: 1903, column: 54, scope: !4349)
!4376 = !DILocation(line: 1903, column: 41, scope: !4349)
!4377 = !DILocation(line: 1903, column: 14, scope: !4349)
!4378 = !DILocation(line: 1905, column: 26, scope: !4349)
!4379 = !DILocation(line: 1905, column: 31, scope: !4349)
!4380 = !DILocation(line: 1905, column: 44, scope: !4349)
!4381 = !DILocation(line: 1905, column: 23, scope: !4349)
!4382 = !DILocation(line: 1906, column: 5, scope: !4349)
!4383 = !DILocation(line: 1898, column: 46, scope: !4384)
!4384 = !DILexicalBlockFile(scope: !4343, file: !897, discriminator: 2)
!4385 = !DILocation(line: 1898, column: 5, scope: !4384)
!4386 = distinct !{!4386, !4387}
!4387 = !DILocation(line: 1898, column: 5, scope: !4317)
!4388 = !DILocation(line: 1908, column: 25, scope: !4317)
!4389 = !DILocation(line: 1908, column: 30, scope: !4317)
!4390 = !DILocation(line: 1908, column: 5, scope: !4317)
!4391 = !DILocation(line: 1908, column: 9, scope: !4317)
!4392 = !DILocation(line: 1908, column: 23, scope: !4317)
!4393 = !DILocation(line: 1909, column: 1, scope: !4317)
!4394 = distinct !DISubprogram(name: "rematrix_channels", scope: !897, file: !897, line: 1912, type: !3126, isLocal: true, isDefinition: true, scopeLine: 1913, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!4395 = !DILocalVariable(name: "ctx", arg: 1, scope: !4394, file: !897, line: 1912, type: !1749)
!4396 = !DILocation(line: 1912, column: 49, scope: !4394)
!4397 = !DILocalVariable(name: "dp", scope: !4394, file: !897, line: 1914, type: !955)
!4398 = !DILocation(line: 1914, column: 21, scope: !4394)
!4399 = !DILocation(line: 1914, column: 26, scope: !4394)
!4400 = !DILocation(line: 1914, column: 31, scope: !4394)
!4401 = !DILocalVariable(name: "mp", scope: !4394, file: !897, line: 1915, type: !3945)
!4402 = !DILocation(line: 1915, column: 19, scope: !4394)
!4403 = !DILocation(line: 1915, column: 25, scope: !4394)
!4404 = !DILocation(line: 1915, column: 29, scope: !4394)
!4405 = !DILocalVariable(name: "sample_buffer", scope: !4394, file: !897, line: 1916, type: !1767)
!4406 = !DILocation(line: 1916, column: 14, scope: !4394)
!4407 = !DILocation(line: 1916, column: 30, scope: !4394)
!4408 = !DILocation(line: 1916, column: 35, scope: !4394)
!4409 = !DILocalVariable(name: "mat", scope: !4394, file: !897, line: 1917, type: !993)
!4410 = !DILocation(line: 1917, column: 18, scope: !4394)
!4411 = !DILocalVariable(name: "i", scope: !4394, file: !897, line: 1917, type: !993)
!4412 = !DILocation(line: 1917, column: 23, scope: !4394)
!4413 = !DILocalVariable(name: "maxchan", scope: !4394, file: !897, line: 1917, type: !993)
!4414 = !DILocation(line: 1917, column: 26, scope: !4394)
!4415 = !DILocation(line: 1919, column: 15, scope: !4394)
!4416 = !DILocation(line: 1919, column: 20, scope: !4394)
!4417 = !DILocation(line: 1919, column: 13, scope: !4394)
!4418 = !DILocation(line: 1921, column: 14, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4394, file: !897, line: 1921, column: 5)
!4420 = !DILocation(line: 1921, column: 10, scope: !4419)
!4421 = !DILocation(line: 1921, column: 19, scope: !4422)
!4422 = !DILexicalBlockFile(scope: !4423, file: !897, discriminator: 1)
!4423 = distinct !DILexicalBlock(scope: !4419, file: !897, line: 1921, column: 5)
!4424 = !DILocation(line: 1921, column: 25, scope: !4422)
!4425 = !DILocation(line: 1921, column: 29, scope: !4422)
!4426 = !DILocation(line: 1921, column: 23, scope: !4422)
!4427 = !DILocation(line: 1921, column: 5, scope: !4422)
!4428 = !DILocalVariable(name: "msb_mask_bits", scope: !4429, file: !897, line: 1922, type: !993)
!4429 = distinct !DILexicalBlock(scope: !4423, file: !897, line: 1921, column: 43)
!4430 = !DILocation(line: 1922, column: 22, scope: !4429)
!4431 = !DILocation(line: 1922, column: 39, scope: !4429)
!4432 = !DILocation(line: 1922, column: 44, scope: !4429)
!4433 = !DILocation(line: 1922, column: 51, scope: !4429)
!4434 = !DILocation(line: 1922, column: 62, scope: !4429)
!4435 = !DILocation(line: 1922, column: 104, scope: !4429)
!4436 = !DILocation(line: 1922, column: 94, scope: !4429)
!4437 = !DILocation(line: 1922, column: 98, scope: !4429)
!4438 = !DILocation(line: 1922, column: 92, scope: !4429)
!4439 = !DILocalVariable(name: "mask", scope: !4429, file: !897, line: 1923, type: !938)
!4440 = !DILocation(line: 1923, column: 17, scope: !4429)
!4441 = !DILocation(line: 1923, column: 32, scope: !4429)
!4442 = !DILocation(line: 1923, column: 29, scope: !4429)
!4443 = !DILocalVariable(name: "outch", scope: !4429, file: !897, line: 1924, type: !993)
!4444 = !DILocation(line: 1924, column: 22, scope: !4429)
!4445 = !DILocation(line: 1924, column: 40, scope: !4429)
!4446 = !DILocation(line: 1924, column: 30, scope: !4429)
!4447 = !DILocation(line: 1924, column: 34, scope: !4429)
!4448 = !DILocation(line: 1926, column: 25, scope: !4429)
!4449 = !DILocation(line: 1926, column: 30, scope: !4429)
!4450 = !DILocation(line: 1926, column: 23, scope: !4429)
!4451 = !DILocation(line: 1927, column: 16, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4429, file: !897, line: 1927, column: 9)
!4453 = !DILocation(line: 1927, column: 14, scope: !4452)
!4454 = !DILocation(line: 1927, column: 21, scope: !4455)
!4455 = !DILexicalBlockFile(scope: !4456, file: !897, discriminator: 1)
!4456 = distinct !DILexicalBlock(scope: !4452, file: !897, line: 1927, column: 9)
!4457 = !DILocation(line: 1927, column: 25, scope: !4455)
!4458 = !DILocation(line: 1927, column: 30, scope: !4455)
!4459 = !DILocation(line: 1927, column: 23, scope: !4455)
!4460 = !DILocation(line: 1927, column: 9, scope: !4455)
!4461 = !DILocalVariable(name: "src_ch", scope: !4462, file: !897, line: 1928, type: !993)
!4462 = distinct !DILexicalBlock(scope: !4456, file: !897, line: 1927, column: 54)
!4463 = !DILocation(line: 1928, column: 26, scope: !4462)
!4464 = !DILocalVariable(name: "accum", scope: !4462, file: !897, line: 1929, type: !981)
!4465 = !DILocation(line: 1929, column: 21, scope: !4462)
!4466 = !DILocation(line: 1931, column: 25, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4462, file: !897, line: 1931, column: 13)
!4468 = !DILocation(line: 1931, column: 18, scope: !4467)
!4469 = !DILocation(line: 1931, column: 30, scope: !4470)
!4470 = !DILexicalBlockFile(scope: !4471, file: !897, discriminator: 1)
!4471 = distinct !DILexicalBlock(scope: !4467, file: !897, line: 1931, column: 13)
!4472 = !DILocation(line: 1931, column: 39, scope: !4470)
!4473 = !DILocation(line: 1931, column: 37, scope: !4470)
!4474 = !DILocation(line: 1931, column: 13, scope: !4470)
!4475 = !DILocalVariable(name: "sample", scope: !4476, file: !897, line: 1932, type: !938)
!4476 = distinct !DILexicalBlock(scope: !4471, file: !897, line: 1931, column: 58)
!4477 = !DILocation(line: 1932, column: 25, scope: !4476)
!4478 = !DILocation(line: 1932, column: 36, scope: !4476)
!4479 = !DILocation(line: 1932, column: 52, scope: !4476)
!4480 = !DILocation(line: 1932, column: 50, scope: !4476)
!4481 = !DILocation(line: 1932, column: 34, scope: !4476)
!4482 = !DILocation(line: 1933, column: 36, scope: !4476)
!4483 = !DILocation(line: 1933, column: 26, scope: !4476)
!4484 = !DILocation(line: 1933, column: 60, scope: !4476)
!4485 = !DILocation(line: 1933, column: 45, scope: !4476)
!4486 = !DILocation(line: 1933, column: 55, scope: !4476)
!4487 = !DILocation(line: 1933, column: 49, scope: !4476)
!4488 = !DILocation(line: 1933, column: 43, scope: !4476)
!4489 = !DILocation(line: 1933, column: 23, scope: !4476)
!4490 = !DILocation(line: 1934, column: 13, scope: !4476)
!4491 = !DILocation(line: 1931, column: 54, scope: !4492)
!4492 = !DILexicalBlockFile(scope: !4471, file: !897, discriminator: 2)
!4493 = !DILocation(line: 1931, column: 13, scope: !4492)
!4494 = distinct !{!4494, !4495}
!4495 = !DILocation(line: 1931, column: 13, scope: !4462)
!4496 = !DILocation(line: 1935, column: 37, scope: !4462)
!4497 = !DILocation(line: 1935, column: 43, scope: !4462)
!4498 = !DILocation(line: 1935, column: 52, scope: !4462)
!4499 = !DILocation(line: 1935, column: 50, scope: !4462)
!4500 = !DILocation(line: 1935, column: 36, scope: !4462)
!4501 = !DILocation(line: 1935, column: 27, scope: !4462)
!4502 = !DILocation(line: 1935, column: 13, scope: !4462)
!4503 = !DILocation(line: 1935, column: 34, scope: !4462)
!4504 = !DILocation(line: 1937, column: 30, scope: !4462)
!4505 = !DILocation(line: 1937, column: 35, scope: !4462)
!4506 = !DILocation(line: 1937, column: 27, scope: !4462)
!4507 = !DILocation(line: 1938, column: 9, scope: !4462)
!4508 = !DILocation(line: 1927, column: 50, scope: !4509)
!4509 = !DILexicalBlockFile(scope: !4456, file: !897, discriminator: 2)
!4510 = !DILocation(line: 1927, column: 9, scope: !4509)
!4511 = distinct !{!4511, !4512}
!4512 = !DILocation(line: 1927, column: 9, scope: !4429)
!4513 = !DILocation(line: 1939, column: 5, scope: !4429)
!4514 = !DILocation(line: 1921, column: 39, scope: !4515)
!4515 = !DILexicalBlockFile(scope: !4423, file: !897, discriminator: 2)
!4516 = !DILocation(line: 1921, column: 5, scope: !4515)
!4517 = distinct !{!4517, !4518}
!4518 = !DILocation(line: 1921, column: 5, scope: !4394)
!4519 = !DILocation(line: 1940, column: 1, scope: !4394)
!4520 = distinct !DISubprogram(name: "apply_filter", scope: !897, file: !897, line: 1806, type: !4521, isLocal: true, isDefinition: true, scopeLine: 1807, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!4521 = !DISubroutineType(types: !4522)
!4522 = !{!939, !1749, !993}
!4523 = !DILocalVariable(name: "ctx", arg: 1, scope: !4520, file: !897, line: 1806, type: !1749)
!4524 = !DILocation(line: 1806, column: 43, scope: !4520)
!4525 = !DILocalVariable(name: "channel", arg: 2, scope: !4520, file: !897, line: 1806, type: !993)
!4526 = !DILocation(line: 1806, column: 61, scope: !4520)
!4527 = !DILocalVariable(name: "fp", scope: !4520, file: !897, line: 1808, type: !4528)
!4528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4529, size: 128, align: 64, elements: !944)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64, align: 64)
!4530 = !DILocation(line: 1808, column: 19, scope: !4520)
!4531 = !DILocation(line: 1808, column: 27, scope: !4520)
!4532 = !DILocation(line: 1808, column: 54, scope: !4520)
!4533 = !DILocation(line: 1808, column: 30, scope: !4520)
!4534 = !DILocation(line: 1808, column: 35, scope: !4520)
!4535 = !DILocation(line: 1808, column: 63, scope: !4520)
!4536 = !DILocation(line: 1809, column: 64, scope: !4520)
!4537 = !DILocation(line: 1809, column: 40, scope: !4520)
!4538 = !DILocation(line: 1809, column: 45, scope: !4520)
!4539 = !DILocation(line: 1809, column: 73, scope: !4520)
!4540 = !DILocalVariable(name: "filter_state_buffer", scope: !4520, file: !897, line: 1810, type: !4541)
!4541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1767, size: 128, align: 64, elements: !944)
!4542 = !DILocation(line: 1810, column: 14, scope: !4520)
!4543 = !DILocalVariable(name: "mask", scope: !4520, file: !897, line: 1811, type: !938)
!4544 = !DILocation(line: 1811, column: 13, scope: !4520)
!4545 = !DILocation(line: 1811, column: 70, scope: !4520)
!4546 = !DILocation(line: 1811, column: 28, scope: !4520)
!4547 = !DILocation(line: 1811, column: 33, scope: !4520)
!4548 = !DILocation(line: 1811, column: 54, scope: !4520)
!4549 = !DILocation(line: 1811, column: 25, scope: !4520)
!4550 = !DILocalVariable(name: "sample_buffer", scope: !4520, file: !897, line: 1812, type: !1767)
!4551 = !DILocation(line: 1812, column: 14, scope: !4520)
!4552 = !DILocation(line: 1812, column: 30, scope: !4520)
!4553 = !DILocation(line: 1812, column: 35, scope: !4520)
!4554 = !DILocation(line: 1812, column: 51, scope: !4520)
!4555 = !DILocation(line: 1812, column: 49, scope: !4520)
!4556 = !DILocalVariable(name: "number_of_samples", scope: !4520, file: !897, line: 1813, type: !993)
!4557 = !DILocation(line: 1813, column: 18, scope: !4520)
!4558 = !DILocation(line: 1813, column: 38, scope: !4520)
!4559 = !DILocation(line: 1813, column: 43, scope: !4520)
!4560 = !DILocalVariable(name: "filter_shift", scope: !4520, file: !897, line: 1814, type: !993)
!4561 = !DILocation(line: 1814, column: 18, scope: !4520)
!4562 = !DILocation(line: 1814, column: 33, scope: !4520)
!4563 = !DILocation(line: 1814, column: 40, scope: !4520)
!4564 = !DILocalVariable(name: "filter", scope: !4520, file: !897, line: 1815, type: !939)
!4565 = !DILocation(line: 1815, column: 9, scope: !4520)
!4566 = !DILocalVariable(name: "i", scope: !4520, file: !897, line: 1816, type: !939)
!4567 = !DILocation(line: 1816, column: 9, scope: !4520)
!4568 = !DILocation(line: 1818, column: 12, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4520, file: !897, line: 1818, column: 5)
!4570 = !DILocation(line: 1818, column: 10, scope: !4569)
!4571 = !DILocation(line: 1818, column: 17, scope: !4572)
!4572 = !DILexicalBlockFile(scope: !4573, file: !897, discriminator: 1)
!4573 = distinct !DILexicalBlock(scope: !4569, file: !897, line: 1818, column: 5)
!4574 = !DILocation(line: 1818, column: 19, scope: !4572)
!4575 = !DILocation(line: 1818, column: 5, scope: !4572)
!4576 = !DILocalVariable(name: "size", scope: !4577, file: !897, line: 1819, type: !993)
!4577 = distinct !DILexicalBlock(scope: !4573, file: !897, line: 1818, column: 29)
!4578 = !DILocation(line: 1819, column: 22, scope: !4577)
!4579 = !DILocation(line: 1819, column: 29, scope: !4577)
!4580 = !DILocation(line: 1819, column: 34, scope: !4577)
!4581 = !DILocation(line: 1820, column: 44, scope: !4577)
!4582 = !DILocation(line: 1820, column: 48, scope: !4577)
!4583 = !DILocation(line: 1820, column: 34, scope: !4577)
!4584 = !DILocation(line: 1820, column: 29, scope: !4577)
!4585 = !DILocation(line: 1820, column: 9, scope: !4577)
!4586 = !DILocation(line: 1820, column: 32, scope: !4577)
!4587 = !DILocation(line: 1821, column: 34, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4577, file: !897, line: 1821, column: 13)
!4589 = !DILocation(line: 1821, column: 14, scope: !4588)
!4590 = !DILocation(line: 1821, column: 13, scope: !4577)
!4591 = !DILocation(line: 1822, column: 20, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4588, file: !897, line: 1821, column: 38)
!4593 = !DILocation(line: 1822, column: 25, scope: !4592)
!4594 = !DILocation(line: 1822, column: 13, scope: !4592)
!4595 = !DILocation(line: 1824, column: 13, scope: !4592)
!4596 = !DILocation(line: 1826, column: 5, scope: !4577)
!4597 = !DILocation(line: 1818, column: 25, scope: !4598)
!4598 = !DILexicalBlockFile(scope: !4573, file: !897, discriminator: 2)
!4599 = !DILocation(line: 1818, column: 5, scope: !4598)
!4600 = distinct !{!4600, !4601}
!4601 = !DILocation(line: 1818, column: 5, scope: !4520)
!4602 = !DILocation(line: 1828, column: 12, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4520, file: !897, line: 1828, column: 5)
!4604 = !DILocation(line: 1828, column: 10, scope: !4603)
!4605 = !DILocation(line: 1828, column: 17, scope: !4606)
!4606 = !DILexicalBlockFile(scope: !4607, file: !897, discriminator: 1)
!4607 = distinct !DILexicalBlock(scope: !4603, file: !897, line: 1828, column: 5)
!4608 = !DILocation(line: 1828, column: 19, scope: !4606)
!4609 = !DILocation(line: 1828, column: 5, scope: !4606)
!4610 = !DILocation(line: 1829, column: 38, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4607, file: !897, line: 1828, column: 29)
!4612 = !DILocation(line: 1829, column: 37, scope: !4611)
!4613 = !DILocation(line: 1829, column: 32, scope: !4611)
!4614 = !DILocation(line: 1829, column: 9, scope: !4611)
!4615 = !DILocation(line: 1829, column: 35, scope: !4611)
!4616 = !DILocation(line: 1830, column: 38, scope: !4611)
!4617 = !DILocation(line: 1830, column: 37, scope: !4611)
!4618 = !DILocation(line: 1830, column: 32, scope: !4611)
!4619 = !DILocation(line: 1830, column: 9, scope: !4611)
!4620 = !DILocation(line: 1830, column: 35, scope: !4611)
!4621 = !DILocation(line: 1832, column: 26, scope: !4611)
!4622 = !DILocation(line: 1832, column: 31, scope: !4611)
!4623 = !DILocation(line: 1832, column: 23, scope: !4611)
!4624 = !DILocation(line: 1833, column: 5, scope: !4611)
!4625 = !DILocation(line: 1828, column: 25, scope: !4626)
!4626 = !DILexicalBlockFile(scope: !4607, file: !897, discriminator: 2)
!4627 = !DILocation(line: 1828, column: 5, scope: !4626)
!4628 = distinct !{!4628, !4629}
!4629 = !DILocation(line: 1828, column: 5, scope: !4520)
!4630 = !DILocation(line: 1835, column: 12, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4520, file: !897, line: 1835, column: 5)
!4632 = !DILocation(line: 1835, column: 10, scope: !4631)
!4633 = !DILocation(line: 1835, column: 17, scope: !4634)
!4634 = !DILexicalBlockFile(scope: !4635, file: !897, discriminator: 1)
!4635 = distinct !DILexicalBlock(scope: !4631, file: !897, line: 1835, column: 5)
!4636 = !DILocation(line: 1835, column: 21, scope: !4634)
!4637 = !DILocation(line: 1835, column: 19, scope: !4634)
!4638 = !DILocation(line: 1835, column: 5, scope: !4634)
!4639 = !DILocalVariable(name: "sample", scope: !4640, file: !897, line: 1836, type: !938)
!4640 = distinct !DILexicalBlock(scope: !4635, file: !897, line: 1835, column: 45)
!4641 = !DILocation(line: 1836, column: 17, scope: !4640)
!4642 = !DILocation(line: 1836, column: 27, scope: !4640)
!4643 = !DILocation(line: 1836, column: 26, scope: !4640)
!4644 = !DILocalVariable(name: "order", scope: !4640, file: !897, line: 1837, type: !993)
!4645 = !DILocation(line: 1837, column: 22, scope: !4640)
!4646 = !DILocalVariable(name: "accum", scope: !4640, file: !897, line: 1838, type: !981)
!4647 = !DILocation(line: 1838, column: 17, scope: !4640)
!4648 = !DILocalVariable(name: "residual", scope: !4640, file: !897, line: 1839, type: !938)
!4649 = !DILocation(line: 1839, column: 17, scope: !4640)
!4650 = !DILocation(line: 1841, column: 21, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4640, file: !897, line: 1841, column: 9)
!4652 = !DILocation(line: 1841, column: 14, scope: !4651)
!4653 = !DILocation(line: 1841, column: 26, scope: !4654)
!4654 = !DILexicalBlockFile(scope: !4655, file: !897, discriminator: 1)
!4655 = distinct !DILexicalBlock(scope: !4651, file: !897, line: 1841, column: 9)
!4656 = !DILocation(line: 1841, column: 33, scope: !4654)
!4657 = !DILocation(line: 1841, column: 9, scope: !4654)
!4658 = !DILocalVariable(name: "fcoeff", scope: !4659, file: !897, line: 1842, type: !1767)
!4659 = distinct !DILexicalBlock(scope: !4655, file: !897, line: 1841, column: 48)
!4660 = !DILocation(line: 1842, column: 22, scope: !4659)
!4661 = !DILocation(line: 1842, column: 70, scope: !4659)
!4662 = !DILocation(line: 1842, column: 31, scope: !4659)
!4663 = !DILocation(line: 1842, column: 55, scope: !4659)
!4664 = !DILocation(line: 1842, column: 36, scope: !4659)
!4665 = !DILocation(line: 1842, column: 64, scope: !4659)
!4666 = !DILocation(line: 1843, column: 24, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4659, file: !897, line: 1843, column: 13)
!4668 = !DILocation(line: 1843, column: 18, scope: !4667)
!4669 = !DILocation(line: 1843, column: 29, scope: !4670)
!4670 = !DILexicalBlockFile(scope: !4671, file: !897, discriminator: 1)
!4671 = distinct !DILexicalBlock(scope: !4667, file: !897, line: 1843, column: 13)
!4672 = !DILocation(line: 1843, column: 40, scope: !4670)
!4673 = !DILocation(line: 1843, column: 37, scope: !4670)
!4674 = !DILocation(line: 1843, column: 49, scope: !4670)
!4675 = !DILocation(line: 1843, column: 35, scope: !4670)
!4676 = !DILocation(line: 1843, column: 13, scope: !4670)
!4677 = !DILocation(line: 1844, column: 63, scope: !4671)
!4678 = !DILocation(line: 1844, column: 65, scope: !4671)
!4679 = !DILocation(line: 1844, column: 71, scope: !4671)
!4680 = !DILocation(line: 1844, column: 69, scope: !4671)
!4681 = !DILocation(line: 1844, column: 35, scope: !4671)
!4682 = !DILocation(line: 1844, column: 55, scope: !4671)
!4683 = !DILocation(line: 1844, column: 26, scope: !4671)
!4684 = !DILocation(line: 1845, column: 33, scope: !4671)
!4685 = !DILocation(line: 1845, column: 26, scope: !4671)
!4686 = !DILocation(line: 1844, column: 78, scope: !4671)
!4687 = !DILocation(line: 1844, column: 23, scope: !4671)
!4688 = !DILocation(line: 1844, column: 17, scope: !4671)
!4689 = !DILocation(line: 1843, column: 61, scope: !4690)
!4690 = !DILexicalBlockFile(scope: !4671, file: !897, discriminator: 2)
!4691 = !DILocation(line: 1843, column: 13, scope: !4690)
!4692 = distinct !{!4692, !4693}
!4693 = !DILocation(line: 1843, column: 13, scope: !4659)
!4694 = !DILocation(line: 1846, column: 9, scope: !4659)
!4695 = !DILocation(line: 1841, column: 44, scope: !4696)
!4696 = !DILexicalBlockFile(scope: !4655, file: !897, discriminator: 2)
!4697 = !DILocation(line: 1841, column: 9, scope: !4696)
!4698 = distinct !{!4698, !4699}
!4699 = !DILocation(line: 1841, column: 9, scope: !4640)
!4700 = !DILocation(line: 1848, column: 19, scope: !4640)
!4701 = !DILocation(line: 1848, column: 15, scope: !4640)
!4702 = !DILocation(line: 1849, column: 20, scope: !4640)
!4703 = !DILocation(line: 1849, column: 30, scope: !4640)
!4704 = !DILocation(line: 1849, column: 38, scope: !4640)
!4705 = !DILocation(line: 1849, column: 36, scope: !4640)
!4706 = !DILocation(line: 1849, column: 27, scope: !4640)
!4707 = !DILocation(line: 1849, column: 18, scope: !4640)
!4708 = !DILocation(line: 1851, column: 13, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4640, file: !897, line: 1851, column: 13)
!4710 = !DILocation(line: 1851, column: 34, scope: !4709)
!4711 = !DILocation(line: 1851, column: 39, scope: !4709)
!4712 = !DILocation(line: 1851, column: 50, scope: !4709)
!4713 = !DILocation(line: 1851, column: 30, scope: !4709)
!4714 = !DILocation(line: 1851, column: 56, scope: !4709)
!4715 = !DILocation(line: 1851, column: 25, scope: !4709)
!4716 = !DILocation(line: 1851, column: 22, scope: !4709)
!4717 = !DILocation(line: 1851, column: 62, scope: !4709)
!4718 = !DILocation(line: 1851, column: 65, scope: !4719)
!4719 = !DILexicalBlockFile(scope: !4709, file: !897, discriminator: 1)
!4720 = !DILocation(line: 1851, column: 84, scope: !4719)
!4721 = !DILocation(line: 1851, column: 89, scope: !4719)
!4722 = !DILocation(line: 1851, column: 100, scope: !4719)
!4723 = !DILocation(line: 1851, column: 80, scope: !4719)
!4724 = !DILocation(line: 1851, column: 106, scope: !4719)
!4725 = !DILocation(line: 1851, column: 74, scope: !4719)
!4726 = !DILocation(line: 1851, column: 13, scope: !4719)
!4727 = !DILocation(line: 1852, column: 13, scope: !4709)
!4728 = !DILocation(line: 1854, column: 37, scope: !4640)
!4729 = !DILocation(line: 1854, column: 32, scope: !4640)
!4730 = !DILocation(line: 1854, column: 9, scope: !4640)
!4731 = !DILocation(line: 1854, column: 35, scope: !4640)
!4732 = !DILocation(line: 1855, column: 37, scope: !4640)
!4733 = !DILocation(line: 1855, column: 32, scope: !4640)
!4734 = !DILocation(line: 1855, column: 9, scope: !4640)
!4735 = !DILocation(line: 1855, column: 35, scope: !4640)
!4736 = !DILocation(line: 1857, column: 26, scope: !4640)
!4737 = !DILocation(line: 1857, column: 31, scope: !4640)
!4738 = !DILocation(line: 1857, column: 23, scope: !4640)
!4739 = !DILocation(line: 1858, column: 5, scope: !4640)
!4740 = !DILocation(line: 1835, column: 41, scope: !4741)
!4741 = !DILexicalBlockFile(scope: !4635, file: !897, discriminator: 2)
!4742 = !DILocation(line: 1835, column: 5, scope: !4741)
!4743 = distinct !{!4743, !4744}
!4744 = !DILocation(line: 1835, column: 5, scope: !4520)
!4745 = !DILocation(line: 1860, column: 21, scope: !4520)
!4746 = !DILocation(line: 1860, column: 26, scope: !4520)
!4747 = !DILocation(line: 1860, column: 42, scope: !4520)
!4748 = !DILocation(line: 1860, column: 40, scope: !4520)
!4749 = !DILocation(line: 1860, column: 19, scope: !4520)
!4750 = !DILocation(line: 1861, column: 12, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4520, file: !897, line: 1861, column: 5)
!4752 = !DILocation(line: 1861, column: 10, scope: !4751)
!4753 = !DILocation(line: 1861, column: 17, scope: !4754)
!4754 = !DILexicalBlockFile(scope: !4755, file: !897, discriminator: 1)
!4755 = distinct !DILexicalBlock(scope: !4751, file: !897, line: 1861, column: 5)
!4756 = !DILocation(line: 1861, column: 21, scope: !4754)
!4757 = !DILocation(line: 1861, column: 19, scope: !4754)
!4758 = !DILocation(line: 1861, column: 5, scope: !4754)
!4759 = !DILocation(line: 1862, column: 49, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4755, file: !897, line: 1861, column: 45)
!4761 = !DILocation(line: 1862, column: 26, scope: !4760)
!4762 = !DILocation(line: 1862, column: 10, scope: !4760)
!4763 = !DILocation(line: 1862, column: 24, scope: !4760)
!4764 = !DILocation(line: 1864, column: 26, scope: !4760)
!4765 = !DILocation(line: 1864, column: 31, scope: !4760)
!4766 = !DILocation(line: 1864, column: 23, scope: !4760)
!4767 = !DILocation(line: 1865, column: 5, scope: !4760)
!4768 = !DILocation(line: 1861, column: 41, scope: !4769)
!4769 = !DILexicalBlockFile(scope: !4755, file: !897, discriminator: 2)
!4770 = !DILocation(line: 1861, column: 5, scope: !4769)
!4771 = distinct !{!4771, !4772}
!4772 = !DILocation(line: 1861, column: 5, scope: !4520)
!4773 = !DILocation(line: 1867, column: 12, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4520, file: !897, line: 1867, column: 5)
!4775 = !DILocation(line: 1867, column: 10, scope: !4774)
!4776 = !DILocation(line: 1867, column: 17, scope: !4777)
!4777 = !DILexicalBlockFile(scope: !4778, file: !897, discriminator: 1)
!4778 = distinct !DILexicalBlock(scope: !4774, file: !897, line: 1867, column: 5)
!4779 = !DILocation(line: 1867, column: 19, scope: !4777)
!4780 = !DILocation(line: 1867, column: 5, scope: !4777)
!4781 = !DILocation(line: 1868, column: 39, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4778, file: !897, line: 1867, column: 29)
!4783 = !DILocation(line: 1868, column: 19, scope: !4782)
!4784 = !DILocation(line: 1868, column: 18, scope: !4782)
!4785 = !DILocation(line: 1868, column: 9, scope: !4782)
!4786 = !DILocation(line: 1869, column: 5, scope: !4782)
!4787 = !DILocation(line: 1867, column: 25, scope: !4788)
!4788 = !DILexicalBlockFile(scope: !4778, file: !897, discriminator: 2)
!4789 = !DILocation(line: 1867, column: 5, scope: !4788)
!4790 = distinct !{!4790, !4791}
!4791 = !DILocation(line: 1867, column: 5, scope: !4520)
!4792 = !DILocation(line: 1871, column: 5, scope: !4520)
!4793 = !DILocation(line: 1872, column: 1, scope: !4520)
!4794 = distinct !DISubprogram(name: "write_major_sync", scope: !897, file: !897, line: 748, type: !4795, isLocal: true, isDefinition: true, scopeLine: 749, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!4795 = !DISubroutineType(types: !4796)
!4796 = !{null, !1749, !1121, !939}
!4797 = !DILocalVariable(name: "ctx", arg: 1, scope: !4794, file: !897, line: 748, type: !1749)
!4798 = !DILocation(line: 748, column: 48, scope: !4794)
!4799 = !DILocalVariable(name: "buf", arg: 2, scope: !4794, file: !897, line: 748, type: !1121)
!4800 = !DILocation(line: 748, column: 62, scope: !4794)
!4801 = !DILocalVariable(name: "buf_size", arg: 3, scope: !4794, file: !897, line: 748, type: !939)
!4802 = !DILocation(line: 748, column: 71, scope: !4794)
!4803 = !DILocalVariable(name: "pb", scope: !4794, file: !897, line: 750, type: !4804)
!4804 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !4805, line: 40, baseType: !4806)
!4805 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!4806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !4805, line: 35, size: 320, align: 64, elements: !4807)
!4807 = !{!4808, !4809, !4810, !4811, !4812, !4813}
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !4806, file: !4805, line: 36, baseType: !992, size: 32, align: 32)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !4806, file: !4805, line: 37, baseType: !939, size: 32, align: 32, offset: 32)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4806, file: !4805, line: 38, baseType: !1121, size: 64, align: 64, offset: 64)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !4806, file: !4805, line: 38, baseType: !1121, size: 64, align: 64, offset: 128)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !4806, file: !4805, line: 38, baseType: !1121, size: 64, align: 64, offset: 192)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !4806, file: !4805, line: 39, baseType: !939, size: 32, align: 32, offset: 256)
!4814 = !DILocation(line: 750, column: 19, scope: !4794)
!4815 = !DILocation(line: 752, column: 24, scope: !4794)
!4816 = !DILocation(line: 752, column: 29, scope: !4794)
!4817 = !DILocation(line: 752, column: 5, scope: !4794)
!4818 = !DILocation(line: 754, column: 5, scope: !4794)
!4819 = !DILocation(line: 756, column: 9, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4794, file: !897, line: 756, column: 9)
!4821 = !DILocation(line: 756, column: 14, scope: !4820)
!4822 = !DILocation(line: 756, column: 21, scope: !4820)
!4823 = !DILocation(line: 756, column: 30, scope: !4820)
!4824 = !DILocation(line: 756, column: 9, scope: !4794)
!4825 = !DILocation(line: 757, column: 9, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4820, file: !897, line: 756, column: 50)
!4827 = !DILocation(line: 758, column: 26, scope: !4826)
!4828 = !DILocation(line: 758, column: 31, scope: !4826)
!4829 = !DILocation(line: 758, column: 9, scope: !4826)
!4830 = !DILocation(line: 759, column: 26, scope: !4826)
!4831 = !DILocation(line: 759, column: 31, scope: !4826)
!4832 = !DILocation(line: 759, column: 9, scope: !4826)
!4833 = !DILocation(line: 760, column: 26, scope: !4826)
!4834 = !DILocation(line: 760, column: 31, scope: !4826)
!4835 = !DILocation(line: 760, column: 9, scope: !4826)
!4836 = !DILocation(line: 761, column: 26, scope: !4826)
!4837 = !DILocation(line: 761, column: 31, scope: !4826)
!4838 = !DILocation(line: 761, column: 9, scope: !4826)
!4839 = !DILocation(line: 762, column: 9, scope: !4826)
!4840 = !DILocation(line: 763, column: 9, scope: !4826)
!4841 = !DILocation(line: 764, column: 9, scope: !4826)
!4842 = !DILocation(line: 765, column: 26, scope: !4826)
!4843 = !DILocation(line: 765, column: 31, scope: !4826)
!4844 = !DILocation(line: 765, column: 9, scope: !4826)
!4845 = !DILocation(line: 766, column: 5, scope: !4826)
!4846 = !DILocation(line: 766, column: 16, scope: !4847)
!4847 = !DILexicalBlockFile(scope: !4848, file: !897, discriminator: 1)
!4848 = distinct !DILexicalBlock(scope: !4820, file: !897, line: 766, column: 16)
!4849 = !DILocation(line: 766, column: 21, scope: !4847)
!4850 = !DILocation(line: 766, column: 28, scope: !4847)
!4851 = !DILocation(line: 766, column: 37, scope: !4847)
!4852 = !DILocation(line: 767, column: 9, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4848, file: !897, line: 766, column: 60)
!4854 = !DILocation(line: 768, column: 26, scope: !4853)
!4855 = !DILocation(line: 768, column: 31, scope: !4853)
!4856 = !DILocation(line: 768, column: 9, scope: !4853)
!4857 = !DILocation(line: 769, column: 9, scope: !4853)
!4858 = !DILocation(line: 770, column: 26, scope: !4853)
!4859 = !DILocation(line: 770, column: 31, scope: !4853)
!4860 = !DILocation(line: 770, column: 9, scope: !4853)
!4861 = !DILocation(line: 771, column: 26, scope: !4853)
!4862 = !DILocation(line: 771, column: 31, scope: !4853)
!4863 = !DILocation(line: 771, column: 9, scope: !4853)
!4864 = !DILocation(line: 772, column: 26, scope: !4853)
!4865 = !DILocation(line: 772, column: 31, scope: !4853)
!4866 = !DILocation(line: 772, column: 9, scope: !4853)
!4867 = !DILocation(line: 773, column: 26, scope: !4853)
!4868 = !DILocation(line: 773, column: 31, scope: !4853)
!4869 = !DILocation(line: 773, column: 9, scope: !4853)
!4870 = !DILocation(line: 774, column: 27, scope: !4853)
!4871 = !DILocation(line: 774, column: 32, scope: !4853)
!4872 = !DILocation(line: 774, column: 9, scope: !4853)
!4873 = !DILocation(line: 775, column: 5, scope: !4853)
!4874 = !DILocation(line: 777, column: 5, scope: !4794)
!4875 = !DILocation(line: 778, column: 23, scope: !4794)
!4876 = !DILocation(line: 778, column: 28, scope: !4794)
!4877 = !DILocation(line: 778, column: 5, scope: !4794)
!4878 = !DILocation(line: 779, column: 5, scope: !4794)
!4879 = !DILocation(line: 780, column: 5, scope: !4794)
!4880 = !DILocation(line: 781, column: 23, scope: !4794)
!4881 = !DILocation(line: 781, column: 28, scope: !4794)
!4882 = !DILocation(line: 781, column: 5, scope: !4794)
!4883 = !DILocation(line: 782, column: 5, scope: !4794)
!4884 = !DILocation(line: 783, column: 5, scope: !4794)
!4885 = !DILocation(line: 786, column: 22, scope: !4794)
!4886 = !DILocation(line: 786, column: 27, scope: !4794)
!4887 = !DILocation(line: 786, column: 5, scope: !4794)
!4888 = !DILocation(line: 787, column: 22, scope: !4794)
!4889 = !DILocation(line: 787, column: 27, scope: !4794)
!4890 = !DILocation(line: 787, column: 5, scope: !4794)
!4891 = !DILocation(line: 788, column: 22, scope: !4794)
!4892 = !DILocation(line: 788, column: 27, scope: !4794)
!4893 = !DILocation(line: 788, column: 5, scope: !4794)
!4894 = !DILocation(line: 789, column: 22, scope: !4794)
!4895 = !DILocation(line: 789, column: 27, scope: !4794)
!4896 = !DILocation(line: 789, column: 5, scope: !4794)
!4897 = !DILocation(line: 790, column: 5, scope: !4794)
!4898 = !DILocation(line: 791, column: 5, scope: !4794)
!4899 = !DILocation(line: 792, column: 5, scope: !4794)
!4900 = !DILocation(line: 793, column: 5, scope: !4794)
!4901 = !DILocation(line: 794, column: 5, scope: !4794)
!4902 = !DILocation(line: 795, column: 5, scope: !4794)
!4903 = !DILocation(line: 796, column: 22, scope: !4794)
!4904 = !DILocation(line: 796, column: 27, scope: !4794)
!4905 = !DILocation(line: 796, column: 5, scope: !4794)
!4906 = !DILocation(line: 798, column: 5, scope: !4794)
!4907 = !DILocation(line: 800, column: 66, scope: !4794)
!4908 = !DILocation(line: 800, column: 48, scope: !4794)
!4909 = !DILocation(line: 800, column: 32, scope: !4794)
!4910 = !DILocation(line: 800, column: 35, scope: !4794)
!4911 = !DILocation(line: 800, column: 42, scope: !4794)
!4912 = !DILocation(line: 800, column: 45, scope: !4794)
!4913 = !DILocation(line: 801, column: 1, scope: !4794)
!4914 = distinct !DISubprogram(name: "write_substrs", scope: !897, file: !897, line: 1052, type: !4915, isLocal: true, isDefinition: true, scopeLine: 1055, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{!1121, !1749, !1121, !939, !939, !1418}
!4917 = !DILocalVariable(name: "ctx", arg: 1, scope: !4914, file: !897, line: 1052, type: !1749)
!4918 = !DILocation(line: 1052, column: 49, scope: !4914)
!4919 = !DILocalVariable(name: "buf", arg: 2, scope: !4914, file: !897, line: 1052, type: !1121)
!4920 = !DILocation(line: 1052, column: 63, scope: !4914)
!4921 = !DILocalVariable(name: "buf_size", arg: 3, scope: !4914, file: !897, line: 1052, type: !939)
!4922 = !DILocation(line: 1052, column: 72, scope: !4914)
!4923 = !DILocalVariable(name: "restart_frame", arg: 4, scope: !4914, file: !897, line: 1053, type: !939)
!4924 = !DILocation(line: 1053, column: 35, scope: !4914)
!4925 = !DILocalVariable(name: "substream_data_len", arg: 5, scope: !4914, file: !897, line: 1054, type: !1418)
!4926 = !DILocation(line: 1054, column: 40, scope: !4914)
!4927 = !DILocalVariable(name: "lossless_check_data", scope: !4914, file: !897, line: 1056, type: !1767)
!4928 = !DILocation(line: 1056, column: 14, scope: !4914)
!4929 = !DILocation(line: 1056, column: 36, scope: !4914)
!4930 = !DILocation(line: 1056, column: 41, scope: !4914)
!4931 = !DILocalVariable(name: "substr", scope: !4914, file: !897, line: 1057, type: !993)
!4932 = !DILocation(line: 1057, column: 18, scope: !4914)
!4933 = !DILocalVariable(name: "end", scope: !4914, file: !897, line: 1058, type: !939)
!4934 = !DILocation(line: 1058, column: 9, scope: !4914)
!4935 = !DILocation(line: 1060, column: 28, scope: !4914)
!4936 = !DILocation(line: 1060, column: 33, scope: !4914)
!4937 = !DILocation(line: 1060, column: 47, scope: !4914)
!4938 = !DILocation(line: 1060, column: 52, scope: !4914)
!4939 = !DILocation(line: 1060, column: 45, scope: !4914)
!4940 = !DILocation(line: 1060, column: 25, scope: !4914)
!4941 = !DILocation(line: 1062, column: 17, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4914, file: !897, line: 1062, column: 5)
!4943 = !DILocation(line: 1062, column: 10, scope: !4942)
!4944 = !DILocation(line: 1062, column: 22, scope: !4945)
!4945 = !DILexicalBlockFile(scope: !4946, file: !897, discriminator: 1)
!4946 = distinct !DILexicalBlock(scope: !4942, file: !897, line: 1062, column: 5)
!4947 = !DILocation(line: 1062, column: 31, scope: !4945)
!4948 = !DILocation(line: 1062, column: 36, scope: !4945)
!4949 = !DILocation(line: 1062, column: 29, scope: !4945)
!4950 = !DILocation(line: 1062, column: 5, scope: !4945)
!4951 = !DILocalVariable(name: "cur_subblock_index", scope: !4952, file: !897, line: 1063, type: !993)
!4952 = distinct !DILexicalBlock(scope: !4946, file: !897, line: 1062, column: 62)
!4953 = !DILocation(line: 1063, column: 22, scope: !4952)
!4954 = !DILocation(line: 1063, column: 43, scope: !4952)
!4955 = !DILocation(line: 1063, column: 48, scope: !4952)
!4956 = !DILocalVariable(name: "num_subblocks", scope: !4952, file: !897, line: 1064, type: !993)
!4957 = !DILocation(line: 1064, column: 22, scope: !4952)
!4958 = !DILocation(line: 1064, column: 38, scope: !4952)
!4959 = !DILocation(line: 1064, column: 43, scope: !4952)
!4960 = !DILocalVariable(name: "subblock", scope: !4952, file: !897, line: 1065, type: !993)
!4961 = !DILocation(line: 1065, column: 22, scope: !4952)
!4962 = !DILocalVariable(name: "rh", scope: !4952, file: !897, line: 1066, type: !1835)
!4963 = !DILocation(line: 1066, column: 24, scope: !4952)
!4964 = !DILocation(line: 1066, column: 51, scope: !4952)
!4965 = !DILocation(line: 1066, column: 30, scope: !4952)
!4966 = !DILocation(line: 1066, column: 35, scope: !4952)
!4967 = !DILocalVariable(name: "substr_restart_frame", scope: !4952, file: !897, line: 1067, type: !939)
!4968 = !DILocation(line: 1067, column: 13, scope: !4952)
!4969 = !DILocation(line: 1067, column: 36, scope: !4952)
!4970 = !DILocalVariable(name: "parity", scope: !4952, file: !897, line: 1068, type: !932)
!4971 = !DILocation(line: 1068, column: 17, scope: !4952)
!4972 = !DILocalVariable(name: "checksum", scope: !4952, file: !897, line: 1068, type: !932)
!4973 = !DILocation(line: 1068, column: 25, scope: !4952)
!4974 = !DILocalVariable(name: "pb", scope: !4952, file: !897, line: 1069, type: !4804)
!4975 = !DILocation(line: 1069, column: 23, scope: !4952)
!4976 = !DILocalVariable(name: "tmpb", scope: !4952, file: !897, line: 1069, type: !4804)
!4977 = !DILocation(line: 1069, column: 27, scope: !4952)
!4978 = !DILocalVariable(name: "params_changed", scope: !4952, file: !897, line: 1070, type: !939)
!4979 = !DILocation(line: 1070, column: 13, scope: !4952)
!4980 = !DILocation(line: 1072, column: 35, scope: !4952)
!4981 = !DILocation(line: 1072, column: 9, scope: !4952)
!4982 = !DILocation(line: 1072, column: 14, scope: !4952)
!4983 = !DILocation(line: 1072, column: 33, scope: !4952)
!4984 = !DILocation(line: 1074, column: 28, scope: !4952)
!4985 = !DILocation(line: 1074, column: 33, scope: !4952)
!4986 = !DILocation(line: 1074, column: 9, scope: !4952)
!4987 = !DILocation(line: 1076, column: 23, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4952, file: !897, line: 1076, column: 9)
!4989 = !DILocation(line: 1076, column: 14, scope: !4988)
!4990 = !DILocation(line: 1076, column: 28, scope: !4991)
!4991 = !DILexicalBlockFile(scope: !4992, file: !897, discriminator: 1)
!4992 = distinct !DILexicalBlock(scope: !4988, file: !897, line: 1076, column: 9)
!4993 = !DILocation(line: 1076, column: 40, scope: !4991)
!4994 = !DILocation(line: 1076, column: 37, scope: !4991)
!4995 = !DILocation(line: 1076, column: 9, scope: !4991)
!4996 = !DILocalVariable(name: "subblock_index", scope: !4997, file: !897, line: 1077, type: !993)
!4997 = distinct !DILexicalBlock(scope: !4992, file: !897, line: 1076, column: 67)
!4998 = !DILocation(line: 1077, column: 26, scope: !4997)
!4999 = !DILocation(line: 1079, column: 48, scope: !4997)
!5000 = !DILocation(line: 1079, column: 28, scope: !4997)
!5001 = !DILocation(line: 1081, column: 84, scope: !4997)
!5002 = !DILocation(line: 1081, column: 41, scope: !4997)
!5003 = !DILocation(line: 1081, column: 68, scope: !4997)
!5004 = !DILocation(line: 1081, column: 46, scope: !4997)
!5005 = !DILocation(line: 1081, column: 13, scope: !4997)
!5006 = !DILocation(line: 1081, column: 18, scope: !4997)
!5007 = !DILocation(line: 1081, column: 38, scope: !4997)
!5008 = !DILocation(line: 1082, column: 65, scope: !4997)
!5009 = !DILocation(line: 1082, column: 39, scope: !4997)
!5010 = !DILocation(line: 1082, column: 44, scope: !4997)
!5011 = !DILocation(line: 1082, column: 13, scope: !4997)
!5012 = !DILocation(line: 1082, column: 18, scope: !4997)
!5013 = !DILocation(line: 1082, column: 37, scope: !4997)
!5014 = !DILocation(line: 1084, column: 72, scope: !4997)
!5015 = !DILocation(line: 1084, column: 30, scope: !4997)
!5016 = !DILocation(line: 1084, column: 56, scope: !4997)
!5017 = !DILocation(line: 1084, column: 35, scope: !4997)
!5018 = !DILocation(line: 1084, column: 28, scope: !4997)
!5019 = !DILocation(line: 1086, column: 17, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !4997, file: !897, line: 1086, column: 17)
!5021 = !DILocation(line: 1086, column: 38, scope: !5020)
!5022 = !DILocation(line: 1086, column: 41, scope: !5023)
!5023 = !DILexicalBlockFile(scope: !5020, file: !897, discriminator: 1)
!5024 = !DILocation(line: 1086, column: 17, scope: !5023)
!5025 = !DILocation(line: 1087, column: 17, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5020, file: !897, line: 1086, column: 57)
!5027 = !DILocation(line: 1089, column: 21, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5026, file: !897, line: 1089, column: 21)
!5029 = !DILocation(line: 1089, column: 21, scope: !5026)
!5030 = !DILocation(line: 1090, column: 21, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5028, file: !897, line: 1089, column: 43)
!5032 = !DILocation(line: 1092, column: 42, scope: !5031)
!5033 = !DILocation(line: 1092, column: 21, scope: !5031)
!5034 = !DILocation(line: 1093, column: 21, scope: !5031)
!5035 = !DILocation(line: 1093, column: 25, scope: !5031)
!5036 = !DILocation(line: 1093, column: 45, scope: !5031)
!5037 = !DILocation(line: 1094, column: 17, scope: !5031)
!5038 = !DILocation(line: 1095, column: 21, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5028, file: !897, line: 1094, column: 24)
!5040 = !DILocation(line: 1098, column: 39, scope: !5026)
!5041 = !DILocation(line: 1098, column: 49, scope: !5026)
!5042 = !DILocation(line: 1098, column: 17, scope: !5026)
!5043 = !DILocation(line: 1099, column: 13, scope: !5026)
!5044 = !DILocation(line: 1100, column: 17, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5020, file: !897, line: 1099, column: 20)
!5046 = !DILocation(line: 1103, column: 30, scope: !4997)
!5047 = !DILocation(line: 1103, column: 13, scope: !4997)
!5048 = !DILocation(line: 1105, column: 31, scope: !4997)
!5049 = !DILocation(line: 1105, column: 30, scope: !4997)
!5050 = !DILocation(line: 1105, column: 13, scope: !4997)
!5051 = !DILocation(line: 1107, column: 34, scope: !4997)
!5052 = !DILocation(line: 1108, column: 9, scope: !4997)
!5053 = !DILocation(line: 1076, column: 63, scope: !5054)
!5054 = !DILexicalBlockFile(scope: !4992, file: !897, discriminator: 2)
!5055 = !DILocation(line: 1076, column: 9, scope: !5054)
!5056 = distinct !{!5056, !5057}
!5057 = !DILocation(line: 1076, column: 9, scope: !4952)
!5058 = !DILocation(line: 1110, column: 25, scope: !4952)
!5059 = !DILocation(line: 1110, column: 24, scope: !4952)
!5060 = !DILocation(line: 1110, column: 46, scope: !4952)
!5061 = !DILocation(line: 1110, column: 9, scope: !5062)
!5062 = !DILexicalBlockFile(scope: !4952, file: !897, discriminator: 1)
!5063 = !DILocation(line: 1112, column: 56, scope: !4952)
!5064 = !DILocation(line: 1112, column: 36, scope: !4952)
!5065 = !DILocation(line: 1112, column: 9, scope: !4952)
!5066 = !DILocation(line: 1112, column: 13, scope: !4952)
!5067 = !DILocation(line: 1112, column: 33, scope: !4952)
!5068 = !DILocation(line: 1114, column: 13, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !4952, file: !897, line: 1114, column: 13)
!5070 = !DILocation(line: 1114, column: 18, scope: !5069)
!5071 = !DILocation(line: 1114, column: 32, scope: !5069)
!5072 = !DILocation(line: 1114, column: 37, scope: !5069)
!5073 = !DILocation(line: 1114, column: 29, scope: !5069)
!5074 = !DILocation(line: 1114, column: 13, scope: !4952)
!5075 = !DILocation(line: 1116, column: 13, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5069, file: !897, line: 1114, column: 51)
!5077 = !DILocation(line: 1117, column: 9, scope: !5076)
!5078 = !DILocation(line: 1120, column: 16, scope: !4952)
!5079 = !DILocation(line: 1121, column: 9, scope: !4952)
!5080 = !DILocation(line: 1123, column: 42, scope: !4952)
!5081 = !DILocation(line: 1123, column: 47, scope: !4952)
!5082 = !DILocation(line: 1123, column: 67, scope: !4952)
!5083 = !DILocation(line: 1123, column: 18, scope: !5062)
!5084 = !DILocation(line: 1123, column: 18, scope: !4952)
!5085 = !DILocation(line: 1123, column: 73, scope: !4952)
!5086 = !DILocation(line: 1123, column: 16, scope: !4952)
!5087 = !DILocation(line: 1124, column: 38, scope: !4952)
!5088 = !DILocation(line: 1124, column: 43, scope: !4952)
!5089 = !DILocation(line: 1124, column: 63, scope: !4952)
!5090 = !DILocation(line: 1124, column: 20, scope: !5062)
!5091 = !DILocation(line: 1124, column: 18, scope: !4952)
!5092 = !DILocation(line: 1126, column: 26, scope: !4952)
!5093 = !DILocation(line: 1126, column: 9, scope: !4952)
!5094 = !DILocation(line: 1127, column: 26, scope: !4952)
!5095 = !DILocation(line: 1127, column: 9, scope: !4952)
!5096 = !DILocation(line: 1129, column: 9, scope: !4952)
!5097 = !DILocation(line: 1131, column: 16, scope: !4952)
!5098 = !DILocation(line: 1131, column: 36, scope: !4952)
!5099 = !DILocation(line: 1131, column: 13, scope: !4952)
!5100 = !DILocation(line: 1132, column: 38, scope: !4952)
!5101 = !DILocation(line: 1132, column: 28, scope: !4952)
!5102 = !DILocation(line: 1132, column: 9, scope: !4952)
!5103 = !DILocation(line: 1132, column: 36, scope: !4952)
!5104 = !DILocation(line: 1134, column: 16, scope: !4952)
!5105 = !DILocation(line: 1134, column: 36, scope: !4952)
!5106 = !DILocation(line: 1134, column: 13, scope: !4952)
!5107 = !DILocation(line: 1135, column: 5, scope: !4952)
!5108 = !DILocation(line: 1062, column: 58, scope: !5109)
!5109 = !DILexicalBlockFile(scope: !4946, file: !897, discriminator: 2)
!5110 = !DILocation(line: 1062, column: 5, scope: !5109)
!5111 = distinct !{!5111, !5112}
!5112 = !DILocation(line: 1062, column: 5, scope: !4914)
!5113 = !DILocation(line: 1137, column: 38, scope: !4914)
!5114 = !DILocation(line: 1137, column: 43, scope: !4914)
!5115 = !DILocation(line: 1137, column: 71, scope: !4914)
!5116 = !DILocation(line: 1137, column: 5, scope: !4914)
!5117 = !DILocation(line: 1137, column: 10, scope: !4914)
!5118 = !DILocation(line: 1137, column: 35, scope: !4914)
!5119 = !DILocation(line: 1138, column: 5, scope: !4914)
!5120 = !DILocation(line: 1138, column: 10, scope: !4914)
!5121 = !DILocation(line: 1138, column: 38, scope: !4914)
!5122 = !DILocation(line: 1140, column: 12, scope: !4914)
!5123 = !DILocation(line: 1140, column: 5, scope: !4914)
!5124 = distinct !DISubprogram(name: "write_frame_headers", scope: !897, file: !897, line: 1144, type: !5125, isLocal: true, isDefinition: true, scopeLine: 1148, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!5125 = !DISubroutineType(types: !5126)
!5126 = !{null, !1749, !1121, !1121, !993, !939, !1418}
!5127 = !DILocalVariable(name: "x", arg: 1, scope: !5128, file: !5129, line: 58, type: !960)
!5128 = distinct !DISubprogram(name: "av_bswap16", scope: !5129, file: !5129, line: 58, type: !5130, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!5129 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5130 = !DISubroutineType(types: !5131)
!5131 = !{!960, !960}
!5132 = !DILocation(line: 58, column: 98, scope: !5128, inlinedAt: !5133)
!5133 = distinct !DILocation(line: 1178, column: 54, scope: !5124)
!5134 = !DILocation(line: 58, column: 98, scope: !5128, inlinedAt: !5135)
!5135 = distinct !DILocation(line: 1179, column: 56, scope: !5124)
!5136 = !DILocation(line: 58, column: 98, scope: !5128, inlinedAt: !5137)
!5137 = distinct !DILocation(line: 1165, column: 63, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5139, file: !897, line: 1156, column: 62)
!5139 = distinct !DILexicalBlock(scope: !5140, file: !897, line: 1156, column: 5)
!5140 = distinct !DILexicalBlock(scope: !5124, file: !897, line: 1156, column: 5)
!5141 = !DILocalVariable(name: "ctx", arg: 1, scope: !5124, file: !897, line: 1144, type: !1749)
!5142 = !DILocation(line: 1144, column: 51, scope: !5124)
!5143 = !DILocalVariable(name: "frame_header", arg: 2, scope: !5124, file: !897, line: 1144, type: !1121)
!5144 = !DILocation(line: 1144, column: 65, scope: !5124)
!5145 = !DILocalVariable(name: "substream_headers", arg: 3, scope: !5124, file: !897, line: 1145, type: !1121)
!5146 = !DILocation(line: 1145, column: 42, scope: !5124)
!5147 = !DILocalVariable(name: "length", arg: 4, scope: !5124, file: !897, line: 1145, type: !993)
!5148 = !DILocation(line: 1145, column: 74, scope: !5124)
!5149 = !DILocalVariable(name: "restart_frame", arg: 5, scope: !5124, file: !897, line: 1146, type: !939)
!5150 = !DILocation(line: 1146, column: 37, scope: !5124)
!5151 = !DILocalVariable(name: "substream_data_len", arg: 6, scope: !5124, file: !897, line: 1147, type: !1418)
!5152 = !DILocation(line: 1147, column: 42, scope: !5124)
!5153 = !DILocalVariable(name: "access_unit_header", scope: !5124, file: !897, line: 1149, type: !960)
!5154 = !DILocation(line: 1149, column: 14, scope: !5124)
!5155 = !DILocalVariable(name: "parity_nibble", scope: !5124, file: !897, line: 1150, type: !960)
!5156 = !DILocation(line: 1150, column: 14, scope: !5124)
!5157 = !DILocalVariable(name: "substr", scope: !5124, file: !897, line: 1151, type: !993)
!5158 = !DILocation(line: 1151, column: 18, scope: !5124)
!5159 = !DILocation(line: 1153, column: 21, scope: !5124)
!5160 = !DILocation(line: 1153, column: 26, scope: !5124)
!5161 = !DILocation(line: 1153, column: 19, scope: !5124)
!5162 = !DILocation(line: 1154, column: 22, scope: !5124)
!5163 = !DILocation(line: 1154, column: 19, scope: !5124)
!5164 = !DILocation(line: 1156, column: 17, scope: !5140)
!5165 = !DILocation(line: 1156, column: 10, scope: !5140)
!5166 = !DILocation(line: 1156, column: 22, scope: !5167)
!5167 = !DILexicalBlockFile(scope: !5139, file: !897, discriminator: 1)
!5168 = !DILocation(line: 1156, column: 31, scope: !5167)
!5169 = !DILocation(line: 1156, column: 36, scope: !5167)
!5170 = !DILocation(line: 1156, column: 29, scope: !5167)
!5171 = !DILocation(line: 1156, column: 5, scope: !5167)
!5172 = !DILocalVariable(name: "substr_hdr", scope: !5138, file: !897, line: 1157, type: !960)
!5173 = !DILocation(line: 1157, column: 18, scope: !5138)
!5174 = !DILocation(line: 1159, column: 20, scope: !5138)
!5175 = !DILocation(line: 1160, column: 25, scope: !5138)
!5176 = !DILocation(line: 1160, column: 24, scope: !5138)
!5177 = !DILocation(line: 1160, column: 39, scope: !5138)
!5178 = !DILocation(line: 1160, column: 20, scope: !5138)
!5179 = !DILocation(line: 1161, column: 20, scope: !5138)
!5180 = !DILocation(line: 1162, column: 20, scope: !5138)
!5181 = !DILocation(line: 1163, column: 43, scope: !5138)
!5182 = !DILocation(line: 1163, column: 24, scope: !5138)
!5183 = !DILocation(line: 1163, column: 51, scope: !5138)
!5184 = !DILocation(line: 1163, column: 56, scope: !5138)
!5185 = !DILocation(line: 1163, column: 20, scope: !5138)
!5186 = !DILocation(line: 1165, column: 74, scope: !5138)
!5187 = !DILocation(line: 1165, column: 63, scope: !5138)
!5188 = !DILocation(line: 60, column: 9, scope: !5128, inlinedAt: !5137)
!5189 = !DILocation(line: 60, column: 10, scope: !5128, inlinedAt: !5137)
!5190 = !DILocation(line: 60, column: 18, scope: !5128, inlinedAt: !5137)
!5191 = !DILocation(line: 60, column: 19, scope: !5128, inlinedAt: !5137)
!5192 = !DILocation(line: 60, column: 15, scope: !5128, inlinedAt: !5137)
!5193 = !DILocation(line: 60, column: 8, scope: !5128, inlinedAt: !5137)
!5194 = !DILocation(line: 60, column: 6, scope: !5128, inlinedAt: !5137)
!5195 = !DILocation(line: 61, column: 12, scope: !5128, inlinedAt: !5137)
!5196 = !DILocation(line: 1165, column: 36, scope: !5138)
!5197 = !DILocation(line: 1165, column: 57, scope: !5138)
!5198 = !DILocation(line: 1165, column: 60, scope: !5138)
!5199 = !DILocation(line: 1167, column: 44, scope: !5138)
!5200 = !DILocation(line: 1167, column: 26, scope: !5138)
!5201 = !DILocation(line: 1167, column: 23, scope: !5138)
!5202 = !DILocation(line: 1168, column: 44, scope: !5138)
!5203 = !DILocation(line: 1168, column: 26, scope: !5138)
!5204 = !DILocation(line: 1168, column: 23, scope: !5138)
!5205 = !DILocation(line: 1169, column: 5, scope: !5138)
!5206 = !DILocation(line: 1156, column: 58, scope: !5207)
!5207 = !DILexicalBlockFile(scope: !5139, file: !897, discriminator: 2)
!5208 = !DILocation(line: 1156, column: 5, scope: !5207)
!5209 = distinct !{!5209, !5210}
!5210 = !DILocation(line: 1156, column: 5, scope: !5124)
!5211 = !DILocation(line: 1171, column: 22, scope: !5124)
!5212 = !DILocation(line: 1171, column: 36, scope: !5124)
!5213 = !DILocation(line: 1171, column: 19, scope: !5124)
!5214 = !DILocation(line: 1172, column: 22, scope: !5124)
!5215 = !DILocation(line: 1172, column: 36, scope: !5124)
!5216 = !DILocation(line: 1172, column: 19, scope: !5124)
!5217 = !DILocation(line: 1173, column: 19, scope: !5124)
!5218 = !DILocation(line: 1175, column: 28, scope: !5124)
!5219 = !DILocation(line: 1175, column: 42, scope: !5124)
!5220 = !DILocation(line: 1175, column: 49, scope: !5124)
!5221 = !DILocation(line: 1175, column: 24, scope: !5124)
!5222 = !DILocation(line: 1176, column: 27, scope: !5124)
!5223 = !DILocation(line: 1176, column: 34, scope: !5124)
!5224 = !DILocation(line: 1176, column: 24, scope: !5124)
!5225 = !DILocation(line: 1178, column: 65, scope: !5124)
!5226 = !DILocation(line: 1178, column: 54, scope: !5124)
!5227 = !DILocation(line: 60, column: 9, scope: !5128, inlinedAt: !5133)
!5228 = !DILocation(line: 60, column: 10, scope: !5128, inlinedAt: !5133)
!5229 = !DILocation(line: 60, column: 18, scope: !5128, inlinedAt: !5133)
!5230 = !DILocation(line: 60, column: 19, scope: !5128, inlinedAt: !5133)
!5231 = !DILocation(line: 60, column: 15, scope: !5128, inlinedAt: !5133)
!5232 = !DILocation(line: 60, column: 8, scope: !5128, inlinedAt: !5133)
!5233 = !DILocation(line: 60, column: 6, scope: !5128, inlinedAt: !5133)
!5234 = !DILocation(line: 61, column: 12, scope: !5128, inlinedAt: !5133)
!5235 = !DILocation(line: 1178, column: 32, scope: !5124)
!5236 = !DILocation(line: 1178, column: 48, scope: !5124)
!5237 = !DILocation(line: 1178, column: 51, scope: !5124)
!5238 = !DILocation(line: 1179, column: 67, scope: !5124)
!5239 = !DILocation(line: 1179, column: 72, scope: !5124)
!5240 = !DILocation(line: 1179, column: 56, scope: !5124)
!5241 = !DILocation(line: 60, column: 9, scope: !5128, inlinedAt: !5135)
!5242 = !DILocation(line: 60, column: 10, scope: !5128, inlinedAt: !5135)
!5243 = !DILocation(line: 60, column: 18, scope: !5128, inlinedAt: !5135)
!5244 = !DILocation(line: 60, column: 19, scope: !5128, inlinedAt: !5135)
!5245 = !DILocation(line: 60, column: 15, scope: !5128, inlinedAt: !5135)
!5246 = !DILocation(line: 60, column: 8, scope: !5128, inlinedAt: !5135)
!5247 = !DILocation(line: 60, column: 6, scope: !5128, inlinedAt: !5135)
!5248 = !DILocation(line: 61, column: 12, scope: !5128, inlinedAt: !5135)
!5249 = !DILocation(line: 1179, column: 32, scope: !5124)
!5250 = !DILocation(line: 1179, column: 44, scope: !5124)
!5251 = !DILocation(line: 1179, column: 50, scope: !5124)
!5252 = !DILocation(line: 1179, column: 53, scope: !5124)
!5253 = !DILocation(line: 1180, column: 1, scope: !5124)
!5254 = distinct !DISubprogram(name: "init_put_bits", scope: !4805, file: !4805, line: 48, type: !5255, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!5255 = !DISubroutineType(types: !5256)
!5256 = !{null, !5257, !1121, !939}
!5257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4804, size: 64, align: 64)
!5258 = !DILocalVariable(name: "s", arg: 1, scope: !5254, file: !4805, line: 48, type: !5257)
!5259 = !DILocation(line: 48, column: 49, scope: !5254)
!5260 = !DILocalVariable(name: "buffer", arg: 2, scope: !5254, file: !4805, line: 48, type: !1121)
!5261 = !DILocation(line: 48, column: 61, scope: !5254)
!5262 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !5254, file: !4805, line: 49, type: !939)
!5263 = !DILocation(line: 49, column: 38, scope: !5254)
!5264 = !DILocation(line: 51, column: 9, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5254, file: !4805, line: 51, column: 9)
!5266 = !DILocation(line: 51, column: 21, scope: !5265)
!5267 = !DILocation(line: 51, column: 9, scope: !5254)
!5268 = !DILocation(line: 52, column: 21, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5265, file: !4805, line: 51, column: 26)
!5270 = !DILocation(line: 53, column: 16, scope: !5269)
!5271 = !DILocation(line: 54, column: 5, scope: !5269)
!5272 = !DILocation(line: 56, column: 27, scope: !5254)
!5273 = !DILocation(line: 56, column: 25, scope: !5254)
!5274 = !DILocation(line: 56, column: 5, scope: !5254)
!5275 = !DILocation(line: 56, column: 8, scope: !5254)
!5276 = !DILocation(line: 56, column: 21, scope: !5254)
!5277 = !DILocation(line: 57, column: 14, scope: !5254)
!5278 = !DILocation(line: 57, column: 5, scope: !5254)
!5279 = !DILocation(line: 57, column: 8, scope: !5254)
!5280 = !DILocation(line: 57, column: 12, scope: !5254)
!5281 = !DILocation(line: 58, column: 18, scope: !5254)
!5282 = !DILocation(line: 58, column: 21, scope: !5254)
!5283 = !DILocation(line: 58, column: 27, scope: !5254)
!5284 = !DILocation(line: 58, column: 25, scope: !5254)
!5285 = !DILocation(line: 58, column: 5, scope: !5254)
!5286 = !DILocation(line: 58, column: 8, scope: !5254)
!5287 = !DILocation(line: 58, column: 16, scope: !5254)
!5288 = !DILocation(line: 59, column: 18, scope: !5254)
!5289 = !DILocation(line: 59, column: 21, scope: !5254)
!5290 = !DILocation(line: 59, column: 5, scope: !5254)
!5291 = !DILocation(line: 59, column: 8, scope: !5254)
!5292 = !DILocation(line: 59, column: 16, scope: !5254)
!5293 = !DILocation(line: 60, column: 5, scope: !5254)
!5294 = !DILocation(line: 60, column: 8, scope: !5254)
!5295 = !DILocation(line: 60, column: 17, scope: !5254)
!5296 = !DILocation(line: 61, column: 5, scope: !5254)
!5297 = !DILocation(line: 61, column: 8, scope: !5254)
!5298 = !DILocation(line: 61, column: 16, scope: !5254)
!5299 = !DILocation(line: 62, column: 1, scope: !5254)
!5300 = distinct !DISubprogram(name: "put_bits", scope: !4805, file: !4805, line: 164, type: !5301, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!5301 = !DISubroutineType(types: !5302)
!5302 = !{null, !5257, !939, !993}
!5303 = !DILocalVariable(name: "x", arg: 1, scope: !5304, file: !5129, line: 66, type: !992)
!5304 = distinct !DISubprogram(name: "av_bswap32", scope: !5129, file: !5129, line: 66, type: !5305, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!5305 = !DISubroutineType(types: !5306)
!5306 = !{!992, !992}
!5307 = !DILocation(line: 66, column: 98, scope: !5304, inlinedAt: !5308)
!5308 = distinct !DILocation(line: 197, column: 60, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5310, file: !4805, line: 196, column: 42)
!5310 = distinct !DILexicalBlock(scope: !5311, file: !4805, line: 196, column: 13)
!5311 = distinct !DILexicalBlock(scope: !5312, file: !4805, line: 193, column: 12)
!5312 = distinct !DILexicalBlock(scope: !5300, file: !4805, line: 190, column: 9)
!5313 = !DILocalVariable(name: "s", arg: 1, scope: !5300, file: !4805, line: 164, type: !5257)
!5314 = !DILocation(line: 164, column: 44, scope: !5300)
!5315 = !DILocalVariable(name: "n", arg: 2, scope: !5300, file: !4805, line: 164, type: !939)
!5316 = !DILocation(line: 164, column: 51, scope: !5300)
!5317 = !DILocalVariable(name: "value", arg: 3, scope: !5300, file: !4805, line: 164, type: !993)
!5318 = !DILocation(line: 164, column: 67, scope: !5300)
!5319 = !DILocalVariable(name: "bit_buf", scope: !5300, file: !4805, line: 166, type: !993)
!5320 = !DILocation(line: 166, column: 18, scope: !5300)
!5321 = !DILocalVariable(name: "bit_left", scope: !5300, file: !4805, line: 167, type: !939)
!5322 = !DILocation(line: 167, column: 9, scope: !5300)
!5323 = !DILocation(line: 171, column: 15, scope: !5300)
!5324 = !DILocation(line: 171, column: 18, scope: !5300)
!5325 = !DILocation(line: 171, column: 13, scope: !5300)
!5326 = !DILocation(line: 172, column: 16, scope: !5300)
!5327 = !DILocation(line: 172, column: 19, scope: !5300)
!5328 = !DILocation(line: 172, column: 14, scope: !5300)
!5329 = !DILocation(line: 190, column: 9, scope: !5312)
!5330 = !DILocation(line: 190, column: 13, scope: !5312)
!5331 = !DILocation(line: 190, column: 11, scope: !5312)
!5332 = !DILocation(line: 190, column: 9, scope: !5300)
!5333 = !DILocation(line: 191, column: 20, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5312, file: !4805, line: 190, column: 23)
!5335 = !DILocation(line: 191, column: 31, scope: !5334)
!5336 = !DILocation(line: 191, column: 28, scope: !5334)
!5337 = !DILocation(line: 191, column: 36, scope: !5334)
!5338 = !DILocation(line: 191, column: 34, scope: !5334)
!5339 = !DILocation(line: 191, column: 17, scope: !5334)
!5340 = !DILocation(line: 192, column: 21, scope: !5334)
!5341 = !DILocation(line: 192, column: 18, scope: !5334)
!5342 = !DILocation(line: 193, column: 5, scope: !5334)
!5343 = !DILocation(line: 194, column: 21, scope: !5311)
!5344 = !DILocation(line: 194, column: 17, scope: !5311)
!5345 = !DILocation(line: 195, column: 20, scope: !5311)
!5346 = !DILocation(line: 195, column: 30, scope: !5311)
!5347 = !DILocation(line: 195, column: 34, scope: !5311)
!5348 = !DILocation(line: 195, column: 32, scope: !5311)
!5349 = !DILocation(line: 195, column: 26, scope: !5311)
!5350 = !DILocation(line: 195, column: 17, scope: !5311)
!5351 = !DILocation(line: 196, column: 17, scope: !5310)
!5352 = !DILocation(line: 196, column: 20, scope: !5310)
!5353 = !DILocation(line: 196, column: 30, scope: !5310)
!5354 = !DILocation(line: 196, column: 33, scope: !5310)
!5355 = !DILocation(line: 196, column: 28, scope: !5310)
!5356 = !DILocation(line: 196, column: 15, scope: !5310)
!5357 = !DILocation(line: 196, column: 13, scope: !5311)
!5358 = !DILocation(line: 197, column: 71, scope: !5309)
!5359 = !DILocation(line: 197, column: 60, scope: !5309)
!5360 = !DILocation(line: 68, column: 16, scope: !5304, inlinedAt: !5308)
!5361 = !DILocation(line: 68, column: 19, scope: !5304, inlinedAt: !5308)
!5362 = !DILocation(line: 68, column: 24, scope: !5304, inlinedAt: !5308)
!5363 = !DILocation(line: 68, column: 38, scope: !5304, inlinedAt: !5308)
!5364 = !DILocation(line: 68, column: 41, scope: !5304, inlinedAt: !5308)
!5365 = !DILocation(line: 68, column: 46, scope: !5304, inlinedAt: !5308)
!5366 = !DILocation(line: 68, column: 34, scope: !5304, inlinedAt: !5308)
!5367 = !DILocation(line: 68, column: 57, scope: !5304, inlinedAt: !5308)
!5368 = !DILocation(line: 68, column: 69, scope: !5304, inlinedAt: !5308)
!5369 = !DILocation(line: 68, column: 72, scope: !5304, inlinedAt: !5308)
!5370 = !DILocation(line: 68, column: 79, scope: !5304, inlinedAt: !5308)
!5371 = !DILocation(line: 68, column: 84, scope: !5304, inlinedAt: !5308)
!5372 = !DILocation(line: 68, column: 99, scope: !5304, inlinedAt: !5308)
!5373 = !DILocation(line: 68, column: 102, scope: !5304, inlinedAt: !5308)
!5374 = !DILocation(line: 68, column: 109, scope: !5304, inlinedAt: !5308)
!5375 = !DILocation(line: 68, column: 114, scope: !5304, inlinedAt: !5308)
!5376 = !DILocation(line: 68, column: 94, scope: !5304, inlinedAt: !5308)
!5377 = !DILocation(line: 68, column: 63, scope: !5304, inlinedAt: !5308)
!5378 = !DILocation(line: 197, column: 40, scope: !5309)
!5379 = !DILocation(line: 197, column: 43, scope: !5309)
!5380 = !DILocation(line: 197, column: 54, scope: !5309)
!5381 = !DILocation(line: 197, column: 57, scope: !5309)
!5382 = !DILocation(line: 198, column: 13, scope: !5309)
!5383 = !DILocation(line: 198, column: 16, scope: !5309)
!5384 = !DILocation(line: 198, column: 24, scope: !5309)
!5385 = !DILocation(line: 199, column: 9, scope: !5309)
!5386 = !DILocation(line: 200, column: 13, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5310, file: !4805, line: 199, column: 16)
!5388 = !DILocation(line: 203, column: 26, scope: !5311)
!5389 = !DILocation(line: 203, column: 24, scope: !5311)
!5390 = !DILocation(line: 203, column: 18, scope: !5311)
!5391 = !DILocation(line: 204, column: 19, scope: !5311)
!5392 = !DILocation(line: 204, column: 17, scope: !5311)
!5393 = !DILocation(line: 208, column: 18, scope: !5300)
!5394 = !DILocation(line: 208, column: 5, scope: !5300)
!5395 = !DILocation(line: 208, column: 8, scope: !5300)
!5396 = !DILocation(line: 208, column: 16, scope: !5300)
!5397 = !DILocation(line: 209, column: 19, scope: !5300)
!5398 = !DILocation(line: 209, column: 5, scope: !5300)
!5399 = !DILocation(line: 209, column: 8, scope: !5300)
!5400 = !DILocation(line: 209, column: 17, scope: !5300)
!5401 = !DILocation(line: 210, column: 1, scope: !5300)
!5402 = distinct !DISubprogram(name: "flush_put_bits", scope: !4805, file: !4805, line: 101, type: !5403, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!5403 = !DISubroutineType(types: !5404)
!5404 = !{null, !5257}
!5405 = !DILocalVariable(name: "s", arg: 1, scope: !5402, file: !4805, line: 101, type: !5257)
!5406 = !DILocation(line: 101, column: 50, scope: !5402)
!5407 = !DILocation(line: 104, column: 9, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5402, file: !4805, line: 104, column: 9)
!5409 = !DILocation(line: 104, column: 12, scope: !5408)
!5410 = !DILocation(line: 104, column: 21, scope: !5408)
!5411 = !DILocation(line: 104, column: 9, scope: !5402)
!5412 = !DILocation(line: 105, column: 24, scope: !5408)
!5413 = !DILocation(line: 105, column: 27, scope: !5408)
!5414 = !DILocation(line: 105, column: 9, scope: !5408)
!5415 = !DILocation(line: 105, column: 12, scope: !5408)
!5416 = !DILocation(line: 105, column: 20, scope: !5408)
!5417 = !DILocation(line: 107, column: 5, scope: !5402)
!5418 = !DILocation(line: 107, column: 12, scope: !5419)
!5419 = !DILexicalBlockFile(scope: !5402, file: !4805, discriminator: 1)
!5420 = !DILocation(line: 107, column: 15, scope: !5419)
!5421 = !DILocation(line: 107, column: 24, scope: !5419)
!5422 = !DILocation(line: 107, column: 5, scope: !5419)
!5423 = !DILocation(line: 108, column: 9, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5402, file: !4805, line: 107, column: 30)
!5425 = distinct !{!5425, !5423}
!5426 = !DILocation(line: 108, column: 20, scope: !5427)
!5427 = !DILexicalBlockFile(scope: !5428, file: !4805, discriminator: 1)
!5428 = distinct !DILexicalBlock(scope: !5429, file: !4805, line: 108, column: 18)
!5429 = distinct !DILexicalBlock(scope: !5424, file: !4805, line: 108, column: 12)
!5430 = !DILocation(line: 108, column: 23, scope: !5427)
!5431 = !DILocation(line: 108, column: 33, scope: !5427)
!5432 = !DILocation(line: 108, column: 36, scope: !5427)
!5433 = !DILocation(line: 108, column: 31, scope: !5427)
!5434 = !DILocation(line: 108, column: 18, scope: !5427)
!5435 = !DILocation(line: 108, column: 48, scope: !5436)
!5436 = !DILexicalBlockFile(scope: !5437, file: !4805, discriminator: 2)
!5437 = distinct !DILexicalBlock(scope: !5428, file: !4805, line: 108, column: 46)
!5438 = !DILocation(line: 108, column: 105, scope: !5439)
!5439 = !DILexicalBlockFile(scope: !5436, file: !4805, discriminator: 4)
!5440 = !DILocation(line: 108, column: 105, scope: !5436)
!5441 = !DILocation(line: 108, column: 116, scope: !5442)
!5442 = !DILexicalBlockFile(scope: !5429, file: !4805, discriminator: 3)
!5443 = !DILocation(line: 113, column: 25, scope: !5424)
!5444 = !DILocation(line: 113, column: 28, scope: !5424)
!5445 = !DILocation(line: 113, column: 36, scope: !5424)
!5446 = !DILocation(line: 113, column: 10, scope: !5424)
!5447 = !DILocation(line: 113, column: 13, scope: !5424)
!5448 = !DILocation(line: 113, column: 20, scope: !5424)
!5449 = !DILocation(line: 113, column: 23, scope: !5424)
!5450 = !DILocation(line: 114, column: 9, scope: !5424)
!5451 = !DILocation(line: 114, column: 12, scope: !5424)
!5452 = !DILocation(line: 114, column: 20, scope: !5424)
!5453 = !DILocation(line: 116, column: 9, scope: !5424)
!5454 = !DILocation(line: 116, column: 12, scope: !5424)
!5455 = !DILocation(line: 116, column: 21, scope: !5424)
!5456 = !DILocation(line: 107, column: 5, scope: !5457)
!5457 = !DILexicalBlockFile(scope: !5402, file: !4805, discriminator: 2)
!5458 = distinct !{!5458, !5417}
!5459 = !DILocation(line: 118, column: 5, scope: !5402)
!5460 = !DILocation(line: 118, column: 8, scope: !5402)
!5461 = !DILocation(line: 118, column: 17, scope: !5402)
!5462 = !DILocation(line: 119, column: 5, scope: !5402)
!5463 = !DILocation(line: 119, column: 8, scope: !5402)
!5464 = !DILocation(line: 119, column: 16, scope: !5402)
!5465 = !DILocation(line: 120, column: 1, scope: !5402)
!5466 = distinct !DISubprogram(name: "write_restart_header", scope: !897, file: !897, line: 807, type: !5467, isLocal: true, isDefinition: true, scopeLine: 808, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!5467 = !DISubroutineType(types: !5468)
!5468 = !{null, !1749, !5257}
!5469 = !DILocalVariable(name: "ctx", arg: 1, scope: !5466, file: !897, line: 807, type: !1749)
!5470 = !DILocation(line: 807, column: 52, scope: !5466)
!5471 = !DILocalVariable(name: "pb", arg: 2, scope: !5466, file: !897, line: 807, type: !5257)
!5472 = !DILocation(line: 807, column: 72, scope: !5466)
!5473 = !DILocalVariable(name: "rh", scope: !5466, file: !897, line: 809, type: !1835)
!5474 = !DILocation(line: 809, column: 20, scope: !5466)
!5475 = !DILocation(line: 809, column: 25, scope: !5466)
!5476 = !DILocation(line: 809, column: 30, scope: !5466)
!5477 = !DILocalVariable(name: "lossless_check", scope: !5466, file: !897, line: 810, type: !938)
!5478 = !DILocation(line: 810, column: 13, scope: !5466)
!5479 = !DILocation(line: 810, column: 42, scope: !5466)
!5480 = !DILocation(line: 810, column: 46, scope: !5466)
!5481 = !DILocation(line: 810, column: 30, scope: !5466)
!5482 = !DILocalVariable(name: "start_count", scope: !5466, file: !897, line: 811, type: !993)
!5483 = !DILocation(line: 811, column: 18, scope: !5466)
!5484 = !DILocation(line: 811, column: 47, scope: !5466)
!5485 = !DILocation(line: 811, column: 32, scope: !5466)
!5486 = !DILocalVariable(name: "tmpb", scope: !5466, file: !897, line: 812, type: !4804)
!5487 = !DILocation(line: 812, column: 19, scope: !5466)
!5488 = !DILocalVariable(name: "checksum", scope: !5466, file: !897, line: 813, type: !932)
!5489 = !DILocation(line: 813, column: 13, scope: !5466)
!5490 = !DILocalVariable(name: "ch", scope: !5466, file: !897, line: 814, type: !993)
!5491 = !DILocation(line: 814, column: 18, scope: !5466)
!5492 = !DILocation(line: 816, column: 14, scope: !5466)
!5493 = !DILocation(line: 816, column: 5, scope: !5466)
!5494 = !DILocation(line: 817, column: 14, scope: !5466)
!5495 = !DILocation(line: 817, column: 22, scope: !5466)
!5496 = !DILocation(line: 817, column: 27, scope: !5466)
!5497 = !DILocation(line: 817, column: 5, scope: !5466)
!5498 = !DILocation(line: 818, column: 14, scope: !5466)
!5499 = !DILocation(line: 818, column: 21, scope: !5466)
!5500 = !DILocation(line: 818, column: 25, scope: !5466)
!5501 = !DILocation(line: 818, column: 5, scope: !5466)
!5502 = !DILocation(line: 819, column: 14, scope: !5466)
!5503 = !DILocation(line: 819, column: 21, scope: !5466)
!5504 = !DILocation(line: 819, column: 25, scope: !5466)
!5505 = !DILocation(line: 819, column: 5, scope: !5466)
!5506 = !DILocation(line: 820, column: 14, scope: !5466)
!5507 = !DILocation(line: 820, column: 21, scope: !5466)
!5508 = !DILocation(line: 820, column: 25, scope: !5466)
!5509 = !DILocation(line: 820, column: 5, scope: !5466)
!5510 = !DILocation(line: 821, column: 14, scope: !5466)
!5511 = !DILocation(line: 821, column: 21, scope: !5466)
!5512 = !DILocation(line: 821, column: 25, scope: !5466)
!5513 = !DILocation(line: 821, column: 5, scope: !5466)
!5514 = !DILocation(line: 822, column: 14, scope: !5466)
!5515 = !DILocation(line: 822, column: 22, scope: !5466)
!5516 = !DILocation(line: 822, column: 26, scope: !5466)
!5517 = !DILocation(line: 822, column: 5, scope: !5466)
!5518 = !DILocation(line: 823, column: 14, scope: !5466)
!5519 = !DILocation(line: 823, column: 5, scope: !5466)
!5520 = !DILocation(line: 824, column: 14, scope: !5466)
!5521 = !DILocation(line: 824, column: 21, scope: !5466)
!5522 = !DILocation(line: 824, column: 25, scope: !5466)
!5523 = !DILocation(line: 824, column: 5, scope: !5466)
!5524 = !DILocation(line: 825, column: 14, scope: !5466)
!5525 = !DILocation(line: 825, column: 21, scope: !5466)
!5526 = !DILocation(line: 825, column: 25, scope: !5466)
!5527 = !DILocation(line: 825, column: 5, scope: !5466)
!5528 = !DILocation(line: 826, column: 14, scope: !5466)
!5529 = !DILocation(line: 826, column: 21, scope: !5466)
!5530 = !DILocation(line: 826, column: 25, scope: !5466)
!5531 = !DILocation(line: 826, column: 5, scope: !5466)
!5532 = !DILocation(line: 827, column: 14, scope: !5466)
!5533 = !DILocation(line: 827, column: 21, scope: !5466)
!5534 = !DILocation(line: 827, column: 25, scope: !5466)
!5535 = !DILocation(line: 827, column: 5, scope: !5466)
!5536 = !DILocation(line: 828, column: 14, scope: !5466)
!5537 = !DILocation(line: 828, column: 21, scope: !5466)
!5538 = !DILocation(line: 828, column: 5, scope: !5466)
!5539 = !DILocation(line: 829, column: 14, scope: !5466)
!5540 = !DILocation(line: 829, column: 5, scope: !5466)
!5541 = !DILocation(line: 831, column: 13, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5466, file: !897, line: 831, column: 5)
!5543 = !DILocation(line: 831, column: 10, scope: !5542)
!5544 = !DILocation(line: 831, column: 18, scope: !5545)
!5545 = !DILexicalBlockFile(scope: !5546, file: !897, discriminator: 1)
!5546 = distinct !DILexicalBlock(scope: !5542, file: !897, line: 831, column: 5)
!5547 = !DILocation(line: 831, column: 24, scope: !5545)
!5548 = !DILocation(line: 831, column: 28, scope: !5545)
!5549 = !DILocation(line: 831, column: 21, scope: !5545)
!5550 = !DILocation(line: 831, column: 5, scope: !5545)
!5551 = !DILocation(line: 832, column: 18, scope: !5546)
!5552 = !DILocation(line: 832, column: 25, scope: !5546)
!5553 = !DILocation(line: 832, column: 9, scope: !5546)
!5554 = !DILocation(line: 831, column: 50, scope: !5555)
!5555 = !DILexicalBlockFile(scope: !5546, file: !897, discriminator: 2)
!5556 = !DILocation(line: 831, column: 5, scope: !5555)
!5557 = distinct !{!5557, !5558}
!5558 = !DILocation(line: 831, column: 5, scope: !5466)
!5559 = !DILocation(line: 835, column: 13, scope: !5466)
!5560 = !DILocation(line: 835, column: 12, scope: !5466)
!5561 = !DILocation(line: 836, column: 5, scope: !5466)
!5562 = !DILocation(line: 838, column: 40, scope: !5466)
!5563 = !DILocation(line: 838, column: 44, scope: !5466)
!5564 = !DILocation(line: 838, column: 64, scope: !5466)
!5565 = !DILocation(line: 838, column: 49, scope: !5466)
!5566 = !DILocation(line: 838, column: 70, scope: !5466)
!5567 = !DILocation(line: 838, column: 68, scope: !5466)
!5568 = !DILocation(line: 838, column: 16, scope: !5569)
!5569 = !DILexicalBlockFile(scope: !5466, file: !897, discriminator: 1)
!5570 = !DILocation(line: 838, column: 14, scope: !5466)
!5571 = !DILocation(line: 840, column: 14, scope: !5466)
!5572 = !DILocation(line: 840, column: 21, scope: !5466)
!5573 = !DILocation(line: 840, column: 5, scope: !5466)
!5574 = !DILocation(line: 841, column: 1, scope: !5466)
!5575 = distinct !DISubprogram(name: "write_decoding_params", scope: !897, file: !897, line: 903, type: !5576, isLocal: true, isDefinition: true, scopeLine: 905, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!5576 = !DISubroutineType(types: !5577)
!5577 = !{null, !1749, !5257, !939}
!5578 = !DILocalVariable(name: "ctx", arg: 1, scope: !5575, file: !897, line: 903, type: !1749)
!5579 = !DILocation(line: 903, column: 53, scope: !5575)
!5580 = !DILocalVariable(name: "pb", arg: 2, scope: !5575, file: !897, line: 903, type: !5257)
!5581 = !DILocation(line: 903, column: 73, scope: !5575)
!5582 = !DILocalVariable(name: "params_changed", arg: 3, scope: !5575, file: !897, line: 904, type: !939)
!5583 = !DILocation(line: 904, column: 39, scope: !5575)
!5584 = !DILocalVariable(name: "dp", scope: !5575, file: !897, line: 906, type: !955)
!5585 = !DILocation(line: 906, column: 21, scope: !5575)
!5586 = !DILocation(line: 906, column: 26, scope: !5575)
!5587 = !DILocation(line: 906, column: 31, scope: !5575)
!5588 = !DILocalVariable(name: "rh", scope: !5575, file: !897, line: 907, type: !1835)
!5589 = !DILocation(line: 907, column: 20, scope: !5575)
!5590 = !DILocation(line: 907, column: 25, scope: !5575)
!5591 = !DILocation(line: 907, column: 30, scope: !5575)
!5592 = !DILocalVariable(name: "mp", scope: !5575, file: !897, line: 908, type: !3945)
!5593 = !DILocation(line: 908, column: 19, scope: !5575)
!5594 = !DILocation(line: 908, column: 25, scope: !5575)
!5595 = !DILocation(line: 908, column: 29, scope: !5575)
!5596 = !DILocalVariable(name: "ch", scope: !5575, file: !897, line: 909, type: !993)
!5597 = !DILocation(line: 909, column: 18, scope: !5575)
!5598 = !DILocation(line: 911, column: 9, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5575, file: !897, line: 911, column: 9)
!5600 = !DILocation(line: 911, column: 13, scope: !5599)
!5601 = !DILocation(line: 911, column: 34, scope: !5599)
!5602 = !DILocation(line: 911, column: 52, scope: !5599)
!5603 = !DILocation(line: 912, column: 9, scope: !5599)
!5604 = !DILocation(line: 912, column: 24, scope: !5599)
!5605 = !DILocation(line: 911, column: 9, scope: !5606)
!5606 = !DILexicalBlockFile(scope: !5575, file: !897, discriminator: 1)
!5607 = !DILocation(line: 913, column: 18, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5599, file: !897, line: 912, column: 48)
!5609 = !DILocation(line: 913, column: 9, scope: !5608)
!5610 = !DILocation(line: 914, column: 18, scope: !5608)
!5611 = !DILocation(line: 914, column: 25, scope: !5608)
!5612 = !DILocation(line: 914, column: 29, scope: !5608)
!5613 = !DILocation(line: 914, column: 9, scope: !5608)
!5614 = !DILocation(line: 915, column: 5, scope: !5608)
!5615 = !DILocation(line: 916, column: 18, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5599, file: !897, line: 915, column: 12)
!5617 = !DILocation(line: 916, column: 9, scope: !5616)
!5618 = !DILocation(line: 919, column: 9, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5575, file: !897, line: 919, column: 9)
!5620 = !DILocation(line: 919, column: 13, scope: !5619)
!5621 = !DILocation(line: 919, column: 34, scope: !5619)
!5622 = !DILocation(line: 919, column: 9, scope: !5575)
!5623 = !DILocation(line: 920, column: 13, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5625, file: !897, line: 920, column: 13)
!5625 = distinct !DILexicalBlock(scope: !5619, file: !897, line: 919, column: 53)
!5626 = !DILocation(line: 920, column: 28, scope: !5624)
!5627 = !DILocation(line: 920, column: 13, scope: !5625)
!5628 = !DILocation(line: 921, column: 22, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5624, file: !897, line: 920, column: 47)
!5630 = !DILocation(line: 921, column: 13, scope: !5629)
!5631 = !DILocation(line: 922, column: 22, scope: !5629)
!5632 = !DILocation(line: 922, column: 29, scope: !5629)
!5633 = !DILocation(line: 922, column: 33, scope: !5629)
!5634 = !DILocation(line: 922, column: 13, scope: !5629)
!5635 = !DILocation(line: 923, column: 9, scope: !5629)
!5636 = !DILocation(line: 924, column: 22, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5624, file: !897, line: 923, column: 16)
!5638 = !DILocation(line: 924, column: 13, scope: !5637)
!5639 = !DILocation(line: 926, column: 5, scope: !5625)
!5640 = !DILocation(line: 928, column: 9, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5575, file: !897, line: 928, column: 9)
!5642 = !DILocation(line: 928, column: 13, scope: !5641)
!5643 = !DILocation(line: 928, column: 34, scope: !5641)
!5644 = !DILocation(line: 928, column: 9, scope: !5575)
!5645 = !DILocation(line: 929, column: 13, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !897, line: 929, column: 13)
!5647 = distinct !DILexicalBlock(scope: !5641, file: !897, line: 928, column: 50)
!5648 = !DILocation(line: 929, column: 28, scope: !5646)
!5649 = !DILocation(line: 929, column: 13, scope: !5647)
!5650 = !DILocation(line: 930, column: 22, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5646, file: !897, line: 929, column: 44)
!5652 = !DILocation(line: 930, column: 13, scope: !5651)
!5653 = !DILocation(line: 931, column: 33, scope: !5651)
!5654 = !DILocation(line: 931, column: 38, scope: !5651)
!5655 = !DILocation(line: 931, column: 13, scope: !5651)
!5656 = !DILocation(line: 932, column: 9, scope: !5651)
!5657 = !DILocation(line: 933, column: 22, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5646, file: !897, line: 932, column: 16)
!5659 = !DILocation(line: 933, column: 13, scope: !5658)
!5660 = !DILocation(line: 935, column: 5, scope: !5647)
!5661 = !DILocation(line: 937, column: 9, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5575, file: !897, line: 937, column: 9)
!5663 = !DILocation(line: 937, column: 13, scope: !5662)
!5664 = !DILocation(line: 937, column: 34, scope: !5662)
!5665 = !DILocation(line: 937, column: 9, scope: !5575)
!5666 = !DILocation(line: 938, column: 13, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5668, file: !897, line: 938, column: 13)
!5668 = distinct !DILexicalBlock(scope: !5662, file: !897, line: 937, column: 52)
!5669 = !DILocation(line: 938, column: 28, scope: !5667)
!5670 = !DILocation(line: 938, column: 13, scope: !5668)
!5671 = !DILocation(line: 939, column: 22, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5667, file: !897, line: 938, column: 46)
!5673 = !DILocation(line: 939, column: 13, scope: !5672)
!5674 = !DILocation(line: 940, column: 21, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5672, file: !897, line: 940, column: 13)
!5676 = !DILocation(line: 940, column: 18, scope: !5675)
!5677 = !DILocation(line: 940, column: 26, scope: !5678)
!5678 = !DILexicalBlockFile(scope: !5679, file: !897, discriminator: 1)
!5679 = distinct !DILexicalBlock(scope: !5675, file: !897, line: 940, column: 13)
!5680 = !DILocation(line: 940, column: 32, scope: !5678)
!5681 = !DILocation(line: 940, column: 36, scope: !5678)
!5682 = !DILocation(line: 940, column: 29, scope: !5678)
!5683 = !DILocation(line: 940, column: 13, scope: !5678)
!5684 = !DILocation(line: 941, column: 27, scope: !5679)
!5685 = !DILocation(line: 941, column: 44, scope: !5679)
!5686 = !DILocation(line: 941, column: 34, scope: !5679)
!5687 = !DILocation(line: 941, column: 38, scope: !5679)
!5688 = !DILocation(line: 941, column: 17, scope: !5679)
!5689 = !DILocation(line: 940, column: 58, scope: !5690)
!5690 = !DILexicalBlockFile(scope: !5679, file: !897, discriminator: 2)
!5691 = !DILocation(line: 940, column: 13, scope: !5690)
!5692 = distinct !{!5692, !5693}
!5693 = !DILocation(line: 940, column: 13, scope: !5672)
!5694 = !DILocation(line: 942, column: 9, scope: !5672)
!5695 = !DILocation(line: 943, column: 22, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5667, file: !897, line: 942, column: 16)
!5697 = !DILocation(line: 943, column: 13, scope: !5696)
!5698 = !DILocation(line: 945, column: 5, scope: !5668)
!5699 = !DILocation(line: 947, column: 9, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5575, file: !897, line: 947, column: 9)
!5701 = !DILocation(line: 947, column: 13, scope: !5700)
!5702 = !DILocation(line: 947, column: 34, scope: !5700)
!5703 = !DILocation(line: 947, column: 9, scope: !5575)
!5704 = !DILocation(line: 948, column: 13, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5706, file: !897, line: 948, column: 13)
!5706 = distinct !DILexicalBlock(scope: !5700, file: !897, line: 947, column: 53)
!5707 = !DILocation(line: 948, column: 28, scope: !5705)
!5708 = !DILocation(line: 948, column: 13, scope: !5706)
!5709 = !DILocation(line: 949, column: 22, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5705, file: !897, line: 948, column: 47)
!5711 = !DILocation(line: 949, column: 13, scope: !5710)
!5712 = !DILocation(line: 950, column: 21, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5710, file: !897, line: 950, column: 13)
!5714 = !DILocation(line: 950, column: 18, scope: !5713)
!5715 = !DILocation(line: 950, column: 26, scope: !5716)
!5716 = !DILexicalBlockFile(scope: !5717, file: !897, discriminator: 1)
!5717 = distinct !DILexicalBlock(scope: !5713, file: !897, line: 950, column: 13)
!5718 = !DILocation(line: 950, column: 32, scope: !5716)
!5719 = !DILocation(line: 950, column: 36, scope: !5716)
!5720 = !DILocation(line: 950, column: 29, scope: !5716)
!5721 = !DILocation(line: 950, column: 13, scope: !5716)
!5722 = !DILocation(line: 951, column: 26, scope: !5717)
!5723 = !DILocation(line: 951, column: 53, scope: !5717)
!5724 = !DILocation(line: 951, column: 33, scope: !5717)
!5725 = !DILocation(line: 951, column: 37, scope: !5717)
!5726 = !DILocation(line: 951, column: 17, scope: !5717)
!5727 = !DILocation(line: 950, column: 51, scope: !5728)
!5728 = !DILexicalBlockFile(scope: !5717, file: !897, discriminator: 2)
!5729 = !DILocation(line: 950, column: 13, scope: !5728)
!5730 = distinct !{!5730, !5731}
!5731 = !DILocation(line: 950, column: 13, scope: !5710)
!5732 = !DILocation(line: 952, column: 9, scope: !5710)
!5733 = !DILocation(line: 953, column: 22, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5705, file: !897, line: 952, column: 16)
!5735 = !DILocation(line: 953, column: 13, scope: !5734)
!5736 = !DILocation(line: 955, column: 5, scope: !5706)
!5737 = !DILocation(line: 957, column: 15, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5575, file: !897, line: 957, column: 5)
!5739 = !DILocation(line: 957, column: 19, scope: !5738)
!5740 = !DILocation(line: 957, column: 13, scope: !5738)
!5741 = !DILocation(line: 957, column: 10, scope: !5738)
!5742 = !DILocation(line: 957, column: 32, scope: !5743)
!5743 = !DILexicalBlockFile(scope: !5744, file: !897, discriminator: 1)
!5744 = distinct !DILexicalBlock(scope: !5738, file: !897, line: 957, column: 5)
!5745 = !DILocation(line: 957, column: 38, scope: !5743)
!5746 = !DILocation(line: 957, column: 42, scope: !5743)
!5747 = !DILocation(line: 957, column: 35, scope: !5743)
!5748 = !DILocation(line: 957, column: 5, scope: !5743)
!5749 = !DILocalVariable(name: "cp", scope: !5750, file: !897, line: 958, type: !921)
!5750 = distinct !DILexicalBlock(scope: !5744, file: !897, line: 957, column: 61)
!5751 = !DILocation(line: 958, column: 24, scope: !5750)
!5752 = !DILocation(line: 958, column: 54, scope: !5750)
!5753 = !DILocation(line: 958, column: 30, scope: !5750)
!5754 = !DILocation(line: 958, column: 35, scope: !5750)
!5755 = !DILocation(line: 960, column: 13, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5750, file: !897, line: 960, column: 13)
!5757 = !DILocation(line: 960, column: 17, scope: !5756)
!5758 = !DILocation(line: 960, column: 38, scope: !5756)
!5759 = !DILocation(line: 960, column: 13, scope: !5750)
!5760 = !DILocation(line: 961, column: 22, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5756, file: !897, line: 960, column: 45)
!5762 = !DILocation(line: 961, column: 13, scope: !5761)
!5763 = !DILocation(line: 963, column: 17, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5761, file: !897, line: 963, column: 17)
!5765 = !DILocation(line: 963, column: 21, scope: !5764)
!5766 = !DILocation(line: 963, column: 42, scope: !5764)
!5767 = !DILocation(line: 963, column: 17, scope: !5761)
!5768 = !DILocation(line: 964, column: 21, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5770, file: !897, line: 964, column: 21)
!5770 = distinct !DILexicalBlock(scope: !5764, file: !897, line: 963, column: 55)
!5771 = !DILocation(line: 964, column: 36, scope: !5769)
!5772 = !DILocation(line: 964, column: 21, scope: !5770)
!5773 = !DILocation(line: 965, column: 30, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5769, file: !897, line: 964, column: 49)
!5775 = !DILocation(line: 965, column: 21, scope: !5774)
!5776 = !DILocation(line: 966, column: 41, scope: !5774)
!5777 = !DILocation(line: 966, column: 46, scope: !5774)
!5778 = !DILocation(line: 966, column: 50, scope: !5774)
!5779 = !DILocation(line: 966, column: 21, scope: !5774)
!5780 = !DILocation(line: 967, column: 17, scope: !5774)
!5781 = !DILocation(line: 968, column: 30, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5769, file: !897, line: 967, column: 24)
!5783 = !DILocation(line: 968, column: 21, scope: !5782)
!5784 = !DILocation(line: 970, column: 13, scope: !5770)
!5785 = !DILocation(line: 972, column: 17, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5761, file: !897, line: 972, column: 17)
!5787 = !DILocation(line: 972, column: 21, scope: !5786)
!5788 = !DILocation(line: 972, column: 42, scope: !5786)
!5789 = !DILocation(line: 972, column: 17, scope: !5761)
!5790 = !DILocation(line: 973, column: 21, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5792, file: !897, line: 973, column: 21)
!5792 = distinct !DILexicalBlock(scope: !5786, file: !897, line: 972, column: 55)
!5793 = !DILocation(line: 973, column: 36, scope: !5791)
!5794 = !DILocation(line: 973, column: 21, scope: !5792)
!5795 = !DILocation(line: 974, column: 30, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5791, file: !897, line: 973, column: 49)
!5797 = !DILocation(line: 974, column: 21, scope: !5796)
!5798 = !DILocation(line: 975, column: 41, scope: !5796)
!5799 = !DILocation(line: 975, column: 46, scope: !5796)
!5800 = !DILocation(line: 975, column: 50, scope: !5796)
!5801 = !DILocation(line: 975, column: 21, scope: !5796)
!5802 = !DILocation(line: 976, column: 17, scope: !5796)
!5803 = !DILocation(line: 977, column: 30, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5791, file: !897, line: 976, column: 24)
!5805 = !DILocation(line: 977, column: 21, scope: !5804)
!5806 = !DILocation(line: 979, column: 13, scope: !5792)
!5807 = !DILocation(line: 981, column: 17, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5761, file: !897, line: 981, column: 17)
!5809 = !DILocation(line: 981, column: 21, scope: !5808)
!5810 = !DILocation(line: 981, column: 42, scope: !5808)
!5811 = !DILocation(line: 981, column: 17, scope: !5761)
!5812 = !DILocation(line: 982, column: 21, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5814, file: !897, line: 982, column: 21)
!5814 = distinct !DILexicalBlock(scope: !5808, file: !897, line: 981, column: 62)
!5815 = !DILocation(line: 982, column: 36, scope: !5813)
!5816 = !DILocation(line: 982, column: 21, scope: !5814)
!5817 = !DILocation(line: 983, column: 31, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5813, file: !897, line: 982, column: 56)
!5819 = !DILocation(line: 983, column: 21, scope: !5818)
!5820 = !DILocation(line: 984, column: 31, scope: !5818)
!5821 = !DILocation(line: 984, column: 39, scope: !5818)
!5822 = !DILocation(line: 984, column: 43, scope: !5818)
!5823 = !DILocation(line: 984, column: 21, scope: !5818)
!5824 = !DILocation(line: 985, column: 17, scope: !5818)
!5825 = !DILocation(line: 986, column: 30, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5813, file: !897, line: 985, column: 24)
!5827 = !DILocation(line: 986, column: 21, scope: !5826)
!5828 = !DILocation(line: 988, column: 13, scope: !5814)
!5829 = !DILocation(line: 990, column: 22, scope: !5761)
!5830 = !DILocation(line: 990, column: 29, scope: !5761)
!5831 = !DILocation(line: 990, column: 33, scope: !5761)
!5832 = !DILocation(line: 990, column: 13, scope: !5761)
!5833 = !DILocation(line: 991, column: 22, scope: !5761)
!5834 = !DILocation(line: 991, column: 29, scope: !5761)
!5835 = !DILocation(line: 991, column: 33, scope: !5761)
!5836 = !DILocation(line: 991, column: 13, scope: !5761)
!5837 = !DILocation(line: 992, column: 9, scope: !5761)
!5838 = !DILocation(line: 993, column: 22, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5756, file: !897, line: 992, column: 16)
!5840 = !DILocation(line: 993, column: 13, scope: !5839)
!5841 = !DILocation(line: 995, column: 5, scope: !5750)
!5842 = !DILocation(line: 957, column: 57, scope: !5843)
!5843 = !DILexicalBlockFile(scope: !5744, file: !897, discriminator: 2)
!5844 = !DILocation(line: 957, column: 5, scope: !5843)
!5845 = distinct !{!5845, !5846}
!5846 = !DILocation(line: 957, column: 5, scope: !5575)
!5847 = !DILocation(line: 996, column: 1, scope: !5575)
!5848 = distinct !DISubprogram(name: "write_block_data", scope: !897, file: !897, line: 1001, type: !5467, isLocal: true, isDefinition: true, scopeLine: 1002, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!5849 = !DILocalVariable(name: "ctx", arg: 1, scope: !5848, file: !897, line: 1001, type: !1749)
!5850 = !DILocation(line: 1001, column: 48, scope: !5848)
!5851 = !DILocalVariable(name: "pb", arg: 2, scope: !5848, file: !897, line: 1001, type: !5257)
!5852 = !DILocation(line: 1001, column: 68, scope: !5848)
!5853 = !DILocalVariable(name: "dp", scope: !5848, file: !897, line: 1003, type: !955)
!5854 = !DILocation(line: 1003, column: 21, scope: !5848)
!5855 = !DILocation(line: 1003, column: 26, scope: !5848)
!5856 = !DILocation(line: 1003, column: 31, scope: !5848)
!5857 = !DILocalVariable(name: "rh", scope: !5848, file: !897, line: 1004, type: !1835)
!5858 = !DILocation(line: 1004, column: 20, scope: !5848)
!5859 = !DILocation(line: 1004, column: 25, scope: !5848)
!5860 = !DILocation(line: 1004, column: 30, scope: !5848)
!5861 = !DILocalVariable(name: "sample_buffer", scope: !5848, file: !897, line: 1005, type: !1767)
!5862 = !DILocation(line: 1005, column: 14, scope: !5848)
!5863 = !DILocation(line: 1005, column: 30, scope: !5848)
!5864 = !DILocation(line: 1005, column: 35, scope: !5848)
!5865 = !DILocalVariable(name: "sign_huff_offset", scope: !5848, file: !897, line: 1006, type: !937)
!5866 = !DILocation(line: 1006, column: 13, scope: !5848)
!5867 = !DILocalVariable(name: "codebook_index", scope: !5848, file: !897, line: 1007, type: !1123)
!5868 = !DILocation(line: 1007, column: 9, scope: !5848)
!5869 = !DILocalVariable(name: "lsb_bits", scope: !5848, file: !897, line: 1008, type: !1123)
!5870 = !DILocation(line: 1008, column: 9, scope: !5848)
!5871 = !DILocalVariable(name: "i", scope: !5848, file: !897, line: 1009, type: !993)
!5872 = !DILocation(line: 1009, column: 18, scope: !5848)
!5873 = !DILocalVariable(name: "ch", scope: !5848, file: !897, line: 1009, type: !993)
!5874 = !DILocation(line: 1009, column: 21, scope: !5848)
!5875 = !DILocation(line: 1011, column: 15, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5848, file: !897, line: 1011, column: 5)
!5877 = !DILocation(line: 1011, column: 19, scope: !5876)
!5878 = !DILocation(line: 1011, column: 13, scope: !5876)
!5879 = !DILocation(line: 1011, column: 10, scope: !5876)
!5880 = !DILocation(line: 1011, column: 32, scope: !5881)
!5881 = !DILexicalBlockFile(scope: !5882, file: !897, discriminator: 1)
!5882 = distinct !DILexicalBlock(scope: !5876, file: !897, line: 1011, column: 5)
!5883 = !DILocation(line: 1011, column: 38, scope: !5881)
!5884 = !DILocation(line: 1011, column: 42, scope: !5881)
!5885 = !DILocation(line: 1011, column: 35, scope: !5881)
!5886 = !DILocation(line: 1011, column: 5, scope: !5881)
!5887 = !DILocalVariable(name: "cp", scope: !5888, file: !897, line: 1012, type: !921)
!5888 = distinct !DILexicalBlock(scope: !5882, file: !897, line: 1011, column: 61)
!5889 = !DILocation(line: 1012, column: 24, scope: !5888)
!5890 = !DILocation(line: 1012, column: 54, scope: !5888)
!5891 = !DILocation(line: 1012, column: 30, scope: !5888)
!5892 = !DILocation(line: 1012, column: 35, scope: !5888)
!5893 = !DILocalVariable(name: "sign_shift", scope: !5888, file: !897, line: 1013, type: !939)
!5894 = !DILocation(line: 1013, column: 13, scope: !5888)
!5895 = !DILocation(line: 1015, column: 25, scope: !5888)
!5896 = !DILocation(line: 1015, column: 29, scope: !5888)
!5897 = !DILocation(line: 1015, column: 61, scope: !5888)
!5898 = !DILocation(line: 1015, column: 41, scope: !5888)
!5899 = !DILocation(line: 1015, column: 45, scope: !5888)
!5900 = !DILocation(line: 1015, column: 39, scope: !5888)
!5901 = !DILocation(line: 1015, column: 19, scope: !5888)
!5902 = !DILocation(line: 1015, column: 9, scope: !5888)
!5903 = !DILocation(line: 1015, column: 23, scope: !5888)
!5904 = !DILocation(line: 1016, column: 31, scope: !5888)
!5905 = !DILocation(line: 1016, column: 35, scope: !5888)
!5906 = !DILocation(line: 1016, column: 44, scope: !5888)
!5907 = !DILocation(line: 1016, column: 25, scope: !5888)
!5908 = !DILocation(line: 1016, column: 9, scope: !5888)
!5909 = !DILocation(line: 1016, column: 29, scope: !5888)
!5910 = !DILocation(line: 1017, column: 32, scope: !5888)
!5911 = !DILocation(line: 1017, column: 36, scope: !5888)
!5912 = !DILocation(line: 1017, column: 26, scope: !5888)
!5913 = !DILocation(line: 1017, column: 9, scope: !5888)
!5914 = !DILocation(line: 1017, column: 30, scope: !5888)
!5915 = !DILocation(line: 1019, column: 31, scope: !5888)
!5916 = !DILocation(line: 1019, column: 22, scope: !5888)
!5917 = !DILocation(line: 1019, column: 35, scope: !5888)
!5918 = !DILocation(line: 1019, column: 20, scope: !5888)
!5919 = !DILocation(line: 1021, column: 13, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5888, file: !897, line: 1021, column: 13)
!5921 = !DILocation(line: 1021, column: 17, scope: !5920)
!5922 = !DILocation(line: 1021, column: 26, scope: !5920)
!5923 = !DILocation(line: 1021, column: 13, scope: !5888)
!5924 = !DILocation(line: 1022, column: 51, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5920, file: !897, line: 1021, column: 31)
!5926 = !DILocation(line: 1022, column: 42, scope: !5925)
!5927 = !DILocation(line: 1022, column: 39, scope: !5925)
!5928 = !DILocation(line: 1022, column: 30, scope: !5925)
!5929 = !DILocation(line: 1022, column: 13, scope: !5925)
!5930 = !DILocation(line: 1022, column: 34, scope: !5925)
!5931 = !DILocation(line: 1023, column: 31, scope: !5925)
!5932 = !DILocation(line: 1023, column: 35, scope: !5925)
!5933 = !DILocation(line: 1023, column: 29, scope: !5925)
!5934 = !DILocation(line: 1023, column: 24, scope: !5925)
!5935 = !DILocation(line: 1024, column: 9, scope: !5925)
!5936 = !DILocation(line: 1027, column: 13, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5888, file: !897, line: 1027, column: 13)
!5938 = !DILocation(line: 1027, column: 24, scope: !5937)
!5939 = !DILocation(line: 1027, column: 13, scope: !5888)
!5940 = !DILocation(line: 1028, column: 42, scope: !5937)
!5941 = !DILocation(line: 1028, column: 39, scope: !5937)
!5942 = !DILocation(line: 1028, column: 30, scope: !5937)
!5943 = !DILocation(line: 1028, column: 13, scope: !5937)
!5944 = !DILocation(line: 1028, column: 34, scope: !5937)
!5945 = !DILocation(line: 1029, column: 5, scope: !5888)
!5946 = !DILocation(line: 1011, column: 57, scope: !5947)
!5947 = !DILexicalBlockFile(scope: !5882, file: !897, discriminator: 2)
!5948 = !DILocation(line: 1011, column: 5, scope: !5947)
!5949 = distinct !{!5949, !5950}
!5950 = !DILocation(line: 1011, column: 5, scope: !5848)
!5951 = !DILocation(line: 1031, column: 12, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5848, file: !897, line: 1031, column: 5)
!5953 = !DILocation(line: 1031, column: 10, scope: !5952)
!5954 = !DILocation(line: 1031, column: 17, scope: !5955)
!5955 = !DILexicalBlockFile(scope: !5956, file: !897, discriminator: 1)
!5956 = distinct !DILexicalBlock(scope: !5952, file: !897, line: 1031, column: 5)
!5957 = !DILocation(line: 1031, column: 21, scope: !5955)
!5958 = !DILocation(line: 1031, column: 25, scope: !5955)
!5959 = !DILocation(line: 1031, column: 19, scope: !5955)
!5960 = !DILocation(line: 1031, column: 5, scope: !5955)
!5961 = !DILocation(line: 1032, column: 19, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5963, file: !897, line: 1032, column: 9)
!5963 = distinct !DILexicalBlock(scope: !5956, file: !897, line: 1031, column: 41)
!5964 = !DILocation(line: 1032, column: 23, scope: !5962)
!5965 = !DILocation(line: 1032, column: 17, scope: !5962)
!5966 = !DILocation(line: 1032, column: 14, scope: !5962)
!5967 = !DILocation(line: 1032, column: 36, scope: !5968)
!5968 = !DILexicalBlockFile(scope: !5969, file: !897, discriminator: 1)
!5969 = distinct !DILexicalBlock(scope: !5962, file: !897, line: 1032, column: 9)
!5970 = !DILocation(line: 1032, column: 42, scope: !5968)
!5971 = !DILocation(line: 1032, column: 46, scope: !5968)
!5972 = !DILocation(line: 1032, column: 39, scope: !5968)
!5973 = !DILocation(line: 1032, column: 9, scope: !5968)
!5974 = !DILocalVariable(name: "sample", scope: !5975, file: !897, line: 1033, type: !938)
!5975 = distinct !DILexicalBlock(scope: !5969, file: !897, line: 1032, column: 65)
!5976 = !DILocation(line: 1033, column: 21, scope: !5975)
!5977 = !DILocation(line: 1033, column: 44, scope: !5975)
!5978 = !DILocation(line: 1033, column: 30, scope: !5975)
!5979 = !DILocation(line: 1033, column: 70, scope: !5975)
!5980 = !DILocation(line: 1033, column: 50, scope: !5975)
!5981 = !DILocation(line: 1033, column: 54, scope: !5975)
!5982 = !DILocation(line: 1033, column: 47, scope: !5975)
!5983 = !DILocation(line: 1035, column: 40, scope: !5975)
!5984 = !DILocation(line: 1035, column: 23, scope: !5975)
!5985 = !DILocation(line: 1035, column: 20, scope: !5975)
!5986 = !DILocation(line: 1037, column: 32, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5975, file: !897, line: 1037, column: 17)
!5988 = !DILocation(line: 1037, column: 17, scope: !5987)
!5989 = !DILocation(line: 1037, column: 36, scope: !5987)
!5990 = !DILocation(line: 1037, column: 17, scope: !5975)
!5991 = !DILocalVariable(name: "vlc", scope: !5992, file: !897, line: 1038, type: !939)
!5992 = distinct !DILexicalBlock(scope: !5987, file: !897, line: 1037, column: 42)
!5993 = !DILocation(line: 1038, column: 21, scope: !5992)
!5994 = !DILocation(line: 1038, column: 27, scope: !5992)
!5995 = !DILocation(line: 1038, column: 46, scope: !5992)
!5996 = !DILocation(line: 1038, column: 37, scope: !5992)
!5997 = !DILocation(line: 1038, column: 34, scope: !5992)
!5998 = !DILocation(line: 1039, column: 26, scope: !5992)
!5999 = !DILocation(line: 1039, column: 72, scope: !5992)
!6000 = !DILocation(line: 1039, column: 30, scope: !5992)
!6001 = !DILocation(line: 1039, column: 67, scope: !5992)
!6002 = !DILocation(line: 1039, column: 52, scope: !5992)
!6003 = !DILocation(line: 1040, column: 72, scope: !5992)
!6004 = !DILocation(line: 1040, column: 30, scope: !5992)
!6005 = !DILocation(line: 1040, column: 67, scope: !5992)
!6006 = !DILocation(line: 1040, column: 52, scope: !5992)
!6007 = !DILocation(line: 1039, column: 17, scope: !5992)
!6008 = !DILocation(line: 1041, column: 13, scope: !5992)
!6009 = !DILocation(line: 1043, column: 23, scope: !5975)
!6010 = !DILocation(line: 1043, column: 36, scope: !5975)
!6011 = !DILocation(line: 1043, column: 27, scope: !5975)
!6012 = !DILocation(line: 1043, column: 41, scope: !5975)
!6013 = !DILocation(line: 1043, column: 13, scope: !5975)
!6014 = !DILocation(line: 1044, column: 9, scope: !5975)
!6015 = !DILocation(line: 1032, column: 61, scope: !6016)
!6016 = !DILexicalBlockFile(scope: !5969, file: !897, discriminator: 2)
!6017 = !DILocation(line: 1032, column: 9, scope: !6016)
!6018 = distinct !{!6018, !6019}
!6019 = !DILocation(line: 1032, column: 9, scope: !5963)
!6020 = !DILocation(line: 1045, column: 23, scope: !5963)
!6021 = !DILocation(line: 1046, column: 5, scope: !5963)
!6022 = !DILocation(line: 1031, column: 37, scope: !6023)
!6023 = !DILexicalBlockFile(scope: !5956, file: !897, discriminator: 2)
!6024 = !DILocation(line: 1031, column: 5, scope: !6023)
!6025 = distinct !{!6025, !6026}
!6026 = !DILocation(line: 1031, column: 5, scope: !5848)
!6027 = !DILocation(line: 1048, column: 25, scope: !5848)
!6028 = !DILocation(line: 1048, column: 5, scope: !5848)
!6029 = !DILocation(line: 1048, column: 10, scope: !5848)
!6030 = !DILocation(line: 1048, column: 23, scope: !5848)
!6031 = !DILocation(line: 1049, column: 1, scope: !5848)
!6032 = distinct !DISubprogram(name: "put_bits_count", scope: !4805, file: !4805, line: 85, type: !6033, isLocal: true, isDefinition: true, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6033 = !DISubroutineType(types: !6034)
!6034 = !{!939, !5257}
!6035 = !DILocalVariable(name: "s", arg: 1, scope: !6032, file: !4805, line: 85, type: !5257)
!6036 = !DILocation(line: 85, column: 49, scope: !6032)
!6037 = !DILocation(line: 87, column: 13, scope: !6032)
!6038 = !DILocation(line: 87, column: 16, scope: !6032)
!6039 = !DILocation(line: 87, column: 26, scope: !6032)
!6040 = !DILocation(line: 87, column: 29, scope: !6032)
!6041 = !DILocation(line: 87, column: 24, scope: !6032)
!6042 = !DILocation(line: 87, column: 34, scope: !6032)
!6043 = !DILocation(line: 87, column: 38, scope: !6032)
!6044 = !DILocation(line: 87, column: 45, scope: !6032)
!6045 = !DILocation(line: 87, column: 48, scope: !6032)
!6046 = !DILocation(line: 87, column: 43, scope: !6032)
!6047 = !DILocation(line: 87, column: 12, scope: !6032)
!6048 = !DILocation(line: 87, column: 5, scope: !6032)
!6049 = distinct !DISubprogram(name: "xor_32_to_8", scope: !923, file: !923, line: 160, type: !6050, isLocal: true, isDefinition: true, scopeLine: 161, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6050 = !DISubroutineType(types: !6051)
!6051 = !{!932, !992}
!6052 = !DILocalVariable(name: "value", arg: 1, scope: !6049, file: !923, line: 160, type: !992)
!6053 = !DILocation(line: 160, column: 44, scope: !6049)
!6054 = !DILocation(line: 162, column: 14, scope: !6049)
!6055 = !DILocation(line: 162, column: 20, scope: !6049)
!6056 = !DILocation(line: 162, column: 11, scope: !6049)
!6057 = !DILocation(line: 163, column: 14, scope: !6049)
!6058 = !DILocation(line: 163, column: 20, scope: !6049)
!6059 = !DILocation(line: 163, column: 11, scope: !6049)
!6060 = !DILocation(line: 164, column: 12, scope: !6049)
!6061 = !DILocation(line: 164, column: 5, scope: !6049)
!6062 = distinct !DISubprogram(name: "write_matrix_params", scope: !897, file: !897, line: 844, type: !5467, isLocal: true, isDefinition: true, scopeLine: 845, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6063 = !DILocalVariable(name: "ctx", arg: 1, scope: !6062, file: !897, line: 844, type: !1749)
!6064 = !DILocation(line: 844, column: 51, scope: !6062)
!6065 = !DILocalVariable(name: "pb", arg: 2, scope: !6062, file: !897, line: 844, type: !5257)
!6066 = !DILocation(line: 844, column: 71, scope: !6062)
!6067 = !DILocalVariable(name: "dp", scope: !6062, file: !897, line: 846, type: !955)
!6068 = !DILocation(line: 846, column: 21, scope: !6062)
!6069 = !DILocation(line: 846, column: 26, scope: !6062)
!6070 = !DILocation(line: 846, column: 31, scope: !6062)
!6071 = !DILocalVariable(name: "mp", scope: !6062, file: !897, line: 847, type: !3945)
!6072 = !DILocation(line: 847, column: 19, scope: !6062)
!6073 = !DILocation(line: 847, column: 25, scope: !6062)
!6074 = !DILocation(line: 847, column: 29, scope: !6062)
!6075 = !DILocalVariable(name: "mat", scope: !6062, file: !897, line: 848, type: !993)
!6076 = !DILocation(line: 848, column: 18, scope: !6062)
!6077 = !DILocation(line: 850, column: 14, scope: !6062)
!6078 = !DILocation(line: 850, column: 21, scope: !6062)
!6079 = !DILocation(line: 850, column: 25, scope: !6062)
!6080 = !DILocation(line: 850, column: 5, scope: !6062)
!6081 = !DILocation(line: 852, column: 14, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6062, file: !897, line: 852, column: 5)
!6083 = !DILocation(line: 852, column: 10, scope: !6082)
!6084 = !DILocation(line: 852, column: 19, scope: !6085)
!6085 = !DILexicalBlockFile(scope: !6086, file: !897, discriminator: 1)
!6086 = distinct !DILexicalBlock(scope: !6082, file: !897, line: 852, column: 5)
!6087 = !DILocation(line: 852, column: 25, scope: !6085)
!6088 = !DILocation(line: 852, column: 29, scope: !6085)
!6089 = !DILocation(line: 852, column: 23, scope: !6085)
!6090 = !DILocation(line: 852, column: 5, scope: !6085)
!6091 = !DILocalVariable(name: "channel", scope: !6092, file: !897, line: 853, type: !993)
!6092 = distinct !DILexicalBlock(scope: !6086, file: !897, line: 852, column: 43)
!6093 = !DILocation(line: 853, column: 22, scope: !6092)
!6094 = !DILocation(line: 855, column: 18, scope: !6092)
!6095 = !DILocation(line: 855, column: 35, scope: !6092)
!6096 = !DILocation(line: 855, column: 25, scope: !6092)
!6097 = !DILocation(line: 855, column: 29, scope: !6092)
!6098 = !DILocation(line: 855, column: 9, scope: !6092)
!6099 = !DILocation(line: 856, column: 18, scope: !6092)
!6100 = !DILocation(line: 856, column: 35, scope: !6092)
!6101 = !DILocation(line: 856, column: 25, scope: !6092)
!6102 = !DILocation(line: 856, column: 29, scope: !6092)
!6103 = !DILocation(line: 856, column: 9, scope: !6092)
!6104 = !DILocation(line: 857, column: 18, scope: !6092)
!6105 = !DILocation(line: 857, column: 9, scope: !6092)
!6106 = !DILocation(line: 859, column: 22, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6092, file: !897, line: 859, column: 9)
!6108 = !DILocation(line: 859, column: 14, scope: !6107)
!6109 = !DILocation(line: 859, column: 27, scope: !6110)
!6110 = !DILexicalBlockFile(scope: !6111, file: !897, discriminator: 1)
!6111 = distinct !DILexicalBlock(scope: !6107, file: !897, line: 859, column: 9)
!6112 = !DILocation(line: 859, column: 37, scope: !6110)
!6113 = !DILocation(line: 859, column: 42, scope: !6110)
!6114 = !DILocation(line: 859, column: 35, scope: !6110)
!6115 = !DILocation(line: 859, column: 9, scope: !6110)
!6116 = !DILocalVariable(name: "coeff", scope: !6117, file: !897, line: 860, type: !938)
!6117 = distinct !DILexicalBlock(scope: !6111, file: !897, line: 859, column: 67)
!6118 = !DILocation(line: 860, column: 21, scope: !6117)
!6119 = !DILocation(line: 860, column: 44, scope: !6117)
!6120 = !DILocation(line: 860, column: 29, scope: !6117)
!6121 = !DILocation(line: 860, column: 39, scope: !6117)
!6122 = !DILocation(line: 860, column: 33, scope: !6117)
!6123 = !DILocation(line: 862, column: 17, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6117, file: !897, line: 862, column: 17)
!6125 = !DILocation(line: 862, column: 17, scope: !6117)
!6126 = !DILocation(line: 863, column: 26, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6124, file: !897, line: 862, column: 24)
!6128 = !DILocation(line: 863, column: 17, scope: !6127)
!6129 = !DILocation(line: 865, column: 42, scope: !6127)
!6130 = !DILocation(line: 865, column: 32, scope: !6127)
!6131 = !DILocation(line: 865, column: 36, scope: !6127)
!6132 = !DILocation(line: 865, column: 30, scope: !6127)
!6133 = !DILocation(line: 865, column: 23, scope: !6127)
!6134 = !DILocation(line: 867, column: 27, scope: !6127)
!6135 = !DILocation(line: 867, column: 41, scope: !6127)
!6136 = !DILocation(line: 867, column: 31, scope: !6127)
!6137 = !DILocation(line: 867, column: 35, scope: !6127)
!6138 = !DILocation(line: 867, column: 46, scope: !6127)
!6139 = !DILocation(line: 867, column: 51, scope: !6127)
!6140 = !DILocation(line: 867, column: 17, scope: !6127)
!6141 = !DILocation(line: 868, column: 13, scope: !6127)
!6142 = !DILocation(line: 869, column: 26, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6124, file: !897, line: 868, column: 20)
!6144 = !DILocation(line: 869, column: 17, scope: !6143)
!6145 = !DILocation(line: 871, column: 9, scope: !6117)
!6146 = !DILocation(line: 859, column: 63, scope: !6147)
!6147 = !DILexicalBlockFile(scope: !6111, file: !897, discriminator: 2)
!6148 = !DILocation(line: 859, column: 9, scope: !6147)
!6149 = distinct !{!6149, !6150}
!6150 = !DILocation(line: 859, column: 9, scope: !6092)
!6151 = !DILocation(line: 872, column: 5, scope: !6092)
!6152 = !DILocation(line: 852, column: 39, scope: !6153)
!6153 = !DILexicalBlockFile(scope: !6086, file: !897, discriminator: 2)
!6154 = !DILocation(line: 852, column: 5, scope: !6153)
!6155 = distinct !{!6155, !6156}
!6156 = !DILocation(line: 852, column: 5, scope: !6062)
!6157 = !DILocation(line: 873, column: 1, scope: !6062)
!6158 = distinct !DISubprogram(name: "put_sbits", scope: !4805, file: !4805, line: 240, type: !6159, isLocal: true, isDefinition: true, scopeLine: 241, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6159 = !DISubroutineType(types: !6160)
!6160 = !{null, !5257, !939, !938}
!6161 = !DILocalVariable(name: "a", arg: 1, scope: !6162, file: !6163, line: 241, type: !993)
!6162 = distinct !DISubprogram(name: "av_mod_uintp2_c", scope: !6163, file: !6163, line: 241, type: !6164, isLocal: true, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6163 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6164 = !DISubroutineType(types: !6165)
!6165 = !{!993, !993, !993}
!6166 = !DILocation(line: 241, column: 103, scope: !6162, inlinedAt: !6167)
!6167 = distinct !DILocation(line: 244, column: 21, scope: !6158)
!6168 = !DILocalVariable(name: "p", arg: 2, scope: !6162, file: !6163, line: 241, type: !993)
!6169 = !DILocation(line: 241, column: 115, scope: !6162, inlinedAt: !6167)
!6170 = !DILocalVariable(name: "pb", arg: 1, scope: !6158, file: !4805, line: 240, type: !5257)
!6171 = !DILocation(line: 240, column: 45, scope: !6158)
!6172 = !DILocalVariable(name: "n", arg: 2, scope: !6158, file: !4805, line: 240, type: !939)
!6173 = !DILocation(line: 240, column: 53, scope: !6158)
!6174 = !DILocalVariable(name: "value", arg: 3, scope: !6158, file: !4805, line: 240, type: !938)
!6175 = !DILocation(line: 240, column: 64, scope: !6158)
!6176 = !DILocation(line: 244, column: 14, scope: !6158)
!6177 = !DILocation(line: 244, column: 18, scope: !6158)
!6178 = !DILocation(line: 244, column: 37, scope: !6158)
!6179 = !DILocation(line: 244, column: 44, scope: !6158)
!6180 = !DILocation(line: 244, column: 21, scope: !6158)
!6181 = !DILocation(line: 243, column: 12, scope: !6162, inlinedAt: !6167)
!6182 = !DILocation(line: 243, column: 23, scope: !6162, inlinedAt: !6167)
!6183 = !DILocation(line: 243, column: 20, scope: !6162, inlinedAt: !6167)
!6184 = !DILocation(line: 243, column: 26, scope: !6162, inlinedAt: !6167)
!6185 = !DILocation(line: 243, column: 14, scope: !6162, inlinedAt: !6167)
!6186 = !DILocation(line: 244, column: 5, scope: !6187)
!6187 = !DILexicalBlockFile(scope: !6158, file: !4805, discriminator: 1)
!6188 = !DILocation(line: 245, column: 1, scope: !6158)
!6189 = distinct !DISubprogram(name: "write_filter_params", scope: !897, file: !897, line: 876, type: !6190, isLocal: true, isDefinition: true, scopeLine: 878, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6190 = !DISubroutineType(types: !6191)
!6191 = !{null, !1749, !5257, !993, !993}
!6192 = !DILocalVariable(name: "ctx", arg: 1, scope: !6189, file: !897, line: 876, type: !1749)
!6193 = !DILocation(line: 876, column: 51, scope: !6189)
!6194 = !DILocalVariable(name: "pb", arg: 2, scope: !6189, file: !897, line: 876, type: !5257)
!6195 = !DILocation(line: 876, column: 71, scope: !6189)
!6196 = !DILocalVariable(name: "channel", arg: 3, scope: !6189, file: !897, line: 877, type: !993)
!6197 = !DILocation(line: 877, column: 46, scope: !6189)
!6198 = !DILocalVariable(name: "filter", arg: 4, scope: !6189, file: !897, line: 877, type: !993)
!6199 = !DILocation(line: 877, column: 68, scope: !6189)
!6200 = !DILocalVariable(name: "fp", scope: !6189, file: !897, line: 879, type: !4529)
!6201 = !DILocation(line: 879, column: 19, scope: !6189)
!6202 = !DILocation(line: 879, column: 72, scope: !6189)
!6203 = !DILocation(line: 879, column: 25, scope: !6189)
!6204 = !DILocation(line: 879, column: 49, scope: !6189)
!6205 = !DILocation(line: 879, column: 30, scope: !6189)
!6206 = !DILocation(line: 879, column: 58, scope: !6189)
!6207 = !DILocation(line: 881, column: 14, scope: !6189)
!6208 = !DILocation(line: 881, column: 21, scope: !6189)
!6209 = !DILocation(line: 881, column: 25, scope: !6189)
!6210 = !DILocation(line: 881, column: 5, scope: !6189)
!6211 = !DILocation(line: 883, column: 9, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6189, file: !897, line: 883, column: 9)
!6213 = !DILocation(line: 883, column: 13, scope: !6212)
!6214 = !DILocation(line: 883, column: 19, scope: !6212)
!6215 = !DILocation(line: 883, column: 9, scope: !6189)
!6216 = !DILocalVariable(name: "i", scope: !6217, file: !897, line: 884, type: !939)
!6217 = distinct !DILexicalBlock(scope: !6212, file: !897, line: 883, column: 24)
!6218 = !DILocation(line: 884, column: 13, scope: !6217)
!6219 = !DILocalVariable(name: "fcoeff", scope: !6217, file: !897, line: 885, type: !1767)
!6220 = !DILocation(line: 885, column: 18, scope: !6217)
!6221 = !DILocation(line: 885, column: 66, scope: !6217)
!6222 = !DILocation(line: 885, column: 27, scope: !6217)
!6223 = !DILocation(line: 885, column: 51, scope: !6217)
!6224 = !DILocation(line: 885, column: 32, scope: !6217)
!6225 = !DILocation(line: 885, column: 60, scope: !6217)
!6226 = !DILocation(line: 887, column: 18, scope: !6217)
!6227 = !DILocation(line: 887, column: 25, scope: !6217)
!6228 = !DILocation(line: 887, column: 29, scope: !6217)
!6229 = !DILocation(line: 887, column: 9, scope: !6217)
!6230 = !DILocation(line: 888, column: 18, scope: !6217)
!6231 = !DILocation(line: 888, column: 25, scope: !6217)
!6232 = !DILocation(line: 888, column: 29, scope: !6217)
!6233 = !DILocation(line: 888, column: 9, scope: !6217)
!6234 = !DILocation(line: 889, column: 18, scope: !6217)
!6235 = !DILocation(line: 889, column: 25, scope: !6217)
!6236 = !DILocation(line: 889, column: 29, scope: !6217)
!6237 = !DILocation(line: 889, column: 9, scope: !6217)
!6238 = !DILocation(line: 891, column: 16, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6217, file: !897, line: 891, column: 9)
!6240 = !DILocation(line: 891, column: 14, scope: !6239)
!6241 = !DILocation(line: 891, column: 21, scope: !6242)
!6242 = !DILexicalBlockFile(scope: !6243, file: !897, discriminator: 1)
!6243 = distinct !DILexicalBlock(scope: !6239, file: !897, line: 891, column: 9)
!6244 = !DILocation(line: 891, column: 25, scope: !6242)
!6245 = !DILocation(line: 891, column: 29, scope: !6242)
!6246 = !DILocation(line: 891, column: 23, scope: !6242)
!6247 = !DILocation(line: 891, column: 9, scope: !6242)
!6248 = !DILocation(line: 892, column: 23, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6243, file: !897, line: 891, column: 41)
!6250 = !DILocation(line: 892, column: 27, scope: !6249)
!6251 = !DILocation(line: 892, column: 31, scope: !6249)
!6252 = !DILocation(line: 892, column: 50, scope: !6249)
!6253 = !DILocation(line: 892, column: 43, scope: !6249)
!6254 = !DILocation(line: 892, column: 56, scope: !6249)
!6255 = !DILocation(line: 892, column: 60, scope: !6249)
!6256 = !DILocation(line: 892, column: 53, scope: !6249)
!6257 = !DILocation(line: 892, column: 13, scope: !6249)
!6258 = !DILocation(line: 893, column: 9, scope: !6249)
!6259 = !DILocation(line: 891, column: 37, scope: !6260)
!6260 = !DILexicalBlockFile(scope: !6243, file: !897, discriminator: 2)
!6261 = !DILocation(line: 891, column: 9, scope: !6260)
!6262 = distinct !{!6262, !6263}
!6263 = !DILocation(line: 891, column: 9, scope: !6217)
!6264 = !DILocation(line: 896, column: 18, scope: !6217)
!6265 = !DILocation(line: 896, column: 9, scope: !6217)
!6266 = !DILocation(line: 897, column: 5, scope: !6217)
!6267 = !DILocation(line: 898, column: 1, scope: !6189)
!6268 = distinct !DISubprogram(name: "input_data_internal", scope: !897, file: !897, line: 1231, type: !6269, isLocal: true, isDefinition: true, scopeLine: 1233, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6269 = !DISubroutineType(types: !6270)
!6270 = !{null, !1749, !1530, !939}
!6271 = !DILocalVariable(name: "ctx", arg: 1, scope: !6268, file: !897, line: 1231, type: !1749)
!6272 = !DILocation(line: 1231, column: 51, scope: !6268)
!6273 = !DILocalVariable(name: "samples", arg: 2, scope: !6268, file: !897, line: 1231, type: !1530)
!6274 = !DILocation(line: 1231, column: 71, scope: !6268)
!6275 = !DILocalVariable(name: "is24", arg: 3, scope: !6268, file: !897, line: 1232, type: !939)
!6276 = !DILocation(line: 1232, column: 37, scope: !6268)
!6277 = !DILocalVariable(name: "lossless_check_data", scope: !6268, file: !897, line: 1234, type: !1767)
!6278 = !DILocation(line: 1234, column: 14, scope: !6268)
!6279 = !DILocation(line: 1234, column: 36, scope: !6268)
!6280 = !DILocation(line: 1234, column: 41, scope: !6268)
!6281 = !DILocalVariable(name: "samples_32", scope: !6268, file: !897, line: 1235, type: !995)
!6282 = !DILocation(line: 1235, column: 20, scope: !6268)
!6283 = !DILocation(line: 1235, column: 51, scope: !6268)
!6284 = !DILocation(line: 1235, column: 33, scope: !6268)
!6285 = !DILocalVariable(name: "samples_16", scope: !6268, file: !897, line: 1236, type: !997)
!6286 = !DILocation(line: 1236, column: 20, scope: !6268)
!6287 = !DILocation(line: 1236, column: 51, scope: !6268)
!6288 = !DILocation(line: 1236, column: 33, scope: !6268)
!6289 = !DILocalVariable(name: "substr", scope: !6268, file: !897, line: 1237, type: !993)
!6290 = !DILocation(line: 1237, column: 18, scope: !6268)
!6291 = !DILocation(line: 1239, column: 28, scope: !6268)
!6292 = !DILocation(line: 1239, column: 33, scope: !6268)
!6293 = !DILocation(line: 1239, column: 47, scope: !6268)
!6294 = !DILocation(line: 1239, column: 52, scope: !6268)
!6295 = !DILocation(line: 1239, column: 45, scope: !6268)
!6296 = !DILocation(line: 1239, column: 25, scope: !6268)
!6297 = !DILocation(line: 1241, column: 17, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6268, file: !897, line: 1241, column: 5)
!6299 = !DILocation(line: 1241, column: 10, scope: !6298)
!6300 = !DILocation(line: 1241, column: 22, scope: !6301)
!6301 = !DILexicalBlockFile(scope: !6302, file: !897, discriminator: 1)
!6302 = distinct !DILexicalBlock(scope: !6298, file: !897, line: 1241, column: 5)
!6303 = !DILocation(line: 1241, column: 31, scope: !6301)
!6304 = !DILocation(line: 1241, column: 36, scope: !6301)
!6305 = !DILocation(line: 1241, column: 29, scope: !6301)
!6306 = !DILocation(line: 1241, column: 5, scope: !6301)
!6307 = !DILocalVariable(name: "rh", scope: !6308, file: !897, line: 1242, type: !1835)
!6308 = distinct !DILexicalBlock(scope: !6302, file: !897, line: 1241, column: 62)
!6309 = !DILocation(line: 1242, column: 24, scope: !6308)
!6310 = !DILocation(line: 1242, column: 51, scope: !6308)
!6311 = !DILocation(line: 1242, column: 30, scope: !6308)
!6312 = !DILocation(line: 1242, column: 35, scope: !6308)
!6313 = !DILocalVariable(name: "sample_buffer", scope: !6308, file: !897, line: 1243, type: !1767)
!6314 = !DILocation(line: 1243, column: 18, scope: !6308)
!6315 = !DILocation(line: 1243, column: 34, scope: !6308)
!6316 = !DILocation(line: 1243, column: 39, scope: !6308)
!6317 = !DILocalVariable(name: "temp_lossless_check_data", scope: !6308, file: !897, line: 1244, type: !938)
!6318 = !DILocation(line: 1244, column: 17, scope: !6308)
!6319 = !DILocalVariable(name: "greatest", scope: !6308, file: !897, line: 1245, type: !992)
!6320 = !DILocation(line: 1245, column: 18, scope: !6308)
!6321 = !DILocalVariable(name: "channel", scope: !6308, file: !897, line: 1246, type: !993)
!6322 = !DILocation(line: 1246, column: 22, scope: !6308)
!6323 = !DILocalVariable(name: "i", scope: !6308, file: !897, line: 1247, type: !939)
!6324 = !DILocation(line: 1247, column: 13, scope: !6308)
!6325 = !DILocation(line: 1249, column: 16, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6308, file: !897, line: 1249, column: 9)
!6327 = !DILocation(line: 1249, column: 14, scope: !6326)
!6328 = !DILocation(line: 1249, column: 21, scope: !6329)
!6329 = !DILexicalBlockFile(scope: !6330, file: !897, discriminator: 1)
!6330 = distinct !DILexicalBlock(scope: !6326, file: !897, line: 1249, column: 9)
!6331 = !DILocation(line: 1249, column: 41, scope: !6329)
!6332 = !DILocation(line: 1249, column: 46, scope: !6329)
!6333 = !DILocation(line: 1249, column: 25, scope: !6329)
!6334 = !DILocation(line: 1249, column: 30, scope: !6329)
!6335 = !DILocation(line: 1249, column: 23, scope: !6329)
!6336 = !DILocation(line: 1249, column: 9, scope: !6329)
!6337 = !DILocation(line: 1250, column: 26, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6339, file: !897, line: 1250, column: 13)
!6339 = distinct !DILexicalBlock(scope: !6330, file: !897, line: 1249, column: 65)
!6340 = !DILocation(line: 1250, column: 18, scope: !6338)
!6341 = !DILocation(line: 1250, column: 31, scope: !6342)
!6342 = !DILexicalBlockFile(scope: !6343, file: !897, discriminator: 1)
!6343 = distinct !DILexicalBlock(scope: !6338, file: !897, line: 1250, column: 13)
!6344 = !DILocation(line: 1250, column: 42, scope: !6342)
!6345 = !DILocation(line: 1250, column: 46, scope: !6342)
!6346 = !DILocation(line: 1250, column: 39, scope: !6342)
!6347 = !DILocation(line: 1250, column: 13, scope: !6342)
!6348 = !DILocalVariable(name: "abs_sample", scope: !6349, file: !897, line: 1251, type: !992)
!6349 = distinct !DILexicalBlock(scope: !6343, file: !897, line: 1250, column: 70)
!6350 = !DILocation(line: 1251, column: 26, scope: !6349)
!6351 = !DILocalVariable(name: "sample", scope: !6349, file: !897, line: 1252, type: !938)
!6352 = !DILocation(line: 1252, column: 25, scope: !6349)
!6353 = !DILocation(line: 1254, column: 26, scope: !6349)
!6354 = !DILocation(line: 1254, column: 44, scope: !6355)
!6355 = !DILexicalBlockFile(scope: !6349, file: !897, discriminator: 1)
!6356 = !DILocation(line: 1254, column: 33, scope: !6355)
!6357 = !DILocation(line: 1254, column: 47, scope: !6355)
!6358 = !DILocation(line: 1254, column: 26, scope: !6355)
!6359 = !DILocation(line: 1254, column: 65, scope: !6360)
!6360 = !DILexicalBlockFile(scope: !6349, file: !897, discriminator: 2)
!6361 = !DILocation(line: 1254, column: 54, scope: !6360)
!6362 = !DILocation(line: 1254, column: 68, scope: !6360)
!6363 = !DILocation(line: 1254, column: 26, scope: !6360)
!6364 = !DILocation(line: 1254, column: 26, scope: !6365)
!6365 = !DILexicalBlockFile(scope: !6349, file: !897, discriminator: 3)
!6366 = !DILocation(line: 1254, column: 24, scope: !6365)
!6367 = !DILocation(line: 1257, column: 32, scope: !6349)
!6368 = !DILocation(line: 1257, column: 40, scope: !6349)
!6369 = !DILocation(line: 1257, column: 31, scope: !6349)
!6370 = !DILocation(line: 1257, column: 48, scope: !6355)
!6371 = !DILocation(line: 1257, column: 31, scope: !6355)
!6372 = !DILocation(line: 1257, column: 61, scope: !6360)
!6373 = !DILocation(line: 1257, column: 59, scope: !6360)
!6374 = !DILocation(line: 1257, column: 31, scope: !6360)
!6375 = !DILocation(line: 1257, column: 31, scope: !6365)
!6376 = !DILocation(line: 1257, column: 28, scope: !6365)
!6377 = !DILocation(line: 1258, column: 21, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6349, file: !897, line: 1258, column: 21)
!6379 = !DILocation(line: 1258, column: 32, scope: !6378)
!6380 = !DILocation(line: 1258, column: 30, scope: !6378)
!6381 = !DILocation(line: 1258, column: 21, scope: !6349)
!6382 = !DILocation(line: 1259, column: 32, scope: !6378)
!6383 = !DILocation(line: 1259, column: 30, scope: !6378)
!6384 = !DILocation(line: 1259, column: 21, scope: !6378)
!6385 = !DILocation(line: 1261, column: 46, scope: !6349)
!6386 = !DILocation(line: 1261, column: 53, scope: !6349)
!6387 = !DILocation(line: 1261, column: 70, scope: !6349)
!6388 = !DILocation(line: 1261, column: 67, scope: !6349)
!6389 = !DILocation(line: 1261, column: 42, scope: !6349)
!6390 = !DILocation(line: 1262, column: 36, scope: !6349)
!6391 = !DILocation(line: 1262, column: 31, scope: !6349)
!6392 = !DILocation(line: 1262, column: 34, scope: !6349)
!6393 = !DILocation(line: 1263, column: 13, scope: !6349)
!6394 = !DILocation(line: 1250, column: 66, scope: !6395)
!6395 = !DILexicalBlockFile(scope: !6343, file: !897, discriminator: 2)
!6396 = !DILocation(line: 1250, column: 13, scope: !6395)
!6397 = distinct !{!6397, !6398}
!6398 = !DILocation(line: 1250, column: 13, scope: !6339)
!6399 = !DILocation(line: 1265, column: 27, scope: !6339)
!6400 = !DILocation(line: 1266, column: 9, scope: !6339)
!6401 = !DILocation(line: 1249, column: 61, scope: !6402)
!6402 = !DILexicalBlockFile(scope: !6330, file: !897, discriminator: 2)
!6403 = !DILocation(line: 1249, column: 9, scope: !6402)
!6404 = distinct !{!6404, !6405}
!6405 = !DILocation(line: 1249, column: 9, scope: !6308)
!6406 = !DILocation(line: 1268, column: 63, scope: !6308)
!6407 = !DILocation(line: 1268, column: 50, scope: !6308)
!6408 = !DILocation(line: 1268, column: 30, scope: !6308)
!6409 = !DILocation(line: 1268, column: 35, scope: !6308)
!6410 = !DILocation(line: 1268, column: 9, scope: !6308)
!6411 = !DILocation(line: 1268, column: 14, scope: !6308)
!6412 = !DILocation(line: 1268, column: 48, scope: !6308)
!6413 = !DILocation(line: 1270, column: 34, scope: !6308)
!6414 = !DILocation(line: 1270, column: 29, scope: !6308)
!6415 = !DILocation(line: 1270, column: 32, scope: !6308)
!6416 = !DILocation(line: 1271, column: 5, scope: !6308)
!6417 = !DILocation(line: 1241, column: 58, scope: !6418)
!6418 = !DILexicalBlockFile(scope: !6302, file: !897, discriminator: 2)
!6419 = !DILocation(line: 1241, column: 5, scope: !6418)
!6420 = distinct !{!6420, !6421}
!6421 = !DILocation(line: 1241, column: 5, scope: !6268)
!6422 = !DILocation(line: 1272, column: 1, scope: !6268)
!6423 = distinct !DISubprogram(name: "number_sbits", scope: !897, file: !897, line: 467, type: !6424, isLocal: true, isDefinition: true, scopeLine: 468, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6424 = !DISubroutineType(types: !6425)
!6425 = !{!939, !939}
!6426 = !DILocalVariable(name: "number", arg: 1, scope: !6423, file: !897, line: 467, type: !939)
!6427 = !DILocation(line: 467, column: 36, scope: !6423)
!6428 = !DILocation(line: 469, column: 9, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6423, file: !897, line: 469, column: 9)
!6430 = !DILocation(line: 469, column: 16, scope: !6429)
!6431 = !DILocation(line: 469, column: 9, scope: !6423)
!6432 = !DILocation(line: 470, column: 15, scope: !6429)
!6433 = !DILocation(line: 470, column: 9, scope: !6429)
!6434 = !DILocation(line: 472, column: 35, scope: !6423)
!6435 = !DILocation(line: 472, column: 43, scope: !6423)
!6436 = !DILocation(line: 472, column: 34, scope: !6423)
!6437 = !DILocation(line: 472, column: 51, scope: !6438)
!6438 = !DILexicalBlockFile(scope: !6423, file: !897, discriminator: 1)
!6439 = !DILocation(line: 472, column: 34, scope: !6438)
!6440 = !DILocation(line: 472, column: 64, scope: !6441)
!6441 = !DILexicalBlockFile(scope: !6423, file: !897, discriminator: 2)
!6442 = !DILocation(line: 472, column: 62, scope: !6441)
!6443 = !DILocation(line: 472, column: 34, scope: !6441)
!6444 = !DILocation(line: 472, column: 34, scope: !6445)
!6445 = !DILexicalBlockFile(scope: !6423, file: !897, discriminator: 3)
!6446 = !DILocation(line: 472, column: 74, scope: !6445)
!6447 = !DILocation(line: 472, column: 18, scope: !6445)
!6448 = !DILocation(line: 472, column: 16, scope: !6445)
!6449 = !DILocation(line: 472, column: 79, scope: !6445)
!6450 = !DILocation(line: 472, column: 87, scope: !6445)
!6451 = !DILocation(line: 472, column: 86, scope: !6445)
!6452 = !DILocation(line: 472, column: 85, scope: !6445)
!6453 = !DILocation(line: 472, column: 83, scope: !6445)
!6454 = !DILocation(line: 472, column: 5, scope: !6445)
!6455 = distinct !DISubprogram(name: "determine_quant_step_size", scope: !897, file: !897, line: 1324, type: !3126, isLocal: true, isDefinition: true, scopeLine: 1325, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6456 = !DILocalVariable(name: "ctx", arg: 1, scope: !6455, file: !897, line: 1324, type: !1749)
!6457 = !DILocation(line: 1324, column: 57, scope: !6455)
!6458 = !DILocalVariable(name: "dp", scope: !6455, file: !897, line: 1326, type: !955)
!6459 = !DILocation(line: 1326, column: 21, scope: !6455)
!6460 = !DILocation(line: 1326, column: 26, scope: !6455)
!6461 = !DILocation(line: 1326, column: 31, scope: !6455)
!6462 = !DILocalVariable(name: "rh", scope: !6455, file: !897, line: 1327, type: !1835)
!6463 = !DILocation(line: 1327, column: 20, scope: !6455)
!6464 = !DILocation(line: 1327, column: 25, scope: !6455)
!6465 = !DILocation(line: 1327, column: 30, scope: !6455)
!6466 = !DILocalVariable(name: "mp", scope: !6455, file: !897, line: 1328, type: !3945)
!6467 = !DILocation(line: 1328, column: 19, scope: !6455)
!6468 = !DILocation(line: 1328, column: 25, scope: !6455)
!6469 = !DILocation(line: 1328, column: 29, scope: !6455)
!6470 = !DILocalVariable(name: "sample_buffer", scope: !6455, file: !897, line: 1329, type: !1767)
!6471 = !DILocation(line: 1329, column: 14, scope: !6455)
!6472 = !DILocation(line: 1329, column: 30, scope: !6455)
!6473 = !DILocation(line: 1329, column: 35, scope: !6455)
!6474 = !DILocalVariable(name: "sample_mask", scope: !6455, file: !897, line: 1330, type: !937)
!6475 = !DILocation(line: 1330, column: 13, scope: !6455)
!6476 = !DILocalVariable(name: "channel", scope: !6455, file: !897, line: 1331, type: !993)
!6477 = !DILocation(line: 1331, column: 18, scope: !6455)
!6478 = !DILocalVariable(name: "i", scope: !6455, file: !897, line: 1332, type: !939)
!6479 = !DILocation(line: 1332, column: 9, scope: !6455)
!6480 = !DILocation(line: 1334, column: 5, scope: !6455)
!6481 = !DILocation(line: 1336, column: 12, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6455, file: !897, line: 1336, column: 5)
!6483 = !DILocation(line: 1336, column: 10, scope: !6482)
!6484 = !DILocation(line: 1336, column: 17, scope: !6485)
!6485 = !DILexicalBlockFile(scope: !6486, file: !897, discriminator: 1)
!6486 = distinct !DILexicalBlock(scope: !6482, file: !897, line: 1336, column: 5)
!6487 = !DILocation(line: 1336, column: 21, scope: !6485)
!6488 = !DILocation(line: 1336, column: 26, scope: !6485)
!6489 = !DILocation(line: 1336, column: 19, scope: !6485)
!6490 = !DILocation(line: 1336, column: 5, scope: !6485)
!6491 = !DILocation(line: 1337, column: 22, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !897, line: 1337, column: 9)
!6493 = distinct !DILexicalBlock(scope: !6486, file: !897, line: 1336, column: 50)
!6494 = !DILocation(line: 1337, column: 14, scope: !6492)
!6495 = !DILocation(line: 1337, column: 27, scope: !6496)
!6496 = !DILexicalBlockFile(scope: !6497, file: !897, discriminator: 1)
!6497 = distinct !DILexicalBlock(scope: !6492, file: !897, line: 1337, column: 9)
!6498 = !DILocation(line: 1337, column: 38, scope: !6496)
!6499 = !DILocation(line: 1337, column: 42, scope: !6496)
!6500 = !DILocation(line: 1337, column: 35, scope: !6496)
!6501 = !DILocation(line: 1337, column: 9, scope: !6496)
!6502 = !DILocation(line: 1338, column: 51, scope: !6497)
!6503 = !DILocation(line: 1338, column: 37, scope: !6497)
!6504 = !DILocation(line: 1338, column: 25, scope: !6497)
!6505 = !DILocation(line: 1338, column: 13, scope: !6497)
!6506 = !DILocation(line: 1338, column: 34, scope: !6497)
!6507 = !DILocation(line: 1337, column: 62, scope: !6508)
!6508 = !DILexicalBlockFile(scope: !6497, file: !897, discriminator: 2)
!6509 = !DILocation(line: 1337, column: 9, scope: !6508)
!6510 = distinct !{!6510, !6511}
!6511 = !DILocation(line: 1337, column: 9, scope: !6493)
!6512 = !DILocation(line: 1340, column: 23, scope: !6493)
!6513 = !DILocation(line: 1341, column: 5, scope: !6493)
!6514 = !DILocation(line: 1336, column: 46, scope: !6515)
!6515 = !DILexicalBlockFile(scope: !6486, file: !897, discriminator: 2)
!6516 = !DILocation(line: 1336, column: 5, scope: !6515)
!6517 = distinct !{!6517, !6518}
!6518 = !DILocation(line: 1336, column: 5, scope: !6455)
!6519 = !DILocation(line: 1343, column: 18, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6455, file: !897, line: 1343, column: 5)
!6521 = !DILocation(line: 1343, column: 10, scope: !6520)
!6522 = !DILocation(line: 1343, column: 23, scope: !6523)
!6523 = !DILexicalBlockFile(scope: !6524, file: !897, discriminator: 1)
!6524 = distinct !DILexicalBlock(scope: !6520, file: !897, line: 1343, column: 5)
!6525 = !DILocation(line: 1343, column: 34, scope: !6523)
!6526 = !DILocation(line: 1343, column: 38, scope: !6523)
!6527 = !DILocation(line: 1343, column: 31, scope: !6523)
!6528 = !DILocation(line: 1343, column: 5, scope: !6523)
!6529 = !DILocation(line: 1344, column: 75, scope: !6524)
!6530 = !DILocation(line: 1344, column: 63, scope: !6524)
!6531 = !DILocation(line: 1344, column: 40, scope: !6524)
!6532 = !DILocation(line: 1344, column: 97, scope: !6524)
!6533 = !DILocation(line: 1344, column: 87, scope: !6524)
!6534 = !DILocation(line: 1344, column: 91, scope: !6524)
!6535 = !DILocation(line: 1344, column: 85, scope: !6524)
!6536 = !DILocation(line: 1344, column: 29, scope: !6524)
!6537 = !DILocation(line: 1344, column: 9, scope: !6524)
!6538 = !DILocation(line: 1344, column: 13, scope: !6524)
!6539 = !DILocation(line: 1344, column: 38, scope: !6524)
!6540 = !DILocation(line: 1343, column: 58, scope: !6541)
!6541 = !DILexicalBlockFile(scope: !6524, file: !897, discriminator: 2)
!6542 = !DILocation(line: 1343, column: 5, scope: !6541)
!6543 = distinct !{!6543, !6544}
!6544 = !DILocation(line: 1343, column: 5, scope: !6455)
!6545 = !DILocation(line: 1345, column: 1, scope: !6455)
!6546 = distinct !DISubprogram(name: "lossless_matrix_coeffs", scope: !897, file: !897, line: 1499, type: !3126, isLocal: true, isDefinition: true, scopeLine: 1500, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6547 = !DILocalVariable(name: "ctx", arg: 1, scope: !6546, file: !897, line: 1499, type: !1749)
!6548 = !DILocation(line: 1499, column: 54, scope: !6546)
!6549 = !DILocalVariable(name: "dp", scope: !6546, file: !897, line: 1501, type: !955)
!6550 = !DILocation(line: 1501, column: 21, scope: !6546)
!6551 = !DILocation(line: 1501, column: 26, scope: !6546)
!6552 = !DILocation(line: 1501, column: 31, scope: !6546)
!6553 = !DILocalVariable(name: "mp", scope: !6546, file: !897, line: 1502, type: !3945)
!6554 = !DILocation(line: 1502, column: 19, scope: !6546)
!6555 = !DILocation(line: 1502, column: 25, scope: !6546)
!6556 = !DILocation(line: 1502, column: 29, scope: !6546)
!6557 = !DILocalVariable(name: "shift", scope: !6546, file: !897, line: 1503, type: !993)
!6558 = !DILocation(line: 1503, column: 18, scope: !6546)
!6559 = !DILocalVariable(name: "channel", scope: !6546, file: !897, line: 1504, type: !993)
!6560 = !DILocation(line: 1504, column: 18, scope: !6546)
!6561 = !DILocalVariable(name: "mat", scope: !6546, file: !897, line: 1505, type: !939)
!6562 = !DILocation(line: 1505, column: 9, scope: !6546)
!6563 = !DILocalVariable(name: "mode", scope: !6546, file: !897, line: 1506, type: !914)
!6564 = !DILocation(line: 1506, column: 20, scope: !6546)
!6565 = !DILocation(line: 1509, column: 9, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6546, file: !897, line: 1509, column: 9)
!6567 = !DILocation(line: 1509, column: 14, scope: !6566)
!6568 = !DILocation(line: 1509, column: 27, scope: !6566)
!6569 = !DILocation(line: 1509, column: 31, scope: !6566)
!6570 = !DILocation(line: 1509, column: 9, scope: !6546)
!6571 = !DILocation(line: 1510, column: 9, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6566, file: !897, line: 1509, column: 37)
!6573 = !DILocation(line: 1510, column: 13, scope: !6572)
!6574 = !DILocation(line: 1510, column: 19, scope: !6572)
!6575 = !DILocation(line: 1511, column: 9, scope: !6572)
!6576 = !DILocation(line: 1514, column: 33, scope: !6546)
!6577 = !DILocation(line: 1514, column: 12, scope: !6546)
!6578 = !DILocation(line: 1514, column: 10, scope: !6546)
!6579 = !DILocation(line: 1516, column: 12, scope: !6546)
!6580 = !DILocation(line: 1516, column: 5, scope: !6546)
!6581 = !DILocation(line: 1520, column: 13, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6546, file: !897, line: 1516, column: 18)
!6583 = !DILocation(line: 1520, column: 17, scope: !6582)
!6584 = !DILocation(line: 1520, column: 23, scope: !6582)
!6585 = !DILocation(line: 1521, column: 13, scope: !6582)
!6586 = !DILocation(line: 1523, column: 13, scope: !6582)
!6587 = !DILocation(line: 1523, column: 17, scope: !6582)
!6588 = !DILocation(line: 1523, column: 23, scope: !6582)
!6589 = !DILocation(line: 1524, column: 13, scope: !6582)
!6590 = !DILocation(line: 1524, column: 17, scope: !6582)
!6591 = !DILocation(line: 1524, column: 26, scope: !6582)
!6592 = !DILocation(line: 1525, column: 13, scope: !6582)
!6593 = !DILocation(line: 1525, column: 17, scope: !6582)
!6594 = !DILocation(line: 1525, column: 29, scope: !6582)
!6595 = !DILocation(line: 1525, column: 40, scope: !6582)
!6596 = !DILocation(line: 1525, column: 44, scope: !6582)
!6597 = !DILocation(line: 1525, column: 56, scope: !6582)
!6598 = !DILocation(line: 1526, column: 13, scope: !6582)
!6599 = !DILocation(line: 1526, column: 17, scope: !6582)
!6600 = !DILocation(line: 1526, column: 29, scope: !6582)
!6601 = !DILocation(line: 1526, column: 40, scope: !6582)
!6602 = !DILocation(line: 1526, column: 44, scope: !6582)
!6603 = !DILocation(line: 1526, column: 56, scope: !6582)
!6604 = !DILocation(line: 1527, column: 13, scope: !6582)
!6605 = !DILocation(line: 1527, column: 17, scope: !6582)
!6606 = !DILocation(line: 1527, column: 29, scope: !6582)
!6607 = !DILocation(line: 1527, column: 40, scope: !6582)
!6608 = !DILocation(line: 1527, column: 44, scope: !6582)
!6609 = !DILocation(line: 1527, column: 56, scope: !6582)
!6610 = !DILocation(line: 1528, column: 13, scope: !6582)
!6611 = !DILocation(line: 1528, column: 17, scope: !6582)
!6612 = !DILocation(line: 1528, column: 29, scope: !6582)
!6613 = !DILocation(line: 1528, column: 40, scope: !6582)
!6614 = !DILocation(line: 1528, column: 44, scope: !6582)
!6615 = !DILocation(line: 1528, column: 56, scope: !6582)
!6616 = !DILocation(line: 1529, column: 13, scope: !6582)
!6617 = !DILocation(line: 1531, column: 13, scope: !6582)
!6618 = !DILocation(line: 1531, column: 17, scope: !6582)
!6619 = !DILocation(line: 1531, column: 23, scope: !6582)
!6620 = !DILocation(line: 1532, column: 13, scope: !6582)
!6621 = !DILocation(line: 1532, column: 17, scope: !6582)
!6622 = !DILocation(line: 1532, column: 26, scope: !6582)
!6623 = !DILocation(line: 1533, column: 13, scope: !6582)
!6624 = !DILocation(line: 1533, column: 17, scope: !6582)
!6625 = !DILocation(line: 1533, column: 29, scope: !6582)
!6626 = !DILocation(line: 1533, column: 40, scope: !6582)
!6627 = !DILocation(line: 1533, column: 44, scope: !6582)
!6628 = !DILocation(line: 1533, column: 56, scope: !6582)
!6629 = !DILocation(line: 1534, column: 13, scope: !6582)
!6630 = !DILocation(line: 1534, column: 17, scope: !6582)
!6631 = !DILocation(line: 1534, column: 29, scope: !6582)
!6632 = !DILocation(line: 1534, column: 40, scope: !6582)
!6633 = !DILocation(line: 1534, column: 44, scope: !6582)
!6634 = !DILocation(line: 1534, column: 56, scope: !6582)
!6635 = !DILocation(line: 1535, column: 13, scope: !6582)
!6636 = !DILocation(line: 1535, column: 17, scope: !6582)
!6637 = !DILocation(line: 1535, column: 29, scope: !6582)
!6638 = !DILocation(line: 1535, column: 40, scope: !6582)
!6639 = !DILocation(line: 1535, column: 44, scope: !6582)
!6640 = !DILocation(line: 1535, column: 56, scope: !6582)
!6641 = !DILocation(line: 1536, column: 13, scope: !6582)
!6642 = !DILocation(line: 1536, column: 17, scope: !6582)
!6643 = !DILocation(line: 1536, column: 29, scope: !6582)
!6644 = !DILocation(line: 1536, column: 40, scope: !6582)
!6645 = !DILocation(line: 1536, column: 44, scope: !6582)
!6646 = !DILocation(line: 1536, column: 56, scope: !6582)
!6647 = !DILocation(line: 1537, column: 13, scope: !6582)
!6648 = !DILocation(line: 1540, column: 14, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6546, file: !897, line: 1540, column: 5)
!6650 = !DILocation(line: 1540, column: 10, scope: !6649)
!6651 = !DILocation(line: 1540, column: 19, scope: !6652)
!6652 = !DILexicalBlockFile(scope: !6653, file: !897, discriminator: 1)
!6653 = distinct !DILexicalBlock(scope: !6649, file: !897, line: 1540, column: 5)
!6654 = !DILocation(line: 1540, column: 25, scope: !6652)
!6655 = !DILocation(line: 1540, column: 29, scope: !6652)
!6656 = !DILocation(line: 1540, column: 23, scope: !6652)
!6657 = !DILocation(line: 1540, column: 5, scope: !6652)
!6658 = !DILocation(line: 1541, column: 28, scope: !6653)
!6659 = !DILocation(line: 1541, column: 33, scope: !6653)
!6660 = !DILocation(line: 1541, column: 9, scope: !6653)
!6661 = !DILocation(line: 1540, column: 39, scope: !6662)
!6662 = !DILexicalBlockFile(scope: !6653, file: !897, discriminator: 2)
!6663 = !DILocation(line: 1540, column: 5, scope: !6662)
!6664 = distinct !{!6664, !6665}
!6665 = !DILocation(line: 1540, column: 5, scope: !6546)
!6666 = !DILocation(line: 1543, column: 18, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6546, file: !897, line: 1543, column: 5)
!6668 = !DILocation(line: 1543, column: 10, scope: !6667)
!6669 = !DILocation(line: 1543, column: 23, scope: !6670)
!6670 = !DILexicalBlockFile(scope: !6671, file: !897, discriminator: 1)
!6671 = distinct !DILexicalBlock(scope: !6667, file: !897, line: 1543, column: 5)
!6672 = !DILocation(line: 1543, column: 33, scope: !6670)
!6673 = !DILocation(line: 1543, column: 38, scope: !6670)
!6674 = !DILocation(line: 1543, column: 31, scope: !6670)
!6675 = !DILocation(line: 1543, column: 5, scope: !6670)
!6676 = !DILocation(line: 1544, column: 30, scope: !6671)
!6677 = !DILocation(line: 1544, column: 19, scope: !6671)
!6678 = !DILocation(line: 1544, column: 9, scope: !6671)
!6679 = !DILocation(line: 1544, column: 13, scope: !6671)
!6680 = !DILocation(line: 1544, column: 28, scope: !6671)
!6681 = !DILocation(line: 1543, column: 59, scope: !6682)
!6682 = !DILexicalBlockFile(scope: !6671, file: !897, discriminator: 2)
!6683 = !DILocation(line: 1543, column: 5, scope: !6682)
!6684 = distinct !{!6684, !6685}
!6685 = !DILocation(line: 1543, column: 5, scope: !6546)
!6686 = !DILocation(line: 1545, column: 1, scope: !6546)
!6687 = distinct !DISubprogram(name: "determine_filters", scope: !897, file: !897, line: 1429, type: !3126, isLocal: true, isDefinition: true, scopeLine: 1430, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6688 = !DILocalVariable(name: "ctx", arg: 1, scope: !6687, file: !897, line: 1429, type: !1749)
!6689 = !DILocation(line: 1429, column: 49, scope: !6687)
!6690 = !DILocalVariable(name: "rh", scope: !6687, file: !897, line: 1431, type: !1835)
!6691 = !DILocation(line: 1431, column: 20, scope: !6687)
!6692 = !DILocation(line: 1431, column: 25, scope: !6687)
!6693 = !DILocation(line: 1431, column: 30, scope: !6687)
!6694 = !DILocalVariable(name: "channel", scope: !6687, file: !897, line: 1432, type: !939)
!6695 = !DILocation(line: 1432, column: 9, scope: !6687)
!6696 = !DILocalVariable(name: "filter", scope: !6687, file: !897, line: 1432, type: !939)
!6697 = !DILocation(line: 1432, column: 18, scope: !6687)
!6698 = !DILocation(line: 1434, column: 20, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6687, file: !897, line: 1434, column: 5)
!6700 = !DILocation(line: 1434, column: 24, scope: !6699)
!6701 = !DILocation(line: 1434, column: 18, scope: !6699)
!6702 = !DILocation(line: 1434, column: 10, scope: !6699)
!6703 = !DILocation(line: 1434, column: 37, scope: !6704)
!6704 = !DILexicalBlockFile(scope: !6705, file: !897, discriminator: 1)
!6705 = distinct !DILexicalBlock(scope: !6699, file: !897, line: 1434, column: 5)
!6706 = !DILocation(line: 1434, column: 48, scope: !6704)
!6707 = !DILocation(line: 1434, column: 52, scope: !6704)
!6708 = !DILocation(line: 1434, column: 45, scope: !6704)
!6709 = !DILocation(line: 1434, column: 5, scope: !6704)
!6710 = !DILocation(line: 1435, column: 21, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6712, file: !897, line: 1435, column: 9)
!6712 = distinct !DILexicalBlock(scope: !6705, file: !897, line: 1434, column: 76)
!6713 = !DILocation(line: 1435, column: 14, scope: !6711)
!6714 = !DILocation(line: 1435, column: 26, scope: !6715)
!6715 = !DILexicalBlockFile(scope: !6716, file: !897, discriminator: 1)
!6716 = distinct !DILexicalBlock(scope: !6711, file: !897, line: 1435, column: 9)
!6717 = !DILocation(line: 1435, column: 33, scope: !6715)
!6718 = !DILocation(line: 1435, column: 9, scope: !6715)
!6719 = !DILocation(line: 1436, column: 31, scope: !6716)
!6720 = !DILocation(line: 1436, column: 36, scope: !6716)
!6721 = !DILocation(line: 1436, column: 45, scope: !6716)
!6722 = !DILocation(line: 1436, column: 13, scope: !6716)
!6723 = !DILocation(line: 1435, column: 44, scope: !6724)
!6724 = !DILexicalBlockFile(scope: !6716, file: !897, discriminator: 2)
!6725 = !DILocation(line: 1435, column: 9, scope: !6724)
!6726 = distinct !{!6726, !6727}
!6727 = !DILocation(line: 1435, column: 9, scope: !6712)
!6728 = !DILocation(line: 1437, column: 5, scope: !6712)
!6729 = !DILocation(line: 1434, column: 72, scope: !6730)
!6730 = !DILexicalBlockFile(scope: !6705, file: !897, discriminator: 2)
!6731 = !DILocation(line: 1434, column: 5, scope: !6730)
!6732 = distinct !{!6732, !6733}
!6733 = !DILocation(line: 1434, column: 5, scope: !6687)
!6734 = !DILocation(line: 1438, column: 1, scope: !6687)
!6735 = distinct !DISubprogram(name: "apply_filters", scope: !897, file: !897, line: 1874, type: !3126, isLocal: true, isDefinition: true, scopeLine: 1875, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6736 = !DILocalVariable(name: "ctx", arg: 1, scope: !6735, file: !897, line: 1874, type: !1749)
!6737 = !DILocation(line: 1874, column: 45, scope: !6735)
!6738 = !DILocalVariable(name: "rh", scope: !6735, file: !897, line: 1876, type: !1835)
!6739 = !DILocation(line: 1876, column: 20, scope: !6735)
!6740 = !DILocation(line: 1876, column: 25, scope: !6735)
!6741 = !DILocation(line: 1876, column: 30, scope: !6735)
!6742 = !DILocalVariable(name: "channel", scope: !6735, file: !897, line: 1877, type: !939)
!6743 = !DILocation(line: 1877, column: 9, scope: !6735)
!6744 = !DILocation(line: 1879, column: 20, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6735, file: !897, line: 1879, column: 5)
!6746 = !DILocation(line: 1879, column: 24, scope: !6745)
!6747 = !DILocation(line: 1879, column: 18, scope: !6745)
!6748 = !DILocation(line: 1879, column: 10, scope: !6745)
!6749 = !DILocation(line: 1879, column: 37, scope: !6750)
!6750 = !DILexicalBlockFile(scope: !6751, file: !897, discriminator: 1)
!6751 = distinct !DILexicalBlock(scope: !6745, file: !897, line: 1879, column: 5)
!6752 = !DILocation(line: 1879, column: 48, scope: !6750)
!6753 = !DILocation(line: 1879, column: 52, scope: !6750)
!6754 = !DILocation(line: 1879, column: 45, scope: !6750)
!6755 = !DILocation(line: 1879, column: 5, scope: !6750)
!6756 = !DILocation(line: 1880, column: 26, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !897, line: 1880, column: 13)
!6758 = distinct !DILexicalBlock(scope: !6751, file: !897, line: 1879, column: 76)
!6759 = !DILocation(line: 1880, column: 31, scope: !6757)
!6760 = !DILocation(line: 1880, column: 13, scope: !6757)
!6761 = !DILocation(line: 1880, column: 40, scope: !6757)
!6762 = !DILocation(line: 1880, column: 13, scope: !6758)
!6763 = !DILocation(line: 1883, column: 31, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6757, file: !897, line: 1880, column: 45)
!6765 = !DILocation(line: 1883, column: 36, scope: !6764)
!6766 = !DILocation(line: 1883, column: 13, scope: !6764)
!6767 = !DILocation(line: 1884, column: 31, scope: !6764)
!6768 = !DILocation(line: 1884, column: 36, scope: !6764)
!6769 = !DILocation(line: 1884, column: 13, scope: !6764)
!6770 = !DILocation(line: 1885, column: 26, scope: !6764)
!6771 = !DILocation(line: 1885, column: 31, scope: !6764)
!6772 = !DILocation(line: 1885, column: 13, scope: !6764)
!6773 = !DILocation(line: 1886, column: 9, scope: !6764)
!6774 = !DILocation(line: 1887, column: 5, scope: !6758)
!6775 = !DILocation(line: 1879, column: 72, scope: !6776)
!6776 = !DILexicalBlockFile(scope: !6751, file: !897, discriminator: 2)
!6777 = !DILocation(line: 1879, column: 5, scope: !6776)
!6778 = distinct !{!6778, !6779}
!6779 = !DILocation(line: 1879, column: 5, scope: !6735)
!6780 = !DILocation(line: 1888, column: 1, scope: !6735)
!6781 = distinct !DISubprogram(name: "copy_restart_frame_params", scope: !897, file: !897, line: 379, type: !6782, isLocal: true, isDefinition: true, scopeLine: 381, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6782 = !DISubroutineType(types: !6783)
!6783 = !{null, !1749, !993}
!6784 = !DILocalVariable(name: "ctx", arg: 1, scope: !6781, file: !897, line: 379, type: !1749)
!6785 = !DILocation(line: 379, column: 57, scope: !6781)
!6786 = !DILocalVariable(name: "substr", arg: 2, scope: !6781, file: !897, line: 380, type: !993)
!6787 = !DILocation(line: 380, column: 52, scope: !6781)
!6788 = !DILocalVariable(name: "index", scope: !6781, file: !897, line: 382, type: !993)
!6789 = !DILocation(line: 382, column: 18, scope: !6781)
!6790 = !DILocation(line: 384, column: 16, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6781, file: !897, line: 384, column: 5)
!6792 = !DILocation(line: 384, column: 10, scope: !6791)
!6793 = !DILocation(line: 384, column: 21, scope: !6794)
!6794 = !DILexicalBlockFile(scope: !6795, file: !897, discriminator: 1)
!6795 = distinct !DILexicalBlock(scope: !6791, file: !897, line: 384, column: 5)
!6796 = !DILocation(line: 384, column: 29, scope: !6794)
!6797 = !DILocation(line: 384, column: 34, scope: !6794)
!6798 = !DILocation(line: 384, column: 27, scope: !6794)
!6799 = !DILocation(line: 384, column: 5, scope: !6794)
!6800 = !DILocalVariable(name: "dp", scope: !6801, file: !897, line: 385, type: !955)
!6801 = distinct !DILexicalBlock(scope: !6795, file: !897, line: 384, column: 64)
!6802 = !DILocation(line: 385, column: 25, scope: !6801)
!6803 = !DILocation(line: 385, column: 30, scope: !6801)
!6804 = !DILocation(line: 385, column: 35, scope: !6801)
!6805 = !DILocation(line: 385, column: 57, scope: !6801)
!6806 = !DILocation(line: 385, column: 64, scope: !6801)
!6807 = !DILocation(line: 385, column: 69, scope: !6801)
!6808 = !DILocation(line: 385, column: 62, scope: !6801)
!6809 = !DILocation(line: 385, column: 55, scope: !6801)
!6810 = !DILocation(line: 385, column: 87, scope: !6801)
!6811 = !DILocation(line: 385, column: 85, scope: !6801)
!6812 = !DILocalVariable(name: "channel", scope: !6801, file: !897, line: 386, type: !993)
!6813 = !DILocation(line: 386, column: 22, scope: !6801)
!6814 = !DILocation(line: 388, column: 29, scope: !6801)
!6815 = !DILocation(line: 388, column: 33, scope: !6801)
!6816 = !DILocation(line: 388, column: 49, scope: !6801)
!6817 = !DILocation(line: 388, column: 54, scope: !6801)
!6818 = !DILocation(line: 388, column: 75, scope: !6801)
!6819 = !DILocation(line: 388, column: 9, scope: !6801)
!6820 = !DILocation(line: 390, column: 22, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6801, file: !897, line: 390, column: 9)
!6822 = !DILocation(line: 390, column: 14, scope: !6821)
!6823 = !DILocation(line: 390, column: 27, scope: !6824)
!6824 = !DILexicalBlockFile(scope: !6825, file: !897, discriminator: 1)
!6825 = distinct !DILexicalBlock(scope: !6821, file: !897, line: 390, column: 9)
!6826 = !DILocation(line: 390, column: 37, scope: !6824)
!6827 = !DILocation(line: 390, column: 42, scope: !6824)
!6828 = !DILocation(line: 390, column: 49, scope: !6824)
!6829 = !DILocation(line: 390, column: 35, scope: !6824)
!6830 = !DILocation(line: 390, column: 9, scope: !6824)
!6831 = !DILocalVariable(name: "cp", scope: !6832, file: !897, line: 391, type: !921)
!6832 = distinct !DILexicalBlock(scope: !6825, file: !897, line: 390, column: 70)
!6833 = !DILocation(line: 391, column: 28, scope: !6832)
!6834 = !DILocation(line: 391, column: 33, scope: !6832)
!6835 = !DILocation(line: 391, column: 38, scope: !6832)
!6836 = !DILocation(line: 391, column: 59, scope: !6832)
!6837 = !DILocation(line: 391, column: 66, scope: !6832)
!6838 = !DILocation(line: 391, column: 71, scope: !6832)
!6839 = !DILocation(line: 391, column: 78, scope: !6832)
!6840 = !DILocation(line: 391, column: 64, scope: !6832)
!6841 = !DILocation(line: 391, column: 57, scope: !6832)
!6842 = !DILocation(line: 391, column: 90, scope: !6832)
!6843 = !DILocation(line: 391, column: 88, scope: !6832)
!6844 = !DILocalVariable(name: "filter", scope: !6832, file: !897, line: 392, type: !993)
!6845 = !DILocation(line: 392, column: 26, scope: !6832)
!6846 = !DILocation(line: 394, column: 86, scope: !6832)
!6847 = !DILocation(line: 394, column: 44, scope: !6832)
!6848 = !DILocation(line: 394, column: 49, scope: !6832)
!6849 = !DILocation(line: 394, column: 70, scope: !6832)
!6850 = !DILocation(line: 394, column: 33, scope: !6832)
!6851 = !DILocation(line: 394, column: 13, scope: !6832)
!6852 = !DILocation(line: 394, column: 17, scope: !6832)
!6853 = !DILocation(line: 394, column: 42, scope: !6832)
!6854 = !DILocation(line: 395, column: 94, scope: !6832)
!6855 = !DILocation(line: 395, column: 48, scope: !6832)
!6856 = !DILocation(line: 395, column: 53, scope: !6832)
!6857 = !DILocation(line: 395, column: 74, scope: !6832)
!6858 = !DILocation(line: 395, column: 88, scope: !6832)
!6859 = !DILocation(line: 395, column: 37, scope: !6832)
!6860 = !DILocation(line: 395, column: 13, scope: !6832)
!6861 = !DILocation(line: 395, column: 17, scope: !6832)
!6862 = !DILocation(line: 395, column: 31, scope: !6832)
!6863 = !DILocation(line: 395, column: 46, scope: !6832)
!6864 = !DILocation(line: 397, column: 17, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6832, file: !897, line: 397, column: 17)
!6866 = !DILocation(line: 397, column: 17, scope: !6832)
!6867 = !DILocation(line: 398, column: 29, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6865, file: !897, line: 398, column: 17)
!6869 = !DILocation(line: 398, column: 22, scope: !6868)
!6870 = !DILocation(line: 398, column: 34, scope: !6871)
!6871 = !DILexicalBlockFile(scope: !6872, file: !897, discriminator: 1)
!6872 = distinct !DILexicalBlock(scope: !6868, file: !897, line: 398, column: 17)
!6873 = !DILocation(line: 398, column: 41, scope: !6871)
!6874 = !DILocation(line: 398, column: 17, scope: !6871)
!6875 = !DILocation(line: 399, column: 40, scope: !6872)
!6876 = !DILocation(line: 399, column: 69, scope: !6872)
!6877 = !DILocation(line: 399, column: 45, scope: !6872)
!6878 = !DILocation(line: 399, column: 50, scope: !6872)
!6879 = !DILocation(line: 399, column: 79, scope: !6872)
!6880 = !DILocation(line: 399, column: 21, scope: !6872)
!6881 = !DILocation(line: 398, column: 52, scope: !6882)
!6882 = !DILexicalBlockFile(scope: !6872, file: !897, discriminator: 2)
!6883 = !DILocation(line: 398, column: 17, scope: !6882)
!6884 = distinct !{!6884, !6885}
!6885 = !DILocation(line: 398, column: 17, scope: !6865)
!6886 = !DILocation(line: 399, column: 85, scope: !6887)
!6887 = !DILexicalBlockFile(scope: !6868, file: !897, discriminator: 1)
!6888 = !DILocation(line: 400, column: 9, scope: !6832)
!6889 = !DILocation(line: 390, column: 66, scope: !6890)
!6890 = !DILexicalBlockFile(scope: !6825, file: !897, discriminator: 2)
!6891 = !DILocation(line: 390, column: 9, scope: !6890)
!6892 = distinct !{!6892, !6893}
!6893 = !DILocation(line: 390, column: 9, scope: !6801)
!6894 = !DILocation(line: 401, column: 5, scope: !6801)
!6895 = !DILocation(line: 384, column: 60, scope: !6896)
!6896 = !DILexicalBlockFile(scope: !6795, file: !897, discriminator: 2)
!6897 = !DILocation(line: 384, column: 5, scope: !6896)
!6898 = distinct !{!6898, !6899}
!6899 = !DILocation(line: 384, column: 5, scope: !6781)
!6900 = !DILocation(line: 402, column: 1, scope: !6781)
!6901 = distinct !DISubprogram(name: "determine_bits", scope: !897, file: !897, line: 1734, type: !3126, isLocal: true, isDefinition: true, scopeLine: 1735, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6902 = !DILocalVariable(name: "a", arg: 1, scope: !6903, file: !6163, line: 127, type: !939)
!6903 = distinct !DISubprogram(name: "av_clip_c", scope: !6163, file: !6163, line: 127, type: !6904, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!6904 = !DISubroutineType(types: !6905)
!6905 = !{!939, !939, !939, !939}
!6906 = !DILocation(line: 127, column: 87, scope: !6903, inlinedAt: !6907)
!6907 = distinct !DILocation(line: 1765, column: 22, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !897, line: 1763, column: 30)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !897, line: 1763, column: 13)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !897, line: 1740, column: 62)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !897, line: 1740, column: 5)
!6912 = distinct !DILexicalBlock(scope: !6901, file: !897, line: 1740, column: 5)
!6913 = !DILocalVariable(name: "amin", arg: 2, scope: !6903, file: !6163, line: 127, type: !939)
!6914 = !DILocation(line: 127, column: 94, scope: !6903, inlinedAt: !6907)
!6915 = !DILocalVariable(name: "amax", arg: 3, scope: !6903, file: !6163, line: 127, type: !939)
!6916 = !DILocation(line: 127, column: 104, scope: !6903, inlinedAt: !6907)
!6917 = !DILocalVariable(name: "ctx", arg: 1, scope: !6901, file: !897, line: 1734, type: !1749)
!6918 = !DILocation(line: 1734, column: 46, scope: !6901)
!6919 = !DILocalVariable(name: "dp", scope: !6901, file: !897, line: 1736, type: !955)
!6920 = !DILocation(line: 1736, column: 21, scope: !6901)
!6921 = !DILocation(line: 1736, column: 26, scope: !6901)
!6922 = !DILocation(line: 1736, column: 31, scope: !6901)
!6923 = !DILocalVariable(name: "rh", scope: !6901, file: !897, line: 1737, type: !1835)
!6924 = !DILocation(line: 1737, column: 20, scope: !6901)
!6925 = !DILocation(line: 1737, column: 25, scope: !6901)
!6926 = !DILocation(line: 1737, column: 30, scope: !6901)
!6927 = !DILocalVariable(name: "channel", scope: !6901, file: !897, line: 1738, type: !993)
!6928 = !DILocation(line: 1738, column: 18, scope: !6901)
!6929 = !DILocation(line: 1740, column: 18, scope: !6912)
!6930 = !DILocation(line: 1740, column: 10, scope: !6912)
!6931 = !DILocation(line: 1740, column: 23, scope: !6932)
!6932 = !DILexicalBlockFile(scope: !6911, file: !897, discriminator: 1)
!6933 = !DILocation(line: 1740, column: 34, scope: !6932)
!6934 = !DILocation(line: 1740, column: 38, scope: !6932)
!6935 = !DILocation(line: 1740, column: 31, scope: !6932)
!6936 = !DILocation(line: 1740, column: 5, scope: !6932)
!6937 = !DILocalVariable(name: "cp", scope: !6910, file: !897, line: 1741, type: !921)
!6938 = !DILocation(line: 1741, column: 24, scope: !6910)
!6939 = !DILocation(line: 1741, column: 54, scope: !6910)
!6940 = !DILocation(line: 1741, column: 30, scope: !6910)
!6941 = !DILocation(line: 1741, column: 35, scope: !6910)
!6942 = !DILocalVariable(name: "sample_buffer", scope: !6910, file: !897, line: 1742, type: !1767)
!6943 = !DILocation(line: 1742, column: 18, scope: !6910)
!6944 = !DILocation(line: 1742, column: 34, scope: !6910)
!6945 = !DILocation(line: 1742, column: 39, scope: !6910)
!6946 = !DILocation(line: 1742, column: 55, scope: !6910)
!6947 = !DILocation(line: 1742, column: 53, scope: !6910)
!6948 = !DILocalVariable(name: "min", scope: !6910, file: !897, line: 1743, type: !938)
!6949 = !DILocation(line: 1743, column: 17, scope: !6910)
!6950 = !DILocalVariable(name: "max", scope: !6910, file: !897, line: 1743, type: !938)
!6951 = !DILocation(line: 1743, column: 33, scope: !6910)
!6952 = !DILocalVariable(name: "no_filters_used", scope: !6910, file: !897, line: 1744, type: !939)
!6953 = !DILocation(line: 1744, column: 13, scope: !6910)
!6954 = !DILocation(line: 1744, column: 32, scope: !6910)
!6955 = !DILocation(line: 1744, column: 36, scope: !6910)
!6956 = !DILocation(line: 1744, column: 53, scope: !6910)
!6957 = !DILocation(line: 1744, column: 31, scope: !6910)
!6958 = !DILocalVariable(name: "average", scope: !6910, file: !897, line: 1745, type: !939)
!6959 = !DILocation(line: 1745, column: 13, scope: !6910)
!6960 = !DILocalVariable(name: "offset", scope: !6910, file: !897, line: 1746, type: !939)
!6961 = !DILocation(line: 1746, column: 13, scope: !6910)
!6962 = !DILocalVariable(name: "i", scope: !6910, file: !897, line: 1747, type: !939)
!6963 = !DILocation(line: 1747, column: 13, scope: !6910)
!6964 = !DILocation(line: 1750, column: 16, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6910, file: !897, line: 1750, column: 9)
!6966 = !DILocation(line: 1750, column: 14, scope: !6965)
!6967 = !DILocation(line: 1750, column: 21, scope: !6968)
!6968 = !DILexicalBlockFile(scope: !6969, file: !897, discriminator: 1)
!6969 = distinct !DILexicalBlock(scope: !6965, file: !897, line: 1750, column: 9)
!6970 = !DILocation(line: 1750, column: 25, scope: !6968)
!6971 = !DILocation(line: 1750, column: 29, scope: !6968)
!6972 = !DILocation(line: 1750, column: 23, scope: !6968)
!6973 = !DILocation(line: 1750, column: 9, scope: !6968)
!6974 = !DILocalVariable(name: "sample", scope: !6975, file: !897, line: 1751, type: !938)
!6975 = distinct !DILexicalBlock(scope: !6969, file: !897, line: 1750, column: 45)
!6976 = !DILocation(line: 1751, column: 21, scope: !6975)
!6977 = !DILocation(line: 1751, column: 31, scope: !6975)
!6978 = !DILocation(line: 1751, column: 30, scope: !6975)
!6979 = !DILocation(line: 1751, column: 68, scope: !6975)
!6980 = !DILocation(line: 1751, column: 48, scope: !6975)
!6981 = !DILocation(line: 1751, column: 52, scope: !6975)
!6982 = !DILocation(line: 1751, column: 45, scope: !6975)
!6983 = !DILocation(line: 1752, column: 17, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6975, file: !897, line: 1752, column: 17)
!6985 = !DILocation(line: 1752, column: 26, scope: !6984)
!6986 = !DILocation(line: 1752, column: 24, scope: !6984)
!6987 = !DILocation(line: 1752, column: 17, scope: !6975)
!6988 = !DILocation(line: 1753, column: 23, scope: !6984)
!6989 = !DILocation(line: 1753, column: 21, scope: !6984)
!6990 = !DILocation(line: 1753, column: 17, scope: !6984)
!6991 = !DILocation(line: 1754, column: 17, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6975, file: !897, line: 1754, column: 17)
!6993 = !DILocation(line: 1754, column: 26, scope: !6992)
!6994 = !DILocation(line: 1754, column: 24, scope: !6992)
!6995 = !DILocation(line: 1754, column: 17, scope: !6975)
!6996 = !DILocation(line: 1755, column: 23, scope: !6992)
!6997 = !DILocation(line: 1755, column: 21, scope: !6992)
!6998 = !DILocation(line: 1755, column: 17, scope: !6992)
!6999 = !DILocation(line: 1756, column: 24, scope: !6975)
!7000 = !DILocation(line: 1756, column: 21, scope: !6975)
!7001 = !DILocation(line: 1757, column: 30, scope: !6975)
!7002 = !DILocation(line: 1757, column: 35, scope: !6975)
!7003 = !DILocation(line: 1757, column: 27, scope: !6975)
!7004 = !DILocation(line: 1758, column: 9, scope: !6975)
!7005 = !DILocation(line: 1750, column: 41, scope: !7006)
!7006 = !DILexicalBlockFile(scope: !6969, file: !897, discriminator: 2)
!7007 = !DILocation(line: 1750, column: 9, scope: !7006)
!7008 = distinct !{!7008, !7009}
!7009 = !DILocation(line: 1750, column: 9, scope: !6910)
!7010 = !DILocation(line: 1759, column: 20, scope: !6910)
!7011 = !DILocation(line: 1759, column: 24, scope: !6910)
!7012 = !DILocation(line: 1759, column: 17, scope: !6910)
!7013 = !DILocation(line: 1763, column: 13, scope: !6909)
!7014 = !DILocation(line: 1763, column: 13, scope: !6910)
!7015 = !DILocation(line: 1764, column: 30, scope: !6908)
!7016 = !DILocation(line: 1764, column: 35, scope: !6908)
!7017 = !DILocation(line: 1764, column: 44, scope: !6908)
!7018 = !DILocation(line: 1764, column: 49, scope: !6908)
!7019 = !DILocation(line: 1764, column: 76, scope: !6908)
!7020 = !DILocation(line: 1764, column: 55, scope: !6908)
!7021 = !DILocation(line: 1764, column: 60, scope: !6908)
!7022 = !DILocation(line: 1764, column: 13, scope: !6908)
!7023 = !DILocation(line: 1765, column: 32, scope: !6908)
!7024 = !DILocation(line: 1765, column: 22, scope: !6908)
!7025 = !DILocation(line: 132, column: 9, scope: !7026, inlinedAt: !6907)
!7026 = distinct !DILexicalBlock(scope: !6903, file: !6163, line: 132, column: 9)
!7027 = !DILocation(line: 132, column: 13, scope: !7026, inlinedAt: !6907)
!7028 = !DILocation(line: 132, column: 11, scope: !7026, inlinedAt: !6907)
!7029 = !DILocation(line: 132, column: 9, scope: !6903, inlinedAt: !6907)
!7030 = !DILocation(line: 132, column: 26, scope: !7031, inlinedAt: !6907)
!7031 = !DILexicalBlockFile(scope: !7026, file: !6163, discriminator: 1)
!7032 = !DILocation(line: 132, column: 19, scope: !7031, inlinedAt: !6907)
!7033 = !DILocation(line: 133, column: 14, scope: !7034, inlinedAt: !6907)
!7034 = distinct !DILexicalBlock(scope: !7026, file: !6163, line: 133, column: 14)
!7035 = !DILocation(line: 133, column: 18, scope: !7034, inlinedAt: !6907)
!7036 = !DILocation(line: 133, column: 16, scope: !7034, inlinedAt: !6907)
!7037 = !DILocation(line: 133, column: 14, scope: !7026, inlinedAt: !6907)
!7038 = !DILocation(line: 133, column: 31, scope: !7039, inlinedAt: !6907)
!7039 = !DILexicalBlockFile(scope: !7034, file: !6163, discriminator: 1)
!7040 = !DILocation(line: 133, column: 24, scope: !7039, inlinedAt: !6907)
!7041 = !DILocation(line: 134, column: 17, scope: !7034, inlinedAt: !6907)
!7042 = !DILocation(line: 134, column: 10, scope: !7034, inlinedAt: !6907)
!7043 = !DILocation(line: 135, column: 1, scope: !6903, inlinedAt: !6907)
!7044 = !DILocation(line: 1765, column: 20, scope: !6908)
!7045 = !DILocation(line: 1766, column: 9, scope: !6908)
!7046 = !DILocation(line: 1767, column: 37, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !6909, file: !897, line: 1766, column: 16)
!7048 = !DILocation(line: 1767, column: 42, scope: !7047)
!7049 = !DILocation(line: 1767, column: 51, scope: !7047)
!7050 = !DILocation(line: 1767, column: 59, scope: !7047)
!7051 = !DILocation(line: 1767, column: 64, scope: !7047)
!7052 = !DILocation(line: 1767, column: 91, scope: !7047)
!7053 = !DILocation(line: 1767, column: 70, scope: !7047)
!7054 = !DILocation(line: 1767, column: 75, scope: !7047)
!7055 = !DILocation(line: 1767, column: 13, scope: !7047)
!7056 = !DILocation(line: 1770, column: 16, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !6910, file: !897, line: 1770, column: 9)
!7058 = !DILocation(line: 1770, column: 14, scope: !7057)
!7059 = !DILocation(line: 1770, column: 21, scope: !7060)
!7060 = !DILexicalBlockFile(scope: !7061, file: !897, discriminator: 1)
!7061 = distinct !DILexicalBlock(scope: !7057, file: !897, line: 1770, column: 9)
!7062 = !DILocation(line: 1770, column: 23, scope: !7060)
!7063 = !DILocation(line: 1770, column: 9, scope: !7060)
!7064 = !DILocalVariable(name: "temp_bo", scope: !7065, file: !897, line: 1771, type: !1730)
!7065 = distinct !DILexicalBlock(scope: !7061, file: !897, line: 1770, column: 33)
!7066 = !DILocation(line: 1771, column: 24, scope: !7065)
!7067 = !DILocalVariable(name: "offset_max", scope: !7065, file: !897, line: 1772, type: !950)
!7068 = !DILocation(line: 1772, column: 21, scope: !7065)
!7069 = !DILocation(line: 1774, column: 34, scope: !7065)
!7070 = !DILocation(line: 1774, column: 39, scope: !7065)
!7071 = !DILocation(line: 1774, column: 48, scope: !7065)
!7072 = !DILocation(line: 1774, column: 50, scope: !7065)
!7073 = !DILocation(line: 1775, column: 34, scope: !7065)
!7074 = !DILocation(line: 1775, column: 39, scope: !7065)
!7075 = !DILocation(line: 1775, column: 44, scope: !7065)
!7076 = !DILocation(line: 1774, column: 13, scope: !7065)
!7077 = !DILocation(line: 1778, column: 17, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7065, file: !897, line: 1778, column: 17)
!7079 = !DILocation(line: 1778, column: 17, scope: !7065)
!7080 = !DILocation(line: 1779, column: 38, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7078, file: !897, line: 1778, column: 34)
!7082 = !DILocation(line: 1779, column: 28, scope: !7081)
!7083 = !DILocation(line: 1781, column: 31, scope: !7081)
!7084 = !DILocation(line: 1781, column: 36, scope: !7081)
!7085 = !DILocation(line: 1781, column: 45, scope: !7081)
!7086 = !DILocation(line: 1781, column: 47, scope: !7081)
!7087 = !DILocation(line: 1781, column: 60, scope: !7081)
!7088 = !DILocation(line: 1781, column: 52, scope: !7081)
!7089 = !DILocation(line: 1781, column: 64, scope: !7081)
!7090 = !DILocation(line: 1782, column: 29, scope: !7081)
!7091 = !DILocation(line: 1782, column: 34, scope: !7081)
!7092 = !DILocation(line: 1781, column: 17, scope: !7081)
!7093 = !DILocation(line: 1783, column: 31, scope: !7081)
!7094 = !DILocation(line: 1783, column: 36, scope: !7081)
!7095 = !DILocation(line: 1783, column: 45, scope: !7081)
!7096 = !DILocation(line: 1783, column: 47, scope: !7081)
!7097 = !DILocation(line: 1783, column: 52, scope: !7081)
!7098 = !DILocation(line: 1783, column: 63, scope: !7081)
!7099 = !DILocation(line: 1784, column: 29, scope: !7081)
!7100 = !DILocation(line: 1784, column: 34, scope: !7081)
!7101 = !DILocation(line: 1783, column: 17, scope: !7081)
!7102 = !DILocation(line: 1785, column: 13, scope: !7081)
!7103 = !DILocation(line: 1787, column: 43, scope: !7065)
!7104 = !DILocation(line: 1787, column: 13, scope: !7065)
!7105 = !DILocation(line: 1787, column: 34, scope: !7065)
!7106 = !DILocation(line: 1787, column: 18, scope: !7065)
!7107 = !DILocation(line: 1787, column: 48, scope: !7065)
!7108 = !DILocation(line: 1788, column: 9, scope: !7065)
!7109 = !DILocation(line: 1770, column: 29, scope: !7110)
!7110 = !DILexicalBlockFile(scope: !7061, file: !897, discriminator: 2)
!7111 = !DILocation(line: 1770, column: 9, scope: !7110)
!7112 = distinct !{!7112, !7113}
!7113 = !DILocation(line: 1770, column: 9, scope: !6910)
!7114 = !DILocation(line: 1789, column: 5, scope: !6910)
!7115 = !DILocation(line: 1740, column: 58, scope: !7116)
!7116 = !DILexicalBlockFile(scope: !6911, file: !897, discriminator: 2)
!7117 = !DILocation(line: 1740, column: 5, scope: !7116)
!7118 = distinct !{!7118, !7119}
!7119 = !DILocation(line: 1740, column: 5, scope: !6901)
!7120 = !DILocation(line: 1790, column: 1, scope: !6901)
!7121 = distinct !DISubprogram(name: "set_best_codebook", scope: !897, file: !897, line: 2000, type: !3126, isLocal: true, isDefinition: true, scopeLine: 2001, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!7122 = !DILocalVariable(name: "ctx", arg: 1, scope: !7121, file: !897, line: 2000, type: !1749)
!7123 = !DILocation(line: 2000, column: 49, scope: !7121)
!7124 = !DILocalVariable(name: "dp", scope: !7121, file: !897, line: 2002, type: !955)
!7125 = !DILocation(line: 2002, column: 21, scope: !7121)
!7126 = !DILocation(line: 2002, column: 26, scope: !7121)
!7127 = !DILocation(line: 2002, column: 31, scope: !7121)
!7128 = !DILocalVariable(name: "rh", scope: !7121, file: !897, line: 2003, type: !1835)
!7129 = !DILocation(line: 2003, column: 20, scope: !7121)
!7130 = !DILocation(line: 2003, column: 25, scope: !7121)
!7131 = !DILocation(line: 2003, column: 30, scope: !7121)
!7132 = !DILocalVariable(name: "channel", scope: !7121, file: !897, line: 2004, type: !993)
!7133 = !DILocation(line: 2004, column: 18, scope: !7121)
!7134 = !DILocation(line: 2006, column: 20, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7121, file: !897, line: 2006, column: 5)
!7136 = !DILocation(line: 2006, column: 24, scope: !7135)
!7137 = !DILocation(line: 2006, column: 18, scope: !7135)
!7138 = !DILocation(line: 2006, column: 10, scope: !7135)
!7139 = !DILocation(line: 2006, column: 37, scope: !7140)
!7140 = !DILexicalBlockFile(scope: !7141, file: !897, discriminator: 1)
!7141 = distinct !DILexicalBlock(scope: !7135, file: !897, line: 2006, column: 5)
!7142 = !DILocation(line: 2006, column: 48, scope: !7140)
!7143 = !DILocation(line: 2006, column: 52, scope: !7140)
!7144 = !DILocation(line: 2006, column: 45, scope: !7140)
!7145 = !DILocation(line: 2006, column: 5, scope: !7140)
!7146 = !DILocalVariable(name: "cur_bo", scope: !7147, file: !897, line: 2007, type: !7148)
!7147 = distinct !DILexicalBlock(scope: !7141, file: !897, line: 2006, column: 76)
!7148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64, align: 64)
!7149 = !DILocation(line: 2007, column: 21, scope: !7147)
!7150 = !DILocalVariable(name: "prev_bo", scope: !7147, file: !897, line: 2007, type: !7148)
!7151 = !DILocation(line: 2007, column: 30, scope: !7147)
!7152 = !DILocalVariable(name: "path_counter", scope: !7147, file: !897, line: 2008, type: !7153)
!7153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7154, size: 960, align: 32, elements: !7162)
!7154 = !DIDerivedType(tag: DW_TAG_typedef, name: "PathCounter", file: !897, line: 1949, baseType: !7155)
!7155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !897, line: 1946, size: 192, align: 32, elements: !7156)
!7156 = !{!7157, !7161}
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !7155, file: !897, line: 1947, baseType: !7158, size: 152, align: 8)
!7158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 152, align: 8, elements: !7159)
!7159 = !{!7160}
!7160 = !DISubrange(count: 19)
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "bitcount", scope: !7155, file: !897, line: 1948, baseType: !939, size: 32, align: 32, offset: 160)
!7162 = !{!7163}
!7163 = !DISubrange(count: 5)
!7164 = !DILocation(line: 2008, column: 21, scope: !7147)
!7165 = !DILocalVariable(name: "best_codebook", scope: !7147, file: !897, line: 2009, type: !993)
!7166 = !DILocation(line: 2009, column: 22, scope: !7147)
!7167 = !DILocalVariable(name: "index", scope: !7147, file: !897, line: 2010, type: !993)
!7168 = !DILocation(line: 2010, column: 22, scope: !7147)
!7169 = !DILocalVariable(name: "best_path", scope: !7147, file: !897, line: 2011, type: !1504)
!7170 = !DILocation(line: 2011, column: 15, scope: !7147)
!7171 = !DILocation(line: 2013, column: 28, scope: !7147)
!7172 = !DILocation(line: 2013, column: 9, scope: !7147)
!7173 = !DILocation(line: 2015, column: 20, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7147, file: !897, line: 2015, column: 9)
!7175 = !DILocation(line: 2015, column: 14, scope: !7174)
!7176 = !DILocation(line: 2015, column: 25, scope: !7177)
!7177 = !DILexicalBlockFile(scope: !7178, file: !897, discriminator: 1)
!7178 = distinct !DILexicalBlock(scope: !7174, file: !897, line: 2015, column: 9)
!7179 = !DILocation(line: 2015, column: 33, scope: !7177)
!7180 = !DILocation(line: 2015, column: 38, scope: !7177)
!7181 = !DILocation(line: 2015, column: 31, scope: !7177)
!7182 = !DILocation(line: 2015, column: 9, scope: !7177)
!7183 = !DILocalVariable(name: "best_bitcount", scope: !7184, file: !897, line: 2016, type: !993)
!7184 = distinct !DILexicalBlock(scope: !7178, file: !897, line: 2015, column: 68)
!7185 = !DILocation(line: 2016, column: 26, scope: !7184)
!7186 = !DILocalVariable(name: "codebook", scope: !7184, file: !897, line: 2017, type: !993)
!7187 = !DILocation(line: 2017, column: 26, scope: !7184)
!7188 = !DILocation(line: 2019, column: 46, scope: !7184)
!7189 = !DILocation(line: 2019, column: 22, scope: !7184)
!7190 = !DILocation(line: 2019, column: 39, scope: !7184)
!7191 = !DILocation(line: 2019, column: 27, scope: !7184)
!7192 = !DILocation(line: 2019, column: 20, scope: !7184)
!7193 = !DILocation(line: 2021, column: 27, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7184, file: !897, line: 2021, column: 13)
!7195 = !DILocation(line: 2021, column: 18, scope: !7194)
!7196 = !DILocation(line: 2021, column: 32, scope: !7197)
!7197 = !DILexicalBlockFile(scope: !7198, file: !897, discriminator: 1)
!7198 = distinct !DILexicalBlock(scope: !7194, file: !897, line: 2021, column: 13)
!7199 = !DILocation(line: 2021, column: 41, scope: !7197)
!7200 = !DILocation(line: 2021, column: 13, scope: !7197)
!7201 = !DILocalVariable(name: "prev_best_bitcount", scope: !7202, file: !897, line: 2022, type: !939)
!7202 = distinct !DILexicalBlock(scope: !7198, file: !897, line: 2021, column: 58)
!7203 = !DILocation(line: 2022, column: 21, scope: !7202)
!7204 = !DILocalVariable(name: "last_best", scope: !7202, file: !897, line: 2023, type: !939)
!7205 = !DILocation(line: 2023, column: 21, scope: !7202)
!7206 = !DILocation(line: 2025, column: 32, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7202, file: !897, line: 2025, column: 17)
!7208 = !DILocation(line: 2025, column: 22, scope: !7207)
!7209 = !DILocation(line: 2025, column: 37, scope: !7210)
!7210 = !DILexicalBlockFile(scope: !7211, file: !897, discriminator: 1)
!7211 = distinct !DILexicalBlock(scope: !7207, file: !897, line: 2025, column: 17)
!7212 = !DILocation(line: 2025, column: 47, scope: !7210)
!7213 = !DILocation(line: 2025, column: 17, scope: !7210)
!7214 = !DILocalVariable(name: "dst_path", scope: !7215, file: !897, line: 2026, type: !7216)
!7215 = distinct !DILexicalBlock(scope: !7211, file: !897, line: 2025, column: 65)
!7216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7154, size: 64, align: 64)
!7217 = !DILocation(line: 2026, column: 34, scope: !7215)
!7218 = !DILocation(line: 2026, column: 59, scope: !7215)
!7219 = !DILocation(line: 2026, column: 46, scope: !7215)
!7220 = !DILocalVariable(name: "src_path", scope: !7215, file: !897, line: 2027, type: !7216)
!7221 = !DILocation(line: 2027, column: 34, scope: !7215)
!7222 = !DILocalVariable(name: "temp_bitcount", scope: !7215, file: !897, line: 2028, type: !939)
!7223 = !DILocation(line: 2028, column: 25, scope: !7215)
!7224 = !DILocation(line: 2032, column: 25, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7215, file: !897, line: 2032, column: 25)
!7226 = !DILocation(line: 2032, column: 25, scope: !7215)
!7227 = !DILocation(line: 2033, column: 37, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7225, file: !897, line: 2032, column: 36)
!7229 = !DILocation(line: 2033, column: 34, scope: !7228)
!7230 = !DILocation(line: 2034, column: 21, scope: !7228)
!7231 = !DILocation(line: 2035, column: 58, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7233, file: !897, line: 2035, column: 29)
!7233 = distinct !DILexicalBlock(scope: !7225, file: !897, line: 2034, column: 28)
!7234 = !DILocation(line: 2035, column: 50, scope: !7232)
!7235 = !DILocation(line: 2035, column: 77, scope: !7232)
!7236 = !DILocation(line: 2035, column: 70, scope: !7232)
!7237 = !DILocation(line: 2035, column: 29, scope: !7232)
!7238 = !DILocation(line: 2035, column: 29, scope: !7233)
!7239 = !DILocation(line: 2036, column: 29, scope: !7232)
!7240 = !DILocation(line: 2038, column: 54, scope: !7232)
!7241 = !DILocation(line: 2038, column: 41, scope: !7232)
!7242 = !DILocation(line: 2038, column: 38, scope: !7232)
!7243 = !DILocation(line: 2041, column: 61, scope: !7215)
!7244 = !DILocation(line: 2041, column: 66, scope: !7215)
!7245 = !DILocation(line: 2041, column: 75, scope: !7215)
!7246 = !DILocation(line: 2041, column: 85, scope: !7215)
!7247 = !DILocation(line: 2041, column: 37, scope: !7215)
!7248 = !DILocation(line: 2041, column: 35, scope: !7215)
!7249 = !DILocation(line: 2043, column: 25, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7215, file: !897, line: 2043, column: 25)
!7251 = !DILocation(line: 2043, column: 41, scope: !7250)
!7252 = !DILocation(line: 2043, column: 39, scope: !7250)
!7253 = !DILocation(line: 2043, column: 25, scope: !7215)
!7254 = !DILocation(line: 2044, column: 41, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7250, file: !897, line: 2043, column: 56)
!7256 = !DILocation(line: 2044, column: 39, scope: !7255)
!7257 = !DILocation(line: 2045, column: 41, scope: !7255)
!7258 = !DILocation(line: 2045, column: 39, scope: !7255)
!7259 = !DILocation(line: 2046, column: 21, scope: !7255)
!7260 = !DILocation(line: 2048, column: 25, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7215, file: !897, line: 2048, column: 25)
!7262 = !DILocation(line: 2048, column: 41, scope: !7261)
!7263 = !DILocation(line: 2048, column: 39, scope: !7261)
!7264 = !DILocation(line: 2048, column: 25, scope: !7215)
!7265 = !DILocation(line: 2049, column: 46, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7261, file: !897, line: 2048, column: 61)
!7267 = !DILocation(line: 2049, column: 44, scope: !7266)
!7268 = !DILocation(line: 2050, column: 29, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7266, file: !897, line: 2050, column: 29)
!7270 = !DILocation(line: 2050, column: 41, scope: !7269)
!7271 = !DILocation(line: 2050, column: 38, scope: !7269)
!7272 = !DILocation(line: 2050, column: 29, scope: !7266)
!7273 = !DILocation(line: 2051, column: 36, scope: !7269)
!7274 = !DILocation(line: 2051, column: 29, scope: !7269)
!7275 = !DILocation(line: 2051, column: 46, scope: !7269)
!7276 = !DILocation(line: 2052, column: 36, scope: !7266)
!7277 = !DILocation(line: 2052, column: 46, scope: !7266)
!7278 = !DILocation(line: 2052, column: 74, scope: !7266)
!7279 = !DILocation(line: 2052, column: 52, scope: !7266)
!7280 = !DILocation(line: 2052, column: 25, scope: !7266)
!7281 = !DILocation(line: 2053, column: 46, scope: !7266)
!7282 = !DILocation(line: 2053, column: 25, scope: !7266)
!7283 = !DILocation(line: 2053, column: 35, scope: !7266)
!7284 = !DILocation(line: 2053, column: 44, scope: !7266)
!7285 = !DILocation(line: 2054, column: 21, scope: !7266)
!7286 = !DILocation(line: 2055, column: 17, scope: !7215)
!7287 = !DILocation(line: 2025, column: 61, scope: !7288)
!7288 = !DILexicalBlockFile(scope: !7211, file: !897, discriminator: 2)
!7289 = !DILocation(line: 2025, column: 17, scope: !7288)
!7290 = distinct !{!7290, !7291}
!7291 = !DILocation(line: 2025, column: 17, scope: !7202)
!7292 = !DILocation(line: 2056, column: 13, scope: !7202)
!7293 = !DILocation(line: 2021, column: 54, scope: !7294)
!7294 = !DILexicalBlockFile(scope: !7198, file: !897, discriminator: 2)
!7295 = !DILocation(line: 2021, column: 13, scope: !7294)
!7296 = distinct !{!7296, !7297}
!7297 = !DILocation(line: 2021, column: 13, scope: !7184)
!7298 = !DILocation(line: 2058, column: 23, scope: !7184)
!7299 = !DILocation(line: 2058, column: 21, scope: !7184)
!7300 = !DILocation(line: 2060, column: 21, scope: !7184)
!7301 = !DILocation(line: 2060, column: 13, scope: !7184)
!7302 = !DILocation(line: 2060, column: 52, scope: !7184)
!7303 = !DILocation(line: 2060, column: 39, scope: !7184)
!7304 = !DILocation(line: 2061, column: 9, scope: !7184)
!7305 = !DILocation(line: 2015, column: 64, scope: !7306)
!7306 = !DILexicalBlockFile(scope: !7178, file: !897, discriminator: 2)
!7307 = !DILocation(line: 2015, column: 9, scope: !7306)
!7308 = distinct !{!7308, !7309}
!7309 = !DILocation(line: 2015, column: 9, scope: !7147)
!7310 = !DILocation(line: 2063, column: 21, scope: !7147)
!7311 = !DILocation(line: 2063, column: 37, scope: !7147)
!7312 = !DILocation(line: 2063, column: 42, scope: !7147)
!7313 = !DILocation(line: 2063, column: 19, scope: !7147)
!7314 = !DILocation(line: 2066, column: 20, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7147, file: !897, line: 2066, column: 9)
!7316 = !DILocation(line: 2066, column: 14, scope: !7315)
!7317 = !DILocation(line: 2066, column: 25, scope: !7318)
!7318 = !DILexicalBlockFile(scope: !7319, file: !897, discriminator: 1)
!7319 = distinct !DILexicalBlock(scope: !7315, file: !897, line: 2066, column: 9)
!7320 = !DILocation(line: 2066, column: 33, scope: !7318)
!7321 = !DILocation(line: 2066, column: 38, scope: !7318)
!7322 = !DILocation(line: 2066, column: 31, scope: !7318)
!7323 = !DILocation(line: 2066, column: 9, scope: !7318)
!7324 = !DILocalVariable(name: "cp", scope: !7325, file: !897, line: 2067, type: !921)
!7325 = distinct !DILexicalBlock(scope: !7319, file: !897, line: 2066, column: 68)
!7326 = !DILocation(line: 2067, column: 28, scope: !7325)
!7327 = !DILocation(line: 2067, column: 33, scope: !7325)
!7328 = !DILocation(line: 2067, column: 38, scope: !7325)
!7329 = !DILocation(line: 2067, column: 59, scope: !7325)
!7330 = !DILocation(line: 2067, column: 66, scope: !7325)
!7331 = !DILocation(line: 2067, column: 71, scope: !7325)
!7332 = !DILocation(line: 2067, column: 78, scope: !7325)
!7333 = !DILocation(line: 2067, column: 64, scope: !7325)
!7334 = !DILocation(line: 2067, column: 57, scope: !7325)
!7335 = !DILocation(line: 2067, column: 90, scope: !7325)
!7336 = !DILocation(line: 2067, column: 88, scope: !7325)
!7337 = !DILocation(line: 2069, column: 39, scope: !7325)
!7338 = !DILocation(line: 2069, column: 29, scope: !7325)
!7339 = !DILocation(line: 2069, column: 42, scope: !7325)
!7340 = !DILocation(line: 2069, column: 27, scope: !7325)
!7341 = !DILocation(line: 2070, column: 56, scope: !7325)
!7342 = !DILocation(line: 2070, column: 23, scope: !7325)
!7343 = !DILocation(line: 2070, column: 47, scope: !7325)
!7344 = !DILocation(line: 2070, column: 40, scope: !7325)
!7345 = !DILocation(line: 2070, column: 28, scope: !7325)
!7346 = !DILocation(line: 2070, column: 20, scope: !7325)
!7347 = !DILocation(line: 2072, column: 31, scope: !7325)
!7348 = !DILocation(line: 2072, column: 39, scope: !7325)
!7349 = !DILocation(line: 2072, column: 13, scope: !7325)
!7350 = !DILocation(line: 2072, column: 17, scope: !7325)
!7351 = !DILocation(line: 2072, column: 29, scope: !7325)
!7352 = !DILocation(line: 2073, column: 29, scope: !7325)
!7353 = !DILocation(line: 2073, column: 37, scope: !7325)
!7354 = !DILocation(line: 2073, column: 68, scope: !7325)
!7355 = !DILocation(line: 2073, column: 48, scope: !7325)
!7356 = !DILocation(line: 2073, column: 52, scope: !7325)
!7357 = !DILocation(line: 2073, column: 46, scope: !7325)
!7358 = !DILocation(line: 2073, column: 13, scope: !7325)
!7359 = !DILocation(line: 2073, column: 17, scope: !7325)
!7360 = !DILocation(line: 2073, column: 27, scope: !7325)
!7361 = !DILocation(line: 2074, column: 28, scope: !7325)
!7362 = !DILocation(line: 2074, column: 13, scope: !7325)
!7363 = !DILocation(line: 2074, column: 17, scope: !7325)
!7364 = !DILocation(line: 2074, column: 26, scope: !7325)
!7365 = !DILocation(line: 2075, column: 9, scope: !7325)
!7366 = !DILocation(line: 2066, column: 64, scope: !7367)
!7367 = !DILexicalBlockFile(scope: !7319, file: !897, discriminator: 2)
!7368 = !DILocation(line: 2066, column: 9, scope: !7367)
!7369 = distinct !{!7369, !7370}
!7370 = !DILocation(line: 2066, column: 9, scope: !7147)
!7371 = !DILocation(line: 2076, column: 5, scope: !7147)
!7372 = !DILocation(line: 2006, column: 72, scope: !7373)
!7373 = !DILexicalBlockFile(scope: !7141, file: !897, discriminator: 2)
!7374 = !DILocation(line: 2006, column: 5, scope: !7373)
!7375 = distinct !{!7375, !7376}
!7376 = !DILocation(line: 2006, column: 5, scope: !7121)
!7377 = !DILocation(line: 2077, column: 1, scope: !7121)
!7378 = distinct !DISubprogram(name: "number_trailing_zeroes", scope: !897, file: !897, line: 1307, type: !7379, isLocal: true, isDefinition: true, scopeLine: 1308, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!7379 = !DISubroutineType(types: !7380)
!7380 = !{!939, !938}
!7381 = !DILocalVariable(name: "sample", arg: 1, scope: !7378, file: !897, line: 1307, type: !938)
!7382 = !DILocation(line: 1307, column: 43, scope: !7378)
!7383 = !DILocalVariable(name: "bits", scope: !7378, file: !897, line: 1309, type: !939)
!7384 = !DILocation(line: 1309, column: 9, scope: !7378)
!7385 = !DILocation(line: 1311, column: 15, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7378, file: !897, line: 1311, column: 5)
!7387 = !DILocation(line: 1311, column: 10, scope: !7386)
!7388 = !DILocation(line: 1311, column: 20, scope: !7389)
!7389 = !DILexicalBlockFile(scope: !7390, file: !897, discriminator: 1)
!7390 = distinct !DILexicalBlock(scope: !7386, file: !897, line: 1311, column: 5)
!7391 = !DILocation(line: 1311, column: 25, scope: !7389)
!7392 = !DILocation(line: 1311, column: 30, scope: !7389)
!7393 = !DILocation(line: 1311, column: 35, scope: !7394)
!7394 = !DILexicalBlockFile(scope: !7390, file: !897, discriminator: 2)
!7395 = !DILocation(line: 1311, column: 48, scope: !7394)
!7396 = !DILocation(line: 1311, column: 46, scope: !7394)
!7397 = !DILocation(line: 1311, column: 42, scope: !7394)
!7398 = !DILocation(line: 1311, column: 33, scope: !7394)
!7399 = !DILocation(line: 1311, column: 5, scope: !7400)
!7400 = !DILexicalBlockFile(scope: !7386, file: !897, discriminator: 3)
!7401 = !DILocation(line: 1311, column: 5, scope: !7402)
!7402 = !DILexicalBlockFile(scope: !7386, file: !897, discriminator: 4)
!7403 = !DILocation(line: 1311, column: 60, scope: !7404)
!7404 = !DILexicalBlockFile(scope: !7390, file: !897, discriminator: 5)
!7405 = !DILocation(line: 1311, column: 5, scope: !7404)
!7406 = distinct !{!7406, !7407}
!7407 = !DILocation(line: 1311, column: 5, scope: !7378)
!7408 = !DILocation(line: 1315, column: 9, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7378, file: !897, line: 1315, column: 9)
!7410 = !DILocation(line: 1315, column: 14, scope: !7409)
!7411 = !DILocation(line: 1315, column: 9, scope: !7378)
!7412 = !DILocation(line: 1316, column: 9, scope: !7409)
!7413 = !DILocation(line: 1318, column: 12, scope: !7378)
!7414 = !DILocation(line: 1318, column: 5, scope: !7378)
!7415 = !DILocation(line: 1319, column: 1, scope: !7378)
!7416 = distinct !DISubprogram(name: "estimate_stereo_mode", scope: !897, file: !897, line: 1447, type: !7417, isLocal: true, isDefinition: true, scopeLine: 1448, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!7417 = !DISubroutineType(types: !7418)
!7418 = !{!914, !1749}
!7419 = !DILocalVariable(name: "ctx", arg: 1, scope: !7416, file: !897, line: 1447, type: !1749)
!7420 = !DILocation(line: 1447, column: 62, scope: !7416)
!7421 = !DILocalVariable(name: "score", scope: !7416, file: !897, line: 1449, type: !7422)
!7422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 256, align: 64, elements: !1218)
!7423 = !DILocation(line: 1449, column: 14, scope: !7416)
!7424 = !DILocalVariable(name: "sum", scope: !7416, file: !897, line: 1449, type: !7422)
!7425 = !DILocation(line: 1449, column: 24, scope: !7416)
!7426 = !DILocalVariable(name: "right_ch", scope: !7416, file: !897, line: 1450, type: !1767)
!7427 = !DILocation(line: 1450, column: 14, scope: !7416)
!7428 = !DILocation(line: 1450, column: 25, scope: !7416)
!7429 = !DILocation(line: 1450, column: 30, scope: !7416)
!7430 = !DILocation(line: 1450, column: 44, scope: !7416)
!7431 = !DILocalVariable(name: "left_ch", scope: !7416, file: !897, line: 1451, type: !1767)
!7432 = !DILocation(line: 1451, column: 14, scope: !7416)
!7433 = !DILocation(line: 1451, column: 24, scope: !7416)
!7434 = !DILocation(line: 1451, column: 29, scope: !7416)
!7435 = !DILocalVariable(name: "i", scope: !7416, file: !897, line: 1452, type: !939)
!7436 = !DILocation(line: 1452, column: 9, scope: !7416)
!7437 = !DILocalVariable(name: "best", scope: !7416, file: !897, line: 1453, type: !914)
!7438 = !DILocation(line: 1453, column: 20, scope: !7416)
!7439 = !DILocation(line: 1455, column: 11, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7416, file: !897, line: 1455, column: 5)
!7441 = !DILocation(line: 1455, column: 9, scope: !7440)
!7442 = !DILocation(line: 1455, column: 16, scope: !7443)
!7443 = !DILexicalBlockFile(scope: !7444, file: !897, discriminator: 1)
!7444 = distinct !DILexicalBlock(scope: !7440, file: !897, line: 1455, column: 5)
!7445 = !DILocation(line: 1455, column: 20, scope: !7443)
!7446 = !DILocation(line: 1455, column: 25, scope: !7443)
!7447 = !DILocation(line: 1455, column: 18, scope: !7443)
!7448 = !DILocation(line: 1455, column: 5, scope: !7443)
!7449 = !DILocalVariable(name: "left", scope: !7450, file: !897, line: 1456, type: !938)
!7450 = distinct !DILexicalBlock(scope: !7444, file: !897, line: 1455, column: 49)
!7451 = !DILocation(line: 1456, column: 17, scope: !7450)
!7452 = !DILocation(line: 1456, column: 33, scope: !7450)
!7453 = !DILocation(line: 1456, column: 37, scope: !7450)
!7454 = !DILocation(line: 1456, column: 42, scope: !7450)
!7455 = !DILocation(line: 1456, column: 35, scope: !7450)
!7456 = !DILocation(line: 1456, column: 24, scope: !7450)
!7457 = !DILocation(line: 1456, column: 72, scope: !7450)
!7458 = !DILocation(line: 1456, column: 74, scope: !7450)
!7459 = !DILocation(line: 1456, column: 81, scope: !7450)
!7460 = !DILocation(line: 1456, column: 86, scope: !7450)
!7461 = !DILocation(line: 1456, column: 79, scope: !7450)
!7462 = !DILocation(line: 1456, column: 62, scope: !7450)
!7463 = !DILocation(line: 1456, column: 60, scope: !7450)
!7464 = !DILocation(line: 1456, column: 56, scope: !7450)
!7465 = !DILocation(line: 1456, column: 112, scope: !7450)
!7466 = !DILocation(line: 1456, column: 114, scope: !7450)
!7467 = !DILocation(line: 1456, column: 121, scope: !7450)
!7468 = !DILocation(line: 1456, column: 126, scope: !7450)
!7469 = !DILocation(line: 1456, column: 119, scope: !7450)
!7470 = !DILocation(line: 1456, column: 102, scope: !7450)
!7471 = !DILocation(line: 1456, column: 100, scope: !7450)
!7472 = !DILocalVariable(name: "right", scope: !7450, file: !897, line: 1457, type: !938)
!7473 = !DILocation(line: 1457, column: 17, scope: !7450)
!7474 = !DILocation(line: 1457, column: 34, scope: !7450)
!7475 = !DILocation(line: 1457, column: 38, scope: !7450)
!7476 = !DILocation(line: 1457, column: 43, scope: !7450)
!7477 = !DILocation(line: 1457, column: 36, scope: !7450)
!7478 = !DILocation(line: 1457, column: 25, scope: !7450)
!7479 = !DILocation(line: 1457, column: 73, scope: !7450)
!7480 = !DILocation(line: 1457, column: 75, scope: !7450)
!7481 = !DILocation(line: 1457, column: 82, scope: !7450)
!7482 = !DILocation(line: 1457, column: 87, scope: !7450)
!7483 = !DILocation(line: 1457, column: 80, scope: !7450)
!7484 = !DILocation(line: 1457, column: 63, scope: !7450)
!7485 = !DILocation(line: 1457, column: 61, scope: !7450)
!7486 = !DILocation(line: 1457, column: 57, scope: !7450)
!7487 = !DILocation(line: 1457, column: 113, scope: !7450)
!7488 = !DILocation(line: 1457, column: 115, scope: !7450)
!7489 = !DILocation(line: 1457, column: 122, scope: !7450)
!7490 = !DILocation(line: 1457, column: 127, scope: !7450)
!7491 = !DILocation(line: 1457, column: 120, scope: !7450)
!7492 = !DILocation(line: 1457, column: 103, scope: !7450)
!7493 = !DILocation(line: 1457, column: 101, scope: !7450)
!7494 = !DILocation(line: 1459, column: 21, scope: !7450)
!7495 = !DILocation(line: 1459, column: 27, scope: !7450)
!7496 = !DILocation(line: 1459, column: 20, scope: !7450)
!7497 = !DILocation(line: 1459, column: 35, scope: !7498)
!7498 = !DILexicalBlockFile(scope: !7450, file: !897, discriminator: 1)
!7499 = !DILocation(line: 1459, column: 20, scope: !7498)
!7500 = !DILocation(line: 1459, column: 46, scope: !7501)
!7501 = !DILexicalBlockFile(scope: !7450, file: !897, discriminator: 2)
!7502 = !DILocation(line: 1459, column: 44, scope: !7501)
!7503 = !DILocation(line: 1459, column: 20, scope: !7501)
!7504 = !DILocation(line: 1459, column: 20, scope: !7505)
!7505 = !DILexicalBlockFile(scope: !7450, file: !897, discriminator: 3)
!7506 = !DILocation(line: 1459, column: 19, scope: !7505)
!7507 = !DILocation(line: 1459, column: 9, scope: !7505)
!7508 = !DILocation(line: 1459, column: 16, scope: !7505)
!7509 = !DILocation(line: 1460, column: 21, scope: !7450)
!7510 = !DILocation(line: 1460, column: 28, scope: !7450)
!7511 = !DILocation(line: 1460, column: 20, scope: !7450)
!7512 = !DILocation(line: 1460, column: 36, scope: !7498)
!7513 = !DILocation(line: 1460, column: 20, scope: !7498)
!7514 = !DILocation(line: 1460, column: 48, scope: !7501)
!7515 = !DILocation(line: 1460, column: 46, scope: !7501)
!7516 = !DILocation(line: 1460, column: 20, scope: !7501)
!7517 = !DILocation(line: 1460, column: 20, scope: !7505)
!7518 = !DILocation(line: 1460, column: 19, scope: !7505)
!7519 = !DILocation(line: 1460, column: 9, scope: !7505)
!7520 = !DILocation(line: 1460, column: 16, scope: !7505)
!7521 = !DILocation(line: 1461, column: 22, scope: !7450)
!7522 = !DILocation(line: 1461, column: 29, scope: !7450)
!7523 = !DILocation(line: 1461, column: 27, scope: !7450)
!7524 = !DILocation(line: 1461, column: 36, scope: !7450)
!7525 = !DILocation(line: 1461, column: 42, scope: !7450)
!7526 = !DILocation(line: 1461, column: 20, scope: !7450)
!7527 = !DILocation(line: 1461, column: 51, scope: !7498)
!7528 = !DILocation(line: 1461, column: 58, scope: !7498)
!7529 = !DILocation(line: 1461, column: 56, scope: !7498)
!7530 = !DILocation(line: 1461, column: 65, scope: !7498)
!7531 = !DILocation(line: 1461, column: 20, scope: !7498)
!7532 = !DILocation(line: 1461, column: 77, scope: !7501)
!7533 = !DILocation(line: 1461, column: 84, scope: !7501)
!7534 = !DILocation(line: 1461, column: 82, scope: !7501)
!7535 = !DILocation(line: 1461, column: 91, scope: !7501)
!7536 = !DILocation(line: 1461, column: 74, scope: !7501)
!7537 = !DILocation(line: 1461, column: 20, scope: !7501)
!7538 = !DILocation(line: 1461, column: 20, scope: !7505)
!7539 = !DILocation(line: 1461, column: 19, scope: !7505)
!7540 = !DILocation(line: 1461, column: 9, scope: !7505)
!7541 = !DILocation(line: 1461, column: 16, scope: !7505)
!7542 = !DILocation(line: 1462, column: 21, scope: !7450)
!7543 = !DILocation(line: 1462, column: 28, scope: !7450)
!7544 = !DILocation(line: 1462, column: 26, scope: !7450)
!7545 = !DILocation(line: 1462, column: 35, scope: !7450)
!7546 = !DILocation(line: 1462, column: 20, scope: !7450)
!7547 = !DILocation(line: 1462, column: 43, scope: !7498)
!7548 = !DILocation(line: 1462, column: 50, scope: !7498)
!7549 = !DILocation(line: 1462, column: 48, scope: !7498)
!7550 = !DILocation(line: 1462, column: 20, scope: !7498)
!7551 = !DILocation(line: 1462, column: 62, scope: !7501)
!7552 = !DILocation(line: 1462, column: 69, scope: !7501)
!7553 = !DILocation(line: 1462, column: 67, scope: !7501)
!7554 = !DILocation(line: 1462, column: 60, scope: !7501)
!7555 = !DILocation(line: 1462, column: 20, scope: !7501)
!7556 = !DILocation(line: 1462, column: 20, scope: !7505)
!7557 = !DILocation(line: 1462, column: 19, scope: !7505)
!7558 = !DILocation(line: 1462, column: 9, scope: !7505)
!7559 = !DILocation(line: 1462, column: 16, scope: !7505)
!7560 = !DILocation(line: 1463, column: 5, scope: !7450)
!7561 = !DILocation(line: 1455, column: 45, scope: !7562)
!7562 = !DILexicalBlockFile(scope: !7444, file: !897, discriminator: 2)
!7563 = !DILocation(line: 1455, column: 5, scope: !7562)
!7564 = distinct !{!7564, !7565}
!7565 = !DILocation(line: 1455, column: 5, scope: !7416)
!7566 = !DILocation(line: 1465, column: 36, scope: !7416)
!7567 = !DILocation(line: 1465, column: 45, scope: !7416)
!7568 = !DILocation(line: 1465, column: 43, scope: !7416)
!7569 = !DILocation(line: 1465, column: 5, scope: !7416)
!7570 = !DILocation(line: 1465, column: 34, scope: !7416)
!7571 = !DILocation(line: 1466, column: 35, scope: !7416)
!7572 = !DILocation(line: 1466, column: 44, scope: !7416)
!7573 = !DILocation(line: 1466, column: 42, scope: !7416)
!7574 = !DILocation(line: 1466, column: 5, scope: !7416)
!7575 = !DILocation(line: 1466, column: 33, scope: !7416)
!7576 = !DILocation(line: 1467, column: 36, scope: !7416)
!7577 = !DILocation(line: 1467, column: 45, scope: !7416)
!7578 = !DILocation(line: 1467, column: 43, scope: !7416)
!7579 = !DILocation(line: 1467, column: 5, scope: !7416)
!7580 = !DILocation(line: 1467, column: 34, scope: !7416)
!7581 = !DILocation(line: 1468, column: 34, scope: !7416)
!7582 = !DILocation(line: 1468, column: 43, scope: !7416)
!7583 = !DILocation(line: 1468, column: 41, scope: !7416)
!7584 = !DILocation(line: 1468, column: 5, scope: !7416)
!7585 = !DILocation(line: 1468, column: 32, scope: !7416)
!7586 = !DILocation(line: 1470, column: 11, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7416, file: !897, line: 1470, column: 5)
!7588 = !DILocation(line: 1470, column: 9, scope: !7587)
!7589 = !DILocation(line: 1470, column: 16, scope: !7590)
!7590 = !DILexicalBlockFile(scope: !7591, file: !897, discriminator: 1)
!7591 = distinct !DILexicalBlock(scope: !7587, file: !897, line: 1470, column: 5)
!7592 = !DILocation(line: 1470, column: 18, scope: !7590)
!7593 = !DILocation(line: 1470, column: 5, scope: !7590)
!7594 = !DILocation(line: 1471, column: 18, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7591, file: !897, line: 1471, column: 12)
!7596 = !DILocation(line: 1471, column: 12, scope: !7595)
!7597 = !DILocation(line: 1471, column: 29, scope: !7595)
!7598 = !DILocation(line: 1471, column: 23, scope: !7595)
!7599 = !DILocation(line: 1471, column: 21, scope: !7595)
!7600 = !DILocation(line: 1471, column: 12, scope: !7591)
!7601 = !DILocation(line: 1472, column: 20, scope: !7595)
!7602 = !DILocation(line: 1472, column: 18, scope: !7595)
!7603 = !DILocation(line: 1472, column: 13, scope: !7595)
!7604 = !DILocation(line: 1471, column: 33, scope: !7605)
!7605 = !DILexicalBlockFile(scope: !7595, file: !897, discriminator: 1)
!7606 = !DILocation(line: 1470, column: 24, scope: !7607)
!7607 = !DILexicalBlockFile(scope: !7591, file: !897, discriminator: 2)
!7608 = !DILocation(line: 1470, column: 5, scope: !7607)
!7609 = distinct !{!7609, !7610}
!7610 = !DILocation(line: 1470, column: 5, scope: !7416)
!7611 = !DILocation(line: 1474, column: 12, scope: !7416)
!7612 = !DILocation(line: 1474, column: 5, scope: !7416)
!7613 = distinct !DISubprogram(name: "code_matrix_coeffs", scope: !897, file: !897, line: 1480, type: !6782, isLocal: true, isDefinition: true, scopeLine: 1481, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!7614 = !DILocalVariable(name: "ctx", arg: 1, scope: !7613, file: !897, line: 1480, type: !1749)
!7615 = !DILocation(line: 1480, column: 50, scope: !7613)
!7616 = !DILocalVariable(name: "mat", arg: 2, scope: !7613, file: !897, line: 1480, type: !993)
!7617 = !DILocation(line: 1480, column: 68, scope: !7613)
!7618 = !DILocalVariable(name: "dp", scope: !7613, file: !897, line: 1482, type: !955)
!7619 = !DILocation(line: 1482, column: 21, scope: !7613)
!7620 = !DILocation(line: 1482, column: 26, scope: !7613)
!7621 = !DILocation(line: 1482, column: 31, scope: !7613)
!7622 = !DILocalVariable(name: "mp", scope: !7613, file: !897, line: 1483, type: !3945)
!7623 = !DILocation(line: 1483, column: 19, scope: !7613)
!7624 = !DILocation(line: 1483, column: 25, scope: !7613)
!7625 = !DILocation(line: 1483, column: 29, scope: !7613)
!7626 = !DILocalVariable(name: "coeff_mask", scope: !7613, file: !897, line: 1484, type: !938)
!7627 = !DILocation(line: 1484, column: 13, scope: !7613)
!7628 = !DILocalVariable(name: "channel", scope: !7613, file: !897, line: 1485, type: !993)
!7629 = !DILocation(line: 1485, column: 18, scope: !7613)
!7630 = !DILocalVariable(name: "bits", scope: !7613, file: !897, line: 1486, type: !993)
!7631 = !DILocation(line: 1486, column: 18, scope: !7613)
!7632 = !DILocation(line: 1488, column: 18, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7613, file: !897, line: 1488, column: 5)
!7634 = !DILocation(line: 1488, column: 10, scope: !7633)
!7635 = !DILocation(line: 1488, column: 23, scope: !7636)
!7636 = !DILexicalBlockFile(scope: !7637, file: !897, discriminator: 1)
!7637 = distinct !DILexicalBlock(scope: !7633, file: !897, line: 1488, column: 5)
!7638 = !DILocation(line: 1488, column: 33, scope: !7636)
!7639 = !DILocation(line: 1488, column: 38, scope: !7636)
!7640 = !DILocation(line: 1488, column: 31, scope: !7636)
!7641 = !DILocation(line: 1488, column: 5, scope: !7636)
!7642 = !DILocalVariable(name: "coeff", scope: !7643, file: !897, line: 1489, type: !938)
!7643 = distinct !DILexicalBlock(scope: !7637, file: !897, line: 1488, column: 63)
!7644 = !DILocation(line: 1489, column: 17, scope: !7643)
!7645 = !DILocation(line: 1489, column: 40, scope: !7643)
!7646 = !DILocation(line: 1489, column: 25, scope: !7643)
!7647 = !DILocation(line: 1489, column: 35, scope: !7643)
!7648 = !DILocation(line: 1489, column: 29, scope: !7643)
!7649 = !DILocation(line: 1490, column: 23, scope: !7643)
!7650 = !DILocation(line: 1490, column: 20, scope: !7643)
!7651 = !DILocation(line: 1491, column: 5, scope: !7643)
!7652 = !DILocation(line: 1488, column: 59, scope: !7653)
!7653 = !DILexicalBlockFile(scope: !7637, file: !897, discriminator: 2)
!7654 = !DILocation(line: 1488, column: 5, scope: !7653)
!7655 = distinct !{!7655, !7656}
!7656 = !DILocation(line: 1488, column: 5, scope: !7613)
!7657 = !DILocation(line: 1493, column: 15, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7613, file: !897, line: 1493, column: 5)
!7659 = !DILocation(line: 1493, column: 10, scope: !7658)
!7660 = !DILocation(line: 1493, column: 20, scope: !7661)
!7661 = !DILexicalBlockFile(scope: !7662, file: !897, discriminator: 1)
!7662 = distinct !DILexicalBlock(scope: !7658, file: !897, line: 1493, column: 5)
!7663 = !DILocation(line: 1493, column: 25, scope: !7661)
!7664 = !DILocation(line: 1493, column: 30, scope: !7661)
!7665 = !DILocation(line: 1493, column: 35, scope: !7666)
!7666 = !DILexicalBlockFile(scope: !7662, file: !897, discriminator: 2)
!7667 = !DILocation(line: 1493, column: 52, scope: !7666)
!7668 = !DILocation(line: 1493, column: 50, scope: !7666)
!7669 = !DILocation(line: 1493, column: 46, scope: !7666)
!7670 = !DILocation(line: 1493, column: 33, scope: !7666)
!7671 = !DILocation(line: 1493, column: 5, scope: !7672)
!7672 = !DILexicalBlockFile(scope: !7658, file: !897, discriminator: 3)
!7673 = !DILocation(line: 1493, column: 5, scope: !7674)
!7674 = !DILexicalBlockFile(scope: !7658, file: !897, discriminator: 4)
!7675 = !DILocation(line: 1493, column: 64, scope: !7676)
!7676 = !DILexicalBlockFile(scope: !7662, file: !897, discriminator: 5)
!7677 = !DILocation(line: 1493, column: 5, scope: !7676)
!7678 = distinct !{!7678, !7679}
!7679 = !DILocation(line: 1493, column: 5, scope: !7613)
!7680 = !DILocation(line: 1495, column: 28, scope: !7613)
!7681 = !DILocation(line: 1495, column: 26, scope: !7613)
!7682 = !DILocation(line: 1495, column: 23, scope: !7613)
!7683 = !DILocation(line: 1495, column: 16, scope: !7613)
!7684 = !DILocation(line: 1495, column: 5, scope: !7613)
!7685 = !DILocation(line: 1495, column: 9, scope: !7613)
!7686 = !DILocation(line: 1495, column: 21, scope: !7613)
!7687 = !DILocation(line: 1496, column: 1, scope: !7613)
!7688 = distinct !DISubprogram(name: "set_filter_params", scope: !897, file: !897, line: 1381, type: !7689, isLocal: true, isDefinition: true, scopeLine: 1384, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!7689 = !DISubroutineType(types: !7690)
!7690 = !{null, !1749, !993, !993, !939}
!7691 = !DILocalVariable(name: "ctx", arg: 1, scope: !7688, file: !897, line: 1381, type: !1749)
!7692 = !DILocation(line: 1381, column: 49, scope: !7688)
!7693 = !DILocalVariable(name: "channel", arg: 2, scope: !7688, file: !897, line: 1382, type: !993)
!7694 = !DILocation(line: 1382, column: 44, scope: !7688)
!7695 = !DILocalVariable(name: "filter", arg: 3, scope: !7688, file: !897, line: 1382, type: !993)
!7696 = !DILocation(line: 1382, column: 66, scope: !7688)
!7697 = !DILocalVariable(name: "clear_filter", arg: 4, scope: !7688, file: !897, line: 1383, type: !939)
!7698 = !DILocation(line: 1383, column: 35, scope: !7688)
!7699 = !DILocalVariable(name: "cp", scope: !7688, file: !897, line: 1385, type: !921)
!7700 = !DILocation(line: 1385, column: 20, scope: !7688)
!7701 = !DILocation(line: 1385, column: 50, scope: !7688)
!7702 = !DILocation(line: 1385, column: 26, scope: !7688)
!7703 = !DILocation(line: 1385, column: 31, scope: !7688)
!7704 = !DILocalVariable(name: "fp", scope: !7688, file: !897, line: 1386, type: !4529)
!7705 = !DILocation(line: 1386, column: 19, scope: !7688)
!7706 = !DILocation(line: 1386, column: 43, scope: !7688)
!7707 = !DILocation(line: 1386, column: 25, scope: !7688)
!7708 = !DILocation(line: 1386, column: 29, scope: !7688)
!7709 = !DILocation(line: 1388, column: 10, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7688, file: !897, line: 1388, column: 9)
!7711 = !DILocation(line: 1388, column: 17, scope: !7710)
!7712 = !DILocation(line: 1388, column: 22, scope: !7710)
!7713 = !DILocation(line: 1388, column: 25, scope: !7714)
!7714 = !DILexicalBlockFile(scope: !7710, file: !897, discriminator: 1)
!7715 = !DILocation(line: 1388, column: 30, scope: !7714)
!7716 = !DILocation(line: 1388, column: 45, scope: !7714)
!7717 = !DILocation(line: 1388, column: 53, scope: !7714)
!7718 = !DILocation(line: 1389, column: 9, scope: !7710)
!7719 = !DILocation(line: 1388, column: 9, scope: !7720)
!7720 = !DILexicalBlockFile(scope: !7688, file: !897, discriminator: 2)
!7721 = !DILocation(line: 1390, column: 9, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7710, file: !897, line: 1389, column: 23)
!7723 = !DILocation(line: 1390, column: 13, scope: !7722)
!7724 = !DILocation(line: 1390, column: 19, scope: !7722)
!7725 = !DILocation(line: 1391, column: 5, scope: !7722)
!7726 = !DILocation(line: 1391, column: 16, scope: !7727)
!7727 = !DILexicalBlockFile(scope: !7728, file: !897, discriminator: 1)
!7728 = distinct !DILexicalBlock(scope: !7710, file: !897, line: 1391, column: 16)
!7729 = !DILocation(line: 1391, column: 23, scope: !7727)
!7730 = !DILocation(line: 1392, column: 9, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7728, file: !897, line: 1391, column: 29)
!7732 = !DILocation(line: 1392, column: 13, scope: !7731)
!7733 = !DILocation(line: 1392, column: 19, scope: !7731)
!7734 = !DILocation(line: 1393, column: 5, scope: !7731)
!7735 = !DILocation(line: 1393, column: 16, scope: !7736)
!7736 = !DILexicalBlockFile(scope: !7737, file: !897, discriminator: 1)
!7737 = distinct !DILexicalBlock(scope: !7728, file: !897, line: 1393, column: 16)
!7738 = !DILocation(line: 1393, column: 23, scope: !7736)
!7739 = !DILocalVariable(name: "max_order", scope: !7740, file: !897, line: 1394, type: !1026)
!7740 = distinct !DILexicalBlock(scope: !7737, file: !897, line: 1393, column: 29)
!7741 = !DILocation(line: 1394, column: 19, scope: !7740)
!7742 = !DILocation(line: 1394, column: 32, scope: !7740)
!7743 = !DILocation(line: 1394, column: 37, scope: !7740)
!7744 = !DILocation(line: 1394, column: 52, scope: !7740)
!7745 = !DILocation(line: 1394, column: 31, scope: !7740)
!7746 = !DILocalVariable(name: "sample_buffer", scope: !7740, file: !897, line: 1396, type: !1767)
!7747 = !DILocation(line: 1396, column: 18, scope: !7740)
!7748 = !DILocation(line: 1396, column: 34, scope: !7740)
!7749 = !DILocation(line: 1396, column: 39, scope: !7740)
!7750 = !DILocation(line: 1396, column: 55, scope: !7740)
!7751 = !DILocation(line: 1396, column: 53, scope: !7740)
!7752 = !DILocalVariable(name: "coefs", scope: !7740, file: !897, line: 1397, type: !7753)
!7753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 32768, align: 32, elements: !1896)
!7754 = !DILocation(line: 1397, column: 17, scope: !7740)
!7755 = !DILocalVariable(name: "lpc_samples", scope: !7740, file: !897, line: 1398, type: !1767)
!7756 = !DILocation(line: 1398, column: 18, scope: !7740)
!7757 = !DILocation(line: 1398, column: 32, scope: !7740)
!7758 = !DILocation(line: 1398, column: 37, scope: !7740)
!7759 = !DILocalVariable(name: "fcoeff", scope: !7740, file: !897, line: 1399, type: !1767)
!7760 = !DILocation(line: 1399, column: 18, scope: !7740)
!7761 = !DILocation(line: 1399, column: 66, scope: !7740)
!7762 = !DILocation(line: 1399, column: 27, scope: !7740)
!7763 = !DILocation(line: 1399, column: 51, scope: !7740)
!7764 = !DILocation(line: 1399, column: 32, scope: !7740)
!7765 = !DILocation(line: 1399, column: 60, scope: !7740)
!7766 = !DILocalVariable(name: "shift", scope: !7740, file: !897, line: 1400, type: !1123)
!7767 = !DILocation(line: 1400, column: 13, scope: !7740)
!7768 = !DILocalVariable(name: "i", scope: !7740, file: !897, line: 1401, type: !993)
!7769 = !DILocation(line: 1401, column: 22, scope: !7740)
!7770 = !DILocalVariable(name: "order", scope: !7740, file: !897, line: 1402, type: !939)
!7771 = !DILocation(line: 1402, column: 13, scope: !7740)
!7772 = !DILocation(line: 1404, column: 16, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7740, file: !897, line: 1404, column: 9)
!7774 = !DILocation(line: 1404, column: 14, scope: !7773)
!7775 = !DILocation(line: 1404, column: 21, scope: !7776)
!7776 = !DILexicalBlockFile(scope: !7777, file: !897, discriminator: 1)
!7777 = distinct !DILexicalBlock(scope: !7773, file: !897, line: 1404, column: 9)
!7778 = !DILocation(line: 1404, column: 25, scope: !7776)
!7779 = !DILocation(line: 1404, column: 30, scope: !7776)
!7780 = !DILocation(line: 1404, column: 23, scope: !7776)
!7781 = !DILocation(line: 1404, column: 9, scope: !7776)
!7782 = !DILocation(line: 1405, column: 31, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7777, file: !897, line: 1404, column: 54)
!7784 = !DILocation(line: 1405, column: 30, scope: !7783)
!7785 = !DILocation(line: 1405, column: 25, scope: !7783)
!7786 = !DILocation(line: 1405, column: 28, scope: !7783)
!7787 = !DILocation(line: 1406, column: 30, scope: !7783)
!7788 = !DILocation(line: 1406, column: 35, scope: !7783)
!7789 = !DILocation(line: 1406, column: 27, scope: !7783)
!7790 = !DILocation(line: 1407, column: 9, scope: !7783)
!7791 = !DILocation(line: 1404, column: 50, scope: !7792)
!7792 = !DILexicalBlockFile(scope: !7777, file: !897, discriminator: 2)
!7793 = !DILocation(line: 1404, column: 9, scope: !7792)
!7794 = distinct !{!7794, !7795}
!7795 = !DILocation(line: 1404, column: 9, scope: !7740)
!7796 = !DILocation(line: 1409, column: 36, scope: !7740)
!7797 = !DILocation(line: 1409, column: 41, scope: !7740)
!7798 = !DILocation(line: 1409, column: 50, scope: !7740)
!7799 = !DILocation(line: 1409, column: 55, scope: !7740)
!7800 = !DILocation(line: 1410, column: 35, scope: !7740)
!7801 = !DILocation(line: 1410, column: 40, scope: !7740)
!7802 = !DILocation(line: 1411, column: 35, scope: !7740)
!7803 = !DILocation(line: 1411, column: 50, scope: !7740)
!7804 = !DILocation(line: 1411, column: 57, scope: !7740)
!7805 = !DILocation(line: 1409, column: 17, scope: !7740)
!7806 = !DILocation(line: 1409, column: 15, scope: !7740)
!7807 = !DILocation(line: 1415, column: 21, scope: !7740)
!7808 = !DILocation(line: 1415, column: 9, scope: !7740)
!7809 = !DILocation(line: 1415, column: 13, scope: !7740)
!7810 = !DILocation(line: 1415, column: 19, scope: !7740)
!7811 = !DILocation(line: 1416, column: 27, scope: !7740)
!7812 = !DILocation(line: 1416, column: 32, scope: !7740)
!7813 = !DILocation(line: 1416, column: 21, scope: !7740)
!7814 = !DILocation(line: 1416, column: 9, scope: !7740)
!7815 = !DILocation(line: 1416, column: 13, scope: !7740)
!7816 = !DILocation(line: 1416, column: 19, scope: !7740)
!7817 = !DILocation(line: 1418, column: 16, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7740, file: !897, line: 1418, column: 9)
!7819 = !DILocation(line: 1418, column: 14, scope: !7818)
!7820 = !DILocation(line: 1418, column: 21, scope: !7821)
!7821 = !DILexicalBlockFile(scope: !7822, file: !897, discriminator: 1)
!7822 = distinct !DILexicalBlock(scope: !7818, file: !897, line: 1418, column: 9)
!7823 = !DILocation(line: 1418, column: 25, scope: !7821)
!7824 = !DILocation(line: 1418, column: 23, scope: !7821)
!7825 = !DILocation(line: 1418, column: 9, scope: !7821)
!7826 = !DILocation(line: 1419, column: 40, scope: !7822)
!7827 = !DILocation(line: 1419, column: 25, scope: !7822)
!7828 = !DILocation(line: 1419, column: 31, scope: !7822)
!7829 = !DILocation(line: 1419, column: 36, scope: !7822)
!7830 = !DILocation(line: 1419, column: 20, scope: !7822)
!7831 = !DILocation(line: 1419, column: 13, scope: !7822)
!7832 = !DILocation(line: 1419, column: 23, scope: !7822)
!7833 = !DILocation(line: 1418, column: 33, scope: !7834)
!7834 = !DILexicalBlockFile(scope: !7822, file: !897, discriminator: 2)
!7835 = !DILocation(line: 1418, column: 9, scope: !7834)
!7836 = distinct !{!7836, !7837}
!7837 = !DILocation(line: 1418, column: 9, scope: !7740)
!7838 = !DILocation(line: 1421, column: 28, scope: !7740)
!7839 = !DILocation(line: 1421, column: 33, scope: !7740)
!7840 = !DILocation(line: 1421, column: 37, scope: !7740)
!7841 = !DILocation(line: 1421, column: 9, scope: !7740)
!7842 = !DILocation(line: 1422, column: 5, scope: !7740)
!7843 = !DILocation(line: 1423, column: 1, scope: !7688)
!7844 = distinct !DISubprogram(name: "code_filter_coeffs", scope: !897, file: !897, line: 1351, type: !7845, isLocal: true, isDefinition: true, scopeLine: 1352, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!7845 = !DISubroutineType(types: !7846)
!7846 = !{null, !1749, !4529, !1767}
!7847 = !DILocalVariable(name: "ctx", arg: 1, scope: !7844, file: !897, line: 1351, type: !1749)
!7848 = !DILocation(line: 1351, column: 50, scope: !7844)
!7849 = !DILocalVariable(name: "fp", arg: 2, scope: !7844, file: !897, line: 1351, type: !4529)
!7850 = !DILocation(line: 1351, column: 69, scope: !7844)
!7851 = !DILocalVariable(name: "fcoeff", arg: 3, scope: !7844, file: !897, line: 1351, type: !1767)
!7852 = !DILocation(line: 1351, column: 82, scope: !7844)
!7853 = !DILocalVariable(name: "min", scope: !7844, file: !897, line: 1353, type: !939)
!7854 = !DILocation(line: 1353, column: 9, scope: !7844)
!7855 = !DILocalVariable(name: "max", scope: !7844, file: !897, line: 1353, type: !939)
!7856 = !DILocation(line: 1353, column: 27, scope: !7844)
!7857 = !DILocalVariable(name: "bits", scope: !7844, file: !897, line: 1354, type: !939)
!7858 = !DILocation(line: 1354, column: 9, scope: !7844)
!7859 = !DILocalVariable(name: "shift", scope: !7844, file: !897, line: 1354, type: !939)
!7860 = !DILocation(line: 1354, column: 15, scope: !7844)
!7861 = !DILocalVariable(name: "coeff_mask", scope: !7844, file: !897, line: 1355, type: !939)
!7862 = !DILocation(line: 1355, column: 9, scope: !7844)
!7863 = !DILocalVariable(name: "order", scope: !7844, file: !897, line: 1356, type: !939)
!7864 = !DILocation(line: 1356, column: 9, scope: !7844)
!7865 = !DILocation(line: 1358, column: 16, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7844, file: !897, line: 1358, column: 5)
!7867 = !DILocation(line: 1358, column: 10, scope: !7866)
!7868 = !DILocation(line: 1358, column: 21, scope: !7869)
!7869 = !DILexicalBlockFile(scope: !7870, file: !897, discriminator: 1)
!7870 = distinct !DILexicalBlock(scope: !7866, file: !897, line: 1358, column: 5)
!7871 = !DILocation(line: 1358, column: 29, scope: !7869)
!7872 = !DILocation(line: 1358, column: 33, scope: !7869)
!7873 = !DILocation(line: 1358, column: 27, scope: !7869)
!7874 = !DILocation(line: 1358, column: 5, scope: !7869)
!7875 = !DILocalVariable(name: "coeff", scope: !7876, file: !897, line: 1359, type: !939)
!7876 = distinct !DILexicalBlock(scope: !7870, file: !897, line: 1358, column: 49)
!7877 = !DILocation(line: 1359, column: 13, scope: !7876)
!7878 = !DILocation(line: 1359, column: 28, scope: !7876)
!7879 = !DILocation(line: 1359, column: 21, scope: !7876)
!7880 = !DILocation(line: 1361, column: 13, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7876, file: !897, line: 1361, column: 13)
!7882 = !DILocation(line: 1361, column: 21, scope: !7881)
!7883 = !DILocation(line: 1361, column: 19, scope: !7881)
!7884 = !DILocation(line: 1361, column: 13, scope: !7876)
!7885 = !DILocation(line: 1362, column: 19, scope: !7881)
!7886 = !DILocation(line: 1362, column: 17, scope: !7881)
!7887 = !DILocation(line: 1362, column: 13, scope: !7881)
!7888 = !DILocation(line: 1363, column: 13, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7876, file: !897, line: 1363, column: 13)
!7890 = !DILocation(line: 1363, column: 21, scope: !7889)
!7891 = !DILocation(line: 1363, column: 19, scope: !7889)
!7892 = !DILocation(line: 1363, column: 13, scope: !7876)
!7893 = !DILocation(line: 1364, column: 19, scope: !7889)
!7894 = !DILocation(line: 1364, column: 17, scope: !7889)
!7895 = !DILocation(line: 1364, column: 13, scope: !7889)
!7896 = !DILocation(line: 1366, column: 23, scope: !7876)
!7897 = !DILocation(line: 1366, column: 20, scope: !7876)
!7898 = !DILocation(line: 1367, column: 5, scope: !7876)
!7899 = !DILocation(line: 1358, column: 45, scope: !7900)
!7900 = !DILexicalBlockFile(scope: !7870, file: !897, discriminator: 2)
!7901 = !DILocation(line: 1358, column: 5, scope: !7900)
!7902 = distinct !{!7902, !7903}
!7903 = !DILocation(line: 1358, column: 5, scope: !7844)
!7904 = !DILocation(line: 1369, column: 27, scope: !7844)
!7905 = !DILocation(line: 1369, column: 14, scope: !7844)
!7906 = !DILocation(line: 1369, column: 49, scope: !7844)
!7907 = !DILocation(line: 1369, column: 36, scope: !7908)
!7908 = !DILexicalBlockFile(scope: !7844, file: !897, discriminator: 4)
!7909 = !DILocation(line: 1369, column: 33, scope: !7844)
!7910 = !DILocation(line: 1369, column: 13, scope: !7844)
!7911 = !DILocation(line: 1369, column: 71, scope: !7912)
!7912 = !DILexicalBlockFile(scope: !7844, file: !897, discriminator: 1)
!7913 = !DILocation(line: 1369, column: 58, scope: !7912)
!7914 = !DILocation(line: 1369, column: 13, scope: !7912)
!7915 = !DILocation(line: 1369, column: 93, scope: !7916)
!7916 = !DILexicalBlockFile(scope: !7844, file: !897, discriminator: 2)
!7917 = !DILocation(line: 1369, column: 80, scope: !7916)
!7918 = !DILocation(line: 1369, column: 13, scope: !7916)
!7919 = !DILocation(line: 1369, column: 13, scope: !7920)
!7920 = !DILexicalBlockFile(scope: !7844, file: !897, discriminator: 3)
!7921 = !DILocation(line: 1369, column: 10, scope: !7920)
!7922 = !DILocation(line: 1371, column: 16, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7844, file: !897, line: 1371, column: 5)
!7924 = !DILocation(line: 1371, column: 10, scope: !7923)
!7925 = !DILocation(line: 1371, column: 21, scope: !7926)
!7926 = !DILexicalBlockFile(scope: !7927, file: !897, discriminator: 1)
!7927 = distinct !DILexicalBlock(scope: !7923, file: !897, line: 1371, column: 5)
!7928 = !DILocation(line: 1371, column: 27, scope: !7926)
!7929 = !DILocation(line: 1371, column: 31, scope: !7926)
!7930 = !DILocation(line: 1371, column: 34, scope: !7931)
!7931 = !DILexicalBlockFile(scope: !7927, file: !897, discriminator: 2)
!7932 = !DILocation(line: 1371, column: 41, scope: !7931)
!7933 = !DILocation(line: 1371, column: 39, scope: !7931)
!7934 = !DILocation(line: 1371, column: 47, scope: !7931)
!7935 = !DILocation(line: 1371, column: 52, scope: !7931)
!7936 = !DILocation(line: 1371, column: 57, scope: !7937)
!7937 = !DILexicalBlockFile(scope: !7927, file: !897, discriminator: 3)
!7938 = !DILocation(line: 1371, column: 74, scope: !7937)
!7939 = !DILocation(line: 1371, column: 72, scope: !7937)
!7940 = !DILocation(line: 1371, column: 68, scope: !7937)
!7941 = !DILocation(line: 1371, column: 55, scope: !7937)
!7942 = !DILocation(line: 1371, column: 5, scope: !7943)
!7943 = !DILexicalBlockFile(scope: !7923, file: !897, discriminator: 4)
!7944 = !DILocation(line: 1371, column: 5, scope: !7945)
!7945 = !DILexicalBlockFile(scope: !7923, file: !897, discriminator: 5)
!7946 = !DILocation(line: 1371, column: 88, scope: !7947)
!7947 = !DILexicalBlockFile(scope: !7927, file: !897, discriminator: 6)
!7948 = !DILocation(line: 1371, column: 5, scope: !7947)
!7949 = distinct !{!7949, !7950}
!7950 = !DILocation(line: 1371, column: 5, scope: !7844)
!7951 = !DILocation(line: 1373, column: 22, scope: !7844)
!7952 = !DILocation(line: 1373, column: 5, scope: !7844)
!7953 = !DILocation(line: 1373, column: 9, scope: !7844)
!7954 = !DILocation(line: 1373, column: 20, scope: !7844)
!7955 = !DILocation(line: 1374, column: 23, scope: !7844)
!7956 = !DILocation(line: 1374, column: 5, scope: !7844)
!7957 = !DILocation(line: 1374, column: 9, scope: !7844)
!7958 = !DILocation(line: 1374, column: 21, scope: !7844)
!7959 = !DILocation(line: 1375, column: 1, scope: !7844)
!7960 = distinct !DISubprogram(name: "copy_matrix_params", scope: !897, file: !897, line: 358, type: !7961, isLocal: true, isDefinition: true, scopeLine: 359, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!7961 = !DISubroutineType(types: !7962)
!7962 = !{null, !3945, !3945}
!7963 = !DILocalVariable(name: "dst", arg: 1, scope: !7960, file: !897, line: 358, type: !3945)
!7964 = !DILocation(line: 358, column: 46, scope: !7960)
!7965 = !DILocalVariable(name: "src", arg: 2, scope: !7960, file: !897, line: 358, type: !3945)
!7966 = !DILocation(line: 358, column: 65, scope: !7960)
!7967 = !DILocation(line: 360, column: 18, scope: !7960)
!7968 = !DILocation(line: 360, column: 23, scope: !7960)
!7969 = !DILocation(line: 360, column: 5, scope: !7960)
!7970 = !DILocation(line: 360, column: 10, scope: !7960)
!7971 = !DILocation(line: 360, column: 16, scope: !7960)
!7972 = !DILocation(line: 362, column: 9, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7960, file: !897, line: 362, column: 9)
!7974 = !DILocation(line: 362, column: 14, scope: !7973)
!7975 = !DILocation(line: 362, column: 9, scope: !7960)
!7976 = !DILocalVariable(name: "channel", scope: !7977, file: !897, line: 363, type: !993)
!7977 = distinct !DILexicalBlock(scope: !7973, file: !897, line: 362, column: 21)
!7978 = !DILocation(line: 363, column: 22, scope: !7977)
!7979 = !DILocalVariable(name: "count", scope: !7977, file: !897, line: 363, type: !993)
!7980 = !DILocation(line: 363, column: 31, scope: !7977)
!7981 = !DILocation(line: 365, column: 22, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7977, file: !897, line: 365, column: 9)
!7983 = !DILocation(line: 365, column: 14, scope: !7982)
!7984 = !DILocation(line: 365, column: 27, scope: !7985)
!7985 = !DILexicalBlockFile(scope: !7986, file: !897, discriminator: 1)
!7986 = distinct !DILexicalBlock(scope: !7982, file: !897, line: 365, column: 9)
!7987 = !DILocation(line: 365, column: 35, scope: !7985)
!7988 = !DILocation(line: 365, column: 9, scope: !7985)
!7989 = !DILocation(line: 367, column: 46, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7986, file: !897, line: 365, column: 51)
!7991 = !DILocation(line: 367, column: 35, scope: !7990)
!7992 = !DILocation(line: 367, column: 40, scope: !7990)
!7993 = !DILocation(line: 367, column: 24, scope: !7990)
!7994 = !DILocation(line: 367, column: 13, scope: !7990)
!7995 = !DILocation(line: 367, column: 18, scope: !7990)
!7996 = !DILocation(line: 367, column: 33, scope: !7990)
!7997 = !DILocation(line: 368, column: 46, scope: !7990)
!7998 = !DILocation(line: 368, column: 35, scope: !7990)
!7999 = !DILocation(line: 368, column: 40, scope: !7990)
!8000 = !DILocation(line: 368, column: 24, scope: !7990)
!8001 = !DILocation(line: 368, column: 13, scope: !7990)
!8002 = !DILocation(line: 368, column: 18, scope: !7990)
!8003 = !DILocation(line: 368, column: 33, scope: !7990)
!8004 = !DILocation(line: 370, column: 24, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7990, file: !897, line: 370, column: 13)
!8006 = !DILocation(line: 370, column: 18, scope: !8005)
!8007 = !DILocation(line: 370, column: 29, scope: !8008)
!8008 = !DILexicalBlockFile(scope: !8009, file: !897, discriminator: 1)
!8009 = distinct !DILexicalBlock(scope: !8005, file: !897, line: 370, column: 13)
!8010 = !DILocation(line: 370, column: 35, scope: !8008)
!8011 = !DILocation(line: 370, column: 13, scope: !8008)
!8012 = !DILocation(line: 371, column: 64, scope: !8009)
!8013 = !DILocation(line: 371, column: 46, scope: !8009)
!8014 = !DILocation(line: 371, column: 57, scope: !8009)
!8015 = !DILocation(line: 371, column: 51, scope: !8009)
!8016 = !DILocation(line: 371, column: 35, scope: !8009)
!8017 = !DILocation(line: 371, column: 17, scope: !8009)
!8018 = !DILocation(line: 371, column: 28, scope: !8009)
!8019 = !DILocation(line: 371, column: 22, scope: !8009)
!8020 = !DILocation(line: 371, column: 44, scope: !8009)
!8021 = !DILocation(line: 370, column: 45, scope: !8022)
!8022 = !DILexicalBlockFile(scope: !8009, file: !897, discriminator: 2)
!8023 = !DILocation(line: 370, column: 13, scope: !8022)
!8024 = distinct !{!8024, !8025}
!8025 = !DILocation(line: 370, column: 13, scope: !7990)
!8026 = !DILocation(line: 372, column: 9, scope: !7990)
!8027 = !DILocation(line: 365, column: 47, scope: !8028)
!8028 = !DILexicalBlockFile(scope: !7986, file: !897, discriminator: 2)
!8029 = !DILocation(line: 365, column: 9, scope: !8028)
!8030 = distinct !{!8030, !8031}
!8031 = !DILocation(line: 365, column: 9, scope: !7977)
!8032 = !DILocation(line: 374, column: 20, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !7977, file: !897, line: 374, column: 9)
!8034 = !DILocation(line: 374, column: 14, scope: !8033)
!8035 = !DILocation(line: 374, column: 25, scope: !8036)
!8036 = !DILexicalBlockFile(scope: !8037, file: !897, discriminator: 1)
!8037 = distinct !DILexicalBlock(scope: !8033, file: !897, line: 374, column: 9)
!8038 = !DILocation(line: 374, column: 31, scope: !8036)
!8039 = !DILocation(line: 374, column: 9, scope: !8036)
!8040 = !DILocation(line: 375, column: 44, scope: !8037)
!8041 = !DILocation(line: 375, column: 33, scope: !8037)
!8042 = !DILocation(line: 375, column: 38, scope: !8037)
!8043 = !DILocation(line: 375, column: 24, scope: !8037)
!8044 = !DILocation(line: 375, column: 13, scope: !8037)
!8045 = !DILocation(line: 375, column: 18, scope: !8037)
!8046 = !DILocation(line: 375, column: 31, scope: !8037)
!8047 = !DILocation(line: 374, column: 41, scope: !8048)
!8048 = !DILexicalBlockFile(scope: !8037, file: !897, discriminator: 2)
!8049 = !DILocation(line: 374, column: 9, scope: !8048)
!8050 = distinct !{!8050, !8051}
!8051 = !DILocation(line: 374, column: 9, scope: !7977)
!8052 = !DILocation(line: 376, column: 5, scope: !7977)
!8053 = !DILocation(line: 377, column: 1, scope: !7960)
!8054 = distinct !DISubprogram(name: "copy_filter_params", scope: !897, file: !897, line: 339, type: !8055, isLocal: true, isDefinition: true, scopeLine: 340, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!8055 = !DISubroutineType(types: !8056)
!8056 = !{null, !921, !921, !939}
!8057 = !DILocalVariable(name: "dst_cp", arg: 1, scope: !8054, file: !897, line: 339, type: !921)
!8058 = !DILocation(line: 339, column: 47, scope: !8054)
!8059 = !DILocalVariable(name: "src_cp", arg: 2, scope: !8054, file: !897, line: 339, type: !921)
!8060 = !DILocation(line: 339, column: 70, scope: !8054)
!8061 = !DILocalVariable(name: "filter", arg: 3, scope: !8054, file: !897, line: 339, type: !939)
!8062 = !DILocation(line: 339, column: 82, scope: !8054)
!8063 = !DILocalVariable(name: "dst", scope: !8054, file: !897, line: 341, type: !4529)
!8064 = !DILocation(line: 341, column: 19, scope: !8054)
!8065 = !DILocation(line: 341, column: 48, scope: !8054)
!8066 = !DILocation(line: 341, column: 26, scope: !8054)
!8067 = !DILocation(line: 341, column: 34, scope: !8054)
!8068 = !DILocalVariable(name: "src", scope: !8054, file: !897, line: 342, type: !4529)
!8069 = !DILocation(line: 342, column: 19, scope: !8054)
!8070 = !DILocation(line: 342, column: 48, scope: !8054)
!8071 = !DILocation(line: 342, column: 26, scope: !8054)
!8072 = !DILocation(line: 342, column: 34, scope: !8054)
!8073 = !DILocalVariable(name: "order", scope: !8054, file: !897, line: 343, type: !993)
!8074 = !DILocation(line: 343, column: 18, scope: !8054)
!8075 = !DILocation(line: 345, column: 18, scope: !8054)
!8076 = !DILocation(line: 345, column: 23, scope: !8054)
!8077 = !DILocation(line: 345, column: 5, scope: !8054)
!8078 = !DILocation(line: 345, column: 10, scope: !8054)
!8079 = !DILocation(line: 345, column: 16, scope: !8054)
!8080 = !DILocation(line: 347, column: 9, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8054, file: !897, line: 347, column: 9)
!8082 = !DILocation(line: 347, column: 14, scope: !8081)
!8083 = !DILocation(line: 347, column: 9, scope: !8054)
!8084 = !DILocation(line: 348, column: 22, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8081, file: !897, line: 347, column: 21)
!8086 = !DILocation(line: 348, column: 27, scope: !8085)
!8087 = !DILocation(line: 348, column: 9, scope: !8085)
!8088 = !DILocation(line: 348, column: 14, scope: !8085)
!8089 = !DILocation(line: 348, column: 20, scope: !8085)
!8090 = !DILocation(line: 350, column: 28, scope: !8085)
!8091 = !DILocation(line: 350, column: 33, scope: !8085)
!8092 = !DILocation(line: 350, column: 9, scope: !8085)
!8093 = !DILocation(line: 350, column: 14, scope: !8085)
!8094 = !DILocation(line: 350, column: 26, scope: !8085)
!8095 = !DILocation(line: 351, column: 27, scope: !8085)
!8096 = !DILocation(line: 351, column: 32, scope: !8085)
!8097 = !DILocation(line: 351, column: 9, scope: !8085)
!8098 = !DILocation(line: 351, column: 14, scope: !8085)
!8099 = !DILocation(line: 351, column: 25, scope: !8085)
!8100 = !DILocation(line: 352, column: 5, scope: !8085)
!8101 = !DILocation(line: 354, column: 16, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8054, file: !897, line: 354, column: 5)
!8103 = !DILocation(line: 354, column: 10, scope: !8102)
!8104 = !DILocation(line: 354, column: 21, scope: !8105)
!8105 = !DILexicalBlockFile(scope: !8106, file: !897, discriminator: 1)
!8106 = distinct !DILexicalBlock(scope: !8102, file: !897, line: 354, column: 5)
!8107 = !DILocation(line: 354, column: 29, scope: !8105)
!8108 = !DILocation(line: 354, column: 34, scope: !8105)
!8109 = !DILocation(line: 354, column: 27, scope: !8105)
!8110 = !DILocation(line: 354, column: 5, scope: !8105)
!8111 = !DILocation(line: 355, column: 62, scope: !8106)
!8112 = !DILocation(line: 355, column: 40, scope: !8106)
!8113 = !DILocation(line: 355, column: 54, scope: !8106)
!8114 = !DILocation(line: 355, column: 48, scope: !8106)
!8115 = !DILocation(line: 355, column: 31, scope: !8106)
!8116 = !DILocation(line: 355, column: 9, scope: !8106)
!8117 = !DILocation(line: 355, column: 23, scope: !8106)
!8118 = !DILocation(line: 355, column: 17, scope: !8106)
!8119 = !DILocation(line: 355, column: 38, scope: !8106)
!8120 = !DILocation(line: 354, column: 46, scope: !8121)
!8121 = !DILexicalBlockFile(scope: !8106, file: !897, discriminator: 2)
!8122 = !DILocation(line: 354, column: 5, scope: !8121)
!8123 = distinct !{!8123, !8124}
!8124 = !DILocation(line: 354, column: 5, scope: !8054)
!8125 = !DILocation(line: 356, column: 1, scope: !8054)
!8126 = distinct !DISubprogram(name: "no_codebook_bits", scope: !897, file: !897, line: 1587, type: !8127, isLocal: true, isDefinition: true, scopeLine: 1591, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!8127 = !DISubroutineType(types: !8128)
!8128 = !{null, !1749, !993, !938, !938, !7148}
!8129 = !DILocalVariable(name: "ctx", arg: 1, scope: !8126, file: !897, line: 1587, type: !1749)
!8130 = !DILocation(line: 1587, column: 48, scope: !8126)
!8131 = !DILocalVariable(name: "channel", arg: 2, scope: !8126, file: !897, line: 1588, type: !993)
!8132 = !DILocation(line: 1588, column: 43, scope: !8126)
!8133 = !DILocalVariable(name: "min", arg: 3, scope: !8126, file: !897, line: 1589, type: !938)
!8134 = !DILocation(line: 1589, column: 38, scope: !8126)
!8135 = !DILocalVariable(name: "max", arg: 4, scope: !8126, file: !897, line: 1589, type: !938)
!8136 = !DILocation(line: 1589, column: 51, scope: !8126)
!8137 = !DILocalVariable(name: "bo", arg: 5, scope: !8126, file: !897, line: 1590, type: !7148)
!8138 = !DILocation(line: 1590, column: 42, scope: !8126)
!8139 = !DILocalVariable(name: "dp", scope: !8126, file: !897, line: 1592, type: !955)
!8140 = !DILocation(line: 1592, column: 21, scope: !8126)
!8141 = !DILocation(line: 1592, column: 26, scope: !8126)
!8142 = !DILocation(line: 1592, column: 31, scope: !8126)
!8143 = !DILocalVariable(name: "offset", scope: !8126, file: !897, line: 1593, type: !950)
!8144 = !DILocation(line: 1593, column: 13, scope: !8126)
!8145 = !DILocalVariable(name: "unsign", scope: !8126, file: !897, line: 1594, type: !938)
!8146 = !DILocation(line: 1594, column: 13, scope: !8126)
!8147 = !DILocalVariable(name: "diff", scope: !8126, file: !897, line: 1595, type: !992)
!8148 = !DILocation(line: 1595, column: 14, scope: !8126)
!8149 = !DILocalVariable(name: "lsb_bits", scope: !8126, file: !897, line: 1596, type: !939)
!8150 = !DILocation(line: 1596, column: 9, scope: !8126)
!8151 = !DILocation(line: 1600, column: 9, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8126, file: !897, line: 1600, column: 9)
!8153 = !DILocation(line: 1600, column: 13, scope: !8152)
!8154 = !DILocation(line: 1600, column: 9, scope: !8126)
!8155 = !DILocation(line: 1601, column: 17, scope: !8152)
!8156 = !DILocation(line: 1601, column: 38, scope: !8152)
!8157 = !DILocation(line: 1601, column: 36, scope: !8152)
!8158 = !DILocation(line: 1601, column: 42, scope: !8152)
!8159 = !DILocation(line: 1601, column: 22, scope: !8152)
!8160 = !DILocation(line: 1601, column: 16, scope: !8152)
!8161 = !DILocation(line: 1601, column: 50, scope: !8162)
!8162 = !DILexicalBlockFile(scope: !8152, file: !897, discriminator: 1)
!8163 = !DILocation(line: 1601, column: 16, scope: !8162)
!8164 = !DILocation(line: 1601, column: 71, scope: !8165)
!8165 = !DILexicalBlockFile(scope: !8152, file: !897, discriminator: 2)
!8166 = !DILocation(line: 1601, column: 69, scope: !8165)
!8167 = !DILocation(line: 1601, column: 75, scope: !8165)
!8168 = !DILocation(line: 1601, column: 16, scope: !8165)
!8169 = !DILocation(line: 1601, column: 16, scope: !8170)
!8170 = !DILexicalBlockFile(scope: !8152, file: !897, discriminator: 3)
!8171 = !DILocation(line: 1601, column: 13, scope: !8170)
!8172 = !DILocation(line: 1601, column: 9, scope: !8170)
!8173 = !DILocation(line: 1602, column: 9, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8126, file: !897, line: 1602, column: 9)
!8175 = !DILocation(line: 1602, column: 13, scope: !8174)
!8176 = !DILocation(line: 1602, column: 9, scope: !8126)
!8177 = !DILocation(line: 1603, column: 17, scope: !8174)
!8178 = !DILocation(line: 1603, column: 37, scope: !8174)
!8179 = !DILocation(line: 1603, column: 35, scope: !8174)
!8180 = !DILocation(line: 1603, column: 41, scope: !8174)
!8181 = !DILocation(line: 1603, column: 22, scope: !8174)
!8182 = !DILocation(line: 1603, column: 16, scope: !8174)
!8183 = !DILocation(line: 1603, column: 61, scope: !8184)
!8184 = !DILexicalBlockFile(scope: !8174, file: !897, discriminator: 1)
!8185 = !DILocation(line: 1603, column: 59, scope: !8184)
!8186 = !DILocation(line: 1603, column: 65, scope: !8184)
!8187 = !DILocation(line: 1603, column: 16, scope: !8184)
!8188 = !DILocation(line: 1603, column: 73, scope: !8189)
!8189 = !DILexicalBlockFile(scope: !8174, file: !897, discriminator: 2)
!8190 = !DILocation(line: 1603, column: 16, scope: !8189)
!8191 = !DILocation(line: 1603, column: 16, scope: !8192)
!8192 = !DILexicalBlockFile(scope: !8174, file: !897, discriminator: 3)
!8193 = !DILocation(line: 1603, column: 13, scope: !8192)
!8194 = !DILocation(line: 1603, column: 9, scope: !8192)
!8195 = !DILocation(line: 1606, column: 12, scope: !8126)
!8196 = !DILocation(line: 1606, column: 18, scope: !8126)
!8197 = !DILocation(line: 1606, column: 16, scope: !8126)
!8198 = !DILocation(line: 1606, column: 10, scope: !8126)
!8199 = !DILocation(line: 1608, column: 29, scope: !8126)
!8200 = !DILocation(line: 1608, column: 16, scope: !8126)
!8201 = !DILocation(line: 1608, column: 35, scope: !8126)
!8202 = !DILocation(line: 1608, column: 14, scope: !8126)
!8203 = !DILocation(line: 1610, column: 20, scope: !8126)
!8204 = !DILocation(line: 1610, column: 29, scope: !8126)
!8205 = !DILocation(line: 1610, column: 16, scope: !8126)
!8206 = !DILocation(line: 1610, column: 12, scope: !8126)
!8207 = !DILocation(line: 1614, column: 14, scope: !8126)
!8208 = !DILocation(line: 1614, column: 20, scope: !8126)
!8209 = !DILocation(line: 1614, column: 25, scope: !8126)
!8210 = !DILocation(line: 1614, column: 18, scope: !8126)
!8211 = !DILocation(line: 1614, column: 33, scope: !8126)
!8212 = !DILocation(line: 1614, column: 32, scope: !8126)
!8213 = !DILocation(line: 1614, column: 31, scope: !8126)
!8214 = !DILocation(line: 1614, column: 29, scope: !8126)
!8215 = !DILocation(line: 1614, column: 12, scope: !8126)
!8216 = !DILocation(line: 1616, column: 18, scope: !8126)
!8217 = !DILocation(line: 1616, column: 5, scope: !8126)
!8218 = !DILocation(line: 1616, column: 9, scope: !8126)
!8219 = !DILocation(line: 1616, column: 16, scope: !8126)
!8220 = !DILocation(line: 1617, column: 20, scope: !8126)
!8221 = !DILocation(line: 1617, column: 5, scope: !8126)
!8222 = !DILocation(line: 1617, column: 9, scope: !8126)
!8223 = !DILocation(line: 1617, column: 18, scope: !8126)
!8224 = !DILocation(line: 1618, column: 20, scope: !8126)
!8225 = !DILocation(line: 1618, column: 31, scope: !8126)
!8226 = !DILocation(line: 1618, column: 35, scope: !8126)
!8227 = !DILocation(line: 1618, column: 29, scope: !8126)
!8228 = !DILocation(line: 1618, column: 5, scope: !8126)
!8229 = !DILocation(line: 1618, column: 9, scope: !8126)
!8230 = !DILocation(line: 1618, column: 18, scope: !8126)
!8231 = !DILocation(line: 1619, column: 15, scope: !8126)
!8232 = !DILocation(line: 1619, column: 21, scope: !8126)
!8233 = !DILocation(line: 1619, column: 19, scope: !8126)
!8234 = !DILocation(line: 1619, column: 28, scope: !8126)
!8235 = !DILocation(line: 1619, column: 5, scope: !8126)
!8236 = !DILocation(line: 1619, column: 9, scope: !8126)
!8237 = !DILocation(line: 1619, column: 13, scope: !8126)
!8238 = !DILocation(line: 1620, column: 15, scope: !8126)
!8239 = !DILocation(line: 1620, column: 21, scope: !8126)
!8240 = !DILocation(line: 1620, column: 19, scope: !8126)
!8241 = !DILocation(line: 1620, column: 5, scope: !8126)
!8242 = !DILocation(line: 1620, column: 9, scope: !8126)
!8243 = !DILocation(line: 1620, column: 13, scope: !8126)
!8244 = !DILocation(line: 1621, column: 1, scope: !8126)
!8245 = distinct !DISubprogram(name: "no_codebook_bits_offset", scope: !897, file: !897, line: 1559, type: !8246, isLocal: true, isDefinition: true, scopeLine: 1563, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!8246 = !DISubroutineType(types: !8247)
!8247 = !{null, !1749, !993, !950, !938, !938, !7148}
!8248 = !DILocalVariable(name: "ctx", arg: 1, scope: !8245, file: !897, line: 1559, type: !1749)
!8249 = !DILocation(line: 1559, column: 55, scope: !8245)
!8250 = !DILocalVariable(name: "channel", arg: 2, scope: !8245, file: !897, line: 1560, type: !993)
!8251 = !DILocation(line: 1560, column: 50, scope: !8245)
!8252 = !DILocalVariable(name: "offset", arg: 3, scope: !8245, file: !897, line: 1560, type: !950)
!8253 = !DILocation(line: 1560, column: 67, scope: !8245)
!8254 = !DILocalVariable(name: "min", arg: 4, scope: !8245, file: !897, line: 1561, type: !938)
!8255 = !DILocation(line: 1561, column: 45, scope: !8245)
!8256 = !DILocalVariable(name: "max", arg: 5, scope: !8245, file: !897, line: 1561, type: !938)
!8257 = !DILocation(line: 1561, column: 58, scope: !8245)
!8258 = !DILocalVariable(name: "bo", arg: 6, scope: !8245, file: !897, line: 1562, type: !7148)
!8259 = !DILocation(line: 1562, column: 49, scope: !8245)
!8260 = !DILocalVariable(name: "dp", scope: !8245, file: !897, line: 1564, type: !955)
!8261 = !DILocation(line: 1564, column: 21, scope: !8245)
!8262 = !DILocation(line: 1564, column: 26, scope: !8245)
!8263 = !DILocation(line: 1564, column: 31, scope: !8245)
!8264 = !DILocalVariable(name: "unsign", scope: !8245, file: !897, line: 1565, type: !938)
!8265 = !DILocation(line: 1565, column: 13, scope: !8245)
!8266 = !DILocalVariable(name: "lsb_bits", scope: !8245, file: !897, line: 1566, type: !939)
!8267 = !DILocation(line: 1566, column: 9, scope: !8245)
!8268 = !DILocation(line: 1568, column: 12, scope: !8245)
!8269 = !DILocation(line: 1568, column: 9, scope: !8245)
!8270 = !DILocation(line: 1569, column: 12, scope: !8245)
!8271 = !DILocation(line: 1569, column: 9, scope: !8245)
!8272 = !DILocation(line: 1571, column: 31, scope: !8245)
!8273 = !DILocation(line: 1571, column: 18, scope: !8245)
!8274 = !DILocation(line: 1571, column: 53, scope: !8245)
!8275 = !DILocation(line: 1571, column: 40, scope: !8276)
!8276 = !DILexicalBlockFile(scope: !8245, file: !897, discriminator: 4)
!8277 = !DILocation(line: 1571, column: 37, scope: !8245)
!8278 = !DILocation(line: 1571, column: 17, scope: !8245)
!8279 = !DILocation(line: 1571, column: 75, scope: !8280)
!8280 = !DILexicalBlockFile(scope: !8245, file: !897, discriminator: 1)
!8281 = !DILocation(line: 1571, column: 62, scope: !8280)
!8282 = !DILocation(line: 1571, column: 17, scope: !8280)
!8283 = !DILocation(line: 1571, column: 97, scope: !8284)
!8284 = !DILexicalBlockFile(scope: !8245, file: !897, discriminator: 2)
!8285 = !DILocation(line: 1571, column: 84, scope: !8284)
!8286 = !DILocation(line: 1571, column: 17, scope: !8284)
!8287 = !DILocation(line: 1571, column: 17, scope: !8288)
!8288 = !DILexicalBlockFile(scope: !8245, file: !897, discriminator: 3)
!8289 = !DILocation(line: 1571, column: 104, scope: !8288)
!8290 = !DILocation(line: 1571, column: 14, scope: !8288)
!8291 = !DILocation(line: 1573, column: 19, scope: !8245)
!8292 = !DILocation(line: 1573, column: 18, scope: !8245)
!8293 = !DILocation(line: 1573, column: 17, scope: !8245)
!8294 = !DILocation(line: 1573, column: 14, scope: !8245)
!8295 = !DILocation(line: 1575, column: 20, scope: !8245)
!8296 = !DILocation(line: 1575, column: 29, scope: !8245)
!8297 = !DILocation(line: 1575, column: 16, scope: !8245)
!8298 = !DILocation(line: 1575, column: 12, scope: !8245)
!8299 = !DILocation(line: 1577, column: 18, scope: !8245)
!8300 = !DILocation(line: 1577, column: 5, scope: !8245)
!8301 = !DILocation(line: 1577, column: 9, scope: !8245)
!8302 = !DILocation(line: 1577, column: 16, scope: !8245)
!8303 = !DILocation(line: 1578, column: 20, scope: !8245)
!8304 = !DILocation(line: 1578, column: 5, scope: !8245)
!8305 = !DILocation(line: 1578, column: 9, scope: !8245)
!8306 = !DILocation(line: 1578, column: 18, scope: !8245)
!8307 = !DILocation(line: 1579, column: 20, scope: !8245)
!8308 = !DILocation(line: 1579, column: 31, scope: !8245)
!8309 = !DILocation(line: 1579, column: 35, scope: !8245)
!8310 = !DILocation(line: 1579, column: 29, scope: !8245)
!8311 = !DILocation(line: 1579, column: 5, scope: !8245)
!8312 = !DILocation(line: 1579, column: 9, scope: !8245)
!8313 = !DILocation(line: 1579, column: 18, scope: !8245)
!8314 = !DILocation(line: 1580, column: 15, scope: !8245)
!8315 = !DILocation(line: 1580, column: 24, scope: !8245)
!8316 = !DILocation(line: 1580, column: 22, scope: !8245)
!8317 = !DILocation(line: 1580, column: 31, scope: !8245)
!8318 = !DILocation(line: 1580, column: 5, scope: !8245)
!8319 = !DILocation(line: 1580, column: 9, scope: !8245)
!8320 = !DILocation(line: 1580, column: 13, scope: !8245)
!8321 = !DILocation(line: 1581, column: 15, scope: !8245)
!8322 = !DILocation(line: 1581, column: 24, scope: !8245)
!8323 = !DILocation(line: 1581, column: 22, scope: !8245)
!8324 = !DILocation(line: 1581, column: 5, scope: !8245)
!8325 = !DILocation(line: 1581, column: 9, scope: !8245)
!8326 = !DILocation(line: 1581, column: 13, scope: !8245)
!8327 = !DILocation(line: 1582, column: 1, scope: !8245)
!8328 = distinct !DISubprogram(name: "codebook_bits_offset", scope: !897, file: !897, line: 1626, type: !8329, isLocal: true, isDefinition: true, scopeLine: 1630, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!8329 = !DISubroutineType(types: !8330)
!8330 = !{null, !1749, !993, !939, !938, !938, !950, !7148}
!8331 = !DILocalVariable(name: "ctx", arg: 1, scope: !8328, file: !897, line: 1626, type: !1749)
!8332 = !DILocation(line: 1626, column: 59, scope: !8328)
!8333 = !DILocalVariable(name: "channel", arg: 2, scope: !8328, file: !897, line: 1627, type: !993)
!8334 = !DILocation(line: 1627, column: 54, scope: !8328)
!8335 = !DILocalVariable(name: "codebook", arg: 3, scope: !8328, file: !897, line: 1627, type: !939)
!8336 = !DILocation(line: 1627, column: 67, scope: !8328)
!8337 = !DILocalVariable(name: "sample_min", arg: 4, scope: !8328, file: !897, line: 1628, type: !938)
!8338 = !DILocation(line: 1628, column: 49, scope: !8328)
!8339 = !DILocalVariable(name: "sample_max", arg: 5, scope: !8328, file: !897, line: 1628, type: !938)
!8340 = !DILocation(line: 1628, column: 69, scope: !8328)
!8341 = !DILocalVariable(name: "offset", arg: 6, scope: !8328, file: !897, line: 1629, type: !950)
!8342 = !DILocation(line: 1629, column: 49, scope: !8328)
!8343 = !DILocalVariable(name: "bo", arg: 7, scope: !8328, file: !897, line: 1629, type: !7148)
!8344 = !DILocation(line: 1629, column: 69, scope: !8328)
!8345 = !DILocalVariable(name: "codebook_min", scope: !8328, file: !897, line: 1631, type: !938)
!8346 = !DILocation(line: 1631, column: 13, scope: !8328)
!8347 = !DILocation(line: 1631, column: 46, scope: !8328)
!8348 = !DILocation(line: 1631, column: 28, scope: !8328)
!8349 = !DILocalVariable(name: "codebook_max", scope: !8328, file: !897, line: 1632, type: !938)
!8350 = !DILocation(line: 1632, column: 13, scope: !8328)
!8351 = !DILocation(line: 1632, column: 46, scope: !8328)
!8352 = !DILocation(line: 1632, column: 28, scope: !8328)
!8353 = !DILocalVariable(name: "sample_buffer", scope: !8328, file: !897, line: 1633, type: !1767)
!8354 = !DILocation(line: 1633, column: 14, scope: !8328)
!8355 = !DILocation(line: 1633, column: 30, scope: !8328)
!8356 = !DILocation(line: 1633, column: 35, scope: !8328)
!8357 = !DILocation(line: 1633, column: 51, scope: !8328)
!8358 = !DILocation(line: 1633, column: 49, scope: !8328)
!8359 = !DILocalVariable(name: "dp", scope: !8328, file: !897, line: 1634, type: !955)
!8360 = !DILocation(line: 1634, column: 21, scope: !8328)
!8361 = !DILocation(line: 1634, column: 26, scope: !8328)
!8362 = !DILocation(line: 1634, column: 31, scope: !8328)
!8363 = !DILocalVariable(name: "codebook_offset", scope: !8328, file: !897, line: 1635, type: !939)
!8364 = !DILocation(line: 1635, column: 9, scope: !8328)
!8365 = !DILocation(line: 1635, column: 36, scope: !8328)
!8366 = !DILocation(line: 1635, column: 34, scope: !8328)
!8367 = !DILocation(line: 1635, column: 29, scope: !8328)
!8368 = !DILocalVariable(name: "unsign_offset", scope: !8328, file: !897, line: 1636, type: !938)
!8369 = !DILocation(line: 1636, column: 13, scope: !8328)
!8370 = !DILocation(line: 1636, column: 29, scope: !8328)
!8371 = !DILocalVariable(name: "lsb_bits", scope: !8328, file: !897, line: 1637, type: !939)
!8372 = !DILocation(line: 1637, column: 9, scope: !8328)
!8373 = !DILocalVariable(name: "bitcount", scope: !8328, file: !897, line: 1637, type: !939)
!8374 = !DILocation(line: 1637, column: 23, scope: !8328)
!8375 = !DILocalVariable(name: "offset_min", scope: !8328, file: !897, line: 1638, type: !939)
!8376 = !DILocation(line: 1638, column: 9, scope: !8328)
!8377 = !DILocalVariable(name: "offset_max", scope: !8328, file: !897, line: 1638, type: !939)
!8378 = !DILocation(line: 1638, column: 34, scope: !8328)
!8379 = !DILocalVariable(name: "unsign", scope: !8328, file: !897, line: 1639, type: !939)
!8380 = !DILocation(line: 1639, column: 9, scope: !8328)
!8381 = !DILocalVariable(name: "mask", scope: !8328, file: !897, line: 1639, type: !939)
!8382 = !DILocation(line: 1639, column: 17, scope: !8328)
!8383 = !DILocalVariable(name: "i", scope: !8328, file: !897, line: 1640, type: !939)
!8384 = !DILocation(line: 1640, column: 9, scope: !8328)
!8385 = !DILocation(line: 1642, column: 19, scope: !8328)
!8386 = !DILocation(line: 1642, column: 16, scope: !8328)
!8387 = !DILocation(line: 1643, column: 19, scope: !8328)
!8388 = !DILocation(line: 1643, column: 16, scope: !8328)
!8389 = !DILocation(line: 1645, column: 5, scope: !8328)
!8390 = !DILocation(line: 1645, column: 12, scope: !8391)
!8391 = !DILexicalBlockFile(scope: !8328, file: !897, discriminator: 1)
!8392 = !DILocation(line: 1645, column: 25, scope: !8391)
!8393 = !DILocation(line: 1645, column: 23, scope: !8391)
!8394 = !DILocation(line: 1645, column: 38, scope: !8391)
!8395 = !DILocation(line: 1645, column: 41, scope: !8396)
!8396 = !DILexicalBlockFile(scope: !8328, file: !897, discriminator: 2)
!8397 = !DILocation(line: 1645, column: 54, scope: !8396)
!8398 = !DILocation(line: 1645, column: 52, scope: !8396)
!8399 = !DILocation(line: 1645, column: 38, scope: !8396)
!8400 = !DILocation(line: 1645, column: 5, scope: !8401)
!8401 = !DILexicalBlockFile(scope: !8328, file: !897, discriminator: 3)
!8402 = !DILocation(line: 1646, column: 17, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8328, file: !897, line: 1645, column: 68)
!8404 = !DILocation(line: 1647, column: 20, scope: !8403)
!8405 = !DILocation(line: 1648, column: 20, scope: !8403)
!8406 = !DILocation(line: 1645, column: 5, scope: !8407)
!8407 = !DILexicalBlockFile(scope: !8328, file: !897, discriminator: 4)
!8408 = distinct !{!8408, !8389}
!8409 = !DILocation(line: 1651, column: 19, scope: !8328)
!8410 = !DILocation(line: 1651, column: 16, scope: !8328)
!8411 = !DILocation(line: 1651, column: 12, scope: !8328)
!8412 = !DILocation(line: 1652, column: 12, scope: !8328)
!8413 = !DILocation(line: 1652, column: 19, scope: !8328)
!8414 = !DILocation(line: 1652, column: 10, scope: !8328)
!8415 = !DILocation(line: 1654, column: 9, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8328, file: !897, line: 1654, column: 9)
!8417 = !DILocation(line: 1654, column: 18, scope: !8416)
!8418 = !DILocation(line: 1654, column: 9, scope: !8328)
!8419 = !DILocation(line: 1655, column: 26, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8416, file: !897, line: 1654, column: 24)
!8421 = !DILocation(line: 1655, column: 23, scope: !8420)
!8422 = !DILocation(line: 1656, column: 17, scope: !8420)
!8423 = !DILocation(line: 1657, column: 5, scope: !8420)
!8424 = !DILocation(line: 1659, column: 12, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8328, file: !897, line: 1659, column: 5)
!8426 = !DILocation(line: 1659, column: 10, scope: !8425)
!8427 = !DILocation(line: 1659, column: 17, scope: !8428)
!8428 = !DILexicalBlockFile(scope: !8429, file: !897, discriminator: 1)
!8429 = distinct !DILexicalBlock(scope: !8425, file: !897, line: 1659, column: 5)
!8430 = !DILocation(line: 1659, column: 21, scope: !8428)
!8431 = !DILocation(line: 1659, column: 25, scope: !8428)
!8432 = !DILocation(line: 1659, column: 19, scope: !8428)
!8433 = !DILocation(line: 1659, column: 5, scope: !8428)
!8434 = !DILocalVariable(name: "sample", scope: !8435, file: !897, line: 1660, type: !938)
!8435 = distinct !DILexicalBlock(scope: !8429, file: !897, line: 1659, column: 41)
!8436 = !DILocation(line: 1660, column: 17, scope: !8435)
!8437 = !DILocation(line: 1660, column: 27, scope: !8435)
!8438 = !DILocation(line: 1660, column: 26, scope: !8435)
!8439 = !DILocation(line: 1660, column: 64, scope: !8435)
!8440 = !DILocation(line: 1660, column: 44, scope: !8435)
!8441 = !DILocation(line: 1660, column: 48, scope: !8435)
!8442 = !DILocation(line: 1660, column: 41, scope: !8435)
!8443 = !DILocalVariable(name: "temp_min", scope: !8435, file: !897, line: 1661, type: !939)
!8444 = !DILocation(line: 1661, column: 13, scope: !8435)
!8445 = !DILocalVariable(name: "temp_max", scope: !8435, file: !897, line: 1661, type: !939)
!8446 = !DILocation(line: 1661, column: 23, scope: !8435)
!8447 = !DILocation(line: 1663, column: 19, scope: !8435)
!8448 = !DILocation(line: 1663, column: 16, scope: !8435)
!8449 = !DILocation(line: 1665, column: 20, scope: !8435)
!8450 = !DILocation(line: 1665, column: 29, scope: !8435)
!8451 = !DILocation(line: 1665, column: 27, scope: !8435)
!8452 = !DILocation(line: 1665, column: 18, scope: !8435)
!8453 = !DILocation(line: 1666, column: 13, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8435, file: !897, line: 1666, column: 13)
!8455 = !DILocation(line: 1666, column: 24, scope: !8454)
!8456 = !DILocation(line: 1666, column: 22, scope: !8454)
!8457 = !DILocation(line: 1666, column: 13, scope: !8435)
!8458 = !DILocation(line: 1667, column: 26, scope: !8454)
!8459 = !DILocation(line: 1667, column: 24, scope: !8454)
!8460 = !DILocation(line: 1667, column: 13, scope: !8454)
!8461 = !DILocation(line: 1669, column: 20, scope: !8435)
!8462 = !DILocation(line: 1669, column: 29, scope: !8435)
!8463 = !DILocation(line: 1669, column: 27, scope: !8435)
!8464 = !DILocation(line: 1669, column: 38, scope: !8435)
!8465 = !DILocation(line: 1669, column: 18, scope: !8435)
!8466 = !DILocation(line: 1670, column: 13, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8435, file: !897, line: 1670, column: 13)
!8468 = !DILocation(line: 1670, column: 24, scope: !8467)
!8469 = !DILocation(line: 1670, column: 22, scope: !8467)
!8470 = !DILocation(line: 1670, column: 13, scope: !8435)
!8471 = !DILocation(line: 1671, column: 26, scope: !8467)
!8472 = !DILocation(line: 1671, column: 24, scope: !8467)
!8473 = !DILocation(line: 1671, column: 13, scope: !8467)
!8474 = !DILocation(line: 1673, column: 20, scope: !8435)
!8475 = !DILocation(line: 1673, column: 16, scope: !8435)
!8476 = !DILocation(line: 1675, column: 53, scope: !8435)
!8477 = !DILocation(line: 1675, column: 62, scope: !8435)
!8478 = !DILocation(line: 1675, column: 60, scope: !8435)
!8479 = !DILocation(line: 1675, column: 21, scope: !8435)
!8480 = !DILocation(line: 1675, column: 43, scope: !8435)
!8481 = !DILocation(line: 1675, column: 18, scope: !8435)
!8482 = !DILocation(line: 1677, column: 26, scope: !8435)
!8483 = !DILocation(line: 1677, column: 31, scope: !8435)
!8484 = !DILocation(line: 1677, column: 23, scope: !8435)
!8485 = !DILocation(line: 1678, column: 5, scope: !8435)
!8486 = !DILocation(line: 1659, column: 37, scope: !8487)
!8487 = !DILexicalBlockFile(scope: !8429, file: !897, discriminator: 2)
!8488 = !DILocation(line: 1659, column: 5, scope: !8487)
!8489 = distinct !{!8489, !8490}
!8490 = !DILocation(line: 1659, column: 5, scope: !8328)
!8491 = !DILocation(line: 1680, column: 18, scope: !8328)
!8492 = !DILocation(line: 1680, column: 5, scope: !8328)
!8493 = !DILocation(line: 1680, column: 9, scope: !8328)
!8494 = !DILocation(line: 1680, column: 16, scope: !8328)
!8495 = !DILocation(line: 1681, column: 20, scope: !8328)
!8496 = !DILocation(line: 1681, column: 5, scope: !8328)
!8497 = !DILocation(line: 1681, column: 9, scope: !8328)
!8498 = !DILocation(line: 1681, column: 18, scope: !8328)
!8499 = !DILocation(line: 1682, column: 20, scope: !8328)
!8500 = !DILocation(line: 1682, column: 31, scope: !8328)
!8501 = !DILocation(line: 1682, column: 35, scope: !8328)
!8502 = !DILocation(line: 1682, column: 29, scope: !8328)
!8503 = !DILocation(line: 1682, column: 47, scope: !8328)
!8504 = !DILocation(line: 1682, column: 45, scope: !8328)
!8505 = !DILocation(line: 1682, column: 5, scope: !8328)
!8506 = !DILocation(line: 1682, column: 9, scope: !8328)
!8507 = !DILocation(line: 1682, column: 18, scope: !8328)
!8508 = !DILocation(line: 1683, column: 17, scope: !8328)
!8509 = !DILocation(line: 1683, column: 26, scope: !8328)
!8510 = !DILocation(line: 1683, column: 24, scope: !8328)
!8511 = !DILocation(line: 1683, column: 38, scope: !8328)
!8512 = !DILocation(line: 1683, column: 16, scope: !8328)
!8513 = !DILocation(line: 1683, column: 52, scope: !8391)
!8514 = !DILocation(line: 1683, column: 61, scope: !8391)
!8515 = !DILocation(line: 1683, column: 59, scope: !8391)
!8516 = !DILocation(line: 1683, column: 16, scope: !8391)
!8517 = !DILocation(line: 1683, column: 16, scope: !8396)
!8518 = !DILocation(line: 1683, column: 16, scope: !8401)
!8519 = !DILocation(line: 1683, column: 15, scope: !8401)
!8520 = !DILocation(line: 1683, column: 5, scope: !8401)
!8521 = !DILocation(line: 1683, column: 9, scope: !8401)
!8522 = !DILocation(line: 1683, column: 13, scope: !8401)
!8523 = !DILocation(line: 1684, column: 17, scope: !8328)
!8524 = !DILocation(line: 1684, column: 26, scope: !8328)
!8525 = !DILocation(line: 1684, column: 24, scope: !8328)
!8526 = !DILocation(line: 1684, column: 38, scope: !8328)
!8527 = !DILocation(line: 1684, column: 16, scope: !8328)
!8528 = !DILocation(line: 1684, column: 16, scope: !8391)
!8529 = !DILocation(line: 1684, column: 61, scope: !8396)
!8530 = !DILocation(line: 1684, column: 70, scope: !8396)
!8531 = !DILocation(line: 1684, column: 68, scope: !8396)
!8532 = !DILocation(line: 1684, column: 16, scope: !8396)
!8533 = !DILocation(line: 1684, column: 16, scope: !8401)
!8534 = !DILocation(line: 1684, column: 15, scope: !8401)
!8535 = !DILocation(line: 1684, column: 5, scope: !8401)
!8536 = !DILocation(line: 1684, column: 9, scope: !8401)
!8537 = !DILocation(line: 1684, column: 13, scope: !8401)
!8538 = !DILocation(line: 1685, column: 1, scope: !8328)
!8539 = distinct !DISubprogram(name: "codebook_bits", scope: !897, file: !897, line: 1690, type: !8540, isLocal: true, isDefinition: true, scopeLine: 1694, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!8540 = !DISubroutineType(types: !8541)
!8541 = !{null, !1749, !993, !939, !939, !938, !938, !7148, !939}
!8542 = !DILocalVariable(name: "ctx", arg: 1, scope: !8539, file: !897, line: 1690, type: !1749)
!8543 = !DILocation(line: 1690, column: 52, scope: !8539)
!8544 = !DILocalVariable(name: "channel", arg: 2, scope: !8539, file: !897, line: 1691, type: !993)
!8545 = !DILocation(line: 1691, column: 47, scope: !8539)
!8546 = !DILocalVariable(name: "codebook", arg: 3, scope: !8539, file: !897, line: 1691, type: !939)
!8547 = !DILocation(line: 1691, column: 60, scope: !8539)
!8548 = !DILocalVariable(name: "offset", arg: 4, scope: !8539, file: !897, line: 1692, type: !939)
!8549 = !DILocation(line: 1692, column: 38, scope: !8539)
!8550 = !DILocalVariable(name: "min", arg: 5, scope: !8539, file: !897, line: 1692, type: !938)
!8551 = !DILocation(line: 1692, column: 54, scope: !8539)
!8552 = !DILocalVariable(name: "max", arg: 6, scope: !8539, file: !897, line: 1692, type: !938)
!8553 = !DILocation(line: 1692, column: 67, scope: !8539)
!8554 = !DILocalVariable(name: "bo", arg: 7, scope: !8539, file: !897, line: 1693, type: !7148)
!8555 = !DILocation(line: 1693, column: 46, scope: !8539)
!8556 = !DILocalVariable(name: "direction", arg: 8, scope: !8539, file: !897, line: 1693, type: !939)
!8557 = !DILocation(line: 1693, column: 54, scope: !8539)
!8558 = !DILocalVariable(name: "previous_count", scope: !8539, file: !897, line: 1695, type: !939)
!8559 = !DILocation(line: 1695, column: 9, scope: !8539)
!8560 = !DILocalVariable(name: "offset_min", scope: !8539, file: !897, line: 1696, type: !939)
!8561 = !DILocation(line: 1696, column: 9, scope: !8539)
!8562 = !DILocalVariable(name: "offset_max", scope: !8539, file: !897, line: 1696, type: !939)
!8563 = !DILocation(line: 1696, column: 21, scope: !8539)
!8564 = !DILocalVariable(name: "is_greater", scope: !8539, file: !897, line: 1697, type: !939)
!8565 = !DILocation(line: 1697, column: 9, scope: !8539)
!8566 = !DILocation(line: 1699, column: 20, scope: !8539)
!8567 = !DILocation(line: 1699, column: 25, scope: !8539)
!8568 = !DILocation(line: 1699, column: 19, scope: !8539)
!8569 = !DILocation(line: 1699, column: 39, scope: !8570)
!8570 = !DILexicalBlockFile(scope: !8539, file: !897, discriminator: 1)
!8571 = !DILocation(line: 1699, column: 19, scope: !8570)
!8572 = !DILocation(line: 1699, column: 19, scope: !8573)
!8573 = !DILexicalBlockFile(scope: !8539, file: !897, discriminator: 2)
!8574 = !DILocation(line: 1699, column: 19, scope: !8575)
!8575 = !DILexicalBlockFile(scope: !8539, file: !897, discriminator: 3)
!8576 = !DILocation(line: 1699, column: 16, scope: !8575)
!8577 = !DILocation(line: 1700, column: 20, scope: !8539)
!8578 = !DILocation(line: 1700, column: 25, scope: !8539)
!8579 = !DILocation(line: 1700, column: 19, scope: !8539)
!8580 = !DILocation(line: 1700, column: 19, scope: !8570)
!8581 = !DILocation(line: 1700, column: 48, scope: !8573)
!8582 = !DILocation(line: 1700, column: 19, scope: !8573)
!8583 = !DILocation(line: 1700, column: 19, scope: !8575)
!8584 = !DILocation(line: 1700, column: 16, scope: !8575)
!8585 = !DILocation(line: 1702, column: 5, scope: !8539)
!8586 = !DILocalVariable(name: "temp_bo", scope: !8587, file: !897, line: 1703, type: !1730)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !897, line: 1702, column: 14)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !897, line: 1702, column: 5)
!8589 = distinct !DILexicalBlock(scope: !8539, file: !897, line: 1702, column: 5)
!8590 = !DILocation(line: 1703, column: 20, scope: !8587)
!8591 = !DILocation(line: 1705, column: 30, scope: !8587)
!8592 = !DILocation(line: 1705, column: 35, scope: !8587)
!8593 = !DILocation(line: 1705, column: 44, scope: !8587)
!8594 = !DILocation(line: 1706, column: 30, scope: !8587)
!8595 = !DILocation(line: 1706, column: 35, scope: !8587)
!8596 = !DILocation(line: 1706, column: 40, scope: !8587)
!8597 = !DILocation(line: 1705, column: 9, scope: !8587)
!8598 = !DILocation(line: 1709, column: 21, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8587, file: !897, line: 1709, column: 13)
!8600 = !DILocation(line: 1709, column: 32, scope: !8599)
!8601 = !DILocation(line: 1709, column: 30, scope: !8599)
!8602 = !DILocation(line: 1709, column: 13, scope: !8587)
!8603 = !DILocation(line: 1710, column: 25, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8605, file: !897, line: 1710, column: 17)
!8605 = distinct !DILexicalBlock(scope: !8599, file: !897, line: 1709, column: 48)
!8606 = !DILocation(line: 1710, column: 36, scope: !8604)
!8607 = !DILocation(line: 1710, column: 40, scope: !8604)
!8608 = !DILocation(line: 1710, column: 34, scope: !8604)
!8609 = !DILocation(line: 1710, column: 17, scope: !8605)
!8610 = !DILocation(line: 1711, column: 18, scope: !8604)
!8611 = !DILocation(line: 1711, column: 23, scope: !8604)
!8612 = !DILocation(line: 1711, column: 17, scope: !8604)
!8613 = !DILocation(line: 1713, column: 24, scope: !8605)
!8614 = !DILocation(line: 1714, column: 9, scope: !8605)
!8615 = !DILocation(line: 1714, column: 20, scope: !8616)
!8616 = !DILexicalBlockFile(scope: !8617, file: !897, discriminator: 1)
!8617 = distinct !DILexicalBlock(scope: !8599, file: !897, line: 1714, column: 20)
!8618 = !DILocation(line: 1714, column: 36, scope: !8616)
!8619 = !DILocation(line: 1714, column: 41, scope: !8616)
!8620 = !DILocation(line: 1714, column: 33, scope: !8616)
!8621 = !DILocation(line: 1715, column: 13, scope: !8617)
!8622 = !DILocation(line: 1717, column: 34, scope: !8587)
!8623 = !DILocation(line: 1717, column: 24, scope: !8587)
!8624 = !DILocation(line: 1719, column: 13, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8587, file: !897, line: 1719, column: 13)
!8626 = !DILocation(line: 1719, column: 13, scope: !8587)
!8627 = !DILocation(line: 1720, column: 30, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8625, file: !897, line: 1719, column: 24)
!8629 = !DILocation(line: 1720, column: 22, scope: !8628)
!8630 = !DILocation(line: 1720, column: 34, scope: !8628)
!8631 = !DILocation(line: 1720, column: 20, scope: !8628)
!8632 = !DILocation(line: 1721, column: 17, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8628, file: !897, line: 1721, column: 17)
!8634 = !DILocation(line: 1721, column: 26, scope: !8633)
!8635 = !DILocation(line: 1721, column: 24, scope: !8633)
!8636 = !DILocation(line: 1721, column: 17, scope: !8628)
!8637 = !DILocation(line: 1722, column: 17, scope: !8633)
!8638 = !DILocation(line: 1723, column: 9, scope: !8628)
!8639 = !DILocation(line: 1724, column: 30, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8625, file: !897, line: 1723, column: 16)
!8641 = !DILocation(line: 1724, column: 22, scope: !8640)
!8642 = !DILocation(line: 1724, column: 34, scope: !8640)
!8643 = !DILocation(line: 1724, column: 20, scope: !8640)
!8644 = !DILocation(line: 1725, column: 17, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8640, file: !897, line: 1725, column: 17)
!8646 = !DILocation(line: 1725, column: 26, scope: !8645)
!8647 = !DILocation(line: 1725, column: 24, scope: !8645)
!8648 = !DILocation(line: 1725, column: 17, scope: !8640)
!8649 = !DILocation(line: 1726, column: 17, scope: !8645)
!8650 = !DILocation(line: 1702, column: 5, scope: !8651)
!8651 = !DILexicalBlockFile(scope: !8588, file: !897, discriminator: 1)
!8652 = distinct !{!8652, !8585}
!8653 = !DILocation(line: 1729, column: 1, scope: !8539)
!8654 = distinct !DISubprogram(name: "clear_path_counter", scope: !897, file: !897, line: 1956, type: !8655, isLocal: true, isDefinition: true, scopeLine: 1957, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!8655 = !DISubroutineType(types: !8656)
!8656 = !{null, !7216}
!8657 = !DILocalVariable(name: "path_counter", arg: 1, scope: !8654, file: !897, line: 1956, type: !7216)
!8658 = !DILocation(line: 1956, column: 45, scope: !8654)
!8659 = !DILocalVariable(name: "i", scope: !8654, file: !897, line: 1958, type: !993)
!8660 = !DILocation(line: 1958, column: 18, scope: !8654)
!8661 = !DILocation(line: 1960, column: 12, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8654, file: !897, line: 1960, column: 5)
!8663 = !DILocation(line: 1960, column: 10, scope: !8662)
!8664 = !DILocation(line: 1960, column: 17, scope: !8665)
!8665 = !DILexicalBlockFile(scope: !8666, file: !897, discriminator: 1)
!8666 = distinct !DILexicalBlock(scope: !8662, file: !897, line: 1960, column: 5)
!8667 = !DILocation(line: 1960, column: 19, scope: !8665)
!8668 = !DILocation(line: 1960, column: 5, scope: !8665)
!8669 = !DILocation(line: 1961, column: 22, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8666, file: !897, line: 1960, column: 33)
!8671 = !DILocation(line: 1961, column: 9, scope: !8670)
!8672 = !DILocation(line: 1961, column: 25, scope: !8670)
!8673 = !DILocation(line: 1961, column: 33, scope: !8670)
!8674 = !DILocation(line: 1962, column: 22, scope: !8670)
!8675 = !DILocation(line: 1962, column: 9, scope: !8670)
!8676 = !DILocation(line: 1962, column: 25, scope: !8670)
!8677 = !DILocation(line: 1962, column: 33, scope: !8670)
!8678 = !DILocation(line: 1963, column: 22, scope: !8670)
!8679 = !DILocation(line: 1963, column: 9, scope: !8670)
!8680 = !DILocation(line: 1963, column: 25, scope: !8670)
!8681 = !DILocation(line: 1963, column: 34, scope: !8670)
!8682 = !DILocation(line: 1964, column: 5, scope: !8670)
!8683 = !DILocation(line: 1960, column: 29, scope: !8684)
!8684 = !DILexicalBlockFile(scope: !8666, file: !897, discriminator: 2)
!8685 = !DILocation(line: 1960, column: 5, scope: !8684)
!8686 = distinct !{!8686, !8687}
!8687 = !DILocation(line: 1960, column: 5, scope: !8654)
!8688 = !DILocation(line: 1965, column: 1, scope: !8654)
!8689 = distinct !DISubprogram(name: "compare_best_offset", scope: !897, file: !897, line: 1967, type: !8690, isLocal: true, isDefinition: true, scopeLine: 1968, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!8690 = !DISubroutineType(types: !8691)
!8691 = !{!939, !7148, !7148}
!8692 = !DILocalVariable(name: "prev", arg: 1, scope: !8689, file: !897, line: 1967, type: !7148)
!8693 = !DILocation(line: 1967, column: 44, scope: !8689)
!8694 = !DILocalVariable(name: "cur", arg: 2, scope: !8689, file: !897, line: 1967, type: !7148)
!8695 = !DILocation(line: 1967, column: 62, scope: !8689)
!8696 = !DILocation(line: 1969, column: 9, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8689, file: !897, line: 1969, column: 9)
!8698 = !DILocation(line: 1969, column: 15, scope: !8697)
!8699 = !DILocation(line: 1969, column: 27, scope: !8697)
!8700 = !DILocation(line: 1969, column: 32, scope: !8697)
!8701 = !DILocation(line: 1969, column: 24, scope: !8697)
!8702 = !DILocation(line: 1969, column: 9, scope: !8689)
!8703 = !DILocation(line: 1970, column: 9, scope: !8697)
!8704 = !DILocation(line: 1972, column: 5, scope: !8689)
!8705 = !DILocation(line: 1973, column: 1, scope: !8689)
!8706 = distinct !DISubprogram(name: "best_codebook_path_cost", scope: !897, file: !897, line: 1975, type: !8707, isLocal: true, isDefinition: true, scopeLine: 1977, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1744)
!8707 = !DISubroutineType(types: !8708)
!8708 = !{!939, !1749, !993, !7216, !939}
!8709 = !DILocalVariable(name: "ctx", arg: 1, scope: !8706, file: !897, line: 1975, type: !1749)
!8710 = !DILocation(line: 1975, column: 54, scope: !8706)
!8711 = !DILocalVariable(name: "channel", arg: 2, scope: !8706, file: !897, line: 1975, type: !993)
!8712 = !DILocation(line: 1975, column: 72, scope: !8706)
!8713 = !DILocalVariable(name: "src", arg: 3, scope: !8706, file: !897, line: 1976, type: !7216)
!8714 = !DILocation(line: 1976, column: 49, scope: !8706)
!8715 = !DILocalVariable(name: "cur_codebook", arg: 4, scope: !8706, file: !897, line: 1976, type: !939)
!8716 = !DILocation(line: 1976, column: 58, scope: !8706)
!8717 = !DILocalVariable(name: "cur_bo", scope: !8706, file: !897, line: 1978, type: !7148)
!8718 = !DILocation(line: 1978, column: 17, scope: !8706)
!8719 = !DILocalVariable(name: "prev_bo", scope: !8706, file: !897, line: 1978, type: !7148)
!8720 = !DILocation(line: 1978, column: 26, scope: !8706)
!8721 = !DILocalVariable(name: "bitcount", scope: !8706, file: !897, line: 1979, type: !939)
!8722 = !DILocation(line: 1979, column: 9, scope: !8706)
!8723 = !DILocation(line: 1979, column: 20, scope: !8706)
!8724 = !DILocation(line: 1979, column: 25, scope: !8706)
!8725 = !DILocalVariable(name: "path", scope: !8706, file: !897, line: 1980, type: !1504)
!8726 = !DILocation(line: 1980, column: 11, scope: !8706)
!8727 = !DILocation(line: 1980, column: 18, scope: !8706)
!8728 = !DILocation(line: 1980, column: 23, scope: !8706)
!8729 = !DILocation(line: 1980, column: 28, scope: !8706)
!8730 = !DILocalVariable(name: "prev_codebook", scope: !8706, file: !897, line: 1981, type: !939)
!8731 = !DILocation(line: 1981, column: 9, scope: !8706)
!8732 = !DILocalVariable(name: "i", scope: !8706, file: !897, line: 1982, type: !939)
!8733 = !DILocation(line: 1982, column: 9, scope: !8706)
!8734 = !DILocation(line: 1984, column: 12, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8706, file: !897, line: 1984, column: 5)
!8736 = !DILocation(line: 1984, column: 10, scope: !8735)
!8737 = !DILocation(line: 1984, column: 22, scope: !8738)
!8738 = !DILexicalBlockFile(scope: !8739, file: !897, discriminator: 1)
!8739 = distinct !DILexicalBlock(scope: !8735, file: !897, line: 1984, column: 5)
!8740 = !DILocation(line: 1984, column: 17, scope: !8738)
!8741 = !DILocation(line: 1984, column: 5, scope: !8738)
!8742 = !DILocation(line: 1985, column: 39, scope: !8739)
!8743 = !DILocation(line: 1985, column: 19, scope: !8739)
!8744 = !DILocation(line: 1985, column: 36, scope: !8739)
!8745 = !DILocation(line: 1985, column: 24, scope: !8739)
!8746 = !DILocation(line: 1985, column: 17, scope: !8739)
!8747 = !DILocation(line: 1985, column: 9, scope: !8739)
!8748 = !DILocation(line: 1984, column: 27, scope: !8749)
!8749 = !DILexicalBlockFile(scope: !8739, file: !897, discriminator: 2)
!8750 = !DILocation(line: 1984, column: 5, scope: !8749)
!8751 = distinct !{!8751, !8752}
!8752 = !DILocation(line: 1984, column: 5, scope: !8706)
!8753 = !DILocation(line: 1987, column: 26, scope: !8706)
!8754 = !DILocation(line: 1987, column: 28, scope: !8706)
!8755 = !DILocation(line: 1987, column: 21, scope: !8706)
!8756 = !DILocation(line: 1987, column: 33, scope: !8706)
!8757 = !DILocation(line: 1987, column: 19, scope: !8706)
!8758 = !DILocation(line: 1989, column: 34, scope: !8706)
!8759 = !DILocation(line: 1989, column: 14, scope: !8706)
!8760 = !DILocation(line: 1989, column: 31, scope: !8706)
!8761 = !DILocation(line: 1989, column: 19, scope: !8706)
!8762 = !DILocation(line: 1989, column: 12, scope: !8706)
!8763 = !DILocation(line: 1991, column: 24, scope: !8706)
!8764 = !DILocation(line: 1991, column: 17, scope: !8706)
!8765 = !DILocation(line: 1991, column: 38, scope: !8706)
!8766 = !DILocation(line: 1991, column: 14, scope: !8706)
!8767 = !DILocation(line: 1993, column: 9, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8706, file: !897, line: 1993, column: 9)
!8769 = !DILocation(line: 1993, column: 26, scope: !8768)
!8770 = !DILocation(line: 1993, column: 23, scope: !8768)
!8771 = !DILocation(line: 1993, column: 39, scope: !8768)
!8772 = !DILocation(line: 1994, column: 38, scope: !8768)
!8773 = !DILocation(line: 1994, column: 30, scope: !8768)
!8774 = !DILocation(line: 1994, column: 62, scope: !8768)
!8775 = !DILocation(line: 1994, column: 55, scope: !8768)
!8776 = !DILocation(line: 1994, column: 9, scope: !8768)
!8777 = !DILocation(line: 1993, column: 9, scope: !8778)
!8778 = !DILexicalBlockFile(scope: !8706, file: !897, discriminator: 1)
!8779 = !DILocation(line: 1995, column: 18, scope: !8768)
!8780 = !DILocation(line: 1995, column: 9, scope: !8768)
!8781 = !DILocation(line: 1997, column: 12, scope: !8706)
!8782 = !DILocation(line: 1997, column: 5, scope: !8706)
