; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--aacdec_fixed.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--aacdec_fixed.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVProfile = type { i32, i8* }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.SoftFloat = type { i32, i32 }
%struct.AACContext = type { %struct.AVClass*, %struct.AVCodecContext*, %struct.AVFrame*, i32, %struct.DynamicRangeControl, [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]], i32, i32, [1024 x i32], %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.AVFixedDSPContext*, i32, [64 x %struct.SingleChannelElement*], i32, i32, [8 x i8], [128 x i32], [2 x %struct.OutputConfiguration], i32, i32, i32, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (i32*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)*, void (%struct.AACContext*, i32*, i32*, %struct.IndividualChannelStream*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (i32*, i32)*, void (i32*, i32*, i32, i32, i32, i8*)*, [8 x i8] }
%struct.DynamicRangeControl = type { i32, [17 x i32], [17 x i32], [64 x i32], i32, i32, [17 x i32], i32 }
%struct.ChannelElement = type { i32, i32, i32, i8, [128 x i8], [128 x i8], [19 x i8], [2 x %struct.SingleChannelElement], %struct.ChannelCoupling, [24 x i8], %struct.SpectralBandReplication }
%struct.SingleChannelElement = type { %struct.IndividualChannelStream, %struct.TemporalNoiseShaping, %struct.Pulse, [128 x i32], [128 x i32], [120 x i32], [120 x i32], [128 x i32], [128 x i8], [128 x i8], [128 x float], [128 x float], [4 x i8], [1024 x i32], [1024 x i32], [1536 x i32], [2048 x i32], [3072 x i32], [1024 x %struct.SoftFloat], [1024 x %struct.SoftFloat], [672 x %struct.PredictorState], i32*, [24 x i8] }
%struct.IndividualChannelStream = type { i8, [2 x i32], [2 x i8], i32, [8 x i8], %struct.LongTermPrediction, i16*, i8*, i32, i32, i32, i32, i32, i32, [31 x i32], [41 x i8], [8 x i8], float }
%struct.LongTermPrediction = type { i8, i16, i32, i32, [40 x i8] }
%struct.TemporalNoiseShaping = type { i32, [8 x i32], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x [20 x i32]]], [8 x [4 x [20 x i32]]] }
%struct.Pulse = type { i32, i32, [4 x i32], [4 x i32] }
%struct.PredictorState = type { %struct.SoftFloat, %struct.SoftFloat, %struct.SoftFloat, %struct.SoftFloat, %struct.SoftFloat, %struct.SoftFloat, %struct.SoftFloat, %struct.SoftFloat }
%struct.ChannelCoupling = type { i32, i32, [8 x i32], [8 x i32], [8 x i32], [16 x [120 x i32]] }
%struct.SpectralBandReplication = type { i32, i32, i32, i32, i32, %struct.SpectrumParameters, i32, i32, i32, i32, i32, i32, [5 x i32], [2 x i32], [2 x i32], i32, i32, [2 x %struct.SBRData], %struct.PSContext, [2 x i32], i32, i32, [49 x i16], [25 x i16], [49 x i16], [6 x i16], [30 x i16], i32, [6 x i8], [6 x i8], [32 x [40 x [2 x i32]]], [64 x [40 x [2 x i32]]], [2 x [2 x [38 x [64 x i32]]]], [64 x [2 x i32]], [64 x [2 x i32]], [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]], [7 x [48 x i8]], [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]], [16 x i8], [5 x [64 x i32]], %struct.FFTContext, %struct.FFTContext, %struct.SBRDSPContext, %struct.AACSBRContext, [16 x i8] }
%struct.SpectrumParameters = type { i8, i8, i8, i8, i8, i8 }
%struct.SBRData = type { i32, i32, i32, [7 x i8], i32, [5 x i8], [2 x i8], [2 x [5 x i8]], [48 x i8], i32, [2304 x i32], [1312 x i32], i32, [2 x i32], [5 x i32], [2 x [32 x [32 x [2 x i32]]]], i32, [12 x i8], [2 x [38 x [64 x [2 x i32]]]], [42 x [48 x %struct.SoftFloat]], [42 x [48 x %struct.SoftFloat]], [8 x [48 x i8]], [6 x [48 x i8]], [6 x [48 x %struct.SoftFloat]], [3 x [5 x i8]], [3 x [5 x %struct.SoftFloat]], [8 x i8], i8, [3 x i8], i32, i32, [20 x i8] }
%struct.PSContext = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], i32, i32, [4 x i8], [5 x [44 x [2 x i32]]], [91 x [46 x [2 x i32]]], [50 x [3 x [37 x [2 x i32]]]], [34 x i32], [8 x i8], [34 x i32], [8 x i8], [34 x i32], [8 x i8], [2 x [6 x [34 x i32]]], [2 x [6 x [34 x i32]]], [2 x [6 x [34 x i32]]], [2 x [6 x [34 x i32]]], [91 x [32 x [2 x i32]]], [91 x [32 x [2 x i32]]], [34 x i8], [34 x i8], %struct.PSDSPContext, [8 x i8] }
%struct.PSDSPContext = type { void (i32*, [2 x i32]*, i32)*, void ([2 x i32]*, [2 x i32]*, i32*, i32)*, void ([2 x i32]*, [2 x i32]*, [8 x [2 x i32]]*, i64, i32)*, void ([32 x [2 x i32]]*, [38 x [64 x i32]]*, i32, i32)*, void ([38 x [64 x i32]]*, [32 x [2 x i32]]*, i32, i32)*, void ([2 x i32]*, [2 x i32]*, [37 x [2 x i32]]*, i32*, [2 x i32]*, i32*, i32, i32)*, [2 x void ([2 x i32]*, [2 x i32]*, [4 x i32]*, [4 x i32]*, i32)*] }
%struct.SBRDSPContext = type { void (i32*)*, i64 ([2 x i32]*, i32)*, void (i32*)*, void (i32*)*, void ([2 x i32]*, i32*)*, void (i32*, i32*)*, void (i32*, i32*, i32*)*, void ([2 x i32]*, [2 x [2 x %struct.SoftFloat]]*)*, void ([2 x i32]*, [2 x i32]*, i32*, i32*, i32, i32, i32)*, void ([2 x i32]*, [40 x [2 x i32]]*, %struct.SoftFloat*, i32, i64)*, [4 x void ([2 x i32]*, %struct.SoftFloat*, %struct.SoftFloat*, i32, i32, i32)*] }
%struct.AACSBRContext = type { i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x i32]]*, [32 x [32 x [2 x i32]]]*, i32)*, void ([64 x [2 x i32]]*, [40 x [2 x i32]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)*, i32 (%struct.SpectralBandReplication*, [38 x [64 x i32]]*, [64 x [2 x i32]]*, [64 x [2 x i32]]*, [40 x [2 x i32]]*, i32)*, void (%struct.SBRDSPContext*, [2 x i32]*, [2 x i32]*, [40 x [2 x i32]]*, i32)* }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, i32*, i32*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)*, i32, i32, i32* }
%struct.FFTComplex = type { i32, i32 }
%struct.AVFixedDSPContext = type { void (i16*, i32*, i32*, i32*, i32, i8)*, void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)*, i32 (i32*, i32*, i32)*, void (i32*, i32*, i32)* }
%struct.OutputConfiguration = type { %struct.MPEG4AudioConfig, [64 x [3 x i8]], i32, i32, i64, i32 }
%struct.MPEG4AudioConfig = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%union.unaligned_32 = type { i32 }
%struct.elem_to_channel = type { i64, i8, i8, i8 }
%union.anon.0 = type { i32 }
%struct.AACADTSHeaderInfo = type { i32, i32, i32, i8, i8, i8, i8, i8 }

@.str = private unnamed_addr constant [10 x i8] c"aac_fixed\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"AAC (Advanced Audio Coding)\00", align 1
@.compoundliteral = internal constant [2 x i32] [i32 7, i32 -1], align 4
@aac_channel_layout = internal constant [16 x i64] [i64 4, i64 3, i64 7, i64 263, i64 55, i64 63, i64 255, i64 0, i64 0, i64 0, i64 1807, i64 1599, i64 0, i64 0, i64 0, i64 0], align 16
@ff_aac_profiles = external constant [0 x %struct.AVProfile], align 8
@ff_aac_fixed_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86018, i32 1026, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral, i32 0, i32 0), i64* getelementptr inbounds ([16 x i64], [16 x i64]* @aac_channel_layout, i32 0, i32 0), i8 0, %struct.AVClass* null, %struct.AVProfile* getelementptr inbounds ([0 x %struct.AVProfile], [0 x %struct.AVProfile]* @ff_aac_profiles, i32 0, i32 0), i8* null, i32 7744, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @aac_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @aac_decode_frame, i32 (%struct.AVCodecContext*)* @aac_decode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 1, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@aac_table_init = internal global i32 0, align 4
@ff_mpeg4audio_channels = external constant [8 x i8], align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"Too many channels\0A\00", align 1
@aac_static_table_init.table = internal global [304 x [2 x i16]] zeroinitializer, align 16
@vlc_spectral = internal global [11 x %struct.VLC] zeroinitializer, align 16
@ff_aac_spectral_sizes = external constant [11 x i16], align 16
@ff_aac_spectral_bits = external constant [11 x i8*], align 16
@ff_aac_spectral_codes = external constant [11 x i16*], align 16
@aac_static_table_init.table.3 = internal global [270 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.4 = internal global [550 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.5 = internal global [300 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.6 = internal global [328 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.7 = internal global [294 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.8 = internal global [306 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.9 = internal global [268 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.10 = internal global [510 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.11 = internal global [366 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.12 = internal global [462 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.13 = internal global [352 x [2 x i16]] zeroinitializer, align 16
@vlc_scalefactors = internal global %struct.VLC zeroinitializer, align 8
@ff_aac_scalefactor_bits = external constant [121 x i8], align 16
@ff_aac_scalefactor_code = external constant [121 x i32], align 16
@ff_aac_kbd_long_1024_fixed = external global [1024 x i32], align 32
@ff_aac_kbd_short_128_fixed = external global [128 x i32], align 32
@ff_aac_tableinit.exp2_lut = internal constant [16 x float] [float 1.000000e+00, float 0x3FF0B55860000000, float 0x3FF172B840000000, float 0x3FF2387A60000000, float 0x3FF306FE00000000, float 0x3FF3DEA640000000, float 0x3FF4BFDAE0000000, float 0x3FF5AB07E0000000, float 0x3FF6A09E60000000, float 0x3FF7A11480000000, float 0x3FF8ACE540000000, float 0x3FF9C49180000000, float 0x3FFAE89FA0000000, float 0x3FFC199BE0000000, float 0x3FFD5818E0000000, float 0x3FFEA4AFA0000000], align 16
@ff_aac_pow2sf_tab = external global [428 x float], align 16
@ff_aac_pow34sf_tab = external global [428 x float], align 16
@ff_sine_128_fixed = external global [128 x i32], align 32
@ff_sine_1024_fixed = external global [1024 x i32], align 32
@ff_cbrt_tab_fixed = external global [8192 x i32], align 16
@exp2tab = internal constant [4 x i32] [i32 1073741824, i32 1276901417, i32 1518500250, i32 1805811301], align 16
@.str.14 = private unnamed_addr constant [29 x i8] c"Overflow in subband_scale()\0A\00", align 1
@.str.15 = private unnamed_addr constant [39 x i8] c"Audio specific config size is invalid\0A\00", align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"invalid sampling rate index %d\0A\00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"invalid low delay sampling rate index %d\0A\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"Audio object type %s%d\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"SBR+\00", align 1
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"Fixed point 960/120 MDCT window\00", align 1
@.str.22 = private unnamed_addr constant [31 x i8] c"AAC data resilience (flags %x)\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"epConfig %d\00", align 1
@.str.24 = private unnamed_addr constant [111 x i8] c"Sample rate index in program config element does not match the sample rate index configured by the container.\0A\00", align 1
@.str.25 = private unnamed_addr constant [61 x i8] c"decode_pce: Input buffer exhausted before END element found\0A\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"libavcodec/aacdec_template.c\00", align 1
@.str.29 = private unnamed_addr constant [20 x i8] c"960/120 MDCT window\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"Low Delay SBR\00", align 1
@.str.31 = private unnamed_addr constant [49 x i8] c"Input buffer exhausted before END element found\0A\00", align 1
@.str.32 = private unnamed_addr constant [44 x i8] c"invalid default channel configuration (%d)\0A\00", align 1
@tags_per_config = internal constant [16 x i8] c"\00\01\01\02\03\03\04\05\00\00\00\04\05\00\05\00", align 16
@aac_channel_layout_map = internal constant [16 x [5 x [3 x i8]]] [[5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] zeroinitializer, [3 x i8] zeroinitializer, [3 x i8] zeroinitializer, [3 x i8] zeroinitializer], [5 x [3 x i8]] [[3 x i8] c"\01\00\01", [3 x i8] zeroinitializer, [3 x i8] zeroinitializer, [3 x i8] zeroinitializer, [3 x i8] zeroinitializer], [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] zeroinitializer, [3 x i8] zeroinitializer, [3 x i8] zeroinitializer], [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] c"\00\01\03", [3 x i8] zeroinitializer, [3 x i8] zeroinitializer], [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] c"\01\01\03", [3 x i8] zeroinitializer, [3 x i8] zeroinitializer], [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] c"\01\01\03", [3 x i8] c"\03\00\04", [3 x i8] zeroinitializer], [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] c"\01\01\01", [3 x i8] c"\01\02\03", [3 x i8] c"\03\00\04"], [5 x [3 x i8]] zeroinitializer, [5 x [3 x i8]] zeroinitializer, [5 x [3 x i8]] zeroinitializer, [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] c"\01\01\03", [3 x i8] c"\00\01\03", [3 x i8] c"\03\00\04"], [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] c"\01\01\02", [3 x i8] c"\01\02\03", [3 x i8] c"\03\00\04"], [5 x [3 x i8]] zeroinitializer, [5 x [3 x i8]] zeroinitializer, [5 x [3 x i8]] zeroinitializer, [5 x [3 x i8]] zeroinitializer], align 16
@.str.33 = private unnamed_addr constant [163 x i8] c"Assuming an incorrectly encoded 7.1 channel layout instead of a spec-compliant 7.1(wide) layout, use -strict %d to decode according to the specification instead.\0A\00", align 1
@.str.34 = private unnamed_addr constant [22 x i8] c"Too large remapped id\00", align 1
@.str.35 = private unnamed_addr constant [36 x i8] c"Unknown ER channel configuration %d\00", align 1
@.str.36 = private unnamed_addr constant [40 x i8] c"channel element %d.%d is not allocated\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"no frame data found\0A\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"mono with CPE\0A\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"stereo with SCE\0A\00", align 1
@.str.40 = private unnamed_addr constant [87 x i8] c"This stream seems to incorrectly report its last channel as %s[%d], mapping to LFE[0]\0A\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"SCE\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"LFE\00", align 1
@.str.43 = private unnamed_addr constant [87 x i8] c"This stream seems to incorrectly report its last channel as %s[%d], mapping to SCE[1]\0A\00", align 1
@.str.44 = private unnamed_addr constant [49 x i8] c"Pulse tool not allowed in eight short sequence.\0A\00", align 1
@.str.45 = private unnamed_addr constant [32 x i8] c"Pulse data corrupt or invalid.\0A\00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"Gain control\00", align 1
@.str.47 = private unnamed_addr constant [19 x i8] c"Reserved bit set.\0A\00", align 1
@.str.48 = private unnamed_addr constant [77 x i8] c"AAC LD is only defined for ONLY_LONG_SEQUENCE but window sequence %d found.\0A\00", align 1
@ff_swb_offset_120 = external constant [13 x i16*], align 16
@ff_aac_num_swb_120 = external constant [0 x i8], align 1
@ff_swb_offset_128 = external constant [13 x i16*], align 16
@ff_aac_num_swb_128 = external constant [0 x i8], align 1
@ff_tns_max_bands_128 = external constant [13 x i8], align 1
@ff_swb_offset_480 = external constant [13 x i16*], align 16
@ff_aac_num_swb_480 = external constant [0 x i8], align 1
@ff_tns_max_bands_480 = external constant [13 x i8], align 1
@ff_swb_offset_512 = external constant [13 x i16*], align 16
@ff_aac_num_swb_512 = external constant [0 x i8], align 1
@ff_tns_max_bands_512 = external constant [13 x i8], align 1
@ff_aac_num_swb_960 = external constant [0 x i8], align 1
@ff_swb_offset_960 = external constant [13 x i16*], align 16
@ff_aac_num_swb_1024 = external constant [0 x i8], align 1
@ff_swb_offset_1024 = external constant [13 x i16*], align 16
@ff_tns_max_bands_1024 = external constant [13 x i8], align 1
@.str.49 = private unnamed_addr constant [38 x i8] c"Prediction is not allowed in AAC-LC.\0A\00", align 1
@.str.50 = private unnamed_addr constant [39 x i8] c"LTP in ER AAC LD not yet implemented.\0A\00", align 1
@.str.51 = private unnamed_addr constant [63 x i8] c"Number of scalefactor bands in group (%d) exceeds limit (%d).\0A\00", align 1
@.str.52 = private unnamed_addr constant [32 x i8] c"Invalid Predictor Reset Group.\0A\00", align 1
@ff_aac_pred_sfb_max = external constant [0 x i8], align 1
@ltp_coef = internal constant [8 x i32] [i32 612922972, i32 747985734, i32 872956398, i32 978505219, i32 1057528322, i32 1146642451, i32 1282693057, i32 1470524861], align 16
@.str.53 = private unnamed_addr constant [19 x i8] c"invalid band type\0A\00", align 1
@.str.54 = private unnamed_addr constant [68 x i8] c"decode_band_types: Input buffer exhausted before END element found\0A\00", align 1
@.str.55 = private unnamed_addr constant [42 x i8] c"Number of bands (%d) exceeds limit (%d).\0A\00", align 1
@.str.56 = private unnamed_addr constant [114 x i8] c"If you heard an audible artifact, there may be a bug in the decoder. Clipped intensity stereo position (%d -> %d)\00", align 1
@.str.57 = private unnamed_addr constant [99 x i8] c"If you heard an audible artifact, there may be a bug in the decoder. Clipped noise gain (%d -> %d)\00", align 1
@.str.58 = private unnamed_addr constant [32 x i8] c"Scalefactor (%d) out of range.\0A\00", align 1
@.str.59 = private unnamed_addr constant [49 x i8] c"TNS filter order %d is greater than maximum %d.\0A\00", align 1
@tns_tmp2_map = internal constant [4 x i32*] [i32* getelementptr inbounds ([8 x i32], [8 x i32]* @tns_tmp2_map_0_3, i32 0, i32 0), i32* getelementptr inbounds ([16 x i32], [16 x i32]* @tns_tmp2_map_0_4, i32 0, i32 0), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @tns_tmp2_map_1_3, i32 0, i32 0), i32* getelementptr inbounds ([8 x i32], [8 x i32]* @tns_tmp2_map_1_4, i32 0, i32 0)], align 16
@tns_tmp2_map_0_3 = internal constant [8 x i32] [i32 0, i32 -931758214, i32 -1678970361, i32 -2093641722, i32 2114858497, i32 1859775364, i32 1380375817, i32 734482679], align 16
@tns_tmp2_map_0_4 = internal constant [16 x i32] [i32 0, i32 -446486975, i32 -873460282, i32 -1262259190, i32 -1595891327, i32 -1859775363, i32 -2042378367, i32 -2135719560, i32 2138322826, i32 2065504770, i32 1922348549, i32 1713728888, i32 1446750328, i32 1130504455, i32 775760579, i32 394599068], align 16
@tns_tmp2_map_1_3 = internal constant [4 x i32] [i32 0, i32 -931758214, i32 1380375817, i32 734482679], align 16
@tns_tmp2_map_1_4 = internal constant [8 x i32] [i32 0, i32 -446486975, i32 -873460282, i32 -1262259190, i32 1446750328, i32 1130504455, i32 775760579, i32 394599068], align 16
@decode_gain_control.gain_mode = internal constant [4 x [3 x i8]] [[3 x i8] c"\01\00\05", [3 x i8] c"\02\01\02", [3 x i8] c"\08\00\02", [3 x i8] c"\02\01\05"], align 1
@ff_aac_codebook_vector_idx = external global [0 x i16*], align 8
@.str.60 = private unnamed_addr constant [38 x i8] c"error in spectral data, ESC overflow\0A\00", align 1
@ff_sqrt_tab = external constant [256 x i8], align 16
@ff_inverse = external constant [257 x i32], align 16
@predict.a = internal constant %struct.SoftFloat { i32 1023410176, i32 0 }, align 4
@predict.alpha = internal constant %struct.SoftFloat { i32 973078528, i32 0 }, align 4
@FLOAT_0 = internal constant %struct.SoftFloat { i32 0, i32 -149 }, align 4
@.str.61 = private unnamed_addr constant [29 x i8] c"ms_present = 3 is reserved.\0A\00", align 1
@.str.62 = private unnamed_addr constant [31 x i8] c"ChannelElement %d.%d missing \0A\00", align 1
@ff_sine_512_fixed = external global [512 x i32], align 32
@ff_aac_eld_window_480_fixed = external constant [1800 x i32], align 32
@ff_aac_eld_window_512_fixed = external constant [1920 x i32], align 32
@.str.63 = private unnamed_addr constant [55 x i8] c"Dependent coupling is not supported together with LTP\0A\00", align 1
@cce_scale_fixed = internal constant [8 x i32] [i32 1073741824, i32 1170923762, i32 1276901417, i32 1392470869, i32 1518500250, i32 1655936265, i32 1805811301, i32 1969251188], align 16
@.str.64 = private unnamed_addr constant [34 x i8] c"Error decoding AAC frame header.\0A\00", align 1
@.str.65 = private unnamed_addr constant [20 x i8] c"Elem type:%x id:%x\0A\00", align 1
@.str.66 = private unnamed_addr constant [33 x i8] c"channel element %d.%d duplicate\0A\00", align 1
@.str.67 = private unnamed_addr constant [87 x i8] c"Not evaluating a further program_config_element as this construct is dubious at best.\0A\00", align 1
@.str.68 = private unnamed_addr constant [59 x i8] c"TYPE_FIL: Input buffer exhausted before END element found\0A\00", align 1
@.str.69 = private unnamed_addr constant [37 x i8] c"More than one AAC RDB per ADTS frame\00", align 1
@.str.70 = private unnamed_addr constant [75 x i8] c"skip_data_stream_element: Input buffer exhausted before END element found\0A\00", align 1
@.str.71 = private unnamed_addr constant [27 x i8] c"extension type: %d len:%d\0A\00", align 1
@.str.72 = private unnamed_addr constant [49 x i8] c"SBR was found before the first channel element.\0A\00", align 1
@.str.73 = private unnamed_addr constant [26 x i8] c"SBR with 960 frame length\00", align 1
@.str.74 = private unnamed_addr constant [64 x i8] c"SBR signaled to be not-present but was found in the bitstream.\0A\00", align 1
@.str.75 = private unnamed_addr constant [71 x i8] c"Implicit SBR was found with a first occurrence after the first frame.\0A\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"FILL:%s\0A\00", align 1
@.str.77 = private unnamed_addr constant [14 x i8] c"libfaac %d.%d\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @aac_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !2066 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %ret = alloca i32, align 4
  %sr = alloca i32, align 4
  %i = alloca i32, align 4
  %layout_map = alloca [64 x [3 x i8]], align 16
  %layout_map_tags = alloca i32, align 4
  %ret53 = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2067, metadata !2068), !dbg !2069
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !2070, metadata !2068), !dbg !2630
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2631
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2632
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2632
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !2631
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !2630
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2633, metadata !2068), !dbg !2634
  %call = call i32 @pthread_once(i32* @aac_table_init, void ()* @aac_static_table_init), !dbg !2635
  store i32 %call, i32* %ret, align 4, !dbg !2636
  %3 = load i32, i32* %ret, align 4, !dbg !2637
  %cmp = icmp ne i32 %3, 0, !dbg !2639
  br i1 %cmp, label %if.then, label %if.end, !dbg !2640

if.then:                                          ; preds = %entry
  store i32 -1313558101, i32* %retval, align 4, !dbg !2641
  br label %return, !dbg !2641

if.end:                                           ; preds = %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2642
  %5 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2643
  %avctx1 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 1, !dbg !2644
  store %struct.AVCodecContext* %4, %struct.AVCodecContext** %avctx1, align 8, !dbg !2645
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2646
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 82, !dbg !2647
  %7 = load i32, i32* %sample_rate, align 8, !dbg !2647
  %8 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2648
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 21, !dbg !2649
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !2648
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !2650
  %sample_rate2 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 2, !dbg !2651
  store i32 %7, i32* %sample_rate2, align 8, !dbg !2652
  %9 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2653
  call void @aacdec_init(%struct.AACContext* %9), !dbg !2654
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2655
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 84, !dbg !2656
  store i32 7, i32* %sample_fmt, align 8, !dbg !2657
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2658
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 16, !dbg !2660
  %12 = load i32, i32* %extradata_size, align 8, !dbg !2660
  %cmp3 = icmp sgt i32 %12, 0, !dbg !2661
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !2662

if.then4:                                         ; preds = %if.end
  %13 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2663
  %14 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2666
  %avctx5 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %14, i32 0, i32 1, !dbg !2667
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx5, align 8, !dbg !2667
  %16 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2668
  %oc6 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %16, i32 0, i32 21, !dbg !2669
  %arrayidx7 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc6, i64 0, i64 1, !dbg !2668
  %m4ac8 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx7, i32 0, i32 0, !dbg !2670
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2671
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 15, !dbg !2672
  %18 = load i8*, i8** %extradata, align 8, !dbg !2672
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2673
  %extradata_size9 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 16, !dbg !2674
  %20 = load i32, i32* %extradata_size9, align 8, !dbg !2674
  %conv = sext i32 %20 to i64, !dbg !2673
  %mul = mul nsw i64 %conv, 8, !dbg !2675
  %call10 = call i32 @decode_audio_specific_config(%struct.AACContext* %13, %struct.AVCodecContext* %15, %struct.MPEG4AudioConfig* %m4ac8, i8* %18, i64 %mul, i32 1), !dbg !2676
  store i32 %call10, i32* %ret, align 4, !dbg !2677
  %cmp11 = icmp slt i32 %call10, 0, !dbg !2678
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !2679

if.then13:                                        ; preds = %if.then4
  %21 = load i32, i32* %ret, align 4, !dbg !2680
  store i32 %21, i32* %retval, align 4, !dbg !2681
  br label %return, !dbg !2681

if.end14:                                         ; preds = %if.then4
  br label %if.end69, !dbg !2682

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %sr, metadata !2683, metadata !2068), !dbg !2685
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2686, metadata !2068), !dbg !2687
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map, metadata !2688, metadata !2068), !dbg !2689
  call void @llvm.dbg.declare(metadata i32* %layout_map_tags, metadata !2690, metadata !2068), !dbg !2691
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2692
  %sample_rate15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 82, !dbg !2693
  %23 = load i32, i32* %sample_rate15, align 8, !dbg !2693
  %call16 = call i32 @sample_rate_idx(i32 %23), !dbg !2694
  store i32 %call16, i32* %sr, align 4, !dbg !2695
  %24 = load i32, i32* %sr, align 4, !dbg !2696
  %25 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2697
  %oc17 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %25, i32 0, i32 21, !dbg !2698
  %arrayidx18 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc17, i64 0, i64 1, !dbg !2697
  %m4ac19 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx18, i32 0, i32 0, !dbg !2699
  %sampling_index = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac19, i32 0, i32 1, !dbg !2700
  store i32 %24, i32* %sampling_index, align 4, !dbg !2701
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2702
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 83, !dbg !2703
  %27 = load i32, i32* %channels, align 4, !dbg !2703
  %28 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2704
  %oc20 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %28, i32 0, i32 21, !dbg !2705
  %arrayidx21 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc20, i64 0, i64 1, !dbg !2704
  %m4ac22 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx21, i32 0, i32 0, !dbg !2706
  %channels23 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac22, i32 0, i32 9, !dbg !2707
  store i32 %27, i32* %channels23, align 4, !dbg !2708
  %29 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2709
  %oc24 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %29, i32 0, i32 21, !dbg !2710
  %arrayidx25 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc24, i64 0, i64 1, !dbg !2709
  %m4ac26 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx25, i32 0, i32 0, !dbg !2711
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac26, i32 0, i32 4, !dbg !2712
  store i32 -1, i32* %sbr, align 8, !dbg !2713
  %30 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2714
  %oc27 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %30, i32 0, i32 21, !dbg !2715
  %arrayidx28 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc27, i64 0, i64 1, !dbg !2714
  %m4ac29 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx28, i32 0, i32 0, !dbg !2716
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac29, i32 0, i32 10, !dbg !2717
  store i32 -1, i32* %ps, align 8, !dbg !2718
  store i32 0, i32* %i, align 4, !dbg !2719
  br label %for.cond, !dbg !2721

for.cond:                                         ; preds = %for.inc, %if.else
  %31 = load i32, i32* %i, align 4, !dbg !2722
  %conv30 = sext i32 %31 to i64, !dbg !2722
  %cmp31 = icmp ult i64 %conv30, 8, !dbg !2725
  br i1 %cmp31, label %for.body, label %for.end, !dbg !2726

for.body:                                         ; preds = %for.cond
  %32 = load i32, i32* %i, align 4, !dbg !2727
  %idxprom = sext i32 %32 to i64, !dbg !2729
  %arrayidx33 = getelementptr inbounds [8 x i8], [8 x i8]* @ff_mpeg4audio_channels, i64 0, i64 %idxprom, !dbg !2729
  %33 = load i8, i8* %arrayidx33, align 1, !dbg !2729
  %conv34 = zext i8 %33 to i32, !dbg !2729
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2730
  %channels35 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 83, !dbg !2731
  %35 = load i32, i32* %channels35, align 4, !dbg !2731
  %cmp36 = icmp eq i32 %conv34, %35, !dbg !2732
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !2733

if.then38:                                        ; preds = %for.body
  br label %for.end, !dbg !2734

if.end39:                                         ; preds = %for.body
  br label %for.inc, !dbg !2735

for.inc:                                          ; preds = %if.end39
  %36 = load i32, i32* %i, align 4, !dbg !2737
  %inc = add nsw i32 %36, 1, !dbg !2737
  store i32 %inc, i32* %i, align 4, !dbg !2737
  br label %for.cond, !dbg !2739, !llvm.loop !2740

for.end:                                          ; preds = %if.then38, %for.cond
  %37 = load i32, i32* %i, align 4, !dbg !2742
  %conv40 = sext i32 %37 to i64, !dbg !2742
  %cmp41 = icmp eq i64 %conv40, 8, !dbg !2744
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !2745

if.then43:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !2746
  br label %if.end44, !dbg !2748

if.end44:                                         ; preds = %if.then43, %for.end
  %38 = load i32, i32* %i, align 4, !dbg !2749
  %39 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2750
  %oc45 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 21, !dbg !2751
  %arrayidx46 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc45, i64 0, i64 1, !dbg !2750
  %m4ac47 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx46, i32 0, i32 0, !dbg !2752
  %chan_config = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac47, i32 0, i32 3, !dbg !2753
  store i32 %38, i32* %chan_config, align 4, !dbg !2754
  %40 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2755
  %oc48 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %40, i32 0, i32 21, !dbg !2757
  %arrayidx49 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc48, i64 0, i64 1, !dbg !2755
  %m4ac50 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx49, i32 0, i32 0, !dbg !2758
  %chan_config51 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac50, i32 0, i32 3, !dbg !2759
  %41 = load i32, i32* %chan_config51, align 4, !dbg !2759
  %tobool = icmp ne i32 %41, 0, !dbg !2755
  br i1 %tobool, label %if.then52, label %if.end68, !dbg !2760

if.then52:                                        ; preds = %if.end44
  call void @llvm.dbg.declare(metadata i32* %ret53, metadata !2761, metadata !2068), !dbg !2763
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2764
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !2765
  %43 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2766
  %oc54 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %43, i32 0, i32 21, !dbg !2767
  %arrayidx55 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc54, i64 0, i64 1, !dbg !2766
  %m4ac56 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx55, i32 0, i32 0, !dbg !2768
  %chan_config57 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac56, i32 0, i32 3, !dbg !2769
  %44 = load i32, i32* %chan_config57, align 4, !dbg !2769
  %call58 = call i32 @set_default_channel_config(%struct.AVCodecContext* %42, [3 x i8]* %arraydecay, i32* %layout_map_tags, i32 %44), !dbg !2770
  store i32 %call58, i32* %ret53, align 4, !dbg !2763
  %45 = load i32, i32* %ret53, align 4, !dbg !2771
  %tobool59 = icmp ne i32 %45, 0, !dbg !2771
  br i1 %tobool59, label %if.else63, label %if.then60, !dbg !2773

if.then60:                                        ; preds = %if.then52
  %46 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2774
  %arraydecay61 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !2775
  %47 = load i32, i32* %layout_map_tags, align 4, !dbg !2776
  %call62 = call i32 @output_configure(%struct.AACContext* %46, [3 x i8]* %arraydecay61, i32 %47, i32 3, i32 0), !dbg !2777
  br label %if.end67, !dbg !2777

if.else63:                                        ; preds = %if.then52
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2778
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %48, i32 0, i32 135, !dbg !2780
  %49 = load i32, i32* %err_recognition, align 8, !dbg !2780
  %and = and i32 %49, 8, !dbg !2781
  %tobool64 = icmp ne i32 %and, 0, !dbg !2781
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !2782

if.then65:                                        ; preds = %if.else63
  store i32 -1094995529, i32* %retval, align 4, !dbg !2783
  br label %return, !dbg !2783

if.end66:                                         ; preds = %if.else63
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then60
  br label %if.end68, !dbg !2784

if.end68:                                         ; preds = %if.end67, %if.end44
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end14
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2785
  %channels70 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %50, i32 0, i32 83, !dbg !2787
  %51 = load i32, i32* %channels70, align 4, !dbg !2787
  %cmp71 = icmp sgt i32 %51, 64, !dbg !2788
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !2789

if.then73:                                        ; preds = %if.end69
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2790
  %53 = bitcast %struct.AVCodecContext* %52 to i8*, !dbg !2790
  call void (i8*, i32, i8*, ...) @av_log(i8* %53, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)), !dbg !2792
  store i32 -1094995529, i32* %retval, align 4, !dbg !2793
  br label %return, !dbg !2793

if.end74:                                         ; preds = %if.end69
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2794
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %54, i32 0, i32 13, !dbg !2795
  %55 = load i32, i32* %flags, align 4, !dbg !2795
  %and75 = and i32 %55, 8388608, !dbg !2796
  %call76 = call %struct.AVFixedDSPContext* @avpriv_alloc_fixed_dsp(i32 %and75), !dbg !2797
  %56 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2798
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %56, i32 0, i32 14, !dbg !2799
  store %struct.AVFixedDSPContext* %call76, %struct.AVFixedDSPContext** %fdsp, align 32, !dbg !2800
  %57 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2801
  %fdsp77 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %57, i32 0, i32 14, !dbg !2803
  %58 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp77, align 32, !dbg !2803
  %tobool78 = icmp ne %struct.AVFixedDSPContext* %58, null, !dbg !2801
  br i1 %tobool78, label %if.end80, label %if.then79, !dbg !2804

if.then79:                                        ; preds = %if.end74
  store i32 -12, i32* %retval, align 4, !dbg !2805
  br label %return, !dbg !2805

if.end80:                                         ; preds = %if.end74
  %59 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2807
  %random_state = getelementptr inbounds %struct.AACContext, %struct.AACContext* %59, i32 0, i32 15, !dbg !2808
  store i32 523124044, i32* %random_state, align 8, !dbg !2809
  %60 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2810
  %mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %60, i32 0, i32 10, !dbg !2811
  %call81 = call i32 @ff_mdct_init_fixed_32(%struct.FFTContext* %mdct, i32 11, i32 1, double 9.765625e-04), !dbg !2812
  %61 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2813
  %mdct_ld = getelementptr inbounds %struct.AACContext, %struct.AACContext* %61, i32 0, i32 12, !dbg !2814
  %call82 = call i32 @ff_mdct_init_fixed_32(%struct.FFTContext* %mdct_ld, i32 10, i32 1, double 1.953125e-03), !dbg !2815
  %62 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2816
  %mdct_small = getelementptr inbounds %struct.AACContext, %struct.AACContext* %62, i32 0, i32 11, !dbg !2817
  %call83 = call i32 @ff_mdct_init_fixed_32(%struct.FFTContext* %mdct_small, i32 8, i32 1, double 7.812500e-03), !dbg !2818
  %63 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2819
  %mdct_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %63, i32 0, i32 13, !dbg !2820
  %call84 = call i32 @ff_mdct_init_fixed_32(%struct.FFTContext* %mdct_ltp, i32 11, i32 0, double -2.000000e+00), !dbg !2821
  store i32 0, i32* %retval, align 4, !dbg !2822
  br label %return, !dbg !2822

return:                                           ; preds = %if.end80, %if.then79, %if.then73, %if.then65, %if.then13, %if.then
  %64 = load i32, i32* %retval, align 4, !dbg !2823
  ret i32 %64, !dbg !2823
}

; Function Attrs: nounwind uwtable
define internal i32 @aac_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2824 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  %buf_consumed = alloca i32, align 4
  %buf_offset = alloca i32, align 4
  %err = alloca i32, align 4
  %new_extradata_size = alloca i32, align 4
  %new_extradata = alloca i8*, align 8
  %jp_dualmono_size = alloca i32, align 4
  %jp_dualmono = alloca i8*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2825, metadata !2068), !dbg !2826
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2827, metadata !2068), !dbg !2828
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2829, metadata !2068), !dbg !2830
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2831, metadata !2068), !dbg !2832
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !2833, metadata !2068), !dbg !2834
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2835
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2836
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2836
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !2835
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !2834
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2837, metadata !2068), !dbg !2838
  %3 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2839
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i32 0, i32 3, !dbg !2840
  %4 = load i8*, i8** %data1, align 8, !dbg !2840
  store i8* %4, i8** %buf, align 8, !dbg !2838
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2841, metadata !2068), !dbg !2842
  %5 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2843
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i32 0, i32 4, !dbg !2844
  %6 = load i32, i32* %size, align 8, !dbg !2844
  store i32 %6, i32* %buf_size, align 4, !dbg !2842
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !2845, metadata !2068), !dbg !2846
  call void @llvm.dbg.declare(metadata i32* %buf_consumed, metadata !2847, metadata !2068), !dbg !2848
  call void @llvm.dbg.declare(metadata i32* %buf_offset, metadata !2849, metadata !2068), !dbg !2850
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2851, metadata !2068), !dbg !2852
  call void @llvm.dbg.declare(metadata i32* %new_extradata_size, metadata !2853, metadata !2068), !dbg !2854
  call void @llvm.dbg.declare(metadata i8** %new_extradata, metadata !2855, metadata !2068), !dbg !2856
  %7 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2857
  %call = call i8* @av_packet_get_side_data(%struct.AVPacket* %7, i32 1, i32* %new_extradata_size), !dbg !2858
  store i8* %call, i8** %new_extradata, align 8, !dbg !2856
  call void @llvm.dbg.declare(metadata i32* %jp_dualmono_size, metadata !2859, metadata !2068), !dbg !2860
  call void @llvm.dbg.declare(metadata i8** %jp_dualmono, metadata !2861, metadata !2068), !dbg !2862
  %8 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2863
  %call2 = call i8* @av_packet_get_side_data(%struct.AVPacket* %8, i32 12, i32* %jp_dualmono_size), !dbg !2864
  store i8* %call2, i8** %jp_dualmono, align 8, !dbg !2862
  %9 = load i8*, i8** %new_extradata, align 8, !dbg !2865
  %tobool = icmp ne i8* %9, null, !dbg !2865
  br i1 %tobool, label %if.then, label %if.end9, !dbg !2867

if.then:                                          ; preds = %entry
  %10 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2868
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 21, !dbg !2870
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !2868
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 5, !dbg !2871
  store i32 0, i32* %status, align 8, !dbg !2872
  %11 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2873
  %12 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2874
  %avctx3 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 1, !dbg !2875
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx3, align 8, !dbg !2875
  %14 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2876
  %oc4 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %14, i32 0, i32 21, !dbg !2877
  %arrayidx5 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc4, i64 0, i64 1, !dbg !2876
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx5, i32 0, i32 0, !dbg !2878
  %15 = load i8*, i8** %new_extradata, align 8, !dbg !2879
  %16 = load i32, i32* %new_extradata_size, align 4, !dbg !2880
  %conv = sext i32 %16 to i64, !dbg !2880
  %mul = mul nsw i64 %conv, 8, !dbg !2881
  %call6 = call i32 @decode_audio_specific_config(%struct.AACContext* %11, %struct.AVCodecContext* %13, %struct.MPEG4AudioConfig* %m4ac, i8* %15, i64 %mul, i32 1), !dbg !2882
  store i32 %call6, i32* %err, align 4, !dbg !2883
  %17 = load i32, i32* %err, align 4, !dbg !2884
  %cmp = icmp slt i32 %17, 0, !dbg !2886
  br i1 %cmp, label %if.then8, label %if.end, !dbg !2887

if.then8:                                         ; preds = %if.then
  %18 = load i32, i32* %err, align 4, !dbg !2888
  store i32 %18, i32* %retval, align 4, !dbg !2890
  br label %return, !dbg !2890

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !2891

if.end9:                                          ; preds = %if.end, %entry
  %19 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2892
  %dmono_mode = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 18, !dbg !2893
  store i32 0, i32* %dmono_mode, align 4, !dbg !2894
  %20 = load i8*, i8** %jp_dualmono, align 8, !dbg !2895
  %tobool10 = icmp ne i8* %20, null, !dbg !2895
  br i1 %tobool10, label %land.lhs.true, label %if.end16, !dbg !2897

land.lhs.true:                                    ; preds = %if.end9
  %21 = load i32, i32* %jp_dualmono_size, align 4, !dbg !2898
  %cmp11 = icmp sgt i32 %21, 0, !dbg !2900
  br i1 %cmp11, label %if.then13, label %if.end16, !dbg !2901

if.then13:                                        ; preds = %land.lhs.true
  %22 = load i8*, i8** %jp_dualmono, align 8, !dbg !2902
  %23 = load i8, i8* %22, align 1, !dbg !2903
  %conv14 = zext i8 %23 to i32, !dbg !2903
  %add = add nsw i32 1, %conv14, !dbg !2904
  %24 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2905
  %dmono_mode15 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 18, !dbg !2906
  store i32 %add, i32* %dmono_mode15, align 4, !dbg !2907
  br label %if.end16, !dbg !2905

if.end16:                                         ; preds = %if.then13, %land.lhs.true, %if.end9
  %25 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2908
  %force_dmono_mode = getelementptr inbounds %struct.AACContext, %struct.AACContext* %25, i32 0, i32 17, !dbg !2910
  %26 = load i32, i32* %force_dmono_mode, align 16, !dbg !2910
  %cmp17 = icmp sge i32 %26, 0, !dbg !2911
  br i1 %cmp17, label %if.then19, label %if.end22, !dbg !2912

if.then19:                                        ; preds = %if.end16
  %27 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2913
  %force_dmono_mode20 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %27, i32 0, i32 17, !dbg !2914
  %28 = load i32, i32* %force_dmono_mode20, align 16, !dbg !2914
  %29 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2915
  %dmono_mode21 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %29, i32 0, i32 18, !dbg !2916
  store i32 %28, i32* %dmono_mode21, align 4, !dbg !2917
  br label %if.end22, !dbg !2915

if.end22:                                         ; preds = %if.then19, %if.end16
  %30 = load i32, i32* %buf_size, align 4, !dbg !2918
  %cmp23 = icmp sle i32 268435455, %30, !dbg !2920
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !2921

if.then25:                                        ; preds = %if.end22
  store i32 -1094995529, i32* %retval, align 4, !dbg !2922
  br label %return, !dbg !2922

if.end26:                                         ; preds = %if.end22
  %31 = load i8*, i8** %buf, align 8, !dbg !2923
  %32 = load i32, i32* %buf_size, align 4, !dbg !2925
  %call27 = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %31, i32 %32), !dbg !2926
  store i32 %call27, i32* %err, align 4, !dbg !2927
  %cmp28 = icmp slt i32 %call27, 0, !dbg !2928
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !2929

if.then30:                                        ; preds = %if.end26
  %33 = load i32, i32* %err, align 4, !dbg !2930
  store i32 %33, i32* %retval, align 4, !dbg !2931
  br label %return, !dbg !2931

if.end31:                                         ; preds = %if.end26
  %34 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2932
  %oc32 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %34, i32 0, i32 21, !dbg !2933
  %arrayidx33 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc32, i64 0, i64 1, !dbg !2932
  %m4ac34 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx33, i32 0, i32 0, !dbg !2934
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac34, i32 0, i32 0, !dbg !2935
  %35 = load i32, i32* %object_type, align 8, !dbg !2935
  switch i32 %35, label %sw.default [
    i32 17, label %sw.bb
    i32 19, label %sw.bb
    i32 23, label %sw.bb
    i32 39, label %sw.bb
  ], !dbg !2936

sw.bb:                                            ; preds = %if.end31, %if.end31, %if.end31, %if.end31
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2937
  %37 = load i8*, i8** %data.addr, align 8, !dbg !2939
  %38 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2940
  %call35 = call i32 @aac_decode_er_frame(%struct.AVCodecContext* %36, i8* %37, i32* %38, %struct.GetBitContext* %gb), !dbg !2941
  store i32 %call35, i32* %err, align 4, !dbg !2942
  br label %sw.epilog, !dbg !2943

sw.default:                                       ; preds = %if.end31
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2944
  %40 = load i8*, i8** %data.addr, align 8, !dbg !2945
  %41 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2946
  %42 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2947
  %call36 = call i32 @aac_decode_frame_int(%struct.AVCodecContext* %39, i8* %40, i32* %41, %struct.GetBitContext* %gb, %struct.AVPacket* %42), !dbg !2948
  store i32 %call36, i32* %err, align 4, !dbg !2949
  br label %sw.epilog, !dbg !2950

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %43 = load i32, i32* %err, align 4, !dbg !2951
  %cmp37 = icmp slt i32 %43, 0, !dbg !2953
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !2954

if.then39:                                        ; preds = %sw.epilog
  %44 = load i32, i32* %err, align 4, !dbg !2955
  store i32 %44, i32* %retval, align 4, !dbg !2956
  br label %return, !dbg !2956

if.end40:                                         ; preds = %sw.epilog
  %call41 = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !2957
  %add42 = add nsw i32 %call41, 7, !dbg !2958
  %shr = ashr i32 %add42, 3, !dbg !2959
  store i32 %shr, i32* %buf_consumed, align 4, !dbg !2960
  %45 = load i32, i32* %buf_consumed, align 4, !dbg !2961
  store i32 %45, i32* %buf_offset, align 4, !dbg !2963
  br label %for.cond, !dbg !2964

for.cond:                                         ; preds = %for.inc, %if.end40
  %46 = load i32, i32* %buf_offset, align 4, !dbg !2965
  %47 = load i32, i32* %buf_size, align 4, !dbg !2968
  %cmp43 = icmp slt i32 %46, %47, !dbg !2969
  br i1 %cmp43, label %for.body, label %for.end, !dbg !2970

for.body:                                         ; preds = %for.cond
  %48 = load i32, i32* %buf_offset, align 4, !dbg !2971
  %idxprom = sext i32 %48 to i64, !dbg !2973
  %49 = load i8*, i8** %buf, align 8, !dbg !2973
  %arrayidx45 = getelementptr inbounds i8, i8* %49, i64 %idxprom, !dbg !2973
  %50 = load i8, i8* %arrayidx45, align 1, !dbg !2973
  %tobool46 = icmp ne i8 %50, 0, !dbg !2973
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !2974

if.then47:                                        ; preds = %for.body
  br label %for.end, !dbg !2975

if.end48:                                         ; preds = %for.body
  br label %for.inc, !dbg !2976

for.inc:                                          ; preds = %if.end48
  %51 = load i32, i32* %buf_offset, align 4, !dbg !2978
  %inc = add nsw i32 %51, 1, !dbg !2978
  store i32 %inc, i32* %buf_offset, align 4, !dbg !2978
  br label %for.cond, !dbg !2980, !llvm.loop !2981

for.end:                                          ; preds = %if.then47, %for.cond
  %52 = load i32, i32* %buf_size, align 4, !dbg !2983
  %53 = load i32, i32* %buf_offset, align 4, !dbg !2984
  %cmp49 = icmp sgt i32 %52, %53, !dbg !2985
  br i1 %cmp49, label %cond.true, label %cond.false, !dbg !2983

cond.true:                                        ; preds = %for.end
  %54 = load i32, i32* %buf_consumed, align 4, !dbg !2986
  br label %cond.end, !dbg !2988

cond.false:                                       ; preds = %for.end
  %55 = load i32, i32* %buf_size, align 4, !dbg !2989
  br label %cond.end, !dbg !2991

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %54, %cond.true ], [ %55, %cond.false ], !dbg !2992
  store i32 %cond, i32* %retval, align 4, !dbg !2994
  br label %return, !dbg !2994

return:                                           ; preds = %cond.end, %if.then39, %if.then30, %if.then25, %if.then8
  %56 = load i32, i32* %retval, align 4, !dbg !2995
  ret i32 %56, !dbg !2995
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @aac_decode_close(%struct.AVCodecContext* %avctx) #0 !dbg !2996 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %i = alloca i32, align 4
  %type = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2997, metadata !2068), !dbg !2998
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !2999, metadata !2068), !dbg !3000
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3001
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3002
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3002
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !3001
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !3000
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3003, metadata !2068), !dbg !3004
  call void @llvm.dbg.declare(metadata i32* %type, metadata !3005, metadata !2068), !dbg !3006
  store i32 0, i32* %i, align 4, !dbg !3007
  br label %for.cond, !dbg !3009

for.cond:                                         ; preds = %for.inc16, %entry
  %3 = load i32, i32* %i, align 4, !dbg !3010
  %cmp = icmp slt i32 %3, 16, !dbg !3013
  br i1 %cmp, label %for.body, label %for.end18, !dbg !3014

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %type, align 4, !dbg !3015
  br label %for.cond1, !dbg !3018

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %type, align 4, !dbg !3019
  %cmp2 = icmp slt i32 %4, 4, !dbg !3022
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !3023

for.body3:                                        ; preds = %for.cond1
  %5 = load i32, i32* %i, align 4, !dbg !3024
  %idxprom = sext i32 %5 to i64, !dbg !3027
  %6 = load i32, i32* %type, align 4, !dbg !3028
  %idxprom4 = sext i32 %6 to i64, !dbg !3027
  %7 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3027
  %che = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 5, !dbg !3029
  %arrayidx = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che, i64 0, i64 %idxprom4, !dbg !3027
  %arrayidx5 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx, i64 0, i64 %idxprom, !dbg !3027
  %8 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx5, align 8, !dbg !3027
  %tobool = icmp ne %struct.ChannelElement* %8, null, !dbg !3027
  br i1 %tobool, label %if.then, label %if.end, !dbg !3030

if.then:                                          ; preds = %for.body3
  %9 = load i32, i32* %i, align 4, !dbg !3031
  %idxprom6 = sext i32 %9 to i64, !dbg !3032
  %10 = load i32, i32* %type, align 4, !dbg !3033
  %idxprom7 = sext i32 %10 to i64, !dbg !3032
  %11 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3032
  %che8 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %11, i32 0, i32 5, !dbg !3034
  %arrayidx9 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che8, i64 0, i64 %idxprom7, !dbg !3032
  %arrayidx10 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx9, i64 0, i64 %idxprom6, !dbg !3032
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx10, align 8, !dbg !3032
  %sbr = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %12, i32 0, i32 10, !dbg !3035
  call void @ff_aac_sbr_ctx_close_fixed(%struct.SpectralBandReplication* %sbr), !dbg !3036
  br label %if.end, !dbg !3036

if.end:                                           ; preds = %if.then, %for.body3
  %13 = load i32, i32* %i, align 4, !dbg !3037
  %idxprom11 = sext i32 %13 to i64, !dbg !3038
  %14 = load i32, i32* %type, align 4, !dbg !3039
  %idxprom12 = sext i32 %14 to i64, !dbg !3038
  %15 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3038
  %che13 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %15, i32 0, i32 5, !dbg !3040
  %arrayidx14 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che13, i64 0, i64 %idxprom12, !dbg !3038
  %arrayidx15 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx14, i64 0, i64 %idxprom11, !dbg !3038
  %16 = bitcast %struct.ChannelElement** %arrayidx15 to i8*, !dbg !3041
  call void @av_freep(i8* %16), !dbg !3042
  br label %for.inc, !dbg !3043

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %type, align 4, !dbg !3044
  %inc = add nsw i32 %17, 1, !dbg !3044
  store i32 %inc, i32* %type, align 4, !dbg !3044
  br label %for.cond1, !dbg !3046, !llvm.loop !3047

for.end:                                          ; preds = %for.cond1
  br label %for.inc16, !dbg !3049

for.inc16:                                        ; preds = %for.end
  %18 = load i32, i32* %i, align 4, !dbg !3050
  %inc17 = add nsw i32 %18, 1, !dbg !3050
  store i32 %inc17, i32* %i, align 4, !dbg !3050
  br label %for.cond, !dbg !3052, !llvm.loop !3053

for.end18:                                        ; preds = %for.cond
  %19 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3055
  %mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 10, !dbg !3056
  call void @ff_mdct_end_fixed_32(%struct.FFTContext* %mdct), !dbg !3057
  %20 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3058
  %mdct_small = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 11, !dbg !3059
  call void @ff_mdct_end_fixed_32(%struct.FFTContext* %mdct_small), !dbg !3060
  %21 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3061
  %mdct_ld = getelementptr inbounds %struct.AACContext, %struct.AACContext* %21, i32 0, i32 12, !dbg !3062
  call void @ff_mdct_end_fixed_32(%struct.FFTContext* %mdct_ld), !dbg !3063
  %22 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3064
  %mdct_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %22, i32 0, i32 13, !dbg !3065
  call void @ff_mdct_end_fixed_32(%struct.FFTContext* %mdct_ltp), !dbg !3066
  %23 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3067
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %23, i32 0, i32 14, !dbg !3068
  %24 = bitcast %struct.AVFixedDSPContext** %fdsp to i8*, !dbg !3069
  call void @av_freep(i8* %24), !dbg !3070
  ret i32 0, !dbg !3071
}

; Function Attrs: nounwind uwtable
define internal void @flush(%struct.AVCodecContext* %avctx) #1 !dbg !3072 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %type = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %che = alloca %struct.ChannelElement*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3073, metadata !2068), !dbg !3074
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !3075, metadata !2068), !dbg !3076
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3077
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3078
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3078
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !3077
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !3076
  call void @llvm.dbg.declare(metadata i32* %type, metadata !3079, metadata !2068), !dbg !3080
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3081, metadata !2068), !dbg !3082
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3083, metadata !2068), !dbg !3084
  store i32 3, i32* %type, align 4, !dbg !3085
  br label %for.cond, !dbg !3087

for.cond:                                         ; preds = %for.inc15, %entry
  %3 = load i32, i32* %type, align 4, !dbg !3088
  %cmp = icmp sge i32 %3, 0, !dbg !3091
  br i1 %cmp, label %for.body, label %for.end16, !dbg !3092

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3093
  br label %for.cond1, !dbg !3096

for.cond1:                                        ; preds = %for.inc12, %for.body
  %4 = load i32, i32* %i, align 4, !dbg !3097
  %cmp2 = icmp slt i32 %4, 16, !dbg !3100
  br i1 %cmp2, label %for.body3, label %for.end14, !dbg !3101

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che, metadata !3102, metadata !2068), !dbg !3104
  %5 = load i32, i32* %i, align 4, !dbg !3105
  %idxprom = sext i32 %5 to i64, !dbg !3106
  %6 = load i32, i32* %type, align 4, !dbg !3107
  %idxprom4 = sext i32 %6 to i64, !dbg !3106
  %7 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3106
  %che5 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 5, !dbg !3108
  %arrayidx = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che5, i64 0, i64 %idxprom4, !dbg !3106
  %arrayidx6 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx, i64 0, i64 %idxprom, !dbg !3106
  %8 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx6, align 8, !dbg !3106
  store %struct.ChannelElement* %8, %struct.ChannelElement** %che, align 8, !dbg !3104
  %9 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !3109
  %tobool = icmp ne %struct.ChannelElement* %9, null, !dbg !3109
  br i1 %tobool, label %if.then, label %if.end, !dbg !3111

if.then:                                          ; preds = %for.body3
  store i32 0, i32* %j, align 4, !dbg !3112
  br label %for.cond7, !dbg !3115

for.cond7:                                        ; preds = %for.inc, %if.then
  %10 = load i32, i32* %j, align 4, !dbg !3116
  %cmp8 = icmp sle i32 %10, 1, !dbg !3119
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !3120

for.body9:                                        ; preds = %for.cond7
  %11 = load i32, i32* %j, align 4, !dbg !3121
  %idxprom10 = sext i32 %11 to i64, !dbg !3123
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !3123
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %12, i32 0, i32 7, !dbg !3124
  %arrayidx11 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 %idxprom10, !dbg !3123
  %saved = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx11, i32 0, i32 15, !dbg !3125
  %arraydecay = getelementptr inbounds [1536 x i32], [1536 x i32]* %saved, i32 0, i32 0, !dbg !3126
  %13 = bitcast i32* %arraydecay to i8*, !dbg !3126
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 6144, i32 32, i1 false), !dbg !3126
  br label %for.inc, !dbg !3127

for.inc:                                          ; preds = %for.body9
  %14 = load i32, i32* %j, align 4, !dbg !3128
  %inc = add nsw i32 %14, 1, !dbg !3128
  store i32 %inc, i32* %j, align 4, !dbg !3128
  br label %for.cond7, !dbg !3130, !llvm.loop !3131

for.end:                                          ; preds = %for.cond7
  br label %if.end, !dbg !3133

if.end:                                           ; preds = %for.end, %for.body3
  br label %for.inc12, !dbg !3134

for.inc12:                                        ; preds = %if.end
  %15 = load i32, i32* %i, align 4, !dbg !3135
  %inc13 = add nsw i32 %15, 1, !dbg !3135
  store i32 %inc13, i32* %i, align 4, !dbg !3135
  br label %for.cond1, !dbg !3137, !llvm.loop !3138

for.end14:                                        ; preds = %for.cond1
  br label %for.inc15, !dbg !3140

for.inc15:                                        ; preds = %for.end14
  %16 = load i32, i32* %type, align 4, !dbg !3141
  %dec = add nsw i32 %16, -1, !dbg !3141
  store i32 %dec, i32* %type, align 4, !dbg !3141
  br label %for.cond, !dbg !3143, !llvm.loop !3144

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !3146
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare i32 @pthread_once(i32*, void ()*) #3

; Function Attrs: cold nounwind optsize uwtable
define internal void @aac_static_table_init() #0 !dbg !1804 {
entry:
  br label %do.body, !dbg !3147, !llvm.loop !3148

do.body:                                          ; preds = %entry
  store [2 x i16]* getelementptr inbounds ([304 x [2 x i16]], [304 x [2 x i16]]* @aac_static_table_init.table, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 0, i32 1), align 8, !dbg !3149
  store i32 304, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 0, i32 3), align 4, !dbg !3152
  %0 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 0), align 16, !dbg !3153
  %conv = zext i16 %0 to i32, !dbg !3153
  %1 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 0), align 16, !dbg !3154
  %2 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 0), align 16, !dbg !3155
  %3 = bitcast i16* %2 to i8*, !dbg !3155
  %call = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 0), i32 8, i32 %conv, i8* %1, i32 1, i32 1, i8* %3, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3156
  br label %do.end, !dbg !3157

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !3158, !llvm.loop !3159

do.body1:                                         ; preds = %do.end
  store [2 x i16]* getelementptr inbounds ([270 x [2 x i16]], [270 x [2 x i16]]* @aac_static_table_init.table.3, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 1, i32 1), align 8, !dbg !3160
  store i32 270, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 1, i32 3), align 4, !dbg !3163
  %4 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 1), align 2, !dbg !3164
  %conv2 = zext i16 %4 to i32, !dbg !3164
  %5 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 1), align 8, !dbg !3165
  %6 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 1), align 8, !dbg !3166
  %7 = bitcast i16* %6 to i8*, !dbg !3166
  %call3 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 1), i32 8, i32 %conv2, i8* %5, i32 1, i32 1, i8* %7, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3167
  br label %do.end4, !dbg !3168

do.end4:                                          ; preds = %do.body1
  br label %do.body5, !dbg !3169, !llvm.loop !3170

do.body5:                                         ; preds = %do.end4
  store [2 x i16]* getelementptr inbounds ([550 x [2 x i16]], [550 x [2 x i16]]* @aac_static_table_init.table.4, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 2, i32 1), align 8, !dbg !3171
  store i32 550, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 2, i32 3), align 4, !dbg !3174
  %8 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 2), align 4, !dbg !3175
  %conv6 = zext i16 %8 to i32, !dbg !3175
  %9 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 2), align 16, !dbg !3176
  %10 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 2), align 16, !dbg !3177
  %11 = bitcast i16* %10 to i8*, !dbg !3177
  %call7 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 2), i32 8, i32 %conv6, i8* %9, i32 1, i32 1, i8* %11, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3178
  br label %do.end8, !dbg !3179

do.end8:                                          ; preds = %do.body5
  br label %do.body9, !dbg !3180, !llvm.loop !3181

do.body9:                                         ; preds = %do.end8
  store [2 x i16]* getelementptr inbounds ([300 x [2 x i16]], [300 x [2 x i16]]* @aac_static_table_init.table.5, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 3, i32 1), align 8, !dbg !3182
  store i32 300, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 3, i32 3), align 4, !dbg !3185
  %12 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 3), align 2, !dbg !3186
  %conv10 = zext i16 %12 to i32, !dbg !3186
  %13 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 3), align 8, !dbg !3187
  %14 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 3), align 8, !dbg !3188
  %15 = bitcast i16* %14 to i8*, !dbg !3188
  %call11 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 3), i32 8, i32 %conv10, i8* %13, i32 1, i32 1, i8* %15, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3189
  br label %do.end12, !dbg !3190

do.end12:                                         ; preds = %do.body9
  br label %do.body13, !dbg !3191, !llvm.loop !3192

do.body13:                                        ; preds = %do.end12
  store [2 x i16]* getelementptr inbounds ([328 x [2 x i16]], [328 x [2 x i16]]* @aac_static_table_init.table.6, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 4, i32 1), align 8, !dbg !3193
  store i32 328, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 4, i32 3), align 4, !dbg !3196
  %16 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 4), align 8, !dbg !3197
  %conv14 = zext i16 %16 to i32, !dbg !3197
  %17 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 4), align 16, !dbg !3198
  %18 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 4), align 16, !dbg !3199
  %19 = bitcast i16* %18 to i8*, !dbg !3199
  %call15 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 4), i32 8, i32 %conv14, i8* %17, i32 1, i32 1, i8* %19, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3200
  br label %do.end16, !dbg !3201

do.end16:                                         ; preds = %do.body13
  br label %do.body17, !dbg !3202, !llvm.loop !3203

do.body17:                                        ; preds = %do.end16
  store [2 x i16]* getelementptr inbounds ([294 x [2 x i16]], [294 x [2 x i16]]* @aac_static_table_init.table.7, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 5, i32 1), align 8, !dbg !3204
  store i32 294, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 5, i32 3), align 4, !dbg !3207
  %20 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 5), align 2, !dbg !3208
  %conv18 = zext i16 %20 to i32, !dbg !3208
  %21 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 5), align 8, !dbg !3209
  %22 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 5), align 8, !dbg !3210
  %23 = bitcast i16* %22 to i8*, !dbg !3210
  %call19 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 5), i32 8, i32 %conv18, i8* %21, i32 1, i32 1, i8* %23, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3211
  br label %do.end20, !dbg !3212

do.end20:                                         ; preds = %do.body17
  br label %do.body21, !dbg !3213, !llvm.loop !3214

do.body21:                                        ; preds = %do.end20
  store [2 x i16]* getelementptr inbounds ([306 x [2 x i16]], [306 x [2 x i16]]* @aac_static_table_init.table.8, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 6, i32 1), align 8, !dbg !3215
  store i32 306, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 6, i32 3), align 4, !dbg !3218
  %24 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 6), align 4, !dbg !3219
  %conv22 = zext i16 %24 to i32, !dbg !3219
  %25 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 6), align 16, !dbg !3220
  %26 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 6), align 16, !dbg !3221
  %27 = bitcast i16* %26 to i8*, !dbg !3221
  %call23 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 6), i32 8, i32 %conv22, i8* %25, i32 1, i32 1, i8* %27, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3222
  br label %do.end24, !dbg !3223

do.end24:                                         ; preds = %do.body21
  br label %do.body25, !dbg !3224, !llvm.loop !3225

do.body25:                                        ; preds = %do.end24
  store [2 x i16]* getelementptr inbounds ([268 x [2 x i16]], [268 x [2 x i16]]* @aac_static_table_init.table.9, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 7, i32 1), align 8, !dbg !3226
  store i32 268, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 7, i32 3), align 4, !dbg !3229
  %28 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 7), align 2, !dbg !3230
  %conv26 = zext i16 %28 to i32, !dbg !3230
  %29 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 7), align 8, !dbg !3231
  %30 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 7), align 8, !dbg !3232
  %31 = bitcast i16* %30 to i8*, !dbg !3232
  %call27 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 7), i32 8, i32 %conv26, i8* %29, i32 1, i32 1, i8* %31, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3233
  br label %do.end28, !dbg !3234

do.end28:                                         ; preds = %do.body25
  br label %do.body29, !dbg !3235, !llvm.loop !3236

do.body29:                                        ; preds = %do.end28
  store [2 x i16]* getelementptr inbounds ([510 x [2 x i16]], [510 x [2 x i16]]* @aac_static_table_init.table.10, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 8, i32 1), align 8, !dbg !3237
  store i32 510, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 8, i32 3), align 4, !dbg !3240
  %32 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 8), align 16, !dbg !3241
  %conv30 = zext i16 %32 to i32, !dbg !3241
  %33 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 8), align 16, !dbg !3242
  %34 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 8), align 16, !dbg !3243
  %35 = bitcast i16* %34 to i8*, !dbg !3243
  %call31 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 8), i32 8, i32 %conv30, i8* %33, i32 1, i32 1, i8* %35, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3244
  br label %do.end32, !dbg !3245

do.end32:                                         ; preds = %do.body29
  br label %do.body33, !dbg !3246, !llvm.loop !3247

do.body33:                                        ; preds = %do.end32
  store [2 x i16]* getelementptr inbounds ([366 x [2 x i16]], [366 x [2 x i16]]* @aac_static_table_init.table.11, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 9, i32 1), align 8, !dbg !3248
  store i32 366, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 9, i32 3), align 4, !dbg !3251
  %36 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 9), align 2, !dbg !3252
  %conv34 = zext i16 %36 to i32, !dbg !3252
  %37 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 9), align 8, !dbg !3253
  %38 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 9), align 8, !dbg !3254
  %39 = bitcast i16* %38 to i8*, !dbg !3254
  %call35 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 9), i32 8, i32 %conv34, i8* %37, i32 1, i32 1, i8* %39, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3255
  br label %do.end36, !dbg !3256

do.end36:                                         ; preds = %do.body33
  br label %do.body37, !dbg !3257, !llvm.loop !3258

do.body37:                                        ; preds = %do.end36
  store [2 x i16]* getelementptr inbounds ([462 x [2 x i16]], [462 x [2 x i16]]* @aac_static_table_init.table.12, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 10, i32 1), align 8, !dbg !3259
  store i32 462, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 10, i32 3), align 4, !dbg !3262
  %40 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 10), align 4, !dbg !3263
  %conv38 = zext i16 %40 to i32, !dbg !3263
  %41 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 10), align 16, !dbg !3264
  %42 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 10), align 16, !dbg !3265
  %43 = bitcast i16* %42 to i8*, !dbg !3265
  %call39 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 10), i32 8, i32 %conv38, i8* %41, i32 1, i32 1, i8* %43, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3266
  br label %do.end40, !dbg !3267

do.end40:                                         ; preds = %do.body37
  call void @ff_aac_sbr_init_fixed(), !dbg !3268
  call void @ff_aac_tableinit(), !dbg !3269
  br label %do.body41, !dbg !3270, !llvm.loop !3271

do.body41:                                        ; preds = %do.end40
  store [2 x i16]* getelementptr inbounds ([352 x [2 x i16]], [352 x [2 x i16]]* @aac_static_table_init.table.13, i32 0, i32 0), [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 1), align 8, !dbg !3272
  store i32 352, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 3), align 4, !dbg !3275
  %call42 = call i32 @ff_init_vlc_sparse(%struct.VLC* @vlc_scalefactors, i32 7, i32 121, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @ff_aac_scalefactor_bits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([121 x i32]* @ff_aac_scalefactor_code to i8*), i32 4, i32 4, i8* null, i32 0, i32 0, i32 4), !dbg !3276
  br label %do.end43, !dbg !3277

do.end43:                                         ; preds = %do.body41
  call void @ff_kbd_window_init_fixed(i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @ff_aac_kbd_long_1024_fixed, i32 0, i32 0), float 4.000000e+00, i32 1024), !dbg !3278
  call void @ff_kbd_window_init_fixed(i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_aac_kbd_short_128_fixed, i32 0, i32 0), float 6.000000e+00, i32 128), !dbg !3279
  call void @ff_init_ff_sine_windows_fixed(i32 10), !dbg !3280
  call void @ff_init_ff_sine_windows_fixed(i32 9), !dbg !3281
  call void @ff_init_ff_sine_windows_fixed(i32 7), !dbg !3282
  call void @ff_cbrt_tableinit_fixed(), !dbg !3283
  ret void, !dbg !3284
}

; Function Attrs: nounwind uwtable
define internal void @aacdec_init(%struct.AACContext* %c) #1 !dbg !3285 {
entry:
  %c.addr = alloca %struct.AACContext*, align 8
  store %struct.AACContext* %c, %struct.AACContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %c.addr, metadata !3288, metadata !2068), !dbg !3289
  %0 = load %struct.AACContext*, %struct.AACContext** %c.addr, align 8, !dbg !3290
  %imdct_and_windowing = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 25, !dbg !3291
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* @imdct_and_windowing, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_windowing, align 32, !dbg !3292
  %1 = load %struct.AACContext*, %struct.AACContext** %c.addr, align 8, !dbg !3293
  %apply_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %1, i32 0, i32 26, !dbg !3294
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* @apply_ltp, void (%struct.AACContext*, %struct.SingleChannelElement*)** %apply_ltp, align 8, !dbg !3295
  %2 = load %struct.AACContext*, %struct.AACContext** %c.addr, align 8, !dbg !3296
  %apply_tns = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 27, !dbg !3297
  store void (i32*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)* @apply_tns, void (i32*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)** %apply_tns, align 16, !dbg !3298
  %3 = load %struct.AACContext*, %struct.AACContext** %c.addr, align 8, !dbg !3299
  %windowing_and_mdct_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %3, i32 0, i32 28, !dbg !3300
  store void (%struct.AACContext*, i32*, i32*, %struct.IndividualChannelStream*)* @windowing_and_mdct_ltp, void (%struct.AACContext*, i32*, i32*, %struct.IndividualChannelStream*)** %windowing_and_mdct_ltp, align 8, !dbg !3301
  %4 = load %struct.AACContext*, %struct.AACContext** %c.addr, align 8, !dbg !3302
  %update_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 29, !dbg !3303
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* @update_ltp, void (%struct.AACContext*, %struct.SingleChannelElement*)** %update_ltp, align 32, !dbg !3304
  %5 = load %struct.AACContext*, %struct.AACContext** %c.addr, align 8, !dbg !3305
  %vector_pow43 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 30, !dbg !3306
  store void (i32*, i32)* @vector_pow43, void (i32*, i32)** %vector_pow43, align 8, !dbg !3307
  %6 = load %struct.AACContext*, %struct.AACContext** %c.addr, align 8, !dbg !3308
  %subband_scale = getelementptr inbounds %struct.AACContext, %struct.AACContext* %6, i32 0, i32 31, !dbg !3309
  store void (i32*, i32*, i32, i32, i32, i8*)* @subband_scale, void (i32*, i32*, i32, i32, i32, i8*)** %subband_scale, align 16, !dbg !3310
  ret void, !dbg !3311
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_audio_specific_config(%struct.AACContext* %ac, %struct.AVCodecContext* %avctx, %struct.MPEG4AudioConfig* %m4ac, i8* %data, i64 %bit_size, i32 %sync_extension) #1 !dbg !3312 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %m4ac.addr = alloca %struct.MPEG4AudioConfig*, align 8
  %data.addr = alloca i8*, align 8
  %bit_size.addr = alloca i64, align 8
  %sync_extension.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !3316, metadata !2068), !dbg !3317
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3318, metadata !2068), !dbg !3319
  store %struct.MPEG4AudioConfig* %m4ac, %struct.MPEG4AudioConfig** %m4ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac.addr, metadata !3320, metadata !2068), !dbg !3321
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3322, metadata !2068), !dbg !3323
  store i64 %bit_size, i64* %bit_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bit_size.addr, metadata !3324, metadata !2068), !dbg !3325
  store i32 %sync_extension, i32* %sync_extension.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sync_extension.addr, metadata !3326, metadata !2068), !dbg !3327
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3328, metadata !2068), !dbg !3329
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3330, metadata !2068), !dbg !3331
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !3332, metadata !2068), !dbg !3333
  %0 = load i64, i64* %bit_size.addr, align 8, !dbg !3334
  %cmp = icmp slt i64 %0, 0, !dbg !3336
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3337

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64, i64* %bit_size.addr, align 8, !dbg !3338
  %cmp1 = icmp sgt i64 %1, 2147483647, !dbg !3340
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3341

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3342
  %3 = bitcast %struct.AVCodecContext* %2 to i8*, !dbg !3342
  call void (i8*, i32, i8*, ...) @av_log(i8* %3, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i32 0, i32 0)), !dbg !3344
  store i32 -1094995529, i32* %retval, align 4, !dbg !3345
  br label %return, !dbg !3345

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !3346, !llvm.loop !3347

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !3348

do.end:                                           ; preds = %do.body
  store i32 0, i32* %i, align 4, !dbg !3351
  br label %for.cond, !dbg !3353

for.cond:                                         ; preds = %for.inc, %do.end
  %4 = load i32, i32* %i, align 4, !dbg !3354
  %conv = sext i32 %4 to i64, !dbg !3354
  %5 = load i64, i64* %bit_size.addr, align 8, !dbg !3357
  %shr = ashr i64 %5, 3, !dbg !3358
  %cmp2 = icmp slt i64 %conv, %shr, !dbg !3359
  br i1 %cmp2, label %for.body, label %for.end, !dbg !3360

for.body:                                         ; preds = %for.cond
  br label %do.body4, !dbg !3361, !llvm.loop !3362

do.body4:                                         ; preds = %for.body
  br label %do.end5, !dbg !3363

do.end5:                                          ; preds = %do.body4
  br label %for.inc, !dbg !3366

for.inc:                                          ; preds = %do.end5
  %6 = load i32, i32* %i, align 4, !dbg !3368
  %inc = add nsw i32 %6, 1, !dbg !3368
  store i32 %inc, i32* %i, align 4, !dbg !3368
  br label %for.cond, !dbg !3370, !llvm.loop !3371

for.end:                                          ; preds = %for.cond
  br label %do.body6, !dbg !3373, !llvm.loop !3374

do.body6:                                         ; preds = %for.end
  br label %do.end7, !dbg !3375

do.end7:                                          ; preds = %do.body6
  %7 = load i8*, i8** %data.addr, align 8, !dbg !3378
  %8 = load i64, i64* %bit_size.addr, align 8, !dbg !3380
  %conv8 = trunc i64 %8 to i32, !dbg !3380
  %call = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %7, i32 %conv8), !dbg !3381
  store i32 %call, i32* %ret, align 4, !dbg !3382
  %cmp9 = icmp slt i32 %call, 0, !dbg !3383
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !3384

if.then11:                                        ; preds = %do.end7
  %9 = load i32, i32* %ret, align 4, !dbg !3385
  store i32 %9, i32* %retval, align 4, !dbg !3386
  br label %return, !dbg !3386

if.end12:                                         ; preds = %do.end7
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3387
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3388
  %12 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !3389
  %13 = load i32, i32* %sync_extension.addr, align 4, !dbg !3390
  %call13 = call i32 @decode_audio_specific_config_gb(%struct.AACContext* %10, %struct.AVCodecContext* %11, %struct.MPEG4AudioConfig* %12, %struct.GetBitContext* %gb, i32 0, i32 %13), !dbg !3391
  store i32 %call13, i32* %retval, align 4, !dbg !3392
  br label %return, !dbg !3392

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !3393
  ret i32 %14, !dbg !3393
}

; Function Attrs: nounwind uwtable
define internal i32 @sample_rate_idx(i32 %rate) #1 !dbg !3394 {
entry:
  %retval = alloca i32, align 4
  %rate.addr = alloca i32, align 4
  store i32 %rate, i32* %rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rate.addr, metadata !3397, metadata !2068), !dbg !3398
  %0 = load i32, i32* %rate.addr, align 4, !dbg !3399
  %cmp = icmp sle i32 92017, %0, !dbg !3401
  br i1 %cmp, label %if.then, label %if.else, !dbg !3402

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3403
  br label %return, !dbg !3403

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %rate.addr, align 4, !dbg !3405
  %cmp1 = icmp sle i32 75132, %1, !dbg !3407
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !3408

if.then2:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !3409
  br label %return, !dbg !3409

if.else3:                                         ; preds = %if.else
  %2 = load i32, i32* %rate.addr, align 4, !dbg !3411
  %cmp4 = icmp sle i32 55426, %2, !dbg !3413
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !3414

if.then5:                                         ; preds = %if.else3
  store i32 2, i32* %retval, align 4, !dbg !3415
  br label %return, !dbg !3415

if.else6:                                         ; preds = %if.else3
  %3 = load i32, i32* %rate.addr, align 4, !dbg !3417
  %cmp7 = icmp sle i32 46009, %3, !dbg !3419
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !3420

if.then8:                                         ; preds = %if.else6
  store i32 3, i32* %retval, align 4, !dbg !3421
  br label %return, !dbg !3421

if.else9:                                         ; preds = %if.else6
  %4 = load i32, i32* %rate.addr, align 4, !dbg !3423
  %cmp10 = icmp sle i32 37566, %4, !dbg !3425
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !3426

if.then11:                                        ; preds = %if.else9
  store i32 4, i32* %retval, align 4, !dbg !3427
  br label %return, !dbg !3427

if.else12:                                        ; preds = %if.else9
  %5 = load i32, i32* %rate.addr, align 4, !dbg !3429
  %cmp13 = icmp sle i32 27713, %5, !dbg !3431
  br i1 %cmp13, label %if.then14, label %if.else15, !dbg !3432

if.then14:                                        ; preds = %if.else12
  store i32 5, i32* %retval, align 4, !dbg !3433
  br label %return, !dbg !3433

if.else15:                                        ; preds = %if.else12
  %6 = load i32, i32* %rate.addr, align 4, !dbg !3435
  %cmp16 = icmp sle i32 23004, %6, !dbg !3437
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !3438

if.then17:                                        ; preds = %if.else15
  store i32 6, i32* %retval, align 4, !dbg !3439
  br label %return, !dbg !3439

if.else18:                                        ; preds = %if.else15
  %7 = load i32, i32* %rate.addr, align 4, !dbg !3441
  %cmp19 = icmp sle i32 18783, %7, !dbg !3443
  br i1 %cmp19, label %if.then20, label %if.else21, !dbg !3444

if.then20:                                        ; preds = %if.else18
  store i32 7, i32* %retval, align 4, !dbg !3445
  br label %return, !dbg !3445

if.else21:                                        ; preds = %if.else18
  %8 = load i32, i32* %rate.addr, align 4, !dbg !3447
  %cmp22 = icmp sle i32 13856, %8, !dbg !3449
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !3450

if.then23:                                        ; preds = %if.else21
  store i32 8, i32* %retval, align 4, !dbg !3451
  br label %return, !dbg !3451

if.else24:                                        ; preds = %if.else21
  %9 = load i32, i32* %rate.addr, align 4, !dbg !3453
  %cmp25 = icmp sle i32 11502, %9, !dbg !3455
  br i1 %cmp25, label %if.then26, label %if.else27, !dbg !3456

if.then26:                                        ; preds = %if.else24
  store i32 9, i32* %retval, align 4, !dbg !3457
  br label %return, !dbg !3457

if.else27:                                        ; preds = %if.else24
  %10 = load i32, i32* %rate.addr, align 4, !dbg !3459
  %cmp28 = icmp sle i32 9391, %10, !dbg !3461
  br i1 %cmp28, label %if.then29, label %if.else30, !dbg !3462

if.then29:                                        ; preds = %if.else27
  store i32 10, i32* %retval, align 4, !dbg !3463
  br label %return, !dbg !3463

if.else30:                                        ; preds = %if.else27
  store i32 11, i32* %retval, align 4, !dbg !3465
  br label %return, !dbg !3465

return:                                           ; preds = %if.else30, %if.then29, %if.then26, %if.then23, %if.then20, %if.then17, %if.then14, %if.then11, %if.then8, %if.then5, %if.then2, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !3466
  ret i32 %11, !dbg !3466
}

; Function Attrs: nounwind uwtable
define internal i32 @set_default_channel_config(%struct.AVCodecContext* %avctx, [3 x i8]* %layout_map, i32* %tags, i32 %channel_config) #1 !dbg !3467 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %layout_map.addr = alloca [3 x i8]*, align 8
  %tags.addr = alloca i32*, align 8
  %channel_config.addr = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3471, metadata !2068), !dbg !3472
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !3473, metadata !2068), !dbg !3474
  store i32* %tags, i32** %tags.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %tags.addr, metadata !3475, metadata !2068), !dbg !3476
  store i32 %channel_config, i32* %channel_config.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel_config.addr, metadata !3477, metadata !2068), !dbg !3478
  %0 = load i32, i32* %channel_config.addr, align 4, !dbg !3479
  %cmp = icmp slt i32 %0, 1, !dbg !3481
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3482

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %channel_config.addr, align 4, !dbg !3483
  %cmp1 = icmp sgt i32 %1, 7, !dbg !3485
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false3, !dbg !3486

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load i32, i32* %channel_config.addr, align 4, !dbg !3487
  %cmp2 = icmp slt i32 %2, 11, !dbg !3489
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !3490

lor.lhs.false3:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %3 = load i32, i32* %channel_config.addr, align 4, !dbg !3491
  %cmp4 = icmp sgt i32 %3, 12, !dbg !3492
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3493

if.then:                                          ; preds = %lor.lhs.false3, %land.lhs.true, %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3495
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !3495
  %6 = load i32, i32* %channel_config.addr, align 4, !dbg !3497
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.32, i32 0, i32 0), i32 %6), !dbg !3498
  store i32 -1094995529, i32* %retval, align 4, !dbg !3499
  br label %return, !dbg !3499

if.end:                                           ; preds = %lor.lhs.false3
  %7 = load i32, i32* %channel_config.addr, align 4, !dbg !3500
  %idxprom = sext i32 %7 to i64, !dbg !3501
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* @tags_per_config, i64 0, i64 %idxprom, !dbg !3501
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3501
  %conv = sext i8 %8 to i32, !dbg !3501
  %9 = load i32*, i32** %tags.addr, align 8, !dbg !3502
  store i32 %conv, i32* %9, align 4, !dbg !3503
  %10 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3504
  %11 = bitcast [3 x i8]* %10 to i8*, !dbg !3505
  %12 = load i32, i32* %channel_config.addr, align 4, !dbg !3506
  %sub = sub nsw i32 %12, 1, !dbg !3507
  %idxprom5 = sext i32 %sub to i64, !dbg !3508
  %arrayidx6 = getelementptr inbounds [16 x [5 x [3 x i8]]], [16 x [5 x [3 x i8]]]* @aac_channel_layout_map, i64 0, i64 %idxprom5, !dbg !3508
  %arraydecay = getelementptr inbounds [5 x [3 x i8]], [5 x [3 x i8]]* %arrayidx6, i32 0, i32 0, !dbg !3505
  %13 = bitcast [3 x i8]* %arraydecay to i8*, !dbg !3505
  %14 = load i32*, i32** %tags.addr, align 8, !dbg !3509
  %15 = load i32, i32* %14, align 4, !dbg !3510
  %conv7 = sext i32 %15 to i64, !dbg !3510
  %mul = mul i64 %conv7, 3, !dbg !3511
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %13, i64 %mul, i32 1, i1 false), !dbg !3505
  %16 = load i32, i32* %channel_config.addr, align 4, !dbg !3512
  %cmp8 = icmp eq i32 %16, 7, !dbg !3514
  br i1 %cmp8, label %land.lhs.true10, label %if.end16, !dbg !3515

land.lhs.true10:                                  ; preds = %if.end
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3516
  %strict_std_compliance = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 132, !dbg !3518
  %18 = load i32, i32* %strict_std_compliance, align 4, !dbg !3518
  %cmp11 = icmp slt i32 %18, 1, !dbg !3519
  br i1 %cmp11, label %if.then13, label %if.end16, !dbg !3520

if.then13:                                        ; preds = %land.lhs.true10
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3521
  %20 = bitcast %struct.AVCodecContext* %19 to i8*, !dbg !3521
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 32, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.33, i32 0, i32 0), i32 1), !dbg !3523
  %21 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3524
  %arrayidx14 = getelementptr inbounds [3 x i8], [3 x i8]* %21, i64 2, !dbg !3524
  %arrayidx15 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx14, i64 0, i64 2, !dbg !3524
  store i8 2, i8* %arrayidx15, align 1, !dbg !3525
  br label %if.end16, !dbg !3526

if.end16:                                         ; preds = %if.then13, %land.lhs.true10, %if.end
  store i32 0, i32* %retval, align 4, !dbg !3527
  br label %return, !dbg !3527

return:                                           ; preds = %if.end16, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !3528
  ret i32 %22, !dbg !3528
}

; Function Attrs: nounwind uwtable
define internal i32 @output_configure(%struct.AACContext* %ac, [3 x i8]* %layout_map, i32 %tags, i32 %oc_type, i32 %get_new_frame) #1 !dbg !3529 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %layout_map.addr = alloca [3 x i8]*, align 8
  %tags.addr = alloca i32, align 4
  %oc_type.addr = alloca i32, align 4
  %get_new_frame.addr = alloca i32, align 4
  %avctx = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %channels = alloca i32, align 4
  %ret = alloca i32, align 4
  %layout = alloca i64, align 8
  %id_map = alloca [7 x [16 x i8]], align 16
  %type_counts = alloca [7 x i8], align 1
  %type = alloca i32, align 4
  %id = alloca i32, align 4
  %type43 = alloca i32, align 4
  %id48 = alloca i32, align 4
  %iid = alloca i32, align 4
  %position = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !3532, metadata !2068), !dbg !3533
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !3534, metadata !2068), !dbg !3535
  store i32 %tags, i32* %tags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tags.addr, metadata !3536, metadata !2068), !dbg !3537
  store i32 %oc_type, i32* %oc_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oc_type.addr, metadata !3538, metadata !2068), !dbg !3539
  store i32 %get_new_frame, i32* %get_new_frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %get_new_frame.addr, metadata !3540, metadata !2068), !dbg !3541
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !3542, metadata !2068), !dbg !3543
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3544
  %avctx1 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 1, !dbg !3545
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !3545
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !3543
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3546, metadata !2068), !dbg !3547
  call void @llvm.dbg.declare(metadata i32* %channels, metadata !3548, metadata !2068), !dbg !3549
  store i32 0, i32* %channels, align 4, !dbg !3549
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3550, metadata !2068), !dbg !3551
  call void @llvm.dbg.declare(metadata i64* %layout, metadata !3552, metadata !2068), !dbg !3553
  store i64 0, i64* %layout, align 8, !dbg !3553
  call void @llvm.dbg.declare(metadata [7 x [16 x i8]]* %id_map, metadata !3554, metadata !2068), !dbg !3557
  %2 = bitcast [7 x [16 x i8]]* %id_map to i8*, !dbg !3557
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 112, i32 16, i1 false), !dbg !3557
  call void @llvm.dbg.declare(metadata [7 x i8]* %type_counts, metadata !3558, metadata !2068), !dbg !3559
  %3 = bitcast [7 x i8]* %type_counts to i8*, !dbg !3559
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 7, i32 1, i1 false), !dbg !3559
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3560
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 21, !dbg !3562
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !3560
  %layout_map2 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 1, !dbg !3563
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map2, i32 0, i32 0, !dbg !3560
  %5 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3564
  %cmp = icmp ne [3 x i8]* %arraydecay, %5, !dbg !3565
  br i1 %cmp, label %if.then, label %if.end, !dbg !3566

if.then:                                          ; preds = %entry
  %6 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3567
  %oc3 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %6, i32 0, i32 21, !dbg !3569
  %arrayidx4 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc3, i64 0, i64 1, !dbg !3567
  %layout_map5 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx4, i32 0, i32 1, !dbg !3570
  %arraydecay6 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map5, i32 0, i32 0, !dbg !3571
  %7 = bitcast [3 x i8]* %arraydecay6 to i8*, !dbg !3571
  %8 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3572
  %9 = bitcast [3 x i8]* %8 to i8*, !dbg !3571
  %10 = load i32, i32* %tags.addr, align 4, !dbg !3573
  %conv = sext i32 %10 to i64, !dbg !3573
  %mul = mul i64 %conv, 3, !dbg !3574
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %9, i64 %mul, i32 1, i1 false), !dbg !3571
  %11 = load i32, i32* %tags.addr, align 4, !dbg !3575
  %12 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3576
  %oc7 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 21, !dbg !3577
  %arrayidx8 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc7, i64 0, i64 1, !dbg !3576
  %layout_map_tags = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx8, i32 0, i32 2, !dbg !3578
  store i32 %11, i32* %layout_map_tags, align 8, !dbg !3579
  br label %if.end, !dbg !3580

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !3581
  br label %for.cond, !dbg !3583

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !3584
  %14 = load i32, i32* %tags.addr, align 4, !dbg !3587
  %cmp9 = icmp slt i32 %13, %14, !dbg !3588
  br i1 %cmp9, label %for.body, label %for.end, !dbg !3589

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %type, metadata !3590, metadata !2068), !dbg !3592
  %15 = load i32, i32* %i, align 4, !dbg !3593
  %idxprom = sext i32 %15 to i64, !dbg !3594
  %16 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3594
  %arrayidx11 = getelementptr inbounds [3 x i8], [3 x i8]* %16, i64 %idxprom, !dbg !3594
  %arrayidx12 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx11, i64 0, i64 0, !dbg !3594
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !3594
  %conv13 = zext i8 %17 to i32, !dbg !3594
  store i32 %conv13, i32* %type, align 4, !dbg !3592
  call void @llvm.dbg.declare(metadata i32* %id, metadata !3595, metadata !2068), !dbg !3596
  %18 = load i32, i32* %i, align 4, !dbg !3597
  %idxprom14 = sext i32 %18 to i64, !dbg !3598
  %19 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3598
  %arrayidx15 = getelementptr inbounds [3 x i8], [3 x i8]* %19, i64 %idxprom14, !dbg !3598
  %arrayidx16 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx15, i64 0, i64 1, !dbg !3598
  %20 = load i8, i8* %arrayidx16, align 1, !dbg !3598
  %conv17 = zext i8 %20 to i32, !dbg !3598
  store i32 %conv17, i32* %id, align 4, !dbg !3596
  %21 = load i32, i32* %type, align 4, !dbg !3599
  %idxprom18 = sext i32 %21 to i64, !dbg !3600
  %arrayidx19 = getelementptr inbounds [7 x i8], [7 x i8]* %type_counts, i64 0, i64 %idxprom18, !dbg !3600
  %22 = load i8, i8* %arrayidx19, align 1, !dbg !3601
  %inc = add i8 %22, 1, !dbg !3601
  store i8 %inc, i8* %arrayidx19, align 1, !dbg !3601
  %23 = load i32, i32* %id, align 4, !dbg !3602
  %idxprom20 = sext i32 %23 to i64, !dbg !3603
  %24 = load i32, i32* %type, align 4, !dbg !3604
  %idxprom21 = sext i32 %24 to i64, !dbg !3603
  %arrayidx22 = getelementptr inbounds [7 x [16 x i8]], [7 x [16 x i8]]* %id_map, i64 0, i64 %idxprom21, !dbg !3603
  %arrayidx23 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx22, i64 0, i64 %idxprom20, !dbg !3603
  store i8 %22, i8* %arrayidx23, align 1, !dbg !3605
  %25 = load i32, i32* %id, align 4, !dbg !3606
  %idxprom24 = sext i32 %25 to i64, !dbg !3608
  %26 = load i32, i32* %type, align 4, !dbg !3609
  %idxprom25 = sext i32 %26 to i64, !dbg !3608
  %arrayidx26 = getelementptr inbounds [7 x [16 x i8]], [7 x [16 x i8]]* %id_map, i64 0, i64 %idxprom25, !dbg !3608
  %arrayidx27 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx26, i64 0, i64 %idxprom24, !dbg !3608
  %27 = load i8, i8* %arrayidx27, align 1, !dbg !3608
  %conv28 = zext i8 %27 to i32, !dbg !3608
  %cmp29 = icmp sge i32 %conv28, 16, !dbg !3610
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !3611

if.then31:                                        ; preds = %for.body
  %28 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3612
  %avctx32 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %28, i32 0, i32 1, !dbg !3614
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx32, align 8, !dbg !3614
  %30 = bitcast %struct.AVCodecContext* %29 to i8*, !dbg !3612
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %30, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.34, i32 0, i32 0)), !dbg !3615
  store i32 -1163346256, i32* %retval, align 4, !dbg !3616
  br label %return, !dbg !3616

if.end33:                                         ; preds = %for.body
  br label %for.inc, !dbg !3617

for.inc:                                          ; preds = %if.end33
  %31 = load i32, i32* %i, align 4, !dbg !3618
  %inc34 = add nsw i32 %31, 1, !dbg !3618
  store i32 %inc34, i32* %i, align 4, !dbg !3618
  br label %for.cond, !dbg !3620, !llvm.loop !3621

for.end:                                          ; preds = %for.cond
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3623
  %request_channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %32, i32 0, i32 90, !dbg !3625
  %33 = load i64, i64* %request_channel_layout, align 8, !dbg !3625
  %cmp35 = icmp ne i64 %33, -9223372036854775808, !dbg !3626
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !3627

if.then37:                                        ; preds = %for.end
  %34 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3628
  %35 = load i32, i32* %tags.addr, align 4, !dbg !3629
  %call = call i64 @sniff_channel_order([3 x i8]* %34, i32 %35), !dbg !3630
  store i64 %call, i64* %layout, align 8, !dbg !3631
  br label %if.end38, !dbg !3632

if.end38:                                         ; preds = %if.then37, %for.end
  store i32 0, i32* %i, align 4, !dbg !3633
  br label %for.cond39, !dbg !3635

for.cond39:                                       ; preds = %for.inc75, %if.end38
  %36 = load i32, i32* %i, align 4, !dbg !3636
  %37 = load i32, i32* %tags.addr, align 4, !dbg !3639
  %cmp40 = icmp slt i32 %36, %37, !dbg !3640
  br i1 %cmp40, label %for.body42, label %for.end77, !dbg !3641

for.body42:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata i32* %type43, metadata !3642, metadata !2068), !dbg !3644
  %38 = load i32, i32* %i, align 4, !dbg !3645
  %idxprom44 = sext i32 %38 to i64, !dbg !3646
  %39 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3646
  %arrayidx45 = getelementptr inbounds [3 x i8], [3 x i8]* %39, i64 %idxprom44, !dbg !3646
  %arrayidx46 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx45, i64 0, i64 0, !dbg !3646
  %40 = load i8, i8* %arrayidx46, align 1, !dbg !3646
  %conv47 = zext i8 %40 to i32, !dbg !3646
  store i32 %conv47, i32* %type43, align 4, !dbg !3644
  call void @llvm.dbg.declare(metadata i32* %id48, metadata !3647, metadata !2068), !dbg !3648
  %41 = load i32, i32* %i, align 4, !dbg !3649
  %idxprom49 = sext i32 %41 to i64, !dbg !3650
  %42 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3650
  %arrayidx50 = getelementptr inbounds [3 x i8], [3 x i8]* %42, i64 %idxprom49, !dbg !3650
  %arrayidx51 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx50, i64 0, i64 1, !dbg !3650
  %43 = load i8, i8* %arrayidx51, align 1, !dbg !3650
  %conv52 = zext i8 %43 to i32, !dbg !3650
  store i32 %conv52, i32* %id48, align 4, !dbg !3648
  call void @llvm.dbg.declare(metadata i32* %iid, metadata !3651, metadata !2068), !dbg !3652
  %44 = load i32, i32* %id48, align 4, !dbg !3653
  %idxprom53 = sext i32 %44 to i64, !dbg !3654
  %45 = load i32, i32* %type43, align 4, !dbg !3655
  %idxprom54 = sext i32 %45 to i64, !dbg !3654
  %arrayidx55 = getelementptr inbounds [7 x [16 x i8]], [7 x [16 x i8]]* %id_map, i64 0, i64 %idxprom54, !dbg !3654
  %arrayidx56 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx55, i64 0, i64 %idxprom53, !dbg !3654
  %46 = load i8, i8* %arrayidx56, align 1, !dbg !3654
  %conv57 = zext i8 %46 to i32, !dbg !3654
  store i32 %conv57, i32* %iid, align 4, !dbg !3652
  call void @llvm.dbg.declare(metadata i32* %position, metadata !3656, metadata !2068), !dbg !3657
  %47 = load i32, i32* %i, align 4, !dbg !3658
  %idxprom58 = sext i32 %47 to i64, !dbg !3659
  %48 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3659
  %arrayidx59 = getelementptr inbounds [3 x i8], [3 x i8]* %48, i64 %idxprom58, !dbg !3659
  %arrayidx60 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx59, i64 0, i64 2, !dbg !3659
  %49 = load i8, i8* %arrayidx60, align 1, !dbg !3659
  %conv61 = zext i8 %49 to i32, !dbg !3659
  store i32 %conv61, i32* %position, align 4, !dbg !3657
  %50 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3660
  %51 = load i32, i32* %position, align 4, !dbg !3661
  %52 = load i32, i32* %type43, align 4, !dbg !3662
  %53 = load i32, i32* %iid, align 4, !dbg !3663
  %call62 = call i32 @che_configure(%struct.AACContext* %50, i32 %51, i32 %52, i32 %53, i32* %channels), !dbg !3664
  store i32 %call62, i32* %ret, align 4, !dbg !3665
  %54 = load i32, i32* %ret, align 4, !dbg !3666
  %cmp63 = icmp slt i32 %54, 0, !dbg !3668
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !3669

if.then65:                                        ; preds = %for.body42
  %55 = load i32, i32* %ret, align 4, !dbg !3670
  store i32 %55, i32* %retval, align 4, !dbg !3671
  br label %return, !dbg !3671

if.end66:                                         ; preds = %for.body42
  %56 = load i32, i32* %iid, align 4, !dbg !3672
  %idxprom67 = sext i32 %56 to i64, !dbg !3673
  %57 = load i32, i32* %type43, align 4, !dbg !3674
  %idxprom68 = sext i32 %57 to i64, !dbg !3673
  %58 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3673
  %che = getelementptr inbounds %struct.AACContext, %struct.AACContext* %58, i32 0, i32 5, !dbg !3675
  %arrayidx69 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che, i64 0, i64 %idxprom68, !dbg !3673
  %arrayidx70 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx69, i64 0, i64 %idxprom67, !dbg !3673
  %59 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx70, align 8, !dbg !3673
  %60 = load i32, i32* %id48, align 4, !dbg !3676
  %idxprom71 = sext i32 %60 to i64, !dbg !3677
  %61 = load i32, i32* %type43, align 4, !dbg !3678
  %idxprom72 = sext i32 %61 to i64, !dbg !3677
  %62 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3677
  %tag_che_map = getelementptr inbounds %struct.AACContext, %struct.AACContext* %62, i32 0, i32 6, !dbg !3679
  %arrayidx73 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map, i64 0, i64 %idxprom72, !dbg !3677
  %arrayidx74 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx73, i64 0, i64 %idxprom71, !dbg !3677
  store %struct.ChannelElement* %59, %struct.ChannelElement** %arrayidx74, align 8, !dbg !3680
  br label %for.inc75, !dbg !3681

for.inc75:                                        ; preds = %if.end66
  %63 = load i32, i32* %i, align 4, !dbg !3682
  %inc76 = add nsw i32 %63, 1, !dbg !3682
  store i32 %inc76, i32* %i, align 4, !dbg !3682
  br label %for.cond39, !dbg !3684, !llvm.loop !3685

for.end77:                                        ; preds = %for.cond39
  %64 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3687
  %oc78 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %64, i32 0, i32 21, !dbg !3689
  %arrayidx79 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc78, i64 0, i64 1, !dbg !3687
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx79, i32 0, i32 0, !dbg !3690
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 10, !dbg !3691
  %65 = load i32, i32* %ps, align 8, !dbg !3691
  %cmp80 = icmp eq i32 %65, 1, !dbg !3692
  br i1 %cmp80, label %land.lhs.true, label %if.end89, !dbg !3693

land.lhs.true:                                    ; preds = %for.end77
  %66 = load i32, i32* %channels, align 4, !dbg !3694
  %cmp82 = icmp eq i32 %66, 2, !dbg !3696
  br i1 %cmp82, label %if.then84, label %if.end89, !dbg !3697

if.then84:                                        ; preds = %land.lhs.true
  %67 = load i64, i64* %layout, align 8, !dbg !3698
  %cmp85 = icmp eq i64 %67, 4, !dbg !3701
  br i1 %cmp85, label %if.then87, label %if.else, !dbg !3702

if.then87:                                        ; preds = %if.then84
  store i64 3, i64* %layout, align 8, !dbg !3703
  br label %if.end88, !dbg !3705

if.else:                                          ; preds = %if.then84
  store i64 0, i64* %layout, align 8, !dbg !3706
  br label %if.end88

if.end88:                                         ; preds = %if.else, %if.then87
  br label %if.end89, !dbg !3708

if.end89:                                         ; preds = %if.end88, %land.lhs.true, %for.end77
  %68 = load i64, i64* %layout, align 8, !dbg !3709
  %tobool = icmp ne i64 %68, 0, !dbg !3709
  br i1 %tobool, label %if.then90, label %if.end91, !dbg !3711

if.then90:                                        ; preds = %if.end89
  %69 = load i64, i64* %layout, align 8, !dbg !3712
  %70 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3714
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %70, i32 0, i32 89, !dbg !3715
  store i64 %69, i64* %channel_layout, align 8, !dbg !3716
  br label %if.end91, !dbg !3714

if.end91:                                         ; preds = %if.then90, %if.end89
  %71 = load i64, i64* %layout, align 8, !dbg !3717
  %72 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3718
  %oc92 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %72, i32 0, i32 21, !dbg !3719
  %arrayidx93 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc92, i64 0, i64 1, !dbg !3718
  %channel_layout94 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx93, i32 0, i32 4, !dbg !3720
  store i64 %71, i64* %channel_layout94, align 8, !dbg !3721
  %73 = load i32, i32* %channels, align 4, !dbg !3722
  %74 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3723
  %oc95 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %74, i32 0, i32 21, !dbg !3724
  %arrayidx96 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc95, i64 0, i64 1, !dbg !3723
  %channels97 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx96, i32 0, i32 3, !dbg !3725
  store i32 %73, i32* %channels97, align 4, !dbg !3726
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3727
  %channels98 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %75, i32 0, i32 83, !dbg !3728
  store i32 %73, i32* %channels98, align 4, !dbg !3729
  %76 = load i32, i32* %oc_type.addr, align 4, !dbg !3730
  %77 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3731
  %oc99 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %77, i32 0, i32 21, !dbg !3732
  %arrayidx100 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc99, i64 0, i64 1, !dbg !3731
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx100, i32 0, i32 5, !dbg !3733
  store i32 %76, i32* %status, align 8, !dbg !3734
  %78 = load i32, i32* %get_new_frame.addr, align 4, !dbg !3735
  %tobool101 = icmp ne i32 %78, 0, !dbg !3735
  br i1 %tobool101, label %if.then102, label %if.end109, !dbg !3737

if.then102:                                       ; preds = %if.end91
  %79 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3738
  %avctx103 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %79, i32 0, i32 1, !dbg !3741
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx103, align 8, !dbg !3741
  %call104 = call i32 @frame_configure_elements(%struct.AVCodecContext* %80), !dbg !3742
  store i32 %call104, i32* %ret, align 4, !dbg !3743
  %cmp105 = icmp slt i32 %call104, 0, !dbg !3744
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !3745

if.then107:                                       ; preds = %if.then102
  %81 = load i32, i32* %ret, align 4, !dbg !3746
  store i32 %81, i32* %retval, align 4, !dbg !3747
  br label %return, !dbg !3747

if.end108:                                        ; preds = %if.then102
  br label %if.end109, !dbg !3748

if.end109:                                        ; preds = %if.end108, %if.end91
  store i32 0, i32* %retval, align 4, !dbg !3749
  br label %return, !dbg !3749

return:                                           ; preds = %if.end109, %if.then107, %if.then65, %if.then31
  %82 = load i32, i32* %retval, align 4, !dbg !3750
  ret i32 %82, !dbg !3750
}

declare void @av_log(i8*, i32, i8*, ...) #3

declare %struct.AVFixedDSPContext* @avpriv_alloc_fixed_dsp(i32) #3

declare i32 @ff_mdct_init_fixed_32(%struct.FFTContext*, i32, i32, double) #3

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #3

declare void @ff_aac_sbr_init_fixed() #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @ff_aac_tableinit() #4 !dbg !1874 {
entry:
  %i = alloca i32, align 4
  %t1 = alloca float, align 4
  %t2 = alloca float, align 4
  %t1_inc_cur = alloca i32, align 4
  %t2_inc_cur = alloca i32, align 4
  %t1_inc_prev = alloca i32, align 4
  %t2_inc_prev = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3751, metadata !2068), !dbg !3752
  call void @llvm.dbg.declare(metadata float* %t1, metadata !3753, metadata !2068), !dbg !3754
  store float 0x3CD0000000000000, float* %t1, align 4, !dbg !3754
  call void @llvm.dbg.declare(metadata float* %t2, metadata !3755, metadata !2068), !dbg !3756
  store float 0x3D90000000000000, float* %t2, align 4, !dbg !3756
  call void @llvm.dbg.declare(metadata i32* %t1_inc_cur, metadata !3757, metadata !2068), !dbg !3758
  call void @llvm.dbg.declare(metadata i32* %t2_inc_cur, metadata !3759, metadata !2068), !dbg !3760
  call void @llvm.dbg.declare(metadata i32* %t1_inc_prev, metadata !3761, metadata !2068), !dbg !3762
  store i32 0, i32* %t1_inc_prev, align 4, !dbg !3762
  call void @llvm.dbg.declare(metadata i32* %t2_inc_prev, metadata !3763, metadata !2068), !dbg !3764
  store i32 8, i32* %t2_inc_prev, align 4, !dbg !3764
  store i32 0, i32* %i, align 4, !dbg !3765
  br label %for.cond, !dbg !3767

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3768
  %cmp = icmp slt i32 %0, 428, !dbg !3771
  br i1 %cmp, label %for.body, label %for.end, !dbg !3772

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3773
  %rem = srem i32 %1, 4, !dbg !3775
  %mul = mul nsw i32 4, %rem, !dbg !3776
  store i32 %mul, i32* %t1_inc_cur, align 4, !dbg !3777
  %2 = load i32, i32* %i, align 4, !dbg !3778
  %mul1 = mul nsw i32 3, %2, !dbg !3779
  %add = add nsw i32 8, %mul1, !dbg !3780
  %rem2 = srem i32 %add, 16, !dbg !3781
  store i32 %rem2, i32* %t2_inc_cur, align 4, !dbg !3782
  %3 = load i32, i32* %t1_inc_cur, align 4, !dbg !3783
  %4 = load i32, i32* %t1_inc_prev, align 4, !dbg !3785
  %cmp3 = icmp slt i32 %3, %4, !dbg !3786
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3787

if.then:                                          ; preds = %for.body
  %5 = load float, float* %t1, align 4, !dbg !3788
  %mul4 = fmul float %5, 2.000000e+00, !dbg !3788
  store float %mul4, float* %t1, align 4, !dbg !3788
  br label %if.end, !dbg !3789

if.end:                                           ; preds = %if.then, %for.body
  %6 = load i32, i32* %t2_inc_cur, align 4, !dbg !3790
  %7 = load i32, i32* %t2_inc_prev, align 4, !dbg !3792
  %cmp5 = icmp slt i32 %6, %7, !dbg !3793
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !3794

if.then6:                                         ; preds = %if.end
  %8 = load float, float* %t2, align 4, !dbg !3795
  %mul7 = fmul float %8, 2.000000e+00, !dbg !3795
  store float %mul7, float* %t2, align 4, !dbg !3795
  br label %if.end8, !dbg !3796

if.end8:                                          ; preds = %if.then6, %if.end
  %9 = load float, float* %t1, align 4, !dbg !3797
  %10 = load i32, i32* %t1_inc_cur, align 4, !dbg !3798
  %idxprom = sext i32 %10 to i64, !dbg !3799
  %arrayidx = getelementptr inbounds [16 x float], [16 x float]* @ff_aac_tableinit.exp2_lut, i64 0, i64 %idxprom, !dbg !3799
  %11 = load float, float* %arrayidx, align 4, !dbg !3799
  %mul9 = fmul float %9, %11, !dbg !3800
  %12 = load i32, i32* %i, align 4, !dbg !3801
  %idxprom10 = sext i32 %12 to i64, !dbg !3802
  %arrayidx11 = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom10, !dbg !3802
  store float %mul9, float* %arrayidx11, align 4, !dbg !3803
  %13 = load float, float* %t2, align 4, !dbg !3804
  %14 = load i32, i32* %t2_inc_cur, align 4, !dbg !3805
  %idxprom12 = sext i32 %14 to i64, !dbg !3806
  %arrayidx13 = getelementptr inbounds [16 x float], [16 x float]* @ff_aac_tableinit.exp2_lut, i64 0, i64 %idxprom12, !dbg !3806
  %15 = load float, float* %arrayidx13, align 4, !dbg !3806
  %mul14 = fmul float %13, %15, !dbg !3807
  %16 = load i32, i32* %i, align 4, !dbg !3808
  %idxprom15 = sext i32 %16 to i64, !dbg !3809
  %arrayidx16 = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom15, !dbg !3809
  store float %mul14, float* %arrayidx16, align 4, !dbg !3810
  %17 = load i32, i32* %t1_inc_cur, align 4, !dbg !3811
  store i32 %17, i32* %t1_inc_prev, align 4, !dbg !3812
  %18 = load i32, i32* %t2_inc_cur, align 4, !dbg !3813
  store i32 %18, i32* %t2_inc_prev, align 4, !dbg !3814
  br label %for.inc, !dbg !3815

for.inc:                                          ; preds = %if.end8
  %19 = load i32, i32* %i, align 4, !dbg !3816
  %inc = add nsw i32 %19, 1, !dbg !3816
  store i32 %inc, i32* %i, align 4, !dbg !3816
  br label %for.cond, !dbg !3818, !llvm.loop !3819

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3821
}

declare void @ff_kbd_window_init_fixed(i32*, float, i32) #3

declare void @ff_init_ff_sine_windows_fixed(i32) #3

declare void @ff_cbrt_tableinit_fixed() #3

; Function Attrs: nounwind uwtable
define internal void @imdct_and_windowing(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !3822 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %in = alloca i32*, align 8
  %out = alloca i32*, align 8
  %saved = alloca i32*, align 8
  %swindow = alloca i32*, align 8
  %lwindow_prev = alloca i32*, align 8
  %swindow_prev = alloca i32*, align 8
  %buf = alloca i32*, align 8
  %temp = alloca i32*, align 8
  %i = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !3823, metadata !2068), !dbg !3824
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !3825, metadata !2068), !dbg !3826
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !3827, metadata !2068), !dbg !3828
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3829
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !3830
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !3828
  call void @llvm.dbg.declare(metadata i32** %in, metadata !3831, metadata !2068), !dbg !3832
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3833
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 14, !dbg !3834
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs, i32 0, i32 0, !dbg !3833
  store i32* %arraydecay, i32** %in, align 8, !dbg !3832
  call void @llvm.dbg.declare(metadata i32** %out, metadata !3835, metadata !2068), !dbg !3836
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3837
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 21, !dbg !3838
  %3 = load i32*, i32** %ret, align 32, !dbg !3838
  store i32* %3, i32** %out, align 8, !dbg !3836
  call void @llvm.dbg.declare(metadata i32** %saved, metadata !3839, metadata !2068), !dbg !3840
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3841
  %saved2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 15, !dbg !3842
  %arraydecay3 = getelementptr inbounds [1536 x i32], [1536 x i32]* %saved2, i32 0, i32 0, !dbg !3841
  store i32* %arraydecay3, i32** %saved, align 8, !dbg !3840
  call void @llvm.dbg.declare(metadata i32** %swindow, metadata !3843, metadata !2068), !dbg !3844
  %5 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3845
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %5, i32 0, i32 2, !dbg !3846
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !3845
  %6 = load i8, i8* %arrayidx, align 4, !dbg !3845
  %conv = zext i8 %6 to i32, !dbg !3845
  %tobool = icmp ne i32 %conv, 0, !dbg !3845
  %cond = select i1 %tobool, i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_aac_kbd_short_128_fixed, i32 0, i32 0), i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_sine_128_fixed, i32 0, i32 0), !dbg !3845
  store i32* %cond, i32** %swindow, align 8, !dbg !3844
  call void @llvm.dbg.declare(metadata i32** %lwindow_prev, metadata !3847, metadata !2068), !dbg !3848
  %7 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3849
  %use_kb_window4 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %7, i32 0, i32 2, !dbg !3850
  %arrayidx5 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window4, i64 0, i64 1, !dbg !3849
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !3849
  %conv6 = zext i8 %8 to i32, !dbg !3849
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !3849
  %cond8 = select i1 %tobool7, i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @ff_aac_kbd_long_1024_fixed, i32 0, i32 0), i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @ff_sine_1024_fixed, i32 0, i32 0), !dbg !3849
  store i32* %cond8, i32** %lwindow_prev, align 8, !dbg !3848
  call void @llvm.dbg.declare(metadata i32** %swindow_prev, metadata !3851, metadata !2068), !dbg !3852
  %9 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3853
  %use_kb_window9 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %9, i32 0, i32 2, !dbg !3854
  %arrayidx10 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window9, i64 0, i64 1, !dbg !3853
  %10 = load i8, i8* %arrayidx10, align 1, !dbg !3853
  %conv11 = zext i8 %10 to i32, !dbg !3853
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !3853
  %cond13 = select i1 %tobool12, i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_aac_kbd_short_128_fixed, i32 0, i32 0), i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_sine_128_fixed, i32 0, i32 0), !dbg !3853
  store i32* %cond13, i32** %swindow_prev, align 8, !dbg !3852
  call void @llvm.dbg.declare(metadata i32** %buf, metadata !3855, metadata !2068), !dbg !3856
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3857
  %buf_mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %11, i32 0, i32 9, !dbg !3858
  %arraydecay14 = getelementptr inbounds [1024 x i32], [1024 x i32]* %buf_mdct, i32 0, i32 0, !dbg !3857
  store i32* %arraydecay14, i32** %buf, align 8, !dbg !3856
  call void @llvm.dbg.declare(metadata i32** %temp, metadata !3859, metadata !2068), !dbg !3860
  %12 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3861
  %temp15 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 20, !dbg !3862
  %arraydecay16 = getelementptr inbounds [128 x i32], [128 x i32]* %temp15, i32 0, i32 0, !dbg !3861
  store i32* %arraydecay16, i32** %temp, align 8, !dbg !3860
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3863, metadata !2068), !dbg !3864
  %13 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3865
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %13, i32 0, i32 1, !dbg !3867
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !3865
  %14 = load i32, i32* %arrayidx17, align 4, !dbg !3865
  %cmp = icmp eq i32 %14, 2, !dbg !3868
  br i1 %cmp, label %if.then, label %if.else, !dbg !3869

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !3870
  br label %for.cond, !dbg !3873

for.cond:                                         ; preds = %for.inc, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !3874
  %cmp19 = icmp slt i32 %15, 1024, !dbg !3877
  br i1 %cmp19, label %for.body, label %for.end, !dbg !3878

for.body:                                         ; preds = %for.cond
  %16 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3879
  %mdct_small = getelementptr inbounds %struct.AACContext, %struct.AACContext* %16, i32 0, i32 11, !dbg !3880
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct_small, i32 0, i32 11, !dbg !3881
  %17 = load void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)** %imdct_half, align 8, !dbg !3881
  %18 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3882
  %mdct_small21 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %18, i32 0, i32 11, !dbg !3883
  %19 = load i32*, i32** %buf, align 8, !dbg !3884
  %20 = load i32, i32* %i, align 4, !dbg !3885
  %idx.ext = sext i32 %20 to i64, !dbg !3886
  %add.ptr = getelementptr inbounds i32, i32* %19, i64 %idx.ext, !dbg !3886
  %21 = load i32*, i32** %in, align 8, !dbg !3887
  %22 = load i32, i32* %i, align 4, !dbg !3888
  %idx.ext22 = sext i32 %22 to i64, !dbg !3889
  %add.ptr23 = getelementptr inbounds i32, i32* %21, i64 %idx.ext22, !dbg !3889
  call void %17(%struct.FFTContext* %mdct_small21, i32* %add.ptr, i32* %add.ptr23), !dbg !3879
  br label %for.inc, !dbg !3879

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !3890
  %add = add nsw i32 %23, 128, !dbg !3890
  store i32 %add, i32* %i, align 4, !dbg !3890
  br label %for.cond, !dbg !3892, !llvm.loop !3893

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !3895

if.else:                                          ; preds = %entry
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3896
  %mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 10, !dbg !3898
  %imdct_half24 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct, i32 0, i32 11, !dbg !3899
  %25 = load void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)** %imdct_half24, align 8, !dbg !3899
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3900
  %mdct25 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %26, i32 0, i32 10, !dbg !3901
  %27 = load i32*, i32** %buf, align 8, !dbg !3902
  %28 = load i32*, i32** %in, align 8, !dbg !3903
  call void %25(%struct.FFTContext* %mdct25, i32* %27, i32* %28), !dbg !3896
  store i32 0, i32* %i, align 4, !dbg !3904
  br label %for.cond26, !dbg !3906

for.cond26:                                       ; preds = %for.inc34, %if.else
  %29 = load i32, i32* %i, align 4, !dbg !3907
  %cmp27 = icmp slt i32 %29, 1024, !dbg !3910
  br i1 %cmp27, label %for.body29, label %for.end35, !dbg !3911

for.body29:                                       ; preds = %for.cond26
  %30 = load i32, i32* %i, align 4, !dbg !3912
  %idxprom = sext i32 %30 to i64, !dbg !3913
  %31 = load i32*, i32** %buf, align 8, !dbg !3913
  %arrayidx30 = getelementptr inbounds i32, i32* %31, i64 %idxprom, !dbg !3913
  %32 = load i32, i32* %arrayidx30, align 4, !dbg !3913
  %add31 = add nsw i32 %32, 4, !dbg !3914
  %shr = ashr i32 %add31, 3, !dbg !3915
  %33 = load i32, i32* %i, align 4, !dbg !3916
  %idxprom32 = sext i32 %33 to i64, !dbg !3917
  %34 = load i32*, i32** %buf, align 8, !dbg !3917
  %arrayidx33 = getelementptr inbounds i32, i32* %34, i64 %idxprom32, !dbg !3917
  store i32 %shr, i32* %arrayidx33, align 4, !dbg !3918
  br label %for.inc34, !dbg !3917

for.inc34:                                        ; preds = %for.body29
  %35 = load i32, i32* %i, align 4, !dbg !3919
  %inc = add nsw i32 %35, 1, !dbg !3919
  store i32 %inc, i32* %i, align 4, !dbg !3919
  br label %for.cond26, !dbg !3921, !llvm.loop !3922

for.end35:                                        ; preds = %for.cond26
  br label %if.end

if.end:                                           ; preds = %for.end35, %for.end
  %36 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3924
  %window_sequence36 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %36, i32 0, i32 1, !dbg !3926
  %arrayidx37 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence36, i64 0, i64 1, !dbg !3924
  %37 = load i32, i32* %arrayidx37, align 4, !dbg !3924
  %cmp38 = icmp eq i32 %37, 0, !dbg !3927
  br i1 %cmp38, label %land.lhs.true, label %lor.lhs.false, !dbg !3928

lor.lhs.false:                                    ; preds = %if.end
  %38 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3929
  %window_sequence40 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %38, i32 0, i32 1, !dbg !3931
  %arrayidx41 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence40, i64 0, i64 1, !dbg !3929
  %39 = load i32, i32* %arrayidx41, align 4, !dbg !3929
  %cmp42 = icmp eq i32 %39, 3, !dbg !3932
  br i1 %cmp42, label %land.lhs.true, label %if.else54, !dbg !3933

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %40 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3934
  %window_sequence44 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %40, i32 0, i32 1, !dbg !3935
  %arrayidx45 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence44, i64 0, i64 0, !dbg !3934
  %41 = load i32, i32* %arrayidx45, align 4, !dbg !3934
  %cmp46 = icmp eq i32 %41, 0, !dbg !3936
  br i1 %cmp46, label %if.then53, label %lor.lhs.false48, !dbg !3937

lor.lhs.false48:                                  ; preds = %land.lhs.true
  %42 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3938
  %window_sequence49 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %42, i32 0, i32 1, !dbg !3939
  %arrayidx50 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence49, i64 0, i64 0, !dbg !3938
  %43 = load i32, i32* %arrayidx50, align 4, !dbg !3938
  %cmp51 = icmp eq i32 %43, 1, !dbg !3940
  br i1 %cmp51, label %if.then53, label %if.else54, !dbg !3941

if.then53:                                        ; preds = %lor.lhs.false48, %land.lhs.true
  %44 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3943
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %44, i32 0, i32 14, !dbg !3945
  %45 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp, align 32, !dbg !3945
  %vector_fmul_window = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %45, i32 0, i32 1, !dbg !3946
  %46 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_window, align 8, !dbg !3946
  %47 = load i32*, i32** %out, align 8, !dbg !3947
  %48 = load i32*, i32** %saved, align 8, !dbg !3948
  %49 = load i32*, i32** %buf, align 8, !dbg !3949
  %50 = load i32*, i32** %lwindow_prev, align 8, !dbg !3950
  call void %46(i32* %47, i32* %48, i32* %49, i32* %50, i32 512), !dbg !3943
  br label %if.end102, !dbg !3951

if.else54:                                        ; preds = %lor.lhs.false48, %lor.lhs.false
  %51 = load i32*, i32** %out, align 8, !dbg !3952
  %52 = bitcast i32* %51 to i8*, !dbg !3954
  %53 = load i32*, i32** %saved, align 8, !dbg !3955
  %54 = bitcast i32* %53 to i8*, !dbg !3954
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %54, i64 1792, i32 4, i1 false), !dbg !3954
  %55 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3956
  %window_sequence55 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %55, i32 0, i32 1, !dbg !3958
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence55, i64 0, i64 0, !dbg !3956
  %56 = load i32, i32* %arrayidx56, align 4, !dbg !3956
  %cmp57 = icmp eq i32 %56, 2, !dbg !3959
  br i1 %cmp57, label %if.then59, label %if.else94, !dbg !3960

if.then59:                                        ; preds = %if.else54
  %57 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3961
  %fdsp60 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %57, i32 0, i32 14, !dbg !3963
  %58 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp60, align 32, !dbg !3963
  %vector_fmul_window61 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %58, i32 0, i32 1, !dbg !3964
  %59 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_window61, align 8, !dbg !3964
  %60 = load i32*, i32** %out, align 8, !dbg !3965
  %add.ptr62 = getelementptr inbounds i32, i32* %60, i64 448, !dbg !3966
  %add.ptr63 = getelementptr inbounds i32, i32* %add.ptr62, i64 0, !dbg !3967
  %61 = load i32*, i32** %saved, align 8, !dbg !3968
  %add.ptr64 = getelementptr inbounds i32, i32* %61, i64 448, !dbg !3969
  %62 = load i32*, i32** %buf, align 8, !dbg !3970
  %add.ptr65 = getelementptr inbounds i32, i32* %62, i64 0, !dbg !3971
  %63 = load i32*, i32** %swindow_prev, align 8, !dbg !3972
  call void %59(i32* %add.ptr63, i32* %add.ptr64, i32* %add.ptr65, i32* %63, i32 64), !dbg !3961
  %64 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3973
  %fdsp66 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %64, i32 0, i32 14, !dbg !3974
  %65 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp66, align 32, !dbg !3974
  %vector_fmul_window67 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %65, i32 0, i32 1, !dbg !3975
  %66 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_window67, align 8, !dbg !3975
  %67 = load i32*, i32** %out, align 8, !dbg !3976
  %add.ptr68 = getelementptr inbounds i32, i32* %67, i64 448, !dbg !3977
  %add.ptr69 = getelementptr inbounds i32, i32* %add.ptr68, i64 128, !dbg !3978
  %68 = load i32*, i32** %buf, align 8, !dbg !3979
  %add.ptr70 = getelementptr inbounds i32, i32* %68, i64 0, !dbg !3980
  %add.ptr71 = getelementptr inbounds i32, i32* %add.ptr70, i64 64, !dbg !3981
  %69 = load i32*, i32** %buf, align 8, !dbg !3982
  %add.ptr72 = getelementptr inbounds i32, i32* %69, i64 128, !dbg !3983
  %70 = load i32*, i32** %swindow, align 8, !dbg !3984
  call void %66(i32* %add.ptr69, i32* %add.ptr71, i32* %add.ptr72, i32* %70, i32 64), !dbg !3973
  %71 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3985
  %fdsp73 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %71, i32 0, i32 14, !dbg !3986
  %72 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp73, align 32, !dbg !3986
  %vector_fmul_window74 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %72, i32 0, i32 1, !dbg !3987
  %73 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_window74, align 8, !dbg !3987
  %74 = load i32*, i32** %out, align 8, !dbg !3988
  %add.ptr75 = getelementptr inbounds i32, i32* %74, i64 448, !dbg !3989
  %add.ptr76 = getelementptr inbounds i32, i32* %add.ptr75, i64 256, !dbg !3990
  %75 = load i32*, i32** %buf, align 8, !dbg !3991
  %add.ptr77 = getelementptr inbounds i32, i32* %75, i64 128, !dbg !3992
  %add.ptr78 = getelementptr inbounds i32, i32* %add.ptr77, i64 64, !dbg !3993
  %76 = load i32*, i32** %buf, align 8, !dbg !3994
  %add.ptr79 = getelementptr inbounds i32, i32* %76, i64 256, !dbg !3995
  %77 = load i32*, i32** %swindow, align 8, !dbg !3996
  call void %73(i32* %add.ptr76, i32* %add.ptr78, i32* %add.ptr79, i32* %77, i32 64), !dbg !3985
  %78 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3997
  %fdsp80 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %78, i32 0, i32 14, !dbg !3998
  %79 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp80, align 32, !dbg !3998
  %vector_fmul_window81 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %79, i32 0, i32 1, !dbg !3999
  %80 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_window81, align 8, !dbg !3999
  %81 = load i32*, i32** %out, align 8, !dbg !4000
  %add.ptr82 = getelementptr inbounds i32, i32* %81, i64 448, !dbg !4001
  %add.ptr83 = getelementptr inbounds i32, i32* %add.ptr82, i64 384, !dbg !4002
  %82 = load i32*, i32** %buf, align 8, !dbg !4003
  %add.ptr84 = getelementptr inbounds i32, i32* %82, i64 256, !dbg !4004
  %add.ptr85 = getelementptr inbounds i32, i32* %add.ptr84, i64 64, !dbg !4005
  %83 = load i32*, i32** %buf, align 8, !dbg !4006
  %add.ptr86 = getelementptr inbounds i32, i32* %83, i64 384, !dbg !4007
  %84 = load i32*, i32** %swindow, align 8, !dbg !4008
  call void %80(i32* %add.ptr83, i32* %add.ptr85, i32* %add.ptr86, i32* %84, i32 64), !dbg !3997
  %85 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4009
  %fdsp87 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %85, i32 0, i32 14, !dbg !4010
  %86 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp87, align 32, !dbg !4010
  %vector_fmul_window88 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %86, i32 0, i32 1, !dbg !4011
  %87 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_window88, align 8, !dbg !4011
  %88 = load i32*, i32** %temp, align 8, !dbg !4012
  %89 = load i32*, i32** %buf, align 8, !dbg !4013
  %add.ptr89 = getelementptr inbounds i32, i32* %89, i64 384, !dbg !4014
  %add.ptr90 = getelementptr inbounds i32, i32* %add.ptr89, i64 64, !dbg !4015
  %90 = load i32*, i32** %buf, align 8, !dbg !4016
  %add.ptr91 = getelementptr inbounds i32, i32* %90, i64 512, !dbg !4017
  %91 = load i32*, i32** %swindow, align 8, !dbg !4018
  call void %87(i32* %88, i32* %add.ptr90, i32* %add.ptr91, i32* %91, i32 64), !dbg !4009
  %92 = load i32*, i32** %out, align 8, !dbg !4019
  %add.ptr92 = getelementptr inbounds i32, i32* %92, i64 448, !dbg !4020
  %add.ptr93 = getelementptr inbounds i32, i32* %add.ptr92, i64 512, !dbg !4021
  %93 = bitcast i32* %add.ptr93 to i8*, !dbg !4022
  %94 = load i32*, i32** %temp, align 8, !dbg !4023
  %95 = bitcast i32* %94 to i8*, !dbg !4022
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %95, i64 256, i32 4, i1 false), !dbg !4022
  br label %if.end101, !dbg !4024

if.else94:                                        ; preds = %if.else54
  %96 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4025
  %fdsp95 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %96, i32 0, i32 14, !dbg !4027
  %97 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp95, align 32, !dbg !4027
  %vector_fmul_window96 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %97, i32 0, i32 1, !dbg !4028
  %98 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_window96, align 8, !dbg !4028
  %99 = load i32*, i32** %out, align 8, !dbg !4029
  %add.ptr97 = getelementptr inbounds i32, i32* %99, i64 448, !dbg !4030
  %100 = load i32*, i32** %saved, align 8, !dbg !4031
  %add.ptr98 = getelementptr inbounds i32, i32* %100, i64 448, !dbg !4032
  %101 = load i32*, i32** %buf, align 8, !dbg !4033
  %102 = load i32*, i32** %swindow_prev, align 8, !dbg !4034
  call void %98(i32* %add.ptr97, i32* %add.ptr98, i32* %101, i32* %102, i32 64), !dbg !4025
  %103 = load i32*, i32** %out, align 8, !dbg !4035
  %add.ptr99 = getelementptr inbounds i32, i32* %103, i64 576, !dbg !4036
  %104 = bitcast i32* %add.ptr99 to i8*, !dbg !4037
  %105 = load i32*, i32** %buf, align 8, !dbg !4038
  %add.ptr100 = getelementptr inbounds i32, i32* %105, i64 64, !dbg !4039
  %106 = bitcast i32* %add.ptr100 to i8*, !dbg !4037
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %106, i64 1792, i32 4, i1 false), !dbg !4037
  br label %if.end101

if.end101:                                        ; preds = %if.else94, %if.then59
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then53
  %107 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4040
  %window_sequence103 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %107, i32 0, i32 1, !dbg !4042
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence103, i64 0, i64 0, !dbg !4040
  %108 = load i32, i32* %arrayidx104, align 4, !dbg !4040
  %cmp105 = icmp eq i32 %108, 2, !dbg !4043
  br i1 %cmp105, label %if.then107, label %if.else130, !dbg !4044

if.then107:                                       ; preds = %if.end102
  %109 = load i32*, i32** %saved, align 8, !dbg !4045
  %110 = bitcast i32* %109 to i8*, !dbg !4047
  %111 = load i32*, i32** %temp, align 8, !dbg !4048
  %add.ptr108 = getelementptr inbounds i32, i32* %111, i64 64, !dbg !4049
  %112 = bitcast i32* %add.ptr108 to i8*, !dbg !4047
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %112, i64 256, i32 4, i1 false), !dbg !4047
  %113 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4050
  %fdsp109 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %113, i32 0, i32 14, !dbg !4051
  %114 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp109, align 32, !dbg !4051
  %vector_fmul_window110 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %114, i32 0, i32 1, !dbg !4052
  %115 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_window110, align 8, !dbg !4052
  %116 = load i32*, i32** %saved, align 8, !dbg !4053
  %add.ptr111 = getelementptr inbounds i32, i32* %116, i64 64, !dbg !4054
  %117 = load i32*, i32** %buf, align 8, !dbg !4055
  %add.ptr112 = getelementptr inbounds i32, i32* %117, i64 512, !dbg !4056
  %add.ptr113 = getelementptr inbounds i32, i32* %add.ptr112, i64 64, !dbg !4057
  %118 = load i32*, i32** %buf, align 8, !dbg !4058
  %add.ptr114 = getelementptr inbounds i32, i32* %118, i64 640, !dbg !4059
  %119 = load i32*, i32** %swindow, align 8, !dbg !4060
  call void %115(i32* %add.ptr111, i32* %add.ptr113, i32* %add.ptr114, i32* %119, i32 64), !dbg !4050
  %120 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4061
  %fdsp115 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %120, i32 0, i32 14, !dbg !4062
  %121 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp115, align 32, !dbg !4062
  %vector_fmul_window116 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %121, i32 0, i32 1, !dbg !4063
  %122 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_window116, align 8, !dbg !4063
  %123 = load i32*, i32** %saved, align 8, !dbg !4064
  %add.ptr117 = getelementptr inbounds i32, i32* %123, i64 192, !dbg !4065
  %124 = load i32*, i32** %buf, align 8, !dbg !4066
  %add.ptr118 = getelementptr inbounds i32, i32* %124, i64 640, !dbg !4067
  %add.ptr119 = getelementptr inbounds i32, i32* %add.ptr118, i64 64, !dbg !4068
  %125 = load i32*, i32** %buf, align 8, !dbg !4069
  %add.ptr120 = getelementptr inbounds i32, i32* %125, i64 768, !dbg !4070
  %126 = load i32*, i32** %swindow, align 8, !dbg !4071
  call void %122(i32* %add.ptr117, i32* %add.ptr119, i32* %add.ptr120, i32* %126, i32 64), !dbg !4061
  %127 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4072
  %fdsp121 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %127, i32 0, i32 14, !dbg !4073
  %128 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp121, align 32, !dbg !4073
  %vector_fmul_window122 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %128, i32 0, i32 1, !dbg !4074
  %129 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_window122, align 8, !dbg !4074
  %130 = load i32*, i32** %saved, align 8, !dbg !4075
  %add.ptr123 = getelementptr inbounds i32, i32* %130, i64 320, !dbg !4076
  %131 = load i32*, i32** %buf, align 8, !dbg !4077
  %add.ptr124 = getelementptr inbounds i32, i32* %131, i64 768, !dbg !4078
  %add.ptr125 = getelementptr inbounds i32, i32* %add.ptr124, i64 64, !dbg !4079
  %132 = load i32*, i32** %buf, align 8, !dbg !4080
  %add.ptr126 = getelementptr inbounds i32, i32* %132, i64 896, !dbg !4081
  %133 = load i32*, i32** %swindow, align 8, !dbg !4082
  call void %129(i32* %add.ptr123, i32* %add.ptr125, i32* %add.ptr126, i32* %133, i32 64), !dbg !4072
  %134 = load i32*, i32** %saved, align 8, !dbg !4083
  %add.ptr127 = getelementptr inbounds i32, i32* %134, i64 448, !dbg !4084
  %135 = bitcast i32* %add.ptr127 to i8*, !dbg !4085
  %136 = load i32*, i32** %buf, align 8, !dbg !4086
  %add.ptr128 = getelementptr inbounds i32, i32* %136, i64 896, !dbg !4087
  %add.ptr129 = getelementptr inbounds i32, i32* %add.ptr128, i64 64, !dbg !4088
  %137 = bitcast i32* %add.ptr129 to i8*, !dbg !4085
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %137, i64 256, i32 4, i1 false), !dbg !4085
  br label %if.end143, !dbg !4089

if.else130:                                       ; preds = %if.end102
  %138 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4090
  %window_sequence131 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %138, i32 0, i32 1, !dbg !4093
  %arrayidx132 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence131, i64 0, i64 0, !dbg !4090
  %139 = load i32, i32* %arrayidx132, align 4, !dbg !4090
  %cmp133 = icmp eq i32 %139, 1, !dbg !4094
  br i1 %cmp133, label %if.then135, label %if.else140, !dbg !4090

if.then135:                                       ; preds = %if.else130
  %140 = load i32*, i32** %saved, align 8, !dbg !4095
  %141 = bitcast i32* %140 to i8*, !dbg !4097
  %142 = load i32*, i32** %buf, align 8, !dbg !4098
  %add.ptr136 = getelementptr inbounds i32, i32* %142, i64 512, !dbg !4099
  %143 = bitcast i32* %add.ptr136 to i8*, !dbg !4097
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %143, i64 1792, i32 4, i1 false), !dbg !4097
  %144 = load i32*, i32** %saved, align 8, !dbg !4100
  %add.ptr137 = getelementptr inbounds i32, i32* %144, i64 448, !dbg !4101
  %145 = bitcast i32* %add.ptr137 to i8*, !dbg !4102
  %146 = load i32*, i32** %buf, align 8, !dbg !4103
  %add.ptr138 = getelementptr inbounds i32, i32* %146, i64 896, !dbg !4104
  %add.ptr139 = getelementptr inbounds i32, i32* %add.ptr138, i64 64, !dbg !4105
  %147 = bitcast i32* %add.ptr139 to i8*, !dbg !4102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %145, i8* %147, i64 256, i32 4, i1 false), !dbg !4102
  br label %if.end142, !dbg !4106

if.else140:                                       ; preds = %if.else130
  %148 = load i32*, i32** %saved, align 8, !dbg !4107
  %149 = bitcast i32* %148 to i8*, !dbg !4109
  %150 = load i32*, i32** %buf, align 8, !dbg !4110
  %add.ptr141 = getelementptr inbounds i32, i32* %150, i64 512, !dbg !4111
  %151 = bitcast i32* %add.ptr141 to i8*, !dbg !4109
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %149, i8* %151, i64 2048, i32 4, i1 false), !dbg !4109
  br label %if.end142

if.end142:                                        ; preds = %if.else140, %if.then135
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.then107
  ret void, !dbg !4112
}

; Function Attrs: nounwind uwtable
define internal void @apply_ltp(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !4113 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %ltp = alloca %struct.LongTermPrediction*, align 8
  %offsets = alloca i16*, align 8
  %i = alloca i32, align 4
  %sfb = alloca i32, align 4
  %predTime = alloca i32*, align 8
  %predFreq = alloca i32*, align 8
  %num_samples = alloca i16, align 2
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !4114, metadata !2068), !dbg !4115
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !4116, metadata !2068), !dbg !4117
  call void @llvm.dbg.declare(metadata %struct.LongTermPrediction** %ltp, metadata !4118, metadata !2068), !dbg !4121
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4122
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !4123
  %ltp1 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 5, !dbg !4124
  store %struct.LongTermPrediction* %ltp1, %struct.LongTermPrediction** %ltp, align 8, !dbg !4121
  call void @llvm.dbg.declare(metadata i16** %offsets, metadata !4125, metadata !2068), !dbg !4126
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4127
  %ics2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 0, !dbg !4128
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2, i32 0, i32 6, !dbg !4129
  %2 = load i16*, i16** %swb_offset, align 16, !dbg !4129
  store i16* %2, i16** %offsets, align 8, !dbg !4126
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4130, metadata !2068), !dbg !4131
  call void @llvm.dbg.declare(metadata i32* %sfb, metadata !4132, metadata !2068), !dbg !4133
  %3 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4134
  %ics3 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %3, i32 0, i32 0, !dbg !4136
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3, i32 0, i32 1, !dbg !4137
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !4134
  %4 = load i32, i32* %arrayidx, align 4, !dbg !4134
  %cmp = icmp ne i32 %4, 2, !dbg !4138
  br i1 %cmp, label %if.then, label %if.end71, !dbg !4139

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %predTime, metadata !4140, metadata !2068), !dbg !4142
  %5 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4143
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %5, i32 0, i32 21, !dbg !4144
  %6 = load i32*, i32** %ret, align 32, !dbg !4144
  store i32* %6, i32** %predTime, align 8, !dbg !4142
  call void @llvm.dbg.declare(metadata i32** %predFreq, metadata !4145, metadata !2068), !dbg !4146
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4147
  %buf_mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 9, !dbg !4148
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %buf_mdct, i32 0, i32 0, !dbg !4147
  store i32* %arraydecay, i32** %predFreq, align 8, !dbg !4146
  call void @llvm.dbg.declare(metadata i16* %num_samples, metadata !4149, metadata !2068), !dbg !4150
  store i16 2048, i16* %num_samples, align 2, !dbg !4150
  %8 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp, align 8, !dbg !4151
  %lag = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %8, i32 0, i32 1, !dbg !4153
  %9 = load i16, i16* %lag, align 2, !dbg !4153
  %conv = sext i16 %9 to i32, !dbg !4151
  %cmp4 = icmp slt i32 %conv, 1024, !dbg !4154
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !4155

if.then6:                                         ; preds = %if.then
  %10 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp, align 8, !dbg !4156
  %lag7 = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %10, i32 0, i32 1, !dbg !4157
  %11 = load i16, i16* %lag7, align 2, !dbg !4157
  %conv8 = sext i16 %11 to i32, !dbg !4156
  %add = add nsw i32 %conv8, 1024, !dbg !4158
  %conv9 = trunc i32 %add to i16, !dbg !4156
  store i16 %conv9, i16* %num_samples, align 2, !dbg !4159
  br label %if.end, !dbg !4160

if.end:                                           ; preds = %if.then6, %if.then
  store i32 0, i32* %i, align 4, !dbg !4161
  br label %for.cond, !dbg !4163

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !4164
  %13 = load i16, i16* %num_samples, align 2, !dbg !4167
  %conv10 = sext i16 %13 to i32, !dbg !4167
  %cmp11 = icmp slt i32 %12, %conv10, !dbg !4168
  br i1 %cmp11, label %for.body, label %for.end, !dbg !4169

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %i, align 4, !dbg !4170
  %add13 = add nsw i32 %14, 2048, !dbg !4171
  %15 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp, align 8, !dbg !4172
  %lag14 = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %15, i32 0, i32 1, !dbg !4173
  %16 = load i16, i16* %lag14, align 2, !dbg !4173
  %conv15 = sext i16 %16 to i32, !dbg !4172
  %sub = sub nsw i32 %add13, %conv15, !dbg !4174
  %idxprom = sext i32 %sub to i64, !dbg !4175
  %17 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4175
  %ltp_state = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %17, i32 0, i32 17, !dbg !4176
  %arrayidx16 = getelementptr inbounds [3072 x i32], [3072 x i32]* %ltp_state, i64 0, i64 %idxprom, !dbg !4175
  %18 = load i32, i32* %arrayidx16, align 4, !dbg !4175
  %conv17 = sext i32 %18 to i64, !dbg !4177
  %19 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp, align 8, !dbg !4178
  %coef = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %19, i32 0, i32 3, !dbg !4179
  %20 = load i32, i32* %coef, align 4, !dbg !4179
  %conv18 = sext i32 %20 to i64, !dbg !4180
  %mul = mul nsw i64 %conv17, %conv18, !dbg !4181
  %add19 = add nsw i64 %mul, 536870912, !dbg !4182
  %shr = ashr i64 %add19, 30, !dbg !4183
  %conv20 = trunc i64 %shr to i32, !dbg !4184
  %21 = load i32, i32* %i, align 4, !dbg !4185
  %idxprom21 = sext i32 %21 to i64, !dbg !4186
  %22 = load i32*, i32** %predTime, align 8, !dbg !4186
  %arrayidx22 = getelementptr inbounds i32, i32* %22, i64 %idxprom21, !dbg !4186
  store i32 %conv20, i32* %arrayidx22, align 4, !dbg !4187
  br label %for.inc, !dbg !4186

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !4188
  %inc = add nsw i32 %23, 1, !dbg !4188
  store i32 %inc, i32* %i, align 4, !dbg !4188
  br label %for.cond, !dbg !4190, !llvm.loop !4191

for.end:                                          ; preds = %for.cond
  %24 = load i32, i32* %i, align 4, !dbg !4193
  %idxprom23 = sext i32 %24 to i64, !dbg !4194
  %25 = load i32*, i32** %predTime, align 8, !dbg !4194
  %arrayidx24 = getelementptr inbounds i32, i32* %25, i64 %idxprom23, !dbg !4194
  %26 = bitcast i32* %arrayidx24 to i8*, !dbg !4195
  %27 = load i32, i32* %i, align 4, !dbg !4196
  %sub25 = sub nsw i32 2048, %27, !dbg !4197
  %conv26 = sext i32 %sub25 to i64, !dbg !4198
  %mul27 = mul i64 %conv26, 4, !dbg !4199
  call void @llvm.memset.p0i8.i64(i8* %26, i8 0, i64 %mul27, i32 4, i1 false), !dbg !4195
  %28 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4200
  %windowing_and_mdct_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %28, i32 0, i32 28, !dbg !4201
  %29 = load void (%struct.AACContext*, i32*, i32*, %struct.IndividualChannelStream*)*, void (%struct.AACContext*, i32*, i32*, %struct.IndividualChannelStream*)** %windowing_and_mdct_ltp, align 8, !dbg !4201
  %30 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4202
  %31 = load i32*, i32** %predFreq, align 8, !dbg !4203
  %32 = load i32*, i32** %predTime, align 8, !dbg !4204
  %33 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4205
  %ics28 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %33, i32 0, i32 0, !dbg !4206
  call void %29(%struct.AACContext* %30, i32* %31, i32* %32, %struct.IndividualChannelStream* %ics28), !dbg !4200
  %34 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4207
  %tns = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %34, i32 0, i32 1, !dbg !4209
  %present = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %tns, i32 0, i32 0, !dbg !4210
  %35 = load i32, i32* %present, align 16, !dbg !4210
  %tobool = icmp ne i32 %35, 0, !dbg !4207
  br i1 %tobool, label %if.then29, label %if.end32, !dbg !4211

if.then29:                                        ; preds = %for.end
  %36 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4212
  %apply_tns = getelementptr inbounds %struct.AACContext, %struct.AACContext* %36, i32 0, i32 27, !dbg !4213
  %37 = load void (i32*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)*, void (i32*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)** %apply_tns, align 16, !dbg !4213
  %38 = load i32*, i32** %predFreq, align 8, !dbg !4214
  %39 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4215
  %tns30 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %39, i32 0, i32 1, !dbg !4216
  %40 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4217
  %ics31 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %40, i32 0, i32 0, !dbg !4218
  call void %37(i32* %38, %struct.TemporalNoiseShaping* %tns30, %struct.IndividualChannelStream* %ics31, i32 0), !dbg !4212
  br label %if.end32, !dbg !4212

if.end32:                                         ; preds = %if.then29, %for.end
  store i32 0, i32* %sfb, align 4, !dbg !4219
  br label %for.cond33, !dbg !4221

for.cond33:                                       ; preds = %for.inc68, %if.end32
  %41 = load i32, i32* %sfb, align 4, !dbg !4222
  %42 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4225
  %ics34 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %42, i32 0, i32 0, !dbg !4226
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics34, i32 0, i32 0, !dbg !4227
  %43 = load i8, i8* %max_sfb, align 32, !dbg !4227
  %conv35 = zext i8 %43 to i32, !dbg !4228
  %cmp36 = icmp sgt i32 %conv35, 40, !dbg !4229
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !4228

cond.true:                                        ; preds = %for.cond33
  br label %cond.end, !dbg !4230

cond.false:                                       ; preds = %for.cond33
  %44 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4232
  %ics38 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %44, i32 0, i32 0, !dbg !4234
  %max_sfb39 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics38, i32 0, i32 0, !dbg !4235
  %45 = load i8, i8* %max_sfb39, align 32, !dbg !4235
  %conv40 = zext i8 %45 to i32, !dbg !4236
  br label %cond.end, !dbg !4237

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 40, %cond.true ], [ %conv40, %cond.false ], !dbg !4238
  %cmp41 = icmp slt i32 %41, %cond, !dbg !4240
  br i1 %cmp41, label %for.body43, label %for.end70, !dbg !4241

for.body43:                                       ; preds = %cond.end
  %46 = load i32, i32* %sfb, align 4, !dbg !4242
  %idxprom44 = sext i32 %46 to i64, !dbg !4244
  %47 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp, align 8, !dbg !4244
  %used = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %47, i32 0, i32 4, !dbg !4245
  %arrayidx45 = getelementptr inbounds [40 x i8], [40 x i8]* %used, i64 0, i64 %idxprom44, !dbg !4244
  %48 = load i8, i8* %arrayidx45, align 1, !dbg !4244
  %tobool46 = icmp ne i8 %48, 0, !dbg !4244
  br i1 %tobool46, label %if.then47, label %if.end67, !dbg !4246

if.then47:                                        ; preds = %for.body43
  %49 = load i32, i32* %sfb, align 4, !dbg !4247
  %idxprom48 = sext i32 %49 to i64, !dbg !4249
  %50 = load i16*, i16** %offsets, align 8, !dbg !4249
  %arrayidx49 = getelementptr inbounds i16, i16* %50, i64 %idxprom48, !dbg !4249
  %51 = load i16, i16* %arrayidx49, align 2, !dbg !4249
  %conv50 = zext i16 %51 to i32, !dbg !4249
  store i32 %conv50, i32* %i, align 4, !dbg !4250
  br label %for.cond51, !dbg !4251

for.cond51:                                       ; preds = %for.inc64, %if.then47
  %52 = load i32, i32* %i, align 4, !dbg !4252
  %53 = load i32, i32* %sfb, align 4, !dbg !4255
  %add52 = add nsw i32 %53, 1, !dbg !4256
  %idxprom53 = sext i32 %add52 to i64, !dbg !4257
  %54 = load i16*, i16** %offsets, align 8, !dbg !4257
  %arrayidx54 = getelementptr inbounds i16, i16* %54, i64 %idxprom53, !dbg !4257
  %55 = load i16, i16* %arrayidx54, align 2, !dbg !4257
  %conv55 = zext i16 %55 to i32, !dbg !4257
  %cmp56 = icmp slt i32 %52, %conv55, !dbg !4258
  br i1 %cmp56, label %for.body58, label %for.end66, !dbg !4259

for.body58:                                       ; preds = %for.cond51
  %56 = load i32, i32* %i, align 4, !dbg !4260
  %idxprom59 = sext i32 %56 to i64, !dbg !4261
  %57 = load i32*, i32** %predFreq, align 8, !dbg !4261
  %arrayidx60 = getelementptr inbounds i32, i32* %57, i64 %idxprom59, !dbg !4261
  %58 = load i32, i32* %arrayidx60, align 4, !dbg !4261
  %59 = load i32, i32* %i, align 4, !dbg !4262
  %idxprom61 = sext i32 %59 to i64, !dbg !4263
  %60 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4263
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %60, i32 0, i32 14, !dbg !4264
  %arrayidx62 = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs, i64 0, i64 %idxprom61, !dbg !4263
  %61 = load i32, i32* %arrayidx62, align 4, !dbg !4265
  %add63 = add i32 %61, %58, !dbg !4265
  store i32 %add63, i32* %arrayidx62, align 4, !dbg !4265
  br label %for.inc64, !dbg !4263

for.inc64:                                        ; preds = %for.body58
  %62 = load i32, i32* %i, align 4, !dbg !4266
  %inc65 = add nsw i32 %62, 1, !dbg !4266
  store i32 %inc65, i32* %i, align 4, !dbg !4266
  br label %for.cond51, !dbg !4268, !llvm.loop !4269

for.end66:                                        ; preds = %for.cond51
  br label %if.end67, !dbg !4271

if.end67:                                         ; preds = %for.end66, %for.body43
  br label %for.inc68, !dbg !4273

for.inc68:                                        ; preds = %if.end67
  %63 = load i32, i32* %sfb, align 4, !dbg !4275
  %inc69 = add nsw i32 %63, 1, !dbg !4275
  store i32 %inc69, i32* %sfb, align 4, !dbg !4275
  br label %for.cond33, !dbg !4277, !llvm.loop !4278

for.end70:                                        ; preds = %cond.end
  br label %if.end71, !dbg !4280

if.end71:                                         ; preds = %for.end70, %entry
  ret void, !dbg !4281
}

; Function Attrs: nounwind uwtable
define internal void @apply_tns(i32* %coef_param, %struct.TemporalNoiseShaping* %tns, %struct.IndividualChannelStream* %ics, i32 %decode) #1 !dbg !4282 {
entry:
  %coef_param.addr = alloca i32*, align 8
  %tns.addr = alloca %struct.TemporalNoiseShaping*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %decode.addr = alloca i32, align 4
  %mmm = alloca i32, align 4
  %w = alloca i32, align 4
  %filt = alloca i32, align 4
  %m = alloca i32, align 4
  %i = alloca i32, align 4
  %bottom = alloca i32, align 4
  %top = alloca i32, align 4
  %order = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %size = alloca i32, align 4
  %inc = alloca i32, align 4
  %lpc = alloca [20 x i32], align 16
  %tmp = alloca [21 x i32], align 16
  %coef = alloca i32*, align 8
  store i32* %coef_param, i32** %coef_param.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %coef_param.addr, metadata !4283, metadata !2068), !dbg !4284
  store %struct.TemporalNoiseShaping* %tns, %struct.TemporalNoiseShaping** %tns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TemporalNoiseShaping** %tns.addr, metadata !4285, metadata !2068), !dbg !4286
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !4287, metadata !2068), !dbg !4288
  store i32 %decode, i32* %decode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %decode.addr, metadata !4289, metadata !2068), !dbg !4290
  call void @llvm.dbg.declare(metadata i32* %mmm, metadata !4291, metadata !2068), !dbg !4292
  %0 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4293
  %tns_max_bands = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %0, i32 0, i32 10, !dbg !4294
  %1 = load i32, i32* %tns_max_bands, align 8, !dbg !4294
  %2 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4295
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %2, i32 0, i32 0, !dbg !4296
  %3 = load i8, i8* %max_sfb, align 8, !dbg !4296
  %conv = zext i8 %3 to i32, !dbg !4297
  %cmp = icmp sgt i32 %1, %conv, !dbg !4298
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4299

cond.true:                                        ; preds = %entry
  %4 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4300
  %max_sfb2 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %4, i32 0, i32 0, !dbg !4302
  %5 = load i8, i8* %max_sfb2, align 8, !dbg !4302
  %conv3 = zext i8 %5 to i32, !dbg !4303
  br label %cond.end, !dbg !4304

cond.false:                                       ; preds = %entry
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4305
  %tns_max_bands4 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 10, !dbg !4307
  %7 = load i32, i32* %tns_max_bands4, align 8, !dbg !4307
  br label %cond.end, !dbg !4308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv3, %cond.true ], [ %7, %cond.false ], !dbg !4309
  store i32 %cond, i32* %mmm, align 4, !dbg !4311
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4312, metadata !2068), !dbg !4313
  call void @llvm.dbg.declare(metadata i32* %filt, metadata !4314, metadata !2068), !dbg !4315
  call void @llvm.dbg.declare(metadata i32* %m, metadata !4316, metadata !2068), !dbg !4317
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4318, metadata !2068), !dbg !4319
  call void @llvm.dbg.declare(metadata i32* %bottom, metadata !4320, metadata !2068), !dbg !4321
  call void @llvm.dbg.declare(metadata i32* %top, metadata !4322, metadata !2068), !dbg !4323
  call void @llvm.dbg.declare(metadata i32* %order, metadata !4324, metadata !2068), !dbg !4325
  call void @llvm.dbg.declare(metadata i32* %start, metadata !4326, metadata !2068), !dbg !4327
  call void @llvm.dbg.declare(metadata i32* %end, metadata !4328, metadata !2068), !dbg !4329
  call void @llvm.dbg.declare(metadata i32* %size, metadata !4330, metadata !2068), !dbg !4331
  call void @llvm.dbg.declare(metadata i32* %inc, metadata !4332, metadata !2068), !dbg !4333
  call void @llvm.dbg.declare(metadata [20 x i32]* %lpc, metadata !4334, metadata !2068), !dbg !4337
  call void @llvm.dbg.declare(metadata [21 x i32]* %tmp, metadata !4338, metadata !2068), !dbg !4342
  call void @llvm.dbg.declare(metadata i32** %coef, metadata !4343, metadata !2068), !dbg !4345
  %8 = load i32*, i32** %coef_param.addr, align 8, !dbg !4346
  store i32* %8, i32** %coef, align 8, !dbg !4345
  store i32 0, i32* %w, align 4, !dbg !4347
  br label %for.cond, !dbg !4349

for.cond:                                         ; preds = %for.inc162, %cond.end
  %9 = load i32, i32* %w, align 4, !dbg !4350
  %10 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4353
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %10, i32 0, i32 9, !dbg !4354
  %11 = load i32, i32* %num_windows, align 4, !dbg !4354
  %cmp6 = icmp slt i32 %9, %11, !dbg !4355
  br i1 %cmp6, label %for.body, label %for.end164, !dbg !4356

for.body:                                         ; preds = %for.cond
  %12 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4357
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %12, i32 0, i32 8, !dbg !4359
  %13 = load i32, i32* %num_swb, align 8, !dbg !4359
  store i32 %13, i32* %bottom, align 4, !dbg !4360
  store i32 0, i32* %filt, align 4, !dbg !4361
  br label %for.cond8, !dbg !4363

for.cond8:                                        ; preds = %for.inc159, %for.body
  %14 = load i32, i32* %filt, align 4, !dbg !4364
  %15 = load i32, i32* %w, align 4, !dbg !4367
  %idxprom = sext i32 %15 to i64, !dbg !4368
  %16 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !4368
  %n_filt = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %16, i32 0, i32 1, !dbg !4369
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %n_filt, i64 0, i64 %idxprom, !dbg !4368
  %17 = load i32, i32* %arrayidx, align 4, !dbg !4368
  %cmp9 = icmp slt i32 %14, %17, !dbg !4370
  br i1 %cmp9, label %for.body11, label %for.end161, !dbg !4371

for.body11:                                       ; preds = %for.cond8
  %18 = load i32, i32* %bottom, align 4, !dbg !4372
  store i32 %18, i32* %top, align 4, !dbg !4374
  %19 = load i32, i32* %top, align 4, !dbg !4375
  %20 = load i32, i32* %filt, align 4, !dbg !4376
  %idxprom12 = sext i32 %20 to i64, !dbg !4377
  %21 = load i32, i32* %w, align 4, !dbg !4378
  %idxprom13 = sext i32 %21 to i64, !dbg !4377
  %22 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !4377
  %length = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %22, i32 0, i32 2, !dbg !4379
  %arrayidx14 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %length, i64 0, i64 %idxprom13, !dbg !4377
  %arrayidx15 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx14, i64 0, i64 %idxprom12, !dbg !4377
  %23 = load i32, i32* %arrayidx15, align 4, !dbg !4377
  %sub = sub nsw i32 %19, %23, !dbg !4380
  %cmp16 = icmp sgt i32 0, %sub, !dbg !4381
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !4382

cond.true18:                                      ; preds = %for.body11
  br label %cond.end26, !dbg !4383

cond.false19:                                     ; preds = %for.body11
  %24 = load i32, i32* %top, align 4, !dbg !4385
  %25 = load i32, i32* %filt, align 4, !dbg !4387
  %idxprom20 = sext i32 %25 to i64, !dbg !4388
  %26 = load i32, i32* %w, align 4, !dbg !4389
  %idxprom21 = sext i32 %26 to i64, !dbg !4388
  %27 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !4388
  %length22 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %27, i32 0, i32 2, !dbg !4390
  %arrayidx23 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %length22, i64 0, i64 %idxprom21, !dbg !4388
  %arrayidx24 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx23, i64 0, i64 %idxprom20, !dbg !4388
  %28 = load i32, i32* %arrayidx24, align 4, !dbg !4388
  %sub25 = sub nsw i32 %24, %28, !dbg !4391
  br label %cond.end26, !dbg !4392

cond.end26:                                       ; preds = %cond.false19, %cond.true18
  %cond27 = phi i32 [ 0, %cond.true18 ], [ %sub25, %cond.false19 ], !dbg !4393
  store i32 %cond27, i32* %bottom, align 4, !dbg !4395
  %29 = load i32, i32* %filt, align 4, !dbg !4396
  %idxprom28 = sext i32 %29 to i64, !dbg !4397
  %30 = load i32, i32* %w, align 4, !dbg !4398
  %idxprom29 = sext i32 %30 to i64, !dbg !4397
  %31 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !4397
  %order30 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %31, i32 0, i32 4, !dbg !4399
  %arrayidx31 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %order30, i64 0, i64 %idxprom29, !dbg !4397
  %arrayidx32 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx31, i64 0, i64 %idxprom28, !dbg !4397
  %32 = load i32, i32* %arrayidx32, align 4, !dbg !4397
  store i32 %32, i32* %order, align 4, !dbg !4400
  %33 = load i32, i32* %order, align 4, !dbg !4401
  %cmp33 = icmp eq i32 %33, 0, !dbg !4403
  br i1 %cmp33, label %if.then, label %if.end, !dbg !4404

if.then:                                          ; preds = %cond.end26
  br label %for.inc159, !dbg !4405

if.end:                                           ; preds = %cond.end26
  %34 = load i32, i32* %filt, align 4, !dbg !4406
  %idxprom35 = sext i32 %34 to i64, !dbg !4407
  %35 = load i32, i32* %w, align 4, !dbg !4408
  %idxprom36 = sext i32 %35 to i64, !dbg !4407
  %36 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !4407
  %coef37 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %36, i32 0, i32 6, !dbg !4409
  %arrayidx38 = getelementptr inbounds [8 x [4 x [20 x i32]]], [8 x [4 x [20 x i32]]]* %coef37, i64 0, i64 %idxprom36, !dbg !4407
  %arrayidx39 = getelementptr inbounds [4 x [20 x i32]], [4 x [20 x i32]]* %arrayidx38, i64 0, i64 %idxprom35, !dbg !4407
  %arraydecay = getelementptr inbounds [20 x i32], [20 x i32]* %arrayidx39, i32 0, i32 0, !dbg !4407
  %37 = load i32, i32* %order, align 4, !dbg !4410
  %arraydecay40 = getelementptr inbounds [20 x i32], [20 x i32]* %lpc, i32 0, i32 0, !dbg !4411
  %call = call i32 @compute_lpc_coefs_fixed(i32* %arraydecay, i32 %37, i32* %arraydecay40, i32 0, i32 0, i32 0), !dbg !4412
  %38 = load i32, i32* %bottom, align 4, !dbg !4413
  %39 = load i32, i32* %mmm, align 4, !dbg !4414
  %cmp41 = icmp sgt i32 %38, %39, !dbg !4415
  br i1 %cmp41, label %cond.true43, label %cond.false44, !dbg !4416

cond.true43:                                      ; preds = %if.end
  %40 = load i32, i32* %mmm, align 4, !dbg !4417
  br label %cond.end45, !dbg !4418

cond.false44:                                     ; preds = %if.end
  %41 = load i32, i32* %bottom, align 4, !dbg !4419
  br label %cond.end45, !dbg !4420

cond.end45:                                       ; preds = %cond.false44, %cond.true43
  %cond46 = phi i32 [ %40, %cond.true43 ], [ %41, %cond.false44 ], !dbg !4421
  %idxprom47 = sext i32 %cond46 to i64, !dbg !4422
  %42 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4422
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %42, i32 0, i32 6, !dbg !4423
  %43 = load i16*, i16** %swb_offset, align 8, !dbg !4423
  %arrayidx48 = getelementptr inbounds i16, i16* %43, i64 %idxprom47, !dbg !4422
  %44 = load i16, i16* %arrayidx48, align 2, !dbg !4422
  %conv49 = zext i16 %44 to i32, !dbg !4422
  store i32 %conv49, i32* %start, align 4, !dbg !4424
  %45 = load i32, i32* %top, align 4, !dbg !4425
  %46 = load i32, i32* %mmm, align 4, !dbg !4426
  %cmp50 = icmp sgt i32 %45, %46, !dbg !4427
  br i1 %cmp50, label %cond.true52, label %cond.false53, !dbg !4428

cond.true52:                                      ; preds = %cond.end45
  %47 = load i32, i32* %mmm, align 4, !dbg !4429
  br label %cond.end54, !dbg !4430

cond.false53:                                     ; preds = %cond.end45
  %48 = load i32, i32* %top, align 4, !dbg !4431
  br label %cond.end54, !dbg !4432

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i32 [ %47, %cond.true52 ], [ %48, %cond.false53 ], !dbg !4433
  %idxprom56 = sext i32 %cond55 to i64, !dbg !4434
  %49 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4434
  %swb_offset57 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %49, i32 0, i32 6, !dbg !4435
  %50 = load i16*, i16** %swb_offset57, align 8, !dbg !4435
  %arrayidx58 = getelementptr inbounds i16, i16* %50, i64 %idxprom56, !dbg !4434
  %51 = load i16, i16* %arrayidx58, align 2, !dbg !4434
  %conv59 = zext i16 %51 to i32, !dbg !4434
  store i32 %conv59, i32* %end, align 4, !dbg !4436
  %52 = load i32, i32* %end, align 4, !dbg !4437
  %53 = load i32, i32* %start, align 4, !dbg !4439
  %sub60 = sub nsw i32 %52, %53, !dbg !4440
  store i32 %sub60, i32* %size, align 4, !dbg !4441
  %cmp61 = icmp sle i32 %sub60, 0, !dbg !4442
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !4443

if.then63:                                        ; preds = %cond.end54
  br label %for.inc159, !dbg !4444

if.end64:                                         ; preds = %cond.end54
  %54 = load i32, i32* %filt, align 4, !dbg !4445
  %idxprom65 = sext i32 %54 to i64, !dbg !4447
  %55 = load i32, i32* %w, align 4, !dbg !4448
  %idxprom66 = sext i32 %55 to i64, !dbg !4447
  %56 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !4447
  %direction = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %56, i32 0, i32 3, !dbg !4449
  %arrayidx67 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %direction, i64 0, i64 %idxprom66, !dbg !4447
  %arrayidx68 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx67, i64 0, i64 %idxprom65, !dbg !4447
  %57 = load i32, i32* %arrayidx68, align 4, !dbg !4447
  %tobool = icmp ne i32 %57, 0, !dbg !4447
  br i1 %tobool, label %if.then69, label %if.else, !dbg !4450

if.then69:                                        ; preds = %if.end64
  store i32 -1, i32* %inc, align 4, !dbg !4451
  %58 = load i32, i32* %end, align 4, !dbg !4453
  %sub70 = sub nsw i32 %58, 1, !dbg !4454
  store i32 %sub70, i32* %start, align 4, !dbg !4455
  br label %if.end71, !dbg !4456

if.else:                                          ; preds = %if.end64
  store i32 1, i32* %inc, align 4, !dbg !4457
  br label %if.end71

if.end71:                                         ; preds = %if.else, %if.then69
  %59 = load i32, i32* %w, align 4, !dbg !4459
  %mul = mul nsw i32 %59, 128, !dbg !4460
  %60 = load i32, i32* %start, align 4, !dbg !4461
  %add = add nsw i32 %60, %mul, !dbg !4461
  store i32 %add, i32* %start, align 4, !dbg !4461
  %61 = load i32, i32* %decode.addr, align 4, !dbg !4462
  %tobool72 = icmp ne i32 %61, 0, !dbg !4462
  br i1 %tobool72, label %if.then73, label %if.else108, !dbg !4464

if.then73:                                        ; preds = %if.end71
  store i32 0, i32* %m, align 4, !dbg !4465
  br label %for.cond74, !dbg !4468

for.cond74:                                       ; preds = %for.inc104, %if.then73
  %62 = load i32, i32* %m, align 4, !dbg !4469
  %63 = load i32, i32* %size, align 4, !dbg !4472
  %cmp75 = icmp slt i32 %62, %63, !dbg !4473
  br i1 %cmp75, label %for.body77, label %for.end107, !dbg !4474

for.body77:                                       ; preds = %for.cond74
  store i32 1, i32* %i, align 4, !dbg !4475
  br label %for.cond78, !dbg !4477

for.cond78:                                       ; preds = %for.inc, %for.body77
  %64 = load i32, i32* %i, align 4, !dbg !4478
  %65 = load i32, i32* %m, align 4, !dbg !4481
  %66 = load i32, i32* %order, align 4, !dbg !4482
  %cmp79 = icmp sgt i32 %65, %66, !dbg !4483
  br i1 %cmp79, label %cond.true81, label %cond.false82, !dbg !4484

cond.true81:                                      ; preds = %for.cond78
  %67 = load i32, i32* %order, align 4, !dbg !4485
  br label %cond.end83, !dbg !4487

cond.false82:                                     ; preds = %for.cond78
  %68 = load i32, i32* %m, align 4, !dbg !4488
  br label %cond.end83, !dbg !4490

cond.end83:                                       ; preds = %cond.false82, %cond.true81
  %cond84 = phi i32 [ %67, %cond.true81 ], [ %68, %cond.false82 ], !dbg !4491
  %cmp85 = icmp sle i32 %64, %cond84, !dbg !4493
  br i1 %cmp85, label %for.body87, label %for.end, !dbg !4494

for.body87:                                       ; preds = %cond.end83
  %69 = load i32, i32* %start, align 4, !dbg !4495
  %70 = load i32, i32* %i, align 4, !dbg !4496
  %71 = load i32, i32* %inc, align 4, !dbg !4497
  %mul88 = mul nsw i32 %70, %71, !dbg !4498
  %sub89 = sub nsw i32 %69, %mul88, !dbg !4499
  %idxprom90 = sext i32 %sub89 to i64, !dbg !4500
  %72 = load i32*, i32** %coef, align 8, !dbg !4500
  %arrayidx91 = getelementptr inbounds i32, i32* %72, i64 %idxprom90, !dbg !4500
  %73 = load i32, i32* %arrayidx91, align 4, !dbg !4500
  %conv92 = sext i32 %73 to i64, !dbg !4501
  %74 = load i32, i32* %i, align 4, !dbg !4502
  %sub93 = sub nsw i32 %74, 1, !dbg !4503
  %idxprom94 = sext i32 %sub93 to i64, !dbg !4504
  %arrayidx95 = getelementptr inbounds [20 x i32], [20 x i32]* %lpc, i64 0, i64 %idxprom94, !dbg !4504
  %75 = load i32, i32* %arrayidx95, align 4, !dbg !4504
  %conv96 = sext i32 %75 to i64, !dbg !4505
  %mul97 = mul nsw i64 %conv92, %conv96, !dbg !4506
  %add98 = add nsw i64 %mul97, 33554432, !dbg !4507
  %shr = ashr i64 %add98, 26, !dbg !4508
  %conv99 = trunc i64 %shr to i32, !dbg !4509
  %76 = load i32, i32* %start, align 4, !dbg !4510
  %idxprom100 = sext i32 %76 to i64, !dbg !4511
  %77 = load i32*, i32** %coef, align 8, !dbg !4511
  %arrayidx101 = getelementptr inbounds i32, i32* %77, i64 %idxprom100, !dbg !4511
  %78 = load i32, i32* %arrayidx101, align 4, !dbg !4512
  %sub102 = sub i32 %78, %conv99, !dbg !4512
  store i32 %sub102, i32* %arrayidx101, align 4, !dbg !4512
  br label %for.inc, !dbg !4511

for.inc:                                          ; preds = %for.body87
  %79 = load i32, i32* %i, align 4, !dbg !4513
  %inc103 = add nsw i32 %79, 1, !dbg !4513
  store i32 %inc103, i32* %i, align 4, !dbg !4513
  br label %for.cond78, !dbg !4515, !llvm.loop !4516

for.end:                                          ; preds = %cond.end83
  br label %for.inc104, !dbg !4518

for.inc104:                                       ; preds = %for.end
  %80 = load i32, i32* %m, align 4, !dbg !4520
  %inc105 = add nsw i32 %80, 1, !dbg !4520
  store i32 %inc105, i32* %m, align 4, !dbg !4520
  %81 = load i32, i32* %inc, align 4, !dbg !4522
  %82 = load i32, i32* %start, align 4, !dbg !4523
  %add106 = add nsw i32 %82, %81, !dbg !4523
  store i32 %add106, i32* %start, align 4, !dbg !4523
  br label %for.cond74, !dbg !4524, !llvm.loop !4525

for.end107:                                       ; preds = %for.cond74
  br label %if.end158, !dbg !4527

if.else108:                                       ; preds = %if.end71
  store i32 0, i32* %m, align 4, !dbg !4528
  br label %for.cond109, !dbg !4531

for.cond109:                                      ; preds = %for.inc154, %if.else108
  %83 = load i32, i32* %m, align 4, !dbg !4532
  %84 = load i32, i32* %size, align 4, !dbg !4535
  %cmp110 = icmp slt i32 %83, %84, !dbg !4536
  br i1 %cmp110, label %for.body112, label %for.end157, !dbg !4537

for.body112:                                      ; preds = %for.cond109
  %85 = load i32, i32* %start, align 4, !dbg !4538
  %idxprom113 = sext i32 %85 to i64, !dbg !4540
  %86 = load i32*, i32** %coef, align 8, !dbg !4540
  %arrayidx114 = getelementptr inbounds i32, i32* %86, i64 %idxprom113, !dbg !4540
  %87 = load i32, i32* %arrayidx114, align 4, !dbg !4540
  %arrayidx115 = getelementptr inbounds [21 x i32], [21 x i32]* %tmp, i64 0, i64 0, !dbg !4541
  store i32 %87, i32* %arrayidx115, align 16, !dbg !4542
  store i32 1, i32* %i, align 4, !dbg !4543
  br label %for.cond116, !dbg !4545

for.cond116:                                      ; preds = %for.inc140, %for.body112
  %88 = load i32, i32* %i, align 4, !dbg !4546
  %89 = load i32, i32* %m, align 4, !dbg !4549
  %90 = load i32, i32* %order, align 4, !dbg !4550
  %cmp117 = icmp sgt i32 %89, %90, !dbg !4551
  br i1 %cmp117, label %cond.true119, label %cond.false120, !dbg !4552

cond.true119:                                     ; preds = %for.cond116
  %91 = load i32, i32* %order, align 4, !dbg !4553
  br label %cond.end121, !dbg !4555

cond.false120:                                    ; preds = %for.cond116
  %92 = load i32, i32* %m, align 4, !dbg !4556
  br label %cond.end121, !dbg !4558

cond.end121:                                      ; preds = %cond.false120, %cond.true119
  %cond122 = phi i32 [ %91, %cond.true119 ], [ %92, %cond.false120 ], !dbg !4559
  %cmp123 = icmp sle i32 %88, %cond122, !dbg !4561
  br i1 %cmp123, label %for.body125, label %for.end142, !dbg !4562

for.body125:                                      ; preds = %cond.end121
  %93 = load i32, i32* %i, align 4, !dbg !4563
  %idxprom126 = sext i32 %93 to i64, !dbg !4564
  %arrayidx127 = getelementptr inbounds [21 x i32], [21 x i32]* %tmp, i64 0, i64 %idxprom126, !dbg !4564
  %94 = load i32, i32* %arrayidx127, align 4, !dbg !4564
  %conv128 = sext i32 %94 to i64, !dbg !4565
  %95 = load i32, i32* %i, align 4, !dbg !4566
  %sub129 = sub nsw i32 %95, 1, !dbg !4567
  %idxprom130 = sext i32 %sub129 to i64, !dbg !4568
  %arrayidx131 = getelementptr inbounds [20 x i32], [20 x i32]* %lpc, i64 0, i64 %idxprom130, !dbg !4568
  %96 = load i32, i32* %arrayidx131, align 4, !dbg !4568
  %conv132 = sext i32 %96 to i64, !dbg !4569
  %mul133 = mul nsw i64 %conv128, %conv132, !dbg !4570
  %add134 = add nsw i64 %mul133, 33554432, !dbg !4571
  %shr135 = ashr i64 %add134, 26, !dbg !4572
  %conv136 = trunc i64 %shr135 to i32, !dbg !4573
  %97 = load i32, i32* %start, align 4, !dbg !4574
  %idxprom137 = sext i32 %97 to i64, !dbg !4575
  %98 = load i32*, i32** %coef, align 8, !dbg !4575
  %arrayidx138 = getelementptr inbounds i32, i32* %98, i64 %idxprom137, !dbg !4575
  %99 = load i32, i32* %arrayidx138, align 4, !dbg !4576
  %add139 = add i32 %99, %conv136, !dbg !4576
  store i32 %add139, i32* %arrayidx138, align 4, !dbg !4576
  br label %for.inc140, !dbg !4575

for.inc140:                                       ; preds = %for.body125
  %100 = load i32, i32* %i, align 4, !dbg !4577
  %inc141 = add nsw i32 %100, 1, !dbg !4577
  store i32 %inc141, i32* %i, align 4, !dbg !4577
  br label %for.cond116, !dbg !4579, !llvm.loop !4580

for.end142:                                       ; preds = %cond.end121
  %101 = load i32, i32* %order, align 4, !dbg !4582
  store i32 %101, i32* %i, align 4, !dbg !4584
  br label %for.cond143, !dbg !4585

for.cond143:                                      ; preds = %for.inc152, %for.end142
  %102 = load i32, i32* %i, align 4, !dbg !4586
  %cmp144 = icmp sgt i32 %102, 0, !dbg !4589
  br i1 %cmp144, label %for.body146, label %for.end153, !dbg !4590

for.body146:                                      ; preds = %for.cond143
  %103 = load i32, i32* %i, align 4, !dbg !4591
  %sub147 = sub nsw i32 %103, 1, !dbg !4592
  %idxprom148 = sext i32 %sub147 to i64, !dbg !4593
  %arrayidx149 = getelementptr inbounds [21 x i32], [21 x i32]* %tmp, i64 0, i64 %idxprom148, !dbg !4593
  %104 = load i32, i32* %arrayidx149, align 4, !dbg !4593
  %105 = load i32, i32* %i, align 4, !dbg !4594
  %idxprom150 = sext i32 %105 to i64, !dbg !4595
  %arrayidx151 = getelementptr inbounds [21 x i32], [21 x i32]* %tmp, i64 0, i64 %idxprom150, !dbg !4595
  store i32 %104, i32* %arrayidx151, align 4, !dbg !4596
  br label %for.inc152, !dbg !4595

for.inc152:                                       ; preds = %for.body146
  %106 = load i32, i32* %i, align 4, !dbg !4597
  %dec = add nsw i32 %106, -1, !dbg !4597
  store i32 %dec, i32* %i, align 4, !dbg !4597
  br label %for.cond143, !dbg !4599, !llvm.loop !4600

for.end153:                                       ; preds = %for.cond143
  br label %for.inc154, !dbg !4602

for.inc154:                                       ; preds = %for.end153
  %107 = load i32, i32* %m, align 4, !dbg !4603
  %inc155 = add nsw i32 %107, 1, !dbg !4603
  store i32 %inc155, i32* %m, align 4, !dbg !4603
  %108 = load i32, i32* %inc, align 4, !dbg !4605
  %109 = load i32, i32* %start, align 4, !dbg !4606
  %add156 = add nsw i32 %109, %108, !dbg !4606
  store i32 %add156, i32* %start, align 4, !dbg !4606
  br label %for.cond109, !dbg !4607, !llvm.loop !4608

for.end157:                                       ; preds = %for.cond109
  br label %if.end158

if.end158:                                        ; preds = %for.end157, %for.end107
  br label %for.inc159, !dbg !4610

for.inc159:                                       ; preds = %if.end158, %if.then63, %if.then
  %110 = load i32, i32* %filt, align 4, !dbg !4611
  %inc160 = add nsw i32 %110, 1, !dbg !4611
  store i32 %inc160, i32* %filt, align 4, !dbg !4611
  br label %for.cond8, !dbg !4613, !llvm.loop !4614

for.end161:                                       ; preds = %for.cond8
  br label %for.inc162, !dbg !4616

for.inc162:                                       ; preds = %for.end161
  %111 = load i32, i32* %w, align 4, !dbg !4617
  %inc163 = add nsw i32 %111, 1, !dbg !4617
  store i32 %inc163, i32* %w, align 4, !dbg !4617
  br label %for.cond, !dbg !4619, !llvm.loop !4620

for.end164:                                       ; preds = %for.cond
  ret void, !dbg !4622
}

; Function Attrs: nounwind uwtable
define internal void @windowing_and_mdct_ltp(%struct.AACContext* %ac, i32* %out, i32* %in, %struct.IndividualChannelStream* %ics) #1 !dbg !4623 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %out.addr = alloca i32*, align 8
  %in.addr = alloca i32*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %lwindow = alloca i32*, align 8
  %swindow = alloca i32*, align 8
  %lwindow_prev = alloca i32*, align 8
  %swindow_prev = alloca i32*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !4624, metadata !2068), !dbg !4625
  store i32* %out, i32** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out.addr, metadata !4626, metadata !2068), !dbg !4627
  store i32* %in, i32** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %in.addr, metadata !4628, metadata !2068), !dbg !4629
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !4630, metadata !2068), !dbg !4631
  call void @llvm.dbg.declare(metadata i32** %lwindow, metadata !4632, metadata !2068), !dbg !4633
  %0 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4634
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %0, i32 0, i32 2, !dbg !4635
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !4634
  %1 = load i8, i8* %arrayidx, align 4, !dbg !4634
  %conv = zext i8 %1 to i32, !dbg !4634
  %tobool = icmp ne i32 %conv, 0, !dbg !4634
  %cond = select i1 %tobool, i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @ff_aac_kbd_long_1024_fixed, i32 0, i32 0), i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @ff_sine_1024_fixed, i32 0, i32 0), !dbg !4634
  store i32* %cond, i32** %lwindow, align 8, !dbg !4633
  call void @llvm.dbg.declare(metadata i32** %swindow, metadata !4636, metadata !2068), !dbg !4637
  %2 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4638
  %use_kb_window1 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %2, i32 0, i32 2, !dbg !4639
  %arrayidx2 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window1, i64 0, i64 0, !dbg !4638
  %3 = load i8, i8* %arrayidx2, align 4, !dbg !4638
  %conv3 = zext i8 %3 to i32, !dbg !4638
  %tobool4 = icmp ne i32 %conv3, 0, !dbg !4638
  %cond5 = select i1 %tobool4, i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_aac_kbd_short_128_fixed, i32 0, i32 0), i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_sine_128_fixed, i32 0, i32 0), !dbg !4638
  store i32* %cond5, i32** %swindow, align 8, !dbg !4637
  call void @llvm.dbg.declare(metadata i32** %lwindow_prev, metadata !4640, metadata !2068), !dbg !4641
  %4 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4642
  %use_kb_window6 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %4, i32 0, i32 2, !dbg !4643
  %arrayidx7 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window6, i64 0, i64 1, !dbg !4642
  %5 = load i8, i8* %arrayidx7, align 1, !dbg !4642
  %conv8 = zext i8 %5 to i32, !dbg !4642
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !4642
  %cond10 = select i1 %tobool9, i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @ff_aac_kbd_long_1024_fixed, i32 0, i32 0), i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @ff_sine_1024_fixed, i32 0, i32 0), !dbg !4642
  store i32* %cond10, i32** %lwindow_prev, align 8, !dbg !4641
  call void @llvm.dbg.declare(metadata i32** %swindow_prev, metadata !4644, metadata !2068), !dbg !4645
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4646
  %use_kb_window11 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 2, !dbg !4647
  %arrayidx12 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window11, i64 0, i64 1, !dbg !4646
  %7 = load i8, i8* %arrayidx12, align 1, !dbg !4646
  %conv13 = zext i8 %7 to i32, !dbg !4646
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !4646
  %cond15 = select i1 %tobool14, i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_aac_kbd_short_128_fixed, i32 0, i32 0), i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_sine_128_fixed, i32 0, i32 0), !dbg !4646
  store i32* %cond15, i32** %swindow_prev, align 8, !dbg !4645
  %8 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4648
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %8, i32 0, i32 1, !dbg !4650
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !4648
  %9 = load i32, i32* %arrayidx16, align 4, !dbg !4648
  %cmp = icmp ne i32 %9, 3, !dbg !4651
  br i1 %cmp, label %if.then, label %if.else, !dbg !4652

if.then:                                          ; preds = %entry
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4653
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 14, !dbg !4655
  %11 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp, align 32, !dbg !4655
  %vector_fmul = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %11, i32 0, i32 2, !dbg !4656
  %12 = load void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)** %vector_fmul, align 8, !dbg !4656
  %13 = load i32*, i32** %in.addr, align 8, !dbg !4657
  %14 = load i32*, i32** %in.addr, align 8, !dbg !4658
  %15 = load i32*, i32** %lwindow_prev, align 8, !dbg !4659
  call void %12(i32* %13, i32* %14, i32* %15, i32 1024), !dbg !4653
  br label %if.end, !dbg !4660

if.else:                                          ; preds = %entry
  %16 = load i32*, i32** %in.addr, align 8, !dbg !4661
  %17 = bitcast i32* %16 to i8*, !dbg !4663
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 1792, i32 4, i1 false), !dbg !4663
  %18 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4664
  %fdsp18 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %18, i32 0, i32 14, !dbg !4665
  %19 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp18, align 32, !dbg !4665
  %vector_fmul19 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %19, i32 0, i32 2, !dbg !4666
  %20 = load void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)** %vector_fmul19, align 8, !dbg !4666
  %21 = load i32*, i32** %in.addr, align 8, !dbg !4667
  %add.ptr = getelementptr inbounds i32, i32* %21, i64 448, !dbg !4668
  %22 = load i32*, i32** %in.addr, align 8, !dbg !4669
  %add.ptr20 = getelementptr inbounds i32, i32* %22, i64 448, !dbg !4670
  %23 = load i32*, i32** %swindow_prev, align 8, !dbg !4671
  call void %20(i32* %add.ptr, i32* %add.ptr20, i32* %23, i32 128), !dbg !4664
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %24 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4672
  %window_sequence21 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %24, i32 0, i32 1, !dbg !4674
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence21, i64 0, i64 0, !dbg !4672
  %25 = load i32, i32* %arrayidx22, align 4, !dbg !4672
  %cmp23 = icmp ne i32 %25, 1, !dbg !4675
  br i1 %cmp23, label %if.then25, label %if.else29, !dbg !4676

if.then25:                                        ; preds = %if.end
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4677
  %fdsp26 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %26, i32 0, i32 14, !dbg !4679
  %27 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp26, align 32, !dbg !4679
  %vector_fmul_reverse = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %27, i32 0, i32 3, !dbg !4680
  %28 = load void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)** %vector_fmul_reverse, align 8, !dbg !4680
  %29 = load i32*, i32** %in.addr, align 8, !dbg !4681
  %add.ptr27 = getelementptr inbounds i32, i32* %29, i64 1024, !dbg !4682
  %30 = load i32*, i32** %in.addr, align 8, !dbg !4683
  %add.ptr28 = getelementptr inbounds i32, i32* %30, i64 1024, !dbg !4684
  %31 = load i32*, i32** %lwindow, align 8, !dbg !4685
  call void %28(i32* %add.ptr27, i32* %add.ptr28, i32* %31, i32 1024), !dbg !4677
  br label %if.end38, !dbg !4686

if.else29:                                        ; preds = %if.end
  %32 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4687
  %fdsp30 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %32, i32 0, i32 14, !dbg !4689
  %33 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp30, align 32, !dbg !4689
  %vector_fmul_reverse31 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %33, i32 0, i32 3, !dbg !4690
  %34 = load void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)** %vector_fmul_reverse31, align 8, !dbg !4690
  %35 = load i32*, i32** %in.addr, align 8, !dbg !4691
  %add.ptr32 = getelementptr inbounds i32, i32* %35, i64 1024, !dbg !4692
  %add.ptr33 = getelementptr inbounds i32, i32* %add.ptr32, i64 448, !dbg !4693
  %36 = load i32*, i32** %in.addr, align 8, !dbg !4694
  %add.ptr34 = getelementptr inbounds i32, i32* %36, i64 1024, !dbg !4695
  %add.ptr35 = getelementptr inbounds i32, i32* %add.ptr34, i64 448, !dbg !4696
  %37 = load i32*, i32** %swindow, align 8, !dbg !4697
  call void %34(i32* %add.ptr33, i32* %add.ptr35, i32* %37, i32 128), !dbg !4687
  %38 = load i32*, i32** %in.addr, align 8, !dbg !4698
  %add.ptr36 = getelementptr inbounds i32, i32* %38, i64 1024, !dbg !4699
  %add.ptr37 = getelementptr inbounds i32, i32* %add.ptr36, i64 576, !dbg !4700
  %39 = bitcast i32* %add.ptr37 to i8*, !dbg !4701
  call void @llvm.memset.p0i8.i64(i8* %39, i8 0, i64 1792, i32 4, i1 false), !dbg !4701
  br label %if.end38

if.end38:                                         ; preds = %if.else29, %if.then25
  %40 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4702
  %mdct_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %40, i32 0, i32 13, !dbg !4703
  %mdct_calc = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct_ltp, i32 0, i32 12, !dbg !4704
  %41 = load void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)** %mdct_calc, align 16, !dbg !4704
  %42 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4705
  %mdct_ltp39 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %42, i32 0, i32 13, !dbg !4706
  %43 = load i32*, i32** %out.addr, align 8, !dbg !4707
  %44 = load i32*, i32** %in.addr, align 8, !dbg !4708
  call void %41(%struct.FFTContext* %mdct_ltp39, i32* %43, i32* %44), !dbg !4702
  ret void, !dbg !4709
}

; Function Attrs: nounwind uwtable
define internal void @update_ltp(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !4710 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %saved = alloca i32*, align 8
  %saved_ltp = alloca i32*, align 8
  %lwindow = alloca i32*, align 8
  %swindow = alloca i32*, align 8
  %i = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !4711, metadata !2068), !dbg !4712
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !4713, metadata !2068), !dbg !4714
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !4715, metadata !2068), !dbg !4716
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4717
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !4718
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !4716
  call void @llvm.dbg.declare(metadata i32** %saved, metadata !4719, metadata !2068), !dbg !4720
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4721
  %saved2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 15, !dbg !4722
  %arraydecay = getelementptr inbounds [1536 x i32], [1536 x i32]* %saved2, i32 0, i32 0, !dbg !4721
  store i32* %arraydecay, i32** %saved, align 8, !dbg !4720
  call void @llvm.dbg.declare(metadata i32** %saved_ltp, metadata !4723, metadata !2068), !dbg !4724
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4725
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 14, !dbg !4726
  %arraydecay3 = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs, i32 0, i32 0, !dbg !4725
  store i32* %arraydecay3, i32** %saved_ltp, align 8, !dbg !4724
  call void @llvm.dbg.declare(metadata i32** %lwindow, metadata !4727, metadata !2068), !dbg !4728
  %3 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4729
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %3, i32 0, i32 2, !dbg !4730
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !4729
  %4 = load i8, i8* %arrayidx, align 4, !dbg !4729
  %conv = zext i8 %4 to i32, !dbg !4729
  %tobool = icmp ne i32 %conv, 0, !dbg !4729
  %cond = select i1 %tobool, i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @ff_aac_kbd_long_1024_fixed, i32 0, i32 0), i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @ff_sine_1024_fixed, i32 0, i32 0), !dbg !4729
  store i32* %cond, i32** %lwindow, align 8, !dbg !4728
  call void @llvm.dbg.declare(metadata i32** %swindow, metadata !4731, metadata !2068), !dbg !4732
  %5 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4733
  %use_kb_window4 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %5, i32 0, i32 2, !dbg !4734
  %arrayidx5 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window4, i64 0, i64 0, !dbg !4733
  %6 = load i8, i8* %arrayidx5, align 4, !dbg !4733
  %conv6 = zext i8 %6 to i32, !dbg !4733
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !4733
  %cond8 = select i1 %tobool7, i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_aac_kbd_short_128_fixed, i32 0, i32 0), i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_sine_128_fixed, i32 0, i32 0), !dbg !4733
  store i32* %cond8, i32** %swindow, align 8, !dbg !4732
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4735, metadata !2068), !dbg !4736
  %7 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4737
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %7, i32 0, i32 1, !dbg !4739
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !4737
  %8 = load i32, i32* %arrayidx9, align 4, !dbg !4737
  %cmp = icmp eq i32 %8, 2, !dbg !4740
  br i1 %cmp, label %if.then, label %if.else, !dbg !4741

if.then:                                          ; preds = %entry
  %9 = load i32*, i32** %saved_ltp, align 8, !dbg !4742
  %10 = bitcast i32* %9 to i8*, !dbg !4744
  %11 = load i32*, i32** %saved, align 8, !dbg !4745
  %12 = bitcast i32* %11 to i8*, !dbg !4744
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %12, i64 2048, i32 4, i1 false), !dbg !4744
  %13 = load i32*, i32** %saved_ltp, align 8, !dbg !4746
  %add.ptr = getelementptr inbounds i32, i32* %13, i64 576, !dbg !4747
  %14 = bitcast i32* %add.ptr to i8*, !dbg !4748
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 1792, i32 4, i1 false), !dbg !4748
  %15 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4749
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %15, i32 0, i32 14, !dbg !4750
  %16 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp, align 32, !dbg !4750
  %vector_fmul_reverse = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %16, i32 0, i32 3, !dbg !4751
  %17 = load void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)** %vector_fmul_reverse, align 8, !dbg !4751
  %18 = load i32*, i32** %saved_ltp, align 8, !dbg !4752
  %add.ptr11 = getelementptr inbounds i32, i32* %18, i64 448, !dbg !4753
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4754
  %buf_mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 9, !dbg !4755
  %arraydecay12 = getelementptr inbounds [1024 x i32], [1024 x i32]* %buf_mdct, i32 0, i32 0, !dbg !4754
  %add.ptr13 = getelementptr inbounds i32, i32* %arraydecay12, i64 960, !dbg !4756
  %20 = load i32*, i32** %swindow, align 8, !dbg !4757
  %arrayidx14 = getelementptr inbounds i32, i32* %20, i64 64, !dbg !4757
  call void %17(i32* %add.ptr11, i32* %add.ptr13, i32* %arrayidx14, i32 64), !dbg !4749
  store i32 0, i32* %i, align 4, !dbg !4758
  br label %for.cond, !dbg !4760

for.cond:                                         ; preds = %for.inc, %if.then
  %21 = load i32, i32* %i, align 4, !dbg !4761
  %cmp15 = icmp slt i32 %21, 64, !dbg !4764
  br i1 %cmp15, label %for.body, label %for.end, !dbg !4765

for.body:                                         ; preds = %for.cond
  %22 = load i32, i32* %i, align 4, !dbg !4766
  %sub = sub nsw i32 1023, %22, !dbg !4767
  %idxprom = sext i32 %sub to i64, !dbg !4768
  %23 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4768
  %buf_mdct17 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %23, i32 0, i32 9, !dbg !4769
  %arrayidx18 = getelementptr inbounds [1024 x i32], [1024 x i32]* %buf_mdct17, i64 0, i64 %idxprom, !dbg !4768
  %24 = load i32, i32* %arrayidx18, align 4, !dbg !4768
  %conv19 = sext i32 %24 to i64, !dbg !4770
  %25 = load i32, i32* %i, align 4, !dbg !4771
  %sub20 = sub nsw i32 63, %25, !dbg !4772
  %idxprom21 = sext i32 %sub20 to i64, !dbg !4773
  %26 = load i32*, i32** %swindow, align 8, !dbg !4773
  %arrayidx22 = getelementptr inbounds i32, i32* %26, i64 %idxprom21, !dbg !4773
  %27 = load i32, i32* %arrayidx22, align 4, !dbg !4773
  %conv23 = sext i32 %27 to i64, !dbg !4774
  %mul = mul nsw i64 %conv19, %conv23, !dbg !4775
  %add = add nsw i64 %mul, 1073741824, !dbg !4776
  %shr = ashr i64 %add, 31, !dbg !4777
  %conv24 = trunc i64 %shr to i32, !dbg !4778
  %28 = load i32, i32* %i, align 4, !dbg !4779
  %add25 = add nsw i32 %28, 512, !dbg !4780
  %idxprom26 = sext i32 %add25 to i64, !dbg !4781
  %29 = load i32*, i32** %saved_ltp, align 8, !dbg !4781
  %arrayidx27 = getelementptr inbounds i32, i32* %29, i64 %idxprom26, !dbg !4781
  store i32 %conv24, i32* %arrayidx27, align 4, !dbg !4782
  br label %for.inc, !dbg !4781

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !4783
  %inc = add nsw i32 %30, 1, !dbg !4783
  store i32 %inc, i32* %i, align 4, !dbg !4783
  br label %for.cond, !dbg !4785, !llvm.loop !4786

for.end:                                          ; preds = %for.cond
  br label %if.end97, !dbg !4788

if.else:                                          ; preds = %entry
  %31 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4789
  %window_sequence28 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %31, i32 0, i32 1, !dbg !4792
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence28, i64 0, i64 0, !dbg !4789
  %32 = load i32, i32* %arrayidx29, align 4, !dbg !4789
  %cmp30 = icmp eq i32 %32, 1, !dbg !4793
  br i1 %cmp30, label %if.then32, label %if.else67, !dbg !4789

if.then32:                                        ; preds = %if.else
  %33 = load i32*, i32** %saved_ltp, align 8, !dbg !4794
  %34 = bitcast i32* %33 to i8*, !dbg !4796
  %35 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4797
  %buf_mdct33 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %35, i32 0, i32 9, !dbg !4798
  %arraydecay34 = getelementptr inbounds [1024 x i32], [1024 x i32]* %buf_mdct33, i32 0, i32 0, !dbg !4797
  %add.ptr35 = getelementptr inbounds i32, i32* %arraydecay34, i64 512, !dbg !4799
  %36 = bitcast i32* %add.ptr35 to i8*, !dbg !4796
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %36, i64 1792, i32 4, i1 false), !dbg !4796
  %37 = load i32*, i32** %saved_ltp, align 8, !dbg !4800
  %add.ptr36 = getelementptr inbounds i32, i32* %37, i64 576, !dbg !4801
  %38 = bitcast i32* %add.ptr36 to i8*, !dbg !4802
  call void @llvm.memset.p0i8.i64(i8* %38, i8 0, i64 1792, i32 4, i1 false), !dbg !4802
  %39 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4803
  %fdsp37 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 14, !dbg !4804
  %40 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp37, align 32, !dbg !4804
  %vector_fmul_reverse38 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %40, i32 0, i32 3, !dbg !4805
  %41 = load void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)** %vector_fmul_reverse38, align 8, !dbg !4805
  %42 = load i32*, i32** %saved_ltp, align 8, !dbg !4806
  %add.ptr39 = getelementptr inbounds i32, i32* %42, i64 448, !dbg !4807
  %43 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4808
  %buf_mdct40 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %43, i32 0, i32 9, !dbg !4809
  %arraydecay41 = getelementptr inbounds [1024 x i32], [1024 x i32]* %buf_mdct40, i32 0, i32 0, !dbg !4808
  %add.ptr42 = getelementptr inbounds i32, i32* %arraydecay41, i64 960, !dbg !4810
  %44 = load i32*, i32** %swindow, align 8, !dbg !4811
  %arrayidx43 = getelementptr inbounds i32, i32* %44, i64 64, !dbg !4811
  call void %41(i32* %add.ptr39, i32* %add.ptr42, i32* %arrayidx43, i32 64), !dbg !4803
  store i32 0, i32* %i, align 4, !dbg !4812
  br label %for.cond44, !dbg !4814

for.cond44:                                       ; preds = %for.inc64, %if.then32
  %45 = load i32, i32* %i, align 4, !dbg !4815
  %cmp45 = icmp slt i32 %45, 64, !dbg !4818
  br i1 %cmp45, label %for.body47, label %for.end66, !dbg !4819

for.body47:                                       ; preds = %for.cond44
  %46 = load i32, i32* %i, align 4, !dbg !4820
  %sub48 = sub nsw i32 1023, %46, !dbg !4821
  %idxprom49 = sext i32 %sub48 to i64, !dbg !4822
  %47 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4822
  %buf_mdct50 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %47, i32 0, i32 9, !dbg !4823
  %arrayidx51 = getelementptr inbounds [1024 x i32], [1024 x i32]* %buf_mdct50, i64 0, i64 %idxprom49, !dbg !4822
  %48 = load i32, i32* %arrayidx51, align 4, !dbg !4822
  %conv52 = sext i32 %48 to i64, !dbg !4824
  %49 = load i32, i32* %i, align 4, !dbg !4825
  %sub53 = sub nsw i32 63, %49, !dbg !4826
  %idxprom54 = sext i32 %sub53 to i64, !dbg !4827
  %50 = load i32*, i32** %swindow, align 8, !dbg !4827
  %arrayidx55 = getelementptr inbounds i32, i32* %50, i64 %idxprom54, !dbg !4827
  %51 = load i32, i32* %arrayidx55, align 4, !dbg !4827
  %conv56 = sext i32 %51 to i64, !dbg !4828
  %mul57 = mul nsw i64 %conv52, %conv56, !dbg !4829
  %add58 = add nsw i64 %mul57, 1073741824, !dbg !4830
  %shr59 = ashr i64 %add58, 31, !dbg !4831
  %conv60 = trunc i64 %shr59 to i32, !dbg !4832
  %52 = load i32, i32* %i, align 4, !dbg !4833
  %add61 = add nsw i32 %52, 512, !dbg !4834
  %idxprom62 = sext i32 %add61 to i64, !dbg !4835
  %53 = load i32*, i32** %saved_ltp, align 8, !dbg !4835
  %arrayidx63 = getelementptr inbounds i32, i32* %53, i64 %idxprom62, !dbg !4835
  store i32 %conv60, i32* %arrayidx63, align 4, !dbg !4836
  br label %for.inc64, !dbg !4835

for.inc64:                                        ; preds = %for.body47
  %54 = load i32, i32* %i, align 4, !dbg !4837
  %inc65 = add nsw i32 %54, 1, !dbg !4837
  store i32 %inc65, i32* %i, align 4, !dbg !4837
  br label %for.cond44, !dbg !4839, !llvm.loop !4840

for.end66:                                        ; preds = %for.cond44
  br label %if.end, !dbg !4842

if.else67:                                        ; preds = %if.else
  %55 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4843
  %fdsp68 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %55, i32 0, i32 14, !dbg !4845
  %56 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp68, align 32, !dbg !4845
  %vector_fmul_reverse69 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %56, i32 0, i32 3, !dbg !4846
  %57 = load void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)** %vector_fmul_reverse69, align 8, !dbg !4846
  %58 = load i32*, i32** %saved_ltp, align 8, !dbg !4847
  %59 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4848
  %buf_mdct70 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %59, i32 0, i32 9, !dbg !4849
  %arraydecay71 = getelementptr inbounds [1024 x i32], [1024 x i32]* %buf_mdct70, i32 0, i32 0, !dbg !4848
  %add.ptr72 = getelementptr inbounds i32, i32* %arraydecay71, i64 512, !dbg !4850
  %60 = load i32*, i32** %lwindow, align 8, !dbg !4851
  %arrayidx73 = getelementptr inbounds i32, i32* %60, i64 512, !dbg !4851
  call void %57(i32* %58, i32* %add.ptr72, i32* %arrayidx73, i32 512), !dbg !4843
  store i32 0, i32* %i, align 4, !dbg !4852
  br label %for.cond74, !dbg !4854

for.cond74:                                       ; preds = %for.inc94, %if.else67
  %61 = load i32, i32* %i, align 4, !dbg !4855
  %cmp75 = icmp slt i32 %61, 512, !dbg !4858
  br i1 %cmp75, label %for.body77, label %for.end96, !dbg !4859

for.body77:                                       ; preds = %for.cond74
  %62 = load i32, i32* %i, align 4, !dbg !4860
  %sub78 = sub nsw i32 1023, %62, !dbg !4861
  %idxprom79 = sext i32 %sub78 to i64, !dbg !4862
  %63 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4862
  %buf_mdct80 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %63, i32 0, i32 9, !dbg !4863
  %arrayidx81 = getelementptr inbounds [1024 x i32], [1024 x i32]* %buf_mdct80, i64 0, i64 %idxprom79, !dbg !4862
  %64 = load i32, i32* %arrayidx81, align 4, !dbg !4862
  %conv82 = sext i32 %64 to i64, !dbg !4864
  %65 = load i32, i32* %i, align 4, !dbg !4865
  %sub83 = sub nsw i32 511, %65, !dbg !4866
  %idxprom84 = sext i32 %sub83 to i64, !dbg !4867
  %66 = load i32*, i32** %lwindow, align 8, !dbg !4867
  %arrayidx85 = getelementptr inbounds i32, i32* %66, i64 %idxprom84, !dbg !4867
  %67 = load i32, i32* %arrayidx85, align 4, !dbg !4867
  %conv86 = sext i32 %67 to i64, !dbg !4868
  %mul87 = mul nsw i64 %conv82, %conv86, !dbg !4869
  %add88 = add nsw i64 %mul87, 1073741824, !dbg !4870
  %shr89 = ashr i64 %add88, 31, !dbg !4871
  %conv90 = trunc i64 %shr89 to i32, !dbg !4872
  %68 = load i32, i32* %i, align 4, !dbg !4873
  %add91 = add nsw i32 %68, 512, !dbg !4874
  %idxprom92 = sext i32 %add91 to i64, !dbg !4875
  %69 = load i32*, i32** %saved_ltp, align 8, !dbg !4875
  %arrayidx93 = getelementptr inbounds i32, i32* %69, i64 %idxprom92, !dbg !4875
  store i32 %conv90, i32* %arrayidx93, align 4, !dbg !4876
  br label %for.inc94, !dbg !4875

for.inc94:                                        ; preds = %for.body77
  %70 = load i32, i32* %i, align 4, !dbg !4877
  %inc95 = add nsw i32 %70, 1, !dbg !4877
  store i32 %inc95, i32* %i, align 4, !dbg !4877
  br label %for.cond74, !dbg !4879, !llvm.loop !4880

for.end96:                                        ; preds = %for.cond74
  br label %if.end

if.end:                                           ; preds = %for.end96, %for.end66
  br label %if.end97

if.end97:                                         ; preds = %if.end, %for.end
  %71 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4882
  %ltp_state = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %71, i32 0, i32 17, !dbg !4883
  %arraydecay98 = getelementptr inbounds [3072 x i32], [3072 x i32]* %ltp_state, i32 0, i32 0, !dbg !4884
  %72 = bitcast i32* %arraydecay98 to i8*, !dbg !4884
  %73 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4885
  %ltp_state99 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %73, i32 0, i32 17, !dbg !4886
  %arraydecay100 = getelementptr inbounds [3072 x i32], [3072 x i32]* %ltp_state99, i32 0, i32 0, !dbg !4885
  %add.ptr101 = getelementptr inbounds i32, i32* %arraydecay100, i64 1024, !dbg !4887
  %74 = bitcast i32* %add.ptr101 to i8*, !dbg !4884
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %74, i64 4096, i32 4, i1 false), !dbg !4884
  %75 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4888
  %ltp_state102 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %75, i32 0, i32 17, !dbg !4889
  %arraydecay103 = getelementptr inbounds [3072 x i32], [3072 x i32]* %ltp_state102, i32 0, i32 0, !dbg !4888
  %add.ptr104 = getelementptr inbounds i32, i32* %arraydecay103, i64 1024, !dbg !4890
  %76 = bitcast i32* %add.ptr104 to i8*, !dbg !4891
  %77 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4892
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %77, i32 0, i32 21, !dbg !4893
  %78 = load i32*, i32** %ret, align 32, !dbg !4893
  %79 = bitcast i32* %78 to i8*, !dbg !4891
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %79, i64 4096, i32 4, i1 false), !dbg !4891
  %80 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4894
  %ltp_state105 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %80, i32 0, i32 17, !dbg !4895
  %arraydecay106 = getelementptr inbounds [3072 x i32], [3072 x i32]* %ltp_state105, i32 0, i32 0, !dbg !4894
  %add.ptr107 = getelementptr inbounds i32, i32* %arraydecay106, i64 2048, !dbg !4896
  %81 = bitcast i32* %add.ptr107 to i8*, !dbg !4897
  %82 = load i32*, i32** %saved_ltp, align 8, !dbg !4898
  %83 = bitcast i32* %82 to i8*, !dbg !4897
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %83, i64 4096, i32 4, i1 false), !dbg !4897
  ret void, !dbg !4899
}

; Function Attrs: nounwind uwtable
define internal void @vector_pow43(i32* %coefs, i32 %len) #1 !dbg !4900 {
entry:
  %coefs.addr = alloca i32*, align 8
  %len.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %coef = alloca i32, align 4
  store i32* %coefs, i32** %coefs.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %coefs.addr, metadata !4901, metadata !2068), !dbg !4902
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !4903, metadata !2068), !dbg !4904
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4905, metadata !2068), !dbg !4906
  call void @llvm.dbg.declare(metadata i32* %coef, metadata !4907, metadata !2068), !dbg !4908
  store i32 0, i32* %i, align 4, !dbg !4909
  br label %for.cond, !dbg !4911

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4912
  %1 = load i32, i32* %len.addr, align 4, !dbg !4915
  %cmp = icmp slt i32 %0, %1, !dbg !4916
  br i1 %cmp, label %for.body, label %for.end, !dbg !4917

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !4918
  %idxprom = sext i32 %2 to i64, !dbg !4920
  %3 = load i32*, i32** %coefs.addr, align 8, !dbg !4920
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !4920
  %4 = load i32, i32* %arrayidx, align 4, !dbg !4920
  store i32 %4, i32* %coef, align 4, !dbg !4921
  %5 = load i32, i32* %coef, align 4, !dbg !4922
  %cmp1 = icmp slt i32 %5, 0, !dbg !4924
  br i1 %cmp1, label %if.then, label %if.else, !dbg !4925

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %coef, align 4, !dbg !4926
  %sub = sub nsw i32 0, %6, !dbg !4927
  %idxprom2 = sext i32 %sub to i64, !dbg !4928
  %arrayidx3 = getelementptr inbounds [8192 x i32], [8192 x i32]* @ff_cbrt_tab_fixed, i64 0, i64 %idxprom2, !dbg !4928
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !4928
  %sub4 = sub nsw i32 0, %7, !dbg !4929
  store i32 %sub4, i32* %coef, align 4, !dbg !4930
  br label %if.end, !dbg !4931

if.else:                                          ; preds = %for.body
  %8 = load i32, i32* %coef, align 4, !dbg !4932
  %idxprom5 = sext i32 %8 to i64, !dbg !4933
  %arrayidx6 = getelementptr inbounds [8192 x i32], [8192 x i32]* @ff_cbrt_tab_fixed, i64 0, i64 %idxprom5, !dbg !4933
  %9 = load i32, i32* %arrayidx6, align 4, !dbg !4933
  store i32 %9, i32* %coef, align 4, !dbg !4934
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %coef, align 4, !dbg !4935
  %11 = load i32, i32* %i, align 4, !dbg !4936
  %idxprom7 = sext i32 %11 to i64, !dbg !4937
  %12 = load i32*, i32** %coefs.addr, align 8, !dbg !4937
  %arrayidx8 = getelementptr inbounds i32, i32* %12, i64 %idxprom7, !dbg !4937
  store i32 %10, i32* %arrayidx8, align 4, !dbg !4938
  br label %for.inc, !dbg !4939

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !4940
  %inc = add nsw i32 %13, 1, !dbg !4940
  store i32 %inc, i32* %i, align 4, !dbg !4940
  br label %for.cond, !dbg !4942, !llvm.loop !4943

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4945
}

; Function Attrs: nounwind uwtable
define internal void @subband_scale(i32* %dst, i32* %src, i32 %scale, i32 %offset, i32 %len, i8* %log_context) #1 !dbg !4946 {
entry:
  %dst.addr = alloca i32*, align 8
  %src.addr = alloca i32*, align 8
  %scale.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %log_context.addr = alloca i8*, align 8
  %ssign = alloca i32, align 4
  %s = alloca i32, align 4
  %round = alloca i32, align 4
  %i = alloca i32, align 4
  %out = alloca i32, align 4
  %c = alloca i32, align 4
  store i32* %dst, i32** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr, metadata !4947, metadata !2068), !dbg !4948
  store i32* %src, i32** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %src.addr, metadata !4949, metadata !2068), !dbg !4950
  store i32 %scale, i32* %scale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale.addr, metadata !4951, metadata !2068), !dbg !4952
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !4953, metadata !2068), !dbg !4954
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !4955, metadata !2068), !dbg !4956
  store i8* %log_context, i8** %log_context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %log_context.addr, metadata !4957, metadata !2068), !dbg !4958
  call void @llvm.dbg.declare(metadata i32* %ssign, metadata !4959, metadata !2068), !dbg !4960
  %0 = load i32, i32* %scale.addr, align 4, !dbg !4961
  %cmp = icmp slt i32 %0, 0, !dbg !4962
  %cond = select i1 %cmp, i32 -1, i32 1, !dbg !4961
  store i32 %cond, i32* %ssign, align 4, !dbg !4960
  call void @llvm.dbg.declare(metadata i32* %s, metadata !4963, metadata !2068), !dbg !4964
  %1 = load i32, i32* %scale.addr, align 4, !dbg !4965
  %cmp1 = icmp sge i32 %1, 0, !dbg !4966
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !4967

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %scale.addr, align 4, !dbg !4968
  br label %cond.end, !dbg !4970

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %scale.addr, align 4, !dbg !4971
  %sub = sub nsw i32 0, %3, !dbg !4973
  br label %cond.end, !dbg !4974

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond2 = phi i32 [ %2, %cond.true ], [ %sub, %cond.false ], !dbg !4975
  store i32 %cond2, i32* %s, align 4, !dbg !4977
  call void @llvm.dbg.declare(metadata i32* %round, metadata !4978, metadata !2068), !dbg !4979
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4980, metadata !2068), !dbg !4981
  call void @llvm.dbg.declare(metadata i32* %out, metadata !4982, metadata !2068), !dbg !4983
  call void @llvm.dbg.declare(metadata i32* %c, metadata !4984, metadata !2068), !dbg !4985
  %4 = load i32, i32* %s, align 4, !dbg !4986
  %and = and i32 %4, 3, !dbg !4987
  %idxprom = sext i32 %and to i64, !dbg !4988
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* @exp2tab, i64 0, i64 %idxprom, !dbg !4988
  %5 = load i32, i32* %arrayidx, align 4, !dbg !4988
  store i32 %5, i32* %c, align 4, !dbg !4985
  %6 = load i32, i32* %offset.addr, align 4, !dbg !4989
  %7 = load i32, i32* %s, align 4, !dbg !4990
  %shr = ashr i32 %7, 2, !dbg !4991
  %sub3 = sub nsw i32 %6, %shr, !dbg !4992
  store i32 %sub3, i32* %s, align 4, !dbg !4993
  %8 = load i32, i32* %s, align 4, !dbg !4994
  %cmp4 = icmp sgt i32 %8, 31, !dbg !4996
  br i1 %cmp4, label %if.then, label %if.else, !dbg !4997

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !4998
  br label %for.cond, !dbg !5001

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load i32, i32* %i, align 4, !dbg !5002
  %10 = load i32, i32* %len.addr, align 4, !dbg !5005
  %cmp5 = icmp slt i32 %9, %10, !dbg !5006
  br i1 %cmp5, label %for.body, label %for.end, !dbg !5007

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !5008
  %idxprom6 = sext i32 %11 to i64, !dbg !5010
  %12 = load i32*, i32** %dst.addr, align 8, !dbg !5010
  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6, !dbg !5010
  store i32 0, i32* %arrayidx7, align 4, !dbg !5011
  br label %for.inc, !dbg !5012

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !5013
  %inc = add nsw i32 %13, 1, !dbg !5013
  store i32 %inc, i32* %i, align 4, !dbg !5013
  br label %for.cond, !dbg !5015, !llvm.loop !5016

for.end:                                          ; preds = %for.cond
  br label %if.end54, !dbg !5018

if.else:                                          ; preds = %cond.end
  %14 = load i32, i32* %s, align 4, !dbg !5019
  %cmp8 = icmp sgt i32 %14, 0, !dbg !5022
  br i1 %cmp8, label %if.then9, label %if.else26, !dbg !5019

if.then9:                                         ; preds = %if.else
  %15 = load i32, i32* %s, align 4, !dbg !5023
  %sub10 = sub nsw i32 %15, 1, !dbg !5025
  %shl = shl i32 1, %sub10, !dbg !5026
  store i32 %shl, i32* %round, align 4, !dbg !5027
  store i32 0, i32* %i, align 4, !dbg !5028
  br label %for.cond11, !dbg !5030

for.cond11:                                       ; preds = %for.inc23, %if.then9
  %16 = load i32, i32* %i, align 4, !dbg !5031
  %17 = load i32, i32* %len.addr, align 4, !dbg !5034
  %cmp12 = icmp slt i32 %16, %17, !dbg !5035
  br i1 %cmp12, label %for.body13, label %for.end25, !dbg !5036

for.body13:                                       ; preds = %for.cond11
  %18 = load i32, i32* %i, align 4, !dbg !5037
  %idxprom14 = sext i32 %18 to i64, !dbg !5039
  %19 = load i32*, i32** %src.addr, align 8, !dbg !5039
  %arrayidx15 = getelementptr inbounds i32, i32* %19, i64 %idxprom14, !dbg !5039
  %20 = load i32, i32* %arrayidx15, align 4, !dbg !5039
  %conv = sext i32 %20 to i64, !dbg !5040
  %21 = load i32, i32* %c, align 4, !dbg !5041
  %conv16 = sext i32 %21 to i64, !dbg !5041
  %mul = mul nsw i64 %conv, %conv16, !dbg !5042
  %shr17 = ashr i64 %mul, 32, !dbg !5043
  %conv18 = trunc i64 %shr17 to i32, !dbg !5044
  store i32 %conv18, i32* %out, align 4, !dbg !5045
  %22 = load i32, i32* %out, align 4, !dbg !5046
  %23 = load i32, i32* %round, align 4, !dbg !5047
  %add = add i32 %22, %23, !dbg !5048
  %24 = load i32, i32* %s, align 4, !dbg !5049
  %shr19 = ashr i32 %add, %24, !dbg !5050
  %25 = load i32, i32* %ssign, align 4, !dbg !5051
  %mul20 = mul nsw i32 %shr19, %25, !dbg !5052
  %26 = load i32, i32* %i, align 4, !dbg !5053
  %idxprom21 = sext i32 %26 to i64, !dbg !5054
  %27 = load i32*, i32** %dst.addr, align 8, !dbg !5054
  %arrayidx22 = getelementptr inbounds i32, i32* %27, i64 %idxprom21, !dbg !5054
  store i32 %mul20, i32* %arrayidx22, align 4, !dbg !5055
  br label %for.inc23, !dbg !5056

for.inc23:                                        ; preds = %for.body13
  %28 = load i32, i32* %i, align 4, !dbg !5057
  %inc24 = add nsw i32 %28, 1, !dbg !5057
  store i32 %inc24, i32* %i, align 4, !dbg !5057
  br label %for.cond11, !dbg !5059, !llvm.loop !5060

for.end25:                                        ; preds = %for.cond11
  br label %if.end53, !dbg !5062

if.else26:                                        ; preds = %if.else
  %29 = load i32, i32* %s, align 4, !dbg !5063
  %cmp27 = icmp sgt i32 %29, -32, !dbg !5066
  br i1 %cmp27, label %if.then29, label %if.else52, !dbg !5063

if.then29:                                        ; preds = %if.else26
  %30 = load i32, i32* %s, align 4, !dbg !5067
  %add30 = add nsw i32 %30, 32, !dbg !5069
  store i32 %add30, i32* %s, align 4, !dbg !5070
  %31 = load i32, i32* %s, align 4, !dbg !5071
  %sub31 = sub nsw i32 %31, 1, !dbg !5072
  %shl32 = shl i32 1, %sub31, !dbg !5073
  store i32 %shl32, i32* %round, align 4, !dbg !5074
  store i32 0, i32* %i, align 4, !dbg !5075
  br label %for.cond33, !dbg !5077

for.cond33:                                       ; preds = %for.inc49, %if.then29
  %32 = load i32, i32* %i, align 4, !dbg !5078
  %33 = load i32, i32* %len.addr, align 4, !dbg !5081
  %cmp34 = icmp slt i32 %32, %33, !dbg !5082
  br i1 %cmp34, label %for.body36, label %for.end51, !dbg !5083

for.body36:                                       ; preds = %for.cond33
  %34 = load i32, i32* %i, align 4, !dbg !5084
  %idxprom37 = sext i32 %34 to i64, !dbg !5086
  %35 = load i32*, i32** %src.addr, align 8, !dbg !5086
  %arrayidx38 = getelementptr inbounds i32, i32* %35, i64 %idxprom37, !dbg !5086
  %36 = load i32, i32* %arrayidx38, align 4, !dbg !5086
  %conv39 = sext i32 %36 to i64, !dbg !5087
  %37 = load i32, i32* %c, align 4, !dbg !5088
  %conv40 = sext i32 %37 to i64, !dbg !5088
  %mul41 = mul nsw i64 %conv39, %conv40, !dbg !5089
  %38 = load i32, i32* %round, align 4, !dbg !5090
  %conv42 = zext i32 %38 to i64, !dbg !5090
  %add43 = add nsw i64 %mul41, %conv42, !dbg !5091
  %39 = load i32, i32* %s, align 4, !dbg !5092
  %sh_prom = zext i32 %39 to i64, !dbg !5093
  %shr44 = ashr i64 %add43, %sh_prom, !dbg !5093
  %conv45 = trunc i64 %shr44 to i32, !dbg !5094
  store i32 %conv45, i32* %out, align 4, !dbg !5095
  %40 = load i32, i32* %out, align 4, !dbg !5096
  %41 = load i32, i32* %ssign, align 4, !dbg !5097
  %mul46 = mul i32 %40, %41, !dbg !5098
  %42 = load i32, i32* %i, align 4, !dbg !5099
  %idxprom47 = sext i32 %42 to i64, !dbg !5100
  %43 = load i32*, i32** %dst.addr, align 8, !dbg !5100
  %arrayidx48 = getelementptr inbounds i32, i32* %43, i64 %idxprom47, !dbg !5100
  store i32 %mul46, i32* %arrayidx48, align 4, !dbg !5101
  br label %for.inc49, !dbg !5102

for.inc49:                                        ; preds = %for.body36
  %44 = load i32, i32* %i, align 4, !dbg !5103
  %inc50 = add nsw i32 %44, 1, !dbg !5103
  store i32 %inc50, i32* %i, align 4, !dbg !5103
  br label %for.cond33, !dbg !5105, !llvm.loop !5106

for.end51:                                        ; preds = %for.cond33
  br label %if.end, !dbg !5108

if.else52:                                        ; preds = %if.else26
  %45 = load i8*, i8** %log_context.addr, align 8, !dbg !5109
  call void (i8*, i32, i8*, ...) @av_log(i8* %45, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0)), !dbg !5111
  br label %if.end

if.end:                                           ; preds = %if.else52, %for.end51
  br label %if.end53

if.end53:                                         ; preds = %if.end, %for.end25
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %for.end
  ret void, !dbg !5112
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @compute_lpc_coefs_fixed(i32* %autoc, i32 %max_order, i32* %lpc, i32 %lpc_stride, i32 %fail, i32 %normalize) #4 !dbg !5113 {
entry:
  %retval = alloca i32, align 4
  %autoc.addr = alloca i32*, align 8
  %max_order.addr = alloca i32, align 4
  %lpc.addr = alloca i32*, align 8
  %lpc_stride.addr = alloca i32, align 4
  %fail.addr = alloca i32, align 4
  %normalize.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %err = alloca i32, align 4
  %lpc_last = alloca i32*, align 8
  %r = alloca i32, align 4
  %f = alloca i32, align 4
  %b = alloca i32, align 4
  store i32* %autoc, i32** %autoc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %autoc.addr, metadata !5120, metadata !2068), !dbg !5121
  store i32 %max_order, i32* %max_order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_order.addr, metadata !5122, metadata !2068), !dbg !5123
  store i32* %lpc, i32** %lpc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %lpc.addr, metadata !5124, metadata !2068), !dbg !5125
  store i32 %lpc_stride, i32* %lpc_stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lpc_stride.addr, metadata !5126, metadata !2068), !dbg !5127
  store i32 %fail, i32* %fail.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fail.addr, metadata !5128, metadata !2068), !dbg !5129
  store i32 %normalize, i32* %normalize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %normalize.addr, metadata !5130, metadata !2068), !dbg !5131
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5132, metadata !2068), !dbg !5133
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5134, metadata !2068), !dbg !5135
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5136, metadata !2068), !dbg !5137
  store i32 0, i32* %err, align 4, !dbg !5137
  call void @llvm.dbg.declare(metadata i32** %lpc_last, metadata !5138, metadata !2068), !dbg !5139
  %0 = load i32*, i32** %lpc.addr, align 8, !dbg !5140
  store i32* %0, i32** %lpc_last, align 8, !dbg !5139
  %1 = load i32, i32* %normalize.addr, align 4, !dbg !5141
  %tobool = icmp ne i32 %1, 0, !dbg !5141
  br i1 %tobool, label %if.then, label %if.end, !dbg !5143

if.then:                                          ; preds = %entry
  %2 = load i32*, i32** %autoc.addr, align 8, !dbg !5144
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 1, !dbg !5144
  store i32* %incdec.ptr, i32** %autoc.addr, align 8, !dbg !5144
  %3 = load i32, i32* %2, align 4, !dbg !5145
  store i32 %3, i32* %err, align 4, !dbg !5146
  br label %if.end, !dbg !5147

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %fail.addr, align 4, !dbg !5148
  %tobool1 = icmp ne i32 %4, 0, !dbg !5148
  br i1 %tobool1, label %land.lhs.true, label %if.end4, !dbg !5150

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32, i32* %max_order.addr, align 4, !dbg !5151
  %sub = sub nsw i32 %5, 1, !dbg !5153
  %idxprom = sext i32 %sub to i64, !dbg !5154
  %6 = load i32*, i32** %autoc.addr, align 8, !dbg !5154
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !5154
  %7 = load i32, i32* %arrayidx, align 4, !dbg !5154
  %cmp = icmp eq i32 %7, 0, !dbg !5155
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !5156

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load i32, i32* %err, align 4, !dbg !5157
  %cmp2 = icmp sle i32 %8, 0, !dbg !5159
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5160

if.then3:                                         ; preds = %lor.lhs.false, %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !5161
  br label %return, !dbg !5161

if.end4:                                          ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %i, align 4, !dbg !5162
  br label %for.cond, !dbg !5164

for.cond:                                         ; preds = %for.inc66, %if.end4
  %9 = load i32, i32* %i, align 4, !dbg !5165
  %10 = load i32, i32* %max_order.addr, align 4, !dbg !5168
  %cmp5 = icmp slt i32 %9, %10, !dbg !5169
  br i1 %cmp5, label %for.body, label %for.end68, !dbg !5170

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5171, metadata !2068), !dbg !5173
  %11 = load i32, i32* %i, align 4, !dbg !5174
  %idxprom6 = sext i32 %11 to i64, !dbg !5175
  %12 = load i32*, i32** %autoc.addr, align 8, !dbg !5175
  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6, !dbg !5175
  %13 = load i32, i32* %arrayidx7, align 4, !dbg !5175
  %sub8 = sub nsw i32 0, %13, !dbg !5176
  %add = add nsw i32 %sub8, 16, !dbg !5177
  %shr = ashr i32 %add, 5, !dbg !5178
  store i32 %shr, i32* %r, align 4, !dbg !5173
  %14 = load i32, i32* %normalize.addr, align 4, !dbg !5179
  %tobool9 = icmp ne i32 %14, 0, !dbg !5179
  br i1 %tobool9, label %if.then10, label %if.end24, !dbg !5181

if.then10:                                        ; preds = %for.body
  store i32 0, i32* %j, align 4, !dbg !5182
  br label %for.cond11, !dbg !5185

for.cond11:                                       ; preds = %for.inc, %if.then10
  %15 = load i32, i32* %j, align 4, !dbg !5186
  %16 = load i32, i32* %i, align 4, !dbg !5189
  %cmp12 = icmp slt i32 %15, %16, !dbg !5190
  br i1 %cmp12, label %for.body13, label %for.end, !dbg !5191

for.body13:                                       ; preds = %for.cond11
  %17 = load i32, i32* %j, align 4, !dbg !5192
  %idxprom14 = sext i32 %17 to i64, !dbg !5193
  %18 = load i32*, i32** %lpc_last, align 8, !dbg !5193
  %arrayidx15 = getelementptr inbounds i32, i32* %18, i64 %idxprom14, !dbg !5193
  %19 = load i32, i32* %arrayidx15, align 4, !dbg !5193
  %20 = load i32, i32* %i, align 4, !dbg !5194
  %21 = load i32, i32* %j, align 4, !dbg !5195
  %sub16 = sub nsw i32 %20, %21, !dbg !5196
  %sub17 = sub nsw i32 %sub16, 1, !dbg !5197
  %idxprom18 = sext i32 %sub17 to i64, !dbg !5198
  %22 = load i32*, i32** %autoc.addr, align 8, !dbg !5198
  %arrayidx19 = getelementptr inbounds i32, i32* %22, i64 %idxprom18, !dbg !5198
  %23 = load i32, i32* %arrayidx19, align 4, !dbg !5198
  %mul = mul nsw i32 %19, %23, !dbg !5199
  %24 = load i32, i32* %r, align 4, !dbg !5200
  %sub20 = sub nsw i32 %24, %mul, !dbg !5200
  store i32 %sub20, i32* %r, align 4, !dbg !5200
  br label %for.inc, !dbg !5201

for.inc:                                          ; preds = %for.body13
  %25 = load i32, i32* %j, align 4, !dbg !5202
  %inc = add nsw i32 %25, 1, !dbg !5202
  store i32 %inc, i32* %j, align 4, !dbg !5202
  br label %for.cond11, !dbg !5204, !llvm.loop !5205

for.end:                                          ; preds = %for.cond11
  %26 = load i32, i32* %err, align 4, !dbg !5207
  %27 = load i32, i32* %r, align 4, !dbg !5208
  %div = sdiv i32 %27, %26, !dbg !5208
  store i32 %div, i32* %r, align 4, !dbg !5208
  %28 = load i32, i32* %r, align 4, !dbg !5209
  %29 = load i32, i32* %r, align 4, !dbg !5210
  %mul21 = mul nsw i32 %28, %29, !dbg !5211
  %sub22 = sub nsw i32 1, %mul21, !dbg !5212
  %30 = load i32, i32* %err, align 4, !dbg !5213
  %mul23 = mul nsw i32 %30, %sub22, !dbg !5213
  store i32 %mul23, i32* %err, align 4, !dbg !5213
  br label %if.end24, !dbg !5214

if.end24:                                         ; preds = %for.end, %for.body
  %31 = load i32, i32* %r, align 4, !dbg !5215
  %32 = load i32, i32* %i, align 4, !dbg !5216
  %idxprom25 = sext i32 %32 to i64, !dbg !5217
  %33 = load i32*, i32** %lpc.addr, align 8, !dbg !5217
  %arrayidx26 = getelementptr inbounds i32, i32* %33, i64 %idxprom25, !dbg !5217
  store i32 %31, i32* %arrayidx26, align 4, !dbg !5218
  store i32 0, i32* %j, align 4, !dbg !5219
  br label %for.cond27, !dbg !5221

for.cond27:                                       ; preds = %for.inc57, %if.end24
  %34 = load i32, i32* %j, align 4, !dbg !5222
  %35 = load i32, i32* %i, align 4, !dbg !5225
  %add28 = add nsw i32 %35, 1, !dbg !5226
  %shr29 = ashr i32 %add28, 1, !dbg !5227
  %cmp30 = icmp slt i32 %34, %shr29, !dbg !5228
  br i1 %cmp30, label %for.body31, label %for.end59, !dbg !5229

for.body31:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata i32* %f, metadata !5230, metadata !2068), !dbg !5232
  %36 = load i32, i32* %j, align 4, !dbg !5233
  %idxprom32 = sext i32 %36 to i64, !dbg !5234
  %37 = load i32*, i32** %lpc_last, align 8, !dbg !5234
  %arrayidx33 = getelementptr inbounds i32, i32* %37, i64 %idxprom32, !dbg !5234
  %38 = load i32, i32* %arrayidx33, align 4, !dbg !5234
  store i32 %38, i32* %f, align 4, !dbg !5232
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5235, metadata !2068), !dbg !5236
  %39 = load i32, i32* %i, align 4, !dbg !5237
  %sub34 = sub nsw i32 %39, 1, !dbg !5238
  %40 = load i32, i32* %j, align 4, !dbg !5239
  %sub35 = sub nsw i32 %sub34, %40, !dbg !5240
  %idxprom36 = sext i32 %sub35 to i64, !dbg !5241
  %41 = load i32*, i32** %lpc_last, align 8, !dbg !5241
  %arrayidx37 = getelementptr inbounds i32, i32* %41, i64 %idxprom36, !dbg !5241
  %42 = load i32, i32* %arrayidx37, align 4, !dbg !5241
  store i32 %42, i32* %b, align 4, !dbg !5236
  %43 = load i32, i32* %f, align 4, !dbg !5242
  %44 = load i32, i32* %r, align 4, !dbg !5243
  %conv = sext i32 %44 to i64, !dbg !5244
  %45 = load i32, i32* %b, align 4, !dbg !5245
  %conv38 = sext i32 %45 to i64, !dbg !5246
  %mul39 = mul nsw i64 %conv, %conv38, !dbg !5247
  %add40 = add nsw i64 %mul39, 33554432, !dbg !5248
  %shr41 = ashr i64 %add40, 26, !dbg !5249
  %conv42 = trunc i64 %shr41 to i32, !dbg !5250
  %add43 = add i32 %43, %conv42, !dbg !5251
  %46 = load i32, i32* %j, align 4, !dbg !5252
  %idxprom44 = sext i32 %46 to i64, !dbg !5253
  %47 = load i32*, i32** %lpc.addr, align 8, !dbg !5253
  %arrayidx45 = getelementptr inbounds i32, i32* %47, i64 %idxprom44, !dbg !5253
  store i32 %add43, i32* %arrayidx45, align 4, !dbg !5254
  %48 = load i32, i32* %b, align 4, !dbg !5255
  %49 = load i32, i32* %r, align 4, !dbg !5256
  %conv46 = sext i32 %49 to i64, !dbg !5257
  %50 = load i32, i32* %f, align 4, !dbg !5258
  %conv47 = sext i32 %50 to i64, !dbg !5259
  %mul48 = mul nsw i64 %conv46, %conv47, !dbg !5260
  %add49 = add nsw i64 %mul48, 33554432, !dbg !5261
  %shr50 = ashr i64 %add49, 26, !dbg !5262
  %conv51 = trunc i64 %shr50 to i32, !dbg !5263
  %add52 = add i32 %48, %conv51, !dbg !5264
  %51 = load i32, i32* %i, align 4, !dbg !5265
  %sub53 = sub nsw i32 %51, 1, !dbg !5266
  %52 = load i32, i32* %j, align 4, !dbg !5267
  %sub54 = sub nsw i32 %sub53, %52, !dbg !5268
  %idxprom55 = sext i32 %sub54 to i64, !dbg !5269
  %53 = load i32*, i32** %lpc.addr, align 8, !dbg !5269
  %arrayidx56 = getelementptr inbounds i32, i32* %53, i64 %idxprom55, !dbg !5269
  store i32 %add52, i32* %arrayidx56, align 4, !dbg !5270
  br label %for.inc57, !dbg !5271

for.inc57:                                        ; preds = %for.body31
  %54 = load i32, i32* %j, align 4, !dbg !5272
  %inc58 = add nsw i32 %54, 1, !dbg !5272
  store i32 %inc58, i32* %j, align 4, !dbg !5272
  br label %for.cond27, !dbg !5274, !llvm.loop !5275

for.end59:                                        ; preds = %for.cond27
  %55 = load i32, i32* %fail.addr, align 4, !dbg !5277
  %tobool60 = icmp ne i32 %55, 0, !dbg !5277
  br i1 %tobool60, label %land.lhs.true61, label %if.end65, !dbg !5279

land.lhs.true61:                                  ; preds = %for.end59
  %56 = load i32, i32* %err, align 4, !dbg !5280
  %cmp62 = icmp slt i32 %56, 0, !dbg !5282
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !5283

if.then64:                                        ; preds = %land.lhs.true61
  store i32 -1, i32* %retval, align 4, !dbg !5284
  br label %return, !dbg !5284

if.end65:                                         ; preds = %land.lhs.true61, %for.end59
  %57 = load i32*, i32** %lpc.addr, align 8, !dbg !5285
  store i32* %57, i32** %lpc_last, align 8, !dbg !5286
  %58 = load i32, i32* %lpc_stride.addr, align 4, !dbg !5287
  %59 = load i32*, i32** %lpc.addr, align 8, !dbg !5288
  %idx.ext = sext i32 %58 to i64, !dbg !5288
  %add.ptr = getelementptr inbounds i32, i32* %59, i64 %idx.ext, !dbg !5288
  store i32* %add.ptr, i32** %lpc.addr, align 8, !dbg !5288
  br label %for.inc66, !dbg !5289

for.inc66:                                        ; preds = %if.end65
  %60 = load i32, i32* %i, align 4, !dbg !5290
  %inc67 = add nsw i32 %60, 1, !dbg !5290
  store i32 %inc67, i32* %i, align 4, !dbg !5290
  br label %for.cond, !dbg !5292, !llvm.loop !5293

for.end68:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5295
  br label %return, !dbg !5295

return:                                           ; preds = %for.end68, %if.then64, %if.then3
  %61 = load i32, i32* %retval, align 4, !dbg !5296
  ret i32 %61, !dbg !5296
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #4 !dbg !5297 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5300, metadata !2068), !dbg !5301
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !5302, metadata !2068), !dbg !5303
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !5304, metadata !2068), !dbg !5305
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !5306, metadata !2068), !dbg !5307
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5308, metadata !2068), !dbg !5309
  store i32 0, i32* %ret, align 4, !dbg !5309
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !5310
  %cmp = icmp sge i32 %0, 2147483135, !dbg !5312
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5313

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !5314
  %cmp1 = icmp slt i32 %1, 0, !dbg !5316
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !5317

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !5318
  %tobool = icmp ne i8* %2, null, !dbg !5318
  br i1 %tobool, label %if.end, label %if.then, !dbg !5320

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !5321
  store i8* null, i8** %buffer.addr, align 8, !dbg !5323
  store i32 -1094995529, i32* %ret, align 4, !dbg !5324
  br label %if.end, !dbg !5325

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !5326
  %add = add nsw i32 %3, 7, !dbg !5327
  %shr = ashr i32 %add, 3, !dbg !5328
  store i32 %shr, i32* %buffer_size, align 4, !dbg !5329
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !5330
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5331
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !5332
  store i8* %4, i8** %buffer3, align 8, !dbg !5333
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !5334
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5335
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !5336
  store i32 %6, i32* %size_in_bits, align 4, !dbg !5337
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !5338
  %add4 = add nsw i32 %8, 8, !dbg !5339
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5340
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !5341
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !5342
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !5343
  %11 = load i32, i32* %buffer_size, align 4, !dbg !5344
  %idx.ext = sext i32 %11 to i64, !dbg !5345
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !5345
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5346
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !5347
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !5348
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5349
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !5350
  store i32 0, i32* %index, align 8, !dbg !5351
  %14 = load i32, i32* %ret, align 4, !dbg !5352
  ret i32 %14, !dbg !5353
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_audio_specific_config_gb(%struct.AACContext* %ac, %struct.AVCodecContext* %avctx, %struct.MPEG4AudioConfig* %m4ac, %struct.GetBitContext* %gb, i32 %get_bit_alignment, i32 %sync_extension) #1 !dbg !5354 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %m4ac.addr = alloca %struct.MPEG4AudioConfig*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %get_bit_alignment.addr = alloca i32, align 4
  %sync_extension.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %gbc = alloca %struct.GetBitContext, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !5357, metadata !2068), !dbg !5358
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5359, metadata !2068), !dbg !5360
  store %struct.MPEG4AudioConfig* %m4ac, %struct.MPEG4AudioConfig** %m4ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac.addr, metadata !5361, metadata !2068), !dbg !5362
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5363, metadata !2068), !dbg !5364
  store i32 %get_bit_alignment, i32* %get_bit_alignment.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %get_bit_alignment.addr, metadata !5365, metadata !2068), !dbg !5366
  store i32 %sync_extension, i32* %sync_extension.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sync_extension.addr, metadata !5367, metadata !2068), !dbg !5368
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5369, metadata !2068), !dbg !5370
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5371, metadata !2068), !dbg !5372
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gbc, metadata !5373, metadata !2068), !dbg !5374
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5375
  %1 = bitcast %struct.GetBitContext* %gbc to i8*, !dbg !5376
  %2 = bitcast %struct.GetBitContext* %0 to i8*, !dbg !5376
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 32, i32 8, i1 false), !dbg !5376
  %3 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5377
  %4 = load i32, i32* %sync_extension.addr, align 4, !dbg !5379
  %call = call i32 @ff_mpeg4audio_get_config_gb(%struct.MPEG4AudioConfig* %3, %struct.GetBitContext* %gbc, i32 %4), !dbg !5380
  store i32 %call, i32* %i, align 4, !dbg !5381
  %cmp = icmp slt i32 %call, 0, !dbg !5382
  br i1 %cmp, label %if.then, label %if.end, !dbg !5383

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !5384
  br label %return, !dbg !5384

if.end:                                           ; preds = %entry
  %5 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5385
  %sampling_index = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %5, i32 0, i32 1, !dbg !5387
  %6 = load i32, i32* %sampling_index, align 4, !dbg !5387
  %cmp1 = icmp sgt i32 %6, 12, !dbg !5388
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !5389

if.then2:                                         ; preds = %if.end
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5390
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !5390
  %9 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5392
  %sampling_index3 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %9, i32 0, i32 1, !dbg !5393
  %10 = load i32, i32* %sampling_index3, align 4, !dbg !5393
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i32 0, i32 0), i32 %10), !dbg !5394
  store i32 -1094995529, i32* %retval, align 4, !dbg !5395
  br label %return, !dbg !5395

if.end4:                                          ; preds = %if.end
  %11 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5396
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %11, i32 0, i32 0, !dbg !5398
  %12 = load i32, i32* %object_type, align 4, !dbg !5398
  %cmp5 = icmp eq i32 %12, 23, !dbg !5399
  br i1 %cmp5, label %land.lhs.true, label %if.end12, !dbg !5400

land.lhs.true:                                    ; preds = %if.end4
  %13 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5401
  %sampling_index6 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %13, i32 0, i32 1, !dbg !5402
  %14 = load i32, i32* %sampling_index6, align 4, !dbg !5402
  %cmp7 = icmp slt i32 %14, 3, !dbg !5403
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !5404

lor.lhs.false:                                    ; preds = %land.lhs.true
  %15 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5405
  %sampling_index8 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %15, i32 0, i32 1, !dbg !5407
  %16 = load i32, i32* %sampling_index8, align 4, !dbg !5407
  %cmp9 = icmp sgt i32 %16, 7, !dbg !5408
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !5409

if.then10:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5411
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !5411
  %19 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5413
  %sampling_index11 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %19, i32 0, i32 1, !dbg !5414
  %20 = load i32, i32* %sampling_index11, align 4, !dbg !5414
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i32 0, i32 0), i32 %20), !dbg !5415
  store i32 -1094995529, i32* %retval, align 4, !dbg !5416
  br label %return, !dbg !5416

if.end12:                                         ; preds = %lor.lhs.false, %if.end4
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5417
  %22 = load i32, i32* %i, align 4, !dbg !5418
  call void @skip_bits_long(%struct.GetBitContext* %21, i32 %22), !dbg !5419
  %23 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5420
  %object_type13 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %23, i32 0, i32 0, !dbg !5421
  %24 = load i32, i32* %object_type13, align 4, !dbg !5421
  switch i32 %24, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 17, label %sw.bb
    i32 23, label %sw.bb
    i32 39, label %sw.bb18
  ], !dbg !5422

sw.bb:                                            ; preds = %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12
  %25 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5423
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5426
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5427
  %28 = load i32, i32* %get_bit_alignment.addr, align 4, !dbg !5428
  %29 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5429
  %30 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5430
  %chan_config = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %30, i32 0, i32 3, !dbg !5431
  %31 = load i32, i32* %chan_config, align 4, !dbg !5431
  %call14 = call i32 @decode_ga_specific_config(%struct.AACContext* %25, %struct.AVCodecContext* %26, %struct.GetBitContext* %27, i32 %28, %struct.MPEG4AudioConfig* %29, i32 %31), !dbg !5432
  store i32 %call14, i32* %ret, align 4, !dbg !5433
  %cmp15 = icmp slt i32 %call14, 0, !dbg !5434
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !5435

if.then16:                                        ; preds = %sw.bb
  %32 = load i32, i32* %ret, align 4, !dbg !5436
  store i32 %32, i32* %retval, align 4, !dbg !5437
  br label %return, !dbg !5437

if.end17:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !5438

sw.bb18:                                          ; preds = %if.end12
  %33 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5439
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5441
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5442
  %36 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5443
  %37 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5444
  %chan_config19 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %37, i32 0, i32 3, !dbg !5445
  %38 = load i32, i32* %chan_config19, align 4, !dbg !5445
  %call20 = call i32 @decode_eld_specific_config(%struct.AACContext* %33, %struct.AVCodecContext* %34, %struct.GetBitContext* %35, %struct.MPEG4AudioConfig* %36, i32 %38), !dbg !5446
  store i32 %call20, i32* %ret, align 4, !dbg !5447
  %cmp21 = icmp slt i32 %call20, 0, !dbg !5448
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !5449

if.then22:                                        ; preds = %sw.bb18
  %39 = load i32, i32* %ret, align 4, !dbg !5450
  store i32 %39, i32* %retval, align 4, !dbg !5451
  br label %return, !dbg !5451

if.end23:                                         ; preds = %sw.bb18
  br label %sw.epilog, !dbg !5452

sw.default:                                       ; preds = %if.end12
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5453
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !5453
  %42 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5454
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %42, i32 0, i32 4, !dbg !5455
  %43 = load i32, i32* %sbr, align 4, !dbg !5455
  %cmp24 = icmp eq i32 %43, 1, !dbg !5456
  %cond = select i1 %cmp24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0), !dbg !5454
  %44 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5457
  %object_type25 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %44, i32 0, i32 0, !dbg !5458
  %45 = load i32, i32* %object_type25, align 4, !dbg !5458
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %41, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i32 0, i32 0), i8* %cond, i32 %45), !dbg !5459
  store i32 -38, i32* %retval, align 4, !dbg !5460
  br label %return, !dbg !5460

sw.epilog:                                        ; preds = %if.end23, %if.end17
  br label %do.body, !dbg !5461, !llvm.loop !5462

do.body:                                          ; preds = %sw.epilog
  br label %do.end, !dbg !5463

do.end:                                           ; preds = %do.body
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5466
  %call26 = call i32 @get_bits_count(%struct.GetBitContext* %46), !dbg !5467
  store i32 %call26, i32* %retval, align 4, !dbg !5468
  br label %return, !dbg !5468

return:                                           ; preds = %do.end, %sw.default, %if.then22, %if.then16, %if.then10, %if.then2, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !5469
  ret i32 %47, !dbg !5469
}

declare i32 @ff_mpeg4audio_get_config_gb(%struct.MPEG4AudioConfig*, %struct.GetBitContext*, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !5470 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5473, metadata !2068), !dbg !5478
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !5480, metadata !2068), !dbg !5481
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !5482, metadata !2068), !dbg !5483
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5484, metadata !2068), !dbg !5485
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5486, metadata !2068), !dbg !5487
  %0 = load i32, i32* %n.addr, align 4, !dbg !5488
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5489
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !5490
  %2 = load i32, i32* %index, align 8, !dbg !5490
  %sub = sub nsw i32 0, %2, !dbg !5491
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5492
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !5493
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5493
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5494
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !5495
  %6 = load i32, i32* %index1, align 8, !dbg !5495
  %sub2 = sub nsw i32 %4, %6, !dbg !5496
  store i32 %0, i32* %a.addr.i, align 4, !dbg !5497
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !5497
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !5497
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !5498
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !5500
  %cmp.i = icmp slt i32 %7, %8, !dbg !5501
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5502

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !5503
  store i32 %9, i32* %retval.i, align 4, !dbg !5505
  br label %av_clip_c.exit, !dbg !5505

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !5506
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !5508
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !5509
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !5510

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !5511
  store i32 %12, i32* %retval.i, align 4, !dbg !5513
  br label %av_clip_c.exit, !dbg !5513

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !5514
  store i32 %13, i32* %retval.i, align 4, !dbg !5515
  br label %av_clip_c.exit, !dbg !5515

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !5516
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5517
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !5518
  %16 = load i32, i32* %index3, align 8, !dbg !5519
  %add = add nsw i32 %16, %14, !dbg !5519
  store i32 %add, i32* %index3, align 8, !dbg !5519
  ret void, !dbg !5520
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_ga_specific_config(%struct.AACContext* %ac, %struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb, i32 %get_bit_alignment, %struct.MPEG4AudioConfig* %m4ac, i32 %channel_config) #1 !dbg !5521 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %get_bit_alignment.addr = alloca i32, align 4
  %m4ac.addr = alloca %struct.MPEG4AudioConfig*, align 8
  %channel_config.addr = alloca i32, align 4
  %extension_flag = alloca i32, align 4
  %ret = alloca i32, align 4
  %ep_config = alloca i32, align 4
  %res_flags = alloca i32, align 4
  %layout_map = alloca [64 x [3 x i8]], align 16
  %tags = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !5524, metadata !2068), !dbg !5525
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5526, metadata !2068), !dbg !5527
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5528, metadata !2068), !dbg !5529
  store i32 %get_bit_alignment, i32* %get_bit_alignment.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %get_bit_alignment.addr, metadata !5530, metadata !2068), !dbg !5531
  store %struct.MPEG4AudioConfig* %m4ac, %struct.MPEG4AudioConfig** %m4ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac.addr, metadata !5532, metadata !2068), !dbg !5533
  store i32 %channel_config, i32* %channel_config.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel_config.addr, metadata !5534, metadata !2068), !dbg !5535
  call void @llvm.dbg.declare(metadata i32* %extension_flag, metadata !5536, metadata !2068), !dbg !5537
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5538, metadata !2068), !dbg !5539
  call void @llvm.dbg.declare(metadata i32* %ep_config, metadata !5540, metadata !2068), !dbg !5541
  call void @llvm.dbg.declare(metadata i32* %res_flags, metadata !5542, metadata !2068), !dbg !5543
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map, metadata !5544, metadata !2068), !dbg !5545
  call void @llvm.dbg.declare(metadata i32* %tags, metadata !5546, metadata !2068), !dbg !5547
  store i32 0, i32* %tags, align 4, !dbg !5547
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5548
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !5550
  %tobool = icmp ne i32 %call, 0, !dbg !5550
  br i1 %tobool, label %if.then, label %if.end, !dbg !5551

if.then:                                          ; preds = %entry
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5552
  %2 = bitcast %struct.AVCodecContext* %1 to i8*, !dbg !5552
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i32 0, i32 0)), !dbg !5554
  store i32 -1163346256, i32* %retval, align 4, !dbg !5555
  br label %return, !dbg !5555

if.end:                                           ; preds = %entry
  %3 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5556
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %3, i32 0, i32 11, !dbg !5557
  store i32 0, i32* %frame_length_short, align 4, !dbg !5558
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5559
  %call1 = call i32 @get_bits1(%struct.GetBitContext* %4), !dbg !5561
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5561
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5562

if.then3:                                         ; preds = %if.end
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5563
  call void @skip_bits(%struct.GetBitContext* %5, i32 14), !dbg !5564
  br label %if.end4, !dbg !5564

if.end4:                                          ; preds = %if.then3, %if.end
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5565
  %call5 = call i32 @get_bits1(%struct.GetBitContext* %6), !dbg !5566
  store i32 %call5, i32* %extension_flag, align 4, !dbg !5567
  %7 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5568
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %7, i32 0, i32 0, !dbg !5570
  %8 = load i32, i32* %object_type, align 4, !dbg !5570
  %cmp = icmp eq i32 %8, 6, !dbg !5571
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !5572

lor.lhs.false:                                    ; preds = %if.end4
  %9 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5573
  %object_type6 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %9, i32 0, i32 0, !dbg !5574
  %10 = load i32, i32* %object_type6, align 4, !dbg !5574
  %cmp7 = icmp eq i32 %10, 20, !dbg !5575
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !5576

if.then8:                                         ; preds = %lor.lhs.false, %if.end4
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5578
  call void @skip_bits(%struct.GetBitContext* %11, i32 3), !dbg !5579
  br label %if.end9, !dbg !5579

if.end9:                                          ; preds = %if.then8, %lor.lhs.false
  %12 = load i32, i32* %channel_config.addr, align 4, !dbg !5580
  %cmp10 = icmp eq i32 %12, 0, !dbg !5582
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !5583

if.then11:                                        ; preds = %if.end9
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5584
  call void @skip_bits(%struct.GetBitContext* %13, i32 4), !dbg !5586
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5587
  %15 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5588
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !5589
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5590
  %17 = load i32, i32* %get_bit_alignment.addr, align 4, !dbg !5591
  %call12 = call i32 @decode_pce(%struct.AVCodecContext* %14, %struct.MPEG4AudioConfig* %15, [3 x i8]* %arraydecay, %struct.GetBitContext* %16, i32 %17), !dbg !5592
  store i32 %call12, i32* %tags, align 4, !dbg !5593
  %18 = load i32, i32* %tags, align 4, !dbg !5594
  %cmp13 = icmp slt i32 %18, 0, !dbg !5596
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5597

if.then14:                                        ; preds = %if.then11
  %19 = load i32, i32* %tags, align 4, !dbg !5598
  store i32 %19, i32* %retval, align 4, !dbg !5599
  br label %return, !dbg !5599

if.end15:                                         ; preds = %if.then11
  br label %if.end21, !dbg !5600

if.else:                                          ; preds = %if.end9
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5601
  %arraydecay16 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !5604
  %21 = load i32, i32* %channel_config.addr, align 4, !dbg !5605
  %call17 = call i32 @set_default_channel_config(%struct.AVCodecContext* %20, [3 x i8]* %arraydecay16, i32* %tags, i32 %21), !dbg !5606
  store i32 %call17, i32* %ret, align 4, !dbg !5607
  %tobool18 = icmp ne i32 %call17, 0, !dbg !5607
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !5608

if.then19:                                        ; preds = %if.else
  %22 = load i32, i32* %ret, align 4, !dbg !5609
  store i32 %22, i32* %retval, align 4, !dbg !5610
  br label %return, !dbg !5610

if.end20:                                         ; preds = %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end15
  %arraydecay22 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !5611
  %23 = load i32, i32* %tags, align 4, !dbg !5613
  %call23 = call i32 @count_channels([3 x i8]* %arraydecay22, i32 %23), !dbg !5614
  %cmp24 = icmp sgt i32 %call23, 1, !dbg !5615
  br i1 %cmp24, label %if.then25, label %if.else26, !dbg !5616

if.then25:                                        ; preds = %if.end21
  %24 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5617
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %24, i32 0, i32 10, !dbg !5619
  store i32 0, i32* %ps, align 4, !dbg !5620
  br label %if.end33, !dbg !5621

if.else26:                                        ; preds = %if.end21
  %25 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5622
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %25, i32 0, i32 4, !dbg !5625
  %26 = load i32, i32* %sbr, align 4, !dbg !5625
  %cmp27 = icmp eq i32 %26, 1, !dbg !5626
  br i1 %cmp27, label %land.lhs.true, label %if.end32, !dbg !5627

land.lhs.true:                                    ; preds = %if.else26
  %27 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5628
  %ps28 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %27, i32 0, i32 10, !dbg !5630
  %28 = load i32, i32* %ps28, align 4, !dbg !5630
  %cmp29 = icmp eq i32 %28, -1, !dbg !5631
  br i1 %cmp29, label %if.then30, label %if.end32, !dbg !5632

if.then30:                                        ; preds = %land.lhs.true
  %29 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5633
  %ps31 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %29, i32 0, i32 10, !dbg !5634
  store i32 1, i32* %ps31, align 4, !dbg !5635
  br label %if.end32, !dbg !5633

if.end32:                                         ; preds = %if.then30, %land.lhs.true, %if.else26
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then25
  %30 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5636
  %tobool34 = icmp ne %struct.AACContext* %30, null, !dbg !5636
  br i1 %tobool34, label %land.lhs.true35, label %if.end40, !dbg !5638

land.lhs.true35:                                  ; preds = %if.end33
  %31 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5639
  %arraydecay36 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !5641
  %32 = load i32, i32* %tags, align 4, !dbg !5642
  %call37 = call i32 @output_configure(%struct.AACContext* %31, [3 x i8]* %arraydecay36, i32 %32, i32 3, i32 0), !dbg !5643
  store i32 %call37, i32* %ret, align 4, !dbg !5644
  %tobool38 = icmp ne i32 %call37, 0, !dbg !5644
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !5645

if.then39:                                        ; preds = %land.lhs.true35
  %33 = load i32, i32* %ret, align 4, !dbg !5646
  store i32 %33, i32* %retval, align 4, !dbg !5647
  br label %return, !dbg !5647

if.end40:                                         ; preds = %land.lhs.true35, %if.end33
  %34 = load i32, i32* %extension_flag, align 4, !dbg !5648
  %tobool41 = icmp ne i32 %34, 0, !dbg !5648
  br i1 %tobool41, label %if.then42, label %if.end49, !dbg !5650

if.then42:                                        ; preds = %if.end40
  %35 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5651
  %object_type43 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %35, i32 0, i32 0, !dbg !5653
  %36 = load i32, i32* %object_type43, align 4, !dbg !5653
  switch i32 %36, label %sw.epilog [
    i32 22, label %sw.bb
    i32 17, label %sw.bb44
    i32 19, label %sw.bb44
    i32 20, label %sw.bb44
    i32 23, label %sw.bb44
  ], !dbg !5654

sw.bb:                                            ; preds = %if.then42
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5655
  call void @skip_bits(%struct.GetBitContext* %37, i32 5), !dbg !5657
  %38 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5658
  call void @skip_bits(%struct.GetBitContext* %38, i32 11), !dbg !5659
  br label %sw.epilog, !dbg !5660

sw.bb44:                                          ; preds = %if.then42, %if.then42, %if.then42, %if.then42
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5661
  %call45 = call i32 @get_bits(%struct.GetBitContext* %39, i32 3), !dbg !5662
  store i32 %call45, i32* %res_flags, align 4, !dbg !5663
  %40 = load i32, i32* %res_flags, align 4, !dbg !5664
  %tobool46 = icmp ne i32 %40, 0, !dbg !5664
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !5666

if.then47:                                        ; preds = %sw.bb44
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5667
  %42 = bitcast %struct.AVCodecContext* %41 to i8*, !dbg !5667
  %43 = load i32, i32* %res_flags, align 4, !dbg !5669
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %42, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22, i32 0, i32 0), i32 %43), !dbg !5670
  store i32 -1163346256, i32* %retval, align 4, !dbg !5671
  br label %return, !dbg !5671

if.end48:                                         ; preds = %sw.bb44
  br label %sw.epilog, !dbg !5672

sw.epilog:                                        ; preds = %if.then42, %if.end48, %sw.bb
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5673
  call void @skip_bits1(%struct.GetBitContext* %44), !dbg !5674
  br label %if.end49, !dbg !5675

if.end49:                                         ; preds = %sw.epilog, %if.end40
  %45 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5676
  %object_type50 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %45, i32 0, i32 0, !dbg !5677
  %46 = load i32, i32* %object_type50, align 4, !dbg !5677
  switch i32 %46, label %sw.epilog56 [
    i32 17, label %sw.bb51
    i32 19, label %sw.bb51
    i32 20, label %sw.bb51
    i32 23, label %sw.bb51
  ], !dbg !5678

sw.bb51:                                          ; preds = %if.end49, %if.end49, %if.end49, %if.end49
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5679
  %call52 = call i32 @get_bits(%struct.GetBitContext* %47, i32 2), !dbg !5681
  store i32 %call52, i32* %ep_config, align 4, !dbg !5682
  %48 = load i32, i32* %ep_config, align 4, !dbg !5683
  %tobool53 = icmp ne i32 %48, 0, !dbg !5683
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !5685

if.then54:                                        ; preds = %sw.bb51
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5686
  %50 = bitcast %struct.AVCodecContext* %49 to i8*, !dbg !5686
  %51 = load i32, i32* %ep_config, align 4, !dbg !5688
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %50, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i32 0, i32 0), i32 %51), !dbg !5689
  store i32 -1163346256, i32* %retval, align 4, !dbg !5690
  br label %return, !dbg !5690

if.end55:                                         ; preds = %sw.bb51
  br label %sw.epilog56, !dbg !5691

sw.epilog56:                                      ; preds = %if.end55, %if.end49
  store i32 0, i32* %retval, align 4, !dbg !5692
  br label %return, !dbg !5692

return:                                           ; preds = %sw.epilog56, %if.then54, %if.then47, %if.then39, %if.then19, %if.then14, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !5693
  ret i32 %52, !dbg !5693
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_eld_specific_config(%struct.AACContext* %ac, %struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb, %struct.MPEG4AudioConfig* %m4ac, i32 %channel_config) #1 !dbg !5694 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %m4ac.addr = alloca %struct.MPEG4AudioConfig*, align 8
  %channel_config.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %ep_config = alloca i32, align 4
  %res_flags = alloca i32, align 4
  %layout_map = alloca [64 x [3 x i8]], align 16
  %tags = alloca i32, align 4
  %ELDEXT_TERM = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !5697, metadata !2068), !dbg !5698
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5699, metadata !2068), !dbg !5700
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5701, metadata !2068), !dbg !5702
  store %struct.MPEG4AudioConfig* %m4ac, %struct.MPEG4AudioConfig** %m4ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac.addr, metadata !5703, metadata !2068), !dbg !5704
  store i32 %channel_config, i32* %channel_config.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel_config.addr, metadata !5705, metadata !2068), !dbg !5706
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5707, metadata !2068), !dbg !5708
  call void @llvm.dbg.declare(metadata i32* %ep_config, metadata !5709, metadata !2068), !dbg !5710
  call void @llvm.dbg.declare(metadata i32* %res_flags, metadata !5711, metadata !2068), !dbg !5712
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map, metadata !5713, metadata !2068), !dbg !5714
  call void @llvm.dbg.declare(metadata i32* %tags, metadata !5715, metadata !2068), !dbg !5716
  store i32 0, i32* %tags, align 4, !dbg !5716
  call void @llvm.dbg.declare(metadata i32* %ELDEXT_TERM, metadata !5717, metadata !2068), !dbg !5718
  store i32 0, i32* %ELDEXT_TERM, align 4, !dbg !5718
  %0 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5719
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i32 0, i32 10, !dbg !5720
  store i32 0, i32* %ps, align 4, !dbg !5721
  %1 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5722
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %1, i32 0, i32 4, !dbg !5723
  store i32 0, i32* %sbr, align 4, !dbg !5724
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5725
  %call = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !5727
  %tobool = icmp ne i32 %call, 0, !dbg !5727
  br i1 %tobool, label %if.then, label %if.end, !dbg !5728

if.then:                                          ; preds = %entry
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5729
  %4 = bitcast %struct.AVCodecContext* %3 to i8*, !dbg !5729
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29, i32 0, i32 0)), !dbg !5731
  store i32 -1163346256, i32* %retval, align 4, !dbg !5732
  br label %return, !dbg !5732

if.end:                                           ; preds = %entry
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5733
  %call1 = call i32 @get_bits(%struct.GetBitContext* %5, i32 3), !dbg !5734
  store i32 %call1, i32* %res_flags, align 4, !dbg !5735
  %6 = load i32, i32* %res_flags, align 4, !dbg !5736
  %tobool2 = icmp ne i32 %6, 0, !dbg !5736
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5738

if.then3:                                         ; preds = %if.end
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5739
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !5739
  %9 = load i32, i32* %res_flags, align 4, !dbg !5741
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %8, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22, i32 0, i32 0), i32 %9), !dbg !5742
  store i32 -1163346256, i32* %retval, align 4, !dbg !5743
  br label %return, !dbg !5743

if.end4:                                          ; preds = %if.end
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5744
  %call5 = call i32 @get_bits1(%struct.GetBitContext* %10), !dbg !5746
  %tobool6 = icmp ne i32 %call5, 0, !dbg !5746
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !5747

if.then7:                                         ; preds = %if.end4
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5748
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !5748
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i32 0, i32 0)), !dbg !5750
  store i32 -1163346256, i32* %retval, align 4, !dbg !5751
  br label %return, !dbg !5751

if.end8:                                          ; preds = %if.end4
  br label %while.cond, !dbg !5752

while.cond:                                       ; preds = %if.end24, %if.end8
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5753
  %call9 = call i32 @get_bits(%struct.GetBitContext* %13, i32 4), !dbg !5755
  %cmp = icmp ne i32 %call9, 0, !dbg !5756
  br i1 %cmp, label %while.body, label %while.end, !dbg !5757

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5758, metadata !2068), !dbg !5760
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5761
  %call10 = call i32 @get_bits(%struct.GetBitContext* %14, i32 4), !dbg !5762
  store i32 %call10, i32* %len, align 4, !dbg !5760
  %15 = load i32, i32* %len, align 4, !dbg !5763
  %cmp11 = icmp eq i32 %15, 15, !dbg !5765
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !5766

if.then12:                                        ; preds = %while.body
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5767
  %call13 = call i32 @get_bits(%struct.GetBitContext* %16, i32 8), !dbg !5768
  %17 = load i32, i32* %len, align 4, !dbg !5769
  %add = add i32 %17, %call13, !dbg !5769
  store i32 %add, i32* %len, align 4, !dbg !5769
  br label %if.end14, !dbg !5770

if.end14:                                         ; preds = %if.then12, %while.body
  %18 = load i32, i32* %len, align 4, !dbg !5771
  %cmp15 = icmp eq i32 %18, 270, !dbg !5773
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !5774

if.then16:                                        ; preds = %if.end14
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5775
  %call17 = call i32 @get_bits(%struct.GetBitContext* %19, i32 16), !dbg !5776
  %20 = load i32, i32* %len, align 4, !dbg !5777
  %add18 = add i32 %20, %call17, !dbg !5777
  store i32 %add18, i32* %len, align 4, !dbg !5777
  br label %if.end19, !dbg !5778

if.end19:                                         ; preds = %if.then16, %if.end14
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5779
  %call20 = call i32 @get_bits_left(%struct.GetBitContext* %21), !dbg !5781
  %22 = load i32, i32* %len, align 4, !dbg !5782
  %mul = mul nsw i32 %22, 8, !dbg !5783
  %add21 = add nsw i32 %mul, 4, !dbg !5784
  %cmp22 = icmp slt i32 %call20, %add21, !dbg !5785
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !5786

if.then23:                                        ; preds = %if.end19
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5787
  %24 = bitcast %struct.AVCodecContext* %23 to i8*, !dbg !5787
  call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.31, i32 0, i32 0)), !dbg !5789
  store i32 -1094995529, i32* %retval, align 4, !dbg !5790
  br label %return, !dbg !5790

if.end24:                                         ; preds = %if.end19
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5791
  %26 = load i32, i32* %len, align 4, !dbg !5792
  %mul25 = mul nsw i32 8, %26, !dbg !5793
  call void @skip_bits_long(%struct.GetBitContext* %25, i32 %mul25), !dbg !5794
  br label %while.cond, !dbg !5795, !llvm.loop !5797

while.end:                                        ; preds = %while.cond
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5798
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !5800
  %28 = load i32, i32* %channel_config.addr, align 4, !dbg !5801
  %call26 = call i32 @set_default_channel_config(%struct.AVCodecContext* %27, [3 x i8]* %arraydecay, i32* %tags, i32 %28), !dbg !5802
  store i32 %call26, i32* %ret, align 4, !dbg !5803
  %tobool27 = icmp ne i32 %call26, 0, !dbg !5803
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !5804

if.then28:                                        ; preds = %while.end
  %29 = load i32, i32* %ret, align 4, !dbg !5805
  store i32 %29, i32* %retval, align 4, !dbg !5806
  br label %return, !dbg !5806

if.end29:                                         ; preds = %while.end
  %30 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5807
  %tobool30 = icmp ne %struct.AACContext* %30, null, !dbg !5807
  br i1 %tobool30, label %land.lhs.true, label %if.end35, !dbg !5809

land.lhs.true:                                    ; preds = %if.end29
  %31 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5810
  %arraydecay31 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !5812
  %32 = load i32, i32* %tags, align 4, !dbg !5813
  %call32 = call i32 @output_configure(%struct.AACContext* %31, [3 x i8]* %arraydecay31, i32 %32, i32 3, i32 0), !dbg !5814
  store i32 %call32, i32* %ret, align 4, !dbg !5815
  %tobool33 = icmp ne i32 %call32, 0, !dbg !5815
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !5816

if.then34:                                        ; preds = %land.lhs.true
  %33 = load i32, i32* %ret, align 4, !dbg !5817
  store i32 %33, i32* %retval, align 4, !dbg !5818
  br label %return, !dbg !5818

if.end35:                                         ; preds = %land.lhs.true, %if.end29
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5819
  %call36 = call i32 @get_bits(%struct.GetBitContext* %34, i32 2), !dbg !5820
  store i32 %call36, i32* %ep_config, align 4, !dbg !5821
  %35 = load i32, i32* %ep_config, align 4, !dbg !5822
  %tobool37 = icmp ne i32 %35, 0, !dbg !5822
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !5824

if.then38:                                        ; preds = %if.end35
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5825
  %37 = bitcast %struct.AVCodecContext* %36 to i8*, !dbg !5825
  %38 = load i32, i32* %ep_config, align 4, !dbg !5827
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %37, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i32 0, i32 0), i32 %38), !dbg !5828
  store i32 -1163346256, i32* %retval, align 4, !dbg !5829
  br label %return, !dbg !5829

if.end39:                                         ; preds = %if.end35
  store i32 0, i32* %retval, align 4, !dbg !5830
  br label %return, !dbg !5830

return:                                           ; preds = %if.end39, %if.then38, %if.then34, %if.then28, %if.then23, %if.then7, %if.then3, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !5831
  ret i32 %39, !dbg !5831
}

declare void @avpriv_report_missing_feature(i8*, i8*, ...) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #4 !dbg !5832 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5837, metadata !2068), !dbg !5838
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5839
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5840
  %1 = load i32, i32* %index, align 8, !dbg !5840
  ret i32 %1, !dbg !5841
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #4 !dbg !5842 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5845, metadata !2068), !dbg !5846
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5847, metadata !2068), !dbg !5848
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5849
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5850
  %1 = load i32, i32* %index1, align 8, !dbg !5850
  store i32 %1, i32* %index, align 4, !dbg !5848
  call void @llvm.dbg.declare(metadata i8* %result, metadata !5851, metadata !2068), !dbg !5852
  %2 = load i32, i32* %index, align 4, !dbg !5853
  %shr = lshr i32 %2, 3, !dbg !5854
  %idxprom = zext i32 %shr to i64, !dbg !5855
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5855
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !5856
  %4 = load i8*, i8** %buffer, align 8, !dbg !5856
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !5855
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5855
  store i8 %5, i8* %result, align 1, !dbg !5852
  %6 = load i32, i32* %index, align 4, !dbg !5857
  %and = and i32 %6, 7, !dbg !5858
  %7 = load i8, i8* %result, align 1, !dbg !5859
  %conv = zext i8 %7 to i32, !dbg !5859
  %shl = shl i32 %conv, %and, !dbg !5859
  %conv2 = trunc i32 %shl to i8, !dbg !5859
  store i8 %conv2, i8* %result, align 1, !dbg !5859
  %8 = load i8, i8* %result, align 1, !dbg !5860
  %conv3 = zext i8 %8 to i32, !dbg !5860
  %shr4 = ashr i32 %conv3, 7, !dbg !5860
  %conv5 = trunc i32 %shr4 to i8, !dbg !5860
  store i8 %conv5, i8* %result, align 1, !dbg !5860
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5861
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !5863
  %10 = load i32, i32* %index6, align 8, !dbg !5863
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5864
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !5865
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5865
  %cmp = icmp slt i32 %10, %12, !dbg !5866
  br i1 %cmp, label %if.then, label %if.end, !dbg !5867

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !5868
  %inc = add i32 %13, 1, !dbg !5868
  store i32 %inc, i32* %index, align 4, !dbg !5868
  br label %if.end, !dbg !5869

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !5870
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5871
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !5872
  store i32 %14, i32* %index8, align 8, !dbg !5873
  %16 = load i8, i8* %result, align 1, !dbg !5874
  %conv9 = zext i8 %16 to i32, !dbg !5874
  ret i32 %conv9, !dbg !5875
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !5876 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5877, metadata !2068), !dbg !5878
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5879, metadata !2068), !dbg !5880
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !5881, metadata !2068), !dbg !5882
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5883
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5884
  %1 = load i32, i32* %index, align 8, !dbg !5884
  store i32 %1, i32* %re_index, align 4, !dbg !5882
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !5885, metadata !2068), !dbg !5886
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !5887, metadata !2068), !dbg !5888
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5889
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !5890
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5890
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !5888
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !5891
  %5 = load i32, i32* %re_index, align 4, !dbg !5892
  %6 = load i32, i32* %n.addr, align 4, !dbg !5893
  %add = add i32 %5, %6, !dbg !5894
  %cmp = icmp ugt i32 %4, %add, !dbg !5895
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5896

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !5897
  %8 = load i32, i32* %n.addr, align 4, !dbg !5899
  %add1 = add i32 %7, %8, !dbg !5900
  br label %cond.end, !dbg !5901

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !5902
  br label %cond.end, !dbg !5904

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !5905
  store i32 %cond, i32* %re_index, align 4, !dbg !5907
  %10 = load i32, i32* %re_index, align 4, !dbg !5908
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5909
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !5910
  store i32 %10, i32* %index2, align 8, !dbg !5911
  ret void, !dbg !5912
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_pce(%struct.AVCodecContext* %avctx, %struct.MPEG4AudioConfig* %m4ac, [3 x i8]* %layout_map, %struct.GetBitContext* %gb, i32 %byte_align_ref) #1 !dbg !5913 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %m4ac.addr = alloca %struct.MPEG4AudioConfig*, align 8
  %layout_map.addr = alloca [3 x i8]*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %byte_align_ref.addr = alloca i32, align 4
  %num_front = alloca i32, align 4
  %num_side = alloca i32, align 4
  %num_back = alloca i32, align 4
  %num_lfe = alloca i32, align 4
  %num_assoc_data = alloca i32, align 4
  %num_cc = alloca i32, align 4
  %sampling_index = alloca i32, align 4
  %comment_len = alloca i32, align 4
  %tags = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5916, metadata !2068), !dbg !5917
  store %struct.MPEG4AudioConfig* %m4ac, %struct.MPEG4AudioConfig** %m4ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac.addr, metadata !5918, metadata !2068), !dbg !5919
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !5920, metadata !2068), !dbg !5921
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5922, metadata !2068), !dbg !5923
  store i32 %byte_align_ref, i32* %byte_align_ref.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_align_ref.addr, metadata !5924, metadata !2068), !dbg !5925
  call void @llvm.dbg.declare(metadata i32* %num_front, metadata !5926, metadata !2068), !dbg !5927
  call void @llvm.dbg.declare(metadata i32* %num_side, metadata !5928, metadata !2068), !dbg !5929
  call void @llvm.dbg.declare(metadata i32* %num_back, metadata !5930, metadata !2068), !dbg !5931
  call void @llvm.dbg.declare(metadata i32* %num_lfe, metadata !5932, metadata !2068), !dbg !5933
  call void @llvm.dbg.declare(metadata i32* %num_assoc_data, metadata !5934, metadata !2068), !dbg !5935
  call void @llvm.dbg.declare(metadata i32* %num_cc, metadata !5936, metadata !2068), !dbg !5937
  call void @llvm.dbg.declare(metadata i32* %sampling_index, metadata !5938, metadata !2068), !dbg !5939
  call void @llvm.dbg.declare(metadata i32* %comment_len, metadata !5940, metadata !2068), !dbg !5941
  call void @llvm.dbg.declare(metadata i32* %tags, metadata !5942, metadata !2068), !dbg !5943
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5944
  call void @skip_bits(%struct.GetBitContext* %0, i32 2), !dbg !5945
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5946
  %call = call i32 @get_bits(%struct.GetBitContext* %1, i32 4), !dbg !5947
  store i32 %call, i32* %sampling_index, align 4, !dbg !5948
  %2 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5949
  %sampling_index1 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %2, i32 0, i32 1, !dbg !5951
  %3 = load i32, i32* %sampling_index1, align 4, !dbg !5951
  %4 = load i32, i32* %sampling_index, align 4, !dbg !5952
  %cmp = icmp ne i32 %3, %4, !dbg !5953
  br i1 %cmp, label %if.then, label %if.end, !dbg !5954

if.then:                                          ; preds = %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5955
  %6 = bitcast %struct.AVCodecContext* %5 to i8*, !dbg !5955
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 24, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.24, i32 0, i32 0)), !dbg !5956
  br label %if.end, !dbg !5956

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5957
  %call2 = call i32 @get_bits(%struct.GetBitContext* %7, i32 4), !dbg !5958
  store i32 %call2, i32* %num_front, align 4, !dbg !5959
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5960
  %call3 = call i32 @get_bits(%struct.GetBitContext* %8, i32 4), !dbg !5961
  store i32 %call3, i32* %num_side, align 4, !dbg !5962
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5963
  %call4 = call i32 @get_bits(%struct.GetBitContext* %9, i32 4), !dbg !5964
  store i32 %call4, i32* %num_back, align 4, !dbg !5965
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5966
  %call5 = call i32 @get_bits(%struct.GetBitContext* %10, i32 2), !dbg !5967
  store i32 %call5, i32* %num_lfe, align 4, !dbg !5968
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5969
  %call6 = call i32 @get_bits(%struct.GetBitContext* %11, i32 3), !dbg !5970
  store i32 %call6, i32* %num_assoc_data, align 4, !dbg !5971
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5972
  %call7 = call i32 @get_bits(%struct.GetBitContext* %12, i32 4), !dbg !5973
  store i32 %call7, i32* %num_cc, align 4, !dbg !5974
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5975
  %call8 = call i32 @get_bits1(%struct.GetBitContext* %13), !dbg !5977
  %tobool = icmp ne i32 %call8, 0, !dbg !5977
  br i1 %tobool, label %if.then9, label %if.end10, !dbg !5978

if.then9:                                         ; preds = %if.end
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5979
  call void @skip_bits(%struct.GetBitContext* %14, i32 4), !dbg !5980
  br label %if.end10, !dbg !5980

if.end10:                                         ; preds = %if.then9, %if.end
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5981
  %call11 = call i32 @get_bits1(%struct.GetBitContext* %15), !dbg !5983
  %tobool12 = icmp ne i32 %call11, 0, !dbg !5983
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !5984

if.then13:                                        ; preds = %if.end10
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5985
  call void @skip_bits(%struct.GetBitContext* %16, i32 4), !dbg !5986
  br label %if.end14, !dbg !5986

if.end14:                                         ; preds = %if.then13, %if.end10
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5987
  %call15 = call i32 @get_bits1(%struct.GetBitContext* %17), !dbg !5989
  %tobool16 = icmp ne i32 %call15, 0, !dbg !5989
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5990

if.then17:                                        ; preds = %if.end14
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5991
  call void @skip_bits(%struct.GetBitContext* %18, i32 3), !dbg !5992
  br label %if.end18, !dbg !5992

if.end18:                                         ; preds = %if.then17, %if.end14
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5993
  %call19 = call i32 @get_bits_left(%struct.GetBitContext* %19), !dbg !5995
  %20 = load i32, i32* %num_front, align 4, !dbg !5996
  %21 = load i32, i32* %num_side, align 4, !dbg !5997
  %add = add nsw i32 %20, %21, !dbg !5998
  %22 = load i32, i32* %num_back, align 4, !dbg !5999
  %add20 = add nsw i32 %add, %22, !dbg !6000
  %23 = load i32, i32* %num_cc, align 4, !dbg !6001
  %add21 = add nsw i32 %add20, %23, !dbg !6002
  %mul = mul nsw i32 5, %add21, !dbg !6003
  %24 = load i32, i32* %num_lfe, align 4, !dbg !6004
  %25 = load i32, i32* %num_assoc_data, align 4, !dbg !6005
  %add22 = add nsw i32 %24, %25, !dbg !6006
  %26 = load i32, i32* %num_cc, align 4, !dbg !6007
  %add23 = add nsw i32 %add22, %26, !dbg !6008
  %mul24 = mul nsw i32 4, %add23, !dbg !6009
  %add25 = add nsw i32 %mul, %mul24, !dbg !6010
  %cmp26 = icmp slt i32 %call19, %add25, !dbg !6011
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !6012

if.then27:                                        ; preds = %if.end18
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6013
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !6013
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.25, i32 0, i32 0)), !dbg !6015
  store i32 -1, i32* %retval, align 4, !dbg !6016
  br label %return, !dbg !6016

if.end28:                                         ; preds = %if.end18
  %29 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6017
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6018
  %31 = load i32, i32* %num_front, align 4, !dbg !6019
  call void @decode_channel_map([3 x i8]* %29, i32 1, %struct.GetBitContext* %30, i32 %31), !dbg !6020
  %32 = load i32, i32* %num_front, align 4, !dbg !6021
  store i32 %32, i32* %tags, align 4, !dbg !6022
  %33 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6023
  %34 = load i32, i32* %tags, align 4, !dbg !6024
  %idx.ext = sext i32 %34 to i64, !dbg !6025
  %add.ptr = getelementptr inbounds [3 x i8], [3 x i8]* %33, i64 %idx.ext, !dbg !6025
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6026
  %36 = load i32, i32* %num_side, align 4, !dbg !6027
  call void @decode_channel_map([3 x i8]* %add.ptr, i32 2, %struct.GetBitContext* %35, i32 %36), !dbg !6028
  %37 = load i32, i32* %num_side, align 4, !dbg !6029
  %38 = load i32, i32* %tags, align 4, !dbg !6030
  %add29 = add nsw i32 %38, %37, !dbg !6030
  store i32 %add29, i32* %tags, align 4, !dbg !6030
  %39 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6031
  %40 = load i32, i32* %tags, align 4, !dbg !6032
  %idx.ext30 = sext i32 %40 to i64, !dbg !6033
  %add.ptr31 = getelementptr inbounds [3 x i8], [3 x i8]* %39, i64 %idx.ext30, !dbg !6033
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6034
  %42 = load i32, i32* %num_back, align 4, !dbg !6035
  call void @decode_channel_map([3 x i8]* %add.ptr31, i32 3, %struct.GetBitContext* %41, i32 %42), !dbg !6036
  %43 = load i32, i32* %num_back, align 4, !dbg !6037
  %44 = load i32, i32* %tags, align 4, !dbg !6038
  %add32 = add nsw i32 %44, %43, !dbg !6038
  store i32 %add32, i32* %tags, align 4, !dbg !6038
  %45 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6039
  %46 = load i32, i32* %tags, align 4, !dbg !6040
  %idx.ext33 = sext i32 %46 to i64, !dbg !6041
  %add.ptr34 = getelementptr inbounds [3 x i8], [3 x i8]* %45, i64 %idx.ext33, !dbg !6041
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6042
  %48 = load i32, i32* %num_lfe, align 4, !dbg !6043
  call void @decode_channel_map([3 x i8]* %add.ptr34, i32 4, %struct.GetBitContext* %47, i32 %48), !dbg !6044
  %49 = load i32, i32* %num_lfe, align 4, !dbg !6045
  %50 = load i32, i32* %tags, align 4, !dbg !6046
  %add35 = add nsw i32 %50, %49, !dbg !6046
  store i32 %add35, i32* %tags, align 4, !dbg !6046
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6047
  %52 = load i32, i32* %num_assoc_data, align 4, !dbg !6048
  %mul36 = mul nsw i32 4, %52, !dbg !6049
  call void @skip_bits_long(%struct.GetBitContext* %51, i32 %mul36), !dbg !6050
  %53 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6051
  %54 = load i32, i32* %tags, align 4, !dbg !6052
  %idx.ext37 = sext i32 %54 to i64, !dbg !6053
  %add.ptr38 = getelementptr inbounds [3 x i8], [3 x i8]* %53, i64 %idx.ext37, !dbg !6053
  %55 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6054
  %56 = load i32, i32* %num_cc, align 4, !dbg !6055
  call void @decode_channel_map([3 x i8]* %add.ptr38, i32 5, %struct.GetBitContext* %55, i32 %56), !dbg !6056
  %57 = load i32, i32* %num_cc, align 4, !dbg !6057
  %58 = load i32, i32* %tags, align 4, !dbg !6058
  %add39 = add nsw i32 %58, %57, !dbg !6058
  store i32 %add39, i32* %tags, align 4, !dbg !6058
  %59 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6059
  %60 = load i32, i32* %byte_align_ref.addr, align 4, !dbg !6060
  call void @relative_align_get_bits(%struct.GetBitContext* %59, i32 %60), !dbg !6061
  %61 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6062
  %call40 = call i32 @get_bits(%struct.GetBitContext* %61, i32 8), !dbg !6063
  %mul41 = mul i32 %call40, 8, !dbg !6064
  store i32 %mul41, i32* %comment_len, align 4, !dbg !6065
  %62 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6066
  %call42 = call i32 @get_bits_left(%struct.GetBitContext* %62), !dbg !6068
  %63 = load i32, i32* %comment_len, align 4, !dbg !6069
  %cmp43 = icmp slt i32 %call42, %63, !dbg !6070
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !6071

if.then44:                                        ; preds = %if.end28
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6072
  %65 = bitcast %struct.AVCodecContext* %64 to i8*, !dbg !6072
  call void (i8*, i32, i8*, ...) @av_log(i8* %65, i32 16, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.25, i32 0, i32 0)), !dbg !6074
  store i32 -1094995529, i32* %retval, align 4, !dbg !6075
  br label %return, !dbg !6075

if.end45:                                         ; preds = %if.end28
  %66 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6076
  %67 = load i32, i32* %comment_len, align 4, !dbg !6077
  call void @skip_bits_long(%struct.GetBitContext* %66, i32 %67), !dbg !6078
  %68 = load i32, i32* %tags, align 4, !dbg !6079
  store i32 %68, i32* %retval, align 4, !dbg !6080
  br label %return, !dbg !6080

return:                                           ; preds = %if.end45, %if.then44, %if.then27
  %69 = load i32, i32* %retval, align 4, !dbg !6081
  ret i32 %69, !dbg !6081
}

; Function Attrs: nounwind uwtable
define internal i32 @count_channels([3 x i8]* %layout, i32 %tags) #1 !dbg !6082 {
entry:
  %layout.addr = alloca [3 x i8]*, align 8
  %tags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %sum = alloca i32, align 4
  %syn_ele = alloca i32, align 4
  %pos = alloca i32, align 4
  store [3 x i8]* %layout, [3 x i8]** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout.addr, metadata !6085, metadata !2068), !dbg !6086
  store i32 %tags, i32* %tags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tags.addr, metadata !6087, metadata !2068), !dbg !6088
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6089, metadata !2068), !dbg !6090
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !6091, metadata !2068), !dbg !6092
  store i32 0, i32* %sum, align 4, !dbg !6092
  store i32 0, i32* %i, align 4, !dbg !6093
  br label %for.cond, !dbg !6095

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6096
  %1 = load i32, i32* %tags.addr, align 4, !dbg !6099
  %cmp = icmp slt i32 %0, %1, !dbg !6100
  br i1 %cmp, label %for.body, label %for.end, !dbg !6101

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %syn_ele, metadata !6102, metadata !2068), !dbg !6104
  %2 = load i32, i32* %i, align 4, !dbg !6105
  %idxprom = sext i32 %2 to i64, !dbg !6106
  %3 = load [3 x i8]*, [3 x i8]** %layout.addr, align 8, !dbg !6106
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 %idxprom, !dbg !6106
  %arrayidx1 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 0, !dbg !6106
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !6106
  %conv = zext i8 %4 to i32, !dbg !6106
  store i32 %conv, i32* %syn_ele, align 4, !dbg !6104
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6107, metadata !2068), !dbg !6108
  %5 = load i32, i32* %i, align 4, !dbg !6109
  %idxprom2 = sext i32 %5 to i64, !dbg !6110
  %6 = load [3 x i8]*, [3 x i8]** %layout.addr, align 8, !dbg !6110
  %arrayidx3 = getelementptr inbounds [3 x i8], [3 x i8]* %6, i64 %idxprom2, !dbg !6110
  %arrayidx4 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx3, i64 0, i64 2, !dbg !6110
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !6110
  %conv5 = zext i8 %7 to i32, !dbg !6110
  store i32 %conv5, i32* %pos, align 4, !dbg !6108
  %8 = load i32, i32* %syn_ele, align 4, !dbg !6111
  %cmp6 = icmp eq i32 %8, 1, !dbg !6112
  %conv7 = zext i1 %cmp6 to i32, !dbg !6112
  %add = add nsw i32 1, %conv7, !dbg !6113
  %9 = load i32, i32* %pos, align 4, !dbg !6114
  %cmp8 = icmp ne i32 %9, 0, !dbg !6115
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !6116

land.rhs:                                         ; preds = %for.body
  %10 = load i32, i32* %pos, align 4, !dbg !6117
  %cmp10 = icmp ne i32 %10, 5, !dbg !6119
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %11 = phi i1 [ false, %for.body ], [ %cmp10, %land.rhs ]
  %land.ext = zext i1 %11 to i32, !dbg !6120
  %mul = mul nsw i32 %add, %land.ext, !dbg !6122
  %12 = load i32, i32* %sum, align 4, !dbg !6123
  %add12 = add nsw i32 %12, %mul, !dbg !6123
  store i32 %add12, i32* %sum, align 4, !dbg !6123
  br label %for.inc, !dbg !6124

for.inc:                                          ; preds = %land.end
  %13 = load i32, i32* %i, align 4, !dbg !6125
  %inc = add nsw i32 %13, 1, !dbg !6125
  store i32 %inc, i32* %i, align 4, !dbg !6125
  br label %for.cond, !dbg !6127, !llvm.loop !6128

for.end:                                          ; preds = %for.cond
  %14 = load i32, i32* %sum, align 4, !dbg !6130
  ret i32 %14, !dbg !6131
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !6132 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6135, metadata !2068), !dbg !6140
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6142, metadata !2068), !dbg !6143
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6144, metadata !2068), !dbg !6145
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6146, metadata !2068), !dbg !6147
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !6148, metadata !2068), !dbg !6149
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6150
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6151
  %1 = load i32, i32* %index, align 8, !dbg !6151
  store i32 %1, i32* %re_index, align 4, !dbg !6149
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !6152, metadata !2068), !dbg !6153
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !6154, metadata !2068), !dbg !6155
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6156
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !6157
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6157
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !6155
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6158
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !6159
  %5 = load i8*, i8** %buffer, align 8, !dbg !6159
  %6 = load i32, i32* %re_index, align 4, !dbg !6160
  %shr = lshr i32 %6, 3, !dbg !6161
  %idx.ext = zext i32 %shr to i64, !dbg !6162
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !6162
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !6163
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !6163
  %8 = load i32, i32* %l, align 1, !dbg !6163
  store i32 %8, i32* %x.addr.i, align 4, !dbg !6164
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !6165
  %shl.i = shl i32 %9, 8, !dbg !6166
  %and.i = and i32 %shl.i, 65280, !dbg !6167
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !6168
  %shr.i = lshr i32 %10, 8, !dbg !6169
  %and1.i = and i32 %shr.i, 255, !dbg !6170
  %or.i = or i32 %and.i, %and1.i, !dbg !6171
  %shl2.i = shl i32 %or.i, 16, !dbg !6172
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !6173
  %shr3.i = lshr i32 %11, 16, !dbg !6174
  %shl4.i = shl i32 %shr3.i, 8, !dbg !6175
  %and5.i = and i32 %shl4.i, 65280, !dbg !6176
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !6177
  %shr6.i = lshr i32 %12, 16, !dbg !6178
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !6179
  %and8.i = and i32 %shr7.i, 255, !dbg !6180
  %or9.i = or i32 %and5.i, %and8.i, !dbg !6181
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !6182
  %13 = load i32, i32* %re_index, align 4, !dbg !6183
  %and = and i32 %13, 7, !dbg !6184
  %shl = shl i32 %or10.i, %and, !dbg !6185
  store i32 %shl, i32* %re_cache, align 4, !dbg !6186
  %14 = load i32, i32* %re_cache, align 4, !dbg !6187
  %15 = load i32, i32* %n.addr, align 4, !dbg !6188
  %conv = trunc i32 %15 to i8, !dbg !6188
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !6189
  store i32 %call4, i32* %tmp, align 4, !dbg !6190
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !6191
  %17 = load i32, i32* %re_index, align 4, !dbg !6192
  %18 = load i32, i32* %n.addr, align 4, !dbg !6193
  %add = add i32 %17, %18, !dbg !6194
  %cmp = icmp ugt i32 %16, %add, !dbg !6195
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6196

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !6197
  %20 = load i32, i32* %n.addr, align 4, !dbg !6199
  %add6 = add i32 %19, %20, !dbg !6200
  br label %cond.end, !dbg !6201

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !6202
  br label %cond.end, !dbg !6204

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !6205
  store i32 %cond, i32* %re_index, align 4, !dbg !6207
  %22 = load i32, i32* %re_index, align 4, !dbg !6208
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6209
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !6210
  store i32 %22, i32* %index7, align 8, !dbg !6211
  %24 = load i32, i32* %tmp, align 4, !dbg !6212
  ret i32 %24, !dbg !6213
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits1(%struct.GetBitContext* %s) #4 !dbg !6214 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6217, metadata !2068), !dbg !6218
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6219
  call void @skip_bits(%struct.GetBitContext* %0, i32 1), !dbg !6220
  ret void, !dbg !6221
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #4 !dbg !6222 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6225, metadata !2068), !dbg !6226
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6227
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !6228
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !6228
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6229
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !6230
  %sub = sub nsw i32 %1, %call, !dbg !6231
  ret i32 %sub, !dbg !6232
}

; Function Attrs: nounwind uwtable
define internal void @decode_channel_map([3 x i8]* %layout_map, i32 %type, %struct.GetBitContext* %gb, i32 %n) #1 !dbg !6233 {
entry:
  %layout_map.addr = alloca [3 x i8]*, align 8
  %type.addr = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %syn_ele = alloca i32, align 4
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !6236, metadata !2068), !dbg !6237
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6238, metadata !2068), !dbg !6239
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6240, metadata !2068), !dbg !6241
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6242, metadata !2068), !dbg !6243
  br label %while.cond, !dbg !6244

while.cond:                                       ; preds = %sw.epilog, %entry
  %0 = load i32, i32* %n.addr, align 4, !dbg !6245
  %dec = add nsw i32 %0, -1, !dbg !6245
  store i32 %dec, i32* %n.addr, align 4, !dbg !6245
  %tobool = icmp ne i32 %0, 0, !dbg !6247
  br i1 %tobool, label %while.body, label %while.end, !dbg !6247

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %syn_ele, metadata !6248, metadata !2068), !dbg !6250
  %1 = load i32, i32* %type.addr, align 4, !dbg !6251
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb
    i32 5, label %sw.bb1
    i32 4, label %sw.bb2
  ], !dbg !6252

sw.bb:                                            ; preds = %while.body, %while.body, %while.body
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6253
  %call = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !6255
  store i32 %call, i32* %syn_ele, align 4, !dbg !6256
  br label %sw.epilog, !dbg !6257

sw.bb1:                                           ; preds = %while.body
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6258
  call void @skip_bits1(%struct.GetBitContext* %3), !dbg !6259
  store i32 2, i32* %syn_ele, align 4, !dbg !6260
  br label %sw.epilog, !dbg !6261

sw.bb2:                                           ; preds = %while.body
  store i32 3, i32* %syn_ele, align 4, !dbg !6262
  br label %sw.epilog, !dbg !6263

sw.default:                                       ; preds = %while.body
  br label %do.body, !dbg !6264, !llvm.loop !6265

do.body:                                          ; preds = %sw.default
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 713), !dbg !6266
  call void @abort() #11, !dbg !6271
  unreachable, !dbg !6273

do.end:                                           ; No predecessors!
  br label %sw.epilog, !dbg !6274

sw.epilog:                                        ; preds = %do.end, %sw.bb2, %sw.bb1, %sw.bb
  %4 = load i32, i32* %syn_ele, align 4, !dbg !6275
  %conv = trunc i32 %4 to i8, !dbg !6275
  %5 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6276
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %5, i64 0, !dbg !6276
  %arrayidx3 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 0, !dbg !6276
  store i8 %conv, i8* %arrayidx3, align 1, !dbg !6277
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6278
  %call4 = call i32 @get_bits(%struct.GetBitContext* %6, i32 4), !dbg !6279
  %conv5 = trunc i32 %call4 to i8, !dbg !6279
  %7 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6280
  %arrayidx6 = getelementptr inbounds [3 x i8], [3 x i8]* %7, i64 0, !dbg !6280
  %arrayidx7 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx6, i64 0, i64 1, !dbg !6280
  store i8 %conv5, i8* %arrayidx7, align 1, !dbg !6281
  %8 = load i32, i32* %type.addr, align 4, !dbg !6282
  %conv8 = trunc i32 %8 to i8, !dbg !6282
  %9 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6283
  %arrayidx9 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, !dbg !6283
  %arrayidx10 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx9, i64 0, i64 2, !dbg !6283
  store i8 %conv8, i8* %arrayidx10, align 1, !dbg !6284
  %10 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6285
  %incdec.ptr = getelementptr inbounds [3 x i8], [3 x i8]* %10, i32 1, !dbg !6285
  store [3 x i8]* %incdec.ptr, [3 x i8]** %layout_map.addr, align 8, !dbg !6285
  br label %while.cond, !dbg !6286, !llvm.loop !6288

while.end:                                        ; preds = %while.cond
  ret void, !dbg !6289
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @relative_align_get_bits(%struct.GetBitContext* %gb, i32 %reference_position) #4 !dbg !6290 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %reference_position.addr = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6291, metadata !2068), !dbg !6292
  store i32 %reference_position, i32* %reference_position.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reference_position.addr, metadata !6293, metadata !2068), !dbg !6294
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6295, metadata !2068), !dbg !6296
  %0 = load i32, i32* %reference_position.addr, align 4, !dbg !6297
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6298
  %call = call i32 @get_bits_count(%struct.GetBitContext* %1), !dbg !6299
  %sub = sub nsw i32 %0, %call, !dbg !6300
  %and = and i32 %sub, 7, !dbg !6301
  store i32 %and, i32* %n, align 4, !dbg !6296
  %2 = load i32, i32* %n, align 4, !dbg !6302
  %tobool = icmp ne i32 %2, 0, !dbg !6302
  br i1 %tobool, label %if.then, label %if.end, !dbg !6304

if.then:                                          ; preds = %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6305
  %4 = load i32, i32* %n, align 4, !dbg !6306
  call void @skip_bits(%struct.GetBitContext* %3, i32 %4), !dbg !6307
  br label %if.end, !dbg !6307

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6308
}

; Function Attrs: noreturn nounwind
declare void @abort() #6

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #4 !dbg !6309 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !6313, metadata !2068), !dbg !6314
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !6315, metadata !2068), !dbg !6316
  %0 = load i32, i32* %a.addr, align 4, !dbg !6317
  %1 = load i8, i8* %s.addr, align 1, !dbg !6318
  %conv = sext i8 %1 to i32, !dbg !6318
  %sub = sub nsw i32 0, %conv, !dbg !6319
  %conv1 = trunc i32 %sub to i8, !dbg !6320
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !6317, !srcloc !6321
  store i32 %2, i32* %a.addr, align 4, !dbg !6317
  %3 = load i32, i32* %a.addr, align 4, !dbg !6322
  ret i32 %3, !dbg !6323
}

declare void @avpriv_request_sample(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i64 @sniff_channel_order([3 x i8]* %layout_map, i32 %tags) #1 !dbg !6324 {
entry:
  %retval = alloca i64, align 8
  %layout_map.addr = alloca [3 x i8]*, align 8
  %tags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %total_non_cc_elements = alloca i32, align 4
  %e2c_vec = alloca [64 x %struct.elem_to_channel], align 16
  %num_front_channels = alloca i32, align 4
  %num_side_channels = alloca i32, align 4
  %num_back_channels = alloca i32, align 4
  %layout = alloca i64, align 8
  %.compoundliteral = alloca %struct.elem_to_channel, align 8
  %.compoundliteral85 = alloca %struct.elem_to_channel, align 8
  %.compoundliteral108 = alloca %struct.elem_to_channel, align 8
  %.compoundliteral130 = alloca %struct.elem_to_channel, align 8
  %next_n = alloca i32, align 4
  %SWAP_tmp = alloca %struct.elem_to_channel, align 8
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !6327, metadata !2068), !dbg !6328
  store i32 %tags, i32* %tags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tags.addr, metadata !6329, metadata !2068), !dbg !6330
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6331, metadata !2068), !dbg !6332
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6333, metadata !2068), !dbg !6334
  call void @llvm.dbg.declare(metadata i32* %total_non_cc_elements, metadata !6335, metadata !2068), !dbg !6336
  call void @llvm.dbg.declare(metadata [64 x %struct.elem_to_channel]* %e2c_vec, metadata !6337, metadata !2068), !dbg !6345
  %0 = bitcast [64 x %struct.elem_to_channel]* %e2c_vec to i8*, !dbg !6345
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 1024, i32 16, i1 false), !dbg !6345
  call void @llvm.dbg.declare(metadata i32* %num_front_channels, metadata !6346, metadata !2068), !dbg !6347
  call void @llvm.dbg.declare(metadata i32* %num_side_channels, metadata !6348, metadata !2068), !dbg !6349
  call void @llvm.dbg.declare(metadata i32* %num_back_channels, metadata !6350, metadata !2068), !dbg !6351
  call void @llvm.dbg.declare(metadata i64* %layout, metadata !6352, metadata !2068), !dbg !6353
  %1 = load i32, i32* %tags.addr, align 4, !dbg !6354
  %conv = sext i32 %1 to i64, !dbg !6354
  %cmp = icmp ult i64 64, %conv, !dbg !6356
  br i1 %cmp, label %if.then, label %if.end, !dbg !6357

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !6358
  br label %return, !dbg !6358

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6359
  %2 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6360
  %3 = load i32, i32* %tags.addr, align 4, !dbg !6361
  %call = call i32 @count_paired_channels([3 x i8]* %2, i32 %3, i32 1, i32* %i), !dbg !6362
  store i32 %call, i32* %num_front_channels, align 4, !dbg !6363
  %4 = load i32, i32* %num_front_channels, align 4, !dbg !6364
  %cmp2 = icmp slt i32 %4, 0, !dbg !6366
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !6367

if.then4:                                         ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !6368
  br label %return, !dbg !6368

if.end5:                                          ; preds = %if.end
  %5 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6369
  %6 = load i32, i32* %tags.addr, align 4, !dbg !6370
  %call6 = call i32 @count_paired_channels([3 x i8]* %5, i32 %6, i32 2, i32* %i), !dbg !6371
  store i32 %call6, i32* %num_side_channels, align 4, !dbg !6372
  %7 = load i32, i32* %num_side_channels, align 4, !dbg !6373
  %cmp7 = icmp slt i32 %7, 0, !dbg !6375
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !6376

if.then9:                                         ; preds = %if.end5
  store i64 0, i64* %retval, align 8, !dbg !6377
  br label %return, !dbg !6377

if.end10:                                         ; preds = %if.end5
  %8 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6378
  %9 = load i32, i32* %tags.addr, align 4, !dbg !6379
  %call11 = call i32 @count_paired_channels([3 x i8]* %8, i32 %9, i32 3, i32* %i), !dbg !6380
  store i32 %call11, i32* %num_back_channels, align 4, !dbg !6381
  %10 = load i32, i32* %num_back_channels, align 4, !dbg !6382
  %cmp12 = icmp slt i32 %10, 0, !dbg !6384
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !6385

if.then14:                                        ; preds = %if.end10
  store i64 0, i64* %retval, align 8, !dbg !6386
  br label %return, !dbg !6386

if.end15:                                         ; preds = %if.end10
  %11 = load i32, i32* %num_side_channels, align 4, !dbg !6387
  %cmp16 = icmp eq i32 %11, 0, !dbg !6389
  br i1 %cmp16, label %land.lhs.true, label %if.end21, !dbg !6390

land.lhs.true:                                    ; preds = %if.end15
  %12 = load i32, i32* %num_back_channels, align 4, !dbg !6391
  %cmp18 = icmp sge i32 %12, 4, !dbg !6393
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !6394

if.then20:                                        ; preds = %land.lhs.true
  store i32 2, i32* %num_side_channels, align 4, !dbg !6395
  %13 = load i32, i32* %num_back_channels, align 4, !dbg !6397
  %sub = sub nsw i32 %13, 2, !dbg !6397
  store i32 %sub, i32* %num_back_channels, align 4, !dbg !6397
  br label %if.end21, !dbg !6398

if.end21:                                         ; preds = %if.then20, %land.lhs.true, %if.end15
  store i32 0, i32* %i, align 4, !dbg !6399
  %14 = load i32, i32* %num_front_channels, align 4, !dbg !6400
  %and = and i32 %14, 1, !dbg !6402
  %tobool = icmp ne i32 %and, 0, !dbg !6402
  br i1 %tobool, label %if.then22, label %if.end26, !dbg !6403

if.then22:                                        ; preds = %if.end21
  %15 = load i32, i32* %i, align 4, !dbg !6404
  %idxprom = sext i32 %15 to i64, !dbg !6406
  %arrayidx = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom, !dbg !6406
  %av_position = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 0, !dbg !6407
  store i64 4, i64* %av_position, align 8, !dbg !6407
  %syn_ele = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 1, !dbg !6407
  store i8 0, i8* %syn_ele, align 8, !dbg !6407
  %elem_id = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 2, !dbg !6407
  %16 = load i32, i32* %i, align 4, !dbg !6408
  %idxprom23 = sext i32 %16 to i64, !dbg !6409
  %17 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6409
  %arrayidx24 = getelementptr inbounds [3 x i8], [3 x i8]* %17, i64 %idxprom23, !dbg !6409
  %arrayidx25 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx24, i64 0, i64 1, !dbg !6409
  %18 = load i8, i8* %arrayidx25, align 1, !dbg !6409
  store i8 %18, i8* %elem_id, align 1, !dbg !6407
  %aac_position = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 3, !dbg !6407
  store i8 1, i8* %aac_position, align 2, !dbg !6407
  %19 = bitcast %struct.elem_to_channel* %arrayidx to i8*, !dbg !6410
  %20 = bitcast %struct.elem_to_channel* %.compoundliteral to i8*, !dbg !6410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 16, i32 8, i1 false), !dbg !6410
  %21 = load i32, i32* %i, align 4, !dbg !6411
  %inc = add nsw i32 %21, 1, !dbg !6411
  store i32 %inc, i32* %i, align 4, !dbg !6411
  %22 = load i32, i32* %num_front_channels, align 4, !dbg !6412
  %dec = add nsw i32 %22, -1, !dbg !6412
  store i32 %dec, i32* %num_front_channels, align 4, !dbg !6412
  br label %if.end26, !dbg !6413

if.end26:                                         ; preds = %if.then22, %if.end21
  %23 = load i32, i32* %num_front_channels, align 4, !dbg !6414
  %cmp27 = icmp sge i32 %23, 4, !dbg !6416
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !6417

if.then29:                                        ; preds = %if.end26
  %arraydecay = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6418
  %24 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6420
  %25 = load i32, i32* %i, align 4, !dbg !6421
  %call30 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay, [3 x i8]* %24, i32 %25, i64 64, i64 128, i32 1), !dbg !6422
  %26 = load i32, i32* %i, align 4, !dbg !6423
  %add = add nsw i32 %26, %call30, !dbg !6423
  store i32 %add, i32* %i, align 4, !dbg !6423
  %27 = load i32, i32* %num_front_channels, align 4, !dbg !6424
  %sub31 = sub nsw i32 %27, 2, !dbg !6424
  store i32 %sub31, i32* %num_front_channels, align 4, !dbg !6424
  br label %if.end32, !dbg !6425

if.end32:                                         ; preds = %if.then29, %if.end26
  %28 = load i32, i32* %num_front_channels, align 4, !dbg !6426
  %cmp33 = icmp sge i32 %28, 2, !dbg !6428
  br i1 %cmp33, label %if.then35, label %if.end40, !dbg !6429

if.then35:                                        ; preds = %if.end32
  %arraydecay36 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6430
  %29 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6432
  %30 = load i32, i32* %i, align 4, !dbg !6433
  %call37 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay36, [3 x i8]* %29, i32 %30, i64 1, i64 2, i32 1), !dbg !6434
  %31 = load i32, i32* %i, align 4, !dbg !6435
  %add38 = add nsw i32 %31, %call37, !dbg !6435
  store i32 %add38, i32* %i, align 4, !dbg !6435
  %32 = load i32, i32* %num_front_channels, align 4, !dbg !6436
  %sub39 = sub nsw i32 %32, 2, !dbg !6436
  store i32 %sub39, i32* %num_front_channels, align 4, !dbg !6436
  br label %if.end40, !dbg !6437

if.end40:                                         ; preds = %if.then35, %if.end32
  br label %while.cond, !dbg !6438

while.cond:                                       ; preds = %while.body, %if.end40
  %33 = load i32, i32* %num_front_channels, align 4, !dbg !6439
  %cmp41 = icmp sge i32 %33, 2, !dbg !6441
  br i1 %cmp41, label %while.body, label %while.end, !dbg !6442

while.body:                                       ; preds = %while.cond
  %arraydecay43 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6443
  %34 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6445
  %35 = load i32, i32* %i, align 4, !dbg !6446
  %call44 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay43, [3 x i8]* %34, i32 %35, i64 -1, i64 -1, i32 1), !dbg !6447
  %36 = load i32, i32* %i, align 4, !dbg !6448
  %add45 = add nsw i32 %36, %call44, !dbg !6448
  store i32 %add45, i32* %i, align 4, !dbg !6448
  %37 = load i32, i32* %num_front_channels, align 4, !dbg !6449
  %sub46 = sub nsw i32 %37, 2, !dbg !6449
  store i32 %sub46, i32* %num_front_channels, align 4, !dbg !6449
  br label %while.cond, !dbg !6450, !llvm.loop !6452

while.end:                                        ; preds = %while.cond
  %38 = load i32, i32* %num_side_channels, align 4, !dbg !6453
  %cmp47 = icmp sge i32 %38, 2, !dbg !6455
  br i1 %cmp47, label %if.then49, label %if.end54, !dbg !6456

if.then49:                                        ; preds = %while.end
  %arraydecay50 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6457
  %39 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6459
  %40 = load i32, i32* %i, align 4, !dbg !6460
  %call51 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay50, [3 x i8]* %39, i32 %40, i64 512, i64 1024, i32 1), !dbg !6461
  %41 = load i32, i32* %i, align 4, !dbg !6462
  %add52 = add nsw i32 %41, %call51, !dbg !6462
  store i32 %add52, i32* %i, align 4, !dbg !6462
  %42 = load i32, i32* %num_side_channels, align 4, !dbg !6463
  %sub53 = sub nsw i32 %42, 2, !dbg !6463
  store i32 %sub53, i32* %num_side_channels, align 4, !dbg !6463
  br label %if.end54, !dbg !6464

if.end54:                                         ; preds = %if.then49, %while.end
  br label %while.cond55, !dbg !6465

while.cond55:                                     ; preds = %while.body58, %if.end54
  %43 = load i32, i32* %num_side_channels, align 4, !dbg !6466
  %cmp56 = icmp sge i32 %43, 2, !dbg !6467
  br i1 %cmp56, label %while.body58, label %while.end63, !dbg !6468

while.body58:                                     ; preds = %while.cond55
  %arraydecay59 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6469
  %44 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6471
  %45 = load i32, i32* %i, align 4, !dbg !6472
  %call60 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay59, [3 x i8]* %44, i32 %45, i64 -1, i64 -1, i32 2), !dbg !6473
  %46 = load i32, i32* %i, align 4, !dbg !6474
  %add61 = add nsw i32 %46, %call60, !dbg !6474
  store i32 %add61, i32* %i, align 4, !dbg !6474
  %47 = load i32, i32* %num_side_channels, align 4, !dbg !6475
  %sub62 = sub nsw i32 %47, 2, !dbg !6475
  store i32 %sub62, i32* %num_side_channels, align 4, !dbg !6475
  br label %while.cond55, !dbg !6476, !llvm.loop !6477

while.end63:                                      ; preds = %while.cond55
  br label %while.cond64, !dbg !6478

while.cond64:                                     ; preds = %while.body67, %while.end63
  %48 = load i32, i32* %num_back_channels, align 4, !dbg !6479
  %cmp65 = icmp sge i32 %48, 4, !dbg !6480
  br i1 %cmp65, label %while.body67, label %while.end72, !dbg !6481

while.body67:                                     ; preds = %while.cond64
  %arraydecay68 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6482
  %49 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6484
  %50 = load i32, i32* %i, align 4, !dbg !6485
  %call69 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay68, [3 x i8]* %49, i32 %50, i64 -1, i64 -1, i32 3), !dbg !6486
  %51 = load i32, i32* %i, align 4, !dbg !6487
  %add70 = add nsw i32 %51, %call69, !dbg !6487
  store i32 %add70, i32* %i, align 4, !dbg !6487
  %52 = load i32, i32* %num_back_channels, align 4, !dbg !6488
  %sub71 = sub nsw i32 %52, 2, !dbg !6488
  store i32 %sub71, i32* %num_back_channels, align 4, !dbg !6488
  br label %while.cond64, !dbg !6489, !llvm.loop !6490

while.end72:                                      ; preds = %while.cond64
  %53 = load i32, i32* %num_back_channels, align 4, !dbg !6491
  %cmp73 = icmp sge i32 %53, 2, !dbg !6493
  br i1 %cmp73, label %if.then75, label %if.end80, !dbg !6494

if.then75:                                        ; preds = %while.end72
  %arraydecay76 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6495
  %54 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6497
  %55 = load i32, i32* %i, align 4, !dbg !6498
  %call77 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay76, [3 x i8]* %54, i32 %55, i64 16, i64 32, i32 3), !dbg !6499
  %56 = load i32, i32* %i, align 4, !dbg !6500
  %add78 = add nsw i32 %56, %call77, !dbg !6500
  store i32 %add78, i32* %i, align 4, !dbg !6500
  %57 = load i32, i32* %num_back_channels, align 4, !dbg !6501
  %sub79 = sub nsw i32 %57, 2, !dbg !6501
  store i32 %sub79, i32* %num_back_channels, align 4, !dbg !6501
  br label %if.end80, !dbg !6502

if.end80:                                         ; preds = %if.then75, %while.end72
  %58 = load i32, i32* %num_back_channels, align 4, !dbg !6503
  %tobool81 = icmp ne i32 %58, 0, !dbg !6503
  br i1 %tobool81, label %if.then82, label %if.end95, !dbg !6505

if.then82:                                        ; preds = %if.end80
  %59 = load i32, i32* %i, align 4, !dbg !6506
  %idxprom83 = sext i32 %59 to i64, !dbg !6508
  %arrayidx84 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom83, !dbg !6508
  %av_position86 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral85, i32 0, i32 0, !dbg !6509
  store i64 256, i64* %av_position86, align 8, !dbg !6509
  %syn_ele87 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral85, i32 0, i32 1, !dbg !6509
  store i8 0, i8* %syn_ele87, align 8, !dbg !6509
  %elem_id88 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral85, i32 0, i32 2, !dbg !6509
  %60 = load i32, i32* %i, align 4, !dbg !6510
  %idxprom89 = sext i32 %60 to i64, !dbg !6511
  %61 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6511
  %arrayidx90 = getelementptr inbounds [3 x i8], [3 x i8]* %61, i64 %idxprom89, !dbg !6511
  %arrayidx91 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx90, i64 0, i64 1, !dbg !6511
  %62 = load i8, i8* %arrayidx91, align 1, !dbg !6511
  store i8 %62, i8* %elem_id88, align 1, !dbg !6509
  %aac_position92 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral85, i32 0, i32 3, !dbg !6509
  store i8 3, i8* %aac_position92, align 2, !dbg !6509
  %63 = bitcast %struct.elem_to_channel* %arrayidx84 to i8*, !dbg !6512
  %64 = bitcast %struct.elem_to_channel* %.compoundliteral85 to i8*, !dbg !6512
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 16, i32 8, i1 false), !dbg !6512
  %65 = load i32, i32* %i, align 4, !dbg !6513
  %inc93 = add nsw i32 %65, 1, !dbg !6513
  store i32 %inc93, i32* %i, align 4, !dbg !6513
  %66 = load i32, i32* %num_back_channels, align 4, !dbg !6514
  %dec94 = add nsw i32 %66, -1, !dbg !6514
  store i32 %dec94, i32* %num_back_channels, align 4, !dbg !6514
  br label %if.end95, !dbg !6515

if.end95:                                         ; preds = %if.then82, %if.end80
  %67 = load i32, i32* %i, align 4, !dbg !6516
  %68 = load i32, i32* %tags.addr, align 4, !dbg !6518
  %cmp96 = icmp slt i32 %67, %68, !dbg !6519
  br i1 %cmp96, label %land.lhs.true98, label %if.end117, !dbg !6520

land.lhs.true98:                                  ; preds = %if.end95
  %69 = load i32, i32* %i, align 4, !dbg !6521
  %idxprom99 = sext i32 %69 to i64, !dbg !6523
  %70 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6523
  %arrayidx100 = getelementptr inbounds [3 x i8], [3 x i8]* %70, i64 %idxprom99, !dbg !6523
  %arrayidx101 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx100, i64 0, i64 2, !dbg !6523
  %71 = load i8, i8* %arrayidx101, align 1, !dbg !6523
  %conv102 = zext i8 %71 to i32, !dbg !6523
  %cmp103 = icmp eq i32 %conv102, 4, !dbg !6524
  br i1 %cmp103, label %if.then105, label %if.end117, !dbg !6525

if.then105:                                       ; preds = %land.lhs.true98
  %72 = load i32, i32* %i, align 4, !dbg !6526
  %idxprom106 = sext i32 %72 to i64, !dbg !6528
  %arrayidx107 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom106, !dbg !6528
  %av_position109 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral108, i32 0, i32 0, !dbg !6529
  store i64 8, i64* %av_position109, align 8, !dbg !6529
  %syn_ele110 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral108, i32 0, i32 1, !dbg !6529
  store i8 3, i8* %syn_ele110, align 8, !dbg !6529
  %elem_id111 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral108, i32 0, i32 2, !dbg !6529
  %73 = load i32, i32* %i, align 4, !dbg !6530
  %idxprom112 = sext i32 %73 to i64, !dbg !6531
  %74 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6531
  %arrayidx113 = getelementptr inbounds [3 x i8], [3 x i8]* %74, i64 %idxprom112, !dbg !6531
  %arrayidx114 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx113, i64 0, i64 1, !dbg !6531
  %75 = load i8, i8* %arrayidx114, align 1, !dbg !6531
  store i8 %75, i8* %elem_id111, align 1, !dbg !6529
  %aac_position115 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral108, i32 0, i32 3, !dbg !6529
  store i8 4, i8* %aac_position115, align 2, !dbg !6529
  %76 = bitcast %struct.elem_to_channel* %arrayidx107 to i8*, !dbg !6532
  %77 = bitcast %struct.elem_to_channel* %.compoundliteral108 to i8*, !dbg !6532
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 16, i32 8, i1 false), !dbg !6532
  %78 = load i32, i32* %i, align 4, !dbg !6533
  %inc116 = add nsw i32 %78, 1, !dbg !6533
  store i32 %inc116, i32* %i, align 4, !dbg !6533
  br label %if.end117, !dbg !6534

if.end117:                                        ; preds = %if.then105, %land.lhs.true98, %if.end95
  br label %while.cond118, !dbg !6535

while.cond118:                                    ; preds = %while.body127, %if.end117
  %79 = load i32, i32* %i, align 4, !dbg !6536
  %80 = load i32, i32* %tags.addr, align 4, !dbg !6537
  %cmp119 = icmp slt i32 %79, %80, !dbg !6538
  br i1 %cmp119, label %land.rhs, label %land.end, !dbg !6539

land.rhs:                                         ; preds = %while.cond118
  %81 = load i32, i32* %i, align 4, !dbg !6540
  %idxprom121 = sext i32 %81 to i64, !dbg !6541
  %82 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6541
  %arrayidx122 = getelementptr inbounds [3 x i8], [3 x i8]* %82, i64 %idxprom121, !dbg !6541
  %arrayidx123 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx122, i64 0, i64 2, !dbg !6541
  %83 = load i8, i8* %arrayidx123, align 1, !dbg !6541
  %conv124 = zext i8 %83 to i32, !dbg !6541
  %cmp125 = icmp eq i32 %conv124, 4, !dbg !6542
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond118
  %84 = phi i1 [ false, %while.cond118 ], [ %cmp125, %land.rhs ]
  br i1 %84, label %while.body127, label %while.end139, !dbg !6543

while.body127:                                    ; preds = %land.end
  %85 = load i32, i32* %i, align 4, !dbg !6545
  %idxprom128 = sext i32 %85 to i64, !dbg !6547
  %arrayidx129 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom128, !dbg !6547
  %av_position131 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral130, i32 0, i32 0, !dbg !6548
  store i64 -1, i64* %av_position131, align 8, !dbg !6548
  %syn_ele132 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral130, i32 0, i32 1, !dbg !6548
  store i8 3, i8* %syn_ele132, align 8, !dbg !6548
  %elem_id133 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral130, i32 0, i32 2, !dbg !6548
  %86 = load i32, i32* %i, align 4, !dbg !6549
  %idxprom134 = sext i32 %86 to i64, !dbg !6550
  %87 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6550
  %arrayidx135 = getelementptr inbounds [3 x i8], [3 x i8]* %87, i64 %idxprom134, !dbg !6550
  %arrayidx136 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx135, i64 0, i64 1, !dbg !6550
  %88 = load i8, i8* %arrayidx136, align 1, !dbg !6550
  store i8 %88, i8* %elem_id133, align 1, !dbg !6548
  %aac_position137 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral130, i32 0, i32 3, !dbg !6548
  store i8 4, i8* %aac_position137, align 2, !dbg !6548
  %89 = bitcast %struct.elem_to_channel* %arrayidx129 to i8*, !dbg !6551
  %90 = bitcast %struct.elem_to_channel* %.compoundliteral130 to i8*, !dbg !6551
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 16, i32 8, i1 false), !dbg !6551
  %91 = load i32, i32* %i, align 4, !dbg !6552
  %inc138 = add nsw i32 %91, 1, !dbg !6552
  store i32 %inc138, i32* %i, align 4, !dbg !6552
  br label %while.cond118, !dbg !6553, !llvm.loop !6555

while.end139:                                     ; preds = %land.end
  %92 = load i32, i32* %i, align 4, !dbg !6556
  store i32 %92, i32* %n, align 4, !dbg !6557
  store i32 %92, i32* %total_non_cc_elements, align 4, !dbg !6558
  br label %do.body, !dbg !6559, !llvm.loop !6560

do.body:                                          ; preds = %do.cond, %while.end139
  call void @llvm.dbg.declare(metadata i32* %next_n, metadata !6561, metadata !2068), !dbg !6563
  store i32 0, i32* %next_n, align 4, !dbg !6563
  store i32 1, i32* %i, align 4, !dbg !6564
  br label %for.cond, !dbg !6566

for.cond:                                         ; preds = %for.inc, %do.body
  %93 = load i32, i32* %i, align 4, !dbg !6567
  %94 = load i32, i32* %n, align 4, !dbg !6570
  %cmp140 = icmp slt i32 %93, %94, !dbg !6571
  br i1 %cmp140, label %for.body, label %for.end, !dbg !6572

for.body:                                         ; preds = %for.cond
  %95 = load i32, i32* %i, align 4, !dbg !6573
  %sub142 = sub nsw i32 %95, 1, !dbg !6575
  %idxprom143 = sext i32 %sub142 to i64, !dbg !6576
  %arrayidx144 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom143, !dbg !6576
  %av_position145 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx144, i32 0, i32 0, !dbg !6577
  %96 = load i64, i64* %av_position145, align 16, !dbg !6577
  %97 = load i32, i32* %i, align 4, !dbg !6578
  %idxprom146 = sext i32 %97 to i64, !dbg !6579
  %arrayidx147 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom146, !dbg !6579
  %av_position148 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx147, i32 0, i32 0, !dbg !6580
  %98 = load i64, i64* %av_position148, align 16, !dbg !6580
  %cmp149 = icmp ugt i64 %96, %98, !dbg !6581
  br i1 %cmp149, label %if.then151, label %if.end163, !dbg !6582

if.then151:                                       ; preds = %for.body
  br label %do.body152, !dbg !6583, !llvm.loop !6585

do.body152:                                       ; preds = %if.then151
  call void @llvm.dbg.declare(metadata %struct.elem_to_channel* %SWAP_tmp, metadata !6586, metadata !2068), !dbg !6588
  %99 = load i32, i32* %i, align 4, !dbg !6589
  %idxprom153 = sext i32 %99 to i64, !dbg !6591
  %arrayidx154 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom153, !dbg !6591
  %100 = bitcast %struct.elem_to_channel* %SWAP_tmp to i8*, !dbg !6591
  %101 = bitcast %struct.elem_to_channel* %arrayidx154 to i8*, !dbg !6591
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 16, i32 8, i1 false), !dbg !6591
  %102 = load i32, i32* %i, align 4, !dbg !6592
  %idxprom155 = sext i32 %102 to i64, !dbg !6593
  %arrayidx156 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom155, !dbg !6593
  %103 = load i32, i32* %i, align 4, !dbg !6594
  %sub157 = sub nsw i32 %103, 1, !dbg !6595
  %idxprom158 = sext i32 %sub157 to i64, !dbg !6596
  %arrayidx159 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom158, !dbg !6596
  %104 = bitcast %struct.elem_to_channel* %arrayidx156 to i8*, !dbg !6596
  %105 = bitcast %struct.elem_to_channel* %arrayidx159 to i8*, !dbg !6596
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 16, i32 16, i1 false), !dbg !6597
  %106 = load i32, i32* %i, align 4, !dbg !6599
  %sub160 = sub nsw i32 %106, 1, !dbg !6600
  %idxprom161 = sext i32 %sub160 to i64, !dbg !6601
  %arrayidx162 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom161, !dbg !6601
  %107 = bitcast %struct.elem_to_channel* %arrayidx162 to i8*, !dbg !6602
  %108 = bitcast %struct.elem_to_channel* %SWAP_tmp to i8*, !dbg !6602
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 16, i32 8, i1 false), !dbg !6603
  br label %do.end, !dbg !6605

do.end:                                           ; preds = %do.body152
  %109 = load i32, i32* %i, align 4, !dbg !6606
  store i32 %109, i32* %next_n, align 4, !dbg !6607
  br label %if.end163, !dbg !6608

if.end163:                                        ; preds = %do.end, %for.body
  br label %for.inc, !dbg !6609

for.inc:                                          ; preds = %if.end163
  %110 = load i32, i32* %i, align 4, !dbg !6611
  %inc164 = add nsw i32 %110, 1, !dbg !6611
  store i32 %inc164, i32* %i, align 4, !dbg !6611
  br label %for.cond, !dbg !6613, !llvm.loop !6614

for.end:                                          ; preds = %for.cond
  %111 = load i32, i32* %next_n, align 4, !dbg !6616
  store i32 %111, i32* %n, align 4, !dbg !6617
  br label %do.cond, !dbg !6618

do.cond:                                          ; preds = %for.end
  %112 = load i32, i32* %n, align 4, !dbg !6619
  %cmp165 = icmp sgt i32 %112, 0, !dbg !6620
  br i1 %cmp165, label %do.body, label %do.end167, !dbg !6621, !llvm.loop !6560

do.end167:                                        ; preds = %do.cond
  store i64 0, i64* %layout, align 8, !dbg !6622
  store i32 0, i32* %i, align 4, !dbg !6623
  br label %for.cond168, !dbg !6625

for.cond168:                                      ; preds = %for.inc200, %do.end167
  %113 = load i32, i32* %i, align 4, !dbg !6626
  %114 = load i32, i32* %total_non_cc_elements, align 4, !dbg !6629
  %cmp169 = icmp slt i32 %113, %114, !dbg !6630
  br i1 %cmp169, label %for.body171, label %for.end202, !dbg !6631

for.body171:                                      ; preds = %for.cond168
  %115 = load i32, i32* %i, align 4, !dbg !6632
  %idxprom172 = sext i32 %115 to i64, !dbg !6634
  %arrayidx173 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom172, !dbg !6634
  %syn_ele174 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx173, i32 0, i32 1, !dbg !6635
  %116 = load i8, i8* %syn_ele174, align 8, !dbg !6635
  %117 = load i32, i32* %i, align 4, !dbg !6636
  %idxprom175 = sext i32 %117 to i64, !dbg !6637
  %118 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6637
  %arrayidx176 = getelementptr inbounds [3 x i8], [3 x i8]* %118, i64 %idxprom175, !dbg !6637
  %arrayidx177 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx176, i64 0, i64 0, !dbg !6637
  store i8 %116, i8* %arrayidx177, align 1, !dbg !6638
  %119 = load i32, i32* %i, align 4, !dbg !6639
  %idxprom178 = sext i32 %119 to i64, !dbg !6640
  %arrayidx179 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom178, !dbg !6640
  %elem_id180 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx179, i32 0, i32 2, !dbg !6641
  %120 = load i8, i8* %elem_id180, align 1, !dbg !6641
  %121 = load i32, i32* %i, align 4, !dbg !6642
  %idxprom181 = sext i32 %121 to i64, !dbg !6643
  %122 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6643
  %arrayidx182 = getelementptr inbounds [3 x i8], [3 x i8]* %122, i64 %idxprom181, !dbg !6643
  %arrayidx183 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx182, i64 0, i64 1, !dbg !6643
  store i8 %120, i8* %arrayidx183, align 1, !dbg !6644
  %123 = load i32, i32* %i, align 4, !dbg !6645
  %idxprom184 = sext i32 %123 to i64, !dbg !6646
  %arrayidx185 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom184, !dbg !6646
  %aac_position186 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx185, i32 0, i32 3, !dbg !6647
  %124 = load i8, i8* %aac_position186, align 2, !dbg !6647
  %125 = load i32, i32* %i, align 4, !dbg !6648
  %idxprom187 = sext i32 %125 to i64, !dbg !6649
  %126 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6649
  %arrayidx188 = getelementptr inbounds [3 x i8], [3 x i8]* %126, i64 %idxprom187, !dbg !6649
  %arrayidx189 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx188, i64 0, i64 2, !dbg !6649
  store i8 %124, i8* %arrayidx189, align 1, !dbg !6650
  %127 = load i32, i32* %i, align 4, !dbg !6651
  %idxprom190 = sext i32 %127 to i64, !dbg !6653
  %arrayidx191 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom190, !dbg !6653
  %av_position192 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx191, i32 0, i32 0, !dbg !6654
  %128 = load i64, i64* %av_position192, align 16, !dbg !6654
  %cmp193 = icmp ne i64 %128, -1, !dbg !6655
  br i1 %cmp193, label %if.then195, label %if.end199, !dbg !6656

if.then195:                                       ; preds = %for.body171
  %129 = load i32, i32* %i, align 4, !dbg !6657
  %idxprom196 = sext i32 %129 to i64, !dbg !6659
  %arrayidx197 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom196, !dbg !6659
  %av_position198 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx197, i32 0, i32 0, !dbg !6660
  %130 = load i64, i64* %av_position198, align 16, !dbg !6660
  %131 = load i64, i64* %layout, align 8, !dbg !6661
  %or = or i64 %131, %130, !dbg !6661
  store i64 %or, i64* %layout, align 8, !dbg !6661
  br label %if.end199, !dbg !6662

if.end199:                                        ; preds = %if.then195, %for.body171
  br label %for.inc200, !dbg !6663

for.inc200:                                       ; preds = %if.end199
  %132 = load i32, i32* %i, align 4, !dbg !6664
  %inc201 = add nsw i32 %132, 1, !dbg !6664
  store i32 %inc201, i32* %i, align 4, !dbg !6664
  br label %for.cond168, !dbg !6666, !llvm.loop !6667

for.end202:                                       ; preds = %for.cond168
  %133 = load i64, i64* %layout, align 8, !dbg !6669
  store i64 %133, i64* %retval, align 8, !dbg !6670
  br label %return, !dbg !6670

return:                                           ; preds = %for.end202, %if.then14, %if.then9, %if.then4, %if.then
  %134 = load i64, i64* %retval, align 8, !dbg !6671
  ret i64 %134, !dbg !6671
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @che_configure(%struct.AACContext* %ac, i32 %che_pos, i32 %type, i32 %id, i32* %channels) #0 !dbg !6672 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %che_pos.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %channels.addr = alloca i32*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !6675, metadata !2068), !dbg !6676
  store i32 %che_pos, i32* %che_pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %che_pos.addr, metadata !6677, metadata !2068), !dbg !6678
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6679, metadata !2068), !dbg !6680
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !6681, metadata !2068), !dbg !6682
  store i32* %channels, i32** %channels.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %channels.addr, metadata !6683, metadata !2068), !dbg !6684
  %0 = load i32*, i32** %channels.addr, align 8, !dbg !6685
  %1 = load i32, i32* %0, align 4, !dbg !6687
  %cmp = icmp sge i32 %1, 64, !dbg !6688
  br i1 %cmp, label %if.then, label %if.end, !dbg !6689

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !6690
  br label %return, !dbg !6690

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %che_pos.addr, align 4, !dbg !6691
  %tobool = icmp ne i32 %2, 0, !dbg !6691
  br i1 %tobool, label %if.then1, label %if.else, !dbg !6693

if.then1:                                         ; preds = %if.end
  %3 = load i32, i32* %id.addr, align 4, !dbg !6694
  %idxprom = sext i32 %3 to i64, !dbg !6697
  %4 = load i32, i32* %type.addr, align 4, !dbg !6698
  %idxprom2 = sext i32 %4 to i64, !dbg !6697
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6697
  %che = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 5, !dbg !6699
  %arrayidx = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che, i64 0, i64 %idxprom2, !dbg !6697
  %arrayidx3 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx, i64 0, i64 %idxprom, !dbg !6697
  %6 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx3, align 8, !dbg !6697
  %tobool4 = icmp ne %struct.ChannelElement* %6, null, !dbg !6697
  br i1 %tobool4, label %if.end19, label %if.then5, !dbg !6700

if.then5:                                         ; preds = %if.then1
  %call = call noalias i8* @av_mallocz(i64 649888), !dbg !6701
  %7 = bitcast i8* %call to %struct.ChannelElement*, !dbg !6701
  %8 = load i32, i32* %id.addr, align 4, !dbg !6704
  %idxprom6 = sext i32 %8 to i64, !dbg !6705
  %9 = load i32, i32* %type.addr, align 4, !dbg !6706
  %idxprom7 = sext i32 %9 to i64, !dbg !6705
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6705
  %che8 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 5, !dbg !6707
  %arrayidx9 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che8, i64 0, i64 %idxprom7, !dbg !6705
  %arrayidx10 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx9, i64 0, i64 %idxprom6, !dbg !6705
  store %struct.ChannelElement* %7, %struct.ChannelElement** %arrayidx10, align 8, !dbg !6708
  %tobool11 = icmp ne %struct.ChannelElement* %7, null, !dbg !6708
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !6709

if.then12:                                        ; preds = %if.then5
  store i32 -12, i32* %retval, align 4, !dbg !6710
  br label %return, !dbg !6710

if.end13:                                         ; preds = %if.then5
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6711
  %12 = load i32, i32* %id.addr, align 4, !dbg !6712
  %idxprom14 = sext i32 %12 to i64, !dbg !6713
  %13 = load i32, i32* %type.addr, align 4, !dbg !6714
  %idxprom15 = sext i32 %13 to i64, !dbg !6713
  %14 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6713
  %che16 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %14, i32 0, i32 5, !dbg !6715
  %arrayidx17 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che16, i64 0, i64 %idxprom15, !dbg !6713
  %arrayidx18 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx17, i64 0, i64 %idxprom14, !dbg !6713
  %15 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx18, align 8, !dbg !6713
  %sbr = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %15, i32 0, i32 10, !dbg !6716
  %16 = load i32, i32* %type.addr, align 4, !dbg !6717
  call void @ff_aac_sbr_ctx_init_fixed(%struct.AACContext* %11, %struct.SpectralBandReplication* %sbr, i32 %16), !dbg !6718
  br label %if.end19, !dbg !6719

if.end19:                                         ; preds = %if.end13, %if.then1
  %17 = load i32, i32* %type.addr, align 4, !dbg !6720
  %cmp20 = icmp ne i32 %17, 2, !dbg !6722
  br i1 %cmp20, label %if.then21, label %if.end57, !dbg !6723

if.then21:                                        ; preds = %if.end19
  %18 = load i32*, i32** %channels.addr, align 8, !dbg !6724
  %19 = load i32, i32* %18, align 4, !dbg !6727
  %20 = load i32, i32* %type.addr, align 4, !dbg !6728
  %cmp22 = icmp eq i32 %20, 1, !dbg !6729
  br i1 %cmp22, label %lor.end, label %lor.rhs, !dbg !6730

lor.rhs:                                          ; preds = %if.then21
  %21 = load i32, i32* %type.addr, align 4, !dbg !6731
  %cmp23 = icmp eq i32 %21, 0, !dbg !6733
  br i1 %cmp23, label %land.rhs, label %land.end, !dbg !6734

land.rhs:                                         ; preds = %lor.rhs
  %22 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6735
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %22, i32 0, i32 21, !dbg !6737
  %arrayidx24 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !6735
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx24, i32 0, i32 0, !dbg !6738
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 10, !dbg !6739
  %23 = load i32, i32* %ps, align 8, !dbg !6739
  %cmp25 = icmp eq i32 %23, 1, !dbg !6740
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %24 = phi i1 [ false, %lor.rhs ], [ %cmp25, %land.rhs ]
  br label %lor.end, !dbg !6741

lor.end:                                          ; preds = %land.end, %if.then21
  %25 = phi i1 [ true, %if.then21 ], [ %24, %land.end ]
  %lor.ext = zext i1 %25 to i32, !dbg !6743
  %sub = sub nsw i32 64, %lor.ext, !dbg !6745
  %cmp26 = icmp sge i32 %19, %sub, !dbg !6746
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !6747

if.then27:                                        ; preds = %lor.end
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6748
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %26, i32 0, i32 1, !dbg !6750
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6750
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !6748
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)), !dbg !6751
  store i32 -1094995529, i32* %retval, align 4, !dbg !6752
  br label %return, !dbg !6752

if.end28:                                         ; preds = %lor.end
  %29 = load i32, i32* %id.addr, align 4, !dbg !6753
  %idxprom29 = sext i32 %29 to i64, !dbg !6754
  %30 = load i32, i32* %type.addr, align 4, !dbg !6755
  %idxprom30 = sext i32 %30 to i64, !dbg !6754
  %31 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6754
  %che31 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %31, i32 0, i32 5, !dbg !6756
  %arrayidx32 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che31, i64 0, i64 %idxprom30, !dbg !6754
  %arrayidx33 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx32, i64 0, i64 %idxprom29, !dbg !6754
  %32 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx33, align 8, !dbg !6754
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %32, i32 0, i32 7, !dbg !6757
  %arrayidx34 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !6754
  %33 = load i32*, i32** %channels.addr, align 8, !dbg !6758
  %34 = load i32, i32* %33, align 4, !dbg !6759
  %inc = add nsw i32 %34, 1, !dbg !6759
  store i32 %inc, i32* %33, align 4, !dbg !6759
  %idxprom35 = sext i32 %34 to i64, !dbg !6760
  %35 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6760
  %output_element = getelementptr inbounds %struct.AACContext, %struct.AACContext* %35, i32 0, i32 16, !dbg !6761
  %arrayidx36 = getelementptr inbounds [64 x %struct.SingleChannelElement*], [64 x %struct.SingleChannelElement*]* %output_element, i64 0, i64 %idxprom35, !dbg !6760
  store %struct.SingleChannelElement* %arrayidx34, %struct.SingleChannelElement** %arrayidx36, align 8, !dbg !6762
  %36 = load i32, i32* %type.addr, align 4, !dbg !6763
  %cmp37 = icmp eq i32 %36, 1, !dbg !6765
  br i1 %cmp37, label %if.then44, label %lor.lhs.false, !dbg !6766

lor.lhs.false:                                    ; preds = %if.end28
  %37 = load i32, i32* %type.addr, align 4, !dbg !6767
  %cmp38 = icmp eq i32 %37, 0, !dbg !6768
  br i1 %cmp38, label %land.lhs.true, label %if.end56, !dbg !6769

land.lhs.true:                                    ; preds = %lor.lhs.false
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6770
  %oc39 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %38, i32 0, i32 21, !dbg !6772
  %arrayidx40 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc39, i64 0, i64 1, !dbg !6770
  %m4ac41 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx40, i32 0, i32 0, !dbg !6773
  %ps42 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac41, i32 0, i32 10, !dbg !6774
  %39 = load i32, i32* %ps42, align 8, !dbg !6774
  %cmp43 = icmp eq i32 %39, 1, !dbg !6775
  br i1 %cmp43, label %if.then44, label %if.end56, !dbg !6776

if.then44:                                        ; preds = %land.lhs.true, %if.end28
  %40 = load i32, i32* %id.addr, align 4, !dbg !6778
  %idxprom45 = sext i32 %40 to i64, !dbg !6780
  %41 = load i32, i32* %type.addr, align 4, !dbg !6781
  %idxprom46 = sext i32 %41 to i64, !dbg !6780
  %42 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6780
  %che47 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %42, i32 0, i32 5, !dbg !6782
  %arrayidx48 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che47, i64 0, i64 %idxprom46, !dbg !6780
  %arrayidx49 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx48, i64 0, i64 %idxprom45, !dbg !6780
  %43 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx49, align 8, !dbg !6780
  %ch50 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %43, i32 0, i32 7, !dbg !6783
  %arrayidx51 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch50, i64 0, i64 1, !dbg !6780
  %44 = load i32*, i32** %channels.addr, align 8, !dbg !6784
  %45 = load i32, i32* %44, align 4, !dbg !6785
  %inc52 = add nsw i32 %45, 1, !dbg !6785
  store i32 %inc52, i32* %44, align 4, !dbg !6785
  %idxprom53 = sext i32 %45 to i64, !dbg !6786
  %46 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6786
  %output_element54 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %46, i32 0, i32 16, !dbg !6787
  %arrayidx55 = getelementptr inbounds [64 x %struct.SingleChannelElement*], [64 x %struct.SingleChannelElement*]* %output_element54, i64 0, i64 %idxprom53, !dbg !6786
  store %struct.SingleChannelElement* %arrayidx51, %struct.SingleChannelElement** %arrayidx55, align 8, !dbg !6788
  br label %if.end56, !dbg !6789

if.end56:                                         ; preds = %if.then44, %land.lhs.true, %lor.lhs.false
  br label %if.end57, !dbg !6790

if.end57:                                         ; preds = %if.end56, %if.end19
  br label %if.end77, !dbg !6791

if.else:                                          ; preds = %if.end
  %47 = load i32, i32* %id.addr, align 4, !dbg !6792
  %idxprom58 = sext i32 %47 to i64, !dbg !6795
  %48 = load i32, i32* %type.addr, align 4, !dbg !6796
  %idxprom59 = sext i32 %48 to i64, !dbg !6795
  %49 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6795
  %che60 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %49, i32 0, i32 5, !dbg !6797
  %arrayidx61 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che60, i64 0, i64 %idxprom59, !dbg !6795
  %arrayidx62 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx61, i64 0, i64 %idxprom58, !dbg !6795
  %50 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx62, align 8, !dbg !6795
  %tobool63 = icmp ne %struct.ChannelElement* %50, null, !dbg !6795
  br i1 %tobool63, label %if.then64, label %if.end71, !dbg !6798

if.then64:                                        ; preds = %if.else
  %51 = load i32, i32* %id.addr, align 4, !dbg !6799
  %idxprom65 = sext i32 %51 to i64, !dbg !6800
  %52 = load i32, i32* %type.addr, align 4, !dbg !6801
  %idxprom66 = sext i32 %52 to i64, !dbg !6800
  %53 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6800
  %che67 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %53, i32 0, i32 5, !dbg !6802
  %arrayidx68 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che67, i64 0, i64 %idxprom66, !dbg !6800
  %arrayidx69 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx68, i64 0, i64 %idxprom65, !dbg !6800
  %54 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx69, align 8, !dbg !6800
  %sbr70 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %54, i32 0, i32 10, !dbg !6803
  call void @ff_aac_sbr_ctx_close_fixed(%struct.SpectralBandReplication* %sbr70), !dbg !6804
  br label %if.end71, !dbg !6804

if.end71:                                         ; preds = %if.then64, %if.else
  %55 = load i32, i32* %id.addr, align 4, !dbg !6805
  %idxprom72 = sext i32 %55 to i64, !dbg !6806
  %56 = load i32, i32* %type.addr, align 4, !dbg !6807
  %idxprom73 = sext i32 %56 to i64, !dbg !6806
  %57 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6806
  %che74 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %57, i32 0, i32 5, !dbg !6808
  %arrayidx75 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che74, i64 0, i64 %idxprom73, !dbg !6806
  %arrayidx76 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx75, i64 0, i64 %idxprom72, !dbg !6806
  %58 = bitcast %struct.ChannelElement** %arrayidx76 to i8*, !dbg !6809
  call void @av_freep(i8* %58), !dbg !6810
  br label %if.end77

if.end77:                                         ; preds = %if.end71, %if.end57
  store i32 0, i32* %retval, align 4, !dbg !6811
  br label %return, !dbg !6811

return:                                           ; preds = %if.end77, %if.then27, %if.then12, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !6812
  ret i32 %59, !dbg !6812
}

; Function Attrs: nounwind uwtable
define internal i32 @frame_configure_elements(%struct.AVCodecContext* %avctx) #1 !dbg !6813 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %type = alloca i32, align 4
  %id = alloca i32, align 4
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  %che = alloca %struct.ChannelElement*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6814, metadata !2068), !dbg !6815
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !6816, metadata !2068), !dbg !6817
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6818
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !6819
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6819
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !6818
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !6817
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6820, metadata !2068), !dbg !6821
  call void @llvm.dbg.declare(metadata i32* %id, metadata !6822, metadata !2068), !dbg !6823
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6824, metadata !2068), !dbg !6825
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6826, metadata !2068), !dbg !6827
  store i32 0, i32* %type, align 4, !dbg !6828
  br label %for.cond, !dbg !6830

for.cond:                                         ; preds = %for.inc19, %entry
  %3 = load i32, i32* %type, align 4, !dbg !6831
  %cmp = icmp slt i32 %3, 4, !dbg !6834
  br i1 %cmp, label %for.body, label %for.end21, !dbg !6835

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %id, align 4, !dbg !6836
  br label %for.cond1, !dbg !6839

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %id, align 4, !dbg !6840
  %cmp2 = icmp slt i32 %4, 16, !dbg !6843
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !6844

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che, metadata !6845, metadata !2068), !dbg !6847
  %5 = load i32, i32* %id, align 4, !dbg !6848
  %idxprom = sext i32 %5 to i64, !dbg !6849
  %6 = load i32, i32* %type, align 4, !dbg !6850
  %idxprom4 = sext i32 %6 to i64, !dbg !6849
  %7 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6849
  %che5 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 5, !dbg !6851
  %arrayidx = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che5, i64 0, i64 %idxprom4, !dbg !6849
  %arrayidx6 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx, i64 0, i64 %idxprom, !dbg !6849
  %8 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx6, align 8, !dbg !6849
  store %struct.ChannelElement* %8, %struct.ChannelElement** %che, align 8, !dbg !6847
  %9 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !6852
  %tobool = icmp ne %struct.ChannelElement* %9, null, !dbg !6852
  br i1 %tobool, label %if.then, label %if.end, !dbg !6854

if.then:                                          ; preds = %for.body3
  %10 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !6855
  %ch7 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %10, i32 0, i32 7, !dbg !6857
  %arrayidx8 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch7, i64 0, i64 0, !dbg !6855
  %ret_buf = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx8, i32 0, i32 16, !dbg !6858
  %arraydecay = getelementptr inbounds [2048 x i32], [2048 x i32]* %ret_buf, i32 0, i32 0, !dbg !6855
  %11 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !6859
  %ch9 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %11, i32 0, i32 7, !dbg !6860
  %arrayidx10 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch9, i64 0, i64 0, !dbg !6859
  %ret11 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx10, i32 0, i32 21, !dbg !6861
  store i32* %arraydecay, i32** %ret11, align 32, !dbg !6862
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !6863
  %ch12 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %12, i32 0, i32 7, !dbg !6864
  %arrayidx13 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch12, i64 0, i64 1, !dbg !6863
  %ret_buf14 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx13, i32 0, i32 16, !dbg !6865
  %arraydecay15 = getelementptr inbounds [2048 x i32], [2048 x i32]* %ret_buf14, i32 0, i32 0, !dbg !6863
  %13 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !6866
  %ch16 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %13, i32 0, i32 7, !dbg !6867
  %arrayidx17 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch16, i64 0, i64 1, !dbg !6866
  %ret18 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx17, i32 0, i32 21, !dbg !6868
  store i32* %arraydecay15, i32** %ret18, align 32, !dbg !6869
  br label %if.end, !dbg !6870

if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc, !dbg !6871

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %id, align 4, !dbg !6872
  %inc = add nsw i32 %14, 1, !dbg !6872
  store i32 %inc, i32* %id, align 4, !dbg !6872
  br label %for.cond1, !dbg !6874, !llvm.loop !6875

for.end:                                          ; preds = %for.cond1
  br label %for.inc19, !dbg !6877

for.inc19:                                        ; preds = %for.end
  %15 = load i32, i32* %type, align 4, !dbg !6878
  %inc20 = add nsw i32 %15, 1, !dbg !6878
  store i32 %inc20, i32* %type, align 4, !dbg !6878
  br label %for.cond, !dbg !6880, !llvm.loop !6881

for.end21:                                        ; preds = %for.cond
  %16 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6883
  %frame = getelementptr inbounds %struct.AACContext, %struct.AACContext* %16, i32 0, i32 2, !dbg !6884
  %17 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 16, !dbg !6884
  call void @av_frame_unref(%struct.AVFrame* %17), !dbg !6885
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6886
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 83, !dbg !6888
  %19 = load i32, i32* %channels, align 4, !dbg !6888
  %tobool22 = icmp ne i32 %19, 0, !dbg !6886
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !6889

if.then23:                                        ; preds = %for.end21
  store i32 1, i32* %retval, align 4, !dbg !6890
  br label %return, !dbg !6890

if.end24:                                         ; preds = %for.end21
  %20 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6891
  %frame25 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 2, !dbg !6892
  %21 = load %struct.AVFrame*, %struct.AVFrame** %frame25, align 16, !dbg !6892
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %21, i32 0, i32 5, !dbg !6893
  store i32 2048, i32* %nb_samples, align 8, !dbg !6894
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6895
  %23 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6897
  %frame26 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %23, i32 0, i32 2, !dbg !6898
  %24 = load %struct.AVFrame*, %struct.AVFrame** %frame26, align 16, !dbg !6898
  %call = call i32 @ff_get_buffer(%struct.AVCodecContext* %22, %struct.AVFrame* %24, i32 0), !dbg !6899
  store i32 %call, i32* %ret, align 4, !dbg !6900
  %cmp27 = icmp slt i32 %call, 0, !dbg !6901
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !6902

if.then28:                                        ; preds = %if.end24
  %25 = load i32, i32* %ret, align 4, !dbg !6903
  store i32 %25, i32* %retval, align 4, !dbg !6904
  br label %return, !dbg !6904

if.end29:                                         ; preds = %if.end24
  store i32 0, i32* %ch, align 4, !dbg !6905
  br label %for.cond30, !dbg !6907

for.cond30:                                       ; preds = %for.inc46, %if.end29
  %26 = load i32, i32* %ch, align 4, !dbg !6908
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6911
  %channels31 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 83, !dbg !6912
  %28 = load i32, i32* %channels31, align 4, !dbg !6912
  %cmp32 = icmp slt i32 %26, %28, !dbg !6913
  br i1 %cmp32, label %for.body33, label %for.end48, !dbg !6914

for.body33:                                       ; preds = %for.cond30
  %29 = load i32, i32* %ch, align 4, !dbg !6915
  %idxprom34 = sext i32 %29 to i64, !dbg !6918
  %30 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6918
  %output_element = getelementptr inbounds %struct.AACContext, %struct.AACContext* %30, i32 0, i32 16, !dbg !6919
  %arrayidx35 = getelementptr inbounds [64 x %struct.SingleChannelElement*], [64 x %struct.SingleChannelElement*]* %output_element, i64 0, i64 %idxprom34, !dbg !6918
  %31 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %arrayidx35, align 8, !dbg !6918
  %tobool36 = icmp ne %struct.SingleChannelElement* %31, null, !dbg !6918
  br i1 %tobool36, label %if.then37, label %if.end45, !dbg !6920

if.then37:                                        ; preds = %for.body33
  %32 = load i32, i32* %ch, align 4, !dbg !6921
  %idxprom38 = sext i32 %32 to i64, !dbg !6922
  %33 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6922
  %frame39 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %33, i32 0, i32 2, !dbg !6923
  %34 = load %struct.AVFrame*, %struct.AVFrame** %frame39, align 16, !dbg !6923
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %34, i32 0, i32 2, !dbg !6924
  %35 = load i8**, i8*** %extended_data, align 8, !dbg !6924
  %arrayidx40 = getelementptr inbounds i8*, i8** %35, i64 %idxprom38, !dbg !6922
  %36 = load i8*, i8** %arrayidx40, align 8, !dbg !6922
  %37 = bitcast i8* %36 to i32*, !dbg !6925
  %38 = load i32, i32* %ch, align 4, !dbg !6926
  %idxprom41 = sext i32 %38 to i64, !dbg !6927
  %39 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6927
  %output_element42 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 16, !dbg !6928
  %arrayidx43 = getelementptr inbounds [64 x %struct.SingleChannelElement*], [64 x %struct.SingleChannelElement*]* %output_element42, i64 0, i64 %idxprom41, !dbg !6927
  %40 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %arrayidx43, align 8, !dbg !6927
  %ret44 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %40, i32 0, i32 21, !dbg !6929
  store i32* %37, i32** %ret44, align 32, !dbg !6930
  br label %if.end45, !dbg !6927

if.end45:                                         ; preds = %if.then37, %for.body33
  br label %for.inc46, !dbg !6931

for.inc46:                                        ; preds = %if.end45
  %41 = load i32, i32* %ch, align 4, !dbg !6932
  %inc47 = add nsw i32 %41, 1, !dbg !6932
  store i32 %inc47, i32* %ch, align 4, !dbg !6932
  br label %for.cond30, !dbg !6934, !llvm.loop !6935

for.end48:                                        ; preds = %for.cond30
  store i32 0, i32* %retval, align 4, !dbg !6937
  br label %return, !dbg !6937

return:                                           ; preds = %for.end48, %if.then28, %if.then23
  %42 = load i32, i32* %retval, align 4, !dbg !6938
  ret i32 %42, !dbg !6938
}

; Function Attrs: nounwind uwtable
define internal i32 @count_paired_channels([3 x i8]* %layout_map, i32 %tags, i32 %pos, i32* %current) #1 !dbg !6939 {
entry:
  %retval = alloca i32, align 4
  %layout_map.addr = alloca [3 x i8]*, align 8
  %tags.addr = alloca i32, align 4
  %pos.addr = alloca i32, align 4
  %current.addr = alloca i32*, align 8
  %num_pos_channels = alloca i32, align 4
  %first_cpe = alloca i32, align 4
  %sce_parity = alloca i32, align 4
  %i = alloca i32, align 4
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !6942, metadata !2068), !dbg !6943
  store i32 %tags, i32* %tags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tags.addr, metadata !6944, metadata !2068), !dbg !6945
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !6946, metadata !2068), !dbg !6947
  store i32* %current, i32** %current.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %current.addr, metadata !6948, metadata !2068), !dbg !6949
  call void @llvm.dbg.declare(metadata i32* %num_pos_channels, metadata !6950, metadata !2068), !dbg !6951
  store i32 0, i32* %num_pos_channels, align 4, !dbg !6951
  call void @llvm.dbg.declare(metadata i32* %first_cpe, metadata !6952, metadata !2068), !dbg !6953
  store i32 0, i32* %first_cpe, align 4, !dbg !6953
  call void @llvm.dbg.declare(metadata i32* %sce_parity, metadata !6954, metadata !2068), !dbg !6955
  store i32 0, i32* %sce_parity, align 4, !dbg !6955
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6956, metadata !2068), !dbg !6957
  %0 = load i32*, i32** %current.addr, align 8, !dbg !6958
  %1 = load i32, i32* %0, align 4, !dbg !6960
  store i32 %1, i32* %i, align 4, !dbg !6961
  br label %for.cond, !dbg !6962

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !6963
  %3 = load i32, i32* %tags.addr, align 4, !dbg !6966
  %cmp = icmp slt i32 %2, %3, !dbg !6967
  br i1 %cmp, label %for.body, label %for.end, !dbg !6968

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !6969
  %idxprom = sext i32 %4 to i64, !dbg !6972
  %5 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6972
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %5, i64 %idxprom, !dbg !6972
  %arrayidx1 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 2, !dbg !6972
  %6 = load i8, i8* %arrayidx1, align 1, !dbg !6972
  %conv = zext i8 %6 to i32, !dbg !6972
  %7 = load i32, i32* %pos.addr, align 4, !dbg !6973
  %cmp2 = icmp ne i32 %conv, %7, !dbg !6974
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6975

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !6976

if.end:                                           ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !6977
  %idxprom4 = sext i32 %8 to i64, !dbg !6979
  %9 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6979
  %arrayidx5 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 %idxprom4, !dbg !6979
  %arrayidx6 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx5, i64 0, i64 0, !dbg !6979
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !6979
  %conv7 = zext i8 %10 to i32, !dbg !6979
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !6980
  br i1 %cmp8, label %if.then10, label %if.else18, !dbg !6981

if.then10:                                        ; preds = %if.end
  %11 = load i32, i32* %sce_parity, align 4, !dbg !6982
  %tobool = icmp ne i32 %11, 0, !dbg !6982
  br i1 %tobool, label %if.then11, label %if.end17, !dbg !6985

if.then11:                                        ; preds = %if.then10
  %12 = load i32, i32* %pos.addr, align 4, !dbg !6986
  %cmp12 = icmp eq i32 %12, 1, !dbg !6989
  br i1 %cmp12, label %land.lhs.true, label %if.else, !dbg !6990

land.lhs.true:                                    ; preds = %if.then11
  %13 = load i32, i32* %first_cpe, align 4, !dbg !6991
  %tobool14 = icmp ne i32 %13, 0, !dbg !6991
  br i1 %tobool14, label %if.else, label %if.then15, !dbg !6993

if.then15:                                        ; preds = %land.lhs.true
  store i32 0, i32* %sce_parity, align 4, !dbg !6994
  br label %if.end16, !dbg !6996

if.else:                                          ; preds = %land.lhs.true, %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !6997
  br label %return, !dbg !6997

if.end16:                                         ; preds = %if.then15
  br label %if.end17, !dbg !6999

if.end17:                                         ; preds = %if.end16, %if.then10
  %14 = load i32, i32* %num_pos_channels, align 4, !dbg !7000
  %add = add nsw i32 %14, 2, !dbg !7000
  store i32 %add, i32* %num_pos_channels, align 4, !dbg !7000
  store i32 1, i32* %first_cpe, align 4, !dbg !7001
  br label %if.end19, !dbg !7002

if.else18:                                        ; preds = %if.end
  %15 = load i32, i32* %num_pos_channels, align 4, !dbg !7003
  %inc = add nsw i32 %15, 1, !dbg !7003
  store i32 %inc, i32* %num_pos_channels, align 4, !dbg !7003
  %16 = load i32, i32* %sce_parity, align 4, !dbg !7005
  %xor = xor i32 %16, 1, !dbg !7005
  store i32 %xor, i32* %sce_parity, align 4, !dbg !7005
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.end17
  br label %for.inc, !dbg !7006

for.inc:                                          ; preds = %if.end19
  %17 = load i32, i32* %i, align 4, !dbg !7007
  %inc20 = add nsw i32 %17, 1, !dbg !7007
  store i32 %inc20, i32* %i, align 4, !dbg !7007
  br label %for.cond, !dbg !7009, !llvm.loop !7010

for.end:                                          ; preds = %if.then, %for.cond
  %18 = load i32, i32* %sce_parity, align 4, !dbg !7012
  %tobool21 = icmp ne i32 %18, 0, !dbg !7012
  br i1 %tobool21, label %land.lhs.true22, label %if.end30, !dbg !7014

land.lhs.true22:                                  ; preds = %for.end
  %19 = load i32, i32* %pos.addr, align 4, !dbg !7015
  %cmp23 = icmp eq i32 %19, 1, !dbg !7016
  br i1 %cmp23, label %land.lhs.true25, label %lor.lhs.false, !dbg !7017

land.lhs.true25:                                  ; preds = %land.lhs.true22
  %20 = load i32, i32* %first_cpe, align 4, !dbg !7018
  %tobool26 = icmp ne i32 %20, 0, !dbg !7018
  br i1 %tobool26, label %if.then29, label %lor.lhs.false, !dbg !7020

lor.lhs.false:                                    ; preds = %land.lhs.true25, %land.lhs.true22
  %21 = load i32, i32* %pos.addr, align 4, !dbg !7021
  %cmp27 = icmp eq i32 %21, 2, !dbg !7023
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7024

if.then29:                                        ; preds = %lor.lhs.false, %land.lhs.true25
  store i32 -1, i32* %retval, align 4, !dbg !7026
  br label %return, !dbg !7026

if.end30:                                         ; preds = %lor.lhs.false, %for.end
  %22 = load i32, i32* %i, align 4, !dbg !7027
  %23 = load i32*, i32** %current.addr, align 8, !dbg !7028
  store i32 %22, i32* %23, align 4, !dbg !7029
  %24 = load i32, i32* %num_pos_channels, align 4, !dbg !7030
  store i32 %24, i32* %retval, align 4, !dbg !7031
  br label %return, !dbg !7031

return:                                           ; preds = %if.end30, %if.then29, %if.else
  %25 = load i32, i32* %retval, align 4, !dbg !7032
  ret i32 %25, !dbg !7032
}

; Function Attrs: nounwind uwtable
define internal i32 @assign_pair(%struct.elem_to_channel* %e2c_vec, [3 x i8]* %layout_map, i32 %offset, i64 %left, i64 %right, i32 %pos) #1 !dbg !7033 {
entry:
  %retval = alloca i32, align 4
  %e2c_vec.addr = alloca %struct.elem_to_channel*, align 8
  %layout_map.addr = alloca [3 x i8]*, align 8
  %offset.addr = alloca i32, align 4
  %left.addr = alloca i64, align 8
  %right.addr = alloca i64, align 8
  %pos.addr = alloca i32, align 4
  %.compoundliteral = alloca %struct.elem_to_channel, align 8
  %.compoundliteral11 = alloca %struct.elem_to_channel, align 8
  %.compoundliteral22 = alloca %struct.elem_to_channel, align 8
  store %struct.elem_to_channel* %e2c_vec, %struct.elem_to_channel** %e2c_vec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.elem_to_channel** %e2c_vec.addr, metadata !7037, metadata !2068), !dbg !7038
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !7039, metadata !2068), !dbg !7040
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7041, metadata !2068), !dbg !7042
  store i64 %left, i64* %left.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %left.addr, metadata !7043, metadata !2068), !dbg !7044
  store i64 %right, i64* %right.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %right.addr, metadata !7045, metadata !2068), !dbg !7046
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !7047, metadata !2068), !dbg !7048
  %0 = load i32, i32* %offset.addr, align 4, !dbg !7049
  %idxprom = sext i32 %0 to i64, !dbg !7051
  %1 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !7051
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 %idxprom, !dbg !7051
  %arrayidx1 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 0, !dbg !7051
  %2 = load i8, i8* %arrayidx1, align 1, !dbg !7051
  %conv = zext i8 %2 to i32, !dbg !7051
  %cmp = icmp eq i32 %conv, 1, !dbg !7052
  br i1 %cmp, label %if.then, label %if.else, !dbg !7053

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %offset.addr, align 4, !dbg !7054
  %idxprom3 = sext i32 %3 to i64, !dbg !7056
  %4 = load %struct.elem_to_channel*, %struct.elem_to_channel** %e2c_vec.addr, align 8, !dbg !7056
  %arrayidx4 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %4, i64 %idxprom3, !dbg !7056
  %av_position = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 0, !dbg !7057
  %5 = load i64, i64* %left.addr, align 8, !dbg !7058
  %6 = load i64, i64* %right.addr, align 8, !dbg !7059
  %or = or i64 %5, %6, !dbg !7060
  store i64 %or, i64* %av_position, align 8, !dbg !7057
  %syn_ele = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 1, !dbg !7057
  store i8 1, i8* %syn_ele, align 8, !dbg !7057
  %elem_id = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 2, !dbg !7057
  %7 = load i32, i32* %offset.addr, align 4, !dbg !7061
  %idxprom5 = sext i32 %7 to i64, !dbg !7062
  %8 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !7062
  %arrayidx6 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i64 %idxprom5, !dbg !7062
  %arrayidx7 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx6, i64 0, i64 1, !dbg !7062
  %9 = load i8, i8* %arrayidx7, align 1, !dbg !7062
  store i8 %9, i8* %elem_id, align 1, !dbg !7057
  %aac_position = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 3, !dbg !7057
  %10 = load i32, i32* %pos.addr, align 4, !dbg !7063
  %conv8 = trunc i32 %10 to i8, !dbg !7063
  store i8 %conv8, i8* %aac_position, align 2, !dbg !7057
  %11 = bitcast %struct.elem_to_channel* %arrayidx4 to i8*, !dbg !7064
  %12 = bitcast %struct.elem_to_channel* %.compoundliteral to i8*, !dbg !7064
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 16, i32 8, i1 false), !dbg !7064
  store i32 1, i32* %retval, align 4, !dbg !7065
  br label %return, !dbg !7065

if.else:                                          ; preds = %entry
  %13 = load i32, i32* %offset.addr, align 4, !dbg !7066
  %idxprom9 = sext i32 %13 to i64, !dbg !7068
  %14 = load %struct.elem_to_channel*, %struct.elem_to_channel** %e2c_vec.addr, align 8, !dbg !7068
  %arrayidx10 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %14, i64 %idxprom9, !dbg !7068
  %av_position12 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral11, i32 0, i32 0, !dbg !7069
  %15 = load i64, i64* %left.addr, align 8, !dbg !7070
  store i64 %15, i64* %av_position12, align 8, !dbg !7069
  %syn_ele13 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral11, i32 0, i32 1, !dbg !7069
  store i8 0, i8* %syn_ele13, align 8, !dbg !7069
  %elem_id14 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral11, i32 0, i32 2, !dbg !7069
  %16 = load i32, i32* %offset.addr, align 4, !dbg !7071
  %idxprom15 = sext i32 %16 to i64, !dbg !7072
  %17 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !7072
  %arrayidx16 = getelementptr inbounds [3 x i8], [3 x i8]* %17, i64 %idxprom15, !dbg !7072
  %arrayidx17 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx16, i64 0, i64 1, !dbg !7072
  %18 = load i8, i8* %arrayidx17, align 1, !dbg !7072
  store i8 %18, i8* %elem_id14, align 1, !dbg !7069
  %aac_position18 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral11, i32 0, i32 3, !dbg !7069
  %19 = load i32, i32* %pos.addr, align 4, !dbg !7073
  %conv19 = trunc i32 %19 to i8, !dbg !7073
  store i8 %conv19, i8* %aac_position18, align 2, !dbg !7069
  %20 = bitcast %struct.elem_to_channel* %arrayidx10 to i8*, !dbg !7074
  %21 = bitcast %struct.elem_to_channel* %.compoundliteral11 to i8*, !dbg !7074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 16, i32 8, i1 false), !dbg !7074
  %22 = load i32, i32* %offset.addr, align 4, !dbg !7075
  %add = add nsw i32 %22, 1, !dbg !7076
  %idxprom20 = sext i32 %add to i64, !dbg !7077
  %23 = load %struct.elem_to_channel*, %struct.elem_to_channel** %e2c_vec.addr, align 8, !dbg !7077
  %arrayidx21 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %23, i64 %idxprom20, !dbg !7077
  %av_position23 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral22, i32 0, i32 0, !dbg !7078
  %24 = load i64, i64* %right.addr, align 8, !dbg !7079
  store i64 %24, i64* %av_position23, align 8, !dbg !7078
  %syn_ele24 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral22, i32 0, i32 1, !dbg !7078
  store i8 0, i8* %syn_ele24, align 8, !dbg !7078
  %elem_id25 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral22, i32 0, i32 2, !dbg !7078
  %25 = load i32, i32* %offset.addr, align 4, !dbg !7080
  %add26 = add nsw i32 %25, 1, !dbg !7081
  %idxprom27 = sext i32 %add26 to i64, !dbg !7082
  %26 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !7082
  %arrayidx28 = getelementptr inbounds [3 x i8], [3 x i8]* %26, i64 %idxprom27, !dbg !7082
  %arrayidx29 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx28, i64 0, i64 1, !dbg !7082
  %27 = load i8, i8* %arrayidx29, align 1, !dbg !7082
  store i8 %27, i8* %elem_id25, align 1, !dbg !7078
  %aac_position30 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral22, i32 0, i32 3, !dbg !7078
  %28 = load i32, i32* %pos.addr, align 4, !dbg !7083
  %conv31 = trunc i32 %28 to i8, !dbg !7083
  store i8 %conv31, i8* %aac_position30, align 2, !dbg !7078
  %29 = bitcast %struct.elem_to_channel* %arrayidx21 to i8*, !dbg !7084
  %30 = bitcast %struct.elem_to_channel* %.compoundliteral22 to i8*, !dbg !7084
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 16, i32 8, i1 false), !dbg !7084
  store i32 2, i32* %retval, align 4, !dbg !7085
  br label %return, !dbg !7085

return:                                           ; preds = %if.else, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !7086
  ret i32 %31, !dbg !7086
}

declare noalias i8* @av_mallocz(i64) #3

declare void @ff_aac_sbr_ctx_init_fixed(%struct.AACContext*, %struct.SpectralBandReplication*, i32) #3

declare void @ff_aac_sbr_ctx_close_fixed(%struct.SpectralBandReplication*) #3

declare void @av_freep(i8*) #3

declare void @av_frame_unref(%struct.AVFrame*) #3

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #3

declare i8* @av_packet_get_side_data(%struct.AVPacket*, i32, i32*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #4 !dbg !7087 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7088, metadata !2068), !dbg !7089
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7090, metadata !2068), !dbg !7091
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !7092, metadata !2068), !dbg !7093
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !7094
  %cmp = icmp sgt i32 %0, 268435455, !dbg !7096
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7097

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !7098
  %cmp1 = icmp slt i32 %1, 0, !dbg !7100
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7101

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !7102
  br label %if.end, !dbg !7103

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7104
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !7105
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !7106
  %mul = mul nsw i32 %4, 8, !dbg !7107
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !7108
  ret i32 %call, !dbg !7109
}

; Function Attrs: nounwind uwtable
define internal i32 @aac_decode_er_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.GetBitContext* %gb) #1 !dbg !7110 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %m4ac = alloca %struct.MPEG4AudioConfig*, align 8
  %che = alloca %struct.ChannelElement*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %samples = alloca i32, align 4
  %chan_config = alloca i32, align 4
  %aot = alloca i32, align 4
  %elem_type = alloca i32, align 4
  %elem_id = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !7113, metadata !2068), !dbg !7114
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7115, metadata !2068), !dbg !7116
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !7117, metadata !2068), !dbg !7118
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7119, metadata !2068), !dbg !7120
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !7121, metadata !2068), !dbg !7122
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7123
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !7124
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7124
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !7123
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !7122
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac, metadata !7125, metadata !2068), !dbg !7129
  %3 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7130
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %3, i32 0, i32 21, !dbg !7131
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !7130
  %m4ac1 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !7132
  store %struct.MPEG4AudioConfig* %m4ac1, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !7129
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che, metadata !7133, metadata !2068), !dbg !7134
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7135, metadata !2068), !dbg !7136
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7137, metadata !2068), !dbg !7138
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !7139, metadata !2068), !dbg !7140
  %4 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !7141
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %4, i32 0, i32 11, !dbg !7142
  %5 = load i32, i32* %frame_length_short, align 4, !dbg !7142
  %tobool = icmp ne i32 %5, 0, !dbg !7141
  %cond = select i1 %tobool, i32 960, i32 1024, !dbg !7141
  store i32 %cond, i32* %samples, align 4, !dbg !7140
  call void @llvm.dbg.declare(metadata i32* %chan_config, metadata !7143, metadata !2068), !dbg !7144
  %6 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !7145
  %chan_config2 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %6, i32 0, i32 3, !dbg !7146
  %7 = load i32, i32* %chan_config2, align 4, !dbg !7146
  store i32 %7, i32* %chan_config, align 4, !dbg !7144
  call void @llvm.dbg.declare(metadata i32* %aot, metadata !7147, metadata !2068), !dbg !7148
  %8 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !7149
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %8, i32 0, i32 0, !dbg !7150
  %9 = load i32, i32* %object_type, align 4, !dbg !7150
  store i32 %9, i32* %aot, align 4, !dbg !7148
  %10 = load i32, i32* %aot, align 4, !dbg !7151
  %cmp = icmp eq i32 %10, 23, !dbg !7153
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7154

lor.lhs.false:                                    ; preds = %entry
  %11 = load i32, i32* %aot, align 4, !dbg !7155
  %cmp3 = icmp eq i32 %11, 39, !dbg !7157
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7158

if.then:                                          ; preds = %lor.lhs.false, %entry
  %12 = load i32, i32* %samples, align 4, !dbg !7159
  %shr = ashr i32 %12, 1, !dbg !7159
  store i32 %shr, i32* %samples, align 4, !dbg !7159
  br label %if.end, !dbg !7160

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %13 = load i8*, i8** %data.addr, align 8, !dbg !7161
  %14 = bitcast i8* %13 to %struct.AVFrame*, !dbg !7161
  %15 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7162
  %frame = getelementptr inbounds %struct.AACContext, %struct.AACContext* %15, i32 0, i32 2, !dbg !7163
  store %struct.AVFrame* %14, %struct.AVFrame** %frame, align 16, !dbg !7164
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7165
  %call = call i32 @frame_configure_elements(%struct.AVCodecContext* %16), !dbg !7167
  store i32 %call, i32* %err, align 4, !dbg !7168
  %cmp4 = icmp slt i32 %call, 0, !dbg !7169
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7170

if.then5:                                         ; preds = %if.end
  %17 = load i32, i32* %err, align 4, !dbg !7171
  store i32 %17, i32* %retval, align 4, !dbg !7172
  br label %return, !dbg !7172

if.end6:                                          ; preds = %if.end
  %18 = load i32, i32* %aot, align 4, !dbg !7173
  %sub = sub nsw i32 %18, 1, !dbg !7174
  %19 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7175
  %avctx7 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 1, !dbg !7176
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx7, align 8, !dbg !7176
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 153, !dbg !7177
  store i32 %sub, i32* %profile, align 4, !dbg !7178
  %21 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7179
  %tags_mapped = getelementptr inbounds %struct.AACContext, %struct.AACContext* %21, i32 0, i32 7, !dbg !7180
  store i32 0, i32* %tags_mapped, align 8, !dbg !7181
  %22 = load i32, i32* %chan_config, align 4, !dbg !7182
  %cmp8 = icmp slt i32 %22, 0, !dbg !7184
  br i1 %cmp8, label %if.then14, label %lor.lhs.false9, !dbg !7185

lor.lhs.false9:                                   ; preds = %if.end6
  %23 = load i32, i32* %chan_config, align 4, !dbg !7186
  %cmp10 = icmp sge i32 %23, 8, !dbg !7188
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false12, !dbg !7189

land.lhs.true:                                    ; preds = %lor.lhs.false9
  %24 = load i32, i32* %chan_config, align 4, !dbg !7190
  %cmp11 = icmp slt i32 %24, 11, !dbg !7192
  br i1 %cmp11, label %if.then14, label %lor.lhs.false12, !dbg !7193

lor.lhs.false12:                                  ; preds = %land.lhs.true, %lor.lhs.false9
  %25 = load i32, i32* %chan_config, align 4, !dbg !7194
  %cmp13 = icmp sge i32 %25, 13, !dbg !7196
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !7197

if.then14:                                        ; preds = %lor.lhs.false12, %land.lhs.true, %if.end6
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7198
  %27 = bitcast %struct.AVCodecContext* %26 to i8*, !dbg !7198
  %28 = load i32, i32* %chan_config, align 4, !dbg !7200
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %27, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35, i32 0, i32 0), i32 %28), !dbg !7201
  store i32 -1094995529, i32* %retval, align 4, !dbg !7202
  br label %return, !dbg !7202

if.end15:                                         ; preds = %lor.lhs.false12
  store i32 0, i32* %i, align 4, !dbg !7203
  br label %for.cond, !dbg !7205

for.cond:                                         ; preds = %for.inc, %if.end15
  %29 = load i32, i32* %i, align 4, !dbg !7206
  %30 = load i32, i32* %chan_config, align 4, !dbg !7209
  %idxprom = sext i32 %30 to i64, !dbg !7210
  %arrayidx16 = getelementptr inbounds [16 x i8], [16 x i8]* @tags_per_config, i64 0, i64 %idxprom, !dbg !7210
  %31 = load i8, i8* %arrayidx16, align 1, !dbg !7210
  %conv = sext i8 %31 to i32, !dbg !7210
  %cmp17 = icmp slt i32 %29, %conv, !dbg !7211
  br i1 %cmp17, label %for.body, label %for.end, !dbg !7212

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %elem_type, metadata !7213, metadata !2068), !dbg !7215
  %32 = load i32, i32* %i, align 4, !dbg !7216
  %idxprom19 = sext i32 %32 to i64, !dbg !7217
  %33 = load i32, i32* %chan_config, align 4, !dbg !7218
  %sub20 = sub nsw i32 %33, 1, !dbg !7219
  %idxprom21 = sext i32 %sub20 to i64, !dbg !7217
  %arrayidx22 = getelementptr inbounds [16 x [5 x [3 x i8]]], [16 x [5 x [3 x i8]]]* @aac_channel_layout_map, i64 0, i64 %idxprom21, !dbg !7217
  %arrayidx23 = getelementptr inbounds [5 x [3 x i8]], [5 x [3 x i8]]* %arrayidx22, i64 0, i64 %idxprom19, !dbg !7217
  %arrayidx24 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx23, i64 0, i64 0, !dbg !7217
  %34 = load i8, i8* %arrayidx24, align 1, !dbg !7217
  %conv25 = zext i8 %34 to i32, !dbg !7217
  store i32 %conv25, i32* %elem_type, align 4, !dbg !7215
  call void @llvm.dbg.declare(metadata i32* %elem_id, metadata !7220, metadata !2068), !dbg !7221
  %35 = load i32, i32* %i, align 4, !dbg !7222
  %idxprom26 = sext i32 %35 to i64, !dbg !7223
  %36 = load i32, i32* %chan_config, align 4, !dbg !7224
  %sub27 = sub nsw i32 %36, 1, !dbg !7225
  %idxprom28 = sext i32 %sub27 to i64, !dbg !7223
  %arrayidx29 = getelementptr inbounds [16 x [5 x [3 x i8]]], [16 x [5 x [3 x i8]]]* @aac_channel_layout_map, i64 0, i64 %idxprom28, !dbg !7223
  %arrayidx30 = getelementptr inbounds [5 x [3 x i8]], [5 x [3 x i8]]* %arrayidx29, i64 0, i64 %idxprom26, !dbg !7223
  %arrayidx31 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx30, i64 0, i64 1, !dbg !7223
  %37 = load i8, i8* %arrayidx31, align 1, !dbg !7223
  %conv32 = zext i8 %37 to i32, !dbg !7223
  store i32 %conv32, i32* %elem_id, align 4, !dbg !7221
  %38 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7226
  %39 = load i32, i32* %elem_type, align 4, !dbg !7228
  %40 = load i32, i32* %elem_id, align 4, !dbg !7229
  %call33 = call %struct.ChannelElement* @get_che(%struct.AACContext* %38, i32 %39, i32 %40), !dbg !7230
  store %struct.ChannelElement* %call33, %struct.ChannelElement** %che, align 8, !dbg !7231
  %tobool34 = icmp ne %struct.ChannelElement* %call33, null, !dbg !7231
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !7232

if.then35:                                        ; preds = %for.body
  %41 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7233
  %avctx36 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %41, i32 0, i32 1, !dbg !7235
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx36, align 8, !dbg !7235
  %43 = bitcast %struct.AVCodecContext* %42 to i8*, !dbg !7233
  %44 = load i32, i32* %elem_type, align 4, !dbg !7236
  %45 = load i32, i32* %elem_id, align 4, !dbg !7237
  call void (i8*, i32, i8*, ...) @av_log(i8* %43, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i32 0, i32 0), i32 %44, i32 %45), !dbg !7238
  store i32 -1094995529, i32* %retval, align 4, !dbg !7239
  br label %return, !dbg !7239

if.end37:                                         ; preds = %for.body
  %46 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7240
  %present = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %46, i32 0, i32 0, !dbg !7241
  store i32 1, i32* %present, align 32, !dbg !7242
  %47 = load i32, i32* %aot, align 4, !dbg !7243
  %cmp38 = icmp ne i32 %47, 39, !dbg !7245
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !7246

if.then40:                                        ; preds = %if.end37
  %48 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7247
  call void @skip_bits(%struct.GetBitContext* %48, i32 4), !dbg !7248
  br label %if.end41, !dbg !7248

if.end41:                                         ; preds = %if.then40, %if.end37
  %49 = load i32, i32* %elem_type, align 4, !dbg !7249
  switch i32 %49, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb44
    i32 3, label %sw.bb46
  ], !dbg !7250

sw.bb:                                            ; preds = %if.end41
  %50 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7251
  %51 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7253
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %51, i32 0, i32 7, !dbg !7254
  %arrayidx42 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !7253
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7255
  %call43 = call i32 @decode_ics(%struct.AACContext* %50, %struct.SingleChannelElement* %arrayidx42, %struct.GetBitContext* %52, i32 0, i32 0), !dbg !7256
  store i32 %call43, i32* %err, align 4, !dbg !7257
  br label %sw.epilog, !dbg !7258

sw.bb44:                                          ; preds = %if.end41
  %53 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7259
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7260
  %55 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7261
  %call45 = call i32 @decode_cpe(%struct.AACContext* %53, %struct.GetBitContext* %54, %struct.ChannelElement* %55), !dbg !7262
  store i32 %call45, i32* %err, align 4, !dbg !7263
  br label %sw.epilog, !dbg !7264

sw.bb46:                                          ; preds = %if.end41
  %56 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7265
  %57 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7266
  %ch47 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %57, i32 0, i32 7, !dbg !7267
  %arrayidx48 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch47, i64 0, i64 0, !dbg !7266
  %58 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7268
  %call49 = call i32 @decode_ics(%struct.AACContext* %56, %struct.SingleChannelElement* %arrayidx48, %struct.GetBitContext* %58, i32 0, i32 0), !dbg !7269
  store i32 %call49, i32* %err, align 4, !dbg !7270
  br label %sw.epilog, !dbg !7271

sw.epilog:                                        ; preds = %if.end41, %sw.bb46, %sw.bb44, %sw.bb
  %59 = load i32, i32* %err, align 4, !dbg !7272
  %cmp50 = icmp slt i32 %59, 0, !dbg !7274
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !7275

if.then52:                                        ; preds = %sw.epilog
  %60 = load i32, i32* %err, align 4, !dbg !7276
  store i32 %60, i32* %retval, align 4, !dbg !7277
  br label %return, !dbg !7277

if.end53:                                         ; preds = %sw.epilog
  br label %for.inc, !dbg !7278

for.inc:                                          ; preds = %if.end53
  %61 = load i32, i32* %i, align 4, !dbg !7279
  %inc = add nsw i32 %61, 1, !dbg !7279
  store i32 %inc, i32* %i, align 4, !dbg !7279
  br label %for.cond, !dbg !7281, !llvm.loop !7282

for.end:                                          ; preds = %for.cond
  %62 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7284
  %63 = load i32, i32* %samples, align 4, !dbg !7285
  call void @spectral_to_sample(%struct.AACContext* %62, i32 %63), !dbg !7286
  %64 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7287
  %frame54 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %64, i32 0, i32 2, !dbg !7289
  %65 = load %struct.AVFrame*, %struct.AVFrame** %frame54, align 16, !dbg !7289
  %data55 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %65, i32 0, i32 0, !dbg !7290
  %arrayidx56 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data55, i64 0, i64 0, !dbg !7287
  %66 = load i8*, i8** %arrayidx56, align 8, !dbg !7287
  %tobool57 = icmp ne i8* %66, null, !dbg !7287
  br i1 %tobool57, label %if.end61, label %land.lhs.true58, !dbg !7291

land.lhs.true58:                                  ; preds = %for.end
  %67 = load i32, i32* %samples, align 4, !dbg !7292
  %tobool59 = icmp ne i32 %67, 0, !dbg !7292
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !7294

if.then60:                                        ; preds = %land.lhs.true58
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7295
  %69 = bitcast %struct.AVCodecContext* %68 to i8*, !dbg !7295
  call void (i8*, i32, i8*, ...) @av_log(i8* %69, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0)), !dbg !7297
  store i32 -1094995529, i32* %retval, align 4, !dbg !7298
  br label %return, !dbg !7298

if.end61:                                         ; preds = %land.lhs.true58, %for.end
  %70 = load i32, i32* %samples, align 4, !dbg !7299
  %71 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7300
  %frame62 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %71, i32 0, i32 2, !dbg !7301
  %72 = load %struct.AVFrame*, %struct.AVFrame** %frame62, align 16, !dbg !7301
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %72, i32 0, i32 5, !dbg !7302
  store i32 %70, i32* %nb_samples, align 8, !dbg !7303
  %73 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7304
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %73, i32 0, i32 82, !dbg !7305
  %74 = load i32, i32* %sample_rate, align 8, !dbg !7305
  %75 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7306
  %frame63 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %75, i32 0, i32 2, !dbg !7307
  %76 = load %struct.AVFrame*, %struct.AVFrame** %frame63, align 16, !dbg !7307
  %sample_rate64 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %76, i32 0, i32 23, !dbg !7308
  store i32 %74, i32* %sample_rate64, align 8, !dbg !7309
  %77 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !7310
  store i32 1, i32* %77, align 4, !dbg !7311
  %78 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7312
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7313
  %call65 = call i32 @get_bits_left(%struct.GetBitContext* %79), !dbg !7314
  call void @skip_bits_long(%struct.GetBitContext* %78, i32 %call65), !dbg !7315
  store i32 0, i32* %retval, align 4, !dbg !7317
  br label %return, !dbg !7317

return:                                           ; preds = %if.end61, %if.then60, %if.then52, %if.then35, %if.then14, %if.then5
  %80 = load i32, i32* %retval, align 4, !dbg !7318
  ret i32 %80, !dbg !7318
}

; Function Attrs: nounwind uwtable
define internal i32 @aac_decode_frame_int(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.GetBitContext* %gb, %struct.AVPacket* %avpkt) #1 !dbg !7319 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %che = alloca %struct.ChannelElement*, align 8
  %che_prev = alloca %struct.ChannelElement*, align 8
  %elem_type = alloca i32, align 4
  %che_prev_type = alloca i32, align 4
  %err = alloca i32, align 4
  %elem_id = alloca i32, align 4
  %samples = alloca i32, align 4
  %multiplier = alloca i32, align 4
  %audio_found = alloca i32, align 4
  %pce_found = alloca i32, align 4
  %is_dmono = alloca i32, align 4
  %sce_count = alloca i32, align 4
  %payload_alignment = alloca i32, align 4
  %che_presence = alloca [4 x [16 x i8]], align 16
  %error = alloca i32, align 4
  %layout_map = alloca [64 x [3 x i8]], align 16
  %tags = alloca i32, align 4
  %pushed = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !7322, metadata !2068), !dbg !7323
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7324, metadata !2068), !dbg !7325
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !7326, metadata !2068), !dbg !7327
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7328, metadata !2068), !dbg !7329
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !7330, metadata !2068), !dbg !7331
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !7332, metadata !2068), !dbg !7333
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7334
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !7335
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7335
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !7334
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !7333
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che, metadata !7336, metadata !2068), !dbg !7337
  store %struct.ChannelElement* null, %struct.ChannelElement** %che, align 8, !dbg !7337
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che_prev, metadata !7338, metadata !2068), !dbg !7339
  store %struct.ChannelElement* null, %struct.ChannelElement** %che_prev, align 8, !dbg !7339
  call void @llvm.dbg.declare(metadata i32* %elem_type, metadata !7340, metadata !2068), !dbg !7341
  call void @llvm.dbg.declare(metadata i32* %che_prev_type, metadata !7342, metadata !2068), !dbg !7343
  store i32 7, i32* %che_prev_type, align 4, !dbg !7343
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7344, metadata !2068), !dbg !7345
  call void @llvm.dbg.declare(metadata i32* %elem_id, metadata !7346, metadata !2068), !dbg !7347
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !7348, metadata !2068), !dbg !7349
  store i32 0, i32* %samples, align 4, !dbg !7349
  call void @llvm.dbg.declare(metadata i32* %multiplier, metadata !7350, metadata !2068), !dbg !7351
  call void @llvm.dbg.declare(metadata i32* %audio_found, metadata !7352, metadata !2068), !dbg !7353
  store i32 0, i32* %audio_found, align 4, !dbg !7353
  call void @llvm.dbg.declare(metadata i32* %pce_found, metadata !7354, metadata !2068), !dbg !7355
  store i32 0, i32* %pce_found, align 4, !dbg !7355
  call void @llvm.dbg.declare(metadata i32* %is_dmono, metadata !7356, metadata !2068), !dbg !7357
  call void @llvm.dbg.declare(metadata i32* %sce_count, metadata !7358, metadata !2068), !dbg !7359
  store i32 0, i32* %sce_count, align 4, !dbg !7359
  call void @llvm.dbg.declare(metadata i32* %payload_alignment, metadata !7360, metadata !2068), !dbg !7361
  call void @llvm.dbg.declare(metadata [4 x [16 x i8]]* %che_presence, metadata !7362, metadata !2068), !dbg !7364
  %3 = bitcast [4 x [16 x i8]]* %che_presence to i8*, !dbg !7364
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 64, i32 16, i1 false), !dbg !7364
  %4 = load i8*, i8** %data.addr, align 8, !dbg !7365
  %5 = bitcast i8* %4 to %struct.AVFrame*, !dbg !7365
  %6 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7366
  %frame = getelementptr inbounds %struct.AACContext, %struct.AACContext* %6, i32 0, i32 2, !dbg !7367
  store %struct.AVFrame* %5, %struct.AVFrame** %frame, align 16, !dbg !7368
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7369
  %call = call i32 @show_bits(%struct.GetBitContext* %7, i32 12), !dbg !7371
  %cmp = icmp eq i32 %call, 4095, !dbg !7372
  br i1 %cmp, label %if.then, label %if.end12, !dbg !7373

if.then:                                          ; preds = %entry
  %8 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7374
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7377
  %call1 = call i32 @parse_adts_frame_header(%struct.AACContext* %8, %struct.GetBitContext* %9), !dbg !7378
  store i32 %call1, i32* %err, align 4, !dbg !7379
  %cmp2 = icmp slt i32 %call1, 0, !dbg !7380
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !7381

if.then3:                                         ; preds = %if.then
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7382
  %11 = bitcast %struct.AVCodecContext* %10 to i8*, !dbg !7382
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.64, i32 0, i32 0)), !dbg !7384
  br label %fail, !dbg !7385

if.end:                                           ; preds = %if.then
  %12 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7386
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 21, !dbg !7388
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !7386
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !7389
  %sampling_index = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 1, !dbg !7390
  %13 = load i32, i32* %sampling_index, align 4, !dbg !7390
  %cmp4 = icmp sgt i32 %13, 12, !dbg !7391
  br i1 %cmp4, label %if.then5, label %if.end11, !dbg !7392

if.then5:                                         ; preds = %if.end
  %14 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7393
  %avctx6 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %14, i32 0, i32 1, !dbg !7395
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx6, align 8, !dbg !7395
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !7393
  %17 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7396
  %oc7 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %17, i32 0, i32 21, !dbg !7397
  %arrayidx8 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc7, i64 0, i64 1, !dbg !7396
  %m4ac9 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx8, i32 0, i32 0, !dbg !7398
  %sampling_index10 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac9, i32 0, i32 1, !dbg !7399
  %18 = load i32, i32* %sampling_index10, align 4, !dbg !7399
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i32 0, i32 0), i32 %18), !dbg !7400
  store i32 -1094995529, i32* %err, align 4, !dbg !7401
  br label %fail, !dbg !7402

if.end11:                                         ; preds = %if.end
  br label %if.end12, !dbg !7403

if.end12:                                         ; preds = %if.end11, %entry
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7404
  %call13 = call i32 @frame_configure_elements(%struct.AVCodecContext* %19), !dbg !7406
  store i32 %call13, i32* %err, align 4, !dbg !7407
  %cmp14 = icmp slt i32 %call13, 0, !dbg !7408
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !7409

if.then15:                                        ; preds = %if.end12
  br label %fail, !dbg !7410

if.end16:                                         ; preds = %if.end12
  %20 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7411
  %oc17 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 21, !dbg !7412
  %arrayidx18 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc17, i64 0, i64 1, !dbg !7411
  %m4ac19 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx18, i32 0, i32 0, !dbg !7413
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac19, i32 0, i32 0, !dbg !7414
  %21 = load i32, i32* %object_type, align 8, !dbg !7414
  %sub = sub nsw i32 %21, 1, !dbg !7415
  %22 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7416
  %avctx20 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %22, i32 0, i32 1, !dbg !7417
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx20, align 8, !dbg !7417
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 153, !dbg !7418
  store i32 %sub, i32* %profile, align 4, !dbg !7419
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7420
  %call21 = call i32 @get_bits_count(%struct.GetBitContext* %24), !dbg !7421
  store i32 %call21, i32* %payload_alignment, align 4, !dbg !7422
  %25 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7423
  %tags_mapped = getelementptr inbounds %struct.AACContext, %struct.AACContext* %25, i32 0, i32 7, !dbg !7424
  store i32 0, i32* %tags_mapped, align 8, !dbg !7425
  br label %while.cond, !dbg !7426

while.cond:                                       ; preds = %if.end133, %if.end16
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7427
  %call22 = call i32 @get_bits(%struct.GetBitContext* %26, i32 3), !dbg !7429
  store i32 %call22, i32* %elem_type, align 4, !dbg !7430
  %cmp23 = icmp ne i32 %call22, 7, !dbg !7431
  br i1 %cmp23, label %while.body, label %while.end134, !dbg !7432

while.body:                                       ; preds = %while.cond
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7433
  %call24 = call i32 @get_bits(%struct.GetBitContext* %27, i32 4), !dbg !7435
  store i32 %call24, i32* %elem_id, align 4, !dbg !7436
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7437
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 134, !dbg !7439
  %29 = load i32, i32* %debug, align 4, !dbg !7439
  %and = and i32 %29, 256, !dbg !7440
  %tobool = icmp ne i32 %and, 0, !dbg !7440
  br i1 %tobool, label %if.then25, label %if.end26, !dbg !7441

if.then25:                                        ; preds = %while.body
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7442
  %31 = bitcast %struct.AVCodecContext* %30 to i8*, !dbg !7442
  %32 = load i32, i32* %elem_type, align 4, !dbg !7443
  %33 = load i32, i32* %elem_id, align 4, !dbg !7444
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i32 0, i32 0), i32 %32, i32 %33), !dbg !7445
  br label %if.end26, !dbg !7445

if.end26:                                         ; preds = %if.then25, %while.body
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7446
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 83, !dbg !7448
  %35 = load i32, i32* %channels, align 4, !dbg !7448
  %tobool27 = icmp ne i32 %35, 0, !dbg !7446
  br i1 %tobool27, label %if.end30, label %land.lhs.true, !dbg !7449

land.lhs.true:                                    ; preds = %if.end26
  %36 = load i32, i32* %elem_type, align 4, !dbg !7450
  %cmp28 = icmp ne i32 %36, 5, !dbg !7452
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !7453

if.then29:                                        ; preds = %land.lhs.true
  store i32 -1094995529, i32* %err, align 4, !dbg !7454
  br label %fail, !dbg !7456

if.end30:                                         ; preds = %land.lhs.true, %if.end26
  %37 = load i32, i32* %elem_type, align 4, !dbg !7457
  %cmp31 = icmp ult i32 %37, 4, !dbg !7459
  br i1 %cmp31, label %if.then32, label %if.end64, !dbg !7460

if.then32:                                        ; preds = %if.end30
  %38 = load i32, i32* %elem_id, align 4, !dbg !7461
  %idxprom = sext i32 %38 to i64, !dbg !7464
  %39 = load i32, i32* %elem_type, align 4, !dbg !7465
  %idxprom33 = zext i32 %39 to i64, !dbg !7464
  %arrayidx34 = getelementptr inbounds [4 x [16 x i8]], [4 x [16 x i8]]* %che_presence, i64 0, i64 %idxprom33, !dbg !7464
  %arrayidx35 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx34, i64 0, i64 %idxprom, !dbg !7464
  %40 = load i8, i8* %arrayidx35, align 1, !dbg !7464
  %tobool36 = icmp ne i8 %40, 0, !dbg !7464
  br i1 %tobool36, label %if.then37, label %if.end49, !dbg !7466

if.then37:                                        ; preds = %if.then32
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7467, metadata !2068), !dbg !7469
  %41 = load i32, i32* %elem_id, align 4, !dbg !7470
  %idxprom38 = sext i32 %41 to i64, !dbg !7471
  %42 = load i32, i32* %elem_type, align 4, !dbg !7472
  %idxprom39 = zext i32 %42 to i64, !dbg !7471
  %arrayidx40 = getelementptr inbounds [4 x [16 x i8]], [4 x [16 x i8]]* %che_presence, i64 0, i64 %idxprom39, !dbg !7471
  %arrayidx41 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx40, i64 0, i64 %idxprom38, !dbg !7471
  %43 = load i8, i8* %arrayidx41, align 1, !dbg !7471
  %conv = zext i8 %43 to i32, !dbg !7471
  %cmp42 = icmp sgt i32 %conv, 1, !dbg !7473
  %conv43 = zext i1 %cmp42 to i32, !dbg !7473
  store i32 %conv43, i32* %error, align 4, !dbg !7469
  %44 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7474
  %avctx44 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %44, i32 0, i32 1, !dbg !7475
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx44, align 8, !dbg !7475
  %46 = bitcast %struct.AVCodecContext* %45 to i8*, !dbg !7474
  %47 = load i32, i32* %error, align 4, !dbg !7476
  %tobool45 = icmp ne i32 %47, 0, !dbg !7476
  %cond = select i1 %tobool45, i32 16, i32 48, !dbg !7476
  %48 = load i32, i32* %elem_type, align 4, !dbg !7477
  %49 = load i32, i32* %elem_id, align 4, !dbg !7478
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 %cond, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.66, i32 0, i32 0), i32 %48, i32 %49), !dbg !7479
  %50 = load i32, i32* %error, align 4, !dbg !7480
  %tobool46 = icmp ne i32 %50, 0, !dbg !7480
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !7482

if.then47:                                        ; preds = %if.then37
  store i32 -1094995529, i32* %err, align 4, !dbg !7483
  br label %fail, !dbg !7485

if.end48:                                         ; preds = %if.then37
  br label %if.end49, !dbg !7486

if.end49:                                         ; preds = %if.end48, %if.then32
  %51 = load i32, i32* %elem_id, align 4, !dbg !7487
  %idxprom50 = sext i32 %51 to i64, !dbg !7488
  %52 = load i32, i32* %elem_type, align 4, !dbg !7489
  %idxprom51 = zext i32 %52 to i64, !dbg !7488
  %arrayidx52 = getelementptr inbounds [4 x [16 x i8]], [4 x [16 x i8]]* %che_presence, i64 0, i64 %idxprom51, !dbg !7488
  %arrayidx53 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx52, i64 0, i64 %idxprom50, !dbg !7488
  %53 = load i8, i8* %arrayidx53, align 1, !dbg !7490
  %inc = add i8 %53, 1, !dbg !7490
  store i8 %inc, i8* %arrayidx53, align 1, !dbg !7490
  %54 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7491
  %55 = load i32, i32* %elem_type, align 4, !dbg !7493
  %56 = load i32, i32* %elem_id, align 4, !dbg !7494
  %call54 = call %struct.ChannelElement* @get_che(%struct.AACContext* %54, i32 %55, i32 %56), !dbg !7495
  store %struct.ChannelElement* %call54, %struct.ChannelElement** %che, align 8, !dbg !7496
  %tobool55 = icmp ne %struct.ChannelElement* %call54, null, !dbg !7496
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !7497

if.then56:                                        ; preds = %if.end49
  %57 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7498
  %avctx57 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %57, i32 0, i32 1, !dbg !7500
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx57, align 8, !dbg !7500
  %59 = bitcast %struct.AVCodecContext* %58 to i8*, !dbg !7498
  %60 = load i32, i32* %elem_type, align 4, !dbg !7501
  %61 = load i32, i32* %elem_id, align 4, !dbg !7502
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i32 0, i32 0), i32 %60, i32 %61), !dbg !7503
  store i32 -1094995529, i32* %err, align 4, !dbg !7504
  br label %fail, !dbg !7505

if.end58:                                         ; preds = %if.end49
  %62 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7506
  %oc59 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %62, i32 0, i32 21, !dbg !7507
  %arrayidx60 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc59, i64 0, i64 1, !dbg !7506
  %m4ac61 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx60, i32 0, i32 0, !dbg !7508
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac61, i32 0, i32 11, !dbg !7509
  %63 = load i32, i32* %frame_length_short, align 4, !dbg !7509
  %tobool62 = icmp ne i32 %63, 0, !dbg !7506
  %cond63 = select i1 %tobool62, i32 960, i32 1024, !dbg !7506
  store i32 %cond63, i32* %samples, align 4, !dbg !7510
  %64 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7511
  %present = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %64, i32 0, i32 0, !dbg !7512
  store i32 1, i32* %present, align 32, !dbg !7513
  br label %if.end64, !dbg !7514

if.end64:                                         ; preds = %if.end58, %if.end30
  %65 = load i32, i32* %elem_type, align 4, !dbg !7515
  switch i32 %65, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb68
    i32 2, label %sw.bb70
    i32 3, label %sw.bb72
    i32 4, label %sw.bb76
    i32 5, label %sw.bb78
    i32 6, label %sw.bb104
  ], !dbg !7516

sw.bb:                                            ; preds = %if.end64
  %66 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7517
  %67 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7519
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %67, i32 0, i32 7, !dbg !7520
  %arrayidx65 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !7519
  %68 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7521
  %call66 = call i32 @decode_ics(%struct.AACContext* %66, %struct.SingleChannelElement* %arrayidx65, %struct.GetBitContext* %68, i32 0, i32 0), !dbg !7522
  store i32 %call66, i32* %err, align 4, !dbg !7523
  store i32 1, i32* %audio_found, align 4, !dbg !7524
  %69 = load i32, i32* %sce_count, align 4, !dbg !7525
  %inc67 = add nsw i32 %69, 1, !dbg !7525
  store i32 %inc67, i32* %sce_count, align 4, !dbg !7525
  br label %sw.epilog, !dbg !7526

sw.bb68:                                          ; preds = %if.end64
  %70 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7527
  %71 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7528
  %72 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7529
  %call69 = call i32 @decode_cpe(%struct.AACContext* %70, %struct.GetBitContext* %71, %struct.ChannelElement* %72), !dbg !7530
  store i32 %call69, i32* %err, align 4, !dbg !7531
  store i32 1, i32* %audio_found, align 4, !dbg !7532
  br label %sw.epilog, !dbg !7533

sw.bb70:                                          ; preds = %if.end64
  %73 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7534
  %74 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7535
  %75 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7536
  %call71 = call i32 @decode_cce(%struct.AACContext* %73, %struct.GetBitContext* %74, %struct.ChannelElement* %75), !dbg !7537
  store i32 %call71, i32* %err, align 4, !dbg !7538
  br label %sw.epilog, !dbg !7539

sw.bb72:                                          ; preds = %if.end64
  %76 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7540
  %77 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7541
  %ch73 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %77, i32 0, i32 7, !dbg !7542
  %arrayidx74 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch73, i64 0, i64 0, !dbg !7541
  %78 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7543
  %call75 = call i32 @decode_ics(%struct.AACContext* %76, %struct.SingleChannelElement* %arrayidx74, %struct.GetBitContext* %78, i32 0, i32 0), !dbg !7544
  store i32 %call75, i32* %err, align 4, !dbg !7545
  store i32 1, i32* %audio_found, align 4, !dbg !7546
  br label %sw.epilog, !dbg !7547

sw.bb76:                                          ; preds = %if.end64
  %79 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7548
  %80 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7549
  %call77 = call i32 @skip_data_stream_element(%struct.AACContext* %79, %struct.GetBitContext* %80), !dbg !7550
  store i32 %call77, i32* %err, align 4, !dbg !7551
  br label %sw.epilog, !dbg !7552

sw.bb78:                                          ; preds = %if.end64
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map, metadata !7553, metadata !2068), !dbg !7555
  call void @llvm.dbg.declare(metadata i32* %tags, metadata !7556, metadata !2068), !dbg !7557
  call void @llvm.dbg.declare(metadata i32* %pushed, metadata !7558, metadata !2068), !dbg !7559
  %81 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7560
  %call79 = call i32 @push_output_configuration(%struct.AACContext* %81), !dbg !7561
  store i32 %call79, i32* %pushed, align 4, !dbg !7559
  %82 = load i32, i32* %pce_found, align 4, !dbg !7562
  %tobool80 = icmp ne i32 %82, 0, !dbg !7562
  br i1 %tobool80, label %land.lhs.true81, label %if.end84, !dbg !7564

land.lhs.true81:                                  ; preds = %sw.bb78
  %83 = load i32, i32* %pushed, align 4, !dbg !7565
  %tobool82 = icmp ne i32 %83, 0, !dbg !7565
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !7567

if.then83:                                        ; preds = %land.lhs.true81
  store i32 -1094995529, i32* %err, align 4, !dbg !7568
  br label %fail, !dbg !7570

if.end84:                                         ; preds = %land.lhs.true81, %sw.bb78
  %84 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7571
  %85 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7572
  %oc85 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %85, i32 0, i32 21, !dbg !7573
  %arrayidx86 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc85, i64 0, i64 1, !dbg !7572
  %m4ac87 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx86, i32 0, i32 0, !dbg !7574
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !7575
  %86 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7576
  %87 = load i32, i32* %payload_alignment, align 4, !dbg !7577
  %call88 = call i32 @decode_pce(%struct.AVCodecContext* %84, %struct.MPEG4AudioConfig* %m4ac87, [3 x i8]* %arraydecay, %struct.GetBitContext* %86, i32 %87), !dbg !7578
  store i32 %call88, i32* %tags, align 4, !dbg !7579
  %88 = load i32, i32* %tags, align 4, !dbg !7580
  %cmp89 = icmp slt i32 %88, 0, !dbg !7582
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !7583

if.then91:                                        ; preds = %if.end84
  %89 = load i32, i32* %tags, align 4, !dbg !7584
  store i32 %89, i32* %err, align 4, !dbg !7586
  br label %sw.epilog, !dbg !7587

if.end92:                                         ; preds = %if.end84
  %90 = load i32, i32* %pce_found, align 4, !dbg !7588
  %tobool93 = icmp ne i32 %90, 0, !dbg !7588
  br i1 %tobool93, label %if.then94, label %if.else, !dbg !7590

if.then94:                                        ; preds = %if.end92
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7591
  %92 = bitcast %struct.AVCodecContext* %91 to i8*, !dbg !7591
  call void (i8*, i32, i8*, ...) @av_log(i8* %92, i32 16, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.67, i32 0, i32 0)), !dbg !7593
  %93 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7594
  call void @pop_output_configuration(%struct.AACContext* %93), !dbg !7595
  br label %if.end103, !dbg !7596

if.else:                                          ; preds = %if.end92
  %94 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7597
  %arraydecay95 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !7599
  %95 = load i32, i32* %tags, align 4, !dbg !7600
  %call96 = call i32 @output_configure(%struct.AACContext* %94, [3 x i8]* %arraydecay95, i32 %95, i32 1, i32 1), !dbg !7601
  store i32 %call96, i32* %err, align 4, !dbg !7602
  %96 = load i32, i32* %err, align 4, !dbg !7603
  %tobool97 = icmp ne i32 %96, 0, !dbg !7603
  br i1 %tobool97, label %if.end102, label %if.then98, !dbg !7605

if.then98:                                        ; preds = %if.else
  %97 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7606
  %oc99 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %97, i32 0, i32 21, !dbg !7607
  %arrayidx100 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc99, i64 0, i64 1, !dbg !7606
  %m4ac101 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx100, i32 0, i32 0, !dbg !7608
  %chan_config = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac101, i32 0, i32 3, !dbg !7609
  store i32 0, i32* %chan_config, align 4, !dbg !7610
  br label %if.end102, !dbg !7606

if.end102:                                        ; preds = %if.then98, %if.else
  store i32 1, i32* %pce_found, align 4, !dbg !7611
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then94
  br label %sw.epilog, !dbg !7612

sw.bb104:                                         ; preds = %if.end64
  %98 = load i32, i32* %elem_id, align 4, !dbg !7613
  %cmp105 = icmp eq i32 %98, 15, !dbg !7615
  br i1 %cmp105, label %if.then107, label %if.end110, !dbg !7616

if.then107:                                       ; preds = %sw.bb104
  %99 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7617
  %call108 = call i32 @get_bits(%struct.GetBitContext* %99, i32 8), !dbg !7618
  %sub109 = sub i32 %call108, 1, !dbg !7619
  %100 = load i32, i32* %elem_id, align 4, !dbg !7620
  %add = add i32 %100, %sub109, !dbg !7620
  store i32 %add, i32* %elem_id, align 4, !dbg !7620
  br label %if.end110, !dbg !7621

if.end110:                                        ; preds = %if.then107, %sw.bb104
  %101 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7622
  %call111 = call i32 @get_bits_left(%struct.GetBitContext* %101), !dbg !7624
  %102 = load i32, i32* %elem_id, align 4, !dbg !7625
  %mul = mul nsw i32 8, %102, !dbg !7626
  %cmp112 = icmp slt i32 %call111, %mul, !dbg !7627
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !7628

if.then114:                                       ; preds = %if.end110
  %103 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7629
  %104 = bitcast %struct.AVCodecContext* %103 to i8*, !dbg !7629
  call void (i8*, i32, i8*, ...) @av_log(i8* %104, i32 16, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.68, i32 0, i32 0)), !dbg !7631
  store i32 -1094995529, i32* %err, align 4, !dbg !7632
  br label %fail, !dbg !7633

if.end115:                                        ; preds = %if.end110
  br label %while.cond116, !dbg !7634

while.cond116:                                    ; preds = %while.body119, %if.end115
  %105 = load i32, i32* %elem_id, align 4, !dbg !7635
  %cmp117 = icmp sgt i32 %105, 0, !dbg !7637
  br i1 %cmp117, label %while.body119, label %while.end, !dbg !7638

while.body119:                                    ; preds = %while.cond116
  %106 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7639
  %107 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7640
  %108 = load i32, i32* %elem_id, align 4, !dbg !7641
  %109 = load %struct.ChannelElement*, %struct.ChannelElement** %che_prev, align 8, !dbg !7642
  %110 = load i32, i32* %che_prev_type, align 4, !dbg !7643
  %call120 = call i32 @decode_extension_payload(%struct.AACContext* %106, %struct.GetBitContext* %107, i32 %108, %struct.ChannelElement* %109, i32 %110), !dbg !7644
  %111 = load i32, i32* %elem_id, align 4, !dbg !7645
  %sub121 = sub nsw i32 %111, %call120, !dbg !7645
  store i32 %sub121, i32* %elem_id, align 4, !dbg !7645
  br label %while.cond116, !dbg !7646, !llvm.loop !7648

while.end:                                        ; preds = %while.cond116
  store i32 0, i32* %err, align 4, !dbg !7649
  br label %sw.epilog, !dbg !7650

sw.default:                                       ; preds = %if.end64
  store i32 -558323010, i32* %err, align 4, !dbg !7651
  br label %sw.epilog, !dbg !7652

sw.epilog:                                        ; preds = %sw.default, %while.end, %if.end103, %if.then91, %sw.bb76, %sw.bb72, %sw.bb70, %sw.bb68, %sw.bb
  %112 = load i32, i32* %elem_type, align 4, !dbg !7653
  %cmp122 = icmp ult i32 %112, 4, !dbg !7655
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !7656

if.then124:                                       ; preds = %sw.epilog
  %113 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7657
  store %struct.ChannelElement* %113, %struct.ChannelElement** %che_prev, align 8, !dbg !7659
  %114 = load i32, i32* %elem_type, align 4, !dbg !7660
  store i32 %114, i32* %che_prev_type, align 4, !dbg !7661
  br label %if.end125, !dbg !7662

if.end125:                                        ; preds = %if.then124, %sw.epilog
  %115 = load i32, i32* %err, align 4, !dbg !7663
  %tobool126 = icmp ne i32 %115, 0, !dbg !7663
  br i1 %tobool126, label %if.then127, label %if.end128, !dbg !7665

if.then127:                                       ; preds = %if.end125
  br label %fail, !dbg !7666

if.end128:                                        ; preds = %if.end125
  %116 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7667
  %call129 = call i32 @get_bits_left(%struct.GetBitContext* %116), !dbg !7669
  %cmp130 = icmp slt i32 %call129, 3, !dbg !7670
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !7671

if.then132:                                       ; preds = %if.end128
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7672
  %118 = bitcast %struct.AVCodecContext* %117 to i8*, !dbg !7672
  call void (i8*, i32, i8*, ...) @av_log(i8* %118, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.31, i32 0, i32 0)), !dbg !7674
  store i32 -1094995529, i32* %err, align 4, !dbg !7675
  br label %fail, !dbg !7676

if.end133:                                        ; preds = %if.end128
  br label %while.cond, !dbg !7677, !llvm.loop !7679

while.end134:                                     ; preds = %while.cond
  %119 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7680
  %channels135 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %119, i32 0, i32 83, !dbg !7682
  %120 = load i32, i32* %channels135, align 4, !dbg !7682
  %tobool136 = icmp ne i32 %120, 0, !dbg !7680
  br i1 %tobool136, label %if.end138, label %if.then137, !dbg !7683

if.then137:                                       ; preds = %while.end134
  %121 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !7684
  store i32 0, i32* %121, align 4, !dbg !7686
  store i32 0, i32* %retval, align 4, !dbg !7687
  br label %return, !dbg !7687

if.end138:                                        ; preds = %while.end134
  %122 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7688
  %oc139 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %122, i32 0, i32 21, !dbg !7689
  %arrayidx140 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc139, i64 0, i64 1, !dbg !7688
  %m4ac141 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx140, i32 0, i32 0, !dbg !7690
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac141, i32 0, i32 4, !dbg !7691
  %123 = load i32, i32* %sbr, align 8, !dbg !7691
  %cmp142 = icmp eq i32 %123, 1, !dbg !7692
  br i1 %cmp142, label %cond.true, label %cond.false, !dbg !7693

cond.true:                                        ; preds = %if.end138
  %124 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7694
  %oc144 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %124, i32 0, i32 21, !dbg !7695
  %arrayidx145 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc144, i64 0, i64 1, !dbg !7694
  %m4ac146 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx145, i32 0, i32 0, !dbg !7696
  %ext_sample_rate = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac146, i32 0, i32 7, !dbg !7697
  %125 = load i32, i32* %ext_sample_rate, align 4, !dbg !7697
  %126 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7698
  %oc147 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %126, i32 0, i32 21, !dbg !7699
  %arrayidx148 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc147, i64 0, i64 1, !dbg !7698
  %m4ac149 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx148, i32 0, i32 0, !dbg !7700
  %sample_rate = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac149, i32 0, i32 2, !dbg !7701
  %127 = load i32, i32* %sample_rate, align 8, !dbg !7701
  %cmp150 = icmp sgt i32 %125, %127, !dbg !7702
  %conv151 = zext i1 %cmp150 to i32, !dbg !7702
  br label %cond.end, !dbg !7703

cond.false:                                       ; preds = %if.end138
  br label %cond.end, !dbg !7704

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond152 = phi i32 [ %conv151, %cond.true ], [ 0, %cond.false ], !dbg !7705
  store i32 %cond152, i32* %multiplier, align 4, !dbg !7707
  %128 = load i32, i32* %multiplier, align 4, !dbg !7708
  %129 = load i32, i32* %samples, align 4, !dbg !7709
  %shl = shl i32 %129, %128, !dbg !7709
  store i32 %shl, i32* %samples, align 4, !dbg !7709
  %130 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7710
  %131 = load i32, i32* %samples, align 4, !dbg !7711
  call void @spectral_to_sample(%struct.AACContext* %130, i32 %131), !dbg !7712
  %132 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7713
  %oc153 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %132, i32 0, i32 21, !dbg !7715
  %arrayidx154 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc153, i64 0, i64 1, !dbg !7713
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx154, i32 0, i32 5, !dbg !7716
  %133 = load i32, i32* %status, align 8, !dbg !7716
  %tobool155 = icmp ne i32 %133, 0, !dbg !7713
  br i1 %tobool155, label %land.lhs.true156, label %if.end168, !dbg !7717

land.lhs.true156:                                 ; preds = %cond.end
  %134 = load i32, i32* %audio_found, align 4, !dbg !7718
  %tobool157 = icmp ne i32 %134, 0, !dbg !7718
  br i1 %tobool157, label %if.then158, label %if.end168, !dbg !7720

if.then158:                                       ; preds = %land.lhs.true156
  %135 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7721
  %oc159 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %135, i32 0, i32 21, !dbg !7723
  %arrayidx160 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc159, i64 0, i64 1, !dbg !7721
  %m4ac161 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx160, i32 0, i32 0, !dbg !7724
  %sample_rate162 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac161, i32 0, i32 2, !dbg !7725
  %136 = load i32, i32* %sample_rate162, align 8, !dbg !7725
  %137 = load i32, i32* %multiplier, align 4, !dbg !7726
  %shl163 = shl i32 %136, %137, !dbg !7727
  %138 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7728
  %sample_rate164 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %138, i32 0, i32 82, !dbg !7729
  store i32 %shl163, i32* %sample_rate164, align 8, !dbg !7730
  %139 = load i32, i32* %samples, align 4, !dbg !7731
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7732
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %140, i32 0, i32 85, !dbg !7733
  store i32 %139, i32* %frame_size, align 4, !dbg !7734
  %141 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7735
  %oc165 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %141, i32 0, i32 21, !dbg !7736
  %arrayidx166 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc165, i64 0, i64 1, !dbg !7735
  %status167 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx166, i32 0, i32 5, !dbg !7737
  store i32 4, i32* %status167, align 8, !dbg !7738
  br label %if.end168, !dbg !7739

if.end168:                                        ; preds = %if.then158, %land.lhs.true156, %cond.end
  %142 = load i32, i32* %multiplier, align 4, !dbg !7740
  %tobool169 = icmp ne i32 %142, 0, !dbg !7740
  br i1 %tobool169, label %if.then170, label %if.end171, !dbg !7742

if.then170:                                       ; preds = %if.end168
  %143 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7743
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %143, i32 0, i32 7, !dbg !7744
  %144 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !7744
  %skip_samples_multiplier = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %144, i32 0, i32 25, !dbg !7745
  store i32 2, i32* %skip_samples_multiplier, align 4, !dbg !7746
  br label %if.end171, !dbg !7743

if.end171:                                        ; preds = %if.then170, %if.end168
  %145 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7747
  %frame172 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %145, i32 0, i32 2, !dbg !7749
  %146 = load %struct.AVFrame*, %struct.AVFrame** %frame172, align 16, !dbg !7749
  %data173 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %146, i32 0, i32 0, !dbg !7750
  %arrayidx174 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data173, i64 0, i64 0, !dbg !7747
  %147 = load i8*, i8** %arrayidx174, align 8, !dbg !7747
  %tobool175 = icmp ne i8* %147, null, !dbg !7747
  br i1 %tobool175, label %if.end179, label %land.lhs.true176, !dbg !7751

land.lhs.true176:                                 ; preds = %if.end171
  %148 = load i32, i32* %samples, align 4, !dbg !7752
  %tobool177 = icmp ne i32 %148, 0, !dbg !7752
  br i1 %tobool177, label %if.then178, label %if.end179, !dbg !7754

if.then178:                                       ; preds = %land.lhs.true176
  %149 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7755
  %150 = bitcast %struct.AVCodecContext* %149 to i8*, !dbg !7755
  call void (i8*, i32, i8*, ...) @av_log(i8* %150, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0)), !dbg !7757
  store i32 -1094995529, i32* %err, align 4, !dbg !7758
  br label %fail, !dbg !7759

if.end179:                                        ; preds = %land.lhs.true176, %if.end171
  %151 = load i32, i32* %samples, align 4, !dbg !7760
  %tobool180 = icmp ne i32 %151, 0, !dbg !7760
  br i1 %tobool180, label %if.then181, label %if.else186, !dbg !7762

if.then181:                                       ; preds = %if.end179
  %152 = load i32, i32* %samples, align 4, !dbg !7763
  %153 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7765
  %frame182 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %153, i32 0, i32 2, !dbg !7766
  %154 = load %struct.AVFrame*, %struct.AVFrame** %frame182, align 16, !dbg !7766
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %154, i32 0, i32 5, !dbg !7767
  store i32 %152, i32* %nb_samples, align 8, !dbg !7768
  %155 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7769
  %sample_rate183 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %155, i32 0, i32 82, !dbg !7770
  %156 = load i32, i32* %sample_rate183, align 8, !dbg !7770
  %157 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7771
  %frame184 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %157, i32 0, i32 2, !dbg !7772
  %158 = load %struct.AVFrame*, %struct.AVFrame** %frame184, align 16, !dbg !7772
  %sample_rate185 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %158, i32 0, i32 23, !dbg !7773
  store i32 %156, i32* %sample_rate185, align 8, !dbg !7774
  br label %if.end188, !dbg !7775

if.else186:                                       ; preds = %if.end179
  %159 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7776
  %frame187 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %159, i32 0, i32 2, !dbg !7777
  %160 = load %struct.AVFrame*, %struct.AVFrame** %frame187, align 16, !dbg !7777
  call void @av_frame_unref(%struct.AVFrame* %160), !dbg !7778
  br label %if.end188

if.end188:                                        ; preds = %if.else186, %if.then181
  %161 = load i32, i32* %samples, align 4, !dbg !7779
  %tobool189 = icmp ne i32 %161, 0, !dbg !7780
  %lnot = xor i1 %tobool189, true, !dbg !7780
  %lnot190 = xor i1 %lnot, true, !dbg !7781
  %lnot.ext = zext i1 %lnot190 to i32, !dbg !7781
  %162 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !7782
  store i32 %lnot.ext, i32* %162, align 4, !dbg !7783
  %163 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7784
  %dmono_mode = getelementptr inbounds %struct.AACContext, %struct.AACContext* %163, i32 0, i32 18, !dbg !7785
  %164 = load i32, i32* %dmono_mode, align 4, !dbg !7785
  %tobool191 = icmp ne i32 %164, 0, !dbg !7784
  br i1 %tobool191, label %land.lhs.true192, label %land.end, !dbg !7786

land.lhs.true192:                                 ; preds = %if.end188
  %165 = load i32, i32* %sce_count, align 4, !dbg !7787
  %cmp193 = icmp eq i32 %165, 2, !dbg !7788
  br i1 %cmp193, label %land.rhs, label %land.end, !dbg !7789

land.rhs:                                         ; preds = %land.lhs.true192
  %166 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7790
  %oc195 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %166, i32 0, i32 21, !dbg !7791
  %arrayidx196 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc195, i64 0, i64 1, !dbg !7790
  %channel_layout = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx196, i32 0, i32 4, !dbg !7792
  %167 = load i64, i64* %channel_layout, align 8, !dbg !7792
  %cmp197 = icmp eq i64 %167, 3, !dbg !7793
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true192, %if.end188
  %168 = phi i1 [ false, %land.lhs.true192 ], [ false, %if.end188 ], [ %cmp197, %land.rhs ]
  %land.ext = zext i1 %168 to i32, !dbg !7794
  store i32 %land.ext, i32* %is_dmono, align 4, !dbg !7795
  %169 = load i32, i32* %is_dmono, align 4, !dbg !7796
  %tobool199 = icmp ne i32 %169, 0, !dbg !7796
  br i1 %tobool199, label %if.then200, label %if.end220, !dbg !7798

if.then200:                                       ; preds = %land.end
  %170 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7799
  %dmono_mode201 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %170, i32 0, i32 18, !dbg !7802
  %171 = load i32, i32* %dmono_mode201, align 4, !dbg !7802
  %cmp202 = icmp eq i32 %171, 1, !dbg !7803
  br i1 %cmp202, label %if.then204, label %if.else209, !dbg !7804

if.then204:                                       ; preds = %if.then200
  %172 = load i8*, i8** %data.addr, align 8, !dbg !7805
  %173 = bitcast i8* %172 to %struct.AVFrame*, !dbg !7806
  %data205 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %173, i32 0, i32 0, !dbg !7807
  %arrayidx206 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data205, i64 0, i64 0, !dbg !7808
  %174 = load i8*, i8** %arrayidx206, align 8, !dbg !7808
  %175 = load i8*, i8** %data.addr, align 8, !dbg !7809
  %176 = bitcast i8* %175 to %struct.AVFrame*, !dbg !7810
  %data207 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %176, i32 0, i32 0, !dbg !7811
  %arrayidx208 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data207, i64 0, i64 1, !dbg !7812
  store i8* %174, i8** %arrayidx208, align 8, !dbg !7813
  br label %if.end219, !dbg !7812

if.else209:                                       ; preds = %if.then200
  %177 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7814
  %dmono_mode210 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %177, i32 0, i32 18, !dbg !7816
  %178 = load i32, i32* %dmono_mode210, align 4, !dbg !7816
  %cmp211 = icmp eq i32 %178, 2, !dbg !7817
  br i1 %cmp211, label %if.then213, label %if.end218, !dbg !7818

if.then213:                                       ; preds = %if.else209
  %179 = load i8*, i8** %data.addr, align 8, !dbg !7819
  %180 = bitcast i8* %179 to %struct.AVFrame*, !dbg !7820
  %data214 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %180, i32 0, i32 0, !dbg !7821
  %arrayidx215 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data214, i64 0, i64 1, !dbg !7822
  %181 = load i8*, i8** %arrayidx215, align 8, !dbg !7822
  %182 = load i8*, i8** %data.addr, align 8, !dbg !7823
  %183 = bitcast i8* %182 to %struct.AVFrame*, !dbg !7824
  %data216 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %183, i32 0, i32 0, !dbg !7825
  %arrayidx217 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data216, i64 0, i64 0, !dbg !7826
  store i8* %181, i8** %arrayidx217, align 8, !dbg !7827
  br label %if.end218, !dbg !7826

if.end218:                                        ; preds = %if.then213, %if.else209
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then204
  br label %if.end220, !dbg !7828

if.end220:                                        ; preds = %if.end219, %land.end
  store i32 0, i32* %retval, align 4, !dbg !7829
  br label %return, !dbg !7829

fail:                                             ; preds = %if.then178, %if.then132, %if.then127, %if.then114, %if.then83, %if.then56, %if.then47, %if.then29, %if.then15, %if.then5, %if.then3
  %184 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7830
  call void @pop_output_configuration(%struct.AACContext* %184), !dbg !7831
  %185 = load i32, i32* %err, align 4, !dbg !7832
  store i32 %185, i32* %retval, align 4, !dbg !7833
  br label %return, !dbg !7833

return:                                           ; preds = %fail, %if.end220, %if.then137
  %186 = load i32, i32* %retval, align 4, !dbg !7834
  ret i32 %186, !dbg !7834
}

; Function Attrs: nounwind uwtable
define internal %struct.ChannelElement* @get_che(%struct.AACContext* %ac, i32 %type, i32 %elem_id) #1 !dbg !7835 {
entry:
  %retval = alloca %struct.ChannelElement*, align 8
  %ac.addr = alloca %struct.AACContext*, align 8
  %type.addr = alloca i32, align 4
  %elem_id.addr = alloca i32, align 4
  %layout_map = alloca [64 x [3 x i8]], align 16
  %layout_map_tags = alloca i32, align 4
  %layout_map41 = alloca [64 x [3 x i8]], align 16
  %layout_map_tags42 = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !7838, metadata !2068), !dbg !7839
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7840, metadata !2068), !dbg !7841
  store i32 %elem_id, i32* %elem_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elem_id.addr, metadata !7842, metadata !2068), !dbg !7843
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7844
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 21, !dbg !7846
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !7844
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !7847
  %chan_config = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 3, !dbg !7848
  %1 = load i32, i32* %chan_config, align 4, !dbg !7848
  %tobool = icmp ne i32 %1, 0, !dbg !7844
  br i1 %tobool, label %if.end, label %if.then, !dbg !7849

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %elem_id.addr, align 4, !dbg !7850
  %idxprom = sext i32 %2 to i64, !dbg !7852
  %3 = load i32, i32* %type.addr, align 4, !dbg !7853
  %idxprom1 = sext i32 %3 to i64, !dbg !7852
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7852
  %tag_che_map = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 6, !dbg !7854
  %arrayidx2 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map, i64 0, i64 %idxprom1, !dbg !7852
  %arrayidx3 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx2, i64 0, i64 %idxprom, !dbg !7852
  %5 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx3, align 8, !dbg !7852
  store %struct.ChannelElement* %5, %struct.ChannelElement** %retval, align 8, !dbg !7855
  br label %return, !dbg !7855

if.end:                                           ; preds = %entry
  %6 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7856
  %tags_mapped = getelementptr inbounds %struct.AACContext, %struct.AACContext* %6, i32 0, i32 7, !dbg !7858
  %7 = load i32, i32* %tags_mapped, align 8, !dbg !7858
  %tobool4 = icmp ne i32 %7, 0, !dbg !7856
  br i1 %tobool4, label %if.end29, label %land.lhs.true, !dbg !7859

land.lhs.true:                                    ; preds = %if.end
  %8 = load i32, i32* %type.addr, align 4, !dbg !7860
  %cmp = icmp eq i32 %8, 1, !dbg !7862
  br i1 %cmp, label %land.lhs.true5, label %if.end29, !dbg !7863

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7864
  %oc6 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %9, i32 0, i32 21, !dbg !7865
  %arrayidx7 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc6, i64 0, i64 1, !dbg !7864
  %m4ac8 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx7, i32 0, i32 0, !dbg !7866
  %chan_config9 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac8, i32 0, i32 3, !dbg !7867
  %10 = load i32, i32* %chan_config9, align 4, !dbg !7867
  %cmp10 = icmp eq i32 %10, 1, !dbg !7868
  br i1 %cmp10, label %if.then11, label %if.end29, !dbg !7869

if.then11:                                        ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map, metadata !7871, metadata !2068), !dbg !7873
  call void @llvm.dbg.declare(metadata i32* %layout_map_tags, metadata !7874, metadata !2068), !dbg !7875
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7876
  %call = call i32 @push_output_configuration(%struct.AACContext* %11), !dbg !7877
  %12 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7878
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 1, !dbg !7879
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7879
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !7878
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 48, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0)), !dbg !7880
  %15 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7881
  %avctx12 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %15, i32 0, i32 1, !dbg !7883
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx12, align 8, !dbg !7883
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !7884
  %call13 = call i32 @set_default_channel_config(%struct.AVCodecContext* %16, [3 x i8]* %arraydecay, i32* %layout_map_tags, i32 2), !dbg !7885
  %cmp14 = icmp slt i32 %call13, 0, !dbg !7886
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !7887

if.then15:                                        ; preds = %if.then11
  store %struct.ChannelElement* null, %struct.ChannelElement** %retval, align 8, !dbg !7888
  br label %return, !dbg !7888

if.end16:                                         ; preds = %if.then11
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7889
  %arraydecay17 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !7891
  %18 = load i32, i32* %layout_map_tags, align 4, !dbg !7892
  %call18 = call i32 @output_configure(%struct.AACContext* %17, [3 x i8]* %arraydecay17, i32 %18, i32 2, i32 1), !dbg !7893
  %cmp19 = icmp slt i32 %call18, 0, !dbg !7894
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !7895

if.then20:                                        ; preds = %if.end16
  store %struct.ChannelElement* null, %struct.ChannelElement** %retval, align 8, !dbg !7896
  br label %return, !dbg !7896

if.end21:                                         ; preds = %if.end16
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7897
  %oc22 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 21, !dbg !7898
  %arrayidx23 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc22, i64 0, i64 1, !dbg !7897
  %m4ac24 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx23, i32 0, i32 0, !dbg !7899
  %chan_config25 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac24, i32 0, i32 3, !dbg !7900
  store i32 2, i32* %chan_config25, align 4, !dbg !7901
  %20 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7902
  %oc26 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 21, !dbg !7903
  %arrayidx27 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc26, i64 0, i64 1, !dbg !7902
  %m4ac28 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx27, i32 0, i32 0, !dbg !7904
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac28, i32 0, i32 10, !dbg !7905
  store i32 0, i32* %ps, align 8, !dbg !7906
  br label %if.end29, !dbg !7907

if.end29:                                         ; preds = %if.end21, %land.lhs.true5, %land.lhs.true, %if.end
  %21 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7908
  %tags_mapped30 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %21, i32 0, i32 7, !dbg !7910
  %22 = load i32, i32* %tags_mapped30, align 8, !dbg !7910
  %tobool31 = icmp ne i32 %22, 0, !dbg !7908
  br i1 %tobool31, label %if.end70, label %land.lhs.true32, !dbg !7911

land.lhs.true32:                                  ; preds = %if.end29
  %23 = load i32, i32* %type.addr, align 4, !dbg !7912
  %cmp33 = icmp eq i32 %23, 0, !dbg !7914
  br i1 %cmp33, label %land.lhs.true34, label %if.end70, !dbg !7915

land.lhs.true34:                                  ; preds = %land.lhs.true32
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7916
  %oc35 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 21, !dbg !7917
  %arrayidx36 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc35, i64 0, i64 1, !dbg !7916
  %m4ac37 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx36, i32 0, i32 0, !dbg !7918
  %chan_config38 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac37, i32 0, i32 3, !dbg !7919
  %25 = load i32, i32* %chan_config38, align 4, !dbg !7919
  %cmp39 = icmp eq i32 %25, 2, !dbg !7920
  br i1 %cmp39, label %if.then40, label %if.end70, !dbg !7921

if.then40:                                        ; preds = %land.lhs.true34
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map41, metadata !7922, metadata !2068), !dbg !7924
  call void @llvm.dbg.declare(metadata i32* %layout_map_tags42, metadata !7925, metadata !2068), !dbg !7926
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7927
  %call43 = call i32 @push_output_configuration(%struct.AACContext* %26), !dbg !7928
  %27 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7929
  %avctx44 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %27, i32 0, i32 1, !dbg !7930
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx44, align 8, !dbg !7930
  %29 = bitcast %struct.AVCodecContext* %28 to i8*, !dbg !7929
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i32 0, i32 0)), !dbg !7931
  %30 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7932
  %avctx45 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %30, i32 0, i32 1, !dbg !7934
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx45, align 8, !dbg !7934
  %arraydecay46 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map41, i32 0, i32 0, !dbg !7935
  %call47 = call i32 @set_default_channel_config(%struct.AVCodecContext* %31, [3 x i8]* %arraydecay46, i32* %layout_map_tags42, i32 1), !dbg !7936
  %cmp48 = icmp slt i32 %call47, 0, !dbg !7937
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !7938

if.then49:                                        ; preds = %if.then40
  store %struct.ChannelElement* null, %struct.ChannelElement** %retval, align 8, !dbg !7939
  br label %return, !dbg !7939

if.end50:                                         ; preds = %if.then40
  %32 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7940
  %arraydecay51 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map41, i32 0, i32 0, !dbg !7942
  %33 = load i32, i32* %layout_map_tags42, align 4, !dbg !7943
  %call52 = call i32 @output_configure(%struct.AACContext* %32, [3 x i8]* %arraydecay51, i32 %33, i32 2, i32 1), !dbg !7944
  %cmp53 = icmp slt i32 %call52, 0, !dbg !7945
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !7946

if.then54:                                        ; preds = %if.end50
  store %struct.ChannelElement* null, %struct.ChannelElement** %retval, align 8, !dbg !7947
  br label %return, !dbg !7947

if.end55:                                         ; preds = %if.end50
  %34 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7948
  %oc56 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %34, i32 0, i32 21, !dbg !7949
  %arrayidx57 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc56, i64 0, i64 1, !dbg !7948
  %m4ac58 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx57, i32 0, i32 0, !dbg !7950
  %chan_config59 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac58, i32 0, i32 3, !dbg !7951
  store i32 1, i32* %chan_config59, align 4, !dbg !7952
  %35 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7953
  %oc60 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %35, i32 0, i32 21, !dbg !7955
  %arrayidx61 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc60, i64 0, i64 1, !dbg !7953
  %m4ac62 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx61, i32 0, i32 0, !dbg !7956
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac62, i32 0, i32 4, !dbg !7957
  %36 = load i32, i32* %sbr, align 8, !dbg !7957
  %tobool63 = icmp ne i32 %36, 0, !dbg !7953
  br i1 %tobool63, label %if.then64, label %if.end69, !dbg !7958

if.then64:                                        ; preds = %if.end55
  %37 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7959
  %oc65 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %37, i32 0, i32 21, !dbg !7960
  %arrayidx66 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc65, i64 0, i64 1, !dbg !7959
  %m4ac67 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx66, i32 0, i32 0, !dbg !7961
  %ps68 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac67, i32 0, i32 10, !dbg !7962
  store i32 -1, i32* %ps68, align 8, !dbg !7963
  br label %if.end69, !dbg !7959

if.end69:                                         ; preds = %if.then64, %if.end55
  br label %if.end70, !dbg !7964

if.end70:                                         ; preds = %if.end69, %land.lhs.true34, %land.lhs.true32, %if.end29
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7965
  %oc71 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %38, i32 0, i32 21, !dbg !7966
  %arrayidx72 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc71, i64 0, i64 1, !dbg !7965
  %m4ac73 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx72, i32 0, i32 0, !dbg !7967
  %chan_config74 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac73, i32 0, i32 3, !dbg !7968
  %39 = load i32, i32* %chan_config74, align 4, !dbg !7968
  switch i32 %39, label %sw.default [
    i32 12, label %sw.bb
    i32 7, label %sw.bb
    i32 11, label %sw.bb88
    i32 6, label %sw.bb110
    i32 5, label %sw.bb151
    i32 4, label %sw.bb169
    i32 3, label %sw.bb239
    i32 2, label %sw.bb239
    i32 1, label %sw.bb271
  ], !dbg !7969

sw.bb:                                            ; preds = %if.end70, %if.end70
  %40 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7970
  %tags_mapped75 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %40, i32 0, i32 7, !dbg !7973
  %41 = load i32, i32* %tags_mapped75, align 8, !dbg !7973
  %cmp76 = icmp eq i32 %41, 3, !dbg !7974
  br i1 %cmp76, label %land.lhs.true77, label %if.end87, !dbg !7975

land.lhs.true77:                                  ; preds = %sw.bb
  %42 = load i32, i32* %type.addr, align 4, !dbg !7976
  %cmp78 = icmp eq i32 %42, 1, !dbg !7978
  br i1 %cmp78, label %if.then79, label %if.end87, !dbg !7979

if.then79:                                        ; preds = %land.lhs.true77
  %43 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7980
  %tags_mapped80 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %43, i32 0, i32 7, !dbg !7982
  %44 = load i32, i32* %tags_mapped80, align 8, !dbg !7983
  %inc = add nsw i32 %44, 1, !dbg !7983
  store i32 %inc, i32* %tags_mapped80, align 8, !dbg !7983
  %45 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7984
  %che = getelementptr inbounds %struct.AACContext, %struct.AACContext* %45, i32 0, i32 5, !dbg !7985
  %arrayidx81 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che, i64 0, i64 1, !dbg !7984
  %arrayidx82 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx81, i64 0, i64 2, !dbg !7984
  %46 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx82, align 8, !dbg !7984
  %47 = load i32, i32* %elem_id.addr, align 4, !dbg !7986
  %idxprom83 = sext i32 %47 to i64, !dbg !7987
  %48 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7987
  %tag_che_map84 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %48, i32 0, i32 6, !dbg !7988
  %arrayidx85 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map84, i64 0, i64 1, !dbg !7987
  %arrayidx86 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx85, i64 0, i64 %idxprom83, !dbg !7987
  store %struct.ChannelElement* %46, %struct.ChannelElement** %arrayidx86, align 8, !dbg !7989
  store %struct.ChannelElement* %46, %struct.ChannelElement** %retval, align 8, !dbg !7990
  br label %return, !dbg !7990

if.end87:                                         ; preds = %land.lhs.true77, %sw.bb
  br label %sw.bb88, !dbg !7991

sw.bb88:                                          ; preds = %if.end70, %if.end87
  %49 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7993
  %tags_mapped89 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %49, i32 0, i32 7, !dbg !7995
  %50 = load i32, i32* %tags_mapped89, align 8, !dbg !7995
  %cmp90 = icmp eq i32 %50, 2, !dbg !7996
  br i1 %cmp90, label %land.lhs.true91, label %if.end109, !dbg !7997

land.lhs.true91:                                  ; preds = %sw.bb88
  %51 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7998
  %oc92 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %51, i32 0, i32 21, !dbg !7999
  %arrayidx93 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc92, i64 0, i64 1, !dbg !7998
  %m4ac94 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx93, i32 0, i32 0, !dbg !8000
  %chan_config95 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac94, i32 0, i32 3, !dbg !8001
  %52 = load i32, i32* %chan_config95, align 4, !dbg !8001
  %cmp96 = icmp eq i32 %52, 11, !dbg !8002
  br i1 %cmp96, label %land.lhs.true97, label %if.end109, !dbg !8003

land.lhs.true97:                                  ; preds = %land.lhs.true91
  %53 = load i32, i32* %type.addr, align 4, !dbg !8004
  %cmp98 = icmp eq i32 %53, 0, !dbg !8005
  br i1 %cmp98, label %if.then99, label %if.end109, !dbg !8006

if.then99:                                        ; preds = %land.lhs.true97
  %54 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8008
  %tags_mapped100 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %54, i32 0, i32 7, !dbg !8010
  %55 = load i32, i32* %tags_mapped100, align 8, !dbg !8011
  %inc101 = add nsw i32 %55, 1, !dbg !8011
  store i32 %inc101, i32* %tags_mapped100, align 8, !dbg !8011
  %56 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8012
  %che102 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %56, i32 0, i32 5, !dbg !8013
  %arrayidx103 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che102, i64 0, i64 0, !dbg !8012
  %arrayidx104 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx103, i64 0, i64 1, !dbg !8012
  %57 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx104, align 8, !dbg !8012
  %58 = load i32, i32* %elem_id.addr, align 4, !dbg !8014
  %idxprom105 = sext i32 %58 to i64, !dbg !8015
  %59 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8015
  %tag_che_map106 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %59, i32 0, i32 6, !dbg !8016
  %arrayidx107 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map106, i64 0, i64 0, !dbg !8015
  %arrayidx108 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx107, i64 0, i64 %idxprom105, !dbg !8015
  store %struct.ChannelElement* %57, %struct.ChannelElement** %arrayidx108, align 8, !dbg !8017
  store %struct.ChannelElement* %57, %struct.ChannelElement** %retval, align 8, !dbg !8018
  br label %return, !dbg !8018

if.end109:                                        ; preds = %land.lhs.true97, %land.lhs.true91, %sw.bb88
  br label %sw.bb110, !dbg !8019

sw.bb110:                                         ; preds = %if.end70, %if.end109
  %60 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8021
  %tags_mapped111 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %60, i32 0, i32 7, !dbg !8023
  %61 = load i32, i32* %tags_mapped111, align 8, !dbg !8023
  %62 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8024
  %oc112 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %62, i32 0, i32 21, !dbg !8025
  %arrayidx113 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc112, i64 0, i64 1, !dbg !8024
  %m4ac114 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx113, i32 0, i32 0, !dbg !8026
  %chan_config115 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac114, i32 0, i32 3, !dbg !8027
  %63 = load i32, i32* %chan_config115, align 4, !dbg !8027
  %idxprom116 = sext i32 %63 to i64, !dbg !8028
  %arrayidx117 = getelementptr inbounds [16 x i8], [16 x i8]* @tags_per_config, i64 0, i64 %idxprom116, !dbg !8028
  %64 = load i8, i8* %arrayidx117, align 1, !dbg !8028
  %conv = sext i8 %64 to i32, !dbg !8028
  %sub = sub nsw i32 %conv, 1, !dbg !8029
  %cmp118 = icmp eq i32 %61, %sub, !dbg !8030
  br i1 %cmp118, label %land.lhs.true120, label %if.end150, !dbg !8031

land.lhs.true120:                                 ; preds = %sw.bb110
  %65 = load i32, i32* %type.addr, align 4, !dbg !8032
  %cmp121 = icmp eq i32 %65, 3, !dbg !8034
  br i1 %cmp121, label %if.then125, label %lor.lhs.false, !dbg !8035

lor.lhs.false:                                    ; preds = %land.lhs.true120
  %66 = load i32, i32* %type.addr, align 4, !dbg !8036
  %cmp123 = icmp eq i32 %66, 0, !dbg !8038
  br i1 %cmp123, label %if.then125, label %if.end150, !dbg !8039

if.then125:                                       ; preds = %lor.lhs.false, %land.lhs.true120
  %67 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8040
  %warned_remapping_once = getelementptr inbounds %struct.AACContext, %struct.AACContext* %67, i32 0, i32 8, !dbg !8043
  %68 = load i32, i32* %warned_remapping_once, align 4, !dbg !8043
  %tobool126 = icmp ne i32 %68, 0, !dbg !8040
  br i1 %tobool126, label %if.end139, label %land.lhs.true127, !dbg !8044

land.lhs.true127:                                 ; preds = %if.then125
  %69 = load i32, i32* %type.addr, align 4, !dbg !8045
  %cmp128 = icmp ne i32 %69, 3, !dbg !8047
  br i1 %cmp128, label %if.then133, label %lor.lhs.false130, !dbg !8048

lor.lhs.false130:                                 ; preds = %land.lhs.true127
  %70 = load i32, i32* %elem_id.addr, align 4, !dbg !8049
  %cmp131 = icmp ne i32 %70, 0, !dbg !8051
  br i1 %cmp131, label %if.then133, label %if.end139, !dbg !8052

if.then133:                                       ; preds = %lor.lhs.false130, %land.lhs.true127
  %71 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8053
  %avctx134 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %71, i32 0, i32 1, !dbg !8055
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx134, align 8, !dbg !8055
  %73 = bitcast %struct.AVCodecContext* %72 to i8*, !dbg !8053
  %74 = load i32, i32* %type.addr, align 4, !dbg !8056
  %cmp135 = icmp eq i32 %74, 0, !dbg !8057
  %cond = select i1 %cmp135, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), !dbg !8056
  %75 = load i32, i32* %elem_id.addr, align 4, !dbg !8058
  call void (i8*, i32, i8*, ...) @av_log(i8* %73, i32 24, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.40, i32 0, i32 0), i8* %cond, i32 %75), !dbg !8059
  %76 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8060
  %warned_remapping_once137 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %76, i32 0, i32 8, !dbg !8061
  %77 = load i32, i32* %warned_remapping_once137, align 4, !dbg !8062
  %inc138 = add nsw i32 %77, 1, !dbg !8062
  store i32 %inc138, i32* %warned_remapping_once137, align 4, !dbg !8062
  br label %if.end139, !dbg !8063

if.end139:                                        ; preds = %if.then133, %lor.lhs.false130, %if.then125
  %78 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8064
  %tags_mapped140 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %78, i32 0, i32 7, !dbg !8065
  %79 = load i32, i32* %tags_mapped140, align 8, !dbg !8066
  %inc141 = add nsw i32 %79, 1, !dbg !8066
  store i32 %inc141, i32* %tags_mapped140, align 8, !dbg !8066
  %80 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8067
  %che142 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %80, i32 0, i32 5, !dbg !8068
  %arrayidx143 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che142, i64 0, i64 3, !dbg !8067
  %arrayidx144 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx143, i64 0, i64 0, !dbg !8067
  %81 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx144, align 8, !dbg !8067
  %82 = load i32, i32* %elem_id.addr, align 4, !dbg !8069
  %idxprom145 = sext i32 %82 to i64, !dbg !8070
  %83 = load i32, i32* %type.addr, align 4, !dbg !8071
  %idxprom146 = sext i32 %83 to i64, !dbg !8070
  %84 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8070
  %tag_che_map147 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %84, i32 0, i32 6, !dbg !8072
  %arrayidx148 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map147, i64 0, i64 %idxprom146, !dbg !8070
  %arrayidx149 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx148, i64 0, i64 %idxprom145, !dbg !8070
  store %struct.ChannelElement* %81, %struct.ChannelElement** %arrayidx149, align 8, !dbg !8073
  store %struct.ChannelElement* %81, %struct.ChannelElement** %retval, align 8, !dbg !8074
  br label %return, !dbg !8074

if.end150:                                        ; preds = %lor.lhs.false, %sw.bb110
  br label %sw.bb151, !dbg !8075

sw.bb151:                                         ; preds = %if.end70, %if.end150
  %85 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8077
  %tags_mapped152 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %85, i32 0, i32 7, !dbg !8079
  %86 = load i32, i32* %tags_mapped152, align 8, !dbg !8079
  %cmp153 = icmp eq i32 %86, 2, !dbg !8080
  br i1 %cmp153, label %land.lhs.true155, label %if.end168, !dbg !8081

land.lhs.true155:                                 ; preds = %sw.bb151
  %87 = load i32, i32* %type.addr, align 4, !dbg !8082
  %cmp156 = icmp eq i32 %87, 1, !dbg !8084
  br i1 %cmp156, label %if.then158, label %if.end168, !dbg !8085

if.then158:                                       ; preds = %land.lhs.true155
  %88 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8086
  %tags_mapped159 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %88, i32 0, i32 7, !dbg !8088
  %89 = load i32, i32* %tags_mapped159, align 8, !dbg !8089
  %inc160 = add nsw i32 %89, 1, !dbg !8089
  store i32 %inc160, i32* %tags_mapped159, align 8, !dbg !8089
  %90 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8090
  %che161 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %90, i32 0, i32 5, !dbg !8091
  %arrayidx162 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che161, i64 0, i64 1, !dbg !8090
  %arrayidx163 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx162, i64 0, i64 1, !dbg !8090
  %91 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx163, align 8, !dbg !8090
  %92 = load i32, i32* %elem_id.addr, align 4, !dbg !8092
  %idxprom164 = sext i32 %92 to i64, !dbg !8093
  %93 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8093
  %tag_che_map165 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %93, i32 0, i32 6, !dbg !8094
  %arrayidx166 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map165, i64 0, i64 1, !dbg !8093
  %arrayidx167 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx166, i64 0, i64 %idxprom164, !dbg !8093
  store %struct.ChannelElement* %91, %struct.ChannelElement** %arrayidx167, align 8, !dbg !8095
  store %struct.ChannelElement* %91, %struct.ChannelElement** %retval, align 8, !dbg !8096
  br label %return, !dbg !8096

if.end168:                                        ; preds = %land.lhs.true155, %sw.bb151
  br label %sw.bb169, !dbg !8097

sw.bb169:                                         ; preds = %if.end70, %if.end168
  %94 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8099
  %tags_mapped170 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %94, i32 0, i32 7, !dbg !8101
  %95 = load i32, i32* %tags_mapped170, align 8, !dbg !8101
  %96 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8102
  %oc171 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %96, i32 0, i32 21, !dbg !8103
  %arrayidx172 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc171, i64 0, i64 1, !dbg !8102
  %m4ac173 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx172, i32 0, i32 0, !dbg !8104
  %chan_config174 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac173, i32 0, i32 3, !dbg !8105
  %97 = load i32, i32* %chan_config174, align 4, !dbg !8105
  %idxprom175 = sext i32 %97 to i64, !dbg !8106
  %arrayidx176 = getelementptr inbounds [16 x i8], [16 x i8]* @tags_per_config, i64 0, i64 %idxprom175, !dbg !8106
  %98 = load i8, i8* %arrayidx176, align 1, !dbg !8106
  %conv177 = sext i8 %98 to i32, !dbg !8106
  %sub178 = sub nsw i32 %conv177, 1, !dbg !8107
  %cmp179 = icmp eq i32 %95, %sub178, !dbg !8108
  br i1 %cmp179, label %land.lhs.true181, label %if.end214, !dbg !8109

land.lhs.true181:                                 ; preds = %sw.bb169
  %99 = load i32, i32* %type.addr, align 4, !dbg !8110
  %cmp182 = icmp eq i32 %99, 3, !dbg !8112
  br i1 %cmp182, label %if.then187, label %lor.lhs.false184, !dbg !8113

lor.lhs.false184:                                 ; preds = %land.lhs.true181
  %100 = load i32, i32* %type.addr, align 4, !dbg !8114
  %cmp185 = icmp eq i32 %100, 0, !dbg !8116
  br i1 %cmp185, label %if.then187, label %if.end214, !dbg !8117

if.then187:                                       ; preds = %lor.lhs.false184, %land.lhs.true181
  %101 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8118
  %warned_remapping_once188 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %101, i32 0, i32 8, !dbg !8121
  %102 = load i32, i32* %warned_remapping_once188, align 4, !dbg !8121
  %tobool189 = icmp ne i32 %102, 0, !dbg !8118
  br i1 %tobool189, label %if.end203, label %land.lhs.true190, !dbg !8122

land.lhs.true190:                                 ; preds = %if.then187
  %103 = load i32, i32* %type.addr, align 4, !dbg !8123
  %cmp191 = icmp ne i32 %103, 0, !dbg !8125
  br i1 %cmp191, label %if.then196, label %lor.lhs.false193, !dbg !8126

lor.lhs.false193:                                 ; preds = %land.lhs.true190
  %104 = load i32, i32* %elem_id.addr, align 4, !dbg !8127
  %cmp194 = icmp ne i32 %104, 1, !dbg !8129
  br i1 %cmp194, label %if.then196, label %if.end203, !dbg !8130

if.then196:                                       ; preds = %lor.lhs.false193, %land.lhs.true190
  %105 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8131
  %avctx197 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %105, i32 0, i32 1, !dbg !8133
  %106 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx197, align 8, !dbg !8133
  %107 = bitcast %struct.AVCodecContext* %106 to i8*, !dbg !8131
  %108 = load i32, i32* %type.addr, align 4, !dbg !8134
  %cmp198 = icmp eq i32 %108, 0, !dbg !8135
  %cond200 = select i1 %cmp198, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), !dbg !8134
  %109 = load i32, i32* %elem_id.addr, align 4, !dbg !8136
  call void (i8*, i32, i8*, ...) @av_log(i8* %107, i32 24, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.43, i32 0, i32 0), i8* %cond200, i32 %109), !dbg !8137
  %110 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8138
  %warned_remapping_once201 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %110, i32 0, i32 8, !dbg !8139
  %111 = load i32, i32* %warned_remapping_once201, align 4, !dbg !8140
  %inc202 = add nsw i32 %111, 1, !dbg !8140
  store i32 %inc202, i32* %warned_remapping_once201, align 4, !dbg !8140
  br label %if.end203, !dbg !8141

if.end203:                                        ; preds = %if.then196, %lor.lhs.false193, %if.then187
  %112 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8142
  %tags_mapped204 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %112, i32 0, i32 7, !dbg !8143
  %113 = load i32, i32* %tags_mapped204, align 8, !dbg !8144
  %inc205 = add nsw i32 %113, 1, !dbg !8144
  store i32 %inc205, i32* %tags_mapped204, align 8, !dbg !8144
  %114 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8145
  %che206 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %114, i32 0, i32 5, !dbg !8146
  %arrayidx207 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che206, i64 0, i64 0, !dbg !8145
  %arrayidx208 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx207, i64 0, i64 1, !dbg !8145
  %115 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx208, align 8, !dbg !8145
  %116 = load i32, i32* %elem_id.addr, align 4, !dbg !8147
  %idxprom209 = sext i32 %116 to i64, !dbg !8148
  %117 = load i32, i32* %type.addr, align 4, !dbg !8149
  %idxprom210 = sext i32 %117 to i64, !dbg !8148
  %118 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8148
  %tag_che_map211 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %118, i32 0, i32 6, !dbg !8150
  %arrayidx212 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map211, i64 0, i64 %idxprom210, !dbg !8148
  %arrayidx213 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx212, i64 0, i64 %idxprom209, !dbg !8148
  store %struct.ChannelElement* %115, %struct.ChannelElement** %arrayidx213, align 8, !dbg !8151
  store %struct.ChannelElement* %115, %struct.ChannelElement** %retval, align 8, !dbg !8152
  br label %return, !dbg !8152

if.end214:                                        ; preds = %lor.lhs.false184, %sw.bb169
  %119 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8153
  %tags_mapped215 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %119, i32 0, i32 7, !dbg !8155
  %120 = load i32, i32* %tags_mapped215, align 8, !dbg !8155
  %cmp216 = icmp eq i32 %120, 2, !dbg !8156
  br i1 %cmp216, label %land.lhs.true218, label %if.end238, !dbg !8157

land.lhs.true218:                                 ; preds = %if.end214
  %121 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8158
  %oc219 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %121, i32 0, i32 21, !dbg !8159
  %arrayidx220 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc219, i64 0, i64 1, !dbg !8158
  %m4ac221 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx220, i32 0, i32 0, !dbg !8160
  %chan_config222 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac221, i32 0, i32 3, !dbg !8161
  %122 = load i32, i32* %chan_config222, align 4, !dbg !8161
  %cmp223 = icmp eq i32 %122, 4, !dbg !8162
  br i1 %cmp223, label %land.lhs.true225, label %if.end238, !dbg !8163

land.lhs.true225:                                 ; preds = %land.lhs.true218
  %123 = load i32, i32* %type.addr, align 4, !dbg !8164
  %cmp226 = icmp eq i32 %123, 0, !dbg !8165
  br i1 %cmp226, label %if.then228, label %if.end238, !dbg !8166

if.then228:                                       ; preds = %land.lhs.true225
  %124 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8167
  %tags_mapped229 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %124, i32 0, i32 7, !dbg !8169
  %125 = load i32, i32* %tags_mapped229, align 8, !dbg !8170
  %inc230 = add nsw i32 %125, 1, !dbg !8170
  store i32 %inc230, i32* %tags_mapped229, align 8, !dbg !8170
  %126 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8171
  %che231 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %126, i32 0, i32 5, !dbg !8172
  %arrayidx232 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che231, i64 0, i64 0, !dbg !8171
  %arrayidx233 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx232, i64 0, i64 1, !dbg !8171
  %127 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx233, align 8, !dbg !8171
  %128 = load i32, i32* %elem_id.addr, align 4, !dbg !8173
  %idxprom234 = sext i32 %128 to i64, !dbg !8174
  %129 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8174
  %tag_che_map235 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %129, i32 0, i32 6, !dbg !8175
  %arrayidx236 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map235, i64 0, i64 0, !dbg !8174
  %arrayidx237 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx236, i64 0, i64 %idxprom234, !dbg !8174
  store %struct.ChannelElement* %127, %struct.ChannelElement** %arrayidx237, align 8, !dbg !8176
  store %struct.ChannelElement* %127, %struct.ChannelElement** %retval, align 8, !dbg !8177
  br label %return, !dbg !8177

if.end238:                                        ; preds = %land.lhs.true225, %land.lhs.true218, %if.end214
  br label %sw.bb239, !dbg !8178

sw.bb239:                                         ; preds = %if.end70, %if.end70, %if.end238
  %130 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8180
  %tags_mapped240 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %130, i32 0, i32 7, !dbg !8182
  %131 = load i32, i32* %tags_mapped240, align 8, !dbg !8182
  %132 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8183
  %oc241 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %132, i32 0, i32 21, !dbg !8184
  %arrayidx242 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc241, i64 0, i64 1, !dbg !8183
  %m4ac243 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx242, i32 0, i32 0, !dbg !8185
  %chan_config244 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac243, i32 0, i32 3, !dbg !8186
  %133 = load i32, i32* %chan_config244, align 4, !dbg !8186
  %cmp245 = icmp ne i32 %133, 2, !dbg !8187
  %conv246 = zext i1 %cmp245 to i32, !dbg !8187
  %cmp247 = icmp eq i32 %131, %conv246, !dbg !8188
  br i1 %cmp247, label %land.lhs.true249, label %if.else, !dbg !8189

land.lhs.true249:                                 ; preds = %sw.bb239
  %134 = load i32, i32* %type.addr, align 4, !dbg !8190
  %cmp250 = icmp eq i32 %134, 1, !dbg !8191
  br i1 %cmp250, label %if.then252, label %if.else, !dbg !8192

if.then252:                                       ; preds = %land.lhs.true249
  %135 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8193
  %tags_mapped253 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %135, i32 0, i32 7, !dbg !8195
  %136 = load i32, i32* %tags_mapped253, align 8, !dbg !8196
  %inc254 = add nsw i32 %136, 1, !dbg !8196
  store i32 %inc254, i32* %tags_mapped253, align 8, !dbg !8196
  %137 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8197
  %che255 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %137, i32 0, i32 5, !dbg !8198
  %arrayidx256 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che255, i64 0, i64 1, !dbg !8197
  %arrayidx257 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx256, i64 0, i64 0, !dbg !8197
  %138 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx257, align 8, !dbg !8197
  %139 = load i32, i32* %elem_id.addr, align 4, !dbg !8199
  %idxprom258 = sext i32 %139 to i64, !dbg !8200
  %140 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8200
  %tag_che_map259 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %140, i32 0, i32 6, !dbg !8201
  %arrayidx260 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map259, i64 0, i64 1, !dbg !8200
  %arrayidx261 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx260, i64 0, i64 %idxprom258, !dbg !8200
  store %struct.ChannelElement* %138, %struct.ChannelElement** %arrayidx261, align 8, !dbg !8202
  store %struct.ChannelElement* %138, %struct.ChannelElement** %retval, align 8, !dbg !8203
  br label %return, !dbg !8203

if.else:                                          ; preds = %land.lhs.true249, %sw.bb239
  %141 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8204
  %oc262 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %141, i32 0, i32 21, !dbg !8206
  %arrayidx263 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc262, i64 0, i64 1, !dbg !8204
  %m4ac264 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx263, i32 0, i32 0, !dbg !8207
  %chan_config265 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac264, i32 0, i32 3, !dbg !8208
  %142 = load i32, i32* %chan_config265, align 4, !dbg !8208
  %cmp266 = icmp eq i32 %142, 2, !dbg !8209
  br i1 %cmp266, label %if.then268, label %if.end269, !dbg !8210

if.then268:                                       ; preds = %if.else
  store %struct.ChannelElement* null, %struct.ChannelElement** %retval, align 8, !dbg !8211
  br label %return, !dbg !8211

if.end269:                                        ; preds = %if.else
  br label %if.end270

if.end270:                                        ; preds = %if.end269
  br label %sw.bb271, !dbg !8213

sw.bb271:                                         ; preds = %if.end70, %if.end270
  %143 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8215
  %tags_mapped272 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %143, i32 0, i32 7, !dbg !8217
  %144 = load i32, i32* %tags_mapped272, align 8, !dbg !8217
  %tobool273 = icmp ne i32 %144, 0, !dbg !8215
  br i1 %tobool273, label %if.end287, label %land.lhs.true274, !dbg !8218

land.lhs.true274:                                 ; preds = %sw.bb271
  %145 = load i32, i32* %type.addr, align 4, !dbg !8219
  %cmp275 = icmp eq i32 %145, 0, !dbg !8221
  br i1 %cmp275, label %if.then277, label %if.end287, !dbg !8222

if.then277:                                       ; preds = %land.lhs.true274
  %146 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8223
  %tags_mapped278 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %146, i32 0, i32 7, !dbg !8225
  %147 = load i32, i32* %tags_mapped278, align 8, !dbg !8226
  %inc279 = add nsw i32 %147, 1, !dbg !8226
  store i32 %inc279, i32* %tags_mapped278, align 8, !dbg !8226
  %148 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8227
  %che280 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %148, i32 0, i32 5, !dbg !8228
  %arrayidx281 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che280, i64 0, i64 0, !dbg !8227
  %arrayidx282 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx281, i64 0, i64 0, !dbg !8227
  %149 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx282, align 8, !dbg !8227
  %150 = load i32, i32* %elem_id.addr, align 4, !dbg !8229
  %idxprom283 = sext i32 %150 to i64, !dbg !8230
  %151 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8230
  %tag_che_map284 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %151, i32 0, i32 6, !dbg !8231
  %arrayidx285 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map284, i64 0, i64 0, !dbg !8230
  %arrayidx286 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx285, i64 0, i64 %idxprom283, !dbg !8230
  store %struct.ChannelElement* %149, %struct.ChannelElement** %arrayidx286, align 8, !dbg !8232
  store %struct.ChannelElement* %149, %struct.ChannelElement** %retval, align 8, !dbg !8233
  br label %return, !dbg !8233

if.end287:                                        ; preds = %land.lhs.true274, %sw.bb271
  br label %sw.default, !dbg !8234

sw.default:                                       ; preds = %if.end70, %if.end287
  store %struct.ChannelElement* null, %struct.ChannelElement** %retval, align 8, !dbg !8236
  br label %return, !dbg !8236

return:                                           ; preds = %sw.default, %if.then277, %if.then268, %if.then252, %if.then228, %if.end203, %if.then158, %if.end139, %if.then99, %if.then79, %if.then54, %if.then49, %if.then20, %if.then15, %if.then
  %152 = load %struct.ChannelElement*, %struct.ChannelElement** %retval, align 8, !dbg !8237
  ret %struct.ChannelElement* %152, !dbg !8237
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_ics(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce, %struct.GetBitContext* %gb, i32 %common_window, i32 %scale_flag) #1 !dbg !8238 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %common_window.addr = alloca i32, align 4
  %scale_flag.addr = alloca i32, align 4
  %pulse = alloca %struct.Pulse, align 4
  %tns = alloca %struct.TemporalNoiseShaping*, align 8
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %out = alloca i32*, align 8
  %global_gain = alloca i32, align 4
  %eld_syntax = alloca i32, align 4
  %er_syntax = alloca i32, align 4
  %pulse_present = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !8241, metadata !2068), !dbg !8242
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !8243, metadata !2068), !dbg !8244
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8245, metadata !2068), !dbg !8246
  store i32 %common_window, i32* %common_window.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %common_window.addr, metadata !8247, metadata !2068), !dbg !8248
  store i32 %scale_flag, i32* %scale_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_flag.addr, metadata !8249, metadata !2068), !dbg !8250
  call void @llvm.dbg.declare(metadata %struct.Pulse* %pulse, metadata !8251, metadata !2068), !dbg !8252
  call void @llvm.dbg.declare(metadata %struct.TemporalNoiseShaping** %tns, metadata !8253, metadata !2068), !dbg !8254
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8255
  %tns1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 1, !dbg !8256
  store %struct.TemporalNoiseShaping* %tns1, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8254
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !8257, metadata !2068), !dbg !8258
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8259
  %ics2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 0, !dbg !8260
  store %struct.IndividualChannelStream* %ics2, %struct.IndividualChannelStream** %ics, align 8, !dbg !8258
  call void @llvm.dbg.declare(metadata i32** %out, metadata !8261, metadata !2068), !dbg !8262
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8263
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 14, !dbg !8264
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs, i32 0, i32 0, !dbg !8263
  store i32* %arraydecay, i32** %out, align 8, !dbg !8262
  call void @llvm.dbg.declare(metadata i32* %global_gain, metadata !8265, metadata !2068), !dbg !8266
  call void @llvm.dbg.declare(metadata i32* %eld_syntax, metadata !8267, metadata !2068), !dbg !8268
  call void @llvm.dbg.declare(metadata i32* %er_syntax, metadata !8269, metadata !2068), !dbg !8270
  call void @llvm.dbg.declare(metadata i32* %pulse_present, metadata !8271, metadata !2068), !dbg !8272
  store i32 0, i32* %pulse_present, align 4, !dbg !8272
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8273, metadata !2068), !dbg !8274
  %3 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8275
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %3, i32 0, i32 21, !dbg !8276
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !8275
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !8277
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 0, !dbg !8278
  %4 = load i32, i32* %object_type, align 8, !dbg !8278
  %cmp = icmp eq i32 %4, 39, !dbg !8279
  %conv = zext i1 %cmp to i32, !dbg !8279
  store i32 %conv, i32* %eld_syntax, align 4, !dbg !8280
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8281
  %oc3 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 21, !dbg !8282
  %arrayidx4 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc3, i64 0, i64 1, !dbg !8281
  %m4ac5 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx4, i32 0, i32 0, !dbg !8283
  %object_type6 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac5, i32 0, i32 0, !dbg !8284
  %6 = load i32, i32* %object_type6, align 8, !dbg !8284
  %cmp7 = icmp eq i32 %6, 17, !dbg !8285
  br i1 %cmp7, label %lor.end, label %lor.lhs.false, !dbg !8286

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8287
  %oc9 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 21, !dbg !8288
  %arrayidx10 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc9, i64 0, i64 1, !dbg !8287
  %m4ac11 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx10, i32 0, i32 0, !dbg !8289
  %object_type12 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac11, i32 0, i32 0, !dbg !8290
  %8 = load i32, i32* %object_type12, align 8, !dbg !8290
  %cmp13 = icmp eq i32 %8, 19, !dbg !8291
  br i1 %cmp13, label %lor.end, label %lor.lhs.false15, !dbg !8292

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %9 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8293
  %oc16 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %9, i32 0, i32 21, !dbg !8294
  %arrayidx17 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc16, i64 0, i64 1, !dbg !8293
  %m4ac18 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx17, i32 0, i32 0, !dbg !8295
  %object_type19 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac18, i32 0, i32 0, !dbg !8296
  %10 = load i32, i32* %object_type19, align 8, !dbg !8296
  %cmp20 = icmp eq i32 %10, 23, !dbg !8297
  br i1 %cmp20, label %lor.end, label %lor.rhs, !dbg !8298

lor.rhs:                                          ; preds = %lor.lhs.false15
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8299
  %oc22 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %11, i32 0, i32 21, !dbg !8300
  %arrayidx23 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc22, i64 0, i64 1, !dbg !8299
  %m4ac24 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx23, i32 0, i32 0, !dbg !8301
  %object_type25 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac24, i32 0, i32 0, !dbg !8302
  %12 = load i32, i32* %object_type25, align 8, !dbg !8302
  %cmp26 = icmp eq i32 %12, 39, !dbg !8303
  br label %lor.end, !dbg !8304

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false15, %lor.lhs.false, %entry
  %13 = phi i1 [ true, %lor.lhs.false15 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp26, %lor.rhs ]
  %lor.ext = zext i1 %13 to i32, !dbg !8306
  store i32 %lor.ext, i32* %er_syntax, align 4, !dbg !8308
  %num_pulse = getelementptr inbounds %struct.Pulse, %struct.Pulse* %pulse, i32 0, i32 0, !dbg !8309
  store i32 0, i32* %num_pulse, align 4, !dbg !8310
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8311
  %call = call i32 @get_bits(%struct.GetBitContext* %14, i32 8), !dbg !8312
  store i32 %call, i32* %global_gain, align 4, !dbg !8313
  %15 = load i32, i32* %common_window.addr, align 4, !dbg !8314
  %tobool = icmp ne i32 %15, 0, !dbg !8314
  br i1 %tobool, label %if.end33, label %land.lhs.true, !dbg !8316

land.lhs.true:                                    ; preds = %lor.end
  %16 = load i32, i32* %scale_flag.addr, align 4, !dbg !8317
  %tobool28 = icmp ne i32 %16, 0, !dbg !8317
  br i1 %tobool28, label %if.end33, label %if.then, !dbg !8319

if.then:                                          ; preds = %land.lhs.true
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8320
  %18 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8322
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8323
  %call29 = call i32 @decode_ics_info(%struct.AACContext* %17, %struct.IndividualChannelStream* %18, %struct.GetBitContext* %19), !dbg !8324
  store i32 %call29, i32* %ret, align 4, !dbg !8325
  %20 = load i32, i32* %ret, align 4, !dbg !8326
  %cmp30 = icmp slt i32 %20, 0, !dbg !8328
  br i1 %cmp30, label %if.then32, label %if.end, !dbg !8329

if.then32:                                        ; preds = %if.then
  br label %fail, !dbg !8330

if.end:                                           ; preds = %if.then
  br label %if.end33, !dbg !8331

if.end33:                                         ; preds = %if.end, %land.lhs.true, %lor.end
  %21 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8332
  %22 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8334
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %22, i32 0, i32 3, !dbg !8335
  %arraydecay34 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i32 0, i32 0, !dbg !8334
  %23 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8336
  %band_type_run_end = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %23, i32 0, i32 5, !dbg !8337
  %arraydecay35 = getelementptr inbounds [120 x i32], [120 x i32]* %band_type_run_end, i32 0, i32 0, !dbg !8336
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8338
  %25 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8339
  %call36 = call i32 @decode_band_types(%struct.AACContext* %21, i32* %arraydecay34, i32* %arraydecay35, %struct.GetBitContext* %24, %struct.IndividualChannelStream* %25), !dbg !8340
  store i32 %call36, i32* %ret, align 4, !dbg !8341
  %cmp37 = icmp slt i32 %call36, 0, !dbg !8342
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !8343

if.then39:                                        ; preds = %if.end33
  br label %fail, !dbg !8344

if.end40:                                         ; preds = %if.end33
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8345
  %27 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8347
  %sf = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %27, i32 0, i32 6, !dbg !8348
  %arraydecay41 = getelementptr inbounds [120 x i32], [120 x i32]* %sf, i32 0, i32 0, !dbg !8347
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8349
  %29 = load i32, i32* %global_gain, align 4, !dbg !8350
  %30 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8351
  %31 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8352
  %band_type42 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %31, i32 0, i32 3, !dbg !8353
  %arraydecay43 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type42, i32 0, i32 0, !dbg !8352
  %32 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8354
  %band_type_run_end44 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %32, i32 0, i32 5, !dbg !8355
  %arraydecay45 = getelementptr inbounds [120 x i32], [120 x i32]* %band_type_run_end44, i32 0, i32 0, !dbg !8354
  %call46 = call i32 @decode_scalefactors(%struct.AACContext* %26, i32* %arraydecay41, %struct.GetBitContext* %28, i32 %29, %struct.IndividualChannelStream* %30, i32* %arraydecay43, i32* %arraydecay45), !dbg !8356
  store i32 %call46, i32* %ret, align 4, !dbg !8357
  %cmp47 = icmp slt i32 %call46, 0, !dbg !8358
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !8359

if.then49:                                        ; preds = %if.end40
  br label %fail, !dbg !8360

if.end50:                                         ; preds = %if.end40
  store i32 0, i32* %pulse_present, align 4, !dbg !8361
  %33 = load i32, i32* %scale_flag.addr, align 4, !dbg !8362
  %tobool51 = icmp ne i32 %33, 0, !dbg !8362
  br i1 %tobool51, label %if.end103, label %if.then52, !dbg !8364

if.then52:                                        ; preds = %if.end50
  %34 = load i32, i32* %eld_syntax, align 4, !dbg !8365
  %tobool53 = icmp ne i32 %34, 0, !dbg !8365
  br i1 %tobool53, label %if.end68, label %land.lhs.true54, !dbg !8368

land.lhs.true54:                                  ; preds = %if.then52
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8369
  %call55 = call i32 @get_bits1(%struct.GetBitContext* %35), !dbg !8371
  store i32 %call55, i32* %pulse_present, align 4, !dbg !8372
  %tobool56 = icmp ne i32 %call55, 0, !dbg !8372
  br i1 %tobool56, label %if.then57, label %if.end68, !dbg !8373

if.then57:                                        ; preds = %land.lhs.true54
  %36 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8374
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %36, i32 0, i32 1, !dbg !8377
  %arrayidx58 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !8374
  %37 = load i32, i32* %arrayidx58, align 4, !dbg !8374
  %cmp59 = icmp eq i32 %37, 2, !dbg !8378
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !8379

if.then61:                                        ; preds = %if.then57
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8380
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %38, i32 0, i32 1, !dbg !8382
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8382
  %40 = bitcast %struct.AVCodecContext* %39 to i8*, !dbg !8380
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.44, i32 0, i32 0)), !dbg !8383
  store i32 -1094995529, i32* %ret, align 4, !dbg !8384
  br label %fail, !dbg !8385

if.end62:                                         ; preds = %if.then57
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8386
  %42 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8388
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %42, i32 0, i32 6, !dbg !8389
  %43 = load i16*, i16** %swb_offset, align 8, !dbg !8389
  %44 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8390
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %44, i32 0, i32 8, !dbg !8391
  %45 = load i32, i32* %num_swb, align 8, !dbg !8391
  %call63 = call i32 @decode_pulses(%struct.Pulse* %pulse, %struct.GetBitContext* %41, i16* %43, i32 %45), !dbg !8392
  %tobool64 = icmp ne i32 %call63, 0, !dbg !8392
  br i1 %tobool64, label %if.then65, label %if.end67, !dbg !8393

if.then65:                                        ; preds = %if.end62
  %46 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8394
  %avctx66 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %46, i32 0, i32 1, !dbg !8396
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx66, align 8, !dbg !8396
  %48 = bitcast %struct.AVCodecContext* %47 to i8*, !dbg !8394
  call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.45, i32 0, i32 0)), !dbg !8397
  store i32 -1094995529, i32* %ret, align 4, !dbg !8398
  br label %fail, !dbg !8399

if.end67:                                         ; preds = %if.end62
  br label %if.end68, !dbg !8400

if.end68:                                         ; preds = %if.end67, %land.lhs.true54, %if.then52
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8401
  %call69 = call i32 @get_bits1(%struct.GetBitContext* %49), !dbg !8402
  %50 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8403
  %present = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %50, i32 0, i32 0, !dbg !8404
  store i32 %call69, i32* %present, align 4, !dbg !8405
  %51 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8406
  %present70 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %51, i32 0, i32 0, !dbg !8408
  %52 = load i32, i32* %present70, align 4, !dbg !8408
  %tobool71 = icmp ne i32 %52, 0, !dbg !8406
  br i1 %tobool71, label %land.lhs.true72, label %if.end80, !dbg !8409

land.lhs.true72:                                  ; preds = %if.end68
  %53 = load i32, i32* %er_syntax, align 4, !dbg !8410
  %tobool73 = icmp ne i32 %53, 0, !dbg !8410
  br i1 %tobool73, label %if.end80, label %if.then74, !dbg !8412

if.then74:                                        ; preds = %land.lhs.true72
  %54 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8413
  %55 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8415
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8416
  %57 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8417
  %call75 = call i32 @decode_tns(%struct.AACContext* %54, %struct.TemporalNoiseShaping* %55, %struct.GetBitContext* %56, %struct.IndividualChannelStream* %57), !dbg !8418
  store i32 %call75, i32* %ret, align 4, !dbg !8419
  %58 = load i32, i32* %ret, align 4, !dbg !8420
  %cmp76 = icmp slt i32 %58, 0, !dbg !8422
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !8423

if.then78:                                        ; preds = %if.then74
  br label %fail, !dbg !8424

if.end79:                                         ; preds = %if.then74
  br label %if.end80, !dbg !8425

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %if.end68
  %59 = load i32, i32* %eld_syntax, align 4, !dbg !8426
  %tobool81 = icmp ne i32 %59, 0, !dbg !8426
  br i1 %tobool81, label %if.end91, label %land.lhs.true82, !dbg !8428

land.lhs.true82:                                  ; preds = %if.end80
  %60 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8429
  %call83 = call i32 @get_bits1(%struct.GetBitContext* %60), !dbg !8431
  %tobool84 = icmp ne i32 %call83, 0, !dbg !8431
  br i1 %tobool84, label %if.then85, label %if.end91, !dbg !8432

if.then85:                                        ; preds = %land.lhs.true82
  %61 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8433
  %62 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8435
  call void @decode_gain_control(%struct.SingleChannelElement* %61, %struct.GetBitContext* %62), !dbg !8436
  %63 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8437
  %warned_gain_control = getelementptr inbounds %struct.AACContext, %struct.AACContext* %63, i32 0, i32 24, !dbg !8439
  %64 = load i32, i32* %warned_gain_control, align 8, !dbg !8439
  %tobool86 = icmp ne i32 %64, 0, !dbg !8437
  br i1 %tobool86, label %if.end90, label %if.then87, !dbg !8440

if.then87:                                        ; preds = %if.then85
  %65 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8441
  %avctx88 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %65, i32 0, i32 1, !dbg !8443
  %66 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx88, align 8, !dbg !8443
  %67 = bitcast %struct.AVCodecContext* %66 to i8*, !dbg !8441
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %67, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i32 0, i32 0)), !dbg !8444
  %68 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8445
  %warned_gain_control89 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %68, i32 0, i32 24, !dbg !8446
  store i32 1, i32* %warned_gain_control89, align 8, !dbg !8447
  br label %if.end90, !dbg !8448

if.end90:                                         ; preds = %if.then87, %if.then85
  br label %if.end91, !dbg !8449

if.end91:                                         ; preds = %if.end90, %land.lhs.true82, %if.end80
  %69 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8450
  %present92 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %69, i32 0, i32 0, !dbg !8452
  %70 = load i32, i32* %present92, align 4, !dbg !8452
  %tobool93 = icmp ne i32 %70, 0, !dbg !8450
  br i1 %tobool93, label %land.lhs.true94, label %if.end102, !dbg !8453

land.lhs.true94:                                  ; preds = %if.end91
  %71 = load i32, i32* %er_syntax, align 4, !dbg !8454
  %tobool95 = icmp ne i32 %71, 0, !dbg !8454
  br i1 %tobool95, label %if.then96, label %if.end102, !dbg !8456

if.then96:                                        ; preds = %land.lhs.true94
  %72 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8457
  %73 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8459
  %74 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8460
  %75 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8461
  %call97 = call i32 @decode_tns(%struct.AACContext* %72, %struct.TemporalNoiseShaping* %73, %struct.GetBitContext* %74, %struct.IndividualChannelStream* %75), !dbg !8462
  store i32 %call97, i32* %ret, align 4, !dbg !8463
  %76 = load i32, i32* %ret, align 4, !dbg !8464
  %cmp98 = icmp slt i32 %76, 0, !dbg !8466
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !8467

if.then100:                                       ; preds = %if.then96
  br label %fail, !dbg !8468

if.end101:                                        ; preds = %if.then96
  br label %if.end102, !dbg !8469

if.end102:                                        ; preds = %if.end101, %land.lhs.true94, %if.end91
  br label %if.end103, !dbg !8470

if.end103:                                        ; preds = %if.end102, %if.end50
  %77 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8471
  %78 = load i32*, i32** %out, align 8, !dbg !8472
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8473
  %80 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8474
  %sf104 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %80, i32 0, i32 6, !dbg !8475
  %arraydecay105 = getelementptr inbounds [120 x i32], [120 x i32]* %sf104, i32 0, i32 0, !dbg !8474
  %81 = load i32, i32* %pulse_present, align 4, !dbg !8476
  %82 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8477
  %83 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8478
  %band_type106 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %83, i32 0, i32 3, !dbg !8479
  %arraydecay107 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type106, i32 0, i32 0, !dbg !8478
  %call108 = call i32 @decode_spectrum_and_dequant(%struct.AACContext* %77, i32* %78, %struct.GetBitContext* %79, i32* %arraydecay105, i32 %81, %struct.Pulse* %pulse, %struct.IndividualChannelStream* %82, i32* %arraydecay107), !dbg !8480
  store i32 %call108, i32* %ret, align 4, !dbg !8481
  %84 = load i32, i32* %ret, align 4, !dbg !8482
  %cmp109 = icmp slt i32 %84, 0, !dbg !8484
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !8485

if.then111:                                       ; preds = %if.end103
  br label %fail, !dbg !8486

if.end112:                                        ; preds = %if.end103
  %85 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8487
  %oc113 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %85, i32 0, i32 21, !dbg !8489
  %arrayidx114 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc113, i64 0, i64 1, !dbg !8487
  %m4ac115 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx114, i32 0, i32 0, !dbg !8490
  %object_type116 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac115, i32 0, i32 0, !dbg !8491
  %86 = load i32, i32* %object_type116, align 8, !dbg !8491
  %cmp117 = icmp eq i32 %86, 1, !dbg !8492
  br i1 %cmp117, label %land.lhs.true119, label %if.end122, !dbg !8493

land.lhs.true119:                                 ; preds = %if.end112
  %87 = load i32, i32* %common_window.addr, align 4, !dbg !8494
  %tobool120 = icmp ne i32 %87, 0, !dbg !8494
  br i1 %tobool120, label %if.end122, label %if.then121, !dbg !8496

if.then121:                                       ; preds = %land.lhs.true119
  %88 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8497
  %89 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8498
  call void @apply_prediction(%struct.AACContext* %88, %struct.SingleChannelElement* %89), !dbg !8499
  br label %if.end122, !dbg !8499

if.end122:                                        ; preds = %if.then121, %land.lhs.true119, %if.end112
  store i32 0, i32* %retval, align 4, !dbg !8500
  br label %return, !dbg !8500

fail:                                             ; preds = %if.then111, %if.then100, %if.then78, %if.then65, %if.then61, %if.then49, %if.then39, %if.then32
  %90 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8501
  %present123 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %90, i32 0, i32 0, !dbg !8502
  store i32 0, i32* %present123, align 4, !dbg !8503
  %91 = load i32, i32* %ret, align 4, !dbg !8504
  store i32 %91, i32* %retval, align 4, !dbg !8505
  br label %return, !dbg !8505

return:                                           ; preds = %fail, %if.end122
  %92 = load i32, i32* %retval, align 4, !dbg !8506
  ret i32 %92, !dbg !8506
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_cpe(%struct.AACContext* %ac, %struct.GetBitContext* %gb, %struct.ChannelElement* %cpe) #1 !dbg !8507 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %common_window = alloca i32, align 4
  %ms_present = alloca i32, align 4
  %eld_syntax = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !8510, metadata !2068), !dbg !8511
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8512, metadata !2068), !dbg !8513
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !8514, metadata !2068), !dbg !8515
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8516, metadata !2068), !dbg !8517
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8518, metadata !2068), !dbg !8519
  call void @llvm.dbg.declare(metadata i32* %common_window, metadata !8520, metadata !2068), !dbg !8521
  call void @llvm.dbg.declare(metadata i32* %ms_present, metadata !8522, metadata !2068), !dbg !8523
  store i32 0, i32* %ms_present, align 4, !dbg !8523
  call void @llvm.dbg.declare(metadata i32* %eld_syntax, metadata !8524, metadata !2068), !dbg !8525
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8526
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 21, !dbg !8527
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !8526
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !8528
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 0, !dbg !8529
  %1 = load i32, i32* %object_type, align 8, !dbg !8529
  %cmp = icmp eq i32 %1, 39, !dbg !8530
  %conv = zext i1 %cmp to i32, !dbg !8530
  store i32 %conv, i32* %eld_syntax, align 4, !dbg !8525
  %2 = load i32, i32* %eld_syntax, align 4, !dbg !8531
  %tobool = icmp ne i32 %2, 0, !dbg !8531
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !8532

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8533
  %call = call i32 @get_bits1(%struct.GetBitContext* %3), !dbg !8535
  %tobool1 = icmp ne i32 %call, 0, !dbg !8536
  br label %lor.end, !dbg !8536

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool1, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !8537
  store i32 %lor.ext, i32* %common_window, align 4, !dbg !8539
  %5 = load i32, i32* %common_window, align 4, !dbg !8540
  %tobool2 = icmp ne i32 %5, 0, !dbg !8540
  br i1 %tobool2, label %if.then, label %if.end59, !dbg !8542

if.then:                                          ; preds = %lor.end
  %6 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8543
  %7 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8546
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %7, i32 0, i32 7, !dbg !8547
  %arrayidx3 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !8546
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx3, i32 0, i32 0, !dbg !8548
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8549
  %call4 = call i32 @decode_ics_info(%struct.AACContext* %6, %struct.IndividualChannelStream* %ics, %struct.GetBitContext* %8), !dbg !8550
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8550
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !8551

if.then6:                                         ; preds = %if.then
  store i32 -1094995529, i32* %retval, align 4, !dbg !8552
  br label %return, !dbg !8552

if.end:                                           ; preds = %if.then
  %9 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8553
  %ch7 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %9, i32 0, i32 7, !dbg !8554
  %arrayidx8 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch7, i64 0, i64 1, !dbg !8553
  %ics9 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx8, i32 0, i32 0, !dbg !8555
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics9, i32 0, i32 2, !dbg !8556
  %arrayidx10 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !8553
  %10 = load i8, i8* %arrayidx10, align 4, !dbg !8553
  %conv11 = zext i8 %10 to i32, !dbg !8553
  store i32 %conv11, i32* %i, align 4, !dbg !8557
  %11 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8558
  %ch12 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %11, i32 0, i32 7, !dbg !8559
  %arrayidx13 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch12, i64 0, i64 1, !dbg !8558
  %ics14 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx13, i32 0, i32 0, !dbg !8560
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8561
  %ch15 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %12, i32 0, i32 7, !dbg !8562
  %arrayidx16 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch15, i64 0, i64 0, !dbg !8561
  %ics17 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx16, i32 0, i32 0, !dbg !8563
  %13 = bitcast %struct.IndividualChannelStream* %ics14 to i8*, !dbg !8563
  %14 = bitcast %struct.IndividualChannelStream* %ics17 to i8*, !dbg !8563
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 304, i32 32, i1 false), !dbg !8563
  %15 = load i32, i32* %i, align 4, !dbg !8564
  %conv18 = trunc i32 %15 to i8, !dbg !8564
  %16 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8565
  %ch19 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %16, i32 0, i32 7, !dbg !8566
  %arrayidx20 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch19, i64 0, i64 1, !dbg !8565
  %ics21 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx20, i32 0, i32 0, !dbg !8567
  %use_kb_window22 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics21, i32 0, i32 2, !dbg !8568
  %arrayidx23 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window22, i64 0, i64 1, !dbg !8565
  store i8 %conv18, i8* %arrayidx23, align 1, !dbg !8569
  %17 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8570
  %ch24 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %17, i32 0, i32 7, !dbg !8572
  %arrayidx25 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch24, i64 0, i64 1, !dbg !8570
  %ics26 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx25, i32 0, i32 0, !dbg !8573
  %predictor_present = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics26, i32 0, i32 11, !dbg !8574
  %18 = load i32, i32* %predictor_present, align 4, !dbg !8574
  %tobool27 = icmp ne i32 %18, 0, !dbg !8570
  br i1 %tobool27, label %land.lhs.true, label %if.end50, !dbg !8575

land.lhs.true:                                    ; preds = %if.end
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8576
  %oc28 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 21, !dbg !8577
  %arrayidx29 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc28, i64 0, i64 1, !dbg !8576
  %m4ac30 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx29, i32 0, i32 0, !dbg !8578
  %object_type31 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac30, i32 0, i32 0, !dbg !8579
  %20 = load i32, i32* %object_type31, align 8, !dbg !8579
  %cmp32 = icmp ne i32 %20, 1, !dbg !8580
  br i1 %cmp32, label %if.then34, label %if.end50, !dbg !8581

if.then34:                                        ; preds = %land.lhs.true
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8583
  %call35 = call i32 @get_bits(%struct.GetBitContext* %21, i32 1), !dbg !8585
  %conv36 = trunc i32 %call35 to i8, !dbg !8585
  %22 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8586
  %ch37 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %22, i32 0, i32 7, !dbg !8587
  %arrayidx38 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch37, i64 0, i64 1, !dbg !8586
  %ics39 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx38, i32 0, i32 0, !dbg !8588
  %ltp = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics39, i32 0, i32 5, !dbg !8589
  %present = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %ltp, i32 0, i32 0, !dbg !8590
  store i8 %conv36, i8* %present, align 4, !dbg !8591
  %tobool40 = icmp ne i8 %conv36, 0, !dbg !8591
  br i1 %tobool40, label %if.then41, label %if.end49, !dbg !8592

if.then41:                                        ; preds = %if.then34
  %23 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8593
  %ch42 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %23, i32 0, i32 7, !dbg !8594
  %arrayidx43 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch42, i64 0, i64 1, !dbg !8593
  %ics44 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx43, i32 0, i32 0, !dbg !8595
  %ltp45 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics44, i32 0, i32 5, !dbg !8596
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8597
  %25 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8598
  %ch46 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %25, i32 0, i32 7, !dbg !8599
  %arrayidx47 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch46, i64 0, i64 1, !dbg !8598
  %ics48 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx47, i32 0, i32 0, !dbg !8600
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics48, i32 0, i32 0, !dbg !8601
  %26 = load i8, i8* %max_sfb, align 32, !dbg !8601
  call void @decode_ltp(%struct.LongTermPrediction* %ltp45, %struct.GetBitContext* %24, i8 zeroext %26), !dbg !8602
  br label %if.end49, !dbg !8602

if.end49:                                         ; preds = %if.then41, %if.then34
  br label %if.end50, !dbg !8603

if.end50:                                         ; preds = %if.end49, %land.lhs.true, %if.end
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8605
  %call51 = call i32 @get_bits(%struct.GetBitContext* %27, i32 2), !dbg !8606
  store i32 %call51, i32* %ms_present, align 4, !dbg !8607
  %28 = load i32, i32* %ms_present, align 4, !dbg !8608
  %cmp52 = icmp eq i32 %28, 3, !dbg !8610
  br i1 %cmp52, label %if.then54, label %if.else, !dbg !8611

if.then54:                                        ; preds = %if.end50
  %29 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8612
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %29, i32 0, i32 1, !dbg !8614
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8614
  %31 = bitcast %struct.AVCodecContext* %30 to i8*, !dbg !8612
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.61, i32 0, i32 0)), !dbg !8615
  store i32 -1094995529, i32* %retval, align 4, !dbg !8616
  br label %return, !dbg !8616

if.else:                                          ; preds = %if.end50
  %32 = load i32, i32* %ms_present, align 4, !dbg !8617
  %tobool55 = icmp ne i32 %32, 0, !dbg !8617
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !8619

if.then56:                                        ; preds = %if.else
  %33 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8620
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8621
  %35 = load i32, i32* %ms_present, align 4, !dbg !8622
  call void @decode_mid_side_stereo(%struct.ChannelElement* %33, %struct.GetBitContext* %34, i32 %35), !dbg !8623
  br label %if.end57, !dbg !8623

if.end57:                                         ; preds = %if.then56, %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.end57
  br label %if.end59, !dbg !8624

if.end59:                                         ; preds = %if.end58, %lor.end
  %36 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8625
  %37 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8627
  %ch60 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %37, i32 0, i32 7, !dbg !8628
  %arrayidx61 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch60, i64 0, i64 0, !dbg !8627
  %38 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8629
  %39 = load i32, i32* %common_window, align 4, !dbg !8630
  %call62 = call i32 @decode_ics(%struct.AACContext* %36, %struct.SingleChannelElement* %arrayidx61, %struct.GetBitContext* %38, i32 %39, i32 0), !dbg !8631
  store i32 %call62, i32* %ret, align 4, !dbg !8632
  %tobool63 = icmp ne i32 %call62, 0, !dbg !8632
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !8633

if.then64:                                        ; preds = %if.end59
  %40 = load i32, i32* %ret, align 4, !dbg !8634
  store i32 %40, i32* %retval, align 4, !dbg !8635
  br label %return, !dbg !8635

if.end65:                                         ; preds = %if.end59
  %41 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8636
  %42 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8638
  %ch66 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %42, i32 0, i32 7, !dbg !8639
  %arrayidx67 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch66, i64 0, i64 1, !dbg !8638
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8640
  %44 = load i32, i32* %common_window, align 4, !dbg !8641
  %call68 = call i32 @decode_ics(%struct.AACContext* %41, %struct.SingleChannelElement* %arrayidx67, %struct.GetBitContext* %43, i32 %44, i32 0), !dbg !8642
  store i32 %call68, i32* %ret, align 4, !dbg !8643
  %tobool69 = icmp ne i32 %call68, 0, !dbg !8643
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !8644

if.then70:                                        ; preds = %if.end65
  %45 = load i32, i32* %ret, align 4, !dbg !8645
  store i32 %45, i32* %retval, align 4, !dbg !8646
  br label %return, !dbg !8646

if.end71:                                         ; preds = %if.end65
  %46 = load i32, i32* %common_window, align 4, !dbg !8647
  %tobool72 = icmp ne i32 %46, 0, !dbg !8647
  br i1 %tobool72, label %if.then73, label %if.end89, !dbg !8649

if.then73:                                        ; preds = %if.end71
  %47 = load i32, i32* %ms_present, align 4, !dbg !8650
  %tobool74 = icmp ne i32 %47, 0, !dbg !8650
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !8653

if.then75:                                        ; preds = %if.then73
  %48 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8654
  %49 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8655
  call void @apply_mid_side_stereo(%struct.AACContext* %48, %struct.ChannelElement* %49), !dbg !8656
  br label %if.end76, !dbg !8656

if.end76:                                         ; preds = %if.then75, %if.then73
  %50 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8657
  %oc77 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %50, i32 0, i32 21, !dbg !8659
  %arrayidx78 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc77, i64 0, i64 1, !dbg !8657
  %m4ac79 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx78, i32 0, i32 0, !dbg !8660
  %object_type80 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac79, i32 0, i32 0, !dbg !8661
  %51 = load i32, i32* %object_type80, align 8, !dbg !8661
  %cmp81 = icmp eq i32 %51, 1, !dbg !8662
  br i1 %cmp81, label %if.then83, label %if.end88, !dbg !8663

if.then83:                                        ; preds = %if.end76
  %52 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8664
  %53 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8666
  %ch84 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %53, i32 0, i32 7, !dbg !8667
  %arrayidx85 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch84, i64 0, i64 0, !dbg !8666
  call void @apply_prediction(%struct.AACContext* %52, %struct.SingleChannelElement* %arrayidx85), !dbg !8668
  %54 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8669
  %55 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8670
  %ch86 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %55, i32 0, i32 7, !dbg !8671
  %arrayidx87 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch86, i64 0, i64 1, !dbg !8670
  call void @apply_prediction(%struct.AACContext* %54, %struct.SingleChannelElement* %arrayidx87), !dbg !8672
  br label %if.end88, !dbg !8673

if.end88:                                         ; preds = %if.then83, %if.end76
  br label %if.end89, !dbg !8674

if.end89:                                         ; preds = %if.end88, %if.end71
  %56 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8675
  %57 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8676
  %58 = load i32, i32* %ms_present, align 4, !dbg !8677
  call void @apply_intensity_stereo(%struct.AACContext* %56, %struct.ChannelElement* %57, i32 %58), !dbg !8678
  store i32 0, i32* %retval, align 4, !dbg !8679
  br label %return, !dbg !8679

return:                                           ; preds = %if.end89, %if.then70, %if.then64, %if.then54, %if.then6
  %59 = load i32, i32* %retval, align 4, !dbg !8680
  ret i32 %59, !dbg !8680
}

; Function Attrs: nounwind uwtable
define internal void @spectral_to_sample(%struct.AACContext* %ac, i32 %samples) #1 !dbg !8681 {
entry:
  %retval.i186 = alloca i64, align 8
  %a.addr.i187 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i187, metadata !8684, metadata !2068), !dbg !8688
  %amin.addr.i188 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %amin.addr.i188, metadata !8703, metadata !2068), !dbg !8704
  %amax.addr.i189 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %amax.addr.i189, metadata !8705, metadata !2068), !dbg !8706
  %retval.i = alloca i64, align 8
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !8684, metadata !2068), !dbg !8707
  %amin.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %amin.addr.i, metadata !8703, metadata !2068), !dbg !8709
  %amax.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %amax.addr.i, metadata !8705, metadata !2068), !dbg !8710
  %ac.addr = alloca %struct.AACContext*, align 8
  %samples.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %type = alloca i32, align 4
  %imdct_and_window = alloca void (%struct.AACContext*, %struct.SingleChannelElement*)*, align 8
  %che = alloca %struct.ChannelElement*, align 8
  %j = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !8711, metadata !2068), !dbg !8712
  store i32 %samples, i32* %samples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %samples.addr, metadata !8713, metadata !2068), !dbg !8714
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8715, metadata !2068), !dbg !8716
  call void @llvm.dbg.declare(metadata i32* %type, metadata !8717, metadata !2068), !dbg !8718
  call void @llvm.dbg.declare(metadata void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, metadata !8719, metadata !2068), !dbg !8720
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8721
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 21, !dbg !8722
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !8721
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !8723
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 0, !dbg !8724
  %1 = load i32, i32* %object_type, align 8, !dbg !8724
  switch i32 %1, label %sw.default [
    i32 23, label %sw.bb
    i32 39, label %sw.bb1
  ], !dbg !8725

sw.bb:                                            ; preds = %entry
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* @imdct_and_windowing_ld, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, align 8, !dbg !8726
  br label %sw.epilog, !dbg !8728

sw.bb1:                                           ; preds = %entry
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* @imdct_and_windowing_eld, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, align 8, !dbg !8729
  br label %sw.epilog, !dbg !8730

sw.default:                                       ; preds = %entry
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8731
  %oc2 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 21, !dbg !8733
  %arrayidx3 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc2, i64 0, i64 1, !dbg !8731
  %m4ac4 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx3, i32 0, i32 0, !dbg !8734
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac4, i32 0, i32 11, !dbg !8735
  %3 = load i32, i32* %frame_length_short, align 4, !dbg !8735
  %tobool = icmp ne i32 %3, 0, !dbg !8731
  br i1 %tobool, label %if.then, label %if.else, !dbg !8736

if.then:                                          ; preds = %sw.default
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* @imdct_and_windowing_960, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, align 8, !dbg !8737
  br label %if.end, !dbg !8738

if.else:                                          ; preds = %sw.default
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8739
  %imdct_and_windowing = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 25, !dbg !8740
  %5 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_windowing, align 32, !dbg !8740
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* %5, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, align 8, !dbg !8741
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !8742

sw.epilog:                                        ; preds = %if.end, %sw.bb1, %sw.bb
  store i32 3, i32* %type, align 4, !dbg !8743
  br label %for.cond, !dbg !8744

for.cond:                                         ; preds = %for.inc184, %sw.epilog
  %6 = load i32, i32* %type, align 4, !dbg !8745
  %cmp = icmp sge i32 %6, 0, !dbg !8747
  br i1 %cmp, label %for.body, label %for.end185, !dbg !8748

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8749
  br label %for.cond5, !dbg !8750

for.cond5:                                        ; preds = %for.inc181, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !8751
  %cmp6 = icmp slt i32 %7, 16, !dbg !8753
  br i1 %cmp6, label %for.body7, label %for.end183, !dbg !8754

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che, metadata !8755, metadata !2068), !dbg !8756
  %8 = load i32, i32* %i, align 4, !dbg !8757
  %idxprom = sext i32 %8 to i64, !dbg !8758
  %9 = load i32, i32* %type, align 4, !dbg !8759
  %idxprom8 = sext i32 %9 to i64, !dbg !8758
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8758
  %che9 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 5, !dbg !8760
  %arrayidx10 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che9, i64 0, i64 %idxprom8, !dbg !8758
  %arrayidx11 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx10, i64 0, i64 %idxprom, !dbg !8758
  %11 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx11, align 8, !dbg !8758
  store %struct.ChannelElement* %11, %struct.ChannelElement** %che, align 8, !dbg !8756
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8761
  %tobool12 = icmp ne %struct.ChannelElement* %12, null, !dbg !8761
  br i1 %tobool12, label %land.lhs.true, label %if.else176, !dbg !8762

land.lhs.true:                                    ; preds = %for.body7
  %13 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8763
  %present = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %13, i32 0, i32 0, !dbg !8765
  %14 = load i32, i32* %present, align 32, !dbg !8765
  %tobool13 = icmp ne i32 %14, 0, !dbg !8763
  br i1 %tobool13, label %if.then14, label %if.else176, !dbg !8766

if.then14:                                        ; preds = %land.lhs.true
  %15 = load i32, i32* %type, align 4, !dbg !8767
  %cmp15 = icmp sle i32 %15, 1, !dbg !8769
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !8770

if.then16:                                        ; preds = %if.then14
  %16 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8771
  %17 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8772
  %18 = load i32, i32* %type, align 4, !dbg !8773
  %19 = load i32, i32* %i, align 4, !dbg !8774
  call void @apply_channel_coupling(%struct.AACContext* %16, %struct.ChannelElement* %17, i32 %18, i32 %19, i32 0, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)* @apply_dependent_coupling_fixed), !dbg !8775
  br label %if.end17, !dbg !8775

if.end17:                                         ; preds = %if.then16, %if.then14
  %20 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8776
  %oc18 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 21, !dbg !8778
  %arrayidx19 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc18, i64 0, i64 1, !dbg !8776
  %m4ac20 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx19, i32 0, i32 0, !dbg !8779
  %object_type21 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac20, i32 0, i32 0, !dbg !8780
  %21 = load i32, i32* %object_type21, align 8, !dbg !8780
  %cmp22 = icmp eq i32 %21, 4, !dbg !8781
  br i1 %cmp22, label %if.then23, label %if.end51, !dbg !8782

if.then23:                                        ; preds = %if.end17
  %22 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8783
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %22, i32 0, i32 7, !dbg !8786
  %arrayidx24 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !8783
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx24, i32 0, i32 0, !dbg !8787
  %predictor_present = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 11, !dbg !8788
  %23 = load i32, i32* %predictor_present, align 4, !dbg !8788
  %tobool25 = icmp ne i32 %23, 0, !dbg !8783
  br i1 %tobool25, label %if.then26, label %if.end50, !dbg !8789

if.then26:                                        ; preds = %if.then23
  %24 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8790
  %ch27 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %24, i32 0, i32 7, !dbg !8793
  %arrayidx28 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch27, i64 0, i64 0, !dbg !8790
  %ics29 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx28, i32 0, i32 0, !dbg !8794
  %ltp = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics29, i32 0, i32 5, !dbg !8795
  %present30 = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %ltp, i32 0, i32 0, !dbg !8796
  %25 = load i8, i8* %present30, align 4, !dbg !8796
  %tobool31 = icmp ne i8 %25, 0, !dbg !8790
  br i1 %tobool31, label %if.then32, label %if.end35, !dbg !8797

if.then32:                                        ; preds = %if.then26
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8798
  %apply_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %26, i32 0, i32 26, !dbg !8799
  %27 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %apply_ltp, align 8, !dbg !8799
  %28 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8800
  %29 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8801
  %ch33 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %29, i32 0, i32 7, !dbg !8802
  %arrayidx34 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch33, i64 0, i64 0, !dbg !8801
  call void %27(%struct.AACContext* %28, %struct.SingleChannelElement* %arrayidx34), !dbg !8798
  br label %if.end35, !dbg !8798

if.end35:                                         ; preds = %if.then32, %if.then26
  %30 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8803
  %ch36 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %30, i32 0, i32 7, !dbg !8805
  %arrayidx37 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch36, i64 0, i64 1, !dbg !8803
  %ics38 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx37, i32 0, i32 0, !dbg !8806
  %ltp39 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics38, i32 0, i32 5, !dbg !8807
  %present40 = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %ltp39, i32 0, i32 0, !dbg !8808
  %31 = load i8, i8* %present40, align 4, !dbg !8808
  %conv = sext i8 %31 to i32, !dbg !8803
  %tobool41 = icmp ne i32 %conv, 0, !dbg !8803
  br i1 %tobool41, label %land.lhs.true42, label %if.end49, !dbg !8809

land.lhs.true42:                                  ; preds = %if.end35
  %32 = load i32, i32* %type, align 4, !dbg !8810
  %cmp43 = icmp eq i32 %32, 1, !dbg !8812
  br i1 %cmp43, label %if.then45, label %if.end49, !dbg !8813

if.then45:                                        ; preds = %land.lhs.true42
  %33 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8814
  %apply_ltp46 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %33, i32 0, i32 26, !dbg !8815
  %34 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %apply_ltp46, align 8, !dbg !8815
  %35 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8816
  %36 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8817
  %ch47 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %36, i32 0, i32 7, !dbg !8818
  %arrayidx48 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch47, i64 0, i64 1, !dbg !8817
  call void %34(%struct.AACContext* %35, %struct.SingleChannelElement* %arrayidx48), !dbg !8814
  br label %if.end49, !dbg !8814

if.end49:                                         ; preds = %if.then45, %land.lhs.true42, %if.end35
  br label %if.end50, !dbg !8819

if.end50:                                         ; preds = %if.end49, %if.then23
  br label %if.end51, !dbg !8820

if.end51:                                         ; preds = %if.end50, %if.end17
  %37 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8821
  %ch52 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %37, i32 0, i32 7, !dbg !8823
  %arrayidx53 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch52, i64 0, i64 0, !dbg !8821
  %tns = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx53, i32 0, i32 1, !dbg !8824
  %present54 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %tns, i32 0, i32 0, !dbg !8825
  %38 = load i32, i32* %present54, align 16, !dbg !8825
  %tobool55 = icmp ne i32 %38, 0, !dbg !8821
  br i1 %tobool55, label %if.then56, label %if.end65, !dbg !8826

if.then56:                                        ; preds = %if.end51
  %39 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8827
  %apply_tns = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 27, !dbg !8828
  %40 = load void (i32*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)*, void (i32*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)** %apply_tns, align 16, !dbg !8828
  %41 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8829
  %ch57 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %41, i32 0, i32 7, !dbg !8830
  %arrayidx58 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch57, i64 0, i64 0, !dbg !8829
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx58, i32 0, i32 14, !dbg !8831
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs, i32 0, i32 0, !dbg !8829
  %42 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8832
  %ch59 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %42, i32 0, i32 7, !dbg !8833
  %arrayidx60 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch59, i64 0, i64 0, !dbg !8832
  %tns61 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx60, i32 0, i32 1, !dbg !8834
  %43 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8835
  %ch62 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %43, i32 0, i32 7, !dbg !8836
  %arrayidx63 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch62, i64 0, i64 0, !dbg !8835
  %ics64 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx63, i32 0, i32 0, !dbg !8837
  call void %40(i32* %arraydecay, %struct.TemporalNoiseShaping* %tns61, %struct.IndividualChannelStream* %ics64, i32 1), !dbg !8827
  br label %if.end65, !dbg !8827

if.end65:                                         ; preds = %if.then56, %if.end51
  %44 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8838
  %ch66 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %44, i32 0, i32 7, !dbg !8840
  %arrayidx67 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch66, i64 0, i64 1, !dbg !8838
  %tns68 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx67, i32 0, i32 1, !dbg !8841
  %present69 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %tns68, i32 0, i32 0, !dbg !8842
  %45 = load i32, i32* %present69, align 16, !dbg !8842
  %tobool70 = icmp ne i32 %45, 0, !dbg !8838
  br i1 %tobool70, label %if.then71, label %if.end83, !dbg !8843

if.then71:                                        ; preds = %if.end65
  %46 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8844
  %apply_tns72 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %46, i32 0, i32 27, !dbg !8845
  %47 = load void (i32*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)*, void (i32*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)** %apply_tns72, align 16, !dbg !8845
  %48 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8846
  %ch73 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %48, i32 0, i32 7, !dbg !8847
  %arrayidx74 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch73, i64 0, i64 1, !dbg !8846
  %coeffs75 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx74, i32 0, i32 14, !dbg !8848
  %arraydecay76 = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs75, i32 0, i32 0, !dbg !8846
  %49 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8849
  %ch77 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %49, i32 0, i32 7, !dbg !8850
  %arrayidx78 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch77, i64 0, i64 1, !dbg !8849
  %tns79 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx78, i32 0, i32 1, !dbg !8851
  %50 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8852
  %ch80 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %50, i32 0, i32 7, !dbg !8853
  %arrayidx81 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch80, i64 0, i64 1, !dbg !8852
  %ics82 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx81, i32 0, i32 0, !dbg !8854
  call void %47(i32* %arraydecay76, %struct.TemporalNoiseShaping* %tns79, %struct.IndividualChannelStream* %ics82, i32 1), !dbg !8844
  br label %if.end83, !dbg !8844

if.end83:                                         ; preds = %if.then71, %if.end65
  %51 = load i32, i32* %type, align 4, !dbg !8855
  %cmp84 = icmp sle i32 %51, 1, !dbg !8857
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !8858

if.then86:                                        ; preds = %if.end83
  %52 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8859
  %53 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8860
  %54 = load i32, i32* %type, align 4, !dbg !8861
  %55 = load i32, i32* %i, align 4, !dbg !8862
  call void @apply_channel_coupling(%struct.AACContext* %52, %struct.ChannelElement* %53, i32 %54, i32 %55, i32 1, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)* @apply_dependent_coupling_fixed), !dbg !8863
  br label %if.end87, !dbg !8863

if.end87:                                         ; preds = %if.then86, %if.end83
  %56 = load i32, i32* %type, align 4, !dbg !8864
  %cmp88 = icmp ne i32 %56, 2, !dbg !8866
  br i1 %cmp88, label %if.then92, label %lor.lhs.false, !dbg !8867

lor.lhs.false:                                    ; preds = %if.end87
  %57 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8868
  %coup = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %57, i32 0, i32 8, !dbg !8870
  %coupling_point = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %coup, i32 0, i32 0, !dbg !8871
  %58 = load i32, i32* %coupling_point, align 32, !dbg !8871
  %cmp90 = icmp eq i32 %58, 3, !dbg !8872
  br i1 %cmp90, label %if.then92, label %if.end135, !dbg !8873

if.then92:                                        ; preds = %lor.lhs.false, %if.end87
  %59 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, align 8, !dbg !8874
  %60 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8876
  %61 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8877
  %ch93 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %61, i32 0, i32 7, !dbg !8878
  %arrayidx94 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch93, i64 0, i64 0, !dbg !8877
  call void %59(%struct.AACContext* %60, %struct.SingleChannelElement* %arrayidx94), !dbg !8874
  %62 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8879
  %oc95 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %62, i32 0, i32 21, !dbg !8881
  %arrayidx96 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc95, i64 0, i64 1, !dbg !8879
  %m4ac97 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx96, i32 0, i32 0, !dbg !8882
  %object_type98 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac97, i32 0, i32 0, !dbg !8883
  %63 = load i32, i32* %object_type98, align 8, !dbg !8883
  %cmp99 = icmp eq i32 %63, 4, !dbg !8884
  br i1 %cmp99, label %if.then101, label %if.end104, !dbg !8885

if.then101:                                       ; preds = %if.then92
  %64 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8886
  %update_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %64, i32 0, i32 29, !dbg !8887
  %65 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %update_ltp, align 32, !dbg !8887
  %66 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8888
  %67 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8889
  %ch102 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %67, i32 0, i32 7, !dbg !8890
  %arrayidx103 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch102, i64 0, i64 0, !dbg !8889
  call void %65(%struct.AACContext* %66, %struct.SingleChannelElement* %arrayidx103), !dbg !8886
  br label %if.end104, !dbg !8886

if.end104:                                        ; preds = %if.then101, %if.then92
  %68 = load i32, i32* %type, align 4, !dbg !8891
  %cmp105 = icmp eq i32 %68, 1, !dbg !8893
  br i1 %cmp105, label %if.then107, label %if.end121, !dbg !8894

if.then107:                                       ; preds = %if.end104
  %69 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, align 8, !dbg !8895
  %70 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8897
  %71 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8898
  %ch108 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %71, i32 0, i32 7, !dbg !8899
  %arrayidx109 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch108, i64 0, i64 1, !dbg !8898
  call void %69(%struct.AACContext* %70, %struct.SingleChannelElement* %arrayidx109), !dbg !8895
  %72 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8900
  %oc110 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %72, i32 0, i32 21, !dbg !8902
  %arrayidx111 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc110, i64 0, i64 1, !dbg !8900
  %m4ac112 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx111, i32 0, i32 0, !dbg !8903
  %object_type113 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac112, i32 0, i32 0, !dbg !8904
  %73 = load i32, i32* %object_type113, align 8, !dbg !8904
  %cmp114 = icmp eq i32 %73, 4, !dbg !8905
  br i1 %cmp114, label %if.then116, label %if.end120, !dbg !8906

if.then116:                                       ; preds = %if.then107
  %74 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8907
  %update_ltp117 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %74, i32 0, i32 29, !dbg !8908
  %75 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %update_ltp117, align 32, !dbg !8908
  %76 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8909
  %77 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8910
  %ch118 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %77, i32 0, i32 7, !dbg !8911
  %arrayidx119 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch118, i64 0, i64 1, !dbg !8910
  call void %75(%struct.AACContext* %76, %struct.SingleChannelElement* %arrayidx119), !dbg !8907
  br label %if.end120, !dbg !8907

if.end120:                                        ; preds = %if.then116, %if.then107
  br label %if.end121, !dbg !8912

if.end121:                                        ; preds = %if.end120, %if.end104
  %78 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8913
  %oc122 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %78, i32 0, i32 21, !dbg !8915
  %arrayidx123 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc122, i64 0, i64 1, !dbg !8913
  %m4ac124 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx123, i32 0, i32 0, !dbg !8916
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac124, i32 0, i32 4, !dbg !8917
  %79 = load i32, i32* %sbr, align 8, !dbg !8917
  %cmp125 = icmp sgt i32 %79, 0, !dbg !8918
  br i1 %cmp125, label %if.then127, label %if.end134, !dbg !8919

if.then127:                                       ; preds = %if.end121
  %80 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8920
  %81 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8922
  %sbr128 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %81, i32 0, i32 10, !dbg !8923
  %82 = load i32, i32* %type, align 4, !dbg !8924
  %83 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8925
  %ch129 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %83, i32 0, i32 7, !dbg !8926
  %arrayidx130 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch129, i64 0, i64 0, !dbg !8925
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx130, i32 0, i32 21, !dbg !8927
  %84 = load i32*, i32** %ret, align 32, !dbg !8927
  %85 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8928
  %ch131 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %85, i32 0, i32 7, !dbg !8929
  %arrayidx132 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch131, i64 0, i64 1, !dbg !8928
  %ret133 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx132, i32 0, i32 21, !dbg !8930
  %86 = load i32*, i32** %ret133, align 32, !dbg !8930
  call void @ff_sbr_apply_fixed(%struct.AACContext* %80, %struct.SpectralBandReplication* %sbr128, i32 %82, i32* %84, i32* %86), !dbg !8931
  br label %if.end134, !dbg !8932

if.end134:                                        ; preds = %if.then127, %if.end121
  br label %if.end135, !dbg !8933

if.end135:                                        ; preds = %if.end134, %lor.lhs.false
  %87 = load i32, i32* %type, align 4, !dbg !8934
  %cmp136 = icmp sle i32 %87, 2, !dbg !8936
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !8937

if.then138:                                       ; preds = %if.end135
  %88 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8938
  %89 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8939
  %90 = load i32, i32* %type, align 4, !dbg !8940
  %91 = load i32, i32* %i, align 4, !dbg !8941
  call void @apply_channel_coupling(%struct.AACContext* %88, %struct.ChannelElement* %89, i32 %90, i32 %91, i32 3, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)* @apply_independent_coupling_fixed), !dbg !8942
  br label %if.end139, !dbg !8942

if.end139:                                        ; preds = %if.then138, %if.end135
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8943, metadata !2068), !dbg !8944
  store i32 0, i32* %j, align 4, !dbg !8945
  br label %for.cond140, !dbg !8946

for.cond140:                                      ; preds = %for.inc, %if.end139
  %92 = load i32, i32* %j, align 4, !dbg !8947
  %93 = load i32, i32* %samples.addr, align 4, !dbg !8949
  %cmp141 = icmp slt i32 %92, %93, !dbg !8950
  br i1 %cmp141, label %for.body143, label %for.end, !dbg !8951

for.body143:                                      ; preds = %for.cond140
  %94 = load i32, i32* %j, align 4, !dbg !8952
  %idxprom144 = sext i32 %94 to i64, !dbg !8953
  %95 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8953
  %ch145 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %95, i32 0, i32 7, !dbg !8954
  %arrayidx146 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch145, i64 0, i64 0, !dbg !8953
  %ret147 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx146, i32 0, i32 21, !dbg !8955
  %96 = load i32*, i32** %ret147, align 32, !dbg !8955
  %arrayidx148 = getelementptr inbounds i32, i32* %96, i64 %idxprom144, !dbg !8953
  %97 = load i32, i32* %arrayidx148, align 4, !dbg !8953
  %conv149 = sext i32 %97 to i64, !dbg !8956
  %mul = mul nsw i64 %conv149, 128, !dbg !8957
  store i64 %mul, i64* %a.addr.i, align 8, !dbg !8958
  store i64 -2147483648, i64* %amin.addr.i, align 8, !dbg !8958
  store i64 2147450879, i64* %amax.addr.i, align 8, !dbg !8958
  %98 = load i64, i64* %a.addr.i, align 8, !dbg !8959
  %99 = load i64, i64* %amin.addr.i, align 8, !dbg !8961
  %cmp.i = icmp slt i64 %98, %99, !dbg !8962
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !8963

if.then.i:                                        ; preds = %for.body143
  %100 = load i64, i64* %amin.addr.i, align 8, !dbg !8964
  store i64 %100, i64* %retval.i, align 8, !dbg !8966
  br label %av_clip64_c.exit, !dbg !8966

if.else.i:                                        ; preds = %for.body143
  %101 = load i64, i64* %a.addr.i, align 8, !dbg !8967
  %102 = load i64, i64* %amax.addr.i, align 8, !dbg !8969
  %cmp1.i = icmp sgt i64 %101, %102, !dbg !8970
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !8971

if.then2.i:                                       ; preds = %if.else.i
  %103 = load i64, i64* %amax.addr.i, align 8, !dbg !8972
  store i64 %103, i64* %retval.i, align 8, !dbg !8974
  br label %av_clip64_c.exit, !dbg !8974

if.else3.i:                                       ; preds = %if.else.i
  %104 = load i64, i64* %a.addr.i, align 8, !dbg !8975
  store i64 %104, i64* %retval.i, align 8, !dbg !8976
  br label %av_clip64_c.exit, !dbg !8976

av_clip64_c.exit:                                 ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %105 = load i64, i64* %retval.i, align 8, !dbg !8977
  %conv150 = trunc i64 %105 to i32, !dbg !8978
  %add = add nsw i32 %conv150, 32768, !dbg !8979
  %106 = load i32, i32* %j, align 4, !dbg !8980
  %idxprom151 = sext i32 %106 to i64, !dbg !8981
  %107 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8981
  %ch152 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %107, i32 0, i32 7, !dbg !8982
  %arrayidx153 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch152, i64 0, i64 0, !dbg !8981
  %ret154 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx153, i32 0, i32 21, !dbg !8983
  %108 = load i32*, i32** %ret154, align 32, !dbg !8983
  %arrayidx155 = getelementptr inbounds i32, i32* %108, i64 %idxprom151, !dbg !8981
  store i32 %add, i32* %arrayidx155, align 4, !dbg !8984
  %109 = load i32, i32* %type, align 4, !dbg !8985
  %cmp156 = icmp eq i32 %109, 1, !dbg !8986
  br i1 %cmp156, label %if.then158, label %if.end174, !dbg !8987

if.then158:                                       ; preds = %av_clip64_c.exit
  %110 = load i32, i32* %j, align 4, !dbg !8988
  %idxprom159 = sext i32 %110 to i64, !dbg !8989
  %111 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8989
  %ch160 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %111, i32 0, i32 7, !dbg !8990
  %arrayidx161 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch160, i64 0, i64 1, !dbg !8989
  %ret162 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx161, i32 0, i32 21, !dbg !8991
  %112 = load i32*, i32** %ret162, align 32, !dbg !8991
  %arrayidx163 = getelementptr inbounds i32, i32* %112, i64 %idxprom159, !dbg !8989
  %113 = load i32, i32* %arrayidx163, align 4, !dbg !8989
  %conv164 = sext i32 %113 to i64, !dbg !8992
  %mul165 = mul nsw i64 %conv164, 128, !dbg !8993
  store i64 %mul165, i64* %a.addr.i187, align 8, !dbg !8994
  store i64 -2147483648, i64* %amin.addr.i188, align 8, !dbg !8994
  store i64 2147450879, i64* %amax.addr.i189, align 8, !dbg !8994
  %114 = load i64, i64* %a.addr.i187, align 8, !dbg !8995
  %115 = load i64, i64* %amin.addr.i188, align 8, !dbg !8996
  %cmp.i190 = icmp slt i64 %114, %115, !dbg !8997
  br i1 %cmp.i190, label %if.then.i191, label %if.else.i193, !dbg !8998

if.then.i191:                                     ; preds = %if.then158
  %116 = load i64, i64* %amin.addr.i188, align 8, !dbg !8999
  store i64 %116, i64* %retval.i186, align 8, !dbg !9000
  br label %av_clip64_c.exit196, !dbg !9000

if.else.i193:                                     ; preds = %if.then158
  %117 = load i64, i64* %a.addr.i187, align 8, !dbg !9001
  %118 = load i64, i64* %amax.addr.i189, align 8, !dbg !9002
  %cmp1.i192 = icmp sgt i64 %117, %118, !dbg !9003
  br i1 %cmp1.i192, label %if.then2.i194, label %if.else3.i195, !dbg !9004

if.then2.i194:                                    ; preds = %if.else.i193
  %119 = load i64, i64* %amax.addr.i189, align 8, !dbg !9005
  store i64 %119, i64* %retval.i186, align 8, !dbg !9006
  br label %av_clip64_c.exit196, !dbg !9006

if.else3.i195:                                    ; preds = %if.else.i193
  %120 = load i64, i64* %a.addr.i187, align 8, !dbg !9007
  store i64 %120, i64* %retval.i186, align 8, !dbg !9008
  br label %av_clip64_c.exit196, !dbg !9008

av_clip64_c.exit196:                              ; preds = %if.then.i191, %if.then2.i194, %if.else3.i195
  %121 = load i64, i64* %retval.i186, align 8, !dbg !9009
  %conv167 = trunc i64 %121 to i32, !dbg !9010
  %add168 = add nsw i32 %conv167, 32768, !dbg !9011
  %122 = load i32, i32* %j, align 4, !dbg !9012
  %idxprom169 = sext i32 %122 to i64, !dbg !9013
  %123 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !9013
  %ch170 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %123, i32 0, i32 7, !dbg !9014
  %arrayidx171 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch170, i64 0, i64 1, !dbg !9013
  %ret172 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx171, i32 0, i32 21, !dbg !9015
  %124 = load i32*, i32** %ret172, align 32, !dbg !9015
  %arrayidx173 = getelementptr inbounds i32, i32* %124, i64 %idxprom169, !dbg !9013
  store i32 %add168, i32* %arrayidx173, align 4, !dbg !9016
  br label %if.end174, !dbg !9013

if.end174:                                        ; preds = %av_clip64_c.exit196, %av_clip64_c.exit
  br label %for.inc, !dbg !9017

for.inc:                                          ; preds = %if.end174
  %125 = load i32, i32* %j, align 4, !dbg !9018
  %inc = add nsw i32 %125, 1, !dbg !9018
  store i32 %inc, i32* %j, align 4, !dbg !9018
  br label %for.cond140, !dbg !9020, !llvm.loop !9021

for.end:                                          ; preds = %for.cond140
  %126 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !9023
  %present175 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %126, i32 0, i32 0, !dbg !9024
  store i32 0, i32* %present175, align 32, !dbg !9025
  br label %if.end180, !dbg !9026

if.else176:                                       ; preds = %land.lhs.true, %for.body7
  %127 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !9027
  %tobool177 = icmp ne %struct.ChannelElement* %127, null, !dbg !9027
  br i1 %tobool177, label %if.then178, label %if.end179, !dbg !9027

if.then178:                                       ; preds = %if.else176
  %128 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9030
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %128, i32 0, i32 1, !dbg !9032
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9032
  %130 = bitcast %struct.AVCodecContext* %129 to i8*, !dbg !9030
  %131 = load i32, i32* %type, align 4, !dbg !9033
  %132 = load i32, i32* %i, align 4, !dbg !9034
  call void (i8*, i32, i8*, ...) @av_log(i8* %130, i32 40, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.62, i32 0, i32 0), i32 %131, i32 %132), !dbg !9035
  br label %if.end179, !dbg !9036

if.end179:                                        ; preds = %if.then178, %if.else176
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %for.end
  br label %for.inc181, !dbg !9037

for.inc181:                                       ; preds = %if.end180
  %133 = load i32, i32* %i, align 4, !dbg !9038
  %inc182 = add nsw i32 %133, 1, !dbg !9038
  store i32 %inc182, i32* %i, align 4, !dbg !9038
  br label %for.cond5, !dbg !9040, !llvm.loop !9041

for.end183:                                       ; preds = %for.cond5
  br label %for.inc184, !dbg !9043

for.inc184:                                       ; preds = %for.end183
  %134 = load i32, i32* %type, align 4, !dbg !9044
  %dec = add nsw i32 %134, -1, !dbg !9044
  store i32 %dec, i32* %type, align 4, !dbg !9044
  br label %for.cond, !dbg !9046, !llvm.loop !9047

for.end185:                                       ; preds = %for.cond
  ret void, !dbg !9049
}

; Function Attrs: nounwind uwtable
define internal i32 @push_output_configuration(%struct.AACContext* %ac) #1 !dbg !9050 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %pushed = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !9053, metadata !2068), !dbg !9054
  call void @llvm.dbg.declare(metadata i32* %pushed, metadata !9055, metadata !2068), !dbg !9056
  store i32 0, i32* %pushed, align 4, !dbg !9056
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9057
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 21, !dbg !9059
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !9057
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 5, !dbg !9060
  %1 = load i32, i32* %status, align 8, !dbg !9060
  %cmp = icmp eq i32 %1, 4, !dbg !9061
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9062

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9063
  %oc1 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 21, !dbg !9065
  %arrayidx2 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc1, i64 0, i64 0, !dbg !9063
  %status3 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx2, i32 0, i32 5, !dbg !9066
  %3 = load i32, i32* %status3, align 32, !dbg !9066
  %cmp4 = icmp eq i32 %3, 0, !dbg !9067
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9068

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9069
  %oc5 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 21, !dbg !9071
  %arrayidx6 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc5, i64 0, i64 0, !dbg !9069
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9072
  %oc7 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 21, !dbg !9073
  %arrayidx8 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc7, i64 0, i64 1, !dbg !9072
  %6 = bitcast %struct.OutputConfiguration* %arrayidx6 to i8*, !dbg !9072
  %7 = bitcast %struct.OutputConfiguration* %arrayidx8 to i8*, !dbg !9072
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 264, i32 8, i1 false), !dbg !9072
  store i32 1, i32* %pushed, align 4, !dbg !9074
  br label %if.end, !dbg !9075

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %8 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9076
  %oc9 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 21, !dbg !9077
  %arrayidx10 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc9, i64 0, i64 1, !dbg !9076
  %status11 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx10, i32 0, i32 5, !dbg !9078
  store i32 0, i32* %status11, align 8, !dbg !9079
  %9 = load i32, i32* %pushed, align 4, !dbg !9080
  ret i32 %9, !dbg !9081
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_ics_info(%struct.AACContext* %ac, %struct.IndividualChannelStream* %ics, %struct.GetBitContext* %gb) #1 !dbg !9082 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %m4ac = alloca %struct.MPEG4AudioConfig*, align 8
  %aot = alloca i32, align 4
  %sampling_index = alloca i32, align 4
  %ret_fail = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !9085, metadata !2068), !dbg !9086
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !9087, metadata !2068), !dbg !9088
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9089, metadata !2068), !dbg !9090
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac, metadata !9091, metadata !2068), !dbg !9092
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9093
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 21, !dbg !9094
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !9093
  %m4ac1 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !9095
  store %struct.MPEG4AudioConfig* %m4ac1, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !9092
  call void @llvm.dbg.declare(metadata i32* %aot, metadata !9096, metadata !2068), !dbg !9097
  %1 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !9098
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %1, i32 0, i32 0, !dbg !9099
  %2 = load i32, i32* %object_type, align 4, !dbg !9099
  store i32 %2, i32* %aot, align 4, !dbg !9097
  call void @llvm.dbg.declare(metadata i32* %sampling_index, metadata !9100, metadata !2068), !dbg !9101
  %3 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !9102
  %sampling_index2 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %3, i32 0, i32 1, !dbg !9103
  %4 = load i32, i32* %sampling_index2, align 4, !dbg !9103
  store i32 %4, i32* %sampling_index, align 4, !dbg !9101
  call void @llvm.dbg.declare(metadata i32* %ret_fail, metadata !9104, metadata !2068), !dbg !9105
  store i32 -1094995529, i32* %ret_fail, align 4, !dbg !9105
  %5 = load i32, i32* %aot, align 4, !dbg !9106
  %cmp = icmp ne i32 %5, 39, !dbg !9108
  br i1 %cmp, label %if.then, label %if.end31, !dbg !9109

if.then:                                          ; preds = %entry
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9110
  %call = call i32 @get_bits1(%struct.GetBitContext* %6), !dbg !9113
  %tobool = icmp ne i32 %call, 0, !dbg !9113
  br i1 %tobool, label %if.then3, label %if.end7, !dbg !9114

if.then3:                                         ; preds = %if.then
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9115
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 1, !dbg !9117
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9117
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !9115
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.47, i32 0, i32 0)), !dbg !9118
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9119
  %avctx4 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 1, !dbg !9121
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx4, align 8, !dbg !9121
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 135, !dbg !9122
  %12 = load i32, i32* %err_recognition, align 8, !dbg !9122
  %and = and i32 %12, 2, !dbg !9123
  %tobool5 = icmp ne i32 %and, 0, !dbg !9123
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !9124

if.then6:                                         ; preds = %if.then3
  store i32 -1094995529, i32* %retval, align 4, !dbg !9125
  br label %return, !dbg !9125

if.end:                                           ; preds = %if.then3
  br label %if.end7, !dbg !9126

if.end7:                                          ; preds = %if.end, %if.then
  %13 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9127
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %13, i32 0, i32 1, !dbg !9128
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !9127
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !9127
  %15 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9129
  %window_sequence9 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %15, i32 0, i32 1, !dbg !9130
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence9, i64 0, i64 1, !dbg !9129
  store i32 %14, i32* %arrayidx10, align 4, !dbg !9131
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9132
  %call11 = call i32 @get_bits(%struct.GetBitContext* %16, i32 2), !dbg !9133
  %17 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9134
  %window_sequence12 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %17, i32 0, i32 1, !dbg !9135
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence12, i64 0, i64 0, !dbg !9134
  store i32 %call11, i32* %arrayidx13, align 4, !dbg !9136
  %18 = load i32, i32* %aot, align 4, !dbg !9137
  %cmp14 = icmp eq i32 %18, 23, !dbg !9139
  br i1 %cmp14, label %land.lhs.true, label %if.end24, !dbg !9140

land.lhs.true:                                    ; preds = %if.end7
  %19 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9141
  %window_sequence15 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %19, i32 0, i32 1, !dbg !9142
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence15, i64 0, i64 0, !dbg !9141
  %20 = load i32, i32* %arrayidx16, align 4, !dbg !9141
  %cmp17 = icmp ne i32 %20, 0, !dbg !9143
  br i1 %cmp17, label %if.then18, label %if.end24, !dbg !9144

if.then18:                                        ; preds = %land.lhs.true
  %21 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9146
  %avctx19 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %21, i32 0, i32 1, !dbg !9148
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx19, align 8, !dbg !9148
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !9146
  %24 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9149
  %window_sequence20 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %24, i32 0, i32 1, !dbg !9150
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence20, i64 0, i64 0, !dbg !9149
  %25 = load i32, i32* %arrayidx21, align 4, !dbg !9149
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.48, i32 0, i32 0), i32 %25), !dbg !9151
  %26 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9152
  %window_sequence22 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %26, i32 0, i32 1, !dbg !9153
  %arrayidx23 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence22, i64 0, i64 0, !dbg !9152
  store i32 0, i32* %arrayidx23, align 4, !dbg !9154
  store i32 -1094995529, i32* %retval, align 4, !dbg !9155
  br label %return, !dbg !9155

if.end24:                                         ; preds = %land.lhs.true, %if.end7
  %27 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9156
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %27, i32 0, i32 2, !dbg !9157
  %arrayidx25 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !9156
  %28 = load i8, i8* %arrayidx25, align 4, !dbg !9156
  %29 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9158
  %use_kb_window26 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %29, i32 0, i32 2, !dbg !9159
  %arrayidx27 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window26, i64 0, i64 1, !dbg !9158
  store i8 %28, i8* %arrayidx27, align 1, !dbg !9160
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9161
  %call28 = call i32 @get_bits1(%struct.GetBitContext* %30), !dbg !9162
  %conv = trunc i32 %call28 to i8, !dbg !9162
  %31 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9163
  %use_kb_window29 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %31, i32 0, i32 2, !dbg !9164
  %arrayidx30 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window29, i64 0, i64 0, !dbg !9163
  store i8 %conv, i8* %arrayidx30, align 4, !dbg !9165
  br label %if.end31, !dbg !9166

if.end31:                                         ; preds = %if.end24, %entry
  %32 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9167
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %32, i32 0, i32 3, !dbg !9168
  store i32 1, i32* %num_window_groups, align 8, !dbg !9169
  %33 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9170
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %33, i32 0, i32 4, !dbg !9171
  %arrayidx32 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 0, !dbg !9170
  store i8 1, i8* %arrayidx32, align 4, !dbg !9172
  %34 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9173
  %window_sequence33 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %34, i32 0, i32 1, !dbg !9175
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence33, i64 0, i64 0, !dbg !9173
  %35 = load i32, i32* %arrayidx34, align 4, !dbg !9173
  %cmp35 = icmp eq i32 %35, 2, !dbg !9176
  br i1 %cmp35, label %if.then37, label %if.else76, !dbg !9177

if.then37:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9178, metadata !2068), !dbg !9180
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9181
  %call38 = call i32 @get_bits(%struct.GetBitContext* %36, i32 4), !dbg !9182
  %conv39 = trunc i32 %call38 to i8, !dbg !9182
  %37 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9183
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %37, i32 0, i32 0, !dbg !9184
  store i8 %conv39, i8* %max_sfb, align 8, !dbg !9185
  store i32 0, i32* %i, align 4, !dbg !9186
  br label %for.cond, !dbg !9188

for.cond:                                         ; preds = %for.inc, %if.then37
  %38 = load i32, i32* %i, align 4, !dbg !9189
  %cmp40 = icmp slt i32 %38, 7, !dbg !9192
  br i1 %cmp40, label %for.body, label %for.end, !dbg !9193

for.body:                                         ; preds = %for.cond
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9194
  %call42 = call i32 @get_bits1(%struct.GetBitContext* %39), !dbg !9197
  %tobool43 = icmp ne i32 %call42, 0, !dbg !9197
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !9198

if.then44:                                        ; preds = %for.body
  %40 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9199
  %num_window_groups45 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %40, i32 0, i32 3, !dbg !9201
  %41 = load i32, i32* %num_window_groups45, align 8, !dbg !9201
  %sub = sub nsw i32 %41, 1, !dbg !9202
  %idxprom = sext i32 %sub to i64, !dbg !9203
  %42 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9203
  %group_len46 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %42, i32 0, i32 4, !dbg !9204
  %arrayidx47 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len46, i64 0, i64 %idxprom, !dbg !9203
  %43 = load i8, i8* %arrayidx47, align 1, !dbg !9205
  %inc = add i8 %43, 1, !dbg !9205
  store i8 %inc, i8* %arrayidx47, align 1, !dbg !9205
  br label %if.end55, !dbg !9206

if.else:                                          ; preds = %for.body
  %44 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9207
  %num_window_groups48 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %44, i32 0, i32 3, !dbg !9209
  %45 = load i32, i32* %num_window_groups48, align 8, !dbg !9210
  %inc49 = add nsw i32 %45, 1, !dbg !9210
  store i32 %inc49, i32* %num_window_groups48, align 8, !dbg !9210
  %46 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9211
  %num_window_groups50 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %46, i32 0, i32 3, !dbg !9212
  %47 = load i32, i32* %num_window_groups50, align 8, !dbg !9212
  %sub51 = sub nsw i32 %47, 1, !dbg !9213
  %idxprom52 = sext i32 %sub51 to i64, !dbg !9214
  %48 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9214
  %group_len53 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %48, i32 0, i32 4, !dbg !9215
  %arrayidx54 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len53, i64 0, i64 %idxprom52, !dbg !9214
  store i8 1, i8* %arrayidx54, align 1, !dbg !9216
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then44
  br label %for.inc, !dbg !9217

for.inc:                                          ; preds = %if.end55
  %49 = load i32, i32* %i, align 4, !dbg !9218
  %inc56 = add nsw i32 %49, 1, !dbg !9218
  store i32 %inc56, i32* %i, align 4, !dbg !9218
  br label %for.cond, !dbg !9220, !llvm.loop !9221

for.end:                                          ; preds = %for.cond
  %50 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9223
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %50, i32 0, i32 9, !dbg !9224
  store i32 8, i32* %num_windows, align 4, !dbg !9225
  %51 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !9226
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %51, i32 0, i32 11, !dbg !9228
  %52 = load i32, i32* %frame_length_short, align 4, !dbg !9228
  %tobool57 = icmp ne i32 %52, 0, !dbg !9226
  br i1 %tobool57, label %if.then58, label %if.else64, !dbg !9229

if.then58:                                        ; preds = %for.end
  %53 = load i32, i32* %sampling_index, align 4, !dbg !9230
  %idxprom59 = sext i32 %53 to i64, !dbg !9232
  %arrayidx60 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_120, i64 0, i64 %idxprom59, !dbg !9232
  %54 = load i16*, i16** %arrayidx60, align 8, !dbg !9232
  %55 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9233
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %55, i32 0, i32 6, !dbg !9234
  store i16* %54, i16** %swb_offset, align 8, !dbg !9235
  %56 = load i32, i32* %sampling_index, align 4, !dbg !9236
  %idxprom61 = sext i32 %56 to i64, !dbg !9237
  %arrayidx62 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_120, i64 0, i64 %idxprom61, !dbg !9237
  %57 = load i8, i8* %arrayidx62, align 1, !dbg !9237
  %conv63 = zext i8 %57 to i32, !dbg !9237
  %58 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9238
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %58, i32 0, i32 8, !dbg !9239
  store i32 %conv63, i32* %num_swb, align 8, !dbg !9240
  br label %if.end72, !dbg !9241

if.else64:                                        ; preds = %for.end
  %59 = load i32, i32* %sampling_index, align 4, !dbg !9242
  %idxprom65 = sext i32 %59 to i64, !dbg !9244
  %arrayidx66 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_128, i64 0, i64 %idxprom65, !dbg !9244
  %60 = load i16*, i16** %arrayidx66, align 8, !dbg !9244
  %61 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9245
  %swb_offset67 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %61, i32 0, i32 6, !dbg !9246
  store i16* %60, i16** %swb_offset67, align 8, !dbg !9247
  %62 = load i32, i32* %sampling_index, align 4, !dbg !9248
  %idxprom68 = sext i32 %62 to i64, !dbg !9249
  %arrayidx69 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_128, i64 0, i64 %idxprom68, !dbg !9249
  %63 = load i8, i8* %arrayidx69, align 1, !dbg !9249
  %conv70 = zext i8 %63 to i32, !dbg !9249
  %64 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9250
  %num_swb71 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %64, i32 0, i32 8, !dbg !9251
  store i32 %conv70, i32* %num_swb71, align 8, !dbg !9252
  br label %if.end72

if.end72:                                         ; preds = %if.else64, %if.then58
  %65 = load i32, i32* %sampling_index, align 4, !dbg !9253
  %idxprom73 = sext i32 %65 to i64, !dbg !9254
  %arrayidx74 = getelementptr inbounds [13 x i8], [13 x i8]* @ff_tns_max_bands_128, i64 0, i64 %idxprom73, !dbg !9254
  %66 = load i8, i8* %arrayidx74, align 1, !dbg !9254
  %conv75 = zext i8 %66 to i32, !dbg !9254
  %67 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9255
  %tns_max_bands = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %67, i32 0, i32 10, !dbg !9256
  store i32 %conv75, i32* %tns_max_bands, align 8, !dbg !9257
  %68 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9258
  %predictor_present = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %68, i32 0, i32 11, !dbg !9259
  store i32 0, i32* %predictor_present, align 4, !dbg !9260
  br label %if.end185, !dbg !9261

if.else76:                                        ; preds = %if.end31
  %69 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9262
  %call77 = call i32 @get_bits(%struct.GetBitContext* %69, i32 6), !dbg !9264
  %conv78 = trunc i32 %call77 to i8, !dbg !9264
  %70 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9265
  %max_sfb79 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %70, i32 0, i32 0, !dbg !9266
  store i8 %conv78, i8* %max_sfb79, align 8, !dbg !9267
  %71 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9268
  %num_windows80 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %71, i32 0, i32 9, !dbg !9269
  store i32 1, i32* %num_windows80, align 4, !dbg !9270
  %72 = load i32, i32* %aot, align 4, !dbg !9271
  %cmp81 = icmp eq i32 %72, 23, !dbg !9273
  br i1 %cmp81, label %if.then85, label %lor.lhs.false, !dbg !9274

lor.lhs.false:                                    ; preds = %if.else76
  %73 = load i32, i32* %aot, align 4, !dbg !9275
  %cmp83 = icmp eq i32 %73, 39, !dbg !9277
  br i1 %cmp83, label %if.then85, label %if.else120, !dbg !9278

if.then85:                                        ; preds = %lor.lhs.false, %if.else76
  %74 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !9279
  %frame_length_short86 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %74, i32 0, i32 11, !dbg !9282
  %75 = load i32, i32* %frame_length_short86, align 4, !dbg !9282
  %tobool87 = icmp ne i32 %75, 0, !dbg !9279
  br i1 %tobool87, label %if.then88, label %if.else100, !dbg !9283

if.then88:                                        ; preds = %if.then85
  %76 = load i32, i32* %sampling_index, align 4, !dbg !9284
  %idxprom89 = sext i32 %76 to i64, !dbg !9286
  %arrayidx90 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_480, i64 0, i64 %idxprom89, !dbg !9286
  %77 = load i16*, i16** %arrayidx90, align 8, !dbg !9286
  %78 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9287
  %swb_offset91 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %78, i32 0, i32 6, !dbg !9288
  store i16* %77, i16** %swb_offset91, align 8, !dbg !9289
  %79 = load i32, i32* %sampling_index, align 4, !dbg !9290
  %idxprom92 = sext i32 %79 to i64, !dbg !9291
  %arrayidx93 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_480, i64 0, i64 %idxprom92, !dbg !9291
  %80 = load i8, i8* %arrayidx93, align 1, !dbg !9291
  %conv94 = zext i8 %80 to i32, !dbg !9291
  %81 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9292
  %num_swb95 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %81, i32 0, i32 8, !dbg !9293
  store i32 %conv94, i32* %num_swb95, align 8, !dbg !9294
  %82 = load i32, i32* %sampling_index, align 4, !dbg !9295
  %idxprom96 = sext i32 %82 to i64, !dbg !9296
  %arrayidx97 = getelementptr inbounds [13 x i8], [13 x i8]* @ff_tns_max_bands_480, i64 0, i64 %idxprom96, !dbg !9296
  %83 = load i8, i8* %arrayidx97, align 1, !dbg !9296
  %conv98 = zext i8 %83 to i32, !dbg !9296
  %84 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9297
  %tns_max_bands99 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %84, i32 0, i32 10, !dbg !9298
  store i32 %conv98, i32* %tns_max_bands99, align 8, !dbg !9299
  br label %if.end112, !dbg !9300

if.else100:                                       ; preds = %if.then85
  %85 = load i32, i32* %sampling_index, align 4, !dbg !9301
  %idxprom101 = sext i32 %85 to i64, !dbg !9303
  %arrayidx102 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_512, i64 0, i64 %idxprom101, !dbg !9303
  %86 = load i16*, i16** %arrayidx102, align 8, !dbg !9303
  %87 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9304
  %swb_offset103 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %87, i32 0, i32 6, !dbg !9305
  store i16* %86, i16** %swb_offset103, align 8, !dbg !9306
  %88 = load i32, i32* %sampling_index, align 4, !dbg !9307
  %idxprom104 = sext i32 %88 to i64, !dbg !9308
  %arrayidx105 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_512, i64 0, i64 %idxprom104, !dbg !9308
  %89 = load i8, i8* %arrayidx105, align 1, !dbg !9308
  %conv106 = zext i8 %89 to i32, !dbg !9308
  %90 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9309
  %num_swb107 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %90, i32 0, i32 8, !dbg !9310
  store i32 %conv106, i32* %num_swb107, align 8, !dbg !9311
  %91 = load i32, i32* %sampling_index, align 4, !dbg !9312
  %idxprom108 = sext i32 %91 to i64, !dbg !9313
  %arrayidx109 = getelementptr inbounds [13 x i8], [13 x i8]* @ff_tns_max_bands_512, i64 0, i64 %idxprom108, !dbg !9313
  %92 = load i8, i8* %arrayidx109, align 1, !dbg !9313
  %conv110 = zext i8 %92 to i32, !dbg !9313
  %93 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9314
  %tns_max_bands111 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %93, i32 0, i32 10, !dbg !9315
  store i32 %conv110, i32* %tns_max_bands111, align 8, !dbg !9316
  br label %if.end112

if.end112:                                        ; preds = %if.else100, %if.then88
  %94 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9317
  %num_swb113 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %94, i32 0, i32 8, !dbg !9319
  %95 = load i32, i32* %num_swb113, align 8, !dbg !9319
  %tobool114 = icmp ne i32 %95, 0, !dbg !9317
  br i1 %tobool114, label %lor.lhs.false115, label %if.then118, !dbg !9320

lor.lhs.false115:                                 ; preds = %if.end112
  %96 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9321
  %swb_offset116 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %96, i32 0, i32 6, !dbg !9323
  %97 = load i16*, i16** %swb_offset116, align 8, !dbg !9323
  %tobool117 = icmp ne i16* %97, null, !dbg !9321
  br i1 %tobool117, label %if.end119, label %if.then118, !dbg !9324

if.then118:                                       ; preds = %lor.lhs.false115, %if.end112
  store i32 -558323010, i32* %ret_fail, align 4, !dbg !9325
  br label %fail, !dbg !9327

if.end119:                                        ; preds = %lor.lhs.false115
  br label %if.end144, !dbg !9328

if.else120:                                       ; preds = %lor.lhs.false
  %98 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !9329
  %frame_length_short121 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %98, i32 0, i32 11, !dbg !9332
  %99 = load i32, i32* %frame_length_short121, align 4, !dbg !9332
  %tobool122 = icmp ne i32 %99, 0, !dbg !9329
  br i1 %tobool122, label %if.then123, label %if.else131, !dbg !9333

if.then123:                                       ; preds = %if.else120
  %100 = load i32, i32* %sampling_index, align 4, !dbg !9334
  %idxprom124 = sext i32 %100 to i64, !dbg !9336
  %arrayidx125 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_960, i64 0, i64 %idxprom124, !dbg !9336
  %101 = load i8, i8* %arrayidx125, align 1, !dbg !9336
  %conv126 = zext i8 %101 to i32, !dbg !9336
  %102 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9337
  %num_swb127 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %102, i32 0, i32 8, !dbg !9338
  store i32 %conv126, i32* %num_swb127, align 8, !dbg !9339
  %103 = load i32, i32* %sampling_index, align 4, !dbg !9340
  %idxprom128 = sext i32 %103 to i64, !dbg !9341
  %arrayidx129 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_960, i64 0, i64 %idxprom128, !dbg !9341
  %104 = load i16*, i16** %arrayidx129, align 8, !dbg !9341
  %105 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9342
  %swb_offset130 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %105, i32 0, i32 6, !dbg !9343
  store i16* %104, i16** %swb_offset130, align 8, !dbg !9344
  br label %if.end139, !dbg !9345

if.else131:                                       ; preds = %if.else120
  %106 = load i32, i32* %sampling_index, align 4, !dbg !9346
  %idxprom132 = sext i32 %106 to i64, !dbg !9348
  %arrayidx133 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_1024, i64 0, i64 %idxprom132, !dbg !9348
  %107 = load i8, i8* %arrayidx133, align 1, !dbg !9348
  %conv134 = zext i8 %107 to i32, !dbg !9348
  %108 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9349
  %num_swb135 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %108, i32 0, i32 8, !dbg !9350
  store i32 %conv134, i32* %num_swb135, align 8, !dbg !9351
  %109 = load i32, i32* %sampling_index, align 4, !dbg !9352
  %idxprom136 = sext i32 %109 to i64, !dbg !9353
  %arrayidx137 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_1024, i64 0, i64 %idxprom136, !dbg !9353
  %110 = load i16*, i16** %arrayidx137, align 8, !dbg !9353
  %111 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9354
  %swb_offset138 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %111, i32 0, i32 6, !dbg !9355
  store i16* %110, i16** %swb_offset138, align 8, !dbg !9356
  br label %if.end139

if.end139:                                        ; preds = %if.else131, %if.then123
  %112 = load i32, i32* %sampling_index, align 4, !dbg !9357
  %idxprom140 = sext i32 %112 to i64, !dbg !9358
  %arrayidx141 = getelementptr inbounds [13 x i8], [13 x i8]* @ff_tns_max_bands_1024, i64 0, i64 %idxprom140, !dbg !9358
  %113 = load i8, i8* %arrayidx141, align 1, !dbg !9358
  %conv142 = zext i8 %113 to i32, !dbg !9358
  %114 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9359
  %tns_max_bands143 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %114, i32 0, i32 10, !dbg !9360
  store i32 %conv142, i32* %tns_max_bands143, align 8, !dbg !9361
  br label %if.end144

if.end144:                                        ; preds = %if.end139, %if.end119
  %115 = load i32, i32* %aot, align 4, !dbg !9362
  %cmp145 = icmp ne i32 %115, 39, !dbg !9364
  br i1 %cmp145, label %if.then147, label %if.end150, !dbg !9365

if.then147:                                       ; preds = %if.end144
  %116 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9366
  %call148 = call i32 @get_bits1(%struct.GetBitContext* %116), !dbg !9368
  %117 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9369
  %predictor_present149 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %117, i32 0, i32 11, !dbg !9370
  store i32 %call148, i32* %predictor_present149, align 4, !dbg !9371
  %118 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9372
  %predictor_reset_group = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %118, i32 0, i32 13, !dbg !9373
  store i32 0, i32* %predictor_reset_group, align 4, !dbg !9374
  br label %if.end150, !dbg !9375

if.end150:                                        ; preds = %if.then147, %if.end144
  %119 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9376
  %predictor_present151 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %119, i32 0, i32 11, !dbg !9378
  %120 = load i32, i32* %predictor_present151, align 4, !dbg !9378
  %tobool152 = icmp ne i32 %120, 0, !dbg !9376
  br i1 %tobool152, label %if.then153, label %if.end184, !dbg !9379

if.then153:                                       ; preds = %if.end150
  %121 = load i32, i32* %aot, align 4, !dbg !9380
  %cmp154 = icmp eq i32 %121, 1, !dbg !9383
  br i1 %cmp154, label %if.then156, label %if.else161, !dbg !9384

if.then156:                                       ; preds = %if.then153
  %122 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9385
  %123 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9388
  %124 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9389
  %call157 = call i32 @decode_prediction(%struct.AACContext* %122, %struct.IndividualChannelStream* %123, %struct.GetBitContext* %124), !dbg !9390
  %tobool158 = icmp ne i32 %call157, 0, !dbg !9390
  br i1 %tobool158, label %if.then159, label %if.end160, !dbg !9391

if.then159:                                       ; preds = %if.then156
  br label %fail, !dbg !9392

if.end160:                                        ; preds = %if.then156
  br label %if.end183, !dbg !9394

if.else161:                                       ; preds = %if.then153
  %125 = load i32, i32* %aot, align 4, !dbg !9395
  %cmp162 = icmp eq i32 %125, 2, !dbg !9398
  br i1 %cmp162, label %if.then167, label %lor.lhs.false164, !dbg !9399

lor.lhs.false164:                                 ; preds = %if.else161
  %126 = load i32, i32* %aot, align 4, !dbg !9400
  %cmp165 = icmp eq i32 %126, 17, !dbg !9401
  br i1 %cmp165, label %if.then167, label %if.else169, !dbg !9402

if.then167:                                       ; preds = %lor.lhs.false164, %if.else161
  %127 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9404
  %avctx168 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %127, i32 0, i32 1, !dbg !9406
  %128 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx168, align 8, !dbg !9406
  %129 = bitcast %struct.AVCodecContext* %128 to i8*, !dbg !9404
  call void (i8*, i32, i8*, ...) @av_log(i8* %129, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.49, i32 0, i32 0)), !dbg !9407
  br label %fail, !dbg !9408

if.else169:                                       ; preds = %lor.lhs.false164
  %130 = load i32, i32* %aot, align 4, !dbg !9409
  %cmp170 = icmp eq i32 %130, 23, !dbg !9412
  br i1 %cmp170, label %if.then172, label %if.end174, !dbg !9413

if.then172:                                       ; preds = %if.else169
  %131 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9414
  %avctx173 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %131, i32 0, i32 1, !dbg !9416
  %132 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx173, align 8, !dbg !9416
  %133 = bitcast %struct.AVCodecContext* %132 to i8*, !dbg !9414
  call void (i8*, i32, i8*, ...) @av_log(i8* %133, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.50, i32 0, i32 0)), !dbg !9417
  store i32 -1163346256, i32* %ret_fail, align 4, !dbg !9418
  br label %fail, !dbg !9419

if.end174:                                        ; preds = %if.else169
  %134 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9420
  %call175 = call i32 @get_bits(%struct.GetBitContext* %134, i32 1), !dbg !9422
  %conv176 = trunc i32 %call175 to i8, !dbg !9422
  %135 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9423
  %ltp = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %135, i32 0, i32 5, !dbg !9424
  %present = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %ltp, i32 0, i32 0, !dbg !9425
  store i8 %conv176, i8* %present, align 4, !dbg !9426
  %tobool177 = icmp ne i8 %conv176, 0, !dbg !9426
  br i1 %tobool177, label %if.then178, label %if.end181, !dbg !9427

if.then178:                                       ; preds = %if.end174
  %136 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9428
  %ltp179 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %136, i32 0, i32 5, !dbg !9429
  %137 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9430
  %138 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9431
  %max_sfb180 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %138, i32 0, i32 0, !dbg !9432
  %139 = load i8, i8* %max_sfb180, align 8, !dbg !9432
  call void @decode_ltp(%struct.LongTermPrediction* %ltp179, %struct.GetBitContext* %137, i8 zeroext %139), !dbg !9433
  br label %if.end181, !dbg !9433

if.end181:                                        ; preds = %if.then178, %if.end174
  br label %if.end182

if.end182:                                        ; preds = %if.end181
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.end160
  br label %if.end184, !dbg !9434

if.end184:                                        ; preds = %if.end183, %if.end150
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.end72
  %140 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9435
  %max_sfb186 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %140, i32 0, i32 0, !dbg !9437
  %141 = load i8, i8* %max_sfb186, align 8, !dbg !9437
  %conv187 = zext i8 %141 to i32, !dbg !9435
  %142 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9438
  %num_swb188 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %142, i32 0, i32 8, !dbg !9439
  %143 = load i32, i32* %num_swb188, align 8, !dbg !9439
  %cmp189 = icmp sgt i32 %conv187, %143, !dbg !9440
  br i1 %cmp189, label %if.then191, label %if.end196, !dbg !9441

if.then191:                                       ; preds = %if.end185
  %144 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9442
  %avctx192 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %144, i32 0, i32 1, !dbg !9444
  %145 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx192, align 8, !dbg !9444
  %146 = bitcast %struct.AVCodecContext* %145 to i8*, !dbg !9442
  %147 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9445
  %max_sfb193 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %147, i32 0, i32 0, !dbg !9446
  %148 = load i8, i8* %max_sfb193, align 8, !dbg !9446
  %conv194 = zext i8 %148 to i32, !dbg !9445
  %149 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9447
  %num_swb195 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %149, i32 0, i32 8, !dbg !9448
  %150 = load i32, i32* %num_swb195, align 8, !dbg !9448
  call void (i8*, i32, i8*, ...) @av_log(i8* %146, i32 16, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.51, i32 0, i32 0), i32 %conv194, i32 %150), !dbg !9449
  br label %fail, !dbg !9450

if.end196:                                        ; preds = %if.end185
  store i32 0, i32* %retval, align 4, !dbg !9451
  br label %return, !dbg !9451

fail:                                             ; preds = %if.then191, %if.then172, %if.then167, %if.then159, %if.then118
  %151 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9452
  %max_sfb197 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %151, i32 0, i32 0, !dbg !9453
  store i8 0, i8* %max_sfb197, align 8, !dbg !9454
  %152 = load i32, i32* %ret_fail, align 4, !dbg !9455
  store i32 %152, i32* %retval, align 4, !dbg !9456
  br label %return, !dbg !9456

return:                                           ; preds = %fail, %if.end196, %if.then18, %if.then6
  %153 = load i32, i32* %retval, align 4, !dbg !9457
  ret i32 %153, !dbg !9457
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_band_types(%struct.AACContext* %ac, i32* %band_type, i32* %band_type_run_end, %struct.GetBitContext* %gb, %struct.IndividualChannelStream* %ics) #1 !dbg !9458 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %band_type.addr = alloca i32*, align 8
  %band_type_run_end.addr = alloca i32*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %g = alloca i32, align 4
  %idx = alloca i32, align 4
  %bits = alloca i32, align 4
  %k = alloca i32, align 4
  %sect_end = alloca i8, align 1
  %sect_len_incr = alloca i32, align 4
  %sect_band_type = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !9462, metadata !2068), !dbg !9463
  store i32* %band_type, i32** %band_type.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_type.addr, metadata !9464, metadata !2068), !dbg !9465
  store i32* %band_type_run_end, i32** %band_type_run_end.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_type_run_end.addr, metadata !9466, metadata !2068), !dbg !9467
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9468, metadata !2068), !dbg !9469
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !9470, metadata !2068), !dbg !9471
  call void @llvm.dbg.declare(metadata i32* %g, metadata !9472, metadata !2068), !dbg !9473
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !9474, metadata !2068), !dbg !9475
  store i32 0, i32* %idx, align 4, !dbg !9475
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !9476, metadata !2068), !dbg !9477
  %0 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9478
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %0, i32 0, i32 1, !dbg !9479
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !9478
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9478
  %cmp = icmp eq i32 %1, 2, !dbg !9480
  %cond = select i1 %cmp, i32 3, i32 5, !dbg !9481
  store i32 %cond, i32* %bits, align 4, !dbg !9477
  store i32 0, i32* %g, align 4, !dbg !9482
  br label %for.cond, !dbg !9484

for.cond:                                         ; preds = %for.inc39, %entry
  %2 = load i32, i32* %g, align 4, !dbg !9485
  %3 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9488
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %3, i32 0, i32 3, !dbg !9489
  %4 = load i32, i32* %num_window_groups, align 8, !dbg !9489
  %cmp1 = icmp slt i32 %2, %4, !dbg !9490
  br i1 %cmp1, label %for.body, label %for.end41, !dbg !9491

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9492, metadata !2068), !dbg !9494
  store i32 0, i32* %k, align 4, !dbg !9494
  br label %while.cond, !dbg !9495

while.cond:                                       ; preds = %for.end, %for.body
  %5 = load i32, i32* %k, align 4, !dbg !9496
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9498
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 0, !dbg !9499
  %7 = load i8, i8* %max_sfb, align 8, !dbg !9499
  %conv = zext i8 %7 to i32, !dbg !9498
  %cmp2 = icmp slt i32 %5, %conv, !dbg !9500
  br i1 %cmp2, label %while.body, label %while.end, !dbg !9501

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %sect_end, metadata !9502, metadata !2068), !dbg !9504
  %8 = load i32, i32* %k, align 4, !dbg !9505
  %conv4 = trunc i32 %8 to i8, !dbg !9505
  store i8 %conv4, i8* %sect_end, align 1, !dbg !9504
  call void @llvm.dbg.declare(metadata i32* %sect_len_incr, metadata !9506, metadata !2068), !dbg !9507
  call void @llvm.dbg.declare(metadata i32* %sect_band_type, metadata !9508, metadata !2068), !dbg !9509
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9510
  %call = call i32 @get_bits(%struct.GetBitContext* %9, i32 4), !dbg !9511
  store i32 %call, i32* %sect_band_type, align 4, !dbg !9509
  %10 = load i32, i32* %sect_band_type, align 4, !dbg !9512
  %cmp5 = icmp eq i32 %10, 12, !dbg !9514
  br i1 %cmp5, label %if.then, label %if.end, !dbg !9515

if.then:                                          ; preds = %while.body
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9516
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %11, i32 0, i32 1, !dbg !9518
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9518
  %13 = bitcast %struct.AVCodecContext* %12 to i8*, !dbg !9516
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.53, i32 0, i32 0)), !dbg !9519
  store i32 -1094995529, i32* %retval, align 4, !dbg !9520
  br label %return, !dbg !9520

if.end:                                           ; preds = %while.body
  br label %do.body, !dbg !9521, !llvm.loop !9522

do.body:                                          ; preds = %do.cond, %if.end
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9523
  %15 = load i32, i32* %bits, align 4, !dbg !9525
  %call7 = call i32 @get_bits(%struct.GetBitContext* %14, i32 %15), !dbg !9526
  store i32 %call7, i32* %sect_len_incr, align 4, !dbg !9527
  %16 = load i32, i32* %sect_len_incr, align 4, !dbg !9528
  %17 = load i8, i8* %sect_end, align 1, !dbg !9529
  %conv8 = zext i8 %17 to i32, !dbg !9529
  %add = add nsw i32 %conv8, %16, !dbg !9529
  %conv9 = trunc i32 %add to i8, !dbg !9529
  store i8 %conv9, i8* %sect_end, align 1, !dbg !9529
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9530
  %call10 = call i32 @get_bits_left(%struct.GetBitContext* %18), !dbg !9532
  %cmp11 = icmp slt i32 %call10, 0, !dbg !9533
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !9534

if.then13:                                        ; preds = %do.body
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9535
  %avctx14 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 1, !dbg !9537
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx14, align 8, !dbg !9537
  %21 = bitcast %struct.AVCodecContext* %20 to i8*, !dbg !9535
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.54, i32 0, i32 0)), !dbg !9538
  store i32 -1094995529, i32* %retval, align 4, !dbg !9539
  br label %return, !dbg !9539

if.end15:                                         ; preds = %do.body
  %22 = load i8, i8* %sect_end, align 1, !dbg !9540
  %conv16 = zext i8 %22 to i32, !dbg !9540
  %23 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9542
  %max_sfb17 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %23, i32 0, i32 0, !dbg !9543
  %24 = load i8, i8* %max_sfb17, align 8, !dbg !9543
  %conv18 = zext i8 %24 to i32, !dbg !9542
  %cmp19 = icmp sgt i32 %conv16, %conv18, !dbg !9544
  br i1 %cmp19, label %if.then21, label %if.end26, !dbg !9545

if.then21:                                        ; preds = %if.end15
  %25 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9546
  %avctx22 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %25, i32 0, i32 1, !dbg !9548
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx22, align 8, !dbg !9548
  %27 = bitcast %struct.AVCodecContext* %26 to i8*, !dbg !9546
  %28 = load i8, i8* %sect_end, align 1, !dbg !9549
  %conv23 = zext i8 %28 to i32, !dbg !9549
  %29 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9550
  %max_sfb24 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %29, i32 0, i32 0, !dbg !9551
  %30 = load i8, i8* %max_sfb24, align 8, !dbg !9551
  %conv25 = zext i8 %30 to i32, !dbg !9550
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.55, i32 0, i32 0), i32 %conv23, i32 %conv25), !dbg !9552
  store i32 -1094995529, i32* %retval, align 4, !dbg !9553
  br label %return, !dbg !9553

if.end26:                                         ; preds = %if.end15
  br label %do.cond, !dbg !9554

do.cond:                                          ; preds = %if.end26
  %31 = load i32, i32* %sect_len_incr, align 4, !dbg !9555
  %32 = load i32, i32* %bits, align 4, !dbg !9557
  %shl = shl i32 1, %32, !dbg !9558
  %sub = sub nsw i32 %shl, 1, !dbg !9559
  %cmp27 = icmp eq i32 %31, %sub, !dbg !9560
  br i1 %cmp27, label %do.body, label %do.end, !dbg !9561, !llvm.loop !9522

do.end:                                           ; preds = %do.cond
  br label %for.cond29, !dbg !9562

for.cond29:                                       ; preds = %for.inc, %do.end
  %33 = load i32, i32* %k, align 4, !dbg !9563
  %34 = load i8, i8* %sect_end, align 1, !dbg !9567
  %conv30 = zext i8 %34 to i32, !dbg !9567
  %cmp31 = icmp slt i32 %33, %conv30, !dbg !9568
  br i1 %cmp31, label %for.body33, label %for.end, !dbg !9569

for.body33:                                       ; preds = %for.cond29
  %35 = load i32, i32* %sect_band_type, align 4, !dbg !9570
  %36 = load i32, i32* %idx, align 4, !dbg !9572
  %idxprom = sext i32 %36 to i64, !dbg !9573
  %37 = load i32*, i32** %band_type.addr, align 8, !dbg !9573
  %arrayidx34 = getelementptr inbounds i32, i32* %37, i64 %idxprom, !dbg !9573
  store i32 %35, i32* %arrayidx34, align 4, !dbg !9574
  %38 = load i8, i8* %sect_end, align 1, !dbg !9575
  %conv35 = zext i8 %38 to i32, !dbg !9575
  %39 = load i32, i32* %idx, align 4, !dbg !9576
  %inc = add nsw i32 %39, 1, !dbg !9576
  store i32 %inc, i32* %idx, align 4, !dbg !9576
  %idxprom36 = sext i32 %39 to i64, !dbg !9577
  %40 = load i32*, i32** %band_type_run_end.addr, align 8, !dbg !9577
  %arrayidx37 = getelementptr inbounds i32, i32* %40, i64 %idxprom36, !dbg !9577
  store i32 %conv35, i32* %arrayidx37, align 4, !dbg !9578
  br label %for.inc, !dbg !9579

for.inc:                                          ; preds = %for.body33
  %41 = load i32, i32* %k, align 4, !dbg !9580
  %inc38 = add nsw i32 %41, 1, !dbg !9580
  store i32 %inc38, i32* %k, align 4, !dbg !9580
  br label %for.cond29, !dbg !9582, !llvm.loop !9583

for.end:                                          ; preds = %for.cond29
  br label %while.cond, !dbg !9584, !llvm.loop !9586

while.end:                                        ; preds = %while.cond
  br label %for.inc39, !dbg !9587

for.inc39:                                        ; preds = %while.end
  %42 = load i32, i32* %g, align 4, !dbg !9588
  %inc40 = add nsw i32 %42, 1, !dbg !9588
  store i32 %inc40, i32* %g, align 4, !dbg !9588
  br label %for.cond, !dbg !9590, !llvm.loop !9591

for.end41:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9593
  br label %return, !dbg !9593

return:                                           ; preds = %for.end41, %if.then21, %if.then13, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !9594
  ret i32 %43, !dbg !9594
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_scalefactors(%struct.AACContext* %ac, i32* %sf, %struct.GetBitContext* %gb, i32 %global_gain, %struct.IndividualChannelStream* %ics, i32* %band_type, i32* %band_type_run_end) #1 !dbg !9595 {
entry:
  %x.addr.i96.i276 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i276, metadata !6135, metadata !2068), !dbg !9598
  %x.addr.i81.i277 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i277, metadata !6135, metadata !2068), !dbg !9623
  %x.addr.i.i278 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i278, metadata !6135, metadata !2068), !dbg !9626
  %s.addr.i279 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i279, metadata !9628, metadata !2068), !dbg !9629
  %table.addr.i280 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i280, metadata !9630, metadata !2068), !dbg !9631
  %bits.addr.i281 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i281, metadata !9632, metadata !2068), !dbg !9633
  %max_depth.addr.i282 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i282, metadata !9634, metadata !2068), !dbg !9635
  %code.i283 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i283, metadata !9636, metadata !2068), !dbg !9637
  %re_index.i284 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i284, metadata !9638, metadata !2068), !dbg !9639
  %re_cache.i285 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i285, metadata !9640, metadata !2068), !dbg !9641
  %re_size_plus8.i286 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i286, metadata !9642, metadata !2068), !dbg !9643
  %n.i287 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i287, metadata !9644, metadata !2068), !dbg !9645
  %nb_bits.i288 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i288, metadata !9646, metadata !2068), !dbg !9647
  %index1.i289 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i289, metadata !9648, metadata !2068), !dbg !9649
  %retval.i265 = alloca i32, align 4
  %a.addr.i266 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i266, metadata !5473, metadata !2068), !dbg !9650
  %amin.addr.i267 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i267, metadata !5480, metadata !2068), !dbg !9656
  %amax.addr.i268 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i268, metadata !5482, metadata !2068), !dbg !9657
  %x.addr.i96.i119 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i119, metadata !6135, metadata !2068), !dbg !9658
  %x.addr.i81.i120 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i120, metadata !6135, metadata !2068), !dbg !9662
  %x.addr.i.i121 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i121, metadata !6135, metadata !2068), !dbg !9664
  %s.addr.i122 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i122, metadata !9628, metadata !2068), !dbg !9666
  %table.addr.i123 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i123, metadata !9630, metadata !2068), !dbg !9667
  %bits.addr.i124 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i124, metadata !9632, metadata !2068), !dbg !9668
  %max_depth.addr.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i125, metadata !9634, metadata !2068), !dbg !9669
  %code.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i126, metadata !9636, metadata !2068), !dbg !9670
  %re_index.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i127, metadata !9638, metadata !2068), !dbg !9671
  %re_cache.i128 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i128, metadata !9640, metadata !2068), !dbg !9672
  %re_size_plus8.i129 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i129, metadata !9642, metadata !2068), !dbg !9673
  %n.i130 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i130, metadata !9644, metadata !2068), !dbg !9674
  %nb_bits.i131 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i131, metadata !9646, metadata !2068), !dbg !9675
  %index1.i132 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i132, metadata !9648, metadata !2068), !dbg !9676
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5473, metadata !2068), !dbg !9677
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !5480, metadata !2068), !dbg !9683
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !5482, metadata !2068), !dbg !9684
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !6135, metadata !2068), !dbg !9685
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !6135, metadata !2068), !dbg !9688
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !6135, metadata !2068), !dbg !9690
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !9628, metadata !2068), !dbg !9692
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !9630, metadata !2068), !dbg !9693
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !9632, metadata !2068), !dbg !9694
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !9634, metadata !2068), !dbg !9695
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !9636, metadata !2068), !dbg !9696
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !9638, metadata !2068), !dbg !9697
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !9640, metadata !2068), !dbg !9698
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !9642, metadata !2068), !dbg !9699
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !9644, metadata !2068), !dbg !9700
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !9646, metadata !2068), !dbg !9701
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !9648, metadata !2068), !dbg !9702
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sf.addr = alloca i32*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %global_gain.addr = alloca i32, align 4
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %band_type.addr = alloca i32*, align 8
  %band_type_run_end.addr = alloca i32*, align 8
  %g = alloca i32, align 4
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  %offset = alloca [3 x i32], align 4
  %clipped_offset = alloca i32, align 4
  %noise_flag = alloca i32, align 4
  %run_end = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !9703, metadata !2068), !dbg !9704
  store i32* %sf, i32** %sf.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %sf.addr, metadata !9705, metadata !2068), !dbg !9706
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9707, metadata !2068), !dbg !9708
  store i32 %global_gain, i32* %global_gain.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %global_gain.addr, metadata !9709, metadata !2068), !dbg !9710
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !9711, metadata !2068), !dbg !9712
  store i32* %band_type, i32** %band_type.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_type.addr, metadata !9713, metadata !2068), !dbg !9714
  store i32* %band_type_run_end, i32** %band_type_run_end.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_type_run_end.addr, metadata !9715, metadata !2068), !dbg !9716
  call void @llvm.dbg.declare(metadata i32* %g, metadata !9717, metadata !2068), !dbg !9718
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9719, metadata !2068), !dbg !9720
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !9721, metadata !2068), !dbg !9722
  store i32 0, i32* %idx, align 4, !dbg !9722
  call void @llvm.dbg.declare(metadata [3 x i32]* %offset, metadata !9723, metadata !2068), !dbg !9725
  %arrayinit.begin = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 0, !dbg !9726
  %0 = load i32, i32* %global_gain.addr, align 4, !dbg !9727
  store i32 %0, i32* %arrayinit.begin, align 4, !dbg !9726
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !9726
  %1 = load i32, i32* %global_gain.addr, align 4, !dbg !9728
  %sub = sub i32 %1, 90, !dbg !9729
  store i32 %sub, i32* %arrayinit.element, align 4, !dbg !9726
  %arrayinit.element1 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1, !dbg !9726
  store i32 0, i32* %arrayinit.element1, align 4, !dbg !9726
  call void @llvm.dbg.declare(metadata i32* %clipped_offset, metadata !9730, metadata !2068), !dbg !9731
  call void @llvm.dbg.declare(metadata i32* %noise_flag, metadata !9732, metadata !2068), !dbg !9733
  store i32 1, i32* %noise_flag, align 4, !dbg !9733
  store i32 0, i32* %g, align 4, !dbg !9734
  br label %for.cond, !dbg !9735

for.cond:                                         ; preds = %for.inc114, %entry
  %2 = load i32, i32* %g, align 4, !dbg !9736
  %3 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9738
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %3, i32 0, i32 3, !dbg !9739
  %4 = load i32, i32* %num_window_groups, align 8, !dbg !9739
  %cmp = icmp slt i32 %2, %4, !dbg !9740
  br i1 %cmp, label %for.body, label %for.end116, !dbg !9741

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9742
  br label %for.cond2, !dbg !9743

for.cond2:                                        ; preds = %if.end112, %for.body
  %5 = load i32, i32* %i, align 4, !dbg !9744
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9746
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 0, !dbg !9747
  %7 = load i8, i8* %max_sfb, align 8, !dbg !9747
  %conv = zext i8 %7 to i32, !dbg !9746
  %cmp3 = icmp slt i32 %5, %conv, !dbg !9748
  br i1 %cmp3, label %for.body5, label %for.end113, !dbg !9749

for.body5:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata i32* %run_end, metadata !9750, metadata !2068), !dbg !9751
  %8 = load i32, i32* %idx, align 4, !dbg !9752
  %idxprom = sext i32 %8 to i64, !dbg !9753
  %9 = load i32*, i32** %band_type_run_end.addr, align 8, !dbg !9753
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !9753
  %10 = load i32, i32* %arrayidx, align 4, !dbg !9753
  store i32 %10, i32* %run_end, align 4, !dbg !9751
  %11 = load i32, i32* %idx, align 4, !dbg !9754
  %idxprom6 = sext i32 %11 to i64, !dbg !9755
  %12 = load i32*, i32** %band_type.addr, align 8, !dbg !9755
  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6, !dbg !9755
  %13 = load i32, i32* %arrayidx7, align 4, !dbg !9755
  %cmp8 = icmp eq i32 %13, 0, !dbg !9756
  br i1 %cmp8, label %if.then, label %if.else, !dbg !9757

if.then:                                          ; preds = %for.body5
  br label %for.cond10, !dbg !9758

for.cond10:                                       ; preds = %for.inc, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !9760
  %15 = load i32, i32* %run_end, align 4, !dbg !9764
  %cmp11 = icmp slt i32 %14, %15, !dbg !9765
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !9766

for.body13:                                       ; preds = %for.cond10
  %16 = load i32, i32* %idx, align 4, !dbg !9767
  %idxprom14 = sext i32 %16 to i64, !dbg !9768
  %17 = load i32*, i32** %sf.addr, align 8, !dbg !9768
  %arrayidx15 = getelementptr inbounds i32, i32* %17, i64 %idxprom14, !dbg !9768
  store i32 0, i32* %arrayidx15, align 4, !dbg !9769
  br label %for.inc, !dbg !9768

for.inc:                                          ; preds = %for.body13
  %18 = load i32, i32* %i, align 4, !dbg !9770
  %inc = add nsw i32 %18, 1, !dbg !9770
  store i32 %inc, i32* %i, align 4, !dbg !9770
  %19 = load i32, i32* %idx, align 4, !dbg !9772
  %inc16 = add nsw i32 %19, 1, !dbg !9772
  store i32 %inc16, i32* %idx, align 4, !dbg !9772
  br label %for.cond10, !dbg !9773, !llvm.loop !9774

for.end:                                          ; preds = %for.cond10
  br label %if.end112, !dbg !9775

if.else:                                          ; preds = %for.body5
  %20 = load i32, i32* %idx, align 4, !dbg !9776
  %idxprom17 = sext i32 %20 to i64, !dbg !9778
  %21 = load i32*, i32** %band_type.addr, align 8, !dbg !9778
  %arrayidx18 = getelementptr inbounds i32, i32* %21, i64 %idxprom17, !dbg !9778
  %22 = load i32, i32* %arrayidx18, align 4, !dbg !9778
  %cmp19 = icmp eq i32 %22, 15, !dbg !9779
  br i1 %cmp19, label %if.then25, label %lor.lhs.false, !dbg !9780

lor.lhs.false:                                    ; preds = %if.else
  %23 = load i32, i32* %idx, align 4, !dbg !9781
  %idxprom21 = sext i32 %23 to i64, !dbg !9782
  %24 = load i32*, i32** %band_type.addr, align 8, !dbg !9782
  %arrayidx22 = getelementptr inbounds i32, i32* %24, i64 %idxprom21, !dbg !9782
  %25 = load i32, i32* %arrayidx22, align 4, !dbg !9782
  %cmp23 = icmp eq i32 %25, 14, !dbg !9783
  br i1 %cmp23, label %if.then25, label %if.else46, !dbg !9784

if.then25:                                        ; preds = %lor.lhs.false, %if.else
  br label %for.cond26, !dbg !9786

for.cond26:                                       ; preds = %for.inc42, %if.then25
  %26 = load i32, i32* %i, align 4, !dbg !9787
  %27 = load i32, i32* %run_end, align 4, !dbg !9789
  %cmp27 = icmp slt i32 %26, %27, !dbg !9790
  br i1 %cmp27, label %for.body29, label %for.end45, !dbg !9791

for.body29:                                       ; preds = %for.cond26
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9792
  %29 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 1), align 8, !dbg !9793
  store %struct.GetBitContext* %28, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9794
  store [2 x i16]* %29, [2 x i16]** %table.addr.i, align 8, !dbg !9794
  store i32 7, i32* %bits.addr.i, align 4, !dbg !9794
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !9794
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9795
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %30, i32 0, i32 2, !dbg !9796
  %31 = load i32, i32* %index.i, align 8, !dbg !9796
  store i32 %31, i32* %re_index.i, align 4, !dbg !9697
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9797
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %32, i32 0, i32 4, !dbg !9798
  %33 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !9798
  store i32 %33, i32* %re_size_plus8.i, align 4, !dbg !9699
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9799
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %34, i32 0, i32 0, !dbg !9800
  %35 = load i8*, i8** %buffer.i, align 8, !dbg !9800
  %36 = load i32, i32* %re_index.i, align 4, !dbg !9801
  %shr.i = lshr i32 %36, 3, !dbg !9802
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !9803
  %add.ptr.i = getelementptr inbounds i8, i8* %35, i64 %idx.ext.i, !dbg !9803
  %37 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !9804
  %l.i = bitcast %union.unaligned_32* %37 to i32*, !dbg !9804
  %38 = load i32, i32* %l.i, align 1, !dbg !9804
  store i32 %38, i32* %x.addr.i.i, align 4, !dbg !9805
  %39 = load i32, i32* %x.addr.i.i, align 4, !dbg !9806
  %shl.i.i = shl i32 %39, 8, !dbg !9807
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !9808
  %40 = load i32, i32* %x.addr.i.i, align 4, !dbg !9809
  %shr.i.i = lshr i32 %40, 8, !dbg !9810
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !9811
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !9812
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !9813
  %41 = load i32, i32* %x.addr.i.i, align 4, !dbg !9814
  %shr3.i.i = lshr i32 %41, 16, !dbg !9815
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !9816
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !9817
  %42 = load i32, i32* %x.addr.i.i, align 4, !dbg !9818
  %shr6.i.i = lshr i32 %42, 16, !dbg !9819
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !9820
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !9821
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !9822
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !9823
  %43 = load i32, i32* %re_index.i, align 4, !dbg !9824
  %and.i = and i32 %43, 7, !dbg !9825
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !9826
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !9827
  %44 = load i32, i32* %re_cache.i, align 4, !dbg !9828
  %45 = load i32, i32* %bits.addr.i, align 4, !dbg !9830
  %conv.i = trunc i32 %45 to i8, !dbg !9830
  %call2.i = call i32 @NEG_USR32(i32 %44, i8 signext %conv.i) #12, !dbg !9831
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !9832
  %46 = load i32, i32* %index1.i, align 4, !dbg !9833
  %idxprom.i = zext i32 %46 to i64, !dbg !9834
  %47 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9834
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %47, i64 %idxprom.i, !dbg !9834
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !9834
  %48 = load i16, i16* %arrayidx3.i, align 2, !dbg !9834
  %conv4.i = sext i16 %48 to i32, !dbg !9834
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !9835
  %49 = load i32, i32* %index1.i, align 4, !dbg !9836
  %idxprom5.i = zext i32 %49 to i64, !dbg !9837
  %50 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9837
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %50, i64 %idxprom5.i, !dbg !9837
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !9837
  %51 = load i16, i16* %arrayidx7.i, align 2, !dbg !9837
  %conv8.i = sext i16 %51 to i32, !dbg !9837
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !9838
  %52 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9839
  %cmp.i = icmp sgt i32 %52, 1, !dbg !9840
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !9841

land.lhs.true.i:                                  ; preds = %for.body29
  %53 = load i32, i32* %n.i, align 4, !dbg !9842
  %cmp10.i = icmp slt i32 %53, 0, !dbg !9844
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !9845

if.then.i:                                        ; preds = %land.lhs.true.i
  %54 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9846
  %55 = load i32, i32* %re_index.i, align 4, !dbg !9848
  %56 = load i32, i32* %bits.addr.i, align 4, !dbg !9849
  %add.i = add i32 %55, %56, !dbg !9850
  %cmp12.i = icmp ugt i32 %54, %add.i, !dbg !9851
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !9852

cond.true.i:                                      ; preds = %if.then.i
  %57 = load i32, i32* %re_index.i, align 4, !dbg !9853
  %58 = load i32, i32* %bits.addr.i, align 4, !dbg !9855
  %add14.i = add i32 %57, %58, !dbg !9856
  br label %cond.end.i, !dbg !9857

cond.false.i:                                     ; preds = %if.then.i
  %59 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9858
  br label %cond.end.i, !dbg !9860

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %59, %cond.false.i ], !dbg !9861
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !9862
  %60 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9863
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %60, i32 0, i32 0, !dbg !9864
  %61 = load i8*, i8** %buffer15.i, align 8, !dbg !9864
  %62 = load i32, i32* %re_index.i, align 4, !dbg !9865
  %shr16.i = lshr i32 %62, 3, !dbg !9866
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !9867
  %add.ptr18.i = getelementptr inbounds i8, i8* %61, i64 %idx.ext17.i, !dbg !9867
  %63 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !9868
  %l19.i = bitcast %union.unaligned_32* %63 to i32*, !dbg !9868
  %64 = load i32, i32* %l19.i, align 1, !dbg !9868
  store i32 %64, i32* %x.addr.i81.i, align 4, !dbg !9869
  %65 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9870
  %shl.i82.i = shl i32 %65, 8, !dbg !9871
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !9872
  %66 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9873
  %shr.i84.i = lshr i32 %66, 8, !dbg !9874
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !9875
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !9876
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !9877
  %67 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9878
  %shr3.i88.i = lshr i32 %67, 16, !dbg !9879
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !9880
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !9881
  %68 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9882
  %shr6.i91.i = lshr i32 %68, 16, !dbg !9883
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !9884
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !9885
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !9886
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !9887
  %69 = load i32, i32* %re_index.i, align 4, !dbg !9888
  %and21.i = and i32 %69, 7, !dbg !9889
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !9890
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !9891
  %70 = load i32, i32* %n.i, align 4, !dbg !9892
  %sub.i = sub nsw i32 0, %70, !dbg !9893
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !9894
  %71 = load i32, i32* %re_cache.i, align 4, !dbg !9895
  %72 = load i32, i32* %nb_bits.i, align 4, !dbg !9896
  %conv23.i = trunc i32 %72 to i8, !dbg !9896
  %call24.i = call i32 @NEG_USR32(i32 %71, i8 signext %conv23.i) #12, !dbg !9897
  %73 = load i32, i32* %code.i, align 4, !dbg !9899
  %add25.i = add i32 %call24.i, %73, !dbg !9900
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !9901
  %74 = load i32, i32* %index1.i, align 4, !dbg !9902
  %idxprom26.i = zext i32 %74 to i64, !dbg !9903
  %75 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9903
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %75, i64 %idxprom26.i, !dbg !9903
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !9903
  %76 = load i16, i16* %arrayidx28.i, align 2, !dbg !9903
  %conv29.i = sext i16 %76 to i32, !dbg !9903
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !9904
  %77 = load i32, i32* %index1.i, align 4, !dbg !9905
  %idxprom30.i = zext i32 %77 to i64, !dbg !9906
  %78 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9906
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %78, i64 %idxprom30.i, !dbg !9906
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !9906
  %79 = load i16, i16* %arrayidx32.i, align 2, !dbg !9906
  %conv33.i = sext i16 %79 to i32, !dbg !9906
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !9907
  %80 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9908
  %cmp34.i = icmp sgt i32 %80, 2, !dbg !9909
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !9910

land.lhs.true36.i:                                ; preds = %cond.end.i
  %81 = load i32, i32* %n.i, align 4, !dbg !9911
  %cmp37.i = icmp slt i32 %81, 0, !dbg !9913
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !9914

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %82 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9915
  %83 = load i32, i32* %re_index.i, align 4, !dbg !9917
  %84 = load i32, i32* %nb_bits.i, align 4, !dbg !9918
  %add40.i = add i32 %83, %84, !dbg !9919
  %cmp41.i = icmp ugt i32 %82, %add40.i, !dbg !9920
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !9921

cond.true43.i:                                    ; preds = %if.then39.i
  %85 = load i32, i32* %re_index.i, align 4, !dbg !9922
  %86 = load i32, i32* %nb_bits.i, align 4, !dbg !9924
  %add44.i = add i32 %85, %86, !dbg !9925
  br label %cond.end46.i, !dbg !9926

cond.false45.i:                                   ; preds = %if.then39.i
  %87 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9927
  br label %cond.end46.i, !dbg !9929

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %87, %cond.false45.i ], !dbg !9930
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !9931
  %88 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9932
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %88, i32 0, i32 0, !dbg !9933
  %89 = load i8*, i8** %buffer48.i, align 8, !dbg !9933
  %90 = load i32, i32* %re_index.i, align 4, !dbg !9934
  %shr49.i = lshr i32 %90, 3, !dbg !9935
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !9936
  %add.ptr51.i = getelementptr inbounds i8, i8* %89, i64 %idx.ext50.i, !dbg !9936
  %91 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !9937
  %l52.i = bitcast %union.unaligned_32* %91 to i32*, !dbg !9937
  %92 = load i32, i32* %l52.i, align 1, !dbg !9937
  store i32 %92, i32* %x.addr.i96.i, align 4, !dbg !9938
  %93 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9939
  %shl.i97.i = shl i32 %93, 8, !dbg !9940
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !9941
  %94 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9942
  %shr.i99.i = lshr i32 %94, 8, !dbg !9943
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !9944
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !9945
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !9946
  %95 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9947
  %shr3.i103.i = lshr i32 %95, 16, !dbg !9948
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !9949
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !9950
  %96 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9951
  %shr6.i106.i = lshr i32 %96, 16, !dbg !9952
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !9953
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !9954
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !9955
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !9956
  %97 = load i32, i32* %re_index.i, align 4, !dbg !9957
  %and54.i = and i32 %97, 7, !dbg !9958
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !9959
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !9960
  %98 = load i32, i32* %n.i, align 4, !dbg !9961
  %sub56.i = sub nsw i32 0, %98, !dbg !9962
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !9963
  %99 = load i32, i32* %re_cache.i, align 4, !dbg !9964
  %100 = load i32, i32* %nb_bits.i, align 4, !dbg !9965
  %conv57.i = trunc i32 %100 to i8, !dbg !9965
  %call58.i = call i32 @NEG_USR32(i32 %99, i8 signext %conv57.i) #12, !dbg !9966
  %101 = load i32, i32* %code.i, align 4, !dbg !9968
  %add59.i = add i32 %call58.i, %101, !dbg !9969
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !9970
  %102 = load i32, i32* %index1.i, align 4, !dbg !9971
  %idxprom60.i = zext i32 %102 to i64, !dbg !9972
  %103 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9972
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %103, i64 %idxprom60.i, !dbg !9972
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !9972
  %104 = load i16, i16* %arrayidx62.i, align 2, !dbg !9972
  %conv63.i = sext i16 %104 to i32, !dbg !9972
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !9973
  %105 = load i32, i32* %index1.i, align 4, !dbg !9974
  %idxprom64.i = zext i32 %105 to i64, !dbg !9975
  %106 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9975
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %106, i64 %idxprom64.i, !dbg !9975
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !9975
  %107 = load i16, i16* %arrayidx66.i, align 2, !dbg !9975
  %conv67.i = sext i16 %107 to i32, !dbg !9975
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !9976
  br label %if.end.i, !dbg !9977

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !9978

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body29
  %108 = load i32, i32* %n.i, align 4, !dbg !9980
  %109 = load i32, i32* %re_cache.i, align 4, !dbg !9983
  %shl70.i = shl i32 %109, %108, !dbg !9983
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !9983
  %110 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9984
  %111 = load i32, i32* %re_index.i, align 4, !dbg !9985
  %112 = load i32, i32* %n.i, align 4, !dbg !9986
  %add71.i = add i32 %111, %112, !dbg !9987
  %cmp72.i = icmp ugt i32 %110, %add71.i, !dbg !9988
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !9989

cond.true74.i:                                    ; preds = %if.end68.i
  %113 = load i32, i32* %re_index.i, align 4, !dbg !9990
  %114 = load i32, i32* %n.i, align 4, !dbg !9992
  %add75.i = add i32 %113, %114, !dbg !9993
  br label %get_vlc2.exit, !dbg !9994

cond.false76.i:                                   ; preds = %if.end68.i
  %115 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9995
  br label %get_vlc2.exit, !dbg !9997

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %115, %cond.false76.i ], !dbg !9998
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !10000
  %116 = load i32, i32* %re_index.i, align 4, !dbg !10001
  %117 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10002
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %117, i32 0, i32 2, !dbg !10003
  store i32 %116, i32* %index80.i, align 8, !dbg !10004
  %118 = load i32, i32* %code.i, align 4, !dbg !10005
  %sub30 = sub nsw i32 %118, 60, !dbg !10006
  %arrayidx31 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 2, !dbg !10007
  %119 = load i32, i32* %arrayidx31, align 4, !dbg !10008
  %add = add nsw i32 %119, %sub30, !dbg !10008
  store i32 %add, i32* %arrayidx31, align 4, !dbg !10008
  %arrayidx32 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 2, !dbg !10009
  %120 = load i32, i32* %arrayidx32, align 4, !dbg !10009
  store i32 %120, i32* %a.addr.i, align 4, !dbg !10010
  store i32 -155, i32* %amin.addr.i, align 4, !dbg !10010
  store i32 100, i32* %amax.addr.i, align 4, !dbg !10010
  %121 = load i32, i32* %a.addr.i, align 4, !dbg !10011
  %122 = load i32, i32* %amin.addr.i, align 4, !dbg !10012
  %cmp.i117 = icmp slt i32 %121, %122, !dbg !10013
  br i1 %cmp.i117, label %if.then.i118, label %if.else.i, !dbg !10014

if.then.i118:                                     ; preds = %get_vlc2.exit
  %123 = load i32, i32* %amin.addr.i, align 4, !dbg !10015
  store i32 %123, i32* %retval.i, align 4, !dbg !10016
  br label %av_clip_c.exit, !dbg !10016

if.else.i:                                        ; preds = %get_vlc2.exit
  %124 = load i32, i32* %a.addr.i, align 4, !dbg !10017
  %125 = load i32, i32* %amax.addr.i, align 4, !dbg !10018
  %cmp1.i = icmp sgt i32 %124, %125, !dbg !10019
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !10020

if.then2.i:                                       ; preds = %if.else.i
  %126 = load i32, i32* %amax.addr.i, align 4, !dbg !10021
  store i32 %126, i32* %retval.i, align 4, !dbg !10022
  br label %av_clip_c.exit, !dbg !10022

if.else3.i:                                       ; preds = %if.else.i
  %127 = load i32, i32* %a.addr.i, align 4, !dbg !10023
  store i32 %127, i32* %retval.i, align 4, !dbg !10024
  br label %av_clip_c.exit, !dbg !10024

av_clip_c.exit:                                   ; preds = %if.then.i118, %if.then2.i, %if.else3.i
  %128 = load i32, i32* %retval.i, align 4, !dbg !10025
  store i32 %128, i32* %clipped_offset, align 4, !dbg !10026
  %arrayidx34 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 2, !dbg !10027
  %129 = load i32, i32* %arrayidx34, align 4, !dbg !10027
  %130 = load i32, i32* %clipped_offset, align 4, !dbg !10029
  %cmp35 = icmp ne i32 %129, %130, !dbg !10030
  br i1 %cmp35, label %if.then37, label %if.end, !dbg !10031

if.then37:                                        ; preds = %av_clip_c.exit
  %131 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10032
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %131, i32 0, i32 1, !dbg !10034
  %132 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !10034
  %133 = bitcast %struct.AVCodecContext* %132 to i8*, !dbg !10032
  %arrayidx38 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 2, !dbg !10035
  %134 = load i32, i32* %arrayidx38, align 4, !dbg !10035
  %135 = load i32, i32* %clipped_offset, align 4, !dbg !10036
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %133, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.56, i32 0, i32 0), i32 %134, i32 %135), !dbg !10037
  br label %if.end, !dbg !10038

if.end:                                           ; preds = %if.then37, %av_clip_c.exit
  %136 = load i32, i32* %clipped_offset, align 4, !dbg !10039
  %sub39 = sub nsw i32 100, %136, !dbg !10040
  %137 = load i32, i32* %idx, align 4, !dbg !10041
  %idxprom40 = sext i32 %137 to i64, !dbg !10042
  %138 = load i32*, i32** %sf.addr, align 8, !dbg !10042
  %arrayidx41 = getelementptr inbounds i32, i32* %138, i64 %idxprom40, !dbg !10042
  store i32 %sub39, i32* %arrayidx41, align 4, !dbg !10043
  br label %for.inc42, !dbg !10044

for.inc42:                                        ; preds = %if.end
  %139 = load i32, i32* %i, align 4, !dbg !10045
  %inc43 = add nsw i32 %139, 1, !dbg !10045
  store i32 %inc43, i32* %i, align 4, !dbg !10045
  %140 = load i32, i32* %idx, align 4, !dbg !10047
  %inc44 = add nsw i32 %140, 1, !dbg !10047
  store i32 %inc44, i32* %idx, align 4, !dbg !10047
  br label %for.cond26, !dbg !10048, !llvm.loop !10049

for.end45:                                        ; preds = %for.cond26
  br label %if.end111, !dbg !10050

if.else46:                                        ; preds = %lor.lhs.false
  %141 = load i32, i32* %idx, align 4, !dbg !10051
  %idxprom47 = sext i32 %141 to i64, !dbg !10053
  %142 = load i32*, i32** %band_type.addr, align 8, !dbg !10053
  %arrayidx48 = getelementptr inbounds i32, i32* %142, i64 %idxprom47, !dbg !10053
  %143 = load i32, i32* %arrayidx48, align 4, !dbg !10053
  %cmp49 = icmp eq i32 %143, 13, !dbg !10054
  br i1 %cmp49, label %if.then51, label %if.else86, !dbg !10053

if.then51:                                        ; preds = %if.else46
  br label %for.cond52, !dbg !10055

for.cond52:                                       ; preds = %for.inc82, %if.then51
  %144 = load i32, i32* %i, align 4, !dbg !10056
  %145 = load i32, i32* %run_end, align 4, !dbg !10058
  %cmp53 = icmp slt i32 %144, %145, !dbg !10059
  br i1 %cmp53, label %for.body55, label %for.end85, !dbg !10060

for.body55:                                       ; preds = %for.cond52
  %146 = load i32, i32* %noise_flag, align 4, !dbg !10061
  %dec = add nsw i32 %146, -1, !dbg !10061
  store i32 %dec, i32* %noise_flag, align 4, !dbg !10061
  %cmp56 = icmp sgt i32 %146, 0, !dbg !10062
  br i1 %cmp56, label %if.then58, label %if.else63, !dbg !10063

if.then58:                                        ; preds = %for.body55
  %147 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10064
  %call59 = call i32 @get_bits(%struct.GetBitContext* %147, i32 9), !dbg !10065
  %sub60 = sub i32 %call59, 256, !dbg !10066
  %arrayidx61 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 1, !dbg !10067
  %148 = load i32, i32* %arrayidx61, align 4, !dbg !10068
  %add62 = add i32 %148, %sub60, !dbg !10068
  store i32 %add62, i32* %arrayidx61, align 4, !dbg !10068
  br label %if.end68, !dbg !10067

if.else63:                                        ; preds = %for.body55
  %149 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10069
  %150 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 1), align 8, !dbg !10070
  store %struct.GetBitContext* %149, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !10071
  store [2 x i16]* %150, [2 x i16]** %table.addr.i123, align 8, !dbg !10071
  store i32 7, i32* %bits.addr.i124, align 4, !dbg !10071
  store i32 3, i32* %max_depth.addr.i125, align 4, !dbg !10071
  %151 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !10072
  %index.i133 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %151, i32 0, i32 2, !dbg !10073
  %152 = load i32, i32* %index.i133, align 8, !dbg !10073
  store i32 %152, i32* %re_index.i127, align 4, !dbg !9671
  %153 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !10074
  %size_in_bits_plus8.i134 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %153, i32 0, i32 4, !dbg !10075
  %154 = load i32, i32* %size_in_bits_plus8.i134, align 8, !dbg !10075
  store i32 %154, i32* %re_size_plus8.i129, align 4, !dbg !9673
  %155 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !10076
  %buffer.i135 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %155, i32 0, i32 0, !dbg !10077
  %156 = load i8*, i8** %buffer.i135, align 8, !dbg !10077
  %157 = load i32, i32* %re_index.i127, align 4, !dbg !10078
  %shr.i136 = lshr i32 %157, 3, !dbg !10079
  %idx.ext.i137 = zext i32 %shr.i136 to i64, !dbg !10080
  %add.ptr.i138 = getelementptr inbounds i8, i8* %156, i64 %idx.ext.i137, !dbg !10080
  %158 = bitcast i8* %add.ptr.i138 to %union.unaligned_32*, !dbg !10081
  %l.i139 = bitcast %union.unaligned_32* %158 to i32*, !dbg !10081
  %159 = load i32, i32* %l.i139, align 1, !dbg !10081
  store i32 %159, i32* %x.addr.i.i121, align 4, !dbg !10082
  %160 = load i32, i32* %x.addr.i.i121, align 4, !dbg !10083
  %shl.i.i140 = shl i32 %160, 8, !dbg !10084
  %and.i.i141 = and i32 %shl.i.i140, 65280, !dbg !10085
  %161 = load i32, i32* %x.addr.i.i121, align 4, !dbg !10086
  %shr.i.i142 = lshr i32 %161, 8, !dbg !10087
  %and1.i.i143 = and i32 %shr.i.i142, 255, !dbg !10088
  %or.i.i144 = or i32 %and.i.i141, %and1.i.i143, !dbg !10089
  %shl2.i.i145 = shl i32 %or.i.i144, 16, !dbg !10090
  %162 = load i32, i32* %x.addr.i.i121, align 4, !dbg !10091
  %shr3.i.i146 = lshr i32 %162, 16, !dbg !10092
  %shl4.i.i147 = shl i32 %shr3.i.i146, 8, !dbg !10093
  %and5.i.i148 = and i32 %shl4.i.i147, 65280, !dbg !10094
  %163 = load i32, i32* %x.addr.i.i121, align 4, !dbg !10095
  %shr6.i.i149 = lshr i32 %163, 16, !dbg !10096
  %shr7.i.i150 = lshr i32 %shr6.i.i149, 8, !dbg !10097
  %and8.i.i151 = and i32 %shr7.i.i150, 255, !dbg !10098
  %or9.i.i152 = or i32 %and5.i.i148, %and8.i.i151, !dbg !10099
  %or10.i.i153 = or i32 %shl2.i.i145, %or9.i.i152, !dbg !10100
  %164 = load i32, i32* %re_index.i127, align 4, !dbg !10101
  %and.i154 = and i32 %164, 7, !dbg !10102
  %shl.i155 = shl i32 %or10.i.i153, %and.i154, !dbg !10103
  store i32 %shl.i155, i32* %re_cache.i128, align 4, !dbg !10104
  %165 = load i32, i32* %re_cache.i128, align 4, !dbg !10105
  %166 = load i32, i32* %bits.addr.i124, align 4, !dbg !10106
  %conv.i156 = trunc i32 %166 to i8, !dbg !10106
  %call2.i157 = call i32 @NEG_USR32(i32 %165, i8 signext %conv.i156) #12, !dbg !10107
  store i32 %call2.i157, i32* %index1.i132, align 4, !dbg !10108
  %167 = load i32, i32* %index1.i132, align 4, !dbg !10109
  %idxprom.i158 = zext i32 %167 to i64, !dbg !10110
  %168 = load [2 x i16]*, [2 x i16]** %table.addr.i123, align 8, !dbg !10110
  %arrayidx.i159 = getelementptr inbounds [2 x i16], [2 x i16]* %168, i64 %idxprom.i158, !dbg !10110
  %arrayidx3.i160 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i159, i64 0, i64 0, !dbg !10110
  %169 = load i16, i16* %arrayidx3.i160, align 2, !dbg !10110
  %conv4.i161 = sext i16 %169 to i32, !dbg !10110
  store i32 %conv4.i161, i32* %code.i126, align 4, !dbg !10111
  %170 = load i32, i32* %index1.i132, align 4, !dbg !10112
  %idxprom5.i162 = zext i32 %170 to i64, !dbg !10113
  %171 = load [2 x i16]*, [2 x i16]** %table.addr.i123, align 8, !dbg !10113
  %arrayidx6.i163 = getelementptr inbounds [2 x i16], [2 x i16]* %171, i64 %idxprom5.i162, !dbg !10113
  %arrayidx7.i164 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i163, i64 0, i64 1, !dbg !10113
  %172 = load i16, i16* %arrayidx7.i164, align 2, !dbg !10113
  %conv8.i165 = sext i16 %172 to i32, !dbg !10113
  store i32 %conv8.i165, i32* %n.i130, align 4, !dbg !10114
  %173 = load i32, i32* %max_depth.addr.i125, align 4, !dbg !10115
  %cmp.i166 = icmp sgt i32 %173, 1, !dbg !10116
  br i1 %cmp.i166, label %land.lhs.true.i168, label %if.end68.i255, !dbg !10117

land.lhs.true.i168:                               ; preds = %if.else63
  %174 = load i32, i32* %n.i130, align 4, !dbg !10118
  %cmp10.i167 = icmp slt i32 %174, 0, !dbg !10119
  br i1 %cmp10.i167, label %if.then.i171, label %if.end68.i255, !dbg !10120

if.then.i171:                                     ; preds = %land.lhs.true.i168
  %175 = load i32, i32* %re_size_plus8.i129, align 4, !dbg !10121
  %176 = load i32, i32* %re_index.i127, align 4, !dbg !10122
  %177 = load i32, i32* %bits.addr.i124, align 4, !dbg !10123
  %add.i169 = add i32 %176, %177, !dbg !10124
  %cmp12.i170 = icmp ugt i32 %175, %add.i169, !dbg !10125
  br i1 %cmp12.i170, label %cond.true.i173, label %cond.false.i174, !dbg !10126

cond.true.i173:                                   ; preds = %if.then.i171
  %178 = load i32, i32* %re_index.i127, align 4, !dbg !10127
  %179 = load i32, i32* %bits.addr.i124, align 4, !dbg !10128
  %add14.i172 = add i32 %178, %179, !dbg !10129
  br label %cond.end.i210, !dbg !10130

cond.false.i174:                                  ; preds = %if.then.i171
  %180 = load i32, i32* %re_size_plus8.i129, align 4, !dbg !10131
  br label %cond.end.i210, !dbg !10132

cond.end.i210:                                    ; preds = %cond.false.i174, %cond.true.i173
  %cond.i175 = phi i32 [ %add14.i172, %cond.true.i173 ], [ %180, %cond.false.i174 ], !dbg !10133
  store i32 %cond.i175, i32* %re_index.i127, align 4, !dbg !10134
  %181 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !10135
  %buffer15.i176 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %181, i32 0, i32 0, !dbg !10136
  %182 = load i8*, i8** %buffer15.i176, align 8, !dbg !10136
  %183 = load i32, i32* %re_index.i127, align 4, !dbg !10137
  %shr16.i177 = lshr i32 %183, 3, !dbg !10138
  %idx.ext17.i178 = zext i32 %shr16.i177 to i64, !dbg !10139
  %add.ptr18.i179 = getelementptr inbounds i8, i8* %182, i64 %idx.ext17.i178, !dbg !10139
  %184 = bitcast i8* %add.ptr18.i179 to %union.unaligned_32*, !dbg !10140
  %l19.i180 = bitcast %union.unaligned_32* %184 to i32*, !dbg !10140
  %185 = load i32, i32* %l19.i180, align 1, !dbg !10140
  store i32 %185, i32* %x.addr.i81.i120, align 4, !dbg !10141
  %186 = load i32, i32* %x.addr.i81.i120, align 4, !dbg !10142
  %shl.i82.i181 = shl i32 %186, 8, !dbg !10143
  %and.i83.i182 = and i32 %shl.i82.i181, 65280, !dbg !10144
  %187 = load i32, i32* %x.addr.i81.i120, align 4, !dbg !10145
  %shr.i84.i183 = lshr i32 %187, 8, !dbg !10146
  %and1.i85.i184 = and i32 %shr.i84.i183, 255, !dbg !10147
  %or.i86.i185 = or i32 %and.i83.i182, %and1.i85.i184, !dbg !10148
  %shl2.i87.i186 = shl i32 %or.i86.i185, 16, !dbg !10149
  %188 = load i32, i32* %x.addr.i81.i120, align 4, !dbg !10150
  %shr3.i88.i187 = lshr i32 %188, 16, !dbg !10151
  %shl4.i89.i188 = shl i32 %shr3.i88.i187, 8, !dbg !10152
  %and5.i90.i189 = and i32 %shl4.i89.i188, 65280, !dbg !10153
  %189 = load i32, i32* %x.addr.i81.i120, align 4, !dbg !10154
  %shr6.i91.i190 = lshr i32 %189, 16, !dbg !10155
  %shr7.i92.i191 = lshr i32 %shr6.i91.i190, 8, !dbg !10156
  %and8.i93.i192 = and i32 %shr7.i92.i191, 255, !dbg !10157
  %or9.i94.i193 = or i32 %and5.i90.i189, %and8.i93.i192, !dbg !10158
  %or10.i95.i194 = or i32 %shl2.i87.i186, %or9.i94.i193, !dbg !10159
  %190 = load i32, i32* %re_index.i127, align 4, !dbg !10160
  %and21.i195 = and i32 %190, 7, !dbg !10161
  %shl22.i196 = shl i32 %or10.i95.i194, %and21.i195, !dbg !10162
  store i32 %shl22.i196, i32* %re_cache.i128, align 4, !dbg !10163
  %191 = load i32, i32* %n.i130, align 4, !dbg !10164
  %sub.i197 = sub nsw i32 0, %191, !dbg !10165
  store i32 %sub.i197, i32* %nb_bits.i131, align 4, !dbg !10166
  %192 = load i32, i32* %re_cache.i128, align 4, !dbg !10167
  %193 = load i32, i32* %nb_bits.i131, align 4, !dbg !10168
  %conv23.i198 = trunc i32 %193 to i8, !dbg !10168
  %call24.i199 = call i32 @NEG_USR32(i32 %192, i8 signext %conv23.i198) #12, !dbg !10169
  %194 = load i32, i32* %code.i126, align 4, !dbg !10170
  %add25.i200 = add i32 %call24.i199, %194, !dbg !10171
  store i32 %add25.i200, i32* %index1.i132, align 4, !dbg !10172
  %195 = load i32, i32* %index1.i132, align 4, !dbg !10173
  %idxprom26.i201 = zext i32 %195 to i64, !dbg !10174
  %196 = load [2 x i16]*, [2 x i16]** %table.addr.i123, align 8, !dbg !10174
  %arrayidx27.i202 = getelementptr inbounds [2 x i16], [2 x i16]* %196, i64 %idxprom26.i201, !dbg !10174
  %arrayidx28.i203 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i202, i64 0, i64 0, !dbg !10174
  %197 = load i16, i16* %arrayidx28.i203, align 2, !dbg !10174
  %conv29.i204 = sext i16 %197 to i32, !dbg !10174
  store i32 %conv29.i204, i32* %code.i126, align 4, !dbg !10175
  %198 = load i32, i32* %index1.i132, align 4, !dbg !10176
  %idxprom30.i205 = zext i32 %198 to i64, !dbg !10177
  %199 = load [2 x i16]*, [2 x i16]** %table.addr.i123, align 8, !dbg !10177
  %arrayidx31.i206 = getelementptr inbounds [2 x i16], [2 x i16]* %199, i64 %idxprom30.i205, !dbg !10177
  %arrayidx32.i207 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i206, i64 0, i64 1, !dbg !10177
  %200 = load i16, i16* %arrayidx32.i207, align 2, !dbg !10177
  %conv33.i208 = sext i16 %200 to i32, !dbg !10177
  store i32 %conv33.i208, i32* %n.i130, align 4, !dbg !10178
  %201 = load i32, i32* %max_depth.addr.i125, align 4, !dbg !10179
  %cmp34.i209 = icmp sgt i32 %201, 2, !dbg !10180
  br i1 %cmp34.i209, label %land.lhs.true36.i212, label %if.end.i254, !dbg !10181

land.lhs.true36.i212:                             ; preds = %cond.end.i210
  %202 = load i32, i32* %n.i130, align 4, !dbg !10182
  %cmp37.i211 = icmp slt i32 %202, 0, !dbg !10183
  br i1 %cmp37.i211, label %if.then39.i215, label %if.end.i254, !dbg !10184

if.then39.i215:                                   ; preds = %land.lhs.true36.i212
  %203 = load i32, i32* %re_size_plus8.i129, align 4, !dbg !10185
  %204 = load i32, i32* %re_index.i127, align 4, !dbg !10186
  %205 = load i32, i32* %nb_bits.i131, align 4, !dbg !10187
  %add40.i213 = add i32 %204, %205, !dbg !10188
  %cmp41.i214 = icmp ugt i32 %203, %add40.i213, !dbg !10189
  br i1 %cmp41.i214, label %cond.true43.i217, label %cond.false45.i218, !dbg !10190

cond.true43.i217:                                 ; preds = %if.then39.i215
  %206 = load i32, i32* %re_index.i127, align 4, !dbg !10191
  %207 = load i32, i32* %nb_bits.i131, align 4, !dbg !10192
  %add44.i216 = add i32 %206, %207, !dbg !10193
  br label %cond.end46.i253, !dbg !10194

cond.false45.i218:                                ; preds = %if.then39.i215
  %208 = load i32, i32* %re_size_plus8.i129, align 4, !dbg !10195
  br label %cond.end46.i253, !dbg !10196

cond.end46.i253:                                  ; preds = %cond.false45.i218, %cond.true43.i217
  %cond47.i219 = phi i32 [ %add44.i216, %cond.true43.i217 ], [ %208, %cond.false45.i218 ], !dbg !10197
  store i32 %cond47.i219, i32* %re_index.i127, align 4, !dbg !10198
  %209 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !10199
  %buffer48.i220 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %209, i32 0, i32 0, !dbg !10200
  %210 = load i8*, i8** %buffer48.i220, align 8, !dbg !10200
  %211 = load i32, i32* %re_index.i127, align 4, !dbg !10201
  %shr49.i221 = lshr i32 %211, 3, !dbg !10202
  %idx.ext50.i222 = zext i32 %shr49.i221 to i64, !dbg !10203
  %add.ptr51.i223 = getelementptr inbounds i8, i8* %210, i64 %idx.ext50.i222, !dbg !10203
  %212 = bitcast i8* %add.ptr51.i223 to %union.unaligned_32*, !dbg !10204
  %l52.i224 = bitcast %union.unaligned_32* %212 to i32*, !dbg !10204
  %213 = load i32, i32* %l52.i224, align 1, !dbg !10204
  store i32 %213, i32* %x.addr.i96.i119, align 4, !dbg !10205
  %214 = load i32, i32* %x.addr.i96.i119, align 4, !dbg !10206
  %shl.i97.i225 = shl i32 %214, 8, !dbg !10207
  %and.i98.i226 = and i32 %shl.i97.i225, 65280, !dbg !10208
  %215 = load i32, i32* %x.addr.i96.i119, align 4, !dbg !10209
  %shr.i99.i227 = lshr i32 %215, 8, !dbg !10210
  %and1.i100.i228 = and i32 %shr.i99.i227, 255, !dbg !10211
  %or.i101.i229 = or i32 %and.i98.i226, %and1.i100.i228, !dbg !10212
  %shl2.i102.i230 = shl i32 %or.i101.i229, 16, !dbg !10213
  %216 = load i32, i32* %x.addr.i96.i119, align 4, !dbg !10214
  %shr3.i103.i231 = lshr i32 %216, 16, !dbg !10215
  %shl4.i104.i232 = shl i32 %shr3.i103.i231, 8, !dbg !10216
  %and5.i105.i233 = and i32 %shl4.i104.i232, 65280, !dbg !10217
  %217 = load i32, i32* %x.addr.i96.i119, align 4, !dbg !10218
  %shr6.i106.i234 = lshr i32 %217, 16, !dbg !10219
  %shr7.i107.i235 = lshr i32 %shr6.i106.i234, 8, !dbg !10220
  %and8.i108.i236 = and i32 %shr7.i107.i235, 255, !dbg !10221
  %or9.i109.i237 = or i32 %and5.i105.i233, %and8.i108.i236, !dbg !10222
  %or10.i110.i238 = or i32 %shl2.i102.i230, %or9.i109.i237, !dbg !10223
  %218 = load i32, i32* %re_index.i127, align 4, !dbg !10224
  %and54.i239 = and i32 %218, 7, !dbg !10225
  %shl55.i240 = shl i32 %or10.i110.i238, %and54.i239, !dbg !10226
  store i32 %shl55.i240, i32* %re_cache.i128, align 4, !dbg !10227
  %219 = load i32, i32* %n.i130, align 4, !dbg !10228
  %sub56.i241 = sub nsw i32 0, %219, !dbg !10229
  store i32 %sub56.i241, i32* %nb_bits.i131, align 4, !dbg !10230
  %220 = load i32, i32* %re_cache.i128, align 4, !dbg !10231
  %221 = load i32, i32* %nb_bits.i131, align 4, !dbg !10232
  %conv57.i242 = trunc i32 %221 to i8, !dbg !10232
  %call58.i243 = call i32 @NEG_USR32(i32 %220, i8 signext %conv57.i242) #12, !dbg !10233
  %222 = load i32, i32* %code.i126, align 4, !dbg !10234
  %add59.i244 = add i32 %call58.i243, %222, !dbg !10235
  store i32 %add59.i244, i32* %index1.i132, align 4, !dbg !10236
  %223 = load i32, i32* %index1.i132, align 4, !dbg !10237
  %idxprom60.i245 = zext i32 %223 to i64, !dbg !10238
  %224 = load [2 x i16]*, [2 x i16]** %table.addr.i123, align 8, !dbg !10238
  %arrayidx61.i246 = getelementptr inbounds [2 x i16], [2 x i16]* %224, i64 %idxprom60.i245, !dbg !10238
  %arrayidx62.i247 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i246, i64 0, i64 0, !dbg !10238
  %225 = load i16, i16* %arrayidx62.i247, align 2, !dbg !10238
  %conv63.i248 = sext i16 %225 to i32, !dbg !10238
  store i32 %conv63.i248, i32* %code.i126, align 4, !dbg !10239
  %226 = load i32, i32* %index1.i132, align 4, !dbg !10240
  %idxprom64.i249 = zext i32 %226 to i64, !dbg !10241
  %227 = load [2 x i16]*, [2 x i16]** %table.addr.i123, align 8, !dbg !10241
  %arrayidx65.i250 = getelementptr inbounds [2 x i16], [2 x i16]* %227, i64 %idxprom64.i249, !dbg !10241
  %arrayidx66.i251 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i250, i64 0, i64 1, !dbg !10241
  %228 = load i16, i16* %arrayidx66.i251, align 2, !dbg !10241
  %conv67.i252 = sext i16 %228 to i32, !dbg !10241
  store i32 %conv67.i252, i32* %n.i130, align 4, !dbg !10242
  br label %if.end.i254, !dbg !10243

if.end.i254:                                      ; preds = %cond.end46.i253, %land.lhs.true36.i212, %cond.end.i210
  br label %if.end68.i255, !dbg !10244

if.end68.i255:                                    ; preds = %if.end.i254, %land.lhs.true.i168, %if.else63
  %229 = load i32, i32* %n.i130, align 4, !dbg !10245
  %230 = load i32, i32* %re_cache.i128, align 4, !dbg !10246
  %shl70.i256 = shl i32 %230, %229, !dbg !10246
  store i32 %shl70.i256, i32* %re_cache.i128, align 4, !dbg !10246
  %231 = load i32, i32* %re_size_plus8.i129, align 4, !dbg !10247
  %232 = load i32, i32* %re_index.i127, align 4, !dbg !10248
  %233 = load i32, i32* %n.i130, align 4, !dbg !10249
  %add71.i257 = add i32 %232, %233, !dbg !10250
  %cmp72.i258 = icmp ugt i32 %231, %add71.i257, !dbg !10251
  br i1 %cmp72.i258, label %cond.true74.i260, label %cond.false76.i261, !dbg !10252

cond.true74.i260:                                 ; preds = %if.end68.i255
  %234 = load i32, i32* %re_index.i127, align 4, !dbg !10253
  %235 = load i32, i32* %n.i130, align 4, !dbg !10254
  %add75.i259 = add i32 %234, %235, !dbg !10255
  br label %get_vlc2.exit264, !dbg !10256

cond.false76.i261:                                ; preds = %if.end68.i255
  %236 = load i32, i32* %re_size_plus8.i129, align 4, !dbg !10257
  br label %get_vlc2.exit264, !dbg !10258

get_vlc2.exit264:                                 ; preds = %cond.true74.i260, %cond.false76.i261
  %cond78.i262 = phi i32 [ %add75.i259, %cond.true74.i260 ], [ %236, %cond.false76.i261 ], !dbg !10259
  store i32 %cond78.i262, i32* %re_index.i127, align 4, !dbg !10260
  %237 = load i32, i32* %re_index.i127, align 4, !dbg !10261
  %238 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !10262
  %index80.i263 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %238, i32 0, i32 2, !dbg !10263
  store i32 %237, i32* %index80.i263, align 8, !dbg !10264
  %239 = load i32, i32* %code.i126, align 4, !dbg !10265
  %sub65 = sub nsw i32 %239, 60, !dbg !10266
  %arrayidx66 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 1, !dbg !10267
  %240 = load i32, i32* %arrayidx66, align 4, !dbg !10268
  %add67 = add nsw i32 %240, %sub65, !dbg !10268
  store i32 %add67, i32* %arrayidx66, align 4, !dbg !10268
  br label %if.end68

if.end68:                                         ; preds = %get_vlc2.exit264, %if.then58
  %arrayidx69 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 1, !dbg !10269
  %241 = load i32, i32* %arrayidx69, align 4, !dbg !10269
  store i32 %241, i32* %a.addr.i266, align 4, !dbg !10270
  store i32 -100, i32* %amin.addr.i267, align 4, !dbg !10270
  store i32 155, i32* %amax.addr.i268, align 4, !dbg !10270
  %242 = load i32, i32* %a.addr.i266, align 4, !dbg !10271
  %243 = load i32, i32* %amin.addr.i267, align 4, !dbg !10272
  %cmp.i269 = icmp slt i32 %242, %243, !dbg !10273
  br i1 %cmp.i269, label %if.then.i270, label %if.else.i272, !dbg !10274

if.then.i270:                                     ; preds = %if.end68
  %244 = load i32, i32* %amin.addr.i267, align 4, !dbg !10275
  store i32 %244, i32* %retval.i265, align 4, !dbg !10276
  br label %av_clip_c.exit275, !dbg !10276

if.else.i272:                                     ; preds = %if.end68
  %245 = load i32, i32* %a.addr.i266, align 4, !dbg !10277
  %246 = load i32, i32* %amax.addr.i268, align 4, !dbg !10278
  %cmp1.i271 = icmp sgt i32 %245, %246, !dbg !10279
  br i1 %cmp1.i271, label %if.then2.i273, label %if.else3.i274, !dbg !10280

if.then2.i273:                                    ; preds = %if.else.i272
  %247 = load i32, i32* %amax.addr.i268, align 4, !dbg !10281
  store i32 %247, i32* %retval.i265, align 4, !dbg !10282
  br label %av_clip_c.exit275, !dbg !10282

if.else3.i274:                                    ; preds = %if.else.i272
  %248 = load i32, i32* %a.addr.i266, align 4, !dbg !10283
  store i32 %248, i32* %retval.i265, align 4, !dbg !10284
  br label %av_clip_c.exit275, !dbg !10284

av_clip_c.exit275:                                ; preds = %if.then.i270, %if.then2.i273, %if.else3.i274
  %249 = load i32, i32* %retval.i265, align 4, !dbg !10285
  store i32 %249, i32* %clipped_offset, align 4, !dbg !10286
  %arrayidx71 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 1, !dbg !10287
  %250 = load i32, i32* %arrayidx71, align 4, !dbg !10287
  %251 = load i32, i32* %clipped_offset, align 4, !dbg !10289
  %cmp72 = icmp ne i32 %250, %251, !dbg !10290
  br i1 %cmp72, label %if.then74, label %if.end77, !dbg !10291

if.then74:                                        ; preds = %av_clip_c.exit275
  %252 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10292
  %avctx75 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %252, i32 0, i32 1, !dbg !10294
  %253 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx75, align 8, !dbg !10294
  %254 = bitcast %struct.AVCodecContext* %253 to i8*, !dbg !10292
  %arrayidx76 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 1, !dbg !10295
  %255 = load i32, i32* %arrayidx76, align 4, !dbg !10295
  %256 = load i32, i32* %clipped_offset, align 4, !dbg !10296
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %254, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.57, i32 0, i32 0), i32 %255, i32 %256), !dbg !10297
  br label %if.end77, !dbg !10298

if.end77:                                         ; preds = %if.then74, %av_clip_c.exit275
  %257 = load i32, i32* %clipped_offset, align 4, !dbg !10299
  %add78 = add nsw i32 100, %257, !dbg !10300
  %sub79 = sub nsw i32 0, %add78, !dbg !10301
  %258 = load i32, i32* %idx, align 4, !dbg !10302
  %idxprom80 = sext i32 %258 to i64, !dbg !10303
  %259 = load i32*, i32** %sf.addr, align 8, !dbg !10303
  %arrayidx81 = getelementptr inbounds i32, i32* %259, i64 %idxprom80, !dbg !10303
  store i32 %sub79, i32* %arrayidx81, align 4, !dbg !10304
  br label %for.inc82, !dbg !10305

for.inc82:                                        ; preds = %if.end77
  %260 = load i32, i32* %i, align 4, !dbg !10306
  %inc83 = add nsw i32 %260, 1, !dbg !10306
  store i32 %inc83, i32* %i, align 4, !dbg !10306
  %261 = load i32, i32* %idx, align 4, !dbg !10308
  %inc84 = add nsw i32 %261, 1, !dbg !10308
  store i32 %inc84, i32* %idx, align 4, !dbg !10308
  br label %for.cond52, !dbg !10309, !llvm.loop !10310

for.end85:                                        ; preds = %for.cond52
  br label %if.end110, !dbg !10311

if.else86:                                        ; preds = %if.else46
  br label %for.cond87, !dbg !10312

for.cond87:                                       ; preds = %for.inc106, %if.else86
  %262 = load i32, i32* %i, align 4, !dbg !10313
  %263 = load i32, i32* %run_end, align 4, !dbg !10315
  %cmp88 = icmp slt i32 %262, %263, !dbg !10316
  br i1 %cmp88, label %for.body90, label %for.end109, !dbg !10317

for.body90:                                       ; preds = %for.cond87
  %264 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10318
  %265 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 1), align 8, !dbg !10319
  store %struct.GetBitContext* %264, %struct.GetBitContext** %s.addr.i279, align 8, !dbg !10320
  store [2 x i16]* %265, [2 x i16]** %table.addr.i280, align 8, !dbg !10320
  store i32 7, i32* %bits.addr.i281, align 4, !dbg !10320
  store i32 3, i32* %max_depth.addr.i282, align 4, !dbg !10320
  %266 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i279, align 8, !dbg !10321
  %index.i290 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %266, i32 0, i32 2, !dbg !10322
  %267 = load i32, i32* %index.i290, align 8, !dbg !10322
  store i32 %267, i32* %re_index.i284, align 4, !dbg !9639
  %268 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i279, align 8, !dbg !10323
  %size_in_bits_plus8.i291 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %268, i32 0, i32 4, !dbg !10324
  %269 = load i32, i32* %size_in_bits_plus8.i291, align 8, !dbg !10324
  store i32 %269, i32* %re_size_plus8.i286, align 4, !dbg !9643
  %270 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i279, align 8, !dbg !10325
  %buffer.i292 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %270, i32 0, i32 0, !dbg !10326
  %271 = load i8*, i8** %buffer.i292, align 8, !dbg !10326
  %272 = load i32, i32* %re_index.i284, align 4, !dbg !10327
  %shr.i293 = lshr i32 %272, 3, !dbg !10328
  %idx.ext.i294 = zext i32 %shr.i293 to i64, !dbg !10329
  %add.ptr.i295 = getelementptr inbounds i8, i8* %271, i64 %idx.ext.i294, !dbg !10329
  %273 = bitcast i8* %add.ptr.i295 to %union.unaligned_32*, !dbg !10330
  %l.i296 = bitcast %union.unaligned_32* %273 to i32*, !dbg !10330
  %274 = load i32, i32* %l.i296, align 1, !dbg !10330
  store i32 %274, i32* %x.addr.i.i278, align 4, !dbg !10331
  %275 = load i32, i32* %x.addr.i.i278, align 4, !dbg !10332
  %shl.i.i297 = shl i32 %275, 8, !dbg !10333
  %and.i.i298 = and i32 %shl.i.i297, 65280, !dbg !10334
  %276 = load i32, i32* %x.addr.i.i278, align 4, !dbg !10335
  %shr.i.i299 = lshr i32 %276, 8, !dbg !10336
  %and1.i.i300 = and i32 %shr.i.i299, 255, !dbg !10337
  %or.i.i301 = or i32 %and.i.i298, %and1.i.i300, !dbg !10338
  %shl2.i.i302 = shl i32 %or.i.i301, 16, !dbg !10339
  %277 = load i32, i32* %x.addr.i.i278, align 4, !dbg !10340
  %shr3.i.i303 = lshr i32 %277, 16, !dbg !10341
  %shl4.i.i304 = shl i32 %shr3.i.i303, 8, !dbg !10342
  %and5.i.i305 = and i32 %shl4.i.i304, 65280, !dbg !10343
  %278 = load i32, i32* %x.addr.i.i278, align 4, !dbg !10344
  %shr6.i.i306 = lshr i32 %278, 16, !dbg !10345
  %shr7.i.i307 = lshr i32 %shr6.i.i306, 8, !dbg !10346
  %and8.i.i308 = and i32 %shr7.i.i307, 255, !dbg !10347
  %or9.i.i309 = or i32 %and5.i.i305, %and8.i.i308, !dbg !10348
  %or10.i.i310 = or i32 %shl2.i.i302, %or9.i.i309, !dbg !10349
  %279 = load i32, i32* %re_index.i284, align 4, !dbg !10350
  %and.i311 = and i32 %279, 7, !dbg !10351
  %shl.i312 = shl i32 %or10.i.i310, %and.i311, !dbg !10352
  store i32 %shl.i312, i32* %re_cache.i285, align 4, !dbg !10353
  %280 = load i32, i32* %re_cache.i285, align 4, !dbg !10354
  %281 = load i32, i32* %bits.addr.i281, align 4, !dbg !10355
  %conv.i313 = trunc i32 %281 to i8, !dbg !10355
  %call2.i314 = call i32 @NEG_USR32(i32 %280, i8 signext %conv.i313) #12, !dbg !10356
  store i32 %call2.i314, i32* %index1.i289, align 4, !dbg !10357
  %282 = load i32, i32* %index1.i289, align 4, !dbg !10358
  %idxprom.i315 = zext i32 %282 to i64, !dbg !10359
  %283 = load [2 x i16]*, [2 x i16]** %table.addr.i280, align 8, !dbg !10359
  %arrayidx.i316 = getelementptr inbounds [2 x i16], [2 x i16]* %283, i64 %idxprom.i315, !dbg !10359
  %arrayidx3.i317 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i316, i64 0, i64 0, !dbg !10359
  %284 = load i16, i16* %arrayidx3.i317, align 2, !dbg !10359
  %conv4.i318 = sext i16 %284 to i32, !dbg !10359
  store i32 %conv4.i318, i32* %code.i283, align 4, !dbg !10360
  %285 = load i32, i32* %index1.i289, align 4, !dbg !10361
  %idxprom5.i319 = zext i32 %285 to i64, !dbg !10362
  %286 = load [2 x i16]*, [2 x i16]** %table.addr.i280, align 8, !dbg !10362
  %arrayidx6.i320 = getelementptr inbounds [2 x i16], [2 x i16]* %286, i64 %idxprom5.i319, !dbg !10362
  %arrayidx7.i321 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i320, i64 0, i64 1, !dbg !10362
  %287 = load i16, i16* %arrayidx7.i321, align 2, !dbg !10362
  %conv8.i322 = sext i16 %287 to i32, !dbg !10362
  store i32 %conv8.i322, i32* %n.i287, align 4, !dbg !10363
  %288 = load i32, i32* %max_depth.addr.i282, align 4, !dbg !10364
  %cmp.i323 = icmp sgt i32 %288, 1, !dbg !10365
  br i1 %cmp.i323, label %land.lhs.true.i325, label %if.end68.i412, !dbg !10366

land.lhs.true.i325:                               ; preds = %for.body90
  %289 = load i32, i32* %n.i287, align 4, !dbg !10367
  %cmp10.i324 = icmp slt i32 %289, 0, !dbg !10368
  br i1 %cmp10.i324, label %if.then.i328, label %if.end68.i412, !dbg !10369

if.then.i328:                                     ; preds = %land.lhs.true.i325
  %290 = load i32, i32* %re_size_plus8.i286, align 4, !dbg !10370
  %291 = load i32, i32* %re_index.i284, align 4, !dbg !10371
  %292 = load i32, i32* %bits.addr.i281, align 4, !dbg !10372
  %add.i326 = add i32 %291, %292, !dbg !10373
  %cmp12.i327 = icmp ugt i32 %290, %add.i326, !dbg !10374
  br i1 %cmp12.i327, label %cond.true.i330, label %cond.false.i331, !dbg !10375

cond.true.i330:                                   ; preds = %if.then.i328
  %293 = load i32, i32* %re_index.i284, align 4, !dbg !10376
  %294 = load i32, i32* %bits.addr.i281, align 4, !dbg !10377
  %add14.i329 = add i32 %293, %294, !dbg !10378
  br label %cond.end.i367, !dbg !10379

cond.false.i331:                                  ; preds = %if.then.i328
  %295 = load i32, i32* %re_size_plus8.i286, align 4, !dbg !10380
  br label %cond.end.i367, !dbg !10381

cond.end.i367:                                    ; preds = %cond.false.i331, %cond.true.i330
  %cond.i332 = phi i32 [ %add14.i329, %cond.true.i330 ], [ %295, %cond.false.i331 ], !dbg !10382
  store i32 %cond.i332, i32* %re_index.i284, align 4, !dbg !10383
  %296 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i279, align 8, !dbg !10384
  %buffer15.i333 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %296, i32 0, i32 0, !dbg !10385
  %297 = load i8*, i8** %buffer15.i333, align 8, !dbg !10385
  %298 = load i32, i32* %re_index.i284, align 4, !dbg !10386
  %shr16.i334 = lshr i32 %298, 3, !dbg !10387
  %idx.ext17.i335 = zext i32 %shr16.i334 to i64, !dbg !10388
  %add.ptr18.i336 = getelementptr inbounds i8, i8* %297, i64 %idx.ext17.i335, !dbg !10388
  %299 = bitcast i8* %add.ptr18.i336 to %union.unaligned_32*, !dbg !10389
  %l19.i337 = bitcast %union.unaligned_32* %299 to i32*, !dbg !10389
  %300 = load i32, i32* %l19.i337, align 1, !dbg !10389
  store i32 %300, i32* %x.addr.i81.i277, align 4, !dbg !10390
  %301 = load i32, i32* %x.addr.i81.i277, align 4, !dbg !10391
  %shl.i82.i338 = shl i32 %301, 8, !dbg !10392
  %and.i83.i339 = and i32 %shl.i82.i338, 65280, !dbg !10393
  %302 = load i32, i32* %x.addr.i81.i277, align 4, !dbg !10394
  %shr.i84.i340 = lshr i32 %302, 8, !dbg !10395
  %and1.i85.i341 = and i32 %shr.i84.i340, 255, !dbg !10396
  %or.i86.i342 = or i32 %and.i83.i339, %and1.i85.i341, !dbg !10397
  %shl2.i87.i343 = shl i32 %or.i86.i342, 16, !dbg !10398
  %303 = load i32, i32* %x.addr.i81.i277, align 4, !dbg !10399
  %shr3.i88.i344 = lshr i32 %303, 16, !dbg !10400
  %shl4.i89.i345 = shl i32 %shr3.i88.i344, 8, !dbg !10401
  %and5.i90.i346 = and i32 %shl4.i89.i345, 65280, !dbg !10402
  %304 = load i32, i32* %x.addr.i81.i277, align 4, !dbg !10403
  %shr6.i91.i347 = lshr i32 %304, 16, !dbg !10404
  %shr7.i92.i348 = lshr i32 %shr6.i91.i347, 8, !dbg !10405
  %and8.i93.i349 = and i32 %shr7.i92.i348, 255, !dbg !10406
  %or9.i94.i350 = or i32 %and5.i90.i346, %and8.i93.i349, !dbg !10407
  %or10.i95.i351 = or i32 %shl2.i87.i343, %or9.i94.i350, !dbg !10408
  %305 = load i32, i32* %re_index.i284, align 4, !dbg !10409
  %and21.i352 = and i32 %305, 7, !dbg !10410
  %shl22.i353 = shl i32 %or10.i95.i351, %and21.i352, !dbg !10411
  store i32 %shl22.i353, i32* %re_cache.i285, align 4, !dbg !10412
  %306 = load i32, i32* %n.i287, align 4, !dbg !10413
  %sub.i354 = sub nsw i32 0, %306, !dbg !10414
  store i32 %sub.i354, i32* %nb_bits.i288, align 4, !dbg !10415
  %307 = load i32, i32* %re_cache.i285, align 4, !dbg !10416
  %308 = load i32, i32* %nb_bits.i288, align 4, !dbg !10417
  %conv23.i355 = trunc i32 %308 to i8, !dbg !10417
  %call24.i356 = call i32 @NEG_USR32(i32 %307, i8 signext %conv23.i355) #12, !dbg !10418
  %309 = load i32, i32* %code.i283, align 4, !dbg !10419
  %add25.i357 = add i32 %call24.i356, %309, !dbg !10420
  store i32 %add25.i357, i32* %index1.i289, align 4, !dbg !10421
  %310 = load i32, i32* %index1.i289, align 4, !dbg !10422
  %idxprom26.i358 = zext i32 %310 to i64, !dbg !10423
  %311 = load [2 x i16]*, [2 x i16]** %table.addr.i280, align 8, !dbg !10423
  %arrayidx27.i359 = getelementptr inbounds [2 x i16], [2 x i16]* %311, i64 %idxprom26.i358, !dbg !10423
  %arrayidx28.i360 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i359, i64 0, i64 0, !dbg !10423
  %312 = load i16, i16* %arrayidx28.i360, align 2, !dbg !10423
  %conv29.i361 = sext i16 %312 to i32, !dbg !10423
  store i32 %conv29.i361, i32* %code.i283, align 4, !dbg !10424
  %313 = load i32, i32* %index1.i289, align 4, !dbg !10425
  %idxprom30.i362 = zext i32 %313 to i64, !dbg !10426
  %314 = load [2 x i16]*, [2 x i16]** %table.addr.i280, align 8, !dbg !10426
  %arrayidx31.i363 = getelementptr inbounds [2 x i16], [2 x i16]* %314, i64 %idxprom30.i362, !dbg !10426
  %arrayidx32.i364 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i363, i64 0, i64 1, !dbg !10426
  %315 = load i16, i16* %arrayidx32.i364, align 2, !dbg !10426
  %conv33.i365 = sext i16 %315 to i32, !dbg !10426
  store i32 %conv33.i365, i32* %n.i287, align 4, !dbg !10427
  %316 = load i32, i32* %max_depth.addr.i282, align 4, !dbg !10428
  %cmp34.i366 = icmp sgt i32 %316, 2, !dbg !10429
  br i1 %cmp34.i366, label %land.lhs.true36.i369, label %if.end.i411, !dbg !10430

land.lhs.true36.i369:                             ; preds = %cond.end.i367
  %317 = load i32, i32* %n.i287, align 4, !dbg !10431
  %cmp37.i368 = icmp slt i32 %317, 0, !dbg !10432
  br i1 %cmp37.i368, label %if.then39.i372, label %if.end.i411, !dbg !10433

if.then39.i372:                                   ; preds = %land.lhs.true36.i369
  %318 = load i32, i32* %re_size_plus8.i286, align 4, !dbg !10434
  %319 = load i32, i32* %re_index.i284, align 4, !dbg !10435
  %320 = load i32, i32* %nb_bits.i288, align 4, !dbg !10436
  %add40.i370 = add i32 %319, %320, !dbg !10437
  %cmp41.i371 = icmp ugt i32 %318, %add40.i370, !dbg !10438
  br i1 %cmp41.i371, label %cond.true43.i374, label %cond.false45.i375, !dbg !10439

cond.true43.i374:                                 ; preds = %if.then39.i372
  %321 = load i32, i32* %re_index.i284, align 4, !dbg !10440
  %322 = load i32, i32* %nb_bits.i288, align 4, !dbg !10441
  %add44.i373 = add i32 %321, %322, !dbg !10442
  br label %cond.end46.i410, !dbg !10443

cond.false45.i375:                                ; preds = %if.then39.i372
  %323 = load i32, i32* %re_size_plus8.i286, align 4, !dbg !10444
  br label %cond.end46.i410, !dbg !10445

cond.end46.i410:                                  ; preds = %cond.false45.i375, %cond.true43.i374
  %cond47.i376 = phi i32 [ %add44.i373, %cond.true43.i374 ], [ %323, %cond.false45.i375 ], !dbg !10446
  store i32 %cond47.i376, i32* %re_index.i284, align 4, !dbg !10447
  %324 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i279, align 8, !dbg !10448
  %buffer48.i377 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %324, i32 0, i32 0, !dbg !10449
  %325 = load i8*, i8** %buffer48.i377, align 8, !dbg !10449
  %326 = load i32, i32* %re_index.i284, align 4, !dbg !10450
  %shr49.i378 = lshr i32 %326, 3, !dbg !10451
  %idx.ext50.i379 = zext i32 %shr49.i378 to i64, !dbg !10452
  %add.ptr51.i380 = getelementptr inbounds i8, i8* %325, i64 %idx.ext50.i379, !dbg !10452
  %327 = bitcast i8* %add.ptr51.i380 to %union.unaligned_32*, !dbg !10453
  %l52.i381 = bitcast %union.unaligned_32* %327 to i32*, !dbg !10453
  %328 = load i32, i32* %l52.i381, align 1, !dbg !10453
  store i32 %328, i32* %x.addr.i96.i276, align 4, !dbg !10454
  %329 = load i32, i32* %x.addr.i96.i276, align 4, !dbg !10455
  %shl.i97.i382 = shl i32 %329, 8, !dbg !10456
  %and.i98.i383 = and i32 %shl.i97.i382, 65280, !dbg !10457
  %330 = load i32, i32* %x.addr.i96.i276, align 4, !dbg !10458
  %shr.i99.i384 = lshr i32 %330, 8, !dbg !10459
  %and1.i100.i385 = and i32 %shr.i99.i384, 255, !dbg !10460
  %or.i101.i386 = or i32 %and.i98.i383, %and1.i100.i385, !dbg !10461
  %shl2.i102.i387 = shl i32 %or.i101.i386, 16, !dbg !10462
  %331 = load i32, i32* %x.addr.i96.i276, align 4, !dbg !10463
  %shr3.i103.i388 = lshr i32 %331, 16, !dbg !10464
  %shl4.i104.i389 = shl i32 %shr3.i103.i388, 8, !dbg !10465
  %and5.i105.i390 = and i32 %shl4.i104.i389, 65280, !dbg !10466
  %332 = load i32, i32* %x.addr.i96.i276, align 4, !dbg !10467
  %shr6.i106.i391 = lshr i32 %332, 16, !dbg !10468
  %shr7.i107.i392 = lshr i32 %shr6.i106.i391, 8, !dbg !10469
  %and8.i108.i393 = and i32 %shr7.i107.i392, 255, !dbg !10470
  %or9.i109.i394 = or i32 %and5.i105.i390, %and8.i108.i393, !dbg !10471
  %or10.i110.i395 = or i32 %shl2.i102.i387, %or9.i109.i394, !dbg !10472
  %333 = load i32, i32* %re_index.i284, align 4, !dbg !10473
  %and54.i396 = and i32 %333, 7, !dbg !10474
  %shl55.i397 = shl i32 %or10.i110.i395, %and54.i396, !dbg !10475
  store i32 %shl55.i397, i32* %re_cache.i285, align 4, !dbg !10476
  %334 = load i32, i32* %n.i287, align 4, !dbg !10477
  %sub56.i398 = sub nsw i32 0, %334, !dbg !10478
  store i32 %sub56.i398, i32* %nb_bits.i288, align 4, !dbg !10479
  %335 = load i32, i32* %re_cache.i285, align 4, !dbg !10480
  %336 = load i32, i32* %nb_bits.i288, align 4, !dbg !10481
  %conv57.i399 = trunc i32 %336 to i8, !dbg !10481
  %call58.i400 = call i32 @NEG_USR32(i32 %335, i8 signext %conv57.i399) #12, !dbg !10482
  %337 = load i32, i32* %code.i283, align 4, !dbg !10483
  %add59.i401 = add i32 %call58.i400, %337, !dbg !10484
  store i32 %add59.i401, i32* %index1.i289, align 4, !dbg !10485
  %338 = load i32, i32* %index1.i289, align 4, !dbg !10486
  %idxprom60.i402 = zext i32 %338 to i64, !dbg !10487
  %339 = load [2 x i16]*, [2 x i16]** %table.addr.i280, align 8, !dbg !10487
  %arrayidx61.i403 = getelementptr inbounds [2 x i16], [2 x i16]* %339, i64 %idxprom60.i402, !dbg !10487
  %arrayidx62.i404 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i403, i64 0, i64 0, !dbg !10487
  %340 = load i16, i16* %arrayidx62.i404, align 2, !dbg !10487
  %conv63.i405 = sext i16 %340 to i32, !dbg !10487
  store i32 %conv63.i405, i32* %code.i283, align 4, !dbg !10488
  %341 = load i32, i32* %index1.i289, align 4, !dbg !10489
  %idxprom64.i406 = zext i32 %341 to i64, !dbg !10490
  %342 = load [2 x i16]*, [2 x i16]** %table.addr.i280, align 8, !dbg !10490
  %arrayidx65.i407 = getelementptr inbounds [2 x i16], [2 x i16]* %342, i64 %idxprom64.i406, !dbg !10490
  %arrayidx66.i408 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i407, i64 0, i64 1, !dbg !10490
  %343 = load i16, i16* %arrayidx66.i408, align 2, !dbg !10490
  %conv67.i409 = sext i16 %343 to i32, !dbg !10490
  store i32 %conv67.i409, i32* %n.i287, align 4, !dbg !10491
  br label %if.end.i411, !dbg !10492

if.end.i411:                                      ; preds = %cond.end46.i410, %land.lhs.true36.i369, %cond.end.i367
  br label %if.end68.i412, !dbg !10493

if.end68.i412:                                    ; preds = %if.end.i411, %land.lhs.true.i325, %for.body90
  %344 = load i32, i32* %n.i287, align 4, !dbg !10494
  %345 = load i32, i32* %re_cache.i285, align 4, !dbg !10495
  %shl70.i413 = shl i32 %345, %344, !dbg !10495
  store i32 %shl70.i413, i32* %re_cache.i285, align 4, !dbg !10495
  %346 = load i32, i32* %re_size_plus8.i286, align 4, !dbg !10496
  %347 = load i32, i32* %re_index.i284, align 4, !dbg !10497
  %348 = load i32, i32* %n.i287, align 4, !dbg !10498
  %add71.i414 = add i32 %347, %348, !dbg !10499
  %cmp72.i415 = icmp ugt i32 %346, %add71.i414, !dbg !10500
  br i1 %cmp72.i415, label %cond.true74.i417, label %cond.false76.i418, !dbg !10501

cond.true74.i417:                                 ; preds = %if.end68.i412
  %349 = load i32, i32* %re_index.i284, align 4, !dbg !10502
  %350 = load i32, i32* %n.i287, align 4, !dbg !10503
  %add75.i416 = add i32 %349, %350, !dbg !10504
  br label %get_vlc2.exit421, !dbg !10505

cond.false76.i418:                                ; preds = %if.end68.i412
  %351 = load i32, i32* %re_size_plus8.i286, align 4, !dbg !10506
  br label %get_vlc2.exit421, !dbg !10507

get_vlc2.exit421:                                 ; preds = %cond.true74.i417, %cond.false76.i418
  %cond78.i419 = phi i32 [ %add75.i416, %cond.true74.i417 ], [ %351, %cond.false76.i418 ], !dbg !10508
  store i32 %cond78.i419, i32* %re_index.i284, align 4, !dbg !10509
  %352 = load i32, i32* %re_index.i284, align 4, !dbg !10510
  %353 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i279, align 8, !dbg !10511
  %index80.i420 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %353, i32 0, i32 2, !dbg !10512
  store i32 %352, i32* %index80.i420, align 8, !dbg !10513
  %354 = load i32, i32* %code.i283, align 4, !dbg !10514
  %sub92 = sub nsw i32 %354, 60, !dbg !10515
  %arrayidx93 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 0, !dbg !10516
  %355 = load i32, i32* %arrayidx93, align 4, !dbg !10517
  %add94 = add nsw i32 %355, %sub92, !dbg !10517
  store i32 %add94, i32* %arrayidx93, align 4, !dbg !10517
  %arrayidx95 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 0, !dbg !10518
  %356 = load i32, i32* %arrayidx95, align 4, !dbg !10518
  %cmp96 = icmp ugt i32 %356, 255, !dbg !10520
  br i1 %cmp96, label %if.then98, label %if.end101, !dbg !10521

if.then98:                                        ; preds = %get_vlc2.exit421
  %357 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10522
  %avctx99 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %357, i32 0, i32 1, !dbg !10524
  %358 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx99, align 8, !dbg !10524
  %359 = bitcast %struct.AVCodecContext* %358 to i8*, !dbg !10522
  %arrayidx100 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 0, !dbg !10525
  %360 = load i32, i32* %arrayidx100, align 4, !dbg !10525
  call void (i8*, i32, i8*, ...) @av_log(i8* %359, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.58, i32 0, i32 0), i32 %360), !dbg !10526
  store i32 -1094995529, i32* %retval, align 4, !dbg !10527
  br label %return, !dbg !10527

if.end101:                                        ; preds = %get_vlc2.exit421
  %arrayidx102 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 0, !dbg !10528
  %361 = load i32, i32* %arrayidx102, align 4, !dbg !10528
  %sub103 = sub nsw i32 0, %361, !dbg !10529
  %362 = load i32, i32* %idx, align 4, !dbg !10530
  %idxprom104 = sext i32 %362 to i64, !dbg !10531
  %363 = load i32*, i32** %sf.addr, align 8, !dbg !10531
  %arrayidx105 = getelementptr inbounds i32, i32* %363, i64 %idxprom104, !dbg !10531
  store i32 %sub103, i32* %arrayidx105, align 4, !dbg !10532
  br label %for.inc106, !dbg !10533

for.inc106:                                       ; preds = %if.end101
  %364 = load i32, i32* %i, align 4, !dbg !10534
  %inc107 = add nsw i32 %364, 1, !dbg !10534
  store i32 %inc107, i32* %i, align 4, !dbg !10534
  %365 = load i32, i32* %idx, align 4, !dbg !10536
  %inc108 = add nsw i32 %365, 1, !dbg !10536
  store i32 %inc108, i32* %idx, align 4, !dbg !10536
  br label %for.cond87, !dbg !10537, !llvm.loop !10538

for.end109:                                       ; preds = %for.cond87
  br label %if.end110

if.end110:                                        ; preds = %for.end109, %for.end85
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %for.end45
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %for.end
  br label %for.cond2, !dbg !10539, !llvm.loop !10541

for.end113:                                       ; preds = %for.cond2
  br label %for.inc114, !dbg !10543

for.inc114:                                       ; preds = %for.end113
  %366 = load i32, i32* %g, align 4, !dbg !10544
  %inc115 = add nsw i32 %366, 1, !dbg !10544
  store i32 %inc115, i32* %g, align 4, !dbg !10544
  br label %for.cond, !dbg !10546, !llvm.loop !10547

for.end116:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10549
  br label %return, !dbg !10549

return:                                           ; preds = %for.end116, %if.then98
  %367 = load i32, i32* %retval, align 4, !dbg !10550
  ret i32 %367, !dbg !10550
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_pulses(%struct.Pulse* %pulse, %struct.GetBitContext* %gb, i16* %swb_offset, i32 %num_swb) #1 !dbg !10551 {
entry:
  %retval = alloca i32, align 4
  %pulse.addr = alloca %struct.Pulse*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %swb_offset.addr = alloca i16*, align 8
  %num_swb.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %pulse_swb = alloca i32, align 4
  store %struct.Pulse* %pulse, %struct.Pulse** %pulse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Pulse** %pulse.addr, metadata !10555, metadata !2068), !dbg !10556
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10557, metadata !2068), !dbg !10558
  store i16* %swb_offset, i16** %swb_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %swb_offset.addr, metadata !10559, metadata !2068), !dbg !10560
  store i32 %num_swb, i32* %num_swb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_swb.addr, metadata !10561, metadata !2068), !dbg !10562
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10563, metadata !2068), !dbg !10564
  call void @llvm.dbg.declare(metadata i32* %pulse_swb, metadata !10565, metadata !2068), !dbg !10566
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10567
  %call = call i32 @get_bits(%struct.GetBitContext* %0, i32 2), !dbg !10568
  %add = add i32 %call, 1, !dbg !10569
  %1 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10570
  %num_pulse = getelementptr inbounds %struct.Pulse, %struct.Pulse* %1, i32 0, i32 0, !dbg !10571
  store i32 %add, i32* %num_pulse, align 4, !dbg !10572
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10573
  %call1 = call i32 @get_bits(%struct.GetBitContext* %2, i32 6), !dbg !10574
  store i32 %call1, i32* %pulse_swb, align 4, !dbg !10575
  %3 = load i32, i32* %pulse_swb, align 4, !dbg !10576
  %4 = load i32, i32* %num_swb.addr, align 4, !dbg !10578
  %cmp = icmp sge i32 %3, %4, !dbg !10579
  br i1 %cmp, label %if.then, label %if.end, !dbg !10580

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !10581
  br label %return, !dbg !10581

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %pulse_swb, align 4, !dbg !10582
  %idxprom = sext i32 %5 to i64, !dbg !10583
  %6 = load i16*, i16** %swb_offset.addr, align 8, !dbg !10583
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !10583
  %7 = load i16, i16* %arrayidx, align 2, !dbg !10583
  %conv = zext i16 %7 to i32, !dbg !10583
  %8 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10584
  %pos = getelementptr inbounds %struct.Pulse, %struct.Pulse* %8, i32 0, i32 2, !dbg !10585
  %arrayidx2 = getelementptr inbounds [4 x i32], [4 x i32]* %pos, i64 0, i64 0, !dbg !10584
  store i32 %conv, i32* %arrayidx2, align 4, !dbg !10586
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10587
  %call3 = call i32 @get_bits(%struct.GetBitContext* %9, i32 5), !dbg !10588
  %10 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10589
  %pos4 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %10, i32 0, i32 2, !dbg !10590
  %arrayidx5 = getelementptr inbounds [4 x i32], [4 x i32]* %pos4, i64 0, i64 0, !dbg !10589
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !10591
  %add6 = add i32 %11, %call3, !dbg !10591
  store i32 %add6, i32* %arrayidx5, align 4, !dbg !10591
  %12 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10592
  %pos7 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %12, i32 0, i32 2, !dbg !10594
  %arrayidx8 = getelementptr inbounds [4 x i32], [4 x i32]* %pos7, i64 0, i64 0, !dbg !10592
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !10592
  %14 = load i32, i32* %num_swb.addr, align 4, !dbg !10595
  %idxprom9 = sext i32 %14 to i64, !dbg !10596
  %15 = load i16*, i16** %swb_offset.addr, align 8, !dbg !10596
  %arrayidx10 = getelementptr inbounds i16, i16* %15, i64 %idxprom9, !dbg !10596
  %16 = load i16, i16* %arrayidx10, align 2, !dbg !10596
  %conv11 = zext i16 %16 to i32, !dbg !10596
  %cmp12 = icmp sge i32 %13, %conv11, !dbg !10597
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !10598

if.then14:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !10599
  br label %return, !dbg !10599

if.end15:                                         ; preds = %if.end
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10600
  %call16 = call i32 @get_bits(%struct.GetBitContext* %17, i32 4), !dbg !10601
  %18 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10602
  %amp = getelementptr inbounds %struct.Pulse, %struct.Pulse* %18, i32 0, i32 3, !dbg !10603
  %arrayidx17 = getelementptr inbounds [4 x i32], [4 x i32]* %amp, i64 0, i64 0, !dbg !10602
  store i32 %call16, i32* %arrayidx17, align 4, !dbg !10604
  store i32 1, i32* %i, align 4, !dbg !10605
  br label %for.cond, !dbg !10607

for.cond:                                         ; preds = %for.inc, %if.end15
  %19 = load i32, i32* %i, align 4, !dbg !10608
  %20 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10611
  %num_pulse18 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %20, i32 0, i32 0, !dbg !10612
  %21 = load i32, i32* %num_pulse18, align 4, !dbg !10612
  %cmp19 = icmp slt i32 %19, %21, !dbg !10613
  br i1 %cmp19, label %for.body, label %for.end, !dbg !10614

for.body:                                         ; preds = %for.cond
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10615
  %call21 = call i32 @get_bits(%struct.GetBitContext* %22, i32 5), !dbg !10617
  %23 = load i32, i32* %i, align 4, !dbg !10618
  %sub = sub nsw i32 %23, 1, !dbg !10619
  %idxprom22 = sext i32 %sub to i64, !dbg !10620
  %24 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10620
  %pos23 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %24, i32 0, i32 2, !dbg !10621
  %arrayidx24 = getelementptr inbounds [4 x i32], [4 x i32]* %pos23, i64 0, i64 %idxprom22, !dbg !10620
  %25 = load i32, i32* %arrayidx24, align 4, !dbg !10620
  %add25 = add i32 %call21, %25, !dbg !10622
  %26 = load i32, i32* %i, align 4, !dbg !10623
  %idxprom26 = sext i32 %26 to i64, !dbg !10624
  %27 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10624
  %pos27 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %27, i32 0, i32 2, !dbg !10625
  %arrayidx28 = getelementptr inbounds [4 x i32], [4 x i32]* %pos27, i64 0, i64 %idxprom26, !dbg !10624
  store i32 %add25, i32* %arrayidx28, align 4, !dbg !10626
  %28 = load i32, i32* %i, align 4, !dbg !10627
  %idxprom29 = sext i32 %28 to i64, !dbg !10629
  %29 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10629
  %pos30 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %29, i32 0, i32 2, !dbg !10630
  %arrayidx31 = getelementptr inbounds [4 x i32], [4 x i32]* %pos30, i64 0, i64 %idxprom29, !dbg !10629
  %30 = load i32, i32* %arrayidx31, align 4, !dbg !10629
  %31 = load i32, i32* %num_swb.addr, align 4, !dbg !10631
  %idxprom32 = sext i32 %31 to i64, !dbg !10632
  %32 = load i16*, i16** %swb_offset.addr, align 8, !dbg !10632
  %arrayidx33 = getelementptr inbounds i16, i16* %32, i64 %idxprom32, !dbg !10632
  %33 = load i16, i16* %arrayidx33, align 2, !dbg !10632
  %conv34 = zext i16 %33 to i32, !dbg !10632
  %cmp35 = icmp sge i32 %30, %conv34, !dbg !10633
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !10634

if.then37:                                        ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !10635
  br label %return, !dbg !10635

if.end38:                                         ; preds = %for.body
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10636
  %call39 = call i32 @get_bits(%struct.GetBitContext* %34, i32 4), !dbg !10637
  %35 = load i32, i32* %i, align 4, !dbg !10638
  %idxprom40 = sext i32 %35 to i64, !dbg !10639
  %36 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10639
  %amp41 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %36, i32 0, i32 3, !dbg !10640
  %arrayidx42 = getelementptr inbounds [4 x i32], [4 x i32]* %amp41, i64 0, i64 %idxprom40, !dbg !10639
  store i32 %call39, i32* %arrayidx42, align 4, !dbg !10641
  br label %for.inc, !dbg !10642

for.inc:                                          ; preds = %if.end38
  %37 = load i32, i32* %i, align 4, !dbg !10643
  %inc = add nsw i32 %37, 1, !dbg !10643
  store i32 %inc, i32* %i, align 4, !dbg !10643
  br label %for.cond, !dbg !10645, !llvm.loop !10646

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10648
  br label %return, !dbg !10648

return:                                           ; preds = %for.end, %if.then37, %if.then14, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !10649
  ret i32 %38, !dbg !10649
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_tns(%struct.AACContext* %ac, %struct.TemporalNoiseShaping* %tns, %struct.GetBitContext* %gb, %struct.IndividualChannelStream* %ics) #1 !dbg !10650 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %tns.addr = alloca %struct.TemporalNoiseShaping*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %w = alloca i32, align 4
  %filt = alloca i32, align 4
  %i = alloca i32, align 4
  %coef_len = alloca i32, align 4
  %coef_res = alloca i32, align 4
  %coef_compress = alloca i32, align 4
  %is8 = alloca i32, align 4
  %tns_max_order = alloca i32, align 4
  %tmp2_idx = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !10655, metadata !2068), !dbg !10656
  store %struct.TemporalNoiseShaping* %tns, %struct.TemporalNoiseShaping** %tns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TemporalNoiseShaping** %tns.addr, metadata !10657, metadata !2068), !dbg !10658
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10659, metadata !2068), !dbg !10660
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !10661, metadata !2068), !dbg !10662
  call void @llvm.dbg.declare(metadata i32* %w, metadata !10663, metadata !2068), !dbg !10664
  call void @llvm.dbg.declare(metadata i32* %filt, metadata !10665, metadata !2068), !dbg !10666
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10667, metadata !2068), !dbg !10668
  call void @llvm.dbg.declare(metadata i32* %coef_len, metadata !10669, metadata !2068), !dbg !10670
  call void @llvm.dbg.declare(metadata i32* %coef_res, metadata !10671, metadata !2068), !dbg !10672
  call void @llvm.dbg.declare(metadata i32* %coef_compress, metadata !10673, metadata !2068), !dbg !10674
  call void @llvm.dbg.declare(metadata i32* %is8, metadata !10675, metadata !2068), !dbg !10676
  %0 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !10677
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %0, i32 0, i32 1, !dbg !10678
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !10677
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10677
  %cmp = icmp eq i32 %1, 2, !dbg !10679
  %conv = zext i1 %cmp to i32, !dbg !10679
  store i32 %conv, i32* %is8, align 4, !dbg !10676
  call void @llvm.dbg.declare(metadata i32* %tns_max_order, metadata !10680, metadata !2068), !dbg !10681
  %2 = load i32, i32* %is8, align 4, !dbg !10682
  %tobool = icmp ne i32 %2, 0, !dbg !10682
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10682

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10683

cond.false:                                       ; preds = %entry
  %3 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10685
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %3, i32 0, i32 21, !dbg !10687
  %arrayidx1 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !10685
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx1, i32 0, i32 0, !dbg !10688
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 0, !dbg !10689
  %4 = load i32, i32* %object_type, align 8, !dbg !10689
  %cmp2 = icmp eq i32 %4, 1, !dbg !10690
  %cond = select i1 %cmp2, i32 20, i32 12, !dbg !10685
  br label %cond.end, !dbg !10691

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond4 = phi i32 [ 7, %cond.true ], [ %cond, %cond.false ], !dbg !10692
  store i32 %cond4, i32* %tns_max_order, align 4, !dbg !10694
  store i32 0, i32* %w, align 4, !dbg !10695
  br label %for.cond, !dbg !10697

for.cond:                                         ; preds = %for.inc84, %cond.end
  %5 = load i32, i32* %w, align 4, !dbg !10698
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !10701
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 9, !dbg !10702
  %7 = load i32, i32* %num_windows, align 4, !dbg !10702
  %cmp5 = icmp slt i32 %5, %7, !dbg !10703
  br i1 %cmp5, label %for.body, label %for.end86, !dbg !10704

for.body:                                         ; preds = %for.cond
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10705
  %9 = load i32, i32* %is8, align 4, !dbg !10708
  %sub = sub nsw i32 2, %9, !dbg !10709
  %call = call i32 @get_bits(%struct.GetBitContext* %8, i32 %sub), !dbg !10710
  %10 = load i32, i32* %w, align 4, !dbg !10711
  %idxprom = sext i32 %10 to i64, !dbg !10712
  %11 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10712
  %n_filt = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %11, i32 0, i32 1, !dbg !10713
  %arrayidx7 = getelementptr inbounds [8 x i32], [8 x i32]* %n_filt, i64 0, i64 %idxprom, !dbg !10712
  store i32 %call, i32* %arrayidx7, align 4, !dbg !10714
  %tobool8 = icmp ne i32 %call, 0, !dbg !10714
  br i1 %tobool8, label %if.then, label %if.end83, !dbg !10715

if.then:                                          ; preds = %for.body
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10716
  %call9 = call i32 @get_bits1(%struct.GetBitContext* %12), !dbg !10718
  store i32 %call9, i32* %coef_res, align 4, !dbg !10719
  store i32 0, i32* %filt, align 4, !dbg !10720
  br label %for.cond10, !dbg !10722

for.cond10:                                       ; preds = %for.inc80, %if.then
  %13 = load i32, i32* %filt, align 4, !dbg !10723
  %14 = load i32, i32* %w, align 4, !dbg !10726
  %idxprom11 = sext i32 %14 to i64, !dbg !10727
  %15 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10727
  %n_filt12 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %15, i32 0, i32 1, !dbg !10728
  %arrayidx13 = getelementptr inbounds [8 x i32], [8 x i32]* %n_filt12, i64 0, i64 %idxprom11, !dbg !10727
  %16 = load i32, i32* %arrayidx13, align 4, !dbg !10727
  %cmp14 = icmp slt i32 %13, %16, !dbg !10729
  br i1 %cmp14, label %for.body16, label %for.end82, !dbg !10730

for.body16:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i32* %tmp2_idx, metadata !10731, metadata !2068), !dbg !10733
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10734
  %18 = load i32, i32* %is8, align 4, !dbg !10735
  %mul = mul nsw i32 2, %18, !dbg !10736
  %sub17 = sub nsw i32 6, %mul, !dbg !10737
  %call18 = call i32 @get_bits(%struct.GetBitContext* %17, i32 %sub17), !dbg !10738
  %19 = load i32, i32* %filt, align 4, !dbg !10739
  %idxprom19 = sext i32 %19 to i64, !dbg !10740
  %20 = load i32, i32* %w, align 4, !dbg !10741
  %idxprom20 = sext i32 %20 to i64, !dbg !10740
  %21 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10740
  %length = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %21, i32 0, i32 2, !dbg !10742
  %arrayidx21 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %length, i64 0, i64 %idxprom20, !dbg !10740
  %arrayidx22 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx21, i64 0, i64 %idxprom19, !dbg !10740
  store i32 %call18, i32* %arrayidx22, align 4, !dbg !10743
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10744
  %23 = load i32, i32* %is8, align 4, !dbg !10746
  %mul23 = mul nsw i32 2, %23, !dbg !10747
  %sub24 = sub nsw i32 5, %mul23, !dbg !10748
  %call25 = call i32 @get_bits(%struct.GetBitContext* %22, i32 %sub24), !dbg !10749
  %24 = load i32, i32* %filt, align 4, !dbg !10750
  %idxprom26 = sext i32 %24 to i64, !dbg !10751
  %25 = load i32, i32* %w, align 4, !dbg !10752
  %idxprom27 = sext i32 %25 to i64, !dbg !10751
  %26 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10751
  %order = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %26, i32 0, i32 4, !dbg !10753
  %arrayidx28 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %order, i64 0, i64 %idxprom27, !dbg !10751
  %arrayidx29 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx28, i64 0, i64 %idxprom26, !dbg !10751
  store i32 %call25, i32* %arrayidx29, align 4, !dbg !10754
  %27 = load i32, i32* %tns_max_order, align 4, !dbg !10755
  %cmp30 = icmp sgt i32 %call25, %27, !dbg !10756
  br i1 %cmp30, label %if.then32, label %if.end, !dbg !10757

if.then32:                                        ; preds = %for.body16
  %28 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10758
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %28, i32 0, i32 1, !dbg !10760
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !10760
  %30 = bitcast %struct.AVCodecContext* %29 to i8*, !dbg !10758
  %31 = load i32, i32* %filt, align 4, !dbg !10761
  %idxprom33 = sext i32 %31 to i64, !dbg !10762
  %32 = load i32, i32* %w, align 4, !dbg !10763
  %idxprom34 = sext i32 %32 to i64, !dbg !10762
  %33 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10762
  %order35 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %33, i32 0, i32 4, !dbg !10764
  %arrayidx36 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %order35, i64 0, i64 %idxprom34, !dbg !10762
  %arrayidx37 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx36, i64 0, i64 %idxprom33, !dbg !10762
  %34 = load i32, i32* %arrayidx37, align 4, !dbg !10762
  %35 = load i32, i32* %tns_max_order, align 4, !dbg !10765
  call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.59, i32 0, i32 0), i32 %34, i32 %35), !dbg !10766
  %36 = load i32, i32* %filt, align 4, !dbg !10767
  %idxprom38 = sext i32 %36 to i64, !dbg !10768
  %37 = load i32, i32* %w, align 4, !dbg !10769
  %idxprom39 = sext i32 %37 to i64, !dbg !10768
  %38 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10768
  %order40 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %38, i32 0, i32 4, !dbg !10770
  %arrayidx41 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %order40, i64 0, i64 %idxprom39, !dbg !10768
  %arrayidx42 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx41, i64 0, i64 %idxprom38, !dbg !10768
  store i32 0, i32* %arrayidx42, align 4, !dbg !10771
  store i32 -1094995529, i32* %retval, align 4, !dbg !10772
  br label %return, !dbg !10772

if.end:                                           ; preds = %for.body16
  %39 = load i32, i32* %filt, align 4, !dbg !10773
  %idxprom43 = sext i32 %39 to i64, !dbg !10775
  %40 = load i32, i32* %w, align 4, !dbg !10776
  %idxprom44 = sext i32 %40 to i64, !dbg !10775
  %41 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10775
  %order45 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %41, i32 0, i32 4, !dbg !10777
  %arrayidx46 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %order45, i64 0, i64 %idxprom44, !dbg !10775
  %arrayidx47 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom43, !dbg !10775
  %42 = load i32, i32* %arrayidx47, align 4, !dbg !10775
  %tobool48 = icmp ne i32 %42, 0, !dbg !10775
  br i1 %tobool48, label %if.then49, label %if.end79, !dbg !10778

if.then49:                                        ; preds = %if.end
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10779
  %call50 = call i32 @get_bits1(%struct.GetBitContext* %43), !dbg !10781
  %44 = load i32, i32* %filt, align 4, !dbg !10782
  %idxprom51 = sext i32 %44 to i64, !dbg !10783
  %45 = load i32, i32* %w, align 4, !dbg !10784
  %idxprom52 = sext i32 %45 to i64, !dbg !10783
  %46 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10783
  %direction = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %46, i32 0, i32 3, !dbg !10785
  %arrayidx53 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %direction, i64 0, i64 %idxprom52, !dbg !10783
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx53, i64 0, i64 %idxprom51, !dbg !10783
  store i32 %call50, i32* %arrayidx54, align 4, !dbg !10786
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10787
  %call55 = call i32 @get_bits1(%struct.GetBitContext* %47), !dbg !10788
  store i32 %call55, i32* %coef_compress, align 4, !dbg !10789
  %48 = load i32, i32* %coef_res, align 4, !dbg !10790
  %add = add nsw i32 %48, 3, !dbg !10791
  %49 = load i32, i32* %coef_compress, align 4, !dbg !10792
  %sub56 = sub nsw i32 %add, %49, !dbg !10793
  store i32 %sub56, i32* %coef_len, align 4, !dbg !10794
  %50 = load i32, i32* %coef_compress, align 4, !dbg !10795
  %mul57 = mul nsw i32 2, %50, !dbg !10796
  %51 = load i32, i32* %coef_res, align 4, !dbg !10797
  %add58 = add nsw i32 %mul57, %51, !dbg !10798
  store i32 %add58, i32* %tmp2_idx, align 4, !dbg !10799
  store i32 0, i32* %i, align 4, !dbg !10800
  br label %for.cond59, !dbg !10802

for.cond59:                                       ; preds = %for.inc, %if.then49
  %52 = load i32, i32* %i, align 4, !dbg !10803
  %53 = load i32, i32* %filt, align 4, !dbg !10806
  %idxprom60 = sext i32 %53 to i64, !dbg !10807
  %54 = load i32, i32* %w, align 4, !dbg !10808
  %idxprom61 = sext i32 %54 to i64, !dbg !10807
  %55 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10807
  %order62 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %55, i32 0, i32 4, !dbg !10809
  %arrayidx63 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %order62, i64 0, i64 %idxprom61, !dbg !10807
  %arrayidx64 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx63, i64 0, i64 %idxprom60, !dbg !10807
  %56 = load i32, i32* %arrayidx64, align 4, !dbg !10807
  %cmp65 = icmp slt i32 %52, %56, !dbg !10810
  br i1 %cmp65, label %for.body67, label %for.end, !dbg !10811

for.body67:                                       ; preds = %for.cond59
  %57 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10812
  %58 = load i32, i32* %coef_len, align 4, !dbg !10813
  %call68 = call i32 @get_bits(%struct.GetBitContext* %57, i32 %58), !dbg !10814
  %idxprom69 = zext i32 %call68 to i64, !dbg !10815
  %59 = load i32, i32* %tmp2_idx, align 4, !dbg !10816
  %idxprom70 = sext i32 %59 to i64, !dbg !10815
  %arrayidx71 = getelementptr inbounds [4 x i32*], [4 x i32*]* @tns_tmp2_map, i64 0, i64 %idxprom70, !dbg !10815
  %60 = load i32*, i32** %arrayidx71, align 8, !dbg !10815
  %arrayidx72 = getelementptr inbounds i32, i32* %60, i64 %idxprom69, !dbg !10815
  %61 = load i32, i32* %arrayidx72, align 4, !dbg !10815
  %62 = load i32, i32* %i, align 4, !dbg !10817
  %idxprom73 = sext i32 %62 to i64, !dbg !10818
  %63 = load i32, i32* %filt, align 4, !dbg !10819
  %idxprom74 = sext i32 %63 to i64, !dbg !10818
  %64 = load i32, i32* %w, align 4, !dbg !10820
  %idxprom75 = sext i32 %64 to i64, !dbg !10818
  %65 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10818
  %coef = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %65, i32 0, i32 6, !dbg !10821
  %arrayidx76 = getelementptr inbounds [8 x [4 x [20 x i32]]], [8 x [4 x [20 x i32]]]* %coef, i64 0, i64 %idxprom75, !dbg !10818
  %arrayidx77 = getelementptr inbounds [4 x [20 x i32]], [4 x [20 x i32]]* %arrayidx76, i64 0, i64 %idxprom74, !dbg !10818
  %arrayidx78 = getelementptr inbounds [20 x i32], [20 x i32]* %arrayidx77, i64 0, i64 %idxprom73, !dbg !10818
  store i32 %61, i32* %arrayidx78, align 4, !dbg !10822
  br label %for.inc, !dbg !10818

for.inc:                                          ; preds = %for.body67
  %66 = load i32, i32* %i, align 4, !dbg !10823
  %inc = add nsw i32 %66, 1, !dbg !10823
  store i32 %inc, i32* %i, align 4, !dbg !10823
  br label %for.cond59, !dbg !10825, !llvm.loop !10826

for.end:                                          ; preds = %for.cond59
  br label %if.end79, !dbg !10828

if.end79:                                         ; preds = %for.end, %if.end
  br label %for.inc80, !dbg !10829

for.inc80:                                        ; preds = %if.end79
  %67 = load i32, i32* %filt, align 4, !dbg !10830
  %inc81 = add nsw i32 %67, 1, !dbg !10830
  store i32 %inc81, i32* %filt, align 4, !dbg !10830
  br label %for.cond10, !dbg !10832, !llvm.loop !10833

for.end82:                                        ; preds = %for.cond10
  br label %if.end83, !dbg !10835

if.end83:                                         ; preds = %for.end82, %for.body
  br label %for.inc84, !dbg !10836

for.inc84:                                        ; preds = %if.end83
  %68 = load i32, i32* %w, align 4, !dbg !10837
  %inc85 = add nsw i32 %68, 1, !dbg !10837
  store i32 %inc85, i32* %w, align 4, !dbg !10837
  br label %for.cond, !dbg !10839, !llvm.loop !10840

for.end86:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10842
  br label %return, !dbg !10842

return:                                           ; preds = %for.end86, %if.then32
  %69 = load i32, i32* %retval, align 4, !dbg !10843
  ret i32 %69, !dbg !10843
}

; Function Attrs: nounwind uwtable
define internal void @decode_gain_control(%struct.SingleChannelElement* %sce, %struct.GetBitContext* %gb) #1 !dbg !1903 {
entry:
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %mode = alloca i32, align 4
  %bd = alloca i8, align 1
  %wd = alloca i8, align 1
  %ad = alloca i8, align 1
  %max_band = alloca i8, align 1
  %adjust_num = alloca i8, align 1
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !10844, metadata !2068), !dbg !10845
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10846, metadata !2068), !dbg !10847
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !10848, metadata !2068), !dbg !10849
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !10850
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !10851
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 1, !dbg !10852
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !10850
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10850
  store i32 %1, i32* %mode, align 4, !dbg !10849
  call void @llvm.dbg.declare(metadata i8* %bd, metadata !10853, metadata !2068), !dbg !10854
  call void @llvm.dbg.declare(metadata i8* %wd, metadata !10855, metadata !2068), !dbg !10856
  call void @llvm.dbg.declare(metadata i8* %ad, metadata !10857, metadata !2068), !dbg !10858
  call void @llvm.dbg.declare(metadata i8* %max_band, metadata !10859, metadata !2068), !dbg !10860
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10861
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 2), !dbg !10862
  %conv = trunc i32 %call to i8, !dbg !10862
  store i8 %conv, i8* %max_band, align 1, !dbg !10860
  store i8 0, i8* %bd, align 1, !dbg !10863
  br label %for.cond, !dbg !10865

for.cond:                                         ; preds = %for.inc34, %entry
  %3 = load i8, i8* %bd, align 1, !dbg !10866
  %conv1 = zext i8 %3 to i32, !dbg !10866
  %4 = load i8, i8* %max_band, align 1, !dbg !10869
  %conv2 = zext i8 %4 to i32, !dbg !10869
  %cmp = icmp slt i32 %conv1, %conv2, !dbg !10870
  br i1 %cmp, label %for.body, label %for.end36, !dbg !10871

for.body:                                         ; preds = %for.cond
  store i8 0, i8* %wd, align 1, !dbg !10872
  br label %for.cond4, !dbg !10875

for.cond4:                                        ; preds = %for.inc31, %for.body
  %5 = load i8, i8* %wd, align 1, !dbg !10876
  %conv5 = zext i8 %5 to i32, !dbg !10876
  %6 = load i32, i32* %mode, align 4, !dbg !10879
  %idxprom = sext i32 %6 to i64, !dbg !10880
  %arrayidx6 = getelementptr inbounds [4 x [3 x i8]], [4 x [3 x i8]]* @decode_gain_control.gain_mode, i64 0, i64 %idxprom, !dbg !10880
  %arrayidx7 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx6, i64 0, i64 0, !dbg !10880
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !10880
  %conv8 = zext i8 %7 to i32, !dbg !10880
  %cmp9 = icmp slt i32 %conv5, %conv8, !dbg !10881
  br i1 %cmp9, label %for.body11, label %for.end33, !dbg !10882

for.body11:                                       ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata i8* %adjust_num, metadata !10883, metadata !2068), !dbg !10885
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10886
  %call12 = call i32 @get_bits(%struct.GetBitContext* %8, i32 3), !dbg !10887
  %conv13 = trunc i32 %call12 to i8, !dbg !10887
  store i8 %conv13, i8* %adjust_num, align 1, !dbg !10885
  store i8 0, i8* %ad, align 1, !dbg !10888
  br label %for.cond14, !dbg !10890

for.cond14:                                       ; preds = %for.inc, %for.body11
  %9 = load i8, i8* %ad, align 1, !dbg !10891
  %conv15 = zext i8 %9 to i32, !dbg !10891
  %10 = load i8, i8* %adjust_num, align 1, !dbg !10894
  %conv16 = zext i8 %10 to i32, !dbg !10894
  %cmp17 = icmp slt i32 %conv15, %conv16, !dbg !10895
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !10896

for.body19:                                       ; preds = %for.cond14
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10897
  %12 = load i8, i8* %wd, align 1, !dbg !10899
  %conv20 = zext i8 %12 to i32, !dbg !10899
  %cmp21 = icmp eq i32 %conv20, 0, !dbg !10900
  br i1 %cmp21, label %land.lhs.true, label %cond.false, !dbg !10901

land.lhs.true:                                    ; preds = %for.body19
  %13 = load i32, i32* %mode, align 4, !dbg !10902
  %idxprom23 = sext i32 %13 to i64, !dbg !10904
  %arrayidx24 = getelementptr inbounds [4 x [3 x i8]], [4 x [3 x i8]]* @decode_gain_control.gain_mode, i64 0, i64 %idxprom23, !dbg !10904
  %arrayidx25 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx24, i64 0, i64 1, !dbg !10904
  %14 = load i8, i8* %arrayidx25, align 1, !dbg !10904
  %conv26 = zext i8 %14 to i32, !dbg !10904
  %tobool = icmp ne i32 %conv26, 0, !dbg !10904
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10905

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !10906

cond.false:                                       ; preds = %land.lhs.true, %for.body19
  %15 = load i32, i32* %mode, align 4, !dbg !10908
  %idxprom27 = sext i32 %15 to i64, !dbg !10909
  %arrayidx28 = getelementptr inbounds [4 x [3 x i8]], [4 x [3 x i8]]* @decode_gain_control.gain_mode, i64 0, i64 %idxprom27, !dbg !10909
  %arrayidx29 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx28, i64 0, i64 2, !dbg !10909
  %16 = load i8, i8* %arrayidx29, align 1, !dbg !10909
  %conv30 = zext i8 %16 to i32, !dbg !10909
  br label %cond.end, !dbg !10910

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 4, %cond.true ], [ %conv30, %cond.false ], !dbg !10912
  %add = add nsw i32 4, %cond, !dbg !10914
  call void @skip_bits(%struct.GetBitContext* %11, i32 %add), !dbg !10915
  br label %for.inc, !dbg !10916

for.inc:                                          ; preds = %cond.end
  %17 = load i8, i8* %ad, align 1, !dbg !10917
  %inc = add i8 %17, 1, !dbg !10917
  store i8 %inc, i8* %ad, align 1, !dbg !10917
  br label %for.cond14, !dbg !10919, !llvm.loop !10920

for.end:                                          ; preds = %for.cond14
  br label %for.inc31, !dbg !10922

for.inc31:                                        ; preds = %for.end
  %18 = load i8, i8* %wd, align 1, !dbg !10923
  %inc32 = add i8 %18, 1, !dbg !10923
  store i8 %inc32, i8* %wd, align 1, !dbg !10923
  br label %for.cond4, !dbg !10925, !llvm.loop !10926

for.end33:                                        ; preds = %for.cond4
  br label %for.inc34, !dbg !10928

for.inc34:                                        ; preds = %for.end33
  %19 = load i8, i8* %bd, align 1, !dbg !10929
  %inc35 = add i8 %19, 1, !dbg !10929
  store i8 %inc35, i8* %bd, align 1, !dbg !10929
  br label %for.cond, !dbg !10931, !llvm.loop !10932

for.end36:                                        ; preds = %for.cond
  ret void, !dbg !10934
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_spectrum_and_dequant(%struct.AACContext* %ac, i32* %coef, %struct.GetBitContext* %gb, i32* %sf, i32 %pulse_present, %struct.Pulse* %pulse, %struct.IndividualChannelStream* %ics, i32* %band_type) #1 !dbg !10935 {
entry:
  %x.addr.i897 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i897, metadata !6135, metadata !2068), !dbg !10940
  %x.addr.i882 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i882, metadata !6135, metadata !2068), !dbg !10960
  %x.addr.i867 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i867, metadata !6135, metadata !2068), !dbg !10966
  %x.addr.i852 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i852, metadata !6135, metadata !2068), !dbg !10968
  %x.addr.i837 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i837, metadata !6135, metadata !2068), !dbg !10974
  %x.addr.i822 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i822, metadata !6135, metadata !2068), !dbg !10984
  %x.addr.i807 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i807, metadata !6135, metadata !2068), !dbg !10986
  %x.addr.i792 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i792, metadata !6135, metadata !2068), !dbg !10993
  %x.addr.i777 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i777, metadata !6135, metadata !2068), !dbg !11003
  %x.addr.i762 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i762, metadata !6135, metadata !2068), !dbg !11005
  %x.addr.i759 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i759, metadata !6135, metadata !2068), !dbg !11015
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !11017, metadata !2068), !dbg !11021
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !11027, metadata !2068), !dbg !11028
  %retval1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %retval1.i, metadata !11029, metadata !2068), !dbg !11030
  %bit_mask.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_mask.i, metadata !11031, metadata !2068), !dbg !11032
  %guess.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %guess.i, metadata !11033, metadata !2068), !dbg !11034
  %square.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %square.i, metadata !11035, metadata !2068), !dbg !11036
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !11037, metadata !2068), !dbg !11038
  %accu.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %accu.i, metadata !11039, metadata !2068), !dbg !11040
  %shift1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift1.i, metadata !11041, metadata !2068), !dbg !11042
  %shift2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift2.i, metadata !11043, metadata !2068), !dbg !11044
  %previous_val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %previous_val.addr.i, metadata !11045, metadata !2068), !dbg !11049
  %v.i = alloca %union.anon.0, align 4
  call void @llvm.dbg.declare(metadata %union.anon.0* %v.i, metadata !11054, metadata !2068), !dbg !11059
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %coef.addr = alloca i32*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %sf.addr = alloca i32*, align 8
  %pulse_present.addr = alloca i32, align 4
  %pulse.addr = alloca %struct.Pulse*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %band_type.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %g = alloca i32, align 4
  %idx = alloca i32, align 4
  %c = alloca i32, align 4
  %offsets = alloca i16*, align 8
  %coef_base = alloca i32*, align 8
  %g_len = alloca i32, align 4
  %cbt_m1 = alloca i32, align 4
  %cfo = alloca i32*, align 8
  %off_len = alloca i32, align 4
  %group = alloca i32, align 4
  %band_energy = alloca i32, align 4
  %cb_vector_idx = alloca i16*, align 8
  %vlc_tab = alloca [2 x i16]*, align 8
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  %cf = alloca i32*, align 8
  %len = alloca i32, align 4
  %code = alloca i32, align 4
  %cb_idx = alloca i32, align 4
  %n = alloca i32, align 4
  %nb_bits = alloca i32, align 4
  %index91 = alloca i32, align 4
  %cf154 = alloca i32*, align 8
  %len155 = alloca i32, align 4
  %code157 = alloca i32, align 4
  %nnz = alloca i32, align 4
  %cb_idx158 = alloca i32, align 4
  %bits = alloca i32, align 4
  %n168 = alloca i32, align 4
  %nb_bits169 = alloca i32, align 4
  %index170 = alloca i32, align 4
  %cf258 = alloca i32*, align 8
  %len259 = alloca i32, align 4
  %code261 = alloca i32, align 4
  %cb_idx262 = alloca i32, align 4
  %n272 = alloca i32, align 4
  %nb_bits273 = alloca i32, align 4
  %index274 = alloca i32, align 4
  %cf347 = alloca i32*, align 8
  %len348 = alloca i32, align 4
  %code350 = alloca i32, align 4
  %nnz351 = alloca i32, align 4
  %cb_idx352 = alloca i32, align 4
  %sign = alloca i32, align 4
  %n362 = alloca i32, align 4
  %nb_bits363 = alloca i32, align 4
  %index364 = alloca i32, align 4
  %icf = alloca i32*, align 8
  %v = alloca i32, align 4
  %len455 = alloca i32, align 4
  %code457 = alloca i32, align 4
  %nzt = alloca i32, align 4
  %nnz458 = alloca i32, align 4
  %cb_idx459 = alloca i32, align 4
  %bits460 = alloca i32, align 4
  %j = alloca i32, align 4
  %n470 = alloca i32, align 4
  %nb_bits471 = alloca i32, align 4
  %index472 = alloca i32, align 4
  %b = alloca i32, align 4
  %n557 = alloca i32, align 4
  %co = alloca i32, align 4
  %ico = alloca i32, align 4
  %g_len701 = alloca i32, align 4
  %cbt_m1712 = alloca i32, align 4
  %cfo716 = alloca i32*, align 8
  %off_len722 = alloca i32, align 4
  %group731 = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !11060, metadata !2068), !dbg !11061
  store i32* %coef, i32** %coef.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %coef.addr, metadata !11062, metadata !2068), !dbg !11063
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !11064, metadata !2068), !dbg !11065
  store i32* %sf, i32** %sf.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %sf.addr, metadata !11066, metadata !2068), !dbg !11067
  store i32 %pulse_present, i32* %pulse_present.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pulse_present.addr, metadata !11068, metadata !2068), !dbg !11069
  store %struct.Pulse* %pulse, %struct.Pulse** %pulse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Pulse** %pulse.addr, metadata !11070, metadata !2068), !dbg !11071
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !11072, metadata !2068), !dbg !11073
  store i32* %band_type, i32** %band_type.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_type.addr, metadata !11074, metadata !2068), !dbg !11075
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11076, metadata !2068), !dbg !11077
  call void @llvm.dbg.declare(metadata i32* %k, metadata !11078, metadata !2068), !dbg !11079
  call void @llvm.dbg.declare(metadata i32* %g, metadata !11080, metadata !2068), !dbg !11081
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !11082, metadata !2068), !dbg !11083
  store i32 0, i32* %idx, align 4, !dbg !11083
  call void @llvm.dbg.declare(metadata i32* %c, metadata !11084, metadata !2068), !dbg !11085
  %0 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !11086
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %0, i32 0, i32 9, !dbg !11087
  %1 = load i32, i32* %num_windows, align 4, !dbg !11087
  %div = sdiv i32 1024, %1, !dbg !11088
  store i32 %div, i32* %c, align 4, !dbg !11085
  call void @llvm.dbg.declare(metadata i16** %offsets, metadata !11089, metadata !2068), !dbg !11090
  %2 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !11091
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %2, i32 0, i32 6, !dbg !11092
  %3 = load i16*, i16** %swb_offset, align 8, !dbg !11092
  store i16* %3, i16** %offsets, align 8, !dbg !11090
  call void @llvm.dbg.declare(metadata i32** %coef_base, metadata !11093, metadata !2068), !dbg !11094
  %4 = load i32*, i32** %coef.addr, align 8, !dbg !11095
  store i32* %4, i32** %coef_base, align 8, !dbg !11094
  store i32 0, i32* %g, align 4, !dbg !11096
  br label %for.cond, !dbg !11098

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %g, align 4, !dbg !11099
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !11102
  %num_windows1 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 9, !dbg !11103
  %7 = load i32, i32* %num_windows1, align 4, !dbg !11103
  %cmp = icmp slt i32 %5, %7, !dbg !11104
  br i1 %cmp, label %for.body, label %for.end, !dbg !11105

for.body:                                         ; preds = %for.cond
  %8 = load i32*, i32** %coef.addr, align 8, !dbg !11106
  %9 = load i32, i32* %g, align 4, !dbg !11107
  %mul = mul nsw i32 %9, 128, !dbg !11108
  %idx.ext = sext i32 %mul to i64, !dbg !11109
  %add.ptr = getelementptr inbounds i32, i32* %8, i64 %idx.ext, !dbg !11109
  %10 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !11110
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %10, i32 0, i32 0, !dbg !11111
  %11 = load i8, i8* %max_sfb, align 8, !dbg !11111
  %idxprom = zext i8 %11 to i64, !dbg !11112
  %12 = load i16*, i16** %offsets, align 8, !dbg !11112
  %arrayidx = getelementptr inbounds i16, i16* %12, i64 %idxprom, !dbg !11112
  %13 = load i16, i16* %arrayidx, align 2, !dbg !11112
  %conv = zext i16 %13 to i32, !dbg !11112
  %idx.ext2 = sext i32 %conv to i64, !dbg !11113
  %add.ptr3 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext2, !dbg !11113
  %14 = bitcast i32* %add.ptr3 to i8*, !dbg !11114
  %15 = load i32, i32* %c, align 4, !dbg !11115
  %16 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !11116
  %max_sfb4 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %16, i32 0, i32 0, !dbg !11117
  %17 = load i8, i8* %max_sfb4, align 8, !dbg !11117
  %idxprom5 = zext i8 %17 to i64, !dbg !11118
  %18 = load i16*, i16** %offsets, align 8, !dbg !11118
  %arrayidx6 = getelementptr inbounds i16, i16* %18, i64 %idxprom5, !dbg !11118
  %19 = load i16, i16* %arrayidx6, align 2, !dbg !11118
  %conv7 = zext i16 %19 to i32, !dbg !11118
  %sub = sub nsw i32 %15, %conv7, !dbg !11119
  %conv8 = sext i32 %sub to i64, !dbg !11120
  %mul9 = mul i64 4, %conv8, !dbg !11121
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 %mul9, i32 4, i1 false), !dbg !11114
  br label %for.inc, !dbg !11114

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %g, align 4, !dbg !11122
  %inc = add nsw i32 %20, 1, !dbg !11122
  store i32 %inc, i32* %g, align 4, !dbg !11122
  br label %for.cond, !dbg !11124, !llvm.loop !11125

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %g, align 4, !dbg !11127
  br label %for.cond10, !dbg !11128

for.cond10:                                       ; preds = %for.inc641, %for.end
  %21 = load i32, i32* %g, align 4, !dbg !11129
  %22 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !11131
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %22, i32 0, i32 3, !dbg !11132
  %23 = load i32, i32* %num_window_groups, align 8, !dbg !11132
  %cmp11 = icmp slt i32 %21, %23, !dbg !11133
  br i1 %cmp11, label %for.body13, label %for.end643, !dbg !11134

for.body13:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i32* %g_len, metadata !11135, metadata !2068), !dbg !11136
  %24 = load i32, i32* %g, align 4, !dbg !11137
  %idxprom14 = sext i32 %24 to i64, !dbg !11138
  %25 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !11138
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %25, i32 0, i32 4, !dbg !11139
  %arrayidx15 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom14, !dbg !11138
  %26 = load i8, i8* %arrayidx15, align 1, !dbg !11138
  %conv16 = zext i8 %26 to i32, !dbg !11138
  store i32 %conv16, i32* %g_len, align 4, !dbg !11136
  store i32 0, i32* %i, align 4, !dbg !11140
  br label %for.cond17, !dbg !11141

for.cond17:                                       ; preds = %for.inc634, %for.body13
  %27 = load i32, i32* %i, align 4, !dbg !11142
  %28 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !11144
  %max_sfb18 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %28, i32 0, i32 0, !dbg !11145
  %29 = load i8, i8* %max_sfb18, align 8, !dbg !11145
  %conv19 = zext i8 %29 to i32, !dbg !11144
  %cmp20 = icmp slt i32 %27, %conv19, !dbg !11146
  br i1 %cmp20, label %for.body22, label %for.end637, !dbg !11147

for.body22:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata i32* %cbt_m1, metadata !11148, metadata !2068), !dbg !11150
  %30 = load i32, i32* %idx, align 4, !dbg !11151
  %idxprom23 = sext i32 %30 to i64, !dbg !11152
  %31 = load i32*, i32** %band_type.addr, align 8, !dbg !11152
  %arrayidx24 = getelementptr inbounds i32, i32* %31, i64 %idxprom23, !dbg !11152
  %32 = load i32, i32* %arrayidx24, align 4, !dbg !11152
  %sub25 = sub i32 %32, 1, !dbg !11153
  store i32 %sub25, i32* %cbt_m1, align 4, !dbg !11150
  call void @llvm.dbg.declare(metadata i32** %cfo, metadata !11154, metadata !2068), !dbg !11155
  %33 = load i32*, i32** %coef.addr, align 8, !dbg !11156
  %34 = load i32, i32* %i, align 4, !dbg !11157
  %idxprom26 = sext i32 %34 to i64, !dbg !11158
  %35 = load i16*, i16** %offsets, align 8, !dbg !11158
  %arrayidx27 = getelementptr inbounds i16, i16* %35, i64 %idxprom26, !dbg !11158
  %36 = load i16, i16* %arrayidx27, align 2, !dbg !11158
  %conv28 = zext i16 %36 to i32, !dbg !11158
  %idx.ext29 = sext i32 %conv28 to i64, !dbg !11159
  %add.ptr30 = getelementptr inbounds i32, i32* %33, i64 %idx.ext29, !dbg !11159
  store i32* %add.ptr30, i32** %cfo, align 8, !dbg !11155
  call void @llvm.dbg.declare(metadata i32* %off_len, metadata !11160, metadata !2068), !dbg !11161
  %37 = load i32, i32* %i, align 4, !dbg !11162
  %add = add nsw i32 %37, 1, !dbg !11163
  %idxprom31 = sext i32 %add to i64, !dbg !11164
  %38 = load i16*, i16** %offsets, align 8, !dbg !11164
  %arrayidx32 = getelementptr inbounds i16, i16* %38, i64 %idxprom31, !dbg !11164
  %39 = load i16, i16* %arrayidx32, align 2, !dbg !11164
  %conv33 = zext i16 %39 to i32, !dbg !11164
  %40 = load i32, i32* %i, align 4, !dbg !11165
  %idxprom34 = sext i32 %40 to i64, !dbg !11166
  %41 = load i16*, i16** %offsets, align 8, !dbg !11166
  %arrayidx35 = getelementptr inbounds i16, i16* %41, i64 %idxprom34, !dbg !11166
  %42 = load i16, i16* %arrayidx35, align 2, !dbg !11166
  %conv36 = zext i16 %42 to i32, !dbg !11166
  %sub37 = sub nsw i32 %conv33, %conv36, !dbg !11167
  store i32 %sub37, i32* %off_len, align 4, !dbg !11161
  call void @llvm.dbg.declare(metadata i32* %group, metadata !11168, metadata !2068), !dbg !11169
  %43 = load i32, i32* %cbt_m1, align 4, !dbg !11170
  %cmp38 = icmp uge i32 %43, 13, !dbg !11171
  br i1 %cmp38, label %if.then, label %if.else, !dbg !11172

if.then:                                          ; preds = %for.body22
  store i32 0, i32* %group, align 4, !dbg !11173
  br label %for.cond40, !dbg !11176

for.cond40:                                       ; preds = %for.inc46, %if.then
  %44 = load i32, i32* %group, align 4, !dbg !11177
  %45 = load i32, i32* %g_len, align 4, !dbg !11180
  %cmp41 = icmp slt i32 %44, %45, !dbg !11181
  br i1 %cmp41, label %for.body43, label %for.end49, !dbg !11182

for.body43:                                       ; preds = %for.cond40
  %46 = load i32*, i32** %cfo, align 8, !dbg !11183
  %47 = bitcast i32* %46 to i8*, !dbg !11185
  %48 = load i32, i32* %off_len, align 4, !dbg !11186
  %conv44 = sext i32 %48 to i64, !dbg !11186
  %mul45 = mul i64 %conv44, 4, !dbg !11187
  call void @llvm.memset.p0i8.i64(i8* %47, i8 0, i64 %mul45, i32 4, i1 false), !dbg !11185
  br label %for.inc46, !dbg !11188

for.inc46:                                        ; preds = %for.body43
  %49 = load i32, i32* %group, align 4, !dbg !11189
  %inc47 = add nsw i32 %49, 1, !dbg !11189
  store i32 %inc47, i32* %group, align 4, !dbg !11189
  %50 = load i32*, i32** %cfo, align 8, !dbg !11191
  %add.ptr48 = getelementptr inbounds i32, i32* %50, i64 128, !dbg !11191
  store i32* %add.ptr48, i32** %cfo, align 8, !dbg !11191
  br label %for.cond40, !dbg !11192, !llvm.loop !11193

for.end49:                                        ; preds = %for.cond40
  br label %if.end633, !dbg !11195

if.else:                                          ; preds = %for.body22
  %51 = load i32, i32* %cbt_m1, align 4, !dbg !11196
  %cmp50 = icmp eq i32 %51, 12, !dbg !11198
  br i1 %cmp50, label %if.then52, label %if.else76, !dbg !11196

if.then52:                                        ; preds = %if.else
  store i32 0, i32* %group, align 4, !dbg !11199
  br label %for.cond53, !dbg !11200

for.cond53:                                       ; preds = %for.inc72, %if.then52
  %52 = load i32, i32* %group, align 4, !dbg !11201
  %53 = load i32, i32* %g_len, align 4, !dbg !11203
  %cmp54 = icmp slt i32 %52, %53, !dbg !11204
  br i1 %cmp54, label %for.body56, label %for.end75, !dbg !11205

for.body56:                                       ; preds = %for.cond53
  call void @llvm.dbg.declare(metadata i32* %band_energy, metadata !11206, metadata !2068), !dbg !11207
  store i32 0, i32* %k, align 4, !dbg !11208
  br label %for.cond57, !dbg !11209

for.cond57:                                       ; preds = %for.inc65, %for.body56
  %54 = load i32, i32* %k, align 4, !dbg !11210
  %55 = load i32, i32* %off_len, align 4, !dbg !11212
  %cmp58 = icmp slt i32 %54, %55, !dbg !11213
  br i1 %cmp58, label %for.body60, label %for.end67, !dbg !11214

for.body60:                                       ; preds = %for.cond57
  %56 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11215
  %random_state = getelementptr inbounds %struct.AACContext, %struct.AACContext* %56, i32 0, i32 15, !dbg !11216
  %57 = load i32, i32* %random_state, align 8, !dbg !11216
  store i32 %57, i32* %previous_val.addr.i, align 4, !dbg !11217
  %u.i = bitcast %union.anon.0* %v.i to i32*, !dbg !11218
  %58 = load i32, i32* %previous_val.addr.i, align 4, !dbg !11219
  %mul.i = mul i32 %58, 1664525, !dbg !11220
  %add.i = add i32 %mul.i, 1013904223, !dbg !11221
  store i32 %add.i, i32* %u.i, align 4, !dbg !11218
  %s.i = bitcast %union.anon.0* %v.i to i32*, !dbg !11222
  %59 = load i32, i32* %s.i, align 4, !dbg !11222
  %60 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11223
  %random_state61 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %60, i32 0, i32 15, !dbg !11224
  store i32 %59, i32* %random_state61, align 8, !dbg !11225
  %61 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11226
  %random_state62 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %61, i32 0, i32 15, !dbg !11227
  %62 = load i32, i32* %random_state62, align 8, !dbg !11227
  %shr = ashr i32 %62, 3, !dbg !11228
  %63 = load i32, i32* %k, align 4, !dbg !11229
  %idxprom63 = sext i32 %63 to i64, !dbg !11230
  %64 = load i32*, i32** %cfo, align 8, !dbg !11230
  %arrayidx64 = getelementptr inbounds i32, i32* %64, i64 %idxprom63, !dbg !11230
  store i32 %shr, i32* %arrayidx64, align 4, !dbg !11231
  br label %for.inc65, !dbg !11232

for.inc65:                                        ; preds = %for.body60
  %65 = load i32, i32* %k, align 4, !dbg !11233
  %inc66 = add nsw i32 %65, 1, !dbg !11233
  store i32 %inc66, i32* %k, align 4, !dbg !11233
  br label %for.cond57, !dbg !11235, !llvm.loop !11236

for.end67:                                        ; preds = %for.cond57
  %66 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11238
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %66, i32 0, i32 14, !dbg !11239
  %67 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp, align 32, !dbg !11239
  %scalarproduct_fixed = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %67, i32 0, i32 5, !dbg !11240
  %68 = load i32 (i32*, i32*, i32)*, i32 (i32*, i32*, i32)** %scalarproduct_fixed, align 8, !dbg !11240
  %69 = load i32*, i32** %cfo, align 8, !dbg !11241
  %70 = load i32*, i32** %cfo, align 8, !dbg !11242
  %71 = load i32, i32* %off_len, align 4, !dbg !11243
  %call68 = call i32 %68(i32* %69, i32* %70, i32 %71), !dbg !11238
  store i32 %call68, i32* %band_energy, align 4, !dbg !11244
  %72 = load i32, i32* %band_energy, align 4, !dbg !11245
  store i32 %72, i32* %x.addr.i, align 4, !dbg !11246
  store i32 31, i32* %bits.addr.i, align 4, !dbg !11246
  %73 = load i32, i32* %bits.addr.i, align 4, !dbg !11247
  %sub.i = sub nsw i32 30, %73, !dbg !11248
  store i32 %sub.i, i32* %shift1.i, align 4, !dbg !11042
  %74 = load i32, i32* %bits.addr.i, align 4, !dbg !11249
  %sub2.i = sub nsw i32 %74, 15, !dbg !11250
  store i32 %sub2.i, i32* %shift2.i, align 4, !dbg !11044
  %75 = load i32, i32* %shift1.i, align 4, !dbg !11251
  %cmp.i = icmp sgt i32 %75, 0, !dbg !11253
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !11254

if.then.i:                                        ; preds = %for.end67
  %76 = load i32, i32* %x.addr.i, align 4, !dbg !11255
  %77 = load i32, i32* %shift1.i, align 4, !dbg !11257
  %shl.i = shl i32 %76, %77, !dbg !11258
  %call.i = call i32 @ff_sqrt(i32 %shl.i) #2, !dbg !11259
  store i32 %call.i, i32* %retval1.i, align 4, !dbg !11260
  br label %if.end.i, !dbg !11261

if.else.i:                                        ; preds = %for.end67
  %78 = load i32, i32* %x.addr.i, align 4, !dbg !11262
  %79 = load i32, i32* %shift1.i, align 4, !dbg !11263
  %sub3.i = sub nsw i32 0, %79, !dbg !11264
  %shr.i = ashr i32 %78, %sub3.i, !dbg !11265
  %call4.i = call i32 @ff_sqrt(i32 %shr.i) #2, !dbg !11266
  store i32 %call4.i, i32* %retval1.i, align 4, !dbg !11267
  br label %if.end.i, !dbg !11246

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %80 = load i32, i32* %shift2.i, align 4, !dbg !11268
  %cmp5.i = icmp sgt i32 %80, 0, !dbg !11270
  br i1 %cmp5.i, label %if.then6.i, label %if.else22.i, !dbg !11271

if.then6.i:                                       ; preds = %if.end.i
  %81 = load i32, i32* %retval1.i, align 4, !dbg !11272
  %82 = load i32, i32* %shift2.i, align 4, !dbg !11274
  %shl7.i = shl i32 %81, %82, !dbg !11275
  store i32 %shl7.i, i32* %retval1.i, align 4, !dbg !11276
  %83 = load i32, i32* %shift2.i, align 4, !dbg !11277
  %sub8.i = sub nsw i32 %83, 1, !dbg !11278
  %shl9.i = shl i32 1, %sub8.i, !dbg !11279
  store i32 %shl9.i, i32* %bit_mask.i, align 4, !dbg !11280
  store i32 0, i32* %i.i, align 4, !dbg !11281
  br label %for.cond.i, !dbg !11283

for.cond.i:                                       ; preds = %if.end20.i, %if.then6.i
  %84 = load i32, i32* %i.i, align 4, !dbg !11284
  %85 = load i32, i32* %shift2.i, align 4, !dbg !11287
  %cmp10.i = icmp slt i32 %84, %85, !dbg !11288
  br i1 %cmp10.i, label %for.body.i, label %for.end.i, !dbg !11289

for.body.i:                                       ; preds = %for.cond.i
  %86 = load i32, i32* %retval1.i, align 4, !dbg !11290
  %87 = load i32, i32* %bit_mask.i, align 4, !dbg !11292
  %add.i757 = add nsw i32 %86, %87, !dbg !11293
  store i32 %add.i757, i32* %guess.i, align 4, !dbg !11294
  %88 = load i32, i32* %guess.i, align 4, !dbg !11295
  %conv.i = sext i32 %88 to i64, !dbg !11296
  %89 = load i32, i32* %guess.i, align 4, !dbg !11297
  %conv11.i = sext i32 %89 to i64, !dbg !11297
  %mul.i758 = mul nsw i64 %conv.i, %conv11.i, !dbg !11298
  store i64 %mul.i758, i64* %accu.i, align 8, !dbg !11299
  %90 = load i64, i64* %accu.i, align 8, !dbg !11300
  %91 = load i32, i32* %bit_mask.i, align 4, !dbg !11301
  %conv12.i = sext i32 %91 to i64, !dbg !11301
  %add13.i = add nsw i64 %90, %conv12.i, !dbg !11302
  %92 = load i32, i32* %bits.addr.i, align 4, !dbg !11303
  %sh_prom.i = zext i32 %92 to i64, !dbg !11304
  %shr14.i = ashr i64 %add13.i, %sh_prom.i, !dbg !11304
  %conv15.i = trunc i64 %shr14.i to i32, !dbg !11305
  store i32 %conv15.i, i32* %square.i, align 4, !dbg !11306
  %93 = load i32, i32* %x.addr.i, align 4, !dbg !11307
  %94 = load i32, i32* %square.i, align 4, !dbg !11309
  %cmp16.i = icmp sge i32 %93, %94, !dbg !11310
  br i1 %cmp16.i, label %if.then18.i, label %if.end20.i, !dbg !11311

if.then18.i:                                      ; preds = %for.body.i
  %95 = load i32, i32* %bit_mask.i, align 4, !dbg !11312
  %96 = load i32, i32* %retval1.i, align 4, !dbg !11313
  %add19.i = add nsw i32 %96, %95, !dbg !11313
  store i32 %add19.i, i32* %retval1.i, align 4, !dbg !11313
  br label %if.end20.i, !dbg !11314

if.end20.i:                                       ; preds = %if.then18.i, %for.body.i
  %97 = load i32, i32* %bit_mask.i, align 4, !dbg !11315
  %shr21.i = ashr i32 %97, 1, !dbg !11315
  store i32 %shr21.i, i32* %bit_mask.i, align 4, !dbg !11315
  %98 = load i32, i32* %i.i, align 4, !dbg !11316
  %inc.i = add nsw i32 %98, 1, !dbg !11316
  store i32 %inc.i, i32* %i.i, align 4, !dbg !11316
  br label %for.cond.i, !dbg !11318, !llvm.loop !11319

for.end.i:                                        ; preds = %for.cond.i
  br label %fixed_sqrt.exit, !dbg !11321

if.else22.i:                                      ; preds = %if.end.i
  %99 = load i32, i32* %shift2.i, align 4, !dbg !11322
  %sub23.i = sub nsw i32 0, %99, !dbg !11323
  %100 = load i32, i32* %retval1.i, align 4, !dbg !11324
  %shr24.i = ashr i32 %100, %sub23.i, !dbg !11324
  store i32 %shr24.i, i32* %retval1.i, align 4, !dbg !11324
  br label %fixed_sqrt.exit, !dbg !11246

fixed_sqrt.exit:                                  ; preds = %for.end.i, %if.else22.i
  %101 = load i32, i32* %retval1.i, align 4, !dbg !11325
  store i32 %101, i32* %band_energy, align 4, !dbg !11326
  %102 = load i32*, i32** %cfo, align 8, !dbg !11327
  %103 = load i32, i32* %idx, align 4, !dbg !11328
  %idxprom70 = sext i32 %103 to i64, !dbg !11329
  %104 = load i32*, i32** %sf.addr, align 8, !dbg !11329
  %arrayidx71 = getelementptr inbounds i32, i32* %104, i64 %idxprom70, !dbg !11329
  %105 = load i32, i32* %arrayidx71, align 4, !dbg !11329
  %106 = load i32, i32* %band_energy, align 4, !dbg !11330
  %107 = load i32, i32* %off_len, align 4, !dbg !11331
  call void @noise_scale(i32* %102, i32 %105, i32 %106, i32 %107), !dbg !11332
  br label %for.inc72, !dbg !11333

for.inc72:                                        ; preds = %fixed_sqrt.exit
  %108 = load i32, i32* %group, align 4, !dbg !11334
  %inc73 = add nsw i32 %108, 1, !dbg !11334
  store i32 %inc73, i32* %group, align 4, !dbg !11334
  %109 = load i32*, i32** %cfo, align 8, !dbg !11336
  %add.ptr74 = getelementptr inbounds i32, i32* %109, i64 128, !dbg !11336
  store i32* %add.ptr74, i32** %cfo, align 8, !dbg !11336
  br label %for.cond53, !dbg !11337, !llvm.loop !11338

for.end75:                                        ; preds = %for.cond53
  br label %if.end632, !dbg !11340

if.else76:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i16** %cb_vector_idx, metadata !11341, metadata !2068), !dbg !11342
  %110 = load i32, i32* %cbt_m1, align 4, !dbg !11343
  %idxprom77 = zext i32 %110 to i64, !dbg !11344
  %arrayidx78 = getelementptr inbounds [0 x i16*], [0 x i16*]* @ff_aac_codebook_vector_idx, i64 0, i64 %idxprom77, !dbg !11344
  %111 = load i16*, i16** %arrayidx78, align 8, !dbg !11344
  store i16* %111, i16** %cb_vector_idx, align 8, !dbg !11342
  call void @llvm.dbg.declare(metadata [2 x i16]** %vlc_tab, metadata !11345, metadata !2068), !dbg !11346
  %112 = load i32, i32* %cbt_m1, align 4, !dbg !11347
  %idxprom79 = zext i32 %112 to i64, !dbg !11348
  %arrayidx80 = getelementptr inbounds [11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 %idxprom79, !dbg !11348
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx80, i32 0, i32 1, !dbg !11349
  %113 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !11349
  store [2 x i16]* %113, [2 x i16]** %vlc_tab, align 8, !dbg !11346
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !11350, metadata !2068), !dbg !11351
  %114 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11352
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %114, i32 0, i32 2, !dbg !11353
  %115 = load i32, i32* %index, align 8, !dbg !11353
  store i32 %115, i32* %re_index, align 4, !dbg !11351
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !11354, metadata !2068), !dbg !11355
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !11356, metadata !2068), !dbg !11357
  %116 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11358
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %116, i32 0, i32 4, !dbg !11359
  %117 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !11359
  store i32 %117, i32* %re_size_plus8, align 4, !dbg !11357
  %118 = load i32, i32* %cbt_m1, align 4, !dbg !11360
  %shr81 = lshr i32 %118, 1, !dbg !11361
  switch i32 %shr81, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb149
    i32 2, label %sw.bb253
    i32 3, label %sw.bb342
    i32 4, label %sw.bb342
  ], !dbg !11362

sw.bb:                                            ; preds = %if.else76
  store i32 0, i32* %group, align 4, !dbg !11363
  br label %for.cond82, !dbg !11364

for.cond82:                                       ; preds = %for.inc145, %sw.bb
  %119 = load i32, i32* %group, align 4, !dbg !11365
  %120 = load i32, i32* %g_len, align 4, !dbg !11367
  %cmp83 = icmp slt i32 %119, %120, !dbg !11368
  br i1 %cmp83, label %for.body85, label %for.end148, !dbg !11369

for.body85:                                       ; preds = %for.cond82
  call void @llvm.dbg.declare(metadata i32** %cf, metadata !11370, metadata !2068), !dbg !11371
  %121 = load i32*, i32** %cfo, align 8, !dbg !11372
  store i32* %121, i32** %cf, align 8, !dbg !11371
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11373, metadata !2068), !dbg !11374
  %122 = load i32, i32* %off_len, align 4, !dbg !11375
  store i32 %122, i32* %len, align 4, !dbg !11374
  br label %do.body, !dbg !11376, !llvm.loop !11377

do.body:                                          ; preds = %do.cond, %for.body85
  call void @llvm.dbg.declare(metadata i32* %code, metadata !11378, metadata !2068), !dbg !11379
  call void @llvm.dbg.declare(metadata i32* %cb_idx, metadata !11380, metadata !2068), !dbg !11381
  %123 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11382
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %123, i32 0, i32 0, !dbg !11383
  %124 = load i8*, i8** %buffer, align 8, !dbg !11383
  %125 = load i32, i32* %re_index, align 4, !dbg !11384
  %shr86 = lshr i32 %125, 3, !dbg !11385
  %idx.ext87 = zext i32 %shr86 to i64, !dbg !11386
  %add.ptr88 = getelementptr inbounds i8, i8* %124, i64 %idx.ext87, !dbg !11386
  %126 = bitcast i8* %add.ptr88 to %union.unaligned_32*, !dbg !11387
  %l = bitcast %union.unaligned_32* %126 to i32*, !dbg !11387
  %127 = load i32, i32* %l, align 1, !dbg !11387
  store i32 %127, i32* %x.addr.i759, align 4, !dbg !11388
  %128 = load i32, i32* %x.addr.i759, align 4, !dbg !11389
  %shl.i760 = shl i32 %128, 8, !dbg !11390
  %and.i = and i32 %shl.i760, 65280, !dbg !11391
  %129 = load i32, i32* %x.addr.i759, align 4, !dbg !11392
  %shr.i761 = lshr i32 %129, 8, !dbg !11393
  %and1.i = and i32 %shr.i761, 255, !dbg !11394
  %or.i = or i32 %and.i, %and1.i, !dbg !11395
  %shl2.i = shl i32 %or.i, 16, !dbg !11396
  %130 = load i32, i32* %x.addr.i759, align 4, !dbg !11397
  %shr3.i = lshr i32 %130, 16, !dbg !11398
  %shl4.i = shl i32 %shr3.i, 8, !dbg !11399
  %and5.i = and i32 %shl4.i, 65280, !dbg !11400
  %131 = load i32, i32* %x.addr.i759, align 4, !dbg !11401
  %shr6.i = lshr i32 %131, 16, !dbg !11402
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !11403
  %and8.i = and i32 %shr7.i, 255, !dbg !11404
  %or9.i = or i32 %and5.i, %and8.i, !dbg !11405
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !11406
  %132 = load i32, i32* %re_index, align 4, !dbg !11407
  %and = and i32 %132, 7, !dbg !11408
  %shl = shl i32 %or10.i, %and, !dbg !11409
  store i32 %shl, i32* %re_cache, align 4, !dbg !11410
  br label %do.body90, !dbg !11411, !llvm.loop !11412

do.body90:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i32* %n, metadata !11413, metadata !2068), !dbg !11414
  call void @llvm.dbg.declare(metadata i32* %nb_bits, metadata !11415, metadata !2068), !dbg !11416
  call void @llvm.dbg.declare(metadata i32* %index91, metadata !11417, metadata !2068), !dbg !11418
  %133 = load i32, i32* %re_cache, align 4, !dbg !11419
  %call92 = call i32 @NEG_USR32(i32 %133, i8 signext 8), !dbg !11421
  store i32 %call92, i32* %index91, align 4, !dbg !11422
  %134 = load i32, i32* %index91, align 4, !dbg !11423
  %idxprom93 = zext i32 %134 to i64, !dbg !11424
  %135 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11424
  %arrayidx94 = getelementptr inbounds [2 x i16], [2 x i16]* %135, i64 %idxprom93, !dbg !11424
  %arrayidx95 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx94, i64 0, i64 0, !dbg !11424
  %136 = load i16, i16* %arrayidx95, align 2, !dbg !11424
  %conv96 = sext i16 %136 to i32, !dbg !11424
  store i32 %conv96, i32* %code, align 4, !dbg !11425
  %137 = load i32, i32* %index91, align 4, !dbg !11426
  %idxprom97 = zext i32 %137 to i64, !dbg !11427
  %138 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11427
  %arrayidx98 = getelementptr inbounds [2 x i16], [2 x i16]* %138, i64 %idxprom97, !dbg !11427
  %arrayidx99 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx98, i64 0, i64 1, !dbg !11427
  %139 = load i16, i16* %arrayidx99, align 2, !dbg !11427
  %conv100 = sext i16 %139 to i32, !dbg !11427
  store i32 %conv100, i32* %n, align 4, !dbg !11428
  %140 = load i32, i32* %n, align 4, !dbg !11429
  %cmp101 = icmp slt i32 %140, 0, !dbg !11430
  br i1 %cmp101, label %if.then103, label %if.end, !dbg !11431

if.then103:                                       ; preds = %do.body90
  %141 = load i32, i32* %re_size_plus8, align 4, !dbg !11432
  %142 = load i32, i32* %re_index, align 4, !dbg !11434
  %add104 = add i32 %142, 8, !dbg !11435
  %cmp105 = icmp ugt i32 %141, %add104, !dbg !11436
  br i1 %cmp105, label %cond.true, label %cond.false, !dbg !11437

cond.true:                                        ; preds = %if.then103
  %143 = load i32, i32* %re_index, align 4, !dbg !11438
  %add107 = add i32 %143, 8, !dbg !11440
  br label %cond.end, !dbg !11441

cond.false:                                       ; preds = %if.then103
  %144 = load i32, i32* %re_size_plus8, align 4, !dbg !11442
  br label %cond.end, !dbg !11444

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add107, %cond.true ], [ %144, %cond.false ], !dbg !11445
  store i32 %cond, i32* %re_index, align 4, !dbg !11446
  %145 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11447
  %buffer108 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %145, i32 0, i32 0, !dbg !11448
  %146 = load i8*, i8** %buffer108, align 8, !dbg !11448
  %147 = load i32, i32* %re_index, align 4, !dbg !11449
  %shr109 = lshr i32 %147, 3, !dbg !11450
  %idx.ext110 = zext i32 %shr109 to i64, !dbg !11451
  %add.ptr111 = getelementptr inbounds i8, i8* %146, i64 %idx.ext110, !dbg !11451
  %148 = bitcast i8* %add.ptr111 to %union.unaligned_32*, !dbg !11452
  %l112 = bitcast %union.unaligned_32* %148 to i32*, !dbg !11452
  %149 = load i32, i32* %l112, align 1, !dbg !11452
  store i32 %149, i32* %x.addr.i762, align 4, !dbg !11453
  %150 = load i32, i32* %x.addr.i762, align 4, !dbg !11454
  %shl.i763 = shl i32 %150, 8, !dbg !11455
  %and.i764 = and i32 %shl.i763, 65280, !dbg !11456
  %151 = load i32, i32* %x.addr.i762, align 4, !dbg !11457
  %shr.i765 = lshr i32 %151, 8, !dbg !11458
  %and1.i766 = and i32 %shr.i765, 255, !dbg !11459
  %or.i767 = or i32 %and.i764, %and1.i766, !dbg !11460
  %shl2.i768 = shl i32 %or.i767, 16, !dbg !11461
  %152 = load i32, i32* %x.addr.i762, align 4, !dbg !11462
  %shr3.i769 = lshr i32 %152, 16, !dbg !11463
  %shl4.i770 = shl i32 %shr3.i769, 8, !dbg !11464
  %and5.i771 = and i32 %shl4.i770, 65280, !dbg !11465
  %153 = load i32, i32* %x.addr.i762, align 4, !dbg !11466
  %shr6.i772 = lshr i32 %153, 16, !dbg !11467
  %shr7.i773 = lshr i32 %shr6.i772, 8, !dbg !11468
  %and8.i774 = and i32 %shr7.i773, 255, !dbg !11469
  %or9.i775 = or i32 %and5.i771, %and8.i774, !dbg !11470
  %or10.i776 = or i32 %shl2.i768, %or9.i775, !dbg !11471
  %154 = load i32, i32* %re_index, align 4, !dbg !11472
  %and114 = and i32 %154, 7, !dbg !11473
  %shl115 = shl i32 %or10.i776, %and114, !dbg !11474
  store i32 %shl115, i32* %re_cache, align 4, !dbg !11475
  %155 = load i32, i32* %n, align 4, !dbg !11476
  %sub116 = sub nsw i32 0, %155, !dbg !11477
  store i32 %sub116, i32* %nb_bits, align 4, !dbg !11478
  %156 = load i32, i32* %re_cache, align 4, !dbg !11479
  %157 = load i32, i32* %nb_bits, align 4, !dbg !11480
  %conv117 = trunc i32 %157 to i8, !dbg !11480
  %call118 = call i32 @NEG_USR32(i32 %156, i8 signext %conv117), !dbg !11481
  %158 = load i32, i32* %code, align 4, !dbg !11483
  %add119 = add i32 %call118, %158, !dbg !11484
  store i32 %add119, i32* %index91, align 4, !dbg !11485
  %159 = load i32, i32* %index91, align 4, !dbg !11486
  %idxprom120 = zext i32 %159 to i64, !dbg !11487
  %160 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11487
  %arrayidx121 = getelementptr inbounds [2 x i16], [2 x i16]* %160, i64 %idxprom120, !dbg !11487
  %arrayidx122 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx121, i64 0, i64 0, !dbg !11487
  %161 = load i16, i16* %arrayidx122, align 2, !dbg !11487
  %conv123 = sext i16 %161 to i32, !dbg !11487
  store i32 %conv123, i32* %code, align 4, !dbg !11488
  %162 = load i32, i32* %index91, align 4, !dbg !11489
  %idxprom124 = zext i32 %162 to i64, !dbg !11490
  %163 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11490
  %arrayidx125 = getelementptr inbounds [2 x i16], [2 x i16]* %163, i64 %idxprom124, !dbg !11490
  %arrayidx126 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx125, i64 0, i64 1, !dbg !11490
  %164 = load i16, i16* %arrayidx126, align 2, !dbg !11490
  %conv127 = sext i16 %164 to i32, !dbg !11490
  store i32 %conv127, i32* %n, align 4, !dbg !11491
  br label %if.end, !dbg !11492

if.end:                                           ; preds = %cond.end, %do.body90
  br label %do.body128, !dbg !11493, !llvm.loop !11495

do.body128:                                       ; preds = %if.end
  %165 = load i32, i32* %n, align 4, !dbg !11497
  %166 = load i32, i32* %re_cache, align 4, !dbg !11500
  %shl129 = shl i32 %166, %165, !dbg !11500
  store i32 %shl129, i32* %re_cache, align 4, !dbg !11500
  %167 = load i32, i32* %re_size_plus8, align 4, !dbg !11501
  %168 = load i32, i32* %re_index, align 4, !dbg !11502
  %169 = load i32, i32* %n, align 4, !dbg !11503
  %add130 = add i32 %168, %169, !dbg !11504
  %cmp131 = icmp ugt i32 %167, %add130, !dbg !11505
  br i1 %cmp131, label %cond.true133, label %cond.false135, !dbg !11506

cond.true133:                                     ; preds = %do.body128
  %170 = load i32, i32* %re_index, align 4, !dbg !11507
  %171 = load i32, i32* %n, align 4, !dbg !11509
  %add134 = add i32 %170, %171, !dbg !11510
  br label %cond.end136, !dbg !11511

cond.false135:                                    ; preds = %do.body128
  %172 = load i32, i32* %re_size_plus8, align 4, !dbg !11512
  br label %cond.end136, !dbg !11514

cond.end136:                                      ; preds = %cond.false135, %cond.true133
  %cond137 = phi i32 [ %add134, %cond.true133 ], [ %172, %cond.false135 ], !dbg !11515
  store i32 %cond137, i32* %re_index, align 4, !dbg !11517
  br label %do.end, !dbg !11518

do.end:                                           ; preds = %cond.end136
  br label %do.end138, !dbg !11519

do.end138:                                        ; preds = %do.end
  %173 = load i32, i32* %code, align 4, !dbg !11521
  %idxprom139 = sext i32 %173 to i64, !dbg !11522
  %174 = load i16*, i16** %cb_vector_idx, align 8, !dbg !11522
  %arrayidx140 = getelementptr inbounds i16, i16* %174, i64 %idxprom139, !dbg !11522
  %175 = load i16, i16* %arrayidx140, align 2, !dbg !11522
  %conv141 = zext i16 %175 to i32, !dbg !11522
  store i32 %conv141, i32* %cb_idx, align 4, !dbg !11523
  %176 = load i32*, i32** %cf, align 8, !dbg !11524
  %177 = load i32, i32* %cb_idx, align 4, !dbg !11525
  %call142 = call i32* @DEC_SQUAD(i32* %176, i32 %177), !dbg !11526
  store i32* %call142, i32** %cf, align 8, !dbg !11527
  br label %do.cond, !dbg !11528

do.cond:                                          ; preds = %do.end138
  %178 = load i32, i32* %len, align 4, !dbg !11529
  %sub143 = sub nsw i32 %178, 4, !dbg !11529
  store i32 %sub143, i32* %len, align 4, !dbg !11529
  %tobool = icmp ne i32 %sub143, 0, !dbg !11531
  br i1 %tobool, label %do.body, label %do.end144, !dbg !11531, !llvm.loop !11377

do.end144:                                        ; preds = %do.cond
  br label %for.inc145, !dbg !11532

for.inc145:                                       ; preds = %do.end144
  %179 = load i32, i32* %group, align 4, !dbg !11533
  %inc146 = add nsw i32 %179, 1, !dbg !11533
  store i32 %inc146, i32* %group, align 4, !dbg !11533
  %180 = load i32*, i32** %cfo, align 8, !dbg !11535
  %add.ptr147 = getelementptr inbounds i32, i32* %180, i64 128, !dbg !11535
  store i32* %add.ptr147, i32** %cfo, align 8, !dbg !11535
  br label %for.cond82, !dbg !11536, !llvm.loop !11537

for.end148:                                       ; preds = %for.cond82
  br label %sw.epilog, !dbg !11539

sw.bb149:                                         ; preds = %if.else76
  store i32 0, i32* %group, align 4, !dbg !11540
  br label %for.cond150, !dbg !11541

for.cond150:                                      ; preds = %for.inc249, %sw.bb149
  %181 = load i32, i32* %group, align 4, !dbg !11542
  %182 = load i32, i32* %g_len, align 4, !dbg !11544
  %cmp151 = icmp slt i32 %181, %182, !dbg !11545
  br i1 %cmp151, label %for.body153, label %for.end252, !dbg !11546

for.body153:                                      ; preds = %for.cond150
  call void @llvm.dbg.declare(metadata i32** %cf154, metadata !11547, metadata !2068), !dbg !11548
  %183 = load i32*, i32** %cfo, align 8, !dbg !11549
  store i32* %183, i32** %cf154, align 8, !dbg !11548
  call void @llvm.dbg.declare(metadata i32* %len155, metadata !11550, metadata !2068), !dbg !11551
  %184 = load i32, i32* %off_len, align 4, !dbg !11552
  store i32 %184, i32* %len155, align 4, !dbg !11551
  br label %do.body156, !dbg !11553, !llvm.loop !11554

do.body156:                                       ; preds = %do.cond245, %for.body153
  call void @llvm.dbg.declare(metadata i32* %code157, metadata !11555, metadata !2068), !dbg !11556
  call void @llvm.dbg.declare(metadata i32* %nnz, metadata !11557, metadata !2068), !dbg !11558
  call void @llvm.dbg.declare(metadata i32* %cb_idx158, metadata !11559, metadata !2068), !dbg !11560
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !11561, metadata !2068), !dbg !11562
  %185 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11563
  %buffer159 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %185, i32 0, i32 0, !dbg !11564
  %186 = load i8*, i8** %buffer159, align 8, !dbg !11564
  %187 = load i32, i32* %re_index, align 4, !dbg !11565
  %shr160 = lshr i32 %187, 3, !dbg !11566
  %idx.ext161 = zext i32 %shr160 to i64, !dbg !11567
  %add.ptr162 = getelementptr inbounds i8, i8* %186, i64 %idx.ext161, !dbg !11567
  %188 = bitcast i8* %add.ptr162 to %union.unaligned_32*, !dbg !11568
  %l163 = bitcast %union.unaligned_32* %188 to i32*, !dbg !11568
  %189 = load i32, i32* %l163, align 1, !dbg !11568
  store i32 %189, i32* %x.addr.i777, align 4, !dbg !11569
  %190 = load i32, i32* %x.addr.i777, align 4, !dbg !11570
  %shl.i778 = shl i32 %190, 8, !dbg !11571
  %and.i779 = and i32 %shl.i778, 65280, !dbg !11572
  %191 = load i32, i32* %x.addr.i777, align 4, !dbg !11573
  %shr.i780 = lshr i32 %191, 8, !dbg !11574
  %and1.i781 = and i32 %shr.i780, 255, !dbg !11575
  %or.i782 = or i32 %and.i779, %and1.i781, !dbg !11576
  %shl2.i783 = shl i32 %or.i782, 16, !dbg !11577
  %192 = load i32, i32* %x.addr.i777, align 4, !dbg !11578
  %shr3.i784 = lshr i32 %192, 16, !dbg !11579
  %shl4.i785 = shl i32 %shr3.i784, 8, !dbg !11580
  %and5.i786 = and i32 %shl4.i785, 65280, !dbg !11581
  %193 = load i32, i32* %x.addr.i777, align 4, !dbg !11582
  %shr6.i787 = lshr i32 %193, 16, !dbg !11583
  %shr7.i788 = lshr i32 %shr6.i787, 8, !dbg !11584
  %and8.i789 = and i32 %shr7.i788, 255, !dbg !11585
  %or9.i790 = or i32 %and5.i786, %and8.i789, !dbg !11586
  %or10.i791 = or i32 %shl2.i783, %or9.i790, !dbg !11587
  %194 = load i32, i32* %re_index, align 4, !dbg !11588
  %and165 = and i32 %194, 7, !dbg !11589
  %shl166 = shl i32 %or10.i791, %and165, !dbg !11590
  store i32 %shl166, i32* %re_cache, align 4, !dbg !11591
  br label %do.body167, !dbg !11592, !llvm.loop !11593

do.body167:                                       ; preds = %do.body156
  call void @llvm.dbg.declare(metadata i32* %n168, metadata !11594, metadata !2068), !dbg !11595
  call void @llvm.dbg.declare(metadata i32* %nb_bits169, metadata !11596, metadata !2068), !dbg !11597
  call void @llvm.dbg.declare(metadata i32* %index170, metadata !11598, metadata !2068), !dbg !11599
  %195 = load i32, i32* %re_cache, align 4, !dbg !11600
  %call171 = call i32 @NEG_USR32(i32 %195, i8 signext 8), !dbg !11602
  store i32 %call171, i32* %index170, align 4, !dbg !11603
  %196 = load i32, i32* %index170, align 4, !dbg !11604
  %idxprom172 = zext i32 %196 to i64, !dbg !11605
  %197 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11605
  %arrayidx173 = getelementptr inbounds [2 x i16], [2 x i16]* %197, i64 %idxprom172, !dbg !11605
  %arrayidx174 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx173, i64 0, i64 0, !dbg !11605
  %198 = load i16, i16* %arrayidx174, align 2, !dbg !11605
  %conv175 = sext i16 %198 to i32, !dbg !11605
  store i32 %conv175, i32* %code157, align 4, !dbg !11606
  %199 = load i32, i32* %index170, align 4, !dbg !11607
  %idxprom176 = zext i32 %199 to i64, !dbg !11608
  %200 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11608
  %arrayidx177 = getelementptr inbounds [2 x i16], [2 x i16]* %200, i64 %idxprom176, !dbg !11608
  %arrayidx178 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx177, i64 0, i64 1, !dbg !11608
  %201 = load i16, i16* %arrayidx178, align 2, !dbg !11608
  %conv179 = sext i16 %201 to i32, !dbg !11608
  store i32 %conv179, i32* %n168, align 4, !dbg !11609
  %202 = load i32, i32* %n168, align 4, !dbg !11610
  %cmp180 = icmp slt i32 %202, 0, !dbg !11611
  br i1 %cmp180, label %if.then182, label %if.end211, !dbg !11612

if.then182:                                       ; preds = %do.body167
  %203 = load i32, i32* %re_size_plus8, align 4, !dbg !11613
  %204 = load i32, i32* %re_index, align 4, !dbg !11615
  %add183 = add i32 %204, 8, !dbg !11616
  %cmp184 = icmp ugt i32 %203, %add183, !dbg !11617
  br i1 %cmp184, label %cond.true186, label %cond.false188, !dbg !11618

cond.true186:                                     ; preds = %if.then182
  %205 = load i32, i32* %re_index, align 4, !dbg !11619
  %add187 = add i32 %205, 8, !dbg !11621
  br label %cond.end189, !dbg !11622

cond.false188:                                    ; preds = %if.then182
  %206 = load i32, i32* %re_size_plus8, align 4, !dbg !11623
  br label %cond.end189, !dbg !11625

cond.end189:                                      ; preds = %cond.false188, %cond.true186
  %cond190 = phi i32 [ %add187, %cond.true186 ], [ %206, %cond.false188 ], !dbg !11626
  store i32 %cond190, i32* %re_index, align 4, !dbg !11627
  %207 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11628
  %buffer191 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %207, i32 0, i32 0, !dbg !11629
  %208 = load i8*, i8** %buffer191, align 8, !dbg !11629
  %209 = load i32, i32* %re_index, align 4, !dbg !11630
  %shr192 = lshr i32 %209, 3, !dbg !11631
  %idx.ext193 = zext i32 %shr192 to i64, !dbg !11632
  %add.ptr194 = getelementptr inbounds i8, i8* %208, i64 %idx.ext193, !dbg !11632
  %210 = bitcast i8* %add.ptr194 to %union.unaligned_32*, !dbg !11633
  %l195 = bitcast %union.unaligned_32* %210 to i32*, !dbg !11633
  %211 = load i32, i32* %l195, align 1, !dbg !11633
  store i32 %211, i32* %x.addr.i792, align 4, !dbg !11634
  %212 = load i32, i32* %x.addr.i792, align 4, !dbg !11635
  %shl.i793 = shl i32 %212, 8, !dbg !11636
  %and.i794 = and i32 %shl.i793, 65280, !dbg !11637
  %213 = load i32, i32* %x.addr.i792, align 4, !dbg !11638
  %shr.i795 = lshr i32 %213, 8, !dbg !11639
  %and1.i796 = and i32 %shr.i795, 255, !dbg !11640
  %or.i797 = or i32 %and.i794, %and1.i796, !dbg !11641
  %shl2.i798 = shl i32 %or.i797, 16, !dbg !11642
  %214 = load i32, i32* %x.addr.i792, align 4, !dbg !11643
  %shr3.i799 = lshr i32 %214, 16, !dbg !11644
  %shl4.i800 = shl i32 %shr3.i799, 8, !dbg !11645
  %and5.i801 = and i32 %shl4.i800, 65280, !dbg !11646
  %215 = load i32, i32* %x.addr.i792, align 4, !dbg !11647
  %shr6.i802 = lshr i32 %215, 16, !dbg !11648
  %shr7.i803 = lshr i32 %shr6.i802, 8, !dbg !11649
  %and8.i804 = and i32 %shr7.i803, 255, !dbg !11650
  %or9.i805 = or i32 %and5.i801, %and8.i804, !dbg !11651
  %or10.i806 = or i32 %shl2.i798, %or9.i805, !dbg !11652
  %216 = load i32, i32* %re_index, align 4, !dbg !11653
  %and197 = and i32 %216, 7, !dbg !11654
  %shl198 = shl i32 %or10.i806, %and197, !dbg !11655
  store i32 %shl198, i32* %re_cache, align 4, !dbg !11656
  %217 = load i32, i32* %n168, align 4, !dbg !11657
  %sub199 = sub nsw i32 0, %217, !dbg !11658
  store i32 %sub199, i32* %nb_bits169, align 4, !dbg !11659
  %218 = load i32, i32* %re_cache, align 4, !dbg !11660
  %219 = load i32, i32* %nb_bits169, align 4, !dbg !11661
  %conv200 = trunc i32 %219 to i8, !dbg !11661
  %call201 = call i32 @NEG_USR32(i32 %218, i8 signext %conv200), !dbg !11662
  %220 = load i32, i32* %code157, align 4, !dbg !11664
  %add202 = add i32 %call201, %220, !dbg !11665
  store i32 %add202, i32* %index170, align 4, !dbg !11666
  %221 = load i32, i32* %index170, align 4, !dbg !11667
  %idxprom203 = zext i32 %221 to i64, !dbg !11668
  %222 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11668
  %arrayidx204 = getelementptr inbounds [2 x i16], [2 x i16]* %222, i64 %idxprom203, !dbg !11668
  %arrayidx205 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx204, i64 0, i64 0, !dbg !11668
  %223 = load i16, i16* %arrayidx205, align 2, !dbg !11668
  %conv206 = sext i16 %223 to i32, !dbg !11668
  store i32 %conv206, i32* %code157, align 4, !dbg !11669
  %224 = load i32, i32* %index170, align 4, !dbg !11670
  %idxprom207 = zext i32 %224 to i64, !dbg !11671
  %225 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11671
  %arrayidx208 = getelementptr inbounds [2 x i16], [2 x i16]* %225, i64 %idxprom207, !dbg !11671
  %arrayidx209 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx208, i64 0, i64 1, !dbg !11671
  %226 = load i16, i16* %arrayidx209, align 2, !dbg !11671
  %conv210 = sext i16 %226 to i32, !dbg !11671
  store i32 %conv210, i32* %n168, align 4, !dbg !11672
  br label %if.end211, !dbg !11673

if.end211:                                        ; preds = %cond.end189, %do.body167
  br label %do.body212, !dbg !11674, !llvm.loop !11676

do.body212:                                       ; preds = %if.end211
  %227 = load i32, i32* %n168, align 4, !dbg !11678
  %228 = load i32, i32* %re_cache, align 4, !dbg !11681
  %shl213 = shl i32 %228, %227, !dbg !11681
  store i32 %shl213, i32* %re_cache, align 4, !dbg !11681
  %229 = load i32, i32* %re_size_plus8, align 4, !dbg !11682
  %230 = load i32, i32* %re_index, align 4, !dbg !11683
  %231 = load i32, i32* %n168, align 4, !dbg !11684
  %add214 = add i32 %230, %231, !dbg !11685
  %cmp215 = icmp ugt i32 %229, %add214, !dbg !11686
  br i1 %cmp215, label %cond.true217, label %cond.false219, !dbg !11687

cond.true217:                                     ; preds = %do.body212
  %232 = load i32, i32* %re_index, align 4, !dbg !11688
  %233 = load i32, i32* %n168, align 4, !dbg !11690
  %add218 = add i32 %232, %233, !dbg !11691
  br label %cond.end220, !dbg !11692

cond.false219:                                    ; preds = %do.body212
  %234 = load i32, i32* %re_size_plus8, align 4, !dbg !11693
  br label %cond.end220, !dbg !11695

cond.end220:                                      ; preds = %cond.false219, %cond.true217
  %cond221 = phi i32 [ %add218, %cond.true217 ], [ %234, %cond.false219 ], !dbg !11696
  store i32 %cond221, i32* %re_index, align 4, !dbg !11698
  br label %do.end223, !dbg !11699

do.end223:                                        ; preds = %cond.end220
  br label %do.end225, !dbg !11700

do.end225:                                        ; preds = %do.end223
  %235 = load i32, i32* %code157, align 4, !dbg !11702
  %idxprom226 = sext i32 %235 to i64, !dbg !11703
  %236 = load i16*, i16** %cb_vector_idx, align 8, !dbg !11703
  %arrayidx227 = getelementptr inbounds i16, i16* %236, i64 %idxprom226, !dbg !11703
  %237 = load i16, i16* %arrayidx227, align 2, !dbg !11703
  %conv228 = zext i16 %237 to i32, !dbg !11703
  store i32 %conv228, i32* %cb_idx158, align 4, !dbg !11704
  %238 = load i32, i32* %cb_idx158, align 4, !dbg !11705
  %shr229 = lshr i32 %238, 8, !dbg !11706
  %and230 = and i32 %shr229, 15, !dbg !11707
  store i32 %and230, i32* %nnz, align 4, !dbg !11708
  %239 = load i32, i32* %nnz, align 4, !dbg !11709
  %tobool231 = icmp ne i32 %239, 0, !dbg !11709
  br i1 %tobool231, label %cond.true232, label %cond.false233, !dbg !11709

cond.true232:                                     ; preds = %do.end225
  %240 = load i32, i32* %re_cache, align 4, !dbg !11710
  br label %cond.end234, !dbg !11712

cond.false233:                                    ; preds = %do.end225
  br label %cond.end234, !dbg !11713

cond.end234:                                      ; preds = %cond.false233, %cond.true232
  %cond235 = phi i32 [ %240, %cond.true232 ], [ 0, %cond.false233 ], !dbg !11715
  store i32 %cond235, i32* %bits, align 4, !dbg !11717
  %241 = load i32, i32* %re_size_plus8, align 4, !dbg !11718
  %242 = load i32, i32* %re_index, align 4, !dbg !11719
  %243 = load i32, i32* %nnz, align 4, !dbg !11720
  %add236 = add i32 %242, %243, !dbg !11721
  %cmp237 = icmp ugt i32 %241, %add236, !dbg !11722
  br i1 %cmp237, label %cond.true239, label %cond.false241, !dbg !11723

cond.true239:                                     ; preds = %cond.end234
  %244 = load i32, i32* %re_index, align 4, !dbg !11724
  %245 = load i32, i32* %nnz, align 4, !dbg !11725
  %add240 = add i32 %244, %245, !dbg !11726
  br label %cond.end242, !dbg !11727

cond.false241:                                    ; preds = %cond.end234
  %246 = load i32, i32* %re_size_plus8, align 4, !dbg !11728
  br label %cond.end242, !dbg !11729

cond.end242:                                      ; preds = %cond.false241, %cond.true239
  %cond243 = phi i32 [ %add240, %cond.true239 ], [ %246, %cond.false241 ], !dbg !11730
  store i32 %cond243, i32* %re_index, align 4, !dbg !11731
  %247 = load i32*, i32** %cf154, align 8, !dbg !11732
  %248 = load i32, i32* %cb_idx158, align 4, !dbg !11733
  %249 = load i32, i32* %bits, align 4, !dbg !11734
  %call244 = call i32* @DEC_UQUAD(i32* %247, i32 %248, i32 %249), !dbg !11735
  store i32* %call244, i32** %cf154, align 8, !dbg !11736
  br label %do.cond245, !dbg !11737

do.cond245:                                       ; preds = %cond.end242
  %250 = load i32, i32* %len155, align 4, !dbg !11738
  %sub246 = sub nsw i32 %250, 4, !dbg !11738
  store i32 %sub246, i32* %len155, align 4, !dbg !11738
  %tobool247 = icmp ne i32 %sub246, 0, !dbg !11740
  br i1 %tobool247, label %do.body156, label %do.end248, !dbg !11740, !llvm.loop !11554

do.end248:                                        ; preds = %do.cond245
  br label %for.inc249, !dbg !11741

for.inc249:                                       ; preds = %do.end248
  %251 = load i32, i32* %group, align 4, !dbg !11742
  %inc250 = add nsw i32 %251, 1, !dbg !11742
  store i32 %inc250, i32* %group, align 4, !dbg !11742
  %252 = load i32*, i32** %cfo, align 8, !dbg !11744
  %add.ptr251 = getelementptr inbounds i32, i32* %252, i64 128, !dbg !11744
  store i32* %add.ptr251, i32** %cfo, align 8, !dbg !11744
  br label %for.cond150, !dbg !11745, !llvm.loop !11746

for.end252:                                       ; preds = %for.cond150
  br label %sw.epilog, !dbg !11748

sw.bb253:                                         ; preds = %if.else76
  store i32 0, i32* %group, align 4, !dbg !11749
  br label %for.cond254, !dbg !11750

for.cond254:                                      ; preds = %for.inc338, %sw.bb253
  %253 = load i32, i32* %group, align 4, !dbg !11751
  %254 = load i32, i32* %g_len, align 4, !dbg !11753
  %cmp255 = icmp slt i32 %253, %254, !dbg !11754
  br i1 %cmp255, label %for.body257, label %for.end341, !dbg !11755

for.body257:                                      ; preds = %for.cond254
  call void @llvm.dbg.declare(metadata i32** %cf258, metadata !11756, metadata !2068), !dbg !11757
  %255 = load i32*, i32** %cfo, align 8, !dbg !11758
  store i32* %255, i32** %cf258, align 8, !dbg !11757
  call void @llvm.dbg.declare(metadata i32* %len259, metadata !11759, metadata !2068), !dbg !11760
  %256 = load i32, i32* %off_len, align 4, !dbg !11761
  store i32 %256, i32* %len259, align 4, !dbg !11760
  br label %do.body260, !dbg !11762, !llvm.loop !11763

do.body260:                                       ; preds = %do.cond334, %for.body257
  call void @llvm.dbg.declare(metadata i32* %code261, metadata !11764, metadata !2068), !dbg !11765
  call void @llvm.dbg.declare(metadata i32* %cb_idx262, metadata !11766, metadata !2068), !dbg !11767
  %257 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11768
  %buffer263 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %257, i32 0, i32 0, !dbg !11769
  %258 = load i8*, i8** %buffer263, align 8, !dbg !11769
  %259 = load i32, i32* %re_index, align 4, !dbg !11770
  %shr264 = lshr i32 %259, 3, !dbg !11771
  %idx.ext265 = zext i32 %shr264 to i64, !dbg !11772
  %add.ptr266 = getelementptr inbounds i8, i8* %258, i64 %idx.ext265, !dbg !11772
  %260 = bitcast i8* %add.ptr266 to %union.unaligned_32*, !dbg !11773
  %l267 = bitcast %union.unaligned_32* %260 to i32*, !dbg !11773
  %261 = load i32, i32* %l267, align 1, !dbg !11773
  store i32 %261, i32* %x.addr.i822, align 4, !dbg !11774
  %262 = load i32, i32* %x.addr.i822, align 4, !dbg !11775
  %shl.i823 = shl i32 %262, 8, !dbg !11776
  %and.i824 = and i32 %shl.i823, 65280, !dbg !11777
  %263 = load i32, i32* %x.addr.i822, align 4, !dbg !11778
  %shr.i825 = lshr i32 %263, 8, !dbg !11779
  %and1.i826 = and i32 %shr.i825, 255, !dbg !11780
  %or.i827 = or i32 %and.i824, %and1.i826, !dbg !11781
  %shl2.i828 = shl i32 %or.i827, 16, !dbg !11782
  %264 = load i32, i32* %x.addr.i822, align 4, !dbg !11783
  %shr3.i829 = lshr i32 %264, 16, !dbg !11784
  %shl4.i830 = shl i32 %shr3.i829, 8, !dbg !11785
  %and5.i831 = and i32 %shl4.i830, 65280, !dbg !11786
  %265 = load i32, i32* %x.addr.i822, align 4, !dbg !11787
  %shr6.i832 = lshr i32 %265, 16, !dbg !11788
  %shr7.i833 = lshr i32 %shr6.i832, 8, !dbg !11789
  %and8.i834 = and i32 %shr7.i833, 255, !dbg !11790
  %or9.i835 = or i32 %and5.i831, %and8.i834, !dbg !11791
  %or10.i836 = or i32 %shl2.i828, %or9.i835, !dbg !11792
  %266 = load i32, i32* %re_index, align 4, !dbg !11793
  %and269 = and i32 %266, 7, !dbg !11794
  %shl270 = shl i32 %or10.i836, %and269, !dbg !11795
  store i32 %shl270, i32* %re_cache, align 4, !dbg !11796
  br label %do.body271, !dbg !11797, !llvm.loop !11798

do.body271:                                       ; preds = %do.body260
  call void @llvm.dbg.declare(metadata i32* %n272, metadata !11799, metadata !2068), !dbg !11800
  call void @llvm.dbg.declare(metadata i32* %nb_bits273, metadata !11801, metadata !2068), !dbg !11802
  call void @llvm.dbg.declare(metadata i32* %index274, metadata !11803, metadata !2068), !dbg !11804
  %267 = load i32, i32* %re_cache, align 4, !dbg !11805
  %call275 = call i32 @NEG_USR32(i32 %267, i8 signext 8), !dbg !11807
  store i32 %call275, i32* %index274, align 4, !dbg !11808
  %268 = load i32, i32* %index274, align 4, !dbg !11809
  %idxprom276 = zext i32 %268 to i64, !dbg !11810
  %269 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11810
  %arrayidx277 = getelementptr inbounds [2 x i16], [2 x i16]* %269, i64 %idxprom276, !dbg !11810
  %arrayidx278 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx277, i64 0, i64 0, !dbg !11810
  %270 = load i16, i16* %arrayidx278, align 2, !dbg !11810
  %conv279 = sext i16 %270 to i32, !dbg !11810
  store i32 %conv279, i32* %code261, align 4, !dbg !11811
  %271 = load i32, i32* %index274, align 4, !dbg !11812
  %idxprom280 = zext i32 %271 to i64, !dbg !11813
  %272 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11813
  %arrayidx281 = getelementptr inbounds [2 x i16], [2 x i16]* %272, i64 %idxprom280, !dbg !11813
  %arrayidx282 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx281, i64 0, i64 1, !dbg !11813
  %273 = load i16, i16* %arrayidx282, align 2, !dbg !11813
  %conv283 = sext i16 %273 to i32, !dbg !11813
  store i32 %conv283, i32* %n272, align 4, !dbg !11814
  %274 = load i32, i32* %n272, align 4, !dbg !11815
  %cmp284 = icmp slt i32 %274, 0, !dbg !11816
  br i1 %cmp284, label %if.then286, label %if.end315, !dbg !11817

if.then286:                                       ; preds = %do.body271
  %275 = load i32, i32* %re_size_plus8, align 4, !dbg !11818
  %276 = load i32, i32* %re_index, align 4, !dbg !11820
  %add287 = add i32 %276, 8, !dbg !11821
  %cmp288 = icmp ugt i32 %275, %add287, !dbg !11822
  br i1 %cmp288, label %cond.true290, label %cond.false292, !dbg !11823

cond.true290:                                     ; preds = %if.then286
  %277 = load i32, i32* %re_index, align 4, !dbg !11824
  %add291 = add i32 %277, 8, !dbg !11826
  br label %cond.end293, !dbg !11827

cond.false292:                                    ; preds = %if.then286
  %278 = load i32, i32* %re_size_plus8, align 4, !dbg !11828
  br label %cond.end293, !dbg !11830

cond.end293:                                      ; preds = %cond.false292, %cond.true290
  %cond294 = phi i32 [ %add291, %cond.true290 ], [ %278, %cond.false292 ], !dbg !11831
  store i32 %cond294, i32* %re_index, align 4, !dbg !11832
  %279 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11833
  %buffer295 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %279, i32 0, i32 0, !dbg !11834
  %280 = load i8*, i8** %buffer295, align 8, !dbg !11834
  %281 = load i32, i32* %re_index, align 4, !dbg !11835
  %shr296 = lshr i32 %281, 3, !dbg !11836
  %idx.ext297 = zext i32 %shr296 to i64, !dbg !11837
  %add.ptr298 = getelementptr inbounds i8, i8* %280, i64 %idx.ext297, !dbg !11837
  %282 = bitcast i8* %add.ptr298 to %union.unaligned_32*, !dbg !11838
  %l299 = bitcast %union.unaligned_32* %282 to i32*, !dbg !11838
  %283 = load i32, i32* %l299, align 1, !dbg !11838
  store i32 %283, i32* %x.addr.i837, align 4, !dbg !11839
  %284 = load i32, i32* %x.addr.i837, align 4, !dbg !11840
  %shl.i838 = shl i32 %284, 8, !dbg !11841
  %and.i839 = and i32 %shl.i838, 65280, !dbg !11842
  %285 = load i32, i32* %x.addr.i837, align 4, !dbg !11843
  %shr.i840 = lshr i32 %285, 8, !dbg !11844
  %and1.i841 = and i32 %shr.i840, 255, !dbg !11845
  %or.i842 = or i32 %and.i839, %and1.i841, !dbg !11846
  %shl2.i843 = shl i32 %or.i842, 16, !dbg !11847
  %286 = load i32, i32* %x.addr.i837, align 4, !dbg !11848
  %shr3.i844 = lshr i32 %286, 16, !dbg !11849
  %shl4.i845 = shl i32 %shr3.i844, 8, !dbg !11850
  %and5.i846 = and i32 %shl4.i845, 65280, !dbg !11851
  %287 = load i32, i32* %x.addr.i837, align 4, !dbg !11852
  %shr6.i847 = lshr i32 %287, 16, !dbg !11853
  %shr7.i848 = lshr i32 %shr6.i847, 8, !dbg !11854
  %and8.i849 = and i32 %shr7.i848, 255, !dbg !11855
  %or9.i850 = or i32 %and5.i846, %and8.i849, !dbg !11856
  %or10.i851 = or i32 %shl2.i843, %or9.i850, !dbg !11857
  %288 = load i32, i32* %re_index, align 4, !dbg !11858
  %and301 = and i32 %288, 7, !dbg !11859
  %shl302 = shl i32 %or10.i851, %and301, !dbg !11860
  store i32 %shl302, i32* %re_cache, align 4, !dbg !11861
  %289 = load i32, i32* %n272, align 4, !dbg !11862
  %sub303 = sub nsw i32 0, %289, !dbg !11863
  store i32 %sub303, i32* %nb_bits273, align 4, !dbg !11864
  %290 = load i32, i32* %re_cache, align 4, !dbg !11865
  %291 = load i32, i32* %nb_bits273, align 4, !dbg !11866
  %conv304 = trunc i32 %291 to i8, !dbg !11866
  %call305 = call i32 @NEG_USR32(i32 %290, i8 signext %conv304), !dbg !11867
  %292 = load i32, i32* %code261, align 4, !dbg !11869
  %add306 = add i32 %call305, %292, !dbg !11870
  store i32 %add306, i32* %index274, align 4, !dbg !11871
  %293 = load i32, i32* %index274, align 4, !dbg !11872
  %idxprom307 = zext i32 %293 to i64, !dbg !11873
  %294 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11873
  %arrayidx308 = getelementptr inbounds [2 x i16], [2 x i16]* %294, i64 %idxprom307, !dbg !11873
  %arrayidx309 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx308, i64 0, i64 0, !dbg !11873
  %295 = load i16, i16* %arrayidx309, align 2, !dbg !11873
  %conv310 = sext i16 %295 to i32, !dbg !11873
  store i32 %conv310, i32* %code261, align 4, !dbg !11874
  %296 = load i32, i32* %index274, align 4, !dbg !11875
  %idxprom311 = zext i32 %296 to i64, !dbg !11876
  %297 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11876
  %arrayidx312 = getelementptr inbounds [2 x i16], [2 x i16]* %297, i64 %idxprom311, !dbg !11876
  %arrayidx313 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx312, i64 0, i64 1, !dbg !11876
  %298 = load i16, i16* %arrayidx313, align 2, !dbg !11876
  %conv314 = sext i16 %298 to i32, !dbg !11876
  store i32 %conv314, i32* %n272, align 4, !dbg !11877
  br label %if.end315, !dbg !11878

if.end315:                                        ; preds = %cond.end293, %do.body271
  br label %do.body316, !dbg !11879, !llvm.loop !11881

do.body316:                                       ; preds = %if.end315
  %299 = load i32, i32* %n272, align 4, !dbg !11883
  %300 = load i32, i32* %re_cache, align 4, !dbg !11886
  %shl317 = shl i32 %300, %299, !dbg !11886
  store i32 %shl317, i32* %re_cache, align 4, !dbg !11886
  %301 = load i32, i32* %re_size_plus8, align 4, !dbg !11887
  %302 = load i32, i32* %re_index, align 4, !dbg !11888
  %303 = load i32, i32* %n272, align 4, !dbg !11889
  %add318 = add i32 %302, %303, !dbg !11890
  %cmp319 = icmp ugt i32 %301, %add318, !dbg !11891
  br i1 %cmp319, label %cond.true321, label %cond.false323, !dbg !11892

cond.true321:                                     ; preds = %do.body316
  %304 = load i32, i32* %re_index, align 4, !dbg !11893
  %305 = load i32, i32* %n272, align 4, !dbg !11895
  %add322 = add i32 %304, %305, !dbg !11896
  br label %cond.end324, !dbg !11897

cond.false323:                                    ; preds = %do.body316
  %306 = load i32, i32* %re_size_plus8, align 4, !dbg !11898
  br label %cond.end324, !dbg !11900

cond.end324:                                      ; preds = %cond.false323, %cond.true321
  %cond325 = phi i32 [ %add322, %cond.true321 ], [ %306, %cond.false323 ], !dbg !11901
  store i32 %cond325, i32* %re_index, align 4, !dbg !11903
  br label %do.end327, !dbg !11904

do.end327:                                        ; preds = %cond.end324
  br label %do.end329, !dbg !11905

do.end329:                                        ; preds = %do.end327
  %307 = load i32, i32* %code261, align 4, !dbg !11907
  %idxprom330 = sext i32 %307 to i64, !dbg !11908
  %308 = load i16*, i16** %cb_vector_idx, align 8, !dbg !11908
  %arrayidx331 = getelementptr inbounds i16, i16* %308, i64 %idxprom330, !dbg !11908
  %309 = load i16, i16* %arrayidx331, align 2, !dbg !11908
  %conv332 = zext i16 %309 to i32, !dbg !11908
  store i32 %conv332, i32* %cb_idx262, align 4, !dbg !11909
  %310 = load i32*, i32** %cf258, align 8, !dbg !11910
  %311 = load i32, i32* %cb_idx262, align 4, !dbg !11911
  %call333 = call i32* @DEC_SPAIR(i32* %310, i32 %311), !dbg !11912
  store i32* %call333, i32** %cf258, align 8, !dbg !11913
  br label %do.cond334, !dbg !11914

do.cond334:                                       ; preds = %do.end329
  %312 = load i32, i32* %len259, align 4, !dbg !11915
  %sub335 = sub nsw i32 %312, 2, !dbg !11915
  store i32 %sub335, i32* %len259, align 4, !dbg !11915
  %tobool336 = icmp ne i32 %sub335, 0, !dbg !11917
  br i1 %tobool336, label %do.body260, label %do.end337, !dbg !11917, !llvm.loop !11763

do.end337:                                        ; preds = %do.cond334
  br label %for.inc338, !dbg !11918

for.inc338:                                       ; preds = %do.end337
  %313 = load i32, i32* %group, align 4, !dbg !11919
  %inc339 = add nsw i32 %313, 1, !dbg !11919
  store i32 %inc339, i32* %group, align 4, !dbg !11919
  %314 = load i32*, i32** %cfo, align 8, !dbg !11921
  %add.ptr340 = getelementptr inbounds i32, i32* %314, i64 128, !dbg !11921
  store i32* %add.ptr340, i32** %cfo, align 8, !dbg !11921
  br label %for.cond254, !dbg !11922, !llvm.loop !11923

for.end341:                                       ; preds = %for.cond254
  br label %sw.epilog, !dbg !11925

sw.bb342:                                         ; preds = %if.else76, %if.else76
  store i32 0, i32* %group, align 4, !dbg !11926
  br label %for.cond343, !dbg !11927

for.cond343:                                      ; preds = %for.inc447, %sw.bb342
  %315 = load i32, i32* %group, align 4, !dbg !11928
  %316 = load i32, i32* %g_len, align 4, !dbg !11930
  %cmp344 = icmp slt i32 %315, %316, !dbg !11931
  br i1 %cmp344, label %for.body346, label %for.end450, !dbg !11932

for.body346:                                      ; preds = %for.cond343
  call void @llvm.dbg.declare(metadata i32** %cf347, metadata !11933, metadata !2068), !dbg !11934
  %317 = load i32*, i32** %cfo, align 8, !dbg !11935
  store i32* %317, i32** %cf347, align 8, !dbg !11934
  call void @llvm.dbg.declare(metadata i32* %len348, metadata !11936, metadata !2068), !dbg !11937
  %318 = load i32, i32* %off_len, align 4, !dbg !11938
  store i32 %318, i32* %len348, align 4, !dbg !11937
  br label %do.body349, !dbg !11939, !llvm.loop !11940

do.body349:                                       ; preds = %do.cond443, %for.body346
  call void @llvm.dbg.declare(metadata i32* %code350, metadata !11941, metadata !2068), !dbg !11942
  call void @llvm.dbg.declare(metadata i32* %nnz351, metadata !11943, metadata !2068), !dbg !11944
  call void @llvm.dbg.declare(metadata i32* %cb_idx352, metadata !11945, metadata !2068), !dbg !11946
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !11947, metadata !2068), !dbg !11948
  %319 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11949
  %buffer353 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %319, i32 0, i32 0, !dbg !11950
  %320 = load i8*, i8** %buffer353, align 8, !dbg !11950
  %321 = load i32, i32* %re_index, align 4, !dbg !11951
  %shr354 = lshr i32 %321, 3, !dbg !11952
  %idx.ext355 = zext i32 %shr354 to i64, !dbg !11953
  %add.ptr356 = getelementptr inbounds i8, i8* %320, i64 %idx.ext355, !dbg !11953
  %322 = bitcast i8* %add.ptr356 to %union.unaligned_32*, !dbg !11954
  %l357 = bitcast %union.unaligned_32* %322 to i32*, !dbg !11954
  %323 = load i32, i32* %l357, align 1, !dbg !11954
  store i32 %323, i32* %x.addr.i867, align 4, !dbg !11955
  %324 = load i32, i32* %x.addr.i867, align 4, !dbg !11956
  %shl.i868 = shl i32 %324, 8, !dbg !11957
  %and.i869 = and i32 %shl.i868, 65280, !dbg !11958
  %325 = load i32, i32* %x.addr.i867, align 4, !dbg !11959
  %shr.i870 = lshr i32 %325, 8, !dbg !11960
  %and1.i871 = and i32 %shr.i870, 255, !dbg !11961
  %or.i872 = or i32 %and.i869, %and1.i871, !dbg !11962
  %shl2.i873 = shl i32 %or.i872, 16, !dbg !11963
  %326 = load i32, i32* %x.addr.i867, align 4, !dbg !11964
  %shr3.i874 = lshr i32 %326, 16, !dbg !11965
  %shl4.i875 = shl i32 %shr3.i874, 8, !dbg !11966
  %and5.i876 = and i32 %shl4.i875, 65280, !dbg !11967
  %327 = load i32, i32* %x.addr.i867, align 4, !dbg !11968
  %shr6.i877 = lshr i32 %327, 16, !dbg !11969
  %shr7.i878 = lshr i32 %shr6.i877, 8, !dbg !11970
  %and8.i879 = and i32 %shr7.i878, 255, !dbg !11971
  %or9.i880 = or i32 %and5.i876, %and8.i879, !dbg !11972
  %or10.i881 = or i32 %shl2.i873, %or9.i880, !dbg !11973
  %328 = load i32, i32* %re_index, align 4, !dbg !11974
  %and359 = and i32 %328, 7, !dbg !11975
  %shl360 = shl i32 %or10.i881, %and359, !dbg !11976
  store i32 %shl360, i32* %re_cache, align 4, !dbg !11977
  br label %do.body361, !dbg !11978, !llvm.loop !11979

do.body361:                                       ; preds = %do.body349
  call void @llvm.dbg.declare(metadata i32* %n362, metadata !11980, metadata !2068), !dbg !11981
  call void @llvm.dbg.declare(metadata i32* %nb_bits363, metadata !11982, metadata !2068), !dbg !11983
  call void @llvm.dbg.declare(metadata i32* %index364, metadata !11984, metadata !2068), !dbg !11985
  %329 = load i32, i32* %re_cache, align 4, !dbg !11986
  %call365 = call i32 @NEG_USR32(i32 %329, i8 signext 8), !dbg !11988
  store i32 %call365, i32* %index364, align 4, !dbg !11989
  %330 = load i32, i32* %index364, align 4, !dbg !11990
  %idxprom366 = zext i32 %330 to i64, !dbg !11991
  %331 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11991
  %arrayidx367 = getelementptr inbounds [2 x i16], [2 x i16]* %331, i64 %idxprom366, !dbg !11991
  %arrayidx368 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx367, i64 0, i64 0, !dbg !11991
  %332 = load i16, i16* %arrayidx368, align 2, !dbg !11991
  %conv369 = sext i16 %332 to i32, !dbg !11991
  store i32 %conv369, i32* %code350, align 4, !dbg !11992
  %333 = load i32, i32* %index364, align 4, !dbg !11993
  %idxprom370 = zext i32 %333 to i64, !dbg !11994
  %334 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11994
  %arrayidx371 = getelementptr inbounds [2 x i16], [2 x i16]* %334, i64 %idxprom370, !dbg !11994
  %arrayidx372 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx371, i64 0, i64 1, !dbg !11994
  %335 = load i16, i16* %arrayidx372, align 2, !dbg !11994
  %conv373 = sext i16 %335 to i32, !dbg !11994
  store i32 %conv373, i32* %n362, align 4, !dbg !11995
  %336 = load i32, i32* %n362, align 4, !dbg !11996
  %cmp374 = icmp slt i32 %336, 0, !dbg !11997
  br i1 %cmp374, label %if.then376, label %if.end405, !dbg !11998

if.then376:                                       ; preds = %do.body361
  %337 = load i32, i32* %re_size_plus8, align 4, !dbg !11999
  %338 = load i32, i32* %re_index, align 4, !dbg !12001
  %add377 = add i32 %338, 8, !dbg !12002
  %cmp378 = icmp ugt i32 %337, %add377, !dbg !12003
  br i1 %cmp378, label %cond.true380, label %cond.false382, !dbg !12004

cond.true380:                                     ; preds = %if.then376
  %339 = load i32, i32* %re_index, align 4, !dbg !12005
  %add381 = add i32 %339, 8, !dbg !12007
  br label %cond.end383, !dbg !12008

cond.false382:                                    ; preds = %if.then376
  %340 = load i32, i32* %re_size_plus8, align 4, !dbg !12009
  br label %cond.end383, !dbg !12011

cond.end383:                                      ; preds = %cond.false382, %cond.true380
  %cond384 = phi i32 [ %add381, %cond.true380 ], [ %340, %cond.false382 ], !dbg !12012
  store i32 %cond384, i32* %re_index, align 4, !dbg !12013
  %341 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12014
  %buffer385 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %341, i32 0, i32 0, !dbg !12015
  %342 = load i8*, i8** %buffer385, align 8, !dbg !12015
  %343 = load i32, i32* %re_index, align 4, !dbg !12016
  %shr386 = lshr i32 %343, 3, !dbg !12017
  %idx.ext387 = zext i32 %shr386 to i64, !dbg !12018
  %add.ptr388 = getelementptr inbounds i8, i8* %342, i64 %idx.ext387, !dbg !12018
  %344 = bitcast i8* %add.ptr388 to %union.unaligned_32*, !dbg !12019
  %l389 = bitcast %union.unaligned_32* %344 to i32*, !dbg !12019
  %345 = load i32, i32* %l389, align 1, !dbg !12019
  store i32 %345, i32* %x.addr.i897, align 4, !dbg !12020
  %346 = load i32, i32* %x.addr.i897, align 4, !dbg !12021
  %shl.i898 = shl i32 %346, 8, !dbg !12022
  %and.i899 = and i32 %shl.i898, 65280, !dbg !12023
  %347 = load i32, i32* %x.addr.i897, align 4, !dbg !12024
  %shr.i900 = lshr i32 %347, 8, !dbg !12025
  %and1.i901 = and i32 %shr.i900, 255, !dbg !12026
  %or.i902 = or i32 %and.i899, %and1.i901, !dbg !12027
  %shl2.i903 = shl i32 %or.i902, 16, !dbg !12028
  %348 = load i32, i32* %x.addr.i897, align 4, !dbg !12029
  %shr3.i904 = lshr i32 %348, 16, !dbg !12030
  %shl4.i905 = shl i32 %shr3.i904, 8, !dbg !12031
  %and5.i906 = and i32 %shl4.i905, 65280, !dbg !12032
  %349 = load i32, i32* %x.addr.i897, align 4, !dbg !12033
  %shr6.i907 = lshr i32 %349, 16, !dbg !12034
  %shr7.i908 = lshr i32 %shr6.i907, 8, !dbg !12035
  %and8.i909 = and i32 %shr7.i908, 255, !dbg !12036
  %or9.i910 = or i32 %and5.i906, %and8.i909, !dbg !12037
  %or10.i911 = or i32 %shl2.i903, %or9.i910, !dbg !12038
  %350 = load i32, i32* %re_index, align 4, !dbg !12039
  %and391 = and i32 %350, 7, !dbg !12040
  %shl392 = shl i32 %or10.i911, %and391, !dbg !12041
  store i32 %shl392, i32* %re_cache, align 4, !dbg !12042
  %351 = load i32, i32* %n362, align 4, !dbg !12043
  %sub393 = sub nsw i32 0, %351, !dbg !12044
  store i32 %sub393, i32* %nb_bits363, align 4, !dbg !12045
  %352 = load i32, i32* %re_cache, align 4, !dbg !12046
  %353 = load i32, i32* %nb_bits363, align 4, !dbg !12047
  %conv394 = trunc i32 %353 to i8, !dbg !12047
  %call395 = call i32 @NEG_USR32(i32 %352, i8 signext %conv394), !dbg !12048
  %354 = load i32, i32* %code350, align 4, !dbg !12050
  %add396 = add i32 %call395, %354, !dbg !12051
  store i32 %add396, i32* %index364, align 4, !dbg !12052
  %355 = load i32, i32* %index364, align 4, !dbg !12053
  %idxprom397 = zext i32 %355 to i64, !dbg !12054
  %356 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !12054
  %arrayidx398 = getelementptr inbounds [2 x i16], [2 x i16]* %356, i64 %idxprom397, !dbg !12054
  %arrayidx399 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx398, i64 0, i64 0, !dbg !12054
  %357 = load i16, i16* %arrayidx399, align 2, !dbg !12054
  %conv400 = sext i16 %357 to i32, !dbg !12054
  store i32 %conv400, i32* %code350, align 4, !dbg !12055
  %358 = load i32, i32* %index364, align 4, !dbg !12056
  %idxprom401 = zext i32 %358 to i64, !dbg !12057
  %359 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !12057
  %arrayidx402 = getelementptr inbounds [2 x i16], [2 x i16]* %359, i64 %idxprom401, !dbg !12057
  %arrayidx403 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx402, i64 0, i64 1, !dbg !12057
  %360 = load i16, i16* %arrayidx403, align 2, !dbg !12057
  %conv404 = sext i16 %360 to i32, !dbg !12057
  store i32 %conv404, i32* %n362, align 4, !dbg !12058
  br label %if.end405, !dbg !12059

if.end405:                                        ; preds = %cond.end383, %do.body361
  br label %do.body406, !dbg !12060, !llvm.loop !12062

do.body406:                                       ; preds = %if.end405
  %361 = load i32, i32* %n362, align 4, !dbg !12064
  %362 = load i32, i32* %re_cache, align 4, !dbg !12067
  %shl407 = shl i32 %362, %361, !dbg !12067
  store i32 %shl407, i32* %re_cache, align 4, !dbg !12067
  %363 = load i32, i32* %re_size_plus8, align 4, !dbg !12068
  %364 = load i32, i32* %re_index, align 4, !dbg !12069
  %365 = load i32, i32* %n362, align 4, !dbg !12070
  %add408 = add i32 %364, %365, !dbg !12071
  %cmp409 = icmp ugt i32 %363, %add408, !dbg !12072
  br i1 %cmp409, label %cond.true411, label %cond.false413, !dbg !12073

cond.true411:                                     ; preds = %do.body406
  %366 = load i32, i32* %re_index, align 4, !dbg !12074
  %367 = load i32, i32* %n362, align 4, !dbg !12076
  %add412 = add i32 %366, %367, !dbg !12077
  br label %cond.end414, !dbg !12078

cond.false413:                                    ; preds = %do.body406
  %368 = load i32, i32* %re_size_plus8, align 4, !dbg !12079
  br label %cond.end414, !dbg !12081

cond.end414:                                      ; preds = %cond.false413, %cond.true411
  %cond415 = phi i32 [ %add412, %cond.true411 ], [ %368, %cond.false413 ], !dbg !12082
  store i32 %cond415, i32* %re_index, align 4, !dbg !12084
  br label %do.end417, !dbg !12085

do.end417:                                        ; preds = %cond.end414
  br label %do.end419, !dbg !12086

do.end419:                                        ; preds = %do.end417
  %369 = load i32, i32* %code350, align 4, !dbg !12088
  %idxprom420 = sext i32 %369 to i64, !dbg !12089
  %370 = load i16*, i16** %cb_vector_idx, align 8, !dbg !12089
  %arrayidx421 = getelementptr inbounds i16, i16* %370, i64 %idxprom420, !dbg !12089
  %371 = load i16, i16* %arrayidx421, align 2, !dbg !12089
  %conv422 = zext i16 %371 to i32, !dbg !12089
  store i32 %conv422, i32* %cb_idx352, align 4, !dbg !12090
  %372 = load i32, i32* %cb_idx352, align 4, !dbg !12091
  %shr423 = lshr i32 %372, 8, !dbg !12092
  %and424 = and i32 %shr423, 15, !dbg !12093
  store i32 %and424, i32* %nnz351, align 4, !dbg !12094
  %373 = load i32, i32* %nnz351, align 4, !dbg !12095
  %tobool425 = icmp ne i32 %373, 0, !dbg !12095
  br i1 %tobool425, label %cond.true426, label %cond.false431, !dbg !12095

cond.true426:                                     ; preds = %do.end419
  %374 = load i32, i32* %re_cache, align 4, !dbg !12096
  %375 = load i32, i32* %nnz351, align 4, !dbg !12098
  %conv427 = trunc i32 %375 to i8, !dbg !12098
  %call428 = call i32 @NEG_USR32(i32 %374, i8 signext %conv427), !dbg !12099
  %376 = load i32, i32* %cb_idx352, align 4, !dbg !12100
  %shr429 = lshr i32 %376, 12, !dbg !12101
  %shl430 = shl i32 %call428, %shr429, !dbg !12102
  br label %cond.end432, !dbg !12103

cond.false431:                                    ; preds = %do.end419
  br label %cond.end432, !dbg !12104

cond.end432:                                      ; preds = %cond.false431, %cond.true426
  %cond433 = phi i32 [ %shl430, %cond.true426 ], [ 0, %cond.false431 ], !dbg !12106
  store i32 %cond433, i32* %sign, align 4, !dbg !12108
  %377 = load i32, i32* %re_size_plus8, align 4, !dbg !12109
  %378 = load i32, i32* %re_index, align 4, !dbg !12110
  %379 = load i32, i32* %nnz351, align 4, !dbg !12111
  %add434 = add i32 %378, %379, !dbg !12112
  %cmp435 = icmp ugt i32 %377, %add434, !dbg !12113
  br i1 %cmp435, label %cond.true437, label %cond.false439, !dbg !12114

cond.true437:                                     ; preds = %cond.end432
  %380 = load i32, i32* %re_index, align 4, !dbg !12115
  %381 = load i32, i32* %nnz351, align 4, !dbg !12116
  %add438 = add i32 %380, %381, !dbg !12117
  br label %cond.end440, !dbg !12118

cond.false439:                                    ; preds = %cond.end432
  %382 = load i32, i32* %re_size_plus8, align 4, !dbg !12119
  br label %cond.end440, !dbg !12120

cond.end440:                                      ; preds = %cond.false439, %cond.true437
  %cond441 = phi i32 [ %add438, %cond.true437 ], [ %382, %cond.false439 ], !dbg !12121
  store i32 %cond441, i32* %re_index, align 4, !dbg !12122
  %383 = load i32*, i32** %cf347, align 8, !dbg !12123
  %384 = load i32, i32* %cb_idx352, align 4, !dbg !12124
  %385 = load i32, i32* %sign, align 4, !dbg !12125
  %call442 = call i32* @DEC_UPAIR(i32* %383, i32 %384, i32 %385), !dbg !12126
  store i32* %call442, i32** %cf347, align 8, !dbg !12127
  br label %do.cond443, !dbg !12128

do.cond443:                                       ; preds = %cond.end440
  %386 = load i32, i32* %len348, align 4, !dbg !12129
  %sub444 = sub nsw i32 %386, 2, !dbg !12129
  store i32 %sub444, i32* %len348, align 4, !dbg !12129
  %tobool445 = icmp ne i32 %sub444, 0, !dbg !12131
  br i1 %tobool445, label %do.body349, label %do.end446, !dbg !12131, !llvm.loop !11940

do.end446:                                        ; preds = %do.cond443
  br label %for.inc447, !dbg !12132

for.inc447:                                       ; preds = %do.end446
  %387 = load i32, i32* %group, align 4, !dbg !12133
  %inc448 = add nsw i32 %387, 1, !dbg !12133
  store i32 %inc448, i32* %group, align 4, !dbg !12133
  %388 = load i32*, i32** %cfo, align 8, !dbg !12135
  %add.ptr449 = getelementptr inbounds i32, i32* %388, i64 128, !dbg !12135
  store i32* %add.ptr449, i32** %cfo, align 8, !dbg !12135
  br label %for.cond343, !dbg !12136, !llvm.loop !12137

for.end450:                                       ; preds = %for.cond343
  br label %sw.epilog, !dbg !12139

sw.default:                                       ; preds = %if.else76
  store i32 0, i32* %group, align 4, !dbg !12140
  br label %for.cond451, !dbg !12141

for.cond451:                                      ; preds = %for.inc627, %sw.default
  %389 = load i32, i32* %group, align 4, !dbg !12142
  %390 = load i32, i32* %g_len, align 4, !dbg !12144
  %cmp452 = icmp slt i32 %389, %390, !dbg !12145
  br i1 %cmp452, label %for.body454, label %for.end630, !dbg !12146

for.body454:                                      ; preds = %for.cond451
  call void @llvm.dbg.declare(metadata i32** %icf, metadata !12147, metadata !2068), !dbg !12148
  %391 = load i32*, i32** %cfo, align 8, !dbg !12149
  store i32* %391, i32** %icf, align 8, !dbg !12148
  call void @llvm.dbg.declare(metadata i32* %v, metadata !12150, metadata !2068), !dbg !12151
  call void @llvm.dbg.declare(metadata i32* %len455, metadata !12152, metadata !2068), !dbg !12153
  %392 = load i32, i32* %off_len, align 4, !dbg !12154
  store i32 %392, i32* %len455, align 4, !dbg !12153
  br label %do.body456, !dbg !12155, !llvm.loop !12156

do.body456:                                       ; preds = %do.cond623, %for.body454
  call void @llvm.dbg.declare(metadata i32* %code457, metadata !12157, metadata !2068), !dbg !12158
  call void @llvm.dbg.declare(metadata i32* %nzt, metadata !12159, metadata !2068), !dbg !12160
  call void @llvm.dbg.declare(metadata i32* %nnz458, metadata !12161, metadata !2068), !dbg !12162
  call void @llvm.dbg.declare(metadata i32* %cb_idx459, metadata !12163, metadata !2068), !dbg !12164
  call void @llvm.dbg.declare(metadata i32* %bits460, metadata !12165, metadata !2068), !dbg !12166
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12167, metadata !2068), !dbg !12168
  %393 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12169
  %buffer461 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %393, i32 0, i32 0, !dbg !12170
  %394 = load i8*, i8** %buffer461, align 8, !dbg !12170
  %395 = load i32, i32* %re_index, align 4, !dbg !12171
  %shr462 = lshr i32 %395, 3, !dbg !12172
  %idx.ext463 = zext i32 %shr462 to i64, !dbg !12173
  %add.ptr464 = getelementptr inbounds i8, i8* %394, i64 %idx.ext463, !dbg !12173
  %396 = bitcast i8* %add.ptr464 to %union.unaligned_32*, !dbg !12174
  %l465 = bitcast %union.unaligned_32* %396 to i32*, !dbg !12174
  %397 = load i32, i32* %l465, align 1, !dbg !12174
  store i32 %397, i32* %x.addr.i882, align 4, !dbg !12175
  %398 = load i32, i32* %x.addr.i882, align 4, !dbg !12176
  %shl.i883 = shl i32 %398, 8, !dbg !12177
  %and.i884 = and i32 %shl.i883, 65280, !dbg !12178
  %399 = load i32, i32* %x.addr.i882, align 4, !dbg !12179
  %shr.i885 = lshr i32 %399, 8, !dbg !12180
  %and1.i886 = and i32 %shr.i885, 255, !dbg !12181
  %or.i887 = or i32 %and.i884, %and1.i886, !dbg !12182
  %shl2.i888 = shl i32 %or.i887, 16, !dbg !12183
  %400 = load i32, i32* %x.addr.i882, align 4, !dbg !12184
  %shr3.i889 = lshr i32 %400, 16, !dbg !12185
  %shl4.i890 = shl i32 %shr3.i889, 8, !dbg !12186
  %and5.i891 = and i32 %shl4.i890, 65280, !dbg !12187
  %401 = load i32, i32* %x.addr.i882, align 4, !dbg !12188
  %shr6.i892 = lshr i32 %401, 16, !dbg !12189
  %shr7.i893 = lshr i32 %shr6.i892, 8, !dbg !12190
  %and8.i894 = and i32 %shr7.i893, 255, !dbg !12191
  %or9.i895 = or i32 %and5.i891, %and8.i894, !dbg !12192
  %or10.i896 = or i32 %shl2.i888, %or9.i895, !dbg !12193
  %402 = load i32, i32* %re_index, align 4, !dbg !12194
  %and467 = and i32 %402, 7, !dbg !12195
  %shl468 = shl i32 %or10.i896, %and467, !dbg !12196
  store i32 %shl468, i32* %re_cache, align 4, !dbg !12197
  br label %do.body469, !dbg !12198, !llvm.loop !12199

do.body469:                                       ; preds = %do.body456
  call void @llvm.dbg.declare(metadata i32* %n470, metadata !12200, metadata !2068), !dbg !12201
  call void @llvm.dbg.declare(metadata i32* %nb_bits471, metadata !12202, metadata !2068), !dbg !12203
  call void @llvm.dbg.declare(metadata i32* %index472, metadata !12204, metadata !2068), !dbg !12205
  %403 = load i32, i32* %re_cache, align 4, !dbg !12206
  %call473 = call i32 @NEG_USR32(i32 %403, i8 signext 8), !dbg !12208
  store i32 %call473, i32* %index472, align 4, !dbg !12209
  %404 = load i32, i32* %index472, align 4, !dbg !12210
  %idxprom474 = zext i32 %404 to i64, !dbg !12211
  %405 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !12211
  %arrayidx475 = getelementptr inbounds [2 x i16], [2 x i16]* %405, i64 %idxprom474, !dbg !12211
  %arrayidx476 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx475, i64 0, i64 0, !dbg !12211
  %406 = load i16, i16* %arrayidx476, align 2, !dbg !12211
  %conv477 = sext i16 %406 to i32, !dbg !12211
  store i32 %conv477, i32* %code457, align 4, !dbg !12212
  %407 = load i32, i32* %index472, align 4, !dbg !12213
  %idxprom478 = zext i32 %407 to i64, !dbg !12214
  %408 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !12214
  %arrayidx479 = getelementptr inbounds [2 x i16], [2 x i16]* %408, i64 %idxprom478, !dbg !12214
  %arrayidx480 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx479, i64 0, i64 1, !dbg !12214
  %409 = load i16, i16* %arrayidx480, align 2, !dbg !12214
  %conv481 = sext i16 %409 to i32, !dbg !12214
  store i32 %conv481, i32* %n470, align 4, !dbg !12215
  %410 = load i32, i32* %n470, align 4, !dbg !12216
  %cmp482 = icmp slt i32 %410, 0, !dbg !12217
  br i1 %cmp482, label %if.then484, label %if.end513, !dbg !12218

if.then484:                                       ; preds = %do.body469
  %411 = load i32, i32* %re_size_plus8, align 4, !dbg !12219
  %412 = load i32, i32* %re_index, align 4, !dbg !12221
  %add485 = add i32 %412, 8, !dbg !12222
  %cmp486 = icmp ugt i32 %411, %add485, !dbg !12223
  br i1 %cmp486, label %cond.true488, label %cond.false490, !dbg !12224

cond.true488:                                     ; preds = %if.then484
  %413 = load i32, i32* %re_index, align 4, !dbg !12225
  %add489 = add i32 %413, 8, !dbg !12227
  br label %cond.end491, !dbg !12228

cond.false490:                                    ; preds = %if.then484
  %414 = load i32, i32* %re_size_plus8, align 4, !dbg !12229
  br label %cond.end491, !dbg !12231

cond.end491:                                      ; preds = %cond.false490, %cond.true488
  %cond492 = phi i32 [ %add489, %cond.true488 ], [ %414, %cond.false490 ], !dbg !12232
  store i32 %cond492, i32* %re_index, align 4, !dbg !12233
  %415 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12234
  %buffer493 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %415, i32 0, i32 0, !dbg !12235
  %416 = load i8*, i8** %buffer493, align 8, !dbg !12235
  %417 = load i32, i32* %re_index, align 4, !dbg !12236
  %shr494 = lshr i32 %417, 3, !dbg !12237
  %idx.ext495 = zext i32 %shr494 to i64, !dbg !12238
  %add.ptr496 = getelementptr inbounds i8, i8* %416, i64 %idx.ext495, !dbg !12238
  %418 = bitcast i8* %add.ptr496 to %union.unaligned_32*, !dbg !12239
  %l497 = bitcast %union.unaligned_32* %418 to i32*, !dbg !12239
  %419 = load i32, i32* %l497, align 1, !dbg !12239
  store i32 %419, i32* %x.addr.i852, align 4, !dbg !12240
  %420 = load i32, i32* %x.addr.i852, align 4, !dbg !12241
  %shl.i853 = shl i32 %420, 8, !dbg !12242
  %and.i854 = and i32 %shl.i853, 65280, !dbg !12243
  %421 = load i32, i32* %x.addr.i852, align 4, !dbg !12244
  %shr.i855 = lshr i32 %421, 8, !dbg !12245
  %and1.i856 = and i32 %shr.i855, 255, !dbg !12246
  %or.i857 = or i32 %and.i854, %and1.i856, !dbg !12247
  %shl2.i858 = shl i32 %or.i857, 16, !dbg !12248
  %422 = load i32, i32* %x.addr.i852, align 4, !dbg !12249
  %shr3.i859 = lshr i32 %422, 16, !dbg !12250
  %shl4.i860 = shl i32 %shr3.i859, 8, !dbg !12251
  %and5.i861 = and i32 %shl4.i860, 65280, !dbg !12252
  %423 = load i32, i32* %x.addr.i852, align 4, !dbg !12253
  %shr6.i862 = lshr i32 %423, 16, !dbg !12254
  %shr7.i863 = lshr i32 %shr6.i862, 8, !dbg !12255
  %and8.i864 = and i32 %shr7.i863, 255, !dbg !12256
  %or9.i865 = or i32 %and5.i861, %and8.i864, !dbg !12257
  %or10.i866 = or i32 %shl2.i858, %or9.i865, !dbg !12258
  %424 = load i32, i32* %re_index, align 4, !dbg !12259
  %and499 = and i32 %424, 7, !dbg !12260
  %shl500 = shl i32 %or10.i866, %and499, !dbg !12261
  store i32 %shl500, i32* %re_cache, align 4, !dbg !12262
  %425 = load i32, i32* %n470, align 4, !dbg !12263
  %sub501 = sub nsw i32 0, %425, !dbg !12264
  store i32 %sub501, i32* %nb_bits471, align 4, !dbg !12265
  %426 = load i32, i32* %re_cache, align 4, !dbg !12266
  %427 = load i32, i32* %nb_bits471, align 4, !dbg !12267
  %conv502 = trunc i32 %427 to i8, !dbg !12267
  %call503 = call i32 @NEG_USR32(i32 %426, i8 signext %conv502), !dbg !12268
  %428 = load i32, i32* %code457, align 4, !dbg !12270
  %add504 = add i32 %call503, %428, !dbg !12271
  store i32 %add504, i32* %index472, align 4, !dbg !12272
  %429 = load i32, i32* %index472, align 4, !dbg !12273
  %idxprom505 = zext i32 %429 to i64, !dbg !12274
  %430 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !12274
  %arrayidx506 = getelementptr inbounds [2 x i16], [2 x i16]* %430, i64 %idxprom505, !dbg !12274
  %arrayidx507 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx506, i64 0, i64 0, !dbg !12274
  %431 = load i16, i16* %arrayidx507, align 2, !dbg !12274
  %conv508 = sext i16 %431 to i32, !dbg !12274
  store i32 %conv508, i32* %code457, align 4, !dbg !12275
  %432 = load i32, i32* %index472, align 4, !dbg !12276
  %idxprom509 = zext i32 %432 to i64, !dbg !12277
  %433 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !12277
  %arrayidx510 = getelementptr inbounds [2 x i16], [2 x i16]* %433, i64 %idxprom509, !dbg !12277
  %arrayidx511 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx510, i64 0, i64 1, !dbg !12277
  %434 = load i16, i16* %arrayidx511, align 2, !dbg !12277
  %conv512 = sext i16 %434 to i32, !dbg !12277
  store i32 %conv512, i32* %n470, align 4, !dbg !12278
  br label %if.end513, !dbg !12279

if.end513:                                        ; preds = %cond.end491, %do.body469
  br label %do.body514, !dbg !12280, !llvm.loop !12282

do.body514:                                       ; preds = %if.end513
  %435 = load i32, i32* %n470, align 4, !dbg !12284
  %436 = load i32, i32* %re_cache, align 4, !dbg !12287
  %shl515 = shl i32 %436, %435, !dbg !12287
  store i32 %shl515, i32* %re_cache, align 4, !dbg !12287
  %437 = load i32, i32* %re_size_plus8, align 4, !dbg !12288
  %438 = load i32, i32* %re_index, align 4, !dbg !12289
  %439 = load i32, i32* %n470, align 4, !dbg !12290
  %add516 = add i32 %438, %439, !dbg !12291
  %cmp517 = icmp ugt i32 %437, %add516, !dbg !12292
  br i1 %cmp517, label %cond.true519, label %cond.false521, !dbg !12293

cond.true519:                                     ; preds = %do.body514
  %440 = load i32, i32* %re_index, align 4, !dbg !12294
  %441 = load i32, i32* %n470, align 4, !dbg !12296
  %add520 = add i32 %440, %441, !dbg !12297
  br label %cond.end522, !dbg !12298

cond.false521:                                    ; preds = %do.body514
  %442 = load i32, i32* %re_size_plus8, align 4, !dbg !12299
  br label %cond.end522, !dbg !12301

cond.end522:                                      ; preds = %cond.false521, %cond.true519
  %cond523 = phi i32 [ %add520, %cond.true519 ], [ %442, %cond.false521 ], !dbg !12302
  store i32 %cond523, i32* %re_index, align 4, !dbg !12304
  br label %do.end525, !dbg !12305

do.end525:                                        ; preds = %cond.end522
  br label %do.end527, !dbg !12306

do.end527:                                        ; preds = %do.end525
  %443 = load i32, i32* %code457, align 4, !dbg !12308
  %tobool528 = icmp ne i32 %443, 0, !dbg !12308
  br i1 %tobool528, label %if.end531, label %if.then529, !dbg !12310

if.then529:                                       ; preds = %do.end527
  %444 = load i32*, i32** %icf, align 8, !dbg !12311
  %incdec.ptr = getelementptr inbounds i32, i32* %444, i32 1, !dbg !12311
  store i32* %incdec.ptr, i32** %icf, align 8, !dbg !12311
  store i32 0, i32* %444, align 4, !dbg !12313
  %445 = load i32*, i32** %icf, align 8, !dbg !12314
  %incdec.ptr530 = getelementptr inbounds i32, i32* %445, i32 1, !dbg !12314
  store i32* %incdec.ptr530, i32** %icf, align 8, !dbg !12314
  store i32 0, i32* %445, align 4, !dbg !12315
  br label %do.cond623, !dbg !12316

if.end531:                                        ; preds = %do.end527
  %446 = load i32, i32* %code457, align 4, !dbg !12317
  %idxprom532 = sext i32 %446 to i64, !dbg !12318
  %447 = load i16*, i16** %cb_vector_idx, align 8, !dbg !12318
  %arrayidx533 = getelementptr inbounds i16, i16* %447, i64 %idxprom532, !dbg !12318
  %448 = load i16, i16* %arrayidx533, align 2, !dbg !12318
  %conv534 = zext i16 %448 to i32, !dbg !12318
  store i32 %conv534, i32* %cb_idx459, align 4, !dbg !12319
  %449 = load i32, i32* %cb_idx459, align 4, !dbg !12320
  %shr535 = lshr i32 %449, 12, !dbg !12321
  store i32 %shr535, i32* %nnz458, align 4, !dbg !12322
  %450 = load i32, i32* %cb_idx459, align 4, !dbg !12323
  %shr536 = lshr i32 %450, 8, !dbg !12324
  store i32 %shr536, i32* %nzt, align 4, !dbg !12325
  %451 = load i32, i32* %re_cache, align 4, !dbg !12326
  %452 = load i32, i32* %nnz458, align 4, !dbg !12327
  %conv537 = trunc i32 %452 to i8, !dbg !12327
  %call538 = call i32 @NEG_USR32(i32 %451, i8 signext %conv537), !dbg !12328
  %453 = load i32, i32* %nnz458, align 4, !dbg !12329
  %sub539 = sub i32 32, %453, !dbg !12330
  %shl540 = shl i32 %call538, %sub539, !dbg !12331
  store i32 %shl540, i32* %bits460, align 4, !dbg !12332
  %454 = load i32, i32* %re_size_plus8, align 4, !dbg !12333
  %455 = load i32, i32* %re_index, align 4, !dbg !12334
  %456 = load i32, i32* %nnz458, align 4, !dbg !12335
  %add541 = add i32 %455, %456, !dbg !12336
  %cmp542 = icmp ugt i32 %454, %add541, !dbg !12337
  br i1 %cmp542, label %cond.true544, label %cond.false546, !dbg !12338

cond.true544:                                     ; preds = %if.end531
  %457 = load i32, i32* %re_index, align 4, !dbg !12339
  %458 = load i32, i32* %nnz458, align 4, !dbg !12341
  %add545 = add i32 %457, %458, !dbg !12342
  br label %cond.end547, !dbg !12343

cond.false546:                                    ; preds = %if.end531
  %459 = load i32, i32* %re_size_plus8, align 4, !dbg !12344
  br label %cond.end547, !dbg !12346

cond.end547:                                      ; preds = %cond.false546, %cond.true544
  %cond548 = phi i32 [ %add545, %cond.true544 ], [ %459, %cond.false546 ], !dbg !12347
  store i32 %cond548, i32* %re_index, align 4, !dbg !12349
  store i32 0, i32* %j, align 4, !dbg !12350
  br label %for.cond549, !dbg !12351

for.cond549:                                      ; preds = %for.inc620, %cond.end547
  %460 = load i32, i32* %j, align 4, !dbg !12352
  %cmp550 = icmp slt i32 %460, 2, !dbg !12354
  br i1 %cmp550, label %for.body552, label %for.end622, !dbg !12355

for.body552:                                      ; preds = %for.cond549
  %461 = load i32, i32* %nzt, align 4, !dbg !12356
  %462 = load i32, i32* %j, align 4, !dbg !12357
  %shl553 = shl i32 1, %462, !dbg !12358
  %and554 = and i32 %461, %shl553, !dbg !12359
  %tobool555 = icmp ne i32 %and554, 0, !dbg !12359
  br i1 %tobool555, label %if.then556, label %if.else607, !dbg !12360

if.then556:                                       ; preds = %for.body552
  call void @llvm.dbg.declare(metadata i32* %b, metadata !12361, metadata !2068), !dbg !12362
  call void @llvm.dbg.declare(metadata i32* %n557, metadata !12363, metadata !2068), !dbg !12364
  %463 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12365
  %buffer558 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %463, i32 0, i32 0, !dbg !12366
  %464 = load i8*, i8** %buffer558, align 8, !dbg !12366
  %465 = load i32, i32* %re_index, align 4, !dbg !12367
  %shr559 = lshr i32 %465, 3, !dbg !12368
  %idx.ext560 = zext i32 %shr559 to i64, !dbg !12369
  %add.ptr561 = getelementptr inbounds i8, i8* %464, i64 %idx.ext560, !dbg !12369
  %466 = bitcast i8* %add.ptr561 to %union.unaligned_32*, !dbg !12370
  %l562 = bitcast %union.unaligned_32* %466 to i32*, !dbg !12370
  %467 = load i32, i32* %l562, align 1, !dbg !12370
  store i32 %467, i32* %x.addr.i807, align 4, !dbg !12371
  %468 = load i32, i32* %x.addr.i807, align 4, !dbg !12372
  %shl.i808 = shl i32 %468, 8, !dbg !12373
  %and.i809 = and i32 %shl.i808, 65280, !dbg !12374
  %469 = load i32, i32* %x.addr.i807, align 4, !dbg !12375
  %shr.i810 = lshr i32 %469, 8, !dbg !12376
  %and1.i811 = and i32 %shr.i810, 255, !dbg !12377
  %or.i812 = or i32 %and.i809, %and1.i811, !dbg !12378
  %shl2.i813 = shl i32 %or.i812, 16, !dbg !12379
  %470 = load i32, i32* %x.addr.i807, align 4, !dbg !12380
  %shr3.i814 = lshr i32 %470, 16, !dbg !12381
  %shl4.i815 = shl i32 %shr3.i814, 8, !dbg !12382
  %and5.i816 = and i32 %shl4.i815, 65280, !dbg !12383
  %471 = load i32, i32* %x.addr.i807, align 4, !dbg !12384
  %shr6.i817 = lshr i32 %471, 16, !dbg !12385
  %shr7.i818 = lshr i32 %shr6.i817, 8, !dbg !12386
  %and8.i819 = and i32 %shr7.i818, 255, !dbg !12387
  %or9.i820 = or i32 %and5.i816, %and8.i819, !dbg !12388
  %or10.i821 = or i32 %shl2.i813, %or9.i820, !dbg !12389
  %472 = load i32, i32* %re_index, align 4, !dbg !12390
  %and564 = and i32 %472, 7, !dbg !12391
  %shl565 = shl i32 %or10.i821, %and564, !dbg !12392
  store i32 %shl565, i32* %re_cache, align 4, !dbg !12393
  %473 = load i32, i32* %re_cache, align 4, !dbg !12394
  store i32 %473, i32* %b, align 4, !dbg !12395
  %474 = load i32, i32* %b, align 4, !dbg !12396
  %neg = xor i32 %474, -1, !dbg !12397
  %or = or i32 %neg, 1, !dbg !12398
  %475 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !12399
  %sub566 = sub nsw i32 31, %475, !dbg !12400
  %sub567 = sub nsw i32 31, %sub566, !dbg !12401
  store i32 %sub567, i32* %b, align 4, !dbg !12402
  %476 = load i32, i32* %b, align 4, !dbg !12403
  %cmp568 = icmp ugt i32 %476, 8, !dbg !12405
  br i1 %cmp568, label %if.then570, label %if.end571, !dbg !12406

if.then570:                                       ; preds = %if.then556
  %477 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12407
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %477, i32 0, i32 1, !dbg !12409
  %478 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !12409
  %479 = bitcast %struct.AVCodecContext* %478 to i8*, !dbg !12407
  call void (i8*, i32, i8*, ...) @av_log(i8* %479, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.60, i32 0, i32 0)), !dbg !12410
  store i32 -1094995529, i32* %retval, align 4, !dbg !12411
  br label %return, !dbg !12411

if.end571:                                        ; preds = %if.then556
  br label %do.body572, !dbg !12412, !llvm.loop !12413

do.body572:                                       ; preds = %if.end571
  %480 = load i32, i32* %b, align 4, !dbg !12414
  %add573 = add i32 %480, 1, !dbg !12417
  %481 = load i32, i32* %re_cache, align 4, !dbg !12418
  %shl574 = shl i32 %481, %add573, !dbg !12418
  store i32 %shl574, i32* %re_cache, align 4, !dbg !12418
  %482 = load i32, i32* %re_size_plus8, align 4, !dbg !12419
  %483 = load i32, i32* %re_index, align 4, !dbg !12420
  %484 = load i32, i32* %b, align 4, !dbg !12421
  %add575 = add i32 %484, 1, !dbg !12422
  %add576 = add i32 %483, %add575, !dbg !12423
  %cmp577 = icmp ugt i32 %482, %add576, !dbg !12424
  br i1 %cmp577, label %cond.true579, label %cond.false582, !dbg !12425

cond.true579:                                     ; preds = %do.body572
  %485 = load i32, i32* %re_index, align 4, !dbg !12426
  %486 = load i32, i32* %b, align 4, !dbg !12428
  %add580 = add i32 %486, 1, !dbg !12429
  %add581 = add i32 %485, %add580, !dbg !12430
  br label %cond.end583, !dbg !12431

cond.false582:                                    ; preds = %do.body572
  %487 = load i32, i32* %re_size_plus8, align 4, !dbg !12432
  br label %cond.end583, !dbg !12434

cond.end583:                                      ; preds = %cond.false582, %cond.true579
  %cond584 = phi i32 [ %add581, %cond.true579 ], [ %487, %cond.false582 ], !dbg !12435
  store i32 %cond584, i32* %re_index, align 4, !dbg !12437
  br label %do.end586, !dbg !12438

do.end586:                                        ; preds = %cond.end583
  %488 = load i32, i32* %b, align 4, !dbg !12439
  %add587 = add i32 %488, 4, !dbg !12439
  store i32 %add587, i32* %b, align 4, !dbg !12439
  %489 = load i32, i32* %b, align 4, !dbg !12440
  %shl588 = shl i32 1, %489, !dbg !12441
  %490 = load i32, i32* %re_cache, align 4, !dbg !12442
  %491 = load i32, i32* %b, align 4, !dbg !12443
  %conv589 = trunc i32 %491 to i8, !dbg !12443
  %call590 = call i32 @NEG_USR32(i32 %490, i8 signext %conv589), !dbg !12444
  %add591 = add i32 %shl588, %call590, !dbg !12445
  store i32 %add591, i32* %n557, align 4, !dbg !12446
  %492 = load i32, i32* %re_size_plus8, align 4, !dbg !12447
  %493 = load i32, i32* %re_index, align 4, !dbg !12448
  %494 = load i32, i32* %b, align 4, !dbg !12449
  %add592 = add i32 %493, %494, !dbg !12450
  %cmp593 = icmp ugt i32 %492, %add592, !dbg !12451
  br i1 %cmp593, label %cond.true595, label %cond.false597, !dbg !12452

cond.true595:                                     ; preds = %do.end586
  %495 = load i32, i32* %re_index, align 4, !dbg !12453
  %496 = load i32, i32* %b, align 4, !dbg !12455
  %add596 = add i32 %495, %496, !dbg !12456
  br label %cond.end598, !dbg !12457

cond.false597:                                    ; preds = %do.end586
  %497 = load i32, i32* %re_size_plus8, align 4, !dbg !12458
  br label %cond.end598, !dbg !12460

cond.end598:                                      ; preds = %cond.false597, %cond.true595
  %cond599 = phi i32 [ %add596, %cond.true595 ], [ %497, %cond.false597 ], !dbg !12461
  store i32 %cond599, i32* %re_index, align 4, !dbg !12463
  %498 = load i32, i32* %n557, align 4, !dbg !12464
  store i32 %498, i32* %v, align 4, !dbg !12465
  %499 = load i32, i32* %bits460, align 4, !dbg !12466
  %and600 = and i32 %499, -2147483648, !dbg !12468
  %tobool601 = icmp ne i32 %and600, 0, !dbg !12468
  br i1 %tobool601, label %if.then602, label %if.end604, !dbg !12469

if.then602:                                       ; preds = %cond.end598
  %500 = load i32, i32* %v, align 4, !dbg !12470
  %sub603 = sub nsw i32 0, %500, !dbg !12471
  store i32 %sub603, i32* %v, align 4, !dbg !12472
  br label %if.end604, !dbg !12473

if.end604:                                        ; preds = %if.then602, %cond.end598
  %501 = load i32, i32* %v, align 4, !dbg !12474
  %502 = load i32*, i32** %icf, align 8, !dbg !12475
  %incdec.ptr605 = getelementptr inbounds i32, i32* %502, i32 1, !dbg !12475
  store i32* %incdec.ptr605, i32** %icf, align 8, !dbg !12475
  store i32 %501, i32* %502, align 4, !dbg !12476
  %503 = load i32, i32* %bits460, align 4, !dbg !12477
  %shl606 = shl i32 %503, 1, !dbg !12477
  store i32 %shl606, i32* %bits460, align 4, !dbg !12477
  br label %if.end618, !dbg !12478

if.else607:                                       ; preds = %for.body552
  %504 = load i32, i32* %cb_idx459, align 4, !dbg !12479
  %and608 = and i32 %504, 15, !dbg !12481
  store i32 %and608, i32* %v, align 4, !dbg !12482
  %505 = load i32, i32* %bits460, align 4, !dbg !12483
  %and609 = and i32 %505, -2147483648, !dbg !12485
  %tobool610 = icmp ne i32 %and609, 0, !dbg !12485
  br i1 %tobool610, label %if.then611, label %if.end613, !dbg !12486

if.then611:                                       ; preds = %if.else607
  %506 = load i32, i32* %v, align 4, !dbg !12487
  %sub612 = sub nsw i32 0, %506, !dbg !12488
  store i32 %sub612, i32* %v, align 4, !dbg !12489
  br label %if.end613, !dbg !12490

if.end613:                                        ; preds = %if.then611, %if.else607
  %507 = load i32, i32* %v, align 4, !dbg !12491
  %508 = load i32*, i32** %icf, align 8, !dbg !12492
  %incdec.ptr614 = getelementptr inbounds i32, i32* %508, i32 1, !dbg !12492
  store i32* %incdec.ptr614, i32** %icf, align 8, !dbg !12492
  store i32 %507, i32* %508, align 4, !dbg !12493
  %509 = load i32, i32* %v, align 4, !dbg !12494
  %tobool615 = icmp ne i32 %509, 0, !dbg !12495
  %lnot = xor i1 %tobool615, true, !dbg !12495
  %lnot616 = xor i1 %lnot, true, !dbg !12496
  %lnot.ext = zext i1 %lnot616 to i32, !dbg !12496
  %510 = load i32, i32* %bits460, align 4, !dbg !12497
  %shl617 = shl i32 %510, %lnot.ext, !dbg !12497
  store i32 %shl617, i32* %bits460, align 4, !dbg !12497
  br label %if.end618

if.end618:                                        ; preds = %if.end613, %if.end604
  %511 = load i32, i32* %cb_idx459, align 4, !dbg !12498
  %shr619 = lshr i32 %511, 4, !dbg !12498
  store i32 %shr619, i32* %cb_idx459, align 4, !dbg !12498
  br label %for.inc620, !dbg !12499

for.inc620:                                       ; preds = %if.end618
  %512 = load i32, i32* %j, align 4, !dbg !12500
  %inc621 = add nsw i32 %512, 1, !dbg !12500
  store i32 %inc621, i32* %j, align 4, !dbg !12500
  br label %for.cond549, !dbg !12502, !llvm.loop !12503

for.end622:                                       ; preds = %for.cond549
  br label %do.cond623, !dbg !12505

do.cond623:                                       ; preds = %for.end622, %if.then529
  %513 = load i32, i32* %len455, align 4, !dbg !12506
  %sub624 = sub nsw i32 %513, 2, !dbg !12506
  store i32 %sub624, i32* %len455, align 4, !dbg !12506
  %tobool625 = icmp ne i32 %sub624, 0, !dbg !12508
  br i1 %tobool625, label %do.body456, label %do.end626, !dbg !12508, !llvm.loop !12156

do.end626:                                        ; preds = %do.cond623
  br label %for.inc627, !dbg !12509

for.inc627:                                       ; preds = %do.end626
  %514 = load i32, i32* %group, align 4, !dbg !12510
  %inc628 = add nsw i32 %514, 1, !dbg !12510
  store i32 %inc628, i32* %group, align 4, !dbg !12510
  %515 = load i32*, i32** %cfo, align 8, !dbg !12512
  %add.ptr629 = getelementptr inbounds i32, i32* %515, i64 128, !dbg !12512
  store i32* %add.ptr629, i32** %cfo, align 8, !dbg !12512
  br label %for.cond451, !dbg !12513, !llvm.loop !12514

for.end630:                                       ; preds = %for.cond451
  br label %sw.epilog, !dbg !12516

sw.epilog:                                        ; preds = %for.end630, %for.end450, %for.end341, %for.end252, %for.end148
  %516 = load i32, i32* %re_index, align 4, !dbg !12517
  %517 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12518
  %index631 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %517, i32 0, i32 2, !dbg !12519
  store i32 %516, i32* %index631, align 8, !dbg !12520
  br label %if.end632

if.end632:                                        ; preds = %sw.epilog, %for.end75
  br label %if.end633

if.end633:                                        ; preds = %if.end632, %for.end49
  br label %for.inc634, !dbg !12521

for.inc634:                                       ; preds = %if.end633
  %518 = load i32, i32* %i, align 4, !dbg !12522
  %inc635 = add nsw i32 %518, 1, !dbg !12522
  store i32 %inc635, i32* %i, align 4, !dbg !12522
  %519 = load i32, i32* %idx, align 4, !dbg !12524
  %inc636 = add nsw i32 %519, 1, !dbg !12524
  store i32 %inc636, i32* %idx, align 4, !dbg !12524
  br label %for.cond17, !dbg !12525, !llvm.loop !12526

for.end637:                                       ; preds = %for.cond17
  %520 = load i32, i32* %g_len, align 4, !dbg !12528
  %shl638 = shl i32 %520, 7, !dbg !12529
  %521 = load i32*, i32** %coef.addr, align 8, !dbg !12530
  %idx.ext639 = zext i32 %shl638 to i64, !dbg !12530
  %add.ptr640 = getelementptr inbounds i32, i32* %521, i64 %idx.ext639, !dbg !12530
  store i32* %add.ptr640, i32** %coef.addr, align 8, !dbg !12530
  br label %for.inc641, !dbg !12531

for.inc641:                                       ; preds = %for.end637
  %522 = load i32, i32* %g, align 4, !dbg !12532
  %inc642 = add nsw i32 %522, 1, !dbg !12532
  store i32 %inc642, i32* %g, align 4, !dbg !12532
  br label %for.cond10, !dbg !12534, !llvm.loop !12535

for.end643:                                       ; preds = %for.cond10
  %523 = load i32, i32* %pulse_present.addr, align 4, !dbg !12537
  %tobool644 = icmp ne i32 %523, 0, !dbg !12537
  br i1 %tobool644, label %if.then645, label %if.end695, !dbg !12539

if.then645:                                       ; preds = %for.end643
  store i32 0, i32* %idx, align 4, !dbg !12540
  store i32 0, i32* %i, align 4, !dbg !12542
  br label %for.cond646, !dbg !12544

for.cond646:                                      ; preds = %for.inc692, %if.then645
  %524 = load i32, i32* %i, align 4, !dbg !12545
  %525 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !12548
  %num_pulse = getelementptr inbounds %struct.Pulse, %struct.Pulse* %525, i32 0, i32 0, !dbg !12549
  %526 = load i32, i32* %num_pulse, align 4, !dbg !12549
  %cmp647 = icmp slt i32 %524, %526, !dbg !12550
  br i1 %cmp647, label %for.body649, label %for.end694, !dbg !12551

for.body649:                                      ; preds = %for.cond646
  call void @llvm.dbg.declare(metadata i32* %co, metadata !12552, metadata !2068), !dbg !12554
  %527 = load i32, i32* %i, align 4, !dbg !12555
  %idxprom650 = sext i32 %527 to i64, !dbg !12556
  %528 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !12556
  %pos = getelementptr inbounds %struct.Pulse, %struct.Pulse* %528, i32 0, i32 2, !dbg !12557
  %arrayidx651 = getelementptr inbounds [4 x i32], [4 x i32]* %pos, i64 0, i64 %idxprom650, !dbg !12556
  %529 = load i32, i32* %arrayidx651, align 4, !dbg !12556
  %idxprom652 = sext i32 %529 to i64, !dbg !12558
  %530 = load i32*, i32** %coef_base, align 8, !dbg !12558
  %arrayidx653 = getelementptr inbounds i32, i32* %530, i64 %idxprom652, !dbg !12558
  %531 = load i32, i32* %arrayidx653, align 4, !dbg !12558
  store i32 %531, i32* %co, align 4, !dbg !12554
  br label %while.cond, !dbg !12559

while.cond:                                       ; preds = %while.body, %for.body649
  %532 = load i32, i32* %idx, align 4, !dbg !12560
  %add654 = add nsw i32 %532, 1, !dbg !12562
  %idxprom655 = sext i32 %add654 to i64, !dbg !12563
  %533 = load i16*, i16** %offsets, align 8, !dbg !12563
  %arrayidx656 = getelementptr inbounds i16, i16* %533, i64 %idxprom655, !dbg !12563
  %534 = load i16, i16* %arrayidx656, align 2, !dbg !12563
  %conv657 = zext i16 %534 to i32, !dbg !12563
  %535 = load i32, i32* %i, align 4, !dbg !12564
  %idxprom658 = sext i32 %535 to i64, !dbg !12565
  %536 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !12565
  %pos659 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %536, i32 0, i32 2, !dbg !12566
  %arrayidx660 = getelementptr inbounds [4 x i32], [4 x i32]* %pos659, i64 0, i64 %idxprom658, !dbg !12565
  %537 = load i32, i32* %arrayidx660, align 4, !dbg !12565
  %cmp661 = icmp sle i32 %conv657, %537, !dbg !12567
  br i1 %cmp661, label %while.body, label %while.end, !dbg !12568

while.body:                                       ; preds = %while.cond
  %538 = load i32, i32* %idx, align 4, !dbg !12569
  %inc663 = add nsw i32 %538, 1, !dbg !12569
  store i32 %inc663, i32* %idx, align 4, !dbg !12569
  br label %while.cond, !dbg !12570, !llvm.loop !12572

while.end:                                        ; preds = %while.cond
  %539 = load i32, i32* %idx, align 4, !dbg !12573
  %idxprom664 = sext i32 %539 to i64, !dbg !12575
  %540 = load i32*, i32** %band_type.addr, align 8, !dbg !12575
  %arrayidx665 = getelementptr inbounds i32, i32* %540, i64 %idxprom664, !dbg !12575
  %541 = load i32, i32* %arrayidx665, align 4, !dbg !12575
  %cmp666 = icmp ne i32 %541, 13, !dbg !12576
  br i1 %cmp666, label %land.lhs.true, label %if.end691, !dbg !12577

land.lhs.true:                                    ; preds = %while.end
  %542 = load i32, i32* %idx, align 4, !dbg !12578
  %idxprom668 = sext i32 %542 to i64, !dbg !12580
  %543 = load i32*, i32** %sf.addr, align 8, !dbg !12580
  %arrayidx669 = getelementptr inbounds i32, i32* %543, i64 %idxprom668, !dbg !12580
  %544 = load i32, i32* %arrayidx669, align 4, !dbg !12580
  %tobool670 = icmp ne i32 %544, 0, !dbg !12580
  br i1 %tobool670, label %if.then671, label %if.end691, !dbg !12581

if.then671:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %ico, metadata !12582, metadata !2068), !dbg !12584
  %545 = load i32, i32* %i, align 4, !dbg !12585
  %idxprom672 = sext i32 %545 to i64, !dbg !12586
  %546 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !12586
  %amp = getelementptr inbounds %struct.Pulse, %struct.Pulse* %546, i32 0, i32 3, !dbg !12587
  %arrayidx673 = getelementptr inbounds [4 x i32], [4 x i32]* %amp, i64 0, i64 %idxprom672, !dbg !12586
  %547 = load i32, i32* %arrayidx673, align 4, !dbg !12586
  %sub674 = sub nsw i32 0, %547, !dbg !12588
  store i32 %sub674, i32* %ico, align 4, !dbg !12584
  %548 = load i32, i32* %co, align 4, !dbg !12589
  %tobool675 = icmp ne i32 %548, 0, !dbg !12589
  br i1 %tobool675, label %if.then676, label %if.end685, !dbg !12591

if.then676:                                       ; preds = %if.then671
  %549 = load i32, i32* %co, align 4, !dbg !12592
  %550 = load i32, i32* %co, align 4, !dbg !12594
  %cmp677 = icmp sgt i32 %550, 0, !dbg !12595
  br i1 %cmp677, label %cond.true679, label %cond.false681, !dbg !12594

cond.true679:                                     ; preds = %if.then676
  %551 = load i32, i32* %ico, align 4, !dbg !12596
  %sub680 = sub nsw i32 0, %551, !dbg !12598
  br label %cond.end682, !dbg !12599

cond.false681:                                    ; preds = %if.then676
  %552 = load i32, i32* %ico, align 4, !dbg !12600
  br label %cond.end682, !dbg !12602

cond.end682:                                      ; preds = %cond.false681, %cond.true679
  %cond683 = phi i32 [ %sub680, %cond.true679 ], [ %552, %cond.false681 ], !dbg !12603
  %add684 = add nsw i32 %549, %cond683, !dbg !12605
  store i32 %add684, i32* %ico, align 4, !dbg !12606
  br label %if.end685, !dbg !12607

if.end685:                                        ; preds = %cond.end682, %if.then671
  %553 = load i32, i32* %ico, align 4, !dbg !12608
  %554 = load i32, i32* %i, align 4, !dbg !12609
  %idxprom686 = sext i32 %554 to i64, !dbg !12610
  %555 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !12610
  %pos687 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %555, i32 0, i32 2, !dbg !12611
  %arrayidx688 = getelementptr inbounds [4 x i32], [4 x i32]* %pos687, i64 0, i64 %idxprom686, !dbg !12610
  %556 = load i32, i32* %arrayidx688, align 4, !dbg !12610
  %idxprom689 = sext i32 %556 to i64, !dbg !12612
  %557 = load i32*, i32** %coef_base, align 8, !dbg !12612
  %arrayidx690 = getelementptr inbounds i32, i32* %557, i64 %idxprom689, !dbg !12612
  store i32 %553, i32* %arrayidx690, align 4, !dbg !12613
  br label %if.end691, !dbg !12614

if.end691:                                        ; preds = %if.end685, %land.lhs.true, %while.end
  br label %for.inc692, !dbg !12615

for.inc692:                                       ; preds = %if.end691
  %558 = load i32, i32* %i, align 4, !dbg !12616
  %inc693 = add nsw i32 %558, 1, !dbg !12616
  store i32 %inc693, i32* %i, align 4, !dbg !12616
  br label %for.cond646, !dbg !12618, !llvm.loop !12619

for.end694:                                       ; preds = %for.cond646
  br label %if.end695, !dbg !12621

if.end695:                                        ; preds = %for.end694, %for.end643
  %559 = load i32*, i32** %coef_base, align 8, !dbg !12622
  store i32* %559, i32** %coef.addr, align 8, !dbg !12623
  store i32 0, i32* %idx, align 4, !dbg !12624
  store i32 0, i32* %g, align 4, !dbg !12625
  br label %for.cond696, !dbg !12627

for.cond696:                                      ; preds = %for.inc754, %if.end695
  %560 = load i32, i32* %g, align 4, !dbg !12628
  %561 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !12631
  %num_window_groups697 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %561, i32 0, i32 3, !dbg !12632
  %562 = load i32, i32* %num_window_groups697, align 8, !dbg !12632
  %cmp698 = icmp slt i32 %560, %562, !dbg !12633
  br i1 %cmp698, label %for.body700, label %for.end756, !dbg !12634

for.body700:                                      ; preds = %for.cond696
  call void @llvm.dbg.declare(metadata i32* %g_len701, metadata !12635, metadata !2068), !dbg !12637
  %563 = load i32, i32* %g, align 4, !dbg !12638
  %idxprom702 = sext i32 %563 to i64, !dbg !12639
  %564 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !12639
  %group_len703 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %564, i32 0, i32 4, !dbg !12640
  %arrayidx704 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len703, i64 0, i64 %idxprom702, !dbg !12639
  %565 = load i8, i8* %arrayidx704, align 1, !dbg !12639
  %conv705 = zext i8 %565 to i32, !dbg !12639
  store i32 %conv705, i32* %g_len701, align 4, !dbg !12637
  store i32 0, i32* %i, align 4, !dbg !12641
  br label %for.cond706, !dbg !12643

for.cond706:                                      ; preds = %for.inc747, %for.body700
  %566 = load i32, i32* %i, align 4, !dbg !12644
  %567 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !12647
  %max_sfb707 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %567, i32 0, i32 0, !dbg !12648
  %568 = load i8, i8* %max_sfb707, align 8, !dbg !12648
  %conv708 = zext i8 %568 to i32, !dbg !12647
  %cmp709 = icmp slt i32 %566, %conv708, !dbg !12649
  br i1 %cmp709, label %for.body711, label %for.end750, !dbg !12650

for.body711:                                      ; preds = %for.cond706
  call void @llvm.dbg.declare(metadata i32* %cbt_m1712, metadata !12651, metadata !2068), !dbg !12653
  %569 = load i32, i32* %idx, align 4, !dbg !12654
  %idxprom713 = sext i32 %569 to i64, !dbg !12655
  %570 = load i32*, i32** %band_type.addr, align 8, !dbg !12655
  %arrayidx714 = getelementptr inbounds i32, i32* %570, i64 %idxprom713, !dbg !12655
  %571 = load i32, i32* %arrayidx714, align 4, !dbg !12655
  %sub715 = sub i32 %571, 1, !dbg !12656
  store i32 %sub715, i32* %cbt_m1712, align 4, !dbg !12653
  call void @llvm.dbg.declare(metadata i32** %cfo716, metadata !12657, metadata !2068), !dbg !12658
  %572 = load i32*, i32** %coef.addr, align 8, !dbg !12659
  %573 = load i32, i32* %i, align 4, !dbg !12660
  %idxprom717 = sext i32 %573 to i64, !dbg !12661
  %574 = load i16*, i16** %offsets, align 8, !dbg !12661
  %arrayidx718 = getelementptr inbounds i16, i16* %574, i64 %idxprom717, !dbg !12661
  %575 = load i16, i16* %arrayidx718, align 2, !dbg !12661
  %conv719 = zext i16 %575 to i32, !dbg !12661
  %idx.ext720 = sext i32 %conv719 to i64, !dbg !12662
  %add.ptr721 = getelementptr inbounds i32, i32* %572, i64 %idx.ext720, !dbg !12662
  store i32* %add.ptr721, i32** %cfo716, align 8, !dbg !12658
  call void @llvm.dbg.declare(metadata i32* %off_len722, metadata !12663, metadata !2068), !dbg !12664
  %576 = load i32, i32* %i, align 4, !dbg !12665
  %add723 = add nsw i32 %576, 1, !dbg !12666
  %idxprom724 = sext i32 %add723 to i64, !dbg !12667
  %577 = load i16*, i16** %offsets, align 8, !dbg !12667
  %arrayidx725 = getelementptr inbounds i16, i16* %577, i64 %idxprom724, !dbg !12667
  %578 = load i16, i16* %arrayidx725, align 2, !dbg !12667
  %conv726 = zext i16 %578 to i32, !dbg !12667
  %579 = load i32, i32* %i, align 4, !dbg !12668
  %idxprom727 = sext i32 %579 to i64, !dbg !12669
  %580 = load i16*, i16** %offsets, align 8, !dbg !12669
  %arrayidx728 = getelementptr inbounds i16, i16* %580, i64 %idxprom727, !dbg !12669
  %581 = load i16, i16* %arrayidx728, align 2, !dbg !12669
  %conv729 = zext i16 %581 to i32, !dbg !12669
  %sub730 = sub nsw i32 %conv726, %conv729, !dbg !12670
  store i32 %sub730, i32* %off_len722, align 4, !dbg !12664
  call void @llvm.dbg.declare(metadata i32* %group731, metadata !12671, metadata !2068), !dbg !12672
  %582 = load i32, i32* %cbt_m1712, align 4, !dbg !12673
  %cmp732 = icmp ult i32 %582, 12, !dbg !12675
  br i1 %cmp732, label %if.then734, label %if.end746, !dbg !12676

if.then734:                                       ; preds = %for.body711
  store i32 0, i32* %group731, align 4, !dbg !12677
  br label %for.cond735, !dbg !12680

for.cond735:                                      ; preds = %for.inc742, %if.then734
  %583 = load i32, i32* %group731, align 4, !dbg !12681
  %584 = load i32, i32* %g_len701, align 4, !dbg !12684
  %cmp736 = icmp slt i32 %583, %584, !dbg !12685
  br i1 %cmp736, label %for.body738, label %for.end745, !dbg !12686

for.body738:                                      ; preds = %for.cond735
  %585 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12687
  %vector_pow43 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %585, i32 0, i32 30, !dbg !12689
  %586 = load void (i32*, i32)*, void (i32*, i32)** %vector_pow43, align 8, !dbg !12689
  %587 = load i32*, i32** %cfo716, align 8, !dbg !12690
  %588 = load i32, i32* %off_len722, align 4, !dbg !12691
  call void %586(i32* %587, i32 %588), !dbg !12687
  %589 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12692
  %subband_scale = getelementptr inbounds %struct.AACContext, %struct.AACContext* %589, i32 0, i32 31, !dbg !12693
  %590 = load void (i32*, i32*, i32, i32, i32, i8*)*, void (i32*, i32*, i32, i32, i32, i8*)** %subband_scale, align 16, !dbg !12693
  %591 = load i32*, i32** %cfo716, align 8, !dbg !12694
  %592 = load i32*, i32** %cfo716, align 8, !dbg !12695
  %593 = load i32, i32* %idx, align 4, !dbg !12696
  %idxprom739 = sext i32 %593 to i64, !dbg !12697
  %594 = load i32*, i32** %sf.addr, align 8, !dbg !12697
  %arrayidx740 = getelementptr inbounds i32, i32* %594, i64 %idxprom739, !dbg !12697
  %595 = load i32, i32* %arrayidx740, align 4, !dbg !12697
  %596 = load i32, i32* %off_len722, align 4, !dbg !12698
  %597 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12699
  %avctx741 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %597, i32 0, i32 1, !dbg !12700
  %598 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx741, align 8, !dbg !12700
  %599 = bitcast %struct.AVCodecContext* %598 to i8*, !dbg !12699
  call void %590(i32* %591, i32* %592, i32 %595, i32 34, i32 %596, i8* %599), !dbg !12692
  br label %for.inc742, !dbg !12701

for.inc742:                                       ; preds = %for.body738
  %600 = load i32, i32* %group731, align 4, !dbg !12702
  %inc743 = add nsw i32 %600, 1, !dbg !12702
  store i32 %inc743, i32* %group731, align 4, !dbg !12702
  %601 = load i32*, i32** %cfo716, align 8, !dbg !12704
  %add.ptr744 = getelementptr inbounds i32, i32* %601, i64 128, !dbg !12704
  store i32* %add.ptr744, i32** %cfo716, align 8, !dbg !12704
  br label %for.cond735, !dbg !12705, !llvm.loop !12706

for.end745:                                       ; preds = %for.cond735
  br label %if.end746, !dbg !12708

if.end746:                                        ; preds = %for.end745, %for.body711
  br label %for.inc747, !dbg !12709

for.inc747:                                       ; preds = %if.end746
  %602 = load i32, i32* %i, align 4, !dbg !12710
  %inc748 = add nsw i32 %602, 1, !dbg !12710
  store i32 %inc748, i32* %i, align 4, !dbg !12710
  %603 = load i32, i32* %idx, align 4, !dbg !12712
  %inc749 = add nsw i32 %603, 1, !dbg !12712
  store i32 %inc749, i32* %idx, align 4, !dbg !12712
  br label %for.cond706, !dbg !12713, !llvm.loop !12714

for.end750:                                       ; preds = %for.cond706
  %604 = load i32, i32* %g_len701, align 4, !dbg !12716
  %shl751 = shl i32 %604, 7, !dbg !12717
  %605 = load i32*, i32** %coef.addr, align 8, !dbg !12718
  %idx.ext752 = zext i32 %shl751 to i64, !dbg !12718
  %add.ptr753 = getelementptr inbounds i32, i32* %605, i64 %idx.ext752, !dbg !12718
  store i32* %add.ptr753, i32** %coef.addr, align 8, !dbg !12718
  br label %for.inc754, !dbg !12719

for.inc754:                                       ; preds = %for.end750
  %606 = load i32, i32* %g, align 4, !dbg !12720
  %inc755 = add nsw i32 %606, 1, !dbg !12720
  store i32 %inc755, i32* %g, align 4, !dbg !12720
  br label %for.cond696, !dbg !12722, !llvm.loop !12723

for.end756:                                       ; preds = %for.cond696
  store i32 0, i32* %retval, align 4, !dbg !12725
  br label %return, !dbg !12725

return:                                           ; preds = %for.end756, %if.then570
  %607 = load i32, i32* %retval, align 4, !dbg !12726
  ret i32 %607, !dbg !12726
}

; Function Attrs: nounwind uwtable
define internal void @apply_prediction(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !12727 {
entry:
  %retval.i255.i = alloca %struct.SoftFloat, align 4
  %pf.i256.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pf.i256.i, metadata !12728, metadata !2068), !dbg !12732
  %pun.i257.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pun.i257.i, metadata !12745, metadata !2068), !dbg !12746
  %s.i258.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %s.i258.i, metadata !12747, metadata !2068), !dbg !12748
  %retval.i236.i = alloca %struct.SoftFloat, align 4
  %pf.i237.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pf.i237.i, metadata !12728, metadata !2068), !dbg !12749
  %pun.i238.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pun.i238.i, metadata !12745, metadata !2068), !dbg !12752
  %s.i239.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %s.i239.i, metadata !12747, metadata !2068), !dbg !12753
  %retval.i217.i = alloca %struct.SoftFloat, align 4
  %pf.i218.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pf.i218.i, metadata !12728, metadata !2068), !dbg !12754
  %pun.i219.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pun.i219.i, metadata !12745, metadata !2068), !dbg !12756
  %s.i220.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %s.i220.i, metadata !12747, metadata !2068), !dbg !12757
  %retval.i198.i = alloca %struct.SoftFloat, align 4
  %pf.i199.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pf.i199.i, metadata !12728, metadata !2068), !dbg !12758
  %pun.i200.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pun.i200.i, metadata !12745, metadata !2068), !dbg !12760
  %s.i201.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %s.i201.i, metadata !12747, metadata !2068), !dbg !12761
  %retval.i181.i = alloca %struct.SoftFloat, align 4
  %pf.i182.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pf.i182.i, metadata !12762, metadata !2068), !dbg !12764
  %tmp.i183.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %tmp.i183.i, metadata !12766, metadata !2068), !dbg !12767
  %s.i184.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %s.i184.i, metadata !12768, metadata !2068), !dbg !12769
  %retval.i162.i = alloca %struct.SoftFloat, align 4
  %pf.i163.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pf.i163.i, metadata !12728, metadata !2068), !dbg !12770
  %pun.i164.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pun.i164.i, metadata !12745, metadata !2068), !dbg !12772
  %s.i165.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %s.i165.i, metadata !12747, metadata !2068), !dbg !12773
  %retval.i139.i = alloca %struct.SoftFloat, align 4
  %pf.i140.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pf.i140.i, metadata !12774, metadata !2068), !dbg !12776
  %tmp.i141.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %tmp.i141.i, metadata !12781, metadata !2068), !dbg !12782
  %s.i142.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %s.i142.i, metadata !12783, metadata !2068), !dbg !12784
  %retval.i125.i = alloca %struct.SoftFloat, align 4
  %pf.i126.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pf.i126.i, metadata !12728, metadata !2068), !dbg !12785
  %pun.i.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pun.i.i, metadata !12745, metadata !2068), !dbg !12788
  %s.i127.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %s.i127.i, metadata !12747, metadata !2068), !dbg !12789
  %retval.i.i = alloca %struct.SoftFloat, align 4
  %pf.i.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pf.i.i, metadata !12774, metadata !2068), !dbg !12790
  %tmp.i.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %tmp.i.i, metadata !12781, metadata !2068), !dbg !12795
  %s.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %s.i.i, metadata !12783, metadata !2068), !dbg !12796
  %ps.addr.i = alloca %struct.PredictorState*, align 8
  call void @llvm.dbg.declare(metadata %struct.PredictorState** %ps.addr.i, metadata !12797, metadata !2068), !dbg !12798
  %coef.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %coef.addr.i, metadata !12799, metadata !2068), !dbg !12800
  %output_enable.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %output_enable.addr.i, metadata !12801, metadata !2068), !dbg !12802
  %e0.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %e0.i, metadata !12803, metadata !2068), !dbg !12804
  %e1.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %e1.i, metadata !12805, metadata !2068), !dbg !12806
  %pv.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %pv.i, metadata !12807, metadata !2068), !dbg !12808
  %k1.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %k1.i, metadata !12809, metadata !2068), !dbg !12810
  %k2.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %k2.i, metadata !12811, metadata !2068), !dbg !12812
  %r0.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %r0.i, metadata !12813, metadata !2068), !dbg !12814
  %r1.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %r1.i, metadata !12815, metadata !2068), !dbg !12816
  %cor0.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %cor0.i, metadata !12817, metadata !2068), !dbg !12818
  %cor1.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %cor1.i, metadata !12819, metadata !2068), !dbg !12820
  %var0.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %var0.i, metadata !12821, metadata !2068), !dbg !12822
  %var1.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %var1.i, metadata !12823, metadata !2068), !dbg !12824
  %tmp.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %tmp.i, metadata !12825, metadata !2068), !dbg !12826
  %agg.tmp.i = alloca %struct.SoftFloat, align 4
  %agg.tmp10.i = alloca %struct.SoftFloat, align 4
  %coerce.i = alloca %struct.SoftFloat, align 4
  %agg.tmp24.i = alloca %struct.SoftFloat, align 4
  %agg.tmp25.i = alloca %struct.SoftFloat, align 4
  %coerce29.i = alloca %struct.SoftFloat, align 4
  %coerce35.i = alloca %struct.SoftFloat, align 4
  %agg.tmp36.i = alloca %struct.SoftFloat, align 4
  %agg.tmp37.i = alloca %struct.SoftFloat, align 4
  %coerce41.i = alloca %struct.SoftFloat, align 4
  %shift.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.i, metadata !12827, metadata !2068), !dbg !12830
  %coerce61.i = alloca %struct.SoftFloat, align 4
  %coerce63.i = alloca %struct.SoftFloat, align 4
  %agg.tmp65.i = alloca %struct.SoftFloat, align 4
  %agg.tmp66.i = alloca %struct.SoftFloat, align 4
  %agg.tmp68.i = alloca %struct.SoftFloat, align 4
  %coerce72.i = alloca %struct.SoftFloat, align 4
  %agg.tmp73.i = alloca %struct.SoftFloat, align 4
  %agg.tmp75.i = alloca %struct.SoftFloat, align 4
  %coerce78.i = alloca %struct.SoftFloat, align 4
  %agg.tmp81.i = alloca %struct.SoftFloat, align 4
  %agg.tmp82.i = alloca %struct.SoftFloat, align 4
  %coerce86.i = alloca %struct.SoftFloat, align 4
  %agg.tmp88.i = alloca %struct.SoftFloat, align 4
  %agg.tmp89.i = alloca %struct.SoftFloat, align 4
  %agg.tmp91.i = alloca %struct.SoftFloat, align 4
  %coerce95.i = alloca %struct.SoftFloat, align 4
  %agg.tmp96.i = alloca %struct.SoftFloat, align 4
  %agg.tmp98.i = alloca %struct.SoftFloat, align 4
  %coerce101.i = alloca %struct.SoftFloat, align 4
  %agg.tmp105.i = alloca %struct.SoftFloat, align 4
  %agg.tmp106.i = alloca %struct.SoftFloat, align 4
  %coerce110.i = alloca %struct.SoftFloat, align 4
  %agg.tmp112.i = alloca %struct.SoftFloat, align 4
  %agg.tmp113.i = alloca %struct.SoftFloat, align 4
  %agg.tmp114.i = alloca %struct.SoftFloat, align 4
  %coerce119.i = alloca %struct.SoftFloat, align 4
  %agg.tmp121.i = alloca %struct.SoftFloat, align 4
  %coerce124.i = alloca %struct.SoftFloat, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %sfb = alloca i32, align 4
  %k = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !12831, metadata !2068), !dbg !12832
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !12833, metadata !2068), !dbg !12834
  call void @llvm.dbg.declare(metadata i32* %sfb, metadata !12835, metadata !2068), !dbg !12836
  call void @llvm.dbg.declare(metadata i32* %k, metadata !12837, metadata !2068), !dbg !12838
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12839
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !12841
  %predictor_initialized = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 12, !dbg !12842
  %1 = load i32, i32* %predictor_initialized, align 16, !dbg !12842
  %tobool = icmp ne i32 %1, 0, !dbg !12839
  br i1 %tobool, label %if.end, label %if.then, !dbg !12843

if.then:                                          ; preds = %entry
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12844
  %predictor_state = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 20, !dbg !12846
  %arraydecay = getelementptr inbounds [672 x %struct.PredictorState], [672 x %struct.PredictorState]* %predictor_state, i32 0, i32 0, !dbg !12844
  call void @reset_all_predictors(%struct.PredictorState* %arraydecay), !dbg !12847
  %3 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12848
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %3, i32 0, i32 0, !dbg !12849
  %predictor_initialized2 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1, i32 0, i32 12, !dbg !12850
  store i32 1, i32* %predictor_initialized2, align 16, !dbg !12851
  br label %if.end, !dbg !12852

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12853
  %ics3 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 0, !dbg !12854
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3, i32 0, i32 1, !dbg !12855
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !12853
  %5 = load i32, i32* %arrayidx, align 4, !dbg !12853
  %cmp = icmp ne i32 %5, 2, !dbg !12856
  br i1 %cmp, label %if.then4, label %if.else, !dbg !12857

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %sfb, align 4, !dbg !12858
  br label %for.cond, !dbg !12859

for.cond:                                         ; preds = %for.inc34, %if.then4
  %6 = load i32, i32* %sfb, align 4, !dbg !12860
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12861
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 21, !dbg !12862
  %arrayidx5 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !12861
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx5, i32 0, i32 0, !dbg !12863
  %sampling_index = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 1, !dbg !12864
  %8 = load i32, i32* %sampling_index, align 4, !dbg !12864
  %idxprom = sext i32 %8 to i64, !dbg !12865
  %arrayidx6 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_pred_sfb_max, i64 0, i64 %idxprom, !dbg !12865
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !12865
  %conv = zext i8 %9 to i32, !dbg !12865
  %cmp7 = icmp slt i32 %6, %conv, !dbg !12866
  br i1 %cmp7, label %for.body, label %for.end36, !dbg !12867

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %sfb, align 4, !dbg !12869
  %idxprom9 = sext i32 %10 to i64, !dbg !12870
  %11 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12870
  %ics10 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %11, i32 0, i32 0, !dbg !12871
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics10, i32 0, i32 6, !dbg !12872
  %12 = load i16*, i16** %swb_offset, align 16, !dbg !12872
  %arrayidx11 = getelementptr inbounds i16, i16* %12, i64 %idxprom9, !dbg !12870
  %13 = load i16, i16* %arrayidx11, align 2, !dbg !12870
  %conv12 = zext i16 %13 to i32, !dbg !12870
  store i32 %conv12, i32* %k, align 4, !dbg !12873
  br label %for.cond13, !dbg !12874

for.cond13:                                       ; preds = %for.inc, %for.body
  %14 = load i32, i32* %k, align 4, !dbg !12875
  %15 = load i32, i32* %sfb, align 4, !dbg !12876
  %add = add nsw i32 %15, 1, !dbg !12877
  %idxprom14 = sext i32 %add to i64, !dbg !12878
  %16 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12878
  %ics15 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %16, i32 0, i32 0, !dbg !12879
  %swb_offset16 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics15, i32 0, i32 6, !dbg !12880
  %17 = load i16*, i16** %swb_offset16, align 16, !dbg !12880
  %arrayidx17 = getelementptr inbounds i16, i16* %17, i64 %idxprom14, !dbg !12878
  %18 = load i16, i16* %arrayidx17, align 2, !dbg !12878
  %conv18 = zext i16 %18 to i32, !dbg !12878
  %cmp19 = icmp slt i32 %14, %conv18, !dbg !12881
  br i1 %cmp19, label %for.body21, label %for.end, !dbg !12882

for.body21:                                       ; preds = %for.cond13
  %19 = load i32, i32* %k, align 4, !dbg !12884
  %idxprom22 = sext i32 %19 to i64, !dbg !12885
  %20 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12885
  %predictor_state23 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %20, i32 0, i32 20, !dbg !12886
  %arrayidx24 = getelementptr inbounds [672 x %struct.PredictorState], [672 x %struct.PredictorState]* %predictor_state23, i64 0, i64 %idxprom22, !dbg !12885
  %21 = load i32, i32* %k, align 4, !dbg !12887
  %idxprom25 = sext i32 %21 to i64, !dbg !12888
  %22 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12888
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %22, i32 0, i32 14, !dbg !12889
  %arrayidx26 = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs, i64 0, i64 %idxprom25, !dbg !12888
  %23 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12890
  %ics27 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %23, i32 0, i32 0, !dbg !12891
  %predictor_present = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics27, i32 0, i32 11, !dbg !12892
  %24 = load i32, i32* %predictor_present, align 4, !dbg !12892
  %tobool28 = icmp ne i32 %24, 0, !dbg !12890
  br i1 %tobool28, label %land.rhs, label %land.end, !dbg !12893

land.rhs:                                         ; preds = %for.body21
  %25 = load i32, i32* %sfb, align 4, !dbg !12894
  %idxprom29 = sext i32 %25 to i64, !dbg !12895
  %26 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12895
  %ics30 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %26, i32 0, i32 0, !dbg !12896
  %prediction_used = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics30, i32 0, i32 15, !dbg !12897
  %arrayidx31 = getelementptr inbounds [41 x i8], [41 x i8]* %prediction_used, i64 0, i64 %idxprom29, !dbg !12895
  %27 = load i8, i8* %arrayidx31, align 1, !dbg !12895
  %conv32 = zext i8 %27 to i32, !dbg !12895
  %tobool33 = icmp ne i32 %conv32, 0, !dbg !12898
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body21
  %28 = phi i1 [ false, %for.body21 ], [ %tobool33, %land.rhs ]
  %land.ext = zext i1 %28 to i32, !dbg !12899
  store %struct.PredictorState* %arrayidx24, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12901
  store i32* %arrayidx26, i32** %coef.addr.i, align 8, !dbg !12901
  store i32 %land.ext, i32* %output_enable.addr.i, align 4, !dbg !12901
  %29 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12902
  %r01.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %29, i32 0, i32 4, !dbg !12903
  %30 = bitcast %struct.SoftFloat* %r0.i to i8*, !dbg !12903
  %31 = bitcast %struct.SoftFloat* %r01.i to i8*, !dbg !12903
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 4, i1 false) #12, !dbg !12903
  %32 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12904
  %r12.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %32, i32 0, i32 5, !dbg !12905
  %33 = bitcast %struct.SoftFloat* %r1.i to i8*, !dbg !12905
  %34 = bitcast %struct.SoftFloat* %r12.i to i8*, !dbg !12905
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 8, i32 4, i1 false) #12, !dbg !12906
  %35 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12907
  %cor03.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %35, i32 0, i32 0, !dbg !12908
  %36 = bitcast %struct.SoftFloat* %cor0.i to i8*, !dbg !12908
  %37 = bitcast %struct.SoftFloat* %cor03.i to i8*, !dbg !12908
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 4, i1 false) #12, !dbg !12908
  %38 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12909
  %cor14.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %38, i32 0, i32 1, !dbg !12910
  %39 = bitcast %struct.SoftFloat* %cor1.i to i8*, !dbg !12910
  %40 = bitcast %struct.SoftFloat* %cor14.i to i8*, !dbg !12910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 4, i1 false) #12, !dbg !12911
  %41 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12912
  %var05.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %41, i32 0, i32 2, !dbg !12913
  %42 = bitcast %struct.SoftFloat* %var0.i to i8*, !dbg !12913
  %43 = bitcast %struct.SoftFloat* %var05.i to i8*, !dbg !12913
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 4, i1 false) #12, !dbg !12913
  %44 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12914
  %var16.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %44, i32 0, i32 3, !dbg !12915
  %45 = bitcast %struct.SoftFloat* %var1.i to i8*, !dbg !12915
  %46 = bitcast %struct.SoftFloat* %var16.i to i8*, !dbg !12915
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 4, i1 false) #12, !dbg !12916
  %exp.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var0.i, i32 0, i32 1, !dbg !12917
  %47 = load i32, i32* %exp.i, align 4, !dbg !12917
  %cmp.i = icmp sgt i32 %47, 1, !dbg !12918
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i, !dbg !12919

lor.lhs.false.i:                                  ; preds = %land.end
  %exp7.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var0.i, i32 0, i32 1, !dbg !12920
  %48 = load i32, i32* %exp7.i, align 4, !dbg !12920
  %cmp8.i = icmp eq i32 %48, 1, !dbg !12922
  br i1 %cmp8.i, label %land.lhs.true.i, label %if.else.i, !dbg !12923

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %mant.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var0.i, i32 0, i32 0, !dbg !12924
  %49 = load i32, i32* %mant.i, align 4, !dbg !12924
  %cmp9.i = icmp sgt i32 %49, 536870912, !dbg !12926
  br i1 %cmp9.i, label %if.then.i, label %if.else.i, !dbg !12927

if.then.i:                                        ; preds = %land.lhs.true.i, %land.end
  %50 = bitcast %struct.SoftFloat* %var0.i to i64*, !dbg !12928
  %51 = load i64, i64* %50, align 4, !dbg !12928
  %call.i = call i64 @av_div_sf(i64 1023410176, i64 %51) #2, !dbg !12928
  %52 = bitcast %struct.SoftFloat* %agg.tmp10.i to i64*, !dbg !12928
  store i64 %call.i, i64* %52, align 4, !dbg !12928
  %53 = bitcast %struct.SoftFloat* %agg.tmp10.i to i64*, !dbg !12929
  %54 = load i64, i64* %53, align 4, !dbg !12929
  %55 = bitcast %struct.SoftFloat* %pf.i.i to i64*, !dbg !12930
  store i64 %54, i64* %55, align 4, !dbg !12930
  %exp.i.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i.i, i32 0, i32 1, !dbg !12931
  %56 = load i32, i32* %exp.i.i, align 4, !dbg !12931
  %exp2.i.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i.i, i32 0, i32 1, !dbg !12932
  store i32 %56, i32* %exp2.i.i, align 4, !dbg !12933
  %mant.i.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i.i, i32 0, i32 0, !dbg !12934
  %57 = load i32, i32* %mant.i.i, align 4, !dbg !12934
  %shr.i.i = ashr i32 %57, 31, !dbg !12935
  store i32 %shr.i.i, i32* %s.i.i, align 4, !dbg !12936
  %mant3.i.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i.i, i32 0, i32 0, !dbg !12937
  %58 = load i32, i32* %mant3.i.i, align 4, !dbg !12937
  %59 = load i32, i32* %s.i.i, align 4, !dbg !12938
  %xor.i.i = xor i32 %58, %59, !dbg !12939
  %60 = load i32, i32* %s.i.i, align 4, !dbg !12940
  %sub.i.i = sub nsw i32 %xor.i.i, %60, !dbg !12941
  %mant4.i.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i.i, i32 0, i32 0, !dbg !12942
  store i32 %sub.i.i, i32* %mant4.i.i, align 4, !dbg !12943
  %mant5.i.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i.i, i32 0, i32 0, !dbg !12944
  %61 = load i32, i32* %mant5.i.i, align 4, !dbg !12944
  %add.i.i = add i32 %61, 2097151, !dbg !12945
  %mant6.i.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i.i, i32 0, i32 0, !dbg !12946
  %62 = load i32, i32* %mant6.i.i, align 4, !dbg !12946
  %and.i.i = and i32 %62, 64, !dbg !12947
  %add7.i.i = add i32 %add.i.i, %and.i.i, !dbg !12948
  %and8.i.i = and i32 %add7.i.i, -4194304, !dbg !12949
  %mant9.i.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i.i, i32 0, i32 0, !dbg !12950
  store i32 %and8.i.i, i32* %mant9.i.i, align 4, !dbg !12951
  %mant10.i.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i.i, i32 0, i32 0, !dbg !12952
  %63 = load i32, i32* %mant10.i.i, align 4, !dbg !12952
  %64 = load i32, i32* %s.i.i, align 4, !dbg !12953
  %xor11.i.i = xor i32 %63, %64, !dbg !12954
  %65 = load i32, i32* %s.i.i, align 4, !dbg !12955
  %sub12.i.i = sub nsw i32 %xor11.i.i, %65, !dbg !12956
  %mant13.i.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i.i, i32 0, i32 0, !dbg !12957
  store i32 %sub12.i.i, i32* %mant13.i.i, align 4, !dbg !12958
  %66 = bitcast %struct.SoftFloat* %retval.i.i to i8*, !dbg !12959
  %67 = bitcast %struct.SoftFloat* %tmp.i.i to i8*, !dbg !12959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 4, i1 false) #12, !dbg !12959
  %68 = bitcast %struct.SoftFloat* %retval.i.i to i64*, !dbg !12960
  %69 = load i64, i64* %68, align 4, !dbg !12960
  %70 = bitcast %struct.SoftFloat* %agg.tmp.i to i64*, !dbg !12929
  store i64 %69, i64* %70, align 4, !dbg !12929
  %71 = bitcast %struct.SoftFloat* %cor0.i to i64*, !dbg !12961
  %72 = load i64, i64* %71, align 4, !dbg !12961
  %73 = bitcast %struct.SoftFloat* %agg.tmp.i to i64*, !dbg !12961
  %74 = load i64, i64* %73, align 4, !dbg !12961
  %call12.i = call i64 @av_mul_sf(i64 %72, i64 %74) #2, !dbg !12962
  %75 = bitcast %struct.SoftFloat* %coerce.i to i64*, !dbg !12961
  store i64 %call12.i, i64* %75, align 4, !dbg !12961
  %76 = bitcast %struct.SoftFloat* %k1.i to i8*, !dbg !12961
  %77 = bitcast %struct.SoftFloat* %coerce.i to i8*, !dbg !12961
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 4, i1 false) #12, !dbg !12964
  br label %if.end.i, !dbg !12966

if.else.i:                                        ; preds = %land.lhs.true.i, %lor.lhs.false.i
  %mant13.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %k1.i, i32 0, i32 0, !dbg !12967
  store i32 0, i32* %mant13.i, align 4, !dbg !12969
  %exp14.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %k1.i, i32 0, i32 1, !dbg !12970
  store i32 0, i32* %exp14.i, align 4, !dbg !12971
  br label %if.end.i, !dbg !12901

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %exp15.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var1.i, i32 0, i32 1, !dbg !12972
  %78 = load i32, i32* %exp15.i, align 4, !dbg !12972
  %cmp16.i = icmp sgt i32 %78, 1, !dbg !12973
  br i1 %cmp16.i, label %if.then23.i, label %lor.lhs.false17.i, !dbg !12974

lor.lhs.false17.i:                                ; preds = %if.end.i
  %exp18.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var1.i, i32 0, i32 1, !dbg !12975
  %79 = load i32, i32* %exp18.i, align 4, !dbg !12975
  %cmp19.i = icmp eq i32 %79, 1, !dbg !12977
  br i1 %cmp19.i, label %land.lhs.true20.i, label %if.else30.i, !dbg !12978

land.lhs.true20.i:                                ; preds = %lor.lhs.false17.i
  %mant21.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var1.i, i32 0, i32 0, !dbg !12979
  %80 = load i32, i32* %mant21.i, align 4, !dbg !12979
  %cmp22.i = icmp sgt i32 %80, 536870912, !dbg !12981
  br i1 %cmp22.i, label %if.then23.i, label %if.else30.i, !dbg !12982

if.then23.i:                                      ; preds = %land.lhs.true20.i, %if.end.i
  %81 = bitcast %struct.SoftFloat* %var1.i to i64*, !dbg !12983
  %82 = load i64, i64* %81, align 4, !dbg !12983
  %call26.i = call i64 @av_div_sf(i64 1023410176, i64 %82) #2, !dbg !12983
  %83 = bitcast %struct.SoftFloat* %agg.tmp25.i to i64*, !dbg !12983
  store i64 %call26.i, i64* %83, align 4, !dbg !12983
  %84 = bitcast %struct.SoftFloat* %agg.tmp25.i to i64*, !dbg !12984
  %85 = load i64, i64* %84, align 4, !dbg !12984
  %86 = bitcast %struct.SoftFloat* %pf.i140.i to i64*, !dbg !12985
  store i64 %85, i64* %86, align 4, !dbg !12985
  %exp.i143.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i140.i, i32 0, i32 1, !dbg !12986
  %87 = load i32, i32* %exp.i143.i, align 4, !dbg !12986
  %exp2.i144.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i141.i, i32 0, i32 1, !dbg !12987
  store i32 %87, i32* %exp2.i144.i, align 4, !dbg !12988
  %mant.i145.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i140.i, i32 0, i32 0, !dbg !12989
  %88 = load i32, i32* %mant.i145.i, align 4, !dbg !12989
  %shr.i146.i = ashr i32 %88, 31, !dbg !12990
  store i32 %shr.i146.i, i32* %s.i142.i, align 4, !dbg !12991
  %mant3.i147.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i140.i, i32 0, i32 0, !dbg !12992
  %89 = load i32, i32* %mant3.i147.i, align 4, !dbg !12992
  %90 = load i32, i32* %s.i142.i, align 4, !dbg !12993
  %xor.i148.i = xor i32 %89, %90, !dbg !12994
  %91 = load i32, i32* %s.i142.i, align 4, !dbg !12995
  %sub.i149.i = sub nsw i32 %xor.i148.i, %91, !dbg !12996
  %mant4.i150.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i141.i, i32 0, i32 0, !dbg !12997
  store i32 %sub.i149.i, i32* %mant4.i150.i, align 4, !dbg !12998
  %mant5.i151.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i141.i, i32 0, i32 0, !dbg !12999
  %92 = load i32, i32* %mant5.i151.i, align 4, !dbg !12999
  %add.i152.i = add i32 %92, 2097151, !dbg !13000
  %mant6.i153.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i141.i, i32 0, i32 0, !dbg !13001
  %93 = load i32, i32* %mant6.i153.i, align 4, !dbg !13001
  %and.i154.i = and i32 %93, 64, !dbg !13002
  %add7.i155.i = add i32 %add.i152.i, %and.i154.i, !dbg !13003
  %and8.i156.i = and i32 %add7.i155.i, -4194304, !dbg !13004
  %mant9.i157.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i141.i, i32 0, i32 0, !dbg !13005
  store i32 %and8.i156.i, i32* %mant9.i157.i, align 4, !dbg !13006
  %mant10.i158.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i141.i, i32 0, i32 0, !dbg !13007
  %94 = load i32, i32* %mant10.i158.i, align 4, !dbg !13007
  %95 = load i32, i32* %s.i142.i, align 4, !dbg !13008
  %xor11.i159.i = xor i32 %94, %95, !dbg !13009
  %96 = load i32, i32* %s.i142.i, align 4, !dbg !13010
  %sub12.i160.i = sub nsw i32 %xor11.i159.i, %96, !dbg !13011
  %mant13.i161.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i141.i, i32 0, i32 0, !dbg !13012
  store i32 %sub12.i160.i, i32* %mant13.i161.i, align 4, !dbg !13013
  %97 = bitcast %struct.SoftFloat* %retval.i139.i to i8*, !dbg !13014
  %98 = bitcast %struct.SoftFloat* %tmp.i141.i to i8*, !dbg !13014
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 4, i1 false) #12, !dbg !13014
  %99 = bitcast %struct.SoftFloat* %retval.i139.i to i64*, !dbg !13015
  %100 = load i64, i64* %99, align 4, !dbg !13015
  %101 = bitcast %struct.SoftFloat* %agg.tmp24.i to i64*, !dbg !12984
  store i64 %100, i64* %101, align 4, !dbg !12984
  %102 = bitcast %struct.SoftFloat* %cor1.i to i64*, !dbg !13016
  %103 = load i64, i64* %102, align 4, !dbg !13016
  %104 = bitcast %struct.SoftFloat* %agg.tmp24.i to i64*, !dbg !13016
  %105 = load i64, i64* %104, align 4, !dbg !13016
  %call28.i = call i64 @av_mul_sf(i64 %103, i64 %105) #2, !dbg !13017
  %106 = bitcast %struct.SoftFloat* %coerce29.i to i64*, !dbg !13016
  store i64 %call28.i, i64* %106, align 4, !dbg !13016
  %107 = bitcast %struct.SoftFloat* %k2.i to i8*, !dbg !13016
  %108 = bitcast %struct.SoftFloat* %coerce29.i to i8*, !dbg !13016
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 8, i32 4, i1 false) #12, !dbg !13019
  br label %if.end33.i, !dbg !13021

if.else30.i:                                      ; preds = %land.lhs.true20.i, %lor.lhs.false17.i
  %mant31.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %k2.i, i32 0, i32 0, !dbg !13022
  store i32 0, i32* %mant31.i, align 4, !dbg !13024
  %exp32.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %k2.i, i32 0, i32 1, !dbg !13025
  store i32 0, i32* %exp32.i, align 4, !dbg !13026
  br label %if.end33.i, !dbg !12901

if.end33.i:                                       ; preds = %if.else30.i, %if.then23.i
  %109 = bitcast %struct.SoftFloat* %k1.i to i64*, !dbg !13027
  %110 = load i64, i64* %109, align 4, !dbg !13027
  %111 = bitcast %struct.SoftFloat* %r0.i to i64*, !dbg !13027
  %112 = load i64, i64* %111, align 4, !dbg !13027
  %call34.i = call i64 @av_mul_sf(i64 %110, i64 %112) #2, !dbg !13027
  %113 = bitcast %struct.SoftFloat* %coerce35.i to i64*, !dbg !13027
  store i64 %call34.i, i64* %113, align 4, !dbg !13027
  %114 = bitcast %struct.SoftFloat* %tmp.i to i8*, !dbg !13027
  %115 = bitcast %struct.SoftFloat* %coerce35.i to i8*, !dbg !13027
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 8, i32 4, i1 false) #12, !dbg !13028
  %116 = bitcast %struct.SoftFloat* %k2.i to i64*, !dbg !13029
  %117 = load i64, i64* %116, align 4, !dbg !13029
  %118 = bitcast %struct.SoftFloat* %r1.i to i64*, !dbg !13029
  %119 = load i64, i64* %118, align 4, !dbg !13029
  %call38.i = call i64 @av_mul_sf(i64 %117, i64 %119) #2, !dbg !13029
  %120 = bitcast %struct.SoftFloat* %agg.tmp37.i to i64*, !dbg !13029
  store i64 %call38.i, i64* %120, align 4, !dbg !13029
  %121 = bitcast %struct.SoftFloat* %tmp.i to i64*, !dbg !13030
  %122 = load i64, i64* %121, align 4, !dbg !13030
  %123 = bitcast %struct.SoftFloat* %agg.tmp37.i to i64*, !dbg !13030
  %124 = load i64, i64* %123, align 4, !dbg !13030
  %call39.i = call i64 @av_add_sf(i64 %122, i64 %124) #2, !dbg !13031
  %125 = bitcast %struct.SoftFloat* %agg.tmp36.i to i64*, !dbg !13030
  store i64 %call39.i, i64* %125, align 4, !dbg !13030
  %126 = bitcast %struct.SoftFloat* %agg.tmp36.i to i64*, !dbg !13032
  %127 = load i64, i64* %126, align 4, !dbg !13032
  %128 = bitcast %struct.SoftFloat* %pf.i182.i to i64*, !dbg !13033
  store i64 %127, i64* %128, align 4, !dbg !13033
  %exp.i185.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i182.i, i32 0, i32 1, !dbg !13034
  %129 = load i32, i32* %exp.i185.i, align 4, !dbg !13034
  %exp2.i186.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i183.i, i32 0, i32 1, !dbg !13035
  store i32 %129, i32* %exp2.i186.i, align 4, !dbg !13036
  %mant.i187.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i182.i, i32 0, i32 0, !dbg !13037
  %130 = load i32, i32* %mant.i187.i, align 4, !dbg !13037
  %shr.i188.i = ashr i32 %130, 31, !dbg !13038
  store i32 %shr.i188.i, i32* %s.i184.i, align 4, !dbg !13039
  %mant3.i189.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i182.i, i32 0, i32 0, !dbg !13040
  %131 = load i32, i32* %mant3.i189.i, align 4, !dbg !13040
  %132 = load i32, i32* %s.i184.i, align 4, !dbg !13041
  %xor.i190.i = xor i32 %131, %132, !dbg !13042
  %133 = load i32, i32* %s.i184.i, align 4, !dbg !13043
  %sub.i191.i = sub nsw i32 %xor.i190.i, %133, !dbg !13044
  %mant4.i192.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i183.i, i32 0, i32 0, !dbg !13045
  store i32 %sub.i191.i, i32* %mant4.i192.i, align 4, !dbg !13046
  %mant5.i193.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i183.i, i32 0, i32 0, !dbg !13047
  %134 = load i32, i32* %mant5.i193.i, align 4, !dbg !13047
  %add.i194.i = add i32 %134, 2097152, !dbg !13048
  %and.i195.i = and i32 %add.i194.i, -4194304, !dbg !13049
  %mant6.i196.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i183.i, i32 0, i32 0, !dbg !13050
  store i32 %and.i195.i, i32* %mant6.i196.i, align 4, !dbg !13051
  %mant7.i.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i183.i, i32 0, i32 0, !dbg !13052
  %135 = load i32, i32* %mant7.i.i, align 4, !dbg !13052
  %136 = load i32, i32* %s.i184.i, align 4, !dbg !13053
  %xor8.i.i = xor i32 %135, %136, !dbg !13054
  %137 = load i32, i32* %s.i184.i, align 4, !dbg !13055
  %sub9.i.i = sub nsw i32 %xor8.i.i, %137, !dbg !13056
  %mant10.i197.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i183.i, i32 0, i32 0, !dbg !13057
  store i32 %sub9.i.i, i32* %mant10.i197.i, align 4, !dbg !13058
  %138 = bitcast %struct.SoftFloat* %retval.i181.i to i8*, !dbg !13059
  %139 = bitcast %struct.SoftFloat* %tmp.i183.i to i8*, !dbg !13059
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %139, i64 8, i32 4, i1 false) #12, !dbg !13059
  %140 = bitcast %struct.SoftFloat* %retval.i181.i to i64*, !dbg !13060
  %141 = load i64, i64* %140, align 4, !dbg !13060
  %142 = bitcast %struct.SoftFloat* %coerce41.i to i64*, !dbg !13032
  store i64 %141, i64* %142, align 4, !dbg !13032
  %143 = bitcast %struct.SoftFloat* %pv.i to i8*, !dbg !13032
  %144 = bitcast %struct.SoftFloat* %coerce41.i to i8*, !dbg !13032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %143, i8* %144, i64 8, i32 4, i1 false) #12, !dbg !13061
  %145 = load i32, i32* %output_enable.addr.i, align 4, !dbg !13062
  %tobool.i = icmp ne i32 %145, 0, !dbg !13062
  br i1 %tobool.i, label %if.then42.i, label %predict.exit, !dbg !13063

if.then42.i:                                      ; preds = %if.end33.i
  %exp44.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pv.i, i32 0, i32 1, !dbg !13064
  %146 = load i32, i32* %exp44.i, align 4, !dbg !13064
  %sub.i = sub nsw i32 28, %146, !dbg !13065
  store i32 %sub.i, i32* %shift.i, align 4, !dbg !12830
  %147 = load i32, i32* %shift.i, align 4, !dbg !13066
  %cmp45.i = icmp slt i32 %147, 31, !dbg !13068
  br i1 %cmp45.i, label %if.then46.i, label %if.end58.i, !dbg !13069

if.then46.i:                                      ; preds = %if.then42.i
  %148 = load i32, i32* %shift.i, align 4, !dbg !13070
  %cmp47.i = icmp sgt i32 %148, 0, !dbg !13073
  br i1 %cmp47.i, label %if.then48.i, label %if.else52.i, !dbg !13074

if.then48.i:                                      ; preds = %if.then46.i
  %mant49.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pv.i, i32 0, i32 0, !dbg !13075
  %149 = load i32, i32* %mant49.i, align 4, !dbg !13075
  %150 = load i32, i32* %shift.i, align 4, !dbg !13077
  %sub50.i = sub nsw i32 %150, 1, !dbg !13078
  %shl.i = shl i32 1, %sub50.i, !dbg !13079
  %add.i = add nsw i32 %149, %shl.i, !dbg !13080
  %151 = load i32, i32* %shift.i, align 4, !dbg !13081
  %shr.i = ashr i32 %add.i, %151, !dbg !13082
  %152 = load i32*, i32** %coef.addr.i, align 8, !dbg !13083
  %153 = load i32, i32* %152, align 4, !dbg !13084
  %add51.i = add i32 %153, %shr.i, !dbg !13084
  store i32 %add51.i, i32* %152, align 4, !dbg !13084
  br label %if.end57.i, !dbg !13085

if.else52.i:                                      ; preds = %if.then46.i
  %mant53.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pv.i, i32 0, i32 0, !dbg !13086
  %154 = load i32, i32* %mant53.i, align 4, !dbg !13086
  %155 = load i32, i32* %shift.i, align 4, !dbg !13087
  %sub54.i = sub nsw i32 0, %155, !dbg !13088
  %shl55.i = shl i32 %154, %sub54.i, !dbg !13089
  %156 = load i32*, i32** %coef.addr.i, align 8, !dbg !13090
  %157 = load i32, i32* %156, align 4, !dbg !13091
  %add56.i = add i32 %157, %shl55.i, !dbg !13091
  store i32 %add56.i, i32* %156, align 4, !dbg !13091
  br label %if.end57.i, !dbg !12901

if.end57.i:                                       ; preds = %if.else52.i, %if.then48.i
  br label %if.end58.i, !dbg !13092

if.end58.i:                                       ; preds = %if.end57.i, %if.then42.i
  br label %predict.exit, !dbg !13093

predict.exit:                                     ; preds = %if.end33.i, %if.end58.i
  %158 = load i32*, i32** %coef.addr.i, align 8, !dbg !13094
  %159 = load i32, i32* %158, align 4, !dbg !13095
  %call60.i = call i64 @av_int2sf(i32 %159, i32 2) #2, !dbg !13096
  %160 = bitcast %struct.SoftFloat* %coerce61.i to i64*, !dbg !13096
  store i64 %call60.i, i64* %160, align 4, !dbg !13096
  %161 = bitcast %struct.SoftFloat* %e0.i to i8*, !dbg !13096
  %162 = bitcast %struct.SoftFloat* %coerce61.i to i8*, !dbg !13096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %161, i8* %162, i64 8, i32 4, i1 false) #12, !dbg !13097
  %163 = bitcast %struct.SoftFloat* %e0.i to i64*, !dbg !13098
  %164 = load i64, i64* %163, align 4, !dbg !13098
  %165 = bitcast %struct.SoftFloat* %tmp.i to i64*, !dbg !13098
  %166 = load i64, i64* %165, align 4, !dbg !13098
  %call62.i = call i64 @av_sub_sf(i64 %164, i64 %166) #2, !dbg !13098
  %167 = bitcast %struct.SoftFloat* %coerce63.i to i64*, !dbg !13098
  store i64 %call62.i, i64* %167, align 4, !dbg !13098
  %168 = bitcast %struct.SoftFloat* %e1.i to i8*, !dbg !13098
  %169 = bitcast %struct.SoftFloat* %coerce63.i to i8*, !dbg !13098
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %168, i8* %169, i64 8, i32 4, i1 false) #12, !dbg !13099
  %170 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13100
  %cor164.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %170, i32 0, i32 1, !dbg !13101
  %171 = bitcast %struct.SoftFloat* %cor1.i to i64*, !dbg !13102
  %172 = load i64, i64* %171, align 4, !dbg !13102
  %call67.i = call i64 @av_mul_sf(i64 973078528, i64 %172) #2, !dbg !13102
  %173 = bitcast %struct.SoftFloat* %agg.tmp66.i to i64*, !dbg !13102
  store i64 %call67.i, i64* %173, align 4, !dbg !13102
  %174 = bitcast %struct.SoftFloat* %r1.i to i64*, !dbg !13103
  %175 = load i64, i64* %174, align 4, !dbg !13103
  %176 = bitcast %struct.SoftFloat* %e1.i to i64*, !dbg !13103
  %177 = load i64, i64* %176, align 4, !dbg !13103
  %call69.i = call i64 @av_mul_sf(i64 %175, i64 %177) #2, !dbg !13104
  %178 = bitcast %struct.SoftFloat* %agg.tmp68.i to i64*, !dbg !13103
  store i64 %call69.i, i64* %178, align 4, !dbg !13103
  %179 = bitcast %struct.SoftFloat* %agg.tmp66.i to i64*, !dbg !13105
  %180 = load i64, i64* %179, align 4, !dbg !13105
  %181 = bitcast %struct.SoftFloat* %agg.tmp68.i to i64*, !dbg !13105
  %182 = load i64, i64* %181, align 4, !dbg !13105
  %call70.i = call i64 @av_add_sf(i64 %180, i64 %182) #2, !dbg !13106
  %183 = bitcast %struct.SoftFloat* %agg.tmp65.i to i64*, !dbg !13105
  store i64 %call70.i, i64* %183, align 4, !dbg !13105
  %184 = bitcast %struct.SoftFloat* %agg.tmp65.i to i64*, !dbg !13107
  %185 = load i64, i64* %184, align 4, !dbg !13107
  %186 = bitcast %struct.SoftFloat* %pf.i199.i to i64*, !dbg !13108
  store i64 %185, i64* %186, align 4, !dbg !13108
  %exp.i202.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i199.i, i32 0, i32 1, !dbg !13109
  %187 = load i32, i32* %exp.i202.i, align 4, !dbg !13109
  %exp1.i203.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i200.i, i32 0, i32 1, !dbg !13110
  store i32 %187, i32* %exp1.i203.i, align 4, !dbg !13111
  %mant.i204.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i199.i, i32 0, i32 0, !dbg !13112
  %188 = load i32, i32* %mant.i204.i, align 4, !dbg !13112
  %shr.i205.i = ashr i32 %188, 31, !dbg !13113
  store i32 %shr.i205.i, i32* %s.i201.i, align 4, !dbg !13114
  %mant2.i206.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i199.i, i32 0, i32 0, !dbg !13115
  %189 = load i32, i32* %mant2.i206.i, align 4, !dbg !13115
  %190 = load i32, i32* %s.i201.i, align 4, !dbg !13116
  %xor.i207.i = xor i32 %189, %190, !dbg !13117
  %191 = load i32, i32* %s.i201.i, align 4, !dbg !13118
  %sub.i208.i = sub nsw i32 %xor.i207.i, %191, !dbg !13119
  %mant3.i209.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i200.i, i32 0, i32 0, !dbg !13120
  store i32 %sub.i208.i, i32* %mant3.i209.i, align 4, !dbg !13121
  %mant4.i210.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i200.i, i32 0, i32 0, !dbg !13122
  %192 = load i32, i32* %mant4.i210.i, align 4, !dbg !13122
  %and.i211.i = and i32 %192, -4194304, !dbg !13123
  %mant5.i212.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i200.i, i32 0, i32 0, !dbg !13124
  store i32 %and.i211.i, i32* %mant5.i212.i, align 4, !dbg !13125
  %mant6.i213.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i200.i, i32 0, i32 0, !dbg !13126
  %193 = load i32, i32* %mant6.i213.i, align 4, !dbg !13126
  %194 = load i32, i32* %s.i201.i, align 4, !dbg !13127
  %xor7.i214.i = xor i32 %193, %194, !dbg !13128
  %195 = load i32, i32* %s.i201.i, align 4, !dbg !13129
  %sub8.i215.i = sub nsw i32 %xor7.i214.i, %195, !dbg !13130
  %mant9.i216.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i200.i, i32 0, i32 0, !dbg !13131
  store i32 %sub8.i215.i, i32* %mant9.i216.i, align 4, !dbg !13132
  %196 = bitcast %struct.SoftFloat* %retval.i198.i to i8*, !dbg !13133
  %197 = bitcast %struct.SoftFloat* %pun.i200.i to i8*, !dbg !13133
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %196, i8* %197, i64 8, i32 4, i1 false) #12, !dbg !13133
  %198 = bitcast %struct.SoftFloat* %retval.i198.i to i64*, !dbg !13134
  %199 = load i64, i64* %198, align 4, !dbg !13134
  %200 = bitcast %struct.SoftFloat* %coerce72.i to i64*, !dbg !13107
  store i64 %199, i64* %200, align 4, !dbg !13107
  %201 = bitcast %struct.SoftFloat* %cor164.i to i8*, !dbg !13107
  %202 = bitcast %struct.SoftFloat* %coerce72.i to i8*, !dbg !13107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %201, i8* %202, i64 8, i32 4, i1 false) #12, !dbg !13135
  %203 = bitcast %struct.SoftFloat* %r1.i to i64*, !dbg !13137
  %204 = load i64, i64* %203, align 4, !dbg !13137
  %205 = bitcast %struct.SoftFloat* %r1.i to i64*, !dbg !13137
  %206 = load i64, i64* %205, align 4, !dbg !13137
  %call74.i = call i64 @av_mul_sf(i64 %204, i64 %206) #2, !dbg !13137
  %207 = bitcast %struct.SoftFloat* %agg.tmp73.i to i64*, !dbg !13137
  store i64 %call74.i, i64* %207, align 4, !dbg !13137
  %208 = bitcast %struct.SoftFloat* %e1.i to i64*, !dbg !13138
  %209 = load i64, i64* %208, align 4, !dbg !13138
  %210 = bitcast %struct.SoftFloat* %e1.i to i64*, !dbg !13138
  %211 = load i64, i64* %210, align 4, !dbg !13138
  %call76.i = call i64 @av_mul_sf(i64 %209, i64 %211) #2, !dbg !13139
  %212 = bitcast %struct.SoftFloat* %agg.tmp75.i to i64*, !dbg !13138
  store i64 %call76.i, i64* %212, align 4, !dbg !13138
  %213 = bitcast %struct.SoftFloat* %agg.tmp73.i to i64*, !dbg !13140
  %214 = load i64, i64* %213, align 4, !dbg !13140
  %215 = bitcast %struct.SoftFloat* %agg.tmp75.i to i64*, !dbg !13140
  %216 = load i64, i64* %215, align 4, !dbg !13140
  %call77.i = call i64 @av_add_sf(i64 %214, i64 %216) #2, !dbg !13141
  %217 = bitcast %struct.SoftFloat* %coerce78.i to i64*, !dbg !13140
  store i64 %call77.i, i64* %217, align 4, !dbg !13140
  %218 = bitcast %struct.SoftFloat* %tmp.i to i8*, !dbg !13140
  %219 = bitcast %struct.SoftFloat* %coerce78.i to i8*, !dbg !13140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %218, i8* %219, i64 8, i32 4, i1 false) #12, !dbg !13142
  %exp79.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i, i32 0, i32 1, !dbg !13143
  %220 = load i32, i32* %exp79.i, align 4, !dbg !13144
  %dec.i = add nsw i32 %220, -1, !dbg !13144
  store i32 %dec.i, i32* %exp79.i, align 4, !dbg !13144
  %221 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13145
  %var180.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %221, i32 0, i32 3, !dbg !13146
  %222 = bitcast %struct.SoftFloat* %var1.i to i64*, !dbg !13147
  %223 = load i64, i64* %222, align 4, !dbg !13147
  %call83.i = call i64 @av_mul_sf(i64 973078528, i64 %223) #2, !dbg !13147
  %224 = bitcast %struct.SoftFloat* %agg.tmp82.i to i64*, !dbg !13147
  store i64 %call83.i, i64* %224, align 4, !dbg !13147
  %225 = bitcast %struct.SoftFloat* %agg.tmp82.i to i64*, !dbg !13148
  %226 = load i64, i64* %225, align 4, !dbg !13148
  %227 = bitcast %struct.SoftFloat* %tmp.i to i64*, !dbg !13148
  %228 = load i64, i64* %227, align 4, !dbg !13148
  %call84.i = call i64 @av_add_sf(i64 %226, i64 %228) #2, !dbg !13149
  %229 = bitcast %struct.SoftFloat* %agg.tmp81.i to i64*, !dbg !13148
  store i64 %call84.i, i64* %229, align 4, !dbg !13148
  %230 = bitcast %struct.SoftFloat* %agg.tmp81.i to i64*, !dbg !13150
  %231 = load i64, i64* %230, align 4, !dbg !13150
  %232 = bitcast %struct.SoftFloat* %pf.i218.i to i64*, !dbg !13151
  store i64 %231, i64* %232, align 4, !dbg !13151
  %exp.i221.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i218.i, i32 0, i32 1, !dbg !13152
  %233 = load i32, i32* %exp.i221.i, align 4, !dbg !13152
  %exp1.i222.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i219.i, i32 0, i32 1, !dbg !13153
  store i32 %233, i32* %exp1.i222.i, align 4, !dbg !13154
  %mant.i223.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i218.i, i32 0, i32 0, !dbg !13155
  %234 = load i32, i32* %mant.i223.i, align 4, !dbg !13155
  %shr.i224.i = ashr i32 %234, 31, !dbg !13156
  store i32 %shr.i224.i, i32* %s.i220.i, align 4, !dbg !13157
  %mant2.i225.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i218.i, i32 0, i32 0, !dbg !13158
  %235 = load i32, i32* %mant2.i225.i, align 4, !dbg !13158
  %236 = load i32, i32* %s.i220.i, align 4, !dbg !13159
  %xor.i226.i = xor i32 %235, %236, !dbg !13160
  %237 = load i32, i32* %s.i220.i, align 4, !dbg !13161
  %sub.i227.i = sub nsw i32 %xor.i226.i, %237, !dbg !13162
  %mant3.i228.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i219.i, i32 0, i32 0, !dbg !13163
  store i32 %sub.i227.i, i32* %mant3.i228.i, align 4, !dbg !13164
  %mant4.i229.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i219.i, i32 0, i32 0, !dbg !13165
  %238 = load i32, i32* %mant4.i229.i, align 4, !dbg !13165
  %and.i230.i = and i32 %238, -4194304, !dbg !13166
  %mant5.i231.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i219.i, i32 0, i32 0, !dbg !13167
  store i32 %and.i230.i, i32* %mant5.i231.i, align 4, !dbg !13168
  %mant6.i232.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i219.i, i32 0, i32 0, !dbg !13169
  %239 = load i32, i32* %mant6.i232.i, align 4, !dbg !13169
  %240 = load i32, i32* %s.i220.i, align 4, !dbg !13170
  %xor7.i233.i = xor i32 %239, %240, !dbg !13171
  %241 = load i32, i32* %s.i220.i, align 4, !dbg !13172
  %sub8.i234.i = sub nsw i32 %xor7.i233.i, %241, !dbg !13173
  %mant9.i235.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i219.i, i32 0, i32 0, !dbg !13174
  store i32 %sub8.i234.i, i32* %mant9.i235.i, align 4, !dbg !13175
  %242 = bitcast %struct.SoftFloat* %retval.i217.i to i8*, !dbg !13176
  %243 = bitcast %struct.SoftFloat* %pun.i219.i to i8*, !dbg !13176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %242, i8* %243, i64 8, i32 4, i1 false) #12, !dbg !13176
  %244 = bitcast %struct.SoftFloat* %retval.i217.i to i64*, !dbg !13177
  %245 = load i64, i64* %244, align 4, !dbg !13177
  %246 = bitcast %struct.SoftFloat* %coerce86.i to i64*, !dbg !13150
  store i64 %245, i64* %246, align 4, !dbg !13150
  %247 = bitcast %struct.SoftFloat* %var180.i to i8*, !dbg !13150
  %248 = bitcast %struct.SoftFloat* %coerce86.i to i8*, !dbg !13150
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %247, i8* %248, i64 8, i32 4, i1 false) #12, !dbg !13178
  %249 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13179
  %cor087.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %249, i32 0, i32 0, !dbg !13180
  %250 = bitcast %struct.SoftFloat* %cor0.i to i64*, !dbg !13181
  %251 = load i64, i64* %250, align 4, !dbg !13181
  %call90.i = call i64 @av_mul_sf(i64 973078528, i64 %251) #2, !dbg !13181
  %252 = bitcast %struct.SoftFloat* %agg.tmp89.i to i64*, !dbg !13181
  store i64 %call90.i, i64* %252, align 4, !dbg !13181
  %253 = bitcast %struct.SoftFloat* %r0.i to i64*, !dbg !13182
  %254 = load i64, i64* %253, align 4, !dbg !13182
  %255 = bitcast %struct.SoftFloat* %e0.i to i64*, !dbg !13182
  %256 = load i64, i64* %255, align 4, !dbg !13182
  %call92.i = call i64 @av_mul_sf(i64 %254, i64 %256) #2, !dbg !13183
  %257 = bitcast %struct.SoftFloat* %agg.tmp91.i to i64*, !dbg !13182
  store i64 %call92.i, i64* %257, align 4, !dbg !13182
  %258 = bitcast %struct.SoftFloat* %agg.tmp89.i to i64*, !dbg !13184
  %259 = load i64, i64* %258, align 4, !dbg !13184
  %260 = bitcast %struct.SoftFloat* %agg.tmp91.i to i64*, !dbg !13184
  %261 = load i64, i64* %260, align 4, !dbg !13184
  %call93.i = call i64 @av_add_sf(i64 %259, i64 %261) #2, !dbg !13185
  %262 = bitcast %struct.SoftFloat* %agg.tmp88.i to i64*, !dbg !13184
  store i64 %call93.i, i64* %262, align 4, !dbg !13184
  %263 = bitcast %struct.SoftFloat* %agg.tmp88.i to i64*, !dbg !13186
  %264 = load i64, i64* %263, align 4, !dbg !13186
  %265 = bitcast %struct.SoftFloat* %pf.i256.i to i64*, !dbg !13187
  store i64 %264, i64* %265, align 4, !dbg !13187
  %exp.i259.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i256.i, i32 0, i32 1, !dbg !13188
  %266 = load i32, i32* %exp.i259.i, align 4, !dbg !13188
  %exp1.i260.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i257.i, i32 0, i32 1, !dbg !13189
  store i32 %266, i32* %exp1.i260.i, align 4, !dbg !13190
  %mant.i261.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i256.i, i32 0, i32 0, !dbg !13191
  %267 = load i32, i32* %mant.i261.i, align 4, !dbg !13191
  %shr.i262.i = ashr i32 %267, 31, !dbg !13192
  store i32 %shr.i262.i, i32* %s.i258.i, align 4, !dbg !13193
  %mant2.i263.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i256.i, i32 0, i32 0, !dbg !13194
  %268 = load i32, i32* %mant2.i263.i, align 4, !dbg !13194
  %269 = load i32, i32* %s.i258.i, align 4, !dbg !13195
  %xor.i264.i = xor i32 %268, %269, !dbg !13196
  %270 = load i32, i32* %s.i258.i, align 4, !dbg !13197
  %sub.i265.i = sub nsw i32 %xor.i264.i, %270, !dbg !13198
  %mant3.i266.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i257.i, i32 0, i32 0, !dbg !13199
  store i32 %sub.i265.i, i32* %mant3.i266.i, align 4, !dbg !13200
  %mant4.i267.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i257.i, i32 0, i32 0, !dbg !13201
  %271 = load i32, i32* %mant4.i267.i, align 4, !dbg !13201
  %and.i268.i = and i32 %271, -4194304, !dbg !13202
  %mant5.i269.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i257.i, i32 0, i32 0, !dbg !13203
  store i32 %and.i268.i, i32* %mant5.i269.i, align 4, !dbg !13204
  %mant6.i270.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i257.i, i32 0, i32 0, !dbg !13205
  %272 = load i32, i32* %mant6.i270.i, align 4, !dbg !13205
  %273 = load i32, i32* %s.i258.i, align 4, !dbg !13206
  %xor7.i271.i = xor i32 %272, %273, !dbg !13207
  %274 = load i32, i32* %s.i258.i, align 4, !dbg !13208
  %sub8.i272.i = sub nsw i32 %xor7.i271.i, %274, !dbg !13209
  %mant9.i273.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i257.i, i32 0, i32 0, !dbg !13210
  store i32 %sub8.i272.i, i32* %mant9.i273.i, align 4, !dbg !13211
  %275 = bitcast %struct.SoftFloat* %retval.i255.i to i8*, !dbg !13212
  %276 = bitcast %struct.SoftFloat* %pun.i257.i to i8*, !dbg !13212
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %275, i8* %276, i64 8, i32 4, i1 false) #12, !dbg !13212
  %277 = bitcast %struct.SoftFloat* %retval.i255.i to i64*, !dbg !13213
  %278 = load i64, i64* %277, align 4, !dbg !13213
  %279 = bitcast %struct.SoftFloat* %coerce95.i to i64*, !dbg !13186
  store i64 %278, i64* %279, align 4, !dbg !13186
  %280 = bitcast %struct.SoftFloat* %cor087.i to i8*, !dbg !13186
  %281 = bitcast %struct.SoftFloat* %coerce95.i to i8*, !dbg !13186
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %280, i8* %281, i64 8, i32 4, i1 false) #12, !dbg !13214
  %282 = bitcast %struct.SoftFloat* %r0.i to i64*, !dbg !13215
  %283 = load i64, i64* %282, align 4, !dbg !13215
  %284 = bitcast %struct.SoftFloat* %r0.i to i64*, !dbg !13215
  %285 = load i64, i64* %284, align 4, !dbg !13215
  %call97.i = call i64 @av_mul_sf(i64 %283, i64 %285) #2, !dbg !13215
  %286 = bitcast %struct.SoftFloat* %agg.tmp96.i to i64*, !dbg !13215
  store i64 %call97.i, i64* %286, align 4, !dbg !13215
  %287 = bitcast %struct.SoftFloat* %e0.i to i64*, !dbg !13216
  %288 = load i64, i64* %287, align 4, !dbg !13216
  %289 = bitcast %struct.SoftFloat* %e0.i to i64*, !dbg !13216
  %290 = load i64, i64* %289, align 4, !dbg !13216
  %call99.i = call i64 @av_mul_sf(i64 %288, i64 %290) #2, !dbg !13217
  %291 = bitcast %struct.SoftFloat* %agg.tmp98.i to i64*, !dbg !13216
  store i64 %call99.i, i64* %291, align 4, !dbg !13216
  %292 = bitcast %struct.SoftFloat* %agg.tmp96.i to i64*, !dbg !13218
  %293 = load i64, i64* %292, align 4, !dbg !13218
  %294 = bitcast %struct.SoftFloat* %agg.tmp98.i to i64*, !dbg !13218
  %295 = load i64, i64* %294, align 4, !dbg !13218
  %call100.i = call i64 @av_add_sf(i64 %293, i64 %295) #2, !dbg !13219
  %296 = bitcast %struct.SoftFloat* %coerce101.i to i64*, !dbg !13218
  store i64 %call100.i, i64* %296, align 4, !dbg !13218
  %297 = bitcast %struct.SoftFloat* %tmp.i to i8*, !dbg !13218
  %298 = bitcast %struct.SoftFloat* %coerce101.i to i8*, !dbg !13218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %297, i8* %298, i64 8, i32 4, i1 false) #12, !dbg !13220
  %exp102.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %tmp.i, i32 0, i32 1, !dbg !13221
  %299 = load i32, i32* %exp102.i, align 4, !dbg !13222
  %dec103.i = add nsw i32 %299, -1, !dbg !13222
  store i32 %dec103.i, i32* %exp102.i, align 4, !dbg !13222
  %300 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13223
  %var0104.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %300, i32 0, i32 2, !dbg !13224
  %301 = bitcast %struct.SoftFloat* %var0.i to i64*, !dbg !13225
  %302 = load i64, i64* %301, align 4, !dbg !13225
  %call107.i = call i64 @av_mul_sf(i64 973078528, i64 %302) #2, !dbg !13225
  %303 = bitcast %struct.SoftFloat* %agg.tmp106.i to i64*, !dbg !13225
  store i64 %call107.i, i64* %303, align 4, !dbg !13225
  %304 = bitcast %struct.SoftFloat* %agg.tmp106.i to i64*, !dbg !13226
  %305 = load i64, i64* %304, align 4, !dbg !13226
  %306 = bitcast %struct.SoftFloat* %tmp.i to i64*, !dbg !13226
  %307 = load i64, i64* %306, align 4, !dbg !13226
  %call108.i = call i64 @av_add_sf(i64 %305, i64 %307) #2, !dbg !13227
  %308 = bitcast %struct.SoftFloat* %agg.tmp105.i to i64*, !dbg !13226
  store i64 %call108.i, i64* %308, align 4, !dbg !13226
  %309 = bitcast %struct.SoftFloat* %agg.tmp105.i to i64*, !dbg !13228
  %310 = load i64, i64* %309, align 4, !dbg !13228
  %311 = bitcast %struct.SoftFloat* %pf.i237.i to i64*, !dbg !13229
  store i64 %310, i64* %311, align 4, !dbg !13229
  %exp.i240.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i237.i, i32 0, i32 1, !dbg !13230
  %312 = load i32, i32* %exp.i240.i, align 4, !dbg !13230
  %exp1.i241.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i238.i, i32 0, i32 1, !dbg !13231
  store i32 %312, i32* %exp1.i241.i, align 4, !dbg !13232
  %mant.i242.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i237.i, i32 0, i32 0, !dbg !13233
  %313 = load i32, i32* %mant.i242.i, align 4, !dbg !13233
  %shr.i243.i = ashr i32 %313, 31, !dbg !13234
  store i32 %shr.i243.i, i32* %s.i239.i, align 4, !dbg !13235
  %mant2.i244.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i237.i, i32 0, i32 0, !dbg !13236
  %314 = load i32, i32* %mant2.i244.i, align 4, !dbg !13236
  %315 = load i32, i32* %s.i239.i, align 4, !dbg !13237
  %xor.i245.i = xor i32 %314, %315, !dbg !13238
  %316 = load i32, i32* %s.i239.i, align 4, !dbg !13239
  %sub.i246.i = sub nsw i32 %xor.i245.i, %316, !dbg !13240
  %mant3.i247.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i238.i, i32 0, i32 0, !dbg !13241
  store i32 %sub.i246.i, i32* %mant3.i247.i, align 4, !dbg !13242
  %mant4.i248.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i238.i, i32 0, i32 0, !dbg !13243
  %317 = load i32, i32* %mant4.i248.i, align 4, !dbg !13243
  %and.i249.i = and i32 %317, -4194304, !dbg !13244
  %mant5.i250.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i238.i, i32 0, i32 0, !dbg !13245
  store i32 %and.i249.i, i32* %mant5.i250.i, align 4, !dbg !13246
  %mant6.i251.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i238.i, i32 0, i32 0, !dbg !13247
  %318 = load i32, i32* %mant6.i251.i, align 4, !dbg !13247
  %319 = load i32, i32* %s.i239.i, align 4, !dbg !13248
  %xor7.i252.i = xor i32 %318, %319, !dbg !13249
  %320 = load i32, i32* %s.i239.i, align 4, !dbg !13250
  %sub8.i253.i = sub nsw i32 %xor7.i252.i, %320, !dbg !13251
  %mant9.i254.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i238.i, i32 0, i32 0, !dbg !13252
  store i32 %sub8.i253.i, i32* %mant9.i254.i, align 4, !dbg !13253
  %321 = bitcast %struct.SoftFloat* %retval.i236.i to i8*, !dbg !13254
  %322 = bitcast %struct.SoftFloat* %pun.i238.i to i8*, !dbg !13254
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %321, i8* %322, i64 8, i32 4, i1 false) #12, !dbg !13254
  %323 = bitcast %struct.SoftFloat* %retval.i236.i to i64*, !dbg !13255
  %324 = load i64, i64* %323, align 4, !dbg !13255
  %325 = bitcast %struct.SoftFloat* %coerce110.i to i64*, !dbg !13228
  store i64 %324, i64* %325, align 4, !dbg !13228
  %326 = bitcast %struct.SoftFloat* %var0104.i to i8*, !dbg !13228
  %327 = bitcast %struct.SoftFloat* %coerce110.i to i8*, !dbg !13228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %326, i8* %327, i64 8, i32 4, i1 false) #12, !dbg !13256
  %328 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13257
  %r1111.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %328, i32 0, i32 5, !dbg !13258
  %329 = bitcast %struct.SoftFloat* %k1.i to i64*, !dbg !13259
  %330 = load i64, i64* %329, align 4, !dbg !13259
  %331 = bitcast %struct.SoftFloat* %e0.i to i64*, !dbg !13259
  %332 = load i64, i64* %331, align 4, !dbg !13259
  %call115.i = call i64 @av_mul_sf(i64 %330, i64 %332) #2, !dbg !13259
  %333 = bitcast %struct.SoftFloat* %agg.tmp114.i to i64*, !dbg !13259
  store i64 %call115.i, i64* %333, align 4, !dbg !13259
  %334 = bitcast %struct.SoftFloat* %r0.i to i64*, !dbg !13260
  %335 = load i64, i64* %334, align 4, !dbg !13260
  %336 = bitcast %struct.SoftFloat* %agg.tmp114.i to i64*, !dbg !13260
  %337 = load i64, i64* %336, align 4, !dbg !13260
  %call116.i = call i64 @av_sub_sf(i64 %335, i64 %337) #2, !dbg !13261
  %338 = bitcast %struct.SoftFloat* %agg.tmp113.i to i64*, !dbg !13260
  store i64 %call116.i, i64* %338, align 4, !dbg !13260
  %339 = bitcast %struct.SoftFloat* %agg.tmp113.i to i64*, !dbg !13262
  %340 = load i64, i64* %339, align 4, !dbg !13262
  %call117.i = call i64 @av_mul_sf(i64 1023410176, i64 %340) #2, !dbg !13263
  %341 = bitcast %struct.SoftFloat* %agg.tmp112.i to i64*, !dbg !13262
  store i64 %call117.i, i64* %341, align 4, !dbg !13262
  %342 = bitcast %struct.SoftFloat* %agg.tmp112.i to i64*, !dbg !13264
  %343 = load i64, i64* %342, align 4, !dbg !13264
  %344 = bitcast %struct.SoftFloat* %pf.i163.i to i64*, !dbg !13265
  store i64 %343, i64* %344, align 4, !dbg !13265
  %exp.i166.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i163.i, i32 0, i32 1, !dbg !13266
  %345 = load i32, i32* %exp.i166.i, align 4, !dbg !13266
  %exp1.i167.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i164.i, i32 0, i32 1, !dbg !13267
  store i32 %345, i32* %exp1.i167.i, align 4, !dbg !13268
  %mant.i168.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i163.i, i32 0, i32 0, !dbg !13269
  %346 = load i32, i32* %mant.i168.i, align 4, !dbg !13269
  %shr.i169.i = ashr i32 %346, 31, !dbg !13270
  store i32 %shr.i169.i, i32* %s.i165.i, align 4, !dbg !13271
  %mant2.i170.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i163.i, i32 0, i32 0, !dbg !13272
  %347 = load i32, i32* %mant2.i170.i, align 4, !dbg !13272
  %348 = load i32, i32* %s.i165.i, align 4, !dbg !13273
  %xor.i171.i = xor i32 %347, %348, !dbg !13274
  %349 = load i32, i32* %s.i165.i, align 4, !dbg !13275
  %sub.i172.i = sub nsw i32 %xor.i171.i, %349, !dbg !13276
  %mant3.i173.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i164.i, i32 0, i32 0, !dbg !13277
  store i32 %sub.i172.i, i32* %mant3.i173.i, align 4, !dbg !13278
  %mant4.i174.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i164.i, i32 0, i32 0, !dbg !13279
  %350 = load i32, i32* %mant4.i174.i, align 4, !dbg !13279
  %and.i175.i = and i32 %350, -4194304, !dbg !13280
  %mant5.i176.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i164.i, i32 0, i32 0, !dbg !13281
  store i32 %and.i175.i, i32* %mant5.i176.i, align 4, !dbg !13282
  %mant6.i177.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i164.i, i32 0, i32 0, !dbg !13283
  %351 = load i32, i32* %mant6.i177.i, align 4, !dbg !13283
  %352 = load i32, i32* %s.i165.i, align 4, !dbg !13284
  %xor7.i178.i = xor i32 %351, %352, !dbg !13285
  %353 = load i32, i32* %s.i165.i, align 4, !dbg !13286
  %sub8.i179.i = sub nsw i32 %xor7.i178.i, %353, !dbg !13287
  %mant9.i180.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i164.i, i32 0, i32 0, !dbg !13288
  store i32 %sub8.i179.i, i32* %mant9.i180.i, align 4, !dbg !13289
  %354 = bitcast %struct.SoftFloat* %retval.i162.i to i8*, !dbg !13290
  %355 = bitcast %struct.SoftFloat* %pun.i164.i to i8*, !dbg !13290
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %354, i8* %355, i64 8, i32 4, i1 false) #12, !dbg !13290
  %356 = bitcast %struct.SoftFloat* %retval.i162.i to i64*, !dbg !13291
  %357 = load i64, i64* %356, align 4, !dbg !13291
  %358 = bitcast %struct.SoftFloat* %coerce119.i to i64*, !dbg !13264
  store i64 %357, i64* %358, align 4, !dbg !13264
  %359 = bitcast %struct.SoftFloat* %r1111.i to i8*, !dbg !13264
  %360 = bitcast %struct.SoftFloat* %coerce119.i to i8*, !dbg !13264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %359, i8* %360, i64 8, i32 4, i1 false) #12, !dbg !13292
  %361 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13293
  %r0120.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %361, i32 0, i32 4, !dbg !13294
  %362 = bitcast %struct.SoftFloat* %e0.i to i64*, !dbg !13295
  %363 = load i64, i64* %362, align 4, !dbg !13295
  %call122.i = call i64 @av_mul_sf(i64 1023410176, i64 %363) #2, !dbg !13295
  %364 = bitcast %struct.SoftFloat* %agg.tmp121.i to i64*, !dbg !13295
  store i64 %call122.i, i64* %364, align 4, !dbg !13295
  %365 = bitcast %struct.SoftFloat* %agg.tmp121.i to i64*, !dbg !13296
  %366 = load i64, i64* %365, align 4, !dbg !13296
  %367 = bitcast %struct.SoftFloat* %pf.i126.i to i64*, !dbg !13297
  store i64 %366, i64* %367, align 4, !dbg !13297
  %exp.i128.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i126.i, i32 0, i32 1, !dbg !13298
  %368 = load i32, i32* %exp.i128.i, align 4, !dbg !13298
  %exp1.i.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i.i, i32 0, i32 1, !dbg !13299
  store i32 %368, i32* %exp1.i.i, align 4, !dbg !13300
  %mant.i129.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i126.i, i32 0, i32 0, !dbg !13301
  %369 = load i32, i32* %mant.i129.i, align 4, !dbg !13301
  %shr.i130.i = ashr i32 %369, 31, !dbg !13302
  store i32 %shr.i130.i, i32* %s.i127.i, align 4, !dbg !13303
  %mant2.i.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pf.i126.i, i32 0, i32 0, !dbg !13304
  %370 = load i32, i32* %mant2.i.i, align 4, !dbg !13304
  %371 = load i32, i32* %s.i127.i, align 4, !dbg !13305
  %xor.i131.i = xor i32 %370, %371, !dbg !13306
  %372 = load i32, i32* %s.i127.i, align 4, !dbg !13307
  %sub.i132.i = sub nsw i32 %xor.i131.i, %372, !dbg !13308
  %mant3.i133.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i.i, i32 0, i32 0, !dbg !13309
  store i32 %sub.i132.i, i32* %mant3.i133.i, align 4, !dbg !13310
  %mant4.i134.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i.i, i32 0, i32 0, !dbg !13311
  %373 = load i32, i32* %mant4.i134.i, align 4, !dbg !13311
  %and.i135.i = and i32 %373, -4194304, !dbg !13312
  %mant5.i136.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i.i, i32 0, i32 0, !dbg !13313
  store i32 %and.i135.i, i32* %mant5.i136.i, align 4, !dbg !13314
  %mant6.i137.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i.i, i32 0, i32 0, !dbg !13315
  %374 = load i32, i32* %mant6.i137.i, align 4, !dbg !13315
  %375 = load i32, i32* %s.i127.i, align 4, !dbg !13316
  %xor7.i.i = xor i32 %374, %375, !dbg !13317
  %376 = load i32, i32* %s.i127.i, align 4, !dbg !13318
  %sub8.i.i = sub nsw i32 %xor7.i.i, %376, !dbg !13319
  %mant9.i138.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %pun.i.i, i32 0, i32 0, !dbg !13320
  store i32 %sub8.i.i, i32* %mant9.i138.i, align 4, !dbg !13321
  %377 = bitcast %struct.SoftFloat* %retval.i125.i to i8*, !dbg !13322
  %378 = bitcast %struct.SoftFloat* %pun.i.i to i8*, !dbg !13322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %377, i8* %378, i64 8, i32 4, i1 false) #12, !dbg !13322
  %379 = bitcast %struct.SoftFloat* %retval.i125.i to i64*, !dbg !13323
  %380 = load i64, i64* %379, align 4, !dbg !13323
  %381 = bitcast %struct.SoftFloat* %coerce124.i to i64*, !dbg !13296
  store i64 %380, i64* %381, align 4, !dbg !13296
  %382 = bitcast %struct.SoftFloat* %r0120.i to i8*, !dbg !13296
  %383 = bitcast %struct.SoftFloat* %coerce124.i to i8*, !dbg !13296
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %382, i8* %383, i64 8, i32 4, i1 false) #12, !dbg !13324
  br label %for.inc, !dbg !13325

for.inc:                                          ; preds = %predict.exit
  %384 = load i32, i32* %k, align 4, !dbg !13326
  %inc = add nsw i32 %384, 1, !dbg !13326
  store i32 %inc, i32* %k, align 4, !dbg !13326
  br label %for.cond13, !dbg !13327, !llvm.loop !13329

for.end:                                          ; preds = %for.cond13
  br label %for.inc34, !dbg !13331

for.inc34:                                        ; preds = %for.end
  %385 = load i32, i32* %sfb, align 4, !dbg !13332
  %inc35 = add nsw i32 %385, 1, !dbg !13332
  store i32 %inc35, i32* %sfb, align 4, !dbg !13332
  br label %for.cond, !dbg !13333, !llvm.loop !13335

for.end36:                                        ; preds = %for.cond
  %386 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13337
  %ics37 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %386, i32 0, i32 0, !dbg !13339
  %predictor_reset_group = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics37, i32 0, i32 13, !dbg !13340
  %387 = load i32, i32* %predictor_reset_group, align 4, !dbg !13340
  %tobool38 = icmp ne i32 %387, 0, !dbg !13337
  br i1 %tobool38, label %if.then39, label %if.end44, !dbg !13341

if.then39:                                        ; preds = %for.end36
  %388 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13342
  %predictor_state40 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %388, i32 0, i32 20, !dbg !13343
  %arraydecay41 = getelementptr inbounds [672 x %struct.PredictorState], [672 x %struct.PredictorState]* %predictor_state40, i32 0, i32 0, !dbg !13342
  %389 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13344
  %ics42 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %389, i32 0, i32 0, !dbg !13345
  %predictor_reset_group43 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics42, i32 0, i32 13, !dbg !13346
  %390 = load i32, i32* %predictor_reset_group43, align 4, !dbg !13346
  call void @reset_predictor_group(%struct.PredictorState* %arraydecay41, i32 %390), !dbg !13347
  br label %if.end44, !dbg !13347

if.end44:                                         ; preds = %if.then39, %for.end36
  br label %if.end47, !dbg !13348

if.else:                                          ; preds = %if.end
  %391 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13349
  %predictor_state45 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %391, i32 0, i32 20, !dbg !13350
  %arraydecay46 = getelementptr inbounds [672 x %struct.PredictorState], [672 x %struct.PredictorState]* %predictor_state45, i32 0, i32 0, !dbg !13349
  call void @reset_all_predictors(%struct.PredictorState* %arraydecay46), !dbg !13351
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.end44
  ret void, !dbg !13352
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_prediction(%struct.AACContext* %ac, %struct.IndividualChannelStream* %ics, %struct.GetBitContext* %gb) #1 !dbg !13353 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %sfb = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !13354, metadata !2068), !dbg !13355
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !13356, metadata !2068), !dbg !13357
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !13358, metadata !2068), !dbg !13359
  call void @llvm.dbg.declare(metadata i32* %sfb, metadata !13360, metadata !2068), !dbg !13361
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13362
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !13364
  %tobool = icmp ne i32 %call, 0, !dbg !13364
  br i1 %tobool, label %if.then, label %if.end6, !dbg !13365

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13366
  %call1 = call i32 @get_bits(%struct.GetBitContext* %1, i32 5), !dbg !13368
  %2 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !13369
  %predictor_reset_group = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %2, i32 0, i32 13, !dbg !13370
  store i32 %call1, i32* %predictor_reset_group, align 4, !dbg !13371
  %3 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !13372
  %predictor_reset_group2 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %3, i32 0, i32 13, !dbg !13374
  %4 = load i32, i32* %predictor_reset_group2, align 4, !dbg !13374
  %cmp = icmp eq i32 %4, 0, !dbg !13375
  br i1 %cmp, label %if.then5, label %lor.lhs.false, !dbg !13376

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !13377
  %predictor_reset_group3 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %5, i32 0, i32 13, !dbg !13378
  %6 = load i32, i32* %predictor_reset_group3, align 4, !dbg !13378
  %cmp4 = icmp sgt i32 %6, 30, !dbg !13379
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !13380

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13382
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 1, !dbg !13384
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !13384
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !13382
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.52, i32 0, i32 0)), !dbg !13385
  store i32 -1094995529, i32* %retval, align 4, !dbg !13386
  br label %return, !dbg !13386

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end6, !dbg !13387

if.end6:                                          ; preds = %if.end, %entry
  store i32 0, i32* %sfb, align 4, !dbg !13388
  br label %for.cond, !dbg !13390

for.cond:                                         ; preds = %for.inc, %if.end6
  %10 = load i32, i32* %sfb, align 4, !dbg !13391
  %11 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !13394
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %11, i32 0, i32 0, !dbg !13395
  %12 = load i8, i8* %max_sfb, align 8, !dbg !13395
  %conv = zext i8 %12 to i32, !dbg !13396
  %13 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13397
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %13, i32 0, i32 21, !dbg !13398
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !13397
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !13399
  %sampling_index = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 1, !dbg !13400
  %14 = load i32, i32* %sampling_index, align 4, !dbg !13400
  %idxprom = sext i32 %14 to i64, !dbg !13401
  %arrayidx7 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_pred_sfb_max, i64 0, i64 %idxprom, !dbg !13401
  %15 = load i8, i8* %arrayidx7, align 1, !dbg !13401
  %conv8 = zext i8 %15 to i32, !dbg !13402
  %cmp9 = icmp sgt i32 %conv, %conv8, !dbg !13403
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !13396

cond.true:                                        ; preds = %for.cond
  %16 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13404
  %oc11 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %16, i32 0, i32 21, !dbg !13406
  %arrayidx12 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc11, i64 0, i64 1, !dbg !13404
  %m4ac13 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx12, i32 0, i32 0, !dbg !13407
  %sampling_index14 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac13, i32 0, i32 1, !dbg !13408
  %17 = load i32, i32* %sampling_index14, align 4, !dbg !13408
  %idxprom15 = sext i32 %17 to i64, !dbg !13409
  %arrayidx16 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_pred_sfb_max, i64 0, i64 %idxprom15, !dbg !13409
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !13409
  %conv17 = zext i8 %18 to i32, !dbg !13410
  br label %cond.end, !dbg !13411

cond.false:                                       ; preds = %for.cond
  %19 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !13412
  %max_sfb18 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %19, i32 0, i32 0, !dbg !13414
  %20 = load i8, i8* %max_sfb18, align 8, !dbg !13414
  %conv19 = zext i8 %20 to i32, !dbg !13415
  br label %cond.end, !dbg !13416

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv17, %cond.true ], [ %conv19, %cond.false ], !dbg !13417
  %cmp20 = icmp slt i32 %10, %cond, !dbg !13419
  br i1 %cmp20, label %for.body, label %for.end, !dbg !13420

for.body:                                         ; preds = %cond.end
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13421
  %call22 = call i32 @get_bits1(%struct.GetBitContext* %21), !dbg !13423
  %conv23 = trunc i32 %call22 to i8, !dbg !13423
  %22 = load i32, i32* %sfb, align 4, !dbg !13424
  %idxprom24 = sext i32 %22 to i64, !dbg !13425
  %23 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !13425
  %prediction_used = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %23, i32 0, i32 15, !dbg !13426
  %arrayidx25 = getelementptr inbounds [41 x i8], [41 x i8]* %prediction_used, i64 0, i64 %idxprom24, !dbg !13425
  store i8 %conv23, i8* %arrayidx25, align 1, !dbg !13427
  br label %for.inc, !dbg !13428

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %sfb, align 4, !dbg !13429
  %inc = add nsw i32 %24, 1, !dbg !13429
  store i32 %inc, i32* %sfb, align 4, !dbg !13429
  br label %for.cond, !dbg !13431, !llvm.loop !13432

for.end:                                          ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !13434
  br label %return, !dbg !13434

return:                                           ; preds = %for.end, %if.then5
  %25 = load i32, i32* %retval, align 4, !dbg !13435
  ret i32 %25, !dbg !13435
}

; Function Attrs: nounwind uwtable
define internal void @decode_ltp(%struct.LongTermPrediction* %ltp, %struct.GetBitContext* %gb, i8 zeroext %max_sfb) #1 !dbg !13436 {
entry:
  %ltp.addr = alloca %struct.LongTermPrediction*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %max_sfb.addr = alloca i8, align 1
  %sfb = alloca i32, align 4
  store %struct.LongTermPrediction* %ltp, %struct.LongTermPrediction** %ltp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LongTermPrediction** %ltp.addr, metadata !13440, metadata !2068), !dbg !13441
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !13442, metadata !2068), !dbg !13443
  store i8 %max_sfb, i8* %max_sfb.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %max_sfb.addr, metadata !13444, metadata !2068), !dbg !13445
  call void @llvm.dbg.declare(metadata i32* %sfb, metadata !13446, metadata !2068), !dbg !13447
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13448
  %call = call i32 @get_bits(%struct.GetBitContext* %0, i32 11), !dbg !13449
  %conv = trunc i32 %call to i16, !dbg !13449
  %1 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp.addr, align 8, !dbg !13450
  %lag = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %1, i32 0, i32 1, !dbg !13451
  store i16 %conv, i16* %lag, align 2, !dbg !13452
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13453
  %call1 = call i32 @get_bits(%struct.GetBitContext* %2, i32 3), !dbg !13454
  %idxprom = zext i32 %call1 to i64, !dbg !13455
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @ltp_coef, i64 0, i64 %idxprom, !dbg !13455
  %3 = load i32, i32* %arrayidx, align 4, !dbg !13455
  %4 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp.addr, align 8, !dbg !13456
  %coef = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %4, i32 0, i32 3, !dbg !13457
  store i32 %3, i32* %coef, align 4, !dbg !13458
  store i32 0, i32* %sfb, align 4, !dbg !13459
  br label %for.cond, !dbg !13461

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %sfb, align 4, !dbg !13462
  %6 = load i8, i8* %max_sfb.addr, align 1, !dbg !13465
  %conv2 = zext i8 %6 to i32, !dbg !13466
  %cmp = icmp sgt i32 %conv2, 40, !dbg !13467
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13466

cond.true:                                        ; preds = %for.cond
  br label %cond.end, !dbg !13468

cond.false:                                       ; preds = %for.cond
  %7 = load i8, i8* %max_sfb.addr, align 1, !dbg !13470
  %conv4 = zext i8 %7 to i32, !dbg !13472
  br label %cond.end, !dbg !13473

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 40, %cond.true ], [ %conv4, %cond.false ], !dbg !13474
  %cmp5 = icmp slt i32 %5, %cond, !dbg !13476
  br i1 %cmp5, label %for.body, label %for.end, !dbg !13477

for.body:                                         ; preds = %cond.end
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13478
  %call7 = call i32 @get_bits1(%struct.GetBitContext* %8), !dbg !13479
  %conv8 = trunc i32 %call7 to i8, !dbg !13479
  %9 = load i32, i32* %sfb, align 4, !dbg !13480
  %idxprom9 = sext i32 %9 to i64, !dbg !13481
  %10 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp.addr, align 8, !dbg !13481
  %used = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %10, i32 0, i32 4, !dbg !13482
  %arrayidx10 = getelementptr inbounds [40 x i8], [40 x i8]* %used, i64 0, i64 %idxprom9, !dbg !13481
  store i8 %conv8, i8* %arrayidx10, align 1, !dbg !13483
  br label %for.inc, !dbg !13481

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %sfb, align 4, !dbg !13484
  %inc = add nsw i32 %11, 1, !dbg !13484
  store i32 %inc, i32* %sfb, align 4, !dbg !13484
  br label %for.cond, !dbg !13486, !llvm.loop !13487

for.end:                                          ; preds = %cond.end
  ret void, !dbg !13489
}

; Function Attrs: nounwind uwtable
define internal void @noise_scale(i32* %coefs, i32 %scale, i32 %band_energy, i32 %len) #1 !dbg !13490 {
entry:
  %coefs.addr = alloca i32*, align 8
  %scale.addr = alloca i32, align 4
  %band_energy.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %ssign = alloca i32, align 4
  %s = alloca i32, align 4
  %round = alloca i32, align 4
  %i = alloca i32, align 4
  %out = alloca i32, align 4
  %c = alloca i32, align 4
  %nlz = alloca i32, align 4
  store i32* %coefs, i32** %coefs.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %coefs.addr, metadata !13493, metadata !2068), !dbg !13494
  store i32 %scale, i32* %scale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale.addr, metadata !13495, metadata !2068), !dbg !13496
  store i32 %band_energy, i32* %band_energy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %band_energy.addr, metadata !13497, metadata !2068), !dbg !13498
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !13499, metadata !2068), !dbg !13500
  call void @llvm.dbg.declare(metadata i32* %ssign, metadata !13501, metadata !2068), !dbg !13502
  %0 = load i32, i32* %scale.addr, align 4, !dbg !13503
  %cmp = icmp slt i32 %0, 0, !dbg !13504
  %cond = select i1 %cmp, i32 -1, i32 1, !dbg !13503
  store i32 %cond, i32* %ssign, align 4, !dbg !13502
  call void @llvm.dbg.declare(metadata i32* %s, metadata !13505, metadata !2068), !dbg !13506
  %1 = load i32, i32* %scale.addr, align 4, !dbg !13507
  %cmp1 = icmp sge i32 %1, 0, !dbg !13508
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !13509

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %scale.addr, align 4, !dbg !13510
  br label %cond.end, !dbg !13512

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %scale.addr, align 4, !dbg !13513
  %sub = sub nsw i32 0, %3, !dbg !13515
  br label %cond.end, !dbg !13516

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond2 = phi i32 [ %2, %cond.true ], [ %sub, %cond.false ], !dbg !13517
  store i32 %cond2, i32* %s, align 4, !dbg !13519
  call void @llvm.dbg.declare(metadata i32* %round, metadata !13520, metadata !2068), !dbg !13521
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13522, metadata !2068), !dbg !13523
  call void @llvm.dbg.declare(metadata i32* %out, metadata !13524, metadata !2068), !dbg !13525
  call void @llvm.dbg.declare(metadata i32* %c, metadata !13526, metadata !2068), !dbg !13527
  %4 = load i32, i32* %s, align 4, !dbg !13528
  %and = and i32 %4, 3, !dbg !13529
  %idxprom = sext i32 %and to i64, !dbg !13530
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* @exp2tab, i64 0, i64 %idxprom, !dbg !13530
  %5 = load i32, i32* %arrayidx, align 4, !dbg !13530
  store i32 %5, i32* %c, align 4, !dbg !13527
  call void @llvm.dbg.declare(metadata i32* %nlz, metadata !13531, metadata !2068), !dbg !13532
  store i32 0, i32* %nlz, align 4, !dbg !13532
  br label %while.cond, !dbg !13533

while.cond:                                       ; preds = %while.body, %cond.end
  %6 = load i32, i32* %band_energy.addr, align 4, !dbg !13534
  %cmp3 = icmp sgt i32 %6, 32767, !dbg !13535
  br i1 %cmp3, label %while.body, label %while.end, !dbg !13536

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %band_energy.addr, align 4, !dbg !13537
  %shr = ashr i32 %7, 1, !dbg !13537
  store i32 %shr, i32* %band_energy.addr, align 4, !dbg !13537
  %8 = load i32, i32* %nlz, align 4, !dbg !13539
  %inc = add nsw i32 %8, 1, !dbg !13539
  store i32 %inc, i32* %nlz, align 4, !dbg !13539
  br label %while.cond, !dbg !13540, !llvm.loop !13541

while.end:                                        ; preds = %while.cond
  %9 = load i32, i32* %band_energy.addr, align 4, !dbg !13542
  %10 = load i32, i32* %c, align 4, !dbg !13543
  %div = sdiv i32 %10, %9, !dbg !13543
  store i32 %div, i32* %c, align 4, !dbg !13543
  %11 = load i32, i32* %nlz, align 4, !dbg !13544
  %add = add nsw i32 21, %11, !dbg !13545
  %12 = load i32, i32* %s, align 4, !dbg !13546
  %shr4 = ashr i32 %12, 2, !dbg !13547
  %sub5 = sub nsw i32 %add, %shr4, !dbg !13548
  store i32 %sub5, i32* %s, align 4, !dbg !13549
  %13 = load i32, i32* %s, align 4, !dbg !13550
  %cmp6 = icmp sgt i32 %13, 31, !dbg !13552
  br i1 %cmp6, label %if.then, label %if.else, !dbg !13553

if.then:                                          ; preds = %while.end
  store i32 0, i32* %i, align 4, !dbg !13554
  br label %for.cond, !dbg !13557

for.cond:                                         ; preds = %for.inc, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !13558
  %15 = load i32, i32* %len.addr, align 4, !dbg !13561
  %cmp7 = icmp slt i32 %14, %15, !dbg !13562
  br i1 %cmp7, label %for.body, label %for.end, !dbg !13563

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !13564
  %idxprom8 = sext i32 %16 to i64, !dbg !13566
  %17 = load i32*, i32** %coefs.addr, align 8, !dbg !13566
  %arrayidx9 = getelementptr inbounds i32, i32* %17, i64 %idxprom8, !dbg !13566
  store i32 0, i32* %arrayidx9, align 4, !dbg !13567
  br label %for.inc, !dbg !13568

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !13569
  %inc10 = add nsw i32 %18, 1, !dbg !13569
  store i32 %inc10, i32* %i, align 4, !dbg !13569
  br label %for.cond, !dbg !13571, !llvm.loop !13572

for.end:                                          ; preds = %for.cond
  br label %if.end57, !dbg !13574

if.else:                                          ; preds = %while.end
  %19 = load i32, i32* %s, align 4, !dbg !13575
  %cmp11 = icmp sge i32 %19, 0, !dbg !13578
  br i1 %cmp11, label %if.then12, label %if.else34, !dbg !13575

if.then12:                                        ; preds = %if.else
  %20 = load i32, i32* %s, align 4, !dbg !13579
  %tobool = icmp ne i32 %20, 0, !dbg !13579
  br i1 %tobool, label %cond.true13, label %cond.false15, !dbg !13579

cond.true13:                                      ; preds = %if.then12
  %21 = load i32, i32* %s, align 4, !dbg !13581
  %sub14 = sub nsw i32 %21, 1, !dbg !13583
  %shl = shl i32 1, %sub14, !dbg !13584
  br label %cond.end16, !dbg !13585

cond.false15:                                     ; preds = %if.then12
  br label %cond.end16, !dbg !13586

cond.end16:                                       ; preds = %cond.false15, %cond.true13
  %cond17 = phi i32 [ %shl, %cond.true13 ], [ 0, %cond.false15 ], !dbg !13588
  store i32 %cond17, i32* %round, align 4, !dbg !13590
  store i32 0, i32* %i, align 4, !dbg !13591
  br label %for.cond18, !dbg !13593

for.cond18:                                       ; preds = %for.inc31, %cond.end16
  %22 = load i32, i32* %i, align 4, !dbg !13594
  %23 = load i32, i32* %len.addr, align 4, !dbg !13597
  %cmp19 = icmp slt i32 %22, %23, !dbg !13598
  br i1 %cmp19, label %for.body20, label %for.end33, !dbg !13599

for.body20:                                       ; preds = %for.cond18
  %24 = load i32, i32* %i, align 4, !dbg !13600
  %idxprom21 = sext i32 %24 to i64, !dbg !13602
  %25 = load i32*, i32** %coefs.addr, align 8, !dbg !13602
  %arrayidx22 = getelementptr inbounds i32, i32* %25, i64 %idxprom21, !dbg !13602
  %26 = load i32, i32* %arrayidx22, align 4, !dbg !13602
  %conv = sext i32 %26 to i64, !dbg !13603
  %27 = load i32, i32* %c, align 4, !dbg !13604
  %conv23 = sext i32 %27 to i64, !dbg !13604
  %mul = mul nsw i64 %conv, %conv23, !dbg !13605
  %shr24 = ashr i64 %mul, 32, !dbg !13606
  %conv25 = trunc i64 %shr24 to i32, !dbg !13607
  store i32 %conv25, i32* %out, align 4, !dbg !13608
  %28 = load i32, i32* %out, align 4, !dbg !13609
  %29 = load i32, i32* %round, align 4, !dbg !13610
  %add26 = add i32 %28, %29, !dbg !13611
  %30 = load i32, i32* %s, align 4, !dbg !13612
  %shr27 = ashr i32 %add26, %30, !dbg !13613
  %31 = load i32, i32* %ssign, align 4, !dbg !13614
  %mul28 = mul nsw i32 %shr27, %31, !dbg !13615
  %32 = load i32, i32* %i, align 4, !dbg !13616
  %idxprom29 = sext i32 %32 to i64, !dbg !13617
  %33 = load i32*, i32** %coefs.addr, align 8, !dbg !13617
  %arrayidx30 = getelementptr inbounds i32, i32* %33, i64 %idxprom29, !dbg !13617
  store i32 %mul28, i32* %arrayidx30, align 4, !dbg !13618
  br label %for.inc31, !dbg !13619

for.inc31:                                        ; preds = %for.body20
  %34 = load i32, i32* %i, align 4, !dbg !13620
  %inc32 = add nsw i32 %34, 1, !dbg !13620
  store i32 %inc32, i32* %i, align 4, !dbg !13620
  br label %for.cond18, !dbg !13622, !llvm.loop !13623

for.end33:                                        ; preds = %for.cond18
  br label %if.end, !dbg !13625

if.else34:                                        ; preds = %if.else
  %35 = load i32, i32* %s, align 4, !dbg !13626
  %add35 = add nsw i32 %35, 32, !dbg !13628
  store i32 %add35, i32* %s, align 4, !dbg !13629
  %36 = load i32, i32* %s, align 4, !dbg !13630
  %sub36 = sub nsw i32 %36, 1, !dbg !13631
  %shl37 = shl i32 1, %sub36, !dbg !13632
  store i32 %shl37, i32* %round, align 4, !dbg !13633
  store i32 0, i32* %i, align 4, !dbg !13634
  br label %for.cond38, !dbg !13636

for.cond38:                                       ; preds = %for.inc54, %if.else34
  %37 = load i32, i32* %i, align 4, !dbg !13637
  %38 = load i32, i32* %len.addr, align 4, !dbg !13640
  %cmp39 = icmp slt i32 %37, %38, !dbg !13641
  br i1 %cmp39, label %for.body41, label %for.end56, !dbg !13642

for.body41:                                       ; preds = %for.cond38
  %39 = load i32, i32* %i, align 4, !dbg !13643
  %idxprom42 = sext i32 %39 to i64, !dbg !13645
  %40 = load i32*, i32** %coefs.addr, align 8, !dbg !13645
  %arrayidx43 = getelementptr inbounds i32, i32* %40, i64 %idxprom42, !dbg !13645
  %41 = load i32, i32* %arrayidx43, align 4, !dbg !13645
  %conv44 = sext i32 %41 to i64, !dbg !13646
  %42 = load i32, i32* %c, align 4, !dbg !13647
  %conv45 = sext i32 %42 to i64, !dbg !13647
  %mul46 = mul nsw i64 %conv44, %conv45, !dbg !13648
  %43 = load i32, i32* %round, align 4, !dbg !13649
  %conv47 = zext i32 %43 to i64, !dbg !13649
  %add48 = add nsw i64 %mul46, %conv47, !dbg !13650
  %44 = load i32, i32* %s, align 4, !dbg !13651
  %sh_prom = zext i32 %44 to i64, !dbg !13652
  %shr49 = ashr i64 %add48, %sh_prom, !dbg !13652
  %conv50 = trunc i64 %shr49 to i32, !dbg !13653
  store i32 %conv50, i32* %out, align 4, !dbg !13654
  %45 = load i32, i32* %out, align 4, !dbg !13655
  %46 = load i32, i32* %ssign, align 4, !dbg !13656
  %mul51 = mul nsw i32 %45, %46, !dbg !13657
  %47 = load i32, i32* %i, align 4, !dbg !13658
  %idxprom52 = sext i32 %47 to i64, !dbg !13659
  %48 = load i32*, i32** %coefs.addr, align 8, !dbg !13659
  %arrayidx53 = getelementptr inbounds i32, i32* %48, i64 %idxprom52, !dbg !13659
  store i32 %mul51, i32* %arrayidx53, align 4, !dbg !13660
  br label %for.inc54, !dbg !13661

for.inc54:                                        ; preds = %for.body41
  %49 = load i32, i32* %i, align 4, !dbg !13662
  %inc55 = add nsw i32 %49, 1, !dbg !13662
  store i32 %inc55, i32* %i, align 4, !dbg !13662
  br label %for.cond38, !dbg !13664, !llvm.loop !13665

for.end56:                                        ; preds = %for.cond38
  br label %if.end

if.end:                                           ; preds = %for.end56, %for.end33
  br label %if.end57

if.end57:                                         ; preds = %if.end, %for.end
  ret void, !dbg !13667
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32* @DEC_SQUAD(i32* %dst, i32 %idx) #4 !dbg !13668 {
entry:
  %dst.addr = alloca i32*, align 8
  %idx.addr = alloca i32, align 4
  store i32* %dst, i32** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr, metadata !13671, metadata !2068), !dbg !13672
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !13673, metadata !2068), !dbg !13674
  %0 = load i32, i32* %idx.addr, align 4, !dbg !13675
  %and = and i32 %0, 3, !dbg !13676
  %sub = sub i32 %and, 1, !dbg !13677
  %1 = load i32*, i32** %dst.addr, align 8, !dbg !13678
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 0, !dbg !13678
  store i32 %sub, i32* %arrayidx, align 4, !dbg !13679
  %2 = load i32, i32* %idx.addr, align 4, !dbg !13680
  %shr = lshr i32 %2, 2, !dbg !13681
  %and1 = and i32 %shr, 3, !dbg !13682
  %sub2 = sub i32 %and1, 1, !dbg !13683
  %3 = load i32*, i32** %dst.addr, align 8, !dbg !13684
  %arrayidx3 = getelementptr inbounds i32, i32* %3, i64 1, !dbg !13684
  store i32 %sub2, i32* %arrayidx3, align 4, !dbg !13685
  %4 = load i32, i32* %idx.addr, align 4, !dbg !13686
  %shr4 = lshr i32 %4, 4, !dbg !13687
  %and5 = and i32 %shr4, 3, !dbg !13688
  %sub6 = sub i32 %and5, 1, !dbg !13689
  %5 = load i32*, i32** %dst.addr, align 8, !dbg !13690
  %arrayidx7 = getelementptr inbounds i32, i32* %5, i64 2, !dbg !13690
  store i32 %sub6, i32* %arrayidx7, align 4, !dbg !13691
  %6 = load i32, i32* %idx.addr, align 4, !dbg !13692
  %shr8 = lshr i32 %6, 6, !dbg !13693
  %and9 = and i32 %shr8, 3, !dbg !13694
  %sub10 = sub i32 %and9, 1, !dbg !13695
  %7 = load i32*, i32** %dst.addr, align 8, !dbg !13696
  %arrayidx11 = getelementptr inbounds i32, i32* %7, i64 3, !dbg !13696
  store i32 %sub10, i32* %arrayidx11, align 4, !dbg !13697
  %8 = load i32*, i32** %dst.addr, align 8, !dbg !13698
  %add.ptr = getelementptr inbounds i32, i32* %8, i64 4, !dbg !13699
  ret i32* %add.ptr, !dbg !13700
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32* @DEC_UQUAD(i32* %dst, i32 %idx, i32 %sign) #4 !dbg !13701 {
entry:
  %dst.addr = alloca i32*, align 8
  %idx.addr = alloca i32, align 4
  %sign.addr = alloca i32, align 4
  %nz = alloca i32, align 4
  store i32* %dst, i32** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr, metadata !13704, metadata !2068), !dbg !13705
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !13706, metadata !2068), !dbg !13707
  store i32 %sign, i32* %sign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.addr, metadata !13708, metadata !2068), !dbg !13709
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !13710, metadata !2068), !dbg !13711
  %0 = load i32, i32* %idx.addr, align 4, !dbg !13712
  %shr = lshr i32 %0, 12, !dbg !13713
  store i32 %shr, i32* %nz, align 4, !dbg !13711
  %1 = load i32, i32* %idx.addr, align 4, !dbg !13714
  %and = and i32 %1, 3, !dbg !13715
  %2 = load i32, i32* %sign.addr, align 4, !dbg !13716
  %shr1 = ashr i32 %2, 31, !dbg !13717
  %mul = mul nsw i32 %shr1, 2, !dbg !13718
  %add = add nsw i32 1, %mul, !dbg !13719
  %mul2 = mul i32 %and, %add, !dbg !13720
  %3 = load i32*, i32** %dst.addr, align 8, !dbg !13721
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 0, !dbg !13721
  store i32 %mul2, i32* %arrayidx, align 4, !dbg !13722
  %4 = load i32, i32* %nz, align 4, !dbg !13723
  %and3 = and i32 %4, 1, !dbg !13724
  %5 = load i32, i32* %sign.addr, align 4, !dbg !13725
  %shl = shl i32 %5, %and3, !dbg !13725
  store i32 %shl, i32* %sign.addr, align 4, !dbg !13725
  %6 = load i32, i32* %nz, align 4, !dbg !13726
  %shr4 = lshr i32 %6, 1, !dbg !13726
  store i32 %shr4, i32* %nz, align 4, !dbg !13726
  %7 = load i32, i32* %idx.addr, align 4, !dbg !13727
  %shr5 = lshr i32 %7, 2, !dbg !13728
  %and6 = and i32 %shr5, 3, !dbg !13729
  %8 = load i32, i32* %sign.addr, align 4, !dbg !13730
  %shr7 = ashr i32 %8, 31, !dbg !13731
  %mul8 = mul nsw i32 %shr7, 2, !dbg !13732
  %add9 = add nsw i32 1, %mul8, !dbg !13733
  %mul10 = mul i32 %and6, %add9, !dbg !13734
  %9 = load i32*, i32** %dst.addr, align 8, !dbg !13735
  %arrayidx11 = getelementptr inbounds i32, i32* %9, i64 1, !dbg !13735
  store i32 %mul10, i32* %arrayidx11, align 4, !dbg !13736
  %10 = load i32, i32* %nz, align 4, !dbg !13737
  %and12 = and i32 %10, 1, !dbg !13738
  %11 = load i32, i32* %sign.addr, align 4, !dbg !13739
  %shl13 = shl i32 %11, %and12, !dbg !13739
  store i32 %shl13, i32* %sign.addr, align 4, !dbg !13739
  %12 = load i32, i32* %nz, align 4, !dbg !13740
  %shr14 = lshr i32 %12, 1, !dbg !13740
  store i32 %shr14, i32* %nz, align 4, !dbg !13740
  %13 = load i32, i32* %idx.addr, align 4, !dbg !13741
  %shr15 = lshr i32 %13, 4, !dbg !13742
  %and16 = and i32 %shr15, 3, !dbg !13743
  %14 = load i32, i32* %sign.addr, align 4, !dbg !13744
  %shr17 = ashr i32 %14, 31, !dbg !13745
  %mul18 = mul nsw i32 %shr17, 2, !dbg !13746
  %add19 = add nsw i32 1, %mul18, !dbg !13747
  %mul20 = mul i32 %and16, %add19, !dbg !13748
  %15 = load i32*, i32** %dst.addr, align 8, !dbg !13749
  %arrayidx21 = getelementptr inbounds i32, i32* %15, i64 2, !dbg !13749
  store i32 %mul20, i32* %arrayidx21, align 4, !dbg !13750
  %16 = load i32, i32* %nz, align 4, !dbg !13751
  %and22 = and i32 %16, 1, !dbg !13752
  %17 = load i32, i32* %sign.addr, align 4, !dbg !13753
  %shl23 = shl i32 %17, %and22, !dbg !13753
  store i32 %shl23, i32* %sign.addr, align 4, !dbg !13753
  %18 = load i32, i32* %nz, align 4, !dbg !13754
  %shr24 = lshr i32 %18, 1, !dbg !13754
  store i32 %shr24, i32* %nz, align 4, !dbg !13754
  %19 = load i32, i32* %idx.addr, align 4, !dbg !13755
  %shr25 = lshr i32 %19, 6, !dbg !13756
  %and26 = and i32 %shr25, 3, !dbg !13757
  %20 = load i32, i32* %sign.addr, align 4, !dbg !13758
  %shr27 = ashr i32 %20, 31, !dbg !13759
  %mul28 = mul nsw i32 %shr27, 2, !dbg !13760
  %add29 = add nsw i32 1, %mul28, !dbg !13761
  %mul30 = mul i32 %and26, %add29, !dbg !13762
  %21 = load i32*, i32** %dst.addr, align 8, !dbg !13763
  %arrayidx31 = getelementptr inbounds i32, i32* %21, i64 3, !dbg !13763
  store i32 %mul30, i32* %arrayidx31, align 4, !dbg !13764
  %22 = load i32*, i32** %dst.addr, align 8, !dbg !13765
  %add.ptr = getelementptr inbounds i32, i32* %22, i64 4, !dbg !13766
  ret i32* %add.ptr, !dbg !13767
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32* @DEC_SPAIR(i32* %dst, i32 %idx) #4 !dbg !13768 {
entry:
  %dst.addr = alloca i32*, align 8
  %idx.addr = alloca i32, align 4
  store i32* %dst, i32** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr, metadata !13769, metadata !2068), !dbg !13770
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !13771, metadata !2068), !dbg !13772
  %0 = load i32, i32* %idx.addr, align 4, !dbg !13773
  %and = and i32 %0, 15, !dbg !13774
  %sub = sub i32 %and, 4, !dbg !13775
  %1 = load i32*, i32** %dst.addr, align 8, !dbg !13776
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 0, !dbg !13776
  store i32 %sub, i32* %arrayidx, align 4, !dbg !13777
  %2 = load i32, i32* %idx.addr, align 4, !dbg !13778
  %shr = lshr i32 %2, 4, !dbg !13779
  %and1 = and i32 %shr, 15, !dbg !13780
  %sub2 = sub i32 %and1, 4, !dbg !13781
  %3 = load i32*, i32** %dst.addr, align 8, !dbg !13782
  %arrayidx3 = getelementptr inbounds i32, i32* %3, i64 1, !dbg !13782
  store i32 %sub2, i32* %arrayidx3, align 4, !dbg !13783
  %4 = load i32*, i32** %dst.addr, align 8, !dbg !13784
  %add.ptr = getelementptr inbounds i32, i32* %4, i64 2, !dbg !13785
  ret i32* %add.ptr, !dbg !13786
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32* @DEC_UPAIR(i32* %dst, i32 %idx, i32 %sign) #4 !dbg !13787 {
entry:
  %dst.addr = alloca i32*, align 8
  %idx.addr = alloca i32, align 4
  %sign.addr = alloca i32, align 4
  store i32* %dst, i32** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr, metadata !13788, metadata !2068), !dbg !13789
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !13790, metadata !2068), !dbg !13791
  store i32 %sign, i32* %sign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.addr, metadata !13792, metadata !2068), !dbg !13793
  %0 = load i32, i32* %idx.addr, align 4, !dbg !13794
  %and = and i32 %0, 15, !dbg !13795
  %1 = load i32, i32* %sign.addr, align 4, !dbg !13796
  %and1 = and i32 %1, -2, !dbg !13797
  %sub = sub i32 1, %and1, !dbg !13798
  %mul = mul i32 %and, %sub, !dbg !13799
  %2 = load i32*, i32** %dst.addr, align 8, !dbg !13800
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 0, !dbg !13800
  store i32 %mul, i32* %arrayidx, align 4, !dbg !13801
  %3 = load i32, i32* %idx.addr, align 4, !dbg !13802
  %shr = lshr i32 %3, 4, !dbg !13803
  %and2 = and i32 %shr, 15, !dbg !13804
  %4 = load i32, i32* %sign.addr, align 4, !dbg !13805
  %and3 = and i32 %4, 1, !dbg !13806
  %mul4 = mul i32 %and3, 2, !dbg !13807
  %sub5 = sub i32 1, %mul4, !dbg !13808
  %mul6 = mul i32 %and2, %sub5, !dbg !13809
  %5 = load i32*, i32** %dst.addr, align 8, !dbg !13810
  %arrayidx7 = getelementptr inbounds i32, i32* %5, i64 1, !dbg !13810
  store i32 %mul6, i32* %arrayidx7, align 4, !dbg !13811
  %6 = load i32*, i32** %dst.addr, align 8, !dbg !13812
  %add.ptr = getelementptr inbounds i32, i32* %6, i64 2, !dbg !13813
  ret i32* %add.ptr, !dbg !13814
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @ff_sqrt(i32 %a) #7 !dbg !13815 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i32, align 4
  %b = alloca i32, align 4
  %s = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !13819, metadata !2068), !dbg !13820
  call void @llvm.dbg.declare(metadata i32* %b, metadata !13821, metadata !2068), !dbg !13822
  %0 = load i32, i32* %a.addr, align 4, !dbg !13823
  %cmp = icmp ult i32 %0, 255, !dbg !13825
  br i1 %cmp, label %if.then, label %if.else, !dbg !13826

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %a.addr, align 4, !dbg !13827
  %add = add i32 %1, 1, !dbg !13829
  %idxprom = zext i32 %add to i64, !dbg !13830
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom, !dbg !13830
  %2 = load i8, i8* %arrayidx, align 1, !dbg !13830
  %conv = zext i8 %2 to i32, !dbg !13830
  %sub = sub nsw i32 %conv, 1, !dbg !13831
  %shr = ashr i32 %sub, 4, !dbg !13832
  store i32 %shr, i32* %retval, align 4, !dbg !13833
  br label %return, !dbg !13833

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %a.addr, align 4, !dbg !13834
  %cmp1 = icmp ult i32 %3, 4096, !dbg !13836
  br i1 %cmp1, label %if.then3, label %if.else9, !dbg !13837

if.then3:                                         ; preds = %if.else
  %4 = load i32, i32* %a.addr, align 4, !dbg !13838
  %shr4 = lshr i32 %4, 4, !dbg !13840
  %idxprom5 = zext i32 %shr4 to i64, !dbg !13841
  %arrayidx6 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom5, !dbg !13841
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !13841
  %conv7 = zext i8 %5 to i32, !dbg !13841
  %shr8 = ashr i32 %conv7, 2, !dbg !13842
  store i32 %shr8, i32* %b, align 4, !dbg !13843
  br label %if.end45, !dbg !13844

if.else9:                                         ; preds = %if.else
  %6 = load i32, i32* %a.addr, align 4, !dbg !13845
  %cmp10 = icmp ult i32 %6, 16384, !dbg !13847
  br i1 %cmp10, label %if.then12, label %if.else18, !dbg !13848

if.then12:                                        ; preds = %if.else9
  %7 = load i32, i32* %a.addr, align 4, !dbg !13849
  %shr13 = lshr i32 %7, 6, !dbg !13851
  %idxprom14 = zext i32 %shr13 to i64, !dbg !13852
  %arrayidx15 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom14, !dbg !13852
  %8 = load i8, i8* %arrayidx15, align 1, !dbg !13852
  %conv16 = zext i8 %8 to i32, !dbg !13852
  %shr17 = ashr i32 %conv16, 1, !dbg !13853
  store i32 %shr17, i32* %b, align 4, !dbg !13854
  br label %if.end44, !dbg !13855

if.else18:                                        ; preds = %if.else9
  %9 = load i32, i32* %a.addr, align 4, !dbg !13856
  %cmp19 = icmp ult i32 %9, 65536, !dbg !13858
  br i1 %cmp19, label %if.then21, label %if.else26, !dbg !13859

if.then21:                                        ; preds = %if.else18
  %10 = load i32, i32* %a.addr, align 4, !dbg !13860
  %shr22 = lshr i32 %10, 8, !dbg !13862
  %idxprom23 = zext i32 %shr22 to i64, !dbg !13863
  %arrayidx24 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom23, !dbg !13863
  %11 = load i8, i8* %arrayidx24, align 1, !dbg !13863
  %conv25 = zext i8 %11 to i32, !dbg !13863
  store i32 %conv25, i32* %b, align 4, !dbg !13864
  br label %if.end, !dbg !13865

if.else26:                                        ; preds = %if.else18
  call void @llvm.dbg.declare(metadata i32* %s, metadata !13866, metadata !2068), !dbg !13868
  %12 = load i32, i32* %a.addr, align 4, !dbg !13869
  %shr27 = lshr i32 %12, 16, !dbg !13870
  %or = or i32 %shr27, 1, !dbg !13871
  %13 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !13872
  %sub28 = sub nsw i32 31, %13, !dbg !13873
  %shr29 = ashr i32 %sub28, 1, !dbg !13874
  store i32 %shr29, i32* %s, align 4, !dbg !13868
  call void @llvm.dbg.declare(metadata i32* %c, metadata !13875, metadata !2068), !dbg !13876
  %14 = load i32, i32* %a.addr, align 4, !dbg !13877
  %15 = load i32, i32* %s, align 4, !dbg !13878
  %add30 = add nsw i32 %15, 2, !dbg !13879
  %shr31 = lshr i32 %14, %add30, !dbg !13880
  store i32 %shr31, i32* %c, align 4, !dbg !13876
  %16 = load i32, i32* %c, align 4, !dbg !13881
  %17 = load i32, i32* %s, align 4, !dbg !13882
  %add32 = add nsw i32 %17, 8, !dbg !13883
  %shr33 = lshr i32 %16, %add32, !dbg !13884
  %idxprom34 = zext i32 %shr33 to i64, !dbg !13885
  %arrayidx35 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom34, !dbg !13885
  %18 = load i8, i8* %arrayidx35, align 1, !dbg !13885
  %conv36 = zext i8 %18 to i32, !dbg !13885
  store i32 %conv36, i32* %b, align 4, !dbg !13886
  %19 = load i32, i32* %c, align 4, !dbg !13887
  %conv37 = zext i32 %19 to i64, !dbg !13888
  %20 = load i32, i32* %b, align 4, !dbg !13889
  %idxprom38 = zext i32 %20 to i64, !dbg !13890
  %arrayidx39 = getelementptr inbounds [257 x i32], [257 x i32]* @ff_inverse, i64 0, i64 %idxprom38, !dbg !13890
  %21 = load i32, i32* %arrayidx39, align 4, !dbg !13890
  %conv40 = zext i32 %21 to i64, !dbg !13890
  %mul = mul i64 %conv37, %conv40, !dbg !13891
  %shr41 = lshr i64 %mul, 32, !dbg !13892
  %conv42 = trunc i64 %shr41 to i32, !dbg !13893
  %22 = load i32, i32* %b, align 4, !dbg !13894
  %23 = load i32, i32* %s, align 4, !dbg !13895
  %shl = shl i32 %22, %23, !dbg !13896
  %add43 = add i32 %conv42, %shl, !dbg !13897
  store i32 %add43, i32* %b, align 4, !dbg !13898
  br label %if.end

if.end:                                           ; preds = %if.else26, %if.then21
  br label %if.end44

if.end44:                                         ; preds = %if.end, %if.then12
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then3
  br label %if.end46

if.end46:                                         ; preds = %if.end45
  %24 = load i32, i32* %b, align 4, !dbg !13899
  %25 = load i32, i32* %a.addr, align 4, !dbg !13900
  %26 = load i32, i32* %b, align 4, !dbg !13901
  %27 = load i32, i32* %b, align 4, !dbg !13902
  %mul47 = mul i32 %26, %27, !dbg !13903
  %cmp48 = icmp ult i32 %25, %mul47, !dbg !13904
  %conv49 = zext i1 %cmp48 to i32, !dbg !13904
  %sub50 = sub i32 %24, %conv49, !dbg !13905
  store i32 %sub50, i32* %retval, align 4, !dbg !13906
  br label %return, !dbg !13906

return:                                           ; preds = %if.end46, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !13907
  ret i32 %28, !dbg !13907
}

; Function Attrs: nounwind uwtable
define internal void @reset_all_predictors(%struct.PredictorState* %ps) #1 !dbg !13908 {
entry:
  %ps.addr.i = alloca %struct.PredictorState*, align 8
  call void @llvm.dbg.declare(metadata %struct.PredictorState** %ps.addr.i, metadata !13911, metadata !2068), !dbg !13913
  %ps.addr = alloca %struct.PredictorState*, align 8
  %i = alloca i32, align 4
  store %struct.PredictorState* %ps, %struct.PredictorState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PredictorState** %ps.addr, metadata !13917, metadata !2068), !dbg !13918
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13919, metadata !2068), !dbg !13920
  store i32 0, i32* %i, align 4, !dbg !13921
  br label %for.cond, !dbg !13922

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13923
  %cmp = icmp slt i32 %0, 672, !dbg !13925
  br i1 %cmp, label %for.body, label %for.end, !dbg !13926

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !13927
  %idxprom = sext i32 %1 to i64, !dbg !13928
  %2 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr, align 8, !dbg !13928
  %arrayidx = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %2, i64 %idxprom, !dbg !13928
  store %struct.PredictorState* %arrayidx, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13929
  %3 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13930
  %r0.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %3, i32 0, i32 4, !dbg !13931
  %mant.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %r0.i, i32 0, i32 0, !dbg !13932
  store i32 0, i32* %mant.i, align 4, !dbg !13933
  %4 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13934
  %r01.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %4, i32 0, i32 4, !dbg !13935
  %exp.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %r01.i, i32 0, i32 1, !dbg !13936
  store i32 0, i32* %exp.i, align 4, !dbg !13937
  %5 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13938
  %r1.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %5, i32 0, i32 5, !dbg !13939
  %mant2.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %r1.i, i32 0, i32 0, !dbg !13940
  store i32 0, i32* %mant2.i, align 4, !dbg !13941
  %6 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13942
  %r13.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %6, i32 0, i32 5, !dbg !13943
  %exp4.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %r13.i, i32 0, i32 1, !dbg !13944
  store i32 0, i32* %exp4.i, align 4, !dbg !13945
  %7 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13946
  %cor0.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %7, i32 0, i32 0, !dbg !13947
  %mant5.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %cor0.i, i32 0, i32 0, !dbg !13948
  store i32 0, i32* %mant5.i, align 4, !dbg !13949
  %8 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13950
  %cor06.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %8, i32 0, i32 0, !dbg !13951
  %exp7.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %cor06.i, i32 0, i32 1, !dbg !13952
  store i32 0, i32* %exp7.i, align 4, !dbg !13953
  %9 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13954
  %cor1.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %9, i32 0, i32 1, !dbg !13955
  %mant8.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %cor1.i, i32 0, i32 0, !dbg !13956
  store i32 0, i32* %mant8.i, align 4, !dbg !13957
  %10 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13958
  %cor19.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %10, i32 0, i32 1, !dbg !13959
  %exp10.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %cor19.i, i32 0, i32 1, !dbg !13960
  store i32 0, i32* %exp10.i, align 4, !dbg !13961
  %11 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13962
  %var0.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %11, i32 0, i32 2, !dbg !13963
  %mant11.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var0.i, i32 0, i32 0, !dbg !13964
  store i32 536870912, i32* %mant11.i, align 4, !dbg !13965
  %12 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13966
  %var012.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %12, i32 0, i32 2, !dbg !13967
  %exp13.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var012.i, i32 0, i32 1, !dbg !13968
  store i32 1, i32* %exp13.i, align 4, !dbg !13969
  %13 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13970
  %var1.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %13, i32 0, i32 3, !dbg !13971
  %mant14.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var1.i, i32 0, i32 0, !dbg !13972
  store i32 536870912, i32* %mant14.i, align 4, !dbg !13973
  %14 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13974
  %var115.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %14, i32 0, i32 3, !dbg !13975
  %exp16.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var115.i, i32 0, i32 1, !dbg !13976
  store i32 1, i32* %exp16.i, align 4, !dbg !13977
  br label %for.inc, !dbg !13929

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !13978
  %inc = add nsw i32 %15, 1, !dbg !13978
  store i32 %inc, i32* %i, align 4, !dbg !13978
  br label %for.cond, !dbg !13980, !llvm.loop !13981

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13983
}

; Function Attrs: nounwind uwtable
define internal void @reset_predictor_group(%struct.PredictorState* %ps, i32 %group_num) #1 !dbg !13984 {
entry:
  %ps.addr.i = alloca %struct.PredictorState*, align 8
  call void @llvm.dbg.declare(metadata %struct.PredictorState** %ps.addr.i, metadata !13911, metadata !2068), !dbg !13987
  %ps.addr = alloca %struct.PredictorState*, align 8
  %group_num.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.PredictorState* %ps, %struct.PredictorState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PredictorState** %ps.addr, metadata !13991, metadata !2068), !dbg !13992
  store i32 %group_num, i32* %group_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group_num.addr, metadata !13993, metadata !2068), !dbg !13994
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13995, metadata !2068), !dbg !13996
  %0 = load i32, i32* %group_num.addr, align 4, !dbg !13997
  %sub = sub nsw i32 %0, 1, !dbg !13998
  store i32 %sub, i32* %i, align 4, !dbg !13999
  br label %for.cond, !dbg !14000

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !14001
  %cmp = icmp slt i32 %1, 672, !dbg !14003
  br i1 %cmp, label %for.body, label %for.end, !dbg !14004

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !14005
  %idxprom = sext i32 %2 to i64, !dbg !14006
  %3 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr, align 8, !dbg !14006
  %arrayidx = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %3, i64 %idxprom, !dbg !14006
  store %struct.PredictorState* %arrayidx, %struct.PredictorState** %ps.addr.i, align 8, !dbg !14007
  %4 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !14008
  %r0.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %4, i32 0, i32 4, !dbg !14009
  %mant.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %r0.i, i32 0, i32 0, !dbg !14010
  store i32 0, i32* %mant.i, align 4, !dbg !14011
  %5 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !14012
  %r01.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %5, i32 0, i32 4, !dbg !14013
  %exp.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %r01.i, i32 0, i32 1, !dbg !14014
  store i32 0, i32* %exp.i, align 4, !dbg !14015
  %6 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !14016
  %r1.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %6, i32 0, i32 5, !dbg !14017
  %mant2.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %r1.i, i32 0, i32 0, !dbg !14018
  store i32 0, i32* %mant2.i, align 4, !dbg !14019
  %7 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !14020
  %r13.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %7, i32 0, i32 5, !dbg !14021
  %exp4.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %r13.i, i32 0, i32 1, !dbg !14022
  store i32 0, i32* %exp4.i, align 4, !dbg !14023
  %8 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !14024
  %cor0.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %8, i32 0, i32 0, !dbg !14025
  %mant5.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %cor0.i, i32 0, i32 0, !dbg !14026
  store i32 0, i32* %mant5.i, align 4, !dbg !14027
  %9 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !14028
  %cor06.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %9, i32 0, i32 0, !dbg !14029
  %exp7.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %cor06.i, i32 0, i32 1, !dbg !14030
  store i32 0, i32* %exp7.i, align 4, !dbg !14031
  %10 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !14032
  %cor1.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %10, i32 0, i32 1, !dbg !14033
  %mant8.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %cor1.i, i32 0, i32 0, !dbg !14034
  store i32 0, i32* %mant8.i, align 4, !dbg !14035
  %11 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !14036
  %cor19.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %11, i32 0, i32 1, !dbg !14037
  %exp10.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %cor19.i, i32 0, i32 1, !dbg !14038
  store i32 0, i32* %exp10.i, align 4, !dbg !14039
  %12 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !14040
  %var0.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %12, i32 0, i32 2, !dbg !14041
  %mant11.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var0.i, i32 0, i32 0, !dbg !14042
  store i32 536870912, i32* %mant11.i, align 4, !dbg !14043
  %13 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !14044
  %var012.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %13, i32 0, i32 2, !dbg !14045
  %exp13.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var012.i, i32 0, i32 1, !dbg !14046
  store i32 1, i32* %exp13.i, align 4, !dbg !14047
  %14 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !14048
  %var1.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %14, i32 0, i32 3, !dbg !14049
  %mant14.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var1.i, i32 0, i32 0, !dbg !14050
  store i32 536870912, i32* %mant14.i, align 4, !dbg !14051
  %15 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !14052
  %var115.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %15, i32 0, i32 3, !dbg !14053
  %exp16.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %var115.i, i32 0, i32 1, !dbg !14054
  store i32 1, i32* %exp16.i, align 4, !dbg !14055
  br label %for.inc, !dbg !14007

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !14056
  %add = add nsw i32 %16, 30, !dbg !14056
  store i32 %add, i32* %i, align 4, !dbg !14056
  br label %for.cond, !dbg !14058, !llvm.loop !14059

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14061
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_mul_sf(i64 %a.coerce, i64 %b.coerce) #7 !dbg !14062 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %a = alloca %struct.SoftFloat, align 4
  %b = alloca %struct.SoftFloat, align 4
  %.compoundliteral = alloca %struct.SoftFloat, align 4
  %coerce = alloca %struct.SoftFloat, align 4
  %0 = bitcast %struct.SoftFloat* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  %1 = bitcast %struct.SoftFloat* %b to i64*
  store i64 %b.coerce, i64* %1, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a, metadata !14065, metadata !2068), !dbg !14066
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %b, metadata !14067, metadata !2068), !dbg !14068
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 1, !dbg !14069
  %2 = load i32, i32* %exp, align 4, !dbg !14069
  %exp1 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14070
  %3 = load i32, i32* %exp1, align 4, !dbg !14071
  %add = add nsw i32 %3, %2, !dbg !14071
  store i32 %add, i32* %exp1, align 4, !dbg !14071
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14072
  %4 = load i32, i32* %mant, align 4, !dbg !14072
  %conv = sext i32 %4 to i64, !dbg !14073
  %mant2 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 0, !dbg !14074
  %5 = load i32, i32* %mant2, align 4, !dbg !14074
  %conv3 = sext i32 %5 to i64, !dbg !14075
  %mul = mul nsw i64 %conv, %conv3, !dbg !14076
  %shr = ashr i64 %mul, 29, !dbg !14077
  %conv4 = trunc i64 %shr to i32, !dbg !14078
  %mant5 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14079
  store i32 %conv4, i32* %mant5, align 4, !dbg !14080
  %mant6 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 0, !dbg !14081
  %mant7 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14082
  %6 = load i32, i32* %mant7, align 4, !dbg !14082
  store i32 %6, i32* %mant6, align 4, !dbg !14081
  %exp8 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 1, !dbg !14081
  %exp9 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14083
  %7 = load i32, i32* %exp9, align 4, !dbg !14083
  %sub = sub nsw i32 %7, 1, !dbg !14084
  store i32 %sub, i32* %exp8, align 4, !dbg !14081
  %8 = bitcast %struct.SoftFloat* %.compoundliteral to i64*, !dbg !14085
  %9 = load i64, i64* %8, align 4, !dbg !14085
  %call = call i64 @av_normalize1_sf(i64 %9) #2, !dbg !14085
  %10 = bitcast %struct.SoftFloat* %coerce to i64*, !dbg !14085
  store i64 %call, i64* %10, align 4, !dbg !14085
  %11 = bitcast %struct.SoftFloat* %a to i8*, !dbg !14085
  %12 = bitcast %struct.SoftFloat* %coerce to i8*, !dbg !14085
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 4, i1 false), !dbg !14086
  %mant10 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14088
  %13 = load i32, i32* %mant10, align 4, !dbg !14088
  %tobool = icmp ne i32 %13, 0, !dbg !14090
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !14091

lor.lhs.false:                                    ; preds = %entry
  %exp11 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14092
  %14 = load i32, i32* %exp11, align 4, !dbg !14092
  %cmp = icmp slt i32 %14, -149, !dbg !14094
  br i1 %cmp, label %if.then, label %if.end, !dbg !14095

if.then:                                          ; preds = %lor.lhs.false, %entry
  %15 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !14096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* bitcast (%struct.SoftFloat* @FLOAT_0 to i8*), i64 8, i32 4, i1 false), !dbg !14096
  br label %return, !dbg !14097

if.end:                                           ; preds = %lor.lhs.false
  %16 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !14098
  %17 = bitcast %struct.SoftFloat* %a to i8*, !dbg !14098
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 4, i1 false), !dbg !14098
  br label %return, !dbg !14099

return:                                           ; preds = %if.end, %if.then
  %18 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14100
  %19 = load i64, i64* %18, align 4, !dbg !14100
  ret i64 %19, !dbg !14100
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_div_sf(i64 %a.coerce, i64 %b.coerce) #7 !dbg !14101 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %a = alloca %struct.SoftFloat, align 4
  %b = alloca %struct.SoftFloat, align 4
  %temp = alloca i64, align 8
  %coerce = alloca %struct.SoftFloat, align 4
  %0 = bitcast %struct.SoftFloat* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  %1 = bitcast %struct.SoftFloat* %b to i64*
  store i64 %b.coerce, i64* %1, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a, metadata !14102, metadata !2068), !dbg !14103
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %b, metadata !14104, metadata !2068), !dbg !14105
  call void @llvm.dbg.declare(metadata i64* %temp, metadata !14106, metadata !2068), !dbg !14107
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14108
  %2 = load i32, i32* %mant, align 4, !dbg !14108
  %conv = sext i32 %2 to i64, !dbg !14109
  %mul = mul nsw i64 %conv, 1073741824, !dbg !14110
  store i64 %mul, i64* %temp, align 8, !dbg !14107
  %mant1 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 0, !dbg !14111
  %3 = load i32, i32* %mant1, align 4, !dbg !14111
  %conv2 = sext i32 %3 to i64, !dbg !14112
  %4 = load i64, i64* %temp, align 8, !dbg !14113
  %div = sdiv i64 %4, %conv2, !dbg !14113
  store i64 %div, i64* %temp, align 8, !dbg !14113
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 1, !dbg !14114
  %5 = load i32, i32* %exp, align 4, !dbg !14114
  %exp3 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14115
  %6 = load i32, i32* %exp3, align 4, !dbg !14116
  %sub = sub nsw i32 %6, %5, !dbg !14116
  store i32 %sub, i32* %exp3, align 4, !dbg !14116
  %7 = load i64, i64* %temp, align 8, !dbg !14117
  %conv4 = trunc i64 %7 to i32, !dbg !14117
  %mant5 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14118
  store i32 %conv4, i32* %mant5, align 4, !dbg !14119
  br label %while.cond, !dbg !14120

while.cond:                                       ; preds = %while.body, %entry
  %mant6 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14121
  %8 = load i32, i32* %mant6, align 4, !dbg !14121
  %conv7 = sext i32 %8 to i64, !dbg !14123
  %9 = load i64, i64* %temp, align 8, !dbg !14124
  %cmp = icmp ne i64 %conv7, %9, !dbg !14125
  br i1 %cmp, label %while.body, label %while.end, !dbg !14126

while.body:                                       ; preds = %while.cond
  %10 = load i64, i64* %temp, align 8, !dbg !14127
  %div9 = sdiv i64 %10, 2, !dbg !14127
  store i64 %div9, i64* %temp, align 8, !dbg !14127
  %exp10 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14129
  %11 = load i32, i32* %exp10, align 4, !dbg !14130
  %dec = add nsw i32 %11, -1, !dbg !14130
  store i32 %dec, i32* %exp10, align 4, !dbg !14130
  %12 = load i64, i64* %temp, align 8, !dbg !14131
  %conv11 = trunc i64 %12 to i32, !dbg !14131
  %mant12 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14132
  store i32 %conv11, i32* %mant12, align 4, !dbg !14133
  br label %while.cond, !dbg !14134, !llvm.loop !14136

while.end:                                        ; preds = %while.cond
  %13 = bitcast %struct.SoftFloat* %a to i64*, !dbg !14137
  %14 = load i64, i64* %13, align 4, !dbg !14137
  %call = call i64 @av_normalize1_sf(i64 %14) #2, !dbg !14137
  %15 = bitcast %struct.SoftFloat* %coerce to i64*, !dbg !14137
  store i64 %call, i64* %15, align 4, !dbg !14137
  %16 = bitcast %struct.SoftFloat* %a to i8*, !dbg !14137
  %17 = bitcast %struct.SoftFloat* %coerce to i8*, !dbg !14137
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 4, i1 false), !dbg !14138
  %mant13 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14139
  %18 = load i32, i32* %mant13, align 4, !dbg !14139
  %tobool = icmp ne i32 %18, 0, !dbg !14141
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !14142

lor.lhs.false:                                    ; preds = %while.end
  %exp14 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14143
  %19 = load i32, i32* %exp14, align 4, !dbg !14143
  %cmp15 = icmp slt i32 %19, -149, !dbg !14145
  br i1 %cmp15, label %if.then, label %if.end, !dbg !14146

if.then:                                          ; preds = %lor.lhs.false, %while.end
  %20 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !14147
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* bitcast (%struct.SoftFloat* @FLOAT_0 to i8*), i64 8, i32 4, i1 false), !dbg !14147
  br label %return, !dbg !14148

if.end:                                           ; preds = %lor.lhs.false
  %21 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !14149
  %22 = bitcast %struct.SoftFloat* %a to i8*, !dbg !14149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false), !dbg !14149
  br label %return, !dbg !14150

return:                                           ; preds = %if.end, %if.then
  %23 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14151
  %24 = load i64, i64* %23, align 4, !dbg !14151
  ret i64 %24, !dbg !14151
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_add_sf(i64 %a.coerce, i64 %b.coerce) #7 !dbg !14152 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %a = alloca %struct.SoftFloat, align 4
  %b = alloca %struct.SoftFloat, align 4
  %t = alloca i32, align 4
  %agg.tmp = alloca %struct.SoftFloat, align 4
  %.compoundliteral = alloca %struct.SoftFloat, align 4
  %agg.tmp13 = alloca %struct.SoftFloat, align 4
  %.compoundliteral14 = alloca %struct.SoftFloat, align 4
  %0 = bitcast %struct.SoftFloat* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  %1 = bitcast %struct.SoftFloat* %b to i64*
  store i64 %b.coerce, i64* %1, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a, metadata !14153, metadata !2068), !dbg !14154
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %b, metadata !14155, metadata !2068), !dbg !14156
  call void @llvm.dbg.declare(metadata i32* %t, metadata !14157, metadata !2068), !dbg !14158
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14159
  %2 = load i32, i32* %exp, align 4, !dbg !14159
  %exp1 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 1, !dbg !14160
  %3 = load i32, i32* %exp1, align 4, !dbg !14160
  %sub = sub nsw i32 %2, %3, !dbg !14161
  store i32 %sub, i32* %t, align 4, !dbg !14158
  %4 = load i32, i32* %t, align 4, !dbg !14162
  %cmp = icmp slt i32 %4, -31, !dbg !14164
  br i1 %cmp, label %if.then, label %if.else, !dbg !14165

if.then:                                          ; preds = %entry
  %5 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !14166
  %6 = bitcast %struct.SoftFloat* %b to i8*, !dbg !14166
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 4, i1 false), !dbg !14166
  br label %return, !dbg !14168

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %t, align 4, !dbg !14169
  %cmp2 = icmp slt i32 %7, 0, !dbg !14171
  br i1 %cmp2, label %if.then3, label %if.else10, !dbg !14172

if.then3:                                         ; preds = %if.else
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 0, !dbg !14173
  %mant4 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 0, !dbg !14175
  %8 = load i32, i32* %mant4, align 4, !dbg !14175
  %mant5 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14176
  %9 = load i32, i32* %mant5, align 4, !dbg !14176
  %10 = load i32, i32* %t, align 4, !dbg !14177
  %sub6 = sub nsw i32 0, %10, !dbg !14178
  %shr = ashr i32 %9, %sub6, !dbg !14179
  %add = add nsw i32 %8, %shr, !dbg !14180
  store i32 %add, i32* %mant, align 4, !dbg !14173
  %exp7 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 1, !dbg !14173
  %exp8 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 1, !dbg !14181
  %11 = load i32, i32* %exp8, align 4, !dbg !14181
  store i32 %11, i32* %exp7, align 4, !dbg !14173
  %12 = bitcast %struct.SoftFloat* %.compoundliteral to i64*, !dbg !14182
  %13 = load i64, i64* %12, align 4, !dbg !14182
  %call = call i64 @av_normalize1_sf(i64 %13) #2, !dbg !14182
  %14 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !14182
  store i64 %call, i64* %14, align 4, !dbg !14182
  %15 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !14183
  %16 = load i64, i64* %15, align 4, !dbg !14183
  %call9 = call i64 @av_normalize_sf(i64 %16) #2, !dbg !14184
  %17 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14183
  store i64 %call9, i64* %17, align 4, !dbg !14183
  br label %return, !dbg !14186

if.else10:                                        ; preds = %if.else
  %18 = load i32, i32* %t, align 4, !dbg !14187
  %cmp11 = icmp slt i32 %18, 32, !dbg !14189
  br i1 %cmp11, label %if.then12, label %if.else24, !dbg !14190

if.then12:                                        ; preds = %if.else10
  %mant15 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral14, i32 0, i32 0, !dbg !14191
  %mant16 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14193
  %19 = load i32, i32* %mant16, align 4, !dbg !14193
  %mant17 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 0, !dbg !14194
  %20 = load i32, i32* %mant17, align 4, !dbg !14194
  %21 = load i32, i32* %t, align 4, !dbg !14195
  %shr18 = ashr i32 %20, %21, !dbg !14196
  %add19 = add nsw i32 %19, %shr18, !dbg !14197
  store i32 %add19, i32* %mant15, align 4, !dbg !14191
  %exp20 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral14, i32 0, i32 1, !dbg !14191
  %exp21 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14198
  %22 = load i32, i32* %exp21, align 4, !dbg !14198
  store i32 %22, i32* %exp20, align 4, !dbg !14191
  %23 = bitcast %struct.SoftFloat* %.compoundliteral14 to i64*, !dbg !14199
  %24 = load i64, i64* %23, align 4, !dbg !14199
  %call22 = call i64 @av_normalize1_sf(i64 %24) #2, !dbg !14199
  %25 = bitcast %struct.SoftFloat* %agg.tmp13 to i64*, !dbg !14199
  store i64 %call22, i64* %25, align 4, !dbg !14199
  %26 = bitcast %struct.SoftFloat* %agg.tmp13 to i64*, !dbg !14200
  %27 = load i64, i64* %26, align 4, !dbg !14200
  %call23 = call i64 @av_normalize_sf(i64 %27) #2, !dbg !14201
  %28 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14200
  store i64 %call23, i64* %28, align 4, !dbg !14200
  br label %return, !dbg !14203

if.else24:                                        ; preds = %if.else10
  %29 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !14204
  %30 = bitcast %struct.SoftFloat* %a to i8*, !dbg !14204
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 4, i1 false), !dbg !14204
  br label %return, !dbg !14205

return:                                           ; preds = %if.else24, %if.then12, %if.then3, %if.then
  %31 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14206
  %32 = load i64, i64* %31, align 4, !dbg !14206
  ret i64 %32, !dbg !14206
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_int2sf(i32 %v, i32 %frac_bits) #7 !dbg !14207 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %v.addr = alloca i32, align 4
  %frac_bits.addr = alloca i32, align 4
  %exp_offset = alloca i32, align 4
  %agg.tmp = alloca %struct.SoftFloat, align 4
  %.compoundliteral = alloca %struct.SoftFloat, align 4
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !14210, metadata !2068), !dbg !14211
  store i32 %frac_bits, i32* %frac_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frac_bits.addr, metadata !14212, metadata !2068), !dbg !14213
  call void @llvm.dbg.declare(metadata i32* %exp_offset, metadata !14214, metadata !2068), !dbg !14215
  store i32 0, i32* %exp_offset, align 4, !dbg !14215
  %0 = load i32, i32* %v.addr, align 4, !dbg !14216
  %cmp = icmp sle i32 %0, -2147483647, !dbg !14218
  br i1 %cmp, label %if.then, label %if.end, !dbg !14219

if.then:                                          ; preds = %entry
  store i32 1, i32* %exp_offset, align 4, !dbg !14220
  %1 = load i32, i32* %v.addr, align 4, !dbg !14222
  %shr = ashr i32 %1, 1, !dbg !14222
  store i32 %shr, i32* %v.addr, align 4, !dbg !14222
  br label %if.end, !dbg !14223

if.end:                                           ; preds = %if.then, %entry
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 0, !dbg !14224
  %2 = load i32, i32* %v.addr, align 4, !dbg !14225
  store i32 %2, i32* %mant, align 4, !dbg !14224
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 1, !dbg !14224
  %3 = load i32, i32* %frac_bits.addr, align 4, !dbg !14226
  %sub = sub nsw i32 30, %3, !dbg !14227
  %4 = load i32, i32* %exp_offset, align 4, !dbg !14228
  %add = add nsw i32 %sub, %4, !dbg !14229
  store i32 %add, i32* %exp, align 4, !dbg !14224
  %5 = bitcast %struct.SoftFloat* %.compoundliteral to i64*, !dbg !14230
  %6 = load i64, i64* %5, align 4, !dbg !14230
  %call = call i64 @av_normalize1_sf(i64 %6) #2, !dbg !14230
  %7 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !14230
  store i64 %call, i64* %7, align 4, !dbg !14230
  %8 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !14231
  %9 = load i64, i64* %8, align 4, !dbg !14231
  %call1 = call i64 @av_normalize_sf(i64 %9) #2, !dbg !14232
  %10 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14231
  store i64 %call1, i64* %10, align 4, !dbg !14231
  %11 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14234
  %12 = load i64, i64* %11, align 4, !dbg !14234
  ret i64 %12, !dbg !14234
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_sub_sf(i64 %a.coerce, i64 %b.coerce) #7 !dbg !14235 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %a = alloca %struct.SoftFloat, align 4
  %b = alloca %struct.SoftFloat, align 4
  %.compoundliteral = alloca %struct.SoftFloat, align 4
  %0 = bitcast %struct.SoftFloat* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  %1 = bitcast %struct.SoftFloat* %b to i64*
  store i64 %b.coerce, i64* %1, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a, metadata !14236, metadata !2068), !dbg !14237
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %b, metadata !14238, metadata !2068), !dbg !14239
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 0, !dbg !14240
  %mant1 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 0, !dbg !14241
  %2 = load i32, i32* %mant1, align 4, !dbg !14241
  %sub = sub nsw i32 0, %2, !dbg !14242
  store i32 %sub, i32* %mant, align 4, !dbg !14240
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 1, !dbg !14240
  %exp2 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 1, !dbg !14243
  %3 = load i32, i32* %exp2, align 4, !dbg !14243
  store i32 %3, i32* %exp, align 4, !dbg !14240
  %4 = bitcast %struct.SoftFloat* %a to i64*, !dbg !14244
  %5 = load i64, i64* %4, align 4, !dbg !14244
  %6 = bitcast %struct.SoftFloat* %.compoundliteral to i64*, !dbg !14244
  %7 = load i64, i64* %6, align 4, !dbg !14244
  %call = call i64 @av_add_sf(i64 %5, i64 %7) #2, !dbg !14244
  %8 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14244
  store i64 %call, i64* %8, align 4, !dbg !14244
  %9 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14245
  %10 = load i64, i64* %9, align 4, !dbg !14245
  ret i64 %10, !dbg !14245
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_normalize1_sf(i64 %a.coerce) #7 !dbg !14246 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %a = alloca %struct.SoftFloat, align 4
  %0 = bitcast %struct.SoftFloat* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a, metadata !14247, metadata !2068), !dbg !14248
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14249
  %1 = load i32, i32* %mant, align 4, !dbg !14249
  %add = add i32 %1, 1073741824, !dbg !14251
  %cmp = icmp sle i32 %add, 0, !dbg !14252
  br i1 %cmp, label %if.then, label %if.end, !dbg !14253

if.then:                                          ; preds = %entry
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14254
  %2 = load i32, i32* %exp, align 4, !dbg !14256
  %inc = add nsw i32 %2, 1, !dbg !14256
  store i32 %inc, i32* %exp, align 4, !dbg !14256
  %mant1 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14257
  %3 = load i32, i32* %mant1, align 4, !dbg !14258
  %shr = ashr i32 %3, 1, !dbg !14258
  store i32 %shr, i32* %mant1, align 4, !dbg !14258
  br label %if.end, !dbg !14259

if.end:                                           ; preds = %if.then, %entry
  %4 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !14260
  %5 = bitcast %struct.SoftFloat* %a to i8*, !dbg !14260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 8, i32 4, i1 false), !dbg !14260
  %6 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14261
  %7 = load i64, i64* %6, align 4, !dbg !14261
  ret i64 %7, !dbg !14261
}

; Function Attrs: nounwind readnone uwtable
define internal i64 @av_normalize_sf(i64 %a.coerce) #8 !dbg !14262 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %a = alloca %struct.SoftFloat, align 4
  %0 = bitcast %struct.SoftFloat* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a, metadata !14263, metadata !2068), !dbg !14264
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14265
  %1 = load i32, i32* %mant, align 4, !dbg !14265
  %tobool = icmp ne i32 %1, 0, !dbg !14267
  br i1 %tobool, label %if.then, label %if.else, !dbg !14268

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !14269

while.cond:                                       ; preds = %while.body, %if.then
  %mant1 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14271
  %2 = load i32, i32* %mant1, align 4, !dbg !14271
  %add = add i32 %2, 536870911, !dbg !14273
  %cmp = icmp ult i32 %add, 1073741823, !dbg !14274
  br i1 %cmp, label %while.body, label %while.end, !dbg !14275

while.body:                                       ; preds = %while.cond
  %mant2 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14276
  %3 = load i32, i32* %mant2, align 4, !dbg !14276
  %mant3 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14278
  %4 = load i32, i32* %mant3, align 4, !dbg !14279
  %add4 = add nsw i32 %4, %3, !dbg !14279
  store i32 %add4, i32* %mant3, align 4, !dbg !14279
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14280
  %5 = load i32, i32* %exp, align 4, !dbg !14281
  %sub = sub nsw i32 %5, 1, !dbg !14281
  store i32 %sub, i32* %exp, align 4, !dbg !14281
  br label %while.cond, !dbg !14282, !llvm.loop !14284

while.end:                                        ; preds = %while.cond
  %exp5 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14285
  %6 = load i32, i32* %exp5, align 4, !dbg !14285
  %cmp6 = icmp slt i32 %6, -149, !dbg !14287
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !14288

if.then7:                                         ; preds = %while.end
  %exp8 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14289
  store i32 -149, i32* %exp8, align 4, !dbg !14291
  %mant9 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14292
  store i32 0, i32* %mant9, align 4, !dbg !14293
  br label %if.end, !dbg !14294

if.end:                                           ; preds = %if.then7, %while.end
  br label %if.end11, !dbg !14295

if.else:                                          ; preds = %entry
  %exp10 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14296
  store i32 -149, i32* %exp10, align 4, !dbg !14298
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.end
  %7 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !14299
  %8 = bitcast %struct.SoftFloat* %a to i8*, !dbg !14299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 4, i1 false), !dbg !14299
  %9 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14300
  %10 = load i64, i64* %9, align 4, !dbg !14300
  ret i64 %10, !dbg !14300
}

; Function Attrs: nounwind uwtable
define internal void @decode_mid_side_stereo(%struct.ChannelElement* %cpe, %struct.GetBitContext* %gb, i32 %ms_present) #1 !dbg !14301 {
entry:
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ms_present.addr = alloca i32, align 4
  %idx = alloca i32, align 4
  %max_idx = alloca i32, align 4
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !14304, metadata !2068), !dbg !14305
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !14306, metadata !2068), !dbg !14307
  store i32 %ms_present, i32* %ms_present.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ms_present.addr, metadata !14308, metadata !2068), !dbg !14309
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !14310, metadata !2068), !dbg !14311
  call void @llvm.dbg.declare(metadata i32* %max_idx, metadata !14312, metadata !2068), !dbg !14313
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14314
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !14315
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !14314
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx, i32 0, i32 0, !dbg !14316
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 3, !dbg !14317
  %1 = load i32, i32* %num_window_groups, align 16, !dbg !14317
  %2 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14318
  %ch1 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %2, i32 0, i32 7, !dbg !14319
  %arrayidx2 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch1, i64 0, i64 0, !dbg !14318
  %ics3 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx2, i32 0, i32 0, !dbg !14320
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3, i32 0, i32 0, !dbg !14321
  %3 = load i8, i8* %max_sfb, align 32, !dbg !14321
  %conv = zext i8 %3 to i32, !dbg !14318
  %mul = mul nsw i32 %1, %conv, !dbg !14322
  store i32 %mul, i32* %max_idx, align 4, !dbg !14313
  %4 = load i32, i32* %ms_present.addr, align 4, !dbg !14323
  %cmp = icmp eq i32 %4, 1, !dbg !14325
  br i1 %cmp, label %if.then, label %if.else, !dbg !14326

if.then:                                          ; preds = %entry
  store i32 0, i32* %idx, align 4, !dbg !14327
  br label %for.cond, !dbg !14330

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %idx, align 4, !dbg !14331
  %6 = load i32, i32* %max_idx, align 4, !dbg !14334
  %cmp5 = icmp slt i32 %5, %6, !dbg !14335
  br i1 %cmp5, label %for.body, label %for.end, !dbg !14336

for.body:                                         ; preds = %for.cond
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14337
  %call = call i32 @get_bits1(%struct.GetBitContext* %7), !dbg !14338
  %conv7 = trunc i32 %call to i8, !dbg !14338
  %8 = load i32, i32* %idx, align 4, !dbg !14339
  %idxprom = sext i32 %8 to i64, !dbg !14340
  %9 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14340
  %ms_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %9, i32 0, i32 4, !dbg !14341
  %arrayidx8 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask, i64 0, i64 %idxprom, !dbg !14340
  store i8 %conv7, i8* %arrayidx8, align 1, !dbg !14342
  br label %for.inc, !dbg !14340

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %idx, align 4, !dbg !14343
  %inc = add nsw i32 %10, 1, !dbg !14343
  store i32 %inc, i32* %idx, align 4, !dbg !14343
  br label %for.cond, !dbg !14345, !llvm.loop !14346

for.end:                                          ; preds = %for.cond
  br label %if.end15, !dbg !14348

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %ms_present.addr, align 4, !dbg !14349
  %cmp9 = icmp eq i32 %11, 2, !dbg !14352
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !14349

if.then11:                                        ; preds = %if.else
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14353
  %ms_mask12 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %12, i32 0, i32 4, !dbg !14355
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask12, i32 0, i32 0, !dbg !14356
  %13 = load i32, i32* %max_idx, align 4, !dbg !14357
  %conv13 = sext i32 %13 to i64, !dbg !14357
  %mul14 = mul i64 %conv13, 1, !dbg !14358
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 1, i64 %mul14, i32 1, i1 false), !dbg !14356
  br label %if.end, !dbg !14359

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %for.end
  ret void, !dbg !14360
}

; Function Attrs: nounwind uwtable
define internal void @apply_mid_side_stereo(%struct.AACContext* %ac, %struct.ChannelElement* %cpe) #1 !dbg !14361 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %ch0 = alloca i32*, align 8
  %ch1 = alloca i32*, align 8
  %g = alloca i32, align 4
  %i = alloca i32, align 4
  %group = alloca i32, align 4
  %idx = alloca i32, align 4
  %offsets = alloca i16*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !14364, metadata !2068), !dbg !14365
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !14366, metadata !2068), !dbg !14367
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !14368, metadata !2068), !dbg !14369
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14370
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !14371
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !14370
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx, i32 0, i32 0, !dbg !14372
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !14369
  call void @llvm.dbg.declare(metadata i32** %ch0, metadata !14373, metadata !2068), !dbg !14374
  %1 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14375
  %ch2 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %1, i32 0, i32 7, !dbg !14376
  %arrayidx3 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch2, i64 0, i64 0, !dbg !14375
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx3, i32 0, i32 14, !dbg !14377
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs, i32 0, i32 0, !dbg !14375
  store i32* %arraydecay, i32** %ch0, align 8, !dbg !14374
  call void @llvm.dbg.declare(metadata i32** %ch1, metadata !14378, metadata !2068), !dbg !14379
  %2 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14380
  %ch4 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %2, i32 0, i32 7, !dbg !14381
  %arrayidx5 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch4, i64 0, i64 1, !dbg !14380
  %coeffs6 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx5, i32 0, i32 14, !dbg !14382
  %arraydecay7 = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs6, i32 0, i32 0, !dbg !14380
  store i32* %arraydecay7, i32** %ch1, align 8, !dbg !14379
  call void @llvm.dbg.declare(metadata i32* %g, metadata !14383, metadata !2068), !dbg !14384
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14385, metadata !2068), !dbg !14386
  call void @llvm.dbg.declare(metadata i32* %group, metadata !14387, metadata !2068), !dbg !14388
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !14389, metadata !2068), !dbg !14390
  store i32 0, i32* %idx, align 4, !dbg !14390
  call void @llvm.dbg.declare(metadata i16** %offsets, metadata !14391, metadata !2068), !dbg !14392
  %3 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14393
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %3, i32 0, i32 6, !dbg !14394
  %4 = load i16*, i16** %swb_offset, align 8, !dbg !14394
  store i16* %4, i16** %offsets, align 8, !dbg !14392
  store i32 0, i32* %g, align 4, !dbg !14395
  br label %for.cond, !dbg !14397

for.cond:                                         ; preds = %for.inc72, %entry
  %5 = load i32, i32* %g, align 4, !dbg !14398
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14401
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 3, !dbg !14402
  %7 = load i32, i32* %num_window_groups, align 8, !dbg !14402
  %cmp = icmp slt i32 %5, %7, !dbg !14403
  br i1 %cmp, label %for.body, label %for.end74, !dbg !14404

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !14405
  br label %for.cond8, !dbg !14408

for.cond8:                                        ; preds = %for.inc54, %for.body
  %8 = load i32, i32* %i, align 4, !dbg !14409
  %9 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14412
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %9, i32 0, i32 0, !dbg !14413
  %10 = load i8, i8* %max_sfb, align 8, !dbg !14413
  %conv = zext i8 %10 to i32, !dbg !14412
  %cmp9 = icmp slt i32 %8, %conv, !dbg !14414
  br i1 %cmp9, label %for.body11, label %for.end57, !dbg !14415

for.body11:                                       ; preds = %for.cond8
  %11 = load i32, i32* %idx, align 4, !dbg !14416
  %idxprom = sext i32 %11 to i64, !dbg !14419
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14419
  %ms_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %12, i32 0, i32 4, !dbg !14420
  %arrayidx12 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask, i64 0, i64 %idxprom, !dbg !14419
  %13 = load i8, i8* %arrayidx12, align 1, !dbg !14419
  %conv13 = zext i8 %13 to i32, !dbg !14419
  %tobool = icmp ne i32 %conv13, 0, !dbg !14419
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !14421

land.lhs.true:                                    ; preds = %for.body11
  %14 = load i32, i32* %idx, align 4, !dbg !14422
  %idxprom14 = sext i32 %14 to i64, !dbg !14423
  %15 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14423
  %ch15 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %15, i32 0, i32 7, !dbg !14424
  %arrayidx16 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch15, i64 0, i64 0, !dbg !14423
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx16, i32 0, i32 3, !dbg !14425
  %arrayidx17 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom14, !dbg !14423
  %16 = load i32, i32* %arrayidx17, align 4, !dbg !14423
  %cmp18 = icmp ult i32 %16, 13, !dbg !14426
  br i1 %cmp18, label %land.lhs.true20, label %if.end, !dbg !14427

land.lhs.true20:                                  ; preds = %land.lhs.true
  %17 = load i32, i32* %idx, align 4, !dbg !14428
  %idxprom21 = sext i32 %17 to i64, !dbg !14429
  %18 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14429
  %ch22 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %18, i32 0, i32 7, !dbg !14430
  %arrayidx23 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch22, i64 0, i64 1, !dbg !14429
  %band_type24 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx23, i32 0, i32 3, !dbg !14431
  %arrayidx25 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type24, i64 0, i64 %idxprom21, !dbg !14429
  %19 = load i32, i32* %arrayidx25, align 4, !dbg !14429
  %cmp26 = icmp ult i32 %19, 13, !dbg !14432
  br i1 %cmp26, label %if.then, label %if.end, !dbg !14433

if.then:                                          ; preds = %land.lhs.true20
  store i32 0, i32* %group, align 4, !dbg !14435
  br label %for.cond28, !dbg !14438

for.cond28:                                       ; preds = %for.inc, %if.then
  %20 = load i32, i32* %group, align 4, !dbg !14439
  %21 = load i32, i32* %g, align 4, !dbg !14442
  %idxprom29 = sext i32 %21 to i64, !dbg !14443
  %22 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14443
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %22, i32 0, i32 4, !dbg !14444
  %arrayidx30 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom29, !dbg !14443
  %23 = load i8, i8* %arrayidx30, align 1, !dbg !14443
  %conv31 = zext i8 %23 to i32, !dbg !14443
  %cmp32 = icmp slt i32 %20, %conv31, !dbg !14445
  br i1 %cmp32, label %for.body34, label %for.end, !dbg !14446

for.body34:                                       ; preds = %for.cond28
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14447
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 14, !dbg !14449
  %25 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp, align 32, !dbg !14449
  %butterflies_fixed = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %25, i32 0, i32 6, !dbg !14450
  %26 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** %butterflies_fixed, align 8, !dbg !14450
  %27 = load i32*, i32** %ch0, align 8, !dbg !14451
  %28 = load i32, i32* %group, align 4, !dbg !14452
  %mul = mul nsw i32 %28, 128, !dbg !14453
  %idx.ext = sext i32 %mul to i64, !dbg !14454
  %add.ptr = getelementptr inbounds i32, i32* %27, i64 %idx.ext, !dbg !14454
  %29 = load i32, i32* %i, align 4, !dbg !14455
  %idxprom35 = sext i32 %29 to i64, !dbg !14456
  %30 = load i16*, i16** %offsets, align 8, !dbg !14456
  %arrayidx36 = getelementptr inbounds i16, i16* %30, i64 %idxprom35, !dbg !14456
  %31 = load i16, i16* %arrayidx36, align 2, !dbg !14456
  %conv37 = zext i16 %31 to i32, !dbg !14456
  %idx.ext38 = sext i32 %conv37 to i64, !dbg !14457
  %add.ptr39 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext38, !dbg !14457
  %32 = load i32*, i32** %ch1, align 8, !dbg !14458
  %33 = load i32, i32* %group, align 4, !dbg !14459
  %mul40 = mul nsw i32 %33, 128, !dbg !14460
  %idx.ext41 = sext i32 %mul40 to i64, !dbg !14461
  %add.ptr42 = getelementptr inbounds i32, i32* %32, i64 %idx.ext41, !dbg !14461
  %34 = load i32, i32* %i, align 4, !dbg !14462
  %idxprom43 = sext i32 %34 to i64, !dbg !14463
  %35 = load i16*, i16** %offsets, align 8, !dbg !14463
  %arrayidx44 = getelementptr inbounds i16, i16* %35, i64 %idxprom43, !dbg !14463
  %36 = load i16, i16* %arrayidx44, align 2, !dbg !14463
  %conv45 = zext i16 %36 to i32, !dbg !14463
  %idx.ext46 = sext i32 %conv45 to i64, !dbg !14464
  %add.ptr47 = getelementptr inbounds i32, i32* %add.ptr42, i64 %idx.ext46, !dbg !14464
  %37 = load i32, i32* %i, align 4, !dbg !14465
  %add = add nsw i32 %37, 1, !dbg !14466
  %idxprom48 = sext i32 %add to i64, !dbg !14467
  %38 = load i16*, i16** %offsets, align 8, !dbg !14467
  %arrayidx49 = getelementptr inbounds i16, i16* %38, i64 %idxprom48, !dbg !14467
  %39 = load i16, i16* %arrayidx49, align 2, !dbg !14467
  %conv50 = zext i16 %39 to i32, !dbg !14467
  %40 = load i32, i32* %i, align 4, !dbg !14468
  %idxprom51 = sext i32 %40 to i64, !dbg !14469
  %41 = load i16*, i16** %offsets, align 8, !dbg !14469
  %arrayidx52 = getelementptr inbounds i16, i16* %41, i64 %idxprom51, !dbg !14469
  %42 = load i16, i16* %arrayidx52, align 2, !dbg !14469
  %conv53 = zext i16 %42 to i32, !dbg !14469
  %sub = sub nsw i32 %conv50, %conv53, !dbg !14470
  call void %26(i32* %add.ptr39, i32* %add.ptr47, i32 %sub), !dbg !14447
  br label %for.inc, !dbg !14471

for.inc:                                          ; preds = %for.body34
  %43 = load i32, i32* %group, align 4, !dbg !14472
  %inc = add nsw i32 %43, 1, !dbg !14472
  store i32 %inc, i32* %group, align 4, !dbg !14472
  br label %for.cond28, !dbg !14474, !llvm.loop !14475

for.end:                                          ; preds = %for.cond28
  br label %if.end, !dbg !14477

if.end:                                           ; preds = %for.end, %land.lhs.true20, %land.lhs.true, %for.body11
  br label %for.inc54, !dbg !14478

for.inc54:                                        ; preds = %if.end
  %44 = load i32, i32* %i, align 4, !dbg !14479
  %inc55 = add nsw i32 %44, 1, !dbg !14479
  store i32 %inc55, i32* %i, align 4, !dbg !14479
  %45 = load i32, i32* %idx, align 4, !dbg !14481
  %inc56 = add nsw i32 %45, 1, !dbg !14481
  store i32 %inc56, i32* %idx, align 4, !dbg !14481
  br label %for.cond8, !dbg !14482, !llvm.loop !14483

for.end57:                                        ; preds = %for.cond8
  %46 = load i32, i32* %g, align 4, !dbg !14485
  %idxprom58 = sext i32 %46 to i64, !dbg !14486
  %47 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14486
  %group_len59 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %47, i32 0, i32 4, !dbg !14487
  %arrayidx60 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len59, i64 0, i64 %idxprom58, !dbg !14486
  %48 = load i8, i8* %arrayidx60, align 1, !dbg !14486
  %conv61 = zext i8 %48 to i32, !dbg !14486
  %mul62 = mul nsw i32 %conv61, 128, !dbg !14488
  %49 = load i32*, i32** %ch0, align 8, !dbg !14489
  %idx.ext63 = sext i32 %mul62 to i64, !dbg !14489
  %add.ptr64 = getelementptr inbounds i32, i32* %49, i64 %idx.ext63, !dbg !14489
  store i32* %add.ptr64, i32** %ch0, align 8, !dbg !14489
  %50 = load i32, i32* %g, align 4, !dbg !14490
  %idxprom65 = sext i32 %50 to i64, !dbg !14491
  %51 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14491
  %group_len66 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %51, i32 0, i32 4, !dbg !14492
  %arrayidx67 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len66, i64 0, i64 %idxprom65, !dbg !14491
  %52 = load i8, i8* %arrayidx67, align 1, !dbg !14491
  %conv68 = zext i8 %52 to i32, !dbg !14491
  %mul69 = mul nsw i32 %conv68, 128, !dbg !14493
  %53 = load i32*, i32** %ch1, align 8, !dbg !14494
  %idx.ext70 = sext i32 %mul69 to i64, !dbg !14494
  %add.ptr71 = getelementptr inbounds i32, i32* %53, i64 %idx.ext70, !dbg !14494
  store i32* %add.ptr71, i32** %ch1, align 8, !dbg !14494
  br label %for.inc72, !dbg !14495

for.inc72:                                        ; preds = %for.end57
  %54 = load i32, i32* %g, align 4, !dbg !14496
  %inc73 = add nsw i32 %54, 1, !dbg !14496
  store i32 %inc73, i32* %g, align 4, !dbg !14496
  br label %for.cond, !dbg !14498, !llvm.loop !14499

for.end74:                                        ; preds = %for.cond
  ret void, !dbg !14501
}

; Function Attrs: nounwind uwtable
define internal void @apply_intensity_stereo(%struct.AACContext* %ac, %struct.ChannelElement* %cpe, i32 %ms_present) #1 !dbg !14502 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %ms_present.addr = alloca i32, align 4
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %sce1 = alloca %struct.SingleChannelElement*, align 8
  %coef0 = alloca i32*, align 8
  %coef1 = alloca i32*, align 8
  %offsets = alloca i16*, align 8
  %g = alloca i32, align 4
  %group = alloca i32, align 4
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  %c = alloca i32, align 4
  %scale = alloca i32, align 4
  %bt_run_end = alloca i32, align 4
  %bt_run_end74 = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !14505, metadata !2068), !dbg !14506
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !14507, metadata !2068), !dbg !14508
  store i32 %ms_present, i32* %ms_present.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ms_present.addr, metadata !14509, metadata !2068), !dbg !14510
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !14511, metadata !2068), !dbg !14512
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14513
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !14514
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 1, !dbg !14513
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx, i32 0, i32 0, !dbg !14515
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !14512
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce1, metadata !14516, metadata !2068), !dbg !14517
  %1 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14518
  %ch2 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %1, i32 0, i32 7, !dbg !14519
  %arrayidx3 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch2, i64 0, i64 1, !dbg !14518
  store %struct.SingleChannelElement* %arrayidx3, %struct.SingleChannelElement** %sce1, align 8, !dbg !14517
  call void @llvm.dbg.declare(metadata i32** %coef0, metadata !14520, metadata !2068), !dbg !14521
  %2 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14522
  %ch4 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %2, i32 0, i32 7, !dbg !14523
  %arrayidx5 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch4, i64 0, i64 0, !dbg !14522
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx5, i32 0, i32 14, !dbg !14524
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs, i32 0, i32 0, !dbg !14522
  store i32* %arraydecay, i32** %coef0, align 8, !dbg !14521
  call void @llvm.dbg.declare(metadata i32** %coef1, metadata !14525, metadata !2068), !dbg !14526
  %3 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14527
  %ch6 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %3, i32 0, i32 7, !dbg !14528
  %arrayidx7 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch6, i64 0, i64 1, !dbg !14527
  %coeffs8 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx7, i32 0, i32 14, !dbg !14529
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs8, i32 0, i32 0, !dbg !14527
  store i32* %arraydecay9, i32** %coef1, align 8, !dbg !14526
  call void @llvm.dbg.declare(metadata i16** %offsets, metadata !14530, metadata !2068), !dbg !14531
  %4 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14532
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %4, i32 0, i32 6, !dbg !14533
  %5 = load i16*, i16** %swb_offset, align 8, !dbg !14533
  store i16* %5, i16** %offsets, align 8, !dbg !14531
  call void @llvm.dbg.declare(metadata i32* %g, metadata !14534, metadata !2068), !dbg !14535
  call void @llvm.dbg.declare(metadata i32* %group, metadata !14536, metadata !2068), !dbg !14537
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14538, metadata !2068), !dbg !14539
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !14540, metadata !2068), !dbg !14541
  store i32 0, i32* %idx, align 4, !dbg !14541
  call void @llvm.dbg.declare(metadata i32* %c, metadata !14542, metadata !2068), !dbg !14543
  call void @llvm.dbg.declare(metadata i32* %scale, metadata !14544, metadata !2068), !dbg !14545
  store i32 0, i32* %g, align 4, !dbg !14546
  br label %for.cond, !dbg !14548

for.cond:                                         ; preds = %for.inc96, %entry
  %6 = load i32, i32* %g, align 4, !dbg !14549
  %7 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14552
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %7, i32 0, i32 3, !dbg !14553
  %8 = load i32, i32* %num_window_groups, align 8, !dbg !14553
  %cmp = icmp slt i32 %6, %8, !dbg !14554
  br i1 %cmp, label %for.body, label %for.end98, !dbg !14555

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !14556
  br label %for.cond10, !dbg !14559

for.cond10:                                       ; preds = %if.end80, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !14560
  %10 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14563
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %10, i32 0, i32 0, !dbg !14564
  %11 = load i8, i8* %max_sfb, align 8, !dbg !14564
  %conv = zext i8 %11 to i32, !dbg !14563
  %cmp11 = icmp slt i32 %9, %conv, !dbg !14565
  br i1 %cmp11, label %for.body13, label %for.end81, !dbg !14566

for.body13:                                       ; preds = %for.cond10
  %12 = load i32, i32* %idx, align 4, !dbg !14567
  %idxprom = sext i32 %12 to i64, !dbg !14570
  %13 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !14570
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %13, i32 0, i32 3, !dbg !14571
  %arrayidx14 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom, !dbg !14570
  %14 = load i32, i32* %arrayidx14, align 4, !dbg !14570
  %cmp15 = icmp eq i32 %14, 15, !dbg !14572
  br i1 %cmp15, label %if.then, label %lor.lhs.false, !dbg !14573

lor.lhs.false:                                    ; preds = %for.body13
  %15 = load i32, i32* %idx, align 4, !dbg !14574
  %idxprom17 = sext i32 %15 to i64, !dbg !14575
  %16 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !14575
  %band_type18 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %16, i32 0, i32 3, !dbg !14576
  %arrayidx19 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type18, i64 0, i64 %idxprom17, !dbg !14575
  %17 = load i32, i32* %arrayidx19, align 4, !dbg !14575
  %cmp20 = icmp eq i32 %17, 14, !dbg !14577
  br i1 %cmp20, label %if.then, label %if.else, !dbg !14578

if.then:                                          ; preds = %lor.lhs.false, %for.body13
  call void @llvm.dbg.declare(metadata i32* %bt_run_end, metadata !14580, metadata !2068), !dbg !14582
  %18 = load i32, i32* %idx, align 4, !dbg !14583
  %idxprom22 = sext i32 %18 to i64, !dbg !14584
  %19 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !14584
  %band_type_run_end = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %19, i32 0, i32 5, !dbg !14585
  %arrayidx23 = getelementptr inbounds [120 x i32], [120 x i32]* %band_type_run_end, i64 0, i64 %idxprom22, !dbg !14584
  %20 = load i32, i32* %arrayidx23, align 4, !dbg !14584
  store i32 %20, i32* %bt_run_end, align 4, !dbg !14582
  br label %for.cond24, !dbg !14586

for.cond24:                                       ; preds = %for.inc70, %if.then
  %21 = load i32, i32* %i, align 4, !dbg !14587
  %22 = load i32, i32* %bt_run_end, align 4, !dbg !14591
  %cmp25 = icmp slt i32 %21, %22, !dbg !14592
  br i1 %cmp25, label %for.body27, label %for.end73, !dbg !14593

for.body27:                                       ; preds = %for.cond24
  %23 = load i32, i32* %idx, align 4, !dbg !14594
  %idxprom28 = sext i32 %23 to i64, !dbg !14596
  %24 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !14596
  %band_type29 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %24, i32 0, i32 3, !dbg !14597
  %arrayidx30 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type29, i64 0, i64 %idxprom28, !dbg !14596
  %25 = load i32, i32* %arrayidx30, align 4, !dbg !14596
  %sub = sub i32 %25, 14, !dbg !14598
  %mul = mul i32 2, %sub, !dbg !14599
  %add = add i32 -1, %mul, !dbg !14600
  store i32 %add, i32* %c, align 4, !dbg !14601
  %26 = load i32, i32* %ms_present.addr, align 4, !dbg !14602
  %tobool = icmp ne i32 %26, 0, !dbg !14602
  br i1 %tobool, label %if.then31, label %if.end, !dbg !14604

if.then31:                                        ; preds = %for.body27
  %27 = load i32, i32* %idx, align 4, !dbg !14605
  %idxprom32 = sext i32 %27 to i64, !dbg !14606
  %28 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !14606
  %ms_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %28, i32 0, i32 4, !dbg !14607
  %arrayidx33 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask, i64 0, i64 %idxprom32, !dbg !14606
  %29 = load i8, i8* %arrayidx33, align 1, !dbg !14606
  %conv34 = zext i8 %29 to i32, !dbg !14606
  %mul35 = mul nsw i32 2, %conv34, !dbg !14608
  %sub36 = sub nsw i32 1, %mul35, !dbg !14609
  %30 = load i32, i32* %c, align 4, !dbg !14610
  %mul37 = mul nsw i32 %30, %sub36, !dbg !14610
  store i32 %mul37, i32* %c, align 4, !dbg !14610
  br label %if.end, !dbg !14611

if.end:                                           ; preds = %if.then31, %for.body27
  %31 = load i32, i32* %c, align 4, !dbg !14612
  %32 = load i32, i32* %idx, align 4, !dbg !14613
  %idxprom38 = sext i32 %32 to i64, !dbg !14614
  %33 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !14614
  %sf = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %33, i32 0, i32 6, !dbg !14615
  %arrayidx39 = getelementptr inbounds [120 x i32], [120 x i32]* %sf, i64 0, i64 %idxprom38, !dbg !14614
  %34 = load i32, i32* %arrayidx39, align 4, !dbg !14614
  %mul40 = mul nsw i32 %31, %34, !dbg !14616
  store i32 %mul40, i32* %scale, align 4, !dbg !14617
  store i32 0, i32* %group, align 4, !dbg !14618
  br label %for.cond41, !dbg !14620

for.cond41:                                       ; preds = %for.inc, %if.end
  %35 = load i32, i32* %group, align 4, !dbg !14621
  %36 = load i32, i32* %g, align 4, !dbg !14624
  %idxprom42 = sext i32 %36 to i64, !dbg !14625
  %37 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14625
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %37, i32 0, i32 4, !dbg !14626
  %arrayidx43 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom42, !dbg !14625
  %38 = load i8, i8* %arrayidx43, align 1, !dbg !14625
  %conv44 = zext i8 %38 to i32, !dbg !14625
  %cmp45 = icmp slt i32 %35, %conv44, !dbg !14627
  br i1 %cmp45, label %for.body47, label %for.end, !dbg !14628

for.body47:                                       ; preds = %for.cond41
  %39 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14629
  %subband_scale = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 31, !dbg !14630
  %40 = load void (i32*, i32*, i32, i32, i32, i8*)*, void (i32*, i32*, i32, i32, i32, i8*)** %subband_scale, align 16, !dbg !14630
  %41 = load i32*, i32** %coef1, align 8, !dbg !14631
  %42 = load i32, i32* %group, align 4, !dbg !14632
  %mul48 = mul nsw i32 %42, 128, !dbg !14633
  %idx.ext = sext i32 %mul48 to i64, !dbg !14634
  %add.ptr = getelementptr inbounds i32, i32* %41, i64 %idx.ext, !dbg !14634
  %43 = load i32, i32* %i, align 4, !dbg !14635
  %idxprom49 = sext i32 %43 to i64, !dbg !14636
  %44 = load i16*, i16** %offsets, align 8, !dbg !14636
  %arrayidx50 = getelementptr inbounds i16, i16* %44, i64 %idxprom49, !dbg !14636
  %45 = load i16, i16* %arrayidx50, align 2, !dbg !14636
  %conv51 = zext i16 %45 to i32, !dbg !14636
  %idx.ext52 = sext i32 %conv51 to i64, !dbg !14637
  %add.ptr53 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext52, !dbg !14637
  %46 = load i32*, i32** %coef0, align 8, !dbg !14638
  %47 = load i32, i32* %group, align 4, !dbg !14639
  %mul54 = mul nsw i32 %47, 128, !dbg !14640
  %idx.ext55 = sext i32 %mul54 to i64, !dbg !14641
  %add.ptr56 = getelementptr inbounds i32, i32* %46, i64 %idx.ext55, !dbg !14641
  %48 = load i32, i32* %i, align 4, !dbg !14642
  %idxprom57 = sext i32 %48 to i64, !dbg !14643
  %49 = load i16*, i16** %offsets, align 8, !dbg !14643
  %arrayidx58 = getelementptr inbounds i16, i16* %49, i64 %idxprom57, !dbg !14643
  %50 = load i16, i16* %arrayidx58, align 2, !dbg !14643
  %conv59 = zext i16 %50 to i32, !dbg !14643
  %idx.ext60 = sext i32 %conv59 to i64, !dbg !14644
  %add.ptr61 = getelementptr inbounds i32, i32* %add.ptr56, i64 %idx.ext60, !dbg !14644
  %51 = load i32, i32* %scale, align 4, !dbg !14645
  %52 = load i32, i32* %i, align 4, !dbg !14646
  %add62 = add nsw i32 %52, 1, !dbg !14647
  %idxprom63 = sext i32 %add62 to i64, !dbg !14648
  %53 = load i16*, i16** %offsets, align 8, !dbg !14648
  %arrayidx64 = getelementptr inbounds i16, i16* %53, i64 %idxprom63, !dbg !14648
  %54 = load i16, i16* %arrayidx64, align 2, !dbg !14648
  %conv65 = zext i16 %54 to i32, !dbg !14648
  %55 = load i32, i32* %i, align 4, !dbg !14649
  %idxprom66 = sext i32 %55 to i64, !dbg !14650
  %56 = load i16*, i16** %offsets, align 8, !dbg !14650
  %arrayidx67 = getelementptr inbounds i16, i16* %56, i64 %idxprom66, !dbg !14650
  %57 = load i16, i16* %arrayidx67, align 2, !dbg !14650
  %conv68 = zext i16 %57 to i32, !dbg !14650
  %sub69 = sub nsw i32 %conv65, %conv68, !dbg !14651
  %58 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14652
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %58, i32 0, i32 1, !dbg !14653
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !14653
  %60 = bitcast %struct.AVCodecContext* %59 to i8*, !dbg !14652
  call void %40(i32* %add.ptr53, i32* %add.ptr61, i32 %51, i32 23, i32 %sub69, i8* %60), !dbg !14629
  br label %for.inc, !dbg !14629

for.inc:                                          ; preds = %for.body47
  %61 = load i32, i32* %group, align 4, !dbg !14654
  %inc = add nsw i32 %61, 1, !dbg !14654
  store i32 %inc, i32* %group, align 4, !dbg !14654
  br label %for.cond41, !dbg !14656, !llvm.loop !14657

for.end:                                          ; preds = %for.cond41
  br label %for.inc70, !dbg !14659

for.inc70:                                        ; preds = %for.end
  %62 = load i32, i32* %i, align 4, !dbg !14660
  %inc71 = add nsw i32 %62, 1, !dbg !14660
  store i32 %inc71, i32* %i, align 4, !dbg !14660
  %63 = load i32, i32* %idx, align 4, !dbg !14662
  %inc72 = add nsw i32 %63, 1, !dbg !14662
  store i32 %inc72, i32* %idx, align 4, !dbg !14662
  br label %for.cond24, !dbg !14663, !llvm.loop !14664

for.end73:                                        ; preds = %for.cond24
  br label %if.end80, !dbg !14665

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %bt_run_end74, metadata !14666, metadata !2068), !dbg !14668
  %64 = load i32, i32* %idx, align 4, !dbg !14669
  %idxprom75 = sext i32 %64 to i64, !dbg !14670
  %65 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !14670
  %band_type_run_end76 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %65, i32 0, i32 5, !dbg !14671
  %arrayidx77 = getelementptr inbounds [120 x i32], [120 x i32]* %band_type_run_end76, i64 0, i64 %idxprom75, !dbg !14670
  %66 = load i32, i32* %arrayidx77, align 4, !dbg !14670
  store i32 %66, i32* %bt_run_end74, align 4, !dbg !14668
  %67 = load i32, i32* %bt_run_end74, align 4, !dbg !14672
  %68 = load i32, i32* %i, align 4, !dbg !14673
  %sub78 = sub nsw i32 %67, %68, !dbg !14674
  %69 = load i32, i32* %idx, align 4, !dbg !14675
  %add79 = add nsw i32 %69, %sub78, !dbg !14675
  store i32 %add79, i32* %idx, align 4, !dbg !14675
  %70 = load i32, i32* %bt_run_end74, align 4, !dbg !14676
  store i32 %70, i32* %i, align 4, !dbg !14677
  br label %if.end80

if.end80:                                         ; preds = %if.else, %for.end73
  br label %for.cond10, !dbg !14678, !llvm.loop !14680

for.end81:                                        ; preds = %for.cond10
  %71 = load i32, i32* %g, align 4, !dbg !14682
  %idxprom82 = sext i32 %71 to i64, !dbg !14683
  %72 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14683
  %group_len83 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %72, i32 0, i32 4, !dbg !14684
  %arrayidx84 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len83, i64 0, i64 %idxprom82, !dbg !14683
  %73 = load i8, i8* %arrayidx84, align 1, !dbg !14683
  %conv85 = zext i8 %73 to i32, !dbg !14683
  %mul86 = mul nsw i32 %conv85, 128, !dbg !14685
  %74 = load i32*, i32** %coef0, align 8, !dbg !14686
  %idx.ext87 = sext i32 %mul86 to i64, !dbg !14686
  %add.ptr88 = getelementptr inbounds i32, i32* %74, i64 %idx.ext87, !dbg !14686
  store i32* %add.ptr88, i32** %coef0, align 8, !dbg !14686
  %75 = load i32, i32* %g, align 4, !dbg !14687
  %idxprom89 = sext i32 %75 to i64, !dbg !14688
  %76 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14688
  %group_len90 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %76, i32 0, i32 4, !dbg !14689
  %arrayidx91 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len90, i64 0, i64 %idxprom89, !dbg !14688
  %77 = load i8, i8* %arrayidx91, align 1, !dbg !14688
  %conv92 = zext i8 %77 to i32, !dbg !14688
  %mul93 = mul nsw i32 %conv92, 128, !dbg !14690
  %78 = load i32*, i32** %coef1, align 8, !dbg !14691
  %idx.ext94 = sext i32 %mul93 to i64, !dbg !14691
  %add.ptr95 = getelementptr inbounds i32, i32* %78, i64 %idx.ext94, !dbg !14691
  store i32* %add.ptr95, i32** %coef1, align 8, !dbg !14691
  br label %for.inc96, !dbg !14692

for.inc96:                                        ; preds = %for.end81
  %79 = load i32, i32* %g, align 4, !dbg !14693
  %inc97 = add nsw i32 %79, 1, !dbg !14693
  store i32 %inc97, i32* %g, align 4, !dbg !14693
  br label %for.cond, !dbg !14695, !llvm.loop !14696

for.end98:                                        ; preds = %for.cond
  ret void, !dbg !14698
}

; Function Attrs: nounwind uwtable
define internal void @imdct_and_windowing_ld(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !14699 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %in = alloca i32*, align 8
  %out = alloca i32*, align 8
  %saved = alloca i32*, align 8
  %buf = alloca i32*, align 8
  %i = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !14700, metadata !2068), !dbg !14701
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !14702, metadata !2068), !dbg !14703
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !14704, metadata !2068), !dbg !14705
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14706
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !14707
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !14705
  call void @llvm.dbg.declare(metadata i32** %in, metadata !14708, metadata !2068), !dbg !14709
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14710
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 14, !dbg !14711
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs, i32 0, i32 0, !dbg !14710
  store i32* %arraydecay, i32** %in, align 8, !dbg !14709
  call void @llvm.dbg.declare(metadata i32** %out, metadata !14712, metadata !2068), !dbg !14713
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14714
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 21, !dbg !14715
  %3 = load i32*, i32** %ret, align 32, !dbg !14715
  store i32* %3, i32** %out, align 8, !dbg !14713
  call void @llvm.dbg.declare(metadata i32** %saved, metadata !14716, metadata !2068), !dbg !14717
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14718
  %saved2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 15, !dbg !14719
  %arraydecay3 = getelementptr inbounds [1536 x i32], [1536 x i32]* %saved2, i32 0, i32 0, !dbg !14718
  store i32* %arraydecay3, i32** %saved, align 8, !dbg !14717
  call void @llvm.dbg.declare(metadata i32** %buf, metadata !14720, metadata !2068), !dbg !14721
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14722
  %buf_mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 9, !dbg !14723
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %buf_mdct, i32 0, i32 0, !dbg !14722
  store i32* %arraydecay4, i32** %buf, align 8, !dbg !14721
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14724, metadata !2068), !dbg !14725
  %6 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14726
  %mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %6, i32 0, i32 10, !dbg !14727
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct, i32 0, i32 11, !dbg !14728
  %7 = load void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)** %imdct_half, align 8, !dbg !14728
  %8 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14729
  %mdct_ld = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 12, !dbg !14730
  %9 = load i32*, i32** %buf, align 8, !dbg !14731
  %10 = load i32*, i32** %in, align 8, !dbg !14732
  call void %7(%struct.FFTContext* %mdct_ld, i32* %9, i32* %10), !dbg !14726
  store i32 0, i32* %i, align 4, !dbg !14733
  br label %for.cond, !dbg !14735

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %i, align 4, !dbg !14736
  %cmp = icmp slt i32 %11, 1024, !dbg !14739
  br i1 %cmp, label %for.body, label %for.end, !dbg !14740

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !14741
  %idxprom = sext i32 %12 to i64, !dbg !14742
  %13 = load i32*, i32** %buf, align 8, !dbg !14742
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !14742
  %14 = load i32, i32* %arrayidx, align 4, !dbg !14742
  %add = add nsw i32 %14, 2, !dbg !14743
  %shr = ashr i32 %add, 2, !dbg !14744
  %15 = load i32, i32* %i, align 4, !dbg !14745
  %idxprom5 = sext i32 %15 to i64, !dbg !14746
  %16 = load i32*, i32** %buf, align 8, !dbg !14746
  %arrayidx6 = getelementptr inbounds i32, i32* %16, i64 %idxprom5, !dbg !14746
  store i32 %shr, i32* %arrayidx6, align 4, !dbg !14747
  br label %for.inc, !dbg !14746

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !14748
  %inc = add nsw i32 %17, 1, !dbg !14748
  store i32 %inc, i32* %i, align 4, !dbg !14748
  br label %for.cond, !dbg !14750, !llvm.loop !14751

for.end:                                          ; preds = %for.cond
  %18 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14753
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %18, i32 0, i32 2, !dbg !14755
  %arrayidx7 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 1, !dbg !14753
  %19 = load i8, i8* %arrayidx7, align 1, !dbg !14753
  %tobool = icmp ne i8 %19, 0, !dbg !14753
  br i1 %tobool, label %if.then, label %if.else, !dbg !14756

if.then:                                          ; preds = %for.end
  %20 = load i32*, i32** %out, align 8, !dbg !14757
  %21 = bitcast i32* %20 to i8*, !dbg !14759
  %22 = load i32*, i32** %saved, align 8, !dbg !14760
  %23 = bitcast i32* %22 to i8*, !dbg !14759
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %23, i64 768, i32 4, i1 false), !dbg !14759
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14761
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 14, !dbg !14762
  %25 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp, align 32, !dbg !14762
  %vector_fmul_window = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %25, i32 0, i32 1, !dbg !14763
  %26 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_window, align 8, !dbg !14763
  %27 = load i32*, i32** %out, align 8, !dbg !14764
  %add.ptr = getelementptr inbounds i32, i32* %27, i64 192, !dbg !14765
  %28 = load i32*, i32** %saved, align 8, !dbg !14766
  %add.ptr8 = getelementptr inbounds i32, i32* %28, i64 192, !dbg !14767
  %29 = load i32*, i32** %buf, align 8, !dbg !14768
  call void %26(i32* %add.ptr, i32* %add.ptr8, i32* %29, i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_sine_128_fixed, i32 0, i32 0), i32 64), !dbg !14761
  %30 = load i32*, i32** %out, align 8, !dbg !14769
  %add.ptr9 = getelementptr inbounds i32, i32* %30, i64 320, !dbg !14770
  %31 = bitcast i32* %add.ptr9 to i8*, !dbg !14771
  %32 = load i32*, i32** %buf, align 8, !dbg !14772
  %add.ptr10 = getelementptr inbounds i32, i32* %32, i64 64, !dbg !14773
  %33 = bitcast i32* %add.ptr10 to i8*, !dbg !14771
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %33, i64 768, i32 4, i1 false), !dbg !14771
  br label %if.end, !dbg !14774

if.else:                                          ; preds = %for.end
  %34 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14775
  %fdsp11 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %34, i32 0, i32 14, !dbg !14777
  %35 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp11, align 32, !dbg !14777
  %vector_fmul_window12 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %35, i32 0, i32 1, !dbg !14778
  %36 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_window12, align 8, !dbg !14778
  %37 = load i32*, i32** %out, align 8, !dbg !14779
  %38 = load i32*, i32** %saved, align 8, !dbg !14780
  %39 = load i32*, i32** %buf, align 8, !dbg !14781
  call void %36(i32* %37, i32* %38, i32* %39, i32* getelementptr inbounds ([512 x i32], [512 x i32]* @ff_sine_512_fixed, i32 0, i32 0), i32 256), !dbg !14775
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %40 = load i32*, i32** %saved, align 8, !dbg !14782
  %41 = bitcast i32* %40 to i8*, !dbg !14783
  %42 = load i32*, i32** %buf, align 8, !dbg !14784
  %add.ptr13 = getelementptr inbounds i32, i32* %42, i64 256, !dbg !14785
  %43 = bitcast i32* %add.ptr13 to i8*, !dbg !14783
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %43, i64 1024, i32 4, i1 false), !dbg !14783
  ret void, !dbg !14786
}

; Function Attrs: nounwind uwtable
define internal void @imdct_and_windowing_eld(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !14787 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %in = alloca i32*, align 8
  %out = alloca i32*, align 8
  %saved = alloca i32*, align 8
  %buf = alloca i32*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %n2 = alloca i32, align 4
  %n4 = alloca i32, align 4
  %window = alloca i32*, align 8
  %temp = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !14788, metadata !2068), !dbg !14789
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !14790, metadata !2068), !dbg !14791
  call void @llvm.dbg.declare(metadata i32** %in, metadata !14792, metadata !2068), !dbg !14793
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14794
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 14, !dbg !14795
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs, i32 0, i32 0, !dbg !14794
  store i32* %arraydecay, i32** %in, align 8, !dbg !14793
  call void @llvm.dbg.declare(metadata i32** %out, metadata !14796, metadata !2068), !dbg !14797
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14798
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 21, !dbg !14799
  %2 = load i32*, i32** %ret, align 32, !dbg !14799
  store i32* %2, i32** %out, align 8, !dbg !14797
  call void @llvm.dbg.declare(metadata i32** %saved, metadata !14800, metadata !2068), !dbg !14801
  %3 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14802
  %saved1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %3, i32 0, i32 15, !dbg !14803
  %arraydecay2 = getelementptr inbounds [1536 x i32], [1536 x i32]* %saved1, i32 0, i32 0, !dbg !14802
  store i32* %arraydecay2, i32** %saved, align 8, !dbg !14801
  call void @llvm.dbg.declare(metadata i32** %buf, metadata !14804, metadata !2068), !dbg !14805
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14806
  %buf_mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 9, !dbg !14807
  %arraydecay3 = getelementptr inbounds [1024 x i32], [1024 x i32]* %buf_mdct, i32 0, i32 0, !dbg !14806
  store i32* %arraydecay3, i32** %buf, align 8, !dbg !14805
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14808, metadata !2068), !dbg !14809
  call void @llvm.dbg.declare(metadata i32* %n, metadata !14810, metadata !2068), !dbg !14811
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14812
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 21, !dbg !14813
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !14812
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !14814
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 11, !dbg !14815
  %6 = load i32, i32* %frame_length_short, align 4, !dbg !14815
  %tobool = icmp ne i32 %6, 0, !dbg !14812
  %cond = select i1 %tobool, i32 480, i32 512, !dbg !14812
  store i32 %cond, i32* %n, align 4, !dbg !14811
  call void @llvm.dbg.declare(metadata i32* %n2, metadata !14816, metadata !2068), !dbg !14817
  %7 = load i32, i32* %n, align 4, !dbg !14818
  %shr = ashr i32 %7, 1, !dbg !14819
  store i32 %shr, i32* %n2, align 4, !dbg !14817
  call void @llvm.dbg.declare(metadata i32* %n4, metadata !14820, metadata !2068), !dbg !14821
  %8 = load i32, i32* %n, align 4, !dbg !14822
  %shr4 = ashr i32 %8, 2, !dbg !14823
  store i32 %shr4, i32* %n4, align 4, !dbg !14821
  call void @llvm.dbg.declare(metadata i32** %window, metadata !14824, metadata !2068), !dbg !14825
  %9 = load i32, i32* %n, align 4, !dbg !14826
  %cmp = icmp eq i32 %9, 480, !dbg !14827
  %cond5 = select i1 %cmp, i32* getelementptr inbounds ([1800 x i32], [1800 x i32]* @ff_aac_eld_window_480_fixed, i32 0, i32 0), i32* getelementptr inbounds ([1920 x i32], [1920 x i32]* @ff_aac_eld_window_512_fixed, i32 0, i32 0), !dbg !14826
  store i32* %cond5, i32** %window, align 8, !dbg !14825
  store i32 0, i32* %i, align 4, !dbg !14828
  br label %for.cond, !dbg !14830

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !14831
  %11 = load i32, i32* %n2, align 4, !dbg !14834
  %cmp6 = icmp slt i32 %10, %11, !dbg !14835
  br i1 %cmp6, label %for.body, label %for.end, !dbg !14836

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !14837, metadata !2068), !dbg !14839
  %12 = load i32, i32* %i, align 4, !dbg !14840
  %idxprom = sext i32 %12 to i64, !dbg !14841
  %13 = load i32*, i32** %in, align 8, !dbg !14841
  %arrayidx7 = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !14841
  %14 = load i32, i32* %arrayidx7, align 4, !dbg !14841
  store i32 %14, i32* %temp, align 4, !dbg !14842
  %15 = load i32, i32* %n, align 4, !dbg !14843
  %sub = sub nsw i32 %15, 1, !dbg !14844
  %16 = load i32, i32* %i, align 4, !dbg !14845
  %sub8 = sub nsw i32 %sub, %16, !dbg !14846
  %idxprom9 = sext i32 %sub8 to i64, !dbg !14847
  %17 = load i32*, i32** %in, align 8, !dbg !14847
  %arrayidx10 = getelementptr inbounds i32, i32* %17, i64 %idxprom9, !dbg !14847
  %18 = load i32, i32* %arrayidx10, align 4, !dbg !14847
  %sub11 = sub nsw i32 0, %18, !dbg !14848
  %19 = load i32, i32* %i, align 4, !dbg !14849
  %idxprom12 = sext i32 %19 to i64, !dbg !14850
  %20 = load i32*, i32** %in, align 8, !dbg !14850
  %arrayidx13 = getelementptr inbounds i32, i32* %20, i64 %idxprom12, !dbg !14850
  store i32 %sub11, i32* %arrayidx13, align 4, !dbg !14851
  %21 = load i32, i32* %temp, align 4, !dbg !14852
  %22 = load i32, i32* %n, align 4, !dbg !14853
  %sub14 = sub nsw i32 %22, 1, !dbg !14854
  %23 = load i32, i32* %i, align 4, !dbg !14855
  %sub15 = sub nsw i32 %sub14, %23, !dbg !14856
  %idxprom16 = sext i32 %sub15 to i64, !dbg !14857
  %24 = load i32*, i32** %in, align 8, !dbg !14857
  %arrayidx17 = getelementptr inbounds i32, i32* %24, i64 %idxprom16, !dbg !14857
  store i32 %21, i32* %arrayidx17, align 4, !dbg !14858
  %25 = load i32, i32* %i, align 4, !dbg !14859
  %add = add nsw i32 %25, 1, !dbg !14860
  %idxprom18 = sext i32 %add to i64, !dbg !14861
  %26 = load i32*, i32** %in, align 8, !dbg !14861
  %arrayidx19 = getelementptr inbounds i32, i32* %26, i64 %idxprom18, !dbg !14861
  %27 = load i32, i32* %arrayidx19, align 4, !dbg !14861
  %sub20 = sub nsw i32 0, %27, !dbg !14862
  store i32 %sub20, i32* %temp, align 4, !dbg !14863
  %28 = load i32, i32* %n, align 4, !dbg !14864
  %sub21 = sub nsw i32 %28, 2, !dbg !14865
  %29 = load i32, i32* %i, align 4, !dbg !14866
  %sub22 = sub nsw i32 %sub21, %29, !dbg !14867
  %idxprom23 = sext i32 %sub22 to i64, !dbg !14868
  %30 = load i32*, i32** %in, align 8, !dbg !14868
  %arrayidx24 = getelementptr inbounds i32, i32* %30, i64 %idxprom23, !dbg !14868
  %31 = load i32, i32* %arrayidx24, align 4, !dbg !14868
  %32 = load i32, i32* %i, align 4, !dbg !14869
  %add25 = add nsw i32 %32, 1, !dbg !14870
  %idxprom26 = sext i32 %add25 to i64, !dbg !14871
  %33 = load i32*, i32** %in, align 8, !dbg !14871
  %arrayidx27 = getelementptr inbounds i32, i32* %33, i64 %idxprom26, !dbg !14871
  store i32 %31, i32* %arrayidx27, align 4, !dbg !14872
  %34 = load i32, i32* %temp, align 4, !dbg !14873
  %35 = load i32, i32* %n, align 4, !dbg !14874
  %sub28 = sub nsw i32 %35, 2, !dbg !14875
  %36 = load i32, i32* %i, align 4, !dbg !14876
  %sub29 = sub nsw i32 %sub28, %36, !dbg !14877
  %idxprom30 = sext i32 %sub29 to i64, !dbg !14878
  %37 = load i32*, i32** %in, align 8, !dbg !14878
  %arrayidx31 = getelementptr inbounds i32, i32* %37, i64 %idxprom30, !dbg !14878
  store i32 %34, i32* %arrayidx31, align 4, !dbg !14879
  br label %for.inc, !dbg !14880

for.inc:                                          ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !dbg !14881
  %add32 = add nsw i32 %38, 2, !dbg !14881
  store i32 %add32, i32* %i, align 4, !dbg !14881
  br label %for.cond, !dbg !14883, !llvm.loop !14884

for.end:                                          ; preds = %for.cond
  %39 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14886
  %mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 10, !dbg !14887
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct, i32 0, i32 11, !dbg !14888
  %40 = load void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)** %imdct_half, align 8, !dbg !14888
  %41 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14889
  %mdct_ld = getelementptr inbounds %struct.AACContext, %struct.AACContext* %41, i32 0, i32 12, !dbg !14890
  %42 = load i32*, i32** %buf, align 8, !dbg !14891
  %43 = load i32*, i32** %in, align 8, !dbg !14892
  call void %40(%struct.FFTContext* %mdct_ld, i32* %42, i32* %43), !dbg !14886
  store i32 0, i32* %i, align 4, !dbg !14893
  br label %for.cond33, !dbg !14895

for.cond33:                                       ; preds = %for.inc42, %for.end
  %44 = load i32, i32* %i, align 4, !dbg !14896
  %cmp34 = icmp slt i32 %44, 1024, !dbg !14899
  br i1 %cmp34, label %for.body35, label %for.end43, !dbg !14900

for.body35:                                       ; preds = %for.cond33
  %45 = load i32, i32* %i, align 4, !dbg !14901
  %idxprom36 = sext i32 %45 to i64, !dbg !14902
  %46 = load i32*, i32** %buf, align 8, !dbg !14902
  %arrayidx37 = getelementptr inbounds i32, i32* %46, i64 %idxprom36, !dbg !14902
  %47 = load i32, i32* %arrayidx37, align 4, !dbg !14902
  %add38 = add nsw i32 %47, 1, !dbg !14903
  %shr39 = ashr i32 %add38, 1, !dbg !14904
  %48 = load i32, i32* %i, align 4, !dbg !14905
  %idxprom40 = sext i32 %48 to i64, !dbg !14906
  %49 = load i32*, i32** %buf, align 8, !dbg !14906
  %arrayidx41 = getelementptr inbounds i32, i32* %49, i64 %idxprom40, !dbg !14906
  store i32 %shr39, i32* %arrayidx41, align 4, !dbg !14907
  br label %for.inc42, !dbg !14906

for.inc42:                                        ; preds = %for.body35
  %50 = load i32, i32* %i, align 4, !dbg !14908
  %inc = add nsw i32 %50, 1, !dbg !14908
  store i32 %inc, i32* %i, align 4, !dbg !14908
  br label %for.cond33, !dbg !14910, !llvm.loop !14911

for.end43:                                        ; preds = %for.cond33
  store i32 0, i32* %i, align 4, !dbg !14913
  br label %for.cond44, !dbg !14915

for.cond44:                                       ; preds = %for.inc52, %for.end43
  %51 = load i32, i32* %i, align 4, !dbg !14916
  %52 = load i32, i32* %n, align 4, !dbg !14919
  %cmp45 = icmp slt i32 %51, %52, !dbg !14920
  br i1 %cmp45, label %for.body46, label %for.end54, !dbg !14921

for.body46:                                       ; preds = %for.cond44
  %53 = load i32, i32* %i, align 4, !dbg !14922
  %idxprom47 = sext i32 %53 to i64, !dbg !14924
  %54 = load i32*, i32** %buf, align 8, !dbg !14924
  %arrayidx48 = getelementptr inbounds i32, i32* %54, i64 %idxprom47, !dbg !14924
  %55 = load i32, i32* %arrayidx48, align 4, !dbg !14924
  %sub49 = sub nsw i32 0, %55, !dbg !14925
  %56 = load i32, i32* %i, align 4, !dbg !14926
  %idxprom50 = sext i32 %56 to i64, !dbg !14927
  %57 = load i32*, i32** %buf, align 8, !dbg !14927
  %arrayidx51 = getelementptr inbounds i32, i32* %57, i64 %idxprom50, !dbg !14927
  store i32 %sub49, i32* %arrayidx51, align 4, !dbg !14928
  br label %for.inc52, !dbg !14929

for.inc52:                                        ; preds = %for.body46
  %58 = load i32, i32* %i, align 4, !dbg !14930
  %add53 = add nsw i32 %58, 2, !dbg !14930
  store i32 %add53, i32* %i, align 4, !dbg !14930
  br label %for.cond44, !dbg !14932, !llvm.loop !14933

for.end54:                                        ; preds = %for.cond44
  %59 = load i32, i32* %n4, align 4, !dbg !14935
  store i32 %59, i32* %i, align 4, !dbg !14937
  br label %for.cond55, !dbg !14938

for.cond55:                                       ; preds = %for.inc122, %for.end54
  %60 = load i32, i32* %i, align 4, !dbg !14939
  %61 = load i32, i32* %n2, align 4, !dbg !14942
  %cmp56 = icmp slt i32 %60, %61, !dbg !14943
  br i1 %cmp56, label %for.body57, label %for.end124, !dbg !14944

for.body57:                                       ; preds = %for.cond55
  %62 = load i32, i32* %n2, align 4, !dbg !14945
  %sub58 = sub nsw i32 %62, 1, !dbg !14947
  %63 = load i32, i32* %i, align 4, !dbg !14948
  %sub59 = sub nsw i32 %sub58, %63, !dbg !14949
  %idxprom60 = sext i32 %sub59 to i64, !dbg !14950
  %64 = load i32*, i32** %buf, align 8, !dbg !14950
  %arrayidx61 = getelementptr inbounds i32, i32* %64, i64 %idxprom60, !dbg !14950
  %65 = load i32, i32* %arrayidx61, align 4, !dbg !14950
  %conv = sext i32 %65 to i64, !dbg !14951
  %66 = load i32, i32* %i, align 4, !dbg !14952
  %67 = load i32, i32* %n4, align 4, !dbg !14953
  %sub62 = sub nsw i32 %66, %67, !dbg !14954
  %idxprom63 = sext i32 %sub62 to i64, !dbg !14955
  %68 = load i32*, i32** %window, align 8, !dbg !14955
  %arrayidx64 = getelementptr inbounds i32, i32* %68, i64 %idxprom63, !dbg !14955
  %69 = load i32, i32* %arrayidx64, align 4, !dbg !14955
  %conv65 = sext i32 %69 to i64, !dbg !14956
  %mul = mul nsw i64 %conv, %conv65, !dbg !14957
  %add66 = add nsw i64 %mul, 1073741824, !dbg !14958
  %shr67 = ashr i64 %add66, 31, !dbg !14959
  %conv68 = trunc i64 %shr67 to i32, !dbg !14960
  %70 = load i32, i32* %i, align 4, !dbg !14961
  %71 = load i32, i32* %n2, align 4, !dbg !14962
  %add69 = add nsw i32 %70, %71, !dbg !14963
  %idxprom70 = sext i32 %add69 to i64, !dbg !14964
  %72 = load i32*, i32** %saved, align 8, !dbg !14964
  %arrayidx71 = getelementptr inbounds i32, i32* %72, i64 %idxprom70, !dbg !14964
  %73 = load i32, i32* %arrayidx71, align 4, !dbg !14964
  %conv72 = sext i32 %73 to i64, !dbg !14965
  %74 = load i32, i32* %i, align 4, !dbg !14966
  %75 = load i32, i32* %n, align 4, !dbg !14967
  %add73 = add nsw i32 %74, %75, !dbg !14968
  %76 = load i32, i32* %n4, align 4, !dbg !14969
  %sub74 = sub nsw i32 %add73, %76, !dbg !14970
  %idxprom75 = sext i32 %sub74 to i64, !dbg !14971
  %77 = load i32*, i32** %window, align 8, !dbg !14971
  %arrayidx76 = getelementptr inbounds i32, i32* %77, i64 %idxprom75, !dbg !14971
  %78 = load i32, i32* %arrayidx76, align 4, !dbg !14971
  %conv77 = sext i32 %78 to i64, !dbg !14972
  %mul78 = mul nsw i64 %conv72, %conv77, !dbg !14973
  %add79 = add nsw i64 %mul78, 1073741824, !dbg !14974
  %shr80 = ashr i64 %add79, 31, !dbg !14975
  %conv81 = trunc i64 %shr80 to i32, !dbg !14976
  %add82 = add nsw i32 %conv68, %conv81, !dbg !14977
  %79 = load i32, i32* %n, align 4, !dbg !14978
  %80 = load i32, i32* %n2, align 4, !dbg !14979
  %add83 = add nsw i32 %79, %80, !dbg !14980
  %sub84 = sub nsw i32 %add83, 1, !dbg !14981
  %81 = load i32, i32* %i, align 4, !dbg !14982
  %sub85 = sub nsw i32 %sub84, %81, !dbg !14983
  %idxprom86 = sext i32 %sub85 to i64, !dbg !14984
  %82 = load i32*, i32** %saved, align 8, !dbg !14984
  %arrayidx87 = getelementptr inbounds i32, i32* %82, i64 %idxprom86, !dbg !14984
  %83 = load i32, i32* %arrayidx87, align 4, !dbg !14984
  %sub88 = sub nsw i32 0, %83, !dbg !14985
  %conv89 = sext i32 %sub88 to i64, !dbg !14986
  %84 = load i32, i32* %i, align 4, !dbg !14987
  %85 = load i32, i32* %n, align 4, !dbg !14988
  %mul90 = mul nsw i32 2, %85, !dbg !14989
  %add91 = add nsw i32 %84, %mul90, !dbg !14990
  %86 = load i32, i32* %n4, align 4, !dbg !14991
  %sub92 = sub nsw i32 %add91, %86, !dbg !14992
  %idxprom93 = sext i32 %sub92 to i64, !dbg !14993
  %87 = load i32*, i32** %window, align 8, !dbg !14993
  %arrayidx94 = getelementptr inbounds i32, i32* %87, i64 %idxprom93, !dbg !14993
  %88 = load i32, i32* %arrayidx94, align 4, !dbg !14993
  %conv95 = sext i32 %88 to i64, !dbg !14994
  %mul96 = mul nsw i64 %conv89, %conv95, !dbg !14995
  %add97 = add nsw i64 %mul96, 1073741824, !dbg !14996
  %shr98 = ashr i64 %add97, 31, !dbg !14997
  %conv99 = trunc i64 %shr98 to i32, !dbg !14998
  %add100 = add nsw i32 %add82, %conv99, !dbg !14999
  %89 = load i32, i32* %n, align 4, !dbg !15000
  %mul101 = mul nsw i32 2, %89, !dbg !15001
  %90 = load i32, i32* %n2, align 4, !dbg !15002
  %add102 = add nsw i32 %mul101, %90, !dbg !15003
  %91 = load i32, i32* %i, align 4, !dbg !15004
  %add103 = add nsw i32 %add102, %91, !dbg !15005
  %idxprom104 = sext i32 %add103 to i64, !dbg !15006
  %92 = load i32*, i32** %saved, align 8, !dbg !15006
  %arrayidx105 = getelementptr inbounds i32, i32* %92, i64 %idxprom104, !dbg !15006
  %93 = load i32, i32* %arrayidx105, align 4, !dbg !15006
  %sub106 = sub nsw i32 0, %93, !dbg !15007
  %conv107 = sext i32 %sub106 to i64, !dbg !15008
  %94 = load i32, i32* %i, align 4, !dbg !15009
  %95 = load i32, i32* %n, align 4, !dbg !15010
  %mul108 = mul nsw i32 3, %95, !dbg !15011
  %add109 = add nsw i32 %94, %mul108, !dbg !15012
  %96 = load i32, i32* %n4, align 4, !dbg !15013
  %sub110 = sub nsw i32 %add109, %96, !dbg !15014
  %idxprom111 = sext i32 %sub110 to i64, !dbg !15015
  %97 = load i32*, i32** %window, align 8, !dbg !15015
  %arrayidx112 = getelementptr inbounds i32, i32* %97, i64 %idxprom111, !dbg !15015
  %98 = load i32, i32* %arrayidx112, align 4, !dbg !15015
  %conv113 = sext i32 %98 to i64, !dbg !15016
  %mul114 = mul nsw i64 %conv107, %conv113, !dbg !15017
  %add115 = add nsw i64 %mul114, 1073741824, !dbg !15018
  %shr116 = ashr i64 %add115, 31, !dbg !15019
  %conv117 = trunc i64 %shr116 to i32, !dbg !15020
  %add118 = add nsw i32 %add100, %conv117, !dbg !15021
  %99 = load i32, i32* %i, align 4, !dbg !15022
  %100 = load i32, i32* %n4, align 4, !dbg !15023
  %sub119 = sub nsw i32 %99, %100, !dbg !15024
  %idxprom120 = sext i32 %sub119 to i64, !dbg !15025
  %101 = load i32*, i32** %out, align 8, !dbg !15025
  %arrayidx121 = getelementptr inbounds i32, i32* %101, i64 %idxprom120, !dbg !15025
  store i32 %add118, i32* %arrayidx121, align 4, !dbg !15026
  br label %for.inc122, !dbg !15027

for.inc122:                                       ; preds = %for.body57
  %102 = load i32, i32* %i, align 4, !dbg !15028
  %inc123 = add nsw i32 %102, 1, !dbg !15028
  store i32 %inc123, i32* %i, align 4, !dbg !15028
  br label %for.cond55, !dbg !15030, !llvm.loop !15031

for.end124:                                       ; preds = %for.cond55
  store i32 0, i32* %i, align 4, !dbg !15033
  br label %for.cond125, !dbg !15035

for.cond125:                                      ; preds = %for.inc197, %for.end124
  %103 = load i32, i32* %i, align 4, !dbg !15036
  %104 = load i32, i32* %n2, align 4, !dbg !15039
  %cmp126 = icmp slt i32 %103, %104, !dbg !15040
  br i1 %cmp126, label %for.body128, label %for.end199, !dbg !15041

for.body128:                                      ; preds = %for.cond125
  %105 = load i32, i32* %i, align 4, !dbg !15042
  %idxprom129 = sext i32 %105 to i64, !dbg !15044
  %106 = load i32*, i32** %buf, align 8, !dbg !15044
  %arrayidx130 = getelementptr inbounds i32, i32* %106, i64 %idxprom129, !dbg !15044
  %107 = load i32, i32* %arrayidx130, align 4, !dbg !15044
  %conv131 = sext i32 %107 to i64, !dbg !15045
  %108 = load i32, i32* %i, align 4, !dbg !15046
  %109 = load i32, i32* %n2, align 4, !dbg !15047
  %add132 = add nsw i32 %108, %109, !dbg !15048
  %110 = load i32, i32* %n4, align 4, !dbg !15049
  %sub133 = sub nsw i32 %add132, %110, !dbg !15050
  %idxprom134 = sext i32 %sub133 to i64, !dbg !15051
  %111 = load i32*, i32** %window, align 8, !dbg !15051
  %arrayidx135 = getelementptr inbounds i32, i32* %111, i64 %idxprom134, !dbg !15051
  %112 = load i32, i32* %arrayidx135, align 4, !dbg !15051
  %conv136 = sext i32 %112 to i64, !dbg !15052
  %mul137 = mul nsw i64 %conv131, %conv136, !dbg !15053
  %add138 = add nsw i64 %mul137, 1073741824, !dbg !15054
  %shr139 = ashr i64 %add138, 31, !dbg !15055
  %conv140 = trunc i64 %shr139 to i32, !dbg !15056
  %113 = load i32, i32* %n, align 4, !dbg !15057
  %sub141 = sub nsw i32 %113, 1, !dbg !15058
  %114 = load i32, i32* %i, align 4, !dbg !15059
  %sub142 = sub nsw i32 %sub141, %114, !dbg !15060
  %idxprom143 = sext i32 %sub142 to i64, !dbg !15061
  %115 = load i32*, i32** %saved, align 8, !dbg !15061
  %arrayidx144 = getelementptr inbounds i32, i32* %115, i64 %idxprom143, !dbg !15061
  %116 = load i32, i32* %arrayidx144, align 4, !dbg !15061
  %sub145 = sub nsw i32 0, %116, !dbg !15062
  %conv146 = sext i32 %sub145 to i64, !dbg !15063
  %117 = load i32, i32* %i, align 4, !dbg !15064
  %118 = load i32, i32* %n2, align 4, !dbg !15065
  %add147 = add nsw i32 %117, %118, !dbg !15066
  %119 = load i32, i32* %n, align 4, !dbg !15067
  %add148 = add nsw i32 %add147, %119, !dbg !15068
  %120 = load i32, i32* %n4, align 4, !dbg !15069
  %sub149 = sub nsw i32 %add148, %120, !dbg !15070
  %idxprom150 = sext i32 %sub149 to i64, !dbg !15071
  %121 = load i32*, i32** %window, align 8, !dbg !15071
  %arrayidx151 = getelementptr inbounds i32, i32* %121, i64 %idxprom150, !dbg !15071
  %122 = load i32, i32* %arrayidx151, align 4, !dbg !15071
  %conv152 = sext i32 %122 to i64, !dbg !15072
  %mul153 = mul nsw i64 %conv146, %conv152, !dbg !15073
  %add154 = add nsw i64 %mul153, 1073741824, !dbg !15074
  %shr155 = ashr i64 %add154, 31, !dbg !15075
  %conv156 = trunc i64 %shr155 to i32, !dbg !15076
  %add157 = add nsw i32 %conv140, %conv156, !dbg !15077
  %123 = load i32, i32* %n, align 4, !dbg !15078
  %124 = load i32, i32* %i, align 4, !dbg !15079
  %add158 = add nsw i32 %123, %124, !dbg !15080
  %idxprom159 = sext i32 %add158 to i64, !dbg !15081
  %125 = load i32*, i32** %saved, align 8, !dbg !15081
  %arrayidx160 = getelementptr inbounds i32, i32* %125, i64 %idxprom159, !dbg !15081
  %126 = load i32, i32* %arrayidx160, align 4, !dbg !15081
  %sub161 = sub nsw i32 0, %126, !dbg !15082
  %conv162 = sext i32 %sub161 to i64, !dbg !15083
  %127 = load i32, i32* %i, align 4, !dbg !15084
  %128 = load i32, i32* %n2, align 4, !dbg !15085
  %add163 = add nsw i32 %127, %128, !dbg !15086
  %129 = load i32, i32* %n, align 4, !dbg !15087
  %mul164 = mul nsw i32 2, %129, !dbg !15088
  %add165 = add nsw i32 %add163, %mul164, !dbg !15089
  %130 = load i32, i32* %n4, align 4, !dbg !15090
  %sub166 = sub nsw i32 %add165, %130, !dbg !15091
  %idxprom167 = sext i32 %sub166 to i64, !dbg !15092
  %131 = load i32*, i32** %window, align 8, !dbg !15092
  %arrayidx168 = getelementptr inbounds i32, i32* %131, i64 %idxprom167, !dbg !15092
  %132 = load i32, i32* %arrayidx168, align 4, !dbg !15092
  %conv169 = sext i32 %132 to i64, !dbg !15093
  %mul170 = mul nsw i64 %conv162, %conv169, !dbg !15094
  %add171 = add nsw i64 %mul170, 1073741824, !dbg !15095
  %shr172 = ashr i64 %add171, 31, !dbg !15096
  %conv173 = trunc i64 %shr172 to i32, !dbg !15097
  %add174 = add nsw i32 %add157, %conv173, !dbg !15098
  %133 = load i32, i32* %n, align 4, !dbg !15099
  %mul175 = mul nsw i32 2, %133, !dbg !15100
  %134 = load i32, i32* %n, align 4, !dbg !15101
  %add176 = add nsw i32 %mul175, %134, !dbg !15102
  %sub177 = sub nsw i32 %add176, 1, !dbg !15103
  %135 = load i32, i32* %i, align 4, !dbg !15104
  %sub178 = sub nsw i32 %sub177, %135, !dbg !15105
  %idxprom179 = sext i32 %sub178 to i64, !dbg !15106
  %136 = load i32*, i32** %saved, align 8, !dbg !15106
  %arrayidx180 = getelementptr inbounds i32, i32* %136, i64 %idxprom179, !dbg !15106
  %137 = load i32, i32* %arrayidx180, align 4, !dbg !15106
  %conv181 = sext i32 %137 to i64, !dbg !15107
  %138 = load i32, i32* %i, align 4, !dbg !15108
  %139 = load i32, i32* %n2, align 4, !dbg !15109
  %add182 = add nsw i32 %138, %139, !dbg !15110
  %140 = load i32, i32* %n, align 4, !dbg !15111
  %mul183 = mul nsw i32 3, %140, !dbg !15112
  %add184 = add nsw i32 %add182, %mul183, !dbg !15113
  %141 = load i32, i32* %n4, align 4, !dbg !15114
  %sub185 = sub nsw i32 %add184, %141, !dbg !15115
  %idxprom186 = sext i32 %sub185 to i64, !dbg !15116
  %142 = load i32*, i32** %window, align 8, !dbg !15116
  %arrayidx187 = getelementptr inbounds i32, i32* %142, i64 %idxprom186, !dbg !15116
  %143 = load i32, i32* %arrayidx187, align 4, !dbg !15116
  %conv188 = sext i32 %143 to i64, !dbg !15117
  %mul189 = mul nsw i64 %conv181, %conv188, !dbg !15118
  %add190 = add nsw i64 %mul189, 1073741824, !dbg !15119
  %shr191 = ashr i64 %add190, 31, !dbg !15120
  %conv192 = trunc i64 %shr191 to i32, !dbg !15121
  %add193 = add nsw i32 %add174, %conv192, !dbg !15122
  %144 = load i32, i32* %n4, align 4, !dbg !15123
  %145 = load i32, i32* %i, align 4, !dbg !15124
  %add194 = add nsw i32 %144, %145, !dbg !15125
  %idxprom195 = sext i32 %add194 to i64, !dbg !15126
  %146 = load i32*, i32** %out, align 8, !dbg !15126
  %arrayidx196 = getelementptr inbounds i32, i32* %146, i64 %idxprom195, !dbg !15126
  store i32 %add193, i32* %arrayidx196, align 4, !dbg !15127
  br label %for.inc197, !dbg !15128

for.inc197:                                       ; preds = %for.body128
  %147 = load i32, i32* %i, align 4, !dbg !15129
  %inc198 = add nsw i32 %147, 1, !dbg !15129
  store i32 %inc198, i32* %i, align 4, !dbg !15129
  br label %for.cond125, !dbg !15131, !llvm.loop !15132

for.end199:                                       ; preds = %for.cond125
  store i32 0, i32* %i, align 4, !dbg !15134
  br label %for.cond200, !dbg !15136

for.cond200:                                      ; preds = %for.inc255, %for.end199
  %148 = load i32, i32* %i, align 4, !dbg !15137
  %149 = load i32, i32* %n4, align 4, !dbg !15140
  %cmp201 = icmp slt i32 %148, %149, !dbg !15141
  br i1 %cmp201, label %for.body203, label %for.end257, !dbg !15142

for.body203:                                      ; preds = %for.cond200
  %150 = load i32, i32* %i, align 4, !dbg !15143
  %151 = load i32, i32* %n2, align 4, !dbg !15145
  %add204 = add nsw i32 %150, %151, !dbg !15146
  %idxprom205 = sext i32 %add204 to i64, !dbg !15147
  %152 = load i32*, i32** %buf, align 8, !dbg !15147
  %arrayidx206 = getelementptr inbounds i32, i32* %152, i64 %idxprom205, !dbg !15147
  %153 = load i32, i32* %arrayidx206, align 4, !dbg !15147
  %conv207 = sext i32 %153 to i64, !dbg !15148
  %154 = load i32, i32* %i, align 4, !dbg !15149
  %155 = load i32, i32* %n, align 4, !dbg !15150
  %add208 = add nsw i32 %154, %155, !dbg !15151
  %156 = load i32, i32* %n4, align 4, !dbg !15152
  %sub209 = sub nsw i32 %add208, %156, !dbg !15153
  %idxprom210 = sext i32 %sub209 to i64, !dbg !15154
  %157 = load i32*, i32** %window, align 8, !dbg !15154
  %arrayidx211 = getelementptr inbounds i32, i32* %157, i64 %idxprom210, !dbg !15154
  %158 = load i32, i32* %arrayidx211, align 4, !dbg !15154
  %conv212 = sext i32 %158 to i64, !dbg !15155
  %mul213 = mul nsw i64 %conv207, %conv212, !dbg !15156
  %add214 = add nsw i64 %mul213, 1073741824, !dbg !15157
  %shr215 = ashr i64 %add214, 31, !dbg !15158
  %conv216 = trunc i64 %shr215 to i32, !dbg !15159
  %159 = load i32, i32* %n2, align 4, !dbg !15160
  %sub217 = sub nsw i32 %159, 1, !dbg !15161
  %160 = load i32, i32* %i, align 4, !dbg !15162
  %sub218 = sub nsw i32 %sub217, %160, !dbg !15163
  %idxprom219 = sext i32 %sub218 to i64, !dbg !15164
  %161 = load i32*, i32** %saved, align 8, !dbg !15164
  %arrayidx220 = getelementptr inbounds i32, i32* %161, i64 %idxprom219, !dbg !15164
  %162 = load i32, i32* %arrayidx220, align 4, !dbg !15164
  %sub221 = sub nsw i32 0, %162, !dbg !15165
  %conv222 = sext i32 %sub221 to i64, !dbg !15166
  %163 = load i32, i32* %i, align 4, !dbg !15167
  %164 = load i32, i32* %n, align 4, !dbg !15168
  %mul223 = mul nsw i32 2, %164, !dbg !15169
  %add224 = add nsw i32 %163, %mul223, !dbg !15170
  %165 = load i32, i32* %n4, align 4, !dbg !15171
  %sub225 = sub nsw i32 %add224, %165, !dbg !15172
  %idxprom226 = sext i32 %sub225 to i64, !dbg !15173
  %166 = load i32*, i32** %window, align 8, !dbg !15173
  %arrayidx227 = getelementptr inbounds i32, i32* %166, i64 %idxprom226, !dbg !15173
  %167 = load i32, i32* %arrayidx227, align 4, !dbg !15173
  %conv228 = sext i32 %167 to i64, !dbg !15174
  %mul229 = mul nsw i64 %conv222, %conv228, !dbg !15175
  %add230 = add nsw i64 %mul229, 1073741824, !dbg !15176
  %shr231 = ashr i64 %add230, 31, !dbg !15177
  %conv232 = trunc i64 %shr231 to i32, !dbg !15178
  %add233 = add nsw i32 %conv216, %conv232, !dbg !15179
  %168 = load i32, i32* %n, align 4, !dbg !15180
  %169 = load i32, i32* %n2, align 4, !dbg !15181
  %add234 = add nsw i32 %168, %169, !dbg !15182
  %170 = load i32, i32* %i, align 4, !dbg !15183
  %add235 = add nsw i32 %add234, %170, !dbg !15184
  %idxprom236 = sext i32 %add235 to i64, !dbg !15185
  %171 = load i32*, i32** %saved, align 8, !dbg !15185
  %arrayidx237 = getelementptr inbounds i32, i32* %171, i64 %idxprom236, !dbg !15185
  %172 = load i32, i32* %arrayidx237, align 4, !dbg !15185
  %sub238 = sub nsw i32 0, %172, !dbg !15186
  %conv239 = sext i32 %sub238 to i64, !dbg !15187
  %173 = load i32, i32* %i, align 4, !dbg !15188
  %174 = load i32, i32* %n, align 4, !dbg !15189
  %mul240 = mul nsw i32 3, %174, !dbg !15190
  %add241 = add nsw i32 %173, %mul240, !dbg !15191
  %175 = load i32, i32* %n4, align 4, !dbg !15192
  %sub242 = sub nsw i32 %add241, %175, !dbg !15193
  %idxprom243 = sext i32 %sub242 to i64, !dbg !15194
  %176 = load i32*, i32** %window, align 8, !dbg !15194
  %arrayidx244 = getelementptr inbounds i32, i32* %176, i64 %idxprom243, !dbg !15194
  %177 = load i32, i32* %arrayidx244, align 4, !dbg !15194
  %conv245 = sext i32 %177 to i64, !dbg !15195
  %mul246 = mul nsw i64 %conv239, %conv245, !dbg !15196
  %add247 = add nsw i64 %mul246, 1073741824, !dbg !15197
  %shr248 = ashr i64 %add247, 31, !dbg !15198
  %conv249 = trunc i64 %shr248 to i32, !dbg !15199
  %add250 = add nsw i32 %add233, %conv249, !dbg !15200
  %178 = load i32, i32* %n2, align 4, !dbg !15201
  %179 = load i32, i32* %n4, align 4, !dbg !15202
  %add251 = add nsw i32 %178, %179, !dbg !15203
  %180 = load i32, i32* %i, align 4, !dbg !15204
  %add252 = add nsw i32 %add251, %180, !dbg !15205
  %idxprom253 = sext i32 %add252 to i64, !dbg !15206
  %181 = load i32*, i32** %out, align 8, !dbg !15206
  %arrayidx254 = getelementptr inbounds i32, i32* %181, i64 %idxprom253, !dbg !15206
  store i32 %add250, i32* %arrayidx254, align 4, !dbg !15207
  br label %for.inc255, !dbg !15208

for.inc255:                                       ; preds = %for.body203
  %182 = load i32, i32* %i, align 4, !dbg !15209
  %inc256 = add nsw i32 %182, 1, !dbg !15209
  store i32 %inc256, i32* %i, align 4, !dbg !15209
  br label %for.cond200, !dbg !15211, !llvm.loop !15212

for.end257:                                       ; preds = %for.cond200
  %183 = load i32*, i32** %saved, align 8, !dbg !15214
  %184 = load i32, i32* %n, align 4, !dbg !15215
  %idx.ext = sext i32 %184 to i64, !dbg !15216
  %add.ptr = getelementptr inbounds i32, i32* %183, i64 %idx.ext, !dbg !15216
  %185 = bitcast i32* %add.ptr to i8*, !dbg !15217
  %186 = load i32*, i32** %saved, align 8, !dbg !15218
  %187 = bitcast i32* %186 to i8*, !dbg !15217
  %188 = load i32, i32* %n, align 4, !dbg !15219
  %mul258 = mul nsw i32 2, %188, !dbg !15220
  %conv259 = sext i32 %mul258 to i64, !dbg !15221
  %mul260 = mul i64 %conv259, 4, !dbg !15222
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %185, i8* %187, i64 %mul260, i32 4, i1 false), !dbg !15217
  %189 = load i32*, i32** %saved, align 8, !dbg !15223
  %190 = bitcast i32* %189 to i8*, !dbg !15224
  %191 = load i32*, i32** %buf, align 8, !dbg !15225
  %192 = bitcast i32* %191 to i8*, !dbg !15224
  %193 = load i32, i32* %n, align 4, !dbg !15226
  %conv261 = sext i32 %193 to i64, !dbg !15226
  %mul262 = mul i64 %conv261, 4, !dbg !15227
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %190, i8* %192, i64 %mul262, i32 4, i1 false), !dbg !15224
  ret void, !dbg !15228
}

; Function Attrs: nounwind uwtable
define internal void @imdct_and_windowing_960(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !15229 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !15230, metadata !2068), !dbg !15231
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !15232, metadata !2068), !dbg !15233
  ret void, !dbg !15234
}

; Function Attrs: nounwind uwtable
define internal void @apply_channel_coupling(%struct.AACContext* %ac, %struct.ChannelElement* %cc, i32 %type, i32 %elem_id, i32 %coupling_point, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)* %apply_coupling_method) #1 !dbg !15235 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %cc.addr = alloca %struct.ChannelElement*, align 8
  %type.addr = alloca i32, align 4
  %elem_id.addr = alloca i32, align 4
  %coupling_point.addr = alloca i32, align 4
  %apply_coupling_method.addr = alloca void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)*, align 8
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %cce = alloca %struct.ChannelElement*, align 8
  %index = alloca i32, align 4
  %coup4 = alloca %struct.ChannelCoupling*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !15241, metadata !2068), !dbg !15242
  store %struct.ChannelElement* %cc, %struct.ChannelElement** %cc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cc.addr, metadata !15243, metadata !2068), !dbg !15244
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !15245, metadata !2068), !dbg !15246
  store i32 %elem_id, i32* %elem_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elem_id.addr, metadata !15247, metadata !2068), !dbg !15248
  store i32 %coupling_point, i32* %coupling_point.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %coupling_point.addr, metadata !15249, metadata !2068), !dbg !15250
  store void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)* %apply_coupling_method, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)** %apply_coupling_method.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)** %apply_coupling_method.addr, metadata !15251, metadata !2068), !dbg !15252
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15253, metadata !2068), !dbg !15254
  call void @llvm.dbg.declare(metadata i32* %c, metadata !15255, metadata !2068), !dbg !15256
  store i32 0, i32* %i, align 4, !dbg !15257
  br label %for.cond, !dbg !15259

for.cond:                                         ; preds = %for.inc46, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15260
  %cmp = icmp slt i32 %0, 16, !dbg !15263
  br i1 %cmp, label %for.body, label %for.end48, !dbg !15264

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cce, metadata !15265, metadata !2068), !dbg !15267
  %1 = load i32, i32* %i, align 4, !dbg !15268
  %idxprom = sext i32 %1 to i64, !dbg !15269
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15269
  %che = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 5, !dbg !15270
  %arrayidx = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che, i64 0, i64 2, !dbg !15269
  %arrayidx1 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx, i64 0, i64 %idxprom, !dbg !15269
  %3 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx1, align 8, !dbg !15269
  store %struct.ChannelElement* %3, %struct.ChannelElement** %cce, align 8, !dbg !15267
  call void @llvm.dbg.declare(metadata i32* %index, metadata !15271, metadata !2068), !dbg !15272
  store i32 0, i32* %index, align 4, !dbg !15272
  %4 = load %struct.ChannelElement*, %struct.ChannelElement** %cce, align 8, !dbg !15273
  %tobool = icmp ne %struct.ChannelElement* %4, null, !dbg !15273
  br i1 %tobool, label %land.lhs.true, label %if.end45, !dbg !15275

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.ChannelElement*, %struct.ChannelElement** %cce, align 8, !dbg !15276
  %coup = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %5, i32 0, i32 8, !dbg !15278
  %coupling_point2 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %coup, i32 0, i32 0, !dbg !15279
  %6 = load i32, i32* %coupling_point2, align 32, !dbg !15279
  %7 = load i32, i32* %coupling_point.addr, align 4, !dbg !15280
  %cmp3 = icmp eq i32 %6, %7, !dbg !15281
  br i1 %cmp3, label %if.then, label %if.end45, !dbg !15282

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ChannelCoupling** %coup4, metadata !15283, metadata !2068), !dbg !15286
  %8 = load %struct.ChannelElement*, %struct.ChannelElement** %cce, align 8, !dbg !15287
  %coup5 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %8, i32 0, i32 8, !dbg !15288
  store %struct.ChannelCoupling* %coup5, %struct.ChannelCoupling** %coup4, align 8, !dbg !15286
  store i32 0, i32* %c, align 4, !dbg !15289
  br label %for.cond6, !dbg !15291

for.cond6:                                        ; preds = %for.inc, %if.then
  %9 = load i32, i32* %c, align 4, !dbg !15292
  %10 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !15295
  %num_coupled = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %10, i32 0, i32 1, !dbg !15296
  %11 = load i32, i32* %num_coupled, align 4, !dbg !15296
  %cmp7 = icmp sle i32 %9, %11, !dbg !15297
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !15298

for.body8:                                        ; preds = %for.cond6
  %12 = load i32, i32* %c, align 4, !dbg !15299
  %idxprom9 = sext i32 %12 to i64, !dbg !15302
  %13 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !15302
  %type10 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %13, i32 0, i32 2, !dbg !15303
  %arrayidx11 = getelementptr inbounds [8 x i32], [8 x i32]* %type10, i64 0, i64 %idxprom9, !dbg !15302
  %14 = load i32, i32* %arrayidx11, align 4, !dbg !15302
  %15 = load i32, i32* %type.addr, align 4, !dbg !15304
  %cmp12 = icmp eq i32 %14, %15, !dbg !15305
  br i1 %cmp12, label %land.lhs.true13, label %if.else, !dbg !15306

land.lhs.true13:                                  ; preds = %for.body8
  %16 = load i32, i32* %c, align 4, !dbg !15307
  %idxprom14 = sext i32 %16 to i64, !dbg !15309
  %17 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !15309
  %id_select = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %17, i32 0, i32 3, !dbg !15310
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %id_select, i64 0, i64 %idxprom14, !dbg !15309
  %18 = load i32, i32* %arrayidx15, align 4, !dbg !15309
  %19 = load i32, i32* %elem_id.addr, align 4, !dbg !15311
  %cmp16 = icmp eq i32 %18, %19, !dbg !15312
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !15313

if.then17:                                        ; preds = %land.lhs.true13
  %20 = load i32, i32* %c, align 4, !dbg !15314
  %idxprom18 = sext i32 %20 to i64, !dbg !15317
  %21 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !15317
  %ch_select = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %21, i32 0, i32 4, !dbg !15318
  %arrayidx19 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select, i64 0, i64 %idxprom18, !dbg !15317
  %22 = load i32, i32* %arrayidx19, align 4, !dbg !15317
  %cmp20 = icmp ne i32 %22, 1, !dbg !15319
  br i1 %cmp20, label %if.then21, label %if.end28, !dbg !15320

if.then21:                                        ; preds = %if.then17
  %23 = load void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)*, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)** %apply_coupling_method.addr, align 8, !dbg !15321
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15323
  %25 = load %struct.ChannelElement*, %struct.ChannelElement** %cc.addr, align 8, !dbg !15324
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %25, i32 0, i32 7, !dbg !15325
  %arrayidx22 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !15324
  %26 = load %struct.ChannelElement*, %struct.ChannelElement** %cce, align 8, !dbg !15326
  %27 = load i32, i32* %index, align 4, !dbg !15327
  call void %23(%struct.AACContext* %24, %struct.SingleChannelElement* %arrayidx22, %struct.ChannelElement* %26, i32 %27), !dbg !15321
  %28 = load i32, i32* %c, align 4, !dbg !15328
  %idxprom23 = sext i32 %28 to i64, !dbg !15330
  %29 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !15330
  %ch_select24 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %29, i32 0, i32 4, !dbg !15331
  %arrayidx25 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select24, i64 0, i64 %idxprom23, !dbg !15330
  %30 = load i32, i32* %arrayidx25, align 4, !dbg !15330
  %cmp26 = icmp ne i32 %30, 0, !dbg !15332
  br i1 %cmp26, label %if.then27, label %if.end, !dbg !15333

if.then27:                                        ; preds = %if.then21
  %31 = load i32, i32* %index, align 4, !dbg !15334
  %inc = add nsw i32 %31, 1, !dbg !15334
  store i32 %inc, i32* %index, align 4, !dbg !15334
  br label %if.end, !dbg !15335

if.end:                                           ; preds = %if.then27, %if.then21
  br label %if.end28, !dbg !15336

if.end28:                                         ; preds = %if.end, %if.then17
  %32 = load i32, i32* %c, align 4, !dbg !15337
  %idxprom29 = sext i32 %32 to i64, !dbg !15339
  %33 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !15339
  %ch_select30 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %33, i32 0, i32 4, !dbg !15340
  %arrayidx31 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select30, i64 0, i64 %idxprom29, !dbg !15339
  %34 = load i32, i32* %arrayidx31, align 4, !dbg !15339
  %cmp32 = icmp ne i32 %34, 2, !dbg !15341
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !15342

if.then33:                                        ; preds = %if.end28
  %35 = load void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)*, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)** %apply_coupling_method.addr, align 8, !dbg !15343
  %36 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15344
  %37 = load %struct.ChannelElement*, %struct.ChannelElement** %cc.addr, align 8, !dbg !15345
  %ch34 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %37, i32 0, i32 7, !dbg !15346
  %arrayidx35 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch34, i64 0, i64 1, !dbg !15345
  %38 = load %struct.ChannelElement*, %struct.ChannelElement** %cce, align 8, !dbg !15347
  %39 = load i32, i32* %index, align 4, !dbg !15348
  %inc36 = add nsw i32 %39, 1, !dbg !15348
  store i32 %inc36, i32* %index, align 4, !dbg !15348
  call void %35(%struct.AACContext* %36, %struct.SingleChannelElement* %arrayidx35, %struct.ChannelElement* %38, i32 %39), !dbg !15343
  br label %if.end37, !dbg !15343

if.end37:                                         ; preds = %if.then33, %if.end28
  br label %if.end43, !dbg !15349

if.else:                                          ; preds = %land.lhs.true13, %for.body8
  %40 = load i32, i32* %c, align 4, !dbg !15350
  %idxprom38 = sext i32 %40 to i64, !dbg !15351
  %41 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !15351
  %ch_select39 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %41, i32 0, i32 4, !dbg !15352
  %arrayidx40 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select39, i64 0, i64 %idxprom38, !dbg !15351
  %42 = load i32, i32* %arrayidx40, align 4, !dbg !15351
  %cmp41 = icmp eq i32 %42, 3, !dbg !15353
  %conv = zext i1 %cmp41 to i32, !dbg !15353
  %add = add nsw i32 1, %conv, !dbg !15354
  %43 = load i32, i32* %index, align 4, !dbg !15355
  %add42 = add nsw i32 %43, %add, !dbg !15355
  store i32 %add42, i32* %index, align 4, !dbg !15355
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.end37
  br label %for.inc, !dbg !15356

for.inc:                                          ; preds = %if.end43
  %44 = load i32, i32* %c, align 4, !dbg !15357
  %inc44 = add nsw i32 %44, 1, !dbg !15357
  store i32 %inc44, i32* %c, align 4, !dbg !15357
  br label %for.cond6, !dbg !15359, !llvm.loop !15360

for.end:                                          ; preds = %for.cond6
  br label %if.end45, !dbg !15362

if.end45:                                         ; preds = %for.end, %land.lhs.true, %for.body
  br label %for.inc46, !dbg !15363

for.inc46:                                        ; preds = %if.end45
  %45 = load i32, i32* %i, align 4, !dbg !15364
  %inc47 = add nsw i32 %45, 1, !dbg !15364
  store i32 %inc47, i32* %i, align 4, !dbg !15364
  br label %for.cond, !dbg !15366, !llvm.loop !15367

for.end48:                                        ; preds = %for.cond
  ret void, !dbg !15369
}

; Function Attrs: nounwind uwtable
define internal void @apply_dependent_coupling_fixed(%struct.AACContext* %ac, %struct.SingleChannelElement* %target, %struct.ChannelElement* %cce, i32 %index) #1 !dbg !15370 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %target.addr = alloca %struct.SingleChannelElement*, align 8
  %cce.addr = alloca %struct.ChannelElement*, align 8
  %index.addr = alloca i32, align 4
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %offsets = alloca i16*, align 8
  %dest = alloca i32*, align 8
  %src = alloca i32*, align 8
  %g = alloca i32, align 4
  %i = alloca i32, align 4
  %group = alloca i32, align 4
  %k = alloca i32, align 4
  %idx = alloca i32, align 4
  %gain = alloca i32, align 4
  %shift = alloca i32, align 4
  %round = alloca i32, align 4
  %c = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !15371, metadata !2068), !dbg !15372
  store %struct.SingleChannelElement* %target, %struct.SingleChannelElement** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %target.addr, metadata !15373, metadata !2068), !dbg !15374
  store %struct.ChannelElement* %cce, %struct.ChannelElement** %cce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cce.addr, metadata !15375, metadata !2068), !dbg !15376
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !15377, metadata !2068), !dbg !15378
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !15379, metadata !2068), !dbg !15380
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %cce.addr, align 8, !dbg !15381
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !15382
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !15381
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx, i32 0, i32 0, !dbg !15383
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !15380
  call void @llvm.dbg.declare(metadata i16** %offsets, metadata !15384, metadata !2068), !dbg !15385
  %1 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !15386
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %1, i32 0, i32 6, !dbg !15387
  %2 = load i16*, i16** %swb_offset, align 8, !dbg !15387
  store i16* %2, i16** %offsets, align 8, !dbg !15385
  call void @llvm.dbg.declare(metadata i32** %dest, metadata !15388, metadata !2068), !dbg !15389
  %3 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %target.addr, align 8, !dbg !15390
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %3, i32 0, i32 14, !dbg !15391
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs, i32 0, i32 0, !dbg !15390
  store i32* %arraydecay, i32** %dest, align 8, !dbg !15389
  call void @llvm.dbg.declare(metadata i32** %src, metadata !15392, metadata !2068), !dbg !15393
  %4 = load %struct.ChannelElement*, %struct.ChannelElement** %cce.addr, align 8, !dbg !15394
  %ch2 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %4, i32 0, i32 7, !dbg !15395
  %arrayidx3 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch2, i64 0, i64 0, !dbg !15394
  %coeffs4 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx3, i32 0, i32 14, !dbg !15396
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %coeffs4, i32 0, i32 0, !dbg !15394
  store i32* %arraydecay5, i32** %src, align 8, !dbg !15393
  call void @llvm.dbg.declare(metadata i32* %g, metadata !15397, metadata !2068), !dbg !15398
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15399, metadata !2068), !dbg !15400
  call void @llvm.dbg.declare(metadata i32* %group, metadata !15401, metadata !2068), !dbg !15402
  call void @llvm.dbg.declare(metadata i32* %k, metadata !15403, metadata !2068), !dbg !15404
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15405, metadata !2068), !dbg !15406
  store i32 0, i32* %idx, align 4, !dbg !15406
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15407
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 21, !dbg !15409
  %arrayidx6 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !15407
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx6, i32 0, i32 0, !dbg !15410
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 0, !dbg !15411
  %6 = load i32, i32* %object_type, align 8, !dbg !15411
  %cmp = icmp eq i32 %6, 4, !dbg !15412
  br i1 %cmp, label %if.then, label %if.end, !dbg !15413

if.then:                                          ; preds = %entry
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15414
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 1, !dbg !15416
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !15416
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !15414
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i32 0, i32 0)), !dbg !15417
  br label %for.end150, !dbg !15418

if.end:                                           ; preds = %entry
  store i32 0, i32* %g, align 4, !dbg !15419
  br label %for.cond, !dbg !15421

for.cond:                                         ; preds = %for.inc148, %if.end
  %10 = load i32, i32* %g, align 4, !dbg !15422
  %11 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !15425
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %11, i32 0, i32 3, !dbg !15426
  %12 = load i32, i32* %num_window_groups, align 8, !dbg !15426
  %cmp7 = icmp slt i32 %10, %12, !dbg !15427
  br i1 %cmp7, label %for.body, label %for.end150, !dbg !15428

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !15429
  br label %for.cond8, !dbg !15432

for.cond8:                                        ; preds = %for.inc132, %for.body
  %13 = load i32, i32* %i, align 4, !dbg !15433
  %14 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !15436
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %14, i32 0, i32 0, !dbg !15437
  %15 = load i8, i8* %max_sfb, align 8, !dbg !15437
  %conv = zext i8 %15 to i32, !dbg !15436
  %cmp9 = icmp slt i32 %13, %conv, !dbg !15438
  br i1 %cmp9, label %for.body11, label %for.end135, !dbg !15439

for.body11:                                       ; preds = %for.cond8
  %16 = load i32, i32* %idx, align 4, !dbg !15440
  %idxprom = sext i32 %16 to i64, !dbg !15443
  %17 = load %struct.ChannelElement*, %struct.ChannelElement** %cce.addr, align 8, !dbg !15443
  %ch12 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %17, i32 0, i32 7, !dbg !15444
  %arrayidx13 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch12, i64 0, i64 0, !dbg !15443
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx13, i32 0, i32 3, !dbg !15445
  %arrayidx14 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom, !dbg !15443
  %18 = load i32, i32* %arrayidx14, align 4, !dbg !15443
  %cmp15 = icmp ne i32 %18, 0, !dbg !15446
  br i1 %cmp15, label %if.then17, label %if.end131, !dbg !15447

if.then17:                                        ; preds = %for.body11
  call void @llvm.dbg.declare(metadata i32* %gain, metadata !15448, metadata !2068), !dbg !15450
  %19 = load i32, i32* %idx, align 4, !dbg !15451
  %idxprom18 = sext i32 %19 to i64, !dbg !15452
  %20 = load i32, i32* %index.addr, align 4, !dbg !15453
  %idxprom19 = sext i32 %20 to i64, !dbg !15452
  %21 = load %struct.ChannelElement*, %struct.ChannelElement** %cce.addr, align 8, !dbg !15452
  %coup = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %21, i32 0, i32 8, !dbg !15454
  %gain20 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %coup, i32 0, i32 5, !dbg !15455
  %arrayidx21 = getelementptr inbounds [16 x [120 x i32]], [16 x [120 x i32]]* %gain20, i64 0, i64 %idxprom19, !dbg !15452
  %arrayidx22 = getelementptr inbounds [120 x i32], [120 x i32]* %arrayidx21, i64 0, i64 %idxprom18, !dbg !15452
  %22 = load i32, i32* %arrayidx22, align 4, !dbg !15452
  store i32 %22, i32* %gain, align 4, !dbg !15450
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !15456, metadata !2068), !dbg !15457
  call void @llvm.dbg.declare(metadata i32* %round, metadata !15458, metadata !2068), !dbg !15459
  call void @llvm.dbg.declare(metadata i32* %c, metadata !15460, metadata !2068), !dbg !15461
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !15462, metadata !2068), !dbg !15463
  %23 = load i32, i32* %gain, align 4, !dbg !15464
  %cmp23 = icmp slt i32 %23, 0, !dbg !15466
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !15467

if.then25:                                        ; preds = %if.then17
  %24 = load i32, i32* %gain, align 4, !dbg !15468
  %sub = sub nsw i32 0, %24, !dbg !15470
  %and = and i32 %sub, 7, !dbg !15471
  %idxprom26 = sext i32 %and to i64, !dbg !15472
  %arrayidx27 = getelementptr inbounds [8 x i32], [8 x i32]* @cce_scale_fixed, i64 0, i64 %idxprom26, !dbg !15472
  %25 = load i32, i32* %arrayidx27, align 4, !dbg !15472
  %sub28 = sub nsw i32 0, %25, !dbg !15473
  store i32 %sub28, i32* %c, align 4, !dbg !15474
  %26 = load i32, i32* %gain, align 4, !dbg !15475
  %sub29 = sub nsw i32 0, %26, !dbg !15476
  %sub30 = sub nsw i32 %sub29, 1024, !dbg !15477
  %shr = ashr i32 %sub30, 3, !dbg !15478
  store i32 %shr, i32* %shift, align 4, !dbg !15479
  br label %if.end36, !dbg !15480

if.else:                                          ; preds = %if.then17
  %27 = load i32, i32* %gain, align 4, !dbg !15481
  %and31 = and i32 %27, 7, !dbg !15483
  %idxprom32 = sext i32 %and31 to i64, !dbg !15484
  %arrayidx33 = getelementptr inbounds [8 x i32], [8 x i32]* @cce_scale_fixed, i64 0, i64 %idxprom32, !dbg !15484
  %28 = load i32, i32* %arrayidx33, align 4, !dbg !15484
  store i32 %28, i32* %c, align 4, !dbg !15485
  %29 = load i32, i32* %gain, align 4, !dbg !15486
  %sub34 = sub nsw i32 %29, 1024, !dbg !15487
  %shr35 = ashr i32 %sub34, 3, !dbg !15488
  store i32 %shr35, i32* %shift, align 4, !dbg !15489
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then25
  %30 = load i32, i32* %shift, align 4, !dbg !15490
  %cmp37 = icmp slt i32 %30, -31, !dbg !15492
  br i1 %cmp37, label %if.then39, label %if.else40, !dbg !15493

if.then39:                                        ; preds = %if.end36
  br label %if.end130, !dbg !15494

if.else40:                                        ; preds = %if.end36
  %31 = load i32, i32* %shift, align 4, !dbg !15496
  %cmp41 = icmp slt i32 %31, 0, !dbg !15499
  br i1 %cmp41, label %if.then43, label %if.else86, !dbg !15496

if.then43:                                        ; preds = %if.else40
  %32 = load i32, i32* %shift, align 4, !dbg !15500
  %sub44 = sub nsw i32 0, %32, !dbg !15502
  store i32 %sub44, i32* %shift, align 4, !dbg !15503
  %33 = load i32, i32* %shift, align 4, !dbg !15504
  %sub45 = sub nsw i32 %33, 1, !dbg !15505
  %shl = shl i32 1, %sub45, !dbg !15506
  store i32 %shl, i32* %round, align 4, !dbg !15507
  store i32 0, i32* %group, align 4, !dbg !15508
  br label %for.cond46, !dbg !15510

for.cond46:                                       ; preds = %for.inc83, %if.then43
  %34 = load i32, i32* %group, align 4, !dbg !15511
  %35 = load i32, i32* %g, align 4, !dbg !15514
  %idxprom47 = sext i32 %35 to i64, !dbg !15515
  %36 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !15515
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %36, i32 0, i32 4, !dbg !15516
  %arrayidx48 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom47, !dbg !15515
  %37 = load i8, i8* %arrayidx48, align 1, !dbg !15515
  %conv49 = zext i8 %37 to i32, !dbg !15515
  %cmp50 = icmp slt i32 %34, %conv49, !dbg !15517
  br i1 %cmp50, label %for.body52, label %for.end85, !dbg !15518

for.body52:                                       ; preds = %for.cond46
  %38 = load i32, i32* %i, align 4, !dbg !15519
  %idxprom53 = sext i32 %38 to i64, !dbg !15522
  %39 = load i16*, i16** %offsets, align 8, !dbg !15522
  %arrayidx54 = getelementptr inbounds i16, i16* %39, i64 %idxprom53, !dbg !15522
  %40 = load i16, i16* %arrayidx54, align 2, !dbg !15522
  %conv55 = zext i16 %40 to i32, !dbg !15522
  store i32 %conv55, i32* %k, align 4, !dbg !15523
  br label %for.cond56, !dbg !15524

for.cond56:                                       ; preds = %for.inc, %for.body52
  %41 = load i32, i32* %k, align 4, !dbg !15525
  %42 = load i32, i32* %i, align 4, !dbg !15528
  %add = add nsw i32 %42, 1, !dbg !15529
  %idxprom57 = sext i32 %add to i64, !dbg !15530
  %43 = load i16*, i16** %offsets, align 8, !dbg !15530
  %arrayidx58 = getelementptr inbounds i16, i16* %43, i64 %idxprom57, !dbg !15530
  %44 = load i16, i16* %arrayidx58, align 2, !dbg !15530
  %conv59 = zext i16 %44 to i32, !dbg !15530
  %cmp60 = icmp slt i32 %41, %conv59, !dbg !15531
  br i1 %cmp60, label %for.body62, label %for.end, !dbg !15532

for.body62:                                       ; preds = %for.cond56
  %45 = load i32, i32* %group, align 4, !dbg !15533
  %mul = mul nsw i32 %45, 128, !dbg !15535
  %46 = load i32, i32* %k, align 4, !dbg !15536
  %add63 = add nsw i32 %mul, %46, !dbg !15537
  %idxprom64 = sext i32 %add63 to i64, !dbg !15538
  %47 = load i32*, i32** %src, align 8, !dbg !15538
  %arrayidx65 = getelementptr inbounds i32, i32* %47, i64 %idxprom64, !dbg !15538
  %48 = load i32, i32* %arrayidx65, align 4, !dbg !15538
  %conv66 = sext i32 %48 to i64, !dbg !15539
  %49 = load i32, i32* %c, align 4, !dbg !15540
  %conv67 = sext i32 %49 to i64, !dbg !15540
  %mul68 = mul nsw i64 %conv66, %conv67, !dbg !15541
  %add69 = add nsw i64 %mul68, 68719476736, !dbg !15542
  %shr70 = ashr i64 %add69, 37, !dbg !15543
  %conv71 = trunc i64 %shr70 to i32, !dbg !15544
  store i32 %conv71, i32* %tmp, align 4, !dbg !15545
  %50 = load i32, i32* %tmp, align 4, !dbg !15546
  %conv72 = sext i32 %50 to i64, !dbg !15546
  %51 = load i32, i32* %round, align 4, !dbg !15547
  %conv73 = sext i32 %51 to i64, !dbg !15548
  %add74 = add nsw i64 %conv72, %conv73, !dbg !15549
  %52 = load i32, i32* %shift, align 4, !dbg !15550
  %sh_prom = zext i32 %52 to i64, !dbg !15551
  %shr75 = ashr i64 %add74, %sh_prom, !dbg !15551
  %53 = load i32, i32* %group, align 4, !dbg !15552
  %mul76 = mul nsw i32 %53, 128, !dbg !15553
  %54 = load i32, i32* %k, align 4, !dbg !15554
  %add77 = add nsw i32 %mul76, %54, !dbg !15555
  %idxprom78 = sext i32 %add77 to i64, !dbg !15556
  %55 = load i32*, i32** %dest, align 8, !dbg !15556
  %arrayidx79 = getelementptr inbounds i32, i32* %55, i64 %idxprom78, !dbg !15556
  %56 = load i32, i32* %arrayidx79, align 4, !dbg !15557
  %conv80 = sext i32 %56 to i64, !dbg !15557
  %add81 = add nsw i64 %conv80, %shr75, !dbg !15557
  %conv82 = trunc i64 %add81 to i32, !dbg !15557
  store i32 %conv82, i32* %arrayidx79, align 4, !dbg !15557
  br label %for.inc, !dbg !15558

for.inc:                                          ; preds = %for.body62
  %57 = load i32, i32* %k, align 4, !dbg !15559
  %inc = add nsw i32 %57, 1, !dbg !15559
  store i32 %inc, i32* %k, align 4, !dbg !15559
  br label %for.cond56, !dbg !15561, !llvm.loop !15562

for.end:                                          ; preds = %for.cond56
  br label %for.inc83, !dbg !15564

for.inc83:                                        ; preds = %for.end
  %58 = load i32, i32* %group, align 4, !dbg !15565
  %inc84 = add nsw i32 %58, 1, !dbg !15565
  store i32 %inc84, i32* %group, align 4, !dbg !15565
  br label %for.cond46, !dbg !15567, !llvm.loop !15568

for.end85:                                        ; preds = %for.cond46
  br label %if.end129, !dbg !15570

if.else86:                                        ; preds = %if.else40
  store i32 0, i32* %group, align 4, !dbg !15571
  br label %for.cond87, !dbg !15574

for.cond87:                                       ; preds = %for.inc126, %if.else86
  %59 = load i32, i32* %group, align 4, !dbg !15575
  %60 = load i32, i32* %g, align 4, !dbg !15578
  %idxprom88 = sext i32 %60 to i64, !dbg !15579
  %61 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !15579
  %group_len89 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %61, i32 0, i32 4, !dbg !15580
  %arrayidx90 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len89, i64 0, i64 %idxprom88, !dbg !15579
  %62 = load i8, i8* %arrayidx90, align 1, !dbg !15579
  %conv91 = zext i8 %62 to i32, !dbg !15579
  %cmp92 = icmp slt i32 %59, %conv91, !dbg !15581
  br i1 %cmp92, label %for.body94, label %for.end128, !dbg !15582

for.body94:                                       ; preds = %for.cond87
  %63 = load i32, i32* %i, align 4, !dbg !15583
  %idxprom95 = sext i32 %63 to i64, !dbg !15586
  %64 = load i16*, i16** %offsets, align 8, !dbg !15586
  %arrayidx96 = getelementptr inbounds i16, i16* %64, i64 %idxprom95, !dbg !15586
  %65 = load i16, i16* %arrayidx96, align 2, !dbg !15586
  %conv97 = zext i16 %65 to i32, !dbg !15586
  store i32 %conv97, i32* %k, align 4, !dbg !15587
  br label %for.cond98, !dbg !15588

for.cond98:                                       ; preds = %for.inc123, %for.body94
  %66 = load i32, i32* %k, align 4, !dbg !15589
  %67 = load i32, i32* %i, align 4, !dbg !15592
  %add99 = add nsw i32 %67, 1, !dbg !15593
  %idxprom100 = sext i32 %add99 to i64, !dbg !15594
  %68 = load i16*, i16** %offsets, align 8, !dbg !15594
  %arrayidx101 = getelementptr inbounds i16, i16* %68, i64 %idxprom100, !dbg !15594
  %69 = load i16, i16* %arrayidx101, align 2, !dbg !15594
  %conv102 = zext i16 %69 to i32, !dbg !15594
  %cmp103 = icmp slt i32 %66, %conv102, !dbg !15595
  br i1 %cmp103, label %for.body105, label %for.end125, !dbg !15596

for.body105:                                      ; preds = %for.cond98
  %70 = load i32, i32* %group, align 4, !dbg !15597
  %mul106 = mul nsw i32 %70, 128, !dbg !15599
  %71 = load i32, i32* %k, align 4, !dbg !15600
  %add107 = add nsw i32 %mul106, %71, !dbg !15601
  %idxprom108 = sext i32 %add107 to i64, !dbg !15602
  %72 = load i32*, i32** %src, align 8, !dbg !15602
  %arrayidx109 = getelementptr inbounds i32, i32* %72, i64 %idxprom108, !dbg !15602
  %73 = load i32, i32* %arrayidx109, align 4, !dbg !15602
  %conv110 = sext i32 %73 to i64, !dbg !15603
  %74 = load i32, i32* %c, align 4, !dbg !15604
  %conv111 = sext i32 %74 to i64, !dbg !15604
  %mul112 = mul nsw i64 %conv110, %conv111, !dbg !15605
  %add113 = add nsw i64 %mul112, 68719476736, !dbg !15606
  %shr114 = ashr i64 %add113, 37, !dbg !15607
  %conv115 = trunc i64 %shr114 to i32, !dbg !15608
  store i32 %conv115, i32* %tmp, align 4, !dbg !15609
  %75 = load i32, i32* %tmp, align 4, !dbg !15610
  %76 = load i32, i32* %shift, align 4, !dbg !15611
  %shl116 = shl i32 1, %76, !dbg !15612
  %mul117 = mul i32 %75, %shl116, !dbg !15613
  %77 = load i32, i32* %group, align 4, !dbg !15614
  %mul118 = mul nsw i32 %77, 128, !dbg !15615
  %78 = load i32, i32* %k, align 4, !dbg !15616
  %add119 = add nsw i32 %mul118, %78, !dbg !15617
  %idxprom120 = sext i32 %add119 to i64, !dbg !15618
  %79 = load i32*, i32** %dest, align 8, !dbg !15618
  %arrayidx121 = getelementptr inbounds i32, i32* %79, i64 %idxprom120, !dbg !15618
  %80 = load i32, i32* %arrayidx121, align 4, !dbg !15619
  %add122 = add i32 %80, %mul117, !dbg !15619
  store i32 %add122, i32* %arrayidx121, align 4, !dbg !15619
  br label %for.inc123, !dbg !15620

for.inc123:                                       ; preds = %for.body105
  %81 = load i32, i32* %k, align 4, !dbg !15621
  %inc124 = add nsw i32 %81, 1, !dbg !15621
  store i32 %inc124, i32* %k, align 4, !dbg !15621
  br label %for.cond98, !dbg !15623, !llvm.loop !15624

for.end125:                                       ; preds = %for.cond98
  br label %for.inc126, !dbg !15626

for.inc126:                                       ; preds = %for.end125
  %82 = load i32, i32* %group, align 4, !dbg !15627
  %inc127 = add nsw i32 %82, 1, !dbg !15627
  store i32 %inc127, i32* %group, align 4, !dbg !15627
  br label %for.cond87, !dbg !15629, !llvm.loop !15630

for.end128:                                       ; preds = %for.cond87
  br label %if.end129

if.end129:                                        ; preds = %for.end128, %for.end85
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.then39
  br label %if.end131, !dbg !15632

if.end131:                                        ; preds = %if.end130, %for.body11
  br label %for.inc132, !dbg !15633

for.inc132:                                       ; preds = %if.end131
  %83 = load i32, i32* %i, align 4, !dbg !15634
  %inc133 = add nsw i32 %83, 1, !dbg !15634
  store i32 %inc133, i32* %i, align 4, !dbg !15634
  %84 = load i32, i32* %idx, align 4, !dbg !15636
  %inc134 = add nsw i32 %84, 1, !dbg !15636
  store i32 %inc134, i32* %idx, align 4, !dbg !15636
  br label %for.cond8, !dbg !15637, !llvm.loop !15638

for.end135:                                       ; preds = %for.cond8
  %85 = load i32, i32* %g, align 4, !dbg !15640
  %idxprom136 = sext i32 %85 to i64, !dbg !15641
  %86 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !15641
  %group_len137 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %86, i32 0, i32 4, !dbg !15642
  %arrayidx138 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len137, i64 0, i64 %idxprom136, !dbg !15641
  %87 = load i8, i8* %arrayidx138, align 1, !dbg !15641
  %conv139 = zext i8 %87 to i32, !dbg !15641
  %mul140 = mul nsw i32 %conv139, 128, !dbg !15643
  %88 = load i32*, i32** %dest, align 8, !dbg !15644
  %idx.ext = sext i32 %mul140 to i64, !dbg !15644
  %add.ptr = getelementptr inbounds i32, i32* %88, i64 %idx.ext, !dbg !15644
  store i32* %add.ptr, i32** %dest, align 8, !dbg !15644
  %89 = load i32, i32* %g, align 4, !dbg !15645
  %idxprom141 = sext i32 %89 to i64, !dbg !15646
  %90 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !15646
  %group_len142 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %90, i32 0, i32 4, !dbg !15647
  %arrayidx143 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len142, i64 0, i64 %idxprom141, !dbg !15646
  %91 = load i8, i8* %arrayidx143, align 1, !dbg !15646
  %conv144 = zext i8 %91 to i32, !dbg !15646
  %mul145 = mul nsw i32 %conv144, 128, !dbg !15648
  %92 = load i32*, i32** %src, align 8, !dbg !15649
  %idx.ext146 = sext i32 %mul145 to i64, !dbg !15649
  %add.ptr147 = getelementptr inbounds i32, i32* %92, i64 %idx.ext146, !dbg !15649
  store i32* %add.ptr147, i32** %src, align 8, !dbg !15649
  br label %for.inc148, !dbg !15650

for.inc148:                                       ; preds = %for.end135
  %93 = load i32, i32* %g, align 4, !dbg !15651
  %inc149 = add nsw i32 %93, 1, !dbg !15651
  store i32 %inc149, i32* %g, align 4, !dbg !15651
  br label %for.cond, !dbg !15653, !llvm.loop !15654

for.end150:                                       ; preds = %if.then, %for.cond
  ret void, !dbg !15656
}

declare void @ff_sbr_apply_fixed(%struct.AACContext*, %struct.SpectralBandReplication*, i32, i32*, i32*) #3

; Function Attrs: nounwind uwtable
define internal void @apply_independent_coupling_fixed(%struct.AACContext* %ac, %struct.SingleChannelElement* %target, %struct.ChannelElement* %cce, i32 %index) #1 !dbg !15657 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %target.addr = alloca %struct.SingleChannelElement*, align 8
  %cce.addr = alloca %struct.ChannelElement*, align 8
  %index.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %shift = alloca i32, align 4
  %round = alloca i32, align 4
  %tmp = alloca i32, align 4
  %gain = alloca i32, align 4
  %src = alloca i32*, align 8
  %dest = alloca i32*, align 8
  %len = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !15658, metadata !2068), !dbg !15659
  store %struct.SingleChannelElement* %target, %struct.SingleChannelElement** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %target.addr, metadata !15660, metadata !2068), !dbg !15661
  store %struct.ChannelElement* %cce, %struct.ChannelElement** %cce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cce.addr, metadata !15662, metadata !2068), !dbg !15663
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !15664, metadata !2068), !dbg !15665
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15666, metadata !2068), !dbg !15667
  call void @llvm.dbg.declare(metadata i32* %c, metadata !15668, metadata !2068), !dbg !15669
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !15670, metadata !2068), !dbg !15671
  call void @llvm.dbg.declare(metadata i32* %round, metadata !15672, metadata !2068), !dbg !15673
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !15674, metadata !2068), !dbg !15675
  call void @llvm.dbg.declare(metadata i32* %gain, metadata !15676, metadata !2068), !dbg !15677
  %0 = load i32, i32* %index.addr, align 4, !dbg !15678
  %idxprom = sext i32 %0 to i64, !dbg !15679
  %1 = load %struct.ChannelElement*, %struct.ChannelElement** %cce.addr, align 8, !dbg !15679
  %coup = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %1, i32 0, i32 8, !dbg !15680
  %gain2 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %coup, i32 0, i32 5, !dbg !15681
  %arrayidx = getelementptr inbounds [16 x [120 x i32]], [16 x [120 x i32]]* %gain2, i64 0, i64 %idxprom, !dbg !15679
  %arrayidx3 = getelementptr inbounds [120 x i32], [120 x i32]* %arrayidx, i64 0, i64 0, !dbg !15679
  %2 = load i32, i32* %arrayidx3, align 8, !dbg !15679
  store i32 %2, i32* %gain, align 4, !dbg !15677
  call void @llvm.dbg.declare(metadata i32** %src, metadata !15682, metadata !2068), !dbg !15683
  %3 = load %struct.ChannelElement*, %struct.ChannelElement** %cce.addr, align 8, !dbg !15684
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %3, i32 0, i32 7, !dbg !15685
  %arrayidx5 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !15684
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx5, i32 0, i32 21, !dbg !15686
  %4 = load i32*, i32** %ret, align 32, !dbg !15686
  store i32* %4, i32** %src, align 8, !dbg !15683
  call void @llvm.dbg.declare(metadata i32** %dest, metadata !15687, metadata !2068), !dbg !15689
  %5 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %target.addr, align 8, !dbg !15690
  %ret7 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %5, i32 0, i32 21, !dbg !15691
  %6 = load i32*, i32** %ret7, align 32, !dbg !15691
  store i32* %6, i32** %dest, align 8, !dbg !15689
  call void @llvm.dbg.declare(metadata i32* %len, metadata !15692, metadata !2068), !dbg !15693
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15694
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 21, !dbg !15695
  %arrayidx9 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !15694
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx9, i32 0, i32 0, !dbg !15696
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 4, !dbg !15697
  %8 = load i32, i32* %sbr, align 8, !dbg !15697
  %cmp = icmp eq i32 %8, 1, !dbg !15698
  %conv = zext i1 %cmp to i32, !dbg !15698
  %shl = shl i32 1024, %conv, !dbg !15699
  store i32 %shl, i32* %len, align 4, !dbg !15693
  %9 = load i32, i32* %gain, align 4, !dbg !15700
  %and = and i32 %9, 7, !dbg !15701
  %idxprom10 = sext i32 %and to i64, !dbg !15702
  %arrayidx11 = getelementptr inbounds [8 x i32], [8 x i32]* @cce_scale_fixed, i64 0, i64 %idxprom10, !dbg !15702
  %10 = load i32, i32* %arrayidx11, align 4, !dbg !15702
  store i32 %10, i32* %c, align 4, !dbg !15703
  %11 = load i32, i32* %gain, align 4, !dbg !15704
  %sub = sub nsw i32 %11, 1024, !dbg !15705
  %shr = ashr i32 %sub, 3, !dbg !15706
  store i32 %shr, i32* %shift, align 4, !dbg !15707
  %12 = load i32, i32* %shift, align 4, !dbg !15708
  %cmp12 = icmp slt i32 %12, -31, !dbg !15710
  br i1 %cmp12, label %if.then, label %if.else, !dbg !15711

if.then:                                          ; preds = %entry
  br label %if.end54, !dbg !15712

if.else:                                          ; preds = %entry
  %13 = load i32, i32* %shift, align 4, !dbg !15714
  %cmp14 = icmp slt i32 %13, 0, !dbg !15716
  br i1 %cmp14, label %if.then16, label %if.else33, !dbg !15717

if.then16:                                        ; preds = %if.else
  %14 = load i32, i32* %shift, align 4, !dbg !15718
  %sub17 = sub nsw i32 0, %14, !dbg !15720
  store i32 %sub17, i32* %shift, align 4, !dbg !15721
  %15 = load i32, i32* %shift, align 4, !dbg !15722
  %sub18 = sub nsw i32 %15, 1, !dbg !15723
  %shl19 = shl i32 1, %sub18, !dbg !15724
  store i32 %shl19, i32* %round, align 4, !dbg !15725
  store i32 0, i32* %i, align 4, !dbg !15726
  br label %for.cond, !dbg !15728

for.cond:                                         ; preds = %for.inc, %if.then16
  %16 = load i32, i32* %i, align 4, !dbg !15729
  %17 = load i32, i32* %len, align 4, !dbg !15732
  %cmp20 = icmp slt i32 %16, %17, !dbg !15733
  br i1 %cmp20, label %for.body, label %for.end, !dbg !15734

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !15735
  %idxprom22 = sext i32 %18 to i64, !dbg !15737
  %19 = load i32*, i32** %src, align 8, !dbg !15737
  %arrayidx23 = getelementptr inbounds i32, i32* %19, i64 %idxprom22, !dbg !15737
  %20 = load i32, i32* %arrayidx23, align 4, !dbg !15737
  %conv24 = sext i32 %20 to i64, !dbg !15738
  %21 = load i32, i32* %c, align 4, !dbg !15739
  %conv25 = sext i32 %21 to i64, !dbg !15739
  %mul = mul nsw i64 %conv24, %conv25, !dbg !15740
  %add = add nsw i64 %mul, 68719476736, !dbg !15741
  %shr26 = ashr i64 %add, 37, !dbg !15742
  %conv27 = trunc i64 %shr26 to i32, !dbg !15743
  store i32 %conv27, i32* %tmp, align 4, !dbg !15744
  %22 = load i32, i32* %tmp, align 4, !dbg !15745
  %23 = load i32, i32* %round, align 4, !dbg !15746
  %add28 = add nsw i32 %22, %23, !dbg !15747
  %24 = load i32, i32* %shift, align 4, !dbg !15748
  %shr29 = ashr i32 %add28, %24, !dbg !15749
  %25 = load i32, i32* %i, align 4, !dbg !15750
  %idxprom30 = sext i32 %25 to i64, !dbg !15751
  %26 = load i32*, i32** %dest, align 8, !dbg !15751
  %arrayidx31 = getelementptr inbounds i32, i32* %26, i64 %idxprom30, !dbg !15751
  %27 = load i32, i32* %arrayidx31, align 4, !dbg !15752
  %add32 = add i32 %27, %shr29, !dbg !15752
  store i32 %add32, i32* %arrayidx31, align 4, !dbg !15752
  br label %for.inc, !dbg !15753

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !15754
  %inc = add nsw i32 %28, 1, !dbg !15754
  store i32 %inc, i32* %i, align 4, !dbg !15754
  br label %for.cond, !dbg !15756, !llvm.loop !15757

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !15759

if.else33:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !15760
  br label %for.cond34, !dbg !15763

for.cond34:                                       ; preds = %for.inc51, %if.else33
  %29 = load i32, i32* %i, align 4, !dbg !15764
  %30 = load i32, i32* %len, align 4, !dbg !15767
  %cmp35 = icmp slt i32 %29, %30, !dbg !15768
  br i1 %cmp35, label %for.body37, label %for.end53, !dbg !15769

for.body37:                                       ; preds = %for.cond34
  %31 = load i32, i32* %i, align 4, !dbg !15770
  %idxprom38 = sext i32 %31 to i64, !dbg !15772
  %32 = load i32*, i32** %src, align 8, !dbg !15772
  %arrayidx39 = getelementptr inbounds i32, i32* %32, i64 %idxprom38, !dbg !15772
  %33 = load i32, i32* %arrayidx39, align 4, !dbg !15772
  %conv40 = sext i32 %33 to i64, !dbg !15773
  %34 = load i32, i32* %c, align 4, !dbg !15774
  %conv41 = sext i32 %34 to i64, !dbg !15774
  %mul42 = mul nsw i64 %conv40, %conv41, !dbg !15775
  %add43 = add nsw i64 %mul42, 68719476736, !dbg !15776
  %shr44 = ashr i64 %add43, 37, !dbg !15777
  %conv45 = trunc i64 %shr44 to i32, !dbg !15778
  store i32 %conv45, i32* %tmp, align 4, !dbg !15779
  %35 = load i32, i32* %tmp, align 4, !dbg !15780
  %36 = load i32, i32* %shift, align 4, !dbg !15781
  %shl46 = shl i32 1, %36, !dbg !15782
  %mul47 = mul i32 %35, %shl46, !dbg !15783
  %37 = load i32, i32* %i, align 4, !dbg !15784
  %idxprom48 = sext i32 %37 to i64, !dbg !15785
  %38 = load i32*, i32** %dest, align 8, !dbg !15785
  %arrayidx49 = getelementptr inbounds i32, i32* %38, i64 %idxprom48, !dbg !15785
  %39 = load i32, i32* %arrayidx49, align 4, !dbg !15786
  %add50 = add i32 %39, %mul47, !dbg !15786
  store i32 %add50, i32* %arrayidx49, align 4, !dbg !15786
  br label %for.inc51, !dbg !15787

for.inc51:                                        ; preds = %for.body37
  %40 = load i32, i32* %i, align 4, !dbg !15788
  %inc52 = add nsw i32 %40, 1, !dbg !15788
  store i32 %inc52, i32* %i, align 4, !dbg !15788
  br label %for.cond34, !dbg !15790, !llvm.loop !15791

for.end53:                                        ; preds = %for.cond34
  br label %if.end

if.end:                                           ; preds = %for.end53, %for.end
  br label %if.end54

if.end54:                                         ; preds = %if.then, %if.end
  ret void, !dbg !15793
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !15794 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6135, metadata !2068), !dbg !15795
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !15797, metadata !2068), !dbg !15798
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15799, metadata !2068), !dbg !15800
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !15801, metadata !2068), !dbg !15802
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !15803, metadata !2068), !dbg !15804
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !15805
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !15806
  %1 = load i32, i32* %index, align 8, !dbg !15806
  store i32 %1, i32* %re_index, align 4, !dbg !15804
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !15807, metadata !2068), !dbg !15808
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !15809
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 0, !dbg !15810
  %3 = load i8*, i8** %buffer, align 8, !dbg !15810
  %4 = load i32, i32* %re_index, align 4, !dbg !15811
  %shr = lshr i32 %4, 3, !dbg !15812
  %idx.ext = zext i32 %shr to i64, !dbg !15813
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !15813
  %5 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !15814
  %l = bitcast %union.unaligned_32* %5 to i32*, !dbg !15814
  %6 = load i32, i32* %l, align 1, !dbg !15814
  store i32 %6, i32* %x.addr.i, align 4, !dbg !15815
  %7 = load i32, i32* %x.addr.i, align 4, !dbg !15816
  %shl.i = shl i32 %7, 8, !dbg !15817
  %and.i = and i32 %shl.i, 65280, !dbg !15818
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !15819
  %shr.i = lshr i32 %8, 8, !dbg !15820
  %and1.i = and i32 %shr.i, 255, !dbg !15821
  %or.i = or i32 %and.i, %and1.i, !dbg !15822
  %shl2.i = shl i32 %or.i, 16, !dbg !15823
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !15824
  %shr3.i = lshr i32 %9, 16, !dbg !15825
  %shl4.i = shl i32 %shr3.i, 8, !dbg !15826
  %and5.i = and i32 %shl4.i, 65280, !dbg !15827
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !15828
  %shr6.i = lshr i32 %10, 16, !dbg !15829
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !15830
  %and8.i = and i32 %shr7.i, 255, !dbg !15831
  %or9.i = or i32 %and5.i, %and8.i, !dbg !15832
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !15833
  %11 = load i32, i32* %re_index, align 4, !dbg !15834
  %and = and i32 %11, 7, !dbg !15835
  %shl = shl i32 %or10.i, %and, !dbg !15836
  store i32 %shl, i32* %re_cache, align 4, !dbg !15837
  %12 = load i32, i32* %re_cache, align 4, !dbg !15838
  %13 = load i32, i32* %n.addr, align 4, !dbg !15839
  %conv = trunc i32 %13 to i8, !dbg !15839
  %call3 = call i32 @NEG_USR32(i32 %12, i8 signext %conv), !dbg !15840
  store i32 %call3, i32* %tmp, align 4, !dbg !15841
  %14 = load i32, i32* %tmp, align 4, !dbg !15842
  ret i32 %14, !dbg !15843
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_adts_frame_header(%struct.AACContext* %ac, %struct.GetBitContext* %gb) #1 !dbg !15844 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %size = alloca i32, align 4
  %hdr_info = alloca %struct.AACADTSHeaderInfo, align 4
  %layout_map = alloca [64 x [3 x i8]], align 16
  %layout_map_tags = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !15847, metadata !2068), !dbg !15848
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !15849, metadata !2068), !dbg !15850
  call void @llvm.dbg.declare(metadata i32* %size, metadata !15851, metadata !2068), !dbg !15852
  call void @llvm.dbg.declare(metadata %struct.AACADTSHeaderInfo* %hdr_info, metadata !15853, metadata !2068), !dbg !15866
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map, metadata !15867, metadata !2068), !dbg !15868
  call void @llvm.dbg.declare(metadata i32* %layout_map_tags, metadata !15869, metadata !2068), !dbg !15870
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15871, metadata !2068), !dbg !15872
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15873
  %call = call i32 @ff_adts_header_parse(%struct.GetBitContext* %0, %struct.AACADTSHeaderInfo* %hdr_info), !dbg !15874
  store i32 %call, i32* %size, align 4, !dbg !15875
  %1 = load i32, i32* %size, align 4, !dbg !15876
  %cmp = icmp sgt i32 %1, 0, !dbg !15878
  br i1 %cmp, label %if.then, label %if.end112, !dbg !15879

if.then:                                          ; preds = %entry
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15880
  %warned_num_aac_frames = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 22, !dbg !15883
  %3 = load i32, i32* %warned_num_aac_frames, align 16, !dbg !15883
  %tobool = icmp ne i32 %3, 0, !dbg !15880
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !15884

land.lhs.true:                                    ; preds = %if.then
  %num_aac_frames = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 7, !dbg !15885
  %4 = load i8, i8* %num_aac_frames, align 4, !dbg !15885
  %conv = zext i8 %4 to i32, !dbg !15887
  %cmp1 = icmp ne i32 %conv, 1, !dbg !15888
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !15889

if.then3:                                         ; preds = %land.lhs.true
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15890
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 1, !dbg !15892
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !15892
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !15890
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %7, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.69, i32 0, i32 0)), !dbg !15893
  %8 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15894
  %warned_num_aac_frames4 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 22, !dbg !15895
  store i32 1, i32* %warned_num_aac_frames4, align 16, !dbg !15896
  br label %if.end, !dbg !15897

if.end:                                           ; preds = %if.then3, %land.lhs.true, %if.then
  %9 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15898
  %call5 = call i32 @push_output_configuration(%struct.AACContext* %9), !dbg !15899
  %chan_config = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 6, !dbg !15900
  %10 = load i8, i8* %chan_config, align 1, !dbg !15900
  %tobool6 = icmp ne i8 %10, 0, !dbg !15902
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !15903

if.then7:                                         ; preds = %if.end
  %chan_config8 = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 6, !dbg !15904
  %11 = load i8, i8* %chan_config8, align 1, !dbg !15904
  %conv9 = zext i8 %11 to i32, !dbg !15906
  %12 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15907
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 21, !dbg !15908
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !15907
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !15909
  %chan_config10 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 3, !dbg !15910
  store i32 %conv9, i32* %chan_config10, align 4, !dbg !15911
  %13 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15912
  %avctx11 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %13, i32 0, i32 1, !dbg !15914
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx11, align 8, !dbg !15914
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !15915
  %chan_config12 = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 6, !dbg !15916
  %15 = load i8, i8* %chan_config12, align 1, !dbg !15916
  %conv13 = zext i8 %15 to i32, !dbg !15917
  %call14 = call i32 @set_default_channel_config(%struct.AVCodecContext* %14, [3 x i8]* %arraydecay, i32* %layout_map_tags, i32 %conv13), !dbg !15918
  store i32 %call14, i32* %ret, align 4, !dbg !15919
  %cmp15 = icmp slt i32 %call14, 0, !dbg !15920
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !15921

if.then17:                                        ; preds = %if.then7
  %16 = load i32, i32* %ret, align 4, !dbg !15922
  store i32 %16, i32* %retval, align 4, !dbg !15923
  br label %return, !dbg !15923

if.end18:                                         ; preds = %if.then7
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15924
  %arraydecay19 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !15926
  %18 = load i32, i32* %layout_map_tags, align 4, !dbg !15927
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15928
  %oc20 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 21, !dbg !15929
  %arrayidx21 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc20, i64 0, i64 1, !dbg !15928
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx21, i32 0, i32 5, !dbg !15930
  %20 = load i32, i32* %status, align 8, !dbg !15930
  %cmp22 = icmp ugt i32 %20, 2, !dbg !15931
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !15932

cond.true:                                        ; preds = %if.end18
  %21 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15933
  %oc24 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %21, i32 0, i32 21, !dbg !15935
  %arrayidx25 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc24, i64 0, i64 1, !dbg !15933
  %status26 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx25, i32 0, i32 5, !dbg !15936
  %22 = load i32, i32* %status26, align 8, !dbg !15936
  br label %cond.end, !dbg !15937

cond.false:                                       ; preds = %if.end18
  br label %cond.end, !dbg !15938

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %22, %cond.true ], [ 2, %cond.false ], !dbg !15940
  %call27 = call i32 @output_configure(%struct.AACContext* %17, [3 x i8]* %arraydecay19, i32 %18, i32 %cond, i32 0), !dbg !15942
  store i32 %call27, i32* %ret, align 4, !dbg !15943
  %cmp28 = icmp slt i32 %call27, 0, !dbg !15944
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !15945

if.then30:                                        ; preds = %cond.end
  %23 = load i32, i32* %ret, align 4, !dbg !15946
  store i32 %23, i32* %retval, align 4, !dbg !15947
  br label %return, !dbg !15947

if.end31:                                         ; preds = %cond.end
  br label %if.end62, !dbg !15948

if.else:                                          ; preds = %if.end
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15949
  %oc32 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 21, !dbg !15951
  %arrayidx33 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc32, i64 0, i64 1, !dbg !15949
  %m4ac34 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx33, i32 0, i32 0, !dbg !15952
  %chan_config35 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac34, i32 0, i32 3, !dbg !15953
  store i32 0, i32* %chan_config35, align 4, !dbg !15954
  %25 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15955
  %dmono_mode = getelementptr inbounds %struct.AACContext, %struct.AACContext* %25, i32 0, i32 18, !dbg !15957
  %26 = load i32, i32* %dmono_mode, align 4, !dbg !15957
  %tobool36 = icmp ne i32 %26, 0, !dbg !15955
  br i1 %tobool36, label %land.lhs.true37, label %if.end61, !dbg !15958

land.lhs.true37:                                  ; preds = %if.else
  %27 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15959
  %oc38 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %27, i32 0, i32 21, !dbg !15961
  %arrayidx39 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc38, i64 0, i64 0, !dbg !15959
  %status40 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx39, i32 0, i32 5, !dbg !15962
  %28 = load i32, i32* %status40, align 32, !dbg !15962
  %cmp41 = icmp eq i32 %28, 0, !dbg !15963
  br i1 %cmp41, label %if.then43, label %if.end61, !dbg !15964

if.then43:                                        ; preds = %land.lhs.true37
  store i32 2, i32* %layout_map_tags, align 4, !dbg !15965
  %arrayidx44 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i64 0, i64 1, !dbg !15967
  %arrayidx45 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx44, i64 0, i64 0, !dbg !15967
  store i8 0, i8* %arrayidx45, align 1, !dbg !15968
  %arrayidx46 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i64 0, i64 0, !dbg !15969
  %arrayidx47 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx46, i64 0, i64 0, !dbg !15969
  store i8 0, i8* %arrayidx47, align 16, !dbg !15970
  %arrayidx48 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i64 0, i64 1, !dbg !15971
  %arrayidx49 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx48, i64 0, i64 2, !dbg !15971
  store i8 1, i8* %arrayidx49, align 1, !dbg !15972
  %arrayidx50 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i64 0, i64 0, !dbg !15973
  %arrayidx51 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx50, i64 0, i64 2, !dbg !15973
  store i8 1, i8* %arrayidx51, align 2, !dbg !15974
  %arrayidx52 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i64 0, i64 0, !dbg !15975
  %arrayidx53 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx52, i64 0, i64 1, !dbg !15975
  store i8 0, i8* %arrayidx53, align 1, !dbg !15976
  %arrayidx54 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i64 0, i64 1, !dbg !15977
  %arrayidx55 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx54, i64 0, i64 1, !dbg !15977
  store i8 1, i8* %arrayidx55, align 1, !dbg !15978
  %29 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15979
  %arraydecay56 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !15981
  %30 = load i32, i32* %layout_map_tags, align 4, !dbg !15982
  %call57 = call i32 @output_configure(%struct.AACContext* %29, [3 x i8]* %arraydecay56, i32 %30, i32 2, i32 0), !dbg !15983
  %tobool58 = icmp ne i32 %call57, 0, !dbg !15983
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !15984

if.then59:                                        ; preds = %if.then43
  store i32 -7, i32* %retval, align 4, !dbg !15985
  br label %return, !dbg !15985

if.end60:                                         ; preds = %if.then43
  br label %if.end61, !dbg !15986

if.end61:                                         ; preds = %if.end60, %land.lhs.true37, %if.else
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end31
  %sample_rate = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 0, !dbg !15987
  %31 = load i32, i32* %sample_rate, align 4, !dbg !15987
  %32 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15988
  %oc63 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %32, i32 0, i32 21, !dbg !15989
  %arrayidx64 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc63, i64 0, i64 1, !dbg !15988
  %m4ac65 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx64, i32 0, i32 0, !dbg !15990
  %sample_rate66 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac65, i32 0, i32 2, !dbg !15991
  store i32 %31, i32* %sample_rate66, align 8, !dbg !15992
  %sampling_index = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 5, !dbg !15993
  %33 = load i8, i8* %sampling_index, align 2, !dbg !15993
  %conv67 = zext i8 %33 to i32, !dbg !15994
  %34 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15995
  %oc68 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %34, i32 0, i32 21, !dbg !15996
  %arrayidx69 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc68, i64 0, i64 1, !dbg !15995
  %m4ac70 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx69, i32 0, i32 0, !dbg !15997
  %sampling_index71 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac70, i32 0, i32 1, !dbg !15998
  store i32 %conv67, i32* %sampling_index71, align 4, !dbg !15999
  %object_type = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 4, !dbg !16000
  %35 = load i8, i8* %object_type, align 1, !dbg !16000
  %conv72 = zext i8 %35 to i32, !dbg !16001
  %36 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16002
  %oc73 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %36, i32 0, i32 21, !dbg !16003
  %arrayidx74 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc73, i64 0, i64 1, !dbg !16002
  %m4ac75 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx74, i32 0, i32 0, !dbg !16004
  %object_type76 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac75, i32 0, i32 0, !dbg !16005
  store i32 %conv72, i32* %object_type76, align 8, !dbg !16006
  %37 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16007
  %oc77 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %37, i32 0, i32 21, !dbg !16008
  %arrayidx78 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc77, i64 0, i64 1, !dbg !16007
  %m4ac79 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx78, i32 0, i32 0, !dbg !16009
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac79, i32 0, i32 11, !dbg !16010
  store i32 0, i32* %frame_length_short, align 4, !dbg !16011
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16012
  %oc80 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %38, i32 0, i32 21, !dbg !16014
  %arrayidx81 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc80, i64 0, i64 0, !dbg !16012
  %status82 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx81, i32 0, i32 5, !dbg !16015
  %39 = load i32, i32* %status82, align 32, !dbg !16015
  %cmp83 = icmp ne i32 %39, 4, !dbg !16016
  br i1 %cmp83, label %if.then101, label %lor.lhs.false, !dbg !16017

lor.lhs.false:                                    ; preds = %if.end62
  %40 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16018
  %oc85 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %40, i32 0, i32 21, !dbg !16019
  %arrayidx86 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc85, i64 0, i64 0, !dbg !16018
  %m4ac87 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx86, i32 0, i32 0, !dbg !16020
  %chan_config88 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac87, i32 0, i32 3, !dbg !16021
  %41 = load i32, i32* %chan_config88, align 4, !dbg !16021
  %chan_config89 = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 6, !dbg !16022
  %42 = load i8, i8* %chan_config89, align 1, !dbg !16022
  %conv90 = zext i8 %42 to i32, !dbg !16023
  %cmp91 = icmp ne i32 %41, %conv90, !dbg !16024
  br i1 %cmp91, label %if.then101, label %lor.lhs.false93, !dbg !16025

lor.lhs.false93:                                  ; preds = %lor.lhs.false
  %43 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16026
  %oc94 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %43, i32 0, i32 21, !dbg !16027
  %arrayidx95 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc94, i64 0, i64 0, !dbg !16026
  %m4ac96 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx95, i32 0, i32 0, !dbg !16028
  %sample_rate97 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac96, i32 0, i32 2, !dbg !16029
  %44 = load i32, i32* %sample_rate97, align 8, !dbg !16029
  %sample_rate98 = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 0, !dbg !16030
  %45 = load i32, i32* %sample_rate98, align 4, !dbg !16030
  %cmp99 = icmp ne i32 %44, %45, !dbg !16031
  br i1 %cmp99, label %if.then101, label %if.end108, !dbg !16032

if.then101:                                       ; preds = %lor.lhs.false93, %lor.lhs.false, %if.end62
  %46 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16034
  %oc102 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %46, i32 0, i32 21, !dbg !16036
  %arrayidx103 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc102, i64 0, i64 1, !dbg !16034
  %m4ac104 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx103, i32 0, i32 0, !dbg !16037
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac104, i32 0, i32 4, !dbg !16038
  store i32 -1, i32* %sbr, align 8, !dbg !16039
  %47 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16040
  %oc105 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %47, i32 0, i32 21, !dbg !16041
  %arrayidx106 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc105, i64 0, i64 1, !dbg !16040
  %m4ac107 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx106, i32 0, i32 0, !dbg !16042
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac107, i32 0, i32 10, !dbg !16043
  store i32 -1, i32* %ps, align 8, !dbg !16044
  br label %if.end108, !dbg !16045

if.end108:                                        ; preds = %if.then101, %lor.lhs.false93
  %crc_absent = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 3, !dbg !16046
  %48 = load i8, i8* %crc_absent, align 4, !dbg !16046
  %tobool109 = icmp ne i8 %48, 0, !dbg !16048
  br i1 %tobool109, label %if.end111, label %if.then110, !dbg !16049

if.then110:                                       ; preds = %if.end108
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16050
  call void @skip_bits(%struct.GetBitContext* %49, i32 16), !dbg !16051
  br label %if.end111, !dbg !16051

if.end111:                                        ; preds = %if.then110, %if.end108
  br label %if.end112, !dbg !16052

if.end112:                                        ; preds = %if.end111, %entry
  %50 = load i32, i32* %size, align 4, !dbg !16053
  store i32 %50, i32* %retval, align 4, !dbg !16054
  br label %return, !dbg !16054

return:                                           ; preds = %if.end112, %if.then59, %if.then30, %if.then17
  %51 = load i32, i32* %retval, align 4, !dbg !16055
  ret i32 %51, !dbg !16055
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_cce(%struct.AACContext* %ac, %struct.GetBitContext* %gb, %struct.ChannelElement* %che) #1 !dbg !16056 {
entry:
  %x.addr.i96.i128 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i128, metadata !6135, metadata !2068), !dbg !16057
  %x.addr.i81.i129 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i129, metadata !6135, metadata !2068), !dbg !16075
  %x.addr.i.i130 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i130, metadata !6135, metadata !2068), !dbg !16077
  %s.addr.i131 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i131, metadata !9628, metadata !2068), !dbg !16079
  %table.addr.i132 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i132, metadata !9630, metadata !2068), !dbg !16080
  %bits.addr.i133 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i133, metadata !9632, metadata !2068), !dbg !16081
  %max_depth.addr.i134 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i134, metadata !9634, metadata !2068), !dbg !16082
  %code.i135 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i135, metadata !9636, metadata !2068), !dbg !16083
  %re_index.i136 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i136, metadata !9638, metadata !2068), !dbg !16084
  %re_cache.i137 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i137, metadata !9640, metadata !2068), !dbg !16085
  %re_size_plus8.i138 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i138, metadata !9642, metadata !2068), !dbg !16086
  %n.i139 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i139, metadata !9644, metadata !2068), !dbg !16087
  %nb_bits.i140 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i140, metadata !9646, metadata !2068), !dbg !16088
  %index1.i141 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i141, metadata !9648, metadata !2068), !dbg !16089
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !6135, metadata !2068), !dbg !16090
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !6135, metadata !2068), !dbg !16096
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !6135, metadata !2068), !dbg !16098
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !9628, metadata !2068), !dbg !16100
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !9630, metadata !2068), !dbg !16101
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !9632, metadata !2068), !dbg !16102
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !9634, metadata !2068), !dbg !16103
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !9636, metadata !2068), !dbg !16104
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !9638, metadata !2068), !dbg !16105
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !9640, metadata !2068), !dbg !16106
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !9642, metadata !2068), !dbg !16107
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !9644, metadata !2068), !dbg !16108
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !9646, metadata !2068), !dbg !16109
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !9648, metadata !2068), !dbg !16110
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %che.addr = alloca %struct.ChannelElement*, align 8
  %num_gain = alloca i32, align 4
  %c = alloca i32, align 4
  %g = alloca i32, align 4
  %sfb = alloca i32, align 4
  %ret = alloca i32, align 4
  %sign = alloca i32, align 4
  %scale = alloca i32, align 4
  %sce = alloca %struct.SingleChannelElement*, align 8
  %coup = alloca %struct.ChannelCoupling*, align 8
  %idx = alloca i32, align 4
  %cge = alloca i32, align 4
  %gain = alloca i32, align 4
  %gain_cache = alloca i32, align 4
  %t = alloca i32, align 4
  %s = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !16111, metadata !2068), !dbg !16112
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !16113, metadata !2068), !dbg !16114
  store %struct.ChannelElement* %che, %struct.ChannelElement** %che.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che.addr, metadata !16115, metadata !2068), !dbg !16116
  call void @llvm.dbg.declare(metadata i32* %num_gain, metadata !16117, metadata !2068), !dbg !16118
  store i32 0, i32* %num_gain, align 4, !dbg !16118
  call void @llvm.dbg.declare(metadata i32* %c, metadata !16119, metadata !2068), !dbg !16120
  call void @llvm.dbg.declare(metadata i32* %g, metadata !16121, metadata !2068), !dbg !16122
  call void @llvm.dbg.declare(metadata i32* %sfb, metadata !16123, metadata !2068), !dbg !16124
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16125, metadata !2068), !dbg !16126
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !16127, metadata !2068), !dbg !16128
  call void @llvm.dbg.declare(metadata i32* %scale, metadata !16129, metadata !2068), !dbg !16130
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce, metadata !16131, metadata !2068), !dbg !16132
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %che.addr, align 8, !dbg !16133
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !16134
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !16133
  store %struct.SingleChannelElement* %arrayidx, %struct.SingleChannelElement** %sce, align 8, !dbg !16132
  call void @llvm.dbg.declare(metadata %struct.ChannelCoupling** %coup, metadata !16135, metadata !2068), !dbg !16136
  %1 = load %struct.ChannelElement*, %struct.ChannelElement** %che.addr, align 8, !dbg !16137
  %coup1 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %1, i32 0, i32 8, !dbg !16138
  store %struct.ChannelCoupling* %coup1, %struct.ChannelCoupling** %coup, align 8, !dbg !16136
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16139
  %call = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !16140
  %mul = mul i32 2, %call, !dbg !16141
  %3 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16142
  %coupling_point = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %3, i32 0, i32 0, !dbg !16143
  store i32 %mul, i32* %coupling_point, align 4, !dbg !16144
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16145
  %call2 = call i32 @get_bits(%struct.GetBitContext* %4, i32 3), !dbg !16146
  %5 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16147
  %num_coupled = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %5, i32 0, i32 1, !dbg !16148
  store i32 %call2, i32* %num_coupled, align 4, !dbg !16149
  store i32 0, i32* %c, align 4, !dbg !16150
  br label %for.cond, !dbg !16152

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %c, align 4, !dbg !16153
  %7 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16156
  %num_coupled3 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %7, i32 0, i32 1, !dbg !16157
  %8 = load i32, i32* %num_coupled3, align 4, !dbg !16157
  %cmp = icmp sle i32 %6, %8, !dbg !16158
  br i1 %cmp, label %for.body, label %for.end, !dbg !16159

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %num_gain, align 4, !dbg !16160
  %inc = add nsw i32 %9, 1, !dbg !16160
  store i32 %inc, i32* %num_gain, align 4, !dbg !16160
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16162
  %call4 = call i32 @get_bits1(%struct.GetBitContext* %10), !dbg !16163
  %tobool = icmp ne i32 %call4, 0, !dbg !16163
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !16163
  %11 = load i32, i32* %c, align 4, !dbg !16164
  %idxprom = sext i32 %11 to i64, !dbg !16165
  %12 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16165
  %type = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %12, i32 0, i32 2, !dbg !16166
  %arrayidx5 = getelementptr inbounds [8 x i32], [8 x i32]* %type, i64 0, i64 %idxprom, !dbg !16165
  store i32 %cond, i32* %arrayidx5, align 4, !dbg !16167
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16168
  %call6 = call i32 @get_bits(%struct.GetBitContext* %13, i32 4), !dbg !16169
  %14 = load i32, i32* %c, align 4, !dbg !16170
  %idxprom7 = sext i32 %14 to i64, !dbg !16171
  %15 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16171
  %id_select = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %15, i32 0, i32 3, !dbg !16172
  %arrayidx8 = getelementptr inbounds [8 x i32], [8 x i32]* %id_select, i64 0, i64 %idxprom7, !dbg !16171
  store i32 %call6, i32* %arrayidx8, align 4, !dbg !16173
  %16 = load i32, i32* %c, align 4, !dbg !16174
  %idxprom9 = sext i32 %16 to i64, !dbg !16176
  %17 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16176
  %type10 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %17, i32 0, i32 2, !dbg !16177
  %arrayidx11 = getelementptr inbounds [8 x i32], [8 x i32]* %type10, i64 0, i64 %idxprom9, !dbg !16176
  %18 = load i32, i32* %arrayidx11, align 4, !dbg !16176
  %cmp12 = icmp eq i32 %18, 1, !dbg !16178
  br i1 %cmp12, label %if.then, label %if.else, !dbg !16179

if.then:                                          ; preds = %for.body
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16180
  %call13 = call i32 @get_bits(%struct.GetBitContext* %19, i32 2), !dbg !16182
  %20 = load i32, i32* %c, align 4, !dbg !16183
  %idxprom14 = sext i32 %20 to i64, !dbg !16184
  %21 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16184
  %ch_select = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %21, i32 0, i32 4, !dbg !16185
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select, i64 0, i64 %idxprom14, !dbg !16184
  store i32 %call13, i32* %arrayidx15, align 4, !dbg !16186
  %22 = load i32, i32* %c, align 4, !dbg !16187
  %idxprom16 = sext i32 %22 to i64, !dbg !16189
  %23 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16189
  %ch_select17 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %23, i32 0, i32 4, !dbg !16190
  %arrayidx18 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select17, i64 0, i64 %idxprom16, !dbg !16189
  %24 = load i32, i32* %arrayidx18, align 4, !dbg !16189
  %cmp19 = icmp eq i32 %24, 3, !dbg !16191
  br i1 %cmp19, label %if.then20, label %if.end, !dbg !16192

if.then20:                                        ; preds = %if.then
  %25 = load i32, i32* %num_gain, align 4, !dbg !16193
  %inc21 = add nsw i32 %25, 1, !dbg !16193
  store i32 %inc21, i32* %num_gain, align 4, !dbg !16193
  br label %if.end, !dbg !16194

if.end:                                           ; preds = %if.then20, %if.then
  br label %if.end25, !dbg !16195

if.else:                                          ; preds = %for.body
  %26 = load i32, i32* %c, align 4, !dbg !16196
  %idxprom22 = sext i32 %26 to i64, !dbg !16197
  %27 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16197
  %ch_select23 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %27, i32 0, i32 4, !dbg !16198
  %arrayidx24 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select23, i64 0, i64 %idxprom22, !dbg !16197
  store i32 2, i32* %arrayidx24, align 4, !dbg !16199
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.end
  br label %for.inc, !dbg !16200

for.inc:                                          ; preds = %if.end25
  %28 = load i32, i32* %c, align 4, !dbg !16201
  %inc26 = add nsw i32 %28, 1, !dbg !16201
  store i32 %inc26, i32* %c, align 4, !dbg !16201
  br label %for.cond, !dbg !16203, !llvm.loop !16204

for.end:                                          ; preds = %for.cond
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16206
  %call27 = call i32 @get_bits1(%struct.GetBitContext* %29), !dbg !16207
  %tobool28 = icmp ne i32 %call27, 0, !dbg !16207
  br i1 %tobool28, label %lor.end, label %lor.rhs, !dbg !16208

lor.rhs:                                          ; preds = %for.end
  %30 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16209
  %coupling_point29 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %30, i32 0, i32 0, !dbg !16211
  %31 = load i32, i32* %coupling_point29, align 4, !dbg !16211
  %shr = lshr i32 %31, 1, !dbg !16212
  %tobool30 = icmp ne i32 %shr, 0, !dbg !16213
  br label %lor.end, !dbg !16213

lor.end:                                          ; preds = %lor.rhs, %for.end
  %32 = phi i1 [ true, %for.end ], [ %tobool30, %lor.rhs ]
  %lor.ext = zext i1 %32 to i32, !dbg !16214
  %33 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16216
  %coupling_point31 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %33, i32 0, i32 0, !dbg !16217
  %34 = load i32, i32* %coupling_point31, align 4, !dbg !16218
  %add = add i32 %34, %lor.ext, !dbg !16218
  store i32 %add, i32* %coupling_point31, align 4, !dbg !16218
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16219
  %call32 = call i32 @get_bits(%struct.GetBitContext* %35, i32 1), !dbg !16220
  store i32 %call32, i32* %sign, align 4, !dbg !16221
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16222
  %call33 = call i32 @get_bits(%struct.GetBitContext* %36, i32 2), !dbg !16223
  store i32 %call33, i32* %scale, align 4, !dbg !16224
  %37 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16225
  %38 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !16227
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16228
  %call34 = call i32 @decode_ics(%struct.AACContext* %37, %struct.SingleChannelElement* %38, %struct.GetBitContext* %39, i32 0, i32 0), !dbg !16229
  store i32 %call34, i32* %ret, align 4, !dbg !16230
  %tobool35 = icmp ne i32 %call34, 0, !dbg !16230
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !16231

if.then36:                                        ; preds = %lor.end
  %40 = load i32, i32* %ret, align 4, !dbg !16232
  store i32 %40, i32* %retval, align 4, !dbg !16233
  br label %return, !dbg !16233

if.end37:                                         ; preds = %lor.end
  store i32 0, i32* %c, align 4, !dbg !16234
  br label %for.cond38, !dbg !16235

for.cond38:                                       ; preds = %for.inc125, %if.end37
  %41 = load i32, i32* %c, align 4, !dbg !16236
  %42 = load i32, i32* %num_gain, align 4, !dbg !16238
  %cmp39 = icmp slt i32 %41, %42, !dbg !16239
  br i1 %cmp39, label %for.body40, label %for.end127, !dbg !16240

for.body40:                                       ; preds = %for.cond38
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !16241, metadata !2068), !dbg !16242
  store i32 0, i32* %idx, align 4, !dbg !16242
  call void @llvm.dbg.declare(metadata i32* %cge, metadata !16243, metadata !2068), !dbg !16244
  store i32 1, i32* %cge, align 4, !dbg !16244
  call void @llvm.dbg.declare(metadata i32* %gain, metadata !16245, metadata !2068), !dbg !16246
  store i32 0, i32* %gain, align 4, !dbg !16246
  call void @llvm.dbg.declare(metadata i32* %gain_cache, metadata !16247, metadata !2068), !dbg !16248
  store i32 1024, i32* %gain_cache, align 4, !dbg !16248
  %43 = load i32, i32* %c, align 4, !dbg !16249
  %tobool41 = icmp ne i32 %43, 0, !dbg !16249
  br i1 %tobool41, label %if.then42, label %if.end62, !dbg !16250

if.then42:                                        ; preds = %for.body40
  %44 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16251
  %coupling_point43 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %44, i32 0, i32 0, !dbg !16252
  %45 = load i32, i32* %coupling_point43, align 4, !dbg !16252
  %cmp44 = icmp eq i32 %45, 3, !dbg !16253
  br i1 %cmp44, label %cond.true, label %cond.false, !dbg !16251

cond.true:                                        ; preds = %if.then42
  br label %cond.end, !dbg !16254

cond.false:                                       ; preds = %if.then42
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16255
  %call45 = call i32 @get_bits1(%struct.GetBitContext* %46), !dbg !16257
  br label %cond.end, !dbg !16258

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond46 = phi i32 [ 1, %cond.true ], [ %call45, %cond.false ], !dbg !16259
  store i32 %cond46, i32* %cge, align 4, !dbg !16261
  %47 = load i32, i32* %cge, align 4, !dbg !16262
  %tobool47 = icmp ne i32 %47, 0, !dbg !16262
  br i1 %tobool47, label %cond.true48, label %cond.false50, !dbg !16262

cond.true48:                                      ; preds = %cond.end
  %48 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16263
  %49 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 1), align 8, !dbg !16264
  store %struct.GetBitContext* %48, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16265
  store [2 x i16]* %49, [2 x i16]** %table.addr.i, align 8, !dbg !16265
  store i32 7, i32* %bits.addr.i, align 4, !dbg !16265
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !16265
  %50 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16266
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %50, i32 0, i32 2, !dbg !16267
  %51 = load i32, i32* %index.i, align 8, !dbg !16267
  store i32 %51, i32* %re_index.i, align 4, !dbg !16105
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16268
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %52, i32 0, i32 4, !dbg !16269
  %53 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !16269
  store i32 %53, i32* %re_size_plus8.i, align 4, !dbg !16107
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16270
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %54, i32 0, i32 0, !dbg !16271
  %55 = load i8*, i8** %buffer.i, align 8, !dbg !16271
  %56 = load i32, i32* %re_index.i, align 4, !dbg !16272
  %shr.i = lshr i32 %56, 3, !dbg !16273
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !16274
  %add.ptr.i = getelementptr inbounds i8, i8* %55, i64 %idx.ext.i, !dbg !16274
  %57 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !16275
  %l.i = bitcast %union.unaligned_32* %57 to i32*, !dbg !16275
  %58 = load i32, i32* %l.i, align 1, !dbg !16275
  store i32 %58, i32* %x.addr.i.i, align 4, !dbg !16276
  %59 = load i32, i32* %x.addr.i.i, align 4, !dbg !16277
  %shl.i.i = shl i32 %59, 8, !dbg !16278
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !16279
  %60 = load i32, i32* %x.addr.i.i, align 4, !dbg !16280
  %shr.i.i = lshr i32 %60, 8, !dbg !16281
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !16282
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !16283
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !16284
  %61 = load i32, i32* %x.addr.i.i, align 4, !dbg !16285
  %shr3.i.i = lshr i32 %61, 16, !dbg !16286
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !16287
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !16288
  %62 = load i32, i32* %x.addr.i.i, align 4, !dbg !16289
  %shr6.i.i = lshr i32 %62, 16, !dbg !16290
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !16291
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !16292
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !16293
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !16294
  %63 = load i32, i32* %re_index.i, align 4, !dbg !16295
  %and.i = and i32 %63, 7, !dbg !16296
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !16297
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !16298
  %64 = load i32, i32* %re_cache.i, align 4, !dbg !16299
  %65 = load i32, i32* %bits.addr.i, align 4, !dbg !16300
  %conv.i = trunc i32 %65 to i8, !dbg !16300
  %call2.i = call i32 @NEG_USR32(i32 %64, i8 signext %conv.i) #12, !dbg !16301
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !16302
  %66 = load i32, i32* %index1.i, align 4, !dbg !16303
  %idxprom.i = zext i32 %66 to i64, !dbg !16304
  %67 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !16304
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %67, i64 %idxprom.i, !dbg !16304
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !16304
  %68 = load i16, i16* %arrayidx3.i, align 2, !dbg !16304
  %conv4.i = sext i16 %68 to i32, !dbg !16304
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !16305
  %69 = load i32, i32* %index1.i, align 4, !dbg !16306
  %idxprom5.i = zext i32 %69 to i64, !dbg !16307
  %70 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !16307
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %70, i64 %idxprom5.i, !dbg !16307
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !16307
  %71 = load i16, i16* %arrayidx7.i, align 2, !dbg !16307
  %conv8.i = sext i16 %71 to i32, !dbg !16307
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !16308
  %72 = load i32, i32* %max_depth.addr.i, align 4, !dbg !16309
  %cmp.i = icmp sgt i32 %72, 1, !dbg !16310
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !16311

land.lhs.true.i:                                  ; preds = %cond.true48
  %73 = load i32, i32* %n.i, align 4, !dbg !16312
  %cmp10.i = icmp slt i32 %73, 0, !dbg !16313
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !16314

if.then.i:                                        ; preds = %land.lhs.true.i
  %74 = load i32, i32* %re_size_plus8.i, align 4, !dbg !16315
  %75 = load i32, i32* %re_index.i, align 4, !dbg !16316
  %76 = load i32, i32* %bits.addr.i, align 4, !dbg !16317
  %add.i = add i32 %75, %76, !dbg !16318
  %cmp12.i = icmp ugt i32 %74, %add.i, !dbg !16319
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !16320

cond.true.i:                                      ; preds = %if.then.i
  %77 = load i32, i32* %re_index.i, align 4, !dbg !16321
  %78 = load i32, i32* %bits.addr.i, align 4, !dbg !16322
  %add14.i = add i32 %77, %78, !dbg !16323
  br label %cond.end.i, !dbg !16324

cond.false.i:                                     ; preds = %if.then.i
  %79 = load i32, i32* %re_size_plus8.i, align 4, !dbg !16325
  br label %cond.end.i, !dbg !16326

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %79, %cond.false.i ], !dbg !16327
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !16328
  %80 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16329
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %80, i32 0, i32 0, !dbg !16330
  %81 = load i8*, i8** %buffer15.i, align 8, !dbg !16330
  %82 = load i32, i32* %re_index.i, align 4, !dbg !16331
  %shr16.i = lshr i32 %82, 3, !dbg !16332
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !16333
  %add.ptr18.i = getelementptr inbounds i8, i8* %81, i64 %idx.ext17.i, !dbg !16333
  %83 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !16334
  %l19.i = bitcast %union.unaligned_32* %83 to i32*, !dbg !16334
  %84 = load i32, i32* %l19.i, align 1, !dbg !16334
  store i32 %84, i32* %x.addr.i81.i, align 4, !dbg !16335
  %85 = load i32, i32* %x.addr.i81.i, align 4, !dbg !16336
  %shl.i82.i = shl i32 %85, 8, !dbg !16337
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !16338
  %86 = load i32, i32* %x.addr.i81.i, align 4, !dbg !16339
  %shr.i84.i = lshr i32 %86, 8, !dbg !16340
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !16341
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !16342
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !16343
  %87 = load i32, i32* %x.addr.i81.i, align 4, !dbg !16344
  %shr3.i88.i = lshr i32 %87, 16, !dbg !16345
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !16346
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !16347
  %88 = load i32, i32* %x.addr.i81.i, align 4, !dbg !16348
  %shr6.i91.i = lshr i32 %88, 16, !dbg !16349
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !16350
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !16351
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !16352
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !16353
  %89 = load i32, i32* %re_index.i, align 4, !dbg !16354
  %and21.i = and i32 %89, 7, !dbg !16355
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !16356
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !16357
  %90 = load i32, i32* %n.i, align 4, !dbg !16358
  %sub.i = sub nsw i32 0, %90, !dbg !16359
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !16360
  %91 = load i32, i32* %re_cache.i, align 4, !dbg !16361
  %92 = load i32, i32* %nb_bits.i, align 4, !dbg !16362
  %conv23.i = trunc i32 %92 to i8, !dbg !16362
  %call24.i = call i32 @NEG_USR32(i32 %91, i8 signext %conv23.i) #12, !dbg !16363
  %93 = load i32, i32* %code.i, align 4, !dbg !16364
  %add25.i = add i32 %call24.i, %93, !dbg !16365
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !16366
  %94 = load i32, i32* %index1.i, align 4, !dbg !16367
  %idxprom26.i = zext i32 %94 to i64, !dbg !16368
  %95 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !16368
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %95, i64 %idxprom26.i, !dbg !16368
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !16368
  %96 = load i16, i16* %arrayidx28.i, align 2, !dbg !16368
  %conv29.i = sext i16 %96 to i32, !dbg !16368
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !16369
  %97 = load i32, i32* %index1.i, align 4, !dbg !16370
  %idxprom30.i = zext i32 %97 to i64, !dbg !16371
  %98 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !16371
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %98, i64 %idxprom30.i, !dbg !16371
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !16371
  %99 = load i16, i16* %arrayidx32.i, align 2, !dbg !16371
  %conv33.i = sext i16 %99 to i32, !dbg !16371
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !16372
  %100 = load i32, i32* %max_depth.addr.i, align 4, !dbg !16373
  %cmp34.i = icmp sgt i32 %100, 2, !dbg !16374
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !16375

land.lhs.true36.i:                                ; preds = %cond.end.i
  %101 = load i32, i32* %n.i, align 4, !dbg !16376
  %cmp37.i = icmp slt i32 %101, 0, !dbg !16377
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !16378

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %102 = load i32, i32* %re_size_plus8.i, align 4, !dbg !16379
  %103 = load i32, i32* %re_index.i, align 4, !dbg !16380
  %104 = load i32, i32* %nb_bits.i, align 4, !dbg !16381
  %add40.i = add i32 %103, %104, !dbg !16382
  %cmp41.i = icmp ugt i32 %102, %add40.i, !dbg !16383
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !16384

cond.true43.i:                                    ; preds = %if.then39.i
  %105 = load i32, i32* %re_index.i, align 4, !dbg !16385
  %106 = load i32, i32* %nb_bits.i, align 4, !dbg !16386
  %add44.i = add i32 %105, %106, !dbg !16387
  br label %cond.end46.i, !dbg !16388

cond.false45.i:                                   ; preds = %if.then39.i
  %107 = load i32, i32* %re_size_plus8.i, align 4, !dbg !16389
  br label %cond.end46.i, !dbg !16390

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %107, %cond.false45.i ], !dbg !16391
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !16392
  %108 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16393
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %108, i32 0, i32 0, !dbg !16394
  %109 = load i8*, i8** %buffer48.i, align 8, !dbg !16394
  %110 = load i32, i32* %re_index.i, align 4, !dbg !16395
  %shr49.i = lshr i32 %110, 3, !dbg !16396
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !16397
  %add.ptr51.i = getelementptr inbounds i8, i8* %109, i64 %idx.ext50.i, !dbg !16397
  %111 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !16398
  %l52.i = bitcast %union.unaligned_32* %111 to i32*, !dbg !16398
  %112 = load i32, i32* %l52.i, align 1, !dbg !16398
  store i32 %112, i32* %x.addr.i96.i, align 4, !dbg !16399
  %113 = load i32, i32* %x.addr.i96.i, align 4, !dbg !16400
  %shl.i97.i = shl i32 %113, 8, !dbg !16401
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !16402
  %114 = load i32, i32* %x.addr.i96.i, align 4, !dbg !16403
  %shr.i99.i = lshr i32 %114, 8, !dbg !16404
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !16405
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !16406
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !16407
  %115 = load i32, i32* %x.addr.i96.i, align 4, !dbg !16408
  %shr3.i103.i = lshr i32 %115, 16, !dbg !16409
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !16410
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !16411
  %116 = load i32, i32* %x.addr.i96.i, align 4, !dbg !16412
  %shr6.i106.i = lshr i32 %116, 16, !dbg !16413
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !16414
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !16415
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !16416
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !16417
  %117 = load i32, i32* %re_index.i, align 4, !dbg !16418
  %and54.i = and i32 %117, 7, !dbg !16419
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !16420
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !16421
  %118 = load i32, i32* %n.i, align 4, !dbg !16422
  %sub56.i = sub nsw i32 0, %118, !dbg !16423
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !16424
  %119 = load i32, i32* %re_cache.i, align 4, !dbg !16425
  %120 = load i32, i32* %nb_bits.i, align 4, !dbg !16426
  %conv57.i = trunc i32 %120 to i8, !dbg !16426
  %call58.i = call i32 @NEG_USR32(i32 %119, i8 signext %conv57.i) #12, !dbg !16427
  %121 = load i32, i32* %code.i, align 4, !dbg !16428
  %add59.i = add i32 %call58.i, %121, !dbg !16429
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !16430
  %122 = load i32, i32* %index1.i, align 4, !dbg !16431
  %idxprom60.i = zext i32 %122 to i64, !dbg !16432
  %123 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !16432
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %123, i64 %idxprom60.i, !dbg !16432
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !16432
  %124 = load i16, i16* %arrayidx62.i, align 2, !dbg !16432
  %conv63.i = sext i16 %124 to i32, !dbg !16432
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !16433
  %125 = load i32, i32* %index1.i, align 4, !dbg !16434
  %idxprom64.i = zext i32 %125 to i64, !dbg !16435
  %126 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !16435
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %126, i64 %idxprom64.i, !dbg !16435
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !16435
  %127 = load i16, i16* %arrayidx66.i, align 2, !dbg !16435
  %conv67.i = sext i16 %127 to i32, !dbg !16435
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !16436
  br label %if.end.i, !dbg !16437

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !16438

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %cond.true48
  %128 = load i32, i32* %n.i, align 4, !dbg !16439
  %129 = load i32, i32* %re_cache.i, align 4, !dbg !16440
  %shl70.i = shl i32 %129, %128, !dbg !16440
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !16440
  %130 = load i32, i32* %re_size_plus8.i, align 4, !dbg !16441
  %131 = load i32, i32* %re_index.i, align 4, !dbg !16442
  %132 = load i32, i32* %n.i, align 4, !dbg !16443
  %add71.i = add i32 %131, %132, !dbg !16444
  %cmp72.i = icmp ugt i32 %130, %add71.i, !dbg !16445
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !16446

cond.true74.i:                                    ; preds = %if.end68.i
  %133 = load i32, i32* %re_index.i, align 4, !dbg !16447
  %134 = load i32, i32* %n.i, align 4, !dbg !16448
  %add75.i = add i32 %133, %134, !dbg !16449
  br label %get_vlc2.exit, !dbg !16450

cond.false76.i:                                   ; preds = %if.end68.i
  %135 = load i32, i32* %re_size_plus8.i, align 4, !dbg !16451
  br label %get_vlc2.exit, !dbg !16452

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %135, %cond.false76.i ], !dbg !16453
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !16454
  %136 = load i32, i32* %re_index.i, align 4, !dbg !16455
  %137 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16456
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %137, i32 0, i32 2, !dbg !16457
  store i32 %136, i32* %index80.i, align 8, !dbg !16458
  %138 = load i32, i32* %code.i, align 4, !dbg !16459
  %sub = sub nsw i32 %138, 60, !dbg !16460
  br label %cond.end51, !dbg !16461

cond.false50:                                     ; preds = %cond.end
  br label %cond.end51, !dbg !16462

cond.end51:                                       ; preds = %cond.false50, %get_vlc2.exit
  %cond52 = phi i32 [ %sub, %get_vlc2.exit ], [ 0, %cond.false50 ], !dbg !16463
  store i32 %cond52, i32* %gain, align 4, !dbg !16464
  %139 = load i32, i32* %gain, align 4, !dbg !16465
  %sub53 = sub nsw i32 0, %139, !dbg !16466
  %140 = load i32, i32* %scale, align 4, !dbg !16467
  %shl = shl i32 1, %140, !dbg !16468
  %mul54 = mul nsw i32 %sub53, %shl, !dbg !16469
  %add55 = add nsw i32 %mul54, 1024, !dbg !16470
  store i32 %add55, i32* %gain_cache, align 4, !dbg !16471
  %141 = load i32, i32* %gain_cache, align 4, !dbg !16472
  %call56 = call i32 @abs(i32 %141) #2, !dbg !16474
  %sub57 = sub nsw i32 %call56, 1024, !dbg !16475
  %shr58 = ashr i32 %sub57, 3, !dbg !16476
  %cmp59 = icmp sgt i32 %shr58, 30, !dbg !16477
  br i1 %cmp59, label %if.then60, label %if.end61, !dbg !16478

if.then60:                                        ; preds = %cond.end51
  store i32 -34, i32* %retval, align 4, !dbg !16479
  br label %return, !dbg !16479

if.end61:                                         ; preds = %cond.end51
  br label %if.end62, !dbg !16480

if.end62:                                         ; preds = %if.end61, %for.body40
  %142 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16481
  %coupling_point63 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %142, i32 0, i32 0, !dbg !16482
  %143 = load i32, i32* %coupling_point63, align 4, !dbg !16482
  %cmp64 = icmp eq i32 %143, 3, !dbg !16483
  br i1 %cmp64, label %if.then65, label %if.else70, !dbg !16484

if.then65:                                        ; preds = %if.end62
  %144 = load i32, i32* %gain_cache, align 4, !dbg !16485
  %145 = load i32, i32* %c, align 4, !dbg !16487
  %idxprom66 = sext i32 %145 to i64, !dbg !16488
  %146 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16488
  %gain67 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %146, i32 0, i32 5, !dbg !16489
  %arrayidx68 = getelementptr inbounds [16 x [120 x i32]], [16 x [120 x i32]]* %gain67, i64 0, i64 %idxprom66, !dbg !16488
  %arrayidx69 = getelementptr inbounds [120 x i32], [120 x i32]* %arrayidx68, i64 0, i64 0, !dbg !16488
  store i32 %144, i32* %arrayidx69, align 4, !dbg !16490
  br label %if.end124, !dbg !16491

if.else70:                                        ; preds = %if.end62
  store i32 0, i32* %g, align 4, !dbg !16492
  br label %for.cond71, !dbg !16493

for.cond71:                                       ; preds = %for.inc121, %if.else70
  %147 = load i32, i32* %g, align 4, !dbg !16494
  %148 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !16496
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %148, i32 0, i32 0, !dbg !16497
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 3, !dbg !16498
  %149 = load i32, i32* %num_window_groups, align 16, !dbg !16498
  %cmp72 = icmp slt i32 %147, %149, !dbg !16499
  br i1 %cmp72, label %for.body73, label %for.end123, !dbg !16500

for.body73:                                       ; preds = %for.cond71
  store i32 0, i32* %sfb, align 4, !dbg !16501
  br label %for.cond74, !dbg !16502

for.cond74:                                       ; preds = %for.inc117, %for.body73
  %150 = load i32, i32* %sfb, align 4, !dbg !16503
  %151 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !16505
  %ics75 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %151, i32 0, i32 0, !dbg !16506
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics75, i32 0, i32 0, !dbg !16507
  %152 = load i8, i8* %max_sfb, align 32, !dbg !16507
  %conv = zext i8 %152 to i32, !dbg !16505
  %cmp76 = icmp slt i32 %150, %conv, !dbg !16508
  br i1 %cmp76, label %for.body78, label %for.end120, !dbg !16509

for.body78:                                       ; preds = %for.cond74
  %153 = load i32, i32* %idx, align 4, !dbg !16510
  %idxprom79 = sext i32 %153 to i64, !dbg !16511
  %154 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !16511
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %154, i32 0, i32 3, !dbg !16512
  %arrayidx80 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom79, !dbg !16511
  %155 = load i32, i32* %arrayidx80, align 4, !dbg !16511
  %cmp81 = icmp ne i32 %155, 0, !dbg !16513
  br i1 %cmp81, label %if.then83, label %if.end116, !dbg !16514

if.then83:                                        ; preds = %for.body78
  %156 = load i32, i32* %cge, align 4, !dbg !16515
  %tobool84 = icmp ne i32 %156, 0, !dbg !16515
  br i1 %tobool84, label %if.end110, label %if.then85, !dbg !16516

if.then85:                                        ; preds = %if.then83
  call void @llvm.dbg.declare(metadata i32* %t, metadata !16517, metadata !2068), !dbg !16518
  %157 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16519
  %158 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 1), align 8, !dbg !16520
  store %struct.GetBitContext* %157, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !16521
  store [2 x i16]* %158, [2 x i16]** %table.addr.i132, align 8, !dbg !16521
  store i32 7, i32* %bits.addr.i133, align 4, !dbg !16521
  store i32 3, i32* %max_depth.addr.i134, align 4, !dbg !16521
  %159 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !16522
  %index.i142 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %159, i32 0, i32 2, !dbg !16523
  %160 = load i32, i32* %index.i142, align 8, !dbg !16523
  store i32 %160, i32* %re_index.i136, align 4, !dbg !16084
  %161 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !16524
  %size_in_bits_plus8.i143 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %161, i32 0, i32 4, !dbg !16525
  %162 = load i32, i32* %size_in_bits_plus8.i143, align 8, !dbg !16525
  store i32 %162, i32* %re_size_plus8.i138, align 4, !dbg !16086
  %163 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !16526
  %buffer.i144 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %163, i32 0, i32 0, !dbg !16527
  %164 = load i8*, i8** %buffer.i144, align 8, !dbg !16527
  %165 = load i32, i32* %re_index.i136, align 4, !dbg !16528
  %shr.i145 = lshr i32 %165, 3, !dbg !16529
  %idx.ext.i146 = zext i32 %shr.i145 to i64, !dbg !16530
  %add.ptr.i147 = getelementptr inbounds i8, i8* %164, i64 %idx.ext.i146, !dbg !16530
  %166 = bitcast i8* %add.ptr.i147 to %union.unaligned_32*, !dbg !16531
  %l.i148 = bitcast %union.unaligned_32* %166 to i32*, !dbg !16531
  %167 = load i32, i32* %l.i148, align 1, !dbg !16531
  store i32 %167, i32* %x.addr.i.i130, align 4, !dbg !16532
  %168 = load i32, i32* %x.addr.i.i130, align 4, !dbg !16533
  %shl.i.i149 = shl i32 %168, 8, !dbg !16534
  %and.i.i150 = and i32 %shl.i.i149, 65280, !dbg !16535
  %169 = load i32, i32* %x.addr.i.i130, align 4, !dbg !16536
  %shr.i.i151 = lshr i32 %169, 8, !dbg !16537
  %and1.i.i152 = and i32 %shr.i.i151, 255, !dbg !16538
  %or.i.i153 = or i32 %and.i.i150, %and1.i.i152, !dbg !16539
  %shl2.i.i154 = shl i32 %or.i.i153, 16, !dbg !16540
  %170 = load i32, i32* %x.addr.i.i130, align 4, !dbg !16541
  %shr3.i.i155 = lshr i32 %170, 16, !dbg !16542
  %shl4.i.i156 = shl i32 %shr3.i.i155, 8, !dbg !16543
  %and5.i.i157 = and i32 %shl4.i.i156, 65280, !dbg !16544
  %171 = load i32, i32* %x.addr.i.i130, align 4, !dbg !16545
  %shr6.i.i158 = lshr i32 %171, 16, !dbg !16546
  %shr7.i.i159 = lshr i32 %shr6.i.i158, 8, !dbg !16547
  %and8.i.i160 = and i32 %shr7.i.i159, 255, !dbg !16548
  %or9.i.i161 = or i32 %and5.i.i157, %and8.i.i160, !dbg !16549
  %or10.i.i162 = or i32 %shl2.i.i154, %or9.i.i161, !dbg !16550
  %172 = load i32, i32* %re_index.i136, align 4, !dbg !16551
  %and.i163 = and i32 %172, 7, !dbg !16552
  %shl.i164 = shl i32 %or10.i.i162, %and.i163, !dbg !16553
  store i32 %shl.i164, i32* %re_cache.i137, align 4, !dbg !16554
  %173 = load i32, i32* %re_cache.i137, align 4, !dbg !16555
  %174 = load i32, i32* %bits.addr.i133, align 4, !dbg !16556
  %conv.i165 = trunc i32 %174 to i8, !dbg !16556
  %call2.i166 = call i32 @NEG_USR32(i32 %173, i8 signext %conv.i165) #12, !dbg !16557
  store i32 %call2.i166, i32* %index1.i141, align 4, !dbg !16558
  %175 = load i32, i32* %index1.i141, align 4, !dbg !16559
  %idxprom.i167 = zext i32 %175 to i64, !dbg !16560
  %176 = load [2 x i16]*, [2 x i16]** %table.addr.i132, align 8, !dbg !16560
  %arrayidx.i168 = getelementptr inbounds [2 x i16], [2 x i16]* %176, i64 %idxprom.i167, !dbg !16560
  %arrayidx3.i169 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i168, i64 0, i64 0, !dbg !16560
  %177 = load i16, i16* %arrayidx3.i169, align 2, !dbg !16560
  %conv4.i170 = sext i16 %177 to i32, !dbg !16560
  store i32 %conv4.i170, i32* %code.i135, align 4, !dbg !16561
  %178 = load i32, i32* %index1.i141, align 4, !dbg !16562
  %idxprom5.i171 = zext i32 %178 to i64, !dbg !16563
  %179 = load [2 x i16]*, [2 x i16]** %table.addr.i132, align 8, !dbg !16563
  %arrayidx6.i172 = getelementptr inbounds [2 x i16], [2 x i16]* %179, i64 %idxprom5.i171, !dbg !16563
  %arrayidx7.i173 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i172, i64 0, i64 1, !dbg !16563
  %180 = load i16, i16* %arrayidx7.i173, align 2, !dbg !16563
  %conv8.i174 = sext i16 %180 to i32, !dbg !16563
  store i32 %conv8.i174, i32* %n.i139, align 4, !dbg !16564
  %181 = load i32, i32* %max_depth.addr.i134, align 4, !dbg !16565
  %cmp.i175 = icmp sgt i32 %181, 1, !dbg !16566
  br i1 %cmp.i175, label %land.lhs.true.i177, label %if.end68.i264, !dbg !16567

land.lhs.true.i177:                               ; preds = %if.then85
  %182 = load i32, i32* %n.i139, align 4, !dbg !16568
  %cmp10.i176 = icmp slt i32 %182, 0, !dbg !16569
  br i1 %cmp10.i176, label %if.then.i180, label %if.end68.i264, !dbg !16570

if.then.i180:                                     ; preds = %land.lhs.true.i177
  %183 = load i32, i32* %re_size_plus8.i138, align 4, !dbg !16571
  %184 = load i32, i32* %re_index.i136, align 4, !dbg !16572
  %185 = load i32, i32* %bits.addr.i133, align 4, !dbg !16573
  %add.i178 = add i32 %184, %185, !dbg !16574
  %cmp12.i179 = icmp ugt i32 %183, %add.i178, !dbg !16575
  br i1 %cmp12.i179, label %cond.true.i182, label %cond.false.i183, !dbg !16576

cond.true.i182:                                   ; preds = %if.then.i180
  %186 = load i32, i32* %re_index.i136, align 4, !dbg !16577
  %187 = load i32, i32* %bits.addr.i133, align 4, !dbg !16578
  %add14.i181 = add i32 %186, %187, !dbg !16579
  br label %cond.end.i219, !dbg !16580

cond.false.i183:                                  ; preds = %if.then.i180
  %188 = load i32, i32* %re_size_plus8.i138, align 4, !dbg !16581
  br label %cond.end.i219, !dbg !16582

cond.end.i219:                                    ; preds = %cond.false.i183, %cond.true.i182
  %cond.i184 = phi i32 [ %add14.i181, %cond.true.i182 ], [ %188, %cond.false.i183 ], !dbg !16583
  store i32 %cond.i184, i32* %re_index.i136, align 4, !dbg !16584
  %189 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !16585
  %buffer15.i185 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %189, i32 0, i32 0, !dbg !16586
  %190 = load i8*, i8** %buffer15.i185, align 8, !dbg !16586
  %191 = load i32, i32* %re_index.i136, align 4, !dbg !16587
  %shr16.i186 = lshr i32 %191, 3, !dbg !16588
  %idx.ext17.i187 = zext i32 %shr16.i186 to i64, !dbg !16589
  %add.ptr18.i188 = getelementptr inbounds i8, i8* %190, i64 %idx.ext17.i187, !dbg !16589
  %192 = bitcast i8* %add.ptr18.i188 to %union.unaligned_32*, !dbg !16590
  %l19.i189 = bitcast %union.unaligned_32* %192 to i32*, !dbg !16590
  %193 = load i32, i32* %l19.i189, align 1, !dbg !16590
  store i32 %193, i32* %x.addr.i81.i129, align 4, !dbg !16591
  %194 = load i32, i32* %x.addr.i81.i129, align 4, !dbg !16592
  %shl.i82.i190 = shl i32 %194, 8, !dbg !16593
  %and.i83.i191 = and i32 %shl.i82.i190, 65280, !dbg !16594
  %195 = load i32, i32* %x.addr.i81.i129, align 4, !dbg !16595
  %shr.i84.i192 = lshr i32 %195, 8, !dbg !16596
  %and1.i85.i193 = and i32 %shr.i84.i192, 255, !dbg !16597
  %or.i86.i194 = or i32 %and.i83.i191, %and1.i85.i193, !dbg !16598
  %shl2.i87.i195 = shl i32 %or.i86.i194, 16, !dbg !16599
  %196 = load i32, i32* %x.addr.i81.i129, align 4, !dbg !16600
  %shr3.i88.i196 = lshr i32 %196, 16, !dbg !16601
  %shl4.i89.i197 = shl i32 %shr3.i88.i196, 8, !dbg !16602
  %and5.i90.i198 = and i32 %shl4.i89.i197, 65280, !dbg !16603
  %197 = load i32, i32* %x.addr.i81.i129, align 4, !dbg !16604
  %shr6.i91.i199 = lshr i32 %197, 16, !dbg !16605
  %shr7.i92.i200 = lshr i32 %shr6.i91.i199, 8, !dbg !16606
  %and8.i93.i201 = and i32 %shr7.i92.i200, 255, !dbg !16607
  %or9.i94.i202 = or i32 %and5.i90.i198, %and8.i93.i201, !dbg !16608
  %or10.i95.i203 = or i32 %shl2.i87.i195, %or9.i94.i202, !dbg !16609
  %198 = load i32, i32* %re_index.i136, align 4, !dbg !16610
  %and21.i204 = and i32 %198, 7, !dbg !16611
  %shl22.i205 = shl i32 %or10.i95.i203, %and21.i204, !dbg !16612
  store i32 %shl22.i205, i32* %re_cache.i137, align 4, !dbg !16613
  %199 = load i32, i32* %n.i139, align 4, !dbg !16614
  %sub.i206 = sub nsw i32 0, %199, !dbg !16615
  store i32 %sub.i206, i32* %nb_bits.i140, align 4, !dbg !16616
  %200 = load i32, i32* %re_cache.i137, align 4, !dbg !16617
  %201 = load i32, i32* %nb_bits.i140, align 4, !dbg !16618
  %conv23.i207 = trunc i32 %201 to i8, !dbg !16618
  %call24.i208 = call i32 @NEG_USR32(i32 %200, i8 signext %conv23.i207) #12, !dbg !16619
  %202 = load i32, i32* %code.i135, align 4, !dbg !16620
  %add25.i209 = add i32 %call24.i208, %202, !dbg !16621
  store i32 %add25.i209, i32* %index1.i141, align 4, !dbg !16622
  %203 = load i32, i32* %index1.i141, align 4, !dbg !16623
  %idxprom26.i210 = zext i32 %203 to i64, !dbg !16624
  %204 = load [2 x i16]*, [2 x i16]** %table.addr.i132, align 8, !dbg !16624
  %arrayidx27.i211 = getelementptr inbounds [2 x i16], [2 x i16]* %204, i64 %idxprom26.i210, !dbg !16624
  %arrayidx28.i212 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i211, i64 0, i64 0, !dbg !16624
  %205 = load i16, i16* %arrayidx28.i212, align 2, !dbg !16624
  %conv29.i213 = sext i16 %205 to i32, !dbg !16624
  store i32 %conv29.i213, i32* %code.i135, align 4, !dbg !16625
  %206 = load i32, i32* %index1.i141, align 4, !dbg !16626
  %idxprom30.i214 = zext i32 %206 to i64, !dbg !16627
  %207 = load [2 x i16]*, [2 x i16]** %table.addr.i132, align 8, !dbg !16627
  %arrayidx31.i215 = getelementptr inbounds [2 x i16], [2 x i16]* %207, i64 %idxprom30.i214, !dbg !16627
  %arrayidx32.i216 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i215, i64 0, i64 1, !dbg !16627
  %208 = load i16, i16* %arrayidx32.i216, align 2, !dbg !16627
  %conv33.i217 = sext i16 %208 to i32, !dbg !16627
  store i32 %conv33.i217, i32* %n.i139, align 4, !dbg !16628
  %209 = load i32, i32* %max_depth.addr.i134, align 4, !dbg !16629
  %cmp34.i218 = icmp sgt i32 %209, 2, !dbg !16630
  br i1 %cmp34.i218, label %land.lhs.true36.i221, label %if.end.i263, !dbg !16631

land.lhs.true36.i221:                             ; preds = %cond.end.i219
  %210 = load i32, i32* %n.i139, align 4, !dbg !16632
  %cmp37.i220 = icmp slt i32 %210, 0, !dbg !16633
  br i1 %cmp37.i220, label %if.then39.i224, label %if.end.i263, !dbg !16634

if.then39.i224:                                   ; preds = %land.lhs.true36.i221
  %211 = load i32, i32* %re_size_plus8.i138, align 4, !dbg !16635
  %212 = load i32, i32* %re_index.i136, align 4, !dbg !16636
  %213 = load i32, i32* %nb_bits.i140, align 4, !dbg !16637
  %add40.i222 = add i32 %212, %213, !dbg !16638
  %cmp41.i223 = icmp ugt i32 %211, %add40.i222, !dbg !16639
  br i1 %cmp41.i223, label %cond.true43.i226, label %cond.false45.i227, !dbg !16640

cond.true43.i226:                                 ; preds = %if.then39.i224
  %214 = load i32, i32* %re_index.i136, align 4, !dbg !16641
  %215 = load i32, i32* %nb_bits.i140, align 4, !dbg !16642
  %add44.i225 = add i32 %214, %215, !dbg !16643
  br label %cond.end46.i262, !dbg !16644

cond.false45.i227:                                ; preds = %if.then39.i224
  %216 = load i32, i32* %re_size_plus8.i138, align 4, !dbg !16645
  br label %cond.end46.i262, !dbg !16646

cond.end46.i262:                                  ; preds = %cond.false45.i227, %cond.true43.i226
  %cond47.i228 = phi i32 [ %add44.i225, %cond.true43.i226 ], [ %216, %cond.false45.i227 ], !dbg !16647
  store i32 %cond47.i228, i32* %re_index.i136, align 4, !dbg !16648
  %217 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !16649
  %buffer48.i229 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %217, i32 0, i32 0, !dbg !16650
  %218 = load i8*, i8** %buffer48.i229, align 8, !dbg !16650
  %219 = load i32, i32* %re_index.i136, align 4, !dbg !16651
  %shr49.i230 = lshr i32 %219, 3, !dbg !16652
  %idx.ext50.i231 = zext i32 %shr49.i230 to i64, !dbg !16653
  %add.ptr51.i232 = getelementptr inbounds i8, i8* %218, i64 %idx.ext50.i231, !dbg !16653
  %220 = bitcast i8* %add.ptr51.i232 to %union.unaligned_32*, !dbg !16654
  %l52.i233 = bitcast %union.unaligned_32* %220 to i32*, !dbg !16654
  %221 = load i32, i32* %l52.i233, align 1, !dbg !16654
  store i32 %221, i32* %x.addr.i96.i128, align 4, !dbg !16655
  %222 = load i32, i32* %x.addr.i96.i128, align 4, !dbg !16656
  %shl.i97.i234 = shl i32 %222, 8, !dbg !16657
  %and.i98.i235 = and i32 %shl.i97.i234, 65280, !dbg !16658
  %223 = load i32, i32* %x.addr.i96.i128, align 4, !dbg !16659
  %shr.i99.i236 = lshr i32 %223, 8, !dbg !16660
  %and1.i100.i237 = and i32 %shr.i99.i236, 255, !dbg !16661
  %or.i101.i238 = or i32 %and.i98.i235, %and1.i100.i237, !dbg !16662
  %shl2.i102.i239 = shl i32 %or.i101.i238, 16, !dbg !16663
  %224 = load i32, i32* %x.addr.i96.i128, align 4, !dbg !16664
  %shr3.i103.i240 = lshr i32 %224, 16, !dbg !16665
  %shl4.i104.i241 = shl i32 %shr3.i103.i240, 8, !dbg !16666
  %and5.i105.i242 = and i32 %shl4.i104.i241, 65280, !dbg !16667
  %225 = load i32, i32* %x.addr.i96.i128, align 4, !dbg !16668
  %shr6.i106.i243 = lshr i32 %225, 16, !dbg !16669
  %shr7.i107.i244 = lshr i32 %shr6.i106.i243, 8, !dbg !16670
  %and8.i108.i245 = and i32 %shr7.i107.i244, 255, !dbg !16671
  %or9.i109.i246 = or i32 %and5.i105.i242, %and8.i108.i245, !dbg !16672
  %or10.i110.i247 = or i32 %shl2.i102.i239, %or9.i109.i246, !dbg !16673
  %226 = load i32, i32* %re_index.i136, align 4, !dbg !16674
  %and54.i248 = and i32 %226, 7, !dbg !16675
  %shl55.i249 = shl i32 %or10.i110.i247, %and54.i248, !dbg !16676
  store i32 %shl55.i249, i32* %re_cache.i137, align 4, !dbg !16677
  %227 = load i32, i32* %n.i139, align 4, !dbg !16678
  %sub56.i250 = sub nsw i32 0, %227, !dbg !16679
  store i32 %sub56.i250, i32* %nb_bits.i140, align 4, !dbg !16680
  %228 = load i32, i32* %re_cache.i137, align 4, !dbg !16681
  %229 = load i32, i32* %nb_bits.i140, align 4, !dbg !16682
  %conv57.i251 = trunc i32 %229 to i8, !dbg !16682
  %call58.i252 = call i32 @NEG_USR32(i32 %228, i8 signext %conv57.i251) #12, !dbg !16683
  %230 = load i32, i32* %code.i135, align 4, !dbg !16684
  %add59.i253 = add i32 %call58.i252, %230, !dbg !16685
  store i32 %add59.i253, i32* %index1.i141, align 4, !dbg !16686
  %231 = load i32, i32* %index1.i141, align 4, !dbg !16687
  %idxprom60.i254 = zext i32 %231 to i64, !dbg !16688
  %232 = load [2 x i16]*, [2 x i16]** %table.addr.i132, align 8, !dbg !16688
  %arrayidx61.i255 = getelementptr inbounds [2 x i16], [2 x i16]* %232, i64 %idxprom60.i254, !dbg !16688
  %arrayidx62.i256 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i255, i64 0, i64 0, !dbg !16688
  %233 = load i16, i16* %arrayidx62.i256, align 2, !dbg !16688
  %conv63.i257 = sext i16 %233 to i32, !dbg !16688
  store i32 %conv63.i257, i32* %code.i135, align 4, !dbg !16689
  %234 = load i32, i32* %index1.i141, align 4, !dbg !16690
  %idxprom64.i258 = zext i32 %234 to i64, !dbg !16691
  %235 = load [2 x i16]*, [2 x i16]** %table.addr.i132, align 8, !dbg !16691
  %arrayidx65.i259 = getelementptr inbounds [2 x i16], [2 x i16]* %235, i64 %idxprom64.i258, !dbg !16691
  %arrayidx66.i260 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i259, i64 0, i64 1, !dbg !16691
  %236 = load i16, i16* %arrayidx66.i260, align 2, !dbg !16691
  %conv67.i261 = sext i16 %236 to i32, !dbg !16691
  store i32 %conv67.i261, i32* %n.i139, align 4, !dbg !16692
  br label %if.end.i263, !dbg !16693

if.end.i263:                                      ; preds = %cond.end46.i262, %land.lhs.true36.i221, %cond.end.i219
  br label %if.end68.i264, !dbg !16694

if.end68.i264:                                    ; preds = %if.end.i263, %land.lhs.true.i177, %if.then85
  %237 = load i32, i32* %n.i139, align 4, !dbg !16695
  %238 = load i32, i32* %re_cache.i137, align 4, !dbg !16696
  %shl70.i265 = shl i32 %238, %237, !dbg !16696
  store i32 %shl70.i265, i32* %re_cache.i137, align 4, !dbg !16696
  %239 = load i32, i32* %re_size_plus8.i138, align 4, !dbg !16697
  %240 = load i32, i32* %re_index.i136, align 4, !dbg !16698
  %241 = load i32, i32* %n.i139, align 4, !dbg !16699
  %add71.i266 = add i32 %240, %241, !dbg !16700
  %cmp72.i267 = icmp ugt i32 %239, %add71.i266, !dbg !16701
  br i1 %cmp72.i267, label %cond.true74.i269, label %cond.false76.i270, !dbg !16702

cond.true74.i269:                                 ; preds = %if.end68.i264
  %242 = load i32, i32* %re_index.i136, align 4, !dbg !16703
  %243 = load i32, i32* %n.i139, align 4, !dbg !16704
  %add75.i268 = add i32 %242, %243, !dbg !16705
  br label %get_vlc2.exit273, !dbg !16706

cond.false76.i270:                                ; preds = %if.end68.i264
  %244 = load i32, i32* %re_size_plus8.i138, align 4, !dbg !16707
  br label %get_vlc2.exit273, !dbg !16708

get_vlc2.exit273:                                 ; preds = %cond.true74.i269, %cond.false76.i270
  %cond78.i271 = phi i32 [ %add75.i268, %cond.true74.i269 ], [ %244, %cond.false76.i270 ], !dbg !16709
  store i32 %cond78.i271, i32* %re_index.i136, align 4, !dbg !16710
  %245 = load i32, i32* %re_index.i136, align 4, !dbg !16711
  %246 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !16712
  %index80.i272 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %246, i32 0, i32 2, !dbg !16713
  store i32 %245, i32* %index80.i272, align 8, !dbg !16714
  %247 = load i32, i32* %code.i135, align 4, !dbg !16715
  %sub87 = sub nsw i32 %247, 60, !dbg !16716
  store i32 %sub87, i32* %t, align 4, !dbg !16518
  %248 = load i32, i32* %t, align 4, !dbg !16717
  %tobool88 = icmp ne i32 %248, 0, !dbg !16717
  br i1 %tobool88, label %if.then89, label %if.end109, !dbg !16719

if.then89:                                        ; preds = %get_vlc2.exit273
  call void @llvm.dbg.declare(metadata i32* %s, metadata !16720, metadata !2068), !dbg !16722
  store i32 1, i32* %s, align 4, !dbg !16722
  %249 = load i32, i32* %t, align 4, !dbg !16723
  %250 = load i32, i32* %gain, align 4, !dbg !16724
  %add90 = add nsw i32 %250, %249, !dbg !16724
  store i32 %add90, i32* %gain, align 4, !dbg !16724
  store i32 %add90, i32* %t, align 4, !dbg !16725
  %251 = load i32, i32* %sign, align 4, !dbg !16726
  %tobool91 = icmp ne i32 %251, 0, !dbg !16726
  br i1 %tobool91, label %if.then92, label %if.end96, !dbg !16728

if.then92:                                        ; preds = %if.then89
  %252 = load i32, i32* %t, align 4, !dbg !16729
  %and = and i32 %252, 1, !dbg !16731
  %mul93 = mul nsw i32 2, %and, !dbg !16732
  %253 = load i32, i32* %s, align 4, !dbg !16733
  %sub94 = sub nsw i32 %253, %mul93, !dbg !16733
  store i32 %sub94, i32* %s, align 4, !dbg !16733
  %254 = load i32, i32* %t, align 4, !dbg !16734
  %shr95 = ashr i32 %254, 1, !dbg !16734
  store i32 %shr95, i32* %t, align 4, !dbg !16734
  br label %if.end96, !dbg !16735

if.end96:                                         ; preds = %if.then92, %if.then89
  %255 = load i32, i32* %t, align 4, !dbg !16736
  %sub97 = sub nsw i32 0, %255, !dbg !16737
  %256 = load i32, i32* %scale, align 4, !dbg !16738
  %shl98 = shl i32 1, %256, !dbg !16739
  %mul99 = mul nsw i32 %sub97, %shl98, !dbg !16740
  %257 = load i32, i32* %s, align 4, !dbg !16741
  %mul100 = mul nsw i32 1024, %257, !dbg !16742
  %add101 = add nsw i32 %mul99, %mul100, !dbg !16743
  store i32 %add101, i32* %gain_cache, align 4, !dbg !16744
  %258 = load i32, i32* %gain_cache, align 4, !dbg !16745
  %call102 = call i32 @abs(i32 %258) #2, !dbg !16747
  %sub103 = sub nsw i32 %call102, 1024, !dbg !16748
  %shr104 = ashr i32 %sub103, 3, !dbg !16749
  %cmp105 = icmp sgt i32 %shr104, 30, !dbg !16750
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !16751

if.then107:                                       ; preds = %if.end96
  store i32 -34, i32* %retval, align 4, !dbg !16752
  br label %return, !dbg !16752

if.end108:                                        ; preds = %if.end96
  br label %if.end109, !dbg !16753

if.end109:                                        ; preds = %if.end108, %get_vlc2.exit273
  br label %if.end110, !dbg !16754

if.end110:                                        ; preds = %if.end109, %if.then83
  %259 = load i32, i32* %gain_cache, align 4, !dbg !16755
  %260 = load i32, i32* %idx, align 4, !dbg !16756
  %idxprom111 = sext i32 %260 to i64, !dbg !16757
  %261 = load i32, i32* %c, align 4, !dbg !16758
  %idxprom112 = sext i32 %261 to i64, !dbg !16757
  %262 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !16757
  %gain113 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %262, i32 0, i32 5, !dbg !16759
  %arrayidx114 = getelementptr inbounds [16 x [120 x i32]], [16 x [120 x i32]]* %gain113, i64 0, i64 %idxprom112, !dbg !16757
  %arrayidx115 = getelementptr inbounds [120 x i32], [120 x i32]* %arrayidx114, i64 0, i64 %idxprom111, !dbg !16757
  store i32 %259, i32* %arrayidx115, align 4, !dbg !16760
  br label %if.end116, !dbg !16761

if.end116:                                        ; preds = %if.end110, %for.body78
  br label %for.inc117, !dbg !16762

for.inc117:                                       ; preds = %if.end116
  %263 = load i32, i32* %sfb, align 4, !dbg !16763
  %inc118 = add nsw i32 %263, 1, !dbg !16763
  store i32 %inc118, i32* %sfb, align 4, !dbg !16763
  %264 = load i32, i32* %idx, align 4, !dbg !16765
  %inc119 = add nsw i32 %264, 1, !dbg !16765
  store i32 %inc119, i32* %idx, align 4, !dbg !16765
  br label %for.cond74, !dbg !16766, !llvm.loop !16767

for.end120:                                       ; preds = %for.cond74
  br label %for.inc121, !dbg !16769

for.inc121:                                       ; preds = %for.end120
  %265 = load i32, i32* %g, align 4, !dbg !16770
  %inc122 = add nsw i32 %265, 1, !dbg !16770
  store i32 %inc122, i32* %g, align 4, !dbg !16770
  br label %for.cond71, !dbg !16772, !llvm.loop !16773

for.end123:                                       ; preds = %for.cond71
  br label %if.end124

if.end124:                                        ; preds = %for.end123, %if.then65
  br label %for.inc125, !dbg !16775

for.inc125:                                       ; preds = %if.end124
  %266 = load i32, i32* %c, align 4, !dbg !16776
  %inc126 = add nsw i32 %266, 1, !dbg !16776
  store i32 %inc126, i32* %c, align 4, !dbg !16776
  br label %for.cond38, !dbg !16778, !llvm.loop !16779

for.end127:                                       ; preds = %for.cond38
  store i32 0, i32* %retval, align 4, !dbg !16781
  br label %return, !dbg !16781

return:                                           ; preds = %for.end127, %if.then107, %if.then60, %if.then36
  %267 = load i32, i32* %retval, align 4, !dbg !16782
  ret i32 %267, !dbg !16782
}

; Function Attrs: nounwind uwtable
define internal i32 @skip_data_stream_element(%struct.AACContext* %ac, %struct.GetBitContext* %gb) #1 !dbg !16783 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %byte_align = alloca i32, align 4
  %count = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !16784, metadata !2068), !dbg !16785
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !16786, metadata !2068), !dbg !16787
  call void @llvm.dbg.declare(metadata i32* %byte_align, metadata !16788, metadata !2068), !dbg !16789
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16790
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !16791
  store i32 %call, i32* %byte_align, align 4, !dbg !16789
  call void @llvm.dbg.declare(metadata i32* %count, metadata !16792, metadata !2068), !dbg !16793
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16794
  %call1 = call i32 @get_bits(%struct.GetBitContext* %1, i32 8), !dbg !16795
  store i32 %call1, i32* %count, align 4, !dbg !16793
  %2 = load i32, i32* %count, align 4, !dbg !16796
  %cmp = icmp eq i32 %2, 255, !dbg !16798
  br i1 %cmp, label %if.then, label %if.end, !dbg !16799

if.then:                                          ; preds = %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16800
  %call2 = call i32 @get_bits(%struct.GetBitContext* %3, i32 8), !dbg !16801
  %4 = load i32, i32* %count, align 4, !dbg !16802
  %add = add i32 %4, %call2, !dbg !16802
  store i32 %add, i32* %count, align 4, !dbg !16802
  br label %if.end, !dbg !16803

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %byte_align, align 4, !dbg !16804
  %tobool = icmp ne i32 %5, 0, !dbg !16804
  br i1 %tobool, label %if.then3, label %if.end5, !dbg !16806

if.then3:                                         ; preds = %if.end
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16807
  %call4 = call i8* @align_get_bits(%struct.GetBitContext* %6), !dbg !16808
  br label %if.end5, !dbg !16808

if.end5:                                          ; preds = %if.then3, %if.end
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16809
  %call6 = call i32 @get_bits_left(%struct.GetBitContext* %7), !dbg !16811
  %8 = load i32, i32* %count, align 4, !dbg !16812
  %mul = mul nsw i32 8, %8, !dbg !16813
  %cmp7 = icmp slt i32 %call6, %mul, !dbg !16814
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !16815

if.then8:                                         ; preds = %if.end5
  %9 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16816
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %9, i32 0, i32 1, !dbg !16818
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16818
  %11 = bitcast %struct.AVCodecContext* %10 to i8*, !dbg !16816
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.70, i32 0, i32 0)), !dbg !16819
  store i32 -1094995529, i32* %retval, align 4, !dbg !16820
  br label %return, !dbg !16820

if.end9:                                          ; preds = %if.end5
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16821
  %13 = load i32, i32* %count, align 4, !dbg !16822
  %mul10 = mul nsw i32 8, %13, !dbg !16823
  call void @skip_bits_long(%struct.GetBitContext* %12, i32 %mul10), !dbg !16824
  store i32 0, i32* %retval, align 4, !dbg !16825
  br label %return, !dbg !16825

return:                                           ; preds = %if.end9, %if.then8
  %14 = load i32, i32* %retval, align 4, !dbg !16826
  ret i32 %14, !dbg !16826
}

; Function Attrs: nounwind uwtable
define internal void @pop_output_configuration(%struct.AACContext* %ac) #1 !dbg !16827 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !16828, metadata !2068), !dbg !16829
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16830
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 21, !dbg !16832
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !16830
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 5, !dbg !16833
  %1 = load i32, i32* %status, align 8, !dbg !16833
  %cmp = icmp ne i32 %1, 4, !dbg !16834
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16835

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16836
  %oc1 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 21, !dbg !16838
  %arrayidx2 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc1, i64 0, i64 0, !dbg !16836
  %status3 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx2, i32 0, i32 5, !dbg !16839
  %3 = load i32, i32* %status3, align 32, !dbg !16839
  %cmp4 = icmp ne i32 %3, 0, !dbg !16840
  br i1 %cmp4, label %if.then, label %if.end, !dbg !16841

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16842
  %oc5 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 21, !dbg !16844
  %arrayidx6 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc5, i64 0, i64 1, !dbg !16842
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16845
  %oc7 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 21, !dbg !16846
  %arrayidx8 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc7, i64 0, i64 0, !dbg !16845
  %6 = bitcast %struct.OutputConfiguration* %arrayidx6 to i8*, !dbg !16845
  %7 = bitcast %struct.OutputConfiguration* %arrayidx8 to i8*, !dbg !16845
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 264, i32 8, i1 false), !dbg !16845
  %8 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16847
  %oc9 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 21, !dbg !16848
  %arrayidx10 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc9, i64 0, i64 1, !dbg !16847
  %channels = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx10, i32 0, i32 3, !dbg !16849
  %9 = load i32, i32* %channels, align 4, !dbg !16849
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16850
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 1, !dbg !16851
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16851
  %channels11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 83, !dbg !16852
  store i32 %9, i32* %channels11, align 4, !dbg !16853
  %12 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16854
  %oc12 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 21, !dbg !16855
  %arrayidx13 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc12, i64 0, i64 1, !dbg !16854
  %channel_layout = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx13, i32 0, i32 4, !dbg !16856
  %13 = load i64, i64* %channel_layout, align 8, !dbg !16856
  %14 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16857
  %avctx14 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %14, i32 0, i32 1, !dbg !16858
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx14, align 8, !dbg !16858
  %channel_layout15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 89, !dbg !16859
  store i64 %13, i64* %channel_layout15, align 8, !dbg !16860
  %16 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16861
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16862
  %oc16 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %17, i32 0, i32 21, !dbg !16863
  %arrayidx17 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc16, i64 0, i64 1, !dbg !16862
  %layout_map = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx17, i32 0, i32 1, !dbg !16864
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !16862
  %18 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16865
  %oc18 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %18, i32 0, i32 21, !dbg !16866
  %arrayidx19 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc18, i64 0, i64 1, !dbg !16865
  %layout_map_tags = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx19, i32 0, i32 2, !dbg !16867
  %19 = load i32, i32* %layout_map_tags, align 8, !dbg !16867
  %20 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16868
  %oc20 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 21, !dbg !16869
  %arrayidx21 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc20, i64 0, i64 1, !dbg !16868
  %status22 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx21, i32 0, i32 5, !dbg !16870
  %21 = load i32, i32* %status22, align 8, !dbg !16870
  %call = call i32 @output_configure(%struct.AACContext* %16, [3 x i8]* %arraydecay, i32 %19, i32 %21, i32 0), !dbg !16871
  br label %if.end, !dbg !16872

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !16873
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_extension_payload(%struct.AACContext* %ac, %struct.GetBitContext* %gb, i32 %cnt, %struct.ChannelElement* %che, i32 %elem_type) #1 !dbg !16874 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %cnt.addr = alloca i32, align 4
  %che.addr = alloca %struct.ChannelElement*, align 8
  %elem_type.addr = alloca i32, align 4
  %crc_flag = alloca i32, align 4
  %res = alloca i32, align 4
  %type = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !16877, metadata !2068), !dbg !16878
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !16879, metadata !2068), !dbg !16880
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !16881, metadata !2068), !dbg !16882
  store %struct.ChannelElement* %che, %struct.ChannelElement** %che.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che.addr, metadata !16883, metadata !2068), !dbg !16884
  store i32 %elem_type, i32* %elem_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elem_type.addr, metadata !16885, metadata !2068), !dbg !16886
  call void @llvm.dbg.declare(metadata i32* %crc_flag, metadata !16887, metadata !2068), !dbg !16888
  store i32 0, i32* %crc_flag, align 4, !dbg !16888
  call void @llvm.dbg.declare(metadata i32* %res, metadata !16889, metadata !2068), !dbg !16890
  %0 = load i32, i32* %cnt.addr, align 4, !dbg !16891
  store i32 %0, i32* %res, align 4, !dbg !16890
  call void @llvm.dbg.declare(metadata i32* %type, metadata !16892, metadata !2068), !dbg !16893
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16894
  %call = call i32 @get_bits(%struct.GetBitContext* %1, i32 4), !dbg !16895
  store i32 %call, i32* %type, align 4, !dbg !16893
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16896
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 1, !dbg !16898
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16898
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 134, !dbg !16899
  %4 = load i32, i32* %debug, align 4, !dbg !16899
  %and = and i32 %4, 256, !dbg !16900
  %tobool = icmp ne i32 %and, 0, !dbg !16900
  br i1 %tobool, label %if.then, label %if.end, !dbg !16901

if.then:                                          ; preds = %entry
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16902
  %avctx1 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 1, !dbg !16903
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !16903
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !16902
  %8 = load i32, i32* %type, align 4, !dbg !16904
  %9 = load i32, i32* %cnt.addr, align 4, !dbg !16905
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 48, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i32 0, i32 0), i32 %8, i32 %9), !dbg !16906
  br label %if.end, !dbg !16906

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %type, align 4, !dbg !16907
  switch i32 %10, label %sw.default [
    i32 14, label %sw.bb
    i32 13, label %sw.bb2
    i32 11, label %sw.bb79
    i32 0, label %sw.bb81
    i32 1, label %sw.bb85
    i32 2, label %sw.bb85
  ], !dbg !16908

sw.bb:                                            ; preds = %if.end
  %11 = load i32, i32* %crc_flag, align 4, !dbg !16909
  %inc = add nsw i32 %11, 1, !dbg !16909
  store i32 %inc, i32* %crc_flag, align 4, !dbg !16909
  br label %sw.bb2, !dbg !16911

sw.bb2:                                           ; preds = %if.end, %sw.bb
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %che.addr, align 8, !dbg !16912
  %tobool3 = icmp ne %struct.ChannelElement* %12, null, !dbg !16912
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !16914

if.then4:                                         ; preds = %sw.bb2
  %13 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16915
  %avctx5 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %13, i32 0, i32 1, !dbg !16917
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx5, align 8, !dbg !16917
  %15 = bitcast %struct.AVCodecContext* %14 to i8*, !dbg !16915
  call void (i8*, i32, i8*, ...) @av_log(i8* %15, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.72, i32 0, i32 0)), !dbg !16918
  %16 = load i32, i32* %res, align 4, !dbg !16919
  store i32 %16, i32* %retval, align 4, !dbg !16920
  br label %return, !dbg !16920

if.else:                                          ; preds = %sw.bb2
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16921
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %17, i32 0, i32 21, !dbg !16923
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !16921
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !16924
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 11, !dbg !16925
  %18 = load i32, i32* %frame_length_short, align 4, !dbg !16925
  %tobool6 = icmp ne i32 %18, 0, !dbg !16921
  br i1 %tobool6, label %if.then7, label %if.else13, !dbg !16926

if.then7:                                         ; preds = %if.else
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16927
  %warned_960_sbr = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 23, !dbg !16930
  %20 = load i32, i32* %warned_960_sbr, align 4, !dbg !16930
  %tobool8 = icmp ne i32 %20, 0, !dbg !16927
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !16931

if.then9:                                         ; preds = %if.then7
  %21 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16932
  %avctx10 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %21, i32 0, i32 1, !dbg !16933
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx10, align 8, !dbg !16933
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !16932
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %23, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.73, i32 0, i32 0)), !dbg !16934
  br label %if.end11, !dbg !16934

if.end11:                                         ; preds = %if.then9, %if.then7
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16935
  %warned_960_sbr12 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 23, !dbg !16936
  store i32 1, i32* %warned_960_sbr12, align 4, !dbg !16937
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16938
  %26 = load i32, i32* %cnt.addr, align 4, !dbg !16939
  %mul = mul nsw i32 8, %26, !dbg !16940
  %sub = sub nsw i32 %mul, 4, !dbg !16941
  call void @skip_bits_long(%struct.GetBitContext* %25, i32 %sub), !dbg !16942
  %27 = load i32, i32* %res, align 4, !dbg !16943
  store i32 %27, i32* %retval, align 4, !dbg !16944
  br label %return, !dbg !16944

if.else13:                                        ; preds = %if.else
  %28 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16945
  %oc14 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %28, i32 0, i32 21, !dbg !16947
  %arrayidx15 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc14, i64 0, i64 1, !dbg !16945
  %m4ac16 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx15, i32 0, i32 0, !dbg !16948
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac16, i32 0, i32 4, !dbg !16949
  %29 = load i32, i32* %sbr, align 8, !dbg !16949
  %tobool17 = icmp ne i32 %29, 0, !dbg !16945
  br i1 %tobool17, label %if.else22, label %if.then18, !dbg !16950

if.then18:                                        ; preds = %if.else13
  %30 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16951
  %avctx19 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %30, i32 0, i32 1, !dbg !16953
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx19, align 8, !dbg !16953
  %32 = bitcast %struct.AVCodecContext* %31 to i8*, !dbg !16951
  call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.74, i32 0, i32 0)), !dbg !16954
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16955
  %34 = load i32, i32* %cnt.addr, align 4, !dbg !16956
  %mul20 = mul nsw i32 8, %34, !dbg !16957
  %sub21 = sub nsw i32 %mul20, 4, !dbg !16958
  call void @skip_bits_long(%struct.GetBitContext* %33, i32 %sub21), !dbg !16959
  %35 = load i32, i32* %res, align 4, !dbg !16960
  store i32 %35, i32* %retval, align 4, !dbg !16961
  br label %return, !dbg !16961

if.else22:                                        ; preds = %if.else13
  %36 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16962
  %oc23 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %36, i32 0, i32 21, !dbg !16964
  %arrayidx24 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc23, i64 0, i64 1, !dbg !16962
  %m4ac25 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx24, i32 0, i32 0, !dbg !16965
  %sbr26 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac25, i32 0, i32 4, !dbg !16966
  %37 = load i32, i32* %sbr26, align 8, !dbg !16966
  %cmp = icmp eq i32 %37, -1, !dbg !16967
  br i1 %cmp, label %land.lhs.true, label %if.else34, !dbg !16968

land.lhs.true:                                    ; preds = %if.else22
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16969
  %oc27 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %38, i32 0, i32 21, !dbg !16971
  %arrayidx28 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc27, i64 0, i64 1, !dbg !16969
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx28, i32 0, i32 5, !dbg !16972
  %39 = load i32, i32* %status, align 8, !dbg !16972
  %cmp29 = icmp eq i32 %39, 4, !dbg !16973
  br i1 %cmp29, label %if.then30, label %if.else34, !dbg !16974

if.then30:                                        ; preds = %land.lhs.true
  %40 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16975
  %avctx31 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %40, i32 0, i32 1, !dbg !16977
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx31, align 8, !dbg !16977
  %42 = bitcast %struct.AVCodecContext* %41 to i8*, !dbg !16975
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 16, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.75, i32 0, i32 0)), !dbg !16978
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16979
  %44 = load i32, i32* %cnt.addr, align 4, !dbg !16980
  %mul32 = mul nsw i32 8, %44, !dbg !16981
  %sub33 = sub nsw i32 %mul32, 4, !dbg !16982
  call void @skip_bits_long(%struct.GetBitContext* %43, i32 %sub33), !dbg !16983
  %45 = load i32, i32* %res, align 4, !dbg !16984
  store i32 %45, i32* %retval, align 4, !dbg !16985
  br label %return, !dbg !16985

if.else34:                                        ; preds = %land.lhs.true, %if.else22
  %46 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16986
  %oc35 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %46, i32 0, i32 21, !dbg !16988
  %arrayidx36 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc35, i64 0, i64 1, !dbg !16986
  %m4ac37 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx36, i32 0, i32 0, !dbg !16989
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac37, i32 0, i32 10, !dbg !16990
  %47 = load i32, i32* %ps, align 8, !dbg !16990
  %cmp38 = icmp eq i32 %47, -1, !dbg !16991
  br i1 %cmp38, label %land.lhs.true39, label %if.else65, !dbg !16992

land.lhs.true39:                                  ; preds = %if.else34
  %48 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16993
  %oc40 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %48, i32 0, i32 21, !dbg !16995
  %arrayidx41 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc40, i64 0, i64 1, !dbg !16993
  %status42 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx41, i32 0, i32 5, !dbg !16996
  %49 = load i32, i32* %status42, align 8, !dbg !16996
  %cmp43 = icmp ult i32 %49, 4, !dbg !16997
  br i1 %cmp43, label %land.lhs.true44, label %if.else65, !dbg !16998

land.lhs.true44:                                  ; preds = %land.lhs.true39
  %50 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16999
  %avctx45 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %50, i32 0, i32 1, !dbg !17001
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx45, align 8, !dbg !17001
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %51, i32 0, i32 83, !dbg !17002
  %52 = load i32, i32* %channels, align 4, !dbg !17002
  %cmp46 = icmp eq i32 %52, 1, !dbg !17003
  br i1 %cmp46, label %if.then47, label %if.else65, !dbg !17004

if.then47:                                        ; preds = %land.lhs.true44
  %53 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17005
  %oc48 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %53, i32 0, i32 21, !dbg !17007
  %arrayidx49 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc48, i64 0, i64 1, !dbg !17005
  %m4ac50 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx49, i32 0, i32 0, !dbg !17008
  %sbr51 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac50, i32 0, i32 4, !dbg !17009
  store i32 1, i32* %sbr51, align 8, !dbg !17010
  %54 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17011
  %oc52 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %54, i32 0, i32 21, !dbg !17012
  %arrayidx53 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc52, i64 0, i64 1, !dbg !17011
  %m4ac54 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx53, i32 0, i32 0, !dbg !17013
  %ps55 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac54, i32 0, i32 10, !dbg !17014
  store i32 1, i32* %ps55, align 8, !dbg !17015
  %55 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17016
  %avctx56 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %55, i32 0, i32 1, !dbg !17017
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx56, align 8, !dbg !17017
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %56, i32 0, i32 153, !dbg !17018
  store i32 28, i32* %profile, align 4, !dbg !17019
  %57 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17020
  %58 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17021
  %oc57 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %58, i32 0, i32 21, !dbg !17022
  %arrayidx58 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc57, i64 0, i64 1, !dbg !17021
  %layout_map = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx58, i32 0, i32 1, !dbg !17023
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !17021
  %59 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17024
  %oc59 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %59, i32 0, i32 21, !dbg !17025
  %arrayidx60 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc59, i64 0, i64 1, !dbg !17024
  %layout_map_tags = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx60, i32 0, i32 2, !dbg !17026
  %60 = load i32, i32* %layout_map_tags, align 8, !dbg !17026
  %61 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17027
  %oc61 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %61, i32 0, i32 21, !dbg !17028
  %arrayidx62 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc61, i64 0, i64 1, !dbg !17027
  %status63 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx62, i32 0, i32 5, !dbg !17029
  %62 = load i32, i32* %status63, align 8, !dbg !17029
  %call64 = call i32 @output_configure(%struct.AACContext* %57, [3 x i8]* %arraydecay, i32 %60, i32 %62, i32 1), !dbg !17030
  br label %if.end72, !dbg !17031

if.else65:                                        ; preds = %land.lhs.true44, %land.lhs.true39, %if.else34
  %63 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17032
  %oc66 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %63, i32 0, i32 21, !dbg !17034
  %arrayidx67 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc66, i64 0, i64 1, !dbg !17032
  %m4ac68 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx67, i32 0, i32 0, !dbg !17035
  %sbr69 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac68, i32 0, i32 4, !dbg !17036
  store i32 1, i32* %sbr69, align 8, !dbg !17037
  %64 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17038
  %avctx70 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %64, i32 0, i32 1, !dbg !17039
  %65 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx70, align 8, !dbg !17039
  %profile71 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %65, i32 0, i32 153, !dbg !17040
  store i32 4, i32* %profile71, align 4, !dbg !17041
  br label %if.end72

if.end72:                                         ; preds = %if.else65, %if.then47
  br label %if.end73

if.end73:                                         ; preds = %if.end72
  br label %if.end74

if.end74:                                         ; preds = %if.end73
  br label %if.end75

if.end75:                                         ; preds = %if.end74
  br label %if.end76

if.end76:                                         ; preds = %if.end75
  %66 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17042
  %67 = load %struct.ChannelElement*, %struct.ChannelElement** %che.addr, align 8, !dbg !17043
  %sbr77 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %67, i32 0, i32 10, !dbg !17044
  %68 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17045
  %69 = load i32, i32* %crc_flag, align 4, !dbg !17046
  %70 = load i32, i32* %cnt.addr, align 4, !dbg !17047
  %71 = load i32, i32* %elem_type.addr, align 4, !dbg !17048
  %call78 = call i32 @ff_decode_sbr_extension_fixed(%struct.AACContext* %66, %struct.SpectralBandReplication* %sbr77, %struct.GetBitContext* %68, i32 %69, i32 %70, i32 %71), !dbg !17049
  store i32 %call78, i32* %res, align 4, !dbg !17050
  br label %sw.epilog, !dbg !17051

sw.bb79:                                          ; preds = %if.end
  %72 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17052
  %che_drc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %72, i32 0, i32 4, !dbg !17053
  %73 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17054
  %call80 = call i32 @decode_dynamic_range(%struct.DynamicRangeControl* %che_drc, %struct.GetBitContext* %73), !dbg !17055
  store i32 %call80, i32* %res, align 4, !dbg !17056
  br label %sw.epilog, !dbg !17057

sw.bb81:                                          ; preds = %if.end
  %74 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17058
  %75 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17059
  %76 = load i32, i32* %cnt.addr, align 4, !dbg !17060
  %mul82 = mul nsw i32 8, %76, !dbg !17061
  %sub83 = sub nsw i32 %mul82, 4, !dbg !17062
  %call84 = call i32 @decode_fill(%struct.AACContext* %74, %struct.GetBitContext* %75, i32 %sub83), !dbg !17063
  br label %sw.epilog, !dbg !17064

sw.bb85:                                          ; preds = %if.end, %if.end
  br label %sw.default, !dbg !17065

sw.default:                                       ; preds = %if.end, %sw.bb85
  %77 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17067
  %78 = load i32, i32* %cnt.addr, align 4, !dbg !17068
  %mul86 = mul nsw i32 8, %78, !dbg !17069
  %sub87 = sub nsw i32 %mul86, 4, !dbg !17070
  call void @skip_bits_long(%struct.GetBitContext* %77, i32 %sub87), !dbg !17071
  br label %sw.epilog, !dbg !17072

sw.epilog:                                        ; preds = %sw.default, %sw.bb81, %sw.bb79, %if.end76
  %79 = load i32, i32* %res, align 4, !dbg !17073
  store i32 %79, i32* %retval, align 4, !dbg !17074
  br label %return, !dbg !17074

return:                                           ; preds = %sw.epilog, %if.then30, %if.then18, %if.end11, %if.then4
  %80 = load i32, i32* %retval, align 4, !dbg !17075
  ret i32 %80, !dbg !17075
}

declare i32 @ff_adts_header_parse(%struct.GetBitContext*, %struct.AACADTSHeaderInfo*) #3

; Function Attrs: nounwind readnone
declare i32 @abs(i32) #9

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @align_get_bits(%struct.GetBitContext* %s) #4 !dbg !17076 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !17079, metadata !2068), !dbg !17080
  call void @llvm.dbg.declare(metadata i32* %n, metadata !17081, metadata !2068), !dbg !17082
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !17083
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !17084
  %sub = sub nsw i32 0, %call, !dbg !17085
  %and = and i32 %sub, 7, !dbg !17086
  store i32 %and, i32* %n, align 4, !dbg !17082
  %1 = load i32, i32* %n, align 4, !dbg !17087
  %tobool = icmp ne i32 %1, 0, !dbg !17087
  br i1 %tobool, label %if.then, label %if.end, !dbg !17089

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !17090
  %3 = load i32, i32* %n, align 4, !dbg !17091
  call void @skip_bits(%struct.GetBitContext* %2, i32 %3), !dbg !17092
  br label %if.end, !dbg !17092

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !17093
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !17094
  %5 = load i8*, i8** %buffer, align 8, !dbg !17094
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !17095
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !17096
  %7 = load i32, i32* %index, align 8, !dbg !17096
  %shr = ashr i32 %7, 3, !dbg !17097
  %idx.ext = sext i32 %shr to i64, !dbg !17098
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !17098
  ret i8* %add.ptr, !dbg !17099
}

declare i32 @ff_decode_sbr_extension_fixed(%struct.AACContext*, %struct.SpectralBandReplication*, %struct.GetBitContext*, i32, i32, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @decode_dynamic_range(%struct.DynamicRangeControl* %che_drc, %struct.GetBitContext* %gb) #1 !dbg !17100 {
entry:
  %che_drc.addr = alloca %struct.DynamicRangeControl*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %n = alloca i32, align 4
  %drc_num_bands = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.DynamicRangeControl* %che_drc, %struct.DynamicRangeControl** %che_drc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicRangeControl** %che_drc.addr, metadata !17104, metadata !2068), !dbg !17105
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !17106, metadata !2068), !dbg !17107
  call void @llvm.dbg.declare(metadata i32* %n, metadata !17108, metadata !2068), !dbg !17109
  store i32 1, i32* %n, align 4, !dbg !17109
  call void @llvm.dbg.declare(metadata i32* %drc_num_bands, metadata !17110, metadata !2068), !dbg !17111
  store i32 1, i32* %drc_num_bands, align 4, !dbg !17111
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17112, metadata !2068), !dbg !17113
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17114
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !17116
  %tobool = icmp ne i32 %call, 0, !dbg !17116
  br i1 %tobool, label %if.then, label %if.end, !dbg !17117

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17118
  %call1 = call i32 @get_bits(%struct.GetBitContext* %1, i32 4), !dbg !17120
  %2 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !17121
  %pce_instance_tag = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %2, i32 0, i32 0, !dbg !17122
  store i32 %call1, i32* %pce_instance_tag, align 4, !dbg !17123
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17124
  call void @skip_bits(%struct.GetBitContext* %3, i32 4), !dbg !17125
  %4 = load i32, i32* %n, align 4, !dbg !17126
  %inc = add nsw i32 %4, 1, !dbg !17126
  store i32 %inc, i32* %n, align 4, !dbg !17126
  br label %if.end, !dbg !17127

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17128
  %call2 = call i32 @get_bits1(%struct.GetBitContext* %5), !dbg !17130
  %tobool3 = icmp ne i32 %call2, 0, !dbg !17130
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !17131

if.then4:                                         ; preds = %if.end
  %6 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !17132
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17134
  %call5 = call i32 @decode_drc_channel_exclusions(%struct.DynamicRangeControl* %6, %struct.GetBitContext* %7), !dbg !17135
  %8 = load i32, i32* %n, align 4, !dbg !17136
  %add = add nsw i32 %8, %call5, !dbg !17136
  store i32 %add, i32* %n, align 4, !dbg !17136
  br label %if.end6, !dbg !17137

if.end6:                                          ; preds = %if.then4, %if.end
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17138
  %call7 = call i32 @get_bits1(%struct.GetBitContext* %9), !dbg !17140
  %tobool8 = icmp ne i32 %call7, 0, !dbg !17140
  br i1 %tobool8, label %if.then9, label %if.end18, !dbg !17141

if.then9:                                         ; preds = %if.end6
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17142
  %call10 = call i32 @get_bits(%struct.GetBitContext* %10, i32 4), !dbg !17144
  %11 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !17145
  %band_incr = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %11, i32 0, i32 4, !dbg !17146
  store i32 %call10, i32* %band_incr, align 4, !dbg !17147
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17148
  %call11 = call i32 @get_bits(%struct.GetBitContext* %12, i32 4), !dbg !17149
  %13 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !17150
  %interpolation_scheme = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %13, i32 0, i32 5, !dbg !17151
  store i32 %call11, i32* %interpolation_scheme, align 4, !dbg !17152
  %14 = load i32, i32* %n, align 4, !dbg !17153
  %inc12 = add nsw i32 %14, 1, !dbg !17153
  store i32 %inc12, i32* %n, align 4, !dbg !17153
  %15 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !17154
  %band_incr13 = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %15, i32 0, i32 4, !dbg !17155
  %16 = load i32, i32* %band_incr13, align 4, !dbg !17155
  %17 = load i32, i32* %drc_num_bands, align 4, !dbg !17156
  %add14 = add nsw i32 %17, %16, !dbg !17156
  store i32 %add14, i32* %drc_num_bands, align 4, !dbg !17156
  store i32 0, i32* %i, align 4, !dbg !17157
  br label %for.cond, !dbg !17159

for.cond:                                         ; preds = %for.inc, %if.then9
  %18 = load i32, i32* %i, align 4, !dbg !17160
  %19 = load i32, i32* %drc_num_bands, align 4, !dbg !17163
  %cmp = icmp slt i32 %18, %19, !dbg !17164
  br i1 %cmp, label %for.body, label %for.end, !dbg !17165

for.body:                                         ; preds = %for.cond
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17166
  %call15 = call i32 @get_bits(%struct.GetBitContext* %20, i32 8), !dbg !17168
  %21 = load i32, i32* %i, align 4, !dbg !17169
  %idxprom = sext i32 %21 to i64, !dbg !17170
  %22 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !17170
  %band_top = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %22, i32 0, i32 6, !dbg !17171
  %arrayidx = getelementptr inbounds [17 x i32], [17 x i32]* %band_top, i64 0, i64 %idxprom, !dbg !17170
  store i32 %call15, i32* %arrayidx, align 4, !dbg !17172
  %23 = load i32, i32* %n, align 4, !dbg !17173
  %inc16 = add nsw i32 %23, 1, !dbg !17173
  store i32 %inc16, i32* %n, align 4, !dbg !17173
  br label %for.inc, !dbg !17174

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !17175
  %inc17 = add nsw i32 %24, 1, !dbg !17175
  store i32 %inc17, i32* %i, align 4, !dbg !17175
  br label %for.cond, !dbg !17177, !llvm.loop !17178

for.end:                                          ; preds = %for.cond
  br label %if.end18, !dbg !17180

if.end18:                                         ; preds = %for.end, %if.end6
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17181
  %call19 = call i32 @get_bits1(%struct.GetBitContext* %25), !dbg !17183
  %tobool20 = icmp ne i32 %call19, 0, !dbg !17183
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !17184

if.then21:                                        ; preds = %if.end18
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17185
  %call22 = call i32 @get_bits(%struct.GetBitContext* %26, i32 7), !dbg !17187
  %27 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !17188
  %prog_ref_level = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %27, i32 0, i32 7, !dbg !17189
  store i32 %call22, i32* %prog_ref_level, align 4, !dbg !17190
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17191
  call void @skip_bits1(%struct.GetBitContext* %28), !dbg !17192
  %29 = load i32, i32* %n, align 4, !dbg !17193
  %inc23 = add nsw i32 %29, 1, !dbg !17193
  store i32 %inc23, i32* %n, align 4, !dbg !17193
  br label %if.end24, !dbg !17194

if.end24:                                         ; preds = %if.then21, %if.end18
  store i32 0, i32* %i, align 4, !dbg !17195
  br label %for.cond25, !dbg !17197

for.cond25:                                       ; preds = %for.inc35, %if.end24
  %30 = load i32, i32* %i, align 4, !dbg !17198
  %31 = load i32, i32* %drc_num_bands, align 4, !dbg !17201
  %cmp26 = icmp slt i32 %30, %31, !dbg !17202
  br i1 %cmp26, label %for.body27, label %for.end37, !dbg !17203

for.body27:                                       ; preds = %for.cond25
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17204
  %call28 = call i32 @get_bits1(%struct.GetBitContext* %32), !dbg !17206
  %33 = load i32, i32* %i, align 4, !dbg !17207
  %idxprom29 = sext i32 %33 to i64, !dbg !17208
  %34 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !17208
  %dyn_rng_sgn = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %34, i32 0, i32 1, !dbg !17209
  %arrayidx30 = getelementptr inbounds [17 x i32], [17 x i32]* %dyn_rng_sgn, i64 0, i64 %idxprom29, !dbg !17208
  store i32 %call28, i32* %arrayidx30, align 4, !dbg !17210
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17211
  %call31 = call i32 @get_bits(%struct.GetBitContext* %35, i32 7), !dbg !17212
  %36 = load i32, i32* %i, align 4, !dbg !17213
  %idxprom32 = sext i32 %36 to i64, !dbg !17214
  %37 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !17214
  %dyn_rng_ctl = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %37, i32 0, i32 2, !dbg !17215
  %arrayidx33 = getelementptr inbounds [17 x i32], [17 x i32]* %dyn_rng_ctl, i64 0, i64 %idxprom32, !dbg !17214
  store i32 %call31, i32* %arrayidx33, align 4, !dbg !17216
  %38 = load i32, i32* %n, align 4, !dbg !17217
  %inc34 = add nsw i32 %38, 1, !dbg !17217
  store i32 %inc34, i32* %n, align 4, !dbg !17217
  br label %for.inc35, !dbg !17218

for.inc35:                                        ; preds = %for.body27
  %39 = load i32, i32* %i, align 4, !dbg !17219
  %inc36 = add nsw i32 %39, 1, !dbg !17219
  store i32 %inc36, i32* %i, align 4, !dbg !17219
  br label %for.cond25, !dbg !17221, !llvm.loop !17222

for.end37:                                        ; preds = %for.cond25
  %40 = load i32, i32* %n, align 4, !dbg !17224
  ret i32 %40, !dbg !17225
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_fill(%struct.AACContext* %ac, %struct.GetBitContext* %gb, i32 %len) #1 !dbg !17226 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %len.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16
  %i = alloca i32, align 4
  %major = alloca i32, align 4
  %minor = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !17229, metadata !2068), !dbg !17230
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !17231, metadata !2068), !dbg !17232
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !17233, metadata !2068), !dbg !17234
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !17235, metadata !2068), !dbg !17239
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17240, metadata !2068), !dbg !17241
  call void @llvm.dbg.declare(metadata i32* %major, metadata !17242, metadata !2068), !dbg !17243
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !17244, metadata !2068), !dbg !17245
  %0 = load i32, i32* %len.addr, align 4, !dbg !17246
  %cmp = icmp slt i32 %0, 69, !dbg !17248
  br i1 %cmp, label %if.then, label %if.end, !dbg !17249

if.then:                                          ; preds = %entry
  br label %unknown, !dbg !17250

if.end:                                           ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17251
  %call = call i32 @get_bits(%struct.GetBitContext* %1, i32 13), !dbg !17252
  %2 = load i32, i32* %len.addr, align 4, !dbg !17253
  %sub = sub nsw i32 %2, 13, !dbg !17253
  store i32 %sub, i32* %len.addr, align 4, !dbg !17253
  store i32 0, i32* %i, align 4, !dbg !17254
  br label %for.cond, !dbg !17256

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !17257
  %add = add nsw i32 %3, 1, !dbg !17260
  %conv = sext i32 %add to i64, !dbg !17257
  %cmp1 = icmp ult i64 %conv, 256, !dbg !17261
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !17262

land.rhs:                                         ; preds = %for.cond
  %4 = load i32, i32* %len.addr, align 4, !dbg !17263
  %cmp3 = icmp sge i32 %4, 8, !dbg !17265
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp3, %land.rhs ]
  br i1 %5, label %for.body, label %for.end, !dbg !17266

for.body:                                         ; preds = %land.end
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17268
  %call5 = call i32 @get_bits(%struct.GetBitContext* %6, i32 8), !dbg !17269
  %conv6 = trunc i32 %call5 to i8, !dbg !17269
  %7 = load i32, i32* %i, align 4, !dbg !17270
  %idxprom = sext i32 %7 to i64, !dbg !17271
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 %idxprom, !dbg !17271
  store i8 %conv6, i8* %arrayidx, align 1, !dbg !17272
  br label %for.inc, !dbg !17271

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !17273
  %inc = add nsw i32 %8, 1, !dbg !17273
  store i32 %inc, i32* %i, align 4, !dbg !17273
  %9 = load i32, i32* %len.addr, align 4, !dbg !17275
  %sub7 = sub nsw i32 %9, 8, !dbg !17275
  store i32 %sub7, i32* %len.addr, align 4, !dbg !17275
  br label %for.cond, !dbg !17276, !llvm.loop !17277

for.end:                                          ; preds = %land.end
  %10 = load i32, i32* %i, align 4, !dbg !17279
  %idxprom8 = sext i32 %10 to i64, !dbg !17280
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 %idxprom8, !dbg !17280
  store i8 0, i8* %arrayidx9, align 1, !dbg !17281
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17282
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %11, i32 0, i32 1, !dbg !17284
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !17284
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 134, !dbg !17285
  %13 = load i32, i32* %debug, align 4, !dbg !17285
  %and = and i32 %13, 1, !dbg !17286
  %tobool = icmp ne i32 %and, 0, !dbg !17286
  br i1 %tobool, label %if.then10, label %if.end12, !dbg !17287

if.then10:                                        ; preds = %for.end
  %14 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17288
  %avctx11 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %14, i32 0, i32 1, !dbg !17289
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx11, align 8, !dbg !17289
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !17288
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i32 0, i32 0, !dbg !17290
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i32 0, i32 0), i8* %arraydecay), !dbg !17291
  br label %if.end12, !dbg !17291

if.end12:                                         ; preds = %if.then10, %for.end
  %arraydecay13 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i32 0, i32 0, !dbg !17292
  %call14 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %arraydecay13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.77, i32 0, i32 0), i32* %major, i32* %minor) #12, !dbg !17294
  %cmp15 = icmp eq i32 %call14, 2, !dbg !17295
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !17296

if.then17:                                        ; preds = %if.end12
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !17297
  %avctx18 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %17, i32 0, i32 1, !dbg !17299
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx18, align 8, !dbg !17299
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 7, !dbg !17300
  %19 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !17300
  %skip_samples = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %19, i32 0, i32 12, !dbg !17301
  store i32 1024, i32* %skip_samples, align 8, !dbg !17302
  br label %if.end19, !dbg !17303

if.end19:                                         ; preds = %if.then17, %if.end12
  br label %unknown, !dbg !17304

unknown:                                          ; preds = %if.end19, %if.then
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17306
  %21 = load i32, i32* %len.addr, align 4, !dbg !17307
  call void @skip_bits_long(%struct.GetBitContext* %20, i32 %21), !dbg !17308
  ret i32 0, !dbg !17309
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_drc_channel_exclusions(%struct.DynamicRangeControl* %che_drc, %struct.GetBitContext* %gb) #1 !dbg !17310 {
entry:
  %che_drc.addr = alloca %struct.DynamicRangeControl*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %i = alloca i32, align 4
  %num_excl_chan = alloca i32, align 4
  store %struct.DynamicRangeControl* %che_drc, %struct.DynamicRangeControl** %che_drc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicRangeControl** %che_drc.addr, metadata !17311, metadata !2068), !dbg !17312
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !17313, metadata !2068), !dbg !17314
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17315, metadata !2068), !dbg !17316
  call void @llvm.dbg.declare(metadata i32* %num_excl_chan, metadata !17317, metadata !2068), !dbg !17318
  store i32 0, i32* %num_excl_chan, align 4, !dbg !17318
  br label %do.body, !dbg !17319, !llvm.loop !17320

do.body:                                          ; preds = %land.end, %entry
  store i32 0, i32* %i, align 4, !dbg !17321
  br label %for.cond, !dbg !17324

for.cond:                                         ; preds = %for.inc, %do.body
  %0 = load i32, i32* %i, align 4, !dbg !17325
  %cmp = icmp slt i32 %0, 7, !dbg !17328
  br i1 %cmp, label %for.body, label %for.end, !dbg !17329

for.body:                                         ; preds = %for.cond
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17330
  %call = call i32 @get_bits1(%struct.GetBitContext* %1), !dbg !17331
  %2 = load i32, i32* %num_excl_chan, align 4, !dbg !17332
  %inc = add nsw i32 %2, 1, !dbg !17332
  store i32 %inc, i32* %num_excl_chan, align 4, !dbg !17332
  %idxprom = sext i32 %2 to i64, !dbg !17333
  %3 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !17333
  %exclude_mask = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %3, i32 0, i32 3, !dbg !17334
  %arrayidx = getelementptr inbounds [64 x i32], [64 x i32]* %exclude_mask, i64 0, i64 %idxprom, !dbg !17333
  store i32 %call, i32* %arrayidx, align 4, !dbg !17335
  br label %for.inc, !dbg !17333

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !17336
  %inc1 = add nsw i32 %4, 1, !dbg !17336
  store i32 %inc1, i32* %i, align 4, !dbg !17336
  br label %for.cond, !dbg !17338, !llvm.loop !17339

for.end:                                          ; preds = %for.cond
  br label %do.cond, !dbg !17341

do.cond:                                          ; preds = %for.end
  %5 = load i32, i32* %num_excl_chan, align 4, !dbg !17342
  %cmp2 = icmp slt i32 %5, 57, !dbg !17344
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !17345

land.rhs:                                         ; preds = %do.cond
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !17346
  %call3 = call i32 @get_bits1(%struct.GetBitContext* %6), !dbg !17348
  %tobool = icmp ne i32 %call3, 0, !dbg !17349
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %7 = phi i1 [ false, %do.cond ], [ %tobool, %land.rhs ]
  br i1 %7, label %do.body, label %do.end, !dbg !17350, !llvm.loop !17320

do.end:                                           ; preds = %land.end
  %8 = load i32, i32* %num_excl_chan, align 4, !dbg !17352
  %div = sdiv i32 %8, 7, !dbg !17353
  ret i32 %div, !dbg !17354
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #10

declare void @ff_mdct_end_fixed_32(%struct.FFTContext*) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2063, !2064}
!llvm.ident = !{!2065}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1011, globals: !1140)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--aacdec_fixed.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !712, !733, !743, !767, !773, !791, !815, !834, !844, !874, !882, !894, !903, !909, !916, !925, !930, !940, !946, !950, !957, !1003}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !691, line: 221, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!693 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!694 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!695 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!696 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!697 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!698 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!699 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!700 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!701 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!702 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!703 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!704 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!705 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!706 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!707 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!708 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!709 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!710 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!711 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !713, line: 29, size: 32, align: 32, elements: !714)
!713 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!715 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!716 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!717 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!718 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!719 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!720 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!721 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!722 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!723 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!724 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!725 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!726 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!727 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!728 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!729 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!730 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!731 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!732 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738, !739, !740, !741, !742}
!735 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!736 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!737 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!738 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!739 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!740 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!741 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!742 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !744, line: 48, size: 32, align: 32, elements: !745)
!744 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!746 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!747 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!748 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!749 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!750 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!751 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!752 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!753 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!754 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!755 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!756 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!757 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!758 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!759 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!760 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!770 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!771 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!772 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!775 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!776 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!777 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!778 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!779 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!780 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!781 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!782 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!783 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!784 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!785 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!786 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!787 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!788 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!789 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!790 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !792)
!792 = !{!793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!793 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!794 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!795 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!796 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!797 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!798 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!799 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!800 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!801 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!802 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!803 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!804 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!805 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!806 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!807 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!809 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!810 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!811 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!812 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!813 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!814 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833}
!817 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!818 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!819 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!820 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!821 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!822 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!823 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!824 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!825 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!826 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!827 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!828 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!829 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!830 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!831 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!832 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!833 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843}
!836 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!837 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!838 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!839 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!840 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!841 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!842 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!843 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !845)
!845 = !{!846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873}
!846 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!847 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!848 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!849 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!850 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!851 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!852 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!853 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!854 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!855 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!856 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!857 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!858 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!859 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!860 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!861 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!862 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!863 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!864 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!865 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!866 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!867 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!868 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!869 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!870 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!871 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!872 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!873 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881}
!876 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!877 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!878 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!879 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!880 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!881 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!884 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!885 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!886 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!887 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!888 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!889 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902}
!896 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!897 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!898 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!899 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!900 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!901 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!902 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !904)
!904 = !{!905, !906, !907, !908}
!905 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!906 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!907 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!908 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "WindowSequence", file: !910, line: 75, size: 32, align: 32, elements: !911)
!910 = !DIFile(filename: "libavcodec/aac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!911 = !{!912, !913, !914, !915}
!912 = !DIEnumerator(name: "ONLY_LONG_SEQUENCE", value: 0)
!913 = !DIEnumerator(name: "LONG_START_SEQUENCE", value: 1)
!914 = !DIEnumerator(name: "EIGHT_SHORT_SEQUENCE", value: 2)
!915 = !DIEnumerator(name: "LONG_STOP_SEQUENCE", value: 3)
!916 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BandType", file: !910, line: 82, size: 32, align: 32, elements: !917)
!917 = !{!918, !919, !920, !921, !922, !923, !924}
!918 = !DIEnumerator(name: "ZERO_BT", value: 0)
!919 = !DIEnumerator(name: "FIRST_PAIR_BT", value: 5)
!920 = !DIEnumerator(name: "ESC_BT", value: 11)
!921 = !DIEnumerator(name: "RESERVED_BT", value: 12)
!922 = !DIEnumerator(name: "NOISE_BT", value: 13)
!923 = !DIEnumerator(name: "INTENSITY_BT2", value: 14)
!924 = !DIEnumerator(name: "INTENSITY_BT", value: 15)
!925 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CouplingPoint", file: !910, line: 106, size: 32, align: 32, elements: !926)
!926 = !{!927, !928, !929}
!927 = !DIEnumerator(name: "BEFORE_TNS", value: 0)
!928 = !DIEnumerator(name: "BETWEEN_TNS_AND_IMDCT", value: 1)
!929 = !DIEnumerator(name: "AFTER_IMDCT", value: 3)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RawDataBlockType", file: !910, line: 55, size: 32, align: 32, elements: !931)
!931 = !{!932, !933, !934, !935, !936, !937, !938, !939}
!932 = !DIEnumerator(name: "TYPE_SCE", value: 0)
!933 = !DIEnumerator(name: "TYPE_CPE", value: 1)
!934 = !DIEnumerator(name: "TYPE_CCE", value: 2)
!935 = !DIEnumerator(name: "TYPE_LFE", value: 3)
!936 = !DIEnumerator(name: "TYPE_DSE", value: 4)
!937 = !DIEnumerator(name: "TYPE_PCE", value: 5)
!938 = !DIEnumerator(name: "TYPE_FIL", value: 6)
!939 = !DIEnumerator(name: "TYPE_END", value: 7)
!940 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !941, line: 77, size: 32, align: 32, elements: !942)
!941 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!942 = !{!943, !944, !945}
!943 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!944 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!945 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!946 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !941, line: 83, size: 32, align: 32, elements: !947)
!947 = !{!948, !949}
!948 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!949 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!950 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OCStatus", file: !910, line: 115, size: 32, align: 32, elements: !951)
!951 = !{!952, !953, !954, !955, !956}
!952 = !DIEnumerator(name: "OC_NONE", value: 0)
!953 = !DIEnumerator(name: "OC_TRIAL_PCE", value: 1)
!954 = !DIEnumerator(name: "OC_TRIAL_FRAME", value: 2)
!955 = !DIEnumerator(name: "OC_GLOBAL_HDR", value: 3)
!956 = !DIEnumerator(name: "OC_LOCKED", value: 4)
!957 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AudioObjectType", file: !958, line: 72, size: 32, align: 32, elements: !959)
!958 = !DIFile(filename: "libavcodec/mpeg4audio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!959 = !{!960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002}
!960 = !DIEnumerator(name: "AOT_NULL", value: 0)
!961 = !DIEnumerator(name: "AOT_AAC_MAIN", value: 1)
!962 = !DIEnumerator(name: "AOT_AAC_LC", value: 2)
!963 = !DIEnumerator(name: "AOT_AAC_SSR", value: 3)
!964 = !DIEnumerator(name: "AOT_AAC_LTP", value: 4)
!965 = !DIEnumerator(name: "AOT_SBR", value: 5)
!966 = !DIEnumerator(name: "AOT_AAC_SCALABLE", value: 6)
!967 = !DIEnumerator(name: "AOT_TWINVQ", value: 7)
!968 = !DIEnumerator(name: "AOT_CELP", value: 8)
!969 = !DIEnumerator(name: "AOT_HVXC", value: 9)
!970 = !DIEnumerator(name: "AOT_TTSI", value: 12)
!971 = !DIEnumerator(name: "AOT_MAINSYNTH", value: 13)
!972 = !DIEnumerator(name: "AOT_WAVESYNTH", value: 14)
!973 = !DIEnumerator(name: "AOT_MIDI", value: 15)
!974 = !DIEnumerator(name: "AOT_SAFX", value: 16)
!975 = !DIEnumerator(name: "AOT_ER_AAC_LC", value: 17)
!976 = !DIEnumerator(name: "AOT_ER_AAC_LTP", value: 19)
!977 = !DIEnumerator(name: "AOT_ER_AAC_SCALABLE", value: 20)
!978 = !DIEnumerator(name: "AOT_ER_TWINVQ", value: 21)
!979 = !DIEnumerator(name: "AOT_ER_BSAC", value: 22)
!980 = !DIEnumerator(name: "AOT_ER_AAC_LD", value: 23)
!981 = !DIEnumerator(name: "AOT_ER_CELP", value: 24)
!982 = !DIEnumerator(name: "AOT_ER_HVXC", value: 25)
!983 = !DIEnumerator(name: "AOT_ER_HILN", value: 26)
!984 = !DIEnumerator(name: "AOT_ER_PARAM", value: 27)
!985 = !DIEnumerator(name: "AOT_SSC", value: 28)
!986 = !DIEnumerator(name: "AOT_PS", value: 29)
!987 = !DIEnumerator(name: "AOT_SURROUND", value: 30)
!988 = !DIEnumerator(name: "AOT_ESCAPE", value: 31)
!989 = !DIEnumerator(name: "AOT_L1", value: 32)
!990 = !DIEnumerator(name: "AOT_L2", value: 33)
!991 = !DIEnumerator(name: "AOT_L3", value: 34)
!992 = !DIEnumerator(name: "AOT_DST", value: 35)
!993 = !DIEnumerator(name: "AOT_ALS", value: 36)
!994 = !DIEnumerator(name: "AOT_SLS", value: 37)
!995 = !DIEnumerator(name: "AOT_SLS_NON_CORE", value: 38)
!996 = !DIEnumerator(name: "AOT_ER_AAC_ELD", value: 39)
!997 = !DIEnumerator(name: "AOT_SMR_SIMPLE", value: 40)
!998 = !DIEnumerator(name: "AOT_SMR_MAIN", value: 41)
!999 = !DIEnumerator(name: "AOT_USAC_NOSBR", value: 42)
!1000 = !DIEnumerator(name: "AOT_SAOC", value: 43)
!1001 = !DIEnumerator(name: "AOT_LD_SURROUND", value: 44)
!1002 = !DIEnumerator(name: "AOT_USAC", value: 45)
!1003 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ChannelPosition", file: !910, line: 94, size: 32, align: 32, elements: !1004)
!1004 = !{!1005, !1006, !1007, !1008, !1009, !1010}
!1005 = !DIEnumerator(name: "AAC_CHANNEL_OFF", value: 0)
!1006 = !DIEnumerator(name: "AAC_CHANNEL_FRONT", value: 1)
!1007 = !DIEnumerator(name: "AAC_CHANNEL_SIDE", value: 2)
!1008 = !DIEnumerator(name: "AAC_CHANNEL_BACK", value: 3)
!1009 = !DIEnumerator(name: "AAC_CHANNEL_LFE", value: 4)
!1010 = !DIEnumerator(name: "AAC_CHANNEL_CC", value: 5)
!1011 = !{!1012, !1013, !1014, !1017, !1019, !1020, !1022, !1023, !1030, !1032, !1033, !1029, !1034, !1036, !1037}
!1012 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1013 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1015, line: 40, baseType: !1016)
!1015 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1016 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINTFLOAT", file: !1018, line: 38, baseType: !1013)
!1018 = !DIFile(filename: "libavcodec/aac_defines.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "INTFLOAT", file: !1018, line: 37, baseType: !1012)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "LPC_TYPE_U", file: !1021, line: 120, baseType: !1013)
!1021 = !DIFile(filename: "libavcodec/lpc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64, align: 64)
!1024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1025)
!1025 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1026, line: 221, size: 32, align: 8, elements: !1027)
!1026 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1027 = !{!1028}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1025, file: !1026, line: 221, baseType: !1029, size: 32, align: 32)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1015, line: 51, baseType: !1013)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1015, line: 48, baseType: !1031)
!1031 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64, align: 64)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_SIGNE", file: !1018, line: 42, baseType: !1012)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1015, line: 55, baseType: !1035)
!1035 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1015, line: 38, baseType: !1012)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64, align: 64)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !744, line: 646, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !744, line: 268, size: 4288, align: 64, elements: !1040)
!1040 = !{!1041, !1046, !1048, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1092, !1094, !1095, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1128, !1129, !1130, !1131, !1132, !1133, !1136, !1137, !1138, !1139}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1039, file: !744, line: 282, baseType: !1042, size: 512, align: 64)
!1042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 512, align: 64, elements: !1044)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64, align: 64)
!1044 = !{!1045}
!1045 = !DISubrange(count: 8)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1039, file: !744, line: 299, baseType: !1047, size: 256, align: 32, offset: 512)
!1047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 256, align: 32, elements: !1044)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1039, file: !744, line: 315, baseType: !1049, size: 64, align: 64, offset: 768)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64, align: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1039, file: !744, line: 326, baseType: !1012, size: 32, align: 32, offset: 832)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1039, file: !744, line: 326, baseType: !1012, size: 32, align: 32, offset: 864)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1039, file: !744, line: 334, baseType: !1012, size: 32, align: 32, offset: 896)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1039, file: !744, line: 341, baseType: !1012, size: 32, align: 32, offset: 928)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1039, file: !744, line: 346, baseType: !1012, size: 32, align: 32, offset: 960)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1039, file: !744, line: 351, baseType: !733, size: 32, align: 32, offset: 992)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1039, file: !744, line: 356, baseType: !1057, size: 64, align: 32, offset: 1024)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1058, line: 61, baseType: !1059)
!1058 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1058, line: 58, size: 64, align: 32, elements: !1060)
!1060 = !{!1061, !1062}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1059, file: !1058, line: 59, baseType: !1012, size: 32, align: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1059, file: !1058, line: 60, baseType: !1012, size: 32, align: 32, offset: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1039, file: !744, line: 361, baseType: !1014, size: 64, align: 64, offset: 1088)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1039, file: !744, line: 369, baseType: !1014, size: 64, align: 64, offset: 1152)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1039, file: !744, line: 377, baseType: !1014, size: 64, align: 64, offset: 1216)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1039, file: !744, line: 382, baseType: !1012, size: 32, align: 32, offset: 1280)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1039, file: !744, line: 386, baseType: !1012, size: 32, align: 32, offset: 1312)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1039, file: !744, line: 391, baseType: !1012, size: 32, align: 32, offset: 1344)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1039, file: !744, line: 396, baseType: !1022, size: 64, align: 64, offset: 1408)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1039, file: !744, line: 403, baseType: !1071, size: 512, align: 64, offset: 1472)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1034, size: 512, align: 64, elements: !1044)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1039, file: !744, line: 410, baseType: !1012, size: 32, align: 32, offset: 1984)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1039, file: !744, line: 415, baseType: !1012, size: 32, align: 32, offset: 2016)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1039, file: !744, line: 420, baseType: !1012, size: 32, align: 32, offset: 2048)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1039, file: !744, line: 425, baseType: !1012, size: 32, align: 32, offset: 2080)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1039, file: !744, line: 435, baseType: !1014, size: 64, align: 64, offset: 2112)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1039, file: !744, line: 440, baseType: !1012, size: 32, align: 32, offset: 2176)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1039, file: !744, line: 445, baseType: !1034, size: 64, align: 64, offset: 2240)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1039, file: !744, line: 459, baseType: !1080, size: 512, align: 64, offset: 2304)
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1081, size: 512, align: 64, elements: !1044)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64, align: 64)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1083, line: 94, baseType: !1084)
!1083 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1083, line: 81, size: 192, align: 64, elements: !1085)
!1085 = !{!1086, !1090, !1091}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1084, file: !1083, line: 82, baseType: !1087, size: 64, align: 64)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64, align: 64)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1083, line: 73, baseType: !1089)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1083, line: 73, flags: DIFlagFwdDecl)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1084, file: !1083, line: 89, baseType: !1043, size: 64, align: 64, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1084, file: !1083, line: 93, baseType: !1012, size: 32, align: 32, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1039, file: !744, line: 473, baseType: !1093, size: 64, align: 64, offset: 2816)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64, align: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1039, file: !744, line: 477, baseType: !1012, size: 32, align: 32, offset: 2880)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1039, file: !744, line: 479, baseType: !1096, size: 64, align: 64, offset: 2944)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64, align: 64)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !744, line: 207, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !744, line: 201, size: 320, align: 64, elements: !1100)
!1100 = !{!1101, !1102, !1103, !1104, !1109}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1099, file: !744, line: 202, baseType: !743, size: 32, align: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1099, file: !744, line: 203, baseType: !1043, size: 64, align: 64, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1099, file: !744, line: 204, baseType: !1012, size: 32, align: 32, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1099, file: !744, line: 205, baseType: !1105, size: 64, align: 64, offset: 192)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64, align: 64)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1107, line: 86, baseType: !1108)
!1107 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1107, line: 86, flags: DIFlagFwdDecl)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1099, file: !744, line: 206, baseType: !1081, size: 64, align: 64, offset: 256)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1039, file: !744, line: 480, baseType: !1012, size: 32, align: 32, offset: 3008)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1039, file: !744, line: 505, baseType: !1012, size: 32, align: 32, offset: 3040)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1039, file: !744, line: 512, baseType: !767, size: 32, align: 32, offset: 3072)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1039, file: !744, line: 514, baseType: !773, size: 32, align: 32, offset: 3104)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1039, file: !744, line: 516, baseType: !791, size: 32, align: 32, offset: 3136)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1039, file: !744, line: 523, baseType: !815, size: 32, align: 32, offset: 3168)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1039, file: !744, line: 525, baseType: !834, size: 32, align: 32, offset: 3200)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1039, file: !744, line: 532, baseType: !1014, size: 64, align: 64, offset: 3264)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1039, file: !744, line: 539, baseType: !1014, size: 64, align: 64, offset: 3328)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1039, file: !744, line: 547, baseType: !1014, size: 64, align: 64, offset: 3392)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1039, file: !744, line: 554, baseType: !1105, size: 64, align: 64, offset: 3456)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1039, file: !744, line: 563, baseType: !1012, size: 32, align: 32, offset: 3520)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1039, file: !744, line: 572, baseType: !1012, size: 32, align: 32, offset: 3552)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1039, file: !744, line: 581, baseType: !1012, size: 32, align: 32, offset: 3584)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1039, file: !744, line: 588, baseType: !1125, size: 64, align: 64, offset: 3648)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64, align: 64)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1015, line: 36, baseType: !1127)
!1127 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1039, file: !744, line: 593, baseType: !1012, size: 32, align: 32, offset: 3712)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1039, file: !744, line: 596, baseType: !1012, size: 32, align: 32, offset: 3744)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1039, file: !744, line: 599, baseType: !1081, size: 64, align: 64, offset: 3776)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1039, file: !744, line: 605, baseType: !1081, size: 64, align: 64, offset: 3840)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1039, file: !744, line: 616, baseType: !1081, size: 64, align: 64, offset: 3904)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1039, file: !744, line: 626, baseType: !1134, size: 64, align: 64, offset: 3968)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1135, line: 216, baseType: !1035)
!1135 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1039, file: !744, line: 627, baseType: !1134, size: 64, align: 64, offset: 4032)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1039, file: !744, line: 628, baseType: !1134, size: 64, align: 64, offset: 4096)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1039, file: !744, line: 629, baseType: !1134, size: 64, align: 64, offset: 4160)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1039, file: !744, line: 645, baseType: !1081, size: 64, align: 64, offset: 4224)
!1140 = !{!1141, !1794, !1799, !1803, !1814, !1818, !1822, !1826, !1830, !1834, !1838, !1842, !1846, !1850, !1854, !1858, !1873, !1878, !1879, !1881, !1884, !1889, !1892, !1896, !1897, !1899, !1901, !1902, !2053, !2059, !2060, !2061}
!1141 = distinct !DIGlobalVariable(name: "ff_aac_fixed_decoder", scope: !0, file: !1142, line: 446, type: !1143, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_aac_fixed_decoder)
!1142 = !DIFile(filename: "libavcodec/aacdec_fixed.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !1144)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !1145)
!1145 = !{!1146, !1150, !1151, !1152, !1153, !1154, !1157, !1160, !1163, !1166, !1169, !1170, !1243, !1251, !1252, !1253, !1255, !1709, !1715, !1723, !1727, !1728, !1765, !1769, !1773, !1774, !1778, !1782, !1783, !1787, !1788, !1789}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1144, file: !14, line: 3475, baseType: !1147, size: 64, align: 64)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64, align: 64)
!1148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1149)
!1149 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1144, file: !14, line: 3480, baseType: !1147, size: 64, align: 64, offset: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1144, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1144, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1144, file: !14, line: 3487, baseType: !1012, size: 32, align: 32, offset: 192)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1144, file: !14, line: 3488, baseType: !1155, size: 64, align: 64, offset: 256)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64, align: 64)
!1156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1144, file: !14, line: 3489, baseType: !1158, size: 64, align: 64, offset: 320)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64, align: 64)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1144, file: !14, line: 3490, baseType: !1161, size: 64, align: 64, offset: 384)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64, align: 64)
!1162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1012)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1144, file: !14, line: 3491, baseType: !1164, size: 64, align: 64, offset: 448)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64, align: 64)
!1165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1144, file: !14, line: 3492, baseType: !1167, size: 64, align: 64, offset: 512)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64, align: 64)
!1168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1144, file: !14, line: 3493, baseType: !1030, size: 8, align: 8, offset: 576)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1144, file: !14, line: 3494, baseType: !1171, size: 64, align: 64, offset: 640)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64, align: 64)
!1172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !713, line: 143, baseType: !1174)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !713, line: 67, size: 640, align: 64, elements: !1175)
!1175 = !{!1176, !1177, !1181, !1202, !1203, !1204, !1205, !1209, !1215, !1217, !1221}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1174, file: !713, line: 72, baseType: !1147, size: 64, align: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1174, file: !713, line: 78, baseType: !1178, size: 64, align: 64, offset: 64)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64, align: 64)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!1147, !1022}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1174, file: !713, line: 85, baseType: !1182, size: 64, align: 64, offset: 128)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64, align: 64)
!1183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1184)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 246, size: 512, align: 64, elements: !1185)
!1185 = !{!1186, !1187, !1188, !1189, !1190, !1198, !1199, !1200, !1201}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1184, file: !691, line: 247, baseType: !1147, size: 64, align: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1184, file: !691, line: 253, baseType: !1147, size: 64, align: 64, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1184, file: !691, line: 259, baseType: !1012, size: 32, align: 32, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1184, file: !691, line: 260, baseType: !690, size: 32, align: 32, offset: 160)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1184, file: !691, line: 271, baseType: !1191, size: 64, align: 64, offset: 192)
!1191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1184, file: !691, line: 265, size: 64, align: 64, elements: !1192)
!1192 = !{!1193, !1194, !1196, !1197}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1191, file: !691, line: 266, baseType: !1014, size: 64, align: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1191, file: !691, line: 267, baseType: !1195, size: 64, align: 64)
!1195 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1191, file: !691, line: 268, baseType: !1147, size: 64, align: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1191, file: !691, line: 270, baseType: !1057, size: 64, align: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1184, file: !691, line: 272, baseType: !1195, size: 64, align: 64, offset: 256)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1184, file: !691, line: 273, baseType: !1195, size: 64, align: 64, offset: 320)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1184, file: !691, line: 275, baseType: !1012, size: 32, align: 32, offset: 384)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1184, file: !691, line: 300, baseType: !1147, size: 64, align: 64, offset: 448)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1174, file: !713, line: 93, baseType: !1012, size: 32, align: 32, offset: 192)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1174, file: !713, line: 99, baseType: !1012, size: 32, align: 32, offset: 224)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1174, file: !713, line: 108, baseType: !1012, size: 32, align: 32, offset: 256)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1174, file: !713, line: 113, baseType: !1206, size: 64, align: 64, offset: 320)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64, align: 64)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!1022, !1022, !1022}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1174, file: !713, line: 123, baseType: !1210, size: 64, align: 64, offset: 384)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64, align: 64)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!1213, !1213}
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64, align: 64)
!1214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1174)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1174, file: !713, line: 130, baseType: !1216, size: 32, align: 32, offset: 448)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !713, line: 48, baseType: !712)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1174, file: !713, line: 136, baseType: !1218, size: 64, align: 64, offset: 512)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64, align: 64)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!1216, !1022}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1174, file: !713, line: 142, baseType: !1222, size: 64, align: 64, offset: 576)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!1012, !1225, !1022, !1147, !1012}
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64, align: 64)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64, align: 64)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 329, size: 128, align: 64, elements: !1228)
!1228 = !{!1229, !1241, !1242}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1227, file: !691, line: 360, baseType: !1230, size: 64, align: 64)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64, align: 64)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64, align: 64)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !691, line: 324, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !691, line: 306, size: 384, align: 64, elements: !1234)
!1234 = !{!1235, !1236, !1237, !1238, !1239, !1240}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1233, file: !691, line: 307, baseType: !1147, size: 64, align: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1233, file: !691, line: 313, baseType: !1195, size: 64, align: 64, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1233, file: !691, line: 313, baseType: !1195, size: 64, align: 64, offset: 128)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1233, file: !691, line: 318, baseType: !1195, size: 64, align: 64, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1233, file: !691, line: 318, baseType: !1195, size: 64, align: 64, offset: 256)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1233, file: !691, line: 323, baseType: !1012, size: 32, align: 32, offset: 320)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1227, file: !691, line: 364, baseType: !1012, size: 32, align: 32, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1227, file: !691, line: 368, baseType: !1012, size: 32, align: 32, offset: 96)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1144, file: !14, line: 3495, baseType: !1244, size: 64, align: 64, offset: 704)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64, align: 64)
!1245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1248)
!1248 = !{!1249, !1250}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1247, file: !14, line: 3402, baseType: !1012, size: 32, align: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1247, file: !14, line: 3403, baseType: !1147, size: 64, align: 64, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1144, file: !14, line: 3507, baseType: !1147, size: 64, align: 64, offset: 768)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1144, file: !14, line: 3516, baseType: !1012, size: 32, align: 32, offset: 832)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1144, file: !14, line: 3517, baseType: !1254, size: 64, align: 64, offset: 896)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64, align: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1144, file: !14, line: 3527, baseType: !1256, size: 64, align: 64, offset: 960)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64, align: 64)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!1012, !1259}
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64, align: 64)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1261)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1262)
!1262 = !{!1263, !1264, !1265, !1266, !1269, !1270, !1271, !1272, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1455, !1459, !1460, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1647, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1261, file: !14, line: 1561, baseType: !1171, size: 64, align: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1261, file: !14, line: 1562, baseType: !1012, size: 32, align: 32, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1261, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1261, file: !14, line: 1565, baseType: !1267, size: 64, align: 64, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64, align: 64)
!1268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1144)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1261, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1261, file: !14, line: 1581, baseType: !1013, size: 32, align: 32, offset: 224)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1261, file: !14, line: 1583, baseType: !1022, size: 64, align: 64, offset: 256)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1261, file: !14, line: 1591, baseType: !1273, size: 64, align: 64, offset: 320)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64, align: 64)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1275, line: 129, size: 1664, align: 64, elements: !1276)
!1275 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1276 = !{!1277, !1278, !1279, !1280, !1281, !1302, !1303, !1332, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1274, file: !1275, line: 136, baseType: !1012, size: 32, align: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1274, file: !1275, line: 151, baseType: !1012, size: 32, align: 32, offset: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1274, file: !1275, line: 157, baseType: !1012, size: 32, align: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1274, file: !1275, line: 159, baseType: !1037, size: 64, align: 64, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1274, file: !1275, line: 161, baseType: !1282, size: 64, align: 64, offset: 192)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64, align: 64)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1275, line: 117, baseType: !1284)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1275, line: 100, size: 832, align: 64, elements: !1285)
!1285 = !{!1286, !1293, !1294, !1295, !1296, !1297, !1299, !1300, !1301}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1284, file: !1275, line: 105, baseType: !1287, size: 256, align: 64)
!1287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1288, size: 256, align: 64, elements: !1291)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64, align: 64)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1083, line: 238, baseType: !1290)
!1290 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1083, line: 238, flags: DIFlagFwdDecl)
!1291 = !{!1292}
!1292 = !DISubrange(count: 4)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1284, file: !1275, line: 110, baseType: !1012, size: 32, align: 32, offset: 256)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1284, file: !1275, line: 111, baseType: !1012, size: 32, align: 32, offset: 288)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1284, file: !1275, line: 111, baseType: !1012, size: 32, align: 32, offset: 320)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1284, file: !1275, line: 112, baseType: !1047, size: 256, align: 32, offset: 352)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1284, file: !1275, line: 113, baseType: !1298, size: 128, align: 32, offset: 608)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 128, align: 32, elements: !1291)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1284, file: !1275, line: 114, baseType: !1012, size: 32, align: 32, offset: 736)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1284, file: !1275, line: 115, baseType: !1012, size: 32, align: 32, offset: 768)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1284, file: !1275, line: 116, baseType: !1012, size: 32, align: 32, offset: 800)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1274, file: !1275, line: 163, baseType: !1022, size: 64, align: 64, offset: 256)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1274, file: !1275, line: 165, baseType: !1304, size: 128, align: 64, offset: 320)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1275, line: 122, baseType: !1305)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1275, line: 119, size: 128, align: 64, elements: !1306)
!1306 = !{!1307, !1331}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1305, file: !1275, line: 120, baseType: !1308, size: 64, align: 64)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64, align: 64)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1311)
!1311 = !{!1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1327, !1328, !1329, !1330}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1310, file: !14, line: 1451, baseType: !1081, size: 64, align: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1310, file: !14, line: 1461, baseType: !1014, size: 64, align: 64, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1310, file: !14, line: 1467, baseType: !1014, size: 64, align: 64, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1310, file: !14, line: 1468, baseType: !1043, size: 64, align: 64, offset: 192)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1310, file: !14, line: 1469, baseType: !1012, size: 32, align: 32, offset: 256)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1310, file: !14, line: 1470, baseType: !1012, size: 32, align: 32, offset: 288)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1310, file: !14, line: 1474, baseType: !1012, size: 32, align: 32, offset: 320)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1310, file: !14, line: 1479, baseType: !1320, size: 64, align: 64, offset: 384)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64, align: 64)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1322)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1323)
!1323 = !{!1324, !1325, !1326}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1322, file: !14, line: 1412, baseType: !1043, size: 64, align: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1322, file: !14, line: 1413, baseType: !1012, size: 32, align: 32, offset: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1322, file: !14, line: 1414, baseType: !844, size: 32, align: 32, offset: 96)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1310, file: !14, line: 1480, baseType: !1012, size: 32, align: 32, offset: 448)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1310, file: !14, line: 1486, baseType: !1014, size: 64, align: 64, offset: 512)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1310, file: !14, line: 1488, baseType: !1014, size: 64, align: 64, offset: 576)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1310, file: !14, line: 1497, baseType: !1014, size: 64, align: 64, offset: 640)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1305, file: !1275, line: 121, baseType: !1037, size: 64, align: 64, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1274, file: !1275, line: 166, baseType: !1333, size: 128, align: 64, offset: 448)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1275, line: 127, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1275, line: 124, size: 128, align: 64, elements: !1335)
!1335 = !{!1336, !1409}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1334, file: !1275, line: 125, baseType: !1337, size: 64, align: 64)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64, align: 64)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64, align: 64)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1340)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1341)
!1341 = !{!1342, !1343, !1367, !1371, !1372, !1406, !1407, !1408}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1340, file: !14, line: 5751, baseType: !1171, size: 64, align: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1340, file: !14, line: 5756, baseType: !1344, size: 64, align: 64, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64, align: 64)
!1345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1346)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1347)
!1347 = !{!1348, !1349, !1352, !1353, !1354, !1358, !1362, !1366}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1346, file: !14, line: 5797, baseType: !1147, size: 64, align: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1346, file: !14, line: 5804, baseType: !1350, size: 64, align: 64, offset: 64)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64, align: 64)
!1351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1346, file: !14, line: 5815, baseType: !1171, size: 64, align: 64, offset: 128)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1346, file: !14, line: 5825, baseType: !1012, size: 32, align: 32, offset: 192)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1346, file: !14, line: 5826, baseType: !1355, size: 64, align: 64, offset: 256)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64, align: 64)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{!1012, !1338}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1346, file: !14, line: 5827, baseType: !1359, size: 64, align: 64, offset: 320)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64, align: 64)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!1012, !1338, !1308}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1346, file: !14, line: 5828, baseType: !1363, size: 64, align: 64, offset: 384)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64, align: 64)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{null, !1338}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1346, file: !14, line: 5829, baseType: !1363, size: 64, align: 64, offset: 448)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1340, file: !14, line: 5762, baseType: !1368, size: 64, align: 64, offset: 128)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64, align: 64)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1370)
!1370 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1340, file: !14, line: 5768, baseType: !1022, size: 64, align: 64, offset: 192)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1340, file: !14, line: 5775, baseType: !1373, size: 64, align: 64, offset: 256)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1376)
!1376 = !{!1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1375, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1375, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1375, file: !14, line: 3948, baseType: !1029, size: 32, align: 32, offset: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1375, file: !14, line: 3958, baseType: !1043, size: 64, align: 64, offset: 128)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1375, file: !14, line: 3962, baseType: !1012, size: 32, align: 32, offset: 192)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1375, file: !14, line: 3968, baseType: !1012, size: 32, align: 32, offset: 224)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1375, file: !14, line: 3973, baseType: !1014, size: 64, align: 64, offset: 256)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1375, file: !14, line: 3986, baseType: !1012, size: 32, align: 32, offset: 320)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1375, file: !14, line: 3999, baseType: !1012, size: 32, align: 32, offset: 352)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1375, file: !14, line: 4004, baseType: !1012, size: 32, align: 32, offset: 384)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1375, file: !14, line: 4005, baseType: !1012, size: 32, align: 32, offset: 416)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1375, file: !14, line: 4010, baseType: !1012, size: 32, align: 32, offset: 448)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1375, file: !14, line: 4011, baseType: !1012, size: 32, align: 32, offset: 480)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1375, file: !14, line: 4020, baseType: !1057, size: 64, align: 32, offset: 512)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1375, file: !14, line: 4025, baseType: !874, size: 32, align: 32, offset: 576)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1375, file: !14, line: 4030, baseType: !767, size: 32, align: 32, offset: 608)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1375, file: !14, line: 4031, baseType: !773, size: 32, align: 32, offset: 640)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1375, file: !14, line: 4032, baseType: !791, size: 32, align: 32, offset: 672)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1375, file: !14, line: 4033, baseType: !815, size: 32, align: 32, offset: 704)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1375, file: !14, line: 4034, baseType: !834, size: 32, align: 32, offset: 736)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1375, file: !14, line: 4039, baseType: !1012, size: 32, align: 32, offset: 768)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1375, file: !14, line: 4046, baseType: !1034, size: 64, align: 64, offset: 832)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1375, file: !14, line: 4050, baseType: !1012, size: 32, align: 32, offset: 896)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1375, file: !14, line: 4054, baseType: !1012, size: 32, align: 32, offset: 928)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1375, file: !14, line: 4061, baseType: !1012, size: 32, align: 32, offset: 960)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1375, file: !14, line: 4065, baseType: !1012, size: 32, align: 32, offset: 992)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1375, file: !14, line: 4073, baseType: !1012, size: 32, align: 32, offset: 1024)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1375, file: !14, line: 4080, baseType: !1012, size: 32, align: 32, offset: 1056)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1375, file: !14, line: 4084, baseType: !1012, size: 32, align: 32, offset: 1088)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1340, file: !14, line: 5781, baseType: !1373, size: 64, align: 64, offset: 320)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1340, file: !14, line: 5787, baseType: !1057, size: 64, align: 32, offset: 384)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1340, file: !14, line: 5793, baseType: !1057, size: 64, align: 32, offset: 448)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1334, file: !1275, line: 126, baseType: !1012, size: 32, align: 32, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1274, file: !1275, line: 172, baseType: !1308, size: 64, align: 64, offset: 576)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1274, file: !1275, line: 177, baseType: !1043, size: 64, align: 64, offset: 640)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1274, file: !1275, line: 178, baseType: !1013, size: 32, align: 32, offset: 704)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1274, file: !1275, line: 180, baseType: !1022, size: 64, align: 64, offset: 768)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1274, file: !1275, line: 185, baseType: !1012, size: 32, align: 32, offset: 832)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1274, file: !1275, line: 190, baseType: !1022, size: 64, align: 64, offset: 896)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1274, file: !1275, line: 195, baseType: !1012, size: 32, align: 32, offset: 960)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1274, file: !1275, line: 200, baseType: !1308, size: 64, align: 64, offset: 1024)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1274, file: !1275, line: 201, baseType: !1012, size: 32, align: 32, offset: 1088)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1274, file: !1275, line: 202, baseType: !1037, size: 64, align: 64, offset: 1152)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1274, file: !1275, line: 203, baseType: !1012, size: 32, align: 32, offset: 1216)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1274, file: !1275, line: 205, baseType: !1012, size: 32, align: 32, offset: 1248)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1274, file: !1275, line: 206, baseType: !1012, size: 32, align: 32, offset: 1280)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1274, file: !1275, line: 209, baseType: !1134, size: 64, align: 64, offset: 1344)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1274, file: !1275, line: 212, baseType: !1134, size: 64, align: 64, offset: 1408)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1274, file: !1275, line: 213, baseType: !1037, size: 64, align: 64, offset: 1472)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1274, file: !1275, line: 215, baseType: !1012, size: 32, align: 32, offset: 1536)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1274, file: !1275, line: 217, baseType: !1012, size: 32, align: 32, offset: 1568)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1274, file: !1275, line: 220, baseType: !1012, size: 32, align: 32, offset: 1600)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1261, file: !14, line: 1598, baseType: !1022, size: 64, align: 64, offset: 384)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1261, file: !14, line: 1606, baseType: !1014, size: 64, align: 64, offset: 448)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1261, file: !14, line: 1614, baseType: !1012, size: 32, align: 32, offset: 512)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1261, file: !14, line: 1622, baseType: !1012, size: 32, align: 32, offset: 544)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1261, file: !14, line: 1628, baseType: !1012, size: 32, align: 32, offset: 576)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1261, file: !14, line: 1636, baseType: !1012, size: 32, align: 32, offset: 608)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1261, file: !14, line: 1643, baseType: !1012, size: 32, align: 32, offset: 640)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1261, file: !14, line: 1657, baseType: !1043, size: 64, align: 64, offset: 704)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1261, file: !14, line: 1658, baseType: !1012, size: 32, align: 32, offset: 768)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1261, file: !14, line: 1679, baseType: !1057, size: 64, align: 32, offset: 800)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1261, file: !14, line: 1688, baseType: !1012, size: 32, align: 32, offset: 864)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1261, file: !14, line: 1712, baseType: !1012, size: 32, align: 32, offset: 896)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1261, file: !14, line: 1729, baseType: !1012, size: 32, align: 32, offset: 928)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1261, file: !14, line: 1729, baseType: !1012, size: 32, align: 32, offset: 960)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1261, file: !14, line: 1744, baseType: !1012, size: 32, align: 32, offset: 992)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1261, file: !14, line: 1744, baseType: !1012, size: 32, align: 32, offset: 1024)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1261, file: !14, line: 1751, baseType: !1012, size: 32, align: 32, offset: 1056)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1261, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1261, file: !14, line: 1791, baseType: !1448, size: 64, align: 64, offset: 1152)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64, align: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{null, !1451, !1452, !1454, !1012, !1012, !1012}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64, align: 64)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64, align: 64)
!1453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64, align: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1261, file: !14, line: 1808, baseType: !1456, size: 64, align: 64, offset: 1216)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64, align: 64)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!473, !1451, !1158}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1261, file: !14, line: 1816, baseType: !1012, size: 32, align: 32, offset: 1280)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1261, file: !14, line: 1825, baseType: !1461, size: 32, align: 32, offset: 1312)
!1461 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1261, file: !14, line: 1830, baseType: !1012, size: 32, align: 32, offset: 1344)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1261, file: !14, line: 1838, baseType: !1461, size: 32, align: 32, offset: 1376)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1261, file: !14, line: 1846, baseType: !1012, size: 32, align: 32, offset: 1408)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1261, file: !14, line: 1851, baseType: !1012, size: 32, align: 32, offset: 1440)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1261, file: !14, line: 1861, baseType: !1461, size: 32, align: 32, offset: 1472)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1261, file: !14, line: 1868, baseType: !1461, size: 32, align: 32, offset: 1504)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1261, file: !14, line: 1875, baseType: !1461, size: 32, align: 32, offset: 1536)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1261, file: !14, line: 1882, baseType: !1461, size: 32, align: 32, offset: 1568)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1261, file: !14, line: 1889, baseType: !1461, size: 32, align: 32, offset: 1600)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1261, file: !14, line: 1896, baseType: !1461, size: 32, align: 32, offset: 1632)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1261, file: !14, line: 1903, baseType: !1461, size: 32, align: 32, offset: 1664)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1261, file: !14, line: 1910, baseType: !1012, size: 32, align: 32, offset: 1696)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1261, file: !14, line: 1915, baseType: !1012, size: 32, align: 32, offset: 1728)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1261, file: !14, line: 1926, baseType: !1454, size: 64, align: 64, offset: 1792)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1261, file: !14, line: 1935, baseType: !1057, size: 64, align: 32, offset: 1856)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1261, file: !14, line: 1942, baseType: !1012, size: 32, align: 32, offset: 1920)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1261, file: !14, line: 1948, baseType: !1012, size: 32, align: 32, offset: 1952)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1261, file: !14, line: 1954, baseType: !1012, size: 32, align: 32, offset: 1984)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1261, file: !14, line: 1960, baseType: !1012, size: 32, align: 32, offset: 2016)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1261, file: !14, line: 1984, baseType: !1012, size: 32, align: 32, offset: 2048)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1261, file: !14, line: 1991, baseType: !1012, size: 32, align: 32, offset: 2080)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1261, file: !14, line: 1996, baseType: !1012, size: 32, align: 32, offset: 2112)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1261, file: !14, line: 2004, baseType: !1012, size: 32, align: 32, offset: 2144)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1261, file: !14, line: 2011, baseType: !1012, size: 32, align: 32, offset: 2176)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1261, file: !14, line: 2018, baseType: !1012, size: 32, align: 32, offset: 2208)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1261, file: !14, line: 2027, baseType: !1012, size: 32, align: 32, offset: 2240)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1261, file: !14, line: 2034, baseType: !1012, size: 32, align: 32, offset: 2272)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1261, file: !14, line: 2044, baseType: !1012, size: 32, align: 32, offset: 2304)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1261, file: !14, line: 2054, baseType: !1491, size: 64, align: 64, offset: 2368)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64, align: 64)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1015, line: 49, baseType: !1493)
!1493 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1261, file: !14, line: 2061, baseType: !1491, size: 64, align: 64, offset: 2432)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1261, file: !14, line: 2066, baseType: !1012, size: 32, align: 32, offset: 2496)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1261, file: !14, line: 2070, baseType: !1012, size: 32, align: 32, offset: 2528)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1261, file: !14, line: 2078, baseType: !1012, size: 32, align: 32, offset: 2560)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1261, file: !14, line: 2085, baseType: !1012, size: 32, align: 32, offset: 2592)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1261, file: !14, line: 2092, baseType: !1012, size: 32, align: 32, offset: 2624)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1261, file: !14, line: 2099, baseType: !1012, size: 32, align: 32, offset: 2656)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1261, file: !14, line: 2106, baseType: !1012, size: 32, align: 32, offset: 2688)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1261, file: !14, line: 2113, baseType: !1012, size: 32, align: 32, offset: 2720)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1261, file: !14, line: 2120, baseType: !1012, size: 32, align: 32, offset: 2752)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1261, file: !14, line: 2125, baseType: !1012, size: 32, align: 32, offset: 2784)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1261, file: !14, line: 2133, baseType: !1012, size: 32, align: 32, offset: 2816)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1261, file: !14, line: 2140, baseType: !1012, size: 32, align: 32, offset: 2848)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1261, file: !14, line: 2145, baseType: !1012, size: 32, align: 32, offset: 2880)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1261, file: !14, line: 2153, baseType: !1012, size: 32, align: 32, offset: 2912)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1261, file: !14, line: 2158, baseType: !1012, size: 32, align: 32, offset: 2944)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1261, file: !14, line: 2166, baseType: !773, size: 32, align: 32, offset: 2976)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1261, file: !14, line: 2173, baseType: !791, size: 32, align: 32, offset: 3008)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1261, file: !14, line: 2180, baseType: !815, size: 32, align: 32, offset: 3040)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1261, file: !14, line: 2187, baseType: !767, size: 32, align: 32, offset: 3072)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1261, file: !14, line: 2194, baseType: !834, size: 32, align: 32, offset: 3104)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1261, file: !14, line: 2203, baseType: !1012, size: 32, align: 32, offset: 3136)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1261, file: !14, line: 2209, baseType: !874, size: 32, align: 32, offset: 3168)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1261, file: !14, line: 2212, baseType: !1012, size: 32, align: 32, offset: 3200)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1261, file: !14, line: 2213, baseType: !1012, size: 32, align: 32, offset: 3232)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1261, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1261, file: !14, line: 2232, baseType: !1012, size: 32, align: 32, offset: 3296)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1261, file: !14, line: 2243, baseType: !1012, size: 32, align: 32, offset: 3328)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1261, file: !14, line: 2249, baseType: !1012, size: 32, align: 32, offset: 3360)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1261, file: !14, line: 2256, baseType: !1012, size: 32, align: 32, offset: 3392)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1261, file: !14, line: 2263, baseType: !1034, size: 64, align: 64, offset: 3456)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1261, file: !14, line: 2270, baseType: !1034, size: 64, align: 64, offset: 3520)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1261, file: !14, line: 2277, baseType: !882, size: 32, align: 32, offset: 3584)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1261, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1261, file: !14, line: 2367, baseType: !1529, size: 64, align: 64, offset: 3648)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64, align: 64)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!1012, !1451, !1037, !1012}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1261, file: !14, line: 2383, baseType: !1012, size: 32, align: 32, offset: 3712)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1261, file: !14, line: 2386, baseType: !1461, size: 32, align: 32, offset: 3744)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1261, file: !14, line: 2387, baseType: !1461, size: 32, align: 32, offset: 3776)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1261, file: !14, line: 2394, baseType: !1012, size: 32, align: 32, offset: 3808)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1261, file: !14, line: 2401, baseType: !1012, size: 32, align: 32, offset: 3840)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1261, file: !14, line: 2408, baseType: !1012, size: 32, align: 32, offset: 3872)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1261, file: !14, line: 2415, baseType: !1012, size: 32, align: 32, offset: 3904)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1261, file: !14, line: 2422, baseType: !1012, size: 32, align: 32, offset: 3936)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1261, file: !14, line: 2423, baseType: !1541, size: 64, align: 64, offset: 3968)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64, align: 64)
!1542 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1543)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1544)
!1544 = !{!1545, !1546, !1547, !1548}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1543, file: !14, line: 827, baseType: !1012, size: 32, align: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1543, file: !14, line: 828, baseType: !1012, size: 32, align: 32, offset: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1543, file: !14, line: 829, baseType: !1012, size: 32, align: 32, offset: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1543, file: !14, line: 830, baseType: !1461, size: 32, align: 32, offset: 96)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1261, file: !14, line: 2430, baseType: !1014, size: 64, align: 64, offset: 4032)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1261, file: !14, line: 2437, baseType: !1014, size: 64, align: 64, offset: 4096)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1261, file: !14, line: 2444, baseType: !1461, size: 32, align: 32, offset: 4160)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1261, file: !14, line: 2451, baseType: !1461, size: 32, align: 32, offset: 4192)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1261, file: !14, line: 2458, baseType: !1012, size: 32, align: 32, offset: 4224)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1261, file: !14, line: 2469, baseType: !1012, size: 32, align: 32, offset: 4256)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1261, file: !14, line: 2475, baseType: !1012, size: 32, align: 32, offset: 4288)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1261, file: !14, line: 2481, baseType: !1012, size: 32, align: 32, offset: 4320)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1261, file: !14, line: 2485, baseType: !1012, size: 32, align: 32, offset: 4352)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1261, file: !14, line: 2489, baseType: !1012, size: 32, align: 32, offset: 4384)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1261, file: !14, line: 2493, baseType: !1012, size: 32, align: 32, offset: 4416)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1261, file: !14, line: 2501, baseType: !1012, size: 32, align: 32, offset: 4448)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1261, file: !14, line: 2506, baseType: !1012, size: 32, align: 32, offset: 4480)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1261, file: !14, line: 2510, baseType: !1012, size: 32, align: 32, offset: 4512)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1261, file: !14, line: 2514, baseType: !1014, size: 64, align: 64, offset: 4544)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1261, file: !14, line: 2528, baseType: !1565, size: 64, align: 64, offset: 4608)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64, align: 64)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{null, !1451, !1022, !1012, !1012}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1261, file: !14, line: 2534, baseType: !1012, size: 32, align: 32, offset: 4672)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1261, file: !14, line: 2545, baseType: !1012, size: 32, align: 32, offset: 4704)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1261, file: !14, line: 2547, baseType: !1012, size: 32, align: 32, offset: 4736)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1261, file: !14, line: 2549, baseType: !1012, size: 32, align: 32, offset: 4768)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1261, file: !14, line: 2551, baseType: !1012, size: 32, align: 32, offset: 4800)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1261, file: !14, line: 2553, baseType: !1012, size: 32, align: 32, offset: 4832)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1261, file: !14, line: 2555, baseType: !1012, size: 32, align: 32, offset: 4864)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1261, file: !14, line: 2557, baseType: !1012, size: 32, align: 32, offset: 4896)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1261, file: !14, line: 2559, baseType: !1012, size: 32, align: 32, offset: 4928)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1261, file: !14, line: 2563, baseType: !1012, size: 32, align: 32, offset: 4960)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1261, file: !14, line: 2571, baseType: !1579, size: 64, align: 64, offset: 4992)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64, align: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1261, file: !14, line: 2579, baseType: !1579, size: 64, align: 64, offset: 5056)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1261, file: !14, line: 2586, baseType: !1012, size: 32, align: 32, offset: 5120)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1261, file: !14, line: 2615, baseType: !1012, size: 32, align: 32, offset: 5152)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1261, file: !14, line: 2627, baseType: !1012, size: 32, align: 32, offset: 5184)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1261, file: !14, line: 2637, baseType: !1012, size: 32, align: 32, offset: 5216)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1261, file: !14, line: 2681, baseType: !1012, size: 32, align: 32, offset: 5248)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1261, file: !14, line: 2709, baseType: !1014, size: 64, align: 64, offset: 5312)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1261, file: !14, line: 2716, baseType: !1588, size: 64, align: 64, offset: 5376)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64, align: 64)
!1589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1590)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1591)
!1591 = !{!1592, !1593, !1594, !1595, !1596, !1597, !1601, !1607, !1611, !1612, !1613, !1614, !1620, !1621, !1622, !1623, !1624}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1590, file: !14, line: 3642, baseType: !1147, size: 64, align: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1590, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1590, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1590, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1590, file: !14, line: 3669, baseType: !1012, size: 32, align: 32, offset: 160)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1590, file: !14, line: 3682, baseType: !1598, size: 64, align: 64, offset: 192)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64, align: 64)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!1012, !1259, !1037}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1590, file: !14, line: 3698, baseType: !1602, size: 64, align: 64, offset: 256)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64, align: 64)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!1012, !1259, !1605, !1029}
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64, align: 64)
!1606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1590, file: !14, line: 3712, baseType: !1608, size: 64, align: 64, offset: 320)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64, align: 64)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!1012, !1259, !1012, !1605, !1029}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1590, file: !14, line: 3726, baseType: !1602, size: 64, align: 64, offset: 384)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1590, file: !14, line: 3737, baseType: !1256, size: 64, align: 64, offset: 448)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1590, file: !14, line: 3746, baseType: !1012, size: 32, align: 32, offset: 512)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1590, file: !14, line: 3757, baseType: !1615, size: 64, align: 64, offset: 576)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64, align: 64)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{null, !1618}
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64, align: 64)
!1619 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1590, file: !14, line: 3766, baseType: !1256, size: 64, align: 64, offset: 640)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1590, file: !14, line: 3774, baseType: !1256, size: 64, align: 64, offset: 704)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1590, file: !14, line: 3780, baseType: !1012, size: 32, align: 32, offset: 768)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1590, file: !14, line: 3785, baseType: !1012, size: 32, align: 32, offset: 800)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1590, file: !14, line: 3795, baseType: !1625, size: 64, align: 64, offset: 832)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64, align: 64)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!1012, !1259, !1081}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1261, file: !14, line: 2728, baseType: !1022, size: 64, align: 64, offset: 5440)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1261, file: !14, line: 2735, baseType: !1071, size: 512, align: 64, offset: 5504)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1261, file: !14, line: 2742, baseType: !1012, size: 32, align: 32, offset: 6016)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1261, file: !14, line: 2755, baseType: !1012, size: 32, align: 32, offset: 6048)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1261, file: !14, line: 2776, baseType: !1012, size: 32, align: 32, offset: 6080)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1261, file: !14, line: 2783, baseType: !1012, size: 32, align: 32, offset: 6112)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1261, file: !14, line: 2791, baseType: !1012, size: 32, align: 32, offset: 6144)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1261, file: !14, line: 2802, baseType: !1037, size: 64, align: 64, offset: 6208)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1261, file: !14, line: 2811, baseType: !1012, size: 32, align: 32, offset: 6272)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1261, file: !14, line: 2821, baseType: !1012, size: 32, align: 32, offset: 6304)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1261, file: !14, line: 2830, baseType: !1012, size: 32, align: 32, offset: 6336)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1261, file: !14, line: 2840, baseType: !1012, size: 32, align: 32, offset: 6368)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1261, file: !14, line: 2851, baseType: !1641, size: 64, align: 64, offset: 6400)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64, align: 64)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{!1012, !1451, !1644, !1022, !1454, !1012, !1012}
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64, align: 64)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!1012, !1451, !1022}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1261, file: !14, line: 2871, baseType: !1648, size: 64, align: 64, offset: 6464)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64, align: 64)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{!1012, !1451, !1651, !1022, !1454, !1012}
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64, align: 64)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{!1012, !1451, !1022, !1012, !1012}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1261, file: !14, line: 2878, baseType: !1012, size: 32, align: 32, offset: 6528)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1261, file: !14, line: 2885, baseType: !1012, size: 32, align: 32, offset: 6560)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1261, file: !14, line: 3005, baseType: !1012, size: 32, align: 32, offset: 6592)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1261, file: !14, line: 3013, baseType: !894, size: 32, align: 32, offset: 6624)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1261, file: !14, line: 3020, baseType: !894, size: 32, align: 32, offset: 6656)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1261, file: !14, line: 3027, baseType: !894, size: 32, align: 32, offset: 6688)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1261, file: !14, line: 3037, baseType: !1043, size: 64, align: 64, offset: 6720)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1261, file: !14, line: 3038, baseType: !1012, size: 32, align: 32, offset: 6784)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1261, file: !14, line: 3050, baseType: !1034, size: 64, align: 64, offset: 6848)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1261, file: !14, line: 3065, baseType: !1012, size: 32, align: 32, offset: 6912)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1261, file: !14, line: 3083, baseType: !1012, size: 32, align: 32, offset: 6944)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1261, file: !14, line: 3092, baseType: !1057, size: 64, align: 32, offset: 6976)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1261, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1261, file: !14, line: 3106, baseType: !1057, size: 64, align: 32, offset: 7072)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1261, file: !14, line: 3113, baseType: !1669, size: 64, align: 64, offset: 7168)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64, align: 64)
!1670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1671)
!1671 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1672)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1673)
!1673 = !{!1674, !1675, !1676, !1677, !1678, !1679, !1682}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1672, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1672, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1672, file: !14, line: 720, baseType: !1147, size: 64, align: 64, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1672, file: !14, line: 724, baseType: !1147, size: 64, align: 64, offset: 128)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1672, file: !14, line: 728, baseType: !1012, size: 32, align: 32, offset: 192)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1672, file: !14, line: 734, baseType: !1680, size: 64, align: 64, offset: 256)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64, align: 64)
!1681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1147)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1672, file: !14, line: 739, baseType: !1683, size: 64, align: 64, offset: 320)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64, align: 64)
!1684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1247)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1261, file: !14, line: 3129, baseType: !1014, size: 64, align: 64, offset: 7232)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1261, file: !14, line: 3130, baseType: !1014, size: 64, align: 64, offset: 7296)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1261, file: !14, line: 3131, baseType: !1014, size: 64, align: 64, offset: 7360)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1261, file: !14, line: 3132, baseType: !1014, size: 64, align: 64, offset: 7424)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1261, file: !14, line: 3139, baseType: !1579, size: 64, align: 64, offset: 7488)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1261, file: !14, line: 3147, baseType: !1012, size: 32, align: 32, offset: 7552)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1261, file: !14, line: 3165, baseType: !1012, size: 32, align: 32, offset: 7584)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1261, file: !14, line: 3172, baseType: !1012, size: 32, align: 32, offset: 7616)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1261, file: !14, line: 3180, baseType: !1012, size: 32, align: 32, offset: 7648)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1261, file: !14, line: 3191, baseType: !1491, size: 64, align: 64, offset: 7680)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1261, file: !14, line: 3199, baseType: !1043, size: 64, align: 64, offset: 7744)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1261, file: !14, line: 3207, baseType: !1579, size: 64, align: 64, offset: 7808)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1261, file: !14, line: 3214, baseType: !1013, size: 32, align: 32, offset: 7872)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1261, file: !14, line: 3224, baseType: !1320, size: 64, align: 64, offset: 7936)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1261, file: !14, line: 3225, baseType: !1012, size: 32, align: 32, offset: 8000)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1261, file: !14, line: 3249, baseType: !1081, size: 64, align: 64, offset: 8064)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1261, file: !14, line: 3256, baseType: !1012, size: 32, align: 32, offset: 8128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1261, file: !14, line: 3271, baseType: !1012, size: 32, align: 32, offset: 8160)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1261, file: !14, line: 3279, baseType: !1014, size: 64, align: 64, offset: 8192)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1261, file: !14, line: 3301, baseType: !1081, size: 64, align: 64, offset: 8256)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1261, file: !14, line: 3310, baseType: !1012, size: 32, align: 32, offset: 8320)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1261, file: !14, line: 3337, baseType: !1012, size: 32, align: 32, offset: 8352)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1261, file: !14, line: 3351, baseType: !1012, size: 32, align: 32, offset: 8384)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1261, file: !14, line: 3359, baseType: !1012, size: 32, align: 32, offset: 8416)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1144, file: !14, line: 3535, baseType: !1710, size: 64, align: 64, offset: 1024)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64, align: 64)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{!1012, !1259, !1713}
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64, align: 64)
!1714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1260)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1144, file: !14, line: 3541, baseType: !1716, size: 64, align: 64, offset: 1088)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64, align: 64)
!1717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1718)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1275, line: 223, size: 128, align: 64, elements: !1720)
!1720 = !{!1721, !1722}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1719, file: !1275, line: 224, baseType: !1605, size: 64, align: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1719, file: !1275, line: 225, baseType: !1605, size: 64, align: 64, offset: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1144, file: !14, line: 3549, baseType: !1724, size: 64, align: 64, offset: 1152)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64, align: 64)
!1725 = !DISubroutineType(types: !1726)
!1726 = !{null, !1254}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1144, file: !14, line: 3551, baseType: !1256, size: 64, align: 64, offset: 1216)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1144, file: !14, line: 3552, baseType: !1729, size: 64, align: 64, offset: 1280)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64, align: 64)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{!1012, !1259, !1043, !1012, !1732}
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64, align: 64)
!1733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1734)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1735)
!1735 = !{!1736, !1737, !1738, !1739, !1740, !1764}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1734, file: !14, line: 3921, baseType: !1492, size: 16, align: 16)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1734, file: !14, line: 3922, baseType: !1029, size: 32, align: 32, offset: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1734, file: !14, line: 3923, baseType: !1029, size: 32, align: 32, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1734, file: !14, line: 3924, baseType: !1013, size: 32, align: 32, offset: 96)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1734, file: !14, line: 3925, baseType: !1741, size: 64, align: 64, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64, align: 64)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64, align: 64)
!1743 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1744)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1745)
!1745 = !{!1746, !1747, !1748, !1749, !1750, !1751, !1757, !1759, !1760, !1761, !1762, !1763}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1744, file: !14, line: 3886, baseType: !1012, size: 32, align: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1744, file: !14, line: 3887, baseType: !1012, size: 32, align: 32, offset: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1744, file: !14, line: 3888, baseType: !1012, size: 32, align: 32, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1744, file: !14, line: 3889, baseType: !1012, size: 32, align: 32, offset: 96)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1744, file: !14, line: 3890, baseType: !1012, size: 32, align: 32, offset: 128)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1744, file: !14, line: 3897, baseType: !1752, size: 768, align: 64, offset: 192)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1753)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1754)
!1754 = !{!1755, !1756}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1753, file: !14, line: 3855, baseType: !1042, size: 512, align: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1753, file: !14, line: 3857, baseType: !1047, size: 256, align: 32, offset: 512)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1744, file: !14, line: 3903, baseType: !1758, size: 256, align: 64, offset: 960)
!1758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 256, align: 64, elements: !1291)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1744, file: !14, line: 3904, baseType: !1298, size: 128, align: 32, offset: 1216)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1744, file: !14, line: 3906, baseType: !903, size: 32, align: 32, offset: 1344)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1744, file: !14, line: 3908, baseType: !1579, size: 64, align: 64, offset: 1408)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1744, file: !14, line: 3915, baseType: !1579, size: 64, align: 64, offset: 1472)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1744, file: !14, line: 3917, baseType: !1012, size: 32, align: 32, offset: 1536)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1734, file: !14, line: 3926, baseType: !1014, size: 64, align: 64, offset: 192)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1144, file: !14, line: 3564, baseType: !1766, size: 64, align: 64, offset: 1344)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64, align: 64)
!1767 = !DISubroutineType(types: !1768)
!1768 = !{!1012, !1259, !1308, !1452, !1454}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1144, file: !14, line: 3566, baseType: !1770, size: 64, align: 64, offset: 1408)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64, align: 64)
!1771 = !DISubroutineType(types: !1772)
!1772 = !{!1012, !1259, !1022, !1454, !1308}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1144, file: !14, line: 3567, baseType: !1256, size: 64, align: 64, offset: 1472)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1144, file: !14, line: 3576, baseType: !1775, size: 64, align: 64, offset: 1536)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64, align: 64)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!1012, !1259, !1452}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1144, file: !14, line: 3577, baseType: !1779, size: 64, align: 64, offset: 1600)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64, align: 64)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!1012, !1259, !1308}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1144, file: !14, line: 3584, baseType: !1598, size: 64, align: 64, offset: 1664)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1144, file: !14, line: 3589, baseType: !1784, size: 64, align: 64, offset: 1728)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64, align: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{null, !1259}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1144, file: !14, line: 3594, baseType: !1012, size: 32, align: 32, offset: 1792)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1144, file: !14, line: 3600, baseType: !1147, size: 64, align: 64, offset: 1856)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1144, file: !14, line: 3609, baseType: !1790, size: 64, align: 64, offset: 1920)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64, align: 64)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64, align: 64)
!1792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1793)
!1793 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1794 = distinct !DIGlobalVariable(name: "aac_channel_layout", scope: !0, file: !1795, line: 57, type: !1796, isLocal: true, isDefinition: true, variable: [16 x i64]* @aac_channel_layout)
!1795 = !DIFile(filename: "libavcodec/aacdectab.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1168, size: 1024, align: 64, elements: !1797)
!1797 = !{!1798}
!1798 = !DISubrange(count: 16)
!1799 = distinct !DIGlobalVariable(name: "aac_table_init", scope: !0, file: !1800, line: 1153, type: !1801, isLocal: true, isDefinition: true, variable: i32* @aac_table_init)
!1800 = !DIFile(filename: "libavcodec/aacdec_template.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_once_t", file: !1802, line: 168, baseType: !1012)
!1802 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1803 = distinct !DIGlobalVariable(name: "table", scope: !1804, file: !1800, line: 1111, type: !1808, isLocal: true, isDefinition: true, variable: [304 x [2 x i16]]* @aac_static_table_init.table)
!1804 = distinct !DISubprogram(name: "aac_static_table_init", scope: !1800, file: !1800, line: 1109, type: !1805, isLocal: true, isDefinition: true, scopeLine: 1110, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{null}
!1807 = !{}
!1808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 9728, align: 16, elements: !1811)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1015, line: 37, baseType: !1810)
!1810 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1811 = !{!1812, !1813}
!1812 = !DISubrange(count: 304)
!1813 = !DISubrange(count: 2)
!1814 = distinct !DIGlobalVariable(name: "table", scope: !1804, file: !1800, line: 1112, type: !1815, isLocal: true, isDefinition: true, variable: [270 x [2 x i16]]* @aac_static_table_init.table.3)
!1815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 8640, align: 16, elements: !1816)
!1816 = !{!1817, !1813}
!1817 = !DISubrange(count: 270)
!1818 = distinct !DIGlobalVariable(name: "table", scope: !1804, file: !1800, line: 1113, type: !1819, isLocal: true, isDefinition: true, variable: [550 x [2 x i16]]* @aac_static_table_init.table.4)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 17600, align: 16, elements: !1820)
!1820 = !{!1821, !1813}
!1821 = !DISubrange(count: 550)
!1822 = distinct !DIGlobalVariable(name: "table", scope: !1804, file: !1800, line: 1114, type: !1823, isLocal: true, isDefinition: true, variable: [300 x [2 x i16]]* @aac_static_table_init.table.5)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 9600, align: 16, elements: !1824)
!1824 = !{!1825, !1813}
!1825 = !DISubrange(count: 300)
!1826 = distinct !DIGlobalVariable(name: "table", scope: !1804, file: !1800, line: 1115, type: !1827, isLocal: true, isDefinition: true, variable: [328 x [2 x i16]]* @aac_static_table_init.table.6)
!1827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 10496, align: 16, elements: !1828)
!1828 = !{!1829, !1813}
!1829 = !DISubrange(count: 328)
!1830 = distinct !DIGlobalVariable(name: "table", scope: !1804, file: !1800, line: 1116, type: !1831, isLocal: true, isDefinition: true, variable: [294 x [2 x i16]]* @aac_static_table_init.table.7)
!1831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 9408, align: 16, elements: !1832)
!1832 = !{!1833, !1813}
!1833 = !DISubrange(count: 294)
!1834 = distinct !DIGlobalVariable(name: "table", scope: !1804, file: !1800, line: 1117, type: !1835, isLocal: true, isDefinition: true, variable: [306 x [2 x i16]]* @aac_static_table_init.table.8)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 9792, align: 16, elements: !1836)
!1836 = !{!1837, !1813}
!1837 = !DISubrange(count: 306)
!1838 = distinct !DIGlobalVariable(name: "table", scope: !1804, file: !1800, line: 1118, type: !1839, isLocal: true, isDefinition: true, variable: [268 x [2 x i16]]* @aac_static_table_init.table.9)
!1839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 8576, align: 16, elements: !1840)
!1840 = !{!1841, !1813}
!1841 = !DISubrange(count: 268)
!1842 = distinct !DIGlobalVariable(name: "table", scope: !1804, file: !1800, line: 1119, type: !1843, isLocal: true, isDefinition: true, variable: [510 x [2 x i16]]* @aac_static_table_init.table.10)
!1843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 16320, align: 16, elements: !1844)
!1844 = !{!1845, !1813}
!1845 = !DISubrange(count: 510)
!1846 = distinct !DIGlobalVariable(name: "table", scope: !1804, file: !1800, line: 1120, type: !1847, isLocal: true, isDefinition: true, variable: [366 x [2 x i16]]* @aac_static_table_init.table.11)
!1847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 11712, align: 16, elements: !1848)
!1848 = !{!1849, !1813}
!1849 = !DISubrange(count: 366)
!1850 = distinct !DIGlobalVariable(name: "table", scope: !1804, file: !1800, line: 1121, type: !1851, isLocal: true, isDefinition: true, variable: [462 x [2 x i16]]* @aac_static_table_init.table.12)
!1851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 14784, align: 16, elements: !1852)
!1852 = !{!1853, !1813}
!1853 = !DISubrange(count: 462)
!1854 = distinct !DIGlobalVariable(name: "table", scope: !1804, file: !1800, line: 1127, type: !1855, isLocal: true, isDefinition: true, variable: [352 x [2 x i16]]* @aac_static_table_init.table.13)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 11264, align: 16, elements: !1856)
!1856 = !{!1857, !1813}
!1857 = !DISubrange(count: 352)
!1858 = distinct !DIGlobalVariable(name: "vlc_spectral", scope: !0, file: !1800, line: 95, type: !1859, isLocal: true, isDefinition: true, variable: [11 x %struct.VLC]* @vlc_spectral)
!1859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1860, size: 2112, align: 64, elements: !1871)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1861, line: 30, baseType: !1862)
!1861 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1861, line: 26, size: 192, align: 64, elements: !1863)
!1863 = !{!1864, !1865, !1869, !1870}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1862, file: !1861, line: 27, baseType: !1012, size: 32, align: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1862, file: !1861, line: 28, baseType: !1866, size: 64, align: 64, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64, align: 64)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 32, align: 16, elements: !1868)
!1868 = !{!1813}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1862, file: !1861, line: 29, baseType: !1012, size: 32, align: 32, offset: 128)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1862, file: !1861, line: 29, baseType: !1012, size: 32, align: 32, offset: 160)
!1871 = !{!1872}
!1872 = !DISubrange(count: 11)
!1873 = distinct !DIGlobalVariable(name: "exp2_lut", scope: !1874, file: !1875, line: 50, type: !1876, isLocal: true, isDefinition: true, variable: [16 x float]* @ff_aac_tableinit.exp2_lut)
!1874 = distinct !DISubprogram(name: "ff_aac_tableinit", scope: !1875, file: !1875, line: 45, type: !1805, isLocal: true, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!1875 = !DIFile(filename: "libavcodec/aactab.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1877, size: 512, align: 32, elements: !1797)
!1877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1461)
!1878 = distinct !DIGlobalVariable(name: "vlc_scalefactors", scope: !0, file: !1800, line: 94, type: !1860, isLocal: true, isDefinition: true, variable: %struct.VLC* @vlc_scalefactors)
!1879 = distinct !DIGlobalVariable(name: "exp2tab", scope: !0, file: !1142, line: 105, type: !1880, isLocal: true, isDefinition: true, variable: [4 x i32]* @exp2tab)
!1880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1162, size: 128, align: 32, elements: !1291)
!1881 = distinct !DIGlobalVariable(name: "tags_per_config", scope: !0, file: !1795, line: 38, type: !1882, isLocal: true, isDefinition: true, variable: [16 x i8]* @tags_per_config)
!1882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1883, size: 128, align: 8, elements: !1797)
!1883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1126)
!1884 = distinct !DIGlobalVariable(name: "aac_channel_layout_map", scope: !0, file: !1795, line: 40, type: !1885, isLocal: true, isDefinition: true, variable: [16 x [5 x [3 x i8]]]* @aac_channel_layout_map)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1606, size: 1920, align: 8, elements: !1886)
!1886 = !{!1798, !1887, !1888}
!1887 = !DISubrange(count: 5)
!1888 = !DISubrange(count: 3)
!1889 = distinct !DIGlobalVariable(name: "ltp_coef", scope: !0, file: !1875, line: 94, type: !1890, isLocal: true, isDefinition: true, variable: [8 x i32]* @ltp_coef)
!1890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 256, align: 32, elements: !1044)
!1891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1019)
!1892 = distinct !DIGlobalVariable(name: "tns_tmp2_map", scope: !0, file: !1875, line: 126, type: !1893, isLocal: true, isDefinition: true, variable: [4 x i32*]* @tns_tmp2_map)
!1893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1894, size: 256, align: 64, elements: !1291)
!1894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1895)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64, align: 64)
!1896 = distinct !DIGlobalVariable(name: "tns_tmp2_map_0_3", scope: !0, file: !1875, line: 109, type: !1890, isLocal: true, isDefinition: true, variable: [8 x i32]* @tns_tmp2_map_0_3)
!1897 = distinct !DIGlobalVariable(name: "tns_tmp2_map_0_4", scope: !0, file: !1875, line: 119, type: !1898, isLocal: true, isDefinition: true, variable: [16 x i32]* @tns_tmp2_map_0_4)
!1898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 512, align: 32, elements: !1797)
!1899 = distinct !DIGlobalVariable(name: "tns_tmp2_map_1_3", scope: !0, file: !1875, line: 105, type: !1900, isLocal: true, isDefinition: true, variable: [4 x i32]* @tns_tmp2_map_1_3)
!1900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 128, align: 32, elements: !1291)
!1901 = distinct !DIGlobalVariable(name: "tns_tmp2_map_1_4", scope: !0, file: !1875, line: 114, type: !1890, isLocal: true, isDefinition: true, variable: [8 x i32]* @tns_tmp2_map_1_4)
!1902 = distinct !DIGlobalVariable(name: "gain_mode", scope: !1903, file: !1800, line: 1974, type: !2051, isLocal: true, isDefinition: true, variable: [4 x [3 x i8]]* @decode_gain_control.gain_mode)
!1903 = distinct !DISubprogram(name: "decode_gain_control", scope: !1800, file: !1800, line: 1971, type: !1904, isLocal: true, isDefinition: true, scopeLine: 1972, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!1904 = !DISubroutineType(types: !1905)
!1905 = !{null, !1906, !2041}
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64, align: 64)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "SingleChannelElement", file: !910, line: 270, baseType: !1908)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SingleChannelElement", file: !910, line: 248, size: 831232, align: 256, elements: !1909)
!1909 = !{!1910, !1954, !1971, !1979, !1983, !1984, !1988, !1990, !1992, !1994, !1995, !1997, !1998, !2002, !2003, !2007, !2011, !2015, !2024, !2025, !2040}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "ics", scope: !1908, file: !910, line: 249, baseType: !1911, size: 2432, align: 64)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndividualChannelStream", file: !910, line: 193, baseType: !1912)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IndividualChannelStream", file: !910, line: 174, size: 2432, align: 64, elements: !1913)
!1913 = !{!1914, !1915, !1917, !1919, !1920, !1922, !1934, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1948, !1952, !1953}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "max_sfb", scope: !1912, file: !910, line: 175, baseType: !1030, size: 8, align: 8)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "window_sequence", scope: !1912, file: !910, line: 176, baseType: !1916, size: 64, align: 32, offset: 32)
!1916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !909, size: 64, align: 32, elements: !1868)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "use_kb_window", scope: !1912, file: !910, line: 177, baseType: !1918, size: 16, align: 8, offset: 96)
!1918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 16, align: 8, elements: !1868)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "num_window_groups", scope: !1912, file: !910, line: 178, baseType: !1012, size: 32, align: 32, offset: 128)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "group_len", scope: !1912, file: !910, line: 179, baseType: !1921, size: 64, align: 8, offset: 160)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 64, align: 8, elements: !1044)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "ltp", scope: !1912, file: !910, line: 180, baseType: !1923, size: 416, align: 32, offset: 224)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "LongTermPrediction", file: !910, line: 169, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LongTermPrediction", file: !910, line: 163, size: 416, align: 32, elements: !1925)
!1925 = !{!1926, !1927, !1928, !1929, !1930}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !1924, file: !910, line: 164, baseType: !1126, size: 8, align: 8)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "lag", scope: !1924, file: !910, line: 165, baseType: !1809, size: 16, align: 16, offset: 16)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !1924, file: !910, line: 166, baseType: !1012, size: 32, align: 32, offset: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !1924, file: !910, line: 167, baseType: !1019, size: 32, align: 32, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1924, file: !910, line: 168, baseType: !1931, size: 320, align: 8, offset: 96)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1126, size: 320, align: 8, elements: !1932)
!1932 = !{!1933}
!1933 = !DISubrange(count: 40)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "swb_offset", scope: !1912, file: !910, line: 181, baseType: !1935, size: 64, align: 64, offset: 640)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64, align: 64)
!1936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1492)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "swb_sizes", scope: !1912, file: !910, line: 182, baseType: !1605, size: 64, align: 64, offset: 704)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "num_swb", scope: !1912, file: !910, line: 183, baseType: !1012, size: 32, align: 32, offset: 768)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "num_windows", scope: !1912, file: !910, line: 184, baseType: !1012, size: 32, align: 32, offset: 800)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "tns_max_bands", scope: !1912, file: !910, line: 185, baseType: !1012, size: 32, align: 32, offset: 832)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_present", scope: !1912, file: !910, line: 186, baseType: !1012, size: 32, align: 32, offset: 864)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_initialized", scope: !1912, file: !910, line: 187, baseType: !1012, size: 32, align: 32, offset: 896)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_group", scope: !1912, file: !910, line: 188, baseType: !1012, size: 32, align: 32, offset: 928)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_count", scope: !1912, file: !910, line: 189, baseType: !1945, size: 992, align: 32, offset: 960)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 992, align: 32, elements: !1946)
!1946 = !{!1947}
!1947 = !DISubrange(count: 31)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_used", scope: !1912, file: !910, line: 190, baseType: !1949, size: 328, align: 8, offset: 1952)
!1949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 328, align: 8, elements: !1950)
!1950 = !{!1951}
!1951 = !DISubrange(count: 41)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "window_clipping", scope: !1912, file: !910, line: 191, baseType: !1921, size: 64, align: 8, offset: 2280)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "clip_avoidance_factor", scope: !1912, file: !910, line: 192, baseType: !1461, size: 32, align: 32, offset: 2368)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "tns", scope: !1908, file: !910, line: 250, baseType: !1955, size: 44320, align: 32, offset: 2432)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "TemporalNoiseShaping", file: !910, line: 206, baseType: !1956)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TemporalNoiseShaping", file: !910, line: 198, size: 44320, align: 32, elements: !1957)
!1957 = !{!1958, !1959, !1960, !1963, !1964, !1965, !1969}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !1956, file: !910, line: 199, baseType: !1012, size: 32, align: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "n_filt", scope: !1956, file: !910, line: 200, baseType: !1047, size: 256, align: 32, offset: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1956, file: !910, line: 201, baseType: !1961, size: 1024, align: 32, offset: 288)
!1961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 1024, align: 32, elements: !1962)
!1962 = !{!1045, !1292}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1956, file: !910, line: 202, baseType: !1961, size: 1024, align: 32, offset: 1312)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !1956, file: !910, line: 203, baseType: !1961, size: 1024, align: 32, offset: 2336)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !1956, file: !910, line: 204, baseType: !1966, size: 20480, align: 32, offset: 3360)
!1966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 20480, align: 32, elements: !1967)
!1967 = !{!1045, !1292, !1968}
!1968 = !DISubrange(count: 20)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !1956, file: !910, line: 205, baseType: !1970, size: 20480, align: 32, offset: 23840)
!1970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 20480, align: 32, elements: !1967)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "pulse", scope: !1908, file: !910, line: 251, baseType: !1972, size: 320, align: 32, offset: 46752)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pulse", file: !910, line: 229, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Pulse", file: !910, line: 224, size: 320, align: 32, elements: !1974)
!1974 = !{!1975, !1976, !1977, !1978}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "num_pulse", scope: !1973, file: !910, line: 225, baseType: !1012, size: 32, align: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1973, file: !910, line: 226, baseType: !1012, size: 32, align: 32, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1973, file: !910, line: 227, baseType: !1298, size: 128, align: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "amp", scope: !1973, file: !910, line: 228, baseType: !1298, size: 128, align: 32, offset: 192)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "band_type", scope: !1908, file: !910, line: 252, baseType: !1980, size: 4096, align: 32, offset: 47072)
!1980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 4096, align: 32, elements: !1981)
!1981 = !{!1982}
!1982 = !DISubrange(count: 128)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "band_alt", scope: !1908, file: !910, line: 253, baseType: !1980, size: 4096, align: 32, offset: 51168)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "band_type_run_end", scope: !1908, file: !910, line: 254, baseType: !1985, size: 3840, align: 32, offset: 55264)
!1985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 3840, align: 32, elements: !1986)
!1986 = !{!1987}
!1987 = !DISubrange(count: 120)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1908, file: !910, line: 255, baseType: !1989, size: 3840, align: 32, offset: 59104)
!1989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 3840, align: 32, elements: !1986)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "sf_idx", scope: !1908, file: !910, line: 256, baseType: !1991, size: 4096, align: 32, offset: 62944)
!1991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 4096, align: 32, elements: !1981)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "zeroes", scope: !1908, file: !910, line: 257, baseType: !1993, size: 1024, align: 8, offset: 67040)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 1024, align: 8, elements: !1981)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "can_pns", scope: !1908, file: !910, line: 258, baseType: !1993, size: 1024, align: 8, offset: 68064)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "is_ener", scope: !1908, file: !910, line: 259, baseType: !1996, size: 4096, align: 32, offset: 69088)
!1996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1461, size: 4096, align: 32, elements: !1981)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "pns_ener", scope: !1908, file: !910, line: 260, baseType: !1996, size: 4096, align: 32, offset: 73184)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "pcoeffs", scope: !1908, file: !910, line: 261, baseType: !1999, size: 32768, align: 32, offset: 77312)
!1999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 32768, align: 32, elements: !2000)
!2000 = !{!2001}
!2001 = !DISubrange(count: 1024)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !1908, file: !910, line: 262, baseType: !1999, size: 32768, align: 32, offset: 110080)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1908, file: !910, line: 263, baseType: !2004, size: 49152, align: 32, offset: 142848)
!2004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 49152, align: 32, elements: !2005)
!2005 = !{!2006}
!2006 = !DISubrange(count: 1536)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ret_buf", scope: !1908, file: !910, line: 264, baseType: !2008, size: 65536, align: 32, offset: 192000)
!2008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 65536, align: 32, elements: !2009)
!2009 = !{!2010}
!2010 = !DISubrange(count: 2048)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_state", scope: !1908, file: !910, line: 265, baseType: !2012, size: 98304, align: 32, offset: 257536)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 98304, align: 32, elements: !2013)
!2013 = !{!2014}
!2014 = !DISubrange(count: 3072)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "lcoeffs", scope: !1908, file: !910, line: 266, baseType: !2016, size: 65536, align: 32, offset: 355840)
!2016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 65536, align: 32, elements: !2000)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_FLOAT", file: !1018, line: 41, baseType: !2018)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "SoftFloat", file: !2019, line: 37, baseType: !2020)
!2019 = !DIFile(filename: "./libavutil/softfloat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SoftFloat", file: !2019, line: 34, size: 64, align: 32, elements: !2021)
!2021 = !{!2022, !2023}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "mant", scope: !2020, file: !2019, line: 35, baseType: !1036, size: 32, align: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2020, file: !2019, line: 36, baseType: !1036, size: 32, align: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "prcoeffs", scope: !1908, file: !910, line: 267, baseType: !2016, size: 65536, align: 32, offset: 421376)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_state", scope: !1908, file: !910, line: 268, baseType: !2026, size: 344064, align: 32, offset: 486912)
!2026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2027, size: 344064, align: 32, elements: !2038)
!2027 = !DIDerivedType(tag: DW_TAG_typedef, name: "PredictorState", file: !910, line: 144, baseType: !2028)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PredictorState", file: !910, line: 135, size: 512, align: 32, elements: !2029)
!2029 = !{!2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "cor0", scope: !2028, file: !910, line: 136, baseType: !2017, size: 64, align: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "cor1", scope: !2028, file: !910, line: 137, baseType: !2017, size: 64, align: 32, offset: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "var0", scope: !2028, file: !910, line: 138, baseType: !2017, size: 64, align: 32, offset: 128)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "var1", scope: !2028, file: !910, line: 139, baseType: !2017, size: 64, align: 32, offset: 192)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2028, file: !910, line: 140, baseType: !2017, size: 64, align: 32, offset: 256)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2028, file: !910, line: 141, baseType: !2017, size: 64, align: 32, offset: 320)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2028, file: !910, line: 142, baseType: !2017, size: 64, align: 32, offset: 384)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "x_est", scope: !2028, file: !910, line: 143, baseType: !2017, size: 64, align: 32, offset: 448)
!2038 = !{!2039}
!2039 = !DISubrange(count: 672)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "ret", scope: !1908, file: !910, line: 269, baseType: !1032, size: 64, align: 64, offset: 830976)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64, align: 64)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !2043, line: 70, baseType: !2044)
!2043 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !2043, line: 61, size: 256, align: 64, elements: !2045)
!2045 = !{!2046, !2047, !2048, !2049, !2050}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2044, file: !2043, line: 62, baseType: !1605, size: 64, align: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2044, file: !2043, line: 62, baseType: !1605, size: 64, align: 64, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2044, file: !2043, line: 67, baseType: !1012, size: 32, align: 32, offset: 128)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !2044, file: !2043, line: 68, baseType: !1012, size: 32, align: 32, offset: 160)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !2044, file: !2043, line: 69, baseType: !1012, size: 32, align: 32, offset: 192)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1606, size: 96, align: 8, elements: !2052)
!2052 = !{!1292, !1888}
!2053 = distinct !DIGlobalVariable(name: "a", scope: !2054, file: !1142, line: 277, type: !2058, isLocal: true, isDefinition: true, variable: %struct.SoftFloat* @predict.a)
!2054 = distinct !DISubprogram(name: "predict", scope: !1142, file: !1142, line: 274, type: !2055, isLocal: true, isDefinition: true, scopeLine: 276, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!2055 = !DISubroutineType(types: !2056)
!2056 = !{null, !2057, !1454, !1012}
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64, align: 64)
!2058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2018)
!2059 = distinct !DIGlobalVariable(name: "alpha", scope: !2054, file: !1142, line: 278, type: !2058, isLocal: true, isDefinition: true, variable: %struct.SoftFloat* @predict.alpha)
!2060 = distinct !DIGlobalVariable(name: "FLOAT_0", scope: !0, file: !2019, line: 39, type: !2058, isLocal: true, isDefinition: true, variable: %struct.SoftFloat* @FLOAT_0)
!2061 = distinct !DIGlobalVariable(name: "cce_scale_fixed", scope: !0, file: !1142, line: 333, type: !2062, isLocal: true, isDefinition: true, variable: [8 x i32]* @cce_scale_fixed)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1162, size: 256, align: 32, elements: !1044)
!2063 = !{i32 2, !"Dwarf Version", i32 4}
!2064 = !{i32 2, !"Debug Info Version", i32 3}
!2065 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2066 = distinct !DISubprogram(name: "aac_decode_init", scope: !1800, file: !1800, line: 1155, type: !1257, isLocal: true, isDefinition: true, scopeLine: 1156, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!2067 = !DILocalVariable(name: "avctx", arg: 1, scope: !2066, file: !1800, line: 1155, type: !1259)
!2068 = !DIExpression()
!2069 = !DILocation(line: 1155, column: 66, scope: !2066)
!2070 = !DILocalVariable(name: "ac", scope: !2066, file: !1800, line: 1157, type: !2071)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64, align: 64)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACContext", file: !2073, line: 37, baseType: !2074)
!2073 = !DIFile(filename: "libavcodec/sbr.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACContext", file: !910, line: 293, size: 61952, align: 256, elements: !2075)
!2075 = !{!2076, !2078, !2079, !2080, !2081, !2099, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2568, !2569, !2571, !2572, !2573, !2575, !2603, !2604, !2605, !2606, !2610, !2611, !2617, !2621, !2622, !2626}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2074, file: !910, line: 294, baseType: !2077, size: 64, align: 64)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64, align: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2074, file: !910, line: 295, baseType: !1259, size: 64, align: 64, offset: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !2074, file: !910, line: 296, baseType: !1037, size: 64, align: 64, offset: 128)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "is_saved", scope: !2074, file: !910, line: 298, baseType: !1012, size: 32, align: 32, offset: 192)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "che_drc", scope: !2074, file: !910, line: 299, baseType: !2082, size: 3808, align: 32, offset: 224)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicRangeControl", file: !910, line: 222, baseType: !2083)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicRangeControl", file: !910, line: 211, size: 3808, align: 32, elements: !2084)
!2084 = !{!2085, !2086, !2090, !2091, !2095, !2096, !2097, !2098}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "pce_instance_tag", scope: !2083, file: !910, line: 212, baseType: !1012, size: 32, align: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_sgn", scope: !2083, file: !910, line: 213, baseType: !2087, size: 544, align: 32, offset: 32)
!2087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 544, align: 32, elements: !2088)
!2088 = !{!2089}
!2089 = !DISubrange(count: 17)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_ctl", scope: !2083, file: !910, line: 214, baseType: !2087, size: 544, align: 32, offset: 576)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_mask", scope: !2083, file: !910, line: 215, baseType: !2092, size: 2048, align: 32, offset: 1120)
!2092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 2048, align: 32, elements: !2093)
!2093 = !{!2094}
!2094 = !DISubrange(count: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "band_incr", scope: !2083, file: !910, line: 216, baseType: !1012, size: 32, align: 32, offset: 3168)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation_scheme", scope: !2083, file: !910, line: 217, baseType: !1012, size: 32, align: 32, offset: 3200)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "band_top", scope: !2083, file: !910, line: 218, baseType: !2087, size: 544, align: 32, offset: 3232)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ref_level", scope: !2083, file: !910, line: 219, baseType: !1012, size: 32, align: 32, offset: 3776)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "che", scope: !2074, file: !910, line: 305, baseType: !2100, size: 4096, align: 64, offset: 4032)
!2100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2101, size: 4096, align: 64, elements: !2523)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64, align: 64)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelElement", file: !910, line: 288, baseType: !2103)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelElement", file: !910, line: 275, size: 5199104, align: 256, elements: !2104)
!2104 = !{!2105, !2106, !2107, !2108, !2109, !2110, !2111, !2113, !2126}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2103, file: !910, line: 276, baseType: !1012, size: 32, align: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "common_window", scope: !2103, file: !910, line: 278, baseType: !1012, size: 32, align: 32, offset: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mode", scope: !2103, file: !910, line: 279, baseType: !1012, size: 32, align: 32, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "is_mode", scope: !2103, file: !910, line: 280, baseType: !1030, size: 8, align: 8, offset: 96)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mask", scope: !2103, file: !910, line: 281, baseType: !1993, size: 1024, align: 8, offset: 104)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "is_mask", scope: !2103, file: !910, line: 282, baseType: !1993, size: 1024, align: 8, offset: 1128)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !2103, file: !910, line: 284, baseType: !2112, size: 1662464, align: 256, offset: 2304)
!2112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1907, size: 1662464, align: 256, elements: !1868)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "coup", scope: !2103, file: !910, line: 286, baseType: !2114, size: 62272, align: 32, offset: 1664768)
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelCoupling", file: !910, line: 243, baseType: !2115)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelCoupling", file: !910, line: 234, size: 62272, align: 32, elements: !2116)
!2116 = !{!2117, !2118, !2119, !2121, !2122, !2123}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "coupling_point", scope: !2115, file: !910, line: 235, baseType: !925, size: 32, align: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "num_coupled", scope: !2115, file: !910, line: 236, baseType: !1012, size: 32, align: 32, offset: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2115, file: !910, line: 237, baseType: !2120, size: 256, align: 32, offset: 64)
!2120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !930, size: 256, align: 32, elements: !1044)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "id_select", scope: !2115, file: !910, line: 238, baseType: !1047, size: 256, align: 32, offset: 320)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "ch_select", scope: !2115, file: !910, line: 239, baseType: !1047, size: 256, align: 32, offset: 576)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2115, file: !910, line: 242, baseType: !2124, size: 61440, align: 32, offset: 832)
!2124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 61440, align: 32, elements: !2125)
!2125 = !{!1798, !1987}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2103, file: !910, line: 287, baseType: !2127, size: 3471872, align: 256, offset: 1727232)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectralBandReplication", file: !2073, line: 115, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectralBandReplication", file: !2073, line: 139, size: 3471872, align: 256, elements: !2129)
!2129 = !{!2130, !2131, !2132, !2133, !2134, !2135, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2154, !2156, !2157, !2158, !2159, !2231, !2346, !2347, !2348, !2349, !2353, !2357, !2358, !2360, !2364, !2365, !2367, !2368, !2371, !2374, !2377, !2380, !2381, !2384, !2385, !2387, !2388, !2389, !2390, !2391, !2394, !2438, !2439, !2492}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2128, file: !2073, line: 140, baseType: !1012, size: 32, align: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2128, file: !2073, line: 141, baseType: !1012, size: 32, align: 32, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ready_for_dequant", scope: !2128, file: !2073, line: 142, baseType: !1012, size: 32, align: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "id_aac", scope: !2128, file: !2073, line: 143, baseType: !1012, size: 32, align: 32, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2128, file: !2073, line: 144, baseType: !1012, size: 32, align: 32, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "spectrum_params", scope: !2128, file: !2073, line: 145, baseType: !2136, size: 48, align: 8, offset: 160)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectrumParameters", file: !2073, line: 55, baseType: !2137)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectrumParameters", file: !2073, line: 42, size: 48, align: 8, elements: !2138)
!2138 = !{!2139, !2140, !2141, !2142, !2143, !2144}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "bs_start_freq", scope: !2137, file: !2073, line: 43, baseType: !1030, size: 8, align: 8)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "bs_stop_freq", scope: !2137, file: !2073, line: 44, baseType: !1030, size: 8, align: 8, offset: 8)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "bs_xover_band", scope: !2137, file: !2073, line: 45, baseType: !1030, size: 8, align: 8, offset: 16)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_scale", scope: !2137, file: !2073, line: 51, baseType: !1030, size: 8, align: 8, offset: 24)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "bs_alter_scale", scope: !2137, file: !2073, line: 52, baseType: !1030, size: 8, align: 8, offset: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "bs_noise_bands", scope: !2137, file: !2073, line: 53, baseType: !1030, size: 8, align: 8, offset: 40)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res_header", scope: !2128, file: !2073, line: 146, baseType: !1012, size: 32, align: 32, offset: 224)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_bands", scope: !2128, file: !2073, line: 151, baseType: !1013, size: 32, align: 32, offset: 256)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_gains", scope: !2128, file: !2073, line: 152, baseType: !1013, size: 32, align: 32, offset: 288)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "bs_interpol_freq", scope: !2128, file: !2073, line: 153, baseType: !1013, size: 32, align: 32, offset: 320)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "bs_smoothing_mode", scope: !2128, file: !2073, line: 154, baseType: !1013, size: 32, align: 32, offset: 352)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "bs_coupling", scope: !2128, file: !2073, line: 156, baseType: !1013, size: 32, align: 32, offset: 384)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !2128, file: !2073, line: 157, baseType: !2152, size: 160, align: 32, offset: 416)
!2152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 160, align: 32, elements: !2153)
!2153 = !{!1887}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "kx", scope: !2128, file: !2073, line: 160, baseType: !2155, size: 64, align: 32, offset: 576)
!2155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 64, align: 32, elements: !1868)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2128, file: !2073, line: 162, baseType: !2155, size: 64, align: 32, offset: 640)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "kx_and_m_pushed", scope: !2128, file: !2073, line: 163, baseType: !1013, size: 32, align: 32, offset: 704)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "n_master", scope: !2128, file: !2073, line: 165, baseType: !1033, size: 32, align: 32, offset: 736)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2128, file: !2073, line: 166, baseType: !2160, size: 1684992, align: 256, offset: 768)
!2160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2161, size: 1684992, align: 256, elements: !1868)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRData", file: !2073, line: 113, baseType: !2162)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRData", file: !2073, line: 62, size: 842496, align: 256, elements: !2163)
!2163 = !{!2164, !2165, !2166, !2167, !2171, !2172, !2174, !2175, !2178, !2182, !2183, !2187, !2191, !2192, !2194, !2196, !2200, !2201, !2205, !2209, !2210, !2213, !2217, !2219, !2222, !2224, !2225, !2226, !2229, !2230}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "bs_frame_class", scope: !2162, file: !2073, line: 67, baseType: !1013, size: 32, align: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic_flag", scope: !2162, file: !2073, line: 68, baseType: !1013, size: 32, align: 32, offset: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_env", scope: !2162, file: !2073, line: 69, baseType: !1033, size: 32, align: 32, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_res", scope: !2162, file: !2073, line: 70, baseType: !2168, size: 56, align: 8, offset: 96)
!2168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 56, align: 8, elements: !2169)
!2169 = !{!2170}
!2170 = !DISubrange(count: 7)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_noise", scope: !2162, file: !2073, line: 71, baseType: !1033, size: 32, align: 32, offset: 160)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_env", scope: !2162, file: !2073, line: 72, baseType: !2173, size: 40, align: 8, offset: 192)
!2173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 40, align: 8, elements: !2153)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_noise", scope: !2162, file: !2073, line: 73, baseType: !1918, size: 16, align: 8, offset: 232)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "bs_invf_mode", scope: !2162, file: !2073, line: 74, baseType: !2176, size: 80, align: 8, offset: 248)
!2176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 80, align: 8, elements: !2177)
!2177 = !{!1813, !1887}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic", scope: !2162, file: !2073, line: 75, baseType: !2179, size: 384, align: 8, offset: 328)
!2179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 384, align: 8, elements: !2180)
!2180 = !{!2181}
!2181 = !DISubrange(count: 48)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res", scope: !2162, file: !2073, line: 76, baseType: !1013, size: 32, align: 32, offset: 736)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples", scope: !2162, file: !2073, line: 83, baseType: !2184, size: 73728, align: 32, offset: 768)
!2184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 73728, align: 32, elements: !2185)
!2185 = !{!2186}
!2186 = !DISubrange(count: 2304)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "analysis_filterbank_samples", scope: !2162, file: !2073, line: 84, baseType: !2188, size: 41984, align: 32, offset: 74496)
!2188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 41984, align: 32, elements: !2189)
!2189 = !{!2190}
!2190 = !DISubrange(count: 1312)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples_offset", scope: !2162, file: !2073, line: 85, baseType: !1012, size: 32, align: 32, offset: 116480)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "e_a", scope: !2162, file: !2073, line: 87, baseType: !2193, size: 64, align: 32, offset: 116512)
!2193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 64, align: 32, elements: !1868)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "bw_array", scope: !2162, file: !2073, line: 89, baseType: !2195, size: 160, align: 32, offset: 116576)
!2195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 160, align: 32, elements: !2153)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "W", scope: !2162, file: !2073, line: 91, baseType: !2197, size: 131072, align: 32, offset: 116736)
!2197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 131072, align: 32, elements: !2198)
!2198 = !{!1813, !2199, !2199, !1813}
!2199 = !DISubrange(count: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "Ypos", scope: !2162, file: !2073, line: 93, baseType: !1012, size: 32, align: 32, offset: 247808)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "Y", scope: !2162, file: !2073, line: 94, baseType: !2202, size: 311296, align: 32, offset: 247936)
!2202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 311296, align: 32, elements: !2203)
!2203 = !{!1813, !2204, !2094, !1813}
!2204 = !DISubrange(count: 38)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "g_temp", scope: !2162, file: !2073, line: 95, baseType: !2206, size: 129024, align: 32, offset: 559232)
!2206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 129024, align: 32, elements: !2207)
!2207 = !{!2208, !2181}
!2208 = !DISubrange(count: 42)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "q_temp", scope: !2162, file: !2073, line: 96, baseType: !2206, size: 129024, align: 32, offset: 688256)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "s_indexmapped", scope: !2162, file: !2073, line: 97, baseType: !2211, size: 3072, align: 8, offset: 817280)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 3072, align: 8, elements: !2212)
!2212 = !{!1045, !2181}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs_q", scope: !2162, file: !2073, line: 99, baseType: !2214, size: 2304, align: 8, offset: 820352)
!2214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 2304, align: 8, elements: !2215)
!2215 = !{!2216, !2181}
!2216 = !DISubrange(count: 6)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs", scope: !2162, file: !2073, line: 100, baseType: !2218, size: 18432, align: 32, offset: 822656)
!2218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 18432, align: 32, elements: !2215)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs_q", scope: !2162, file: !2073, line: 102, baseType: !2220, size: 120, align: 8, offset: 841088)
!2220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 120, align: 8, elements: !2221)
!2221 = !{!1888, !1887}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs", scope: !2162, file: !2073, line: 103, baseType: !2223, size: 960, align: 32, offset: 841216)
!2223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 960, align: 32, elements: !2221)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "t_env", scope: !2162, file: !2073, line: 105, baseType: !1921, size: 64, align: 8, offset: 842176)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "t_env_num_env_old", scope: !2162, file: !2073, line: 107, baseType: !1030, size: 8, align: 8, offset: 842240)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "t_q", scope: !2162, file: !2073, line: 109, baseType: !2227, size: 24, align: 8, offset: 842248)
!2227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 24, align: 8, elements: !2228)
!2228 = !{!1888}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexnoise", scope: !2162, file: !2073, line: 110, baseType: !1013, size: 32, align: 32, offset: 842272)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexsine", scope: !2162, file: !2073, line: 111, baseType: !1013, size: 32, align: 32, offset: 842304)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !2128, file: !2073, line: 167, baseType: !2232, size: 1072896, align: 128, offset: 1685760)
!2232 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSContext", file: !2233, line: 79, baseType: !2234)
!2233 = !DIFile(filename: "libavcodec/aacps.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSContext", file: !2233, line: 41, size: 1072896, align: 128, elements: !2235)
!2235 = !{!2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2252, !2256, !2257, !2258, !2259, !2260, !2261, !2265, !2270, !2275, !2278, !2279, !2280, !2283, !2284, !2285, !2286, !2289, !2290, !2292, !2293}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2234, file: !2233, line: 42, baseType: !1012, size: 32, align: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "enable_iid", scope: !2234, file: !2233, line: 43, baseType: !1012, size: 32, align: 32, offset: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "iid_quant", scope: !2234, file: !2233, line: 44, baseType: !1012, size: 32, align: 32, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "nr_iid_par", scope: !2234, file: !2233, line: 45, baseType: !1012, size: 32, align: 32, offset: 96)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ipdopd_par", scope: !2234, file: !2233, line: 46, baseType: !1012, size: 32, align: 32, offset: 128)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "enable_icc", scope: !2234, file: !2233, line: 47, baseType: !1012, size: 32, align: 32, offset: 160)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "icc_mode", scope: !2234, file: !2233, line: 48, baseType: !1012, size: 32, align: 32, offset: 192)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "nr_icc_par", scope: !2234, file: !2233, line: 49, baseType: !1012, size: 32, align: 32, offset: 224)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ext", scope: !2234, file: !2233, line: 50, baseType: !1012, size: 32, align: 32, offset: 256)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "frame_class", scope: !2234, file: !2233, line: 51, baseType: !1012, size: 32, align: 32, offset: 288)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "num_env_old", scope: !2234, file: !2233, line: 52, baseType: !1012, size: 32, align: 32, offset: 320)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "num_env", scope: !2234, file: !2233, line: 53, baseType: !1012, size: 32, align: 32, offset: 352)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ipdopd", scope: !2234, file: !2233, line: 54, baseType: !1012, size: 32, align: 32, offset: 384)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "border_position", scope: !2234, file: !2233, line: 55, baseType: !2250, size: 192, align: 32, offset: 416)
!2250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 192, align: 32, elements: !2251)
!2251 = !{!2216}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "iid_par", scope: !2234, file: !2233, line: 56, baseType: !2253, size: 1360, align: 8, offset: 608)
!2253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1126, size: 1360, align: 8, elements: !2254)
!2254 = !{!1887, !2255}
!2255 = !DISubrange(count: 34)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "icc_par", scope: !2234, file: !2233, line: 57, baseType: !2253, size: 1360, align: 8, offset: 1968)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_par", scope: !2234, file: !2233, line: 59, baseType: !2253, size: 1360, align: 8, offset: 3328)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "opd_par", scope: !2234, file: !2233, line: 60, baseType: !2253, size: 1360, align: 8, offset: 4688)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands", scope: !2234, file: !2233, line: 61, baseType: !1012, size: 32, align: 32, offset: 6048)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands_old", scope: !2234, file: !2233, line: 62, baseType: !1012, size: 32, align: 32, offset: 6080)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !2234, file: !2233, line: 64, baseType: !2262, size: 14080, align: 32, offset: 6144)
!2262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 14080, align: 32, elements: !2263)
!2263 = !{!1887, !2264, !1813}
!2264 = !DISubrange(count: 44)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !2234, file: !2233, line: 65, baseType: !2266, size: 267904, align: 32, offset: 20224)
!2266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 267904, align: 32, elements: !2267)
!2267 = !{!2268, !2269, !1813}
!2268 = !DISubrange(count: 91)
!2269 = !DISubrange(count: 46)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "ap_delay", scope: !2234, file: !2233, line: 66, baseType: !2271, size: 355200, align: 32, offset: 288128)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 355200, align: 32, elements: !2272)
!2272 = !{!2273, !1888, !2274, !1813}
!2273 = !DISubrange(count: 50)
!2274 = !DISubrange(count: 37)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_nrg", scope: !2234, file: !2233, line: 67, baseType: !2276, size: 1088, align: 32, offset: 643328)
!2276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 1088, align: 32, elements: !2277)
!2277 = !{!2255}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "power_smooth", scope: !2234, file: !2233, line: 68, baseType: !2276, size: 1088, align: 32, offset: 644480)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_diff_smooth", scope: !2234, file: !2233, line: 69, baseType: !2276, size: 1088, align: 32, offset: 645632)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "H11", scope: !2234, file: !2233, line: 70, baseType: !2281, size: 13056, align: 32, offset: 646784)
!2281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 13056, align: 32, elements: !2282)
!2282 = !{!1813, !2216, !2255}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "H12", scope: !2234, file: !2233, line: 71, baseType: !2281, size: 13056, align: 32, offset: 659840)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "H21", scope: !2234, file: !2233, line: 72, baseType: !2281, size: 13056, align: 32, offset: 672896)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "H22", scope: !2234, file: !2233, line: 73, baseType: !2281, size: 13056, align: 32, offset: 685952)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "Lbuf", scope: !2234, file: !2233, line: 74, baseType: !2287, size: 186368, align: 32, offset: 699008)
!2287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 186368, align: 32, elements: !2288)
!2288 = !{!2268, !2199, !1813}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "Rbuf", scope: !2234, file: !2233, line: 75, baseType: !2287, size: 186368, align: 32, offset: 885376)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "opd_hist", scope: !2234, file: !2233, line: 76, baseType: !2291, size: 272, align: 8, offset: 1071744)
!2291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1126, size: 272, align: 8, elements: !2277)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_hist", scope: !2234, file: !2233, line: 77, baseType: !2291, size: 272, align: 8, offset: 1072016)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !2234, file: !2233, line: 78, baseType: !2294, size: 512, align: 64, offset: 1072320)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSDSPContext", file: !2295, line: 52, baseType: !2296)
!2295 = !DIFile(filename: "libavcodec/aacpsdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSDSPContext", file: !2295, line: 32, size: 512, align: 64, elements: !2297)
!2297 = !{!2298, !2304, !2310, !2318, !2328, !2332, !2339}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "add_squares", scope: !2296, file: !2295, line: 33, baseType: !2299, size: 64, align: 64)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64, align: 64)
!2300 = !DISubroutineType(types: !2301)
!2301 = !{null, !1032, !2302, !1012}
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64, align: 64)
!2303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 64, align: 32, elements: !1868)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "mul_pair_single", scope: !2296, file: !2295, line: 34, baseType: !2305, size: 64, align: 64, offset: 64)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64, align: 64)
!2306 = !DISubroutineType(types: !2307)
!2307 = !{null, !2308, !2308, !1032, !1012}
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64, align: 64)
!2309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 64, align: 32, elements: !1868)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis", scope: !2296, file: !2295, line: 36, baseType: !2311, size: 64, align: 64, offset: 128)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64, align: 64)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{null, !2308, !2308, !2314, !2317, !1012}
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64, align: 64)
!2315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 512, align: 32, elements: !2316)
!2316 = !{!1045, !1813}
!2317 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1135, line: 149, baseType: !1016)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis_ileave", scope: !2296, file: !2295, line: 39, baseType: !2319, size: 64, align: 64, offset: 192)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64, align: 64)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{null, !2322, !2325, !1012, !1012}
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64, align: 64)
!2323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 2048, align: 32, elements: !2324)
!2324 = !{!2199, !1813}
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64, align: 64)
!2326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 77824, align: 32, elements: !2327)
!2327 = !{!2204, !2094}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_synthesis_deint", scope: !2296, file: !2295, line: 41, baseType: !2329, size: 64, align: 64, offset: 256)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 64, align: 64)
!2330 = !DISubroutineType(types: !2331)
!2331 = !{null, !2325, !2322, !1012, !1012}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "decorrelate", scope: !2296, file: !2295, line: 43, baseType: !2333, size: 64, align: 64, offset: 320)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64, align: 64)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{null, !2308, !2308, !2336, !1895, !2302, !1895, !1019, !1012}
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64, align: 64)
!2337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 2368, align: 32, elements: !2338)
!2338 = !{!2274, !1813}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_interpolate", scope: !2296, file: !2295, line: 49, baseType: !2340, size: 128, align: 64, offset: 384)
!2340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2341, size: 128, align: 64, elements: !1868)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64, align: 64)
!2342 = !DISubroutineType(types: !2343)
!2343 = !{null, !2308, !2308, !2344, !2344, !1012}
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64, align: 64)
!2345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 128, align: 32, elements: !1291)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2128, file: !2073, line: 169, baseType: !2155, size: 64, align: 32, offset: 2758656)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "n_q", scope: !2128, file: !2073, line: 171, baseType: !1033, size: 32, align: 32, offset: 2758720)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "n_lim", scope: !2128, file: !2073, line: 173, baseType: !1033, size: 32, align: 32, offset: 2758752)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "f_master", scope: !2128, file: !2073, line: 175, baseType: !2350, size: 784, align: 16, offset: 2758784)
!2350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1492, size: 784, align: 16, elements: !2351)
!2351 = !{!2352}
!2352 = !DISubrange(count: 49)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelow", scope: !2128, file: !2073, line: 177, baseType: !2354, size: 400, align: 16, offset: 2759568)
!2354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1492, size: 400, align: 16, elements: !2355)
!2355 = !{!2356}
!2356 = !DISubrange(count: 25)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablehigh", scope: !2128, file: !2073, line: 179, baseType: !2350, size: 784, align: 16, offset: 2759968)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablenoise", scope: !2128, file: !2073, line: 181, baseType: !2359, size: 96, align: 16, offset: 2760752)
!2359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1492, size: 96, align: 16, elements: !2251)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelim", scope: !2128, file: !2073, line: 183, baseType: !2361, size: 480, align: 16, offset: 2760848)
!2361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1492, size: 480, align: 16, elements: !2362)
!2362 = !{!2363}
!2363 = !DISubrange(count: 30)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "num_patches", scope: !2128, file: !2073, line: 184, baseType: !1033, size: 32, align: 32, offset: 2761344)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "patch_num_subbands", scope: !2128, file: !2073, line: 185, baseType: !2366, size: 48, align: 8, offset: 2761376)
!2366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 48, align: 8, elements: !2251)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "patch_start_subband", scope: !2128, file: !2073, line: 186, baseType: !2366, size: 48, align: 8, offset: 2761424)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "X_low", scope: !2128, file: !2073, line: 188, baseType: !2369, size: 81920, align: 32, offset: 2761472)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 81920, align: 32, elements: !2370)
!2370 = !{!2199, !1933, !1813}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "X_high", scope: !2128, file: !2073, line: 190, baseType: !2372, size: 163840, align: 32, offset: 2843392)
!2372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 163840, align: 32, elements: !2373)
!2373 = !{!2094, !1933, !1813}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "X", scope: !2128, file: !2073, line: 192, baseType: !2375, size: 311296, align: 32, offset: 3007232)
!2375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 311296, align: 32, elements: !2376)
!2376 = !{!1813, !1813, !2204, !2094}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "alpha0", scope: !2128, file: !2073, line: 194, baseType: !2378, size: 4096, align: 32, offset: 3318528)
!2378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 4096, align: 32, elements: !2379)
!2379 = !{!2094, !1813}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "alpha1", scope: !2128, file: !2073, line: 196, baseType: !2378, size: 4096, align: 32, offset: 3322624)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "e_origmapped", scope: !2128, file: !2073, line: 198, baseType: !2382, size: 21504, align: 32, offset: 3326720)
!2382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 21504, align: 32, elements: !2383)
!2383 = !{!2170, !2181}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "q_mapped", scope: !2128, file: !2073, line: 200, baseType: !2382, size: 21504, align: 32, offset: 3348224)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "s_mapped", scope: !2128, file: !2073, line: 202, baseType: !2386, size: 2688, align: 8, offset: 3369728)
!2386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 2688, align: 8, elements: !2383)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "e_curr", scope: !2128, file: !2073, line: 204, baseType: !2382, size: 21504, align: 32, offset: 3372416)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "q_m", scope: !2128, file: !2073, line: 206, baseType: !2382, size: 21504, align: 32, offset: 3393920)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "s_m", scope: !2128, file: !2073, line: 208, baseType: !2382, size: 21504, align: 32, offset: 3415424)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2128, file: !2073, line: 209, baseType: !2382, size: 21504, align: 32, offset: 3436928)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_filter_scratch", scope: !2128, file: !2073, line: 210, baseType: !2392, size: 10240, align: 32, offset: 3458560)
!2392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 10240, align: 32, elements: !2393)
!2393 = !{!1887, !2094}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ana", scope: !2128, file: !2073, line: 211, baseType: !2395, size: 896, align: 64, offset: 3468800)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !941, line: 67, baseType: !2396)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !941, line: 88, size: 896, align: 64, elements: !2397)
!2397 = !{!2398, !2399, !2400, !2401, !2409, !2410, !2411, !2413, !2414, !2419, !2420, !2426, !2427, !2428, !2434, !2435, !2436}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !2396, file: !941, line: 89, baseType: !1012, size: 32, align: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !2396, file: !941, line: 90, baseType: !1012, size: 32, align: 32, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !2396, file: !941, line: 91, baseType: !1491, size: 64, align: 64, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !2396, file: !941, line: 92, baseType: !2402, size: 64, align: 64, offset: 128)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64, align: 64)
!2403 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !941, line: 64, baseType: !2404)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !941, line: 62, size: 64, align: 32, elements: !2405)
!2405 = !{!2406, !2408}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !2404, file: !941, line: 63, baseType: !2407, size: 32, align: 32)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !941, line: 52, baseType: !1036)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !2404, file: !941, line: 63, baseType: !2407, size: 32, align: 32, offset: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !2396, file: !941, line: 93, baseType: !1012, size: 32, align: 32, offset: 192)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !2396, file: !941, line: 94, baseType: !1012, size: 32, align: 32, offset: 224)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !2396, file: !941, line: 96, baseType: !2412, size: 64, align: 64, offset: 256)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64, align: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !2396, file: !941, line: 97, baseType: !2412, size: 64, align: 64, offset: 320)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !2396, file: !941, line: 101, baseType: !2415, size: 64, align: 64, offset: 384)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64, align: 64)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{null, !2418, !2402}
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64, align: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !2396, file: !941, line: 106, baseType: !2415, size: 64, align: 64, offset: 448)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !2396, file: !941, line: 107, baseType: !2421, size: 64, align: 64, offset: 512)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64, align: 64)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{null, !2418, !2412, !2424}
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64, align: 64)
!2425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2407)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !2396, file: !941, line: 108, baseType: !2421, size: 64, align: 64, offset: 576)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !2396, file: !941, line: 109, baseType: !2421, size: 64, align: 64, offset: 640)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !2396, file: !941, line: 110, baseType: !2429, size: 64, align: 64, offset: 704)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64, align: 64)
!2430 = !DISubroutineType(types: !2431)
!2431 = !{null, !2418, !2432, !2424}
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64, align: 64)
!2433 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !941, line: 66, baseType: !1012)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !2396, file: !941, line: 111, baseType: !940, size: 32, align: 32, offset: 768)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !2396, file: !941, line: 112, baseType: !946, size: 32, align: 32, offset: 800)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !2396, file: !941, line: 113, baseType: !2437, size: 64, align: 64, offset: 832)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64, align: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !2128, file: !2073, line: 212, baseType: !2395, size: 896, align: 64, offset: 3469696)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !2128, file: !2073, line: 213, baseType: !2440, size: 896, align: 64, offset: 3470592)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRDSPContext", file: !2441, line: 45, baseType: !2442)
!2441 = !DIFile(filename: "libavcodec/sbrdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRDSPContext", file: !2441, line: 28, size: 896, align: 64, elements: !2443)
!2443 = !{!2444, !2448, !2452, !2453, !2454, !2458, !2462, !2466, !2473, !2477, !2487}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "sum64x5", scope: !2442, file: !2441, line: 29, baseType: !2445, size: 64, align: 64)
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 64, align: 64)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{null, !1032}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "sum_square", scope: !2442, file: !2441, line: 30, baseType: !2449, size: 64, align: 64, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64, align: 64)
!2450 = !DISubroutineType(types: !2451)
!2451 = !{!2017, !2308, !1012}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "neg_odd_64", scope: !2442, file: !2441, line: 31, baseType: !2445, size: 64, align: 64, offset: 128)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_pre_shuffle", scope: !2442, file: !2441, line: 32, baseType: !2445, size: 64, align: 64, offset: 192)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_post_shuffle", scope: !2442, file: !2441, line: 33, baseType: !2455, size: 64, align: 64, offset: 256)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64, align: 64)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{null, !2308, !1895}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_neg", scope: !2442, file: !2441, line: 34, baseType: !2459, size: 64, align: 64, offset: 320)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64, align: 64)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{null, !1032, !1895}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_bfly", scope: !2442, file: !2441, line: 35, baseType: !2463, size: 64, align: 64, offset: 384)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64, align: 64)
!2464 = !DISubroutineType(types: !2465)
!2465 = !{null, !1032, !1895, !1895}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "autocorrelate", scope: !2442, file: !2441, line: 36, baseType: !2467, size: 64, align: 64, offset: 448)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64, align: 64)
!2468 = !DISubroutineType(types: !2469)
!2469 = !{null, !2302, !2470}
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64, align: 64)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 256, align: 32, elements: !2472)
!2472 = !{!1813, !1813}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "hf_gen", scope: !2442, file: !2441, line: 37, baseType: !2474, size: 64, align: 64, offset: 512)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64, align: 64)
!2475 = !DISubroutineType(types: !2476)
!2476 = !{null, !2308, !2302, !1895, !1895, !1019, !1012, !1012}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "hf_g_filt", scope: !2442, file: !2441, line: 40, baseType: !2478, size: 64, align: 64, offset: 576)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64, align: 64)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{null, !2308, !2481, !2484, !1012, !2486}
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64, align: 64)
!2482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 2560, align: 32, elements: !2483)
!2483 = !{!1933, !1813}
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64, align: 64)
!2485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2017)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !1015, line: 119, baseType: !1016)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "hf_apply_noise", scope: !2442, file: !2441, line: 42, baseType: !2488, size: 256, align: 64, offset: 640)
!2488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2489, size: 256, align: 64, elements: !1291)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64, align: 64)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{null, !2308, !2484, !2484, !1012, !1012, !1012}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2128, file: !2073, line: 214, baseType: !2493, size: 256, align: 64, offset: 3471488)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACSBRContext", file: !2073, line: 134, baseType: !2494)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACSBRContext", file: !2073, line: 120, size: 256, align: 64, elements: !2495)
!2495 = !{!2496, !2506, !2512, !2518}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_lf_gen", scope: !2494, file: !2073, line: 121, baseType: !2497, size: 64, align: 64)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64, align: 64)
!2498 = !DISubroutineType(types: !2499)
!2499 = !{!1012, !2071, !2500, !2501, !2503, !1012}
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64, align: 64)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64, align: 64)
!2502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 2560, align: 32, elements: !2483)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64, align: 64)
!2504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 65536, align: 32, elements: !2505)
!2505 = !{!2199, !2199, !1813}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_assemble", scope: !2494, file: !2073, line: 124, baseType: !2507, size: 64, align: 64, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64, align: 64)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{null, !2510, !2481, !2500, !2511, !1161}
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64, align: 64)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64, align: 64)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_x_gen", scope: !2494, file: !2073, line: 128, baseType: !2513, size: 64, align: 64, offset: 128)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64, align: 64)
!2514 = !DISubroutineType(types: !2515)
!2515 = !{!1012, !2500, !2325, !2516, !2516, !2481, !1012}
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64, align: 64)
!2517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 4096, align: 32, elements: !2379)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_inverse_filter", scope: !2494, file: !2073, line: 131, baseType: !2519, size: 64, align: 64, offset: 192)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64, align: 64)
!2520 = !DISubroutineType(types: !2521)
!2521 = !{null, !2522, !2308, !2308, !2481, !1012}
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64, align: 64)
!2523 = !{!1292, !1798}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "tag_che_map", scope: !2074, file: !910, line: 306, baseType: !2100, size: 4096, align: 64, offset: 8128)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "tags_mapped", scope: !2074, file: !910, line: 307, baseType: !1012, size: 32, align: 32, offset: 12224)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "warned_remapping_once", scope: !2074, file: !910, line: 308, baseType: !1012, size: 32, align: 32, offset: 12256)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mdct", scope: !2074, file: !910, line: 316, baseType: !1999, size: 32768, align: 32, offset: 12288)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !2074, file: !910, line: 323, baseType: !2395, size: 896, align: 64, offset: 45056)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_small", scope: !2074, file: !910, line: 324, baseType: !2395, size: 896, align: 64, offset: 45952)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ld", scope: !2074, file: !910, line: 325, baseType: !2395, size: 896, align: 64, offset: 46848)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ltp", scope: !2074, file: !910, line: 326, baseType: !2395, size: 896, align: 64, offset: 47744)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !2074, file: !910, line: 328, baseType: !2533, size: 64, align: 64, offset: 48640)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64, align: 64)
!2534 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFixedDSPContext", file: !2535, line: 154, baseType: !2536)
!2535 = !DIFile(filename: "./libavutil/fixed_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFixedDSPContext", file: !2535, line: 56, size: 448, align: 64, elements: !2537)
!2537 = !{!2538, !2545, !2550, !2554, !2555, !2559, !2563}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window_scaled", scope: !2536, file: !2535, line: 80, baseType: !2539, size: 64, align: 64)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64, align: 64)
!2540 = !DISubroutineType(types: !2541)
!2541 = !{null, !2542, !2543, !2543, !2543, !1012, !1030}
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64, align: 64)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64, align: 64)
!2544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1036)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !2536, file: !2535, line: 98, baseType: !2546, size: 64, align: 64, offset: 64)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64, align: 64)
!2547 = !DISubroutineType(types: !2548)
!2548 = !{null, !2549, !2543, !2543, !2543, !1012}
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64, align: 64)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !2536, file: !2535, line: 113, baseType: !2551, size: 64, align: 64, offset: 128)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64, align: 64)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{null, !1454, !1161, !1161, !1012}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !2536, file: !2535, line: 116, baseType: !2551, size: 64, align: 64, offset: 192)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !2536, file: !2535, line: 132, baseType: !2556, size: 64, align: 64, offset: 256)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 64, align: 64)
!2557 = !DISubroutineType(types: !2558)
!2558 = !{null, !1454, !1161, !1161, !1161, !1012}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_fixed", scope: !2536, file: !2535, line: 144, baseType: !2560, size: 64, align: 64, offset: 320)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64, align: 64)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!1012, !1161, !1161, !1012}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_fixed", scope: !2536, file: !2535, line: 153, baseType: !2564, size: 64, align: 64, offset: 384)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 64, align: 64)
!2565 = !DISubroutineType(types: !2566)
!2566 = !{null, !2567, !2567, !1012}
!2567 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1454)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "random_state", scope: !2074, file: !910, line: 335, baseType: !1012, size: 32, align: 32, offset: 48704)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "output_element", scope: !2074, file: !910, line: 342, baseType: !2570, size: 4096, align: 64, offset: 48768)
!2570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1906, size: 4096, align: 64, elements: !2093)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "force_dmono_mode", scope: !2074, file: !910, line: 350, baseType: !1012, size: 32, align: 32, offset: 52864)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "dmono_mode", scope: !2074, file: !910, line: 351, baseType: !1012, size: 32, align: 32, offset: 52896)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2074, file: !910, line: 354, baseType: !2574, size: 4096, align: 32, offset: 52992)
!2574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 4096, align: 32, elements: !1981)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "oc", scope: !2074, file: !910, line: 356, baseType: !2576, size: 4224, align: 64, offset: 57088)
!2576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2577, size: 4224, align: 64, elements: !1868)
!2577 = !DIDerivedType(tag: DW_TAG_typedef, name: "OutputConfiguration", file: !910, line: 130, baseType: !2578)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OutputConfiguration", file: !910, line: 123, size: 2112, align: 64, elements: !2579)
!2579 = !{!2580, !2596, !2599, !2600, !2601, !2602}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "m4ac", scope: !2578, file: !910, line: 124, baseType: !2581, size: 384, align: 32)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPEG4AudioConfig", file: !958, line: 46, baseType: !2582)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPEG4AudioConfig", file: !958, line: 33, size: 384, align: 32, elements: !2583)
!2583 = !{!2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "object_type", scope: !2582, file: !958, line: 34, baseType: !1012, size: 32, align: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_index", scope: !2582, file: !958, line: 35, baseType: !1012, size: 32, align: 32, offset: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2582, file: !958, line: 36, baseType: !1012, size: 32, align: 32, offset: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !2582, file: !958, line: 37, baseType: !1012, size: 32, align: 32, offset: 96)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2582, file: !958, line: 38, baseType: !1012, size: 32, align: 32, offset: 128)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "ext_object_type", scope: !2582, file: !958, line: 39, baseType: !1012, size: 32, align: 32, offset: 160)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sampling_index", scope: !2582, file: !958, line: 40, baseType: !1012, size: 32, align: 32, offset: 192)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sample_rate", scope: !2582, file: !958, line: 41, baseType: !1012, size: 32, align: 32, offset: 224)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ext_chan_config", scope: !2582, file: !958, line: 42, baseType: !1012, size: 32, align: 32, offset: 256)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2582, file: !958, line: 43, baseType: !1012, size: 32, align: 32, offset: 288)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !2582, file: !958, line: 44, baseType: !1012, size: 32, align: 32, offset: 320)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length_short", scope: !2582, file: !958, line: 45, baseType: !1012, size: 32, align: 32, offset: 352)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map", scope: !2578, file: !910, line: 125, baseType: !2597, size: 1536, align: 8, offset: 384)
!2597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 1536, align: 8, elements: !2598)
!2598 = !{!2094, !1888}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map_tags", scope: !2578, file: !910, line: 126, baseType: !1012, size: 32, align: 32, offset: 1920)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2578, file: !910, line: 127, baseType: !1012, size: 32, align: 32, offset: 1952)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !2578, file: !910, line: 128, baseType: !1034, size: 64, align: 64, offset: 1984)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2578, file: !910, line: 129, baseType: !950, size: 32, align: 32, offset: 2048)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "warned_num_aac_frames", scope: !2074, file: !910, line: 357, baseType: !1012, size: 32, align: 32, offset: 61312)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "warned_960_sbr", scope: !2074, file: !910, line: 358, baseType: !1012, size: 32, align: 32, offset: 61344)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "warned_gain_control", scope: !2074, file: !910, line: 360, baseType: !1012, size: 32, align: 32, offset: 61376)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_and_windowing", scope: !2074, file: !910, line: 363, baseType: !2607, size: 64, align: 64, offset: 61440)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64, align: 64)
!2608 = !DISubroutineType(types: !2609)
!2609 = !{null, !2071, !1906}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "apply_ltp", scope: !2074, file: !910, line: 364, baseType: !2607, size: 64, align: 64, offset: 61504)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "apply_tns", scope: !2074, file: !910, line: 365, baseType: !2612, size: 64, align: 64, offset: 61568)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64, align: 64)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{null, !1032, !2615, !2616, !1012}
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64, align: 64)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64, align: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "windowing_and_mdct_ltp", scope: !2074, file: !910, line: 367, baseType: !2618, size: 64, align: 64, offset: 61632)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64, align: 64)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{null, !2071, !1032, !1032, !2616}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "update_ltp", scope: !2074, file: !910, line: 369, baseType: !2607, size: 64, align: 64, offset: 61696)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "vector_pow43", scope: !2074, file: !910, line: 370, baseType: !2623, size: 64, align: 64, offset: 61760)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64, align: 64)
!2624 = !DISubroutineType(types: !2625)
!2625 = !{null, !1454, !1012}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "subband_scale", scope: !2074, file: !910, line: 371, baseType: !2627, size: 64, align: 64, offset: 61824)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64, align: 64)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{null, !1454, !1454, !1012, !1012, !1012, !1022}
!2630 = !DILocation(line: 1157, column: 17, scope: !2066)
!2631 = !DILocation(line: 1157, column: 22, scope: !2066)
!2632 = !DILocation(line: 1157, column: 29, scope: !2066)
!2633 = !DILocalVariable(name: "ret", scope: !2066, file: !1800, line: 1158, type: !1012)
!2634 = !DILocation(line: 1158, column: 9, scope: !2066)
!2635 = !DILocation(line: 1160, column: 11, scope: !2066)
!2636 = !DILocation(line: 1160, column: 9, scope: !2066)
!2637 = !DILocation(line: 1161, column: 9, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2066, file: !1800, line: 1161, column: 9)
!2639 = !DILocation(line: 1161, column: 13, scope: !2638)
!2640 = !DILocation(line: 1161, column: 9, scope: !2066)
!2641 = !DILocation(line: 1162, column: 9, scope: !2638)
!2642 = !DILocation(line: 1164, column: 17, scope: !2066)
!2643 = !DILocation(line: 1164, column: 5, scope: !2066)
!2644 = !DILocation(line: 1164, column: 9, scope: !2066)
!2645 = !DILocation(line: 1164, column: 15, scope: !2066)
!2646 = !DILocation(line: 1165, column: 34, scope: !2066)
!2647 = !DILocation(line: 1165, column: 41, scope: !2066)
!2648 = !DILocation(line: 1165, column: 5, scope: !2066)
!2649 = !DILocation(line: 1165, column: 9, scope: !2066)
!2650 = !DILocation(line: 1165, column: 15, scope: !2066)
!2651 = !DILocation(line: 1165, column: 20, scope: !2066)
!2652 = !DILocation(line: 1165, column: 32, scope: !2066)
!2653 = !DILocation(line: 1167, column: 17, scope: !2066)
!2654 = !DILocation(line: 1167, column: 5, scope: !2066)
!2655 = !DILocation(line: 1169, column: 5, scope: !2066)
!2656 = !DILocation(line: 1169, column: 12, scope: !2066)
!2657 = !DILocation(line: 1169, column: 23, scope: !2066)
!2658 = !DILocation(line: 1174, column: 9, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2066, file: !1800, line: 1174, column: 9)
!2660 = !DILocation(line: 1174, column: 16, scope: !2659)
!2661 = !DILocation(line: 1174, column: 31, scope: !2659)
!2662 = !DILocation(line: 1174, column: 9, scope: !2066)
!2663 = !DILocation(line: 1175, column: 49, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2665, file: !1800, line: 1175, column: 13)
!2665 = distinct !DILexicalBlock(scope: !2659, file: !1800, line: 1174, column: 36)
!2666 = !DILocation(line: 1175, column: 53, scope: !2664)
!2667 = !DILocation(line: 1175, column: 57, scope: !2664)
!2668 = !DILocation(line: 1175, column: 65, scope: !2664)
!2669 = !DILocation(line: 1175, column: 69, scope: !2664)
!2670 = !DILocation(line: 1175, column: 75, scope: !2664)
!2671 = !DILocation(line: 1176, column: 49, scope: !2664)
!2672 = !DILocation(line: 1176, column: 56, scope: !2664)
!2673 = !DILocation(line: 1177, column: 49, scope: !2664)
!2674 = !DILocation(line: 1177, column: 56, scope: !2664)
!2675 = !DILocation(line: 1177, column: 71, scope: !2664)
!2676 = !DILocation(line: 1175, column: 20, scope: !2664)
!2677 = !DILocation(line: 1175, column: 18, scope: !2664)
!2678 = !DILocation(line: 1178, column: 53, scope: !2664)
!2679 = !DILocation(line: 1175, column: 13, scope: !2665)
!2680 = !DILocation(line: 1179, column: 20, scope: !2664)
!2681 = !DILocation(line: 1179, column: 13, scope: !2664)
!2682 = !DILocation(line: 1180, column: 5, scope: !2665)
!2683 = !DILocalVariable(name: "sr", scope: !2684, file: !1800, line: 1181, type: !1012)
!2684 = distinct !DILexicalBlock(scope: !2659, file: !1800, line: 1180, column: 12)
!2685 = !DILocation(line: 1181, column: 13, scope: !2684)
!2686 = !DILocalVariable(name: "i", scope: !2684, file: !1800, line: 1181, type: !1012)
!2687 = !DILocation(line: 1181, column: 17, scope: !2684)
!2688 = !DILocalVariable(name: "layout_map", scope: !2684, file: !1800, line: 1182, type: !2597)
!2689 = !DILocation(line: 1182, column: 17, scope: !2684)
!2690 = !DILocalVariable(name: "layout_map_tags", scope: !2684, file: !1800, line: 1183, type: !1012)
!2691 = !DILocation(line: 1183, column: 13, scope: !2684)
!2692 = !DILocation(line: 1185, column: 30, scope: !2684)
!2693 = !DILocation(line: 1185, column: 37, scope: !2684)
!2694 = !DILocation(line: 1185, column: 14, scope: !2684)
!2695 = !DILocation(line: 1185, column: 12, scope: !2684)
!2696 = !DILocation(line: 1186, column: 41, scope: !2684)
!2697 = !DILocation(line: 1186, column: 9, scope: !2684)
!2698 = !DILocation(line: 1186, column: 13, scope: !2684)
!2699 = !DILocation(line: 1186, column: 19, scope: !2684)
!2700 = !DILocation(line: 1186, column: 24, scope: !2684)
!2701 = !DILocation(line: 1186, column: 39, scope: !2684)
!2702 = !DILocation(line: 1187, column: 35, scope: !2684)
!2703 = !DILocation(line: 1187, column: 42, scope: !2684)
!2704 = !DILocation(line: 1187, column: 9, scope: !2684)
!2705 = !DILocation(line: 1187, column: 13, scope: !2684)
!2706 = !DILocation(line: 1187, column: 19, scope: !2684)
!2707 = !DILocation(line: 1187, column: 24, scope: !2684)
!2708 = !DILocation(line: 1187, column: 33, scope: !2684)
!2709 = !DILocation(line: 1188, column: 9, scope: !2684)
!2710 = !DILocation(line: 1188, column: 13, scope: !2684)
!2711 = !DILocation(line: 1188, column: 19, scope: !2684)
!2712 = !DILocation(line: 1188, column: 24, scope: !2684)
!2713 = !DILocation(line: 1188, column: 28, scope: !2684)
!2714 = !DILocation(line: 1189, column: 9, scope: !2684)
!2715 = !DILocation(line: 1189, column: 13, scope: !2684)
!2716 = !DILocation(line: 1189, column: 19, scope: !2684)
!2717 = !DILocation(line: 1189, column: 24, scope: !2684)
!2718 = !DILocation(line: 1189, column: 27, scope: !2684)
!2719 = !DILocation(line: 1191, column: 16, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2684, file: !1800, line: 1191, column: 9)
!2721 = !DILocation(line: 1191, column: 14, scope: !2720)
!2722 = !DILocation(line: 1191, column: 21, scope: !2723)
!2723 = !DILexicalBlockFile(scope: !2724, file: !1800, discriminator: 1)
!2724 = distinct !DILexicalBlock(scope: !2720, file: !1800, line: 1191, column: 9)
!2725 = !DILocation(line: 1191, column: 23, scope: !2723)
!2726 = !DILocation(line: 1191, column: 9, scope: !2723)
!2727 = !DILocation(line: 1192, column: 40, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2724, file: !1800, line: 1192, column: 17)
!2729 = !DILocation(line: 1192, column: 17, scope: !2728)
!2730 = !DILocation(line: 1192, column: 46, scope: !2728)
!2731 = !DILocation(line: 1192, column: 53, scope: !2728)
!2732 = !DILocation(line: 1192, column: 43, scope: !2728)
!2733 = !DILocation(line: 1192, column: 17, scope: !2724)
!2734 = !DILocation(line: 1193, column: 17, scope: !2728)
!2735 = !DILocation(line: 1192, column: 53, scope: !2736)
!2736 = !DILexicalBlockFile(scope: !2728, file: !1800, discriminator: 1)
!2737 = !DILocation(line: 1191, column: 98, scope: !2738)
!2738 = !DILexicalBlockFile(scope: !2724, file: !1800, discriminator: 2)
!2739 = !DILocation(line: 1191, column: 9, scope: !2738)
!2740 = distinct !{!2740, !2741}
!2741 = !DILocation(line: 1191, column: 9, scope: !2684)
!2742 = !DILocation(line: 1194, column: 13, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2684, file: !1800, line: 1194, column: 13)
!2744 = !DILocation(line: 1194, column: 15, scope: !2743)
!2745 = !DILocation(line: 1194, column: 13, scope: !2684)
!2746 = !DILocation(line: 1195, column: 15, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2743, file: !1800, line: 1194, column: 90)
!2748 = !DILocation(line: 1196, column: 9, scope: !2747)
!2749 = !DILocation(line: 1197, column: 38, scope: !2684)
!2750 = !DILocation(line: 1197, column: 9, scope: !2684)
!2751 = !DILocation(line: 1197, column: 13, scope: !2684)
!2752 = !DILocation(line: 1197, column: 19, scope: !2684)
!2753 = !DILocation(line: 1197, column: 24, scope: !2684)
!2754 = !DILocation(line: 1197, column: 36, scope: !2684)
!2755 = !DILocation(line: 1199, column: 13, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2684, file: !1800, line: 1199, column: 13)
!2757 = !DILocation(line: 1199, column: 17, scope: !2756)
!2758 = !DILocation(line: 1199, column: 23, scope: !2756)
!2759 = !DILocation(line: 1199, column: 28, scope: !2756)
!2760 = !DILocation(line: 1199, column: 13, scope: !2684)
!2761 = !DILocalVariable(name: "ret", scope: !2762, file: !1800, line: 1200, type: !1012)
!2762 = distinct !DILexicalBlock(scope: !2756, file: !1800, line: 1199, column: 41)
!2763 = !DILocation(line: 1200, column: 17, scope: !2762)
!2764 = !DILocation(line: 1200, column: 50, scope: !2762)
!2765 = !DILocation(line: 1200, column: 57, scope: !2762)
!2766 = !DILocation(line: 1201, column: 35, scope: !2762)
!2767 = !DILocation(line: 1201, column: 39, scope: !2762)
!2768 = !DILocation(line: 1201, column: 45, scope: !2762)
!2769 = !DILocation(line: 1201, column: 50, scope: !2762)
!2770 = !DILocation(line: 1200, column: 23, scope: !2762)
!2771 = !DILocation(line: 1202, column: 18, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2762, file: !1800, line: 1202, column: 17)
!2773 = !DILocation(line: 1202, column: 17, scope: !2762)
!2774 = !DILocation(line: 1203, column: 34, scope: !2772)
!2775 = !DILocation(line: 1203, column: 38, scope: !2772)
!2776 = !DILocation(line: 1203, column: 50, scope: !2772)
!2777 = !DILocation(line: 1203, column: 17, scope: !2772)
!2778 = !DILocation(line: 1205, column: 22, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2772, file: !1800, line: 1205, column: 22)
!2780 = !DILocation(line: 1205, column: 29, scope: !2779)
!2781 = !DILocation(line: 1205, column: 45, scope: !2779)
!2782 = !DILocation(line: 1205, column: 22, scope: !2772)
!2783 = !DILocation(line: 1206, column: 17, scope: !2779)
!2784 = !DILocation(line: 1207, column: 9, scope: !2762)
!2785 = !DILocation(line: 1210, column: 9, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2066, file: !1800, line: 1210, column: 9)
!2787 = !DILocation(line: 1210, column: 16, scope: !2786)
!2788 = !DILocation(line: 1210, column: 25, scope: !2786)
!2789 = !DILocation(line: 1210, column: 9, scope: !2066)
!2790 = !DILocation(line: 1211, column: 16, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2786, file: !1800, line: 1210, column: 31)
!2792 = !DILocation(line: 1211, column: 9, scope: !2791)
!2793 = !DILocation(line: 1212, column: 9, scope: !2791)
!2794 = !DILocation(line: 1216, column: 39, scope: !2066)
!2795 = !DILocation(line: 1216, column: 46, scope: !2066)
!2796 = !DILocation(line: 1216, column: 52, scope: !2066)
!2797 = !DILocation(line: 1216, column: 16, scope: !2066)
!2798 = !DILocation(line: 1216, column: 5, scope: !2066)
!2799 = !DILocation(line: 1216, column: 9, scope: !2066)
!2800 = !DILocation(line: 1216, column: 14, scope: !2066)
!2801 = !DILocation(line: 1220, column: 10, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2066, file: !1800, line: 1220, column: 9)
!2803 = !DILocation(line: 1220, column: 14, scope: !2802)
!2804 = !DILocation(line: 1220, column: 9, scope: !2066)
!2805 = !DILocation(line: 1221, column: 9, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2802, file: !1800, line: 1220, column: 20)
!2807 = !DILocation(line: 1224, column: 5, scope: !2066)
!2808 = !DILocation(line: 1224, column: 9, scope: !2066)
!2809 = !DILocation(line: 1224, column: 22, scope: !2066)
!2810 = !DILocation(line: 1226, column: 28, scope: !2066)
!2811 = !DILocation(line: 1226, column: 32, scope: !2066)
!2812 = !DILocation(line: 1226, column: 5, scope: !2066)
!2813 = !DILocation(line: 1227, column: 28, scope: !2066)
!2814 = !DILocation(line: 1227, column: 32, scope: !2066)
!2815 = !DILocation(line: 1227, column: 5, scope: !2066)
!2816 = !DILocation(line: 1228, column: 28, scope: !2066)
!2817 = !DILocation(line: 1228, column: 32, scope: !2066)
!2818 = !DILocation(line: 1228, column: 5, scope: !2066)
!2819 = !DILocation(line: 1229, column: 28, scope: !2066)
!2820 = !DILocation(line: 1229, column: 32, scope: !2066)
!2821 = !DILocation(line: 1229, column: 5, scope: !2066)
!2822 = !DILocation(line: 1242, column: 5, scope: !2066)
!2823 = !DILocation(line: 1243, column: 1, scope: !2066)
!2824 = distinct !DISubprogram(name: "aac_decode_frame", scope: !1800, file: !1800, line: 3320, type: !1771, isLocal: true, isDefinition: true, scopeLine: 3322, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!2825 = !DILocalVariable(name: "avctx", arg: 1, scope: !2824, file: !1800, line: 3320, type: !1259)
!2826 = !DILocation(line: 3320, column: 45, scope: !2824)
!2827 = !DILocalVariable(name: "data", arg: 2, scope: !2824, file: !1800, line: 3320, type: !1022)
!2828 = !DILocation(line: 3320, column: 58, scope: !2824)
!2829 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2824, file: !1800, line: 3321, type: !1454)
!2830 = !DILocation(line: 3321, column: 34, scope: !2824)
!2831 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2824, file: !1800, line: 3321, type: !1308)
!2832 = !DILocation(line: 3321, column: 59, scope: !2824)
!2833 = !DILocalVariable(name: "ac", scope: !2824, file: !1800, line: 3323, type: !2071)
!2834 = !DILocation(line: 3323, column: 17, scope: !2824)
!2835 = !DILocation(line: 3323, column: 22, scope: !2824)
!2836 = !DILocation(line: 3323, column: 29, scope: !2824)
!2837 = !DILocalVariable(name: "buf", scope: !2824, file: !1800, line: 3324, type: !1605)
!2838 = !DILocation(line: 3324, column: 20, scope: !2824)
!2839 = !DILocation(line: 3324, column: 26, scope: !2824)
!2840 = !DILocation(line: 3324, column: 33, scope: !2824)
!2841 = !DILocalVariable(name: "buf_size", scope: !2824, file: !1800, line: 3325, type: !1012)
!2842 = !DILocation(line: 3325, column: 9, scope: !2824)
!2843 = !DILocation(line: 3325, column: 20, scope: !2824)
!2844 = !DILocation(line: 3325, column: 27, scope: !2824)
!2845 = !DILocalVariable(name: "gb", scope: !2824, file: !1800, line: 3326, type: !2042)
!2846 = !DILocation(line: 3326, column: 19, scope: !2824)
!2847 = !DILocalVariable(name: "buf_consumed", scope: !2824, file: !1800, line: 3327, type: !1012)
!2848 = !DILocation(line: 3327, column: 9, scope: !2824)
!2849 = !DILocalVariable(name: "buf_offset", scope: !2824, file: !1800, line: 3328, type: !1012)
!2850 = !DILocation(line: 3328, column: 9, scope: !2824)
!2851 = !DILocalVariable(name: "err", scope: !2824, file: !1800, line: 3329, type: !1012)
!2852 = !DILocation(line: 3329, column: 9, scope: !2824)
!2853 = !DILocalVariable(name: "new_extradata_size", scope: !2824, file: !1800, line: 3330, type: !1012)
!2854 = !DILocation(line: 3330, column: 9, scope: !2824)
!2855 = !DILocalVariable(name: "new_extradata", scope: !2824, file: !1800, line: 3331, type: !1605)
!2856 = !DILocation(line: 3331, column: 20, scope: !2824)
!2857 = !DILocation(line: 3331, column: 60, scope: !2824)
!2858 = !DILocation(line: 3331, column: 36, scope: !2824)
!2859 = !DILocalVariable(name: "jp_dualmono_size", scope: !2824, file: !1800, line: 3334, type: !1012)
!2860 = !DILocation(line: 3334, column: 9, scope: !2824)
!2861 = !DILocalVariable(name: "jp_dualmono", scope: !2824, file: !1800, line: 3335, type: !1605)
!2862 = !DILocation(line: 3335, column: 20, scope: !2824)
!2863 = !DILocation(line: 3335, column: 58, scope: !2824)
!2864 = !DILocation(line: 3335, column: 34, scope: !2824)
!2865 = !DILocation(line: 3339, column: 9, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2824, file: !1800, line: 3339, column: 9)
!2867 = !DILocation(line: 3339, column: 9, scope: !2824)
!2868 = !DILocation(line: 3341, column: 9, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2866, file: !1800, line: 3339, column: 24)
!2870 = !DILocation(line: 3341, column: 13, scope: !2869)
!2871 = !DILocation(line: 3341, column: 19, scope: !2869)
!2872 = !DILocation(line: 3341, column: 26, scope: !2869)
!2873 = !DILocation(line: 3342, column: 44, scope: !2869)
!2874 = !DILocation(line: 3342, column: 48, scope: !2869)
!2875 = !DILocation(line: 3342, column: 52, scope: !2869)
!2876 = !DILocation(line: 3342, column: 60, scope: !2869)
!2877 = !DILocation(line: 3342, column: 64, scope: !2869)
!2878 = !DILocation(line: 3342, column: 70, scope: !2869)
!2879 = !DILocation(line: 3343, column: 44, scope: !2869)
!2880 = !DILocation(line: 3344, column: 44, scope: !2869)
!2881 = !DILocation(line: 3344, column: 63, scope: !2869)
!2882 = !DILocation(line: 3342, column: 15, scope: !2869)
!2883 = !DILocation(line: 3342, column: 13, scope: !2869)
!2884 = !DILocation(line: 3345, column: 13, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2869, file: !1800, line: 3345, column: 13)
!2886 = !DILocation(line: 3345, column: 17, scope: !2885)
!2887 = !DILocation(line: 3345, column: 13, scope: !2869)
!2888 = !DILocation(line: 3346, column: 20, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2885, file: !1800, line: 3345, column: 22)
!2890 = !DILocation(line: 3346, column: 13, scope: !2889)
!2891 = !DILocation(line: 3348, column: 5, scope: !2869)
!2892 = !DILocation(line: 3350, column: 5, scope: !2824)
!2893 = !DILocation(line: 3350, column: 9, scope: !2824)
!2894 = !DILocation(line: 3350, column: 20, scope: !2824)
!2895 = !DILocation(line: 3351, column: 9, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2824, file: !1800, line: 3351, column: 9)
!2897 = !DILocation(line: 3351, column: 21, scope: !2896)
!2898 = !DILocation(line: 3351, column: 24, scope: !2899)
!2899 = !DILexicalBlockFile(scope: !2896, file: !1800, discriminator: 1)
!2900 = !DILocation(line: 3351, column: 41, scope: !2899)
!2901 = !DILocation(line: 3351, column: 9, scope: !2899)
!2902 = !DILocation(line: 3352, column: 31, scope: !2896)
!2903 = !DILocation(line: 3352, column: 30, scope: !2896)
!2904 = !DILocation(line: 3352, column: 28, scope: !2896)
!2905 = !DILocation(line: 3352, column: 9, scope: !2896)
!2906 = !DILocation(line: 3352, column: 13, scope: !2896)
!2907 = !DILocation(line: 3352, column: 24, scope: !2896)
!2908 = !DILocation(line: 3353, column: 9, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2824, file: !1800, line: 3353, column: 9)
!2910 = !DILocation(line: 3353, column: 13, scope: !2909)
!2911 = !DILocation(line: 3353, column: 30, scope: !2909)
!2912 = !DILocation(line: 3353, column: 9, scope: !2824)
!2913 = !DILocation(line: 3354, column: 26, scope: !2909)
!2914 = !DILocation(line: 3354, column: 30, scope: !2909)
!2915 = !DILocation(line: 3354, column: 9, scope: !2909)
!2916 = !DILocation(line: 3354, column: 13, scope: !2909)
!2917 = !DILocation(line: 3354, column: 24, scope: !2909)
!2918 = !DILocation(line: 3356, column: 27, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2824, file: !1800, line: 3356, column: 9)
!2920 = !DILocation(line: 3356, column: 24, scope: !2919)
!2921 = !DILocation(line: 3356, column: 9, scope: !2824)
!2922 = !DILocation(line: 3357, column: 9, scope: !2919)
!2923 = !DILocation(line: 3359, column: 36, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2824, file: !1800, line: 3359, column: 9)
!2925 = !DILocation(line: 3359, column: 41, scope: !2924)
!2926 = !DILocation(line: 3359, column: 16, scope: !2924)
!2927 = !DILocation(line: 3359, column: 14, scope: !2924)
!2928 = !DILocation(line: 3359, column: 52, scope: !2924)
!2929 = !DILocation(line: 3359, column: 9, scope: !2824)
!2930 = !DILocation(line: 3360, column: 16, scope: !2924)
!2931 = !DILocation(line: 3360, column: 9, scope: !2924)
!2932 = !DILocation(line: 3362, column: 13, scope: !2824)
!2933 = !DILocation(line: 3362, column: 17, scope: !2824)
!2934 = !DILocation(line: 3362, column: 23, scope: !2824)
!2935 = !DILocation(line: 3362, column: 28, scope: !2824)
!2936 = !DILocation(line: 3362, column: 5, scope: !2824)
!2937 = !DILocation(line: 3367, column: 35, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2824, file: !1800, line: 3362, column: 41)
!2939 = !DILocation(line: 3367, column: 42, scope: !2938)
!2940 = !DILocation(line: 3367, column: 48, scope: !2938)
!2941 = !DILocation(line: 3367, column: 15, scope: !2938)
!2942 = !DILocation(line: 3367, column: 13, scope: !2938)
!2943 = !DILocation(line: 3368, column: 9, scope: !2938)
!2944 = !DILocation(line: 3370, column: 36, scope: !2938)
!2945 = !DILocation(line: 3370, column: 43, scope: !2938)
!2946 = !DILocation(line: 3370, column: 49, scope: !2938)
!2947 = !DILocation(line: 3370, column: 69, scope: !2938)
!2948 = !DILocation(line: 3370, column: 15, scope: !2938)
!2949 = !DILocation(line: 3370, column: 13, scope: !2938)
!2950 = !DILocation(line: 3371, column: 5, scope: !2938)
!2951 = !DILocation(line: 3372, column: 9, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2824, file: !1800, line: 3372, column: 9)
!2953 = !DILocation(line: 3372, column: 13, scope: !2952)
!2954 = !DILocation(line: 3372, column: 9, scope: !2824)
!2955 = !DILocation(line: 3373, column: 16, scope: !2952)
!2956 = !DILocation(line: 3373, column: 9, scope: !2952)
!2957 = !DILocation(line: 3375, column: 21, scope: !2824)
!2958 = !DILocation(line: 3375, column: 41, scope: !2824)
!2959 = !DILocation(line: 3375, column: 46, scope: !2824)
!2960 = !DILocation(line: 3375, column: 18, scope: !2824)
!2961 = !DILocation(line: 3376, column: 23, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2824, file: !1800, line: 3376, column: 5)
!2963 = !DILocation(line: 3376, column: 21, scope: !2962)
!2964 = !DILocation(line: 3376, column: 10, scope: !2962)
!2965 = !DILocation(line: 3376, column: 37, scope: !2966)
!2966 = !DILexicalBlockFile(scope: !2967, file: !1800, discriminator: 1)
!2967 = distinct !DILexicalBlock(scope: !2962, file: !1800, line: 3376, column: 5)
!2968 = !DILocation(line: 3376, column: 50, scope: !2966)
!2969 = !DILocation(line: 3376, column: 48, scope: !2966)
!2970 = !DILocation(line: 3376, column: 5, scope: !2966)
!2971 = !DILocation(line: 3377, column: 17, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2967, file: !1800, line: 3377, column: 13)
!2973 = !DILocation(line: 3377, column: 13, scope: !2972)
!2974 = !DILocation(line: 3377, column: 13, scope: !2967)
!2975 = !DILocation(line: 3378, column: 13, scope: !2972)
!2976 = !DILocation(line: 3377, column: 27, scope: !2977)
!2977 = !DILexicalBlockFile(scope: !2972, file: !1800, discriminator: 1)
!2978 = !DILocation(line: 3376, column: 70, scope: !2979)
!2979 = !DILexicalBlockFile(scope: !2967, file: !1800, discriminator: 2)
!2980 = !DILocation(line: 3376, column: 5, scope: !2979)
!2981 = distinct !{!2981, !2982}
!2982 = !DILocation(line: 3376, column: 5, scope: !2824)
!2983 = !DILocation(line: 3380, column: 12, scope: !2824)
!2984 = !DILocation(line: 3380, column: 23, scope: !2824)
!2985 = !DILocation(line: 3380, column: 21, scope: !2824)
!2986 = !DILocation(line: 3380, column: 36, scope: !2987)
!2987 = !DILexicalBlockFile(scope: !2824, file: !1800, discriminator: 1)
!2988 = !DILocation(line: 3380, column: 12, scope: !2987)
!2989 = !DILocation(line: 3380, column: 51, scope: !2990)
!2990 = !DILexicalBlockFile(scope: !2824, file: !1800, discriminator: 2)
!2991 = !DILocation(line: 3380, column: 12, scope: !2990)
!2992 = !DILocation(line: 3380, column: 12, scope: !2993)
!2993 = !DILexicalBlockFile(scope: !2824, file: !1800, discriminator: 3)
!2994 = !DILocation(line: 3380, column: 5, scope: !2993)
!2995 = !DILocation(line: 3381, column: 1, scope: !2824)
!2996 = distinct !DISubprogram(name: "aac_decode_close", scope: !1800, file: !1800, line: 3383, type: !1257, isLocal: true, isDefinition: true, scopeLine: 3384, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!2997 = !DILocalVariable(name: "avctx", arg: 1, scope: !2996, file: !1800, line: 3383, type: !1259)
!2998 = !DILocation(line: 3383, column: 67, scope: !2996)
!2999 = !DILocalVariable(name: "ac", scope: !2996, file: !1800, line: 3385, type: !2071)
!3000 = !DILocation(line: 3385, column: 17, scope: !2996)
!3001 = !DILocation(line: 3385, column: 22, scope: !2996)
!3002 = !DILocation(line: 3385, column: 29, scope: !2996)
!3003 = !DILocalVariable(name: "i", scope: !2996, file: !1800, line: 3386, type: !1012)
!3004 = !DILocation(line: 3386, column: 9, scope: !2996)
!3005 = !DILocalVariable(name: "type", scope: !2996, file: !1800, line: 3386, type: !1012)
!3006 = !DILocation(line: 3386, column: 12, scope: !2996)
!3007 = !DILocation(line: 3388, column: 12, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !2996, file: !1800, line: 3388, column: 5)
!3009 = !DILocation(line: 3388, column: 10, scope: !3008)
!3010 = !DILocation(line: 3388, column: 17, scope: !3011)
!3011 = !DILexicalBlockFile(scope: !3012, file: !1800, discriminator: 1)
!3012 = distinct !DILexicalBlock(scope: !3008, file: !1800, line: 3388, column: 5)
!3013 = !DILocation(line: 3388, column: 19, scope: !3011)
!3014 = !DILocation(line: 3388, column: 5, scope: !3011)
!3015 = !DILocation(line: 3389, column: 19, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3017, file: !1800, line: 3389, column: 9)
!3017 = distinct !DILexicalBlock(scope: !3012, file: !1800, line: 3388, column: 30)
!3018 = !DILocation(line: 3389, column: 14, scope: !3016)
!3019 = !DILocation(line: 3389, column: 24, scope: !3020)
!3020 = !DILexicalBlockFile(scope: !3021, file: !1800, discriminator: 1)
!3021 = distinct !DILexicalBlock(scope: !3016, file: !1800, line: 3389, column: 9)
!3022 = !DILocation(line: 3389, column: 29, scope: !3020)
!3023 = !DILocation(line: 3389, column: 9, scope: !3020)
!3024 = !DILocation(line: 3390, column: 31, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3026, file: !1800, line: 3390, column: 17)
!3026 = distinct !DILexicalBlock(scope: !3021, file: !1800, line: 3389, column: 42)
!3027 = !DILocation(line: 3390, column: 17, scope: !3025)
!3028 = !DILocation(line: 3390, column: 25, scope: !3025)
!3029 = !DILocation(line: 3390, column: 21, scope: !3025)
!3030 = !DILocation(line: 3390, column: 17, scope: !3026)
!3031 = !DILocation(line: 3391, column: 59, scope: !3025)
!3032 = !DILocation(line: 3391, column: 45, scope: !3025)
!3033 = !DILocation(line: 3391, column: 53, scope: !3025)
!3034 = !DILocation(line: 3391, column: 49, scope: !3025)
!3035 = !DILocation(line: 3391, column: 63, scope: !3025)
!3036 = !DILocation(line: 3391, column: 17, scope: !3025)
!3037 = !DILocation(line: 3392, column: 37, scope: !3026)
!3038 = !DILocation(line: 3392, column: 23, scope: !3026)
!3039 = !DILocation(line: 3392, column: 31, scope: !3026)
!3040 = !DILocation(line: 3392, column: 27, scope: !3026)
!3041 = !DILocation(line: 3392, column: 22, scope: !3026)
!3042 = !DILocation(line: 3392, column: 13, scope: !3026)
!3043 = !DILocation(line: 3393, column: 9, scope: !3026)
!3044 = !DILocation(line: 3389, column: 38, scope: !3045)
!3045 = !DILexicalBlockFile(scope: !3021, file: !1800, discriminator: 2)
!3046 = !DILocation(line: 3389, column: 9, scope: !3045)
!3047 = distinct !{!3047, !3048}
!3048 = !DILocation(line: 3389, column: 9, scope: !3017)
!3049 = !DILocation(line: 3394, column: 5, scope: !3017)
!3050 = !DILocation(line: 3388, column: 26, scope: !3051)
!3051 = !DILexicalBlockFile(scope: !3012, file: !1800, discriminator: 2)
!3052 = !DILocation(line: 3388, column: 5, scope: !3051)
!3053 = distinct !{!3053, !3054}
!3054 = !DILocation(line: 3388, column: 5, scope: !2996)
!3055 = !DILocation(line: 3396, column: 27, scope: !2996)
!3056 = !DILocation(line: 3396, column: 31, scope: !2996)
!3057 = !DILocation(line: 3396, column: 5, scope: !2996)
!3058 = !DILocation(line: 3397, column: 27, scope: !2996)
!3059 = !DILocation(line: 3397, column: 31, scope: !2996)
!3060 = !DILocation(line: 3397, column: 5, scope: !2996)
!3061 = !DILocation(line: 3398, column: 27, scope: !2996)
!3062 = !DILocation(line: 3398, column: 31, scope: !2996)
!3063 = !DILocation(line: 3398, column: 5, scope: !2996)
!3064 = !DILocation(line: 3399, column: 27, scope: !2996)
!3065 = !DILocation(line: 3399, column: 31, scope: !2996)
!3066 = !DILocation(line: 3399, column: 5, scope: !2996)
!3067 = !DILocation(line: 3405, column: 15, scope: !2996)
!3068 = !DILocation(line: 3405, column: 19, scope: !2996)
!3069 = !DILocation(line: 3405, column: 14, scope: !2996)
!3070 = !DILocation(line: 3405, column: 5, scope: !2996)
!3071 = !DILocation(line: 3406, column: 5, scope: !2996)
!3072 = distinct !DISubprogram(name: "flush", scope: !1800, file: !1800, line: 500, type: !1785, isLocal: true, isDefinition: true, scopeLine: 501, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!3073 = !DILocalVariable(name: "avctx", arg: 1, scope: !3072, file: !1800, line: 500, type: !1259)
!3074 = !DILocation(line: 500, column: 35, scope: !3072)
!3075 = !DILocalVariable(name: "ac", scope: !3072, file: !1800, line: 502, type: !2071)
!3076 = !DILocation(line: 502, column: 17, scope: !3072)
!3077 = !DILocation(line: 502, column: 21, scope: !3072)
!3078 = !DILocation(line: 502, column: 28, scope: !3072)
!3079 = !DILocalVariable(name: "type", scope: !3072, file: !1800, line: 503, type: !1012)
!3080 = !DILocation(line: 503, column: 9, scope: !3072)
!3081 = !DILocalVariable(name: "i", scope: !3072, file: !1800, line: 503, type: !1012)
!3082 = !DILocation(line: 503, column: 15, scope: !3072)
!3083 = !DILocalVariable(name: "j", scope: !3072, file: !1800, line: 503, type: !1012)
!3084 = !DILocation(line: 503, column: 18, scope: !3072)
!3085 = !DILocation(line: 505, column: 15, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3072, file: !1800, line: 505, column: 5)
!3087 = !DILocation(line: 505, column: 10, scope: !3086)
!3088 = !DILocation(line: 505, column: 20, scope: !3089)
!3089 = !DILexicalBlockFile(scope: !3090, file: !1800, discriminator: 1)
!3090 = distinct !DILexicalBlock(scope: !3086, file: !1800, line: 505, column: 5)
!3091 = !DILocation(line: 505, column: 25, scope: !3089)
!3092 = !DILocation(line: 505, column: 5, scope: !3089)
!3093 = !DILocation(line: 506, column: 16, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3095, file: !1800, line: 506, column: 9)
!3095 = distinct !DILexicalBlock(scope: !3090, file: !1800, line: 505, column: 39)
!3096 = !DILocation(line: 506, column: 14, scope: !3094)
!3097 = !DILocation(line: 506, column: 21, scope: !3098)
!3098 = !DILexicalBlockFile(scope: !3099, file: !1800, discriminator: 1)
!3099 = distinct !DILexicalBlock(scope: !3094, file: !1800, line: 506, column: 9)
!3100 = !DILocation(line: 506, column: 23, scope: !3098)
!3101 = !DILocation(line: 506, column: 9, scope: !3098)
!3102 = !DILocalVariable(name: "che", scope: !3103, file: !1800, line: 507, type: !2101)
!3103 = distinct !DILexicalBlock(scope: !3099, file: !1800, line: 506, column: 34)
!3104 = !DILocation(line: 507, column: 29, scope: !3103)
!3105 = !DILocation(line: 507, column: 49, scope: !3103)
!3106 = !DILocation(line: 507, column: 35, scope: !3103)
!3107 = !DILocation(line: 507, column: 43, scope: !3103)
!3108 = !DILocation(line: 507, column: 39, scope: !3103)
!3109 = !DILocation(line: 508, column: 17, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3103, file: !1800, line: 508, column: 17)
!3111 = !DILocation(line: 508, column: 17, scope: !3103)
!3112 = !DILocation(line: 509, column: 24, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3114, file: !1800, line: 509, column: 17)
!3114 = distinct !DILexicalBlock(scope: !3110, file: !1800, line: 508, column: 22)
!3115 = !DILocation(line: 509, column: 22, scope: !3113)
!3116 = !DILocation(line: 509, column: 29, scope: !3117)
!3117 = !DILexicalBlockFile(scope: !3118, file: !1800, discriminator: 1)
!3118 = distinct !DILexicalBlock(scope: !3113, file: !1800, line: 509, column: 17)
!3119 = !DILocation(line: 509, column: 31, scope: !3117)
!3120 = !DILocation(line: 509, column: 17, scope: !3117)
!3121 = !DILocation(line: 510, column: 36, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3118, file: !1800, line: 509, column: 42)
!3123 = !DILocation(line: 510, column: 28, scope: !3122)
!3124 = !DILocation(line: 510, column: 33, scope: !3122)
!3125 = !DILocation(line: 510, column: 39, scope: !3122)
!3126 = !DILocation(line: 510, column: 21, scope: !3122)
!3127 = !DILocation(line: 511, column: 17, scope: !3122)
!3128 = !DILocation(line: 509, column: 38, scope: !3129)
!3129 = !DILexicalBlockFile(scope: !3118, file: !1800, discriminator: 2)
!3130 = !DILocation(line: 509, column: 17, scope: !3129)
!3131 = distinct !{!3131, !3132}
!3132 = !DILocation(line: 509, column: 17, scope: !3114)
!3133 = !DILocation(line: 512, column: 13, scope: !3114)
!3134 = !DILocation(line: 513, column: 9, scope: !3103)
!3135 = !DILocation(line: 506, column: 30, scope: !3136)
!3136 = !DILexicalBlockFile(scope: !3099, file: !1800, discriminator: 2)
!3137 = !DILocation(line: 506, column: 9, scope: !3136)
!3138 = distinct !{!3138, !3139}
!3139 = !DILocation(line: 506, column: 9, scope: !3095)
!3140 = !DILocation(line: 514, column: 5, scope: !3095)
!3141 = !DILocation(line: 505, column: 35, scope: !3142)
!3142 = !DILexicalBlockFile(scope: !3090, file: !1800, discriminator: 2)
!3143 = !DILocation(line: 505, column: 5, scope: !3142)
!3144 = distinct !{!3144, !3145}
!3145 = !DILocation(line: 505, column: 5, scope: !3072)
!3146 = !DILocation(line: 515, column: 1, scope: !3072)
!3147 = !DILocation(line: 1111, column: 5, scope: !1804)
!3148 = distinct !{!3148, !3147}
!3149 = !DILocation(line: 1111, column: 66, scope: !3150)
!3150 = !DILexicalBlockFile(scope: !3151, file: !1800, discriminator: 1)
!3151 = distinct !DILexicalBlock(scope: !1804, file: !1800, line: 1111, column: 8)
!3152 = !DILocation(line: 1111, column: 111, scope: !3150)
!3153 = !DILocation(line: 1111, column: 158, scope: !3150)
!3154 = !DILocation(line: 1111, column: 184, scope: !3150)
!3155 = !DILocation(line: 1111, column: 281, scope: !3150)
!3156 = !DILocation(line: 1111, column: 118, scope: !3150)
!3157 = !DILocation(line: 1111, column: 16, scope: !3150)
!3158 = !DILocation(line: 1112, column: 5, scope: !1804)
!3159 = distinct !{!3159, !3158}
!3160 = !DILocation(line: 1112, column: 66, scope: !3161)
!3161 = !DILexicalBlockFile(scope: !3162, file: !1800, discriminator: 1)
!3162 = distinct !DILexicalBlock(scope: !1804, file: !1800, line: 1112, column: 8)
!3163 = !DILocation(line: 1112, column: 111, scope: !3161)
!3164 = !DILocation(line: 1112, column: 158, scope: !3161)
!3165 = !DILocation(line: 1112, column: 184, scope: !3161)
!3166 = !DILocation(line: 1112, column: 281, scope: !3161)
!3167 = !DILocation(line: 1112, column: 118, scope: !3161)
!3168 = !DILocation(line: 1112, column: 16, scope: !3161)
!3169 = !DILocation(line: 1113, column: 5, scope: !1804)
!3170 = distinct !{!3170, !3169}
!3171 = !DILocation(line: 1113, column: 66, scope: !3172)
!3172 = !DILexicalBlockFile(scope: !3173, file: !1800, discriminator: 1)
!3173 = distinct !DILexicalBlock(scope: !1804, file: !1800, line: 1113, column: 8)
!3174 = !DILocation(line: 1113, column: 111, scope: !3172)
!3175 = !DILocation(line: 1113, column: 158, scope: !3172)
!3176 = !DILocation(line: 1113, column: 184, scope: !3172)
!3177 = !DILocation(line: 1113, column: 281, scope: !3172)
!3178 = !DILocation(line: 1113, column: 118, scope: !3172)
!3179 = !DILocation(line: 1113, column: 16, scope: !3172)
!3180 = !DILocation(line: 1114, column: 5, scope: !1804)
!3181 = distinct !{!3181, !3180}
!3182 = !DILocation(line: 1114, column: 66, scope: !3183)
!3183 = !DILexicalBlockFile(scope: !3184, file: !1800, discriminator: 1)
!3184 = distinct !DILexicalBlock(scope: !1804, file: !1800, line: 1114, column: 8)
!3185 = !DILocation(line: 1114, column: 111, scope: !3183)
!3186 = !DILocation(line: 1114, column: 158, scope: !3183)
!3187 = !DILocation(line: 1114, column: 184, scope: !3183)
!3188 = !DILocation(line: 1114, column: 281, scope: !3183)
!3189 = !DILocation(line: 1114, column: 118, scope: !3183)
!3190 = !DILocation(line: 1114, column: 16, scope: !3183)
!3191 = !DILocation(line: 1115, column: 5, scope: !1804)
!3192 = distinct !{!3192, !3191}
!3193 = !DILocation(line: 1115, column: 66, scope: !3194)
!3194 = !DILexicalBlockFile(scope: !3195, file: !1800, discriminator: 1)
!3195 = distinct !DILexicalBlock(scope: !1804, file: !1800, line: 1115, column: 8)
!3196 = !DILocation(line: 1115, column: 111, scope: !3194)
!3197 = !DILocation(line: 1115, column: 158, scope: !3194)
!3198 = !DILocation(line: 1115, column: 184, scope: !3194)
!3199 = !DILocation(line: 1115, column: 281, scope: !3194)
!3200 = !DILocation(line: 1115, column: 118, scope: !3194)
!3201 = !DILocation(line: 1115, column: 16, scope: !3194)
!3202 = !DILocation(line: 1116, column: 5, scope: !1804)
!3203 = distinct !{!3203, !3202}
!3204 = !DILocation(line: 1116, column: 66, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !3206, file: !1800, discriminator: 1)
!3206 = distinct !DILexicalBlock(scope: !1804, file: !1800, line: 1116, column: 8)
!3207 = !DILocation(line: 1116, column: 111, scope: !3205)
!3208 = !DILocation(line: 1116, column: 158, scope: !3205)
!3209 = !DILocation(line: 1116, column: 184, scope: !3205)
!3210 = !DILocation(line: 1116, column: 281, scope: !3205)
!3211 = !DILocation(line: 1116, column: 118, scope: !3205)
!3212 = !DILocation(line: 1116, column: 16, scope: !3205)
!3213 = !DILocation(line: 1117, column: 5, scope: !1804)
!3214 = distinct !{!3214, !3213}
!3215 = !DILocation(line: 1117, column: 66, scope: !3216)
!3216 = !DILexicalBlockFile(scope: !3217, file: !1800, discriminator: 1)
!3217 = distinct !DILexicalBlock(scope: !1804, file: !1800, line: 1117, column: 8)
!3218 = !DILocation(line: 1117, column: 111, scope: !3216)
!3219 = !DILocation(line: 1117, column: 158, scope: !3216)
!3220 = !DILocation(line: 1117, column: 184, scope: !3216)
!3221 = !DILocation(line: 1117, column: 281, scope: !3216)
!3222 = !DILocation(line: 1117, column: 118, scope: !3216)
!3223 = !DILocation(line: 1117, column: 16, scope: !3216)
!3224 = !DILocation(line: 1118, column: 5, scope: !1804)
!3225 = distinct !{!3225, !3224}
!3226 = !DILocation(line: 1118, column: 66, scope: !3227)
!3227 = !DILexicalBlockFile(scope: !3228, file: !1800, discriminator: 1)
!3228 = distinct !DILexicalBlock(scope: !1804, file: !1800, line: 1118, column: 8)
!3229 = !DILocation(line: 1118, column: 111, scope: !3227)
!3230 = !DILocation(line: 1118, column: 158, scope: !3227)
!3231 = !DILocation(line: 1118, column: 184, scope: !3227)
!3232 = !DILocation(line: 1118, column: 281, scope: !3227)
!3233 = !DILocation(line: 1118, column: 118, scope: !3227)
!3234 = !DILocation(line: 1118, column: 16, scope: !3227)
!3235 = !DILocation(line: 1119, column: 5, scope: !1804)
!3236 = distinct !{!3236, !3235}
!3237 = !DILocation(line: 1119, column: 66, scope: !3238)
!3238 = !DILexicalBlockFile(scope: !3239, file: !1800, discriminator: 1)
!3239 = distinct !DILexicalBlock(scope: !1804, file: !1800, line: 1119, column: 8)
!3240 = !DILocation(line: 1119, column: 111, scope: !3238)
!3241 = !DILocation(line: 1119, column: 158, scope: !3238)
!3242 = !DILocation(line: 1119, column: 184, scope: !3238)
!3243 = !DILocation(line: 1119, column: 281, scope: !3238)
!3244 = !DILocation(line: 1119, column: 118, scope: !3238)
!3245 = !DILocation(line: 1119, column: 16, scope: !3238)
!3246 = !DILocation(line: 1120, column: 5, scope: !1804)
!3247 = distinct !{!3247, !3246}
!3248 = !DILocation(line: 1120, column: 66, scope: !3249)
!3249 = !DILexicalBlockFile(scope: !3250, file: !1800, discriminator: 1)
!3250 = distinct !DILexicalBlock(scope: !1804, file: !1800, line: 1120, column: 8)
!3251 = !DILocation(line: 1120, column: 111, scope: !3249)
!3252 = !DILocation(line: 1120, column: 158, scope: !3249)
!3253 = !DILocation(line: 1120, column: 184, scope: !3249)
!3254 = !DILocation(line: 1120, column: 281, scope: !3249)
!3255 = !DILocation(line: 1120, column: 118, scope: !3249)
!3256 = !DILocation(line: 1120, column: 16, scope: !3249)
!3257 = !DILocation(line: 1121, column: 5, scope: !1804)
!3258 = distinct !{!3258, !3257}
!3259 = !DILocation(line: 1121, column: 67, scope: !3260)
!3260 = !DILexicalBlockFile(scope: !3261, file: !1800, discriminator: 1)
!3261 = distinct !DILexicalBlock(scope: !1804, file: !1800, line: 1121, column: 8)
!3262 = !DILocation(line: 1121, column: 113, scope: !3260)
!3263 = !DILocation(line: 1121, column: 161, scope: !3260)
!3264 = !DILocation(line: 1121, column: 188, scope: !3260)
!3265 = !DILocation(line: 1121, column: 288, scope: !3260)
!3266 = !DILocation(line: 1121, column: 120, scope: !3260)
!3267 = !DILocation(line: 1121, column: 16, scope: !3260)
!3268 = !DILocation(line: 1123, column: 5, scope: !1804)
!3269 = !DILocation(line: 1125, column: 5, scope: !1804)
!3270 = !DILocation(line: 1127, column: 5, scope: !1804)
!3271 = distinct !{!3271, !3270}
!3272 = !DILocation(line: 1127, column: 67, scope: !3273)
!3273 = !DILexicalBlockFile(scope: !3274, file: !1800, discriminator: 1)
!3274 = distinct !DILexicalBlock(scope: !1804, file: !1800, line: 1127, column: 8)
!3275 = !DILocation(line: 1127, column: 113, scope: !3273)
!3276 = !DILocation(line: 1127, column: 120, scope: !3273)
!3277 = !DILocation(line: 1127, column: 16, scope: !3273)
!3278 = !DILocation(line: 1138, column: 5, scope: !1804)
!3279 = !DILocation(line: 1139, column: 5, scope: !1804)
!3280 = !DILocation(line: 1146, column: 5, scope: !1804)
!3281 = !DILocation(line: 1147, column: 5, scope: !1804)
!3282 = !DILocation(line: 1148, column: 5, scope: !1804)
!3283 = !DILocation(line: 1150, column: 5, scope: !1804)
!3284 = !DILocation(line: 1151, column: 1, scope: !1804)
!3285 = distinct !DISubprogram(name: "aacdec_init", scope: !1800, file: !1800, line: 3409, type: !3286, isLocal: true, isDefinition: true, scopeLine: 3410, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{null, !2071}
!3288 = !DILocalVariable(name: "c", arg: 1, scope: !3285, file: !1800, line: 3409, type: !2071)
!3289 = !DILocation(line: 3409, column: 37, scope: !3285)
!3290 = !DILocation(line: 3411, column: 5, scope: !3285)
!3291 = !DILocation(line: 3411, column: 8, scope: !3285)
!3292 = !DILocation(line: 3411, column: 28, scope: !3285)
!3293 = !DILocation(line: 3412, column: 5, scope: !3285)
!3294 = !DILocation(line: 3412, column: 8, scope: !3285)
!3295 = !DILocation(line: 3412, column: 18, scope: !3285)
!3296 = !DILocation(line: 3413, column: 5, scope: !3285)
!3297 = !DILocation(line: 3413, column: 8, scope: !3285)
!3298 = !DILocation(line: 3413, column: 18, scope: !3285)
!3299 = !DILocation(line: 3414, column: 5, scope: !3285)
!3300 = !DILocation(line: 3414, column: 8, scope: !3285)
!3301 = !DILocation(line: 3414, column: 31, scope: !3285)
!3302 = !DILocation(line: 3415, column: 5, scope: !3285)
!3303 = !DILocation(line: 3415, column: 8, scope: !3285)
!3304 = !DILocation(line: 3415, column: 19, scope: !3285)
!3305 = !DILocation(line: 3417, column: 5, scope: !3285)
!3306 = !DILocation(line: 3417, column: 8, scope: !3285)
!3307 = !DILocation(line: 3417, column: 21, scope: !3285)
!3308 = !DILocation(line: 3418, column: 5, scope: !3285)
!3309 = !DILocation(line: 3418, column: 8, scope: !3285)
!3310 = !DILocation(line: 3418, column: 22, scope: !3285)
!3311 = !DILocation(line: 3425, column: 1, scope: !3285)
!3312 = distinct !DISubprogram(name: "decode_audio_specific_config", scope: !1800, file: !1800, line: 1030, type: !3313, isLocal: true, isDefinition: true, scopeLine: 1035, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!1012, !2071, !1259, !3315, !1605, !1014, !1012}
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64, align: 64)
!3316 = !DILocalVariable(name: "ac", arg: 1, scope: !3312, file: !1800, line: 1030, type: !2071)
!3317 = !DILocation(line: 1030, column: 53, scope: !3312)
!3318 = !DILocalVariable(name: "avctx", arg: 2, scope: !3312, file: !1800, line: 1031, type: !1259)
!3319 = !DILocation(line: 1031, column: 57, scope: !3312)
!3320 = !DILocalVariable(name: "m4ac", arg: 3, scope: !3312, file: !1800, line: 1032, type: !3315)
!3321 = !DILocation(line: 1032, column: 59, scope: !3312)
!3322 = !DILocalVariable(name: "data", arg: 4, scope: !3312, file: !1800, line: 1033, type: !1605)
!3323 = !DILocation(line: 1033, column: 56, scope: !3312)
!3324 = !DILocalVariable(name: "bit_size", arg: 5, scope: !3312, file: !1800, line: 1033, type: !1014)
!3325 = !DILocation(line: 1033, column: 70, scope: !3312)
!3326 = !DILocalVariable(name: "sync_extension", arg: 6, scope: !3312, file: !1800, line: 1034, type: !1012)
!3327 = !DILocation(line: 1034, column: 45, scope: !3312)
!3328 = !DILocalVariable(name: "i", scope: !3312, file: !1800, line: 1036, type: !1012)
!3329 = !DILocation(line: 1036, column: 9, scope: !3312)
!3330 = !DILocalVariable(name: "ret", scope: !3312, file: !1800, line: 1036, type: !1012)
!3331 = !DILocation(line: 1036, column: 12, scope: !3312)
!3332 = !DILocalVariable(name: "gb", scope: !3312, file: !1800, line: 1037, type: !2042)
!3333 = !DILocation(line: 1037, column: 19, scope: !3312)
!3334 = !DILocation(line: 1039, column: 9, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3312, file: !1800, line: 1039, column: 9)
!3336 = !DILocation(line: 1039, column: 18, scope: !3335)
!3337 = !DILocation(line: 1039, column: 22, scope: !3335)
!3338 = !DILocation(line: 1039, column: 25, scope: !3339)
!3339 = !DILexicalBlockFile(scope: !3335, file: !1800, discriminator: 1)
!3340 = !DILocation(line: 1039, column: 34, scope: !3339)
!3341 = !DILocation(line: 1039, column: 9, scope: !3339)
!3342 = !DILocation(line: 1040, column: 16, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3335, file: !1800, line: 1039, column: 48)
!3344 = !DILocation(line: 1040, column: 9, scope: !3343)
!3345 = !DILocation(line: 1041, column: 9, scope: !3343)
!3346 = !DILocation(line: 1044, column: 5, scope: !3312)
!3347 = distinct !{!3347, !3346}
!3348 = !DILocation(line: 1044, column: 91, scope: !3349)
!3349 = !DILexicalBlockFile(scope: !3350, file: !1800, discriminator: 1)
!3350 = distinct !DILexicalBlock(scope: !3312, file: !1800, line: 1044, column: 8)
!3351 = !DILocation(line: 1045, column: 12, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3312, file: !1800, line: 1045, column: 5)
!3353 = !DILocation(line: 1045, column: 10, scope: !3352)
!3354 = !DILocation(line: 1045, column: 17, scope: !3355)
!3355 = !DILexicalBlockFile(scope: !3356, file: !1800, discriminator: 1)
!3356 = distinct !DILexicalBlock(scope: !3352, file: !1800, line: 1045, column: 5)
!3357 = !DILocation(line: 1045, column: 21, scope: !3355)
!3358 = !DILocation(line: 1045, column: 30, scope: !3355)
!3359 = !DILocation(line: 1045, column: 19, scope: !3355)
!3360 = !DILocation(line: 1045, column: 5, scope: !3355)
!3361 = !DILocation(line: 1046, column: 9, scope: !3356)
!3362 = distinct !{!3362, !3361}
!3363 = !DILocation(line: 1046, column: 58, scope: !3364)
!3364 = !DILexicalBlockFile(scope: !3365, file: !1800, discriminator: 1)
!3365 = distinct !DILexicalBlock(scope: !3356, file: !1800, line: 1046, column: 12)
!3366 = !DILocation(line: 1046, column: 58, scope: !3367)
!3367 = !DILexicalBlockFile(scope: !3365, file: !1800, discriminator: 2)
!3368 = !DILocation(line: 1045, column: 37, scope: !3369)
!3369 = !DILexicalBlockFile(scope: !3356, file: !1800, discriminator: 2)
!3370 = !DILocation(line: 1045, column: 5, scope: !3369)
!3371 = distinct !{!3371, !3372}
!3372 = !DILocation(line: 1045, column: 5, scope: !3312)
!3373 = !DILocation(line: 1047, column: 5, scope: !3312)
!3374 = distinct !{!3374, !3373}
!3375 = !DILocation(line: 1047, column: 42, scope: !3376)
!3376 = !DILexicalBlockFile(scope: !3377, file: !1800, discriminator: 1)
!3377 = distinct !DILexicalBlock(scope: !3312, file: !1800, line: 1047, column: 8)
!3378 = !DILocation(line: 1049, column: 35, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3312, file: !1800, line: 1049, column: 9)
!3380 = !DILocation(line: 1049, column: 41, scope: !3379)
!3381 = !DILocation(line: 1049, column: 16, scope: !3379)
!3382 = !DILocation(line: 1049, column: 14, scope: !3379)
!3383 = !DILocation(line: 1049, column: 52, scope: !3379)
!3384 = !DILocation(line: 1049, column: 9, scope: !3312)
!3385 = !DILocation(line: 1050, column: 16, scope: !3379)
!3386 = !DILocation(line: 1050, column: 9, scope: !3379)
!3387 = !DILocation(line: 1052, column: 44, scope: !3312)
!3388 = !DILocation(line: 1052, column: 48, scope: !3312)
!3389 = !DILocation(line: 1052, column: 55, scope: !3312)
!3390 = !DILocation(line: 1053, column: 44, scope: !3312)
!3391 = !DILocation(line: 1052, column: 12, scope: !3312)
!3392 = !DILocation(line: 1052, column: 5, scope: !3312)
!3393 = !DILocation(line: 1054, column: 1, scope: !3312)
!3394 = distinct !DISubprogram(name: "sample_rate_idx", scope: !1800, file: !1800, line: 1076, type: !3395, isLocal: true, isDefinition: true, scopeLine: 1077, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{!1012, !1012}
!3397 = !DILocalVariable(name: "rate", arg: 1, scope: !3394, file: !1800, line: 1076, type: !1012)
!3398 = !DILocation(line: 1076, column: 33, scope: !3394)
!3399 = !DILocation(line: 1078, column: 23, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3394, file: !1800, line: 1078, column: 14)
!3401 = !DILocation(line: 1078, column: 20, scope: !3400)
!3402 = !DILocation(line: 1078, column: 14, scope: !3394)
!3403 = !DILocation(line: 1078, column: 29, scope: !3404)
!3404 = !DILexicalBlockFile(scope: !3400, file: !1800, discriminator: 1)
!3405 = !DILocation(line: 1079, column: 23, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3400, file: !1800, line: 1079, column: 14)
!3407 = !DILocation(line: 1079, column: 20, scope: !3406)
!3408 = !DILocation(line: 1079, column: 14, scope: !3400)
!3409 = !DILocation(line: 1079, column: 29, scope: !3410)
!3410 = !DILexicalBlockFile(scope: !3406, file: !1800, discriminator: 1)
!3411 = !DILocation(line: 1080, column: 23, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3406, file: !1800, line: 1080, column: 14)
!3413 = !DILocation(line: 1080, column: 20, scope: !3412)
!3414 = !DILocation(line: 1080, column: 14, scope: !3406)
!3415 = !DILocation(line: 1080, column: 29, scope: !3416)
!3416 = !DILexicalBlockFile(scope: !3412, file: !1800, discriminator: 1)
!3417 = !DILocation(line: 1081, column: 23, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3412, file: !1800, line: 1081, column: 14)
!3419 = !DILocation(line: 1081, column: 20, scope: !3418)
!3420 = !DILocation(line: 1081, column: 14, scope: !3412)
!3421 = !DILocation(line: 1081, column: 29, scope: !3422)
!3422 = !DILexicalBlockFile(scope: !3418, file: !1800, discriminator: 1)
!3423 = !DILocation(line: 1082, column: 23, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3418, file: !1800, line: 1082, column: 14)
!3425 = !DILocation(line: 1082, column: 20, scope: !3424)
!3426 = !DILocation(line: 1082, column: 14, scope: !3418)
!3427 = !DILocation(line: 1082, column: 29, scope: !3428)
!3428 = !DILexicalBlockFile(scope: !3424, file: !1800, discriminator: 1)
!3429 = !DILocation(line: 1083, column: 23, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3424, file: !1800, line: 1083, column: 14)
!3431 = !DILocation(line: 1083, column: 20, scope: !3430)
!3432 = !DILocation(line: 1083, column: 14, scope: !3424)
!3433 = !DILocation(line: 1083, column: 29, scope: !3434)
!3434 = !DILexicalBlockFile(scope: !3430, file: !1800, discriminator: 1)
!3435 = !DILocation(line: 1084, column: 23, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3430, file: !1800, line: 1084, column: 14)
!3437 = !DILocation(line: 1084, column: 20, scope: !3436)
!3438 = !DILocation(line: 1084, column: 14, scope: !3430)
!3439 = !DILocation(line: 1084, column: 29, scope: !3440)
!3440 = !DILexicalBlockFile(scope: !3436, file: !1800, discriminator: 1)
!3441 = !DILocation(line: 1085, column: 23, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3436, file: !1800, line: 1085, column: 14)
!3443 = !DILocation(line: 1085, column: 20, scope: !3442)
!3444 = !DILocation(line: 1085, column: 14, scope: !3436)
!3445 = !DILocation(line: 1085, column: 29, scope: !3446)
!3446 = !DILexicalBlockFile(scope: !3442, file: !1800, discriminator: 1)
!3447 = !DILocation(line: 1086, column: 23, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3442, file: !1800, line: 1086, column: 14)
!3449 = !DILocation(line: 1086, column: 20, scope: !3448)
!3450 = !DILocation(line: 1086, column: 14, scope: !3442)
!3451 = !DILocation(line: 1086, column: 29, scope: !3452)
!3452 = !DILexicalBlockFile(scope: !3448, file: !1800, discriminator: 1)
!3453 = !DILocation(line: 1087, column: 23, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3448, file: !1800, line: 1087, column: 14)
!3455 = !DILocation(line: 1087, column: 20, scope: !3454)
!3456 = !DILocation(line: 1087, column: 14, scope: !3448)
!3457 = !DILocation(line: 1087, column: 29, scope: !3458)
!3458 = !DILexicalBlockFile(scope: !3454, file: !1800, discriminator: 1)
!3459 = !DILocation(line: 1088, column: 22, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3454, file: !1800, line: 1088, column: 14)
!3461 = !DILocation(line: 1088, column: 19, scope: !3460)
!3462 = !DILocation(line: 1088, column: 14, scope: !3454)
!3463 = !DILocation(line: 1088, column: 28, scope: !3464)
!3464 = !DILexicalBlockFile(scope: !3460, file: !1800, discriminator: 1)
!3465 = !DILocation(line: 1089, column: 10, scope: !3460)
!3466 = !DILocation(line: 1090, column: 1, scope: !3394)
!3467 = distinct !DISubprogram(name: "set_default_channel_config", scope: !1800, file: !1800, line: 523, type: !3468, isLocal: true, isDefinition: true, scopeLine: 527, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!1012, !1259, !3470, !1454, !1012}
!3470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64, align: 64)
!3471 = !DILocalVariable(name: "avctx", arg: 1, scope: !3467, file: !1800, line: 523, type: !1259)
!3472 = !DILocation(line: 523, column: 55, scope: !3467)
!3473 = !DILocalVariable(name: "layout_map", arg: 2, scope: !3467, file: !1800, line: 524, type: !3470)
!3474 = !DILocation(line: 524, column: 49, scope: !3467)
!3475 = !DILocalVariable(name: "tags", arg: 3, scope: !3467, file: !1800, line: 525, type: !1454)
!3476 = !DILocation(line: 525, column: 44, scope: !3467)
!3477 = !DILocalVariable(name: "channel_config", arg: 4, scope: !3467, file: !1800, line: 526, type: !1012)
!3478 = !DILocation(line: 526, column: 43, scope: !3467)
!3479 = !DILocation(line: 528, column: 9, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3467, file: !1800, line: 528, column: 9)
!3481 = !DILocation(line: 528, column: 24, scope: !3480)
!3482 = !DILocation(line: 528, column: 28, scope: !3480)
!3483 = !DILocation(line: 528, column: 32, scope: !3484)
!3484 = !DILexicalBlockFile(scope: !3480, file: !1800, discriminator: 1)
!3485 = !DILocation(line: 528, column: 47, scope: !3484)
!3486 = !DILocation(line: 528, column: 51, scope: !3484)
!3487 = !DILocation(line: 528, column: 54, scope: !3488)
!3488 = !DILexicalBlockFile(scope: !3480, file: !1800, discriminator: 2)
!3489 = !DILocation(line: 528, column: 69, scope: !3488)
!3490 = !DILocation(line: 528, column: 75, scope: !3488)
!3491 = !DILocation(line: 529, column: 9, scope: !3480)
!3492 = !DILocation(line: 529, column: 24, scope: !3480)
!3493 = !DILocation(line: 528, column: 9, scope: !3494)
!3494 = !DILexicalBlockFile(scope: !3467, file: !1800, discriminator: 3)
!3495 = !DILocation(line: 530, column: 16, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3480, file: !1800, line: 529, column: 30)
!3497 = !DILocation(line: 532, column: 16, scope: !3496)
!3498 = !DILocation(line: 530, column: 9, scope: !3496)
!3499 = !DILocation(line: 533, column: 9, scope: !3496)
!3500 = !DILocation(line: 535, column: 29, scope: !3467)
!3501 = !DILocation(line: 535, column: 13, scope: !3467)
!3502 = !DILocation(line: 535, column: 6, scope: !3467)
!3503 = !DILocation(line: 535, column: 11, scope: !3467)
!3504 = !DILocation(line: 536, column: 12, scope: !3467)
!3505 = !DILocation(line: 536, column: 5, scope: !3467)
!3506 = !DILocation(line: 536, column: 47, scope: !3467)
!3507 = !DILocation(line: 536, column: 62, scope: !3467)
!3508 = !DILocation(line: 536, column: 24, scope: !3467)
!3509 = !DILocation(line: 537, column: 13, scope: !3467)
!3510 = !DILocation(line: 537, column: 12, scope: !3467)
!3511 = !DILocation(line: 537, column: 18, scope: !3467)
!3512 = !DILocation(line: 550, column: 9, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3467, file: !1800, line: 550, column: 9)
!3514 = !DILocation(line: 550, column: 24, scope: !3513)
!3515 = !DILocation(line: 550, column: 29, scope: !3513)
!3516 = !DILocation(line: 550, column: 32, scope: !3517)
!3517 = !DILexicalBlockFile(scope: !3513, file: !1800, discriminator: 1)
!3518 = !DILocation(line: 550, column: 39, scope: !3517)
!3519 = !DILocation(line: 550, column: 61, scope: !3517)
!3520 = !DILocation(line: 550, column: 9, scope: !3517)
!3521 = !DILocation(line: 551, column: 16, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3513, file: !1800, line: 550, column: 66)
!3523 = !DILocation(line: 551, column: 9, scope: !3522)
!3524 = !DILocation(line: 554, column: 9, scope: !3522)
!3525 = !DILocation(line: 554, column: 26, scope: !3522)
!3526 = !DILocation(line: 555, column: 5, scope: !3522)
!3527 = !DILocation(line: 557, column: 5, scope: !3467)
!3528 = !DILocation(line: 558, column: 1, scope: !3467)
!3529 = distinct !DISubprogram(name: "output_configure", scope: !1800, file: !1800, line: 440, type: !3530, isLocal: true, isDefinition: true, scopeLine: 443, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!3530 = !DISubroutineType(types: !3531)
!3531 = !{!1012, !2071, !3470, !1012, !950, !1012}
!3532 = !DILocalVariable(name: "ac", arg: 1, scope: !3529, file: !1800, line: 440, type: !2071)
!3533 = !DILocation(line: 440, column: 41, scope: !3529)
!3534 = !DILocalVariable(name: "layout_map", arg: 2, scope: !3529, file: !1800, line: 441, type: !3470)
!3535 = !DILocation(line: 441, column: 37, scope: !3529)
!3536 = !DILocalVariable(name: "tags", arg: 3, scope: !3529, file: !1800, line: 441, type: !1012)
!3537 = !DILocation(line: 441, column: 64, scope: !3529)
!3538 = !DILocalVariable(name: "oc_type", arg: 4, scope: !3529, file: !1800, line: 442, type: !950)
!3539 = !DILocation(line: 442, column: 43, scope: !3529)
!3540 = !DILocalVariable(name: "get_new_frame", arg: 5, scope: !3529, file: !1800, line: 442, type: !1012)
!3541 = !DILocation(line: 442, column: 56, scope: !3529)
!3542 = !DILocalVariable(name: "avctx", scope: !3529, file: !1800, line: 444, type: !1259)
!3543 = !DILocation(line: 444, column: 21, scope: !3529)
!3544 = !DILocation(line: 444, column: 29, scope: !3529)
!3545 = !DILocation(line: 444, column: 33, scope: !3529)
!3546 = !DILocalVariable(name: "i", scope: !3529, file: !1800, line: 445, type: !1012)
!3547 = !DILocation(line: 445, column: 9, scope: !3529)
!3548 = !DILocalVariable(name: "channels", scope: !3529, file: !1800, line: 445, type: !1012)
!3549 = !DILocation(line: 445, column: 12, scope: !3529)
!3550 = !DILocalVariable(name: "ret", scope: !3529, file: !1800, line: 445, type: !1012)
!3551 = !DILocation(line: 445, column: 26, scope: !3529)
!3552 = !DILocalVariable(name: "layout", scope: !3529, file: !1800, line: 446, type: !1034)
!3553 = !DILocation(line: 446, column: 14, scope: !3529)
!3554 = !DILocalVariable(name: "id_map", scope: !3529, file: !1800, line: 447, type: !3555)
!3555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 896, align: 8, elements: !3556)
!3556 = !{!2170, !1798}
!3557 = !DILocation(line: 447, column: 13, scope: !3529)
!3558 = !DILocalVariable(name: "type_counts", scope: !3529, file: !1800, line: 448, type: !2168)
!3559 = !DILocation(line: 448, column: 13, scope: !3529)
!3560 = !DILocation(line: 450, column: 9, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3529, file: !1800, line: 450, column: 9)
!3562 = !DILocation(line: 450, column: 13, scope: !3561)
!3563 = !DILocation(line: 450, column: 19, scope: !3561)
!3564 = !DILocation(line: 450, column: 33, scope: !3561)
!3565 = !DILocation(line: 450, column: 30, scope: !3561)
!3566 = !DILocation(line: 450, column: 9, scope: !3529)
!3567 = !DILocation(line: 451, column: 16, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3561, file: !1800, line: 450, column: 45)
!3569 = !DILocation(line: 451, column: 20, scope: !3568)
!3570 = !DILocation(line: 451, column: 26, scope: !3568)
!3571 = !DILocation(line: 451, column: 9, scope: !3568)
!3572 = !DILocation(line: 451, column: 38, scope: !3568)
!3573 = !DILocation(line: 451, column: 50, scope: !3568)
!3574 = !DILocation(line: 451, column: 55, scope: !3568)
!3575 = !DILocation(line: 452, column: 37, scope: !3568)
!3576 = !DILocation(line: 452, column: 9, scope: !3568)
!3577 = !DILocation(line: 452, column: 13, scope: !3568)
!3578 = !DILocation(line: 452, column: 19, scope: !3568)
!3579 = !DILocation(line: 452, column: 35, scope: !3568)
!3580 = !DILocation(line: 453, column: 5, scope: !3568)
!3581 = !DILocation(line: 454, column: 12, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3529, file: !1800, line: 454, column: 5)
!3583 = !DILocation(line: 454, column: 10, scope: !3582)
!3584 = !DILocation(line: 454, column: 17, scope: !3585)
!3585 = !DILexicalBlockFile(scope: !3586, file: !1800, discriminator: 1)
!3586 = distinct !DILexicalBlock(scope: !3582, file: !1800, line: 454, column: 5)
!3587 = !DILocation(line: 454, column: 21, scope: !3585)
!3588 = !DILocation(line: 454, column: 19, scope: !3585)
!3589 = !DILocation(line: 454, column: 5, scope: !3585)
!3590 = !DILocalVariable(name: "type", scope: !3591, file: !1800, line: 455, type: !1012)
!3591 = distinct !DILexicalBlock(scope: !3586, file: !1800, line: 454, column: 32)
!3592 = !DILocation(line: 455, column: 13, scope: !3591)
!3593 = !DILocation(line: 455, column: 31, scope: !3591)
!3594 = !DILocation(line: 455, column: 20, scope: !3591)
!3595 = !DILocalVariable(name: "id", scope: !3591, file: !1800, line: 456, type: !1012)
!3596 = !DILocation(line: 456, column: 13, scope: !3591)
!3597 = !DILocation(line: 456, column: 29, scope: !3591)
!3598 = !DILocation(line: 456, column: 18, scope: !3591)
!3599 = !DILocation(line: 457, column: 40, scope: !3591)
!3600 = !DILocation(line: 457, column: 28, scope: !3591)
!3601 = !DILocation(line: 457, column: 45, scope: !3591)
!3602 = !DILocation(line: 457, column: 22, scope: !3591)
!3603 = !DILocation(line: 457, column: 9, scope: !3591)
!3604 = !DILocation(line: 457, column: 16, scope: !3591)
!3605 = !DILocation(line: 457, column: 26, scope: !3591)
!3606 = !DILocation(line: 458, column: 26, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3591, file: !1800, line: 458, column: 13)
!3608 = !DILocation(line: 458, column: 13, scope: !3607)
!3609 = !DILocation(line: 458, column: 20, scope: !3607)
!3610 = !DILocation(line: 458, column: 30, scope: !3607)
!3611 = !DILocation(line: 458, column: 13, scope: !3591)
!3612 = !DILocation(line: 459, column: 35, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3607, file: !1800, line: 458, column: 37)
!3614 = !DILocation(line: 459, column: 39, scope: !3613)
!3615 = !DILocation(line: 459, column: 13, scope: !3613)
!3616 = !DILocation(line: 460, column: 13, scope: !3613)
!3617 = !DILocation(line: 462, column: 5, scope: !3591)
!3618 = !DILocation(line: 454, column: 28, scope: !3619)
!3619 = !DILexicalBlockFile(scope: !3586, file: !1800, discriminator: 2)
!3620 = !DILocation(line: 454, column: 5, scope: !3619)
!3621 = distinct !{!3621, !3622}
!3622 = !DILocation(line: 454, column: 5, scope: !3529)
!3623 = !DILocation(line: 465, column: 9, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3529, file: !1800, line: 465, column: 9)
!3625 = !DILocation(line: 465, column: 16, scope: !3624)
!3626 = !DILocation(line: 465, column: 39, scope: !3624)
!3627 = !DILocation(line: 465, column: 9, scope: !3529)
!3628 = !DILocation(line: 466, column: 38, scope: !3624)
!3629 = !DILocation(line: 466, column: 50, scope: !3624)
!3630 = !DILocation(line: 466, column: 18, scope: !3624)
!3631 = !DILocation(line: 466, column: 16, scope: !3624)
!3632 = !DILocation(line: 466, column: 9, scope: !3624)
!3633 = !DILocation(line: 467, column: 12, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3529, file: !1800, line: 467, column: 5)
!3635 = !DILocation(line: 467, column: 10, scope: !3634)
!3636 = !DILocation(line: 467, column: 17, scope: !3637)
!3637 = !DILexicalBlockFile(scope: !3638, file: !1800, discriminator: 1)
!3638 = distinct !DILexicalBlock(scope: !3634, file: !1800, line: 467, column: 5)
!3639 = !DILocation(line: 467, column: 21, scope: !3637)
!3640 = !DILocation(line: 467, column: 19, scope: !3637)
!3641 = !DILocation(line: 467, column: 5, scope: !3637)
!3642 = !DILocalVariable(name: "type", scope: !3643, file: !1800, line: 468, type: !1012)
!3643 = distinct !DILexicalBlock(scope: !3638, file: !1800, line: 467, column: 32)
!3644 = !DILocation(line: 468, column: 13, scope: !3643)
!3645 = !DILocation(line: 468, column: 31, scope: !3643)
!3646 = !DILocation(line: 468, column: 20, scope: !3643)
!3647 = !DILocalVariable(name: "id", scope: !3643, file: !1800, line: 469, type: !1012)
!3648 = !DILocation(line: 469, column: 13, scope: !3643)
!3649 = !DILocation(line: 469, column: 29, scope: !3643)
!3650 = !DILocation(line: 469, column: 18, scope: !3643)
!3651 = !DILocalVariable(name: "iid", scope: !3643, file: !1800, line: 470, type: !1012)
!3652 = !DILocation(line: 470, column: 13, scope: !3643)
!3653 = !DILocation(line: 470, column: 32, scope: !3643)
!3654 = !DILocation(line: 470, column: 19, scope: !3643)
!3655 = !DILocation(line: 470, column: 26, scope: !3643)
!3656 = !DILocalVariable(name: "position", scope: !3643, file: !1800, line: 471, type: !1012)
!3657 = !DILocation(line: 471, column: 13, scope: !3643)
!3658 = !DILocation(line: 471, column: 35, scope: !3643)
!3659 = !DILocation(line: 471, column: 24, scope: !3643)
!3660 = !DILocation(line: 474, column: 29, scope: !3643)
!3661 = !DILocation(line: 474, column: 33, scope: !3643)
!3662 = !DILocation(line: 474, column: 43, scope: !3643)
!3663 = !DILocation(line: 474, column: 49, scope: !3643)
!3664 = !DILocation(line: 474, column: 15, scope: !3643)
!3665 = !DILocation(line: 474, column: 13, scope: !3643)
!3666 = !DILocation(line: 475, column: 13, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3643, file: !1800, line: 475, column: 13)
!3668 = !DILocation(line: 475, column: 17, scope: !3667)
!3669 = !DILocation(line: 475, column: 13, scope: !3643)
!3670 = !DILocation(line: 476, column: 20, scope: !3667)
!3671 = !DILocation(line: 476, column: 13, scope: !3667)
!3672 = !DILocation(line: 477, column: 51, scope: !3643)
!3673 = !DILocation(line: 477, column: 37, scope: !3643)
!3674 = !DILocation(line: 477, column: 45, scope: !3643)
!3675 = !DILocation(line: 477, column: 41, scope: !3643)
!3676 = !DILocation(line: 477, column: 31, scope: !3643)
!3677 = !DILocation(line: 477, column: 9, scope: !3643)
!3678 = !DILocation(line: 477, column: 25, scope: !3643)
!3679 = !DILocation(line: 477, column: 13, scope: !3643)
!3680 = !DILocation(line: 477, column: 35, scope: !3643)
!3681 = !DILocation(line: 478, column: 5, scope: !3643)
!3682 = !DILocation(line: 467, column: 28, scope: !3683)
!3683 = !DILexicalBlockFile(scope: !3638, file: !1800, discriminator: 2)
!3684 = !DILocation(line: 467, column: 5, scope: !3683)
!3685 = distinct !{!3685, !3686}
!3686 = !DILocation(line: 467, column: 5, scope: !3529)
!3687 = !DILocation(line: 479, column: 9, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3529, file: !1800, line: 479, column: 9)
!3689 = !DILocation(line: 479, column: 13, scope: !3688)
!3690 = !DILocation(line: 479, column: 19, scope: !3688)
!3691 = !DILocation(line: 479, column: 24, scope: !3688)
!3692 = !DILocation(line: 479, column: 27, scope: !3688)
!3693 = !DILocation(line: 479, column: 32, scope: !3688)
!3694 = !DILocation(line: 479, column: 35, scope: !3695)
!3695 = !DILexicalBlockFile(scope: !3688, file: !1800, discriminator: 1)
!3696 = !DILocation(line: 479, column: 44, scope: !3695)
!3697 = !DILocation(line: 479, column: 9, scope: !3695)
!3698 = !DILocation(line: 480, column: 13, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !1800, line: 480, column: 13)
!3700 = distinct !DILexicalBlock(scope: !3688, file: !1800, line: 479, column: 50)
!3701 = !DILocation(line: 480, column: 20, scope: !3699)
!3702 = !DILocation(line: 480, column: 13, scope: !3700)
!3703 = !DILocation(line: 481, column: 20, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3699, file: !1800, line: 480, column: 35)
!3705 = !DILocation(line: 482, column: 9, scope: !3704)
!3706 = !DILocation(line: 483, column: 20, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3699, file: !1800, line: 482, column: 16)
!3708 = !DILocation(line: 485, column: 5, scope: !3700)
!3709 = !DILocation(line: 487, column: 9, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3529, file: !1800, line: 487, column: 9)
!3711 = !DILocation(line: 487, column: 9, scope: !3529)
!3712 = !DILocation(line: 487, column: 41, scope: !3713)
!3713 = !DILexicalBlockFile(scope: !3710, file: !1800, discriminator: 1)
!3714 = !DILocation(line: 487, column: 17, scope: !3713)
!3715 = !DILocation(line: 487, column: 24, scope: !3713)
!3716 = !DILocation(line: 487, column: 39, scope: !3713)
!3717 = !DILocation(line: 488, column: 56, scope: !3529)
!3718 = !DILocation(line: 488, column: 29, scope: !3529)
!3719 = !DILocation(line: 488, column: 33, scope: !3529)
!3720 = !DILocation(line: 488, column: 39, scope: !3529)
!3721 = !DILocation(line: 488, column: 54, scope: !3529)
!3722 = !DILocation(line: 489, column: 44, scope: !3529)
!3723 = !DILocation(line: 489, column: 23, scope: !3529)
!3724 = !DILocation(line: 489, column: 27, scope: !3529)
!3725 = !DILocation(line: 489, column: 33, scope: !3529)
!3726 = !DILocation(line: 489, column: 42, scope: !3529)
!3727 = !DILocation(line: 489, column: 5, scope: !3529)
!3728 = !DILocation(line: 489, column: 12, scope: !3529)
!3729 = !DILocation(line: 489, column: 21, scope: !3529)
!3730 = !DILocation(line: 490, column: 24, scope: !3529)
!3731 = !DILocation(line: 490, column: 5, scope: !3529)
!3732 = !DILocation(line: 490, column: 9, scope: !3529)
!3733 = !DILocation(line: 490, column: 15, scope: !3529)
!3734 = !DILocation(line: 490, column: 22, scope: !3529)
!3735 = !DILocation(line: 492, column: 9, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3529, file: !1800, line: 492, column: 9)
!3737 = !DILocation(line: 492, column: 9, scope: !3529)
!3738 = !DILocation(line: 493, column: 45, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3740, file: !1800, line: 493, column: 13)
!3740 = distinct !DILexicalBlock(scope: !3736, file: !1800, line: 492, column: 24)
!3741 = !DILocation(line: 493, column: 49, scope: !3739)
!3742 = !DILocation(line: 493, column: 20, scope: !3739)
!3743 = !DILocation(line: 493, column: 18, scope: !3739)
!3744 = !DILocation(line: 493, column: 57, scope: !3739)
!3745 = !DILocation(line: 493, column: 13, scope: !3740)
!3746 = !DILocation(line: 494, column: 20, scope: !3739)
!3747 = !DILocation(line: 494, column: 13, scope: !3739)
!3748 = !DILocation(line: 495, column: 5, scope: !3740)
!3749 = !DILocation(line: 497, column: 5, scope: !3529)
!3750 = !DILocation(line: 498, column: 1, scope: !3529)
!3751 = !DILocalVariable(name: "i", scope: !1874, file: !1875, line: 47, type: !1012)
!3752 = !DILocation(line: 47, column: 9, scope: !1874)
!3753 = !DILocalVariable(name: "t1", scope: !1874, file: !1875, line: 68, type: !1461)
!3754 = !DILocation(line: 68, column: 11, scope: !1874)
!3755 = !DILocalVariable(name: "t2", scope: !1874, file: !1875, line: 69, type: !1461)
!3756 = !DILocation(line: 69, column: 11, scope: !1874)
!3757 = !DILocalVariable(name: "t1_inc_cur", scope: !1874, file: !1875, line: 70, type: !1012)
!3758 = !DILocation(line: 70, column: 9, scope: !1874)
!3759 = !DILocalVariable(name: "t2_inc_cur", scope: !1874, file: !1875, line: 70, type: !1012)
!3760 = !DILocation(line: 70, column: 21, scope: !1874)
!3761 = !DILocalVariable(name: "t1_inc_prev", scope: !1874, file: !1875, line: 71, type: !1012)
!3762 = !DILocation(line: 71, column: 9, scope: !1874)
!3763 = !DILocalVariable(name: "t2_inc_prev", scope: !1874, file: !1875, line: 72, type: !1012)
!3764 = !DILocation(line: 72, column: 9, scope: !1874)
!3765 = !DILocation(line: 74, column: 12, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !1874, file: !1875, line: 74, column: 5)
!3767 = !DILocation(line: 74, column: 10, scope: !3766)
!3768 = !DILocation(line: 74, column: 17, scope: !3769)
!3769 = !DILexicalBlockFile(scope: !3770, file: !1875, discriminator: 1)
!3770 = distinct !DILexicalBlock(scope: !3766, file: !1875, line: 74, column: 5)
!3771 = !DILocation(line: 74, column: 19, scope: !3769)
!3772 = !DILocation(line: 74, column: 5, scope: !3769)
!3773 = !DILocation(line: 75, column: 27, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3770, file: !1875, line: 74, column: 31)
!3775 = !DILocation(line: 75, column: 29, scope: !3774)
!3776 = !DILocation(line: 75, column: 24, scope: !3774)
!3777 = !DILocation(line: 75, column: 20, scope: !3774)
!3778 = !DILocation(line: 76, column: 29, scope: !3774)
!3779 = !DILocation(line: 76, column: 28, scope: !3774)
!3780 = !DILocation(line: 76, column: 25, scope: !3774)
!3781 = !DILocation(line: 76, column: 32, scope: !3774)
!3782 = !DILocation(line: 76, column: 20, scope: !3774)
!3783 = !DILocation(line: 77, column: 13, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3774, file: !1875, line: 77, column: 13)
!3785 = !DILocation(line: 77, column: 26, scope: !3784)
!3786 = !DILocation(line: 77, column: 24, scope: !3784)
!3787 = !DILocation(line: 77, column: 13, scope: !3774)
!3788 = !DILocation(line: 78, column: 16, scope: !3784)
!3789 = !DILocation(line: 78, column: 13, scope: !3784)
!3790 = !DILocation(line: 79, column: 13, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3774, file: !1875, line: 79, column: 13)
!3792 = !DILocation(line: 79, column: 26, scope: !3791)
!3793 = !DILocation(line: 79, column: 24, scope: !3791)
!3794 = !DILocation(line: 79, column: 13, scope: !3774)
!3795 = !DILocation(line: 80, column: 16, scope: !3791)
!3796 = !DILocation(line: 80, column: 13, scope: !3791)
!3797 = !DILocation(line: 84, column: 32, scope: !3774)
!3798 = !DILocation(line: 84, column: 46, scope: !3774)
!3799 = !DILocation(line: 84, column: 37, scope: !3774)
!3800 = !DILocation(line: 84, column: 35, scope: !3774)
!3801 = !DILocation(line: 84, column: 27, scope: !3774)
!3802 = !DILocation(line: 84, column: 9, scope: !3774)
!3803 = !DILocation(line: 84, column: 30, scope: !3774)
!3804 = !DILocation(line: 85, column: 33, scope: !3774)
!3805 = !DILocation(line: 85, column: 47, scope: !3774)
!3806 = !DILocation(line: 85, column: 38, scope: !3774)
!3807 = !DILocation(line: 85, column: 36, scope: !3774)
!3808 = !DILocation(line: 85, column: 28, scope: !3774)
!3809 = !DILocation(line: 85, column: 9, scope: !3774)
!3810 = !DILocation(line: 85, column: 31, scope: !3774)
!3811 = !DILocation(line: 86, column: 23, scope: !3774)
!3812 = !DILocation(line: 86, column: 21, scope: !3774)
!3813 = !DILocation(line: 87, column: 23, scope: !3774)
!3814 = !DILocation(line: 87, column: 21, scope: !3774)
!3815 = !DILocation(line: 88, column: 5, scope: !3774)
!3816 = !DILocation(line: 74, column: 27, scope: !3817)
!3817 = !DILexicalBlockFile(scope: !3770, file: !1875, discriminator: 2)
!3818 = !DILocation(line: 74, column: 5, scope: !3817)
!3819 = distinct !{!3819, !3820}
!3820 = !DILocation(line: 74, column: 5, scope: !1874)
!3821 = !DILocation(line: 89, column: 1, scope: !1874)
!3822 = distinct !DISubprogram(name: "imdct_and_windowing", scope: !1800, file: !1800, line: 2639, type: !2608, isLocal: true, isDefinition: true, scopeLine: 2640, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!3823 = !DILocalVariable(name: "ac", arg: 1, scope: !3822, file: !1800, line: 2639, type: !2071)
!3824 = !DILocation(line: 2639, column: 45, scope: !3822)
!3825 = !DILocalVariable(name: "sce", arg: 2, scope: !3822, file: !1800, line: 2639, type: !1906)
!3826 = !DILocation(line: 2639, column: 71, scope: !3822)
!3827 = !DILocalVariable(name: "ics", scope: !3822, file: !1800, line: 2641, type: !2616)
!3828 = !DILocation(line: 2641, column: 30, scope: !3822)
!3829 = !DILocation(line: 2641, column: 37, scope: !3822)
!3830 = !DILocation(line: 2641, column: 42, scope: !3822)
!3831 = !DILocalVariable(name: "in", scope: !3822, file: !1800, line: 2642, type: !1032)
!3832 = !DILocation(line: 2642, column: 15, scope: !3822)
!3833 = !DILocation(line: 2642, column: 20, scope: !3822)
!3834 = !DILocation(line: 2642, column: 25, scope: !3822)
!3835 = !DILocalVariable(name: "out", scope: !3822, file: !1800, line: 2643, type: !1032)
!3836 = !DILocation(line: 2643, column: 15, scope: !3822)
!3837 = !DILocation(line: 2643, column: 21, scope: !3822)
!3838 = !DILocation(line: 2643, column: 26, scope: !3822)
!3839 = !DILocalVariable(name: "saved", scope: !3822, file: !1800, line: 2644, type: !1032)
!3840 = !DILocation(line: 2644, column: 15, scope: !3822)
!3841 = !DILocation(line: 2644, column: 23, scope: !3822)
!3842 = !DILocation(line: 2644, column: 28, scope: !3822)
!3843 = !DILocalVariable(name: "swindow", scope: !3822, file: !1800, line: 2645, type: !1895)
!3844 = !DILocation(line: 2645, column: 21, scope: !3822)
!3845 = !DILocation(line: 2645, column: 31, scope: !3822)
!3846 = !DILocation(line: 2645, column: 36, scope: !3822)
!3847 = !DILocalVariable(name: "lwindow_prev", scope: !3822, file: !1800, line: 2646, type: !1895)
!3848 = !DILocation(line: 2646, column: 21, scope: !3822)
!3849 = !DILocation(line: 2646, column: 36, scope: !3822)
!3850 = !DILocation(line: 2646, column: 41, scope: !3822)
!3851 = !DILocalVariable(name: "swindow_prev", scope: !3822, file: !1800, line: 2647, type: !1895)
!3852 = !DILocation(line: 2647, column: 21, scope: !3822)
!3853 = !DILocation(line: 2647, column: 36, scope: !3822)
!3854 = !DILocation(line: 2647, column: 41, scope: !3822)
!3855 = !DILocalVariable(name: "buf", scope: !3822, file: !1800, line: 2648, type: !1032)
!3856 = !DILocation(line: 2648, column: 15, scope: !3822)
!3857 = !DILocation(line: 2648, column: 21, scope: !3822)
!3858 = !DILocation(line: 2648, column: 25, scope: !3822)
!3859 = !DILocalVariable(name: "temp", scope: !3822, file: !1800, line: 2649, type: !1032)
!3860 = !DILocation(line: 2649, column: 15, scope: !3822)
!3861 = !DILocation(line: 2649, column: 22, scope: !3822)
!3862 = !DILocation(line: 2649, column: 26, scope: !3822)
!3863 = !DILocalVariable(name: "i", scope: !3822, file: !1800, line: 2650, type: !1012)
!3864 = !DILocation(line: 2650, column: 9, scope: !3822)
!3865 = !DILocation(line: 2653, column: 9, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3822, file: !1800, line: 2653, column: 9)
!3867 = !DILocation(line: 2653, column: 14, scope: !3866)
!3868 = !DILocation(line: 2653, column: 33, scope: !3866)
!3869 = !DILocation(line: 2653, column: 9, scope: !3822)
!3870 = !DILocation(line: 2654, column: 16, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3872, file: !1800, line: 2654, column: 9)
!3872 = distinct !DILexicalBlock(scope: !3866, file: !1800, line: 2653, column: 58)
!3873 = !DILocation(line: 2654, column: 14, scope: !3871)
!3874 = !DILocation(line: 2654, column: 21, scope: !3875)
!3875 = !DILexicalBlockFile(scope: !3876, file: !1800, discriminator: 1)
!3876 = distinct !DILexicalBlock(scope: !3871, file: !1800, line: 2654, column: 9)
!3877 = !DILocation(line: 2654, column: 23, scope: !3875)
!3878 = !DILocation(line: 2654, column: 9, scope: !3875)
!3879 = !DILocation(line: 2655, column: 13, scope: !3876)
!3880 = !DILocation(line: 2655, column: 17, scope: !3876)
!3881 = !DILocation(line: 2655, column: 28, scope: !3876)
!3882 = !DILocation(line: 2655, column: 40, scope: !3876)
!3883 = !DILocation(line: 2655, column: 44, scope: !3876)
!3884 = !DILocation(line: 2655, column: 56, scope: !3876)
!3885 = !DILocation(line: 2655, column: 62, scope: !3876)
!3886 = !DILocation(line: 2655, column: 60, scope: !3876)
!3887 = !DILocation(line: 2655, column: 65, scope: !3876)
!3888 = !DILocation(line: 2655, column: 70, scope: !3876)
!3889 = !DILocation(line: 2655, column: 68, scope: !3876)
!3890 = !DILocation(line: 2654, column: 33, scope: !3891)
!3891 = !DILexicalBlockFile(scope: !3876, file: !1800, discriminator: 2)
!3892 = !DILocation(line: 2654, column: 9, scope: !3891)
!3893 = distinct !{!3893, !3894}
!3894 = !DILocation(line: 2654, column: 9, scope: !3872)
!3895 = !DILocation(line: 2656, column: 5, scope: !3872)
!3896 = !DILocation(line: 2657, column: 9, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3866, file: !1800, line: 2656, column: 12)
!3898 = !DILocation(line: 2657, column: 13, scope: !3897)
!3899 = !DILocation(line: 2657, column: 18, scope: !3897)
!3900 = !DILocation(line: 2657, column: 30, scope: !3897)
!3901 = !DILocation(line: 2657, column: 34, scope: !3897)
!3902 = !DILocation(line: 2657, column: 40, scope: !3897)
!3903 = !DILocation(line: 2657, column: 45, scope: !3897)
!3904 = !DILocation(line: 2659, column: 15, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3897, file: !1800, line: 2659, column: 9)
!3906 = !DILocation(line: 2659, column: 14, scope: !3905)
!3907 = !DILocation(line: 2659, column: 19, scope: !3908)
!3908 = !DILexicalBlockFile(scope: !3909, file: !1800, discriminator: 1)
!3909 = distinct !DILexicalBlock(scope: !3905, file: !1800, line: 2659, column: 9)
!3910 = !DILocation(line: 2659, column: 20, scope: !3908)
!3911 = !DILocation(line: 2659, column: 9, scope: !3908)
!3912 = !DILocation(line: 2660, column: 25, scope: !3909)
!3913 = !DILocation(line: 2660, column: 21, scope: !3909)
!3914 = !DILocation(line: 2660, column: 28, scope: !3909)
!3915 = !DILocation(line: 2660, column: 33, scope: !3909)
!3916 = !DILocation(line: 2660, column: 15, scope: !3909)
!3917 = !DILocation(line: 2660, column: 11, scope: !3909)
!3918 = !DILocation(line: 2660, column: 18, scope: !3909)
!3919 = !DILocation(line: 2659, column: 28, scope: !3920)
!3920 = !DILexicalBlockFile(scope: !3909, file: !1800, discriminator: 2)
!3921 = !DILocation(line: 2659, column: 9, scope: !3920)
!3922 = distinct !{!3922, !3923}
!3923 = !DILocation(line: 2659, column: 9, scope: !3897)
!3924 = !DILocation(line: 2670, column: 10, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3822, file: !1800, line: 2670, column: 9)
!3926 = !DILocation(line: 2670, column: 15, scope: !3925)
!3927 = !DILocation(line: 2670, column: 34, scope: !3925)
!3928 = !DILocation(line: 2670, column: 56, scope: !3925)
!3929 = !DILocation(line: 2670, column: 59, scope: !3930)
!3930 = !DILexicalBlockFile(scope: !3925, file: !1800, discriminator: 1)
!3931 = !DILocation(line: 2670, column: 64, scope: !3930)
!3932 = !DILocation(line: 2670, column: 83, scope: !3930)
!3933 = !DILocation(line: 2670, column: 106, scope: !3930)
!3934 = !DILocation(line: 2671, column: 14, scope: !3925)
!3935 = !DILocation(line: 2671, column: 19, scope: !3925)
!3936 = !DILocation(line: 2671, column: 38, scope: !3925)
!3937 = !DILocation(line: 2671, column: 60, scope: !3925)
!3938 = !DILocation(line: 2671, column: 63, scope: !3930)
!3939 = !DILocation(line: 2671, column: 68, scope: !3930)
!3940 = !DILocation(line: 2671, column: 87, scope: !3930)
!3941 = !DILocation(line: 2670, column: 9, scope: !3942)
!3942 = !DILexicalBlockFile(scope: !3822, file: !1800, discriminator: 2)
!3943 = !DILocation(line: 2672, column: 9, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3925, file: !1800, line: 2671, column: 112)
!3945 = !DILocation(line: 2672, column: 13, scope: !3944)
!3946 = !DILocation(line: 2672, column: 19, scope: !3944)
!3947 = !DILocation(line: 2672, column: 39, scope: !3944)
!3948 = !DILocation(line: 2672, column: 44, scope: !3944)
!3949 = !DILocation(line: 2672, column: 51, scope: !3944)
!3950 = !DILocation(line: 2672, column: 56, scope: !3944)
!3951 = !DILocation(line: 2673, column: 5, scope: !3944)
!3952 = !DILocation(line: 2674, column: 17, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3925, file: !1800, line: 2673, column: 12)
!3954 = !DILocation(line: 2674, column: 9, scope: !3953)
!3955 = !DILocation(line: 2674, column: 22, scope: !3953)
!3956 = !DILocation(line: 2676, column: 13, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3953, file: !1800, line: 2676, column: 13)
!3958 = !DILocation(line: 2676, column: 18, scope: !3957)
!3959 = !DILocation(line: 2676, column: 37, scope: !3957)
!3960 = !DILocation(line: 2676, column: 13, scope: !3953)
!3961 = !DILocation(line: 2677, column: 13, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3957, file: !1800, line: 2676, column: 62)
!3963 = !DILocation(line: 2677, column: 17, scope: !3962)
!3964 = !DILocation(line: 2677, column: 23, scope: !3962)
!3965 = !DILocation(line: 2677, column: 42, scope: !3962)
!3966 = !DILocation(line: 2677, column: 46, scope: !3962)
!3967 = !DILocation(line: 2677, column: 52, scope: !3962)
!3968 = !DILocation(line: 2677, column: 61, scope: !3962)
!3969 = !DILocation(line: 2677, column: 67, scope: !3962)
!3970 = !DILocation(line: 2677, column: 74, scope: !3962)
!3971 = !DILocation(line: 2677, column: 78, scope: !3962)
!3972 = !DILocation(line: 2677, column: 87, scope: !3962)
!3973 = !DILocation(line: 2678, column: 13, scope: !3962)
!3974 = !DILocation(line: 2678, column: 17, scope: !3962)
!3975 = !DILocation(line: 2678, column: 23, scope: !3962)
!3976 = !DILocation(line: 2678, column: 42, scope: !3962)
!3977 = !DILocation(line: 2678, column: 46, scope: !3962)
!3978 = !DILocation(line: 2678, column: 52, scope: !3962)
!3979 = !DILocation(line: 2678, column: 61, scope: !3962)
!3980 = !DILocation(line: 2678, column: 65, scope: !3962)
!3981 = !DILocation(line: 2678, column: 73, scope: !3962)
!3982 = !DILocation(line: 2678, column: 79, scope: !3962)
!3983 = !DILocation(line: 2678, column: 83, scope: !3962)
!3984 = !DILocation(line: 2678, column: 92, scope: !3962)
!3985 = !DILocation(line: 2679, column: 13, scope: !3962)
!3986 = !DILocation(line: 2679, column: 17, scope: !3962)
!3987 = !DILocation(line: 2679, column: 23, scope: !3962)
!3988 = !DILocation(line: 2679, column: 42, scope: !3962)
!3989 = !DILocation(line: 2679, column: 46, scope: !3962)
!3990 = !DILocation(line: 2679, column: 52, scope: !3962)
!3991 = !DILocation(line: 2679, column: 61, scope: !3962)
!3992 = !DILocation(line: 2679, column: 65, scope: !3962)
!3993 = !DILocation(line: 2679, column: 73, scope: !3962)
!3994 = !DILocation(line: 2679, column: 79, scope: !3962)
!3995 = !DILocation(line: 2679, column: 83, scope: !3962)
!3996 = !DILocation(line: 2679, column: 92, scope: !3962)
!3997 = !DILocation(line: 2680, column: 13, scope: !3962)
!3998 = !DILocation(line: 2680, column: 17, scope: !3962)
!3999 = !DILocation(line: 2680, column: 23, scope: !3962)
!4000 = !DILocation(line: 2680, column: 42, scope: !3962)
!4001 = !DILocation(line: 2680, column: 46, scope: !3962)
!4002 = !DILocation(line: 2680, column: 52, scope: !3962)
!4003 = !DILocation(line: 2680, column: 61, scope: !3962)
!4004 = !DILocation(line: 2680, column: 65, scope: !3962)
!4005 = !DILocation(line: 2680, column: 73, scope: !3962)
!4006 = !DILocation(line: 2680, column: 79, scope: !3962)
!4007 = !DILocation(line: 2680, column: 83, scope: !3962)
!4008 = !DILocation(line: 2680, column: 92, scope: !3962)
!4009 = !DILocation(line: 2681, column: 13, scope: !3962)
!4010 = !DILocation(line: 2681, column: 17, scope: !3962)
!4011 = !DILocation(line: 2681, column: 23, scope: !3962)
!4012 = !DILocation(line: 2681, column: 42, scope: !3962)
!4013 = !DILocation(line: 2681, column: 48, scope: !3962)
!4014 = !DILocation(line: 2681, column: 52, scope: !3962)
!4015 = !DILocation(line: 2681, column: 60, scope: !3962)
!4016 = !DILocation(line: 2681, column: 66, scope: !3962)
!4017 = !DILocation(line: 2681, column: 70, scope: !3962)
!4018 = !DILocation(line: 2681, column: 79, scope: !3962)
!4019 = !DILocation(line: 2682, column: 21, scope: !3962)
!4020 = !DILocation(line: 2682, column: 25, scope: !3962)
!4021 = !DILocation(line: 2682, column: 31, scope: !3962)
!4022 = !DILocation(line: 2682, column: 13, scope: !3962)
!4023 = !DILocation(line: 2682, column: 40, scope: !3962)
!4024 = !DILocation(line: 2683, column: 9, scope: !3962)
!4025 = !DILocation(line: 2684, column: 13, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !3957, file: !1800, line: 2683, column: 16)
!4027 = !DILocation(line: 2684, column: 17, scope: !4026)
!4028 = !DILocation(line: 2684, column: 23, scope: !4026)
!4029 = !DILocation(line: 2684, column: 42, scope: !4026)
!4030 = !DILocation(line: 2684, column: 46, scope: !4026)
!4031 = !DILocation(line: 2684, column: 53, scope: !4026)
!4032 = !DILocation(line: 2684, column: 59, scope: !4026)
!4033 = !DILocation(line: 2684, column: 66, scope: !4026)
!4034 = !DILocation(line: 2684, column: 71, scope: !4026)
!4035 = !DILocation(line: 2685, column: 21, scope: !4026)
!4036 = !DILocation(line: 2685, column: 25, scope: !4026)
!4037 = !DILocation(line: 2685, column: 13, scope: !4026)
!4038 = !DILocation(line: 2685, column: 32, scope: !4026)
!4039 = !DILocation(line: 2685, column: 36, scope: !4026)
!4040 = !DILocation(line: 2690, column: 9, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !3822, file: !1800, line: 2690, column: 9)
!4042 = !DILocation(line: 2690, column: 14, scope: !4041)
!4043 = !DILocation(line: 2690, column: 33, scope: !4041)
!4044 = !DILocation(line: 2690, column: 9, scope: !3822)
!4045 = !DILocation(line: 2691, column: 17, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4041, file: !1800, line: 2690, column: 58)
!4047 = !DILocation(line: 2691, column: 9, scope: !4046)
!4048 = !DILocation(line: 2691, column: 24, scope: !4046)
!4049 = !DILocation(line: 2691, column: 29, scope: !4046)
!4050 = !DILocation(line: 2692, column: 9, scope: !4046)
!4051 = !DILocation(line: 2692, column: 13, scope: !4046)
!4052 = !DILocation(line: 2692, column: 19, scope: !4046)
!4053 = !DILocation(line: 2692, column: 38, scope: !4046)
!4054 = !DILocation(line: 2692, column: 44, scope: !4046)
!4055 = !DILocation(line: 2692, column: 50, scope: !4046)
!4056 = !DILocation(line: 2692, column: 54, scope: !4046)
!4057 = !DILocation(line: 2692, column: 62, scope: !4046)
!4058 = !DILocation(line: 2692, column: 68, scope: !4046)
!4059 = !DILocation(line: 2692, column: 72, scope: !4046)
!4060 = !DILocation(line: 2692, column: 81, scope: !4046)
!4061 = !DILocation(line: 2693, column: 9, scope: !4046)
!4062 = !DILocation(line: 2693, column: 13, scope: !4046)
!4063 = !DILocation(line: 2693, column: 19, scope: !4046)
!4064 = !DILocation(line: 2693, column: 38, scope: !4046)
!4065 = !DILocation(line: 2693, column: 44, scope: !4046)
!4066 = !DILocation(line: 2693, column: 51, scope: !4046)
!4067 = !DILocation(line: 2693, column: 55, scope: !4046)
!4068 = !DILocation(line: 2693, column: 63, scope: !4046)
!4069 = !DILocation(line: 2693, column: 69, scope: !4046)
!4070 = !DILocation(line: 2693, column: 73, scope: !4046)
!4071 = !DILocation(line: 2693, column: 82, scope: !4046)
!4072 = !DILocation(line: 2694, column: 9, scope: !4046)
!4073 = !DILocation(line: 2694, column: 13, scope: !4046)
!4074 = !DILocation(line: 2694, column: 19, scope: !4046)
!4075 = !DILocation(line: 2694, column: 38, scope: !4046)
!4076 = !DILocation(line: 2694, column: 44, scope: !4046)
!4077 = !DILocation(line: 2694, column: 51, scope: !4046)
!4078 = !DILocation(line: 2694, column: 55, scope: !4046)
!4079 = !DILocation(line: 2694, column: 63, scope: !4046)
!4080 = !DILocation(line: 2694, column: 69, scope: !4046)
!4081 = !DILocation(line: 2694, column: 73, scope: !4046)
!4082 = !DILocation(line: 2694, column: 82, scope: !4046)
!4083 = !DILocation(line: 2695, column: 17, scope: !4046)
!4084 = !DILocation(line: 2695, column: 23, scope: !4046)
!4085 = !DILocation(line: 2695, column: 9, scope: !4046)
!4086 = !DILocation(line: 2695, column: 30, scope: !4046)
!4087 = !DILocation(line: 2695, column: 34, scope: !4046)
!4088 = !DILocation(line: 2695, column: 42, scope: !4046)
!4089 = !DILocation(line: 2696, column: 5, scope: !4046)
!4090 = !DILocation(line: 2696, column: 16, scope: !4091)
!4091 = !DILexicalBlockFile(scope: !4092, file: !1800, discriminator: 1)
!4092 = distinct !DILexicalBlock(scope: !4041, file: !1800, line: 2696, column: 16)
!4093 = !DILocation(line: 2696, column: 21, scope: !4091)
!4094 = !DILocation(line: 2696, column: 40, scope: !4091)
!4095 = !DILocation(line: 2697, column: 17, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4092, file: !1800, line: 2696, column: 64)
!4097 = !DILocation(line: 2697, column: 9, scope: !4096)
!4098 = !DILocation(line: 2697, column: 24, scope: !4096)
!4099 = !DILocation(line: 2697, column: 28, scope: !4096)
!4100 = !DILocation(line: 2698, column: 17, scope: !4096)
!4101 = !DILocation(line: 2698, column: 23, scope: !4096)
!4102 = !DILocation(line: 2698, column: 9, scope: !4096)
!4103 = !DILocation(line: 2698, column: 30, scope: !4096)
!4104 = !DILocation(line: 2698, column: 34, scope: !4096)
!4105 = !DILocation(line: 2698, column: 42, scope: !4096)
!4106 = !DILocation(line: 2699, column: 5, scope: !4096)
!4107 = !DILocation(line: 2700, column: 17, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4092, file: !1800, line: 2699, column: 12)
!4109 = !DILocation(line: 2700, column: 9, scope: !4108)
!4110 = !DILocation(line: 2700, column: 24, scope: !4108)
!4111 = !DILocation(line: 2700, column: 28, scope: !4108)
!4112 = !DILocation(line: 2702, column: 1, scope: !3822)
!4113 = distinct !DISubprogram(name: "apply_ltp", scope: !1800, file: !1800, line: 2569, type: !2608, isLocal: true, isDefinition: true, scopeLine: 2570, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!4114 = !DILocalVariable(name: "ac", arg: 1, scope: !4113, file: !1800, line: 2569, type: !2071)
!4115 = !DILocation(line: 2569, column: 35, scope: !4113)
!4116 = !DILocalVariable(name: "sce", arg: 2, scope: !4113, file: !1800, line: 2569, type: !1906)
!4117 = !DILocation(line: 2569, column: 61, scope: !4113)
!4118 = !DILocalVariable(name: "ltp", scope: !4113, file: !1800, line: 2571, type: !4119)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64, align: 64)
!4120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1923)
!4121 = !DILocation(line: 2571, column: 31, scope: !4113)
!4122 = !DILocation(line: 2571, column: 38, scope: !4113)
!4123 = !DILocation(line: 2571, column: 43, scope: !4113)
!4124 = !DILocation(line: 2571, column: 47, scope: !4113)
!4125 = !DILocalVariable(name: "offsets", scope: !4113, file: !1800, line: 2572, type: !1935)
!4126 = !DILocation(line: 2572, column: 21, scope: !4113)
!4127 = !DILocation(line: 2572, column: 31, scope: !4113)
!4128 = !DILocation(line: 2572, column: 36, scope: !4113)
!4129 = !DILocation(line: 2572, column: 40, scope: !4113)
!4130 = !DILocalVariable(name: "i", scope: !4113, file: !1800, line: 2573, type: !1012)
!4131 = !DILocation(line: 2573, column: 9, scope: !4113)
!4132 = !DILocalVariable(name: "sfb", scope: !4113, file: !1800, line: 2573, type: !1012)
!4133 = !DILocation(line: 2573, column: 12, scope: !4113)
!4134 = !DILocation(line: 2575, column: 9, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4113, file: !1800, line: 2575, column: 9)
!4136 = !DILocation(line: 2575, column: 14, scope: !4135)
!4137 = !DILocation(line: 2575, column: 18, scope: !4135)
!4138 = !DILocation(line: 2575, column: 37, scope: !4135)
!4139 = !DILocation(line: 2575, column: 9, scope: !4113)
!4140 = !DILocalVariable(name: "predTime", scope: !4141, file: !1800, line: 2576, type: !1032)
!4141 = distinct !DILexicalBlock(scope: !4135, file: !1800, line: 2575, column: 62)
!4142 = !DILocation(line: 2576, column: 19, scope: !4141)
!4143 = !DILocation(line: 2576, column: 30, scope: !4141)
!4144 = !DILocation(line: 2576, column: 35, scope: !4141)
!4145 = !DILocalVariable(name: "predFreq", scope: !4141, file: !1800, line: 2577, type: !1032)
!4146 = !DILocation(line: 2577, column: 19, scope: !4141)
!4147 = !DILocation(line: 2577, column: 30, scope: !4141)
!4148 = !DILocation(line: 2577, column: 34, scope: !4141)
!4149 = !DILocalVariable(name: "num_samples", scope: !4141, file: !1800, line: 2578, type: !1809)
!4150 = !DILocation(line: 2578, column: 17, scope: !4141)
!4151 = !DILocation(line: 2580, column: 13, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4141, file: !1800, line: 2580, column: 13)
!4153 = !DILocation(line: 2580, column: 18, scope: !4152)
!4154 = !DILocation(line: 2580, column: 22, scope: !4152)
!4155 = !DILocation(line: 2580, column: 13, scope: !4141)
!4156 = !DILocation(line: 2581, column: 27, scope: !4152)
!4157 = !DILocation(line: 2581, column: 32, scope: !4152)
!4158 = !DILocation(line: 2581, column: 36, scope: !4152)
!4159 = !DILocation(line: 2581, column: 25, scope: !4152)
!4160 = !DILocation(line: 2581, column: 13, scope: !4152)
!4161 = !DILocation(line: 2582, column: 16, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4141, file: !1800, line: 2582, column: 9)
!4163 = !DILocation(line: 2582, column: 14, scope: !4162)
!4164 = !DILocation(line: 2582, column: 21, scope: !4165)
!4165 = !DILexicalBlockFile(scope: !4166, file: !1800, discriminator: 1)
!4166 = distinct !DILexicalBlock(scope: !4162, file: !1800, line: 2582, column: 9)
!4167 = !DILocation(line: 2582, column: 25, scope: !4165)
!4168 = !DILocation(line: 2582, column: 23, scope: !4165)
!4169 = !DILocation(line: 2582, column: 9, scope: !4165)
!4170 = !DILocation(line: 2583, column: 59, scope: !4166)
!4171 = !DILocation(line: 2583, column: 61, scope: !4166)
!4172 = !DILocation(line: 2583, column: 70, scope: !4166)
!4173 = !DILocation(line: 2583, column: 75, scope: !4166)
!4174 = !DILocation(line: 2583, column: 68, scope: !4166)
!4175 = !DILocation(line: 2583, column: 44, scope: !4166)
!4176 = !DILocation(line: 2583, column: 49, scope: !4166)
!4177 = !DILocation(line: 2583, column: 34, scope: !4166)
!4178 = !DILocation(line: 2583, column: 84, scope: !4166)
!4179 = !DILocation(line: 2583, column: 89, scope: !4166)
!4180 = !DILocation(line: 2583, column: 83, scope: !4166)
!4181 = !DILocation(line: 2583, column: 81, scope: !4166)
!4182 = !DILocation(line: 2583, column: 95, scope: !4166)
!4183 = !DILocation(line: 2583, column: 109, scope: !4166)
!4184 = !DILocation(line: 2583, column: 27, scope: !4166)
!4185 = !DILocation(line: 2583, column: 22, scope: !4166)
!4186 = !DILocation(line: 2583, column: 13, scope: !4166)
!4187 = !DILocation(line: 2583, column: 25, scope: !4166)
!4188 = !DILocation(line: 2582, column: 39, scope: !4189)
!4189 = !DILexicalBlockFile(scope: !4166, file: !1800, discriminator: 2)
!4190 = !DILocation(line: 2582, column: 9, scope: !4189)
!4191 = distinct !{!4191, !4192}
!4192 = !DILocation(line: 2582, column: 9, scope: !4141)
!4193 = !DILocation(line: 2584, column: 26, scope: !4141)
!4194 = !DILocation(line: 2584, column: 17, scope: !4141)
!4195 = !DILocation(line: 2584, column: 9, scope: !4141)
!4196 = !DILocation(line: 2584, column: 41, scope: !4141)
!4197 = !DILocation(line: 2584, column: 39, scope: !4141)
!4198 = !DILocation(line: 2584, column: 33, scope: !4141)
!4199 = !DILocation(line: 2584, column: 44, scope: !4141)
!4200 = !DILocation(line: 2586, column: 9, scope: !4141)
!4201 = !DILocation(line: 2586, column: 13, scope: !4141)
!4202 = !DILocation(line: 2586, column: 36, scope: !4141)
!4203 = !DILocation(line: 2586, column: 40, scope: !4141)
!4204 = !DILocation(line: 2586, column: 50, scope: !4141)
!4205 = !DILocation(line: 2586, column: 61, scope: !4141)
!4206 = !DILocation(line: 2586, column: 66, scope: !4141)
!4207 = !DILocation(line: 2588, column: 13, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4141, file: !1800, line: 2588, column: 13)
!4209 = !DILocation(line: 2588, column: 18, scope: !4208)
!4210 = !DILocation(line: 2588, column: 22, scope: !4208)
!4211 = !DILocation(line: 2588, column: 13, scope: !4141)
!4212 = !DILocation(line: 2589, column: 13, scope: !4208)
!4213 = !DILocation(line: 2589, column: 17, scope: !4208)
!4214 = !DILocation(line: 2589, column: 27, scope: !4208)
!4215 = !DILocation(line: 2589, column: 38, scope: !4208)
!4216 = !DILocation(line: 2589, column: 43, scope: !4208)
!4217 = !DILocation(line: 2589, column: 49, scope: !4208)
!4218 = !DILocation(line: 2589, column: 54, scope: !4208)
!4219 = !DILocation(line: 2591, column: 18, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4141, file: !1800, line: 2591, column: 9)
!4221 = !DILocation(line: 2591, column: 14, scope: !4220)
!4222 = !DILocation(line: 2591, column: 23, scope: !4223)
!4223 = !DILexicalBlockFile(scope: !4224, file: !1800, discriminator: 1)
!4224 = distinct !DILexicalBlock(scope: !4220, file: !1800, line: 2591, column: 9)
!4225 = !DILocation(line: 2591, column: 31, scope: !4223)
!4226 = !DILocation(line: 2591, column: 36, scope: !4223)
!4227 = !DILocation(line: 2591, column: 40, scope: !4223)
!4228 = !DILocation(line: 2591, column: 30, scope: !4223)
!4229 = !DILocation(line: 2591, column: 49, scope: !4223)
!4230 = !DILocation(line: 2591, column: 30, scope: !4231)
!4231 = !DILexicalBlockFile(scope: !4224, file: !1800, discriminator: 2)
!4232 = !DILocation(line: 2591, column: 66, scope: !4233)
!4233 = !DILexicalBlockFile(scope: !4224, file: !1800, discriminator: 3)
!4234 = !DILocation(line: 2591, column: 71, scope: !4233)
!4235 = !DILocation(line: 2591, column: 75, scope: !4233)
!4236 = !DILocation(line: 2591, column: 65, scope: !4233)
!4237 = !DILocation(line: 2591, column: 30, scope: !4233)
!4238 = !DILocation(line: 2591, column: 30, scope: !4239)
!4239 = !DILexicalBlockFile(scope: !4224, file: !1800, discriminator: 4)
!4240 = !DILocation(line: 2591, column: 27, scope: !4239)
!4241 = !DILocation(line: 2591, column: 9, scope: !4239)
!4242 = !DILocation(line: 2592, column: 27, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4224, file: !1800, line: 2592, column: 17)
!4244 = !DILocation(line: 2592, column: 17, scope: !4243)
!4245 = !DILocation(line: 2592, column: 22, scope: !4243)
!4246 = !DILocation(line: 2592, column: 17, scope: !4224)
!4247 = !DILocation(line: 2593, column: 34, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4243, file: !1800, line: 2593, column: 17)
!4249 = !DILocation(line: 2593, column: 26, scope: !4248)
!4250 = !DILocation(line: 2593, column: 24, scope: !4248)
!4251 = !DILocation(line: 2593, column: 22, scope: !4248)
!4252 = !DILocation(line: 2593, column: 40, scope: !4253)
!4253 = !DILexicalBlockFile(scope: !4254, file: !1800, discriminator: 1)
!4254 = distinct !DILexicalBlock(scope: !4248, file: !1800, line: 2593, column: 17)
!4255 = !DILocation(line: 2593, column: 52, scope: !4253)
!4256 = !DILocation(line: 2593, column: 56, scope: !4253)
!4257 = !DILocation(line: 2593, column: 44, scope: !4253)
!4258 = !DILocation(line: 2593, column: 42, scope: !4253)
!4259 = !DILocation(line: 2593, column: 17, scope: !4253)
!4260 = !DILocation(line: 2594, column: 59, scope: !4254)
!4261 = !DILocation(line: 2594, column: 50, scope: !4254)
!4262 = !DILocation(line: 2594, column: 33, scope: !4254)
!4263 = !DILocation(line: 2594, column: 21, scope: !4254)
!4264 = !DILocation(line: 2594, column: 26, scope: !4254)
!4265 = !DILocation(line: 2594, column: 36, scope: !4254)
!4266 = !DILocation(line: 2593, column: 63, scope: !4267)
!4267 = !DILexicalBlockFile(scope: !4254, file: !1800, discriminator: 2)
!4268 = !DILocation(line: 2593, column: 17, scope: !4267)
!4269 = distinct !{!4269, !4270}
!4270 = !DILocation(line: 2593, column: 17, scope: !4243)
!4271 = !DILocation(line: 2594, column: 60, scope: !4272)
!4272 = !DILexicalBlockFile(scope: !4248, file: !1800, discriminator: 1)
!4273 = !DILocation(line: 2592, column: 30, scope: !4274)
!4274 = !DILexicalBlockFile(scope: !4243, file: !1800, discriminator: 1)
!4275 = !DILocation(line: 2591, column: 89, scope: !4276)
!4276 = !DILexicalBlockFile(scope: !4224, file: !1800, discriminator: 5)
!4277 = !DILocation(line: 2591, column: 9, scope: !4276)
!4278 = distinct !{!4278, !4279}
!4279 = !DILocation(line: 2591, column: 9, scope: !4141)
!4280 = !DILocation(line: 2595, column: 5, scope: !4141)
!4281 = !DILocation(line: 2596, column: 1, scope: !4113)
!4282 = distinct !DISubprogram(name: "apply_tns", scope: !1800, file: !1800, line: 2486, type: !2613, isLocal: true, isDefinition: true, scopeLine: 2488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!4283 = !DILocalVariable(name: "coef_param", arg: 1, scope: !4282, file: !1800, line: 2486, type: !1032)
!4284 = !DILocation(line: 2486, column: 32, scope: !4282)
!4285 = !DILocalVariable(name: "tns", arg: 2, scope: !4282, file: !1800, line: 2486, type: !2615)
!4286 = !DILocation(line: 2486, column: 72, scope: !4282)
!4287 = !DILocalVariable(name: "ics", arg: 3, scope: !4282, file: !1800, line: 2487, type: !2616)
!4288 = !DILocation(line: 2487, column: 48, scope: !4282)
!4289 = !DILocalVariable(name: "decode", arg: 4, scope: !4282, file: !1800, line: 2487, type: !1012)
!4290 = !DILocation(line: 2487, column: 57, scope: !4282)
!4291 = !DILocalVariable(name: "mmm", scope: !4282, file: !1800, line: 2489, type: !1162)
!4292 = !DILocation(line: 2489, column: 15, scope: !4282)
!4293 = !DILocation(line: 2489, column: 23, scope: !4282)
!4294 = !DILocation(line: 2489, column: 28, scope: !4282)
!4295 = !DILocation(line: 2489, column: 46, scope: !4282)
!4296 = !DILocation(line: 2489, column: 51, scope: !4282)
!4297 = !DILocation(line: 2489, column: 45, scope: !4282)
!4298 = !DILocation(line: 2489, column: 43, scope: !4282)
!4299 = !DILocation(line: 2489, column: 22, scope: !4282)
!4300 = !DILocation(line: 2489, column: 63, scope: !4301)
!4301 = !DILexicalBlockFile(scope: !4282, file: !1800, discriminator: 1)
!4302 = !DILocation(line: 2489, column: 68, scope: !4301)
!4303 = !DILocation(line: 2489, column: 62, scope: !4301)
!4304 = !DILocation(line: 2489, column: 22, scope: !4301)
!4305 = !DILocation(line: 2489, column: 80, scope: !4306)
!4306 = !DILexicalBlockFile(scope: !4282, file: !1800, discriminator: 2)
!4307 = !DILocation(line: 2489, column: 85, scope: !4306)
!4308 = !DILocation(line: 2489, column: 22, scope: !4306)
!4309 = !DILocation(line: 2489, column: 22, scope: !4310)
!4310 = !DILexicalBlockFile(scope: !4282, file: !1800, discriminator: 3)
!4311 = !DILocation(line: 2489, column: 15, scope: !4310)
!4312 = !DILocalVariable(name: "w", scope: !4282, file: !1800, line: 2490, type: !1012)
!4313 = !DILocation(line: 2490, column: 9, scope: !4282)
!4314 = !DILocalVariable(name: "filt", scope: !4282, file: !1800, line: 2490, type: !1012)
!4315 = !DILocation(line: 2490, column: 12, scope: !4282)
!4316 = !DILocalVariable(name: "m", scope: !4282, file: !1800, line: 2490, type: !1012)
!4317 = !DILocation(line: 2490, column: 18, scope: !4282)
!4318 = !DILocalVariable(name: "i", scope: !4282, file: !1800, line: 2490, type: !1012)
!4319 = !DILocation(line: 2490, column: 21, scope: !4282)
!4320 = !DILocalVariable(name: "bottom", scope: !4282, file: !1800, line: 2491, type: !1012)
!4321 = !DILocation(line: 2491, column: 9, scope: !4282)
!4322 = !DILocalVariable(name: "top", scope: !4282, file: !1800, line: 2491, type: !1012)
!4323 = !DILocation(line: 2491, column: 17, scope: !4282)
!4324 = !DILocalVariable(name: "order", scope: !4282, file: !1800, line: 2491, type: !1012)
!4325 = !DILocation(line: 2491, column: 22, scope: !4282)
!4326 = !DILocalVariable(name: "start", scope: !4282, file: !1800, line: 2491, type: !1012)
!4327 = !DILocation(line: 2491, column: 29, scope: !4282)
!4328 = !DILocalVariable(name: "end", scope: !4282, file: !1800, line: 2491, type: !1012)
!4329 = !DILocation(line: 2491, column: 36, scope: !4282)
!4330 = !DILocalVariable(name: "size", scope: !4282, file: !1800, line: 2491, type: !1012)
!4331 = !DILocation(line: 2491, column: 41, scope: !4282)
!4332 = !DILocalVariable(name: "inc", scope: !4282, file: !1800, line: 2491, type: !1012)
!4333 = !DILocation(line: 2491, column: 47, scope: !4282)
!4334 = !DILocalVariable(name: "lpc", scope: !4282, file: !1800, line: 2492, type: !4335)
!4335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 640, align: 32, elements: !4336)
!4336 = !{!1968}
!4337 = !DILocation(line: 2492, column: 14, scope: !4282)
!4338 = !DILocalVariable(name: "tmp", scope: !4282, file: !1800, line: 2493, type: !4339)
!4339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 672, align: 32, elements: !4340)
!4340 = !{!4341}
!4341 = !DISubrange(count: 21)
!4342 = !DILocation(line: 2493, column: 14, scope: !4282)
!4343 = !DILocalVariable(name: "coef", scope: !4282, file: !1800, line: 2494, type: !4344)
!4344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64, align: 64)
!4345 = !DILocation(line: 2494, column: 16, scope: !4282)
!4346 = !DILocation(line: 2494, column: 23, scope: !4282)
!4347 = !DILocation(line: 2496, column: 12, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4282, file: !1800, line: 2496, column: 5)
!4349 = !DILocation(line: 2496, column: 10, scope: !4348)
!4350 = !DILocation(line: 2496, column: 17, scope: !4351)
!4351 = !DILexicalBlockFile(scope: !4352, file: !1800, discriminator: 1)
!4352 = distinct !DILexicalBlock(scope: !4348, file: !1800, line: 2496, column: 5)
!4353 = !DILocation(line: 2496, column: 21, scope: !4351)
!4354 = !DILocation(line: 2496, column: 26, scope: !4351)
!4355 = !DILocation(line: 2496, column: 19, scope: !4351)
!4356 = !DILocation(line: 2496, column: 5, scope: !4351)
!4357 = !DILocation(line: 2497, column: 18, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4352, file: !1800, line: 2496, column: 44)
!4359 = !DILocation(line: 2497, column: 23, scope: !4358)
!4360 = !DILocation(line: 2497, column: 16, scope: !4358)
!4361 = !DILocation(line: 2498, column: 19, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4358, file: !1800, line: 2498, column: 9)
!4363 = !DILocation(line: 2498, column: 14, scope: !4362)
!4364 = !DILocation(line: 2498, column: 24, scope: !4365)
!4365 = !DILexicalBlockFile(scope: !4366, file: !1800, discriminator: 1)
!4366 = distinct !DILexicalBlock(scope: !4362, file: !1800, line: 2498, column: 9)
!4367 = !DILocation(line: 2498, column: 43, scope: !4365)
!4368 = !DILocation(line: 2498, column: 31, scope: !4365)
!4369 = !DILocation(line: 2498, column: 36, scope: !4365)
!4370 = !DILocation(line: 2498, column: 29, scope: !4365)
!4371 = !DILocation(line: 2498, column: 9, scope: !4365)
!4372 = !DILocation(line: 2499, column: 19, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4366, file: !1800, line: 2498, column: 55)
!4374 = !DILocation(line: 2499, column: 17, scope: !4373)
!4375 = !DILocation(line: 2500, column: 30, scope: !4373)
!4376 = !DILocation(line: 2500, column: 51, scope: !4373)
!4377 = !DILocation(line: 2500, column: 36, scope: !4373)
!4378 = !DILocation(line: 2500, column: 48, scope: !4373)
!4379 = !DILocation(line: 2500, column: 41, scope: !4373)
!4380 = !DILocation(line: 2500, column: 34, scope: !4373)
!4381 = !DILocation(line: 2500, column: 27, scope: !4373)
!4382 = !DILocation(line: 2500, column: 23, scope: !4373)
!4383 = !DILocation(line: 2500, column: 23, scope: !4384)
!4384 = !DILexicalBlockFile(scope: !4373, file: !1800, discriminator: 1)
!4385 = !DILocation(line: 2500, column: 67, scope: !4386)
!4386 = !DILexicalBlockFile(scope: !4373, file: !1800, discriminator: 2)
!4387 = !DILocation(line: 2500, column: 88, scope: !4386)
!4388 = !DILocation(line: 2500, column: 73, scope: !4386)
!4389 = !DILocation(line: 2500, column: 85, scope: !4386)
!4390 = !DILocation(line: 2500, column: 78, scope: !4386)
!4391 = !DILocation(line: 2500, column: 71, scope: !4386)
!4392 = !DILocation(line: 2500, column: 23, scope: !4386)
!4393 = !DILocation(line: 2500, column: 23, scope: !4394)
!4394 = !DILexicalBlockFile(scope: !4373, file: !1800, discriminator: 3)
!4395 = !DILocation(line: 2500, column: 20, scope: !4394)
!4396 = !DILocation(line: 2501, column: 35, scope: !4373)
!4397 = !DILocation(line: 2501, column: 21, scope: !4373)
!4398 = !DILocation(line: 2501, column: 32, scope: !4373)
!4399 = !DILocation(line: 2501, column: 26, scope: !4373)
!4400 = !DILocation(line: 2501, column: 19, scope: !4373)
!4401 = !DILocation(line: 2502, column: 17, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4373, file: !1800, line: 2502, column: 17)
!4403 = !DILocation(line: 2502, column: 23, scope: !4402)
!4404 = !DILocation(line: 2502, column: 17, scope: !4373)
!4405 = !DILocation(line: 2503, column: 17, scope: !4402)
!4406 = !DILocation(line: 2506, column: 50, scope: !4373)
!4407 = !DILocation(line: 2506, column: 37, scope: !4373)
!4408 = !DILocation(line: 2506, column: 47, scope: !4373)
!4409 = !DILocation(line: 2506, column: 42, scope: !4373)
!4410 = !DILocation(line: 2506, column: 57, scope: !4373)
!4411 = !DILocation(line: 2506, column: 64, scope: !4373)
!4412 = !DILocation(line: 2506, column: 13, scope: !4373)
!4413 = !DILocation(line: 2508, column: 39, scope: !4373)
!4414 = !DILocation(line: 2508, column: 50, scope: !4373)
!4415 = !DILocation(line: 2508, column: 47, scope: !4373)
!4416 = !DILocation(line: 2508, column: 38, scope: !4373)
!4417 = !DILocation(line: 2508, column: 58, scope: !4384)
!4418 = !DILocation(line: 2508, column: 38, scope: !4384)
!4419 = !DILocation(line: 2508, column: 66, scope: !4386)
!4420 = !DILocation(line: 2508, column: 38, scope: !4386)
!4421 = !DILocation(line: 2508, column: 38, scope: !4394)
!4422 = !DILocation(line: 2508, column: 21, scope: !4394)
!4423 = !DILocation(line: 2508, column: 26, scope: !4394)
!4424 = !DILocation(line: 2508, column: 19, scope: !4394)
!4425 = !DILocation(line: 2509, column: 37, scope: !4373)
!4426 = !DILocation(line: 2509, column: 45, scope: !4373)
!4427 = !DILocation(line: 2509, column: 42, scope: !4373)
!4428 = !DILocation(line: 2509, column: 36, scope: !4373)
!4429 = !DILocation(line: 2509, column: 53, scope: !4384)
!4430 = !DILocation(line: 2509, column: 36, scope: !4384)
!4431 = !DILocation(line: 2509, column: 61, scope: !4386)
!4432 = !DILocation(line: 2509, column: 36, scope: !4386)
!4433 = !DILocation(line: 2509, column: 36, scope: !4394)
!4434 = !DILocation(line: 2509, column: 19, scope: !4394)
!4435 = !DILocation(line: 2509, column: 24, scope: !4394)
!4436 = !DILocation(line: 2509, column: 17, scope: !4394)
!4437 = !DILocation(line: 2510, column: 25, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4373, file: !1800, line: 2510, column: 17)
!4439 = !DILocation(line: 2510, column: 31, scope: !4438)
!4440 = !DILocation(line: 2510, column: 29, scope: !4438)
!4441 = !DILocation(line: 2510, column: 23, scope: !4438)
!4442 = !DILocation(line: 2510, column: 38, scope: !4438)
!4443 = !DILocation(line: 2510, column: 17, scope: !4373)
!4444 = !DILocation(line: 2511, column: 17, scope: !4438)
!4445 = !DILocation(line: 2512, column: 35, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4373, file: !1800, line: 2512, column: 17)
!4447 = !DILocation(line: 2512, column: 17, scope: !4446)
!4448 = !DILocation(line: 2512, column: 32, scope: !4446)
!4449 = !DILocation(line: 2512, column: 22, scope: !4446)
!4450 = !DILocation(line: 2512, column: 17, scope: !4373)
!4451 = !DILocation(line: 2513, column: 21, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4446, file: !1800, line: 2512, column: 42)
!4453 = !DILocation(line: 2514, column: 25, scope: !4452)
!4454 = !DILocation(line: 2514, column: 29, scope: !4452)
!4455 = !DILocation(line: 2514, column: 23, scope: !4452)
!4456 = !DILocation(line: 2515, column: 13, scope: !4452)
!4457 = !DILocation(line: 2516, column: 21, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4446, file: !1800, line: 2515, column: 20)
!4459 = !DILocation(line: 2518, column: 22, scope: !4373)
!4460 = !DILocation(line: 2518, column: 24, scope: !4373)
!4461 = !DILocation(line: 2518, column: 19, scope: !4373)
!4462 = !DILocation(line: 2520, column: 17, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4373, file: !1800, line: 2520, column: 17)
!4464 = !DILocation(line: 2520, column: 17, scope: !4373)
!4465 = !DILocation(line: 2522, column: 24, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4467, file: !1800, line: 2522, column: 17)
!4467 = distinct !DILexicalBlock(scope: !4463, file: !1800, line: 2520, column: 25)
!4468 = !DILocation(line: 2522, column: 22, scope: !4466)
!4469 = !DILocation(line: 2522, column: 29, scope: !4470)
!4470 = !DILexicalBlockFile(scope: !4471, file: !1800, discriminator: 1)
!4471 = distinct !DILexicalBlock(scope: !4466, file: !1800, line: 2522, column: 17)
!4472 = !DILocation(line: 2522, column: 33, scope: !4470)
!4473 = !DILocation(line: 2522, column: 31, scope: !4470)
!4474 = !DILocation(line: 2522, column: 17, scope: !4470)
!4475 = !DILocation(line: 2523, column: 28, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4471, file: !1800, line: 2523, column: 21)
!4477 = !DILocation(line: 2523, column: 26, scope: !4476)
!4478 = !DILocation(line: 2523, column: 33, scope: !4479)
!4479 = !DILexicalBlockFile(scope: !4480, file: !1800, discriminator: 1)
!4480 = distinct !DILexicalBlock(scope: !4476, file: !1800, line: 2523, column: 21)
!4481 = !DILocation(line: 2523, column: 40, scope: !4479)
!4482 = !DILocation(line: 2523, column: 46, scope: !4479)
!4483 = !DILocation(line: 2523, column: 43, scope: !4479)
!4484 = !DILocation(line: 2523, column: 39, scope: !4479)
!4485 = !DILocation(line: 2523, column: 56, scope: !4486)
!4486 = !DILexicalBlockFile(scope: !4480, file: !1800, discriminator: 2)
!4487 = !DILocation(line: 2523, column: 39, scope: !4486)
!4488 = !DILocation(line: 2523, column: 66, scope: !4489)
!4489 = !DILexicalBlockFile(scope: !4480, file: !1800, discriminator: 3)
!4490 = !DILocation(line: 2523, column: 39, scope: !4489)
!4491 = !DILocation(line: 2523, column: 39, scope: !4492)
!4492 = !DILexicalBlockFile(scope: !4480, file: !1800, discriminator: 4)
!4493 = !DILocation(line: 2523, column: 35, scope: !4492)
!4494 = !DILocation(line: 2523, column: 21, scope: !4492)
!4495 = !DILocation(line: 2524, column: 72, scope: !4480)
!4496 = !DILocation(line: 2524, column: 80, scope: !4480)
!4497 = !DILocation(line: 2524, column: 84, scope: !4480)
!4498 = !DILocation(line: 2524, column: 82, scope: !4480)
!4499 = !DILocation(line: 2524, column: 78, scope: !4480)
!4500 = !DILocation(line: 2524, column: 67, scope: !4480)
!4501 = !DILocation(line: 2524, column: 47, scope: !4480)
!4502 = !DILocation(line: 2524, column: 97, scope: !4480)
!4503 = !DILocation(line: 2524, column: 99, scope: !4480)
!4504 = !DILocation(line: 2524, column: 93, scope: !4480)
!4505 = !DILocation(line: 2524, column: 92, scope: !4480)
!4506 = !DILocation(line: 2524, column: 90, scope: !4480)
!4507 = !DILocation(line: 2524, column: 105, scope: !4480)
!4508 = !DILocation(line: 2524, column: 118, scope: !4480)
!4509 = !DILocation(line: 2524, column: 40, scope: !4480)
!4510 = !DILocation(line: 2524, column: 30, scope: !4480)
!4511 = !DILocation(line: 2524, column: 25, scope: !4480)
!4512 = !DILocation(line: 2524, column: 37, scope: !4480)
!4513 = !DILocation(line: 2523, column: 72, scope: !4514)
!4514 = !DILexicalBlockFile(scope: !4480, file: !1800, discriminator: 5)
!4515 = !DILocation(line: 2523, column: 21, scope: !4514)
!4516 = distinct !{!4516, !4517}
!4517 = !DILocation(line: 2523, column: 21, scope: !4471)
!4518 = !DILocation(line: 2524, column: 123, scope: !4519)
!4519 = !DILexicalBlockFile(scope: !4476, file: !1800, discriminator: 1)
!4520 = !DILocation(line: 2522, column: 40, scope: !4521)
!4521 = !DILexicalBlockFile(scope: !4471, file: !1800, discriminator: 2)
!4522 = !DILocation(line: 2522, column: 53, scope: !4521)
!4523 = !DILocation(line: 2522, column: 50, scope: !4521)
!4524 = !DILocation(line: 2522, column: 17, scope: !4521)
!4525 = distinct !{!4525, !4526}
!4526 = !DILocation(line: 2522, column: 17, scope: !4467)
!4527 = !DILocation(line: 2525, column: 13, scope: !4467)
!4528 = !DILocation(line: 2527, column: 24, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4530, file: !1800, line: 2527, column: 17)
!4530 = distinct !DILexicalBlock(scope: !4463, file: !1800, line: 2525, column: 20)
!4531 = !DILocation(line: 2527, column: 22, scope: !4529)
!4532 = !DILocation(line: 2527, column: 29, scope: !4533)
!4533 = !DILexicalBlockFile(scope: !4534, file: !1800, discriminator: 1)
!4534 = distinct !DILexicalBlock(scope: !4529, file: !1800, line: 2527, column: 17)
!4535 = !DILocation(line: 2527, column: 33, scope: !4533)
!4536 = !DILocation(line: 2527, column: 31, scope: !4533)
!4537 = !DILocation(line: 2527, column: 17, scope: !4533)
!4538 = !DILocation(line: 2528, column: 35, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4534, file: !1800, line: 2527, column: 58)
!4540 = !DILocation(line: 2528, column: 30, scope: !4539)
!4541 = !DILocation(line: 2528, column: 21, scope: !4539)
!4542 = !DILocation(line: 2528, column: 28, scope: !4539)
!4543 = !DILocation(line: 2529, column: 28, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4539, file: !1800, line: 2529, column: 21)
!4545 = !DILocation(line: 2529, column: 26, scope: !4544)
!4546 = !DILocation(line: 2529, column: 33, scope: !4547)
!4547 = !DILexicalBlockFile(scope: !4548, file: !1800, discriminator: 1)
!4548 = distinct !DILexicalBlock(scope: !4544, file: !1800, line: 2529, column: 21)
!4549 = !DILocation(line: 2529, column: 40, scope: !4547)
!4550 = !DILocation(line: 2529, column: 46, scope: !4547)
!4551 = !DILocation(line: 2529, column: 43, scope: !4547)
!4552 = !DILocation(line: 2529, column: 39, scope: !4547)
!4553 = !DILocation(line: 2529, column: 56, scope: !4554)
!4554 = !DILexicalBlockFile(scope: !4548, file: !1800, discriminator: 2)
!4555 = !DILocation(line: 2529, column: 39, scope: !4554)
!4556 = !DILocation(line: 2529, column: 66, scope: !4557)
!4557 = !DILexicalBlockFile(scope: !4548, file: !1800, discriminator: 3)
!4558 = !DILocation(line: 2529, column: 39, scope: !4557)
!4559 = !DILocation(line: 2529, column: 39, scope: !4560)
!4560 = !DILexicalBlockFile(scope: !4548, file: !1800, discriminator: 4)
!4561 = !DILocation(line: 2529, column: 35, scope: !4560)
!4562 = !DILocation(line: 2529, column: 21, scope: !4560)
!4563 = !DILocation(line: 2530, column: 61, scope: !4548)
!4564 = !DILocation(line: 2530, column: 57, scope: !4548)
!4565 = !DILocation(line: 2530, column: 47, scope: !4548)
!4566 = !DILocation(line: 2530, column: 72, scope: !4548)
!4567 = !DILocation(line: 2530, column: 74, scope: !4548)
!4568 = !DILocation(line: 2530, column: 68, scope: !4548)
!4569 = !DILocation(line: 2530, column: 67, scope: !4548)
!4570 = !DILocation(line: 2530, column: 65, scope: !4548)
!4571 = !DILocation(line: 2530, column: 80, scope: !4548)
!4572 = !DILocation(line: 2530, column: 93, scope: !4548)
!4573 = !DILocation(line: 2530, column: 40, scope: !4548)
!4574 = !DILocation(line: 2530, column: 30, scope: !4548)
!4575 = !DILocation(line: 2530, column: 25, scope: !4548)
!4576 = !DILocation(line: 2530, column: 37, scope: !4548)
!4577 = !DILocation(line: 2529, column: 72, scope: !4578)
!4578 = !DILexicalBlockFile(scope: !4548, file: !1800, discriminator: 5)
!4579 = !DILocation(line: 2529, column: 21, scope: !4578)
!4580 = distinct !{!4580, !4581}
!4581 = !DILocation(line: 2529, column: 21, scope: !4539)
!4582 = !DILocation(line: 2531, column: 30, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4539, file: !1800, line: 2531, column: 21)
!4584 = !DILocation(line: 2531, column: 28, scope: !4583)
!4585 = !DILocation(line: 2531, column: 26, scope: !4583)
!4586 = !DILocation(line: 2531, column: 37, scope: !4587)
!4587 = !DILexicalBlockFile(scope: !4588, file: !1800, discriminator: 1)
!4588 = distinct !DILexicalBlock(scope: !4583, file: !1800, line: 2531, column: 21)
!4589 = !DILocation(line: 2531, column: 39, scope: !4587)
!4590 = !DILocation(line: 2531, column: 21, scope: !4587)
!4591 = !DILocation(line: 2532, column: 38, scope: !4588)
!4592 = !DILocation(line: 2532, column: 40, scope: !4588)
!4593 = !DILocation(line: 2532, column: 34, scope: !4588)
!4594 = !DILocation(line: 2532, column: 29, scope: !4588)
!4595 = !DILocation(line: 2532, column: 25, scope: !4588)
!4596 = !DILocation(line: 2532, column: 32, scope: !4588)
!4597 = !DILocation(line: 2531, column: 45, scope: !4598)
!4598 = !DILexicalBlockFile(scope: !4588, file: !1800, discriminator: 2)
!4599 = !DILocation(line: 2531, column: 21, scope: !4598)
!4600 = distinct !{!4600, !4601}
!4601 = !DILocation(line: 2531, column: 21, scope: !4539)
!4602 = !DILocation(line: 2533, column: 17, scope: !4539)
!4603 = !DILocation(line: 2527, column: 40, scope: !4604)
!4604 = !DILexicalBlockFile(scope: !4534, file: !1800, discriminator: 2)
!4605 = !DILocation(line: 2527, column: 53, scope: !4604)
!4606 = !DILocation(line: 2527, column: 50, scope: !4604)
!4607 = !DILocation(line: 2527, column: 17, scope: !4604)
!4608 = distinct !{!4608, !4609}
!4609 = !DILocation(line: 2527, column: 17, scope: !4530)
!4610 = !DILocation(line: 2535, column: 9, scope: !4373)
!4611 = !DILocation(line: 2498, column: 51, scope: !4612)
!4612 = !DILexicalBlockFile(scope: !4366, file: !1800, discriminator: 2)
!4613 = !DILocation(line: 2498, column: 9, scope: !4612)
!4614 = distinct !{!4614, !4615}
!4615 = !DILocation(line: 2498, column: 9, scope: !4358)
!4616 = !DILocation(line: 2536, column: 5, scope: !4358)
!4617 = !DILocation(line: 2496, column: 40, scope: !4618)
!4618 = !DILexicalBlockFile(scope: !4352, file: !1800, discriminator: 2)
!4619 = !DILocation(line: 2496, column: 5, scope: !4618)
!4620 = distinct !{!4620, !4621}
!4621 = !DILocation(line: 2496, column: 5, scope: !4282)
!4622 = !DILocation(line: 2537, column: 1, scope: !4282)
!4623 = distinct !DISubprogram(name: "windowing_and_mdct_ltp", scope: !1800, file: !1800, line: 2543, type: !2619, isLocal: true, isDefinition: true, scopeLine: 2545, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!4624 = !DILocalVariable(name: "ac", arg: 1, scope: !4623, file: !1800, line: 2543, type: !2071)
!4625 = !DILocation(line: 2543, column: 48, scope: !4623)
!4626 = !DILocalVariable(name: "out", arg: 2, scope: !4623, file: !1800, line: 2543, type: !1032)
!4627 = !DILocation(line: 2543, column: 62, scope: !4623)
!4628 = !DILocalVariable(name: "in", arg: 3, scope: !4623, file: !1800, line: 2544, type: !1032)
!4629 = !DILocation(line: 2544, column: 46, scope: !4623)
!4630 = !DILocalVariable(name: "ics", arg: 4, scope: !4623, file: !1800, line: 2544, type: !2616)
!4631 = !DILocation(line: 2544, column: 75, scope: !4623)
!4632 = !DILocalVariable(name: "lwindow", scope: !4623, file: !1800, line: 2546, type: !1895)
!4633 = !DILocation(line: 2546, column: 21, scope: !4623)
!4634 = !DILocation(line: 2546, column: 31, scope: !4623)
!4635 = !DILocation(line: 2546, column: 36, scope: !4623)
!4636 = !DILocalVariable(name: "swindow", scope: !4623, file: !1800, line: 2547, type: !1895)
!4637 = !DILocation(line: 2547, column: 21, scope: !4623)
!4638 = !DILocation(line: 2547, column: 31, scope: !4623)
!4639 = !DILocation(line: 2547, column: 36, scope: !4623)
!4640 = !DILocalVariable(name: "lwindow_prev", scope: !4623, file: !1800, line: 2548, type: !1895)
!4641 = !DILocation(line: 2548, column: 21, scope: !4623)
!4642 = !DILocation(line: 2548, column: 36, scope: !4623)
!4643 = !DILocation(line: 2548, column: 41, scope: !4623)
!4644 = !DILocalVariable(name: "swindow_prev", scope: !4623, file: !1800, line: 2549, type: !1895)
!4645 = !DILocation(line: 2549, column: 21, scope: !4623)
!4646 = !DILocation(line: 2549, column: 36, scope: !4623)
!4647 = !DILocation(line: 2549, column: 41, scope: !4623)
!4648 = !DILocation(line: 2551, column: 9, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4623, file: !1800, line: 2551, column: 9)
!4650 = !DILocation(line: 2551, column: 14, scope: !4649)
!4651 = !DILocation(line: 2551, column: 33, scope: !4649)
!4652 = !DILocation(line: 2551, column: 9, scope: !4623)
!4653 = !DILocation(line: 2552, column: 9, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4649, file: !1800, line: 2551, column: 56)
!4655 = !DILocation(line: 2552, column: 13, scope: !4654)
!4656 = !DILocation(line: 2552, column: 19, scope: !4654)
!4657 = !DILocation(line: 2552, column: 31, scope: !4654)
!4658 = !DILocation(line: 2552, column: 35, scope: !4654)
!4659 = !DILocation(line: 2552, column: 39, scope: !4654)
!4660 = !DILocation(line: 2553, column: 5, scope: !4654)
!4661 = !DILocation(line: 2554, column: 16, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4649, file: !1800, line: 2553, column: 12)
!4663 = !DILocation(line: 2554, column: 9, scope: !4662)
!4664 = !DILocation(line: 2555, column: 9, scope: !4662)
!4665 = !DILocation(line: 2555, column: 13, scope: !4662)
!4666 = !DILocation(line: 2555, column: 19, scope: !4662)
!4667 = !DILocation(line: 2555, column: 31, scope: !4662)
!4668 = !DILocation(line: 2555, column: 34, scope: !4662)
!4669 = !DILocation(line: 2555, column: 41, scope: !4662)
!4670 = !DILocation(line: 2555, column: 44, scope: !4662)
!4671 = !DILocation(line: 2555, column: 51, scope: !4662)
!4672 = !DILocation(line: 2557, column: 9, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4623, file: !1800, line: 2557, column: 9)
!4674 = !DILocation(line: 2557, column: 14, scope: !4673)
!4675 = !DILocation(line: 2557, column: 33, scope: !4673)
!4676 = !DILocation(line: 2557, column: 9, scope: !4623)
!4677 = !DILocation(line: 2558, column: 9, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4673, file: !1800, line: 2557, column: 57)
!4679 = !DILocation(line: 2558, column: 13, scope: !4678)
!4680 = !DILocation(line: 2558, column: 19, scope: !4678)
!4681 = !DILocation(line: 2558, column: 39, scope: !4678)
!4682 = !DILocation(line: 2558, column: 42, scope: !4678)
!4683 = !DILocation(line: 2558, column: 50, scope: !4678)
!4684 = !DILocation(line: 2558, column: 53, scope: !4678)
!4685 = !DILocation(line: 2558, column: 61, scope: !4678)
!4686 = !DILocation(line: 2559, column: 5, scope: !4678)
!4687 = !DILocation(line: 2560, column: 9, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4673, file: !1800, line: 2559, column: 12)
!4689 = !DILocation(line: 2560, column: 13, scope: !4688)
!4690 = !DILocation(line: 2560, column: 19, scope: !4688)
!4691 = !DILocation(line: 2560, column: 39, scope: !4688)
!4692 = !DILocation(line: 2560, column: 42, scope: !4688)
!4693 = !DILocation(line: 2560, column: 49, scope: !4688)
!4694 = !DILocation(line: 2560, column: 56, scope: !4688)
!4695 = !DILocation(line: 2560, column: 59, scope: !4688)
!4696 = !DILocation(line: 2560, column: 66, scope: !4688)
!4697 = !DILocation(line: 2560, column: 73, scope: !4688)
!4698 = !DILocation(line: 2561, column: 16, scope: !4688)
!4699 = !DILocation(line: 2561, column: 19, scope: !4688)
!4700 = !DILocation(line: 2561, column: 26, scope: !4688)
!4701 = !DILocation(line: 2561, column: 9, scope: !4688)
!4702 = !DILocation(line: 2563, column: 5, scope: !4623)
!4703 = !DILocation(line: 2563, column: 9, scope: !4623)
!4704 = !DILocation(line: 2563, column: 18, scope: !4623)
!4705 = !DILocation(line: 2563, column: 29, scope: !4623)
!4706 = !DILocation(line: 2563, column: 33, scope: !4623)
!4707 = !DILocation(line: 2563, column: 43, scope: !4623)
!4708 = !DILocation(line: 2563, column: 48, scope: !4623)
!4709 = !DILocation(line: 2564, column: 1, scope: !4623)
!4710 = distinct !DISubprogram(name: "update_ltp", scope: !1800, file: !1800, line: 2601, type: !2608, isLocal: true, isDefinition: true, scopeLine: 2602, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!4711 = !DILocalVariable(name: "ac", arg: 1, scope: !4710, file: !1800, line: 2601, type: !2071)
!4712 = !DILocation(line: 2601, column: 36, scope: !4710)
!4713 = !DILocalVariable(name: "sce", arg: 2, scope: !4710, file: !1800, line: 2601, type: !1906)
!4714 = !DILocation(line: 2601, column: 62, scope: !4710)
!4715 = !DILocalVariable(name: "ics", scope: !4710, file: !1800, line: 2603, type: !2616)
!4716 = !DILocation(line: 2603, column: 30, scope: !4710)
!4717 = !DILocation(line: 2603, column: 37, scope: !4710)
!4718 = !DILocation(line: 2603, column: 42, scope: !4710)
!4719 = !DILocalVariable(name: "saved", scope: !4710, file: !1800, line: 2604, type: !1032)
!4720 = !DILocation(line: 2604, column: 15, scope: !4710)
!4721 = !DILocation(line: 2604, column: 23, scope: !4710)
!4722 = !DILocation(line: 2604, column: 28, scope: !4710)
!4723 = !DILocalVariable(name: "saved_ltp", scope: !4710, file: !1800, line: 2605, type: !1032)
!4724 = !DILocation(line: 2605, column: 15, scope: !4710)
!4725 = !DILocation(line: 2605, column: 27, scope: !4710)
!4726 = !DILocation(line: 2605, column: 32, scope: !4710)
!4727 = !DILocalVariable(name: "lwindow", scope: !4710, file: !1800, line: 2606, type: !1895)
!4728 = !DILocation(line: 2606, column: 21, scope: !4710)
!4729 = !DILocation(line: 2606, column: 31, scope: !4710)
!4730 = !DILocation(line: 2606, column: 36, scope: !4710)
!4731 = !DILocalVariable(name: "swindow", scope: !4710, file: !1800, line: 2607, type: !1895)
!4732 = !DILocation(line: 2607, column: 21, scope: !4710)
!4733 = !DILocation(line: 2607, column: 31, scope: !4710)
!4734 = !DILocation(line: 2607, column: 36, scope: !4710)
!4735 = !DILocalVariable(name: "i", scope: !4710, file: !1800, line: 2608, type: !1012)
!4736 = !DILocation(line: 2608, column: 9, scope: !4710)
!4737 = !DILocation(line: 2610, column: 9, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4710, file: !1800, line: 2610, column: 9)
!4739 = !DILocation(line: 2610, column: 14, scope: !4738)
!4740 = !DILocation(line: 2610, column: 33, scope: !4738)
!4741 = !DILocation(line: 2610, column: 9, scope: !4710)
!4742 = !DILocation(line: 2611, column: 16, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4738, file: !1800, line: 2610, column: 58)
!4744 = !DILocation(line: 2611, column: 9, scope: !4743)
!4745 = !DILocation(line: 2611, column: 27, scope: !4743)
!4746 = !DILocation(line: 2612, column: 16, scope: !4743)
!4747 = !DILocation(line: 2612, column: 26, scope: !4743)
!4748 = !DILocation(line: 2612, column: 9, scope: !4743)
!4749 = !DILocation(line: 2613, column: 9, scope: !4743)
!4750 = !DILocation(line: 2613, column: 13, scope: !4743)
!4751 = !DILocation(line: 2613, column: 19, scope: !4743)
!4752 = !DILocation(line: 2613, column: 39, scope: !4743)
!4753 = !DILocation(line: 2613, column: 49, scope: !4743)
!4754 = !DILocation(line: 2613, column: 56, scope: !4743)
!4755 = !DILocation(line: 2613, column: 60, scope: !4743)
!4756 = !DILocation(line: 2613, column: 69, scope: !4743)
!4757 = !DILocation(line: 2613, column: 77, scope: !4743)
!4758 = !DILocation(line: 2615, column: 16, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4743, file: !1800, line: 2615, column: 9)
!4760 = !DILocation(line: 2615, column: 14, scope: !4759)
!4761 = !DILocation(line: 2615, column: 21, scope: !4762)
!4762 = !DILexicalBlockFile(scope: !4763, file: !1800, discriminator: 1)
!4763 = distinct !DILexicalBlock(scope: !4759, file: !1800, line: 2615, column: 9)
!4764 = !DILocation(line: 2615, column: 23, scope: !4762)
!4765 = !DILocation(line: 2615, column: 9, scope: !4762)
!4766 = !DILocation(line: 2616, column: 71, scope: !4763)
!4767 = !DILocation(line: 2616, column: 69, scope: !4763)
!4768 = !DILocation(line: 2616, column: 51, scope: !4763)
!4769 = !DILocation(line: 2616, column: 55, scope: !4763)
!4770 = !DILocation(line: 2616, column: 41, scope: !4763)
!4771 = !DILocation(line: 2616, column: 91, scope: !4763)
!4772 = !DILocation(line: 2616, column: 89, scope: !4763)
!4773 = !DILocation(line: 2616, column: 78, scope: !4763)
!4774 = !DILocation(line: 2616, column: 77, scope: !4763)
!4775 = !DILocation(line: 2616, column: 75, scope: !4763)
!4776 = !DILocation(line: 2616, column: 95, scope: !4763)
!4777 = !DILocation(line: 2616, column: 109, scope: !4763)
!4778 = !DILocation(line: 2616, column: 34, scope: !4763)
!4779 = !DILocation(line: 2616, column: 23, scope: !4763)
!4780 = !DILocation(line: 2616, column: 25, scope: !4763)
!4781 = !DILocation(line: 2616, column: 13, scope: !4763)
!4782 = !DILocation(line: 2616, column: 32, scope: !4763)
!4783 = !DILocation(line: 2615, column: 30, scope: !4784)
!4784 = !DILexicalBlockFile(scope: !4763, file: !1800, discriminator: 2)
!4785 = !DILocation(line: 2615, column: 9, scope: !4784)
!4786 = distinct !{!4786, !4787}
!4787 = !DILocation(line: 2615, column: 9, scope: !4743)
!4788 = !DILocation(line: 2617, column: 5, scope: !4743)
!4789 = !DILocation(line: 2617, column: 16, scope: !4790)
!4790 = !DILexicalBlockFile(scope: !4791, file: !1800, discriminator: 1)
!4791 = distinct !DILexicalBlock(scope: !4738, file: !1800, line: 2617, column: 16)
!4792 = !DILocation(line: 2617, column: 21, scope: !4790)
!4793 = !DILocation(line: 2617, column: 40, scope: !4790)
!4794 = !DILocation(line: 2618, column: 16, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4791, file: !1800, line: 2617, column: 64)
!4796 = !DILocation(line: 2618, column: 9, scope: !4795)
!4797 = !DILocation(line: 2618, column: 27, scope: !4795)
!4798 = !DILocation(line: 2618, column: 31, scope: !4795)
!4799 = !DILocation(line: 2618, column: 40, scope: !4795)
!4800 = !DILocation(line: 2619, column: 16, scope: !4795)
!4801 = !DILocation(line: 2619, column: 26, scope: !4795)
!4802 = !DILocation(line: 2619, column: 9, scope: !4795)
!4803 = !DILocation(line: 2620, column: 9, scope: !4795)
!4804 = !DILocation(line: 2620, column: 13, scope: !4795)
!4805 = !DILocation(line: 2620, column: 19, scope: !4795)
!4806 = !DILocation(line: 2620, column: 39, scope: !4795)
!4807 = !DILocation(line: 2620, column: 49, scope: !4795)
!4808 = !DILocation(line: 2620, column: 56, scope: !4795)
!4809 = !DILocation(line: 2620, column: 60, scope: !4795)
!4810 = !DILocation(line: 2620, column: 69, scope: !4795)
!4811 = !DILocation(line: 2620, column: 77, scope: !4795)
!4812 = !DILocation(line: 2622, column: 16, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4795, file: !1800, line: 2622, column: 9)
!4814 = !DILocation(line: 2622, column: 14, scope: !4813)
!4815 = !DILocation(line: 2622, column: 21, scope: !4816)
!4816 = !DILexicalBlockFile(scope: !4817, file: !1800, discriminator: 1)
!4817 = distinct !DILexicalBlock(scope: !4813, file: !1800, line: 2622, column: 9)
!4818 = !DILocation(line: 2622, column: 23, scope: !4816)
!4819 = !DILocation(line: 2622, column: 9, scope: !4816)
!4820 = !DILocation(line: 2623, column: 71, scope: !4817)
!4821 = !DILocation(line: 2623, column: 69, scope: !4817)
!4822 = !DILocation(line: 2623, column: 51, scope: !4817)
!4823 = !DILocation(line: 2623, column: 55, scope: !4817)
!4824 = !DILocation(line: 2623, column: 41, scope: !4817)
!4825 = !DILocation(line: 2623, column: 91, scope: !4817)
!4826 = !DILocation(line: 2623, column: 89, scope: !4817)
!4827 = !DILocation(line: 2623, column: 78, scope: !4817)
!4828 = !DILocation(line: 2623, column: 77, scope: !4817)
!4829 = !DILocation(line: 2623, column: 75, scope: !4817)
!4830 = !DILocation(line: 2623, column: 95, scope: !4817)
!4831 = !DILocation(line: 2623, column: 109, scope: !4817)
!4832 = !DILocation(line: 2623, column: 34, scope: !4817)
!4833 = !DILocation(line: 2623, column: 23, scope: !4817)
!4834 = !DILocation(line: 2623, column: 25, scope: !4817)
!4835 = !DILocation(line: 2623, column: 13, scope: !4817)
!4836 = !DILocation(line: 2623, column: 32, scope: !4817)
!4837 = !DILocation(line: 2622, column: 30, scope: !4838)
!4838 = !DILexicalBlockFile(scope: !4817, file: !1800, discriminator: 2)
!4839 = !DILocation(line: 2622, column: 9, scope: !4838)
!4840 = distinct !{!4840, !4841}
!4841 = !DILocation(line: 2622, column: 9, scope: !4795)
!4842 = !DILocation(line: 2624, column: 5, scope: !4795)
!4843 = !DILocation(line: 2625, column: 9, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4791, file: !1800, line: 2624, column: 12)
!4845 = !DILocation(line: 2625, column: 13, scope: !4844)
!4846 = !DILocation(line: 2625, column: 19, scope: !4844)
!4847 = !DILocation(line: 2625, column: 39, scope: !4844)
!4848 = !DILocation(line: 2625, column: 50, scope: !4844)
!4849 = !DILocation(line: 2625, column: 54, scope: !4844)
!4850 = !DILocation(line: 2625, column: 63, scope: !4844)
!4851 = !DILocation(line: 2625, column: 71, scope: !4844)
!4852 = !DILocation(line: 2627, column: 16, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4844, file: !1800, line: 2627, column: 9)
!4854 = !DILocation(line: 2627, column: 14, scope: !4853)
!4855 = !DILocation(line: 2627, column: 21, scope: !4856)
!4856 = !DILexicalBlockFile(scope: !4857, file: !1800, discriminator: 1)
!4857 = distinct !DILexicalBlock(scope: !4853, file: !1800, line: 2627, column: 9)
!4858 = !DILocation(line: 2627, column: 23, scope: !4856)
!4859 = !DILocation(line: 2627, column: 9, scope: !4856)
!4860 = !DILocation(line: 2628, column: 71, scope: !4857)
!4861 = !DILocation(line: 2628, column: 69, scope: !4857)
!4862 = !DILocation(line: 2628, column: 51, scope: !4857)
!4863 = !DILocation(line: 2628, column: 55, scope: !4857)
!4864 = !DILocation(line: 2628, column: 41, scope: !4857)
!4865 = !DILocation(line: 2628, column: 92, scope: !4857)
!4866 = !DILocation(line: 2628, column: 90, scope: !4857)
!4867 = !DILocation(line: 2628, column: 78, scope: !4857)
!4868 = !DILocation(line: 2628, column: 77, scope: !4857)
!4869 = !DILocation(line: 2628, column: 75, scope: !4857)
!4870 = !DILocation(line: 2628, column: 96, scope: !4857)
!4871 = !DILocation(line: 2628, column: 110, scope: !4857)
!4872 = !DILocation(line: 2628, column: 34, scope: !4857)
!4873 = !DILocation(line: 2628, column: 23, scope: !4857)
!4874 = !DILocation(line: 2628, column: 25, scope: !4857)
!4875 = !DILocation(line: 2628, column: 13, scope: !4857)
!4876 = !DILocation(line: 2628, column: 32, scope: !4857)
!4877 = !DILocation(line: 2627, column: 31, scope: !4878)
!4878 = !DILexicalBlockFile(scope: !4857, file: !1800, discriminator: 2)
!4879 = !DILocation(line: 2627, column: 9, scope: !4878)
!4880 = distinct !{!4880, !4881}
!4881 = !DILocation(line: 2627, column: 9, scope: !4844)
!4882 = !DILocation(line: 2631, column: 12, scope: !4710)
!4883 = !DILocation(line: 2631, column: 17, scope: !4710)
!4884 = !DILocation(line: 2631, column: 5, scope: !4710)
!4885 = !DILocation(line: 2631, column: 28, scope: !4710)
!4886 = !DILocation(line: 2631, column: 33, scope: !4710)
!4887 = !DILocation(line: 2631, column: 42, scope: !4710)
!4888 = !DILocation(line: 2632, column: 12, scope: !4710)
!4889 = !DILocation(line: 2632, column: 17, scope: !4710)
!4890 = !DILocation(line: 2632, column: 26, scope: !4710)
!4891 = !DILocation(line: 2632, column: 5, scope: !4710)
!4892 = !DILocation(line: 2632, column: 33, scope: !4710)
!4893 = !DILocation(line: 2632, column: 38, scope: !4710)
!4894 = !DILocation(line: 2633, column: 12, scope: !4710)
!4895 = !DILocation(line: 2633, column: 17, scope: !4710)
!4896 = !DILocation(line: 2633, column: 26, scope: !4710)
!4897 = !DILocation(line: 2633, column: 5, scope: !4710)
!4898 = !DILocation(line: 2633, column: 33, scope: !4710)
!4899 = !DILocation(line: 2634, column: 1, scope: !4710)
!4900 = distinct !DISubprogram(name: "vector_pow43", scope: !1142, file: !1142, line: 151, type: !2624, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!4901 = !DILocalVariable(name: "coefs", arg: 1, scope: !4900, file: !1142, line: 151, type: !1454)
!4902 = !DILocation(line: 151, column: 31, scope: !4900)
!4903 = !DILocalVariable(name: "len", arg: 2, scope: !4900, file: !1142, line: 151, type: !1012)
!4904 = !DILocation(line: 151, column: 42, scope: !4900)
!4905 = !DILocalVariable(name: "i", scope: !4900, file: !1142, line: 153, type: !1012)
!4906 = !DILocation(line: 153, column: 9, scope: !4900)
!4907 = !DILocalVariable(name: "coef", scope: !4900, file: !1142, line: 153, type: !1012)
!4908 = !DILocation(line: 153, column: 12, scope: !4900)
!4909 = !DILocation(line: 155, column: 11, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4900, file: !1142, line: 155, column: 5)
!4911 = !DILocation(line: 155, column: 10, scope: !4910)
!4912 = !DILocation(line: 155, column: 15, scope: !4913)
!4913 = !DILexicalBlockFile(scope: !4914, file: !1142, discriminator: 1)
!4914 = distinct !DILexicalBlock(scope: !4910, file: !1142, line: 155, column: 5)
!4915 = !DILocation(line: 155, column: 17, scope: !4913)
!4916 = !DILocation(line: 155, column: 16, scope: !4913)
!4917 = !DILocation(line: 155, column: 5, scope: !4913)
!4918 = !DILocation(line: 156, column: 22, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4914, file: !1142, line: 155, column: 27)
!4920 = !DILocation(line: 156, column: 16, scope: !4919)
!4921 = !DILocation(line: 156, column: 14, scope: !4919)
!4922 = !DILocation(line: 157, column: 13, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4919, file: !1142, line: 157, column: 13)
!4924 = !DILocation(line: 157, column: 18, scope: !4923)
!4925 = !DILocation(line: 157, column: 13, scope: !4919)
!4926 = !DILocation(line: 158, column: 45, scope: !4923)
!4927 = !DILocation(line: 158, column: 44, scope: !4923)
!4928 = !DILocation(line: 158, column: 26, scope: !4923)
!4929 = !DILocation(line: 158, column: 20, scope: !4923)
!4930 = !DILocation(line: 158, column: 18, scope: !4923)
!4931 = !DILocation(line: 158, column: 13, scope: !4923)
!4932 = !DILocation(line: 160, column: 43, scope: !4923)
!4933 = !DILocation(line: 160, column: 25, scope: !4923)
!4934 = !DILocation(line: 160, column: 18, scope: !4923)
!4935 = !DILocation(line: 161, column: 20, scope: !4919)
!4936 = !DILocation(line: 161, column: 15, scope: !4919)
!4937 = !DILocation(line: 161, column: 9, scope: !4919)
!4938 = !DILocation(line: 161, column: 18, scope: !4919)
!4939 = !DILocation(line: 162, column: 5, scope: !4919)
!4940 = !DILocation(line: 155, column: 23, scope: !4941)
!4941 = !DILexicalBlockFile(scope: !4914, file: !1142, discriminator: 2)
!4942 = !DILocation(line: 155, column: 5, scope: !4941)
!4943 = distinct !{!4943, !4944}
!4944 = !DILocation(line: 155, column: 5, scope: !4900)
!4945 = !DILocation(line: 163, column: 1, scope: !4900)
!4946 = distinct !DISubprogram(name: "subband_scale", scope: !1142, file: !1142, line: 165, type: !2628, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!4947 = !DILocalVariable(name: "dst", arg: 1, scope: !4946, file: !1142, line: 165, type: !1454)
!4948 = !DILocation(line: 165, column: 32, scope: !4946)
!4949 = !DILocalVariable(name: "src", arg: 2, scope: !4946, file: !1142, line: 165, type: !1454)
!4950 = !DILocation(line: 165, column: 42, scope: !4946)
!4951 = !DILocalVariable(name: "scale", arg: 3, scope: !4946, file: !1142, line: 165, type: !1012)
!4952 = !DILocation(line: 165, column: 51, scope: !4946)
!4953 = !DILocalVariable(name: "offset", arg: 4, scope: !4946, file: !1142, line: 165, type: !1012)
!4954 = !DILocation(line: 165, column: 62, scope: !4946)
!4955 = !DILocalVariable(name: "len", arg: 5, scope: !4946, file: !1142, line: 165, type: !1012)
!4956 = !DILocation(line: 165, column: 74, scope: !4946)
!4957 = !DILocalVariable(name: "log_context", arg: 6, scope: !4946, file: !1142, line: 165, type: !1022)
!4958 = !DILocation(line: 165, column: 85, scope: !4946)
!4959 = !DILocalVariable(name: "ssign", scope: !4946, file: !1142, line: 167, type: !1012)
!4960 = !DILocation(line: 167, column: 9, scope: !4946)
!4961 = !DILocation(line: 167, column: 17, scope: !4946)
!4962 = !DILocation(line: 167, column: 23, scope: !4946)
!4963 = !DILocalVariable(name: "s", scope: !4946, file: !1142, line: 168, type: !1012)
!4964 = !DILocation(line: 168, column: 9, scope: !4946)
!4965 = !DILocation(line: 168, column: 15, scope: !4946)
!4966 = !DILocation(line: 168, column: 22, scope: !4946)
!4967 = !DILocation(line: 168, column: 14, scope: !4946)
!4968 = !DILocation(line: 168, column: 30, scope: !4969)
!4969 = !DILexicalBlockFile(scope: !4946, file: !1142, discriminator: 1)
!4970 = !DILocation(line: 168, column: 14, scope: !4969)
!4971 = !DILocation(line: 168, column: 42, scope: !4972)
!4972 = !DILexicalBlockFile(scope: !4946, file: !1142, discriminator: 2)
!4973 = !DILocation(line: 168, column: 40, scope: !4972)
!4974 = !DILocation(line: 168, column: 14, scope: !4972)
!4975 = !DILocation(line: 168, column: 14, scope: !4976)
!4976 = !DILexicalBlockFile(scope: !4946, file: !1142, discriminator: 3)
!4977 = !DILocation(line: 168, column: 9, scope: !4976)
!4978 = !DILocalVariable(name: "round", scope: !4946, file: !1142, line: 169, type: !1013)
!4979 = !DILocation(line: 169, column: 18, scope: !4946)
!4980 = !DILocalVariable(name: "i", scope: !4946, file: !1142, line: 170, type: !1012)
!4981 = !DILocation(line: 170, column: 9, scope: !4946)
!4982 = !DILocalVariable(name: "out", scope: !4946, file: !1142, line: 170, type: !1012)
!4983 = !DILocation(line: 170, column: 12, scope: !4946)
!4984 = !DILocalVariable(name: "c", scope: !4946, file: !1142, line: 170, type: !1012)
!4985 = !DILocation(line: 170, column: 17, scope: !4946)
!4986 = !DILocation(line: 170, column: 29, scope: !4946)
!4987 = !DILocation(line: 170, column: 31, scope: !4946)
!4988 = !DILocation(line: 170, column: 21, scope: !4946)
!4989 = !DILocation(line: 172, column: 9, scope: !4946)
!4990 = !DILocation(line: 172, column: 19, scope: !4946)
!4991 = !DILocation(line: 172, column: 21, scope: !4946)
!4992 = !DILocation(line: 172, column: 16, scope: !4946)
!4993 = !DILocation(line: 172, column: 7, scope: !4946)
!4994 = !DILocation(line: 174, column: 9, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4946, file: !1142, line: 174, column: 9)
!4996 = !DILocation(line: 174, column: 11, scope: !4995)
!4997 = !DILocation(line: 174, column: 9, scope: !4946)
!4998 = !DILocation(line: 175, column: 15, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !5000, file: !1142, line: 175, column: 9)
!5000 = distinct !DILexicalBlock(scope: !4995, file: !1142, line: 174, column: 17)
!5001 = !DILocation(line: 175, column: 14, scope: !4999)
!5002 = !DILocation(line: 175, column: 19, scope: !5003)
!5003 = !DILexicalBlockFile(scope: !5004, file: !1142, discriminator: 1)
!5004 = distinct !DILexicalBlock(scope: !4999, file: !1142, line: 175, column: 9)
!5005 = !DILocation(line: 175, column: 21, scope: !5003)
!5006 = !DILocation(line: 175, column: 20, scope: !5003)
!5007 = !DILocation(line: 175, column: 9, scope: !5003)
!5008 = !DILocation(line: 176, column: 17, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5004, file: !1142, line: 175, column: 31)
!5010 = !DILocation(line: 176, column: 13, scope: !5009)
!5011 = !DILocation(line: 176, column: 20, scope: !5009)
!5012 = !DILocation(line: 177, column: 9, scope: !5009)
!5013 = !DILocation(line: 175, column: 27, scope: !5014)
!5014 = !DILexicalBlockFile(scope: !5004, file: !1142, discriminator: 2)
!5015 = !DILocation(line: 175, column: 9, scope: !5014)
!5016 = distinct !{!5016, !5017}
!5017 = !DILocation(line: 175, column: 9, scope: !5000)
!5018 = !DILocation(line: 178, column: 5, scope: !5000)
!5019 = !DILocation(line: 178, column: 16, scope: !5020)
!5020 = !DILexicalBlockFile(scope: !5021, file: !1142, discriminator: 1)
!5021 = distinct !DILexicalBlock(scope: !4995, file: !1142, line: 178, column: 16)
!5022 = !DILocation(line: 178, column: 18, scope: !5020)
!5023 = !DILocation(line: 179, column: 23, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5021, file: !1142, line: 178, column: 23)
!5025 = !DILocation(line: 179, column: 24, scope: !5024)
!5026 = !DILocation(line: 179, column: 19, scope: !5024)
!5027 = !DILocation(line: 179, column: 15, scope: !5024)
!5028 = !DILocation(line: 180, column: 15, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5024, file: !1142, line: 180, column: 9)
!5030 = !DILocation(line: 180, column: 14, scope: !5029)
!5031 = !DILocation(line: 180, column: 19, scope: !5032)
!5032 = !DILexicalBlockFile(scope: !5033, file: !1142, discriminator: 1)
!5033 = distinct !DILexicalBlock(scope: !5029, file: !1142, line: 180, column: 9)
!5034 = !DILocation(line: 180, column: 21, scope: !5032)
!5035 = !DILocation(line: 180, column: 20, scope: !5032)
!5036 = !DILocation(line: 180, column: 9, scope: !5032)
!5037 = !DILocation(line: 181, column: 39, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5033, file: !1142, line: 180, column: 31)
!5039 = !DILocation(line: 181, column: 35, scope: !5038)
!5040 = !DILocation(line: 181, column: 26, scope: !5038)
!5041 = !DILocation(line: 181, column: 44, scope: !5038)
!5042 = !DILocation(line: 181, column: 42, scope: !5038)
!5043 = !DILocation(line: 181, column: 47, scope: !5038)
!5044 = !DILocation(line: 181, column: 19, scope: !5038)
!5045 = !DILocation(line: 181, column: 17, scope: !5038)
!5046 = !DILocation(line: 182, column: 29, scope: !5038)
!5047 = !DILocation(line: 182, column: 33, scope: !5038)
!5048 = !DILocation(line: 182, column: 32, scope: !5038)
!5049 = !DILocation(line: 182, column: 43, scope: !5038)
!5050 = !DILocation(line: 182, column: 40, scope: !5038)
!5051 = !DILocation(line: 182, column: 48, scope: !5038)
!5052 = !DILocation(line: 182, column: 46, scope: !5038)
!5053 = !DILocation(line: 182, column: 17, scope: !5038)
!5054 = !DILocation(line: 182, column: 13, scope: !5038)
!5055 = !DILocation(line: 182, column: 20, scope: !5038)
!5056 = !DILocation(line: 183, column: 9, scope: !5038)
!5057 = !DILocation(line: 180, column: 27, scope: !5058)
!5058 = !DILexicalBlockFile(scope: !5033, file: !1142, discriminator: 2)
!5059 = !DILocation(line: 180, column: 9, scope: !5058)
!5060 = distinct !{!5060, !5061}
!5061 = !DILocation(line: 180, column: 9, scope: !5024)
!5062 = !DILocation(line: 184, column: 5, scope: !5024)
!5063 = !DILocation(line: 184, column: 16, scope: !5064)
!5064 = !DILexicalBlockFile(scope: !5065, file: !1142, discriminator: 1)
!5065 = distinct !DILexicalBlock(scope: !5021, file: !1142, line: 184, column: 16)
!5066 = !DILocation(line: 184, column: 18, scope: !5064)
!5067 = !DILocation(line: 185, column: 13, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5065, file: !1142, line: 184, column: 25)
!5069 = !DILocation(line: 185, column: 15, scope: !5068)
!5070 = !DILocation(line: 185, column: 11, scope: !5068)
!5071 = !DILocation(line: 186, column: 24, scope: !5068)
!5072 = !DILocation(line: 186, column: 25, scope: !5068)
!5073 = !DILocation(line: 186, column: 20, scope: !5068)
!5074 = !DILocation(line: 186, column: 15, scope: !5068)
!5075 = !DILocation(line: 187, column: 15, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5068, file: !1142, line: 187, column: 9)
!5077 = !DILocation(line: 187, column: 14, scope: !5076)
!5078 = !DILocation(line: 187, column: 19, scope: !5079)
!5079 = !DILexicalBlockFile(scope: !5080, file: !1142, discriminator: 1)
!5080 = distinct !DILexicalBlock(scope: !5076, file: !1142, line: 187, column: 9)
!5081 = !DILocation(line: 187, column: 21, scope: !5079)
!5082 = !DILocation(line: 187, column: 20, scope: !5079)
!5083 = !DILocation(line: 187, column: 9, scope: !5079)
!5084 = !DILocation(line: 188, column: 48, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5080, file: !1142, line: 187, column: 31)
!5086 = !DILocation(line: 188, column: 44, scope: !5085)
!5087 = !DILocation(line: 188, column: 35, scope: !5085)
!5088 = !DILocation(line: 188, column: 53, scope: !5085)
!5089 = !DILocation(line: 188, column: 51, scope: !5085)
!5090 = !DILocation(line: 188, column: 57, scope: !5085)
!5091 = !DILocation(line: 188, column: 55, scope: !5085)
!5092 = !DILocation(line: 188, column: 67, scope: !5085)
!5093 = !DILocation(line: 188, column: 64, scope: !5085)
!5094 = !DILocation(line: 188, column: 19, scope: !5085)
!5095 = !DILocation(line: 188, column: 17, scope: !5085)
!5096 = !DILocation(line: 189, column: 22, scope: !5085)
!5097 = !DILocation(line: 189, column: 38, scope: !5085)
!5098 = !DILocation(line: 189, column: 26, scope: !5085)
!5099 = !DILocation(line: 189, column: 17, scope: !5085)
!5100 = !DILocation(line: 189, column: 13, scope: !5085)
!5101 = !DILocation(line: 189, column: 20, scope: !5085)
!5102 = !DILocation(line: 190, column: 9, scope: !5085)
!5103 = !DILocation(line: 187, column: 27, scope: !5104)
!5104 = !DILexicalBlockFile(scope: !5080, file: !1142, discriminator: 2)
!5105 = !DILocation(line: 187, column: 9, scope: !5104)
!5106 = distinct !{!5106, !5107}
!5107 = !DILocation(line: 187, column: 9, scope: !5068)
!5108 = !DILocation(line: 191, column: 5, scope: !5068)
!5109 = !DILocation(line: 192, column: 16, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5065, file: !1142, line: 191, column: 12)
!5111 = !DILocation(line: 192, column: 9, scope: !5110)
!5112 = !DILocation(line: 194, column: 1, scope: !4946)
!5113 = distinct !DISubprogram(name: "compute_lpc_coefs_fixed", scope: !1021, file: !1021, line: 166, type: !5114, isLocal: true, isDefinition: true, scopeLine: 169, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!5114 = !DISubroutineType(types: !5115)
!5115 = !{!1012, !5116, !1012, !5119, !1012, !1012, !1012}
!5116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5117, size: 64, align: 64)
!5117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5118)
!5118 = !DIDerivedType(tag: DW_TAG_typedef, name: "LPC_TYPE", file: !1021, line: 119, baseType: !1012)
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5118, size: 64, align: 64)
!5120 = !DILocalVariable(name: "autoc", arg: 1, scope: !5113, file: !1021, line: 166, type: !5116)
!5121 = !DILocation(line: 166, column: 59, scope: !5113)
!5122 = !DILocalVariable(name: "max_order", arg: 2, scope: !5113, file: !1021, line: 166, type: !1012)
!5123 = !DILocation(line: 166, column: 70, scope: !5113)
!5124 = !DILocalVariable(name: "lpc", arg: 3, scope: !5113, file: !1021, line: 167, type: !5119)
!5125 = !DILocation(line: 167, column: 47, scope: !5113)
!5126 = !DILocalVariable(name: "lpc_stride", arg: 4, scope: !5113, file: !1021, line: 167, type: !1012)
!5127 = !DILocation(line: 167, column: 56, scope: !5113)
!5128 = !DILocalVariable(name: "fail", arg: 5, scope: !5113, file: !1021, line: 167, type: !1012)
!5129 = !DILocation(line: 167, column: 72, scope: !5113)
!5130 = !DILocalVariable(name: "normalize", arg: 6, scope: !5113, file: !1021, line: 168, type: !1012)
!5131 = !DILocation(line: 168, column: 41, scope: !5113)
!5132 = !DILocalVariable(name: "i", scope: !5113, file: !1021, line: 170, type: !1012)
!5133 = !DILocation(line: 170, column: 9, scope: !5113)
!5134 = !DILocalVariable(name: "j", scope: !5113, file: !1021, line: 170, type: !1012)
!5135 = !DILocation(line: 170, column: 12, scope: !5113)
!5136 = !DILocalVariable(name: "err", scope: !5113, file: !1021, line: 171, type: !5118)
!5137 = !DILocation(line: 171, column: 14, scope: !5113)
!5138 = !DILocalVariable(name: "lpc_last", scope: !5113, file: !1021, line: 172, type: !5119)
!5139 = !DILocation(line: 172, column: 15, scope: !5113)
!5140 = !DILocation(line: 172, column: 26, scope: !5113)
!5141 = !DILocation(line: 176, column: 9, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5113, file: !1021, line: 176, column: 9)
!5143 = !DILocation(line: 176, column: 9, scope: !5113)
!5144 = !DILocation(line: 177, column: 21, scope: !5142)
!5145 = !DILocation(line: 177, column: 15, scope: !5142)
!5146 = !DILocation(line: 177, column: 13, scope: !5142)
!5147 = !DILocation(line: 177, column: 9, scope: !5142)
!5148 = !DILocation(line: 179, column: 9, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5113, file: !1021, line: 179, column: 9)
!5150 = !DILocation(line: 179, column: 14, scope: !5149)
!5151 = !DILocation(line: 179, column: 24, scope: !5152)
!5152 = !DILexicalBlockFile(scope: !5149, file: !1021, discriminator: 1)
!5153 = !DILocation(line: 179, column: 34, scope: !5152)
!5154 = !DILocation(line: 179, column: 18, scope: !5152)
!5155 = !DILocation(line: 179, column: 39, scope: !5152)
!5156 = !DILocation(line: 179, column: 44, scope: !5152)
!5157 = !DILocation(line: 179, column: 47, scope: !5158)
!5158 = !DILexicalBlockFile(scope: !5149, file: !1021, discriminator: 2)
!5159 = !DILocation(line: 179, column: 51, scope: !5158)
!5160 = !DILocation(line: 179, column: 9, scope: !5158)
!5161 = !DILocation(line: 180, column: 9, scope: !5149)
!5162 = !DILocation(line: 182, column: 10, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5113, file: !1021, line: 182, column: 5)
!5164 = !DILocation(line: 182, column: 9, scope: !5163)
!5165 = !DILocation(line: 182, column: 14, scope: !5166)
!5166 = !DILexicalBlockFile(scope: !5167, file: !1021, discriminator: 1)
!5167 = distinct !DILexicalBlock(scope: !5163, file: !1021, line: 182, column: 5)
!5168 = !DILocation(line: 182, column: 16, scope: !5166)
!5169 = !DILocation(line: 182, column: 15, scope: !5166)
!5170 = !DILocation(line: 182, column: 5, scope: !5166)
!5171 = !DILocalVariable(name: "r", scope: !5172, file: !1021, line: 183, type: !5118)
!5172 = distinct !DILexicalBlock(scope: !5167, file: !1021, line: 182, column: 32)
!5173 = !DILocation(line: 183, column: 18, scope: !5172)
!5174 = !DILocation(line: 183, column: 37, scope: !5172)
!5175 = !DILocation(line: 183, column: 31, scope: !5172)
!5176 = !DILocation(line: 183, column: 30, scope: !5172)
!5177 = !DILocation(line: 183, column: 41, scope: !5172)
!5178 = !DILocation(line: 183, column: 61, scope: !5172)
!5179 = !DILocation(line: 185, column: 13, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5172, file: !1021, line: 185, column: 13)
!5181 = !DILocation(line: 185, column: 13, scope: !5172)
!5182 = !DILocation(line: 186, column: 18, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5184, file: !1021, line: 186, column: 13)
!5184 = distinct !DILexicalBlock(scope: !5180, file: !1021, line: 185, column: 24)
!5185 = !DILocation(line: 186, column: 17, scope: !5183)
!5186 = !DILocation(line: 186, column: 22, scope: !5187)
!5187 = !DILexicalBlockFile(scope: !5188, file: !1021, discriminator: 1)
!5188 = distinct !DILexicalBlock(scope: !5183, file: !1021, line: 186, column: 13)
!5189 = !DILocation(line: 186, column: 24, scope: !5187)
!5190 = !DILocation(line: 186, column: 23, scope: !5187)
!5191 = !DILocation(line: 186, column: 13, scope: !5187)
!5192 = !DILocation(line: 187, column: 31, scope: !5188)
!5193 = !DILocation(line: 187, column: 22, scope: !5188)
!5194 = !DILocation(line: 187, column: 42, scope: !5188)
!5195 = !DILocation(line: 187, column: 44, scope: !5188)
!5196 = !DILocation(line: 187, column: 43, scope: !5188)
!5197 = !DILocation(line: 187, column: 45, scope: !5188)
!5198 = !DILocation(line: 187, column: 36, scope: !5188)
!5199 = !DILocation(line: 187, column: 34, scope: !5188)
!5200 = !DILocation(line: 187, column: 19, scope: !5188)
!5201 = !DILocation(line: 187, column: 17, scope: !5188)
!5202 = !DILocation(line: 186, column: 28, scope: !5203)
!5203 = !DILexicalBlockFile(scope: !5188, file: !1021, discriminator: 2)
!5204 = !DILocation(line: 186, column: 13, scope: !5203)
!5205 = distinct !{!5205, !5206}
!5206 = !DILocation(line: 186, column: 13, scope: !5184)
!5207 = !DILocation(line: 189, column: 18, scope: !5184)
!5208 = !DILocation(line: 189, column: 15, scope: !5184)
!5209 = !DILocation(line: 190, column: 48, scope: !5184)
!5210 = !DILocation(line: 190, column: 52, scope: !5184)
!5211 = !DILocation(line: 190, column: 50, scope: !5184)
!5212 = !DILocation(line: 190, column: 45, scope: !5184)
!5213 = !DILocation(line: 190, column: 17, scope: !5184)
!5214 = !DILocation(line: 191, column: 9, scope: !5184)
!5215 = !DILocation(line: 193, column: 18, scope: !5172)
!5216 = !DILocation(line: 193, column: 13, scope: !5172)
!5217 = !DILocation(line: 193, column: 9, scope: !5172)
!5218 = !DILocation(line: 193, column: 16, scope: !5172)
!5219 = !DILocation(line: 195, column: 14, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5172, file: !1021, line: 195, column: 9)
!5221 = !DILocation(line: 195, column: 13, scope: !5220)
!5222 = !DILocation(line: 195, column: 18, scope: !5223)
!5223 = !DILexicalBlockFile(scope: !5224, file: !1021, discriminator: 1)
!5224 = distinct !DILexicalBlock(scope: !5220, file: !1021, line: 195, column: 9)
!5225 = !DILocation(line: 195, column: 23, scope: !5223)
!5226 = !DILocation(line: 195, column: 24, scope: !5223)
!5227 = !DILocation(line: 195, column: 27, scope: !5223)
!5228 = !DILocation(line: 195, column: 20, scope: !5223)
!5229 = !DILocation(line: 195, column: 9, scope: !5223)
!5230 = !DILocalVariable(name: "f", scope: !5231, file: !1021, line: 196, type: !5118)
!5231 = distinct !DILexicalBlock(scope: !5224, file: !1021, line: 195, column: 37)
!5232 = !DILocation(line: 196, column: 22, scope: !5231)
!5233 = !DILocation(line: 196, column: 36, scope: !5231)
!5234 = !DILocation(line: 196, column: 26, scope: !5231)
!5235 = !DILocalVariable(name: "b", scope: !5231, file: !1021, line: 197, type: !5118)
!5236 = !DILocation(line: 197, column: 22, scope: !5231)
!5237 = !DILocation(line: 197, column: 35, scope: !5231)
!5238 = !DILocation(line: 197, column: 36, scope: !5231)
!5239 = !DILocation(line: 197, column: 39, scope: !5231)
!5240 = !DILocation(line: 197, column: 38, scope: !5231)
!5241 = !DILocation(line: 197, column: 26, scope: !5231)
!5242 = !DILocation(line: 198, column: 23, scope: !5231)
!5243 = !DILocation(line: 198, column: 56, scope: !5231)
!5244 = !DILocation(line: 198, column: 46, scope: !5231)
!5245 = !DILocation(line: 198, column: 62, scope: !5231)
!5246 = !DILocation(line: 198, column: 61, scope: !5231)
!5247 = !DILocation(line: 198, column: 59, scope: !5231)
!5248 = !DILocation(line: 198, column: 65, scope: !5231)
!5249 = !DILocation(line: 198, column: 78, scope: !5231)
!5250 = !DILocation(line: 198, column: 39, scope: !5231)
!5251 = !DILocation(line: 198, column: 25, scope: !5231)
!5252 = !DILocation(line: 198, column: 18, scope: !5231)
!5253 = !DILocation(line: 198, column: 13, scope: !5231)
!5254 = !DILocation(line: 198, column: 21, scope: !5231)
!5255 = !DILocation(line: 199, column: 26, scope: !5231)
!5256 = !DILocation(line: 199, column: 59, scope: !5231)
!5257 = !DILocation(line: 199, column: 49, scope: !5231)
!5258 = !DILocation(line: 199, column: 65, scope: !5231)
!5259 = !DILocation(line: 199, column: 64, scope: !5231)
!5260 = !DILocation(line: 199, column: 62, scope: !5231)
!5261 = !DILocation(line: 199, column: 68, scope: !5231)
!5262 = !DILocation(line: 199, column: 81, scope: !5231)
!5263 = !DILocation(line: 199, column: 42, scope: !5231)
!5264 = !DILocation(line: 199, column: 28, scope: !5231)
!5265 = !DILocation(line: 199, column: 17, scope: !5231)
!5266 = !DILocation(line: 199, column: 18, scope: !5231)
!5267 = !DILocation(line: 199, column: 21, scope: !5231)
!5268 = !DILocation(line: 199, column: 20, scope: !5231)
!5269 = !DILocation(line: 199, column: 13, scope: !5231)
!5270 = !DILocation(line: 199, column: 24, scope: !5231)
!5271 = !DILocation(line: 200, column: 9, scope: !5231)
!5272 = !DILocation(line: 195, column: 33, scope: !5273)
!5273 = !DILexicalBlockFile(scope: !5224, file: !1021, discriminator: 2)
!5274 = !DILocation(line: 195, column: 9, scope: !5273)
!5275 = distinct !{!5275, !5276}
!5276 = !DILocation(line: 195, column: 9, scope: !5172)
!5277 = !DILocation(line: 202, column: 13, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5172, file: !1021, line: 202, column: 13)
!5279 = !DILocation(line: 202, column: 18, scope: !5278)
!5280 = !DILocation(line: 202, column: 21, scope: !5281)
!5281 = !DILexicalBlockFile(scope: !5278, file: !1021, discriminator: 1)
!5282 = !DILocation(line: 202, column: 25, scope: !5281)
!5283 = !DILocation(line: 202, column: 13, scope: !5281)
!5284 = !DILocation(line: 203, column: 13, scope: !5278)
!5285 = !DILocation(line: 205, column: 20, scope: !5172)
!5286 = !DILocation(line: 205, column: 18, scope: !5172)
!5287 = !DILocation(line: 206, column: 16, scope: !5172)
!5288 = !DILocation(line: 206, column: 13, scope: !5172)
!5289 = !DILocation(line: 207, column: 5, scope: !5172)
!5290 = !DILocation(line: 182, column: 28, scope: !5291)
!5291 = !DILexicalBlockFile(scope: !5167, file: !1021, discriminator: 2)
!5292 = !DILocation(line: 182, column: 5, scope: !5291)
!5293 = distinct !{!5293, !5294}
!5294 = !DILocation(line: 182, column: 5, scope: !5113)
!5295 = !DILocation(line: 209, column: 5, scope: !5113)
!5296 = !DILocation(line: 210, column: 1, scope: !5113)
!5297 = distinct !DISubprogram(name: "init_get_bits", scope: !2043, file: !2043, line: 615, type: !5298, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!5298 = !DISubroutineType(types: !5299)
!5299 = !{!1012, !2041, !1605, !1012}
!5300 = !DILocalVariable(name: "s", arg: 1, scope: !5297, file: !2043, line: 615, type: !2041)
!5301 = !DILocation(line: 615, column: 48, scope: !5297)
!5302 = !DILocalVariable(name: "buffer", arg: 2, scope: !5297, file: !2043, line: 615, type: !1605)
!5303 = !DILocation(line: 615, column: 66, scope: !5297)
!5304 = !DILocalVariable(name: "bit_size", arg: 3, scope: !5297, file: !2043, line: 616, type: !1012)
!5305 = !DILocation(line: 616, column: 37, scope: !5297)
!5306 = !DILocalVariable(name: "buffer_size", scope: !5297, file: !2043, line: 618, type: !1012)
!5307 = !DILocation(line: 618, column: 9, scope: !5297)
!5308 = !DILocalVariable(name: "ret", scope: !5297, file: !2043, line: 619, type: !1012)
!5309 = !DILocation(line: 619, column: 9, scope: !5297)
!5310 = !DILocation(line: 621, column: 9, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5297, file: !2043, line: 621, column: 9)
!5312 = !DILocation(line: 621, column: 18, scope: !5311)
!5313 = !DILocation(line: 621, column: 64, scope: !5311)
!5314 = !DILocation(line: 621, column: 67, scope: !5315)
!5315 = !DILexicalBlockFile(scope: !5311, file: !2043, discriminator: 1)
!5316 = !DILocation(line: 621, column: 76, scope: !5315)
!5317 = !DILocation(line: 621, column: 80, scope: !5315)
!5318 = !DILocation(line: 621, column: 84, scope: !5319)
!5319 = !DILexicalBlockFile(scope: !5311, file: !2043, discriminator: 2)
!5320 = !DILocation(line: 621, column: 9, scope: !5319)
!5321 = !DILocation(line: 622, column: 18, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5311, file: !2043, line: 621, column: 92)
!5323 = !DILocation(line: 623, column: 16, scope: !5322)
!5324 = !DILocation(line: 624, column: 13, scope: !5322)
!5325 = !DILocation(line: 625, column: 5, scope: !5322)
!5326 = !DILocation(line: 627, column: 20, scope: !5297)
!5327 = !DILocation(line: 627, column: 29, scope: !5297)
!5328 = !DILocation(line: 627, column: 34, scope: !5297)
!5329 = !DILocation(line: 627, column: 17, scope: !5297)
!5330 = !DILocation(line: 629, column: 17, scope: !5297)
!5331 = !DILocation(line: 629, column: 5, scope: !5297)
!5332 = !DILocation(line: 629, column: 8, scope: !5297)
!5333 = !DILocation(line: 629, column: 15, scope: !5297)
!5334 = !DILocation(line: 630, column: 23, scope: !5297)
!5335 = !DILocation(line: 630, column: 5, scope: !5297)
!5336 = !DILocation(line: 630, column: 8, scope: !5297)
!5337 = !DILocation(line: 630, column: 21, scope: !5297)
!5338 = !DILocation(line: 631, column: 29, scope: !5297)
!5339 = !DILocation(line: 631, column: 38, scope: !5297)
!5340 = !DILocation(line: 631, column: 5, scope: !5297)
!5341 = !DILocation(line: 631, column: 8, scope: !5297)
!5342 = !DILocation(line: 631, column: 27, scope: !5297)
!5343 = !DILocation(line: 632, column: 21, scope: !5297)
!5344 = !DILocation(line: 632, column: 30, scope: !5297)
!5345 = !DILocation(line: 632, column: 28, scope: !5297)
!5346 = !DILocation(line: 632, column: 5, scope: !5297)
!5347 = !DILocation(line: 632, column: 8, scope: !5297)
!5348 = !DILocation(line: 632, column: 19, scope: !5297)
!5349 = !DILocation(line: 633, column: 5, scope: !5297)
!5350 = !DILocation(line: 633, column: 8, scope: !5297)
!5351 = !DILocation(line: 633, column: 14, scope: !5297)
!5352 = !DILocation(line: 639, column: 12, scope: !5297)
!5353 = !DILocation(line: 639, column: 5, scope: !5297)
!5354 = distinct !DISubprogram(name: "decode_audio_specific_config_gb", scope: !1800, file: !1800, line: 968, type: !5355, isLocal: true, isDefinition: true, scopeLine: 974, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!5355 = !DISubroutineType(types: !5356)
!5356 = !{!1012, !2071, !1259, !3315, !2041, !1012, !1012}
!5357 = !DILocalVariable(name: "ac", arg: 1, scope: !5354, file: !1800, line: 968, type: !2071)
!5358 = !DILocation(line: 968, column: 56, scope: !5354)
!5359 = !DILocalVariable(name: "avctx", arg: 2, scope: !5354, file: !1800, line: 969, type: !1259)
!5360 = !DILocation(line: 969, column: 60, scope: !5354)
!5361 = !DILocalVariable(name: "m4ac", arg: 3, scope: !5354, file: !1800, line: 970, type: !3315)
!5362 = !DILocation(line: 970, column: 62, scope: !5354)
!5363 = !DILocalVariable(name: "gb", arg: 4, scope: !5354, file: !1800, line: 971, type: !2041)
!5364 = !DILocation(line: 971, column: 59, scope: !5354)
!5365 = !DILocalVariable(name: "get_bit_alignment", arg: 5, scope: !5354, file: !1800, line: 972, type: !1012)
!5366 = !DILocation(line: 972, column: 48, scope: !5354)
!5367 = !DILocalVariable(name: "sync_extension", arg: 6, scope: !5354, file: !1800, line: 973, type: !1012)
!5368 = !DILocation(line: 973, column: 48, scope: !5354)
!5369 = !DILocalVariable(name: "i", scope: !5354, file: !1800, line: 975, type: !1012)
!5370 = !DILocation(line: 975, column: 9, scope: !5354)
!5371 = !DILocalVariable(name: "ret", scope: !5354, file: !1800, line: 975, type: !1012)
!5372 = !DILocation(line: 975, column: 12, scope: !5354)
!5373 = !DILocalVariable(name: "gbc", scope: !5354, file: !1800, line: 976, type: !2042)
!5374 = !DILocation(line: 976, column: 19, scope: !5354)
!5375 = !DILocation(line: 976, column: 26, scope: !5354)
!5376 = !DILocation(line: 976, column: 25, scope: !5354)
!5377 = !DILocation(line: 978, column: 42, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5354, file: !1800, line: 978, column: 9)
!5379 = !DILocation(line: 978, column: 54, scope: !5378)
!5380 = !DILocation(line: 978, column: 14, scope: !5378)
!5381 = !DILocation(line: 978, column: 12, scope: !5378)
!5382 = !DILocation(line: 978, column: 71, scope: !5378)
!5383 = !DILocation(line: 978, column: 9, scope: !5354)
!5384 = !DILocation(line: 979, column: 9, scope: !5378)
!5385 = !DILocation(line: 981, column: 9, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5354, file: !1800, line: 981, column: 9)
!5387 = !DILocation(line: 981, column: 15, scope: !5386)
!5388 = !DILocation(line: 981, column: 30, scope: !5386)
!5389 = !DILocation(line: 981, column: 9, scope: !5354)
!5390 = !DILocation(line: 982, column: 16, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5386, file: !1800, line: 981, column: 36)
!5392 = !DILocation(line: 984, column: 16, scope: !5391)
!5393 = !DILocation(line: 984, column: 22, scope: !5391)
!5394 = !DILocation(line: 982, column: 9, scope: !5391)
!5395 = !DILocation(line: 985, column: 9, scope: !5391)
!5396 = !DILocation(line: 987, column: 9, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5354, file: !1800, line: 987, column: 9)
!5398 = !DILocation(line: 987, column: 15, scope: !5397)
!5399 = !DILocation(line: 987, column: 27, scope: !5397)
!5400 = !DILocation(line: 987, column: 44, scope: !5397)
!5401 = !DILocation(line: 988, column: 10, scope: !5397)
!5402 = !DILocation(line: 988, column: 16, scope: !5397)
!5403 = !DILocation(line: 988, column: 31, scope: !5397)
!5404 = !DILocation(line: 988, column: 35, scope: !5397)
!5405 = !DILocation(line: 988, column: 38, scope: !5406)
!5406 = !DILexicalBlockFile(scope: !5397, file: !1800, discriminator: 1)
!5407 = !DILocation(line: 988, column: 44, scope: !5406)
!5408 = !DILocation(line: 988, column: 59, scope: !5406)
!5409 = !DILocation(line: 987, column: 9, scope: !5410)
!5410 = !DILexicalBlockFile(scope: !5354, file: !1800, discriminator: 1)
!5411 = !DILocation(line: 989, column: 16, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5397, file: !1800, line: 988, column: 65)
!5413 = !DILocation(line: 991, column: 16, scope: !5412)
!5414 = !DILocation(line: 991, column: 22, scope: !5412)
!5415 = !DILocation(line: 989, column: 9, scope: !5412)
!5416 = !DILocation(line: 992, column: 9, scope: !5412)
!5417 = !DILocation(line: 995, column: 20, scope: !5354)
!5418 = !DILocation(line: 995, column: 24, scope: !5354)
!5419 = !DILocation(line: 995, column: 5, scope: !5354)
!5420 = !DILocation(line: 997, column: 13, scope: !5354)
!5421 = !DILocation(line: 997, column: 19, scope: !5354)
!5422 = !DILocation(line: 997, column: 5, scope: !5354)
!5423 = !DILocation(line: 1004, column: 46, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5425, file: !1800, line: 1004, column: 13)
!5425 = distinct !DILexicalBlock(scope: !5354, file: !1800, line: 997, column: 32)
!5426 = !DILocation(line: 1004, column: 50, scope: !5424)
!5427 = !DILocation(line: 1004, column: 57, scope: !5424)
!5428 = !DILocation(line: 1004, column: 61, scope: !5424)
!5429 = !DILocation(line: 1005, column: 45, scope: !5424)
!5430 = !DILocation(line: 1005, column: 51, scope: !5424)
!5431 = !DILocation(line: 1005, column: 57, scope: !5424)
!5432 = !DILocation(line: 1004, column: 20, scope: !5424)
!5433 = !DILocation(line: 1004, column: 18, scope: !5424)
!5434 = !DILocation(line: 1005, column: 71, scope: !5424)
!5435 = !DILocation(line: 1004, column: 13, scope: !5425)
!5436 = !DILocation(line: 1006, column: 20, scope: !5424)
!5437 = !DILocation(line: 1006, column: 13, scope: !5424)
!5438 = !DILocation(line: 1007, column: 9, scope: !5425)
!5439 = !DILocation(line: 1009, column: 47, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5425, file: !1800, line: 1009, column: 13)
!5441 = !DILocation(line: 1009, column: 51, scope: !5440)
!5442 = !DILocation(line: 1009, column: 58, scope: !5440)
!5443 = !DILocation(line: 1010, column: 47, scope: !5440)
!5444 = !DILocation(line: 1010, column: 53, scope: !5440)
!5445 = !DILocation(line: 1010, column: 59, scope: !5440)
!5446 = !DILocation(line: 1009, column: 20, scope: !5440)
!5447 = !DILocation(line: 1009, column: 18, scope: !5440)
!5448 = !DILocation(line: 1010, column: 73, scope: !5440)
!5449 = !DILocation(line: 1009, column: 13, scope: !5425)
!5450 = !DILocation(line: 1011, column: 20, scope: !5440)
!5451 = !DILocation(line: 1011, column: 13, scope: !5440)
!5452 = !DILocation(line: 1012, column: 9, scope: !5425)
!5453 = !DILocation(line: 1014, column: 39, scope: !5425)
!5454 = !DILocation(line: 1016, column: 39, scope: !5425)
!5455 = !DILocation(line: 1016, column: 45, scope: !5425)
!5456 = !DILocation(line: 1016, column: 49, scope: !5425)
!5457 = !DILocation(line: 1017, column: 39, scope: !5425)
!5458 = !DILocation(line: 1017, column: 45, scope: !5425)
!5459 = !DILocation(line: 1014, column: 9, scope: !5425)
!5460 = !DILocation(line: 1018, column: 9, scope: !5425)
!5461 = !DILocation(line: 1021, column: 5, scope: !5354)
!5462 = distinct !{!5462, !5461}
!5463 = !DILocation(line: 1021, column: 199, scope: !5464)
!5464 = !DILexicalBlockFile(scope: !5465, file: !1800, discriminator: 1)
!5465 = distinct !DILexicalBlock(scope: !5354, file: !1800, line: 1021, column: 8)
!5466 = !DILocation(line: 1027, column: 27, scope: !5354)
!5467 = !DILocation(line: 1027, column: 12, scope: !5354)
!5468 = !DILocation(line: 1027, column: 5, scope: !5354)
!5469 = !DILocation(line: 1028, column: 1, scope: !5354)
!5470 = distinct !DISubprogram(name: "skip_bits_long", scope: !2043, file: !2043, line: 293, type: !5471, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!5471 = !DISubroutineType(types: !5472)
!5472 = !{null, !2041, !1012}
!5473 = !DILocalVariable(name: "a", arg: 1, scope: !5474, file: !5475, line: 127, type: !1012)
!5474 = distinct !DISubprogram(name: "av_clip_c", scope: !5475, file: !5475, line: 127, type: !5476, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!5475 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5476 = !DISubroutineType(types: !5477)
!5477 = !{!1012, !1012, !1012, !1012}
!5478 = !DILocation(line: 127, column: 87, scope: !5474, inlinedAt: !5479)
!5479 = distinct !DILocation(line: 301, column: 17, scope: !5470)
!5480 = !DILocalVariable(name: "amin", arg: 2, scope: !5474, file: !5475, line: 127, type: !1012)
!5481 = !DILocation(line: 127, column: 94, scope: !5474, inlinedAt: !5479)
!5482 = !DILocalVariable(name: "amax", arg: 3, scope: !5474, file: !5475, line: 127, type: !1012)
!5483 = !DILocation(line: 127, column: 104, scope: !5474, inlinedAt: !5479)
!5484 = !DILocalVariable(name: "s", arg: 1, scope: !5470, file: !2043, line: 293, type: !2041)
!5485 = !DILocation(line: 293, column: 50, scope: !5470)
!5486 = !DILocalVariable(name: "n", arg: 2, scope: !5470, file: !2043, line: 293, type: !1012)
!5487 = !DILocation(line: 293, column: 57, scope: !5470)
!5488 = !DILocation(line: 301, column: 27, scope: !5470)
!5489 = !DILocation(line: 301, column: 31, scope: !5470)
!5490 = !DILocation(line: 301, column: 34, scope: !5470)
!5491 = !DILocation(line: 301, column: 30, scope: !5470)
!5492 = !DILocation(line: 301, column: 41, scope: !5470)
!5493 = !DILocation(line: 301, column: 44, scope: !5470)
!5494 = !DILocation(line: 301, column: 65, scope: !5470)
!5495 = !DILocation(line: 301, column: 68, scope: !5470)
!5496 = !DILocation(line: 301, column: 63, scope: !5470)
!5497 = !DILocation(line: 301, column: 17, scope: !5470)
!5498 = !DILocation(line: 132, column: 9, scope: !5499, inlinedAt: !5479)
!5499 = distinct !DILexicalBlock(scope: !5474, file: !5475, line: 132, column: 9)
!5500 = !DILocation(line: 132, column: 13, scope: !5499, inlinedAt: !5479)
!5501 = !DILocation(line: 132, column: 11, scope: !5499, inlinedAt: !5479)
!5502 = !DILocation(line: 132, column: 9, scope: !5474, inlinedAt: !5479)
!5503 = !DILocation(line: 132, column: 26, scope: !5504, inlinedAt: !5479)
!5504 = !DILexicalBlockFile(scope: !5499, file: !5475, discriminator: 1)
!5505 = !DILocation(line: 132, column: 19, scope: !5504, inlinedAt: !5479)
!5506 = !DILocation(line: 133, column: 14, scope: !5507, inlinedAt: !5479)
!5507 = distinct !DILexicalBlock(scope: !5499, file: !5475, line: 133, column: 14)
!5508 = !DILocation(line: 133, column: 18, scope: !5507, inlinedAt: !5479)
!5509 = !DILocation(line: 133, column: 16, scope: !5507, inlinedAt: !5479)
!5510 = !DILocation(line: 133, column: 14, scope: !5499, inlinedAt: !5479)
!5511 = !DILocation(line: 133, column: 31, scope: !5512, inlinedAt: !5479)
!5512 = !DILexicalBlockFile(scope: !5507, file: !5475, discriminator: 1)
!5513 = !DILocation(line: 133, column: 24, scope: !5512, inlinedAt: !5479)
!5514 = !DILocation(line: 134, column: 17, scope: !5507, inlinedAt: !5479)
!5515 = !DILocation(line: 134, column: 10, scope: !5507, inlinedAt: !5479)
!5516 = !DILocation(line: 135, column: 1, scope: !5474, inlinedAt: !5479)
!5517 = !DILocation(line: 301, column: 5, scope: !5470)
!5518 = !DILocation(line: 301, column: 8, scope: !5470)
!5519 = !DILocation(line: 301, column: 14, scope: !5470)
!5520 = !DILocation(line: 304, column: 1, scope: !5470)
!5521 = distinct !DISubprogram(name: "decode_ga_specific_config", scope: !1800, file: !1800, line: 804, type: !5522, isLocal: true, isDefinition: true, scopeLine: 809, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!5522 = !DISubroutineType(types: !5523)
!5523 = !{!1012, !2071, !1259, !2041, !1012, !3315, !1012}
!5524 = !DILocalVariable(name: "ac", arg: 1, scope: !5521, file: !1800, line: 804, type: !2071)
!5525 = !DILocation(line: 804, column: 50, scope: !5521)
!5526 = !DILocalVariable(name: "avctx", arg: 2, scope: !5521, file: !1800, line: 804, type: !1259)
!5527 = !DILocation(line: 804, column: 70, scope: !5521)
!5528 = !DILocalVariable(name: "gb", arg: 3, scope: !5521, file: !1800, line: 805, type: !2041)
!5529 = !DILocation(line: 805, column: 53, scope: !5521)
!5530 = !DILocalVariable(name: "get_bit_alignment", arg: 4, scope: !5521, file: !1800, line: 806, type: !1012)
!5531 = !DILocation(line: 806, column: 42, scope: !5521)
!5532 = !DILocalVariable(name: "m4ac", arg: 5, scope: !5521, file: !1800, line: 807, type: !3315)
!5533 = !DILocation(line: 807, column: 56, scope: !5521)
!5534 = !DILocalVariable(name: "channel_config", arg: 6, scope: !5521, file: !1800, line: 808, type: !1012)
!5535 = !DILocation(line: 808, column: 42, scope: !5521)
!5536 = !DILocalVariable(name: "extension_flag", scope: !5521, file: !1800, line: 810, type: !1012)
!5537 = !DILocation(line: 810, column: 9, scope: !5521)
!5538 = !DILocalVariable(name: "ret", scope: !5521, file: !1800, line: 810, type: !1012)
!5539 = !DILocation(line: 810, column: 25, scope: !5521)
!5540 = !DILocalVariable(name: "ep_config", scope: !5521, file: !1800, line: 810, type: !1012)
!5541 = !DILocation(line: 810, column: 30, scope: !5521)
!5542 = !DILocalVariable(name: "res_flags", scope: !5521, file: !1800, line: 810, type: !1012)
!5543 = !DILocation(line: 810, column: 41, scope: !5521)
!5544 = !DILocalVariable(name: "layout_map", scope: !5521, file: !1800, line: 811, type: !2597)
!5545 = !DILocation(line: 811, column: 13, scope: !5521)
!5546 = !DILocalVariable(name: "tags", scope: !5521, file: !1800, line: 812, type: !1012)
!5547 = !DILocation(line: 812, column: 9, scope: !5521)
!5548 = !DILocation(line: 815, column: 19, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5521, file: !1800, line: 815, column: 9)
!5550 = !DILocation(line: 815, column: 9, scope: !5549)
!5551 = !DILocation(line: 815, column: 9, scope: !5521)
!5552 = !DILocation(line: 816, column: 39, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5549, file: !1800, line: 815, column: 24)
!5554 = !DILocation(line: 816, column: 9, scope: !5553)
!5555 = !DILocation(line: 817, column: 9, scope: !5553)
!5556 = !DILocation(line: 819, column: 5, scope: !5521)
!5557 = !DILocation(line: 819, column: 11, scope: !5521)
!5558 = !DILocation(line: 819, column: 30, scope: !5521)
!5559 = !DILocation(line: 830, column: 19, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5521, file: !1800, line: 830, column: 9)
!5561 = !DILocation(line: 830, column: 9, scope: !5560)
!5562 = !DILocation(line: 830, column: 9, scope: !5521)
!5563 = !DILocation(line: 831, column: 19, scope: !5560)
!5564 = !DILocation(line: 831, column: 9, scope: !5560)
!5565 = !DILocation(line: 832, column: 32, scope: !5521)
!5566 = !DILocation(line: 832, column: 22, scope: !5521)
!5567 = !DILocation(line: 832, column: 20, scope: !5521)
!5568 = !DILocation(line: 834, column: 9, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5521, file: !1800, line: 834, column: 9)
!5570 = !DILocation(line: 834, column: 15, scope: !5569)
!5571 = !DILocation(line: 834, column: 27, scope: !5569)
!5572 = !DILocation(line: 834, column: 47, scope: !5569)
!5573 = !DILocation(line: 835, column: 9, scope: !5569)
!5574 = !DILocation(line: 835, column: 15, scope: !5569)
!5575 = !DILocation(line: 835, column: 27, scope: !5569)
!5576 = !DILocation(line: 834, column: 9, scope: !5577)
!5577 = !DILexicalBlockFile(scope: !5521, file: !1800, discriminator: 1)
!5578 = !DILocation(line: 836, column: 19, scope: !5569)
!5579 = !DILocation(line: 836, column: 9, scope: !5569)
!5580 = !DILocation(line: 838, column: 9, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5521, file: !1800, line: 838, column: 9)
!5582 = !DILocation(line: 838, column: 24, scope: !5581)
!5583 = !DILocation(line: 838, column: 9, scope: !5521)
!5584 = !DILocation(line: 839, column: 19, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5581, file: !1800, line: 838, column: 30)
!5586 = !DILocation(line: 839, column: 9, scope: !5585)
!5587 = !DILocation(line: 840, column: 27, scope: !5585)
!5588 = !DILocation(line: 840, column: 34, scope: !5585)
!5589 = !DILocation(line: 840, column: 40, scope: !5585)
!5590 = !DILocation(line: 840, column: 52, scope: !5585)
!5591 = !DILocation(line: 840, column: 56, scope: !5585)
!5592 = !DILocation(line: 840, column: 16, scope: !5585)
!5593 = !DILocation(line: 840, column: 14, scope: !5585)
!5594 = !DILocation(line: 841, column: 13, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5585, file: !1800, line: 841, column: 13)
!5596 = !DILocation(line: 841, column: 18, scope: !5595)
!5597 = !DILocation(line: 841, column: 13, scope: !5585)
!5598 = !DILocation(line: 842, column: 20, scope: !5595)
!5599 = !DILocation(line: 842, column: 13, scope: !5595)
!5600 = !DILocation(line: 843, column: 5, scope: !5585)
!5601 = !DILocation(line: 844, column: 47, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5603, file: !1800, line: 844, column: 13)
!5603 = distinct !DILexicalBlock(scope: !5581, file: !1800, line: 843, column: 12)
!5604 = !DILocation(line: 844, column: 54, scope: !5602)
!5605 = !DILocation(line: 845, column: 54, scope: !5602)
!5606 = !DILocation(line: 844, column: 20, scope: !5602)
!5607 = !DILocation(line: 844, column: 18, scope: !5602)
!5608 = !DILocation(line: 844, column: 13, scope: !5603)
!5609 = !DILocation(line: 846, column: 20, scope: !5602)
!5610 = !DILocation(line: 846, column: 13, scope: !5602)
!5611 = !DILocation(line: 849, column: 24, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5521, file: !1800, line: 849, column: 9)
!5613 = !DILocation(line: 849, column: 36, scope: !5612)
!5614 = !DILocation(line: 849, column: 9, scope: !5612)
!5615 = !DILocation(line: 849, column: 42, scope: !5612)
!5616 = !DILocation(line: 849, column: 9, scope: !5521)
!5617 = !DILocation(line: 850, column: 9, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5612, file: !1800, line: 849, column: 47)
!5619 = !DILocation(line: 850, column: 15, scope: !5618)
!5620 = !DILocation(line: 850, column: 18, scope: !5618)
!5621 = !DILocation(line: 851, column: 5, scope: !5618)
!5622 = !DILocation(line: 851, column: 16, scope: !5623)
!5623 = !DILexicalBlockFile(scope: !5624, file: !1800, discriminator: 1)
!5624 = distinct !DILexicalBlock(scope: !5612, file: !1800, line: 851, column: 16)
!5625 = !DILocation(line: 851, column: 22, scope: !5623)
!5626 = !DILocation(line: 851, column: 26, scope: !5623)
!5627 = !DILocation(line: 851, column: 31, scope: !5623)
!5628 = !DILocation(line: 851, column: 34, scope: !5629)
!5629 = !DILexicalBlockFile(scope: !5624, file: !1800, discriminator: 2)
!5630 = !DILocation(line: 851, column: 40, scope: !5629)
!5631 = !DILocation(line: 851, column: 43, scope: !5629)
!5632 = !DILocation(line: 851, column: 16, scope: !5629)
!5633 = !DILocation(line: 852, column: 9, scope: !5624)
!5634 = !DILocation(line: 852, column: 15, scope: !5624)
!5635 = !DILocation(line: 852, column: 18, scope: !5624)
!5636 = !DILocation(line: 854, column: 9, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5521, file: !1800, line: 854, column: 9)
!5638 = !DILocation(line: 854, column: 12, scope: !5637)
!5639 = !DILocation(line: 854, column: 39, scope: !5640)
!5640 = !DILexicalBlockFile(scope: !5637, file: !1800, discriminator: 1)
!5641 = !DILocation(line: 854, column: 43, scope: !5640)
!5642 = !DILocation(line: 854, column: 55, scope: !5640)
!5643 = !DILocation(line: 854, column: 22, scope: !5640)
!5644 = !DILocation(line: 854, column: 20, scope: !5640)
!5645 = !DILocation(line: 854, column: 9, scope: !5640)
!5646 = !DILocation(line: 855, column: 16, scope: !5637)
!5647 = !DILocation(line: 855, column: 9, scope: !5637)
!5648 = !DILocation(line: 857, column: 9, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5521, file: !1800, line: 857, column: 9)
!5650 = !DILocation(line: 857, column: 9, scope: !5521)
!5651 = !DILocation(line: 858, column: 17, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5649, file: !1800, line: 857, column: 25)
!5653 = !DILocation(line: 858, column: 23, scope: !5652)
!5654 = !DILocation(line: 858, column: 9, scope: !5652)
!5655 = !DILocation(line: 860, column: 23, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5652, file: !1800, line: 858, column: 36)
!5657 = !DILocation(line: 860, column: 13, scope: !5656)
!5658 = !DILocation(line: 861, column: 23, scope: !5656)
!5659 = !DILocation(line: 861, column: 13, scope: !5656)
!5660 = !DILocation(line: 862, column: 13, scope: !5656)
!5661 = !DILocation(line: 867, column: 34, scope: !5656)
!5662 = !DILocation(line: 867, column: 25, scope: !5656)
!5663 = !DILocation(line: 867, column: 23, scope: !5656)
!5664 = !DILocation(line: 868, column: 17, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5656, file: !1800, line: 868, column: 17)
!5666 = !DILocation(line: 868, column: 17, scope: !5656)
!5667 = !DILocation(line: 869, column: 47, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5665, file: !1800, line: 868, column: 28)
!5669 = !DILocation(line: 871, column: 47, scope: !5668)
!5670 = !DILocation(line: 869, column: 17, scope: !5668)
!5671 = !DILocation(line: 872, column: 17, scope: !5668)
!5672 = !DILocation(line: 874, column: 13, scope: !5656)
!5673 = !DILocation(line: 876, column: 20, scope: !5652)
!5674 = !DILocation(line: 876, column: 9, scope: !5652)
!5675 = !DILocation(line: 877, column: 5, scope: !5652)
!5676 = !DILocation(line: 878, column: 13, scope: !5521)
!5677 = !DILocation(line: 878, column: 19, scope: !5521)
!5678 = !DILocation(line: 878, column: 5, scope: !5521)
!5679 = !DILocation(line: 883, column: 30, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5521, file: !1800, line: 878, column: 32)
!5681 = !DILocation(line: 883, column: 21, scope: !5680)
!5682 = !DILocation(line: 883, column: 19, scope: !5680)
!5683 = !DILocation(line: 884, column: 13, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5680, file: !1800, line: 884, column: 13)
!5685 = !DILocation(line: 884, column: 13, scope: !5680)
!5686 = !DILocation(line: 885, column: 43, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5684, file: !1800, line: 884, column: 24)
!5688 = !DILocation(line: 886, column: 58, scope: !5687)
!5689 = !DILocation(line: 885, column: 13, scope: !5687)
!5690 = !DILocation(line: 887, column: 13, scope: !5687)
!5691 = !DILocation(line: 889, column: 5, scope: !5680)
!5692 = !DILocation(line: 890, column: 5, scope: !5521)
!5693 = !DILocation(line: 891, column: 1, scope: !5521)
!5694 = distinct !DISubprogram(name: "decode_eld_specific_config", scope: !1800, file: !1800, line: 893, type: !5695, isLocal: true, isDefinition: true, scopeLine: 897, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!5695 = !DISubroutineType(types: !5696)
!5696 = !{!1012, !2071, !1259, !2041, !3315, !1012}
!5697 = !DILocalVariable(name: "ac", arg: 1, scope: !5694, file: !1800, line: 893, type: !2071)
!5698 = !DILocation(line: 893, column: 51, scope: !5694)
!5699 = !DILocalVariable(name: "avctx", arg: 2, scope: !5694, file: !1800, line: 893, type: !1259)
!5700 = !DILocation(line: 893, column: 71, scope: !5694)
!5701 = !DILocalVariable(name: "gb", arg: 3, scope: !5694, file: !1800, line: 894, type: !2041)
!5702 = !DILocation(line: 894, column: 53, scope: !5694)
!5703 = !DILocalVariable(name: "m4ac", arg: 4, scope: !5694, file: !1800, line: 895, type: !3315)
!5704 = !DILocation(line: 895, column: 56, scope: !5694)
!5705 = !DILocalVariable(name: "channel_config", arg: 5, scope: !5694, file: !1800, line: 896, type: !1012)
!5706 = !DILocation(line: 896, column: 42, scope: !5694)
!5707 = !DILocalVariable(name: "ret", scope: !5694, file: !1800, line: 898, type: !1012)
!5708 = !DILocation(line: 898, column: 9, scope: !5694)
!5709 = !DILocalVariable(name: "ep_config", scope: !5694, file: !1800, line: 898, type: !1012)
!5710 = !DILocation(line: 898, column: 14, scope: !5694)
!5711 = !DILocalVariable(name: "res_flags", scope: !5694, file: !1800, line: 898, type: !1012)
!5712 = !DILocation(line: 898, column: 25, scope: !5694)
!5713 = !DILocalVariable(name: "layout_map", scope: !5694, file: !1800, line: 899, type: !2597)
!5714 = !DILocation(line: 899, column: 13, scope: !5694)
!5715 = !DILocalVariable(name: "tags", scope: !5694, file: !1800, line: 900, type: !1012)
!5716 = !DILocation(line: 900, column: 9, scope: !5694)
!5717 = !DILocalVariable(name: "ELDEXT_TERM", scope: !5694, file: !1800, line: 901, type: !1162)
!5718 = !DILocation(line: 901, column: 15, scope: !5694)
!5719 = !DILocation(line: 903, column: 5, scope: !5694)
!5720 = !DILocation(line: 903, column: 11, scope: !5694)
!5721 = !DILocation(line: 903, column: 14, scope: !5694)
!5722 = !DILocation(line: 904, column: 5, scope: !5694)
!5723 = !DILocation(line: 904, column: 11, scope: !5694)
!5724 = !DILocation(line: 904, column: 15, scope: !5694)
!5725 = !DILocation(line: 906, column: 19, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5694, file: !1800, line: 906, column: 9)
!5727 = !DILocation(line: 906, column: 9, scope: !5726)
!5728 = !DILocation(line: 906, column: 9, scope: !5694)
!5729 = !DILocation(line: 907, column: 31, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5726, file: !1800, line: 906, column: 24)
!5731 = !DILocation(line: 907, column: 9, scope: !5730)
!5732 = !DILocation(line: 908, column: 9, scope: !5730)
!5733 = !DILocation(line: 913, column: 26, scope: !5694)
!5734 = !DILocation(line: 913, column: 17, scope: !5694)
!5735 = !DILocation(line: 913, column: 15, scope: !5694)
!5736 = !DILocation(line: 914, column: 9, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5694, file: !1800, line: 914, column: 9)
!5738 = !DILocation(line: 914, column: 9, scope: !5694)
!5739 = !DILocation(line: 915, column: 39, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5737, file: !1800, line: 914, column: 20)
!5741 = !DILocation(line: 917, column: 39, scope: !5740)
!5742 = !DILocation(line: 915, column: 9, scope: !5740)
!5743 = !DILocation(line: 918, column: 9, scope: !5740)
!5744 = !DILocation(line: 921, column: 19, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5694, file: !1800, line: 921, column: 9)
!5746 = !DILocation(line: 921, column: 9, scope: !5745)
!5747 = !DILocation(line: 921, column: 9, scope: !5694)
!5748 = !DILocation(line: 922, column: 39, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5745, file: !1800, line: 921, column: 24)
!5750 = !DILocation(line: 922, column: 9, scope: !5749)
!5751 = !DILocation(line: 924, column: 9, scope: !5749)
!5752 = !DILocation(line: 927, column: 5, scope: !5694)
!5753 = !DILocation(line: 927, column: 21, scope: !5754)
!5754 = !DILexicalBlockFile(scope: !5694, file: !1800, discriminator: 1)
!5755 = !DILocation(line: 927, column: 12, scope: !5754)
!5756 = !DILocation(line: 927, column: 28, scope: !5754)
!5757 = !DILocation(line: 927, column: 5, scope: !5754)
!5758 = !DILocalVariable(name: "len", scope: !5759, file: !1800, line: 928, type: !1012)
!5759 = distinct !DILexicalBlock(scope: !5694, file: !1800, line: 927, column: 44)
!5760 = !DILocation(line: 928, column: 13, scope: !5759)
!5761 = !DILocation(line: 928, column: 28, scope: !5759)
!5762 = !DILocation(line: 928, column: 19, scope: !5759)
!5763 = !DILocation(line: 929, column: 13, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5759, file: !1800, line: 929, column: 13)
!5765 = !DILocation(line: 929, column: 17, scope: !5764)
!5766 = !DILocation(line: 929, column: 13, scope: !5759)
!5767 = !DILocation(line: 930, column: 29, scope: !5764)
!5768 = !DILocation(line: 930, column: 20, scope: !5764)
!5769 = !DILocation(line: 930, column: 17, scope: !5764)
!5770 = !DILocation(line: 930, column: 13, scope: !5764)
!5771 = !DILocation(line: 931, column: 13, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5759, file: !1800, line: 931, column: 13)
!5773 = !DILocation(line: 931, column: 17, scope: !5772)
!5774 = !DILocation(line: 931, column: 13, scope: !5759)
!5775 = !DILocation(line: 932, column: 29, scope: !5772)
!5776 = !DILocation(line: 932, column: 20, scope: !5772)
!5777 = !DILocation(line: 932, column: 17, scope: !5772)
!5778 = !DILocation(line: 932, column: 13, scope: !5772)
!5779 = !DILocation(line: 933, column: 27, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5759, file: !1800, line: 933, column: 13)
!5781 = !DILocation(line: 933, column: 13, scope: !5780)
!5782 = !DILocation(line: 933, column: 33, scope: !5780)
!5783 = !DILocation(line: 933, column: 37, scope: !5780)
!5784 = !DILocation(line: 933, column: 41, scope: !5780)
!5785 = !DILocation(line: 933, column: 31, scope: !5780)
!5786 = !DILocation(line: 933, column: 13, scope: !5759)
!5787 = !DILocation(line: 934, column: 20, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5780, file: !1800, line: 933, column: 46)
!5789 = !DILocation(line: 934, column: 13, scope: !5788)
!5790 = !DILocation(line: 935, column: 13, scope: !5788)
!5791 = !DILocation(line: 937, column: 24, scope: !5759)
!5792 = !DILocation(line: 937, column: 32, scope: !5759)
!5793 = !DILocation(line: 937, column: 30, scope: !5759)
!5794 = !DILocation(line: 937, column: 9, scope: !5759)
!5795 = !DILocation(line: 927, column: 5, scope: !5796)
!5796 = !DILexicalBlockFile(scope: !5694, file: !1800, discriminator: 2)
!5797 = distinct !{!5797, !5752}
!5798 = !DILocation(line: 940, column: 43, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5694, file: !1800, line: 940, column: 9)
!5800 = !DILocation(line: 940, column: 50, scope: !5799)
!5801 = !DILocation(line: 941, column: 50, scope: !5799)
!5802 = !DILocation(line: 940, column: 16, scope: !5799)
!5803 = !DILocation(line: 940, column: 14, scope: !5799)
!5804 = !DILocation(line: 940, column: 9, scope: !5694)
!5805 = !DILocation(line: 942, column: 16, scope: !5799)
!5806 = !DILocation(line: 942, column: 9, scope: !5799)
!5807 = !DILocation(line: 944, column: 9, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5694, file: !1800, line: 944, column: 9)
!5809 = !DILocation(line: 944, column: 12, scope: !5808)
!5810 = !DILocation(line: 944, column: 39, scope: !5811)
!5811 = !DILexicalBlockFile(scope: !5808, file: !1800, discriminator: 1)
!5812 = !DILocation(line: 944, column: 43, scope: !5811)
!5813 = !DILocation(line: 944, column: 55, scope: !5811)
!5814 = !DILocation(line: 944, column: 22, scope: !5811)
!5815 = !DILocation(line: 944, column: 20, scope: !5811)
!5816 = !DILocation(line: 944, column: 9, scope: !5811)
!5817 = !DILocation(line: 945, column: 16, scope: !5808)
!5818 = !DILocation(line: 945, column: 9, scope: !5808)
!5819 = !DILocation(line: 947, column: 26, scope: !5694)
!5820 = !DILocation(line: 947, column: 17, scope: !5694)
!5821 = !DILocation(line: 947, column: 15, scope: !5694)
!5822 = !DILocation(line: 948, column: 9, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5694, file: !1800, line: 948, column: 9)
!5824 = !DILocation(line: 948, column: 9, scope: !5694)
!5825 = !DILocation(line: 949, column: 39, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5823, file: !1800, line: 948, column: 20)
!5827 = !DILocation(line: 950, column: 54, scope: !5826)
!5828 = !DILocation(line: 949, column: 9, scope: !5826)
!5829 = !DILocation(line: 951, column: 9, scope: !5826)
!5830 = !DILocation(line: 953, column: 5, scope: !5694)
!5831 = !DILocation(line: 954, column: 1, scope: !5694)
!5832 = distinct !DISubprogram(name: "get_bits_count", scope: !2043, file: !2043, line: 219, type: !5833, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!5833 = !DISubroutineType(types: !5834)
!5834 = !{!1012, !5835}
!5835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5836, size: 64, align: 64)
!5836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2042)
!5837 = !DILocalVariable(name: "s", arg: 1, scope: !5832, file: !2043, line: 219, type: !5835)
!5838 = !DILocation(line: 219, column: 55, scope: !5832)
!5839 = !DILocation(line: 224, column: 12, scope: !5832)
!5840 = !DILocation(line: 224, column: 15, scope: !5832)
!5841 = !DILocation(line: 224, column: 5, scope: !5832)
!5842 = distinct !DISubprogram(name: "get_bits1", scope: !2043, file: !2043, line: 487, type: !5843, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!5843 = !DISubroutineType(types: !5844)
!5844 = !{!1013, !2041}
!5845 = !DILocalVariable(name: "s", arg: 1, scope: !5842, file: !2043, line: 487, type: !2041)
!5846 = !DILocation(line: 487, column: 53, scope: !5842)
!5847 = !DILocalVariable(name: "index", scope: !5842, file: !2043, line: 499, type: !1013)
!5848 = !DILocation(line: 499, column: 18, scope: !5842)
!5849 = !DILocation(line: 499, column: 26, scope: !5842)
!5850 = !DILocation(line: 499, column: 29, scope: !5842)
!5851 = !DILocalVariable(name: "result", scope: !5842, file: !2043, line: 500, type: !1030)
!5852 = !DILocation(line: 500, column: 13, scope: !5842)
!5853 = !DILocation(line: 500, column: 32, scope: !5842)
!5854 = !DILocation(line: 500, column: 38, scope: !5842)
!5855 = !DILocation(line: 500, column: 22, scope: !5842)
!5856 = !DILocation(line: 500, column: 25, scope: !5842)
!5857 = !DILocation(line: 505, column: 16, scope: !5842)
!5858 = !DILocation(line: 505, column: 22, scope: !5842)
!5859 = !DILocation(line: 505, column: 12, scope: !5842)
!5860 = !DILocation(line: 506, column: 12, scope: !5842)
!5861 = !DILocation(line: 509, column: 9, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5842, file: !2043, line: 509, column: 9)
!5863 = !DILocation(line: 509, column: 12, scope: !5862)
!5864 = !DILocation(line: 509, column: 20, scope: !5862)
!5865 = !DILocation(line: 509, column: 23, scope: !5862)
!5866 = !DILocation(line: 509, column: 18, scope: !5862)
!5867 = !DILocation(line: 509, column: 9, scope: !5842)
!5868 = !DILocation(line: 511, column: 14, scope: !5862)
!5869 = !DILocation(line: 511, column: 9, scope: !5862)
!5870 = !DILocation(line: 512, column: 16, scope: !5842)
!5871 = !DILocation(line: 512, column: 5, scope: !5842)
!5872 = !DILocation(line: 512, column: 8, scope: !5842)
!5873 = !DILocation(line: 512, column: 14, scope: !5842)
!5874 = !DILocation(line: 514, column: 12, scope: !5842)
!5875 = !DILocation(line: 514, column: 5, scope: !5842)
!5876 = distinct !DISubprogram(name: "skip_bits", scope: !2043, file: !2043, line: 460, type: !5471, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!5877 = !DILocalVariable(name: "s", arg: 1, scope: !5876, file: !2043, line: 460, type: !2041)
!5878 = !DILocation(line: 460, column: 45, scope: !5876)
!5879 = !DILocalVariable(name: "n", arg: 2, scope: !5876, file: !2043, line: 460, type: !1012)
!5880 = !DILocation(line: 460, column: 52, scope: !5876)
!5881 = !DILocalVariable(name: "re_index", scope: !5876, file: !2043, line: 481, type: !1013)
!5882 = !DILocation(line: 481, column: 18, scope: !5876)
!5883 = !DILocation(line: 481, column: 30, scope: !5876)
!5884 = !DILocation(line: 481, column: 34, scope: !5876)
!5885 = !DILocalVariable(name: "re_cache", scope: !5876, file: !2043, line: 481, type: !1013)
!5886 = !DILocation(line: 481, column: 78, scope: !5876)
!5887 = !DILocalVariable(name: "re_size_plus8", scope: !5876, file: !2043, line: 481, type: !1013)
!5888 = !DILocation(line: 481, column: 101, scope: !5876)
!5889 = !DILocation(line: 481, column: 118, scope: !5876)
!5890 = !DILocation(line: 481, column: 122, scope: !5876)
!5891 = !DILocation(line: 482, column: 18, scope: !5876)
!5892 = !DILocation(line: 482, column: 36, scope: !5876)
!5893 = !DILocation(line: 482, column: 48, scope: !5876)
!5894 = !DILocation(line: 482, column: 45, scope: !5876)
!5895 = !DILocation(line: 482, column: 33, scope: !5876)
!5896 = !DILocation(line: 482, column: 17, scope: !5876)
!5897 = !DILocation(line: 482, column: 55, scope: !5898)
!5898 = !DILexicalBlockFile(scope: !5876, file: !2043, discriminator: 1)
!5899 = !DILocation(line: 482, column: 67, scope: !5898)
!5900 = !DILocation(line: 482, column: 64, scope: !5898)
!5901 = !DILocation(line: 482, column: 17, scope: !5898)
!5902 = !DILocation(line: 482, column: 74, scope: !5903)
!5903 = !DILexicalBlockFile(scope: !5876, file: !2043, discriminator: 2)
!5904 = !DILocation(line: 482, column: 17, scope: !5903)
!5905 = !DILocation(line: 482, column: 17, scope: !5906)
!5906 = !DILexicalBlockFile(scope: !5876, file: !2043, discriminator: 3)
!5907 = !DILocation(line: 482, column: 14, scope: !5906)
!5908 = !DILocation(line: 483, column: 18, scope: !5876)
!5909 = !DILocation(line: 483, column: 6, scope: !5876)
!5910 = !DILocation(line: 483, column: 10, scope: !5876)
!5911 = !DILocation(line: 483, column: 16, scope: !5876)
!5912 = !DILocation(line: 485, column: 1, scope: !5876)
!5913 = distinct !DISubprogram(name: "decode_pce", scope: !1800, file: !1800, line: 734, type: !5914, isLocal: true, isDefinition: true, scopeLine: 737, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{!1012, !1259, !3315, !3470, !2041, !1012}
!5916 = !DILocalVariable(name: "avctx", arg: 1, scope: !5913, file: !1800, line: 734, type: !1259)
!5917 = !DILocation(line: 734, column: 39, scope: !5913)
!5918 = !DILocalVariable(name: "m4ac", arg: 2, scope: !5913, file: !1800, line: 734, type: !3315)
!5919 = !DILocation(line: 734, column: 64, scope: !5913)
!5920 = !DILocalVariable(name: "layout_map", arg: 3, scope: !5913, file: !1800, line: 735, type: !3470)
!5921 = !DILocation(line: 735, column: 33, scope: !5913)
!5922 = !DILocalVariable(name: "gb", arg: 4, scope: !5913, file: !1800, line: 736, type: !2041)
!5923 = !DILocation(line: 736, column: 38, scope: !5913)
!5924 = !DILocalVariable(name: "byte_align_ref", arg: 5, scope: !5913, file: !1800, line: 736, type: !1012)
!5925 = !DILocation(line: 736, column: 46, scope: !5913)
!5926 = !DILocalVariable(name: "num_front", scope: !5913, file: !1800, line: 738, type: !1012)
!5927 = !DILocation(line: 738, column: 9, scope: !5913)
!5928 = !DILocalVariable(name: "num_side", scope: !5913, file: !1800, line: 738, type: !1012)
!5929 = !DILocation(line: 738, column: 20, scope: !5913)
!5930 = !DILocalVariable(name: "num_back", scope: !5913, file: !1800, line: 738, type: !1012)
!5931 = !DILocation(line: 738, column: 30, scope: !5913)
!5932 = !DILocalVariable(name: "num_lfe", scope: !5913, file: !1800, line: 738, type: !1012)
!5933 = !DILocation(line: 738, column: 40, scope: !5913)
!5934 = !DILocalVariable(name: "num_assoc_data", scope: !5913, file: !1800, line: 738, type: !1012)
!5935 = !DILocation(line: 738, column: 49, scope: !5913)
!5936 = !DILocalVariable(name: "num_cc", scope: !5913, file: !1800, line: 738, type: !1012)
!5937 = !DILocation(line: 738, column: 65, scope: !5913)
!5938 = !DILocalVariable(name: "sampling_index", scope: !5913, file: !1800, line: 739, type: !1012)
!5939 = !DILocation(line: 739, column: 9, scope: !5913)
!5940 = !DILocalVariable(name: "comment_len", scope: !5913, file: !1800, line: 740, type: !1012)
!5941 = !DILocation(line: 740, column: 9, scope: !5913)
!5942 = !DILocalVariable(name: "tags", scope: !5913, file: !1800, line: 741, type: !1012)
!5943 = !DILocation(line: 741, column: 9, scope: !5913)
!5944 = !DILocation(line: 743, column: 15, scope: !5913)
!5945 = !DILocation(line: 743, column: 5, scope: !5913)
!5946 = !DILocation(line: 745, column: 31, scope: !5913)
!5947 = !DILocation(line: 745, column: 22, scope: !5913)
!5948 = !DILocation(line: 745, column: 20, scope: !5913)
!5949 = !DILocation(line: 746, column: 9, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5913, file: !1800, line: 746, column: 9)
!5951 = !DILocation(line: 746, column: 15, scope: !5950)
!5952 = !DILocation(line: 746, column: 33, scope: !5950)
!5953 = !DILocation(line: 746, column: 30, scope: !5950)
!5954 = !DILocation(line: 746, column: 9, scope: !5913)
!5955 = !DILocation(line: 747, column: 16, scope: !5950)
!5956 = !DILocation(line: 747, column: 9, scope: !5950)
!5957 = !DILocation(line: 751, column: 26, scope: !5913)
!5958 = !DILocation(line: 751, column: 17, scope: !5913)
!5959 = !DILocation(line: 751, column: 15, scope: !5913)
!5960 = !DILocation(line: 752, column: 25, scope: !5913)
!5961 = !DILocation(line: 752, column: 16, scope: !5913)
!5962 = !DILocation(line: 752, column: 14, scope: !5913)
!5963 = !DILocation(line: 753, column: 25, scope: !5913)
!5964 = !DILocation(line: 753, column: 16, scope: !5913)
!5965 = !DILocation(line: 753, column: 14, scope: !5913)
!5966 = !DILocation(line: 754, column: 24, scope: !5913)
!5967 = !DILocation(line: 754, column: 15, scope: !5913)
!5968 = !DILocation(line: 754, column: 13, scope: !5913)
!5969 = !DILocation(line: 755, column: 31, scope: !5913)
!5970 = !DILocation(line: 755, column: 22, scope: !5913)
!5971 = !DILocation(line: 755, column: 20, scope: !5913)
!5972 = !DILocation(line: 756, column: 23, scope: !5913)
!5973 = !DILocation(line: 756, column: 14, scope: !5913)
!5974 = !DILocation(line: 756, column: 12, scope: !5913)
!5975 = !DILocation(line: 758, column: 19, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5913, file: !1800, line: 758, column: 9)
!5977 = !DILocation(line: 758, column: 9, scope: !5976)
!5978 = !DILocation(line: 758, column: 9, scope: !5913)
!5979 = !DILocation(line: 759, column: 19, scope: !5976)
!5980 = !DILocation(line: 759, column: 9, scope: !5976)
!5981 = !DILocation(line: 760, column: 19, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5913, file: !1800, line: 760, column: 9)
!5983 = !DILocation(line: 760, column: 9, scope: !5982)
!5984 = !DILocation(line: 760, column: 9, scope: !5913)
!5985 = !DILocation(line: 761, column: 19, scope: !5982)
!5986 = !DILocation(line: 761, column: 9, scope: !5982)
!5987 = !DILocation(line: 763, column: 19, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5913, file: !1800, line: 763, column: 9)
!5989 = !DILocation(line: 763, column: 9, scope: !5988)
!5990 = !DILocation(line: 763, column: 9, scope: !5913)
!5991 = !DILocation(line: 764, column: 19, scope: !5988)
!5992 = !DILocation(line: 764, column: 9, scope: !5988)
!5993 = !DILocation(line: 766, column: 23, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5913, file: !1800, line: 766, column: 9)
!5995 = !DILocation(line: 766, column: 9, scope: !5994)
!5996 = !DILocation(line: 766, column: 34, scope: !5994)
!5997 = !DILocation(line: 766, column: 46, scope: !5994)
!5998 = !DILocation(line: 766, column: 44, scope: !5994)
!5999 = !DILocation(line: 766, column: 57, scope: !5994)
!6000 = !DILocation(line: 766, column: 55, scope: !5994)
!6001 = !DILocation(line: 766, column: 68, scope: !5994)
!6002 = !DILocation(line: 766, column: 66, scope: !5994)
!6003 = !DILocation(line: 766, column: 31, scope: !5994)
!6004 = !DILocation(line: 766, column: 82, scope: !5994)
!6005 = !DILocation(line: 766, column: 92, scope: !5994)
!6006 = !DILocation(line: 766, column: 90, scope: !5994)
!6007 = !DILocation(line: 766, column: 109, scope: !5994)
!6008 = !DILocation(line: 766, column: 107, scope: !5994)
!6009 = !DILocation(line: 766, column: 80, scope: !5994)
!6010 = !DILocation(line: 766, column: 76, scope: !5994)
!6011 = !DILocation(line: 766, column: 27, scope: !5994)
!6012 = !DILocation(line: 766, column: 9, scope: !5913)
!6013 = !DILocation(line: 767, column: 16, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5994, file: !1800, line: 766, column: 118)
!6015 = !DILocation(line: 767, column: 9, scope: !6014)
!6016 = !DILocation(line: 768, column: 9, scope: !6014)
!6017 = !DILocation(line: 770, column: 24, scope: !5913)
!6018 = !DILocation(line: 770, column: 56, scope: !5913)
!6019 = !DILocation(line: 770, column: 60, scope: !5913)
!6020 = !DILocation(line: 770, column: 5, scope: !5913)
!6021 = !DILocation(line: 771, column: 12, scope: !5913)
!6022 = !DILocation(line: 771, column: 10, scope: !5913)
!6023 = !DILocation(line: 772, column: 24, scope: !5913)
!6024 = !DILocation(line: 772, column: 37, scope: !5913)
!6025 = !DILocation(line: 772, column: 35, scope: !5913)
!6026 = !DILocation(line: 772, column: 61, scope: !5913)
!6027 = !DILocation(line: 772, column: 65, scope: !5913)
!6028 = !DILocation(line: 772, column: 5, scope: !5913)
!6029 = !DILocation(line: 773, column: 13, scope: !5913)
!6030 = !DILocation(line: 773, column: 10, scope: !5913)
!6031 = !DILocation(line: 774, column: 24, scope: !5913)
!6032 = !DILocation(line: 774, column: 37, scope: !5913)
!6033 = !DILocation(line: 774, column: 35, scope: !5913)
!6034 = !DILocation(line: 774, column: 61, scope: !5913)
!6035 = !DILocation(line: 774, column: 65, scope: !5913)
!6036 = !DILocation(line: 774, column: 5, scope: !5913)
!6037 = !DILocation(line: 775, column: 13, scope: !5913)
!6038 = !DILocation(line: 775, column: 10, scope: !5913)
!6039 = !DILocation(line: 776, column: 24, scope: !5913)
!6040 = !DILocation(line: 776, column: 37, scope: !5913)
!6041 = !DILocation(line: 776, column: 35, scope: !5913)
!6042 = !DILocation(line: 776, column: 60, scope: !5913)
!6043 = !DILocation(line: 776, column: 64, scope: !5913)
!6044 = !DILocation(line: 776, column: 5, scope: !5913)
!6045 = !DILocation(line: 777, column: 13, scope: !5913)
!6046 = !DILocation(line: 777, column: 10, scope: !5913)
!6047 = !DILocation(line: 779, column: 20, scope: !5913)
!6048 = !DILocation(line: 779, column: 28, scope: !5913)
!6049 = !DILocation(line: 779, column: 26, scope: !5913)
!6050 = !DILocation(line: 779, column: 5, scope: !5913)
!6051 = !DILocation(line: 781, column: 24, scope: !5913)
!6052 = !DILocation(line: 781, column: 37, scope: !5913)
!6053 = !DILocation(line: 781, column: 35, scope: !5913)
!6054 = !DILocation(line: 781, column: 59, scope: !5913)
!6055 = !DILocation(line: 781, column: 63, scope: !5913)
!6056 = !DILocation(line: 781, column: 5, scope: !5913)
!6057 = !DILocation(line: 782, column: 13, scope: !5913)
!6058 = !DILocation(line: 782, column: 10, scope: !5913)
!6059 = !DILocation(line: 784, column: 29, scope: !5913)
!6060 = !DILocation(line: 784, column: 33, scope: !5913)
!6061 = !DILocation(line: 784, column: 5, scope: !5913)
!6062 = !DILocation(line: 787, column: 28, scope: !5913)
!6063 = !DILocation(line: 787, column: 19, scope: !5913)
!6064 = !DILocation(line: 787, column: 35, scope: !5913)
!6065 = !DILocation(line: 787, column: 17, scope: !5913)
!6066 = !DILocation(line: 788, column: 23, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !5913, file: !1800, line: 788, column: 9)
!6068 = !DILocation(line: 788, column: 9, scope: !6067)
!6069 = !DILocation(line: 788, column: 29, scope: !6067)
!6070 = !DILocation(line: 788, column: 27, scope: !6067)
!6071 = !DILocation(line: 788, column: 9, scope: !5913)
!6072 = !DILocation(line: 789, column: 16, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6067, file: !1800, line: 788, column: 42)
!6074 = !DILocation(line: 789, column: 9, scope: !6073)
!6075 = !DILocation(line: 790, column: 9, scope: !6073)
!6076 = !DILocation(line: 792, column: 20, scope: !5913)
!6077 = !DILocation(line: 792, column: 24, scope: !5913)
!6078 = !DILocation(line: 792, column: 5, scope: !5913)
!6079 = !DILocation(line: 793, column: 12, scope: !5913)
!6080 = !DILocation(line: 793, column: 5, scope: !5913)
!6081 = !DILocation(line: 794, column: 1, scope: !5913)
!6082 = distinct !DISubprogram(name: "count_channels", scope: !1800, file: !1800, line: 103, type: !6083, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!6083 = !DISubroutineType(types: !6084)
!6084 = !{!1012, !3470, !1012}
!6085 = !DILocalVariable(name: "layout", arg: 1, scope: !6082, file: !1800, line: 103, type: !3470)
!6086 = !DILocation(line: 103, column: 37, scope: !6082)
!6087 = !DILocalVariable(name: "tags", arg: 2, scope: !6082, file: !1800, line: 103, type: !1012)
!6088 = !DILocation(line: 103, column: 53, scope: !6082)
!6089 = !DILocalVariable(name: "i", scope: !6082, file: !1800, line: 105, type: !1012)
!6090 = !DILocation(line: 105, column: 9, scope: !6082)
!6091 = !DILocalVariable(name: "sum", scope: !6082, file: !1800, line: 105, type: !1012)
!6092 = !DILocation(line: 105, column: 12, scope: !6082)
!6093 = !DILocation(line: 106, column: 12, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6082, file: !1800, line: 106, column: 5)
!6095 = !DILocation(line: 106, column: 10, scope: !6094)
!6096 = !DILocation(line: 106, column: 17, scope: !6097)
!6097 = !DILexicalBlockFile(scope: !6098, file: !1800, discriminator: 1)
!6098 = distinct !DILexicalBlock(scope: !6094, file: !1800, line: 106, column: 5)
!6099 = !DILocation(line: 106, column: 21, scope: !6097)
!6100 = !DILocation(line: 106, column: 19, scope: !6097)
!6101 = !DILocation(line: 106, column: 5, scope: !6097)
!6102 = !DILocalVariable(name: "syn_ele", scope: !6103, file: !1800, line: 107, type: !1012)
!6103 = distinct !DILexicalBlock(scope: !6098, file: !1800, line: 106, column: 32)
!6104 = !DILocation(line: 107, column: 13, scope: !6103)
!6105 = !DILocation(line: 107, column: 30, scope: !6103)
!6106 = !DILocation(line: 107, column: 23, scope: !6103)
!6107 = !DILocalVariable(name: "pos", scope: !6103, file: !1800, line: 108, type: !1012)
!6108 = !DILocation(line: 108, column: 13, scope: !6103)
!6109 = !DILocation(line: 108, column: 26, scope: !6103)
!6110 = !DILocation(line: 108, column: 19, scope: !6103)
!6111 = !DILocation(line: 109, column: 22, scope: !6103)
!6112 = !DILocation(line: 109, column: 30, scope: !6103)
!6113 = !DILocation(line: 109, column: 19, scope: !6103)
!6114 = !DILocation(line: 110, column: 17, scope: !6103)
!6115 = !DILocation(line: 110, column: 21, scope: !6103)
!6116 = !DILocation(line: 110, column: 40, scope: !6103)
!6117 = !DILocation(line: 110, column: 43, scope: !6118)
!6118 = !DILexicalBlockFile(scope: !6103, file: !1800, discriminator: 1)
!6119 = !DILocation(line: 110, column: 47, scope: !6118)
!6120 = !DILocation(line: 110, column: 40, scope: !6121)
!6121 = !DILexicalBlockFile(scope: !6103, file: !1800, discriminator: 2)
!6122 = !DILocation(line: 109, column: 44, scope: !6118)
!6123 = !DILocation(line: 109, column: 13, scope: !6118)
!6124 = !DILocation(line: 111, column: 5, scope: !6103)
!6125 = !DILocation(line: 106, column: 28, scope: !6126)
!6126 = !DILexicalBlockFile(scope: !6098, file: !1800, discriminator: 2)
!6127 = !DILocation(line: 106, column: 5, scope: !6126)
!6128 = distinct !{!6128, !6129}
!6129 = !DILocation(line: 106, column: 5, scope: !6082)
!6130 = !DILocation(line: 112, column: 12, scope: !6082)
!6131 = !DILocation(line: 112, column: 5, scope: !6082)
!6132 = distinct !DISubprogram(name: "get_bits", scope: !2043, file: !2043, line: 381, type: !6133, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!6133 = !DISubroutineType(types: !6134)
!6134 = !{!1013, !2041, !1012}
!6135 = !DILocalVariable(name: "x", arg: 1, scope: !6136, file: !6137, line: 66, type: !1029)
!6136 = distinct !DISubprogram(name: "av_bswap32", scope: !6137, file: !6137, line: 66, type: !6138, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!6137 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6138 = !DISubroutineType(types: !6139)
!6139 = !{!1029, !1029}
!6140 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !6141)
!6141 = distinct !DILocation(line: 401, column: 16, scope: !6132)
!6142 = !DILocalVariable(name: "s", arg: 1, scope: !6132, file: !2043, line: 381, type: !2041)
!6143 = !DILocation(line: 381, column: 52, scope: !6132)
!6144 = !DILocalVariable(name: "n", arg: 2, scope: !6132, file: !2043, line: 381, type: !1012)
!6145 = !DILocation(line: 381, column: 59, scope: !6132)
!6146 = !DILocalVariable(name: "tmp", scope: !6132, file: !2043, line: 383, type: !1012)
!6147 = !DILocation(line: 383, column: 18, scope: !6132)
!6148 = !DILocalVariable(name: "re_index", scope: !6132, file: !2043, line: 399, type: !1013)
!6149 = !DILocation(line: 399, column: 18, scope: !6132)
!6150 = !DILocation(line: 399, column: 30, scope: !6132)
!6151 = !DILocation(line: 399, column: 34, scope: !6132)
!6152 = !DILocalVariable(name: "re_cache", scope: !6132, file: !2043, line: 399, type: !1013)
!6153 = !DILocation(line: 399, column: 78, scope: !6132)
!6154 = !DILocalVariable(name: "re_size_plus8", scope: !6132, file: !2043, line: 399, type: !1013)
!6155 = !DILocation(line: 399, column: 101, scope: !6132)
!6156 = !DILocation(line: 399, column: 118, scope: !6132)
!6157 = !DILocation(line: 399, column: 122, scope: !6132)
!6158 = !DILocation(line: 401, column: 60, scope: !6132)
!6159 = !DILocation(line: 401, column: 64, scope: !6132)
!6160 = !DILocation(line: 401, column: 74, scope: !6132)
!6161 = !DILocation(line: 401, column: 83, scope: !6132)
!6162 = !DILocation(line: 401, column: 71, scope: !6132)
!6163 = !DILocation(line: 401, column: 92, scope: !6132)
!6164 = !DILocation(line: 401, column: 16, scope: !6132)
!6165 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !6141)
!6166 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !6141)
!6167 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !6141)
!6168 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !6141)
!6169 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !6141)
!6170 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !6141)
!6171 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !6141)
!6172 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !6141)
!6173 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !6141)
!6174 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !6141)
!6175 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !6141)
!6176 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !6141)
!6177 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !6141)
!6178 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !6141)
!6179 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !6141)
!6180 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !6141)
!6181 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !6141)
!6182 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !6141)
!6183 = !DILocation(line: 401, column: 100, scope: !6132)
!6184 = !DILocation(line: 401, column: 109, scope: !6132)
!6185 = !DILocation(line: 401, column: 96, scope: !6132)
!6186 = !DILocation(line: 401, column: 14, scope: !6132)
!6187 = !DILocation(line: 402, column: 21, scope: !6132)
!6188 = !DILocation(line: 402, column: 31, scope: !6132)
!6189 = !DILocation(line: 402, column: 11, scope: !6132)
!6190 = !DILocation(line: 402, column: 9, scope: !6132)
!6191 = !DILocation(line: 403, column: 18, scope: !6132)
!6192 = !DILocation(line: 403, column: 36, scope: !6132)
!6193 = !DILocation(line: 403, column: 48, scope: !6132)
!6194 = !DILocation(line: 403, column: 45, scope: !6132)
!6195 = !DILocation(line: 403, column: 33, scope: !6132)
!6196 = !DILocation(line: 403, column: 17, scope: !6132)
!6197 = !DILocation(line: 403, column: 55, scope: !6198)
!6198 = !DILexicalBlockFile(scope: !6132, file: !2043, discriminator: 1)
!6199 = !DILocation(line: 403, column: 67, scope: !6198)
!6200 = !DILocation(line: 403, column: 64, scope: !6198)
!6201 = !DILocation(line: 403, column: 17, scope: !6198)
!6202 = !DILocation(line: 403, column: 74, scope: !6203)
!6203 = !DILexicalBlockFile(scope: !6132, file: !2043, discriminator: 2)
!6204 = !DILocation(line: 403, column: 17, scope: !6203)
!6205 = !DILocation(line: 403, column: 17, scope: !6206)
!6206 = !DILexicalBlockFile(scope: !6132, file: !2043, discriminator: 3)
!6207 = !DILocation(line: 403, column: 14, scope: !6206)
!6208 = !DILocation(line: 404, column: 18, scope: !6132)
!6209 = !DILocation(line: 404, column: 6, scope: !6132)
!6210 = !DILocation(line: 404, column: 10, scope: !6132)
!6211 = !DILocation(line: 404, column: 16, scope: !6132)
!6212 = !DILocation(line: 406, column: 12, scope: !6132)
!6213 = !DILocation(line: 406, column: 5, scope: !6132)
!6214 = distinct !DISubprogram(name: "skip_bits1", scope: !2043, file: !2043, line: 523, type: !6215, isLocal: true, isDefinition: true, scopeLine: 524, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!6215 = !DISubroutineType(types: !6216)
!6216 = !{null, !2041}
!6217 = !DILocalVariable(name: "s", arg: 1, scope: !6214, file: !2043, line: 523, type: !2041)
!6218 = !DILocation(line: 523, column: 46, scope: !6214)
!6219 = !DILocation(line: 525, column: 15, scope: !6214)
!6220 = !DILocation(line: 525, column: 5, scope: !6214)
!6221 = !DILocation(line: 526, column: 1, scope: !6214)
!6222 = distinct !DISubprogram(name: "get_bits_left", scope: !2043, file: !2043, line: 814, type: !6223, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!6223 = !DISubroutineType(types: !6224)
!6224 = !{!1012, !2041}
!6225 = !DILocalVariable(name: "gb", arg: 1, scope: !6222, file: !2043, line: 814, type: !2041)
!6226 = !DILocation(line: 814, column: 48, scope: !6222)
!6227 = !DILocation(line: 816, column: 12, scope: !6222)
!6228 = !DILocation(line: 816, column: 16, scope: !6222)
!6229 = !DILocation(line: 816, column: 46, scope: !6222)
!6230 = !DILocation(line: 816, column: 31, scope: !6222)
!6231 = !DILocation(line: 816, column: 29, scope: !6222)
!6232 = !DILocation(line: 816, column: 5, scope: !6222)
!6233 = distinct !DISubprogram(name: "decode_channel_map", scope: !1800, file: !1800, line: 692, type: !6234, isLocal: true, isDefinition: true, scopeLine: 695, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!6234 = !DISubroutineType(types: !6235)
!6235 = !{null, !3470, !1003, !2041, !1012}
!6236 = !DILocalVariable(name: "layout_map", arg: 1, scope: !6233, file: !1800, line: 692, type: !3470)
!6237 = !DILocation(line: 692, column: 40, scope: !6233)
!6238 = !DILocalVariable(name: "type", arg: 2, scope: !6233, file: !1800, line: 693, type: !1003)
!6239 = !DILocation(line: 693, column: 53, scope: !6233)
!6240 = !DILocalVariable(name: "gb", arg: 3, scope: !6233, file: !1800, line: 694, type: !2041)
!6241 = !DILocation(line: 694, column: 47, scope: !6233)
!6242 = !DILocalVariable(name: "n", arg: 4, scope: !6233, file: !1800, line: 694, type: !1012)
!6243 = !DILocation(line: 694, column: 55, scope: !6233)
!6244 = !DILocation(line: 696, column: 5, scope: !6233)
!6245 = !DILocation(line: 696, column: 13, scope: !6246)
!6246 = !DILexicalBlockFile(scope: !6233, file: !1800, discriminator: 1)
!6247 = !DILocation(line: 696, column: 5, scope: !6246)
!6248 = !DILocalVariable(name: "syn_ele", scope: !6249, file: !1800, line: 697, type: !930)
!6249 = distinct !DILexicalBlock(scope: !6233, file: !1800, line: 696, column: 17)
!6250 = !DILocation(line: 697, column: 31, scope: !6249)
!6251 = !DILocation(line: 698, column: 17, scope: !6249)
!6252 = !DILocation(line: 698, column: 9, scope: !6249)
!6253 = !DILocation(line: 702, column: 33, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6249, file: !1800, line: 698, column: 23)
!6255 = !DILocation(line: 702, column: 23, scope: !6254)
!6256 = !DILocation(line: 702, column: 21, scope: !6254)
!6257 = !DILocation(line: 703, column: 13, scope: !6254)
!6258 = !DILocation(line: 705, column: 24, scope: !6254)
!6259 = !DILocation(line: 705, column: 13, scope: !6254)
!6260 = !DILocation(line: 706, column: 21, scope: !6254)
!6261 = !DILocation(line: 707, column: 13, scope: !6254)
!6262 = !DILocation(line: 709, column: 21, scope: !6254)
!6263 = !DILocation(line: 710, column: 13, scope: !6254)
!6264 = !DILocation(line: 713, column: 13, scope: !6254)
!6265 = distinct !{!6265, !6264}
!6266 = !DILocation(line: 713, column: 30, scope: !6267)
!6267 = !DILexicalBlockFile(scope: !6268, file: !1800, discriminator: 1)
!6268 = distinct !DILexicalBlock(scope: !6269, file: !1800, line: 713, column: 28)
!6269 = distinct !DILexicalBlock(scope: !6270, file: !1800, line: 713, column: 22)
!6270 = distinct !DILexicalBlock(scope: !6254, file: !1800, line: 713, column: 16)
!6271 = !DILocation(line: 713, column: 94, scope: !6272)
!6272 = !DILexicalBlockFile(scope: !6267, file: !1800, discriminator: 2)
!6273 = !DILocation(line: 713, column: 94, scope: !6267)
!6274 = !DILocation(line: 714, column: 9, scope: !6254)
!6275 = !DILocation(line: 715, column: 28, scope: !6249)
!6276 = !DILocation(line: 715, column: 9, scope: !6249)
!6277 = !DILocation(line: 715, column: 26, scope: !6249)
!6278 = !DILocation(line: 716, column: 37, scope: !6249)
!6279 = !DILocation(line: 716, column: 28, scope: !6249)
!6280 = !DILocation(line: 716, column: 9, scope: !6249)
!6281 = !DILocation(line: 716, column: 26, scope: !6249)
!6282 = !DILocation(line: 717, column: 28, scope: !6249)
!6283 = !DILocation(line: 717, column: 9, scope: !6249)
!6284 = !DILocation(line: 717, column: 26, scope: !6249)
!6285 = !DILocation(line: 718, column: 19, scope: !6249)
!6286 = !DILocation(line: 696, column: 5, scope: !6287)
!6287 = !DILexicalBlockFile(scope: !6233, file: !1800, discriminator: 2)
!6288 = distinct !{!6288, !6244}
!6289 = !DILocation(line: 720, column: 1, scope: !6233)
!6290 = distinct !DISubprogram(name: "relative_align_get_bits", scope: !1800, file: !1800, line: 722, type: !5471, isLocal: true, isDefinition: true, scopeLine: 723, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!6291 = !DILocalVariable(name: "gb", arg: 1, scope: !6290, file: !1800, line: 722, type: !2041)
!6292 = !DILocation(line: 722, column: 59, scope: !6290)
!6293 = !DILocalVariable(name: "reference_position", arg: 2, scope: !6290, file: !1800, line: 723, type: !1012)
!6294 = !DILocation(line: 723, column: 48, scope: !6290)
!6295 = !DILocalVariable(name: "n", scope: !6290, file: !1800, line: 724, type: !1012)
!6296 = !DILocation(line: 724, column: 9, scope: !6290)
!6297 = !DILocation(line: 724, column: 14, scope: !6290)
!6298 = !DILocation(line: 724, column: 50, scope: !6290)
!6299 = !DILocation(line: 724, column: 35, scope: !6290)
!6300 = !DILocation(line: 724, column: 33, scope: !6290)
!6301 = !DILocation(line: 724, column: 54, scope: !6290)
!6302 = !DILocation(line: 725, column: 9, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6290, file: !1800, line: 725, column: 9)
!6304 = !DILocation(line: 725, column: 9, scope: !6290)
!6305 = !DILocation(line: 726, column: 19, scope: !6303)
!6306 = !DILocation(line: 726, column: 23, scope: !6303)
!6307 = !DILocation(line: 726, column: 9, scope: !6303)
!6308 = !DILocation(line: 727, column: 1, scope: !6290)
!6309 = distinct !DISubprogram(name: "NEG_USR32", scope: !6310, file: !6310, line: 124, type: !6311, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!6310 = !DIFile(filename: "./libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6311 = !DISubroutineType(types: !6312)
!6312 = !{!1029, !1029, !1126}
!6313 = !DILocalVariable(name: "a", arg: 1, scope: !6309, file: !6310, line: 124, type: !1029)
!6314 = !DILocation(line: 124, column: 43, scope: !6309)
!6315 = !DILocalVariable(name: "s", arg: 2, scope: !6309, file: !6310, line: 124, type: !1126)
!6316 = !DILocation(line: 124, column: 53, scope: !6309)
!6317 = !DILocation(line: 125, column: 5, scope: !6309)
!6318 = !DILocation(line: 127, column: 29, scope: !6309)
!6319 = !DILocation(line: 127, column: 28, scope: !6309)
!6320 = !DILocation(line: 127, column: 18, scope: !6309)
!6321 = !{i32 108327, i32 108341}
!6322 = !DILocation(line: 129, column: 12, scope: !6309)
!6323 = !DILocation(line: 129, column: 5, scope: !6309)
!6324 = distinct !DISubprogram(name: "sniff_channel_order", scope: !1800, file: !1800, line: 260, type: !6325, isLocal: true, isDefinition: true, scopeLine: 261, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!6325 = !DISubroutineType(types: !6326)
!6326 = !{!1034, !3470, !1012}
!6327 = !DILocalVariable(name: "layout_map", arg: 1, scope: !6324, file: !1800, line: 260, type: !3470)
!6328 = !DILocation(line: 260, column: 47, scope: !6324)
!6329 = !DILocalVariable(name: "tags", arg: 2, scope: !6324, file: !1800, line: 260, type: !1012)
!6330 = !DILocation(line: 260, column: 67, scope: !6324)
!6331 = !DILocalVariable(name: "i", scope: !6324, file: !1800, line: 262, type: !1012)
!6332 = !DILocation(line: 262, column: 9, scope: !6324)
!6333 = !DILocalVariable(name: "n", scope: !6324, file: !1800, line: 262, type: !1012)
!6334 = !DILocation(line: 262, column: 12, scope: !6324)
!6335 = !DILocalVariable(name: "total_non_cc_elements", scope: !6324, file: !1800, line: 262, type: !1012)
!6336 = !DILocation(line: 262, column: 15, scope: !6324)
!6337 = !DILocalVariable(name: "e2c_vec", scope: !6324, file: !1800, line: 263, type: !6338)
!6338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6339, size: 8192, align: 64, elements: !2093)
!6339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elem_to_channel", file: !1800, line: 192, size: 128, align: 64, elements: !6340)
!6340 = !{!6341, !6342, !6343, !6344}
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "av_position", scope: !6339, file: !1800, line: 193, baseType: !1034, size: 64, align: 64)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "syn_ele", scope: !6339, file: !1800, line: 194, baseType: !1030, size: 8, align: 8, offset: 64)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "elem_id", scope: !6339, file: !1800, line: 195, baseType: !1030, size: 8, align: 8, offset: 72)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "aac_position", scope: !6339, file: !1800, line: 196, baseType: !1030, size: 8, align: 8, offset: 80)
!6345 = !DILocation(line: 263, column: 28, scope: !6324)
!6346 = !DILocalVariable(name: "num_front_channels", scope: !6324, file: !1800, line: 264, type: !1012)
!6347 = !DILocation(line: 264, column: 9, scope: !6324)
!6348 = !DILocalVariable(name: "num_side_channels", scope: !6324, file: !1800, line: 264, type: !1012)
!6349 = !DILocation(line: 264, column: 29, scope: !6324)
!6350 = !DILocalVariable(name: "num_back_channels", scope: !6324, file: !1800, line: 264, type: !1012)
!6351 = !DILocation(line: 264, column: 48, scope: !6324)
!6352 = !DILocalVariable(name: "layout", scope: !6324, file: !1800, line: 265, type: !1034)
!6353 = !DILocation(line: 265, column: 14, scope: !6324)
!6354 = !DILocation(line: 267, column: 52, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 267, column: 9)
!6356 = !DILocation(line: 267, column: 50, scope: !6355)
!6357 = !DILocation(line: 267, column: 9, scope: !6324)
!6358 = !DILocation(line: 268, column: 9, scope: !6355)
!6359 = !DILocation(line: 270, column: 7, scope: !6324)
!6360 = !DILocation(line: 272, column: 31, scope: !6324)
!6361 = !DILocation(line: 272, column: 43, scope: !6324)
!6362 = !DILocation(line: 272, column: 9, scope: !6324)
!6363 = !DILocation(line: 271, column: 24, scope: !6324)
!6364 = !DILocation(line: 273, column: 9, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 273, column: 9)
!6366 = !DILocation(line: 273, column: 28, scope: !6365)
!6367 = !DILocation(line: 273, column: 9, scope: !6324)
!6368 = !DILocation(line: 274, column: 9, scope: !6365)
!6369 = !DILocation(line: 276, column: 31, scope: !6324)
!6370 = !DILocation(line: 276, column: 43, scope: !6324)
!6371 = !DILocation(line: 276, column: 9, scope: !6324)
!6372 = !DILocation(line: 275, column: 23, scope: !6324)
!6373 = !DILocation(line: 277, column: 9, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 277, column: 9)
!6375 = !DILocation(line: 277, column: 27, scope: !6374)
!6376 = !DILocation(line: 277, column: 9, scope: !6324)
!6377 = !DILocation(line: 278, column: 9, scope: !6374)
!6378 = !DILocation(line: 280, column: 31, scope: !6324)
!6379 = !DILocation(line: 280, column: 43, scope: !6324)
!6380 = !DILocation(line: 280, column: 9, scope: !6324)
!6381 = !DILocation(line: 279, column: 23, scope: !6324)
!6382 = !DILocation(line: 281, column: 9, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 281, column: 9)
!6384 = !DILocation(line: 281, column: 27, scope: !6383)
!6385 = !DILocation(line: 281, column: 9, scope: !6324)
!6386 = !DILocation(line: 282, column: 9, scope: !6383)
!6387 = !DILocation(line: 284, column: 9, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 284, column: 9)
!6389 = !DILocation(line: 284, column: 27, scope: !6388)
!6390 = !DILocation(line: 284, column: 32, scope: !6388)
!6391 = !DILocation(line: 284, column: 35, scope: !6392)
!6392 = !DILexicalBlockFile(scope: !6388, file: !1800, discriminator: 1)
!6393 = !DILocation(line: 284, column: 53, scope: !6392)
!6394 = !DILocation(line: 284, column: 9, scope: !6392)
!6395 = !DILocation(line: 285, column: 27, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6388, file: !1800, line: 284, column: 59)
!6397 = !DILocation(line: 286, column: 27, scope: !6396)
!6398 = !DILocation(line: 287, column: 5, scope: !6396)
!6399 = !DILocation(line: 289, column: 7, scope: !6324)
!6400 = !DILocation(line: 290, column: 9, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 290, column: 9)
!6402 = !DILocation(line: 290, column: 28, scope: !6401)
!6403 = !DILocation(line: 290, column: 9, scope: !6324)
!6404 = !DILocation(line: 291, column: 17, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6401, file: !1800, line: 290, column: 33)
!6406 = !DILocation(line: 291, column: 9, scope: !6405)
!6407 = !DILocation(line: 291, column: 47, scope: !6405)
!6408 = !DILocation(line: 294, column: 35, scope: !6405)
!6409 = !DILocation(line: 294, column: 24, scope: !6405)
!6410 = !DILocation(line: 291, column: 22, scope: !6405)
!6411 = !DILocation(line: 297, column: 10, scope: !6405)
!6412 = !DILocation(line: 298, column: 27, scope: !6405)
!6413 = !DILocation(line: 299, column: 5, scope: !6405)
!6414 = !DILocation(line: 300, column: 9, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 300, column: 9)
!6416 = !DILocation(line: 300, column: 28, scope: !6415)
!6417 = !DILocation(line: 300, column: 9, scope: !6324)
!6418 = !DILocation(line: 301, column: 26, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6415, file: !1800, line: 300, column: 34)
!6420 = !DILocation(line: 301, column: 35, scope: !6419)
!6421 = !DILocation(line: 301, column: 47, scope: !6419)
!6422 = !DILocation(line: 301, column: 14, scope: !6419)
!6423 = !DILocation(line: 301, column: 11, scope: !6419)
!6424 = !DILocation(line: 305, column: 28, scope: !6419)
!6425 = !DILocation(line: 306, column: 5, scope: !6419)
!6426 = !DILocation(line: 307, column: 9, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 307, column: 9)
!6428 = !DILocation(line: 307, column: 28, scope: !6427)
!6429 = !DILocation(line: 307, column: 9, scope: !6324)
!6430 = !DILocation(line: 308, column: 26, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6427, file: !1800, line: 307, column: 34)
!6432 = !DILocation(line: 308, column: 35, scope: !6431)
!6433 = !DILocation(line: 308, column: 47, scope: !6431)
!6434 = !DILocation(line: 308, column: 14, scope: !6431)
!6435 = !DILocation(line: 308, column: 11, scope: !6431)
!6436 = !DILocation(line: 312, column: 28, scope: !6431)
!6437 = !DILocation(line: 313, column: 5, scope: !6431)
!6438 = !DILocation(line: 314, column: 5, scope: !6324)
!6439 = !DILocation(line: 314, column: 12, scope: !6440)
!6440 = !DILexicalBlockFile(scope: !6324, file: !1800, discriminator: 1)
!6441 = !DILocation(line: 314, column: 31, scope: !6440)
!6442 = !DILocation(line: 314, column: 5, scope: !6440)
!6443 = !DILocation(line: 315, column: 26, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 314, column: 37)
!6445 = !DILocation(line: 315, column: 35, scope: !6444)
!6446 = !DILocation(line: 315, column: 47, scope: !6444)
!6447 = !DILocation(line: 315, column: 14, scope: !6444)
!6448 = !DILocation(line: 315, column: 11, scope: !6444)
!6449 = !DILocation(line: 319, column: 28, scope: !6444)
!6450 = !DILocation(line: 314, column: 5, scope: !6451)
!6451 = !DILexicalBlockFile(scope: !6324, file: !1800, discriminator: 2)
!6452 = distinct !{!6452, !6438}
!6453 = !DILocation(line: 322, column: 9, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 322, column: 9)
!6455 = !DILocation(line: 322, column: 27, scope: !6454)
!6456 = !DILocation(line: 322, column: 9, scope: !6324)
!6457 = !DILocation(line: 323, column: 26, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6454, file: !1800, line: 322, column: 33)
!6459 = !DILocation(line: 323, column: 35, scope: !6458)
!6460 = !DILocation(line: 323, column: 47, scope: !6458)
!6461 = !DILocation(line: 323, column: 14, scope: !6458)
!6462 = !DILocation(line: 323, column: 11, scope: !6458)
!6463 = !DILocation(line: 327, column: 27, scope: !6458)
!6464 = !DILocation(line: 328, column: 5, scope: !6458)
!6465 = !DILocation(line: 329, column: 5, scope: !6324)
!6466 = !DILocation(line: 329, column: 12, scope: !6440)
!6467 = !DILocation(line: 329, column: 30, scope: !6440)
!6468 = !DILocation(line: 329, column: 5, scope: !6440)
!6469 = !DILocation(line: 330, column: 26, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 329, column: 36)
!6471 = !DILocation(line: 330, column: 35, scope: !6470)
!6472 = !DILocation(line: 330, column: 47, scope: !6470)
!6473 = !DILocation(line: 330, column: 14, scope: !6470)
!6474 = !DILocation(line: 330, column: 11, scope: !6470)
!6475 = !DILocation(line: 334, column: 27, scope: !6470)
!6476 = !DILocation(line: 329, column: 5, scope: !6451)
!6477 = distinct !{!6477, !6465}
!6478 = !DILocation(line: 337, column: 5, scope: !6324)
!6479 = !DILocation(line: 337, column: 12, scope: !6440)
!6480 = !DILocation(line: 337, column: 30, scope: !6440)
!6481 = !DILocation(line: 337, column: 5, scope: !6440)
!6482 = !DILocation(line: 338, column: 26, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 337, column: 36)
!6484 = !DILocation(line: 338, column: 35, scope: !6483)
!6485 = !DILocation(line: 338, column: 47, scope: !6483)
!6486 = !DILocation(line: 338, column: 14, scope: !6483)
!6487 = !DILocation(line: 338, column: 11, scope: !6483)
!6488 = !DILocation(line: 342, column: 27, scope: !6483)
!6489 = !DILocation(line: 337, column: 5, scope: !6451)
!6490 = distinct !{!6490, !6478}
!6491 = !DILocation(line: 344, column: 9, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 344, column: 9)
!6493 = !DILocation(line: 344, column: 27, scope: !6492)
!6494 = !DILocation(line: 344, column: 9, scope: !6324)
!6495 = !DILocation(line: 345, column: 26, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6492, file: !1800, line: 344, column: 33)
!6497 = !DILocation(line: 345, column: 35, scope: !6496)
!6498 = !DILocation(line: 345, column: 47, scope: !6496)
!6499 = !DILocation(line: 345, column: 14, scope: !6496)
!6500 = !DILocation(line: 345, column: 11, scope: !6496)
!6501 = !DILocation(line: 349, column: 27, scope: !6496)
!6502 = !DILocation(line: 350, column: 5, scope: !6496)
!6503 = !DILocation(line: 351, column: 9, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 351, column: 9)
!6505 = !DILocation(line: 351, column: 9, scope: !6324)
!6506 = !DILocation(line: 352, column: 17, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6504, file: !1800, line: 351, column: 28)
!6508 = !DILocation(line: 352, column: 9, scope: !6507)
!6509 = !DILocation(line: 352, column: 47, scope: !6507)
!6510 = !DILocation(line: 355, column: 35, scope: !6507)
!6511 = !DILocation(line: 355, column: 24, scope: !6507)
!6512 = !DILocation(line: 352, column: 22, scope: !6507)
!6513 = !DILocation(line: 358, column: 10, scope: !6507)
!6514 = !DILocation(line: 359, column: 26, scope: !6507)
!6515 = !DILocation(line: 360, column: 5, scope: !6507)
!6516 = !DILocation(line: 362, column: 9, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 362, column: 9)
!6518 = !DILocation(line: 362, column: 13, scope: !6517)
!6519 = !DILocation(line: 362, column: 11, scope: !6517)
!6520 = !DILocation(line: 362, column: 18, scope: !6517)
!6521 = !DILocation(line: 362, column: 32, scope: !6522)
!6522 = !DILexicalBlockFile(scope: !6517, file: !1800, discriminator: 1)
!6523 = !DILocation(line: 362, column: 21, scope: !6522)
!6524 = !DILocation(line: 362, column: 38, scope: !6522)
!6525 = !DILocation(line: 362, column: 9, scope: !6522)
!6526 = !DILocation(line: 363, column: 17, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6517, file: !1800, line: 362, column: 58)
!6528 = !DILocation(line: 363, column: 9, scope: !6527)
!6529 = !DILocation(line: 363, column: 47, scope: !6527)
!6530 = !DILocation(line: 366, column: 35, scope: !6527)
!6531 = !DILocation(line: 366, column: 24, scope: !6527)
!6532 = !DILocation(line: 363, column: 22, scope: !6527)
!6533 = !DILocation(line: 369, column: 10, scope: !6527)
!6534 = !DILocation(line: 370, column: 5, scope: !6527)
!6535 = !DILocation(line: 371, column: 5, scope: !6324)
!6536 = !DILocation(line: 371, column: 12, scope: !6440)
!6537 = !DILocation(line: 371, column: 16, scope: !6440)
!6538 = !DILocation(line: 371, column: 14, scope: !6440)
!6539 = !DILocation(line: 371, column: 21, scope: !6440)
!6540 = !DILocation(line: 371, column: 35, scope: !6451)
!6541 = !DILocation(line: 371, column: 24, scope: !6451)
!6542 = !DILocation(line: 371, column: 41, scope: !6451)
!6543 = !DILocation(line: 371, column: 5, scope: !6544)
!6544 = !DILexicalBlockFile(scope: !6324, file: !1800, discriminator: 3)
!6545 = !DILocation(line: 372, column: 17, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 371, column: 61)
!6547 = !DILocation(line: 372, column: 9, scope: !6546)
!6548 = !DILocation(line: 372, column: 47, scope: !6546)
!6549 = !DILocation(line: 375, column: 35, scope: !6546)
!6550 = !DILocation(line: 375, column: 24, scope: !6546)
!6551 = !DILocation(line: 372, column: 22, scope: !6546)
!6552 = !DILocation(line: 378, column: 10, scope: !6546)
!6553 = !DILocation(line: 371, column: 5, scope: !6554)
!6554 = !DILexicalBlockFile(scope: !6324, file: !1800, discriminator: 4)
!6555 = distinct !{!6555, !6535}
!6556 = !DILocation(line: 382, column: 33, scope: !6324)
!6557 = !DILocation(line: 382, column: 31, scope: !6324)
!6558 = !DILocation(line: 382, column: 27, scope: !6324)
!6559 = !DILocation(line: 383, column: 5, scope: !6324)
!6560 = distinct !{!6560, !6559}
!6561 = !DILocalVariable(name: "next_n", scope: !6562, file: !1800, line: 384, type: !1012)
!6562 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 383, column: 8)
!6563 = !DILocation(line: 384, column: 13, scope: !6562)
!6564 = !DILocation(line: 385, column: 16, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6562, file: !1800, line: 385, column: 9)
!6566 = !DILocation(line: 385, column: 14, scope: !6565)
!6567 = !DILocation(line: 385, column: 21, scope: !6568)
!6568 = !DILexicalBlockFile(scope: !6569, file: !1800, discriminator: 1)
!6569 = distinct !DILexicalBlock(scope: !6565, file: !1800, line: 385, column: 9)
!6570 = !DILocation(line: 385, column: 25, scope: !6568)
!6571 = !DILocation(line: 385, column: 23, scope: !6568)
!6572 = !DILocation(line: 385, column: 9, scope: !6568)
!6573 = !DILocation(line: 386, column: 25, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6569, file: !1800, line: 386, column: 17)
!6575 = !DILocation(line: 386, column: 27, scope: !6574)
!6576 = !DILocation(line: 386, column: 17, scope: !6574)
!6577 = !DILocation(line: 386, column: 32, scope: !6574)
!6578 = !DILocation(line: 386, column: 54, scope: !6574)
!6579 = !DILocation(line: 386, column: 46, scope: !6574)
!6580 = !DILocation(line: 386, column: 57, scope: !6574)
!6581 = !DILocation(line: 386, column: 44, scope: !6574)
!6582 = !DILocation(line: 386, column: 17, scope: !6569)
!6583 = !DILocation(line: 387, column: 17, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6574, file: !1800, line: 386, column: 70)
!6585 = distinct !{!6585, !6583}
!6586 = !DILocalVariable(name: "SWAP_tmp", scope: !6587, file: !1800, line: 387, type: !6339)
!6587 = distinct !DILexicalBlock(scope: !6584, file: !1800, line: 387, column: 19)
!6588 = !DILocation(line: 387, column: 43, scope: !6587)
!6589 = !DILocation(line: 387, column: 61, scope: !6590)
!6590 = !DILexicalBlockFile(scope: !6587, file: !1800, discriminator: 1)
!6591 = !DILocation(line: 387, column: 53, scope: !6590)
!6592 = !DILocation(line: 387, column: 73, scope: !6590)
!6593 = !DILocation(line: 387, column: 65, scope: !6590)
!6594 = !DILocation(line: 387, column: 85, scope: !6590)
!6595 = !DILocation(line: 387, column: 87, scope: !6590)
!6596 = !DILocation(line: 387, column: 77, scope: !6590)
!6597 = !DILocation(line: 387, column: 77, scope: !6598)
!6598 = !DILexicalBlockFile(scope: !6590, file: !1800, discriminator: 2)
!6599 = !DILocation(line: 387, column: 101, scope: !6590)
!6600 = !DILocation(line: 387, column: 103, scope: !6590)
!6601 = !DILocation(line: 387, column: 93, scope: !6590)
!6602 = !DILocation(line: 387, column: 109, scope: !6590)
!6603 = !DILocation(line: 387, column: 109, scope: !6604)
!6604 = !DILexicalBlockFile(scope: !6590, file: !1800, discriminator: 3)
!6605 = !DILocation(line: 387, column: 118, scope: !6590)
!6606 = !DILocation(line: 388, column: 26, scope: !6584)
!6607 = !DILocation(line: 388, column: 24, scope: !6584)
!6608 = !DILocation(line: 389, column: 13, scope: !6584)
!6609 = !DILocation(line: 386, column: 57, scope: !6610)
!6610 = !DILexicalBlockFile(scope: !6574, file: !1800, discriminator: 1)
!6611 = !DILocation(line: 385, column: 29, scope: !6612)
!6612 = !DILexicalBlockFile(scope: !6569, file: !1800, discriminator: 2)
!6613 = !DILocation(line: 385, column: 9, scope: !6612)
!6614 = distinct !{!6614, !6615}
!6615 = !DILocation(line: 385, column: 9, scope: !6562)
!6616 = !DILocation(line: 390, column: 13, scope: !6562)
!6617 = !DILocation(line: 390, column: 11, scope: !6562)
!6618 = !DILocation(line: 391, column: 5, scope: !6562)
!6619 = !DILocation(line: 391, column: 14, scope: !6440)
!6620 = !DILocation(line: 391, column: 16, scope: !6440)
!6621 = !DILocation(line: 391, column: 5, scope: !6440)
!6622 = !DILocation(line: 393, column: 12, scope: !6324)
!6623 = !DILocation(line: 394, column: 12, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6324, file: !1800, line: 394, column: 5)
!6625 = !DILocation(line: 394, column: 10, scope: !6624)
!6626 = !DILocation(line: 394, column: 17, scope: !6627)
!6627 = !DILexicalBlockFile(scope: !6628, file: !1800, discriminator: 1)
!6628 = distinct !DILexicalBlock(scope: !6624, file: !1800, line: 394, column: 5)
!6629 = !DILocation(line: 394, column: 21, scope: !6627)
!6630 = !DILocation(line: 394, column: 19, scope: !6627)
!6631 = !DILocation(line: 394, column: 5, scope: !6627)
!6632 = !DILocation(line: 395, column: 36, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6628, file: !1800, line: 394, column: 49)
!6634 = !DILocation(line: 395, column: 28, scope: !6633)
!6635 = !DILocation(line: 395, column: 39, scope: !6633)
!6636 = !DILocation(line: 395, column: 20, scope: !6633)
!6637 = !DILocation(line: 395, column: 9, scope: !6633)
!6638 = !DILocation(line: 395, column: 26, scope: !6633)
!6639 = !DILocation(line: 396, column: 36, scope: !6633)
!6640 = !DILocation(line: 396, column: 28, scope: !6633)
!6641 = !DILocation(line: 396, column: 39, scope: !6633)
!6642 = !DILocation(line: 396, column: 20, scope: !6633)
!6643 = !DILocation(line: 396, column: 9, scope: !6633)
!6644 = !DILocation(line: 396, column: 26, scope: !6633)
!6645 = !DILocation(line: 397, column: 36, scope: !6633)
!6646 = !DILocation(line: 397, column: 28, scope: !6633)
!6647 = !DILocation(line: 397, column: 39, scope: !6633)
!6648 = !DILocation(line: 397, column: 20, scope: !6633)
!6649 = !DILocation(line: 397, column: 9, scope: !6633)
!6650 = !DILocation(line: 397, column: 26, scope: !6633)
!6651 = !DILocation(line: 398, column: 21, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6633, file: !1800, line: 398, column: 13)
!6653 = !DILocation(line: 398, column: 13, scope: !6652)
!6654 = !DILocation(line: 398, column: 24, scope: !6652)
!6655 = !DILocation(line: 398, column: 36, scope: !6652)
!6656 = !DILocation(line: 398, column: 13, scope: !6633)
!6657 = !DILocation(line: 399, column: 31, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6652, file: !1800, line: 398, column: 50)
!6659 = !DILocation(line: 399, column: 23, scope: !6658)
!6660 = !DILocation(line: 399, column: 34, scope: !6658)
!6661 = !DILocation(line: 399, column: 20, scope: !6658)
!6662 = !DILocation(line: 400, column: 9, scope: !6658)
!6663 = !DILocation(line: 401, column: 5, scope: !6633)
!6664 = !DILocation(line: 394, column: 45, scope: !6665)
!6665 = !DILexicalBlockFile(scope: !6628, file: !1800, discriminator: 2)
!6666 = !DILocation(line: 394, column: 5, scope: !6665)
!6667 = distinct !{!6667, !6668}
!6668 = !DILocation(line: 394, column: 5, scope: !6324)
!6669 = !DILocation(line: 403, column: 12, scope: !6324)
!6670 = !DILocation(line: 403, column: 5, scope: !6324)
!6671 = !DILocation(line: 404, column: 1, scope: !6324)
!6672 = distinct !DISubprogram(name: "che_configure", scope: !1800, file: !1800, line: 127, type: !6673, isLocal: true, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!6673 = !DISubroutineType(types: !6674)
!6674 = !{!1012, !2071, !1003, !1012, !1012, !1454}
!6675 = !DILocalVariable(name: "ac", arg: 1, scope: !6672, file: !1800, line: 127, type: !2071)
!6676 = !DILocation(line: 127, column: 60, scope: !6672)
!6677 = !DILocalVariable(name: "che_pos", arg: 2, scope: !6672, file: !1800, line: 128, type: !1003)
!6678 = !DILocation(line: 128, column: 55, scope: !6672)
!6679 = !DILocalVariable(name: "type", arg: 3, scope: !6672, file: !1800, line: 129, type: !1012)
!6680 = !DILocation(line: 129, column: 38, scope: !6672)
!6681 = !DILocalVariable(name: "id", arg: 4, scope: !6672, file: !1800, line: 129, type: !1012)
!6682 = !DILocation(line: 129, column: 48, scope: !6672)
!6683 = !DILocalVariable(name: "channels", arg: 5, scope: !6672, file: !1800, line: 129, type: !1454)
!6684 = !DILocation(line: 129, column: 57, scope: !6672)
!6685 = !DILocation(line: 131, column: 10, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6672, file: !1800, line: 131, column: 9)
!6687 = !DILocation(line: 131, column: 9, scope: !6686)
!6688 = !DILocation(line: 131, column: 19, scope: !6686)
!6689 = !DILocation(line: 131, column: 9, scope: !6672)
!6690 = !DILocation(line: 132, column: 9, scope: !6686)
!6691 = !DILocation(line: 133, column: 9, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6672, file: !1800, line: 133, column: 9)
!6693 = !DILocation(line: 133, column: 9, scope: !6672)
!6694 = !DILocation(line: 134, column: 28, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6696, file: !1800, line: 134, column: 13)
!6696 = distinct !DILexicalBlock(scope: !6692, file: !1800, line: 133, column: 18)
!6697 = !DILocation(line: 134, column: 14, scope: !6695)
!6698 = !DILocation(line: 134, column: 22, scope: !6695)
!6699 = !DILocation(line: 134, column: 18, scope: !6695)
!6700 = !DILocation(line: 134, column: 13, scope: !6696)
!6701 = !DILocation(line: 135, column: 39, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !1800, line: 135, column: 17)
!6703 = distinct !DILexicalBlock(scope: !6695, file: !1800, line: 134, column: 33)
!6704 = !DILocation(line: 135, column: 33, scope: !6702)
!6705 = !DILocation(line: 135, column: 19, scope: !6702)
!6706 = !DILocation(line: 135, column: 27, scope: !6702)
!6707 = !DILocation(line: 135, column: 23, scope: !6702)
!6708 = !DILocation(line: 135, column: 37, scope: !6702)
!6709 = !DILocation(line: 135, column: 17, scope: !6703)
!6710 = !DILocation(line: 136, column: 17, scope: !6702)
!6711 = !DILocation(line: 137, column: 39, scope: !6703)
!6712 = !DILocation(line: 137, column: 58, scope: !6703)
!6713 = !DILocation(line: 137, column: 44, scope: !6703)
!6714 = !DILocation(line: 137, column: 52, scope: !6703)
!6715 = !DILocation(line: 137, column: 48, scope: !6703)
!6716 = !DILocation(line: 137, column: 63, scope: !6703)
!6717 = !DILocation(line: 137, column: 68, scope: !6703)
!6718 = !DILocation(line: 137, column: 13, scope: !6703)
!6719 = !DILocation(line: 138, column: 9, scope: !6703)
!6720 = !DILocation(line: 139, column: 13, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6696, file: !1800, line: 139, column: 13)
!6722 = !DILocation(line: 139, column: 18, scope: !6721)
!6723 = !DILocation(line: 139, column: 13, scope: !6696)
!6724 = !DILocation(line: 140, column: 18, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !1800, line: 140, column: 17)
!6726 = distinct !DILexicalBlock(scope: !6721, file: !1800, line: 139, column: 31)
!6727 = !DILocation(line: 140, column: 17, scope: !6725)
!6728 = !DILocation(line: 140, column: 36, scope: !6725)
!6729 = !DILocation(line: 140, column: 41, scope: !6725)
!6730 = !DILocation(line: 140, column: 53, scope: !6725)
!6731 = !DILocation(line: 140, column: 57, scope: !6732)
!6732 = !DILexicalBlockFile(scope: !6725, file: !1800, discriminator: 1)
!6733 = !DILocation(line: 140, column: 62, scope: !6732)
!6734 = !DILocation(line: 140, column: 74, scope: !6732)
!6735 = !DILocation(line: 140, column: 77, scope: !6736)
!6736 = !DILexicalBlockFile(scope: !6725, file: !1800, discriminator: 2)
!6737 = !DILocation(line: 140, column: 81, scope: !6736)
!6738 = !DILocation(line: 140, column: 87, scope: !6736)
!6739 = !DILocation(line: 140, column: 92, scope: !6736)
!6740 = !DILocation(line: 140, column: 95, scope: !6736)
!6741 = !DILocation(line: 140, column: 53, scope: !6742)
!6742 = !DILexicalBlockFile(scope: !6725, file: !1800, discriminator: 3)
!6743 = !DILocation(line: 140, column: 53, scope: !6744)
!6744 = !DILexicalBlockFile(scope: !6725, file: !1800, discriminator: 4)
!6745 = !DILocation(line: 140, column: 33, scope: !6744)
!6746 = !DILocation(line: 140, column: 27, scope: !6744)
!6747 = !DILocation(line: 140, column: 17, scope: !6744)
!6748 = !DILocation(line: 141, column: 24, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6725, file: !1800, line: 140, column: 103)
!6750 = !DILocation(line: 141, column: 28, scope: !6749)
!6751 = !DILocation(line: 141, column: 17, scope: !6749)
!6752 = !DILocation(line: 142, column: 17, scope: !6749)
!6753 = !DILocation(line: 144, column: 64, scope: !6726)
!6754 = !DILocation(line: 144, column: 50, scope: !6726)
!6755 = !DILocation(line: 144, column: 58, scope: !6726)
!6756 = !DILocation(line: 144, column: 54, scope: !6726)
!6757 = !DILocation(line: 144, column: 69, scope: !6726)
!6758 = !DILocation(line: 144, column: 34, scope: !6726)
!6759 = !DILocation(line: 144, column: 43, scope: !6726)
!6760 = !DILocation(line: 144, column: 13, scope: !6726)
!6761 = !DILocation(line: 144, column: 17, scope: !6726)
!6762 = !DILocation(line: 144, column: 47, scope: !6726)
!6763 = !DILocation(line: 145, column: 17, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6726, file: !1800, line: 145, column: 17)
!6765 = !DILocation(line: 145, column: 22, scope: !6764)
!6766 = !DILocation(line: 145, column: 34, scope: !6764)
!6767 = !DILocation(line: 146, column: 18, scope: !6764)
!6768 = !DILocation(line: 146, column: 23, scope: !6764)
!6769 = !DILocation(line: 146, column: 35, scope: !6764)
!6770 = !DILocation(line: 146, column: 38, scope: !6771)
!6771 = !DILexicalBlockFile(scope: !6764, file: !1800, discriminator: 1)
!6772 = !DILocation(line: 146, column: 42, scope: !6771)
!6773 = !DILocation(line: 146, column: 48, scope: !6771)
!6774 = !DILocation(line: 146, column: 53, scope: !6771)
!6775 = !DILocation(line: 146, column: 56, scope: !6771)
!6776 = !DILocation(line: 145, column: 17, scope: !6777)
!6777 = !DILexicalBlockFile(scope: !6726, file: !1800, discriminator: 1)
!6778 = !DILocation(line: 147, column: 68, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6764, file: !1800, line: 146, column: 63)
!6780 = !DILocation(line: 147, column: 54, scope: !6779)
!6781 = !DILocation(line: 147, column: 62, scope: !6779)
!6782 = !DILocation(line: 147, column: 58, scope: !6779)
!6783 = !DILocation(line: 147, column: 73, scope: !6779)
!6784 = !DILocation(line: 147, column: 38, scope: !6779)
!6785 = !DILocation(line: 147, column: 47, scope: !6779)
!6786 = !DILocation(line: 147, column: 17, scope: !6779)
!6787 = !DILocation(line: 147, column: 21, scope: !6779)
!6788 = !DILocation(line: 147, column: 51, scope: !6779)
!6789 = !DILocation(line: 148, column: 13, scope: !6779)
!6790 = !DILocation(line: 149, column: 9, scope: !6726)
!6791 = !DILocation(line: 150, column: 5, scope: !6696)
!6792 = !DILocation(line: 151, column: 27, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !1800, line: 151, column: 13)
!6794 = distinct !DILexicalBlock(scope: !6692, file: !1800, line: 150, column: 12)
!6795 = !DILocation(line: 151, column: 13, scope: !6793)
!6796 = !DILocation(line: 151, column: 21, scope: !6793)
!6797 = !DILocation(line: 151, column: 17, scope: !6793)
!6798 = !DILocation(line: 151, column: 13, scope: !6794)
!6799 = !DILocation(line: 152, column: 55, scope: !6793)
!6800 = !DILocation(line: 152, column: 41, scope: !6793)
!6801 = !DILocation(line: 152, column: 49, scope: !6793)
!6802 = !DILocation(line: 152, column: 45, scope: !6793)
!6803 = !DILocation(line: 152, column: 60, scope: !6793)
!6804 = !DILocation(line: 152, column: 13, scope: !6793)
!6805 = !DILocation(line: 153, column: 33, scope: !6794)
!6806 = !DILocation(line: 153, column: 19, scope: !6794)
!6807 = !DILocation(line: 153, column: 27, scope: !6794)
!6808 = !DILocation(line: 153, column: 23, scope: !6794)
!6809 = !DILocation(line: 153, column: 18, scope: !6794)
!6810 = !DILocation(line: 153, column: 9, scope: !6794)
!6811 = !DILocation(line: 155, column: 5, scope: !6672)
!6812 = !DILocation(line: 156, column: 1, scope: !6672)
!6813 = distinct !DISubprogram(name: "frame_configure_elements", scope: !1800, file: !1800, line: 158, type: !1257, isLocal: true, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!6814 = !DILocalVariable(name: "avctx", arg: 1, scope: !6813, file: !1800, line: 158, type: !1259)
!6815 = !DILocation(line: 158, column: 53, scope: !6813)
!6816 = !DILocalVariable(name: "ac", scope: !6813, file: !1800, line: 160, type: !2071)
!6817 = !DILocation(line: 160, column: 17, scope: !6813)
!6818 = !DILocation(line: 160, column: 22, scope: !6813)
!6819 = !DILocation(line: 160, column: 29, scope: !6813)
!6820 = !DILocalVariable(name: "type", scope: !6813, file: !1800, line: 161, type: !1012)
!6821 = !DILocation(line: 161, column: 9, scope: !6813)
!6822 = !DILocalVariable(name: "id", scope: !6813, file: !1800, line: 161, type: !1012)
!6823 = !DILocation(line: 161, column: 15, scope: !6813)
!6824 = !DILocalVariable(name: "ch", scope: !6813, file: !1800, line: 161, type: !1012)
!6825 = !DILocation(line: 161, column: 19, scope: !6813)
!6826 = !DILocalVariable(name: "ret", scope: !6813, file: !1800, line: 161, type: !1012)
!6827 = !DILocation(line: 161, column: 23, scope: !6813)
!6828 = !DILocation(line: 164, column: 15, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6813, file: !1800, line: 164, column: 5)
!6830 = !DILocation(line: 164, column: 10, scope: !6829)
!6831 = !DILocation(line: 164, column: 20, scope: !6832)
!6832 = !DILexicalBlockFile(scope: !6833, file: !1800, discriminator: 1)
!6833 = distinct !DILexicalBlock(scope: !6829, file: !1800, line: 164, column: 5)
!6834 = !DILocation(line: 164, column: 25, scope: !6832)
!6835 = !DILocation(line: 164, column: 5, scope: !6832)
!6836 = !DILocation(line: 165, column: 17, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6838, file: !1800, line: 165, column: 9)
!6838 = distinct !DILexicalBlock(scope: !6833, file: !1800, line: 164, column: 38)
!6839 = !DILocation(line: 165, column: 14, scope: !6837)
!6840 = !DILocation(line: 165, column: 22, scope: !6841)
!6841 = !DILexicalBlockFile(scope: !6842, file: !1800, discriminator: 1)
!6842 = distinct !DILexicalBlock(scope: !6837, file: !1800, line: 165, column: 9)
!6843 = !DILocation(line: 165, column: 25, scope: !6841)
!6844 = !DILocation(line: 165, column: 9, scope: !6841)
!6845 = !DILocalVariable(name: "che", scope: !6846, file: !1800, line: 166, type: !2101)
!6846 = distinct !DILexicalBlock(scope: !6842, file: !1800, line: 165, column: 37)
!6847 = !DILocation(line: 166, column: 29, scope: !6846)
!6848 = !DILocation(line: 166, column: 49, scope: !6846)
!6849 = !DILocation(line: 166, column: 35, scope: !6846)
!6850 = !DILocation(line: 166, column: 43, scope: !6846)
!6851 = !DILocation(line: 166, column: 39, scope: !6846)
!6852 = !DILocation(line: 167, column: 17, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6846, file: !1800, line: 167, column: 17)
!6854 = !DILocation(line: 167, column: 17, scope: !6846)
!6855 = !DILocation(line: 168, column: 34, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6853, file: !1800, line: 167, column: 22)
!6857 = !DILocation(line: 168, column: 39, scope: !6856)
!6858 = !DILocation(line: 168, column: 45, scope: !6856)
!6859 = !DILocation(line: 168, column: 17, scope: !6856)
!6860 = !DILocation(line: 168, column: 22, scope: !6856)
!6861 = !DILocation(line: 168, column: 28, scope: !6856)
!6862 = !DILocation(line: 168, column: 32, scope: !6856)
!6863 = !DILocation(line: 169, column: 34, scope: !6856)
!6864 = !DILocation(line: 169, column: 39, scope: !6856)
!6865 = !DILocation(line: 169, column: 45, scope: !6856)
!6866 = !DILocation(line: 169, column: 17, scope: !6856)
!6867 = !DILocation(line: 169, column: 22, scope: !6856)
!6868 = !DILocation(line: 169, column: 28, scope: !6856)
!6869 = !DILocation(line: 169, column: 32, scope: !6856)
!6870 = !DILocation(line: 170, column: 13, scope: !6856)
!6871 = !DILocation(line: 171, column: 9, scope: !6846)
!6872 = !DILocation(line: 165, column: 33, scope: !6873)
!6873 = !DILexicalBlockFile(scope: !6842, file: !1800, discriminator: 2)
!6874 = !DILocation(line: 165, column: 9, scope: !6873)
!6875 = distinct !{!6875, !6876}
!6876 = !DILocation(line: 165, column: 9, scope: !6838)
!6877 = !DILocation(line: 172, column: 5, scope: !6838)
!6878 = !DILocation(line: 164, column: 34, scope: !6879)
!6879 = !DILexicalBlockFile(scope: !6833, file: !1800, discriminator: 2)
!6880 = !DILocation(line: 164, column: 5, scope: !6879)
!6881 = distinct !{!6881, !6882}
!6882 = !DILocation(line: 164, column: 5, scope: !6813)
!6883 = !DILocation(line: 175, column: 20, scope: !6813)
!6884 = !DILocation(line: 175, column: 24, scope: !6813)
!6885 = !DILocation(line: 175, column: 5, scope: !6813)
!6886 = !DILocation(line: 176, column: 10, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6813, file: !1800, line: 176, column: 9)
!6888 = !DILocation(line: 176, column: 17, scope: !6887)
!6889 = !DILocation(line: 176, column: 9, scope: !6813)
!6890 = !DILocation(line: 177, column: 9, scope: !6887)
!6891 = !DILocation(line: 179, column: 5, scope: !6813)
!6892 = !DILocation(line: 179, column: 9, scope: !6813)
!6893 = !DILocation(line: 179, column: 16, scope: !6813)
!6894 = !DILocation(line: 179, column: 27, scope: !6813)
!6895 = !DILocation(line: 180, column: 30, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6813, file: !1800, line: 180, column: 9)
!6897 = !DILocation(line: 180, column: 37, scope: !6896)
!6898 = !DILocation(line: 180, column: 41, scope: !6896)
!6899 = !DILocation(line: 180, column: 16, scope: !6896)
!6900 = !DILocation(line: 180, column: 14, scope: !6896)
!6901 = !DILocation(line: 180, column: 52, scope: !6896)
!6902 = !DILocation(line: 180, column: 9, scope: !6813)
!6903 = !DILocation(line: 181, column: 16, scope: !6896)
!6904 = !DILocation(line: 181, column: 9, scope: !6896)
!6905 = !DILocation(line: 184, column: 13, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6813, file: !1800, line: 184, column: 5)
!6907 = !DILocation(line: 184, column: 10, scope: !6906)
!6908 = !DILocation(line: 184, column: 18, scope: !6909)
!6909 = !DILexicalBlockFile(scope: !6910, file: !1800, discriminator: 1)
!6910 = distinct !DILexicalBlock(scope: !6906, file: !1800, line: 184, column: 5)
!6911 = !DILocation(line: 184, column: 23, scope: !6909)
!6912 = !DILocation(line: 184, column: 30, scope: !6909)
!6913 = !DILocation(line: 184, column: 21, scope: !6909)
!6914 = !DILocation(line: 184, column: 5, scope: !6909)
!6915 = !DILocation(line: 185, column: 32, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !1800, line: 185, column: 13)
!6917 = distinct !DILexicalBlock(scope: !6910, file: !1800, line: 184, column: 46)
!6918 = !DILocation(line: 185, column: 13, scope: !6916)
!6919 = !DILocation(line: 185, column: 17, scope: !6916)
!6920 = !DILocation(line: 185, column: 13, scope: !6917)
!6921 = !DILocation(line: 186, column: 80, scope: !6916)
!6922 = !DILocation(line: 186, column: 55, scope: !6916)
!6923 = !DILocation(line: 186, column: 59, scope: !6916)
!6924 = !DILocation(line: 186, column: 66, scope: !6916)
!6925 = !DILocation(line: 186, column: 43, scope: !6916)
!6926 = !DILocation(line: 186, column: 32, scope: !6916)
!6927 = !DILocation(line: 186, column: 13, scope: !6916)
!6928 = !DILocation(line: 186, column: 17, scope: !6916)
!6929 = !DILocation(line: 186, column: 37, scope: !6916)
!6930 = !DILocation(line: 186, column: 41, scope: !6916)
!6931 = !DILocation(line: 187, column: 5, scope: !6917)
!6932 = !DILocation(line: 184, column: 42, scope: !6933)
!6933 = !DILexicalBlockFile(scope: !6910, file: !1800, discriminator: 2)
!6934 = !DILocation(line: 184, column: 5, scope: !6933)
!6935 = distinct !{!6935, !6936}
!6936 = !DILocation(line: 184, column: 5, scope: !6813)
!6937 = !DILocation(line: 189, column: 5, scope: !6813)
!6938 = !DILocation(line: 190, column: 1, scope: !6813)
!6939 = distinct !DISubprogram(name: "count_paired_channels", scope: !1800, file: !1800, line: 228, type: !6940, isLocal: true, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!6940 = !DISubroutineType(types: !6941)
!6941 = !{!1012, !3470, !1012, !1012, !1454}
!6942 = !DILocalVariable(name: "layout_map", arg: 1, scope: !6939, file: !1800, line: 228, type: !3470)
!6943 = !DILocation(line: 228, column: 44, scope: !6939)
!6944 = !DILocalVariable(name: "tags", arg: 2, scope: !6939, file: !1800, line: 228, type: !1012)
!6945 = !DILocation(line: 228, column: 64, scope: !6939)
!6946 = !DILocalVariable(name: "pos", arg: 3, scope: !6939, file: !1800, line: 228, type: !1012)
!6947 = !DILocation(line: 228, column: 74, scope: !6939)
!6948 = !DILocalVariable(name: "current", arg: 4, scope: !6939, file: !1800, line: 229, type: !1454)
!6949 = !DILocation(line: 229, column: 39, scope: !6939)
!6950 = !DILocalVariable(name: "num_pos_channels", scope: !6939, file: !1800, line: 231, type: !1012)
!6951 = !DILocation(line: 231, column: 9, scope: !6939)
!6952 = !DILocalVariable(name: "first_cpe", scope: !6939, file: !1800, line: 232, type: !1012)
!6953 = !DILocation(line: 232, column: 9, scope: !6939)
!6954 = !DILocalVariable(name: "sce_parity", scope: !6939, file: !1800, line: 233, type: !1012)
!6955 = !DILocation(line: 233, column: 9, scope: !6939)
!6956 = !DILocalVariable(name: "i", scope: !6939, file: !1800, line: 234, type: !1012)
!6957 = !DILocation(line: 234, column: 9, scope: !6939)
!6958 = !DILocation(line: 235, column: 15, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6939, file: !1800, line: 235, column: 5)
!6960 = !DILocation(line: 235, column: 14, scope: !6959)
!6961 = !DILocation(line: 235, column: 12, scope: !6959)
!6962 = !DILocation(line: 235, column: 10, scope: !6959)
!6963 = !DILocation(line: 235, column: 24, scope: !6964)
!6964 = !DILexicalBlockFile(scope: !6965, file: !1800, discriminator: 1)
!6965 = distinct !DILexicalBlock(scope: !6959, file: !1800, line: 235, column: 5)
!6966 = !DILocation(line: 235, column: 28, scope: !6964)
!6967 = !DILocation(line: 235, column: 26, scope: !6964)
!6968 = !DILocation(line: 235, column: 5, scope: !6964)
!6969 = !DILocation(line: 236, column: 24, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !1800, line: 236, column: 13)
!6971 = distinct !DILexicalBlock(scope: !6965, file: !1800, line: 235, column: 39)
!6972 = !DILocation(line: 236, column: 13, scope: !6970)
!6973 = !DILocation(line: 236, column: 33, scope: !6970)
!6974 = !DILocation(line: 236, column: 30, scope: !6970)
!6975 = !DILocation(line: 236, column: 13, scope: !6971)
!6976 = !DILocation(line: 237, column: 13, scope: !6970)
!6977 = !DILocation(line: 238, column: 24, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6971, file: !1800, line: 238, column: 13)
!6979 = !DILocation(line: 238, column: 13, scope: !6978)
!6980 = !DILocation(line: 238, column: 30, scope: !6978)
!6981 = !DILocation(line: 238, column: 13, scope: !6971)
!6982 = !DILocation(line: 239, column: 17, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6984, file: !1800, line: 239, column: 17)
!6984 = distinct !DILexicalBlock(scope: !6978, file: !1800, line: 238, column: 43)
!6985 = !DILocation(line: 239, column: 17, scope: !6984)
!6986 = !DILocation(line: 240, column: 21, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !1800, line: 240, column: 21)
!6988 = distinct !DILexicalBlock(scope: !6983, file: !1800, line: 239, column: 29)
!6989 = !DILocation(line: 240, column: 25, scope: !6987)
!6990 = !DILocation(line: 240, column: 46, scope: !6987)
!6991 = !DILocation(line: 240, column: 50, scope: !6992)
!6992 = !DILexicalBlockFile(scope: !6987, file: !1800, discriminator: 1)
!6993 = !DILocation(line: 240, column: 21, scope: !6992)
!6994 = !DILocation(line: 241, column: 32, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6987, file: !1800, line: 240, column: 61)
!6996 = !DILocation(line: 242, column: 17, scope: !6995)
!6997 = !DILocation(line: 243, column: 21, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6987, file: !1800, line: 242, column: 24)
!6999 = !DILocation(line: 245, column: 13, scope: !6988)
!7000 = !DILocation(line: 246, column: 30, scope: !6984)
!7001 = !DILocation(line: 247, column: 23, scope: !6984)
!7002 = !DILocation(line: 248, column: 9, scope: !6984)
!7003 = !DILocation(line: 249, column: 29, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6978, file: !1800, line: 248, column: 16)
!7005 = !DILocation(line: 250, column: 24, scope: !7004)
!7006 = !DILocation(line: 252, column: 5, scope: !6971)
!7007 = !DILocation(line: 235, column: 35, scope: !7008)
!7008 = !DILexicalBlockFile(scope: !6965, file: !1800, discriminator: 2)
!7009 = !DILocation(line: 235, column: 5, scope: !7008)
!7010 = distinct !{!7010, !7011}
!7011 = !DILocation(line: 235, column: 5, scope: !6939)
!7012 = !DILocation(line: 253, column: 9, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6939, file: !1800, line: 253, column: 9)
!7014 = !DILocation(line: 253, column: 20, scope: !7013)
!7015 = !DILocation(line: 254, column: 11, scope: !7013)
!7016 = !DILocation(line: 254, column: 15, scope: !7013)
!7017 = !DILocation(line: 254, column: 36, scope: !7013)
!7018 = !DILocation(line: 254, column: 39, scope: !7019)
!7019 = !DILexicalBlockFile(scope: !7013, file: !1800, discriminator: 1)
!7020 = !DILocation(line: 254, column: 50, scope: !7019)
!7021 = !DILocation(line: 254, column: 53, scope: !7022)
!7022 = !DILexicalBlockFile(scope: !7013, file: !1800, discriminator: 2)
!7023 = !DILocation(line: 254, column: 57, scope: !7022)
!7024 = !DILocation(line: 253, column: 9, scope: !7025)
!7025 = !DILexicalBlockFile(scope: !6939, file: !1800, discriminator: 1)
!7026 = !DILocation(line: 255, column: 9, scope: !7013)
!7027 = !DILocation(line: 256, column: 16, scope: !6939)
!7028 = !DILocation(line: 256, column: 6, scope: !6939)
!7029 = !DILocation(line: 256, column: 14, scope: !6939)
!7030 = !DILocation(line: 257, column: 12, scope: !6939)
!7031 = !DILocation(line: 257, column: 5, scope: !6939)
!7032 = !DILocation(line: 258, column: 1, scope: !6939)
!7033 = distinct !DISubprogram(name: "assign_pair", scope: !1800, file: !1800, line: 199, type: !7034, isLocal: true, isDefinition: true, scopeLine: 202, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!7034 = !DISubroutineType(types: !7035)
!7035 = !{!1012, !7036, !3470, !1012, !1034, !1034, !1012}
!7036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6339, size: 64, align: 64)
!7037 = !DILocalVariable(name: "e2c_vec", arg: 1, scope: !7033, file: !1800, line: 199, type: !7036)
!7038 = !DILocation(line: 199, column: 47, scope: !7033)
!7039 = !DILocalVariable(name: "layout_map", arg: 2, scope: !7033, file: !1800, line: 200, type: !3470)
!7040 = !DILocation(line: 200, column: 34, scope: !7033)
!7041 = !DILocalVariable(name: "offset", arg: 3, scope: !7033, file: !1800, line: 200, type: !1012)
!7042 = !DILocation(line: 200, column: 54, scope: !7033)
!7043 = !DILocalVariable(name: "left", arg: 4, scope: !7033, file: !1800, line: 200, type: !1034)
!7044 = !DILocation(line: 200, column: 71, scope: !7033)
!7045 = !DILocalVariable(name: "right", arg: 5, scope: !7033, file: !1800, line: 201, type: !1034)
!7046 = !DILocation(line: 201, column: 33, scope: !7033)
!7047 = !DILocalVariable(name: "pos", arg: 6, scope: !7033, file: !1800, line: 201, type: !1012)
!7048 = !DILocation(line: 201, column: 44, scope: !7033)
!7049 = !DILocation(line: 203, column: 20, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7033, file: !1800, line: 203, column: 9)
!7051 = !DILocation(line: 203, column: 9, scope: !7050)
!7052 = !DILocation(line: 203, column: 31, scope: !7050)
!7053 = !DILocation(line: 203, column: 9, scope: !7033)
!7054 = !DILocation(line: 204, column: 17, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7050, file: !1800, line: 203, column: 44)
!7056 = !DILocation(line: 204, column: 9, scope: !7055)
!7057 = !DILocation(line: 204, column: 52, scope: !7055)
!7058 = !DILocation(line: 205, column: 28, scope: !7055)
!7059 = !DILocation(line: 205, column: 35, scope: !7055)
!7060 = !DILocation(line: 205, column: 33, scope: !7055)
!7061 = !DILocation(line: 207, column: 35, scope: !7055)
!7062 = !DILocation(line: 207, column: 24, scope: !7055)
!7063 = !DILocation(line: 208, column: 29, scope: !7055)
!7064 = !DILocation(line: 204, column: 27, scope: !7055)
!7065 = !DILocation(line: 210, column: 9, scope: !7055)
!7066 = !DILocation(line: 212, column: 17, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7050, file: !1800, line: 211, column: 12)
!7068 = !DILocation(line: 212, column: 9, scope: !7067)
!7069 = !DILocation(line: 212, column: 52, scope: !7067)
!7070 = !DILocation(line: 213, column: 28, scope: !7067)
!7071 = !DILocation(line: 215, column: 35, scope: !7067)
!7072 = !DILocation(line: 215, column: 24, scope: !7067)
!7073 = !DILocation(line: 216, column: 29, scope: !7067)
!7074 = !DILocation(line: 212, column: 27, scope: !7067)
!7075 = !DILocation(line: 218, column: 17, scope: !7067)
!7076 = !DILocation(line: 218, column: 24, scope: !7067)
!7077 = !DILocation(line: 218, column: 9, scope: !7067)
!7078 = !DILocation(line: 218, column: 56, scope: !7067)
!7079 = !DILocation(line: 219, column: 28, scope: !7067)
!7080 = !DILocation(line: 221, column: 35, scope: !7067)
!7081 = !DILocation(line: 221, column: 42, scope: !7067)
!7082 = !DILocation(line: 221, column: 24, scope: !7067)
!7083 = !DILocation(line: 222, column: 29, scope: !7067)
!7084 = !DILocation(line: 218, column: 31, scope: !7067)
!7085 = !DILocation(line: 224, column: 9, scope: !7067)
!7086 = !DILocation(line: 226, column: 1, scope: !7033)
!7087 = distinct !DISubprogram(name: "init_get_bits8", scope: !2043, file: !2043, line: 650, type: !5298, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!7088 = !DILocalVariable(name: "s", arg: 1, scope: !7087, file: !2043, line: 650, type: !2041)
!7089 = !DILocation(line: 650, column: 49, scope: !7087)
!7090 = !DILocalVariable(name: "buffer", arg: 2, scope: !7087, file: !2043, line: 650, type: !1605)
!7091 = !DILocation(line: 650, column: 67, scope: !7087)
!7092 = !DILocalVariable(name: "byte_size", arg: 3, scope: !7087, file: !2043, line: 651, type: !1012)
!7093 = !DILocation(line: 651, column: 38, scope: !7087)
!7094 = !DILocation(line: 653, column: 9, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7087, file: !2043, line: 653, column: 9)
!7096 = !DILocation(line: 653, column: 19, scope: !7095)
!7097 = !DILocation(line: 653, column: 36, scope: !7095)
!7098 = !DILocation(line: 653, column: 39, scope: !7099)
!7099 = !DILexicalBlockFile(scope: !7095, file: !2043, discriminator: 1)
!7100 = !DILocation(line: 653, column: 49, scope: !7099)
!7101 = !DILocation(line: 653, column: 9, scope: !7099)
!7102 = !DILocation(line: 654, column: 19, scope: !7095)
!7103 = !DILocation(line: 654, column: 9, scope: !7095)
!7104 = !DILocation(line: 655, column: 26, scope: !7087)
!7105 = !DILocation(line: 655, column: 29, scope: !7087)
!7106 = !DILocation(line: 655, column: 37, scope: !7087)
!7107 = !DILocation(line: 655, column: 47, scope: !7087)
!7108 = !DILocation(line: 655, column: 12, scope: !7087)
!7109 = !DILocation(line: 655, column: 5, scope: !7087)
!7110 = distinct !DISubprogram(name: "aac_decode_er_frame", scope: !1800, file: !1800, line: 3043, type: !7111, isLocal: true, isDefinition: true, scopeLine: 3045, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!7111 = !DISubroutineType(types: !7112)
!7112 = !{!1012, !1259, !1022, !1454, !2041}
!7113 = !DILocalVariable(name: "avctx", arg: 1, scope: !7110, file: !1800, line: 3043, type: !1259)
!7114 = !DILocation(line: 3043, column: 48, scope: !7110)
!7115 = !DILocalVariable(name: "data", arg: 2, scope: !7110, file: !1800, line: 3043, type: !1022)
!7116 = !DILocation(line: 3043, column: 61, scope: !7110)
!7117 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !7110, file: !1800, line: 3044, type: !1454)
!7118 = !DILocation(line: 3044, column: 37, scope: !7110)
!7119 = !DILocalVariable(name: "gb", arg: 4, scope: !7110, file: !1800, line: 3044, type: !2041)
!7120 = !DILocation(line: 3044, column: 67, scope: !7110)
!7121 = !DILocalVariable(name: "ac", scope: !7110, file: !1800, line: 3046, type: !2071)
!7122 = !DILocation(line: 3046, column: 17, scope: !7110)
!7123 = !DILocation(line: 3046, column: 22, scope: !7110)
!7124 = !DILocation(line: 3046, column: 29, scope: !7110)
!7125 = !DILocalVariable(name: "m4ac", scope: !7110, file: !1800, line: 3047, type: !7126)
!7126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7127)
!7127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7128, size: 64, align: 64)
!7128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2581)
!7129 = !DILocation(line: 3047, column: 35, scope: !7110)
!7130 = !DILocation(line: 3047, column: 43, scope: !7110)
!7131 = !DILocation(line: 3047, column: 47, scope: !7110)
!7132 = !DILocation(line: 3047, column: 53, scope: !7110)
!7133 = !DILocalVariable(name: "che", scope: !7110, file: !1800, line: 3048, type: !2101)
!7134 = !DILocation(line: 3048, column: 21, scope: !7110)
!7135 = !DILocalVariable(name: "err", scope: !7110, file: !1800, line: 3049, type: !1012)
!7136 = !DILocation(line: 3049, column: 9, scope: !7110)
!7137 = !DILocalVariable(name: "i", scope: !7110, file: !1800, line: 3049, type: !1012)
!7138 = !DILocation(line: 3049, column: 14, scope: !7110)
!7139 = !DILocalVariable(name: "samples", scope: !7110, file: !1800, line: 3050, type: !1012)
!7140 = !DILocation(line: 3050, column: 9, scope: !7110)
!7141 = !DILocation(line: 3050, column: 19, scope: !7110)
!7142 = !DILocation(line: 3050, column: 25, scope: !7110)
!7143 = !DILocalVariable(name: "chan_config", scope: !7110, file: !1800, line: 3051, type: !1012)
!7144 = !DILocation(line: 3051, column: 9, scope: !7110)
!7145 = !DILocation(line: 3051, column: 23, scope: !7110)
!7146 = !DILocation(line: 3051, column: 29, scope: !7110)
!7147 = !DILocalVariable(name: "aot", scope: !7110, file: !1800, line: 3052, type: !1012)
!7148 = !DILocation(line: 3052, column: 9, scope: !7110)
!7149 = !DILocation(line: 3052, column: 15, scope: !7110)
!7150 = !DILocation(line: 3052, column: 21, scope: !7110)
!7151 = !DILocation(line: 3054, column: 9, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7110, file: !1800, line: 3054, column: 9)
!7153 = !DILocation(line: 3054, column: 13, scope: !7152)
!7154 = !DILocation(line: 3054, column: 30, scope: !7152)
!7155 = !DILocation(line: 3054, column: 33, scope: !7156)
!7156 = !DILexicalBlockFile(scope: !7152, file: !1800, discriminator: 1)
!7157 = !DILocation(line: 3054, column: 37, scope: !7156)
!7158 = !DILocation(line: 3054, column: 9, scope: !7156)
!7159 = !DILocation(line: 3055, column: 17, scope: !7152)
!7160 = !DILocation(line: 3055, column: 9, scope: !7152)
!7161 = !DILocation(line: 3057, column: 17, scope: !7110)
!7162 = !DILocation(line: 3057, column: 5, scope: !7110)
!7163 = !DILocation(line: 3057, column: 9, scope: !7110)
!7164 = !DILocation(line: 3057, column: 15, scope: !7110)
!7165 = !DILocation(line: 3059, column: 41, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7110, file: !1800, line: 3059, column: 9)
!7167 = !DILocation(line: 3059, column: 16, scope: !7166)
!7168 = !DILocation(line: 3059, column: 14, scope: !7166)
!7169 = !DILocation(line: 3059, column: 49, scope: !7166)
!7170 = !DILocation(line: 3059, column: 9, scope: !7110)
!7171 = !DILocation(line: 3060, column: 16, scope: !7166)
!7172 = !DILocation(line: 3060, column: 9, scope: !7166)
!7173 = !DILocation(line: 3064, column: 26, scope: !7110)
!7174 = !DILocation(line: 3064, column: 30, scope: !7110)
!7175 = !DILocation(line: 3064, column: 5, scope: !7110)
!7176 = !DILocation(line: 3064, column: 9, scope: !7110)
!7177 = !DILocation(line: 3064, column: 16, scope: !7110)
!7178 = !DILocation(line: 3064, column: 24, scope: !7110)
!7179 = !DILocation(line: 3066, column: 5, scope: !7110)
!7180 = !DILocation(line: 3066, column: 9, scope: !7110)
!7181 = !DILocation(line: 3066, column: 21, scope: !7110)
!7182 = !DILocation(line: 3068, column: 9, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7110, file: !1800, line: 3068, column: 9)
!7184 = !DILocation(line: 3068, column: 21, scope: !7183)
!7185 = !DILocation(line: 3068, column: 25, scope: !7183)
!7186 = !DILocation(line: 3068, column: 29, scope: !7187)
!7187 = !DILexicalBlockFile(scope: !7183, file: !1800, discriminator: 1)
!7188 = !DILocation(line: 3068, column: 41, scope: !7187)
!7189 = !DILocation(line: 3068, column: 46, scope: !7187)
!7190 = !DILocation(line: 3068, column: 49, scope: !7191)
!7191 = !DILexicalBlockFile(scope: !7183, file: !1800, discriminator: 2)
!7192 = !DILocation(line: 3068, column: 61, scope: !7191)
!7193 = !DILocation(line: 3068, column: 67, scope: !7191)
!7194 = !DILocation(line: 3068, column: 70, scope: !7195)
!7195 = !DILexicalBlockFile(scope: !7183, file: !1800, discriminator: 3)
!7196 = !DILocation(line: 3068, column: 82, scope: !7195)
!7197 = !DILocation(line: 3068, column: 9, scope: !7195)
!7198 = !DILocation(line: 3069, column: 31, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7183, file: !1800, line: 3068, column: 89)
!7200 = !DILocation(line: 3070, column: 31, scope: !7199)
!7201 = !DILocation(line: 3069, column: 9, scope: !7199)
!7202 = !DILocation(line: 3071, column: 9, scope: !7199)
!7203 = !DILocation(line: 3073, column: 12, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7110, file: !1800, line: 3073, column: 5)
!7205 = !DILocation(line: 3073, column: 10, scope: !7204)
!7206 = !DILocation(line: 3073, column: 17, scope: !7207)
!7207 = !DILexicalBlockFile(scope: !7208, file: !1800, discriminator: 1)
!7208 = distinct !DILexicalBlock(scope: !7204, file: !1800, line: 3073, column: 5)
!7209 = !DILocation(line: 3073, column: 37, scope: !7207)
!7210 = !DILocation(line: 3073, column: 21, scope: !7207)
!7211 = !DILocation(line: 3073, column: 19, scope: !7207)
!7212 = !DILocation(line: 3073, column: 5, scope: !7207)
!7213 = !DILocalVariable(name: "elem_type", scope: !7214, file: !1800, line: 3074, type: !1162)
!7214 = distinct !DILexicalBlock(scope: !7208, file: !1800, line: 3073, column: 56)
!7215 = !DILocation(line: 3074, column: 19, scope: !7214)
!7216 = !DILocation(line: 3074, column: 69, scope: !7214)
!7217 = !DILocation(line: 3074, column: 31, scope: !7214)
!7218 = !DILocation(line: 3074, column: 54, scope: !7214)
!7219 = !DILocation(line: 3074, column: 65, scope: !7214)
!7220 = !DILocalVariable(name: "elem_id", scope: !7214, file: !1800, line: 3075, type: !1162)
!7221 = !DILocation(line: 3075, column: 19, scope: !7214)
!7222 = !DILocation(line: 3075, column: 67, scope: !7214)
!7223 = !DILocation(line: 3075, column: 29, scope: !7214)
!7224 = !DILocation(line: 3075, column: 52, scope: !7214)
!7225 = !DILocation(line: 3075, column: 63, scope: !7214)
!7226 = !DILocation(line: 3076, column: 27, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7214, file: !1800, line: 3076, column: 13)
!7228 = !DILocation(line: 3076, column: 31, scope: !7227)
!7229 = !DILocation(line: 3076, column: 42, scope: !7227)
!7230 = !DILocation(line: 3076, column: 19, scope: !7227)
!7231 = !DILocation(line: 3076, column: 18, scope: !7227)
!7232 = !DILocation(line: 3076, column: 13, scope: !7214)
!7233 = !DILocation(line: 3077, column: 20, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7227, file: !1800, line: 3076, column: 53)
!7235 = !DILocation(line: 3077, column: 24, scope: !7234)
!7236 = !DILocation(line: 3079, column: 20, scope: !7234)
!7237 = !DILocation(line: 3079, column: 31, scope: !7234)
!7238 = !DILocation(line: 3077, column: 13, scope: !7234)
!7239 = !DILocation(line: 3080, column: 13, scope: !7234)
!7240 = !DILocation(line: 3082, column: 9, scope: !7214)
!7241 = !DILocation(line: 3082, column: 14, scope: !7214)
!7242 = !DILocation(line: 3082, column: 22, scope: !7214)
!7243 = !DILocation(line: 3083, column: 13, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7214, file: !1800, line: 3083, column: 13)
!7245 = !DILocation(line: 3083, column: 17, scope: !7244)
!7246 = !DILocation(line: 3083, column: 13, scope: !7214)
!7247 = !DILocation(line: 3084, column: 23, scope: !7244)
!7248 = !DILocation(line: 3084, column: 13, scope: !7244)
!7249 = !DILocation(line: 3085, column: 17, scope: !7214)
!7250 = !DILocation(line: 3085, column: 9, scope: !7214)
!7251 = !DILocation(line: 3087, column: 30, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7214, file: !1800, line: 3085, column: 28)
!7253 = !DILocation(line: 3087, column: 35, scope: !7252)
!7254 = !DILocation(line: 3087, column: 40, scope: !7252)
!7255 = !DILocation(line: 3087, column: 47, scope: !7252)
!7256 = !DILocation(line: 3087, column: 19, scope: !7252)
!7257 = !DILocation(line: 3087, column: 17, scope: !7252)
!7258 = !DILocation(line: 3088, column: 13, scope: !7252)
!7259 = !DILocation(line: 3090, column: 30, scope: !7252)
!7260 = !DILocation(line: 3090, column: 34, scope: !7252)
!7261 = !DILocation(line: 3090, column: 38, scope: !7252)
!7262 = !DILocation(line: 3090, column: 19, scope: !7252)
!7263 = !DILocation(line: 3090, column: 17, scope: !7252)
!7264 = !DILocation(line: 3091, column: 13, scope: !7252)
!7265 = !DILocation(line: 3093, column: 30, scope: !7252)
!7266 = !DILocation(line: 3093, column: 35, scope: !7252)
!7267 = !DILocation(line: 3093, column: 40, scope: !7252)
!7268 = !DILocation(line: 3093, column: 47, scope: !7252)
!7269 = !DILocation(line: 3093, column: 19, scope: !7252)
!7270 = !DILocation(line: 3093, column: 17, scope: !7252)
!7271 = !DILocation(line: 3094, column: 13, scope: !7252)
!7272 = !DILocation(line: 3096, column: 13, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7214, file: !1800, line: 3096, column: 13)
!7274 = !DILocation(line: 3096, column: 17, scope: !7273)
!7275 = !DILocation(line: 3096, column: 13, scope: !7214)
!7276 = !DILocation(line: 3097, column: 20, scope: !7273)
!7277 = !DILocation(line: 3097, column: 13, scope: !7273)
!7278 = !DILocation(line: 3098, column: 5, scope: !7214)
!7279 = !DILocation(line: 3073, column: 52, scope: !7280)
!7280 = !DILexicalBlockFile(scope: !7208, file: !1800, discriminator: 2)
!7281 = !DILocation(line: 3073, column: 5, scope: !7280)
!7282 = distinct !{!7282, !7283}
!7283 = !DILocation(line: 3073, column: 5, scope: !7110)
!7284 = !DILocation(line: 3100, column: 24, scope: !7110)
!7285 = !DILocation(line: 3100, column: 28, scope: !7110)
!7286 = !DILocation(line: 3100, column: 5, scope: !7110)
!7287 = !DILocation(line: 3102, column: 10, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7110, file: !1800, line: 3102, column: 9)
!7289 = !DILocation(line: 3102, column: 14, scope: !7288)
!7290 = !DILocation(line: 3102, column: 21, scope: !7288)
!7291 = !DILocation(line: 3102, column: 29, scope: !7288)
!7292 = !DILocation(line: 3102, column: 32, scope: !7293)
!7293 = !DILexicalBlockFile(scope: !7288, file: !1800, discriminator: 1)
!7294 = !DILocation(line: 3102, column: 9, scope: !7293)
!7295 = !DILocation(line: 3103, column: 16, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7288, file: !1800, line: 3102, column: 41)
!7297 = !DILocation(line: 3103, column: 9, scope: !7296)
!7298 = !DILocation(line: 3104, column: 9, scope: !7296)
!7299 = !DILocation(line: 3107, column: 29, scope: !7110)
!7300 = !DILocation(line: 3107, column: 5, scope: !7110)
!7301 = !DILocation(line: 3107, column: 9, scope: !7110)
!7302 = !DILocation(line: 3107, column: 16, scope: !7110)
!7303 = !DILocation(line: 3107, column: 27, scope: !7110)
!7304 = !DILocation(line: 3108, column: 30, scope: !7110)
!7305 = !DILocation(line: 3108, column: 37, scope: !7110)
!7306 = !DILocation(line: 3108, column: 5, scope: !7110)
!7307 = !DILocation(line: 3108, column: 9, scope: !7110)
!7308 = !DILocation(line: 3108, column: 16, scope: !7110)
!7309 = !DILocation(line: 3108, column: 28, scope: !7110)
!7310 = !DILocation(line: 3109, column: 6, scope: !7110)
!7311 = !DILocation(line: 3109, column: 20, scope: !7110)
!7312 = !DILocation(line: 3111, column: 20, scope: !7110)
!7313 = !DILocation(line: 3111, column: 38, scope: !7110)
!7314 = !DILocation(line: 3111, column: 24, scope: !7110)
!7315 = !DILocation(line: 3111, column: 5, scope: !7316)
!7316 = !DILexicalBlockFile(scope: !7110, file: !1800, discriminator: 1)
!7317 = !DILocation(line: 3112, column: 5, scope: !7110)
!7318 = !DILocation(line: 3113, column: 1, scope: !7110)
!7319 = distinct !DISubprogram(name: "aac_decode_frame_int", scope: !1800, file: !1800, line: 3115, type: !7320, isLocal: true, isDefinition: true, scopeLine: 3117, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!7320 = !DISubroutineType(types: !7321)
!7321 = !{!1012, !1259, !1022, !1454, !2041, !1308}
!7322 = !DILocalVariable(name: "avctx", arg: 1, scope: !7319, file: !1800, line: 3115, type: !1259)
!7323 = !DILocation(line: 3115, column: 49, scope: !7319)
!7324 = !DILocalVariable(name: "data", arg: 2, scope: !7319, file: !1800, line: 3115, type: !1022)
!7325 = !DILocation(line: 3115, column: 62, scope: !7319)
!7326 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !7319, file: !1800, line: 3116, type: !1454)
!7327 = !DILocation(line: 3116, column: 38, scope: !7319)
!7328 = !DILocalVariable(name: "gb", arg: 4, scope: !7319, file: !1800, line: 3116, type: !2041)
!7329 = !DILocation(line: 3116, column: 68, scope: !7319)
!7330 = !DILocalVariable(name: "avpkt", arg: 5, scope: !7319, file: !1800, line: 3116, type: !1308)
!7331 = !DILocation(line: 3116, column: 82, scope: !7319)
!7332 = !DILocalVariable(name: "ac", scope: !7319, file: !1800, line: 3118, type: !2071)
!7333 = !DILocation(line: 3118, column: 17, scope: !7319)
!7334 = !DILocation(line: 3118, column: 22, scope: !7319)
!7335 = !DILocation(line: 3118, column: 29, scope: !7319)
!7336 = !DILocalVariable(name: "che", scope: !7319, file: !1800, line: 3119, type: !2101)
!7337 = !DILocation(line: 3119, column: 21, scope: !7319)
!7338 = !DILocalVariable(name: "che_prev", scope: !7319, file: !1800, line: 3119, type: !2101)
!7339 = !DILocation(line: 3119, column: 33, scope: !7319)
!7340 = !DILocalVariable(name: "elem_type", scope: !7319, file: !1800, line: 3120, type: !930)
!7341 = !DILocation(line: 3120, column: 27, scope: !7319)
!7342 = !DILocalVariable(name: "che_prev_type", scope: !7319, file: !1800, line: 3120, type: !930)
!7343 = !DILocation(line: 3120, column: 38, scope: !7319)
!7344 = !DILocalVariable(name: "err", scope: !7319, file: !1800, line: 3121, type: !1012)
!7345 = !DILocation(line: 3121, column: 9, scope: !7319)
!7346 = !DILocalVariable(name: "elem_id", scope: !7319, file: !1800, line: 3121, type: !1012)
!7347 = !DILocation(line: 3121, column: 14, scope: !7319)
!7348 = !DILocalVariable(name: "samples", scope: !7319, file: !1800, line: 3122, type: !1012)
!7349 = !DILocation(line: 3122, column: 9, scope: !7319)
!7350 = !DILocalVariable(name: "multiplier", scope: !7319, file: !1800, line: 3122, type: !1012)
!7351 = !DILocation(line: 3122, column: 22, scope: !7319)
!7352 = !DILocalVariable(name: "audio_found", scope: !7319, file: !1800, line: 3122, type: !1012)
!7353 = !DILocation(line: 3122, column: 34, scope: !7319)
!7354 = !DILocalVariable(name: "pce_found", scope: !7319, file: !1800, line: 3122, type: !1012)
!7355 = !DILocation(line: 3122, column: 51, scope: !7319)
!7356 = !DILocalVariable(name: "is_dmono", scope: !7319, file: !1800, line: 3123, type: !1012)
!7357 = !DILocation(line: 3123, column: 9, scope: !7319)
!7358 = !DILocalVariable(name: "sce_count", scope: !7319, file: !1800, line: 3123, type: !1012)
!7359 = !DILocation(line: 3123, column: 19, scope: !7319)
!7360 = !DILocalVariable(name: "payload_alignment", scope: !7319, file: !1800, line: 3124, type: !1012)
!7361 = !DILocation(line: 3124, column: 9, scope: !7319)
!7362 = !DILocalVariable(name: "che_presence", scope: !7319, file: !1800, line: 3125, type: !7363)
!7363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 512, align: 8, elements: !2523)
!7364 = !DILocation(line: 3125, column: 13, scope: !7319)
!7365 = !DILocation(line: 3127, column: 17, scope: !7319)
!7366 = !DILocation(line: 3127, column: 5, scope: !7319)
!7367 = !DILocation(line: 3127, column: 9, scope: !7319)
!7368 = !DILocation(line: 3127, column: 15, scope: !7319)
!7369 = !DILocation(line: 3129, column: 19, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7319, file: !1800, line: 3129, column: 9)
!7371 = !DILocation(line: 3129, column: 9, scope: !7370)
!7372 = !DILocation(line: 3129, column: 27, scope: !7370)
!7373 = !DILocation(line: 3129, column: 9, scope: !7319)
!7374 = !DILocation(line: 3130, column: 44, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7376, file: !1800, line: 3130, column: 13)
!7376 = distinct !DILexicalBlock(scope: !7370, file: !1800, line: 3129, column: 37)
!7377 = !DILocation(line: 3130, column: 48, scope: !7375)
!7378 = !DILocation(line: 3130, column: 20, scope: !7375)
!7379 = !DILocation(line: 3130, column: 18, scope: !7375)
!7380 = !DILocation(line: 3130, column: 53, scope: !7375)
!7381 = !DILocation(line: 3130, column: 13, scope: !7376)
!7382 = !DILocation(line: 3131, column: 20, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7375, file: !1800, line: 3130, column: 58)
!7384 = !DILocation(line: 3131, column: 13, scope: !7383)
!7385 = !DILocation(line: 3132, column: 13, scope: !7383)
!7386 = !DILocation(line: 3134, column: 13, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7376, file: !1800, line: 3134, column: 13)
!7388 = !DILocation(line: 3134, column: 17, scope: !7387)
!7389 = !DILocation(line: 3134, column: 23, scope: !7387)
!7390 = !DILocation(line: 3134, column: 28, scope: !7387)
!7391 = !DILocation(line: 3134, column: 43, scope: !7387)
!7392 = !DILocation(line: 3134, column: 13, scope: !7376)
!7393 = !DILocation(line: 3135, column: 20, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7387, file: !1800, line: 3134, column: 49)
!7395 = !DILocation(line: 3135, column: 24, scope: !7394)
!7396 = !DILocation(line: 3135, column: 71, scope: !7394)
!7397 = !DILocation(line: 3135, column: 75, scope: !7394)
!7398 = !DILocation(line: 3135, column: 81, scope: !7394)
!7399 = !DILocation(line: 3135, column: 86, scope: !7394)
!7400 = !DILocation(line: 3135, column: 13, scope: !7394)
!7401 = !DILocation(line: 3136, column: 17, scope: !7394)
!7402 = !DILocation(line: 3137, column: 13, scope: !7394)
!7403 = !DILocation(line: 3139, column: 5, scope: !7376)
!7404 = !DILocation(line: 3141, column: 41, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7319, file: !1800, line: 3141, column: 9)
!7406 = !DILocation(line: 3141, column: 16, scope: !7405)
!7407 = !DILocation(line: 3141, column: 14, scope: !7405)
!7408 = !DILocation(line: 3141, column: 49, scope: !7405)
!7409 = !DILocation(line: 3141, column: 9, scope: !7319)
!7410 = !DILocation(line: 3142, column: 9, scope: !7405)
!7411 = !DILocation(line: 3146, column: 26, scope: !7319)
!7412 = !DILocation(line: 3146, column: 30, scope: !7319)
!7413 = !DILocation(line: 3146, column: 36, scope: !7319)
!7414 = !DILocation(line: 3146, column: 41, scope: !7319)
!7415 = !DILocation(line: 3146, column: 53, scope: !7319)
!7416 = !DILocation(line: 3146, column: 5, scope: !7319)
!7417 = !DILocation(line: 3146, column: 9, scope: !7319)
!7418 = !DILocation(line: 3146, column: 16, scope: !7319)
!7419 = !DILocation(line: 3146, column: 24, scope: !7319)
!7420 = !DILocation(line: 3148, column: 40, scope: !7319)
!7421 = !DILocation(line: 3148, column: 25, scope: !7319)
!7422 = !DILocation(line: 3148, column: 23, scope: !7319)
!7423 = !DILocation(line: 3149, column: 5, scope: !7319)
!7424 = !DILocation(line: 3149, column: 9, scope: !7319)
!7425 = !DILocation(line: 3149, column: 21, scope: !7319)
!7426 = !DILocation(line: 3151, column: 5, scope: !7319)
!7427 = !DILocation(line: 3151, column: 34, scope: !7428)
!7428 = !DILexicalBlockFile(scope: !7319, file: !1800, discriminator: 1)
!7429 = !DILocation(line: 3151, column: 25, scope: !7428)
!7430 = !DILocation(line: 3151, column: 23, scope: !7428)
!7431 = !DILocation(line: 3151, column: 42, scope: !7428)
!7432 = !DILocation(line: 3151, column: 5, scope: !7428)
!7433 = !DILocation(line: 3152, column: 28, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7319, file: !1800, line: 3151, column: 55)
!7435 = !DILocation(line: 3152, column: 19, scope: !7434)
!7436 = !DILocation(line: 3152, column: 17, scope: !7434)
!7437 = !DILocation(line: 3154, column: 13, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7434, file: !1800, line: 3154, column: 13)
!7439 = !DILocation(line: 3154, column: 20, scope: !7438)
!7440 = !DILocation(line: 3154, column: 26, scope: !7438)
!7441 = !DILocation(line: 3154, column: 13, scope: !7434)
!7442 = !DILocation(line: 3155, column: 20, scope: !7438)
!7443 = !DILocation(line: 3155, column: 55, scope: !7438)
!7444 = !DILocation(line: 3155, column: 66, scope: !7438)
!7445 = !DILocation(line: 3155, column: 13, scope: !7438)
!7446 = !DILocation(line: 3157, column: 14, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7434, file: !1800, line: 3157, column: 13)
!7448 = !DILocation(line: 3157, column: 21, scope: !7447)
!7449 = !DILocation(line: 3157, column: 30, scope: !7447)
!7450 = !DILocation(line: 3157, column: 33, scope: !7451)
!7451 = !DILexicalBlockFile(scope: !7447, file: !1800, discriminator: 1)
!7452 = !DILocation(line: 3157, column: 43, scope: !7451)
!7453 = !DILocation(line: 3157, column: 13, scope: !7451)
!7454 = !DILocation(line: 3158, column: 17, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7447, file: !1800, line: 3157, column: 56)
!7456 = !DILocation(line: 3159, column: 13, scope: !7455)
!7457 = !DILocation(line: 3162, column: 13, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7434, file: !1800, line: 3162, column: 13)
!7459 = !DILocation(line: 3162, column: 23, scope: !7458)
!7460 = !DILocation(line: 3162, column: 13, scope: !7434)
!7461 = !DILocation(line: 3163, column: 41, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7463, file: !1800, line: 3163, column: 17)
!7463 = distinct !DILexicalBlock(scope: !7458, file: !1800, line: 3162, column: 35)
!7464 = !DILocation(line: 3163, column: 17, scope: !7462)
!7465 = !DILocation(line: 3163, column: 30, scope: !7462)
!7466 = !DILocation(line: 3163, column: 17, scope: !7463)
!7467 = !DILocalVariable(name: "error", scope: !7468, file: !1800, line: 3164, type: !1012)
!7468 = distinct !DILexicalBlock(scope: !7462, file: !1800, line: 3163, column: 51)
!7469 = !DILocation(line: 3164, column: 21, scope: !7468)
!7470 = !DILocation(line: 3164, column: 53, scope: !7468)
!7471 = !DILocation(line: 3164, column: 29, scope: !7468)
!7472 = !DILocation(line: 3164, column: 42, scope: !7468)
!7473 = !DILocation(line: 3164, column: 62, scope: !7468)
!7474 = !DILocation(line: 3165, column: 24, scope: !7468)
!7475 = !DILocation(line: 3165, column: 28, scope: !7468)
!7476 = !DILocation(line: 3165, column: 35, scope: !7468)
!7477 = !DILocation(line: 3166, column: 24, scope: !7468)
!7478 = !DILocation(line: 3166, column: 35, scope: !7468)
!7479 = !DILocation(line: 3165, column: 17, scope: !7468)
!7480 = !DILocation(line: 3167, column: 21, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7468, file: !1800, line: 3167, column: 21)
!7482 = !DILocation(line: 3167, column: 21, scope: !7468)
!7483 = !DILocation(line: 3168, column: 25, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7481, file: !1800, line: 3167, column: 28)
!7485 = !DILocation(line: 3169, column: 21, scope: !7484)
!7486 = !DILocation(line: 3171, column: 13, scope: !7468)
!7487 = !DILocation(line: 3172, column: 37, scope: !7463)
!7488 = !DILocation(line: 3172, column: 13, scope: !7463)
!7489 = !DILocation(line: 3172, column: 26, scope: !7463)
!7490 = !DILocation(line: 3172, column: 45, scope: !7463)
!7491 = !DILocation(line: 3174, column: 31, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7463, file: !1800, line: 3174, column: 17)
!7493 = !DILocation(line: 3174, column: 35, scope: !7492)
!7494 = !DILocation(line: 3174, column: 46, scope: !7492)
!7495 = !DILocation(line: 3174, column: 23, scope: !7492)
!7496 = !DILocation(line: 3174, column: 22, scope: !7492)
!7497 = !DILocation(line: 3174, column: 17, scope: !7463)
!7498 = !DILocation(line: 3175, column: 24, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7492, file: !1800, line: 3174, column: 57)
!7500 = !DILocation(line: 3175, column: 28, scope: !7499)
!7501 = !DILocation(line: 3176, column: 24, scope: !7499)
!7502 = !DILocation(line: 3176, column: 35, scope: !7499)
!7503 = !DILocation(line: 3175, column: 17, scope: !7499)
!7504 = !DILocation(line: 3177, column: 21, scope: !7499)
!7505 = !DILocation(line: 3178, column: 17, scope: !7499)
!7506 = !DILocation(line: 3180, column: 23, scope: !7463)
!7507 = !DILocation(line: 3180, column: 27, scope: !7463)
!7508 = !DILocation(line: 3180, column: 33, scope: !7463)
!7509 = !DILocation(line: 3180, column: 38, scope: !7463)
!7510 = !DILocation(line: 3180, column: 21, scope: !7463)
!7511 = !DILocation(line: 3181, column: 13, scope: !7463)
!7512 = !DILocation(line: 3181, column: 18, scope: !7463)
!7513 = !DILocation(line: 3181, column: 26, scope: !7463)
!7514 = !DILocation(line: 3182, column: 9, scope: !7463)
!7515 = !DILocation(line: 3184, column: 17, scope: !7434)
!7516 = !DILocation(line: 3184, column: 9, scope: !7434)
!7517 = !DILocation(line: 3187, column: 30, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7434, file: !1800, line: 3184, column: 28)
!7519 = !DILocation(line: 3187, column: 35, scope: !7518)
!7520 = !DILocation(line: 3187, column: 40, scope: !7518)
!7521 = !DILocation(line: 3187, column: 47, scope: !7518)
!7522 = !DILocation(line: 3187, column: 19, scope: !7518)
!7523 = !DILocation(line: 3187, column: 17, scope: !7518)
!7524 = !DILocation(line: 3188, column: 25, scope: !7518)
!7525 = !DILocation(line: 3189, column: 22, scope: !7518)
!7526 = !DILocation(line: 3190, column: 13, scope: !7518)
!7527 = !DILocation(line: 3193, column: 30, scope: !7518)
!7528 = !DILocation(line: 3193, column: 34, scope: !7518)
!7529 = !DILocation(line: 3193, column: 38, scope: !7518)
!7530 = !DILocation(line: 3193, column: 19, scope: !7518)
!7531 = !DILocation(line: 3193, column: 17, scope: !7518)
!7532 = !DILocation(line: 3194, column: 25, scope: !7518)
!7533 = !DILocation(line: 3195, column: 13, scope: !7518)
!7534 = !DILocation(line: 3198, column: 30, scope: !7518)
!7535 = !DILocation(line: 3198, column: 34, scope: !7518)
!7536 = !DILocation(line: 3198, column: 38, scope: !7518)
!7537 = !DILocation(line: 3198, column: 19, scope: !7518)
!7538 = !DILocation(line: 3198, column: 17, scope: !7518)
!7539 = !DILocation(line: 3199, column: 13, scope: !7518)
!7540 = !DILocation(line: 3202, column: 30, scope: !7518)
!7541 = !DILocation(line: 3202, column: 35, scope: !7518)
!7542 = !DILocation(line: 3202, column: 40, scope: !7518)
!7543 = !DILocation(line: 3202, column: 47, scope: !7518)
!7544 = !DILocation(line: 3202, column: 19, scope: !7518)
!7545 = !DILocation(line: 3202, column: 17, scope: !7518)
!7546 = !DILocation(line: 3203, column: 25, scope: !7518)
!7547 = !DILocation(line: 3204, column: 13, scope: !7518)
!7548 = !DILocation(line: 3207, column: 44, scope: !7518)
!7549 = !DILocation(line: 3207, column: 48, scope: !7518)
!7550 = !DILocation(line: 3207, column: 19, scope: !7518)
!7551 = !DILocation(line: 3207, column: 17, scope: !7518)
!7552 = !DILocation(line: 3208, column: 13, scope: !7518)
!7553 = !DILocalVariable(name: "layout_map", scope: !7554, file: !1800, line: 3211, type: !2597)
!7554 = distinct !DILexicalBlock(scope: !7518, file: !1800, line: 3210, column: 24)
!7555 = !DILocation(line: 3211, column: 21, scope: !7554)
!7556 = !DILocalVariable(name: "tags", scope: !7554, file: !1800, line: 3212, type: !1012)
!7557 = !DILocation(line: 3212, column: 17, scope: !7554)
!7558 = !DILocalVariable(name: "pushed", scope: !7554, file: !1800, line: 3214, type: !1012)
!7559 = !DILocation(line: 3214, column: 17, scope: !7554)
!7560 = !DILocation(line: 3214, column: 52, scope: !7554)
!7561 = !DILocation(line: 3214, column: 26, scope: !7554)
!7562 = !DILocation(line: 3215, column: 17, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7554, file: !1800, line: 3215, column: 17)
!7564 = !DILocation(line: 3215, column: 27, scope: !7563)
!7565 = !DILocation(line: 3215, column: 31, scope: !7566)
!7566 = !DILexicalBlockFile(scope: !7563, file: !1800, discriminator: 1)
!7567 = !DILocation(line: 3215, column: 17, scope: !7566)
!7568 = !DILocation(line: 3216, column: 21, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7563, file: !1800, line: 3215, column: 39)
!7570 = !DILocation(line: 3217, column: 17, scope: !7569)
!7571 = !DILocation(line: 3220, column: 31, scope: !7554)
!7572 = !DILocation(line: 3220, column: 39, scope: !7554)
!7573 = !DILocation(line: 3220, column: 43, scope: !7554)
!7574 = !DILocation(line: 3220, column: 49, scope: !7554)
!7575 = !DILocation(line: 3220, column: 55, scope: !7554)
!7576 = !DILocation(line: 3220, column: 67, scope: !7554)
!7577 = !DILocation(line: 3221, column: 31, scope: !7554)
!7578 = !DILocation(line: 3220, column: 20, scope: !7554)
!7579 = !DILocation(line: 3220, column: 18, scope: !7554)
!7580 = !DILocation(line: 3222, column: 17, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7554, file: !1800, line: 3222, column: 17)
!7582 = !DILocation(line: 3222, column: 22, scope: !7581)
!7583 = !DILocation(line: 3222, column: 17, scope: !7554)
!7584 = !DILocation(line: 3223, column: 23, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7581, file: !1800, line: 3222, column: 27)
!7586 = !DILocation(line: 3223, column: 21, scope: !7585)
!7587 = !DILocation(line: 3224, column: 17, scope: !7585)
!7588 = !DILocation(line: 3226, column: 17, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7554, file: !1800, line: 3226, column: 17)
!7590 = !DILocation(line: 3226, column: 17, scope: !7554)
!7591 = !DILocation(line: 3227, column: 24, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7589, file: !1800, line: 3226, column: 28)
!7593 = !DILocation(line: 3227, column: 17, scope: !7592)
!7594 = !DILocation(line: 3229, column: 42, scope: !7592)
!7595 = !DILocation(line: 3229, column: 17, scope: !7592)
!7596 = !DILocation(line: 3230, column: 13, scope: !7592)
!7597 = !DILocation(line: 3231, column: 40, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7589, file: !1800, line: 3230, column: 20)
!7599 = !DILocation(line: 3231, column: 44, scope: !7598)
!7600 = !DILocation(line: 3231, column: 56, scope: !7598)
!7601 = !DILocation(line: 3231, column: 23, scope: !7598)
!7602 = !DILocation(line: 3231, column: 21, scope: !7598)
!7603 = !DILocation(line: 3232, column: 22, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7598, file: !1800, line: 3232, column: 21)
!7605 = !DILocation(line: 3232, column: 21, scope: !7598)
!7606 = !DILocation(line: 3233, column: 21, scope: !7604)
!7607 = !DILocation(line: 3233, column: 25, scope: !7604)
!7608 = !DILocation(line: 3233, column: 31, scope: !7604)
!7609 = !DILocation(line: 3233, column: 36, scope: !7604)
!7610 = !DILocation(line: 3233, column: 48, scope: !7604)
!7611 = !DILocation(line: 3234, column: 27, scope: !7598)
!7612 = !DILocation(line: 3236, column: 13, scope: !7554)
!7613 = !DILocation(line: 3240, column: 17, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7518, file: !1800, line: 3240, column: 17)
!7615 = !DILocation(line: 3240, column: 25, scope: !7614)
!7616 = !DILocation(line: 3240, column: 17, scope: !7518)
!7617 = !DILocation(line: 3241, column: 37, scope: !7614)
!7618 = !DILocation(line: 3241, column: 28, scope: !7614)
!7619 = !DILocation(line: 3241, column: 44, scope: !7614)
!7620 = !DILocation(line: 3241, column: 25, scope: !7614)
!7621 = !DILocation(line: 3241, column: 17, scope: !7614)
!7622 = !DILocation(line: 3242, column: 31, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7518, file: !1800, line: 3242, column: 17)
!7624 = !DILocation(line: 3242, column: 17, scope: !7623)
!7625 = !DILocation(line: 3242, column: 41, scope: !7623)
!7626 = !DILocation(line: 3242, column: 39, scope: !7623)
!7627 = !DILocation(line: 3242, column: 35, scope: !7623)
!7628 = !DILocation(line: 3242, column: 17, scope: !7518)
!7629 = !DILocation(line: 3243, column: 28, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7623, file: !1800, line: 3242, column: 50)
!7631 = !DILocation(line: 3243, column: 21, scope: !7630)
!7632 = !DILocation(line: 3244, column: 25, scope: !7630)
!7633 = !DILocation(line: 3245, column: 21, scope: !7630)
!7634 = !DILocation(line: 3247, column: 13, scope: !7518)
!7635 = !DILocation(line: 3247, column: 20, scope: !7636)
!7636 = !DILexicalBlockFile(scope: !7518, file: !1800, discriminator: 1)
!7637 = !DILocation(line: 3247, column: 28, scope: !7636)
!7638 = !DILocation(line: 3247, column: 13, scope: !7636)
!7639 = !DILocation(line: 3248, column: 53, scope: !7518)
!7640 = !DILocation(line: 3248, column: 57, scope: !7518)
!7641 = !DILocation(line: 3248, column: 61, scope: !7518)
!7642 = !DILocation(line: 3248, column: 70, scope: !7518)
!7643 = !DILocation(line: 3248, column: 80, scope: !7518)
!7644 = !DILocation(line: 3248, column: 28, scope: !7518)
!7645 = !DILocation(line: 3248, column: 25, scope: !7518)
!7646 = !DILocation(line: 3247, column: 13, scope: !7647)
!7647 = !DILexicalBlockFile(scope: !7518, file: !1800, discriminator: 2)
!7648 = distinct !{!7648, !7634}
!7649 = !DILocation(line: 3249, column: 17, scope: !7518)
!7650 = !DILocation(line: 3250, column: 13, scope: !7518)
!7651 = !DILocation(line: 3253, column: 17, scope: !7518)
!7652 = !DILocation(line: 3254, column: 13, scope: !7518)
!7653 = !DILocation(line: 3257, column: 13, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7434, file: !1800, line: 3257, column: 13)
!7655 = !DILocation(line: 3257, column: 23, scope: !7654)
!7656 = !DILocation(line: 3257, column: 13, scope: !7434)
!7657 = !DILocation(line: 3258, column: 24, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7654, file: !1800, line: 3257, column: 35)
!7659 = !DILocation(line: 3258, column: 22, scope: !7658)
!7660 = !DILocation(line: 3259, column: 29, scope: !7658)
!7661 = !DILocation(line: 3259, column: 27, scope: !7658)
!7662 = !DILocation(line: 3260, column: 9, scope: !7658)
!7663 = !DILocation(line: 3262, column: 13, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7434, file: !1800, line: 3262, column: 13)
!7665 = !DILocation(line: 3262, column: 13, scope: !7434)
!7666 = !DILocation(line: 3263, column: 13, scope: !7664)
!7667 = !DILocation(line: 3265, column: 27, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7434, file: !1800, line: 3265, column: 13)
!7669 = !DILocation(line: 3265, column: 13, scope: !7668)
!7670 = !DILocation(line: 3265, column: 31, scope: !7668)
!7671 = !DILocation(line: 3265, column: 13, scope: !7434)
!7672 = !DILocation(line: 3266, column: 20, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7668, file: !1800, line: 3265, column: 36)
!7674 = !DILocation(line: 3266, column: 13, scope: !7673)
!7675 = !DILocation(line: 3267, column: 17, scope: !7673)
!7676 = !DILocation(line: 3268, column: 13, scope: !7673)
!7677 = !DILocation(line: 3151, column: 5, scope: !7678)
!7678 = !DILexicalBlockFile(scope: !7319, file: !1800, discriminator: 2)
!7679 = distinct !{!7679, !7426}
!7680 = !DILocation(line: 3272, column: 10, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7319, file: !1800, line: 3272, column: 9)
!7682 = !DILocation(line: 3272, column: 17, scope: !7681)
!7683 = !DILocation(line: 3272, column: 9, scope: !7319)
!7684 = !DILocation(line: 3273, column: 10, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7681, file: !1800, line: 3272, column: 27)
!7686 = !DILocation(line: 3273, column: 24, scope: !7685)
!7687 = !DILocation(line: 3274, column: 9, scope: !7685)
!7688 = !DILocation(line: 3277, column: 19, scope: !7319)
!7689 = !DILocation(line: 3277, column: 23, scope: !7319)
!7690 = !DILocation(line: 3277, column: 29, scope: !7319)
!7691 = !DILocation(line: 3277, column: 34, scope: !7319)
!7692 = !DILocation(line: 3277, column: 38, scope: !7319)
!7693 = !DILocation(line: 3277, column: 18, scope: !7319)
!7694 = !DILocation(line: 3277, column: 46, scope: !7428)
!7695 = !DILocation(line: 3277, column: 50, scope: !7428)
!7696 = !DILocation(line: 3277, column: 56, scope: !7428)
!7697 = !DILocation(line: 3277, column: 61, scope: !7428)
!7698 = !DILocation(line: 3277, column: 79, scope: !7428)
!7699 = !DILocation(line: 3277, column: 83, scope: !7428)
!7700 = !DILocation(line: 3277, column: 89, scope: !7428)
!7701 = !DILocation(line: 3277, column: 94, scope: !7428)
!7702 = !DILocation(line: 3277, column: 77, scope: !7428)
!7703 = !DILocation(line: 3277, column: 18, scope: !7428)
!7704 = !DILocation(line: 3277, column: 18, scope: !7678)
!7705 = !DILocation(line: 3277, column: 18, scope: !7706)
!7706 = !DILexicalBlockFile(scope: !7319, file: !1800, discriminator: 3)
!7707 = !DILocation(line: 3277, column: 16, scope: !7706)
!7708 = !DILocation(line: 3278, column: 17, scope: !7319)
!7709 = !DILocation(line: 3278, column: 13, scope: !7319)
!7710 = !DILocation(line: 3280, column: 24, scope: !7319)
!7711 = !DILocation(line: 3280, column: 28, scope: !7319)
!7712 = !DILocation(line: 3280, column: 5, scope: !7319)
!7713 = !DILocation(line: 3282, column: 9, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7319, file: !1800, line: 3282, column: 9)
!7715 = !DILocation(line: 3282, column: 13, scope: !7714)
!7716 = !DILocation(line: 3282, column: 19, scope: !7714)
!7717 = !DILocation(line: 3282, column: 26, scope: !7714)
!7718 = !DILocation(line: 3282, column: 29, scope: !7719)
!7719 = !DILexicalBlockFile(scope: !7714, file: !1800, discriminator: 1)
!7720 = !DILocation(line: 3282, column: 9, scope: !7719)
!7721 = !DILocation(line: 3283, column: 30, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7714, file: !1800, line: 3282, column: 42)
!7723 = !DILocation(line: 3283, column: 34, scope: !7722)
!7724 = !DILocation(line: 3283, column: 40, scope: !7722)
!7725 = !DILocation(line: 3283, column: 45, scope: !7722)
!7726 = !DILocation(line: 3283, column: 60, scope: !7722)
!7727 = !DILocation(line: 3283, column: 57, scope: !7722)
!7728 = !DILocation(line: 3283, column: 9, scope: !7722)
!7729 = !DILocation(line: 3283, column: 16, scope: !7722)
!7730 = !DILocation(line: 3283, column: 28, scope: !7722)
!7731 = !DILocation(line: 3284, column: 29, scope: !7722)
!7732 = !DILocation(line: 3284, column: 9, scope: !7722)
!7733 = !DILocation(line: 3284, column: 16, scope: !7722)
!7734 = !DILocation(line: 3284, column: 27, scope: !7722)
!7735 = !DILocation(line: 3285, column: 9, scope: !7722)
!7736 = !DILocation(line: 3285, column: 13, scope: !7722)
!7737 = !DILocation(line: 3285, column: 19, scope: !7722)
!7738 = !DILocation(line: 3285, column: 26, scope: !7722)
!7739 = !DILocation(line: 3286, column: 5, scope: !7722)
!7740 = !DILocation(line: 3288, column: 9, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7319, file: !1800, line: 3288, column: 9)
!7742 = !DILocation(line: 3288, column: 9, scope: !7319)
!7743 = !DILocation(line: 3289, column: 9, scope: !7741)
!7744 = !DILocation(line: 3289, column: 16, scope: !7741)
!7745 = !DILocation(line: 3289, column: 26, scope: !7741)
!7746 = !DILocation(line: 3289, column: 50, scope: !7741)
!7747 = !DILocation(line: 3291, column: 10, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7319, file: !1800, line: 3291, column: 9)
!7749 = !DILocation(line: 3291, column: 14, scope: !7748)
!7750 = !DILocation(line: 3291, column: 21, scope: !7748)
!7751 = !DILocation(line: 3291, column: 29, scope: !7748)
!7752 = !DILocation(line: 3291, column: 32, scope: !7753)
!7753 = !DILexicalBlockFile(scope: !7748, file: !1800, discriminator: 1)
!7754 = !DILocation(line: 3291, column: 9, scope: !7753)
!7755 = !DILocation(line: 3292, column: 16, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7748, file: !1800, line: 3291, column: 41)
!7757 = !DILocation(line: 3292, column: 9, scope: !7756)
!7758 = !DILocation(line: 3293, column: 13, scope: !7756)
!7759 = !DILocation(line: 3294, column: 9, scope: !7756)
!7760 = !DILocation(line: 3297, column: 9, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7319, file: !1800, line: 3297, column: 9)
!7762 = !DILocation(line: 3297, column: 9, scope: !7319)
!7763 = !DILocation(line: 3298, column: 33, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7761, file: !1800, line: 3297, column: 18)
!7765 = !DILocation(line: 3298, column: 9, scope: !7764)
!7766 = !DILocation(line: 3298, column: 13, scope: !7764)
!7767 = !DILocation(line: 3298, column: 20, scope: !7764)
!7768 = !DILocation(line: 3298, column: 31, scope: !7764)
!7769 = !DILocation(line: 3299, column: 34, scope: !7764)
!7770 = !DILocation(line: 3299, column: 41, scope: !7764)
!7771 = !DILocation(line: 3299, column: 9, scope: !7764)
!7772 = !DILocation(line: 3299, column: 13, scope: !7764)
!7773 = !DILocation(line: 3299, column: 20, scope: !7764)
!7774 = !DILocation(line: 3299, column: 32, scope: !7764)
!7775 = !DILocation(line: 3300, column: 5, scope: !7764)
!7776 = !DILocation(line: 3301, column: 24, scope: !7761)
!7777 = !DILocation(line: 3301, column: 28, scope: !7761)
!7778 = !DILocation(line: 3301, column: 9, scope: !7761)
!7779 = !DILocation(line: 3302, column: 24, scope: !7319)
!7780 = !DILocation(line: 3302, column: 23, scope: !7319)
!7781 = !DILocation(line: 3302, column: 22, scope: !7319)
!7782 = !DILocation(line: 3302, column: 6, scope: !7319)
!7783 = !DILocation(line: 3302, column: 20, scope: !7319)
!7784 = !DILocation(line: 3305, column: 16, scope: !7319)
!7785 = !DILocation(line: 3305, column: 20, scope: !7319)
!7786 = !DILocation(line: 3305, column: 31, scope: !7319)
!7787 = !DILocation(line: 3305, column: 34, scope: !7428)
!7788 = !DILocation(line: 3305, column: 44, scope: !7428)
!7789 = !DILocation(line: 3305, column: 49, scope: !7428)
!7790 = !DILocation(line: 3306, column: 16, scope: !7319)
!7791 = !DILocation(line: 3306, column: 20, scope: !7319)
!7792 = !DILocation(line: 3306, column: 26, scope: !7319)
!7793 = !DILocation(line: 3306, column: 41, scope: !7319)
!7794 = !DILocation(line: 3305, column: 49, scope: !7678)
!7795 = !DILocation(line: 3305, column: 14, scope: !7678)
!7796 = !DILocation(line: 3307, column: 9, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7319, file: !1800, line: 3307, column: 9)
!7798 = !DILocation(line: 3307, column: 9, scope: !7319)
!7799 = !DILocation(line: 3308, column: 13, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7801, file: !1800, line: 3308, column: 13)
!7801 = distinct !DILexicalBlock(scope: !7797, file: !1800, line: 3307, column: 19)
!7802 = !DILocation(line: 3308, column: 17, scope: !7800)
!7803 = !DILocation(line: 3308, column: 28, scope: !7800)
!7804 = !DILocation(line: 3308, column: 13, scope: !7801)
!7805 = !DILocation(line: 3309, column: 53, scope: !7800)
!7806 = !DILocation(line: 3309, column: 42, scope: !7800)
!7807 = !DILocation(line: 3309, column: 60, scope: !7800)
!7808 = !DILocation(line: 3309, column: 41, scope: !7800)
!7809 = !DILocation(line: 3309, column: 25, scope: !7800)
!7810 = !DILocation(line: 3309, column: 14, scope: !7800)
!7811 = !DILocation(line: 3309, column: 32, scope: !7800)
!7812 = !DILocation(line: 3309, column: 13, scope: !7800)
!7813 = !DILocation(line: 3309, column: 40, scope: !7800)
!7814 = !DILocation(line: 3310, column: 18, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7800, file: !1800, line: 3310, column: 18)
!7816 = !DILocation(line: 3310, column: 22, scope: !7815)
!7817 = !DILocation(line: 3310, column: 33, scope: !7815)
!7818 = !DILocation(line: 3310, column: 18, scope: !7800)
!7819 = !DILocation(line: 3311, column: 53, scope: !7815)
!7820 = !DILocation(line: 3311, column: 42, scope: !7815)
!7821 = !DILocation(line: 3311, column: 60, scope: !7815)
!7822 = !DILocation(line: 3311, column: 41, scope: !7815)
!7823 = !DILocation(line: 3311, column: 25, scope: !7815)
!7824 = !DILocation(line: 3311, column: 14, scope: !7815)
!7825 = !DILocation(line: 3311, column: 32, scope: !7815)
!7826 = !DILocation(line: 3311, column: 13, scope: !7815)
!7827 = !DILocation(line: 3311, column: 40, scope: !7815)
!7828 = !DILocation(line: 3312, column: 5, scope: !7801)
!7829 = !DILocation(line: 3314, column: 5, scope: !7319)
!7830 = !DILocation(line: 3316, column: 30, scope: !7319)
!7831 = !DILocation(line: 3316, column: 5, scope: !7319)
!7832 = !DILocation(line: 3317, column: 12, scope: !7319)
!7833 = !DILocation(line: 3317, column: 5, scope: !7319)
!7834 = !DILocation(line: 3318, column: 1, scope: !7319)
!7835 = distinct !DISubprogram(name: "get_che", scope: !1800, file: !1800, line: 560, type: !7836, isLocal: true, isDefinition: true, scopeLine: 561, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!7836 = !DISubroutineType(types: !7837)
!7837 = !{!2101, !2071, !1012, !1012}
!7838 = !DILocalVariable(name: "ac", arg: 1, scope: !7835, file: !1800, line: 560, type: !2071)
!7839 = !DILocation(line: 560, column: 44, scope: !7835)
!7840 = !DILocalVariable(name: "type", arg: 2, scope: !7835, file: !1800, line: 560, type: !1012)
!7841 = !DILocation(line: 560, column: 52, scope: !7835)
!7842 = !DILocalVariable(name: "elem_id", arg: 3, scope: !7835, file: !1800, line: 560, type: !1012)
!7843 = !DILocation(line: 560, column: 62, scope: !7835)
!7844 = !DILocation(line: 564, column: 10, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7835, file: !1800, line: 564, column: 9)
!7846 = !DILocation(line: 564, column: 14, scope: !7845)
!7847 = !DILocation(line: 564, column: 20, scope: !7845)
!7848 = !DILocation(line: 564, column: 25, scope: !7845)
!7849 = !DILocation(line: 564, column: 9, scope: !7835)
!7850 = !DILocation(line: 565, column: 38, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7845, file: !1800, line: 564, column: 38)
!7852 = !DILocation(line: 565, column: 16, scope: !7851)
!7853 = !DILocation(line: 565, column: 32, scope: !7851)
!7854 = !DILocation(line: 565, column: 20, scope: !7851)
!7855 = !DILocation(line: 565, column: 9, scope: !7851)
!7856 = !DILocation(line: 568, column: 10, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7835, file: !1800, line: 568, column: 9)
!7858 = !DILocation(line: 568, column: 14, scope: !7857)
!7859 = !DILocation(line: 568, column: 26, scope: !7857)
!7860 = !DILocation(line: 568, column: 29, scope: !7861)
!7861 = !DILexicalBlockFile(scope: !7857, file: !1800, discriminator: 1)
!7862 = !DILocation(line: 568, column: 34, scope: !7861)
!7863 = !DILocation(line: 568, column: 46, scope: !7861)
!7864 = !DILocation(line: 569, column: 9, scope: !7857)
!7865 = !DILocation(line: 569, column: 13, scope: !7857)
!7866 = !DILocation(line: 569, column: 19, scope: !7857)
!7867 = !DILocation(line: 569, column: 24, scope: !7857)
!7868 = !DILocation(line: 569, column: 36, scope: !7857)
!7869 = !DILocation(line: 568, column: 9, scope: !7870)
!7870 = !DILexicalBlockFile(scope: !7835, file: !1800, discriminator: 2)
!7871 = !DILocalVariable(name: "layout_map", scope: !7872, file: !1800, line: 570, type: !2597)
!7872 = distinct !DILexicalBlock(scope: !7857, file: !1800, line: 569, column: 42)
!7873 = !DILocation(line: 570, column: 17, scope: !7872)
!7874 = !DILocalVariable(name: "layout_map_tags", scope: !7872, file: !1800, line: 571, type: !1012)
!7875 = !DILocation(line: 571, column: 13, scope: !7872)
!7876 = !DILocation(line: 572, column: 35, scope: !7872)
!7877 = !DILocation(line: 572, column: 9, scope: !7872)
!7878 = !DILocation(line: 574, column: 16, scope: !7872)
!7879 = !DILocation(line: 574, column: 20, scope: !7872)
!7880 = !DILocation(line: 574, column: 9, scope: !7872)
!7881 = !DILocation(line: 576, column: 40, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7872, file: !1800, line: 576, column: 13)
!7883 = !DILocation(line: 576, column: 44, scope: !7882)
!7884 = !DILocation(line: 576, column: 51, scope: !7882)
!7885 = !DILocation(line: 576, column: 13, scope: !7882)
!7886 = !DILocation(line: 577, column: 61, scope: !7882)
!7887 = !DILocation(line: 576, column: 13, scope: !7872)
!7888 = !DILocation(line: 578, column: 13, scope: !7882)
!7889 = !DILocation(line: 579, column: 30, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7872, file: !1800, line: 579, column: 13)
!7891 = !DILocation(line: 579, column: 34, scope: !7890)
!7892 = !DILocation(line: 579, column: 46, scope: !7890)
!7893 = !DILocation(line: 579, column: 13, scope: !7890)
!7894 = !DILocation(line: 580, column: 49, scope: !7890)
!7895 = !DILocation(line: 579, column: 13, scope: !7872)
!7896 = !DILocation(line: 581, column: 13, scope: !7890)
!7897 = !DILocation(line: 583, column: 9, scope: !7872)
!7898 = !DILocation(line: 583, column: 13, scope: !7872)
!7899 = !DILocation(line: 583, column: 19, scope: !7872)
!7900 = !DILocation(line: 583, column: 24, scope: !7872)
!7901 = !DILocation(line: 583, column: 36, scope: !7872)
!7902 = !DILocation(line: 584, column: 9, scope: !7872)
!7903 = !DILocation(line: 584, column: 13, scope: !7872)
!7904 = !DILocation(line: 584, column: 19, scope: !7872)
!7905 = !DILocation(line: 584, column: 24, scope: !7872)
!7906 = !DILocation(line: 584, column: 27, scope: !7872)
!7907 = !DILocation(line: 585, column: 5, scope: !7872)
!7908 = !DILocation(line: 587, column: 10, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7835, file: !1800, line: 587, column: 9)
!7910 = !DILocation(line: 587, column: 14, scope: !7909)
!7911 = !DILocation(line: 587, column: 26, scope: !7909)
!7912 = !DILocation(line: 587, column: 29, scope: !7913)
!7913 = !DILexicalBlockFile(scope: !7909, file: !1800, discriminator: 1)
!7914 = !DILocation(line: 587, column: 34, scope: !7913)
!7915 = !DILocation(line: 587, column: 46, scope: !7913)
!7916 = !DILocation(line: 588, column: 9, scope: !7909)
!7917 = !DILocation(line: 588, column: 13, scope: !7909)
!7918 = !DILocation(line: 588, column: 19, scope: !7909)
!7919 = !DILocation(line: 588, column: 24, scope: !7909)
!7920 = !DILocation(line: 588, column: 36, scope: !7909)
!7921 = !DILocation(line: 587, column: 9, scope: !7870)
!7922 = !DILocalVariable(name: "layout_map", scope: !7923, file: !1800, line: 589, type: !2597)
!7923 = distinct !DILexicalBlock(scope: !7909, file: !1800, line: 588, column: 42)
!7924 = !DILocation(line: 589, column: 17, scope: !7923)
!7925 = !DILocalVariable(name: "layout_map_tags", scope: !7923, file: !1800, line: 590, type: !1012)
!7926 = !DILocation(line: 590, column: 13, scope: !7923)
!7927 = !DILocation(line: 591, column: 35, scope: !7923)
!7928 = !DILocation(line: 591, column: 9, scope: !7923)
!7929 = !DILocation(line: 593, column: 16, scope: !7923)
!7930 = !DILocation(line: 593, column: 20, scope: !7923)
!7931 = !DILocation(line: 593, column: 9, scope: !7923)
!7932 = !DILocation(line: 595, column: 40, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7923, file: !1800, line: 595, column: 13)
!7934 = !DILocation(line: 595, column: 44, scope: !7933)
!7935 = !DILocation(line: 595, column: 51, scope: !7933)
!7936 = !DILocation(line: 595, column: 13, scope: !7933)
!7937 = !DILocation(line: 596, column: 61, scope: !7933)
!7938 = !DILocation(line: 595, column: 13, scope: !7923)
!7939 = !DILocation(line: 597, column: 13, scope: !7933)
!7940 = !DILocation(line: 598, column: 30, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7923, file: !1800, line: 598, column: 13)
!7942 = !DILocation(line: 598, column: 34, scope: !7941)
!7943 = !DILocation(line: 598, column: 46, scope: !7941)
!7944 = !DILocation(line: 598, column: 13, scope: !7941)
!7945 = !DILocation(line: 599, column: 49, scope: !7941)
!7946 = !DILocation(line: 598, column: 13, scope: !7923)
!7947 = !DILocation(line: 600, column: 13, scope: !7941)
!7948 = !DILocation(line: 602, column: 9, scope: !7923)
!7949 = !DILocation(line: 602, column: 13, scope: !7923)
!7950 = !DILocation(line: 602, column: 19, scope: !7923)
!7951 = !DILocation(line: 602, column: 24, scope: !7923)
!7952 = !DILocation(line: 602, column: 36, scope: !7923)
!7953 = !DILocation(line: 603, column: 13, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7923, file: !1800, line: 603, column: 13)
!7955 = !DILocation(line: 603, column: 17, scope: !7954)
!7956 = !DILocation(line: 603, column: 23, scope: !7954)
!7957 = !DILocation(line: 603, column: 28, scope: !7954)
!7958 = !DILocation(line: 603, column: 13, scope: !7923)
!7959 = !DILocation(line: 604, column: 13, scope: !7954)
!7960 = !DILocation(line: 604, column: 17, scope: !7954)
!7961 = !DILocation(line: 604, column: 23, scope: !7954)
!7962 = !DILocation(line: 604, column: 28, scope: !7954)
!7963 = !DILocation(line: 604, column: 31, scope: !7954)
!7964 = !DILocation(line: 605, column: 5, scope: !7923)
!7965 = !DILocation(line: 608, column: 13, scope: !7835)
!7966 = !DILocation(line: 608, column: 17, scope: !7835)
!7967 = !DILocation(line: 608, column: 23, scope: !7835)
!7968 = !DILocation(line: 608, column: 28, scope: !7835)
!7969 = !DILocation(line: 608, column: 5, scope: !7835)
!7970 = !DILocation(line: 611, column: 13, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7972, file: !1800, line: 611, column: 13)
!7972 = distinct !DILexicalBlock(scope: !7835, file: !1800, line: 608, column: 41)
!7973 = !DILocation(line: 611, column: 17, scope: !7971)
!7974 = !DILocation(line: 611, column: 29, scope: !7971)
!7975 = !DILocation(line: 611, column: 34, scope: !7971)
!7976 = !DILocation(line: 611, column: 37, scope: !7977)
!7977 = !DILexicalBlockFile(scope: !7971, file: !1800, discriminator: 1)
!7978 = !DILocation(line: 611, column: 42, scope: !7977)
!7979 = !DILocation(line: 611, column: 13, scope: !7977)
!7980 = !DILocation(line: 612, column: 13, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7971, file: !1800, line: 611, column: 55)
!7982 = !DILocation(line: 612, column: 17, scope: !7981)
!7983 = !DILocation(line: 612, column: 28, scope: !7981)
!7984 = !DILocation(line: 613, column: 57, scope: !7981)
!7985 = !DILocation(line: 613, column: 61, scope: !7981)
!7986 = !DILocation(line: 613, column: 46, scope: !7981)
!7987 = !DILocation(line: 613, column: 20, scope: !7981)
!7988 = !DILocation(line: 613, column: 24, scope: !7981)
!7989 = !DILocation(line: 613, column: 55, scope: !7981)
!7990 = !DILocation(line: 613, column: 13, scope: !7981)
!7991 = !DILocation(line: 611, column: 45, scope: !7992)
!7992 = !DILexicalBlockFile(scope: !7971, file: !1800, discriminator: 2)
!7993 = !DILocation(line: 616, column: 13, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7972, file: !1800, line: 616, column: 13)
!7995 = !DILocation(line: 616, column: 17, scope: !7994)
!7996 = !DILocation(line: 616, column: 29, scope: !7994)
!7997 = !DILocation(line: 616, column: 34, scope: !7994)
!7998 = !DILocation(line: 617, column: 13, scope: !7994)
!7999 = !DILocation(line: 617, column: 17, scope: !7994)
!8000 = !DILocation(line: 617, column: 23, scope: !7994)
!8001 = !DILocation(line: 617, column: 28, scope: !7994)
!8002 = !DILocation(line: 617, column: 40, scope: !7994)
!8003 = !DILocation(line: 617, column: 46, scope: !7994)
!8004 = !DILocation(line: 618, column: 13, scope: !7994)
!8005 = !DILocation(line: 618, column: 18, scope: !7994)
!8006 = !DILocation(line: 616, column: 13, scope: !8007)
!8007 = !DILexicalBlockFile(scope: !7972, file: !1800, discriminator: 1)
!8008 = !DILocation(line: 619, column: 13, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !7994, file: !1800, line: 618, column: 31)
!8010 = !DILocation(line: 619, column: 17, scope: !8009)
!8011 = !DILocation(line: 619, column: 28, scope: !8009)
!8012 = !DILocation(line: 620, column: 57, scope: !8009)
!8013 = !DILocation(line: 620, column: 61, scope: !8009)
!8014 = !DILocation(line: 620, column: 46, scope: !8009)
!8015 = !DILocation(line: 620, column: 20, scope: !8009)
!8016 = !DILocation(line: 620, column: 24, scope: !8009)
!8017 = !DILocation(line: 620, column: 55, scope: !8009)
!8018 = !DILocation(line: 620, column: 13, scope: !8009)
!8019 = !DILocation(line: 618, column: 21, scope: !8020)
!8020 = !DILexicalBlockFile(scope: !7994, file: !1800, discriminator: 1)
!8021 = !DILocation(line: 629, column: 13, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !7972, file: !1800, line: 629, column: 13)
!8023 = !DILocation(line: 629, column: 17, scope: !8022)
!8024 = !DILocation(line: 629, column: 48, scope: !8022)
!8025 = !DILocation(line: 629, column: 52, scope: !8022)
!8026 = !DILocation(line: 629, column: 58, scope: !8022)
!8027 = !DILocation(line: 629, column: 63, scope: !8022)
!8028 = !DILocation(line: 629, column: 32, scope: !8022)
!8029 = !DILocation(line: 629, column: 76, scope: !8022)
!8030 = !DILocation(line: 629, column: 29, scope: !8022)
!8031 = !DILocation(line: 629, column: 80, scope: !8022)
!8032 = !DILocation(line: 629, column: 84, scope: !8033)
!8033 = !DILexicalBlockFile(scope: !8022, file: !1800, discriminator: 1)
!8034 = !DILocation(line: 629, column: 89, scope: !8033)
!8035 = !DILocation(line: 629, column: 101, scope: !8033)
!8036 = !DILocation(line: 629, column: 104, scope: !8037)
!8037 = !DILexicalBlockFile(scope: !8022, file: !1800, discriminator: 2)
!8038 = !DILocation(line: 629, column: 109, scope: !8037)
!8039 = !DILocation(line: 629, column: 13, scope: !8037)
!8040 = !DILocation(line: 630, column: 18, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !1800, line: 630, column: 17)
!8042 = distinct !DILexicalBlock(scope: !8022, file: !1800, line: 629, column: 123)
!8043 = !DILocation(line: 630, column: 22, scope: !8041)
!8044 = !DILocation(line: 630, column: 44, scope: !8041)
!8045 = !DILocation(line: 630, column: 48, scope: !8046)
!8046 = !DILexicalBlockFile(scope: !8041, file: !1800, discriminator: 1)
!8047 = !DILocation(line: 630, column: 53, scope: !8046)
!8048 = !DILocation(line: 630, column: 65, scope: !8046)
!8049 = !DILocation(line: 630, column: 68, scope: !8050)
!8050 = !DILexicalBlockFile(scope: !8041, file: !1800, discriminator: 2)
!8051 = !DILocation(line: 630, column: 76, scope: !8050)
!8052 = !DILocation(line: 630, column: 17, scope: !8050)
!8053 = !DILocation(line: 631, column: 24, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8041, file: !1800, line: 630, column: 83)
!8055 = !DILocation(line: 631, column: 28, scope: !8054)
!8056 = !DILocation(line: 633, column: 20, scope: !8054)
!8057 = !DILocation(line: 633, column: 25, scope: !8054)
!8058 = !DILocation(line: 633, column: 54, scope: !8054)
!8059 = !DILocation(line: 631, column: 17, scope: !8054)
!8060 = !DILocation(line: 634, column: 17, scope: !8054)
!8061 = !DILocation(line: 634, column: 21, scope: !8054)
!8062 = !DILocation(line: 634, column: 42, scope: !8054)
!8063 = !DILocation(line: 635, column: 13, scope: !8054)
!8064 = !DILocation(line: 636, column: 13, scope: !8042)
!8065 = !DILocation(line: 636, column: 17, scope: !8042)
!8066 = !DILocation(line: 636, column: 28, scope: !8042)
!8067 = !DILocation(line: 637, column: 53, scope: !8042)
!8068 = !DILocation(line: 637, column: 57, scope: !8042)
!8069 = !DILocation(line: 637, column: 42, scope: !8042)
!8070 = !DILocation(line: 637, column: 20, scope: !8042)
!8071 = !DILocation(line: 637, column: 36, scope: !8042)
!8072 = !DILocation(line: 637, column: 24, scope: !8042)
!8073 = !DILocation(line: 637, column: 51, scope: !8042)
!8074 = !DILocation(line: 637, column: 13, scope: !8042)
!8075 = !DILocation(line: 629, column: 120, scope: !8076)
!8076 = !DILexicalBlockFile(scope: !8022, file: !1800, discriminator: 3)
!8077 = !DILocation(line: 640, column: 13, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !7972, file: !1800, line: 640, column: 13)
!8079 = !DILocation(line: 640, column: 17, scope: !8078)
!8080 = !DILocation(line: 640, column: 29, scope: !8078)
!8081 = !DILocation(line: 640, column: 34, scope: !8078)
!8082 = !DILocation(line: 640, column: 37, scope: !8083)
!8083 = !DILexicalBlockFile(scope: !8078, file: !1800, discriminator: 1)
!8084 = !DILocation(line: 640, column: 42, scope: !8083)
!8085 = !DILocation(line: 640, column: 13, scope: !8083)
!8086 = !DILocation(line: 641, column: 13, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8078, file: !1800, line: 640, column: 55)
!8088 = !DILocation(line: 641, column: 17, scope: !8087)
!8089 = !DILocation(line: 641, column: 28, scope: !8087)
!8090 = !DILocation(line: 642, column: 57, scope: !8087)
!8091 = !DILocation(line: 642, column: 61, scope: !8087)
!8092 = !DILocation(line: 642, column: 46, scope: !8087)
!8093 = !DILocation(line: 642, column: 20, scope: !8087)
!8094 = !DILocation(line: 642, column: 24, scope: !8087)
!8095 = !DILocation(line: 642, column: 55, scope: !8087)
!8096 = !DILocation(line: 642, column: 13, scope: !8087)
!8097 = !DILocation(line: 640, column: 45, scope: !8098)
!8098 = !DILexicalBlockFile(scope: !8078, file: !1800, discriminator: 2)
!8099 = !DILocation(line: 651, column: 13, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !7972, file: !1800, line: 651, column: 13)
!8101 = !DILocation(line: 651, column: 17, scope: !8100)
!8102 = !DILocation(line: 651, column: 48, scope: !8100)
!8103 = !DILocation(line: 651, column: 52, scope: !8100)
!8104 = !DILocation(line: 651, column: 58, scope: !8100)
!8105 = !DILocation(line: 651, column: 63, scope: !8100)
!8106 = !DILocation(line: 651, column: 32, scope: !8100)
!8107 = !DILocation(line: 651, column: 76, scope: !8100)
!8108 = !DILocation(line: 651, column: 29, scope: !8100)
!8109 = !DILocation(line: 651, column: 80, scope: !8100)
!8110 = !DILocation(line: 651, column: 84, scope: !8111)
!8111 = !DILexicalBlockFile(scope: !8100, file: !1800, discriminator: 1)
!8112 = !DILocation(line: 651, column: 89, scope: !8111)
!8113 = !DILocation(line: 651, column: 101, scope: !8111)
!8114 = !DILocation(line: 651, column: 104, scope: !8115)
!8115 = !DILexicalBlockFile(scope: !8100, file: !1800, discriminator: 2)
!8116 = !DILocation(line: 651, column: 109, scope: !8115)
!8117 = !DILocation(line: 651, column: 13, scope: !8115)
!8118 = !DILocation(line: 652, column: 18, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8120, file: !1800, line: 652, column: 17)
!8120 = distinct !DILexicalBlock(scope: !8100, file: !1800, line: 651, column: 123)
!8121 = !DILocation(line: 652, column: 22, scope: !8119)
!8122 = !DILocation(line: 652, column: 44, scope: !8119)
!8123 = !DILocation(line: 652, column: 48, scope: !8124)
!8124 = !DILexicalBlockFile(scope: !8119, file: !1800, discriminator: 1)
!8125 = !DILocation(line: 652, column: 53, scope: !8124)
!8126 = !DILocation(line: 652, column: 65, scope: !8124)
!8127 = !DILocation(line: 652, column: 68, scope: !8128)
!8128 = !DILexicalBlockFile(scope: !8119, file: !1800, discriminator: 2)
!8129 = !DILocation(line: 652, column: 76, scope: !8128)
!8130 = !DILocation(line: 652, column: 17, scope: !8128)
!8131 = !DILocation(line: 653, column: 24, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8119, file: !1800, line: 652, column: 83)
!8133 = !DILocation(line: 653, column: 28, scope: !8132)
!8134 = !DILocation(line: 655, column: 20, scope: !8132)
!8135 = !DILocation(line: 655, column: 25, scope: !8132)
!8136 = !DILocation(line: 655, column: 54, scope: !8132)
!8137 = !DILocation(line: 653, column: 17, scope: !8132)
!8138 = !DILocation(line: 656, column: 17, scope: !8132)
!8139 = !DILocation(line: 656, column: 21, scope: !8132)
!8140 = !DILocation(line: 656, column: 42, scope: !8132)
!8141 = !DILocation(line: 657, column: 13, scope: !8132)
!8142 = !DILocation(line: 658, column: 13, scope: !8120)
!8143 = !DILocation(line: 658, column: 17, scope: !8120)
!8144 = !DILocation(line: 658, column: 28, scope: !8120)
!8145 = !DILocation(line: 659, column: 53, scope: !8120)
!8146 = !DILocation(line: 659, column: 57, scope: !8120)
!8147 = !DILocation(line: 659, column: 42, scope: !8120)
!8148 = !DILocation(line: 659, column: 20, scope: !8120)
!8149 = !DILocation(line: 659, column: 36, scope: !8120)
!8150 = !DILocation(line: 659, column: 24, scope: !8120)
!8151 = !DILocation(line: 659, column: 51, scope: !8120)
!8152 = !DILocation(line: 659, column: 13, scope: !8120)
!8153 = !DILocation(line: 661, column: 13, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !7972, file: !1800, line: 661, column: 13)
!8155 = !DILocation(line: 661, column: 17, scope: !8154)
!8156 = !DILocation(line: 661, column: 29, scope: !8154)
!8157 = !DILocation(line: 661, column: 34, scope: !8154)
!8158 = !DILocation(line: 662, column: 13, scope: !8154)
!8159 = !DILocation(line: 662, column: 17, scope: !8154)
!8160 = !DILocation(line: 662, column: 23, scope: !8154)
!8161 = !DILocation(line: 662, column: 28, scope: !8154)
!8162 = !DILocation(line: 662, column: 40, scope: !8154)
!8163 = !DILocation(line: 662, column: 45, scope: !8154)
!8164 = !DILocation(line: 663, column: 13, scope: !8154)
!8165 = !DILocation(line: 663, column: 18, scope: !8154)
!8166 = !DILocation(line: 661, column: 13, scope: !8007)
!8167 = !DILocation(line: 664, column: 13, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8154, file: !1800, line: 663, column: 31)
!8169 = !DILocation(line: 664, column: 17, scope: !8168)
!8170 = !DILocation(line: 664, column: 28, scope: !8168)
!8171 = !DILocation(line: 665, column: 57, scope: !8168)
!8172 = !DILocation(line: 665, column: 61, scope: !8168)
!8173 = !DILocation(line: 665, column: 46, scope: !8168)
!8174 = !DILocation(line: 665, column: 20, scope: !8168)
!8175 = !DILocation(line: 665, column: 24, scope: !8168)
!8176 = !DILocation(line: 665, column: 55, scope: !8168)
!8177 = !DILocation(line: 665, column: 13, scope: !8168)
!8178 = !DILocation(line: 663, column: 21, scope: !8179)
!8179 = !DILexicalBlockFile(scope: !8154, file: !1800, discriminator: 1)
!8180 = !DILocation(line: 669, column: 13, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !7972, file: !1800, line: 669, column: 13)
!8182 = !DILocation(line: 669, column: 17, scope: !8181)
!8183 = !DILocation(line: 669, column: 33, scope: !8181)
!8184 = !DILocation(line: 669, column: 37, scope: !8181)
!8185 = !DILocation(line: 669, column: 43, scope: !8181)
!8186 = !DILocation(line: 669, column: 48, scope: !8181)
!8187 = !DILocation(line: 669, column: 60, scope: !8181)
!8188 = !DILocation(line: 669, column: 29, scope: !8181)
!8189 = !DILocation(line: 669, column: 66, scope: !8181)
!8190 = !DILocation(line: 670, column: 13, scope: !8181)
!8191 = !DILocation(line: 670, column: 18, scope: !8181)
!8192 = !DILocation(line: 669, column: 13, scope: !8007)
!8193 = !DILocation(line: 671, column: 13, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8181, file: !1800, line: 670, column: 31)
!8195 = !DILocation(line: 671, column: 17, scope: !8194)
!8196 = !DILocation(line: 671, column: 28, scope: !8194)
!8197 = !DILocation(line: 672, column: 57, scope: !8194)
!8198 = !DILocation(line: 672, column: 61, scope: !8194)
!8199 = !DILocation(line: 672, column: 46, scope: !8194)
!8200 = !DILocation(line: 672, column: 20, scope: !8194)
!8201 = !DILocation(line: 672, column: 24, scope: !8194)
!8202 = !DILocation(line: 672, column: 55, scope: !8194)
!8203 = !DILocation(line: 672, column: 13, scope: !8194)
!8204 = !DILocation(line: 673, column: 20, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8181, file: !1800, line: 673, column: 20)
!8206 = !DILocation(line: 673, column: 24, scope: !8205)
!8207 = !DILocation(line: 673, column: 30, scope: !8205)
!8208 = !DILocation(line: 673, column: 35, scope: !8205)
!8209 = !DILocation(line: 673, column: 47, scope: !8205)
!8210 = !DILocation(line: 673, column: 20, scope: !8181)
!8211 = !DILocation(line: 674, column: 13, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8205, file: !1800, line: 673, column: 53)
!8213 = !DILocation(line: 670, column: 21, scope: !8214)
!8214 = !DILexicalBlockFile(scope: !8181, file: !1800, discriminator: 1)
!8215 = !DILocation(line: 677, column: 14, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !7972, file: !1800, line: 677, column: 13)
!8217 = !DILocation(line: 677, column: 18, scope: !8216)
!8218 = !DILocation(line: 677, column: 30, scope: !8216)
!8219 = !DILocation(line: 677, column: 33, scope: !8220)
!8220 = !DILexicalBlockFile(scope: !8216, file: !1800, discriminator: 1)
!8221 = !DILocation(line: 677, column: 38, scope: !8220)
!8222 = !DILocation(line: 677, column: 13, scope: !8220)
!8223 = !DILocation(line: 678, column: 13, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8216, file: !1800, line: 677, column: 51)
!8225 = !DILocation(line: 678, column: 17, scope: !8224)
!8226 = !DILocation(line: 678, column: 28, scope: !8224)
!8227 = !DILocation(line: 679, column: 57, scope: !8224)
!8228 = !DILocation(line: 679, column: 61, scope: !8224)
!8229 = !DILocation(line: 679, column: 46, scope: !8224)
!8230 = !DILocation(line: 679, column: 20, scope: !8224)
!8231 = !DILocation(line: 679, column: 24, scope: !8224)
!8232 = !DILocation(line: 679, column: 55, scope: !8224)
!8233 = !DILocation(line: 679, column: 13, scope: !8224)
!8234 = !DILocation(line: 677, column: 41, scope: !8235)
!8235 = !DILexicalBlockFile(scope: !8216, file: !1800, discriminator: 2)
!8236 = !DILocation(line: 682, column: 9, scope: !7972)
!8237 = !DILocation(line: 684, column: 1, scope: !7835)
!8238 = distinct !DISubprogram(name: "decode_ics", scope: !1800, file: !1800, line: 2006, type: !8239, isLocal: true, isDefinition: true, scopeLine: 2008, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!8239 = !DISubroutineType(types: !8240)
!8240 = !{!1012, !2071, !1906, !2041, !1012, !1012}
!8241 = !DILocalVariable(name: "ac", arg: 1, scope: !8238, file: !1800, line: 2006, type: !2071)
!8242 = !DILocation(line: 2006, column: 35, scope: !8238)
!8243 = !DILocalVariable(name: "sce", arg: 2, scope: !8238, file: !1800, line: 2006, type: !1906)
!8244 = !DILocation(line: 2006, column: 61, scope: !8238)
!8245 = !DILocalVariable(name: "gb", arg: 3, scope: !8238, file: !1800, line: 2007, type: !2041)
!8246 = !DILocation(line: 2007, column: 38, scope: !8238)
!8247 = !DILocalVariable(name: "common_window", arg: 4, scope: !8238, file: !1800, line: 2007, type: !1012)
!8248 = !DILocation(line: 2007, column: 46, scope: !8238)
!8249 = !DILocalVariable(name: "scale_flag", arg: 5, scope: !8238, file: !1800, line: 2007, type: !1012)
!8250 = !DILocation(line: 2007, column: 65, scope: !8238)
!8251 = !DILocalVariable(name: "pulse", scope: !8238, file: !1800, line: 2009, type: !1972)
!8252 = !DILocation(line: 2009, column: 11, scope: !8238)
!8253 = !DILocalVariable(name: "tns", scope: !8238, file: !1800, line: 2010, type: !2615)
!8254 = !DILocation(line: 2010, column: 27, scope: !8238)
!8255 = !DILocation(line: 2010, column: 34, scope: !8238)
!8256 = !DILocation(line: 2010, column: 39, scope: !8238)
!8257 = !DILocalVariable(name: "ics", scope: !8238, file: !1800, line: 2011, type: !2616)
!8258 = !DILocation(line: 2011, column: 30, scope: !8238)
!8259 = !DILocation(line: 2011, column: 37, scope: !8238)
!8260 = !DILocation(line: 2011, column: 42, scope: !8238)
!8261 = !DILocalVariable(name: "out", scope: !8238, file: !1800, line: 2012, type: !1032)
!8262 = !DILocation(line: 2012, column: 15, scope: !8238)
!8263 = !DILocation(line: 2012, column: 21, scope: !8238)
!8264 = !DILocation(line: 2012, column: 26, scope: !8238)
!8265 = !DILocalVariable(name: "global_gain", scope: !8238, file: !1800, line: 2013, type: !1012)
!8266 = !DILocation(line: 2013, column: 9, scope: !8238)
!8267 = !DILocalVariable(name: "eld_syntax", scope: !8238, file: !1800, line: 2013, type: !1012)
!8268 = !DILocation(line: 2013, column: 22, scope: !8238)
!8269 = !DILocalVariable(name: "er_syntax", scope: !8238, file: !1800, line: 2013, type: !1012)
!8270 = !DILocation(line: 2013, column: 34, scope: !8238)
!8271 = !DILocalVariable(name: "pulse_present", scope: !8238, file: !1800, line: 2013, type: !1012)
!8272 = !DILocation(line: 2013, column: 45, scope: !8238)
!8273 = !DILocalVariable(name: "ret", scope: !8238, file: !1800, line: 2014, type: !1012)
!8274 = !DILocation(line: 2014, column: 9, scope: !8238)
!8275 = !DILocation(line: 2016, column: 18, scope: !8238)
!8276 = !DILocation(line: 2016, column: 22, scope: !8238)
!8277 = !DILocation(line: 2016, column: 28, scope: !8238)
!8278 = !DILocation(line: 2016, column: 33, scope: !8238)
!8279 = !DILocation(line: 2016, column: 45, scope: !8238)
!8280 = !DILocation(line: 2016, column: 16, scope: !8238)
!8281 = !DILocation(line: 2017, column: 17, scope: !8238)
!8282 = !DILocation(line: 2017, column: 21, scope: !8238)
!8283 = !DILocation(line: 2017, column: 27, scope: !8238)
!8284 = !DILocation(line: 2017, column: 32, scope: !8238)
!8285 = !DILocation(line: 2017, column: 44, scope: !8238)
!8286 = !DILocation(line: 2017, column: 61, scope: !8238)
!8287 = !DILocation(line: 2018, column: 18, scope: !8238)
!8288 = !DILocation(line: 2018, column: 22, scope: !8238)
!8289 = !DILocation(line: 2018, column: 28, scope: !8238)
!8290 = !DILocation(line: 2018, column: 33, scope: !8238)
!8291 = !DILocation(line: 2018, column: 45, scope: !8238)
!8292 = !DILocation(line: 2018, column: 63, scope: !8238)
!8293 = !DILocation(line: 2019, column: 18, scope: !8238)
!8294 = !DILocation(line: 2019, column: 22, scope: !8238)
!8295 = !DILocation(line: 2019, column: 28, scope: !8238)
!8296 = !DILocation(line: 2019, column: 33, scope: !8238)
!8297 = !DILocation(line: 2019, column: 45, scope: !8238)
!8298 = !DILocation(line: 2019, column: 62, scope: !8238)
!8299 = !DILocation(line: 2020, column: 18, scope: !8238)
!8300 = !DILocation(line: 2020, column: 22, scope: !8238)
!8301 = !DILocation(line: 2020, column: 28, scope: !8238)
!8302 = !DILocation(line: 2020, column: 33, scope: !8238)
!8303 = !DILocation(line: 2020, column: 45, scope: !8238)
!8304 = !DILocation(line: 2019, column: 62, scope: !8305)
!8305 = !DILexicalBlockFile(scope: !8238, file: !1800, discriminator: 1)
!8306 = !DILocation(line: 2019, column: 62, scope: !8307)
!8307 = !DILexicalBlockFile(scope: !8238, file: !1800, discriminator: 2)
!8308 = !DILocation(line: 2017, column: 15, scope: !8305)
!8309 = !DILocation(line: 2025, column: 11, scope: !8238)
!8310 = !DILocation(line: 2025, column: 21, scope: !8238)
!8311 = !DILocation(line: 2027, column: 28, scope: !8238)
!8312 = !DILocation(line: 2027, column: 19, scope: !8238)
!8313 = !DILocation(line: 2027, column: 17, scope: !8238)
!8314 = !DILocation(line: 2029, column: 10, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8238, file: !1800, line: 2029, column: 9)
!8316 = !DILocation(line: 2029, column: 24, scope: !8315)
!8317 = !DILocation(line: 2029, column: 28, scope: !8318)
!8318 = !DILexicalBlockFile(scope: !8315, file: !1800, discriminator: 1)
!8319 = !DILocation(line: 2029, column: 9, scope: !8318)
!8320 = !DILocation(line: 2030, column: 31, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8315, file: !1800, line: 2029, column: 40)
!8322 = !DILocation(line: 2030, column: 35, scope: !8321)
!8323 = !DILocation(line: 2030, column: 40, scope: !8321)
!8324 = !DILocation(line: 2030, column: 15, scope: !8321)
!8325 = !DILocation(line: 2030, column: 13, scope: !8321)
!8326 = !DILocation(line: 2031, column: 13, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8321, file: !1800, line: 2031, column: 13)
!8328 = !DILocation(line: 2031, column: 17, scope: !8327)
!8329 = !DILocation(line: 2031, column: 13, scope: !8321)
!8330 = !DILocation(line: 2032, column: 13, scope: !8327)
!8331 = !DILocation(line: 2033, column: 5, scope: !8321)
!8332 = !DILocation(line: 2035, column: 34, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8238, file: !1800, line: 2035, column: 9)
!8334 = !DILocation(line: 2035, column: 38, scope: !8333)
!8335 = !DILocation(line: 2035, column: 43, scope: !8333)
!8336 = !DILocation(line: 2036, column: 34, scope: !8333)
!8337 = !DILocation(line: 2036, column: 39, scope: !8333)
!8338 = !DILocation(line: 2036, column: 58, scope: !8333)
!8339 = !DILocation(line: 2036, column: 62, scope: !8333)
!8340 = !DILocation(line: 2035, column: 16, scope: !8333)
!8341 = !DILocation(line: 2035, column: 14, scope: !8333)
!8342 = !DILocation(line: 2036, column: 68, scope: !8333)
!8343 = !DILocation(line: 2035, column: 9, scope: !8238)
!8344 = !DILocation(line: 2037, column: 9, scope: !8333)
!8345 = !DILocation(line: 2038, column: 36, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8238, file: !1800, line: 2038, column: 9)
!8347 = !DILocation(line: 2038, column: 40, scope: !8346)
!8348 = !DILocation(line: 2038, column: 45, scope: !8346)
!8349 = !DILocation(line: 2038, column: 49, scope: !8346)
!8350 = !DILocation(line: 2038, column: 53, scope: !8346)
!8351 = !DILocation(line: 2038, column: 66, scope: !8346)
!8352 = !DILocation(line: 2039, column: 35, scope: !8346)
!8353 = !DILocation(line: 2039, column: 40, scope: !8346)
!8354 = !DILocation(line: 2039, column: 51, scope: !8346)
!8355 = !DILocation(line: 2039, column: 56, scope: !8346)
!8356 = !DILocation(line: 2038, column: 16, scope: !8346)
!8357 = !DILocation(line: 2038, column: 14, scope: !8346)
!8358 = !DILocation(line: 2039, column: 76, scope: !8346)
!8359 = !DILocation(line: 2038, column: 9, scope: !8238)
!8360 = !DILocation(line: 2040, column: 9, scope: !8346)
!8361 = !DILocation(line: 2042, column: 19, scope: !8238)
!8362 = !DILocation(line: 2043, column: 10, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8238, file: !1800, line: 2043, column: 9)
!8364 = !DILocation(line: 2043, column: 9, scope: !8238)
!8365 = !DILocation(line: 2044, column: 14, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !1800, line: 2044, column: 13)
!8367 = distinct !DILexicalBlock(scope: !8363, file: !1800, line: 2043, column: 22)
!8368 = !DILocation(line: 2044, column: 25, scope: !8366)
!8369 = !DILocation(line: 2044, column: 55, scope: !8370)
!8370 = !DILexicalBlockFile(scope: !8366, file: !1800, discriminator: 1)
!8371 = !DILocation(line: 2044, column: 45, scope: !8370)
!8372 = !DILocation(line: 2044, column: 43, scope: !8370)
!8373 = !DILocation(line: 2044, column: 13, scope: !8370)
!8374 = !DILocation(line: 2045, column: 17, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8376, file: !1800, line: 2045, column: 17)
!8376 = distinct !DILexicalBlock(scope: !8366, file: !1800, line: 2044, column: 61)
!8377 = !DILocation(line: 2045, column: 22, scope: !8375)
!8378 = !DILocation(line: 2045, column: 41, scope: !8375)
!8379 = !DILocation(line: 2045, column: 17, scope: !8376)
!8380 = !DILocation(line: 2046, column: 24, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8375, file: !1800, line: 2045, column: 66)
!8382 = !DILocation(line: 2046, column: 28, scope: !8381)
!8383 = !DILocation(line: 2046, column: 17, scope: !8381)
!8384 = !DILocation(line: 2048, column: 21, scope: !8381)
!8385 = !DILocation(line: 2049, column: 17, scope: !8381)
!8386 = !DILocation(line: 2051, column: 39, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8376, file: !1800, line: 2051, column: 17)
!8388 = !DILocation(line: 2051, column: 43, scope: !8387)
!8389 = !DILocation(line: 2051, column: 48, scope: !8387)
!8390 = !DILocation(line: 2051, column: 60, scope: !8387)
!8391 = !DILocation(line: 2051, column: 65, scope: !8387)
!8392 = !DILocation(line: 2051, column: 17, scope: !8387)
!8393 = !DILocation(line: 2051, column: 17, scope: !8376)
!8394 = !DILocation(line: 2052, column: 24, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8387, file: !1800, line: 2051, column: 75)
!8396 = !DILocation(line: 2052, column: 28, scope: !8395)
!8397 = !DILocation(line: 2052, column: 17, scope: !8395)
!8398 = !DILocation(line: 2054, column: 21, scope: !8395)
!8399 = !DILocation(line: 2055, column: 17, scope: !8395)
!8400 = !DILocation(line: 2057, column: 9, scope: !8376)
!8401 = !DILocation(line: 2058, column: 34, scope: !8367)
!8402 = !DILocation(line: 2058, column: 24, scope: !8367)
!8403 = !DILocation(line: 2058, column: 9, scope: !8367)
!8404 = !DILocation(line: 2058, column: 14, scope: !8367)
!8405 = !DILocation(line: 2058, column: 22, scope: !8367)
!8406 = !DILocation(line: 2059, column: 13, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8367, file: !1800, line: 2059, column: 13)
!8408 = !DILocation(line: 2059, column: 18, scope: !8407)
!8409 = !DILocation(line: 2059, column: 26, scope: !8407)
!8410 = !DILocation(line: 2059, column: 30, scope: !8411)
!8411 = !DILexicalBlockFile(scope: !8407, file: !1800, discriminator: 1)
!8412 = !DILocation(line: 2059, column: 13, scope: !8411)
!8413 = !DILocation(line: 2060, column: 30, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8407, file: !1800, line: 2059, column: 41)
!8415 = !DILocation(line: 2060, column: 34, scope: !8414)
!8416 = !DILocation(line: 2060, column: 39, scope: !8414)
!8417 = !DILocation(line: 2060, column: 43, scope: !8414)
!8418 = !DILocation(line: 2060, column: 19, scope: !8414)
!8419 = !DILocation(line: 2060, column: 17, scope: !8414)
!8420 = !DILocation(line: 2061, column: 17, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8414, file: !1800, line: 2061, column: 17)
!8422 = !DILocation(line: 2061, column: 21, scope: !8421)
!8423 = !DILocation(line: 2061, column: 17, scope: !8414)
!8424 = !DILocation(line: 2062, column: 17, scope: !8421)
!8425 = !DILocation(line: 2063, column: 9, scope: !8414)
!8426 = !DILocation(line: 2064, column: 14, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8367, file: !1800, line: 2064, column: 13)
!8428 = !DILocation(line: 2064, column: 25, scope: !8427)
!8429 = !DILocation(line: 2064, column: 38, scope: !8430)
!8430 = !DILexicalBlockFile(scope: !8427, file: !1800, discriminator: 1)
!8431 = !DILocation(line: 2064, column: 28, scope: !8430)
!8432 = !DILocation(line: 2064, column: 13, scope: !8430)
!8433 = !DILocation(line: 2065, column: 33, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8427, file: !1800, line: 2064, column: 43)
!8435 = !DILocation(line: 2065, column: 38, scope: !8434)
!8436 = !DILocation(line: 2065, column: 13, scope: !8434)
!8437 = !DILocation(line: 2066, column: 18, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8434, file: !1800, line: 2066, column: 17)
!8439 = !DILocation(line: 2066, column: 22, scope: !8438)
!8440 = !DILocation(line: 2066, column: 17, scope: !8434)
!8441 = !DILocation(line: 2067, column: 47, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8438, file: !1800, line: 2066, column: 43)
!8443 = !DILocation(line: 2067, column: 51, scope: !8442)
!8444 = !DILocation(line: 2067, column: 17, scope: !8442)
!8445 = !DILocation(line: 2068, column: 17, scope: !8442)
!8446 = !DILocation(line: 2068, column: 21, scope: !8442)
!8447 = !DILocation(line: 2068, column: 41, scope: !8442)
!8448 = !DILocation(line: 2069, column: 13, scope: !8442)
!8449 = !DILocation(line: 2070, column: 9, scope: !8434)
!8450 = !DILocation(line: 2073, column: 13, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8367, file: !1800, line: 2073, column: 13)
!8452 = !DILocation(line: 2073, column: 18, scope: !8451)
!8453 = !DILocation(line: 2073, column: 26, scope: !8451)
!8454 = !DILocation(line: 2073, column: 29, scope: !8455)
!8455 = !DILexicalBlockFile(scope: !8451, file: !1800, discriminator: 1)
!8456 = !DILocation(line: 2073, column: 13, scope: !8455)
!8457 = !DILocation(line: 2074, column: 30, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8451, file: !1800, line: 2073, column: 40)
!8459 = !DILocation(line: 2074, column: 34, scope: !8458)
!8460 = !DILocation(line: 2074, column: 39, scope: !8458)
!8461 = !DILocation(line: 2074, column: 43, scope: !8458)
!8462 = !DILocation(line: 2074, column: 19, scope: !8458)
!8463 = !DILocation(line: 2074, column: 17, scope: !8458)
!8464 = !DILocation(line: 2075, column: 17, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8458, file: !1800, line: 2075, column: 17)
!8466 = !DILocation(line: 2075, column: 21, scope: !8465)
!8467 = !DILocation(line: 2075, column: 17, scope: !8458)
!8468 = !DILocation(line: 2076, column: 17, scope: !8465)
!8469 = !DILocation(line: 2077, column: 9, scope: !8458)
!8470 = !DILocation(line: 2078, column: 5, scope: !8367)
!8471 = !DILocation(line: 2080, column: 39, scope: !8238)
!8472 = !DILocation(line: 2080, column: 43, scope: !8238)
!8473 = !DILocation(line: 2080, column: 48, scope: !8238)
!8474 = !DILocation(line: 2080, column: 52, scope: !8238)
!8475 = !DILocation(line: 2080, column: 57, scope: !8238)
!8476 = !DILocation(line: 2080, column: 61, scope: !8238)
!8477 = !DILocation(line: 2081, column: 45, scope: !8238)
!8478 = !DILocation(line: 2081, column: 50, scope: !8238)
!8479 = !DILocation(line: 2081, column: 55, scope: !8238)
!8480 = !DILocation(line: 2080, column: 11, scope: !8238)
!8481 = !DILocation(line: 2080, column: 9, scope: !8238)
!8482 = !DILocation(line: 2082, column: 9, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8238, file: !1800, line: 2082, column: 9)
!8484 = !DILocation(line: 2082, column: 13, scope: !8483)
!8485 = !DILocation(line: 2082, column: 9, scope: !8238)
!8486 = !DILocation(line: 2083, column: 9, scope: !8483)
!8487 = !DILocation(line: 2085, column: 9, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8238, file: !1800, line: 2085, column: 9)
!8489 = !DILocation(line: 2085, column: 13, scope: !8488)
!8490 = !DILocation(line: 2085, column: 19, scope: !8488)
!8491 = !DILocation(line: 2085, column: 24, scope: !8488)
!8492 = !DILocation(line: 2085, column: 36, scope: !8488)
!8493 = !DILocation(line: 2085, column: 52, scope: !8488)
!8494 = !DILocation(line: 2085, column: 56, scope: !8495)
!8495 = !DILexicalBlockFile(scope: !8488, file: !1800, discriminator: 1)
!8496 = !DILocation(line: 2085, column: 9, scope: !8495)
!8497 = !DILocation(line: 2086, column: 26, scope: !8488)
!8498 = !DILocation(line: 2086, column: 30, scope: !8488)
!8499 = !DILocation(line: 2086, column: 9, scope: !8488)
!8500 = !DILocation(line: 2088, column: 5, scope: !8238)
!8501 = !DILocation(line: 2090, column: 5, scope: !8238)
!8502 = !DILocation(line: 2090, column: 10, scope: !8238)
!8503 = !DILocation(line: 2090, column: 18, scope: !8238)
!8504 = !DILocation(line: 2091, column: 12, scope: !8238)
!8505 = !DILocation(line: 2091, column: 5, scope: !8238)
!8506 = !DILocation(line: 2092, column: 1, scope: !8238)
!8507 = distinct !DISubprogram(name: "decode_cpe", scope: !1800, file: !1800, line: 2185, type: !8508, isLocal: true, isDefinition: true, scopeLine: 2186, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!8508 = !DISubroutineType(types: !8509)
!8509 = !{!1012, !2071, !2041, !2101}
!8510 = !DILocalVariable(name: "ac", arg: 1, scope: !8507, file: !1800, line: 2185, type: !2071)
!8511 = !DILocation(line: 2185, column: 35, scope: !8507)
!8512 = !DILocalVariable(name: "gb", arg: 2, scope: !8507, file: !1800, line: 2185, type: !2041)
!8513 = !DILocation(line: 2185, column: 54, scope: !8507)
!8514 = !DILocalVariable(name: "cpe", arg: 3, scope: !8507, file: !1800, line: 2185, type: !2101)
!8515 = !DILocation(line: 2185, column: 74, scope: !8507)
!8516 = !DILocalVariable(name: "i", scope: !8507, file: !1800, line: 2187, type: !1012)
!8517 = !DILocation(line: 2187, column: 9, scope: !8507)
!8518 = !DILocalVariable(name: "ret", scope: !8507, file: !1800, line: 2187, type: !1012)
!8519 = !DILocation(line: 2187, column: 12, scope: !8507)
!8520 = !DILocalVariable(name: "common_window", scope: !8507, file: !1800, line: 2187, type: !1012)
!8521 = !DILocation(line: 2187, column: 17, scope: !8507)
!8522 = !DILocalVariable(name: "ms_present", scope: !8507, file: !1800, line: 2187, type: !1012)
!8523 = !DILocation(line: 2187, column: 32, scope: !8507)
!8524 = !DILocalVariable(name: "eld_syntax", scope: !8507, file: !1800, line: 2188, type: !1012)
!8525 = !DILocation(line: 2188, column: 9, scope: !8507)
!8526 = !DILocation(line: 2188, column: 22, scope: !8507)
!8527 = !DILocation(line: 2188, column: 26, scope: !8507)
!8528 = !DILocation(line: 2188, column: 32, scope: !8507)
!8529 = !DILocation(line: 2188, column: 37, scope: !8507)
!8530 = !DILocation(line: 2188, column: 49, scope: !8507)
!8531 = !DILocation(line: 2190, column: 21, scope: !8507)
!8532 = !DILocation(line: 2190, column: 32, scope: !8507)
!8533 = !DILocation(line: 2190, column: 45, scope: !8534)
!8534 = !DILexicalBlockFile(scope: !8507, file: !1800, discriminator: 1)
!8535 = !DILocation(line: 2190, column: 35, scope: !8534)
!8536 = !DILocation(line: 2190, column: 32, scope: !8534)
!8537 = !DILocation(line: 2190, column: 32, scope: !8538)
!8538 = !DILexicalBlockFile(scope: !8507, file: !1800, discriminator: 2)
!8539 = !DILocation(line: 2190, column: 19, scope: !8538)
!8540 = !DILocation(line: 2191, column: 9, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8507, file: !1800, line: 2191, column: 9)
!8542 = !DILocation(line: 2191, column: 9, scope: !8507)
!8543 = !DILocation(line: 2192, column: 29, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8545, file: !1800, line: 2192, column: 13)
!8545 = distinct !DILexicalBlock(scope: !8541, file: !1800, line: 2191, column: 24)
!8546 = !DILocation(line: 2192, column: 34, scope: !8544)
!8547 = !DILocation(line: 2192, column: 39, scope: !8544)
!8548 = !DILocation(line: 2192, column: 45, scope: !8544)
!8549 = !DILocation(line: 2192, column: 50, scope: !8544)
!8550 = !DILocation(line: 2192, column: 13, scope: !8544)
!8551 = !DILocation(line: 2192, column: 13, scope: !8545)
!8552 = !DILocation(line: 2193, column: 13, scope: !8544)
!8553 = !DILocation(line: 2194, column: 13, scope: !8545)
!8554 = !DILocation(line: 2194, column: 18, scope: !8545)
!8555 = !DILocation(line: 2194, column: 24, scope: !8545)
!8556 = !DILocation(line: 2194, column: 28, scope: !8545)
!8557 = !DILocation(line: 2194, column: 11, scope: !8545)
!8558 = !DILocation(line: 2195, column: 9, scope: !8545)
!8559 = !DILocation(line: 2195, column: 14, scope: !8545)
!8560 = !DILocation(line: 2195, column: 20, scope: !8545)
!8561 = !DILocation(line: 2195, column: 26, scope: !8545)
!8562 = !DILocation(line: 2195, column: 31, scope: !8545)
!8563 = !DILocation(line: 2195, column: 37, scope: !8545)
!8564 = !DILocation(line: 2196, column: 43, scope: !8545)
!8565 = !DILocation(line: 2196, column: 9, scope: !8545)
!8566 = !DILocation(line: 2196, column: 14, scope: !8545)
!8567 = !DILocation(line: 2196, column: 20, scope: !8545)
!8568 = !DILocation(line: 2196, column: 24, scope: !8545)
!8569 = !DILocation(line: 2196, column: 41, scope: !8545)
!8570 = !DILocation(line: 2197, column: 13, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8545, file: !1800, line: 2197, column: 13)
!8572 = !DILocation(line: 2197, column: 18, scope: !8571)
!8573 = !DILocation(line: 2197, column: 24, scope: !8571)
!8574 = !DILocation(line: 2197, column: 28, scope: !8571)
!8575 = !DILocation(line: 2197, column: 46, scope: !8571)
!8576 = !DILocation(line: 2198, column: 14, scope: !8571)
!8577 = !DILocation(line: 2198, column: 18, scope: !8571)
!8578 = !DILocation(line: 2198, column: 24, scope: !8571)
!8579 = !DILocation(line: 2198, column: 29, scope: !8571)
!8580 = !DILocation(line: 2198, column: 41, scope: !8571)
!8581 = !DILocation(line: 2197, column: 13, scope: !8582)
!8582 = !DILexicalBlockFile(scope: !8545, file: !1800, discriminator: 1)
!8583 = !DILocation(line: 2199, column: 56, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8571, file: !1800, line: 2199, column: 17)
!8585 = !DILocation(line: 2199, column: 47, scope: !8584)
!8586 = !DILocation(line: 2199, column: 18, scope: !8584)
!8587 = !DILocation(line: 2199, column: 23, scope: !8584)
!8588 = !DILocation(line: 2199, column: 29, scope: !8584)
!8589 = !DILocation(line: 2199, column: 33, scope: !8584)
!8590 = !DILocation(line: 2199, column: 37, scope: !8584)
!8591 = !DILocation(line: 2199, column: 45, scope: !8584)
!8592 = !DILocation(line: 2199, column: 17, scope: !8571)
!8593 = !DILocation(line: 2200, column: 29, scope: !8584)
!8594 = !DILocation(line: 2200, column: 34, scope: !8584)
!8595 = !DILocation(line: 2200, column: 40, scope: !8584)
!8596 = !DILocation(line: 2200, column: 44, scope: !8584)
!8597 = !DILocation(line: 2200, column: 49, scope: !8584)
!8598 = !DILocation(line: 2200, column: 53, scope: !8584)
!8599 = !DILocation(line: 2200, column: 58, scope: !8584)
!8600 = !DILocation(line: 2200, column: 64, scope: !8584)
!8601 = !DILocation(line: 2200, column: 68, scope: !8584)
!8602 = !DILocation(line: 2200, column: 17, scope: !8584)
!8603 = !DILocation(line: 2199, column: 62, scope: !8604)
!8604 = !DILexicalBlockFile(scope: !8584, file: !1800, discriminator: 1)
!8605 = !DILocation(line: 2201, column: 31, scope: !8545)
!8606 = !DILocation(line: 2201, column: 22, scope: !8545)
!8607 = !DILocation(line: 2201, column: 20, scope: !8545)
!8608 = !DILocation(line: 2202, column: 13, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8545, file: !1800, line: 2202, column: 13)
!8610 = !DILocation(line: 2202, column: 24, scope: !8609)
!8611 = !DILocation(line: 2202, column: 13, scope: !8545)
!8612 = !DILocation(line: 2203, column: 20, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8609, file: !1800, line: 2202, column: 30)
!8614 = !DILocation(line: 2203, column: 24, scope: !8613)
!8615 = !DILocation(line: 2203, column: 13, scope: !8613)
!8616 = !DILocation(line: 2204, column: 13, scope: !8613)
!8617 = !DILocation(line: 2205, column: 20, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8609, file: !1800, line: 2205, column: 20)
!8619 = !DILocation(line: 2205, column: 20, scope: !8609)
!8620 = !DILocation(line: 2206, column: 36, scope: !8618)
!8621 = !DILocation(line: 2206, column: 41, scope: !8618)
!8622 = !DILocation(line: 2206, column: 45, scope: !8618)
!8623 = !DILocation(line: 2206, column: 13, scope: !8618)
!8624 = !DILocation(line: 2207, column: 5, scope: !8545)
!8625 = !DILocation(line: 2208, column: 27, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8507, file: !1800, line: 2208, column: 9)
!8627 = !DILocation(line: 2208, column: 32, scope: !8626)
!8628 = !DILocation(line: 2208, column: 37, scope: !8626)
!8629 = !DILocation(line: 2208, column: 44, scope: !8626)
!8630 = !DILocation(line: 2208, column: 48, scope: !8626)
!8631 = !DILocation(line: 2208, column: 16, scope: !8626)
!8632 = !DILocation(line: 2208, column: 14, scope: !8626)
!8633 = !DILocation(line: 2208, column: 9, scope: !8507)
!8634 = !DILocation(line: 2209, column: 16, scope: !8626)
!8635 = !DILocation(line: 2209, column: 9, scope: !8626)
!8636 = !DILocation(line: 2210, column: 27, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8507, file: !1800, line: 2210, column: 9)
!8638 = !DILocation(line: 2210, column: 32, scope: !8637)
!8639 = !DILocation(line: 2210, column: 37, scope: !8637)
!8640 = !DILocation(line: 2210, column: 44, scope: !8637)
!8641 = !DILocation(line: 2210, column: 48, scope: !8637)
!8642 = !DILocation(line: 2210, column: 16, scope: !8637)
!8643 = !DILocation(line: 2210, column: 14, scope: !8637)
!8644 = !DILocation(line: 2210, column: 9, scope: !8507)
!8645 = !DILocation(line: 2211, column: 16, scope: !8637)
!8646 = !DILocation(line: 2211, column: 9, scope: !8637)
!8647 = !DILocation(line: 2213, column: 9, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8507, file: !1800, line: 2213, column: 9)
!8649 = !DILocation(line: 2213, column: 9, scope: !8507)
!8650 = !DILocation(line: 2214, column: 13, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8652, file: !1800, line: 2214, column: 13)
!8652 = distinct !DILexicalBlock(scope: !8648, file: !1800, line: 2213, column: 24)
!8653 = !DILocation(line: 2214, column: 13, scope: !8652)
!8654 = !DILocation(line: 2215, column: 35, scope: !8651)
!8655 = !DILocation(line: 2215, column: 39, scope: !8651)
!8656 = !DILocation(line: 2215, column: 13, scope: !8651)
!8657 = !DILocation(line: 2216, column: 13, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8652, file: !1800, line: 2216, column: 13)
!8659 = !DILocation(line: 2216, column: 17, scope: !8658)
!8660 = !DILocation(line: 2216, column: 23, scope: !8658)
!8661 = !DILocation(line: 2216, column: 28, scope: !8658)
!8662 = !DILocation(line: 2216, column: 40, scope: !8658)
!8663 = !DILocation(line: 2216, column: 13, scope: !8652)
!8664 = !DILocation(line: 2217, column: 30, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8658, file: !1800, line: 2216, column: 57)
!8666 = !DILocation(line: 2217, column: 35, scope: !8665)
!8667 = !DILocation(line: 2217, column: 40, scope: !8665)
!8668 = !DILocation(line: 2217, column: 13, scope: !8665)
!8669 = !DILocation(line: 2218, column: 30, scope: !8665)
!8670 = !DILocation(line: 2218, column: 35, scope: !8665)
!8671 = !DILocation(line: 2218, column: 40, scope: !8665)
!8672 = !DILocation(line: 2218, column: 13, scope: !8665)
!8673 = !DILocation(line: 2219, column: 9, scope: !8665)
!8674 = !DILocation(line: 2220, column: 5, scope: !8652)
!8675 = !DILocation(line: 2222, column: 28, scope: !8507)
!8676 = !DILocation(line: 2222, column: 32, scope: !8507)
!8677 = !DILocation(line: 2222, column: 37, scope: !8507)
!8678 = !DILocation(line: 2222, column: 5, scope: !8507)
!8679 = !DILocation(line: 2223, column: 5, scope: !8507)
!8680 = !DILocation(line: 2224, column: 1, scope: !8507)
!8681 = distinct !DISubprogram(name: "spectral_to_sample", scope: !1800, file: !1800, line: 2909, type: !8682, isLocal: true, isDefinition: true, scopeLine: 2910, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!8682 = !DISubroutineType(types: !8683)
!8683 = !{null, !2071, !1012}
!8684 = !DILocalVariable(name: "a", arg: 1, scope: !8685, file: !5475, line: 144, type: !1014)
!8685 = distinct !DISubprogram(name: "av_clip64_c", scope: !5475, file: !5475, line: 144, type: !8686, isLocal: true, isDefinition: true, scopeLine: 145, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!8686 = !DISubroutineType(types: !8687)
!8687 = !{!1014, !1014, !1014, !1014}
!8688 = !DILocation(line: 144, column: 97, scope: !8685, inlinedAt: !8689)
!8689 = distinct !DILocation(line: 2969, column: 58, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8691, file: !1800, line: 2968, column: 28)
!8691 = distinct !DILexicalBlock(scope: !8692, file: !1800, line: 2966, column: 47)
!8692 = distinct !DILexicalBlock(scope: !8693, file: !1800, line: 2966, column: 21)
!8693 = distinct !DILexicalBlock(scope: !8694, file: !1800, line: 2966, column: 21)
!8694 = distinct !DILexicalBlock(scope: !8695, file: !1800, line: 2963, column: 17)
!8695 = distinct !DILexicalBlock(scope: !8696, file: !1800, line: 2929, column: 38)
!8696 = distinct !DILexicalBlock(scope: !8697, file: !1800, line: 2929, column: 17)
!8697 = distinct !DILexicalBlock(scope: !8698, file: !1800, line: 2927, column: 34)
!8698 = distinct !DILexicalBlock(scope: !8699, file: !1800, line: 2927, column: 9)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !1800, line: 2927, column: 9)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !1800, line: 2926, column: 39)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !1800, line: 2926, column: 5)
!8702 = distinct !DILexicalBlock(scope: !8681, file: !1800, line: 2926, column: 5)
!8703 = !DILocalVariable(name: "amin", arg: 2, scope: !8685, file: !5475, line: 144, type: !1014)
!8704 = !DILocation(line: 144, column: 108, scope: !8685, inlinedAt: !8689)
!8705 = !DILocalVariable(name: "amax", arg: 3, scope: !8685, file: !5475, line: 144, type: !1014)
!8706 = !DILocation(line: 144, column: 122, scope: !8685, inlinedAt: !8689)
!8707 = !DILocation(line: 144, column: 97, scope: !8685, inlinedAt: !8708)
!8708 = distinct !DILocation(line: 2967, column: 54, scope: !8691)
!8709 = !DILocation(line: 144, column: 108, scope: !8685, inlinedAt: !8708)
!8710 = !DILocation(line: 144, column: 122, scope: !8685, inlinedAt: !8708)
!8711 = !DILocalVariable(name: "ac", arg: 1, scope: !8681, file: !1800, line: 2909, type: !2071)
!8712 = !DILocation(line: 2909, column: 44, scope: !8681)
!8713 = !DILocalVariable(name: "samples", arg: 2, scope: !8681, file: !1800, line: 2909, type: !1012)
!8714 = !DILocation(line: 2909, column: 52, scope: !8681)
!8715 = !DILocalVariable(name: "i", scope: !8681, file: !1800, line: 2911, type: !1012)
!8716 = !DILocation(line: 2911, column: 9, scope: !8681)
!8717 = !DILocalVariable(name: "type", scope: !8681, file: !1800, line: 2911, type: !1012)
!8718 = !DILocation(line: 2911, column: 12, scope: !8681)
!8719 = !DILocalVariable(name: "imdct_and_window", scope: !8681, file: !1800, line: 2912, type: !2607)
!8720 = !DILocation(line: 2912, column: 12, scope: !8681)
!8721 = !DILocation(line: 2913, column: 13, scope: !8681)
!8722 = !DILocation(line: 2913, column: 17, scope: !8681)
!8723 = !DILocation(line: 2913, column: 23, scope: !8681)
!8724 = !DILocation(line: 2913, column: 28, scope: !8681)
!8725 = !DILocation(line: 2913, column: 5, scope: !8681)
!8726 = !DILocation(line: 2915, column: 26, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8681, file: !1800, line: 2913, column: 41)
!8728 = !DILocation(line: 2916, column: 9, scope: !8727)
!8729 = !DILocation(line: 2918, column: 26, scope: !8727)
!8730 = !DILocation(line: 2919, column: 9, scope: !8727)
!8731 = !DILocation(line: 2921, column: 13, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8727, file: !1800, line: 2921, column: 13)
!8733 = !DILocation(line: 2921, column: 17, scope: !8732)
!8734 = !DILocation(line: 2921, column: 23, scope: !8732)
!8735 = !DILocation(line: 2921, column: 28, scope: !8732)
!8736 = !DILocation(line: 2921, column: 13, scope: !8727)
!8737 = !DILocation(line: 2922, column: 30, scope: !8732)
!8738 = !DILocation(line: 2922, column: 13, scope: !8732)
!8739 = !DILocation(line: 2924, column: 32, scope: !8732)
!8740 = !DILocation(line: 2924, column: 36, scope: !8732)
!8741 = !DILocation(line: 2924, column: 30, scope: !8732)
!8742 = !DILocation(line: 2925, column: 5, scope: !8727)
!8743 = !DILocation(line: 2926, column: 15, scope: !8702)
!8744 = !DILocation(line: 2926, column: 10, scope: !8702)
!8745 = !DILocation(line: 2926, column: 20, scope: !8746)
!8746 = !DILexicalBlockFile(scope: !8701, file: !1800, discriminator: 1)
!8747 = !DILocation(line: 2926, column: 25, scope: !8746)
!8748 = !DILocation(line: 2926, column: 5, scope: !8746)
!8749 = !DILocation(line: 2927, column: 16, scope: !8699)
!8750 = !DILocation(line: 2927, column: 14, scope: !8699)
!8751 = !DILocation(line: 2927, column: 21, scope: !8752)
!8752 = !DILexicalBlockFile(scope: !8698, file: !1800, discriminator: 1)
!8753 = !DILocation(line: 2927, column: 23, scope: !8752)
!8754 = !DILocation(line: 2927, column: 9, scope: !8752)
!8755 = !DILocalVariable(name: "che", scope: !8697, file: !1800, line: 2928, type: !2101)
!8756 = !DILocation(line: 2928, column: 29, scope: !8697)
!8757 = !DILocation(line: 2928, column: 49, scope: !8697)
!8758 = !DILocation(line: 2928, column: 35, scope: !8697)
!8759 = !DILocation(line: 2928, column: 43, scope: !8697)
!8760 = !DILocation(line: 2928, column: 39, scope: !8697)
!8761 = !DILocation(line: 2929, column: 17, scope: !8696)
!8762 = !DILocation(line: 2929, column: 21, scope: !8696)
!8763 = !DILocation(line: 2929, column: 24, scope: !8764)
!8764 = !DILexicalBlockFile(scope: !8696, file: !1800, discriminator: 1)
!8765 = !DILocation(line: 2929, column: 29, scope: !8764)
!8766 = !DILocation(line: 2929, column: 17, scope: !8764)
!8767 = !DILocation(line: 2930, column: 21, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8695, file: !1800, line: 2930, column: 21)
!8769 = !DILocation(line: 2930, column: 26, scope: !8768)
!8770 = !DILocation(line: 2930, column: 21, scope: !8695)
!8771 = !DILocation(line: 2931, column: 44, scope: !8768)
!8772 = !DILocation(line: 2931, column: 48, scope: !8768)
!8773 = !DILocation(line: 2931, column: 53, scope: !8768)
!8774 = !DILocation(line: 2931, column: 59, scope: !8768)
!8775 = !DILocation(line: 2931, column: 21, scope: !8768)
!8776 = !DILocation(line: 2932, column: 21, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8695, file: !1800, line: 2932, column: 21)
!8778 = !DILocation(line: 2932, column: 25, scope: !8777)
!8779 = !DILocation(line: 2932, column: 31, scope: !8777)
!8780 = !DILocation(line: 2932, column: 36, scope: !8777)
!8781 = !DILocation(line: 2932, column: 48, scope: !8777)
!8782 = !DILocation(line: 2932, column: 21, scope: !8695)
!8783 = !DILocation(line: 2933, column: 25, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8785, file: !1800, line: 2933, column: 25)
!8785 = distinct !DILexicalBlock(scope: !8777, file: !1800, line: 2932, column: 64)
!8786 = !DILocation(line: 2933, column: 30, scope: !8784)
!8787 = !DILocation(line: 2933, column: 36, scope: !8784)
!8788 = !DILocation(line: 2933, column: 40, scope: !8784)
!8789 = !DILocation(line: 2933, column: 25, scope: !8785)
!8790 = !DILocation(line: 2934, column: 29, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8792, file: !1800, line: 2934, column: 29)
!8792 = distinct !DILexicalBlock(scope: !8784, file: !1800, line: 2933, column: 59)
!8793 = !DILocation(line: 2934, column: 34, scope: !8791)
!8794 = !DILocation(line: 2934, column: 40, scope: !8791)
!8795 = !DILocation(line: 2934, column: 44, scope: !8791)
!8796 = !DILocation(line: 2934, column: 48, scope: !8791)
!8797 = !DILocation(line: 2934, column: 29, scope: !8792)
!8798 = !DILocation(line: 2935, column: 29, scope: !8791)
!8799 = !DILocation(line: 2935, column: 33, scope: !8791)
!8800 = !DILocation(line: 2935, column: 43, scope: !8791)
!8801 = !DILocation(line: 2935, column: 48, scope: !8791)
!8802 = !DILocation(line: 2935, column: 53, scope: !8791)
!8803 = !DILocation(line: 2936, column: 29, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8792, file: !1800, line: 2936, column: 29)
!8805 = !DILocation(line: 2936, column: 34, scope: !8804)
!8806 = !DILocation(line: 2936, column: 40, scope: !8804)
!8807 = !DILocation(line: 2936, column: 44, scope: !8804)
!8808 = !DILocation(line: 2936, column: 48, scope: !8804)
!8809 = !DILocation(line: 2936, column: 56, scope: !8804)
!8810 = !DILocation(line: 2936, column: 59, scope: !8811)
!8811 = !DILexicalBlockFile(scope: !8804, file: !1800, discriminator: 1)
!8812 = !DILocation(line: 2936, column: 64, scope: !8811)
!8813 = !DILocation(line: 2936, column: 29, scope: !8811)
!8814 = !DILocation(line: 2937, column: 29, scope: !8804)
!8815 = !DILocation(line: 2937, column: 33, scope: !8804)
!8816 = !DILocation(line: 2937, column: 43, scope: !8804)
!8817 = !DILocation(line: 2937, column: 48, scope: !8804)
!8818 = !DILocation(line: 2937, column: 53, scope: !8804)
!8819 = !DILocation(line: 2938, column: 21, scope: !8792)
!8820 = !DILocation(line: 2939, column: 17, scope: !8785)
!8821 = !DILocation(line: 2940, column: 21, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8695, file: !1800, line: 2940, column: 21)
!8823 = !DILocation(line: 2940, column: 26, scope: !8822)
!8824 = !DILocation(line: 2940, column: 32, scope: !8822)
!8825 = !DILocation(line: 2940, column: 36, scope: !8822)
!8826 = !DILocation(line: 2940, column: 21, scope: !8695)
!8827 = !DILocation(line: 2941, column: 21, scope: !8822)
!8828 = !DILocation(line: 2941, column: 25, scope: !8822)
!8829 = !DILocation(line: 2941, column: 35, scope: !8822)
!8830 = !DILocation(line: 2941, column: 40, scope: !8822)
!8831 = !DILocation(line: 2941, column: 46, scope: !8822)
!8832 = !DILocation(line: 2941, column: 55, scope: !8822)
!8833 = !DILocation(line: 2941, column: 60, scope: !8822)
!8834 = !DILocation(line: 2941, column: 66, scope: !8822)
!8835 = !DILocation(line: 2941, column: 72, scope: !8822)
!8836 = !DILocation(line: 2941, column: 77, scope: !8822)
!8837 = !DILocation(line: 2941, column: 83, scope: !8822)
!8838 = !DILocation(line: 2942, column: 21, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8695, file: !1800, line: 2942, column: 21)
!8840 = !DILocation(line: 2942, column: 26, scope: !8839)
!8841 = !DILocation(line: 2942, column: 32, scope: !8839)
!8842 = !DILocation(line: 2942, column: 36, scope: !8839)
!8843 = !DILocation(line: 2942, column: 21, scope: !8695)
!8844 = !DILocation(line: 2943, column: 21, scope: !8839)
!8845 = !DILocation(line: 2943, column: 25, scope: !8839)
!8846 = !DILocation(line: 2943, column: 35, scope: !8839)
!8847 = !DILocation(line: 2943, column: 40, scope: !8839)
!8848 = !DILocation(line: 2943, column: 46, scope: !8839)
!8849 = !DILocation(line: 2943, column: 55, scope: !8839)
!8850 = !DILocation(line: 2943, column: 60, scope: !8839)
!8851 = !DILocation(line: 2943, column: 66, scope: !8839)
!8852 = !DILocation(line: 2943, column: 72, scope: !8839)
!8853 = !DILocation(line: 2943, column: 77, scope: !8839)
!8854 = !DILocation(line: 2943, column: 83, scope: !8839)
!8855 = !DILocation(line: 2944, column: 21, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8695, file: !1800, line: 2944, column: 21)
!8857 = !DILocation(line: 2944, column: 26, scope: !8856)
!8858 = !DILocation(line: 2944, column: 21, scope: !8695)
!8859 = !DILocation(line: 2945, column: 44, scope: !8856)
!8860 = !DILocation(line: 2945, column: 48, scope: !8856)
!8861 = !DILocation(line: 2945, column: 53, scope: !8856)
!8862 = !DILocation(line: 2945, column: 59, scope: !8856)
!8863 = !DILocation(line: 2945, column: 21, scope: !8856)
!8864 = !DILocation(line: 2946, column: 21, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8695, file: !1800, line: 2946, column: 21)
!8866 = !DILocation(line: 2946, column: 26, scope: !8865)
!8867 = !DILocation(line: 2946, column: 38, scope: !8865)
!8868 = !DILocation(line: 2946, column: 41, scope: !8869)
!8869 = !DILexicalBlockFile(scope: !8865, file: !1800, discriminator: 1)
!8870 = !DILocation(line: 2946, column: 46, scope: !8869)
!8871 = !DILocation(line: 2946, column: 51, scope: !8869)
!8872 = !DILocation(line: 2946, column: 66, scope: !8869)
!8873 = !DILocation(line: 2946, column: 21, scope: !8869)
!8874 = !DILocation(line: 2947, column: 21, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8865, file: !1800, line: 2946, column: 82)
!8876 = !DILocation(line: 2947, column: 38, scope: !8875)
!8877 = !DILocation(line: 2947, column: 43, scope: !8875)
!8878 = !DILocation(line: 2947, column: 48, scope: !8875)
!8879 = !DILocation(line: 2948, column: 25, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8875, file: !1800, line: 2948, column: 25)
!8881 = !DILocation(line: 2948, column: 29, scope: !8880)
!8882 = !DILocation(line: 2948, column: 35, scope: !8880)
!8883 = !DILocation(line: 2948, column: 40, scope: !8880)
!8884 = !DILocation(line: 2948, column: 52, scope: !8880)
!8885 = !DILocation(line: 2948, column: 25, scope: !8875)
!8886 = !DILocation(line: 2949, column: 25, scope: !8880)
!8887 = !DILocation(line: 2949, column: 29, scope: !8880)
!8888 = !DILocation(line: 2949, column: 40, scope: !8880)
!8889 = !DILocation(line: 2949, column: 45, scope: !8880)
!8890 = !DILocation(line: 2949, column: 50, scope: !8880)
!8891 = !DILocation(line: 2950, column: 25, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8875, file: !1800, line: 2950, column: 25)
!8893 = !DILocation(line: 2950, column: 30, scope: !8892)
!8894 = !DILocation(line: 2950, column: 25, scope: !8875)
!8895 = !DILocation(line: 2951, column: 25, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8892, file: !1800, line: 2950, column: 43)
!8897 = !DILocation(line: 2951, column: 42, scope: !8896)
!8898 = !DILocation(line: 2951, column: 47, scope: !8896)
!8899 = !DILocation(line: 2951, column: 52, scope: !8896)
!8900 = !DILocation(line: 2952, column: 29, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8896, file: !1800, line: 2952, column: 29)
!8902 = !DILocation(line: 2952, column: 33, scope: !8901)
!8903 = !DILocation(line: 2952, column: 39, scope: !8901)
!8904 = !DILocation(line: 2952, column: 44, scope: !8901)
!8905 = !DILocation(line: 2952, column: 56, scope: !8901)
!8906 = !DILocation(line: 2952, column: 29, scope: !8896)
!8907 = !DILocation(line: 2953, column: 29, scope: !8901)
!8908 = !DILocation(line: 2953, column: 33, scope: !8901)
!8909 = !DILocation(line: 2953, column: 44, scope: !8901)
!8910 = !DILocation(line: 2953, column: 49, scope: !8901)
!8911 = !DILocation(line: 2953, column: 54, scope: !8901)
!8912 = !DILocation(line: 2954, column: 21, scope: !8896)
!8913 = !DILocation(line: 2955, column: 25, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8875, file: !1800, line: 2955, column: 25)
!8915 = !DILocation(line: 2955, column: 29, scope: !8914)
!8916 = !DILocation(line: 2955, column: 35, scope: !8914)
!8917 = !DILocation(line: 2955, column: 40, scope: !8914)
!8918 = !DILocation(line: 2955, column: 44, scope: !8914)
!8919 = !DILocation(line: 2955, column: 25, scope: !8875)
!8920 = !DILocation(line: 2956, column: 44, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8914, file: !1800, line: 2955, column: 49)
!8922 = !DILocation(line: 2956, column: 49, scope: !8921)
!8923 = !DILocation(line: 2956, column: 54, scope: !8921)
!8924 = !DILocation(line: 2956, column: 59, scope: !8921)
!8925 = !DILocation(line: 2956, column: 65, scope: !8921)
!8926 = !DILocation(line: 2956, column: 70, scope: !8921)
!8927 = !DILocation(line: 2956, column: 76, scope: !8921)
!8928 = !DILocation(line: 2956, column: 81, scope: !8921)
!8929 = !DILocation(line: 2956, column: 86, scope: !8921)
!8930 = !DILocation(line: 2956, column: 92, scope: !8921)
!8931 = !DILocation(line: 2956, column: 25, scope: !8921)
!8932 = !DILocation(line: 2957, column: 21, scope: !8921)
!8933 = !DILocation(line: 2958, column: 17, scope: !8875)
!8934 = !DILocation(line: 2959, column: 21, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8695, file: !1800, line: 2959, column: 21)
!8936 = !DILocation(line: 2959, column: 26, scope: !8935)
!8937 = !DILocation(line: 2959, column: 21, scope: !8695)
!8938 = !DILocation(line: 2960, column: 44, scope: !8935)
!8939 = !DILocation(line: 2960, column: 48, scope: !8935)
!8940 = !DILocation(line: 2960, column: 53, scope: !8935)
!8941 = !DILocation(line: 2960, column: 59, scope: !8935)
!8942 = !DILocation(line: 2960, column: 21, scope: !8935)
!8943 = !DILocalVariable(name: "j", scope: !8694, file: !1800, line: 2964, type: !1012)
!8944 = !DILocation(line: 2964, column: 25, scope: !8694)
!8945 = !DILocation(line: 2966, column: 27, scope: !8693)
!8946 = !DILocation(line: 2966, column: 25, scope: !8693)
!8947 = !DILocation(line: 2966, column: 32, scope: !8948)
!8948 = !DILexicalBlockFile(scope: !8692, file: !1800, discriminator: 1)
!8949 = !DILocation(line: 2966, column: 34, scope: !8948)
!8950 = !DILocation(line: 2966, column: 33, scope: !8948)
!8951 = !DILocation(line: 2966, column: 21, scope: !8948)
!8952 = !DILocation(line: 2967, column: 90, scope: !8691)
!8953 = !DILocation(line: 2967, column: 75, scope: !8691)
!8954 = !DILocation(line: 2967, column: 80, scope: !8691)
!8955 = !DILocation(line: 2967, column: 86, scope: !8691)
!8956 = !DILocation(line: 2967, column: 66, scope: !8691)
!8957 = !DILocation(line: 2967, column: 92, scope: !8691)
!8958 = !DILocation(line: 2967, column: 54, scope: !8691)
!8959 = !DILocation(line: 149, column: 9, scope: !8960, inlinedAt: !8708)
!8960 = distinct !DILexicalBlock(scope: !8685, file: !5475, line: 149, column: 9)
!8961 = !DILocation(line: 149, column: 13, scope: !8960, inlinedAt: !8708)
!8962 = !DILocation(line: 149, column: 11, scope: !8960, inlinedAt: !8708)
!8963 = !DILocation(line: 149, column: 9, scope: !8685, inlinedAt: !8708)
!8964 = !DILocation(line: 149, column: 26, scope: !8965, inlinedAt: !8708)
!8965 = !DILexicalBlockFile(scope: !8960, file: !5475, discriminator: 1)
!8966 = !DILocation(line: 149, column: 19, scope: !8965, inlinedAt: !8708)
!8967 = !DILocation(line: 150, column: 14, scope: !8968, inlinedAt: !8708)
!8968 = distinct !DILexicalBlock(scope: !8960, file: !5475, line: 150, column: 14)
!8969 = !DILocation(line: 150, column: 18, scope: !8968, inlinedAt: !8708)
!8970 = !DILocation(line: 150, column: 16, scope: !8968, inlinedAt: !8708)
!8971 = !DILocation(line: 150, column: 14, scope: !8960, inlinedAt: !8708)
!8972 = !DILocation(line: 150, column: 31, scope: !8973, inlinedAt: !8708)
!8973 = !DILexicalBlockFile(scope: !8968, file: !5475, discriminator: 1)
!8974 = !DILocation(line: 150, column: 24, scope: !8973, inlinedAt: !8708)
!8975 = !DILocation(line: 151, column: 17, scope: !8968, inlinedAt: !8708)
!8976 = !DILocation(line: 151, column: 10, scope: !8968, inlinedAt: !8708)
!8977 = !DILocation(line: 152, column: 1, scope: !8685, inlinedAt: !8708)
!8978 = !DILocation(line: 2967, column: 45, scope: !8691)
!8979 = !DILocation(line: 2967, column: 123, scope: !8691)
!8980 = !DILocation(line: 2967, column: 40, scope: !8691)
!8981 = !DILocation(line: 2967, column: 25, scope: !8691)
!8982 = !DILocation(line: 2967, column: 30, scope: !8691)
!8983 = !DILocation(line: 2967, column: 36, scope: !8691)
!8984 = !DILocation(line: 2967, column: 43, scope: !8691)
!8985 = !DILocation(line: 2968, column: 28, scope: !8690)
!8986 = !DILocation(line: 2968, column: 33, scope: !8690)
!8987 = !DILocation(line: 2968, column: 28, scope: !8691)
!8988 = !DILocation(line: 2969, column: 94, scope: !8690)
!8989 = !DILocation(line: 2969, column: 79, scope: !8690)
!8990 = !DILocation(line: 2969, column: 84, scope: !8690)
!8991 = !DILocation(line: 2969, column: 90, scope: !8690)
!8992 = !DILocation(line: 2969, column: 70, scope: !8690)
!8993 = !DILocation(line: 2969, column: 96, scope: !8690)
!8994 = !DILocation(line: 2969, column: 58, scope: !8690)
!8995 = !DILocation(line: 149, column: 9, scope: !8960, inlinedAt: !8689)
!8996 = !DILocation(line: 149, column: 13, scope: !8960, inlinedAt: !8689)
!8997 = !DILocation(line: 149, column: 11, scope: !8960, inlinedAt: !8689)
!8998 = !DILocation(line: 149, column: 9, scope: !8685, inlinedAt: !8689)
!8999 = !DILocation(line: 149, column: 26, scope: !8965, inlinedAt: !8689)
!9000 = !DILocation(line: 149, column: 19, scope: !8965, inlinedAt: !8689)
!9001 = !DILocation(line: 150, column: 14, scope: !8968, inlinedAt: !8689)
!9002 = !DILocation(line: 150, column: 18, scope: !8968, inlinedAt: !8689)
!9003 = !DILocation(line: 150, column: 16, scope: !8968, inlinedAt: !8689)
!9004 = !DILocation(line: 150, column: 14, scope: !8960, inlinedAt: !8689)
!9005 = !DILocation(line: 150, column: 31, scope: !8973, inlinedAt: !8689)
!9006 = !DILocation(line: 150, column: 24, scope: !8973, inlinedAt: !8689)
!9007 = !DILocation(line: 151, column: 17, scope: !8968, inlinedAt: !8689)
!9008 = !DILocation(line: 151, column: 10, scope: !8968, inlinedAt: !8689)
!9009 = !DILocation(line: 152, column: 1, scope: !8685, inlinedAt: !8689)
!9010 = !DILocation(line: 2969, column: 49, scope: !8690)
!9011 = !DILocation(line: 2969, column: 127, scope: !8690)
!9012 = !DILocation(line: 2969, column: 44, scope: !8690)
!9013 = !DILocation(line: 2969, column: 29, scope: !8690)
!9014 = !DILocation(line: 2969, column: 34, scope: !8690)
!9015 = !DILocation(line: 2969, column: 40, scope: !8690)
!9016 = !DILocation(line: 2969, column: 47, scope: !8690)
!9017 = !DILocation(line: 2970, column: 21, scope: !8691)
!9018 = !DILocation(line: 2966, column: 44, scope: !9019)
!9019 = !DILexicalBlockFile(scope: !8692, file: !1800, discriminator: 2)
!9020 = !DILocation(line: 2966, column: 21, scope: !9019)
!9021 = distinct !{!9021, !9022}
!9022 = !DILocation(line: 2966, column: 21, scope: !8694)
!9023 = !DILocation(line: 2973, column: 17, scope: !8695)
!9024 = !DILocation(line: 2973, column: 22, scope: !8695)
!9025 = !DILocation(line: 2973, column: 30, scope: !8695)
!9026 = !DILocation(line: 2974, column: 13, scope: !8695)
!9027 = !DILocation(line: 2974, column: 24, scope: !9028)
!9028 = !DILexicalBlockFile(scope: !9029, file: !1800, discriminator: 1)
!9029 = distinct !DILexicalBlock(scope: !8696, file: !1800, line: 2974, column: 24)
!9030 = !DILocation(line: 2975, column: 24, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9029, file: !1800, line: 2974, column: 29)
!9032 = !DILocation(line: 2975, column: 28, scope: !9031)
!9033 = !DILocation(line: 2975, column: 74, scope: !9031)
!9034 = !DILocation(line: 2975, column: 80, scope: !9031)
!9035 = !DILocation(line: 2975, column: 17, scope: !9031)
!9036 = !DILocation(line: 2976, column: 13, scope: !9031)
!9037 = !DILocation(line: 2977, column: 9, scope: !8697)
!9038 = !DILocation(line: 2927, column: 30, scope: !9039)
!9039 = !DILexicalBlockFile(scope: !8698, file: !1800, discriminator: 2)
!9040 = !DILocation(line: 2927, column: 9, scope: !9039)
!9041 = distinct !{!9041, !9042}
!9042 = !DILocation(line: 2927, column: 9, scope: !8700)
!9043 = !DILocation(line: 2978, column: 5, scope: !8700)
!9044 = !DILocation(line: 2926, column: 35, scope: !9045)
!9045 = !DILexicalBlockFile(scope: !8701, file: !1800, discriminator: 2)
!9046 = !DILocation(line: 2926, column: 5, scope: !9045)
!9047 = distinct !{!9047, !9048}
!9048 = !DILocation(line: 2926, column: 5, scope: !8681)
!9049 = !DILocation(line: 2979, column: 1, scope: !8681)
!9050 = distinct !DISubprogram(name: "push_output_configuration", scope: !1800, file: !1800, line: 409, type: !9051, isLocal: true, isDefinition: true, scopeLine: 409, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!9051 = !DISubroutineType(types: !9052)
!9052 = !{!1012, !2071}
!9053 = !DILocalVariable(name: "ac", arg: 1, scope: !9050, file: !1800, line: 409, type: !2071)
!9054 = !DILocation(line: 409, column: 50, scope: !9050)
!9055 = !DILocalVariable(name: "pushed", scope: !9050, file: !1800, line: 410, type: !1012)
!9056 = !DILocation(line: 410, column: 9, scope: !9050)
!9057 = !DILocation(line: 412, column: 9, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9050, file: !1800, line: 412, column: 9)
!9059 = !DILocation(line: 412, column: 13, scope: !9058)
!9060 = !DILocation(line: 412, column: 19, scope: !9058)
!9061 = !DILocation(line: 412, column: 26, scope: !9058)
!9062 = !DILocation(line: 412, column: 39, scope: !9058)
!9063 = !DILocation(line: 412, column: 42, scope: !9064)
!9064 = !DILexicalBlockFile(scope: !9058, file: !1800, discriminator: 1)
!9065 = !DILocation(line: 412, column: 46, scope: !9064)
!9066 = !DILocation(line: 412, column: 52, scope: !9064)
!9067 = !DILocation(line: 412, column: 59, scope: !9064)
!9068 = !DILocation(line: 412, column: 9, scope: !9064)
!9069 = !DILocation(line: 413, column: 9, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9058, file: !1800, line: 412, column: 71)
!9071 = !DILocation(line: 413, column: 13, scope: !9070)
!9072 = !DILocation(line: 413, column: 21, scope: !9070)
!9073 = !DILocation(line: 413, column: 25, scope: !9070)
!9074 = !DILocation(line: 414, column: 16, scope: !9070)
!9075 = !DILocation(line: 415, column: 5, scope: !9070)
!9076 = !DILocation(line: 416, column: 5, scope: !9050)
!9077 = !DILocation(line: 416, column: 9, scope: !9050)
!9078 = !DILocation(line: 416, column: 15, scope: !9050)
!9079 = !DILocation(line: 416, column: 22, scope: !9050)
!9080 = !DILocation(line: 417, column: 12, scope: !9050)
!9081 = !DILocation(line: 417, column: 5, scope: !9050)
!9082 = distinct !DISubprogram(name: "decode_ics_info", scope: !1800, file: !1800, line: 1301, type: !9083, isLocal: true, isDefinition: true, scopeLine: 1303, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!9083 = !DISubroutineType(types: !9084)
!9084 = !{!1012, !2071, !2616, !2041}
!9085 = !DILocalVariable(name: "ac", arg: 1, scope: !9082, file: !1800, line: 1301, type: !2071)
!9086 = !DILocation(line: 1301, column: 40, scope: !9082)
!9087 = !DILocalVariable(name: "ics", arg: 2, scope: !9082, file: !1800, line: 1301, type: !2616)
!9088 = !DILocation(line: 1301, column: 69, scope: !9082)
!9089 = !DILocalVariable(name: "gb", arg: 3, scope: !9082, file: !1800, line: 1302, type: !2041)
!9090 = !DILocation(line: 1302, column: 43, scope: !9082)
!9091 = !DILocalVariable(name: "m4ac", scope: !9082, file: !1800, line: 1304, type: !7126)
!9092 = !DILocation(line: 1304, column: 35, scope: !9082)
!9093 = !DILocation(line: 1304, column: 43, scope: !9082)
!9094 = !DILocation(line: 1304, column: 47, scope: !9082)
!9095 = !DILocation(line: 1304, column: 53, scope: !9082)
!9096 = !DILocalVariable(name: "aot", scope: !9082, file: !1800, line: 1305, type: !1162)
!9097 = !DILocation(line: 1305, column: 15, scope: !9082)
!9098 = !DILocation(line: 1305, column: 21, scope: !9082)
!9099 = !DILocation(line: 1305, column: 27, scope: !9082)
!9100 = !DILocalVariable(name: "sampling_index", scope: !9082, file: !1800, line: 1306, type: !1162)
!9101 = !DILocation(line: 1306, column: 15, scope: !9082)
!9102 = !DILocation(line: 1306, column: 32, scope: !9082)
!9103 = !DILocation(line: 1306, column: 38, scope: !9082)
!9104 = !DILocalVariable(name: "ret_fail", scope: !9082, file: !1800, line: 1307, type: !1012)
!9105 = !DILocation(line: 1307, column: 9, scope: !9082)
!9106 = !DILocation(line: 1309, column: 9, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9082, file: !1800, line: 1309, column: 9)
!9108 = !DILocation(line: 1309, column: 13, scope: !9107)
!9109 = !DILocation(line: 1309, column: 9, scope: !9082)
!9110 = !DILocation(line: 1310, column: 23, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9112, file: !1800, line: 1310, column: 13)
!9112 = distinct !DILexicalBlock(scope: !9107, file: !1800, line: 1309, column: 32)
!9113 = !DILocation(line: 1310, column: 13, scope: !9111)
!9114 = !DILocation(line: 1310, column: 13, scope: !9112)
!9115 = !DILocation(line: 1311, column: 20, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9111, file: !1800, line: 1310, column: 28)
!9117 = !DILocation(line: 1311, column: 24, scope: !9116)
!9118 = !DILocation(line: 1311, column: 13, scope: !9116)
!9119 = !DILocation(line: 1312, column: 17, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9116, file: !1800, line: 1312, column: 17)
!9121 = !DILocation(line: 1312, column: 21, scope: !9120)
!9122 = !DILocation(line: 1312, column: 28, scope: !9120)
!9123 = !DILocation(line: 1312, column: 44, scope: !9120)
!9124 = !DILocation(line: 1312, column: 17, scope: !9116)
!9125 = !DILocation(line: 1313, column: 17, scope: !9120)
!9126 = !DILocation(line: 1314, column: 9, scope: !9116)
!9127 = !DILocation(line: 1315, column: 35, scope: !9112)
!9128 = !DILocation(line: 1315, column: 40, scope: !9112)
!9129 = !DILocation(line: 1315, column: 9, scope: !9112)
!9130 = !DILocation(line: 1315, column: 14, scope: !9112)
!9131 = !DILocation(line: 1315, column: 33, scope: !9112)
!9132 = !DILocation(line: 1316, column: 44, scope: !9112)
!9133 = !DILocation(line: 1316, column: 35, scope: !9112)
!9134 = !DILocation(line: 1316, column: 9, scope: !9112)
!9135 = !DILocation(line: 1316, column: 14, scope: !9112)
!9136 = !DILocation(line: 1316, column: 33, scope: !9112)
!9137 = !DILocation(line: 1317, column: 13, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9112, file: !1800, line: 1317, column: 13)
!9139 = !DILocation(line: 1317, column: 17, scope: !9138)
!9140 = !DILocation(line: 1317, column: 34, scope: !9138)
!9141 = !DILocation(line: 1318, column: 13, scope: !9138)
!9142 = !DILocation(line: 1318, column: 18, scope: !9138)
!9143 = !DILocation(line: 1318, column: 37, scope: !9138)
!9144 = !DILocation(line: 1317, column: 13, scope: !9145)
!9145 = !DILexicalBlockFile(scope: !9112, file: !1800, discriminator: 1)
!9146 = !DILocation(line: 1319, column: 20, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9138, file: !1800, line: 1318, column: 60)
!9148 = !DILocation(line: 1319, column: 24, scope: !9147)
!9149 = !DILocation(line: 1321, column: 51, scope: !9147)
!9150 = !DILocation(line: 1321, column: 56, scope: !9147)
!9151 = !DILocation(line: 1319, column: 13, scope: !9147)
!9152 = !DILocation(line: 1322, column: 13, scope: !9147)
!9153 = !DILocation(line: 1322, column: 18, scope: !9147)
!9154 = !DILocation(line: 1322, column: 37, scope: !9147)
!9155 = !DILocation(line: 1323, column: 13, scope: !9147)
!9156 = !DILocation(line: 1325, column: 33, scope: !9112)
!9157 = !DILocation(line: 1325, column: 38, scope: !9112)
!9158 = !DILocation(line: 1325, column: 9, scope: !9112)
!9159 = !DILocation(line: 1325, column: 14, scope: !9112)
!9160 = !DILocation(line: 1325, column: 31, scope: !9112)
!9161 = !DILocation(line: 1326, column: 43, scope: !9112)
!9162 = !DILocation(line: 1326, column: 33, scope: !9112)
!9163 = !DILocation(line: 1326, column: 9, scope: !9112)
!9164 = !DILocation(line: 1326, column: 14, scope: !9112)
!9165 = !DILocation(line: 1326, column: 31, scope: !9112)
!9166 = !DILocation(line: 1327, column: 5, scope: !9112)
!9167 = !DILocation(line: 1328, column: 5, scope: !9082)
!9168 = !DILocation(line: 1328, column: 10, scope: !9082)
!9169 = !DILocation(line: 1328, column: 28, scope: !9082)
!9170 = !DILocation(line: 1329, column: 5, scope: !9082)
!9171 = !DILocation(line: 1329, column: 10, scope: !9082)
!9172 = !DILocation(line: 1329, column: 23, scope: !9082)
!9173 = !DILocation(line: 1330, column: 9, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9082, file: !1800, line: 1330, column: 9)
!9175 = !DILocation(line: 1330, column: 14, scope: !9174)
!9176 = !DILocation(line: 1330, column: 33, scope: !9174)
!9177 = !DILocation(line: 1330, column: 9, scope: !9082)
!9178 = !DILocalVariable(name: "i", scope: !9179, file: !1800, line: 1331, type: !1012)
!9179 = distinct !DILexicalBlock(scope: !9174, file: !1800, line: 1330, column: 58)
!9180 = !DILocation(line: 1331, column: 13, scope: !9179)
!9181 = !DILocation(line: 1332, column: 33, scope: !9179)
!9182 = !DILocation(line: 1332, column: 24, scope: !9179)
!9183 = !DILocation(line: 1332, column: 9, scope: !9179)
!9184 = !DILocation(line: 1332, column: 14, scope: !9179)
!9185 = !DILocation(line: 1332, column: 22, scope: !9179)
!9186 = !DILocation(line: 1333, column: 16, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9179, file: !1800, line: 1333, column: 9)
!9188 = !DILocation(line: 1333, column: 14, scope: !9187)
!9189 = !DILocation(line: 1333, column: 21, scope: !9190)
!9190 = !DILexicalBlockFile(scope: !9191, file: !1800, discriminator: 1)
!9191 = distinct !DILexicalBlock(scope: !9187, file: !1800, line: 1333, column: 9)
!9192 = !DILocation(line: 1333, column: 23, scope: !9190)
!9193 = !DILocation(line: 1333, column: 9, scope: !9190)
!9194 = !DILocation(line: 1334, column: 27, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9196, file: !1800, line: 1334, column: 17)
!9196 = distinct !DILexicalBlock(scope: !9191, file: !1800, line: 1333, column: 33)
!9197 = !DILocation(line: 1334, column: 17, scope: !9195)
!9198 = !DILocation(line: 1334, column: 17, scope: !9196)
!9199 = !DILocation(line: 1335, column: 32, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9195, file: !1800, line: 1334, column: 32)
!9201 = !DILocation(line: 1335, column: 37, scope: !9200)
!9202 = !DILocation(line: 1335, column: 55, scope: !9200)
!9203 = !DILocation(line: 1335, column: 17, scope: !9200)
!9204 = !DILocation(line: 1335, column: 22, scope: !9200)
!9205 = !DILocation(line: 1335, column: 59, scope: !9200)
!9206 = !DILocation(line: 1336, column: 13, scope: !9200)
!9207 = !DILocation(line: 1337, column: 17, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9195, file: !1800, line: 1336, column: 20)
!9209 = !DILocation(line: 1337, column: 22, scope: !9208)
!9210 = !DILocation(line: 1337, column: 39, scope: !9208)
!9211 = !DILocation(line: 1338, column: 32, scope: !9208)
!9212 = !DILocation(line: 1338, column: 37, scope: !9208)
!9213 = !DILocation(line: 1338, column: 55, scope: !9208)
!9214 = !DILocation(line: 1338, column: 17, scope: !9208)
!9215 = !DILocation(line: 1338, column: 22, scope: !9208)
!9216 = !DILocation(line: 1338, column: 60, scope: !9208)
!9217 = !DILocation(line: 1340, column: 9, scope: !9196)
!9218 = !DILocation(line: 1333, column: 29, scope: !9219)
!9219 = !DILexicalBlockFile(scope: !9191, file: !1800, discriminator: 2)
!9220 = !DILocation(line: 1333, column: 9, scope: !9219)
!9221 = distinct !{!9221, !9222}
!9222 = !DILocation(line: 1333, column: 9, scope: !9179)
!9223 = !DILocation(line: 1341, column: 9, scope: !9179)
!9224 = !DILocation(line: 1341, column: 14, scope: !9179)
!9225 = !DILocation(line: 1341, column: 26, scope: !9179)
!9226 = !DILocation(line: 1342, column: 13, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9179, file: !1800, line: 1342, column: 13)
!9228 = !DILocation(line: 1342, column: 19, scope: !9227)
!9229 = !DILocation(line: 1342, column: 13, scope: !9179)
!9230 = !DILocation(line: 1343, column: 49, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9227, file: !1800, line: 1342, column: 39)
!9232 = !DILocation(line: 1343, column: 31, scope: !9231)
!9233 = !DILocation(line: 1343, column: 13, scope: !9231)
!9234 = !DILocation(line: 1343, column: 18, scope: !9231)
!9235 = !DILocation(line: 1343, column: 29, scope: !9231)
!9236 = !DILocation(line: 1344, column: 47, scope: !9231)
!9237 = !DILocation(line: 1344, column: 28, scope: !9231)
!9238 = !DILocation(line: 1344, column: 13, scope: !9231)
!9239 = !DILocation(line: 1344, column: 18, scope: !9231)
!9240 = !DILocation(line: 1344, column: 26, scope: !9231)
!9241 = !DILocation(line: 1345, column: 9, scope: !9231)
!9242 = !DILocation(line: 1346, column: 49, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9227, file: !1800, line: 1345, column: 16)
!9244 = !DILocation(line: 1346, column: 31, scope: !9243)
!9245 = !DILocation(line: 1346, column: 13, scope: !9243)
!9246 = !DILocation(line: 1346, column: 18, scope: !9243)
!9247 = !DILocation(line: 1346, column: 29, scope: !9243)
!9248 = !DILocation(line: 1347, column: 47, scope: !9243)
!9249 = !DILocation(line: 1347, column: 28, scope: !9243)
!9250 = !DILocation(line: 1347, column: 13, scope: !9243)
!9251 = !DILocation(line: 1347, column: 18, scope: !9243)
!9252 = !DILocation(line: 1347, column: 26, scope: !9243)
!9253 = !DILocation(line: 1349, column: 51, scope: !9179)
!9254 = !DILocation(line: 1349, column: 30, scope: !9179)
!9255 = !DILocation(line: 1349, column: 9, scope: !9179)
!9256 = !DILocation(line: 1349, column: 14, scope: !9179)
!9257 = !DILocation(line: 1349, column: 28, scope: !9179)
!9258 = !DILocation(line: 1350, column: 9, scope: !9179)
!9259 = !DILocation(line: 1350, column: 14, scope: !9179)
!9260 = !DILocation(line: 1350, column: 32, scope: !9179)
!9261 = !DILocation(line: 1351, column: 5, scope: !9179)
!9262 = !DILocation(line: 1352, column: 33, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9174, file: !1800, line: 1351, column: 12)
!9264 = !DILocation(line: 1352, column: 24, scope: !9263)
!9265 = !DILocation(line: 1352, column: 9, scope: !9263)
!9266 = !DILocation(line: 1352, column: 14, scope: !9263)
!9267 = !DILocation(line: 1352, column: 22, scope: !9263)
!9268 = !DILocation(line: 1353, column: 9, scope: !9263)
!9269 = !DILocation(line: 1353, column: 14, scope: !9263)
!9270 = !DILocation(line: 1353, column: 26, scope: !9263)
!9271 = !DILocation(line: 1354, column: 13, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9263, file: !1800, line: 1354, column: 13)
!9273 = !DILocation(line: 1354, column: 17, scope: !9272)
!9274 = !DILocation(line: 1354, column: 34, scope: !9272)
!9275 = !DILocation(line: 1354, column: 37, scope: !9276)
!9276 = !DILexicalBlockFile(scope: !9272, file: !1800, discriminator: 1)
!9277 = !DILocation(line: 1354, column: 41, scope: !9276)
!9278 = !DILocation(line: 1354, column: 13, scope: !9276)
!9279 = !DILocation(line: 1355, column: 17, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9281, file: !1800, line: 1355, column: 17)
!9281 = distinct !DILexicalBlock(scope: !9272, file: !1800, line: 1354, column: 60)
!9282 = !DILocation(line: 1355, column: 23, scope: !9280)
!9283 = !DILocation(line: 1355, column: 17, scope: !9281)
!9284 = !DILocation(line: 1356, column: 53, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9280, file: !1800, line: 1355, column: 43)
!9286 = !DILocation(line: 1356, column: 35, scope: !9285)
!9287 = !DILocation(line: 1356, column: 17, scope: !9285)
!9288 = !DILocation(line: 1356, column: 22, scope: !9285)
!9289 = !DILocation(line: 1356, column: 33, scope: !9285)
!9290 = !DILocation(line: 1357, column: 51, scope: !9285)
!9291 = !DILocation(line: 1357, column: 32, scope: !9285)
!9292 = !DILocation(line: 1357, column: 17, scope: !9285)
!9293 = !DILocation(line: 1357, column: 22, scope: !9285)
!9294 = !DILocation(line: 1357, column: 30, scope: !9285)
!9295 = !DILocation(line: 1358, column: 59, scope: !9285)
!9296 = !DILocation(line: 1358, column: 38, scope: !9285)
!9297 = !DILocation(line: 1358, column: 17, scope: !9285)
!9298 = !DILocation(line: 1358, column: 22, scope: !9285)
!9299 = !DILocation(line: 1358, column: 36, scope: !9285)
!9300 = !DILocation(line: 1359, column: 13, scope: !9285)
!9301 = !DILocation(line: 1360, column: 53, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9280, file: !1800, line: 1359, column: 20)
!9303 = !DILocation(line: 1360, column: 35, scope: !9302)
!9304 = !DILocation(line: 1360, column: 17, scope: !9302)
!9305 = !DILocation(line: 1360, column: 22, scope: !9302)
!9306 = !DILocation(line: 1360, column: 33, scope: !9302)
!9307 = !DILocation(line: 1361, column: 51, scope: !9302)
!9308 = !DILocation(line: 1361, column: 32, scope: !9302)
!9309 = !DILocation(line: 1361, column: 17, scope: !9302)
!9310 = !DILocation(line: 1361, column: 22, scope: !9302)
!9311 = !DILocation(line: 1361, column: 30, scope: !9302)
!9312 = !DILocation(line: 1362, column: 59, scope: !9302)
!9313 = !DILocation(line: 1362, column: 38, scope: !9302)
!9314 = !DILocation(line: 1362, column: 17, scope: !9302)
!9315 = !DILocation(line: 1362, column: 22, scope: !9302)
!9316 = !DILocation(line: 1362, column: 36, scope: !9302)
!9317 = !DILocation(line: 1364, column: 18, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9281, file: !1800, line: 1364, column: 17)
!9319 = !DILocation(line: 1364, column: 23, scope: !9318)
!9320 = !DILocation(line: 1364, column: 31, scope: !9318)
!9321 = !DILocation(line: 1364, column: 35, scope: !9322)
!9322 = !DILexicalBlockFile(scope: !9318, file: !1800, discriminator: 1)
!9323 = !DILocation(line: 1364, column: 40, scope: !9322)
!9324 = !DILocation(line: 1364, column: 17, scope: !9322)
!9325 = !DILocation(line: 1365, column: 26, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9318, file: !1800, line: 1364, column: 52)
!9327 = !DILocation(line: 1366, column: 17, scope: !9326)
!9328 = !DILocation(line: 1368, column: 9, scope: !9281)
!9329 = !DILocation(line: 1369, column: 17, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9331, file: !1800, line: 1369, column: 17)
!9331 = distinct !DILexicalBlock(scope: !9272, file: !1800, line: 1368, column: 16)
!9332 = !DILocation(line: 1369, column: 23, scope: !9330)
!9333 = !DILocation(line: 1369, column: 17, scope: !9331)
!9334 = !DILocation(line: 1370, column: 51, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9330, file: !1800, line: 1369, column: 43)
!9336 = !DILocation(line: 1370, column: 32, scope: !9335)
!9337 = !DILocation(line: 1370, column: 17, scope: !9335)
!9338 = !DILocation(line: 1370, column: 22, scope: !9335)
!9339 = !DILocation(line: 1370, column: 30, scope: !9335)
!9340 = !DILocation(line: 1371, column: 53, scope: !9335)
!9341 = !DILocation(line: 1371, column: 35, scope: !9335)
!9342 = !DILocation(line: 1371, column: 17, scope: !9335)
!9343 = !DILocation(line: 1371, column: 22, scope: !9335)
!9344 = !DILocation(line: 1371, column: 33, scope: !9335)
!9345 = !DILocation(line: 1372, column: 13, scope: !9335)
!9346 = !DILocation(line: 1373, column: 52, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9330, file: !1800, line: 1372, column: 20)
!9348 = !DILocation(line: 1373, column: 32, scope: !9347)
!9349 = !DILocation(line: 1373, column: 17, scope: !9347)
!9350 = !DILocation(line: 1373, column: 22, scope: !9347)
!9351 = !DILocation(line: 1373, column: 30, scope: !9347)
!9352 = !DILocation(line: 1374, column: 54, scope: !9347)
!9353 = !DILocation(line: 1374, column: 35, scope: !9347)
!9354 = !DILocation(line: 1374, column: 17, scope: !9347)
!9355 = !DILocation(line: 1374, column: 22, scope: !9347)
!9356 = !DILocation(line: 1374, column: 33, scope: !9347)
!9357 = !DILocation(line: 1376, column: 56, scope: !9331)
!9358 = !DILocation(line: 1376, column: 34, scope: !9331)
!9359 = !DILocation(line: 1376, column: 13, scope: !9331)
!9360 = !DILocation(line: 1376, column: 18, scope: !9331)
!9361 = !DILocation(line: 1376, column: 32, scope: !9331)
!9362 = !DILocation(line: 1378, column: 13, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9263, file: !1800, line: 1378, column: 13)
!9364 = !DILocation(line: 1378, column: 17, scope: !9363)
!9365 = !DILocation(line: 1378, column: 13, scope: !9263)
!9366 = !DILocation(line: 1379, column: 48, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9363, file: !1800, line: 1378, column: 36)
!9368 = !DILocation(line: 1379, column: 38, scope: !9367)
!9369 = !DILocation(line: 1379, column: 13, scope: !9367)
!9370 = !DILocation(line: 1379, column: 18, scope: !9367)
!9371 = !DILocation(line: 1379, column: 36, scope: !9367)
!9372 = !DILocation(line: 1380, column: 13, scope: !9367)
!9373 = !DILocation(line: 1380, column: 18, scope: !9367)
!9374 = !DILocation(line: 1380, column: 40, scope: !9367)
!9375 = !DILocation(line: 1381, column: 9, scope: !9367)
!9376 = !DILocation(line: 1382, column: 13, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9263, file: !1800, line: 1382, column: 13)
!9378 = !DILocation(line: 1382, column: 18, scope: !9377)
!9379 = !DILocation(line: 1382, column: 13, scope: !9263)
!9380 = !DILocation(line: 1383, column: 17, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9382, file: !1800, line: 1383, column: 17)
!9382 = distinct !DILexicalBlock(scope: !9377, file: !1800, line: 1382, column: 37)
!9383 = !DILocation(line: 1383, column: 21, scope: !9381)
!9384 = !DILocation(line: 1383, column: 17, scope: !9382)
!9385 = !DILocation(line: 1384, column: 39, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9387, file: !1800, line: 1384, column: 21)
!9387 = distinct !DILexicalBlock(scope: !9381, file: !1800, line: 1383, column: 38)
!9388 = !DILocation(line: 1384, column: 43, scope: !9386)
!9389 = !DILocation(line: 1384, column: 48, scope: !9386)
!9390 = !DILocation(line: 1384, column: 21, scope: !9386)
!9391 = !DILocation(line: 1384, column: 21, scope: !9387)
!9392 = !DILocation(line: 1385, column: 21, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9386, file: !1800, line: 1384, column: 53)
!9394 = !DILocation(line: 1387, column: 13, scope: !9387)
!9395 = !DILocation(line: 1387, column: 24, scope: !9396)
!9396 = !DILexicalBlockFile(scope: !9397, file: !1800, discriminator: 1)
!9397 = distinct !DILexicalBlock(scope: !9381, file: !1800, line: 1387, column: 24)
!9398 = !DILocation(line: 1387, column: 28, scope: !9396)
!9399 = !DILocation(line: 1387, column: 42, scope: !9396)
!9400 = !DILocation(line: 1388, column: 24, scope: !9397)
!9401 = !DILocation(line: 1388, column: 28, scope: !9397)
!9402 = !DILocation(line: 1387, column: 24, scope: !9403)
!9403 = !DILexicalBlockFile(scope: !9381, file: !1800, discriminator: 2)
!9404 = !DILocation(line: 1389, column: 24, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9397, file: !1800, line: 1388, column: 46)
!9406 = !DILocation(line: 1389, column: 28, scope: !9405)
!9407 = !DILocation(line: 1389, column: 17, scope: !9405)
!9408 = !DILocation(line: 1391, column: 17, scope: !9405)
!9409 = !DILocation(line: 1393, column: 21, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9411, file: !1800, line: 1393, column: 21)
!9411 = distinct !DILexicalBlock(scope: !9397, file: !1800, line: 1392, column: 20)
!9412 = !DILocation(line: 1393, column: 25, scope: !9410)
!9413 = !DILocation(line: 1393, column: 21, scope: !9411)
!9414 = !DILocation(line: 1394, column: 28, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9410, file: !1800, line: 1393, column: 43)
!9416 = !DILocation(line: 1394, column: 32, scope: !9415)
!9417 = !DILocation(line: 1394, column: 21, scope: !9415)
!9418 = !DILocation(line: 1396, column: 30, scope: !9415)
!9419 = !DILocation(line: 1397, column: 21, scope: !9415)
!9420 = !DILocation(line: 1399, column: 50, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9411, file: !1800, line: 1399, column: 21)
!9422 = !DILocation(line: 1399, column: 41, scope: !9421)
!9423 = !DILocation(line: 1399, column: 22, scope: !9421)
!9424 = !DILocation(line: 1399, column: 27, scope: !9421)
!9425 = !DILocation(line: 1399, column: 31, scope: !9421)
!9426 = !DILocation(line: 1399, column: 39, scope: !9421)
!9427 = !DILocation(line: 1399, column: 21, scope: !9411)
!9428 = !DILocation(line: 1400, column: 33, scope: !9421)
!9429 = !DILocation(line: 1400, column: 38, scope: !9421)
!9430 = !DILocation(line: 1400, column: 43, scope: !9421)
!9431 = !DILocation(line: 1400, column: 47, scope: !9421)
!9432 = !DILocation(line: 1400, column: 52, scope: !9421)
!9433 = !DILocation(line: 1400, column: 21, scope: !9421)
!9434 = !DILocation(line: 1402, column: 9, scope: !9382)
!9435 = !DILocation(line: 1405, column: 9, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9082, file: !1800, line: 1405, column: 9)
!9437 = !DILocation(line: 1405, column: 14, scope: !9436)
!9438 = !DILocation(line: 1405, column: 24, scope: !9436)
!9439 = !DILocation(line: 1405, column: 29, scope: !9436)
!9440 = !DILocation(line: 1405, column: 22, scope: !9436)
!9441 = !DILocation(line: 1405, column: 9, scope: !9082)
!9442 = !DILocation(line: 1406, column: 16, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9436, file: !1800, line: 1405, column: 38)
!9444 = !DILocation(line: 1406, column: 20, scope: !9443)
!9445 = !DILocation(line: 1409, column: 16, scope: !9443)
!9446 = !DILocation(line: 1409, column: 21, scope: !9443)
!9447 = !DILocation(line: 1409, column: 30, scope: !9443)
!9448 = !DILocation(line: 1409, column: 35, scope: !9443)
!9449 = !DILocation(line: 1406, column: 9, scope: !9443)
!9450 = !DILocation(line: 1410, column: 9, scope: !9443)
!9451 = !DILocation(line: 1413, column: 5, scope: !9082)
!9452 = !DILocation(line: 1415, column: 5, scope: !9082)
!9453 = !DILocation(line: 1415, column: 10, scope: !9082)
!9454 = !DILocation(line: 1415, column: 18, scope: !9082)
!9455 = !DILocation(line: 1416, column: 12, scope: !9082)
!9456 = !DILocation(line: 1416, column: 5, scope: !9082)
!9457 = !DILocation(line: 1417, column: 1, scope: !9082)
!9458 = distinct !DISubprogram(name: "decode_band_types", scope: !1800, file: !1800, line: 1427, type: !9459, isLocal: true, isDefinition: true, scopeLine: 1430, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!9459 = !DISubroutineType(types: !9460)
!9460 = !{!1012, !2071, !9461, !1454, !2041, !2616}
!9461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64, align: 64)
!9462 = !DILocalVariable(name: "ac", arg: 1, scope: !9458, file: !1800, line: 1427, type: !2071)
!9463 = !DILocation(line: 1427, column: 42, scope: !9458)
!9464 = !DILocalVariable(name: "band_type", arg: 2, scope: !9458, file: !1800, line: 1427, type: !9461)
!9465 = !DILocation(line: 1427, column: 60, scope: !9458)
!9466 = !DILocalVariable(name: "band_type_run_end", arg: 3, scope: !9458, file: !1800, line: 1428, type: !1454)
!9467 = !DILocation(line: 1428, column: 34, scope: !9458)
!9468 = !DILocalVariable(name: "gb", arg: 4, scope: !9458, file: !1800, line: 1428, type: !2041)
!9469 = !DILocation(line: 1428, column: 73, scope: !9458)
!9470 = !DILocalVariable(name: "ics", arg: 5, scope: !9458, file: !1800, line: 1429, type: !2616)
!9471 = !DILocation(line: 1429, column: 55, scope: !9458)
!9472 = !DILocalVariable(name: "g", scope: !9458, file: !1800, line: 1431, type: !1012)
!9473 = !DILocation(line: 1431, column: 9, scope: !9458)
!9474 = !DILocalVariable(name: "idx", scope: !9458, file: !1800, line: 1431, type: !1012)
!9475 = !DILocation(line: 1431, column: 12, scope: !9458)
!9476 = !DILocalVariable(name: "bits", scope: !9458, file: !1800, line: 1432, type: !1162)
!9477 = !DILocation(line: 1432, column: 15, scope: !9458)
!9478 = !DILocation(line: 1432, column: 23, scope: !9458)
!9479 = !DILocation(line: 1432, column: 28, scope: !9458)
!9480 = !DILocation(line: 1432, column: 47, scope: !9458)
!9481 = !DILocation(line: 1432, column: 22, scope: !9458)
!9482 = !DILocation(line: 1433, column: 12, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9458, file: !1800, line: 1433, column: 5)
!9484 = !DILocation(line: 1433, column: 10, scope: !9483)
!9485 = !DILocation(line: 1433, column: 17, scope: !9486)
!9486 = !DILexicalBlockFile(scope: !9487, file: !1800, discriminator: 1)
!9487 = distinct !DILexicalBlock(scope: !9483, file: !1800, line: 1433, column: 5)
!9488 = !DILocation(line: 1433, column: 21, scope: !9486)
!9489 = !DILocation(line: 1433, column: 26, scope: !9486)
!9490 = !DILocation(line: 1433, column: 19, scope: !9486)
!9491 = !DILocation(line: 1433, column: 5, scope: !9486)
!9492 = !DILocalVariable(name: "k", scope: !9493, file: !1800, line: 1434, type: !1012)
!9493 = distinct !DILexicalBlock(scope: !9487, file: !1800, line: 1433, column: 50)
!9494 = !DILocation(line: 1434, column: 13, scope: !9493)
!9495 = !DILocation(line: 1435, column: 9, scope: !9493)
!9496 = !DILocation(line: 1435, column: 16, scope: !9497)
!9497 = !DILexicalBlockFile(scope: !9493, file: !1800, discriminator: 1)
!9498 = !DILocation(line: 1435, column: 20, scope: !9497)
!9499 = !DILocation(line: 1435, column: 25, scope: !9497)
!9500 = !DILocation(line: 1435, column: 18, scope: !9497)
!9501 = !DILocation(line: 1435, column: 9, scope: !9497)
!9502 = !DILocalVariable(name: "sect_end", scope: !9503, file: !1800, line: 1436, type: !1030)
!9503 = distinct !DILexicalBlock(scope: !9493, file: !1800, line: 1435, column: 34)
!9504 = !DILocation(line: 1436, column: 21, scope: !9503)
!9505 = !DILocation(line: 1436, column: 32, scope: !9503)
!9506 = !DILocalVariable(name: "sect_len_incr", scope: !9503, file: !1800, line: 1437, type: !1012)
!9507 = !DILocation(line: 1437, column: 17, scope: !9503)
!9508 = !DILocalVariable(name: "sect_band_type", scope: !9503, file: !1800, line: 1438, type: !1012)
!9509 = !DILocation(line: 1438, column: 17, scope: !9503)
!9510 = !DILocation(line: 1438, column: 43, scope: !9503)
!9511 = !DILocation(line: 1438, column: 34, scope: !9503)
!9512 = !DILocation(line: 1439, column: 17, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9503, file: !1800, line: 1439, column: 17)
!9514 = !DILocation(line: 1439, column: 32, scope: !9513)
!9515 = !DILocation(line: 1439, column: 17, scope: !9503)
!9516 = !DILocation(line: 1440, column: 24, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9513, file: !1800, line: 1439, column: 39)
!9518 = !DILocation(line: 1440, column: 28, scope: !9517)
!9519 = !DILocation(line: 1440, column: 17, scope: !9517)
!9520 = !DILocation(line: 1441, column: 17, scope: !9517)
!9521 = !DILocation(line: 1443, column: 13, scope: !9503)
!9522 = distinct !{!9522, !9521}
!9523 = !DILocation(line: 1444, column: 42, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9503, file: !1800, line: 1443, column: 16)
!9525 = !DILocation(line: 1444, column: 46, scope: !9524)
!9526 = !DILocation(line: 1444, column: 33, scope: !9524)
!9527 = !DILocation(line: 1444, column: 31, scope: !9524)
!9528 = !DILocation(line: 1445, column: 29, scope: !9524)
!9529 = !DILocation(line: 1445, column: 26, scope: !9524)
!9530 = !DILocation(line: 1446, column: 35, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9524, file: !1800, line: 1446, column: 21)
!9532 = !DILocation(line: 1446, column: 21, scope: !9531)
!9533 = !DILocation(line: 1446, column: 39, scope: !9531)
!9534 = !DILocation(line: 1446, column: 21, scope: !9524)
!9535 = !DILocation(line: 1447, column: 28, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9531, file: !1800, line: 1446, column: 44)
!9537 = !DILocation(line: 1447, column: 32, scope: !9536)
!9538 = !DILocation(line: 1447, column: 21, scope: !9536)
!9539 = !DILocation(line: 1448, column: 21, scope: !9536)
!9540 = !DILocation(line: 1450, column: 21, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9524, file: !1800, line: 1450, column: 21)
!9542 = !DILocation(line: 1450, column: 32, scope: !9541)
!9543 = !DILocation(line: 1450, column: 37, scope: !9541)
!9544 = !DILocation(line: 1450, column: 30, scope: !9541)
!9545 = !DILocation(line: 1450, column: 21, scope: !9524)
!9546 = !DILocation(line: 1451, column: 28, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9541, file: !1800, line: 1450, column: 46)
!9548 = !DILocation(line: 1451, column: 32, scope: !9547)
!9549 = !DILocation(line: 1453, column: 28, scope: !9547)
!9550 = !DILocation(line: 1453, column: 38, scope: !9547)
!9551 = !DILocation(line: 1453, column: 43, scope: !9547)
!9552 = !DILocation(line: 1451, column: 21, scope: !9547)
!9553 = !DILocation(line: 1454, column: 21, scope: !9547)
!9554 = !DILocation(line: 1456, column: 13, scope: !9524)
!9555 = !DILocation(line: 1456, column: 22, scope: !9556)
!9556 = !DILexicalBlockFile(scope: !9503, file: !1800, discriminator: 1)
!9557 = !DILocation(line: 1456, column: 45, scope: !9556)
!9558 = !DILocation(line: 1456, column: 42, scope: !9556)
!9559 = !DILocation(line: 1456, column: 51, scope: !9556)
!9560 = !DILocation(line: 1456, column: 36, scope: !9556)
!9561 = !DILocation(line: 1456, column: 13, scope: !9556)
!9562 = !DILocation(line: 1457, column: 13, scope: !9503)
!9563 = !DILocation(line: 1457, column: 20, scope: !9564)
!9564 = !DILexicalBlockFile(scope: !9565, file: !1800, discriminator: 1)
!9565 = distinct !DILexicalBlock(scope: !9566, file: !1800, line: 1457, column: 13)
!9566 = distinct !DILexicalBlock(scope: !9503, file: !1800, line: 1457, column: 13)
!9567 = !DILocation(line: 1457, column: 24, scope: !9564)
!9568 = !DILocation(line: 1457, column: 22, scope: !9564)
!9569 = !DILocation(line: 1457, column: 13, scope: !9564)
!9570 = !DILocation(line: 1458, column: 35, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9565, file: !1800, line: 1457, column: 39)
!9572 = !DILocation(line: 1458, column: 28, scope: !9571)
!9573 = !DILocation(line: 1458, column: 17, scope: !9571)
!9574 = !DILocation(line: 1458, column: 33, scope: !9571)
!9575 = !DILocation(line: 1459, column: 44, scope: !9571)
!9576 = !DILocation(line: 1459, column: 38, scope: !9571)
!9577 = !DILocation(line: 1459, column: 17, scope: !9571)
!9578 = !DILocation(line: 1459, column: 42, scope: !9571)
!9579 = !DILocation(line: 1460, column: 13, scope: !9571)
!9580 = !DILocation(line: 1457, column: 35, scope: !9581)
!9581 = !DILexicalBlockFile(scope: !9565, file: !1800, discriminator: 2)
!9582 = !DILocation(line: 1457, column: 13, scope: !9581)
!9583 = distinct !{!9583, !9562}
!9584 = !DILocation(line: 1435, column: 9, scope: !9585)
!9585 = !DILexicalBlockFile(scope: !9493, file: !1800, discriminator: 2)
!9586 = distinct !{!9586, !9495}
!9587 = !DILocation(line: 1462, column: 5, scope: !9493)
!9588 = !DILocation(line: 1433, column: 46, scope: !9589)
!9589 = !DILexicalBlockFile(scope: !9487, file: !1800, discriminator: 2)
!9590 = !DILocation(line: 1433, column: 5, scope: !9589)
!9591 = distinct !{!9591, !9592}
!9592 = !DILocation(line: 1433, column: 5, scope: !9458)
!9593 = !DILocation(line: 1463, column: 5, scope: !9458)
!9594 = !DILocation(line: 1464, column: 1, scope: !9458)
!9595 = distinct !DISubprogram(name: "decode_scalefactors", scope: !1800, file: !1800, line: 1476, type: !9596, isLocal: true, isDefinition: true, scopeLine: 1481, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!9596 = !DISubroutineType(types: !9597)
!9597 = !{!1012, !2071, !1032, !2041, !1013, !2616, !9461, !1454}
!9598 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !9599)
!9599 = distinct !DILocation(line: 788, column: 601, scope: !9600, inlinedAt: !9609)
!9600 = !DILexicalBlockFile(scope: !9601, file: !2043, discriminator: 11)
!9601 = distinct !DILexicalBlock(scope: !9602, file: !2043, line: 788, column: 490)
!9602 = distinct !DILexicalBlock(scope: !9603, file: !2043, line: 788, column: 466)
!9603 = distinct !DILexicalBlock(scope: !9604, file: !2043, line: 788, column: 154)
!9604 = distinct !DILexicalBlock(scope: !9605, file: !2043, line: 788, column: 130)
!9605 = distinct !DILexicalBlock(scope: !9606, file: !2043, line: 788, column: 8)
!9606 = distinct !DISubprogram(name: "get_vlc2", scope: !2043, file: !2043, line: 762, type: !9607, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!9607 = !DISubroutineType(types: !9608)
!9608 = !{!1012, !2041, !1866, !1012, !1012}
!9609 = distinct !DILocation(line: 1530, column: 34, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !1800, line: 1529, column: 49)
!9611 = distinct !DILexicalBlock(scope: !9612, file: !1800, line: 1529, column: 17)
!9612 = distinct !DILexicalBlock(scope: !9613, file: !1800, line: 1529, column: 17)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !1800, line: 1528, column: 20)
!9614 = distinct !DILexicalBlock(scope: !9615, file: !1800, line: 1509, column: 24)
!9615 = distinct !DILexicalBlock(scope: !9616, file: !1800, line: 1492, column: 24)
!9616 = distinct !DILexicalBlock(scope: !9617, file: !1800, line: 1489, column: 17)
!9617 = distinct !DILexicalBlock(scope: !9618, file: !1800, line: 1487, column: 40)
!9618 = distinct !DILexicalBlock(scope: !9619, file: !1800, line: 1487, column: 9)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !1800, line: 1487, column: 9)
!9620 = distinct !DILexicalBlock(scope: !9621, file: !1800, line: 1486, column: 50)
!9621 = distinct !DILexicalBlock(scope: !9622, file: !1800, line: 1486, column: 5)
!9622 = distinct !DILexicalBlock(scope: !9595, file: !1800, line: 1486, column: 5)
!9623 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !9624)
!9624 = distinct !DILocation(line: 788, column: 259, scope: !9625, inlinedAt: !9609)
!9625 = !DILexicalBlockFile(scope: !9603, file: !2043, discriminator: 6)
!9626 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !9627)
!9627 = distinct !DILocation(line: 786, column: 16, scope: !9606, inlinedAt: !9609)
!9628 = !DILocalVariable(name: "s", arg: 1, scope: !9606, file: !2043, line: 762, type: !2041)
!9629 = !DILocation(line: 762, column: 74, scope: !9606, inlinedAt: !9609)
!9630 = !DILocalVariable(name: "table", arg: 2, scope: !9606, file: !2043, line: 762, type: !1866)
!9631 = !DILocation(line: 762, column: 87, scope: !9606, inlinedAt: !9609)
!9632 = !DILocalVariable(name: "bits", arg: 3, scope: !9606, file: !2043, line: 763, type: !1012)
!9633 = !DILocation(line: 763, column: 42, scope: !9606, inlinedAt: !9609)
!9634 = !DILocalVariable(name: "max_depth", arg: 4, scope: !9606, file: !2043, line: 763, type: !1012)
!9635 = !DILocation(line: 763, column: 52, scope: !9606, inlinedAt: !9609)
!9636 = !DILocalVariable(name: "code", scope: !9606, file: !2043, line: 783, type: !1012)
!9637 = !DILocation(line: 783, column: 9, scope: !9606, inlinedAt: !9609)
!9638 = !DILocalVariable(name: "re_index", scope: !9606, file: !2043, line: 785, type: !1013)
!9639 = !DILocation(line: 785, column: 18, scope: !9606, inlinedAt: !9609)
!9640 = !DILocalVariable(name: "re_cache", scope: !9606, file: !2043, line: 785, type: !1013)
!9641 = !DILocation(line: 785, column: 78, scope: !9606, inlinedAt: !9609)
!9642 = !DILocalVariable(name: "re_size_plus8", scope: !9606, file: !2043, line: 785, type: !1013)
!9643 = !DILocation(line: 785, column: 101, scope: !9606, inlinedAt: !9609)
!9644 = !DILocalVariable(name: "n", scope: !9605, file: !2043, line: 788, type: !1012)
!9645 = !DILocation(line: 788, column: 14, scope: !9605, inlinedAt: !9609)
!9646 = !DILocalVariable(name: "nb_bits", scope: !9605, file: !2043, line: 788, type: !1012)
!9647 = !DILocation(line: 788, column: 17, scope: !9605, inlinedAt: !9609)
!9648 = !DILocalVariable(name: "index", scope: !9605, file: !2043, line: 788, type: !1013)
!9649 = !DILocation(line: 788, column: 39, scope: !9605, inlinedAt: !9609)
!9650 = !DILocation(line: 127, column: 87, scope: !5474, inlinedAt: !9651)
!9651 = distinct !DILocation(line: 1515, column: 38, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9653, file: !1800, line: 1510, column: 49)
!9653 = distinct !DILexicalBlock(scope: !9654, file: !1800, line: 1510, column: 17)
!9654 = distinct !DILexicalBlock(scope: !9655, file: !1800, line: 1510, column: 17)
!9655 = distinct !DILexicalBlock(scope: !9614, file: !1800, line: 1509, column: 52)
!9656 = !DILocation(line: 127, column: 94, scope: !5474, inlinedAt: !9651)
!9657 = !DILocation(line: 127, column: 104, scope: !5474, inlinedAt: !9651)
!9658 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !9659)
!9659 = distinct !DILocation(line: 788, column: 601, scope: !9600, inlinedAt: !9660)
!9660 = distinct !DILocation(line: 1514, column: 38, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9652, file: !1800, line: 1511, column: 25)
!9662 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !9663)
!9663 = distinct !DILocation(line: 788, column: 259, scope: !9625, inlinedAt: !9660)
!9664 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !9665)
!9665 = distinct !DILocation(line: 786, column: 16, scope: !9606, inlinedAt: !9660)
!9666 = !DILocation(line: 762, column: 74, scope: !9606, inlinedAt: !9660)
!9667 = !DILocation(line: 762, column: 87, scope: !9606, inlinedAt: !9660)
!9668 = !DILocation(line: 763, column: 42, scope: !9606, inlinedAt: !9660)
!9669 = !DILocation(line: 763, column: 52, scope: !9606, inlinedAt: !9660)
!9670 = !DILocation(line: 783, column: 9, scope: !9606, inlinedAt: !9660)
!9671 = !DILocation(line: 785, column: 18, scope: !9606, inlinedAt: !9660)
!9672 = !DILocation(line: 785, column: 78, scope: !9606, inlinedAt: !9660)
!9673 = !DILocation(line: 785, column: 101, scope: !9606, inlinedAt: !9660)
!9674 = !DILocation(line: 788, column: 14, scope: !9605, inlinedAt: !9660)
!9675 = !DILocation(line: 788, column: 17, scope: !9605, inlinedAt: !9660)
!9676 = !DILocation(line: 788, column: 39, scope: !9605, inlinedAt: !9660)
!9677 = !DILocation(line: 127, column: 87, scope: !5474, inlinedAt: !9678)
!9678 = distinct !DILocation(line: 1496, column: 38, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9680, file: !1800, line: 1494, column: 49)
!9680 = distinct !DILexicalBlock(scope: !9681, file: !1800, line: 1494, column: 17)
!9681 = distinct !DILexicalBlock(scope: !9682, file: !1800, line: 1494, column: 17)
!9682 = distinct !DILexicalBlock(scope: !9615, file: !1800, line: 1493, column: 59)
!9683 = !DILocation(line: 127, column: 94, scope: !5474, inlinedAt: !9678)
!9684 = !DILocation(line: 127, column: 104, scope: !5474, inlinedAt: !9678)
!9685 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !9686)
!9686 = distinct !DILocation(line: 788, column: 601, scope: !9600, inlinedAt: !9687)
!9687 = distinct !DILocation(line: 1495, column: 34, scope: !9679)
!9688 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !9689)
!9689 = distinct !DILocation(line: 788, column: 259, scope: !9625, inlinedAt: !9687)
!9690 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !9691)
!9691 = distinct !DILocation(line: 786, column: 16, scope: !9606, inlinedAt: !9687)
!9692 = !DILocation(line: 762, column: 74, scope: !9606, inlinedAt: !9687)
!9693 = !DILocation(line: 762, column: 87, scope: !9606, inlinedAt: !9687)
!9694 = !DILocation(line: 763, column: 42, scope: !9606, inlinedAt: !9687)
!9695 = !DILocation(line: 763, column: 52, scope: !9606, inlinedAt: !9687)
!9696 = !DILocation(line: 783, column: 9, scope: !9606, inlinedAt: !9687)
!9697 = !DILocation(line: 785, column: 18, scope: !9606, inlinedAt: !9687)
!9698 = !DILocation(line: 785, column: 78, scope: !9606, inlinedAt: !9687)
!9699 = !DILocation(line: 785, column: 101, scope: !9606, inlinedAt: !9687)
!9700 = !DILocation(line: 788, column: 14, scope: !9605, inlinedAt: !9687)
!9701 = !DILocation(line: 788, column: 17, scope: !9605, inlinedAt: !9687)
!9702 = !DILocation(line: 788, column: 39, scope: !9605, inlinedAt: !9687)
!9703 = !DILocalVariable(name: "ac", arg: 1, scope: !9595, file: !1800, line: 1476, type: !2071)
!9704 = !DILocation(line: 1476, column: 44, scope: !9595)
!9705 = !DILocalVariable(name: "sf", arg: 2, scope: !9595, file: !1800, line: 1476, type: !1032)
!9706 = !DILocation(line: 1476, column: 57, scope: !9595)
!9707 = !DILocalVariable(name: "gb", arg: 3, scope: !9595, file: !1800, line: 1476, type: !2041)
!9708 = !DILocation(line: 1476, column: 81, scope: !9595)
!9709 = !DILocalVariable(name: "global_gain", arg: 4, scope: !9595, file: !1800, line: 1477, type: !1013)
!9710 = !DILocation(line: 1477, column: 45, scope: !9595)
!9711 = !DILocalVariable(name: "ics", arg: 5, scope: !9595, file: !1800, line: 1478, type: !2616)
!9712 = !DILocation(line: 1478, column: 57, scope: !9595)
!9713 = !DILocalVariable(name: "band_type", arg: 6, scope: !9595, file: !1800, line: 1479, type: !9461)
!9714 = !DILocation(line: 1479, column: 46, scope: !9595)
!9715 = !DILocalVariable(name: "band_type_run_end", arg: 7, scope: !9595, file: !1800, line: 1480, type: !1454)
!9716 = !DILocation(line: 1480, column: 36, scope: !9595)
!9717 = !DILocalVariable(name: "g", scope: !9595, file: !1800, line: 1482, type: !1012)
!9718 = !DILocation(line: 1482, column: 9, scope: !9595)
!9719 = !DILocalVariable(name: "i", scope: !9595, file: !1800, line: 1482, type: !1012)
!9720 = !DILocation(line: 1482, column: 12, scope: !9595)
!9721 = !DILocalVariable(name: "idx", scope: !9595, file: !1800, line: 1482, type: !1012)
!9722 = !DILocation(line: 1482, column: 15, scope: !9595)
!9723 = !DILocalVariable(name: "offset", scope: !9595, file: !1800, line: 1483, type: !9724)
!9724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 96, align: 32, elements: !2228)
!9725 = !DILocation(line: 1483, column: 9, scope: !9595)
!9726 = !DILocation(line: 1483, column: 21, scope: !9595)
!9727 = !DILocation(line: 1483, column: 23, scope: !9595)
!9728 = !DILocation(line: 1483, column: 36, scope: !9595)
!9729 = !DILocation(line: 1483, column: 48, scope: !9595)
!9730 = !DILocalVariable(name: "clipped_offset", scope: !9595, file: !1800, line: 1484, type: !1012)
!9731 = !DILocation(line: 1484, column: 9, scope: !9595)
!9732 = !DILocalVariable(name: "noise_flag", scope: !9595, file: !1800, line: 1485, type: !1012)
!9733 = !DILocation(line: 1485, column: 9, scope: !9595)
!9734 = !DILocation(line: 1486, column: 12, scope: !9622)
!9735 = !DILocation(line: 1486, column: 10, scope: !9622)
!9736 = !DILocation(line: 1486, column: 17, scope: !9737)
!9737 = !DILexicalBlockFile(scope: !9621, file: !1800, discriminator: 1)
!9738 = !DILocation(line: 1486, column: 21, scope: !9737)
!9739 = !DILocation(line: 1486, column: 26, scope: !9737)
!9740 = !DILocation(line: 1486, column: 19, scope: !9737)
!9741 = !DILocation(line: 1486, column: 5, scope: !9737)
!9742 = !DILocation(line: 1487, column: 16, scope: !9619)
!9743 = !DILocation(line: 1487, column: 14, scope: !9619)
!9744 = !DILocation(line: 1487, column: 21, scope: !9745)
!9745 = !DILexicalBlockFile(scope: !9618, file: !1800, discriminator: 1)
!9746 = !DILocation(line: 1487, column: 25, scope: !9745)
!9747 = !DILocation(line: 1487, column: 30, scope: !9745)
!9748 = !DILocation(line: 1487, column: 23, scope: !9745)
!9749 = !DILocation(line: 1487, column: 9, scope: !9745)
!9750 = !DILocalVariable(name: "run_end", scope: !9617, file: !1800, line: 1488, type: !1012)
!9751 = !DILocation(line: 1488, column: 17, scope: !9617)
!9752 = !DILocation(line: 1488, column: 45, scope: !9617)
!9753 = !DILocation(line: 1488, column: 27, scope: !9617)
!9754 = !DILocation(line: 1489, column: 27, scope: !9616)
!9755 = !DILocation(line: 1489, column: 17, scope: !9616)
!9756 = !DILocation(line: 1489, column: 32, scope: !9616)
!9757 = !DILocation(line: 1489, column: 17, scope: !9617)
!9758 = !DILocation(line: 1490, column: 17, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9616, file: !1800, line: 1489, column: 44)
!9760 = !DILocation(line: 1490, column: 24, scope: !9761)
!9761 = !DILexicalBlockFile(scope: !9762, file: !1800, discriminator: 1)
!9762 = distinct !DILexicalBlock(scope: !9763, file: !1800, line: 1490, column: 17)
!9763 = distinct !DILexicalBlock(scope: !9759, file: !1800, line: 1490, column: 17)
!9764 = !DILocation(line: 1490, column: 28, scope: !9761)
!9765 = !DILocation(line: 1490, column: 26, scope: !9761)
!9766 = !DILocation(line: 1490, column: 17, scope: !9761)
!9767 = !DILocation(line: 1491, column: 24, scope: !9762)
!9768 = !DILocation(line: 1491, column: 21, scope: !9762)
!9769 = !DILocation(line: 1491, column: 29, scope: !9762)
!9770 = !DILocation(line: 1490, column: 38, scope: !9771)
!9771 = !DILexicalBlockFile(scope: !9762, file: !1800, discriminator: 2)
!9772 = !DILocation(line: 1490, column: 45, scope: !9771)
!9773 = !DILocation(line: 1490, column: 17, scope: !9771)
!9774 = distinct !{!9774, !9758}
!9775 = !DILocation(line: 1492, column: 13, scope: !9759)
!9776 = !DILocation(line: 1492, column: 35, scope: !9777)
!9777 = !DILexicalBlockFile(scope: !9615, file: !1800, discriminator: 1)
!9778 = !DILocation(line: 1492, column: 25, scope: !9777)
!9779 = !DILocation(line: 1492, column: 40, scope: !9777)
!9780 = !DILocation(line: 1492, column: 57, scope: !9777)
!9781 = !DILocation(line: 1493, column: 35, scope: !9615)
!9782 = !DILocation(line: 1493, column: 25, scope: !9615)
!9783 = !DILocation(line: 1493, column: 40, scope: !9615)
!9784 = !DILocation(line: 1492, column: 24, scope: !9785)
!9785 = !DILexicalBlockFile(scope: !9616, file: !1800, discriminator: 2)
!9786 = !DILocation(line: 1494, column: 17, scope: !9682)
!9787 = !DILocation(line: 1494, column: 24, scope: !9788)
!9788 = !DILexicalBlockFile(scope: !9680, file: !1800, discriminator: 1)
!9789 = !DILocation(line: 1494, column: 28, scope: !9788)
!9790 = !DILocation(line: 1494, column: 26, scope: !9788)
!9791 = !DILocation(line: 1494, column: 17, scope: !9788)
!9792 = !DILocation(line: 1495, column: 43, scope: !9679)
!9793 = !DILocation(line: 1495, column: 64, scope: !9679)
!9794 = !DILocation(line: 1495, column: 34, scope: !9679)
!9795 = !DILocation(line: 785, column: 30, scope: !9606, inlinedAt: !9687)
!9796 = !DILocation(line: 785, column: 34, scope: !9606, inlinedAt: !9687)
!9797 = !DILocation(line: 785, column: 118, scope: !9606, inlinedAt: !9687)
!9798 = !DILocation(line: 785, column: 122, scope: !9606, inlinedAt: !9687)
!9799 = !DILocation(line: 786, column: 60, scope: !9606, inlinedAt: !9687)
!9800 = !DILocation(line: 786, column: 64, scope: !9606, inlinedAt: !9687)
!9801 = !DILocation(line: 786, column: 74, scope: !9606, inlinedAt: !9687)
!9802 = !DILocation(line: 786, column: 83, scope: !9606, inlinedAt: !9687)
!9803 = !DILocation(line: 786, column: 71, scope: !9606, inlinedAt: !9687)
!9804 = !DILocation(line: 786, column: 92, scope: !9606, inlinedAt: !9687)
!9805 = !DILocation(line: 786, column: 16, scope: !9606, inlinedAt: !9687)
!9806 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !9691)
!9807 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !9691)
!9808 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !9691)
!9809 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !9691)
!9810 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !9691)
!9811 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !9691)
!9812 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !9691)
!9813 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !9691)
!9814 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !9691)
!9815 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !9691)
!9816 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !9691)
!9817 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !9691)
!9818 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !9691)
!9819 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !9691)
!9820 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !9691)
!9821 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !9691)
!9822 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !9691)
!9823 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !9691)
!9824 = !DILocation(line: 786, column: 100, scope: !9606, inlinedAt: !9687)
!9825 = !DILocation(line: 786, column: 109, scope: !9606, inlinedAt: !9687)
!9826 = !DILocation(line: 786, column: 96, scope: !9606, inlinedAt: !9687)
!9827 = !DILocation(line: 786, column: 14, scope: !9606, inlinedAt: !9687)
!9828 = !DILocation(line: 788, column: 64, scope: !9829, inlinedAt: !9687)
!9829 = !DILexicalBlockFile(scope: !9605, file: !2043, discriminator: 1)
!9830 = !DILocation(line: 788, column: 74, scope: !9829, inlinedAt: !9687)
!9831 = !DILocation(line: 788, column: 54, scope: !9829, inlinedAt: !9687)
!9832 = !DILocation(line: 788, column: 52, scope: !9829, inlinedAt: !9687)
!9833 = !DILocation(line: 788, column: 94, scope: !9829, inlinedAt: !9687)
!9834 = !DILocation(line: 788, column: 88, scope: !9829, inlinedAt: !9687)
!9835 = !DILocation(line: 788, column: 86, scope: !9829, inlinedAt: !9687)
!9836 = !DILocation(line: 788, column: 115, scope: !9829, inlinedAt: !9687)
!9837 = !DILocation(line: 788, column: 109, scope: !9829, inlinedAt: !9687)
!9838 = !DILocation(line: 788, column: 107, scope: !9829, inlinedAt: !9687)
!9839 = !DILocation(line: 788, column: 130, scope: !9829, inlinedAt: !9687)
!9840 = !DILocation(line: 788, column: 140, scope: !9829, inlinedAt: !9687)
!9841 = !DILocation(line: 788, column: 144, scope: !9829, inlinedAt: !9687)
!9842 = !DILocation(line: 788, column: 147, scope: !9843, inlinedAt: !9687)
!9843 = !DILexicalBlockFile(scope: !9604, file: !2043, discriminator: 2)
!9844 = !DILocation(line: 788, column: 149, scope: !9843, inlinedAt: !9687)
!9845 = !DILocation(line: 788, column: 130, scope: !9843, inlinedAt: !9687)
!9846 = !DILocation(line: 788, column: 169, scope: !9847, inlinedAt: !9687)
!9847 = !DILexicalBlockFile(scope: !9603, file: !2043, discriminator: 3)
!9848 = !DILocation(line: 788, column: 187, scope: !9847, inlinedAt: !9687)
!9849 = !DILocation(line: 788, column: 199, scope: !9847, inlinedAt: !9687)
!9850 = !DILocation(line: 788, column: 196, scope: !9847, inlinedAt: !9687)
!9851 = !DILocation(line: 788, column: 184, scope: !9847, inlinedAt: !9687)
!9852 = !DILocation(line: 788, column: 168, scope: !9847, inlinedAt: !9687)
!9853 = !DILocation(line: 788, column: 209, scope: !9854, inlinedAt: !9687)
!9854 = !DILexicalBlockFile(scope: !9603, file: !2043, discriminator: 4)
!9855 = !DILocation(line: 788, column: 221, scope: !9854, inlinedAt: !9687)
!9856 = !DILocation(line: 788, column: 218, scope: !9854, inlinedAt: !9687)
!9857 = !DILocation(line: 788, column: 168, scope: !9854, inlinedAt: !9687)
!9858 = !DILocation(line: 788, column: 231, scope: !9859, inlinedAt: !9687)
!9859 = !DILexicalBlockFile(scope: !9603, file: !2043, discriminator: 5)
!9860 = !DILocation(line: 788, column: 168, scope: !9859, inlinedAt: !9687)
!9861 = !DILocation(line: 788, column: 168, scope: !9625, inlinedAt: !9687)
!9862 = !DILocation(line: 788, column: 165, scope: !9625, inlinedAt: !9687)
!9863 = !DILocation(line: 788, column: 303, scope: !9625, inlinedAt: !9687)
!9864 = !DILocation(line: 788, column: 307, scope: !9625, inlinedAt: !9687)
!9865 = !DILocation(line: 788, column: 317, scope: !9625, inlinedAt: !9687)
!9866 = !DILocation(line: 788, column: 326, scope: !9625, inlinedAt: !9687)
!9867 = !DILocation(line: 788, column: 314, scope: !9625, inlinedAt: !9687)
!9868 = !DILocation(line: 788, column: 335, scope: !9625, inlinedAt: !9687)
!9869 = !DILocation(line: 788, column: 259, scope: !9625, inlinedAt: !9687)
!9870 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !9689)
!9871 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !9689)
!9872 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !9689)
!9873 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !9689)
!9874 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !9689)
!9875 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !9689)
!9876 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !9689)
!9877 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !9689)
!9878 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !9689)
!9879 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !9689)
!9880 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !9689)
!9881 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !9689)
!9882 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !9689)
!9883 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !9689)
!9884 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !9689)
!9885 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !9689)
!9886 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !9689)
!9887 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !9689)
!9888 = !DILocation(line: 788, column: 343, scope: !9625, inlinedAt: !9687)
!9889 = !DILocation(line: 788, column: 352, scope: !9625, inlinedAt: !9687)
!9890 = !DILocation(line: 788, column: 339, scope: !9625, inlinedAt: !9687)
!9891 = !DILocation(line: 788, column: 257, scope: !9625, inlinedAt: !9687)
!9892 = !DILocation(line: 788, column: 369, scope: !9625, inlinedAt: !9687)
!9893 = !DILocation(line: 788, column: 368, scope: !9625, inlinedAt: !9687)
!9894 = !DILocation(line: 788, column: 366, scope: !9625, inlinedAt: !9687)
!9895 = !DILocation(line: 788, column: 390, scope: !9625, inlinedAt: !9687)
!9896 = !DILocation(line: 788, column: 400, scope: !9625, inlinedAt: !9687)
!9897 = !DILocation(line: 788, column: 380, scope: !9898, inlinedAt: !9687)
!9898 = !DILexicalBlockFile(scope: !9625, file: !2043, discriminator: 19)
!9899 = !DILocation(line: 788, column: 411, scope: !9625, inlinedAt: !9687)
!9900 = !DILocation(line: 788, column: 409, scope: !9625, inlinedAt: !9687)
!9901 = !DILocation(line: 788, column: 378, scope: !9625, inlinedAt: !9687)
!9902 = !DILocation(line: 788, column: 430, scope: !9625, inlinedAt: !9687)
!9903 = !DILocation(line: 788, column: 424, scope: !9625, inlinedAt: !9687)
!9904 = !DILocation(line: 788, column: 422, scope: !9625, inlinedAt: !9687)
!9905 = !DILocation(line: 788, column: 451, scope: !9625, inlinedAt: !9687)
!9906 = !DILocation(line: 788, column: 445, scope: !9625, inlinedAt: !9687)
!9907 = !DILocation(line: 788, column: 443, scope: !9625, inlinedAt: !9687)
!9908 = !DILocation(line: 788, column: 466, scope: !9625, inlinedAt: !9687)
!9909 = !DILocation(line: 788, column: 476, scope: !9625, inlinedAt: !9687)
!9910 = !DILocation(line: 788, column: 480, scope: !9625, inlinedAt: !9687)
!9911 = !DILocation(line: 788, column: 483, scope: !9912, inlinedAt: !9687)
!9912 = !DILexicalBlockFile(scope: !9602, file: !2043, discriminator: 7)
!9913 = !DILocation(line: 788, column: 485, scope: !9912, inlinedAt: !9687)
!9914 = !DILocation(line: 788, column: 466, scope: !9912, inlinedAt: !9687)
!9915 = !DILocation(line: 788, column: 505, scope: !9916, inlinedAt: !9687)
!9916 = !DILexicalBlockFile(scope: !9601, file: !2043, discriminator: 8)
!9917 = !DILocation(line: 788, column: 523, scope: !9916, inlinedAt: !9687)
!9918 = !DILocation(line: 788, column: 535, scope: !9916, inlinedAt: !9687)
!9919 = !DILocation(line: 788, column: 532, scope: !9916, inlinedAt: !9687)
!9920 = !DILocation(line: 788, column: 520, scope: !9916, inlinedAt: !9687)
!9921 = !DILocation(line: 788, column: 504, scope: !9916, inlinedAt: !9687)
!9922 = !DILocation(line: 788, column: 548, scope: !9923, inlinedAt: !9687)
!9923 = !DILexicalBlockFile(scope: !9601, file: !2043, discriminator: 9)
!9924 = !DILocation(line: 788, column: 560, scope: !9923, inlinedAt: !9687)
!9925 = !DILocation(line: 788, column: 557, scope: !9923, inlinedAt: !9687)
!9926 = !DILocation(line: 788, column: 504, scope: !9923, inlinedAt: !9687)
!9927 = !DILocation(line: 788, column: 573, scope: !9928, inlinedAt: !9687)
!9928 = !DILexicalBlockFile(scope: !9601, file: !2043, discriminator: 10)
!9929 = !DILocation(line: 788, column: 504, scope: !9928, inlinedAt: !9687)
!9930 = !DILocation(line: 788, column: 504, scope: !9600, inlinedAt: !9687)
!9931 = !DILocation(line: 788, column: 501, scope: !9600, inlinedAt: !9687)
!9932 = !DILocation(line: 788, column: 645, scope: !9600, inlinedAt: !9687)
!9933 = !DILocation(line: 788, column: 649, scope: !9600, inlinedAt: !9687)
!9934 = !DILocation(line: 788, column: 659, scope: !9600, inlinedAt: !9687)
!9935 = !DILocation(line: 788, column: 668, scope: !9600, inlinedAt: !9687)
!9936 = !DILocation(line: 788, column: 656, scope: !9600, inlinedAt: !9687)
!9937 = !DILocation(line: 788, column: 677, scope: !9600, inlinedAt: !9687)
!9938 = !DILocation(line: 788, column: 601, scope: !9600, inlinedAt: !9687)
!9939 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !9686)
!9940 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !9686)
!9941 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !9686)
!9942 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !9686)
!9943 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !9686)
!9944 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !9686)
!9945 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !9686)
!9946 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !9686)
!9947 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !9686)
!9948 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !9686)
!9949 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !9686)
!9950 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !9686)
!9951 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !9686)
!9952 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !9686)
!9953 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !9686)
!9954 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !9686)
!9955 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !9686)
!9956 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !9686)
!9957 = !DILocation(line: 788, column: 685, scope: !9600, inlinedAt: !9687)
!9958 = !DILocation(line: 788, column: 694, scope: !9600, inlinedAt: !9687)
!9959 = !DILocation(line: 788, column: 681, scope: !9600, inlinedAt: !9687)
!9960 = !DILocation(line: 788, column: 599, scope: !9600, inlinedAt: !9687)
!9961 = !DILocation(line: 788, column: 711, scope: !9600, inlinedAt: !9687)
!9962 = !DILocation(line: 788, column: 710, scope: !9600, inlinedAt: !9687)
!9963 = !DILocation(line: 788, column: 708, scope: !9600, inlinedAt: !9687)
!9964 = !DILocation(line: 788, column: 732, scope: !9600, inlinedAt: !9687)
!9965 = !DILocation(line: 788, column: 742, scope: !9600, inlinedAt: !9687)
!9966 = !DILocation(line: 788, column: 722, scope: !9967, inlinedAt: !9687)
!9967 = !DILexicalBlockFile(scope: !9600, file: !2043, discriminator: 20)
!9968 = !DILocation(line: 788, column: 753, scope: !9600, inlinedAt: !9687)
!9969 = !DILocation(line: 788, column: 751, scope: !9600, inlinedAt: !9687)
!9970 = !DILocation(line: 788, column: 720, scope: !9600, inlinedAt: !9687)
!9971 = !DILocation(line: 788, column: 772, scope: !9600, inlinedAt: !9687)
!9972 = !DILocation(line: 788, column: 766, scope: !9600, inlinedAt: !9687)
!9973 = !DILocation(line: 788, column: 764, scope: !9600, inlinedAt: !9687)
!9974 = !DILocation(line: 788, column: 793, scope: !9600, inlinedAt: !9687)
!9975 = !DILocation(line: 788, column: 787, scope: !9600, inlinedAt: !9687)
!9976 = !DILocation(line: 788, column: 785, scope: !9600, inlinedAt: !9687)
!9977 = !DILocation(line: 788, column: 804, scope: !9600, inlinedAt: !9687)
!9978 = !DILocation(line: 788, column: 806, scope: !9979, inlinedAt: !9687)
!9979 = !DILexicalBlockFile(scope: !9603, file: !2043, discriminator: 12)
!9980 = !DILocation(line: 788, column: 827, scope: !9981, inlinedAt: !9687)
!9981 = !DILexicalBlockFile(scope: !9982, file: !2043, discriminator: 14)
!9982 = distinct !DILexicalBlock(scope: !9605, file: !2043, line: 788, column: 811)
!9983 = !DILocation(line: 788, column: 822, scope: !9981, inlinedAt: !9687)
!9984 = !DILocation(line: 788, column: 844, scope: !9981, inlinedAt: !9687)
!9985 = !DILocation(line: 788, column: 862, scope: !9981, inlinedAt: !9687)
!9986 = !DILocation(line: 788, column: 874, scope: !9981, inlinedAt: !9687)
!9987 = !DILocation(line: 788, column: 871, scope: !9981, inlinedAt: !9687)
!9988 = !DILocation(line: 788, column: 859, scope: !9981, inlinedAt: !9687)
!9989 = !DILocation(line: 788, column: 843, scope: !9981, inlinedAt: !9687)
!9990 = !DILocation(line: 788, column: 881, scope: !9991, inlinedAt: !9687)
!9991 = !DILexicalBlockFile(scope: !9982, file: !2043, discriminator: 15)
!9992 = !DILocation(line: 788, column: 893, scope: !9991, inlinedAt: !9687)
!9993 = !DILocation(line: 788, column: 890, scope: !9991, inlinedAt: !9687)
!9994 = !DILocation(line: 788, column: 843, scope: !9991, inlinedAt: !9687)
!9995 = !DILocation(line: 788, column: 900, scope: !9996, inlinedAt: !9687)
!9996 = !DILexicalBlockFile(scope: !9982, file: !2043, discriminator: 16)
!9997 = !DILocation(line: 788, column: 843, scope: !9996, inlinedAt: !9687)
!9998 = !DILocation(line: 788, column: 843, scope: !9999, inlinedAt: !9687)
!9999 = !DILexicalBlockFile(scope: !9982, file: !2043, discriminator: 17)
!10000 = !DILocation(line: 788, column: 840, scope: !9999, inlinedAt: !9687)
!10001 = !DILocation(line: 790, column: 18, scope: !9606, inlinedAt: !9687)
!10002 = !DILocation(line: 790, column: 6, scope: !9606, inlinedAt: !9687)
!10003 = !DILocation(line: 790, column: 10, scope: !9606, inlinedAt: !9687)
!10004 = !DILocation(line: 790, column: 16, scope: !9606, inlinedAt: !9687)
!10005 = !DILocation(line: 792, column: 12, scope: !9606, inlinedAt: !9687)
!10006 = !DILocation(line: 1495, column: 77, scope: !9679)
!10007 = !DILocation(line: 1495, column: 21, scope: !9679)
!10008 = !DILocation(line: 1495, column: 31, scope: !9679)
!10009 = !DILocation(line: 1496, column: 48, scope: !9679)
!10010 = !DILocation(line: 1496, column: 38, scope: !9679)
!10011 = !DILocation(line: 132, column: 9, scope: !5499, inlinedAt: !9678)
!10012 = !DILocation(line: 132, column: 13, scope: !5499, inlinedAt: !9678)
!10013 = !DILocation(line: 132, column: 11, scope: !5499, inlinedAt: !9678)
!10014 = !DILocation(line: 132, column: 9, scope: !5474, inlinedAt: !9678)
!10015 = !DILocation(line: 132, column: 26, scope: !5504, inlinedAt: !9678)
!10016 = !DILocation(line: 132, column: 19, scope: !5504, inlinedAt: !9678)
!10017 = !DILocation(line: 133, column: 14, scope: !5507, inlinedAt: !9678)
!10018 = !DILocation(line: 133, column: 18, scope: !5507, inlinedAt: !9678)
!10019 = !DILocation(line: 133, column: 16, scope: !5507, inlinedAt: !9678)
!10020 = !DILocation(line: 133, column: 14, scope: !5499, inlinedAt: !9678)
!10021 = !DILocation(line: 133, column: 31, scope: !5512, inlinedAt: !9678)
!10022 = !DILocation(line: 133, column: 24, scope: !5512, inlinedAt: !9678)
!10023 = !DILocation(line: 134, column: 17, scope: !5507, inlinedAt: !9678)
!10024 = !DILocation(line: 134, column: 10, scope: !5507, inlinedAt: !9678)
!10025 = !DILocation(line: 135, column: 1, scope: !5474, inlinedAt: !9678)
!10026 = !DILocation(line: 1496, column: 36, scope: !9679)
!10027 = !DILocation(line: 1497, column: 25, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !9679, file: !1800, line: 1497, column: 25)
!10029 = !DILocation(line: 1497, column: 38, scope: !10028)
!10030 = !DILocation(line: 1497, column: 35, scope: !10028)
!10031 = !DILocation(line: 1497, column: 25, scope: !9679)
!10032 = !DILocation(line: 1498, column: 47, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10028, file: !1800, line: 1497, column: 54)
!10034 = !DILocation(line: 1498, column: 51, scope: !10033)
!10035 = !DILocation(line: 1501, column: 47, scope: !10033)
!10036 = !DILocation(line: 1501, column: 58, scope: !10033)
!10037 = !DILocation(line: 1498, column: 25, scope: !10033)
!10038 = !DILocation(line: 1502, column: 21, scope: !10033)
!10039 = !DILocation(line: 1504, column: 37, scope: !9679)
!10040 = !DILocation(line: 1504, column: 35, scope: !9679)
!10041 = !DILocation(line: 1504, column: 24, scope: !9679)
!10042 = !DILocation(line: 1504, column: 21, scope: !9679)
!10043 = !DILocation(line: 1504, column: 29, scope: !9679)
!10044 = !DILocation(line: 1508, column: 17, scope: !9679)
!10045 = !DILocation(line: 1494, column: 38, scope: !10046)
!10046 = !DILexicalBlockFile(scope: !9680, file: !1800, discriminator: 2)
!10047 = !DILocation(line: 1494, column: 45, scope: !10046)
!10048 = !DILocation(line: 1494, column: 17, scope: !10046)
!10049 = distinct !{!10049, !9786}
!10050 = !DILocation(line: 1509, column: 13, scope: !9682)
!10051 = !DILocation(line: 1509, column: 34, scope: !10052)
!10052 = !DILexicalBlockFile(scope: !9614, file: !1800, discriminator: 1)
!10053 = !DILocation(line: 1509, column: 24, scope: !10052)
!10054 = !DILocation(line: 1509, column: 39, scope: !10052)
!10055 = !DILocation(line: 1510, column: 17, scope: !9655)
!10056 = !DILocation(line: 1510, column: 24, scope: !10057)
!10057 = !DILexicalBlockFile(scope: !9653, file: !1800, discriminator: 1)
!10058 = !DILocation(line: 1510, column: 28, scope: !10057)
!10059 = !DILocation(line: 1510, column: 26, scope: !10057)
!10060 = !DILocation(line: 1510, column: 17, scope: !10057)
!10061 = !DILocation(line: 1511, column: 35, scope: !9661)
!10062 = !DILocation(line: 1511, column: 38, scope: !9661)
!10063 = !DILocation(line: 1511, column: 25, scope: !9652)
!10064 = !DILocation(line: 1512, column: 47, scope: !9661)
!10065 = !DILocation(line: 1512, column: 38, scope: !9661)
!10066 = !DILocation(line: 1512, column: 54, scope: !9661)
!10067 = !DILocation(line: 1512, column: 25, scope: !9661)
!10068 = !DILocation(line: 1512, column: 35, scope: !9661)
!10069 = !DILocation(line: 1514, column: 47, scope: !9661)
!10070 = !DILocation(line: 1514, column: 68, scope: !9661)
!10071 = !DILocation(line: 1514, column: 38, scope: !9661)
!10072 = !DILocation(line: 785, column: 30, scope: !9606, inlinedAt: !9660)
!10073 = !DILocation(line: 785, column: 34, scope: !9606, inlinedAt: !9660)
!10074 = !DILocation(line: 785, column: 118, scope: !9606, inlinedAt: !9660)
!10075 = !DILocation(line: 785, column: 122, scope: !9606, inlinedAt: !9660)
!10076 = !DILocation(line: 786, column: 60, scope: !9606, inlinedAt: !9660)
!10077 = !DILocation(line: 786, column: 64, scope: !9606, inlinedAt: !9660)
!10078 = !DILocation(line: 786, column: 74, scope: !9606, inlinedAt: !9660)
!10079 = !DILocation(line: 786, column: 83, scope: !9606, inlinedAt: !9660)
!10080 = !DILocation(line: 786, column: 71, scope: !9606, inlinedAt: !9660)
!10081 = !DILocation(line: 786, column: 92, scope: !9606, inlinedAt: !9660)
!10082 = !DILocation(line: 786, column: 16, scope: !9606, inlinedAt: !9660)
!10083 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !9665)
!10084 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !9665)
!10085 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !9665)
!10086 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !9665)
!10087 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !9665)
!10088 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !9665)
!10089 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !9665)
!10090 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !9665)
!10091 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !9665)
!10092 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !9665)
!10093 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !9665)
!10094 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !9665)
!10095 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !9665)
!10096 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !9665)
!10097 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !9665)
!10098 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !9665)
!10099 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !9665)
!10100 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !9665)
!10101 = !DILocation(line: 786, column: 100, scope: !9606, inlinedAt: !9660)
!10102 = !DILocation(line: 786, column: 109, scope: !9606, inlinedAt: !9660)
!10103 = !DILocation(line: 786, column: 96, scope: !9606, inlinedAt: !9660)
!10104 = !DILocation(line: 786, column: 14, scope: !9606, inlinedAt: !9660)
!10105 = !DILocation(line: 788, column: 64, scope: !9829, inlinedAt: !9660)
!10106 = !DILocation(line: 788, column: 74, scope: !9829, inlinedAt: !9660)
!10107 = !DILocation(line: 788, column: 54, scope: !9829, inlinedAt: !9660)
!10108 = !DILocation(line: 788, column: 52, scope: !9829, inlinedAt: !9660)
!10109 = !DILocation(line: 788, column: 94, scope: !9829, inlinedAt: !9660)
!10110 = !DILocation(line: 788, column: 88, scope: !9829, inlinedAt: !9660)
!10111 = !DILocation(line: 788, column: 86, scope: !9829, inlinedAt: !9660)
!10112 = !DILocation(line: 788, column: 115, scope: !9829, inlinedAt: !9660)
!10113 = !DILocation(line: 788, column: 109, scope: !9829, inlinedAt: !9660)
!10114 = !DILocation(line: 788, column: 107, scope: !9829, inlinedAt: !9660)
!10115 = !DILocation(line: 788, column: 130, scope: !9829, inlinedAt: !9660)
!10116 = !DILocation(line: 788, column: 140, scope: !9829, inlinedAt: !9660)
!10117 = !DILocation(line: 788, column: 144, scope: !9829, inlinedAt: !9660)
!10118 = !DILocation(line: 788, column: 147, scope: !9843, inlinedAt: !9660)
!10119 = !DILocation(line: 788, column: 149, scope: !9843, inlinedAt: !9660)
!10120 = !DILocation(line: 788, column: 130, scope: !9843, inlinedAt: !9660)
!10121 = !DILocation(line: 788, column: 169, scope: !9847, inlinedAt: !9660)
!10122 = !DILocation(line: 788, column: 187, scope: !9847, inlinedAt: !9660)
!10123 = !DILocation(line: 788, column: 199, scope: !9847, inlinedAt: !9660)
!10124 = !DILocation(line: 788, column: 196, scope: !9847, inlinedAt: !9660)
!10125 = !DILocation(line: 788, column: 184, scope: !9847, inlinedAt: !9660)
!10126 = !DILocation(line: 788, column: 168, scope: !9847, inlinedAt: !9660)
!10127 = !DILocation(line: 788, column: 209, scope: !9854, inlinedAt: !9660)
!10128 = !DILocation(line: 788, column: 221, scope: !9854, inlinedAt: !9660)
!10129 = !DILocation(line: 788, column: 218, scope: !9854, inlinedAt: !9660)
!10130 = !DILocation(line: 788, column: 168, scope: !9854, inlinedAt: !9660)
!10131 = !DILocation(line: 788, column: 231, scope: !9859, inlinedAt: !9660)
!10132 = !DILocation(line: 788, column: 168, scope: !9859, inlinedAt: !9660)
!10133 = !DILocation(line: 788, column: 168, scope: !9625, inlinedAt: !9660)
!10134 = !DILocation(line: 788, column: 165, scope: !9625, inlinedAt: !9660)
!10135 = !DILocation(line: 788, column: 303, scope: !9625, inlinedAt: !9660)
!10136 = !DILocation(line: 788, column: 307, scope: !9625, inlinedAt: !9660)
!10137 = !DILocation(line: 788, column: 317, scope: !9625, inlinedAt: !9660)
!10138 = !DILocation(line: 788, column: 326, scope: !9625, inlinedAt: !9660)
!10139 = !DILocation(line: 788, column: 314, scope: !9625, inlinedAt: !9660)
!10140 = !DILocation(line: 788, column: 335, scope: !9625, inlinedAt: !9660)
!10141 = !DILocation(line: 788, column: 259, scope: !9625, inlinedAt: !9660)
!10142 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !9663)
!10143 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !9663)
!10144 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !9663)
!10145 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !9663)
!10146 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !9663)
!10147 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !9663)
!10148 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !9663)
!10149 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !9663)
!10150 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !9663)
!10151 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !9663)
!10152 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !9663)
!10153 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !9663)
!10154 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !9663)
!10155 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !9663)
!10156 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !9663)
!10157 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !9663)
!10158 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !9663)
!10159 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !9663)
!10160 = !DILocation(line: 788, column: 343, scope: !9625, inlinedAt: !9660)
!10161 = !DILocation(line: 788, column: 352, scope: !9625, inlinedAt: !9660)
!10162 = !DILocation(line: 788, column: 339, scope: !9625, inlinedAt: !9660)
!10163 = !DILocation(line: 788, column: 257, scope: !9625, inlinedAt: !9660)
!10164 = !DILocation(line: 788, column: 369, scope: !9625, inlinedAt: !9660)
!10165 = !DILocation(line: 788, column: 368, scope: !9625, inlinedAt: !9660)
!10166 = !DILocation(line: 788, column: 366, scope: !9625, inlinedAt: !9660)
!10167 = !DILocation(line: 788, column: 390, scope: !9625, inlinedAt: !9660)
!10168 = !DILocation(line: 788, column: 400, scope: !9625, inlinedAt: !9660)
!10169 = !DILocation(line: 788, column: 380, scope: !9898, inlinedAt: !9660)
!10170 = !DILocation(line: 788, column: 411, scope: !9625, inlinedAt: !9660)
!10171 = !DILocation(line: 788, column: 409, scope: !9625, inlinedAt: !9660)
!10172 = !DILocation(line: 788, column: 378, scope: !9625, inlinedAt: !9660)
!10173 = !DILocation(line: 788, column: 430, scope: !9625, inlinedAt: !9660)
!10174 = !DILocation(line: 788, column: 424, scope: !9625, inlinedAt: !9660)
!10175 = !DILocation(line: 788, column: 422, scope: !9625, inlinedAt: !9660)
!10176 = !DILocation(line: 788, column: 451, scope: !9625, inlinedAt: !9660)
!10177 = !DILocation(line: 788, column: 445, scope: !9625, inlinedAt: !9660)
!10178 = !DILocation(line: 788, column: 443, scope: !9625, inlinedAt: !9660)
!10179 = !DILocation(line: 788, column: 466, scope: !9625, inlinedAt: !9660)
!10180 = !DILocation(line: 788, column: 476, scope: !9625, inlinedAt: !9660)
!10181 = !DILocation(line: 788, column: 480, scope: !9625, inlinedAt: !9660)
!10182 = !DILocation(line: 788, column: 483, scope: !9912, inlinedAt: !9660)
!10183 = !DILocation(line: 788, column: 485, scope: !9912, inlinedAt: !9660)
!10184 = !DILocation(line: 788, column: 466, scope: !9912, inlinedAt: !9660)
!10185 = !DILocation(line: 788, column: 505, scope: !9916, inlinedAt: !9660)
!10186 = !DILocation(line: 788, column: 523, scope: !9916, inlinedAt: !9660)
!10187 = !DILocation(line: 788, column: 535, scope: !9916, inlinedAt: !9660)
!10188 = !DILocation(line: 788, column: 532, scope: !9916, inlinedAt: !9660)
!10189 = !DILocation(line: 788, column: 520, scope: !9916, inlinedAt: !9660)
!10190 = !DILocation(line: 788, column: 504, scope: !9916, inlinedAt: !9660)
!10191 = !DILocation(line: 788, column: 548, scope: !9923, inlinedAt: !9660)
!10192 = !DILocation(line: 788, column: 560, scope: !9923, inlinedAt: !9660)
!10193 = !DILocation(line: 788, column: 557, scope: !9923, inlinedAt: !9660)
!10194 = !DILocation(line: 788, column: 504, scope: !9923, inlinedAt: !9660)
!10195 = !DILocation(line: 788, column: 573, scope: !9928, inlinedAt: !9660)
!10196 = !DILocation(line: 788, column: 504, scope: !9928, inlinedAt: !9660)
!10197 = !DILocation(line: 788, column: 504, scope: !9600, inlinedAt: !9660)
!10198 = !DILocation(line: 788, column: 501, scope: !9600, inlinedAt: !9660)
!10199 = !DILocation(line: 788, column: 645, scope: !9600, inlinedAt: !9660)
!10200 = !DILocation(line: 788, column: 649, scope: !9600, inlinedAt: !9660)
!10201 = !DILocation(line: 788, column: 659, scope: !9600, inlinedAt: !9660)
!10202 = !DILocation(line: 788, column: 668, scope: !9600, inlinedAt: !9660)
!10203 = !DILocation(line: 788, column: 656, scope: !9600, inlinedAt: !9660)
!10204 = !DILocation(line: 788, column: 677, scope: !9600, inlinedAt: !9660)
!10205 = !DILocation(line: 788, column: 601, scope: !9600, inlinedAt: !9660)
!10206 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !9659)
!10207 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !9659)
!10208 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !9659)
!10209 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !9659)
!10210 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !9659)
!10211 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !9659)
!10212 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !9659)
!10213 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !9659)
!10214 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !9659)
!10215 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !9659)
!10216 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !9659)
!10217 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !9659)
!10218 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !9659)
!10219 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !9659)
!10220 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !9659)
!10221 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !9659)
!10222 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !9659)
!10223 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !9659)
!10224 = !DILocation(line: 788, column: 685, scope: !9600, inlinedAt: !9660)
!10225 = !DILocation(line: 788, column: 694, scope: !9600, inlinedAt: !9660)
!10226 = !DILocation(line: 788, column: 681, scope: !9600, inlinedAt: !9660)
!10227 = !DILocation(line: 788, column: 599, scope: !9600, inlinedAt: !9660)
!10228 = !DILocation(line: 788, column: 711, scope: !9600, inlinedAt: !9660)
!10229 = !DILocation(line: 788, column: 710, scope: !9600, inlinedAt: !9660)
!10230 = !DILocation(line: 788, column: 708, scope: !9600, inlinedAt: !9660)
!10231 = !DILocation(line: 788, column: 732, scope: !9600, inlinedAt: !9660)
!10232 = !DILocation(line: 788, column: 742, scope: !9600, inlinedAt: !9660)
!10233 = !DILocation(line: 788, column: 722, scope: !9967, inlinedAt: !9660)
!10234 = !DILocation(line: 788, column: 753, scope: !9600, inlinedAt: !9660)
!10235 = !DILocation(line: 788, column: 751, scope: !9600, inlinedAt: !9660)
!10236 = !DILocation(line: 788, column: 720, scope: !9600, inlinedAt: !9660)
!10237 = !DILocation(line: 788, column: 772, scope: !9600, inlinedAt: !9660)
!10238 = !DILocation(line: 788, column: 766, scope: !9600, inlinedAt: !9660)
!10239 = !DILocation(line: 788, column: 764, scope: !9600, inlinedAt: !9660)
!10240 = !DILocation(line: 788, column: 793, scope: !9600, inlinedAt: !9660)
!10241 = !DILocation(line: 788, column: 787, scope: !9600, inlinedAt: !9660)
!10242 = !DILocation(line: 788, column: 785, scope: !9600, inlinedAt: !9660)
!10243 = !DILocation(line: 788, column: 804, scope: !9600, inlinedAt: !9660)
!10244 = !DILocation(line: 788, column: 806, scope: !9979, inlinedAt: !9660)
!10245 = !DILocation(line: 788, column: 827, scope: !9981, inlinedAt: !9660)
!10246 = !DILocation(line: 788, column: 822, scope: !9981, inlinedAt: !9660)
!10247 = !DILocation(line: 788, column: 844, scope: !9981, inlinedAt: !9660)
!10248 = !DILocation(line: 788, column: 862, scope: !9981, inlinedAt: !9660)
!10249 = !DILocation(line: 788, column: 874, scope: !9981, inlinedAt: !9660)
!10250 = !DILocation(line: 788, column: 871, scope: !9981, inlinedAt: !9660)
!10251 = !DILocation(line: 788, column: 859, scope: !9981, inlinedAt: !9660)
!10252 = !DILocation(line: 788, column: 843, scope: !9981, inlinedAt: !9660)
!10253 = !DILocation(line: 788, column: 881, scope: !9991, inlinedAt: !9660)
!10254 = !DILocation(line: 788, column: 893, scope: !9991, inlinedAt: !9660)
!10255 = !DILocation(line: 788, column: 890, scope: !9991, inlinedAt: !9660)
!10256 = !DILocation(line: 788, column: 843, scope: !9991, inlinedAt: !9660)
!10257 = !DILocation(line: 788, column: 900, scope: !9996, inlinedAt: !9660)
!10258 = !DILocation(line: 788, column: 843, scope: !9996, inlinedAt: !9660)
!10259 = !DILocation(line: 788, column: 843, scope: !9999, inlinedAt: !9660)
!10260 = !DILocation(line: 788, column: 840, scope: !9999, inlinedAt: !9660)
!10261 = !DILocation(line: 790, column: 18, scope: !9606, inlinedAt: !9660)
!10262 = !DILocation(line: 790, column: 6, scope: !9606, inlinedAt: !9660)
!10263 = !DILocation(line: 790, column: 10, scope: !9606, inlinedAt: !9660)
!10264 = !DILocation(line: 790, column: 16, scope: !9606, inlinedAt: !9660)
!10265 = !DILocation(line: 792, column: 12, scope: !9606, inlinedAt: !9660)
!10266 = !DILocation(line: 1514, column: 81, scope: !9661)
!10267 = !DILocation(line: 1514, column: 25, scope: !9661)
!10268 = !DILocation(line: 1514, column: 35, scope: !9661)
!10269 = !DILocation(line: 1515, column: 48, scope: !9652)
!10270 = !DILocation(line: 1515, column: 38, scope: !9652)
!10271 = !DILocation(line: 132, column: 9, scope: !5499, inlinedAt: !9651)
!10272 = !DILocation(line: 132, column: 13, scope: !5499, inlinedAt: !9651)
!10273 = !DILocation(line: 132, column: 11, scope: !5499, inlinedAt: !9651)
!10274 = !DILocation(line: 132, column: 9, scope: !5474, inlinedAt: !9651)
!10275 = !DILocation(line: 132, column: 26, scope: !5504, inlinedAt: !9651)
!10276 = !DILocation(line: 132, column: 19, scope: !5504, inlinedAt: !9651)
!10277 = !DILocation(line: 133, column: 14, scope: !5507, inlinedAt: !9651)
!10278 = !DILocation(line: 133, column: 18, scope: !5507, inlinedAt: !9651)
!10279 = !DILocation(line: 133, column: 16, scope: !5507, inlinedAt: !9651)
!10280 = !DILocation(line: 133, column: 14, scope: !5499, inlinedAt: !9651)
!10281 = !DILocation(line: 133, column: 31, scope: !5512, inlinedAt: !9651)
!10282 = !DILocation(line: 133, column: 24, scope: !5512, inlinedAt: !9651)
!10283 = !DILocation(line: 134, column: 17, scope: !5507, inlinedAt: !9651)
!10284 = !DILocation(line: 134, column: 10, scope: !5507, inlinedAt: !9651)
!10285 = !DILocation(line: 135, column: 1, scope: !5474, inlinedAt: !9651)
!10286 = !DILocation(line: 1515, column: 36, scope: !9652)
!10287 = !DILocation(line: 1516, column: 25, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !9652, file: !1800, line: 1516, column: 25)
!10289 = !DILocation(line: 1516, column: 38, scope: !10288)
!10290 = !DILocation(line: 1516, column: 35, scope: !10288)
!10291 = !DILocation(line: 1516, column: 25, scope: !9652)
!10292 = !DILocation(line: 1517, column: 47, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10288, file: !1800, line: 1516, column: 54)
!10294 = !DILocation(line: 1517, column: 51, scope: !10293)
!10295 = !DILocation(line: 1520, column: 47, scope: !10293)
!10296 = !DILocation(line: 1520, column: 58, scope: !10293)
!10297 = !DILocation(line: 1517, column: 25, scope: !10293)
!10298 = !DILocation(line: 1521, column: 21, scope: !10293)
!10299 = !DILocation(line: 1523, column: 39, scope: !9652)
!10300 = !DILocation(line: 1523, column: 37, scope: !9652)
!10301 = !DILocation(line: 1523, column: 31, scope: !9652)
!10302 = !DILocation(line: 1523, column: 24, scope: !9652)
!10303 = !DILocation(line: 1523, column: 21, scope: !9652)
!10304 = !DILocation(line: 1523, column: 29, scope: !9652)
!10305 = !DILocation(line: 1527, column: 17, scope: !9652)
!10306 = !DILocation(line: 1510, column: 38, scope: !10307)
!10307 = !DILexicalBlockFile(scope: !9653, file: !1800, discriminator: 2)
!10308 = !DILocation(line: 1510, column: 45, scope: !10307)
!10309 = !DILocation(line: 1510, column: 17, scope: !10307)
!10310 = distinct !{!10310, !10055}
!10311 = !DILocation(line: 1528, column: 13, scope: !9655)
!10312 = !DILocation(line: 1529, column: 17, scope: !9613)
!10313 = !DILocation(line: 1529, column: 24, scope: !10314)
!10314 = !DILexicalBlockFile(scope: !9611, file: !1800, discriminator: 1)
!10315 = !DILocation(line: 1529, column: 28, scope: !10314)
!10316 = !DILocation(line: 1529, column: 26, scope: !10314)
!10317 = !DILocation(line: 1529, column: 17, scope: !10314)
!10318 = !DILocation(line: 1530, column: 43, scope: !9610)
!10319 = !DILocation(line: 1530, column: 64, scope: !9610)
!10320 = !DILocation(line: 1530, column: 34, scope: !9610)
!10321 = !DILocation(line: 785, column: 30, scope: !9606, inlinedAt: !9609)
!10322 = !DILocation(line: 785, column: 34, scope: !9606, inlinedAt: !9609)
!10323 = !DILocation(line: 785, column: 118, scope: !9606, inlinedAt: !9609)
!10324 = !DILocation(line: 785, column: 122, scope: !9606, inlinedAt: !9609)
!10325 = !DILocation(line: 786, column: 60, scope: !9606, inlinedAt: !9609)
!10326 = !DILocation(line: 786, column: 64, scope: !9606, inlinedAt: !9609)
!10327 = !DILocation(line: 786, column: 74, scope: !9606, inlinedAt: !9609)
!10328 = !DILocation(line: 786, column: 83, scope: !9606, inlinedAt: !9609)
!10329 = !DILocation(line: 786, column: 71, scope: !9606, inlinedAt: !9609)
!10330 = !DILocation(line: 786, column: 92, scope: !9606, inlinedAt: !9609)
!10331 = !DILocation(line: 786, column: 16, scope: !9606, inlinedAt: !9609)
!10332 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !9627)
!10333 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !9627)
!10334 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !9627)
!10335 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !9627)
!10336 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !9627)
!10337 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !9627)
!10338 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !9627)
!10339 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !9627)
!10340 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !9627)
!10341 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !9627)
!10342 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !9627)
!10343 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !9627)
!10344 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !9627)
!10345 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !9627)
!10346 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !9627)
!10347 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !9627)
!10348 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !9627)
!10349 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !9627)
!10350 = !DILocation(line: 786, column: 100, scope: !9606, inlinedAt: !9609)
!10351 = !DILocation(line: 786, column: 109, scope: !9606, inlinedAt: !9609)
!10352 = !DILocation(line: 786, column: 96, scope: !9606, inlinedAt: !9609)
!10353 = !DILocation(line: 786, column: 14, scope: !9606, inlinedAt: !9609)
!10354 = !DILocation(line: 788, column: 64, scope: !9829, inlinedAt: !9609)
!10355 = !DILocation(line: 788, column: 74, scope: !9829, inlinedAt: !9609)
!10356 = !DILocation(line: 788, column: 54, scope: !9829, inlinedAt: !9609)
!10357 = !DILocation(line: 788, column: 52, scope: !9829, inlinedAt: !9609)
!10358 = !DILocation(line: 788, column: 94, scope: !9829, inlinedAt: !9609)
!10359 = !DILocation(line: 788, column: 88, scope: !9829, inlinedAt: !9609)
!10360 = !DILocation(line: 788, column: 86, scope: !9829, inlinedAt: !9609)
!10361 = !DILocation(line: 788, column: 115, scope: !9829, inlinedAt: !9609)
!10362 = !DILocation(line: 788, column: 109, scope: !9829, inlinedAt: !9609)
!10363 = !DILocation(line: 788, column: 107, scope: !9829, inlinedAt: !9609)
!10364 = !DILocation(line: 788, column: 130, scope: !9829, inlinedAt: !9609)
!10365 = !DILocation(line: 788, column: 140, scope: !9829, inlinedAt: !9609)
!10366 = !DILocation(line: 788, column: 144, scope: !9829, inlinedAt: !9609)
!10367 = !DILocation(line: 788, column: 147, scope: !9843, inlinedAt: !9609)
!10368 = !DILocation(line: 788, column: 149, scope: !9843, inlinedAt: !9609)
!10369 = !DILocation(line: 788, column: 130, scope: !9843, inlinedAt: !9609)
!10370 = !DILocation(line: 788, column: 169, scope: !9847, inlinedAt: !9609)
!10371 = !DILocation(line: 788, column: 187, scope: !9847, inlinedAt: !9609)
!10372 = !DILocation(line: 788, column: 199, scope: !9847, inlinedAt: !9609)
!10373 = !DILocation(line: 788, column: 196, scope: !9847, inlinedAt: !9609)
!10374 = !DILocation(line: 788, column: 184, scope: !9847, inlinedAt: !9609)
!10375 = !DILocation(line: 788, column: 168, scope: !9847, inlinedAt: !9609)
!10376 = !DILocation(line: 788, column: 209, scope: !9854, inlinedAt: !9609)
!10377 = !DILocation(line: 788, column: 221, scope: !9854, inlinedAt: !9609)
!10378 = !DILocation(line: 788, column: 218, scope: !9854, inlinedAt: !9609)
!10379 = !DILocation(line: 788, column: 168, scope: !9854, inlinedAt: !9609)
!10380 = !DILocation(line: 788, column: 231, scope: !9859, inlinedAt: !9609)
!10381 = !DILocation(line: 788, column: 168, scope: !9859, inlinedAt: !9609)
!10382 = !DILocation(line: 788, column: 168, scope: !9625, inlinedAt: !9609)
!10383 = !DILocation(line: 788, column: 165, scope: !9625, inlinedAt: !9609)
!10384 = !DILocation(line: 788, column: 303, scope: !9625, inlinedAt: !9609)
!10385 = !DILocation(line: 788, column: 307, scope: !9625, inlinedAt: !9609)
!10386 = !DILocation(line: 788, column: 317, scope: !9625, inlinedAt: !9609)
!10387 = !DILocation(line: 788, column: 326, scope: !9625, inlinedAt: !9609)
!10388 = !DILocation(line: 788, column: 314, scope: !9625, inlinedAt: !9609)
!10389 = !DILocation(line: 788, column: 335, scope: !9625, inlinedAt: !9609)
!10390 = !DILocation(line: 788, column: 259, scope: !9625, inlinedAt: !9609)
!10391 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !9624)
!10392 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !9624)
!10393 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !9624)
!10394 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !9624)
!10395 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !9624)
!10396 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !9624)
!10397 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !9624)
!10398 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !9624)
!10399 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !9624)
!10400 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !9624)
!10401 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !9624)
!10402 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !9624)
!10403 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !9624)
!10404 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !9624)
!10405 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !9624)
!10406 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !9624)
!10407 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !9624)
!10408 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !9624)
!10409 = !DILocation(line: 788, column: 343, scope: !9625, inlinedAt: !9609)
!10410 = !DILocation(line: 788, column: 352, scope: !9625, inlinedAt: !9609)
!10411 = !DILocation(line: 788, column: 339, scope: !9625, inlinedAt: !9609)
!10412 = !DILocation(line: 788, column: 257, scope: !9625, inlinedAt: !9609)
!10413 = !DILocation(line: 788, column: 369, scope: !9625, inlinedAt: !9609)
!10414 = !DILocation(line: 788, column: 368, scope: !9625, inlinedAt: !9609)
!10415 = !DILocation(line: 788, column: 366, scope: !9625, inlinedAt: !9609)
!10416 = !DILocation(line: 788, column: 390, scope: !9625, inlinedAt: !9609)
!10417 = !DILocation(line: 788, column: 400, scope: !9625, inlinedAt: !9609)
!10418 = !DILocation(line: 788, column: 380, scope: !9898, inlinedAt: !9609)
!10419 = !DILocation(line: 788, column: 411, scope: !9625, inlinedAt: !9609)
!10420 = !DILocation(line: 788, column: 409, scope: !9625, inlinedAt: !9609)
!10421 = !DILocation(line: 788, column: 378, scope: !9625, inlinedAt: !9609)
!10422 = !DILocation(line: 788, column: 430, scope: !9625, inlinedAt: !9609)
!10423 = !DILocation(line: 788, column: 424, scope: !9625, inlinedAt: !9609)
!10424 = !DILocation(line: 788, column: 422, scope: !9625, inlinedAt: !9609)
!10425 = !DILocation(line: 788, column: 451, scope: !9625, inlinedAt: !9609)
!10426 = !DILocation(line: 788, column: 445, scope: !9625, inlinedAt: !9609)
!10427 = !DILocation(line: 788, column: 443, scope: !9625, inlinedAt: !9609)
!10428 = !DILocation(line: 788, column: 466, scope: !9625, inlinedAt: !9609)
!10429 = !DILocation(line: 788, column: 476, scope: !9625, inlinedAt: !9609)
!10430 = !DILocation(line: 788, column: 480, scope: !9625, inlinedAt: !9609)
!10431 = !DILocation(line: 788, column: 483, scope: !9912, inlinedAt: !9609)
!10432 = !DILocation(line: 788, column: 485, scope: !9912, inlinedAt: !9609)
!10433 = !DILocation(line: 788, column: 466, scope: !9912, inlinedAt: !9609)
!10434 = !DILocation(line: 788, column: 505, scope: !9916, inlinedAt: !9609)
!10435 = !DILocation(line: 788, column: 523, scope: !9916, inlinedAt: !9609)
!10436 = !DILocation(line: 788, column: 535, scope: !9916, inlinedAt: !9609)
!10437 = !DILocation(line: 788, column: 532, scope: !9916, inlinedAt: !9609)
!10438 = !DILocation(line: 788, column: 520, scope: !9916, inlinedAt: !9609)
!10439 = !DILocation(line: 788, column: 504, scope: !9916, inlinedAt: !9609)
!10440 = !DILocation(line: 788, column: 548, scope: !9923, inlinedAt: !9609)
!10441 = !DILocation(line: 788, column: 560, scope: !9923, inlinedAt: !9609)
!10442 = !DILocation(line: 788, column: 557, scope: !9923, inlinedAt: !9609)
!10443 = !DILocation(line: 788, column: 504, scope: !9923, inlinedAt: !9609)
!10444 = !DILocation(line: 788, column: 573, scope: !9928, inlinedAt: !9609)
!10445 = !DILocation(line: 788, column: 504, scope: !9928, inlinedAt: !9609)
!10446 = !DILocation(line: 788, column: 504, scope: !9600, inlinedAt: !9609)
!10447 = !DILocation(line: 788, column: 501, scope: !9600, inlinedAt: !9609)
!10448 = !DILocation(line: 788, column: 645, scope: !9600, inlinedAt: !9609)
!10449 = !DILocation(line: 788, column: 649, scope: !9600, inlinedAt: !9609)
!10450 = !DILocation(line: 788, column: 659, scope: !9600, inlinedAt: !9609)
!10451 = !DILocation(line: 788, column: 668, scope: !9600, inlinedAt: !9609)
!10452 = !DILocation(line: 788, column: 656, scope: !9600, inlinedAt: !9609)
!10453 = !DILocation(line: 788, column: 677, scope: !9600, inlinedAt: !9609)
!10454 = !DILocation(line: 788, column: 601, scope: !9600, inlinedAt: !9609)
!10455 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !9599)
!10456 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !9599)
!10457 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !9599)
!10458 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !9599)
!10459 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !9599)
!10460 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !9599)
!10461 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !9599)
!10462 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !9599)
!10463 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !9599)
!10464 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !9599)
!10465 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !9599)
!10466 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !9599)
!10467 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !9599)
!10468 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !9599)
!10469 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !9599)
!10470 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !9599)
!10471 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !9599)
!10472 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !9599)
!10473 = !DILocation(line: 788, column: 685, scope: !9600, inlinedAt: !9609)
!10474 = !DILocation(line: 788, column: 694, scope: !9600, inlinedAt: !9609)
!10475 = !DILocation(line: 788, column: 681, scope: !9600, inlinedAt: !9609)
!10476 = !DILocation(line: 788, column: 599, scope: !9600, inlinedAt: !9609)
!10477 = !DILocation(line: 788, column: 711, scope: !9600, inlinedAt: !9609)
!10478 = !DILocation(line: 788, column: 710, scope: !9600, inlinedAt: !9609)
!10479 = !DILocation(line: 788, column: 708, scope: !9600, inlinedAt: !9609)
!10480 = !DILocation(line: 788, column: 732, scope: !9600, inlinedAt: !9609)
!10481 = !DILocation(line: 788, column: 742, scope: !9600, inlinedAt: !9609)
!10482 = !DILocation(line: 788, column: 722, scope: !9967, inlinedAt: !9609)
!10483 = !DILocation(line: 788, column: 753, scope: !9600, inlinedAt: !9609)
!10484 = !DILocation(line: 788, column: 751, scope: !9600, inlinedAt: !9609)
!10485 = !DILocation(line: 788, column: 720, scope: !9600, inlinedAt: !9609)
!10486 = !DILocation(line: 788, column: 772, scope: !9600, inlinedAt: !9609)
!10487 = !DILocation(line: 788, column: 766, scope: !9600, inlinedAt: !9609)
!10488 = !DILocation(line: 788, column: 764, scope: !9600, inlinedAt: !9609)
!10489 = !DILocation(line: 788, column: 793, scope: !9600, inlinedAt: !9609)
!10490 = !DILocation(line: 788, column: 787, scope: !9600, inlinedAt: !9609)
!10491 = !DILocation(line: 788, column: 785, scope: !9600, inlinedAt: !9609)
!10492 = !DILocation(line: 788, column: 804, scope: !9600, inlinedAt: !9609)
!10493 = !DILocation(line: 788, column: 806, scope: !9979, inlinedAt: !9609)
!10494 = !DILocation(line: 788, column: 827, scope: !9981, inlinedAt: !9609)
!10495 = !DILocation(line: 788, column: 822, scope: !9981, inlinedAt: !9609)
!10496 = !DILocation(line: 788, column: 844, scope: !9981, inlinedAt: !9609)
!10497 = !DILocation(line: 788, column: 862, scope: !9981, inlinedAt: !9609)
!10498 = !DILocation(line: 788, column: 874, scope: !9981, inlinedAt: !9609)
!10499 = !DILocation(line: 788, column: 871, scope: !9981, inlinedAt: !9609)
!10500 = !DILocation(line: 788, column: 859, scope: !9981, inlinedAt: !9609)
!10501 = !DILocation(line: 788, column: 843, scope: !9981, inlinedAt: !9609)
!10502 = !DILocation(line: 788, column: 881, scope: !9991, inlinedAt: !9609)
!10503 = !DILocation(line: 788, column: 893, scope: !9991, inlinedAt: !9609)
!10504 = !DILocation(line: 788, column: 890, scope: !9991, inlinedAt: !9609)
!10505 = !DILocation(line: 788, column: 843, scope: !9991, inlinedAt: !9609)
!10506 = !DILocation(line: 788, column: 900, scope: !9996, inlinedAt: !9609)
!10507 = !DILocation(line: 788, column: 843, scope: !9996, inlinedAt: !9609)
!10508 = !DILocation(line: 788, column: 843, scope: !9999, inlinedAt: !9609)
!10509 = !DILocation(line: 788, column: 840, scope: !9999, inlinedAt: !9609)
!10510 = !DILocation(line: 790, column: 18, scope: !9606, inlinedAt: !9609)
!10511 = !DILocation(line: 790, column: 6, scope: !9606, inlinedAt: !9609)
!10512 = !DILocation(line: 790, column: 10, scope: !9606, inlinedAt: !9609)
!10513 = !DILocation(line: 790, column: 16, scope: !9606, inlinedAt: !9609)
!10514 = !DILocation(line: 792, column: 12, scope: !9606, inlinedAt: !9609)
!10515 = !DILocation(line: 1530, column: 77, scope: !9610)
!10516 = !DILocation(line: 1530, column: 21, scope: !9610)
!10517 = !DILocation(line: 1530, column: 31, scope: !9610)
!10518 = !DILocation(line: 1531, column: 25, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !9610, file: !1800, line: 1531, column: 25)
!10520 = !DILocation(line: 1531, column: 35, scope: !10519)
!10521 = !DILocation(line: 1531, column: 25, scope: !9610)
!10522 = !DILocation(line: 1532, column: 32, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10519, file: !1800, line: 1531, column: 43)
!10524 = !DILocation(line: 1532, column: 36, scope: !10523)
!10525 = !DILocation(line: 1533, column: 68, scope: !10523)
!10526 = !DILocation(line: 1532, column: 25, scope: !10523)
!10527 = !DILocation(line: 1534, column: 25, scope: !10523)
!10528 = !DILocation(line: 1537, column: 32, scope: !9610)
!10529 = !DILocation(line: 1537, column: 31, scope: !9610)
!10530 = !DILocation(line: 1537, column: 24, scope: !9610)
!10531 = !DILocation(line: 1537, column: 21, scope: !9610)
!10532 = !DILocation(line: 1537, column: 29, scope: !9610)
!10533 = !DILocation(line: 1541, column: 17, scope: !9610)
!10534 = !DILocation(line: 1529, column: 38, scope: !10535)
!10535 = !DILexicalBlockFile(scope: !9611, file: !1800, discriminator: 2)
!10536 = !DILocation(line: 1529, column: 45, scope: !10535)
!10537 = !DILocation(line: 1529, column: 17, scope: !10535)
!10538 = distinct !{!10538, !10312}
!10539 = !DILocation(line: 1487, column: 9, scope: !10540)
!10540 = !DILexicalBlockFile(scope: !9618, file: !1800, discriminator: 2)
!10541 = distinct !{!10541, !10542}
!10542 = !DILocation(line: 1487, column: 9, scope: !9620)
!10543 = !DILocation(line: 1544, column: 5, scope: !9620)
!10544 = !DILocation(line: 1486, column: 46, scope: !10545)
!10545 = !DILexicalBlockFile(scope: !9621, file: !1800, discriminator: 2)
!10546 = !DILocation(line: 1486, column: 5, scope: !10545)
!10547 = distinct !{!10547, !10548}
!10548 = !DILocation(line: 1486, column: 5, scope: !9595)
!10549 = !DILocation(line: 1545, column: 5, scope: !9595)
!10550 = !DILocation(line: 1546, column: 1, scope: !9595)
!10551 = distinct !DISubprogram(name: "decode_pulses", scope: !1800, file: !1800, line: 1551, type: !10552, isLocal: true, isDefinition: true, scopeLine: 1553, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!10552 = !DISubroutineType(types: !10553)
!10553 = !{!1012, !10554, !2041, !1935, !1012}
!10554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64, align: 64)
!10555 = !DILocalVariable(name: "pulse", arg: 1, scope: !10551, file: !1800, line: 1551, type: !10554)
!10556 = !DILocation(line: 1551, column: 33, scope: !10551)
!10557 = !DILocalVariable(name: "gb", arg: 2, scope: !10551, file: !1800, line: 1551, type: !2041)
!10558 = !DILocation(line: 1551, column: 55, scope: !10551)
!10559 = !DILocalVariable(name: "swb_offset", arg: 3, scope: !10551, file: !1800, line: 1552, type: !1935)
!10560 = !DILocation(line: 1552, column: 42, scope: !10551)
!10561 = !DILocalVariable(name: "num_swb", arg: 4, scope: !10551, file: !1800, line: 1552, type: !1012)
!10562 = !DILocation(line: 1552, column: 58, scope: !10551)
!10563 = !DILocalVariable(name: "i", scope: !10551, file: !1800, line: 1554, type: !1012)
!10564 = !DILocation(line: 1554, column: 9, scope: !10551)
!10565 = !DILocalVariable(name: "pulse_swb", scope: !10551, file: !1800, line: 1554, type: !1012)
!10566 = !DILocation(line: 1554, column: 12, scope: !10551)
!10567 = !DILocation(line: 1555, column: 33, scope: !10551)
!10568 = !DILocation(line: 1555, column: 24, scope: !10551)
!10569 = !DILocation(line: 1555, column: 40, scope: !10551)
!10570 = !DILocation(line: 1555, column: 5, scope: !10551)
!10571 = !DILocation(line: 1555, column: 12, scope: !10551)
!10572 = !DILocation(line: 1555, column: 22, scope: !10551)
!10573 = !DILocation(line: 1556, column: 26, scope: !10551)
!10574 = !DILocation(line: 1556, column: 17, scope: !10551)
!10575 = !DILocation(line: 1556, column: 15, scope: !10551)
!10576 = !DILocation(line: 1557, column: 9, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10551, file: !1800, line: 1557, column: 9)
!10578 = !DILocation(line: 1557, column: 22, scope: !10577)
!10579 = !DILocation(line: 1557, column: 19, scope: !10577)
!10580 = !DILocation(line: 1557, column: 9, scope: !10551)
!10581 = !DILocation(line: 1558, column: 9, scope: !10577)
!10582 = !DILocation(line: 1559, column: 32, scope: !10551)
!10583 = !DILocation(line: 1559, column: 21, scope: !10551)
!10584 = !DILocation(line: 1559, column: 5, scope: !10551)
!10585 = !DILocation(line: 1559, column: 12, scope: !10551)
!10586 = !DILocation(line: 1559, column: 19, scope: !10551)
!10587 = !DILocation(line: 1560, column: 31, scope: !10551)
!10588 = !DILocation(line: 1560, column: 22, scope: !10551)
!10589 = !DILocation(line: 1560, column: 5, scope: !10551)
!10590 = !DILocation(line: 1560, column: 12, scope: !10551)
!10591 = !DILocation(line: 1560, column: 19, scope: !10551)
!10592 = !DILocation(line: 1561, column: 9, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10551, file: !1800, line: 1561, column: 9)
!10594 = !DILocation(line: 1561, column: 16, scope: !10593)
!10595 = !DILocation(line: 1561, column: 37, scope: !10593)
!10596 = !DILocation(line: 1561, column: 26, scope: !10593)
!10597 = !DILocation(line: 1561, column: 23, scope: !10593)
!10598 = !DILocation(line: 1561, column: 9, scope: !10551)
!10599 = !DILocation(line: 1562, column: 9, scope: !10593)
!10600 = !DILocation(line: 1563, column: 30, scope: !10551)
!10601 = !DILocation(line: 1563, column: 21, scope: !10551)
!10602 = !DILocation(line: 1563, column: 5, scope: !10551)
!10603 = !DILocation(line: 1563, column: 12, scope: !10551)
!10604 = !DILocation(line: 1563, column: 19, scope: !10551)
!10605 = !DILocation(line: 1564, column: 12, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10551, file: !1800, line: 1564, column: 5)
!10607 = !DILocation(line: 1564, column: 10, scope: !10606)
!10608 = !DILocation(line: 1564, column: 17, scope: !10609)
!10609 = !DILexicalBlockFile(scope: !10610, file: !1800, discriminator: 1)
!10610 = distinct !DILexicalBlock(scope: !10606, file: !1800, line: 1564, column: 5)
!10611 = !DILocation(line: 1564, column: 21, scope: !10609)
!10612 = !DILocation(line: 1564, column: 28, scope: !10609)
!10613 = !DILocation(line: 1564, column: 19, scope: !10609)
!10614 = !DILocation(line: 1564, column: 5, scope: !10609)
!10615 = !DILocation(line: 1565, column: 34, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10610, file: !1800, line: 1564, column: 44)
!10617 = !DILocation(line: 1565, column: 25, scope: !10616)
!10618 = !DILocation(line: 1565, column: 54, scope: !10616)
!10619 = !DILocation(line: 1565, column: 56, scope: !10616)
!10620 = !DILocation(line: 1565, column: 43, scope: !10616)
!10621 = !DILocation(line: 1565, column: 50, scope: !10616)
!10622 = !DILocation(line: 1565, column: 41, scope: !10616)
!10623 = !DILocation(line: 1565, column: 20, scope: !10616)
!10624 = !DILocation(line: 1565, column: 9, scope: !10616)
!10625 = !DILocation(line: 1565, column: 16, scope: !10616)
!10626 = !DILocation(line: 1565, column: 23, scope: !10616)
!10627 = !DILocation(line: 1566, column: 24, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10616, file: !1800, line: 1566, column: 13)
!10629 = !DILocation(line: 1566, column: 13, scope: !10628)
!10630 = !DILocation(line: 1566, column: 20, scope: !10628)
!10631 = !DILocation(line: 1566, column: 41, scope: !10628)
!10632 = !DILocation(line: 1566, column: 30, scope: !10628)
!10633 = !DILocation(line: 1566, column: 27, scope: !10628)
!10634 = !DILocation(line: 1566, column: 13, scope: !10616)
!10635 = !DILocation(line: 1567, column: 13, scope: !10628)
!10636 = !DILocation(line: 1568, column: 34, scope: !10616)
!10637 = !DILocation(line: 1568, column: 25, scope: !10616)
!10638 = !DILocation(line: 1568, column: 20, scope: !10616)
!10639 = !DILocation(line: 1568, column: 9, scope: !10616)
!10640 = !DILocation(line: 1568, column: 16, scope: !10616)
!10641 = !DILocation(line: 1568, column: 23, scope: !10616)
!10642 = !DILocation(line: 1569, column: 5, scope: !10616)
!10643 = !DILocation(line: 1564, column: 40, scope: !10644)
!10644 = !DILexicalBlockFile(scope: !10610, file: !1800, discriminator: 2)
!10645 = !DILocation(line: 1564, column: 5, scope: !10644)
!10646 = distinct !{!10646, !10647}
!10647 = !DILocation(line: 1564, column: 5, scope: !10551)
!10648 = !DILocation(line: 1570, column: 5, scope: !10551)
!10649 = !DILocation(line: 1571, column: 1, scope: !10551)
!10650 = distinct !DISubprogram(name: "decode_tns", scope: !1800, file: !1800, line: 1578, type: !10651, isLocal: true, isDefinition: true, scopeLine: 1580, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!10651 = !DISubroutineType(types: !10652)
!10652 = !{!1012, !2071, !2615, !2041, !10653}
!10653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10654, size: 64, align: 64)
!10654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1911)
!10655 = !DILocalVariable(name: "ac", arg: 1, scope: !10650, file: !1800, line: 1578, type: !2071)
!10656 = !DILocation(line: 1578, column: 35, scope: !10650)
!10657 = !DILocalVariable(name: "tns", arg: 2, scope: !10650, file: !1800, line: 1578, type: !2615)
!10658 = !DILocation(line: 1578, column: 61, scope: !10650)
!10659 = !DILocalVariable(name: "gb", arg: 3, scope: !10650, file: !1800, line: 1579, type: !2041)
!10660 = !DILocation(line: 1579, column: 38, scope: !10650)
!10661 = !DILocalVariable(name: "ics", arg: 4, scope: !10650, file: !1800, line: 1579, type: !10653)
!10662 = !DILocation(line: 1579, column: 73, scope: !10650)
!10663 = !DILocalVariable(name: "w", scope: !10650, file: !1800, line: 1581, type: !1012)
!10664 = !DILocation(line: 1581, column: 9, scope: !10650)
!10665 = !DILocalVariable(name: "filt", scope: !10650, file: !1800, line: 1581, type: !1012)
!10666 = !DILocation(line: 1581, column: 12, scope: !10650)
!10667 = !DILocalVariable(name: "i", scope: !10650, file: !1800, line: 1581, type: !1012)
!10668 = !DILocation(line: 1581, column: 18, scope: !10650)
!10669 = !DILocalVariable(name: "coef_len", scope: !10650, file: !1800, line: 1581, type: !1012)
!10670 = !DILocation(line: 1581, column: 21, scope: !10650)
!10671 = !DILocalVariable(name: "coef_res", scope: !10650, file: !1800, line: 1581, type: !1012)
!10672 = !DILocation(line: 1581, column: 31, scope: !10650)
!10673 = !DILocalVariable(name: "coef_compress", scope: !10650, file: !1800, line: 1581, type: !1012)
!10674 = !DILocation(line: 1581, column: 41, scope: !10650)
!10675 = !DILocalVariable(name: "is8", scope: !10650, file: !1800, line: 1582, type: !1162)
!10676 = !DILocation(line: 1582, column: 15, scope: !10650)
!10677 = !DILocation(line: 1582, column: 21, scope: !10650)
!10678 = !DILocation(line: 1582, column: 26, scope: !10650)
!10679 = !DILocation(line: 1582, column: 45, scope: !10650)
!10680 = !DILocalVariable(name: "tns_max_order", scope: !10650, file: !1800, line: 1583, type: !1162)
!10681 = !DILocation(line: 1583, column: 15, scope: !10650)
!10682 = !DILocation(line: 1583, column: 31, scope: !10650)
!10683 = !DILocation(line: 1583, column: 31, scope: !10684)
!10684 = !DILexicalBlockFile(scope: !10650, file: !1800, discriminator: 1)
!10685 = !DILocation(line: 1583, column: 41, scope: !10686)
!10686 = !DILexicalBlockFile(scope: !10650, file: !1800, discriminator: 2)
!10687 = !DILocation(line: 1583, column: 45, scope: !10686)
!10688 = !DILocation(line: 1583, column: 51, scope: !10686)
!10689 = !DILocation(line: 1583, column: 56, scope: !10686)
!10690 = !DILocation(line: 1583, column: 68, scope: !10686)
!10691 = !DILocation(line: 1583, column: 31, scope: !10686)
!10692 = !DILocation(line: 1583, column: 31, scope: !10693)
!10693 = !DILexicalBlockFile(scope: !10650, file: !1800, discriminator: 3)
!10694 = !DILocation(line: 1583, column: 15, scope: !10693)
!10695 = !DILocation(line: 1584, column: 12, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10650, file: !1800, line: 1584, column: 5)
!10697 = !DILocation(line: 1584, column: 10, scope: !10696)
!10698 = !DILocation(line: 1584, column: 17, scope: !10699)
!10699 = !DILexicalBlockFile(scope: !10700, file: !1800, discriminator: 1)
!10700 = distinct !DILexicalBlock(scope: !10696, file: !1800, line: 1584, column: 5)
!10701 = !DILocation(line: 1584, column: 21, scope: !10699)
!10702 = !DILocation(line: 1584, column: 26, scope: !10699)
!10703 = !DILocation(line: 1584, column: 19, scope: !10699)
!10704 = !DILocation(line: 1584, column: 5, scope: !10699)
!10705 = !DILocation(line: 1585, column: 40, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10707, file: !1800, line: 1585, column: 13)
!10707 = distinct !DILexicalBlock(scope: !10700, file: !1800, line: 1584, column: 44)
!10708 = !DILocation(line: 1585, column: 48, scope: !10706)
!10709 = !DILocation(line: 1585, column: 46, scope: !10706)
!10710 = !DILocation(line: 1585, column: 31, scope: !10706)
!10711 = !DILocation(line: 1585, column: 26, scope: !10706)
!10712 = !DILocation(line: 1585, column: 14, scope: !10706)
!10713 = !DILocation(line: 1585, column: 19, scope: !10706)
!10714 = !DILocation(line: 1585, column: 29, scope: !10706)
!10715 = !DILocation(line: 1585, column: 13, scope: !10707)
!10716 = !DILocation(line: 1586, column: 34, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10706, file: !1800, line: 1585, column: 55)
!10718 = !DILocation(line: 1586, column: 24, scope: !10717)
!10719 = !DILocation(line: 1586, column: 22, scope: !10717)
!10720 = !DILocation(line: 1588, column: 23, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10717, file: !1800, line: 1588, column: 13)
!10722 = !DILocation(line: 1588, column: 18, scope: !10721)
!10723 = !DILocation(line: 1588, column: 28, scope: !10724)
!10724 = !DILexicalBlockFile(scope: !10725, file: !1800, discriminator: 1)
!10725 = distinct !DILexicalBlock(scope: !10721, file: !1800, line: 1588, column: 13)
!10726 = !DILocation(line: 1588, column: 47, scope: !10724)
!10727 = !DILocation(line: 1588, column: 35, scope: !10724)
!10728 = !DILocation(line: 1588, column: 40, scope: !10724)
!10729 = !DILocation(line: 1588, column: 33, scope: !10724)
!10730 = !DILocation(line: 1588, column: 13, scope: !10724)
!10731 = !DILocalVariable(name: "tmp2_idx", scope: !10732, file: !1800, line: 1589, type: !1012)
!10732 = distinct !DILexicalBlock(scope: !10725, file: !1800, line: 1588, column: 59)
!10733 = !DILocation(line: 1589, column: 21, scope: !10732)
!10734 = !DILocation(line: 1590, column: 49, scope: !10732)
!10735 = !DILocation(line: 1590, column: 61, scope: !10732)
!10736 = !DILocation(line: 1590, column: 59, scope: !10732)
!10737 = !DILocation(line: 1590, column: 55, scope: !10732)
!10738 = !DILocation(line: 1590, column: 40, scope: !10732)
!10739 = !DILocation(line: 1590, column: 32, scope: !10732)
!10740 = !DILocation(line: 1590, column: 17, scope: !10732)
!10741 = !DILocation(line: 1590, column: 29, scope: !10732)
!10742 = !DILocation(line: 1590, column: 22, scope: !10732)
!10743 = !DILocation(line: 1590, column: 38, scope: !10732)
!10744 = !DILocation(line: 1592, column: 53, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10732, file: !1800, line: 1592, column: 21)
!10746 = !DILocation(line: 1592, column: 65, scope: !10745)
!10747 = !DILocation(line: 1592, column: 63, scope: !10745)
!10748 = !DILocation(line: 1592, column: 59, scope: !10745)
!10749 = !DILocation(line: 1592, column: 44, scope: !10745)
!10750 = !DILocation(line: 1592, column: 36, scope: !10745)
!10751 = !DILocation(line: 1592, column: 22, scope: !10745)
!10752 = !DILocation(line: 1592, column: 33, scope: !10745)
!10753 = !DILocation(line: 1592, column: 27, scope: !10745)
!10754 = !DILocation(line: 1592, column: 42, scope: !10745)
!10755 = !DILocation(line: 1592, column: 73, scope: !10745)
!10756 = !DILocation(line: 1592, column: 71, scope: !10745)
!10757 = !DILocation(line: 1592, column: 21, scope: !10732)
!10758 = !DILocation(line: 1593, column: 28, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10745, file: !1800, line: 1592, column: 88)
!10760 = !DILocation(line: 1593, column: 32, scope: !10759)
!10761 = !DILocation(line: 1595, column: 42, scope: !10759)
!10762 = !DILocation(line: 1595, column: 28, scope: !10759)
!10763 = !DILocation(line: 1595, column: 39, scope: !10759)
!10764 = !DILocation(line: 1595, column: 33, scope: !10759)
!10765 = !DILocation(line: 1595, column: 49, scope: !10759)
!10766 = !DILocation(line: 1593, column: 21, scope: !10759)
!10767 = !DILocation(line: 1596, column: 35, scope: !10759)
!10768 = !DILocation(line: 1596, column: 21, scope: !10759)
!10769 = !DILocation(line: 1596, column: 32, scope: !10759)
!10770 = !DILocation(line: 1596, column: 26, scope: !10759)
!10771 = !DILocation(line: 1596, column: 41, scope: !10759)
!10772 = !DILocation(line: 1597, column: 21, scope: !10759)
!10773 = !DILocation(line: 1599, column: 35, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10732, file: !1800, line: 1599, column: 21)
!10775 = !DILocation(line: 1599, column: 21, scope: !10774)
!10776 = !DILocation(line: 1599, column: 32, scope: !10774)
!10777 = !DILocation(line: 1599, column: 26, scope: !10774)
!10778 = !DILocation(line: 1599, column: 21, scope: !10732)
!10779 = !DILocation(line: 1600, column: 57, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10774, file: !1800, line: 1599, column: 42)
!10781 = !DILocation(line: 1600, column: 47, scope: !10780)
!10782 = !DILocation(line: 1600, column: 39, scope: !10780)
!10783 = !DILocation(line: 1600, column: 21, scope: !10780)
!10784 = !DILocation(line: 1600, column: 36, scope: !10780)
!10785 = !DILocation(line: 1600, column: 26, scope: !10780)
!10786 = !DILocation(line: 1600, column: 45, scope: !10780)
!10787 = !DILocation(line: 1601, column: 47, scope: !10780)
!10788 = !DILocation(line: 1601, column: 37, scope: !10780)
!10789 = !DILocation(line: 1601, column: 35, scope: !10780)
!10790 = !DILocation(line: 1602, column: 32, scope: !10780)
!10791 = !DILocation(line: 1602, column: 41, scope: !10780)
!10792 = !DILocation(line: 1602, column: 47, scope: !10780)
!10793 = !DILocation(line: 1602, column: 45, scope: !10780)
!10794 = !DILocation(line: 1602, column: 30, scope: !10780)
!10795 = !DILocation(line: 1603, column: 36, scope: !10780)
!10796 = !DILocation(line: 1603, column: 34, scope: !10780)
!10797 = !DILocation(line: 1603, column: 52, scope: !10780)
!10798 = !DILocation(line: 1603, column: 50, scope: !10780)
!10799 = !DILocation(line: 1603, column: 30, scope: !10780)
!10800 = !DILocation(line: 1605, column: 28, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10780, file: !1800, line: 1605, column: 21)
!10802 = !DILocation(line: 1605, column: 26, scope: !10801)
!10803 = !DILocation(line: 1605, column: 33, scope: !10804)
!10804 = !DILexicalBlockFile(scope: !10805, file: !1800, discriminator: 1)
!10805 = distinct !DILexicalBlock(scope: !10801, file: !1800, line: 1605, column: 21)
!10806 = !DILocation(line: 1605, column: 51, scope: !10804)
!10807 = !DILocation(line: 1605, column: 37, scope: !10804)
!10808 = !DILocation(line: 1605, column: 48, scope: !10804)
!10809 = !DILocation(line: 1605, column: 42, scope: !10804)
!10810 = !DILocation(line: 1605, column: 35, scope: !10804)
!10811 = !DILocation(line: 1605, column: 21, scope: !10804)
!10812 = !DILocation(line: 1606, column: 81, scope: !10805)
!10813 = !DILocation(line: 1606, column: 85, scope: !10805)
!10814 = !DILocation(line: 1606, column: 72, scope: !10805)
!10815 = !DILocation(line: 1606, column: 49, scope: !10805)
!10816 = !DILocation(line: 1606, column: 62, scope: !10805)
!10817 = !DILocation(line: 1606, column: 44, scope: !10805)
!10818 = !DILocation(line: 1606, column: 25, scope: !10805)
!10819 = !DILocation(line: 1606, column: 38, scope: !10805)
!10820 = !DILocation(line: 1606, column: 35, scope: !10805)
!10821 = !DILocation(line: 1606, column: 30, scope: !10805)
!10822 = !DILocation(line: 1606, column: 47, scope: !10805)
!10823 = !DILocation(line: 1605, column: 59, scope: !10824)
!10824 = !DILexicalBlockFile(scope: !10805, file: !1800, discriminator: 2)
!10825 = !DILocation(line: 1605, column: 21, scope: !10824)
!10826 = distinct !{!10826, !10827}
!10827 = !DILocation(line: 1605, column: 21, scope: !10780)
!10828 = !DILocation(line: 1607, column: 17, scope: !10780)
!10829 = !DILocation(line: 1608, column: 13, scope: !10732)
!10830 = !DILocation(line: 1588, column: 55, scope: !10831)
!10831 = !DILexicalBlockFile(scope: !10725, file: !1800, discriminator: 2)
!10832 = !DILocation(line: 1588, column: 13, scope: !10831)
!10833 = distinct !{!10833, !10834}
!10834 = !DILocation(line: 1588, column: 13, scope: !10717)
!10835 = !DILocation(line: 1609, column: 9, scope: !10717)
!10836 = !DILocation(line: 1610, column: 5, scope: !10707)
!10837 = !DILocation(line: 1584, column: 40, scope: !10838)
!10838 = !DILexicalBlockFile(scope: !10700, file: !1800, discriminator: 2)
!10839 = !DILocation(line: 1584, column: 5, scope: !10838)
!10840 = distinct !{!10840, !10841}
!10841 = !DILocation(line: 1584, column: 5, scope: !10650)
!10842 = !DILocation(line: 1611, column: 5, scope: !10650)
!10843 = !DILocation(line: 1612, column: 1, scope: !10650)
!10844 = !DILocalVariable(name: "sce", arg: 1, scope: !1903, file: !1800, line: 1971, type: !1906)
!10845 = !DILocation(line: 1971, column: 56, scope: !1903)
!10846 = !DILocalVariable(name: "gb", arg: 2, scope: !1903, file: !1800, line: 1971, type: !2041)
!10847 = !DILocation(line: 1971, column: 77, scope: !1903)
!10848 = !DILocalVariable(name: "mode", scope: !1903, file: !1800, line: 1981, type: !1162)
!10849 = !DILocation(line: 1981, column: 15, scope: !1903)
!10850 = !DILocation(line: 1981, column: 22, scope: !1903)
!10851 = !DILocation(line: 1981, column: 27, scope: !1903)
!10852 = !DILocation(line: 1981, column: 31, scope: !1903)
!10853 = !DILocalVariable(name: "bd", scope: !1903, file: !1800, line: 1982, type: !1030)
!10854 = !DILocation(line: 1982, column: 13, scope: !1903)
!10855 = !DILocalVariable(name: "wd", scope: !1903, file: !1800, line: 1982, type: !1030)
!10856 = !DILocation(line: 1982, column: 17, scope: !1903)
!10857 = !DILocalVariable(name: "ad", scope: !1903, file: !1800, line: 1982, type: !1030)
!10858 = !DILocation(line: 1982, column: 21, scope: !1903)
!10859 = !DILocalVariable(name: "max_band", scope: !1903, file: !1800, line: 1985, type: !1030)
!10860 = !DILocation(line: 1985, column: 13, scope: !1903)
!10861 = !DILocation(line: 1985, column: 33, scope: !1903)
!10862 = !DILocation(line: 1985, column: 24, scope: !1903)
!10863 = !DILocation(line: 1986, column: 13, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !1903, file: !1800, line: 1986, column: 5)
!10865 = !DILocation(line: 1986, column: 10, scope: !10864)
!10866 = !DILocation(line: 1986, column: 18, scope: !10867)
!10867 = !DILexicalBlockFile(scope: !10868, file: !1800, discriminator: 1)
!10868 = distinct !DILexicalBlock(scope: !10864, file: !1800, line: 1986, column: 5)
!10869 = !DILocation(line: 1986, column: 23, scope: !10867)
!10870 = !DILocation(line: 1986, column: 21, scope: !10867)
!10871 = !DILocation(line: 1986, column: 5, scope: !10867)
!10872 = !DILocation(line: 1987, column: 17, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10874, file: !1800, line: 1987, column: 9)
!10874 = distinct !DILexicalBlock(scope: !10868, file: !1800, line: 1986, column: 39)
!10875 = !DILocation(line: 1987, column: 14, scope: !10873)
!10876 = !DILocation(line: 1987, column: 22, scope: !10877)
!10877 = !DILexicalBlockFile(scope: !10878, file: !1800, discriminator: 1)
!10878 = distinct !DILexicalBlock(scope: !10873, file: !1800, line: 1987, column: 9)
!10879 = !DILocation(line: 1987, column: 37, scope: !10877)
!10880 = !DILocation(line: 1987, column: 27, scope: !10877)
!10881 = !DILocation(line: 1987, column: 25, scope: !10877)
!10882 = !DILocation(line: 1987, column: 9, scope: !10877)
!10883 = !DILocalVariable(name: "adjust_num", scope: !10884, file: !1800, line: 1988, type: !1030)
!10884 = distinct !DILexicalBlock(scope: !10878, file: !1800, line: 1987, column: 53)
!10885 = !DILocation(line: 1988, column: 21, scope: !10884)
!10886 = !DILocation(line: 1988, column: 43, scope: !10884)
!10887 = !DILocation(line: 1988, column: 34, scope: !10884)
!10888 = !DILocation(line: 1989, column: 21, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10884, file: !1800, line: 1989, column: 13)
!10890 = !DILocation(line: 1989, column: 18, scope: !10889)
!10891 = !DILocation(line: 1989, column: 26, scope: !10892)
!10892 = !DILexicalBlockFile(scope: !10893, file: !1800, discriminator: 1)
!10893 = distinct !DILexicalBlock(scope: !10889, file: !1800, line: 1989, column: 13)
!10894 = !DILocation(line: 1989, column: 31, scope: !10892)
!10895 = !DILocation(line: 1989, column: 29, scope: !10892)
!10896 = !DILocation(line: 1989, column: 13, scope: !10892)
!10897 = !DILocation(line: 1990, column: 27, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10893, file: !1800, line: 1989, column: 49)
!10899 = !DILocation(line: 1990, column: 37, scope: !10898)
!10900 = !DILocation(line: 1990, column: 40, scope: !10898)
!10901 = !DILocation(line: 1990, column: 45, scope: !10898)
!10902 = !DILocation(line: 1990, column: 58, scope: !10903)
!10903 = !DILexicalBlockFile(scope: !10898, file: !1800, discriminator: 1)
!10904 = !DILocation(line: 1990, column: 48, scope: !10903)
!10905 = !DILocation(line: 1990, column: 36, scope: !10903)
!10906 = !DILocation(line: 1990, column: 36, scope: !10907)
!10907 = !DILexicalBlockFile(scope: !10898, file: !1800, discriminator: 2)
!10908 = !DILocation(line: 1992, column: 50, scope: !10898)
!10909 = !DILocation(line: 1992, column: 40, scope: !10898)
!10910 = !DILocation(line: 1990, column: 36, scope: !10911)
!10911 = !DILexicalBlockFile(scope: !10898, file: !1800, discriminator: 3)
!10912 = !DILocation(line: 1990, column: 36, scope: !10913)
!10913 = !DILexicalBlockFile(scope: !10898, file: !1800, discriminator: 4)
!10914 = !DILocation(line: 1990, column: 33, scope: !10913)
!10915 = !DILocation(line: 1990, column: 17, scope: !10913)
!10916 = !DILocation(line: 1993, column: 13, scope: !10898)
!10917 = !DILocation(line: 1989, column: 45, scope: !10918)
!10918 = !DILexicalBlockFile(scope: !10893, file: !1800, discriminator: 2)
!10919 = !DILocation(line: 1989, column: 13, scope: !10918)
!10920 = distinct !{!10920, !10921}
!10921 = !DILocation(line: 1989, column: 13, scope: !10884)
!10922 = !DILocation(line: 1994, column: 9, scope: !10884)
!10923 = !DILocation(line: 1987, column: 49, scope: !10924)
!10924 = !DILexicalBlockFile(scope: !10878, file: !1800, discriminator: 2)
!10925 = !DILocation(line: 1987, column: 9, scope: !10924)
!10926 = distinct !{!10926, !10927}
!10927 = !DILocation(line: 1987, column: 9, scope: !10874)
!10928 = !DILocation(line: 1995, column: 5, scope: !10874)
!10929 = !DILocation(line: 1986, column: 35, scope: !10930)
!10930 = !DILexicalBlockFile(scope: !10868, file: !1800, discriminator: 2)
!10931 = !DILocation(line: 1986, column: 5, scope: !10930)
!10932 = distinct !{!10932, !10933}
!10933 = !DILocation(line: 1986, column: 5, scope: !1903)
!10934 = !DILocation(line: 1996, column: 1, scope: !1903)
!10935 = distinct !DISubprogram(name: "decode_spectrum_and_dequant", scope: !1800, file: !1800, line: 1646, type: !10936, isLocal: true, isDefinition: true, scopeLine: 1651, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!10936 = !DISubroutineType(types: !10937)
!10937 = !{!1012, !2071, !1032, !2041, !1895, !1012, !10938, !10653, !9461}
!10938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10939, size: 64, align: 64)
!10939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1972)
!10940 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !10941)
!10941 = distinct !DILocation(line: 1790, column: 270, scope: !10942)
!10942 = !DILexicalBlockFile(scope: !10943, file: !1800, discriminator: 5)
!10943 = distinct !DILexicalBlock(scope: !10944, file: !1800, line: 1790, column: 171)
!10944 = distinct !DILexicalBlock(scope: !10945, file: !1800, line: 1790, column: 155)
!10945 = distinct !DILexicalBlock(scope: !10946, file: !1800, line: 1790, column: 32)
!10946 = distinct !DILexicalBlock(scope: !10947, file: !1800, line: 1783, column: 28)
!10947 = distinct !DILexicalBlock(scope: !10948, file: !1800, line: 1779, column: 82)
!10948 = distinct !DILexicalBlock(scope: !10949, file: !1800, line: 1779, column: 21)
!10949 = distinct !DILexicalBlock(scope: !10950, file: !1800, line: 1779, column: 21)
!10950 = distinct !DILexicalBlock(scope: !10951, file: !1800, line: 1708, column: 38)
!10951 = distinct !DILexicalBlock(scope: !10952, file: !1800, line: 1700, column: 20)
!10952 = distinct !DILexicalBlock(scope: !10953, file: !1800, line: 1674, column: 24)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !1800, line: 1670, column: 17)
!10954 = distinct !DILexicalBlock(scope: !10955, file: !1800, line: 1664, column: 51)
!10955 = distinct !DILexicalBlock(scope: !10956, file: !1800, line: 1664, column: 9)
!10956 = distinct !DILexicalBlock(scope: !10957, file: !1800, line: 1664, column: 9)
!10957 = distinct !DILexicalBlock(scope: !10958, file: !1800, line: 1661, column: 50)
!10958 = distinct !DILexicalBlock(scope: !10959, file: !1800, line: 1661, column: 5)
!10959 = distinct !DILexicalBlock(scope: !10935, file: !1800, line: 1661, column: 5)
!10960 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !10961)
!10961 = distinct !DILocation(line: 1822, column: 40, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10963, file: !1800, line: 1815, column: 28)
!10963 = distinct !DILexicalBlock(scope: !10964, file: !1800, line: 1805, column: 82)
!10964 = distinct !DILexicalBlock(scope: !10965, file: !1800, line: 1805, column: 21)
!10965 = distinct !DILexicalBlock(scope: !10950, file: !1800, line: 1805, column: 21)
!10966 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !10967)
!10967 = distinct !DILocation(line: 1789, column: 40, scope: !10946)
!10968 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !10969)
!10969 = distinct !DILocation(line: 1823, column: 270, scope: !10970)
!10970 = !DILexicalBlockFile(scope: !10971, file: !1800, discriminator: 5)
!10971 = distinct !DILexicalBlock(scope: !10972, file: !1800, line: 1823, column: 171)
!10972 = distinct !DILexicalBlock(scope: !10973, file: !1800, line: 1823, column: 155)
!10973 = distinct !DILexicalBlock(scope: !10962, file: !1800, line: 1823, column: 32)
!10974 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !10975)
!10975 = distinct !DILocation(line: 1766, column: 270, scope: !10976)
!10976 = !DILexicalBlockFile(scope: !10977, file: !1800, discriminator: 5)
!10977 = distinct !DILexicalBlock(scope: !10978, file: !1800, line: 1766, column: 171)
!10978 = distinct !DILexicalBlock(scope: !10979, file: !1800, line: 1766, column: 155)
!10979 = distinct !DILexicalBlock(scope: !10980, file: !1800, line: 1766, column: 32)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !1800, line: 1761, column: 28)
!10981 = distinct !DILexicalBlock(scope: !10982, file: !1800, line: 1757, column: 82)
!10982 = distinct !DILexicalBlock(scope: !10983, file: !1800, line: 1757, column: 21)
!10983 = distinct !DILexicalBlock(scope: !10950, file: !1800, line: 1757, column: 21)
!10984 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !10985)
!10985 = distinct !DILocation(line: 1765, column: 40, scope: !10980)
!10986 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !10987)
!10987 = distinct !DILocation(line: 1843, column: 48, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10989, file: !1800, line: 1838, column: 49)
!10989 = distinct !DILexicalBlock(scope: !10990, file: !1800, line: 1838, column: 37)
!10990 = distinct !DILexicalBlock(scope: !10991, file: !1800, line: 1837, column: 53)
!10991 = distinct !DILexicalBlock(scope: !10992, file: !1800, line: 1837, column: 29)
!10992 = distinct !DILexicalBlock(scope: !10962, file: !1800, line: 1837, column: 29)
!10993 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !10994)
!10994 = distinct !DILocation(line: 1742, column: 270, scope: !10995)
!10995 = !DILexicalBlockFile(scope: !10996, file: !1800, discriminator: 5)
!10996 = distinct !DILexicalBlock(scope: !10997, file: !1800, line: 1742, column: 171)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !1800, line: 1742, column: 155)
!10998 = distinct !DILexicalBlock(scope: !10999, file: !1800, line: 1742, column: 32)
!10999 = distinct !DILexicalBlock(scope: !11000, file: !1800, line: 1735, column: 28)
!11000 = distinct !DILexicalBlock(scope: !11001, file: !1800, line: 1731, column: 82)
!11001 = distinct !DILexicalBlock(scope: !11002, file: !1800, line: 1731, column: 21)
!11002 = distinct !DILexicalBlock(scope: !10950, file: !1800, line: 1731, column: 21)
!11003 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !11004)
!11004 = distinct !DILocation(line: 1741, column: 40, scope: !10999)
!11005 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !11006)
!11006 = distinct !DILocation(line: 1719, column: 270, scope: !11007)
!11007 = !DILexicalBlockFile(scope: !11008, file: !1800, discriminator: 5)
!11008 = distinct !DILexicalBlock(scope: !11009, file: !1800, line: 1719, column: 171)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !1800, line: 1719, column: 155)
!11010 = distinct !DILexicalBlock(scope: !11011, file: !1800, line: 1719, column: 32)
!11011 = distinct !DILexicalBlock(scope: !11012, file: !1800, line: 1714, column: 28)
!11012 = distinct !DILexicalBlock(scope: !11013, file: !1800, line: 1710, column: 82)
!11013 = distinct !DILexicalBlock(scope: !11014, file: !1800, line: 1710, column: 21)
!11014 = distinct !DILexicalBlock(scope: !10950, file: !1800, line: 1710, column: 21)
!11015 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !11016)
!11016 = distinct !DILocation(line: 1718, column: 40, scope: !11011)
!11017 = !DILocalVariable(name: "x", arg: 1, scope: !11018, file: !2535, line: 176, type: !1012)
!11018 = distinct !DISubprogram(name: "fixed_sqrt", scope: !2535, file: !2535, line: 176, type: !11019, isLocal: true, isDefinition: true, scopeLine: 177, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!11019 = !DISubroutineType(types: !11020)
!11020 = !{!1012, !1012, !1012}
!11021 = !DILocation(line: 176, column: 65, scope: !11018, inlinedAt: !11022)
!11022 = distinct !DILocation(line: 1692, column: 35, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !1800, line: 1675, column: 78)
!11024 = distinct !DILexicalBlock(scope: !11025, file: !1800, line: 1675, column: 17)
!11025 = distinct !DILexicalBlock(scope: !11026, file: !1800, line: 1675, column: 17)
!11026 = distinct !DILexicalBlock(scope: !10952, file: !1800, line: 1674, column: 48)
!11027 = !DILocalVariable(name: "bits", arg: 2, scope: !11018, file: !2535, line: 176, type: !1012)
!11028 = !DILocation(line: 176, column: 72, scope: !11018, inlinedAt: !11022)
!11029 = !DILocalVariable(name: "retval", scope: !11018, file: !2535, line: 178, type: !1012)
!11030 = !DILocation(line: 178, column: 9, scope: !11018, inlinedAt: !11022)
!11031 = !DILocalVariable(name: "bit_mask", scope: !11018, file: !2535, line: 178, type: !1012)
!11032 = !DILocation(line: 178, column: 17, scope: !11018, inlinedAt: !11022)
!11033 = !DILocalVariable(name: "guess", scope: !11018, file: !2535, line: 178, type: !1012)
!11034 = !DILocation(line: 178, column: 27, scope: !11018, inlinedAt: !11022)
!11035 = !DILocalVariable(name: "square", scope: !11018, file: !2535, line: 178, type: !1012)
!11036 = !DILocation(line: 178, column: 34, scope: !11018, inlinedAt: !11022)
!11037 = !DILocalVariable(name: "i", scope: !11018, file: !2535, line: 178, type: !1012)
!11038 = !DILocation(line: 178, column: 42, scope: !11018, inlinedAt: !11022)
!11039 = !DILocalVariable(name: "accu", scope: !11018, file: !2535, line: 179, type: !1014)
!11040 = !DILocation(line: 179, column: 13, scope: !11018, inlinedAt: !11022)
!11041 = !DILocalVariable(name: "shift1", scope: !11018, file: !2535, line: 180, type: !1012)
!11042 = !DILocation(line: 180, column: 9, scope: !11018, inlinedAt: !11022)
!11043 = !DILocalVariable(name: "shift2", scope: !11018, file: !2535, line: 181, type: !1012)
!11044 = !DILocation(line: 181, column: 9, scope: !11018, inlinedAt: !11022)
!11045 = !DILocalVariable(name: "previous_val", arg: 1, scope: !11046, file: !1800, line: 1063, type: !1013)
!11046 = distinct !DISubprogram(name: "lcg_random", scope: !1800, file: !1800, line: 1063, type: !11047, isLocal: true, isDefinition: true, scopeLine: 1064, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!11047 = !DISubroutineType(types: !11048)
!11048 = !{!1012, !1013}
!11049 = !DILocation(line: 1063, column: 70, scope: !11046, inlinedAt: !11050)
!11050 = distinct !DILocation(line: 1682, column: 44, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11052, file: !1800, line: 1681, column: 51)
!11052 = distinct !DILexicalBlock(scope: !11053, file: !1800, line: 1681, column: 21)
!11053 = distinct !DILexicalBlock(scope: !11023, file: !1800, line: 1681, column: 21)
!11054 = !DILocalVariable(name: "v", scope: !11046, file: !1800, line: 1065, type: !11055)
!11055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11046, file: !1800, line: 1065, size: 32, align: 32, elements: !11056)
!11056 = !{!11057, !11058}
!11057 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !11055, file: !1800, line: 1065, baseType: !1013, size: 32, align: 32)
!11058 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !11055, file: !1800, line: 1065, baseType: !1012, size: 32, align: 32)
!11059 = !DILocation(line: 1065, column: 34, scope: !11046, inlinedAt: !11050)
!11060 = !DILocalVariable(name: "ac", arg: 1, scope: !10935, file: !1800, line: 1646, type: !2071)
!11061 = !DILocation(line: 1646, column: 52, scope: !10935)
!11062 = !DILocalVariable(name: "coef", arg: 2, scope: !10935, file: !1800, line: 1646, type: !1032)
!11063 = !DILocation(line: 1646, column: 65, scope: !10935)
!11064 = !DILocalVariable(name: "gb", arg: 3, scope: !10935, file: !1800, line: 1647, type: !2041)
!11065 = !DILocation(line: 1647, column: 55, scope: !10935)
!11066 = !DILocalVariable(name: "sf", arg: 4, scope: !10935, file: !1800, line: 1647, type: !1895)
!11067 = !DILocation(line: 1647, column: 74, scope: !10935)
!11068 = !DILocalVariable(name: "pulse_present", arg: 5, scope: !10935, file: !1800, line: 1648, type: !1012)
!11069 = !DILocation(line: 1648, column: 44, scope: !10935)
!11070 = !DILocalVariable(name: "pulse", arg: 6, scope: !10935, file: !1800, line: 1648, type: !10938)
!11071 = !DILocation(line: 1648, column: 72, scope: !10935)
!11072 = !DILocalVariable(name: "ics", arg: 7, scope: !10935, file: !1800, line: 1649, type: !10653)
!11073 = !DILocation(line: 1649, column: 71, scope: !10935)
!11074 = !DILocalVariable(name: "band_type", arg: 8, scope: !10935, file: !1800, line: 1650, type: !9461)
!11075 = !DILocation(line: 1650, column: 54, scope: !10935)
!11076 = !DILocalVariable(name: "i", scope: !10935, file: !1800, line: 1652, type: !1012)
!11077 = !DILocation(line: 1652, column: 9, scope: !10935)
!11078 = !DILocalVariable(name: "k", scope: !10935, file: !1800, line: 1652, type: !1012)
!11079 = !DILocation(line: 1652, column: 12, scope: !10935)
!11080 = !DILocalVariable(name: "g", scope: !10935, file: !1800, line: 1652, type: !1012)
!11081 = !DILocation(line: 1652, column: 15, scope: !10935)
!11082 = !DILocalVariable(name: "idx", scope: !10935, file: !1800, line: 1652, type: !1012)
!11083 = !DILocation(line: 1652, column: 18, scope: !10935)
!11084 = !DILocalVariable(name: "c", scope: !10935, file: !1800, line: 1653, type: !1162)
!11085 = !DILocation(line: 1653, column: 15, scope: !10935)
!11086 = !DILocation(line: 1653, column: 26, scope: !10935)
!11087 = !DILocation(line: 1653, column: 31, scope: !10935)
!11088 = !DILocation(line: 1653, column: 24, scope: !10935)
!11089 = !DILocalVariable(name: "offsets", scope: !10935, file: !1800, line: 1654, type: !1935)
!11090 = !DILocation(line: 1654, column: 21, scope: !10935)
!11091 = !DILocation(line: 1654, column: 31, scope: !10935)
!11092 = !DILocation(line: 1654, column: 36, scope: !10935)
!11093 = !DILocalVariable(name: "coef_base", scope: !10935, file: !1800, line: 1655, type: !1032)
!11094 = !DILocation(line: 1655, column: 15, scope: !10935)
!11095 = !DILocation(line: 1655, column: 27, scope: !10935)
!11096 = !DILocation(line: 1657, column: 12, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !10935, file: !1800, line: 1657, column: 5)
!11098 = !DILocation(line: 1657, column: 10, scope: !11097)
!11099 = !DILocation(line: 1657, column: 17, scope: !11100)
!11100 = !DILexicalBlockFile(scope: !11101, file: !1800, discriminator: 1)
!11101 = distinct !DILexicalBlock(scope: !11097, file: !1800, line: 1657, column: 5)
!11102 = !DILocation(line: 1657, column: 21, scope: !11100)
!11103 = !DILocation(line: 1657, column: 26, scope: !11100)
!11104 = !DILocation(line: 1657, column: 19, scope: !11100)
!11105 = !DILocation(line: 1657, column: 5, scope: !11100)
!11106 = !DILocation(line: 1658, column: 16, scope: !11101)
!11107 = !DILocation(line: 1658, column: 23, scope: !11101)
!11108 = !DILocation(line: 1658, column: 25, scope: !11101)
!11109 = !DILocation(line: 1658, column: 21, scope: !11101)
!11110 = !DILocation(line: 1658, column: 41, scope: !11101)
!11111 = !DILocation(line: 1658, column: 46, scope: !11101)
!11112 = !DILocation(line: 1658, column: 33, scope: !11101)
!11113 = !DILocation(line: 1658, column: 31, scope: !11101)
!11114 = !DILocation(line: 1658, column: 9, scope: !11101)
!11115 = !DILocation(line: 1659, column: 36, scope: !11101)
!11116 = !DILocation(line: 1659, column: 48, scope: !11101)
!11117 = !DILocation(line: 1659, column: 53, scope: !11101)
!11118 = !DILocation(line: 1659, column: 40, scope: !11101)
!11119 = !DILocation(line: 1659, column: 38, scope: !11101)
!11120 = !DILocation(line: 1659, column: 35, scope: !11101)
!11121 = !DILocation(line: 1659, column: 33, scope: !11101)
!11122 = !DILocation(line: 1657, column: 40, scope: !11123)
!11123 = !DILexicalBlockFile(scope: !11101, file: !1800, discriminator: 2)
!11124 = !DILocation(line: 1657, column: 5, scope: !11123)
!11125 = distinct !{!11125, !11126}
!11126 = !DILocation(line: 1657, column: 5, scope: !10935)
!11127 = !DILocation(line: 1661, column: 12, scope: !10959)
!11128 = !DILocation(line: 1661, column: 10, scope: !10959)
!11129 = !DILocation(line: 1661, column: 17, scope: !11130)
!11130 = !DILexicalBlockFile(scope: !10958, file: !1800, discriminator: 1)
!11131 = !DILocation(line: 1661, column: 21, scope: !11130)
!11132 = !DILocation(line: 1661, column: 26, scope: !11130)
!11133 = !DILocation(line: 1661, column: 19, scope: !11130)
!11134 = !DILocation(line: 1661, column: 5, scope: !11130)
!11135 = !DILocalVariable(name: "g_len", scope: !10957, file: !1800, line: 1662, type: !1013)
!11136 = !DILocation(line: 1662, column: 18, scope: !10957)
!11137 = !DILocation(line: 1662, column: 41, scope: !10957)
!11138 = !DILocation(line: 1662, column: 26, scope: !10957)
!11139 = !DILocation(line: 1662, column: 31, scope: !10957)
!11140 = !DILocation(line: 1664, column: 16, scope: !10956)
!11141 = !DILocation(line: 1664, column: 14, scope: !10956)
!11142 = !DILocation(line: 1664, column: 21, scope: !11143)
!11143 = !DILexicalBlockFile(scope: !10955, file: !1800, discriminator: 1)
!11144 = !DILocation(line: 1664, column: 25, scope: !11143)
!11145 = !DILocation(line: 1664, column: 30, scope: !11143)
!11146 = !DILocation(line: 1664, column: 23, scope: !11143)
!11147 = !DILocation(line: 1664, column: 9, scope: !11143)
!11148 = !DILocalVariable(name: "cbt_m1", scope: !10954, file: !1800, line: 1665, type: !11149)
!11149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!11150 = !DILocation(line: 1665, column: 28, scope: !10954)
!11151 = !DILocation(line: 1665, column: 47, scope: !10954)
!11152 = !DILocation(line: 1665, column: 37, scope: !10954)
!11153 = !DILocation(line: 1665, column: 52, scope: !10954)
!11154 = !DILocalVariable(name: "cfo", scope: !10954, file: !1800, line: 1666, type: !1032)
!11155 = !DILocation(line: 1666, column: 23, scope: !10954)
!11156 = !DILocation(line: 1666, column: 29, scope: !10954)
!11157 = !DILocation(line: 1666, column: 44, scope: !10954)
!11158 = !DILocation(line: 1666, column: 36, scope: !10954)
!11159 = !DILocation(line: 1666, column: 34, scope: !10954)
!11160 = !DILocalVariable(name: "off_len", scope: !10954, file: !1800, line: 1667, type: !1012)
!11161 = !DILocation(line: 1667, column: 17, scope: !10954)
!11162 = !DILocation(line: 1667, column: 35, scope: !10954)
!11163 = !DILocation(line: 1667, column: 37, scope: !10954)
!11164 = !DILocation(line: 1667, column: 27, scope: !10954)
!11165 = !DILocation(line: 1667, column: 52, scope: !10954)
!11166 = !DILocation(line: 1667, column: 44, scope: !10954)
!11167 = !DILocation(line: 1667, column: 42, scope: !10954)
!11168 = !DILocalVariable(name: "group", scope: !10954, file: !1800, line: 1668, type: !1012)
!11169 = !DILocation(line: 1668, column: 17, scope: !10954)
!11170 = !DILocation(line: 1670, column: 17, scope: !10953)
!11171 = !DILocation(line: 1670, column: 24, scope: !10953)
!11172 = !DILocation(line: 1670, column: 17, scope: !10954)
!11173 = !DILocation(line: 1671, column: 28, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11175, file: !1800, line: 1671, column: 17)
!11175 = distinct !DILexicalBlock(scope: !10953, file: !1800, line: 1670, column: 46)
!11176 = !DILocation(line: 1671, column: 22, scope: !11174)
!11177 = !DILocation(line: 1671, column: 33, scope: !11178)
!11178 = !DILexicalBlockFile(scope: !11179, file: !1800, discriminator: 1)
!11179 = distinct !DILexicalBlock(scope: !11174, file: !1800, line: 1671, column: 17)
!11180 = !DILocation(line: 1671, column: 52, scope: !11178)
!11181 = !DILocation(line: 1671, column: 39, scope: !11178)
!11182 = !DILocation(line: 1671, column: 17, scope: !11178)
!11183 = !DILocation(line: 1672, column: 28, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11179, file: !1800, line: 1671, column: 78)
!11185 = !DILocation(line: 1672, column: 21, scope: !11184)
!11186 = !DILocation(line: 1672, column: 36, scope: !11184)
!11187 = !DILocation(line: 1672, column: 44, scope: !11184)
!11188 = !DILocation(line: 1673, column: 17, scope: !11184)
!11189 = !DILocation(line: 1671, column: 64, scope: !11190)
!11190 = !DILexicalBlockFile(scope: !11179, file: !1800, discriminator: 2)
!11191 = !DILocation(line: 1671, column: 71, scope: !11190)
!11192 = !DILocation(line: 1671, column: 17, scope: !11190)
!11193 = distinct !{!11193, !11194}
!11194 = !DILocation(line: 1671, column: 17, scope: !11175)
!11195 = !DILocation(line: 1674, column: 13, scope: !11175)
!11196 = !DILocation(line: 1674, column: 24, scope: !11197)
!11197 = !DILexicalBlockFile(scope: !10952, file: !1800, discriminator: 1)
!11198 = !DILocation(line: 1674, column: 31, scope: !11197)
!11199 = !DILocation(line: 1675, column: 28, scope: !11025)
!11200 = !DILocation(line: 1675, column: 22, scope: !11025)
!11201 = !DILocation(line: 1675, column: 33, scope: !11202)
!11202 = !DILexicalBlockFile(scope: !11024, file: !1800, discriminator: 1)
!11203 = !DILocation(line: 1675, column: 52, scope: !11202)
!11204 = !DILocation(line: 1675, column: 39, scope: !11202)
!11205 = !DILocation(line: 1675, column: 17, scope: !11202)
!11206 = !DILocalVariable(name: "band_energy", scope: !11023, file: !1800, line: 1679, type: !1019)
!11207 = !DILocation(line: 1679, column: 30, scope: !11023)
!11208 = !DILocation(line: 1681, column: 28, scope: !11053)
!11209 = !DILocation(line: 1681, column: 26, scope: !11053)
!11210 = !DILocation(line: 1681, column: 33, scope: !11211)
!11211 = !DILexicalBlockFile(scope: !11052, file: !1800, discriminator: 1)
!11212 = !DILocation(line: 1681, column: 37, scope: !11211)
!11213 = !DILocation(line: 1681, column: 35, scope: !11211)
!11214 = !DILocation(line: 1681, column: 21, scope: !11211)
!11215 = !DILocation(line: 1682, column: 55, scope: !11051)
!11216 = !DILocation(line: 1682, column: 59, scope: !11051)
!11217 = !DILocation(line: 1682, column: 44, scope: !11051)
!11218 = !DILocation(line: 1065, column: 38, scope: !11046, inlinedAt: !11050)
!11219 = !DILocation(line: 1065, column: 40, scope: !11046, inlinedAt: !11050)
!11220 = !DILocation(line: 1065, column: 53, scope: !11046, inlinedAt: !11050)
!11221 = !DILocation(line: 1065, column: 64, scope: !11046, inlinedAt: !11050)
!11222 = !DILocation(line: 1066, column: 14, scope: !11046, inlinedAt: !11050)
!11223 = !DILocation(line: 1682, column: 25, scope: !11051)
!11224 = !DILocation(line: 1682, column: 29, scope: !11051)
!11225 = !DILocation(line: 1682, column: 42, scope: !11051)
!11226 = !DILocation(line: 1684, column: 34, scope: !11051)
!11227 = !DILocation(line: 1684, column: 38, scope: !11051)
!11228 = !DILocation(line: 1684, column: 51, scope: !11051)
!11229 = !DILocation(line: 1684, column: 29, scope: !11051)
!11230 = !DILocation(line: 1684, column: 25, scope: !11051)
!11231 = !DILocation(line: 1684, column: 32, scope: !11051)
!11232 = !DILocation(line: 1688, column: 21, scope: !11051)
!11233 = !DILocation(line: 1681, column: 47, scope: !11234)
!11234 = !DILexicalBlockFile(scope: !11052, file: !1800, discriminator: 2)
!11235 = !DILocation(line: 1681, column: 21, scope: !11234)
!11236 = distinct !{!11236, !11237}
!11237 = !DILocation(line: 1681, column: 21, scope: !11023)
!11238 = !DILocation(line: 1691, column: 35, scope: !11023)
!11239 = !DILocation(line: 1691, column: 39, scope: !11023)
!11240 = !DILocation(line: 1691, column: 45, scope: !11023)
!11241 = !DILocation(line: 1691, column: 65, scope: !11023)
!11242 = !DILocation(line: 1691, column: 70, scope: !11023)
!11243 = !DILocation(line: 1691, column: 75, scope: !11023)
!11244 = !DILocation(line: 1691, column: 33, scope: !11023)
!11245 = !DILocation(line: 1692, column: 46, scope: !11023)
!11246 = !DILocation(line: 1692, column: 35, scope: !11023)
!11247 = !DILocation(line: 180, column: 23, scope: !11018, inlinedAt: !11022)
!11248 = !DILocation(line: 180, column: 21, scope: !11018, inlinedAt: !11022)
!11249 = !DILocation(line: 181, column: 18, scope: !11018, inlinedAt: !11022)
!11250 = !DILocation(line: 181, column: 23, scope: !11018, inlinedAt: !11022)
!11251 = !DILocation(line: 183, column: 9, scope: !11252, inlinedAt: !11022)
!11252 = distinct !DILexicalBlock(scope: !11018, file: !2535, line: 183, column: 9)
!11253 = !DILocation(line: 183, column: 16, scope: !11252, inlinedAt: !11022)
!11254 = !DILocation(line: 183, column: 9, scope: !11018, inlinedAt: !11022)
!11255 = !DILocation(line: 183, column: 38, scope: !11256, inlinedAt: !11022)
!11256 = !DILexicalBlockFile(scope: !11252, file: !2535, discriminator: 1)
!11257 = !DILocation(line: 183, column: 43, scope: !11256, inlinedAt: !11022)
!11258 = !DILocation(line: 183, column: 40, scope: !11256, inlinedAt: !11022)
!11259 = !DILocation(line: 183, column: 30, scope: !11256, inlinedAt: !11022)
!11260 = !DILocation(line: 183, column: 28, scope: !11256, inlinedAt: !11022)
!11261 = !DILocation(line: 183, column: 21, scope: !11256, inlinedAt: !11022)
!11262 = !DILocation(line: 184, column: 27, scope: !11252, inlinedAt: !11022)
!11263 = !DILocation(line: 184, column: 33, scope: !11252, inlinedAt: !11022)
!11264 = !DILocation(line: 184, column: 32, scope: !11252, inlinedAt: !11022)
!11265 = !DILocation(line: 184, column: 29, scope: !11252, inlinedAt: !11022)
!11266 = !DILocation(line: 184, column: 19, scope: !11252, inlinedAt: !11022)
!11267 = !DILocation(line: 184, column: 17, scope: !11252, inlinedAt: !11022)
!11268 = !DILocation(line: 186, column: 9, scope: !11269, inlinedAt: !11022)
!11269 = distinct !DILexicalBlock(scope: !11018, file: !2535, line: 186, column: 9)
!11270 = !DILocation(line: 186, column: 16, scope: !11269, inlinedAt: !11022)
!11271 = !DILocation(line: 186, column: 9, scope: !11018, inlinedAt: !11022)
!11272 = !DILocation(line: 187, column: 18, scope: !11273, inlinedAt: !11022)
!11273 = distinct !DILexicalBlock(scope: !11269, file: !2535, line: 186, column: 21)
!11274 = !DILocation(line: 187, column: 28, scope: !11273, inlinedAt: !11022)
!11275 = !DILocation(line: 187, column: 25, scope: !11273, inlinedAt: !11022)
!11276 = !DILocation(line: 187, column: 16, scope: !11273, inlinedAt: !11022)
!11277 = !DILocation(line: 188, column: 27, scope: !11273, inlinedAt: !11022)
!11278 = !DILocation(line: 188, column: 34, scope: !11273, inlinedAt: !11022)
!11279 = !DILocation(line: 188, column: 23, scope: !11273, inlinedAt: !11022)
!11280 = !DILocation(line: 188, column: 18, scope: !11273, inlinedAt: !11022)
!11281 = !DILocation(line: 190, column: 15, scope: !11282, inlinedAt: !11022)
!11282 = distinct !DILexicalBlock(scope: !11273, file: !2535, line: 190, column: 9)
!11283 = !DILocation(line: 190, column: 14, scope: !11282, inlinedAt: !11022)
!11284 = !DILocation(line: 190, column: 19, scope: !11285, inlinedAt: !11022)
!11285 = !DILexicalBlockFile(scope: !11286, file: !2535, discriminator: 1)
!11286 = distinct !DILexicalBlock(scope: !11282, file: !2535, line: 190, column: 9)
!11287 = !DILocation(line: 190, column: 21, scope: !11285, inlinedAt: !11022)
!11288 = !DILocation(line: 190, column: 20, scope: !11285, inlinedAt: !11022)
!11289 = !DILocation(line: 190, column: 9, scope: !11285, inlinedAt: !11022)
!11290 = !DILocation(line: 191, column: 21, scope: !11291, inlinedAt: !11022)
!11291 = distinct !DILexicalBlock(scope: !11286, file: !2535, line: 190, column: 33)
!11292 = !DILocation(line: 191, column: 30, scope: !11291, inlinedAt: !11022)
!11293 = !DILocation(line: 191, column: 28, scope: !11291, inlinedAt: !11022)
!11294 = !DILocation(line: 191, column: 19, scope: !11291, inlinedAt: !11022)
!11295 = !DILocation(line: 192, column: 29, scope: !11291, inlinedAt: !11022)
!11296 = !DILocation(line: 192, column: 20, scope: !11291, inlinedAt: !11022)
!11297 = !DILocation(line: 192, column: 37, scope: !11291, inlinedAt: !11022)
!11298 = !DILocation(line: 192, column: 35, scope: !11291, inlinedAt: !11022)
!11299 = !DILocation(line: 192, column: 18, scope: !11291, inlinedAt: !11022)
!11300 = !DILocation(line: 193, column: 29, scope: !11291, inlinedAt: !11022)
!11301 = !DILocation(line: 193, column: 36, scope: !11291, inlinedAt: !11022)
!11302 = !DILocation(line: 193, column: 34, scope: !11291, inlinedAt: !11022)
!11303 = !DILocation(line: 193, column: 49, scope: !11291, inlinedAt: !11022)
!11304 = !DILocation(line: 193, column: 46, scope: !11291, inlinedAt: !11022)
!11305 = !DILocation(line: 193, column: 22, scope: !11291, inlinedAt: !11022)
!11306 = !DILocation(line: 193, column: 20, scope: !11291, inlinedAt: !11022)
!11307 = !DILocation(line: 194, column: 17, scope: !11308, inlinedAt: !11022)
!11308 = distinct !DILexicalBlock(scope: !11291, file: !2535, line: 194, column: 17)
!11309 = !DILocation(line: 194, column: 22, scope: !11308, inlinedAt: !11022)
!11310 = !DILocation(line: 194, column: 19, scope: !11308, inlinedAt: !11022)
!11311 = !DILocation(line: 194, column: 17, scope: !11291, inlinedAt: !11022)
!11312 = !DILocation(line: 195, column: 27, scope: !11308, inlinedAt: !11022)
!11313 = !DILocation(line: 195, column: 24, scope: !11308, inlinedAt: !11022)
!11314 = !DILocation(line: 195, column: 17, scope: !11308, inlinedAt: !11022)
!11315 = !DILocation(line: 196, column: 22, scope: !11291, inlinedAt: !11022)
!11316 = !DILocation(line: 190, column: 30, scope: !11317, inlinedAt: !11022)
!11317 = !DILexicalBlockFile(scope: !11286, file: !2535, discriminator: 2)
!11318 = !DILocation(line: 190, column: 9, scope: !11317, inlinedAt: !11022)
!11319 = distinct !{!11319, !11320}
!11320 = !DILocation(line: 190, column: 9, scope: !11273)
!11321 = !DILocation(line: 199, column: 5, scope: !11273, inlinedAt: !11022)
!11322 = !DILocation(line: 200, column: 23, scope: !11269, inlinedAt: !11022)
!11323 = !DILocation(line: 200, column: 22, scope: !11269, inlinedAt: !11022)
!11324 = !DILocation(line: 200, column: 17, scope: !11269, inlinedAt: !11022)
!11325 = !DILocation(line: 202, column: 12, scope: !11018, inlinedAt: !11022)
!11326 = !DILocation(line: 1692, column: 33, scope: !11023)
!11327 = !DILocation(line: 1693, column: 33, scope: !11023)
!11328 = !DILocation(line: 1693, column: 41, scope: !11023)
!11329 = !DILocation(line: 1693, column: 38, scope: !11023)
!11330 = !DILocation(line: 1693, column: 47, scope: !11023)
!11331 = !DILocation(line: 1693, column: 60, scope: !11023)
!11332 = !DILocation(line: 1693, column: 21, scope: !11023)
!11333 = !DILocation(line: 1699, column: 17, scope: !11023)
!11334 = !DILocation(line: 1675, column: 64, scope: !11335)
!11335 = !DILexicalBlockFile(scope: !11024, file: !1800, discriminator: 2)
!11336 = !DILocation(line: 1675, column: 71, scope: !11335)
!11337 = !DILocation(line: 1675, column: 17, scope: !11335)
!11338 = distinct !{!11338, !11339}
!11339 = !DILocation(line: 1675, column: 17, scope: !11026)
!11340 = !DILocation(line: 1700, column: 13, scope: !11026)
!11341 = !DILocalVariable(name: "cb_vector_idx", scope: !10951, file: !1800, line: 1704, type: !1935)
!11342 = !DILocation(line: 1704, column: 33, scope: !10951)
!11343 = !DILocation(line: 1704, column: 76, scope: !10951)
!11344 = !DILocation(line: 1704, column: 49, scope: !10951)
!11345 = !DILocalVariable(name: "vlc_tab", scope: !10951, file: !1800, line: 1705, type: !1866)
!11346 = !DILocation(line: 1705, column: 27, scope: !10951)
!11347 = !DILocation(line: 1705, column: 54, scope: !10951)
!11348 = !DILocation(line: 1705, column: 41, scope: !10951)
!11349 = !DILocation(line: 1705, column: 62, scope: !10951)
!11350 = !DILocalVariable(name: "re_index", scope: !10951, file: !1800, line: 1706, type: !1013)
!11351 = !DILocation(line: 1706, column: 30, scope: !10951)
!11352 = !DILocation(line: 1706, column: 42, scope: !10951)
!11353 = !DILocation(line: 1706, column: 47, scope: !10951)
!11354 = !DILocalVariable(name: "re_cache", scope: !10951, file: !1800, line: 1706, type: !1013)
!11355 = !DILocation(line: 1706, column: 91, scope: !10951)
!11356 = !DILocalVariable(name: "re_size_plus8", scope: !10951, file: !1800, line: 1706, type: !1013)
!11357 = !DILocation(line: 1706, column: 114, scope: !10951)
!11358 = !DILocation(line: 1706, column: 131, scope: !10951)
!11359 = !DILocation(line: 1706, column: 136, scope: !10951)
!11360 = !DILocation(line: 1708, column: 25, scope: !10951)
!11361 = !DILocation(line: 1708, column: 32, scope: !10951)
!11362 = !DILocation(line: 1708, column: 17, scope: !10951)
!11363 = !DILocation(line: 1710, column: 32, scope: !11014)
!11364 = !DILocation(line: 1710, column: 26, scope: !11014)
!11365 = !DILocation(line: 1710, column: 37, scope: !11366)
!11366 = !DILexicalBlockFile(scope: !11013, file: !1800, discriminator: 1)
!11367 = !DILocation(line: 1710, column: 56, scope: !11366)
!11368 = !DILocation(line: 1710, column: 43, scope: !11366)
!11369 = !DILocation(line: 1710, column: 21, scope: !11366)
!11370 = !DILocalVariable(name: "cf", scope: !11012, file: !1800, line: 1711, type: !1032)
!11371 = !DILocation(line: 1711, column: 35, scope: !11012)
!11372 = !DILocation(line: 1711, column: 40, scope: !11012)
!11373 = !DILocalVariable(name: "len", scope: !11012, file: !1800, line: 1712, type: !1012)
!11374 = !DILocation(line: 1712, column: 29, scope: !11012)
!11375 = !DILocation(line: 1712, column: 35, scope: !11012)
!11376 = !DILocation(line: 1714, column: 25, scope: !11012)
!11377 = distinct !{!11377, !11376}
!11378 = !DILocalVariable(name: "code", scope: !11011, file: !1800, line: 1715, type: !1012)
!11379 = !DILocation(line: 1715, column: 33, scope: !11011)
!11380 = !DILocalVariable(name: "cb_idx", scope: !11011, file: !1800, line: 1716, type: !1013)
!11381 = !DILocation(line: 1716, column: 38, scope: !11011)
!11382 = !DILocation(line: 1718, column: 84, scope: !11011)
!11383 = !DILocation(line: 1718, column: 89, scope: !11011)
!11384 = !DILocation(line: 1718, column: 99, scope: !11011)
!11385 = !DILocation(line: 1718, column: 108, scope: !11011)
!11386 = !DILocation(line: 1718, column: 96, scope: !11011)
!11387 = !DILocation(line: 1718, column: 117, scope: !11011)
!11388 = !DILocation(line: 1718, column: 40, scope: !11011)
!11389 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !11016)
!11390 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !11016)
!11391 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !11016)
!11392 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !11016)
!11393 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !11016)
!11394 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !11016)
!11395 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !11016)
!11396 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !11016)
!11397 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !11016)
!11398 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !11016)
!11399 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !11016)
!11400 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !11016)
!11401 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !11016)
!11402 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !11016)
!11403 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !11016)
!11404 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !11016)
!11405 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !11016)
!11406 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !11016)
!11407 = !DILocation(line: 1718, column: 125, scope: !11011)
!11408 = !DILocation(line: 1718, column: 134, scope: !11011)
!11409 = !DILocation(line: 1718, column: 121, scope: !11011)
!11410 = !DILocation(line: 1718, column: 38, scope: !11011)
!11411 = !DILocation(line: 1719, column: 29, scope: !11011)
!11412 = distinct !{!11412, !11411}
!11413 = !DILocalVariable(name: "n", scope: !11010, file: !1800, line: 1719, type: !1012)
!11414 = !DILocation(line: 1719, column: 38, scope: !11010)
!11415 = !DILocalVariable(name: "nb_bits", scope: !11010, file: !1800, line: 1719, type: !1012)
!11416 = !DILocation(line: 1719, column: 41, scope: !11010)
!11417 = !DILocalVariable(name: "index", scope: !11010, file: !1800, line: 1719, type: !1013)
!11418 = !DILocation(line: 1719, column: 63, scope: !11010)
!11419 = !DILocation(line: 1719, column: 88, scope: !11420)
!11420 = !DILexicalBlockFile(scope: !11010, file: !1800, discriminator: 1)
!11421 = !DILocation(line: 1719, column: 78, scope: !11420)
!11422 = !DILocation(line: 1719, column: 76, scope: !11420)
!11423 = !DILocation(line: 1719, column: 117, scope: !11420)
!11424 = !DILocation(line: 1719, column: 109, scope: !11420)
!11425 = !DILocation(line: 1719, column: 107, scope: !11420)
!11426 = !DILocation(line: 1719, column: 140, scope: !11420)
!11427 = !DILocation(line: 1719, column: 132, scope: !11420)
!11428 = !DILocation(line: 1719, column: 130, scope: !11420)
!11429 = !DILocation(line: 1719, column: 164, scope: !11420)
!11430 = !DILocation(line: 1719, column: 166, scope: !11420)
!11431 = !DILocation(line: 1719, column: 155, scope: !11420)
!11432 = !DILocation(line: 1719, column: 186, scope: !11433)
!11433 = !DILexicalBlockFile(scope: !11008, file: !1800, discriminator: 2)
!11434 = !DILocation(line: 1719, column: 204, scope: !11433)
!11435 = !DILocation(line: 1719, column: 213, scope: !11433)
!11436 = !DILocation(line: 1719, column: 201, scope: !11433)
!11437 = !DILocation(line: 1719, column: 185, scope: !11433)
!11438 = !DILocation(line: 1719, column: 223, scope: !11439)
!11439 = !DILexicalBlockFile(scope: !11008, file: !1800, discriminator: 3)
!11440 = !DILocation(line: 1719, column: 232, scope: !11439)
!11441 = !DILocation(line: 1719, column: 185, scope: !11439)
!11442 = !DILocation(line: 1719, column: 242, scope: !11443)
!11443 = !DILexicalBlockFile(scope: !11008, file: !1800, discriminator: 4)
!11444 = !DILocation(line: 1719, column: 185, scope: !11443)
!11445 = !DILocation(line: 1719, column: 185, scope: !11007)
!11446 = !DILocation(line: 1719, column: 182, scope: !11007)
!11447 = !DILocation(line: 1719, column: 314, scope: !11007)
!11448 = !DILocation(line: 1719, column: 319, scope: !11007)
!11449 = !DILocation(line: 1719, column: 329, scope: !11007)
!11450 = !DILocation(line: 1719, column: 338, scope: !11007)
!11451 = !DILocation(line: 1719, column: 326, scope: !11007)
!11452 = !DILocation(line: 1719, column: 347, scope: !11007)
!11453 = !DILocation(line: 1719, column: 270, scope: !11007)
!11454 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !11006)
!11455 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !11006)
!11456 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !11006)
!11457 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !11006)
!11458 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !11006)
!11459 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !11006)
!11460 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !11006)
!11461 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !11006)
!11462 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !11006)
!11463 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !11006)
!11464 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !11006)
!11465 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !11006)
!11466 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !11006)
!11467 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !11006)
!11468 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !11006)
!11469 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !11006)
!11470 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !11006)
!11471 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !11006)
!11472 = !DILocation(line: 1719, column: 355, scope: !11007)
!11473 = !DILocation(line: 1719, column: 364, scope: !11007)
!11474 = !DILocation(line: 1719, column: 351, scope: !11007)
!11475 = !DILocation(line: 1719, column: 268, scope: !11007)
!11476 = !DILocation(line: 1719, column: 381, scope: !11007)
!11477 = !DILocation(line: 1719, column: 380, scope: !11007)
!11478 = !DILocation(line: 1719, column: 378, scope: !11007)
!11479 = !DILocation(line: 1719, column: 402, scope: !11007)
!11480 = !DILocation(line: 1719, column: 412, scope: !11007)
!11481 = !DILocation(line: 1719, column: 392, scope: !11482)
!11482 = !DILexicalBlockFile(scope: !11007, file: !1800, discriminator: 12)
!11483 = !DILocation(line: 1719, column: 423, scope: !11007)
!11484 = !DILocation(line: 1719, column: 421, scope: !11007)
!11485 = !DILocation(line: 1719, column: 390, scope: !11007)
!11486 = !DILocation(line: 1719, column: 444, scope: !11007)
!11487 = !DILocation(line: 1719, column: 436, scope: !11007)
!11488 = !DILocation(line: 1719, column: 434, scope: !11007)
!11489 = !DILocation(line: 1719, column: 467, scope: !11007)
!11490 = !DILocation(line: 1719, column: 459, scope: !11007)
!11491 = !DILocation(line: 1719, column: 457, scope: !11007)
!11492 = !DILocation(line: 1719, column: 819, scope: !11007)
!11493 = !DILocation(line: 1719, column: 821, scope: !11494)
!11494 = !DILexicalBlockFile(scope: !11010, file: !1800, discriminator: 6)
!11495 = distinct !{!11495, !11496}
!11496 = !DILocation(line: 1719, column: 821, scope: !11010)
!11497 = !DILocation(line: 1719, column: 840, scope: !11498)
!11498 = !DILexicalBlockFile(scope: !11499, file: !1800, discriminator: 7)
!11499 = distinct !DILexicalBlock(scope: !11010, file: !1800, line: 1719, column: 824)
!11500 = !DILocation(line: 1719, column: 835, scope: !11498)
!11501 = !DILocation(line: 1719, column: 857, scope: !11498)
!11502 = !DILocation(line: 1719, column: 875, scope: !11498)
!11503 = !DILocation(line: 1719, column: 887, scope: !11498)
!11504 = !DILocation(line: 1719, column: 884, scope: !11498)
!11505 = !DILocation(line: 1719, column: 872, scope: !11498)
!11506 = !DILocation(line: 1719, column: 856, scope: !11498)
!11507 = !DILocation(line: 1719, column: 894, scope: !11508)
!11508 = !DILexicalBlockFile(scope: !11499, file: !1800, discriminator: 8)
!11509 = !DILocation(line: 1719, column: 906, scope: !11508)
!11510 = !DILocation(line: 1719, column: 903, scope: !11508)
!11511 = !DILocation(line: 1719, column: 856, scope: !11508)
!11512 = !DILocation(line: 1719, column: 913, scope: !11513)
!11513 = !DILexicalBlockFile(scope: !11499, file: !1800, discriminator: 9)
!11514 = !DILocation(line: 1719, column: 856, scope: !11513)
!11515 = !DILocation(line: 1719, column: 856, scope: !11516)
!11516 = !DILexicalBlockFile(scope: !11499, file: !1800, discriminator: 10)
!11517 = !DILocation(line: 1719, column: 853, scope: !11516)
!11518 = !DILocation(line: 1719, column: 930, scope: !11516)
!11519 = !DILocation(line: 1719, column: 943, scope: !11520)
!11520 = !DILexicalBlockFile(scope: !11010, file: !1800, discriminator: 11)
!11521 = !DILocation(line: 1720, column: 52, scope: !11011)
!11522 = !DILocation(line: 1720, column: 38, scope: !11011)
!11523 = !DILocation(line: 1720, column: 36, scope: !11011)
!11524 = !DILocation(line: 1722, column: 44, scope: !11011)
!11525 = !DILocation(line: 1722, column: 48, scope: !11011)
!11526 = !DILocation(line: 1722, column: 34, scope: !11011)
!11527 = !DILocation(line: 1722, column: 32, scope: !11011)
!11528 = !DILocation(line: 1726, column: 25, scope: !11011)
!11529 = !DILocation(line: 1726, column: 38, scope: !11530)
!11530 = !DILexicalBlockFile(scope: !11012, file: !1800, discriminator: 1)
!11531 = !DILocation(line: 1726, column: 25, scope: !11530)
!11532 = !DILocation(line: 1727, column: 21, scope: !11012)
!11533 = !DILocation(line: 1710, column: 68, scope: !11534)
!11534 = !DILexicalBlockFile(scope: !11013, file: !1800, discriminator: 2)
!11535 = !DILocation(line: 1710, column: 75, scope: !11534)
!11536 = !DILocation(line: 1710, column: 21, scope: !11534)
!11537 = distinct !{!11537, !11538}
!11538 = !DILocation(line: 1710, column: 21, scope: !10950)
!11539 = !DILocation(line: 1728, column: 21, scope: !10950)
!11540 = !DILocation(line: 1731, column: 32, scope: !11002)
!11541 = !DILocation(line: 1731, column: 26, scope: !11002)
!11542 = !DILocation(line: 1731, column: 37, scope: !11543)
!11543 = !DILexicalBlockFile(scope: !11001, file: !1800, discriminator: 1)
!11544 = !DILocation(line: 1731, column: 56, scope: !11543)
!11545 = !DILocation(line: 1731, column: 43, scope: !11543)
!11546 = !DILocation(line: 1731, column: 21, scope: !11543)
!11547 = !DILocalVariable(name: "cf", scope: !11000, file: !1800, line: 1732, type: !1032)
!11548 = !DILocation(line: 1732, column: 35, scope: !11000)
!11549 = !DILocation(line: 1732, column: 40, scope: !11000)
!11550 = !DILocalVariable(name: "len", scope: !11000, file: !1800, line: 1733, type: !1012)
!11551 = !DILocation(line: 1733, column: 29, scope: !11000)
!11552 = !DILocation(line: 1733, column: 35, scope: !11000)
!11553 = !DILocation(line: 1735, column: 25, scope: !11000)
!11554 = distinct !{!11554, !11553}
!11555 = !DILocalVariable(name: "code", scope: !10999, file: !1800, line: 1736, type: !1012)
!11556 = !DILocation(line: 1736, column: 33, scope: !10999)
!11557 = !DILocalVariable(name: "nnz", scope: !10999, file: !1800, line: 1737, type: !1013)
!11558 = !DILocation(line: 1737, column: 38, scope: !10999)
!11559 = !DILocalVariable(name: "cb_idx", scope: !10999, file: !1800, line: 1738, type: !1013)
!11560 = !DILocation(line: 1738, column: 38, scope: !10999)
!11561 = !DILocalVariable(name: "bits", scope: !10999, file: !1800, line: 1739, type: !1029)
!11562 = !DILocation(line: 1739, column: 38, scope: !10999)
!11563 = !DILocation(line: 1741, column: 84, scope: !10999)
!11564 = !DILocation(line: 1741, column: 89, scope: !10999)
!11565 = !DILocation(line: 1741, column: 99, scope: !10999)
!11566 = !DILocation(line: 1741, column: 108, scope: !10999)
!11567 = !DILocation(line: 1741, column: 96, scope: !10999)
!11568 = !DILocation(line: 1741, column: 117, scope: !10999)
!11569 = !DILocation(line: 1741, column: 40, scope: !10999)
!11570 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !11004)
!11571 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !11004)
!11572 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !11004)
!11573 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !11004)
!11574 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !11004)
!11575 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !11004)
!11576 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !11004)
!11577 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !11004)
!11578 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !11004)
!11579 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !11004)
!11580 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !11004)
!11581 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !11004)
!11582 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !11004)
!11583 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !11004)
!11584 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !11004)
!11585 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !11004)
!11586 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !11004)
!11587 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !11004)
!11588 = !DILocation(line: 1741, column: 125, scope: !10999)
!11589 = !DILocation(line: 1741, column: 134, scope: !10999)
!11590 = !DILocation(line: 1741, column: 121, scope: !10999)
!11591 = !DILocation(line: 1741, column: 38, scope: !10999)
!11592 = !DILocation(line: 1742, column: 29, scope: !10999)
!11593 = distinct !{!11593, !11592}
!11594 = !DILocalVariable(name: "n", scope: !10998, file: !1800, line: 1742, type: !1012)
!11595 = !DILocation(line: 1742, column: 38, scope: !10998)
!11596 = !DILocalVariable(name: "nb_bits", scope: !10998, file: !1800, line: 1742, type: !1012)
!11597 = !DILocation(line: 1742, column: 41, scope: !10998)
!11598 = !DILocalVariable(name: "index", scope: !10998, file: !1800, line: 1742, type: !1013)
!11599 = !DILocation(line: 1742, column: 63, scope: !10998)
!11600 = !DILocation(line: 1742, column: 88, scope: !11601)
!11601 = !DILexicalBlockFile(scope: !10998, file: !1800, discriminator: 1)
!11602 = !DILocation(line: 1742, column: 78, scope: !11601)
!11603 = !DILocation(line: 1742, column: 76, scope: !11601)
!11604 = !DILocation(line: 1742, column: 117, scope: !11601)
!11605 = !DILocation(line: 1742, column: 109, scope: !11601)
!11606 = !DILocation(line: 1742, column: 107, scope: !11601)
!11607 = !DILocation(line: 1742, column: 140, scope: !11601)
!11608 = !DILocation(line: 1742, column: 132, scope: !11601)
!11609 = !DILocation(line: 1742, column: 130, scope: !11601)
!11610 = !DILocation(line: 1742, column: 164, scope: !11601)
!11611 = !DILocation(line: 1742, column: 166, scope: !11601)
!11612 = !DILocation(line: 1742, column: 155, scope: !11601)
!11613 = !DILocation(line: 1742, column: 186, scope: !11614)
!11614 = !DILexicalBlockFile(scope: !10996, file: !1800, discriminator: 2)
!11615 = !DILocation(line: 1742, column: 204, scope: !11614)
!11616 = !DILocation(line: 1742, column: 213, scope: !11614)
!11617 = !DILocation(line: 1742, column: 201, scope: !11614)
!11618 = !DILocation(line: 1742, column: 185, scope: !11614)
!11619 = !DILocation(line: 1742, column: 223, scope: !11620)
!11620 = !DILexicalBlockFile(scope: !10996, file: !1800, discriminator: 3)
!11621 = !DILocation(line: 1742, column: 232, scope: !11620)
!11622 = !DILocation(line: 1742, column: 185, scope: !11620)
!11623 = !DILocation(line: 1742, column: 242, scope: !11624)
!11624 = !DILexicalBlockFile(scope: !10996, file: !1800, discriminator: 4)
!11625 = !DILocation(line: 1742, column: 185, scope: !11624)
!11626 = !DILocation(line: 1742, column: 185, scope: !10995)
!11627 = !DILocation(line: 1742, column: 182, scope: !10995)
!11628 = !DILocation(line: 1742, column: 314, scope: !10995)
!11629 = !DILocation(line: 1742, column: 319, scope: !10995)
!11630 = !DILocation(line: 1742, column: 329, scope: !10995)
!11631 = !DILocation(line: 1742, column: 338, scope: !10995)
!11632 = !DILocation(line: 1742, column: 326, scope: !10995)
!11633 = !DILocation(line: 1742, column: 347, scope: !10995)
!11634 = !DILocation(line: 1742, column: 270, scope: !10995)
!11635 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !10994)
!11636 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !10994)
!11637 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !10994)
!11638 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !10994)
!11639 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !10994)
!11640 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !10994)
!11641 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !10994)
!11642 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !10994)
!11643 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !10994)
!11644 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !10994)
!11645 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !10994)
!11646 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !10994)
!11647 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !10994)
!11648 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !10994)
!11649 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !10994)
!11650 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !10994)
!11651 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !10994)
!11652 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !10994)
!11653 = !DILocation(line: 1742, column: 355, scope: !10995)
!11654 = !DILocation(line: 1742, column: 364, scope: !10995)
!11655 = !DILocation(line: 1742, column: 351, scope: !10995)
!11656 = !DILocation(line: 1742, column: 268, scope: !10995)
!11657 = !DILocation(line: 1742, column: 381, scope: !10995)
!11658 = !DILocation(line: 1742, column: 380, scope: !10995)
!11659 = !DILocation(line: 1742, column: 378, scope: !10995)
!11660 = !DILocation(line: 1742, column: 402, scope: !10995)
!11661 = !DILocation(line: 1742, column: 412, scope: !10995)
!11662 = !DILocation(line: 1742, column: 392, scope: !11663)
!11663 = !DILexicalBlockFile(scope: !10995, file: !1800, discriminator: 12)
!11664 = !DILocation(line: 1742, column: 423, scope: !10995)
!11665 = !DILocation(line: 1742, column: 421, scope: !10995)
!11666 = !DILocation(line: 1742, column: 390, scope: !10995)
!11667 = !DILocation(line: 1742, column: 444, scope: !10995)
!11668 = !DILocation(line: 1742, column: 436, scope: !10995)
!11669 = !DILocation(line: 1742, column: 434, scope: !10995)
!11670 = !DILocation(line: 1742, column: 467, scope: !10995)
!11671 = !DILocation(line: 1742, column: 459, scope: !10995)
!11672 = !DILocation(line: 1742, column: 457, scope: !10995)
!11673 = !DILocation(line: 1742, column: 819, scope: !10995)
!11674 = !DILocation(line: 1742, column: 821, scope: !11675)
!11675 = !DILexicalBlockFile(scope: !10998, file: !1800, discriminator: 6)
!11676 = distinct !{!11676, !11677}
!11677 = !DILocation(line: 1742, column: 821, scope: !10998)
!11678 = !DILocation(line: 1742, column: 840, scope: !11679)
!11679 = !DILexicalBlockFile(scope: !11680, file: !1800, discriminator: 7)
!11680 = distinct !DILexicalBlock(scope: !10998, file: !1800, line: 1742, column: 824)
!11681 = !DILocation(line: 1742, column: 835, scope: !11679)
!11682 = !DILocation(line: 1742, column: 857, scope: !11679)
!11683 = !DILocation(line: 1742, column: 875, scope: !11679)
!11684 = !DILocation(line: 1742, column: 887, scope: !11679)
!11685 = !DILocation(line: 1742, column: 884, scope: !11679)
!11686 = !DILocation(line: 1742, column: 872, scope: !11679)
!11687 = !DILocation(line: 1742, column: 856, scope: !11679)
!11688 = !DILocation(line: 1742, column: 894, scope: !11689)
!11689 = !DILexicalBlockFile(scope: !11680, file: !1800, discriminator: 8)
!11690 = !DILocation(line: 1742, column: 906, scope: !11689)
!11691 = !DILocation(line: 1742, column: 903, scope: !11689)
!11692 = !DILocation(line: 1742, column: 856, scope: !11689)
!11693 = !DILocation(line: 1742, column: 913, scope: !11694)
!11694 = !DILexicalBlockFile(scope: !11680, file: !1800, discriminator: 9)
!11695 = !DILocation(line: 1742, column: 856, scope: !11694)
!11696 = !DILocation(line: 1742, column: 856, scope: !11697)
!11697 = !DILexicalBlockFile(scope: !11680, file: !1800, discriminator: 10)
!11698 = !DILocation(line: 1742, column: 853, scope: !11697)
!11699 = !DILocation(line: 1742, column: 930, scope: !11697)
!11700 = !DILocation(line: 1742, column: 943, scope: !11701)
!11701 = !DILexicalBlockFile(scope: !10998, file: !1800, discriminator: 11)
!11702 = !DILocation(line: 1743, column: 52, scope: !10999)
!11703 = !DILocation(line: 1743, column: 38, scope: !10999)
!11704 = !DILocation(line: 1743, column: 36, scope: !10999)
!11705 = !DILocation(line: 1744, column: 35, scope: !10999)
!11706 = !DILocation(line: 1744, column: 42, scope: !10999)
!11707 = !DILocation(line: 1744, column: 47, scope: !10999)
!11708 = !DILocation(line: 1744, column: 33, scope: !10999)
!11709 = !DILocation(line: 1745, column: 36, scope: !10999)
!11710 = !DILocation(line: 1745, column: 54, scope: !11711)
!11711 = !DILexicalBlockFile(scope: !10999, file: !1800, discriminator: 1)
!11712 = !DILocation(line: 1745, column: 36, scope: !11711)
!11713 = !DILocation(line: 1745, column: 36, scope: !11714)
!11714 = !DILexicalBlockFile(scope: !10999, file: !1800, discriminator: 2)
!11715 = !DILocation(line: 1745, column: 36, scope: !11716)
!11716 = !DILexicalBlockFile(scope: !10999, file: !1800, discriminator: 3)
!11717 = !DILocation(line: 1745, column: 34, scope: !11716)
!11718 = !DILocation(line: 1746, column: 42, scope: !10999)
!11719 = !DILocation(line: 1746, column: 60, scope: !10999)
!11720 = !DILocation(line: 1746, column: 72, scope: !10999)
!11721 = !DILocation(line: 1746, column: 69, scope: !10999)
!11722 = !DILocation(line: 1746, column: 57, scope: !10999)
!11723 = !DILocation(line: 1746, column: 41, scope: !10999)
!11724 = !DILocation(line: 1746, column: 81, scope: !11711)
!11725 = !DILocation(line: 1746, column: 93, scope: !11711)
!11726 = !DILocation(line: 1746, column: 90, scope: !11711)
!11727 = !DILocation(line: 1746, column: 41, scope: !11711)
!11728 = !DILocation(line: 1746, column: 102, scope: !11714)
!11729 = !DILocation(line: 1746, column: 41, scope: !11714)
!11730 = !DILocation(line: 1746, column: 41, scope: !11716)
!11731 = !DILocation(line: 1746, column: 38, scope: !11716)
!11732 = !DILocation(line: 1748, column: 44, scope: !10999)
!11733 = !DILocation(line: 1748, column: 48, scope: !10999)
!11734 = !DILocation(line: 1748, column: 56, scope: !10999)
!11735 = !DILocation(line: 1748, column: 34, scope: !10999)
!11736 = !DILocation(line: 1748, column: 32, scope: !10999)
!11737 = !DILocation(line: 1752, column: 25, scope: !10999)
!11738 = !DILocation(line: 1752, column: 38, scope: !11739)
!11739 = !DILexicalBlockFile(scope: !11000, file: !1800, discriminator: 1)
!11740 = !DILocation(line: 1752, column: 25, scope: !11739)
!11741 = !DILocation(line: 1753, column: 21, scope: !11000)
!11742 = !DILocation(line: 1731, column: 68, scope: !11743)
!11743 = !DILexicalBlockFile(scope: !11001, file: !1800, discriminator: 2)
!11744 = !DILocation(line: 1731, column: 75, scope: !11743)
!11745 = !DILocation(line: 1731, column: 21, scope: !11743)
!11746 = distinct !{!11746, !11747}
!11747 = !DILocation(line: 1731, column: 21, scope: !10950)
!11748 = !DILocation(line: 1754, column: 21, scope: !10950)
!11749 = !DILocation(line: 1757, column: 32, scope: !10983)
!11750 = !DILocation(line: 1757, column: 26, scope: !10983)
!11751 = !DILocation(line: 1757, column: 37, scope: !11752)
!11752 = !DILexicalBlockFile(scope: !10982, file: !1800, discriminator: 1)
!11753 = !DILocation(line: 1757, column: 56, scope: !11752)
!11754 = !DILocation(line: 1757, column: 43, scope: !11752)
!11755 = !DILocation(line: 1757, column: 21, scope: !11752)
!11756 = !DILocalVariable(name: "cf", scope: !10981, file: !1800, line: 1758, type: !1032)
!11757 = !DILocation(line: 1758, column: 35, scope: !10981)
!11758 = !DILocation(line: 1758, column: 40, scope: !10981)
!11759 = !DILocalVariable(name: "len", scope: !10981, file: !1800, line: 1759, type: !1012)
!11760 = !DILocation(line: 1759, column: 29, scope: !10981)
!11761 = !DILocation(line: 1759, column: 35, scope: !10981)
!11762 = !DILocation(line: 1761, column: 25, scope: !10981)
!11763 = distinct !{!11763, !11762}
!11764 = !DILocalVariable(name: "code", scope: !10980, file: !1800, line: 1762, type: !1012)
!11765 = !DILocation(line: 1762, column: 33, scope: !10980)
!11766 = !DILocalVariable(name: "cb_idx", scope: !10980, file: !1800, line: 1763, type: !1013)
!11767 = !DILocation(line: 1763, column: 38, scope: !10980)
!11768 = !DILocation(line: 1765, column: 84, scope: !10980)
!11769 = !DILocation(line: 1765, column: 89, scope: !10980)
!11770 = !DILocation(line: 1765, column: 99, scope: !10980)
!11771 = !DILocation(line: 1765, column: 108, scope: !10980)
!11772 = !DILocation(line: 1765, column: 96, scope: !10980)
!11773 = !DILocation(line: 1765, column: 117, scope: !10980)
!11774 = !DILocation(line: 1765, column: 40, scope: !10980)
!11775 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !10985)
!11776 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !10985)
!11777 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !10985)
!11778 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !10985)
!11779 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !10985)
!11780 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !10985)
!11781 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !10985)
!11782 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !10985)
!11783 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !10985)
!11784 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !10985)
!11785 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !10985)
!11786 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !10985)
!11787 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !10985)
!11788 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !10985)
!11789 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !10985)
!11790 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !10985)
!11791 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !10985)
!11792 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !10985)
!11793 = !DILocation(line: 1765, column: 125, scope: !10980)
!11794 = !DILocation(line: 1765, column: 134, scope: !10980)
!11795 = !DILocation(line: 1765, column: 121, scope: !10980)
!11796 = !DILocation(line: 1765, column: 38, scope: !10980)
!11797 = !DILocation(line: 1766, column: 29, scope: !10980)
!11798 = distinct !{!11798, !11797}
!11799 = !DILocalVariable(name: "n", scope: !10979, file: !1800, line: 1766, type: !1012)
!11800 = !DILocation(line: 1766, column: 38, scope: !10979)
!11801 = !DILocalVariable(name: "nb_bits", scope: !10979, file: !1800, line: 1766, type: !1012)
!11802 = !DILocation(line: 1766, column: 41, scope: !10979)
!11803 = !DILocalVariable(name: "index", scope: !10979, file: !1800, line: 1766, type: !1013)
!11804 = !DILocation(line: 1766, column: 63, scope: !10979)
!11805 = !DILocation(line: 1766, column: 88, scope: !11806)
!11806 = !DILexicalBlockFile(scope: !10979, file: !1800, discriminator: 1)
!11807 = !DILocation(line: 1766, column: 78, scope: !11806)
!11808 = !DILocation(line: 1766, column: 76, scope: !11806)
!11809 = !DILocation(line: 1766, column: 117, scope: !11806)
!11810 = !DILocation(line: 1766, column: 109, scope: !11806)
!11811 = !DILocation(line: 1766, column: 107, scope: !11806)
!11812 = !DILocation(line: 1766, column: 140, scope: !11806)
!11813 = !DILocation(line: 1766, column: 132, scope: !11806)
!11814 = !DILocation(line: 1766, column: 130, scope: !11806)
!11815 = !DILocation(line: 1766, column: 164, scope: !11806)
!11816 = !DILocation(line: 1766, column: 166, scope: !11806)
!11817 = !DILocation(line: 1766, column: 155, scope: !11806)
!11818 = !DILocation(line: 1766, column: 186, scope: !11819)
!11819 = !DILexicalBlockFile(scope: !10977, file: !1800, discriminator: 2)
!11820 = !DILocation(line: 1766, column: 204, scope: !11819)
!11821 = !DILocation(line: 1766, column: 213, scope: !11819)
!11822 = !DILocation(line: 1766, column: 201, scope: !11819)
!11823 = !DILocation(line: 1766, column: 185, scope: !11819)
!11824 = !DILocation(line: 1766, column: 223, scope: !11825)
!11825 = !DILexicalBlockFile(scope: !10977, file: !1800, discriminator: 3)
!11826 = !DILocation(line: 1766, column: 232, scope: !11825)
!11827 = !DILocation(line: 1766, column: 185, scope: !11825)
!11828 = !DILocation(line: 1766, column: 242, scope: !11829)
!11829 = !DILexicalBlockFile(scope: !10977, file: !1800, discriminator: 4)
!11830 = !DILocation(line: 1766, column: 185, scope: !11829)
!11831 = !DILocation(line: 1766, column: 185, scope: !10976)
!11832 = !DILocation(line: 1766, column: 182, scope: !10976)
!11833 = !DILocation(line: 1766, column: 314, scope: !10976)
!11834 = !DILocation(line: 1766, column: 319, scope: !10976)
!11835 = !DILocation(line: 1766, column: 329, scope: !10976)
!11836 = !DILocation(line: 1766, column: 338, scope: !10976)
!11837 = !DILocation(line: 1766, column: 326, scope: !10976)
!11838 = !DILocation(line: 1766, column: 347, scope: !10976)
!11839 = !DILocation(line: 1766, column: 270, scope: !10976)
!11840 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !10975)
!11841 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !10975)
!11842 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !10975)
!11843 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !10975)
!11844 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !10975)
!11845 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !10975)
!11846 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !10975)
!11847 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !10975)
!11848 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !10975)
!11849 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !10975)
!11850 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !10975)
!11851 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !10975)
!11852 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !10975)
!11853 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !10975)
!11854 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !10975)
!11855 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !10975)
!11856 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !10975)
!11857 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !10975)
!11858 = !DILocation(line: 1766, column: 355, scope: !10976)
!11859 = !DILocation(line: 1766, column: 364, scope: !10976)
!11860 = !DILocation(line: 1766, column: 351, scope: !10976)
!11861 = !DILocation(line: 1766, column: 268, scope: !10976)
!11862 = !DILocation(line: 1766, column: 381, scope: !10976)
!11863 = !DILocation(line: 1766, column: 380, scope: !10976)
!11864 = !DILocation(line: 1766, column: 378, scope: !10976)
!11865 = !DILocation(line: 1766, column: 402, scope: !10976)
!11866 = !DILocation(line: 1766, column: 412, scope: !10976)
!11867 = !DILocation(line: 1766, column: 392, scope: !11868)
!11868 = !DILexicalBlockFile(scope: !10976, file: !1800, discriminator: 12)
!11869 = !DILocation(line: 1766, column: 423, scope: !10976)
!11870 = !DILocation(line: 1766, column: 421, scope: !10976)
!11871 = !DILocation(line: 1766, column: 390, scope: !10976)
!11872 = !DILocation(line: 1766, column: 444, scope: !10976)
!11873 = !DILocation(line: 1766, column: 436, scope: !10976)
!11874 = !DILocation(line: 1766, column: 434, scope: !10976)
!11875 = !DILocation(line: 1766, column: 467, scope: !10976)
!11876 = !DILocation(line: 1766, column: 459, scope: !10976)
!11877 = !DILocation(line: 1766, column: 457, scope: !10976)
!11878 = !DILocation(line: 1766, column: 819, scope: !10976)
!11879 = !DILocation(line: 1766, column: 821, scope: !11880)
!11880 = !DILexicalBlockFile(scope: !10979, file: !1800, discriminator: 6)
!11881 = distinct !{!11881, !11882}
!11882 = !DILocation(line: 1766, column: 821, scope: !10979)
!11883 = !DILocation(line: 1766, column: 840, scope: !11884)
!11884 = !DILexicalBlockFile(scope: !11885, file: !1800, discriminator: 7)
!11885 = distinct !DILexicalBlock(scope: !10979, file: !1800, line: 1766, column: 824)
!11886 = !DILocation(line: 1766, column: 835, scope: !11884)
!11887 = !DILocation(line: 1766, column: 857, scope: !11884)
!11888 = !DILocation(line: 1766, column: 875, scope: !11884)
!11889 = !DILocation(line: 1766, column: 887, scope: !11884)
!11890 = !DILocation(line: 1766, column: 884, scope: !11884)
!11891 = !DILocation(line: 1766, column: 872, scope: !11884)
!11892 = !DILocation(line: 1766, column: 856, scope: !11884)
!11893 = !DILocation(line: 1766, column: 894, scope: !11894)
!11894 = !DILexicalBlockFile(scope: !11885, file: !1800, discriminator: 8)
!11895 = !DILocation(line: 1766, column: 906, scope: !11894)
!11896 = !DILocation(line: 1766, column: 903, scope: !11894)
!11897 = !DILocation(line: 1766, column: 856, scope: !11894)
!11898 = !DILocation(line: 1766, column: 913, scope: !11899)
!11899 = !DILexicalBlockFile(scope: !11885, file: !1800, discriminator: 9)
!11900 = !DILocation(line: 1766, column: 856, scope: !11899)
!11901 = !DILocation(line: 1766, column: 856, scope: !11902)
!11902 = !DILexicalBlockFile(scope: !11885, file: !1800, discriminator: 10)
!11903 = !DILocation(line: 1766, column: 853, scope: !11902)
!11904 = !DILocation(line: 1766, column: 930, scope: !11902)
!11905 = !DILocation(line: 1766, column: 943, scope: !11906)
!11906 = !DILexicalBlockFile(scope: !10979, file: !1800, discriminator: 11)
!11907 = !DILocation(line: 1767, column: 52, scope: !10980)
!11908 = !DILocation(line: 1767, column: 38, scope: !10980)
!11909 = !DILocation(line: 1767, column: 36, scope: !10980)
!11910 = !DILocation(line: 1769, column: 44, scope: !10980)
!11911 = !DILocation(line: 1769, column: 48, scope: !10980)
!11912 = !DILocation(line: 1769, column: 34, scope: !10980)
!11913 = !DILocation(line: 1769, column: 32, scope: !10980)
!11914 = !DILocation(line: 1773, column: 25, scope: !10980)
!11915 = !DILocation(line: 1773, column: 38, scope: !11916)
!11916 = !DILexicalBlockFile(scope: !10981, file: !1800, discriminator: 1)
!11917 = !DILocation(line: 1773, column: 25, scope: !11916)
!11918 = !DILocation(line: 1774, column: 21, scope: !10981)
!11919 = !DILocation(line: 1757, column: 68, scope: !11920)
!11920 = !DILexicalBlockFile(scope: !10982, file: !1800, discriminator: 2)
!11921 = !DILocation(line: 1757, column: 75, scope: !11920)
!11922 = !DILocation(line: 1757, column: 21, scope: !11920)
!11923 = distinct !{!11923, !11924}
!11924 = !DILocation(line: 1757, column: 21, scope: !10950)
!11925 = !DILocation(line: 1775, column: 21, scope: !10950)
!11926 = !DILocation(line: 1779, column: 32, scope: !10949)
!11927 = !DILocation(line: 1779, column: 26, scope: !10949)
!11928 = !DILocation(line: 1779, column: 37, scope: !11929)
!11929 = !DILexicalBlockFile(scope: !10948, file: !1800, discriminator: 1)
!11930 = !DILocation(line: 1779, column: 56, scope: !11929)
!11931 = !DILocation(line: 1779, column: 43, scope: !11929)
!11932 = !DILocation(line: 1779, column: 21, scope: !11929)
!11933 = !DILocalVariable(name: "cf", scope: !10947, file: !1800, line: 1780, type: !1032)
!11934 = !DILocation(line: 1780, column: 35, scope: !10947)
!11935 = !DILocation(line: 1780, column: 40, scope: !10947)
!11936 = !DILocalVariable(name: "len", scope: !10947, file: !1800, line: 1781, type: !1012)
!11937 = !DILocation(line: 1781, column: 29, scope: !10947)
!11938 = !DILocation(line: 1781, column: 35, scope: !10947)
!11939 = !DILocation(line: 1783, column: 25, scope: !10947)
!11940 = distinct !{!11940, !11939}
!11941 = !DILocalVariable(name: "code", scope: !10946, file: !1800, line: 1784, type: !1012)
!11942 = !DILocation(line: 1784, column: 33, scope: !10946)
!11943 = !DILocalVariable(name: "nnz", scope: !10946, file: !1800, line: 1785, type: !1013)
!11944 = !DILocation(line: 1785, column: 38, scope: !10946)
!11945 = !DILocalVariable(name: "cb_idx", scope: !10946, file: !1800, line: 1786, type: !1013)
!11946 = !DILocation(line: 1786, column: 38, scope: !10946)
!11947 = !DILocalVariable(name: "sign", scope: !10946, file: !1800, line: 1787, type: !1013)
!11948 = !DILocation(line: 1787, column: 38, scope: !10946)
!11949 = !DILocation(line: 1789, column: 84, scope: !10946)
!11950 = !DILocation(line: 1789, column: 89, scope: !10946)
!11951 = !DILocation(line: 1789, column: 99, scope: !10946)
!11952 = !DILocation(line: 1789, column: 108, scope: !10946)
!11953 = !DILocation(line: 1789, column: 96, scope: !10946)
!11954 = !DILocation(line: 1789, column: 117, scope: !10946)
!11955 = !DILocation(line: 1789, column: 40, scope: !10946)
!11956 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !10967)
!11957 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !10967)
!11958 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !10967)
!11959 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !10967)
!11960 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !10967)
!11961 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !10967)
!11962 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !10967)
!11963 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !10967)
!11964 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !10967)
!11965 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !10967)
!11966 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !10967)
!11967 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !10967)
!11968 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !10967)
!11969 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !10967)
!11970 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !10967)
!11971 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !10967)
!11972 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !10967)
!11973 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !10967)
!11974 = !DILocation(line: 1789, column: 125, scope: !10946)
!11975 = !DILocation(line: 1789, column: 134, scope: !10946)
!11976 = !DILocation(line: 1789, column: 121, scope: !10946)
!11977 = !DILocation(line: 1789, column: 38, scope: !10946)
!11978 = !DILocation(line: 1790, column: 29, scope: !10946)
!11979 = distinct !{!11979, !11978}
!11980 = !DILocalVariable(name: "n", scope: !10945, file: !1800, line: 1790, type: !1012)
!11981 = !DILocation(line: 1790, column: 38, scope: !10945)
!11982 = !DILocalVariable(name: "nb_bits", scope: !10945, file: !1800, line: 1790, type: !1012)
!11983 = !DILocation(line: 1790, column: 41, scope: !10945)
!11984 = !DILocalVariable(name: "index", scope: !10945, file: !1800, line: 1790, type: !1013)
!11985 = !DILocation(line: 1790, column: 63, scope: !10945)
!11986 = !DILocation(line: 1790, column: 88, scope: !11987)
!11987 = !DILexicalBlockFile(scope: !10945, file: !1800, discriminator: 1)
!11988 = !DILocation(line: 1790, column: 78, scope: !11987)
!11989 = !DILocation(line: 1790, column: 76, scope: !11987)
!11990 = !DILocation(line: 1790, column: 117, scope: !11987)
!11991 = !DILocation(line: 1790, column: 109, scope: !11987)
!11992 = !DILocation(line: 1790, column: 107, scope: !11987)
!11993 = !DILocation(line: 1790, column: 140, scope: !11987)
!11994 = !DILocation(line: 1790, column: 132, scope: !11987)
!11995 = !DILocation(line: 1790, column: 130, scope: !11987)
!11996 = !DILocation(line: 1790, column: 164, scope: !11987)
!11997 = !DILocation(line: 1790, column: 166, scope: !11987)
!11998 = !DILocation(line: 1790, column: 155, scope: !11987)
!11999 = !DILocation(line: 1790, column: 186, scope: !12000)
!12000 = !DILexicalBlockFile(scope: !10943, file: !1800, discriminator: 2)
!12001 = !DILocation(line: 1790, column: 204, scope: !12000)
!12002 = !DILocation(line: 1790, column: 213, scope: !12000)
!12003 = !DILocation(line: 1790, column: 201, scope: !12000)
!12004 = !DILocation(line: 1790, column: 185, scope: !12000)
!12005 = !DILocation(line: 1790, column: 223, scope: !12006)
!12006 = !DILexicalBlockFile(scope: !10943, file: !1800, discriminator: 3)
!12007 = !DILocation(line: 1790, column: 232, scope: !12006)
!12008 = !DILocation(line: 1790, column: 185, scope: !12006)
!12009 = !DILocation(line: 1790, column: 242, scope: !12010)
!12010 = !DILexicalBlockFile(scope: !10943, file: !1800, discriminator: 4)
!12011 = !DILocation(line: 1790, column: 185, scope: !12010)
!12012 = !DILocation(line: 1790, column: 185, scope: !10942)
!12013 = !DILocation(line: 1790, column: 182, scope: !10942)
!12014 = !DILocation(line: 1790, column: 314, scope: !10942)
!12015 = !DILocation(line: 1790, column: 319, scope: !10942)
!12016 = !DILocation(line: 1790, column: 329, scope: !10942)
!12017 = !DILocation(line: 1790, column: 338, scope: !10942)
!12018 = !DILocation(line: 1790, column: 326, scope: !10942)
!12019 = !DILocation(line: 1790, column: 347, scope: !10942)
!12020 = !DILocation(line: 1790, column: 270, scope: !10942)
!12021 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !10941)
!12022 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !10941)
!12023 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !10941)
!12024 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !10941)
!12025 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !10941)
!12026 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !10941)
!12027 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !10941)
!12028 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !10941)
!12029 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !10941)
!12030 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !10941)
!12031 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !10941)
!12032 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !10941)
!12033 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !10941)
!12034 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !10941)
!12035 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !10941)
!12036 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !10941)
!12037 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !10941)
!12038 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !10941)
!12039 = !DILocation(line: 1790, column: 355, scope: !10942)
!12040 = !DILocation(line: 1790, column: 364, scope: !10942)
!12041 = !DILocation(line: 1790, column: 351, scope: !10942)
!12042 = !DILocation(line: 1790, column: 268, scope: !10942)
!12043 = !DILocation(line: 1790, column: 381, scope: !10942)
!12044 = !DILocation(line: 1790, column: 380, scope: !10942)
!12045 = !DILocation(line: 1790, column: 378, scope: !10942)
!12046 = !DILocation(line: 1790, column: 402, scope: !10942)
!12047 = !DILocation(line: 1790, column: 412, scope: !10942)
!12048 = !DILocation(line: 1790, column: 392, scope: !12049)
!12049 = !DILexicalBlockFile(scope: !10942, file: !1800, discriminator: 12)
!12050 = !DILocation(line: 1790, column: 423, scope: !10942)
!12051 = !DILocation(line: 1790, column: 421, scope: !10942)
!12052 = !DILocation(line: 1790, column: 390, scope: !10942)
!12053 = !DILocation(line: 1790, column: 444, scope: !10942)
!12054 = !DILocation(line: 1790, column: 436, scope: !10942)
!12055 = !DILocation(line: 1790, column: 434, scope: !10942)
!12056 = !DILocation(line: 1790, column: 467, scope: !10942)
!12057 = !DILocation(line: 1790, column: 459, scope: !10942)
!12058 = !DILocation(line: 1790, column: 457, scope: !10942)
!12059 = !DILocation(line: 1790, column: 819, scope: !10942)
!12060 = !DILocation(line: 1790, column: 821, scope: !12061)
!12061 = !DILexicalBlockFile(scope: !10945, file: !1800, discriminator: 6)
!12062 = distinct !{!12062, !12063}
!12063 = !DILocation(line: 1790, column: 821, scope: !10945)
!12064 = !DILocation(line: 1790, column: 840, scope: !12065)
!12065 = !DILexicalBlockFile(scope: !12066, file: !1800, discriminator: 7)
!12066 = distinct !DILexicalBlock(scope: !10945, file: !1800, line: 1790, column: 824)
!12067 = !DILocation(line: 1790, column: 835, scope: !12065)
!12068 = !DILocation(line: 1790, column: 857, scope: !12065)
!12069 = !DILocation(line: 1790, column: 875, scope: !12065)
!12070 = !DILocation(line: 1790, column: 887, scope: !12065)
!12071 = !DILocation(line: 1790, column: 884, scope: !12065)
!12072 = !DILocation(line: 1790, column: 872, scope: !12065)
!12073 = !DILocation(line: 1790, column: 856, scope: !12065)
!12074 = !DILocation(line: 1790, column: 894, scope: !12075)
!12075 = !DILexicalBlockFile(scope: !12066, file: !1800, discriminator: 8)
!12076 = !DILocation(line: 1790, column: 906, scope: !12075)
!12077 = !DILocation(line: 1790, column: 903, scope: !12075)
!12078 = !DILocation(line: 1790, column: 856, scope: !12075)
!12079 = !DILocation(line: 1790, column: 913, scope: !12080)
!12080 = !DILexicalBlockFile(scope: !12066, file: !1800, discriminator: 9)
!12081 = !DILocation(line: 1790, column: 856, scope: !12080)
!12082 = !DILocation(line: 1790, column: 856, scope: !12083)
!12083 = !DILexicalBlockFile(scope: !12066, file: !1800, discriminator: 10)
!12084 = !DILocation(line: 1790, column: 853, scope: !12083)
!12085 = !DILocation(line: 1790, column: 930, scope: !12083)
!12086 = !DILocation(line: 1790, column: 943, scope: !12087)
!12087 = !DILexicalBlockFile(scope: !10945, file: !1800, discriminator: 11)
!12088 = !DILocation(line: 1791, column: 52, scope: !10946)
!12089 = !DILocation(line: 1791, column: 38, scope: !10946)
!12090 = !DILocation(line: 1791, column: 36, scope: !10946)
!12091 = !DILocation(line: 1792, column: 35, scope: !10946)
!12092 = !DILocation(line: 1792, column: 42, scope: !10946)
!12093 = !DILocation(line: 1792, column: 47, scope: !10946)
!12094 = !DILocation(line: 1792, column: 33, scope: !10946)
!12095 = !DILocation(line: 1793, column: 36, scope: !10946)
!12096 = !DILocation(line: 1793, column: 52, scope: !12097)
!12097 = !DILexicalBlockFile(scope: !10946, file: !1800, discriminator: 1)
!12098 = !DILocation(line: 1793, column: 62, scope: !12097)
!12099 = !DILocation(line: 1793, column: 42, scope: !12097)
!12100 = !DILocation(line: 1793, column: 71, scope: !12097)
!12101 = !DILocation(line: 1793, column: 78, scope: !12097)
!12102 = !DILocation(line: 1793, column: 67, scope: !12097)
!12103 = !DILocation(line: 1793, column: 36, scope: !12097)
!12104 = !DILocation(line: 1793, column: 36, scope: !12105)
!12105 = !DILexicalBlockFile(scope: !10946, file: !1800, discriminator: 2)
!12106 = !DILocation(line: 1793, column: 36, scope: !12107)
!12107 = !DILexicalBlockFile(scope: !10946, file: !1800, discriminator: 3)
!12108 = !DILocation(line: 1793, column: 34, scope: !12107)
!12109 = !DILocation(line: 1794, column: 42, scope: !10946)
!12110 = !DILocation(line: 1794, column: 60, scope: !10946)
!12111 = !DILocation(line: 1794, column: 72, scope: !10946)
!12112 = !DILocation(line: 1794, column: 69, scope: !10946)
!12113 = !DILocation(line: 1794, column: 57, scope: !10946)
!12114 = !DILocation(line: 1794, column: 41, scope: !10946)
!12115 = !DILocation(line: 1794, column: 81, scope: !12097)
!12116 = !DILocation(line: 1794, column: 93, scope: !12097)
!12117 = !DILocation(line: 1794, column: 90, scope: !12097)
!12118 = !DILocation(line: 1794, column: 41, scope: !12097)
!12119 = !DILocation(line: 1794, column: 102, scope: !12105)
!12120 = !DILocation(line: 1794, column: 41, scope: !12105)
!12121 = !DILocation(line: 1794, column: 41, scope: !12107)
!12122 = !DILocation(line: 1794, column: 38, scope: !12107)
!12123 = !DILocation(line: 1796, column: 44, scope: !10946)
!12124 = !DILocation(line: 1796, column: 48, scope: !10946)
!12125 = !DILocation(line: 1796, column: 56, scope: !10946)
!12126 = !DILocation(line: 1796, column: 34, scope: !10946)
!12127 = !DILocation(line: 1796, column: 32, scope: !10946)
!12128 = !DILocation(line: 1800, column: 25, scope: !10946)
!12129 = !DILocation(line: 1800, column: 38, scope: !12130)
!12130 = !DILexicalBlockFile(scope: !10947, file: !1800, discriminator: 1)
!12131 = !DILocation(line: 1800, column: 25, scope: !12130)
!12132 = !DILocation(line: 1801, column: 21, scope: !10947)
!12133 = !DILocation(line: 1779, column: 68, scope: !12134)
!12134 = !DILexicalBlockFile(scope: !10948, file: !1800, discriminator: 2)
!12135 = !DILocation(line: 1779, column: 75, scope: !12134)
!12136 = !DILocation(line: 1779, column: 21, scope: !12134)
!12137 = distinct !{!12137, !12138}
!12138 = !DILocation(line: 1779, column: 21, scope: !10950)
!12139 = !DILocation(line: 1802, column: 21, scope: !10950)
!12140 = !DILocation(line: 1805, column: 32, scope: !10965)
!12141 = !DILocation(line: 1805, column: 26, scope: !10965)
!12142 = !DILocation(line: 1805, column: 37, scope: !12143)
!12143 = !DILexicalBlockFile(scope: !10964, file: !1800, discriminator: 1)
!12144 = !DILocation(line: 1805, column: 56, scope: !12143)
!12145 = !DILocation(line: 1805, column: 43, scope: !12143)
!12146 = !DILocation(line: 1805, column: 21, scope: !12143)
!12147 = !DILocalVariable(name: "icf", scope: !10963, file: !1800, line: 1807, type: !1454)
!12148 = !DILocation(line: 1807, column: 30, scope: !10963)
!12149 = !DILocation(line: 1807, column: 36, scope: !10963)
!12150 = !DILocalVariable(name: "v", scope: !10963, file: !1800, line: 1808, type: !1012)
!12151 = !DILocation(line: 1808, column: 29, scope: !10963)
!12152 = !DILocalVariable(name: "len", scope: !10963, file: !1800, line: 1813, type: !1012)
!12153 = !DILocation(line: 1813, column: 29, scope: !10963)
!12154 = !DILocation(line: 1813, column: 35, scope: !10963)
!12155 = !DILocation(line: 1815, column: 25, scope: !10963)
!12156 = distinct !{!12156, !12155}
!12157 = !DILocalVariable(name: "code", scope: !10962, file: !1800, line: 1816, type: !1012)
!12158 = !DILocation(line: 1816, column: 33, scope: !10962)
!12159 = !DILocalVariable(name: "nzt", scope: !10962, file: !1800, line: 1817, type: !1013)
!12160 = !DILocation(line: 1817, column: 38, scope: !10962)
!12161 = !DILocalVariable(name: "nnz", scope: !10962, file: !1800, line: 1817, type: !1013)
!12162 = !DILocation(line: 1817, column: 43, scope: !10962)
!12163 = !DILocalVariable(name: "cb_idx", scope: !10962, file: !1800, line: 1818, type: !1013)
!12164 = !DILocation(line: 1818, column: 38, scope: !10962)
!12165 = !DILocalVariable(name: "bits", scope: !10962, file: !1800, line: 1819, type: !1029)
!12166 = !DILocation(line: 1819, column: 38, scope: !10962)
!12167 = !DILocalVariable(name: "j", scope: !10962, file: !1800, line: 1820, type: !1012)
!12168 = !DILocation(line: 1820, column: 33, scope: !10962)
!12169 = !DILocation(line: 1822, column: 84, scope: !10962)
!12170 = !DILocation(line: 1822, column: 89, scope: !10962)
!12171 = !DILocation(line: 1822, column: 99, scope: !10962)
!12172 = !DILocation(line: 1822, column: 108, scope: !10962)
!12173 = !DILocation(line: 1822, column: 96, scope: !10962)
!12174 = !DILocation(line: 1822, column: 117, scope: !10962)
!12175 = !DILocation(line: 1822, column: 40, scope: !10962)
!12176 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !10961)
!12177 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !10961)
!12178 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !10961)
!12179 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !10961)
!12180 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !10961)
!12181 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !10961)
!12182 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !10961)
!12183 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !10961)
!12184 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !10961)
!12185 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !10961)
!12186 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !10961)
!12187 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !10961)
!12188 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !10961)
!12189 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !10961)
!12190 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !10961)
!12191 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !10961)
!12192 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !10961)
!12193 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !10961)
!12194 = !DILocation(line: 1822, column: 125, scope: !10962)
!12195 = !DILocation(line: 1822, column: 134, scope: !10962)
!12196 = !DILocation(line: 1822, column: 121, scope: !10962)
!12197 = !DILocation(line: 1822, column: 38, scope: !10962)
!12198 = !DILocation(line: 1823, column: 29, scope: !10962)
!12199 = distinct !{!12199, !12198}
!12200 = !DILocalVariable(name: "n", scope: !10973, file: !1800, line: 1823, type: !1012)
!12201 = !DILocation(line: 1823, column: 38, scope: !10973)
!12202 = !DILocalVariable(name: "nb_bits", scope: !10973, file: !1800, line: 1823, type: !1012)
!12203 = !DILocation(line: 1823, column: 41, scope: !10973)
!12204 = !DILocalVariable(name: "index", scope: !10973, file: !1800, line: 1823, type: !1013)
!12205 = !DILocation(line: 1823, column: 63, scope: !10973)
!12206 = !DILocation(line: 1823, column: 88, scope: !12207)
!12207 = !DILexicalBlockFile(scope: !10973, file: !1800, discriminator: 1)
!12208 = !DILocation(line: 1823, column: 78, scope: !12207)
!12209 = !DILocation(line: 1823, column: 76, scope: !12207)
!12210 = !DILocation(line: 1823, column: 117, scope: !12207)
!12211 = !DILocation(line: 1823, column: 109, scope: !12207)
!12212 = !DILocation(line: 1823, column: 107, scope: !12207)
!12213 = !DILocation(line: 1823, column: 140, scope: !12207)
!12214 = !DILocation(line: 1823, column: 132, scope: !12207)
!12215 = !DILocation(line: 1823, column: 130, scope: !12207)
!12216 = !DILocation(line: 1823, column: 164, scope: !12207)
!12217 = !DILocation(line: 1823, column: 166, scope: !12207)
!12218 = !DILocation(line: 1823, column: 155, scope: !12207)
!12219 = !DILocation(line: 1823, column: 186, scope: !12220)
!12220 = !DILexicalBlockFile(scope: !10971, file: !1800, discriminator: 2)
!12221 = !DILocation(line: 1823, column: 204, scope: !12220)
!12222 = !DILocation(line: 1823, column: 213, scope: !12220)
!12223 = !DILocation(line: 1823, column: 201, scope: !12220)
!12224 = !DILocation(line: 1823, column: 185, scope: !12220)
!12225 = !DILocation(line: 1823, column: 223, scope: !12226)
!12226 = !DILexicalBlockFile(scope: !10971, file: !1800, discriminator: 3)
!12227 = !DILocation(line: 1823, column: 232, scope: !12226)
!12228 = !DILocation(line: 1823, column: 185, scope: !12226)
!12229 = !DILocation(line: 1823, column: 242, scope: !12230)
!12230 = !DILexicalBlockFile(scope: !10971, file: !1800, discriminator: 4)
!12231 = !DILocation(line: 1823, column: 185, scope: !12230)
!12232 = !DILocation(line: 1823, column: 185, scope: !10970)
!12233 = !DILocation(line: 1823, column: 182, scope: !10970)
!12234 = !DILocation(line: 1823, column: 314, scope: !10970)
!12235 = !DILocation(line: 1823, column: 319, scope: !10970)
!12236 = !DILocation(line: 1823, column: 329, scope: !10970)
!12237 = !DILocation(line: 1823, column: 338, scope: !10970)
!12238 = !DILocation(line: 1823, column: 326, scope: !10970)
!12239 = !DILocation(line: 1823, column: 347, scope: !10970)
!12240 = !DILocation(line: 1823, column: 270, scope: !10970)
!12241 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !10969)
!12242 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !10969)
!12243 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !10969)
!12244 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !10969)
!12245 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !10969)
!12246 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !10969)
!12247 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !10969)
!12248 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !10969)
!12249 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !10969)
!12250 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !10969)
!12251 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !10969)
!12252 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !10969)
!12253 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !10969)
!12254 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !10969)
!12255 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !10969)
!12256 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !10969)
!12257 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !10969)
!12258 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !10969)
!12259 = !DILocation(line: 1823, column: 355, scope: !10970)
!12260 = !DILocation(line: 1823, column: 364, scope: !10970)
!12261 = !DILocation(line: 1823, column: 351, scope: !10970)
!12262 = !DILocation(line: 1823, column: 268, scope: !10970)
!12263 = !DILocation(line: 1823, column: 381, scope: !10970)
!12264 = !DILocation(line: 1823, column: 380, scope: !10970)
!12265 = !DILocation(line: 1823, column: 378, scope: !10970)
!12266 = !DILocation(line: 1823, column: 402, scope: !10970)
!12267 = !DILocation(line: 1823, column: 412, scope: !10970)
!12268 = !DILocation(line: 1823, column: 392, scope: !12269)
!12269 = !DILexicalBlockFile(scope: !10970, file: !1800, discriminator: 12)
!12270 = !DILocation(line: 1823, column: 423, scope: !10970)
!12271 = !DILocation(line: 1823, column: 421, scope: !10970)
!12272 = !DILocation(line: 1823, column: 390, scope: !10970)
!12273 = !DILocation(line: 1823, column: 444, scope: !10970)
!12274 = !DILocation(line: 1823, column: 436, scope: !10970)
!12275 = !DILocation(line: 1823, column: 434, scope: !10970)
!12276 = !DILocation(line: 1823, column: 467, scope: !10970)
!12277 = !DILocation(line: 1823, column: 459, scope: !10970)
!12278 = !DILocation(line: 1823, column: 457, scope: !10970)
!12279 = !DILocation(line: 1823, column: 819, scope: !10970)
!12280 = !DILocation(line: 1823, column: 821, scope: !12281)
!12281 = !DILexicalBlockFile(scope: !10973, file: !1800, discriminator: 6)
!12282 = distinct !{!12282, !12283}
!12283 = !DILocation(line: 1823, column: 821, scope: !10973)
!12284 = !DILocation(line: 1823, column: 840, scope: !12285)
!12285 = !DILexicalBlockFile(scope: !12286, file: !1800, discriminator: 7)
!12286 = distinct !DILexicalBlock(scope: !10973, file: !1800, line: 1823, column: 824)
!12287 = !DILocation(line: 1823, column: 835, scope: !12285)
!12288 = !DILocation(line: 1823, column: 857, scope: !12285)
!12289 = !DILocation(line: 1823, column: 875, scope: !12285)
!12290 = !DILocation(line: 1823, column: 887, scope: !12285)
!12291 = !DILocation(line: 1823, column: 884, scope: !12285)
!12292 = !DILocation(line: 1823, column: 872, scope: !12285)
!12293 = !DILocation(line: 1823, column: 856, scope: !12285)
!12294 = !DILocation(line: 1823, column: 894, scope: !12295)
!12295 = !DILexicalBlockFile(scope: !12286, file: !1800, discriminator: 8)
!12296 = !DILocation(line: 1823, column: 906, scope: !12295)
!12297 = !DILocation(line: 1823, column: 903, scope: !12295)
!12298 = !DILocation(line: 1823, column: 856, scope: !12295)
!12299 = !DILocation(line: 1823, column: 913, scope: !12300)
!12300 = !DILexicalBlockFile(scope: !12286, file: !1800, discriminator: 9)
!12301 = !DILocation(line: 1823, column: 856, scope: !12300)
!12302 = !DILocation(line: 1823, column: 856, scope: !12303)
!12303 = !DILexicalBlockFile(scope: !12286, file: !1800, discriminator: 10)
!12304 = !DILocation(line: 1823, column: 853, scope: !12303)
!12305 = !DILocation(line: 1823, column: 930, scope: !12303)
!12306 = !DILocation(line: 1823, column: 943, scope: !12307)
!12307 = !DILexicalBlockFile(scope: !10973, file: !1800, discriminator: 11)
!12308 = !DILocation(line: 1825, column: 34, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !10962, file: !1800, line: 1825, column: 33)
!12310 = !DILocation(line: 1825, column: 33, scope: !10962)
!12311 = !DILocation(line: 1826, column: 37, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12309, file: !1800, line: 1825, column: 40)
!12313 = !DILocation(line: 1826, column: 40, scope: !12312)
!12314 = !DILocation(line: 1827, column: 37, scope: !12312)
!12315 = !DILocation(line: 1827, column: 40, scope: !12312)
!12316 = !DILocation(line: 1828, column: 33, scope: !12312)
!12317 = !DILocation(line: 1831, column: 52, scope: !10962)
!12318 = !DILocation(line: 1831, column: 38, scope: !10962)
!12319 = !DILocation(line: 1831, column: 36, scope: !10962)
!12320 = !DILocation(line: 1832, column: 35, scope: !10962)
!12321 = !DILocation(line: 1832, column: 42, scope: !10962)
!12322 = !DILocation(line: 1832, column: 33, scope: !10962)
!12323 = !DILocation(line: 1833, column: 35, scope: !10962)
!12324 = !DILocation(line: 1833, column: 42, scope: !10962)
!12325 = !DILocation(line: 1833, column: 33, scope: !10962)
!12326 = !DILocation(line: 1834, column: 46, scope: !10962)
!12327 = !DILocation(line: 1834, column: 56, scope: !10962)
!12328 = !DILocation(line: 1834, column: 36, scope: !10962)
!12329 = !DILocation(line: 1834, column: 68, scope: !10962)
!12330 = !DILocation(line: 1834, column: 67, scope: !10962)
!12331 = !DILocation(line: 1834, column: 61, scope: !10962)
!12332 = !DILocation(line: 1834, column: 34, scope: !10962)
!12333 = !DILocation(line: 1835, column: 42, scope: !10962)
!12334 = !DILocation(line: 1835, column: 60, scope: !10962)
!12335 = !DILocation(line: 1835, column: 72, scope: !10962)
!12336 = !DILocation(line: 1835, column: 69, scope: !10962)
!12337 = !DILocation(line: 1835, column: 57, scope: !10962)
!12338 = !DILocation(line: 1835, column: 41, scope: !10962)
!12339 = !DILocation(line: 1835, column: 81, scope: !12340)
!12340 = !DILexicalBlockFile(scope: !10962, file: !1800, discriminator: 1)
!12341 = !DILocation(line: 1835, column: 93, scope: !12340)
!12342 = !DILocation(line: 1835, column: 90, scope: !12340)
!12343 = !DILocation(line: 1835, column: 41, scope: !12340)
!12344 = !DILocation(line: 1835, column: 102, scope: !12345)
!12345 = !DILexicalBlockFile(scope: !10962, file: !1800, discriminator: 2)
!12346 = !DILocation(line: 1835, column: 41, scope: !12345)
!12347 = !DILocation(line: 1835, column: 41, scope: !12348)
!12348 = !DILexicalBlockFile(scope: !10962, file: !1800, discriminator: 3)
!12349 = !DILocation(line: 1835, column: 38, scope: !12348)
!12350 = !DILocation(line: 1837, column: 36, scope: !10992)
!12351 = !DILocation(line: 1837, column: 34, scope: !10992)
!12352 = !DILocation(line: 1837, column: 41, scope: !12353)
!12353 = !DILexicalBlockFile(scope: !10991, file: !1800, discriminator: 1)
!12354 = !DILocation(line: 1837, column: 43, scope: !12353)
!12355 = !DILocation(line: 1837, column: 29, scope: !12353)
!12356 = !DILocation(line: 1838, column: 37, scope: !10989)
!12357 = !DILocation(line: 1838, column: 46, scope: !10989)
!12358 = !DILocation(line: 1838, column: 44, scope: !10989)
!12359 = !DILocation(line: 1838, column: 41, scope: !10989)
!12360 = !DILocation(line: 1838, column: 37, scope: !10990)
!12361 = !DILocalVariable(name: "b", scope: !10988, file: !1800, line: 1839, type: !1029)
!12362 = !DILocation(line: 1839, column: 46, scope: !10988)
!12363 = !DILocalVariable(name: "n", scope: !10988, file: !1800, line: 1840, type: !1012)
!12364 = !DILocation(line: 1840, column: 41, scope: !10988)
!12365 = !DILocation(line: 1843, column: 92, scope: !10988)
!12366 = !DILocation(line: 1843, column: 97, scope: !10988)
!12367 = !DILocation(line: 1843, column: 107, scope: !10988)
!12368 = !DILocation(line: 1843, column: 116, scope: !10988)
!12369 = !DILocation(line: 1843, column: 104, scope: !10988)
!12370 = !DILocation(line: 1843, column: 125, scope: !10988)
!12371 = !DILocation(line: 1843, column: 48, scope: !10988)
!12372 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !10987)
!12373 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !10987)
!12374 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !10987)
!12375 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !10987)
!12376 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !10987)
!12377 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !10987)
!12378 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !10987)
!12379 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !10987)
!12380 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !10987)
!12381 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !10987)
!12382 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !10987)
!12383 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !10987)
!12384 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !10987)
!12385 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !10987)
!12386 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !10987)
!12387 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !10987)
!12388 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !10987)
!12389 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !10987)
!12390 = !DILocation(line: 1843, column: 133, scope: !10988)
!12391 = !DILocation(line: 1843, column: 142, scope: !10988)
!12392 = !DILocation(line: 1843, column: 129, scope: !10988)
!12393 = !DILocation(line: 1843, column: 46, scope: !10988)
!12394 = !DILocation(line: 1844, column: 53, scope: !10988)
!12395 = !DILocation(line: 1844, column: 39, scope: !10988)
!12396 = !DILocation(line: 1845, column: 68, scope: !10988)
!12397 = !DILocation(line: 1845, column: 67, scope: !10988)
!12398 = !DILocation(line: 1845, column: 70, scope: !10988)
!12399 = !DILocation(line: 1845, column: 52, scope: !10988)
!12400 = !DILocation(line: 1845, column: 50, scope: !10988)
!12401 = !DILocation(line: 1845, column: 44, scope: !10988)
!12402 = !DILocation(line: 1845, column: 39, scope: !10988)
!12403 = !DILocation(line: 1847, column: 41, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !10988, file: !1800, line: 1847, column: 41)
!12405 = !DILocation(line: 1847, column: 43, scope: !12404)
!12406 = !DILocation(line: 1847, column: 41, scope: !10988)
!12407 = !DILocation(line: 1848, column: 48, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12404, file: !1800, line: 1847, column: 48)
!12409 = !DILocation(line: 1848, column: 52, scope: !12408)
!12410 = !DILocation(line: 1848, column: 41, scope: !12408)
!12411 = !DILocation(line: 1849, column: 41, scope: !12408)
!12412 = !DILocation(line: 1852, column: 37, scope: !10988)
!12413 = distinct !{!12413, !12412}
!12414 = !DILocation(line: 1852, column: 56, scope: !12415)
!12415 = !DILexicalBlockFile(scope: !12416, file: !1800, discriminator: 1)
!12416 = distinct !DILexicalBlock(scope: !10988, file: !1800, line: 1852, column: 40)
!12417 = !DILocation(line: 1852, column: 58, scope: !12415)
!12418 = !DILocation(line: 1852, column: 51, scope: !12415)
!12419 = !DILocation(line: 1852, column: 77, scope: !12415)
!12420 = !DILocation(line: 1852, column: 95, scope: !12415)
!12421 = !DILocation(line: 1852, column: 107, scope: !12415)
!12422 = !DILocation(line: 1852, column: 109, scope: !12415)
!12423 = !DILocation(line: 1852, column: 104, scope: !12415)
!12424 = !DILocation(line: 1852, column: 92, scope: !12415)
!12425 = !DILocation(line: 1852, column: 76, scope: !12415)
!12426 = !DILocation(line: 1852, column: 118, scope: !12427)
!12427 = !DILexicalBlockFile(scope: !12416, file: !1800, discriminator: 2)
!12428 = !DILocation(line: 1852, column: 130, scope: !12427)
!12429 = !DILocation(line: 1852, column: 132, scope: !12427)
!12430 = !DILocation(line: 1852, column: 127, scope: !12427)
!12431 = !DILocation(line: 1852, column: 76, scope: !12427)
!12432 = !DILocation(line: 1852, column: 141, scope: !12433)
!12433 = !DILexicalBlockFile(scope: !12416, file: !1800, discriminator: 3)
!12434 = !DILocation(line: 1852, column: 76, scope: !12433)
!12435 = !DILocation(line: 1852, column: 76, scope: !12436)
!12436 = !DILexicalBlockFile(scope: !12416, file: !1800, discriminator: 4)
!12437 = !DILocation(line: 1852, column: 73, scope: !12436)
!12438 = !DILocation(line: 1852, column: 158, scope: !12436)
!12439 = !DILocation(line: 1853, column: 39, scope: !10988)
!12440 = !DILocation(line: 1854, column: 47, scope: !10988)
!12441 = !DILocation(line: 1854, column: 44, scope: !10988)
!12442 = !DILocation(line: 1854, column: 62, scope: !10988)
!12443 = !DILocation(line: 1854, column: 72, scope: !10988)
!12444 = !DILocation(line: 1854, column: 52, scope: !10988)
!12445 = !DILocation(line: 1854, column: 50, scope: !10988)
!12446 = !DILocation(line: 1854, column: 39, scope: !10988)
!12447 = !DILocation(line: 1855, column: 50, scope: !10988)
!12448 = !DILocation(line: 1855, column: 68, scope: !10988)
!12449 = !DILocation(line: 1855, column: 80, scope: !10988)
!12450 = !DILocation(line: 1855, column: 77, scope: !10988)
!12451 = !DILocation(line: 1855, column: 65, scope: !10988)
!12452 = !DILocation(line: 1855, column: 49, scope: !10988)
!12453 = !DILocation(line: 1855, column: 87, scope: !12454)
!12454 = !DILexicalBlockFile(scope: !10988, file: !1800, discriminator: 1)
!12455 = !DILocation(line: 1855, column: 99, scope: !12454)
!12456 = !DILocation(line: 1855, column: 96, scope: !12454)
!12457 = !DILocation(line: 1855, column: 49, scope: !12454)
!12458 = !DILocation(line: 1855, column: 106, scope: !12459)
!12459 = !DILexicalBlockFile(scope: !10988, file: !1800, discriminator: 2)
!12460 = !DILocation(line: 1855, column: 49, scope: !12459)
!12461 = !DILocation(line: 1855, column: 49, scope: !12462)
!12462 = !DILexicalBlockFile(scope: !10988, file: !1800, discriminator: 3)
!12463 = !DILocation(line: 1855, column: 46, scope: !12462)
!12464 = !DILocation(line: 1857, column: 41, scope: !10988)
!12465 = !DILocation(line: 1857, column: 39, scope: !10988)
!12466 = !DILocation(line: 1858, column: 41, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !10988, file: !1800, line: 1858, column: 41)
!12468 = !DILocation(line: 1858, column: 46, scope: !12467)
!12469 = !DILocation(line: 1858, column: 41, scope: !10988)
!12470 = !DILocation(line: 1859, column: 46, scope: !12467)
!12471 = !DILocation(line: 1859, column: 45, scope: !12467)
!12472 = !DILocation(line: 1859, column: 43, scope: !12467)
!12473 = !DILocation(line: 1859, column: 41, scope: !12467)
!12474 = !DILocation(line: 1860, column: 46, scope: !10988)
!12475 = !DILocation(line: 1860, column: 41, scope: !10988)
!12476 = !DILocation(line: 1860, column: 44, scope: !10988)
!12477 = !DILocation(line: 1864, column: 42, scope: !10988)
!12478 = !DILocation(line: 1865, column: 33, scope: !10988)
!12479 = !DILocation(line: 1867, column: 41, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !10989, file: !1800, line: 1865, column: 40)
!12481 = !DILocation(line: 1867, column: 48, scope: !12480)
!12482 = !DILocation(line: 1867, column: 39, scope: !12480)
!12483 = !DILocation(line: 1868, column: 41, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12480, file: !1800, line: 1868, column: 41)
!12485 = !DILocation(line: 1868, column: 46, scope: !12484)
!12486 = !DILocation(line: 1868, column: 41, scope: !12480)
!12487 = !DILocation(line: 1869, column: 46, scope: !12484)
!12488 = !DILocation(line: 1869, column: 45, scope: !12484)
!12489 = !DILocation(line: 1869, column: 43, scope: !12484)
!12490 = !DILocation(line: 1869, column: 41, scope: !12484)
!12491 = !DILocation(line: 1870, column: 46, scope: !12480)
!12492 = !DILocation(line: 1870, column: 41, scope: !12480)
!12493 = !DILocation(line: 1870, column: 44, scope: !12480)
!12494 = !DILocation(line: 1875, column: 48, scope: !12480)
!12495 = !DILocation(line: 1875, column: 47, scope: !12480)
!12496 = !DILocation(line: 1875, column: 46, scope: !12480)
!12497 = !DILocation(line: 1875, column: 42, scope: !12480)
!12498 = !DILocation(line: 1877, column: 40, scope: !10990)
!12499 = !DILocation(line: 1878, column: 29, scope: !10990)
!12500 = !DILocation(line: 1837, column: 49, scope: !12501)
!12501 = !DILexicalBlockFile(scope: !10991, file: !1800, discriminator: 2)
!12502 = !DILocation(line: 1837, column: 29, scope: !12501)
!12503 = distinct !{!12503, !12504}
!12504 = !DILocation(line: 1837, column: 29, scope: !10962)
!12505 = !DILocation(line: 1879, column: 25, scope: !10962)
!12506 = !DILocation(line: 1879, column: 38, scope: !12507)
!12507 = !DILexicalBlockFile(scope: !10963, file: !1800, discriminator: 1)
!12508 = !DILocation(line: 1879, column: 25, scope: !12507)
!12509 = !DILocation(line: 1883, column: 21, scope: !10963)
!12510 = !DILocation(line: 1805, column: 68, scope: !12511)
!12511 = !DILexicalBlockFile(scope: !10964, file: !1800, discriminator: 2)
!12512 = !DILocation(line: 1805, column: 75, scope: !12511)
!12513 = !DILocation(line: 1805, column: 21, scope: !12511)
!12514 = distinct !{!12514, !12515}
!12515 = !DILocation(line: 1805, column: 21, scope: !10950)
!12516 = !DILocation(line: 1884, column: 17, scope: !10950)
!12517 = !DILocation(line: 1886, column: 31, scope: !10951)
!12518 = !DILocation(line: 1886, column: 18, scope: !10951)
!12519 = !DILocation(line: 1886, column: 23, scope: !10951)
!12520 = !DILocation(line: 1886, column: 29, scope: !10951)
!12521 = !DILocation(line: 1888, column: 9, scope: !10954)
!12522 = !DILocation(line: 1664, column: 40, scope: !12523)
!12523 = !DILexicalBlockFile(scope: !10955, file: !1800, discriminator: 2)
!12524 = !DILocation(line: 1664, column: 47, scope: !12523)
!12525 = !DILocation(line: 1664, column: 9, scope: !12523)
!12526 = distinct !{!12526, !12527}
!12527 = !DILocation(line: 1664, column: 9, scope: !10957)
!12528 = !DILocation(line: 1889, column: 17, scope: !10957)
!12529 = !DILocation(line: 1889, column: 23, scope: !10957)
!12530 = !DILocation(line: 1889, column: 14, scope: !10957)
!12531 = !DILocation(line: 1890, column: 5, scope: !10957)
!12532 = !DILocation(line: 1661, column: 46, scope: !12533)
!12533 = !DILexicalBlockFile(scope: !10958, file: !1800, discriminator: 2)
!12534 = !DILocation(line: 1661, column: 5, scope: !12533)
!12535 = distinct !{!12535, !12536}
!12536 = !DILocation(line: 1661, column: 5, scope: !10935)
!12537 = !DILocation(line: 1892, column: 9, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !10935, file: !1800, line: 1892, column: 9)
!12539 = !DILocation(line: 1892, column: 9, scope: !10935)
!12540 = !DILocation(line: 1893, column: 13, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12538, file: !1800, line: 1892, column: 24)
!12542 = !DILocation(line: 1894, column: 16, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12541, file: !1800, line: 1894, column: 9)
!12544 = !DILocation(line: 1894, column: 14, scope: !12543)
!12545 = !DILocation(line: 1894, column: 21, scope: !12546)
!12546 = !DILexicalBlockFile(scope: !12547, file: !1800, discriminator: 1)
!12547 = distinct !DILexicalBlock(scope: !12543, file: !1800, line: 1894, column: 9)
!12548 = !DILocation(line: 1894, column: 25, scope: !12546)
!12549 = !DILocation(line: 1894, column: 32, scope: !12546)
!12550 = !DILocation(line: 1894, column: 23, scope: !12546)
!12551 = !DILocation(line: 1894, column: 9, scope: !12546)
!12552 = !DILocalVariable(name: "co", scope: !12553, file: !1800, line: 1895, type: !1019)
!12553 = distinct !DILexicalBlock(scope: !12547, file: !1800, line: 1894, column: 48)
!12554 = !DILocation(line: 1895, column: 22, scope: !12553)
!12555 = !DILocation(line: 1895, column: 49, scope: !12553)
!12556 = !DILocation(line: 1895, column: 38, scope: !12553)
!12557 = !DILocation(line: 1895, column: 45, scope: !12553)
!12558 = !DILocation(line: 1895, column: 27, scope: !12553)
!12559 = !DILocation(line: 1896, column: 13, scope: !12553)
!12560 = !DILocation(line: 1896, column: 28, scope: !12561)
!12561 = !DILexicalBlockFile(scope: !12553, file: !1800, discriminator: 1)
!12562 = !DILocation(line: 1896, column: 32, scope: !12561)
!12563 = !DILocation(line: 1896, column: 20, scope: !12561)
!12564 = !DILocation(line: 1896, column: 51, scope: !12561)
!12565 = !DILocation(line: 1896, column: 40, scope: !12561)
!12566 = !DILocation(line: 1896, column: 47, scope: !12561)
!12567 = !DILocation(line: 1896, column: 37, scope: !12561)
!12568 = !DILocation(line: 1896, column: 13, scope: !12561)
!12569 = !DILocation(line: 1897, column: 20, scope: !12553)
!12570 = !DILocation(line: 1896, column: 13, scope: !12571)
!12571 = !DILexicalBlockFile(scope: !12553, file: !1800, discriminator: 2)
!12572 = distinct !{!12572, !12559}
!12573 = !DILocation(line: 1898, column: 27, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12553, file: !1800, line: 1898, column: 17)
!12575 = !DILocation(line: 1898, column: 17, scope: !12574)
!12576 = !DILocation(line: 1898, column: 32, scope: !12574)
!12577 = !DILocation(line: 1898, column: 44, scope: !12574)
!12578 = !DILocation(line: 1898, column: 50, scope: !12579)
!12579 = !DILexicalBlockFile(scope: !12574, file: !1800, discriminator: 1)
!12580 = !DILocation(line: 1898, column: 47, scope: !12579)
!12581 = !DILocation(line: 1898, column: 17, scope: !12579)
!12582 = !DILocalVariable(name: "ico", scope: !12583, file: !1800, line: 1899, type: !1019)
!12583 = distinct !DILexicalBlock(scope: !12574, file: !1800, line: 1898, column: 56)
!12584 = !DILocation(line: 1899, column: 26, scope: !12583)
!12585 = !DILocation(line: 1899, column: 44, scope: !12583)
!12586 = !DILocation(line: 1899, column: 33, scope: !12583)
!12587 = !DILocation(line: 1899, column: 40, scope: !12583)
!12588 = !DILocation(line: 1899, column: 32, scope: !12583)
!12589 = !DILocation(line: 1901, column: 21, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12583, file: !1800, line: 1901, column: 21)
!12591 = !DILocation(line: 1901, column: 21, scope: !12583)
!12592 = !DILocation(line: 1902, column: 27, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12590, file: !1800, line: 1901, column: 25)
!12594 = !DILocation(line: 1902, column: 33, scope: !12593)
!12595 = !DILocation(line: 1902, column: 36, scope: !12593)
!12596 = !DILocation(line: 1902, column: 43, scope: !12597)
!12597 = !DILexicalBlockFile(scope: !12593, file: !1800, discriminator: 1)
!12598 = !DILocation(line: 1902, column: 42, scope: !12597)
!12599 = !DILocation(line: 1902, column: 33, scope: !12597)
!12600 = !DILocation(line: 1902, column: 49, scope: !12601)
!12601 = !DILexicalBlockFile(scope: !12593, file: !1800, discriminator: 2)
!12602 = !DILocation(line: 1902, column: 33, scope: !12601)
!12603 = !DILocation(line: 1902, column: 33, scope: !12604)
!12604 = !DILexicalBlockFile(scope: !12593, file: !1800, discriminator: 3)
!12605 = !DILocation(line: 1902, column: 30, scope: !12604)
!12606 = !DILocation(line: 1902, column: 25, scope: !12604)
!12607 = !DILocation(line: 1903, column: 17, scope: !12593)
!12608 = !DILocation(line: 1904, column: 46, scope: !12583)
!12609 = !DILocation(line: 1904, column: 39, scope: !12583)
!12610 = !DILocation(line: 1904, column: 28, scope: !12583)
!12611 = !DILocation(line: 1904, column: 35, scope: !12583)
!12612 = !DILocation(line: 1904, column: 17, scope: !12583)
!12613 = !DILocation(line: 1904, column: 44, scope: !12583)
!12614 = !DILocation(line: 1912, column: 13, scope: !12583)
!12615 = !DILocation(line: 1913, column: 9, scope: !12553)
!12616 = !DILocation(line: 1894, column: 44, scope: !12617)
!12617 = !DILexicalBlockFile(scope: !12547, file: !1800, discriminator: 2)
!12618 = !DILocation(line: 1894, column: 9, scope: !12617)
!12619 = distinct !{!12619, !12620}
!12620 = !DILocation(line: 1894, column: 9, scope: !12541)
!12621 = !DILocation(line: 1914, column: 5, scope: !12541)
!12622 = !DILocation(line: 1916, column: 12, scope: !10935)
!12623 = !DILocation(line: 1916, column: 10, scope: !10935)
!12624 = !DILocation(line: 1917, column: 9, scope: !10935)
!12625 = !DILocation(line: 1918, column: 12, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !10935, file: !1800, line: 1918, column: 5)
!12627 = !DILocation(line: 1918, column: 10, scope: !12626)
!12628 = !DILocation(line: 1918, column: 17, scope: !12629)
!12629 = !DILexicalBlockFile(scope: !12630, file: !1800, discriminator: 1)
!12630 = distinct !DILexicalBlock(scope: !12626, file: !1800, line: 1918, column: 5)
!12631 = !DILocation(line: 1918, column: 21, scope: !12629)
!12632 = !DILocation(line: 1918, column: 26, scope: !12629)
!12633 = !DILocation(line: 1918, column: 19, scope: !12629)
!12634 = !DILocation(line: 1918, column: 5, scope: !12629)
!12635 = !DILocalVariable(name: "g_len", scope: !12636, file: !1800, line: 1919, type: !1013)
!12636 = distinct !DILexicalBlock(scope: !12630, file: !1800, line: 1918, column: 50)
!12637 = !DILocation(line: 1919, column: 18, scope: !12636)
!12638 = !DILocation(line: 1919, column: 41, scope: !12636)
!12639 = !DILocation(line: 1919, column: 26, scope: !12636)
!12640 = !DILocation(line: 1919, column: 31, scope: !12636)
!12641 = !DILocation(line: 1921, column: 16, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12636, file: !1800, line: 1921, column: 9)
!12643 = !DILocation(line: 1921, column: 14, scope: !12642)
!12644 = !DILocation(line: 1921, column: 21, scope: !12645)
!12645 = !DILexicalBlockFile(scope: !12646, file: !1800, discriminator: 1)
!12646 = distinct !DILexicalBlock(scope: !12642, file: !1800, line: 1921, column: 9)
!12647 = !DILocation(line: 1921, column: 25, scope: !12645)
!12648 = !DILocation(line: 1921, column: 30, scope: !12645)
!12649 = !DILocation(line: 1921, column: 23, scope: !12645)
!12650 = !DILocation(line: 1921, column: 9, scope: !12645)
!12651 = !DILocalVariable(name: "cbt_m1", scope: !12652, file: !1800, line: 1922, type: !11149)
!12652 = distinct !DILexicalBlock(scope: !12646, file: !1800, line: 1921, column: 51)
!12653 = !DILocation(line: 1922, column: 28, scope: !12652)
!12654 = !DILocation(line: 1922, column: 47, scope: !12652)
!12655 = !DILocation(line: 1922, column: 37, scope: !12652)
!12656 = !DILocation(line: 1922, column: 52, scope: !12652)
!12657 = !DILocalVariable(name: "cfo", scope: !12652, file: !1800, line: 1923, type: !1454)
!12658 = !DILocation(line: 1923, column: 18, scope: !12652)
!12659 = !DILocation(line: 1923, column: 24, scope: !12652)
!12660 = !DILocation(line: 1923, column: 39, scope: !12652)
!12661 = !DILocation(line: 1923, column: 31, scope: !12652)
!12662 = !DILocation(line: 1923, column: 29, scope: !12652)
!12663 = !DILocalVariable(name: "off_len", scope: !12652, file: !1800, line: 1924, type: !1012)
!12664 = !DILocation(line: 1924, column: 17, scope: !12652)
!12665 = !DILocation(line: 1924, column: 35, scope: !12652)
!12666 = !DILocation(line: 1924, column: 37, scope: !12652)
!12667 = !DILocation(line: 1924, column: 27, scope: !12652)
!12668 = !DILocation(line: 1924, column: 52, scope: !12652)
!12669 = !DILocation(line: 1924, column: 44, scope: !12652)
!12670 = !DILocation(line: 1924, column: 42, scope: !12652)
!12671 = !DILocalVariable(name: "group", scope: !12652, file: !1800, line: 1925, type: !1012)
!12672 = !DILocation(line: 1925, column: 17, scope: !12652)
!12673 = !DILocation(line: 1927, column: 17, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12652, file: !1800, line: 1927, column: 17)
!12675 = !DILocation(line: 1927, column: 24, scope: !12674)
!12676 = !DILocation(line: 1927, column: 17, scope: !12652)
!12677 = !DILocation(line: 1928, column: 28, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12679, file: !1800, line: 1928, column: 17)
!12679 = distinct !DILexicalBlock(scope: !12674, file: !1800, line: 1927, column: 40)
!12680 = !DILocation(line: 1928, column: 22, scope: !12678)
!12681 = !DILocation(line: 1928, column: 33, scope: !12682)
!12682 = !DILexicalBlockFile(scope: !12683, file: !1800, discriminator: 1)
!12683 = distinct !DILexicalBlock(scope: !12678, file: !1800, line: 1928, column: 17)
!12684 = !DILocation(line: 1928, column: 46, scope: !12682)
!12685 = !DILocation(line: 1928, column: 39, scope: !12682)
!12686 = !DILocation(line: 1928, column: 17, scope: !12682)
!12687 = !DILocation(line: 1929, column: 21, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12683, file: !1800, line: 1928, column: 72)
!12689 = !DILocation(line: 1929, column: 25, scope: !12688)
!12690 = !DILocation(line: 1929, column: 38, scope: !12688)
!12691 = !DILocation(line: 1929, column: 43, scope: !12688)
!12692 = !DILocation(line: 1930, column: 21, scope: !12688)
!12693 = !DILocation(line: 1930, column: 25, scope: !12688)
!12694 = !DILocation(line: 1930, column: 39, scope: !12688)
!12695 = !DILocation(line: 1930, column: 44, scope: !12688)
!12696 = !DILocation(line: 1930, column: 52, scope: !12688)
!12697 = !DILocation(line: 1930, column: 49, scope: !12688)
!12698 = !DILocation(line: 1930, column: 62, scope: !12688)
!12699 = !DILocation(line: 1930, column: 71, scope: !12688)
!12700 = !DILocation(line: 1930, column: 75, scope: !12688)
!12701 = !DILocation(line: 1931, column: 17, scope: !12688)
!12702 = !DILocation(line: 1928, column: 58, scope: !12703)
!12703 = !DILexicalBlockFile(scope: !12683, file: !1800, discriminator: 2)
!12704 = !DILocation(line: 1928, column: 65, scope: !12703)
!12705 = !DILocation(line: 1928, column: 17, scope: !12703)
!12706 = distinct !{!12706, !12707}
!12707 = !DILocation(line: 1928, column: 17, scope: !12679)
!12708 = !DILocation(line: 1932, column: 13, scope: !12679)
!12709 = !DILocation(line: 1933, column: 9, scope: !12652)
!12710 = !DILocation(line: 1921, column: 40, scope: !12711)
!12711 = !DILexicalBlockFile(scope: !12646, file: !1800, discriminator: 2)
!12712 = !DILocation(line: 1921, column: 47, scope: !12711)
!12713 = !DILocation(line: 1921, column: 9, scope: !12711)
!12714 = distinct !{!12714, !12715}
!12715 = !DILocation(line: 1921, column: 9, scope: !12636)
!12716 = !DILocation(line: 1934, column: 17, scope: !12636)
!12717 = !DILocation(line: 1934, column: 23, scope: !12636)
!12718 = !DILocation(line: 1934, column: 14, scope: !12636)
!12719 = !DILocation(line: 1935, column: 5, scope: !12636)
!12720 = !DILocation(line: 1918, column: 46, scope: !12721)
!12721 = !DILexicalBlockFile(scope: !12630, file: !1800, discriminator: 2)
!12722 = !DILocation(line: 1918, column: 5, scope: !12721)
!12723 = distinct !{!12723, !12724}
!12724 = !DILocation(line: 1918, column: 5, scope: !10935)
!12725 = !DILocation(line: 1937, column: 5, scope: !10935)
!12726 = !DILocation(line: 1938, column: 1, scope: !10935)
!12727 = distinct !DISubprogram(name: "apply_prediction", scope: !1800, file: !1800, line: 1943, type: !2608, isLocal: true, isDefinition: true, scopeLine: 1944, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!12728 = !DILocalVariable(name: "pf", arg: 1, scope: !12729, file: !1142, line: 260, type: !2018)
!12729 = distinct !DISubprogram(name: "flt16_trunc", scope: !1142, file: !1142, line: 260, type: !12730, isLocal: true, isDefinition: true, scopeLine: 261, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!12730 = !DISubroutineType(types: !12731)
!12731 = !{!2018, !2018}
!12732 = !DILocation(line: 260, column: 78, scope: !12729, inlinedAt: !12733)
!12733 = distinct !DILocation(line: 323, column: 16, scope: !12734, inlinedAt: !12735)
!12734 = !DILexicalBlockFile(scope: !2054, file: !1142, discriminator: 3)
!12735 = distinct !DILocation(line: 1959, column: 17, scope: !12736)
!12736 = !DILexicalBlockFile(scope: !12737, file: !1800, discriminator: 1)
!12737 = distinct !DILexicalBlock(scope: !12738, file: !1800, line: 1958, column: 23)
!12738 = distinct !DILexicalBlock(scope: !12739, file: !1800, line: 1956, column: 13)
!12739 = distinct !DILexicalBlock(scope: !12740, file: !1800, line: 1956, column: 13)
!12740 = distinct !DILexicalBlock(scope: !12741, file: !1800, line: 1955, column: 21)
!12741 = distinct !DILexicalBlock(scope: !12742, file: !1800, line: 1953, column: 9)
!12742 = distinct !DILexicalBlock(scope: !12743, file: !1800, line: 1953, column: 9)
!12743 = distinct !DILexicalBlock(scope: !12744, file: !1800, line: 1952, column: 62)
!12744 = distinct !DILexicalBlock(scope: !12727, file: !1800, line: 1952, column: 9)
!12745 = !DILocalVariable(name: "pun", scope: !12729, file: !1142, line: 262, type: !2018)
!12746 = !DILocation(line: 262, column: 15, scope: !12729, inlinedAt: !12733)
!12747 = !DILocalVariable(name: "s", scope: !12729, file: !1142, line: 263, type: !1012)
!12748 = !DILocation(line: 263, column: 9, scope: !12729, inlinedAt: !12733)
!12749 = !DILocation(line: 260, column: 78, scope: !12729, inlinedAt: !12750)
!12750 = distinct !DILocation(line: 326, column: 16, scope: !12751, inlinedAt: !12735)
!12751 = !DILexicalBlockFile(scope: !2054, file: !1142, discriminator: 2)
!12752 = !DILocation(line: 262, column: 15, scope: !12729, inlinedAt: !12750)
!12753 = !DILocation(line: 263, column: 9, scope: !12729, inlinedAt: !12750)
!12754 = !DILocation(line: 260, column: 78, scope: !12729, inlinedAt: !12755)
!12755 = distinct !DILocation(line: 322, column: 16, scope: !12751, inlinedAt: !12735)
!12756 = !DILocation(line: 262, column: 15, scope: !12729, inlinedAt: !12755)
!12757 = !DILocation(line: 263, column: 9, scope: !12729, inlinedAt: !12755)
!12758 = !DILocation(line: 260, column: 78, scope: !12729, inlinedAt: !12759)
!12759 = distinct !DILocation(line: 319, column: 16, scope: !12734, inlinedAt: !12735)
!12760 = !DILocation(line: 262, column: 15, scope: !12729, inlinedAt: !12759)
!12761 = !DILocation(line: 263, column: 9, scope: !12729, inlinedAt: !12759)
!12762 = !DILocalVariable(name: "pf", arg: 1, scope: !12763, file: !1142, line: 232, type: !2018)
!12763 = distinct !DISubprogram(name: "flt16_round", scope: !1142, file: !1142, line: 232, type: !12730, isLocal: true, isDefinition: true, scopeLine: 233, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!12764 = !DILocation(line: 232, column: 78, scope: !12763, inlinedAt: !12765)
!12765 = distinct !DILocation(line: 304, column: 10, scope: !12751, inlinedAt: !12735)
!12766 = !DILocalVariable(name: "tmp", scope: !12763, file: !1142, line: 234, type: !2018)
!12767 = !DILocation(line: 234, column: 15, scope: !12763, inlinedAt: !12765)
!12768 = !DILocalVariable(name: "s", scope: !12763, file: !1142, line: 235, type: !1012)
!12769 = !DILocation(line: 235, column: 9, scope: !12763, inlinedAt: !12765)
!12770 = !DILocation(line: 260, column: 78, scope: !12729, inlinedAt: !12771)
!12771 = distinct !DILocation(line: 328, column: 14, scope: !12734, inlinedAt: !12735)
!12772 = !DILocation(line: 262, column: 15, scope: !12729, inlinedAt: !12771)
!12773 = !DILocation(line: 263, column: 9, scope: !12729, inlinedAt: !12771)
!12774 = !DILocalVariable(name: "pf", arg: 1, scope: !12775, file: !1142, line: 246, type: !2018)
!12775 = distinct !DISubprogram(name: "flt16_even", scope: !1142, file: !1142, line: 246, type: !12730, isLocal: true, isDefinition: true, scopeLine: 247, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!12776 = !DILocation(line: 246, column: 77, scope: !12775, inlinedAt: !12777)
!12777 = distinct !DILocation(line: 296, column: 30, scope: !12778, inlinedAt: !12735)
!12778 = !DILexicalBlockFile(scope: !12779, file: !1142, discriminator: 1)
!12779 = distinct !DILexicalBlock(scope: !12780, file: !1142, line: 295, column: 68)
!12780 = distinct !DILexicalBlock(scope: !2054, file: !1142, line: 295, column: 9)
!12781 = !DILocalVariable(name: "tmp", scope: !12775, file: !1142, line: 248, type: !2018)
!12782 = !DILocation(line: 248, column: 15, scope: !12775, inlinedAt: !12777)
!12783 = !DILocalVariable(name: "s", scope: !12775, file: !1142, line: 249, type: !1012)
!12784 = !DILocation(line: 249, column: 9, scope: !12775, inlinedAt: !12777)
!12785 = !DILocation(line: 260, column: 78, scope: !12729, inlinedAt: !12786)
!12786 = distinct !DILocation(line: 329, column: 14, scope: !12787, inlinedAt: !12735)
!12787 = !DILexicalBlockFile(scope: !2054, file: !1142, discriminator: 1)
!12788 = !DILocation(line: 262, column: 15, scope: !12729, inlinedAt: !12786)
!12789 = !DILocation(line: 263, column: 9, scope: !12729, inlinedAt: !12786)
!12790 = !DILocation(line: 246, column: 77, scope: !12775, inlinedAt: !12791)
!12791 = distinct !DILocation(line: 288, column: 30, scope: !12792, inlinedAt: !12735)
!12792 = !DILexicalBlockFile(scope: !12793, file: !1142, discriminator: 1)
!12793 = distinct !DILexicalBlock(scope: !12794, file: !1142, line: 287, column: 68)
!12794 = distinct !DILexicalBlock(scope: !2054, file: !1142, line: 287, column: 9)
!12795 = !DILocation(line: 248, column: 15, scope: !12775, inlinedAt: !12791)
!12796 = !DILocation(line: 249, column: 9, scope: !12775, inlinedAt: !12791)
!12797 = !DILocalVariable(name: "ps", arg: 1, scope: !2054, file: !1142, line: 274, type: !2057)
!12798 = !DILocation(line: 274, column: 75, scope: !2054, inlinedAt: !12735)
!12799 = !DILocalVariable(name: "coef", arg: 2, scope: !2054, file: !1142, line: 274, type: !1454)
!12800 = !DILocation(line: 274, column: 84, scope: !2054, inlinedAt: !12735)
!12801 = !DILocalVariable(name: "output_enable", arg: 3, scope: !2054, file: !1142, line: 275, type: !1012)
!12802 = !DILocation(line: 275, column: 42, scope: !2054, inlinedAt: !12735)
!12803 = !DILocalVariable(name: "e0", scope: !2054, file: !1142, line: 279, type: !2018)
!12804 = !DILocation(line: 279, column: 15, scope: !2054, inlinedAt: !12735)
!12805 = !DILocalVariable(name: "e1", scope: !2054, file: !1142, line: 279, type: !2018)
!12806 = !DILocation(line: 279, column: 19, scope: !2054, inlinedAt: !12735)
!12807 = !DILocalVariable(name: "pv", scope: !2054, file: !1142, line: 280, type: !2018)
!12808 = !DILocation(line: 280, column: 15, scope: !2054, inlinedAt: !12735)
!12809 = !DILocalVariable(name: "k1", scope: !2054, file: !1142, line: 281, type: !2018)
!12810 = !DILocation(line: 281, column: 15, scope: !2054, inlinedAt: !12735)
!12811 = !DILocalVariable(name: "k2", scope: !2054, file: !1142, line: 281, type: !2018)
!12812 = !DILocation(line: 281, column: 19, scope: !2054, inlinedAt: !12735)
!12813 = !DILocalVariable(name: "r0", scope: !2054, file: !1142, line: 282, type: !2018)
!12814 = !DILocation(line: 282, column: 15, scope: !2054, inlinedAt: !12735)
!12815 = !DILocalVariable(name: "r1", scope: !2054, file: !1142, line: 282, type: !2018)
!12816 = !DILocation(line: 282, column: 28, scope: !2054, inlinedAt: !12735)
!12817 = !DILocalVariable(name: "cor0", scope: !2054, file: !1142, line: 283, type: !2018)
!12818 = !DILocation(line: 283, column: 15, scope: !2054, inlinedAt: !12735)
!12819 = !DILocalVariable(name: "cor1", scope: !2054, file: !1142, line: 283, type: !2018)
!12820 = !DILocation(line: 283, column: 32, scope: !2054, inlinedAt: !12735)
!12821 = !DILocalVariable(name: "var0", scope: !2054, file: !1142, line: 284, type: !2018)
!12822 = !DILocation(line: 284, column: 15, scope: !2054, inlinedAt: !12735)
!12823 = !DILocalVariable(name: "var1", scope: !2054, file: !1142, line: 284, type: !2018)
!12824 = !DILocation(line: 284, column: 32, scope: !2054, inlinedAt: !12735)
!12825 = !DILocalVariable(name: "tmp", scope: !2054, file: !1142, line: 285, type: !2018)
!12826 = !DILocation(line: 285, column: 15, scope: !2054, inlinedAt: !12735)
!12827 = !DILocalVariable(name: "shift", scope: !12828, file: !1142, line: 306, type: !1012)
!12828 = distinct !DILexicalBlock(scope: !12829, file: !1142, line: 305, column: 24)
!12829 = distinct !DILexicalBlock(scope: !2054, file: !1142, line: 305, column: 9)
!12830 = !DILocation(line: 306, column: 13, scope: !12828, inlinedAt: !12735)
!12831 = !DILocalVariable(name: "ac", arg: 1, scope: !12727, file: !1800, line: 1943, type: !2071)
!12832 = !DILocation(line: 1943, column: 42, scope: !12727)
!12833 = !DILocalVariable(name: "sce", arg: 2, scope: !12727, file: !1800, line: 1943, type: !1906)
!12834 = !DILocation(line: 1943, column: 68, scope: !12727)
!12835 = !DILocalVariable(name: "sfb", scope: !12727, file: !1800, line: 1945, type: !1012)
!12836 = !DILocation(line: 1945, column: 9, scope: !12727)
!12837 = !DILocalVariable(name: "k", scope: !12727, file: !1800, line: 1945, type: !1012)
!12838 = !DILocation(line: 1945, column: 14, scope: !12727)
!12839 = !DILocation(line: 1947, column: 10, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12727, file: !1800, line: 1947, column: 9)
!12841 = !DILocation(line: 1947, column: 15, scope: !12840)
!12842 = !DILocation(line: 1947, column: 19, scope: !12840)
!12843 = !DILocation(line: 1947, column: 9, scope: !12727)
!12844 = !DILocation(line: 1948, column: 30, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12840, file: !1800, line: 1947, column: 42)
!12846 = !DILocation(line: 1948, column: 35, scope: !12845)
!12847 = !DILocation(line: 1948, column: 9, scope: !12845)
!12848 = !DILocation(line: 1949, column: 9, scope: !12845)
!12849 = !DILocation(line: 1949, column: 14, scope: !12845)
!12850 = !DILocation(line: 1949, column: 18, scope: !12845)
!12851 = !DILocation(line: 1949, column: 40, scope: !12845)
!12852 = !DILocation(line: 1950, column: 5, scope: !12845)
!12853 = !DILocation(line: 1952, column: 9, scope: !12744)
!12854 = !DILocation(line: 1952, column: 14, scope: !12744)
!12855 = !DILocation(line: 1952, column: 18, scope: !12744)
!12856 = !DILocation(line: 1952, column: 37, scope: !12744)
!12857 = !DILocation(line: 1952, column: 9, scope: !12727)
!12858 = !DILocation(line: 1953, column: 18, scope: !12742)
!12859 = !DILocation(line: 1953, column: 14, scope: !12742)
!12860 = !DILocation(line: 1954, column: 14, scope: !12741)
!12861 = !DILocation(line: 1954, column: 40, scope: !12741)
!12862 = !DILocation(line: 1954, column: 44, scope: !12741)
!12863 = !DILocation(line: 1954, column: 50, scope: !12741)
!12864 = !DILocation(line: 1954, column: 55, scope: !12741)
!12865 = !DILocation(line: 1954, column: 20, scope: !12741)
!12866 = !DILocation(line: 1954, column: 18, scope: !12741)
!12867 = !DILocation(line: 1953, column: 9, scope: !12868)
!12868 = !DILexicalBlockFile(scope: !12742, file: !1800, discriminator: 1)
!12869 = !DILocation(line: 1956, column: 42, scope: !12739)
!12870 = !DILocation(line: 1956, column: 22, scope: !12739)
!12871 = !DILocation(line: 1956, column: 27, scope: !12739)
!12872 = !DILocation(line: 1956, column: 31, scope: !12739)
!12873 = !DILocation(line: 1956, column: 20, scope: !12739)
!12874 = !DILocation(line: 1956, column: 18, scope: !12739)
!12875 = !DILocation(line: 1957, column: 18, scope: !12738)
!12876 = !DILocation(line: 1957, column: 42, scope: !12738)
!12877 = !DILocation(line: 1957, column: 46, scope: !12738)
!12878 = !DILocation(line: 1957, column: 22, scope: !12738)
!12879 = !DILocation(line: 1957, column: 27, scope: !12738)
!12880 = !DILocation(line: 1957, column: 31, scope: !12738)
!12881 = !DILocation(line: 1957, column: 20, scope: !12738)
!12882 = !DILocation(line: 1956, column: 13, scope: !12883)
!12883 = !DILexicalBlockFile(scope: !12739, file: !1800, discriminator: 1)
!12884 = !DILocation(line: 1959, column: 47, scope: !12737)
!12885 = !DILocation(line: 1959, column: 26, scope: !12737)
!12886 = !DILocation(line: 1959, column: 31, scope: !12737)
!12887 = !DILocation(line: 1959, column: 64, scope: !12737)
!12888 = !DILocation(line: 1959, column: 52, scope: !12737)
!12889 = !DILocation(line: 1959, column: 57, scope: !12737)
!12890 = !DILocation(line: 1960, column: 25, scope: !12737)
!12891 = !DILocation(line: 1960, column: 30, scope: !12737)
!12892 = !DILocation(line: 1960, column: 34, scope: !12737)
!12893 = !DILocation(line: 1960, column: 52, scope: !12737)
!12894 = !DILocation(line: 1961, column: 50, scope: !12737)
!12895 = !DILocation(line: 1961, column: 25, scope: !12737)
!12896 = !DILocation(line: 1961, column: 30, scope: !12737)
!12897 = !DILocation(line: 1961, column: 34, scope: !12737)
!12898 = !DILocation(line: 1960, column: 52, scope: !12736)
!12899 = !DILocation(line: 1960, column: 52, scope: !12900)
!12900 = !DILexicalBlockFile(scope: !12737, file: !1800, discriminator: 2)
!12901 = !DILocation(line: 1959, column: 17, scope: !12736)
!12902 = !DILocation(line: 282, column: 20, scope: !2054, inlinedAt: !12735)
!12903 = !DILocation(line: 282, column: 24, scope: !2054, inlinedAt: !12735)
!12904 = !DILocation(line: 282, column: 33, scope: !2054, inlinedAt: !12735)
!12905 = !DILocation(line: 282, column: 37, scope: !2054, inlinedAt: !12735)
!12906 = !DILocation(line: 282, column: 37, scope: !12787, inlinedAt: !12735)
!12907 = !DILocation(line: 283, column: 22, scope: !2054, inlinedAt: !12735)
!12908 = !DILocation(line: 283, column: 26, scope: !2054, inlinedAt: !12735)
!12909 = !DILocation(line: 283, column: 39, scope: !2054, inlinedAt: !12735)
!12910 = !DILocation(line: 283, column: 43, scope: !2054, inlinedAt: !12735)
!12911 = !DILocation(line: 283, column: 43, scope: !12787, inlinedAt: !12735)
!12912 = !DILocation(line: 284, column: 22, scope: !2054, inlinedAt: !12735)
!12913 = !DILocation(line: 284, column: 26, scope: !2054, inlinedAt: !12735)
!12914 = !DILocation(line: 284, column: 39, scope: !2054, inlinedAt: !12735)
!12915 = !DILocation(line: 284, column: 43, scope: !2054, inlinedAt: !12735)
!12916 = !DILocation(line: 284, column: 43, scope: !12787, inlinedAt: !12735)
!12917 = !DILocation(line: 287, column: 14, scope: !12794, inlinedAt: !12735)
!12918 = !DILocation(line: 287, column: 18, scope: !12794, inlinedAt: !12735)
!12919 = !DILocation(line: 287, column: 22, scope: !12794, inlinedAt: !12735)
!12920 = !DILocation(line: 287, column: 31, scope: !12921, inlinedAt: !12735)
!12921 = !DILexicalBlockFile(scope: !12794, file: !1142, discriminator: 1)
!12922 = !DILocation(line: 287, column: 35, scope: !12921, inlinedAt: !12735)
!12923 = !DILocation(line: 287, column: 40, scope: !12921, inlinedAt: !12735)
!12924 = !DILocation(line: 287, column: 48, scope: !12925, inlinedAt: !12735)
!12925 = !DILexicalBlockFile(scope: !12794, file: !1142, discriminator: 2)
!12926 = !DILocation(line: 287, column: 53, scope: !12925, inlinedAt: !12735)
!12927 = !DILocation(line: 287, column: 9, scope: !12925, inlinedAt: !12735)
!12928 = !DILocation(line: 288, column: 41, scope: !12793, inlinedAt: !12735)
!12929 = !DILocation(line: 288, column: 30, scope: !12793, inlinedAt: !12735)
!12930 = !DILocation(line: 288, column: 30, scope: !12792, inlinedAt: !12735)
!12931 = !DILocation(line: 251, column: 18, scope: !12775, inlinedAt: !12791)
!12932 = !DILocation(line: 251, column: 9, scope: !12775, inlinedAt: !12791)
!12933 = !DILocation(line: 251, column: 13, scope: !12775, inlinedAt: !12791)
!12934 = !DILocation(line: 252, column: 12, scope: !12775, inlinedAt: !12791)
!12935 = !DILocation(line: 252, column: 17, scope: !12775, inlinedAt: !12791)
!12936 = !DILocation(line: 252, column: 7, scope: !12775, inlinedAt: !12791)
!12937 = !DILocation(line: 253, column: 20, scope: !12775, inlinedAt: !12791)
!12938 = !DILocation(line: 253, column: 27, scope: !12775, inlinedAt: !12791)
!12939 = !DILocation(line: 253, column: 25, scope: !12775, inlinedAt: !12791)
!12940 = !DILocation(line: 253, column: 32, scope: !12775, inlinedAt: !12791)
!12941 = !DILocation(line: 253, column: 30, scope: !12775, inlinedAt: !12791)
!12942 = !DILocation(line: 253, column: 9, scope: !12775, inlinedAt: !12791)
!12943 = !DILocation(line: 253, column: 14, scope: !12775, inlinedAt: !12791)
!12944 = !DILocation(line: 254, column: 21, scope: !12775, inlinedAt: !12791)
!12945 = !DILocation(line: 254, column: 26, scope: !12775, inlinedAt: !12791)
!12946 = !DILocation(line: 254, column: 47, scope: !12775, inlinedAt: !12791)
!12947 = !DILocation(line: 254, column: 52, scope: !12775, inlinedAt: !12791)
!12948 = !DILocation(line: 254, column: 40, scope: !12775, inlinedAt: !12791)
!12949 = !DILocation(line: 254, column: 74, scope: !12775, inlinedAt: !12791)
!12950 = !DILocation(line: 254, column: 9, scope: !12775, inlinedAt: !12791)
!12951 = !DILocation(line: 254, column: 14, scope: !12775, inlinedAt: !12791)
!12952 = !DILocation(line: 255, column: 21, scope: !12775, inlinedAt: !12791)
!12953 = !DILocation(line: 255, column: 28, scope: !12775, inlinedAt: !12791)
!12954 = !DILocation(line: 255, column: 26, scope: !12775, inlinedAt: !12791)
!12955 = !DILocation(line: 255, column: 33, scope: !12775, inlinedAt: !12791)
!12956 = !DILocation(line: 255, column: 31, scope: !12775, inlinedAt: !12791)
!12957 = !DILocation(line: 255, column: 9, scope: !12775, inlinedAt: !12791)
!12958 = !DILocation(line: 255, column: 14, scope: !12775, inlinedAt: !12791)
!12959 = !DILocation(line: 257, column: 12, scope: !12775, inlinedAt: !12791)
!12960 = !DILocation(line: 257, column: 5, scope: !12775, inlinedAt: !12791)
!12961 = !DILocation(line: 288, column: 14, scope: !12793, inlinedAt: !12735)
!12962 = !DILocation(line: 288, column: 14, scope: !12963, inlinedAt: !12735)
!12963 = !DILexicalBlockFile(scope: !12793, file: !1142, discriminator: 2)
!12964 = !DILocation(line: 288, column: 14, scope: !12965, inlinedAt: !12735)
!12965 = !DILexicalBlockFile(scope: !12793, file: !1142, discriminator: 3)
!12966 = !DILocation(line: 289, column: 5, scope: !12793, inlinedAt: !12735)
!12967 = !DILocation(line: 291, column: 12, scope: !12968, inlinedAt: !12735)
!12968 = distinct !DILexicalBlock(scope: !12794, file: !1142, line: 290, column: 10)
!12969 = !DILocation(line: 291, column: 17, scope: !12968, inlinedAt: !12735)
!12970 = !DILocation(line: 292, column: 12, scope: !12968, inlinedAt: !12735)
!12971 = !DILocation(line: 292, column: 16, scope: !12968, inlinedAt: !12735)
!12972 = !DILocation(line: 295, column: 14, scope: !12780, inlinedAt: !12735)
!12973 = !DILocation(line: 295, column: 18, scope: !12780, inlinedAt: !12735)
!12974 = !DILocation(line: 295, column: 22, scope: !12780, inlinedAt: !12735)
!12975 = !DILocation(line: 295, column: 31, scope: !12976, inlinedAt: !12735)
!12976 = !DILexicalBlockFile(scope: !12780, file: !1142, discriminator: 1)
!12977 = !DILocation(line: 295, column: 35, scope: !12976, inlinedAt: !12735)
!12978 = !DILocation(line: 295, column: 40, scope: !12976, inlinedAt: !12735)
!12979 = !DILocation(line: 295, column: 48, scope: !12980, inlinedAt: !12735)
!12980 = !DILexicalBlockFile(scope: !12780, file: !1142, discriminator: 2)
!12981 = !DILocation(line: 295, column: 53, scope: !12980, inlinedAt: !12735)
!12982 = !DILocation(line: 295, column: 9, scope: !12980, inlinedAt: !12735)
!12983 = !DILocation(line: 296, column: 41, scope: !12779, inlinedAt: !12735)
!12984 = !DILocation(line: 296, column: 30, scope: !12779, inlinedAt: !12735)
!12985 = !DILocation(line: 296, column: 30, scope: !12778, inlinedAt: !12735)
!12986 = !DILocation(line: 251, column: 18, scope: !12775, inlinedAt: !12777)
!12987 = !DILocation(line: 251, column: 9, scope: !12775, inlinedAt: !12777)
!12988 = !DILocation(line: 251, column: 13, scope: !12775, inlinedAt: !12777)
!12989 = !DILocation(line: 252, column: 12, scope: !12775, inlinedAt: !12777)
!12990 = !DILocation(line: 252, column: 17, scope: !12775, inlinedAt: !12777)
!12991 = !DILocation(line: 252, column: 7, scope: !12775, inlinedAt: !12777)
!12992 = !DILocation(line: 253, column: 20, scope: !12775, inlinedAt: !12777)
!12993 = !DILocation(line: 253, column: 27, scope: !12775, inlinedAt: !12777)
!12994 = !DILocation(line: 253, column: 25, scope: !12775, inlinedAt: !12777)
!12995 = !DILocation(line: 253, column: 32, scope: !12775, inlinedAt: !12777)
!12996 = !DILocation(line: 253, column: 30, scope: !12775, inlinedAt: !12777)
!12997 = !DILocation(line: 253, column: 9, scope: !12775, inlinedAt: !12777)
!12998 = !DILocation(line: 253, column: 14, scope: !12775, inlinedAt: !12777)
!12999 = !DILocation(line: 254, column: 21, scope: !12775, inlinedAt: !12777)
!13000 = !DILocation(line: 254, column: 26, scope: !12775, inlinedAt: !12777)
!13001 = !DILocation(line: 254, column: 47, scope: !12775, inlinedAt: !12777)
!13002 = !DILocation(line: 254, column: 52, scope: !12775, inlinedAt: !12777)
!13003 = !DILocation(line: 254, column: 40, scope: !12775, inlinedAt: !12777)
!13004 = !DILocation(line: 254, column: 74, scope: !12775, inlinedAt: !12777)
!13005 = !DILocation(line: 254, column: 9, scope: !12775, inlinedAt: !12777)
!13006 = !DILocation(line: 254, column: 14, scope: !12775, inlinedAt: !12777)
!13007 = !DILocation(line: 255, column: 21, scope: !12775, inlinedAt: !12777)
!13008 = !DILocation(line: 255, column: 28, scope: !12775, inlinedAt: !12777)
!13009 = !DILocation(line: 255, column: 26, scope: !12775, inlinedAt: !12777)
!13010 = !DILocation(line: 255, column: 33, scope: !12775, inlinedAt: !12777)
!13011 = !DILocation(line: 255, column: 31, scope: !12775, inlinedAt: !12777)
!13012 = !DILocation(line: 255, column: 9, scope: !12775, inlinedAt: !12777)
!13013 = !DILocation(line: 255, column: 14, scope: !12775, inlinedAt: !12777)
!13014 = !DILocation(line: 257, column: 12, scope: !12775, inlinedAt: !12777)
!13015 = !DILocation(line: 257, column: 5, scope: !12775, inlinedAt: !12777)
!13016 = !DILocation(line: 296, column: 14, scope: !12779, inlinedAt: !12735)
!13017 = !DILocation(line: 296, column: 14, scope: !13018, inlinedAt: !12735)
!13018 = !DILexicalBlockFile(scope: !12779, file: !1142, discriminator: 2)
!13019 = !DILocation(line: 296, column: 14, scope: !13020, inlinedAt: !12735)
!13020 = !DILexicalBlockFile(scope: !12779, file: !1142, discriminator: 3)
!13021 = !DILocation(line: 297, column: 5, scope: !12779, inlinedAt: !12735)
!13022 = !DILocation(line: 299, column: 12, scope: !13023, inlinedAt: !12735)
!13023 = distinct !DILexicalBlock(scope: !12780, file: !1142, line: 298, column: 10)
!13024 = !DILocation(line: 299, column: 17, scope: !13023, inlinedAt: !12735)
!13025 = !DILocation(line: 300, column: 12, scope: !13023, inlinedAt: !12735)
!13026 = !DILocation(line: 300, column: 16, scope: !13023, inlinedAt: !12735)
!13027 = !DILocation(line: 303, column: 11, scope: !2054, inlinedAt: !12735)
!13028 = !DILocation(line: 303, column: 11, scope: !12787, inlinedAt: !12735)
!13029 = !DILocation(line: 304, column: 37, scope: !2054, inlinedAt: !12735)
!13030 = !DILocation(line: 304, column: 22, scope: !2054, inlinedAt: !12735)
!13031 = !DILocation(line: 304, column: 22, scope: !12787, inlinedAt: !12735)
!13032 = !DILocation(line: 304, column: 10, scope: !2054, inlinedAt: !12735)
!13033 = !DILocation(line: 304, column: 10, scope: !12751, inlinedAt: !12735)
!13034 = !DILocation(line: 237, column: 18, scope: !12763, inlinedAt: !12765)
!13035 = !DILocation(line: 237, column: 9, scope: !12763, inlinedAt: !12765)
!13036 = !DILocation(line: 237, column: 13, scope: !12763, inlinedAt: !12765)
!13037 = !DILocation(line: 238, column: 12, scope: !12763, inlinedAt: !12765)
!13038 = !DILocation(line: 238, column: 17, scope: !12763, inlinedAt: !12765)
!13039 = !DILocation(line: 238, column: 7, scope: !12763, inlinedAt: !12765)
!13040 = !DILocation(line: 239, column: 20, scope: !12763, inlinedAt: !12765)
!13041 = !DILocation(line: 239, column: 27, scope: !12763, inlinedAt: !12765)
!13042 = !DILocation(line: 239, column: 25, scope: !12763, inlinedAt: !12765)
!13043 = !DILocation(line: 239, column: 32, scope: !12763, inlinedAt: !12765)
!13044 = !DILocation(line: 239, column: 30, scope: !12763, inlinedAt: !12765)
!13045 = !DILocation(line: 239, column: 9, scope: !12763, inlinedAt: !12765)
!13046 = !DILocation(line: 239, column: 14, scope: !12763, inlinedAt: !12765)
!13047 = !DILocation(line: 240, column: 21, scope: !12763, inlinedAt: !12765)
!13048 = !DILocation(line: 240, column: 26, scope: !12763, inlinedAt: !12765)
!13049 = !DILocation(line: 240, column: 41, scope: !12763, inlinedAt: !12765)
!13050 = !DILocation(line: 240, column: 9, scope: !12763, inlinedAt: !12765)
!13051 = !DILocation(line: 240, column: 14, scope: !12763, inlinedAt: !12765)
!13052 = !DILocation(line: 241, column: 21, scope: !12763, inlinedAt: !12765)
!13053 = !DILocation(line: 241, column: 28, scope: !12763, inlinedAt: !12765)
!13054 = !DILocation(line: 241, column: 26, scope: !12763, inlinedAt: !12765)
!13055 = !DILocation(line: 241, column: 33, scope: !12763, inlinedAt: !12765)
!13056 = !DILocation(line: 241, column: 31, scope: !12763, inlinedAt: !12765)
!13057 = !DILocation(line: 241, column: 9, scope: !12763, inlinedAt: !12765)
!13058 = !DILocation(line: 241, column: 14, scope: !12763, inlinedAt: !12765)
!13059 = !DILocation(line: 243, column: 12, scope: !12763, inlinedAt: !12765)
!13060 = !DILocation(line: 243, column: 5, scope: !12763, inlinedAt: !12765)
!13061 = !DILocation(line: 304, column: 10, scope: !12734, inlinedAt: !12735)
!13062 = !DILocation(line: 305, column: 9, scope: !12829, inlinedAt: !12735)
!13063 = !DILocation(line: 305, column: 9, scope: !2054, inlinedAt: !12735)
!13064 = !DILocation(line: 306, column: 29, scope: !12828, inlinedAt: !12735)
!13065 = !DILocation(line: 306, column: 24, scope: !12828, inlinedAt: !12735)
!13066 = !DILocation(line: 308, column: 13, scope: !13067, inlinedAt: !12735)
!13067 = distinct !DILexicalBlock(scope: !12828, file: !1142, line: 308, column: 13)
!13068 = !DILocation(line: 308, column: 19, scope: !13067, inlinedAt: !12735)
!13069 = !DILocation(line: 308, column: 13, scope: !12828, inlinedAt: !12735)
!13070 = !DILocation(line: 309, column: 17, scope: !13071, inlinedAt: !12735)
!13071 = distinct !DILexicalBlock(scope: !13072, file: !1142, line: 309, column: 17)
!13072 = distinct !DILexicalBlock(scope: !13067, file: !1142, line: 308, column: 25)
!13073 = !DILocation(line: 309, column: 23, scope: !13071, inlinedAt: !12735)
!13074 = !DILocation(line: 309, column: 17, scope: !13072, inlinedAt: !12735)
!13075 = !DILocation(line: 310, column: 41, scope: !13076, inlinedAt: !12735)
!13076 = distinct !DILexicalBlock(scope: !13071, file: !1142, line: 309, column: 28)
!13077 = !DILocation(line: 310, column: 55, scope: !13076, inlinedAt: !12735)
!13078 = !DILocation(line: 310, column: 61, scope: !13076, inlinedAt: !12735)
!13079 = !DILocation(line: 310, column: 51, scope: !13076, inlinedAt: !12735)
!13080 = !DILocation(line: 310, column: 46, scope: !13076, inlinedAt: !12735)
!13081 = !DILocation(line: 310, column: 71, scope: !13076, inlinedAt: !12735)
!13082 = !DILocation(line: 310, column: 68, scope: !13076, inlinedAt: !12735)
!13083 = !DILocation(line: 310, column: 18, scope: !13076, inlinedAt: !12735)
!13084 = !DILocation(line: 310, column: 23, scope: !13076, inlinedAt: !12735)
!13085 = !DILocation(line: 311, column: 13, scope: !13076, inlinedAt: !12735)
!13086 = !DILocation(line: 312, column: 39, scope: !13071, inlinedAt: !12735)
!13087 = !DILocation(line: 312, column: 48, scope: !13071, inlinedAt: !12735)
!13088 = !DILocation(line: 312, column: 47, scope: !13071, inlinedAt: !12735)
!13089 = !DILocation(line: 312, column: 44, scope: !13071, inlinedAt: !12735)
!13090 = !DILocation(line: 312, column: 18, scope: !13071, inlinedAt: !12735)
!13091 = !DILocation(line: 312, column: 23, scope: !13071, inlinedAt: !12735)
!13092 = !DILocation(line: 313, column: 9, scope: !13072, inlinedAt: !12735)
!13093 = !DILocation(line: 314, column: 5, scope: !12828, inlinedAt: !12735)
!13094 = !DILocation(line: 316, column: 21, scope: !2054, inlinedAt: !12735)
!13095 = !DILocation(line: 316, column: 20, scope: !2054, inlinedAt: !12735)
!13096 = !DILocation(line: 316, column: 10, scope: !2054, inlinedAt: !12735)
!13097 = !DILocation(line: 316, column: 10, scope: !12787, inlinedAt: !12735)
!13098 = !DILocation(line: 317, column: 10, scope: !2054, inlinedAt: !12735)
!13099 = !DILocation(line: 317, column: 10, scope: !12787, inlinedAt: !12735)
!13100 = !DILocation(line: 319, column: 5, scope: !2054, inlinedAt: !12735)
!13101 = !DILocation(line: 319, column: 9, scope: !2054, inlinedAt: !12735)
!13102 = !DILocation(line: 319, column: 38, scope: !2054, inlinedAt: !12735)
!13103 = !DILocation(line: 319, column: 62, scope: !2054, inlinedAt: !12735)
!13104 = !DILocation(line: 319, column: 62, scope: !12787, inlinedAt: !12735)
!13105 = !DILocation(line: 319, column: 28, scope: !2054, inlinedAt: !12735)
!13106 = !DILocation(line: 319, column: 28, scope: !12751, inlinedAt: !12735)
!13107 = !DILocation(line: 319, column: 16, scope: !2054, inlinedAt: !12735)
!13108 = !DILocation(line: 319, column: 16, scope: !12734, inlinedAt: !12735)
!13109 = !DILocation(line: 265, column: 18, scope: !12729, inlinedAt: !12759)
!13110 = !DILocation(line: 265, column: 9, scope: !12729, inlinedAt: !12759)
!13111 = !DILocation(line: 265, column: 13, scope: !12729, inlinedAt: !12759)
!13112 = !DILocation(line: 266, column: 12, scope: !12729, inlinedAt: !12759)
!13113 = !DILocation(line: 266, column: 17, scope: !12729, inlinedAt: !12759)
!13114 = !DILocation(line: 266, column: 7, scope: !12729, inlinedAt: !12759)
!13115 = !DILocation(line: 267, column: 20, scope: !12729, inlinedAt: !12759)
!13116 = !DILocation(line: 267, column: 27, scope: !12729, inlinedAt: !12759)
!13117 = !DILocation(line: 267, column: 25, scope: !12729, inlinedAt: !12759)
!13118 = !DILocation(line: 267, column: 32, scope: !12729, inlinedAt: !12759)
!13119 = !DILocation(line: 267, column: 30, scope: !12729, inlinedAt: !12759)
!13120 = !DILocation(line: 267, column: 9, scope: !12729, inlinedAt: !12759)
!13121 = !DILocation(line: 267, column: 14, scope: !12729, inlinedAt: !12759)
!13122 = !DILocation(line: 268, column: 20, scope: !12729, inlinedAt: !12759)
!13123 = !DILocation(line: 268, column: 25, scope: !12729, inlinedAt: !12759)
!13124 = !DILocation(line: 268, column: 9, scope: !12729, inlinedAt: !12759)
!13125 = !DILocation(line: 268, column: 14, scope: !12729, inlinedAt: !12759)
!13126 = !DILocation(line: 269, column: 21, scope: !12729, inlinedAt: !12759)
!13127 = !DILocation(line: 269, column: 28, scope: !12729, inlinedAt: !12759)
!13128 = !DILocation(line: 269, column: 26, scope: !12729, inlinedAt: !12759)
!13129 = !DILocation(line: 269, column: 33, scope: !12729, inlinedAt: !12759)
!13130 = !DILocation(line: 269, column: 31, scope: !12729, inlinedAt: !12759)
!13131 = !DILocation(line: 269, column: 9, scope: !12729, inlinedAt: !12759)
!13132 = !DILocation(line: 269, column: 14, scope: !12729, inlinedAt: !12759)
!13133 = !DILocation(line: 271, column: 12, scope: !12729, inlinedAt: !12759)
!13134 = !DILocation(line: 271, column: 5, scope: !12729, inlinedAt: !12759)
!13135 = !DILocation(line: 319, column: 16, scope: !13136, inlinedAt: !12735)
!13136 = !DILexicalBlockFile(scope: !2054, file: !1142, discriminator: 4)
!13137 = !DILocation(line: 320, column: 21, scope: !2054, inlinedAt: !12735)
!13138 = !DILocation(line: 320, column: 40, scope: !2054, inlinedAt: !12735)
!13139 = !DILocation(line: 320, column: 40, scope: !12787, inlinedAt: !12735)
!13140 = !DILocation(line: 320, column: 11, scope: !2054, inlinedAt: !12735)
!13141 = !DILocation(line: 320, column: 11, scope: !12751, inlinedAt: !12735)
!13142 = !DILocation(line: 320, column: 11, scope: !12734, inlinedAt: !12735)
!13143 = !DILocation(line: 321, column: 9, scope: !2054, inlinedAt: !12735)
!13144 = !DILocation(line: 321, column: 12, scope: !2054, inlinedAt: !12735)
!13145 = !DILocation(line: 322, column: 5, scope: !2054, inlinedAt: !12735)
!13146 = !DILocation(line: 322, column: 9, scope: !2054, inlinedAt: !12735)
!13147 = !DILocation(line: 322, column: 38, scope: !2054, inlinedAt: !12735)
!13148 = !DILocation(line: 322, column: 28, scope: !2054, inlinedAt: !12735)
!13149 = !DILocation(line: 322, column: 28, scope: !12787, inlinedAt: !12735)
!13150 = !DILocation(line: 322, column: 16, scope: !2054, inlinedAt: !12735)
!13151 = !DILocation(line: 322, column: 16, scope: !12751, inlinedAt: !12735)
!13152 = !DILocation(line: 265, column: 18, scope: !12729, inlinedAt: !12755)
!13153 = !DILocation(line: 265, column: 9, scope: !12729, inlinedAt: !12755)
!13154 = !DILocation(line: 265, column: 13, scope: !12729, inlinedAt: !12755)
!13155 = !DILocation(line: 266, column: 12, scope: !12729, inlinedAt: !12755)
!13156 = !DILocation(line: 266, column: 17, scope: !12729, inlinedAt: !12755)
!13157 = !DILocation(line: 266, column: 7, scope: !12729, inlinedAt: !12755)
!13158 = !DILocation(line: 267, column: 20, scope: !12729, inlinedAt: !12755)
!13159 = !DILocation(line: 267, column: 27, scope: !12729, inlinedAt: !12755)
!13160 = !DILocation(line: 267, column: 25, scope: !12729, inlinedAt: !12755)
!13161 = !DILocation(line: 267, column: 32, scope: !12729, inlinedAt: !12755)
!13162 = !DILocation(line: 267, column: 30, scope: !12729, inlinedAt: !12755)
!13163 = !DILocation(line: 267, column: 9, scope: !12729, inlinedAt: !12755)
!13164 = !DILocation(line: 267, column: 14, scope: !12729, inlinedAt: !12755)
!13165 = !DILocation(line: 268, column: 20, scope: !12729, inlinedAt: !12755)
!13166 = !DILocation(line: 268, column: 25, scope: !12729, inlinedAt: !12755)
!13167 = !DILocation(line: 268, column: 9, scope: !12729, inlinedAt: !12755)
!13168 = !DILocation(line: 268, column: 14, scope: !12729, inlinedAt: !12755)
!13169 = !DILocation(line: 269, column: 21, scope: !12729, inlinedAt: !12755)
!13170 = !DILocation(line: 269, column: 28, scope: !12729, inlinedAt: !12755)
!13171 = !DILocation(line: 269, column: 26, scope: !12729, inlinedAt: !12755)
!13172 = !DILocation(line: 269, column: 33, scope: !12729, inlinedAt: !12755)
!13173 = !DILocation(line: 269, column: 31, scope: !12729, inlinedAt: !12755)
!13174 = !DILocation(line: 269, column: 9, scope: !12729, inlinedAt: !12755)
!13175 = !DILocation(line: 269, column: 14, scope: !12729, inlinedAt: !12755)
!13176 = !DILocation(line: 271, column: 12, scope: !12729, inlinedAt: !12755)
!13177 = !DILocation(line: 271, column: 5, scope: !12729, inlinedAt: !12755)
!13178 = !DILocation(line: 322, column: 16, scope: !12734, inlinedAt: !12735)
!13179 = !DILocation(line: 323, column: 5, scope: !2054, inlinedAt: !12735)
!13180 = !DILocation(line: 323, column: 9, scope: !2054, inlinedAt: !12735)
!13181 = !DILocation(line: 323, column: 38, scope: !2054, inlinedAt: !12735)
!13182 = !DILocation(line: 323, column: 62, scope: !2054, inlinedAt: !12735)
!13183 = !DILocation(line: 323, column: 62, scope: !12787, inlinedAt: !12735)
!13184 = !DILocation(line: 323, column: 28, scope: !2054, inlinedAt: !12735)
!13185 = !DILocation(line: 323, column: 28, scope: !12751, inlinedAt: !12735)
!13186 = !DILocation(line: 323, column: 16, scope: !2054, inlinedAt: !12735)
!13187 = !DILocation(line: 323, column: 16, scope: !12734, inlinedAt: !12735)
!13188 = !DILocation(line: 265, column: 18, scope: !12729, inlinedAt: !12733)
!13189 = !DILocation(line: 265, column: 9, scope: !12729, inlinedAt: !12733)
!13190 = !DILocation(line: 265, column: 13, scope: !12729, inlinedAt: !12733)
!13191 = !DILocation(line: 266, column: 12, scope: !12729, inlinedAt: !12733)
!13192 = !DILocation(line: 266, column: 17, scope: !12729, inlinedAt: !12733)
!13193 = !DILocation(line: 266, column: 7, scope: !12729, inlinedAt: !12733)
!13194 = !DILocation(line: 267, column: 20, scope: !12729, inlinedAt: !12733)
!13195 = !DILocation(line: 267, column: 27, scope: !12729, inlinedAt: !12733)
!13196 = !DILocation(line: 267, column: 25, scope: !12729, inlinedAt: !12733)
!13197 = !DILocation(line: 267, column: 32, scope: !12729, inlinedAt: !12733)
!13198 = !DILocation(line: 267, column: 30, scope: !12729, inlinedAt: !12733)
!13199 = !DILocation(line: 267, column: 9, scope: !12729, inlinedAt: !12733)
!13200 = !DILocation(line: 267, column: 14, scope: !12729, inlinedAt: !12733)
!13201 = !DILocation(line: 268, column: 20, scope: !12729, inlinedAt: !12733)
!13202 = !DILocation(line: 268, column: 25, scope: !12729, inlinedAt: !12733)
!13203 = !DILocation(line: 268, column: 9, scope: !12729, inlinedAt: !12733)
!13204 = !DILocation(line: 268, column: 14, scope: !12729, inlinedAt: !12733)
!13205 = !DILocation(line: 269, column: 21, scope: !12729, inlinedAt: !12733)
!13206 = !DILocation(line: 269, column: 28, scope: !12729, inlinedAt: !12733)
!13207 = !DILocation(line: 269, column: 26, scope: !12729, inlinedAt: !12733)
!13208 = !DILocation(line: 269, column: 33, scope: !12729, inlinedAt: !12733)
!13209 = !DILocation(line: 269, column: 31, scope: !12729, inlinedAt: !12733)
!13210 = !DILocation(line: 269, column: 9, scope: !12729, inlinedAt: !12733)
!13211 = !DILocation(line: 269, column: 14, scope: !12729, inlinedAt: !12733)
!13212 = !DILocation(line: 271, column: 12, scope: !12729, inlinedAt: !12733)
!13213 = !DILocation(line: 271, column: 5, scope: !12729, inlinedAt: !12733)
!13214 = !DILocation(line: 323, column: 16, scope: !13136, inlinedAt: !12735)
!13215 = !DILocation(line: 324, column: 21, scope: !2054, inlinedAt: !12735)
!13216 = !DILocation(line: 324, column: 40, scope: !2054, inlinedAt: !12735)
!13217 = !DILocation(line: 324, column: 40, scope: !12787, inlinedAt: !12735)
!13218 = !DILocation(line: 324, column: 11, scope: !2054, inlinedAt: !12735)
!13219 = !DILocation(line: 324, column: 11, scope: !12751, inlinedAt: !12735)
!13220 = !DILocation(line: 324, column: 11, scope: !12734, inlinedAt: !12735)
!13221 = !DILocation(line: 325, column: 9, scope: !2054, inlinedAt: !12735)
!13222 = !DILocation(line: 325, column: 12, scope: !2054, inlinedAt: !12735)
!13223 = !DILocation(line: 326, column: 5, scope: !2054, inlinedAt: !12735)
!13224 = !DILocation(line: 326, column: 9, scope: !2054, inlinedAt: !12735)
!13225 = !DILocation(line: 326, column: 38, scope: !2054, inlinedAt: !12735)
!13226 = !DILocation(line: 326, column: 28, scope: !2054, inlinedAt: !12735)
!13227 = !DILocation(line: 326, column: 28, scope: !12787, inlinedAt: !12735)
!13228 = !DILocation(line: 326, column: 16, scope: !2054, inlinedAt: !12735)
!13229 = !DILocation(line: 326, column: 16, scope: !12751, inlinedAt: !12735)
!13230 = !DILocation(line: 265, column: 18, scope: !12729, inlinedAt: !12750)
!13231 = !DILocation(line: 265, column: 9, scope: !12729, inlinedAt: !12750)
!13232 = !DILocation(line: 265, column: 13, scope: !12729, inlinedAt: !12750)
!13233 = !DILocation(line: 266, column: 12, scope: !12729, inlinedAt: !12750)
!13234 = !DILocation(line: 266, column: 17, scope: !12729, inlinedAt: !12750)
!13235 = !DILocation(line: 266, column: 7, scope: !12729, inlinedAt: !12750)
!13236 = !DILocation(line: 267, column: 20, scope: !12729, inlinedAt: !12750)
!13237 = !DILocation(line: 267, column: 27, scope: !12729, inlinedAt: !12750)
!13238 = !DILocation(line: 267, column: 25, scope: !12729, inlinedAt: !12750)
!13239 = !DILocation(line: 267, column: 32, scope: !12729, inlinedAt: !12750)
!13240 = !DILocation(line: 267, column: 30, scope: !12729, inlinedAt: !12750)
!13241 = !DILocation(line: 267, column: 9, scope: !12729, inlinedAt: !12750)
!13242 = !DILocation(line: 267, column: 14, scope: !12729, inlinedAt: !12750)
!13243 = !DILocation(line: 268, column: 20, scope: !12729, inlinedAt: !12750)
!13244 = !DILocation(line: 268, column: 25, scope: !12729, inlinedAt: !12750)
!13245 = !DILocation(line: 268, column: 9, scope: !12729, inlinedAt: !12750)
!13246 = !DILocation(line: 268, column: 14, scope: !12729, inlinedAt: !12750)
!13247 = !DILocation(line: 269, column: 21, scope: !12729, inlinedAt: !12750)
!13248 = !DILocation(line: 269, column: 28, scope: !12729, inlinedAt: !12750)
!13249 = !DILocation(line: 269, column: 26, scope: !12729, inlinedAt: !12750)
!13250 = !DILocation(line: 269, column: 33, scope: !12729, inlinedAt: !12750)
!13251 = !DILocation(line: 269, column: 31, scope: !12729, inlinedAt: !12750)
!13252 = !DILocation(line: 269, column: 9, scope: !12729, inlinedAt: !12750)
!13253 = !DILocation(line: 269, column: 14, scope: !12729, inlinedAt: !12750)
!13254 = !DILocation(line: 271, column: 12, scope: !12729, inlinedAt: !12750)
!13255 = !DILocation(line: 271, column: 5, scope: !12729, inlinedAt: !12750)
!13256 = !DILocation(line: 326, column: 16, scope: !12734, inlinedAt: !12735)
!13257 = !DILocation(line: 328, column: 5, scope: !2054, inlinedAt: !12735)
!13258 = !DILocation(line: 328, column: 9, scope: !2054, inlinedAt: !12735)
!13259 = !DILocation(line: 328, column: 53, scope: !2054, inlinedAt: !12735)
!13260 = !DILocation(line: 328, column: 39, scope: !2054, inlinedAt: !12735)
!13261 = !DILocation(line: 328, column: 39, scope: !12787, inlinedAt: !12735)
!13262 = !DILocation(line: 328, column: 26, scope: !2054, inlinedAt: !12735)
!13263 = !DILocation(line: 328, column: 26, scope: !12751, inlinedAt: !12735)
!13264 = !DILocation(line: 328, column: 14, scope: !2054, inlinedAt: !12735)
!13265 = !DILocation(line: 328, column: 14, scope: !12734, inlinedAt: !12735)
!13266 = !DILocation(line: 265, column: 18, scope: !12729, inlinedAt: !12771)
!13267 = !DILocation(line: 265, column: 9, scope: !12729, inlinedAt: !12771)
!13268 = !DILocation(line: 265, column: 13, scope: !12729, inlinedAt: !12771)
!13269 = !DILocation(line: 266, column: 12, scope: !12729, inlinedAt: !12771)
!13270 = !DILocation(line: 266, column: 17, scope: !12729, inlinedAt: !12771)
!13271 = !DILocation(line: 266, column: 7, scope: !12729, inlinedAt: !12771)
!13272 = !DILocation(line: 267, column: 20, scope: !12729, inlinedAt: !12771)
!13273 = !DILocation(line: 267, column: 27, scope: !12729, inlinedAt: !12771)
!13274 = !DILocation(line: 267, column: 25, scope: !12729, inlinedAt: !12771)
!13275 = !DILocation(line: 267, column: 32, scope: !12729, inlinedAt: !12771)
!13276 = !DILocation(line: 267, column: 30, scope: !12729, inlinedAt: !12771)
!13277 = !DILocation(line: 267, column: 9, scope: !12729, inlinedAt: !12771)
!13278 = !DILocation(line: 267, column: 14, scope: !12729, inlinedAt: !12771)
!13279 = !DILocation(line: 268, column: 20, scope: !12729, inlinedAt: !12771)
!13280 = !DILocation(line: 268, column: 25, scope: !12729, inlinedAt: !12771)
!13281 = !DILocation(line: 268, column: 9, scope: !12729, inlinedAt: !12771)
!13282 = !DILocation(line: 268, column: 14, scope: !12729, inlinedAt: !12771)
!13283 = !DILocation(line: 269, column: 21, scope: !12729, inlinedAt: !12771)
!13284 = !DILocation(line: 269, column: 28, scope: !12729, inlinedAt: !12771)
!13285 = !DILocation(line: 269, column: 26, scope: !12729, inlinedAt: !12771)
!13286 = !DILocation(line: 269, column: 33, scope: !12729, inlinedAt: !12771)
!13287 = !DILocation(line: 269, column: 31, scope: !12729, inlinedAt: !12771)
!13288 = !DILocation(line: 269, column: 9, scope: !12729, inlinedAt: !12771)
!13289 = !DILocation(line: 269, column: 14, scope: !12729, inlinedAt: !12771)
!13290 = !DILocation(line: 271, column: 12, scope: !12729, inlinedAt: !12771)
!13291 = !DILocation(line: 271, column: 5, scope: !12729, inlinedAt: !12771)
!13292 = !DILocation(line: 328, column: 14, scope: !13136, inlinedAt: !12735)
!13293 = !DILocation(line: 329, column: 5, scope: !2054, inlinedAt: !12735)
!13294 = !DILocation(line: 329, column: 9, scope: !2054, inlinedAt: !12735)
!13295 = !DILocation(line: 329, column: 26, scope: !2054, inlinedAt: !12735)
!13296 = !DILocation(line: 329, column: 14, scope: !2054, inlinedAt: !12735)
!13297 = !DILocation(line: 329, column: 14, scope: !12787, inlinedAt: !12735)
!13298 = !DILocation(line: 265, column: 18, scope: !12729, inlinedAt: !12786)
!13299 = !DILocation(line: 265, column: 9, scope: !12729, inlinedAt: !12786)
!13300 = !DILocation(line: 265, column: 13, scope: !12729, inlinedAt: !12786)
!13301 = !DILocation(line: 266, column: 12, scope: !12729, inlinedAt: !12786)
!13302 = !DILocation(line: 266, column: 17, scope: !12729, inlinedAt: !12786)
!13303 = !DILocation(line: 266, column: 7, scope: !12729, inlinedAt: !12786)
!13304 = !DILocation(line: 267, column: 20, scope: !12729, inlinedAt: !12786)
!13305 = !DILocation(line: 267, column: 27, scope: !12729, inlinedAt: !12786)
!13306 = !DILocation(line: 267, column: 25, scope: !12729, inlinedAt: !12786)
!13307 = !DILocation(line: 267, column: 32, scope: !12729, inlinedAt: !12786)
!13308 = !DILocation(line: 267, column: 30, scope: !12729, inlinedAt: !12786)
!13309 = !DILocation(line: 267, column: 9, scope: !12729, inlinedAt: !12786)
!13310 = !DILocation(line: 267, column: 14, scope: !12729, inlinedAt: !12786)
!13311 = !DILocation(line: 268, column: 20, scope: !12729, inlinedAt: !12786)
!13312 = !DILocation(line: 268, column: 25, scope: !12729, inlinedAt: !12786)
!13313 = !DILocation(line: 268, column: 9, scope: !12729, inlinedAt: !12786)
!13314 = !DILocation(line: 268, column: 14, scope: !12729, inlinedAt: !12786)
!13315 = !DILocation(line: 269, column: 21, scope: !12729, inlinedAt: !12786)
!13316 = !DILocation(line: 269, column: 28, scope: !12729, inlinedAt: !12786)
!13317 = !DILocation(line: 269, column: 26, scope: !12729, inlinedAt: !12786)
!13318 = !DILocation(line: 269, column: 33, scope: !12729, inlinedAt: !12786)
!13319 = !DILocation(line: 269, column: 31, scope: !12729, inlinedAt: !12786)
!13320 = !DILocation(line: 269, column: 9, scope: !12729, inlinedAt: !12786)
!13321 = !DILocation(line: 269, column: 14, scope: !12729, inlinedAt: !12786)
!13322 = !DILocation(line: 271, column: 12, scope: !12729, inlinedAt: !12786)
!13323 = !DILocation(line: 271, column: 5, scope: !12729, inlinedAt: !12786)
!13324 = !DILocation(line: 329, column: 14, scope: !12751, inlinedAt: !12735)
!13325 = !DILocation(line: 1962, column: 13, scope: !12737)
!13326 = !DILocation(line: 1958, column: 19, scope: !12738)
!13327 = !DILocation(line: 1956, column: 13, scope: !13328)
!13328 = !DILexicalBlockFile(scope: !12738, file: !1800, discriminator: 2)
!13329 = distinct !{!13329, !13330}
!13330 = !DILocation(line: 1956, column: 13, scope: !12740)
!13331 = !DILocation(line: 1963, column: 9, scope: !12740)
!13332 = !DILocation(line: 1955, column: 17, scope: !12741)
!13333 = !DILocation(line: 1953, column: 9, scope: !13334)
!13334 = !DILexicalBlockFile(scope: !12741, file: !1800, discriminator: 2)
!13335 = distinct !{!13335, !13336}
!13336 = !DILocation(line: 1953, column: 9, scope: !12743)
!13337 = !DILocation(line: 1964, column: 13, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !12743, file: !1800, line: 1964, column: 13)
!13339 = !DILocation(line: 1964, column: 18, scope: !13338)
!13340 = !DILocation(line: 1964, column: 22, scope: !13338)
!13341 = !DILocation(line: 1964, column: 13, scope: !12743)
!13342 = !DILocation(line: 1965, column: 35, scope: !13338)
!13343 = !DILocation(line: 1965, column: 40, scope: !13338)
!13344 = !DILocation(line: 1966, column: 35, scope: !13338)
!13345 = !DILocation(line: 1966, column: 40, scope: !13338)
!13346 = !DILocation(line: 1966, column: 44, scope: !13338)
!13347 = !DILocation(line: 1965, column: 13, scope: !13338)
!13348 = !DILocation(line: 1967, column: 5, scope: !12743)
!13349 = !DILocation(line: 1968, column: 30, scope: !12744)
!13350 = !DILocation(line: 1968, column: 35, scope: !12744)
!13351 = !DILocation(line: 1968, column: 9, scope: !12744)
!13352 = !DILocation(line: 1969, column: 1, scope: !12727)
!13353 = distinct !DISubprogram(name: "decode_prediction", scope: !1800, file: !1800, line: 1265, type: !9083, isLocal: true, isDefinition: true, scopeLine: 1267, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!13354 = !DILocalVariable(name: "ac", arg: 1, scope: !13353, file: !1800, line: 1265, type: !2071)
!13355 = !DILocation(line: 1265, column: 42, scope: !13353)
!13356 = !DILocalVariable(name: "ics", arg: 2, scope: !13353, file: !1800, line: 1265, type: !2616)
!13357 = !DILocation(line: 1265, column: 71, scope: !13353)
!13358 = !DILocalVariable(name: "gb", arg: 3, scope: !13353, file: !1800, line: 1266, type: !2041)
!13359 = !DILocation(line: 1266, column: 45, scope: !13353)
!13360 = !DILocalVariable(name: "sfb", scope: !13353, file: !1800, line: 1268, type: !1012)
!13361 = !DILocation(line: 1268, column: 9, scope: !13353)
!13362 = !DILocation(line: 1269, column: 19, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13353, file: !1800, line: 1269, column: 9)
!13364 = !DILocation(line: 1269, column: 9, scope: !13363)
!13365 = !DILocation(line: 1269, column: 9, scope: !13353)
!13366 = !DILocation(line: 1270, column: 47, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13363, file: !1800, line: 1269, column: 24)
!13368 = !DILocation(line: 1270, column: 38, scope: !13367)
!13369 = !DILocation(line: 1270, column: 9, scope: !13367)
!13370 = !DILocation(line: 1270, column: 14, scope: !13367)
!13371 = !DILocation(line: 1270, column: 36, scope: !13367)
!13372 = !DILocation(line: 1271, column: 13, scope: !13373)
!13373 = distinct !DILexicalBlock(scope: !13367, file: !1800, line: 1271, column: 13)
!13374 = !DILocation(line: 1271, column: 18, scope: !13373)
!13375 = !DILocation(line: 1271, column: 40, scope: !13373)
!13376 = !DILocation(line: 1271, column: 45, scope: !13373)
!13377 = !DILocation(line: 1272, column: 13, scope: !13373)
!13378 = !DILocation(line: 1272, column: 18, scope: !13373)
!13379 = !DILocation(line: 1272, column: 40, scope: !13373)
!13380 = !DILocation(line: 1271, column: 13, scope: !13381)
!13381 = !DILexicalBlockFile(scope: !13367, file: !1800, discriminator: 1)
!13382 = !DILocation(line: 1273, column: 20, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13373, file: !1800, line: 1272, column: 46)
!13384 = !DILocation(line: 1273, column: 24, scope: !13383)
!13385 = !DILocation(line: 1273, column: 13, scope: !13383)
!13386 = !DILocation(line: 1275, column: 13, scope: !13383)
!13387 = !DILocation(line: 1277, column: 5, scope: !13367)
!13388 = !DILocation(line: 1278, column: 14, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13353, file: !1800, line: 1278, column: 5)
!13390 = !DILocation(line: 1278, column: 10, scope: !13389)
!13391 = !DILocation(line: 1278, column: 19, scope: !13392)
!13392 = !DILexicalBlockFile(scope: !13393, file: !1800, discriminator: 1)
!13393 = distinct !DILexicalBlock(scope: !13389, file: !1800, line: 1278, column: 5)
!13394 = !DILocation(line: 1278, column: 27, scope: !13392)
!13395 = !DILocation(line: 1278, column: 32, scope: !13392)
!13396 = !DILocation(line: 1278, column: 26, scope: !13392)
!13397 = !DILocation(line: 1278, column: 64, scope: !13392)
!13398 = !DILocation(line: 1278, column: 68, scope: !13392)
!13399 = !DILocation(line: 1278, column: 74, scope: !13392)
!13400 = !DILocation(line: 1278, column: 79, scope: !13392)
!13401 = !DILocation(line: 1278, column: 44, scope: !13392)
!13402 = !DILocation(line: 1278, column: 43, scope: !13392)
!13403 = !DILocation(line: 1278, column: 41, scope: !13392)
!13404 = !DILocation(line: 1278, column: 119, scope: !13405)
!13405 = !DILexicalBlockFile(scope: !13393, file: !1800, discriminator: 2)
!13406 = !DILocation(line: 1278, column: 123, scope: !13405)
!13407 = !DILocation(line: 1278, column: 129, scope: !13405)
!13408 = !DILocation(line: 1278, column: 134, scope: !13405)
!13409 = !DILocation(line: 1278, column: 99, scope: !13405)
!13410 = !DILocation(line: 1278, column: 98, scope: !13405)
!13411 = !DILocation(line: 1278, column: 26, scope: !13405)
!13412 = !DILocation(line: 1278, column: 154, scope: !13413)
!13413 = !DILexicalBlockFile(scope: !13393, file: !1800, discriminator: 3)
!13414 = !DILocation(line: 1278, column: 159, scope: !13413)
!13415 = !DILocation(line: 1278, column: 153, scope: !13413)
!13416 = !DILocation(line: 1278, column: 26, scope: !13413)
!13417 = !DILocation(line: 1278, column: 26, scope: !13418)
!13418 = !DILexicalBlockFile(scope: !13393, file: !1800, discriminator: 4)
!13419 = !DILocation(line: 1278, column: 23, scope: !13418)
!13420 = !DILocation(line: 1278, column: 5, scope: !13418)
!13421 = !DILocation(line: 1279, column: 47, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13393, file: !1800, line: 1278, column: 177)
!13423 = !DILocation(line: 1279, column: 37, scope: !13422)
!13424 = !DILocation(line: 1279, column: 30, scope: !13422)
!13425 = !DILocation(line: 1279, column: 9, scope: !13422)
!13426 = !DILocation(line: 1279, column: 14, scope: !13422)
!13427 = !DILocation(line: 1279, column: 35, scope: !13422)
!13428 = !DILocation(line: 1280, column: 5, scope: !13422)
!13429 = !DILocation(line: 1278, column: 173, scope: !13430)
!13430 = !DILexicalBlockFile(scope: !13393, file: !1800, discriminator: 5)
!13431 = !DILocation(line: 1278, column: 5, scope: !13430)
!13432 = distinct !{!13432, !13433}
!13433 = !DILocation(line: 1278, column: 5, scope: !13353)
!13434 = !DILocation(line: 1281, column: 5, scope: !13353)
!13435 = !DILocation(line: 1282, column: 1, scope: !13353)
!13436 = distinct !DISubprogram(name: "decode_ltp", scope: !1800, file: !1800, line: 1287, type: !13437, isLocal: true, isDefinition: true, scopeLine: 1289, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!13437 = !DISubroutineType(types: !13438)
!13438 = !{null, !13439, !2041, !1030}
!13439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64, align: 64)
!13440 = !DILocalVariable(name: "ltp", arg: 1, scope: !13436, file: !1800, line: 1287, type: !13439)
!13441 = !DILocation(line: 1287, column: 44, scope: !13436)
!13442 = !DILocalVariable(name: "gb", arg: 2, scope: !13436, file: !1800, line: 1288, type: !2041)
!13443 = !DILocation(line: 1288, column: 39, scope: !13436)
!13444 = !DILocalVariable(name: "max_sfb", arg: 3, scope: !13436, file: !1800, line: 1288, type: !1030)
!13445 = !DILocation(line: 1288, column: 51, scope: !13436)
!13446 = !DILocalVariable(name: "sfb", scope: !13436, file: !1800, line: 1290, type: !1012)
!13447 = !DILocation(line: 1290, column: 9, scope: !13436)
!13448 = !DILocation(line: 1292, column: 25, scope: !13436)
!13449 = !DILocation(line: 1292, column: 16, scope: !13436)
!13450 = !DILocation(line: 1292, column: 5, scope: !13436)
!13451 = !DILocation(line: 1292, column: 10, scope: !13436)
!13452 = !DILocation(line: 1292, column: 14, scope: !13436)
!13453 = !DILocation(line: 1293, column: 35, scope: !13436)
!13454 = !DILocation(line: 1293, column: 26, scope: !13436)
!13455 = !DILocation(line: 1293, column: 17, scope: !13436)
!13456 = !DILocation(line: 1293, column: 5, scope: !13436)
!13457 = !DILocation(line: 1293, column: 10, scope: !13436)
!13458 = !DILocation(line: 1293, column: 15, scope: !13436)
!13459 = !DILocation(line: 1294, column: 14, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13436, file: !1800, line: 1294, column: 5)
!13461 = !DILocation(line: 1294, column: 10, scope: !13460)
!13462 = !DILocation(line: 1294, column: 19, scope: !13463)
!13463 = !DILexicalBlockFile(scope: !13464, file: !1800, discriminator: 1)
!13464 = distinct !DILexicalBlock(scope: !13460, file: !1800, line: 1294, column: 5)
!13465 = !DILocation(line: 1294, column: 27, scope: !13463)
!13466 = !DILocation(line: 1294, column: 26, scope: !13463)
!13467 = !DILocation(line: 1294, column: 36, scope: !13463)
!13468 = !DILocation(line: 1294, column: 26, scope: !13469)
!13469 = !DILexicalBlockFile(scope: !13464, file: !1800, discriminator: 2)
!13470 = !DILocation(line: 1294, column: 53, scope: !13471)
!13471 = !DILexicalBlockFile(scope: !13464, file: !1800, discriminator: 3)
!13472 = !DILocation(line: 1294, column: 52, scope: !13471)
!13473 = !DILocation(line: 1294, column: 26, scope: !13471)
!13474 = !DILocation(line: 1294, column: 26, scope: !13475)
!13475 = !DILexicalBlockFile(scope: !13464, file: !1800, discriminator: 4)
!13476 = !DILocation(line: 1294, column: 23, scope: !13475)
!13477 = !DILocation(line: 1294, column: 5, scope: !13475)
!13478 = !DILocation(line: 1295, column: 36, scope: !13464)
!13479 = !DILocation(line: 1295, column: 26, scope: !13464)
!13480 = !DILocation(line: 1295, column: 19, scope: !13464)
!13481 = !DILocation(line: 1295, column: 9, scope: !13464)
!13482 = !DILocation(line: 1295, column: 14, scope: !13464)
!13483 = !DILocation(line: 1295, column: 24, scope: !13464)
!13484 = !DILocation(line: 1294, column: 67, scope: !13485)
!13485 = !DILexicalBlockFile(scope: !13464, file: !1800, discriminator: 5)
!13486 = !DILocation(line: 1294, column: 5, scope: !13485)
!13487 = distinct !{!13487, !13488}
!13488 = !DILocation(line: 1294, column: 5, scope: !13436)
!13489 = !DILocation(line: 1296, column: 1, scope: !13436)
!13490 = distinct !DISubprogram(name: "noise_scale", scope: !1142, file: !1142, line: 196, type: !13491, isLocal: true, isDefinition: true, scopeLine: 197, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!13491 = !DISubroutineType(types: !13492)
!13492 = !{null, !1454, !1012, !1012, !1012}
!13493 = !DILocalVariable(name: "coefs", arg: 1, scope: !13490, file: !1142, line: 196, type: !1454)
!13494 = !DILocation(line: 196, column: 30, scope: !13490)
!13495 = !DILocalVariable(name: "scale", arg: 2, scope: !13490, file: !1142, line: 196, type: !1012)
!13496 = !DILocation(line: 196, column: 41, scope: !13490)
!13497 = !DILocalVariable(name: "band_energy", arg: 3, scope: !13490, file: !1142, line: 196, type: !1012)
!13498 = !DILocation(line: 196, column: 52, scope: !13490)
!13499 = !DILocalVariable(name: "len", arg: 4, scope: !13490, file: !1142, line: 196, type: !1012)
!13500 = !DILocation(line: 196, column: 69, scope: !13490)
!13501 = !DILocalVariable(name: "ssign", scope: !13490, file: !1142, line: 198, type: !1012)
!13502 = !DILocation(line: 198, column: 9, scope: !13490)
!13503 = !DILocation(line: 198, column: 17, scope: !13490)
!13504 = !DILocation(line: 198, column: 23, scope: !13490)
!13505 = !DILocalVariable(name: "s", scope: !13490, file: !1142, line: 199, type: !1012)
!13506 = !DILocation(line: 199, column: 9, scope: !13490)
!13507 = !DILocation(line: 199, column: 15, scope: !13490)
!13508 = !DILocation(line: 199, column: 22, scope: !13490)
!13509 = !DILocation(line: 199, column: 14, scope: !13490)
!13510 = !DILocation(line: 199, column: 30, scope: !13511)
!13511 = !DILexicalBlockFile(scope: !13490, file: !1142, discriminator: 1)
!13512 = !DILocation(line: 199, column: 14, scope: !13511)
!13513 = !DILocation(line: 199, column: 42, scope: !13514)
!13514 = !DILexicalBlockFile(scope: !13490, file: !1142, discriminator: 2)
!13515 = !DILocation(line: 199, column: 40, scope: !13514)
!13516 = !DILocation(line: 199, column: 14, scope: !13514)
!13517 = !DILocation(line: 199, column: 14, scope: !13518)
!13518 = !DILexicalBlockFile(scope: !13490, file: !1142, discriminator: 3)
!13519 = !DILocation(line: 199, column: 9, scope: !13518)
!13520 = !DILocalVariable(name: "round", scope: !13490, file: !1142, line: 200, type: !1013)
!13521 = !DILocation(line: 200, column: 18, scope: !13490)
!13522 = !DILocalVariable(name: "i", scope: !13490, file: !1142, line: 201, type: !1012)
!13523 = !DILocation(line: 201, column: 9, scope: !13490)
!13524 = !DILocalVariable(name: "out", scope: !13490, file: !1142, line: 201, type: !1012)
!13525 = !DILocation(line: 201, column: 12, scope: !13490)
!13526 = !DILocalVariable(name: "c", scope: !13490, file: !1142, line: 201, type: !1012)
!13527 = !DILocation(line: 201, column: 17, scope: !13490)
!13528 = !DILocation(line: 201, column: 29, scope: !13490)
!13529 = !DILocation(line: 201, column: 31, scope: !13490)
!13530 = !DILocation(line: 201, column: 21, scope: !13490)
!13531 = !DILocalVariable(name: "nlz", scope: !13490, file: !1142, line: 202, type: !1012)
!13532 = !DILocation(line: 202, column: 9, scope: !13490)
!13533 = !DILocation(line: 204, column: 5, scope: !13490)
!13534 = !DILocation(line: 204, column: 12, scope: !13511)
!13535 = !DILocation(line: 204, column: 24, scope: !13511)
!13536 = !DILocation(line: 204, column: 5, scope: !13511)
!13537 = !DILocation(line: 205, column: 21, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13490, file: !1142, line: 204, column: 34)
!13539 = !DILocation(line: 206, column: 12, scope: !13538)
!13540 = !DILocation(line: 204, column: 5, scope: !13514)
!13541 = distinct !{!13541, !13533}
!13542 = !DILocation(line: 208, column: 10, scope: !13490)
!13543 = !DILocation(line: 208, column: 7, scope: !13490)
!13544 = !DILocation(line: 209, column: 14, scope: !13490)
!13545 = !DILocation(line: 209, column: 12, scope: !13490)
!13546 = !DILocation(line: 209, column: 21, scope: !13490)
!13547 = !DILocation(line: 209, column: 23, scope: !13490)
!13548 = !DILocation(line: 209, column: 18, scope: !13490)
!13549 = !DILocation(line: 209, column: 7, scope: !13490)
!13550 = !DILocation(line: 211, column: 9, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13490, file: !1142, line: 211, column: 9)
!13552 = !DILocation(line: 211, column: 11, scope: !13551)
!13553 = !DILocation(line: 211, column: 9, scope: !13490)
!13554 = !DILocation(line: 212, column: 15, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13556, file: !1142, line: 212, column: 9)
!13556 = distinct !DILexicalBlock(scope: !13551, file: !1142, line: 211, column: 17)
!13557 = !DILocation(line: 212, column: 14, scope: !13555)
!13558 = !DILocation(line: 212, column: 19, scope: !13559)
!13559 = !DILexicalBlockFile(scope: !13560, file: !1142, discriminator: 1)
!13560 = distinct !DILexicalBlock(scope: !13555, file: !1142, line: 212, column: 9)
!13561 = !DILocation(line: 212, column: 21, scope: !13559)
!13562 = !DILocation(line: 212, column: 20, scope: !13559)
!13563 = !DILocation(line: 212, column: 9, scope: !13559)
!13564 = !DILocation(line: 213, column: 19, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13560, file: !1142, line: 212, column: 31)
!13566 = !DILocation(line: 213, column: 13, scope: !13565)
!13567 = !DILocation(line: 213, column: 22, scope: !13565)
!13568 = !DILocation(line: 214, column: 9, scope: !13565)
!13569 = !DILocation(line: 212, column: 27, scope: !13570)
!13570 = !DILexicalBlockFile(scope: !13560, file: !1142, discriminator: 2)
!13571 = !DILocation(line: 212, column: 9, scope: !13570)
!13572 = distinct !{!13572, !13573}
!13573 = !DILocation(line: 212, column: 9, scope: !13556)
!13574 = !DILocation(line: 215, column: 5, scope: !13556)
!13575 = !DILocation(line: 215, column: 16, scope: !13576)
!13576 = !DILexicalBlockFile(scope: !13577, file: !1142, discriminator: 1)
!13577 = distinct !DILexicalBlock(scope: !13551, file: !1142, line: 215, column: 16)
!13578 = !DILocation(line: 215, column: 18, scope: !13576)
!13579 = !DILocation(line: 216, column: 17, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13577, file: !1142, line: 215, column: 24)
!13581 = !DILocation(line: 216, column: 27, scope: !13582)
!13582 = !DILexicalBlockFile(scope: !13580, file: !1142, discriminator: 1)
!13583 = !DILocation(line: 216, column: 28, scope: !13582)
!13584 = !DILocation(line: 216, column: 23, scope: !13582)
!13585 = !DILocation(line: 216, column: 17, scope: !13582)
!13586 = !DILocation(line: 216, column: 17, scope: !13587)
!13587 = !DILexicalBlockFile(scope: !13580, file: !1142, discriminator: 2)
!13588 = !DILocation(line: 216, column: 17, scope: !13589)
!13589 = !DILexicalBlockFile(scope: !13580, file: !1142, discriminator: 3)
!13590 = !DILocation(line: 216, column: 15, scope: !13589)
!13591 = !DILocation(line: 217, column: 15, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13580, file: !1142, line: 217, column: 9)
!13593 = !DILocation(line: 217, column: 14, scope: !13592)
!13594 = !DILocation(line: 217, column: 19, scope: !13595)
!13595 = !DILexicalBlockFile(scope: !13596, file: !1142, discriminator: 1)
!13596 = distinct !DILexicalBlock(scope: !13592, file: !1142, line: 217, column: 9)
!13597 = !DILocation(line: 217, column: 21, scope: !13595)
!13598 = !DILocation(line: 217, column: 20, scope: !13595)
!13599 = !DILocation(line: 217, column: 9, scope: !13595)
!13600 = !DILocation(line: 218, column: 41, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13596, file: !1142, line: 217, column: 31)
!13602 = !DILocation(line: 218, column: 35, scope: !13601)
!13603 = !DILocation(line: 218, column: 26, scope: !13601)
!13604 = !DILocation(line: 218, column: 46, scope: !13601)
!13605 = !DILocation(line: 218, column: 44, scope: !13601)
!13606 = !DILocation(line: 218, column: 49, scope: !13601)
!13607 = !DILocation(line: 218, column: 19, scope: !13601)
!13608 = !DILocation(line: 218, column: 17, scope: !13601)
!13609 = !DILocation(line: 219, column: 31, scope: !13601)
!13610 = !DILocation(line: 219, column: 35, scope: !13601)
!13611 = !DILocation(line: 219, column: 34, scope: !13601)
!13612 = !DILocation(line: 219, column: 45, scope: !13601)
!13613 = !DILocation(line: 219, column: 42, scope: !13601)
!13614 = !DILocation(line: 219, column: 50, scope: !13601)
!13615 = !DILocation(line: 219, column: 48, scope: !13601)
!13616 = !DILocation(line: 219, column: 19, scope: !13601)
!13617 = !DILocation(line: 219, column: 13, scope: !13601)
!13618 = !DILocation(line: 219, column: 22, scope: !13601)
!13619 = !DILocation(line: 220, column: 9, scope: !13601)
!13620 = !DILocation(line: 217, column: 27, scope: !13621)
!13621 = !DILexicalBlockFile(scope: !13596, file: !1142, discriminator: 2)
!13622 = !DILocation(line: 217, column: 9, scope: !13621)
!13623 = distinct !{!13623, !13624}
!13624 = !DILocation(line: 217, column: 9, scope: !13580)
!13625 = !DILocation(line: 221, column: 5, scope: !13580)
!13626 = !DILocation(line: 223, column: 13, scope: !13627)
!13627 = distinct !DILexicalBlock(scope: !13577, file: !1142, line: 222, column: 10)
!13628 = !DILocation(line: 223, column: 15, scope: !13627)
!13629 = !DILocation(line: 223, column: 11, scope: !13627)
!13630 = !DILocation(line: 224, column: 23, scope: !13627)
!13631 = !DILocation(line: 224, column: 24, scope: !13627)
!13632 = !DILocation(line: 224, column: 19, scope: !13627)
!13633 = !DILocation(line: 224, column: 15, scope: !13627)
!13634 = !DILocation(line: 225, column: 15, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13627, file: !1142, line: 225, column: 9)
!13636 = !DILocation(line: 225, column: 14, scope: !13635)
!13637 = !DILocation(line: 225, column: 19, scope: !13638)
!13638 = !DILexicalBlockFile(scope: !13639, file: !1142, discriminator: 1)
!13639 = distinct !DILexicalBlock(scope: !13635, file: !1142, line: 225, column: 9)
!13640 = !DILocation(line: 225, column: 21, scope: !13638)
!13641 = !DILocation(line: 225, column: 20, scope: !13638)
!13642 = !DILocation(line: 225, column: 9, scope: !13638)
!13643 = !DILocation(line: 226, column: 50, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !13639, file: !1142, line: 225, column: 31)
!13645 = !DILocation(line: 226, column: 44, scope: !13644)
!13646 = !DILocation(line: 226, column: 35, scope: !13644)
!13647 = !DILocation(line: 226, column: 55, scope: !13644)
!13648 = !DILocation(line: 226, column: 53, scope: !13644)
!13649 = !DILocation(line: 226, column: 59, scope: !13644)
!13650 = !DILocation(line: 226, column: 57, scope: !13644)
!13651 = !DILocation(line: 226, column: 69, scope: !13644)
!13652 = !DILocation(line: 226, column: 66, scope: !13644)
!13653 = !DILocation(line: 226, column: 19, scope: !13644)
!13654 = !DILocation(line: 226, column: 17, scope: !13644)
!13655 = !DILocation(line: 227, column: 24, scope: !13644)
!13656 = !DILocation(line: 227, column: 30, scope: !13644)
!13657 = !DILocation(line: 227, column: 28, scope: !13644)
!13658 = !DILocation(line: 227, column: 19, scope: !13644)
!13659 = !DILocation(line: 227, column: 13, scope: !13644)
!13660 = !DILocation(line: 227, column: 22, scope: !13644)
!13661 = !DILocation(line: 228, column: 9, scope: !13644)
!13662 = !DILocation(line: 225, column: 27, scope: !13663)
!13663 = !DILexicalBlockFile(scope: !13639, file: !1142, discriminator: 2)
!13664 = !DILocation(line: 225, column: 9, scope: !13663)
!13665 = distinct !{!13665, !13666}
!13666 = !DILocation(line: 225, column: 9, scope: !13627)
!13667 = !DILocation(line: 230, column: 1, scope: !13490)
!13668 = distinct !DISubprogram(name: "DEC_SQUAD", scope: !1142, file: !1142, line: 115, type: !13669, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!13669 = !DISubroutineType(types: !13670)
!13670 = !{!1454, !1454, !1013}
!13671 = !DILocalVariable(name: "dst", arg: 1, scope: !13668, file: !1142, line: 115, type: !1454)
!13672 = !DILocation(line: 115, column: 35, scope: !13668)
!13673 = !DILocalVariable(name: "idx", arg: 2, scope: !13668, file: !1142, line: 115, type: !1013)
!13674 = !DILocation(line: 115, column: 49, scope: !13668)
!13675 = !DILocation(line: 117, column: 15, scope: !13668)
!13676 = !DILocation(line: 117, column: 19, scope: !13668)
!13677 = !DILocation(line: 117, column: 24, scope: !13668)
!13678 = !DILocation(line: 117, column: 5, scope: !13668)
!13679 = !DILocation(line: 117, column: 12, scope: !13668)
!13680 = !DILocation(line: 118, column: 15, scope: !13668)
!13681 = !DILocation(line: 118, column: 19, scope: !13668)
!13682 = !DILocation(line: 118, column: 24, scope: !13668)
!13683 = !DILocation(line: 118, column: 29, scope: !13668)
!13684 = !DILocation(line: 118, column: 5, scope: !13668)
!13685 = !DILocation(line: 118, column: 12, scope: !13668)
!13686 = !DILocation(line: 119, column: 15, scope: !13668)
!13687 = !DILocation(line: 119, column: 19, scope: !13668)
!13688 = !DILocation(line: 119, column: 24, scope: !13668)
!13689 = !DILocation(line: 119, column: 29, scope: !13668)
!13690 = !DILocation(line: 119, column: 5, scope: !13668)
!13691 = !DILocation(line: 119, column: 12, scope: !13668)
!13692 = !DILocation(line: 120, column: 15, scope: !13668)
!13693 = !DILocation(line: 120, column: 19, scope: !13668)
!13694 = !DILocation(line: 120, column: 24, scope: !13668)
!13695 = !DILocation(line: 120, column: 29, scope: !13668)
!13696 = !DILocation(line: 120, column: 5, scope: !13668)
!13697 = !DILocation(line: 120, column: 12, scope: !13668)
!13698 = !DILocation(line: 122, column: 12, scope: !13668)
!13699 = !DILocation(line: 122, column: 16, scope: !13668)
!13700 = !DILocation(line: 122, column: 5, scope: !13668)
!13701 = distinct !DISubprogram(name: "DEC_UQUAD", scope: !1142, file: !1142, line: 133, type: !13702, isLocal: true, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!13702 = !DISubroutineType(types: !13703)
!13703 = !{!1454, !1454, !1013, !1013}
!13704 = !DILocalVariable(name: "dst", arg: 1, scope: !13701, file: !1142, line: 133, type: !1454)
!13705 = !DILocation(line: 133, column: 35, scope: !13701)
!13706 = !DILocalVariable(name: "idx", arg: 2, scope: !13701, file: !1142, line: 133, type: !1013)
!13707 = !DILocation(line: 133, column: 49, scope: !13701)
!13708 = !DILocalVariable(name: "sign", arg: 3, scope: !13701, file: !1142, line: 133, type: !1013)
!13709 = !DILocation(line: 133, column: 63, scope: !13701)
!13710 = !DILocalVariable(name: "nz", scope: !13701, file: !1142, line: 135, type: !1013)
!13711 = !DILocation(line: 135, column: 14, scope: !13701)
!13712 = !DILocation(line: 135, column: 19, scope: !13701)
!13713 = !DILocation(line: 135, column: 23, scope: !13701)
!13714 = !DILocation(line: 137, column: 15, scope: !13701)
!13715 = !DILocation(line: 137, column: 19, scope: !13701)
!13716 = !DILocation(line: 137, column: 38, scope: !13701)
!13717 = !DILocation(line: 137, column: 43, scope: !13701)
!13718 = !DILocation(line: 137, column: 50, scope: !13701)
!13719 = !DILocation(line: 137, column: 29, scope: !13701)
!13720 = !DILocation(line: 137, column: 24, scope: !13701)
!13721 = !DILocation(line: 137, column: 5, scope: !13701)
!13722 = !DILocation(line: 137, column: 12, scope: !13701)
!13723 = !DILocation(line: 138, column: 14, scope: !13701)
!13724 = !DILocation(line: 138, column: 17, scope: !13701)
!13725 = !DILocation(line: 138, column: 10, scope: !13701)
!13726 = !DILocation(line: 139, column: 8, scope: !13701)
!13727 = !DILocation(line: 140, column: 15, scope: !13701)
!13728 = !DILocation(line: 140, column: 19, scope: !13701)
!13729 = !DILocation(line: 140, column: 24, scope: !13701)
!13730 = !DILocation(line: 140, column: 43, scope: !13701)
!13731 = !DILocation(line: 140, column: 48, scope: !13701)
!13732 = !DILocation(line: 140, column: 55, scope: !13701)
!13733 = !DILocation(line: 140, column: 34, scope: !13701)
!13734 = !DILocation(line: 140, column: 29, scope: !13701)
!13735 = !DILocation(line: 140, column: 5, scope: !13701)
!13736 = !DILocation(line: 140, column: 12, scope: !13701)
!13737 = !DILocation(line: 141, column: 14, scope: !13701)
!13738 = !DILocation(line: 141, column: 17, scope: !13701)
!13739 = !DILocation(line: 141, column: 10, scope: !13701)
!13740 = !DILocation(line: 142, column: 8, scope: !13701)
!13741 = !DILocation(line: 143, column: 15, scope: !13701)
!13742 = !DILocation(line: 143, column: 19, scope: !13701)
!13743 = !DILocation(line: 143, column: 24, scope: !13701)
!13744 = !DILocation(line: 143, column: 43, scope: !13701)
!13745 = !DILocation(line: 143, column: 48, scope: !13701)
!13746 = !DILocation(line: 143, column: 55, scope: !13701)
!13747 = !DILocation(line: 143, column: 34, scope: !13701)
!13748 = !DILocation(line: 143, column: 29, scope: !13701)
!13749 = !DILocation(line: 143, column: 5, scope: !13701)
!13750 = !DILocation(line: 143, column: 12, scope: !13701)
!13751 = !DILocation(line: 144, column: 14, scope: !13701)
!13752 = !DILocation(line: 144, column: 17, scope: !13701)
!13753 = !DILocation(line: 144, column: 10, scope: !13701)
!13754 = !DILocation(line: 145, column: 8, scope: !13701)
!13755 = !DILocation(line: 146, column: 15, scope: !13701)
!13756 = !DILocation(line: 146, column: 19, scope: !13701)
!13757 = !DILocation(line: 146, column: 24, scope: !13701)
!13758 = !DILocation(line: 146, column: 43, scope: !13701)
!13759 = !DILocation(line: 146, column: 48, scope: !13701)
!13760 = !DILocation(line: 146, column: 55, scope: !13701)
!13761 = !DILocation(line: 146, column: 34, scope: !13701)
!13762 = !DILocation(line: 146, column: 29, scope: !13701)
!13763 = !DILocation(line: 146, column: 5, scope: !13701)
!13764 = !DILocation(line: 146, column: 12, scope: !13701)
!13765 = !DILocation(line: 148, column: 12, scope: !13701)
!13766 = !DILocation(line: 148, column: 16, scope: !13701)
!13767 = !DILocation(line: 148, column: 5, scope: !13701)
!13768 = distinct !DISubprogram(name: "DEC_SPAIR", scope: !1142, file: !1142, line: 107, type: !13669, isLocal: true, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!13769 = !DILocalVariable(name: "dst", arg: 1, scope: !13768, file: !1142, line: 107, type: !1454)
!13770 = !DILocation(line: 107, column: 35, scope: !13768)
!13771 = !DILocalVariable(name: "idx", arg: 2, scope: !13768, file: !1142, line: 107, type: !1013)
!13772 = !DILocation(line: 107, column: 49, scope: !13768)
!13773 = !DILocation(line: 109, column: 15, scope: !13768)
!13774 = !DILocation(line: 109, column: 19, scope: !13768)
!13775 = !DILocation(line: 109, column: 25, scope: !13768)
!13776 = !DILocation(line: 109, column: 5, scope: !13768)
!13777 = !DILocation(line: 109, column: 12, scope: !13768)
!13778 = !DILocation(line: 110, column: 15, scope: !13768)
!13779 = !DILocation(line: 110, column: 19, scope: !13768)
!13780 = !DILocation(line: 110, column: 24, scope: !13768)
!13781 = !DILocation(line: 110, column: 30, scope: !13768)
!13782 = !DILocation(line: 110, column: 5, scope: !13768)
!13783 = !DILocation(line: 110, column: 12, scope: !13768)
!13784 = !DILocation(line: 112, column: 12, scope: !13768)
!13785 = !DILocation(line: 112, column: 16, scope: !13768)
!13786 = !DILocation(line: 112, column: 5, scope: !13768)
!13787 = distinct !DISubprogram(name: "DEC_UPAIR", scope: !1142, file: !1142, line: 125, type: !13702, isLocal: true, isDefinition: true, scopeLine: 126, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!13788 = !DILocalVariable(name: "dst", arg: 1, scope: !13787, file: !1142, line: 125, type: !1454)
!13789 = !DILocation(line: 125, column: 35, scope: !13787)
!13790 = !DILocalVariable(name: "idx", arg: 2, scope: !13787, file: !1142, line: 125, type: !1013)
!13791 = !DILocation(line: 125, column: 49, scope: !13787)
!13792 = !DILocalVariable(name: "sign", arg: 3, scope: !13787, file: !1142, line: 125, type: !1013)
!13793 = !DILocation(line: 125, column: 63, scope: !13787)
!13794 = !DILocation(line: 127, column: 15, scope: !13787)
!13795 = !DILocation(line: 127, column: 19, scope: !13787)
!13796 = !DILocation(line: 127, column: 33, scope: !13787)
!13797 = !DILocation(line: 127, column: 38, scope: !13787)
!13798 = !DILocation(line: 127, column: 30, scope: !13787)
!13799 = !DILocation(line: 127, column: 25, scope: !13787)
!13800 = !DILocation(line: 127, column: 5, scope: !13787)
!13801 = !DILocation(line: 127, column: 12, scope: !13787)
!13802 = !DILocation(line: 128, column: 15, scope: !13787)
!13803 = !DILocation(line: 128, column: 19, scope: !13787)
!13804 = !DILocation(line: 128, column: 24, scope: !13787)
!13805 = !DILocation(line: 128, column: 39, scope: !13787)
!13806 = !DILocation(line: 128, column: 44, scope: !13787)
!13807 = !DILocation(line: 128, column: 49, scope: !13787)
!13808 = !DILocation(line: 128, column: 35, scope: !13787)
!13809 = !DILocation(line: 128, column: 30, scope: !13787)
!13810 = !DILocation(line: 128, column: 5, scope: !13787)
!13811 = !DILocation(line: 128, column: 12, scope: !13787)
!13812 = !DILocation(line: 130, column: 12, scope: !13787)
!13813 = !DILocation(line: 130, column: 16, scope: !13787)
!13814 = !DILocation(line: 130, column: 5, scope: !13787)
!13815 = distinct !DISubprogram(name: "ff_sqrt", scope: !13816, file: !13816, line: 207, type: !13817, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!13816 = !DIFile(filename: "./libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!13817 = !DISubroutineType(types: !13818)
!13818 = !{!1013, !1013}
!13819 = !DILocalVariable(name: "a", arg: 1, scope: !13815, file: !13816, line: 207, type: !1013)
!13820 = !DILocation(line: 207, column: 72, scope: !13815)
!13821 = !DILocalVariable(name: "b", scope: !13815, file: !13816, line: 209, type: !1013)
!13822 = !DILocation(line: 209, column: 18, scope: !13815)
!13823 = !DILocation(line: 211, column: 9, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13815, file: !13816, line: 211, column: 9)
!13825 = !DILocation(line: 211, column: 11, scope: !13824)
!13826 = !DILocation(line: 211, column: 9, scope: !13815)
!13827 = !DILocation(line: 211, column: 38, scope: !13828)
!13828 = !DILexicalBlockFile(scope: !13824, file: !13816, discriminator: 1)
!13829 = !DILocation(line: 211, column: 40, scope: !13828)
!13830 = !DILocation(line: 211, column: 26, scope: !13828)
!13831 = !DILocation(line: 211, column: 45, scope: !13828)
!13832 = !DILocation(line: 211, column: 50, scope: !13828)
!13833 = !DILocation(line: 211, column: 18, scope: !13828)
!13834 = !DILocation(line: 212, column: 14, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13824, file: !13816, line: 212, column: 14)
!13836 = !DILocation(line: 212, column: 16, scope: !13835)
!13837 = !DILocation(line: 212, column: 14, scope: !13824)
!13838 = !DILocation(line: 212, column: 45, scope: !13839)
!13839 = !DILexicalBlockFile(scope: !13835, file: !13816, discriminator: 1)
!13840 = !DILocation(line: 212, column: 47, scope: !13839)
!13841 = !DILocation(line: 212, column: 33, scope: !13839)
!13842 = !DILocation(line: 212, column: 53, scope: !13839)
!13843 = !DILocation(line: 212, column: 31, scope: !13839)
!13844 = !DILocation(line: 212, column: 29, scope: !13839)
!13845 = !DILocation(line: 214, column: 14, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13835, file: !13816, line: 214, column: 14)
!13847 = !DILocation(line: 214, column: 16, scope: !13846)
!13848 = !DILocation(line: 214, column: 14, scope: !13835)
!13849 = !DILocation(line: 214, column: 45, scope: !13850)
!13850 = !DILexicalBlockFile(scope: !13846, file: !13816, discriminator: 1)
!13851 = !DILocation(line: 214, column: 47, scope: !13850)
!13852 = !DILocation(line: 214, column: 33, scope: !13850)
!13853 = !DILocation(line: 214, column: 53, scope: !13850)
!13854 = !DILocation(line: 214, column: 31, scope: !13850)
!13855 = !DILocation(line: 214, column: 29, scope: !13850)
!13856 = !DILocation(line: 215, column: 14, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13846, file: !13816, line: 215, column: 14)
!13858 = !DILocation(line: 215, column: 16, scope: !13857)
!13859 = !DILocation(line: 215, column: 14, scope: !13846)
!13860 = !DILocation(line: 215, column: 45, scope: !13861)
!13861 = !DILexicalBlockFile(scope: !13857, file: !13816, discriminator: 1)
!13862 = !DILocation(line: 215, column: 47, scope: !13861)
!13863 = !DILocation(line: 215, column: 33, scope: !13861)
!13864 = !DILocation(line: 215, column: 31, scope: !13861)
!13865 = !DILocation(line: 215, column: 29, scope: !13861)
!13866 = !DILocalVariable(name: "s", scope: !13867, file: !13816, line: 218, type: !1012)
!13867 = distinct !DILexicalBlock(scope: !13857, file: !13816, line: 217, column: 10)
!13868 = !DILocation(line: 218, column: 13, scope: !13867)
!13869 = !DILocation(line: 218, column: 38, scope: !13867)
!13870 = !DILocation(line: 218, column: 40, scope: !13867)
!13871 = !DILocation(line: 218, column: 46, scope: !13867)
!13872 = !DILocation(line: 218, column: 23, scope: !13867)
!13873 = !DILocation(line: 218, column: 21, scope: !13867)
!13874 = !DILocation(line: 218, column: 51, scope: !13867)
!13875 = !DILocalVariable(name: "c", scope: !13867, file: !13816, line: 219, type: !1013)
!13876 = !DILocation(line: 219, column: 22, scope: !13867)
!13877 = !DILocation(line: 219, column: 26, scope: !13867)
!13878 = !DILocation(line: 219, column: 32, scope: !13867)
!13879 = !DILocation(line: 219, column: 34, scope: !13867)
!13880 = !DILocation(line: 219, column: 28, scope: !13867)
!13881 = !DILocation(line: 220, column: 25, scope: !13867)
!13882 = !DILocation(line: 220, column: 31, scope: !13867)
!13883 = !DILocation(line: 220, column: 33, scope: !13867)
!13884 = !DILocation(line: 220, column: 27, scope: !13867)
!13885 = !DILocation(line: 220, column: 13, scope: !13867)
!13886 = !DILocation(line: 220, column: 11, scope: !13867)
!13887 = !DILocation(line: 221, column: 37, scope: !13867)
!13888 = !DILocation(line: 221, column: 27, scope: !13867)
!13889 = !DILocation(line: 221, column: 53, scope: !13867)
!13890 = !DILocation(line: 221, column: 42, scope: !13867)
!13891 = !DILocation(line: 221, column: 40, scope: !13867)
!13892 = !DILocation(line: 221, column: 57, scope: !13867)
!13893 = !DILocation(line: 221, column: 14, scope: !13867)
!13894 = !DILocation(line: 221, column: 68, scope: !13867)
!13895 = !DILocation(line: 221, column: 73, scope: !13867)
!13896 = !DILocation(line: 221, column: 70, scope: !13867)
!13897 = !DILocation(line: 221, column: 65, scope: !13867)
!13898 = !DILocation(line: 221, column: 11, scope: !13867)
!13899 = !DILocation(line: 224, column: 12, scope: !13815)
!13900 = !DILocation(line: 224, column: 17, scope: !13815)
!13901 = !DILocation(line: 224, column: 21, scope: !13815)
!13902 = !DILocation(line: 224, column: 25, scope: !13815)
!13903 = !DILocation(line: 224, column: 23, scope: !13815)
!13904 = !DILocation(line: 224, column: 19, scope: !13815)
!13905 = !DILocation(line: 224, column: 14, scope: !13815)
!13906 = !DILocation(line: 224, column: 5, scope: !13815)
!13907 = !DILocation(line: 225, column: 1, scope: !13815)
!13908 = distinct !DISubprogram(name: "reset_all_predictors", scope: !1800, file: !1800, line: 1069, type: !13909, isLocal: true, isDefinition: true, scopeLine: 1070, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!13909 = !DISubroutineType(types: !13910)
!13910 = !{null, !2057}
!13911 = !DILocalVariable(name: "ps", arg: 1, scope: !13912, file: !1142, line: 89, type: !2057)
!13912 = distinct !DISubprogram(name: "reset_predict_state", scope: !1142, file: !1142, line: 89, type: !13909, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!13913 = !DILocation(line: 89, column: 87, scope: !13912, inlinedAt: !13914)
!13914 = distinct !DILocation(line: 1073, column: 9, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13916, file: !1800, line: 1072, column: 5)
!13916 = distinct !DILexicalBlock(scope: !13908, file: !1800, line: 1072, column: 5)
!13917 = !DILocalVariable(name: "ps", arg: 1, scope: !13908, file: !1800, line: 1069, type: !2057)
!13918 = !DILocation(line: 1069, column: 50, scope: !13908)
!13919 = !DILocalVariable(name: "i", scope: !13908, file: !1800, line: 1071, type: !1012)
!13920 = !DILocation(line: 1071, column: 9, scope: !13908)
!13921 = !DILocation(line: 1072, column: 12, scope: !13916)
!13922 = !DILocation(line: 1072, column: 10, scope: !13916)
!13923 = !DILocation(line: 1072, column: 17, scope: !13924)
!13924 = !DILexicalBlockFile(scope: !13915, file: !1800, discriminator: 1)
!13925 = !DILocation(line: 1072, column: 19, scope: !13924)
!13926 = !DILocation(line: 1072, column: 5, scope: !13924)
!13927 = !DILocation(line: 1073, column: 33, scope: !13915)
!13928 = !DILocation(line: 1073, column: 30, scope: !13915)
!13929 = !DILocation(line: 1073, column: 9, scope: !13915)
!13930 = !DILocation(line: 91, column: 5, scope: !13912, inlinedAt: !13914)
!13931 = !DILocation(line: 91, column: 9, scope: !13912, inlinedAt: !13914)
!13932 = !DILocation(line: 91, column: 12, scope: !13912, inlinedAt: !13914)
!13933 = !DILocation(line: 91, column: 17, scope: !13912, inlinedAt: !13914)
!13934 = !DILocation(line: 92, column: 5, scope: !13912, inlinedAt: !13914)
!13935 = !DILocation(line: 92, column: 9, scope: !13912, inlinedAt: !13914)
!13936 = !DILocation(line: 92, column: 12, scope: !13912, inlinedAt: !13914)
!13937 = !DILocation(line: 92, column: 16, scope: !13912, inlinedAt: !13914)
!13938 = !DILocation(line: 93, column: 5, scope: !13912, inlinedAt: !13914)
!13939 = !DILocation(line: 93, column: 9, scope: !13912, inlinedAt: !13914)
!13940 = !DILocation(line: 93, column: 12, scope: !13912, inlinedAt: !13914)
!13941 = !DILocation(line: 93, column: 17, scope: !13912, inlinedAt: !13914)
!13942 = !DILocation(line: 94, column: 5, scope: !13912, inlinedAt: !13914)
!13943 = !DILocation(line: 94, column: 9, scope: !13912, inlinedAt: !13914)
!13944 = !DILocation(line: 94, column: 12, scope: !13912, inlinedAt: !13914)
!13945 = !DILocation(line: 94, column: 16, scope: !13912, inlinedAt: !13914)
!13946 = !DILocation(line: 95, column: 5, scope: !13912, inlinedAt: !13914)
!13947 = !DILocation(line: 95, column: 9, scope: !13912, inlinedAt: !13914)
!13948 = !DILocation(line: 95, column: 14, scope: !13912, inlinedAt: !13914)
!13949 = !DILocation(line: 95, column: 19, scope: !13912, inlinedAt: !13914)
!13950 = !DILocation(line: 96, column: 5, scope: !13912, inlinedAt: !13914)
!13951 = !DILocation(line: 96, column: 9, scope: !13912, inlinedAt: !13914)
!13952 = !DILocation(line: 96, column: 14, scope: !13912, inlinedAt: !13914)
!13953 = !DILocation(line: 96, column: 18, scope: !13912, inlinedAt: !13914)
!13954 = !DILocation(line: 97, column: 5, scope: !13912, inlinedAt: !13914)
!13955 = !DILocation(line: 97, column: 9, scope: !13912, inlinedAt: !13914)
!13956 = !DILocation(line: 97, column: 14, scope: !13912, inlinedAt: !13914)
!13957 = !DILocation(line: 97, column: 19, scope: !13912, inlinedAt: !13914)
!13958 = !DILocation(line: 98, column: 5, scope: !13912, inlinedAt: !13914)
!13959 = !DILocation(line: 98, column: 9, scope: !13912, inlinedAt: !13914)
!13960 = !DILocation(line: 98, column: 14, scope: !13912, inlinedAt: !13914)
!13961 = !DILocation(line: 98, column: 18, scope: !13912, inlinedAt: !13914)
!13962 = !DILocation(line: 99, column: 5, scope: !13912, inlinedAt: !13914)
!13963 = !DILocation(line: 99, column: 9, scope: !13912, inlinedAt: !13914)
!13964 = !DILocation(line: 99, column: 14, scope: !13912, inlinedAt: !13914)
!13965 = !DILocation(line: 99, column: 19, scope: !13912, inlinedAt: !13914)
!13966 = !DILocation(line: 100, column: 5, scope: !13912, inlinedAt: !13914)
!13967 = !DILocation(line: 100, column: 9, scope: !13912, inlinedAt: !13914)
!13968 = !DILocation(line: 100, column: 14, scope: !13912, inlinedAt: !13914)
!13969 = !DILocation(line: 100, column: 18, scope: !13912, inlinedAt: !13914)
!13970 = !DILocation(line: 101, column: 5, scope: !13912, inlinedAt: !13914)
!13971 = !DILocation(line: 101, column: 9, scope: !13912, inlinedAt: !13914)
!13972 = !DILocation(line: 101, column: 14, scope: !13912, inlinedAt: !13914)
!13973 = !DILocation(line: 101, column: 19, scope: !13912, inlinedAt: !13914)
!13974 = !DILocation(line: 102, column: 5, scope: !13912, inlinedAt: !13914)
!13975 = !DILocation(line: 102, column: 9, scope: !13912, inlinedAt: !13914)
!13976 = !DILocation(line: 102, column: 14, scope: !13912, inlinedAt: !13914)
!13977 = !DILocation(line: 102, column: 18, scope: !13912, inlinedAt: !13914)
!13978 = !DILocation(line: 1072, column: 27, scope: !13979)
!13979 = !DILexicalBlockFile(scope: !13915, file: !1800, discriminator: 2)
!13980 = !DILocation(line: 1072, column: 5, scope: !13979)
!13981 = distinct !{!13981, !13982}
!13982 = !DILocation(line: 1072, column: 5, scope: !13908)
!13983 = !DILocation(line: 1074, column: 1, scope: !13908)
!13984 = distinct !DISubprogram(name: "reset_predictor_group", scope: !1800, file: !1800, line: 1092, type: !13985, isLocal: true, isDefinition: true, scopeLine: 1093, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!13985 = !DISubroutineType(types: !13986)
!13986 = !{null, !2057, !1012}
!13987 = !DILocation(line: 89, column: 87, scope: !13912, inlinedAt: !13988)
!13988 = distinct !DILocation(line: 1096, column: 9, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13990, file: !1800, line: 1095, column: 5)
!13990 = distinct !DILexicalBlock(scope: !13984, file: !1800, line: 1095, column: 5)
!13991 = !DILocalVariable(name: "ps", arg: 1, scope: !13984, file: !1800, line: 1092, type: !2057)
!13992 = !DILocation(line: 1092, column: 51, scope: !13984)
!13993 = !DILocalVariable(name: "group_num", arg: 2, scope: !13984, file: !1800, line: 1092, type: !1012)
!13994 = !DILocation(line: 1092, column: 59, scope: !13984)
!13995 = !DILocalVariable(name: "i", scope: !13984, file: !1800, line: 1094, type: !1012)
!13996 = !DILocation(line: 1094, column: 9, scope: !13984)
!13997 = !DILocation(line: 1095, column: 14, scope: !13990)
!13998 = !DILocation(line: 1095, column: 24, scope: !13990)
!13999 = !DILocation(line: 1095, column: 12, scope: !13990)
!14000 = !DILocation(line: 1095, column: 10, scope: !13990)
!14001 = !DILocation(line: 1095, column: 29, scope: !14002)
!14002 = !DILexicalBlockFile(scope: !13989, file: !1800, discriminator: 1)
!14003 = !DILocation(line: 1095, column: 31, scope: !14002)
!14004 = !DILocation(line: 1095, column: 5, scope: !14002)
!14005 = !DILocation(line: 1096, column: 33, scope: !13989)
!14006 = !DILocation(line: 1096, column: 30, scope: !13989)
!14007 = !DILocation(line: 1096, column: 9, scope: !13989)
!14008 = !DILocation(line: 91, column: 5, scope: !13912, inlinedAt: !13988)
!14009 = !DILocation(line: 91, column: 9, scope: !13912, inlinedAt: !13988)
!14010 = !DILocation(line: 91, column: 12, scope: !13912, inlinedAt: !13988)
!14011 = !DILocation(line: 91, column: 17, scope: !13912, inlinedAt: !13988)
!14012 = !DILocation(line: 92, column: 5, scope: !13912, inlinedAt: !13988)
!14013 = !DILocation(line: 92, column: 9, scope: !13912, inlinedAt: !13988)
!14014 = !DILocation(line: 92, column: 12, scope: !13912, inlinedAt: !13988)
!14015 = !DILocation(line: 92, column: 16, scope: !13912, inlinedAt: !13988)
!14016 = !DILocation(line: 93, column: 5, scope: !13912, inlinedAt: !13988)
!14017 = !DILocation(line: 93, column: 9, scope: !13912, inlinedAt: !13988)
!14018 = !DILocation(line: 93, column: 12, scope: !13912, inlinedAt: !13988)
!14019 = !DILocation(line: 93, column: 17, scope: !13912, inlinedAt: !13988)
!14020 = !DILocation(line: 94, column: 5, scope: !13912, inlinedAt: !13988)
!14021 = !DILocation(line: 94, column: 9, scope: !13912, inlinedAt: !13988)
!14022 = !DILocation(line: 94, column: 12, scope: !13912, inlinedAt: !13988)
!14023 = !DILocation(line: 94, column: 16, scope: !13912, inlinedAt: !13988)
!14024 = !DILocation(line: 95, column: 5, scope: !13912, inlinedAt: !13988)
!14025 = !DILocation(line: 95, column: 9, scope: !13912, inlinedAt: !13988)
!14026 = !DILocation(line: 95, column: 14, scope: !13912, inlinedAt: !13988)
!14027 = !DILocation(line: 95, column: 19, scope: !13912, inlinedAt: !13988)
!14028 = !DILocation(line: 96, column: 5, scope: !13912, inlinedAt: !13988)
!14029 = !DILocation(line: 96, column: 9, scope: !13912, inlinedAt: !13988)
!14030 = !DILocation(line: 96, column: 14, scope: !13912, inlinedAt: !13988)
!14031 = !DILocation(line: 96, column: 18, scope: !13912, inlinedAt: !13988)
!14032 = !DILocation(line: 97, column: 5, scope: !13912, inlinedAt: !13988)
!14033 = !DILocation(line: 97, column: 9, scope: !13912, inlinedAt: !13988)
!14034 = !DILocation(line: 97, column: 14, scope: !13912, inlinedAt: !13988)
!14035 = !DILocation(line: 97, column: 19, scope: !13912, inlinedAt: !13988)
!14036 = !DILocation(line: 98, column: 5, scope: !13912, inlinedAt: !13988)
!14037 = !DILocation(line: 98, column: 9, scope: !13912, inlinedAt: !13988)
!14038 = !DILocation(line: 98, column: 14, scope: !13912, inlinedAt: !13988)
!14039 = !DILocation(line: 98, column: 18, scope: !13912, inlinedAt: !13988)
!14040 = !DILocation(line: 99, column: 5, scope: !13912, inlinedAt: !13988)
!14041 = !DILocation(line: 99, column: 9, scope: !13912, inlinedAt: !13988)
!14042 = !DILocation(line: 99, column: 14, scope: !13912, inlinedAt: !13988)
!14043 = !DILocation(line: 99, column: 19, scope: !13912, inlinedAt: !13988)
!14044 = !DILocation(line: 100, column: 5, scope: !13912, inlinedAt: !13988)
!14045 = !DILocation(line: 100, column: 9, scope: !13912, inlinedAt: !13988)
!14046 = !DILocation(line: 100, column: 14, scope: !13912, inlinedAt: !13988)
!14047 = !DILocation(line: 100, column: 18, scope: !13912, inlinedAt: !13988)
!14048 = !DILocation(line: 101, column: 5, scope: !13912, inlinedAt: !13988)
!14049 = !DILocation(line: 101, column: 9, scope: !13912, inlinedAt: !13988)
!14050 = !DILocation(line: 101, column: 14, scope: !13912, inlinedAt: !13988)
!14051 = !DILocation(line: 101, column: 19, scope: !13912, inlinedAt: !13988)
!14052 = !DILocation(line: 102, column: 5, scope: !13912, inlinedAt: !13988)
!14053 = !DILocation(line: 102, column: 9, scope: !13912, inlinedAt: !13988)
!14054 = !DILocation(line: 102, column: 14, scope: !13912, inlinedAt: !13988)
!14055 = !DILocation(line: 102, column: 18, scope: !13912, inlinedAt: !13988)
!14056 = !DILocation(line: 1095, column: 40, scope: !14057)
!14057 = !DILexicalBlockFile(scope: !13989, file: !1800, discriminator: 2)
!14058 = !DILocation(line: 1095, column: 5, scope: !14057)
!14059 = distinct !{!14059, !14060}
!14060 = !DILocation(line: 1095, column: 5, scope: !13984)
!14061 = !DILocation(line: 1097, column: 1, scope: !13984)
!14062 = distinct !DISubprogram(name: "av_mul_sf", scope: !2019, file: !2019, line: 102, type: !14063, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!14063 = !DISubroutineType(types: !14064)
!14064 = !{!2018, !2018, !2018}
!14065 = !DILocalVariable(name: "a", arg: 1, scope: !14062, file: !2019, line: 102, type: !2018)
!14066 = !DILocation(line: 102, column: 68, scope: !14062)
!14067 = !DILocalVariable(name: "b", arg: 2, scope: !14062, file: !2019, line: 102, type: !2018)
!14068 = !DILocation(line: 102, column: 81, scope: !14062)
!14069 = !DILocation(line: 103, column: 16, scope: !14062)
!14070 = !DILocation(line: 103, column: 7, scope: !14062)
!14071 = !DILocation(line: 103, column: 11, scope: !14062)
!14072 = !DILocation(line: 105, column: 17, scope: !14062)
!14073 = !DILocation(line: 105, column: 15, scope: !14062)
!14074 = !DILocation(line: 105, column: 35, scope: !14062)
!14075 = !DILocation(line: 105, column: 24, scope: !14062)
!14076 = !DILocation(line: 105, column: 22, scope: !14062)
!14077 = !DILocation(line: 105, column: 41, scope: !14062)
!14078 = !DILocation(line: 105, column: 14, scope: !14062)
!14079 = !DILocation(line: 105, column: 7, scope: !14062)
!14080 = !DILocation(line: 105, column: 12, scope: !14062)
!14081 = !DILocation(line: 106, column: 37, scope: !14062)
!14082 = !DILocation(line: 106, column: 40, scope: !14062)
!14083 = !DILocation(line: 106, column: 48, scope: !14062)
!14084 = !DILocation(line: 106, column: 52, scope: !14062)
!14085 = !DILocation(line: 106, column: 9, scope: !14062)
!14086 = !DILocation(line: 106, column: 9, scope: !14087)
!14087 = !DILexicalBlockFile(scope: !14062, file: !2019, discriminator: 1)
!14088 = !DILocation(line: 107, column: 12, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !14062, file: !2019, line: 107, column: 9)
!14090 = !DILocation(line: 107, column: 10, scope: !14089)
!14091 = !DILocation(line: 107, column: 17, scope: !14089)
!14092 = !DILocation(line: 107, column: 22, scope: !14093)
!14093 = !DILexicalBlockFile(scope: !14089, file: !2019, discriminator: 1)
!14094 = !DILocation(line: 107, column: 26, scope: !14093)
!14095 = !DILocation(line: 107, column: 9, scope: !14093)
!14096 = !DILocation(line: 108, column: 16, scope: !14089)
!14097 = !DILocation(line: 108, column: 9, scope: !14089)
!14098 = !DILocation(line: 109, column: 12, scope: !14062)
!14099 = !DILocation(line: 109, column: 5, scope: !14062)
!14100 = !DILocation(line: 110, column: 1, scope: !14062)
!14101 = distinct !DISubprogram(name: "av_div_sf", scope: !2019, file: !2019, line: 116, type: !14063, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!14102 = !DILocalVariable(name: "a", arg: 1, scope: !14101, file: !2019, line: 116, type: !2018)
!14103 = !DILocation(line: 116, column: 68, scope: !14101)
!14104 = !DILocalVariable(name: "b", arg: 2, scope: !14101, file: !2019, line: 116, type: !2018)
!14105 = !DILocation(line: 116, column: 81, scope: !14101)
!14106 = !DILocalVariable(name: "temp", scope: !14101, file: !2019, line: 117, type: !1014)
!14107 = !DILocation(line: 117, column: 13, scope: !14101)
!14108 = !DILocation(line: 117, column: 31, scope: !14101)
!14109 = !DILocation(line: 117, column: 20, scope: !14101)
!14110 = !DILocation(line: 117, column: 36, scope: !14101)
!14111 = !DILocation(line: 118, column: 15, scope: !14101)
!14112 = !DILocation(line: 118, column: 13, scope: !14101)
!14113 = !DILocation(line: 118, column: 10, scope: !14101)
!14114 = !DILocation(line: 119, column: 16, scope: !14101)
!14115 = !DILocation(line: 119, column: 7, scope: !14101)
!14116 = !DILocation(line: 119, column: 11, scope: !14101)
!14117 = !DILocation(line: 120, column: 14, scope: !14101)
!14118 = !DILocation(line: 120, column: 7, scope: !14101)
!14119 = !DILocation(line: 120, column: 12, scope: !14101)
!14120 = !DILocation(line: 121, column: 5, scope: !14101)
!14121 = !DILocation(line: 121, column: 14, scope: !14122)
!14122 = !DILexicalBlockFile(scope: !14101, file: !2019, discriminator: 1)
!14123 = !DILocation(line: 121, column: 12, scope: !14122)
!14124 = !DILocation(line: 121, column: 22, scope: !14122)
!14125 = !DILocation(line: 121, column: 19, scope: !14122)
!14126 = !DILocation(line: 121, column: 5, scope: !14122)
!14127 = !DILocation(line: 122, column: 14, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14101, file: !2019, line: 121, column: 28)
!14129 = !DILocation(line: 123, column: 11, scope: !14128)
!14130 = !DILocation(line: 123, column: 14, scope: !14128)
!14131 = !DILocation(line: 124, column: 18, scope: !14128)
!14132 = !DILocation(line: 124, column: 11, scope: !14128)
!14133 = !DILocation(line: 124, column: 16, scope: !14128)
!14134 = !DILocation(line: 121, column: 5, scope: !14135)
!14135 = !DILexicalBlockFile(scope: !14101, file: !2019, discriminator: 2)
!14136 = distinct !{!14136, !14120}
!14137 = !DILocation(line: 126, column: 9, scope: !14101)
!14138 = !DILocation(line: 126, column: 9, scope: !14122)
!14139 = !DILocation(line: 127, column: 12, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14101, file: !2019, line: 127, column: 9)
!14141 = !DILocation(line: 127, column: 10, scope: !14140)
!14142 = !DILocation(line: 127, column: 17, scope: !14140)
!14143 = !DILocation(line: 127, column: 22, scope: !14144)
!14144 = !DILexicalBlockFile(scope: !14140, file: !2019, discriminator: 1)
!14145 = !DILocation(line: 127, column: 26, scope: !14144)
!14146 = !DILocation(line: 127, column: 9, scope: !14144)
!14147 = !DILocation(line: 128, column: 16, scope: !14140)
!14148 = !DILocation(line: 128, column: 9, scope: !14140)
!14149 = !DILocation(line: 129, column: 12, scope: !14101)
!14150 = !DILocation(line: 129, column: 5, scope: !14101)
!14151 = !DILocation(line: 130, column: 1, scope: !14101)
!14152 = distinct !DISubprogram(name: "av_add_sf", scope: !2019, file: !2019, line: 162, type: !14063, isLocal: true, isDefinition: true, scopeLine: 162, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!14153 = !DILocalVariable(name: "a", arg: 1, scope: !14152, file: !2019, line: 162, type: !2018)
!14154 = !DILocation(line: 162, column: 68, scope: !14152)
!14155 = !DILocalVariable(name: "b", arg: 2, scope: !14152, file: !2019, line: 162, type: !2018)
!14156 = !DILocation(line: 162, column: 81, scope: !14152)
!14157 = !DILocalVariable(name: "t", scope: !14152, file: !2019, line: 163, type: !1012)
!14158 = !DILocation(line: 163, column: 9, scope: !14152)
!14159 = !DILocation(line: 163, column: 14, scope: !14152)
!14160 = !DILocation(line: 163, column: 22, scope: !14152)
!14161 = !DILocation(line: 163, column: 18, scope: !14152)
!14162 = !DILocation(line: 164, column: 9, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14152, file: !2019, line: 164, column: 9)
!14164 = !DILocation(line: 164, column: 11, scope: !14163)
!14165 = !DILocation(line: 164, column: 9, scope: !14152)
!14166 = !DILocation(line: 164, column: 24, scope: !14167)
!14167 = !DILexicalBlockFile(scope: !14163, file: !2019, discriminator: 1)
!14168 = !DILocation(line: 164, column: 17, scope: !14167)
!14169 = !DILocation(line: 165, column: 14, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14163, file: !2019, line: 165, column: 14)
!14171 = !DILocation(line: 165, column: 16, scope: !14170)
!14172 = !DILocation(line: 165, column: 14, scope: !14163)
!14173 = !DILocation(line: 165, column: 72, scope: !14174)
!14174 = !DILexicalBlockFile(scope: !14170, file: !2019, discriminator: 1)
!14175 = !DILocation(line: 165, column: 76, scope: !14174)
!14176 = !DILocation(line: 165, column: 86, scope: !14174)
!14177 = !DILocation(line: 165, column: 96, scope: !14174)
!14178 = !DILocation(line: 165, column: 95, scope: !14174)
!14179 = !DILocation(line: 165, column: 91, scope: !14174)
!14180 = !DILocation(line: 165, column: 81, scope: !14174)
!14181 = !DILocation(line: 165, column: 103, scope: !14174)
!14182 = !DILocation(line: 165, column: 44, scope: !14174)
!14183 = !DILocation(line: 165, column: 28, scope: !14174)
!14184 = !DILocation(line: 165, column: 28, scope: !14185)
!14185 = !DILexicalBlockFile(scope: !14174, file: !2019, discriminator: 2)
!14186 = !DILocation(line: 165, column: 21, scope: !14174)
!14187 = !DILocation(line: 166, column: 14, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14170, file: !2019, line: 166, column: 14)
!14189 = !DILocation(line: 166, column: 16, scope: !14188)
!14190 = !DILocation(line: 166, column: 14, scope: !14170)
!14191 = !DILocation(line: 166, column: 73, scope: !14192)
!14192 = !DILexicalBlockFile(scope: !14188, file: !2019, discriminator: 1)
!14193 = !DILocation(line: 166, column: 77, scope: !14192)
!14194 = !DILocation(line: 166, column: 87, scope: !14192)
!14195 = !DILocation(line: 166, column: 95, scope: !14192)
!14196 = !DILocation(line: 166, column: 92, scope: !14192)
!14197 = !DILocation(line: 166, column: 82, scope: !14192)
!14198 = !DILocation(line: 166, column: 102, scope: !14192)
!14199 = !DILocation(line: 166, column: 45, scope: !14192)
!14200 = !DILocation(line: 166, column: 29, scope: !14192)
!14201 = !DILocation(line: 166, column: 29, scope: !14202)
!14202 = !DILexicalBlockFile(scope: !14192, file: !2019, discriminator: 2)
!14203 = !DILocation(line: 166, column: 22, scope: !14192)
!14204 = !DILocation(line: 167, column: 17, scope: !14188)
!14205 = !DILocation(line: 167, column: 10, scope: !14188)
!14206 = !DILocation(line: 168, column: 1, scope: !14152)
!14207 = distinct !DISubprogram(name: "av_int2sf", scope: !2019, file: !2019, line: 185, type: !14208, isLocal: true, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!14208 = !DISubroutineType(types: !14209)
!14209 = !{!2018, !1012, !1012}
!14210 = !DILocalVariable(name: "v", arg: 1, scope: !14207, file: !2019, line: 185, type: !1012)
!14211 = !DILocation(line: 185, column: 62, scope: !14207)
!14212 = !DILocalVariable(name: "frac_bits", arg: 2, scope: !14207, file: !2019, line: 185, type: !1012)
!14213 = !DILocation(line: 185, column: 69, scope: !14207)
!14214 = !DILocalVariable(name: "exp_offset", scope: !14207, file: !2019, line: 186, type: !1012)
!14215 = !DILocation(line: 186, column: 9, scope: !14207)
!14216 = !DILocation(line: 187, column: 8, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14207, file: !2019, line: 187, column: 8)
!14218 = !DILocation(line: 187, column: 10, scope: !14217)
!14219 = !DILocation(line: 187, column: 8, scope: !14207)
!14220 = !DILocation(line: 188, column: 20, scope: !14221)
!14221 = distinct !DILexicalBlock(scope: !14217, file: !2019, line: 187, column: 24)
!14222 = !DILocation(line: 189, column: 10, scope: !14221)
!14223 = !DILocation(line: 190, column: 5, scope: !14221)
!14224 = !DILocation(line: 191, column: 56, scope: !14207)
!14225 = !DILocation(line: 191, column: 57, scope: !14207)
!14226 = !DILocation(line: 191, column: 69, scope: !14207)
!14227 = !DILocation(line: 191, column: 67, scope: !14207)
!14228 = !DILocation(line: 191, column: 81, scope: !14207)
!14229 = !DILocation(line: 191, column: 79, scope: !14207)
!14230 = !DILocation(line: 191, column: 28, scope: !14207)
!14231 = !DILocation(line: 191, column: 12, scope: !14207)
!14232 = !DILocation(line: 191, column: 12, scope: !14233)
!14233 = !DILexicalBlockFile(scope: !14207, file: !2019, discriminator: 1)
!14234 = !DILocation(line: 191, column: 5, scope: !14207)
!14235 = distinct !DISubprogram(name: "av_sub_sf", scope: !2019, file: !2019, line: 173, type: !14063, isLocal: true, isDefinition: true, scopeLine: 173, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!14236 = !DILocalVariable(name: "a", arg: 1, scope: !14235, file: !2019, line: 173, type: !2018)
!14237 = !DILocation(line: 173, column: 68, scope: !14235)
!14238 = !DILocalVariable(name: "b", arg: 2, scope: !14235, file: !2019, line: 173, type: !2018)
!14239 = !DILocation(line: 173, column: 81, scope: !14235)
!14240 = !DILocation(line: 174, column: 36, scope: !14235)
!14241 = !DILocation(line: 174, column: 41, scope: !14235)
!14242 = !DILocation(line: 174, column: 38, scope: !14235)
!14243 = !DILocation(line: 174, column: 49, scope: !14235)
!14244 = !DILocation(line: 174, column: 12, scope: !14235)
!14245 = !DILocation(line: 174, column: 5, scope: !14235)
!14246 = distinct !DISubprogram(name: "av_normalize1_sf", scope: !2019, file: !2019, line: 79, type: !12730, isLocal: true, isDefinition: true, scopeLine: 79, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!14247 = !DILocalVariable(name: "a", arg: 1, scope: !14246, file: !2019, line: 79, type: !2018)
!14248 = !DILocation(line: 79, column: 75, scope: !14246)
!14249 = !DILocation(line: 81, column: 20, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14246, file: !2019, line: 81, column: 8)
!14251 = !DILocation(line: 81, column: 25, scope: !14250)
!14252 = !DILocation(line: 81, column: 40, scope: !14250)
!14253 = !DILocation(line: 81, column: 8, scope: !14246)
!14254 = !DILocation(line: 82, column: 11, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14250, file: !2019, line: 81, column: 45)
!14256 = !DILocation(line: 82, column: 14, scope: !14255)
!14257 = !DILocation(line: 83, column: 11, scope: !14255)
!14258 = !DILocation(line: 83, column: 15, scope: !14255)
!14259 = !DILocation(line: 84, column: 5, scope: !14255)
!14260 = !DILocation(line: 87, column: 12, scope: !14246)
!14261 = !DILocation(line: 87, column: 5, scope: !14246)
!14262 = distinct !DISubprogram(name: "av_normalize_sf", scope: !2019, file: !2019, line: 57, type: !12730, isLocal: true, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!14263 = !DILocalVariable(name: "a", arg: 1, scope: !14262, file: !2019, line: 57, type: !2018)
!14264 = !DILocation(line: 57, column: 67, scope: !14262)
!14265 = !DILocation(line: 58, column: 10, scope: !14266)
!14266 = distinct !DILexicalBlock(scope: !14262, file: !2019, line: 58, column: 8)
!14267 = !DILocation(line: 58, column: 8, scope: !14266)
!14268 = !DILocation(line: 58, column: 8, scope: !14262)
!14269 = !DILocation(line: 60, column: 9, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14266, file: !2019, line: 58, column: 15)
!14271 = !DILocation(line: 60, column: 18, scope: !14272)
!14272 = !DILexicalBlockFile(scope: !14270, file: !2019, discriminator: 1)
!14273 = !DILocation(line: 60, column: 23, scope: !14272)
!14274 = !DILocation(line: 60, column: 37, scope: !14272)
!14275 = !DILocation(line: 60, column: 9, scope: !14272)
!14276 = !DILocation(line: 61, column: 25, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14270, file: !2019, line: 60, column: 50)
!14278 = !DILocation(line: 61, column: 15, scope: !14277)
!14279 = !DILocation(line: 61, column: 20, scope: !14277)
!14280 = !DILocation(line: 62, column: 15, scope: !14277)
!14281 = !DILocation(line: 62, column: 19, scope: !14277)
!14282 = !DILocation(line: 60, column: 9, scope: !14283)
!14283 = !DILexicalBlockFile(scope: !14270, file: !2019, discriminator: 2)
!14284 = distinct !{!14284, !14269}
!14285 = !DILocation(line: 69, column: 14, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14270, file: !2019, line: 69, column: 12)
!14287 = !DILocation(line: 69, column: 18, scope: !14286)
!14288 = !DILocation(line: 69, column: 12, scope: !14270)
!14289 = !DILocation(line: 70, column: 15, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14286, file: !2019, line: 69, column: 25)
!14291 = !DILocation(line: 70, column: 19, scope: !14290)
!14292 = !DILocation(line: 71, column: 15, scope: !14290)
!14293 = !DILocation(line: 71, column: 19, scope: !14290)
!14294 = !DILocation(line: 72, column: 9, scope: !14290)
!14295 = !DILocation(line: 73, column: 5, scope: !14270)
!14296 = !DILocation(line: 74, column: 11, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14266, file: !2019, line: 73, column: 10)
!14298 = !DILocation(line: 74, column: 14, scope: !14297)
!14299 = !DILocation(line: 76, column: 12, scope: !14262)
!14300 = !DILocation(line: 76, column: 5, scope: !14262)
!14301 = distinct !DISubprogram(name: "decode_mid_side_stereo", scope: !1800, file: !1800, line: 1621, type: !14302, isLocal: true, isDefinition: true, scopeLine: 1623, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!14302 = !DISubroutineType(types: !14303)
!14303 = !{null, !2101, !2041, !1012}
!14304 = !DILocalVariable(name: "cpe", arg: 1, scope: !14301, file: !1800, line: 1621, type: !2101)
!14305 = !DILocation(line: 1621, column: 52, scope: !14301)
!14306 = !DILocalVariable(name: "gb", arg: 2, scope: !14301, file: !1800, line: 1621, type: !2041)
!14307 = !DILocation(line: 1621, column: 72, scope: !14301)
!14308 = !DILocalVariable(name: "ms_present", arg: 3, scope: !14301, file: !1800, line: 1622, type: !1012)
!14309 = !DILocation(line: 1622, column: 40, scope: !14301)
!14310 = !DILocalVariable(name: "idx", scope: !14301, file: !1800, line: 1624, type: !1012)
!14311 = !DILocation(line: 1624, column: 9, scope: !14301)
!14312 = !DILocalVariable(name: "max_idx", scope: !14301, file: !1800, line: 1625, type: !1012)
!14313 = !DILocation(line: 1625, column: 9, scope: !14301)
!14314 = !DILocation(line: 1625, column: 19, scope: !14301)
!14315 = !DILocation(line: 1625, column: 24, scope: !14301)
!14316 = !DILocation(line: 1625, column: 30, scope: !14301)
!14317 = !DILocation(line: 1625, column: 34, scope: !14301)
!14318 = !DILocation(line: 1625, column: 54, scope: !14301)
!14319 = !DILocation(line: 1625, column: 59, scope: !14301)
!14320 = !DILocation(line: 1625, column: 65, scope: !14301)
!14321 = !DILocation(line: 1625, column: 69, scope: !14301)
!14322 = !DILocation(line: 1625, column: 52, scope: !14301)
!14323 = !DILocation(line: 1626, column: 9, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14301, file: !1800, line: 1626, column: 9)
!14325 = !DILocation(line: 1626, column: 20, scope: !14324)
!14326 = !DILocation(line: 1626, column: 9, scope: !14301)
!14327 = !DILocation(line: 1627, column: 18, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14329, file: !1800, line: 1627, column: 9)
!14329 = distinct !DILexicalBlock(scope: !14324, file: !1800, line: 1626, column: 26)
!14330 = !DILocation(line: 1627, column: 14, scope: !14328)
!14331 = !DILocation(line: 1627, column: 23, scope: !14332)
!14332 = !DILexicalBlockFile(scope: !14333, file: !1800, discriminator: 1)
!14333 = distinct !DILexicalBlock(scope: !14328, file: !1800, line: 1627, column: 9)
!14334 = !DILocation(line: 1627, column: 29, scope: !14332)
!14335 = !DILocation(line: 1627, column: 27, scope: !14332)
!14336 = !DILocation(line: 1627, column: 9, scope: !14332)
!14337 = !DILocation(line: 1628, column: 43, scope: !14333)
!14338 = !DILocation(line: 1628, column: 33, scope: !14333)
!14339 = !DILocation(line: 1628, column: 26, scope: !14333)
!14340 = !DILocation(line: 1628, column: 13, scope: !14333)
!14341 = !DILocation(line: 1628, column: 18, scope: !14333)
!14342 = !DILocation(line: 1628, column: 31, scope: !14333)
!14343 = !DILocation(line: 1627, column: 41, scope: !14344)
!14344 = !DILexicalBlockFile(scope: !14333, file: !1800, discriminator: 2)
!14345 = !DILocation(line: 1627, column: 9, scope: !14344)
!14346 = distinct !{!14346, !14347}
!14347 = !DILocation(line: 1627, column: 9, scope: !14329)
!14348 = !DILocation(line: 1629, column: 5, scope: !14329)
!14349 = !DILocation(line: 1629, column: 16, scope: !14350)
!14350 = !DILexicalBlockFile(scope: !14351, file: !1800, discriminator: 1)
!14351 = distinct !DILexicalBlock(scope: !14324, file: !1800, line: 1629, column: 16)
!14352 = !DILocation(line: 1629, column: 27, scope: !14350)
!14353 = !DILocation(line: 1630, column: 16, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14351, file: !1800, line: 1629, column: 33)
!14355 = !DILocation(line: 1630, column: 21, scope: !14354)
!14356 = !DILocation(line: 1630, column: 9, scope: !14354)
!14357 = !DILocation(line: 1630, column: 33, scope: !14354)
!14358 = !DILocation(line: 1630, column: 41, scope: !14354)
!14359 = !DILocation(line: 1631, column: 5, scope: !14354)
!14360 = !DILocation(line: 1632, column: 1, scope: !14301)
!14361 = distinct !DISubprogram(name: "apply_mid_side_stereo", scope: !1800, file: !1800, line: 2097, type: !14362, isLocal: true, isDefinition: true, scopeLine: 2098, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!14362 = !DISubroutineType(types: !14363)
!14363 = !{null, !2071, !2101}
!14364 = !DILocalVariable(name: "ac", arg: 1, scope: !14361, file: !1800, line: 2097, type: !2071)
!14365 = !DILocation(line: 2097, column: 47, scope: !14361)
!14366 = !DILocalVariable(name: "cpe", arg: 2, scope: !14361, file: !1800, line: 2097, type: !2101)
!14367 = !DILocation(line: 2097, column: 67, scope: !14361)
!14368 = !DILocalVariable(name: "ics", scope: !14361, file: !1800, line: 2099, type: !10653)
!14369 = !DILocation(line: 2099, column: 36, scope: !14361)
!14370 = !DILocation(line: 2099, column: 43, scope: !14361)
!14371 = !DILocation(line: 2099, column: 48, scope: !14361)
!14372 = !DILocation(line: 2099, column: 54, scope: !14361)
!14373 = !DILocalVariable(name: "ch0", scope: !14361, file: !1800, line: 2100, type: !1032)
!14374 = !DILocation(line: 2100, column: 15, scope: !14361)
!14375 = !DILocation(line: 2100, column: 21, scope: !14361)
!14376 = !DILocation(line: 2100, column: 26, scope: !14361)
!14377 = !DILocation(line: 2100, column: 32, scope: !14361)
!14378 = !DILocalVariable(name: "ch1", scope: !14361, file: !1800, line: 2101, type: !1032)
!14379 = !DILocation(line: 2101, column: 15, scope: !14361)
!14380 = !DILocation(line: 2101, column: 21, scope: !14361)
!14381 = !DILocation(line: 2101, column: 26, scope: !14361)
!14382 = !DILocation(line: 2101, column: 32, scope: !14361)
!14383 = !DILocalVariable(name: "g", scope: !14361, file: !1800, line: 2102, type: !1012)
!14384 = !DILocation(line: 2102, column: 9, scope: !14361)
!14385 = !DILocalVariable(name: "i", scope: !14361, file: !1800, line: 2102, type: !1012)
!14386 = !DILocation(line: 2102, column: 12, scope: !14361)
!14387 = !DILocalVariable(name: "group", scope: !14361, file: !1800, line: 2102, type: !1012)
!14388 = !DILocation(line: 2102, column: 15, scope: !14361)
!14389 = !DILocalVariable(name: "idx", scope: !14361, file: !1800, line: 2102, type: !1012)
!14390 = !DILocation(line: 2102, column: 22, scope: !14361)
!14391 = !DILocalVariable(name: "offsets", scope: !14361, file: !1800, line: 2103, type: !1935)
!14392 = !DILocation(line: 2103, column: 21, scope: !14361)
!14393 = !DILocation(line: 2103, column: 31, scope: !14361)
!14394 = !DILocation(line: 2103, column: 36, scope: !14361)
!14395 = !DILocation(line: 2104, column: 12, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14361, file: !1800, line: 2104, column: 5)
!14397 = !DILocation(line: 2104, column: 10, scope: !14396)
!14398 = !DILocation(line: 2104, column: 17, scope: !14399)
!14399 = !DILexicalBlockFile(scope: !14400, file: !1800, discriminator: 1)
!14400 = distinct !DILexicalBlock(scope: !14396, file: !1800, line: 2104, column: 5)
!14401 = !DILocation(line: 2104, column: 21, scope: !14399)
!14402 = !DILocation(line: 2104, column: 26, scope: !14399)
!14403 = !DILocation(line: 2104, column: 19, scope: !14399)
!14404 = !DILocation(line: 2104, column: 5, scope: !14399)
!14405 = !DILocation(line: 2105, column: 16, scope: !14406)
!14406 = distinct !DILexicalBlock(scope: !14407, file: !1800, line: 2105, column: 9)
!14407 = distinct !DILexicalBlock(scope: !14400, file: !1800, line: 2104, column: 50)
!14408 = !DILocation(line: 2105, column: 14, scope: !14406)
!14409 = !DILocation(line: 2105, column: 21, scope: !14410)
!14410 = !DILexicalBlockFile(scope: !14411, file: !1800, discriminator: 1)
!14411 = distinct !DILexicalBlock(scope: !14406, file: !1800, line: 2105, column: 9)
!14412 = !DILocation(line: 2105, column: 25, scope: !14410)
!14413 = !DILocation(line: 2105, column: 30, scope: !14410)
!14414 = !DILocation(line: 2105, column: 23, scope: !14410)
!14415 = !DILocation(line: 2105, column: 9, scope: !14410)
!14416 = !DILocation(line: 2106, column: 30, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14418, file: !1800, line: 2106, column: 17)
!14418 = distinct !DILexicalBlock(scope: !14411, file: !1800, line: 2105, column: 51)
!14419 = !DILocation(line: 2106, column: 17, scope: !14417)
!14420 = !DILocation(line: 2106, column: 22, scope: !14417)
!14421 = !DILocation(line: 2106, column: 35, scope: !14417)
!14422 = !DILocation(line: 2107, column: 38, scope: !14417)
!14423 = !DILocation(line: 2107, column: 17, scope: !14417)
!14424 = !DILocation(line: 2107, column: 22, scope: !14417)
!14425 = !DILocation(line: 2107, column: 28, scope: !14417)
!14426 = !DILocation(line: 2107, column: 43, scope: !14417)
!14427 = !DILocation(line: 2107, column: 54, scope: !14417)
!14428 = !DILocation(line: 2108, column: 38, scope: !14417)
!14429 = !DILocation(line: 2108, column: 17, scope: !14417)
!14430 = !DILocation(line: 2108, column: 22, scope: !14417)
!14431 = !DILocation(line: 2108, column: 28, scope: !14417)
!14432 = !DILocation(line: 2108, column: 43, scope: !14417)
!14433 = !DILocation(line: 2106, column: 17, scope: !14434)
!14434 = !DILexicalBlockFile(scope: !14418, file: !1800, discriminator: 1)
!14435 = !DILocation(line: 2110, column: 28, scope: !14436)
!14436 = distinct !DILexicalBlock(scope: !14437, file: !1800, line: 2110, column: 17)
!14437 = distinct !DILexicalBlock(scope: !14417, file: !1800, line: 2108, column: 55)
!14438 = !DILocation(line: 2110, column: 22, scope: !14436)
!14439 = !DILocation(line: 2110, column: 33, scope: !14440)
!14440 = !DILexicalBlockFile(scope: !14441, file: !1800, discriminator: 1)
!14441 = distinct !DILexicalBlock(scope: !14436, file: !1800, line: 2110, column: 17)
!14442 = !DILocation(line: 2110, column: 56, scope: !14440)
!14443 = !DILocation(line: 2110, column: 41, scope: !14440)
!14444 = !DILocation(line: 2110, column: 46, scope: !14440)
!14445 = !DILocation(line: 2110, column: 39, scope: !14440)
!14446 = !DILocation(line: 2110, column: 17, scope: !14440)
!14447 = !DILocation(line: 2111, column: 21, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14441, file: !1800, line: 2110, column: 69)
!14449 = !DILocation(line: 2111, column: 25, scope: !14448)
!14450 = !DILocation(line: 2111, column: 31, scope: !14448)
!14451 = !DILocation(line: 2111, column: 49, scope: !14448)
!14452 = !DILocation(line: 2111, column: 55, scope: !14448)
!14453 = !DILocation(line: 2111, column: 61, scope: !14448)
!14454 = !DILocation(line: 2111, column: 53, scope: !14448)
!14455 = !DILocation(line: 2111, column: 77, scope: !14448)
!14456 = !DILocation(line: 2111, column: 69, scope: !14448)
!14457 = !DILocation(line: 2111, column: 67, scope: !14448)
!14458 = !DILocation(line: 2112, column: 49, scope: !14448)
!14459 = !DILocation(line: 2112, column: 55, scope: !14448)
!14460 = !DILocation(line: 2112, column: 61, scope: !14448)
!14461 = !DILocation(line: 2112, column: 53, scope: !14448)
!14462 = !DILocation(line: 2112, column: 77, scope: !14448)
!14463 = !DILocation(line: 2112, column: 69, scope: !14448)
!14464 = !DILocation(line: 2112, column: 67, scope: !14448)
!14465 = !DILocation(line: 2113, column: 57, scope: !14448)
!14466 = !DILocation(line: 2113, column: 58, scope: !14448)
!14467 = !DILocation(line: 2113, column: 49, scope: !14448)
!14468 = !DILocation(line: 2113, column: 72, scope: !14448)
!14469 = !DILocation(line: 2113, column: 64, scope: !14448)
!14470 = !DILocation(line: 2113, column: 62, scope: !14448)
!14471 = !DILocation(line: 2120, column: 17, scope: !14448)
!14472 = !DILocation(line: 2110, column: 65, scope: !14473)
!14473 = !DILexicalBlockFile(scope: !14441, file: !1800, discriminator: 2)
!14474 = !DILocation(line: 2110, column: 17, scope: !14473)
!14475 = distinct !{!14475, !14476}
!14476 = !DILocation(line: 2110, column: 17, scope: !14437)
!14477 = !DILocation(line: 2121, column: 13, scope: !14437)
!14478 = !DILocation(line: 2122, column: 9, scope: !14418)
!14479 = !DILocation(line: 2105, column: 40, scope: !14480)
!14480 = !DILexicalBlockFile(scope: !14411, file: !1800, discriminator: 2)
!14481 = !DILocation(line: 2105, column: 47, scope: !14480)
!14482 = !DILocation(line: 2105, column: 9, scope: !14480)
!14483 = distinct !{!14483, !14484}
!14484 = !DILocation(line: 2105, column: 9, scope: !14407)
!14485 = !DILocation(line: 2123, column: 31, scope: !14407)
!14486 = !DILocation(line: 2123, column: 16, scope: !14407)
!14487 = !DILocation(line: 2123, column: 21, scope: !14407)
!14488 = !DILocation(line: 2123, column: 34, scope: !14407)
!14489 = !DILocation(line: 2123, column: 13, scope: !14407)
!14490 = !DILocation(line: 2124, column: 31, scope: !14407)
!14491 = !DILocation(line: 2124, column: 16, scope: !14407)
!14492 = !DILocation(line: 2124, column: 21, scope: !14407)
!14493 = !DILocation(line: 2124, column: 34, scope: !14407)
!14494 = !DILocation(line: 2124, column: 13, scope: !14407)
!14495 = !DILocation(line: 2125, column: 5, scope: !14407)
!14496 = !DILocation(line: 2104, column: 46, scope: !14497)
!14497 = !DILexicalBlockFile(scope: !14400, file: !1800, discriminator: 2)
!14498 = !DILocation(line: 2104, column: 5, scope: !14497)
!14499 = distinct !{!14499, !14500}
!14500 = !DILocation(line: 2104, column: 5, scope: !14361)
!14501 = !DILocation(line: 2126, column: 1, scope: !14361)
!14502 = distinct !DISubprogram(name: "apply_intensity_stereo", scope: !1800, file: !1800, line: 2135, type: !14503, isLocal: true, isDefinition: true, scopeLine: 2137, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!14503 = !DISubroutineType(types: !14504)
!14504 = !{null, !2071, !2101, !1012}
!14505 = !DILocalVariable(name: "ac", arg: 1, scope: !14502, file: !1800, line: 2135, type: !2071)
!14506 = !DILocation(line: 2135, column: 48, scope: !14502)
!14507 = !DILocalVariable(name: "cpe", arg: 2, scope: !14502, file: !1800, line: 2136, type: !2101)
!14508 = !DILocation(line: 2136, column: 52, scope: !14502)
!14509 = !DILocalVariable(name: "ms_present", arg: 3, scope: !14502, file: !1800, line: 2136, type: !1012)
!14510 = !DILocation(line: 2136, column: 61, scope: !14502)
!14511 = !DILocalVariable(name: "ics", scope: !14502, file: !1800, line: 2138, type: !10653)
!14512 = !DILocation(line: 2138, column: 36, scope: !14502)
!14513 = !DILocation(line: 2138, column: 43, scope: !14502)
!14514 = !DILocation(line: 2138, column: 48, scope: !14502)
!14515 = !DILocation(line: 2138, column: 54, scope: !14502)
!14516 = !DILocalVariable(name: "sce1", scope: !14502, file: !1800, line: 2139, type: !1906)
!14517 = !DILocation(line: 2139, column: 27, scope: !14502)
!14518 = !DILocation(line: 2139, column: 35, scope: !14502)
!14519 = !DILocation(line: 2139, column: 40, scope: !14502)
!14520 = !DILocalVariable(name: "coef0", scope: !14502, file: !1800, line: 2140, type: !1032)
!14521 = !DILocation(line: 2140, column: 15, scope: !14502)
!14522 = !DILocation(line: 2140, column: 23, scope: !14502)
!14523 = !DILocation(line: 2140, column: 28, scope: !14502)
!14524 = !DILocation(line: 2140, column: 34, scope: !14502)
!14525 = !DILocalVariable(name: "coef1", scope: !14502, file: !1800, line: 2140, type: !1032)
!14526 = !DILocation(line: 2140, column: 43, scope: !14502)
!14527 = !DILocation(line: 2140, column: 51, scope: !14502)
!14528 = !DILocation(line: 2140, column: 56, scope: !14502)
!14529 = !DILocation(line: 2140, column: 62, scope: !14502)
!14530 = !DILocalVariable(name: "offsets", scope: !14502, file: !1800, line: 2141, type: !1935)
!14531 = !DILocation(line: 2141, column: 21, scope: !14502)
!14532 = !DILocation(line: 2141, column: 31, scope: !14502)
!14533 = !DILocation(line: 2141, column: 36, scope: !14502)
!14534 = !DILocalVariable(name: "g", scope: !14502, file: !1800, line: 2142, type: !1012)
!14535 = !DILocation(line: 2142, column: 9, scope: !14502)
!14536 = !DILocalVariable(name: "group", scope: !14502, file: !1800, line: 2142, type: !1012)
!14537 = !DILocation(line: 2142, column: 12, scope: !14502)
!14538 = !DILocalVariable(name: "i", scope: !14502, file: !1800, line: 2142, type: !1012)
!14539 = !DILocation(line: 2142, column: 19, scope: !14502)
!14540 = !DILocalVariable(name: "idx", scope: !14502, file: !1800, line: 2142, type: !1012)
!14541 = !DILocation(line: 2142, column: 22, scope: !14502)
!14542 = !DILocalVariable(name: "c", scope: !14502, file: !1800, line: 2143, type: !1012)
!14543 = !DILocation(line: 2143, column: 9, scope: !14502)
!14544 = !DILocalVariable(name: "scale", scope: !14502, file: !1800, line: 2144, type: !1019)
!14545 = !DILocation(line: 2144, column: 14, scope: !14502)
!14546 = !DILocation(line: 2145, column: 12, scope: !14547)
!14547 = distinct !DILexicalBlock(scope: !14502, file: !1800, line: 2145, column: 5)
!14548 = !DILocation(line: 2145, column: 10, scope: !14547)
!14549 = !DILocation(line: 2145, column: 17, scope: !14550)
!14550 = !DILexicalBlockFile(scope: !14551, file: !1800, discriminator: 1)
!14551 = distinct !DILexicalBlock(scope: !14547, file: !1800, line: 2145, column: 5)
!14552 = !DILocation(line: 2145, column: 21, scope: !14550)
!14553 = !DILocation(line: 2145, column: 26, scope: !14550)
!14554 = !DILocation(line: 2145, column: 19, scope: !14550)
!14555 = !DILocation(line: 2145, column: 5, scope: !14550)
!14556 = !DILocation(line: 2146, column: 16, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !1800, line: 2146, column: 9)
!14558 = distinct !DILexicalBlock(scope: !14551, file: !1800, line: 2145, column: 50)
!14559 = !DILocation(line: 2146, column: 14, scope: !14557)
!14560 = !DILocation(line: 2146, column: 21, scope: !14561)
!14561 = !DILexicalBlockFile(scope: !14562, file: !1800, discriminator: 1)
!14562 = distinct !DILexicalBlock(scope: !14557, file: !1800, line: 2146, column: 9)
!14563 = !DILocation(line: 2146, column: 25, scope: !14561)
!14564 = !DILocation(line: 2146, column: 30, scope: !14561)
!14565 = !DILocation(line: 2146, column: 23, scope: !14561)
!14566 = !DILocation(line: 2146, column: 9, scope: !14561)
!14567 = !DILocation(line: 2147, column: 33, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14569, file: !1800, line: 2147, column: 17)
!14569 = distinct !DILexicalBlock(scope: !14562, file: !1800, line: 2146, column: 40)
!14570 = !DILocation(line: 2147, column: 17, scope: !14568)
!14571 = !DILocation(line: 2147, column: 23, scope: !14568)
!14572 = !DILocation(line: 2147, column: 38, scope: !14568)
!14573 = !DILocation(line: 2147, column: 54, scope: !14568)
!14574 = !DILocation(line: 2148, column: 33, scope: !14568)
!14575 = !DILocation(line: 2148, column: 17, scope: !14568)
!14576 = !DILocation(line: 2148, column: 23, scope: !14568)
!14577 = !DILocation(line: 2148, column: 38, scope: !14568)
!14578 = !DILocation(line: 2147, column: 17, scope: !14579)
!14579 = !DILexicalBlockFile(scope: !14569, file: !1800, discriminator: 1)
!14580 = !DILocalVariable(name: "bt_run_end", scope: !14581, file: !1800, line: 2149, type: !1162)
!14581 = distinct !DILexicalBlock(scope: !14568, file: !1800, line: 2148, column: 56)
!14582 = !DILocation(line: 2149, column: 27, scope: !14581)
!14583 = !DILocation(line: 2149, column: 64, scope: !14581)
!14584 = !DILocation(line: 2149, column: 40, scope: !14581)
!14585 = !DILocation(line: 2149, column: 46, scope: !14581)
!14586 = !DILocation(line: 2150, column: 17, scope: !14581)
!14587 = !DILocation(line: 2150, column: 24, scope: !14588)
!14588 = !DILexicalBlockFile(scope: !14589, file: !1800, discriminator: 1)
!14589 = distinct !DILexicalBlock(scope: !14590, file: !1800, line: 2150, column: 17)
!14590 = distinct !DILexicalBlock(scope: !14581, file: !1800, line: 2150, column: 17)
!14591 = !DILocation(line: 2150, column: 28, scope: !14588)
!14592 = !DILocation(line: 2150, column: 26, scope: !14588)
!14593 = !DILocation(line: 2150, column: 17, scope: !14588)
!14594 = !DILocation(line: 2151, column: 51, scope: !14595)
!14595 = distinct !DILexicalBlock(scope: !14589, file: !1800, line: 2150, column: 52)
!14596 = !DILocation(line: 2151, column: 35, scope: !14595)
!14597 = !DILocation(line: 2151, column: 41, scope: !14595)
!14598 = !DILocation(line: 2151, column: 56, scope: !14595)
!14599 = !DILocation(line: 2151, column: 32, scope: !14595)
!14600 = !DILocation(line: 2151, column: 28, scope: !14595)
!14601 = !DILocation(line: 2151, column: 23, scope: !14595)
!14602 = !DILocation(line: 2152, column: 25, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14595, file: !1800, line: 2152, column: 25)
!14604 = !DILocation(line: 2152, column: 25, scope: !14595)
!14605 = !DILocation(line: 2153, column: 51, scope: !14603)
!14606 = !DILocation(line: 2153, column: 38, scope: !14603)
!14607 = !DILocation(line: 2153, column: 43, scope: !14603)
!14608 = !DILocation(line: 2153, column: 36, scope: !14603)
!14609 = !DILocation(line: 2153, column: 32, scope: !14603)
!14610 = !DILocation(line: 2153, column: 27, scope: !14603)
!14611 = !DILocation(line: 2153, column: 25, scope: !14603)
!14612 = !DILocation(line: 2154, column: 29, scope: !14595)
!14613 = !DILocation(line: 2154, column: 42, scope: !14595)
!14614 = !DILocation(line: 2154, column: 33, scope: !14595)
!14615 = !DILocation(line: 2154, column: 39, scope: !14595)
!14616 = !DILocation(line: 2154, column: 31, scope: !14595)
!14617 = !DILocation(line: 2154, column: 27, scope: !14595)
!14618 = !DILocation(line: 2155, column: 32, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !14595, file: !1800, line: 2155, column: 21)
!14620 = !DILocation(line: 2155, column: 26, scope: !14619)
!14621 = !DILocation(line: 2155, column: 37, scope: !14622)
!14622 = !DILexicalBlockFile(scope: !14623, file: !1800, discriminator: 1)
!14623 = distinct !DILexicalBlock(scope: !14619, file: !1800, line: 2155, column: 21)
!14624 = !DILocation(line: 2155, column: 60, scope: !14622)
!14625 = !DILocation(line: 2155, column: 45, scope: !14622)
!14626 = !DILocation(line: 2155, column: 50, scope: !14622)
!14627 = !DILocation(line: 2155, column: 43, scope: !14622)
!14628 = !DILocation(line: 2155, column: 21, scope: !14622)
!14629 = !DILocation(line: 2157, column: 25, scope: !14623)
!14630 = !DILocation(line: 2157, column: 29, scope: !14623)
!14631 = !DILocation(line: 2157, column: 43, scope: !14623)
!14632 = !DILocation(line: 2157, column: 51, scope: !14623)
!14633 = !DILocation(line: 2157, column: 57, scope: !14623)
!14634 = !DILocation(line: 2157, column: 49, scope: !14623)
!14635 = !DILocation(line: 2157, column: 73, scope: !14623)
!14636 = !DILocation(line: 2157, column: 65, scope: !14623)
!14637 = !DILocation(line: 2157, column: 63, scope: !14623)
!14638 = !DILocation(line: 2158, column: 39, scope: !14623)
!14639 = !DILocation(line: 2158, column: 47, scope: !14623)
!14640 = !DILocation(line: 2158, column: 53, scope: !14623)
!14641 = !DILocation(line: 2158, column: 45, scope: !14623)
!14642 = !DILocation(line: 2158, column: 69, scope: !14623)
!14643 = !DILocation(line: 2158, column: 61, scope: !14623)
!14644 = !DILocation(line: 2158, column: 59, scope: !14623)
!14645 = !DILocation(line: 2159, column: 39, scope: !14623)
!14646 = !DILocation(line: 2161, column: 47, scope: !14623)
!14647 = !DILocation(line: 2161, column: 49, scope: !14623)
!14648 = !DILocation(line: 2161, column: 39, scope: !14623)
!14649 = !DILocation(line: 2161, column: 64, scope: !14623)
!14650 = !DILocation(line: 2161, column: 56, scope: !14623)
!14651 = !DILocation(line: 2161, column: 54, scope: !14623)
!14652 = !DILocation(line: 2161, column: 68, scope: !14623)
!14653 = !DILocation(line: 2161, column: 72, scope: !14623)
!14654 = !DILocation(line: 2155, column: 69, scope: !14655)
!14655 = !DILexicalBlockFile(scope: !14623, file: !1800, discriminator: 2)
!14656 = !DILocation(line: 2155, column: 21, scope: !14655)
!14657 = distinct !{!14657, !14658}
!14658 = !DILocation(line: 2155, column: 21, scope: !14595)
!14659 = !DILocation(line: 2168, column: 17, scope: !14595)
!14660 = !DILocation(line: 2150, column: 41, scope: !14661)
!14661 = !DILexicalBlockFile(scope: !14589, file: !1800, discriminator: 2)
!14662 = !DILocation(line: 2150, column: 48, scope: !14661)
!14663 = !DILocation(line: 2150, column: 17, scope: !14661)
!14664 = distinct !{!14664, !14586}
!14665 = !DILocation(line: 2169, column: 13, scope: !14581)
!14666 = !DILocalVariable(name: "bt_run_end", scope: !14667, file: !1800, line: 2170, type: !1012)
!14667 = distinct !DILexicalBlock(scope: !14568, file: !1800, line: 2169, column: 20)
!14668 = !DILocation(line: 2170, column: 21, scope: !14667)
!14669 = !DILocation(line: 2170, column: 58, scope: !14667)
!14670 = !DILocation(line: 2170, column: 34, scope: !14667)
!14671 = !DILocation(line: 2170, column: 40, scope: !14667)
!14672 = !DILocation(line: 2171, column: 24, scope: !14667)
!14673 = !DILocation(line: 2171, column: 37, scope: !14667)
!14674 = !DILocation(line: 2171, column: 35, scope: !14667)
!14675 = !DILocation(line: 2171, column: 21, scope: !14667)
!14676 = !DILocation(line: 2172, column: 21, scope: !14667)
!14677 = !DILocation(line: 2172, column: 19, scope: !14667)
!14678 = !DILocation(line: 2146, column: 9, scope: !14679)
!14679 = !DILexicalBlockFile(scope: !14562, file: !1800, discriminator: 2)
!14680 = distinct !{!14680, !14681}
!14681 = !DILocation(line: 2146, column: 9, scope: !14558)
!14682 = !DILocation(line: 2175, column: 33, scope: !14558)
!14683 = !DILocation(line: 2175, column: 18, scope: !14558)
!14684 = !DILocation(line: 2175, column: 23, scope: !14558)
!14685 = !DILocation(line: 2175, column: 36, scope: !14558)
!14686 = !DILocation(line: 2175, column: 15, scope: !14558)
!14687 = !DILocation(line: 2176, column: 33, scope: !14558)
!14688 = !DILocation(line: 2176, column: 18, scope: !14558)
!14689 = !DILocation(line: 2176, column: 23, scope: !14558)
!14690 = !DILocation(line: 2176, column: 36, scope: !14558)
!14691 = !DILocation(line: 2176, column: 15, scope: !14558)
!14692 = !DILocation(line: 2177, column: 5, scope: !14558)
!14693 = !DILocation(line: 2145, column: 46, scope: !14694)
!14694 = !DILexicalBlockFile(scope: !14551, file: !1800, discriminator: 2)
!14695 = !DILocation(line: 2145, column: 5, scope: !14694)
!14696 = distinct !{!14696, !14697}
!14697 = !DILocation(line: 2145, column: 5, scope: !14502)
!14698 = !DILocation(line: 2178, column: 1, scope: !14502)
!14699 = distinct !DISubprogram(name: "imdct_and_windowing_ld", scope: !1800, file: !1800, line: 2770, type: !2608, isLocal: true, isDefinition: true, scopeLine: 2771, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!14700 = !DILocalVariable(name: "ac", arg: 1, scope: !14699, file: !1800, line: 2770, type: !2071)
!14701 = !DILocation(line: 2770, column: 48, scope: !14699)
!14702 = !DILocalVariable(name: "sce", arg: 2, scope: !14699, file: !1800, line: 2770, type: !1906)
!14703 = !DILocation(line: 2770, column: 74, scope: !14699)
!14704 = !DILocalVariable(name: "ics", scope: !14699, file: !1800, line: 2772, type: !2616)
!14705 = !DILocation(line: 2772, column: 30, scope: !14699)
!14706 = !DILocation(line: 2772, column: 37, scope: !14699)
!14707 = !DILocation(line: 2772, column: 42, scope: !14699)
!14708 = !DILocalVariable(name: "in", scope: !14699, file: !1800, line: 2773, type: !1032)
!14709 = !DILocation(line: 2773, column: 15, scope: !14699)
!14710 = !DILocation(line: 2773, column: 20, scope: !14699)
!14711 = !DILocation(line: 2773, column: 25, scope: !14699)
!14712 = !DILocalVariable(name: "out", scope: !14699, file: !1800, line: 2774, type: !1032)
!14713 = !DILocation(line: 2774, column: 15, scope: !14699)
!14714 = !DILocation(line: 2774, column: 21, scope: !14699)
!14715 = !DILocation(line: 2774, column: 26, scope: !14699)
!14716 = !DILocalVariable(name: "saved", scope: !14699, file: !1800, line: 2775, type: !1032)
!14717 = !DILocation(line: 2775, column: 15, scope: !14699)
!14718 = !DILocation(line: 2775, column: 23, scope: !14699)
!14719 = !DILocation(line: 2775, column: 28, scope: !14699)
!14720 = !DILocalVariable(name: "buf", scope: !14699, file: !1800, line: 2776, type: !1032)
!14721 = !DILocation(line: 2776, column: 15, scope: !14699)
!14722 = !DILocation(line: 2776, column: 21, scope: !14699)
!14723 = !DILocation(line: 2776, column: 25, scope: !14699)
!14724 = !DILocalVariable(name: "i", scope: !14699, file: !1800, line: 2778, type: !1012)
!14725 = !DILocation(line: 2778, column: 9, scope: !14699)
!14726 = !DILocation(line: 2782, column: 5, scope: !14699)
!14727 = !DILocation(line: 2782, column: 9, scope: !14699)
!14728 = !DILocation(line: 2782, column: 14, scope: !14699)
!14729 = !DILocation(line: 2782, column: 26, scope: !14699)
!14730 = !DILocation(line: 2782, column: 30, scope: !14699)
!14731 = !DILocation(line: 2782, column: 39, scope: !14699)
!14732 = !DILocation(line: 2782, column: 44, scope: !14699)
!14733 = !DILocation(line: 2785, column: 12, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14699, file: !1800, line: 2785, column: 5)
!14735 = !DILocation(line: 2785, column: 10, scope: !14734)
!14736 = !DILocation(line: 2785, column: 17, scope: !14737)
!14737 = !DILexicalBlockFile(scope: !14738, file: !1800, discriminator: 1)
!14738 = distinct !DILexicalBlock(scope: !14734, file: !1800, line: 2785, column: 5)
!14739 = !DILocation(line: 2785, column: 19, scope: !14737)
!14740 = !DILocation(line: 2785, column: 5, scope: !14737)
!14741 = !DILocation(line: 2786, column: 23, scope: !14738)
!14742 = !DILocation(line: 2786, column: 19, scope: !14738)
!14743 = !DILocation(line: 2786, column: 26, scope: !14738)
!14744 = !DILocation(line: 2786, column: 31, scope: !14738)
!14745 = !DILocation(line: 2786, column: 13, scope: !14738)
!14746 = !DILocation(line: 2786, column: 9, scope: !14738)
!14747 = !DILocation(line: 2786, column: 16, scope: !14738)
!14748 = !DILocation(line: 2785, column: 28, scope: !14749)
!14749 = !DILexicalBlockFile(scope: !14738, file: !1800, discriminator: 2)
!14750 = !DILocation(line: 2785, column: 5, scope: !14749)
!14751 = distinct !{!14751, !14752}
!14752 = !DILocation(line: 2785, column: 5, scope: !14699)
!14753 = !DILocation(line: 2790, column: 9, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14699, file: !1800, line: 2790, column: 9)
!14755 = !DILocation(line: 2790, column: 14, scope: !14754)
!14756 = !DILocation(line: 2790, column: 9, scope: !14699)
!14757 = !DILocation(line: 2792, column: 16, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14754, file: !1800, line: 2790, column: 32)
!14759 = !DILocation(line: 2792, column: 9, scope: !14758)
!14760 = !DILocation(line: 2792, column: 21, scope: !14758)
!14761 = !DILocation(line: 2793, column: 9, scope: !14758)
!14762 = !DILocation(line: 2793, column: 13, scope: !14758)
!14763 = !DILocation(line: 2793, column: 19, scope: !14758)
!14764 = !DILocation(line: 2793, column: 38, scope: !14758)
!14765 = !DILocation(line: 2793, column: 42, scope: !14758)
!14766 = !DILocation(line: 2793, column: 49, scope: !14758)
!14767 = !DILocation(line: 2793, column: 55, scope: !14758)
!14768 = !DILocation(line: 2793, column: 62, scope: !14758)
!14769 = !DILocation(line: 2794, column: 17, scope: !14758)
!14770 = !DILocation(line: 2794, column: 21, scope: !14758)
!14771 = !DILocation(line: 2794, column: 9, scope: !14758)
!14772 = !DILocation(line: 2794, column: 28, scope: !14758)
!14773 = !DILocation(line: 2794, column: 32, scope: !14758)
!14774 = !DILocation(line: 2795, column: 5, scope: !14758)
!14775 = !DILocation(line: 2796, column: 9, scope: !14776)
!14776 = distinct !DILexicalBlock(scope: !14754, file: !1800, line: 2795, column: 12)
!14777 = !DILocation(line: 2796, column: 13, scope: !14776)
!14778 = !DILocation(line: 2796, column: 19, scope: !14776)
!14779 = !DILocation(line: 2796, column: 38, scope: !14776)
!14780 = !DILocation(line: 2796, column: 43, scope: !14776)
!14781 = !DILocation(line: 2796, column: 50, scope: !14776)
!14782 = !DILocation(line: 2800, column: 12, scope: !14699)
!14783 = !DILocation(line: 2800, column: 5, scope: !14699)
!14784 = !DILocation(line: 2800, column: 19, scope: !14699)
!14785 = !DILocation(line: 2800, column: 23, scope: !14699)
!14786 = !DILocation(line: 2801, column: 1, scope: !14699)
!14787 = distinct !DISubprogram(name: "imdct_and_windowing_eld", scope: !1800, file: !1800, line: 2803, type: !2608, isLocal: true, isDefinition: true, scopeLine: 2804, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!14788 = !DILocalVariable(name: "ac", arg: 1, scope: !14787, file: !1800, line: 2803, type: !2071)
!14789 = !DILocation(line: 2803, column: 49, scope: !14787)
!14790 = !DILocalVariable(name: "sce", arg: 2, scope: !14787, file: !1800, line: 2803, type: !1906)
!14791 = !DILocation(line: 2803, column: 75, scope: !14787)
!14792 = !DILocalVariable(name: "in", scope: !14787, file: !1800, line: 2805, type: !1032)
!14793 = !DILocation(line: 2805, column: 15, scope: !14787)
!14794 = !DILocation(line: 2805, column: 20, scope: !14787)
!14795 = !DILocation(line: 2805, column: 25, scope: !14787)
!14796 = !DILocalVariable(name: "out", scope: !14787, file: !1800, line: 2806, type: !1032)
!14797 = !DILocation(line: 2806, column: 15, scope: !14787)
!14798 = !DILocation(line: 2806, column: 21, scope: !14787)
!14799 = !DILocation(line: 2806, column: 26, scope: !14787)
!14800 = !DILocalVariable(name: "saved", scope: !14787, file: !1800, line: 2807, type: !1032)
!14801 = !DILocation(line: 2807, column: 15, scope: !14787)
!14802 = !DILocation(line: 2807, column: 23, scope: !14787)
!14803 = !DILocation(line: 2807, column: 28, scope: !14787)
!14804 = !DILocalVariable(name: "buf", scope: !14787, file: !1800, line: 2808, type: !1032)
!14805 = !DILocation(line: 2808, column: 15, scope: !14787)
!14806 = !DILocation(line: 2808, column: 21, scope: !14787)
!14807 = !DILocation(line: 2808, column: 25, scope: !14787)
!14808 = !DILocalVariable(name: "i", scope: !14787, file: !1800, line: 2809, type: !1012)
!14809 = !DILocation(line: 2809, column: 9, scope: !14787)
!14810 = !DILocalVariable(name: "n", scope: !14787, file: !1800, line: 2810, type: !1162)
!14811 = !DILocation(line: 2810, column: 15, scope: !14787)
!14812 = !DILocation(line: 2810, column: 19, scope: !14787)
!14813 = !DILocation(line: 2810, column: 23, scope: !14787)
!14814 = !DILocation(line: 2810, column: 29, scope: !14787)
!14815 = !DILocation(line: 2810, column: 34, scope: !14787)
!14816 = !DILocalVariable(name: "n2", scope: !14787, file: !1800, line: 2811, type: !1162)
!14817 = !DILocation(line: 2811, column: 15, scope: !14787)
!14818 = !DILocation(line: 2811, column: 20, scope: !14787)
!14819 = !DILocation(line: 2811, column: 22, scope: !14787)
!14820 = !DILocalVariable(name: "n4", scope: !14787, file: !1800, line: 2812, type: !1162)
!14821 = !DILocation(line: 2812, column: 15, scope: !14787)
!14822 = !DILocation(line: 2812, column: 20, scope: !14787)
!14823 = !DILocation(line: 2812, column: 22, scope: !14787)
!14824 = !DILocalVariable(name: "window", scope: !14787, file: !1800, line: 2813, type: !1894)
!14825 = !DILocation(line: 2813, column: 27, scope: !14787)
!14826 = !DILocation(line: 2813, column: 36, scope: !14787)
!14827 = !DILocation(line: 2813, column: 38, scope: !14787)
!14828 = !DILocation(line: 2821, column: 12, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14787, file: !1800, line: 2821, column: 5)
!14830 = !DILocation(line: 2821, column: 10, scope: !14829)
!14831 = !DILocation(line: 2821, column: 17, scope: !14832)
!14832 = !DILexicalBlockFile(scope: !14833, file: !1800, discriminator: 1)
!14833 = distinct !DILexicalBlock(scope: !14829, file: !1800, line: 2821, column: 5)
!14834 = !DILocation(line: 2821, column: 21, scope: !14832)
!14835 = !DILocation(line: 2821, column: 19, scope: !14832)
!14836 = !DILocation(line: 2821, column: 5, scope: !14832)
!14837 = !DILocalVariable(name: "temp", scope: !14838, file: !1800, line: 2822, type: !1019)
!14838 = distinct !DILexicalBlock(scope: !14833, file: !1800, line: 2821, column: 31)
!14839 = !DILocation(line: 2822, column: 18, scope: !14838)
!14840 = !DILocation(line: 2823, column: 19, scope: !14838)
!14841 = !DILocation(line: 2823, column: 16, scope: !14838)
!14842 = !DILocation(line: 2823, column: 14, scope: !14838)
!14843 = !DILocation(line: 2823, column: 37, scope: !14838)
!14844 = !DILocation(line: 2823, column: 39, scope: !14838)
!14845 = !DILocation(line: 2823, column: 45, scope: !14838)
!14846 = !DILocation(line: 2823, column: 43, scope: !14838)
!14847 = !DILocation(line: 2823, column: 34, scope: !14838)
!14848 = !DILocation(line: 2823, column: 33, scope: !14838)
!14849 = !DILocation(line: 2823, column: 27, scope: !14838)
!14850 = !DILocation(line: 2823, column: 24, scope: !14838)
!14851 = !DILocation(line: 2823, column: 31, scope: !14838)
!14852 = !DILocation(line: 2823, column: 65, scope: !14838)
!14853 = !DILocation(line: 2823, column: 52, scope: !14838)
!14854 = !DILocation(line: 2823, column: 54, scope: !14838)
!14855 = !DILocation(line: 2823, column: 60, scope: !14838)
!14856 = !DILocation(line: 2823, column: 58, scope: !14838)
!14857 = !DILocation(line: 2823, column: 49, scope: !14838)
!14858 = !DILocation(line: 2823, column: 63, scope: !14838)
!14859 = !DILocation(line: 2824, column: 20, scope: !14838)
!14860 = !DILocation(line: 2824, column: 22, scope: !14838)
!14861 = !DILocation(line: 2824, column: 17, scope: !14838)
!14862 = !DILocation(line: 2824, column: 16, scope: !14838)
!14863 = !DILocation(line: 2824, column: 14, scope: !14838)
!14864 = !DILocation(line: 2824, column: 43, scope: !14838)
!14865 = !DILocation(line: 2824, column: 45, scope: !14838)
!14866 = !DILocation(line: 2824, column: 51, scope: !14838)
!14867 = !DILocation(line: 2824, column: 49, scope: !14838)
!14868 = !DILocation(line: 2824, column: 40, scope: !14838)
!14869 = !DILocation(line: 2824, column: 31, scope: !14838)
!14870 = !DILocation(line: 2824, column: 33, scope: !14838)
!14871 = !DILocation(line: 2824, column: 28, scope: !14838)
!14872 = !DILocation(line: 2824, column: 38, scope: !14838)
!14873 = !DILocation(line: 2824, column: 71, scope: !14838)
!14874 = !DILocation(line: 2824, column: 58, scope: !14838)
!14875 = !DILocation(line: 2824, column: 60, scope: !14838)
!14876 = !DILocation(line: 2824, column: 66, scope: !14838)
!14877 = !DILocation(line: 2824, column: 64, scope: !14838)
!14878 = !DILocation(line: 2824, column: 55, scope: !14838)
!14879 = !DILocation(line: 2824, column: 69, scope: !14838)
!14880 = !DILocation(line: 2825, column: 5, scope: !14838)
!14881 = !DILocation(line: 2821, column: 26, scope: !14882)
!14882 = !DILexicalBlockFile(scope: !14833, file: !1800, discriminator: 2)
!14883 = !DILocation(line: 2821, column: 5, scope: !14882)
!14884 = distinct !{!14884, !14885}
!14885 = !DILocation(line: 2821, column: 5, scope: !14787)
!14886 = !DILocation(line: 2831, column: 9, scope: !14787)
!14887 = !DILocation(line: 2831, column: 13, scope: !14787)
!14888 = !DILocation(line: 2831, column: 18, scope: !14787)
!14889 = !DILocation(line: 2831, column: 30, scope: !14787)
!14890 = !DILocation(line: 2831, column: 34, scope: !14787)
!14891 = !DILocation(line: 2831, column: 43, scope: !14787)
!14892 = !DILocation(line: 2831, column: 48, scope: !14787)
!14893 = !DILocation(line: 2834, column: 12, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14787, file: !1800, line: 2834, column: 5)
!14895 = !DILocation(line: 2834, column: 10, scope: !14894)
!14896 = !DILocation(line: 2834, column: 17, scope: !14897)
!14897 = !DILexicalBlockFile(scope: !14898, file: !1800, discriminator: 1)
!14898 = distinct !DILexicalBlock(scope: !14894, file: !1800, line: 2834, column: 5)
!14899 = !DILocation(line: 2834, column: 19, scope: !14897)
!14900 = !DILocation(line: 2834, column: 5, scope: !14897)
!14901 = !DILocation(line: 2835, column: 21, scope: !14898)
!14902 = !DILocation(line: 2835, column: 17, scope: !14898)
!14903 = !DILocation(line: 2835, column: 24, scope: !14898)
!14904 = !DILocation(line: 2835, column: 29, scope: !14898)
!14905 = !DILocation(line: 2835, column: 11, scope: !14898)
!14906 = !DILocation(line: 2835, column: 7, scope: !14898)
!14907 = !DILocation(line: 2835, column: 14, scope: !14898)
!14908 = !DILocation(line: 2834, column: 28, scope: !14909)
!14909 = !DILexicalBlockFile(scope: !14898, file: !1800, discriminator: 2)
!14910 = !DILocation(line: 2834, column: 5, scope: !14909)
!14911 = distinct !{!14911, !14912}
!14912 = !DILocation(line: 2834, column: 5, scope: !14787)
!14913 = !DILocation(line: 2838, column: 12, scope: !14914)
!14914 = distinct !DILexicalBlock(scope: !14787, file: !1800, line: 2838, column: 5)
!14915 = !DILocation(line: 2838, column: 10, scope: !14914)
!14916 = !DILocation(line: 2838, column: 17, scope: !14917)
!14917 = !DILexicalBlockFile(scope: !14918, file: !1800, discriminator: 1)
!14918 = distinct !DILexicalBlock(scope: !14914, file: !1800, line: 2838, column: 5)
!14919 = !DILocation(line: 2838, column: 21, scope: !14917)
!14920 = !DILocation(line: 2838, column: 19, scope: !14917)
!14921 = !DILocation(line: 2838, column: 5, scope: !14917)
!14922 = !DILocation(line: 2839, column: 23, scope: !14923)
!14923 = distinct !DILexicalBlock(scope: !14918, file: !1800, line: 2838, column: 30)
!14924 = !DILocation(line: 2839, column: 19, scope: !14923)
!14925 = !DILocation(line: 2839, column: 18, scope: !14923)
!14926 = !DILocation(line: 2839, column: 13, scope: !14923)
!14927 = !DILocation(line: 2839, column: 9, scope: !14923)
!14928 = !DILocation(line: 2839, column: 16, scope: !14923)
!14929 = !DILocation(line: 2840, column: 5, scope: !14923)
!14930 = !DILocation(line: 2838, column: 25, scope: !14931)
!14931 = !DILexicalBlockFile(scope: !14918, file: !1800, discriminator: 2)
!14932 = !DILocation(line: 2838, column: 5, scope: !14931)
!14933 = distinct !{!14933, !14934}
!14934 = !DILocation(line: 2838, column: 5, scope: !14787)
!14935 = !DILocation(line: 2848, column: 14, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14787, file: !1800, line: 2848, column: 5)
!14937 = !DILocation(line: 2848, column: 12, scope: !14936)
!14938 = !DILocation(line: 2848, column: 10, scope: !14936)
!14939 = !DILocation(line: 2848, column: 18, scope: !14940)
!14940 = !DILexicalBlockFile(scope: !14941, file: !1800, discriminator: 1)
!14941 = distinct !DILexicalBlock(scope: !14936, file: !1800, line: 2848, column: 5)
!14942 = !DILocation(line: 2848, column: 22, scope: !14940)
!14943 = !DILocation(line: 2848, column: 20, scope: !14940)
!14944 = !DILocation(line: 2848, column: 5, scope: !14940)
!14945 = !DILocation(line: 2849, column: 45, scope: !14946)
!14946 = distinct !DILexicalBlock(scope: !14941, file: !1800, line: 2848, column: 32)
!14947 = !DILocation(line: 2849, column: 48, scope: !14946)
!14948 = !DILocation(line: 2849, column: 54, scope: !14946)
!14949 = !DILocation(line: 2849, column: 52, scope: !14946)
!14950 = !DILocation(line: 2849, column: 40, scope: !14946)
!14951 = !DILocation(line: 2849, column: 30, scope: !14946)
!14952 = !DILocation(line: 2849, column: 68, scope: !14946)
!14953 = !DILocation(line: 2849, column: 72, scope: !14946)
!14954 = !DILocation(line: 2849, column: 70, scope: !14946)
!14955 = !DILocation(line: 2849, column: 61, scope: !14946)
!14956 = !DILocation(line: 2849, column: 60, scope: !14946)
!14957 = !DILocation(line: 2849, column: 58, scope: !14946)
!14958 = !DILocation(line: 2849, column: 77, scope: !14946)
!14959 = !DILocation(line: 2849, column: 91, scope: !14946)
!14960 = !DILocation(line: 2849, column: 23, scope: !14946)
!14961 = !DILocation(line: 2850, column: 47, scope: !14946)
!14962 = !DILocation(line: 2850, column: 51, scope: !14946)
!14963 = !DILocation(line: 2850, column: 49, scope: !14946)
!14964 = !DILocation(line: 2850, column: 40, scope: !14946)
!14965 = !DILocation(line: 2850, column: 30, scope: !14946)
!14966 = !DILocation(line: 2850, column: 66, scope: !14946)
!14967 = !DILocation(line: 2850, column: 70, scope: !14946)
!14968 = !DILocation(line: 2850, column: 68, scope: !14946)
!14969 = !DILocation(line: 2850, column: 74, scope: !14946)
!14970 = !DILocation(line: 2850, column: 72, scope: !14946)
!14971 = !DILocation(line: 2850, column: 59, scope: !14946)
!14972 = !DILocation(line: 2850, column: 58, scope: !14946)
!14973 = !DILocation(line: 2850, column: 56, scope: !14946)
!14974 = !DILocation(line: 2850, column: 79, scope: !14946)
!14975 = !DILocation(line: 2850, column: 93, scope: !14946)
!14976 = !DILocation(line: 2850, column: 23, scope: !14946)
!14977 = !DILocation(line: 2849, column: 98, scope: !14946)
!14978 = !DILocation(line: 2851, column: 47, scope: !14946)
!14979 = !DILocation(line: 2851, column: 51, scope: !14946)
!14980 = !DILocation(line: 2851, column: 49, scope: !14946)
!14981 = !DILocation(line: 2851, column: 54, scope: !14946)
!14982 = !DILocation(line: 2851, column: 60, scope: !14946)
!14983 = !DILocation(line: 2851, column: 58, scope: !14946)
!14984 = !DILocation(line: 2851, column: 41, scope: !14946)
!14985 = !DILocation(line: 2851, column: 40, scope: !14946)
!14986 = !DILocation(line: 2851, column: 30, scope: !14946)
!14987 = !DILocation(line: 2851, column: 74, scope: !14946)
!14988 = !DILocation(line: 2851, column: 80, scope: !14946)
!14989 = !DILocation(line: 2851, column: 79, scope: !14946)
!14990 = !DILocation(line: 2851, column: 76, scope: !14946)
!14991 = !DILocation(line: 2851, column: 84, scope: !14946)
!14992 = !DILocation(line: 2851, column: 82, scope: !14946)
!14993 = !DILocation(line: 2851, column: 67, scope: !14946)
!14994 = !DILocation(line: 2851, column: 66, scope: !14946)
!14995 = !DILocation(line: 2851, column: 64, scope: !14946)
!14996 = !DILocation(line: 2851, column: 89, scope: !14946)
!14997 = !DILocation(line: 2851, column: 103, scope: !14946)
!14998 = !DILocation(line: 2851, column: 23, scope: !14946)
!14999 = !DILocation(line: 2850, column: 100, scope: !14946)
!15000 = !DILocation(line: 2852, column: 50, scope: !14946)
!15001 = !DILocation(line: 2852, column: 49, scope: !14946)
!15002 = !DILocation(line: 2852, column: 54, scope: !14946)
!15003 = !DILocation(line: 2852, column: 52, scope: !14946)
!15004 = !DILocation(line: 2852, column: 59, scope: !14946)
!15005 = !DILocation(line: 2852, column: 57, scope: !14946)
!15006 = !DILocation(line: 2852, column: 41, scope: !14946)
!15007 = !DILocation(line: 2852, column: 40, scope: !14946)
!15008 = !DILocation(line: 2852, column: 30, scope: !14946)
!15009 = !DILocation(line: 2852, column: 73, scope: !14946)
!15010 = !DILocation(line: 2852, column: 79, scope: !14946)
!15011 = !DILocation(line: 2852, column: 78, scope: !14946)
!15012 = !DILocation(line: 2852, column: 75, scope: !14946)
!15013 = !DILocation(line: 2852, column: 83, scope: !14946)
!15014 = !DILocation(line: 2852, column: 81, scope: !14946)
!15015 = !DILocation(line: 2852, column: 66, scope: !14946)
!15016 = !DILocation(line: 2852, column: 65, scope: !14946)
!15017 = !DILocation(line: 2852, column: 63, scope: !14946)
!15018 = !DILocation(line: 2852, column: 88, scope: !14946)
!15019 = !DILocation(line: 2852, column: 102, scope: !14946)
!15020 = !DILocation(line: 2852, column: 23, scope: !14946)
!15021 = !DILocation(line: 2851, column: 110, scope: !14946)
!15022 = !DILocation(line: 2849, column: 13, scope: !14946)
!15023 = !DILocation(line: 2849, column: 17, scope: !14946)
!15024 = !DILocation(line: 2849, column: 15, scope: !14946)
!15025 = !DILocation(line: 2849, column: 9, scope: !14946)
!15026 = !DILocation(line: 2849, column: 21, scope: !14946)
!15027 = !DILocation(line: 2853, column: 5, scope: !14946)
!15028 = !DILocation(line: 2848, column: 28, scope: !15029)
!15029 = !DILexicalBlockFile(scope: !14941, file: !1800, discriminator: 2)
!15030 = !DILocation(line: 2848, column: 5, scope: !15029)
!15031 = distinct !{!15031, !15032}
!15032 = !DILocation(line: 2848, column: 5, scope: !14787)
!15033 = !DILocation(line: 2854, column: 12, scope: !15034)
!15034 = distinct !DILexicalBlock(scope: !14787, file: !1800, line: 2854, column: 5)
!15035 = !DILocation(line: 2854, column: 10, scope: !15034)
!15036 = !DILocation(line: 2854, column: 17, scope: !15037)
!15037 = !DILexicalBlockFile(scope: !15038, file: !1800, discriminator: 1)
!15038 = distinct !DILexicalBlock(scope: !15034, file: !1800, line: 2854, column: 5)
!15039 = !DILocation(line: 2854, column: 21, scope: !15037)
!15040 = !DILocation(line: 2854, column: 19, scope: !15037)
!15041 = !DILocation(line: 2854, column: 5, scope: !15037)
!15042 = !DILocation(line: 2855, column: 45, scope: !15043)
!15043 = distinct !DILexicalBlock(scope: !15038, file: !1800, line: 2854, column: 31)
!15044 = !DILocation(line: 2855, column: 40, scope: !15043)
!15045 = !DILocation(line: 2855, column: 30, scope: !15043)
!15046 = !DILocation(line: 2855, column: 59, scope: !15043)
!15047 = !DILocation(line: 2855, column: 63, scope: !15043)
!15048 = !DILocation(line: 2855, column: 61, scope: !15043)
!15049 = !DILocation(line: 2855, column: 68, scope: !15043)
!15050 = !DILocation(line: 2855, column: 66, scope: !15043)
!15051 = !DILocation(line: 2855, column: 52, scope: !15043)
!15052 = !DILocation(line: 2855, column: 51, scope: !15043)
!15053 = !DILocation(line: 2855, column: 49, scope: !15043)
!15054 = !DILocation(line: 2855, column: 73, scope: !15043)
!15055 = !DILocation(line: 2855, column: 87, scope: !15043)
!15056 = !DILocation(line: 2855, column: 23, scope: !15043)
!15057 = !DILocation(line: 2856, column: 48, scope: !15043)
!15058 = !DILocation(line: 2856, column: 50, scope: !15043)
!15059 = !DILocation(line: 2856, column: 56, scope: !15043)
!15060 = !DILocation(line: 2856, column: 54, scope: !15043)
!15061 = !DILocation(line: 2856, column: 41, scope: !15043)
!15062 = !DILocation(line: 2856, column: 40, scope: !15043)
!15063 = !DILocation(line: 2856, column: 30, scope: !15043)
!15064 = !DILocation(line: 2856, column: 70, scope: !15043)
!15065 = !DILocation(line: 2856, column: 74, scope: !15043)
!15066 = !DILocation(line: 2856, column: 72, scope: !15043)
!15067 = !DILocation(line: 2856, column: 79, scope: !15043)
!15068 = !DILocation(line: 2856, column: 77, scope: !15043)
!15069 = !DILocation(line: 2856, column: 83, scope: !15043)
!15070 = !DILocation(line: 2856, column: 81, scope: !15043)
!15071 = !DILocation(line: 2856, column: 63, scope: !15043)
!15072 = !DILocation(line: 2856, column: 62, scope: !15043)
!15073 = !DILocation(line: 2856, column: 60, scope: !15043)
!15074 = !DILocation(line: 2856, column: 88, scope: !15043)
!15075 = !DILocation(line: 2856, column: 102, scope: !15043)
!15076 = !DILocation(line: 2856, column: 23, scope: !15043)
!15077 = !DILocation(line: 2855, column: 94, scope: !15043)
!15078 = !DILocation(line: 2857, column: 48, scope: !15043)
!15079 = !DILocation(line: 2857, column: 52, scope: !15043)
!15080 = !DILocation(line: 2857, column: 50, scope: !15043)
!15081 = !DILocation(line: 2857, column: 41, scope: !15043)
!15082 = !DILocation(line: 2857, column: 40, scope: !15043)
!15083 = !DILocation(line: 2857, column: 30, scope: !15043)
!15084 = !DILocation(line: 2857, column: 66, scope: !15043)
!15085 = !DILocation(line: 2857, column: 70, scope: !15043)
!15086 = !DILocation(line: 2857, column: 68, scope: !15043)
!15087 = !DILocation(line: 2857, column: 77, scope: !15043)
!15088 = !DILocation(line: 2857, column: 76, scope: !15043)
!15089 = !DILocation(line: 2857, column: 73, scope: !15043)
!15090 = !DILocation(line: 2857, column: 81, scope: !15043)
!15091 = !DILocation(line: 2857, column: 79, scope: !15043)
!15092 = !DILocation(line: 2857, column: 59, scope: !15043)
!15093 = !DILocation(line: 2857, column: 58, scope: !15043)
!15094 = !DILocation(line: 2857, column: 56, scope: !15043)
!15095 = !DILocation(line: 2857, column: 86, scope: !15043)
!15096 = !DILocation(line: 2857, column: 100, scope: !15043)
!15097 = !DILocation(line: 2857, column: 23, scope: !15043)
!15098 = !DILocation(line: 2856, column: 109, scope: !15043)
!15099 = !DILocation(line: 2858, column: 48, scope: !15043)
!15100 = !DILocation(line: 2858, column: 47, scope: !15043)
!15101 = !DILocation(line: 2858, column: 52, scope: !15043)
!15102 = !DILocation(line: 2858, column: 50, scope: !15043)
!15103 = !DILocation(line: 2858, column: 54, scope: !15043)
!15104 = !DILocation(line: 2858, column: 60, scope: !15043)
!15105 = !DILocation(line: 2858, column: 58, scope: !15043)
!15106 = !DILocation(line: 2858, column: 40, scope: !15043)
!15107 = !DILocation(line: 2858, column: 30, scope: !15043)
!15108 = !DILocation(line: 2858, column: 74, scope: !15043)
!15109 = !DILocation(line: 2858, column: 78, scope: !15043)
!15110 = !DILocation(line: 2858, column: 76, scope: !15043)
!15111 = !DILocation(line: 2858, column: 85, scope: !15043)
!15112 = !DILocation(line: 2858, column: 84, scope: !15043)
!15113 = !DILocation(line: 2858, column: 81, scope: !15043)
!15114 = !DILocation(line: 2858, column: 89, scope: !15043)
!15115 = !DILocation(line: 2858, column: 87, scope: !15043)
!15116 = !DILocation(line: 2858, column: 67, scope: !15043)
!15117 = !DILocation(line: 2858, column: 66, scope: !15043)
!15118 = !DILocation(line: 2858, column: 64, scope: !15043)
!15119 = !DILocation(line: 2858, column: 94, scope: !15043)
!15120 = !DILocation(line: 2858, column: 108, scope: !15043)
!15121 = !DILocation(line: 2858, column: 23, scope: !15043)
!15122 = !DILocation(line: 2857, column: 107, scope: !15043)
!15123 = !DILocation(line: 2855, column: 13, scope: !15043)
!15124 = !DILocation(line: 2855, column: 18, scope: !15043)
!15125 = !DILocation(line: 2855, column: 16, scope: !15043)
!15126 = !DILocation(line: 2855, column: 9, scope: !15043)
!15127 = !DILocation(line: 2855, column: 21, scope: !15043)
!15128 = !DILocation(line: 2859, column: 5, scope: !15043)
!15129 = !DILocation(line: 2854, column: 27, scope: !15130)
!15130 = !DILexicalBlockFile(scope: !15038, file: !1800, discriminator: 2)
!15131 = !DILocation(line: 2854, column: 5, scope: !15130)
!15132 = distinct !{!15132, !15133}
!15133 = !DILocation(line: 2854, column: 5, scope: !14787)
!15134 = !DILocation(line: 2860, column: 12, scope: !15135)
!15135 = distinct !DILexicalBlock(scope: !14787, file: !1800, line: 2860, column: 5)
!15136 = !DILocation(line: 2860, column: 10, scope: !15135)
!15137 = !DILocation(line: 2860, column: 17, scope: !15138)
!15138 = !DILexicalBlockFile(scope: !15139, file: !1800, discriminator: 1)
!15139 = distinct !DILexicalBlock(scope: !15135, file: !1800, line: 2860, column: 5)
!15140 = !DILocation(line: 2860, column: 21, scope: !15138)
!15141 = !DILocation(line: 2860, column: 19, scope: !15138)
!15142 = !DILocation(line: 2860, column: 5, scope: !15138)
!15143 = !DILocation(line: 2861, column: 50, scope: !15144)
!15144 = distinct !DILexicalBlock(scope: !15139, file: !1800, line: 2860, column: 31)
!15145 = !DILocation(line: 2861, column: 54, scope: !15144)
!15146 = !DILocation(line: 2861, column: 52, scope: !15144)
!15147 = !DILocation(line: 2861, column: 45, scope: !15144)
!15148 = !DILocation(line: 2861, column: 35, scope: !15144)
!15149 = !DILocation(line: 2861, column: 69, scope: !15144)
!15150 = !DILocation(line: 2861, column: 73, scope: !15144)
!15151 = !DILocation(line: 2861, column: 71, scope: !15144)
!15152 = !DILocation(line: 2861, column: 77, scope: !15144)
!15153 = !DILocation(line: 2861, column: 75, scope: !15144)
!15154 = !DILocation(line: 2861, column: 62, scope: !15144)
!15155 = !DILocation(line: 2861, column: 61, scope: !15144)
!15156 = !DILocation(line: 2861, column: 59, scope: !15144)
!15157 = !DILocation(line: 2861, column: 82, scope: !15144)
!15158 = !DILocation(line: 2861, column: 96, scope: !15144)
!15159 = !DILocation(line: 2861, column: 28, scope: !15144)
!15160 = !DILocation(line: 2862, column: 52, scope: !15144)
!15161 = !DILocation(line: 2862, column: 55, scope: !15144)
!15162 = !DILocation(line: 2862, column: 61, scope: !15144)
!15163 = !DILocation(line: 2862, column: 59, scope: !15144)
!15164 = !DILocation(line: 2862, column: 46, scope: !15144)
!15165 = !DILocation(line: 2862, column: 45, scope: !15144)
!15166 = !DILocation(line: 2862, column: 35, scope: !15144)
!15167 = !DILocation(line: 2862, column: 75, scope: !15144)
!15168 = !DILocation(line: 2862, column: 81, scope: !15144)
!15169 = !DILocation(line: 2862, column: 80, scope: !15144)
!15170 = !DILocation(line: 2862, column: 77, scope: !15144)
!15171 = !DILocation(line: 2862, column: 85, scope: !15144)
!15172 = !DILocation(line: 2862, column: 83, scope: !15144)
!15173 = !DILocation(line: 2862, column: 68, scope: !15144)
!15174 = !DILocation(line: 2862, column: 67, scope: !15144)
!15175 = !DILocation(line: 2862, column: 65, scope: !15144)
!15176 = !DILocation(line: 2862, column: 90, scope: !15144)
!15177 = !DILocation(line: 2862, column: 104, scope: !15144)
!15178 = !DILocation(line: 2862, column: 28, scope: !15144)
!15179 = !DILocation(line: 2861, column: 103, scope: !15144)
!15180 = !DILocation(line: 2863, column: 52, scope: !15144)
!15181 = !DILocation(line: 2863, column: 56, scope: !15144)
!15182 = !DILocation(line: 2863, column: 54, scope: !15144)
!15183 = !DILocation(line: 2863, column: 61, scope: !15144)
!15184 = !DILocation(line: 2863, column: 59, scope: !15144)
!15185 = !DILocation(line: 2863, column: 46, scope: !15144)
!15186 = !DILocation(line: 2863, column: 45, scope: !15144)
!15187 = !DILocation(line: 2863, column: 35, scope: !15144)
!15188 = !DILocation(line: 2863, column: 75, scope: !15144)
!15189 = !DILocation(line: 2863, column: 81, scope: !15144)
!15190 = !DILocation(line: 2863, column: 80, scope: !15144)
!15191 = !DILocation(line: 2863, column: 77, scope: !15144)
!15192 = !DILocation(line: 2863, column: 85, scope: !15144)
!15193 = !DILocation(line: 2863, column: 83, scope: !15144)
!15194 = !DILocation(line: 2863, column: 68, scope: !15144)
!15195 = !DILocation(line: 2863, column: 67, scope: !15144)
!15196 = !DILocation(line: 2863, column: 65, scope: !15144)
!15197 = !DILocation(line: 2863, column: 90, scope: !15144)
!15198 = !DILocation(line: 2863, column: 104, scope: !15144)
!15199 = !DILocation(line: 2863, column: 28, scope: !15144)
!15200 = !DILocation(line: 2862, column: 111, scope: !15144)
!15201 = !DILocation(line: 2861, column: 13, scope: !15144)
!15202 = !DILocation(line: 2861, column: 18, scope: !15144)
!15203 = !DILocation(line: 2861, column: 16, scope: !15144)
!15204 = !DILocation(line: 2861, column: 23, scope: !15144)
!15205 = !DILocation(line: 2861, column: 21, scope: !15144)
!15206 = !DILocation(line: 2861, column: 9, scope: !15144)
!15207 = !DILocation(line: 2861, column: 26, scope: !15144)
!15208 = !DILocation(line: 2864, column: 5, scope: !15144)
!15209 = !DILocation(line: 2860, column: 27, scope: !15210)
!15210 = !DILexicalBlockFile(scope: !15139, file: !1800, discriminator: 2)
!15211 = !DILocation(line: 2860, column: 5, scope: !15210)
!15212 = distinct !{!15212, !15213}
!15213 = !DILocation(line: 2860, column: 5, scope: !14787)
!15214 = !DILocation(line: 2867, column: 13, scope: !14787)
!15215 = !DILocation(line: 2867, column: 21, scope: !14787)
!15216 = !DILocation(line: 2867, column: 19, scope: !14787)
!15217 = !DILocation(line: 2867, column: 5, scope: !14787)
!15218 = !DILocation(line: 2867, column: 24, scope: !14787)
!15219 = !DILocation(line: 2867, column: 35, scope: !14787)
!15220 = !DILocation(line: 2867, column: 33, scope: !14787)
!15221 = !DILocation(line: 2867, column: 31, scope: !14787)
!15222 = !DILocation(line: 2867, column: 37, scope: !14787)
!15223 = !DILocation(line: 2868, column: 13, scope: !14787)
!15224 = !DILocation(line: 2868, column: 5, scope: !14787)
!15225 = !DILocation(line: 2868, column: 20, scope: !14787)
!15226 = !DILocation(line: 2868, column: 25, scope: !14787)
!15227 = !DILocation(line: 2868, column: 27, scope: !14787)
!15228 = !DILocation(line: 2869, column: 1, scope: !14787)
!15229 = distinct !DISubprogram(name: "imdct_and_windowing_960", scope: !1800, file: !1800, line: 2707, type: !2608, isLocal: true, isDefinition: true, scopeLine: 2708, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!15230 = !DILocalVariable(name: "ac", arg: 1, scope: !15229, file: !1800, line: 2707, type: !2071)
!15231 = !DILocation(line: 2707, column: 49, scope: !15229)
!15232 = !DILocalVariable(name: "sce", arg: 2, scope: !15229, file: !1800, line: 2707, type: !1906)
!15233 = !DILocation(line: 2707, column: 75, scope: !15229)
!15234 = !DILocation(line: 2769, column: 1, scope: !15229)
!15235 = distinct !DISubprogram(name: "apply_channel_coupling", scope: !1800, file: !1800, line: 2876, type: !15236, isLocal: true, isDefinition: true, scopeLine: 2880, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!15236 = !DISubroutineType(types: !15237)
!15237 = !{null, !2071, !2101, !930, !1012, !925, !15238}
!15238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15239, size: 64, align: 64)
!15239 = !DISubroutineType(types: !15240)
!15240 = !{null, !2071, !1906, !2101, !1012}
!15241 = !DILocalVariable(name: "ac", arg: 1, scope: !15235, file: !1800, line: 2876, type: !2071)
!15242 = !DILocation(line: 2876, column: 48, scope: !15235)
!15243 = !DILocalVariable(name: "cc", arg: 2, scope: !15235, file: !1800, line: 2876, type: !2101)
!15244 = !DILocation(line: 2876, column: 68, scope: !15235)
!15245 = !DILocalVariable(name: "type", arg: 3, scope: !15235, file: !1800, line: 2877, type: !930)
!15246 = !DILocation(line: 2877, column: 58, scope: !15235)
!15247 = !DILocalVariable(name: "elem_id", arg: 4, scope: !15235, file: !1800, line: 2877, type: !1012)
!15248 = !DILocation(line: 2877, column: 68, scope: !15235)
!15249 = !DILocalVariable(name: "coupling_point", arg: 5, scope: !15235, file: !1800, line: 2878, type: !925)
!15250 = !DILocation(line: 2878, column: 55, scope: !15235)
!15251 = !DILocalVariable(name: "apply_coupling_method", arg: 6, scope: !15235, file: !1800, line: 2879, type: !15238)
!15252 = !DILocation(line: 2879, column: 43, scope: !15235)
!15253 = !DILocalVariable(name: "i", scope: !15235, file: !1800, line: 2881, type: !1012)
!15254 = !DILocation(line: 2881, column: 9, scope: !15235)
!15255 = !DILocalVariable(name: "c", scope: !15235, file: !1800, line: 2881, type: !1012)
!15256 = !DILocation(line: 2881, column: 12, scope: !15235)
!15257 = !DILocation(line: 2883, column: 12, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15235, file: !1800, line: 2883, column: 5)
!15259 = !DILocation(line: 2883, column: 10, scope: !15258)
!15260 = !DILocation(line: 2883, column: 17, scope: !15261)
!15261 = !DILexicalBlockFile(scope: !15262, file: !1800, discriminator: 1)
!15262 = distinct !DILexicalBlock(scope: !15258, file: !1800, line: 2883, column: 5)
!15263 = !DILocation(line: 2883, column: 19, scope: !15261)
!15264 = !DILocation(line: 2883, column: 5, scope: !15261)
!15265 = !DILocalVariable(name: "cce", scope: !15266, file: !1800, line: 2884, type: !2101)
!15266 = distinct !DILexicalBlock(scope: !15262, file: !1800, line: 2883, column: 30)
!15267 = !DILocation(line: 2884, column: 25, scope: !15266)
!15268 = !DILocation(line: 2884, column: 49, scope: !15266)
!15269 = !DILocation(line: 2884, column: 31, scope: !15266)
!15270 = !DILocation(line: 2884, column: 35, scope: !15266)
!15271 = !DILocalVariable(name: "index", scope: !15266, file: !1800, line: 2885, type: !1012)
!15272 = !DILocation(line: 2885, column: 13, scope: !15266)
!15273 = !DILocation(line: 2887, column: 13, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15266, file: !1800, line: 2887, column: 13)
!15275 = !DILocation(line: 2887, column: 17, scope: !15274)
!15276 = !DILocation(line: 2887, column: 20, scope: !15277)
!15277 = !DILexicalBlockFile(scope: !15274, file: !1800, discriminator: 1)
!15278 = !DILocation(line: 2887, column: 25, scope: !15277)
!15279 = !DILocation(line: 2887, column: 30, scope: !15277)
!15280 = !DILocation(line: 2887, column: 48, scope: !15277)
!15281 = !DILocation(line: 2887, column: 45, scope: !15277)
!15282 = !DILocation(line: 2887, column: 13, scope: !15277)
!15283 = !DILocalVariable(name: "coup", scope: !15284, file: !1800, line: 2888, type: !15285)
!15284 = distinct !DILexicalBlock(scope: !15274, file: !1800, line: 2887, column: 64)
!15285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64, align: 64)
!15286 = !DILocation(line: 2888, column: 30, scope: !15284)
!15287 = !DILocation(line: 2888, column: 38, scope: !15284)
!15288 = !DILocation(line: 2888, column: 43, scope: !15284)
!15289 = !DILocation(line: 2890, column: 20, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15284, file: !1800, line: 2890, column: 13)
!15291 = !DILocation(line: 2890, column: 18, scope: !15290)
!15292 = !DILocation(line: 2890, column: 25, scope: !15293)
!15293 = !DILexicalBlockFile(scope: !15294, file: !1800, discriminator: 1)
!15294 = distinct !DILexicalBlock(scope: !15290, file: !1800, line: 2890, column: 13)
!15295 = !DILocation(line: 2890, column: 30, scope: !15293)
!15296 = !DILocation(line: 2890, column: 36, scope: !15293)
!15297 = !DILocation(line: 2890, column: 27, scope: !15293)
!15298 = !DILocation(line: 2890, column: 13, scope: !15293)
!15299 = !DILocation(line: 2891, column: 32, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15301, file: !1800, line: 2891, column: 21)
!15301 = distinct !DILexicalBlock(scope: !15294, file: !1800, line: 2890, column: 54)
!15302 = !DILocation(line: 2891, column: 21, scope: !15300)
!15303 = !DILocation(line: 2891, column: 27, scope: !15300)
!15304 = !DILocation(line: 2891, column: 38, scope: !15300)
!15305 = !DILocation(line: 2891, column: 35, scope: !15300)
!15306 = !DILocation(line: 2891, column: 43, scope: !15300)
!15307 = !DILocation(line: 2891, column: 62, scope: !15308)
!15308 = !DILexicalBlockFile(scope: !15300, file: !1800, discriminator: 1)
!15309 = !DILocation(line: 2891, column: 46, scope: !15308)
!15310 = !DILocation(line: 2891, column: 52, scope: !15308)
!15311 = !DILocation(line: 2891, column: 68, scope: !15308)
!15312 = !DILocation(line: 2891, column: 65, scope: !15308)
!15313 = !DILocation(line: 2891, column: 21, scope: !15308)
!15314 = !DILocation(line: 2892, column: 41, scope: !15315)
!15315 = distinct !DILexicalBlock(scope: !15316, file: !1800, line: 2892, column: 25)
!15316 = distinct !DILexicalBlock(scope: !15300, file: !1800, line: 2891, column: 77)
!15317 = !DILocation(line: 2892, column: 25, scope: !15315)
!15318 = !DILocation(line: 2892, column: 31, scope: !15315)
!15319 = !DILocation(line: 2892, column: 44, scope: !15315)
!15320 = !DILocation(line: 2892, column: 25, scope: !15316)
!15321 = !DILocation(line: 2893, column: 25, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15315, file: !1800, line: 2892, column: 50)
!15323 = !DILocation(line: 2893, column: 47, scope: !15322)
!15324 = !DILocation(line: 2893, column: 52, scope: !15322)
!15325 = !DILocation(line: 2893, column: 56, scope: !15322)
!15326 = !DILocation(line: 2893, column: 63, scope: !15322)
!15327 = !DILocation(line: 2893, column: 68, scope: !15322)
!15328 = !DILocation(line: 2894, column: 45, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15322, file: !1800, line: 2894, column: 29)
!15330 = !DILocation(line: 2894, column: 29, scope: !15329)
!15331 = !DILocation(line: 2894, column: 35, scope: !15329)
!15332 = !DILocation(line: 2894, column: 48, scope: !15329)
!15333 = !DILocation(line: 2894, column: 29, scope: !15322)
!15334 = !DILocation(line: 2895, column: 34, scope: !15329)
!15335 = !DILocation(line: 2895, column: 29, scope: !15329)
!15336 = !DILocation(line: 2896, column: 21, scope: !15322)
!15337 = !DILocation(line: 2897, column: 41, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15316, file: !1800, line: 2897, column: 25)
!15339 = !DILocation(line: 2897, column: 25, scope: !15338)
!15340 = !DILocation(line: 2897, column: 31, scope: !15338)
!15341 = !DILocation(line: 2897, column: 44, scope: !15338)
!15342 = !DILocation(line: 2897, column: 25, scope: !15316)
!15343 = !DILocation(line: 2898, column: 25, scope: !15338)
!15344 = !DILocation(line: 2898, column: 47, scope: !15338)
!15345 = !DILocation(line: 2898, column: 52, scope: !15338)
!15346 = !DILocation(line: 2898, column: 56, scope: !15338)
!15347 = !DILocation(line: 2898, column: 63, scope: !15338)
!15348 = !DILocation(line: 2898, column: 73, scope: !15338)
!15349 = !DILocation(line: 2899, column: 17, scope: !15316)
!15350 = !DILocation(line: 2900, column: 51, scope: !15300)
!15351 = !DILocation(line: 2900, column: 35, scope: !15300)
!15352 = !DILocation(line: 2900, column: 41, scope: !15300)
!15353 = !DILocation(line: 2900, column: 54, scope: !15300)
!15354 = !DILocation(line: 2900, column: 32, scope: !15300)
!15355 = !DILocation(line: 2900, column: 27, scope: !15300)
!15356 = !DILocation(line: 2901, column: 13, scope: !15301)
!15357 = !DILocation(line: 2890, column: 50, scope: !15358)
!15358 = !DILexicalBlockFile(scope: !15294, file: !1800, discriminator: 2)
!15359 = !DILocation(line: 2890, column: 13, scope: !15358)
!15360 = distinct !{!15360, !15361}
!15361 = !DILocation(line: 2890, column: 13, scope: !15284)
!15362 = !DILocation(line: 2902, column: 9, scope: !15284)
!15363 = !DILocation(line: 2903, column: 5, scope: !15266)
!15364 = !DILocation(line: 2883, column: 26, scope: !15365)
!15365 = !DILexicalBlockFile(scope: !15262, file: !1800, discriminator: 2)
!15366 = !DILocation(line: 2883, column: 5, scope: !15365)
!15367 = distinct !{!15367, !15368}
!15368 = !DILocation(line: 2883, column: 5, scope: !15235)
!15369 = !DILocation(line: 2904, column: 1, scope: !15235)
!15370 = distinct !DISubprogram(name: "apply_dependent_coupling_fixed", scope: !1142, file: !1142, line: 349, type: !15239, isLocal: true, isDefinition: true, scopeLine: 352, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!15371 = !DILocalVariable(name: "ac", arg: 1, scope: !15370, file: !1142, line: 349, type: !2071)
!15372 = !DILocation(line: 349, column: 56, scope: !15370)
!15373 = !DILocalVariable(name: "target", arg: 2, scope: !15370, file: !1142, line: 350, type: !1906)
!15374 = !DILocation(line: 350, column: 60, scope: !15370)
!15375 = !DILocalVariable(name: "cce", arg: 3, scope: !15370, file: !1142, line: 351, type: !2101)
!15376 = !DILocation(line: 351, column: 54, scope: !15370)
!15377 = !DILocalVariable(name: "index", arg: 4, scope: !15370, file: !1142, line: 351, type: !1012)
!15378 = !DILocation(line: 351, column: 63, scope: !15370)
!15379 = !DILocalVariable(name: "ics", scope: !15370, file: !1142, line: 353, type: !2616)
!15380 = !DILocation(line: 353, column: 30, scope: !15370)
!15381 = !DILocation(line: 353, column: 37, scope: !15370)
!15382 = !DILocation(line: 353, column: 42, scope: !15370)
!15383 = !DILocation(line: 353, column: 48, scope: !15370)
!15384 = !DILocalVariable(name: "offsets", scope: !15370, file: !1142, line: 354, type: !1935)
!15385 = !DILocation(line: 354, column: 21, scope: !15370)
!15386 = !DILocation(line: 354, column: 31, scope: !15370)
!15387 = !DILocation(line: 354, column: 36, scope: !15370)
!15388 = !DILocalVariable(name: "dest", scope: !15370, file: !1142, line: 355, type: !1454)
!15389 = !DILocation(line: 355, column: 10, scope: !15370)
!15390 = !DILocation(line: 355, column: 17, scope: !15370)
!15391 = !DILocation(line: 355, column: 25, scope: !15370)
!15392 = !DILocalVariable(name: "src", scope: !15370, file: !1142, line: 356, type: !1161)
!15393 = !DILocation(line: 356, column: 16, scope: !15370)
!15394 = !DILocation(line: 356, column: 22, scope: !15370)
!15395 = !DILocation(line: 356, column: 27, scope: !15370)
!15396 = !DILocation(line: 356, column: 33, scope: !15370)
!15397 = !DILocalVariable(name: "g", scope: !15370, file: !1142, line: 357, type: !1012)
!15398 = !DILocation(line: 357, column: 9, scope: !15370)
!15399 = !DILocalVariable(name: "i", scope: !15370, file: !1142, line: 357, type: !1012)
!15400 = !DILocation(line: 357, column: 12, scope: !15370)
!15401 = !DILocalVariable(name: "group", scope: !15370, file: !1142, line: 357, type: !1012)
!15402 = !DILocation(line: 357, column: 15, scope: !15370)
!15403 = !DILocalVariable(name: "k", scope: !15370, file: !1142, line: 357, type: !1012)
!15404 = !DILocation(line: 357, column: 22, scope: !15370)
!15405 = !DILocalVariable(name: "idx", scope: !15370, file: !1142, line: 357, type: !1012)
!15406 = !DILocation(line: 357, column: 25, scope: !15370)
!15407 = !DILocation(line: 358, column: 9, scope: !15408)
!15408 = distinct !DILexicalBlock(scope: !15370, file: !1142, line: 358, column: 9)
!15409 = !DILocation(line: 358, column: 13, scope: !15408)
!15410 = !DILocation(line: 358, column: 19, scope: !15408)
!15411 = !DILocation(line: 358, column: 24, scope: !15408)
!15412 = !DILocation(line: 358, column: 36, scope: !15408)
!15413 = !DILocation(line: 358, column: 9, scope: !15370)
!15414 = !DILocation(line: 359, column: 16, scope: !15415)
!15415 = distinct !DILexicalBlock(scope: !15408, file: !1142, line: 358, column: 52)
!15416 = !DILocation(line: 359, column: 20, scope: !15415)
!15417 = !DILocation(line: 359, column: 9, scope: !15415)
!15418 = !DILocation(line: 361, column: 9, scope: !15415)
!15419 = !DILocation(line: 363, column: 12, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15370, file: !1142, line: 363, column: 5)
!15421 = !DILocation(line: 363, column: 10, scope: !15420)
!15422 = !DILocation(line: 363, column: 17, scope: !15423)
!15423 = !DILexicalBlockFile(scope: !15424, file: !1142, discriminator: 1)
!15424 = distinct !DILexicalBlock(scope: !15420, file: !1142, line: 363, column: 5)
!15425 = !DILocation(line: 363, column: 21, scope: !15423)
!15426 = !DILocation(line: 363, column: 26, scope: !15423)
!15427 = !DILocation(line: 363, column: 19, scope: !15423)
!15428 = !DILocation(line: 363, column: 5, scope: !15423)
!15429 = !DILocation(line: 364, column: 16, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15431, file: !1142, line: 364, column: 9)
!15431 = distinct !DILexicalBlock(scope: !15424, file: !1142, line: 363, column: 50)
!15432 = !DILocation(line: 364, column: 14, scope: !15430)
!15433 = !DILocation(line: 364, column: 21, scope: !15434)
!15434 = !DILexicalBlockFile(scope: !15435, file: !1142, discriminator: 1)
!15435 = distinct !DILexicalBlock(scope: !15430, file: !1142, line: 364, column: 9)
!15436 = !DILocation(line: 364, column: 25, scope: !15434)
!15437 = !DILocation(line: 364, column: 30, scope: !15434)
!15438 = !DILocation(line: 364, column: 23, scope: !15434)
!15439 = !DILocation(line: 364, column: 9, scope: !15434)
!15440 = !DILocation(line: 365, column: 38, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15442, file: !1142, line: 365, column: 17)
!15442 = distinct !DILexicalBlock(scope: !15435, file: !1142, line: 364, column: 51)
!15443 = !DILocation(line: 365, column: 17, scope: !15441)
!15444 = !DILocation(line: 365, column: 22, scope: !15441)
!15445 = !DILocation(line: 365, column: 28, scope: !15441)
!15446 = !DILocation(line: 365, column: 43, scope: !15441)
!15447 = !DILocation(line: 365, column: 17, scope: !15442)
!15448 = !DILocalVariable(name: "gain", scope: !15449, file: !1142, line: 366, type: !1162)
!15449 = distinct !DILexicalBlock(scope: !15441, file: !1142, line: 365, column: 55)
!15450 = !DILocation(line: 366, column: 27, scope: !15449)
!15451 = !DILocation(line: 366, column: 56, scope: !15449)
!15452 = !DILocation(line: 366, column: 34, scope: !15449)
!15453 = !DILocation(line: 366, column: 49, scope: !15449)
!15454 = !DILocation(line: 366, column: 39, scope: !15449)
!15455 = !DILocation(line: 366, column: 44, scope: !15449)
!15456 = !DILocalVariable(name: "shift", scope: !15449, file: !1142, line: 367, type: !1012)
!15457 = !DILocation(line: 367, column: 21, scope: !15449)
!15458 = !DILocalVariable(name: "round", scope: !15449, file: !1142, line: 367, type: !1012)
!15459 = !DILocation(line: 367, column: 28, scope: !15449)
!15460 = !DILocalVariable(name: "c", scope: !15449, file: !1142, line: 367, type: !1012)
!15461 = !DILocation(line: 367, column: 35, scope: !15449)
!15462 = !DILocalVariable(name: "tmp", scope: !15449, file: !1142, line: 367, type: !1012)
!15463 = !DILocation(line: 367, column: 38, scope: !15449)
!15464 = !DILocation(line: 369, column: 21, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15449, file: !1142, line: 369, column: 21)
!15466 = !DILocation(line: 369, column: 26, scope: !15465)
!15467 = !DILocation(line: 369, column: 21, scope: !15449)
!15468 = !DILocation(line: 370, column: 43, scope: !15469)
!15469 = distinct !DILexicalBlock(scope: !15465, file: !1142, line: 369, column: 31)
!15470 = !DILocation(line: 370, column: 42, scope: !15469)
!15471 = !DILocation(line: 370, column: 48, scope: !15469)
!15472 = !DILocation(line: 370, column: 26, scope: !15469)
!15473 = !DILocation(line: 370, column: 25, scope: !15469)
!15474 = !DILocation(line: 370, column: 23, scope: !15469)
!15475 = !DILocation(line: 371, column: 31, scope: !15469)
!15476 = !DILocation(line: 371, column: 30, scope: !15469)
!15477 = !DILocation(line: 371, column: 35, scope: !15469)
!15478 = !DILocation(line: 371, column: 42, scope: !15469)
!15479 = !DILocation(line: 371, column: 27, scope: !15469)
!15480 = !DILocation(line: 372, column: 17, scope: !15469)
!15481 = !DILocation(line: 374, column: 41, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15465, file: !1142, line: 373, column: 22)
!15483 = !DILocation(line: 374, column: 46, scope: !15482)
!15484 = !DILocation(line: 374, column: 25, scope: !15482)
!15485 = !DILocation(line: 374, column: 23, scope: !15482)
!15486 = !DILocation(line: 375, column: 30, scope: !15482)
!15487 = !DILocation(line: 375, column: 34, scope: !15482)
!15488 = !DILocation(line: 375, column: 41, scope: !15482)
!15489 = !DILocation(line: 375, column: 27, scope: !15482)
!15490 = !DILocation(line: 378, column: 21, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15449, file: !1142, line: 378, column: 21)
!15492 = !DILocation(line: 378, column: 27, scope: !15491)
!15493 = !DILocation(line: 378, column: 21, scope: !15449)
!15494 = !DILocation(line: 380, column: 17, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15491, file: !1142, line: 378, column: 34)
!15496 = !DILocation(line: 380, column: 28, scope: !15497)
!15497 = !DILexicalBlockFile(scope: !15498, file: !1142, discriminator: 1)
!15498 = distinct !DILexicalBlock(scope: !15491, file: !1142, line: 380, column: 28)
!15499 = !DILocation(line: 380, column: 34, scope: !15497)
!15500 = !DILocation(line: 381, column: 30, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15498, file: !1142, line: 380, column: 39)
!15502 = !DILocation(line: 381, column: 29, scope: !15501)
!15503 = !DILocation(line: 381, column: 27, scope: !15501)
!15504 = !DILocation(line: 382, column: 35, scope: !15501)
!15505 = !DILocation(line: 382, column: 41, scope: !15501)
!15506 = !DILocation(line: 382, column: 31, scope: !15501)
!15507 = !DILocation(line: 382, column: 27, scope: !15501)
!15508 = !DILocation(line: 384, column: 32, scope: !15509)
!15509 = distinct !DILexicalBlock(scope: !15501, file: !1142, line: 384, column: 21)
!15510 = !DILocation(line: 384, column: 26, scope: !15509)
!15511 = !DILocation(line: 384, column: 37, scope: !15512)
!15512 = !DILexicalBlockFile(scope: !15513, file: !1142, discriminator: 1)
!15513 = distinct !DILexicalBlock(scope: !15509, file: !1142, line: 384, column: 21)
!15514 = !DILocation(line: 384, column: 60, scope: !15512)
!15515 = !DILocation(line: 384, column: 45, scope: !15512)
!15516 = !DILocation(line: 384, column: 50, scope: !15512)
!15517 = !DILocation(line: 384, column: 43, scope: !15512)
!15518 = !DILocation(line: 384, column: 21, scope: !15512)
!15519 = !DILocation(line: 385, column: 42, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15521, file: !1142, line: 385, column: 25)
!15521 = distinct !DILexicalBlock(scope: !15513, file: !1142, line: 384, column: 73)
!15522 = !DILocation(line: 385, column: 34, scope: !15520)
!15523 = !DILocation(line: 385, column: 32, scope: !15520)
!15524 = !DILocation(line: 385, column: 30, scope: !15520)
!15525 = !DILocation(line: 385, column: 46, scope: !15526)
!15526 = !DILexicalBlockFile(scope: !15527, file: !1142, discriminator: 1)
!15527 = distinct !DILexicalBlock(scope: !15520, file: !1142, line: 385, column: 25)
!15528 = !DILocation(line: 385, column: 58, scope: !15526)
!15529 = !DILocation(line: 385, column: 60, scope: !15526)
!15530 = !DILocation(line: 385, column: 50, scope: !15526)
!15531 = !DILocation(line: 385, column: 48, scope: !15526)
!15532 = !DILocation(line: 385, column: 25, scope: !15526)
!15533 = !DILocation(line: 386, column: 55, scope: !15534)
!15534 = distinct !DILexicalBlock(scope: !15527, file: !1142, line: 385, column: 71)
!15535 = !DILocation(line: 386, column: 61, scope: !15534)
!15536 = !DILocation(line: 386, column: 69, scope: !15534)
!15537 = !DILocation(line: 386, column: 67, scope: !15534)
!15538 = !DILocation(line: 386, column: 51, scope: !15534)
!15539 = !DILocation(line: 386, column: 42, scope: !15534)
!15540 = !DILocation(line: 386, column: 74, scope: !15534)
!15541 = !DILocation(line: 386, column: 72, scope: !15534)
!15542 = !DILocation(line: 386, column: 76, scope: !15534)
!15543 = !DILocation(line: 387, column: 63, scope: !15534)
!15544 = !DILocation(line: 386, column: 35, scope: !15534)
!15545 = !DILocation(line: 386, column: 33, scope: !15534)
!15546 = !DILocation(line: 388, column: 55, scope: !15534)
!15547 = !DILocation(line: 388, column: 70, scope: !15534)
!15548 = !DILocation(line: 388, column: 61, scope: !15534)
!15549 = !DILocation(line: 388, column: 59, scope: !15534)
!15550 = !DILocation(line: 388, column: 80, scope: !15534)
!15551 = !DILocation(line: 388, column: 77, scope: !15534)
!15552 = !DILocation(line: 388, column: 34, scope: !15534)
!15553 = !DILocation(line: 388, column: 40, scope: !15534)
!15554 = !DILocation(line: 388, column: 48, scope: !15534)
!15555 = !DILocation(line: 388, column: 46, scope: !15534)
!15556 = !DILocation(line: 388, column: 29, scope: !15534)
!15557 = !DILocation(line: 388, column: 51, scope: !15534)
!15558 = !DILocation(line: 389, column: 25, scope: !15534)
!15559 = !DILocation(line: 385, column: 67, scope: !15560)
!15560 = !DILexicalBlockFile(scope: !15527, file: !1142, discriminator: 2)
!15561 = !DILocation(line: 385, column: 25, scope: !15560)
!15562 = distinct !{!15562, !15563}
!15563 = !DILocation(line: 385, column: 25, scope: !15521)
!15564 = !DILocation(line: 390, column: 21, scope: !15521)
!15565 = !DILocation(line: 384, column: 69, scope: !15566)
!15566 = !DILexicalBlockFile(scope: !15513, file: !1142, discriminator: 2)
!15567 = !DILocation(line: 384, column: 21, scope: !15566)
!15568 = distinct !{!15568, !15569}
!15569 = !DILocation(line: 384, column: 21, scope: !15501)
!15570 = !DILocation(line: 391, column: 17, scope: !15501)
!15571 = !DILocation(line: 393, column: 32, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !15573, file: !1142, line: 393, column: 21)
!15573 = distinct !DILexicalBlock(scope: !15498, file: !1142, line: 392, column: 22)
!15574 = !DILocation(line: 393, column: 26, scope: !15572)
!15575 = !DILocation(line: 393, column: 37, scope: !15576)
!15576 = !DILexicalBlockFile(scope: !15577, file: !1142, discriminator: 1)
!15577 = distinct !DILexicalBlock(scope: !15572, file: !1142, line: 393, column: 21)
!15578 = !DILocation(line: 393, column: 60, scope: !15576)
!15579 = !DILocation(line: 393, column: 45, scope: !15576)
!15580 = !DILocation(line: 393, column: 50, scope: !15576)
!15581 = !DILocation(line: 393, column: 43, scope: !15576)
!15582 = !DILocation(line: 393, column: 21, scope: !15576)
!15583 = !DILocation(line: 394, column: 42, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15585, file: !1142, line: 394, column: 25)
!15585 = distinct !DILexicalBlock(scope: !15577, file: !1142, line: 393, column: 73)
!15586 = !DILocation(line: 394, column: 34, scope: !15584)
!15587 = !DILocation(line: 394, column: 32, scope: !15584)
!15588 = !DILocation(line: 394, column: 30, scope: !15584)
!15589 = !DILocation(line: 394, column: 46, scope: !15590)
!15590 = !DILexicalBlockFile(scope: !15591, file: !1142, discriminator: 1)
!15591 = distinct !DILexicalBlock(scope: !15584, file: !1142, line: 394, column: 25)
!15592 = !DILocation(line: 394, column: 58, scope: !15590)
!15593 = !DILocation(line: 394, column: 60, scope: !15590)
!15594 = !DILocation(line: 394, column: 50, scope: !15590)
!15595 = !DILocation(line: 394, column: 48, scope: !15590)
!15596 = !DILocation(line: 394, column: 25, scope: !15590)
!15597 = !DILocation(line: 395, column: 55, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15591, file: !1142, line: 394, column: 71)
!15599 = !DILocation(line: 395, column: 61, scope: !15598)
!15600 = !DILocation(line: 395, column: 69, scope: !15598)
!15601 = !DILocation(line: 395, column: 67, scope: !15598)
!15602 = !DILocation(line: 395, column: 51, scope: !15598)
!15603 = !DILocation(line: 395, column: 42, scope: !15598)
!15604 = !DILocation(line: 395, column: 74, scope: !15598)
!15605 = !DILocation(line: 395, column: 72, scope: !15598)
!15606 = !DILocation(line: 395, column: 76, scope: !15598)
!15607 = !DILocation(line: 396, column: 64, scope: !15598)
!15608 = !DILocation(line: 395, column: 35, scope: !15598)
!15609 = !DILocation(line: 395, column: 33, scope: !15598)
!15610 = !DILocation(line: 397, column: 54, scope: !15598)
!15611 = !DILocation(line: 397, column: 67, scope: !15598)
!15612 = !DILocation(line: 397, column: 64, scope: !15598)
!15613 = !DILocation(line: 397, column: 58, scope: !15598)
!15614 = !DILocation(line: 397, column: 34, scope: !15598)
!15615 = !DILocation(line: 397, column: 40, scope: !15598)
!15616 = !DILocation(line: 397, column: 48, scope: !15598)
!15617 = !DILocation(line: 397, column: 46, scope: !15598)
!15618 = !DILocation(line: 397, column: 29, scope: !15598)
!15619 = !DILocation(line: 397, column: 51, scope: !15598)
!15620 = !DILocation(line: 398, column: 25, scope: !15598)
!15621 = !DILocation(line: 394, column: 67, scope: !15622)
!15622 = !DILexicalBlockFile(scope: !15591, file: !1142, discriminator: 2)
!15623 = !DILocation(line: 394, column: 25, scope: !15622)
!15624 = distinct !{!15624, !15625}
!15625 = !DILocation(line: 394, column: 25, scope: !15585)
!15626 = !DILocation(line: 399, column: 21, scope: !15585)
!15627 = !DILocation(line: 393, column: 69, scope: !15628)
!15628 = !DILexicalBlockFile(scope: !15577, file: !1142, discriminator: 2)
!15629 = !DILocation(line: 393, column: 21, scope: !15628)
!15630 = distinct !{!15630, !15631}
!15631 = !DILocation(line: 393, column: 21, scope: !15573)
!15632 = !DILocation(line: 401, column: 13, scope: !15449)
!15633 = !DILocation(line: 402, column: 9, scope: !15442)
!15634 = !DILocation(line: 364, column: 40, scope: !15635)
!15635 = !DILexicalBlockFile(scope: !15435, file: !1142, discriminator: 2)
!15636 = !DILocation(line: 364, column: 47, scope: !15635)
!15637 = !DILocation(line: 364, column: 9, scope: !15635)
!15638 = distinct !{!15638, !15639}
!15639 = !DILocation(line: 364, column: 9, scope: !15431)
!15640 = !DILocation(line: 403, column: 32, scope: !15431)
!15641 = !DILocation(line: 403, column: 17, scope: !15431)
!15642 = !DILocation(line: 403, column: 22, scope: !15431)
!15643 = !DILocation(line: 403, column: 35, scope: !15431)
!15644 = !DILocation(line: 403, column: 14, scope: !15431)
!15645 = !DILocation(line: 404, column: 31, scope: !15431)
!15646 = !DILocation(line: 404, column: 16, scope: !15431)
!15647 = !DILocation(line: 404, column: 21, scope: !15431)
!15648 = !DILocation(line: 404, column: 34, scope: !15431)
!15649 = !DILocation(line: 404, column: 13, scope: !15431)
!15650 = !DILocation(line: 405, column: 5, scope: !15431)
!15651 = !DILocation(line: 363, column: 46, scope: !15652)
!15652 = !DILexicalBlockFile(scope: !15424, file: !1142, discriminator: 2)
!15653 = !DILocation(line: 363, column: 5, scope: !15652)
!15654 = distinct !{!15654, !15655}
!15655 = !DILocation(line: 363, column: 5, scope: !15370)
!15656 = !DILocation(line: 406, column: 1, scope: !15370)
!15657 = distinct !DISubprogram(name: "apply_independent_coupling_fixed", scope: !1142, file: !1142, line: 413, type: !15239, isLocal: true, isDefinition: true, scopeLine: 416, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!15658 = !DILocalVariable(name: "ac", arg: 1, scope: !15657, file: !1142, line: 413, type: !2071)
!15659 = !DILocation(line: 413, column: 58, scope: !15657)
!15660 = !DILocalVariable(name: "target", arg: 2, scope: !15657, file: !1142, line: 414, type: !1906)
!15661 = !DILocation(line: 414, column: 62, scope: !15657)
!15662 = !DILocalVariable(name: "cce", arg: 3, scope: !15657, file: !1142, line: 415, type: !2101)
!15663 = !DILocation(line: 415, column: 56, scope: !15657)
!15664 = !DILocalVariable(name: "index", arg: 4, scope: !15657, file: !1142, line: 415, type: !1012)
!15665 = !DILocation(line: 415, column: 65, scope: !15657)
!15666 = !DILocalVariable(name: "i", scope: !15657, file: !1142, line: 417, type: !1012)
!15667 = !DILocation(line: 417, column: 9, scope: !15657)
!15668 = !DILocalVariable(name: "c", scope: !15657, file: !1142, line: 417, type: !1012)
!15669 = !DILocation(line: 417, column: 12, scope: !15657)
!15670 = !DILocalVariable(name: "shift", scope: !15657, file: !1142, line: 417, type: !1012)
!15671 = !DILocation(line: 417, column: 15, scope: !15657)
!15672 = !DILocalVariable(name: "round", scope: !15657, file: !1142, line: 417, type: !1012)
!15673 = !DILocation(line: 417, column: 22, scope: !15657)
!15674 = !DILocalVariable(name: "tmp", scope: !15657, file: !1142, line: 417, type: !1012)
!15675 = !DILocation(line: 417, column: 29, scope: !15657)
!15676 = !DILocalVariable(name: "gain", scope: !15657, file: !1142, line: 418, type: !1162)
!15677 = !DILocation(line: 418, column: 15, scope: !15657)
!15678 = !DILocation(line: 418, column: 37, scope: !15657)
!15679 = !DILocation(line: 418, column: 22, scope: !15657)
!15680 = !DILocation(line: 418, column: 27, scope: !15657)
!15681 = !DILocation(line: 418, column: 32, scope: !15657)
!15682 = !DILocalVariable(name: "src", scope: !15657, file: !1142, line: 419, type: !1161)
!15683 = !DILocation(line: 419, column: 16, scope: !15657)
!15684 = !DILocation(line: 419, column: 22, scope: !15657)
!15685 = !DILocation(line: 419, column: 27, scope: !15657)
!15686 = !DILocation(line: 419, column: 33, scope: !15657)
!15687 = !DILocalVariable(name: "dest", scope: !15657, file: !1142, line: 420, type: !15688)
!15688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64, align: 64)
!15689 = !DILocation(line: 420, column: 19, scope: !15657)
!15690 = !DILocation(line: 420, column: 26, scope: !15657)
!15691 = !DILocation(line: 420, column: 34, scope: !15657)
!15692 = !DILocalVariable(name: "len", scope: !15657, file: !1142, line: 421, type: !1162)
!15693 = !DILocation(line: 421, column: 15, scope: !15657)
!15694 = !DILocation(line: 421, column: 30, scope: !15657)
!15695 = !DILocation(line: 421, column: 34, scope: !15657)
!15696 = !DILocation(line: 421, column: 40, scope: !15657)
!15697 = !DILocation(line: 421, column: 45, scope: !15657)
!15698 = !DILocation(line: 421, column: 49, scope: !15657)
!15699 = !DILocation(line: 421, column: 26, scope: !15657)
!15700 = !DILocation(line: 423, column: 25, scope: !15657)
!15701 = !DILocation(line: 423, column: 30, scope: !15657)
!15702 = !DILocation(line: 423, column: 9, scope: !15657)
!15703 = !DILocation(line: 423, column: 7, scope: !15657)
!15704 = !DILocation(line: 424, column: 14, scope: !15657)
!15705 = !DILocation(line: 424, column: 18, scope: !15657)
!15706 = !DILocation(line: 424, column: 25, scope: !15657)
!15707 = !DILocation(line: 424, column: 11, scope: !15657)
!15708 = !DILocation(line: 425, column: 9, scope: !15709)
!15709 = distinct !DILexicalBlock(scope: !15657, file: !1142, line: 425, column: 9)
!15710 = !DILocation(line: 425, column: 15, scope: !15709)
!15711 = !DILocation(line: 425, column: 9, scope: !15657)
!15712 = !DILocation(line: 426, column: 9, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15709, file: !1142, line: 425, column: 22)
!15714 = !DILocation(line: 427, column: 16, scope: !15715)
!15715 = distinct !DILexicalBlock(scope: !15709, file: !1142, line: 427, column: 16)
!15716 = !DILocation(line: 427, column: 22, scope: !15715)
!15717 = !DILocation(line: 427, column: 16, scope: !15709)
!15718 = !DILocation(line: 428, column: 18, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15715, file: !1142, line: 427, column: 27)
!15720 = !DILocation(line: 428, column: 17, scope: !15719)
!15721 = !DILocation(line: 428, column: 15, scope: !15719)
!15722 = !DILocation(line: 429, column: 23, scope: !15719)
!15723 = !DILocation(line: 429, column: 29, scope: !15719)
!15724 = !DILocation(line: 429, column: 19, scope: !15719)
!15725 = !DILocation(line: 429, column: 15, scope: !15719)
!15726 = !DILocation(line: 431, column: 16, scope: !15727)
!15727 = distinct !DILexicalBlock(scope: !15719, file: !1142, line: 431, column: 9)
!15728 = !DILocation(line: 431, column: 14, scope: !15727)
!15729 = !DILocation(line: 431, column: 21, scope: !15730)
!15730 = !DILexicalBlockFile(scope: !15731, file: !1142, discriminator: 1)
!15731 = distinct !DILexicalBlock(scope: !15727, file: !1142, line: 431, column: 9)
!15732 = !DILocation(line: 431, column: 25, scope: !15730)
!15733 = !DILocation(line: 431, column: 23, scope: !15730)
!15734 = !DILocation(line: 431, column: 9, scope: !15730)
!15735 = !DILocation(line: 432, column: 39, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !15731, file: !1142, line: 431, column: 35)
!15737 = !DILocation(line: 432, column: 35, scope: !15736)
!15738 = !DILocation(line: 432, column: 26, scope: !15736)
!15739 = !DILocation(line: 432, column: 44, scope: !15736)
!15740 = !DILocation(line: 432, column: 42, scope: !15736)
!15741 = !DILocation(line: 432, column: 46, scope: !15736)
!15742 = !DILocation(line: 432, column: 71, scope: !15736)
!15743 = !DILocation(line: 432, column: 19, scope: !15736)
!15744 = !DILocation(line: 432, column: 17, scope: !15736)
!15745 = !DILocation(line: 433, column: 25, scope: !15736)
!15746 = !DILocation(line: 433, column: 31, scope: !15736)
!15747 = !DILocation(line: 433, column: 29, scope: !15736)
!15748 = !DILocation(line: 433, column: 41, scope: !15736)
!15749 = !DILocation(line: 433, column: 38, scope: !15736)
!15750 = !DILocation(line: 433, column: 18, scope: !15736)
!15751 = !DILocation(line: 433, column: 13, scope: !15736)
!15752 = !DILocation(line: 433, column: 21, scope: !15736)
!15753 = !DILocation(line: 434, column: 9, scope: !15736)
!15754 = !DILocation(line: 431, column: 31, scope: !15755)
!15755 = !DILexicalBlockFile(scope: !15731, file: !1142, discriminator: 2)
!15756 = !DILocation(line: 431, column: 9, scope: !15755)
!15757 = distinct !{!15757, !15758}
!15758 = !DILocation(line: 431, column: 9, scope: !15719)
!15759 = !DILocation(line: 435, column: 5, scope: !15719)
!15760 = !DILocation(line: 437, column: 14, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15762, file: !1142, line: 437, column: 7)
!15762 = distinct !DILexicalBlock(scope: !15715, file: !1142, line: 436, column: 10)
!15763 = !DILocation(line: 437, column: 12, scope: !15761)
!15764 = !DILocation(line: 437, column: 19, scope: !15765)
!15765 = !DILexicalBlockFile(scope: !15766, file: !1142, discriminator: 1)
!15766 = distinct !DILexicalBlock(scope: !15761, file: !1142, line: 437, column: 7)
!15767 = !DILocation(line: 437, column: 23, scope: !15765)
!15768 = !DILocation(line: 437, column: 21, scope: !15765)
!15769 = !DILocation(line: 437, column: 7, scope: !15765)
!15770 = !DILocation(line: 438, column: 37, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15766, file: !1142, line: 437, column: 33)
!15772 = !DILocation(line: 438, column: 33, scope: !15771)
!15773 = !DILocation(line: 438, column: 24, scope: !15771)
!15774 = !DILocation(line: 438, column: 42, scope: !15771)
!15775 = !DILocation(line: 438, column: 40, scope: !15771)
!15776 = !DILocation(line: 438, column: 44, scope: !15771)
!15777 = !DILocation(line: 438, column: 69, scope: !15771)
!15778 = !DILocation(line: 438, column: 17, scope: !15771)
!15779 = !DILocation(line: 438, column: 15, scope: !15771)
!15780 = !DILocation(line: 439, column: 22, scope: !15771)
!15781 = !DILocation(line: 439, column: 35, scope: !15771)
!15782 = !DILocation(line: 439, column: 32, scope: !15771)
!15783 = !DILocation(line: 439, column: 26, scope: !15771)
!15784 = !DILocation(line: 439, column: 16, scope: !15771)
!15785 = !DILocation(line: 439, column: 11, scope: !15771)
!15786 = !DILocation(line: 439, column: 19, scope: !15771)
!15787 = !DILocation(line: 440, column: 7, scope: !15771)
!15788 = !DILocation(line: 437, column: 29, scope: !15789)
!15789 = !DILexicalBlockFile(scope: !15766, file: !1142, discriminator: 2)
!15790 = !DILocation(line: 437, column: 7, scope: !15789)
!15791 = distinct !{!15791, !15792}
!15792 = !DILocation(line: 437, column: 7, scope: !15762)
!15793 = !DILocation(line: 442, column: 1, scope: !15657)
!15794 = distinct !DISubprogram(name: "show_bits", scope: !2043, file: !2043, line: 443, type: !6133, isLocal: true, isDefinition: true, scopeLine: 444, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!15795 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !15796)
!15796 = distinct !DILocation(line: 454, column: 16, scope: !15794)
!15797 = !DILocalVariable(name: "s", arg: 1, scope: !15794, file: !2043, line: 443, type: !2041)
!15798 = !DILocation(line: 443, column: 53, scope: !15794)
!15799 = !DILocalVariable(name: "n", arg: 2, scope: !15794, file: !2043, line: 443, type: !1012)
!15800 = !DILocation(line: 443, column: 60, scope: !15794)
!15801 = !DILocalVariable(name: "tmp", scope: !15794, file: !2043, line: 445, type: !1012)
!15802 = !DILocation(line: 445, column: 18, scope: !15794)
!15803 = !DILocalVariable(name: "re_index", scope: !15794, file: !2043, line: 452, type: !1013)
!15804 = !DILocation(line: 452, column: 18, scope: !15794)
!15805 = !DILocation(line: 452, column: 30, scope: !15794)
!15806 = !DILocation(line: 452, column: 34, scope: !15794)
!15807 = !DILocalVariable(name: "re_cache", scope: !15794, file: !2043, line: 452, type: !1013)
!15808 = !DILocation(line: 452, column: 78, scope: !15794)
!15809 = !DILocation(line: 454, column: 60, scope: !15794)
!15810 = !DILocation(line: 454, column: 64, scope: !15794)
!15811 = !DILocation(line: 454, column: 74, scope: !15794)
!15812 = !DILocation(line: 454, column: 83, scope: !15794)
!15813 = !DILocation(line: 454, column: 71, scope: !15794)
!15814 = !DILocation(line: 454, column: 92, scope: !15794)
!15815 = !DILocation(line: 454, column: 16, scope: !15794)
!15816 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !15796)
!15817 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !15796)
!15818 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !15796)
!15819 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !15796)
!15820 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !15796)
!15821 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !15796)
!15822 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !15796)
!15823 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !15796)
!15824 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !15796)
!15825 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !15796)
!15826 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !15796)
!15827 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !15796)
!15828 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !15796)
!15829 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !15796)
!15830 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !15796)
!15831 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !15796)
!15832 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !15796)
!15833 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !15796)
!15834 = !DILocation(line: 454, column: 100, scope: !15794)
!15835 = !DILocation(line: 454, column: 109, scope: !15794)
!15836 = !DILocation(line: 454, column: 96, scope: !15794)
!15837 = !DILocation(line: 454, column: 14, scope: !15794)
!15838 = !DILocation(line: 455, column: 21, scope: !15794)
!15839 = !DILocation(line: 455, column: 31, scope: !15794)
!15840 = !DILocation(line: 455, column: 11, scope: !15794)
!15841 = !DILocation(line: 455, column: 9, scope: !15794)
!15842 = !DILocation(line: 457, column: 12, scope: !15794)
!15843 = !DILocation(line: 457, column: 5, scope: !15794)
!15844 = distinct !DISubprogram(name: "parse_adts_frame_header", scope: !1800, file: !1800, line: 2981, type: !15845, isLocal: true, isDefinition: true, scopeLine: 2982, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!15845 = !DISubroutineType(types: !15846)
!15846 = !{!1012, !2071, !2041}
!15847 = !DILocalVariable(name: "ac", arg: 1, scope: !15844, file: !1800, line: 2981, type: !2071)
!15848 = !DILocation(line: 2981, column: 48, scope: !15844)
!15849 = !DILocalVariable(name: "gb", arg: 2, scope: !15844, file: !1800, line: 2981, type: !2041)
!15850 = !DILocation(line: 2981, column: 67, scope: !15844)
!15851 = !DILocalVariable(name: "size", scope: !15844, file: !1800, line: 2983, type: !1012)
!15852 = !DILocation(line: 2983, column: 9, scope: !15844)
!15853 = !DILocalVariable(name: "hdr_info", scope: !15844, file: !1800, line: 2984, type: !15854)
!15854 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACADTSHeaderInfo", file: !15855, line: 37, baseType: !15856)
!15855 = !DIFile(filename: "libavcodec/adts_header.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACADTSHeaderInfo", file: !15855, line: 28, size: 160, align: 32, elements: !15857)
!15857 = !{!15858, !15859, !15860, !15861, !15862, !15863, !15864, !15865}
!15858 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !15856, file: !15855, line: 29, baseType: !1029, size: 32, align: 32)
!15859 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !15856, file: !15855, line: 30, baseType: !1029, size: 32, align: 32, offset: 32)
!15860 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !15856, file: !15855, line: 31, baseType: !1029, size: 32, align: 32, offset: 64)
!15861 = !DIDerivedType(tag: DW_TAG_member, name: "crc_absent", scope: !15856, file: !15855, line: 32, baseType: !1030, size: 8, align: 8, offset: 96)
!15862 = !DIDerivedType(tag: DW_TAG_member, name: "object_type", scope: !15856, file: !15855, line: 33, baseType: !1030, size: 8, align: 8, offset: 104)
!15863 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_index", scope: !15856, file: !15855, line: 34, baseType: !1030, size: 8, align: 8, offset: 112)
!15864 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !15856, file: !15855, line: 35, baseType: !1030, size: 8, align: 8, offset: 120)
!15865 = !DIDerivedType(tag: DW_TAG_member, name: "num_aac_frames", scope: !15856, file: !15855, line: 36, baseType: !1030, size: 8, align: 8, offset: 128)
!15866 = !DILocation(line: 2984, column: 23, scope: !15844)
!15867 = !DILocalVariable(name: "layout_map", scope: !15844, file: !1800, line: 2985, type: !2597)
!15868 = !DILocation(line: 2985, column: 13, scope: !15844)
!15869 = !DILocalVariable(name: "layout_map_tags", scope: !15844, file: !1800, line: 2986, type: !1012)
!15870 = !DILocation(line: 2986, column: 9, scope: !15844)
!15871 = !DILocalVariable(name: "ret", scope: !15844, file: !1800, line: 2986, type: !1012)
!15872 = !DILocation(line: 2986, column: 26, scope: !15844)
!15873 = !DILocation(line: 2988, column: 33, scope: !15844)
!15874 = !DILocation(line: 2988, column: 12, scope: !15844)
!15875 = !DILocation(line: 2988, column: 10, scope: !15844)
!15876 = !DILocation(line: 2989, column: 9, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !15844, file: !1800, line: 2989, column: 9)
!15878 = !DILocation(line: 2989, column: 14, scope: !15877)
!15879 = !DILocation(line: 2989, column: 9, scope: !15844)
!15880 = !DILocation(line: 2990, column: 14, scope: !15881)
!15881 = distinct !DILexicalBlock(scope: !15882, file: !1800, line: 2990, column: 13)
!15882 = distinct !DILexicalBlock(scope: !15877, file: !1800, line: 2989, column: 19)
!15883 = !DILocation(line: 2990, column: 18, scope: !15881)
!15884 = !DILocation(line: 2990, column: 40, scope: !15881)
!15885 = !DILocation(line: 2990, column: 52, scope: !15886)
!15886 = !DILexicalBlockFile(scope: !15881, file: !1800, discriminator: 1)
!15887 = !DILocation(line: 2990, column: 43, scope: !15886)
!15888 = !DILocation(line: 2990, column: 67, scope: !15886)
!15889 = !DILocation(line: 2990, column: 13, scope: !15886)
!15890 = !DILocation(line: 2993, column: 43, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !15881, file: !1800, line: 2990, column: 73)
!15892 = !DILocation(line: 2993, column: 47, scope: !15891)
!15893 = !DILocation(line: 2993, column: 13, scope: !15891)
!15894 = !DILocation(line: 2995, column: 13, scope: !15891)
!15895 = !DILocation(line: 2995, column: 17, scope: !15891)
!15896 = !DILocation(line: 2995, column: 39, scope: !15891)
!15897 = !DILocation(line: 2996, column: 9, scope: !15891)
!15898 = !DILocation(line: 2997, column: 35, scope: !15882)
!15899 = !DILocation(line: 2997, column: 9, scope: !15882)
!15900 = !DILocation(line: 2998, column: 22, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15882, file: !1800, line: 2998, column: 13)
!15902 = !DILocation(line: 2998, column: 13, scope: !15901)
!15903 = !DILocation(line: 2998, column: 13, scope: !15882)
!15904 = !DILocation(line: 2999, column: 51, scope: !15905)
!15905 = distinct !DILexicalBlock(scope: !15901, file: !1800, line: 2998, column: 35)
!15906 = !DILocation(line: 2999, column: 42, scope: !15905)
!15907 = !DILocation(line: 2999, column: 13, scope: !15905)
!15908 = !DILocation(line: 2999, column: 17, scope: !15905)
!15909 = !DILocation(line: 2999, column: 23, scope: !15905)
!15910 = !DILocation(line: 2999, column: 28, scope: !15905)
!15911 = !DILocation(line: 2999, column: 40, scope: !15905)
!15912 = !DILocation(line: 3000, column: 51, scope: !15913)
!15913 = distinct !DILexicalBlock(scope: !15905, file: !1800, line: 3000, column: 17)
!15914 = !DILocation(line: 3000, column: 55, scope: !15913)
!15915 = !DILocation(line: 3001, column: 51, scope: !15913)
!15916 = !DILocation(line: 3003, column: 60, scope: !15913)
!15917 = !DILocation(line: 3003, column: 51, scope: !15913)
!15918 = !DILocation(line: 3000, column: 24, scope: !15913)
!15919 = !DILocation(line: 3000, column: 22, scope: !15913)
!15920 = !DILocation(line: 3003, column: 74, scope: !15913)
!15921 = !DILocation(line: 3000, column: 17, scope: !15905)
!15922 = !DILocation(line: 3004, column: 24, scope: !15913)
!15923 = !DILocation(line: 3004, column: 17, scope: !15913)
!15924 = !DILocation(line: 3005, column: 41, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15905, file: !1800, line: 3005, column: 17)
!15926 = !DILocation(line: 3005, column: 45, scope: !15925)
!15927 = !DILocation(line: 3005, column: 57, scope: !15925)
!15928 = !DILocation(line: 3006, column: 43, scope: !15925)
!15929 = !DILocation(line: 3006, column: 47, scope: !15925)
!15930 = !DILocation(line: 3006, column: 53, scope: !15925)
!15931 = !DILocation(line: 3006, column: 61, scope: !15925)
!15932 = !DILocation(line: 3006, column: 42, scope: !15925)
!15933 = !DILocation(line: 3006, column: 83, scope: !15934)
!15934 = !DILexicalBlockFile(scope: !15925, file: !1800, discriminator: 1)
!15935 = !DILocation(line: 3006, column: 87, scope: !15934)
!15936 = !DILocation(line: 3006, column: 93, scope: !15934)
!15937 = !DILocation(line: 3006, column: 42, scope: !15934)
!15938 = !DILocation(line: 3006, column: 42, scope: !15939)
!15939 = !DILexicalBlockFile(scope: !15925, file: !1800, discriminator: 2)
!15940 = !DILocation(line: 3006, column: 42, scope: !15941)
!15941 = !DILexicalBlockFile(scope: !15925, file: !1800, discriminator: 3)
!15942 = !DILocation(line: 3005, column: 24, scope: !15934)
!15943 = !DILocation(line: 3005, column: 22, scope: !15934)
!15944 = !DILocation(line: 3007, column: 68, scope: !15925)
!15945 = !DILocation(line: 3005, column: 17, scope: !15934)
!15946 = !DILocation(line: 3008, column: 24, scope: !15925)
!15947 = !DILocation(line: 3008, column: 17, scope: !15925)
!15948 = !DILocation(line: 3009, column: 9, scope: !15905)
!15949 = !DILocation(line: 3010, column: 13, scope: !15950)
!15950 = distinct !DILexicalBlock(scope: !15901, file: !1800, line: 3009, column: 16)
!15951 = !DILocation(line: 3010, column: 17, scope: !15950)
!15952 = !DILocation(line: 3010, column: 23, scope: !15950)
!15953 = !DILocation(line: 3010, column: 28, scope: !15950)
!15954 = !DILocation(line: 3010, column: 40, scope: !15950)
!15955 = !DILocation(line: 3016, column: 17, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !15950, file: !1800, line: 3016, column: 17)
!15957 = !DILocation(line: 3016, column: 21, scope: !15956)
!15958 = !DILocation(line: 3016, column: 32, scope: !15956)
!15959 = !DILocation(line: 3016, column: 35, scope: !15960)
!15960 = !DILexicalBlockFile(scope: !15956, file: !1800, discriminator: 1)
!15961 = !DILocation(line: 3016, column: 39, scope: !15960)
!15962 = !DILocation(line: 3016, column: 45, scope: !15960)
!15963 = !DILocation(line: 3016, column: 52, scope: !15960)
!15964 = !DILocation(line: 3016, column: 17, scope: !15960)
!15965 = !DILocation(line: 3017, column: 33, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15956, file: !1800, line: 3016, column: 64)
!15967 = !DILocation(line: 3018, column: 36, scope: !15966)
!15968 = !DILocation(line: 3018, column: 53, scope: !15966)
!15969 = !DILocation(line: 3018, column: 17, scope: !15966)
!15970 = !DILocation(line: 3018, column: 34, scope: !15966)
!15971 = !DILocation(line: 3019, column: 36, scope: !15966)
!15972 = !DILocation(line: 3019, column: 53, scope: !15966)
!15973 = !DILocation(line: 3019, column: 17, scope: !15966)
!15974 = !DILocation(line: 3019, column: 34, scope: !15966)
!15975 = !DILocation(line: 3020, column: 17, scope: !15966)
!15976 = !DILocation(line: 3020, column: 34, scope: !15966)
!15977 = !DILocation(line: 3021, column: 17, scope: !15966)
!15978 = !DILocation(line: 3021, column: 34, scope: !15966)
!15979 = !DILocation(line: 3022, column: 38, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15966, file: !1800, line: 3022, column: 21)
!15981 = !DILocation(line: 3022, column: 42, scope: !15980)
!15982 = !DILocation(line: 3022, column: 54, scope: !15980)
!15983 = !DILocation(line: 3022, column: 21, scope: !15980)
!15984 = !DILocation(line: 3022, column: 21, scope: !15966)
!15985 = !DILocation(line: 3024, column: 21, scope: !15980)
!15986 = !DILocation(line: 3025, column: 13, scope: !15966)
!15987 = !DILocation(line: 3027, column: 47, scope: !15882)
!15988 = !DILocation(line: 3027, column: 9, scope: !15882)
!15989 = !DILocation(line: 3027, column: 13, scope: !15882)
!15990 = !DILocation(line: 3027, column: 19, scope: !15882)
!15991 = !DILocation(line: 3027, column: 24, scope: !15882)
!15992 = !DILocation(line: 3027, column: 36, scope: !15882)
!15993 = !DILocation(line: 3028, column: 50, scope: !15882)
!15994 = !DILocation(line: 3028, column: 41, scope: !15882)
!15995 = !DILocation(line: 3028, column: 9, scope: !15882)
!15996 = !DILocation(line: 3028, column: 13, scope: !15882)
!15997 = !DILocation(line: 3028, column: 19, scope: !15882)
!15998 = !DILocation(line: 3028, column: 24, scope: !15882)
!15999 = !DILocation(line: 3028, column: 39, scope: !15882)
!16000 = !DILocation(line: 3029, column: 47, scope: !15882)
!16001 = !DILocation(line: 3029, column: 38, scope: !15882)
!16002 = !DILocation(line: 3029, column: 9, scope: !15882)
!16003 = !DILocation(line: 3029, column: 13, scope: !15882)
!16004 = !DILocation(line: 3029, column: 19, scope: !15882)
!16005 = !DILocation(line: 3029, column: 24, scope: !15882)
!16006 = !DILocation(line: 3029, column: 36, scope: !15882)
!16007 = !DILocation(line: 3030, column: 9, scope: !15882)
!16008 = !DILocation(line: 3030, column: 13, scope: !15882)
!16009 = !DILocation(line: 3030, column: 19, scope: !15882)
!16010 = !DILocation(line: 3030, column: 24, scope: !15882)
!16011 = !DILocation(line: 3030, column: 43, scope: !15882)
!16012 = !DILocation(line: 3031, column: 13, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !15882, file: !1800, line: 3031, column: 13)
!16014 = !DILocation(line: 3031, column: 17, scope: !16013)
!16015 = !DILocation(line: 3031, column: 23, scope: !16013)
!16016 = !DILocation(line: 3031, column: 30, scope: !16013)
!16017 = !DILocation(line: 3031, column: 43, scope: !16013)
!16018 = !DILocation(line: 3032, column: 13, scope: !16013)
!16019 = !DILocation(line: 3032, column: 17, scope: !16013)
!16020 = !DILocation(line: 3032, column: 23, scope: !16013)
!16021 = !DILocation(line: 3032, column: 28, scope: !16013)
!16022 = !DILocation(line: 3032, column: 52, scope: !16013)
!16023 = !DILocation(line: 3032, column: 43, scope: !16013)
!16024 = !DILocation(line: 3032, column: 40, scope: !16013)
!16025 = !DILocation(line: 3032, column: 64, scope: !16013)
!16026 = !DILocation(line: 3033, column: 13, scope: !16013)
!16027 = !DILocation(line: 3033, column: 17, scope: !16013)
!16028 = !DILocation(line: 3033, column: 23, scope: !16013)
!16029 = !DILocation(line: 3033, column: 28, scope: !16013)
!16030 = !DILocation(line: 3033, column: 52, scope: !16013)
!16031 = !DILocation(line: 3033, column: 40, scope: !16013)
!16032 = !DILocation(line: 3031, column: 13, scope: !16033)
!16033 = !DILexicalBlockFile(scope: !15882, file: !1800, discriminator: 1)
!16034 = !DILocation(line: 3034, column: 13, scope: !16035)
!16035 = distinct !DILexicalBlock(scope: !16013, file: !1800, line: 3033, column: 65)
!16036 = !DILocation(line: 3034, column: 17, scope: !16035)
!16037 = !DILocation(line: 3034, column: 23, scope: !16035)
!16038 = !DILocation(line: 3034, column: 28, scope: !16035)
!16039 = !DILocation(line: 3034, column: 32, scope: !16035)
!16040 = !DILocation(line: 3035, column: 13, scope: !16035)
!16041 = !DILocation(line: 3035, column: 17, scope: !16035)
!16042 = !DILocation(line: 3035, column: 23, scope: !16035)
!16043 = !DILocation(line: 3035, column: 28, scope: !16035)
!16044 = !DILocation(line: 3035, column: 31, scope: !16035)
!16045 = !DILocation(line: 3036, column: 9, scope: !16035)
!16046 = !DILocation(line: 3037, column: 23, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !15882, file: !1800, line: 3037, column: 13)
!16048 = !DILocation(line: 3037, column: 14, scope: !16047)
!16049 = !DILocation(line: 3037, column: 13, scope: !15882)
!16050 = !DILocation(line: 3038, column: 23, scope: !16047)
!16051 = !DILocation(line: 3038, column: 13, scope: !16047)
!16052 = !DILocation(line: 3039, column: 5, scope: !15882)
!16053 = !DILocation(line: 3040, column: 12, scope: !15844)
!16054 = !DILocation(line: 3040, column: 5, scope: !15844)
!16055 = !DILocation(line: 3041, column: 1, scope: !15844)
!16056 = distinct !DISubprogram(name: "decode_cce", scope: !1800, file: !1800, line: 2238, type: !8508, isLocal: true, isDefinition: true, scopeLine: 2239, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!16057 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !16058)
!16058 = distinct !DILocation(line: 788, column: 601, scope: !9600, inlinedAt: !16059)
!16059 = distinct !DILocation(line: 2293, column: 37, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16061, file: !1800, line: 2292, column: 35)
!16061 = distinct !DILexicalBlock(scope: !16062, file: !1800, line: 2292, column: 29)
!16062 = distinct !DILexicalBlock(scope: !16063, file: !1800, line: 2291, column: 57)
!16063 = distinct !DILexicalBlock(scope: !16064, file: !1800, line: 2291, column: 25)
!16064 = distinct !DILexicalBlock(scope: !16065, file: !1800, line: 2290, column: 69)
!16065 = distinct !DILexicalBlock(scope: !16066, file: !1800, line: 2290, column: 17)
!16066 = distinct !DILexicalBlock(scope: !16067, file: !1800, line: 2290, column: 17)
!16067 = distinct !DILexicalBlock(scope: !16068, file: !1800, line: 2289, column: 62)
!16068 = distinct !DILexicalBlock(scope: !16069, file: !1800, line: 2289, column: 13)
!16069 = distinct !DILexicalBlock(scope: !16070, file: !1800, line: 2289, column: 13)
!16070 = distinct !DILexicalBlock(scope: !16071, file: !1800, line: 2288, column: 16)
!16071 = distinct !DILexicalBlock(scope: !16072, file: !1800, line: 2286, column: 13)
!16072 = distinct !DILexicalBlock(scope: !16073, file: !1800, line: 2272, column: 36)
!16073 = distinct !DILexicalBlock(scope: !16074, file: !1800, line: 2272, column: 5)
!16074 = distinct !DILexicalBlock(scope: !16056, file: !1800, line: 2272, column: 5)
!16075 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !16076)
!16076 = distinct !DILocation(line: 788, column: 259, scope: !9625, inlinedAt: !16059)
!16077 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !16078)
!16078 = distinct !DILocation(line: 786, column: 16, scope: !9606, inlinedAt: !16059)
!16079 = !DILocation(line: 762, column: 74, scope: !9606, inlinedAt: !16059)
!16080 = !DILocation(line: 762, column: 87, scope: !9606, inlinedAt: !16059)
!16081 = !DILocation(line: 763, column: 42, scope: !9606, inlinedAt: !16059)
!16082 = !DILocation(line: 763, column: 52, scope: !9606, inlinedAt: !16059)
!16083 = !DILocation(line: 783, column: 9, scope: !9606, inlinedAt: !16059)
!16084 = !DILocation(line: 785, column: 18, scope: !9606, inlinedAt: !16059)
!16085 = !DILocation(line: 785, column: 78, scope: !9606, inlinedAt: !16059)
!16086 = !DILocation(line: 785, column: 101, scope: !9606, inlinedAt: !16059)
!16087 = !DILocation(line: 788, column: 14, scope: !9605, inlinedAt: !16059)
!16088 = !DILocation(line: 788, column: 17, scope: !9605, inlinedAt: !16059)
!16089 = !DILocation(line: 788, column: 39, scope: !9605, inlinedAt: !16059)
!16090 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !16091)
!16091 = distinct !DILocation(line: 788, column: 601, scope: !9600, inlinedAt: !16092)
!16092 = distinct !DILocation(line: 2279, column: 26, scope: !16093)
!16093 = !DILexicalBlockFile(scope: !16094, file: !1800, discriminator: 1)
!16094 = distinct !DILexicalBlock(scope: !16095, file: !1800, line: 2277, column: 16)
!16095 = distinct !DILexicalBlock(scope: !16072, file: !1800, line: 2277, column: 13)
!16096 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !16097)
!16097 = distinct !DILocation(line: 788, column: 259, scope: !9625, inlinedAt: !16092)
!16098 = !DILocation(line: 66, column: 98, scope: !6136, inlinedAt: !16099)
!16099 = distinct !DILocation(line: 786, column: 16, scope: !9606, inlinedAt: !16092)
!16100 = !DILocation(line: 762, column: 74, scope: !9606, inlinedAt: !16092)
!16101 = !DILocation(line: 762, column: 87, scope: !9606, inlinedAt: !16092)
!16102 = !DILocation(line: 763, column: 42, scope: !9606, inlinedAt: !16092)
!16103 = !DILocation(line: 763, column: 52, scope: !9606, inlinedAt: !16092)
!16104 = !DILocation(line: 783, column: 9, scope: !9606, inlinedAt: !16092)
!16105 = !DILocation(line: 785, column: 18, scope: !9606, inlinedAt: !16092)
!16106 = !DILocation(line: 785, column: 78, scope: !9606, inlinedAt: !16092)
!16107 = !DILocation(line: 785, column: 101, scope: !9606, inlinedAt: !16092)
!16108 = !DILocation(line: 788, column: 14, scope: !9605, inlinedAt: !16092)
!16109 = !DILocation(line: 788, column: 17, scope: !9605, inlinedAt: !16092)
!16110 = !DILocation(line: 788, column: 39, scope: !9605, inlinedAt: !16092)
!16111 = !DILocalVariable(name: "ac", arg: 1, scope: !16056, file: !1800, line: 2238, type: !2071)
!16112 = !DILocation(line: 2238, column: 35, scope: !16056)
!16113 = !DILocalVariable(name: "gb", arg: 2, scope: !16056, file: !1800, line: 2238, type: !2041)
!16114 = !DILocation(line: 2238, column: 54, scope: !16056)
!16115 = !DILocalVariable(name: "che", arg: 3, scope: !16056, file: !1800, line: 2238, type: !2101)
!16116 = !DILocation(line: 2238, column: 74, scope: !16056)
!16117 = !DILocalVariable(name: "num_gain", scope: !16056, file: !1800, line: 2240, type: !1012)
!16118 = !DILocation(line: 2240, column: 9, scope: !16056)
!16119 = !DILocalVariable(name: "c", scope: !16056, file: !1800, line: 2241, type: !1012)
!16120 = !DILocation(line: 2241, column: 9, scope: !16056)
!16121 = !DILocalVariable(name: "g", scope: !16056, file: !1800, line: 2241, type: !1012)
!16122 = !DILocation(line: 2241, column: 12, scope: !16056)
!16123 = !DILocalVariable(name: "sfb", scope: !16056, file: !1800, line: 2241, type: !1012)
!16124 = !DILocation(line: 2241, column: 15, scope: !16056)
!16125 = !DILocalVariable(name: "ret", scope: !16056, file: !1800, line: 2241, type: !1012)
!16126 = !DILocation(line: 2241, column: 20, scope: !16056)
!16127 = !DILocalVariable(name: "sign", scope: !16056, file: !1800, line: 2242, type: !1012)
!16128 = !DILocation(line: 2242, column: 9, scope: !16056)
!16129 = !DILocalVariable(name: "scale", scope: !16056, file: !1800, line: 2243, type: !1019)
!16130 = !DILocation(line: 2243, column: 14, scope: !16056)
!16131 = !DILocalVariable(name: "sce", scope: !16056, file: !1800, line: 2244, type: !1906)
!16132 = !DILocation(line: 2244, column: 27, scope: !16056)
!16133 = !DILocation(line: 2244, column: 34, scope: !16056)
!16134 = !DILocation(line: 2244, column: 39, scope: !16056)
!16135 = !DILocalVariable(name: "coup", scope: !16056, file: !1800, line: 2245, type: !15285)
!16136 = !DILocation(line: 2245, column: 22, scope: !16056)
!16137 = !DILocation(line: 2245, column: 30, scope: !16056)
!16138 = !DILocation(line: 2245, column: 35, scope: !16056)
!16139 = !DILocation(line: 2247, column: 42, scope: !16056)
!16140 = !DILocation(line: 2247, column: 32, scope: !16056)
!16141 = !DILocation(line: 2247, column: 30, scope: !16056)
!16142 = !DILocation(line: 2247, column: 5, scope: !16056)
!16143 = !DILocation(line: 2247, column: 11, scope: !16056)
!16144 = !DILocation(line: 2247, column: 26, scope: !16056)
!16145 = !DILocation(line: 2248, column: 34, scope: !16056)
!16146 = !DILocation(line: 2248, column: 25, scope: !16056)
!16147 = !DILocation(line: 2248, column: 5, scope: !16056)
!16148 = !DILocation(line: 2248, column: 11, scope: !16056)
!16149 = !DILocation(line: 2248, column: 23, scope: !16056)
!16150 = !DILocation(line: 2249, column: 12, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16056, file: !1800, line: 2249, column: 5)
!16152 = !DILocation(line: 2249, column: 10, scope: !16151)
!16153 = !DILocation(line: 2249, column: 17, scope: !16154)
!16154 = !DILexicalBlockFile(scope: !16155, file: !1800, discriminator: 1)
!16155 = distinct !DILexicalBlock(scope: !16151, file: !1800, line: 2249, column: 5)
!16156 = !DILocation(line: 2249, column: 22, scope: !16154)
!16157 = !DILocation(line: 2249, column: 28, scope: !16154)
!16158 = !DILocation(line: 2249, column: 19, scope: !16154)
!16159 = !DILocation(line: 2249, column: 5, scope: !16154)
!16160 = !DILocation(line: 2250, column: 17, scope: !16161)
!16161 = distinct !DILexicalBlock(scope: !16155, file: !1800, line: 2249, column: 46)
!16162 = !DILocation(line: 2251, column: 35, scope: !16161)
!16163 = !DILocation(line: 2251, column: 25, scope: !16161)
!16164 = !DILocation(line: 2251, column: 20, scope: !16161)
!16165 = !DILocation(line: 2251, column: 9, scope: !16161)
!16166 = !DILocation(line: 2251, column: 15, scope: !16161)
!16167 = !DILocation(line: 2251, column: 23, scope: !16161)
!16168 = !DILocation(line: 2252, column: 39, scope: !16161)
!16169 = !DILocation(line: 2252, column: 30, scope: !16161)
!16170 = !DILocation(line: 2252, column: 25, scope: !16161)
!16171 = !DILocation(line: 2252, column: 9, scope: !16161)
!16172 = !DILocation(line: 2252, column: 15, scope: !16161)
!16173 = !DILocation(line: 2252, column: 28, scope: !16161)
!16174 = !DILocation(line: 2253, column: 24, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16161, file: !1800, line: 2253, column: 13)
!16176 = !DILocation(line: 2253, column: 13, scope: !16175)
!16177 = !DILocation(line: 2253, column: 19, scope: !16175)
!16178 = !DILocation(line: 2253, column: 27, scope: !16175)
!16179 = !DILocation(line: 2253, column: 13, scope: !16161)
!16180 = !DILocation(line: 2254, column: 43, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16175, file: !1800, line: 2253, column: 40)
!16182 = !DILocation(line: 2254, column: 34, scope: !16181)
!16183 = !DILocation(line: 2254, column: 29, scope: !16181)
!16184 = !DILocation(line: 2254, column: 13, scope: !16181)
!16185 = !DILocation(line: 2254, column: 19, scope: !16181)
!16186 = !DILocation(line: 2254, column: 32, scope: !16181)
!16187 = !DILocation(line: 2255, column: 33, scope: !16188)
!16188 = distinct !DILexicalBlock(scope: !16181, file: !1800, line: 2255, column: 17)
!16189 = !DILocation(line: 2255, column: 17, scope: !16188)
!16190 = !DILocation(line: 2255, column: 23, scope: !16188)
!16191 = !DILocation(line: 2255, column: 36, scope: !16188)
!16192 = !DILocation(line: 2255, column: 17, scope: !16181)
!16193 = !DILocation(line: 2256, column: 25, scope: !16188)
!16194 = !DILocation(line: 2256, column: 17, scope: !16188)
!16195 = !DILocation(line: 2257, column: 9, scope: !16181)
!16196 = !DILocation(line: 2258, column: 29, scope: !16175)
!16197 = !DILocation(line: 2258, column: 13, scope: !16175)
!16198 = !DILocation(line: 2258, column: 19, scope: !16175)
!16199 = !DILocation(line: 2258, column: 32, scope: !16175)
!16200 = !DILocation(line: 2259, column: 5, scope: !16161)
!16201 = !DILocation(line: 2249, column: 42, scope: !16202)
!16202 = !DILexicalBlockFile(scope: !16155, file: !1800, discriminator: 2)
!16203 = !DILocation(line: 2249, column: 5, scope: !16202)
!16204 = distinct !{!16204, !16205}
!16205 = !DILocation(line: 2249, column: 5, scope: !16056)
!16206 = !DILocation(line: 2260, column: 39, scope: !16056)
!16207 = !DILocation(line: 2260, column: 29, scope: !16056)
!16208 = !DILocation(line: 2260, column: 43, scope: !16056)
!16209 = !DILocation(line: 2260, column: 47, scope: !16210)
!16210 = !DILexicalBlockFile(scope: !16056, file: !1800, discriminator: 1)
!16211 = !DILocation(line: 2260, column: 53, scope: !16210)
!16212 = !DILocation(line: 2260, column: 68, scope: !16210)
!16213 = !DILocation(line: 2260, column: 43, scope: !16210)
!16214 = !DILocation(line: 2260, column: 43, scope: !16215)
!16215 = !DILexicalBlockFile(scope: !16056, file: !1800, discriminator: 2)
!16216 = !DILocation(line: 2260, column: 5, scope: !16215)
!16217 = !DILocation(line: 2260, column: 11, scope: !16215)
!16218 = !DILocation(line: 2260, column: 26, scope: !16215)
!16219 = !DILocation(line: 2262, column: 21, scope: !16056)
!16220 = !DILocation(line: 2262, column: 12, scope: !16056)
!16221 = !DILocation(line: 2262, column: 10, scope: !16056)
!16222 = !DILocation(line: 2264, column: 22, scope: !16056)
!16223 = !DILocation(line: 2264, column: 13, scope: !16056)
!16224 = !DILocation(line: 2264, column: 11, scope: !16056)
!16225 = !DILocation(line: 2269, column: 27, scope: !16226)
!16226 = distinct !DILexicalBlock(scope: !16056, file: !1800, line: 2269, column: 9)
!16227 = !DILocation(line: 2269, column: 31, scope: !16226)
!16228 = !DILocation(line: 2269, column: 36, scope: !16226)
!16229 = !DILocation(line: 2269, column: 16, scope: !16226)
!16230 = !DILocation(line: 2269, column: 14, scope: !16226)
!16231 = !DILocation(line: 2269, column: 9, scope: !16056)
!16232 = !DILocation(line: 2270, column: 16, scope: !16226)
!16233 = !DILocation(line: 2270, column: 9, scope: !16226)
!16234 = !DILocation(line: 2272, column: 12, scope: !16074)
!16235 = !DILocation(line: 2272, column: 10, scope: !16074)
!16236 = !DILocation(line: 2272, column: 17, scope: !16237)
!16237 = !DILexicalBlockFile(scope: !16073, file: !1800, discriminator: 1)
!16238 = !DILocation(line: 2272, column: 21, scope: !16237)
!16239 = !DILocation(line: 2272, column: 19, scope: !16237)
!16240 = !DILocation(line: 2272, column: 5, scope: !16237)
!16241 = !DILocalVariable(name: "idx", scope: !16072, file: !1800, line: 2273, type: !1012)
!16242 = !DILocation(line: 2273, column: 13, scope: !16072)
!16243 = !DILocalVariable(name: "cge", scope: !16072, file: !1800, line: 2274, type: !1012)
!16244 = !DILocation(line: 2274, column: 13, scope: !16072)
!16245 = !DILocalVariable(name: "gain", scope: !16072, file: !1800, line: 2275, type: !1012)
!16246 = !DILocation(line: 2275, column: 13, scope: !16072)
!16247 = !DILocalVariable(name: "gain_cache", scope: !16072, file: !1800, line: 2276, type: !1019)
!16248 = !DILocation(line: 2276, column: 18, scope: !16072)
!16249 = !DILocation(line: 2277, column: 13, scope: !16095)
!16250 = !DILocation(line: 2277, column: 13, scope: !16072)
!16251 = !DILocation(line: 2278, column: 19, scope: !16094)
!16252 = !DILocation(line: 2278, column: 25, scope: !16094)
!16253 = !DILocation(line: 2278, column: 40, scope: !16094)
!16254 = !DILocation(line: 2278, column: 19, scope: !16093)
!16255 = !DILocation(line: 2278, column: 71, scope: !16256)
!16256 = !DILexicalBlockFile(scope: !16094, file: !1800, discriminator: 2)
!16257 = !DILocation(line: 2278, column: 61, scope: !16256)
!16258 = !DILocation(line: 2278, column: 19, scope: !16256)
!16259 = !DILocation(line: 2278, column: 19, scope: !16260)
!16260 = !DILexicalBlockFile(scope: !16094, file: !1800, discriminator: 3)
!16261 = !DILocation(line: 2278, column: 17, scope: !16260)
!16262 = !DILocation(line: 2279, column: 20, scope: !16094)
!16263 = !DILocation(line: 2279, column: 35, scope: !16093)
!16264 = !DILocation(line: 2279, column: 56, scope: !16093)
!16265 = !DILocation(line: 2279, column: 26, scope: !16093)
!16266 = !DILocation(line: 785, column: 30, scope: !9606, inlinedAt: !16092)
!16267 = !DILocation(line: 785, column: 34, scope: !9606, inlinedAt: !16092)
!16268 = !DILocation(line: 785, column: 118, scope: !9606, inlinedAt: !16092)
!16269 = !DILocation(line: 785, column: 122, scope: !9606, inlinedAt: !16092)
!16270 = !DILocation(line: 786, column: 60, scope: !9606, inlinedAt: !16092)
!16271 = !DILocation(line: 786, column: 64, scope: !9606, inlinedAt: !16092)
!16272 = !DILocation(line: 786, column: 74, scope: !9606, inlinedAt: !16092)
!16273 = !DILocation(line: 786, column: 83, scope: !9606, inlinedAt: !16092)
!16274 = !DILocation(line: 786, column: 71, scope: !9606, inlinedAt: !16092)
!16275 = !DILocation(line: 786, column: 92, scope: !9606, inlinedAt: !16092)
!16276 = !DILocation(line: 786, column: 16, scope: !9606, inlinedAt: !16092)
!16277 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !16099)
!16278 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !16099)
!16279 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !16099)
!16280 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !16099)
!16281 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !16099)
!16282 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !16099)
!16283 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !16099)
!16284 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !16099)
!16285 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !16099)
!16286 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !16099)
!16287 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !16099)
!16288 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !16099)
!16289 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !16099)
!16290 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !16099)
!16291 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !16099)
!16292 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !16099)
!16293 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !16099)
!16294 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !16099)
!16295 = !DILocation(line: 786, column: 100, scope: !9606, inlinedAt: !16092)
!16296 = !DILocation(line: 786, column: 109, scope: !9606, inlinedAt: !16092)
!16297 = !DILocation(line: 786, column: 96, scope: !9606, inlinedAt: !16092)
!16298 = !DILocation(line: 786, column: 14, scope: !9606, inlinedAt: !16092)
!16299 = !DILocation(line: 788, column: 64, scope: !9829, inlinedAt: !16092)
!16300 = !DILocation(line: 788, column: 74, scope: !9829, inlinedAt: !16092)
!16301 = !DILocation(line: 788, column: 54, scope: !9829, inlinedAt: !16092)
!16302 = !DILocation(line: 788, column: 52, scope: !9829, inlinedAt: !16092)
!16303 = !DILocation(line: 788, column: 94, scope: !9829, inlinedAt: !16092)
!16304 = !DILocation(line: 788, column: 88, scope: !9829, inlinedAt: !16092)
!16305 = !DILocation(line: 788, column: 86, scope: !9829, inlinedAt: !16092)
!16306 = !DILocation(line: 788, column: 115, scope: !9829, inlinedAt: !16092)
!16307 = !DILocation(line: 788, column: 109, scope: !9829, inlinedAt: !16092)
!16308 = !DILocation(line: 788, column: 107, scope: !9829, inlinedAt: !16092)
!16309 = !DILocation(line: 788, column: 130, scope: !9829, inlinedAt: !16092)
!16310 = !DILocation(line: 788, column: 140, scope: !9829, inlinedAt: !16092)
!16311 = !DILocation(line: 788, column: 144, scope: !9829, inlinedAt: !16092)
!16312 = !DILocation(line: 788, column: 147, scope: !9843, inlinedAt: !16092)
!16313 = !DILocation(line: 788, column: 149, scope: !9843, inlinedAt: !16092)
!16314 = !DILocation(line: 788, column: 130, scope: !9843, inlinedAt: !16092)
!16315 = !DILocation(line: 788, column: 169, scope: !9847, inlinedAt: !16092)
!16316 = !DILocation(line: 788, column: 187, scope: !9847, inlinedAt: !16092)
!16317 = !DILocation(line: 788, column: 199, scope: !9847, inlinedAt: !16092)
!16318 = !DILocation(line: 788, column: 196, scope: !9847, inlinedAt: !16092)
!16319 = !DILocation(line: 788, column: 184, scope: !9847, inlinedAt: !16092)
!16320 = !DILocation(line: 788, column: 168, scope: !9847, inlinedAt: !16092)
!16321 = !DILocation(line: 788, column: 209, scope: !9854, inlinedAt: !16092)
!16322 = !DILocation(line: 788, column: 221, scope: !9854, inlinedAt: !16092)
!16323 = !DILocation(line: 788, column: 218, scope: !9854, inlinedAt: !16092)
!16324 = !DILocation(line: 788, column: 168, scope: !9854, inlinedAt: !16092)
!16325 = !DILocation(line: 788, column: 231, scope: !9859, inlinedAt: !16092)
!16326 = !DILocation(line: 788, column: 168, scope: !9859, inlinedAt: !16092)
!16327 = !DILocation(line: 788, column: 168, scope: !9625, inlinedAt: !16092)
!16328 = !DILocation(line: 788, column: 165, scope: !9625, inlinedAt: !16092)
!16329 = !DILocation(line: 788, column: 303, scope: !9625, inlinedAt: !16092)
!16330 = !DILocation(line: 788, column: 307, scope: !9625, inlinedAt: !16092)
!16331 = !DILocation(line: 788, column: 317, scope: !9625, inlinedAt: !16092)
!16332 = !DILocation(line: 788, column: 326, scope: !9625, inlinedAt: !16092)
!16333 = !DILocation(line: 788, column: 314, scope: !9625, inlinedAt: !16092)
!16334 = !DILocation(line: 788, column: 335, scope: !9625, inlinedAt: !16092)
!16335 = !DILocation(line: 788, column: 259, scope: !9625, inlinedAt: !16092)
!16336 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !16097)
!16337 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !16097)
!16338 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !16097)
!16339 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !16097)
!16340 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !16097)
!16341 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !16097)
!16342 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !16097)
!16343 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !16097)
!16344 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !16097)
!16345 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !16097)
!16346 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !16097)
!16347 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !16097)
!16348 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !16097)
!16349 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !16097)
!16350 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !16097)
!16351 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !16097)
!16352 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !16097)
!16353 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !16097)
!16354 = !DILocation(line: 788, column: 343, scope: !9625, inlinedAt: !16092)
!16355 = !DILocation(line: 788, column: 352, scope: !9625, inlinedAt: !16092)
!16356 = !DILocation(line: 788, column: 339, scope: !9625, inlinedAt: !16092)
!16357 = !DILocation(line: 788, column: 257, scope: !9625, inlinedAt: !16092)
!16358 = !DILocation(line: 788, column: 369, scope: !9625, inlinedAt: !16092)
!16359 = !DILocation(line: 788, column: 368, scope: !9625, inlinedAt: !16092)
!16360 = !DILocation(line: 788, column: 366, scope: !9625, inlinedAt: !16092)
!16361 = !DILocation(line: 788, column: 390, scope: !9625, inlinedAt: !16092)
!16362 = !DILocation(line: 788, column: 400, scope: !9625, inlinedAt: !16092)
!16363 = !DILocation(line: 788, column: 380, scope: !9898, inlinedAt: !16092)
!16364 = !DILocation(line: 788, column: 411, scope: !9625, inlinedAt: !16092)
!16365 = !DILocation(line: 788, column: 409, scope: !9625, inlinedAt: !16092)
!16366 = !DILocation(line: 788, column: 378, scope: !9625, inlinedAt: !16092)
!16367 = !DILocation(line: 788, column: 430, scope: !9625, inlinedAt: !16092)
!16368 = !DILocation(line: 788, column: 424, scope: !9625, inlinedAt: !16092)
!16369 = !DILocation(line: 788, column: 422, scope: !9625, inlinedAt: !16092)
!16370 = !DILocation(line: 788, column: 451, scope: !9625, inlinedAt: !16092)
!16371 = !DILocation(line: 788, column: 445, scope: !9625, inlinedAt: !16092)
!16372 = !DILocation(line: 788, column: 443, scope: !9625, inlinedAt: !16092)
!16373 = !DILocation(line: 788, column: 466, scope: !9625, inlinedAt: !16092)
!16374 = !DILocation(line: 788, column: 476, scope: !9625, inlinedAt: !16092)
!16375 = !DILocation(line: 788, column: 480, scope: !9625, inlinedAt: !16092)
!16376 = !DILocation(line: 788, column: 483, scope: !9912, inlinedAt: !16092)
!16377 = !DILocation(line: 788, column: 485, scope: !9912, inlinedAt: !16092)
!16378 = !DILocation(line: 788, column: 466, scope: !9912, inlinedAt: !16092)
!16379 = !DILocation(line: 788, column: 505, scope: !9916, inlinedAt: !16092)
!16380 = !DILocation(line: 788, column: 523, scope: !9916, inlinedAt: !16092)
!16381 = !DILocation(line: 788, column: 535, scope: !9916, inlinedAt: !16092)
!16382 = !DILocation(line: 788, column: 532, scope: !9916, inlinedAt: !16092)
!16383 = !DILocation(line: 788, column: 520, scope: !9916, inlinedAt: !16092)
!16384 = !DILocation(line: 788, column: 504, scope: !9916, inlinedAt: !16092)
!16385 = !DILocation(line: 788, column: 548, scope: !9923, inlinedAt: !16092)
!16386 = !DILocation(line: 788, column: 560, scope: !9923, inlinedAt: !16092)
!16387 = !DILocation(line: 788, column: 557, scope: !9923, inlinedAt: !16092)
!16388 = !DILocation(line: 788, column: 504, scope: !9923, inlinedAt: !16092)
!16389 = !DILocation(line: 788, column: 573, scope: !9928, inlinedAt: !16092)
!16390 = !DILocation(line: 788, column: 504, scope: !9928, inlinedAt: !16092)
!16391 = !DILocation(line: 788, column: 504, scope: !9600, inlinedAt: !16092)
!16392 = !DILocation(line: 788, column: 501, scope: !9600, inlinedAt: !16092)
!16393 = !DILocation(line: 788, column: 645, scope: !9600, inlinedAt: !16092)
!16394 = !DILocation(line: 788, column: 649, scope: !9600, inlinedAt: !16092)
!16395 = !DILocation(line: 788, column: 659, scope: !9600, inlinedAt: !16092)
!16396 = !DILocation(line: 788, column: 668, scope: !9600, inlinedAt: !16092)
!16397 = !DILocation(line: 788, column: 656, scope: !9600, inlinedAt: !16092)
!16398 = !DILocation(line: 788, column: 677, scope: !9600, inlinedAt: !16092)
!16399 = !DILocation(line: 788, column: 601, scope: !9600, inlinedAt: !16092)
!16400 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !16091)
!16401 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !16091)
!16402 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !16091)
!16403 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !16091)
!16404 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !16091)
!16405 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !16091)
!16406 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !16091)
!16407 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !16091)
!16408 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !16091)
!16409 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !16091)
!16410 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !16091)
!16411 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !16091)
!16412 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !16091)
!16413 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !16091)
!16414 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !16091)
!16415 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !16091)
!16416 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !16091)
!16417 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !16091)
!16418 = !DILocation(line: 788, column: 685, scope: !9600, inlinedAt: !16092)
!16419 = !DILocation(line: 788, column: 694, scope: !9600, inlinedAt: !16092)
!16420 = !DILocation(line: 788, column: 681, scope: !9600, inlinedAt: !16092)
!16421 = !DILocation(line: 788, column: 599, scope: !9600, inlinedAt: !16092)
!16422 = !DILocation(line: 788, column: 711, scope: !9600, inlinedAt: !16092)
!16423 = !DILocation(line: 788, column: 710, scope: !9600, inlinedAt: !16092)
!16424 = !DILocation(line: 788, column: 708, scope: !9600, inlinedAt: !16092)
!16425 = !DILocation(line: 788, column: 732, scope: !9600, inlinedAt: !16092)
!16426 = !DILocation(line: 788, column: 742, scope: !9600, inlinedAt: !16092)
!16427 = !DILocation(line: 788, column: 722, scope: !9967, inlinedAt: !16092)
!16428 = !DILocation(line: 788, column: 753, scope: !9600, inlinedAt: !16092)
!16429 = !DILocation(line: 788, column: 751, scope: !9600, inlinedAt: !16092)
!16430 = !DILocation(line: 788, column: 720, scope: !9600, inlinedAt: !16092)
!16431 = !DILocation(line: 788, column: 772, scope: !9600, inlinedAt: !16092)
!16432 = !DILocation(line: 788, column: 766, scope: !9600, inlinedAt: !16092)
!16433 = !DILocation(line: 788, column: 764, scope: !9600, inlinedAt: !16092)
!16434 = !DILocation(line: 788, column: 793, scope: !9600, inlinedAt: !16092)
!16435 = !DILocation(line: 788, column: 787, scope: !9600, inlinedAt: !16092)
!16436 = !DILocation(line: 788, column: 785, scope: !9600, inlinedAt: !16092)
!16437 = !DILocation(line: 788, column: 804, scope: !9600, inlinedAt: !16092)
!16438 = !DILocation(line: 788, column: 806, scope: !9979, inlinedAt: !16092)
!16439 = !DILocation(line: 788, column: 827, scope: !9981, inlinedAt: !16092)
!16440 = !DILocation(line: 788, column: 822, scope: !9981, inlinedAt: !16092)
!16441 = !DILocation(line: 788, column: 844, scope: !9981, inlinedAt: !16092)
!16442 = !DILocation(line: 788, column: 862, scope: !9981, inlinedAt: !16092)
!16443 = !DILocation(line: 788, column: 874, scope: !9981, inlinedAt: !16092)
!16444 = !DILocation(line: 788, column: 871, scope: !9981, inlinedAt: !16092)
!16445 = !DILocation(line: 788, column: 859, scope: !9981, inlinedAt: !16092)
!16446 = !DILocation(line: 788, column: 843, scope: !9981, inlinedAt: !16092)
!16447 = !DILocation(line: 788, column: 881, scope: !9991, inlinedAt: !16092)
!16448 = !DILocation(line: 788, column: 893, scope: !9991, inlinedAt: !16092)
!16449 = !DILocation(line: 788, column: 890, scope: !9991, inlinedAt: !16092)
!16450 = !DILocation(line: 788, column: 843, scope: !9991, inlinedAt: !16092)
!16451 = !DILocation(line: 788, column: 900, scope: !9996, inlinedAt: !16092)
!16452 = !DILocation(line: 788, column: 843, scope: !9996, inlinedAt: !16092)
!16453 = !DILocation(line: 788, column: 843, scope: !9999, inlinedAt: !16092)
!16454 = !DILocation(line: 788, column: 840, scope: !9999, inlinedAt: !16092)
!16455 = !DILocation(line: 790, column: 18, scope: !9606, inlinedAt: !16092)
!16456 = !DILocation(line: 790, column: 6, scope: !9606, inlinedAt: !16092)
!16457 = !DILocation(line: 790, column: 10, scope: !9606, inlinedAt: !16092)
!16458 = !DILocation(line: 790, column: 16, scope: !9606, inlinedAt: !16092)
!16459 = !DILocation(line: 792, column: 12, scope: !9606, inlinedAt: !16092)
!16460 = !DILocation(line: 2279, column: 69, scope: !16093)
!16461 = !DILocation(line: 2279, column: 20, scope: !16093)
!16462 = !DILocation(line: 2279, column: 20, scope: !16256)
!16463 = !DILocation(line: 2279, column: 20, scope: !16260)
!16464 = !DILocation(line: 2279, column: 18, scope: !16260)
!16465 = !DILocation(line: 2280, column: 29, scope: !16094)
!16466 = !DILocation(line: 2280, column: 27, scope: !16094)
!16467 = !DILocation(line: 2280, column: 44, scope: !16094)
!16468 = !DILocation(line: 2280, column: 40, scope: !16094)
!16469 = !DILocation(line: 2280, column: 35, scope: !16094)
!16470 = !DILocation(line: 2280, column: 53, scope: !16094)
!16471 = !DILocation(line: 2280, column: 24, scope: !16094)
!16472 = !DILocation(line: 2282, column: 22, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16094, file: !1800, line: 2282, column: 17)
!16474 = !DILocation(line: 2282, column: 18, scope: !16473)
!16475 = !DILocation(line: 2282, column: 33, scope: !16473)
!16476 = !DILocation(line: 2282, column: 40, scope: !16473)
!16477 = !DILocation(line: 2282, column: 45, scope: !16473)
!16478 = !DILocation(line: 2282, column: 17, scope: !16094)
!16479 = !DILocation(line: 2283, column: 17, scope: !16473)
!16480 = !DILocation(line: 2285, column: 9, scope: !16094)
!16481 = !DILocation(line: 2286, column: 13, scope: !16071)
!16482 = !DILocation(line: 2286, column: 19, scope: !16071)
!16483 = !DILocation(line: 2286, column: 34, scope: !16071)
!16484 = !DILocation(line: 2286, column: 13, scope: !16072)
!16485 = !DILocation(line: 2287, column: 32, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16071, file: !1800, line: 2286, column: 50)
!16487 = !DILocation(line: 2287, column: 24, scope: !16486)
!16488 = !DILocation(line: 2287, column: 13, scope: !16486)
!16489 = !DILocation(line: 2287, column: 19, scope: !16486)
!16490 = !DILocation(line: 2287, column: 30, scope: !16486)
!16491 = !DILocation(line: 2288, column: 9, scope: !16486)
!16492 = !DILocation(line: 2289, column: 20, scope: !16069)
!16493 = !DILocation(line: 2289, column: 18, scope: !16069)
!16494 = !DILocation(line: 2289, column: 25, scope: !16495)
!16495 = !DILexicalBlockFile(scope: !16068, file: !1800, discriminator: 1)
!16496 = !DILocation(line: 2289, column: 29, scope: !16495)
!16497 = !DILocation(line: 2289, column: 34, scope: !16495)
!16498 = !DILocation(line: 2289, column: 38, scope: !16495)
!16499 = !DILocation(line: 2289, column: 27, scope: !16495)
!16500 = !DILocation(line: 2289, column: 13, scope: !16495)
!16501 = !DILocation(line: 2290, column: 26, scope: !16066)
!16502 = !DILocation(line: 2290, column: 22, scope: !16066)
!16503 = !DILocation(line: 2290, column: 31, scope: !16504)
!16504 = !DILexicalBlockFile(scope: !16065, file: !1800, discriminator: 1)
!16505 = !DILocation(line: 2290, column: 37, scope: !16504)
!16506 = !DILocation(line: 2290, column: 42, scope: !16504)
!16507 = !DILocation(line: 2290, column: 46, scope: !16504)
!16508 = !DILocation(line: 2290, column: 35, scope: !16504)
!16509 = !DILocation(line: 2290, column: 17, scope: !16504)
!16510 = !DILocation(line: 2291, column: 40, scope: !16063)
!16511 = !DILocation(line: 2291, column: 25, scope: !16063)
!16512 = !DILocation(line: 2291, column: 30, scope: !16063)
!16513 = !DILocation(line: 2291, column: 45, scope: !16063)
!16514 = !DILocation(line: 2291, column: 25, scope: !16064)
!16515 = !DILocation(line: 2292, column: 30, scope: !16061)
!16516 = !DILocation(line: 2292, column: 29, scope: !16062)
!16517 = !DILocalVariable(name: "t", scope: !16060, file: !1800, line: 2293, type: !1012)
!16518 = !DILocation(line: 2293, column: 33, scope: !16060)
!16519 = !DILocation(line: 2293, column: 46, scope: !16060)
!16520 = !DILocation(line: 2293, column: 67, scope: !16060)
!16521 = !DILocation(line: 2293, column: 37, scope: !16060)
!16522 = !DILocation(line: 785, column: 30, scope: !9606, inlinedAt: !16059)
!16523 = !DILocation(line: 785, column: 34, scope: !9606, inlinedAt: !16059)
!16524 = !DILocation(line: 785, column: 118, scope: !9606, inlinedAt: !16059)
!16525 = !DILocation(line: 785, column: 122, scope: !9606, inlinedAt: !16059)
!16526 = !DILocation(line: 786, column: 60, scope: !9606, inlinedAt: !16059)
!16527 = !DILocation(line: 786, column: 64, scope: !9606, inlinedAt: !16059)
!16528 = !DILocation(line: 786, column: 74, scope: !9606, inlinedAt: !16059)
!16529 = !DILocation(line: 786, column: 83, scope: !9606, inlinedAt: !16059)
!16530 = !DILocation(line: 786, column: 71, scope: !9606, inlinedAt: !16059)
!16531 = !DILocation(line: 786, column: 92, scope: !9606, inlinedAt: !16059)
!16532 = !DILocation(line: 786, column: 16, scope: !9606, inlinedAt: !16059)
!16533 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !16078)
!16534 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !16078)
!16535 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !16078)
!16536 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !16078)
!16537 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !16078)
!16538 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !16078)
!16539 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !16078)
!16540 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !16078)
!16541 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !16078)
!16542 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !16078)
!16543 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !16078)
!16544 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !16078)
!16545 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !16078)
!16546 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !16078)
!16547 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !16078)
!16548 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !16078)
!16549 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !16078)
!16550 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !16078)
!16551 = !DILocation(line: 786, column: 100, scope: !9606, inlinedAt: !16059)
!16552 = !DILocation(line: 786, column: 109, scope: !9606, inlinedAt: !16059)
!16553 = !DILocation(line: 786, column: 96, scope: !9606, inlinedAt: !16059)
!16554 = !DILocation(line: 786, column: 14, scope: !9606, inlinedAt: !16059)
!16555 = !DILocation(line: 788, column: 64, scope: !9829, inlinedAt: !16059)
!16556 = !DILocation(line: 788, column: 74, scope: !9829, inlinedAt: !16059)
!16557 = !DILocation(line: 788, column: 54, scope: !9829, inlinedAt: !16059)
!16558 = !DILocation(line: 788, column: 52, scope: !9829, inlinedAt: !16059)
!16559 = !DILocation(line: 788, column: 94, scope: !9829, inlinedAt: !16059)
!16560 = !DILocation(line: 788, column: 88, scope: !9829, inlinedAt: !16059)
!16561 = !DILocation(line: 788, column: 86, scope: !9829, inlinedAt: !16059)
!16562 = !DILocation(line: 788, column: 115, scope: !9829, inlinedAt: !16059)
!16563 = !DILocation(line: 788, column: 109, scope: !9829, inlinedAt: !16059)
!16564 = !DILocation(line: 788, column: 107, scope: !9829, inlinedAt: !16059)
!16565 = !DILocation(line: 788, column: 130, scope: !9829, inlinedAt: !16059)
!16566 = !DILocation(line: 788, column: 140, scope: !9829, inlinedAt: !16059)
!16567 = !DILocation(line: 788, column: 144, scope: !9829, inlinedAt: !16059)
!16568 = !DILocation(line: 788, column: 147, scope: !9843, inlinedAt: !16059)
!16569 = !DILocation(line: 788, column: 149, scope: !9843, inlinedAt: !16059)
!16570 = !DILocation(line: 788, column: 130, scope: !9843, inlinedAt: !16059)
!16571 = !DILocation(line: 788, column: 169, scope: !9847, inlinedAt: !16059)
!16572 = !DILocation(line: 788, column: 187, scope: !9847, inlinedAt: !16059)
!16573 = !DILocation(line: 788, column: 199, scope: !9847, inlinedAt: !16059)
!16574 = !DILocation(line: 788, column: 196, scope: !9847, inlinedAt: !16059)
!16575 = !DILocation(line: 788, column: 184, scope: !9847, inlinedAt: !16059)
!16576 = !DILocation(line: 788, column: 168, scope: !9847, inlinedAt: !16059)
!16577 = !DILocation(line: 788, column: 209, scope: !9854, inlinedAt: !16059)
!16578 = !DILocation(line: 788, column: 221, scope: !9854, inlinedAt: !16059)
!16579 = !DILocation(line: 788, column: 218, scope: !9854, inlinedAt: !16059)
!16580 = !DILocation(line: 788, column: 168, scope: !9854, inlinedAt: !16059)
!16581 = !DILocation(line: 788, column: 231, scope: !9859, inlinedAt: !16059)
!16582 = !DILocation(line: 788, column: 168, scope: !9859, inlinedAt: !16059)
!16583 = !DILocation(line: 788, column: 168, scope: !9625, inlinedAt: !16059)
!16584 = !DILocation(line: 788, column: 165, scope: !9625, inlinedAt: !16059)
!16585 = !DILocation(line: 788, column: 303, scope: !9625, inlinedAt: !16059)
!16586 = !DILocation(line: 788, column: 307, scope: !9625, inlinedAt: !16059)
!16587 = !DILocation(line: 788, column: 317, scope: !9625, inlinedAt: !16059)
!16588 = !DILocation(line: 788, column: 326, scope: !9625, inlinedAt: !16059)
!16589 = !DILocation(line: 788, column: 314, scope: !9625, inlinedAt: !16059)
!16590 = !DILocation(line: 788, column: 335, scope: !9625, inlinedAt: !16059)
!16591 = !DILocation(line: 788, column: 259, scope: !9625, inlinedAt: !16059)
!16592 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !16076)
!16593 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !16076)
!16594 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !16076)
!16595 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !16076)
!16596 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !16076)
!16597 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !16076)
!16598 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !16076)
!16599 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !16076)
!16600 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !16076)
!16601 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !16076)
!16602 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !16076)
!16603 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !16076)
!16604 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !16076)
!16605 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !16076)
!16606 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !16076)
!16607 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !16076)
!16608 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !16076)
!16609 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !16076)
!16610 = !DILocation(line: 788, column: 343, scope: !9625, inlinedAt: !16059)
!16611 = !DILocation(line: 788, column: 352, scope: !9625, inlinedAt: !16059)
!16612 = !DILocation(line: 788, column: 339, scope: !9625, inlinedAt: !16059)
!16613 = !DILocation(line: 788, column: 257, scope: !9625, inlinedAt: !16059)
!16614 = !DILocation(line: 788, column: 369, scope: !9625, inlinedAt: !16059)
!16615 = !DILocation(line: 788, column: 368, scope: !9625, inlinedAt: !16059)
!16616 = !DILocation(line: 788, column: 366, scope: !9625, inlinedAt: !16059)
!16617 = !DILocation(line: 788, column: 390, scope: !9625, inlinedAt: !16059)
!16618 = !DILocation(line: 788, column: 400, scope: !9625, inlinedAt: !16059)
!16619 = !DILocation(line: 788, column: 380, scope: !9898, inlinedAt: !16059)
!16620 = !DILocation(line: 788, column: 411, scope: !9625, inlinedAt: !16059)
!16621 = !DILocation(line: 788, column: 409, scope: !9625, inlinedAt: !16059)
!16622 = !DILocation(line: 788, column: 378, scope: !9625, inlinedAt: !16059)
!16623 = !DILocation(line: 788, column: 430, scope: !9625, inlinedAt: !16059)
!16624 = !DILocation(line: 788, column: 424, scope: !9625, inlinedAt: !16059)
!16625 = !DILocation(line: 788, column: 422, scope: !9625, inlinedAt: !16059)
!16626 = !DILocation(line: 788, column: 451, scope: !9625, inlinedAt: !16059)
!16627 = !DILocation(line: 788, column: 445, scope: !9625, inlinedAt: !16059)
!16628 = !DILocation(line: 788, column: 443, scope: !9625, inlinedAt: !16059)
!16629 = !DILocation(line: 788, column: 466, scope: !9625, inlinedAt: !16059)
!16630 = !DILocation(line: 788, column: 476, scope: !9625, inlinedAt: !16059)
!16631 = !DILocation(line: 788, column: 480, scope: !9625, inlinedAt: !16059)
!16632 = !DILocation(line: 788, column: 483, scope: !9912, inlinedAt: !16059)
!16633 = !DILocation(line: 788, column: 485, scope: !9912, inlinedAt: !16059)
!16634 = !DILocation(line: 788, column: 466, scope: !9912, inlinedAt: !16059)
!16635 = !DILocation(line: 788, column: 505, scope: !9916, inlinedAt: !16059)
!16636 = !DILocation(line: 788, column: 523, scope: !9916, inlinedAt: !16059)
!16637 = !DILocation(line: 788, column: 535, scope: !9916, inlinedAt: !16059)
!16638 = !DILocation(line: 788, column: 532, scope: !9916, inlinedAt: !16059)
!16639 = !DILocation(line: 788, column: 520, scope: !9916, inlinedAt: !16059)
!16640 = !DILocation(line: 788, column: 504, scope: !9916, inlinedAt: !16059)
!16641 = !DILocation(line: 788, column: 548, scope: !9923, inlinedAt: !16059)
!16642 = !DILocation(line: 788, column: 560, scope: !9923, inlinedAt: !16059)
!16643 = !DILocation(line: 788, column: 557, scope: !9923, inlinedAt: !16059)
!16644 = !DILocation(line: 788, column: 504, scope: !9923, inlinedAt: !16059)
!16645 = !DILocation(line: 788, column: 573, scope: !9928, inlinedAt: !16059)
!16646 = !DILocation(line: 788, column: 504, scope: !9928, inlinedAt: !16059)
!16647 = !DILocation(line: 788, column: 504, scope: !9600, inlinedAt: !16059)
!16648 = !DILocation(line: 788, column: 501, scope: !9600, inlinedAt: !16059)
!16649 = !DILocation(line: 788, column: 645, scope: !9600, inlinedAt: !16059)
!16650 = !DILocation(line: 788, column: 649, scope: !9600, inlinedAt: !16059)
!16651 = !DILocation(line: 788, column: 659, scope: !9600, inlinedAt: !16059)
!16652 = !DILocation(line: 788, column: 668, scope: !9600, inlinedAt: !16059)
!16653 = !DILocation(line: 788, column: 656, scope: !9600, inlinedAt: !16059)
!16654 = !DILocation(line: 788, column: 677, scope: !9600, inlinedAt: !16059)
!16655 = !DILocation(line: 788, column: 601, scope: !9600, inlinedAt: !16059)
!16656 = !DILocation(line: 68, column: 16, scope: !6136, inlinedAt: !16058)
!16657 = !DILocation(line: 68, column: 19, scope: !6136, inlinedAt: !16058)
!16658 = !DILocation(line: 68, column: 24, scope: !6136, inlinedAt: !16058)
!16659 = !DILocation(line: 68, column: 38, scope: !6136, inlinedAt: !16058)
!16660 = !DILocation(line: 68, column: 41, scope: !6136, inlinedAt: !16058)
!16661 = !DILocation(line: 68, column: 46, scope: !6136, inlinedAt: !16058)
!16662 = !DILocation(line: 68, column: 34, scope: !6136, inlinedAt: !16058)
!16663 = !DILocation(line: 68, column: 57, scope: !6136, inlinedAt: !16058)
!16664 = !DILocation(line: 68, column: 69, scope: !6136, inlinedAt: !16058)
!16665 = !DILocation(line: 68, column: 72, scope: !6136, inlinedAt: !16058)
!16666 = !DILocation(line: 68, column: 79, scope: !6136, inlinedAt: !16058)
!16667 = !DILocation(line: 68, column: 84, scope: !6136, inlinedAt: !16058)
!16668 = !DILocation(line: 68, column: 99, scope: !6136, inlinedAt: !16058)
!16669 = !DILocation(line: 68, column: 102, scope: !6136, inlinedAt: !16058)
!16670 = !DILocation(line: 68, column: 109, scope: !6136, inlinedAt: !16058)
!16671 = !DILocation(line: 68, column: 114, scope: !6136, inlinedAt: !16058)
!16672 = !DILocation(line: 68, column: 94, scope: !6136, inlinedAt: !16058)
!16673 = !DILocation(line: 68, column: 63, scope: !6136, inlinedAt: !16058)
!16674 = !DILocation(line: 788, column: 685, scope: !9600, inlinedAt: !16059)
!16675 = !DILocation(line: 788, column: 694, scope: !9600, inlinedAt: !16059)
!16676 = !DILocation(line: 788, column: 681, scope: !9600, inlinedAt: !16059)
!16677 = !DILocation(line: 788, column: 599, scope: !9600, inlinedAt: !16059)
!16678 = !DILocation(line: 788, column: 711, scope: !9600, inlinedAt: !16059)
!16679 = !DILocation(line: 788, column: 710, scope: !9600, inlinedAt: !16059)
!16680 = !DILocation(line: 788, column: 708, scope: !9600, inlinedAt: !16059)
!16681 = !DILocation(line: 788, column: 732, scope: !9600, inlinedAt: !16059)
!16682 = !DILocation(line: 788, column: 742, scope: !9600, inlinedAt: !16059)
!16683 = !DILocation(line: 788, column: 722, scope: !9967, inlinedAt: !16059)
!16684 = !DILocation(line: 788, column: 753, scope: !9600, inlinedAt: !16059)
!16685 = !DILocation(line: 788, column: 751, scope: !9600, inlinedAt: !16059)
!16686 = !DILocation(line: 788, column: 720, scope: !9600, inlinedAt: !16059)
!16687 = !DILocation(line: 788, column: 772, scope: !9600, inlinedAt: !16059)
!16688 = !DILocation(line: 788, column: 766, scope: !9600, inlinedAt: !16059)
!16689 = !DILocation(line: 788, column: 764, scope: !9600, inlinedAt: !16059)
!16690 = !DILocation(line: 788, column: 793, scope: !9600, inlinedAt: !16059)
!16691 = !DILocation(line: 788, column: 787, scope: !9600, inlinedAt: !16059)
!16692 = !DILocation(line: 788, column: 785, scope: !9600, inlinedAt: !16059)
!16693 = !DILocation(line: 788, column: 804, scope: !9600, inlinedAt: !16059)
!16694 = !DILocation(line: 788, column: 806, scope: !9979, inlinedAt: !16059)
!16695 = !DILocation(line: 788, column: 827, scope: !9981, inlinedAt: !16059)
!16696 = !DILocation(line: 788, column: 822, scope: !9981, inlinedAt: !16059)
!16697 = !DILocation(line: 788, column: 844, scope: !9981, inlinedAt: !16059)
!16698 = !DILocation(line: 788, column: 862, scope: !9981, inlinedAt: !16059)
!16699 = !DILocation(line: 788, column: 874, scope: !9981, inlinedAt: !16059)
!16700 = !DILocation(line: 788, column: 871, scope: !9981, inlinedAt: !16059)
!16701 = !DILocation(line: 788, column: 859, scope: !9981, inlinedAt: !16059)
!16702 = !DILocation(line: 788, column: 843, scope: !9981, inlinedAt: !16059)
!16703 = !DILocation(line: 788, column: 881, scope: !9991, inlinedAt: !16059)
!16704 = !DILocation(line: 788, column: 893, scope: !9991, inlinedAt: !16059)
!16705 = !DILocation(line: 788, column: 890, scope: !9991, inlinedAt: !16059)
!16706 = !DILocation(line: 788, column: 843, scope: !9991, inlinedAt: !16059)
!16707 = !DILocation(line: 788, column: 900, scope: !9996, inlinedAt: !16059)
!16708 = !DILocation(line: 788, column: 843, scope: !9996, inlinedAt: !16059)
!16709 = !DILocation(line: 788, column: 843, scope: !9999, inlinedAt: !16059)
!16710 = !DILocation(line: 788, column: 840, scope: !9999, inlinedAt: !16059)
!16711 = !DILocation(line: 790, column: 18, scope: !9606, inlinedAt: !16059)
!16712 = !DILocation(line: 790, column: 6, scope: !9606, inlinedAt: !16059)
!16713 = !DILocation(line: 790, column: 10, scope: !9606, inlinedAt: !16059)
!16714 = !DILocation(line: 790, column: 16, scope: !9606, inlinedAt: !16059)
!16715 = !DILocation(line: 792, column: 12, scope: !9606, inlinedAt: !16059)
!16716 = !DILocation(line: 2293, column: 80, scope: !16060)
!16717 = !DILocation(line: 2294, column: 33, scope: !16718)
!16718 = distinct !DILexicalBlock(scope: !16060, file: !1800, line: 2294, column: 33)
!16719 = !DILocation(line: 2294, column: 33, scope: !16060)
!16720 = !DILocalVariable(name: "s", scope: !16721, file: !1800, line: 2295, type: !1012)
!16721 = distinct !DILexicalBlock(scope: !16718, file: !1800, line: 2294, column: 36)
!16722 = !DILocation(line: 2295, column: 37, scope: !16721)
!16723 = !DILocation(line: 2296, column: 45, scope: !16721)
!16724 = !DILocation(line: 2296, column: 42, scope: !16721)
!16725 = !DILocation(line: 2296, column: 35, scope: !16721)
!16726 = !DILocation(line: 2297, column: 37, scope: !16727)
!16727 = distinct !DILexicalBlock(scope: !16721, file: !1800, line: 2297, column: 37)
!16728 = !DILocation(line: 2297, column: 37, scope: !16721)
!16729 = !DILocation(line: 2298, column: 47, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16727, file: !1800, line: 2297, column: 43)
!16731 = !DILocation(line: 2298, column: 49, scope: !16730)
!16732 = !DILocation(line: 2298, column: 44, scope: !16730)
!16733 = !DILocation(line: 2298, column: 39, scope: !16730)
!16734 = !DILocation(line: 2299, column: 39, scope: !16730)
!16735 = !DILocation(line: 2300, column: 33, scope: !16730)
!16736 = !DILocation(line: 2301, column: 49, scope: !16721)
!16737 = !DILocation(line: 2301, column: 47, scope: !16721)
!16738 = !DILocation(line: 2301, column: 61, scope: !16721)
!16739 = !DILocation(line: 2301, column: 57, scope: !16721)
!16740 = !DILocation(line: 2301, column: 52, scope: !16721)
!16741 = !DILocation(line: 2301, column: 79, scope: !16721)
!16742 = !DILocation(line: 2301, column: 77, scope: !16721)
!16743 = !DILocation(line: 2301, column: 70, scope: !16721)
!16744 = !DILocation(line: 2301, column: 44, scope: !16721)
!16745 = !DILocation(line: 2303, column: 42, scope: !16746)
!16746 = distinct !DILexicalBlock(scope: !16721, file: !1800, line: 2303, column: 37)
!16747 = !DILocation(line: 2303, column: 38, scope: !16746)
!16748 = !DILocation(line: 2303, column: 53, scope: !16746)
!16749 = !DILocation(line: 2303, column: 60, scope: !16746)
!16750 = !DILocation(line: 2303, column: 65, scope: !16746)
!16751 = !DILocation(line: 2303, column: 37, scope: !16721)
!16752 = !DILocation(line: 2304, column: 37, scope: !16746)
!16753 = !DILocation(line: 2306, column: 29, scope: !16721)
!16754 = !DILocation(line: 2307, column: 25, scope: !16060)
!16755 = !DILocation(line: 2308, column: 46, scope: !16062)
!16756 = !DILocation(line: 2308, column: 39, scope: !16062)
!16757 = !DILocation(line: 2308, column: 25, scope: !16062)
!16758 = !DILocation(line: 2308, column: 36, scope: !16062)
!16759 = !DILocation(line: 2308, column: 31, scope: !16062)
!16760 = !DILocation(line: 2308, column: 44, scope: !16062)
!16761 = !DILocation(line: 2309, column: 21, scope: !16062)
!16762 = !DILocation(line: 2310, column: 17, scope: !16064)
!16763 = !DILocation(line: 2290, column: 58, scope: !16764)
!16764 = !DILexicalBlockFile(scope: !16065, file: !1800, discriminator: 2)
!16765 = !DILocation(line: 2290, column: 65, scope: !16764)
!16766 = !DILocation(line: 2290, column: 17, scope: !16764)
!16767 = distinct !{!16767, !16768}
!16768 = !DILocation(line: 2290, column: 17, scope: !16067)
!16769 = !DILocation(line: 2311, column: 13, scope: !16067)
!16770 = !DILocation(line: 2289, column: 58, scope: !16771)
!16771 = !DILexicalBlockFile(scope: !16068, file: !1800, discriminator: 2)
!16772 = !DILocation(line: 2289, column: 13, scope: !16771)
!16773 = distinct !{!16773, !16774}
!16774 = !DILocation(line: 2289, column: 13, scope: !16070)
!16775 = !DILocation(line: 2313, column: 5, scope: !16072)
!16776 = !DILocation(line: 2272, column: 32, scope: !16777)
!16777 = !DILexicalBlockFile(scope: !16073, file: !1800, discriminator: 2)
!16778 = !DILocation(line: 2272, column: 5, scope: !16777)
!16779 = distinct !{!16779, !16780}
!16780 = !DILocation(line: 2272, column: 5, scope: !16056)
!16781 = !DILocation(line: 2314, column: 5, scope: !16056)
!16782 = !DILocation(line: 2315, column: 1, scope: !16056)
!16783 = distinct !DISubprogram(name: "skip_data_stream_element", scope: !1800, file: !1800, line: 1248, type: !15845, isLocal: true, isDefinition: true, scopeLine: 1249, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!16784 = !DILocalVariable(name: "ac", arg: 1, scope: !16783, file: !1800, line: 1248, type: !2071)
!16785 = !DILocation(line: 1248, column: 49, scope: !16783)
!16786 = !DILocalVariable(name: "gb", arg: 2, scope: !16783, file: !1800, line: 1248, type: !2041)
!16787 = !DILocation(line: 1248, column: 68, scope: !16783)
!16788 = !DILocalVariable(name: "byte_align", scope: !16783, file: !1800, line: 1250, type: !1012)
!16789 = !DILocation(line: 1250, column: 9, scope: !16783)
!16790 = !DILocation(line: 1250, column: 32, scope: !16783)
!16791 = !DILocation(line: 1250, column: 22, scope: !16783)
!16792 = !DILocalVariable(name: "count", scope: !16783, file: !1800, line: 1251, type: !1012)
!16793 = !DILocation(line: 1251, column: 9, scope: !16783)
!16794 = !DILocation(line: 1251, column: 26, scope: !16783)
!16795 = !DILocation(line: 1251, column: 17, scope: !16783)
!16796 = !DILocation(line: 1252, column: 9, scope: !16797)
!16797 = distinct !DILexicalBlock(scope: !16783, file: !1800, line: 1252, column: 9)
!16798 = !DILocation(line: 1252, column: 15, scope: !16797)
!16799 = !DILocation(line: 1252, column: 9, scope: !16783)
!16800 = !DILocation(line: 1253, column: 27, scope: !16797)
!16801 = !DILocation(line: 1253, column: 18, scope: !16797)
!16802 = !DILocation(line: 1253, column: 15, scope: !16797)
!16803 = !DILocation(line: 1253, column: 9, scope: !16797)
!16804 = !DILocation(line: 1254, column: 9, scope: !16805)
!16805 = distinct !DILexicalBlock(scope: !16783, file: !1800, line: 1254, column: 9)
!16806 = !DILocation(line: 1254, column: 9, scope: !16783)
!16807 = !DILocation(line: 1255, column: 24, scope: !16805)
!16808 = !DILocation(line: 1255, column: 9, scope: !16805)
!16809 = !DILocation(line: 1257, column: 23, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16783, file: !1800, line: 1257, column: 9)
!16811 = !DILocation(line: 1257, column: 9, scope: !16810)
!16812 = !DILocation(line: 1257, column: 33, scope: !16810)
!16813 = !DILocation(line: 1257, column: 31, scope: !16810)
!16814 = !DILocation(line: 1257, column: 27, scope: !16810)
!16815 = !DILocation(line: 1257, column: 9, scope: !16783)
!16816 = !DILocation(line: 1258, column: 16, scope: !16817)
!16817 = distinct !DILexicalBlock(scope: !16810, file: !1800, line: 1257, column: 40)
!16818 = !DILocation(line: 1258, column: 20, scope: !16817)
!16819 = !DILocation(line: 1258, column: 9, scope: !16817)
!16820 = !DILocation(line: 1259, column: 9, scope: !16817)
!16821 = !DILocation(line: 1261, column: 20, scope: !16783)
!16822 = !DILocation(line: 1261, column: 28, scope: !16783)
!16823 = !DILocation(line: 1261, column: 26, scope: !16783)
!16824 = !DILocation(line: 1261, column: 5, scope: !16783)
!16825 = !DILocation(line: 1262, column: 5, scope: !16783)
!16826 = !DILocation(line: 1263, column: 1, scope: !16783)
!16827 = distinct !DISubprogram(name: "pop_output_configuration", scope: !1800, file: !1800, line: 424, type: !3286, isLocal: true, isDefinition: true, scopeLine: 424, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!16828 = !DILocalVariable(name: "ac", arg: 1, scope: !16827, file: !1800, line: 424, type: !2071)
!16829 = !DILocation(line: 424, column: 50, scope: !16827)
!16830 = !DILocation(line: 425, column: 9, scope: !16831)
!16831 = distinct !DILexicalBlock(scope: !16827, file: !1800, line: 425, column: 9)
!16832 = !DILocation(line: 425, column: 13, scope: !16831)
!16833 = !DILocation(line: 425, column: 19, scope: !16831)
!16834 = !DILocation(line: 425, column: 26, scope: !16831)
!16835 = !DILocation(line: 425, column: 39, scope: !16831)
!16836 = !DILocation(line: 425, column: 42, scope: !16837)
!16837 = !DILexicalBlockFile(scope: !16831, file: !1800, discriminator: 1)
!16838 = !DILocation(line: 425, column: 46, scope: !16837)
!16839 = !DILocation(line: 425, column: 52, scope: !16837)
!16840 = !DILocation(line: 425, column: 59, scope: !16837)
!16841 = !DILocation(line: 425, column: 9, scope: !16837)
!16842 = !DILocation(line: 426, column: 9, scope: !16843)
!16843 = distinct !DILexicalBlock(scope: !16831, file: !1800, line: 425, column: 71)
!16844 = !DILocation(line: 426, column: 13, scope: !16843)
!16845 = !DILocation(line: 426, column: 21, scope: !16843)
!16846 = !DILocation(line: 426, column: 25, scope: !16843)
!16847 = !DILocation(line: 427, column: 31, scope: !16843)
!16848 = !DILocation(line: 427, column: 35, scope: !16843)
!16849 = !DILocation(line: 427, column: 41, scope: !16843)
!16850 = !DILocation(line: 427, column: 9, scope: !16843)
!16851 = !DILocation(line: 427, column: 13, scope: !16843)
!16852 = !DILocation(line: 427, column: 20, scope: !16843)
!16853 = !DILocation(line: 427, column: 29, scope: !16843)
!16854 = !DILocation(line: 428, column: 37, scope: !16843)
!16855 = !DILocation(line: 428, column: 41, scope: !16843)
!16856 = !DILocation(line: 428, column: 47, scope: !16843)
!16857 = !DILocation(line: 428, column: 9, scope: !16843)
!16858 = !DILocation(line: 428, column: 13, scope: !16843)
!16859 = !DILocation(line: 428, column: 20, scope: !16843)
!16860 = !DILocation(line: 428, column: 35, scope: !16843)
!16861 = !DILocation(line: 429, column: 26, scope: !16843)
!16862 = !DILocation(line: 429, column: 30, scope: !16843)
!16863 = !DILocation(line: 429, column: 34, scope: !16843)
!16864 = !DILocation(line: 429, column: 40, scope: !16843)
!16865 = !DILocation(line: 429, column: 52, scope: !16843)
!16866 = !DILocation(line: 429, column: 56, scope: !16843)
!16867 = !DILocation(line: 429, column: 62, scope: !16843)
!16868 = !DILocation(line: 430, column: 26, scope: !16843)
!16869 = !DILocation(line: 430, column: 30, scope: !16843)
!16870 = !DILocation(line: 430, column: 36, scope: !16843)
!16871 = !DILocation(line: 429, column: 9, scope: !16843)
!16872 = !DILocation(line: 431, column: 5, scope: !16843)
!16873 = !DILocation(line: 432, column: 1, scope: !16827)
!16874 = distinct !DISubprogram(name: "decode_extension_payload", scope: !1800, file: !1800, line: 2421, type: !16875, isLocal: true, isDefinition: true, scopeLine: 2423, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!16875 = !DISubroutineType(types: !16876)
!16876 = !{!1012, !2071, !2041, !1012, !2101, !930}
!16877 = !DILocalVariable(name: "ac", arg: 1, scope: !16874, file: !1800, line: 2421, type: !2071)
!16878 = !DILocation(line: 2421, column: 49, scope: !16874)
!16879 = !DILocalVariable(name: "gb", arg: 2, scope: !16874, file: !1800, line: 2421, type: !2041)
!16880 = !DILocation(line: 2421, column: 68, scope: !16874)
!16881 = !DILocalVariable(name: "cnt", arg: 3, scope: !16874, file: !1800, line: 2421, type: !1012)
!16882 = !DILocation(line: 2421, column: 76, scope: !16874)
!16883 = !DILocalVariable(name: "che", arg: 4, scope: !16874, file: !1800, line: 2422, type: !2101)
!16884 = !DILocation(line: 2422, column: 53, scope: !16874)
!16885 = !DILocalVariable(name: "elem_type", arg: 5, scope: !16874, file: !1800, line: 2422, type: !930)
!16886 = !DILocation(line: 2422, column: 80, scope: !16874)
!16887 = !DILocalVariable(name: "crc_flag", scope: !16874, file: !1800, line: 2424, type: !1012)
!16888 = !DILocation(line: 2424, column: 9, scope: !16874)
!16889 = !DILocalVariable(name: "res", scope: !16874, file: !1800, line: 2425, type: !1012)
!16890 = !DILocation(line: 2425, column: 9, scope: !16874)
!16891 = !DILocation(line: 2425, column: 15, scope: !16874)
!16892 = !DILocalVariable(name: "type", scope: !16874, file: !1800, line: 2426, type: !1012)
!16893 = !DILocation(line: 2426, column: 9, scope: !16874)
!16894 = !DILocation(line: 2426, column: 25, scope: !16874)
!16895 = !DILocation(line: 2426, column: 16, scope: !16874)
!16896 = !DILocation(line: 2428, column: 9, scope: !16897)
!16897 = distinct !DILexicalBlock(scope: !16874, file: !1800, line: 2428, column: 9)
!16898 = !DILocation(line: 2428, column: 13, scope: !16897)
!16899 = !DILocation(line: 2428, column: 20, scope: !16897)
!16900 = !DILocation(line: 2428, column: 26, scope: !16897)
!16901 = !DILocation(line: 2428, column: 9, scope: !16874)
!16902 = !DILocation(line: 2429, column: 16, scope: !16897)
!16903 = !DILocation(line: 2429, column: 20, scope: !16897)
!16904 = !DILocation(line: 2429, column: 62, scope: !16897)
!16905 = !DILocation(line: 2429, column: 68, scope: !16897)
!16906 = !DILocation(line: 2429, column: 9, scope: !16897)
!16907 = !DILocation(line: 2431, column: 13, scope: !16874)
!16908 = !DILocation(line: 2431, column: 5, scope: !16874)
!16909 = !DILocation(line: 2433, column: 17, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16874, file: !1800, line: 2431, column: 19)
!16911 = !DILocation(line: 2433, column: 9, scope: !16910)
!16912 = !DILocation(line: 2435, column: 14, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16910, file: !1800, line: 2435, column: 13)
!16914 = !DILocation(line: 2435, column: 13, scope: !16910)
!16915 = !DILocation(line: 2436, column: 20, scope: !16916)
!16916 = distinct !DILexicalBlock(scope: !16913, file: !1800, line: 2435, column: 19)
!16917 = !DILocation(line: 2436, column: 24, scope: !16916)
!16918 = !DILocation(line: 2436, column: 13, scope: !16916)
!16919 = !DILocation(line: 2437, column: 20, scope: !16916)
!16920 = !DILocation(line: 2437, column: 13, scope: !16916)
!16921 = !DILocation(line: 2438, column: 20, scope: !16922)
!16922 = distinct !DILexicalBlock(scope: !16913, file: !1800, line: 2438, column: 20)
!16923 = !DILocation(line: 2438, column: 24, scope: !16922)
!16924 = !DILocation(line: 2438, column: 30, scope: !16922)
!16925 = !DILocation(line: 2438, column: 35, scope: !16922)
!16926 = !DILocation(line: 2438, column: 20, scope: !16913)
!16927 = !DILocation(line: 2439, column: 18, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16929, file: !1800, line: 2439, column: 17)
!16929 = distinct !DILexicalBlock(scope: !16922, file: !1800, line: 2438, column: 55)
!16930 = !DILocation(line: 2439, column: 22, scope: !16928)
!16931 = !DILocation(line: 2439, column: 17, scope: !16929)
!16932 = !DILocation(line: 2440, column: 45, scope: !16928)
!16933 = !DILocation(line: 2440, column: 49, scope: !16928)
!16934 = !DILocation(line: 2440, column: 15, scope: !16928)
!16935 = !DILocation(line: 2442, column: 13, scope: !16929)
!16936 = !DILocation(line: 2442, column: 17, scope: !16929)
!16937 = !DILocation(line: 2442, column: 32, scope: !16929)
!16938 = !DILocation(line: 2443, column: 28, scope: !16929)
!16939 = !DILocation(line: 2443, column: 36, scope: !16929)
!16940 = !DILocation(line: 2443, column: 34, scope: !16929)
!16941 = !DILocation(line: 2443, column: 40, scope: !16929)
!16942 = !DILocation(line: 2443, column: 13, scope: !16929)
!16943 = !DILocation(line: 2444, column: 20, scope: !16929)
!16944 = !DILocation(line: 2444, column: 13, scope: !16929)
!16945 = !DILocation(line: 2445, column: 21, scope: !16946)
!16946 = distinct !DILexicalBlock(scope: !16922, file: !1800, line: 2445, column: 20)
!16947 = !DILocation(line: 2445, column: 25, scope: !16946)
!16948 = !DILocation(line: 2445, column: 31, scope: !16946)
!16949 = !DILocation(line: 2445, column: 36, scope: !16946)
!16950 = !DILocation(line: 2445, column: 20, scope: !16922)
!16951 = !DILocation(line: 2446, column: 20, scope: !16952)
!16952 = distinct !DILexicalBlock(scope: !16946, file: !1800, line: 2445, column: 41)
!16953 = !DILocation(line: 2446, column: 24, scope: !16952)
!16954 = !DILocation(line: 2446, column: 13, scope: !16952)
!16955 = !DILocation(line: 2447, column: 28, scope: !16952)
!16956 = !DILocation(line: 2447, column: 36, scope: !16952)
!16957 = !DILocation(line: 2447, column: 34, scope: !16952)
!16958 = !DILocation(line: 2447, column: 40, scope: !16952)
!16959 = !DILocation(line: 2447, column: 13, scope: !16952)
!16960 = !DILocation(line: 2448, column: 20, scope: !16952)
!16961 = !DILocation(line: 2448, column: 13, scope: !16952)
!16962 = !DILocation(line: 2449, column: 20, scope: !16963)
!16963 = distinct !DILexicalBlock(scope: !16946, file: !1800, line: 2449, column: 20)
!16964 = !DILocation(line: 2449, column: 24, scope: !16963)
!16965 = !DILocation(line: 2449, column: 30, scope: !16963)
!16966 = !DILocation(line: 2449, column: 35, scope: !16963)
!16967 = !DILocation(line: 2449, column: 39, scope: !16963)
!16968 = !DILocation(line: 2449, column: 45, scope: !16963)
!16969 = !DILocation(line: 2449, column: 48, scope: !16970)
!16970 = !DILexicalBlockFile(scope: !16963, file: !1800, discriminator: 1)
!16971 = !DILocation(line: 2449, column: 52, scope: !16970)
!16972 = !DILocation(line: 2449, column: 58, scope: !16970)
!16973 = !DILocation(line: 2449, column: 65, scope: !16970)
!16974 = !DILocation(line: 2449, column: 20, scope: !16970)
!16975 = !DILocation(line: 2450, column: 20, scope: !16976)
!16976 = distinct !DILexicalBlock(scope: !16963, file: !1800, line: 2449, column: 79)
!16977 = !DILocation(line: 2450, column: 24, scope: !16976)
!16978 = !DILocation(line: 2450, column: 13, scope: !16976)
!16979 = !DILocation(line: 2451, column: 28, scope: !16976)
!16980 = !DILocation(line: 2451, column: 36, scope: !16976)
!16981 = !DILocation(line: 2451, column: 34, scope: !16976)
!16982 = !DILocation(line: 2451, column: 40, scope: !16976)
!16983 = !DILocation(line: 2451, column: 13, scope: !16976)
!16984 = !DILocation(line: 2452, column: 20, scope: !16976)
!16985 = !DILocation(line: 2452, column: 13, scope: !16976)
!16986 = !DILocation(line: 2453, column: 20, scope: !16987)
!16987 = distinct !DILexicalBlock(scope: !16963, file: !1800, line: 2453, column: 20)
!16988 = !DILocation(line: 2453, column: 24, scope: !16987)
!16989 = !DILocation(line: 2453, column: 30, scope: !16987)
!16990 = !DILocation(line: 2453, column: 35, scope: !16987)
!16991 = !DILocation(line: 2453, column: 38, scope: !16987)
!16992 = !DILocation(line: 2453, column: 44, scope: !16987)
!16993 = !DILocation(line: 2453, column: 47, scope: !16994)
!16994 = !DILexicalBlockFile(scope: !16987, file: !1800, discriminator: 1)
!16995 = !DILocation(line: 2453, column: 51, scope: !16994)
!16996 = !DILocation(line: 2453, column: 57, scope: !16994)
!16997 = !DILocation(line: 2453, column: 64, scope: !16994)
!16998 = !DILocation(line: 2453, column: 76, scope: !16994)
!16999 = !DILocation(line: 2453, column: 79, scope: !17000)
!17000 = !DILexicalBlockFile(scope: !16987, file: !1800, discriminator: 2)
!17001 = !DILocation(line: 2453, column: 83, scope: !17000)
!17002 = !DILocation(line: 2453, column: 90, scope: !17000)
!17003 = !DILocation(line: 2453, column: 99, scope: !17000)
!17004 = !DILocation(line: 2453, column: 20, scope: !17000)
!17005 = !DILocation(line: 2454, column: 13, scope: !17006)
!17006 = distinct !DILexicalBlock(scope: !16987, file: !1800, line: 2453, column: 105)
!17007 = !DILocation(line: 2454, column: 17, scope: !17006)
!17008 = !DILocation(line: 2454, column: 23, scope: !17006)
!17009 = !DILocation(line: 2454, column: 28, scope: !17006)
!17010 = !DILocation(line: 2454, column: 32, scope: !17006)
!17011 = !DILocation(line: 2455, column: 13, scope: !17006)
!17012 = !DILocation(line: 2455, column: 17, scope: !17006)
!17013 = !DILocation(line: 2455, column: 23, scope: !17006)
!17014 = !DILocation(line: 2455, column: 28, scope: !17006)
!17015 = !DILocation(line: 2455, column: 31, scope: !17006)
!17016 = !DILocation(line: 2456, column: 13, scope: !17006)
!17017 = !DILocation(line: 2456, column: 17, scope: !17006)
!17018 = !DILocation(line: 2456, column: 24, scope: !17006)
!17019 = !DILocation(line: 2456, column: 32, scope: !17006)
!17020 = !DILocation(line: 2457, column: 30, scope: !17006)
!17021 = !DILocation(line: 2457, column: 34, scope: !17006)
!17022 = !DILocation(line: 2457, column: 38, scope: !17006)
!17023 = !DILocation(line: 2457, column: 44, scope: !17006)
!17024 = !DILocation(line: 2457, column: 56, scope: !17006)
!17025 = !DILocation(line: 2457, column: 60, scope: !17006)
!17026 = !DILocation(line: 2457, column: 66, scope: !17006)
!17027 = !DILocation(line: 2458, column: 30, scope: !17006)
!17028 = !DILocation(line: 2458, column: 34, scope: !17006)
!17029 = !DILocation(line: 2458, column: 40, scope: !17006)
!17030 = !DILocation(line: 2457, column: 13, scope: !17006)
!17031 = !DILocation(line: 2459, column: 9, scope: !17006)
!17032 = !DILocation(line: 2460, column: 13, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !16987, file: !1800, line: 2459, column: 16)
!17034 = !DILocation(line: 2460, column: 17, scope: !17033)
!17035 = !DILocation(line: 2460, column: 23, scope: !17033)
!17036 = !DILocation(line: 2460, column: 28, scope: !17033)
!17037 = !DILocation(line: 2460, column: 32, scope: !17033)
!17038 = !DILocation(line: 2461, column: 13, scope: !17033)
!17039 = !DILocation(line: 2461, column: 17, scope: !17033)
!17040 = !DILocation(line: 2461, column: 24, scope: !17033)
!17041 = !DILocation(line: 2461, column: 32, scope: !17033)
!17042 = !DILocation(line: 2463, column: 45, scope: !16910)
!17043 = !DILocation(line: 2463, column: 50, scope: !16910)
!17044 = !DILocation(line: 2463, column: 55, scope: !16910)
!17045 = !DILocation(line: 2463, column: 60, scope: !16910)
!17046 = !DILocation(line: 2463, column: 64, scope: !16910)
!17047 = !DILocation(line: 2463, column: 74, scope: !16910)
!17048 = !DILocation(line: 2463, column: 79, scope: !16910)
!17049 = !DILocation(line: 2463, column: 15, scope: !16910)
!17050 = !DILocation(line: 2463, column: 13, scope: !16910)
!17051 = !DILocation(line: 2464, column: 9, scope: !16910)
!17052 = !DILocation(line: 2466, column: 37, scope: !16910)
!17053 = !DILocation(line: 2466, column: 41, scope: !16910)
!17054 = !DILocation(line: 2466, column: 50, scope: !16910)
!17055 = !DILocation(line: 2466, column: 15, scope: !16910)
!17056 = !DILocation(line: 2466, column: 13, scope: !16910)
!17057 = !DILocation(line: 2467, column: 9, scope: !16910)
!17058 = !DILocation(line: 2469, column: 21, scope: !16910)
!17059 = !DILocation(line: 2469, column: 25, scope: !16910)
!17060 = !DILocation(line: 2469, column: 33, scope: !16910)
!17061 = !DILocation(line: 2469, column: 31, scope: !16910)
!17062 = !DILocation(line: 2469, column: 37, scope: !16910)
!17063 = !DILocation(line: 2469, column: 9, scope: !16910)
!17064 = !DILocation(line: 2470, column: 9, scope: !16910)
!17065 = !DILocation(line: 2470, column: 9, scope: !17066)
!17066 = !DILexicalBlockFile(scope: !16910, file: !1800, discriminator: 1)
!17067 = !DILocation(line: 2474, column: 24, scope: !16910)
!17068 = !DILocation(line: 2474, column: 32, scope: !16910)
!17069 = !DILocation(line: 2474, column: 30, scope: !16910)
!17070 = !DILocation(line: 2474, column: 36, scope: !16910)
!17071 = !DILocation(line: 2474, column: 9, scope: !16910)
!17072 = !DILocation(line: 2475, column: 9, scope: !16910)
!17073 = !DILocation(line: 2477, column: 12, scope: !16874)
!17074 = !DILocation(line: 2477, column: 5, scope: !16874)
!17075 = !DILocation(line: 2478, column: 1, scope: !16874)
!17076 = distinct !DISubprogram(name: "align_get_bits", scope: !2043, file: !2043, line: 658, type: !17077, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!17077 = !DISubroutineType(types: !17078)
!17078 = !{!1605, !2041}
!17079 = !DILocalVariable(name: "s", arg: 1, scope: !17076, file: !2043, line: 658, type: !2041)
!17080 = !DILocation(line: 658, column: 60, scope: !17076)
!17081 = !DILocalVariable(name: "n", scope: !17076, file: !2043, line: 660, type: !1012)
!17082 = !DILocation(line: 660, column: 9, scope: !17076)
!17083 = !DILocation(line: 660, column: 29, scope: !17076)
!17084 = !DILocation(line: 660, column: 14, scope: !17076)
!17085 = !DILocation(line: 660, column: 13, scope: !17076)
!17086 = !DILocation(line: 660, column: 32, scope: !17076)
!17087 = !DILocation(line: 661, column: 9, scope: !17088)
!17088 = distinct !DILexicalBlock(scope: !17076, file: !2043, line: 661, column: 9)
!17089 = !DILocation(line: 661, column: 9, scope: !17076)
!17090 = !DILocation(line: 662, column: 19, scope: !17088)
!17091 = !DILocation(line: 662, column: 22, scope: !17088)
!17092 = !DILocation(line: 662, column: 9, scope: !17088)
!17093 = !DILocation(line: 663, column: 12, scope: !17076)
!17094 = !DILocation(line: 663, column: 15, scope: !17076)
!17095 = !DILocation(line: 663, column: 25, scope: !17076)
!17096 = !DILocation(line: 663, column: 28, scope: !17076)
!17097 = !DILocation(line: 663, column: 34, scope: !17076)
!17098 = !DILocation(line: 663, column: 22, scope: !17076)
!17099 = !DILocation(line: 663, column: 5, scope: !17076)
!17100 = distinct !DISubprogram(name: "decode_dynamic_range", scope: !1800, file: !1800, line: 2341, type: !17101, isLocal: true, isDefinition: true, scopeLine: 2343, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!17101 = !DISubroutineType(types: !17102)
!17102 = !{!1012, !17103, !2041}
!17103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64, align: 64)
!17104 = !DILocalVariable(name: "che_drc", arg: 1, scope: !17100, file: !1800, line: 2341, type: !17103)
!17105 = !DILocation(line: 2341, column: 54, scope: !17100)
!17106 = !DILocalVariable(name: "gb", arg: 2, scope: !17100, file: !1800, line: 2342, type: !2041)
!17107 = !DILocation(line: 2342, column: 48, scope: !17100)
!17108 = !DILocalVariable(name: "n", scope: !17100, file: !1800, line: 2344, type: !1012)
!17109 = !DILocation(line: 2344, column: 9, scope: !17100)
!17110 = !DILocalVariable(name: "drc_num_bands", scope: !17100, file: !1800, line: 2345, type: !1012)
!17111 = !DILocation(line: 2345, column: 9, scope: !17100)
!17112 = !DILocalVariable(name: "i", scope: !17100, file: !1800, line: 2346, type: !1012)
!17113 = !DILocation(line: 2346, column: 9, scope: !17100)
!17114 = !DILocation(line: 2349, column: 19, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17100, file: !1800, line: 2349, column: 9)
!17116 = !DILocation(line: 2349, column: 9, scope: !17115)
!17117 = !DILocation(line: 2349, column: 9, scope: !17100)
!17118 = !DILocation(line: 2350, column: 46, scope: !17119)
!17119 = distinct !DILexicalBlock(scope: !17115, file: !1800, line: 2349, column: 24)
!17120 = !DILocation(line: 2350, column: 37, scope: !17119)
!17121 = !DILocation(line: 2350, column: 9, scope: !17119)
!17122 = !DILocation(line: 2350, column: 18, scope: !17119)
!17123 = !DILocation(line: 2350, column: 35, scope: !17119)
!17124 = !DILocation(line: 2351, column: 19, scope: !17119)
!17125 = !DILocation(line: 2351, column: 9, scope: !17119)
!17126 = !DILocation(line: 2352, column: 10, scope: !17119)
!17127 = !DILocation(line: 2353, column: 5, scope: !17119)
!17128 = !DILocation(line: 2356, column: 19, scope: !17129)
!17129 = distinct !DILexicalBlock(scope: !17100, file: !1800, line: 2356, column: 9)
!17130 = !DILocation(line: 2356, column: 9, scope: !17129)
!17131 = !DILocation(line: 2356, column: 9, scope: !17100)
!17132 = !DILocation(line: 2357, column: 44, scope: !17133)
!17133 = distinct !DILexicalBlock(scope: !17129, file: !1800, line: 2356, column: 24)
!17134 = !DILocation(line: 2357, column: 53, scope: !17133)
!17135 = !DILocation(line: 2357, column: 14, scope: !17133)
!17136 = !DILocation(line: 2357, column: 11, scope: !17133)
!17137 = !DILocation(line: 2358, column: 5, scope: !17133)
!17138 = !DILocation(line: 2361, column: 19, scope: !17139)
!17139 = distinct !DILexicalBlock(scope: !17100, file: !1800, line: 2361, column: 9)
!17140 = !DILocation(line: 2361, column: 9, scope: !17139)
!17141 = !DILocation(line: 2361, column: 9, scope: !17100)
!17142 = !DILocation(line: 2362, column: 39, scope: !17143)
!17143 = distinct !DILexicalBlock(scope: !17139, file: !1800, line: 2361, column: 24)
!17144 = !DILocation(line: 2362, column: 30, scope: !17143)
!17145 = !DILocation(line: 2362, column: 9, scope: !17143)
!17146 = !DILocation(line: 2362, column: 18, scope: !17143)
!17147 = !DILocation(line: 2362, column: 28, scope: !17143)
!17148 = !DILocation(line: 2363, column: 50, scope: !17143)
!17149 = !DILocation(line: 2363, column: 41, scope: !17143)
!17150 = !DILocation(line: 2363, column: 9, scope: !17143)
!17151 = !DILocation(line: 2363, column: 18, scope: !17143)
!17152 = !DILocation(line: 2363, column: 39, scope: !17143)
!17153 = !DILocation(line: 2364, column: 10, scope: !17143)
!17154 = !DILocation(line: 2365, column: 26, scope: !17143)
!17155 = !DILocation(line: 2365, column: 35, scope: !17143)
!17156 = !DILocation(line: 2365, column: 23, scope: !17143)
!17157 = !DILocation(line: 2366, column: 16, scope: !17158)
!17158 = distinct !DILexicalBlock(scope: !17143, file: !1800, line: 2366, column: 9)
!17159 = !DILocation(line: 2366, column: 14, scope: !17158)
!17160 = !DILocation(line: 2366, column: 21, scope: !17161)
!17161 = !DILexicalBlockFile(scope: !17162, file: !1800, discriminator: 1)
!17162 = distinct !DILexicalBlock(scope: !17158, file: !1800, line: 2366, column: 9)
!17163 = !DILocation(line: 2366, column: 25, scope: !17161)
!17164 = !DILocation(line: 2366, column: 23, scope: !17161)
!17165 = !DILocation(line: 2366, column: 9, scope: !17161)
!17166 = !DILocation(line: 2367, column: 45, scope: !17167)
!17167 = distinct !DILexicalBlock(scope: !17162, file: !1800, line: 2366, column: 45)
!17168 = !DILocation(line: 2367, column: 36, scope: !17167)
!17169 = !DILocation(line: 2367, column: 31, scope: !17167)
!17170 = !DILocation(line: 2367, column: 13, scope: !17167)
!17171 = !DILocation(line: 2367, column: 22, scope: !17167)
!17172 = !DILocation(line: 2367, column: 34, scope: !17167)
!17173 = !DILocation(line: 2368, column: 14, scope: !17167)
!17174 = !DILocation(line: 2369, column: 9, scope: !17167)
!17175 = !DILocation(line: 2366, column: 41, scope: !17176)
!17176 = !DILexicalBlockFile(scope: !17162, file: !1800, discriminator: 2)
!17177 = !DILocation(line: 2366, column: 9, scope: !17176)
!17178 = distinct !{!17178, !17179}
!17179 = !DILocation(line: 2366, column: 9, scope: !17143)
!17180 = !DILocation(line: 2370, column: 5, scope: !17143)
!17181 = !DILocation(line: 2373, column: 19, scope: !17182)
!17182 = distinct !DILexicalBlock(scope: !17100, file: !1800, line: 2373, column: 9)
!17183 = !DILocation(line: 2373, column: 9, scope: !17182)
!17184 = !DILocation(line: 2373, column: 9, scope: !17100)
!17185 = !DILocation(line: 2374, column: 44, scope: !17186)
!17186 = distinct !DILexicalBlock(scope: !17182, file: !1800, line: 2373, column: 24)
!17187 = !DILocation(line: 2374, column: 35, scope: !17186)
!17188 = !DILocation(line: 2374, column: 9, scope: !17186)
!17189 = !DILocation(line: 2374, column: 18, scope: !17186)
!17190 = !DILocation(line: 2374, column: 33, scope: !17186)
!17191 = !DILocation(line: 2375, column: 20, scope: !17186)
!17192 = !DILocation(line: 2375, column: 9, scope: !17186)
!17193 = !DILocation(line: 2376, column: 10, scope: !17186)
!17194 = !DILocation(line: 2377, column: 5, scope: !17186)
!17195 = !DILocation(line: 2379, column: 12, scope: !17196)
!17196 = distinct !DILexicalBlock(scope: !17100, file: !1800, line: 2379, column: 5)
!17197 = !DILocation(line: 2379, column: 10, scope: !17196)
!17198 = !DILocation(line: 2379, column: 17, scope: !17199)
!17199 = !DILexicalBlockFile(scope: !17200, file: !1800, discriminator: 1)
!17200 = distinct !DILexicalBlock(scope: !17196, file: !1800, line: 2379, column: 5)
!17201 = !DILocation(line: 2379, column: 21, scope: !17199)
!17202 = !DILocation(line: 2379, column: 19, scope: !17199)
!17203 = !DILocation(line: 2379, column: 5, scope: !17199)
!17204 = !DILocation(line: 2380, column: 45, scope: !17205)
!17205 = distinct !DILexicalBlock(scope: !17200, file: !1800, line: 2379, column: 41)
!17206 = !DILocation(line: 2380, column: 35, scope: !17205)
!17207 = !DILocation(line: 2380, column: 30, scope: !17205)
!17208 = !DILocation(line: 2380, column: 9, scope: !17205)
!17209 = !DILocation(line: 2380, column: 18, scope: !17205)
!17210 = !DILocation(line: 2380, column: 33, scope: !17205)
!17211 = !DILocation(line: 2381, column: 44, scope: !17205)
!17212 = !DILocation(line: 2381, column: 35, scope: !17205)
!17213 = !DILocation(line: 2381, column: 30, scope: !17205)
!17214 = !DILocation(line: 2381, column: 9, scope: !17205)
!17215 = !DILocation(line: 2381, column: 18, scope: !17205)
!17216 = !DILocation(line: 2381, column: 33, scope: !17205)
!17217 = !DILocation(line: 2382, column: 10, scope: !17205)
!17218 = !DILocation(line: 2383, column: 5, scope: !17205)
!17219 = !DILocation(line: 2379, column: 37, scope: !17220)
!17220 = !DILexicalBlockFile(scope: !17200, file: !1800, discriminator: 2)
!17221 = !DILocation(line: 2379, column: 5, scope: !17220)
!17222 = distinct !{!17222, !17223}
!17223 = !DILocation(line: 2379, column: 5, scope: !17100)
!17224 = !DILocation(line: 2385, column: 12, scope: !17100)
!17225 = !DILocation(line: 2385, column: 5, scope: !17100)
!17226 = distinct !DISubprogram(name: "decode_fill", scope: !1800, file: !1800, line: 2388, type: !17227, isLocal: true, isDefinition: true, scopeLine: 2388, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!17227 = !DISubroutineType(types: !17228)
!17228 = !{!1012, !2071, !2041, !1012}
!17229 = !DILocalVariable(name: "ac", arg: 1, scope: !17226, file: !1800, line: 2388, type: !2071)
!17230 = !DILocation(line: 2388, column: 36, scope: !17226)
!17231 = !DILocalVariable(name: "gb", arg: 2, scope: !17226, file: !1800, line: 2388, type: !2041)
!17232 = !DILocation(line: 2388, column: 55, scope: !17226)
!17233 = !DILocalVariable(name: "len", arg: 3, scope: !17226, file: !1800, line: 2388, type: !1012)
!17234 = !DILocation(line: 2388, column: 63, scope: !17226)
!17235 = !DILocalVariable(name: "buf", scope: !17226, file: !1800, line: 2389, type: !17236)
!17236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 2048, align: 8, elements: !17237)
!17237 = !{!17238}
!17238 = !DISubrange(count: 256)
!17239 = !DILocation(line: 2389, column: 13, scope: !17226)
!17240 = !DILocalVariable(name: "i", scope: !17226, file: !1800, line: 2390, type: !1012)
!17241 = !DILocation(line: 2390, column: 9, scope: !17226)
!17242 = !DILocalVariable(name: "major", scope: !17226, file: !1800, line: 2390, type: !1012)
!17243 = !DILocation(line: 2390, column: 12, scope: !17226)
!17244 = !DILocalVariable(name: "minor", scope: !17226, file: !1800, line: 2390, type: !1012)
!17245 = !DILocation(line: 2390, column: 19, scope: !17226)
!17246 = !DILocation(line: 2392, column: 9, scope: !17247)
!17247 = distinct !DILexicalBlock(scope: !17226, file: !1800, line: 2392, column: 9)
!17248 = !DILocation(line: 2392, column: 13, scope: !17247)
!17249 = !DILocation(line: 2392, column: 9, scope: !17226)
!17250 = !DILocation(line: 2393, column: 9, scope: !17247)
!17251 = !DILocation(line: 2395, column: 14, scope: !17226)
!17252 = !DILocation(line: 2395, column: 5, scope: !17226)
!17253 = !DILocation(line: 2395, column: 27, scope: !17226)
!17254 = !DILocation(line: 2397, column: 10, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17226, file: !1800, line: 2397, column: 5)
!17256 = !DILocation(line: 2397, column: 9, scope: !17255)
!17257 = !DILocation(line: 2397, column: 14, scope: !17258)
!17258 = !DILexicalBlockFile(scope: !17259, file: !1800, discriminator: 1)
!17259 = distinct !DILexicalBlock(scope: !17255, file: !1800, line: 2397, column: 5)
!17260 = !DILocation(line: 2397, column: 15, scope: !17258)
!17261 = !DILocation(line: 2397, column: 17, scope: !17258)
!17262 = !DILocation(line: 2397, column: 30, scope: !17258)
!17263 = !DILocation(line: 2397, column: 33, scope: !17264)
!17264 = !DILexicalBlockFile(scope: !17259, file: !1800, discriminator: 2)
!17265 = !DILocation(line: 2397, column: 36, scope: !17264)
!17266 = !DILocation(line: 2397, column: 5, scope: !17267)
!17267 = !DILexicalBlockFile(scope: !17255, file: !1800, discriminator: 3)
!17268 = !DILocation(line: 2398, column: 27, scope: !17259)
!17269 = !DILocation(line: 2398, column: 18, scope: !17259)
!17270 = !DILocation(line: 2398, column: 13, scope: !17259)
!17271 = !DILocation(line: 2398, column: 9, scope: !17259)
!17272 = !DILocation(line: 2398, column: 16, scope: !17259)
!17273 = !DILocation(line: 2397, column: 42, scope: !17274)
!17274 = !DILexicalBlockFile(scope: !17259, file: !1800, discriminator: 4)
!17275 = !DILocation(line: 2397, column: 49, scope: !17274)
!17276 = !DILocation(line: 2397, column: 5, scope: !17274)
!17277 = distinct !{!17277, !17278}
!17278 = !DILocation(line: 2397, column: 5, scope: !17226)
!17279 = !DILocation(line: 2400, column: 9, scope: !17226)
!17280 = !DILocation(line: 2400, column: 5, scope: !17226)
!17281 = !DILocation(line: 2400, column: 12, scope: !17226)
!17282 = !DILocation(line: 2401, column: 9, scope: !17283)
!17283 = distinct !DILexicalBlock(scope: !17226, file: !1800, line: 2401, column: 9)
!17284 = !DILocation(line: 2401, column: 13, scope: !17283)
!17285 = !DILocation(line: 2401, column: 20, scope: !17283)
!17286 = !DILocation(line: 2401, column: 26, scope: !17283)
!17287 = !DILocation(line: 2401, column: 9, scope: !17226)
!17288 = !DILocation(line: 2402, column: 16, scope: !17283)
!17289 = !DILocation(line: 2402, column: 20, scope: !17283)
!17290 = !DILocation(line: 2402, column: 44, scope: !17283)
!17291 = !DILocation(line: 2402, column: 9, scope: !17283)
!17292 = !DILocation(line: 2404, column: 16, scope: !17293)
!17293 = distinct !DILexicalBlock(scope: !17226, file: !1800, line: 2404, column: 9)
!17294 = !DILocation(line: 2404, column: 9, scope: !17293)
!17295 = !DILocation(line: 2404, column: 54, scope: !17293)
!17296 = !DILocation(line: 2404, column: 9, scope: !17226)
!17297 = !DILocation(line: 2405, column: 9, scope: !17298)
!17298 = distinct !DILexicalBlock(scope: !17293, file: !1800, line: 2404, column: 59)
!17299 = !DILocation(line: 2405, column: 13, scope: !17298)
!17300 = !DILocation(line: 2405, column: 20, scope: !17298)
!17301 = !DILocation(line: 2405, column: 30, scope: !17298)
!17302 = !DILocation(line: 2405, column: 43, scope: !17298)
!17303 = !DILocation(line: 2406, column: 5, scope: !17298)
!17304 = !DILocation(line: 2404, column: 57, scope: !17305)
!17305 = !DILexicalBlockFile(scope: !17293, file: !1800, discriminator: 1)
!17306 = !DILocation(line: 2409, column: 20, scope: !17226)
!17307 = !DILocation(line: 2409, column: 24, scope: !17226)
!17308 = !DILocation(line: 2409, column: 5, scope: !17226)
!17309 = !DILocation(line: 2411, column: 5, scope: !17226)
!17310 = distinct !DISubprogram(name: "decode_drc_channel_exclusions", scope: !1800, file: !1800, line: 2322, type: !17101, isLocal: true, isDefinition: true, scopeLine: 2324, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1807)
!17311 = !DILocalVariable(name: "che_drc", arg: 1, scope: !17310, file: !1800, line: 2322, type: !17103)
!17312 = !DILocation(line: 2322, column: 63, scope: !17310)
!17313 = !DILocalVariable(name: "gb", arg: 2, scope: !17310, file: !1800, line: 2323, type: !2041)
!17314 = !DILocation(line: 2323, column: 57, scope: !17310)
!17315 = !DILocalVariable(name: "i", scope: !17310, file: !1800, line: 2325, type: !1012)
!17316 = !DILocation(line: 2325, column: 9, scope: !17310)
!17317 = !DILocalVariable(name: "num_excl_chan", scope: !17310, file: !1800, line: 2326, type: !1012)
!17318 = !DILocation(line: 2326, column: 9, scope: !17310)
!17319 = !DILocation(line: 2328, column: 5, scope: !17310)
!17320 = distinct !{!17320, !17319}
!17321 = !DILocation(line: 2329, column: 16, scope: !17322)
!17322 = distinct !DILexicalBlock(scope: !17323, file: !1800, line: 2329, column: 9)
!17323 = distinct !DILexicalBlock(scope: !17310, file: !1800, line: 2328, column: 8)
!17324 = !DILocation(line: 2329, column: 14, scope: !17322)
!17325 = !DILocation(line: 2329, column: 21, scope: !17326)
!17326 = !DILexicalBlockFile(scope: !17327, file: !1800, discriminator: 1)
!17327 = distinct !DILexicalBlock(scope: !17322, file: !1800, line: 2329, column: 9)
!17328 = !DILocation(line: 2329, column: 23, scope: !17326)
!17329 = !DILocation(line: 2329, column: 9, scope: !17326)
!17330 = !DILocation(line: 2330, column: 64, scope: !17327)
!17331 = !DILocation(line: 2330, column: 54, scope: !17327)
!17332 = !DILocation(line: 2330, column: 48, scope: !17327)
!17333 = !DILocation(line: 2330, column: 13, scope: !17327)
!17334 = !DILocation(line: 2330, column: 22, scope: !17327)
!17335 = !DILocation(line: 2330, column: 52, scope: !17327)
!17336 = !DILocation(line: 2329, column: 29, scope: !17337)
!17337 = !DILexicalBlockFile(scope: !17327, file: !1800, discriminator: 2)
!17338 = !DILocation(line: 2329, column: 9, scope: !17337)
!17339 = distinct !{!17339, !17340}
!17340 = !DILocation(line: 2329, column: 9, scope: !17323)
!17341 = !DILocation(line: 2331, column: 5, scope: !17323)
!17342 = !DILocation(line: 2331, column: 14, scope: !17343)
!17343 = !DILexicalBlockFile(scope: !17310, file: !1800, discriminator: 1)
!17344 = !DILocation(line: 2331, column: 28, scope: !17343)
!17345 = !DILocation(line: 2331, column: 37, scope: !17343)
!17346 = !DILocation(line: 2331, column: 50, scope: !17347)
!17347 = !DILexicalBlockFile(scope: !17310, file: !1800, discriminator: 2)
!17348 = !DILocation(line: 2331, column: 40, scope: !17347)
!17349 = !DILocation(line: 2331, column: 37, scope: !17347)
!17350 = !DILocation(line: 2331, column: 5, scope: !17351)
!17351 = !DILexicalBlockFile(scope: !17323, file: !1800, discriminator: 3)
!17352 = !DILocation(line: 2333, column: 12, scope: !17310)
!17353 = !DILocation(line: 2333, column: 26, scope: !17310)
!17354 = !DILocation(line: 2333, column: 5, scope: !17310)
