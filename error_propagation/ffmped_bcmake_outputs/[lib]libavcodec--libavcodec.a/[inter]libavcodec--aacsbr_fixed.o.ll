; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--aacsbr_fixed.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--aacsbr_fixed.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.anon = type { i8*, i8*, i32, i32 }
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.SoftFloat = type { i32, i32 }
%struct.AACContext = type { %struct.AVClass*, %struct.AVCodecContext*, %struct.AVFrame*, i32, %struct.DynamicRangeControl, [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]], i32, i32, [1024 x i32], %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.AVFixedDSPContext*, i32, [64 x %struct.SingleChannelElement*], i32, i32, [8 x i8], [128 x i32], [2 x %struct.OutputConfiguration], i32, i32, i32, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (i32*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)*, void (%struct.AACContext*, i32*, i32*, %struct.IndividualChannelStream*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (i32*, i32)*, void (i32*, i32*, i32, i32, i32, i8*)*, [8 x i8] }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.DynamicRangeControl = type { i32, [17 x i32], [17 x i32], [64 x i32], i32, i32, [17 x i32], i32 }
%struct.ChannelElement = type { i32, i32, i32, i8, [128 x i8], [128 x i8], [19 x i8], [2 x %struct.SingleChannelElement], %struct.ChannelCoupling, [24 x i8], %struct.SpectralBandReplication }
%struct.SingleChannelElement = type { %struct.IndividualChannelStream, %struct.TemporalNoiseShaping, %struct.Pulse, [128 x i32], [128 x i32], [120 x i32], [120 x i32], [128 x i32], [128 x i8], [128 x i8], [128 x float], [128 x float], [4 x i8], [1024 x i32], [1024 x i32], [1536 x i32], [2048 x i32], [3072 x i32], [1024 x %struct.SoftFloat], [1024 x %struct.SoftFloat], [672 x %struct.PredictorState], i32*, [24 x i8] }
%struct.IndividualChannelStream = type { i8, [2 x i32], [2 x i8], i32, [8 x i8], %struct.LongTermPrediction, i16*, i8*, i32, i32, i32, i32, i32, i32, [31 x i32], [41 x i8], [8 x i8], float }
%struct.LongTermPrediction = type { i8, i16, i32, i32, [40 x i8] }
%struct.TemporalNoiseShaping = type { i32, [8 x i32], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x [20 x i32]]], [8 x [4 x [20 x i32]]] }
%struct.Pulse = type { i32, i32, [4 x i32], [4 x i32] }
%struct.PredictorState = type { %struct.SoftFloat, %struct.SoftFloat, %struct.SoftFloat, %struct.SoftFloat, %struct.SoftFloat, %struct.SoftFloat, %struct.SoftFloat, %struct.SoftFloat }
%struct.ChannelCoupling = type { i32, i32, [8 x i32], [8 x i32], [8 x i32], [16 x [120 x i32]] }
%struct.SpectralBandReplication = type { i32, i32, i32, i32, i32, %struct.SpectrumParameters, i32, i32, i32, i32, i32, i32, [5 x i32], [2 x i32], [2 x i32], i32, i32, [2 x %struct.SBRData], %struct.PSContext, [2 x i32], i32, i32, [49 x i16], [25 x i16], [49 x i16], [6 x i16], [30 x i16], i32, [6 x i8], [6 x i8], [32 x [40 x [2 x i32]]], [64 x [40 x [2 x i32]]], [2 x [2 x [38 x [64 x i32]]]], [64 x [2 x i32]], [64 x [2 x i32]], [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]], [7 x [48 x i8]], [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]], [16 x i8], [5 x [64 x i32]], %struct.FFTContext, %struct.FFTContext, %struct.SBRDSPContext, %struct.AACSBRContext, [16 x i8] }
%struct.SpectrumParameters = type { i8, i8, i8, i8, i8, i8 }
%struct.SBRData = type { i32, i32, i32, [7 x i8], i32, [5 x i8], [2 x i8], [2 x [5 x i8]], [48 x i8], i32, [2304 x i32], [1312 x i32], i32, [2 x i32], [5 x i32], [2 x [32 x [32 x [2 x i32]]]], i32, [12 x i8], [2 x [38 x [64 x [2 x i32]]]], [42 x [48 x %struct.SoftFloat]], [42 x [48 x %struct.SoftFloat]], [8 x [48 x i8]], [6 x [48 x i8]], [6 x [48 x %struct.SoftFloat]], [3 x [5 x i8]], [3 x [5 x %struct.SoftFloat]], [8 x i8], i8, [3 x i8], i32, i32, [20 x i8] }
%struct.PSContext = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], i32, i32, [4 x i8], [5 x [44 x [2 x i32]]], [91 x [46 x [2 x i32]]], [50 x [3 x [37 x [2 x i32]]]], [34 x i32], [8 x i8], [34 x i32], [8 x i8], [34 x i32], [8 x i8], [2 x [6 x [34 x i32]]], [2 x [6 x [34 x i32]]], [2 x [6 x [34 x i32]]], [2 x [6 x [34 x i32]]], [91 x [32 x [2 x i32]]], [91 x [32 x [2 x i32]]], [34 x i8], [34 x i8], %struct.PSDSPContext, [8 x i8] }
%struct.PSDSPContext = type { void (i32*, [2 x i32]*, i32)*, void ([2 x i32]*, [2 x i32]*, i32*, i32)*, void ([2 x i32]*, [2 x i32]*, [8 x [2 x i32]]*, i64, i32)*, void ([32 x [2 x i32]]*, [38 x [64 x i32]]*, i32, i32)*, void ([38 x [64 x i32]]*, [32 x [2 x i32]]*, i32, i32)*, void ([2 x i32]*, [2 x i32]*, [37 x [2 x i32]]*, i32*, [2 x i32]*, i32*, i32, i32)*, [2 x void ([2 x i32]*, [2 x i32]*, [4 x i32]*, [4 x i32]*, i32)*] }
%struct.SBRDSPContext = type { void (i32*)*, i64 ([2 x i32]*, i32)*, void (i32*)*, void (i32*)*, void ([2 x i32]*, i32*)*, void (i32*, i32*)*, void (i32*, i32*, i32*)*, void ([2 x i32]*, [2 x [2 x %struct.SoftFloat]]*)*, void ([2 x i32]*, [2 x i32]*, i32*, i32*, i32, i32, i32)*, void ([2 x i32]*, [40 x [2 x i32]]*, %struct.SoftFloat*, i32, i64)*, [4 x void ([2 x i32]*, %struct.SoftFloat*, %struct.SoftFloat*, i32, i32, i32)*] }
%struct.AACSBRContext = type { i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x i32]]*, [32 x [32 x [2 x i32]]]*, i32)*, void ([64 x [2 x i32]]*, [40 x [2 x i32]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)*, i32 (%struct.SpectralBandReplication*, [38 x [64 x i32]]*, [64 x [2 x i32]]*, [64 x [2 x i32]]*, [40 x [2 x i32]]*, i32)*, void (%struct.SBRDSPContext*, [2 x i32]*, [2 x i32]*, [40 x [2 x i32]]*, i32)* }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, i32*, i32*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)*, i32, i32, i32* }
%struct.FFTComplex = type { i32, i32 }
%struct.AVFixedDSPContext = type { void (i16*, i32*, i32*, i32*, i32, i8)*, void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)*, i32 (i32*, i32*, i32)*, void (i32*, i32*, i32)* }
%struct.OutputConfiguration = type { %struct.MPEG4AudioConfig, [64 x [3 x i8]], i32, i32, i64, i32 }
%struct.MPEG4AudioConfig = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%union.unaligned_32 = type { i32 }

@ff_sbr_noise_table_fixed = constant [520 x [2 x i32]] [[2 x i32] [i32 -2146370303, i32 -1277396607], [2 x i32] [i32 2085495552, i32 -1450163839], [2 x i32] [i32 303440544, i32 -2042063359], [2 x i32] [i32 -1009435327, i32 -801882175], [2 x i32] [i32 1733128064, i32 636807680], [2 x i32] [i32 -837120895, i32 1923557120], [2 x i32] [i32 -22614073, i32 -1437934847], [2 x i32] [i32 -1959930367, i32 -247453215], [2 x i32] [i32 1177689088, i32 1615366528], [2 x i32] [i32 859192192, i32 -2124492671], [2 x i32] [i32 -2144648447, i32 -1892943871], [2 x i32] [i32 -2051514239, i32 1952250752], [2 x i32] [i32 -981956927, i32 -1217973759], [2 x i32] [i32 -1566152831, i32 -2104711679], [2 x i32] [i32 1623987328, i32 449904896], [2 x i32] [i32 151815120, i32 -1680360831], [2 x i32] [i32 1599794816, i32 -1957839487], [2 x i32] [i32 -2071037183, i32 -2034524287], [2 x i32] [i32 653363968, i32 -1061678719], [2 x i32] [i32 1429473152, i32 1388411264], [2 x i32] [i32 1969178240, i32 376112384], [2 x i32] [i32 -1519879807, i32 1128473728], [2 x i32] [i32 -1504342655, i32 -973669695], [2 x i32] [i32 -2136671359, i32 -1934279551], [2 x i32] [i32 2108066432, i32 -1663508607], [2 x i32] [i32 -1174063231, i32 -55210267], [2 x i32] [i32 -36284507, i32 6174154], [2 x i32] [i32 -1849205631, i32 913723904], [2 x i32] [i32 -2123710591, i32 -1887232895], [2 x i32] [i32 1111465088, i32 1437241728], [2 x i32] [i32 -2139645951, i32 -1247853951], [2 x i32] [i32 -2146825855, i32 2112479488], [2 x i32] [i32 1186833920, i32 1276658816], [2 x i32] [i32 742625152, i32 2037520000], [2 x i32] [i32 1345703680, i32 -1597791615], [2 x i32] [i32 -1656777215, i32 -727646015], [2 x i32] [i32 -1966928511, i32 79197080], [2 x i32] [i32 -1638218495, i32 -1962195967], [2 x i32] [i32 1713441536, i32 -2001046143], [2 x i32] [i32 1169800448, i32 -255963007], [2 x i32] [i32 -1839089535, i32 911174208], [2 x i32] [i32 -1994634367, i32 598542528], [2 x i32] [i32 -251435359, i32 -2143206783], [2 x i32] [i32 458632704, i32 -1948117631], [2 x i32] [i32 -1636204159, i32 2142504064], [2 x i32] [i32 2106918656, i32 -2058458879], [2 x i32] [i32 -1844973439, i32 2056571392], [2 x i32] [i32 -2003757823, i32 1061538944], [2 x i32] [i32 654676608, i32 -1514835711], [2 x i32] [i32 1831581312, i32 1004295040], [2 x i32] [i32 1961255680, i32 -2144039039], [2 x i32] [i32 -126491079, i32 1519169152], [2 x i32] [i32 609857152, i32 743749952], [2 x i32] [i32 2045653504, i32 -1178827135], [2 x i32] [i32 -1687198975, i32 -1622822015], [2 x i32] [i32 -2057063807, i32 -438584767], [2 x i32] [i32 1769766144, i32 2075642112], [2 x i32] [i32 -1399846783, i32 -1905569407], [2 x i32] [i32 -2010981119, i32 2144708864], [2 x i32] [i32 1963383296, i32 -2110772479], [2 x i32] [i32 -1511735807, i32 1262651648], [2 x i32] [i32 12106911, i32 1326461952], [2 x i32] [i32 1912657408, i32 1133513856], [2 x i32] [i32 -1474971391, i32 1735315968], [2 x i32] [i32 1549738880, i32 -1487344127], [2 x i32] [i32 -1351373823, i32 292638400], [2 x i32] [i32 642923008, i32 -988944767], [2 x i32] [i32 -1971002495, i32 -1589410943], [2 x i32] [i32 2132423680, i32 876530048], [2 x i32] [i32 1768845696, i32 -1589912063], [2 x i32] [i32 -2115547007, i32 -2146889471], [2 x i32] [i32 -2059766911, i32 -2131115519], [2 x i32] [i32 -459800447, i32 -2006282751], [2 x i32] [i32 -1477929983, i32 -577507903], [2 x i32] [i32 1972506624, i32 200966432], [2 x i32] [i32 -2062932223, i32 775222144], [2 x i32] [i32 1109093376, i32 -1532730623], [2 x i32] [i32 1312772224, i32 1008246592], [2 x i32] [i32 1016535616, i32 -586975551], [2 x i32] [i32 1954173824, i32 2076953088], [2 x i32] [i32 963034752, i32 2130552320], [2 x i32] [i32 1430543872, i32 2074258176], [2 x i32] [i32 1608942848, i32 -1930155263], [2 x i32] [i32 -2138283519, i32 1133560448], [2 x i32] [i32 2091672320, i32 -361977055], [2 x i32] [i32 1560871552, i32 -1032097279], [2 x i32] [i32 2049390720, i32 1478534016], [2 x i32] [i32 -1566851455, i32 -1645153791], [2 x i32] [i32 -1833080831, i32 1905636736], [2 x i32] [i32 -1748318591, i32 -2093383551], [2 x i32] [i32 -1888299007, i32 1605207680], [2 x i32] [i32 -1537025535, i32 -2116787711], [2 x i32] [i32 1793670656, i32 1797498240], [2 x i32] [i32 -1032640383, i32 -2122755455], [2 x i32] [i32 2086046848, i32 1719997440], [2 x i32] [i32 1116537472, i32 1723304704], [2 x i32] [i32 -18223357, i32 -1646478463], [2 x i32] [i32 -1509560191, i32 1188845056], [2 x i32] [i32 -2059317119, i32 -929119615], [2 x i32] [i32 2084761088, i32 200271264], [2 x i32] [i32 -1984367103, i32 1836263936], [2 x i32] [i32 -1492640127, i32 2118136448], [2 x i32] [i32 570354560, i32 1574412800], [2 x i32] [i32 602120960, i32 312199328], [2 x i32] [i32 -1592104063, i32 2132673280], [2 x i32] [i32 -37641007, i32 -1774178687], [2 x i32] [i32 -1183838463, i32 -2123830015], [2 x i32] [i32 2103694336, i32 -2019095167], [2 x i32] [i32 -2130224511, i32 1439222400], [2 x i32] [i32 -1453522815, i32 271259232], [2 x i32] [i32 196280848, i32 -441044415], [2 x i32] [i32 -1538864511, i32 -2099985663], [2 x i32] [i32 1739776128, i32 1153685120], [2 x i32] [i32 872243264, i32 -568417599], [2 x i32] [i32 -1453420927, i32 2029416064], [2 x i32] [i32 1865084672, i32 -393711039], [2 x i32] [i32 -2136754431, i32 -56567339], [2 x i32] [i32 1810955520, i32 223487712], [2 x i32] [i32 -197911423, i32 1493360384], [2 x i32] [i32 2146542464, i32 -265397663], [2 x i32] [i32 -1712248447, i32 -1966719743], [2 x i32] [i32 2069099904, i32 2075337984], [2 x i32] [i32 -1716758143, i32 1381345280], [2 x i32] [i32 -248378815, i32 613919296], [2 x i32] [i32 -857338943, i32 2021417856], [2 x i32] [i32 2127924352, i32 -1977029887], [2 x i32] [i32 614852160, i32 -1954962687], [2 x i32] [i32 -1788912383, i32 -1445909503], [2 x i32] [i32 2048794880, i32 1055762368], [2 x i32] [i32 -138509759, i32 69805264], [2 x i32] [i32 -2138358015, i32 910313664], [2 x i32] [i32 -1406626303, i32 1772664320], [2 x i32] [i32 -1744925823, i32 -1108686463], [2 x i32] [i32 -2139889535, i32 1814420352], [2 x i32] [i32 6181330, i32 1390887808], [2 x i32] [i32 1507039360, i32 -439225439], [2 x i32] [i32 2069355648, i32 874175488], [2 x i32] [i32 -1479267455, i32 1961489152], [2 x i32] [i32 -748947519, i32 1534855808], [2 x i32] [i32 1975257216, i32 1428236672], [2 x i32] [i32 -2126203135, i32 1844001664], [2 x i32] [i32 1478881664, i32 1195296256], [2 x i32] [i32 -2136411263, i32 -430625439], [2 x i32] [i32 2023241216, i32 -2140964479], [2 x i32] [i32 -1447718143, i32 1064039936], [2 x i32] [i32 -1016604863, i32 -1844781439], [2 x i32] [i32 307598080, i32 -2021761279], [2 x i32] [i32 -628531839, i32 123678416], [2 x i32] [i32 940465984, i32 -1694471295], [2 x i32] [i32 -780505663, i32 1393167872], [2 x i32] [i32 -187917807, i32 2097811200], [2 x i32] [i32 -2072220159, i32 -1158788735], [2 x i32] [i32 1192432000, i32 1694182528], [2 x i32] [i32 1579221120, i32 2071292544], [2 x i32] [i32 -663352831, i32 -1732254591], [2 x i32] [i32 76772448, i32 -2090051711], [2 x i32] [i32 2120010624, i32 1039578240], [2 x i32] [i32 -1754264319, i32 -1950510079], [2 x i32] [i32 1457429760, i32 1745571456], [2 x i32] [i32 -339486463, i32 1831364480], [2 x i32] [i32 1733521664, i32 -530802527], [2 x i32] [i32 1026255744, i32 -994996799], [2 x i32] [i32 2069477504, i32 826496640], [2 x i32] [i32 -2129098495, i32 -535695743], [2 x i32] [i32 1784169728, i32 -2035403263], [2 x i32] [i32 -1261715199, i32 27719126], [2 x i32] [i32 2051665280, i32 -1837323647], [2 x i32] [i32 -2072126719, i32 -1374839935], [2 x i32] [i32 -2090083583, i32 265818272], [2 x i32] [i32 1962807936, i32 1244949376], [2 x i32] [i32 -2145891071, i32 1526535424], [2 x i32] [i32 -1865645823, i32 -435760927], [2 x i32] [i32 -563500479, i32 -1465970175], [2 x i32] [i32 -529664223, i32 -1882103423], [2 x i32] [i32 51889128, i32 583963392], [2 x i32] [i32 1762410240, i32 -1827246335], [2 x i32] [i32 1901540352, i32 -1924935679], [2 x i32] [i32 -390263871, i32 -561613055], [2 x i32] [i32 200907328, i32 1177790080], [2 x i32] [i32 -1173995263, i32 2061171456], [2 x i32] [i32 795663936, i32 -1286560511], [2 x i32] [i32 -1511261439, i32 1959099264], [2 x i32] [i32 -743046207, i32 -2135488383], [2 x i32] [i32 -1476920703, i32 -649374079], [2 x i32] [i32 -576455295, i32 1784895360], [2 x i32] [i32 1053820352, i32 -974092351], [2 x i32] [i32 837003072, i32 2051176704], [2 x i32] [i32 -2099318271, i32 113943216], [2 x i32] [i32 -372063423, i32 -1992235007], [2 x i32] [i32 2146367744, i32 1251672576], [2 x i32] [i32 -1394710015, i32 1474151040], [2 x i32] [i32 -258061407, i32 -1227229439], [2 x i32] [i32 -1265886975, i32 -748336447], [2 x i32] [i32 -897973311, i32 349533504], [2 x i32] [i32 2145027968, i32 239145824], [2 x i32] [i32 -1216541183, i32 -1943362431], [2 x i32] [i32 2021598592, i32 757673408], [2 x i32] [i32 -1626183679, i32 1152136832], [2 x i32] [i32 441135520, i32 -2027979263], [2 x i32] [i32 2147062144, i32 1714463232], [2 x i32] [i32 624451264, i32 760075584], [2 x i32] [i32 -1349881855, i32 832486912], [2 x i32] [i32 932886336, i32 -2116266367], [2 x i32] [i32 -2110946047, i32 451433792], [2 x i32] [i32 419039104, i32 -2023784959], [2 x i32] [i32 -2050345727, i32 2112362752], [2 x i32] [i32 2005312384, i32 -1522179199], [2 x i32] [i32 -1830416511, i32 -179150559], [2 x i32] [i32 -1855964799, i32 -983440703], [2 x i32] [i32 834936896, i32 2088952448], [2 x i32] [i32 1976653952, i32 -1340752511], [2 x i32] [i32 1914750848, i32 1180062848], [2 x i32] [i32 -791011391, i32 2071426176], [2 x i32] [i32 2016310272, i32 -1932055679], [2 x i32] [i32 2131756672, i32 -80681695], [2 x i32] [i32 -2019997695, i32 887605184], [2 x i32] [i32 2141905024, i32 -361432127], [2 x i32] [i32 -770934015, i32 -1001440895], [2 x i32] [i32 112468816, i32 -550622591], [2 x i32] [i32 788203456, i32 -830072575], [2 x i32] [i32 1968237056, i32 -656864319], [2 x i32] [i32 1481780992, i32 1953182976], [2 x i32] [i32 -830190335, i32 2136780032], [2 x i32] [i32 -628156479, i32 804125120], [2 x i32] [i32 -1292402943, i32 1863578752], [2 x i32] [i32 -2092048255, i32 2071645824], [2 x i32] [i32 1899697792, i32 1234983552], [2 x i32] [i32 111646240, i32 456762496], [2 x i32] [i32 -1148895615, i32 2088246528], [2 x i32] [i32 -1061491711, i32 2108482432], [2 x i32] [i32 -2124616063, i32 -864344127], [2 x i32] [i32 -2106281599, i32 -1564589951], [2 x i32] [i32 -587082303, i32 2146429696], [2 x i32] [i32 135523456, i32 -1171228671], [2 x i32] [i32 -439411167, i32 -305156959], [2 x i32] [i32 1422146176, i32 1557539456], [2 x i32] [i32 -1820300415, i32 50945116], [2 x i32] [i32 -1912116479, i32 1908395264], [2 x i32] [i32 2059507840, i32 1648084736], [2 x i32] [i32 1578489088, i32 -80470575], [2 x i32] [i32 -681706559, i32 -791006527], [2 x i32] [i32 -732524415, i32 863529408], [2 x i32] [i32 1026580608, i32 -846607167], [2 x i32] [i32 2110959104, i32 42730444], [2 x i32] [i32 -664926911, i32 -388194623], [2 x i32] [i32 2147324544, i32 -564398911], [2 x i32] [i32 -2000375295, i32 -2111259135], [2 x i32] [i32 2145840256, i32 -1721057663], [2 x i32] [i32 -558864767, i32 -1632082431], [2 x i32] [i32 -766920383, i32 414442080], [2 x i32] [i32 -2145316479, i32 1602992512], [2 x i32] [i32 1858801152, i32 1193869184], [2 x i32] [i32 717432256, i32 1850829312], [2 x i32] [i32 2126239360, i32 98835736], [2 x i32] [i32 -1432248575, i32 -1968031615], [2 x i32] [i32 1374750080, i32 336071104], [2 x i32] [i32 2138260992, i32 984504960], [2 x i32] [i32 -1362180351, i32 452670592], [2 x i32] [i32 -165503279, i32 -1923746687], [2 x i32] [i32 2117206016, i32 1894976512], [2 x i32] [i32 1720120064, i32 -791388479], [2 x i32] [i32 1682942848, i32 977255360], [2 x i32] [i32 186998720, i32 1738151680], [2 x i32] [i32 -1864270975, i32 844977024], [2 x i32] [i32 -847537279, i32 -1434721663], [2 x i32] [i32 2101856640, i32 -1556235007], [2 x i32] [i32 -2040937599, i32 1923355520], [2 x i32] [i32 365184736, i32 1174309632], [2 x i32] [i32 -1651646719, i32 -2066450815], [2 x i32] [i32 2141970688, i32 916914496], [2 x i32] [i32 2049502208, i32 2083108992], [2 x i32] [i32 2138440704, i32 -1161935231], [2 x i32] [i32 602546560, i32 -1833122559], [2 x i32] [i32 1830869888, i32 -1386578815], [2 x i32] [i32 -1086810111, i32 -1414032383], [2 x i32] [i32 -2087584639, i32 -495965919], [2 x i32] [i32 2049215872, i32 -2131165951], [2 x i32] [i32 -2081482239, i32 1584320128], [2 x i32] [i32 662974656, i32 891526976], [2 x i32] [i32 -526645439, i32 1357352064], [2 x i32] [i32 -726134335, i32 -830255359], [2 x i32] [i32 -125130183, i32 -149051983], [2 x i32] [i32 -491740703, i32 2084237056], [2 x i32] [i32 -397497407, i32 1021467008], [2 x i32] [i32 -225233199, i32 -1884845311], [2 x i32] [i32 -1543752703, i32 1675702528], [2 x i32] [i32 2143057152, i32 1933622400], [2 x i32] [i32 1236162560, i32 -1954947455], [2 x i32] [i32 620829952, i32 2068193920], [2 x i32] [i32 906001856, i32 1033984384], [2 x i32] [i32 2004354944, i32 -934950463], [2 x i32] [i32 -2084935551, i32 1860503552], [2 x i32] [i32 788617664, i32 1402127616], [2 x i32] [i32 -1741459455, i32 188514064], [2 x i32] [i32 -563512639, i32 -1992308479], [2 x i32] [i32 1803811072, i32 1199151616], [2 x i32] [i32 -2145542655, i32 -2062112767], [2 x i32] [i32 1603085056, i32 260809600], [2 x i32] [i32 -1605772159, i32 -577631487], [2 x i32] [i32 2056895616, i32 -1697541247], [2 x i32] [i32 2050252160, i32 -184442559], [2 x i32] [i32 1046003456, i32 2147463040], [2 x i32] [i32 994972928, i32 235452816], [2 x i32] [i32 -1642760703, i32 1915790080], [2 x i32] [i32 1232599552, i32 757840640], [2 x i32] [i32 1618651136, i32 2076728704], [2 x i32] [i32 -1270760575, i32 -1919965695], [2 x i32] [i32 1612500480, i32 -635927295], [2 x i32] [i32 -2117587583, i32 537620608], [2 x i32] [i32 -875337023, i32 -1933713919], [2 x i32] [i32 1437295104, i32 2118052224], [2 x i32] [i32 -2093016959, i32 -4085013], [2 x i32] [i32 1935860096, i32 2142788992], [2 x i32] [i32 -1873878911, i32 2131025024], [2 x i32] [i32 -1965580159, i32 -337127167], [2 x i32] [i32 -70990199, i32 -798976959], [2 x i32] [i32 155113840, i32 -1907072895], [2 x i32] [i32 2136703488, i32 2085085440], [2 x i32] [i32 -1608571263, i32 2147171968], [2 x i32] [i32 98467032, i32 2143453568], [2 x i32] [i32 -1912440575, i32 -682726143], [2 x i32] [i32 -1799207807, i32 2096752256], [2 x i32] [i32 718436480, i32 -1851807743], [2 x i32] [i32 -2141203967, i32 2002270592], [2 x i32] [i32 -490217439, i32 405332384], [2 x i32] [i32 1444140800, i32 -78301791], [2 x i32] [i32 -110521063, i32 -1988563455], [2 x i32] [i32 2146351872, i32 2010586496], [2 x i32] [i32 1437764480, i32 2123986432], [2 x i32] [i32 -2138957183, i32 -958952703], [2 x i32] [i32 1763189376, i32 2137621120], [2 x i32] [i32 2130014080, i32 1546682112], [2 x i32] [i32 -1401975935, i32 1120701312], [2 x i32] [i32 2016174592, i32 -1608364543], [2 x i32] [i32 2077373696, i32 1951886848], [2 x i32] [i32 -477299039, i32 1226729216], [2 x i32] [i32 -947744319, i32 -1990477695], [2 x i32] [i32 -1840285567, i32 1907921792], [2 x i32] [i32 1971025792, i32 -995506687], [2 x i32] [i32 1558149120, i32 -2145326591], [2 x i32] [i32 -2141289855, i32 1250083712], [2 x i32] [i32 1667284352, i32 2025545984], [2 x i32] [i32 165728272, i32 1259250048], [2 x i32] [i32 -1203660927, i32 1772152960], [2 x i32] [i32 2113100160, i32 847556800], [2 x i32] [i32 1021062912, i32 1473453952], [2 x i32] [i32 1410361856, i32 393668896], [2 x i32] [i32 70295200, i32 -1609176319], [2 x i32] [i32 -830735679, i32 1102461184], [2 x i32] [i32 -2090495231, i32 -2073381759], [2 x i32] [i32 -1144225535, i32 -1963299711], [2 x i32] [i32 2143560448, i32 1312833536], [2 x i32] [i32 -1079207167, i32 -1907595519], [2 x i32] [i32 42861052, i32 1830161024], [2 x i32] [i32 2145988608, i32 2031066368], [2 x i32] [i32 1780430720, i32 -135794895], [2 x i32] [i32 -1259729151, i32 2079639808], [2 x i32] [i32 -377393119, i32 -1034376767], [2 x i32] [i32 1791737728, i32 -279676479], [2 x i32] [i32 127699928, i32 440471392], [2 x i32] [i32 1750316928, i32 -2033365247], [2 x i32] [i32 -965860415, i32 878204288], [2 x i32] [i32 -1927290879, i32 2144188928], [2 x i32] [i32 852062592, i32 -1607491711], [2 x i32] [i32 -162971423, i32 1591204096], [2 x i32] [i32 1639457664, i32 896502016], [2 x i32] [i32 -1599662847, i32 2034223488], [2 x i32] [i32 1393289984, i32 887698048], [2 x i32] [i32 1338301824, i32 -1999271039], [2 x i32] [i32 906577792, i32 -165630847], [2 x i32] [i32 58079856, i32 -116340311], [2 x i32] [i32 1718024960, i32 1965853696], [2 x i32] [i32 -1704067583, i32 -777580159], [2 x i32] [i32 1371648512, i32 174552896], [2 x i32] [i32 1135815296, i32 1289539712], [2 x i32] [i32 1594260736, i32 96463144], [2 x i32] [i32 2128073216, i32 -417710975], [2 x i32] [i32 -1726841599, i32 -1900819711], [2 x i32] [i32 -1387545343, i32 1550454784], [2 x i32] [i32 250348720, i32 -1796645631], [2 x i32] [i32 -2041251583, i32 -2081768575], [2 x i32] [i32 -1336354815, i32 1777413376], [2 x i32] [i32 64520628, i32 -2141876479], [2 x i32] [i32 -2104259455, i32 784392640], [2 x i32] [i32 -2147204095, i32 -773558207], [2 x i32] [i32 1913636608, i32 -2102263039], [2 x i32] [i32 223509248, i32 1661245952], [2 x i32] [i32 2060827008, i32 -760978431], [2 x i32] [i32 1091850112, i32 2063896960], [2 x i32] [i32 365208256, i32 -1650427647], [2 x i32] [i32 555611456, i32 2145192320], [2 x i32] [i32 -23965889, i32 2115185920], [2 x i32] [i32 -1709369087, i32 2086031488], [2 x i32] [i32 -2131693439, i32 -2137665791], [2 x i32] [i32 -2143825663, i32 40311248], [2 x i32] [i32 -1520440191, i32 723287232], [2 x i32] [i32 -1513268479, i32 2003017600], [2 x i32] [i32 2144177024, i32 -2120119295], [2 x i32] [i32 -1360752383, i32 -353767743], [2 x i32] [i32 -349142559, i32 -2060276991], [2 x i32] [i32 -937281983, i32 -2035922559], [2 x i32] [i32 -2144229631, i32 2066849280], [2 x i32] [i32 -360701215, i32 -2125740671], [2 x i32] [i32 -1889339519, i32 -1540298239], [2 x i32] [i32 948824832, i32 -2009378431], [2 x i32] [i32 2003820800, i32 -2145622015], [2 x i32] [i32 -2017387647, i32 -1211382143], [2 x i32] [i32 -1902455807, i32 1022730496], [2 x i32] [i32 2146870784, i32 -1801523071], [2 x i32] [i32 -1618695551, i32 17494334], [2 x i32] [i32 2016222720, i32 -242333391], [2 x i32] [i32 1828076288, i32 1124191616], [2 x i32] [i32 852581504, i32 1756204288], [2 x i32] [i32 -795094335, i32 -1869849599], [2 x i32] [i32 -773627263, i32 744226240], [2 x i32] [i32 -2005509503, i32 -1814119935], [2 x i32] [i32 -1402281087, i32 -395986879], [2 x i32] [i32 256845888, i32 2145322112], [2 x i32] [i32 2024917376, i32 1785931264], [2 x i32] [i32 1612355328, i32 -763070143], [2 x i32] [i32 1218095232, i32 -517046111], [2 x i32] [i32 1006262848, i32 -647256575], [2 x i32] [i32 2089766016, i32 -2137781119], [2 x i32] [i32 -822485759, i32 2115634560], [2 x i32] [i32 881022336, i32 45456580], [2 x i32] [i32 206975808, i32 94746640], [2 x i32] [i32 -1831443839, i32 1964422784], [2 x i32] [i32 1908400128, i32 -2141798527], [2 x i32] [i32 -1035139263, i32 -2078884607], [2 x i32] [i32 592116672, i32 1259171712], [2 x i32] [i32 -1414958335, i32 1263485568], [2 x i32] [i32 2122531712, i32 2147362304], [2 x i32] [i32 -443484351, i32 1172376704], [2 x i32] [i32 -1334154623, i32 -1286206975], [2 x i32] [i32 436370944, i32 -1865716223], [2 x i32] [i32 -2100036095, i32 2067829376], [2 x i32] [i32 238639872, i32 461381792], [2 x i32] [i32 -888378303, i32 605952000], [2 x i32] [i32 518253056, i32 1101538048], [2 x i32] [i32 -1425787647, i32 -177160527], [2 x i32] [i32 -1153152127, i32 -2097015679], [2 x i32] [i32 -2087885311, i32 474193024], [2 x i32] [i32 1876739200, i32 -274795743], [2 x i32] [i32 409103392, i32 34415904], [2 x i32] [i32 -995432575, i32 -2045457535], [2 x i32] [i32 -151700319, i32 -2028938367], [2 x i32] [i32 -1985221631, i32 -224575039], [2 x i32] [i32 -1800076543, i32 -36400775], [2 x i32] [i32 1615223040, i32 -2146531967], [2 x i32] [i32 -904155007, i32 2141490944], [2 x i32] [i32 -1548223743, i32 -751811711], [2 x i32] [i32 1693147264, i32 1134975104], [2 x i32] [i32 2091520768, i32 -573291007], [2 x i32] [i32 2130442624, i32 -1224283007], [2 x i32] [i32 1649044352, i32 -1643240703], [2 x i32] [i32 -1760988543, i32 -1579048575], [2 x i32] [i32 1759325824, i32 2141007360], [2 x i32] [i32 -573804415, i32 1479688576], [2 x i32] [i32 -930102207, i32 1832272000], [2 x i32] [i32 2130195968, i32 1973027456], [2 x i32] [i32 -1732847487, i32 -700671103], [2 x i32] [i32 925136064, i32 -470708991], [2 x i32] [i32 1454050304, i32 -2050376063], [2 x i32] [i32 1205850112, i32 -1518137983], [2 x i32] [i32 232612480, i32 -185302863], [2 x i32] [i32 1959136768, i32 -1417067519], [2 x i32] [i32 -1051684863, i32 1208802304], [2 x i32] [i32 -1911983231, i32 -1538813055], [2 x i32] [i32 1401650688, i32 1415535488], [2 x i32] [i32 1448251776, i32 -1754158719], [2 x i32] [i32 -1025870783, i32 -360552959], [2 x i32] [i32 -2141384319, i32 -2009309951], [2 x i32] [i32 -1951839103, i32 1332178560], [2 x i32] [i32 -142133839, i32 -511363455], [2 x i32] [i32 2135248768, i32 403996544], [2 x i32] [i32 2097799552, i32 -615566207], [2 x i32] [i32 2036107648, i32 -2093939199], [2 x i32] [i32 -2049440255, i32 -1709568383], [2 x i32] [i32 -1054517183, i32 706419328], [2 x i32] [i32 2144931840, i32 1911131264], [2 x i32] [i32 1083387648, i32 -1846730111], [2 x i32] [i32 1012815360, i32 -401154335], [2 x i32] [i32 -1333191807, i32 1610627200], [2 x i32] [i32 -942036991, i32 2147442176], [2 x i32] [i32 2118075264, i32 -1150598143], [2 x i32] [i32 -1320924927, i32 -1922320383], [2 x i32] [i32 -82495959, i32 -1500850943], [2 x i32] [i32 -646438911, i32 -164664943], [2 x i32] [i32 899393728, i32 46989068], [2 x i32] [i32 -1849744767, i32 2124881024], [2 x i32] [i32 1443685888, i32 -289789791], [2 x i32] [i32 -1519074047, i32 -1643841791], [2 x i32] [i32 2019599872, i32 193836192], [2 x i32] [i32 -1769233407, i32 191657952], [2 x i32] [i32 -688712319, i32 1076821760], [2 x i32] [i32 1236803712, i32 -2125287807], [2 x i32] [i32 -780095295, i32 159778000], [2 x i32] [i32 2147033600, i32 -303445599], [2 x i32] [i32 -1983545215, i32 -2104089343], [2 x i32] [i32 -957931839, i32 -1164650239], [2 x i32] [i32 949763328, i32 1531730432], [2 x i32] [i32 78853608, i32 1365936768], [2 x i32] [i32 1120458752, i32 -1833882879], [2 x i32] [i32 -2033691519, i32 -39220527], [2 x i32] [i32 -2120846463, i32 1767136640], [2 x i32] [i32 1877647872, i32 1919839488], [2 x i32] [i32 -2006008319, i32 888500992], [2 x i32] [i32 2062957440, i32 1999666048], [2 x i32] [i32 2094532096, i32 1850077184], [2 x i32] [i32 2139805696, i32 1507319680], [2 x i32] [i32 -2033776255, i32 -635226559], [2 x i32] [i32 1967090816, i32 -2107708671], [2 x i32] [i32 -2146370303, i32 -1277396607], [2 x i32] [i32 2085495552, i32 -1450163839], [2 x i32] [i32 303440544, i32 -2042063359], [2 x i32] [i32 -1009435327, i32 -801882175], [2 x i32] [i32 1733128064, i32 636807680], [2 x i32] [i32 -837120895, i32 1923557120], [2 x i32] [i32 -22614073, i32 -1437934847], [2 x i32] [i32 -1959930367, i32 -247453215]], align 16
@ff_aac_sbr_init_fixed.sbr_tmp = internal constant [10 x %struct.anon] [%struct.anon { i8* bitcast ([121 x i32]* @t_huffman_env_1_5dB_codes to i8*), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @t_huffman_env_1_5dB_bits, i32 0, i32 0), i32 484, i32 4 }, %struct.anon { i8* bitcast ([121 x i32]* @f_huffman_env_1_5dB_codes to i8*), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @f_huffman_env_1_5dB_bits, i32 0, i32 0), i32 484, i32 4 }, %struct.anon { i8* bitcast ([49 x i32]* @t_huffman_env_bal_1_5dB_codes to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @t_huffman_env_bal_1_5dB_bits, i32 0, i32 0), i32 196, i32 4 }, %struct.anon { i8* bitcast ([49 x i32]* @f_huffman_env_bal_1_5dB_codes to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @f_huffman_env_bal_1_5dB_bits, i32 0, i32 0), i32 196, i32 4 }, %struct.anon { i8* bitcast ([63 x i32]* @t_huffman_env_3_0dB_codes to i8*), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @t_huffman_env_3_0dB_bits, i32 0, i32 0), i32 252, i32 4 }, %struct.anon { i8* bitcast ([63 x i32]* @f_huffman_env_3_0dB_codes to i8*), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @f_huffman_env_3_0dB_bits, i32 0, i32 0), i32 252, i32 4 }, %struct.anon { i8* bitcast ([25 x i16]* @t_huffman_env_bal_3_0dB_codes to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @t_huffman_env_bal_3_0dB_bits, i32 0, i32 0), i32 50, i32 2 }, %struct.anon { i8* bitcast ([25 x i16]* @f_huffman_env_bal_3_0dB_codes to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @f_huffman_env_bal_3_0dB_bits, i32 0, i32 0), i32 50, i32 2 }, %struct.anon { i8* bitcast ([63 x i16]* @t_huffman_noise_3_0dB_codes to i8*), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @t_huffman_noise_3_0dB_bits, i32 0, i32 0), i32 126, i32 2 }, %struct.anon { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @t_huffman_noise_bal_3_0dB_codes, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @t_huffman_noise_bal_3_0dB_bits, i32 0, i32 0), i32 25, i32 1 }], align 16
@t_huffman_env_1_5dB_codes = internal constant [121 x i32] [i32 262102, i32 262103, i32 262104, i32 262105, i32 262106, i32 262107, i32 524216, i32 524217, i32 524218, i32 524219, i32 524220, i32 524221, i32 524222, i32 524223, i32 524224, i32 524225, i32 524226, i32 524227, i32 524228, i32 524229, i32 524230, i32 524231, i32 524232, i32 524233, i32 524234, i32 524235, i32 524236, i32 524237, i32 524238, i32 524239, i32 524240, i32 524241, i32 524242, i32 524243, i32 131046, i32 262100, i32 65520, i32 131049, i32 262101, i32 131047, i32 65521, i32 65516, i32 65517, i32 65518, i32 32756, i32 16377, i32 16375, i32 8186, i32 8185, i32 4091, i32 2044, i32 1020, i32 509, i32 253, i32 125, i32 61, i32 29, i32 13, i32 5, i32 1, i32 0, i32 4, i32 12, i32 28, i32 60, i32 124, i32 252, i32 508, i32 1021, i32 4090, i32 8184, i32 16374, i32 16376, i32 32757, i32 65519, i32 131048, i32 65522, i32 524244, i32 524245, i32 524246, i32 524247, i32 524248, i32 524249, i32 524250, i32 524251, i32 524252, i32 524253, i32 524254, i32 524255, i32 524256, i32 524257, i32 524258, i32 524259, i32 524260, i32 524261, i32 524262, i32 524263, i32 524264, i32 524265, i32 524266, i32 524267, i32 524268, i32 524269, i32 524270, i32 524271, i32 524272, i32 524273, i32 524274, i32 524275, i32 524276, i32 524277, i32 524278, i32 524279, i32 524280, i32 524281, i32 524282, i32 524283, i32 524284, i32 524285, i32 524286, i32 524287], align 16
@t_huffman_env_1_5dB_bits = internal constant [121 x i8] c"\12\12\12\12\12\12\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\11\12\10\11\12\11\10\10\10\10\0F\0E\0E\0D\0D\0C\0B\0A\09\08\07\06\05\04\03\02\02\03\04\05\06\07\08\09\0A\0C\0D\0E\0E\0F\10\11\10\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13", align 16
@f_huffman_env_1_5dB_codes = internal constant [121 x i32] [i32 524263, i32 524264, i32 1048530, i32 1048531, i32 1048532, i32 1048533, i32 1048534, i32 1048535, i32 1048536, i32 524250, i32 1048537, i32 1048538, i32 1048539, i32 1048540, i32 524251, i32 1048541, i32 524252, i32 524253, i32 1048542, i32 262116, i32 1048543, i32 1048544, i32 1048545, i32 524254, i32 1048546, i32 1048547, i32 1048548, i32 524255, i32 1048549, i32 524256, i32 262120, i32 524257, i32 262112, i32 262121, i32 131055, i32 262117, i32 131052, i32 131053, i32 131054, i32 65524, i32 65523, i32 65520, i32 32759, i32 32758, i32 16378, i32 8186, i32 8185, i32 4090, i32 4088, i32 2041, i32 1019, i32 508, i32 506, i32 251, i32 124, i32 60, i32 28, i32 12, i32 5, i32 1, i32 0, i32 4, i32 13, i32 29, i32 61, i32 250, i32 252, i32 507, i32 1018, i32 2040, i32 2042, i32 2043, i32 4089, i32 4091, i32 8184, i32 8187, i32 16376, i32 16377, i32 65521, i32 65522, i32 131050, i32 131051, i32 262113, i32 262114, i32 262122, i32 262115, i32 262118, i32 262119, i32 262123, i32 1048550, i32 524258, i32 1048551, i32 1048552, i32 1048553, i32 1048554, i32 1048555, i32 1048556, i32 524259, i32 1048557, i32 1048558, i32 1048559, i32 1048560, i32 524260, i32 1048561, i32 262124, i32 1048562, i32 1048563, i32 524261, i32 524262, i32 1048564, i32 1048565, i32 1048566, i32 1048567, i32 1048568, i32 1048569, i32 1048570, i32 1048571, i32 1048572, i32 1048573, i32 1048574, i32 1048575], align 16
@f_huffman_env_1_5dB_bits = internal constant [121 x i8] c"\13\13\14\14\14\14\14\14\14\13\14\14\14\14\13\14\13\13\14\12\14\14\14\13\14\14\14\13\14\13\12\13\12\12\11\12\11\11\11\10\10\10\0F\0F\0E\0D\0D\0C\0C\0B\0A\09\09\08\07\06\05\04\03\02\02\03\04\05\06\08\08\09\0A\0B\0B\0B\0C\0C\0D\0D\0E\0E\10\10\11\11\12\12\12\12\12\12\12\14\13\14\14\14\14\14\14\13\14\14\14\14\13\14\12\14\14\13\13\14\14\14\14\14\14\14\14\14\14\14\14", align 16
@t_huffman_env_bal_1_5dB_codes = internal constant [49 x i32] [i32 65508, i32 65509, i32 65510, i32 65511, i32 65512, i32 65513, i32 65514, i32 65515, i32 65516, i32 65517, i32 65518, i32 65519, i32 65520, i32 65521, i32 65522, i32 65523, i32 65524, i32 65506, i32 4092, i32 2044, i32 510, i32 126, i32 30, i32 6, i32 0, i32 2, i32 14, i32 62, i32 254, i32 2045, i32 4093, i32 32752, i32 65507, i32 65525, i32 65526, i32 65527, i32 65528, i32 65529, i32 65530, i32 131062, i32 131063, i32 131064, i32 131065, i32 131066, i32 131067, i32 131068, i32 131069, i32 131070, i32 131071], align 16
@t_huffman_env_bal_1_5dB_bits = internal constant [49 x i8] c"\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\0C\0B\09\07\05\03\01\02\04\06\08\0B\0C\0F\10\10\10\10\10\10\10\11\11\11\11\11\11\11\11\11\11", align 16
@f_huffman_env_bal_1_5dB_codes = internal constant [49 x i32] [i32 262114, i32 262115, i32 262116, i32 262117, i32 262118, i32 262119, i32 262120, i32 262121, i32 262122, i32 262123, i32 262124, i32 262125, i32 262126, i32 262127, i32 262128, i32 65527, i32 131056, i32 16380, i32 2046, i32 2044, i32 254, i32 126, i32 14, i32 2, i32 0, i32 6, i32 30, i32 62, i32 510, i32 2045, i32 4094, i32 32762, i32 65526, i32 262129, i32 262130, i32 262131, i32 262132, i32 262133, i32 262134, i32 262135, i32 262136, i32 262137, i32 262138, i32 262139, i32 262140, i32 262141, i32 262142, i32 524286, i32 524287], align 16
@f_huffman_env_bal_1_5dB_bits = internal constant [49 x i8] c"\12\12\12\12\12\12\12\12\12\12\12\12\12\12\12\10\11\0E\0B\0B\08\07\04\02\01\03\05\06\09\0B\0C\0F\10\12\12\12\12\12\12\12\12\12\12\12\12\12\12\13\13", align 16
@t_huffman_env_3_0dB_codes = internal constant [63 x i32] [i32 262125, i32 262126, i32 524254, i32 524255, i32 524256, i32 524257, i32 524258, i32 524259, i32 524260, i32 524261, i32 524262, i32 524263, i32 524264, i32 524265, i32 524266, i32 524267, i32 524268, i32 131060, i32 65527, i32 65529, i32 65528, i32 16379, i32 16378, i32 16376, i32 8186, i32 4092, i32 2044, i32 254, i32 62, i32 14, i32 2, i32 0, i32 6, i32 30, i32 126, i32 510, i32 2045, i32 8187, i32 16377, i32 16380, i32 32762, i32 65526, i32 131061, i32 262124, i32 524269, i32 524270, i32 524271, i32 524272, i32 524273, i32 524274, i32 524275, i32 524276, i32 524277, i32 524278, i32 524279, i32 524280, i32 524281, i32 524282, i32 524283, i32 524284, i32 524285, i32 524286, i32 524287], align 16
@t_huffman_env_3_0dB_bits = internal constant [63 x i8] c"\12\12\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\11\10\10\10\0E\0E\0E\0D\0C\0B\08\06\04\02\01\03\05\07\09\0B\0D\0E\0E\0F\10\11\12\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13", align 16
@f_huffman_env_3_0dB_codes = internal constant [63 x i32] [i32 1048560, i32 1048561, i32 1048562, i32 1048563, i32 1048564, i32 1048565, i32 1048566, i32 262131, i32 524277, i32 524270, i32 524271, i32 524278, i32 262132, i32 262130, i32 1048567, i32 524272, i32 131061, i32 262128, i32 131060, i32 65527, i32 65526, i32 32760, i32 16379, i32 4093, i32 2045, i32 1021, i32 509, i32 253, i32 62, i32 14, i32 2, i32 0, i32 6, i32 30, i32 252, i32 508, i32 1020, i32 2044, i32 4092, i32 8188, i32 16378, i32 32761, i32 32762, i32 65528, i32 65529, i32 131062, i32 131063, i32 262133, i32 262134, i32 262129, i32 1048568, i32 524273, i32 524274, i32 524275, i32 1048569, i32 524279, i32 524276, i32 1048570, i32 1048571, i32 1048572, i32 1048573, i32 1048574, i32 1048575], align 16
@f_huffman_env_3_0dB_bits = internal constant [63 x i8] c"\14\14\14\14\14\14\14\12\13\13\13\13\12\12\14\13\11\12\11\10\10\0F\0E\0C\0B\0A\09\08\06\04\02\01\03\05\08\09\0A\0B\0C\0D\0E\0F\0F\10\10\11\11\12\12\12\14\13\13\13\14\13\13\14\14\14\14\14\14", align 16
@t_huffman_env_bal_3_0dB_codes = internal constant [25 x i16] [i16 8178, i16 8179, i16 8180, i16 8181, i16 8182, i16 8183, i16 8184, i16 4088, i16 254, i16 126, i16 14, i16 6, i16 0, i16 2, i16 30, i16 62, i16 510, i16 8185, i16 8186, i16 8187, i16 8188, i16 8189, i16 8190, i16 16382, i16 16383], align 16
@t_huffman_env_bal_3_0dB_bits = internal constant [25 x i8] c"\0D\0D\0D\0D\0D\0D\0D\0C\08\07\04\03\01\02\05\06\09\0D\0D\0D\0D\0D\0D\0E\0E", align 16
@f_huffman_env_bal_3_0dB_codes = internal constant [25 x i16] [i16 8183, i16 8184, i16 8185, i16 8186, i16 8187, i16 16376, i16 16377, i16 2044, i16 254, i16 126, i16 14, i16 2, i16 0, i16 6, i16 30, i16 62, i16 510, i16 4090, i16 8182, i16 16378, i16 16379, i16 16380, i16 16381, i16 16382, i16 16383], align 16
@f_huffman_env_bal_3_0dB_bits = internal constant [25 x i8] c"\0D\0D\0D\0D\0D\0E\0E\0B\08\07\04\02\01\03\05\06\09\0C\0D\0E\0E\0E\0E\0E\0E", align 16
@t_huffman_noise_3_0dB_codes = internal constant [63 x i16] [i16 8142, i16 8143, i16 8144, i16 8145, i16 8146, i16 8147, i16 8148, i16 8149, i16 8150, i16 8151, i16 8152, i16 8153, i16 8154, i16 8155, i16 8156, i16 8157, i16 8158, i16 8159, i16 8160, i16 8161, i16 8162, i16 8163, i16 8164, i16 8165, i16 8166, i16 8167, i16 2034, i16 253, i16 62, i16 14, i16 6, i16 0, i16 2, i16 30, i16 252, i16 1016, i16 8140, i16 8168, i16 8169, i16 8170, i16 8171, i16 8172, i16 8141, i16 8173, i16 8174, i16 8175, i16 8176, i16 8177, i16 8178, i16 8179, i16 8180, i16 8181, i16 8182, i16 8183, i16 8184, i16 8185, i16 8186, i16 8187, i16 8188, i16 8189, i16 8190, i16 16382, i16 16383], align 16
@t_huffman_noise_3_0dB_bits = internal constant [63 x i8] c"\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0B\08\06\04\03\01\02\05\08\0A\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0E\0E", align 16
@t_huffman_noise_bal_3_0dB_codes = internal constant [25 x i8] c"\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\1C\02\00\06:\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
@t_huffman_noise_bal_3_0dB_bits = internal constant [25 x i8] c"\08\08\08\08\08\08\08\08\08\08\05\02\01\03\06\08\08\08\08\08\08\08\08\08\08", align 16
@ff_aac_sbr_init_fixed.table = internal global [1098 x [2 x i16]] zeroinitializer, align 16
@vlc_sbr = internal global [10 x %struct.VLC] zeroinitializer, align 16
@ff_aac_sbr_init_fixed.table.1 = internal global [1092 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init_fixed.table.2 = internal global [768 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init_fixed.table.3 = internal global [1026 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init_fixed.table.4 = internal global [1058 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init_fixed.table.5 = internal global [1052 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init_fixed.table.6 = internal global [544 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init_fixed.table.7 = internal global [544 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init_fixed.table.8 = internal global [592 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init_fixed.table.9 = internal global [512 x [2 x i16]] zeroinitializer, align 16
@.str = private unnamed_addr constant [49 x i8] c"Expected to read %d SBR bytes actually read %d.\0A\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"element type mismatch %d != %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"No quantized data read for sbr_dequant.\0A\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c"sbr->data[ch].bs_num_env > 0\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"libavcodec/aacsbr_template.c\00", align 1
@sbr_qmf_window_us = internal global [640 x i32] [i32 0, i32 -1186545, i32 -1206389, i32 -1062470, i32 -1046946, i32 -1050933, i32 -1082484, i32 -1122395, i32 -1173935, i32 -1219298, i32 -1260772, i32 -1316996, i32 -1355597, i32 -1404525, i32 -1455497, i32 -1490699, i32 -1537111, i32 -1558008, i32 -1597929, i32 -1608593, i32 -1649561, i32 -1658898, i32 -1682409, i32 -1670713, i32 -1675823, i32 -1675347, i32 -1666012, i32 -1638699, i32 -1617054, i32 -1571819, i32 -1549492, i32 -1485615, i32 -1428165, i32 -1361846, i32 -1276918, i32 -1194983, i32 -1105002, i32 -989200, i32 -879420, i32 -751871, i32 -622121, i32 -450613, i32 -310607, i32 -132570, i32 28980, i32 235017, i32 438735, i32 633407, i32 864693, i32 1096803, i32 1339896, i32 1601599, i32 1848649, i32 2123000, i32 2415953, i32 2701080, i32 2985538, i32 3316406, i32 3622393, i32 3940260, i32 4260853, i32 4608840, i32 4942918, i32 5288311, i32 5626785, i32 5985137, i32 6328516, i32 6684133, i32 7030779, i32 7391397, i32 7732717, i32 8075381, i32 8419732, i32 8765975, i32 9076183, i32 9391100, i32 9708742, i32 10008661, i32 10293439, i32 10552220, i32 10821819, i32 11039645, i32 11265950, i32 11482956, i32 11638669, i32 11784540, i32 11913319, i32 12012599, i32 12073291, i32 12123661, i32 12109488, i32 12083056, i32 12008112, i32 11897996, i32 11758285, i32 11561832, i32 11320623, i32 11034260, i32 10702991, i32 10331430, i32 9886914, i32 9406378, i32 8858723, i32 8258451, i32 7602360, i32 6891680, i32 6108895, i32 5263169, i32 4353846, i32 3389735, i32 2341257, i32 1252469, i32 59280, i32 -1173444, i32 -2484237, i32 -3873946, i32 -5331497, i32 -6857726, i32 -8461326, i32 -10140974, i32 -11883575, i32 -13699290, i32 -15594127, i32 -17566035, i32 -19611965, i32 -21721843, i32 -23904831, i32 -26167087, i32 28501020, i32 30903292, i32 33373088, i32 35932708, i32 38533024, i32 41204292, i32 43922868, i32 46700800, i32 49538188, i32 52433172, i32 55378416, i32 58381368, i32 61433532, i32 64532456, i32 67649520, i32 70814152, i32 74006784, i32 77244464, i32 80490448, i32 83763392, i32 87048072, i32 90333704, i32 93651232, i32 96956400, i32 100253776, i32 103544296, i32 106812776, i32 110070600, i32 113307840, i32 116490848, i32 119652128, i32 122753696, i32 125824432, i32 128814120, i32 131738496, i32 134616688, i32 137377936, i32 140068992, i32 142671840, i32 145186208, i32 147541536, i32 149814960, i32 151962112, i32 153975152, i32 155839152, i32 157543744, i32 159129328, i32 160514208, i32 161735008, i32 162781056, i32 163636640, i32 164280816, i32 164732080, i32 164964112, i32 164976144, i32 164756000, i32 164293392, i32 163584208, i32 162630176, i32 161399776, i32 159915456, i32 158141984, i32 156073664, i32 153722544, i32 151082576, i32 148104224, i32 144853152, i32 141238000, i32 137319728, i32 133058680, i32 128455296, i32 123513096, i32 118210392, i32 112548288, i32 106510608, i32 100137872, i32 93365888, i32 86212512, i32 78687688, i32 70777608, i32 62453980, i32 53753140, i32 44667032, i32 35154576, i32 25259526, i32 14954402, i32 4244631, i32 -6890608, i32 -18406457, i32 -30341543, i32 -42699303, i32 -55453887, i32 -68618815, i32 -82200639, i32 -96165783, i32 -110553351, i32 -125349767, i32 -140533439, i32 -156109887, i32 -172093519, i32 -188451903, i32 -205199231, i32 -222335327, i32 -239836751, i32 -257714783, i32 -275952255, i32 -294538495, i32 -313482463, i32 -332775583, i32 -352393215, i32 -372332479, i32 -392597055, i32 -413168703, i32 -434060159, i32 -455209823, i32 -476666783, i32 -498364575, i32 -520338911, i32 -542557503, i32 -565014399, i32 -587687679, i32 -610575615, i32 -633661567, i32 -656936447, i32 -680382719, i32 -703969535, i32 -727722687, i32 -751600831, i32 775583040, i32 799678976, i32 823849920, i32 848086784, i32 872376064, i32 896724096, i32 921081472, i32 945441216, i32 969802880, i32 994136320, i32 1018434048, i32 1042657664, i32 1066807232, i32 1090882560, i32 1114809216, i32 1138647552, i32 1162337024, i32 1185851520, i32 1209202816, i32 1232338688, i32 1255290752, i32 1277993984, i32 1300469632, i32 1322658816, i32 1344591616, i32 1366224768, i32 1387547136, i32 1408537984, i32 1429180416, i32 1449479168, i32 1469384192, i32 1488911104, i32 1508046464, i32 1526734208, i32 1544999040, i32 1562820224, i32 1580163968, i32 1597046656, i32 1613433984, i32 1629313152, i32 1644687872, i32 1659528320, i32 1673810560, i32 1687568512, i32 1700750336, i32 1713362560, i32 1725392640, i32 1736819328, i32 1747663232, i32 1757881984, i32 1767469184, i32 1776457600, i32 1784781952, i32 1792491136, i32 1799530624, i32 1805935232, i32 1811668352, i32 1816732160, i32 1821133952, i32 1824889728, i32 1827931904, i32 1830310400, i32 1832022784, i32 1833032064, i32 1833389568, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 32
@sbr_qmf_window_ds = internal global [320 x i32] zeroinitializer, align 32
@sbr_make_f_tablelim.bands_warped = internal constant [3 x i32] [i32 11132956, i32 9941279, i32 9394164], align 4
@.str.15 = private unnamed_addr constant [58 x i8] c"SBR reset failed. Switching SBR to pure upsampling mode.\0A\00", align 1
@sbr_offset = internal constant [6 x [16 x i8]] [[16 x i8] c"\F8\F9\FA\FB\FC\FD\FE\FF\00\01\02\03\04\05\06\07", [16 x i8] c"\FB\FC\FD\FE\FF\00\01\02\03\04\05\06\07\09\0B\0D", [16 x i8] c"\FB\FD\FE\FF\00\01\02\03\04\05\06\07\09\0B\0D\10", [16 x i8] c"\FA\FC\FE\FF\00\01\02\03\04\05\06\07\09\0B\0D\10", [16 x i8] c"\FC\FE\FF\00\01\02\03\04\05\06\07\09\0B\0D\10\14", [16 x i8] c"\FE\FF\00\01\02\03\04\05\06\07\09\0B\0D\10\14\18"], align 16
@.str.16 = private unnamed_addr constant [37 x i8] c"Unsupported sample rate for SBR: %d\0A\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"Invalid bs_stop_freq: %d\0A\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.19 = private unnamed_addr constant [46 x i8] c"Invalid bitstream, too many QMF subbands: %d\0A\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"Invalid num_bands_0: %d\0A\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"Invalid vDk0[%d]: %d\0A\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"Invalid vDk1[%d]: %d\0A\00", align 1
@fixed_exp_table = internal constant [7 x i32] [i32 1073741824, i32 357913941, i32 89478485, i32 17895697, i32 2982616, i32 426088, i32 53261], align 16
@.str.23 = private unnamed_addr constant [22 x i8] c"Invalid n_master: %d\0A\00", align 1
@.str.24 = private unnamed_addr constant [65 x i8] c"Invalid bitstream, crossover band index beyond array bounds: %d\0A\00", align 1
@fixed_log_table = internal constant [10 x i32] [i32 1073741824, i32 715827883, i32 536870912, i32 429496730, i32 357913941, i32 306783378, i32 268435456, i32 238609294, i32 214748365, i32 195225786], align 16
@.str.25 = private unnamed_addr constant [36 x i8] c"Stop frequency border too high: %d\0A\00", align 1
@.str.26 = private unnamed_addr constant [37 x i8] c"Start frequency border too high: %d\0A\00", align 1
@.str.27 = private unnamed_addr constant [40 x i8] c"Too many noise floor scale factors: %d\0A\00", align 1
@.str.28 = private unnamed_addr constant [27 x i8] c"patch construction failed\0A\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"Too many patches: %d\0A\00", align 1
@.str.30 = private unnamed_addr constant [57 x i8] c"Invalid bitstream - cannot apply SBR to element type %d\0A\00", align 1
@.str.31 = private unnamed_addr constant [26 x i8] c"SBR Extension over read.\0A\00", align 1
@.str.32 = private unnamed_addr constant [72 x i8] c"Invalid bitstream, too many SBR envelopes in FIXFIX type SBR frame: %d\0A\00", align 1
@ceil_log2 = internal constant [6 x i8] c"\00\01\02\02\03\03", align 1
@.str.33 = private unnamed_addr constant [72 x i8] c"Invalid bitstream, too many SBR envelopes in VARVAR type SBR frame: %d\0A\00", align 1
@.str.34 = private unnamed_addr constant [16 x i8] c"bs_pointer >= 0\00", align 1
@.str.35 = private unnamed_addr constant [98 x i8] c"Invalid bitstream, bs_pointer points to a middle noise border outside the time borders table: %d\0A\00", align 1
@.str.36 = private unnamed_addr constant [36 x i8] c"Not strictly monotone time borders\0A\00", align 1
@vlc_sbr_lav = internal constant [10 x i8] c"<<\18\18\1F\1F\0C\0C\1F\0C", align 1
@.str.37 = private unnamed_addr constant [26 x i8] c"env_facs_q %d is invalid\0A\00", align 1
@.str.38 = private unnamed_addr constant [28 x i8] c"noise_facs_q %d is invalid\0A\00", align 1
@.str.39 = private unnamed_addr constant [78 x i8] c"Parametric Stereo signaled to be not-present but was found in the bitstream.\0A\00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"Reserved SBR extensions\00", align 1
@.str.41 = private unnamed_addr constant [42 x i8] c"envelope scalefactor overflow in dequant\0A\00", align 1
@FLOAT_1 = internal constant %struct.SoftFloat { i32 536870912, i32 1 }, align 4
@.str.42 = private unnamed_addr constant [16 x i8] c"temp1.exp <= 66\00", align 1
@.str.43 = private unnamed_addr constant [26 x i8] c"libavcodec/aacsbr_fixed.c\00", align 1
@FLOAT_0 = internal constant %struct.SoftFloat { i32 0, i32 -149 }, align 4
@.str.44 = private unnamed_addr constant [57 x i8] c"sbr_qmf_analysis: value %09d too large, setting to %09d\0A\00", align 1
@.str.45 = private unnamed_addr constant [57 x i8] c"sbr_qmf_analysis: value %09d too small, setting to %09d\0A\00", align 1
@sbr_chirp.bw_tab = internal constant [4 x i32] [i32 0, i32 1610612736, i32 1932735283, i32 2104533975], align 16
@.str.46 = private unnamed_addr constant [43 x i8] c"ERROR : no subband found for frequency %d\0A\00", align 1
@.str.47 = private unnamed_addr constant [76 x i8] c"kx != f_table{high,low}[0]. Derived frequency tables were not regenerated.\0A\00", align 1
@sbr_gain_calc.limgain = internal constant [4 x %struct.SoftFloat] [%struct.SoftFloat { i32 760155524, i32 0 }, %struct.SoftFloat { i32 536870912, i32 1 }, %struct.SoftFloat { i32 758351638, i32 1 }, %struct.SoftFloat { i32 625000000, i32 34 }], align 16
@FLOAT_MIN = internal constant %struct.SoftFloat { i32 536870912, i32 -149 }, align 4
@FLOAT_EPSILON = internal constant %struct.SoftFloat { i32 703687442, i32 -16 }, align 4
@FLOAT_100000 = internal constant %struct.SoftFloat { i32 819200000, i32 17 }, align 4
@FLOAT_1584893192 = internal constant %struct.SoftFloat { i32 850883053, i32 1 }, align 4
@av_sqrttbl_sf = internal constant [513 x i32] [i32 759250125, i32 759991219, i32 760731590, i32 761471242, i32 762210175, i32 762948394, i32 763685899, i32 764422691, i32 765158776, i32 765894152, i32 766628822, i32 767362790, i32 768096056, i32 768828622, i32 769560492, i32 770291666, i32 771022147, i32 771751936, i32 772481036, i32 773209448, i32 773937174, i32 774664218, i32 775390579, i32 776116260, i32 776841264, i32 777565592, i32 778289245, i32 779012227, i32 779734538, i32 780456181, i32 781177156, i32 781897467, i32 782617115, i32 783336103, i32 784054430, i32 784772100, i32 785489114, i32 786205475, i32 786921183, i32 787636242, i32 788350651, i32 789064413, i32 789777531, i32 790490005, i32 791201838, i32 791913030, i32 792623585, i32 793333503, i32 794042787, i32 794751438, i32 795459457, i32 796166846, i32 796873608, i32 797579744, i32 798285255, i32 798990142, i32 799694408, i32 800398056, i32 801101084, i32 801803497, i32 802505294, i32 803206478, i32 803907051, i32 804607014, i32 805306368, i32 806005115, i32 806703258, i32 807400796, i32 808097733, i32 808794069, i32 809489806, i32 810184946, i32 810879489, i32 811573438, i32 812266794, i32 812959559, i32 813651734, i32 814343321, i32 815034322, i32 815724736, i32 816414567, i32 817103815, i32 817792482, i32 818480571, i32 819168081, i32 819855014, i32 820541372, i32 821227158, i32 821912370, i32 822597012, i32 823281084, i32 823964589, i32 824647527, i32 825329900, i32 826011709, i32 826692956, i32 827373642, i32 828053769, i32 828733336, i32 829412348, i32 830090804, i32 830768706, i32 831446056, i32 832122853, i32 832799101, i32 833474800, i32 834149952, i32 834824558, i32 835498619, i32 836172137, i32 836845112, i32 837517547, i32 838189442, i32 838860800, i32 839531621, i32 840201905, i32 840871656, i32 841540874, i32 842209559, i32 842877715, i32 843545340, i32 844212438, i32 844879010, i32 845545055, i32 846210577, i32 846875576, i32 847540053, i32 848204009, i32 848867446, i32 849530365, i32 850192766, i32 850854653, i32 851516025, i32 852176883, i32 852837229, i32 853497065, i32 854156390, i32 854815208, i32 855473517, i32 856131321, i32 856788620, i32 857445414, i32 858101707, i32 858757497, i32 859412787, i32 860067578, i32 860721871, i32 861375666, i32 862028966, i32 862681771, i32 863334083, i32 863985901, i32 864637229, i32 865288067, i32 865938415, i32 866588274, i32 867237648, i32 867886535, i32 868534937, i32 869182856, i32 869830293, i32 870477247, i32 871123721, i32 871769715, i32 872415232, i32 873060271, i32 873704834, i32 874348922, i32 874992535, i32 875635675, i32 876278344, i32 876920541, i32 877562269, i32 878203528, i32 878844319, i32 879484643, i32 880124500, i32 880763893, i32 881402822, i32 882041289, i32 882679294, i32 883316837, i32 883953921, i32 884590546, i32 885226714, i32 885862424, i32 886497679, i32 887132479, i32 887766825, i32 888400717, i32 889034158, i32 889667148, i32 890299688, i32 890931779, i32 891563421, i32 892194617, i32 892825366, i32 893455670, i32 894085530, i32 894714946, i32 895343919, i32 895972451, i32 896600543, i32 897228194, i32 897855408, i32 898482183, i32 899108521, i32 899734424, i32 900359891, i32 900984924, i32 901609523, i32 902233690, i32 902857427, i32 903480732, i32 904103607, i32 904726054, i32 905348072, i32 905969664, i32 906590830, i32 907211569, i32 907831885, i32 908451777, i32 909071247, i32 909690295, i32 910308921, i32 910927128, i32 911544914, i32 912162283, i32 912779234, i32 913395769, i32 914011888, i32 914627591, i32 915242881, i32 915857757, i32 916472221, i32 917086272, i32 917699913, i32 918313144, i32 918925966, i32 919538379, i32 920150384, i32 920761984, i32 921373176, i32 921983964, i32 922594347, i32 923204327, i32 923813904, i32 924423079, i32 925031853, i32 925640226, i32 926248200, i32 926855775, i32 927462953, i32 928069733, i32 928676116, i32 929282104, i32 929887696, i32 930492896, i32 931097700, i32 931702113, i32 932306134, i32 932909764, i32 933513004, i32 934115854, i32 934718314, i32 935320388, i32 935922073, i32 936523373, i32 937124286, i32 937724814, i32 938324958, i32 938924718, i32 939524096, i32 940123091, i32 940721706, i32 941319939, i32 941917792, i32 942515266, i32 943112362, i32 943709079, i32 944305420, i32 944901385, i32 945496973, i32 946092187, i32 946687027, i32 947281493, i32 947875585, i32 948469307, i32 949062656, i32 949655635, i32 950248244, i32 950840483, i32 951432355, i32 952023858, i32 952614993, i32 953205762, i32 953796165, i32 954386203, i32 954975877, i32 955565186, i32 956154132, i32 956742716, i32 957330938, i32 957918799, i32 958506298, i32 959093438, i32 959680219, i32 960266642, i32 960852706, i32 961438414, i32 962023765, i32 962608759, i32 963193398, i32 963777684, i32 964361615, i32 964945191, i32 965528416, i32 966111289, i32 966693810, i32 967275980, i32 967857801, i32 968439272, i32 969020393, i32 969601166, i32 970181593, i32 970761671, i32 971341403, i32 971920790, i32 972499831, i32 973078528, i32 973656881, i32 974234890, i32 974812557, i32 975389882, i32 975966865, i32 976543507, i32 977119809, i32 977695771, i32 978271395, i32 978846679, i32 979421626, i32 979996235, i32 980570507, i32 981144444, i32 981718045, i32 982291311, i32 982864243, i32 983436841, i32 984009106, i32 984581038, i32 985152638, i32 985723907, i32 986294844, i32 986865452, i32 987435729, i32 988005677, i32 988575298, i32 989144590, i32 989713554, i32 990282192, i32 990850502, i32 991418488, i32 991986148, i32 992553484, i32 993120496, i32 993687184, i32 994253548, i32 994819590, i32 995385311, i32 995950711, i32 996515789, i32 997080548, i32 997644986, i32 998209105, i32 998772906, i32 999336388, i32 999899553, i32 1000462402, i32 1001024933, i32 1001587149, i32 1002149049, i32 1002710634, i32 1003271906, i32 1003832863, i32 1004393507, i32 1004953838, i32 1005513857, i32 1006073564, i32 1006632960, i32 1007192045, i32 1007750820, i32 1008309286, i32 1008867442, i32 1009425290, i32 1009982830, i32 1010540061, i32 1011096986, i32 1011653605, i32 1012209917, i32 1012765923, i32 1013321624, i32 1013877021, i32 1014432114, i32 1014986904, i32 1015541390, i32 1016095574, i32 1016649455, i32 1017203035, i32 1017756314, i32 1018309292, i32 1018861970, i32 1019414348, i32 1019966428, i32 1020518209, i32 1021069691, i32 1021620876, i32 1022171763, i32 1022722354, i32 1023272648, i32 1023822647, i32 1024372351, i32 1024921759, i32 1025470874, i32 1026019694, i32 1026568221, i32 1027116456, i32 1027664397, i32 1028212047, i32 1028759405, i32 1029306471, i32 1029853248, i32 1030399734, i32 1030945931, i32 1031491838, i32 1032037457, i32 1032582787, i32 1033127830, i32 1033672584, i32 1034217052, i32 1034761234, i32 1035305129, i32 1035848740, i32 1036392064, i32 1036935104, i32 1037477860, i32 1038020333, i32 1038562521, i32 1039104427, i32 1039646050, i32 1040187392, i32 1040728452, i32 1041269230, i32 1041809728, i32 1042349946, i32 1042889884, i32 1043429543, i32 1043968922, i32 1044508023, i32 1045046845, i32 1045585391, i32 1046123659, i32 1046661650, i32 1047199365, i32 1047736804, i32 1048273967, i32 1048810855, i32 1049347468, i32 1049883807, i32 1050419873, i32 1050955665, i32 1051491183, i32 1052026430, i32 1052561403, i32 1053096106, i32 1053630537, i32 1054164697, i32 1054698586, i32 1055232205, i32 1055765555, i32 1056298636, i32 1056831447, i32 1057363990, i32 1057896265, i32 1058428272, i32 1058960012, i32 1059491485, i32 1060022692, i32 1060553632, i32 1061084307, i32 1061614716, i32 1062144861, i32 1062674741, i32 1063204358, i32 1063733711, i32 1064262800, i32 1064791626, i32 1065320190, i32 1065848491, i32 1066376531, i32 1066904310, i32 1067431827, i32 1067959084, i32 1068486081, i32 1069012818, i32 1069539296, i32 1070065515, i32 1070591475, i32 1071117176, i32 1071642620, i32 1072167807, i32 1072692736, i32 1073217408, i32 1073741823], align 16
@av_sqr_exp_multbl_sf = internal constant [2 x i32] [i32 536870912, i32 759250125], align 4
@sbr_hf_assemble.h_smooth = internal constant [5 x %struct.SoftFloat] [%struct.SoftFloat { i32 715827883, i32 -1 }, %struct.SoftFloat { i32 647472402, i32 -1 }, %struct.SoftFloat { i32 937030863, i32 -2 }, %struct.SoftFloat { i32 989249804, i32 -3 }, %struct.SoftFloat { i32 546843842, i32 -4 }], align 16
@.str.48 = private unnamed_addr constant [42 x i8] c"Overflow in sbr_hf_assemble, shift=%d,%d\0A\00", align 1
@.str.49 = private unnamed_addr constant [39 x i8] c"Overflow in sbr_hf_assemble, shift=%d\0A\00", align 1
@FLOAT_0999999 = internal constant %struct.SoftFloat { i32 1073740750, i32 0 }, align 4

; Function Attrs: cold nounwind optsize uwtable
define void @ff_aac_sbr_init_fixed() #0 !dbg !1002 {
entry:
  br label %do.body, !dbg !2579, !llvm.loop !2580

do.body:                                          ; preds = %entry
  store [2 x i16]* getelementptr inbounds ([1098 x [2 x i16]], [1098 x [2 x i16]]* @ff_aac_sbr_init_fixed.table, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 0, i32 1), align 8, !dbg !2581
  store i32 1098, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 0, i32 3), align 4, !dbg !2584
  %0 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 0, i32 2), align 16, !dbg !2585
  %1 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 0, i32 3), align 4, !dbg !2586
  %div = udiv i32 %0, %1, !dbg !2587
  %2 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 0, i32 1), align 8, !dbg !2588
  %3 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 0, i32 0), align 16, !dbg !2589
  %4 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 0, i32 3), align 4, !dbg !2590
  %5 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 0, i32 3), align 4, !dbg !2591
  %call = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 0), i32 9, i32 %div, i8* %2, i32 1, i32 1, i8* %3, i32 %4, i32 %5, i8* null, i32 0, i32 0, i32 4), !dbg !2592
  br label %do.end, !dbg !2593

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !2594, !llvm.loop !2595

do.body1:                                         ; preds = %do.end
  store [2 x i16]* getelementptr inbounds ([1092 x [2 x i16]], [1092 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.1, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 1, i32 1), align 8, !dbg !2596
  store i32 1092, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 1, i32 3), align 4, !dbg !2599
  %6 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 1, i32 2), align 8, !dbg !2600
  %7 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 1, i32 3), align 4, !dbg !2601
  %div2 = udiv i32 %6, %7, !dbg !2602
  %8 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 1, i32 1), align 8, !dbg !2603
  %9 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 1, i32 0), align 8, !dbg !2604
  %10 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 1, i32 3), align 4, !dbg !2605
  %11 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 1, i32 3), align 4, !dbg !2606
  %call3 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 1), i32 9, i32 %div2, i8* %8, i32 1, i32 1, i8* %9, i32 %10, i32 %11, i8* null, i32 0, i32 0, i32 4), !dbg !2607
  br label %do.end4, !dbg !2608

do.end4:                                          ; preds = %do.body1
  br label %do.body5, !dbg !2609, !llvm.loop !2610

do.body5:                                         ; preds = %do.end4
  store [2 x i16]* getelementptr inbounds ([768 x [2 x i16]], [768 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.2, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 2, i32 1), align 8, !dbg !2611
  store i32 768, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 2, i32 3), align 4, !dbg !2614
  %12 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 2, i32 2), align 16, !dbg !2615
  %13 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 2, i32 3), align 4, !dbg !2616
  %div6 = udiv i32 %12, %13, !dbg !2617
  %14 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 2, i32 1), align 8, !dbg !2618
  %15 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 2, i32 0), align 16, !dbg !2619
  %16 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 2, i32 3), align 4, !dbg !2620
  %17 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 2, i32 3), align 4, !dbg !2621
  %call7 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 2), i32 9, i32 %div6, i8* %14, i32 1, i32 1, i8* %15, i32 %16, i32 %17, i8* null, i32 0, i32 0, i32 4), !dbg !2622
  br label %do.end8, !dbg !2623

do.end8:                                          ; preds = %do.body5
  br label %do.body9, !dbg !2624, !llvm.loop !2625

do.body9:                                         ; preds = %do.end8
  store [2 x i16]* getelementptr inbounds ([1026 x [2 x i16]], [1026 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.3, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 3, i32 1), align 8, !dbg !2626
  store i32 1026, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 3, i32 3), align 4, !dbg !2629
  %18 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 3, i32 2), align 8, !dbg !2630
  %19 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 3, i32 3), align 4, !dbg !2631
  %div10 = udiv i32 %18, %19, !dbg !2632
  %20 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 3, i32 1), align 8, !dbg !2633
  %21 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 3, i32 0), align 8, !dbg !2634
  %22 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 3, i32 3), align 4, !dbg !2635
  %23 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 3, i32 3), align 4, !dbg !2636
  %call11 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 3), i32 9, i32 %div10, i8* %20, i32 1, i32 1, i8* %21, i32 %22, i32 %23, i8* null, i32 0, i32 0, i32 4), !dbg !2637
  br label %do.end12, !dbg !2638

do.end12:                                         ; preds = %do.body9
  br label %do.body13, !dbg !2639, !llvm.loop !2640

do.body13:                                        ; preds = %do.end12
  store [2 x i16]* getelementptr inbounds ([1058 x [2 x i16]], [1058 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.4, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 4, i32 1), align 8, !dbg !2641
  store i32 1058, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 4, i32 3), align 4, !dbg !2644
  %24 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 4, i32 2), align 16, !dbg !2645
  %25 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 4, i32 3), align 4, !dbg !2646
  %div14 = udiv i32 %24, %25, !dbg !2647
  %26 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 4, i32 1), align 8, !dbg !2648
  %27 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 4, i32 0), align 16, !dbg !2649
  %28 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 4, i32 3), align 4, !dbg !2650
  %29 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 4, i32 3), align 4, !dbg !2651
  %call15 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 4), i32 9, i32 %div14, i8* %26, i32 1, i32 1, i8* %27, i32 %28, i32 %29, i8* null, i32 0, i32 0, i32 4), !dbg !2652
  br label %do.end16, !dbg !2653

do.end16:                                         ; preds = %do.body13
  br label %do.body17, !dbg !2654, !llvm.loop !2655

do.body17:                                        ; preds = %do.end16
  store [2 x i16]* getelementptr inbounds ([1052 x [2 x i16]], [1052 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.5, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 5, i32 1), align 8, !dbg !2656
  store i32 1052, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 5, i32 3), align 4, !dbg !2659
  %30 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 5, i32 2), align 8, !dbg !2660
  %31 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 5, i32 3), align 4, !dbg !2661
  %div18 = udiv i32 %30, %31, !dbg !2662
  %32 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 5, i32 1), align 8, !dbg !2663
  %33 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 5, i32 0), align 8, !dbg !2664
  %34 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 5, i32 3), align 4, !dbg !2665
  %35 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 5, i32 3), align 4, !dbg !2666
  %call19 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 5), i32 9, i32 %div18, i8* %32, i32 1, i32 1, i8* %33, i32 %34, i32 %35, i8* null, i32 0, i32 0, i32 4), !dbg !2667
  br label %do.end20, !dbg !2668

do.end20:                                         ; preds = %do.body17
  br label %do.body21, !dbg !2669, !llvm.loop !2670

do.body21:                                        ; preds = %do.end20
  store [2 x i16]* getelementptr inbounds ([544 x [2 x i16]], [544 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.6, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 6, i32 1), align 8, !dbg !2671
  store i32 544, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 6, i32 3), align 4, !dbg !2674
  %36 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 6, i32 2), align 16, !dbg !2675
  %37 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 6, i32 3), align 4, !dbg !2676
  %div22 = udiv i32 %36, %37, !dbg !2677
  %38 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 6, i32 1), align 8, !dbg !2678
  %39 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 6, i32 0), align 16, !dbg !2679
  %40 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 6, i32 3), align 4, !dbg !2680
  %41 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 6, i32 3), align 4, !dbg !2681
  %call23 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 6), i32 9, i32 %div22, i8* %38, i32 1, i32 1, i8* %39, i32 %40, i32 %41, i8* null, i32 0, i32 0, i32 4), !dbg !2682
  br label %do.end24, !dbg !2683

do.end24:                                         ; preds = %do.body21
  br label %do.body25, !dbg !2684, !llvm.loop !2685

do.body25:                                        ; preds = %do.end24
  store [2 x i16]* getelementptr inbounds ([544 x [2 x i16]], [544 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.7, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 7, i32 1), align 8, !dbg !2686
  store i32 544, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 7, i32 3), align 4, !dbg !2689
  %42 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 7, i32 2), align 8, !dbg !2690
  %43 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 7, i32 3), align 4, !dbg !2691
  %div26 = udiv i32 %42, %43, !dbg !2692
  %44 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 7, i32 1), align 8, !dbg !2693
  %45 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 7, i32 0), align 8, !dbg !2694
  %46 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 7, i32 3), align 4, !dbg !2695
  %47 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 7, i32 3), align 4, !dbg !2696
  %call27 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 7), i32 9, i32 %div26, i8* %44, i32 1, i32 1, i8* %45, i32 %46, i32 %47, i8* null, i32 0, i32 0, i32 4), !dbg !2697
  br label %do.end28, !dbg !2698

do.end28:                                         ; preds = %do.body25
  br label %do.body29, !dbg !2699, !llvm.loop !2700

do.body29:                                        ; preds = %do.end28
  store [2 x i16]* getelementptr inbounds ([592 x [2 x i16]], [592 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.8, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 8, i32 1), align 8, !dbg !2701
  store i32 592, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 8, i32 3), align 4, !dbg !2704
  %48 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 8, i32 2), align 16, !dbg !2705
  %49 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 8, i32 3), align 4, !dbg !2706
  %div30 = udiv i32 %48, %49, !dbg !2707
  %50 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 8, i32 1), align 8, !dbg !2708
  %51 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 8, i32 0), align 16, !dbg !2709
  %52 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 8, i32 3), align 4, !dbg !2710
  %53 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 8, i32 3), align 4, !dbg !2711
  %call31 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 8), i32 9, i32 %div30, i8* %50, i32 1, i32 1, i8* %51, i32 %52, i32 %53, i8* null, i32 0, i32 0, i32 4), !dbg !2712
  br label %do.end32, !dbg !2713

do.end32:                                         ; preds = %do.body29
  br label %do.body33, !dbg !2714, !llvm.loop !2715

do.body33:                                        ; preds = %do.end32
  store [2 x i16]* getelementptr inbounds ([512 x [2 x i16]], [512 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.9, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 9, i32 1), align 8, !dbg !2716
  store i32 512, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 9, i32 3), align 4, !dbg !2719
  %54 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 9, i32 2), align 8, !dbg !2720
  %55 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 9, i32 3), align 4, !dbg !2721
  %div34 = udiv i32 %54, %55, !dbg !2722
  %56 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 9, i32 1), align 8, !dbg !2723
  %57 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 9, i32 0), align 8, !dbg !2724
  %58 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 9, i32 3), align 4, !dbg !2725
  %59 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp, i64 0, i64 9, i32 3), align 4, !dbg !2726
  %call35 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 9), i32 9, i32 %div34, i8* %56, i32 1, i32 1, i8* %57, i32 %58, i32 %59, i8* null, i32 0, i32 0, i32 4), !dbg !2727
  br label %do.end36, !dbg !2728

do.end36:                                         ; preds = %do.body33
  call void @aacsbr_tableinit(), !dbg !2729
  call void @ff_ps_init_fixed(), !dbg !2730
  ret void, !dbg !2731
}

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #1

; Function Attrs: cold nounwind optsize uwtable
define internal void @aacsbr_tableinit() #0 !dbg !2732 {
entry:
  %n = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n, metadata !2733, metadata !2734), !dbg !2735
  store i32 1, i32* %n, align 4, !dbg !2736
  br label %for.cond, !dbg !2738

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %n, align 4, !dbg !2739
  %cmp = icmp slt i32 %0, 320, !dbg !2742
  br i1 %cmp, label %for.body, label %for.end, !dbg !2743

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %n, align 4, !dbg !2744
  %sub = sub nsw i32 320, %1, !dbg !2745
  %idxprom = sext i32 %sub to i64, !dbg !2746
  %arrayidx = getelementptr inbounds [640 x i32], [640 x i32]* @sbr_qmf_window_us, i64 0, i64 %idxprom, !dbg !2746
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2746
  %3 = load i32, i32* %n, align 4, !dbg !2747
  %add = add nsw i32 320, %3, !dbg !2748
  %idxprom1 = sext i32 %add to i64, !dbg !2749
  %arrayidx2 = getelementptr inbounds [640 x i32], [640 x i32]* @sbr_qmf_window_us, i64 0, i64 %idxprom1, !dbg !2749
  store i32 %2, i32* %arrayidx2, align 4, !dbg !2750
  br label %for.inc, !dbg !2749

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %n, align 4, !dbg !2751
  %inc = add nsw i32 %4, 1, !dbg !2751
  store i32 %inc, i32* %n, align 4, !dbg !2751
  br label %for.cond, !dbg !2753, !llvm.loop !2754

for.end:                                          ; preds = %for.cond
  %5 = load i32, i32* getelementptr inbounds ([640 x i32], [640 x i32]* @sbr_qmf_window_us, i64 0, i64 384), align 32, !dbg !2756
  %sub3 = sub nsw i32 0, %5, !dbg !2757
  store i32 %sub3, i32* getelementptr inbounds ([640 x i32], [640 x i32]* @sbr_qmf_window_us, i64 0, i64 384), align 32, !dbg !2758
  %6 = load i32, i32* getelementptr inbounds ([640 x i32], [640 x i32]* @sbr_qmf_window_us, i64 0, i64 512), align 32, !dbg !2759
  %sub4 = sub nsw i32 0, %6, !dbg !2760
  store i32 %sub4, i32* getelementptr inbounds ([640 x i32], [640 x i32]* @sbr_qmf_window_us, i64 0, i64 512), align 32, !dbg !2761
  store i32 0, i32* %n, align 4, !dbg !2762
  br label %for.cond5, !dbg !2764

for.cond5:                                        ; preds = %for.inc12, %for.end
  %7 = load i32, i32* %n, align 4, !dbg !2765
  %cmp6 = icmp slt i32 %7, 320, !dbg !2768
  br i1 %cmp6, label %for.body7, label %for.end14, !dbg !2769

for.body7:                                        ; preds = %for.cond5
  %8 = load i32, i32* %n, align 4, !dbg !2770
  %mul = mul nsw i32 2, %8, !dbg !2771
  %idxprom8 = sext i32 %mul to i64, !dbg !2772
  %arrayidx9 = getelementptr inbounds [640 x i32], [640 x i32]* @sbr_qmf_window_us, i64 0, i64 %idxprom8, !dbg !2772
  %9 = load i32, i32* %arrayidx9, align 4, !dbg !2772
  %10 = load i32, i32* %n, align 4, !dbg !2773
  %idxprom10 = sext i32 %10 to i64, !dbg !2774
  %arrayidx11 = getelementptr inbounds [320 x i32], [320 x i32]* @sbr_qmf_window_ds, i64 0, i64 %idxprom10, !dbg !2774
  store i32 %9, i32* %arrayidx11, align 4, !dbg !2775
  br label %for.inc12, !dbg !2774

for.inc12:                                        ; preds = %for.body7
  %11 = load i32, i32* %n, align 4, !dbg !2776
  %inc13 = add nsw i32 %11, 1, !dbg !2776
  store i32 %inc13, i32* %n, align 4, !dbg !2776
  br label %for.cond5, !dbg !2778, !llvm.loop !2779

for.end14:                                        ; preds = %for.cond5
  ret void, !dbg !2781
}

declare void @ff_ps_init_fixed() #1

; Function Attrs: cold nounwind optsize uwtable
define void @ff_aac_sbr_ctx_init_fixed(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, i32 %id_aac) #0 !dbg !2782 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %id_aac.addr = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !2785, metadata !2734), !dbg !2786
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !2787, metadata !2734), !dbg !2788
  store i32 %id_aac, i32* %id_aac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id_aac.addr, metadata !2789, metadata !2734), !dbg !2790
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2791
  %mdct = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 45, !dbg !2793
  %mdct_bits = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct, i32 0, i32 5, !dbg !2794
  %1 = load i32, i32* %mdct_bits, align 4, !dbg !2794
  %tobool = icmp ne i32 %1, 0, !dbg !2791
  br i1 %tobool, label %if.then, label %if.end, !dbg !2795

if.then:                                          ; preds = %entry
  br label %return, !dbg !2796

if.end:                                           ; preds = %entry
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2797
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 13, !dbg !2798
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !2797
  %3 = load i32, i32* %arrayidx, align 4, !dbg !2797
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2799
  %kx1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 13, !dbg !2800
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %kx1, i64 0, i64 0, !dbg !2799
  store i32 %3, i32* %arrayidx2, align 8, !dbg !2801
  %5 = load i32, i32* %id_aac.addr, align 4, !dbg !2802
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2803
  %id_aac3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 3, !dbg !2804
  store i32 %5, i32* %id_aac3, align 4, !dbg !2805
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2806
  call void @sbr_turnoff(%struct.SpectralBandReplication* %7), !dbg !2807
  %8 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2808
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %8, i32 0, i32 17, !dbg !2809
  %arrayidx4 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 0, !dbg !2808
  %synthesis_filterbank_samples_offset = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx4, i32 0, i32 12, !dbg !2810
  store i32 1152, i32* %synthesis_filterbank_samples_offset, align 32, !dbg !2811
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2812
  %data5 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %9, i32 0, i32 17, !dbg !2813
  %arrayidx6 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data5, i64 0, i64 1, !dbg !2812
  %synthesis_filterbank_samples_offset7 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx6, i32 0, i32 12, !dbg !2814
  store i32 1152, i32* %synthesis_filterbank_samples_offset7, align 32, !dbg !2815
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2816
  %mdct8 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %10, i32 0, i32 45, !dbg !2817
  %call = call i32 @ff_mdct_init_fixed_32(%struct.FFTContext* %mdct8, i32 7, i32 1, double 0x3EA0000000000000), !dbg !2818
  %11 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2819
  %mdct_ana = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %11, i32 0, i32 44, !dbg !2820
  %call9 = call i32 @ff_mdct_init_fixed_32(%struct.FFTContext* %mdct_ana, i32 7, i32 1, double -6.553600e+04), !dbg !2821
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2822
  %ps = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 18, !dbg !2823
  call void @ff_ps_ctx_init_fixed(%struct.PSContext* %ps), !dbg !2824
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2825
  %dsp = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %13, i32 0, i32 46, !dbg !2826
  call void @ff_sbrdsp_init_fixed(%struct.SBRDSPContext* %dsp), !dbg !2827
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2828
  %c = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %14, i32 0, i32 47, !dbg !2829
  call void @aacsbr_func_ptr_init(%struct.AACSBRContext* %c), !dbg !2830
  br label %return, !dbg !2831

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2832
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind uwtable
define internal void @sbr_turnoff(%struct.SpectralBandReplication* %sbr) #3 !dbg !2834 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !2835, metadata !2734), !dbg !2836
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2837
  %start = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 1, !dbg !2838
  store i32 0, i32* %start, align 4, !dbg !2839
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2840
  %ready_for_dequant = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 2, !dbg !2841
  store i32 0, i32* %ready_for_dequant, align 8, !dbg !2842
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2843
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 13, !dbg !2844
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !2843
  store i32 32, i32* %arrayidx, align 4, !dbg !2845
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2846
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 14, !dbg !2847
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 1, !dbg !2846
  store i32 0, i32* %arrayidx1, align 4, !dbg !2848
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2849
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 17, !dbg !2850
  %arrayidx2 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 1, !dbg !2849
  %e_a = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx2, i32 0, i32 13, !dbg !2851
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a, i64 0, i64 1, !dbg !2849
  store i32 -1, i32* %arrayidx3, align 4, !dbg !2852
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2853
  %data4 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %5, i32 0, i32 17, !dbg !2854
  %arrayidx5 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data4, i64 0, i64 0, !dbg !2853
  %e_a6 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx5, i32 0, i32 13, !dbg !2855
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a6, i64 0, i64 1, !dbg !2853
  store i32 -1, i32* %arrayidx7, align 4, !dbg !2856
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2857
  %spectrum_params = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 5, !dbg !2858
  %7 = bitcast %struct.SpectrumParameters* %spectrum_params to i8*, !dbg !2859
  call void @llvm.memset.p0i8.i64(i8* %7, i8 -1, i64 6, i32 4, i1 false), !dbg !2859
  ret void, !dbg !2860
}

declare i32 @ff_mdct_init_fixed_32(%struct.FFTContext*, i32, i32, double) #1

declare void @ff_ps_ctx_init_fixed(%struct.PSContext*) #1

declare void @ff_sbrdsp_init_fixed(%struct.SBRDSPContext*) #1

; Function Attrs: nounwind uwtable
define internal void @aacsbr_func_ptr_init(%struct.AACSBRContext* %c) #3 !dbg !2861 {
entry:
  %c.addr = alloca %struct.AACSBRContext*, align 8
  store %struct.AACSBRContext* %c, %struct.AACSBRContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACSBRContext** %c.addr, metadata !2865, metadata !2734), !dbg !2866
  %0 = load %struct.AACSBRContext*, %struct.AACSBRContext** %c.addr, align 8, !dbg !2867
  %sbr_lf_gen = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %0, i32 0, i32 0, !dbg !2868
  store i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x i32]]*, [32 x [32 x [2 x i32]]]*, i32)* @sbr_lf_gen, i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x i32]]*, [32 x [32 x [2 x i32]]]*, i32)** %sbr_lf_gen, align 8, !dbg !2869
  %1 = load %struct.AACSBRContext*, %struct.AACSBRContext** %c.addr, align 8, !dbg !2870
  %sbr_hf_assemble = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %1, i32 0, i32 1, !dbg !2871
  store void ([64 x [2 x i32]]*, [40 x [2 x i32]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)* @sbr_hf_assemble, void ([64 x [2 x i32]]*, [40 x [2 x i32]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)** %sbr_hf_assemble, align 8, !dbg !2872
  %2 = load %struct.AACSBRContext*, %struct.AACSBRContext** %c.addr, align 8, !dbg !2873
  %sbr_x_gen = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %2, i32 0, i32 2, !dbg !2874
  store i32 (%struct.SpectralBandReplication*, [38 x [64 x i32]]*, [64 x [2 x i32]]*, [64 x [2 x i32]]*, [40 x [2 x i32]]*, i32)* @sbr_x_gen, i32 (%struct.SpectralBandReplication*, [38 x [64 x i32]]*, [64 x [2 x i32]]*, [64 x [2 x i32]]*, [40 x [2 x i32]]*, i32)** %sbr_x_gen, align 8, !dbg !2875
  %3 = load %struct.AACSBRContext*, %struct.AACSBRContext** %c.addr, align 8, !dbg !2876
  %sbr_hf_inverse_filter = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %3, i32 0, i32 3, !dbg !2877
  store void (%struct.SBRDSPContext*, [2 x i32]*, [2 x i32]*, [40 x [2 x i32]]*, i32)* @sbr_hf_inverse_filter, void (%struct.SBRDSPContext*, [2 x i32]*, [2 x i32]*, [40 x [2 x i32]]*, i32)** %sbr_hf_inverse_filter, align 8, !dbg !2878
  ret void, !dbg !2879
}

; Function Attrs: cold nounwind optsize uwtable
define void @ff_aac_sbr_ctx_close_fixed(%struct.SpectralBandReplication* %sbr) #0 !dbg !2880 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !2881, metadata !2734), !dbg !2882
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2883
  %mdct = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 45, !dbg !2884
  call void @ff_mdct_end_fixed_32(%struct.FFTContext* %mdct), !dbg !2885
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2886
  %mdct_ana = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 44, !dbg !2887
  call void @ff_mdct_end_fixed_32(%struct.FFTContext* %mdct_ana), !dbg !2888
  ret void, !dbg !2889
}

declare void @ff_mdct_end_fixed_32(%struct.FFTContext*) #1

; Function Attrs: nounwind uwtable
define i32 @ff_decode_sbr_extension_fixed(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb_host, i32 %crc, i32 %cnt, i32 %id_aac) #3 !dbg !2890 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb_host.addr = alloca %struct.GetBitContext*, align 8
  %crc.addr = alloca i32, align 4
  %cnt.addr = alloca i32, align 4
  %id_aac.addr = alloca i32, align 4
  %num_sbr_bits = alloca i32, align 4
  %num_align_bits = alloca i32, align 4
  %bytes_read = alloca i32, align 4
  %gbc = alloca %struct.GetBitContext, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !2903, metadata !2734), !dbg !2904
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !2905, metadata !2734), !dbg !2906
  store %struct.GetBitContext* %gb_host, %struct.GetBitContext** %gb_host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb_host.addr, metadata !2907, metadata !2734), !dbg !2908
  store i32 %crc, i32* %crc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %crc.addr, metadata !2909, metadata !2734), !dbg !2910
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !2911, metadata !2734), !dbg !2912
  store i32 %id_aac, i32* %id_aac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id_aac.addr, metadata !2913, metadata !2734), !dbg !2914
  call void @llvm.dbg.declare(metadata i32* %num_sbr_bits, metadata !2915, metadata !2734), !dbg !2916
  store i32 0, i32* %num_sbr_bits, align 4, !dbg !2916
  call void @llvm.dbg.declare(metadata i32* %num_align_bits, metadata !2917, metadata !2734), !dbg !2918
  call void @llvm.dbg.declare(metadata i32* %bytes_read, metadata !2919, metadata !2734), !dbg !2920
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gbc, metadata !2921, metadata !2734), !dbg !2922
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb_host.addr, align 8, !dbg !2923
  %1 = bitcast %struct.GetBitContext* %gbc to i8*, !dbg !2924
  %2 = bitcast %struct.GetBitContext* %0 to i8*, !dbg !2924
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 32, i32 8, i1 false), !dbg !2924
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !2925, metadata !2734), !dbg !2926
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %gb, align 8, !dbg !2926
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb_host.addr, align 8, !dbg !2927
  %4 = load i32, i32* %cnt.addr, align 4, !dbg !2928
  %mul = mul nsw i32 %4, 8, !dbg !2929
  %sub = sub nsw i32 %mul, 4, !dbg !2930
  call void @skip_bits_long(%struct.GetBitContext* %3, i32 %sub), !dbg !2931
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2932
  %reset = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %5, i32 0, i32 4, !dbg !2933
  store i32 0, i32* %reset, align 16, !dbg !2934
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2935
  %sample_rate = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 0, !dbg !2937
  %7 = load i32, i32* %sample_rate, align 32, !dbg !2937
  %tobool = icmp ne i32 %7, 0, !dbg !2935
  br i1 %tobool, label %if.end, label %if.then, !dbg !2938

if.then:                                          ; preds = %entry
  %8 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !2939
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 21, !dbg !2940
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !2939
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !2941
  %sample_rate1 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 2, !dbg !2942
  %9 = load i32, i32* %sample_rate1, align 8, !dbg !2942
  %mul2 = mul nsw i32 2, %9, !dbg !2943
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2944
  %sample_rate3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %10, i32 0, i32 0, !dbg !2945
  store i32 %mul2, i32* %sample_rate3, align 32, !dbg !2946
  br label %if.end, !dbg !2944

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !2947
  %oc4 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %11, i32 0, i32 21, !dbg !2949
  %arrayidx5 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc4, i64 0, i64 1, !dbg !2947
  %m4ac6 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx5, i32 0, i32 0, !dbg !2950
  %ext_sample_rate = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac6, i32 0, i32 7, !dbg !2951
  %12 = load i32, i32* %ext_sample_rate, align 4, !dbg !2951
  %tobool7 = icmp ne i32 %12, 0, !dbg !2947
  br i1 %tobool7, label %if.end18, label %if.then8, !dbg !2952

if.then8:                                         ; preds = %if.end
  %13 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !2953
  %oc9 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %13, i32 0, i32 21, !dbg !2954
  %arrayidx10 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc9, i64 0, i64 1, !dbg !2953
  %m4ac11 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx10, i32 0, i32 0, !dbg !2955
  %sample_rate12 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac11, i32 0, i32 2, !dbg !2956
  %14 = load i32, i32* %sample_rate12, align 8, !dbg !2956
  %mul13 = mul nsw i32 2, %14, !dbg !2957
  %15 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !2958
  %oc14 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %15, i32 0, i32 21, !dbg !2959
  %arrayidx15 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc14, i64 0, i64 1, !dbg !2958
  %m4ac16 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx15, i32 0, i32 0, !dbg !2960
  %ext_sample_rate17 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac16, i32 0, i32 7, !dbg !2961
  store i32 %mul13, i32* %ext_sample_rate17, align 4, !dbg !2962
  br label %if.end18, !dbg !2958

if.end18:                                         ; preds = %if.then8, %if.end
  %16 = load i32, i32* %crc.addr, align 4, !dbg !2963
  %tobool19 = icmp ne i32 %16, 0, !dbg !2963
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !2965

if.then20:                                        ; preds = %if.end18
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2966
  call void @skip_bits(%struct.GetBitContext* %17, i32 10), !dbg !2968
  %18 = load i32, i32* %num_sbr_bits, align 4, !dbg !2969
  %add = add i32 %18, 10, !dbg !2969
  store i32 %add, i32* %num_sbr_bits, align 4, !dbg !2969
  br label %if.end21, !dbg !2970

if.end21:                                         ; preds = %if.then20, %if.end18
  %19 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2971
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %19, i32 0, i32 13, !dbg !2972
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !2971
  %20 = load i32, i32* %arrayidx22, align 4, !dbg !2971
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2973
  %kx23 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %21, i32 0, i32 13, !dbg !2974
  %arrayidx24 = getelementptr inbounds [2 x i32], [2 x i32]* %kx23, i64 0, i64 0, !dbg !2973
  store i32 %20, i32* %arrayidx24, align 8, !dbg !2975
  %22 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2976
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %22, i32 0, i32 14, !dbg !2977
  %arrayidx25 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 1, !dbg !2976
  %23 = load i32, i32* %arrayidx25, align 4, !dbg !2976
  %24 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2978
  %m26 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %24, i32 0, i32 14, !dbg !2979
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %m26, i64 0, i64 0, !dbg !2978
  store i32 %23, i32* %arrayidx27, align 16, !dbg !2980
  %25 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2981
  %kx_and_m_pushed = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %25, i32 0, i32 15, !dbg !2982
  store i32 1, i32* %kx_and_m_pushed, align 8, !dbg !2983
  %26 = load i32, i32* %num_sbr_bits, align 4, !dbg !2984
  %inc = add i32 %26, 1, !dbg !2984
  store i32 %inc, i32* %num_sbr_bits, align 4, !dbg !2984
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2985
  %call = call i32 @get_bits1(%struct.GetBitContext* %27), !dbg !2987
  %tobool28 = icmp ne i32 %call, 0, !dbg !2987
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !2988

if.then29:                                        ; preds = %if.end21
  %28 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2989
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2990
  %call30 = call i32 @read_sbr_header(%struct.SpectralBandReplication* %28, %struct.GetBitContext* %29), !dbg !2991
  %30 = load i32, i32* %num_sbr_bits, align 4, !dbg !2992
  %add31 = add i32 %30, %call30, !dbg !2992
  store i32 %add31, i32* %num_sbr_bits, align 4, !dbg !2992
  br label %if.end32, !dbg !2993

if.end32:                                         ; preds = %if.then29, %if.end21
  %31 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2994
  %reset33 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %31, i32 0, i32 4, !dbg !2996
  %32 = load i32, i32* %reset33, align 16, !dbg !2996
  %tobool34 = icmp ne i32 %32, 0, !dbg !2994
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !2997

if.then35:                                        ; preds = %if.end32
  %33 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !2998
  %34 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2999
  call void @sbr_reset(%struct.AACContext* %33, %struct.SpectralBandReplication* %34), !dbg !3000
  br label %if.end36, !dbg !3000

if.end36:                                         ; preds = %if.then35, %if.end32
  %35 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3001
  %start = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %35, i32 0, i32 1, !dbg !3003
  %36 = load i32, i32* %start, align 4, !dbg !3003
  %tobool37 = icmp ne i32 %36, 0, !dbg !3001
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !3004

if.then38:                                        ; preds = %if.end36
  %37 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3005
  %38 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3006
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !3007
  %40 = load i32, i32* %id_aac.addr, align 4, !dbg !3008
  %call39 = call i32 @read_sbr_data(%struct.AACContext* %37, %struct.SpectralBandReplication* %38, %struct.GetBitContext* %39, i32 %40), !dbg !3009
  %41 = load i32, i32* %num_sbr_bits, align 4, !dbg !3010
  %add40 = add i32 %41, %call39, !dbg !3010
  store i32 %add40, i32* %num_sbr_bits, align 4, !dbg !3010
  br label %if.end41, !dbg !3011

if.end41:                                         ; preds = %if.then38, %if.end36
  %42 = load i32, i32* %cnt.addr, align 4, !dbg !3012
  %shl = shl i32 %42, 3, !dbg !3013
  %sub42 = sub nsw i32 %shl, 4, !dbg !3014
  %43 = load i32, i32* %num_sbr_bits, align 4, !dbg !3015
  %sub43 = sub i32 %sub42, %43, !dbg !3016
  %and = and i32 %sub43, 7, !dbg !3017
  store i32 %and, i32* %num_align_bits, align 4, !dbg !3018
  %44 = load i32, i32* %num_sbr_bits, align 4, !dbg !3019
  %45 = load i32, i32* %num_align_bits, align 4, !dbg !3020
  %add44 = add i32 %44, %45, !dbg !3021
  %add45 = add i32 %add44, 4, !dbg !3022
  %shr = lshr i32 %add45, 3, !dbg !3023
  store i32 %shr, i32* %bytes_read, align 4, !dbg !3024
  %46 = load i32, i32* %bytes_read, align 4, !dbg !3025
  %47 = load i32, i32* %cnt.addr, align 4, !dbg !3027
  %cmp = icmp ugt i32 %46, %47, !dbg !3028
  br i1 %cmp, label %if.then46, label %if.end47, !dbg !3029

if.then46:                                        ; preds = %if.end41
  %48 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3030
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %48, i32 0, i32 1, !dbg !3032
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3032
  %50 = bitcast %struct.AVCodecContext* %49 to i8*, !dbg !3030
  %51 = load i32, i32* %cnt.addr, align 4, !dbg !3033
  %52 = load i32, i32* %bytes_read, align 4, !dbg !3034
  call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 %51, i32 %52), !dbg !3035
  %53 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3036
  call void @sbr_turnoff(%struct.SpectralBandReplication* %53), !dbg !3037
  br label %if.end47, !dbg !3038

if.end47:                                         ; preds = %if.then46, %if.end41
  %54 = load i32, i32* %cnt.addr, align 4, !dbg !3039
  ret i32 %54, !dbg !3040
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #5 !dbg !3041 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3044, metadata !2734), !dbg !3049
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !3051, metadata !2734), !dbg !3052
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !3053, metadata !2734), !dbg !3054
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3055, metadata !2734), !dbg !3056
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3057, metadata !2734), !dbg !3058
  %0 = load i32, i32* %n.addr, align 4, !dbg !3059
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3060
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !3061
  %2 = load i32, i32* %index, align 8, !dbg !3061
  %sub = sub nsw i32 0, %2, !dbg !3062
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3063
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !3064
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3064
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3065
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !3066
  %6 = load i32, i32* %index1, align 8, !dbg !3066
  %sub2 = sub nsw i32 %4, %6, !dbg !3067
  store i32 %0, i32* %a.addr.i, align 4, !dbg !3068
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !3068
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !3068
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !3069
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !3071
  %cmp.i = icmp slt i32 %7, %8, !dbg !3072
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !3073

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !3074
  store i32 %9, i32* %retval.i, align 4, !dbg !3076
  br label %av_clip_c.exit, !dbg !3076

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !3077
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !3079
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !3080
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !3081

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !3082
  store i32 %12, i32* %retval.i, align 4, !dbg !3084
  br label %av_clip_c.exit, !dbg !3084

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !3085
  store i32 %13, i32* %retval.i, align 4, !dbg !3086
  br label %av_clip_c.exit, !dbg !3086

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !3087
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3088
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !3089
  %16 = load i32, i32* %index3, align 8, !dbg !3090
  %add = add nsw i32 %16, %14, !dbg !3090
  store i32 %add, i32* %index3, align 8, !dbg !3090
  ret void, !dbg !3091
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !3092 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3093, metadata !2734), !dbg !3094
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3095, metadata !2734), !dbg !3096
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !3097, metadata !2734), !dbg !3098
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3099
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3100
  %1 = load i32, i32* %index, align 8, !dbg !3100
  store i32 %1, i32* %re_index, align 4, !dbg !3098
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !3101, metadata !2734), !dbg !3102
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !3103, metadata !2734), !dbg !3104
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3105
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !3106
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3106
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !3104
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !3107
  %5 = load i32, i32* %re_index, align 4, !dbg !3108
  %6 = load i32, i32* %n.addr, align 4, !dbg !3109
  %add = add i32 %5, %6, !dbg !3110
  %cmp = icmp ugt i32 %4, %add, !dbg !3111
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3112

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !3113
  %8 = load i32, i32* %n.addr, align 4, !dbg !3115
  %add1 = add i32 %7, %8, !dbg !3116
  br label %cond.end, !dbg !3117

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !3118
  br label %cond.end, !dbg !3120

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !3121
  store i32 %cond, i32* %re_index, align 4, !dbg !3123
  %10 = load i32, i32* %re_index, align 4, !dbg !3124
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3125
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !3126
  store i32 %10, i32* %index2, align 8, !dbg !3127
  ret void, !dbg !3128
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #5 !dbg !3129 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3132, metadata !2734), !dbg !3133
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3134, metadata !2734), !dbg !3135
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3136
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3137
  %1 = load i32, i32* %index1, align 8, !dbg !3137
  store i32 %1, i32* %index, align 4, !dbg !3135
  call void @llvm.dbg.declare(metadata i8* %result, metadata !3138, metadata !2734), !dbg !3139
  %2 = load i32, i32* %index, align 4, !dbg !3140
  %shr = lshr i32 %2, 3, !dbg !3141
  %idxprom = zext i32 %shr to i64, !dbg !3142
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3142
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !3143
  %4 = load i8*, i8** %buffer, align 8, !dbg !3143
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !3142
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3142
  store i8 %5, i8* %result, align 1, !dbg !3139
  %6 = load i32, i32* %index, align 4, !dbg !3144
  %and = and i32 %6, 7, !dbg !3145
  %7 = load i8, i8* %result, align 1, !dbg !3146
  %conv = zext i8 %7 to i32, !dbg !3146
  %shl = shl i32 %conv, %and, !dbg !3146
  %conv2 = trunc i32 %shl to i8, !dbg !3146
  store i8 %conv2, i8* %result, align 1, !dbg !3146
  %8 = load i8, i8* %result, align 1, !dbg !3147
  %conv3 = zext i8 %8 to i32, !dbg !3147
  %shr4 = ashr i32 %conv3, 7, !dbg !3147
  %conv5 = trunc i32 %shr4 to i8, !dbg !3147
  store i8 %conv5, i8* %result, align 1, !dbg !3147
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3148
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !3150
  %10 = load i32, i32* %index6, align 8, !dbg !3150
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3151
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !3152
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3152
  %cmp = icmp slt i32 %10, %12, !dbg !3153
  br i1 %cmp, label %if.then, label %if.end, !dbg !3154

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !3155
  %inc = add i32 %13, 1, !dbg !3155
  store i32 %inc, i32* %index, align 4, !dbg !3155
  br label %if.end, !dbg !3156

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !3157
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3158
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !3159
  store i32 %14, i32* %index8, align 8, !dbg !3160
  %16 = load i8, i8* %result, align 1, !dbg !3161
  %conv9 = zext i8 %16 to i32, !dbg !3161
  ret i32 %conv9, !dbg !3162
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_header(%struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb) #3 !dbg !3163 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %cnt = alloca i32, align 4
  %bs_header_extra_1 = alloca i8, align 1
  %bs_header_extra_2 = alloca i8, align 1
  %old_bs_limiter_bands = alloca i32, align 4
  %old_spectrum_params = alloca %struct.SpectrumParameters, align 1
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !3166, metadata !2734), !dbg !3167
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3168, metadata !2734), !dbg !3169
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !3170, metadata !2734), !dbg !3171
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3172
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !3173
  store i32 %call, i32* %cnt, align 4, !dbg !3171
  call void @llvm.dbg.declare(metadata i8* %bs_header_extra_1, metadata !3174, metadata !2734), !dbg !3175
  call void @llvm.dbg.declare(metadata i8* %bs_header_extra_2, metadata !3176, metadata !2734), !dbg !3177
  call void @llvm.dbg.declare(metadata i32* %old_bs_limiter_bands, metadata !3178, metadata !2734), !dbg !3179
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3180
  %bs_limiter_bands = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 7, !dbg !3181
  %2 = load i32, i32* %bs_limiter_bands, align 32, !dbg !3181
  store i32 %2, i32* %old_bs_limiter_bands, align 4, !dbg !3179
  call void @llvm.dbg.declare(metadata %struct.SpectrumParameters* %old_spectrum_params, metadata !3182, metadata !2734), !dbg !3183
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3184
  %start = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 1, !dbg !3185
  store i32 1, i32* %start, align 4, !dbg !3186
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3187
  %ready_for_dequant = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 2, !dbg !3188
  store i32 0, i32* %ready_for_dequant, align 8, !dbg !3189
  %5 = bitcast %struct.SpectrumParameters* %old_spectrum_params to i8*, !dbg !3190
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3191
  %spectrum_params = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 5, !dbg !3192
  %7 = bitcast %struct.SpectrumParameters* %spectrum_params to i8*, !dbg !3190
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %7, i64 6, i32 1, i1 false), !dbg !3190
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3193
  %call1 = call i32 @get_bits1(%struct.GetBitContext* %8), !dbg !3194
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3195
  %bs_amp_res_header = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %9, i32 0, i32 6, !dbg !3196
  store i32 %call1, i32* %bs_amp_res_header, align 4, !dbg !3197
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3198
  %call2 = call i32 @get_bits(%struct.GetBitContext* %10, i32 4), !dbg !3199
  %conv = trunc i32 %call2 to i8, !dbg !3199
  %11 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3200
  %spectrum_params3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %11, i32 0, i32 5, !dbg !3201
  %bs_start_freq = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params3, i32 0, i32 0, !dbg !3202
  store i8 %conv, i8* %bs_start_freq, align 4, !dbg !3203
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3204
  %call4 = call i32 @get_bits(%struct.GetBitContext* %12, i32 4), !dbg !3205
  %conv5 = trunc i32 %call4 to i8, !dbg !3205
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3206
  %spectrum_params6 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %13, i32 0, i32 5, !dbg !3207
  %bs_stop_freq = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params6, i32 0, i32 1, !dbg !3208
  store i8 %conv5, i8* %bs_stop_freq, align 1, !dbg !3209
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3210
  %call7 = call i32 @get_bits(%struct.GetBitContext* %14, i32 3), !dbg !3211
  %conv8 = trunc i32 %call7 to i8, !dbg !3211
  %15 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3212
  %spectrum_params9 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %15, i32 0, i32 5, !dbg !3213
  %bs_xover_band = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params9, i32 0, i32 2, !dbg !3214
  store i8 %conv8, i8* %bs_xover_band, align 2, !dbg !3215
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3216
  call void @skip_bits(%struct.GetBitContext* %16, i32 2), !dbg !3217
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3218
  %call10 = call i32 @get_bits1(%struct.GetBitContext* %17), !dbg !3219
  %conv11 = trunc i32 %call10 to i8, !dbg !3219
  store i8 %conv11, i8* %bs_header_extra_1, align 1, !dbg !3220
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3221
  %call12 = call i32 @get_bits1(%struct.GetBitContext* %18), !dbg !3222
  %conv13 = trunc i32 %call12 to i8, !dbg !3222
  store i8 %conv13, i8* %bs_header_extra_2, align 1, !dbg !3223
  %19 = load i8, i8* %bs_header_extra_1, align 1, !dbg !3224
  %tobool = icmp ne i8 %19, 0, !dbg !3224
  br i1 %tobool, label %if.then, label %if.else, !dbg !3226

if.then:                                          ; preds = %entry
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3227
  %call14 = call i32 @get_bits(%struct.GetBitContext* %20, i32 2), !dbg !3229
  %conv15 = trunc i32 %call14 to i8, !dbg !3229
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3230
  %spectrum_params16 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %21, i32 0, i32 5, !dbg !3231
  %bs_freq_scale = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params16, i32 0, i32 3, !dbg !3232
  store i8 %conv15, i8* %bs_freq_scale, align 1, !dbg !3233
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3234
  %call17 = call i32 @get_bits1(%struct.GetBitContext* %22), !dbg !3235
  %conv18 = trunc i32 %call17 to i8, !dbg !3235
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3236
  %spectrum_params19 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %23, i32 0, i32 5, !dbg !3237
  %bs_alter_scale = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params19, i32 0, i32 4, !dbg !3238
  store i8 %conv18, i8* %bs_alter_scale, align 4, !dbg !3239
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3240
  %call20 = call i32 @get_bits(%struct.GetBitContext* %24, i32 2), !dbg !3241
  %conv21 = trunc i32 %call20 to i8, !dbg !3241
  %25 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3242
  %spectrum_params22 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %25, i32 0, i32 5, !dbg !3243
  %bs_noise_bands = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params22, i32 0, i32 5, !dbg !3244
  store i8 %conv21, i8* %bs_noise_bands, align 1, !dbg !3245
  br label %if.end, !dbg !3246

if.else:                                          ; preds = %entry
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3247
  %spectrum_params23 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 5, !dbg !3249
  %bs_freq_scale24 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params23, i32 0, i32 3, !dbg !3250
  store i8 2, i8* %bs_freq_scale24, align 1, !dbg !3251
  %27 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3252
  %spectrum_params25 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %27, i32 0, i32 5, !dbg !3253
  %bs_alter_scale26 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params25, i32 0, i32 4, !dbg !3254
  store i8 1, i8* %bs_alter_scale26, align 4, !dbg !3255
  %28 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3256
  %spectrum_params27 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %28, i32 0, i32 5, !dbg !3257
  %bs_noise_bands28 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params27, i32 0, i32 5, !dbg !3258
  store i8 2, i8* %bs_noise_bands28, align 1, !dbg !3259
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %29 = bitcast %struct.SpectrumParameters* %old_spectrum_params to i8*, !dbg !3260
  %30 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3262
  %spectrum_params29 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %30, i32 0, i32 5, !dbg !3263
  %31 = bitcast %struct.SpectrumParameters* %spectrum_params29 to i8*, !dbg !3264
  %call30 = call i32 @memcmp(i8* %29, i8* %31, i64 6) #10, !dbg !3265
  %tobool31 = icmp ne i32 %call30, 0, !dbg !3265
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !3266

if.then32:                                        ; preds = %if.end
  %32 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3267
  %reset = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %32, i32 0, i32 4, !dbg !3268
  store i32 1, i32* %reset, align 16, !dbg !3269
  br label %if.end33, !dbg !3267

if.end33:                                         ; preds = %if.then32, %if.end
  %33 = load i8, i8* %bs_header_extra_2, align 1, !dbg !3270
  %tobool34 = icmp ne i8 %33, 0, !dbg !3270
  br i1 %tobool34, label %if.then35, label %if.else41, !dbg !3272

if.then35:                                        ; preds = %if.end33
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3273
  %call36 = call i32 @get_bits(%struct.GetBitContext* %34, i32 2), !dbg !3275
  %35 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3276
  %bs_limiter_bands37 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %35, i32 0, i32 7, !dbg !3277
  store i32 %call36, i32* %bs_limiter_bands37, align 32, !dbg !3278
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3279
  %call38 = call i32 @get_bits(%struct.GetBitContext* %36, i32 2), !dbg !3280
  %37 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3281
  %bs_limiter_gains = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %37, i32 0, i32 8, !dbg !3282
  store i32 %call38, i32* %bs_limiter_gains, align 4, !dbg !3283
  %38 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3284
  %call39 = call i32 @get_bits1(%struct.GetBitContext* %38), !dbg !3285
  %39 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3286
  %bs_interpol_freq = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %39, i32 0, i32 9, !dbg !3287
  store i32 %call39, i32* %bs_interpol_freq, align 8, !dbg !3288
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3289
  %call40 = call i32 @get_bits1(%struct.GetBitContext* %40), !dbg !3290
  %41 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3291
  %bs_smoothing_mode = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %41, i32 0, i32 10, !dbg !3292
  store i32 %call40, i32* %bs_smoothing_mode, align 4, !dbg !3293
  br label %if.end46, !dbg !3294

if.else41:                                        ; preds = %if.end33
  %42 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3295
  %bs_limiter_bands42 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %42, i32 0, i32 7, !dbg !3297
  store i32 2, i32* %bs_limiter_bands42, align 32, !dbg !3298
  %43 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3299
  %bs_limiter_gains43 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %43, i32 0, i32 8, !dbg !3300
  store i32 2, i32* %bs_limiter_gains43, align 4, !dbg !3301
  %44 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3302
  %bs_interpol_freq44 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %44, i32 0, i32 9, !dbg !3303
  store i32 1, i32* %bs_interpol_freq44, align 8, !dbg !3304
  %45 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3305
  %bs_smoothing_mode45 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %45, i32 0, i32 10, !dbg !3306
  store i32 1, i32* %bs_smoothing_mode45, align 4, !dbg !3307
  br label %if.end46

if.end46:                                         ; preds = %if.else41, %if.then35
  %46 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3308
  %bs_limiter_bands47 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %46, i32 0, i32 7, !dbg !3310
  %47 = load i32, i32* %bs_limiter_bands47, align 32, !dbg !3310
  %48 = load i32, i32* %old_bs_limiter_bands, align 4, !dbg !3311
  %cmp = icmp ne i32 %47, %48, !dbg !3312
  br i1 %cmp, label %land.lhs.true, label %if.end52, !dbg !3313

land.lhs.true:                                    ; preds = %if.end46
  %49 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3314
  %reset49 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %49, i32 0, i32 4, !dbg !3316
  %50 = load i32, i32* %reset49, align 16, !dbg !3316
  %tobool50 = icmp ne i32 %50, 0, !dbg !3314
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !3317

if.then51:                                        ; preds = %land.lhs.true
  %51 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3318
  call void @sbr_make_f_tablelim(%struct.SpectralBandReplication* %51), !dbg !3319
  br label %if.end52, !dbg !3319

if.end52:                                         ; preds = %if.then51, %land.lhs.true, %if.end46
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3320
  %call53 = call i32 @get_bits_count(%struct.GetBitContext* %52), !dbg !3321
  %53 = load i32, i32* %cnt, align 4, !dbg !3322
  %sub = sub i32 %call53, %53, !dbg !3323
  ret i32 %sub, !dbg !3324
}

; Function Attrs: nounwind uwtable
define internal void @sbr_reset(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr) #3 !dbg !3325 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %err = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !3328, metadata !2734), !dbg !3329
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !3330, metadata !2734), !dbg !3331
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3332, metadata !2734), !dbg !3333
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3334
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3335
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3336
  %spectrum_params = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 5, !dbg !3337
  %call = call i32 @sbr_make_f_master(%struct.AACContext* %0, %struct.SpectralBandReplication* %1, %struct.SpectrumParameters* %spectrum_params), !dbg !3338
  store i32 %call, i32* %err, align 4, !dbg !3339
  %3 = load i32, i32* %err, align 4, !dbg !3340
  %cmp = icmp sge i32 %3, 0, !dbg !3342
  br i1 %cmp, label %if.then, label %if.end, !dbg !3343

if.then:                                          ; preds = %entry
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3344
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3345
  %call1 = call i32 @sbr_make_f_derived(%struct.AACContext* %4, %struct.SpectralBandReplication* %5), !dbg !3346
  store i32 %call1, i32* %err, align 4, !dbg !3347
  br label %if.end, !dbg !3348

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %err, align 4, !dbg !3349
  %cmp2 = icmp slt i32 %6, 0, !dbg !3351
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3352

if.then3:                                         ; preds = %if.end
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3353
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 1, !dbg !3355
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3355
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !3353
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.15, i32 0, i32 0)), !dbg !3356
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3357
  call void @sbr_turnoff(%struct.SpectralBandReplication* %10), !dbg !3358
  br label %if.end4, !dbg !3359

if.end4:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !3360
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_data(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, i32 %id_aac) #3 !dbg !3361 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %id_aac.addr = alloca i32, align 4
  %cnt = alloca i32, align 4
  %num_bits_left = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !3364, metadata !2734), !dbg !3365
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !3366, metadata !2734), !dbg !3367
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3368, metadata !2734), !dbg !3369
  store i32 %id_aac, i32* %id_aac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id_aac.addr, metadata !3370, metadata !2734), !dbg !3371
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !3372, metadata !2734), !dbg !3373
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3374
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !3375
  store i32 %call, i32* %cnt, align 4, !dbg !3373
  %1 = load i32, i32* %id_aac.addr, align 4, !dbg !3376
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3377
  %id_aac1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 3, !dbg !3378
  store i32 %1, i32* %id_aac1, align 4, !dbg !3379
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3380
  %ready_for_dequant = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 2, !dbg !3381
  store i32 1, i32* %ready_for_dequant, align 8, !dbg !3382
  %4 = load i32, i32* %id_aac.addr, align 4, !dbg !3383
  %cmp = icmp eq i32 %4, 0, !dbg !3385
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3386

lor.lhs.false:                                    ; preds = %entry
  %5 = load i32, i32* %id_aac.addr, align 4, !dbg !3387
  %cmp2 = icmp eq i32 %5, 2, !dbg !3389
  br i1 %cmp2, label %if.then, label %if.else, !dbg !3390

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3391
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3394
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3395
  %call3 = call i32 @read_sbr_single_channel_element(%struct.AACContext* %6, %struct.SpectralBandReplication* %7, %struct.GetBitContext* %8), !dbg !3396
  %tobool = icmp ne i32 %call3, 0, !dbg !3396
  br i1 %tobool, label %if.then4, label %if.end, !dbg !3397

if.then4:                                         ; preds = %if.then
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3398
  call void @sbr_turnoff(%struct.SpectralBandReplication* %9), !dbg !3400
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3401
  %call5 = call i32 @get_bits_count(%struct.GetBitContext* %10), !dbg !3402
  %11 = load i32, i32* %cnt, align 4, !dbg !3403
  %sub = sub i32 %call5, %11, !dbg !3404
  store i32 %sub, i32* %retval, align 4, !dbg !3405
  br label %return, !dbg !3405

if.end:                                           ; preds = %if.then
  br label %if.end18, !dbg !3406

if.else:                                          ; preds = %lor.lhs.false
  %12 = load i32, i32* %id_aac.addr, align 4, !dbg !3407
  %cmp6 = icmp eq i32 %12, 1, !dbg !3410
  br i1 %cmp6, label %if.then7, label %if.else14, !dbg !3407

if.then7:                                         ; preds = %if.else
  %13 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3411
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3414
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3415
  %call8 = call i32 @read_sbr_channel_pair_element(%struct.AACContext* %13, %struct.SpectralBandReplication* %14, %struct.GetBitContext* %15), !dbg !3416
  %tobool9 = icmp ne i32 %call8, 0, !dbg !3416
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !3417

if.then10:                                        ; preds = %if.then7
  %16 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3418
  call void @sbr_turnoff(%struct.SpectralBandReplication* %16), !dbg !3420
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3421
  %call11 = call i32 @get_bits_count(%struct.GetBitContext* %17), !dbg !3422
  %18 = load i32, i32* %cnt, align 4, !dbg !3423
  %sub12 = sub i32 %call11, %18, !dbg !3424
  store i32 %sub12, i32* %retval, align 4, !dbg !3425
  br label %return, !dbg !3425

if.end13:                                         ; preds = %if.then7
  br label %if.end17, !dbg !3426

if.else14:                                        ; preds = %if.else
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3427
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 1, !dbg !3429
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3429
  %21 = bitcast %struct.AVCodecContext* %20 to i8*, !dbg !3427
  %22 = load i32, i32* %id_aac.addr, align 4, !dbg !3430
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.30, i32 0, i32 0), i32 %22), !dbg !3431
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3432
  call void @sbr_turnoff(%struct.SpectralBandReplication* %23), !dbg !3433
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3434
  %call15 = call i32 @get_bits_count(%struct.GetBitContext* %24), !dbg !3435
  %25 = load i32, i32* %cnt, align 4, !dbg !3436
  %sub16 = sub i32 %call15, %25, !dbg !3437
  store i32 %sub16, i32* %retval, align 4, !dbg !3438
  br label %return, !dbg !3438

if.end17:                                         ; preds = %if.end13
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3439
  %call19 = call i32 @get_bits1(%struct.GetBitContext* %26), !dbg !3441
  %tobool20 = icmp ne i32 %call19, 0, !dbg !3441
  br i1 %tobool20, label %if.then21, label %if.end37, !dbg !3442

if.then21:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i32* %num_bits_left, metadata !3443, metadata !2734), !dbg !3445
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3446
  %call22 = call i32 @get_bits(%struct.GetBitContext* %27, i32 4), !dbg !3447
  store i32 %call22, i32* %num_bits_left, align 4, !dbg !3445
  %28 = load i32, i32* %num_bits_left, align 4, !dbg !3448
  %cmp23 = icmp eq i32 %28, 15, !dbg !3450
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !3451

if.then24:                                        ; preds = %if.then21
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3452
  %call25 = call i32 @get_bits(%struct.GetBitContext* %29, i32 8), !dbg !3453
  %30 = load i32, i32* %num_bits_left, align 4, !dbg !3454
  %add = add i32 %30, %call25, !dbg !3454
  store i32 %add, i32* %num_bits_left, align 4, !dbg !3454
  br label %if.end26, !dbg !3455

if.end26:                                         ; preds = %if.then24, %if.then21
  %31 = load i32, i32* %num_bits_left, align 4, !dbg !3456
  %shl = shl i32 %31, 3, !dbg !3456
  store i32 %shl, i32* %num_bits_left, align 4, !dbg !3456
  br label %while.cond, !dbg !3457

while.cond:                                       ; preds = %while.body, %if.end26
  %32 = load i32, i32* %num_bits_left, align 4, !dbg !3458
  %cmp27 = icmp sgt i32 %32, 7, !dbg !3460
  br i1 %cmp27, label %while.body, label %while.end, !dbg !3461

while.body:                                       ; preds = %while.cond
  %33 = load i32, i32* %num_bits_left, align 4, !dbg !3462
  %sub28 = sub nsw i32 %33, 2, !dbg !3462
  store i32 %sub28, i32* %num_bits_left, align 4, !dbg !3462
  %34 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3464
  %35 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3465
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3466
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3467
  %call29 = call i32 @get_bits(%struct.GetBitContext* %37, i32 2), !dbg !3468
  call void @read_sbr_extension(%struct.AACContext* %34, %struct.SpectralBandReplication* %35, %struct.GetBitContext* %36, i32 %call29, i32* %num_bits_left), !dbg !3469
  br label %while.cond, !dbg !3471, !llvm.loop !3473

while.end:                                        ; preds = %while.cond
  %38 = load i32, i32* %num_bits_left, align 4, !dbg !3474
  %cmp30 = icmp slt i32 %38, 0, !dbg !3476
  br i1 %cmp30, label %if.then31, label %if.end33, !dbg !3477

if.then31:                                        ; preds = %while.end
  %39 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3478
  %avctx32 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 1, !dbg !3480
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx32, align 8, !dbg !3480
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !3478
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i32 0, i32 0)), !dbg !3481
  br label %if.end33, !dbg !3482

if.end33:                                         ; preds = %if.then31, %while.end
  %42 = load i32, i32* %num_bits_left, align 4, !dbg !3483
  %cmp34 = icmp sgt i32 %42, 0, !dbg !3485
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !3486

if.then35:                                        ; preds = %if.end33
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3487
  %44 = load i32, i32* %num_bits_left, align 4, !dbg !3488
  call void @skip_bits(%struct.GetBitContext* %43, i32 %44), !dbg !3489
  br label %if.end36, !dbg !3489

if.end36:                                         ; preds = %if.then35, %if.end33
  br label %if.end37, !dbg !3490

if.end37:                                         ; preds = %if.end36, %if.end18
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3491
  %call38 = call i32 @get_bits_count(%struct.GetBitContext* %45), !dbg !3492
  %46 = load i32, i32* %cnt, align 4, !dbg !3493
  %sub39 = sub i32 %call38, %46, !dbg !3494
  store i32 %sub39, i32* %retval, align 4, !dbg !3495
  br label %return, !dbg !3495

return:                                           ; preds = %if.end37, %if.else14, %if.then10, %if.then4
  %47 = load i32, i32* %retval, align 4, !dbg !3496
  ret i32 %47, !dbg !3496
}

declare void @av_log(i8*, i32, i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @ff_sbr_apply_fixed(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, i32 %id_aac, i32* %L, i32* %R) #3 !dbg !3497 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %id_aac.addr = alloca i32, align 4
  %L.addr = alloca i32*, align 8
  %R.addr = alloca i32*, align 8
  %downsampled = alloca i32, align 4
  %ch = alloca i32, align 4
  %nch = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !3500, metadata !2734), !dbg !3501
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !3502, metadata !2734), !dbg !3503
  store i32 %id_aac, i32* %id_aac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id_aac.addr, metadata !3504, metadata !2734), !dbg !3505
  store i32* %L, i32** %L.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %L.addr, metadata !3506, metadata !2734), !dbg !3507
  store i32* %R, i32** %R.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %R.addr, metadata !3508, metadata !2734), !dbg !3509
  call void @llvm.dbg.declare(metadata i32* %downsampled, metadata !3510, metadata !2734), !dbg !3511
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3512
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 21, !dbg !3513
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !3512
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !3514
  %ext_sample_rate = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 7, !dbg !3515
  %1 = load i32, i32* %ext_sample_rate, align 4, !dbg !3515
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3516
  %sample_rate = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 0, !dbg !3517
  %3 = load i32, i32* %sample_rate, align 32, !dbg !3517
  %cmp = icmp slt i32 %1, %3, !dbg !3518
  %conv = zext i1 %cmp to i32, !dbg !3518
  store i32 %conv, i32* %downsampled, align 4, !dbg !3511
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3519, metadata !2734), !dbg !3520
  call void @llvm.dbg.declare(metadata i32* %nch, metadata !3521, metadata !2734), !dbg !3522
  %4 = load i32, i32* %id_aac.addr, align 4, !dbg !3523
  %cmp1 = icmp eq i32 %4, 1, !dbg !3524
  %cond = select i1 %cmp1, i32 2, i32 1, !dbg !3525
  store i32 %cond, i32* %nch, align 4, !dbg !3522
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3526, metadata !2734), !dbg !3527
  %5 = load i32, i32* %id_aac.addr, align 4, !dbg !3528
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3530
  %id_aac3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 3, !dbg !3531
  %7 = load i32, i32* %id_aac3, align 4, !dbg !3531
  %cmp4 = icmp ne i32 %5, %7, !dbg !3532
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3533

if.then:                                          ; preds = %entry
  %8 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3534
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 1, !dbg !3536
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3536
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !3534
  %11 = load i32, i32* %id_aac.addr, align 4, !dbg !3537
  %cmp6 = icmp eq i32 %11, 3, !dbg !3538
  %cond8 = select i1 %cmp6, i32 40, i32 24, !dbg !3537
  %12 = load i32, i32* %id_aac.addr, align 4, !dbg !3539
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3540
  %id_aac9 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %13, i32 0, i32 3, !dbg !3541
  %14 = load i32, i32* %id_aac9, align 4, !dbg !3541
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 %cond8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i32 0, i32 0), i32 %12, i32 %14), !dbg !3542
  %15 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3543
  call void @sbr_turnoff(%struct.SpectralBandReplication* %15), !dbg !3544
  br label %if.end, !dbg !3545

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3546
  %start = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %16, i32 0, i32 1, !dbg !3548
  %17 = load i32, i32* %start, align 4, !dbg !3548
  %tobool = icmp ne i32 %17, 0, !dbg !3546
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !3549

land.lhs.true:                                    ; preds = %if.end
  %18 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3550
  %ready_for_dequant = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %18, i32 0, i32 2, !dbg !3552
  %19 = load i32, i32* %ready_for_dequant, align 8, !dbg !3552
  %tobool10 = icmp ne i32 %19, 0, !dbg !3550
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !3553

if.then11:                                        ; preds = %land.lhs.true
  %20 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3554
  %avctx12 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 1, !dbg !3556
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx12, align 8, !dbg !3556
  %22 = bitcast %struct.AVCodecContext* %21 to i8*, !dbg !3554
  call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i32 0, i32 0)), !dbg !3557
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3558
  call void @sbr_turnoff(%struct.SpectralBandReplication* %23), !dbg !3559
  br label %if.end13, !dbg !3560

if.end13:                                         ; preds = %if.then11, %land.lhs.true, %if.end
  %24 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3561
  %kx_and_m_pushed = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %24, i32 0, i32 15, !dbg !3563
  %25 = load i32, i32* %kx_and_m_pushed, align 8, !dbg !3563
  %tobool14 = icmp ne i32 %25, 0, !dbg !3561
  br i1 %tobool14, label %if.else, label %if.then15, !dbg !3564

if.then15:                                        ; preds = %if.end13
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3565
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 13, !dbg !3567
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !3565
  %27 = load i32, i32* %arrayidx16, align 4, !dbg !3565
  %28 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3568
  %kx17 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %28, i32 0, i32 13, !dbg !3569
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %kx17, i64 0, i64 0, !dbg !3568
  store i32 %27, i32* %arrayidx18, align 8, !dbg !3570
  %29 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3571
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %29, i32 0, i32 14, !dbg !3572
  %arrayidx19 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 1, !dbg !3571
  %30 = load i32, i32* %arrayidx19, align 4, !dbg !3571
  %31 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3573
  %m20 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %31, i32 0, i32 14, !dbg !3574
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %m20, i64 0, i64 0, !dbg !3573
  store i32 %30, i32* %arrayidx21, align 16, !dbg !3575
  br label %if.end23, !dbg !3576

if.else:                                          ; preds = %if.end13
  %32 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3577
  %kx_and_m_pushed22 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %32, i32 0, i32 15, !dbg !3579
  store i32 0, i32* %kx_and_m_pushed22, align 8, !dbg !3580
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then15
  %33 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3581
  %start24 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %33, i32 0, i32 1, !dbg !3583
  %34 = load i32, i32* %start24, align 4, !dbg !3583
  %tobool25 = icmp ne i32 %34, 0, !dbg !3581
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !3584

if.then26:                                        ; preds = %if.end23
  %35 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3585
  %36 = load i32, i32* %id_aac.addr, align 4, !dbg !3587
  call void @sbr_dequant(%struct.SpectralBandReplication* %35, i32 %36), !dbg !3588
  %37 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3589
  %ready_for_dequant27 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %37, i32 0, i32 2, !dbg !3590
  store i32 0, i32* %ready_for_dequant27, align 8, !dbg !3591
  br label %if.end28, !dbg !3592

if.end28:                                         ; preds = %if.then26, %if.end23
  store i32 0, i32* %ch, align 4, !dbg !3593
  br label %for.cond, !dbg !3595

for.cond:                                         ; preds = %for.inc, %if.end28
  %38 = load i32, i32* %ch, align 4, !dbg !3596
  %39 = load i32, i32* %nch, align 4, !dbg !3599
  %cmp29 = icmp slt i32 %38, %39, !dbg !3600
  br i1 %cmp29, label %for.body, label %for.end, !dbg !3601

for.body:                                         ; preds = %for.cond
  %40 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3602
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %40, i32 0, i32 14, !dbg !3604
  %41 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp, align 32, !dbg !3604
  %42 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3605
  %mdct_ana = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %42, i32 0, i32 44, !dbg !3606
  %43 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3607
  %dsp = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %43, i32 0, i32 46, !dbg !3608
  %44 = load i32, i32* %ch, align 4, !dbg !3609
  %tobool31 = icmp ne i32 %44, 0, !dbg !3609
  br i1 %tobool31, label %cond.true, label %cond.false, !dbg !3609

cond.true:                                        ; preds = %for.body
  %45 = load i32*, i32** %R.addr, align 8, !dbg !3610
  br label %cond.end, !dbg !3612

cond.false:                                       ; preds = %for.body
  %46 = load i32*, i32** %L.addr, align 8, !dbg !3613
  br label %cond.end, !dbg !3615

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond32 = phi i32* [ %45, %cond.true ], [ %46, %cond.false ], !dbg !3616
  %47 = load i32, i32* %ch, align 4, !dbg !3618
  %idxprom = sext i32 %47 to i64, !dbg !3619
  %48 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3619
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %48, i32 0, i32 17, !dbg !3620
  %arrayidx33 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 %idxprom, !dbg !3619
  %analysis_filterbank_samples = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx33, i32 0, i32 11, !dbg !3621
  %arraydecay = getelementptr inbounds [1312 x i32], [1312 x i32]* %analysis_filterbank_samples, i32 0, i32 0, !dbg !3619
  %49 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3622
  %qmf_filter_scratch = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %49, i32 0, i32 43, !dbg !3623
  %arraydecay34 = getelementptr inbounds [5 x [64 x i32]], [5 x [64 x i32]]* %qmf_filter_scratch, i32 0, i32 0, !dbg !3622
  %50 = bitcast [64 x i32]* %arraydecay34 to i32*, !dbg !3624
  %51 = load i32, i32* %ch, align 4, !dbg !3625
  %idxprom35 = sext i32 %51 to i64, !dbg !3626
  %52 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3626
  %data36 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %52, i32 0, i32 17, !dbg !3627
  %arrayidx37 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data36, i64 0, i64 %idxprom35, !dbg !3626
  %W = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx37, i32 0, i32 15, !dbg !3628
  %arraydecay38 = getelementptr inbounds [2 x [32 x [32 x [2 x i32]]]], [2 x [32 x [32 x [2 x i32]]]]* %W, i32 0, i32 0, !dbg !3626
  %53 = load i32, i32* %ch, align 4, !dbg !3629
  %idxprom39 = sext i32 %53 to i64, !dbg !3630
  %54 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3630
  %data40 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %54, i32 0, i32 17, !dbg !3631
  %arrayidx41 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data40, i64 0, i64 %idxprom39, !dbg !3630
  %Ypos = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx41, i32 0, i32 16, !dbg !3632
  %55 = load i32, i32* %Ypos, align 32, !dbg !3632
  call void @sbr_qmf_analysis(%struct.AVFixedDSPContext* %41, %struct.FFTContext* %mdct_ana, %struct.SBRDSPContext* %dsp, i32* %cond32, i32* %arraydecay, i32* %50, [32 x [32 x [2 x i32]]]* %arraydecay38, i32 %55), !dbg !3633
  %56 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3634
  %c = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %56, i32 0, i32 47, !dbg !3635
  %sbr_lf_gen = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %c, i32 0, i32 0, !dbg !3636
  %57 = load i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x i32]]*, [32 x [32 x [2 x i32]]]*, i32)*, i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x i32]]*, [32 x [32 x [2 x i32]]]*, i32)** %sbr_lf_gen, align 16, !dbg !3636
  %58 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3637
  %59 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3638
  %60 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3639
  %X_low = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %60, i32 0, i32 30, !dbg !3640
  %arraydecay42 = getelementptr inbounds [32 x [40 x [2 x i32]]], [32 x [40 x [2 x i32]]]* %X_low, i32 0, i32 0, !dbg !3639
  %61 = load i32, i32* %ch, align 4, !dbg !3641
  %idxprom43 = sext i32 %61 to i64, !dbg !3642
  %62 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3642
  %data44 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %62, i32 0, i32 17, !dbg !3643
  %arrayidx45 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data44, i64 0, i64 %idxprom43, !dbg !3642
  %W46 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx45, i32 0, i32 15, !dbg !3644
  %arraydecay47 = getelementptr inbounds [2 x [32 x [32 x [2 x i32]]]], [2 x [32 x [32 x [2 x i32]]]]* %W46, i32 0, i32 0, !dbg !3642
  %63 = load i32, i32* %ch, align 4, !dbg !3645
  %idxprom48 = sext i32 %63 to i64, !dbg !3646
  %64 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3646
  %data49 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %64, i32 0, i32 17, !dbg !3647
  %arrayidx50 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data49, i64 0, i64 %idxprom48, !dbg !3646
  %Ypos51 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx50, i32 0, i32 16, !dbg !3648
  %65 = load i32, i32* %Ypos51, align 32, !dbg !3648
  %call = call i32 %57(%struct.AACContext* %58, %struct.SpectralBandReplication* %59, [40 x [2 x i32]]* %arraydecay42, [32 x [32 x [2 x i32]]]* %arraydecay47, i32 %65), !dbg !3634
  %66 = load i32, i32* %ch, align 4, !dbg !3649
  %idxprom52 = sext i32 %66 to i64, !dbg !3650
  %67 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3650
  %data53 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %67, i32 0, i32 17, !dbg !3651
  %arrayidx54 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data53, i64 0, i64 %idxprom52, !dbg !3650
  %Ypos55 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx54, i32 0, i32 16, !dbg !3652
  %68 = load i32, i32* %Ypos55, align 32, !dbg !3653
  %xor = xor i32 %68, 1, !dbg !3653
  store i32 %xor, i32* %Ypos55, align 32, !dbg !3653
  %69 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3654
  %start56 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %69, i32 0, i32 1, !dbg !3656
  %70 = load i32, i32* %start56, align 4, !dbg !3656
  %tobool57 = icmp ne i32 %70, 0, !dbg !3654
  br i1 %tobool57, label %if.then58, label %if.end142, !dbg !3657

if.then58:                                        ; preds = %cond.end
  %71 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3658
  %c59 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %71, i32 0, i32 47, !dbg !3660
  %sbr_hf_inverse_filter = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %c59, i32 0, i32 3, !dbg !3661
  %72 = load void (%struct.SBRDSPContext*, [2 x i32]*, [2 x i32]*, [40 x [2 x i32]]*, i32)*, void (%struct.SBRDSPContext*, [2 x i32]*, [2 x i32]*, [40 x [2 x i32]]*, i32)** %sbr_hf_inverse_filter, align 8, !dbg !3661
  %73 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3662
  %dsp60 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %73, i32 0, i32 46, !dbg !3663
  %74 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3664
  %alpha0 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %74, i32 0, i32 33, !dbg !3665
  %arraydecay61 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %alpha0, i32 0, i32 0, !dbg !3664
  %75 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3666
  %alpha1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %75, i32 0, i32 34, !dbg !3667
  %arraydecay62 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %alpha1, i32 0, i32 0, !dbg !3666
  %76 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3668
  %X_low63 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %76, i32 0, i32 30, !dbg !3669
  %arraydecay64 = getelementptr inbounds [32 x [40 x [2 x i32]]], [32 x [40 x [2 x i32]]]* %X_low63, i32 0, i32 0, !dbg !3668
  %77 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3670
  %k = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %77, i32 0, i32 12, !dbg !3671
  %arrayidx65 = getelementptr inbounds [5 x i32], [5 x i32]* %k, i64 0, i64 0, !dbg !3670
  %78 = load i32, i32* %arrayidx65, align 4, !dbg !3670
  call void %72(%struct.SBRDSPContext* %dsp60, [2 x i32]* %arraydecay61, [2 x i32]* %arraydecay62, [40 x [2 x i32]]* %arraydecay64, i32 %78), !dbg !3658
  %79 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3672
  %80 = load i32, i32* %ch, align 4, !dbg !3673
  %idxprom66 = sext i32 %80 to i64, !dbg !3674
  %81 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3674
  %data67 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %81, i32 0, i32 17, !dbg !3675
  %arrayidx68 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data67, i64 0, i64 %idxprom66, !dbg !3674
  call void @sbr_chirp(%struct.SpectralBandReplication* %79, %struct.SBRData* %arrayidx68), !dbg !3676
  br label %do.body, !dbg !3677, !llvm.loop !3678

do.body:                                          ; preds = %if.then58
  %82 = load i32, i32* %ch, align 4, !dbg !3679
  %idxprom69 = sext i32 %82 to i64, !dbg !3683
  %83 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3683
  %data70 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %83, i32 0, i32 17, !dbg !3684
  %arrayidx71 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data70, i64 0, i64 %idxprom69, !dbg !3683
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx71, i32 0, i32 2, !dbg !3685
  %84 = load i32, i32* %bs_num_env, align 8, !dbg !3685
  %cmp72 = icmp sgt i32 %84, 0, !dbg !3686
  br i1 %cmp72, label %if.end75, label %if.then74, !dbg !3687

if.then74:                                        ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i32 1523), !dbg !3688
  call void @abort() #11, !dbg !3691
  unreachable, !dbg !3693

if.end75:                                         ; preds = %do.body
  br label %do.end, !dbg !3694

do.end:                                           ; preds = %if.end75
  %85 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3696
  %86 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3697
  %87 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3698
  %X_high = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %87, i32 0, i32 31, !dbg !3699
  %arraydecay76 = getelementptr inbounds [64 x [40 x [2 x i32]]], [64 x [40 x [2 x i32]]]* %X_high, i32 0, i32 0, !dbg !3698
  %88 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3700
  %X_low77 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %88, i32 0, i32 30, !dbg !3701
  %arraydecay78 = getelementptr inbounds [32 x [40 x [2 x i32]]], [32 x [40 x [2 x i32]]]* %X_low77, i32 0, i32 0, !dbg !3700
  %89 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3702
  %alpha079 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %89, i32 0, i32 33, !dbg !3703
  %arraydecay80 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %alpha079, i32 0, i32 0, !dbg !3702
  %90 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3704
  %alpha181 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %90, i32 0, i32 34, !dbg !3705
  %arraydecay82 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %alpha181, i32 0, i32 0, !dbg !3704
  %91 = load i32, i32* %ch, align 4, !dbg !3706
  %idxprom83 = sext i32 %91 to i64, !dbg !3707
  %92 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3707
  %data84 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %92, i32 0, i32 17, !dbg !3708
  %arrayidx85 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data84, i64 0, i64 %idxprom83, !dbg !3707
  %bw_array = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx85, i32 0, i32 14, !dbg !3709
  %arraydecay86 = getelementptr inbounds [5 x i32], [5 x i32]* %bw_array, i32 0, i32 0, !dbg !3707
  %93 = load i32, i32* %ch, align 4, !dbg !3710
  %idxprom87 = sext i32 %93 to i64, !dbg !3711
  %94 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3711
  %data88 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %94, i32 0, i32 17, !dbg !3712
  %arrayidx89 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data88, i64 0, i64 %idxprom87, !dbg !3711
  %t_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx89, i32 0, i32 26, !dbg !3713
  %arraydecay90 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env, i32 0, i32 0, !dbg !3711
  %95 = load i32, i32* %ch, align 4, !dbg !3714
  %idxprom91 = sext i32 %95 to i64, !dbg !3715
  %96 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3715
  %data92 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %96, i32 0, i32 17, !dbg !3716
  %arrayidx93 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data92, i64 0, i64 %idxprom91, !dbg !3715
  %bs_num_env94 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx93, i32 0, i32 2, !dbg !3717
  %97 = load i32, i32* %bs_num_env94, align 8, !dbg !3717
  %call95 = call i32 @sbr_hf_gen(%struct.AACContext* %85, %struct.SpectralBandReplication* %86, [40 x [2 x i32]]* %arraydecay76, [40 x [2 x i32]]* %arraydecay78, [2 x i32]* %arraydecay80, [2 x i32]* %arraydecay82, i32* %arraydecay86, i8* %arraydecay90, i32 %97), !dbg !3718
  %98 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3719
  %99 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3720
  %100 = load i32, i32* %ch, align 4, !dbg !3721
  %idxprom96 = sext i32 %100 to i64, !dbg !3722
  %101 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3722
  %data97 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %101, i32 0, i32 17, !dbg !3723
  %arrayidx98 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data97, i64 0, i64 %idxprom96, !dbg !3722
  %102 = load i32, i32* %ch, align 4, !dbg !3724
  %idxprom99 = sext i32 %102 to i64, !dbg !3725
  %103 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3725
  %data100 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %103, i32 0, i32 17, !dbg !3726
  %arrayidx101 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data100, i64 0, i64 %idxprom99, !dbg !3725
  %e_a = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx101, i32 0, i32 13, !dbg !3727
  %arraydecay102 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a, i32 0, i32 0, !dbg !3725
  %call103 = call i32 @sbr_mapping(%struct.AACContext* %98, %struct.SpectralBandReplication* %99, %struct.SBRData* %arrayidx98, i32* %arraydecay102), !dbg !3728
  store i32 %call103, i32* %err, align 4, !dbg !3729
  %104 = load i32, i32* %err, align 4, !dbg !3730
  %tobool104 = icmp ne i32 %104, 0, !dbg !3730
  br i1 %tobool104, label %if.end141, label %if.then105, !dbg !3732

if.then105:                                       ; preds = %do.end
  %105 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3733
  %e_curr = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %105, i32 0, i32 38, !dbg !3735
  %arraydecay106 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %e_curr, i32 0, i32 0, !dbg !3733
  %106 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3736
  %X_high107 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %106, i32 0, i32 31, !dbg !3737
  %arraydecay108 = getelementptr inbounds [64 x [40 x [2 x i32]]], [64 x [40 x [2 x i32]]]* %X_high107, i32 0, i32 0, !dbg !3736
  %107 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3738
  %108 = load i32, i32* %ch, align 4, !dbg !3739
  %idxprom109 = sext i32 %108 to i64, !dbg !3740
  %109 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3740
  %data110 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %109, i32 0, i32 17, !dbg !3741
  %arrayidx111 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data110, i64 0, i64 %idxprom109, !dbg !3740
  call void @sbr_env_estimate([48 x %struct.SoftFloat]* %arraydecay106, [40 x [2 x i32]]* %arraydecay108, %struct.SpectralBandReplication* %107, %struct.SBRData* %arrayidx111), !dbg !3742
  %110 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3743
  %111 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3744
  %112 = load i32, i32* %ch, align 4, !dbg !3745
  %idxprom112 = sext i32 %112 to i64, !dbg !3746
  %113 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3746
  %data113 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %113, i32 0, i32 17, !dbg !3747
  %arrayidx114 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data113, i64 0, i64 %idxprom112, !dbg !3746
  %114 = load i32, i32* %ch, align 4, !dbg !3748
  %idxprom115 = sext i32 %114 to i64, !dbg !3749
  %115 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3749
  %data116 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %115, i32 0, i32 17, !dbg !3750
  %arrayidx117 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data116, i64 0, i64 %idxprom115, !dbg !3749
  %e_a118 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx117, i32 0, i32 13, !dbg !3751
  %arraydecay119 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a118, i32 0, i32 0, !dbg !3749
  call void @sbr_gain_calc(%struct.AACContext* %110, %struct.SpectralBandReplication* %111, %struct.SBRData* %arrayidx114, i32* %arraydecay119), !dbg !3752
  %116 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3753
  %c120 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %116, i32 0, i32 47, !dbg !3754
  %sbr_hf_assemble = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %c120, i32 0, i32 1, !dbg !3755
  %117 = load void ([64 x [2 x i32]]*, [40 x [2 x i32]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)*, void ([64 x [2 x i32]]*, [40 x [2 x i32]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)** %sbr_hf_assemble, align 8, !dbg !3755
  %118 = load i32, i32* %ch, align 4, !dbg !3756
  %idxprom121 = sext i32 %118 to i64, !dbg !3757
  %119 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3757
  %data122 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %119, i32 0, i32 17, !dbg !3758
  %arrayidx123 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data122, i64 0, i64 %idxprom121, !dbg !3757
  %Ypos124 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx123, i32 0, i32 16, !dbg !3759
  %120 = load i32, i32* %Ypos124, align 32, !dbg !3759
  %idxprom125 = sext i32 %120 to i64, !dbg !3760
  %121 = load i32, i32* %ch, align 4, !dbg !3761
  %idxprom126 = sext i32 %121 to i64, !dbg !3760
  %122 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3760
  %data127 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %122, i32 0, i32 17, !dbg !3762
  %arrayidx128 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data127, i64 0, i64 %idxprom126, !dbg !3760
  %Y = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx128, i32 0, i32 18, !dbg !3763
  %arrayidx129 = getelementptr inbounds [2 x [38 x [64 x [2 x i32]]]], [2 x [38 x [64 x [2 x i32]]]]* %Y, i64 0, i64 %idxprom125, !dbg !3760
  %arraydecay130 = getelementptr inbounds [38 x [64 x [2 x i32]]], [38 x [64 x [2 x i32]]]* %arrayidx129, i32 0, i32 0, !dbg !3760
  %123 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3764
  %X_high131 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %123, i32 0, i32 31, !dbg !3765
  %arraydecay132 = getelementptr inbounds [64 x [40 x [2 x i32]]], [64 x [40 x [2 x i32]]]* %X_high131, i32 0, i32 0, !dbg !3764
  %124 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3766
  %125 = load i32, i32* %ch, align 4, !dbg !3767
  %idxprom133 = sext i32 %125 to i64, !dbg !3768
  %126 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3768
  %data134 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %126, i32 0, i32 17, !dbg !3769
  %arrayidx135 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data134, i64 0, i64 %idxprom133, !dbg !3768
  %127 = load i32, i32* %ch, align 4, !dbg !3770
  %idxprom136 = sext i32 %127 to i64, !dbg !3771
  %128 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3771
  %data137 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %128, i32 0, i32 17, !dbg !3772
  %arrayidx138 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data137, i64 0, i64 %idxprom136, !dbg !3771
  %e_a139 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx138, i32 0, i32 13, !dbg !3773
  %arraydecay140 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a139, i32 0, i32 0, !dbg !3771
  call void %117([64 x [2 x i32]]* %arraydecay130, [40 x [2 x i32]]* %arraydecay132, %struct.SpectralBandReplication* %124, %struct.SBRData* %arrayidx135, i32* %arraydecay140), !dbg !3753
  br label %if.end141, !dbg !3774

if.end141:                                        ; preds = %if.then105, %do.end
  br label %if.end142, !dbg !3775

if.end142:                                        ; preds = %if.end141, %cond.end
  %129 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3776
  %c143 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %129, i32 0, i32 47, !dbg !3777
  %sbr_x_gen = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %c143, i32 0, i32 2, !dbg !3778
  %130 = load i32 (%struct.SpectralBandReplication*, [38 x [64 x i32]]*, [64 x [2 x i32]]*, [64 x [2 x i32]]*, [40 x [2 x i32]]*, i32)*, i32 (%struct.SpectralBandReplication*, [38 x [64 x i32]]*, [64 x [2 x i32]]*, [64 x [2 x i32]]*, [40 x [2 x i32]]*, i32)** %sbr_x_gen, align 16, !dbg !3778
  %131 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3779
  %132 = load i32, i32* %ch, align 4, !dbg !3780
  %idxprom144 = sext i32 %132 to i64, !dbg !3781
  %133 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3781
  %X = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %133, i32 0, i32 32, !dbg !3782
  %arrayidx145 = getelementptr inbounds [2 x [2 x [38 x [64 x i32]]]], [2 x [2 x [38 x [64 x i32]]]]* %X, i64 0, i64 %idxprom144, !dbg !3781
  %arraydecay146 = getelementptr inbounds [2 x [38 x [64 x i32]]], [2 x [38 x [64 x i32]]]* %arrayidx145, i32 0, i32 0, !dbg !3781
  %134 = load i32, i32* %ch, align 4, !dbg !3783
  %idxprom147 = sext i32 %134 to i64, !dbg !3784
  %135 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3784
  %data148 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %135, i32 0, i32 17, !dbg !3785
  %arrayidx149 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data148, i64 0, i64 %idxprom147, !dbg !3784
  %Ypos150 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx149, i32 0, i32 16, !dbg !3786
  %136 = load i32, i32* %Ypos150, align 32, !dbg !3786
  %sub = sub nsw i32 1, %136, !dbg !3787
  %idxprom151 = sext i32 %sub to i64, !dbg !3788
  %137 = load i32, i32* %ch, align 4, !dbg !3789
  %idxprom152 = sext i32 %137 to i64, !dbg !3788
  %138 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3788
  %data153 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %138, i32 0, i32 17, !dbg !3790
  %arrayidx154 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data153, i64 0, i64 %idxprom152, !dbg !3788
  %Y155 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx154, i32 0, i32 18, !dbg !3791
  %arrayidx156 = getelementptr inbounds [2 x [38 x [64 x [2 x i32]]]], [2 x [38 x [64 x [2 x i32]]]]* %Y155, i64 0, i64 %idxprom151, !dbg !3788
  %arraydecay157 = getelementptr inbounds [38 x [64 x [2 x i32]]], [38 x [64 x [2 x i32]]]* %arrayidx156, i32 0, i32 0, !dbg !3788
  %139 = load i32, i32* %ch, align 4, !dbg !3792
  %idxprom158 = sext i32 %139 to i64, !dbg !3793
  %140 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3793
  %data159 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %140, i32 0, i32 17, !dbg !3794
  %arrayidx160 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data159, i64 0, i64 %idxprom158, !dbg !3793
  %Ypos161 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx160, i32 0, i32 16, !dbg !3795
  %141 = load i32, i32* %Ypos161, align 32, !dbg !3795
  %idxprom162 = sext i32 %141 to i64, !dbg !3796
  %142 = load i32, i32* %ch, align 4, !dbg !3797
  %idxprom163 = sext i32 %142 to i64, !dbg !3796
  %143 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3796
  %data164 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %143, i32 0, i32 17, !dbg !3798
  %arrayidx165 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data164, i64 0, i64 %idxprom163, !dbg !3796
  %Y166 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx165, i32 0, i32 18, !dbg !3799
  %arrayidx167 = getelementptr inbounds [2 x [38 x [64 x [2 x i32]]]], [2 x [38 x [64 x [2 x i32]]]]* %Y166, i64 0, i64 %idxprom162, !dbg !3796
  %arraydecay168 = getelementptr inbounds [38 x [64 x [2 x i32]]], [38 x [64 x [2 x i32]]]* %arrayidx167, i32 0, i32 0, !dbg !3796
  %144 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3800
  %X_low169 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %144, i32 0, i32 30, !dbg !3801
  %arraydecay170 = getelementptr inbounds [32 x [40 x [2 x i32]]], [32 x [40 x [2 x i32]]]* %X_low169, i32 0, i32 0, !dbg !3800
  %145 = load i32, i32* %ch, align 4, !dbg !3802
  %call171 = call i32 %130(%struct.SpectralBandReplication* %131, [38 x [64 x i32]]* %arraydecay146, [64 x [2 x i32]]* %arraydecay157, [64 x [2 x i32]]* %arraydecay168, [40 x [2 x i32]]* %arraydecay170, i32 %145), !dbg !3776
  br label %for.inc, !dbg !3803

for.inc:                                          ; preds = %if.end142
  %146 = load i32, i32* %ch, align 4, !dbg !3804
  %inc = add nsw i32 %146, 1, !dbg !3804
  store i32 %inc, i32* %ch, align 4, !dbg !3804
  br label %for.cond, !dbg !3806, !llvm.loop !3807

for.end:                                          ; preds = %for.cond
  %147 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3809
  %oc172 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %147, i32 0, i32 21, !dbg !3811
  %arrayidx173 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc172, i64 0, i64 1, !dbg !3809
  %m4ac174 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx173, i32 0, i32 0, !dbg !3812
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac174, i32 0, i32 10, !dbg !3813
  %148 = load i32, i32* %ps, align 8, !dbg !3813
  %cmp175 = icmp eq i32 %148, 1, !dbg !3814
  br i1 %cmp175, label %if.then177, label %if.end203, !dbg !3815

if.then177:                                       ; preds = %for.end
  %149 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3816
  %ps178 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %149, i32 0, i32 18, !dbg !3819
  %start179 = getelementptr inbounds %struct.PSContext, %struct.PSContext* %ps178, i32 0, i32 0, !dbg !3820
  %150 = load i32, i32* %start179, align 32, !dbg !3820
  %tobool180 = icmp ne i32 %150, 0, !dbg !3816
  br i1 %tobool180, label %if.then181, label %if.else195, !dbg !3821

if.then181:                                       ; preds = %if.then177
  %151 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3822
  %avctx182 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %151, i32 0, i32 1, !dbg !3824
  %152 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx182, align 8, !dbg !3824
  %153 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3825
  %ps183 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %153, i32 0, i32 18, !dbg !3826
  %154 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3827
  %X184 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %154, i32 0, i32 32, !dbg !3828
  %arrayidx185 = getelementptr inbounds [2 x [2 x [38 x [64 x i32]]]], [2 x [2 x [38 x [64 x i32]]]]* %X184, i64 0, i64 0, !dbg !3827
  %arraydecay186 = getelementptr inbounds [2 x [38 x [64 x i32]]], [2 x [38 x [64 x i32]]]* %arrayidx185, i32 0, i32 0, !dbg !3827
  %155 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3829
  %X187 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %155, i32 0, i32 32, !dbg !3830
  %arrayidx188 = getelementptr inbounds [2 x [2 x [38 x [64 x i32]]]], [2 x [2 x [38 x [64 x i32]]]]* %X187, i64 0, i64 1, !dbg !3829
  %arraydecay189 = getelementptr inbounds [2 x [38 x [64 x i32]]], [2 x [38 x [64 x i32]]]* %arrayidx188, i32 0, i32 0, !dbg !3829
  %156 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3831
  %kx190 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %156, i32 0, i32 13, !dbg !3832
  %arrayidx191 = getelementptr inbounds [2 x i32], [2 x i32]* %kx190, i64 0, i64 1, !dbg !3831
  %157 = load i32, i32* %arrayidx191, align 4, !dbg !3831
  %158 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3833
  %m192 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %158, i32 0, i32 14, !dbg !3834
  %arrayidx193 = getelementptr inbounds [2 x i32], [2 x i32]* %m192, i64 0, i64 1, !dbg !3833
  %159 = load i32, i32* %arrayidx193, align 4, !dbg !3833
  %add = add nsw i32 %157, %159, !dbg !3835
  %call194 = call i32 @ff_ps_apply_fixed(%struct.AVCodecContext* %152, %struct.PSContext* %ps183, [38 x [64 x i32]]* %arraydecay186, [38 x [64 x i32]]* %arraydecay189, i32 %add), !dbg !3836
  br label %if.end202, !dbg !3837

if.else195:                                       ; preds = %if.then177
  %160 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3838
  %X196 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %160, i32 0, i32 32, !dbg !3840
  %arrayidx197 = getelementptr inbounds [2 x [2 x [38 x [64 x i32]]]], [2 x [2 x [38 x [64 x i32]]]]* %X196, i64 0, i64 1, !dbg !3838
  %arraydecay198 = getelementptr inbounds [2 x [38 x [64 x i32]]], [2 x [38 x [64 x i32]]]* %arrayidx197, i32 0, i32 0, !dbg !3841
  %161 = bitcast [38 x [64 x i32]]* %arraydecay198 to i8*, !dbg !3841
  %162 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3842
  %X199 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %162, i32 0, i32 32, !dbg !3843
  %arrayidx200 = getelementptr inbounds [2 x [2 x [38 x [64 x i32]]]], [2 x [2 x [38 x [64 x i32]]]]* %X199, i64 0, i64 0, !dbg !3842
  %arraydecay201 = getelementptr inbounds [2 x [38 x [64 x i32]]], [2 x [38 x [64 x i32]]]* %arrayidx200, i32 0, i32 0, !dbg !3841
  %163 = bitcast [38 x [64 x i32]]* %arraydecay201 to i8*, !dbg !3841
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %161, i8* %163, i64 19456, i32 32, i1 false), !dbg !3841
  br label %if.end202

if.end202:                                        ; preds = %if.else195, %if.then181
  store i32 2, i32* %nch, align 4, !dbg !3844
  br label %if.end203, !dbg !3845

if.end203:                                        ; preds = %if.end202, %for.end
  %164 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3846
  %mdct = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %164, i32 0, i32 45, !dbg !3847
  %165 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3848
  %dsp204 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %165, i32 0, i32 46, !dbg !3849
  %166 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3850
  %fdsp205 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %166, i32 0, i32 14, !dbg !3851
  %167 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp205, align 32, !dbg !3851
  %168 = load i32*, i32** %L.addr, align 8, !dbg !3852
  %169 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3853
  %X206 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %169, i32 0, i32 32, !dbg !3854
  %arrayidx207 = getelementptr inbounds [2 x [2 x [38 x [64 x i32]]]], [2 x [2 x [38 x [64 x i32]]]]* %X206, i64 0, i64 0, !dbg !3853
  %arraydecay208 = getelementptr inbounds [2 x [38 x [64 x i32]]], [2 x [38 x [64 x i32]]]* %arrayidx207, i32 0, i32 0, !dbg !3853
  %170 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3855
  %qmf_filter_scratch209 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %170, i32 0, i32 43, !dbg !3856
  %arraydecay210 = getelementptr inbounds [5 x [64 x i32]], [5 x [64 x i32]]* %qmf_filter_scratch209, i32 0, i32 0, !dbg !3855
  %171 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3857
  %data211 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %171, i32 0, i32 17, !dbg !3858
  %arrayidx212 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data211, i64 0, i64 0, !dbg !3857
  %synthesis_filterbank_samples = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx212, i32 0, i32 10, !dbg !3859
  %arraydecay213 = getelementptr inbounds [2304 x i32], [2304 x i32]* %synthesis_filterbank_samples, i32 0, i32 0, !dbg !3857
  %172 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3860
  %data214 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %172, i32 0, i32 17, !dbg !3861
  %arrayidx215 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data214, i64 0, i64 0, !dbg !3860
  %synthesis_filterbank_samples_offset = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx215, i32 0, i32 12, !dbg !3862
  %173 = load i32, i32* %downsampled, align 4, !dbg !3863
  call void @sbr_qmf_synthesis(%struct.FFTContext* %mdct, %struct.SBRDSPContext* %dsp204, %struct.AVFixedDSPContext* %167, i32* %168, [38 x [64 x i32]]* %arraydecay208, [64 x i32]* %arraydecay210, i32* %arraydecay213, i32* %synthesis_filterbank_samples_offset, i32 %173), !dbg !3864
  %174 = load i32, i32* %nch, align 4, !dbg !3865
  %cmp216 = icmp eq i32 %174, 2, !dbg !3867
  br i1 %cmp216, label %if.then218, label %if.end234, !dbg !3868

if.then218:                                       ; preds = %if.end203
  %175 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3869
  %mdct219 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %175, i32 0, i32 45, !dbg !3870
  %176 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3871
  %dsp220 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %176, i32 0, i32 46, !dbg !3872
  %177 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3873
  %fdsp221 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %177, i32 0, i32 14, !dbg !3874
  %178 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fdsp221, align 32, !dbg !3874
  %179 = load i32*, i32** %R.addr, align 8, !dbg !3875
  %180 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3876
  %X222 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %180, i32 0, i32 32, !dbg !3877
  %arrayidx223 = getelementptr inbounds [2 x [2 x [38 x [64 x i32]]]], [2 x [2 x [38 x [64 x i32]]]]* %X222, i64 0, i64 1, !dbg !3876
  %arraydecay224 = getelementptr inbounds [2 x [38 x [64 x i32]]], [2 x [38 x [64 x i32]]]* %arrayidx223, i32 0, i32 0, !dbg !3876
  %181 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3878
  %qmf_filter_scratch225 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %181, i32 0, i32 43, !dbg !3879
  %arraydecay226 = getelementptr inbounds [5 x [64 x i32]], [5 x [64 x i32]]* %qmf_filter_scratch225, i32 0, i32 0, !dbg !3878
  %182 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3880
  %data227 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %182, i32 0, i32 17, !dbg !3881
  %arrayidx228 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data227, i64 0, i64 1, !dbg !3880
  %synthesis_filterbank_samples229 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx228, i32 0, i32 10, !dbg !3882
  %arraydecay230 = getelementptr inbounds [2304 x i32], [2304 x i32]* %synthesis_filterbank_samples229, i32 0, i32 0, !dbg !3880
  %183 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3883
  %data231 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %183, i32 0, i32 17, !dbg !3884
  %arrayidx232 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data231, i64 0, i64 1, !dbg !3883
  %synthesis_filterbank_samples_offset233 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx232, i32 0, i32 12, !dbg !3885
  %184 = load i32, i32* %downsampled, align 4, !dbg !3886
  call void @sbr_qmf_synthesis(%struct.FFTContext* %mdct219, %struct.SBRDSPContext* %dsp220, %struct.AVFixedDSPContext* %178, i32* %179, [38 x [64 x i32]]* %arraydecay224, [64 x i32]* %arraydecay226, i32* %arraydecay230, i32* %synthesis_filterbank_samples_offset233, i32 %184), !dbg !3887
  br label %if.end234, !dbg !3887

if.end234:                                        ; preds = %if.then218, %if.end203
  ret void, !dbg !3888
}

; Function Attrs: nounwind uwtable
define internal void @sbr_dequant(%struct.SpectralBandReplication* %sbr, i32 %id_aac) #3 !dbg !3889 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %id_aac.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %e = alloca i32, align 4
  %ch = alloca i32, align 4
  %alpha = alloca i32, align 4
  %pan_offset = alloca i32, align 4
  %temp1 = alloca %struct.SoftFloat, align 4
  %temp2 = alloca %struct.SoftFloat, align 4
  %fac = alloca %struct.SoftFloat, align 4
  %agg.tmp = alloca %struct.SoftFloat, align 4
  %coerce = alloca %struct.SoftFloat, align 4
  %coerce73 = alloca %struct.SoftFloat, align 4
  %temp187 = alloca %struct.SoftFloat, align 4
  %temp288 = alloca %struct.SoftFloat, align 4
  %fac89 = alloca %struct.SoftFloat, align 4
  %agg.tmp118 = alloca %struct.SoftFloat, align 4
  %coerce121 = alloca %struct.SoftFloat, align 4
  %coerce136 = alloca %struct.SoftFloat, align 4
  %alpha151 = alloca i32, align 4
  %temp1179 = alloca %struct.SoftFloat, align 4
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !3892, metadata !2734), !dbg !3893
  store i32 %id_aac, i32* %id_aac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id_aac.addr, metadata !3894, metadata !2734), !dbg !3895
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3896, metadata !2734), !dbg !3897
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3898, metadata !2734), !dbg !3899
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3900, metadata !2734), !dbg !3901
  %0 = load i32, i32* %id_aac.addr, align 4, !dbg !3902
  %cmp = icmp eq i32 %0, 1, !dbg !3904
  br i1 %cmp, label %land.lhs.true, label %if.else143, !dbg !3905

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3906
  %bs_coupling = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 11, !dbg !3908
  %2 = load i32, i32* %bs_coupling, align 16, !dbg !3908
  %tobool = icmp ne i32 %2, 0, !dbg !3906
  br i1 %tobool, label %if.then, label %if.else143, !dbg !3909

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %alpha, metadata !3910, metadata !2734), !dbg !3912
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3913
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 17, !dbg !3914
  %arrayidx = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 0, !dbg !3913
  %bs_amp_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx, i32 0, i32 9, !dbg !3915
  %4 = load i32, i32* %bs_amp_res, align 4, !dbg !3915
  %tobool1 = icmp ne i32 %4, 0, !dbg !3913
  %cond = select i1 %tobool1, i32 2, i32 1, !dbg !3913
  store i32 %cond, i32* %alpha, align 4, !dbg !3912
  call void @llvm.dbg.declare(metadata i32* %pan_offset, metadata !3916, metadata !2734), !dbg !3917
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3918
  %data2 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %5, i32 0, i32 17, !dbg !3919
  %arrayidx3 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data2, i64 0, i64 0, !dbg !3918
  %bs_amp_res4 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx3, i32 0, i32 9, !dbg !3920
  %6 = load i32, i32* %bs_amp_res4, align 4, !dbg !3920
  %tobool5 = icmp ne i32 %6, 0, !dbg !3918
  %cond6 = select i1 %tobool5, i32 12, i32 24, !dbg !3918
  store i32 %cond6, i32* %pan_offset, align 4, !dbg !3917
  store i32 1, i32* %e, align 4, !dbg !3921
  br label %for.cond, !dbg !3923

for.cond:                                         ; preds = %for.inc74, %if.then
  %7 = load i32, i32* %e, align 4, !dbg !3924
  %8 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3927
  %data7 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %8, i32 0, i32 17, !dbg !3928
  %arrayidx8 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data7, i64 0, i64 0, !dbg !3927
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx8, i32 0, i32 2, !dbg !3929
  %9 = load i32, i32* %bs_num_env, align 8, !dbg !3929
  %cmp9 = icmp sle i32 %7, %9, !dbg !3930
  br i1 %cmp9, label %for.body, label %for.end76, !dbg !3931

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %k, align 4, !dbg !3932
  br label %for.cond10, !dbg !3935

for.cond10:                                       ; preds = %for.inc, %for.body
  %10 = load i32, i32* %k, align 4, !dbg !3936
  %11 = load i32, i32* %e, align 4, !dbg !3939
  %idxprom = sext i32 %11 to i64, !dbg !3940
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3940
  %data11 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 17, !dbg !3941
  %arrayidx12 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data11, i64 0, i64 0, !dbg !3940
  %bs_freq_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx12, i32 0, i32 3, !dbg !3942
  %arrayidx13 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res, i64 0, i64 %idxprom, !dbg !3940
  %13 = load i8, i8* %arrayidx13, align 1, !dbg !3940
  %idxprom14 = zext i8 %13 to i64, !dbg !3943
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3943
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %14, i32 0, i32 19, !dbg !3944
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 %idxprom14, !dbg !3943
  %15 = load i32, i32* %arrayidx15, align 4, !dbg !3943
  %cmp16 = icmp slt i32 %10, %15, !dbg !3945
  br i1 %cmp16, label %for.body17, label %for.end, !dbg !3946

for.body17:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %temp1, metadata !3947, metadata !2734), !dbg !3949
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %temp2, metadata !3950, metadata !2734), !dbg !3951
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %fac, metadata !3952, metadata !2734), !dbg !3953
  %16 = load i32, i32* %k, align 4, !dbg !3954
  %idxprom18 = sext i32 %16 to i64, !dbg !3955
  %17 = load i32, i32* %e, align 4, !dbg !3956
  %idxprom19 = sext i32 %17 to i64, !dbg !3955
  %18 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3955
  %data20 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %18, i32 0, i32 17, !dbg !3957
  %arrayidx21 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data20, i64 0, i64 0, !dbg !3955
  %env_facs_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx21, i32 0, i32 22, !dbg !3958
  %arrayidx22 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q, i64 0, i64 %idxprom19, !dbg !3955
  %arrayidx23 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx22, i64 0, i64 %idxprom18, !dbg !3955
  %19 = load i8, i8* %arrayidx23, align 1, !dbg !3955
  %conv = zext i8 %19 to i32, !dbg !3955
  %20 = load i32, i32* %alpha, align 4, !dbg !3959
  %mul = mul nsw i32 %conv, %20, !dbg !3960
  %add = add nsw i32 %mul, 14, !dbg !3961
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1, i32 0, i32 1, !dbg !3962
  store i32 %add, i32* %exp, align 4, !dbg !3963
  %exp24 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1, i32 0, i32 1, !dbg !3964
  %21 = load i32, i32* %exp24, align 4, !dbg !3964
  %and = and i32 %21, 1, !dbg !3966
  %tobool25 = icmp ne i32 %and, 0, !dbg !3966
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !3967

if.then26:                                        ; preds = %for.body17
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1, i32 0, i32 0, !dbg !3968
  store i32 759250125, i32* %mant, align 4, !dbg !3969
  br label %if.end, !dbg !3970

if.else:                                          ; preds = %for.body17
  %mant27 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1, i32 0, i32 0, !dbg !3971
  store i32 536870912, i32* %mant27, align 4, !dbg !3972
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then26
  %exp28 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1, i32 0, i32 1, !dbg !3973
  %22 = load i32, i32* %exp28, align 4, !dbg !3973
  %shr = ashr i32 %22, 1, !dbg !3974
  %add29 = add nsw i32 %shr, 1, !dbg !3975
  %exp30 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1, i32 0, i32 1, !dbg !3976
  store i32 %add29, i32* %exp30, align 4, !dbg !3977
  %exp31 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1, i32 0, i32 1, !dbg !3978
  %23 = load i32, i32* %exp31, align 4, !dbg !3978
  %cmp32 = icmp sgt i32 %23, 66, !dbg !3980
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !3981

if.then34:                                        ; preds = %if.end
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41, i32 0, i32 0)), !dbg !3982
  %24 = bitcast %struct.SoftFloat* %temp1 to i8*, !dbg !3984
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* bitcast (%struct.SoftFloat* @FLOAT_1 to i8*), i64 8, i32 4, i1 false), !dbg !3984
  br label %if.end35, !dbg !3985

if.end35:                                         ; preds = %if.then34, %if.end
  %25 = load i32, i32* %pan_offset, align 4, !dbg !3986
  %26 = load i32, i32* %k, align 4, !dbg !3987
  %idxprom36 = sext i32 %26 to i64, !dbg !3988
  %27 = load i32, i32* %e, align 4, !dbg !3989
  %idxprom37 = sext i32 %27 to i64, !dbg !3988
  %28 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3988
  %data38 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %28, i32 0, i32 17, !dbg !3990
  %arrayidx39 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data38, i64 0, i64 1, !dbg !3988
  %env_facs_q40 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx39, i32 0, i32 22, !dbg !3991
  %arrayidx41 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q40, i64 0, i64 %idxprom37, !dbg !3988
  %arrayidx42 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx41, i64 0, i64 %idxprom36, !dbg !3988
  %29 = load i8, i8* %arrayidx42, align 1, !dbg !3988
  %conv43 = zext i8 %29 to i32, !dbg !3988
  %sub = sub nsw i32 %25, %conv43, !dbg !3992
  %30 = load i32, i32* %alpha, align 4, !dbg !3993
  %mul44 = mul nsw i32 %sub, %30, !dbg !3994
  %exp45 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp2, i32 0, i32 1, !dbg !3995
  store i32 %mul44, i32* %exp45, align 4, !dbg !3996
  %exp46 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp2, i32 0, i32 1, !dbg !3997
  %31 = load i32, i32* %exp46, align 4, !dbg !3997
  %and47 = and i32 %31, 1, !dbg !3999
  %tobool48 = icmp ne i32 %and47, 0, !dbg !3999
  br i1 %tobool48, label %if.then49, label %if.else51, !dbg !4000

if.then49:                                        ; preds = %if.end35
  %mant50 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp2, i32 0, i32 0, !dbg !4001
  store i32 759250125, i32* %mant50, align 4, !dbg !4002
  br label %if.end53, !dbg !4003

if.else51:                                        ; preds = %if.end35
  %mant52 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp2, i32 0, i32 0, !dbg !4004
  store i32 536870912, i32* %mant52, align 4, !dbg !4005
  br label %if.end53

if.end53:                                         ; preds = %if.else51, %if.then49
  %exp54 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp2, i32 0, i32 1, !dbg !4006
  %32 = load i32, i32* %exp54, align 4, !dbg !4006
  %shr55 = ashr i32 %32, 1, !dbg !4007
  %add56 = add nsw i32 %shr55, 1, !dbg !4008
  %exp57 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp2, i32 0, i32 1, !dbg !4009
  store i32 %add56, i32* %exp57, align 4, !dbg !4010
  %33 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_1 to i64*), align 4, !dbg !4011
  %34 = bitcast %struct.SoftFloat* %temp2 to i64*, !dbg !4011
  %35 = load i64, i64* %34, align 4, !dbg !4011
  %call = call i64 @av_add_sf(i64 %33, i64 %35) #2, !dbg !4011
  %36 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !4011
  store i64 %call, i64* %36, align 4, !dbg !4011
  %37 = bitcast %struct.SoftFloat* %temp1 to i64*, !dbg !4012
  %38 = load i64, i64* %37, align 4, !dbg !4012
  %39 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !4012
  %40 = load i64, i64* %39, align 4, !dbg !4012
  %call58 = call i64 @av_div_sf(i64 %38, i64 %40) #2, !dbg !4013
  %41 = bitcast %struct.SoftFloat* %coerce to i64*, !dbg !4012
  store i64 %call58, i64* %41, align 4, !dbg !4012
  %42 = bitcast %struct.SoftFloat* %fac to i8*, !dbg !4012
  %43 = bitcast %struct.SoftFloat* %coerce to i8*, !dbg !4012
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 4, i1 false), !dbg !4015
  %44 = load i32, i32* %k, align 4, !dbg !4017
  %idxprom59 = sext i32 %44 to i64, !dbg !4018
  %45 = load i32, i32* %e, align 4, !dbg !4019
  %idxprom60 = sext i32 %45 to i64, !dbg !4018
  %46 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4018
  %data61 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %46, i32 0, i32 17, !dbg !4020
  %arrayidx62 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data61, i64 0, i64 0, !dbg !4018
  %env_facs = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx62, i32 0, i32 23, !dbg !4021
  %arrayidx63 = getelementptr inbounds [6 x [48 x %struct.SoftFloat]], [6 x [48 x %struct.SoftFloat]]* %env_facs, i64 0, i64 %idxprom60, !dbg !4018
  %arrayidx64 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx63, i64 0, i64 %idxprom59, !dbg !4018
  %47 = bitcast %struct.SoftFloat* %arrayidx64 to i8*, !dbg !4022
  %48 = bitcast %struct.SoftFloat* %fac to i8*, !dbg !4022
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 4, i1 false), !dbg !4022
  %49 = load i32, i32* %k, align 4, !dbg !4023
  %idxprom65 = sext i32 %49 to i64, !dbg !4024
  %50 = load i32, i32* %e, align 4, !dbg !4025
  %idxprom66 = sext i32 %50 to i64, !dbg !4024
  %51 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4024
  %data67 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %51, i32 0, i32 17, !dbg !4026
  %arrayidx68 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data67, i64 0, i64 1, !dbg !4024
  %env_facs69 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx68, i32 0, i32 23, !dbg !4027
  %arrayidx70 = getelementptr inbounds [6 x [48 x %struct.SoftFloat]], [6 x [48 x %struct.SoftFloat]]* %env_facs69, i64 0, i64 %idxprom66, !dbg !4024
  %arrayidx71 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx70, i64 0, i64 %idxprom65, !dbg !4024
  %52 = bitcast %struct.SoftFloat* %fac to i64*, !dbg !4028
  %53 = load i64, i64* %52, align 4, !dbg !4028
  %54 = bitcast %struct.SoftFloat* %temp2 to i64*, !dbg !4028
  %55 = load i64, i64* %54, align 4, !dbg !4028
  %call72 = call i64 @av_mul_sf(i64 %53, i64 %55) #2, !dbg !4028
  %56 = bitcast %struct.SoftFloat* %coerce73 to i64*, !dbg !4028
  store i64 %call72, i64* %56, align 4, !dbg !4028
  %57 = bitcast %struct.SoftFloat* %arrayidx71 to i8*, !dbg !4028
  %58 = bitcast %struct.SoftFloat* %coerce73 to i8*, !dbg !4028
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 4, i1 false), !dbg !4029
  br label %for.inc, !dbg !4030

for.inc:                                          ; preds = %if.end53
  %59 = load i32, i32* %k, align 4, !dbg !4031
  %inc = add nsw i32 %59, 1, !dbg !4031
  store i32 %inc, i32* %k, align 4, !dbg !4031
  br label %for.cond10, !dbg !4033, !llvm.loop !4034

for.end:                                          ; preds = %for.cond10
  br label %for.inc74, !dbg !4036

for.inc74:                                        ; preds = %for.end
  %60 = load i32, i32* %e, align 4, !dbg !4037
  %inc75 = add nsw i32 %60, 1, !dbg !4037
  store i32 %inc75, i32* %e, align 4, !dbg !4037
  br label %for.cond, !dbg !4039, !llvm.loop !4040

for.end76:                                        ; preds = %for.cond
  store i32 1, i32* %e, align 4, !dbg !4042
  br label %for.cond77, !dbg !4044

for.cond77:                                       ; preds = %for.inc140, %for.end76
  %61 = load i32, i32* %e, align 4, !dbg !4045
  %62 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4048
  %data78 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %62, i32 0, i32 17, !dbg !4049
  %arrayidx79 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data78, i64 0, i64 0, !dbg !4048
  %bs_num_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx79, i32 0, i32 4, !dbg !4050
  %63 = load i32, i32* %bs_num_noise, align 4, !dbg !4050
  %cmp80 = icmp sle i32 %61, %63, !dbg !4051
  br i1 %cmp80, label %for.body82, label %for.end142, !dbg !4052

for.body82:                                       ; preds = %for.cond77
  store i32 0, i32* %k, align 4, !dbg !4053
  br label %for.cond83, !dbg !4056

for.cond83:                                       ; preds = %for.inc137, %for.body82
  %64 = load i32, i32* %k, align 4, !dbg !4057
  %65 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4060
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %65, i32 0, i32 20, !dbg !4061
  %66 = load i32, i32* %n_q, align 8, !dbg !4061
  %cmp84 = icmp slt i32 %64, %66, !dbg !4062
  br i1 %cmp84, label %for.body86, label %for.end139, !dbg !4063

for.body86:                                       ; preds = %for.cond83
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %temp187, metadata !4064, metadata !2734), !dbg !4066
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %temp288, metadata !4067, metadata !2734), !dbg !4068
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %fac89, metadata !4069, metadata !2734), !dbg !4070
  %67 = load i32, i32* %k, align 4, !dbg !4071
  %idxprom90 = sext i32 %67 to i64, !dbg !4072
  %68 = load i32, i32* %e, align 4, !dbg !4073
  %idxprom91 = sext i32 %68 to i64, !dbg !4072
  %69 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4072
  %data92 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %69, i32 0, i32 17, !dbg !4074
  %arrayidx93 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data92, i64 0, i64 0, !dbg !4072
  %noise_facs_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx93, i32 0, i32 24, !dbg !4075
  %arrayidx94 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q, i64 0, i64 %idxprom91, !dbg !4072
  %arrayidx95 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx94, i64 0, i64 %idxprom90, !dbg !4072
  %70 = load i8, i8* %arrayidx95, align 1, !dbg !4072
  %conv96 = zext i8 %70 to i32, !dbg !4072
  %sub97 = sub nsw i32 6, %conv96, !dbg !4076
  %add98 = add nsw i32 %sub97, 2, !dbg !4077
  %exp99 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp187, i32 0, i32 1, !dbg !4078
  store i32 %add98, i32* %exp99, align 4, !dbg !4079
  %mant100 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp187, i32 0, i32 0, !dbg !4080
  store i32 536870912, i32* %mant100, align 4, !dbg !4081
  br label %do.body, !dbg !4082, !llvm.loop !4083

do.body:                                          ; preds = %for.body86
  %exp101 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp187, i32 0, i32 1, !dbg !4084
  %71 = load i32, i32* %exp101, align 4, !dbg !4084
  %cmp102 = icmp sle i32 %71, 66, !dbg !4088
  br i1 %cmp102, label %if.end105, label %if.then104, !dbg !4089

if.then104:                                       ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.43, i32 0, i32 0), i32 195), !dbg !4090
  call void @abort() #11, !dbg !4093
  unreachable, !dbg !4095

if.end105:                                        ; preds = %do.body
  br label %do.end, !dbg !4096

do.end:                                           ; preds = %if.end105
  %72 = load i32, i32* %k, align 4, !dbg !4098
  %idxprom106 = sext i32 %72 to i64, !dbg !4099
  %73 = load i32, i32* %e, align 4, !dbg !4100
  %idxprom107 = sext i32 %73 to i64, !dbg !4099
  %74 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4099
  %data108 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %74, i32 0, i32 17, !dbg !4101
  %arrayidx109 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data108, i64 0, i64 1, !dbg !4099
  %noise_facs_q110 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx109, i32 0, i32 24, !dbg !4102
  %arrayidx111 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q110, i64 0, i64 %idxprom107, !dbg !4099
  %arrayidx112 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx111, i64 0, i64 %idxprom106, !dbg !4099
  %75 = load i8, i8* %arrayidx112, align 1, !dbg !4099
  %conv113 = zext i8 %75 to i32, !dbg !4099
  %sub114 = sub nsw i32 12, %conv113, !dbg !4103
  %add115 = add nsw i32 %sub114, 1, !dbg !4104
  %exp116 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp288, i32 0, i32 1, !dbg !4105
  store i32 %add115, i32* %exp116, align 4, !dbg !4106
  %mant117 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp288, i32 0, i32 0, !dbg !4107
  store i32 536870912, i32* %mant117, align 4, !dbg !4108
  %76 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_1 to i64*), align 4, !dbg !4109
  %77 = bitcast %struct.SoftFloat* %temp288 to i64*, !dbg !4109
  %78 = load i64, i64* %77, align 4, !dbg !4109
  %call119 = call i64 @av_add_sf(i64 %76, i64 %78) #2, !dbg !4109
  %79 = bitcast %struct.SoftFloat* %agg.tmp118 to i64*, !dbg !4109
  store i64 %call119, i64* %79, align 4, !dbg !4109
  %80 = bitcast %struct.SoftFloat* %temp187 to i64*, !dbg !4110
  %81 = load i64, i64* %80, align 4, !dbg !4110
  %82 = bitcast %struct.SoftFloat* %agg.tmp118 to i64*, !dbg !4110
  %83 = load i64, i64* %82, align 4, !dbg !4110
  %call120 = call i64 @av_div_sf(i64 %81, i64 %83) #2, !dbg !4111
  %84 = bitcast %struct.SoftFloat* %coerce121 to i64*, !dbg !4110
  store i64 %call120, i64* %84, align 4, !dbg !4110
  %85 = bitcast %struct.SoftFloat* %fac89 to i8*, !dbg !4110
  %86 = bitcast %struct.SoftFloat* %coerce121 to i8*, !dbg !4110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 4, i1 false), !dbg !4113
  %87 = load i32, i32* %k, align 4, !dbg !4115
  %idxprom122 = sext i32 %87 to i64, !dbg !4116
  %88 = load i32, i32* %e, align 4, !dbg !4117
  %idxprom123 = sext i32 %88 to i64, !dbg !4116
  %89 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4116
  %data124 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %89, i32 0, i32 17, !dbg !4118
  %arrayidx125 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data124, i64 0, i64 0, !dbg !4116
  %noise_facs = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx125, i32 0, i32 25, !dbg !4119
  %arrayidx126 = getelementptr inbounds [3 x [5 x %struct.SoftFloat]], [3 x [5 x %struct.SoftFloat]]* %noise_facs, i64 0, i64 %idxprom123, !dbg !4116
  %arrayidx127 = getelementptr inbounds [5 x %struct.SoftFloat], [5 x %struct.SoftFloat]* %arrayidx126, i64 0, i64 %idxprom122, !dbg !4116
  %90 = bitcast %struct.SoftFloat* %arrayidx127 to i8*, !dbg !4120
  %91 = bitcast %struct.SoftFloat* %fac89 to i8*, !dbg !4120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 8, i32 4, i1 false), !dbg !4120
  %92 = load i32, i32* %k, align 4, !dbg !4121
  %idxprom128 = sext i32 %92 to i64, !dbg !4122
  %93 = load i32, i32* %e, align 4, !dbg !4123
  %idxprom129 = sext i32 %93 to i64, !dbg !4122
  %94 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4122
  %data130 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %94, i32 0, i32 17, !dbg !4124
  %arrayidx131 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data130, i64 0, i64 1, !dbg !4122
  %noise_facs132 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx131, i32 0, i32 25, !dbg !4125
  %arrayidx133 = getelementptr inbounds [3 x [5 x %struct.SoftFloat]], [3 x [5 x %struct.SoftFloat]]* %noise_facs132, i64 0, i64 %idxprom129, !dbg !4122
  %arrayidx134 = getelementptr inbounds [5 x %struct.SoftFloat], [5 x %struct.SoftFloat]* %arrayidx133, i64 0, i64 %idxprom128, !dbg !4122
  %95 = bitcast %struct.SoftFloat* %fac89 to i64*, !dbg !4126
  %96 = load i64, i64* %95, align 4, !dbg !4126
  %97 = bitcast %struct.SoftFloat* %temp288 to i64*, !dbg !4126
  %98 = load i64, i64* %97, align 4, !dbg !4126
  %call135 = call i64 @av_mul_sf(i64 %96, i64 %98) #2, !dbg !4126
  %99 = bitcast %struct.SoftFloat* %coerce136 to i64*, !dbg !4126
  store i64 %call135, i64* %99, align 4, !dbg !4126
  %100 = bitcast %struct.SoftFloat* %arrayidx134 to i8*, !dbg !4126
  %101 = bitcast %struct.SoftFloat* %coerce136 to i8*, !dbg !4126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 4, i1 false), !dbg !4127
  br label %for.inc137, !dbg !4128

for.inc137:                                       ; preds = %do.end
  %102 = load i32, i32* %k, align 4, !dbg !4129
  %inc138 = add nsw i32 %102, 1, !dbg !4129
  store i32 %inc138, i32* %k, align 4, !dbg !4129
  br label %for.cond83, !dbg !4131, !llvm.loop !4132

for.end139:                                       ; preds = %for.cond83
  br label %for.inc140, !dbg !4134

for.inc140:                                       ; preds = %for.end139
  %103 = load i32, i32* %e, align 4, !dbg !4135
  %inc141 = add nsw i32 %103, 1, !dbg !4135
  store i32 %inc141, i32* %e, align 4, !dbg !4135
  br label %for.cond77, !dbg !4137, !llvm.loop !4138

for.end142:                                       ; preds = %for.cond77
  br label %if.end274, !dbg !4140

if.else143:                                       ; preds = %land.lhs.true, %entry
  store i32 0, i32* %ch, align 4, !dbg !4141
  br label %for.cond144, !dbg !4144

for.cond144:                                      ; preds = %for.inc271, %if.else143
  %104 = load i32, i32* %ch, align 4, !dbg !4145
  %105 = load i32, i32* %id_aac.addr, align 4, !dbg !4148
  %cmp145 = icmp eq i32 %105, 1, !dbg !4149
  %conv146 = zext i1 %cmp145 to i32, !dbg !4149
  %add147 = add nsw i32 %conv146, 1, !dbg !4150
  %cmp148 = icmp slt i32 %104, %add147, !dbg !4151
  br i1 %cmp148, label %for.body150, label %for.end273, !dbg !4152

for.body150:                                      ; preds = %for.cond144
  call void @llvm.dbg.declare(metadata i32* %alpha151, metadata !4153, metadata !2734), !dbg !4155
  %106 = load i32, i32* %ch, align 4, !dbg !4156
  %idxprom152 = sext i32 %106 to i64, !dbg !4157
  %107 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4157
  %data153 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %107, i32 0, i32 17, !dbg !4158
  %arrayidx154 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data153, i64 0, i64 %idxprom152, !dbg !4157
  %bs_amp_res155 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx154, i32 0, i32 9, !dbg !4159
  %108 = load i32, i32* %bs_amp_res155, align 4, !dbg !4159
  %tobool156 = icmp ne i32 %108, 0, !dbg !4157
  %cond157 = select i1 %tobool156, i32 2, i32 1, !dbg !4157
  store i32 %cond157, i32* %alpha151, align 4, !dbg !4155
  store i32 1, i32* %e, align 4, !dbg !4160
  br label %for.cond158, !dbg !4162

for.cond158:                                      ; preds = %for.inc220, %for.body150
  %109 = load i32, i32* %e, align 4, !dbg !4163
  %110 = load i32, i32* %ch, align 4, !dbg !4166
  %idxprom159 = sext i32 %110 to i64, !dbg !4167
  %111 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4167
  %data160 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %111, i32 0, i32 17, !dbg !4168
  %arrayidx161 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data160, i64 0, i64 %idxprom159, !dbg !4167
  %bs_num_env162 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx161, i32 0, i32 2, !dbg !4169
  %112 = load i32, i32* %bs_num_env162, align 8, !dbg !4169
  %cmp163 = icmp sle i32 %109, %112, !dbg !4170
  br i1 %cmp163, label %for.body165, label %for.end222, !dbg !4171

for.body165:                                      ; preds = %for.cond158
  store i32 0, i32* %k, align 4, !dbg !4172
  br label %for.cond166, !dbg !4174

for.cond166:                                      ; preds = %for.inc217, %for.body165
  %113 = load i32, i32* %k, align 4, !dbg !4175
  %114 = load i32, i32* %e, align 4, !dbg !4178
  %idxprom167 = sext i32 %114 to i64, !dbg !4179
  %115 = load i32, i32* %ch, align 4, !dbg !4180
  %idxprom168 = sext i32 %115 to i64, !dbg !4179
  %116 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4179
  %data169 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %116, i32 0, i32 17, !dbg !4181
  %arrayidx170 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data169, i64 0, i64 %idxprom168, !dbg !4179
  %bs_freq_res171 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx170, i32 0, i32 3, !dbg !4182
  %arrayidx172 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res171, i64 0, i64 %idxprom167, !dbg !4179
  %117 = load i8, i8* %arrayidx172, align 1, !dbg !4179
  %idxprom173 = zext i8 %117 to i64, !dbg !4183
  %118 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4183
  %n174 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %118, i32 0, i32 19, !dbg !4184
  %arrayidx175 = getelementptr inbounds [2 x i32], [2 x i32]* %n174, i64 0, i64 %idxprom173, !dbg !4183
  %119 = load i32, i32* %arrayidx175, align 4, !dbg !4183
  %cmp176 = icmp slt i32 %113, %119, !dbg !4185
  br i1 %cmp176, label %for.body178, label %for.end219, !dbg !4186

for.body178:                                      ; preds = %for.cond166
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %temp1179, metadata !4187, metadata !2734), !dbg !4189
  %120 = load i32, i32* %alpha151, align 4, !dbg !4190
  %121 = load i32, i32* %k, align 4, !dbg !4191
  %idxprom180 = sext i32 %121 to i64, !dbg !4192
  %122 = load i32, i32* %e, align 4, !dbg !4193
  %idxprom181 = sext i32 %122 to i64, !dbg !4192
  %123 = load i32, i32* %ch, align 4, !dbg !4194
  %idxprom182 = sext i32 %123 to i64, !dbg !4192
  %124 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4192
  %data183 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %124, i32 0, i32 17, !dbg !4195
  %arrayidx184 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data183, i64 0, i64 %idxprom182, !dbg !4192
  %env_facs_q185 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx184, i32 0, i32 22, !dbg !4196
  %arrayidx186 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q185, i64 0, i64 %idxprom181, !dbg !4192
  %arrayidx187 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx186, i64 0, i64 %idxprom180, !dbg !4192
  %125 = load i8, i8* %arrayidx187, align 1, !dbg !4192
  %conv188 = zext i8 %125 to i32, !dbg !4192
  %mul189 = mul nsw i32 %120, %conv188, !dbg !4197
  %add190 = add nsw i32 %mul189, 12, !dbg !4198
  %exp191 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1179, i32 0, i32 1, !dbg !4199
  store i32 %add190, i32* %exp191, align 4, !dbg !4200
  %exp192 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1179, i32 0, i32 1, !dbg !4201
  %126 = load i32, i32* %exp192, align 4, !dbg !4201
  %and193 = and i32 %126, 1, !dbg !4203
  %tobool194 = icmp ne i32 %and193, 0, !dbg !4203
  br i1 %tobool194, label %if.then195, label %if.else197, !dbg !4204

if.then195:                                       ; preds = %for.body178
  %mant196 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1179, i32 0, i32 0, !dbg !4205
  store i32 759250125, i32* %mant196, align 4, !dbg !4206
  br label %if.end199, !dbg !4207

if.else197:                                       ; preds = %for.body178
  %mant198 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1179, i32 0, i32 0, !dbg !4208
  store i32 536870912, i32* %mant198, align 4, !dbg !4209
  br label %if.end199

if.end199:                                        ; preds = %if.else197, %if.then195
  %exp200 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1179, i32 0, i32 1, !dbg !4210
  %127 = load i32, i32* %exp200, align 4, !dbg !4210
  %shr201 = ashr i32 %127, 1, !dbg !4211
  %add202 = add nsw i32 %shr201, 1, !dbg !4212
  %exp203 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1179, i32 0, i32 1, !dbg !4213
  store i32 %add202, i32* %exp203, align 4, !dbg !4214
  %exp204 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp1179, i32 0, i32 1, !dbg !4215
  %128 = load i32, i32* %exp204, align 4, !dbg !4215
  %cmp205 = icmp sgt i32 %128, 66, !dbg !4217
  br i1 %cmp205, label %if.then207, label %if.end208, !dbg !4218

if.then207:                                       ; preds = %if.end199
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41, i32 0, i32 0)), !dbg !4219
  %129 = bitcast %struct.SoftFloat* %temp1179 to i8*, !dbg !4221
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %129, i8* bitcast (%struct.SoftFloat* @FLOAT_1 to i8*), i64 8, i32 4, i1 false), !dbg !4221
  br label %if.end208, !dbg !4222

if.end208:                                        ; preds = %if.then207, %if.end199
  %130 = load i32, i32* %k, align 4, !dbg !4223
  %idxprom209 = sext i32 %130 to i64, !dbg !4224
  %131 = load i32, i32* %e, align 4, !dbg !4225
  %idxprom210 = sext i32 %131 to i64, !dbg !4224
  %132 = load i32, i32* %ch, align 4, !dbg !4226
  %idxprom211 = sext i32 %132 to i64, !dbg !4224
  %133 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4224
  %data212 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %133, i32 0, i32 17, !dbg !4227
  %arrayidx213 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data212, i64 0, i64 %idxprom211, !dbg !4224
  %env_facs214 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx213, i32 0, i32 23, !dbg !4228
  %arrayidx215 = getelementptr inbounds [6 x [48 x %struct.SoftFloat]], [6 x [48 x %struct.SoftFloat]]* %env_facs214, i64 0, i64 %idxprom210, !dbg !4224
  %arrayidx216 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx215, i64 0, i64 %idxprom209, !dbg !4224
  %134 = bitcast %struct.SoftFloat* %arrayidx216 to i8*, !dbg !4229
  %135 = bitcast %struct.SoftFloat* %temp1179 to i8*, !dbg !4229
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %134, i8* %135, i64 8, i32 4, i1 false), !dbg !4229
  br label %for.inc217, !dbg !4230

for.inc217:                                       ; preds = %if.end208
  %136 = load i32, i32* %k, align 4, !dbg !4231
  %inc218 = add nsw i32 %136, 1, !dbg !4231
  store i32 %inc218, i32* %k, align 4, !dbg !4231
  br label %for.cond166, !dbg !4233, !llvm.loop !4234

for.end219:                                       ; preds = %for.cond166
  br label %for.inc220, !dbg !4236

for.inc220:                                       ; preds = %for.end219
  %137 = load i32, i32* %e, align 4, !dbg !4238
  %inc221 = add nsw i32 %137, 1, !dbg !4238
  store i32 %inc221, i32* %e, align 4, !dbg !4238
  br label %for.cond158, !dbg !4240, !llvm.loop !4241

for.end222:                                       ; preds = %for.cond158
  store i32 1, i32* %e, align 4, !dbg !4243
  br label %for.cond223, !dbg !4245

for.cond223:                                      ; preds = %for.inc268, %for.end222
  %138 = load i32, i32* %e, align 4, !dbg !4246
  %139 = load i32, i32* %ch, align 4, !dbg !4249
  %idxprom224 = sext i32 %139 to i64, !dbg !4250
  %140 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4250
  %data225 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %140, i32 0, i32 17, !dbg !4251
  %arrayidx226 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data225, i64 0, i64 %idxprom224, !dbg !4250
  %bs_num_noise227 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx226, i32 0, i32 4, !dbg !4252
  %141 = load i32, i32* %bs_num_noise227, align 4, !dbg !4252
  %cmp228 = icmp sle i32 %138, %141, !dbg !4253
  br i1 %cmp228, label %for.body230, label %for.end270, !dbg !4254

for.body230:                                      ; preds = %for.cond223
  store i32 0, i32* %k, align 4, !dbg !4255
  br label %for.cond231, !dbg !4257

for.cond231:                                      ; preds = %for.inc265, %for.body230
  %142 = load i32, i32* %k, align 4, !dbg !4258
  %143 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4261
  %n_q232 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %143, i32 0, i32 20, !dbg !4262
  %144 = load i32, i32* %n_q232, align 8, !dbg !4262
  %cmp233 = icmp slt i32 %142, %144, !dbg !4263
  br i1 %cmp233, label %for.body235, label %for.end267, !dbg !4264

for.body235:                                      ; preds = %for.cond231
  %145 = load i32, i32* %k, align 4, !dbg !4265
  %idxprom236 = sext i32 %145 to i64, !dbg !4267
  %146 = load i32, i32* %e, align 4, !dbg !4268
  %idxprom237 = sext i32 %146 to i64, !dbg !4267
  %147 = load i32, i32* %ch, align 4, !dbg !4269
  %idxprom238 = sext i32 %147 to i64, !dbg !4267
  %148 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4267
  %data239 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %148, i32 0, i32 17, !dbg !4270
  %arrayidx240 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data239, i64 0, i64 %idxprom238, !dbg !4267
  %noise_facs_q241 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx240, i32 0, i32 24, !dbg !4271
  %arrayidx242 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q241, i64 0, i64 %idxprom237, !dbg !4267
  %arrayidx243 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx242, i64 0, i64 %idxprom236, !dbg !4267
  %149 = load i8, i8* %arrayidx243, align 1, !dbg !4267
  %conv244 = zext i8 %149 to i32, !dbg !4267
  %sub245 = sub nsw i32 6, %conv244, !dbg !4272
  %add246 = add nsw i32 %sub245, 1, !dbg !4273
  %150 = load i32, i32* %k, align 4, !dbg !4274
  %idxprom247 = sext i32 %150 to i64, !dbg !4275
  %151 = load i32, i32* %e, align 4, !dbg !4276
  %idxprom248 = sext i32 %151 to i64, !dbg !4275
  %152 = load i32, i32* %ch, align 4, !dbg !4277
  %idxprom249 = sext i32 %152 to i64, !dbg !4275
  %153 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4275
  %data250 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %153, i32 0, i32 17, !dbg !4278
  %arrayidx251 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data250, i64 0, i64 %idxprom249, !dbg !4275
  %noise_facs252 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx251, i32 0, i32 25, !dbg !4279
  %arrayidx253 = getelementptr inbounds [3 x [5 x %struct.SoftFloat]], [3 x [5 x %struct.SoftFloat]]* %noise_facs252, i64 0, i64 %idxprom248, !dbg !4275
  %arrayidx254 = getelementptr inbounds [5 x %struct.SoftFloat], [5 x %struct.SoftFloat]* %arrayidx253, i64 0, i64 %idxprom247, !dbg !4275
  %exp255 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx254, i32 0, i32 1, !dbg !4280
  store i32 %add246, i32* %exp255, align 4, !dbg !4281
  %154 = load i32, i32* %k, align 4, !dbg !4282
  %idxprom256 = sext i32 %154 to i64, !dbg !4283
  %155 = load i32, i32* %e, align 4, !dbg !4284
  %idxprom257 = sext i32 %155 to i64, !dbg !4283
  %156 = load i32, i32* %ch, align 4, !dbg !4285
  %idxprom258 = sext i32 %156 to i64, !dbg !4283
  %157 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4283
  %data259 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %157, i32 0, i32 17, !dbg !4286
  %arrayidx260 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data259, i64 0, i64 %idxprom258, !dbg !4283
  %noise_facs261 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx260, i32 0, i32 25, !dbg !4287
  %arrayidx262 = getelementptr inbounds [3 x [5 x %struct.SoftFloat]], [3 x [5 x %struct.SoftFloat]]* %noise_facs261, i64 0, i64 %idxprom257, !dbg !4283
  %arrayidx263 = getelementptr inbounds [5 x %struct.SoftFloat], [5 x %struct.SoftFloat]* %arrayidx262, i64 0, i64 %idxprom256, !dbg !4283
  %mant264 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx263, i32 0, i32 0, !dbg !4288
  store i32 536870912, i32* %mant264, align 8, !dbg !4289
  br label %for.inc265, !dbg !4290

for.inc265:                                       ; preds = %for.body235
  %158 = load i32, i32* %k, align 4, !dbg !4291
  %inc266 = add nsw i32 %158, 1, !dbg !4291
  store i32 %inc266, i32* %k, align 4, !dbg !4291
  br label %for.cond231, !dbg !4293, !llvm.loop !4294

for.end267:                                       ; preds = %for.cond231
  br label %for.inc268, !dbg !4296

for.inc268:                                       ; preds = %for.end267
  %159 = load i32, i32* %e, align 4, !dbg !4298
  %inc269 = add nsw i32 %159, 1, !dbg !4298
  store i32 %inc269, i32* %e, align 4, !dbg !4298
  br label %for.cond223, !dbg !4300, !llvm.loop !4301

for.end270:                                       ; preds = %for.cond223
  br label %for.inc271, !dbg !4303

for.inc271:                                       ; preds = %for.end270
  %160 = load i32, i32* %ch, align 4, !dbg !4304
  %inc272 = add nsw i32 %160, 1, !dbg !4304
  store i32 %inc272, i32* %ch, align 4, !dbg !4304
  br label %for.cond144, !dbg !4306, !llvm.loop !4307

for.end273:                                       ; preds = %for.cond144
  br label %if.end274

if.end274:                                        ; preds = %for.end273, %for.end142
  ret void, !dbg !4309
}

; Function Attrs: nounwind uwtable
define internal void @sbr_qmf_analysis(%struct.AVFixedDSPContext* %dsp, %struct.FFTContext* %mdct, %struct.SBRDSPContext* %sbrdsp, i32* %in, i32* %x, i32* %z, [32 x [32 x [2 x i32]]]* %W, i32 %buf_idx) #3 !dbg !4310 {
entry:
  %dsp.addr = alloca %struct.AVFixedDSPContext*, align 8
  %mdct.addr = alloca %struct.FFTContext*, align 8
  %sbrdsp.addr = alloca %struct.SBRDSPContext*, align 8
  %in.addr = alloca i32*, align 8
  %x.addr = alloca i32*, align 8
  %z.addr = alloca i32*, align 8
  %W.addr = alloca [32 x [32 x [2 x i32]]]*, align 8
  %buf_idx.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.AVFixedDSPContext* %dsp, %struct.AVFixedDSPContext** %dsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFixedDSPContext** %dsp.addr, metadata !4316, metadata !2734), !dbg !4317
  store %struct.FFTContext* %mdct, %struct.FFTContext** %mdct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFTContext** %mdct.addr, metadata !4318, metadata !2734), !dbg !4319
  store %struct.SBRDSPContext* %sbrdsp, %struct.SBRDSPContext** %sbrdsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRDSPContext** %sbrdsp.addr, metadata !4320, metadata !2734), !dbg !4321
  store i32* %in, i32** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %in.addr, metadata !4322, metadata !2734), !dbg !4323
  store i32* %x, i32** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %x.addr, metadata !4324, metadata !2734), !dbg !4325
  store i32* %z, i32** %z.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %z.addr, metadata !4326, metadata !2734), !dbg !4327
  store [32 x [32 x [2 x i32]]]* %W, [32 x [32 x [2 x i32]]]** %W.addr, align 8
  call void @llvm.dbg.declare(metadata [32 x [32 x [2 x i32]]]** %W.addr, metadata !4328, metadata !2734), !dbg !4329
  store i32 %buf_idx, i32* %buf_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_idx.addr, metadata !4330, metadata !2734), !dbg !4331
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4332, metadata !2734), !dbg !4333
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4334, metadata !2734), !dbg !4335
  %0 = load i32*, i32** %x.addr, align 8, !dbg !4336
  %1 = bitcast i32* %0 to i8*, !dbg !4337
  %2 = load i32*, i32** %x.addr, align 8, !dbg !4338
  %add.ptr = getelementptr inbounds i32, i32* %2, i64 1024, !dbg !4339
  %3 = bitcast i32* %add.ptr to i8*, !dbg !4337
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %3, i64 1152, i32 4, i1 false), !dbg !4337
  %4 = load i32*, i32** %x.addr, align 8, !dbg !4340
  %add.ptr1 = getelementptr inbounds i32, i32* %4, i64 288, !dbg !4341
  %5 = bitcast i32* %add.ptr1 to i8*, !dbg !4342
  %6 = load i32*, i32** %in.addr, align 8, !dbg !4343
  %7 = bitcast i32* %6 to i8*, !dbg !4342
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %7, i64 4096, i32 4, i1 false), !dbg !4342
  store i32 0, i32* %i, align 4, !dbg !4344
  br label %for.cond, !dbg !4346

for.cond:                                         ; preds = %for.inc25, %entry
  %8 = load i32, i32* %i, align 4, !dbg !4347
  %cmp = icmp slt i32 %8, 32, !dbg !4350
  br i1 %cmp, label %for.body, label %for.end27, !dbg !4351

for.body:                                         ; preds = %for.cond
  %9 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %dsp.addr, align 8, !dbg !4352
  %vector_fmul_reverse = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %9, i32 0, i32 3, !dbg !4354
  %10 = load void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)** %vector_fmul_reverse, align 8, !dbg !4354
  %11 = load i32*, i32** %z.addr, align 8, !dbg !4355
  %12 = load i32*, i32** %x.addr, align 8, !dbg !4356
  call void %10(i32* %11, i32* getelementptr inbounds ([320 x i32], [320 x i32]* @sbr_qmf_window_ds, i32 0, i32 0), i32* %12, i32 320), !dbg !4352
  %13 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %sbrdsp.addr, align 8, !dbg !4357
  %sum64x5 = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %13, i32 0, i32 0, !dbg !4358
  %14 = load void (i32*)*, void (i32*)** %sum64x5, align 8, !dbg !4358
  %15 = load i32*, i32** %z.addr, align 8, !dbg !4359
  call void %14(i32* %15), !dbg !4357
  %16 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %sbrdsp.addr, align 8, !dbg !4360
  %qmf_pre_shuffle = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %16, i32 0, i32 3, !dbg !4361
  %17 = load void (i32*)*, void (i32*)** %qmf_pre_shuffle, align 8, !dbg !4361
  %18 = load i32*, i32** %z.addr, align 8, !dbg !4362
  call void %17(i32* %18), !dbg !4360
  store i32 64, i32* %j, align 4, !dbg !4363
  br label %for.cond2, !dbg !4365

for.cond2:                                        ; preds = %for.inc, %for.body
  %19 = load i32, i32* %j, align 4, !dbg !4366
  %cmp3 = icmp slt i32 %19, 128, !dbg !4369
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !4370

for.body4:                                        ; preds = %for.cond2
  %20 = load i32, i32* %j, align 4, !dbg !4371
  %idxprom = sext i32 %20 to i64, !dbg !4374
  %21 = load i32*, i32** %z.addr, align 8, !dbg !4374
  %arrayidx = getelementptr inbounds i32, i32* %21, i64 %idxprom, !dbg !4374
  %22 = load i32, i32* %arrayidx, align 4, !dbg !4374
  %cmp5 = icmp sgt i32 %22, 16777216, !dbg !4375
  br i1 %cmp5, label %if.then, label %if.else, !dbg !4376

if.then:                                          ; preds = %for.body4
  %23 = load i32, i32* %j, align 4, !dbg !4377
  %idxprom6 = sext i32 %23 to i64, !dbg !4379
  %24 = load i32*, i32** %z.addr, align 8, !dbg !4379
  %arrayidx7 = getelementptr inbounds i32, i32* %24, i64 %idxprom6, !dbg !4379
  %25 = load i32, i32* %arrayidx7, align 4, !dbg !4379
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.44, i32 0, i32 0), i32 %25, i32 16777216), !dbg !4380
  %26 = load i32, i32* %j, align 4, !dbg !4381
  %idxprom8 = sext i32 %26 to i64, !dbg !4382
  %27 = load i32*, i32** %z.addr, align 8, !dbg !4382
  %arrayidx9 = getelementptr inbounds i32, i32* %27, i64 %idxprom8, !dbg !4382
  store i32 16777216, i32* %arrayidx9, align 4, !dbg !4383
  br label %if.end18, !dbg !4384

if.else:                                          ; preds = %for.body4
  %28 = load i32, i32* %j, align 4, !dbg !4385
  %idxprom10 = sext i32 %28 to i64, !dbg !4388
  %29 = load i32*, i32** %z.addr, align 8, !dbg !4388
  %arrayidx11 = getelementptr inbounds i32, i32* %29, i64 %idxprom10, !dbg !4388
  %30 = load i32, i32* %arrayidx11, align 4, !dbg !4388
  %cmp12 = icmp slt i32 %30, -16777216, !dbg !4389
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !4388

if.then13:                                        ; preds = %if.else
  %31 = load i32, i32* %j, align 4, !dbg !4390
  %idxprom14 = sext i32 %31 to i64, !dbg !4392
  %32 = load i32*, i32** %z.addr, align 8, !dbg !4392
  %arrayidx15 = getelementptr inbounds i32, i32* %32, i64 %idxprom14, !dbg !4392
  %33 = load i32, i32* %arrayidx15, align 4, !dbg !4392
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.45, i32 0, i32 0), i32 %33, i32 -16777216), !dbg !4393
  %34 = load i32, i32* %j, align 4, !dbg !4394
  %idxprom16 = sext i32 %34 to i64, !dbg !4395
  %35 = load i32*, i32** %z.addr, align 8, !dbg !4395
  %arrayidx17 = getelementptr inbounds i32, i32* %35, i64 %idxprom16, !dbg !4395
  store i32 -16777216, i32* %arrayidx17, align 4, !dbg !4396
  br label %if.end, !dbg !4397

if.end:                                           ; preds = %if.then13, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !4398

for.inc:                                          ; preds = %if.end18
  %36 = load i32, i32* %j, align 4, !dbg !4399
  %inc = add nsw i32 %36, 1, !dbg !4399
  store i32 %inc, i32* %j, align 4, !dbg !4399
  br label %for.cond2, !dbg !4401, !llvm.loop !4402

for.end:                                          ; preds = %for.cond2
  %37 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !4404
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %37, i32 0, i32 11, !dbg !4405
  %38 = load void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)** %imdct_half, align 8, !dbg !4405
  %39 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !4406
  %40 = load i32*, i32** %z.addr, align 8, !dbg !4407
  %41 = load i32*, i32** %z.addr, align 8, !dbg !4408
  %add.ptr19 = getelementptr inbounds i32, i32* %41, i64 64, !dbg !4409
  call void %38(%struct.FFTContext* %39, i32* %40, i32* %add.ptr19), !dbg !4404
  %42 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %sbrdsp.addr, align 8, !dbg !4410
  %qmf_post_shuffle = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %42, i32 0, i32 4, !dbg !4411
  %43 = load void ([2 x i32]*, i32*)*, void ([2 x i32]*, i32*)** %qmf_post_shuffle, align 8, !dbg !4411
  %44 = load i32, i32* %i, align 4, !dbg !4412
  %idxprom20 = sext i32 %44 to i64, !dbg !4413
  %45 = load i32, i32* %buf_idx.addr, align 4, !dbg !4414
  %idxprom21 = sext i32 %45 to i64, !dbg !4413
  %46 = load [32 x [32 x [2 x i32]]]*, [32 x [32 x [2 x i32]]]** %W.addr, align 8, !dbg !4413
  %arrayidx22 = getelementptr inbounds [32 x [32 x [2 x i32]]], [32 x [32 x [2 x i32]]]* %46, i64 %idxprom21, !dbg !4413
  %arrayidx23 = getelementptr inbounds [32 x [32 x [2 x i32]]], [32 x [32 x [2 x i32]]]* %arrayidx22, i64 0, i64 %idxprom20, !dbg !4413
  %arraydecay = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx23, i32 0, i32 0, !dbg !4413
  %47 = load i32*, i32** %z.addr, align 8, !dbg !4415
  call void %43([2 x i32]* %arraydecay, i32* %47), !dbg !4410
  %48 = load i32*, i32** %x.addr, align 8, !dbg !4416
  %add.ptr24 = getelementptr inbounds i32, i32* %48, i64 32, !dbg !4416
  store i32* %add.ptr24, i32** %x.addr, align 8, !dbg !4416
  br label %for.inc25, !dbg !4417

for.inc25:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !4418
  %inc26 = add nsw i32 %49, 1, !dbg !4418
  store i32 %inc26, i32* %i, align 4, !dbg !4418
  br label %for.cond, !dbg !4420, !llvm.loop !4421

for.end27:                                        ; preds = %for.cond
  ret void, !dbg !4423
}

; Function Attrs: nounwind uwtable
define internal void @sbr_chirp(%struct.SpectralBandReplication* %sbr, %struct.SBRData* %ch_data) #3 !dbg !2546 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %i = alloca i32, align 4
  %new_bw = alloca i32, align 4
  %accu = alloca i64, align 8
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !4424, metadata !2734), !dbg !4425
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !4426, metadata !2734), !dbg !4427
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4428, metadata !2734), !dbg !4429
  call void @llvm.dbg.declare(metadata i32* %new_bw, metadata !4430, metadata !2734), !dbg !4431
  call void @llvm.dbg.declare(metadata i64* %accu, metadata !4432, metadata !2734), !dbg !4433
  store i32 0, i32* %i, align 4, !dbg !4434
  br label %for.cond, !dbg !4436

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4437
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4440
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 20, !dbg !4441
  %2 = load i32, i32* %n_q, align 8, !dbg !4441
  %cmp = icmp slt i32 %0, %2, !dbg !4442
  br i1 %cmp, label %for.body, label %for.end, !dbg !4443

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !4444
  %idxprom = sext i32 %3 to i64, !dbg !4447
  %4 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4447
  %bs_invf_mode = getelementptr inbounds %struct.SBRData, %struct.SBRData* %4, i32 0, i32 7, !dbg !4448
  %arrayidx = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode, i64 0, i64 0, !dbg !4447
  %arrayidx1 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !4447
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !4447
  %conv = zext i8 %5 to i32, !dbg !4447
  %6 = load i32, i32* %i, align 4, !dbg !4449
  %idxprom2 = sext i32 %6 to i64, !dbg !4450
  %7 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4450
  %bs_invf_mode3 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %7, i32 0, i32 7, !dbg !4451
  %arrayidx4 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode3, i64 0, i64 1, !dbg !4450
  %arrayidx5 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx4, i64 0, i64 %idxprom2, !dbg !4450
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !4450
  %conv6 = zext i8 %8 to i32, !dbg !4450
  %add = add nsw i32 %conv, %conv6, !dbg !4452
  %cmp7 = icmp eq i32 %add, 1, !dbg !4453
  br i1 %cmp7, label %if.then, label %if.else, !dbg !4454

if.then:                                          ; preds = %for.body
  store i32 1288490189, i32* %new_bw, align 4, !dbg !4455
  br label %if.end, !dbg !4456

if.else:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !4457
  %idxprom9 = sext i32 %9 to i64, !dbg !4458
  %10 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4458
  %bs_invf_mode10 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %10, i32 0, i32 7, !dbg !4459
  %arrayidx11 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode10, i64 0, i64 0, !dbg !4458
  %arrayidx12 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx11, i64 0, i64 %idxprom9, !dbg !4458
  %11 = load i8, i8* %arrayidx12, align 1, !dbg !4458
  %idxprom13 = zext i8 %11 to i64, !dbg !4460
  %arrayidx14 = getelementptr inbounds [4 x i32], [4 x i32]* @sbr_chirp.bw_tab, i64 0, i64 %idxprom13, !dbg !4460
  %12 = load i32, i32* %arrayidx14, align 4, !dbg !4460
  store i32 %12, i32* %new_bw, align 4, !dbg !4461
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i32, i32* %new_bw, align 4, !dbg !4462
  %14 = load i32, i32* %i, align 4, !dbg !4464
  %idxprom15 = sext i32 %14 to i64, !dbg !4465
  %15 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4465
  %bw_array = getelementptr inbounds %struct.SBRData, %struct.SBRData* %15, i32 0, i32 14, !dbg !4466
  %arrayidx16 = getelementptr inbounds [5 x i32], [5 x i32]* %bw_array, i64 0, i64 %idxprom15, !dbg !4465
  %16 = load i32, i32* %arrayidx16, align 4, !dbg !4465
  %cmp17 = icmp slt i32 %13, %16, !dbg !4467
  br i1 %cmp17, label %if.then19, label %if.else29, !dbg !4468

if.then19:                                        ; preds = %if.end
  %17 = load i32, i32* %new_bw, align 4, !dbg !4469
  %conv20 = sext i32 %17 to i64, !dbg !4471
  %mul = mul nsw i64 %conv20, 1610612736, !dbg !4472
  store i64 %mul, i64* %accu, align 8, !dbg !4473
  %18 = load i32, i32* %i, align 4, !dbg !4474
  %idxprom21 = sext i32 %18 to i64, !dbg !4475
  %19 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4475
  %bw_array22 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %19, i32 0, i32 14, !dbg !4476
  %arrayidx23 = getelementptr inbounds [5 x i32], [5 x i32]* %bw_array22, i64 0, i64 %idxprom21, !dbg !4475
  %20 = load i32, i32* %arrayidx23, align 4, !dbg !4475
  %conv24 = sext i32 %20 to i64, !dbg !4477
  %mul25 = mul nsw i64 %conv24, 536870912, !dbg !4478
  %21 = load i64, i64* %accu, align 8, !dbg !4479
  %add26 = add nsw i64 %21, %mul25, !dbg !4479
  store i64 %add26, i64* %accu, align 8, !dbg !4479
  %22 = load i64, i64* %accu, align 8, !dbg !4480
  %add27 = add nsw i64 %22, 1073741824, !dbg !4481
  %shr = ashr i64 %add27, 31, !dbg !4482
  %conv28 = trunc i64 %shr to i32, !dbg !4483
  store i32 %conv28, i32* %new_bw, align 4, !dbg !4484
  br label %if.end41, !dbg !4485

if.else29:                                        ; preds = %if.end
  %23 = load i32, i32* %new_bw, align 4, !dbg !4486
  %conv30 = sext i32 %23 to i64, !dbg !4488
  %mul31 = mul nsw i64 %conv30, 1946157056, !dbg !4489
  store i64 %mul31, i64* %accu, align 8, !dbg !4490
  %24 = load i32, i32* %i, align 4, !dbg !4491
  %idxprom32 = sext i32 %24 to i64, !dbg !4492
  %25 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4492
  %bw_array33 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %25, i32 0, i32 14, !dbg !4493
  %arrayidx34 = getelementptr inbounds [5 x i32], [5 x i32]* %bw_array33, i64 0, i64 %idxprom32, !dbg !4492
  %26 = load i32, i32* %arrayidx34, align 4, !dbg !4492
  %conv35 = sext i32 %26 to i64, !dbg !4494
  %mul36 = mul nsw i64 %conv35, 201326592, !dbg !4495
  %27 = load i64, i64* %accu, align 8, !dbg !4496
  %add37 = add nsw i64 %27, %mul36, !dbg !4496
  store i64 %add37, i64* %accu, align 8, !dbg !4496
  %28 = load i64, i64* %accu, align 8, !dbg !4497
  %add38 = add nsw i64 %28, 1073741824, !dbg !4498
  %shr39 = ashr i64 %add38, 31, !dbg !4499
  %conv40 = trunc i64 %shr39 to i32, !dbg !4500
  store i32 %conv40, i32* %new_bw, align 4, !dbg !4501
  br label %if.end41

if.end41:                                         ; preds = %if.else29, %if.then19
  %29 = load i32, i32* %new_bw, align 4, !dbg !4502
  %cmp42 = icmp slt i32 %29, 33554432, !dbg !4503
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !4502

cond.true:                                        ; preds = %if.end41
  br label %cond.end, !dbg !4504

cond.false:                                       ; preds = %if.end41
  %30 = load i32, i32* %new_bw, align 4, !dbg !4506
  br label %cond.end, !dbg !4508

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %30, %cond.false ], !dbg !4509
  %31 = load i32, i32* %i, align 4, !dbg !4511
  %idxprom44 = sext i32 %31 to i64, !dbg !4512
  %32 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4512
  %bw_array45 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %32, i32 0, i32 14, !dbg !4513
  %arrayidx46 = getelementptr inbounds [5 x i32], [5 x i32]* %bw_array45, i64 0, i64 %idxprom44, !dbg !4512
  store i32 %cond, i32* %arrayidx46, align 4, !dbg !4514
  br label %for.inc, !dbg !4515

for.inc:                                          ; preds = %cond.end
  %33 = load i32, i32* %i, align 4, !dbg !4516
  %inc = add nsw i32 %33, 1, !dbg !4516
  store i32 %inc, i32* %i, align 4, !dbg !4516
  br label %for.cond, !dbg !4518, !llvm.loop !4519

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4521
}

; Function Attrs: noreturn nounwind
declare void @abort() #6

; Function Attrs: nounwind uwtable
define internal i32 @sbr_hf_gen(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, [40 x [2 x i32]]* %X_high, [40 x [2 x i32]]* %X_low, [2 x i32]* %alpha0, [2 x i32]* %alpha1, i32* %bw_array, i8* %t_env, i32 %bs_num_env) #3 !dbg !4522 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %X_high.addr = alloca [40 x [2 x i32]]*, align 8
  %X_low.addr = alloca [40 x [2 x i32]]*, align 8
  %alpha0.addr = alloca [2 x i32]*, align 8
  %alpha1.addr = alloca [2 x i32]*, align 8
  %bw_array.addr = alloca i32*, align 8
  %t_env.addr = alloca i8*, align 8
  %bs_num_env.addr = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca i32, align 4
  %g = alloca i32, align 4
  %k = alloca i32, align 4
  %p = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !4525, metadata !2734), !dbg !4526
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !4527, metadata !2734), !dbg !4528
  store [40 x [2 x i32]]* %X_high, [40 x [2 x i32]]** %X_high.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x i32]]** %X_high.addr, metadata !4529, metadata !2734), !dbg !4530
  store [40 x [2 x i32]]* %X_low, [40 x [2 x i32]]** %X_low.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x i32]]** %X_low.addr, metadata !4531, metadata !2734), !dbg !4532
  store [2 x i32]* %alpha0, [2 x i32]** %alpha0.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %alpha0.addr, metadata !4533, metadata !2734), !dbg !4534
  store [2 x i32]* %alpha1, [2 x i32]** %alpha1.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %alpha1.addr, metadata !4535, metadata !2734), !dbg !4536
  store i32* %bw_array, i32** %bw_array.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bw_array.addr, metadata !4537, metadata !2734), !dbg !4538
  store i8* %t_env, i8** %t_env.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %t_env.addr, metadata !4539, metadata !2734), !dbg !4540
  store i32 %bs_num_env, i32* %bs_num_env.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bs_num_env.addr, metadata !4541, metadata !2734), !dbg !4542
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4543, metadata !2734), !dbg !4544
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4545, metadata !2734), !dbg !4546
  call void @llvm.dbg.declare(metadata i32* %g, metadata !4547, metadata !2734), !dbg !4548
  store i32 0, i32* %g, align 4, !dbg !4548
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4549, metadata !2734), !dbg !4550
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4551
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 13, !dbg !4552
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !4551
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4551
  store i32 %1, i32* %k, align 4, !dbg !4550
  store i32 0, i32* %j, align 4, !dbg !4553
  br label %for.cond, !dbg !4555

for.cond:                                         ; preds = %for.inc40, %entry
  %2 = load i32, i32* %j, align 4, !dbg !4556
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4559
  %num_patches = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 27, !dbg !4560
  %4 = load i32, i32* %num_patches, align 16, !dbg !4560
  %cmp = icmp slt i32 %2, %4, !dbg !4561
  br i1 %cmp, label %for.body, label %for.end42, !dbg !4562

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !4563
  br label %for.cond1, !dbg !4566

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %x, align 4, !dbg !4567
  %6 = load i32, i32* %j, align 4, !dbg !4570
  %idxprom = sext i32 %6 to i64, !dbg !4571
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4571
  %patch_num_subbands = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 28, !dbg !4572
  %arrayidx2 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_num_subbands, i64 0, i64 %idxprom, !dbg !4571
  %8 = load i8, i8* %arrayidx2, align 1, !dbg !4571
  %conv = zext i8 %8 to i32, !dbg !4571
  %cmp3 = icmp slt i32 %5, %conv, !dbg !4573
  br i1 %cmp3, label %for.body5, label %for.end, !dbg !4574

for.body5:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %p, metadata !4575, metadata !2734), !dbg !4577
  %9 = load i32, i32* %j, align 4, !dbg !4578
  %idxprom6 = sext i32 %9 to i64, !dbg !4579
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4579
  %patch_start_subband = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %10, i32 0, i32 29, !dbg !4580
  %arrayidx7 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_start_subband, i64 0, i64 %idxprom6, !dbg !4579
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !4579
  %conv8 = zext i8 %11 to i32, !dbg !4579
  %12 = load i32, i32* %x, align 4, !dbg !4581
  %add = add nsw i32 %conv8, %12, !dbg !4582
  store i32 %add, i32* %p, align 4, !dbg !4577
  br label %while.cond, !dbg !4583

while.cond:                                       ; preds = %while.body, %for.body5
  %13 = load i32, i32* %g, align 4, !dbg !4584
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4586
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %14, i32 0, i32 20, !dbg !4587
  %15 = load i32, i32* %n_q, align 8, !dbg !4587
  %cmp9 = icmp sle i32 %13, %15, !dbg !4588
  br i1 %cmp9, label %land.rhs, label %land.end, !dbg !4589

land.rhs:                                         ; preds = %while.cond
  %16 = load i32, i32* %k, align 4, !dbg !4590
  %17 = load i32, i32* %g, align 4, !dbg !4592
  %idxprom11 = sext i32 %17 to i64, !dbg !4593
  %18 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4593
  %f_tablenoise = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %18, i32 0, i32 25, !dbg !4594
  %arrayidx12 = getelementptr inbounds [6 x i16], [6 x i16]* %f_tablenoise, i64 0, i64 %idxprom11, !dbg !4593
  %19 = load i16, i16* %arrayidx12, align 2, !dbg !4593
  %conv13 = zext i16 %19 to i32, !dbg !4593
  %cmp14 = icmp sge i32 %16, %conv13, !dbg !4595
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %20 = phi i1 [ false, %while.cond ], [ %cmp14, %land.rhs ]
  br i1 %20, label %while.body, label %while.end, !dbg !4596

while.body:                                       ; preds = %land.end
  %21 = load i32, i32* %g, align 4, !dbg !4598
  %inc = add nsw i32 %21, 1, !dbg !4598
  store i32 %inc, i32* %g, align 4, !dbg !4598
  br label %while.cond, !dbg !4599, !llvm.loop !4601

while.end:                                        ; preds = %land.end
  %22 = load i32, i32* %g, align 4, !dbg !4602
  %dec = add nsw i32 %22, -1, !dbg !4602
  store i32 %dec, i32* %g, align 4, !dbg !4602
  %23 = load i32, i32* %g, align 4, !dbg !4603
  %cmp16 = icmp slt i32 %23, 0, !dbg !4605
  br i1 %cmp16, label %if.then, label %if.end, !dbg !4606

if.then:                                          ; preds = %while.end
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4607
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 1, !dbg !4609
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4609
  %26 = bitcast %struct.AVCodecContext* %25 to i8*, !dbg !4607
  %27 = load i32, i32* %k, align 4, !dbg !4610
  call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.46, i32 0, i32 0), i32 %27), !dbg !4611
  store i32 -1, i32* %retval, align 4, !dbg !4612
  br label %return, !dbg !4612

if.end:                                           ; preds = %while.end
  %28 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4613
  %dsp = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %28, i32 0, i32 46, !dbg !4614
  %hf_gen = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %dsp, i32 0, i32 8, !dbg !4615
  %29 = load void ([2 x i32]*, [2 x i32]*, i32*, i32*, i32, i32, i32)*, void ([2 x i32]*, [2 x i32]*, i32*, i32*, i32, i32, i32)** %hf_gen, align 32, !dbg !4615
  %30 = load i32, i32* %k, align 4, !dbg !4616
  %idxprom18 = sext i32 %30 to i64, !dbg !4617
  %31 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_high.addr, align 8, !dbg !4617
  %arrayidx19 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %31, i64 %idxprom18, !dbg !4617
  %arraydecay = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %arrayidx19, i32 0, i32 0, !dbg !4617
  %add.ptr = getelementptr inbounds [2 x i32], [2 x i32]* %arraydecay, i64 2, !dbg !4618
  %32 = load i32, i32* %p, align 4, !dbg !4619
  %idxprom20 = sext i32 %32 to i64, !dbg !4620
  %33 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_low.addr, align 8, !dbg !4620
  %arrayidx21 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %33, i64 %idxprom20, !dbg !4620
  %arraydecay22 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %arrayidx21, i32 0, i32 0, !dbg !4620
  %add.ptr23 = getelementptr inbounds [2 x i32], [2 x i32]* %arraydecay22, i64 2, !dbg !4621
  %34 = load i32, i32* %p, align 4, !dbg !4622
  %idxprom24 = sext i32 %34 to i64, !dbg !4623
  %35 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !4623
  %arrayidx25 = getelementptr inbounds [2 x i32], [2 x i32]* %35, i64 %idxprom24, !dbg !4623
  %arraydecay26 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx25, i32 0, i32 0, !dbg !4623
  %36 = load i32, i32* %p, align 4, !dbg !4624
  %idxprom27 = sext i32 %36 to i64, !dbg !4625
  %37 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !4625
  %arrayidx28 = getelementptr inbounds [2 x i32], [2 x i32]* %37, i64 %idxprom27, !dbg !4625
  %arraydecay29 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx28, i32 0, i32 0, !dbg !4625
  %38 = load i32, i32* %g, align 4, !dbg !4626
  %idxprom30 = sext i32 %38 to i64, !dbg !4627
  %39 = load i32*, i32** %bw_array.addr, align 8, !dbg !4627
  %arrayidx31 = getelementptr inbounds i32, i32* %39, i64 %idxprom30, !dbg !4627
  %40 = load i32, i32* %arrayidx31, align 4, !dbg !4627
  %41 = load i8*, i8** %t_env.addr, align 8, !dbg !4628
  %arrayidx32 = getelementptr inbounds i8, i8* %41, i64 0, !dbg !4628
  %42 = load i8, i8* %arrayidx32, align 1, !dbg !4628
  %conv33 = zext i8 %42 to i32, !dbg !4628
  %mul = mul nsw i32 2, %conv33, !dbg !4629
  %43 = load i32, i32* %bs_num_env.addr, align 4, !dbg !4630
  %idxprom34 = sext i32 %43 to i64, !dbg !4631
  %44 = load i8*, i8** %t_env.addr, align 8, !dbg !4631
  %arrayidx35 = getelementptr inbounds i8, i8* %44, i64 %idxprom34, !dbg !4631
  %45 = load i8, i8* %arrayidx35, align 1, !dbg !4631
  %conv36 = zext i8 %45 to i32, !dbg !4631
  %mul37 = mul nsw i32 2, %conv36, !dbg !4632
  call void %29([2 x i32]* %add.ptr, [2 x i32]* %add.ptr23, i32* %arraydecay26, i32* %arraydecay29, i32 %40, i32 %mul, i32 %mul37), !dbg !4613
  br label %for.inc, !dbg !4633

for.inc:                                          ; preds = %if.end
  %46 = load i32, i32* %x, align 4, !dbg !4634
  %inc38 = add nsw i32 %46, 1, !dbg !4634
  store i32 %inc38, i32* %x, align 4, !dbg !4634
  %47 = load i32, i32* %k, align 4, !dbg !4636
  %inc39 = add nsw i32 %47, 1, !dbg !4636
  store i32 %inc39, i32* %k, align 4, !dbg !4636
  br label %for.cond1, !dbg !4637, !llvm.loop !4638

for.end:                                          ; preds = %for.cond1
  br label %for.inc40, !dbg !4640

for.inc40:                                        ; preds = %for.end
  %48 = load i32, i32* %j, align 4, !dbg !4641
  %inc41 = add nsw i32 %48, 1, !dbg !4641
  store i32 %inc41, i32* %j, align 4, !dbg !4641
  br label %for.cond, !dbg !4643, !llvm.loop !4644

for.end42:                                        ; preds = %for.cond
  %49 = load i32, i32* %k, align 4, !dbg !4646
  %50 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4648
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %50, i32 0, i32 14, !dbg !4649
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 1, !dbg !4648
  %51 = load i32, i32* %arrayidx43, align 4, !dbg !4648
  %52 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4650
  %kx44 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %52, i32 0, i32 13, !dbg !4651
  %arrayidx45 = getelementptr inbounds [2 x i32], [2 x i32]* %kx44, i64 0, i64 1, !dbg !4650
  %53 = load i32, i32* %arrayidx45, align 4, !dbg !4650
  %add46 = add nsw i32 %51, %53, !dbg !4652
  %cmp47 = icmp slt i32 %49, %add46, !dbg !4653
  br i1 %cmp47, label %if.then49, label %if.end58, !dbg !4654

if.then49:                                        ; preds = %for.end42
  %54 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_high.addr, align 8, !dbg !4655
  %55 = load i32, i32* %k, align 4, !dbg !4656
  %idx.ext = sext i32 %55 to i64, !dbg !4657
  %add.ptr50 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %54, i64 %idx.ext, !dbg !4657
  %56 = bitcast [40 x [2 x i32]]* %add.ptr50 to i8*, !dbg !4658
  %57 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4659
  %m51 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %57, i32 0, i32 14, !dbg !4660
  %arrayidx52 = getelementptr inbounds [2 x i32], [2 x i32]* %m51, i64 0, i64 1, !dbg !4659
  %58 = load i32, i32* %arrayidx52, align 4, !dbg !4659
  %59 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4661
  %kx53 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %59, i32 0, i32 13, !dbg !4662
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* %kx53, i64 0, i64 1, !dbg !4661
  %60 = load i32, i32* %arrayidx54, align 4, !dbg !4661
  %add55 = add nsw i32 %58, %60, !dbg !4663
  %61 = load i32, i32* %k, align 4, !dbg !4664
  %sub = sub nsw i32 %add55, %61, !dbg !4665
  %conv56 = sext i32 %sub to i64, !dbg !4666
  %mul57 = mul i64 %conv56, 320, !dbg !4667
  call void @llvm.memset.p0i8.i64(i8* %56, i8 0, i64 %mul57, i32 4, i1 false), !dbg !4658
  br label %if.end58, !dbg !4658

if.end58:                                         ; preds = %if.then49, %for.end42
  store i32 0, i32* %retval, align 4, !dbg !4668
  br label %return, !dbg !4668

return:                                           ; preds = %if.end58, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !4669
  ret i32 %62, !dbg !4669
}

; Function Attrs: nounwind uwtable
define internal i32 @sbr_mapping(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.SBRData* %ch_data, i32* %e_a) #3 !dbg !4670 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %e_a.addr = alloca i32*, align 8
  %e = alloca i32, align 4
  %i = alloca i32, align 4
  %m = alloca i32, align 4
  %ilim = alloca i32, align 4
  %table = alloca i16*, align 8
  %k = alloca i32, align 4
  %m_midpoint = alloca i32, align 4
  %additional_sinusoid_present = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !4673, metadata !2734), !dbg !4674
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !4675, metadata !2734), !dbg !4676
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !4677, metadata !2734), !dbg !4678
  store i32* %e_a, i32** %e_a.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %e_a.addr, metadata !4679, metadata !2734), !dbg !4680
  call void @llvm.dbg.declare(metadata i32* %e, metadata !4681, metadata !2734), !dbg !4682
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4683, metadata !2734), !dbg !4684
  call void @llvm.dbg.declare(metadata i32* %m, metadata !4685, metadata !2734), !dbg !4686
  %0 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4687
  %s_indexmapped = getelementptr inbounds %struct.SBRData, %struct.SBRData* %0, i32 0, i32 21, !dbg !4688
  %arrayidx = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped, i64 0, i64 1, !dbg !4687
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx, i32 0, i32 0, !dbg !4689
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 0, i64 336, i32 16, i1 false), !dbg !4689
  store i32 0, i32* %e, align 4, !dbg !4690
  br label %for.cond, !dbg !4692

for.cond:                                         ; preds = %for.inc188, %entry
  %1 = load i32, i32* %e, align 4, !dbg !4693
  %2 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4696
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %2, i32 0, i32 2, !dbg !4697
  %3 = load i32, i32* %bs_num_env, align 8, !dbg !4697
  %cmp = icmp slt i32 %1, %3, !dbg !4698
  br i1 %cmp, label %for.body, label %for.end190, !dbg !4699

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ilim, metadata !4700, metadata !2734), !dbg !4702
  %4 = load i32, i32* %e, align 4, !dbg !4703
  %add = add nsw i32 %4, 1, !dbg !4704
  %idxprom = sext i32 %add to i64, !dbg !4705
  %5 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4705
  %bs_freq_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %5, i32 0, i32 3, !dbg !4706
  %arrayidx1 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res, i64 0, i64 %idxprom, !dbg !4705
  %6 = load i8, i8* %arrayidx1, align 1, !dbg !4705
  %idxprom2 = zext i8 %6 to i64, !dbg !4707
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4707
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 19, !dbg !4708
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 %idxprom2, !dbg !4707
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !4707
  store i32 %8, i32* %ilim, align 4, !dbg !4702
  call void @llvm.dbg.declare(metadata i16** %table, metadata !4709, metadata !2734), !dbg !4710
  %9 = load i32, i32* %e, align 4, !dbg !4711
  %add4 = add nsw i32 %9, 1, !dbg !4712
  %idxprom5 = sext i32 %add4 to i64, !dbg !4713
  %10 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4713
  %bs_freq_res6 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %10, i32 0, i32 3, !dbg !4714
  %arrayidx7 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res6, i64 0, i64 %idxprom5, !dbg !4713
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !4713
  %conv = zext i8 %11 to i32, !dbg !4713
  %tobool = icmp ne i32 %conv, 0, !dbg !4713
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4713

cond.true:                                        ; preds = %for.body
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4715
  %f_tablehigh = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 24, !dbg !4717
  %arraydecay8 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh, i32 0, i32 0, !dbg !4715
  br label %cond.end, !dbg !4718

cond.false:                                       ; preds = %for.body
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4719
  %f_tablelow = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %13, i32 0, i32 23, !dbg !4721
  %arraydecay9 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow, i32 0, i32 0, !dbg !4719
  br label %cond.end, !dbg !4722

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16* [ %arraydecay8, %cond.true ], [ %arraydecay9, %cond.false ], !dbg !4723
  store i16* %cond, i16** %table, align 8, !dbg !4725
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4726, metadata !2734), !dbg !4727
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4728
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %14, i32 0, i32 13, !dbg !4730
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !4728
  %15 = load i32, i32* %arrayidx10, align 4, !dbg !4728
  %16 = load i16*, i16** %table, align 8, !dbg !4731
  %arrayidx11 = getelementptr inbounds i16, i16* %16, i64 0, !dbg !4731
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !4731
  %conv12 = zext i16 %17 to i32, !dbg !4731
  %cmp13 = icmp ne i32 %15, %conv12, !dbg !4732
  br i1 %cmp13, label %if.then, label %if.end, !dbg !4733

if.then:                                          ; preds = %cond.end
  %18 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4734
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %18, i32 0, i32 1, !dbg !4736
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4736
  %20 = bitcast %struct.AVCodecContext* %19 to i8*, !dbg !4734
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 16, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.47, i32 0, i32 0)), !dbg !4737
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4738
  call void @sbr_turnoff(%struct.SpectralBandReplication* %21), !dbg !4739
  store i32 -558323010, i32* %retval, align 4, !dbg !4740
  br label %return, !dbg !4740

if.end:                                           ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !4741
  br label %for.cond15, !dbg !4743

for.cond15:                                       ; preds = %for.inc41, %if.end
  %22 = load i32, i32* %i, align 4, !dbg !4744
  %23 = load i32, i32* %ilim, align 4, !dbg !4747
  %cmp16 = icmp ult i32 %22, %23, !dbg !4748
  br i1 %cmp16, label %for.body18, label %for.end43, !dbg !4749

for.body18:                                       ; preds = %for.cond15
  %24 = load i32, i32* %i, align 4, !dbg !4750
  %idxprom19 = sext i32 %24 to i64, !dbg !4752
  %25 = load i16*, i16** %table, align 8, !dbg !4752
  %arrayidx20 = getelementptr inbounds i16, i16* %25, i64 %idxprom19, !dbg !4752
  %26 = load i16, i16* %arrayidx20, align 2, !dbg !4752
  %conv21 = zext i16 %26 to i32, !dbg !4752
  store i32 %conv21, i32* %m, align 4, !dbg !4753
  br label %for.cond22, !dbg !4754

for.cond22:                                       ; preds = %for.inc, %for.body18
  %27 = load i32, i32* %m, align 4, !dbg !4755
  %28 = load i32, i32* %i, align 4, !dbg !4758
  %add23 = add nsw i32 %28, 1, !dbg !4759
  %idxprom24 = sext i32 %add23 to i64, !dbg !4760
  %29 = load i16*, i16** %table, align 8, !dbg !4760
  %arrayidx25 = getelementptr inbounds i16, i16* %29, i64 %idxprom24, !dbg !4760
  %30 = load i16, i16* %arrayidx25, align 2, !dbg !4760
  %conv26 = zext i16 %30 to i32, !dbg !4760
  %cmp27 = icmp slt i32 %27, %conv26, !dbg !4761
  br i1 %cmp27, label %for.body29, label %for.end, !dbg !4762

for.body29:                                       ; preds = %for.cond22
  %31 = load i32, i32* %m, align 4, !dbg !4763
  %32 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4764
  %kx30 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %32, i32 0, i32 13, !dbg !4765
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %kx30, i64 0, i64 1, !dbg !4764
  %33 = load i32, i32* %arrayidx31, align 4, !dbg !4764
  %sub = sub nsw i32 %31, %33, !dbg !4766
  %idxprom32 = sext i32 %sub to i64, !dbg !4767
  %34 = load i32, i32* %e, align 4, !dbg !4768
  %idxprom33 = sext i32 %34 to i64, !dbg !4767
  %35 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4767
  %e_origmapped = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %35, i32 0, i32 35, !dbg !4769
  %arrayidx34 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %e_origmapped, i64 0, i64 %idxprom33, !dbg !4767
  %arrayidx35 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx34, i64 0, i64 %idxprom32, !dbg !4767
  %36 = load i32, i32* %i, align 4, !dbg !4770
  %idxprom36 = sext i32 %36 to i64, !dbg !4771
  %37 = load i32, i32* %e, align 4, !dbg !4772
  %add37 = add nsw i32 %37, 1, !dbg !4773
  %idxprom38 = sext i32 %add37 to i64, !dbg !4771
  %38 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4771
  %env_facs = getelementptr inbounds %struct.SBRData, %struct.SBRData* %38, i32 0, i32 23, !dbg !4774
  %arrayidx39 = getelementptr inbounds [6 x [48 x %struct.SoftFloat]], [6 x [48 x %struct.SoftFloat]]* %env_facs, i64 0, i64 %idxprom38, !dbg !4771
  %arrayidx40 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx39, i64 0, i64 %idxprom36, !dbg !4771
  %39 = bitcast %struct.SoftFloat* %arrayidx35 to i8*, !dbg !4771
  %40 = bitcast %struct.SoftFloat* %arrayidx40 to i8*, !dbg !4771
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false), !dbg !4771
  br label %for.inc, !dbg !4767

for.inc:                                          ; preds = %for.body29
  %41 = load i32, i32* %m, align 4, !dbg !4775
  %inc = add nsw i32 %41, 1, !dbg !4775
  store i32 %inc, i32* %m, align 4, !dbg !4775
  br label %for.cond22, !dbg !4777, !llvm.loop !4778

for.end:                                          ; preds = %for.cond22
  br label %for.inc41, !dbg !4780

for.inc41:                                        ; preds = %for.end
  %42 = load i32, i32* %i, align 4, !dbg !4782
  %inc42 = add nsw i32 %42, 1, !dbg !4782
  store i32 %inc42, i32* %i, align 4, !dbg !4782
  br label %for.cond15, !dbg !4784, !llvm.loop !4785

for.end43:                                        ; preds = %for.cond15
  %43 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4787
  %bs_num_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %43, i32 0, i32 4, !dbg !4788
  %44 = load i32, i32* %bs_num_noise, align 4, !dbg !4788
  %cmp44 = icmp sgt i32 %44, 1, !dbg !4789
  br i1 %cmp44, label %land.rhs, label %land.end, !dbg !4790

land.rhs:                                         ; preds = %for.end43
  %45 = load i32, i32* %e, align 4, !dbg !4791
  %idxprom46 = sext i32 %45 to i64, !dbg !4792
  %46 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4792
  %t_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %46, i32 0, i32 26, !dbg !4793
  %arrayidx47 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env, i64 0, i64 %idxprom46, !dbg !4792
  %47 = load i8, i8* %arrayidx47, align 1, !dbg !4792
  %conv48 = zext i8 %47 to i32, !dbg !4792
  %48 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4794
  %t_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %48, i32 0, i32 28, !dbg !4795
  %arrayidx49 = getelementptr inbounds [3 x i8], [3 x i8]* %t_q, i64 0, i64 1, !dbg !4794
  %49 = load i8, i8* %arrayidx49, align 1, !dbg !4794
  %conv50 = zext i8 %49 to i32, !dbg !4794
  %cmp51 = icmp sge i32 %conv48, %conv50, !dbg !4796
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end43
  %50 = phi i1 [ false, %for.end43 ], [ %cmp51, %land.rhs ]
  %land.ext = zext i1 %50 to i32, !dbg !4797
  store i32 %land.ext, i32* %k, align 4, !dbg !4798
  store i32 0, i32* %i, align 4, !dbg !4799
  br label %for.cond53, !dbg !4801

for.cond53:                                       ; preds = %for.inc84, %land.end
  %51 = load i32, i32* %i, align 4, !dbg !4802
  %52 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4805
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %52, i32 0, i32 20, !dbg !4806
  %53 = load i32, i32* %n_q, align 8, !dbg !4806
  %cmp54 = icmp slt i32 %51, %53, !dbg !4807
  br i1 %cmp54, label %for.body56, label %for.end86, !dbg !4808

for.body56:                                       ; preds = %for.cond53
  %54 = load i32, i32* %i, align 4, !dbg !4809
  %idxprom57 = sext i32 %54 to i64, !dbg !4811
  %55 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4811
  %f_tablenoise = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %55, i32 0, i32 25, !dbg !4812
  %arrayidx58 = getelementptr inbounds [6 x i16], [6 x i16]* %f_tablenoise, i64 0, i64 %idxprom57, !dbg !4811
  %56 = load i16, i16* %arrayidx58, align 2, !dbg !4811
  %conv59 = zext i16 %56 to i32, !dbg !4811
  store i32 %conv59, i32* %m, align 4, !dbg !4813
  br label %for.cond60, !dbg !4814

for.cond60:                                       ; preds = %for.inc81, %for.body56
  %57 = load i32, i32* %m, align 4, !dbg !4815
  %58 = load i32, i32* %i, align 4, !dbg !4818
  %add61 = add nsw i32 %58, 1, !dbg !4819
  %idxprom62 = sext i32 %add61 to i64, !dbg !4820
  %59 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4820
  %f_tablenoise63 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %59, i32 0, i32 25, !dbg !4821
  %arrayidx64 = getelementptr inbounds [6 x i16], [6 x i16]* %f_tablenoise63, i64 0, i64 %idxprom62, !dbg !4820
  %60 = load i16, i16* %arrayidx64, align 2, !dbg !4820
  %conv65 = zext i16 %60 to i32, !dbg !4820
  %cmp66 = icmp slt i32 %57, %conv65, !dbg !4822
  br i1 %cmp66, label %for.body68, label %for.end83, !dbg !4823

for.body68:                                       ; preds = %for.cond60
  %61 = load i32, i32* %m, align 4, !dbg !4824
  %62 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4825
  %kx69 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %62, i32 0, i32 13, !dbg !4826
  %arrayidx70 = getelementptr inbounds [2 x i32], [2 x i32]* %kx69, i64 0, i64 1, !dbg !4825
  %63 = load i32, i32* %arrayidx70, align 4, !dbg !4825
  %sub71 = sub nsw i32 %61, %63, !dbg !4827
  %idxprom72 = sext i32 %sub71 to i64, !dbg !4828
  %64 = load i32, i32* %e, align 4, !dbg !4829
  %idxprom73 = sext i32 %64 to i64, !dbg !4828
  %65 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4828
  %q_mapped = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %65, i32 0, i32 36, !dbg !4830
  %arrayidx74 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_mapped, i64 0, i64 %idxprom73, !dbg !4828
  %arrayidx75 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx74, i64 0, i64 %idxprom72, !dbg !4828
  %66 = load i32, i32* %i, align 4, !dbg !4831
  %idxprom76 = sext i32 %66 to i64, !dbg !4832
  %67 = load i32, i32* %k, align 4, !dbg !4833
  %add77 = add nsw i32 %67, 1, !dbg !4834
  %idxprom78 = sext i32 %add77 to i64, !dbg !4832
  %68 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4832
  %noise_facs = getelementptr inbounds %struct.SBRData, %struct.SBRData* %68, i32 0, i32 25, !dbg !4835
  %arrayidx79 = getelementptr inbounds [3 x [5 x %struct.SoftFloat]], [3 x [5 x %struct.SoftFloat]]* %noise_facs, i64 0, i64 %idxprom78, !dbg !4832
  %arrayidx80 = getelementptr inbounds [5 x %struct.SoftFloat], [5 x %struct.SoftFloat]* %arrayidx79, i64 0, i64 %idxprom76, !dbg !4832
  %69 = bitcast %struct.SoftFloat* %arrayidx75 to i8*, !dbg !4832
  %70 = bitcast %struct.SoftFloat* %arrayidx80 to i8*, !dbg !4832
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 8, i1 false), !dbg !4832
  br label %for.inc81, !dbg !4828

for.inc81:                                        ; preds = %for.body68
  %71 = load i32, i32* %m, align 4, !dbg !4836
  %inc82 = add nsw i32 %71, 1, !dbg !4836
  store i32 %inc82, i32* %m, align 4, !dbg !4836
  br label %for.cond60, !dbg !4838, !llvm.loop !4839

for.end83:                                        ; preds = %for.cond60
  br label %for.inc84, !dbg !4841

for.inc84:                                        ; preds = %for.end83
  %72 = load i32, i32* %i, align 4, !dbg !4843
  %inc85 = add nsw i32 %72, 1, !dbg !4843
  store i32 %inc85, i32* %i, align 4, !dbg !4843
  br label %for.cond53, !dbg !4845, !llvm.loop !4846

for.end86:                                        ; preds = %for.cond53
  store i32 0, i32* %i, align 4, !dbg !4848
  br label %for.cond87, !dbg !4850

for.cond87:                                       ; preds = %for.inc132, %for.end86
  %73 = load i32, i32* %i, align 4, !dbg !4851
  %74 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4854
  %n88 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %74, i32 0, i32 19, !dbg !4855
  %arrayidx89 = getelementptr inbounds [2 x i32], [2 x i32]* %n88, i64 0, i64 1, !dbg !4854
  %75 = load i32, i32* %arrayidx89, align 4, !dbg !4854
  %cmp90 = icmp slt i32 %73, %75, !dbg !4856
  br i1 %cmp90, label %for.body92, label %for.end134, !dbg !4857

for.body92:                                       ; preds = %for.cond87
  %76 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4858
  %bs_add_harmonic_flag = getelementptr inbounds %struct.SBRData, %struct.SBRData* %76, i32 0, i32 1, !dbg !4861
  %77 = load i32, i32* %bs_add_harmonic_flag, align 4, !dbg !4861
  %tobool93 = icmp ne i32 %77, 0, !dbg !4858
  br i1 %tobool93, label %if.then94, label %if.end131, !dbg !4862

if.then94:                                        ; preds = %for.body92
  call void @llvm.dbg.declare(metadata i32* %m_midpoint, metadata !4863, metadata !2734), !dbg !4865
  %78 = load i32, i32* %i, align 4, !dbg !4866
  %idxprom95 = sext i32 %78 to i64, !dbg !4867
  %79 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4867
  %f_tablehigh96 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %79, i32 0, i32 24, !dbg !4868
  %arrayidx97 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh96, i64 0, i64 %idxprom95, !dbg !4867
  %80 = load i16, i16* %arrayidx97, align 2, !dbg !4867
  %conv98 = zext i16 %80 to i32, !dbg !4867
  %81 = load i32, i32* %i, align 4, !dbg !4869
  %add99 = add nsw i32 %81, 1, !dbg !4870
  %idxprom100 = sext i32 %add99 to i64, !dbg !4871
  %82 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4871
  %f_tablehigh101 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %82, i32 0, i32 24, !dbg !4872
  %arrayidx102 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh101, i64 0, i64 %idxprom100, !dbg !4871
  %83 = load i16, i16* %arrayidx102, align 2, !dbg !4871
  %conv103 = zext i16 %83 to i32, !dbg !4871
  %add104 = add nsw i32 %conv98, %conv103, !dbg !4873
  %shr = ashr i32 %add104, 1, !dbg !4874
  store i32 %shr, i32* %m_midpoint, align 4, !dbg !4865
  %84 = load i32, i32* %i, align 4, !dbg !4875
  %idxprom105 = sext i32 %84 to i64, !dbg !4876
  %85 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4876
  %bs_add_harmonic = getelementptr inbounds %struct.SBRData, %struct.SBRData* %85, i32 0, i32 8, !dbg !4877
  %arrayidx106 = getelementptr inbounds [48 x i8], [48 x i8]* %bs_add_harmonic, i64 0, i64 %idxprom105, !dbg !4876
  %86 = load i8, i8* %arrayidx106, align 1, !dbg !4876
  %conv107 = zext i8 %86 to i32, !dbg !4876
  %87 = load i32, i32* %e, align 4, !dbg !4878
  %88 = load i32*, i32** %e_a.addr, align 8, !dbg !4879
  %arrayidx108 = getelementptr inbounds i32, i32* %88, i64 1, !dbg !4879
  %89 = load i32, i32* %arrayidx108, align 4, !dbg !4879
  %cmp109 = icmp sge i32 %87, %89, !dbg !4880
  br i1 %cmp109, label %lor.end, label %lor.rhs, !dbg !4881

lor.rhs:                                          ; preds = %if.then94
  %90 = load i32, i32* %m_midpoint, align 4, !dbg !4882
  %91 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4884
  %kx111 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %91, i32 0, i32 13, !dbg !4885
  %arrayidx112 = getelementptr inbounds [2 x i32], [2 x i32]* %kx111, i64 0, i64 1, !dbg !4884
  %92 = load i32, i32* %arrayidx112, align 4, !dbg !4884
  %sub113 = sub i32 %90, %92, !dbg !4886
  %idxprom114 = zext i32 %sub113 to i64, !dbg !4887
  %93 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4887
  %s_indexmapped115 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %93, i32 0, i32 21, !dbg !4888
  %arrayidx116 = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped115, i64 0, i64 0, !dbg !4887
  %arrayidx117 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx116, i64 0, i64 %idxprom114, !dbg !4887
  %94 = load i8, i8* %arrayidx117, align 1, !dbg !4887
  %conv118 = zext i8 %94 to i32, !dbg !4887
  %cmp119 = icmp eq i32 %conv118, 1, !dbg !4889
  br label %lor.end, !dbg !4890

lor.end:                                          ; preds = %lor.rhs, %if.then94
  %95 = phi i1 [ true, %if.then94 ], [ %cmp119, %lor.rhs ]
  %lor.ext = zext i1 %95 to i32, !dbg !4891
  %mul = mul nsw i32 %conv107, %lor.ext, !dbg !4893
  %conv121 = trunc i32 %mul to i8, !dbg !4894
  %96 = load i32, i32* %m_midpoint, align 4, !dbg !4895
  %97 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4896
  %kx122 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %97, i32 0, i32 13, !dbg !4897
  %arrayidx123 = getelementptr inbounds [2 x i32], [2 x i32]* %kx122, i64 0, i64 1, !dbg !4896
  %98 = load i32, i32* %arrayidx123, align 4, !dbg !4896
  %sub124 = sub i32 %96, %98, !dbg !4898
  %idxprom125 = zext i32 %sub124 to i64, !dbg !4899
  %99 = load i32, i32* %e, align 4, !dbg !4900
  %add126 = add nsw i32 %99, 1, !dbg !4901
  %idxprom127 = sext i32 %add126 to i64, !dbg !4899
  %100 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4899
  %s_indexmapped128 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %100, i32 0, i32 21, !dbg !4902
  %arrayidx129 = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped128, i64 0, i64 %idxprom127, !dbg !4899
  %arrayidx130 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx129, i64 0, i64 %idxprom125, !dbg !4899
  store i8 %conv121, i8* %arrayidx130, align 1, !dbg !4903
  br label %if.end131, !dbg !4904

if.end131:                                        ; preds = %lor.end, %for.body92
  br label %for.inc132, !dbg !4905

for.inc132:                                       ; preds = %if.end131
  %101 = load i32, i32* %i, align 4, !dbg !4906
  %inc133 = add nsw i32 %101, 1, !dbg !4906
  store i32 %inc133, i32* %i, align 4, !dbg !4906
  br label %for.cond87, !dbg !4908, !llvm.loop !4909

for.end134:                                       ; preds = %for.cond87
  store i32 0, i32* %i, align 4, !dbg !4911
  br label %for.cond135, !dbg !4913

for.cond135:                                      ; preds = %for.inc185, %for.end134
  %102 = load i32, i32* %i, align 4, !dbg !4914
  %103 = load i32, i32* %ilim, align 4, !dbg !4917
  %cmp136 = icmp ult i32 %102, %103, !dbg !4918
  br i1 %cmp136, label %for.body138, label %for.end187, !dbg !4919

for.body138:                                      ; preds = %for.cond135
  call void @llvm.dbg.declare(metadata i32* %additional_sinusoid_present, metadata !4920, metadata !2734), !dbg !4922
  store i32 0, i32* %additional_sinusoid_present, align 4, !dbg !4922
  %104 = load i32, i32* %i, align 4, !dbg !4923
  %idxprom139 = sext i32 %104 to i64, !dbg !4925
  %105 = load i16*, i16** %table, align 8, !dbg !4925
  %arrayidx140 = getelementptr inbounds i16, i16* %105, i64 %idxprom139, !dbg !4925
  %106 = load i16, i16* %arrayidx140, align 2, !dbg !4925
  %conv141 = zext i16 %106 to i32, !dbg !4925
  store i32 %conv141, i32* %m, align 4, !dbg !4926
  br label %for.cond142, !dbg !4927

for.cond142:                                      ; preds = %for.inc162, %for.body138
  %107 = load i32, i32* %m, align 4, !dbg !4928
  %108 = load i32, i32* %i, align 4, !dbg !4931
  %add143 = add nsw i32 %108, 1, !dbg !4932
  %idxprom144 = sext i32 %add143 to i64, !dbg !4933
  %109 = load i16*, i16** %table, align 8, !dbg !4933
  %arrayidx145 = getelementptr inbounds i16, i16* %109, i64 %idxprom144, !dbg !4933
  %110 = load i16, i16* %arrayidx145, align 2, !dbg !4933
  %conv146 = zext i16 %110 to i32, !dbg !4933
  %cmp147 = icmp slt i32 %107, %conv146, !dbg !4934
  br i1 %cmp147, label %for.body149, label %for.end164, !dbg !4935

for.body149:                                      ; preds = %for.cond142
  %111 = load i32, i32* %m, align 4, !dbg !4936
  %112 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4939
  %kx150 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %112, i32 0, i32 13, !dbg !4940
  %arrayidx151 = getelementptr inbounds [2 x i32], [2 x i32]* %kx150, i64 0, i64 1, !dbg !4939
  %113 = load i32, i32* %arrayidx151, align 4, !dbg !4939
  %sub152 = sub nsw i32 %111, %113, !dbg !4941
  %idxprom153 = sext i32 %sub152 to i64, !dbg !4942
  %114 = load i32, i32* %e, align 4, !dbg !4943
  %add154 = add nsw i32 %114, 1, !dbg !4944
  %idxprom155 = sext i32 %add154 to i64, !dbg !4942
  %115 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4942
  %s_indexmapped156 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %115, i32 0, i32 21, !dbg !4945
  %arrayidx157 = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped156, i64 0, i64 %idxprom155, !dbg !4942
  %arrayidx158 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx157, i64 0, i64 %idxprom153, !dbg !4942
  %116 = load i8, i8* %arrayidx158, align 1, !dbg !4942
  %tobool159 = icmp ne i8 %116, 0, !dbg !4942
  br i1 %tobool159, label %if.then160, label %if.end161, !dbg !4946

if.then160:                                       ; preds = %for.body149
  store i32 1, i32* %additional_sinusoid_present, align 4, !dbg !4947
  br label %for.end164, !dbg !4949

if.end161:                                        ; preds = %for.body149
  br label %for.inc162, !dbg !4950

for.inc162:                                       ; preds = %if.end161
  %117 = load i32, i32* %m, align 4, !dbg !4951
  %inc163 = add nsw i32 %117, 1, !dbg !4951
  store i32 %inc163, i32* %m, align 4, !dbg !4951
  br label %for.cond142, !dbg !4953, !llvm.loop !4954

for.end164:                                       ; preds = %if.then160, %for.cond142
  %118 = load i32, i32* %i, align 4, !dbg !4956
  %idxprom165 = sext i32 %118 to i64, !dbg !4957
  %119 = load i16*, i16** %table, align 8, !dbg !4957
  %arrayidx166 = getelementptr inbounds i16, i16* %119, i64 %idxprom165, !dbg !4957
  %120 = load i16, i16* %arrayidx166, align 2, !dbg !4957
  %conv167 = zext i16 %120 to i32, !dbg !4957
  %121 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4958
  %kx168 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %121, i32 0, i32 13, !dbg !4959
  %arrayidx169 = getelementptr inbounds [2 x i32], [2 x i32]* %kx168, i64 0, i64 1, !dbg !4958
  %122 = load i32, i32* %arrayidx169, align 4, !dbg !4958
  %sub170 = sub nsw i32 %conv167, %122, !dbg !4960
  %idxprom171 = sext i32 %sub170 to i64, !dbg !4961
  %123 = load i32, i32* %e, align 4, !dbg !4962
  %idxprom172 = sext i32 %123 to i64, !dbg !4961
  %124 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4961
  %s_mapped = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %124, i32 0, i32 37, !dbg !4963
  %arrayidx173 = getelementptr inbounds [7 x [48 x i8]], [7 x [48 x i8]]* %s_mapped, i64 0, i64 %idxprom172, !dbg !4961
  %arrayidx174 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx173, i64 0, i64 %idxprom171, !dbg !4961
  %125 = load i32, i32* %additional_sinusoid_present, align 4, !dbg !4964
  %126 = trunc i32 %125 to i8, !dbg !4965
  %127 = load i32, i32* %i, align 4, !dbg !4966
  %add175 = add nsw i32 %127, 1, !dbg !4967
  %idxprom176 = sext i32 %add175 to i64, !dbg !4968
  %128 = load i16*, i16** %table, align 8, !dbg !4968
  %arrayidx177 = getelementptr inbounds i16, i16* %128, i64 %idxprom176, !dbg !4968
  %129 = load i16, i16* %arrayidx177, align 2, !dbg !4968
  %conv178 = zext i16 %129 to i32, !dbg !4968
  %130 = load i32, i32* %i, align 4, !dbg !4969
  %idxprom179 = sext i32 %130 to i64, !dbg !4970
  %131 = load i16*, i16** %table, align 8, !dbg !4970
  %arrayidx180 = getelementptr inbounds i16, i16* %131, i64 %idxprom179, !dbg !4970
  %132 = load i16, i16* %arrayidx180, align 2, !dbg !4970
  %conv181 = zext i16 %132 to i32, !dbg !4970
  %sub182 = sub nsw i32 %conv178, %conv181, !dbg !4971
  %conv183 = sext i32 %sub182 to i64, !dbg !4972
  %mul184 = mul i64 %conv183, 1, !dbg !4973
  call void @llvm.memset.p0i8.i64(i8* %arrayidx174, i8 %126, i64 %mul184, i32 1, i1 false), !dbg !4965
  br label %for.inc185, !dbg !4974

for.inc185:                                       ; preds = %for.end164
  %133 = load i32, i32* %i, align 4, !dbg !4975
  %inc186 = add nsw i32 %133, 1, !dbg !4975
  store i32 %inc186, i32* %i, align 4, !dbg !4975
  br label %for.cond135, !dbg !4977, !llvm.loop !4978

for.end187:                                       ; preds = %for.cond135
  br label %for.inc188, !dbg !4980

for.inc188:                                       ; preds = %for.end187
  %134 = load i32, i32* %e, align 4, !dbg !4981
  %inc189 = add nsw i32 %134, 1, !dbg !4981
  store i32 %inc189, i32* %e, align 4, !dbg !4981
  br label %for.cond, !dbg !4983, !llvm.loop !4984

for.end190:                                       ; preds = %for.cond
  %135 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4986
  %s_indexmapped191 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %135, i32 0, i32 21, !dbg !4987
  %arrayidx192 = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped191, i64 0, i64 0, !dbg !4986
  %arraydecay193 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx192, i32 0, i32 0, !dbg !4988
  %136 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4989
  %bs_num_env194 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %136, i32 0, i32 2, !dbg !4990
  %137 = load i32, i32* %bs_num_env194, align 8, !dbg !4990
  %idxprom195 = sext i32 %137 to i64, !dbg !4991
  %138 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4991
  %s_indexmapped196 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %138, i32 0, i32 21, !dbg !4992
  %arrayidx197 = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped196, i64 0, i64 %idxprom195, !dbg !4991
  %arraydecay198 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx197, i32 0, i32 0, !dbg !4988
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay193, i8* %arraydecay198, i64 48, i32 16, i1 false), !dbg !4988
  store i32 0, i32* %retval, align 4, !dbg !4993
  br label %return, !dbg !4993

return:                                           ; preds = %for.end190, %if.then
  %139 = load i32, i32* %retval, align 4, !dbg !4994
  ret i32 %139, !dbg !4994
}

; Function Attrs: nounwind uwtable
define internal void @sbr_env_estimate([48 x %struct.SoftFloat]* %e_curr, [40 x [2 x i32]]* %X_high, %struct.SpectralBandReplication* %sbr, %struct.SBRData* %ch_data) #3 !dbg !4995 {
entry:
  %e_curr.addr = alloca [48 x %struct.SoftFloat]*, align 8
  %X_high.addr = alloca [40 x [2 x i32]]*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %e = alloca i32, align 4
  %m = alloca i32, align 4
  %kx1 = alloca i32, align 4
  %recip_env_size = alloca %struct.SoftFloat, align 4
  %ilb = alloca i32, align 4
  %iub = alloca i32, align 4
  %sum = alloca %struct.SoftFloat, align 4
  %coerce = alloca %struct.SoftFloat, align 4
  %k = alloca i32, align 4
  %p = alloca i32, align 4
  %env_size = alloca i32, align 4
  %ilb53 = alloca i32, align 4
  %iub60 = alloca i32, align 4
  %table = alloca i16*, align 8
  %sum85 = alloca %struct.SoftFloat, align 4
  %den = alloca %struct.SoftFloat, align 4
  %agg.tmp = alloca %struct.SoftFloat, align 4
  %coerce118 = alloca %struct.SoftFloat, align 4
  %coerce123 = alloca %struct.SoftFloat, align 4
  store [48 x %struct.SoftFloat]* %e_curr, [48 x %struct.SoftFloat]** %e_curr.addr, align 8
  call void @llvm.dbg.declare(metadata [48 x %struct.SoftFloat]** %e_curr.addr, metadata !5000, metadata !2734), !dbg !5001
  store [40 x [2 x i32]]* %X_high, [40 x [2 x i32]]** %X_high.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x i32]]** %X_high.addr, metadata !5002, metadata !2734), !dbg !5003
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !5004, metadata !2734), !dbg !5005
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !5006, metadata !2734), !dbg !5007
  call void @llvm.dbg.declare(metadata i32* %e, metadata !5008, metadata !2734), !dbg !5009
  call void @llvm.dbg.declare(metadata i32* %m, metadata !5010, metadata !2734), !dbg !5011
  call void @llvm.dbg.declare(metadata i32* %kx1, metadata !5012, metadata !2734), !dbg !5013
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5014
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 13, !dbg !5015
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !5014
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5014
  store i32 %1, i32* %kx1, align 4, !dbg !5013
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5016
  %bs_interpol_freq = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 9, !dbg !5018
  %3 = load i32, i32* %bs_interpol_freq, align 8, !dbg !5018
  %tobool = icmp ne i32 %3, 0, !dbg !5016
  br i1 %tobool, label %if.then, label %if.else, !dbg !5019

if.then:                                          ; preds = %entry
  store i32 0, i32* %e, align 4, !dbg !5020
  br label %for.cond, !dbg !5023

for.cond:                                         ; preds = %for.inc34, %if.then
  %4 = load i32, i32* %e, align 4, !dbg !5024
  %5 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5027
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %5, i32 0, i32 2, !dbg !5028
  %6 = load i32, i32* %bs_num_env, align 8, !dbg !5028
  %cmp = icmp slt i32 %4, %6, !dbg !5029
  br i1 %cmp, label %for.body, label %for.end36, !dbg !5030

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %recip_env_size, metadata !5031, metadata !2734), !dbg !5033
  %7 = load i32, i32* %e, align 4, !dbg !5034
  %add = add nsw i32 %7, 1, !dbg !5035
  %idxprom = sext i32 %add to i64, !dbg !5036
  %8 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5036
  %t_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %8, i32 0, i32 26, !dbg !5037
  %arrayidx1 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env, i64 0, i64 %idxprom, !dbg !5036
  %9 = load i8, i8* %arrayidx1, align 1, !dbg !5036
  %conv = zext i8 %9 to i32, !dbg !5036
  %10 = load i32, i32* %e, align 4, !dbg !5038
  %idxprom2 = sext i32 %10 to i64, !dbg !5039
  %11 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5039
  %t_env3 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %11, i32 0, i32 26, !dbg !5040
  %arrayidx4 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env3, i64 0, i64 %idxprom2, !dbg !5039
  %12 = load i8, i8* %arrayidx4, align 1, !dbg !5039
  %conv5 = zext i8 %12 to i32, !dbg !5039
  %sub = sub nsw i32 %conv, %conv5, !dbg !5041
  %div = sdiv i32 536870912, %sub, !dbg !5042
  %call = call i64 @av_int2sf(i32 %div, i32 30) #2, !dbg !5043
  %13 = bitcast %struct.SoftFloat* %recip_env_size to i64*, !dbg !5043
  store i64 %call, i64* %13, align 4, !dbg !5043
  call void @llvm.dbg.declare(metadata i32* %ilb, metadata !5044, metadata !2734), !dbg !5045
  %14 = load i32, i32* %e, align 4, !dbg !5046
  %idxprom6 = sext i32 %14 to i64, !dbg !5047
  %15 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5047
  %t_env7 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %15, i32 0, i32 26, !dbg !5048
  %arrayidx8 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env7, i64 0, i64 %idxprom6, !dbg !5047
  %16 = load i8, i8* %arrayidx8, align 1, !dbg !5047
  %conv9 = zext i8 %16 to i32, !dbg !5047
  %mul = mul nsw i32 %conv9, 2, !dbg !5049
  %add10 = add nsw i32 %mul, 2, !dbg !5050
  store i32 %add10, i32* %ilb, align 4, !dbg !5045
  call void @llvm.dbg.declare(metadata i32* %iub, metadata !5051, metadata !2734), !dbg !5052
  %17 = load i32, i32* %e, align 4, !dbg !5053
  %add11 = add nsw i32 %17, 1, !dbg !5054
  %idxprom12 = sext i32 %add11 to i64, !dbg !5055
  %18 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5055
  %t_env13 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %18, i32 0, i32 26, !dbg !5056
  %arrayidx14 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env13, i64 0, i64 %idxprom12, !dbg !5055
  %19 = load i8, i8* %arrayidx14, align 1, !dbg !5055
  %conv15 = zext i8 %19 to i32, !dbg !5055
  %mul16 = mul nsw i32 %conv15, 2, !dbg !5057
  %add17 = add nsw i32 %mul16, 2, !dbg !5058
  store i32 %add17, i32* %iub, align 4, !dbg !5052
  store i32 0, i32* %m, align 4, !dbg !5059
  br label %for.cond18, !dbg !5061

for.cond18:                                       ; preds = %for.inc, %for.body
  %20 = load i32, i32* %m, align 4, !dbg !5062
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5065
  %m19 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %21, i32 0, i32 14, !dbg !5066
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %m19, i64 0, i64 1, !dbg !5065
  %22 = load i32, i32* %arrayidx20, align 4, !dbg !5065
  %cmp21 = icmp slt i32 %20, %22, !dbg !5067
  br i1 %cmp21, label %for.body23, label %for.end, !dbg !5068

for.body23:                                       ; preds = %for.cond18
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %sum, metadata !5069, metadata !2734), !dbg !5071
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5072
  %dsp = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %23, i32 0, i32 46, !dbg !5073
  %sum_square = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %dsp, i32 0, i32 1, !dbg !5074
  %24 = load i64 ([2 x i32]*, i32)*, i64 ([2 x i32]*, i32)** %sum_square, align 8, !dbg !5074
  %25 = load i32, i32* %m, align 4, !dbg !5075
  %26 = load i32, i32* %kx1, align 4, !dbg !5076
  %add24 = add nsw i32 %25, %26, !dbg !5077
  %idxprom25 = sext i32 %add24 to i64, !dbg !5078
  %27 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_high.addr, align 8, !dbg !5078
  %arrayidx26 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %27, i64 %idxprom25, !dbg !5078
  %arraydecay = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %arrayidx26, i32 0, i32 0, !dbg !5078
  %28 = load i32, i32* %ilb, align 4, !dbg !5079
  %idx.ext = sext i32 %28 to i64, !dbg !5080
  %add.ptr = getelementptr inbounds [2 x i32], [2 x i32]* %arraydecay, i64 %idx.ext, !dbg !5080
  %29 = load i32, i32* %iub, align 4, !dbg !5081
  %30 = load i32, i32* %ilb, align 4, !dbg !5082
  %sub27 = sub nsw i32 %29, %30, !dbg !5083
  %call28 = call i64 %24([2 x i32]* %add.ptr, i32 %sub27), !dbg !5072
  %31 = bitcast %struct.SoftFloat* %sum to i64*, !dbg !5072
  store i64 %call28, i64* %31, align 4, !dbg !5072
  %32 = load i32, i32* %m, align 4, !dbg !5084
  %idxprom29 = sext i32 %32 to i64, !dbg !5085
  %33 = load i32, i32* %e, align 4, !dbg !5086
  %idxprom30 = sext i32 %33 to i64, !dbg !5085
  %34 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %e_curr.addr, align 8, !dbg !5085
  %arrayidx31 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %34, i64 %idxprom30, !dbg !5085
  %arrayidx32 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx31, i64 0, i64 %idxprom29, !dbg !5085
  %35 = bitcast %struct.SoftFloat* %sum to i64*, !dbg !5087
  %36 = load i64, i64* %35, align 4, !dbg !5087
  %37 = bitcast %struct.SoftFloat* %recip_env_size to i64*, !dbg !5087
  %38 = load i64, i64* %37, align 4, !dbg !5087
  %call33 = call i64 @av_mul_sf(i64 %36, i64 %38) #2, !dbg !5087
  %39 = bitcast %struct.SoftFloat* %coerce to i64*, !dbg !5087
  store i64 %call33, i64* %39, align 4, !dbg !5087
  %40 = bitcast %struct.SoftFloat* %arrayidx32 to i8*, !dbg !5087
  %41 = bitcast %struct.SoftFloat* %coerce to i8*, !dbg !5087
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 4, i1 false), !dbg !5088
  br label %for.inc, !dbg !5090

for.inc:                                          ; preds = %for.body23
  %42 = load i32, i32* %m, align 4, !dbg !5091
  %inc = add nsw i32 %42, 1, !dbg !5091
  store i32 %inc, i32* %m, align 4, !dbg !5091
  br label %for.cond18, !dbg !5093, !llvm.loop !5094

for.end:                                          ; preds = %for.cond18
  br label %for.inc34, !dbg !5096

for.inc34:                                        ; preds = %for.end
  %43 = load i32, i32* %e, align 4, !dbg !5097
  %inc35 = add nsw i32 %43, 1, !dbg !5097
  store i32 %inc35, i32* %e, align 4, !dbg !5097
  br label %for.cond, !dbg !5099, !llvm.loop !5100

for.end36:                                        ; preds = %for.cond
  br label %if.end, !dbg !5102

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5103, metadata !2734), !dbg !5105
  call void @llvm.dbg.declare(metadata i32* %p, metadata !5106, metadata !2734), !dbg !5107
  store i32 0, i32* %e, align 4, !dbg !5108
  br label %for.cond37, !dbg !5110

for.cond37:                                       ; preds = %for.inc146, %if.else
  %44 = load i32, i32* %e, align 4, !dbg !5111
  %45 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5114
  %bs_num_env38 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %45, i32 0, i32 2, !dbg !5115
  %46 = load i32, i32* %bs_num_env38, align 8, !dbg !5115
  %cmp39 = icmp slt i32 %44, %46, !dbg !5116
  br i1 %cmp39, label %for.body41, label %for.end148, !dbg !5117

for.body41:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata i32* %env_size, metadata !5118, metadata !2734), !dbg !5120
  %47 = load i32, i32* %e, align 4, !dbg !5121
  %add42 = add nsw i32 %47, 1, !dbg !5122
  %idxprom43 = sext i32 %add42 to i64, !dbg !5123
  %48 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5123
  %t_env44 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %48, i32 0, i32 26, !dbg !5124
  %arrayidx45 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env44, i64 0, i64 %idxprom43, !dbg !5123
  %49 = load i8, i8* %arrayidx45, align 1, !dbg !5123
  %conv46 = zext i8 %49 to i32, !dbg !5123
  %50 = load i32, i32* %e, align 4, !dbg !5125
  %idxprom47 = sext i32 %50 to i64, !dbg !5126
  %51 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5126
  %t_env48 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %51, i32 0, i32 26, !dbg !5127
  %arrayidx49 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env48, i64 0, i64 %idxprom47, !dbg !5126
  %52 = load i8, i8* %arrayidx49, align 1, !dbg !5126
  %conv50 = zext i8 %52 to i32, !dbg !5126
  %sub51 = sub nsw i32 %conv46, %conv50, !dbg !5128
  %mul52 = mul nsw i32 2, %sub51, !dbg !5129
  store i32 %mul52, i32* %env_size, align 4, !dbg !5120
  call void @llvm.dbg.declare(metadata i32* %ilb53, metadata !5130, metadata !2734), !dbg !5131
  %53 = load i32, i32* %e, align 4, !dbg !5132
  %idxprom54 = sext i32 %53 to i64, !dbg !5133
  %54 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5133
  %t_env55 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %54, i32 0, i32 26, !dbg !5134
  %arrayidx56 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env55, i64 0, i64 %idxprom54, !dbg !5133
  %55 = load i8, i8* %arrayidx56, align 1, !dbg !5133
  %conv57 = zext i8 %55 to i32, !dbg !5133
  %mul58 = mul nsw i32 %conv57, 2, !dbg !5135
  %add59 = add nsw i32 %mul58, 2, !dbg !5136
  store i32 %add59, i32* %ilb53, align 4, !dbg !5131
  call void @llvm.dbg.declare(metadata i32* %iub60, metadata !5137, metadata !2734), !dbg !5138
  %56 = load i32, i32* %e, align 4, !dbg !5139
  %add61 = add nsw i32 %56, 1, !dbg !5140
  %idxprom62 = sext i32 %add61 to i64, !dbg !5141
  %57 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5141
  %t_env63 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %57, i32 0, i32 26, !dbg !5142
  %arrayidx64 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env63, i64 0, i64 %idxprom62, !dbg !5141
  %58 = load i8, i8* %arrayidx64, align 1, !dbg !5141
  %conv65 = zext i8 %58 to i32, !dbg !5141
  %mul66 = mul nsw i32 %conv65, 2, !dbg !5143
  %add67 = add nsw i32 %mul66, 2, !dbg !5144
  store i32 %add67, i32* %iub60, align 4, !dbg !5138
  call void @llvm.dbg.declare(metadata i16** %table, metadata !5145, metadata !2734), !dbg !5146
  %59 = load i32, i32* %e, align 4, !dbg !5147
  %add68 = add nsw i32 %59, 1, !dbg !5148
  %idxprom69 = sext i32 %add68 to i64, !dbg !5149
  %60 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5149
  %bs_freq_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %60, i32 0, i32 3, !dbg !5150
  %arrayidx70 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res, i64 0, i64 %idxprom69, !dbg !5149
  %61 = load i8, i8* %arrayidx70, align 1, !dbg !5149
  %conv71 = zext i8 %61 to i32, !dbg !5149
  %tobool72 = icmp ne i32 %conv71, 0, !dbg !5149
  br i1 %tobool72, label %cond.true, label %cond.false, !dbg !5149

cond.true:                                        ; preds = %for.body41
  %62 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5151
  %f_tablehigh = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %62, i32 0, i32 24, !dbg !5153
  %arraydecay73 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh, i32 0, i32 0, !dbg !5151
  br label %cond.end, !dbg !5154

cond.false:                                       ; preds = %for.body41
  %63 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5155
  %f_tablelow = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %63, i32 0, i32 23, !dbg !5157
  %arraydecay74 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow, i32 0, i32 0, !dbg !5155
  br label %cond.end, !dbg !5158

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16* [ %arraydecay73, %cond.true ], [ %arraydecay74, %cond.false ], !dbg !5159
  store i16* %cond, i16** %table, align 8, !dbg !5161
  store i32 0, i32* %p, align 4, !dbg !5162
  br label %for.cond75, !dbg !5164

for.cond75:                                       ; preds = %for.inc143, %cond.end
  %64 = load i32, i32* %p, align 4, !dbg !5165
  %65 = load i32, i32* %e, align 4, !dbg !5168
  %add76 = add nsw i32 %65, 1, !dbg !5169
  %idxprom77 = sext i32 %add76 to i64, !dbg !5170
  %66 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5170
  %bs_freq_res78 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %66, i32 0, i32 3, !dbg !5171
  %arrayidx79 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res78, i64 0, i64 %idxprom77, !dbg !5170
  %67 = load i8, i8* %arrayidx79, align 1, !dbg !5170
  %idxprom80 = zext i8 %67 to i64, !dbg !5172
  %68 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5172
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %68, i32 0, i32 19, !dbg !5173
  %arrayidx81 = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 %idxprom80, !dbg !5172
  %69 = load i32, i32* %arrayidx81, align 4, !dbg !5172
  %cmp82 = icmp slt i32 %64, %69, !dbg !5174
  br i1 %cmp82, label %for.body84, label %for.end145, !dbg !5175

for.body84:                                       ; preds = %for.cond75
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %sum85, metadata !5176, metadata !2734), !dbg !5178
  %70 = bitcast %struct.SoftFloat* %sum85 to i8*, !dbg !5179
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* bitcast (%struct.SoftFloat* @FLOAT_0 to i8*), i64 8, i32 4, i1 false), !dbg !5179
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %den, metadata !5180, metadata !2734), !dbg !5181
  %71 = load i32, i32* %env_size, align 4, !dbg !5182
  %72 = load i32, i32* %p, align 4, !dbg !5183
  %add86 = add nsw i32 %72, 1, !dbg !5184
  %idxprom87 = sext i32 %add86 to i64, !dbg !5185
  %73 = load i16*, i16** %table, align 8, !dbg !5185
  %arrayidx88 = getelementptr inbounds i16, i16* %73, i64 %idxprom87, !dbg !5185
  %74 = load i16, i16* %arrayidx88, align 2, !dbg !5185
  %conv89 = zext i16 %74 to i32, !dbg !5185
  %75 = load i32, i32* %p, align 4, !dbg !5186
  %idxprom90 = sext i32 %75 to i64, !dbg !5187
  %76 = load i16*, i16** %table, align 8, !dbg !5187
  %arrayidx91 = getelementptr inbounds i16, i16* %76, i64 %idxprom90, !dbg !5187
  %77 = load i16, i16* %arrayidx91, align 2, !dbg !5187
  %conv92 = zext i16 %77 to i32, !dbg !5187
  %sub93 = sub nsw i32 %conv89, %conv92, !dbg !5188
  %mul94 = mul nsw i32 %71, %sub93, !dbg !5189
  %div95 = sdiv i32 536870912, %mul94, !dbg !5190
  %call96 = call i64 @av_int2sf(i32 %div95, i32 29) #2, !dbg !5191
  %78 = bitcast %struct.SoftFloat* %den to i64*, !dbg !5191
  store i64 %call96, i64* %78, align 4, !dbg !5191
  %79 = load i32, i32* %p, align 4, !dbg !5192
  %idxprom97 = sext i32 %79 to i64, !dbg !5194
  %80 = load i16*, i16** %table, align 8, !dbg !5194
  %arrayidx98 = getelementptr inbounds i16, i16* %80, i64 %idxprom97, !dbg !5194
  %81 = load i16, i16* %arrayidx98, align 2, !dbg !5194
  %conv99 = zext i16 %81 to i32, !dbg !5194
  store i32 %conv99, i32* %k, align 4, !dbg !5195
  br label %for.cond100, !dbg !5196

for.cond100:                                      ; preds = %for.inc119, %for.body84
  %82 = load i32, i32* %k, align 4, !dbg !5197
  %83 = load i32, i32* %p, align 4, !dbg !5200
  %add101 = add nsw i32 %83, 1, !dbg !5201
  %idxprom102 = sext i32 %add101 to i64, !dbg !5202
  %84 = load i16*, i16** %table, align 8, !dbg !5202
  %arrayidx103 = getelementptr inbounds i16, i16* %84, i64 %idxprom102, !dbg !5202
  %85 = load i16, i16* %arrayidx103, align 2, !dbg !5202
  %conv104 = zext i16 %85 to i32, !dbg !5202
  %cmp105 = icmp slt i32 %82, %conv104, !dbg !5203
  br i1 %cmp105, label %for.body107, label %for.end121, !dbg !5204

for.body107:                                      ; preds = %for.cond100
  %86 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5205
  %dsp108 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %86, i32 0, i32 46, !dbg !5207
  %sum_square109 = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %dsp108, i32 0, i32 1, !dbg !5208
  %87 = load i64 ([2 x i32]*, i32)*, i64 ([2 x i32]*, i32)** %sum_square109, align 8, !dbg !5208
  %88 = load i32, i32* %k, align 4, !dbg !5209
  %idxprom110 = sext i32 %88 to i64, !dbg !5210
  %89 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_high.addr, align 8, !dbg !5210
  %arrayidx111 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %89, i64 %idxprom110, !dbg !5210
  %arraydecay112 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %arrayidx111, i32 0, i32 0, !dbg !5210
  %90 = load i32, i32* %ilb53, align 4, !dbg !5211
  %idx.ext113 = sext i32 %90 to i64, !dbg !5212
  %add.ptr114 = getelementptr inbounds [2 x i32], [2 x i32]* %arraydecay112, i64 %idx.ext113, !dbg !5212
  %91 = load i32, i32* %iub60, align 4, !dbg !5213
  %92 = load i32, i32* %ilb53, align 4, !dbg !5214
  %sub115 = sub nsw i32 %91, %92, !dbg !5215
  %call116 = call i64 %87([2 x i32]* %add.ptr114, i32 %sub115), !dbg !5205
  %93 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !5205
  store i64 %call116, i64* %93, align 4, !dbg !5205
  %94 = bitcast %struct.SoftFloat* %sum85 to i64*, !dbg !5216
  %95 = load i64, i64* %94, align 4, !dbg !5216
  %96 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !5216
  %97 = load i64, i64* %96, align 4, !dbg !5216
  %call117 = call i64 @av_add_sf(i64 %95, i64 %97) #2, !dbg !5217
  %98 = bitcast %struct.SoftFloat* %coerce118 to i64*, !dbg !5216
  store i64 %call117, i64* %98, align 4, !dbg !5216
  %99 = bitcast %struct.SoftFloat* %sum85 to i8*, !dbg !5216
  %100 = bitcast %struct.SoftFloat* %coerce118 to i8*, !dbg !5216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 4, i1 false), !dbg !5219
  br label %for.inc119, !dbg !5221

for.inc119:                                       ; preds = %for.body107
  %101 = load i32, i32* %k, align 4, !dbg !5222
  %inc120 = add nsw i32 %101, 1, !dbg !5222
  store i32 %inc120, i32* %k, align 4, !dbg !5222
  br label %for.cond100, !dbg !5224, !llvm.loop !5225

for.end121:                                       ; preds = %for.cond100
  %102 = bitcast %struct.SoftFloat* %sum85 to i64*, !dbg !5227
  %103 = load i64, i64* %102, align 4, !dbg !5227
  %104 = bitcast %struct.SoftFloat* %den to i64*, !dbg !5227
  %105 = load i64, i64* %104, align 4, !dbg !5227
  %call122 = call i64 @av_mul_sf(i64 %103, i64 %105) #2, !dbg !5227
  %106 = bitcast %struct.SoftFloat* %coerce123 to i64*, !dbg !5227
  store i64 %call122, i64* %106, align 4, !dbg !5227
  %107 = bitcast %struct.SoftFloat* %sum85 to i8*, !dbg !5227
  %108 = bitcast %struct.SoftFloat* %coerce123 to i8*, !dbg !5227
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 8, i32 4, i1 false), !dbg !5228
  %109 = load i32, i32* %p, align 4, !dbg !5230
  %idxprom124 = sext i32 %109 to i64, !dbg !5232
  %110 = load i16*, i16** %table, align 8, !dbg !5232
  %arrayidx125 = getelementptr inbounds i16, i16* %110, i64 %idxprom124, !dbg !5232
  %111 = load i16, i16* %arrayidx125, align 2, !dbg !5232
  %conv126 = zext i16 %111 to i32, !dbg !5232
  store i32 %conv126, i32* %k, align 4, !dbg !5233
  br label %for.cond127, !dbg !5234

for.cond127:                                      ; preds = %for.inc140, %for.end121
  %112 = load i32, i32* %k, align 4, !dbg !5235
  %113 = load i32, i32* %p, align 4, !dbg !5238
  %add128 = add nsw i32 %113, 1, !dbg !5239
  %idxprom129 = sext i32 %add128 to i64, !dbg !5240
  %114 = load i16*, i16** %table, align 8, !dbg !5240
  %arrayidx130 = getelementptr inbounds i16, i16* %114, i64 %idxprom129, !dbg !5240
  %115 = load i16, i16* %arrayidx130, align 2, !dbg !5240
  %conv131 = zext i16 %115 to i32, !dbg !5240
  %cmp132 = icmp slt i32 %112, %conv131, !dbg !5241
  br i1 %cmp132, label %for.body134, label %for.end142, !dbg !5242

for.body134:                                      ; preds = %for.cond127
  %116 = load i32, i32* %k, align 4, !dbg !5243
  %117 = load i32, i32* %kx1, align 4, !dbg !5245
  %sub135 = sub nsw i32 %116, %117, !dbg !5246
  %idxprom136 = sext i32 %sub135 to i64, !dbg !5247
  %118 = load i32, i32* %e, align 4, !dbg !5248
  %idxprom137 = sext i32 %118 to i64, !dbg !5247
  %119 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %e_curr.addr, align 8, !dbg !5247
  %arrayidx138 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %119, i64 %idxprom137, !dbg !5247
  %arrayidx139 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx138, i64 0, i64 %idxprom136, !dbg !5247
  %120 = bitcast %struct.SoftFloat* %arrayidx139 to i8*, !dbg !5249
  %121 = bitcast %struct.SoftFloat* %sum85 to i8*, !dbg !5249
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %120, i8* %121, i64 8, i32 4, i1 false), !dbg !5249
  br label %for.inc140, !dbg !5250

for.inc140:                                       ; preds = %for.body134
  %122 = load i32, i32* %k, align 4, !dbg !5251
  %inc141 = add nsw i32 %122, 1, !dbg !5251
  store i32 %inc141, i32* %k, align 4, !dbg !5251
  br label %for.cond127, !dbg !5253, !llvm.loop !5254

for.end142:                                       ; preds = %for.cond127
  br label %for.inc143, !dbg !5256

for.inc143:                                       ; preds = %for.end142
  %123 = load i32, i32* %p, align 4, !dbg !5257
  %inc144 = add nsw i32 %123, 1, !dbg !5257
  store i32 %inc144, i32* %p, align 4, !dbg !5257
  br label %for.cond75, !dbg !5259, !llvm.loop !5260

for.end145:                                       ; preds = %for.cond75
  br label %for.inc146, !dbg !5262

for.inc146:                                       ; preds = %for.end145
  %124 = load i32, i32* %e, align 4, !dbg !5263
  %inc147 = add nsw i32 %124, 1, !dbg !5263
  store i32 %inc147, i32* %e, align 4, !dbg !5263
  br label %for.cond37, !dbg !5265, !llvm.loop !5266

for.end148:                                       ; preds = %for.cond37
  br label %if.end

if.end:                                           ; preds = %for.end148, %for.end36
  ret void, !dbg !5268
}

; Function Attrs: nounwind uwtable
define internal void @sbr_gain_calc(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.SBRData* %ch_data, i32* %e_a) #3 !dbg !2551 {
entry:
  %retval.i766 = alloca %struct.SoftFloat, align 4
  %val.i767 = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %val.i767, metadata !5269, metadata !2734), !dbg !5273
  %tabIndex.i768 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tabIndex.i768, metadata !5281, metadata !2734), !dbg !5282
  %rem.i769 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rem.i769, metadata !5283, metadata !2734), !dbg !5284
  %retval.i705 = alloca %struct.SoftFloat, align 4
  %val.i706 = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %val.i706, metadata !5269, metadata !2734), !dbg !5285
  %tabIndex.i707 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tabIndex.i707, metadata !5281, metadata !2734), !dbg !5287
  %rem.i708 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rem.i708, metadata !5283, metadata !2734), !dbg !5288
  %retval.i644 = alloca %struct.SoftFloat, align 4
  %val.i645 = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %val.i645, metadata !5269, metadata !2734), !dbg !5289
  %tabIndex.i646 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tabIndex.i646, metadata !5281, metadata !2734), !dbg !5296
  %rem.i647 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rem.i647, metadata !5283, metadata !2734), !dbg !5297
  %retval.i583 = alloca %struct.SoftFloat, align 4
  %val.i584 = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %val.i584, metadata !5269, metadata !2734), !dbg !5298
  %tabIndex.i585 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tabIndex.i585, metadata !5281, metadata !2734), !dbg !5304
  %rem.i586 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rem.i586, metadata !5283, metadata !2734), !dbg !5305
  %retval.i522 = alloca %struct.SoftFloat, align 4
  %val.i523 = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %val.i523, metadata !5269, metadata !2734), !dbg !5306
  %tabIndex.i524 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tabIndex.i524, metadata !5281, metadata !2734), !dbg !5310
  %rem.i525 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rem.i525, metadata !5283, metadata !2734), !dbg !5311
  %retval.i461 = alloca %struct.SoftFloat, align 4
  %val.i462 = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %val.i462, metadata !5269, metadata !2734), !dbg !5312
  %tabIndex.i463 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tabIndex.i463, metadata !5281, metadata !2734), !dbg !5315
  %rem.i464 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rem.i464, metadata !5283, metadata !2734), !dbg !5316
  %retval.i = alloca %struct.SoftFloat, align 4
  %val.i = alloca %struct.SoftFloat, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %val.i, metadata !5269, metadata !2734), !dbg !5317
  %tabIndex.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tabIndex.i, metadata !5281, metadata !2734), !dbg !5320
  %rem.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rem.i, metadata !5283, metadata !2734), !dbg !5321
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %e_a.addr = alloca i32*, align 8
  %e = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %delta = alloca i32, align 4
  %gain_boost = alloca %struct.SoftFloat, align 4
  %gain_max = alloca %struct.SoftFloat, align 4
  %sum = alloca [2 x %struct.SoftFloat], align 16
  %temp = alloca %struct.SoftFloat, align 4
  %agg.tmp = alloca %struct.SoftFloat, align 4
  %agg.tmp35 = alloca %struct.SoftFloat, align 4
  %coerce = alloca %struct.SoftFloat, align 4
  %agg.tmp47 = alloca %struct.SoftFloat, align 4
  %agg.tmp48 = alloca %struct.SoftFloat, align 4
  %coerce58 = alloca %struct.SoftFloat, align 4
  %agg.tmp69 = alloca %struct.SoftFloat, align 4
  %agg.tmp75 = alloca %struct.SoftFloat, align 4
  %agg.tmp76 = alloca %struct.SoftFloat, align 4
  %agg.tmp82 = alloca %struct.SoftFloat, align 4
  %coerce92 = alloca %struct.SoftFloat, align 4
  %agg.tmp98 = alloca %struct.SoftFloat, align 4
  %agg.tmp104 = alloca %struct.SoftFloat, align 4
  %coerce113 = alloca %struct.SoftFloat, align 4
  %agg.tmp120 = alloca %struct.SoftFloat, align 4
  %agg.tmp121 = alloca %struct.SoftFloat, align 4
  %agg.tmp133 = alloca %struct.SoftFloat, align 4
  %agg.tmp134 = alloca %struct.SoftFloat, align 4
  %agg.tmp141 = alloca %struct.SoftFloat, align 4
  %coerce151 = alloca %struct.SoftFloat, align 4
  %coerce164 = alloca %struct.SoftFloat, align 4
  %coerce192 = alloca %struct.SoftFloat, align 4
  %coerce201 = alloca %struct.SoftFloat, align 4
  %agg.tmp207 = alloca %struct.SoftFloat, align 4
  %agg.tmp208 = alloca %struct.SoftFloat, align 4
  %agg.tmp209 = alloca %struct.SoftFloat, align 4
  %agg.tmp212 = alloca %struct.SoftFloat, align 4
  %coerce218 = alloca %struct.SoftFloat, align 4
  %q_m_max = alloca %struct.SoftFloat, align 4
  %agg.tmp242 = alloca %struct.SoftFloat, align 4
  %coerce315 = alloca %struct.SoftFloat, align 4
  %agg.tmp318 = alloca %struct.SoftFloat, align 4
  %agg.tmp319 = alloca %struct.SoftFloat, align 4
  %coerce338 = alloca %struct.SoftFloat, align 4
  %agg.tmp341 = alloca %struct.SoftFloat, align 4
  %coerce354 = alloca %struct.SoftFloat, align 4
  %agg.tmp365 = alloca %struct.SoftFloat, align 4
  %coerce378 = alloca %struct.SoftFloat, align 4
  %agg.tmp383 = alloca %struct.SoftFloat, align 4
  %agg.tmp384 = alloca %struct.SoftFloat, align 4
  %agg.tmp387 = alloca %struct.SoftFloat, align 4
  %coerce392 = alloca %struct.SoftFloat, align 4
  %coerce427 = alloca %struct.SoftFloat, align 4
  %coerce439 = alloca %struct.SoftFloat, align 4
  %coerce451 = alloca %struct.SoftFloat, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !5322, metadata !2734), !dbg !5323
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !5324, metadata !2734), !dbg !5325
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !5326, metadata !2734), !dbg !5327
  store i32* %e_a, i32** %e_a.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %e_a.addr, metadata !5328, metadata !2734), !dbg !5329
  call void @llvm.dbg.declare(metadata i32* %e, metadata !5330, metadata !2734), !dbg !5331
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5332, metadata !2734), !dbg !5333
  call void @llvm.dbg.declare(metadata i32* %m, metadata !5334, metadata !2734), !dbg !5335
  store i32 0, i32* %e, align 4, !dbg !5336
  br label %for.cond, !dbg !5337

for.cond:                                         ; preds = %for.inc458, %entry
  %0 = load i32, i32* %e, align 4, !dbg !5338
  %1 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5340
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %1, i32 0, i32 2, !dbg !5341
  %2 = load i32, i32* %bs_num_env, align 8, !dbg !5341
  %cmp = icmp slt i32 %0, %2, !dbg !5342
  br i1 %cmp, label %for.body, label %for.end460, !dbg !5343

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !5344, metadata !2734), !dbg !5345
  %3 = load i32, i32* %e, align 4, !dbg !5346
  %4 = load i32*, i32** %e_a.addr, align 8, !dbg !5347
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 1, !dbg !5347
  %5 = load i32, i32* %arrayidx, align 4, !dbg !5347
  %cmp1 = icmp eq i32 %3, %5, !dbg !5348
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !5349

lor.rhs:                                          ; preds = %for.body
  %6 = load i32, i32* %e, align 4, !dbg !5350
  %7 = load i32*, i32** %e_a.addr, align 8, !dbg !5352
  %arrayidx2 = getelementptr inbounds i32, i32* %7, i64 0, !dbg !5352
  %8 = load i32, i32* %arrayidx2, align 4, !dbg !5352
  %cmp3 = icmp eq i32 %6, %8, !dbg !5353
  br label %lor.end, !dbg !5354

lor.end:                                          ; preds = %lor.rhs, %for.body
  %9 = phi i1 [ true, %for.body ], [ %cmp3, %lor.rhs ]
  %lnot = xor i1 %9, true, !dbg !5355
  %lnot.ext = zext i1 %lnot to i32, !dbg !5355
  store i32 %lnot.ext, i32* %delta, align 4, !dbg !5357
  store i32 0, i32* %k, align 4, !dbg !5358
  br label %for.cond4, !dbg !5359

for.cond4:                                        ; preds = %for.inc455, %lor.end
  %10 = load i32, i32* %k, align 4, !dbg !5360
  %11 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5362
  %n_lim = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %11, i32 0, i32 21, !dbg !5363
  %12 = load i32, i32* %n_lim, align 4, !dbg !5363
  %cmp5 = icmp slt i32 %10, %12, !dbg !5364
  br i1 %cmp5, label %for.body6, label %for.end457, !dbg !5365

for.body6:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %gain_boost, metadata !5366, metadata !2734), !dbg !5367
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %gain_max, metadata !5368, metadata !2734), !dbg !5369
  call void @llvm.dbg.declare(metadata [2 x %struct.SoftFloat]* %sum, metadata !5370, metadata !2734), !dbg !5372
  %arrayidx7 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 0, !dbg !5373
  %arrayidx8 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 1, !dbg !5374
  %13 = bitcast %struct.SoftFloat* %arrayidx8 to i8*, !dbg !5375
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* bitcast (%struct.SoftFloat* @FLOAT_0 to i8*), i64 8, i32 4, i1 false), !dbg !5375
  %14 = bitcast %struct.SoftFloat* %arrayidx7 to i8*, !dbg !5376
  %15 = bitcast %struct.SoftFloat* %arrayidx8 to i8*, !dbg !5376
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false), !dbg !5377
  %16 = load i32, i32* %k, align 4, !dbg !5379
  %idxprom = sext i32 %16 to i64, !dbg !5380
  %17 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5380
  %f_tablelim = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %17, i32 0, i32 26, !dbg !5381
  %arrayidx9 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim, i64 0, i64 %idxprom, !dbg !5380
  %18 = load i16, i16* %arrayidx9, align 2, !dbg !5380
  %conv = zext i16 %18 to i32, !dbg !5380
  %19 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5382
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %19, i32 0, i32 13, !dbg !5383
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !5382
  %20 = load i32, i32* %arrayidx10, align 4, !dbg !5382
  %sub = sub nsw i32 %conv, %20, !dbg !5384
  store i32 %sub, i32* %m, align 4, !dbg !5385
  br label %for.cond11, !dbg !5386

for.cond11:                                       ; preds = %for.inc, %for.body6
  %21 = load i32, i32* %m, align 4, !dbg !5387
  %22 = load i32, i32* %k, align 4, !dbg !5389
  %add = add nsw i32 %22, 1, !dbg !5390
  %idxprom12 = sext i32 %add to i64, !dbg !5391
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5391
  %f_tablelim13 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %23, i32 0, i32 26, !dbg !5392
  %arrayidx14 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim13, i64 0, i64 %idxprom12, !dbg !5391
  %24 = load i16, i16* %arrayidx14, align 2, !dbg !5391
  %conv15 = zext i16 %24 to i32, !dbg !5391
  %25 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5393
  %kx16 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %25, i32 0, i32 13, !dbg !5394
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %kx16, i64 0, i64 1, !dbg !5393
  %26 = load i32, i32* %arrayidx17, align 4, !dbg !5393
  %sub18 = sub nsw i32 %conv15, %26, !dbg !5395
  %cmp19 = icmp slt i32 %21, %sub18, !dbg !5396
  br i1 %cmp19, label %for.body21, label %for.end, !dbg !5397

for.body21:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %temp, metadata !5398, metadata !2734), !dbg !5399
  %27 = load i32, i32* %m, align 4, !dbg !5400
  %idxprom22 = sext i32 %27 to i64, !dbg !5401
  %28 = load i32, i32* %e, align 4, !dbg !5402
  %idxprom23 = sext i32 %28 to i64, !dbg !5401
  %29 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5401
  %e_origmapped = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %29, i32 0, i32 35, !dbg !5403
  %arrayidx24 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %e_origmapped, i64 0, i64 %idxprom23, !dbg !5401
  %arrayidx25 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx24, i64 0, i64 %idxprom22, !dbg !5401
  %30 = load i32, i32* %m, align 4, !dbg !5404
  %idxprom26 = sext i32 %30 to i64, !dbg !5405
  %31 = load i32, i32* %e, align 4, !dbg !5406
  %idxprom27 = sext i32 %31 to i64, !dbg !5405
  %32 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5405
  %q_mapped = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %32, i32 0, i32 36, !dbg !5407
  %arrayidx28 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_mapped, i64 0, i64 %idxprom27, !dbg !5405
  %arrayidx29 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx28, i64 0, i64 %idxprom26, !dbg !5405
  %33 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_1 to i64*), align 4, !dbg !5408
  %34 = bitcast %struct.SoftFloat* %arrayidx29 to i64*, !dbg !5408
  %35 = load i64, i64* %34, align 8, !dbg !5408
  %call = call i64 @av_add_sf(i64 %33, i64 %35) #2, !dbg !5408
  %36 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !5408
  store i64 %call, i64* %36, align 4, !dbg !5408
  %37 = bitcast %struct.SoftFloat* %arrayidx25 to i64*, !dbg !5409
  %38 = load i64, i64* %37, align 8, !dbg !5409
  %39 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !5409
  %40 = load i64, i64* %39, align 4, !dbg !5409
  %call30 = call i64 @av_div_sf(i64 %38, i64 %40) #2, !dbg !5409
  %41 = bitcast %struct.SoftFloat* %temp to i64*, !dbg !5409
  store i64 %call30, i64* %41, align 4, !dbg !5409
  %42 = load i32, i32* %m, align 4, !dbg !5410
  %idxprom31 = sext i32 %42 to i64, !dbg !5411
  %43 = load i32, i32* %e, align 4, !dbg !5412
  %idxprom32 = sext i32 %43 to i64, !dbg !5411
  %44 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5411
  %q_m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %44, i32 0, i32 39, !dbg !5413
  %arrayidx33 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_m, i64 0, i64 %idxprom32, !dbg !5411
  %arrayidx34 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx33, i64 0, i64 %idxprom31, !dbg !5411
  %45 = load i32, i32* %m, align 4, !dbg !5414
  %idxprom36 = sext i32 %45 to i64, !dbg !5415
  %46 = load i32, i32* %e, align 4, !dbg !5416
  %idxprom37 = sext i32 %46 to i64, !dbg !5415
  %47 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5415
  %q_mapped38 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %47, i32 0, i32 36, !dbg !5417
  %arrayidx39 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_mapped38, i64 0, i64 %idxprom37, !dbg !5415
  %arrayidx40 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx39, i64 0, i64 %idxprom36, !dbg !5415
  %48 = bitcast %struct.SoftFloat* %temp to i64*, !dbg !5418
  %49 = load i64, i64* %48, align 4, !dbg !5418
  %50 = bitcast %struct.SoftFloat* %arrayidx40 to i64*, !dbg !5418
  %51 = load i64, i64* %50, align 8, !dbg !5418
  %call41 = call i64 @av_mul_sf(i64 %49, i64 %51) #2, !dbg !5418
  %52 = bitcast %struct.SoftFloat* %agg.tmp35 to i64*, !dbg !5418
  store i64 %call41, i64* %52, align 4, !dbg !5418
  %53 = bitcast %struct.SoftFloat* %agg.tmp35 to i64*, !dbg !5419
  %54 = load i64, i64* %53, align 4, !dbg !5419
  %55 = bitcast %struct.SoftFloat* %val.i to i64*, !dbg !5420
  store i64 %54, i64* %55, align 4, !dbg !5420
  %mant.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 0, !dbg !5421
  %56 = load i32, i32* %mant.i, align 4, !dbg !5421
  %cmp.i = icmp eq i32 %56, 0, !dbg !5423
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5424

if.then.i:                                        ; preds = %for.body21
  %exp.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 1, !dbg !5425
  store i32 -149, i32* %exp.i, align 4, !dbg !5426
  br label %av_sqrt_sf.exit, !dbg !5427

if.else.i:                                        ; preds = %for.body21
  %mant1.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 0, !dbg !5428
  %57 = load i32, i32* %mant1.i, align 4, !dbg !5428
  %cmp2.i = icmp slt i32 %57, 0, !dbg !5430
  br i1 %cmp2.i, label %if.then3.i, label %if.else4.i, !dbg !5431

if.then3.i:                                       ; preds = %if.else.i
  call void @abort() #11, !dbg !5432
  unreachable, !dbg !5432

if.else4.i:                                       ; preds = %if.else.i
  %mant5.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 0, !dbg !5433
  %58 = load i32, i32* %mant5.i, align 4, !dbg !5433
  %sub.i = sub nsw i32 %58, 536870912, !dbg !5435
  %shr.i = ashr i32 %sub.i, 20, !dbg !5436
  store i32 %shr.i, i32* %tabIndex.i, align 4, !dbg !5437
  %mant6.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 0, !dbg !5438
  %59 = load i32, i32* %mant6.i, align 4, !dbg !5438
  %and.i = and i32 %59, 1048575, !dbg !5439
  store i32 %and.i, i32* %rem.i, align 4, !dbg !5440
  %60 = load i32, i32* %tabIndex.i, align 4, !dbg !5441
  %idxprom.i = sext i32 %60 to i64, !dbg !5442
  %arrayidx.i = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom.i, !dbg !5442
  %61 = load i32, i32* %arrayidx.i, align 4, !dbg !5442
  %conv.i = sext i32 %61 to i64, !dbg !5443
  %62 = load i32, i32* %rem.i, align 4, !dbg !5444
  %sub7.i = sub nsw i32 1048576, %62, !dbg !5445
  %conv8.i = sext i32 %sub7.i to i64, !dbg !5446
  %mul.i = mul nsw i64 %conv.i, %conv8.i, !dbg !5447
  %63 = load i32, i32* %tabIndex.i, align 4, !dbg !5448
  %add.i = add nsw i32 %63, 1, !dbg !5449
  %idxprom9.i = sext i32 %add.i to i64, !dbg !5450
  %arrayidx10.i = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom9.i, !dbg !5450
  %64 = load i32, i32* %arrayidx10.i, align 4, !dbg !5450
  %conv11.i = sext i32 %64 to i64, !dbg !5451
  %65 = load i32, i32* %rem.i, align 4, !dbg !5452
  %conv12.i = sext i32 %65 to i64, !dbg !5452
  %mul13.i = mul nsw i64 %conv11.i, %conv12.i, !dbg !5453
  %add14.i = add nsw i64 %mul.i, %mul13.i, !dbg !5454
  %add15.i = add nsw i64 %add14.i, 524288, !dbg !5455
  %shr16.i = ashr i64 %add15.i, 20, !dbg !5456
  %conv17.i = trunc i64 %shr16.i to i32, !dbg !5457
  %mant18.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 0, !dbg !5458
  store i32 %conv17.i, i32* %mant18.i, align 4, !dbg !5459
  %exp19.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 1, !dbg !5460
  %66 = load i32, i32* %exp19.i, align 4, !dbg !5460
  %and20.i = and i32 %66, 1, !dbg !5461
  %idxprom21.i = sext i32 %and20.i to i64, !dbg !5462
  %arrayidx22.i = getelementptr inbounds [2 x i32], [2 x i32]* @av_sqr_exp_multbl_sf, i64 0, i64 %idxprom21.i, !dbg !5462
  %67 = load i32, i32* %arrayidx22.i, align 4, !dbg !5462
  %conv23.i = sext i32 %67 to i64, !dbg !5463
  %mant24.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 0, !dbg !5464
  %68 = load i32, i32* %mant24.i, align 4, !dbg !5464
  %conv25.i = sext i32 %68 to i64, !dbg !5465
  %mul26.i = mul nsw i64 %conv23.i, %conv25.i, !dbg !5466
  %add27.i = add nsw i64 %mul26.i, 268435456, !dbg !5467
  %shr28.i = ashr i64 %add27.i, 29, !dbg !5468
  %conv29.i = trunc i64 %shr28.i to i32, !dbg !5469
  %mant30.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 0, !dbg !5470
  store i32 %conv29.i, i32* %mant30.i, align 4, !dbg !5471
  %mant31.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 0, !dbg !5472
  %69 = load i32, i32* %mant31.i, align 4, !dbg !5472
  %cmp32.i = icmp slt i32 %69, 1073741824, !dbg !5474
  br i1 %cmp32.i, label %if.then34.i, label %if.else37.i, !dbg !5475

if.then34.i:                                      ; preds = %if.else4.i
  %exp35.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 1, !dbg !5476
  %70 = load i32, i32* %exp35.i, align 4, !dbg !5477
  %sub36.i = sub nsw i32 %70, 2, !dbg !5477
  store i32 %sub36.i, i32* %exp35.i, align 4, !dbg !5477
  br label %if.end.i, !dbg !5478

if.else37.i:                                      ; preds = %if.else4.i
  %mant38.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 0, !dbg !5479
  %71 = load i32, i32* %mant38.i, align 4, !dbg !5480
  %shr39.i = ashr i32 %71, 1, !dbg !5480
  store i32 %shr39.i, i32* %mant38.i, align 4, !dbg !5480
  br label %if.end.i, !dbg !5420

if.end.i:                                         ; preds = %if.else37.i, %if.then34.i
  %exp40.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 1, !dbg !5481
  %72 = load i32, i32* %exp40.i, align 4, !dbg !5481
  %shr41.i = ashr i32 %72, 1, !dbg !5482
  %add42.i = add nsw i32 %shr41.i, 1, !dbg !5483
  %exp43.i = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i, i32 0, i32 1, !dbg !5484
  store i32 %add42.i, i32* %exp43.i, align 4, !dbg !5485
  br label %av_sqrt_sf.exit, !dbg !5420

av_sqrt_sf.exit:                                  ; preds = %if.then.i, %if.end.i
  %73 = bitcast %struct.SoftFloat* %retval.i to i8*, !dbg !5486
  %74 = bitcast %struct.SoftFloat* %val.i to i8*, !dbg !5486
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 4, i1 false) #12, !dbg !5486
  %75 = bitcast %struct.SoftFloat* %retval.i to i64*, !dbg !5487
  %76 = load i64, i64* %75, align 4, !dbg !5487
  %77 = bitcast %struct.SoftFloat* %coerce to i64*, !dbg !5419
  store i64 %76, i64* %77, align 4, !dbg !5419
  %78 = bitcast %struct.SoftFloat* %arrayidx34 to i8*, !dbg !5419
  %79 = bitcast %struct.SoftFloat* %coerce to i8*, !dbg !5419
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 8, i32 4, i1 false), !dbg !5488
  %80 = load i32, i32* %m, align 4, !dbg !5489
  %idxprom43 = sext i32 %80 to i64, !dbg !5490
  %81 = load i32, i32* %e, align 4, !dbg !5491
  %idxprom44 = sext i32 %81 to i64, !dbg !5490
  %82 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5490
  %s_m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %82, i32 0, i32 40, !dbg !5492
  %arrayidx45 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %s_m, i64 0, i64 %idxprom44, !dbg !5490
  %arrayidx46 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx45, i64 0, i64 %idxprom43, !dbg !5490
  %83 = load i32, i32* %m, align 4, !dbg !5493
  %idxprom49 = sext i32 %83 to i64, !dbg !5494
  %84 = load i32, i32* %e, align 4, !dbg !5495
  %add50 = add nsw i32 %84, 1, !dbg !5496
  %idxprom51 = sext i32 %add50 to i64, !dbg !5494
  %85 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5494
  %s_indexmapped = getelementptr inbounds %struct.SBRData, %struct.SBRData* %85, i32 0, i32 21, !dbg !5497
  %arrayidx52 = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped, i64 0, i64 %idxprom51, !dbg !5494
  %arrayidx53 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx52, i64 0, i64 %idxprom49, !dbg !5494
  %86 = load i8, i8* %arrayidx53, align 1, !dbg !5494
  %conv54 = zext i8 %86 to i32, !dbg !5494
  %call55 = call i64 @av_int2sf(i32 %conv54, i32 0) #2, !dbg !5498
  %87 = bitcast %struct.SoftFloat* %agg.tmp48 to i64*, !dbg !5498
  store i64 %call55, i64* %87, align 4, !dbg !5498
  %88 = bitcast %struct.SoftFloat* %temp to i64*, !dbg !5499
  %89 = load i64, i64* %88, align 4, !dbg !5499
  %90 = bitcast %struct.SoftFloat* %agg.tmp48 to i64*, !dbg !5499
  %91 = load i64, i64* %90, align 4, !dbg !5499
  %call56 = call i64 @av_mul_sf(i64 %89, i64 %91) #2, !dbg !5500
  %92 = bitcast %struct.SoftFloat* %agg.tmp47 to i64*, !dbg !5499
  store i64 %call56, i64* %92, align 4, !dbg !5499
  %93 = bitcast %struct.SoftFloat* %agg.tmp47 to i64*, !dbg !5501
  %94 = load i64, i64* %93, align 4, !dbg !5501
  %95 = bitcast %struct.SoftFloat* %val.i462 to i64*, !dbg !5502
  store i64 %94, i64* %95, align 4, !dbg !5502
  %mant.i465 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 0, !dbg !5503
  %96 = load i32, i32* %mant.i465, align 4, !dbg !5503
  %cmp.i466 = icmp eq i32 %96, 0, !dbg !5504
  br i1 %cmp.i466, label %if.then.i468, label %if.else.i471, !dbg !5505

if.then.i468:                                     ; preds = %av_sqrt_sf.exit
  %exp.i467 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 1, !dbg !5506
  store i32 -149, i32* %exp.i467, align 4, !dbg !5507
  br label %av_sqrt_sf.exit521, !dbg !5508

if.else.i471:                                     ; preds = %av_sqrt_sf.exit
  %mant1.i469 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 0, !dbg !5509
  %97 = load i32, i32* %mant1.i469, align 4, !dbg !5509
  %cmp2.i470 = icmp slt i32 %97, 0, !dbg !5510
  br i1 %cmp2.i470, label %if.then3.i472, label %if.else4.i509, !dbg !5511

if.then3.i472:                                    ; preds = %if.else.i471
  call void @abort() #11, !dbg !5512
  unreachable, !dbg !5512

if.else4.i509:                                    ; preds = %if.else.i471
  %mant5.i473 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 0, !dbg !5513
  %98 = load i32, i32* %mant5.i473, align 4, !dbg !5513
  %sub.i474 = sub nsw i32 %98, 536870912, !dbg !5514
  %shr.i475 = ashr i32 %sub.i474, 20, !dbg !5515
  store i32 %shr.i475, i32* %tabIndex.i463, align 4, !dbg !5516
  %mant6.i476 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 0, !dbg !5517
  %99 = load i32, i32* %mant6.i476, align 4, !dbg !5517
  %and.i477 = and i32 %99, 1048575, !dbg !5518
  store i32 %and.i477, i32* %rem.i464, align 4, !dbg !5519
  %100 = load i32, i32* %tabIndex.i463, align 4, !dbg !5520
  %idxprom.i478 = sext i32 %100 to i64, !dbg !5521
  %arrayidx.i479 = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom.i478, !dbg !5521
  %101 = load i32, i32* %arrayidx.i479, align 4, !dbg !5521
  %conv.i480 = sext i32 %101 to i64, !dbg !5522
  %102 = load i32, i32* %rem.i464, align 4, !dbg !5523
  %sub7.i481 = sub nsw i32 1048576, %102, !dbg !5524
  %conv8.i482 = sext i32 %sub7.i481 to i64, !dbg !5525
  %mul.i483 = mul nsw i64 %conv.i480, %conv8.i482, !dbg !5526
  %103 = load i32, i32* %tabIndex.i463, align 4, !dbg !5527
  %add.i484 = add nsw i32 %103, 1, !dbg !5528
  %idxprom9.i485 = sext i32 %add.i484 to i64, !dbg !5529
  %arrayidx10.i486 = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom9.i485, !dbg !5529
  %104 = load i32, i32* %arrayidx10.i486, align 4, !dbg !5529
  %conv11.i487 = sext i32 %104 to i64, !dbg !5530
  %105 = load i32, i32* %rem.i464, align 4, !dbg !5531
  %conv12.i488 = sext i32 %105 to i64, !dbg !5531
  %mul13.i489 = mul nsw i64 %conv11.i487, %conv12.i488, !dbg !5532
  %add14.i490 = add nsw i64 %mul.i483, %mul13.i489, !dbg !5533
  %add15.i491 = add nsw i64 %add14.i490, 524288, !dbg !5534
  %shr16.i492 = ashr i64 %add15.i491, 20, !dbg !5535
  %conv17.i493 = trunc i64 %shr16.i492 to i32, !dbg !5536
  %mant18.i494 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 0, !dbg !5537
  store i32 %conv17.i493, i32* %mant18.i494, align 4, !dbg !5538
  %exp19.i495 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 1, !dbg !5539
  %106 = load i32, i32* %exp19.i495, align 4, !dbg !5539
  %and20.i496 = and i32 %106, 1, !dbg !5540
  %idxprom21.i497 = sext i32 %and20.i496 to i64, !dbg !5541
  %arrayidx22.i498 = getelementptr inbounds [2 x i32], [2 x i32]* @av_sqr_exp_multbl_sf, i64 0, i64 %idxprom21.i497, !dbg !5541
  %107 = load i32, i32* %arrayidx22.i498, align 4, !dbg !5541
  %conv23.i499 = sext i32 %107 to i64, !dbg !5542
  %mant24.i500 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 0, !dbg !5543
  %108 = load i32, i32* %mant24.i500, align 4, !dbg !5543
  %conv25.i501 = sext i32 %108 to i64, !dbg !5544
  %mul26.i502 = mul nsw i64 %conv23.i499, %conv25.i501, !dbg !5545
  %add27.i503 = add nsw i64 %mul26.i502, 268435456, !dbg !5546
  %shr28.i504 = ashr i64 %add27.i503, 29, !dbg !5547
  %conv29.i505 = trunc i64 %shr28.i504 to i32, !dbg !5548
  %mant30.i506 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 0, !dbg !5549
  store i32 %conv29.i505, i32* %mant30.i506, align 4, !dbg !5550
  %mant31.i507 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 0, !dbg !5551
  %109 = load i32, i32* %mant31.i507, align 4, !dbg !5551
  %cmp32.i508 = icmp slt i32 %109, 1073741824, !dbg !5552
  br i1 %cmp32.i508, label %if.then34.i512, label %if.else37.i515, !dbg !5553

if.then34.i512:                                   ; preds = %if.else4.i509
  %exp35.i510 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 1, !dbg !5554
  %110 = load i32, i32* %exp35.i510, align 4, !dbg !5555
  %sub36.i511 = sub nsw i32 %110, 2, !dbg !5555
  store i32 %sub36.i511, i32* %exp35.i510, align 4, !dbg !5555
  br label %if.end.i520, !dbg !5556

if.else37.i515:                                   ; preds = %if.else4.i509
  %mant38.i513 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 0, !dbg !5557
  %111 = load i32, i32* %mant38.i513, align 4, !dbg !5558
  %shr39.i514 = ashr i32 %111, 1, !dbg !5558
  store i32 %shr39.i514, i32* %mant38.i513, align 4, !dbg !5558
  br label %if.end.i520, !dbg !5502

if.end.i520:                                      ; preds = %if.else37.i515, %if.then34.i512
  %exp40.i516 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 1, !dbg !5559
  %112 = load i32, i32* %exp40.i516, align 4, !dbg !5559
  %shr41.i517 = ashr i32 %112, 1, !dbg !5560
  %add42.i518 = add nsw i32 %shr41.i517, 1, !dbg !5561
  %exp43.i519 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i462, i32 0, i32 1, !dbg !5562
  store i32 %add42.i518, i32* %exp43.i519, align 4, !dbg !5563
  br label %av_sqrt_sf.exit521, !dbg !5502

av_sqrt_sf.exit521:                               ; preds = %if.then.i468, %if.end.i520
  %113 = bitcast %struct.SoftFloat* %retval.i461 to i8*, !dbg !5564
  %114 = bitcast %struct.SoftFloat* %val.i462 to i8*, !dbg !5564
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %113, i8* %114, i64 8, i32 4, i1 false) #12, !dbg !5564
  %115 = bitcast %struct.SoftFloat* %retval.i461 to i64*, !dbg !5565
  %116 = load i64, i64* %115, align 4, !dbg !5565
  %117 = bitcast %struct.SoftFloat* %coerce58 to i64*, !dbg !5501
  store i64 %116, i64* %117, align 4, !dbg !5501
  %118 = bitcast %struct.SoftFloat* %arrayidx46 to i8*, !dbg !5501
  %119 = bitcast %struct.SoftFloat* %coerce58 to i8*, !dbg !5501
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 8, i32 4, i1 false), !dbg !5566
  %120 = load i32, i32* %m, align 4, !dbg !5568
  %idxprom59 = sext i32 %120 to i64, !dbg !5569
  %121 = load i32, i32* %e, align 4, !dbg !5570
  %idxprom60 = sext i32 %121 to i64, !dbg !5569
  %122 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5569
  %s_mapped = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %122, i32 0, i32 37, !dbg !5571
  %arrayidx61 = getelementptr inbounds [7 x [48 x i8]], [7 x [48 x i8]]* %s_mapped, i64 0, i64 %idxprom60, !dbg !5569
  %arrayidx62 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx61, i64 0, i64 %idxprom59, !dbg !5569
  %123 = load i8, i8* %arrayidx62, align 1, !dbg !5569
  %tobool = icmp ne i8 %123, 0, !dbg !5569
  br i1 %tobool, label %if.else114, label %if.then, !dbg !5572

if.then:                                          ; preds = %av_sqrt_sf.exit521
  %124 = load i32, i32* %delta, align 4, !dbg !5573
  %tobool63 = icmp ne i32 %124, 0, !dbg !5573
  br i1 %tobool63, label %if.then64, label %if.else, !dbg !5574

if.then64:                                        ; preds = %if.then
  %125 = load i32, i32* %m, align 4, !dbg !5575
  %idxprom65 = sext i32 %125 to i64, !dbg !5576
  %126 = load i32, i32* %e, align 4, !dbg !5577
  %idxprom66 = sext i32 %126 to i64, !dbg !5576
  %127 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5576
  %gain = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %127, i32 0, i32 41, !dbg !5578
  %arrayidx67 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain, i64 0, i64 %idxprom66, !dbg !5576
  %arrayidx68 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx67, i64 0, i64 %idxprom65, !dbg !5576
  %128 = load i32, i32* %m, align 4, !dbg !5579
  %idxprom70 = sext i32 %128 to i64, !dbg !5580
  %129 = load i32, i32* %e, align 4, !dbg !5581
  %idxprom71 = sext i32 %129 to i64, !dbg !5580
  %130 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5580
  %e_origmapped72 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %130, i32 0, i32 35, !dbg !5582
  %arrayidx73 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %e_origmapped72, i64 0, i64 %idxprom71, !dbg !5580
  %arrayidx74 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx73, i64 0, i64 %idxprom70, !dbg !5580
  %131 = load i32, i32* %m, align 4, !dbg !5583
  %idxprom77 = sext i32 %131 to i64, !dbg !5584
  %132 = load i32, i32* %e, align 4, !dbg !5585
  %idxprom78 = sext i32 %132 to i64, !dbg !5584
  %133 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5584
  %e_curr = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %133, i32 0, i32 38, !dbg !5586
  %arrayidx79 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %e_curr, i64 0, i64 %idxprom78, !dbg !5584
  %arrayidx80 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx79, i64 0, i64 %idxprom77, !dbg !5584
  %134 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_1 to i64*), align 4, !dbg !5587
  %135 = bitcast %struct.SoftFloat* %arrayidx80 to i64*, !dbg !5587
  %136 = load i64, i64* %135, align 8, !dbg !5587
  %call81 = call i64 @av_add_sf(i64 %134, i64 %136) #2, !dbg !5587
  %137 = bitcast %struct.SoftFloat* %agg.tmp76 to i64*, !dbg !5587
  store i64 %call81, i64* %137, align 4, !dbg !5587
  %138 = load i32, i32* %m, align 4, !dbg !5588
  %idxprom83 = sext i32 %138 to i64, !dbg !5589
  %139 = load i32, i32* %e, align 4, !dbg !5590
  %idxprom84 = sext i32 %139 to i64, !dbg !5589
  %140 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5589
  %q_mapped85 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %140, i32 0, i32 36, !dbg !5591
  %arrayidx86 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_mapped85, i64 0, i64 %idxprom84, !dbg !5589
  %arrayidx87 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx86, i64 0, i64 %idxprom83, !dbg !5589
  %141 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_1 to i64*), align 4, !dbg !5592
  %142 = bitcast %struct.SoftFloat* %arrayidx87 to i64*, !dbg !5592
  %143 = load i64, i64* %142, align 8, !dbg !5592
  %call88 = call i64 @av_add_sf(i64 %141, i64 %143) #2, !dbg !5592
  %144 = bitcast %struct.SoftFloat* %agg.tmp82 to i64*, !dbg !5592
  store i64 %call88, i64* %144, align 4, !dbg !5592
  %145 = bitcast %struct.SoftFloat* %agg.tmp76 to i64*, !dbg !5593
  %146 = load i64, i64* %145, align 4, !dbg !5593
  %147 = bitcast %struct.SoftFloat* %agg.tmp82 to i64*, !dbg !5593
  %148 = load i64, i64* %147, align 4, !dbg !5593
  %call89 = call i64 @av_mul_sf(i64 %146, i64 %148) #2, !dbg !5594
  %149 = bitcast %struct.SoftFloat* %agg.tmp75 to i64*, !dbg !5593
  store i64 %call89, i64* %149, align 4, !dbg !5593
  %150 = bitcast %struct.SoftFloat* %arrayidx74 to i64*, !dbg !5595
  %151 = load i64, i64* %150, align 8, !dbg !5595
  %152 = bitcast %struct.SoftFloat* %agg.tmp75 to i64*, !dbg !5595
  %153 = load i64, i64* %152, align 4, !dbg !5595
  %call90 = call i64 @av_div_sf(i64 %151, i64 %153) #2, !dbg !5595
  %154 = bitcast %struct.SoftFloat* %agg.tmp69 to i64*, !dbg !5595
  store i64 %call90, i64* %154, align 4, !dbg !5595
  %155 = bitcast %struct.SoftFloat* %agg.tmp69 to i64*, !dbg !5596
  %156 = load i64, i64* %155, align 4, !dbg !5596
  %157 = bitcast %struct.SoftFloat* %val.i523 to i64*, !dbg !5597
  store i64 %156, i64* %157, align 4, !dbg !5597
  %mant.i526 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 0, !dbg !5598
  %158 = load i32, i32* %mant.i526, align 4, !dbg !5598
  %cmp.i527 = icmp eq i32 %158, 0, !dbg !5599
  br i1 %cmp.i527, label %if.then.i529, label %if.else.i532, !dbg !5600

if.then.i529:                                     ; preds = %if.then64
  %exp.i528 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 1, !dbg !5601
  store i32 -149, i32* %exp.i528, align 4, !dbg !5602
  br label %av_sqrt_sf.exit582, !dbg !5603

if.else.i532:                                     ; preds = %if.then64
  %mant1.i530 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 0, !dbg !5604
  %159 = load i32, i32* %mant1.i530, align 4, !dbg !5604
  %cmp2.i531 = icmp slt i32 %159, 0, !dbg !5605
  br i1 %cmp2.i531, label %if.then3.i533, label %if.else4.i570, !dbg !5606

if.then3.i533:                                    ; preds = %if.else.i532
  call void @abort() #11, !dbg !5607
  unreachable, !dbg !5607

if.else4.i570:                                    ; preds = %if.else.i532
  %mant5.i534 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 0, !dbg !5608
  %160 = load i32, i32* %mant5.i534, align 4, !dbg !5608
  %sub.i535 = sub nsw i32 %160, 536870912, !dbg !5609
  %shr.i536 = ashr i32 %sub.i535, 20, !dbg !5610
  store i32 %shr.i536, i32* %tabIndex.i524, align 4, !dbg !5611
  %mant6.i537 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 0, !dbg !5612
  %161 = load i32, i32* %mant6.i537, align 4, !dbg !5612
  %and.i538 = and i32 %161, 1048575, !dbg !5613
  store i32 %and.i538, i32* %rem.i525, align 4, !dbg !5614
  %162 = load i32, i32* %tabIndex.i524, align 4, !dbg !5615
  %idxprom.i539 = sext i32 %162 to i64, !dbg !5616
  %arrayidx.i540 = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom.i539, !dbg !5616
  %163 = load i32, i32* %arrayidx.i540, align 4, !dbg !5616
  %conv.i541 = sext i32 %163 to i64, !dbg !5617
  %164 = load i32, i32* %rem.i525, align 4, !dbg !5618
  %sub7.i542 = sub nsw i32 1048576, %164, !dbg !5619
  %conv8.i543 = sext i32 %sub7.i542 to i64, !dbg !5620
  %mul.i544 = mul nsw i64 %conv.i541, %conv8.i543, !dbg !5621
  %165 = load i32, i32* %tabIndex.i524, align 4, !dbg !5622
  %add.i545 = add nsw i32 %165, 1, !dbg !5623
  %idxprom9.i546 = sext i32 %add.i545 to i64, !dbg !5624
  %arrayidx10.i547 = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom9.i546, !dbg !5624
  %166 = load i32, i32* %arrayidx10.i547, align 4, !dbg !5624
  %conv11.i548 = sext i32 %166 to i64, !dbg !5625
  %167 = load i32, i32* %rem.i525, align 4, !dbg !5626
  %conv12.i549 = sext i32 %167 to i64, !dbg !5626
  %mul13.i550 = mul nsw i64 %conv11.i548, %conv12.i549, !dbg !5627
  %add14.i551 = add nsw i64 %mul.i544, %mul13.i550, !dbg !5628
  %add15.i552 = add nsw i64 %add14.i551, 524288, !dbg !5629
  %shr16.i553 = ashr i64 %add15.i552, 20, !dbg !5630
  %conv17.i554 = trunc i64 %shr16.i553 to i32, !dbg !5631
  %mant18.i555 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 0, !dbg !5632
  store i32 %conv17.i554, i32* %mant18.i555, align 4, !dbg !5633
  %exp19.i556 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 1, !dbg !5634
  %168 = load i32, i32* %exp19.i556, align 4, !dbg !5634
  %and20.i557 = and i32 %168, 1, !dbg !5635
  %idxprom21.i558 = sext i32 %and20.i557 to i64, !dbg !5636
  %arrayidx22.i559 = getelementptr inbounds [2 x i32], [2 x i32]* @av_sqr_exp_multbl_sf, i64 0, i64 %idxprom21.i558, !dbg !5636
  %169 = load i32, i32* %arrayidx22.i559, align 4, !dbg !5636
  %conv23.i560 = sext i32 %169 to i64, !dbg !5637
  %mant24.i561 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 0, !dbg !5638
  %170 = load i32, i32* %mant24.i561, align 4, !dbg !5638
  %conv25.i562 = sext i32 %170 to i64, !dbg !5639
  %mul26.i563 = mul nsw i64 %conv23.i560, %conv25.i562, !dbg !5640
  %add27.i564 = add nsw i64 %mul26.i563, 268435456, !dbg !5641
  %shr28.i565 = ashr i64 %add27.i564, 29, !dbg !5642
  %conv29.i566 = trunc i64 %shr28.i565 to i32, !dbg !5643
  %mant30.i567 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 0, !dbg !5644
  store i32 %conv29.i566, i32* %mant30.i567, align 4, !dbg !5645
  %mant31.i568 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 0, !dbg !5646
  %171 = load i32, i32* %mant31.i568, align 4, !dbg !5646
  %cmp32.i569 = icmp slt i32 %171, 1073741824, !dbg !5647
  br i1 %cmp32.i569, label %if.then34.i573, label %if.else37.i576, !dbg !5648

if.then34.i573:                                   ; preds = %if.else4.i570
  %exp35.i571 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 1, !dbg !5649
  %172 = load i32, i32* %exp35.i571, align 4, !dbg !5650
  %sub36.i572 = sub nsw i32 %172, 2, !dbg !5650
  store i32 %sub36.i572, i32* %exp35.i571, align 4, !dbg !5650
  br label %if.end.i581, !dbg !5651

if.else37.i576:                                   ; preds = %if.else4.i570
  %mant38.i574 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 0, !dbg !5652
  %173 = load i32, i32* %mant38.i574, align 4, !dbg !5653
  %shr39.i575 = ashr i32 %173, 1, !dbg !5653
  store i32 %shr39.i575, i32* %mant38.i574, align 4, !dbg !5653
  br label %if.end.i581, !dbg !5597

if.end.i581:                                      ; preds = %if.else37.i576, %if.then34.i573
  %exp40.i577 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 1, !dbg !5654
  %174 = load i32, i32* %exp40.i577, align 4, !dbg !5654
  %shr41.i578 = ashr i32 %174, 1, !dbg !5655
  %add42.i579 = add nsw i32 %shr41.i578, 1, !dbg !5656
  %exp43.i580 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i523, i32 0, i32 1, !dbg !5657
  store i32 %add42.i579, i32* %exp43.i580, align 4, !dbg !5658
  br label %av_sqrt_sf.exit582, !dbg !5597

av_sqrt_sf.exit582:                               ; preds = %if.then.i529, %if.end.i581
  %175 = bitcast %struct.SoftFloat* %retval.i522 to i8*, !dbg !5659
  %176 = bitcast %struct.SoftFloat* %val.i523 to i8*, !dbg !5659
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %175, i8* %176, i64 8, i32 4, i1 false) #12, !dbg !5659
  %177 = bitcast %struct.SoftFloat* %retval.i522 to i64*, !dbg !5660
  %178 = load i64, i64* %177, align 4, !dbg !5660
  %179 = bitcast %struct.SoftFloat* %coerce92 to i64*, !dbg !5596
  store i64 %178, i64* %179, align 4, !dbg !5596
  %180 = bitcast %struct.SoftFloat* %arrayidx68 to i8*, !dbg !5596
  %181 = bitcast %struct.SoftFloat* %coerce92 to i8*, !dbg !5596
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %180, i8* %181, i64 8, i32 4, i1 false), !dbg !5661
  br label %if.end, !dbg !5663

if.else:                                          ; preds = %if.then
  %182 = load i32, i32* %m, align 4, !dbg !5664
  %idxprom93 = sext i32 %182 to i64, !dbg !5665
  %183 = load i32, i32* %e, align 4, !dbg !5666
  %idxprom94 = sext i32 %183 to i64, !dbg !5665
  %184 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5665
  %gain95 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %184, i32 0, i32 41, !dbg !5667
  %arrayidx96 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain95, i64 0, i64 %idxprom94, !dbg !5665
  %arrayidx97 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx96, i64 0, i64 %idxprom93, !dbg !5665
  %185 = load i32, i32* %m, align 4, !dbg !5668
  %idxprom99 = sext i32 %185 to i64, !dbg !5669
  %186 = load i32, i32* %e, align 4, !dbg !5670
  %idxprom100 = sext i32 %186 to i64, !dbg !5669
  %187 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5669
  %e_origmapped101 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %187, i32 0, i32 35, !dbg !5671
  %arrayidx102 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %e_origmapped101, i64 0, i64 %idxprom100, !dbg !5669
  %arrayidx103 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx102, i64 0, i64 %idxprom99, !dbg !5669
  %188 = load i32, i32* %m, align 4, !dbg !5672
  %idxprom105 = sext i32 %188 to i64, !dbg !5673
  %189 = load i32, i32* %e, align 4, !dbg !5674
  %idxprom106 = sext i32 %189 to i64, !dbg !5673
  %190 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5673
  %e_curr107 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %190, i32 0, i32 38, !dbg !5675
  %arrayidx108 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %e_curr107, i64 0, i64 %idxprom106, !dbg !5673
  %arrayidx109 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx108, i64 0, i64 %idxprom105, !dbg !5673
  %191 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_1 to i64*), align 4, !dbg !5676
  %192 = bitcast %struct.SoftFloat* %arrayidx109 to i64*, !dbg !5676
  %193 = load i64, i64* %192, align 8, !dbg !5676
  %call110 = call i64 @av_add_sf(i64 %191, i64 %193) #2, !dbg !5676
  %194 = bitcast %struct.SoftFloat* %agg.tmp104 to i64*, !dbg !5676
  store i64 %call110, i64* %194, align 4, !dbg !5676
  %195 = bitcast %struct.SoftFloat* %arrayidx103 to i64*, !dbg !5677
  %196 = load i64, i64* %195, align 8, !dbg !5677
  %197 = bitcast %struct.SoftFloat* %agg.tmp104 to i64*, !dbg !5677
  %198 = load i64, i64* %197, align 4, !dbg !5677
  %call111 = call i64 @av_div_sf(i64 %196, i64 %198) #2, !dbg !5677
  %199 = bitcast %struct.SoftFloat* %agg.tmp98 to i64*, !dbg !5677
  store i64 %call111, i64* %199, align 4, !dbg !5677
  %200 = bitcast %struct.SoftFloat* %agg.tmp98 to i64*, !dbg !5678
  %201 = load i64, i64* %200, align 4, !dbg !5678
  %202 = bitcast %struct.SoftFloat* %val.i584 to i64*, !dbg !5679
  store i64 %201, i64* %202, align 4, !dbg !5679
  %mant.i587 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 0, !dbg !5680
  %203 = load i32, i32* %mant.i587, align 4, !dbg !5680
  %cmp.i588 = icmp eq i32 %203, 0, !dbg !5681
  br i1 %cmp.i588, label %if.then.i590, label %if.else.i593, !dbg !5682

if.then.i590:                                     ; preds = %if.else
  %exp.i589 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 1, !dbg !5683
  store i32 -149, i32* %exp.i589, align 4, !dbg !5684
  br label %av_sqrt_sf.exit643, !dbg !5685

if.else.i593:                                     ; preds = %if.else
  %mant1.i591 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 0, !dbg !5686
  %204 = load i32, i32* %mant1.i591, align 4, !dbg !5686
  %cmp2.i592 = icmp slt i32 %204, 0, !dbg !5687
  br i1 %cmp2.i592, label %if.then3.i594, label %if.else4.i631, !dbg !5688

if.then3.i594:                                    ; preds = %if.else.i593
  call void @abort() #11, !dbg !5689
  unreachable, !dbg !5689

if.else4.i631:                                    ; preds = %if.else.i593
  %mant5.i595 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 0, !dbg !5690
  %205 = load i32, i32* %mant5.i595, align 4, !dbg !5690
  %sub.i596 = sub nsw i32 %205, 536870912, !dbg !5691
  %shr.i597 = ashr i32 %sub.i596, 20, !dbg !5692
  store i32 %shr.i597, i32* %tabIndex.i585, align 4, !dbg !5693
  %mant6.i598 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 0, !dbg !5694
  %206 = load i32, i32* %mant6.i598, align 4, !dbg !5694
  %and.i599 = and i32 %206, 1048575, !dbg !5695
  store i32 %and.i599, i32* %rem.i586, align 4, !dbg !5696
  %207 = load i32, i32* %tabIndex.i585, align 4, !dbg !5697
  %idxprom.i600 = sext i32 %207 to i64, !dbg !5698
  %arrayidx.i601 = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom.i600, !dbg !5698
  %208 = load i32, i32* %arrayidx.i601, align 4, !dbg !5698
  %conv.i602 = sext i32 %208 to i64, !dbg !5699
  %209 = load i32, i32* %rem.i586, align 4, !dbg !5700
  %sub7.i603 = sub nsw i32 1048576, %209, !dbg !5701
  %conv8.i604 = sext i32 %sub7.i603 to i64, !dbg !5702
  %mul.i605 = mul nsw i64 %conv.i602, %conv8.i604, !dbg !5703
  %210 = load i32, i32* %tabIndex.i585, align 4, !dbg !5704
  %add.i606 = add nsw i32 %210, 1, !dbg !5705
  %idxprom9.i607 = sext i32 %add.i606 to i64, !dbg !5706
  %arrayidx10.i608 = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom9.i607, !dbg !5706
  %211 = load i32, i32* %arrayidx10.i608, align 4, !dbg !5706
  %conv11.i609 = sext i32 %211 to i64, !dbg !5707
  %212 = load i32, i32* %rem.i586, align 4, !dbg !5708
  %conv12.i610 = sext i32 %212 to i64, !dbg !5708
  %mul13.i611 = mul nsw i64 %conv11.i609, %conv12.i610, !dbg !5709
  %add14.i612 = add nsw i64 %mul.i605, %mul13.i611, !dbg !5710
  %add15.i613 = add nsw i64 %add14.i612, 524288, !dbg !5711
  %shr16.i614 = ashr i64 %add15.i613, 20, !dbg !5712
  %conv17.i615 = trunc i64 %shr16.i614 to i32, !dbg !5713
  %mant18.i616 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 0, !dbg !5714
  store i32 %conv17.i615, i32* %mant18.i616, align 4, !dbg !5715
  %exp19.i617 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 1, !dbg !5716
  %213 = load i32, i32* %exp19.i617, align 4, !dbg !5716
  %and20.i618 = and i32 %213, 1, !dbg !5717
  %idxprom21.i619 = sext i32 %and20.i618 to i64, !dbg !5718
  %arrayidx22.i620 = getelementptr inbounds [2 x i32], [2 x i32]* @av_sqr_exp_multbl_sf, i64 0, i64 %idxprom21.i619, !dbg !5718
  %214 = load i32, i32* %arrayidx22.i620, align 4, !dbg !5718
  %conv23.i621 = sext i32 %214 to i64, !dbg !5719
  %mant24.i622 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 0, !dbg !5720
  %215 = load i32, i32* %mant24.i622, align 4, !dbg !5720
  %conv25.i623 = sext i32 %215 to i64, !dbg !5721
  %mul26.i624 = mul nsw i64 %conv23.i621, %conv25.i623, !dbg !5722
  %add27.i625 = add nsw i64 %mul26.i624, 268435456, !dbg !5723
  %shr28.i626 = ashr i64 %add27.i625, 29, !dbg !5724
  %conv29.i627 = trunc i64 %shr28.i626 to i32, !dbg !5725
  %mant30.i628 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 0, !dbg !5726
  store i32 %conv29.i627, i32* %mant30.i628, align 4, !dbg !5727
  %mant31.i629 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 0, !dbg !5728
  %216 = load i32, i32* %mant31.i629, align 4, !dbg !5728
  %cmp32.i630 = icmp slt i32 %216, 1073741824, !dbg !5729
  br i1 %cmp32.i630, label %if.then34.i634, label %if.else37.i637, !dbg !5730

if.then34.i634:                                   ; preds = %if.else4.i631
  %exp35.i632 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 1, !dbg !5731
  %217 = load i32, i32* %exp35.i632, align 4, !dbg !5732
  %sub36.i633 = sub nsw i32 %217, 2, !dbg !5732
  store i32 %sub36.i633, i32* %exp35.i632, align 4, !dbg !5732
  br label %if.end.i642, !dbg !5733

if.else37.i637:                                   ; preds = %if.else4.i631
  %mant38.i635 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 0, !dbg !5734
  %218 = load i32, i32* %mant38.i635, align 4, !dbg !5735
  %shr39.i636 = ashr i32 %218, 1, !dbg !5735
  store i32 %shr39.i636, i32* %mant38.i635, align 4, !dbg !5735
  br label %if.end.i642, !dbg !5679

if.end.i642:                                      ; preds = %if.else37.i637, %if.then34.i634
  %exp40.i638 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 1, !dbg !5736
  %219 = load i32, i32* %exp40.i638, align 4, !dbg !5736
  %shr41.i639 = ashr i32 %219, 1, !dbg !5737
  %add42.i640 = add nsw i32 %shr41.i639, 1, !dbg !5738
  %exp43.i641 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i584, i32 0, i32 1, !dbg !5739
  store i32 %add42.i640, i32* %exp43.i641, align 4, !dbg !5740
  br label %av_sqrt_sf.exit643, !dbg !5679

av_sqrt_sf.exit643:                               ; preds = %if.then.i590, %if.end.i642
  %220 = bitcast %struct.SoftFloat* %retval.i583 to i8*, !dbg !5741
  %221 = bitcast %struct.SoftFloat* %val.i584 to i8*, !dbg !5741
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %220, i8* %221, i64 8, i32 4, i1 false) #12, !dbg !5741
  %222 = bitcast %struct.SoftFloat* %retval.i583 to i64*, !dbg !5742
  %223 = load i64, i64* %222, align 4, !dbg !5742
  %224 = bitcast %struct.SoftFloat* %coerce113 to i64*, !dbg !5678
  store i64 %223, i64* %224, align 4, !dbg !5678
  %225 = bitcast %struct.SoftFloat* %arrayidx97 to i8*, !dbg !5678
  %226 = bitcast %struct.SoftFloat* %coerce113 to i8*, !dbg !5678
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %225, i8* %226, i64 8, i32 4, i1 false), !dbg !5743
  br label %if.end

if.end:                                           ; preds = %av_sqrt_sf.exit643, %av_sqrt_sf.exit582
  br label %if.end152, !dbg !5745

if.else114:                                       ; preds = %av_sqrt_sf.exit521
  %227 = load i32, i32* %m, align 4, !dbg !5746
  %idxprom115 = sext i32 %227 to i64, !dbg !5747
  %228 = load i32, i32* %e, align 4, !dbg !5748
  %idxprom116 = sext i32 %228 to i64, !dbg !5747
  %229 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5747
  %gain117 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %229, i32 0, i32 41, !dbg !5749
  %arrayidx118 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain117, i64 0, i64 %idxprom116, !dbg !5747
  %arrayidx119 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx118, i64 0, i64 %idxprom115, !dbg !5747
  %230 = load i32, i32* %m, align 4, !dbg !5750
  %idxprom122 = sext i32 %230 to i64, !dbg !5751
  %231 = load i32, i32* %e, align 4, !dbg !5752
  %idxprom123 = sext i32 %231 to i64, !dbg !5751
  %232 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5751
  %e_origmapped124 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %232, i32 0, i32 35, !dbg !5753
  %arrayidx125 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %e_origmapped124, i64 0, i64 %idxprom123, !dbg !5751
  %arrayidx126 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx125, i64 0, i64 %idxprom122, !dbg !5751
  %233 = load i32, i32* %m, align 4, !dbg !5754
  %idxprom127 = sext i32 %233 to i64, !dbg !5755
  %234 = load i32, i32* %e, align 4, !dbg !5756
  %idxprom128 = sext i32 %234 to i64, !dbg !5755
  %235 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5755
  %q_mapped129 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %235, i32 0, i32 36, !dbg !5757
  %arrayidx130 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_mapped129, i64 0, i64 %idxprom128, !dbg !5755
  %arrayidx131 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx130, i64 0, i64 %idxprom127, !dbg !5755
  %236 = bitcast %struct.SoftFloat* %arrayidx126 to i64*, !dbg !5758
  %237 = load i64, i64* %236, align 8, !dbg !5758
  %238 = bitcast %struct.SoftFloat* %arrayidx131 to i64*, !dbg !5758
  %239 = load i64, i64* %238, align 8, !dbg !5758
  %call132 = call i64 @av_mul_sf(i64 %237, i64 %239) #2, !dbg !5758
  %240 = bitcast %struct.SoftFloat* %agg.tmp121 to i64*, !dbg !5758
  store i64 %call132, i64* %240, align 4, !dbg !5758
  %241 = load i32, i32* %m, align 4, !dbg !5759
  %idxprom135 = sext i32 %241 to i64, !dbg !5760
  %242 = load i32, i32* %e, align 4, !dbg !5761
  %idxprom136 = sext i32 %242 to i64, !dbg !5760
  %243 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5760
  %e_curr137 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %243, i32 0, i32 38, !dbg !5762
  %arrayidx138 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %e_curr137, i64 0, i64 %idxprom136, !dbg !5760
  %arrayidx139 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx138, i64 0, i64 %idxprom135, !dbg !5760
  %244 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_1 to i64*), align 4, !dbg !5763
  %245 = bitcast %struct.SoftFloat* %arrayidx139 to i64*, !dbg !5763
  %246 = load i64, i64* %245, align 8, !dbg !5763
  %call140 = call i64 @av_add_sf(i64 %244, i64 %246) #2, !dbg !5763
  %247 = bitcast %struct.SoftFloat* %agg.tmp134 to i64*, !dbg !5763
  store i64 %call140, i64* %247, align 4, !dbg !5763
  %248 = load i32, i32* %m, align 4, !dbg !5764
  %idxprom142 = sext i32 %248 to i64, !dbg !5765
  %249 = load i32, i32* %e, align 4, !dbg !5766
  %idxprom143 = sext i32 %249 to i64, !dbg !5765
  %250 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5765
  %q_mapped144 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %250, i32 0, i32 36, !dbg !5767
  %arrayidx145 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_mapped144, i64 0, i64 %idxprom143, !dbg !5765
  %arrayidx146 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx145, i64 0, i64 %idxprom142, !dbg !5765
  %251 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_1 to i64*), align 4, !dbg !5768
  %252 = bitcast %struct.SoftFloat* %arrayidx146 to i64*, !dbg !5768
  %253 = load i64, i64* %252, align 8, !dbg !5768
  %call147 = call i64 @av_add_sf(i64 %251, i64 %253) #2, !dbg !5768
  %254 = bitcast %struct.SoftFloat* %agg.tmp141 to i64*, !dbg !5768
  store i64 %call147, i64* %254, align 4, !dbg !5768
  %255 = bitcast %struct.SoftFloat* %agg.tmp134 to i64*, !dbg !5769
  %256 = load i64, i64* %255, align 4, !dbg !5769
  %257 = bitcast %struct.SoftFloat* %agg.tmp141 to i64*, !dbg !5769
  %258 = load i64, i64* %257, align 4, !dbg !5769
  %call148 = call i64 @av_mul_sf(i64 %256, i64 %258) #2, !dbg !5769
  %259 = bitcast %struct.SoftFloat* %agg.tmp133 to i64*, !dbg !5769
  store i64 %call148, i64* %259, align 4, !dbg !5769
  %260 = bitcast %struct.SoftFloat* %agg.tmp121 to i64*, !dbg !5770
  %261 = load i64, i64* %260, align 4, !dbg !5770
  %262 = bitcast %struct.SoftFloat* %agg.tmp133 to i64*, !dbg !5770
  %263 = load i64, i64* %262, align 4, !dbg !5770
  %call149 = call i64 @av_div_sf(i64 %261, i64 %263) #2, !dbg !5770
  %264 = bitcast %struct.SoftFloat* %agg.tmp120 to i64*, !dbg !5770
  store i64 %call149, i64* %264, align 4, !dbg !5770
  %265 = bitcast %struct.SoftFloat* %agg.tmp120 to i64*, !dbg !5771
  %266 = load i64, i64* %265, align 4, !dbg !5771
  %267 = bitcast %struct.SoftFloat* %val.i645 to i64*, !dbg !5771
  store i64 %266, i64* %267, align 4, !dbg !5771
  %mant.i648 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 0, !dbg !5772
  %268 = load i32, i32* %mant.i648, align 4, !dbg !5772
  %cmp.i649 = icmp eq i32 %268, 0, !dbg !5773
  br i1 %cmp.i649, label %if.then.i651, label %if.else.i654, !dbg !5774

if.then.i651:                                     ; preds = %if.else114
  %exp.i650 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 1, !dbg !5775
  store i32 -149, i32* %exp.i650, align 4, !dbg !5776
  br label %av_sqrt_sf.exit704, !dbg !5777

if.else.i654:                                     ; preds = %if.else114
  %mant1.i652 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 0, !dbg !5778
  %269 = load i32, i32* %mant1.i652, align 4, !dbg !5778
  %cmp2.i653 = icmp slt i32 %269, 0, !dbg !5779
  br i1 %cmp2.i653, label %if.then3.i655, label %if.else4.i692, !dbg !5780

if.then3.i655:                                    ; preds = %if.else.i654
  call void @abort() #11, !dbg !5781
  unreachable, !dbg !5781

if.else4.i692:                                    ; preds = %if.else.i654
  %mant5.i656 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 0, !dbg !5782
  %270 = load i32, i32* %mant5.i656, align 4, !dbg !5782
  %sub.i657 = sub nsw i32 %270, 536870912, !dbg !5783
  %shr.i658 = ashr i32 %sub.i657, 20, !dbg !5784
  store i32 %shr.i658, i32* %tabIndex.i646, align 4, !dbg !5785
  %mant6.i659 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 0, !dbg !5786
  %271 = load i32, i32* %mant6.i659, align 4, !dbg !5786
  %and.i660 = and i32 %271, 1048575, !dbg !5787
  store i32 %and.i660, i32* %rem.i647, align 4, !dbg !5788
  %272 = load i32, i32* %tabIndex.i646, align 4, !dbg !5789
  %idxprom.i661 = sext i32 %272 to i64, !dbg !5790
  %arrayidx.i662 = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom.i661, !dbg !5790
  %273 = load i32, i32* %arrayidx.i662, align 4, !dbg !5790
  %conv.i663 = sext i32 %273 to i64, !dbg !5791
  %274 = load i32, i32* %rem.i647, align 4, !dbg !5792
  %sub7.i664 = sub nsw i32 1048576, %274, !dbg !5793
  %conv8.i665 = sext i32 %sub7.i664 to i64, !dbg !5794
  %mul.i666 = mul nsw i64 %conv.i663, %conv8.i665, !dbg !5795
  %275 = load i32, i32* %tabIndex.i646, align 4, !dbg !5796
  %add.i667 = add nsw i32 %275, 1, !dbg !5797
  %idxprom9.i668 = sext i32 %add.i667 to i64, !dbg !5798
  %arrayidx10.i669 = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom9.i668, !dbg !5798
  %276 = load i32, i32* %arrayidx10.i669, align 4, !dbg !5798
  %conv11.i670 = sext i32 %276 to i64, !dbg !5799
  %277 = load i32, i32* %rem.i647, align 4, !dbg !5800
  %conv12.i671 = sext i32 %277 to i64, !dbg !5800
  %mul13.i672 = mul nsw i64 %conv11.i670, %conv12.i671, !dbg !5801
  %add14.i673 = add nsw i64 %mul.i666, %mul13.i672, !dbg !5802
  %add15.i674 = add nsw i64 %add14.i673, 524288, !dbg !5803
  %shr16.i675 = ashr i64 %add15.i674, 20, !dbg !5804
  %conv17.i676 = trunc i64 %shr16.i675 to i32, !dbg !5805
  %mant18.i677 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 0, !dbg !5806
  store i32 %conv17.i676, i32* %mant18.i677, align 4, !dbg !5807
  %exp19.i678 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 1, !dbg !5808
  %278 = load i32, i32* %exp19.i678, align 4, !dbg !5808
  %and20.i679 = and i32 %278, 1, !dbg !5809
  %idxprom21.i680 = sext i32 %and20.i679 to i64, !dbg !5810
  %arrayidx22.i681 = getelementptr inbounds [2 x i32], [2 x i32]* @av_sqr_exp_multbl_sf, i64 0, i64 %idxprom21.i680, !dbg !5810
  %279 = load i32, i32* %arrayidx22.i681, align 4, !dbg !5810
  %conv23.i682 = sext i32 %279 to i64, !dbg !5811
  %mant24.i683 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 0, !dbg !5812
  %280 = load i32, i32* %mant24.i683, align 4, !dbg !5812
  %conv25.i684 = sext i32 %280 to i64, !dbg !5813
  %mul26.i685 = mul nsw i64 %conv23.i682, %conv25.i684, !dbg !5814
  %add27.i686 = add nsw i64 %mul26.i685, 268435456, !dbg !5815
  %shr28.i687 = ashr i64 %add27.i686, 29, !dbg !5816
  %conv29.i688 = trunc i64 %shr28.i687 to i32, !dbg !5817
  %mant30.i689 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 0, !dbg !5818
  store i32 %conv29.i688, i32* %mant30.i689, align 4, !dbg !5819
  %mant31.i690 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 0, !dbg !5820
  %281 = load i32, i32* %mant31.i690, align 4, !dbg !5820
  %cmp32.i691 = icmp slt i32 %281, 1073741824, !dbg !5821
  br i1 %cmp32.i691, label %if.then34.i695, label %if.else37.i698, !dbg !5822

if.then34.i695:                                   ; preds = %if.else4.i692
  %exp35.i693 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 1, !dbg !5823
  %282 = load i32, i32* %exp35.i693, align 4, !dbg !5824
  %sub36.i694 = sub nsw i32 %282, 2, !dbg !5824
  store i32 %sub36.i694, i32* %exp35.i693, align 4, !dbg !5824
  br label %if.end.i703, !dbg !5825

if.else37.i698:                                   ; preds = %if.else4.i692
  %mant38.i696 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 0, !dbg !5826
  %283 = load i32, i32* %mant38.i696, align 4, !dbg !5827
  %shr39.i697 = ashr i32 %283, 1, !dbg !5827
  store i32 %shr39.i697, i32* %mant38.i696, align 4, !dbg !5827
  br label %if.end.i703, !dbg !5771

if.end.i703:                                      ; preds = %if.else37.i698, %if.then34.i695
  %exp40.i699 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 1, !dbg !5828
  %284 = load i32, i32* %exp40.i699, align 4, !dbg !5828
  %shr41.i700 = ashr i32 %284, 1, !dbg !5829
  %add42.i701 = add nsw i32 %shr41.i700, 1, !dbg !5830
  %exp43.i702 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i645, i32 0, i32 1, !dbg !5831
  store i32 %add42.i701, i32* %exp43.i702, align 4, !dbg !5832
  br label %av_sqrt_sf.exit704, !dbg !5771

av_sqrt_sf.exit704:                               ; preds = %if.then.i651, %if.end.i703
  %285 = bitcast %struct.SoftFloat* %retval.i644 to i8*, !dbg !5833
  %286 = bitcast %struct.SoftFloat* %val.i645 to i8*, !dbg !5833
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %285, i8* %286, i64 8, i32 4, i1 false) #12, !dbg !5833
  %287 = bitcast %struct.SoftFloat* %retval.i644 to i64*, !dbg !5834
  %288 = load i64, i64* %287, align 4, !dbg !5834
  %289 = bitcast %struct.SoftFloat* %coerce151 to i64*, !dbg !5771
  store i64 %288, i64* %289, align 4, !dbg !5771
  %290 = bitcast %struct.SoftFloat* %arrayidx119 to i8*, !dbg !5771
  %291 = bitcast %struct.SoftFloat* %coerce151 to i8*, !dbg !5771
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %290, i8* %291, i64 8, i32 4, i1 false), !dbg !5835
  br label %if.end152

if.end152:                                        ; preds = %av_sqrt_sf.exit704, %if.end
  %292 = load i32, i32* %m, align 4, !dbg !5837
  %idxprom153 = sext i32 %292 to i64, !dbg !5838
  %293 = load i32, i32* %e, align 4, !dbg !5839
  %idxprom154 = sext i32 %293 to i64, !dbg !5838
  %294 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5838
  %gain155 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %294, i32 0, i32 41, !dbg !5840
  %arrayidx156 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain155, i64 0, i64 %idxprom154, !dbg !5838
  %arrayidx157 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx156, i64 0, i64 %idxprom153, !dbg !5838
  %295 = load i32, i32* %m, align 4, !dbg !5841
  %idxprom158 = sext i32 %295 to i64, !dbg !5842
  %296 = load i32, i32* %e, align 4, !dbg !5843
  %idxprom159 = sext i32 %296 to i64, !dbg !5842
  %297 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5842
  %gain160 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %297, i32 0, i32 41, !dbg !5844
  %arrayidx161 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain160, i64 0, i64 %idxprom159, !dbg !5842
  %arrayidx162 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx161, i64 0, i64 %idxprom158, !dbg !5842
  %298 = bitcast %struct.SoftFloat* %arrayidx162 to i64*, !dbg !5845
  %299 = load i64, i64* %298, align 8, !dbg !5845
  %300 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_MIN to i64*), align 4, !dbg !5845
  %call163 = call i64 @av_add_sf(i64 %299, i64 %300) #2, !dbg !5845
  %301 = bitcast %struct.SoftFloat* %coerce164 to i64*, !dbg !5845
  store i64 %call163, i64* %301, align 4, !dbg !5845
  %302 = bitcast %struct.SoftFloat* %arrayidx157 to i8*, !dbg !5845
  %303 = bitcast %struct.SoftFloat* %coerce164 to i8*, !dbg !5845
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %302, i8* %303, i64 8, i32 4, i1 false), !dbg !5846
  br label %for.inc, !dbg !5847

for.inc:                                          ; preds = %if.end152
  %304 = load i32, i32* %m, align 4, !dbg !5848
  %inc = add nsw i32 %304, 1, !dbg !5848
  store i32 %inc, i32* %m, align 4, !dbg !5848
  br label %for.cond11, !dbg !5850, !llvm.loop !5851

for.end:                                          ; preds = %for.cond11
  %305 = load i32, i32* %k, align 4, !dbg !5853
  %idxprom165 = sext i32 %305 to i64, !dbg !5855
  %306 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5855
  %f_tablelim166 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %306, i32 0, i32 26, !dbg !5856
  %arrayidx167 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim166, i64 0, i64 %idxprom165, !dbg !5855
  %307 = load i16, i16* %arrayidx167, align 2, !dbg !5855
  %conv168 = zext i16 %307 to i32, !dbg !5855
  %308 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5857
  %kx169 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %308, i32 0, i32 13, !dbg !5858
  %arrayidx170 = getelementptr inbounds [2 x i32], [2 x i32]* %kx169, i64 0, i64 1, !dbg !5857
  %309 = load i32, i32* %arrayidx170, align 4, !dbg !5857
  %sub171 = sub nsw i32 %conv168, %309, !dbg !5859
  store i32 %sub171, i32* %m, align 4, !dbg !5860
  br label %for.cond172, !dbg !5861

for.cond172:                                      ; preds = %for.inc202, %for.end
  %310 = load i32, i32* %m, align 4, !dbg !5862
  %311 = load i32, i32* %k, align 4, !dbg !5865
  %add173 = add nsw i32 %311, 1, !dbg !5866
  %idxprom174 = sext i32 %add173 to i64, !dbg !5867
  %312 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5867
  %f_tablelim175 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %312, i32 0, i32 26, !dbg !5868
  %arrayidx176 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim175, i64 0, i64 %idxprom174, !dbg !5867
  %313 = load i16, i16* %arrayidx176, align 2, !dbg !5867
  %conv177 = zext i16 %313 to i32, !dbg !5867
  %314 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5869
  %kx178 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %314, i32 0, i32 13, !dbg !5870
  %arrayidx179 = getelementptr inbounds [2 x i32], [2 x i32]* %kx178, i64 0, i64 1, !dbg !5869
  %315 = load i32, i32* %arrayidx179, align 4, !dbg !5869
  %sub180 = sub nsw i32 %conv177, %315, !dbg !5871
  %cmp181 = icmp slt i32 %310, %sub180, !dbg !5872
  br i1 %cmp181, label %for.body183, label %for.end204, !dbg !5873

for.body183:                                      ; preds = %for.cond172
  %arrayidx184 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 0, !dbg !5874
  %arrayidx185 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 0, !dbg !5876
  %316 = load i32, i32* %m, align 4, !dbg !5877
  %idxprom186 = sext i32 %316 to i64, !dbg !5878
  %317 = load i32, i32* %e, align 4, !dbg !5879
  %idxprom187 = sext i32 %317 to i64, !dbg !5878
  %318 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5878
  %e_origmapped188 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %318, i32 0, i32 35, !dbg !5880
  %arrayidx189 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %e_origmapped188, i64 0, i64 %idxprom187, !dbg !5878
  %arrayidx190 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx189, i64 0, i64 %idxprom186, !dbg !5878
  %319 = bitcast %struct.SoftFloat* %arrayidx185 to i64*, !dbg !5881
  %320 = load i64, i64* %319, align 16, !dbg !5881
  %321 = bitcast %struct.SoftFloat* %arrayidx190 to i64*, !dbg !5881
  %322 = load i64, i64* %321, align 8, !dbg !5881
  %call191 = call i64 @av_add_sf(i64 %320, i64 %322) #2, !dbg !5881
  %323 = bitcast %struct.SoftFloat* %coerce192 to i64*, !dbg !5881
  store i64 %call191, i64* %323, align 4, !dbg !5881
  %324 = bitcast %struct.SoftFloat* %arrayidx184 to i8*, !dbg !5881
  %325 = bitcast %struct.SoftFloat* %coerce192 to i8*, !dbg !5881
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %324, i8* %325, i64 8, i32 4, i1 false), !dbg !5882
  %arrayidx193 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 1, !dbg !5884
  %arrayidx194 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 1, !dbg !5885
  %326 = load i32, i32* %m, align 4, !dbg !5886
  %idxprom195 = sext i32 %326 to i64, !dbg !5887
  %327 = load i32, i32* %e, align 4, !dbg !5888
  %idxprom196 = sext i32 %327 to i64, !dbg !5887
  %328 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5887
  %e_curr197 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %328, i32 0, i32 38, !dbg !5889
  %arrayidx198 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %e_curr197, i64 0, i64 %idxprom196, !dbg !5887
  %arrayidx199 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx198, i64 0, i64 %idxprom195, !dbg !5887
  %329 = bitcast %struct.SoftFloat* %arrayidx194 to i64*, !dbg !5890
  %330 = load i64, i64* %329, align 8, !dbg !5890
  %331 = bitcast %struct.SoftFloat* %arrayidx199 to i64*, !dbg !5890
  %332 = load i64, i64* %331, align 8, !dbg !5890
  %call200 = call i64 @av_add_sf(i64 %330, i64 %332) #2, !dbg !5890
  %333 = bitcast %struct.SoftFloat* %coerce201 to i64*, !dbg !5890
  store i64 %call200, i64* %333, align 4, !dbg !5890
  %334 = bitcast %struct.SoftFloat* %arrayidx193 to i8*, !dbg !5890
  %335 = bitcast %struct.SoftFloat* %coerce201 to i8*, !dbg !5890
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %334, i8* %335, i64 8, i32 4, i1 false), !dbg !5891
  br label %for.inc202, !dbg !5892

for.inc202:                                       ; preds = %for.body183
  %336 = load i32, i32* %m, align 4, !dbg !5893
  %inc203 = add nsw i32 %336, 1, !dbg !5893
  store i32 %inc203, i32* %m, align 4, !dbg !5893
  br label %for.cond172, !dbg !5895, !llvm.loop !5896

for.end204:                                       ; preds = %for.cond172
  %337 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5898
  %bs_limiter_gains = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %337, i32 0, i32 8, !dbg !5899
  %338 = load i32, i32* %bs_limiter_gains, align 4, !dbg !5899
  %idxprom205 = zext i32 %338 to i64, !dbg !5900
  %arrayidx206 = getelementptr inbounds [4 x %struct.SoftFloat], [4 x %struct.SoftFloat]* @sbr_gain_calc.limgain, i64 0, i64 %idxprom205, !dbg !5900
  %arrayidx210 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 0, !dbg !5901
  %339 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_EPSILON to i64*), align 4, !dbg !5902
  %340 = bitcast %struct.SoftFloat* %arrayidx210 to i64*, !dbg !5902
  %341 = load i64, i64* %340, align 16, !dbg !5902
  %call211 = call i64 @av_add_sf(i64 %339, i64 %341) #2, !dbg !5902
  %342 = bitcast %struct.SoftFloat* %agg.tmp209 to i64*, !dbg !5902
  store i64 %call211, i64* %342, align 4, !dbg !5902
  %arrayidx213 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 1, !dbg !5903
  %343 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_EPSILON to i64*), align 4, !dbg !5904
  %344 = bitcast %struct.SoftFloat* %arrayidx213 to i64*, !dbg !5904
  %345 = load i64, i64* %344, align 8, !dbg !5904
  %call214 = call i64 @av_add_sf(i64 %343, i64 %345) #2, !dbg !5904
  %346 = bitcast %struct.SoftFloat* %agg.tmp212 to i64*, !dbg !5904
  store i64 %call214, i64* %346, align 4, !dbg !5904
  %347 = bitcast %struct.SoftFloat* %agg.tmp209 to i64*, !dbg !5905
  %348 = load i64, i64* %347, align 4, !dbg !5905
  %349 = bitcast %struct.SoftFloat* %agg.tmp212 to i64*, !dbg !5905
  %350 = load i64, i64* %349, align 4, !dbg !5905
  %call215 = call i64 @av_div_sf(i64 %348, i64 %350) #2, !dbg !5905
  %351 = bitcast %struct.SoftFloat* %agg.tmp208 to i64*, !dbg !5905
  store i64 %call215, i64* %351, align 4, !dbg !5905
  %352 = bitcast %struct.SoftFloat* %agg.tmp208 to i64*, !dbg !5906
  %353 = load i64, i64* %352, align 4, !dbg !5906
  %354 = bitcast %struct.SoftFloat* %val.i706 to i64*, !dbg !5906
  store i64 %353, i64* %354, align 4, !dbg !5906
  %mant.i709 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 0, !dbg !5907
  %355 = load i32, i32* %mant.i709, align 4, !dbg !5907
  %cmp.i710 = icmp eq i32 %355, 0, !dbg !5908
  br i1 %cmp.i710, label %if.then.i712, label %if.else.i715, !dbg !5909

if.then.i712:                                     ; preds = %for.end204
  %exp.i711 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 1, !dbg !5910
  store i32 -149, i32* %exp.i711, align 4, !dbg !5911
  br label %av_sqrt_sf.exit765, !dbg !5912

if.else.i715:                                     ; preds = %for.end204
  %mant1.i713 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 0, !dbg !5913
  %356 = load i32, i32* %mant1.i713, align 4, !dbg !5913
  %cmp2.i714 = icmp slt i32 %356, 0, !dbg !5914
  br i1 %cmp2.i714, label %if.then3.i716, label %if.else4.i753, !dbg !5915

if.then3.i716:                                    ; preds = %if.else.i715
  call void @abort() #11, !dbg !5916
  unreachable, !dbg !5916

if.else4.i753:                                    ; preds = %if.else.i715
  %mant5.i717 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 0, !dbg !5917
  %357 = load i32, i32* %mant5.i717, align 4, !dbg !5917
  %sub.i718 = sub nsw i32 %357, 536870912, !dbg !5918
  %shr.i719 = ashr i32 %sub.i718, 20, !dbg !5919
  store i32 %shr.i719, i32* %tabIndex.i707, align 4, !dbg !5920
  %mant6.i720 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 0, !dbg !5921
  %358 = load i32, i32* %mant6.i720, align 4, !dbg !5921
  %and.i721 = and i32 %358, 1048575, !dbg !5922
  store i32 %and.i721, i32* %rem.i708, align 4, !dbg !5923
  %359 = load i32, i32* %tabIndex.i707, align 4, !dbg !5924
  %idxprom.i722 = sext i32 %359 to i64, !dbg !5925
  %arrayidx.i723 = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom.i722, !dbg !5925
  %360 = load i32, i32* %arrayidx.i723, align 4, !dbg !5925
  %conv.i724 = sext i32 %360 to i64, !dbg !5926
  %361 = load i32, i32* %rem.i708, align 4, !dbg !5927
  %sub7.i725 = sub nsw i32 1048576, %361, !dbg !5928
  %conv8.i726 = sext i32 %sub7.i725 to i64, !dbg !5929
  %mul.i727 = mul nsw i64 %conv.i724, %conv8.i726, !dbg !5930
  %362 = load i32, i32* %tabIndex.i707, align 4, !dbg !5931
  %add.i728 = add nsw i32 %362, 1, !dbg !5932
  %idxprom9.i729 = sext i32 %add.i728 to i64, !dbg !5933
  %arrayidx10.i730 = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom9.i729, !dbg !5933
  %363 = load i32, i32* %arrayidx10.i730, align 4, !dbg !5933
  %conv11.i731 = sext i32 %363 to i64, !dbg !5934
  %364 = load i32, i32* %rem.i708, align 4, !dbg !5935
  %conv12.i732 = sext i32 %364 to i64, !dbg !5935
  %mul13.i733 = mul nsw i64 %conv11.i731, %conv12.i732, !dbg !5936
  %add14.i734 = add nsw i64 %mul.i727, %mul13.i733, !dbg !5937
  %add15.i735 = add nsw i64 %add14.i734, 524288, !dbg !5938
  %shr16.i736 = ashr i64 %add15.i735, 20, !dbg !5939
  %conv17.i737 = trunc i64 %shr16.i736 to i32, !dbg !5940
  %mant18.i738 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 0, !dbg !5941
  store i32 %conv17.i737, i32* %mant18.i738, align 4, !dbg !5942
  %exp19.i739 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 1, !dbg !5943
  %365 = load i32, i32* %exp19.i739, align 4, !dbg !5943
  %and20.i740 = and i32 %365, 1, !dbg !5944
  %idxprom21.i741 = sext i32 %and20.i740 to i64, !dbg !5945
  %arrayidx22.i742 = getelementptr inbounds [2 x i32], [2 x i32]* @av_sqr_exp_multbl_sf, i64 0, i64 %idxprom21.i741, !dbg !5945
  %366 = load i32, i32* %arrayidx22.i742, align 4, !dbg !5945
  %conv23.i743 = sext i32 %366 to i64, !dbg !5946
  %mant24.i744 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 0, !dbg !5947
  %367 = load i32, i32* %mant24.i744, align 4, !dbg !5947
  %conv25.i745 = sext i32 %367 to i64, !dbg !5948
  %mul26.i746 = mul nsw i64 %conv23.i743, %conv25.i745, !dbg !5949
  %add27.i747 = add nsw i64 %mul26.i746, 268435456, !dbg !5950
  %shr28.i748 = ashr i64 %add27.i747, 29, !dbg !5951
  %conv29.i749 = trunc i64 %shr28.i748 to i32, !dbg !5952
  %mant30.i750 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 0, !dbg !5953
  store i32 %conv29.i749, i32* %mant30.i750, align 4, !dbg !5954
  %mant31.i751 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 0, !dbg !5955
  %368 = load i32, i32* %mant31.i751, align 4, !dbg !5955
  %cmp32.i752 = icmp slt i32 %368, 1073741824, !dbg !5956
  br i1 %cmp32.i752, label %if.then34.i756, label %if.else37.i759, !dbg !5957

if.then34.i756:                                   ; preds = %if.else4.i753
  %exp35.i754 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 1, !dbg !5958
  %369 = load i32, i32* %exp35.i754, align 4, !dbg !5959
  %sub36.i755 = sub nsw i32 %369, 2, !dbg !5959
  store i32 %sub36.i755, i32* %exp35.i754, align 4, !dbg !5959
  br label %if.end.i764, !dbg !5960

if.else37.i759:                                   ; preds = %if.else4.i753
  %mant38.i757 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 0, !dbg !5961
  %370 = load i32, i32* %mant38.i757, align 4, !dbg !5962
  %shr39.i758 = ashr i32 %370, 1, !dbg !5962
  store i32 %shr39.i758, i32* %mant38.i757, align 4, !dbg !5962
  br label %if.end.i764, !dbg !5906

if.end.i764:                                      ; preds = %if.else37.i759, %if.then34.i756
  %exp40.i760 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 1, !dbg !5963
  %371 = load i32, i32* %exp40.i760, align 4, !dbg !5963
  %shr41.i761 = ashr i32 %371, 1, !dbg !5964
  %add42.i762 = add nsw i32 %shr41.i761, 1, !dbg !5965
  %exp43.i763 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i706, i32 0, i32 1, !dbg !5966
  store i32 %add42.i762, i32* %exp43.i763, align 4, !dbg !5967
  br label %av_sqrt_sf.exit765, !dbg !5906

av_sqrt_sf.exit765:                               ; preds = %if.then.i712, %if.end.i764
  %372 = bitcast %struct.SoftFloat* %retval.i705 to i8*, !dbg !5968
  %373 = bitcast %struct.SoftFloat* %val.i706 to i8*, !dbg !5968
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %372, i8* %373, i64 8, i32 4, i1 false) #12, !dbg !5968
  %374 = bitcast %struct.SoftFloat* %retval.i705 to i64*, !dbg !5969
  %375 = load i64, i64* %374, align 4, !dbg !5969
  %376 = bitcast %struct.SoftFloat* %agg.tmp207 to i64*, !dbg !5906
  store i64 %375, i64* %376, align 4, !dbg !5906
  %377 = bitcast %struct.SoftFloat* %arrayidx206 to i64*, !dbg !5970
  %378 = load i64, i64* %377, align 8, !dbg !5970
  %379 = bitcast %struct.SoftFloat* %agg.tmp207 to i64*, !dbg !5970
  %380 = load i64, i64* %379, align 4, !dbg !5970
  %call217 = call i64 @av_mul_sf(i64 %378, i64 %380) #2, !dbg !5970
  %381 = bitcast %struct.SoftFloat* %coerce218 to i64*, !dbg !5970
  store i64 %call217, i64* %381, align 4, !dbg !5970
  %382 = bitcast %struct.SoftFloat* %gain_max to i8*, !dbg !5970
  %383 = bitcast %struct.SoftFloat* %coerce218 to i8*, !dbg !5970
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %382, i8* %383, i64 8, i32 4, i1 false), !dbg !5971
  %384 = bitcast %struct.SoftFloat* %gain_max to i64*, !dbg !5972
  %385 = load i64, i64* %384, align 4, !dbg !5972
  %386 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_100000 to i64*), align 4, !dbg !5972
  %call219 = call i32 @av_gt_sf(i64 %385, i64 %386) #2, !dbg !5972
  %tobool220 = icmp ne i32 %call219, 0, !dbg !5972
  br i1 %tobool220, label %if.then221, label %if.end222, !dbg !5974

if.then221:                                       ; preds = %av_sqrt_sf.exit765
  %387 = bitcast %struct.SoftFloat* %gain_max to i8*, !dbg !5975
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %387, i8* bitcast (%struct.SoftFloat* @FLOAT_100000 to i8*), i64 8, i32 4, i1 false), !dbg !5975
  br label %if.end222, !dbg !5976

if.end222:                                        ; preds = %if.then221, %av_sqrt_sf.exit765
  %388 = load i32, i32* %k, align 4, !dbg !5977
  %idxprom223 = sext i32 %388 to i64, !dbg !5979
  %389 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5979
  %f_tablelim224 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %389, i32 0, i32 26, !dbg !5980
  %arrayidx225 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim224, i64 0, i64 %idxprom223, !dbg !5979
  %390 = load i16, i16* %arrayidx225, align 2, !dbg !5979
  %conv226 = zext i16 %390 to i32, !dbg !5979
  %391 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5981
  %kx227 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %391, i32 0, i32 13, !dbg !5982
  %arrayidx228 = getelementptr inbounds [2 x i32], [2 x i32]* %kx227, i64 0, i64 1, !dbg !5981
  %392 = load i32, i32* %arrayidx228, align 4, !dbg !5981
  %sub229 = sub nsw i32 %conv226, %392, !dbg !5983
  store i32 %sub229, i32* %m, align 4, !dbg !5984
  br label %for.cond230, !dbg !5985

for.cond230:                                      ; preds = %for.inc283, %if.end222
  %393 = load i32, i32* %m, align 4, !dbg !5986
  %394 = load i32, i32* %k, align 4, !dbg !5989
  %add231 = add nsw i32 %394, 1, !dbg !5990
  %idxprom232 = sext i32 %add231 to i64, !dbg !5991
  %395 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5991
  %f_tablelim233 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %395, i32 0, i32 26, !dbg !5992
  %arrayidx234 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim233, i64 0, i64 %idxprom232, !dbg !5991
  %396 = load i16, i16* %arrayidx234, align 2, !dbg !5991
  %conv235 = zext i16 %396 to i32, !dbg !5991
  %397 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5993
  %kx236 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %397, i32 0, i32 13, !dbg !5994
  %arrayidx237 = getelementptr inbounds [2 x i32], [2 x i32]* %kx236, i64 0, i64 1, !dbg !5993
  %398 = load i32, i32* %arrayidx237, align 4, !dbg !5993
  %sub238 = sub nsw i32 %conv235, %398, !dbg !5995
  %cmp239 = icmp slt i32 %393, %sub238, !dbg !5996
  br i1 %cmp239, label %for.body241, label %for.end285, !dbg !5997

for.body241:                                      ; preds = %for.cond230
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %q_m_max, metadata !5998, metadata !2734), !dbg !6000
  %399 = load i32, i32* %m, align 4, !dbg !6001
  %idxprom243 = sext i32 %399 to i64, !dbg !6002
  %400 = load i32, i32* %e, align 4, !dbg !6003
  %idxprom244 = sext i32 %400 to i64, !dbg !6002
  %401 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6002
  %q_m245 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %401, i32 0, i32 39, !dbg !6004
  %arrayidx246 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_m245, i64 0, i64 %idxprom244, !dbg !6002
  %arrayidx247 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx246, i64 0, i64 %idxprom243, !dbg !6002
  %402 = bitcast %struct.SoftFloat* %arrayidx247 to i64*, !dbg !6005
  %403 = load i64, i64* %402, align 8, !dbg !6005
  %404 = bitcast %struct.SoftFloat* %gain_max to i64*, !dbg !6005
  %405 = load i64, i64* %404, align 4, !dbg !6005
  %call248 = call i64 @av_mul_sf(i64 %403, i64 %405) #2, !dbg !6005
  %406 = bitcast %struct.SoftFloat* %agg.tmp242 to i64*, !dbg !6005
  store i64 %call248, i64* %406, align 4, !dbg !6005
  %407 = load i32, i32* %m, align 4, !dbg !6006
  %idxprom249 = sext i32 %407 to i64, !dbg !6007
  %408 = load i32, i32* %e, align 4, !dbg !6008
  %idxprom250 = sext i32 %408 to i64, !dbg !6007
  %409 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6007
  %gain251 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %409, i32 0, i32 41, !dbg !6009
  %arrayidx252 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain251, i64 0, i64 %idxprom250, !dbg !6007
  %arrayidx253 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx252, i64 0, i64 %idxprom249, !dbg !6007
  %410 = bitcast %struct.SoftFloat* %agg.tmp242 to i64*, !dbg !6010
  %411 = load i64, i64* %410, align 4, !dbg !6010
  %412 = bitcast %struct.SoftFloat* %arrayidx253 to i64*, !dbg !6010
  %413 = load i64, i64* %412, align 8, !dbg !6010
  %call254 = call i64 @av_div_sf(i64 %411, i64 %413) #2, !dbg !6010
  %414 = bitcast %struct.SoftFloat* %q_m_max to i64*, !dbg !6010
  store i64 %call254, i64* %414, align 4, !dbg !6010
  %415 = load i32, i32* %m, align 4, !dbg !6011
  %idxprom255 = sext i32 %415 to i64, !dbg !6013
  %416 = load i32, i32* %e, align 4, !dbg !6014
  %idxprom256 = sext i32 %416 to i64, !dbg !6013
  %417 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6013
  %q_m257 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %417, i32 0, i32 39, !dbg !6015
  %arrayidx258 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_m257, i64 0, i64 %idxprom256, !dbg !6013
  %arrayidx259 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx258, i64 0, i64 %idxprom255, !dbg !6013
  %418 = bitcast %struct.SoftFloat* %arrayidx259 to i64*, !dbg !6016
  %419 = load i64, i64* %418, align 8, !dbg !6016
  %420 = bitcast %struct.SoftFloat* %q_m_max to i64*, !dbg !6016
  %421 = load i64, i64* %420, align 4, !dbg !6016
  %call260 = call i32 @av_gt_sf(i64 %419, i64 %421) #2, !dbg !6016
  %tobool261 = icmp ne i32 %call260, 0, !dbg !6016
  br i1 %tobool261, label %if.then262, label %if.end268, !dbg !6017

if.then262:                                       ; preds = %for.body241
  %422 = load i32, i32* %m, align 4, !dbg !6018
  %idxprom263 = sext i32 %422 to i64, !dbg !6019
  %423 = load i32, i32* %e, align 4, !dbg !6020
  %idxprom264 = sext i32 %423 to i64, !dbg !6019
  %424 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6019
  %q_m265 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %424, i32 0, i32 39, !dbg !6021
  %arrayidx266 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_m265, i64 0, i64 %idxprom264, !dbg !6019
  %arrayidx267 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx266, i64 0, i64 %idxprom263, !dbg !6019
  %425 = bitcast %struct.SoftFloat* %arrayidx267 to i8*, !dbg !6022
  %426 = bitcast %struct.SoftFloat* %q_m_max to i8*, !dbg !6022
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %425, i8* %426, i64 8, i32 4, i1 false), !dbg !6022
  br label %if.end268, !dbg !6019

if.end268:                                        ; preds = %if.then262, %for.body241
  %427 = load i32, i32* %m, align 4, !dbg !6023
  %idxprom269 = sext i32 %427 to i64, !dbg !6025
  %428 = load i32, i32* %e, align 4, !dbg !6026
  %idxprom270 = sext i32 %428 to i64, !dbg !6025
  %429 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6025
  %gain271 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %429, i32 0, i32 41, !dbg !6027
  %arrayidx272 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain271, i64 0, i64 %idxprom270, !dbg !6025
  %arrayidx273 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx272, i64 0, i64 %idxprom269, !dbg !6025
  %430 = bitcast %struct.SoftFloat* %arrayidx273 to i64*, !dbg !6028
  %431 = load i64, i64* %430, align 8, !dbg !6028
  %432 = bitcast %struct.SoftFloat* %gain_max to i64*, !dbg !6028
  %433 = load i64, i64* %432, align 4, !dbg !6028
  %call274 = call i32 @av_gt_sf(i64 %431, i64 %433) #2, !dbg !6028
  %tobool275 = icmp ne i32 %call274, 0, !dbg !6028
  br i1 %tobool275, label %if.then276, label %if.end282, !dbg !6029

if.then276:                                       ; preds = %if.end268
  %434 = load i32, i32* %m, align 4, !dbg !6030
  %idxprom277 = sext i32 %434 to i64, !dbg !6031
  %435 = load i32, i32* %e, align 4, !dbg !6032
  %idxprom278 = sext i32 %435 to i64, !dbg !6031
  %436 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6031
  %gain279 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %436, i32 0, i32 41, !dbg !6033
  %arrayidx280 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain279, i64 0, i64 %idxprom278, !dbg !6031
  %arrayidx281 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx280, i64 0, i64 %idxprom277, !dbg !6031
  %437 = bitcast %struct.SoftFloat* %arrayidx281 to i8*, !dbg !6034
  %438 = bitcast %struct.SoftFloat* %gain_max to i8*, !dbg !6034
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %437, i8* %438, i64 8, i32 4, i1 false), !dbg !6034
  br label %if.end282, !dbg !6031

if.end282:                                        ; preds = %if.then276, %if.end268
  br label %for.inc283, !dbg !6035

for.inc283:                                       ; preds = %if.end282
  %439 = load i32, i32* %m, align 4, !dbg !6036
  %inc284 = add nsw i32 %439, 1, !dbg !6036
  store i32 %inc284, i32* %m, align 4, !dbg !6036
  br label %for.cond230, !dbg !6038, !llvm.loop !6039

for.end285:                                       ; preds = %for.cond230
  %arrayidx286 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 0, !dbg !6041
  %arrayidx287 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 1, !dbg !6042
  %440 = bitcast %struct.SoftFloat* %arrayidx287 to i8*, !dbg !6043
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %440, i8* bitcast (%struct.SoftFloat* @FLOAT_0 to i8*), i64 8, i32 4, i1 false), !dbg !6043
  %441 = bitcast %struct.SoftFloat* %arrayidx286 to i8*, !dbg !6044
  %442 = bitcast %struct.SoftFloat* %arrayidx287 to i8*, !dbg !6044
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %441, i8* %442, i64 8, i32 8, i1 false), !dbg !6045
  %443 = load i32, i32* %k, align 4, !dbg !6046
  %idxprom288 = sext i32 %443 to i64, !dbg !6048
  %444 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6048
  %f_tablelim289 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %444, i32 0, i32 26, !dbg !6049
  %arrayidx290 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim289, i64 0, i64 %idxprom288, !dbg !6048
  %445 = load i16, i16* %arrayidx290, align 2, !dbg !6048
  %conv291 = zext i16 %445 to i32, !dbg !6048
  %446 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6050
  %kx292 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %446, i32 0, i32 13, !dbg !6051
  %arrayidx293 = getelementptr inbounds [2 x i32], [2 x i32]* %kx292, i64 0, i64 1, !dbg !6050
  %447 = load i32, i32* %arrayidx293, align 4, !dbg !6050
  %sub294 = sub nsw i32 %conv291, %447, !dbg !6052
  store i32 %sub294, i32* %m, align 4, !dbg !6053
  br label %for.cond295, !dbg !6054

for.cond295:                                      ; preds = %for.inc380, %for.end285
  %448 = load i32, i32* %m, align 4, !dbg !6055
  %449 = load i32, i32* %k, align 4, !dbg !6058
  %add296 = add nsw i32 %449, 1, !dbg !6059
  %idxprom297 = sext i32 %add296 to i64, !dbg !6060
  %450 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6060
  %f_tablelim298 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %450, i32 0, i32 26, !dbg !6061
  %arrayidx299 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim298, i64 0, i64 %idxprom297, !dbg !6060
  %451 = load i16, i16* %arrayidx299, align 2, !dbg !6060
  %conv300 = zext i16 %451 to i32, !dbg !6060
  %452 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6062
  %kx301 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %452, i32 0, i32 13, !dbg !6063
  %arrayidx302 = getelementptr inbounds [2 x i32], [2 x i32]* %kx301, i64 0, i64 1, !dbg !6062
  %453 = load i32, i32* %arrayidx302, align 4, !dbg !6062
  %sub303 = sub nsw i32 %conv300, %453, !dbg !6064
  %cmp304 = icmp slt i32 %448, %sub303, !dbg !6065
  br i1 %cmp304, label %for.body306, label %for.end382, !dbg !6066

for.body306:                                      ; preds = %for.cond295
  %arrayidx307 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 0, !dbg !6067
  %arrayidx308 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 0, !dbg !6069
  %454 = load i32, i32* %m, align 4, !dbg !6070
  %idxprom309 = sext i32 %454 to i64, !dbg !6071
  %455 = load i32, i32* %e, align 4, !dbg !6072
  %idxprom310 = sext i32 %455 to i64, !dbg !6071
  %456 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6071
  %e_origmapped311 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %456, i32 0, i32 35, !dbg !6073
  %arrayidx312 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %e_origmapped311, i64 0, i64 %idxprom310, !dbg !6071
  %arrayidx313 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx312, i64 0, i64 %idxprom309, !dbg !6071
  %457 = bitcast %struct.SoftFloat* %arrayidx308 to i64*, !dbg !6074
  %458 = load i64, i64* %457, align 16, !dbg !6074
  %459 = bitcast %struct.SoftFloat* %arrayidx313 to i64*, !dbg !6074
  %460 = load i64, i64* %459, align 8, !dbg !6074
  %call314 = call i64 @av_add_sf(i64 %458, i64 %460) #2, !dbg !6074
  %461 = bitcast %struct.SoftFloat* %coerce315 to i64*, !dbg !6074
  store i64 %call314, i64* %461, align 4, !dbg !6074
  %462 = bitcast %struct.SoftFloat* %arrayidx307 to i8*, !dbg !6074
  %463 = bitcast %struct.SoftFloat* %coerce315 to i8*, !dbg !6074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %462, i8* %463, i64 8, i32 4, i1 false), !dbg !6075
  %arrayidx316 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 1, !dbg !6077
  %arrayidx317 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 1, !dbg !6078
  %464 = load i32, i32* %m, align 4, !dbg !6079
  %idxprom320 = sext i32 %464 to i64, !dbg !6080
  %465 = load i32, i32* %e, align 4, !dbg !6081
  %idxprom321 = sext i32 %465 to i64, !dbg !6080
  %466 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6080
  %e_curr322 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %466, i32 0, i32 38, !dbg !6082
  %arrayidx323 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %e_curr322, i64 0, i64 %idxprom321, !dbg !6080
  %arrayidx324 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx323, i64 0, i64 %idxprom320, !dbg !6080
  %467 = load i32, i32* %m, align 4, !dbg !6083
  %idxprom325 = sext i32 %467 to i64, !dbg !6084
  %468 = load i32, i32* %e, align 4, !dbg !6085
  %idxprom326 = sext i32 %468 to i64, !dbg !6084
  %469 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6084
  %gain327 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %469, i32 0, i32 41, !dbg !6086
  %arrayidx328 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain327, i64 0, i64 %idxprom326, !dbg !6084
  %arrayidx329 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx328, i64 0, i64 %idxprom325, !dbg !6084
  %470 = bitcast %struct.SoftFloat* %arrayidx324 to i64*, !dbg !6087
  %471 = load i64, i64* %470, align 8, !dbg !6087
  %472 = bitcast %struct.SoftFloat* %arrayidx329 to i64*, !dbg !6087
  %473 = load i64, i64* %472, align 8, !dbg !6087
  %call330 = call i64 @av_mul_sf(i64 %471, i64 %473) #2, !dbg !6087
  %474 = bitcast %struct.SoftFloat* %agg.tmp319 to i64*, !dbg !6087
  store i64 %call330, i64* %474, align 4, !dbg !6087
  %475 = load i32, i32* %m, align 4, !dbg !6088
  %idxprom331 = sext i32 %475 to i64, !dbg !6089
  %476 = load i32, i32* %e, align 4, !dbg !6090
  %idxprom332 = sext i32 %476 to i64, !dbg !6089
  %477 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6089
  %gain333 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %477, i32 0, i32 41, !dbg !6091
  %arrayidx334 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain333, i64 0, i64 %idxprom332, !dbg !6089
  %arrayidx335 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx334, i64 0, i64 %idxprom331, !dbg !6089
  %478 = bitcast %struct.SoftFloat* %agg.tmp319 to i64*, !dbg !6092
  %479 = load i64, i64* %478, align 4, !dbg !6092
  %480 = bitcast %struct.SoftFloat* %arrayidx335 to i64*, !dbg !6092
  %481 = load i64, i64* %480, align 8, !dbg !6092
  %call336 = call i64 @av_mul_sf(i64 %479, i64 %481) #2, !dbg !6092
  %482 = bitcast %struct.SoftFloat* %agg.tmp318 to i64*, !dbg !6092
  store i64 %call336, i64* %482, align 4, !dbg !6092
  %483 = bitcast %struct.SoftFloat* %arrayidx317 to i64*, !dbg !6093
  %484 = load i64, i64* %483, align 8, !dbg !6093
  %485 = bitcast %struct.SoftFloat* %agg.tmp318 to i64*, !dbg !6093
  %486 = load i64, i64* %485, align 4, !dbg !6093
  %call337 = call i64 @av_add_sf(i64 %484, i64 %486) #2, !dbg !6093
  %487 = bitcast %struct.SoftFloat* %coerce338 to i64*, !dbg !6093
  store i64 %call337, i64* %487, align 4, !dbg !6093
  %488 = bitcast %struct.SoftFloat* %arrayidx316 to i8*, !dbg !6093
  %489 = bitcast %struct.SoftFloat* %coerce338 to i8*, !dbg !6093
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %488, i8* %489, i64 8, i32 4, i1 false), !dbg !6094
  %arrayidx339 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 1, !dbg !6095
  %arrayidx340 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 1, !dbg !6096
  %490 = load i32, i32* %m, align 4, !dbg !6097
  %idxprom342 = sext i32 %490 to i64, !dbg !6098
  %491 = load i32, i32* %e, align 4, !dbg !6099
  %idxprom343 = sext i32 %491 to i64, !dbg !6098
  %492 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6098
  %s_m344 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %492, i32 0, i32 40, !dbg !6100
  %arrayidx345 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %s_m344, i64 0, i64 %idxprom343, !dbg !6098
  %arrayidx346 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx345, i64 0, i64 %idxprom342, !dbg !6098
  %493 = load i32, i32* %m, align 4, !dbg !6101
  %idxprom347 = sext i32 %493 to i64, !dbg !6102
  %494 = load i32, i32* %e, align 4, !dbg !6103
  %idxprom348 = sext i32 %494 to i64, !dbg !6102
  %495 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6102
  %s_m349 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %495, i32 0, i32 40, !dbg !6104
  %arrayidx350 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %s_m349, i64 0, i64 %idxprom348, !dbg !6102
  %arrayidx351 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx350, i64 0, i64 %idxprom347, !dbg !6102
  %496 = bitcast %struct.SoftFloat* %arrayidx346 to i64*, !dbg !6105
  %497 = load i64, i64* %496, align 8, !dbg !6105
  %498 = bitcast %struct.SoftFloat* %arrayidx351 to i64*, !dbg !6105
  %499 = load i64, i64* %498, align 8, !dbg !6105
  %call352 = call i64 @av_mul_sf(i64 %497, i64 %499) #2, !dbg !6105
  %500 = bitcast %struct.SoftFloat* %agg.tmp341 to i64*, !dbg !6105
  store i64 %call352, i64* %500, align 4, !dbg !6105
  %501 = bitcast %struct.SoftFloat* %arrayidx340 to i64*, !dbg !6106
  %502 = load i64, i64* %501, align 8, !dbg !6106
  %503 = bitcast %struct.SoftFloat* %agg.tmp341 to i64*, !dbg !6106
  %504 = load i64, i64* %503, align 4, !dbg !6106
  %call353 = call i64 @av_add_sf(i64 %502, i64 %504) #2, !dbg !6106
  %505 = bitcast %struct.SoftFloat* %coerce354 to i64*, !dbg !6106
  store i64 %call353, i64* %505, align 4, !dbg !6106
  %506 = bitcast %struct.SoftFloat* %arrayidx339 to i8*, !dbg !6106
  %507 = bitcast %struct.SoftFloat* %coerce354 to i8*, !dbg !6106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %506, i8* %507, i64 8, i32 4, i1 false), !dbg !6107
  %508 = load i32, i32* %delta, align 4, !dbg !6108
  %tobool355 = icmp ne i32 %508, 0, !dbg !6108
  br i1 %tobool355, label %land.lhs.true, label %if.end379, !dbg !6110

land.lhs.true:                                    ; preds = %for.body306
  %509 = load i32, i32* %m, align 4, !dbg !6111
  %idxprom356 = sext i32 %509 to i64, !dbg !6113
  %510 = load i32, i32* %e, align 4, !dbg !6114
  %idxprom357 = sext i32 %510 to i64, !dbg !6113
  %511 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6113
  %s_m358 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %511, i32 0, i32 40, !dbg !6115
  %arrayidx359 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %s_m358, i64 0, i64 %idxprom357, !dbg !6113
  %arrayidx360 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx359, i64 0, i64 %idxprom356, !dbg !6113
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx360, i32 0, i32 0, !dbg !6116
  %512 = load i32, i32* %mant, align 8, !dbg !6116
  %tobool361 = icmp ne i32 %512, 0, !dbg !6113
  br i1 %tobool361, label %if.end379, label %if.then362, !dbg !6117

if.then362:                                       ; preds = %land.lhs.true
  %arrayidx363 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 1, !dbg !6118
  %arrayidx364 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 1, !dbg !6119
  %513 = load i32, i32* %m, align 4, !dbg !6120
  %idxprom366 = sext i32 %513 to i64, !dbg !6121
  %514 = load i32, i32* %e, align 4, !dbg !6122
  %idxprom367 = sext i32 %514 to i64, !dbg !6121
  %515 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6121
  %q_m368 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %515, i32 0, i32 39, !dbg !6123
  %arrayidx369 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_m368, i64 0, i64 %idxprom367, !dbg !6121
  %arrayidx370 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx369, i64 0, i64 %idxprom366, !dbg !6121
  %516 = load i32, i32* %m, align 4, !dbg !6124
  %idxprom371 = sext i32 %516 to i64, !dbg !6125
  %517 = load i32, i32* %e, align 4, !dbg !6126
  %idxprom372 = sext i32 %517 to i64, !dbg !6125
  %518 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6125
  %q_m373 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %518, i32 0, i32 39, !dbg !6127
  %arrayidx374 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_m373, i64 0, i64 %idxprom372, !dbg !6125
  %arrayidx375 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx374, i64 0, i64 %idxprom371, !dbg !6125
  %519 = bitcast %struct.SoftFloat* %arrayidx370 to i64*, !dbg !6128
  %520 = load i64, i64* %519, align 8, !dbg !6128
  %521 = bitcast %struct.SoftFloat* %arrayidx375 to i64*, !dbg !6128
  %522 = load i64, i64* %521, align 8, !dbg !6128
  %call376 = call i64 @av_mul_sf(i64 %520, i64 %522) #2, !dbg !6128
  %523 = bitcast %struct.SoftFloat* %agg.tmp365 to i64*, !dbg !6128
  store i64 %call376, i64* %523, align 4, !dbg !6128
  %524 = bitcast %struct.SoftFloat* %arrayidx364 to i64*, !dbg !6129
  %525 = load i64, i64* %524, align 8, !dbg !6129
  %526 = bitcast %struct.SoftFloat* %agg.tmp365 to i64*, !dbg !6129
  %527 = load i64, i64* %526, align 4, !dbg !6129
  %call377 = call i64 @av_add_sf(i64 %525, i64 %527) #2, !dbg !6129
  %528 = bitcast %struct.SoftFloat* %coerce378 to i64*, !dbg !6129
  store i64 %call377, i64* %528, align 4, !dbg !6129
  %529 = bitcast %struct.SoftFloat* %arrayidx363 to i8*, !dbg !6129
  %530 = bitcast %struct.SoftFloat* %coerce378 to i8*, !dbg !6129
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %529, i8* %530, i64 8, i32 4, i1 false), !dbg !6130
  br label %if.end379, !dbg !6118

if.end379:                                        ; preds = %if.then362, %land.lhs.true, %for.body306
  br label %for.inc380, !dbg !6131

for.inc380:                                       ; preds = %if.end379
  %531 = load i32, i32* %m, align 4, !dbg !6132
  %inc381 = add nsw i32 %531, 1, !dbg !6132
  store i32 %inc381, i32* %m, align 4, !dbg !6132
  br label %for.cond295, !dbg !6134, !llvm.loop !6135

for.end382:                                       ; preds = %for.cond295
  %arrayidx385 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 0, !dbg !6137
  %532 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_EPSILON to i64*), align 4, !dbg !6138
  %533 = bitcast %struct.SoftFloat* %arrayidx385 to i64*, !dbg !6138
  %534 = load i64, i64* %533, align 16, !dbg !6138
  %call386 = call i64 @av_add_sf(i64 %532, i64 %534) #2, !dbg !6138
  %535 = bitcast %struct.SoftFloat* %agg.tmp384 to i64*, !dbg !6138
  store i64 %call386, i64* %535, align 4, !dbg !6138
  %arrayidx388 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %sum, i64 0, i64 1, !dbg !6139
  %536 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_EPSILON to i64*), align 4, !dbg !6140
  %537 = bitcast %struct.SoftFloat* %arrayidx388 to i64*, !dbg !6140
  %538 = load i64, i64* %537, align 8, !dbg !6140
  %call389 = call i64 @av_add_sf(i64 %536, i64 %538) #2, !dbg !6140
  %539 = bitcast %struct.SoftFloat* %agg.tmp387 to i64*, !dbg !6140
  store i64 %call389, i64* %539, align 4, !dbg !6140
  %540 = bitcast %struct.SoftFloat* %agg.tmp384 to i64*, !dbg !6141
  %541 = load i64, i64* %540, align 4, !dbg !6141
  %542 = bitcast %struct.SoftFloat* %agg.tmp387 to i64*, !dbg !6141
  %543 = load i64, i64* %542, align 4, !dbg !6141
  %call390 = call i64 @av_div_sf(i64 %541, i64 %543) #2, !dbg !6141
  %544 = bitcast %struct.SoftFloat* %agg.tmp383 to i64*, !dbg !6141
  store i64 %call390, i64* %544, align 4, !dbg !6141
  %545 = bitcast %struct.SoftFloat* %agg.tmp383 to i64*, !dbg !6142
  %546 = load i64, i64* %545, align 4, !dbg !6142
  %547 = bitcast %struct.SoftFloat* %val.i767 to i64*, !dbg !6142
  store i64 %546, i64* %547, align 4, !dbg !6142
  %mant.i770 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 0, !dbg !6143
  %548 = load i32, i32* %mant.i770, align 4, !dbg !6143
  %cmp.i771 = icmp eq i32 %548, 0, !dbg !6144
  br i1 %cmp.i771, label %if.then.i773, label %if.else.i776, !dbg !6145

if.then.i773:                                     ; preds = %for.end382
  %exp.i772 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 1, !dbg !6146
  store i32 -149, i32* %exp.i772, align 4, !dbg !6147
  br label %av_sqrt_sf.exit826, !dbg !6148

if.else.i776:                                     ; preds = %for.end382
  %mant1.i774 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 0, !dbg !6149
  %549 = load i32, i32* %mant1.i774, align 4, !dbg !6149
  %cmp2.i775 = icmp slt i32 %549, 0, !dbg !6150
  br i1 %cmp2.i775, label %if.then3.i777, label %if.else4.i814, !dbg !6151

if.then3.i777:                                    ; preds = %if.else.i776
  call void @abort() #11, !dbg !6152
  unreachable, !dbg !6152

if.else4.i814:                                    ; preds = %if.else.i776
  %mant5.i778 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 0, !dbg !6153
  %550 = load i32, i32* %mant5.i778, align 4, !dbg !6153
  %sub.i779 = sub nsw i32 %550, 536870912, !dbg !6154
  %shr.i780 = ashr i32 %sub.i779, 20, !dbg !6155
  store i32 %shr.i780, i32* %tabIndex.i768, align 4, !dbg !6156
  %mant6.i781 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 0, !dbg !6157
  %551 = load i32, i32* %mant6.i781, align 4, !dbg !6157
  %and.i782 = and i32 %551, 1048575, !dbg !6158
  store i32 %and.i782, i32* %rem.i769, align 4, !dbg !6159
  %552 = load i32, i32* %tabIndex.i768, align 4, !dbg !6160
  %idxprom.i783 = sext i32 %552 to i64, !dbg !6161
  %arrayidx.i784 = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom.i783, !dbg !6161
  %553 = load i32, i32* %arrayidx.i784, align 4, !dbg !6161
  %conv.i785 = sext i32 %553 to i64, !dbg !6162
  %554 = load i32, i32* %rem.i769, align 4, !dbg !6163
  %sub7.i786 = sub nsw i32 1048576, %554, !dbg !6164
  %conv8.i787 = sext i32 %sub7.i786 to i64, !dbg !6165
  %mul.i788 = mul nsw i64 %conv.i785, %conv8.i787, !dbg !6166
  %555 = load i32, i32* %tabIndex.i768, align 4, !dbg !6167
  %add.i789 = add nsw i32 %555, 1, !dbg !6168
  %idxprom9.i790 = sext i32 %add.i789 to i64, !dbg !6169
  %arrayidx10.i791 = getelementptr inbounds [513 x i32], [513 x i32]* @av_sqrttbl_sf, i64 0, i64 %idxprom9.i790, !dbg !6169
  %556 = load i32, i32* %arrayidx10.i791, align 4, !dbg !6169
  %conv11.i792 = sext i32 %556 to i64, !dbg !6170
  %557 = load i32, i32* %rem.i769, align 4, !dbg !6171
  %conv12.i793 = sext i32 %557 to i64, !dbg !6171
  %mul13.i794 = mul nsw i64 %conv11.i792, %conv12.i793, !dbg !6172
  %add14.i795 = add nsw i64 %mul.i788, %mul13.i794, !dbg !6173
  %add15.i796 = add nsw i64 %add14.i795, 524288, !dbg !6174
  %shr16.i797 = ashr i64 %add15.i796, 20, !dbg !6175
  %conv17.i798 = trunc i64 %shr16.i797 to i32, !dbg !6176
  %mant18.i799 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 0, !dbg !6177
  store i32 %conv17.i798, i32* %mant18.i799, align 4, !dbg !6178
  %exp19.i800 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 1, !dbg !6179
  %558 = load i32, i32* %exp19.i800, align 4, !dbg !6179
  %and20.i801 = and i32 %558, 1, !dbg !6180
  %idxprom21.i802 = sext i32 %and20.i801 to i64, !dbg !6181
  %arrayidx22.i803 = getelementptr inbounds [2 x i32], [2 x i32]* @av_sqr_exp_multbl_sf, i64 0, i64 %idxprom21.i802, !dbg !6181
  %559 = load i32, i32* %arrayidx22.i803, align 4, !dbg !6181
  %conv23.i804 = sext i32 %559 to i64, !dbg !6182
  %mant24.i805 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 0, !dbg !6183
  %560 = load i32, i32* %mant24.i805, align 4, !dbg !6183
  %conv25.i806 = sext i32 %560 to i64, !dbg !6184
  %mul26.i807 = mul nsw i64 %conv23.i804, %conv25.i806, !dbg !6185
  %add27.i808 = add nsw i64 %mul26.i807, 268435456, !dbg !6186
  %shr28.i809 = ashr i64 %add27.i808, 29, !dbg !6187
  %conv29.i810 = trunc i64 %shr28.i809 to i32, !dbg !6188
  %mant30.i811 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 0, !dbg !6189
  store i32 %conv29.i810, i32* %mant30.i811, align 4, !dbg !6190
  %mant31.i812 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 0, !dbg !6191
  %561 = load i32, i32* %mant31.i812, align 4, !dbg !6191
  %cmp32.i813 = icmp slt i32 %561, 1073741824, !dbg !6192
  br i1 %cmp32.i813, label %if.then34.i817, label %if.else37.i820, !dbg !6193

if.then34.i817:                                   ; preds = %if.else4.i814
  %exp35.i815 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 1, !dbg !6194
  %562 = load i32, i32* %exp35.i815, align 4, !dbg !6195
  %sub36.i816 = sub nsw i32 %562, 2, !dbg !6195
  store i32 %sub36.i816, i32* %exp35.i815, align 4, !dbg !6195
  br label %if.end.i825, !dbg !6196

if.else37.i820:                                   ; preds = %if.else4.i814
  %mant38.i818 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 0, !dbg !6197
  %563 = load i32, i32* %mant38.i818, align 4, !dbg !6198
  %shr39.i819 = ashr i32 %563, 1, !dbg !6198
  store i32 %shr39.i819, i32* %mant38.i818, align 4, !dbg !6198
  br label %if.end.i825, !dbg !6142

if.end.i825:                                      ; preds = %if.else37.i820, %if.then34.i817
  %exp40.i821 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 1, !dbg !6199
  %564 = load i32, i32* %exp40.i821, align 4, !dbg !6199
  %shr41.i822 = ashr i32 %564, 1, !dbg !6200
  %add42.i823 = add nsw i32 %shr41.i822, 1, !dbg !6201
  %exp43.i824 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %val.i767, i32 0, i32 1, !dbg !6202
  store i32 %add42.i823, i32* %exp43.i824, align 4, !dbg !6203
  br label %av_sqrt_sf.exit826, !dbg !6142

av_sqrt_sf.exit826:                               ; preds = %if.then.i773, %if.end.i825
  %565 = bitcast %struct.SoftFloat* %retval.i766 to i8*, !dbg !6204
  %566 = bitcast %struct.SoftFloat* %val.i767 to i8*, !dbg !6204
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %565, i8* %566, i64 8, i32 4, i1 false) #12, !dbg !6204
  %567 = bitcast %struct.SoftFloat* %retval.i766 to i64*, !dbg !6205
  %568 = load i64, i64* %567, align 4, !dbg !6205
  %569 = bitcast %struct.SoftFloat* %coerce392 to i64*, !dbg !6142
  store i64 %568, i64* %569, align 4, !dbg !6142
  %570 = bitcast %struct.SoftFloat* %gain_boost to i8*, !dbg !6142
  %571 = bitcast %struct.SoftFloat* %coerce392 to i8*, !dbg !6142
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %570, i8* %571, i64 8, i32 4, i1 false), !dbg !6206
  %572 = bitcast %struct.SoftFloat* %gain_boost to i64*, !dbg !6207
  %573 = load i64, i64* %572, align 4, !dbg !6207
  %574 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_1584893192 to i64*), align 4, !dbg !6207
  %call393 = call i32 @av_gt_sf(i64 %573, i64 %574) #2, !dbg !6207
  %tobool394 = icmp ne i32 %call393, 0, !dbg !6207
  br i1 %tobool394, label %if.then395, label %if.end396, !dbg !6209

if.then395:                                       ; preds = %av_sqrt_sf.exit826
  %575 = bitcast %struct.SoftFloat* %gain_boost to i8*, !dbg !6210
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %575, i8* bitcast (%struct.SoftFloat* @FLOAT_1584893192 to i8*), i64 8, i32 4, i1 false), !dbg !6210
  br label %if.end396, !dbg !6211

if.end396:                                        ; preds = %if.then395, %av_sqrt_sf.exit826
  %576 = load i32, i32* %k, align 4, !dbg !6212
  %idxprom397 = sext i32 %576 to i64, !dbg !6214
  %577 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6214
  %f_tablelim398 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %577, i32 0, i32 26, !dbg !6215
  %arrayidx399 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim398, i64 0, i64 %idxprom397, !dbg !6214
  %578 = load i16, i16* %arrayidx399, align 2, !dbg !6214
  %conv400 = zext i16 %578 to i32, !dbg !6214
  %579 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6216
  %kx401 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %579, i32 0, i32 13, !dbg !6217
  %arrayidx402 = getelementptr inbounds [2 x i32], [2 x i32]* %kx401, i64 0, i64 1, !dbg !6216
  %580 = load i32, i32* %arrayidx402, align 4, !dbg !6216
  %sub403 = sub nsw i32 %conv400, %580, !dbg !6218
  store i32 %sub403, i32* %m, align 4, !dbg !6219
  br label %for.cond404, !dbg !6220

for.cond404:                                      ; preds = %for.inc452, %if.end396
  %581 = load i32, i32* %m, align 4, !dbg !6221
  %582 = load i32, i32* %k, align 4, !dbg !6224
  %add405 = add nsw i32 %582, 1, !dbg !6225
  %idxprom406 = sext i32 %add405 to i64, !dbg !6226
  %583 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6226
  %f_tablelim407 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %583, i32 0, i32 26, !dbg !6227
  %arrayidx408 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim407, i64 0, i64 %idxprom406, !dbg !6226
  %584 = load i16, i16* %arrayidx408, align 2, !dbg !6226
  %conv409 = zext i16 %584 to i32, !dbg !6226
  %585 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6228
  %kx410 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %585, i32 0, i32 13, !dbg !6229
  %arrayidx411 = getelementptr inbounds [2 x i32], [2 x i32]* %kx410, i64 0, i64 1, !dbg !6228
  %586 = load i32, i32* %arrayidx411, align 4, !dbg !6228
  %sub412 = sub nsw i32 %conv409, %586, !dbg !6230
  %cmp413 = icmp slt i32 %581, %sub412, !dbg !6231
  br i1 %cmp413, label %for.body415, label %for.end454, !dbg !6232

for.body415:                                      ; preds = %for.cond404
  %587 = load i32, i32* %m, align 4, !dbg !6233
  %idxprom416 = sext i32 %587 to i64, !dbg !6235
  %588 = load i32, i32* %e, align 4, !dbg !6236
  %idxprom417 = sext i32 %588 to i64, !dbg !6235
  %589 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6235
  %gain418 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %589, i32 0, i32 41, !dbg !6237
  %arrayidx419 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain418, i64 0, i64 %idxprom417, !dbg !6235
  %arrayidx420 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx419, i64 0, i64 %idxprom416, !dbg !6235
  %590 = load i32, i32* %m, align 4, !dbg !6238
  %idxprom421 = sext i32 %590 to i64, !dbg !6239
  %591 = load i32, i32* %e, align 4, !dbg !6240
  %idxprom422 = sext i32 %591 to i64, !dbg !6239
  %592 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6239
  %gain423 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %592, i32 0, i32 41, !dbg !6241
  %arrayidx424 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain423, i64 0, i64 %idxprom422, !dbg !6239
  %arrayidx425 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx424, i64 0, i64 %idxprom421, !dbg !6239
  %593 = bitcast %struct.SoftFloat* %arrayidx425 to i64*, !dbg !6242
  %594 = load i64, i64* %593, align 8, !dbg !6242
  %595 = bitcast %struct.SoftFloat* %gain_boost to i64*, !dbg !6242
  %596 = load i64, i64* %595, align 4, !dbg !6242
  %call426 = call i64 @av_mul_sf(i64 %594, i64 %596) #2, !dbg !6242
  %597 = bitcast %struct.SoftFloat* %coerce427 to i64*, !dbg !6242
  store i64 %call426, i64* %597, align 4, !dbg !6242
  %598 = bitcast %struct.SoftFloat* %arrayidx420 to i8*, !dbg !6242
  %599 = bitcast %struct.SoftFloat* %coerce427 to i8*, !dbg !6242
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %598, i8* %599, i64 8, i32 4, i1 false), !dbg !6243
  %600 = load i32, i32* %m, align 4, !dbg !6245
  %idxprom428 = sext i32 %600 to i64, !dbg !6246
  %601 = load i32, i32* %e, align 4, !dbg !6247
  %idxprom429 = sext i32 %601 to i64, !dbg !6246
  %602 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6246
  %q_m430 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %602, i32 0, i32 39, !dbg !6248
  %arrayidx431 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_m430, i64 0, i64 %idxprom429, !dbg !6246
  %arrayidx432 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx431, i64 0, i64 %idxprom428, !dbg !6246
  %603 = load i32, i32* %m, align 4, !dbg !6249
  %idxprom433 = sext i32 %603 to i64, !dbg !6250
  %604 = load i32, i32* %e, align 4, !dbg !6251
  %idxprom434 = sext i32 %604 to i64, !dbg !6250
  %605 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6250
  %q_m435 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %605, i32 0, i32 39, !dbg !6252
  %arrayidx436 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_m435, i64 0, i64 %idxprom434, !dbg !6250
  %arrayidx437 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx436, i64 0, i64 %idxprom433, !dbg !6250
  %606 = bitcast %struct.SoftFloat* %arrayidx437 to i64*, !dbg !6253
  %607 = load i64, i64* %606, align 8, !dbg !6253
  %608 = bitcast %struct.SoftFloat* %gain_boost to i64*, !dbg !6253
  %609 = load i64, i64* %608, align 4, !dbg !6253
  %call438 = call i64 @av_mul_sf(i64 %607, i64 %609) #2, !dbg !6253
  %610 = bitcast %struct.SoftFloat* %coerce439 to i64*, !dbg !6253
  store i64 %call438, i64* %610, align 4, !dbg !6253
  %611 = bitcast %struct.SoftFloat* %arrayidx432 to i8*, !dbg !6253
  %612 = bitcast %struct.SoftFloat* %coerce439 to i8*, !dbg !6253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %611, i8* %612, i64 8, i32 4, i1 false), !dbg !6254
  %613 = load i32, i32* %m, align 4, !dbg !6255
  %idxprom440 = sext i32 %613 to i64, !dbg !6256
  %614 = load i32, i32* %e, align 4, !dbg !6257
  %idxprom441 = sext i32 %614 to i64, !dbg !6256
  %615 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6256
  %s_m442 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %615, i32 0, i32 40, !dbg !6258
  %arrayidx443 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %s_m442, i64 0, i64 %idxprom441, !dbg !6256
  %arrayidx444 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx443, i64 0, i64 %idxprom440, !dbg !6256
  %616 = load i32, i32* %m, align 4, !dbg !6259
  %idxprom445 = sext i32 %616 to i64, !dbg !6260
  %617 = load i32, i32* %e, align 4, !dbg !6261
  %idxprom446 = sext i32 %617 to i64, !dbg !6260
  %618 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6260
  %s_m447 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %618, i32 0, i32 40, !dbg !6262
  %arrayidx448 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %s_m447, i64 0, i64 %idxprom446, !dbg !6260
  %arrayidx449 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx448, i64 0, i64 %idxprom445, !dbg !6260
  %619 = bitcast %struct.SoftFloat* %arrayidx449 to i64*, !dbg !6263
  %620 = load i64, i64* %619, align 8, !dbg !6263
  %621 = bitcast %struct.SoftFloat* %gain_boost to i64*, !dbg !6263
  %622 = load i64, i64* %621, align 4, !dbg !6263
  %call450 = call i64 @av_mul_sf(i64 %620, i64 %622) #2, !dbg !6263
  %623 = bitcast %struct.SoftFloat* %coerce451 to i64*, !dbg !6263
  store i64 %call450, i64* %623, align 4, !dbg !6263
  %624 = bitcast %struct.SoftFloat* %arrayidx444 to i8*, !dbg !6263
  %625 = bitcast %struct.SoftFloat* %coerce451 to i8*, !dbg !6263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %624, i8* %625, i64 8, i32 4, i1 false), !dbg !6264
  br label %for.inc452, !dbg !6265

for.inc452:                                       ; preds = %for.body415
  %626 = load i32, i32* %m, align 4, !dbg !6266
  %inc453 = add nsw i32 %626, 1, !dbg !6266
  store i32 %inc453, i32* %m, align 4, !dbg !6266
  br label %for.cond404, !dbg !6268, !llvm.loop !6269

for.end454:                                       ; preds = %for.cond404
  br label %for.inc455, !dbg !6271

for.inc455:                                       ; preds = %for.end454
  %627 = load i32, i32* %k, align 4, !dbg !6272
  %inc456 = add nsw i32 %627, 1, !dbg !6272
  store i32 %inc456, i32* %k, align 4, !dbg !6272
  br label %for.cond4, !dbg !6274, !llvm.loop !6275

for.end457:                                       ; preds = %for.cond4
  br label %for.inc458, !dbg !6277

for.inc458:                                       ; preds = %for.end457
  %628 = load i32, i32* %e, align 4, !dbg !6278
  %inc459 = add nsw i32 %628, 1, !dbg !6278
  store i32 %inc459, i32* %e, align 4, !dbg !6278
  br label %for.cond, !dbg !6280, !llvm.loop !6281

for.end460:                                       ; preds = %for.cond
  ret void, !dbg !6283
}

declare i32 @ff_ps_apply_fixed(%struct.AVCodecContext*, %struct.PSContext*, [38 x [64 x i32]]*, [38 x [64 x i32]]*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @sbr_qmf_synthesis(%struct.FFTContext* %mdct, %struct.SBRDSPContext* %sbrdsp, %struct.AVFixedDSPContext* %dsp, i32* %out, [38 x [64 x i32]]* %X, [64 x i32]* %mdct_buf, i32* %v0, i32* %v_off, i32 %div) #3 !dbg !6284 {
entry:
  %mdct.addr = alloca %struct.FFTContext*, align 8
  %sbrdsp.addr = alloca %struct.SBRDSPContext*, align 8
  %dsp.addr = alloca %struct.AVFixedDSPContext*, align 8
  %out.addr = alloca i32*, align 8
  %X.addr = alloca [38 x [64 x i32]]*, align 8
  %mdct_buf.addr = alloca [64 x i32]*, align 8
  %v0.addr = alloca i32*, align 8
  %v_off.addr = alloca i32*, align 8
  %div.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %sbr_qmf_window = alloca i32*, align 8
  %step = alloca i32, align 4
  %v = alloca i32*, align 8
  %saved_samples = alloca i32, align 4
  store %struct.FFTContext* %mdct, %struct.FFTContext** %mdct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFTContext** %mdct.addr, metadata !6289, metadata !2734), !dbg !6290
  store %struct.SBRDSPContext* %sbrdsp, %struct.SBRDSPContext** %sbrdsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRDSPContext** %sbrdsp.addr, metadata !6291, metadata !2734), !dbg !6292
  store %struct.AVFixedDSPContext* %dsp, %struct.AVFixedDSPContext** %dsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFixedDSPContext** %dsp.addr, metadata !6293, metadata !2734), !dbg !6294
  store i32* %out, i32** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out.addr, metadata !6295, metadata !2734), !dbg !6296
  store [38 x [64 x i32]]* %X, [38 x [64 x i32]]** %X.addr, align 8
  call void @llvm.dbg.declare(metadata [38 x [64 x i32]]** %X.addr, metadata !6297, metadata !2734), !dbg !6298
  store [64 x i32]* %mdct_buf, [64 x i32]** %mdct_buf.addr, align 8
  call void @llvm.dbg.declare(metadata [64 x i32]** %mdct_buf.addr, metadata !6299, metadata !2734), !dbg !6300
  store i32* %v0, i32** %v0.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %v0.addr, metadata !6301, metadata !2734), !dbg !6302
  store i32* %v_off, i32** %v_off.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %v_off.addr, metadata !6303, metadata !2734), !dbg !6304
  store i32 %div, i32* %div.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %div.addr, metadata !6305, metadata !2734), !dbg !6306
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6307, metadata !2734), !dbg !6308
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6309, metadata !2734), !dbg !6310
  call void @llvm.dbg.declare(metadata i32** %sbr_qmf_window, metadata !6311, metadata !2734), !dbg !6312
  %0 = load i32, i32* %div.addr, align 4, !dbg !6313
  %tobool = icmp ne i32 %0, 0, !dbg !6313
  %cond = select i1 %tobool, i32* getelementptr inbounds ([320 x i32], [320 x i32]* @sbr_qmf_window_ds, i32 0, i32 0), i32* getelementptr inbounds ([640 x i32], [640 x i32]* @sbr_qmf_window_us, i32 0, i32 0), !dbg !6313
  store i32* %cond, i32** %sbr_qmf_window, align 8, !dbg !6312
  call void @llvm.dbg.declare(metadata i32* %step, metadata !6314, metadata !2734), !dbg !6315
  %1 = load i32, i32* %div.addr, align 4, !dbg !6316
  %shr = ashr i32 128, %1, !dbg !6317
  store i32 %shr, i32* %step, align 4, !dbg !6315
  call void @llvm.dbg.declare(metadata i32** %v, metadata !6318, metadata !2734), !dbg !6319
  store i32 0, i32* %i, align 4, !dbg !6320
  br label %for.cond, !dbg !6322

for.cond:                                         ; preds = %for.inc140, %entry
  %2 = load i32, i32* %i, align 4, !dbg !6323
  %cmp = icmp slt i32 %2, 32, !dbg !6326
  br i1 %cmp, label %for.body, label %for.end142, !dbg !6327

for.body:                                         ; preds = %for.cond
  %3 = load i32*, i32** %v_off.addr, align 8, !dbg !6328
  %4 = load i32, i32* %3, align 4, !dbg !6331
  %5 = load i32, i32* %step, align 4, !dbg !6332
  %cmp1 = icmp slt i32 %4, %5, !dbg !6333
  br i1 %cmp1, label %if.then, label %if.else, !dbg !6334

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %saved_samples, metadata !6335, metadata !2734), !dbg !6337
  %6 = load i32, i32* %div.addr, align 4, !dbg !6338
  %shr2 = ashr i32 1152, %6, !dbg !6339
  store i32 %shr2, i32* %saved_samples, align 4, !dbg !6337
  %7 = load i32, i32* %saved_samples, align 4, !dbg !6340
  %sub = sub nsw i32 2304, %7, !dbg !6341
  %idxprom = sext i32 %sub to i64, !dbg !6342
  %8 = load i32*, i32** %v0.addr, align 8, !dbg !6342
  %arrayidx = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !6342
  %9 = bitcast i32* %arrayidx to i8*, !dbg !6343
  %10 = load i32*, i32** %v0.addr, align 8, !dbg !6344
  %11 = bitcast i32* %10 to i8*, !dbg !6343
  %12 = load i32, i32* %saved_samples, align 4, !dbg !6345
  %conv = sext i32 %12 to i64, !dbg !6345
  %mul = mul i64 %conv, 4, !dbg !6346
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %11, i64 %mul, i32 4, i1 false), !dbg !6343
  %13 = load i32, i32* %saved_samples, align 4, !dbg !6347
  %sub3 = sub nsw i32 2304, %13, !dbg !6348
  %14 = load i32, i32* %step, align 4, !dbg !6349
  %sub4 = sub nsw i32 %sub3, %14, !dbg !6350
  %15 = load i32*, i32** %v_off.addr, align 8, !dbg !6351
  store i32 %sub4, i32* %15, align 4, !dbg !6352
  br label %if.end, !dbg !6353

if.else:                                          ; preds = %for.body
  %16 = load i32, i32* %step, align 4, !dbg !6354
  %17 = load i32*, i32** %v_off.addr, align 8, !dbg !6356
  %18 = load i32, i32* %17, align 4, !dbg !6357
  %sub5 = sub nsw i32 %18, %16, !dbg !6357
  store i32 %sub5, i32* %17, align 4, !dbg !6357
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = load i32*, i32** %v0.addr, align 8, !dbg !6358
  %20 = load i32*, i32** %v_off.addr, align 8, !dbg !6359
  %21 = load i32, i32* %20, align 4, !dbg !6360
  %idx.ext = sext i32 %21 to i64, !dbg !6361
  %add.ptr = getelementptr inbounds i32, i32* %19, i64 %idx.ext, !dbg !6361
  store i32* %add.ptr, i32** %v, align 8, !dbg !6362
  %22 = load i32, i32* %div.addr, align 4, !dbg !6363
  %tobool6 = icmp ne i32 %22, 0, !dbg !6363
  br i1 %tobool6, label %if.then7, label %if.else41, !dbg !6365

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %n, align 4, !dbg !6366
  br label %for.cond8, !dbg !6369

for.cond8:                                        ; preds = %for.inc, %if.then7
  %23 = load i32, i32* %n, align 4, !dbg !6370
  %cmp9 = icmp slt i32 %23, 32, !dbg !6373
  br i1 %cmp9, label %for.body11, label %for.end, !dbg !6374

for.body11:                                       ; preds = %for.cond8
  %24 = load i32, i32* %n, align 4, !dbg !6375
  %idxprom12 = sext i32 %24 to i64, !dbg !6377
  %25 = load i32, i32* %i, align 4, !dbg !6378
  %idxprom13 = sext i32 %25 to i64, !dbg !6377
  %26 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !6377
  %arrayidx14 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %26, i64 0, !dbg !6377
  %arrayidx15 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx14, i64 0, i64 %idxprom13, !dbg !6377
  %arrayidx16 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx15, i64 0, i64 %idxprom12, !dbg !6377
  %27 = load i32, i32* %arrayidx16, align 4, !dbg !6377
  %sub17 = sub nsw i32 0, %27, !dbg !6379
  %28 = load i32, i32* %n, align 4, !dbg !6380
  %idxprom18 = sext i32 %28 to i64, !dbg !6381
  %29 = load i32, i32* %i, align 4, !dbg !6382
  %idxprom19 = sext i32 %29 to i64, !dbg !6381
  %30 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !6381
  %arrayidx20 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %30, i64 0, !dbg !6381
  %arrayidx21 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx20, i64 0, i64 %idxprom19, !dbg !6381
  %arrayidx22 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx21, i64 0, i64 %idxprom18, !dbg !6381
  store i32 %sub17, i32* %arrayidx22, align 4, !dbg !6383
  %31 = load i32, i32* %n, align 4, !dbg !6384
  %sub23 = sub nsw i32 31, %31, !dbg !6385
  %idxprom24 = sext i32 %sub23 to i64, !dbg !6386
  %32 = load i32, i32* %i, align 4, !dbg !6387
  %idxprom25 = sext i32 %32 to i64, !dbg !6386
  %33 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !6386
  %arrayidx26 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %33, i64 1, !dbg !6386
  %arrayidx27 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx26, i64 0, i64 %idxprom25, !dbg !6386
  %arrayidx28 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx27, i64 0, i64 %idxprom24, !dbg !6386
  %34 = load i32, i32* %arrayidx28, align 4, !dbg !6386
  %35 = load i32, i32* %n, align 4, !dbg !6388
  %add = add nsw i32 32, %35, !dbg !6389
  %idxprom29 = sext i32 %add to i64, !dbg !6390
  %36 = load i32, i32* %i, align 4, !dbg !6391
  %idxprom30 = sext i32 %36 to i64, !dbg !6390
  %37 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !6390
  %arrayidx31 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %37, i64 0, !dbg !6390
  %arrayidx32 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx31, i64 0, i64 %idxprom30, !dbg !6390
  %arrayidx33 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx32, i64 0, i64 %idxprom29, !dbg !6390
  store i32 %34, i32* %arrayidx33, align 4, !dbg !6392
  br label %for.inc, !dbg !6393

for.inc:                                          ; preds = %for.body11
  %38 = load i32, i32* %n, align 4, !dbg !6394
  %inc = add nsw i32 %38, 1, !dbg !6394
  store i32 %inc, i32* %n, align 4, !dbg !6394
  br label %for.cond8, !dbg !6396, !llvm.loop !6397

for.end:                                          ; preds = %for.cond8
  %39 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !6399
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %39, i32 0, i32 11, !dbg !6400
  %40 = load void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)** %imdct_half, align 8, !dbg !6400
  %41 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !6401
  %42 = load [64 x i32]*, [64 x i32]** %mdct_buf.addr, align 8, !dbg !6402
  %arrayidx34 = getelementptr inbounds [64 x i32], [64 x i32]* %42, i64 0, !dbg !6402
  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx34, i32 0, i32 0, !dbg !6402
  %43 = load i32, i32* %i, align 4, !dbg !6403
  %idxprom35 = sext i32 %43 to i64, !dbg !6404
  %44 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !6404
  %arrayidx36 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %44, i64 0, !dbg !6404
  %arrayidx37 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx36, i64 0, i64 %idxprom35, !dbg !6404
  %arraydecay38 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx37, i32 0, i32 0, !dbg !6404
  call void %40(%struct.FFTContext* %41, i32* %arraydecay, i32* %arraydecay38), !dbg !6399
  %45 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %sbrdsp.addr, align 8, !dbg !6405
  %qmf_deint_neg = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %45, i32 0, i32 5, !dbg !6406
  %46 = load void (i32*, i32*)*, void (i32*, i32*)** %qmf_deint_neg, align 8, !dbg !6406
  %47 = load i32*, i32** %v, align 8, !dbg !6407
  %48 = load [64 x i32]*, [64 x i32]** %mdct_buf.addr, align 8, !dbg !6408
  %arrayidx39 = getelementptr inbounds [64 x i32], [64 x i32]* %48, i64 0, !dbg !6408
  %arraydecay40 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx39, i32 0, i32 0, !dbg !6408
  call void %46(i32* %47, i32* %arraydecay40), !dbg !6405
  br label %if.end64, !dbg !6409

if.else41:                                        ; preds = %if.end
  %49 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %sbrdsp.addr, align 8, !dbg !6410
  %neg_odd_64 = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %49, i32 0, i32 2, !dbg !6412
  %50 = load void (i32*)*, void (i32*)** %neg_odd_64, align 8, !dbg !6412
  %51 = load i32, i32* %i, align 4, !dbg !6413
  %idxprom42 = sext i32 %51 to i64, !dbg !6414
  %52 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !6414
  %arrayidx43 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %52, i64 1, !dbg !6414
  %arrayidx44 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx43, i64 0, i64 %idxprom42, !dbg !6414
  %arraydecay45 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx44, i32 0, i32 0, !dbg !6414
  call void %50(i32* %arraydecay45), !dbg !6410
  %53 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !6415
  %imdct_half46 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %53, i32 0, i32 11, !dbg !6416
  %54 = load void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)** %imdct_half46, align 8, !dbg !6416
  %55 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !6417
  %56 = load [64 x i32]*, [64 x i32]** %mdct_buf.addr, align 8, !dbg !6418
  %arrayidx47 = getelementptr inbounds [64 x i32], [64 x i32]* %56, i64 0, !dbg !6418
  %arraydecay48 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx47, i32 0, i32 0, !dbg !6418
  %57 = load i32, i32* %i, align 4, !dbg !6419
  %idxprom49 = sext i32 %57 to i64, !dbg !6420
  %58 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !6420
  %arrayidx50 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %58, i64 0, !dbg !6420
  %arrayidx51 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx50, i64 0, i64 %idxprom49, !dbg !6420
  %arraydecay52 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx51, i32 0, i32 0, !dbg !6420
  call void %54(%struct.FFTContext* %55, i32* %arraydecay48, i32* %arraydecay52), !dbg !6415
  %59 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !6421
  %imdct_half53 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %59, i32 0, i32 11, !dbg !6422
  %60 = load void (%struct.FFTContext*, i32*, i32*)*, void (%struct.FFTContext*, i32*, i32*)** %imdct_half53, align 8, !dbg !6422
  %61 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !6423
  %62 = load [64 x i32]*, [64 x i32]** %mdct_buf.addr, align 8, !dbg !6424
  %arrayidx54 = getelementptr inbounds [64 x i32], [64 x i32]* %62, i64 1, !dbg !6424
  %arraydecay55 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx54, i32 0, i32 0, !dbg !6424
  %63 = load i32, i32* %i, align 4, !dbg !6425
  %idxprom56 = sext i32 %63 to i64, !dbg !6426
  %64 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !6426
  %arrayidx57 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %64, i64 1, !dbg !6426
  %arrayidx58 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx57, i64 0, i64 %idxprom56, !dbg !6426
  %arraydecay59 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx58, i32 0, i32 0, !dbg !6426
  call void %60(%struct.FFTContext* %61, i32* %arraydecay55, i32* %arraydecay59), !dbg !6421
  %65 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %sbrdsp.addr, align 8, !dbg !6427
  %qmf_deint_bfly = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %65, i32 0, i32 6, !dbg !6428
  %66 = load void (i32*, i32*, i32*)*, void (i32*, i32*, i32*)** %qmf_deint_bfly, align 8, !dbg !6428
  %67 = load i32*, i32** %v, align 8, !dbg !6429
  %68 = load [64 x i32]*, [64 x i32]** %mdct_buf.addr, align 8, !dbg !6430
  %arrayidx60 = getelementptr inbounds [64 x i32], [64 x i32]* %68, i64 1, !dbg !6430
  %arraydecay61 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx60, i32 0, i32 0, !dbg !6430
  %69 = load [64 x i32]*, [64 x i32]** %mdct_buf.addr, align 8, !dbg !6431
  %arrayidx62 = getelementptr inbounds [64 x i32], [64 x i32]* %69, i64 0, !dbg !6431
  %arraydecay63 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx62, i32 0, i32 0, !dbg !6431
  call void %66(i32* %67, i32* %arraydecay61, i32* %arraydecay63), !dbg !6427
  br label %if.end64

if.end64:                                         ; preds = %if.else41, %for.end
  %70 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %dsp.addr, align 8, !dbg !6432
  %vector_fmul = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %70, i32 0, i32 2, !dbg !6433
  %71 = load void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)** %vector_fmul, align 8, !dbg !6433
  %72 = load i32*, i32** %out.addr, align 8, !dbg !6434
  %73 = load i32*, i32** %v, align 8, !dbg !6435
  %74 = load i32*, i32** %sbr_qmf_window, align 8, !dbg !6436
  %75 = load i32, i32* %div.addr, align 4, !dbg !6437
  %shr65 = ashr i32 64, %75, !dbg !6438
  call void %71(i32* %72, i32* %73, i32* %74, i32 %shr65), !dbg !6432
  %76 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %dsp.addr, align 8, !dbg !6439
  %vector_fmul_add = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %76, i32 0, i32 4, !dbg !6440
  %77 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_add, align 8, !dbg !6440
  %78 = load i32*, i32** %out.addr, align 8, !dbg !6441
  %79 = load i32*, i32** %v, align 8, !dbg !6442
  %80 = load i32, i32* %div.addr, align 4, !dbg !6443
  %shr66 = ashr i32 192, %80, !dbg !6444
  %idx.ext67 = sext i32 %shr66 to i64, !dbg !6445
  %add.ptr68 = getelementptr inbounds i32, i32* %79, i64 %idx.ext67, !dbg !6445
  %81 = load i32*, i32** %sbr_qmf_window, align 8, !dbg !6446
  %82 = load i32, i32* %div.addr, align 4, !dbg !6447
  %shr69 = ashr i32 64, %82, !dbg !6448
  %idx.ext70 = sext i32 %shr69 to i64, !dbg !6449
  %add.ptr71 = getelementptr inbounds i32, i32* %81, i64 %idx.ext70, !dbg !6449
  %83 = load i32*, i32** %out.addr, align 8, !dbg !6450
  %84 = load i32, i32* %div.addr, align 4, !dbg !6451
  %shr72 = ashr i32 64, %84, !dbg !6452
  call void %77(i32* %78, i32* %add.ptr68, i32* %add.ptr71, i32* %83, i32 %shr72), !dbg !6439
  %85 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %dsp.addr, align 8, !dbg !6453
  %vector_fmul_add73 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %85, i32 0, i32 4, !dbg !6454
  %86 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_add73, align 8, !dbg !6454
  %87 = load i32*, i32** %out.addr, align 8, !dbg !6455
  %88 = load i32*, i32** %v, align 8, !dbg !6456
  %89 = load i32, i32* %div.addr, align 4, !dbg !6457
  %shr74 = ashr i32 256, %89, !dbg !6458
  %idx.ext75 = sext i32 %shr74 to i64, !dbg !6459
  %add.ptr76 = getelementptr inbounds i32, i32* %88, i64 %idx.ext75, !dbg !6459
  %90 = load i32*, i32** %sbr_qmf_window, align 8, !dbg !6460
  %91 = load i32, i32* %div.addr, align 4, !dbg !6461
  %shr77 = ashr i32 128, %91, !dbg !6462
  %idx.ext78 = sext i32 %shr77 to i64, !dbg !6463
  %add.ptr79 = getelementptr inbounds i32, i32* %90, i64 %idx.ext78, !dbg !6463
  %92 = load i32*, i32** %out.addr, align 8, !dbg !6464
  %93 = load i32, i32* %div.addr, align 4, !dbg !6465
  %shr80 = ashr i32 64, %93, !dbg !6466
  call void %86(i32* %87, i32* %add.ptr76, i32* %add.ptr79, i32* %92, i32 %shr80), !dbg !6453
  %94 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %dsp.addr, align 8, !dbg !6467
  %vector_fmul_add81 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %94, i32 0, i32 4, !dbg !6468
  %95 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_add81, align 8, !dbg !6468
  %96 = load i32*, i32** %out.addr, align 8, !dbg !6469
  %97 = load i32*, i32** %v, align 8, !dbg !6470
  %98 = load i32, i32* %div.addr, align 4, !dbg !6471
  %shr82 = ashr i32 448, %98, !dbg !6472
  %idx.ext83 = sext i32 %shr82 to i64, !dbg !6473
  %add.ptr84 = getelementptr inbounds i32, i32* %97, i64 %idx.ext83, !dbg !6473
  %99 = load i32*, i32** %sbr_qmf_window, align 8, !dbg !6474
  %100 = load i32, i32* %div.addr, align 4, !dbg !6475
  %shr85 = ashr i32 192, %100, !dbg !6476
  %idx.ext86 = sext i32 %shr85 to i64, !dbg !6477
  %add.ptr87 = getelementptr inbounds i32, i32* %99, i64 %idx.ext86, !dbg !6477
  %101 = load i32*, i32** %out.addr, align 8, !dbg !6478
  %102 = load i32, i32* %div.addr, align 4, !dbg !6479
  %shr88 = ashr i32 64, %102, !dbg !6480
  call void %95(i32* %96, i32* %add.ptr84, i32* %add.ptr87, i32* %101, i32 %shr88), !dbg !6467
  %103 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %dsp.addr, align 8, !dbg !6481
  %vector_fmul_add89 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %103, i32 0, i32 4, !dbg !6482
  %104 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_add89, align 8, !dbg !6482
  %105 = load i32*, i32** %out.addr, align 8, !dbg !6483
  %106 = load i32*, i32** %v, align 8, !dbg !6484
  %107 = load i32, i32* %div.addr, align 4, !dbg !6485
  %shr90 = ashr i32 512, %107, !dbg !6486
  %idx.ext91 = sext i32 %shr90 to i64, !dbg !6487
  %add.ptr92 = getelementptr inbounds i32, i32* %106, i64 %idx.ext91, !dbg !6487
  %108 = load i32*, i32** %sbr_qmf_window, align 8, !dbg !6488
  %109 = load i32, i32* %div.addr, align 4, !dbg !6489
  %shr93 = ashr i32 256, %109, !dbg !6490
  %idx.ext94 = sext i32 %shr93 to i64, !dbg !6491
  %add.ptr95 = getelementptr inbounds i32, i32* %108, i64 %idx.ext94, !dbg !6491
  %110 = load i32*, i32** %out.addr, align 8, !dbg !6492
  %111 = load i32, i32* %div.addr, align 4, !dbg !6493
  %shr96 = ashr i32 64, %111, !dbg !6494
  call void %104(i32* %105, i32* %add.ptr92, i32* %add.ptr95, i32* %110, i32 %shr96), !dbg !6481
  %112 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %dsp.addr, align 8, !dbg !6495
  %vector_fmul_add97 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %112, i32 0, i32 4, !dbg !6496
  %113 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_add97, align 8, !dbg !6496
  %114 = load i32*, i32** %out.addr, align 8, !dbg !6497
  %115 = load i32*, i32** %v, align 8, !dbg !6498
  %116 = load i32, i32* %div.addr, align 4, !dbg !6499
  %shr98 = ashr i32 704, %116, !dbg !6500
  %idx.ext99 = sext i32 %shr98 to i64, !dbg !6501
  %add.ptr100 = getelementptr inbounds i32, i32* %115, i64 %idx.ext99, !dbg !6501
  %117 = load i32*, i32** %sbr_qmf_window, align 8, !dbg !6502
  %118 = load i32, i32* %div.addr, align 4, !dbg !6503
  %shr101 = ashr i32 320, %118, !dbg !6504
  %idx.ext102 = sext i32 %shr101 to i64, !dbg !6505
  %add.ptr103 = getelementptr inbounds i32, i32* %117, i64 %idx.ext102, !dbg !6505
  %119 = load i32*, i32** %out.addr, align 8, !dbg !6506
  %120 = load i32, i32* %div.addr, align 4, !dbg !6507
  %shr104 = ashr i32 64, %120, !dbg !6508
  call void %113(i32* %114, i32* %add.ptr100, i32* %add.ptr103, i32* %119, i32 %shr104), !dbg !6495
  %121 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %dsp.addr, align 8, !dbg !6509
  %vector_fmul_add105 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %121, i32 0, i32 4, !dbg !6510
  %122 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_add105, align 8, !dbg !6510
  %123 = load i32*, i32** %out.addr, align 8, !dbg !6511
  %124 = load i32*, i32** %v, align 8, !dbg !6512
  %125 = load i32, i32* %div.addr, align 4, !dbg !6513
  %shr106 = ashr i32 768, %125, !dbg !6514
  %idx.ext107 = sext i32 %shr106 to i64, !dbg !6515
  %add.ptr108 = getelementptr inbounds i32, i32* %124, i64 %idx.ext107, !dbg !6515
  %126 = load i32*, i32** %sbr_qmf_window, align 8, !dbg !6516
  %127 = load i32, i32* %div.addr, align 4, !dbg !6517
  %shr109 = ashr i32 384, %127, !dbg !6518
  %idx.ext110 = sext i32 %shr109 to i64, !dbg !6519
  %add.ptr111 = getelementptr inbounds i32, i32* %126, i64 %idx.ext110, !dbg !6519
  %128 = load i32*, i32** %out.addr, align 8, !dbg !6520
  %129 = load i32, i32* %div.addr, align 4, !dbg !6521
  %shr112 = ashr i32 64, %129, !dbg !6522
  call void %122(i32* %123, i32* %add.ptr108, i32* %add.ptr111, i32* %128, i32 %shr112), !dbg !6509
  %130 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %dsp.addr, align 8, !dbg !6523
  %vector_fmul_add113 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %130, i32 0, i32 4, !dbg !6524
  %131 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_add113, align 8, !dbg !6524
  %132 = load i32*, i32** %out.addr, align 8, !dbg !6525
  %133 = load i32*, i32** %v, align 8, !dbg !6526
  %134 = load i32, i32* %div.addr, align 4, !dbg !6527
  %shr114 = ashr i32 960, %134, !dbg !6528
  %idx.ext115 = sext i32 %shr114 to i64, !dbg !6529
  %add.ptr116 = getelementptr inbounds i32, i32* %133, i64 %idx.ext115, !dbg !6529
  %135 = load i32*, i32** %sbr_qmf_window, align 8, !dbg !6530
  %136 = load i32, i32* %div.addr, align 4, !dbg !6531
  %shr117 = ashr i32 448, %136, !dbg !6532
  %idx.ext118 = sext i32 %shr117 to i64, !dbg !6533
  %add.ptr119 = getelementptr inbounds i32, i32* %135, i64 %idx.ext118, !dbg !6533
  %137 = load i32*, i32** %out.addr, align 8, !dbg !6534
  %138 = load i32, i32* %div.addr, align 4, !dbg !6535
  %shr120 = ashr i32 64, %138, !dbg !6536
  call void %131(i32* %132, i32* %add.ptr116, i32* %add.ptr119, i32* %137, i32 %shr120), !dbg !6523
  %139 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %dsp.addr, align 8, !dbg !6537
  %vector_fmul_add121 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %139, i32 0, i32 4, !dbg !6538
  %140 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_add121, align 8, !dbg !6538
  %141 = load i32*, i32** %out.addr, align 8, !dbg !6539
  %142 = load i32*, i32** %v, align 8, !dbg !6540
  %143 = load i32, i32* %div.addr, align 4, !dbg !6541
  %shr122 = ashr i32 1024, %143, !dbg !6542
  %idx.ext123 = sext i32 %shr122 to i64, !dbg !6543
  %add.ptr124 = getelementptr inbounds i32, i32* %142, i64 %idx.ext123, !dbg !6543
  %144 = load i32*, i32** %sbr_qmf_window, align 8, !dbg !6544
  %145 = load i32, i32* %div.addr, align 4, !dbg !6545
  %shr125 = ashr i32 512, %145, !dbg !6546
  %idx.ext126 = sext i32 %shr125 to i64, !dbg !6547
  %add.ptr127 = getelementptr inbounds i32, i32* %144, i64 %idx.ext126, !dbg !6547
  %146 = load i32*, i32** %out.addr, align 8, !dbg !6548
  %147 = load i32, i32* %div.addr, align 4, !dbg !6549
  %shr128 = ashr i32 64, %147, !dbg !6550
  call void %140(i32* %141, i32* %add.ptr124, i32* %add.ptr127, i32* %146, i32 %shr128), !dbg !6537
  %148 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %dsp.addr, align 8, !dbg !6551
  %vector_fmul_add129 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %148, i32 0, i32 4, !dbg !6552
  %149 = load void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)** %vector_fmul_add129, align 8, !dbg !6552
  %150 = load i32*, i32** %out.addr, align 8, !dbg !6553
  %151 = load i32*, i32** %v, align 8, !dbg !6554
  %152 = load i32, i32* %div.addr, align 4, !dbg !6555
  %shr130 = ashr i32 1216, %152, !dbg !6556
  %idx.ext131 = sext i32 %shr130 to i64, !dbg !6557
  %add.ptr132 = getelementptr inbounds i32, i32* %151, i64 %idx.ext131, !dbg !6557
  %153 = load i32*, i32** %sbr_qmf_window, align 8, !dbg !6558
  %154 = load i32, i32* %div.addr, align 4, !dbg !6559
  %shr133 = ashr i32 576, %154, !dbg !6560
  %idx.ext134 = sext i32 %shr133 to i64, !dbg !6561
  %add.ptr135 = getelementptr inbounds i32, i32* %153, i64 %idx.ext134, !dbg !6561
  %155 = load i32*, i32** %out.addr, align 8, !dbg !6562
  %156 = load i32, i32* %div.addr, align 4, !dbg !6563
  %shr136 = ashr i32 64, %156, !dbg !6564
  call void %149(i32* %150, i32* %add.ptr132, i32* %add.ptr135, i32* %155, i32 %shr136), !dbg !6551
  %157 = load i32, i32* %div.addr, align 4, !dbg !6565
  %shr137 = ashr i32 64, %157, !dbg !6566
  %158 = load i32*, i32** %out.addr, align 8, !dbg !6567
  %idx.ext138 = sext i32 %shr137 to i64, !dbg !6567
  %add.ptr139 = getelementptr inbounds i32, i32* %158, i64 %idx.ext138, !dbg !6567
  store i32* %add.ptr139, i32** %out.addr, align 8, !dbg !6567
  br label %for.inc140, !dbg !6568

for.inc140:                                       ; preds = %if.end64
  %159 = load i32, i32* %i, align 4, !dbg !6569
  %inc141 = add nsw i32 %159, 1, !dbg !6569
  store i32 %inc141, i32* %i, align 4, !dbg !6569
  br label %for.cond, !dbg !6571, !llvm.loop !6572

for.end142:                                       ; preds = %for.cond
  ret void, !dbg !6574
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #5 !dbg !6575 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6580, metadata !2734), !dbg !6581
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6582
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6583
  %1 = load i32, i32* %index, align 8, !dbg !6583
  ret i32 %1, !dbg !6584
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !6585 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6588, metadata !2734), !dbg !6593
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6595, metadata !2734), !dbg !6596
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6597, metadata !2734), !dbg !6598
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6599, metadata !2734), !dbg !6600
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !6601, metadata !2734), !dbg !6602
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6603
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6604
  %1 = load i32, i32* %index, align 8, !dbg !6604
  store i32 %1, i32* %re_index, align 4, !dbg !6602
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !6605, metadata !2734), !dbg !6606
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !6607, metadata !2734), !dbg !6608
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6609
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !6610
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6610
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !6608
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6611
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !6612
  %5 = load i8*, i8** %buffer, align 8, !dbg !6612
  %6 = load i32, i32* %re_index, align 4, !dbg !6613
  %shr = lshr i32 %6, 3, !dbg !6614
  %idx.ext = zext i32 %shr to i64, !dbg !6615
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !6615
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !6616
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !6616
  %8 = load i32, i32* %l, align 1, !dbg !6616
  store i32 %8, i32* %x.addr.i, align 4, !dbg !6617
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !6618
  %shl.i = shl i32 %9, 8, !dbg !6619
  %and.i = and i32 %shl.i, 65280, !dbg !6620
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !6621
  %shr.i = lshr i32 %10, 8, !dbg !6622
  %and1.i = and i32 %shr.i, 255, !dbg !6623
  %or.i = or i32 %and.i, %and1.i, !dbg !6624
  %shl2.i = shl i32 %or.i, 16, !dbg !6625
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !6626
  %shr3.i = lshr i32 %11, 16, !dbg !6627
  %shl4.i = shl i32 %shr3.i, 8, !dbg !6628
  %and5.i = and i32 %shl4.i, 65280, !dbg !6629
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !6630
  %shr6.i = lshr i32 %12, 16, !dbg !6631
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !6632
  %and8.i = and i32 %shr7.i, 255, !dbg !6633
  %or9.i = or i32 %and5.i, %and8.i, !dbg !6634
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !6635
  %13 = load i32, i32* %re_index, align 4, !dbg !6636
  %and = and i32 %13, 7, !dbg !6637
  %shl = shl i32 %or10.i, %and, !dbg !6638
  store i32 %shl, i32* %re_cache, align 4, !dbg !6639
  %14 = load i32, i32* %re_cache, align 4, !dbg !6640
  %15 = load i32, i32* %n.addr, align 4, !dbg !6641
  %conv = trunc i32 %15 to i8, !dbg !6641
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !6642
  store i32 %call4, i32* %tmp, align 4, !dbg !6643
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !6644
  %17 = load i32, i32* %re_index, align 4, !dbg !6645
  %18 = load i32, i32* %n.addr, align 4, !dbg !6646
  %add = add i32 %17, %18, !dbg !6647
  %cmp = icmp ugt i32 %16, %add, !dbg !6648
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6649

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !6650
  %20 = load i32, i32* %n.addr, align 4, !dbg !6652
  %add6 = add i32 %19, %20, !dbg !6653
  br label %cond.end, !dbg !6654

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !6655
  br label %cond.end, !dbg !6657

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !6658
  store i32 %cond, i32* %re_index, align 4, !dbg !6660
  %22 = load i32, i32* %re_index, align 4, !dbg !6661
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6662
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !6663
  store i32 %22, i32* %index7, align 8, !dbg !6664
  %24 = load i32, i32* %tmp, align 4, !dbg !6665
  ret i32 %24, !dbg !6666
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind uwtable
define internal void @sbr_make_f_tablelim(%struct.SpectralBandReplication* %sbr) #3 !dbg !1122 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %k = alloca i32, align 4
  %lim_bands_per_octave_warped = alloca i32, align 4
  %patch_borders = alloca [7 x i16], align 2
  %in = alloca i16*, align 8
  %out = alloca i16*, align 8
  %stack = alloca [64 x [2 x i8*]], align 16
  %sp = alloca i32, align 4
  %start = alloca i16*, align 8
  %end = alloca i16*, align 8
  %checksort = alloca i32, align 4
  %right = alloca i16*, align 8
  %left = alloca i16*, align 8
  %mid = alloca i16*, align 8
  %SWAP_tmp = alloca i16, align 2
  %SWAP_tmp82 = alloca i16, align 2
  %SWAP_tmp91 = alloca i16, align 2
  %SWAP_tmp101 = alloca i16, align 2
  %SWAP_tmp110 = alloca i16, align 2
  %SWAP_tmp142 = alloca i16, align 2
  %SWAP_tmp149 = alloca i16, align 2
  %SWAP_tmp212 = alloca i16, align 2
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !6667, metadata !2734), !dbg !6668
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6669, metadata !2734), !dbg !6670
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6671
  %bs_limiter_bands = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 7, !dbg !6673
  %1 = load i32, i32* %bs_limiter_bands, align 32, !dbg !6673
  %cmp = icmp ugt i32 %1, 0, !dbg !6674
  br i1 %cmp, label %if.then, label %if.else271, !dbg !6675

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %lim_bands_per_octave_warped, metadata !6676, metadata !2734), !dbg !6678
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6679
  %bs_limiter_bands1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 7, !dbg !6680
  %3 = load i32, i32* %bs_limiter_bands1, align 32, !dbg !6680
  %sub = sub i32 %3, 1, !dbg !6681
  %idxprom = zext i32 %sub to i64, !dbg !6682
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* @sbr_make_f_tablelim.bands_warped, i64 0, i64 %idxprom, !dbg !6682
  %4 = load i32, i32* %arrayidx, align 4, !dbg !6682
  store i32 %4, i32* %lim_bands_per_octave_warped, align 4, !dbg !6678
  call void @llvm.dbg.declare(metadata [7 x i16]* %patch_borders, metadata !6683, metadata !2734), !dbg !6685
  call void @llvm.dbg.declare(metadata i16** %in, metadata !6686, metadata !2734), !dbg !6687
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6688
  %f_tablelim = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %5, i32 0, i32 26, !dbg !6689
  %arraydecay = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim, i32 0, i32 0, !dbg !6688
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay, i64 1, !dbg !6690
  store i16* %add.ptr, i16** %in, align 8, !dbg !6687
  call void @llvm.dbg.declare(metadata i16** %out, metadata !6691, metadata !2734), !dbg !6692
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6693
  %f_tablelim2 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 26, !dbg !6694
  %arraydecay3 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim2, i32 0, i32 0, !dbg !6693
  store i16* %arraydecay3, i16** %out, align 8, !dbg !6692
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6695
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 13, !dbg !6696
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !6695
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !6695
  %conv = trunc i32 %8 to i16, !dbg !6695
  %arrayidx5 = getelementptr inbounds [7 x i16], [7 x i16]* %patch_borders, i64 0, i64 0, !dbg !6697
  store i16 %conv, i16* %arrayidx5, align 2, !dbg !6698
  store i32 1, i32* %k, align 4, !dbg !6699
  br label %for.cond, !dbg !6701

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load i32, i32* %k, align 4, !dbg !6702
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6705
  %num_patches = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %10, i32 0, i32 27, !dbg !6706
  %11 = load i32, i32* %num_patches, align 16, !dbg !6706
  %cmp6 = icmp sle i32 %9, %11, !dbg !6707
  br i1 %cmp6, label %for.body, label %for.end, !dbg !6708

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %k, align 4, !dbg !6709
  %sub8 = sub nsw i32 %12, 1, !dbg !6710
  %idxprom9 = sext i32 %sub8 to i64, !dbg !6711
  %arrayidx10 = getelementptr inbounds [7 x i16], [7 x i16]* %patch_borders, i64 0, i64 %idxprom9, !dbg !6711
  %13 = load i16, i16* %arrayidx10, align 2, !dbg !6711
  %conv11 = sext i16 %13 to i32, !dbg !6711
  %14 = load i32, i32* %k, align 4, !dbg !6712
  %sub12 = sub nsw i32 %14, 1, !dbg !6713
  %idxprom13 = sext i32 %sub12 to i64, !dbg !6714
  %15 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6714
  %patch_num_subbands = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %15, i32 0, i32 28, !dbg !6715
  %arrayidx14 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_num_subbands, i64 0, i64 %idxprom13, !dbg !6714
  %16 = load i8, i8* %arrayidx14, align 1, !dbg !6714
  %conv15 = zext i8 %16 to i32, !dbg !6714
  %add = add nsw i32 %conv11, %conv15, !dbg !6716
  %conv16 = trunc i32 %add to i16, !dbg !6711
  %17 = load i32, i32* %k, align 4, !dbg !6717
  %idxprom17 = sext i32 %17 to i64, !dbg !6718
  %arrayidx18 = getelementptr inbounds [7 x i16], [7 x i16]* %patch_borders, i64 0, i64 %idxprom17, !dbg !6718
  store i16 %conv16, i16* %arrayidx18, align 2, !dbg !6719
  br label %for.inc, !dbg !6718

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %k, align 4, !dbg !6720
  %inc = add nsw i32 %18, 1, !dbg !6720
  store i32 %inc, i32* %k, align 4, !dbg !6720
  br label %for.cond, !dbg !6722, !llvm.loop !6723

for.end:                                          ; preds = %for.cond
  %19 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6725
  %f_tablelim19 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %19, i32 0, i32 26, !dbg !6726
  %arraydecay20 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim19, i32 0, i32 0, !dbg !6727
  %20 = bitcast i16* %arraydecay20 to i8*, !dbg !6727
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6728
  %f_tablelow = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %21, i32 0, i32 23, !dbg !6729
  %arraydecay21 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow, i32 0, i32 0, !dbg !6727
  %22 = bitcast i16* %arraydecay21 to i8*, !dbg !6727
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6730
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %23, i32 0, i32 19, !dbg !6731
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 0, !dbg !6730
  %24 = load i32, i32* %arrayidx22, align 32, !dbg !6730
  %add23 = add nsw i32 %24, 1, !dbg !6732
  %conv24 = sext i32 %add23 to i64, !dbg !6733
  %mul = mul i64 %conv24, 2, !dbg !6734
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %22, i64 %mul, i32 2, i1 false), !dbg !6727
  %25 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6735
  %num_patches25 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %25, i32 0, i32 27, !dbg !6737
  %26 = load i32, i32* %num_patches25, align 16, !dbg !6737
  %cmp26 = icmp sgt i32 %26, 1, !dbg !6738
  br i1 %cmp26, label %if.then28, label %if.end, !dbg !6739

if.then28:                                        ; preds = %for.end
  %27 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6740
  %f_tablelim29 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %27, i32 0, i32 26, !dbg !6741
  %arraydecay30 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim29, i32 0, i32 0, !dbg !6740
  %28 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6742
  %n31 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %28, i32 0, i32 19, !dbg !6743
  %arrayidx32 = getelementptr inbounds [2 x i32], [2 x i32]* %n31, i64 0, i64 0, !dbg !6742
  %29 = load i32, i32* %arrayidx32, align 32, !dbg !6742
  %idx.ext = sext i32 %29 to i64, !dbg !6744
  %add.ptr33 = getelementptr inbounds i16, i16* %arraydecay30, i64 %idx.ext, !dbg !6744
  %add.ptr34 = getelementptr inbounds i16, i16* %add.ptr33, i64 1, !dbg !6745
  %30 = bitcast i16* %add.ptr34 to i8*, !dbg !6746
  %arraydecay35 = getelementptr inbounds [7 x i16], [7 x i16]* %patch_borders, i32 0, i32 0, !dbg !6747
  %add.ptr36 = getelementptr inbounds i16, i16* %arraydecay35, i64 1, !dbg !6748
  %31 = bitcast i16* %add.ptr36 to i8*, !dbg !6746
  %32 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6749
  %num_patches37 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %32, i32 0, i32 27, !dbg !6750
  %33 = load i32, i32* %num_patches37, align 16, !dbg !6750
  %sub38 = sub nsw i32 %33, 1, !dbg !6751
  %conv39 = sext i32 %sub38 to i64, !dbg !6752
  %mul40 = mul i64 %conv39, 2, !dbg !6753
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 %mul40, i32 2, i1 false), !dbg !6746
  br label %if.end, !dbg !6746

if.end:                                           ; preds = %if.then28, %for.end
  br label %do.body, !dbg !6754, !llvm.loop !6755

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata [64 x [2 x i8*]]* %stack, metadata !6756, metadata !2734), !dbg !6759
  call void @llvm.dbg.declare(metadata i32* %sp, metadata !6760, metadata !2734), !dbg !6761
  store i32 1, i32* %sp, align 4, !dbg !6762
  %34 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6764
  %f_tablelim41 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %34, i32 0, i32 26, !dbg !6765
  %arraydecay42 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim41, i32 0, i32 0, !dbg !6764
  %35 = bitcast i16* %arraydecay42 to i8*, !dbg !6764
  %arrayidx43 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !6766
  %arrayidx44 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx43, i64 0, i64 0, !dbg !6766
  store i8* %35, i8** %arrayidx44, align 16, !dbg !6767
  %36 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6768
  %f_tablelim45 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %36, i32 0, i32 26, !dbg !6769
  %arraydecay46 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim45, i32 0, i32 0, !dbg !6770
  %37 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6771
  %num_patches47 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %37, i32 0, i32 27, !dbg !6772
  %38 = load i32, i32* %num_patches47, align 16, !dbg !6772
  %39 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6773
  %n48 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %39, i32 0, i32 19, !dbg !6774
  %arrayidx49 = getelementptr inbounds [2 x i32], [2 x i32]* %n48, i64 0, i64 0, !dbg !6773
  %40 = load i32, i32* %arrayidx49, align 32, !dbg !6773
  %add50 = add nsw i32 %38, %40, !dbg !6775
  %idx.ext51 = sext i32 %add50 to i64, !dbg !6776
  %add.ptr52 = getelementptr inbounds i16, i16* %arraydecay46, i64 %idx.ext51, !dbg !6776
  %add.ptr53 = getelementptr inbounds i16, i16* %add.ptr52, i64 -1, !dbg !6777
  %41 = bitcast i16* %add.ptr53 to i8*, !dbg !6770
  %arrayidx54 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !6778
  %arrayidx55 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx54, i64 0, i64 1, !dbg !6778
  store i8* %41, i8** %arrayidx55, align 8, !dbg !6779
  br label %while.cond, !dbg !6780

while.cond:                                       ; preds = %while.end216, %do.body
  %42 = load i32, i32* %sp, align 4, !dbg !6781
  %tobool = icmp ne i32 %42, 0, !dbg !6783
  br i1 %tobool, label %while.body, label %while.end217, !dbg !6783

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16** %start, metadata !6784, metadata !2734), !dbg !6786
  %43 = load i32, i32* %sp, align 4, !dbg !6787
  %dec = add nsw i32 %43, -1, !dbg !6787
  store i32 %dec, i32* %sp, align 4, !dbg !6787
  %idxprom56 = sext i32 %dec to i64, !dbg !6789
  %arrayidx57 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom56, !dbg !6789
  %arrayidx58 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx57, i64 0, i64 0, !dbg !6789
  %44 = load i8*, i8** %arrayidx58, align 16, !dbg !6789
  %45 = bitcast i8* %44 to i16*, !dbg !6789
  store i16* %45, i16** %start, align 8, !dbg !6790
  call void @llvm.dbg.declare(metadata i16** %end, metadata !6791, metadata !2734), !dbg !6792
  %46 = load i32, i32* %sp, align 4, !dbg !6793
  %idxprom59 = sext i32 %46 to i64, !dbg !6794
  %arrayidx60 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom59, !dbg !6794
  %arrayidx61 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx60, i64 0, i64 1, !dbg !6794
  %47 = load i8*, i8** %arrayidx61, align 8, !dbg !6794
  %48 = bitcast i8* %47 to i16*, !dbg !6794
  store i16* %48, i16** %end, align 8, !dbg !6795
  br label %while.cond62, !dbg !6796

while.cond62:                                     ; preds = %if.end215, %while.body
  %49 = load i16*, i16** %start, align 8, !dbg !6797
  %50 = load i16*, i16** %end, align 8, !dbg !6799
  %cmp63 = icmp ult i16* %49, %50, !dbg !6800
  br i1 %cmp63, label %while.body65, label %while.end216, !dbg !6801

while.body65:                                     ; preds = %while.cond62
  %51 = load i16*, i16** %start, align 8, !dbg !6802
  %52 = load i16*, i16** %end, align 8, !dbg !6806
  %add.ptr66 = getelementptr inbounds i16, i16* %52, i64 -1, !dbg !6807
  %cmp67 = icmp ult i16* %51, %add.ptr66, !dbg !6808
  br i1 %cmp67, label %if.then69, label %if.else206, !dbg !6802

if.then69:                                        ; preds = %while.body65
  call void @llvm.dbg.declare(metadata i32* %checksort, metadata !6809, metadata !2734), !dbg !6811
  store i32 0, i32* %checksort, align 4, !dbg !6812
  call void @llvm.dbg.declare(metadata i16** %right, metadata !6814, metadata !2734), !dbg !6815
  %53 = load i16*, i16** %end, align 8, !dbg !6816
  %add.ptr70 = getelementptr inbounds i16, i16* %53, i64 -2, !dbg !6817
  store i16* %add.ptr70, i16** %right, align 8, !dbg !6818
  call void @llvm.dbg.declare(metadata i16** %left, metadata !6819, metadata !2734), !dbg !6820
  %54 = load i16*, i16** %start, align 8, !dbg !6821
  %add.ptr71 = getelementptr inbounds i16, i16* %54, i64 1, !dbg !6822
  store i16* %add.ptr71, i16** %left, align 8, !dbg !6823
  call void @llvm.dbg.declare(metadata i16** %mid, metadata !6824, metadata !2734), !dbg !6825
  %55 = load i16*, i16** %start, align 8, !dbg !6826
  %56 = load i16*, i16** %end, align 8, !dbg !6827
  %57 = load i16*, i16** %start, align 8, !dbg !6828
  %sub.ptr.lhs.cast = ptrtoint i16* %56 to i64, !dbg !6829
  %sub.ptr.rhs.cast = ptrtoint i16* %57 to i64, !dbg !6829
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6829
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !6829
  %shr = ashr i64 %sub.ptr.div, 1, !dbg !6830
  %add.ptr72 = getelementptr inbounds i16, i16* %55, i64 %shr, !dbg !6831
  store i16* %add.ptr72, i16** %mid, align 8, !dbg !6832
  %58 = load i16*, i16** %start, align 8, !dbg !6833
  %59 = bitcast i16* %58 to i8*, !dbg !6833
  %60 = load i16*, i16** %end, align 8, !dbg !6834
  %61 = bitcast i16* %60 to i8*, !dbg !6834
  %call = call i32 @qsort_comparison_function_int16(i8* %59, i8* %61), !dbg !6835
  %cmp73 = icmp sgt i32 %call, 0, !dbg !6836
  br i1 %cmp73, label %if.then75, label %if.else85, !dbg !6835

if.then75:                                        ; preds = %if.then69
  %62 = load i16*, i16** %end, align 8, !dbg !6837
  %63 = bitcast i16* %62 to i8*, !dbg !6837
  %64 = load i16*, i16** %mid, align 8, !dbg !6842
  %65 = bitcast i16* %64 to i8*, !dbg !6842
  %call76 = call i32 @qsort_comparison_function_int16(i8* %63, i8* %65), !dbg !6843
  %cmp77 = icmp sgt i32 %call76, 0, !dbg !6844
  br i1 %cmp77, label %if.then79, label %if.else, !dbg !6843

if.then79:                                        ; preds = %if.then75
  br label %do.body80, !dbg !6845, !llvm.loop !6847

do.body80:                                        ; preds = %if.then79
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp, metadata !6849, metadata !2734), !dbg !6851
  %66 = load i16*, i16** %mid, align 8, !dbg !6852
  %67 = load i16, i16* %66, align 2, !dbg !6854
  store i16 %67, i16* %SWAP_tmp, align 2, !dbg !6855
  %68 = load i16*, i16** %start, align 8, !dbg !6856
  %69 = load i16, i16* %68, align 2, !dbg !6857
  %70 = load i16*, i16** %mid, align 8, !dbg !6858
  store i16 %69, i16* %70, align 2, !dbg !6859
  %71 = load i16, i16* %SWAP_tmp, align 2, !dbg !6860
  %72 = load i16*, i16** %start, align 8, !dbg !6861
  store i16 %71, i16* %72, align 2, !dbg !6862
  br label %do.end, !dbg !6863

do.end:                                           ; preds = %do.body80
  br label %if.end84, !dbg !6864

if.else:                                          ; preds = %if.then75
  br label %do.body81, !dbg !6866, !llvm.loop !6868

do.body81:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp82, metadata !6870, metadata !2734), !dbg !6872
  %73 = load i16*, i16** %end, align 8, !dbg !6873
  %74 = load i16, i16* %73, align 2, !dbg !6875
  store i16 %74, i16* %SWAP_tmp82, align 2, !dbg !6876
  %75 = load i16*, i16** %start, align 8, !dbg !6877
  %76 = load i16, i16* %75, align 2, !dbg !6878
  %77 = load i16*, i16** %end, align 8, !dbg !6879
  store i16 %76, i16* %77, align 2, !dbg !6880
  %78 = load i16, i16* %SWAP_tmp82, align 2, !dbg !6881
  %79 = load i16*, i16** %start, align 8, !dbg !6882
  store i16 %78, i16* %79, align 2, !dbg !6883
  br label %do.end83, !dbg !6884

do.end83:                                         ; preds = %do.body81
  br label %if.end84

if.end84:                                         ; preds = %do.end83, %do.end
  br label %if.end95, !dbg !6885

if.else85:                                        ; preds = %if.then69
  %80 = load i16*, i16** %start, align 8, !dbg !6887
  %81 = bitcast i16* %80 to i8*, !dbg !6887
  %82 = load i16*, i16** %mid, align 8, !dbg !6891
  %83 = bitcast i16* %82 to i8*, !dbg !6891
  %call86 = call i32 @qsort_comparison_function_int16(i8* %81, i8* %83), !dbg !6892
  %cmp87 = icmp sgt i32 %call86, 0, !dbg !6893
  br i1 %cmp87, label %if.then89, label %if.else93, !dbg !6892

if.then89:                                        ; preds = %if.else85
  br label %do.body90, !dbg !6894, !llvm.loop !6896

do.body90:                                        ; preds = %if.then89
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp91, metadata !6898, metadata !2734), !dbg !6900
  %84 = load i16*, i16** %mid, align 8, !dbg !6901
  %85 = load i16, i16* %84, align 2, !dbg !6903
  store i16 %85, i16* %SWAP_tmp91, align 2, !dbg !6904
  %86 = load i16*, i16** %start, align 8, !dbg !6905
  %87 = load i16, i16* %86, align 2, !dbg !6906
  %88 = load i16*, i16** %mid, align 8, !dbg !6907
  store i16 %87, i16* %88, align 2, !dbg !6908
  %89 = load i16, i16* %SWAP_tmp91, align 2, !dbg !6909
  %90 = load i16*, i16** %start, align 8, !dbg !6910
  store i16 %89, i16* %90, align 2, !dbg !6911
  br label %do.end92, !dbg !6912

do.end92:                                         ; preds = %do.body90
  br label %if.end94, !dbg !6913

if.else93:                                        ; preds = %if.else85
  store i32 1, i32* %checksort, align 4, !dbg !6915
  br label %if.end94

if.end94:                                         ; preds = %if.else93, %do.end92
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.end84
  %91 = load i16*, i16** %mid, align 8, !dbg !6917
  %92 = bitcast i16* %91 to i8*, !dbg !6917
  %93 = load i16*, i16** %end, align 8, !dbg !6920
  %94 = bitcast i16* %93 to i8*, !dbg !6920
  %call96 = call i32 @qsort_comparison_function_int16(i8* %92, i8* %94), !dbg !6921
  %cmp97 = icmp sgt i32 %call96, 0, !dbg !6922
  br i1 %cmp97, label %if.then99, label %if.end103, !dbg !6921

if.then99:                                        ; preds = %if.end95
  br label %do.body100, !dbg !6923, !llvm.loop !6926

do.body100:                                       ; preds = %if.then99
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp101, metadata !6928, metadata !2734), !dbg !6930
  %95 = load i16*, i16** %end, align 8, !dbg !6931
  %96 = load i16, i16* %95, align 2, !dbg !6933
  store i16 %96, i16* %SWAP_tmp101, align 2, !dbg !6934
  %97 = load i16*, i16** %mid, align 8, !dbg !6935
  %98 = load i16, i16* %97, align 2, !dbg !6936
  %99 = load i16*, i16** %end, align 8, !dbg !6937
  store i16 %98, i16* %99, align 2, !dbg !6938
  %100 = load i16, i16* %SWAP_tmp101, align 2, !dbg !6939
  %101 = load i16*, i16** %mid, align 8, !dbg !6940
  store i16 %100, i16* %101, align 2, !dbg !6941
  br label %do.end102, !dbg !6942

do.end102:                                        ; preds = %do.body100
  store i32 0, i32* %checksort, align 4, !dbg !6943
  br label %if.end103, !dbg !6945

if.end103:                                        ; preds = %do.end102, %if.end95
  %102 = load i16*, i16** %start, align 8, !dbg !6946
  %103 = load i16*, i16** %end, align 8, !dbg !6949
  %add.ptr104 = getelementptr inbounds i16, i16* %103, i64 -2, !dbg !6950
  %cmp105 = icmp eq i16* %102, %add.ptr104, !dbg !6951
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !6946

if.then107:                                       ; preds = %if.end103
  br label %while.end216, !dbg !6952

if.end108:                                        ; preds = %if.end103
  br label %do.body109, !dbg !6954, !llvm.loop !6956

do.body109:                                       ; preds = %if.end108
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp110, metadata !6958, metadata !2734), !dbg !6960
  %104 = load i16*, i16** %mid, align 8, !dbg !6961
  %105 = load i16, i16* %104, align 2, !dbg !6963
  store i16 %105, i16* %SWAP_tmp110, align 2, !dbg !6964
  %106 = load i16*, i16** %end, align 8, !dbg !6965
  %arrayidx111 = getelementptr inbounds i16, i16* %106, i64 -1, !dbg !6965
  %107 = load i16, i16* %arrayidx111, align 2, !dbg !6965
  %108 = load i16*, i16** %mid, align 8, !dbg !6966
  store i16 %107, i16* %108, align 2, !dbg !6967
  %109 = load i16, i16* %SWAP_tmp110, align 2, !dbg !6968
  %110 = load i16*, i16** %end, align 8, !dbg !6969
  %arrayidx112 = getelementptr inbounds i16, i16* %110, i64 -1, !dbg !6969
  store i16 %109, i16* %arrayidx112, align 2, !dbg !6970
  br label %do.end113, !dbg !6971

do.end113:                                        ; preds = %do.body109
  br label %while.cond114, !dbg !6972

while.cond114:                                    ; preds = %if.end146, %do.end113
  %111 = load i16*, i16** %left, align 8, !dbg !6974
  %112 = load i16*, i16** %right, align 8, !dbg !6976
  %cmp115 = icmp ule i16* %111, %112, !dbg !6977
  br i1 %cmp115, label %while.body117, label %while.end147, !dbg !6978

while.body117:                                    ; preds = %while.cond114
  br label %while.cond118, !dbg !6979

while.cond118:                                    ; preds = %while.body125, %while.body117
  %113 = load i16*, i16** %left, align 8, !dbg !6982
  %114 = load i16*, i16** %right, align 8, !dbg !6984
  %cmp119 = icmp ule i16* %113, %114, !dbg !6985
  br i1 %cmp119, label %land.rhs, label %land.end, !dbg !6986

land.rhs:                                         ; preds = %while.cond118
  %115 = load i16*, i16** %left, align 8, !dbg !6987
  %116 = bitcast i16* %115 to i8*, !dbg !6987
  %117 = load i16*, i16** %end, align 8, !dbg !6989
  %add.ptr121 = getelementptr inbounds i16, i16* %117, i64 -1, !dbg !6990
  %118 = bitcast i16* %add.ptr121 to i8*, !dbg !6989
  %call122 = call i32 @qsort_comparison_function_int16(i8* %116, i8* %118), !dbg !6991
  %cmp123 = icmp slt i32 %call122, 0, !dbg !6992
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond118
  %119 = phi i1 [ false, %while.cond118 ], [ %cmp123, %land.rhs ]
  br i1 %119, label %while.body125, label %while.end, !dbg !6993

while.body125:                                    ; preds = %land.end
  %120 = load i16*, i16** %left, align 8, !dbg !6995
  %incdec.ptr = getelementptr inbounds i16, i16* %120, i32 1, !dbg !6995
  store i16* %incdec.ptr, i16** %left, align 8, !dbg !6995
  br label %while.cond118, !dbg !6997, !llvm.loop !6998

while.end:                                        ; preds = %land.end
  br label %while.cond126, !dbg !7000

while.cond126:                                    ; preds = %while.body135, %while.end
  %121 = load i16*, i16** %left, align 8, !dbg !7002
  %122 = load i16*, i16** %right, align 8, !dbg !7004
  %cmp127 = icmp ule i16* %121, %122, !dbg !7005
  br i1 %cmp127, label %land.rhs129, label %land.end134, !dbg !7006

land.rhs129:                                      ; preds = %while.cond126
  %123 = load i16*, i16** %right, align 8, !dbg !7007
  %124 = bitcast i16* %123 to i8*, !dbg !7007
  %125 = load i16*, i16** %end, align 8, !dbg !7009
  %add.ptr130 = getelementptr inbounds i16, i16* %125, i64 -1, !dbg !7010
  %126 = bitcast i16* %add.ptr130 to i8*, !dbg !7009
  %call131 = call i32 @qsort_comparison_function_int16(i8* %124, i8* %126), !dbg !7011
  %cmp132 = icmp sgt i32 %call131, 0, !dbg !7012
  br label %land.end134

land.end134:                                      ; preds = %land.rhs129, %while.cond126
  %127 = phi i1 [ false, %while.cond126 ], [ %cmp132, %land.rhs129 ]
  br i1 %127, label %while.body135, label %while.end137, !dbg !7013

while.body135:                                    ; preds = %land.end134
  %128 = load i16*, i16** %right, align 8, !dbg !7015
  %incdec.ptr136 = getelementptr inbounds i16, i16* %128, i32 -1, !dbg !7015
  store i16* %incdec.ptr136, i16** %right, align 8, !dbg !7015
  br label %while.cond126, !dbg !7017, !llvm.loop !7018

while.end137:                                     ; preds = %land.end134
  %129 = load i16*, i16** %left, align 8, !dbg !7020
  %130 = load i16*, i16** %right, align 8, !dbg !7023
  %cmp138 = icmp ule i16* %129, %130, !dbg !7024
  br i1 %cmp138, label %if.then140, label %if.end146, !dbg !7020

if.then140:                                       ; preds = %while.end137
  br label %do.body141, !dbg !7025, !llvm.loop !7028

do.body141:                                       ; preds = %if.then140
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp142, metadata !7030, metadata !2734), !dbg !7032
  %131 = load i16*, i16** %right, align 8, !dbg !7033
  %132 = load i16, i16* %131, align 2, !dbg !7035
  store i16 %132, i16* %SWAP_tmp142, align 2, !dbg !7036
  %133 = load i16*, i16** %left, align 8, !dbg !7037
  %134 = load i16, i16* %133, align 2, !dbg !7038
  %135 = load i16*, i16** %right, align 8, !dbg !7039
  store i16 %134, i16* %135, align 2, !dbg !7040
  %136 = load i16, i16* %SWAP_tmp142, align 2, !dbg !7041
  %137 = load i16*, i16** %left, align 8, !dbg !7042
  store i16 %136, i16* %137, align 2, !dbg !7043
  br label %do.end143, !dbg !7044

do.end143:                                        ; preds = %do.body141
  %138 = load i16*, i16** %left, align 8, !dbg !7045
  %incdec.ptr144 = getelementptr inbounds i16, i16* %138, i32 1, !dbg !7045
  store i16* %incdec.ptr144, i16** %left, align 8, !dbg !7045
  %139 = load i16*, i16** %right, align 8, !dbg !7047
  %incdec.ptr145 = getelementptr inbounds i16, i16* %139, i32 -1, !dbg !7047
  store i16* %incdec.ptr145, i16** %right, align 8, !dbg !7047
  br label %if.end146, !dbg !7048

if.end146:                                        ; preds = %do.end143, %while.end137
  br label %while.cond114, !dbg !7049, !llvm.loop !7051

while.end147:                                     ; preds = %while.cond114
  br label %do.body148, !dbg !7053, !llvm.loop !7055

do.body148:                                       ; preds = %while.end147
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp149, metadata !7057, metadata !2734), !dbg !7059
  %140 = load i16*, i16** %left, align 8, !dbg !7060
  %141 = load i16, i16* %140, align 2, !dbg !7062
  store i16 %141, i16* %SWAP_tmp149, align 2, !dbg !7063
  %142 = load i16*, i16** %end, align 8, !dbg !7064
  %arrayidx150 = getelementptr inbounds i16, i16* %142, i64 -1, !dbg !7064
  %143 = load i16, i16* %arrayidx150, align 2, !dbg !7064
  %144 = load i16*, i16** %left, align 8, !dbg !7065
  store i16 %143, i16* %144, align 2, !dbg !7066
  %145 = load i16, i16* %SWAP_tmp149, align 2, !dbg !7067
  %146 = load i16*, i16** %end, align 8, !dbg !7068
  %arrayidx151 = getelementptr inbounds i16, i16* %146, i64 -1, !dbg !7068
  store i16 %145, i16* %arrayidx151, align 2, !dbg !7069
  br label %do.end152, !dbg !7070

do.end152:                                        ; preds = %do.body148
  %147 = load i32, i32* %checksort, align 4, !dbg !7071
  %tobool153 = icmp ne i32 %147, 0, !dbg !7071
  br i1 %tobool153, label %land.lhs.true, label %if.end176, !dbg !7074

land.lhs.true:                                    ; preds = %do.end152
  %148 = load i16*, i16** %mid, align 8, !dbg !7075
  %149 = load i16*, i16** %left, align 8, !dbg !7077
  %add.ptr154 = getelementptr inbounds i16, i16* %149, i64 -1, !dbg !7078
  %cmp155 = icmp eq i16* %148, %add.ptr154, !dbg !7079
  br i1 %cmp155, label %if.then159, label %lor.lhs.false, !dbg !7080

lor.lhs.false:                                    ; preds = %land.lhs.true
  %150 = load i16*, i16** %mid, align 8, !dbg !7081
  %151 = load i16*, i16** %left, align 8, !dbg !7083
  %cmp157 = icmp eq i16* %150, %151, !dbg !7084
  br i1 %cmp157, label %if.then159, label %if.end176, !dbg !7085

if.then159:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %152 = load i16*, i16** %start, align 8, !dbg !7086
  store i16* %152, i16** %mid, align 8, !dbg !7089
  br label %while.cond160, !dbg !7090

while.cond160:                                    ; preds = %while.body169, %if.then159
  %153 = load i16*, i16** %mid, align 8, !dbg !7091
  %154 = load i16*, i16** %end, align 8, !dbg !7093
  %cmp161 = icmp ult i16* %153, %154, !dbg !7094
  br i1 %cmp161, label %land.rhs163, label %land.end168, !dbg !7095

land.rhs163:                                      ; preds = %while.cond160
  %155 = load i16*, i16** %mid, align 8, !dbg !7096
  %156 = bitcast i16* %155 to i8*, !dbg !7096
  %157 = load i16*, i16** %mid, align 8, !dbg !7098
  %add.ptr164 = getelementptr inbounds i16, i16* %157, i64 1, !dbg !7099
  %158 = bitcast i16* %add.ptr164 to i8*, !dbg !7098
  %call165 = call i32 @qsort_comparison_function_int16(i8* %156, i8* %158), !dbg !7100
  %cmp166 = icmp sle i32 %call165, 0, !dbg !7101
  br label %land.end168

land.end168:                                      ; preds = %land.rhs163, %while.cond160
  %159 = phi i1 [ false, %while.cond160 ], [ %cmp166, %land.rhs163 ]
  br i1 %159, label %while.body169, label %while.end171, !dbg !7102

while.body169:                                    ; preds = %land.end168
  %160 = load i16*, i16** %mid, align 8, !dbg !7104
  %incdec.ptr170 = getelementptr inbounds i16, i16* %160, i32 1, !dbg !7104
  store i16* %incdec.ptr170, i16** %mid, align 8, !dbg !7104
  br label %while.cond160, !dbg !7106, !llvm.loop !7107

while.end171:                                     ; preds = %land.end168
  %161 = load i16*, i16** %mid, align 8, !dbg !7109
  %162 = load i16*, i16** %end, align 8, !dbg !7112
  %cmp172 = icmp eq i16* %161, %162, !dbg !7113
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !7109

if.then174:                                       ; preds = %while.end171
  br label %while.end216, !dbg !7114

if.end175:                                        ; preds = %while.end171
  br label %if.end176, !dbg !7116

if.end176:                                        ; preds = %if.end175, %lor.lhs.false, %do.end152
  %163 = load i16*, i16** %end, align 8, !dbg !7118
  %164 = load i16*, i16** %left, align 8, !dbg !7121
  %sub.ptr.lhs.cast177 = ptrtoint i16* %163 to i64, !dbg !7122
  %sub.ptr.rhs.cast178 = ptrtoint i16* %164 to i64, !dbg !7122
  %sub.ptr.sub179 = sub i64 %sub.ptr.lhs.cast177, %sub.ptr.rhs.cast178, !dbg !7122
  %sub.ptr.div180 = sdiv exact i64 %sub.ptr.sub179, 2, !dbg !7122
  %165 = load i16*, i16** %left, align 8, !dbg !7123
  %166 = load i16*, i16** %start, align 8, !dbg !7124
  %sub.ptr.lhs.cast181 = ptrtoint i16* %165 to i64, !dbg !7125
  %sub.ptr.rhs.cast182 = ptrtoint i16* %166 to i64, !dbg !7125
  %sub.ptr.sub183 = sub i64 %sub.ptr.lhs.cast181, %sub.ptr.rhs.cast182, !dbg !7125
  %sub.ptr.div184 = sdiv exact i64 %sub.ptr.sub183, 2, !dbg !7125
  %cmp185 = icmp slt i64 %sub.ptr.div180, %sub.ptr.div184, !dbg !7126
  br i1 %cmp185, label %if.then187, label %if.else196, !dbg !7118

if.then187:                                       ; preds = %if.end176
  %167 = load i16*, i16** %start, align 8, !dbg !7127
  %168 = bitcast i16* %167 to i8*, !dbg !7127
  %169 = load i32, i32* %sp, align 4, !dbg !7130
  %idxprom188 = sext i32 %169 to i64, !dbg !7131
  %arrayidx189 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom188, !dbg !7131
  %arrayidx190 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx189, i64 0, i64 0, !dbg !7131
  store i8* %168, i8** %arrayidx190, align 16, !dbg !7132
  %170 = load i16*, i16** %right, align 8, !dbg !7133
  %171 = bitcast i16* %170 to i8*, !dbg !7133
  %172 = load i32, i32* %sp, align 4, !dbg !7134
  %inc191 = add nsw i32 %172, 1, !dbg !7134
  store i32 %inc191, i32* %sp, align 4, !dbg !7134
  %idxprom192 = sext i32 %172 to i64, !dbg !7135
  %arrayidx193 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom192, !dbg !7135
  %arrayidx194 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx193, i64 0, i64 1, !dbg !7135
  store i8* %171, i8** %arrayidx194, align 8, !dbg !7136
  %173 = load i16*, i16** %left, align 8, !dbg !7137
  %add.ptr195 = getelementptr inbounds i16, i16* %173, i64 1, !dbg !7138
  store i16* %add.ptr195, i16** %start, align 8, !dbg !7139
  br label %if.end205, !dbg !7140

if.else196:                                       ; preds = %if.end176
  %174 = load i16*, i16** %left, align 8, !dbg !7141
  %add.ptr197 = getelementptr inbounds i16, i16* %174, i64 1, !dbg !7144
  %175 = bitcast i16* %add.ptr197 to i8*, !dbg !7141
  %176 = load i32, i32* %sp, align 4, !dbg !7145
  %idxprom198 = sext i32 %176 to i64, !dbg !7146
  %arrayidx199 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom198, !dbg !7146
  %arrayidx200 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx199, i64 0, i64 0, !dbg !7146
  store i8* %175, i8** %arrayidx200, align 16, !dbg !7147
  %177 = load i16*, i16** %end, align 8, !dbg !7148
  %178 = bitcast i16* %177 to i8*, !dbg !7148
  %179 = load i32, i32* %sp, align 4, !dbg !7149
  %inc201 = add nsw i32 %179, 1, !dbg !7149
  store i32 %inc201, i32* %sp, align 4, !dbg !7149
  %idxprom202 = sext i32 %179 to i64, !dbg !7150
  %arrayidx203 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom202, !dbg !7150
  %arrayidx204 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx203, i64 0, i64 1, !dbg !7150
  store i8* %178, i8** %arrayidx204, align 8, !dbg !7151
  %180 = load i16*, i16** %right, align 8, !dbg !7152
  store i16* %180, i16** %end, align 8, !dbg !7153
  br label %if.end205

if.end205:                                        ; preds = %if.else196, %if.then187
  br label %if.end215, !dbg !7154

if.else206:                                       ; preds = %while.body65
  %181 = load i16*, i16** %start, align 8, !dbg !7156
  %182 = bitcast i16* %181 to i8*, !dbg !7156
  %183 = load i16*, i16** %end, align 8, !dbg !7160
  %184 = bitcast i16* %183 to i8*, !dbg !7160
  %call207 = call i32 @qsort_comparison_function_int16(i8* %182, i8* %184), !dbg !7161
  %cmp208 = icmp sgt i32 %call207, 0, !dbg !7162
  br i1 %cmp208, label %if.then210, label %if.end214, !dbg !7161

if.then210:                                       ; preds = %if.else206
  br label %do.body211, !dbg !7163, !llvm.loop !7165

do.body211:                                       ; preds = %if.then210
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp212, metadata !7167, metadata !2734), !dbg !7169
  %185 = load i16*, i16** %end, align 8, !dbg !7170
  %186 = load i16, i16* %185, align 2, !dbg !7172
  store i16 %186, i16* %SWAP_tmp212, align 2, !dbg !7173
  %187 = load i16*, i16** %start, align 8, !dbg !7174
  %188 = load i16, i16* %187, align 2, !dbg !7175
  %189 = load i16*, i16** %end, align 8, !dbg !7176
  store i16 %188, i16* %189, align 2, !dbg !7177
  %190 = load i16, i16* %SWAP_tmp212, align 2, !dbg !7178
  %191 = load i16*, i16** %start, align 8, !dbg !7179
  store i16 %190, i16* %191, align 2, !dbg !7180
  br label %do.end213, !dbg !7181

do.end213:                                        ; preds = %do.body211
  br label %if.end214, !dbg !7182

if.end214:                                        ; preds = %do.end213, %if.else206
  br label %while.end216, !dbg !7184

if.end215:                                        ; preds = %if.end205
  br label %while.cond62, !dbg !7186, !llvm.loop !7188

while.end216:                                     ; preds = %if.end214, %if.then174, %if.then107, %while.cond62
  br label %while.cond, !dbg !7190, !llvm.loop !7192

while.end217:                                     ; preds = %while.cond
  br label %do.end218, !dbg !7194

do.end218:                                        ; preds = %while.end217
  %192 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7196
  %n219 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %192, i32 0, i32 19, !dbg !7197
  %arrayidx220 = getelementptr inbounds [2 x i32], [2 x i32]* %n219, i64 0, i64 0, !dbg !7196
  %193 = load i32, i32* %arrayidx220, align 32, !dbg !7196
  %194 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7198
  %num_patches221 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %194, i32 0, i32 27, !dbg !7199
  %195 = load i32, i32* %num_patches221, align 16, !dbg !7199
  %add222 = add nsw i32 %193, %195, !dbg !7200
  %sub223 = sub nsw i32 %add222, 1, !dbg !7201
  %196 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7202
  %n_lim = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %196, i32 0, i32 21, !dbg !7203
  store i32 %sub223, i32* %n_lim, align 4, !dbg !7204
  br label %while.cond224, !dbg !7205

while.cond224:                                    ; preds = %if.end269, %do.end218
  %197 = load i16*, i16** %out, align 8, !dbg !7206
  %198 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7208
  %f_tablelim225 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %198, i32 0, i32 26, !dbg !7209
  %arraydecay226 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim225, i32 0, i32 0, !dbg !7208
  %199 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7210
  %n_lim227 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %199, i32 0, i32 21, !dbg !7211
  %200 = load i32, i32* %n_lim227, align 4, !dbg !7211
  %idx.ext228 = sext i32 %200 to i64, !dbg !7212
  %add.ptr229 = getelementptr inbounds i16, i16* %arraydecay226, i64 %idx.ext228, !dbg !7212
  %cmp230 = icmp ult i16* %197, %add.ptr229, !dbg !7213
  br i1 %cmp230, label %while.body232, label %while.end270, !dbg !7214

while.body232:                                    ; preds = %while.cond224
  %201 = load i16*, i16** %in, align 8, !dbg !7215
  %202 = load i16, i16* %201, align 2, !dbg !7218
  %conv233 = zext i16 %202 to i32, !dbg !7218
  %shl = shl i32 %conv233, 23, !dbg !7219
  %203 = load i16*, i16** %out, align 8, !dbg !7220
  %204 = load i16, i16* %203, align 2, !dbg !7221
  %conv234 = zext i16 %204 to i32, !dbg !7221
  %205 = load i32, i32* %lim_bands_per_octave_warped, align 4, !dbg !7222
  %mul235 = mul nsw i32 %conv234, %205, !dbg !7223
  %cmp236 = icmp sge i32 %shl, %mul235, !dbg !7224
  br i1 %cmp236, label %if.then238, label %if.else241, !dbg !7225

if.then238:                                       ; preds = %while.body232
  %206 = load i16*, i16** %in, align 8, !dbg !7226
  %incdec.ptr239 = getelementptr inbounds i16, i16* %206, i32 1, !dbg !7226
  store i16* %incdec.ptr239, i16** %in, align 8, !dbg !7226
  %207 = load i16, i16* %206, align 2, !dbg !7228
  %208 = load i16*, i16** %out, align 8, !dbg !7229
  %incdec.ptr240 = getelementptr inbounds i16, i16* %208, i32 1, !dbg !7229
  store i16* %incdec.ptr240, i16** %out, align 8, !dbg !7229
  store i16 %207, i16* %incdec.ptr240, align 2, !dbg !7230
  br label %if.end269, !dbg !7231

if.else241:                                       ; preds = %while.body232
  %209 = load i16*, i16** %in, align 8, !dbg !7232
  %210 = load i16, i16* %209, align 2, !dbg !7235
  %conv242 = zext i16 %210 to i32, !dbg !7235
  %211 = load i16*, i16** %out, align 8, !dbg !7236
  %212 = load i16, i16* %211, align 2, !dbg !7237
  %conv243 = zext i16 %212 to i32, !dbg !7237
  %cmp244 = icmp eq i32 %conv242, %conv243, !dbg !7238
  br i1 %cmp244, label %if.then251, label %lor.lhs.false246, !dbg !7239

lor.lhs.false246:                                 ; preds = %if.else241
  %arraydecay247 = getelementptr inbounds [7 x i16], [7 x i16]* %patch_borders, i32 0, i32 0, !dbg !7240
  %213 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7241
  %num_patches248 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %213, i32 0, i32 27, !dbg !7242
  %214 = load i32, i32* %num_patches248, align 16, !dbg !7242
  %215 = load i16*, i16** %in, align 8, !dbg !7243
  %216 = load i16, i16* %215, align 2, !dbg !7244
  %call249 = call i32 @in_table_int16(i16* %arraydecay247, i32 %214, i16 signext %216), !dbg !7245
  %tobool250 = icmp ne i32 %call249, 0, !dbg !7245
  br i1 %tobool250, label %if.else255, label %if.then251, !dbg !7246

if.then251:                                       ; preds = %lor.lhs.false246, %if.else241
  %217 = load i16*, i16** %in, align 8, !dbg !7248
  %incdec.ptr252 = getelementptr inbounds i16, i16* %217, i32 1, !dbg !7248
  store i16* %incdec.ptr252, i16** %in, align 8, !dbg !7248
  %218 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7250
  %n_lim253 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %218, i32 0, i32 21, !dbg !7251
  %219 = load i32, i32* %n_lim253, align 4, !dbg !7252
  %dec254 = add nsw i32 %219, -1, !dbg !7252
  store i32 %dec254, i32* %n_lim253, align 4, !dbg !7252
  br label %if.end268, !dbg !7253

if.else255:                                       ; preds = %lor.lhs.false246
  %arraydecay256 = getelementptr inbounds [7 x i16], [7 x i16]* %patch_borders, i32 0, i32 0, !dbg !7254
  %220 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7257
  %num_patches257 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %220, i32 0, i32 27, !dbg !7258
  %221 = load i32, i32* %num_patches257, align 16, !dbg !7258
  %222 = load i16*, i16** %out, align 8, !dbg !7259
  %223 = load i16, i16* %222, align 2, !dbg !7260
  %call258 = call i32 @in_table_int16(i16* %arraydecay256, i32 %221, i16 signext %223), !dbg !7261
  %tobool259 = icmp ne i32 %call258, 0, !dbg !7261
  br i1 %tobool259, label %if.else264, label %if.then260, !dbg !7262

if.then260:                                       ; preds = %if.else255
  %224 = load i16*, i16** %in, align 8, !dbg !7263
  %incdec.ptr261 = getelementptr inbounds i16, i16* %224, i32 1, !dbg !7263
  store i16* %incdec.ptr261, i16** %in, align 8, !dbg !7263
  %225 = load i16, i16* %224, align 2, !dbg !7265
  %226 = load i16*, i16** %out, align 8, !dbg !7266
  store i16 %225, i16* %226, align 2, !dbg !7267
  %227 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7268
  %n_lim262 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %227, i32 0, i32 21, !dbg !7269
  %228 = load i32, i32* %n_lim262, align 4, !dbg !7270
  %dec263 = add nsw i32 %228, -1, !dbg !7270
  store i32 %dec263, i32* %n_lim262, align 4, !dbg !7270
  br label %if.end267, !dbg !7271

if.else264:                                       ; preds = %if.else255
  %229 = load i16*, i16** %in, align 8, !dbg !7272
  %incdec.ptr265 = getelementptr inbounds i16, i16* %229, i32 1, !dbg !7272
  store i16* %incdec.ptr265, i16** %in, align 8, !dbg !7272
  %230 = load i16, i16* %229, align 2, !dbg !7274
  %231 = load i16*, i16** %out, align 8, !dbg !7275
  %incdec.ptr266 = getelementptr inbounds i16, i16* %231, i32 1, !dbg !7275
  store i16* %incdec.ptr266, i16** %out, align 8, !dbg !7275
  store i16 %230, i16* %incdec.ptr266, align 2, !dbg !7276
  br label %if.end267

if.end267:                                        ; preds = %if.else264, %if.then260
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %if.then251
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.then238
  br label %while.cond224, !dbg !7277, !llvm.loop !7279

while.end270:                                     ; preds = %while.cond224
  br label %if.end284, !dbg !7280

if.else271:                                       ; preds = %entry
  %232 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7281
  %f_tablelow272 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %232, i32 0, i32 23, !dbg !7283
  %arrayidx273 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow272, i64 0, i64 0, !dbg !7281
  %233 = load i16, i16* %arrayidx273, align 2, !dbg !7281
  %234 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7284
  %f_tablelim274 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %234, i32 0, i32 26, !dbg !7285
  %arrayidx275 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim274, i64 0, i64 0, !dbg !7284
  store i16 %233, i16* %arrayidx275, align 2, !dbg !7286
  %235 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7287
  %n276 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %235, i32 0, i32 19, !dbg !7288
  %arrayidx277 = getelementptr inbounds [2 x i32], [2 x i32]* %n276, i64 0, i64 0, !dbg !7287
  %236 = load i32, i32* %arrayidx277, align 32, !dbg !7287
  %idxprom278 = sext i32 %236 to i64, !dbg !7289
  %237 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7289
  %f_tablelow279 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %237, i32 0, i32 23, !dbg !7290
  %arrayidx280 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow279, i64 0, i64 %idxprom278, !dbg !7289
  %238 = load i16, i16* %arrayidx280, align 2, !dbg !7289
  %239 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7291
  %f_tablelim281 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %239, i32 0, i32 26, !dbg !7292
  %arrayidx282 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim281, i64 0, i64 1, !dbg !7291
  store i16 %238, i16* %arrayidx282, align 2, !dbg !7293
  %240 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7294
  %n_lim283 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %240, i32 0, i32 21, !dbg !7295
  store i32 1, i32* %n_lim283, align 4, !dbg !7296
  br label %if.end284

if.end284:                                        ; preds = %if.else271, %while.end270
  ret void, !dbg !7297
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #5 !dbg !7298 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7302, metadata !2734), !dbg !7303
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !7304, metadata !2734), !dbg !7305
  %0 = load i32, i32* %a.addr, align 4, !dbg !7306
  %1 = load i8, i8* %s.addr, align 1, !dbg !7307
  %conv = sext i8 %1 to i32, !dbg !7307
  %sub = sub nsw i32 0, %conv, !dbg !7308
  %conv1 = trunc i32 %sub to i8, !dbg !7309
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !7306, !srcloc !7310
  store i32 %2, i32* %a.addr, align 4, !dbg !7306
  %3 = load i32, i32* %a.addr, align 4, !dbg !7311
  ret i32 %3, !dbg !7312
}

; Function Attrs: nounwind uwtable
define internal i32 @qsort_comparison_function_int16(i8* %a, i8* %b) #3 !dbg !7313 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7316, metadata !2734), !dbg !7317
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7318, metadata !2734), !dbg !7319
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7320
  %1 = bitcast i8* %0 to i16*, !dbg !7321
  %2 = load i16, i16* %1, align 2, !dbg !7322
  %conv = sext i16 %2 to i32, !dbg !7322
  %3 = load i8*, i8** %b.addr, align 8, !dbg !7323
  %4 = bitcast i8* %3 to i16*, !dbg !7324
  %5 = load i16, i16* %4, align 2, !dbg !7325
  %conv1 = sext i16 %5 to i32, !dbg !7325
  %sub = sub nsw i32 %conv, %conv1, !dbg !7326
  ret i32 %sub, !dbg !7327
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @in_table_int16(i16* %table, i32 %last_el, i16 signext %needle) #5 !dbg !7328 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca i16*, align 8
  %last_el.addr = alloca i32, align 4
  %needle.addr = alloca i16, align 2
  %i = alloca i32, align 4
  store i16* %table, i16** %table.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %table.addr, metadata !7331, metadata !2734), !dbg !7332
  store i32 %last_el, i32* %last_el.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last_el.addr, metadata !7333, metadata !2734), !dbg !7334
  store i16 %needle, i16* %needle.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %needle.addr, metadata !7335, metadata !2734), !dbg !7336
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7337, metadata !2734), !dbg !7338
  store i32 0, i32* %i, align 4, !dbg !7339
  br label %for.cond, !dbg !7341

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7342
  %1 = load i32, i32* %last_el.addr, align 4, !dbg !7345
  %cmp = icmp sle i32 %0, %1, !dbg !7346
  br i1 %cmp, label %for.body, label %for.end, !dbg !7347

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !7348
  %idxprom = sext i32 %2 to i64, !dbg !7350
  %3 = load i16*, i16** %table.addr, align 8, !dbg !7350
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !7350
  %4 = load i16, i16* %arrayidx, align 2, !dbg !7350
  %conv = sext i16 %4 to i32, !dbg !7350
  %5 = load i16, i16* %needle.addr, align 2, !dbg !7351
  %conv1 = sext i16 %5 to i32, !dbg !7351
  %cmp2 = icmp eq i32 %conv, %conv1, !dbg !7352
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7353

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !7354
  br label %return, !dbg !7354

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7355

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !7357
  %inc = add nsw i32 %6, 1, !dbg !7357
  store i32 %inc, i32* %i, align 4, !dbg !7357
  br label %for.cond, !dbg !7359, !llvm.loop !7360

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7362
  br label %return, !dbg !7362

return:                                           ; preds = %for.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !7363
  ret i32 %7, !dbg !7363
}

; Function Attrs: nounwind uwtable
define internal i32 @sbr_make_f_master(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.SpectrumParameters* %spectrum) #3 !dbg !7364 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %spectrum.addr = alloca %struct.SpectrumParameters*, align 8
  %temp = alloca i32, align 4
  %max_qmf_subbands = alloca i32, align 4
  %start_min = alloca i32, align 4
  %stop_min = alloca i32, align 4
  %k = alloca i32, align 4
  %sbr_offset_ptr = alloca i8*, align 8
  %stop_dk = alloca [13 x i16], align 16
  %stack = alloca [64 x [2 x i8*]], align 16
  %sp = alloca i32, align 4
  %start = alloca i16*, align 8
  %end = alloca i16*, align 8
  %checksort = alloca i32, align 4
  %right = alloca i16*, align 8
  %left = alloca i16*, align 8
  %mid = alloca i16*, align 8
  %SWAP_tmp = alloca i16, align 2
  %SWAP_tmp65 = alloca i16, align 2
  %SWAP_tmp74 = alloca i16, align 2
  %SWAP_tmp84 = alloca i16, align 2
  %SWAP_tmp93 = alloca i16, align 2
  %SWAP_tmp125 = alloca i16, align 2
  %SWAP_tmp132 = alloca i16, align 2
  %SWAP_tmp194 = alloca i16, align 2
  %dk = alloca i32, align 4
  %k2diff = alloca i32, align 4
  %half_bands = alloca i32, align 4
  %two_regions = alloca i32, align 4
  %num_bands_0 = alloca i32, align 4
  %vdk0_max = alloca i32, align 4
  %vdk1_min = alloca i32, align 4
  %vk0 = alloca [49 x i16], align 16
  %tmp = alloca i32, align 4
  %nz = alloca i32, align 4
  %stack435 = alloca [64 x [2 x i8*]], align 16
  %sp437 = alloca i32, align 4
  %start452 = alloca i16*, align 8
  %end458 = alloca i16*, align 8
  %checksort471 = alloca i32, align 4
  %right473 = alloca i16*, align 8
  %left476 = alloca i16*, align 8
  %mid479 = alloca i16*, align 8
  %SWAP_tmp496 = alloca i16, align 2
  %SWAP_tmp501 = alloca i16, align 2
  %SWAP_tmp511 = alloca i16, align 2
  %SWAP_tmp522 = alloca i16, align 2
  %SWAP_tmp532 = alloca i16, align 2
  %SWAP_tmp569 = alloca i16, align 2
  %SWAP_tmp577 = alloca i16, align 2
  %SWAP_tmp643 = alloca i16, align 2
  %vk1 = alloca [49 x i16], align 16
  %num_bands_1 = alloca i32, align 4
  %change = alloca i32, align 4
  %stack741 = alloca [64 x [2 x i8*]], align 16
  %sp743 = alloca i32, align 4
  %start759 = alloca i16*, align 8
  %end765 = alloca i16*, align 8
  %checksort778 = alloca i32, align 4
  %right780 = alloca i16*, align 8
  %left783 = alloca i16*, align 8
  %mid786 = alloca i16*, align 8
  %SWAP_tmp803 = alloca i16, align 2
  %SWAP_tmp808 = alloca i16, align 2
  %SWAP_tmp818 = alloca i16, align 2
  %SWAP_tmp829 = alloca i16, align 2
  %SWAP_tmp839 = alloca i16, align 2
  %SWAP_tmp876 = alloca i16, align 2
  %SWAP_tmp884 = alloca i16, align 2
  %SWAP_tmp950 = alloca i16, align 2
  %stack995 = alloca [64 x [2 x i8*]], align 16
  %sp997 = alloca i32, align 4
  %start1013 = alloca i16*, align 8
  %end1019 = alloca i16*, align 8
  %checksort1032 = alloca i32, align 4
  %right1034 = alloca i16*, align 8
  %left1037 = alloca i16*, align 8
  %mid1040 = alloca i16*, align 8
  %SWAP_tmp1057 = alloca i16, align 2
  %SWAP_tmp1062 = alloca i16, align 2
  %SWAP_tmp1072 = alloca i16, align 2
  %SWAP_tmp1083 = alloca i16, align 2
  %SWAP_tmp1093 = alloca i16, align 2
  %SWAP_tmp1130 = alloca i16, align 2
  %SWAP_tmp1138 = alloca i16, align 2
  %SWAP_tmp1204 = alloca i16, align 2
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !7368, metadata !2734), !dbg !7369
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !7370, metadata !2734), !dbg !7371
  store %struct.SpectrumParameters* %spectrum, %struct.SpectrumParameters** %spectrum.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectrumParameters** %spectrum.addr, metadata !7372, metadata !2734), !dbg !7373
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !7374, metadata !2734), !dbg !7375
  call void @llvm.dbg.declare(metadata i32* %max_qmf_subbands, metadata !7376, metadata !2734), !dbg !7377
  store i32 0, i32* %max_qmf_subbands, align 4, !dbg !7377
  call void @llvm.dbg.declare(metadata i32* %start_min, metadata !7378, metadata !2734), !dbg !7379
  call void @llvm.dbg.declare(metadata i32* %stop_min, metadata !7380, metadata !2734), !dbg !7381
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7382, metadata !2734), !dbg !7383
  call void @llvm.dbg.declare(metadata i8** %sbr_offset_ptr, metadata !7384, metadata !2734), !dbg !7386
  call void @llvm.dbg.declare(metadata [13 x i16]* %stop_dk, metadata !7387, metadata !2734), !dbg !7391
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7392
  %sample_rate = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 0, !dbg !7393
  %1 = load i32, i32* %sample_rate, align 32, !dbg !7393
  switch i32 %1, label %sw.default [
    i32 16000, label %sw.bb
    i32 22050, label %sw.bb1
    i32 24000, label %sw.bb2
    i32 32000, label %sw.bb3
    i32 44100, label %sw.bb4
    i32 48000, label %sw.bb4
    i32 64000, label %sw.bb4
    i32 88200, label %sw.bb5
    i32 96000, label %sw.bb5
    i32 128000, label %sw.bb5
    i32 176400, label %sw.bb5
    i32 192000, label %sw.bb5
  ], !dbg !7394

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([6 x [16 x i8]], [6 x [16 x i8]]* @sbr_offset, i64 0, i64 0, i32 0), i8** %sbr_offset_ptr, align 8, !dbg !7395
  br label %sw.epilog, !dbg !7397

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x [16 x i8]], [6 x [16 x i8]]* @sbr_offset, i64 0, i64 1, i32 0), i8** %sbr_offset_ptr, align 8, !dbg !7398
  br label %sw.epilog, !dbg !7399

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x [16 x i8]], [6 x [16 x i8]]* @sbr_offset, i64 0, i64 2, i32 0), i8** %sbr_offset_ptr, align 8, !dbg !7400
  br label %sw.epilog, !dbg !7401

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x [16 x i8]], [6 x [16 x i8]]* @sbr_offset, i64 0, i64 3, i32 0), i8** %sbr_offset_ptr, align 8, !dbg !7402
  br label %sw.epilog, !dbg !7403

sw.bb4:                                           ; preds = %entry, %entry, %entry
  store i8* getelementptr inbounds ([6 x [16 x i8]], [6 x [16 x i8]]* @sbr_offset, i64 0, i64 4, i32 0), i8** %sbr_offset_ptr, align 8, !dbg !7404
  br label %sw.epilog, !dbg !7405

sw.bb5:                                           ; preds = %entry, %entry, %entry, %entry, %entry
  store i8* getelementptr inbounds ([6 x [16 x i8]], [6 x [16 x i8]]* @sbr_offset, i64 0, i64 5, i32 0), i8** %sbr_offset_ptr, align 8, !dbg !7406
  br label %sw.epilog, !dbg !7407

sw.default:                                       ; preds = %entry
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7408
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 1, !dbg !7409
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7409
  %4 = bitcast %struct.AVCodecContext* %3 to i8*, !dbg !7408
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7410
  %sample_rate6 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %5, i32 0, i32 0, !dbg !7411
  %6 = load i32, i32* %sample_rate6, align 32, !dbg !7411
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i32 0, i32 0), i32 %6), !dbg !7412
  store i32 -1, i32* %retval, align 4, !dbg !7413
  br label %return, !dbg !7413

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7414
  %sample_rate7 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 0, !dbg !7416
  %8 = load i32, i32* %sample_rate7, align 32, !dbg !7416
  %cmp = icmp slt i32 %8, 32000, !dbg !7417
  br i1 %cmp, label %if.then, label %if.else, !dbg !7418

if.then:                                          ; preds = %sw.epilog
  store i32 3000, i32* %temp, align 4, !dbg !7419
  br label %if.end12, !dbg !7421

if.else:                                          ; preds = %sw.epilog
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7422
  %sample_rate8 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %9, i32 0, i32 0, !dbg !7425
  %10 = load i32, i32* %sample_rate8, align 32, !dbg !7425
  %cmp9 = icmp slt i32 %10, 64000, !dbg !7426
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !7422

if.then10:                                        ; preds = %if.else
  store i32 4000, i32* %temp, align 4, !dbg !7427
  br label %if.end, !dbg !7429

if.else11:                                        ; preds = %if.else
  store i32 5000, i32* %temp, align 4, !dbg !7430
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then10
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %11 = load i32, i32* %temp, align 4, !dbg !7431
  %shl = shl i32 %11, 7, !dbg !7432
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7433
  %sample_rate13 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 0, !dbg !7434
  %13 = load i32, i32* %sample_rate13, align 32, !dbg !7434
  %shr = ashr i32 %13, 1, !dbg !7435
  %add = add i32 %shl, %shr, !dbg !7436
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7437
  %sample_rate14 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %14, i32 0, i32 0, !dbg !7438
  %15 = load i32, i32* %sample_rate14, align 32, !dbg !7438
  %div = udiv i32 %add, %15, !dbg !7439
  store i32 %div, i32* %start_min, align 4, !dbg !7440
  %16 = load i32, i32* %temp, align 4, !dbg !7441
  %shl15 = shl i32 %16, 8, !dbg !7442
  %17 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7443
  %sample_rate16 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %17, i32 0, i32 0, !dbg !7444
  %18 = load i32, i32* %sample_rate16, align 32, !dbg !7444
  %shr17 = ashr i32 %18, 1, !dbg !7445
  %add18 = add i32 %shl15, %shr17, !dbg !7446
  %19 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7447
  %sample_rate19 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %19, i32 0, i32 0, !dbg !7448
  %20 = load i32, i32* %sample_rate19, align 32, !dbg !7448
  %div20 = udiv i32 %add18, %20, !dbg !7449
  store i32 %div20, i32* %stop_min, align 4, !dbg !7450
  %21 = load i32, i32* %start_min, align 4, !dbg !7451
  %22 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7452
  %bs_start_freq = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %22, i32 0, i32 0, !dbg !7453
  %23 = load i8, i8* %bs_start_freq, align 1, !dbg !7453
  %idxprom = zext i8 %23 to i64, !dbg !7454
  %24 = load i8*, i8** %sbr_offset_ptr, align 8, !dbg !7454
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %idxprom, !dbg !7454
  %25 = load i8, i8* %arrayidx, align 1, !dbg !7454
  %conv = sext i8 %25 to i32, !dbg !7454
  %add21 = add i32 %21, %conv, !dbg !7455
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7456
  %k22 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 12, !dbg !7457
  %arrayidx23 = getelementptr inbounds [5 x i32], [5 x i32]* %k22, i64 0, i64 0, !dbg !7456
  store i32 %add21, i32* %arrayidx23, align 4, !dbg !7458
  %27 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7459
  %bs_stop_freq = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %27, i32 0, i32 1, !dbg !7461
  %28 = load i8, i8* %bs_stop_freq, align 1, !dbg !7461
  %conv24 = zext i8 %28 to i32, !dbg !7459
  %cmp25 = icmp slt i32 %conv24, 14, !dbg !7462
  br i1 %cmp25, label %if.then27, label %if.else212, !dbg !7463

if.then27:                                        ; preds = %if.end12
  %29 = load i32, i32* %stop_min, align 4, !dbg !7464
  %30 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7466
  %k28 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %30, i32 0, i32 12, !dbg !7467
  %arrayidx29 = getelementptr inbounds [5 x i32], [5 x i32]* %k28, i64 0, i64 2, !dbg !7466
  store i32 %29, i32* %arrayidx29, align 4, !dbg !7468
  %arraydecay = getelementptr inbounds [13 x i16], [13 x i16]* %stop_dk, i32 0, i32 0, !dbg !7469
  %31 = load i32, i32* %stop_min, align 4, !dbg !7470
  call void @make_bands(i16* %arraydecay, i32 %31, i32 64, i32 13), !dbg !7471
  br label %do.body, !dbg !7472, !llvm.loop !7473

do.body:                                          ; preds = %if.then27
  call void @llvm.dbg.declare(metadata [64 x [2 x i8*]]* %stack, metadata !7474, metadata !2734), !dbg !7476
  call void @llvm.dbg.declare(metadata i32* %sp, metadata !7477, metadata !2734), !dbg !7478
  store i32 1, i32* %sp, align 4, !dbg !7479
  %arraydecay30 = getelementptr inbounds [13 x i16], [13 x i16]* %stop_dk, i32 0, i32 0, !dbg !7481
  %32 = bitcast i16* %arraydecay30 to i8*, !dbg !7481
  %arrayidx31 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !7482
  %arrayidx32 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx31, i64 0, i64 0, !dbg !7482
  store i8* %32, i8** %arrayidx32, align 16, !dbg !7483
  %arraydecay33 = getelementptr inbounds [13 x i16], [13 x i16]* %stop_dk, i32 0, i32 0, !dbg !7484
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay33, i64 13, !dbg !7485
  %add.ptr34 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !7486
  %33 = bitcast i16* %add.ptr34 to i8*, !dbg !7484
  %arrayidx35 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !7487
  %arrayidx36 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx35, i64 0, i64 1, !dbg !7487
  store i8* %33, i8** %arrayidx36, align 8, !dbg !7488
  br label %while.cond, !dbg !7489

while.cond:                                       ; preds = %while.end198, %do.body
  %34 = load i32, i32* %sp, align 4, !dbg !7490
  %tobool = icmp ne i32 %34, 0, !dbg !7492
  br i1 %tobool, label %while.body, label %while.end199, !dbg !7492

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16** %start, metadata !7493, metadata !2734), !dbg !7495
  %35 = load i32, i32* %sp, align 4, !dbg !7496
  %dec = add nsw i32 %35, -1, !dbg !7496
  store i32 %dec, i32* %sp, align 4, !dbg !7496
  %idxprom37 = sext i32 %dec to i64, !dbg !7498
  %arrayidx38 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom37, !dbg !7498
  %arrayidx39 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx38, i64 0, i64 0, !dbg !7498
  %36 = load i8*, i8** %arrayidx39, align 16, !dbg !7498
  %37 = bitcast i8* %36 to i16*, !dbg !7498
  store i16* %37, i16** %start, align 8, !dbg !7499
  call void @llvm.dbg.declare(metadata i16** %end, metadata !7500, metadata !2734), !dbg !7501
  %38 = load i32, i32* %sp, align 4, !dbg !7502
  %idxprom40 = sext i32 %38 to i64, !dbg !7503
  %arrayidx41 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom40, !dbg !7503
  %arrayidx42 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx41, i64 0, i64 1, !dbg !7503
  %39 = load i8*, i8** %arrayidx42, align 8, !dbg !7503
  %40 = bitcast i8* %39 to i16*, !dbg !7503
  store i16* %40, i16** %end, align 8, !dbg !7504
  br label %while.cond43, !dbg !7505

while.cond43:                                     ; preds = %if.end197, %while.body
  %41 = load i16*, i16** %start, align 8, !dbg !7506
  %42 = load i16*, i16** %end, align 8, !dbg !7508
  %cmp44 = icmp ult i16* %41, %42, !dbg !7509
  br i1 %cmp44, label %while.body46, label %while.end198, !dbg !7510

while.body46:                                     ; preds = %while.cond43
  %43 = load i16*, i16** %start, align 8, !dbg !7511
  %44 = load i16*, i16** %end, align 8, !dbg !7515
  %add.ptr47 = getelementptr inbounds i16, i16* %44, i64 -1, !dbg !7516
  %cmp48 = icmp ult i16* %43, %add.ptr47, !dbg !7517
  br i1 %cmp48, label %if.then50, label %if.else188, !dbg !7511

if.then50:                                        ; preds = %while.body46
  call void @llvm.dbg.declare(metadata i32* %checksort, metadata !7518, metadata !2734), !dbg !7520
  store i32 0, i32* %checksort, align 4, !dbg !7521
  call void @llvm.dbg.declare(metadata i16** %right, metadata !7523, metadata !2734), !dbg !7524
  %45 = load i16*, i16** %end, align 8, !dbg !7525
  %add.ptr51 = getelementptr inbounds i16, i16* %45, i64 -2, !dbg !7526
  store i16* %add.ptr51, i16** %right, align 8, !dbg !7527
  call void @llvm.dbg.declare(metadata i16** %left, metadata !7528, metadata !2734), !dbg !7529
  %46 = load i16*, i16** %start, align 8, !dbg !7530
  %add.ptr52 = getelementptr inbounds i16, i16* %46, i64 1, !dbg !7531
  store i16* %add.ptr52, i16** %left, align 8, !dbg !7532
  call void @llvm.dbg.declare(metadata i16** %mid, metadata !7533, metadata !2734), !dbg !7534
  %47 = load i16*, i16** %start, align 8, !dbg !7535
  %48 = load i16*, i16** %end, align 8, !dbg !7536
  %49 = load i16*, i16** %start, align 8, !dbg !7537
  %sub.ptr.lhs.cast = ptrtoint i16* %48 to i64, !dbg !7538
  %sub.ptr.rhs.cast = ptrtoint i16* %49 to i64, !dbg !7538
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7538
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !7538
  %shr53 = ashr i64 %sub.ptr.div, 1, !dbg !7539
  %add.ptr54 = getelementptr inbounds i16, i16* %47, i64 %shr53, !dbg !7540
  store i16* %add.ptr54, i16** %mid, align 8, !dbg !7541
  %50 = load i16*, i16** %start, align 8, !dbg !7542
  %51 = bitcast i16* %50 to i8*, !dbg !7542
  %52 = load i16*, i16** %end, align 8, !dbg !7543
  %53 = bitcast i16* %52 to i8*, !dbg !7543
  %call = call i32 @qsort_comparison_function_int16(i8* %51, i8* %53), !dbg !7544
  %cmp55 = icmp sgt i32 %call, 0, !dbg !7545
  br i1 %cmp55, label %if.then57, label %if.else68, !dbg !7544

if.then57:                                        ; preds = %if.then50
  %54 = load i16*, i16** %end, align 8, !dbg !7546
  %55 = bitcast i16* %54 to i8*, !dbg !7546
  %56 = load i16*, i16** %mid, align 8, !dbg !7551
  %57 = bitcast i16* %56 to i8*, !dbg !7551
  %call58 = call i32 @qsort_comparison_function_int16(i8* %55, i8* %57), !dbg !7552
  %cmp59 = icmp sgt i32 %call58, 0, !dbg !7553
  br i1 %cmp59, label %if.then61, label %if.else63, !dbg !7552

if.then61:                                        ; preds = %if.then57
  br label %do.body62, !dbg !7554, !llvm.loop !7556

do.body62:                                        ; preds = %if.then61
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp, metadata !7558, metadata !2734), !dbg !7560
  %58 = load i16*, i16** %mid, align 8, !dbg !7561
  %59 = load i16, i16* %58, align 2, !dbg !7563
  store i16 %59, i16* %SWAP_tmp, align 2, !dbg !7564
  %60 = load i16*, i16** %start, align 8, !dbg !7565
  %61 = load i16, i16* %60, align 2, !dbg !7566
  %62 = load i16*, i16** %mid, align 8, !dbg !7567
  store i16 %61, i16* %62, align 2, !dbg !7568
  %63 = load i16, i16* %SWAP_tmp, align 2, !dbg !7569
  %64 = load i16*, i16** %start, align 8, !dbg !7570
  store i16 %63, i16* %64, align 2, !dbg !7571
  br label %do.end, !dbg !7572

do.end:                                           ; preds = %do.body62
  br label %if.end67, !dbg !7573

if.else63:                                        ; preds = %if.then57
  br label %do.body64, !dbg !7575, !llvm.loop !7577

do.body64:                                        ; preds = %if.else63
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp65, metadata !7579, metadata !2734), !dbg !7581
  %65 = load i16*, i16** %end, align 8, !dbg !7582
  %66 = load i16, i16* %65, align 2, !dbg !7584
  store i16 %66, i16* %SWAP_tmp65, align 2, !dbg !7585
  %67 = load i16*, i16** %start, align 8, !dbg !7586
  %68 = load i16, i16* %67, align 2, !dbg !7587
  %69 = load i16*, i16** %end, align 8, !dbg !7588
  store i16 %68, i16* %69, align 2, !dbg !7589
  %70 = load i16, i16* %SWAP_tmp65, align 2, !dbg !7590
  %71 = load i16*, i16** %start, align 8, !dbg !7591
  store i16 %70, i16* %71, align 2, !dbg !7592
  br label %do.end66, !dbg !7593

do.end66:                                         ; preds = %do.body64
  br label %if.end67

if.end67:                                         ; preds = %do.end66, %do.end
  br label %if.end78, !dbg !7594

if.else68:                                        ; preds = %if.then50
  %72 = load i16*, i16** %start, align 8, !dbg !7596
  %73 = bitcast i16* %72 to i8*, !dbg !7596
  %74 = load i16*, i16** %mid, align 8, !dbg !7600
  %75 = bitcast i16* %74 to i8*, !dbg !7600
  %call69 = call i32 @qsort_comparison_function_int16(i8* %73, i8* %75), !dbg !7601
  %cmp70 = icmp sgt i32 %call69, 0, !dbg !7602
  br i1 %cmp70, label %if.then72, label %if.else76, !dbg !7601

if.then72:                                        ; preds = %if.else68
  br label %do.body73, !dbg !7603, !llvm.loop !7605

do.body73:                                        ; preds = %if.then72
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp74, metadata !7607, metadata !2734), !dbg !7609
  %76 = load i16*, i16** %mid, align 8, !dbg !7610
  %77 = load i16, i16* %76, align 2, !dbg !7612
  store i16 %77, i16* %SWAP_tmp74, align 2, !dbg !7613
  %78 = load i16*, i16** %start, align 8, !dbg !7614
  %79 = load i16, i16* %78, align 2, !dbg !7615
  %80 = load i16*, i16** %mid, align 8, !dbg !7616
  store i16 %79, i16* %80, align 2, !dbg !7617
  %81 = load i16, i16* %SWAP_tmp74, align 2, !dbg !7618
  %82 = load i16*, i16** %start, align 8, !dbg !7619
  store i16 %81, i16* %82, align 2, !dbg !7620
  br label %do.end75, !dbg !7621

do.end75:                                         ; preds = %do.body73
  br label %if.end77, !dbg !7622

if.else76:                                        ; preds = %if.else68
  store i32 1, i32* %checksort, align 4, !dbg !7624
  br label %if.end77

if.end77:                                         ; preds = %if.else76, %do.end75
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.end67
  %83 = load i16*, i16** %mid, align 8, !dbg !7626
  %84 = bitcast i16* %83 to i8*, !dbg !7626
  %85 = load i16*, i16** %end, align 8, !dbg !7629
  %86 = bitcast i16* %85 to i8*, !dbg !7629
  %call79 = call i32 @qsort_comparison_function_int16(i8* %84, i8* %86), !dbg !7630
  %cmp80 = icmp sgt i32 %call79, 0, !dbg !7631
  br i1 %cmp80, label %if.then82, label %if.end86, !dbg !7630

if.then82:                                        ; preds = %if.end78
  br label %do.body83, !dbg !7632, !llvm.loop !7635

do.body83:                                        ; preds = %if.then82
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp84, metadata !7637, metadata !2734), !dbg !7639
  %87 = load i16*, i16** %end, align 8, !dbg !7640
  %88 = load i16, i16* %87, align 2, !dbg !7642
  store i16 %88, i16* %SWAP_tmp84, align 2, !dbg !7643
  %89 = load i16*, i16** %mid, align 8, !dbg !7644
  %90 = load i16, i16* %89, align 2, !dbg !7645
  %91 = load i16*, i16** %end, align 8, !dbg !7646
  store i16 %90, i16* %91, align 2, !dbg !7647
  %92 = load i16, i16* %SWAP_tmp84, align 2, !dbg !7648
  %93 = load i16*, i16** %mid, align 8, !dbg !7649
  store i16 %92, i16* %93, align 2, !dbg !7650
  br label %do.end85, !dbg !7651

do.end85:                                         ; preds = %do.body83
  store i32 0, i32* %checksort, align 4, !dbg !7652
  br label %if.end86, !dbg !7654

if.end86:                                         ; preds = %do.end85, %if.end78
  %94 = load i16*, i16** %start, align 8, !dbg !7655
  %95 = load i16*, i16** %end, align 8, !dbg !7658
  %add.ptr87 = getelementptr inbounds i16, i16* %95, i64 -2, !dbg !7659
  %cmp88 = icmp eq i16* %94, %add.ptr87, !dbg !7660
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !7655

if.then90:                                        ; preds = %if.end86
  br label %while.end198, !dbg !7661

if.end91:                                         ; preds = %if.end86
  br label %do.body92, !dbg !7663, !llvm.loop !7665

do.body92:                                        ; preds = %if.end91
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp93, metadata !7667, metadata !2734), !dbg !7669
  %96 = load i16*, i16** %mid, align 8, !dbg !7670
  %97 = load i16, i16* %96, align 2, !dbg !7672
  store i16 %97, i16* %SWAP_tmp93, align 2, !dbg !7673
  %98 = load i16*, i16** %end, align 8, !dbg !7674
  %arrayidx94 = getelementptr inbounds i16, i16* %98, i64 -1, !dbg !7674
  %99 = load i16, i16* %arrayidx94, align 2, !dbg !7674
  %100 = load i16*, i16** %mid, align 8, !dbg !7675
  store i16 %99, i16* %100, align 2, !dbg !7676
  %101 = load i16, i16* %SWAP_tmp93, align 2, !dbg !7677
  %102 = load i16*, i16** %end, align 8, !dbg !7678
  %arrayidx95 = getelementptr inbounds i16, i16* %102, i64 -1, !dbg !7678
  store i16 %101, i16* %arrayidx95, align 2, !dbg !7679
  br label %do.end96, !dbg !7680

do.end96:                                         ; preds = %do.body92
  br label %while.cond97, !dbg !7681

while.cond97:                                     ; preds = %if.end129, %do.end96
  %103 = load i16*, i16** %left, align 8, !dbg !7683
  %104 = load i16*, i16** %right, align 8, !dbg !7685
  %cmp98 = icmp ule i16* %103, %104, !dbg !7686
  br i1 %cmp98, label %while.body100, label %while.end130, !dbg !7687

while.body100:                                    ; preds = %while.cond97
  br label %while.cond101, !dbg !7688

while.cond101:                                    ; preds = %while.body108, %while.body100
  %105 = load i16*, i16** %left, align 8, !dbg !7691
  %106 = load i16*, i16** %right, align 8, !dbg !7693
  %cmp102 = icmp ule i16* %105, %106, !dbg !7694
  br i1 %cmp102, label %land.rhs, label %land.end, !dbg !7695

land.rhs:                                         ; preds = %while.cond101
  %107 = load i16*, i16** %left, align 8, !dbg !7696
  %108 = bitcast i16* %107 to i8*, !dbg !7696
  %109 = load i16*, i16** %end, align 8, !dbg !7698
  %add.ptr104 = getelementptr inbounds i16, i16* %109, i64 -1, !dbg !7699
  %110 = bitcast i16* %add.ptr104 to i8*, !dbg !7698
  %call105 = call i32 @qsort_comparison_function_int16(i8* %108, i8* %110), !dbg !7700
  %cmp106 = icmp slt i32 %call105, 0, !dbg !7701
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond101
  %111 = phi i1 [ false, %while.cond101 ], [ %cmp106, %land.rhs ]
  br i1 %111, label %while.body108, label %while.end, !dbg !7702

while.body108:                                    ; preds = %land.end
  %112 = load i16*, i16** %left, align 8, !dbg !7704
  %incdec.ptr = getelementptr inbounds i16, i16* %112, i32 1, !dbg !7704
  store i16* %incdec.ptr, i16** %left, align 8, !dbg !7704
  br label %while.cond101, !dbg !7706, !llvm.loop !7707

while.end:                                        ; preds = %land.end
  br label %while.cond109, !dbg !7709

while.cond109:                                    ; preds = %while.body118, %while.end
  %113 = load i16*, i16** %left, align 8, !dbg !7711
  %114 = load i16*, i16** %right, align 8, !dbg !7713
  %cmp110 = icmp ule i16* %113, %114, !dbg !7714
  br i1 %cmp110, label %land.rhs112, label %land.end117, !dbg !7715

land.rhs112:                                      ; preds = %while.cond109
  %115 = load i16*, i16** %right, align 8, !dbg !7716
  %116 = bitcast i16* %115 to i8*, !dbg !7716
  %117 = load i16*, i16** %end, align 8, !dbg !7718
  %add.ptr113 = getelementptr inbounds i16, i16* %117, i64 -1, !dbg !7719
  %118 = bitcast i16* %add.ptr113 to i8*, !dbg !7718
  %call114 = call i32 @qsort_comparison_function_int16(i8* %116, i8* %118), !dbg !7720
  %cmp115 = icmp sgt i32 %call114, 0, !dbg !7721
  br label %land.end117

land.end117:                                      ; preds = %land.rhs112, %while.cond109
  %119 = phi i1 [ false, %while.cond109 ], [ %cmp115, %land.rhs112 ]
  br i1 %119, label %while.body118, label %while.end120, !dbg !7722

while.body118:                                    ; preds = %land.end117
  %120 = load i16*, i16** %right, align 8, !dbg !7724
  %incdec.ptr119 = getelementptr inbounds i16, i16* %120, i32 -1, !dbg !7724
  store i16* %incdec.ptr119, i16** %right, align 8, !dbg !7724
  br label %while.cond109, !dbg !7726, !llvm.loop !7727

while.end120:                                     ; preds = %land.end117
  %121 = load i16*, i16** %left, align 8, !dbg !7729
  %122 = load i16*, i16** %right, align 8, !dbg !7732
  %cmp121 = icmp ule i16* %121, %122, !dbg !7733
  br i1 %cmp121, label %if.then123, label %if.end129, !dbg !7729

if.then123:                                       ; preds = %while.end120
  br label %do.body124, !dbg !7734, !llvm.loop !7737

do.body124:                                       ; preds = %if.then123
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp125, metadata !7739, metadata !2734), !dbg !7741
  %123 = load i16*, i16** %right, align 8, !dbg !7742
  %124 = load i16, i16* %123, align 2, !dbg !7744
  store i16 %124, i16* %SWAP_tmp125, align 2, !dbg !7745
  %125 = load i16*, i16** %left, align 8, !dbg !7746
  %126 = load i16, i16* %125, align 2, !dbg !7747
  %127 = load i16*, i16** %right, align 8, !dbg !7748
  store i16 %126, i16* %127, align 2, !dbg !7749
  %128 = load i16, i16* %SWAP_tmp125, align 2, !dbg !7750
  %129 = load i16*, i16** %left, align 8, !dbg !7751
  store i16 %128, i16* %129, align 2, !dbg !7752
  br label %do.end126, !dbg !7753

do.end126:                                        ; preds = %do.body124
  %130 = load i16*, i16** %left, align 8, !dbg !7754
  %incdec.ptr127 = getelementptr inbounds i16, i16* %130, i32 1, !dbg !7754
  store i16* %incdec.ptr127, i16** %left, align 8, !dbg !7754
  %131 = load i16*, i16** %right, align 8, !dbg !7756
  %incdec.ptr128 = getelementptr inbounds i16, i16* %131, i32 -1, !dbg !7756
  store i16* %incdec.ptr128, i16** %right, align 8, !dbg !7756
  br label %if.end129, !dbg !7757

if.end129:                                        ; preds = %do.end126, %while.end120
  br label %while.cond97, !dbg !7758, !llvm.loop !7760

while.end130:                                     ; preds = %while.cond97
  br label %do.body131, !dbg !7762, !llvm.loop !7764

do.body131:                                       ; preds = %while.end130
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp132, metadata !7766, metadata !2734), !dbg !7768
  %132 = load i16*, i16** %left, align 8, !dbg !7769
  %133 = load i16, i16* %132, align 2, !dbg !7771
  store i16 %133, i16* %SWAP_tmp132, align 2, !dbg !7772
  %134 = load i16*, i16** %end, align 8, !dbg !7773
  %arrayidx133 = getelementptr inbounds i16, i16* %134, i64 -1, !dbg !7773
  %135 = load i16, i16* %arrayidx133, align 2, !dbg !7773
  %136 = load i16*, i16** %left, align 8, !dbg !7774
  store i16 %135, i16* %136, align 2, !dbg !7775
  %137 = load i16, i16* %SWAP_tmp132, align 2, !dbg !7776
  %138 = load i16*, i16** %end, align 8, !dbg !7777
  %arrayidx134 = getelementptr inbounds i16, i16* %138, i64 -1, !dbg !7777
  store i16 %137, i16* %arrayidx134, align 2, !dbg !7778
  br label %do.end135, !dbg !7779

do.end135:                                        ; preds = %do.body131
  %139 = load i32, i32* %checksort, align 4, !dbg !7780
  %tobool136 = icmp ne i32 %139, 0, !dbg !7780
  br i1 %tobool136, label %land.lhs.true, label %if.end159, !dbg !7783

land.lhs.true:                                    ; preds = %do.end135
  %140 = load i16*, i16** %mid, align 8, !dbg !7784
  %141 = load i16*, i16** %left, align 8, !dbg !7786
  %add.ptr137 = getelementptr inbounds i16, i16* %141, i64 -1, !dbg !7787
  %cmp138 = icmp eq i16* %140, %add.ptr137, !dbg !7788
  br i1 %cmp138, label %if.then142, label %lor.lhs.false, !dbg !7789

lor.lhs.false:                                    ; preds = %land.lhs.true
  %142 = load i16*, i16** %mid, align 8, !dbg !7790
  %143 = load i16*, i16** %left, align 8, !dbg !7792
  %cmp140 = icmp eq i16* %142, %143, !dbg !7793
  br i1 %cmp140, label %if.then142, label %if.end159, !dbg !7794

if.then142:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %144 = load i16*, i16** %start, align 8, !dbg !7795
  store i16* %144, i16** %mid, align 8, !dbg !7798
  br label %while.cond143, !dbg !7799

while.cond143:                                    ; preds = %while.body152, %if.then142
  %145 = load i16*, i16** %mid, align 8, !dbg !7800
  %146 = load i16*, i16** %end, align 8, !dbg !7802
  %cmp144 = icmp ult i16* %145, %146, !dbg !7803
  br i1 %cmp144, label %land.rhs146, label %land.end151, !dbg !7804

land.rhs146:                                      ; preds = %while.cond143
  %147 = load i16*, i16** %mid, align 8, !dbg !7805
  %148 = bitcast i16* %147 to i8*, !dbg !7805
  %149 = load i16*, i16** %mid, align 8, !dbg !7807
  %add.ptr147 = getelementptr inbounds i16, i16* %149, i64 1, !dbg !7808
  %150 = bitcast i16* %add.ptr147 to i8*, !dbg !7807
  %call148 = call i32 @qsort_comparison_function_int16(i8* %148, i8* %150), !dbg !7809
  %cmp149 = icmp sle i32 %call148, 0, !dbg !7810
  br label %land.end151

land.end151:                                      ; preds = %land.rhs146, %while.cond143
  %151 = phi i1 [ false, %while.cond143 ], [ %cmp149, %land.rhs146 ]
  br i1 %151, label %while.body152, label %while.end154, !dbg !7811

while.body152:                                    ; preds = %land.end151
  %152 = load i16*, i16** %mid, align 8, !dbg !7813
  %incdec.ptr153 = getelementptr inbounds i16, i16* %152, i32 1, !dbg !7813
  store i16* %incdec.ptr153, i16** %mid, align 8, !dbg !7813
  br label %while.cond143, !dbg !7815, !llvm.loop !7816

while.end154:                                     ; preds = %land.end151
  %153 = load i16*, i16** %mid, align 8, !dbg !7818
  %154 = load i16*, i16** %end, align 8, !dbg !7821
  %cmp155 = icmp eq i16* %153, %154, !dbg !7822
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !7818

if.then157:                                       ; preds = %while.end154
  br label %while.end198, !dbg !7823

if.end158:                                        ; preds = %while.end154
  br label %if.end159, !dbg !7825

if.end159:                                        ; preds = %if.end158, %lor.lhs.false, %do.end135
  %155 = load i16*, i16** %end, align 8, !dbg !7827
  %156 = load i16*, i16** %left, align 8, !dbg !7830
  %sub.ptr.lhs.cast160 = ptrtoint i16* %155 to i64, !dbg !7831
  %sub.ptr.rhs.cast161 = ptrtoint i16* %156 to i64, !dbg !7831
  %sub.ptr.sub162 = sub i64 %sub.ptr.lhs.cast160, %sub.ptr.rhs.cast161, !dbg !7831
  %sub.ptr.div163 = sdiv exact i64 %sub.ptr.sub162, 2, !dbg !7831
  %157 = load i16*, i16** %left, align 8, !dbg !7832
  %158 = load i16*, i16** %start, align 8, !dbg !7833
  %sub.ptr.lhs.cast164 = ptrtoint i16* %157 to i64, !dbg !7834
  %sub.ptr.rhs.cast165 = ptrtoint i16* %158 to i64, !dbg !7834
  %sub.ptr.sub166 = sub i64 %sub.ptr.lhs.cast164, %sub.ptr.rhs.cast165, !dbg !7834
  %sub.ptr.div167 = sdiv exact i64 %sub.ptr.sub166, 2, !dbg !7834
  %cmp168 = icmp slt i64 %sub.ptr.div163, %sub.ptr.div167, !dbg !7835
  br i1 %cmp168, label %if.then170, label %if.else178, !dbg !7827

if.then170:                                       ; preds = %if.end159
  %159 = load i16*, i16** %start, align 8, !dbg !7836
  %160 = bitcast i16* %159 to i8*, !dbg !7836
  %161 = load i32, i32* %sp, align 4, !dbg !7839
  %idxprom171 = sext i32 %161 to i64, !dbg !7840
  %arrayidx172 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom171, !dbg !7840
  %arrayidx173 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx172, i64 0, i64 0, !dbg !7840
  store i8* %160, i8** %arrayidx173, align 16, !dbg !7841
  %162 = load i16*, i16** %right, align 8, !dbg !7842
  %163 = bitcast i16* %162 to i8*, !dbg !7842
  %164 = load i32, i32* %sp, align 4, !dbg !7843
  %inc = add nsw i32 %164, 1, !dbg !7843
  store i32 %inc, i32* %sp, align 4, !dbg !7843
  %idxprom174 = sext i32 %164 to i64, !dbg !7844
  %arrayidx175 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom174, !dbg !7844
  %arrayidx176 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx175, i64 0, i64 1, !dbg !7844
  store i8* %163, i8** %arrayidx176, align 8, !dbg !7845
  %165 = load i16*, i16** %left, align 8, !dbg !7846
  %add.ptr177 = getelementptr inbounds i16, i16* %165, i64 1, !dbg !7847
  store i16* %add.ptr177, i16** %start, align 8, !dbg !7848
  br label %if.end187, !dbg !7849

if.else178:                                       ; preds = %if.end159
  %166 = load i16*, i16** %left, align 8, !dbg !7850
  %add.ptr179 = getelementptr inbounds i16, i16* %166, i64 1, !dbg !7853
  %167 = bitcast i16* %add.ptr179 to i8*, !dbg !7850
  %168 = load i32, i32* %sp, align 4, !dbg !7854
  %idxprom180 = sext i32 %168 to i64, !dbg !7855
  %arrayidx181 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom180, !dbg !7855
  %arrayidx182 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx181, i64 0, i64 0, !dbg !7855
  store i8* %167, i8** %arrayidx182, align 16, !dbg !7856
  %169 = load i16*, i16** %end, align 8, !dbg !7857
  %170 = bitcast i16* %169 to i8*, !dbg !7857
  %171 = load i32, i32* %sp, align 4, !dbg !7858
  %inc183 = add nsw i32 %171, 1, !dbg !7858
  store i32 %inc183, i32* %sp, align 4, !dbg !7858
  %idxprom184 = sext i32 %171 to i64, !dbg !7859
  %arrayidx185 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom184, !dbg !7859
  %arrayidx186 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx185, i64 0, i64 1, !dbg !7859
  store i8* %170, i8** %arrayidx186, align 8, !dbg !7860
  %172 = load i16*, i16** %right, align 8, !dbg !7861
  store i16* %172, i16** %end, align 8, !dbg !7862
  br label %if.end187

if.end187:                                        ; preds = %if.else178, %if.then170
  br label %if.end197, !dbg !7863

if.else188:                                       ; preds = %while.body46
  %173 = load i16*, i16** %start, align 8, !dbg !7865
  %174 = bitcast i16* %173 to i8*, !dbg !7865
  %175 = load i16*, i16** %end, align 8, !dbg !7869
  %176 = bitcast i16* %175 to i8*, !dbg !7869
  %call189 = call i32 @qsort_comparison_function_int16(i8* %174, i8* %176), !dbg !7870
  %cmp190 = icmp sgt i32 %call189, 0, !dbg !7871
  br i1 %cmp190, label %if.then192, label %if.end196, !dbg !7870

if.then192:                                       ; preds = %if.else188
  br label %do.body193, !dbg !7872, !llvm.loop !7874

do.body193:                                       ; preds = %if.then192
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp194, metadata !7876, metadata !2734), !dbg !7878
  %177 = load i16*, i16** %end, align 8, !dbg !7879
  %178 = load i16, i16* %177, align 2, !dbg !7881
  store i16 %178, i16* %SWAP_tmp194, align 2, !dbg !7882
  %179 = load i16*, i16** %start, align 8, !dbg !7883
  %180 = load i16, i16* %179, align 2, !dbg !7884
  %181 = load i16*, i16** %end, align 8, !dbg !7885
  store i16 %180, i16* %181, align 2, !dbg !7886
  %182 = load i16, i16* %SWAP_tmp194, align 2, !dbg !7887
  %183 = load i16*, i16** %start, align 8, !dbg !7888
  store i16 %182, i16* %183, align 2, !dbg !7889
  br label %do.end195, !dbg !7890

do.end195:                                        ; preds = %do.body193
  br label %if.end196, !dbg !7891

if.end196:                                        ; preds = %do.end195, %if.else188
  br label %while.end198, !dbg !7893

if.end197:                                        ; preds = %if.end187
  br label %while.cond43, !dbg !7895, !llvm.loop !7897

while.end198:                                     ; preds = %if.end196, %if.then157, %if.then90, %while.cond43
  br label %while.cond, !dbg !7899, !llvm.loop !7901

while.end199:                                     ; preds = %while.cond
  br label %do.end200, !dbg !7903

do.end200:                                        ; preds = %while.end199
  store i32 0, i32* %k, align 4, !dbg !7905
  br label %for.cond, !dbg !7907

for.cond:                                         ; preds = %for.inc, %do.end200
  %184 = load i32, i32* %k, align 4, !dbg !7908
  %185 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7911
  %bs_stop_freq201 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %185, i32 0, i32 1, !dbg !7912
  %186 = load i8, i8* %bs_stop_freq201, align 1, !dbg !7912
  %conv202 = zext i8 %186 to i32, !dbg !7911
  %cmp203 = icmp slt i32 %184, %conv202, !dbg !7913
  br i1 %cmp203, label %for.body, label %for.end, !dbg !7914

for.body:                                         ; preds = %for.cond
  %187 = load i32, i32* %k, align 4, !dbg !7915
  %idxprom205 = sext i32 %187 to i64, !dbg !7916
  %arrayidx206 = getelementptr inbounds [13 x i16], [13 x i16]* %stop_dk, i64 0, i64 %idxprom205, !dbg !7916
  %188 = load i16, i16* %arrayidx206, align 2, !dbg !7916
  %conv207 = sext i16 %188 to i32, !dbg !7916
  %189 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7917
  %k208 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %189, i32 0, i32 12, !dbg !7918
  %arrayidx209 = getelementptr inbounds [5 x i32], [5 x i32]* %k208, i64 0, i64 2, !dbg !7917
  %190 = load i32, i32* %arrayidx209, align 4, !dbg !7919
  %add210 = add nsw i32 %190, %conv207, !dbg !7919
  store i32 %add210, i32* %arrayidx209, align 4, !dbg !7919
  br label %for.inc, !dbg !7917

for.inc:                                          ; preds = %for.body
  %191 = load i32, i32* %k, align 4, !dbg !7920
  %inc211 = add nsw i32 %191, 1, !dbg !7920
  store i32 %inc211, i32* %k, align 4, !dbg !7920
  br label %for.cond, !dbg !7922, !llvm.loop !7923

for.end:                                          ; preds = %for.cond
  br label %if.end239, !dbg !7925

if.else212:                                       ; preds = %if.end12
  %192 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7926
  %bs_stop_freq213 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %192, i32 0, i32 1, !dbg !7929
  %193 = load i8, i8* %bs_stop_freq213, align 1, !dbg !7929
  %conv214 = zext i8 %193 to i32, !dbg !7926
  %cmp215 = icmp eq i32 %conv214, 14, !dbg !7930
  br i1 %cmp215, label %if.then217, label %if.else222, !dbg !7926

if.then217:                                       ; preds = %if.else212
  %194 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7931
  %k218 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %194, i32 0, i32 12, !dbg !7933
  %arrayidx219 = getelementptr inbounds [5 x i32], [5 x i32]* %k218, i64 0, i64 0, !dbg !7931
  %195 = load i32, i32* %arrayidx219, align 4, !dbg !7931
  %mul = mul nsw i32 2, %195, !dbg !7934
  %196 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7935
  %k220 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %196, i32 0, i32 12, !dbg !7936
  %arrayidx221 = getelementptr inbounds [5 x i32], [5 x i32]* %k220, i64 0, i64 2, !dbg !7935
  store i32 %mul, i32* %arrayidx221, align 4, !dbg !7937
  br label %if.end238, !dbg !7938

if.else222:                                       ; preds = %if.else212
  %197 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7939
  %bs_stop_freq223 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %197, i32 0, i32 1, !dbg !7942
  %198 = load i8, i8* %bs_stop_freq223, align 1, !dbg !7942
  %conv224 = zext i8 %198 to i32, !dbg !7939
  %cmp225 = icmp eq i32 %conv224, 15, !dbg !7943
  br i1 %cmp225, label %if.then227, label %if.else233, !dbg !7939

if.then227:                                       ; preds = %if.else222
  %199 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7944
  %k228 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %199, i32 0, i32 12, !dbg !7946
  %arrayidx229 = getelementptr inbounds [5 x i32], [5 x i32]* %k228, i64 0, i64 0, !dbg !7944
  %200 = load i32, i32* %arrayidx229, align 4, !dbg !7944
  %mul230 = mul nsw i32 3, %200, !dbg !7947
  %201 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7948
  %k231 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %201, i32 0, i32 12, !dbg !7949
  %arrayidx232 = getelementptr inbounds [5 x i32], [5 x i32]* %k231, i64 0, i64 2, !dbg !7948
  store i32 %mul230, i32* %arrayidx232, align 4, !dbg !7950
  br label %if.end237, !dbg !7951

if.else233:                                       ; preds = %if.else222
  %202 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7952
  %avctx234 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %202, i32 0, i32 1, !dbg !7954
  %203 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx234, align 8, !dbg !7954
  %204 = bitcast %struct.AVCodecContext* %203 to i8*, !dbg !7952
  %205 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7955
  %bs_stop_freq235 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %205, i32 0, i32 1, !dbg !7956
  %206 = load i8, i8* %bs_stop_freq235, align 1, !dbg !7956
  %conv236 = zext i8 %206 to i32, !dbg !7955
  call void (i8*, i32, i8*, ...) @av_log(i8* %204, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i32 0, i32 0), i32 %conv236), !dbg !7957
  store i32 -1, i32* %retval, align 4, !dbg !7958
  br label %return, !dbg !7958

if.end237:                                        ; preds = %if.then227
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %if.then217
  br label %if.end239

if.end239:                                        ; preds = %if.end238, %for.end
  %207 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7959
  %k240 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %207, i32 0, i32 12, !dbg !7960
  %arrayidx241 = getelementptr inbounds [5 x i32], [5 x i32]* %k240, i64 0, i64 2, !dbg !7959
  %208 = load i32, i32* %arrayidx241, align 4, !dbg !7959
  %cmp242 = icmp sgt i32 64, %208, !dbg !7961
  br i1 %cmp242, label %cond.true, label %cond.false, !dbg !7962

cond.true:                                        ; preds = %if.end239
  %209 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7963
  %k244 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %209, i32 0, i32 12, !dbg !7965
  %arrayidx245 = getelementptr inbounds [5 x i32], [5 x i32]* %k244, i64 0, i64 2, !dbg !7963
  %210 = load i32, i32* %arrayidx245, align 4, !dbg !7963
  br label %cond.end, !dbg !7966

cond.false:                                       ; preds = %if.end239
  br label %cond.end, !dbg !7967

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %210, %cond.true ], [ 64, %cond.false ], !dbg !7969
  %211 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7971
  %k246 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %211, i32 0, i32 12, !dbg !7972
  %arrayidx247 = getelementptr inbounds [5 x i32], [5 x i32]* %k246, i64 0, i64 2, !dbg !7971
  store i32 %cond, i32* %arrayidx247, align 4, !dbg !7973
  %212 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7974
  %sample_rate248 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %212, i32 0, i32 0, !dbg !7976
  %213 = load i32, i32* %sample_rate248, align 32, !dbg !7976
  %cmp249 = icmp sle i32 %213, 32000, !dbg !7977
  br i1 %cmp249, label %if.then251, label %if.else252, !dbg !7978

if.then251:                                       ; preds = %cond.end
  store i32 48, i32* %max_qmf_subbands, align 4, !dbg !7979
  br label %if.end267, !dbg !7981

if.else252:                                       ; preds = %cond.end
  %214 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7982
  %sample_rate253 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %214, i32 0, i32 0, !dbg !7985
  %215 = load i32, i32* %sample_rate253, align 32, !dbg !7985
  %cmp254 = icmp eq i32 %215, 44100, !dbg !7986
  br i1 %cmp254, label %if.then256, label %if.else257, !dbg !7982

if.then256:                                       ; preds = %if.else252
  store i32 35, i32* %max_qmf_subbands, align 4, !dbg !7987
  br label %if.end266, !dbg !7989

if.else257:                                       ; preds = %if.else252
  %216 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7990
  %sample_rate258 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %216, i32 0, i32 0, !dbg !7993
  %217 = load i32, i32* %sample_rate258, align 32, !dbg !7993
  %cmp259 = icmp sge i32 %217, 48000, !dbg !7994
  br i1 %cmp259, label %if.then261, label %if.else262, !dbg !7990

if.then261:                                       ; preds = %if.else257
  store i32 32, i32* %max_qmf_subbands, align 4, !dbg !7995
  br label %if.end265, !dbg !7996

if.else262:                                       ; preds = %if.else257
  br label %do.body263, !dbg !7997, !llvm.loop !7998

do.body263:                                       ; preds = %if.else262
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i32 338), !dbg !7999
  call void @abort() #11, !dbg !8004
  unreachable, !dbg !8006

do.end264:                                        ; No predecessors!
  br label %if.end265

if.end265:                                        ; preds = %do.end264, %if.then261
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.then256
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %if.then251
  %218 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8007
  %k268 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %218, i32 0, i32 12, !dbg !8009
  %arrayidx269 = getelementptr inbounds [5 x i32], [5 x i32]* %k268, i64 0, i64 2, !dbg !8007
  %219 = load i32, i32* %arrayidx269, align 4, !dbg !8007
  %220 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8010
  %k270 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %220, i32 0, i32 12, !dbg !8011
  %arrayidx271 = getelementptr inbounds [5 x i32], [5 x i32]* %k270, i64 0, i64 0, !dbg !8010
  %221 = load i32, i32* %arrayidx271, align 4, !dbg !8010
  %sub = sub nsw i32 %219, %221, !dbg !8012
  %222 = load i32, i32* %max_qmf_subbands, align 4, !dbg !8013
  %cmp272 = icmp ugt i32 %sub, %222, !dbg !8014
  br i1 %cmp272, label %if.then274, label %if.end281, !dbg !8015

if.then274:                                       ; preds = %if.end267
  %223 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8016
  %avctx275 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %223, i32 0, i32 1, !dbg !8018
  %224 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx275, align 8, !dbg !8018
  %225 = bitcast %struct.AVCodecContext* %224 to i8*, !dbg !8016
  %226 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8019
  %k276 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %226, i32 0, i32 12, !dbg !8020
  %arrayidx277 = getelementptr inbounds [5 x i32], [5 x i32]* %k276, i64 0, i64 2, !dbg !8019
  %227 = load i32, i32* %arrayidx277, align 4, !dbg !8019
  %228 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8021
  %k278 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %228, i32 0, i32 12, !dbg !8022
  %arrayidx279 = getelementptr inbounds [5 x i32], [5 x i32]* %k278, i64 0, i64 0, !dbg !8021
  %229 = load i32, i32* %arrayidx279, align 4, !dbg !8021
  %sub280 = sub nsw i32 %227, %229, !dbg !8023
  call void (i8*, i32, i8*, ...) @av_log(i8* %225, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19, i32 0, i32 0), i32 %sub280), !dbg !8024
  store i32 -1, i32* %retval, align 4, !dbg !8025
  br label %return, !dbg !8025

if.end281:                                        ; preds = %if.end267
  %230 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !8026
  %bs_freq_scale = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %230, i32 0, i32 3, !dbg !8028
  %231 = load i8, i8* %bs_freq_scale, align 1, !dbg !8028
  %tobool282 = icmp ne i8 %231, 0, !dbg !8026
  br i1 %tobool282, label %if.else367, label %if.then283, !dbg !8029

if.then283:                                       ; preds = %if.end281
  call void @llvm.dbg.declare(metadata i32* %dk, metadata !8030, metadata !2734), !dbg !8032
  call void @llvm.dbg.declare(metadata i32* %k2diff, metadata !8033, metadata !2734), !dbg !8034
  %232 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !8035
  %bs_alter_scale = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %232, i32 0, i32 4, !dbg !8036
  %233 = load i8, i8* %bs_alter_scale, align 1, !dbg !8036
  %conv284 = zext i8 %233 to i32, !dbg !8035
  %add285 = add nsw i32 %conv284, 1, !dbg !8037
  store i32 %add285, i32* %dk, align 4, !dbg !8038
  %234 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8039
  %k286 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %234, i32 0, i32 12, !dbg !8040
  %arrayidx287 = getelementptr inbounds [5 x i32], [5 x i32]* %k286, i64 0, i64 2, !dbg !8039
  %235 = load i32, i32* %arrayidx287, align 4, !dbg !8039
  %236 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8041
  %k288 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %236, i32 0, i32 12, !dbg !8042
  %arrayidx289 = getelementptr inbounds [5 x i32], [5 x i32]* %k288, i64 0, i64 0, !dbg !8041
  %237 = load i32, i32* %arrayidx289, align 4, !dbg !8041
  %sub290 = sub nsw i32 %235, %237, !dbg !8043
  %238 = load i32, i32* %dk, align 4, !dbg !8044
  %and = and i32 %238, 2, !dbg !8045
  %add291 = add nsw i32 %sub290, %and, !dbg !8046
  %239 = load i32, i32* %dk, align 4, !dbg !8047
  %shr292 = ashr i32 %add291, %239, !dbg !8048
  %shl293 = shl i32 %shr292, 1, !dbg !8049
  %240 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8050
  %n_master = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %240, i32 0, i32 16, !dbg !8051
  store i32 %shl293, i32* %n_master, align 4, !dbg !8052
  %241 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8053
  %avctx294 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %241, i32 0, i32 1, !dbg !8055
  %242 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx294, align 8, !dbg !8055
  %243 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8056
  %n_master295 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %243, i32 0, i32 16, !dbg !8057
  %244 = load i32, i32* %n_master295, align 4, !dbg !8057
  %245 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8058
  %spectrum_params = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %245, i32 0, i32 5, !dbg !8059
  %bs_xover_band = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params, i32 0, i32 2, !dbg !8060
  %246 = load i8, i8* %bs_xover_band, align 2, !dbg !8060
  %conv296 = zext i8 %246 to i32, !dbg !8058
  %call297 = call i32 @check_n_master(%struct.AVCodecContext* %242, i32 %244, i32 %conv296), !dbg !8061
  %tobool298 = icmp ne i32 %call297, 0, !dbg !8061
  br i1 %tobool298, label %if.then299, label %if.end300, !dbg !8062

if.then299:                                       ; preds = %if.then283
  store i32 -1, i32* %retval, align 4, !dbg !8063
  br label %return, !dbg !8063

if.end300:                                        ; preds = %if.then283
  store i32 1, i32* %k, align 4, !dbg !8064
  br label %for.cond301, !dbg !8066

for.cond301:                                      ; preds = %for.inc309, %if.end300
  %247 = load i32, i32* %k, align 4, !dbg !8067
  %248 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8070
  %n_master302 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %248, i32 0, i32 16, !dbg !8071
  %249 = load i32, i32* %n_master302, align 4, !dbg !8071
  %cmp303 = icmp sle i32 %247, %249, !dbg !8072
  br i1 %cmp303, label %for.body305, label %for.end311, !dbg !8073

for.body305:                                      ; preds = %for.cond301
  %250 = load i32, i32* %dk, align 4, !dbg !8074
  %conv306 = trunc i32 %250 to i16, !dbg !8074
  %251 = load i32, i32* %k, align 4, !dbg !8075
  %idxprom307 = sext i32 %251 to i64, !dbg !8076
  %252 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8076
  %f_master = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %252, i32 0, i32 22, !dbg !8077
  %arrayidx308 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master, i64 0, i64 %idxprom307, !dbg !8076
  store i16 %conv306, i16* %arrayidx308, align 2, !dbg !8078
  br label %for.inc309, !dbg !8076

for.inc309:                                       ; preds = %for.body305
  %253 = load i32, i32* %k, align 4, !dbg !8079
  %inc310 = add nsw i32 %253, 1, !dbg !8079
  store i32 %inc310, i32* %k, align 4, !dbg !8079
  br label %for.cond301, !dbg !8081, !llvm.loop !8082

for.end311:                                       ; preds = %for.cond301
  %254 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8084
  %k312 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %254, i32 0, i32 12, !dbg !8085
  %arrayidx313 = getelementptr inbounds [5 x i32], [5 x i32]* %k312, i64 0, i64 2, !dbg !8084
  %255 = load i32, i32* %arrayidx313, align 4, !dbg !8084
  %256 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8086
  %k314 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %256, i32 0, i32 12, !dbg !8087
  %arrayidx315 = getelementptr inbounds [5 x i32], [5 x i32]* %k314, i64 0, i64 0, !dbg !8086
  %257 = load i32, i32* %arrayidx315, align 4, !dbg !8086
  %sub316 = sub nsw i32 %255, %257, !dbg !8088
  %258 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8089
  %n_master317 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %258, i32 0, i32 16, !dbg !8090
  %259 = load i32, i32* %n_master317, align 4, !dbg !8090
  %260 = load i32, i32* %dk, align 4, !dbg !8091
  %mul318 = mul nsw i32 %259, %260, !dbg !8092
  %sub319 = sub nsw i32 %sub316, %mul318, !dbg !8093
  store i32 %sub319, i32* %k2diff, align 4, !dbg !8094
  %261 = load i32, i32* %k2diff, align 4, !dbg !8095
  %cmp320 = icmp slt i32 %261, 0, !dbg !8097
  br i1 %cmp320, label %if.then322, label %if.else333, !dbg !8098

if.then322:                                       ; preds = %for.end311
  %262 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8099
  %f_master323 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %262, i32 0, i32 22, !dbg !8101
  %arrayidx324 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master323, i64 0, i64 1, !dbg !8099
  %263 = load i16, i16* %arrayidx324, align 2, !dbg !8102
  %dec325 = add i16 %263, -1, !dbg !8102
  store i16 %dec325, i16* %arrayidx324, align 2, !dbg !8102
  %264 = load i32, i32* %k2diff, align 4, !dbg !8103
  %cmp326 = icmp slt i32 %264, -1, !dbg !8104
  %conv327 = zext i1 %cmp326 to i32, !dbg !8104
  %265 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8105
  %f_master328 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %265, i32 0, i32 22, !dbg !8106
  %arrayidx329 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master328, i64 0, i64 2, !dbg !8105
  %266 = load i16, i16* %arrayidx329, align 4, !dbg !8107
  %conv330 = zext i16 %266 to i32, !dbg !8107
  %sub331 = sub nsw i32 %conv330, %conv327, !dbg !8107
  %conv332 = trunc i32 %sub331 to i16, !dbg !8107
  store i16 %conv332, i16* %arrayidx329, align 4, !dbg !8107
  br label %if.end342, !dbg !8108

if.else333:                                       ; preds = %for.end311
  %267 = load i32, i32* %k2diff, align 4, !dbg !8109
  %tobool334 = icmp ne i32 %267, 0, !dbg !8109
  br i1 %tobool334, label %if.then335, label %if.end341, !dbg !8109

if.then335:                                       ; preds = %if.else333
  %268 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8112
  %n_master336 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %268, i32 0, i32 16, !dbg !8114
  %269 = load i32, i32* %n_master336, align 4, !dbg !8114
  %idxprom337 = sext i32 %269 to i64, !dbg !8115
  %270 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8115
  %f_master338 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %270, i32 0, i32 22, !dbg !8116
  %arrayidx339 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master338, i64 0, i64 %idxprom337, !dbg !8115
  %271 = load i16, i16* %arrayidx339, align 2, !dbg !8117
  %inc340 = add i16 %271, 1, !dbg !8117
  store i16 %inc340, i16* %arrayidx339, align 2, !dbg !8117
  br label %if.end341, !dbg !8118

if.end341:                                        ; preds = %if.then335, %if.else333
  br label %if.end342

if.end342:                                        ; preds = %if.end341, %if.then322
  %272 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8119
  %k343 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %272, i32 0, i32 12, !dbg !8120
  %arrayidx344 = getelementptr inbounds [5 x i32], [5 x i32]* %k343, i64 0, i64 0, !dbg !8119
  %273 = load i32, i32* %arrayidx344, align 4, !dbg !8119
  %conv345 = trunc i32 %273 to i16, !dbg !8119
  %274 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8121
  %f_master346 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %274, i32 0, i32 22, !dbg !8122
  %arrayidx347 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master346, i64 0, i64 0, !dbg !8121
  store i16 %conv345, i16* %arrayidx347, align 16, !dbg !8123
  store i32 1, i32* %k, align 4, !dbg !8124
  br label %for.cond348, !dbg !8126

for.cond348:                                      ; preds = %for.inc364, %if.end342
  %275 = load i32, i32* %k, align 4, !dbg !8127
  %276 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8130
  %n_master349 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %276, i32 0, i32 16, !dbg !8131
  %277 = load i32, i32* %n_master349, align 4, !dbg !8131
  %cmp350 = icmp sle i32 %275, %277, !dbg !8132
  br i1 %cmp350, label %for.body352, label %for.end366, !dbg !8133

for.body352:                                      ; preds = %for.cond348
  %278 = load i32, i32* %k, align 4, !dbg !8134
  %sub353 = sub nsw i32 %278, 1, !dbg !8135
  %idxprom354 = sext i32 %sub353 to i64, !dbg !8136
  %279 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8136
  %f_master355 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %279, i32 0, i32 22, !dbg !8137
  %arrayidx356 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master355, i64 0, i64 %idxprom354, !dbg !8136
  %280 = load i16, i16* %arrayidx356, align 2, !dbg !8136
  %conv357 = zext i16 %280 to i32, !dbg !8136
  %281 = load i32, i32* %k, align 4, !dbg !8138
  %idxprom358 = sext i32 %281 to i64, !dbg !8139
  %282 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8139
  %f_master359 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %282, i32 0, i32 22, !dbg !8140
  %arrayidx360 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master359, i64 0, i64 %idxprom358, !dbg !8139
  %283 = load i16, i16* %arrayidx360, align 2, !dbg !8141
  %conv361 = zext i16 %283 to i32, !dbg !8141
  %add362 = add nsw i32 %conv361, %conv357, !dbg !8141
  %conv363 = trunc i32 %add362 to i16, !dbg !8141
  store i16 %conv363, i16* %arrayidx360, align 2, !dbg !8141
  br label %for.inc364, !dbg !8139

for.inc364:                                       ; preds = %for.body352
  %284 = load i32, i32* %k, align 4, !dbg !8142
  %inc365 = add nsw i32 %284, 1, !dbg !8142
  store i32 %inc365, i32* %k, align 4, !dbg !8142
  br label %for.cond348, !dbg !8144, !llvm.loop !8145

for.end366:                                       ; preds = %for.cond348
  br label %if.end1285, !dbg !8147

if.else367:                                       ; preds = %if.end281
  call void @llvm.dbg.declare(metadata i32* %half_bands, metadata !8148, metadata !2734), !dbg !8150
  %285 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !8151
  %bs_freq_scale368 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %285, i32 0, i32 3, !dbg !8152
  %286 = load i8, i8* %bs_freq_scale368, align 1, !dbg !8152
  %conv369 = zext i8 %286 to i32, !dbg !8151
  %sub370 = sub nsw i32 7, %conv369, !dbg !8153
  store i32 %sub370, i32* %half_bands, align 4, !dbg !8150
  call void @llvm.dbg.declare(metadata i32* %two_regions, metadata !8154, metadata !2734), !dbg !8155
  call void @llvm.dbg.declare(metadata i32* %num_bands_0, metadata !8156, metadata !2734), !dbg !8157
  call void @llvm.dbg.declare(metadata i32* %vdk0_max, metadata !8158, metadata !2734), !dbg !8159
  call void @llvm.dbg.declare(metadata i32* %vdk1_min, metadata !8160, metadata !2734), !dbg !8161
  call void @llvm.dbg.declare(metadata [49 x i16]* %vk0, metadata !8162, metadata !2734), !dbg !8164
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8165, metadata !2734), !dbg !8166
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !8167, metadata !2734), !dbg !8168
  store i32 0, i32* %nz, align 4, !dbg !8168
  %287 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8169
  %k372 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %287, i32 0, i32 12, !dbg !8171
  %arrayidx373 = getelementptr inbounds [5 x i32], [5 x i32]* %k372, i64 0, i64 2, !dbg !8169
  %288 = load i32, i32* %arrayidx373, align 4, !dbg !8169
  %mul374 = mul nsw i32 49, %288, !dbg !8172
  %289 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8173
  %k375 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %289, i32 0, i32 12, !dbg !8174
  %arrayidx376 = getelementptr inbounds [5 x i32], [5 x i32]* %k375, i64 0, i64 0, !dbg !8173
  %290 = load i32, i32* %arrayidx376, align 4, !dbg !8173
  %mul377 = mul nsw i32 110, %290, !dbg !8175
  %cmp378 = icmp sgt i32 %mul374, %mul377, !dbg !8176
  br i1 %cmp378, label %if.then380, label %if.else386, !dbg !8177

if.then380:                                       ; preds = %if.else367
  store i32 1, i32* %two_regions, align 4, !dbg !8178
  %291 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8180
  %k381 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %291, i32 0, i32 12, !dbg !8181
  %arrayidx382 = getelementptr inbounds [5 x i32], [5 x i32]* %k381, i64 0, i64 0, !dbg !8180
  %292 = load i32, i32* %arrayidx382, align 4, !dbg !8180
  %mul383 = mul nsw i32 2, %292, !dbg !8182
  %293 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8183
  %k384 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %293, i32 0, i32 12, !dbg !8184
  %arrayidx385 = getelementptr inbounds [5 x i32], [5 x i32]* %k384, i64 0, i64 1, !dbg !8183
  store i32 %mul383, i32* %arrayidx385, align 4, !dbg !8185
  br label %if.end391, !dbg !8186

if.else386:                                       ; preds = %if.else367
  store i32 0, i32* %two_regions, align 4, !dbg !8187
  %294 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8189
  %k387 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %294, i32 0, i32 12, !dbg !8190
  %arrayidx388 = getelementptr inbounds [5 x i32], [5 x i32]* %k387, i64 0, i64 2, !dbg !8189
  %295 = load i32, i32* %arrayidx388, align 4, !dbg !8189
  %296 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8191
  %k389 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %296, i32 0, i32 12, !dbg !8192
  %arrayidx390 = getelementptr inbounds [5 x i32], [5 x i32]* %k389, i64 0, i64 1, !dbg !8191
  store i32 %295, i32* %arrayidx390, align 4, !dbg !8193
  br label %if.end391

if.end391:                                        ; preds = %if.else386, %if.then380
  %297 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8194
  %k392 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %297, i32 0, i32 12, !dbg !8195
  %arrayidx393 = getelementptr inbounds [5 x i32], [5 x i32]* %k392, i64 0, i64 1, !dbg !8194
  %298 = load i32, i32* %arrayidx393, align 4, !dbg !8194
  %shl394 = shl i32 %298, 23, !dbg !8196
  %299 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8197
  %k395 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %299, i32 0, i32 12, !dbg !8198
  %arrayidx396 = getelementptr inbounds [5 x i32], [5 x i32]* %k395, i64 0, i64 0, !dbg !8197
  %300 = load i32, i32* %arrayidx396, align 4, !dbg !8197
  %div397 = sdiv i32 %shl394, %300, !dbg !8199
  store i32 %div397, i32* %tmp, align 4, !dbg !8200
  br label %while.cond398, !dbg !8201

while.cond398:                                    ; preds = %while.body401, %if.end391
  %301 = load i32, i32* %tmp, align 4, !dbg !8202
  %cmp399 = icmp slt i32 %301, 1073741824, !dbg !8204
  br i1 %cmp399, label %while.body401, label %while.end404, !dbg !8205

while.body401:                                    ; preds = %while.cond398
  %302 = load i32, i32* %tmp, align 4, !dbg !8206
  %shl402 = shl i32 %302, 1, !dbg !8206
  store i32 %shl402, i32* %tmp, align 4, !dbg !8206
  %303 = load i32, i32* %nz, align 4, !dbg !8208
  %inc403 = add nsw i32 %303, 1, !dbg !8208
  store i32 %inc403, i32* %nz, align 4, !dbg !8208
  br label %while.cond398, !dbg !8209, !llvm.loop !8211

while.end404:                                     ; preds = %while.cond398
  %304 = load i32, i32* %tmp, align 4, !dbg !8212
  %sub405 = sub i32 %304, -2147483648, !dbg !8213
  %call406 = call i32 @fixed_log(i32 %sub405), !dbg !8214
  store i32 %call406, i32* %tmp, align 4, !dbg !8215
  %305 = load i32, i32* %tmp, align 4, !dbg !8216
  %conv407 = sext i32 %305 to i64, !dbg !8217
  %mul408 = mul nsw i64 %conv407, 1549082005, !dbg !8218
  %add409 = add nsw i64 %mul408, 536870912, !dbg !8219
  %shr410 = ashr i64 %add409, 30, !dbg !8220
  %conv411 = trunc i64 %shr410 to i32, !dbg !8221
  store i32 %conv411, i32* %tmp, align 4, !dbg !8222
  %306 = load i32, i32* %tmp, align 4, !dbg !8223
  %add412 = add nsw i32 %306, 128, !dbg !8224
  %shr413 = ashr i32 %add412, 8, !dbg !8225
  %307 = load i32, i32* %nz, align 4, !dbg !8226
  %sub414 = sub nsw i32 8, %307, !dbg !8227
  %shl415 = shl i32 %sub414, 23, !dbg !8228
  %add416 = add nsw i32 %shr413, %shl415, !dbg !8229
  %308 = load i32, i32* %half_bands, align 4, !dbg !8230
  %mul417 = mul nsw i32 %add416, %308, !dbg !8231
  store i32 %mul417, i32* %tmp, align 4, !dbg !8232
  %309 = load i32, i32* %tmp, align 4, !dbg !8233
  %add418 = add nsw i32 %309, 4194304, !dbg !8234
  %shr419 = ashr i32 %add418, 23, !dbg !8235
  %mul420 = mul nsw i32 %shr419, 2, !dbg !8236
  store i32 %mul420, i32* %num_bands_0, align 4, !dbg !8237
  %310 = load i32, i32* %num_bands_0, align 4, !dbg !8238
  %cmp421 = icmp sle i32 %310, 0, !dbg !8240
  br i1 %cmp421, label %if.then423, label %if.end425, !dbg !8241

if.then423:                                       ; preds = %while.end404
  %311 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8242
  %avctx424 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %311, i32 0, i32 1, !dbg !8244
  %312 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx424, align 8, !dbg !8244
  %313 = bitcast %struct.AVCodecContext* %312 to i8*, !dbg !8242
  %314 = load i32, i32* %num_bands_0, align 4, !dbg !8245
  call void (i8*, i32, i8*, ...) @av_log(i8* %313, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0), i32 %314), !dbg !8246
  store i32 -1, i32* %retval, align 4, !dbg !8247
  br label %return, !dbg !8247

if.end425:                                        ; preds = %while.end404
  %arrayidx426 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 0, !dbg !8248
  store i16 0, i16* %arrayidx426, align 16, !dbg !8249
  %arraydecay427 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i32 0, i32 0, !dbg !8250
  %add.ptr428 = getelementptr inbounds i16, i16* %arraydecay427, i64 1, !dbg !8251
  %315 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8252
  %k429 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %315, i32 0, i32 12, !dbg !8253
  %arrayidx430 = getelementptr inbounds [5 x i32], [5 x i32]* %k429, i64 0, i64 0, !dbg !8252
  %316 = load i32, i32* %arrayidx430, align 4, !dbg !8252
  %317 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8254
  %k431 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %317, i32 0, i32 12, !dbg !8255
  %arrayidx432 = getelementptr inbounds [5 x i32], [5 x i32]* %k431, i64 0, i64 1, !dbg !8254
  %318 = load i32, i32* %arrayidx432, align 4, !dbg !8254
  %319 = load i32, i32* %num_bands_0, align 4, !dbg !8256
  call void @make_bands(i16* %add.ptr428, i32 %316, i32 %318, i32 %319), !dbg !8257
  br label %do.body433, !dbg !8258, !llvm.loop !8259

do.body433:                                       ; preds = %if.end425
  call void @llvm.dbg.declare(metadata [64 x [2 x i8*]]* %stack435, metadata !8260, metadata !2734), !dbg !8262
  call void @llvm.dbg.declare(metadata i32* %sp437, metadata !8263, metadata !2734), !dbg !8264
  store i32 1, i32* %sp437, align 4, !dbg !8265
  %arraydecay438 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i32 0, i32 0, !dbg !8267
  %add.ptr439 = getelementptr inbounds i16, i16* %arraydecay438, i64 1, !dbg !8268
  %320 = bitcast i16* %add.ptr439 to i8*, !dbg !8267
  %arrayidx440 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack435, i64 0, i64 0, !dbg !8269
  %arrayidx441 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx440, i64 0, i64 0, !dbg !8269
  store i8* %320, i8** %arrayidx441, align 16, !dbg !8270
  %arraydecay442 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i32 0, i32 0, !dbg !8271
  %add.ptr443 = getelementptr inbounds i16, i16* %arraydecay442, i64 1, !dbg !8272
  %321 = load i32, i32* %num_bands_0, align 4, !dbg !8273
  %idx.ext = sext i32 %321 to i64, !dbg !8274
  %add.ptr444 = getelementptr inbounds i16, i16* %add.ptr443, i64 %idx.ext, !dbg !8274
  %add.ptr445 = getelementptr inbounds i16, i16* %add.ptr444, i64 -1, !dbg !8275
  %322 = bitcast i16* %add.ptr445 to i8*, !dbg !8276
  %arrayidx446 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack435, i64 0, i64 0, !dbg !8277
  %arrayidx447 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx446, i64 0, i64 1, !dbg !8277
  store i8* %322, i8** %arrayidx447, align 8, !dbg !8278
  br label %while.cond448, !dbg !8279

while.cond448:                                    ; preds = %while.end647, %do.body433
  %323 = load i32, i32* %sp437, align 4, !dbg !8280
  %tobool449 = icmp ne i32 %323, 0, !dbg !8282
  br i1 %tobool449, label %while.body450, label %while.end648, !dbg !8282

while.body450:                                    ; preds = %while.cond448
  call void @llvm.dbg.declare(metadata i16** %start452, metadata !8283, metadata !2734), !dbg !8285
  %324 = load i32, i32* %sp437, align 4, !dbg !8286
  %dec453 = add nsw i32 %324, -1, !dbg !8286
  store i32 %dec453, i32* %sp437, align 4, !dbg !8286
  %idxprom454 = sext i32 %dec453 to i64, !dbg !8288
  %arrayidx455 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack435, i64 0, i64 %idxprom454, !dbg !8288
  %arrayidx456 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx455, i64 0, i64 0, !dbg !8288
  %325 = load i8*, i8** %arrayidx456, align 16, !dbg !8288
  %326 = bitcast i8* %325 to i16*, !dbg !8288
  store i16* %326, i16** %start452, align 8, !dbg !8289
  call void @llvm.dbg.declare(metadata i16** %end458, metadata !8290, metadata !2734), !dbg !8291
  %327 = load i32, i32* %sp437, align 4, !dbg !8292
  %idxprom459 = sext i32 %327 to i64, !dbg !8293
  %arrayidx460 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack435, i64 0, i64 %idxprom459, !dbg !8293
  %arrayidx461 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx460, i64 0, i64 1, !dbg !8293
  %328 = load i8*, i8** %arrayidx461, align 8, !dbg !8293
  %329 = bitcast i8* %328 to i16*, !dbg !8293
  store i16* %329, i16** %end458, align 8, !dbg !8294
  br label %while.cond462, !dbg !8295

while.cond462:                                    ; preds = %if.end646, %while.body450
  %330 = load i16*, i16** %start452, align 8, !dbg !8296
  %331 = load i16*, i16** %end458, align 8, !dbg !8298
  %cmp463 = icmp ult i16* %330, %331, !dbg !8299
  br i1 %cmp463, label %while.body465, label %while.end647, !dbg !8300

while.body465:                                    ; preds = %while.cond462
  %332 = load i16*, i16** %start452, align 8, !dbg !8301
  %333 = load i16*, i16** %end458, align 8, !dbg !8305
  %add.ptr466 = getelementptr inbounds i16, i16* %333, i64 -1, !dbg !8306
  %cmp467 = icmp ult i16* %332, %add.ptr466, !dbg !8307
  br i1 %cmp467, label %if.then469, label %if.else636, !dbg !8301

if.then469:                                       ; preds = %while.body465
  call void @llvm.dbg.declare(metadata i32* %checksort471, metadata !8308, metadata !2734), !dbg !8310
  store i32 0, i32* %checksort471, align 4, !dbg !8311
  call void @llvm.dbg.declare(metadata i16** %right473, metadata !8313, metadata !2734), !dbg !8314
  %334 = load i16*, i16** %end458, align 8, !dbg !8315
  %add.ptr474 = getelementptr inbounds i16, i16* %334, i64 -2, !dbg !8316
  store i16* %add.ptr474, i16** %right473, align 8, !dbg !8317
  call void @llvm.dbg.declare(metadata i16** %left476, metadata !8318, metadata !2734), !dbg !8319
  %335 = load i16*, i16** %start452, align 8, !dbg !8320
  %add.ptr477 = getelementptr inbounds i16, i16* %335, i64 1, !dbg !8321
  store i16* %add.ptr477, i16** %left476, align 8, !dbg !8322
  call void @llvm.dbg.declare(metadata i16** %mid479, metadata !8323, metadata !2734), !dbg !8324
  %336 = load i16*, i16** %start452, align 8, !dbg !8325
  %337 = load i16*, i16** %end458, align 8, !dbg !8326
  %338 = load i16*, i16** %start452, align 8, !dbg !8327
  %sub.ptr.lhs.cast480 = ptrtoint i16* %337 to i64, !dbg !8328
  %sub.ptr.rhs.cast481 = ptrtoint i16* %338 to i64, !dbg !8328
  %sub.ptr.sub482 = sub i64 %sub.ptr.lhs.cast480, %sub.ptr.rhs.cast481, !dbg !8328
  %sub.ptr.div483 = sdiv exact i64 %sub.ptr.sub482, 2, !dbg !8328
  %shr484 = ashr i64 %sub.ptr.div483, 1, !dbg !8329
  %add.ptr485 = getelementptr inbounds i16, i16* %336, i64 %shr484, !dbg !8330
  store i16* %add.ptr485, i16** %mid479, align 8, !dbg !8331
  %339 = load i16*, i16** %start452, align 8, !dbg !8332
  %340 = bitcast i16* %339 to i8*, !dbg !8332
  %341 = load i16*, i16** %end458, align 8, !dbg !8333
  %342 = bitcast i16* %341 to i8*, !dbg !8333
  %call486 = call i32 @qsort_comparison_function_int16(i8* %340, i8* %342), !dbg !8334
  %cmp487 = icmp sgt i32 %call486, 0, !dbg !8335
  br i1 %cmp487, label %if.then489, label %if.else504, !dbg !8334

if.then489:                                       ; preds = %if.then469
  %343 = load i16*, i16** %end458, align 8, !dbg !8336
  %344 = bitcast i16* %343 to i8*, !dbg !8336
  %345 = load i16*, i16** %mid479, align 8, !dbg !8341
  %346 = bitcast i16* %345 to i8*, !dbg !8341
  %call490 = call i32 @qsort_comparison_function_int16(i8* %344, i8* %346), !dbg !8342
  %cmp491 = icmp sgt i32 %call490, 0, !dbg !8343
  br i1 %cmp491, label %if.then493, label %if.else498, !dbg !8342

if.then493:                                       ; preds = %if.then489
  br label %do.body494, !dbg !8344, !llvm.loop !8346

do.body494:                                       ; preds = %if.then493
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp496, metadata !8348, metadata !2734), !dbg !8350
  %347 = load i16*, i16** %mid479, align 8, !dbg !8351
  %348 = load i16, i16* %347, align 2, !dbg !8353
  store i16 %348, i16* %SWAP_tmp496, align 2, !dbg !8354
  %349 = load i16*, i16** %start452, align 8, !dbg !8355
  %350 = load i16, i16* %349, align 2, !dbg !8356
  %351 = load i16*, i16** %mid479, align 8, !dbg !8357
  store i16 %350, i16* %351, align 2, !dbg !8358
  %352 = load i16, i16* %SWAP_tmp496, align 2, !dbg !8359
  %353 = load i16*, i16** %start452, align 8, !dbg !8360
  store i16 %352, i16* %353, align 2, !dbg !8361
  br label %do.end497, !dbg !8362

do.end497:                                        ; preds = %do.body494
  br label %if.end503, !dbg !8363

if.else498:                                       ; preds = %if.then489
  br label %do.body499, !dbg !8365, !llvm.loop !8367

do.body499:                                       ; preds = %if.else498
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp501, metadata !8369, metadata !2734), !dbg !8371
  %354 = load i16*, i16** %end458, align 8, !dbg !8372
  %355 = load i16, i16* %354, align 2, !dbg !8374
  store i16 %355, i16* %SWAP_tmp501, align 2, !dbg !8375
  %356 = load i16*, i16** %start452, align 8, !dbg !8376
  %357 = load i16, i16* %356, align 2, !dbg !8377
  %358 = load i16*, i16** %end458, align 8, !dbg !8378
  store i16 %357, i16* %358, align 2, !dbg !8379
  %359 = load i16, i16* %SWAP_tmp501, align 2, !dbg !8380
  %360 = load i16*, i16** %start452, align 8, !dbg !8381
  store i16 %359, i16* %360, align 2, !dbg !8382
  br label %do.end502, !dbg !8383

do.end502:                                        ; preds = %do.body499
  br label %if.end503

if.end503:                                        ; preds = %do.end502, %do.end497
  br label %if.end515, !dbg !8384

if.else504:                                       ; preds = %if.then469
  %361 = load i16*, i16** %start452, align 8, !dbg !8386
  %362 = bitcast i16* %361 to i8*, !dbg !8386
  %363 = load i16*, i16** %mid479, align 8, !dbg !8390
  %364 = bitcast i16* %363 to i8*, !dbg !8390
  %call505 = call i32 @qsort_comparison_function_int16(i8* %362, i8* %364), !dbg !8391
  %cmp506 = icmp sgt i32 %call505, 0, !dbg !8392
  br i1 %cmp506, label %if.then508, label %if.else513, !dbg !8391

if.then508:                                       ; preds = %if.else504
  br label %do.body509, !dbg !8393, !llvm.loop !8395

do.body509:                                       ; preds = %if.then508
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp511, metadata !8397, metadata !2734), !dbg !8399
  %365 = load i16*, i16** %mid479, align 8, !dbg !8400
  %366 = load i16, i16* %365, align 2, !dbg !8402
  store i16 %366, i16* %SWAP_tmp511, align 2, !dbg !8403
  %367 = load i16*, i16** %start452, align 8, !dbg !8404
  %368 = load i16, i16* %367, align 2, !dbg !8405
  %369 = load i16*, i16** %mid479, align 8, !dbg !8406
  store i16 %368, i16* %369, align 2, !dbg !8407
  %370 = load i16, i16* %SWAP_tmp511, align 2, !dbg !8408
  %371 = load i16*, i16** %start452, align 8, !dbg !8409
  store i16 %370, i16* %371, align 2, !dbg !8410
  br label %do.end512, !dbg !8411

do.end512:                                        ; preds = %do.body509
  br label %if.end514, !dbg !8412

if.else513:                                       ; preds = %if.else504
  store i32 1, i32* %checksort471, align 4, !dbg !8414
  br label %if.end514

if.end514:                                        ; preds = %if.else513, %do.end512
  br label %if.end515

if.end515:                                        ; preds = %if.end514, %if.end503
  %372 = load i16*, i16** %mid479, align 8, !dbg !8416
  %373 = bitcast i16* %372 to i8*, !dbg !8416
  %374 = load i16*, i16** %end458, align 8, !dbg !8419
  %375 = bitcast i16* %374 to i8*, !dbg !8419
  %call516 = call i32 @qsort_comparison_function_int16(i8* %373, i8* %375), !dbg !8420
  %cmp517 = icmp sgt i32 %call516, 0, !dbg !8421
  br i1 %cmp517, label %if.then519, label %if.end524, !dbg !8420

if.then519:                                       ; preds = %if.end515
  br label %do.body520, !dbg !8422, !llvm.loop !8425

do.body520:                                       ; preds = %if.then519
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp522, metadata !8427, metadata !2734), !dbg !8429
  %376 = load i16*, i16** %end458, align 8, !dbg !8430
  %377 = load i16, i16* %376, align 2, !dbg !8432
  store i16 %377, i16* %SWAP_tmp522, align 2, !dbg !8433
  %378 = load i16*, i16** %mid479, align 8, !dbg !8434
  %379 = load i16, i16* %378, align 2, !dbg !8435
  %380 = load i16*, i16** %end458, align 8, !dbg !8436
  store i16 %379, i16* %380, align 2, !dbg !8437
  %381 = load i16, i16* %SWAP_tmp522, align 2, !dbg !8438
  %382 = load i16*, i16** %mid479, align 8, !dbg !8439
  store i16 %381, i16* %382, align 2, !dbg !8440
  br label %do.end523, !dbg !8441

do.end523:                                        ; preds = %do.body520
  store i32 0, i32* %checksort471, align 4, !dbg !8442
  br label %if.end524, !dbg !8444

if.end524:                                        ; preds = %do.end523, %if.end515
  %383 = load i16*, i16** %start452, align 8, !dbg !8445
  %384 = load i16*, i16** %end458, align 8, !dbg !8448
  %add.ptr525 = getelementptr inbounds i16, i16* %384, i64 -2, !dbg !8449
  %cmp526 = icmp eq i16* %383, %add.ptr525, !dbg !8450
  br i1 %cmp526, label %if.then528, label %if.end529, !dbg !8445

if.then528:                                       ; preds = %if.end524
  br label %while.end647, !dbg !8451

if.end529:                                        ; preds = %if.end524
  br label %do.body530, !dbg !8453, !llvm.loop !8455

do.body530:                                       ; preds = %if.end529
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp532, metadata !8457, metadata !2734), !dbg !8459
  %385 = load i16*, i16** %mid479, align 8, !dbg !8460
  %386 = load i16, i16* %385, align 2, !dbg !8462
  store i16 %386, i16* %SWAP_tmp532, align 2, !dbg !8463
  %387 = load i16*, i16** %end458, align 8, !dbg !8464
  %arrayidx533 = getelementptr inbounds i16, i16* %387, i64 -1, !dbg !8464
  %388 = load i16, i16* %arrayidx533, align 2, !dbg !8464
  %389 = load i16*, i16** %mid479, align 8, !dbg !8465
  store i16 %388, i16* %389, align 2, !dbg !8466
  %390 = load i16, i16* %SWAP_tmp532, align 2, !dbg !8467
  %391 = load i16*, i16** %end458, align 8, !dbg !8468
  %arrayidx534 = getelementptr inbounds i16, i16* %391, i64 -1, !dbg !8468
  store i16 %390, i16* %arrayidx534, align 2, !dbg !8469
  br label %do.end535, !dbg !8470

do.end535:                                        ; preds = %do.body530
  br label %while.cond536, !dbg !8471

while.cond536:                                    ; preds = %if.end573, %do.end535
  %392 = load i16*, i16** %left476, align 8, !dbg !8473
  %393 = load i16*, i16** %right473, align 8, !dbg !8475
  %cmp537 = icmp ule i16* %392, %393, !dbg !8476
  br i1 %cmp537, label %while.body539, label %while.end574, !dbg !8477

while.body539:                                    ; preds = %while.cond536
  br label %while.cond540, !dbg !8478

while.cond540:                                    ; preds = %while.body549, %while.body539
  %394 = load i16*, i16** %left476, align 8, !dbg !8481
  %395 = load i16*, i16** %right473, align 8, !dbg !8483
  %cmp541 = icmp ule i16* %394, %395, !dbg !8484
  br i1 %cmp541, label %land.rhs543, label %land.end548, !dbg !8485

land.rhs543:                                      ; preds = %while.cond540
  %396 = load i16*, i16** %left476, align 8, !dbg !8486
  %397 = bitcast i16* %396 to i8*, !dbg !8486
  %398 = load i16*, i16** %end458, align 8, !dbg !8488
  %add.ptr544 = getelementptr inbounds i16, i16* %398, i64 -1, !dbg !8489
  %399 = bitcast i16* %add.ptr544 to i8*, !dbg !8488
  %call545 = call i32 @qsort_comparison_function_int16(i8* %397, i8* %399), !dbg !8490
  %cmp546 = icmp slt i32 %call545, 0, !dbg !8491
  br label %land.end548

land.end548:                                      ; preds = %land.rhs543, %while.cond540
  %400 = phi i1 [ false, %while.cond540 ], [ %cmp546, %land.rhs543 ]
  br i1 %400, label %while.body549, label %while.end551, !dbg !8492

while.body549:                                    ; preds = %land.end548
  %401 = load i16*, i16** %left476, align 8, !dbg !8494
  %incdec.ptr550 = getelementptr inbounds i16, i16* %401, i32 1, !dbg !8494
  store i16* %incdec.ptr550, i16** %left476, align 8, !dbg !8494
  br label %while.cond540, !dbg !8496, !llvm.loop !8497

while.end551:                                     ; preds = %land.end548
  br label %while.cond552, !dbg !8499

while.cond552:                                    ; preds = %while.body561, %while.end551
  %402 = load i16*, i16** %left476, align 8, !dbg !8501
  %403 = load i16*, i16** %right473, align 8, !dbg !8503
  %cmp553 = icmp ule i16* %402, %403, !dbg !8504
  br i1 %cmp553, label %land.rhs555, label %land.end560, !dbg !8505

land.rhs555:                                      ; preds = %while.cond552
  %404 = load i16*, i16** %right473, align 8, !dbg !8506
  %405 = bitcast i16* %404 to i8*, !dbg !8506
  %406 = load i16*, i16** %end458, align 8, !dbg !8508
  %add.ptr556 = getelementptr inbounds i16, i16* %406, i64 -1, !dbg !8509
  %407 = bitcast i16* %add.ptr556 to i8*, !dbg !8508
  %call557 = call i32 @qsort_comparison_function_int16(i8* %405, i8* %407), !dbg !8510
  %cmp558 = icmp sgt i32 %call557, 0, !dbg !8511
  br label %land.end560

land.end560:                                      ; preds = %land.rhs555, %while.cond552
  %408 = phi i1 [ false, %while.cond552 ], [ %cmp558, %land.rhs555 ]
  br i1 %408, label %while.body561, label %while.end563, !dbg !8512

while.body561:                                    ; preds = %land.end560
  %409 = load i16*, i16** %right473, align 8, !dbg !8514
  %incdec.ptr562 = getelementptr inbounds i16, i16* %409, i32 -1, !dbg !8514
  store i16* %incdec.ptr562, i16** %right473, align 8, !dbg !8514
  br label %while.cond552, !dbg !8516, !llvm.loop !8517

while.end563:                                     ; preds = %land.end560
  %410 = load i16*, i16** %left476, align 8, !dbg !8519
  %411 = load i16*, i16** %right473, align 8, !dbg !8522
  %cmp564 = icmp ule i16* %410, %411, !dbg !8523
  br i1 %cmp564, label %if.then566, label %if.end573, !dbg !8519

if.then566:                                       ; preds = %while.end563
  br label %do.body567, !dbg !8524, !llvm.loop !8527

do.body567:                                       ; preds = %if.then566
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp569, metadata !8529, metadata !2734), !dbg !8531
  %412 = load i16*, i16** %right473, align 8, !dbg !8532
  %413 = load i16, i16* %412, align 2, !dbg !8534
  store i16 %413, i16* %SWAP_tmp569, align 2, !dbg !8535
  %414 = load i16*, i16** %left476, align 8, !dbg !8536
  %415 = load i16, i16* %414, align 2, !dbg !8537
  %416 = load i16*, i16** %right473, align 8, !dbg !8538
  store i16 %415, i16* %416, align 2, !dbg !8539
  %417 = load i16, i16* %SWAP_tmp569, align 2, !dbg !8540
  %418 = load i16*, i16** %left476, align 8, !dbg !8541
  store i16 %417, i16* %418, align 2, !dbg !8542
  br label %do.end570, !dbg !8543

do.end570:                                        ; preds = %do.body567
  %419 = load i16*, i16** %left476, align 8, !dbg !8544
  %incdec.ptr571 = getelementptr inbounds i16, i16* %419, i32 1, !dbg !8544
  store i16* %incdec.ptr571, i16** %left476, align 8, !dbg !8544
  %420 = load i16*, i16** %right473, align 8, !dbg !8546
  %incdec.ptr572 = getelementptr inbounds i16, i16* %420, i32 -1, !dbg !8546
  store i16* %incdec.ptr572, i16** %right473, align 8, !dbg !8546
  br label %if.end573, !dbg !8547

if.end573:                                        ; preds = %do.end570, %while.end563
  br label %while.cond536, !dbg !8548, !llvm.loop !8550

while.end574:                                     ; preds = %while.cond536
  br label %do.body575, !dbg !8552, !llvm.loop !8554

do.body575:                                       ; preds = %while.end574
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp577, metadata !8556, metadata !2734), !dbg !8558
  %421 = load i16*, i16** %left476, align 8, !dbg !8559
  %422 = load i16, i16* %421, align 2, !dbg !8561
  store i16 %422, i16* %SWAP_tmp577, align 2, !dbg !8562
  %423 = load i16*, i16** %end458, align 8, !dbg !8563
  %arrayidx578 = getelementptr inbounds i16, i16* %423, i64 -1, !dbg !8563
  %424 = load i16, i16* %arrayidx578, align 2, !dbg !8563
  %425 = load i16*, i16** %left476, align 8, !dbg !8564
  store i16 %424, i16* %425, align 2, !dbg !8565
  %426 = load i16, i16* %SWAP_tmp577, align 2, !dbg !8566
  %427 = load i16*, i16** %end458, align 8, !dbg !8567
  %arrayidx579 = getelementptr inbounds i16, i16* %427, i64 -1, !dbg !8567
  store i16 %426, i16* %arrayidx579, align 2, !dbg !8568
  br label %do.end580, !dbg !8569

do.end580:                                        ; preds = %do.body575
  %428 = load i32, i32* %checksort471, align 4, !dbg !8570
  %tobool581 = icmp ne i32 %428, 0, !dbg !8570
  br i1 %tobool581, label %land.lhs.true582, label %if.end606, !dbg !8573

land.lhs.true582:                                 ; preds = %do.end580
  %429 = load i16*, i16** %mid479, align 8, !dbg !8574
  %430 = load i16*, i16** %left476, align 8, !dbg !8576
  %add.ptr583 = getelementptr inbounds i16, i16* %430, i64 -1, !dbg !8577
  %cmp584 = icmp eq i16* %429, %add.ptr583, !dbg !8578
  br i1 %cmp584, label %if.then589, label %lor.lhs.false586, !dbg !8579

lor.lhs.false586:                                 ; preds = %land.lhs.true582
  %431 = load i16*, i16** %mid479, align 8, !dbg !8580
  %432 = load i16*, i16** %left476, align 8, !dbg !8582
  %cmp587 = icmp eq i16* %431, %432, !dbg !8583
  br i1 %cmp587, label %if.then589, label %if.end606, !dbg !8584

if.then589:                                       ; preds = %lor.lhs.false586, %land.lhs.true582
  %433 = load i16*, i16** %start452, align 8, !dbg !8585
  store i16* %433, i16** %mid479, align 8, !dbg !8588
  br label %while.cond590, !dbg !8589

while.cond590:                                    ; preds = %while.body599, %if.then589
  %434 = load i16*, i16** %mid479, align 8, !dbg !8590
  %435 = load i16*, i16** %end458, align 8, !dbg !8592
  %cmp591 = icmp ult i16* %434, %435, !dbg !8593
  br i1 %cmp591, label %land.rhs593, label %land.end598, !dbg !8594

land.rhs593:                                      ; preds = %while.cond590
  %436 = load i16*, i16** %mid479, align 8, !dbg !8595
  %437 = bitcast i16* %436 to i8*, !dbg !8595
  %438 = load i16*, i16** %mid479, align 8, !dbg !8597
  %add.ptr594 = getelementptr inbounds i16, i16* %438, i64 1, !dbg !8598
  %439 = bitcast i16* %add.ptr594 to i8*, !dbg !8597
  %call595 = call i32 @qsort_comparison_function_int16(i8* %437, i8* %439), !dbg !8599
  %cmp596 = icmp sle i32 %call595, 0, !dbg !8600
  br label %land.end598

land.end598:                                      ; preds = %land.rhs593, %while.cond590
  %440 = phi i1 [ false, %while.cond590 ], [ %cmp596, %land.rhs593 ]
  br i1 %440, label %while.body599, label %while.end601, !dbg !8601

while.body599:                                    ; preds = %land.end598
  %441 = load i16*, i16** %mid479, align 8, !dbg !8603
  %incdec.ptr600 = getelementptr inbounds i16, i16* %441, i32 1, !dbg !8603
  store i16* %incdec.ptr600, i16** %mid479, align 8, !dbg !8603
  br label %while.cond590, !dbg !8605, !llvm.loop !8606

while.end601:                                     ; preds = %land.end598
  %442 = load i16*, i16** %mid479, align 8, !dbg !8608
  %443 = load i16*, i16** %end458, align 8, !dbg !8611
  %cmp602 = icmp eq i16* %442, %443, !dbg !8612
  br i1 %cmp602, label %if.then604, label %if.end605, !dbg !8608

if.then604:                                       ; preds = %while.end601
  br label %while.end647, !dbg !8613

if.end605:                                        ; preds = %while.end601
  br label %if.end606, !dbg !8615

if.end606:                                        ; preds = %if.end605, %lor.lhs.false586, %do.end580
  %444 = load i16*, i16** %end458, align 8, !dbg !8617
  %445 = load i16*, i16** %left476, align 8, !dbg !8620
  %sub.ptr.lhs.cast607 = ptrtoint i16* %444 to i64, !dbg !8621
  %sub.ptr.rhs.cast608 = ptrtoint i16* %445 to i64, !dbg !8621
  %sub.ptr.sub609 = sub i64 %sub.ptr.lhs.cast607, %sub.ptr.rhs.cast608, !dbg !8621
  %sub.ptr.div610 = sdiv exact i64 %sub.ptr.sub609, 2, !dbg !8621
  %446 = load i16*, i16** %left476, align 8, !dbg !8622
  %447 = load i16*, i16** %start452, align 8, !dbg !8623
  %sub.ptr.lhs.cast611 = ptrtoint i16* %446 to i64, !dbg !8624
  %sub.ptr.rhs.cast612 = ptrtoint i16* %447 to i64, !dbg !8624
  %sub.ptr.sub613 = sub i64 %sub.ptr.lhs.cast611, %sub.ptr.rhs.cast612, !dbg !8624
  %sub.ptr.div614 = sdiv exact i64 %sub.ptr.sub613, 2, !dbg !8624
  %cmp615 = icmp slt i64 %sub.ptr.div610, %sub.ptr.div614, !dbg !8625
  br i1 %cmp615, label %if.then617, label %if.else626, !dbg !8617

if.then617:                                       ; preds = %if.end606
  %448 = load i16*, i16** %start452, align 8, !dbg !8626
  %449 = bitcast i16* %448 to i8*, !dbg !8626
  %450 = load i32, i32* %sp437, align 4, !dbg !8629
  %idxprom618 = sext i32 %450 to i64, !dbg !8630
  %arrayidx619 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack435, i64 0, i64 %idxprom618, !dbg !8630
  %arrayidx620 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx619, i64 0, i64 0, !dbg !8630
  store i8* %449, i8** %arrayidx620, align 16, !dbg !8631
  %451 = load i16*, i16** %right473, align 8, !dbg !8632
  %452 = bitcast i16* %451 to i8*, !dbg !8632
  %453 = load i32, i32* %sp437, align 4, !dbg !8633
  %inc621 = add nsw i32 %453, 1, !dbg !8633
  store i32 %inc621, i32* %sp437, align 4, !dbg !8633
  %idxprom622 = sext i32 %453 to i64, !dbg !8634
  %arrayidx623 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack435, i64 0, i64 %idxprom622, !dbg !8634
  %arrayidx624 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx623, i64 0, i64 1, !dbg !8634
  store i8* %452, i8** %arrayidx624, align 8, !dbg !8635
  %454 = load i16*, i16** %left476, align 8, !dbg !8636
  %add.ptr625 = getelementptr inbounds i16, i16* %454, i64 1, !dbg !8637
  store i16* %add.ptr625, i16** %start452, align 8, !dbg !8638
  br label %if.end635, !dbg !8639

if.else626:                                       ; preds = %if.end606
  %455 = load i16*, i16** %left476, align 8, !dbg !8640
  %add.ptr627 = getelementptr inbounds i16, i16* %455, i64 1, !dbg !8643
  %456 = bitcast i16* %add.ptr627 to i8*, !dbg !8640
  %457 = load i32, i32* %sp437, align 4, !dbg !8644
  %idxprom628 = sext i32 %457 to i64, !dbg !8645
  %arrayidx629 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack435, i64 0, i64 %idxprom628, !dbg !8645
  %arrayidx630 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx629, i64 0, i64 0, !dbg !8645
  store i8* %456, i8** %arrayidx630, align 16, !dbg !8646
  %458 = load i16*, i16** %end458, align 8, !dbg !8647
  %459 = bitcast i16* %458 to i8*, !dbg !8647
  %460 = load i32, i32* %sp437, align 4, !dbg !8648
  %inc631 = add nsw i32 %460, 1, !dbg !8648
  store i32 %inc631, i32* %sp437, align 4, !dbg !8648
  %idxprom632 = sext i32 %460 to i64, !dbg !8649
  %arrayidx633 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack435, i64 0, i64 %idxprom632, !dbg !8649
  %arrayidx634 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx633, i64 0, i64 1, !dbg !8649
  store i8* %459, i8** %arrayidx634, align 8, !dbg !8650
  %461 = load i16*, i16** %right473, align 8, !dbg !8651
  store i16* %461, i16** %end458, align 8, !dbg !8652
  br label %if.end635

if.end635:                                        ; preds = %if.else626, %if.then617
  br label %if.end646, !dbg !8653

if.else636:                                       ; preds = %while.body465
  %462 = load i16*, i16** %start452, align 8, !dbg !8655
  %463 = bitcast i16* %462 to i8*, !dbg !8655
  %464 = load i16*, i16** %end458, align 8, !dbg !8659
  %465 = bitcast i16* %464 to i8*, !dbg !8659
  %call637 = call i32 @qsort_comparison_function_int16(i8* %463, i8* %465), !dbg !8660
  %cmp638 = icmp sgt i32 %call637, 0, !dbg !8661
  br i1 %cmp638, label %if.then640, label %if.end645, !dbg !8660

if.then640:                                       ; preds = %if.else636
  br label %do.body641, !dbg !8662, !llvm.loop !8664

do.body641:                                       ; preds = %if.then640
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp643, metadata !8666, metadata !2734), !dbg !8668
  %466 = load i16*, i16** %end458, align 8, !dbg !8669
  %467 = load i16, i16* %466, align 2, !dbg !8671
  store i16 %467, i16* %SWAP_tmp643, align 2, !dbg !8672
  %468 = load i16*, i16** %start452, align 8, !dbg !8673
  %469 = load i16, i16* %468, align 2, !dbg !8674
  %470 = load i16*, i16** %end458, align 8, !dbg !8675
  store i16 %469, i16* %470, align 2, !dbg !8676
  %471 = load i16, i16* %SWAP_tmp643, align 2, !dbg !8677
  %472 = load i16*, i16** %start452, align 8, !dbg !8678
  store i16 %471, i16* %472, align 2, !dbg !8679
  br label %do.end644, !dbg !8680

do.end644:                                        ; preds = %do.body641
  br label %if.end645, !dbg !8681

if.end645:                                        ; preds = %do.end644, %if.else636
  br label %while.end647, !dbg !8683

if.end646:                                        ; preds = %if.end635
  br label %while.cond462, !dbg !8685, !llvm.loop !8687

while.end647:                                     ; preds = %if.end645, %if.then604, %if.then528, %while.cond462
  br label %while.cond448, !dbg !8689, !llvm.loop !8691

while.end648:                                     ; preds = %while.cond448
  br label %do.end649, !dbg !8693

do.end649:                                        ; preds = %while.end648
  %473 = load i32, i32* %num_bands_0, align 4, !dbg !8695
  %idxprom650 = sext i32 %473 to i64, !dbg !8696
  %arrayidx651 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 %idxprom650, !dbg !8696
  %474 = load i16, i16* %arrayidx651, align 2, !dbg !8696
  %conv652 = sext i16 %474 to i32, !dbg !8696
  store i32 %conv652, i32* %vdk0_max, align 4, !dbg !8697
  %475 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8698
  %k653 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %475, i32 0, i32 12, !dbg !8699
  %arrayidx654 = getelementptr inbounds [5 x i32], [5 x i32]* %k653, i64 0, i64 0, !dbg !8698
  %476 = load i32, i32* %arrayidx654, align 4, !dbg !8698
  %conv655 = trunc i32 %476 to i16, !dbg !8698
  %arrayidx656 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 0, !dbg !8700
  store i16 %conv655, i16* %arrayidx656, align 16, !dbg !8701
  store i32 1, i32* %k, align 4, !dbg !8702
  br label %for.cond657, !dbg !8704

for.cond657:                                      ; preds = %for.inc681, %do.end649
  %477 = load i32, i32* %k, align 4, !dbg !8705
  %478 = load i32, i32* %num_bands_0, align 4, !dbg !8708
  %cmp658 = icmp sle i32 %477, %478, !dbg !8709
  br i1 %cmp658, label %for.body660, label %for.end683, !dbg !8710

for.body660:                                      ; preds = %for.cond657
  %479 = load i32, i32* %k, align 4, !dbg !8711
  %idxprom661 = sext i32 %479 to i64, !dbg !8714
  %arrayidx662 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 %idxprom661, !dbg !8714
  %480 = load i16, i16* %arrayidx662, align 2, !dbg !8714
  %conv663 = sext i16 %480 to i32, !dbg !8714
  %cmp664 = icmp sle i32 %conv663, 0, !dbg !8715
  br i1 %cmp664, label %if.then666, label %if.end671, !dbg !8716

if.then666:                                       ; preds = %for.body660
  %481 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8717
  %avctx667 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %481, i32 0, i32 1, !dbg !8719
  %482 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx667, align 8, !dbg !8719
  %483 = bitcast %struct.AVCodecContext* %482 to i8*, !dbg !8717
  %484 = load i32, i32* %k, align 4, !dbg !8720
  %485 = load i32, i32* %k, align 4, !dbg !8721
  %idxprom668 = sext i32 %485 to i64, !dbg !8722
  %arrayidx669 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 %idxprom668, !dbg !8722
  %486 = load i16, i16* %arrayidx669, align 2, !dbg !8722
  %conv670 = sext i16 %486 to i32, !dbg !8722
  call void (i8*, i32, i8*, ...) @av_log(i8* %483, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i32 0, i32 0), i32 %484, i32 %conv670), !dbg !8723
  store i32 -1, i32* %retval, align 4, !dbg !8724
  br label %return, !dbg !8724

if.end671:                                        ; preds = %for.body660
  %487 = load i32, i32* %k, align 4, !dbg !8725
  %sub672 = sub nsw i32 %487, 1, !dbg !8726
  %idxprom673 = sext i32 %sub672 to i64, !dbg !8727
  %arrayidx674 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 %idxprom673, !dbg !8727
  %488 = load i16, i16* %arrayidx674, align 2, !dbg !8727
  %conv675 = sext i16 %488 to i32, !dbg !8727
  %489 = load i32, i32* %k, align 4, !dbg !8728
  %idxprom676 = sext i32 %489 to i64, !dbg !8729
  %arrayidx677 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 %idxprom676, !dbg !8729
  %490 = load i16, i16* %arrayidx677, align 2, !dbg !8730
  %conv678 = sext i16 %490 to i32, !dbg !8730
  %add679 = add nsw i32 %conv678, %conv675, !dbg !8730
  %conv680 = trunc i32 %add679 to i16, !dbg !8730
  store i16 %conv680, i16* %arrayidx677, align 2, !dbg !8730
  br label %for.inc681, !dbg !8731

for.inc681:                                       ; preds = %if.end671
  %491 = load i32, i32* %k, align 4, !dbg !8732
  %inc682 = add nsw i32 %491, 1, !dbg !8732
  store i32 %inc682, i32* %k, align 4, !dbg !8732
  br label %for.cond657, !dbg !8734, !llvm.loop !8735

for.end683:                                       ; preds = %for.cond657
  %492 = load i32, i32* %two_regions, align 4, !dbg !8737
  %tobool684 = icmp ne i32 %492, 0, !dbg !8737
  br i1 %tobool684, label %if.then685, label %if.else1267, !dbg !8739

if.then685:                                       ; preds = %for.end683
  call void @llvm.dbg.declare(metadata [49 x i16]* %vk1, metadata !8740, metadata !2734), !dbg !8742
  call void @llvm.dbg.declare(metadata i32* %num_bands_1, metadata !8743, metadata !2734), !dbg !8744
  %493 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8745
  %k688 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %493, i32 0, i32 12, !dbg !8746
  %arrayidx689 = getelementptr inbounds [5 x i32], [5 x i32]* %k688, i64 0, i64 2, !dbg !8745
  %494 = load i32, i32* %arrayidx689, align 4, !dbg !8745
  %shl690 = shl i32 %494, 23, !dbg !8747
  %495 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8748
  %k691 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %495, i32 0, i32 12, !dbg !8749
  %arrayidx692 = getelementptr inbounds [5 x i32], [5 x i32]* %k691, i64 0, i64 1, !dbg !8748
  %496 = load i32, i32* %arrayidx692, align 4, !dbg !8748
  %div693 = sdiv i32 %shl690, %496, !dbg !8750
  store i32 %div693, i32* %tmp, align 4, !dbg !8751
  store i32 0, i32* %nz, align 4, !dbg !8752
  br label %while.cond694, !dbg !8753

while.cond694:                                    ; preds = %while.body697, %if.then685
  %497 = load i32, i32* %tmp, align 4, !dbg !8754
  %cmp695 = icmp slt i32 %497, 1073741824, !dbg !8756
  br i1 %cmp695, label %while.body697, label %while.end700, !dbg !8757

while.body697:                                    ; preds = %while.cond694
  %498 = load i32, i32* %tmp, align 4, !dbg !8758
  %shl698 = shl i32 %498, 1, !dbg !8758
  store i32 %shl698, i32* %tmp, align 4, !dbg !8758
  %499 = load i32, i32* %nz, align 4, !dbg !8760
  %inc699 = add nsw i32 %499, 1, !dbg !8760
  store i32 %inc699, i32* %nz, align 4, !dbg !8760
  br label %while.cond694, !dbg !8761, !llvm.loop !8763

while.end700:                                     ; preds = %while.cond694
  %500 = load i32, i32* %tmp, align 4, !dbg !8764
  %sub701 = sub i32 %500, -2147483648, !dbg !8765
  %call702 = call i32 @fixed_log(i32 %sub701), !dbg !8766
  store i32 %call702, i32* %tmp, align 4, !dbg !8767
  %501 = load i32, i32* %tmp, align 4, !dbg !8768
  %conv703 = sext i32 %501 to i64, !dbg !8769
  %mul704 = mul nsw i64 %conv703, 1549082005, !dbg !8770
  %add705 = add nsw i64 %mul704, 536870912, !dbg !8771
  %shr706 = ashr i64 %add705, 30, !dbg !8772
  %conv707 = trunc i64 %shr706 to i32, !dbg !8773
  store i32 %conv707, i32* %tmp, align 4, !dbg !8774
  %502 = load i32, i32* %tmp, align 4, !dbg !8775
  %add708 = add nsw i32 %502, 128, !dbg !8776
  %shr709 = ashr i32 %add708, 8, !dbg !8777
  %503 = load i32, i32* %nz, align 4, !dbg !8778
  %sub710 = sub nsw i32 8, %503, !dbg !8779
  %shl711 = shl i32 %sub710, 23, !dbg !8780
  %add712 = add nsw i32 %shr709, %shl711, !dbg !8781
  %504 = load i32, i32* %half_bands, align 4, !dbg !8782
  %mul713 = mul nsw i32 %add712, %504, !dbg !8783
  store i32 %mul713, i32* %tmp, align 4, !dbg !8784
  %505 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !8785
  %bs_alter_scale714 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %505, i32 0, i32 4, !dbg !8787
  %506 = load i8, i8* %bs_alter_scale714, align 1, !dbg !8787
  %tobool715 = icmp ne i8 %506, 0, !dbg !8785
  br i1 %tobool715, label %if.then716, label %if.end722, !dbg !8788

if.then716:                                       ; preds = %while.end700
  %507 = load i32, i32* %tmp, align 4, !dbg !8789
  %conv717 = sext i32 %507 to i64, !dbg !8790
  %mul718 = mul nsw i64 %conv717, 1651910528, !dbg !8791
  %add719 = add nsw i64 %mul718, 1073741824, !dbg !8792
  %shr720 = ashr i64 %add719, 31, !dbg !8793
  %conv721 = trunc i64 %shr720 to i32, !dbg !8794
  store i32 %conv721, i32* %tmp, align 4, !dbg !8795
  br label %if.end722, !dbg !8796

if.end722:                                        ; preds = %if.then716, %while.end700
  %508 = load i32, i32* %tmp, align 4, !dbg !8797
  %add723 = add nsw i32 %508, 4194304, !dbg !8798
  %shr724 = ashr i32 %add723, 23, !dbg !8799
  %mul725 = mul nsw i32 %shr724, 2, !dbg !8800
  store i32 %mul725, i32* %num_bands_1, align 4, !dbg !8801
  %arraydecay726 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !8802
  %add.ptr727 = getelementptr inbounds i16, i16* %arraydecay726, i64 1, !dbg !8803
  %509 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8804
  %k728 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %509, i32 0, i32 12, !dbg !8805
  %arrayidx729 = getelementptr inbounds [5 x i32], [5 x i32]* %k728, i64 0, i64 1, !dbg !8804
  %510 = load i32, i32* %arrayidx729, align 4, !dbg !8804
  %511 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8806
  %k730 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %511, i32 0, i32 12, !dbg !8807
  %arrayidx731 = getelementptr inbounds [5 x i32], [5 x i32]* %k730, i64 0, i64 2, !dbg !8806
  %512 = load i32, i32* %arrayidx731, align 4, !dbg !8806
  %513 = load i32, i32* %num_bands_1, align 4, !dbg !8808
  call void @make_bands(i16* %add.ptr727, i32 %510, i32 %512, i32 %513), !dbg !8809
  %arraydecay732 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !8810
  %add.ptr733 = getelementptr inbounds i16, i16* %arraydecay732, i64 1, !dbg !8811
  %514 = load i32, i32* %num_bands_1, align 4, !dbg !8812
  %call734 = call i32 @array_min_int16(i16* %add.ptr733, i32 %514), !dbg !8813
  store i32 %call734, i32* %vdk1_min, align 4, !dbg !8814
  %515 = load i32, i32* %vdk1_min, align 4, !dbg !8815
  %516 = load i32, i32* %vdk0_max, align 4, !dbg !8817
  %cmp735 = icmp slt i32 %515, %516, !dbg !8818
  br i1 %cmp735, label %if.then737, label %if.end992, !dbg !8819

if.then737:                                       ; preds = %if.end722
  call void @llvm.dbg.declare(metadata i32* %change, metadata !8820, metadata !2734), !dbg !8822
  br label %do.body739, !dbg !8823, !llvm.loop !8824

do.body739:                                       ; preds = %if.then737
  call void @llvm.dbg.declare(metadata [64 x [2 x i8*]]* %stack741, metadata !8825, metadata !2734), !dbg !8827
  call void @llvm.dbg.declare(metadata i32* %sp743, metadata !8828, metadata !2734), !dbg !8829
  store i32 1, i32* %sp743, align 4, !dbg !8830
  %arraydecay744 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !8832
  %add.ptr745 = getelementptr inbounds i16, i16* %arraydecay744, i64 1, !dbg !8833
  %517 = bitcast i16* %add.ptr745 to i8*, !dbg !8832
  %arrayidx746 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack741, i64 0, i64 0, !dbg !8834
  %arrayidx747 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx746, i64 0, i64 0, !dbg !8834
  store i8* %517, i8** %arrayidx747, align 16, !dbg !8835
  %arraydecay748 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !8836
  %add.ptr749 = getelementptr inbounds i16, i16* %arraydecay748, i64 1, !dbg !8837
  %518 = load i32, i32* %num_bands_1, align 4, !dbg !8838
  %idx.ext750 = sext i32 %518 to i64, !dbg !8839
  %add.ptr751 = getelementptr inbounds i16, i16* %add.ptr749, i64 %idx.ext750, !dbg !8839
  %add.ptr752 = getelementptr inbounds i16, i16* %add.ptr751, i64 -1, !dbg !8840
  %519 = bitcast i16* %add.ptr752 to i8*, !dbg !8841
  %arrayidx753 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack741, i64 0, i64 0, !dbg !8842
  %arrayidx754 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx753, i64 0, i64 1, !dbg !8842
  store i8* %519, i8** %arrayidx754, align 8, !dbg !8843
  br label %while.cond755, !dbg !8844

while.cond755:                                    ; preds = %while.end954, %do.body739
  %520 = load i32, i32* %sp743, align 4, !dbg !8845
  %tobool756 = icmp ne i32 %520, 0, !dbg !8847
  br i1 %tobool756, label %while.body757, label %while.end955, !dbg !8847

while.body757:                                    ; preds = %while.cond755
  call void @llvm.dbg.declare(metadata i16** %start759, metadata !8848, metadata !2734), !dbg !8850
  %521 = load i32, i32* %sp743, align 4, !dbg !8851
  %dec760 = add nsw i32 %521, -1, !dbg !8851
  store i32 %dec760, i32* %sp743, align 4, !dbg !8851
  %idxprom761 = sext i32 %dec760 to i64, !dbg !8853
  %arrayidx762 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack741, i64 0, i64 %idxprom761, !dbg !8853
  %arrayidx763 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx762, i64 0, i64 0, !dbg !8853
  %522 = load i8*, i8** %arrayidx763, align 16, !dbg !8853
  %523 = bitcast i8* %522 to i16*, !dbg !8853
  store i16* %523, i16** %start759, align 8, !dbg !8854
  call void @llvm.dbg.declare(metadata i16** %end765, metadata !8855, metadata !2734), !dbg !8856
  %524 = load i32, i32* %sp743, align 4, !dbg !8857
  %idxprom766 = sext i32 %524 to i64, !dbg !8858
  %arrayidx767 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack741, i64 0, i64 %idxprom766, !dbg !8858
  %arrayidx768 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx767, i64 0, i64 1, !dbg !8858
  %525 = load i8*, i8** %arrayidx768, align 8, !dbg !8858
  %526 = bitcast i8* %525 to i16*, !dbg !8858
  store i16* %526, i16** %end765, align 8, !dbg !8859
  br label %while.cond769, !dbg !8860

while.cond769:                                    ; preds = %if.end953, %while.body757
  %527 = load i16*, i16** %start759, align 8, !dbg !8861
  %528 = load i16*, i16** %end765, align 8, !dbg !8863
  %cmp770 = icmp ult i16* %527, %528, !dbg !8864
  br i1 %cmp770, label %while.body772, label %while.end954, !dbg !8865

while.body772:                                    ; preds = %while.cond769
  %529 = load i16*, i16** %start759, align 8, !dbg !8866
  %530 = load i16*, i16** %end765, align 8, !dbg !8870
  %add.ptr773 = getelementptr inbounds i16, i16* %530, i64 -1, !dbg !8871
  %cmp774 = icmp ult i16* %529, %add.ptr773, !dbg !8872
  br i1 %cmp774, label %if.then776, label %if.else943, !dbg !8866

if.then776:                                       ; preds = %while.body772
  call void @llvm.dbg.declare(metadata i32* %checksort778, metadata !8873, metadata !2734), !dbg !8875
  store i32 0, i32* %checksort778, align 4, !dbg !8876
  call void @llvm.dbg.declare(metadata i16** %right780, metadata !8878, metadata !2734), !dbg !8879
  %531 = load i16*, i16** %end765, align 8, !dbg !8880
  %add.ptr781 = getelementptr inbounds i16, i16* %531, i64 -2, !dbg !8881
  store i16* %add.ptr781, i16** %right780, align 8, !dbg !8882
  call void @llvm.dbg.declare(metadata i16** %left783, metadata !8883, metadata !2734), !dbg !8884
  %532 = load i16*, i16** %start759, align 8, !dbg !8885
  %add.ptr784 = getelementptr inbounds i16, i16* %532, i64 1, !dbg !8886
  store i16* %add.ptr784, i16** %left783, align 8, !dbg !8887
  call void @llvm.dbg.declare(metadata i16** %mid786, metadata !8888, metadata !2734), !dbg !8889
  %533 = load i16*, i16** %start759, align 8, !dbg !8890
  %534 = load i16*, i16** %end765, align 8, !dbg !8891
  %535 = load i16*, i16** %start759, align 8, !dbg !8892
  %sub.ptr.lhs.cast787 = ptrtoint i16* %534 to i64, !dbg !8893
  %sub.ptr.rhs.cast788 = ptrtoint i16* %535 to i64, !dbg !8893
  %sub.ptr.sub789 = sub i64 %sub.ptr.lhs.cast787, %sub.ptr.rhs.cast788, !dbg !8893
  %sub.ptr.div790 = sdiv exact i64 %sub.ptr.sub789, 2, !dbg !8893
  %shr791 = ashr i64 %sub.ptr.div790, 1, !dbg !8894
  %add.ptr792 = getelementptr inbounds i16, i16* %533, i64 %shr791, !dbg !8895
  store i16* %add.ptr792, i16** %mid786, align 8, !dbg !8896
  %536 = load i16*, i16** %start759, align 8, !dbg !8897
  %537 = bitcast i16* %536 to i8*, !dbg !8897
  %538 = load i16*, i16** %end765, align 8, !dbg !8898
  %539 = bitcast i16* %538 to i8*, !dbg !8898
  %call793 = call i32 @qsort_comparison_function_int16(i8* %537, i8* %539), !dbg !8899
  %cmp794 = icmp sgt i32 %call793, 0, !dbg !8900
  br i1 %cmp794, label %if.then796, label %if.else811, !dbg !8899

if.then796:                                       ; preds = %if.then776
  %540 = load i16*, i16** %end765, align 8, !dbg !8901
  %541 = bitcast i16* %540 to i8*, !dbg !8901
  %542 = load i16*, i16** %mid786, align 8, !dbg !8906
  %543 = bitcast i16* %542 to i8*, !dbg !8906
  %call797 = call i32 @qsort_comparison_function_int16(i8* %541, i8* %543), !dbg !8907
  %cmp798 = icmp sgt i32 %call797, 0, !dbg !8908
  br i1 %cmp798, label %if.then800, label %if.else805, !dbg !8907

if.then800:                                       ; preds = %if.then796
  br label %do.body801, !dbg !8909, !llvm.loop !8911

do.body801:                                       ; preds = %if.then800
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp803, metadata !8913, metadata !2734), !dbg !8915
  %544 = load i16*, i16** %mid786, align 8, !dbg !8916
  %545 = load i16, i16* %544, align 2, !dbg !8918
  store i16 %545, i16* %SWAP_tmp803, align 2, !dbg !8919
  %546 = load i16*, i16** %start759, align 8, !dbg !8920
  %547 = load i16, i16* %546, align 2, !dbg !8921
  %548 = load i16*, i16** %mid786, align 8, !dbg !8922
  store i16 %547, i16* %548, align 2, !dbg !8923
  %549 = load i16, i16* %SWAP_tmp803, align 2, !dbg !8924
  %550 = load i16*, i16** %start759, align 8, !dbg !8925
  store i16 %549, i16* %550, align 2, !dbg !8926
  br label %do.end804, !dbg !8927

do.end804:                                        ; preds = %do.body801
  br label %if.end810, !dbg !8928

if.else805:                                       ; preds = %if.then796
  br label %do.body806, !dbg !8930, !llvm.loop !8932

do.body806:                                       ; preds = %if.else805
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp808, metadata !8934, metadata !2734), !dbg !8936
  %551 = load i16*, i16** %end765, align 8, !dbg !8937
  %552 = load i16, i16* %551, align 2, !dbg !8939
  store i16 %552, i16* %SWAP_tmp808, align 2, !dbg !8940
  %553 = load i16*, i16** %start759, align 8, !dbg !8941
  %554 = load i16, i16* %553, align 2, !dbg !8942
  %555 = load i16*, i16** %end765, align 8, !dbg !8943
  store i16 %554, i16* %555, align 2, !dbg !8944
  %556 = load i16, i16* %SWAP_tmp808, align 2, !dbg !8945
  %557 = load i16*, i16** %start759, align 8, !dbg !8946
  store i16 %556, i16* %557, align 2, !dbg !8947
  br label %do.end809, !dbg !8948

do.end809:                                        ; preds = %do.body806
  br label %if.end810

if.end810:                                        ; preds = %do.end809, %do.end804
  br label %if.end822, !dbg !8949

if.else811:                                       ; preds = %if.then776
  %558 = load i16*, i16** %start759, align 8, !dbg !8951
  %559 = bitcast i16* %558 to i8*, !dbg !8951
  %560 = load i16*, i16** %mid786, align 8, !dbg !8955
  %561 = bitcast i16* %560 to i8*, !dbg !8955
  %call812 = call i32 @qsort_comparison_function_int16(i8* %559, i8* %561), !dbg !8956
  %cmp813 = icmp sgt i32 %call812, 0, !dbg !8957
  br i1 %cmp813, label %if.then815, label %if.else820, !dbg !8956

if.then815:                                       ; preds = %if.else811
  br label %do.body816, !dbg !8958, !llvm.loop !8960

do.body816:                                       ; preds = %if.then815
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp818, metadata !8962, metadata !2734), !dbg !8964
  %562 = load i16*, i16** %mid786, align 8, !dbg !8965
  %563 = load i16, i16* %562, align 2, !dbg !8967
  store i16 %563, i16* %SWAP_tmp818, align 2, !dbg !8968
  %564 = load i16*, i16** %start759, align 8, !dbg !8969
  %565 = load i16, i16* %564, align 2, !dbg !8970
  %566 = load i16*, i16** %mid786, align 8, !dbg !8971
  store i16 %565, i16* %566, align 2, !dbg !8972
  %567 = load i16, i16* %SWAP_tmp818, align 2, !dbg !8973
  %568 = load i16*, i16** %start759, align 8, !dbg !8974
  store i16 %567, i16* %568, align 2, !dbg !8975
  br label %do.end819, !dbg !8976

do.end819:                                        ; preds = %do.body816
  br label %if.end821, !dbg !8977

if.else820:                                       ; preds = %if.else811
  store i32 1, i32* %checksort778, align 4, !dbg !8979
  br label %if.end821

if.end821:                                        ; preds = %if.else820, %do.end819
  br label %if.end822

if.end822:                                        ; preds = %if.end821, %if.end810
  %569 = load i16*, i16** %mid786, align 8, !dbg !8981
  %570 = bitcast i16* %569 to i8*, !dbg !8981
  %571 = load i16*, i16** %end765, align 8, !dbg !8984
  %572 = bitcast i16* %571 to i8*, !dbg !8984
  %call823 = call i32 @qsort_comparison_function_int16(i8* %570, i8* %572), !dbg !8985
  %cmp824 = icmp sgt i32 %call823, 0, !dbg !8986
  br i1 %cmp824, label %if.then826, label %if.end831, !dbg !8985

if.then826:                                       ; preds = %if.end822
  br label %do.body827, !dbg !8987, !llvm.loop !8990

do.body827:                                       ; preds = %if.then826
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp829, metadata !8992, metadata !2734), !dbg !8994
  %573 = load i16*, i16** %end765, align 8, !dbg !8995
  %574 = load i16, i16* %573, align 2, !dbg !8997
  store i16 %574, i16* %SWAP_tmp829, align 2, !dbg !8998
  %575 = load i16*, i16** %mid786, align 8, !dbg !8999
  %576 = load i16, i16* %575, align 2, !dbg !9000
  %577 = load i16*, i16** %end765, align 8, !dbg !9001
  store i16 %576, i16* %577, align 2, !dbg !9002
  %578 = load i16, i16* %SWAP_tmp829, align 2, !dbg !9003
  %579 = load i16*, i16** %mid786, align 8, !dbg !9004
  store i16 %578, i16* %579, align 2, !dbg !9005
  br label %do.end830, !dbg !9006

do.end830:                                        ; preds = %do.body827
  store i32 0, i32* %checksort778, align 4, !dbg !9007
  br label %if.end831, !dbg !9009

if.end831:                                        ; preds = %do.end830, %if.end822
  %580 = load i16*, i16** %start759, align 8, !dbg !9010
  %581 = load i16*, i16** %end765, align 8, !dbg !9013
  %add.ptr832 = getelementptr inbounds i16, i16* %581, i64 -2, !dbg !9014
  %cmp833 = icmp eq i16* %580, %add.ptr832, !dbg !9015
  br i1 %cmp833, label %if.then835, label %if.end836, !dbg !9010

if.then835:                                       ; preds = %if.end831
  br label %while.end954, !dbg !9016

if.end836:                                        ; preds = %if.end831
  br label %do.body837, !dbg !9018, !llvm.loop !9020

do.body837:                                       ; preds = %if.end836
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp839, metadata !9022, metadata !2734), !dbg !9024
  %582 = load i16*, i16** %mid786, align 8, !dbg !9025
  %583 = load i16, i16* %582, align 2, !dbg !9027
  store i16 %583, i16* %SWAP_tmp839, align 2, !dbg !9028
  %584 = load i16*, i16** %end765, align 8, !dbg !9029
  %arrayidx840 = getelementptr inbounds i16, i16* %584, i64 -1, !dbg !9029
  %585 = load i16, i16* %arrayidx840, align 2, !dbg !9029
  %586 = load i16*, i16** %mid786, align 8, !dbg !9030
  store i16 %585, i16* %586, align 2, !dbg !9031
  %587 = load i16, i16* %SWAP_tmp839, align 2, !dbg !9032
  %588 = load i16*, i16** %end765, align 8, !dbg !9033
  %arrayidx841 = getelementptr inbounds i16, i16* %588, i64 -1, !dbg !9033
  store i16 %587, i16* %arrayidx841, align 2, !dbg !9034
  br label %do.end842, !dbg !9035

do.end842:                                        ; preds = %do.body837
  br label %while.cond843, !dbg !9036

while.cond843:                                    ; preds = %if.end880, %do.end842
  %589 = load i16*, i16** %left783, align 8, !dbg !9038
  %590 = load i16*, i16** %right780, align 8, !dbg !9040
  %cmp844 = icmp ule i16* %589, %590, !dbg !9041
  br i1 %cmp844, label %while.body846, label %while.end881, !dbg !9042

while.body846:                                    ; preds = %while.cond843
  br label %while.cond847, !dbg !9043

while.cond847:                                    ; preds = %while.body856, %while.body846
  %591 = load i16*, i16** %left783, align 8, !dbg !9046
  %592 = load i16*, i16** %right780, align 8, !dbg !9048
  %cmp848 = icmp ule i16* %591, %592, !dbg !9049
  br i1 %cmp848, label %land.rhs850, label %land.end855, !dbg !9050

land.rhs850:                                      ; preds = %while.cond847
  %593 = load i16*, i16** %left783, align 8, !dbg !9051
  %594 = bitcast i16* %593 to i8*, !dbg !9051
  %595 = load i16*, i16** %end765, align 8, !dbg !9053
  %add.ptr851 = getelementptr inbounds i16, i16* %595, i64 -1, !dbg !9054
  %596 = bitcast i16* %add.ptr851 to i8*, !dbg !9053
  %call852 = call i32 @qsort_comparison_function_int16(i8* %594, i8* %596), !dbg !9055
  %cmp853 = icmp slt i32 %call852, 0, !dbg !9056
  br label %land.end855

land.end855:                                      ; preds = %land.rhs850, %while.cond847
  %597 = phi i1 [ false, %while.cond847 ], [ %cmp853, %land.rhs850 ]
  br i1 %597, label %while.body856, label %while.end858, !dbg !9057

while.body856:                                    ; preds = %land.end855
  %598 = load i16*, i16** %left783, align 8, !dbg !9059
  %incdec.ptr857 = getelementptr inbounds i16, i16* %598, i32 1, !dbg !9059
  store i16* %incdec.ptr857, i16** %left783, align 8, !dbg !9059
  br label %while.cond847, !dbg !9061, !llvm.loop !9062

while.end858:                                     ; preds = %land.end855
  br label %while.cond859, !dbg !9064

while.cond859:                                    ; preds = %while.body868, %while.end858
  %599 = load i16*, i16** %left783, align 8, !dbg !9066
  %600 = load i16*, i16** %right780, align 8, !dbg !9068
  %cmp860 = icmp ule i16* %599, %600, !dbg !9069
  br i1 %cmp860, label %land.rhs862, label %land.end867, !dbg !9070

land.rhs862:                                      ; preds = %while.cond859
  %601 = load i16*, i16** %right780, align 8, !dbg !9071
  %602 = bitcast i16* %601 to i8*, !dbg !9071
  %603 = load i16*, i16** %end765, align 8, !dbg !9073
  %add.ptr863 = getelementptr inbounds i16, i16* %603, i64 -1, !dbg !9074
  %604 = bitcast i16* %add.ptr863 to i8*, !dbg !9073
  %call864 = call i32 @qsort_comparison_function_int16(i8* %602, i8* %604), !dbg !9075
  %cmp865 = icmp sgt i32 %call864, 0, !dbg !9076
  br label %land.end867

land.end867:                                      ; preds = %land.rhs862, %while.cond859
  %605 = phi i1 [ false, %while.cond859 ], [ %cmp865, %land.rhs862 ]
  br i1 %605, label %while.body868, label %while.end870, !dbg !9077

while.body868:                                    ; preds = %land.end867
  %606 = load i16*, i16** %right780, align 8, !dbg !9079
  %incdec.ptr869 = getelementptr inbounds i16, i16* %606, i32 -1, !dbg !9079
  store i16* %incdec.ptr869, i16** %right780, align 8, !dbg !9079
  br label %while.cond859, !dbg !9081, !llvm.loop !9082

while.end870:                                     ; preds = %land.end867
  %607 = load i16*, i16** %left783, align 8, !dbg !9084
  %608 = load i16*, i16** %right780, align 8, !dbg !9087
  %cmp871 = icmp ule i16* %607, %608, !dbg !9088
  br i1 %cmp871, label %if.then873, label %if.end880, !dbg !9084

if.then873:                                       ; preds = %while.end870
  br label %do.body874, !dbg !9089, !llvm.loop !9092

do.body874:                                       ; preds = %if.then873
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp876, metadata !9094, metadata !2734), !dbg !9096
  %609 = load i16*, i16** %right780, align 8, !dbg !9097
  %610 = load i16, i16* %609, align 2, !dbg !9099
  store i16 %610, i16* %SWAP_tmp876, align 2, !dbg !9100
  %611 = load i16*, i16** %left783, align 8, !dbg !9101
  %612 = load i16, i16* %611, align 2, !dbg !9102
  %613 = load i16*, i16** %right780, align 8, !dbg !9103
  store i16 %612, i16* %613, align 2, !dbg !9104
  %614 = load i16, i16* %SWAP_tmp876, align 2, !dbg !9105
  %615 = load i16*, i16** %left783, align 8, !dbg !9106
  store i16 %614, i16* %615, align 2, !dbg !9107
  br label %do.end877, !dbg !9108

do.end877:                                        ; preds = %do.body874
  %616 = load i16*, i16** %left783, align 8, !dbg !9109
  %incdec.ptr878 = getelementptr inbounds i16, i16* %616, i32 1, !dbg !9109
  store i16* %incdec.ptr878, i16** %left783, align 8, !dbg !9109
  %617 = load i16*, i16** %right780, align 8, !dbg !9111
  %incdec.ptr879 = getelementptr inbounds i16, i16* %617, i32 -1, !dbg !9111
  store i16* %incdec.ptr879, i16** %right780, align 8, !dbg !9111
  br label %if.end880, !dbg !9112

if.end880:                                        ; preds = %do.end877, %while.end870
  br label %while.cond843, !dbg !9113, !llvm.loop !9115

while.end881:                                     ; preds = %while.cond843
  br label %do.body882, !dbg !9117, !llvm.loop !9119

do.body882:                                       ; preds = %while.end881
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp884, metadata !9121, metadata !2734), !dbg !9123
  %618 = load i16*, i16** %left783, align 8, !dbg !9124
  %619 = load i16, i16* %618, align 2, !dbg !9126
  store i16 %619, i16* %SWAP_tmp884, align 2, !dbg !9127
  %620 = load i16*, i16** %end765, align 8, !dbg !9128
  %arrayidx885 = getelementptr inbounds i16, i16* %620, i64 -1, !dbg !9128
  %621 = load i16, i16* %arrayidx885, align 2, !dbg !9128
  %622 = load i16*, i16** %left783, align 8, !dbg !9129
  store i16 %621, i16* %622, align 2, !dbg !9130
  %623 = load i16, i16* %SWAP_tmp884, align 2, !dbg !9131
  %624 = load i16*, i16** %end765, align 8, !dbg !9132
  %arrayidx886 = getelementptr inbounds i16, i16* %624, i64 -1, !dbg !9132
  store i16 %623, i16* %arrayidx886, align 2, !dbg !9133
  br label %do.end887, !dbg !9134

do.end887:                                        ; preds = %do.body882
  %625 = load i32, i32* %checksort778, align 4, !dbg !9135
  %tobool888 = icmp ne i32 %625, 0, !dbg !9135
  br i1 %tobool888, label %land.lhs.true889, label %if.end913, !dbg !9138

land.lhs.true889:                                 ; preds = %do.end887
  %626 = load i16*, i16** %mid786, align 8, !dbg !9139
  %627 = load i16*, i16** %left783, align 8, !dbg !9141
  %add.ptr890 = getelementptr inbounds i16, i16* %627, i64 -1, !dbg !9142
  %cmp891 = icmp eq i16* %626, %add.ptr890, !dbg !9143
  br i1 %cmp891, label %if.then896, label %lor.lhs.false893, !dbg !9144

lor.lhs.false893:                                 ; preds = %land.lhs.true889
  %628 = load i16*, i16** %mid786, align 8, !dbg !9145
  %629 = load i16*, i16** %left783, align 8, !dbg !9147
  %cmp894 = icmp eq i16* %628, %629, !dbg !9148
  br i1 %cmp894, label %if.then896, label %if.end913, !dbg !9149

if.then896:                                       ; preds = %lor.lhs.false893, %land.lhs.true889
  %630 = load i16*, i16** %start759, align 8, !dbg !9150
  store i16* %630, i16** %mid786, align 8, !dbg !9153
  br label %while.cond897, !dbg !9154

while.cond897:                                    ; preds = %while.body906, %if.then896
  %631 = load i16*, i16** %mid786, align 8, !dbg !9155
  %632 = load i16*, i16** %end765, align 8, !dbg !9157
  %cmp898 = icmp ult i16* %631, %632, !dbg !9158
  br i1 %cmp898, label %land.rhs900, label %land.end905, !dbg !9159

land.rhs900:                                      ; preds = %while.cond897
  %633 = load i16*, i16** %mid786, align 8, !dbg !9160
  %634 = bitcast i16* %633 to i8*, !dbg !9160
  %635 = load i16*, i16** %mid786, align 8, !dbg !9162
  %add.ptr901 = getelementptr inbounds i16, i16* %635, i64 1, !dbg !9163
  %636 = bitcast i16* %add.ptr901 to i8*, !dbg !9162
  %call902 = call i32 @qsort_comparison_function_int16(i8* %634, i8* %636), !dbg !9164
  %cmp903 = icmp sle i32 %call902, 0, !dbg !9165
  br label %land.end905

land.end905:                                      ; preds = %land.rhs900, %while.cond897
  %637 = phi i1 [ false, %while.cond897 ], [ %cmp903, %land.rhs900 ]
  br i1 %637, label %while.body906, label %while.end908, !dbg !9166

while.body906:                                    ; preds = %land.end905
  %638 = load i16*, i16** %mid786, align 8, !dbg !9168
  %incdec.ptr907 = getelementptr inbounds i16, i16* %638, i32 1, !dbg !9168
  store i16* %incdec.ptr907, i16** %mid786, align 8, !dbg !9168
  br label %while.cond897, !dbg !9170, !llvm.loop !9171

while.end908:                                     ; preds = %land.end905
  %639 = load i16*, i16** %mid786, align 8, !dbg !9173
  %640 = load i16*, i16** %end765, align 8, !dbg !9176
  %cmp909 = icmp eq i16* %639, %640, !dbg !9177
  br i1 %cmp909, label %if.then911, label %if.end912, !dbg !9173

if.then911:                                       ; preds = %while.end908
  br label %while.end954, !dbg !9178

if.end912:                                        ; preds = %while.end908
  br label %if.end913, !dbg !9180

if.end913:                                        ; preds = %if.end912, %lor.lhs.false893, %do.end887
  %641 = load i16*, i16** %end765, align 8, !dbg !9182
  %642 = load i16*, i16** %left783, align 8, !dbg !9185
  %sub.ptr.lhs.cast914 = ptrtoint i16* %641 to i64, !dbg !9186
  %sub.ptr.rhs.cast915 = ptrtoint i16* %642 to i64, !dbg !9186
  %sub.ptr.sub916 = sub i64 %sub.ptr.lhs.cast914, %sub.ptr.rhs.cast915, !dbg !9186
  %sub.ptr.div917 = sdiv exact i64 %sub.ptr.sub916, 2, !dbg !9186
  %643 = load i16*, i16** %left783, align 8, !dbg !9187
  %644 = load i16*, i16** %start759, align 8, !dbg !9188
  %sub.ptr.lhs.cast918 = ptrtoint i16* %643 to i64, !dbg !9189
  %sub.ptr.rhs.cast919 = ptrtoint i16* %644 to i64, !dbg !9189
  %sub.ptr.sub920 = sub i64 %sub.ptr.lhs.cast918, %sub.ptr.rhs.cast919, !dbg !9189
  %sub.ptr.div921 = sdiv exact i64 %sub.ptr.sub920, 2, !dbg !9189
  %cmp922 = icmp slt i64 %sub.ptr.div917, %sub.ptr.div921, !dbg !9190
  br i1 %cmp922, label %if.then924, label %if.else933, !dbg !9182

if.then924:                                       ; preds = %if.end913
  %645 = load i16*, i16** %start759, align 8, !dbg !9191
  %646 = bitcast i16* %645 to i8*, !dbg !9191
  %647 = load i32, i32* %sp743, align 4, !dbg !9194
  %idxprom925 = sext i32 %647 to i64, !dbg !9195
  %arrayidx926 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack741, i64 0, i64 %idxprom925, !dbg !9195
  %arrayidx927 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx926, i64 0, i64 0, !dbg !9195
  store i8* %646, i8** %arrayidx927, align 16, !dbg !9196
  %648 = load i16*, i16** %right780, align 8, !dbg !9197
  %649 = bitcast i16* %648 to i8*, !dbg !9197
  %650 = load i32, i32* %sp743, align 4, !dbg !9198
  %inc928 = add nsw i32 %650, 1, !dbg !9198
  store i32 %inc928, i32* %sp743, align 4, !dbg !9198
  %idxprom929 = sext i32 %650 to i64, !dbg !9199
  %arrayidx930 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack741, i64 0, i64 %idxprom929, !dbg !9199
  %arrayidx931 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx930, i64 0, i64 1, !dbg !9199
  store i8* %649, i8** %arrayidx931, align 8, !dbg !9200
  %651 = load i16*, i16** %left783, align 8, !dbg !9201
  %add.ptr932 = getelementptr inbounds i16, i16* %651, i64 1, !dbg !9202
  store i16* %add.ptr932, i16** %start759, align 8, !dbg !9203
  br label %if.end942, !dbg !9204

if.else933:                                       ; preds = %if.end913
  %652 = load i16*, i16** %left783, align 8, !dbg !9205
  %add.ptr934 = getelementptr inbounds i16, i16* %652, i64 1, !dbg !9208
  %653 = bitcast i16* %add.ptr934 to i8*, !dbg !9205
  %654 = load i32, i32* %sp743, align 4, !dbg !9209
  %idxprom935 = sext i32 %654 to i64, !dbg !9210
  %arrayidx936 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack741, i64 0, i64 %idxprom935, !dbg !9210
  %arrayidx937 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx936, i64 0, i64 0, !dbg !9210
  store i8* %653, i8** %arrayidx937, align 16, !dbg !9211
  %655 = load i16*, i16** %end765, align 8, !dbg !9212
  %656 = bitcast i16* %655 to i8*, !dbg !9212
  %657 = load i32, i32* %sp743, align 4, !dbg !9213
  %inc938 = add nsw i32 %657, 1, !dbg !9213
  store i32 %inc938, i32* %sp743, align 4, !dbg !9213
  %idxprom939 = sext i32 %657 to i64, !dbg !9214
  %arrayidx940 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack741, i64 0, i64 %idxprom939, !dbg !9214
  %arrayidx941 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx940, i64 0, i64 1, !dbg !9214
  store i8* %656, i8** %arrayidx941, align 8, !dbg !9215
  %658 = load i16*, i16** %right780, align 8, !dbg !9216
  store i16* %658, i16** %end765, align 8, !dbg !9217
  br label %if.end942

if.end942:                                        ; preds = %if.else933, %if.then924
  br label %if.end953, !dbg !9218

if.else943:                                       ; preds = %while.body772
  %659 = load i16*, i16** %start759, align 8, !dbg !9220
  %660 = bitcast i16* %659 to i8*, !dbg !9220
  %661 = load i16*, i16** %end765, align 8, !dbg !9224
  %662 = bitcast i16* %661 to i8*, !dbg !9224
  %call944 = call i32 @qsort_comparison_function_int16(i8* %660, i8* %662), !dbg !9225
  %cmp945 = icmp sgt i32 %call944, 0, !dbg !9226
  br i1 %cmp945, label %if.then947, label %if.end952, !dbg !9225

if.then947:                                       ; preds = %if.else943
  br label %do.body948, !dbg !9227, !llvm.loop !9229

do.body948:                                       ; preds = %if.then947
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp950, metadata !9231, metadata !2734), !dbg !9233
  %663 = load i16*, i16** %end765, align 8, !dbg !9234
  %664 = load i16, i16* %663, align 2, !dbg !9236
  store i16 %664, i16* %SWAP_tmp950, align 2, !dbg !9237
  %665 = load i16*, i16** %start759, align 8, !dbg !9238
  %666 = load i16, i16* %665, align 2, !dbg !9239
  %667 = load i16*, i16** %end765, align 8, !dbg !9240
  store i16 %666, i16* %667, align 2, !dbg !9241
  %668 = load i16, i16* %SWAP_tmp950, align 2, !dbg !9242
  %669 = load i16*, i16** %start759, align 8, !dbg !9243
  store i16 %668, i16* %669, align 2, !dbg !9244
  br label %do.end951, !dbg !9245

do.end951:                                        ; preds = %do.body948
  br label %if.end952, !dbg !9246

if.end952:                                        ; preds = %do.end951, %if.else943
  br label %while.end954, !dbg !9248

if.end953:                                        ; preds = %if.end942
  br label %while.cond769, !dbg !9250, !llvm.loop !9252

while.end954:                                     ; preds = %if.end952, %if.then911, %if.then835, %while.cond769
  br label %while.cond755, !dbg !9254, !llvm.loop !9256

while.end955:                                     ; preds = %while.cond755
  br label %do.end956, !dbg !9258

do.end956:                                        ; preds = %while.end955
  %670 = load i32, i32* %vdk0_max, align 4, !dbg !9260
  %arrayidx957 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 1, !dbg !9261
  %671 = load i16, i16* %arrayidx957, align 2, !dbg !9261
  %conv958 = sext i16 %671 to i32, !dbg !9261
  %sub959 = sub nsw i32 %670, %conv958, !dbg !9262
  %672 = load i32, i32* %num_bands_1, align 4, !dbg !9263
  %idxprom960 = sext i32 %672 to i64, !dbg !9264
  %arrayidx961 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom960, !dbg !9264
  %673 = load i16, i16* %arrayidx961, align 2, !dbg !9264
  %conv962 = sext i16 %673 to i32, !dbg !9264
  %arrayidx963 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 1, !dbg !9265
  %674 = load i16, i16* %arrayidx963, align 2, !dbg !9265
  %conv964 = sext i16 %674 to i32, !dbg !9265
  %sub965 = sub nsw i32 %conv962, %conv964, !dbg !9266
  %shr966 = ashr i32 %sub965, 1, !dbg !9267
  %cmp967 = icmp sgt i32 %sub959, %shr966, !dbg !9268
  br i1 %cmp967, label %cond.true969, label %cond.false977, !dbg !9269

cond.true969:                                     ; preds = %do.end956
  %675 = load i32, i32* %num_bands_1, align 4, !dbg !9270
  %idxprom970 = sext i32 %675 to i64, !dbg !9272
  %arrayidx971 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom970, !dbg !9272
  %676 = load i16, i16* %arrayidx971, align 2, !dbg !9272
  %conv972 = sext i16 %676 to i32, !dbg !9272
  %arrayidx973 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 1, !dbg !9273
  %677 = load i16, i16* %arrayidx973, align 2, !dbg !9273
  %conv974 = sext i16 %677 to i32, !dbg !9273
  %sub975 = sub nsw i32 %conv972, %conv974, !dbg !9274
  %shr976 = ashr i32 %sub975, 1, !dbg !9275
  br label %cond.end981, !dbg !9276

cond.false977:                                    ; preds = %do.end956
  %678 = load i32, i32* %vdk0_max, align 4, !dbg !9277
  %arrayidx978 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 1, !dbg !9279
  %679 = load i16, i16* %arrayidx978, align 2, !dbg !9279
  %conv979 = sext i16 %679 to i32, !dbg !9279
  %sub980 = sub nsw i32 %678, %conv979, !dbg !9280
  br label %cond.end981, !dbg !9281

cond.end981:                                      ; preds = %cond.false977, %cond.true969
  %cond982 = phi i32 [ %shr976, %cond.true969 ], [ %sub980, %cond.false977 ], !dbg !9282
  store i32 %cond982, i32* %change, align 4, !dbg !9284
  %680 = load i32, i32* %change, align 4, !dbg !9285
  %arrayidx983 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 1, !dbg !9286
  %681 = load i16, i16* %arrayidx983, align 2, !dbg !9287
  %conv984 = sext i16 %681 to i32, !dbg !9287
  %add985 = add nsw i32 %conv984, %680, !dbg !9287
  %conv986 = trunc i32 %add985 to i16, !dbg !9287
  store i16 %conv986, i16* %arrayidx983, align 2, !dbg !9287
  %682 = load i32, i32* %change, align 4, !dbg !9288
  %683 = load i32, i32* %num_bands_1, align 4, !dbg !9289
  %idxprom987 = sext i32 %683 to i64, !dbg !9290
  %arrayidx988 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom987, !dbg !9290
  %684 = load i16, i16* %arrayidx988, align 2, !dbg !9291
  %conv989 = sext i16 %684 to i32, !dbg !9291
  %sub990 = sub nsw i32 %conv989, %682, !dbg !9291
  %conv991 = trunc i32 %sub990 to i16, !dbg !9291
  store i16 %conv991, i16* %arrayidx988, align 2, !dbg !9291
  br label %if.end992, !dbg !9292

if.end992:                                        ; preds = %cond.end981, %if.end722
  br label %do.body993, !dbg !9293, !llvm.loop !9294

do.body993:                                       ; preds = %if.end992
  call void @llvm.dbg.declare(metadata [64 x [2 x i8*]]* %stack995, metadata !9295, metadata !2734), !dbg !9297
  call void @llvm.dbg.declare(metadata i32* %sp997, metadata !9298, metadata !2734), !dbg !9299
  store i32 1, i32* %sp997, align 4, !dbg !9300
  %arraydecay998 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !9302
  %add.ptr999 = getelementptr inbounds i16, i16* %arraydecay998, i64 1, !dbg !9303
  %685 = bitcast i16* %add.ptr999 to i8*, !dbg !9302
  %arrayidx1000 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack995, i64 0, i64 0, !dbg !9304
  %arrayidx1001 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx1000, i64 0, i64 0, !dbg !9304
  store i8* %685, i8** %arrayidx1001, align 16, !dbg !9305
  %arraydecay1002 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !9306
  %add.ptr1003 = getelementptr inbounds i16, i16* %arraydecay1002, i64 1, !dbg !9307
  %686 = load i32, i32* %num_bands_1, align 4, !dbg !9308
  %idx.ext1004 = sext i32 %686 to i64, !dbg !9309
  %add.ptr1005 = getelementptr inbounds i16, i16* %add.ptr1003, i64 %idx.ext1004, !dbg !9309
  %add.ptr1006 = getelementptr inbounds i16, i16* %add.ptr1005, i64 -1, !dbg !9310
  %687 = bitcast i16* %add.ptr1006 to i8*, !dbg !9311
  %arrayidx1007 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack995, i64 0, i64 0, !dbg !9312
  %arrayidx1008 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx1007, i64 0, i64 1, !dbg !9312
  store i8* %687, i8** %arrayidx1008, align 8, !dbg !9313
  br label %while.cond1009, !dbg !9314

while.cond1009:                                   ; preds = %while.end1208, %do.body993
  %688 = load i32, i32* %sp997, align 4, !dbg !9315
  %tobool1010 = icmp ne i32 %688, 0, !dbg !9317
  br i1 %tobool1010, label %while.body1011, label %while.end1209, !dbg !9317

while.body1011:                                   ; preds = %while.cond1009
  call void @llvm.dbg.declare(metadata i16** %start1013, metadata !9318, metadata !2734), !dbg !9320
  %689 = load i32, i32* %sp997, align 4, !dbg !9321
  %dec1014 = add nsw i32 %689, -1, !dbg !9321
  store i32 %dec1014, i32* %sp997, align 4, !dbg !9321
  %idxprom1015 = sext i32 %dec1014 to i64, !dbg !9323
  %arrayidx1016 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack995, i64 0, i64 %idxprom1015, !dbg !9323
  %arrayidx1017 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx1016, i64 0, i64 0, !dbg !9323
  %690 = load i8*, i8** %arrayidx1017, align 16, !dbg !9323
  %691 = bitcast i8* %690 to i16*, !dbg !9323
  store i16* %691, i16** %start1013, align 8, !dbg !9324
  call void @llvm.dbg.declare(metadata i16** %end1019, metadata !9325, metadata !2734), !dbg !9326
  %692 = load i32, i32* %sp997, align 4, !dbg !9327
  %idxprom1020 = sext i32 %692 to i64, !dbg !9328
  %arrayidx1021 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack995, i64 0, i64 %idxprom1020, !dbg !9328
  %arrayidx1022 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx1021, i64 0, i64 1, !dbg !9328
  %693 = load i8*, i8** %arrayidx1022, align 8, !dbg !9328
  %694 = bitcast i8* %693 to i16*, !dbg !9328
  store i16* %694, i16** %end1019, align 8, !dbg !9329
  br label %while.cond1023, !dbg !9330

while.cond1023:                                   ; preds = %if.end1207, %while.body1011
  %695 = load i16*, i16** %start1013, align 8, !dbg !9331
  %696 = load i16*, i16** %end1019, align 8, !dbg !9333
  %cmp1024 = icmp ult i16* %695, %696, !dbg !9334
  br i1 %cmp1024, label %while.body1026, label %while.end1208, !dbg !9335

while.body1026:                                   ; preds = %while.cond1023
  %697 = load i16*, i16** %start1013, align 8, !dbg !9336
  %698 = load i16*, i16** %end1019, align 8, !dbg !9340
  %add.ptr1027 = getelementptr inbounds i16, i16* %698, i64 -1, !dbg !9341
  %cmp1028 = icmp ult i16* %697, %add.ptr1027, !dbg !9342
  br i1 %cmp1028, label %if.then1030, label %if.else1197, !dbg !9336

if.then1030:                                      ; preds = %while.body1026
  call void @llvm.dbg.declare(metadata i32* %checksort1032, metadata !9343, metadata !2734), !dbg !9345
  store i32 0, i32* %checksort1032, align 4, !dbg !9346
  call void @llvm.dbg.declare(metadata i16** %right1034, metadata !9348, metadata !2734), !dbg !9349
  %699 = load i16*, i16** %end1019, align 8, !dbg !9350
  %add.ptr1035 = getelementptr inbounds i16, i16* %699, i64 -2, !dbg !9351
  store i16* %add.ptr1035, i16** %right1034, align 8, !dbg !9352
  call void @llvm.dbg.declare(metadata i16** %left1037, metadata !9353, metadata !2734), !dbg !9354
  %700 = load i16*, i16** %start1013, align 8, !dbg !9355
  %add.ptr1038 = getelementptr inbounds i16, i16* %700, i64 1, !dbg !9356
  store i16* %add.ptr1038, i16** %left1037, align 8, !dbg !9357
  call void @llvm.dbg.declare(metadata i16** %mid1040, metadata !9358, metadata !2734), !dbg !9359
  %701 = load i16*, i16** %start1013, align 8, !dbg !9360
  %702 = load i16*, i16** %end1019, align 8, !dbg !9361
  %703 = load i16*, i16** %start1013, align 8, !dbg !9362
  %sub.ptr.lhs.cast1041 = ptrtoint i16* %702 to i64, !dbg !9363
  %sub.ptr.rhs.cast1042 = ptrtoint i16* %703 to i64, !dbg !9363
  %sub.ptr.sub1043 = sub i64 %sub.ptr.lhs.cast1041, %sub.ptr.rhs.cast1042, !dbg !9363
  %sub.ptr.div1044 = sdiv exact i64 %sub.ptr.sub1043, 2, !dbg !9363
  %shr1045 = ashr i64 %sub.ptr.div1044, 1, !dbg !9364
  %add.ptr1046 = getelementptr inbounds i16, i16* %701, i64 %shr1045, !dbg !9365
  store i16* %add.ptr1046, i16** %mid1040, align 8, !dbg !9366
  %704 = load i16*, i16** %start1013, align 8, !dbg !9367
  %705 = bitcast i16* %704 to i8*, !dbg !9367
  %706 = load i16*, i16** %end1019, align 8, !dbg !9368
  %707 = bitcast i16* %706 to i8*, !dbg !9368
  %call1047 = call i32 @qsort_comparison_function_int16(i8* %705, i8* %707), !dbg !9369
  %cmp1048 = icmp sgt i32 %call1047, 0, !dbg !9370
  br i1 %cmp1048, label %if.then1050, label %if.else1065, !dbg !9369

if.then1050:                                      ; preds = %if.then1030
  %708 = load i16*, i16** %end1019, align 8, !dbg !9371
  %709 = bitcast i16* %708 to i8*, !dbg !9371
  %710 = load i16*, i16** %mid1040, align 8, !dbg !9376
  %711 = bitcast i16* %710 to i8*, !dbg !9376
  %call1051 = call i32 @qsort_comparison_function_int16(i8* %709, i8* %711), !dbg !9377
  %cmp1052 = icmp sgt i32 %call1051, 0, !dbg !9378
  br i1 %cmp1052, label %if.then1054, label %if.else1059, !dbg !9377

if.then1054:                                      ; preds = %if.then1050
  br label %do.body1055, !dbg !9379, !llvm.loop !9381

do.body1055:                                      ; preds = %if.then1054
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp1057, metadata !9383, metadata !2734), !dbg !9385
  %712 = load i16*, i16** %mid1040, align 8, !dbg !9386
  %713 = load i16, i16* %712, align 2, !dbg !9388
  store i16 %713, i16* %SWAP_tmp1057, align 2, !dbg !9389
  %714 = load i16*, i16** %start1013, align 8, !dbg !9390
  %715 = load i16, i16* %714, align 2, !dbg !9391
  %716 = load i16*, i16** %mid1040, align 8, !dbg !9392
  store i16 %715, i16* %716, align 2, !dbg !9393
  %717 = load i16, i16* %SWAP_tmp1057, align 2, !dbg !9394
  %718 = load i16*, i16** %start1013, align 8, !dbg !9395
  store i16 %717, i16* %718, align 2, !dbg !9396
  br label %do.end1058, !dbg !9397

do.end1058:                                       ; preds = %do.body1055
  br label %if.end1064, !dbg !9398

if.else1059:                                      ; preds = %if.then1050
  br label %do.body1060, !dbg !9400, !llvm.loop !9402

do.body1060:                                      ; preds = %if.else1059
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp1062, metadata !9404, metadata !2734), !dbg !9406
  %719 = load i16*, i16** %end1019, align 8, !dbg !9407
  %720 = load i16, i16* %719, align 2, !dbg !9409
  store i16 %720, i16* %SWAP_tmp1062, align 2, !dbg !9410
  %721 = load i16*, i16** %start1013, align 8, !dbg !9411
  %722 = load i16, i16* %721, align 2, !dbg !9412
  %723 = load i16*, i16** %end1019, align 8, !dbg !9413
  store i16 %722, i16* %723, align 2, !dbg !9414
  %724 = load i16, i16* %SWAP_tmp1062, align 2, !dbg !9415
  %725 = load i16*, i16** %start1013, align 8, !dbg !9416
  store i16 %724, i16* %725, align 2, !dbg !9417
  br label %do.end1063, !dbg !9418

do.end1063:                                       ; preds = %do.body1060
  br label %if.end1064

if.end1064:                                       ; preds = %do.end1063, %do.end1058
  br label %if.end1076, !dbg !9419

if.else1065:                                      ; preds = %if.then1030
  %726 = load i16*, i16** %start1013, align 8, !dbg !9421
  %727 = bitcast i16* %726 to i8*, !dbg !9421
  %728 = load i16*, i16** %mid1040, align 8, !dbg !9425
  %729 = bitcast i16* %728 to i8*, !dbg !9425
  %call1066 = call i32 @qsort_comparison_function_int16(i8* %727, i8* %729), !dbg !9426
  %cmp1067 = icmp sgt i32 %call1066, 0, !dbg !9427
  br i1 %cmp1067, label %if.then1069, label %if.else1074, !dbg !9426

if.then1069:                                      ; preds = %if.else1065
  br label %do.body1070, !dbg !9428, !llvm.loop !9430

do.body1070:                                      ; preds = %if.then1069
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp1072, metadata !9432, metadata !2734), !dbg !9434
  %730 = load i16*, i16** %mid1040, align 8, !dbg !9435
  %731 = load i16, i16* %730, align 2, !dbg !9437
  store i16 %731, i16* %SWAP_tmp1072, align 2, !dbg !9438
  %732 = load i16*, i16** %start1013, align 8, !dbg !9439
  %733 = load i16, i16* %732, align 2, !dbg !9440
  %734 = load i16*, i16** %mid1040, align 8, !dbg !9441
  store i16 %733, i16* %734, align 2, !dbg !9442
  %735 = load i16, i16* %SWAP_tmp1072, align 2, !dbg !9443
  %736 = load i16*, i16** %start1013, align 8, !dbg !9444
  store i16 %735, i16* %736, align 2, !dbg !9445
  br label %do.end1073, !dbg !9446

do.end1073:                                       ; preds = %do.body1070
  br label %if.end1075, !dbg !9447

if.else1074:                                      ; preds = %if.else1065
  store i32 1, i32* %checksort1032, align 4, !dbg !9449
  br label %if.end1075

if.end1075:                                       ; preds = %if.else1074, %do.end1073
  br label %if.end1076

if.end1076:                                       ; preds = %if.end1075, %if.end1064
  %737 = load i16*, i16** %mid1040, align 8, !dbg !9451
  %738 = bitcast i16* %737 to i8*, !dbg !9451
  %739 = load i16*, i16** %end1019, align 8, !dbg !9454
  %740 = bitcast i16* %739 to i8*, !dbg !9454
  %call1077 = call i32 @qsort_comparison_function_int16(i8* %738, i8* %740), !dbg !9455
  %cmp1078 = icmp sgt i32 %call1077, 0, !dbg !9456
  br i1 %cmp1078, label %if.then1080, label %if.end1085, !dbg !9455

if.then1080:                                      ; preds = %if.end1076
  br label %do.body1081, !dbg !9457, !llvm.loop !9460

do.body1081:                                      ; preds = %if.then1080
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp1083, metadata !9462, metadata !2734), !dbg !9464
  %741 = load i16*, i16** %end1019, align 8, !dbg !9465
  %742 = load i16, i16* %741, align 2, !dbg !9467
  store i16 %742, i16* %SWAP_tmp1083, align 2, !dbg !9468
  %743 = load i16*, i16** %mid1040, align 8, !dbg !9469
  %744 = load i16, i16* %743, align 2, !dbg !9470
  %745 = load i16*, i16** %end1019, align 8, !dbg !9471
  store i16 %744, i16* %745, align 2, !dbg !9472
  %746 = load i16, i16* %SWAP_tmp1083, align 2, !dbg !9473
  %747 = load i16*, i16** %mid1040, align 8, !dbg !9474
  store i16 %746, i16* %747, align 2, !dbg !9475
  br label %do.end1084, !dbg !9476

do.end1084:                                       ; preds = %do.body1081
  store i32 0, i32* %checksort1032, align 4, !dbg !9477
  br label %if.end1085, !dbg !9479

if.end1085:                                       ; preds = %do.end1084, %if.end1076
  %748 = load i16*, i16** %start1013, align 8, !dbg !9480
  %749 = load i16*, i16** %end1019, align 8, !dbg !9483
  %add.ptr1086 = getelementptr inbounds i16, i16* %749, i64 -2, !dbg !9484
  %cmp1087 = icmp eq i16* %748, %add.ptr1086, !dbg !9485
  br i1 %cmp1087, label %if.then1089, label %if.end1090, !dbg !9480

if.then1089:                                      ; preds = %if.end1085
  br label %while.end1208, !dbg !9486

if.end1090:                                       ; preds = %if.end1085
  br label %do.body1091, !dbg !9488, !llvm.loop !9490

do.body1091:                                      ; preds = %if.end1090
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp1093, metadata !9492, metadata !2734), !dbg !9494
  %750 = load i16*, i16** %mid1040, align 8, !dbg !9495
  %751 = load i16, i16* %750, align 2, !dbg !9497
  store i16 %751, i16* %SWAP_tmp1093, align 2, !dbg !9498
  %752 = load i16*, i16** %end1019, align 8, !dbg !9499
  %arrayidx1094 = getelementptr inbounds i16, i16* %752, i64 -1, !dbg !9499
  %753 = load i16, i16* %arrayidx1094, align 2, !dbg !9499
  %754 = load i16*, i16** %mid1040, align 8, !dbg !9500
  store i16 %753, i16* %754, align 2, !dbg !9501
  %755 = load i16, i16* %SWAP_tmp1093, align 2, !dbg !9502
  %756 = load i16*, i16** %end1019, align 8, !dbg !9503
  %arrayidx1095 = getelementptr inbounds i16, i16* %756, i64 -1, !dbg !9503
  store i16 %755, i16* %arrayidx1095, align 2, !dbg !9504
  br label %do.end1096, !dbg !9505

do.end1096:                                       ; preds = %do.body1091
  br label %while.cond1097, !dbg !9506

while.cond1097:                                   ; preds = %if.end1134, %do.end1096
  %757 = load i16*, i16** %left1037, align 8, !dbg !9508
  %758 = load i16*, i16** %right1034, align 8, !dbg !9510
  %cmp1098 = icmp ule i16* %757, %758, !dbg !9511
  br i1 %cmp1098, label %while.body1100, label %while.end1135, !dbg !9512

while.body1100:                                   ; preds = %while.cond1097
  br label %while.cond1101, !dbg !9513

while.cond1101:                                   ; preds = %while.body1110, %while.body1100
  %759 = load i16*, i16** %left1037, align 8, !dbg !9516
  %760 = load i16*, i16** %right1034, align 8, !dbg !9518
  %cmp1102 = icmp ule i16* %759, %760, !dbg !9519
  br i1 %cmp1102, label %land.rhs1104, label %land.end1109, !dbg !9520

land.rhs1104:                                     ; preds = %while.cond1101
  %761 = load i16*, i16** %left1037, align 8, !dbg !9521
  %762 = bitcast i16* %761 to i8*, !dbg !9521
  %763 = load i16*, i16** %end1019, align 8, !dbg !9523
  %add.ptr1105 = getelementptr inbounds i16, i16* %763, i64 -1, !dbg !9524
  %764 = bitcast i16* %add.ptr1105 to i8*, !dbg !9523
  %call1106 = call i32 @qsort_comparison_function_int16(i8* %762, i8* %764), !dbg !9525
  %cmp1107 = icmp slt i32 %call1106, 0, !dbg !9526
  br label %land.end1109

land.end1109:                                     ; preds = %land.rhs1104, %while.cond1101
  %765 = phi i1 [ false, %while.cond1101 ], [ %cmp1107, %land.rhs1104 ]
  br i1 %765, label %while.body1110, label %while.end1112, !dbg !9527

while.body1110:                                   ; preds = %land.end1109
  %766 = load i16*, i16** %left1037, align 8, !dbg !9529
  %incdec.ptr1111 = getelementptr inbounds i16, i16* %766, i32 1, !dbg !9529
  store i16* %incdec.ptr1111, i16** %left1037, align 8, !dbg !9529
  br label %while.cond1101, !dbg !9531, !llvm.loop !9532

while.end1112:                                    ; preds = %land.end1109
  br label %while.cond1113, !dbg !9534

while.cond1113:                                   ; preds = %while.body1122, %while.end1112
  %767 = load i16*, i16** %left1037, align 8, !dbg !9536
  %768 = load i16*, i16** %right1034, align 8, !dbg !9538
  %cmp1114 = icmp ule i16* %767, %768, !dbg !9539
  br i1 %cmp1114, label %land.rhs1116, label %land.end1121, !dbg !9540

land.rhs1116:                                     ; preds = %while.cond1113
  %769 = load i16*, i16** %right1034, align 8, !dbg !9541
  %770 = bitcast i16* %769 to i8*, !dbg !9541
  %771 = load i16*, i16** %end1019, align 8, !dbg !9543
  %add.ptr1117 = getelementptr inbounds i16, i16* %771, i64 -1, !dbg !9544
  %772 = bitcast i16* %add.ptr1117 to i8*, !dbg !9543
  %call1118 = call i32 @qsort_comparison_function_int16(i8* %770, i8* %772), !dbg !9545
  %cmp1119 = icmp sgt i32 %call1118, 0, !dbg !9546
  br label %land.end1121

land.end1121:                                     ; preds = %land.rhs1116, %while.cond1113
  %773 = phi i1 [ false, %while.cond1113 ], [ %cmp1119, %land.rhs1116 ]
  br i1 %773, label %while.body1122, label %while.end1124, !dbg !9547

while.body1122:                                   ; preds = %land.end1121
  %774 = load i16*, i16** %right1034, align 8, !dbg !9549
  %incdec.ptr1123 = getelementptr inbounds i16, i16* %774, i32 -1, !dbg !9549
  store i16* %incdec.ptr1123, i16** %right1034, align 8, !dbg !9549
  br label %while.cond1113, !dbg !9551, !llvm.loop !9552

while.end1124:                                    ; preds = %land.end1121
  %775 = load i16*, i16** %left1037, align 8, !dbg !9554
  %776 = load i16*, i16** %right1034, align 8, !dbg !9557
  %cmp1125 = icmp ule i16* %775, %776, !dbg !9558
  br i1 %cmp1125, label %if.then1127, label %if.end1134, !dbg !9554

if.then1127:                                      ; preds = %while.end1124
  br label %do.body1128, !dbg !9559, !llvm.loop !9562

do.body1128:                                      ; preds = %if.then1127
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp1130, metadata !9564, metadata !2734), !dbg !9566
  %777 = load i16*, i16** %right1034, align 8, !dbg !9567
  %778 = load i16, i16* %777, align 2, !dbg !9569
  store i16 %778, i16* %SWAP_tmp1130, align 2, !dbg !9570
  %779 = load i16*, i16** %left1037, align 8, !dbg !9571
  %780 = load i16, i16* %779, align 2, !dbg !9572
  %781 = load i16*, i16** %right1034, align 8, !dbg !9573
  store i16 %780, i16* %781, align 2, !dbg !9574
  %782 = load i16, i16* %SWAP_tmp1130, align 2, !dbg !9575
  %783 = load i16*, i16** %left1037, align 8, !dbg !9576
  store i16 %782, i16* %783, align 2, !dbg !9577
  br label %do.end1131, !dbg !9578

do.end1131:                                       ; preds = %do.body1128
  %784 = load i16*, i16** %left1037, align 8, !dbg !9579
  %incdec.ptr1132 = getelementptr inbounds i16, i16* %784, i32 1, !dbg !9579
  store i16* %incdec.ptr1132, i16** %left1037, align 8, !dbg !9579
  %785 = load i16*, i16** %right1034, align 8, !dbg !9581
  %incdec.ptr1133 = getelementptr inbounds i16, i16* %785, i32 -1, !dbg !9581
  store i16* %incdec.ptr1133, i16** %right1034, align 8, !dbg !9581
  br label %if.end1134, !dbg !9582

if.end1134:                                       ; preds = %do.end1131, %while.end1124
  br label %while.cond1097, !dbg !9583, !llvm.loop !9585

while.end1135:                                    ; preds = %while.cond1097
  br label %do.body1136, !dbg !9587, !llvm.loop !9589

do.body1136:                                      ; preds = %while.end1135
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp1138, metadata !9591, metadata !2734), !dbg !9593
  %786 = load i16*, i16** %left1037, align 8, !dbg !9594
  %787 = load i16, i16* %786, align 2, !dbg !9596
  store i16 %787, i16* %SWAP_tmp1138, align 2, !dbg !9597
  %788 = load i16*, i16** %end1019, align 8, !dbg !9598
  %arrayidx1139 = getelementptr inbounds i16, i16* %788, i64 -1, !dbg !9598
  %789 = load i16, i16* %arrayidx1139, align 2, !dbg !9598
  %790 = load i16*, i16** %left1037, align 8, !dbg !9599
  store i16 %789, i16* %790, align 2, !dbg !9600
  %791 = load i16, i16* %SWAP_tmp1138, align 2, !dbg !9601
  %792 = load i16*, i16** %end1019, align 8, !dbg !9602
  %arrayidx1140 = getelementptr inbounds i16, i16* %792, i64 -1, !dbg !9602
  store i16 %791, i16* %arrayidx1140, align 2, !dbg !9603
  br label %do.end1141, !dbg !9604

do.end1141:                                       ; preds = %do.body1136
  %793 = load i32, i32* %checksort1032, align 4, !dbg !9605
  %tobool1142 = icmp ne i32 %793, 0, !dbg !9605
  br i1 %tobool1142, label %land.lhs.true1143, label %if.end1167, !dbg !9608

land.lhs.true1143:                                ; preds = %do.end1141
  %794 = load i16*, i16** %mid1040, align 8, !dbg !9609
  %795 = load i16*, i16** %left1037, align 8, !dbg !9611
  %add.ptr1144 = getelementptr inbounds i16, i16* %795, i64 -1, !dbg !9612
  %cmp1145 = icmp eq i16* %794, %add.ptr1144, !dbg !9613
  br i1 %cmp1145, label %if.then1150, label %lor.lhs.false1147, !dbg !9614

lor.lhs.false1147:                                ; preds = %land.lhs.true1143
  %796 = load i16*, i16** %mid1040, align 8, !dbg !9615
  %797 = load i16*, i16** %left1037, align 8, !dbg !9617
  %cmp1148 = icmp eq i16* %796, %797, !dbg !9618
  br i1 %cmp1148, label %if.then1150, label %if.end1167, !dbg !9619

if.then1150:                                      ; preds = %lor.lhs.false1147, %land.lhs.true1143
  %798 = load i16*, i16** %start1013, align 8, !dbg !9620
  store i16* %798, i16** %mid1040, align 8, !dbg !9623
  br label %while.cond1151, !dbg !9624

while.cond1151:                                   ; preds = %while.body1160, %if.then1150
  %799 = load i16*, i16** %mid1040, align 8, !dbg !9625
  %800 = load i16*, i16** %end1019, align 8, !dbg !9627
  %cmp1152 = icmp ult i16* %799, %800, !dbg !9628
  br i1 %cmp1152, label %land.rhs1154, label %land.end1159, !dbg !9629

land.rhs1154:                                     ; preds = %while.cond1151
  %801 = load i16*, i16** %mid1040, align 8, !dbg !9630
  %802 = bitcast i16* %801 to i8*, !dbg !9630
  %803 = load i16*, i16** %mid1040, align 8, !dbg !9632
  %add.ptr1155 = getelementptr inbounds i16, i16* %803, i64 1, !dbg !9633
  %804 = bitcast i16* %add.ptr1155 to i8*, !dbg !9632
  %call1156 = call i32 @qsort_comparison_function_int16(i8* %802, i8* %804), !dbg !9634
  %cmp1157 = icmp sle i32 %call1156, 0, !dbg !9635
  br label %land.end1159

land.end1159:                                     ; preds = %land.rhs1154, %while.cond1151
  %805 = phi i1 [ false, %while.cond1151 ], [ %cmp1157, %land.rhs1154 ]
  br i1 %805, label %while.body1160, label %while.end1162, !dbg !9636

while.body1160:                                   ; preds = %land.end1159
  %806 = load i16*, i16** %mid1040, align 8, !dbg !9638
  %incdec.ptr1161 = getelementptr inbounds i16, i16* %806, i32 1, !dbg !9638
  store i16* %incdec.ptr1161, i16** %mid1040, align 8, !dbg !9638
  br label %while.cond1151, !dbg !9640, !llvm.loop !9641

while.end1162:                                    ; preds = %land.end1159
  %807 = load i16*, i16** %mid1040, align 8, !dbg !9643
  %808 = load i16*, i16** %end1019, align 8, !dbg !9646
  %cmp1163 = icmp eq i16* %807, %808, !dbg !9647
  br i1 %cmp1163, label %if.then1165, label %if.end1166, !dbg !9643

if.then1165:                                      ; preds = %while.end1162
  br label %while.end1208, !dbg !9648

if.end1166:                                       ; preds = %while.end1162
  br label %if.end1167, !dbg !9650

if.end1167:                                       ; preds = %if.end1166, %lor.lhs.false1147, %do.end1141
  %809 = load i16*, i16** %end1019, align 8, !dbg !9652
  %810 = load i16*, i16** %left1037, align 8, !dbg !9655
  %sub.ptr.lhs.cast1168 = ptrtoint i16* %809 to i64, !dbg !9656
  %sub.ptr.rhs.cast1169 = ptrtoint i16* %810 to i64, !dbg !9656
  %sub.ptr.sub1170 = sub i64 %sub.ptr.lhs.cast1168, %sub.ptr.rhs.cast1169, !dbg !9656
  %sub.ptr.div1171 = sdiv exact i64 %sub.ptr.sub1170, 2, !dbg !9656
  %811 = load i16*, i16** %left1037, align 8, !dbg !9657
  %812 = load i16*, i16** %start1013, align 8, !dbg !9658
  %sub.ptr.lhs.cast1172 = ptrtoint i16* %811 to i64, !dbg !9659
  %sub.ptr.rhs.cast1173 = ptrtoint i16* %812 to i64, !dbg !9659
  %sub.ptr.sub1174 = sub i64 %sub.ptr.lhs.cast1172, %sub.ptr.rhs.cast1173, !dbg !9659
  %sub.ptr.div1175 = sdiv exact i64 %sub.ptr.sub1174, 2, !dbg !9659
  %cmp1176 = icmp slt i64 %sub.ptr.div1171, %sub.ptr.div1175, !dbg !9660
  br i1 %cmp1176, label %if.then1178, label %if.else1187, !dbg !9652

if.then1178:                                      ; preds = %if.end1167
  %813 = load i16*, i16** %start1013, align 8, !dbg !9661
  %814 = bitcast i16* %813 to i8*, !dbg !9661
  %815 = load i32, i32* %sp997, align 4, !dbg !9664
  %idxprom1179 = sext i32 %815 to i64, !dbg !9665
  %arrayidx1180 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack995, i64 0, i64 %idxprom1179, !dbg !9665
  %arrayidx1181 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx1180, i64 0, i64 0, !dbg !9665
  store i8* %814, i8** %arrayidx1181, align 16, !dbg !9666
  %816 = load i16*, i16** %right1034, align 8, !dbg !9667
  %817 = bitcast i16* %816 to i8*, !dbg !9667
  %818 = load i32, i32* %sp997, align 4, !dbg !9668
  %inc1182 = add nsw i32 %818, 1, !dbg !9668
  store i32 %inc1182, i32* %sp997, align 4, !dbg !9668
  %idxprom1183 = sext i32 %818 to i64, !dbg !9669
  %arrayidx1184 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack995, i64 0, i64 %idxprom1183, !dbg !9669
  %arrayidx1185 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx1184, i64 0, i64 1, !dbg !9669
  store i8* %817, i8** %arrayidx1185, align 8, !dbg !9670
  %819 = load i16*, i16** %left1037, align 8, !dbg !9671
  %add.ptr1186 = getelementptr inbounds i16, i16* %819, i64 1, !dbg !9672
  store i16* %add.ptr1186, i16** %start1013, align 8, !dbg !9673
  br label %if.end1196, !dbg !9674

if.else1187:                                      ; preds = %if.end1167
  %820 = load i16*, i16** %left1037, align 8, !dbg !9675
  %add.ptr1188 = getelementptr inbounds i16, i16* %820, i64 1, !dbg !9678
  %821 = bitcast i16* %add.ptr1188 to i8*, !dbg !9675
  %822 = load i32, i32* %sp997, align 4, !dbg !9679
  %idxprom1189 = sext i32 %822 to i64, !dbg !9680
  %arrayidx1190 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack995, i64 0, i64 %idxprom1189, !dbg !9680
  %arrayidx1191 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx1190, i64 0, i64 0, !dbg !9680
  store i8* %821, i8** %arrayidx1191, align 16, !dbg !9681
  %823 = load i16*, i16** %end1019, align 8, !dbg !9682
  %824 = bitcast i16* %823 to i8*, !dbg !9682
  %825 = load i32, i32* %sp997, align 4, !dbg !9683
  %inc1192 = add nsw i32 %825, 1, !dbg !9683
  store i32 %inc1192, i32* %sp997, align 4, !dbg !9683
  %idxprom1193 = sext i32 %825 to i64, !dbg !9684
  %arrayidx1194 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack995, i64 0, i64 %idxprom1193, !dbg !9684
  %arrayidx1195 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx1194, i64 0, i64 1, !dbg !9684
  store i8* %824, i8** %arrayidx1195, align 8, !dbg !9685
  %826 = load i16*, i16** %right1034, align 8, !dbg !9686
  store i16* %826, i16** %end1019, align 8, !dbg !9687
  br label %if.end1196

if.end1196:                                       ; preds = %if.else1187, %if.then1178
  br label %if.end1207, !dbg !9688

if.else1197:                                      ; preds = %while.body1026
  %827 = load i16*, i16** %start1013, align 8, !dbg !9690
  %828 = bitcast i16* %827 to i8*, !dbg !9690
  %829 = load i16*, i16** %end1019, align 8, !dbg !9694
  %830 = bitcast i16* %829 to i8*, !dbg !9694
  %call1198 = call i32 @qsort_comparison_function_int16(i8* %828, i8* %830), !dbg !9695
  %cmp1199 = icmp sgt i32 %call1198, 0, !dbg !9696
  br i1 %cmp1199, label %if.then1201, label %if.end1206, !dbg !9695

if.then1201:                                      ; preds = %if.else1197
  br label %do.body1202, !dbg !9697, !llvm.loop !9699

do.body1202:                                      ; preds = %if.then1201
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp1204, metadata !9701, metadata !2734), !dbg !9703
  %831 = load i16*, i16** %end1019, align 8, !dbg !9704
  %832 = load i16, i16* %831, align 2, !dbg !9706
  store i16 %832, i16* %SWAP_tmp1204, align 2, !dbg !9707
  %833 = load i16*, i16** %start1013, align 8, !dbg !9708
  %834 = load i16, i16* %833, align 2, !dbg !9709
  %835 = load i16*, i16** %end1019, align 8, !dbg !9710
  store i16 %834, i16* %835, align 2, !dbg !9711
  %836 = load i16, i16* %SWAP_tmp1204, align 2, !dbg !9712
  %837 = load i16*, i16** %start1013, align 8, !dbg !9713
  store i16 %836, i16* %837, align 2, !dbg !9714
  br label %do.end1205, !dbg !9715

do.end1205:                                       ; preds = %do.body1202
  br label %if.end1206, !dbg !9716

if.end1206:                                       ; preds = %do.end1205, %if.else1197
  br label %while.end1208, !dbg !9718

if.end1207:                                       ; preds = %if.end1196
  br label %while.cond1023, !dbg !9720, !llvm.loop !9722

while.end1208:                                    ; preds = %if.end1206, %if.then1165, %if.then1089, %while.cond1023
  br label %while.cond1009, !dbg !9724, !llvm.loop !9726

while.end1209:                                    ; preds = %while.cond1009
  br label %do.end1210, !dbg !9728

do.end1210:                                       ; preds = %while.end1209
  %838 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9730
  %k1211 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %838, i32 0, i32 12, !dbg !9731
  %arrayidx1212 = getelementptr inbounds [5 x i32], [5 x i32]* %k1211, i64 0, i64 1, !dbg !9730
  %839 = load i32, i32* %arrayidx1212, align 4, !dbg !9730
  %conv1213 = trunc i32 %839 to i16, !dbg !9730
  %arrayidx1214 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 0, !dbg !9732
  store i16 %conv1213, i16* %arrayidx1214, align 16, !dbg !9733
  store i32 1, i32* %k, align 4, !dbg !9734
  br label %for.cond1215, !dbg !9736

for.cond1215:                                     ; preds = %for.inc1239, %do.end1210
  %840 = load i32, i32* %k, align 4, !dbg !9737
  %841 = load i32, i32* %num_bands_1, align 4, !dbg !9740
  %cmp1216 = icmp sle i32 %840, %841, !dbg !9741
  br i1 %cmp1216, label %for.body1218, label %for.end1241, !dbg !9742

for.body1218:                                     ; preds = %for.cond1215
  %842 = load i32, i32* %k, align 4, !dbg !9743
  %idxprom1219 = sext i32 %842 to i64, !dbg !9746
  %arrayidx1220 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom1219, !dbg !9746
  %843 = load i16, i16* %arrayidx1220, align 2, !dbg !9746
  %conv1221 = sext i16 %843 to i32, !dbg !9746
  %cmp1222 = icmp sle i32 %conv1221, 0, !dbg !9747
  br i1 %cmp1222, label %if.then1224, label %if.end1229, !dbg !9748

if.then1224:                                      ; preds = %for.body1218
  %844 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9749
  %avctx1225 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %844, i32 0, i32 1, !dbg !9751
  %845 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1225, align 8, !dbg !9751
  %846 = bitcast %struct.AVCodecContext* %845 to i8*, !dbg !9749
  %847 = load i32, i32* %k, align 4, !dbg !9752
  %848 = load i32, i32* %k, align 4, !dbg !9753
  %idxprom1226 = sext i32 %848 to i64, !dbg !9754
  %arrayidx1227 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom1226, !dbg !9754
  %849 = load i16, i16* %arrayidx1227, align 2, !dbg !9754
  %conv1228 = sext i16 %849 to i32, !dbg !9754
  call void (i8*, i32, i8*, ...) @av_log(i8* %846, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i32 0, i32 0), i32 %847, i32 %conv1228), !dbg !9755
  store i32 -1, i32* %retval, align 4, !dbg !9756
  br label %return, !dbg !9756

if.end1229:                                       ; preds = %for.body1218
  %850 = load i32, i32* %k, align 4, !dbg !9757
  %sub1230 = sub nsw i32 %850, 1, !dbg !9758
  %idxprom1231 = sext i32 %sub1230 to i64, !dbg !9759
  %arrayidx1232 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom1231, !dbg !9759
  %851 = load i16, i16* %arrayidx1232, align 2, !dbg !9759
  %conv1233 = sext i16 %851 to i32, !dbg !9759
  %852 = load i32, i32* %k, align 4, !dbg !9760
  %idxprom1234 = sext i32 %852 to i64, !dbg !9761
  %arrayidx1235 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom1234, !dbg !9761
  %853 = load i16, i16* %arrayidx1235, align 2, !dbg !9762
  %conv1236 = sext i16 %853 to i32, !dbg !9762
  %add1237 = add nsw i32 %conv1236, %conv1233, !dbg !9762
  %conv1238 = trunc i32 %add1237 to i16, !dbg !9762
  store i16 %conv1238, i16* %arrayidx1235, align 2, !dbg !9762
  br label %for.inc1239, !dbg !9763

for.inc1239:                                      ; preds = %if.end1229
  %854 = load i32, i32* %k, align 4, !dbg !9764
  %inc1240 = add nsw i32 %854, 1, !dbg !9764
  store i32 %inc1240, i32* %k, align 4, !dbg !9764
  br label %for.cond1215, !dbg !9766, !llvm.loop !9767

for.end1241:                                      ; preds = %for.cond1215
  %855 = load i32, i32* %num_bands_0, align 4, !dbg !9769
  %856 = load i32, i32* %num_bands_1, align 4, !dbg !9770
  %add1242 = add nsw i32 %855, %856, !dbg !9771
  %857 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9772
  %n_master1243 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %857, i32 0, i32 16, !dbg !9773
  store i32 %add1242, i32* %n_master1243, align 4, !dbg !9774
  %858 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9775
  %avctx1244 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %858, i32 0, i32 1, !dbg !9777
  %859 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1244, align 8, !dbg !9777
  %860 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9778
  %n_master1245 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %860, i32 0, i32 16, !dbg !9779
  %861 = load i32, i32* %n_master1245, align 4, !dbg !9779
  %862 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9780
  %spectrum_params1246 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %862, i32 0, i32 5, !dbg !9781
  %bs_xover_band1247 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params1246, i32 0, i32 2, !dbg !9782
  %863 = load i8, i8* %bs_xover_band1247, align 2, !dbg !9782
  %conv1248 = zext i8 %863 to i32, !dbg !9780
  %call1249 = call i32 @check_n_master(%struct.AVCodecContext* %859, i32 %861, i32 %conv1248), !dbg !9783
  %tobool1250 = icmp ne i32 %call1249, 0, !dbg !9783
  br i1 %tobool1250, label %if.then1251, label %if.end1252, !dbg !9784

if.then1251:                                      ; preds = %for.end1241
  store i32 -1, i32* %retval, align 4, !dbg !9785
  br label %return, !dbg !9785

if.end1252:                                       ; preds = %for.end1241
  %864 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9786
  %f_master1253 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %864, i32 0, i32 22, !dbg !9787
  %arrayidx1254 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master1253, i64 0, i64 0, !dbg !9786
  %865 = bitcast i16* %arrayidx1254 to i8*, !dbg !9788
  %arraydecay1255 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i32 0, i32 0, !dbg !9788
  %866 = bitcast i16* %arraydecay1255 to i8*, !dbg !9788
  %867 = load i32, i32* %num_bands_0, align 4, !dbg !9789
  %add1256 = add nsw i32 %867, 1, !dbg !9790
  %conv1257 = sext i32 %add1256 to i64, !dbg !9791
  %mul1258 = mul i64 %conv1257, 2, !dbg !9792
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %865, i8* %866, i64 %mul1258, i32 16, i1 false), !dbg !9788
  %868 = load i32, i32* %num_bands_0, align 4, !dbg !9793
  %add1259 = add nsw i32 %868, 1, !dbg !9794
  %idxprom1260 = sext i32 %add1259 to i64, !dbg !9795
  %869 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9795
  %f_master1261 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %869, i32 0, i32 22, !dbg !9796
  %arrayidx1262 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master1261, i64 0, i64 %idxprom1260, !dbg !9795
  %870 = bitcast i16* %arrayidx1262 to i8*, !dbg !9797
  %arraydecay1263 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !9798
  %add.ptr1264 = getelementptr inbounds i16, i16* %arraydecay1263, i64 1, !dbg !9799
  %871 = bitcast i16* %add.ptr1264 to i8*, !dbg !9797
  %872 = load i32, i32* %num_bands_1, align 4, !dbg !9800
  %conv1265 = sext i32 %872 to i64, !dbg !9800
  %mul1266 = mul i64 %conv1265, 2, !dbg !9801
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %870, i8* %871, i64 %mul1266, i32 2, i1 false), !dbg !9797
  br label %if.end1284, !dbg !9802

if.else1267:                                      ; preds = %for.end683
  %873 = load i32, i32* %num_bands_0, align 4, !dbg !9803
  %874 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9805
  %n_master1268 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %874, i32 0, i32 16, !dbg !9806
  store i32 %873, i32* %n_master1268, align 4, !dbg !9807
  %875 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9808
  %avctx1269 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %875, i32 0, i32 1, !dbg !9810
  %876 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1269, align 8, !dbg !9810
  %877 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9811
  %n_master1270 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %877, i32 0, i32 16, !dbg !9812
  %878 = load i32, i32* %n_master1270, align 4, !dbg !9812
  %879 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9813
  %spectrum_params1271 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %879, i32 0, i32 5, !dbg !9814
  %bs_xover_band1272 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params1271, i32 0, i32 2, !dbg !9815
  %880 = load i8, i8* %bs_xover_band1272, align 2, !dbg !9815
  %conv1273 = zext i8 %880 to i32, !dbg !9813
  %call1274 = call i32 @check_n_master(%struct.AVCodecContext* %876, i32 %878, i32 %conv1273), !dbg !9816
  %tobool1275 = icmp ne i32 %call1274, 0, !dbg !9816
  br i1 %tobool1275, label %if.then1276, label %if.end1277, !dbg !9817

if.then1276:                                      ; preds = %if.else1267
  store i32 -1, i32* %retval, align 4, !dbg !9818
  br label %return, !dbg !9818

if.end1277:                                       ; preds = %if.else1267
  %881 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9819
  %f_master1278 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %881, i32 0, i32 22, !dbg !9820
  %arraydecay1279 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master1278, i32 0, i32 0, !dbg !9821
  %882 = bitcast i16* %arraydecay1279 to i8*, !dbg !9821
  %arraydecay1280 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i32 0, i32 0, !dbg !9821
  %883 = bitcast i16* %arraydecay1280 to i8*, !dbg !9821
  %884 = load i32, i32* %num_bands_0, align 4, !dbg !9822
  %add1281 = add nsw i32 %884, 1, !dbg !9823
  %conv1282 = sext i32 %add1281 to i64, !dbg !9824
  %mul1283 = mul i64 %conv1282, 2, !dbg !9825
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %882, i8* %883, i64 %mul1283, i32 16, i1 false), !dbg !9821
  br label %if.end1284

if.end1284:                                       ; preds = %if.end1277, %if.end1252
  br label %if.end1285

if.end1285:                                       ; preds = %if.end1284, %for.end366
  store i32 0, i32* %retval, align 4, !dbg !9826
  br label %return, !dbg !9826

return:                                           ; preds = %if.end1285, %if.then1276, %if.then1251, %if.then1224, %if.then666, %if.then423, %if.then299, %if.then274, %if.else233, %sw.default
  %885 = load i32, i32* %retval, align 4, !dbg !9827
  ret i32 %885, !dbg !9827
}

; Function Attrs: nounwind uwtable
define internal i32 @sbr_make_f_derived(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr) #3 !dbg !9828 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %k = alloca i32, align 4
  %temp = alloca i32, align 4
  %nz = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !9831, metadata !2734), !dbg !9832
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !9833, metadata !2734), !dbg !9834
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9835, metadata !2734), !dbg !9836
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !9837, metadata !2734), !dbg !9838
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !9839, metadata !2734), !dbg !9840
  store i32 0, i32* %nz, align 4, !dbg !9840
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9841
  %n_master = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 16, !dbg !9842
  %1 = load i32, i32* %n_master, align 4, !dbg !9842
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9843
  %spectrum_params = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 5, !dbg !9844
  %bs_xover_band = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params, i32 0, i32 2, !dbg !9845
  %3 = load i8, i8* %bs_xover_band, align 2, !dbg !9845
  %conv = zext i8 %3 to i32, !dbg !9843
  %sub = sub nsw i32 %1, %conv, !dbg !9846
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9847
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 19, !dbg !9848
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 1, !dbg !9847
  store i32 %sub, i32* %arrayidx, align 4, !dbg !9849
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9850
  %n1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %5, i32 0, i32 19, !dbg !9851
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %n1, i64 0, i64 1, !dbg !9850
  %6 = load i32, i32* %arrayidx2, align 4, !dbg !9850
  %add = add nsw i32 %6, 1, !dbg !9852
  %shr = ashr i32 %add, 1, !dbg !9853
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9854
  %n3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 19, !dbg !9855
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %n3, i64 0, i64 0, !dbg !9854
  store i32 %shr, i32* %arrayidx4, align 32, !dbg !9856
  %8 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9857
  %f_tablehigh = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %8, i32 0, i32 24, !dbg !9858
  %arraydecay = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh, i32 0, i32 0, !dbg !9859
  %9 = bitcast i16* %arraydecay to i8*, !dbg !9859
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9860
  %spectrum_params5 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %10, i32 0, i32 5, !dbg !9861
  %bs_xover_band6 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params5, i32 0, i32 2, !dbg !9862
  %11 = load i8, i8* %bs_xover_band6, align 2, !dbg !9862
  %idxprom = zext i8 %11 to i64, !dbg !9863
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9863
  %f_master = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 22, !dbg !9864
  %arrayidx7 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master, i64 0, i64 %idxprom, !dbg !9863
  %13 = bitcast i16* %arrayidx7 to i8*, !dbg !9859
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9865
  %n8 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %14, i32 0, i32 19, !dbg !9866
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %n8, i64 0, i64 1, !dbg !9865
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !9865
  %add10 = add nsw i32 %15, 1, !dbg !9867
  %conv11 = sext i32 %add10 to i64, !dbg !9868
  %mul = mul i64 %conv11, 2, !dbg !9869
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %13, i64 %mul, i32 2, i1 false), !dbg !9859
  %16 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9870
  %n12 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %16, i32 0, i32 19, !dbg !9871
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %n12, i64 0, i64 1, !dbg !9870
  %17 = load i32, i32* %arrayidx13, align 4, !dbg !9870
  %idxprom14 = sext i32 %17 to i64, !dbg !9872
  %18 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9872
  %f_tablehigh15 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %18, i32 0, i32 24, !dbg !9873
  %arrayidx16 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh15, i64 0, i64 %idxprom14, !dbg !9872
  %19 = load i16, i16* %arrayidx16, align 2, !dbg !9872
  %conv17 = zext i16 %19 to i32, !dbg !9872
  %20 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9874
  %f_tablehigh18 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %20, i32 0, i32 24, !dbg !9875
  %arrayidx19 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh18, i64 0, i64 0, !dbg !9874
  %21 = load i16, i16* %arrayidx19, align 4, !dbg !9874
  %conv20 = zext i16 %21 to i32, !dbg !9874
  %sub21 = sub nsw i32 %conv17, %conv20, !dbg !9876
  %22 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9877
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %22, i32 0, i32 14, !dbg !9878
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 1, !dbg !9877
  store i32 %sub21, i32* %arrayidx22, align 4, !dbg !9879
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9880
  %f_tablehigh23 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %23, i32 0, i32 24, !dbg !9881
  %arrayidx24 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh23, i64 0, i64 0, !dbg !9880
  %24 = load i16, i16* %arrayidx24, align 4, !dbg !9880
  %conv25 = zext i16 %24 to i32, !dbg !9880
  %25 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9882
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %25, i32 0, i32 13, !dbg !9883
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !9882
  store i32 %conv25, i32* %arrayidx26, align 4, !dbg !9884
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9885
  %kx27 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 13, !dbg !9887
  %arrayidx28 = getelementptr inbounds [2 x i32], [2 x i32]* %kx27, i64 0, i64 1, !dbg !9885
  %27 = load i32, i32* %arrayidx28, align 4, !dbg !9885
  %28 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9888
  %m29 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %28, i32 0, i32 14, !dbg !9889
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %m29, i64 0, i64 1, !dbg !9888
  %29 = load i32, i32* %arrayidx30, align 4, !dbg !9888
  %add31 = add nsw i32 %27, %29, !dbg !9890
  %cmp = icmp sgt i32 %add31, 64, !dbg !9891
  br i1 %cmp, label %if.then, label %if.end, !dbg !9892

if.then:                                          ; preds = %entry
  %30 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9893
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %30, i32 0, i32 1, !dbg !9895
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9895
  %32 = bitcast %struct.AVCodecContext* %31 to i8*, !dbg !9893
  %33 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9896
  %kx33 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %33, i32 0, i32 13, !dbg !9897
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %kx33, i64 0, i64 1, !dbg !9896
  %34 = load i32, i32* %arrayidx34, align 4, !dbg !9896
  %35 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9898
  %m35 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %35, i32 0, i32 14, !dbg !9899
  %arrayidx36 = getelementptr inbounds [2 x i32], [2 x i32]* %m35, i64 0, i64 1, !dbg !9898
  %36 = load i32, i32* %arrayidx36, align 4, !dbg !9898
  %add37 = add nsw i32 %34, %36, !dbg !9900
  call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25, i32 0, i32 0), i32 %add37), !dbg !9901
  store i32 -1, i32* %retval, align 4, !dbg !9902
  br label %return, !dbg !9902

if.end:                                           ; preds = %entry
  %37 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9903
  %kx38 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %37, i32 0, i32 13, !dbg !9905
  %arrayidx39 = getelementptr inbounds [2 x i32], [2 x i32]* %kx38, i64 0, i64 1, !dbg !9903
  %38 = load i32, i32* %arrayidx39, align 4, !dbg !9903
  %cmp40 = icmp sgt i32 %38, 32, !dbg !9906
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !9907

if.then42:                                        ; preds = %if.end
  %39 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9908
  %avctx43 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 1, !dbg !9910
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx43, align 8, !dbg !9910
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !9908
  %42 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9911
  %kx44 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %42, i32 0, i32 13, !dbg !9912
  %arrayidx45 = getelementptr inbounds [2 x i32], [2 x i32]* %kx44, i64 0, i64 1, !dbg !9911
  %43 = load i32, i32* %arrayidx45, align 4, !dbg !9911
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.26, i32 0, i32 0), i32 %43), !dbg !9913
  store i32 -1, i32* %retval, align 4, !dbg !9914
  br label %return, !dbg !9914

if.end46:                                         ; preds = %if.end
  %44 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9915
  %f_tablehigh47 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %44, i32 0, i32 24, !dbg !9916
  %arrayidx48 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh47, i64 0, i64 0, !dbg !9915
  %45 = load i16, i16* %arrayidx48, align 4, !dbg !9915
  %46 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9917
  %f_tablelow = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %46, i32 0, i32 23, !dbg !9918
  %arrayidx49 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow, i64 0, i64 0, !dbg !9917
  store i16 %45, i16* %arrayidx49, align 2, !dbg !9919
  %47 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9920
  %n50 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %47, i32 0, i32 19, !dbg !9921
  %arrayidx51 = getelementptr inbounds [2 x i32], [2 x i32]* %n50, i64 0, i64 1, !dbg !9920
  %48 = load i32, i32* %arrayidx51, align 4, !dbg !9920
  %and = and i32 %48, 1, !dbg !9922
  store i32 %and, i32* %temp, align 4, !dbg !9923
  store i32 1, i32* %k, align 4, !dbg !9924
  br label %for.cond, !dbg !9926

for.cond:                                         ; preds = %for.inc, %if.end46
  %49 = load i32, i32* %k, align 4, !dbg !9927
  %50 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9930
  %n52 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %50, i32 0, i32 19, !dbg !9931
  %arrayidx53 = getelementptr inbounds [2 x i32], [2 x i32]* %n52, i64 0, i64 0, !dbg !9930
  %51 = load i32, i32* %arrayidx53, align 32, !dbg !9930
  %cmp54 = icmp sle i32 %49, %51, !dbg !9932
  br i1 %cmp54, label %for.body, label %for.end, !dbg !9933

for.body:                                         ; preds = %for.cond
  %52 = load i32, i32* %k, align 4, !dbg !9934
  %mul56 = mul nsw i32 2, %52, !dbg !9935
  %53 = load i32, i32* %temp, align 4, !dbg !9936
  %sub57 = sub nsw i32 %mul56, %53, !dbg !9937
  %idxprom58 = sext i32 %sub57 to i64, !dbg !9938
  %54 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9938
  %f_tablehigh59 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %54, i32 0, i32 24, !dbg !9939
  %arrayidx60 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh59, i64 0, i64 %idxprom58, !dbg !9938
  %55 = load i16, i16* %arrayidx60, align 2, !dbg !9938
  %56 = load i32, i32* %k, align 4, !dbg !9940
  %idxprom61 = sext i32 %56 to i64, !dbg !9941
  %57 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9941
  %f_tablelow62 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %57, i32 0, i32 23, !dbg !9942
  %arrayidx63 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow62, i64 0, i64 %idxprom61, !dbg !9941
  store i16 %55, i16* %arrayidx63, align 2, !dbg !9943
  br label %for.inc, !dbg !9941

for.inc:                                          ; preds = %for.body
  %58 = load i32, i32* %k, align 4, !dbg !9944
  %inc = add nsw i32 %58, 1, !dbg !9944
  store i32 %inc, i32* %k, align 4, !dbg !9944
  br label %for.cond, !dbg !9946, !llvm.loop !9947

for.end:                                          ; preds = %for.cond
  %59 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9949
  %k64 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %59, i32 0, i32 12, !dbg !9950
  %arrayidx65 = getelementptr inbounds [5 x i32], [5 x i32]* %k64, i64 0, i64 2, !dbg !9949
  %60 = load i32, i32* %arrayidx65, align 4, !dbg !9949
  %shl = shl i32 %60, 23, !dbg !9951
  %61 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9952
  %kx66 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %61, i32 0, i32 13, !dbg !9953
  %arrayidx67 = getelementptr inbounds [2 x i32], [2 x i32]* %kx66, i64 0, i64 1, !dbg !9952
  %62 = load i32, i32* %arrayidx67, align 4, !dbg !9952
  %div = sdiv i32 %shl, %62, !dbg !9954
  store i32 %div, i32* %temp, align 4, !dbg !9955
  br label %while.cond, !dbg !9956

while.cond:                                       ; preds = %while.body, %for.end
  %63 = load i32, i32* %temp, align 4, !dbg !9957
  %cmp68 = icmp slt i32 %63, 1073741824, !dbg !9959
  br i1 %cmp68, label %while.body, label %while.end, !dbg !9960

while.body:                                       ; preds = %while.cond
  %64 = load i32, i32* %temp, align 4, !dbg !9961
  %shl70 = shl i32 %64, 1, !dbg !9961
  store i32 %shl70, i32* %temp, align 4, !dbg !9961
  %65 = load i32, i32* %nz, align 4, !dbg !9963
  %inc71 = add nsw i32 %65, 1, !dbg !9963
  store i32 %inc71, i32* %nz, align 4, !dbg !9963
  br label %while.cond, !dbg !9964, !llvm.loop !9966

while.end:                                        ; preds = %while.cond
  %66 = load i32, i32* %temp, align 4, !dbg !9967
  %sub72 = sub i32 %66, -2147483648, !dbg !9968
  %call = call i32 @fixed_log(i32 %sub72), !dbg !9969
  store i32 %call, i32* %temp, align 4, !dbg !9970
  %67 = load i32, i32* %temp, align 4, !dbg !9971
  %conv73 = sext i32 %67 to i64, !dbg !9972
  %mul74 = mul nsw i64 %conv73, 1549082005, !dbg !9973
  %add75 = add nsw i64 %mul74, 536870912, !dbg !9974
  %shr76 = ashr i64 %add75, 30, !dbg !9975
  %conv77 = trunc i64 %shr76 to i32, !dbg !9976
  store i32 %conv77, i32* %temp, align 4, !dbg !9977
  %68 = load i32, i32* %temp, align 4, !dbg !9978
  %add78 = add nsw i32 %68, 128, !dbg !9979
  %shr79 = ashr i32 %add78, 8, !dbg !9980
  %69 = load i32, i32* %nz, align 4, !dbg !9981
  %sub80 = sub nsw i32 8, %69, !dbg !9982
  %shl81 = shl i32 %sub80, 23, !dbg !9983
  %add82 = add nsw i32 %shr79, %shl81, !dbg !9984
  %70 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9985
  %spectrum_params83 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %70, i32 0, i32 5, !dbg !9986
  %bs_noise_bands = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params83, i32 0, i32 5, !dbg !9987
  %71 = load i8, i8* %bs_noise_bands, align 1, !dbg !9987
  %conv84 = zext i8 %71 to i32, !dbg !9985
  %mul85 = mul nsw i32 %add82, %conv84, !dbg !9988
  store i32 %mul85, i32* %temp, align 4, !dbg !9989
  %72 = load i32, i32* %temp, align 4, !dbg !9990
  %add86 = add nsw i32 %72, 4194304, !dbg !9991
  %shr87 = ashr i32 %add86, 23, !dbg !9992
  %73 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9993
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %73, i32 0, i32 20, !dbg !9994
  store i32 %shr87, i32* %n_q, align 8, !dbg !9995
  %74 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9996
  %n_q88 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %74, i32 0, i32 20, !dbg !9998
  %75 = load i32, i32* %n_q88, align 8, !dbg !9998
  %cmp89 = icmp slt i32 %75, 1, !dbg !9999
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !10000

if.then91:                                        ; preds = %while.end
  %76 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10001
  %n_q92 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %76, i32 0, i32 20, !dbg !10002
  store i32 1, i32* %n_q92, align 8, !dbg !10003
  br label %if.end93, !dbg !10001

if.end93:                                         ; preds = %if.then91, %while.end
  %77 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10004
  %n_q94 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %77, i32 0, i32 20, !dbg !10006
  %78 = load i32, i32* %n_q94, align 8, !dbg !10006
  %cmp95 = icmp sgt i32 %78, 5, !dbg !10007
  br i1 %cmp95, label %if.then97, label %if.end100, !dbg !10008

if.then97:                                        ; preds = %if.end93
  %79 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10009
  %avctx98 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %79, i32 0, i32 1, !dbg !10011
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx98, align 8, !dbg !10011
  %81 = bitcast %struct.AVCodecContext* %80 to i8*, !dbg !10009
  %82 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10012
  %n_q99 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %82, i32 0, i32 20, !dbg !10013
  %83 = load i32, i32* %n_q99, align 8, !dbg !10013
  call void (i8*, i32, i8*, ...) @av_log(i8* %81, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i32 0, i32 0), i32 %83), !dbg !10014
  store i32 -1, i32* %retval, align 4, !dbg !10015
  br label %return, !dbg !10015

if.end100:                                        ; preds = %if.end93
  %84 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10016
  %f_tablelow101 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %84, i32 0, i32 23, !dbg !10017
  %arrayidx102 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow101, i64 0, i64 0, !dbg !10016
  %85 = load i16, i16* %arrayidx102, align 2, !dbg !10016
  %86 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10018
  %f_tablenoise = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %86, i32 0, i32 25, !dbg !10019
  %arrayidx103 = getelementptr inbounds [6 x i16], [6 x i16]* %f_tablenoise, i64 0, i64 0, !dbg !10018
  store i16 %85, i16* %arrayidx103, align 2, !dbg !10020
  store i32 0, i32* %temp, align 4, !dbg !10021
  store i32 1, i32* %k, align 4, !dbg !10022
  br label %for.cond104, !dbg !10024

for.cond104:                                      ; preds = %for.inc123, %if.end100
  %87 = load i32, i32* %k, align 4, !dbg !10025
  %88 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10028
  %n_q105 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %88, i32 0, i32 20, !dbg !10029
  %89 = load i32, i32* %n_q105, align 8, !dbg !10029
  %cmp106 = icmp sle i32 %87, %89, !dbg !10030
  br i1 %cmp106, label %for.body108, label %for.end125, !dbg !10031

for.body108:                                      ; preds = %for.cond104
  %90 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10032
  %n109 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %90, i32 0, i32 19, !dbg !10034
  %arrayidx110 = getelementptr inbounds [2 x i32], [2 x i32]* %n109, i64 0, i64 0, !dbg !10032
  %91 = load i32, i32* %arrayidx110, align 32, !dbg !10032
  %92 = load i32, i32* %temp, align 4, !dbg !10035
  %sub111 = sub nsw i32 %91, %92, !dbg !10036
  %93 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10037
  %n_q112 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %93, i32 0, i32 20, !dbg !10038
  %94 = load i32, i32* %n_q112, align 8, !dbg !10038
  %add113 = add nsw i32 %94, 1, !dbg !10039
  %95 = load i32, i32* %k, align 4, !dbg !10040
  %sub114 = sub nsw i32 %add113, %95, !dbg !10041
  %div115 = sdiv i32 %sub111, %sub114, !dbg !10042
  %96 = load i32, i32* %temp, align 4, !dbg !10043
  %add116 = add nsw i32 %96, %div115, !dbg !10043
  store i32 %add116, i32* %temp, align 4, !dbg !10043
  %97 = load i32, i32* %temp, align 4, !dbg !10044
  %idxprom117 = sext i32 %97 to i64, !dbg !10045
  %98 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10045
  %f_tablelow118 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %98, i32 0, i32 23, !dbg !10046
  %arrayidx119 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow118, i64 0, i64 %idxprom117, !dbg !10045
  %99 = load i16, i16* %arrayidx119, align 2, !dbg !10045
  %100 = load i32, i32* %k, align 4, !dbg !10047
  %idxprom120 = sext i32 %100 to i64, !dbg !10048
  %101 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10048
  %f_tablenoise121 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %101, i32 0, i32 25, !dbg !10049
  %arrayidx122 = getelementptr inbounds [6 x i16], [6 x i16]* %f_tablenoise121, i64 0, i64 %idxprom120, !dbg !10048
  store i16 %99, i16* %arrayidx122, align 2, !dbg !10050
  br label %for.inc123, !dbg !10051

for.inc123:                                       ; preds = %for.body108
  %102 = load i32, i32* %k, align 4, !dbg !10052
  %inc124 = add nsw i32 %102, 1, !dbg !10052
  store i32 %inc124, i32* %k, align 4, !dbg !10052
  br label %for.cond104, !dbg !10054, !llvm.loop !10055

for.end125:                                       ; preds = %for.cond104
  %103 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10057
  %104 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10059
  %call126 = call i32 @sbr_hf_calc_npatches(%struct.AACContext* %103, %struct.SpectralBandReplication* %104), !dbg !10060
  %cmp127 = icmp slt i32 %call126, 0, !dbg !10061
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !10062

if.then129:                                       ; preds = %for.end125
  store i32 -1, i32* %retval, align 4, !dbg !10063
  br label %return, !dbg !10063

if.end130:                                        ; preds = %for.end125
  %105 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10064
  call void @sbr_make_f_tablelim(%struct.SpectralBandReplication* %105), !dbg !10065
  %106 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10066
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %106, i32 0, i32 17, !dbg !10067
  %arrayidx131 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 0, !dbg !10066
  %f_indexnoise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx131, i32 0, i32 29, !dbg !10068
  store i32 0, i32* %f_indexnoise, align 4, !dbg !10069
  %107 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10070
  %data132 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %107, i32 0, i32 17, !dbg !10071
  %arrayidx133 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data132, i64 0, i64 1, !dbg !10070
  %f_indexnoise134 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx133, i32 0, i32 29, !dbg !10072
  store i32 0, i32* %f_indexnoise134, align 4, !dbg !10073
  store i32 0, i32* %retval, align 4, !dbg !10074
  br label %return, !dbg !10074

return:                                           ; preds = %if.end130, %if.then129, %if.then97, %if.then42, %if.then
  %108 = load i32, i32* %retval, align 4, !dbg !10075
  ret i32 %108, !dbg !10075
}

; Function Attrs: nounwind uwtable
define internal void @make_bands(i16* %bands, i32 %start, i32 %stop, i32 %num_bands) #3 !dbg !10076 {
entry:
  %bands.addr = alloca i16*, align 8
  %start.addr = alloca i32, align 4
  %stop.addr = alloca i32, align 4
  %num_bands.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %previous = alloca i32, align 4
  %present = alloca i32, align 4
  %base = alloca i32, align 4
  %prod = alloca i32, align 4
  %nz = alloca i32, align 4
  store i16* %bands, i16** %bands.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %bands.addr, metadata !10079, metadata !2734), !dbg !10080
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !10081, metadata !2734), !dbg !10082
  store i32 %stop, i32* %stop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stop.addr, metadata !10083, metadata !2734), !dbg !10084
  store i32 %num_bands, i32* %num_bands.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_bands.addr, metadata !10085, metadata !2734), !dbg !10086
  call void @llvm.dbg.declare(metadata i32* %k, metadata !10087, metadata !2734), !dbg !10088
  call void @llvm.dbg.declare(metadata i32* %previous, metadata !10089, metadata !2734), !dbg !10090
  call void @llvm.dbg.declare(metadata i32* %present, metadata !10091, metadata !2734), !dbg !10092
  call void @llvm.dbg.declare(metadata i32* %base, metadata !10093, metadata !2734), !dbg !10094
  call void @llvm.dbg.declare(metadata i32* %prod, metadata !10095, metadata !2734), !dbg !10096
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !10097, metadata !2734), !dbg !10098
  store i32 0, i32* %nz, align 4, !dbg !10098
  %0 = load i32, i32* %stop.addr, align 4, !dbg !10099
  %shl = shl i32 %0, 23, !dbg !10100
  %1 = load i32, i32* %start.addr, align 4, !dbg !10101
  %div = sdiv i32 %shl, %1, !dbg !10102
  store i32 %div, i32* %base, align 4, !dbg !10103
  br label %while.cond, !dbg !10104

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i32, i32* %base, align 4, !dbg !10105
  %cmp = icmp slt i32 %2, 1073741824, !dbg !10107
  br i1 %cmp, label %while.body, label %while.end, !dbg !10108

while.body:                                       ; preds = %while.cond
  %3 = load i32, i32* %base, align 4, !dbg !10109
  %shl1 = shl i32 %3, 1, !dbg !10109
  store i32 %shl1, i32* %base, align 4, !dbg !10109
  %4 = load i32, i32* %nz, align 4, !dbg !10111
  %inc = add nsw i32 %4, 1, !dbg !10111
  store i32 %inc, i32* %nz, align 4, !dbg !10111
  br label %while.cond, !dbg !10112, !llvm.loop !10114

while.end:                                        ; preds = %while.cond
  %5 = load i32, i32* %base, align 4, !dbg !10115
  %sub = sub i32 %5, -2147483648, !dbg !10116
  %call = call i32 @fixed_log(i32 %sub), !dbg !10117
  store i32 %call, i32* %base, align 4, !dbg !10118
  %6 = load i32, i32* %base, align 4, !dbg !10119
  %add = add nsw i32 %6, 128, !dbg !10120
  %shr = ashr i32 %add, 8, !dbg !10121
  %7 = load i32, i32* %nz, align 4, !dbg !10122
  %sub2 = sub nsw i32 8, %7, !dbg !10123
  %mul = mul nsw i32 %sub2, 5814540, !dbg !10124
  %add3 = add nsw i32 %shr, %mul, !dbg !10125
  %8 = load i32, i32* %num_bands.addr, align 4, !dbg !10126
  %div4 = sdiv i32 %add3, %8, !dbg !10127
  store i32 %div4, i32* %base, align 4, !dbg !10128
  %9 = load i32, i32* %base, align 4, !dbg !10129
  %call5 = call i32 @fixed_exp(i32 %9), !dbg !10130
  store i32 %call5, i32* %base, align 4, !dbg !10131
  %10 = load i32, i32* %start.addr, align 4, !dbg !10132
  store i32 %10, i32* %previous, align 4, !dbg !10133
  %11 = load i32, i32* %start.addr, align 4, !dbg !10134
  %shl6 = shl i32 %11, 23, !dbg !10135
  store i32 %shl6, i32* %prod, align 4, !dbg !10136
  store i32 0, i32* %k, align 4, !dbg !10137
  br label %for.cond, !dbg !10139

for.cond:                                         ; preds = %for.inc, %while.end
  %12 = load i32, i32* %k, align 4, !dbg !10140
  %13 = load i32, i32* %num_bands.addr, align 4, !dbg !10143
  %sub7 = sub nsw i32 %13, 1, !dbg !10144
  %cmp8 = icmp slt i32 %12, %sub7, !dbg !10145
  br i1 %cmp8, label %for.body, label %for.end, !dbg !10146

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %prod, align 4, !dbg !10147
  %conv = sext i32 %14 to i64, !dbg !10149
  %15 = load i32, i32* %base, align 4, !dbg !10150
  %conv9 = sext i32 %15 to i64, !dbg !10150
  %mul10 = mul nsw i64 %conv, %conv9, !dbg !10151
  %add11 = add nsw i64 %mul10, 4194304, !dbg !10152
  %shr12 = ashr i64 %add11, 23, !dbg !10153
  %conv13 = trunc i64 %shr12 to i32, !dbg !10154
  store i32 %conv13, i32* %prod, align 4, !dbg !10155
  %16 = load i32, i32* %prod, align 4, !dbg !10156
  %add14 = add nsw i32 %16, 4194304, !dbg !10157
  %shr15 = ashr i32 %add14, 23, !dbg !10158
  store i32 %shr15, i32* %present, align 4, !dbg !10159
  %17 = load i32, i32* %present, align 4, !dbg !10160
  %18 = load i32, i32* %previous, align 4, !dbg !10161
  %sub16 = sub nsw i32 %17, %18, !dbg !10162
  %conv17 = trunc i32 %sub16 to i16, !dbg !10160
  %19 = load i32, i32* %k, align 4, !dbg !10163
  %idxprom = sext i32 %19 to i64, !dbg !10164
  %20 = load i16*, i16** %bands.addr, align 8, !dbg !10164
  %arrayidx = getelementptr inbounds i16, i16* %20, i64 %idxprom, !dbg !10164
  store i16 %conv17, i16* %arrayidx, align 2, !dbg !10165
  %21 = load i32, i32* %present, align 4, !dbg !10166
  store i32 %21, i32* %previous, align 4, !dbg !10167
  br label %for.inc, !dbg !10168

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %k, align 4, !dbg !10169
  %inc18 = add nsw i32 %22, 1, !dbg !10169
  store i32 %inc18, i32* %k, align 4, !dbg !10169
  br label %for.cond, !dbg !10171, !llvm.loop !10172

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* %stop.addr, align 4, !dbg !10174
  %24 = load i32, i32* %previous, align 4, !dbg !10175
  %sub19 = sub nsw i32 %23, %24, !dbg !10176
  %conv20 = trunc i32 %sub19 to i16, !dbg !10174
  %25 = load i32, i32* %num_bands.addr, align 4, !dbg !10177
  %sub21 = sub nsw i32 %25, 1, !dbg !10178
  %idxprom22 = sext i32 %sub21 to i64, !dbg !10179
  %26 = load i16*, i16** %bands.addr, align 8, !dbg !10179
  %arrayidx23 = getelementptr inbounds i16, i16* %26, i64 %idxprom22, !dbg !10179
  store i16 %conv20, i16* %arrayidx23, align 2, !dbg !10180
  ret void, !dbg !10181
}

; Function Attrs: nounwind uwtable
define internal i32 @check_n_master(%struct.AVCodecContext* %avctx, i32 %n_master, i32 %bs_xover_band) #3 !dbg !10182 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %n_master.addr = alloca i32, align 4
  %bs_xover_band.addr = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !10185, metadata !2734), !dbg !10186
  store i32 %n_master, i32* %n_master.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_master.addr, metadata !10187, metadata !2734), !dbg !10188
  store i32 %bs_xover_band, i32* %bs_xover_band.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bs_xover_band.addr, metadata !10189, metadata !2734), !dbg !10190
  %0 = load i32, i32* %n_master.addr, align 4, !dbg !10191
  %cmp = icmp sle i32 %0, 0, !dbg !10193
  br i1 %cmp, label %if.then, label %if.end, !dbg !10194

if.then:                                          ; preds = %entry
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10195
  %2 = bitcast %struct.AVCodecContext* %1 to i8*, !dbg !10195
  %3 = load i32, i32* %n_master.addr, align 4, !dbg !10197
  call void (i8*, i32, i8*, ...) @av_log(i8* %2, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 %3), !dbg !10198
  store i32 -1, i32* %retval, align 4, !dbg !10199
  br label %return, !dbg !10199

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bs_xover_band.addr, align 4, !dbg !10200
  %5 = load i32, i32* %n_master.addr, align 4, !dbg !10202
  %cmp1 = icmp sge i32 %4, %5, !dbg !10203
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10204

if.then2:                                         ; preds = %if.end
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10205
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !10205
  %8 = load i32, i32* %bs_xover_band.addr, align 4, !dbg !10207
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.24, i32 0, i32 0), i32 %8), !dbg !10208
  store i32 -1, i32* %retval, align 4, !dbg !10209
  br label %return, !dbg !10209

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10210
  br label %return, !dbg !10210

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !10211
  ret i32 %9, !dbg !10211
}

; Function Attrs: nounwind uwtable
define internal i32 @fixed_log(i32 %x) #3 !dbg !10212 {
entry:
  %x.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %xpow = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10215, metadata !2734), !dbg !10216
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10217, metadata !2734), !dbg !10218
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10219, metadata !2734), !dbg !10220
  call void @llvm.dbg.declare(metadata i32* %xpow, metadata !10221, metadata !2734), !dbg !10222
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10223, metadata !2734), !dbg !10224
  %0 = load i32, i32* %x.addr, align 4, !dbg !10225
  store i32 %0, i32* %ret, align 4, !dbg !10226
  %1 = load i32, i32* %x.addr, align 4, !dbg !10227
  store i32 %1, i32* %xpow, align 4, !dbg !10228
  store i32 0, i32* %i, align 4, !dbg !10229
  br label %for.cond, !dbg !10231

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10232
  %cmp = icmp slt i32 %2, 10, !dbg !10235
  br i1 %cmp, label %for.body, label %for.end, !dbg !10236

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %xpow, align 4, !dbg !10237
  %conv = sext i32 %3 to i64, !dbg !10239
  %4 = load i32, i32* %x.addr, align 4, !dbg !10240
  %conv1 = sext i32 %4 to i64, !dbg !10240
  %mul = mul nsw i64 %conv, %conv1, !dbg !10241
  %add = add nsw i64 %mul, 1073741824, !dbg !10242
  %shr = ashr i64 %add, 31, !dbg !10243
  %conv2 = trunc i64 %shr to i32, !dbg !10244
  store i32 %conv2, i32* %xpow, align 4, !dbg !10245
  %5 = load i32, i32* %xpow, align 4, !dbg !10246
  %conv3 = sext i32 %5 to i64, !dbg !10247
  %6 = load i32, i32* %i, align 4, !dbg !10248
  %idxprom = sext i32 %6 to i64, !dbg !10249
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @fixed_log_table, i64 0, i64 %idxprom, !dbg !10249
  %7 = load i32, i32* %arrayidx, align 4, !dbg !10249
  %conv4 = sext i32 %7 to i64, !dbg !10249
  %mul5 = mul nsw i64 %conv3, %conv4, !dbg !10250
  %add6 = add nsw i64 %mul5, 1073741824, !dbg !10251
  %shr7 = ashr i64 %add6, 31, !dbg !10252
  %conv8 = trunc i64 %shr7 to i32, !dbg !10253
  store i32 %conv8, i32* %tmp, align 4, !dbg !10254
  %8 = load i32, i32* %tmp, align 4, !dbg !10255
  %9 = load i32, i32* %ret, align 4, !dbg !10256
  %sub = sub nsw i32 %9, %8, !dbg !10256
  store i32 %sub, i32* %ret, align 4, !dbg !10256
  %10 = load i32, i32* %xpow, align 4, !dbg !10257
  %conv9 = sext i32 %10 to i64, !dbg !10258
  %11 = load i32, i32* %x.addr, align 4, !dbg !10259
  %conv10 = sext i32 %11 to i64, !dbg !10259
  %mul11 = mul nsw i64 %conv9, %conv10, !dbg !10260
  %add12 = add nsw i64 %mul11, 1073741824, !dbg !10261
  %shr13 = ashr i64 %add12, 31, !dbg !10262
  %conv14 = trunc i64 %shr13 to i32, !dbg !10263
  store i32 %conv14, i32* %xpow, align 4, !dbg !10264
  %12 = load i32, i32* %xpow, align 4, !dbg !10265
  %conv15 = sext i32 %12 to i64, !dbg !10266
  %13 = load i32, i32* %i, align 4, !dbg !10267
  %add16 = add nsw i32 %13, 1, !dbg !10268
  %idxprom17 = sext i32 %add16 to i64, !dbg !10269
  %arrayidx18 = getelementptr inbounds [10 x i32], [10 x i32]* @fixed_log_table, i64 0, i64 %idxprom17, !dbg !10269
  %14 = load i32, i32* %arrayidx18, align 4, !dbg !10269
  %conv19 = sext i32 %14 to i64, !dbg !10269
  %mul20 = mul nsw i64 %conv15, %conv19, !dbg !10270
  %add21 = add nsw i64 %mul20, 1073741824, !dbg !10271
  %shr22 = ashr i64 %add21, 31, !dbg !10272
  %conv23 = trunc i64 %shr22 to i32, !dbg !10273
  store i32 %conv23, i32* %tmp, align 4, !dbg !10274
  %15 = load i32, i32* %tmp, align 4, !dbg !10275
  %16 = load i32, i32* %ret, align 4, !dbg !10276
  %add24 = add nsw i32 %16, %15, !dbg !10276
  store i32 %add24, i32* %ret, align 4, !dbg !10276
  br label %for.inc, !dbg !10277

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !10278
  %add25 = add nsw i32 %17, 2, !dbg !10278
  store i32 %add25, i32* %i, align 4, !dbg !10278
  br label %for.cond, !dbg !10280, !llvm.loop !10281

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %ret, align 4, !dbg !10283
  ret i32 %18, !dbg !10284
}

; Function Attrs: nounwind uwtable
define internal i32 @array_min_int16(i16* %array, i32 %nel) #3 !dbg !10285 {
entry:
  %array.addr = alloca i16*, align 8
  %nel.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %min = alloca i32, align 4
  store i16* %array, i16** %array.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %array.addr, metadata !10288, metadata !2734), !dbg !10289
  store i32 %nel, i32* %nel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nel.addr, metadata !10290, metadata !2734), !dbg !10291
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10292, metadata !2734), !dbg !10293
  call void @llvm.dbg.declare(metadata i32* %min, metadata !10294, metadata !2734), !dbg !10295
  %0 = load i16*, i16** %array.addr, align 8, !dbg !10296
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !10296
  %1 = load i16, i16* %arrayidx, align 2, !dbg !10296
  %conv = sext i16 %1 to i32, !dbg !10296
  store i32 %conv, i32* %min, align 4, !dbg !10295
  store i32 1, i32* %i, align 4, !dbg !10297
  br label %for.cond, !dbg !10299

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10300
  %3 = load i32, i32* %nel.addr, align 4, !dbg !10303
  %cmp = icmp slt i32 %2, %3, !dbg !10304
  br i1 %cmp, label %for.body, label %for.end, !dbg !10305

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !10306
  %idxprom = sext i32 %4 to i64, !dbg !10307
  %5 = load i16*, i16** %array.addr, align 8, !dbg !10307
  %arrayidx2 = getelementptr inbounds i16, i16* %5, i64 %idxprom, !dbg !10307
  %6 = load i16, i16* %arrayidx2, align 2, !dbg !10307
  %conv3 = sext i16 %6 to i32, !dbg !10308
  %7 = load i32, i32* %min, align 4, !dbg !10309
  %cmp4 = icmp sgt i32 %conv3, %7, !dbg !10310
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !10308

cond.true:                                        ; preds = %for.body
  %8 = load i32, i32* %min, align 4, !dbg !10311
  br label %cond.end, !dbg !10312

cond.false:                                       ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !10313
  %idxprom6 = sext i32 %9 to i64, !dbg !10315
  %10 = load i16*, i16** %array.addr, align 8, !dbg !10315
  %arrayidx7 = getelementptr inbounds i16, i16* %10, i64 %idxprom6, !dbg !10315
  %11 = load i16, i16* %arrayidx7, align 2, !dbg !10315
  %conv8 = sext i16 %11 to i32, !dbg !10316
  br label %cond.end, !dbg !10317

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ %conv8, %cond.false ], !dbg !10318
  store i32 %cond, i32* %min, align 4, !dbg !10320
  br label %for.inc, !dbg !10321

for.inc:                                          ; preds = %cond.end
  %12 = load i32, i32* %i, align 4, !dbg !10322
  %inc = add nsw i32 %12, 1, !dbg !10322
  store i32 %inc, i32* %i, align 4, !dbg !10322
  br label %for.cond, !dbg !10323, !llvm.loop !10324

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %min, align 4, !dbg !10326
  ret i32 %13, !dbg !10327
}

; Function Attrs: nounwind uwtable
define internal i32 @fixed_exp(i32 %x) #3 !dbg !10328 {
entry:
  %x.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %xpow = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10329, metadata !2734), !dbg !10330
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10331, metadata !2734), !dbg !10332
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10333, metadata !2734), !dbg !10334
  call void @llvm.dbg.declare(metadata i32* %xpow, metadata !10335, metadata !2734), !dbg !10336
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10337, metadata !2734), !dbg !10338
  %0 = load i32, i32* %x.addr, align 4, !dbg !10339
  %add = add nsw i32 8388608, %0, !dbg !10340
  store i32 %add, i32* %ret, align 4, !dbg !10341
  %1 = load i32, i32* %x.addr, align 4, !dbg !10342
  store i32 %1, i32* %xpow, align 4, !dbg !10343
  store i32 0, i32* %i, align 4, !dbg !10344
  br label %for.cond, !dbg !10346

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10347
  %cmp = icmp slt i32 %2, 7, !dbg !10350
  br i1 %cmp, label %for.body, label %for.end, !dbg !10351

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %xpow, align 4, !dbg !10352
  %conv = sext i32 %3 to i64, !dbg !10354
  %4 = load i32, i32* %x.addr, align 4, !dbg !10355
  %conv1 = sext i32 %4 to i64, !dbg !10355
  %mul = mul nsw i64 %conv, %conv1, !dbg !10356
  %add2 = add nsw i64 %mul, 4194304, !dbg !10357
  %shr = ashr i64 %add2, 23, !dbg !10358
  %conv3 = trunc i64 %shr to i32, !dbg !10359
  store i32 %conv3, i32* %xpow, align 4, !dbg !10360
  %5 = load i32, i32* %xpow, align 4, !dbg !10361
  %conv4 = sext i32 %5 to i64, !dbg !10362
  %6 = load i32, i32* %i, align 4, !dbg !10363
  %idxprom = sext i32 %6 to i64, !dbg !10364
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* @fixed_exp_table, i64 0, i64 %idxprom, !dbg !10364
  %7 = load i32, i32* %arrayidx, align 4, !dbg !10364
  %conv5 = sext i32 %7 to i64, !dbg !10364
  %mul6 = mul nsw i64 %conv4, %conv5, !dbg !10365
  %add7 = add nsw i64 %mul6, 1073741824, !dbg !10366
  %shr8 = ashr i64 %add7, 31, !dbg !10367
  %conv9 = trunc i64 %shr8 to i32, !dbg !10368
  store i32 %conv9, i32* %tmp, align 4, !dbg !10369
  %8 = load i32, i32* %tmp, align 4, !dbg !10370
  %9 = load i32, i32* %ret, align 4, !dbg !10371
  %add10 = add nsw i32 %9, %8, !dbg !10371
  store i32 %add10, i32* %ret, align 4, !dbg !10371
  br label %for.inc, !dbg !10372

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !10373
  %inc = add nsw i32 %10, 1, !dbg !10373
  store i32 %inc, i32* %i, align 4, !dbg !10373
  br label %for.cond, !dbg !10375, !llvm.loop !10376

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %ret, align 4, !dbg !10378
  ret i32 %11, !dbg !10379
}

; Function Attrs: nounwind uwtable
define internal i32 @sbr_hf_calc_npatches(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr) #3 !dbg !10380 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %last_k = alloca i32, align 4
  %last_msb = alloca i32, align 4
  %sb = alloca i32, align 4
  %msb = alloca i32, align 4
  %usb = alloca i32, align 4
  %goal_sb = alloca i32, align 4
  %odd = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !10381, metadata !2734), !dbg !10382
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !10383, metadata !2734), !dbg !10384
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10385, metadata !2734), !dbg !10386
  call void @llvm.dbg.declare(metadata i32* %k, metadata !10387, metadata !2734), !dbg !10388
  call void @llvm.dbg.declare(metadata i32* %last_k, metadata !10389, metadata !2734), !dbg !10390
  store i32 -1, i32* %last_k, align 4, !dbg !10390
  call void @llvm.dbg.declare(metadata i32* %last_msb, metadata !10391, metadata !2734), !dbg !10392
  store i32 -1, i32* %last_msb, align 4, !dbg !10392
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !10393, metadata !2734), !dbg !10394
  store i32 0, i32* %sb, align 4, !dbg !10394
  call void @llvm.dbg.declare(metadata i32* %msb, metadata !10395, metadata !2734), !dbg !10396
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10397
  %k1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 12, !dbg !10398
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* %k1, i64 0, i64 0, !dbg !10397
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10397
  store i32 %1, i32* %msb, align 4, !dbg !10396
  call void @llvm.dbg.declare(metadata i32* %usb, metadata !10399, metadata !2734), !dbg !10400
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10401
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 13, !dbg !10402
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !10401
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !10401
  store i32 %3, i32* %usb, align 4, !dbg !10400
  call void @llvm.dbg.declare(metadata i32* %goal_sb, metadata !10403, metadata !2734), !dbg !10404
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10405
  %sample_rate = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 0, !dbg !10406
  %5 = load i32, i32* %sample_rate, align 32, !dbg !10406
  %shr = ashr i32 %5, 1, !dbg !10407
  %add = add nsw i32 2048000, %shr, !dbg !10408
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10409
  %sample_rate3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 0, !dbg !10410
  %7 = load i32, i32* %sample_rate3, align 32, !dbg !10410
  %div = sdiv i32 %add, %7, !dbg !10411
  store i32 %div, i32* %goal_sb, align 4, !dbg !10404
  %8 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10412
  %num_patches = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %8, i32 0, i32 27, !dbg !10413
  store i32 0, i32* %num_patches, align 16, !dbg !10414
  %9 = load i32, i32* %goal_sb, align 4, !dbg !10415
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10417
  %kx4 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %10, i32 0, i32 13, !dbg !10418
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %kx4, i64 0, i64 1, !dbg !10417
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !10417
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10419
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 14, !dbg !10420
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 1, !dbg !10419
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !10419
  %add7 = add nsw i32 %11, %13, !dbg !10421
  %cmp = icmp slt i32 %9, %add7, !dbg !10422
  br i1 %cmp, label %if.then, label %if.else, !dbg !10423

if.then:                                          ; preds = %entry
  store i32 0, i32* %k, align 4, !dbg !10424
  br label %for.cond, !dbg !10427

for.cond:                                         ; preds = %for.inc, %if.then
  %14 = load i32, i32* %k, align 4, !dbg !10428
  %idxprom = sext i32 %14 to i64, !dbg !10431
  %15 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10431
  %f_master = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %15, i32 0, i32 22, !dbg !10432
  %arrayidx8 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master, i64 0, i64 %idxprom, !dbg !10431
  %16 = load i16, i16* %arrayidx8, align 2, !dbg !10431
  %conv = zext i16 %16 to i32, !dbg !10431
  %17 = load i32, i32* %goal_sb, align 4, !dbg !10433
  %cmp9 = icmp slt i32 %conv, %17, !dbg !10434
  br i1 %cmp9, label %for.body, label %for.end, !dbg !10435

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !10436

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %k, align 4, !dbg !10438
  %inc = add nsw i32 %18, 1, !dbg !10438
  store i32 %inc, i32* %k, align 4, !dbg !10438
  br label %for.cond, !dbg !10440, !llvm.loop !10441

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !10443

if.else:                                          ; preds = %entry
  %19 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10444
  %n_master = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %19, i32 0, i32 16, !dbg !10445
  %20 = load i32, i32* %n_master, align 4, !dbg !10445
  store i32 %20, i32* %k, align 4, !dbg !10446
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  br label %do.body, !dbg !10447, !llvm.loop !10448

do.body:                                          ; preds = %do.cond, %if.end
  call void @llvm.dbg.declare(metadata i32* %odd, metadata !10449, metadata !2734), !dbg !10451
  store i32 0, i32* %odd, align 4, !dbg !10451
  %21 = load i32, i32* %k, align 4, !dbg !10452
  %22 = load i32, i32* %last_k, align 4, !dbg !10454
  %cmp11 = icmp eq i32 %21, %22, !dbg !10455
  br i1 %cmp11, label %land.lhs.true, label %if.end16, !dbg !10456

land.lhs.true:                                    ; preds = %do.body
  %23 = load i32, i32* %msb, align 4, !dbg !10457
  %24 = load i32, i32* %last_msb, align 4, !dbg !10459
  %cmp13 = icmp eq i32 %23, %24, !dbg !10460
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !10461

if.then15:                                        ; preds = %land.lhs.true
  %25 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10462
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %25, i32 0, i32 1, !dbg !10464
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !10464
  %27 = bitcast %struct.AVCodecContext* %26 to i8*, !dbg !10462
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.28, i32 0, i32 0)), !dbg !10465
  store i32 -1094995529, i32* %retval, align 4, !dbg !10466
  br label %return, !dbg !10466

if.end16:                                         ; preds = %land.lhs.true, %do.body
  %28 = load i32, i32* %k, align 4, !dbg !10467
  store i32 %28, i32* %last_k, align 4, !dbg !10468
  %29 = load i32, i32* %msb, align 4, !dbg !10469
  store i32 %29, i32* %last_msb, align 4, !dbg !10470
  %30 = load i32, i32* %k, align 4, !dbg !10471
  store i32 %30, i32* %i, align 4, !dbg !10473
  br label %for.cond17, !dbg !10474

for.cond17:                                       ; preds = %for.inc34, %if.end16
  %31 = load i32, i32* %i, align 4, !dbg !10475
  %32 = load i32, i32* %k, align 4, !dbg !10478
  %cmp18 = icmp eq i32 %31, %32, !dbg !10479
  br i1 %cmp18, label %lor.end, label %lor.rhs, !dbg !10480

lor.rhs:                                          ; preds = %for.cond17
  %33 = load i32, i32* %sb, align 4, !dbg !10481
  %34 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10483
  %k20 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %34, i32 0, i32 12, !dbg !10484
  %arrayidx21 = getelementptr inbounds [5 x i32], [5 x i32]* %k20, i64 0, i64 0, !dbg !10483
  %35 = load i32, i32* %arrayidx21, align 4, !dbg !10483
  %sub = sub nsw i32 %35, 1, !dbg !10485
  %36 = load i32, i32* %msb, align 4, !dbg !10486
  %add22 = add nsw i32 %sub, %36, !dbg !10487
  %37 = load i32, i32* %odd, align 4, !dbg !10488
  %sub23 = sub nsw i32 %add22, %37, !dbg !10489
  %cmp24 = icmp sgt i32 %33, %sub23, !dbg !10490
  br label %lor.end, !dbg !10491

lor.end:                                          ; preds = %lor.rhs, %for.cond17
  %38 = phi i1 [ true, %for.cond17 ], [ %cmp24, %lor.rhs ]
  br i1 %38, label %for.body26, label %for.end35, !dbg !10492

for.body26:                                       ; preds = %lor.end
  %39 = load i32, i32* %i, align 4, !dbg !10494
  %idxprom27 = sext i32 %39 to i64, !dbg !10496
  %40 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10496
  %f_master28 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %40, i32 0, i32 22, !dbg !10497
  %arrayidx29 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master28, i64 0, i64 %idxprom27, !dbg !10496
  %41 = load i16, i16* %arrayidx29, align 2, !dbg !10496
  %conv30 = zext i16 %41 to i32, !dbg !10496
  store i32 %conv30, i32* %sb, align 4, !dbg !10498
  %42 = load i32, i32* %sb, align 4, !dbg !10499
  %43 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10500
  %k31 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %43, i32 0, i32 12, !dbg !10501
  %arrayidx32 = getelementptr inbounds [5 x i32], [5 x i32]* %k31, i64 0, i64 0, !dbg !10500
  %44 = load i32, i32* %arrayidx32, align 4, !dbg !10500
  %add33 = add nsw i32 %42, %44, !dbg !10502
  %and = and i32 %add33, 1, !dbg !10503
  store i32 %and, i32* %odd, align 4, !dbg !10504
  br label %for.inc34, !dbg !10505

for.inc34:                                        ; preds = %for.body26
  %45 = load i32, i32* %i, align 4, !dbg !10506
  %dec = add nsw i32 %45, -1, !dbg !10506
  store i32 %dec, i32* %i, align 4, !dbg !10506
  br label %for.cond17, !dbg !10508, !llvm.loop !10509

for.end35:                                        ; preds = %lor.end
  %46 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10511
  %num_patches36 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %46, i32 0, i32 27, !dbg !10513
  %47 = load i32, i32* %num_patches36, align 16, !dbg !10513
  %cmp37 = icmp sgt i32 %47, 5, !dbg !10514
  br i1 %cmp37, label %if.then39, label %if.end42, !dbg !10515

if.then39:                                        ; preds = %for.end35
  %48 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10516
  %avctx40 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %48, i32 0, i32 1, !dbg !10518
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx40, align 8, !dbg !10518
  %50 = bitcast %struct.AVCodecContext* %49 to i8*, !dbg !10516
  %51 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10519
  %num_patches41 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %51, i32 0, i32 27, !dbg !10520
  %52 = load i32, i32* %num_patches41, align 16, !dbg !10520
  call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0), i32 %52), !dbg !10521
  store i32 -1, i32* %retval, align 4, !dbg !10522
  br label %return, !dbg !10522

if.end42:                                         ; preds = %for.end35
  %53 = load i32, i32* %sb, align 4, !dbg !10523
  %54 = load i32, i32* %usb, align 4, !dbg !10524
  %sub43 = sub nsw i32 %53, %54, !dbg !10525
  %cmp44 = icmp sgt i32 %sub43, 0, !dbg !10526
  br i1 %cmp44, label %cond.true, label %cond.false, !dbg !10527

cond.true:                                        ; preds = %if.end42
  %55 = load i32, i32* %sb, align 4, !dbg !10528
  %56 = load i32, i32* %usb, align 4, !dbg !10530
  %sub46 = sub nsw i32 %55, %56, !dbg !10531
  br label %cond.end, !dbg !10532

cond.false:                                       ; preds = %if.end42
  br label %cond.end, !dbg !10533

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub46, %cond.true ], [ 0, %cond.false ], !dbg !10535
  %conv47 = trunc i32 %cond to i8, !dbg !10537
  %57 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10538
  %num_patches48 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %57, i32 0, i32 27, !dbg !10539
  %58 = load i32, i32* %num_patches48, align 16, !dbg !10539
  %idxprom49 = sext i32 %58 to i64, !dbg !10540
  %59 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10540
  %patch_num_subbands = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %59, i32 0, i32 28, !dbg !10541
  %arrayidx50 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_num_subbands, i64 0, i64 %idxprom49, !dbg !10540
  store i8 %conv47, i8* %arrayidx50, align 1, !dbg !10542
  %60 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10543
  %k51 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %60, i32 0, i32 12, !dbg !10544
  %arrayidx52 = getelementptr inbounds [5 x i32], [5 x i32]* %k51, i64 0, i64 0, !dbg !10543
  %61 = load i32, i32* %arrayidx52, align 4, !dbg !10543
  %62 = load i32, i32* %odd, align 4, !dbg !10545
  %sub53 = sub nsw i32 %61, %62, !dbg !10546
  %63 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10547
  %num_patches54 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %63, i32 0, i32 27, !dbg !10548
  %64 = load i32, i32* %num_patches54, align 16, !dbg !10548
  %idxprom55 = sext i32 %64 to i64, !dbg !10549
  %65 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10549
  %patch_num_subbands56 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %65, i32 0, i32 28, !dbg !10550
  %arrayidx57 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_num_subbands56, i64 0, i64 %idxprom55, !dbg !10549
  %66 = load i8, i8* %arrayidx57, align 1, !dbg !10549
  %conv58 = zext i8 %66 to i32, !dbg !10549
  %sub59 = sub nsw i32 %sub53, %conv58, !dbg !10551
  %conv60 = trunc i32 %sub59 to i8, !dbg !10543
  %67 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10552
  %num_patches61 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %67, i32 0, i32 27, !dbg !10553
  %68 = load i32, i32* %num_patches61, align 16, !dbg !10553
  %idxprom62 = sext i32 %68 to i64, !dbg !10554
  %69 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10554
  %patch_start_subband = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %69, i32 0, i32 29, !dbg !10555
  %arrayidx63 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_start_subband, i64 0, i64 %idxprom62, !dbg !10554
  store i8 %conv60, i8* %arrayidx63, align 1, !dbg !10556
  %70 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10557
  %num_patches64 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %70, i32 0, i32 27, !dbg !10559
  %71 = load i32, i32* %num_patches64, align 16, !dbg !10559
  %idxprom65 = sext i32 %71 to i64, !dbg !10560
  %72 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10560
  %patch_num_subbands66 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %72, i32 0, i32 28, !dbg !10561
  %arrayidx67 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_num_subbands66, i64 0, i64 %idxprom65, !dbg !10560
  %73 = load i8, i8* %arrayidx67, align 1, !dbg !10560
  %conv68 = zext i8 %73 to i32, !dbg !10560
  %cmp69 = icmp sgt i32 %conv68, 0, !dbg !10562
  br i1 %cmp69, label %if.then71, label %if.else74, !dbg !10563

if.then71:                                        ; preds = %cond.end
  %74 = load i32, i32* %sb, align 4, !dbg !10564
  store i32 %74, i32* %usb, align 4, !dbg !10566
  %75 = load i32, i32* %sb, align 4, !dbg !10567
  store i32 %75, i32* %msb, align 4, !dbg !10568
  %76 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10569
  %num_patches72 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %76, i32 0, i32 27, !dbg !10570
  %77 = load i32, i32* %num_patches72, align 16, !dbg !10571
  %inc73 = add nsw i32 %77, 1, !dbg !10571
  store i32 %inc73, i32* %num_patches72, align 16, !dbg !10571
  br label %if.end77, !dbg !10572

if.else74:                                        ; preds = %cond.end
  %78 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10573
  %kx75 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %78, i32 0, i32 13, !dbg !10574
  %arrayidx76 = getelementptr inbounds [2 x i32], [2 x i32]* %kx75, i64 0, i64 1, !dbg !10573
  %79 = load i32, i32* %arrayidx76, align 4, !dbg !10573
  store i32 %79, i32* %msb, align 4, !dbg !10575
  br label %if.end77

if.end77:                                         ; preds = %if.else74, %if.then71
  %80 = load i32, i32* %k, align 4, !dbg !10576
  %idxprom78 = sext i32 %80 to i64, !dbg !10578
  %81 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10578
  %f_master79 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %81, i32 0, i32 22, !dbg !10579
  %arrayidx80 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master79, i64 0, i64 %idxprom78, !dbg !10578
  %82 = load i16, i16* %arrayidx80, align 2, !dbg !10578
  %conv81 = zext i16 %82 to i32, !dbg !10578
  %83 = load i32, i32* %sb, align 4, !dbg !10580
  %sub82 = sub nsw i32 %conv81, %83, !dbg !10581
  %cmp83 = icmp slt i32 %sub82, 3, !dbg !10582
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !10583

if.then85:                                        ; preds = %if.end77
  %84 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10584
  %n_master86 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %84, i32 0, i32 16, !dbg !10585
  %85 = load i32, i32* %n_master86, align 4, !dbg !10585
  store i32 %85, i32* %k, align 4, !dbg !10586
  br label %if.end87, !dbg !10587

if.end87:                                         ; preds = %if.then85, %if.end77
  br label %do.cond, !dbg !10588

do.cond:                                          ; preds = %if.end87
  %86 = load i32, i32* %sb, align 4, !dbg !10589
  %87 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10591
  %kx88 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %87, i32 0, i32 13, !dbg !10592
  %arrayidx89 = getelementptr inbounds [2 x i32], [2 x i32]* %kx88, i64 0, i64 1, !dbg !10591
  %88 = load i32, i32* %arrayidx89, align 4, !dbg !10591
  %89 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10593
  %m90 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %89, i32 0, i32 14, !dbg !10594
  %arrayidx91 = getelementptr inbounds [2 x i32], [2 x i32]* %m90, i64 0, i64 1, !dbg !10593
  %90 = load i32, i32* %arrayidx91, align 4, !dbg !10593
  %add92 = add nsw i32 %88, %90, !dbg !10595
  %cmp93 = icmp ne i32 %86, %add92, !dbg !10596
  br i1 %cmp93, label %do.body, label %do.end, !dbg !10597, !llvm.loop !10448

do.end:                                           ; preds = %do.cond
  %91 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10598
  %num_patches95 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %91, i32 0, i32 27, !dbg !10600
  %92 = load i32, i32* %num_patches95, align 16, !dbg !10600
  %cmp96 = icmp sgt i32 %92, 1, !dbg !10601
  br i1 %cmp96, label %land.lhs.true98, label %if.end110, !dbg !10602

land.lhs.true98:                                  ; preds = %do.end
  %93 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10603
  %num_patches99 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %93, i32 0, i32 27, !dbg !10604
  %94 = load i32, i32* %num_patches99, align 16, !dbg !10604
  %sub100 = sub nsw i32 %94, 1, !dbg !10605
  %idxprom101 = sext i32 %sub100 to i64, !dbg !10606
  %95 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10606
  %patch_num_subbands102 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %95, i32 0, i32 28, !dbg !10607
  %arrayidx103 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_num_subbands102, i64 0, i64 %idxprom101, !dbg !10606
  %96 = load i8, i8* %arrayidx103, align 1, !dbg !10606
  %conv104 = zext i8 %96 to i32, !dbg !10606
  %cmp105 = icmp slt i32 %conv104, 3, !dbg !10608
  br i1 %cmp105, label %if.then107, label %if.end110, !dbg !10609

if.then107:                                       ; preds = %land.lhs.true98
  %97 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10610
  %num_patches108 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %97, i32 0, i32 27, !dbg !10611
  %98 = load i32, i32* %num_patches108, align 16, !dbg !10612
  %dec109 = add nsw i32 %98, -1, !dbg !10612
  store i32 %dec109, i32* %num_patches108, align 16, !dbg !10612
  br label %if.end110, !dbg !10610

if.end110:                                        ; preds = %if.then107, %land.lhs.true98, %do.end
  store i32 0, i32* %retval, align 4, !dbg !10613
  br label %return, !dbg !10613

return:                                           ; preds = %if.end110, %if.then39, %if.then15
  %99 = load i32, i32* %retval, align 4, !dbg !10614
  ret i32 %99, !dbg !10614
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_single_channel_element(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb) #3 !dbg !10615 {
entry:
  %gb.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i, metadata !10618, metadata !2734), !dbg !10622
  %vec.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i, metadata !10625, metadata !2734), !dbg !10626
  %elements.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i, metadata !10627, metadata !2734), !dbg !10628
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !10629, metadata !2734), !dbg !10630
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ret = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !10631, metadata !2734), !dbg !10632
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !10633, metadata !2734), !dbg !10634
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10635, metadata !2734), !dbg !10636
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10637, metadata !2734), !dbg !10638
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10639
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !10641
  %tobool = icmp ne i32 %call, 0, !dbg !10641
  br i1 %tobool, label %if.then, label %if.end, !dbg !10642

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10643
  call void @skip_bits(%struct.GetBitContext* %1, i32 4), !dbg !10644
  br label %if.end, !dbg !10644

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10645
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10647
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10648
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10649
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %5, i32 0, i32 17, !dbg !10650
  %arrayidx = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 0, !dbg !10649
  %call1 = call i32 @read_sbr_grid(%struct.AACContext* %2, %struct.SpectralBandReplication* %3, %struct.GetBitContext* %4, %struct.SBRData* %arrayidx), !dbg !10651
  %tobool2 = icmp ne i32 %call1, 0, !dbg !10651
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10652

if.then3:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !10653
  br label %return, !dbg !10653

if.end4:                                          ; preds = %if.end
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10654
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10655
  %8 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10656
  %data5 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %8, i32 0, i32 17, !dbg !10657
  %arrayidx6 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data5, i64 0, i64 0, !dbg !10656
  call void @read_sbr_dtdf(%struct.SpectralBandReplication* %6, %struct.GetBitContext* %7, %struct.SBRData* %arrayidx6), !dbg !10658
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10659
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10660
  %11 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10661
  %data7 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %11, i32 0, i32 17, !dbg !10662
  %arrayidx8 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data7, i64 0, i64 0, !dbg !10661
  call void @read_sbr_invf(%struct.SpectralBandReplication* %9, %struct.GetBitContext* %10, %struct.SBRData* %arrayidx8), !dbg !10663
  %12 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10664
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10666
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10667
  %15 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10668
  %data9 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %15, i32 0, i32 17, !dbg !10669
  %arrayidx10 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data9, i64 0, i64 0, !dbg !10668
  %call11 = call i32 @read_sbr_envelope(%struct.AACContext* %12, %struct.SpectralBandReplication* %13, %struct.GetBitContext* %14, %struct.SBRData* %arrayidx10, i32 0), !dbg !10670
  store i32 %call11, i32* %ret, align 4, !dbg !10671
  %cmp = icmp slt i32 %call11, 0, !dbg !10672
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !10673

if.then12:                                        ; preds = %if.end4
  %16 = load i32, i32* %ret, align 4, !dbg !10674
  store i32 %16, i32* %retval, align 4, !dbg !10675
  br label %return, !dbg !10675

if.end13:                                         ; preds = %if.end4
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10676
  %18 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10678
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10679
  %20 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10680
  %data14 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %20, i32 0, i32 17, !dbg !10681
  %arrayidx15 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data14, i64 0, i64 0, !dbg !10680
  %call16 = call i32 @read_sbr_noise(%struct.AACContext* %17, %struct.SpectralBandReplication* %18, %struct.GetBitContext* %19, %struct.SBRData* %arrayidx15, i32 0), !dbg !10682
  store i32 %call16, i32* %ret, align 4, !dbg !10683
  %cmp17 = icmp slt i32 %call16, 0, !dbg !10684
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !10685

if.then18:                                        ; preds = %if.end13
  %21 = load i32, i32* %ret, align 4, !dbg !10686
  store i32 %21, i32* %retval, align 4, !dbg !10687
  br label %return, !dbg !10687

if.end19:                                         ; preds = %if.end13
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10688
  %call20 = call i32 @get_bits1(%struct.GetBitContext* %22), !dbg !10689
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10690
  %data21 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %23, i32 0, i32 17, !dbg !10691
  %arrayidx22 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data21, i64 0, i64 0, !dbg !10690
  %bs_add_harmonic_flag = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx22, i32 0, i32 1, !dbg !10692
  store i32 %call20, i32* %bs_add_harmonic_flag, align 4, !dbg !10693
  %tobool23 = icmp ne i32 %call20, 0, !dbg !10693
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !10694

if.then24:                                        ; preds = %if.end19
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10695
  %25 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10696
  %data25 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %25, i32 0, i32 17, !dbg !10697
  %arrayidx26 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data25, i64 0, i64 0, !dbg !10696
  %bs_add_harmonic = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx26, i32 0, i32 8, !dbg !10698
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %bs_add_harmonic, i32 0, i32 0, !dbg !10696
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10699
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 19, !dbg !10700
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 1, !dbg !10699
  %27 = load i32, i32* %arrayidx27, align 4, !dbg !10699
  store %struct.GetBitContext* %24, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !10701
  store i8* %arraydecay, i8** %vec.addr.i, align 8, !dbg !10701
  store i32 %27, i32* %elements.addr.i, align 4, !dbg !10701
  store i32 0, i32* %i.i, align 4, !dbg !10702
  br label %for.cond.i, !dbg !10704

for.cond.i:                                       ; preds = %for.body.i, %if.then24
  %28 = load i32, i32* %i.i, align 4, !dbg !10705
  %29 = load i32, i32* %elements.addr.i, align 4, !dbg !10708
  %cmp.i = icmp slt i32 %28, %29, !dbg !10709
  br i1 %cmp.i, label %for.body.i, label %get_bits1_vector.exit, !dbg !10710

for.body.i:                                       ; preds = %for.cond.i
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !10711
  %call.i = call i32 @get_bits1(%struct.GetBitContext* %30) #12, !dbg !10713
  %conv.i = trunc i32 %call.i to i8, !dbg !10713
  %31 = load i32, i32* %i.i, align 4, !dbg !10714
  %idxprom.i = sext i32 %31 to i64, !dbg !10715
  %32 = load i8*, i8** %vec.addr.i, align 8, !dbg !10715
  %arrayidx.i = getelementptr inbounds i8, i8* %32, i64 %idxprom.i, !dbg !10715
  store i8 %conv.i, i8* %arrayidx.i, align 1, !dbg !10716
  %33 = load i32, i32* %i.i, align 4, !dbg !10717
  %inc.i = add nsw i32 %33, 1, !dbg !10717
  store i32 %inc.i, i32* %i.i, align 4, !dbg !10717
  br label %for.cond.i, !dbg !10719, !llvm.loop !10720

get_bits1_vector.exit:                            ; preds = %for.cond.i
  br label %if.end28, !dbg !10701

if.end28:                                         ; preds = %get_bits1_vector.exit, %if.end19
  store i32 0, i32* %retval, align 4, !dbg !10722
  br label %return, !dbg !10722

return:                                           ; preds = %if.end28, %if.then18, %if.then12, %if.then3
  %34 = load i32, i32* %retval, align 4, !dbg !10723
  ret i32 %34, !dbg !10723
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_channel_pair_element(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb) #3 !dbg !10724 {
entry:
  %gb.addr.i125 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i125, metadata !10618, metadata !2734), !dbg !10725
  %vec.addr.i126 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i126, metadata !10625, metadata !2734), !dbg !10728
  %elements.addr.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i127, metadata !10627, metadata !2734), !dbg !10729
  %i.i128 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i128, metadata !10629, metadata !2734), !dbg !10730
  %gb.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i, metadata !10618, metadata !2734), !dbg !10731
  %vec.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i, metadata !10625, metadata !2734), !dbg !10734
  %elements.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i, metadata !10627, metadata !2734), !dbg !10735
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !10629, metadata !2734), !dbg !10736
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ret = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !10737, metadata !2734), !dbg !10738
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !10739, metadata !2734), !dbg !10740
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10741, metadata !2734), !dbg !10742
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10743, metadata !2734), !dbg !10744
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10745
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !10747
  %tobool = icmp ne i32 %call, 0, !dbg !10747
  br i1 %tobool, label %if.then, label %if.end, !dbg !10748

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10749
  call void @skip_bits(%struct.GetBitContext* %1, i32 8), !dbg !10750
  br label %if.end, !dbg !10750

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10751
  %call1 = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !10753
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10754
  %bs_coupling = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 11, !dbg !10755
  store i32 %call1, i32* %bs_coupling, align 16, !dbg !10756
  %tobool2 = icmp ne i32 %call1, 0, !dbg !10756
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !10757

if.then3:                                         ; preds = %if.end
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10758
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10761
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10762
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10763
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 17, !dbg !10764
  %arrayidx = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 0, !dbg !10763
  %call4 = call i32 @read_sbr_grid(%struct.AACContext* %4, %struct.SpectralBandReplication* %5, %struct.GetBitContext* %6, %struct.SBRData* %arrayidx), !dbg !10765
  %tobool5 = icmp ne i32 %call4, 0, !dbg !10765
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10766

if.then6:                                         ; preds = %if.then3
  store i32 -1, i32* %retval, align 4, !dbg !10767
  br label %return, !dbg !10767

if.end7:                                          ; preds = %if.then3
  %8 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10768
  %data8 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %8, i32 0, i32 17, !dbg !10769
  %arrayidx9 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data8, i64 0, i64 1, !dbg !10768
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10770
  %data10 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %9, i32 0, i32 17, !dbg !10771
  %arrayidx11 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data10, i64 0, i64 0, !dbg !10770
  call void @copy_sbr_grid(%struct.SBRData* %arrayidx9, %struct.SBRData* %arrayidx11), !dbg !10772
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10773
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10774
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10775
  %data12 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 17, !dbg !10776
  %arrayidx13 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data12, i64 0, i64 0, !dbg !10775
  call void @read_sbr_dtdf(%struct.SpectralBandReplication* %10, %struct.GetBitContext* %11, %struct.SBRData* %arrayidx13), !dbg !10777
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10778
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10779
  %15 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10780
  %data14 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %15, i32 0, i32 17, !dbg !10781
  %arrayidx15 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data14, i64 0, i64 1, !dbg !10780
  call void @read_sbr_dtdf(%struct.SpectralBandReplication* %13, %struct.GetBitContext* %14, %struct.SBRData* %arrayidx15), !dbg !10782
  %16 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10783
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10784
  %18 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10785
  %data16 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %18, i32 0, i32 17, !dbg !10786
  %arrayidx17 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data16, i64 0, i64 0, !dbg !10785
  call void @read_sbr_invf(%struct.SpectralBandReplication* %16, %struct.GetBitContext* %17, %struct.SBRData* %arrayidx17), !dbg !10787
  %19 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10788
  %data18 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %19, i32 0, i32 17, !dbg !10789
  %arrayidx19 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data18, i64 0, i64 1, !dbg !10788
  %bs_invf_mode = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx19, i32 0, i32 7, !dbg !10790
  %arrayidx20 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode, i64 0, i64 1, !dbg !10788
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx20, i32 0, i32 0, !dbg !10791
  %20 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10792
  %data21 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %20, i32 0, i32 17, !dbg !10793
  %arrayidx22 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data21, i64 0, i64 1, !dbg !10792
  %bs_invf_mode23 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx22, i32 0, i32 7, !dbg !10794
  %arrayidx24 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode23, i64 0, i64 0, !dbg !10792
  %arraydecay25 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx24, i32 0, i32 0, !dbg !10791
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay25, i64 5, i32 1, i1 false), !dbg !10791
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10795
  %data26 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %21, i32 0, i32 17, !dbg !10796
  %arrayidx27 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data26, i64 0, i64 1, !dbg !10795
  %bs_invf_mode28 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx27, i32 0, i32 7, !dbg !10797
  %arrayidx29 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode28, i64 0, i64 0, !dbg !10795
  %arraydecay30 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx29, i32 0, i32 0, !dbg !10798
  %22 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10799
  %data31 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %22, i32 0, i32 17, !dbg !10800
  %arrayidx32 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data31, i64 0, i64 0, !dbg !10799
  %bs_invf_mode33 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx32, i32 0, i32 7, !dbg !10801
  %arrayidx34 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode33, i64 0, i64 0, !dbg !10799
  %arraydecay35 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx34, i32 0, i32 0, !dbg !10798
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay30, i8* %arraydecay35, i64 5, i32 1, i1 false), !dbg !10798
  %23 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10802
  %24 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10804
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10805
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10806
  %data36 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 17, !dbg !10807
  %arrayidx37 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data36, i64 0, i64 0, !dbg !10806
  %call38 = call i32 @read_sbr_envelope(%struct.AACContext* %23, %struct.SpectralBandReplication* %24, %struct.GetBitContext* %25, %struct.SBRData* %arrayidx37, i32 0), !dbg !10808
  store i32 %call38, i32* %ret, align 4, !dbg !10809
  %cmp = icmp slt i32 %call38, 0, !dbg !10810
  br i1 %cmp, label %if.then39, label %if.end40, !dbg !10811

if.then39:                                        ; preds = %if.end7
  %27 = load i32, i32* %ret, align 4, !dbg !10812
  store i32 %27, i32* %retval, align 4, !dbg !10813
  br label %return, !dbg !10813

if.end40:                                         ; preds = %if.end7
  %28 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10814
  %29 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10816
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10817
  %31 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10818
  %data41 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %31, i32 0, i32 17, !dbg !10819
  %arrayidx42 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data41, i64 0, i64 0, !dbg !10818
  %call43 = call i32 @read_sbr_noise(%struct.AACContext* %28, %struct.SpectralBandReplication* %29, %struct.GetBitContext* %30, %struct.SBRData* %arrayidx42, i32 0), !dbg !10820
  store i32 %call43, i32* %ret, align 4, !dbg !10821
  %cmp44 = icmp slt i32 %call43, 0, !dbg !10822
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !10823

if.then45:                                        ; preds = %if.end40
  %32 = load i32, i32* %ret, align 4, !dbg !10824
  store i32 %32, i32* %retval, align 4, !dbg !10825
  br label %return, !dbg !10825

if.end46:                                         ; preds = %if.end40
  %33 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10826
  %34 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10828
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10829
  %36 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10830
  %data47 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %36, i32 0, i32 17, !dbg !10831
  %arrayidx48 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data47, i64 0, i64 1, !dbg !10830
  %call49 = call i32 @read_sbr_envelope(%struct.AACContext* %33, %struct.SpectralBandReplication* %34, %struct.GetBitContext* %35, %struct.SBRData* %arrayidx48, i32 1), !dbg !10832
  store i32 %call49, i32* %ret, align 4, !dbg !10833
  %cmp50 = icmp slt i32 %call49, 0, !dbg !10834
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !10835

if.then51:                                        ; preds = %if.end46
  %37 = load i32, i32* %ret, align 4, !dbg !10836
  store i32 %37, i32* %retval, align 4, !dbg !10837
  br label %return, !dbg !10837

if.end52:                                         ; preds = %if.end46
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10838
  %39 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10840
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10841
  %41 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10842
  %data53 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %41, i32 0, i32 17, !dbg !10843
  %arrayidx54 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data53, i64 0, i64 1, !dbg !10842
  %call55 = call i32 @read_sbr_noise(%struct.AACContext* %38, %struct.SpectralBandReplication* %39, %struct.GetBitContext* %40, %struct.SBRData* %arrayidx54, i32 1), !dbg !10844
  store i32 %call55, i32* %ret, align 4, !dbg !10845
  %cmp56 = icmp slt i32 %call55, 0, !dbg !10846
  br i1 %cmp56, label %if.then57, label %if.end58, !dbg !10847

if.then57:                                        ; preds = %if.end52
  %42 = load i32, i32* %ret, align 4, !dbg !10848
  store i32 %42, i32* %retval, align 4, !dbg !10849
  br label %return, !dbg !10849

if.end58:                                         ; preds = %if.end52
  br label %if.end101, !dbg !10850

if.else:                                          ; preds = %if.end
  %43 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10851
  %44 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10854
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10855
  %46 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10856
  %data59 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %46, i32 0, i32 17, !dbg !10857
  %arrayidx60 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data59, i64 0, i64 0, !dbg !10856
  %call61 = call i32 @read_sbr_grid(%struct.AACContext* %43, %struct.SpectralBandReplication* %44, %struct.GetBitContext* %45, %struct.SBRData* %arrayidx60), !dbg !10858
  %tobool62 = icmp ne i32 %call61, 0, !dbg !10858
  br i1 %tobool62, label %if.then67, label %lor.lhs.false, !dbg !10859

lor.lhs.false:                                    ; preds = %if.else
  %47 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10860
  %48 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10861
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10862
  %50 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10863
  %data63 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %50, i32 0, i32 17, !dbg !10864
  %arrayidx64 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data63, i64 0, i64 1, !dbg !10863
  %call65 = call i32 @read_sbr_grid(%struct.AACContext* %47, %struct.SpectralBandReplication* %48, %struct.GetBitContext* %49, %struct.SBRData* %arrayidx64), !dbg !10865
  %tobool66 = icmp ne i32 %call65, 0, !dbg !10865
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !10866

if.then67:                                        ; preds = %lor.lhs.false, %if.else
  store i32 -1, i32* %retval, align 4, !dbg !10868
  br label %return, !dbg !10868

if.end68:                                         ; preds = %lor.lhs.false
  %51 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10869
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10870
  %53 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10871
  %data69 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %53, i32 0, i32 17, !dbg !10872
  %arrayidx70 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data69, i64 0, i64 0, !dbg !10871
  call void @read_sbr_dtdf(%struct.SpectralBandReplication* %51, %struct.GetBitContext* %52, %struct.SBRData* %arrayidx70), !dbg !10873
  %54 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10874
  %55 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10875
  %56 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10876
  %data71 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %56, i32 0, i32 17, !dbg !10877
  %arrayidx72 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data71, i64 0, i64 1, !dbg !10876
  call void @read_sbr_dtdf(%struct.SpectralBandReplication* %54, %struct.GetBitContext* %55, %struct.SBRData* %arrayidx72), !dbg !10878
  %57 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10879
  %58 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10880
  %59 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10881
  %data73 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %59, i32 0, i32 17, !dbg !10882
  %arrayidx74 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data73, i64 0, i64 0, !dbg !10881
  call void @read_sbr_invf(%struct.SpectralBandReplication* %57, %struct.GetBitContext* %58, %struct.SBRData* %arrayidx74), !dbg !10883
  %60 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10884
  %61 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10885
  %62 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10886
  %data75 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %62, i32 0, i32 17, !dbg !10887
  %arrayidx76 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data75, i64 0, i64 1, !dbg !10886
  call void @read_sbr_invf(%struct.SpectralBandReplication* %60, %struct.GetBitContext* %61, %struct.SBRData* %arrayidx76), !dbg !10888
  %63 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10889
  %64 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10891
  %65 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10892
  %66 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10893
  %data77 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %66, i32 0, i32 17, !dbg !10894
  %arrayidx78 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data77, i64 0, i64 0, !dbg !10893
  %call79 = call i32 @read_sbr_envelope(%struct.AACContext* %63, %struct.SpectralBandReplication* %64, %struct.GetBitContext* %65, %struct.SBRData* %arrayidx78, i32 0), !dbg !10895
  store i32 %call79, i32* %ret, align 4, !dbg !10896
  %cmp80 = icmp slt i32 %call79, 0, !dbg !10897
  br i1 %cmp80, label %if.then81, label %if.end82, !dbg !10898

if.then81:                                        ; preds = %if.end68
  %67 = load i32, i32* %ret, align 4, !dbg !10899
  store i32 %67, i32* %retval, align 4, !dbg !10900
  br label %return, !dbg !10900

if.end82:                                         ; preds = %if.end68
  %68 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10901
  %69 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10903
  %70 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10904
  %71 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10905
  %data83 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %71, i32 0, i32 17, !dbg !10906
  %arrayidx84 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data83, i64 0, i64 1, !dbg !10905
  %call85 = call i32 @read_sbr_envelope(%struct.AACContext* %68, %struct.SpectralBandReplication* %69, %struct.GetBitContext* %70, %struct.SBRData* %arrayidx84, i32 1), !dbg !10907
  store i32 %call85, i32* %ret, align 4, !dbg !10908
  %cmp86 = icmp slt i32 %call85, 0, !dbg !10909
  br i1 %cmp86, label %if.then87, label %if.end88, !dbg !10910

if.then87:                                        ; preds = %if.end82
  %72 = load i32, i32* %ret, align 4, !dbg !10911
  store i32 %72, i32* %retval, align 4, !dbg !10912
  br label %return, !dbg !10912

if.end88:                                         ; preds = %if.end82
  %73 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10913
  %74 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10915
  %75 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10916
  %76 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10917
  %data89 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %76, i32 0, i32 17, !dbg !10918
  %arrayidx90 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data89, i64 0, i64 0, !dbg !10917
  %call91 = call i32 @read_sbr_noise(%struct.AACContext* %73, %struct.SpectralBandReplication* %74, %struct.GetBitContext* %75, %struct.SBRData* %arrayidx90, i32 0), !dbg !10919
  store i32 %call91, i32* %ret, align 4, !dbg !10920
  %cmp92 = icmp slt i32 %call91, 0, !dbg !10921
  br i1 %cmp92, label %if.then93, label %if.end94, !dbg !10922

if.then93:                                        ; preds = %if.end88
  %77 = load i32, i32* %ret, align 4, !dbg !10923
  store i32 %77, i32* %retval, align 4, !dbg !10924
  br label %return, !dbg !10924

if.end94:                                         ; preds = %if.end88
  %78 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10925
  %79 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10927
  %80 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10928
  %81 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10929
  %data95 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %81, i32 0, i32 17, !dbg !10930
  %arrayidx96 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data95, i64 0, i64 1, !dbg !10929
  %call97 = call i32 @read_sbr_noise(%struct.AACContext* %78, %struct.SpectralBandReplication* %79, %struct.GetBitContext* %80, %struct.SBRData* %arrayidx96, i32 1), !dbg !10931
  store i32 %call97, i32* %ret, align 4, !dbg !10932
  %cmp98 = icmp slt i32 %call97, 0, !dbg !10933
  br i1 %cmp98, label %if.then99, label %if.end100, !dbg !10934

if.then99:                                        ; preds = %if.end94
  %82 = load i32, i32* %ret, align 4, !dbg !10935
  store i32 %82, i32* %retval, align 4, !dbg !10936
  br label %return, !dbg !10936

if.end100:                                        ; preds = %if.end94
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.end58
  %83 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10937
  %call102 = call i32 @get_bits1(%struct.GetBitContext* %83), !dbg !10938
  %84 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10939
  %data103 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %84, i32 0, i32 17, !dbg !10940
  %arrayidx104 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data103, i64 0, i64 0, !dbg !10939
  %bs_add_harmonic_flag = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx104, i32 0, i32 1, !dbg !10941
  store i32 %call102, i32* %bs_add_harmonic_flag, align 4, !dbg !10942
  %tobool105 = icmp ne i32 %call102, 0, !dbg !10942
  br i1 %tobool105, label %if.then106, label %if.end111, !dbg !10943

if.then106:                                       ; preds = %if.end101
  %85 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10944
  %86 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10945
  %data107 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %86, i32 0, i32 17, !dbg !10946
  %arrayidx108 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data107, i64 0, i64 0, !dbg !10945
  %bs_add_harmonic = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx108, i32 0, i32 8, !dbg !10947
  %arraydecay109 = getelementptr inbounds [48 x i8], [48 x i8]* %bs_add_harmonic, i32 0, i32 0, !dbg !10945
  %87 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10948
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %87, i32 0, i32 19, !dbg !10949
  %arrayidx110 = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 1, !dbg !10948
  %88 = load i32, i32* %arrayidx110, align 4, !dbg !10948
  store %struct.GetBitContext* %85, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !10950
  store i8* %arraydecay109, i8** %vec.addr.i, align 8, !dbg !10950
  store i32 %88, i32* %elements.addr.i, align 4, !dbg !10950
  store i32 0, i32* %i.i, align 4, !dbg !10951
  br label %for.cond.i, !dbg !10952

for.cond.i:                                       ; preds = %for.body.i, %if.then106
  %89 = load i32, i32* %i.i, align 4, !dbg !10953
  %90 = load i32, i32* %elements.addr.i, align 4, !dbg !10954
  %cmp.i = icmp slt i32 %89, %90, !dbg !10955
  br i1 %cmp.i, label %for.body.i, label %get_bits1_vector.exit, !dbg !10956

for.body.i:                                       ; preds = %for.cond.i
  %91 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !10957
  %call.i = call i32 @get_bits1(%struct.GetBitContext* %91) #12, !dbg !10958
  %conv.i = trunc i32 %call.i to i8, !dbg !10958
  %92 = load i32, i32* %i.i, align 4, !dbg !10959
  %idxprom.i = sext i32 %92 to i64, !dbg !10960
  %93 = load i8*, i8** %vec.addr.i, align 8, !dbg !10960
  %arrayidx.i = getelementptr inbounds i8, i8* %93, i64 %idxprom.i, !dbg !10960
  store i8 %conv.i, i8* %arrayidx.i, align 1, !dbg !10961
  %94 = load i32, i32* %i.i, align 4, !dbg !10962
  %inc.i = add nsw i32 %94, 1, !dbg !10962
  store i32 %inc.i, i32* %i.i, align 4, !dbg !10962
  br label %for.cond.i, !dbg !10963, !llvm.loop !10720

get_bits1_vector.exit:                            ; preds = %for.cond.i
  br label %if.end111, !dbg !10950

if.end111:                                        ; preds = %get_bits1_vector.exit, %if.end101
  %95 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10964
  %call112 = call i32 @get_bits1(%struct.GetBitContext* %95), !dbg !10965
  %96 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10966
  %data113 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %96, i32 0, i32 17, !dbg !10967
  %arrayidx114 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data113, i64 0, i64 1, !dbg !10966
  %bs_add_harmonic_flag115 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx114, i32 0, i32 1, !dbg !10968
  store i32 %call112, i32* %bs_add_harmonic_flag115, align 4, !dbg !10969
  %tobool116 = icmp ne i32 %call112, 0, !dbg !10969
  br i1 %tobool116, label %if.then117, label %if.end124, !dbg !10970

if.then117:                                       ; preds = %if.end111
  %97 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10971
  %98 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10972
  %data118 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %98, i32 0, i32 17, !dbg !10973
  %arrayidx119 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data118, i64 0, i64 1, !dbg !10972
  %bs_add_harmonic120 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx119, i32 0, i32 8, !dbg !10974
  %arraydecay121 = getelementptr inbounds [48 x i8], [48 x i8]* %bs_add_harmonic120, i32 0, i32 0, !dbg !10972
  %99 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10975
  %n122 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %99, i32 0, i32 19, !dbg !10976
  %arrayidx123 = getelementptr inbounds [2 x i32], [2 x i32]* %n122, i64 0, i64 1, !dbg !10975
  %100 = load i32, i32* %arrayidx123, align 4, !dbg !10975
  store %struct.GetBitContext* %97, %struct.GetBitContext** %gb.addr.i125, align 8, !dbg !10977
  store i8* %arraydecay121, i8** %vec.addr.i126, align 8, !dbg !10977
  store i32 %100, i32* %elements.addr.i127, align 4, !dbg !10977
  store i32 0, i32* %i.i128, align 4, !dbg !10978
  br label %for.cond.i130, !dbg !10979

for.cond.i130:                                    ; preds = %for.body.i135, %if.then117
  %101 = load i32, i32* %i.i128, align 4, !dbg !10980
  %102 = load i32, i32* %elements.addr.i127, align 4, !dbg !10981
  %cmp.i129 = icmp slt i32 %101, %102, !dbg !10982
  br i1 %cmp.i129, label %for.body.i135, label %get_bits1_vector.exit137, !dbg !10983

for.body.i135:                                    ; preds = %for.cond.i130
  %103 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i125, align 8, !dbg !10984
  %call.i131 = call i32 @get_bits1(%struct.GetBitContext* %103) #12, !dbg !10985
  %conv.i132 = trunc i32 %call.i131 to i8, !dbg !10985
  %104 = load i32, i32* %i.i128, align 4, !dbg !10986
  %idxprom.i133 = sext i32 %104 to i64, !dbg !10987
  %105 = load i8*, i8** %vec.addr.i126, align 8, !dbg !10987
  %arrayidx.i134 = getelementptr inbounds i8, i8* %105, i64 %idxprom.i133, !dbg !10987
  store i8 %conv.i132, i8* %arrayidx.i134, align 1, !dbg !10988
  %106 = load i32, i32* %i.i128, align 4, !dbg !10989
  %inc.i136 = add nsw i32 %106, 1, !dbg !10989
  store i32 %inc.i136, i32* %i.i128, align 4, !dbg !10989
  br label %for.cond.i130, !dbg !10990, !llvm.loop !10720

get_bits1_vector.exit137:                         ; preds = %for.cond.i130
  br label %if.end124, !dbg !10977

if.end124:                                        ; preds = %get_bits1_vector.exit137, %if.end111
  store i32 0, i32* %retval, align 4, !dbg !10991
  br label %return, !dbg !10991

return:                                           ; preds = %if.end124, %if.then99, %if.then93, %if.then87, %if.then81, %if.then67, %if.then57, %if.then51, %if.then45, %if.then39, %if.then6
  %107 = load i32, i32* %retval, align 4, !dbg !10992
  ret i32 %107, !dbg !10992
}

; Function Attrs: nounwind uwtable
define internal void @read_sbr_extension(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, i32 %bs_extension_id, i32* %num_bits_left) #3 !dbg !10993 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %bs_extension_id.addr = alloca i32, align 4
  %num_bits_left.addr = alloca i32*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !10996, metadata !2734), !dbg !10997
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !10998, metadata !2734), !dbg !10999
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !11000, metadata !2734), !dbg !11001
  store i32 %bs_extension_id, i32* %bs_extension_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bs_extension_id.addr, metadata !11002, metadata !2734), !dbg !11003
  store i32* %num_bits_left, i32** %num_bits_left.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_bits_left.addr, metadata !11004, metadata !2734), !dbg !11005
  %0 = load i32, i32* %bs_extension_id.addr, align 4, !dbg !11006
  switch i32 %0, label %sw.default [
    i32 2, label %sw.bb
  ], !dbg !11007

sw.bb:                                            ; preds = %entry
  %1 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11008
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %1, i32 0, i32 21, !dbg !11011
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !11008
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !11012
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 10, !dbg !11013
  %2 = load i32, i32* %ps, align 8, !dbg !11013
  %tobool = icmp ne i32 %2, 0, !dbg !11008
  br i1 %tobool, label %if.else, label %if.then, !dbg !11014

if.then:                                          ; preds = %sw.bb
  %3 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11015
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %3, i32 0, i32 1, !dbg !11017
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !11017
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !11015
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.39, i32 0, i32 0)), !dbg !11018
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11019
  %7 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !11020
  %8 = load i32, i32* %7, align 4, !dbg !11021
  call void @skip_bits_long(%struct.GetBitContext* %6, i32 %8), !dbg !11022
  %9 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !11023
  store i32 0, i32* %9, align 4, !dbg !11024
  br label %if.end, !dbg !11025

if.else:                                          ; preds = %sw.bb
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11026
  %avctx1 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 1, !dbg !11028
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !11028
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11029
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !11030
  %ps2 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %13, i32 0, i32 18, !dbg !11031
  %14 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !11032
  %15 = load i32, i32* %14, align 4, !dbg !11033
  %call = call i32 @ff_ps_read_data_fixed(%struct.AVCodecContext* %11, %struct.GetBitContext* %12, %struct.PSContext* %ps2, i32 %15), !dbg !11034
  %16 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !11035
  %17 = load i32, i32* %16, align 4, !dbg !11036
  %sub = sub nsw i32 %17, %call, !dbg !11036
  store i32 %sub, i32* %16, align 4, !dbg !11036
  %18 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11037
  %avctx3 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %18, i32 0, i32 1, !dbg !11038
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx3, align 8, !dbg !11038
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 153, !dbg !11039
  store i32 28, i32* %profile, align 4, !dbg !11040
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !11041

sw.default:                                       ; preds = %entry
  %20 = load i32, i32* %bs_extension_id.addr, align 4, !dbg !11042
  %tobool4 = icmp ne i32 %20, 0, !dbg !11042
  br i1 %tobool4, label %if.then8, label %lor.lhs.false, !dbg !11044

lor.lhs.false:                                    ; preds = %sw.default
  %21 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !11045
  %22 = load i32, i32* %21, align 4, !dbg !11047
  %cmp = icmp sgt i32 %22, 16, !dbg !11048
  br i1 %cmp, label %if.then8, label %lor.lhs.false5, !dbg !11049

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11050
  %24 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !11052
  %25 = load i32, i32* %24, align 4, !dbg !11053
  %call6 = call i32 @show_bits(%struct.GetBitContext* %23, i32 %25), !dbg !11054
  %tobool7 = icmp ne i32 %call6, 0, !dbg !11054
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !11055

if.then8:                                         ; preds = %lor.lhs.false5, %lor.lhs.false, %sw.default
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11056
  %avctx9 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %26, i32 0, i32 1, !dbg !11057
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx9, align 8, !dbg !11057
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !11056
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %28, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i32 0, i32 0)), !dbg !11058
  br label %if.end10, !dbg !11058

if.end10:                                         ; preds = %if.then8, %lor.lhs.false5
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11059
  %30 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !11060
  %31 = load i32, i32* %30, align 4, !dbg !11061
  call void @skip_bits_long(%struct.GetBitContext* %29, i32 %31), !dbg !11062
  %32 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !11063
  store i32 0, i32* %32, align 4, !dbg !11064
  br label %sw.epilog, !dbg !11065

sw.epilog:                                        ; preds = %if.end10, %if.end
  ret void, !dbg !11066
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_grid(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, %struct.SBRData* %ch_data) #3 !dbg !11067 {
entry:
  %gb.addr.i343 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i343, metadata !10618, metadata !2734), !dbg !11070
  %vec.addr.i344 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i344, metadata !10625, metadata !2734), !dbg !11073
  %elements.addr.i345 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i345, metadata !10627, metadata !2734), !dbg !11074
  %i.i346 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i346, metadata !10629, metadata !2734), !dbg !11075
  %gb.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i, metadata !10618, metadata !2734), !dbg !11076
  %vec.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i, metadata !10625, metadata !2734), !dbg !11078
  %elements.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i, metadata !10627, metadata !2734), !dbg !11079
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !10629, metadata !2734), !dbg !11080
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %i = alloca i32, align 4
  %bs_pointer = alloca i32, align 4
  %abs_bord_trail = alloca i32, align 4
  %num_rel_lead = alloca i32, align 4
  %num_rel_trail = alloca i32, align 4
  %bs_num_env_old = alloca i32, align 4
  %bs_frame_class = alloca i32, align 4
  %bs_num_env1 = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !11081, metadata !2734), !dbg !11082
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !11083, metadata !2734), !dbg !11084
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !11085, metadata !2734), !dbg !11086
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !11087, metadata !2734), !dbg !11088
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11089, metadata !2734), !dbg !11090
  call void @llvm.dbg.declare(metadata i32* %bs_pointer, metadata !11091, metadata !2734), !dbg !11092
  store i32 0, i32* %bs_pointer, align 4, !dbg !11092
  call void @llvm.dbg.declare(metadata i32* %abs_bord_trail, metadata !11093, metadata !2734), !dbg !11094
  store i32 16, i32* %abs_bord_trail, align 4, !dbg !11094
  call void @llvm.dbg.declare(metadata i32* %num_rel_lead, metadata !11095, metadata !2734), !dbg !11096
  call void @llvm.dbg.declare(metadata i32* %num_rel_trail, metadata !11097, metadata !2734), !dbg !11098
  call void @llvm.dbg.declare(metadata i32* %bs_num_env_old, metadata !11099, metadata !2734), !dbg !11100
  %0 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11101
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %0, i32 0, i32 2, !dbg !11102
  %1 = load i32, i32* %bs_num_env, align 8, !dbg !11102
  store i32 %1, i32* %bs_num_env_old, align 4, !dbg !11100
  call void @llvm.dbg.declare(metadata i32* %bs_frame_class, metadata !11103, metadata !2734), !dbg !11104
  call void @llvm.dbg.declare(metadata i32* %bs_num_env1, metadata !11105, metadata !2734), !dbg !11106
  %2 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11107
  %bs_num_env2 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %2, i32 0, i32 2, !dbg !11108
  %3 = load i32, i32* %bs_num_env2, align 8, !dbg !11108
  %idxprom = sext i32 %3 to i64, !dbg !11109
  %4 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11109
  %bs_freq_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %4, i32 0, i32 3, !dbg !11110
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res, i64 0, i64 %idxprom, !dbg !11109
  %5 = load i8, i8* %arrayidx, align 1, !dbg !11109
  %6 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11111
  %bs_freq_res3 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %6, i32 0, i32 3, !dbg !11112
  %arrayidx4 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res3, i64 0, i64 0, !dbg !11111
  store i8 %5, i8* %arrayidx4, align 4, !dbg !11113
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !11114
  %bs_amp_res_header = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 6, !dbg !11115
  %8 = load i32, i32* %bs_amp_res_header, align 4, !dbg !11115
  %9 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11116
  %bs_amp_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %9, i32 0, i32 9, !dbg !11117
  store i32 %8, i32* %bs_amp_res, align 4, !dbg !11118
  %10 = load i32, i32* %bs_num_env_old, align 4, !dbg !11119
  %idxprom5 = zext i32 %10 to i64, !dbg !11120
  %11 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11120
  %t_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %11, i32 0, i32 26, !dbg !11121
  %arrayidx6 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env, i64 0, i64 %idxprom5, !dbg !11120
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !11120
  %13 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11122
  %t_env_num_env_old = getelementptr inbounds %struct.SBRData, %struct.SBRData* %13, i32 0, i32 27, !dbg !11123
  store i8 %12, i8* %t_env_num_env_old, align 32, !dbg !11124
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11125
  %call = call i32 @get_bits(%struct.GetBitContext* %14, i32 2), !dbg !11126
  store i32 %call, i32* %bs_frame_class, align 4, !dbg !11127
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb53
    i32 2, label %sw.bb109
    i32 3, label %sw.bb149
  ], !dbg !11128

sw.bb:                                            ; preds = %entry
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11129
  %call7 = call i32 @get_bits(%struct.GetBitContext* %15, i32 2), !dbg !11130
  %shl = shl i32 1, %call7, !dbg !11131
  store i32 %shl, i32* %bs_num_env1, align 4, !dbg !11132
  %16 = load i32, i32* %bs_num_env1, align 4, !dbg !11133
  %cmp = icmp sgt i32 %16, 4, !dbg !11135
  br i1 %cmp, label %if.then, label %if.end, !dbg !11136

if.then:                                          ; preds = %sw.bb
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11137
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %17, i32 0, i32 1, !dbg !11139
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !11139
  %19 = bitcast %struct.AVCodecContext* %18 to i8*, !dbg !11137
  %20 = load i32, i32* %bs_num_env1, align 4, !dbg !11140
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 16, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.32, i32 0, i32 0), i32 %20), !dbg !11141
  store i32 -1, i32* %retval, align 4, !dbg !11142
  br label %return, !dbg !11142

if.end:                                           ; preds = %sw.bb
  %21 = load i32, i32* %bs_num_env1, align 4, !dbg !11143
  %22 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11144
  %bs_num_env8 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %22, i32 0, i32 2, !dbg !11145
  store i32 %21, i32* %bs_num_env8, align 8, !dbg !11146
  %23 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11147
  %bs_num_env9 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %23, i32 0, i32 2, !dbg !11148
  %24 = load i32, i32* %bs_num_env9, align 8, !dbg !11148
  %sub = sub nsw i32 %24, 1, !dbg !11149
  store i32 %sub, i32* %num_rel_lead, align 4, !dbg !11150
  %25 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11151
  %bs_num_env10 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %25, i32 0, i32 2, !dbg !11153
  %26 = load i32, i32* %bs_num_env10, align 8, !dbg !11153
  %cmp11 = icmp eq i32 %26, 1, !dbg !11154
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !11155

if.then12:                                        ; preds = %if.end
  %27 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11156
  %bs_amp_res13 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %27, i32 0, i32 9, !dbg !11157
  store i32 0, i32* %bs_amp_res13, align 4, !dbg !11158
  br label %if.end14, !dbg !11156

if.end14:                                         ; preds = %if.then12, %if.end
  %28 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11159
  %t_env15 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %28, i32 0, i32 26, !dbg !11160
  %arrayidx16 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env15, i64 0, i64 0, !dbg !11159
  store i8 0, i8* %arrayidx16, align 8, !dbg !11161
  %29 = load i32, i32* %abs_bord_trail, align 4, !dbg !11162
  %conv = trunc i32 %29 to i8, !dbg !11162
  %30 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11163
  %bs_num_env17 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %30, i32 0, i32 2, !dbg !11164
  %31 = load i32, i32* %bs_num_env17, align 8, !dbg !11164
  %idxprom18 = sext i32 %31 to i64, !dbg !11165
  %32 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11165
  %t_env19 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %32, i32 0, i32 26, !dbg !11166
  %arrayidx20 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env19, i64 0, i64 %idxprom18, !dbg !11165
  store i8 %conv, i8* %arrayidx20, align 1, !dbg !11167
  %33 = load i32, i32* %abs_bord_trail, align 4, !dbg !11168
  %34 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11169
  %bs_num_env21 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %34, i32 0, i32 2, !dbg !11170
  %35 = load i32, i32* %bs_num_env21, align 8, !dbg !11170
  %shr = ashr i32 %35, 1, !dbg !11171
  %add = add nsw i32 %33, %shr, !dbg !11172
  %36 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11173
  %bs_num_env22 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %36, i32 0, i32 2, !dbg !11174
  %37 = load i32, i32* %bs_num_env22, align 8, !dbg !11174
  %div = sdiv i32 %add, %37, !dbg !11175
  store i32 %div, i32* %abs_bord_trail, align 4, !dbg !11176
  store i32 0, i32* %i, align 4, !dbg !11177
  br label %for.cond, !dbg !11179

for.cond:                                         ; preds = %for.inc, %if.end14
  %38 = load i32, i32* %i, align 4, !dbg !11180
  %39 = load i32, i32* %num_rel_lead, align 4, !dbg !11183
  %cmp23 = icmp slt i32 %38, %39, !dbg !11184
  br i1 %cmp23, label %for.body, label %for.end, !dbg !11185

for.body:                                         ; preds = %for.cond
  %40 = load i32, i32* %i, align 4, !dbg !11186
  %idxprom25 = sext i32 %40 to i64, !dbg !11187
  %41 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11187
  %t_env26 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %41, i32 0, i32 26, !dbg !11188
  %arrayidx27 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env26, i64 0, i64 %idxprom25, !dbg !11187
  %42 = load i8, i8* %arrayidx27, align 1, !dbg !11187
  %conv28 = zext i8 %42 to i32, !dbg !11187
  %43 = load i32, i32* %abs_bord_trail, align 4, !dbg !11189
  %add29 = add nsw i32 %conv28, %43, !dbg !11190
  %conv30 = trunc i32 %add29 to i8, !dbg !11187
  %44 = load i32, i32* %i, align 4, !dbg !11191
  %add31 = add nsw i32 %44, 1, !dbg !11192
  %idxprom32 = sext i32 %add31 to i64, !dbg !11193
  %45 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11193
  %t_env33 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %45, i32 0, i32 26, !dbg !11194
  %arrayidx34 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env33, i64 0, i64 %idxprom32, !dbg !11193
  store i8 %conv30, i8* %arrayidx34, align 1, !dbg !11195
  br label %for.inc, !dbg !11193

for.inc:                                          ; preds = %for.body
  %46 = load i32, i32* %i, align 4, !dbg !11196
  %inc = add nsw i32 %46, 1, !dbg !11196
  store i32 %inc, i32* %i, align 4, !dbg !11196
  br label %for.cond, !dbg !11198, !llvm.loop !11199

for.end:                                          ; preds = %for.cond
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11201
  %call35 = call i32 @get_bits1(%struct.GetBitContext* %47), !dbg !11202
  %conv36 = trunc i32 %call35 to i8, !dbg !11202
  %48 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11203
  %bs_freq_res37 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %48, i32 0, i32 3, !dbg !11204
  %arrayidx38 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res37, i64 0, i64 1, !dbg !11203
  store i8 %conv36, i8* %arrayidx38, align 1, !dbg !11205
  store i32 1, i32* %i, align 4, !dbg !11206
  br label %for.cond39, !dbg !11208

for.cond39:                                       ; preds = %for.inc50, %for.end
  %49 = load i32, i32* %i, align 4, !dbg !11209
  %50 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11212
  %bs_num_env40 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %50, i32 0, i32 2, !dbg !11213
  %51 = load i32, i32* %bs_num_env40, align 8, !dbg !11213
  %cmp41 = icmp slt i32 %49, %51, !dbg !11214
  br i1 %cmp41, label %for.body43, label %for.end52, !dbg !11215

for.body43:                                       ; preds = %for.cond39
  %52 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11216
  %bs_freq_res44 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %52, i32 0, i32 3, !dbg !11217
  %arrayidx45 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res44, i64 0, i64 1, !dbg !11216
  %53 = load i8, i8* %arrayidx45, align 1, !dbg !11216
  %54 = load i32, i32* %i, align 4, !dbg !11218
  %add46 = add nsw i32 %54, 1, !dbg !11219
  %idxprom47 = sext i32 %add46 to i64, !dbg !11220
  %55 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11220
  %bs_freq_res48 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %55, i32 0, i32 3, !dbg !11221
  %arrayidx49 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res48, i64 0, i64 %idxprom47, !dbg !11220
  store i8 %53, i8* %arrayidx49, align 1, !dbg !11222
  br label %for.inc50, !dbg !11220

for.inc50:                                        ; preds = %for.body43
  %56 = load i32, i32* %i, align 4, !dbg !11223
  %inc51 = add nsw i32 %56, 1, !dbg !11223
  store i32 %inc51, i32* %i, align 4, !dbg !11223
  br label %for.cond39, !dbg !11225, !llvm.loop !11226

for.end52:                                        ; preds = %for.cond39
  br label %sw.epilog, !dbg !11228

sw.bb53:                                          ; preds = %entry
  %57 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11229
  %call54 = call i32 @get_bits(%struct.GetBitContext* %57, i32 2), !dbg !11230
  %58 = load i32, i32* %abs_bord_trail, align 4, !dbg !11231
  %add55 = add i32 %58, %call54, !dbg !11231
  store i32 %add55, i32* %abs_bord_trail, align 4, !dbg !11231
  %59 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11232
  %call56 = call i32 @get_bits(%struct.GetBitContext* %59, i32 2), !dbg !11233
  store i32 %call56, i32* %num_rel_trail, align 4, !dbg !11234
  %60 = load i32, i32* %num_rel_trail, align 4, !dbg !11235
  %add57 = add nsw i32 %60, 1, !dbg !11236
  %61 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11237
  %bs_num_env58 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %61, i32 0, i32 2, !dbg !11238
  store i32 %add57, i32* %bs_num_env58, align 8, !dbg !11239
  %62 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11240
  %t_env59 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %62, i32 0, i32 26, !dbg !11241
  %arrayidx60 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env59, i64 0, i64 0, !dbg !11240
  store i8 0, i8* %arrayidx60, align 8, !dbg !11242
  %63 = load i32, i32* %abs_bord_trail, align 4, !dbg !11243
  %conv61 = trunc i32 %63 to i8, !dbg !11243
  %64 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11244
  %bs_num_env62 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %64, i32 0, i32 2, !dbg !11245
  %65 = load i32, i32* %bs_num_env62, align 8, !dbg !11245
  %idxprom63 = sext i32 %65 to i64, !dbg !11246
  %66 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11246
  %t_env64 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %66, i32 0, i32 26, !dbg !11247
  %arrayidx65 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env64, i64 0, i64 %idxprom63, !dbg !11246
  store i8 %conv61, i8* %arrayidx65, align 1, !dbg !11248
  store i32 0, i32* %i, align 4, !dbg !11249
  br label %for.cond66, !dbg !11251

for.cond66:                                       ; preds = %for.inc86, %sw.bb53
  %67 = load i32, i32* %i, align 4, !dbg !11252
  %68 = load i32, i32* %num_rel_trail, align 4, !dbg !11255
  %cmp67 = icmp slt i32 %67, %68, !dbg !11256
  br i1 %cmp67, label %for.body69, label %for.end88, !dbg !11257

for.body69:                                       ; preds = %for.cond66
  %69 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11258
  %bs_num_env70 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %69, i32 0, i32 2, !dbg !11259
  %70 = load i32, i32* %bs_num_env70, align 8, !dbg !11259
  %71 = load i32, i32* %i, align 4, !dbg !11260
  %sub71 = sub nsw i32 %70, %71, !dbg !11261
  %idxprom72 = sext i32 %sub71 to i64, !dbg !11262
  %72 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11262
  %t_env73 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %72, i32 0, i32 26, !dbg !11263
  %arrayidx74 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env73, i64 0, i64 %idxprom72, !dbg !11262
  %73 = load i8, i8* %arrayidx74, align 1, !dbg !11262
  %conv75 = zext i8 %73 to i32, !dbg !11262
  %74 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11264
  %call76 = call i32 @get_bits(%struct.GetBitContext* %74, i32 2), !dbg !11265
  %mul = mul i32 2, %call76, !dbg !11266
  %sub77 = sub i32 %conv75, %mul, !dbg !11267
  %sub78 = sub i32 %sub77, 2, !dbg !11268
  %conv79 = trunc i32 %sub78 to i8, !dbg !11262
  %75 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11269
  %bs_num_env80 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %75, i32 0, i32 2, !dbg !11270
  %76 = load i32, i32* %bs_num_env80, align 8, !dbg !11270
  %sub81 = sub nsw i32 %76, 1, !dbg !11271
  %77 = load i32, i32* %i, align 4, !dbg !11272
  %sub82 = sub nsw i32 %sub81, %77, !dbg !11273
  %idxprom83 = sext i32 %sub82 to i64, !dbg !11274
  %78 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11274
  %t_env84 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %78, i32 0, i32 26, !dbg !11275
  %arrayidx85 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env84, i64 0, i64 %idxprom83, !dbg !11274
  store i8 %conv79, i8* %arrayidx85, align 1, !dbg !11276
  br label %for.inc86, !dbg !11274

for.inc86:                                        ; preds = %for.body69
  %79 = load i32, i32* %i, align 4, !dbg !11277
  %inc87 = add nsw i32 %79, 1, !dbg !11277
  store i32 %inc87, i32* %i, align 4, !dbg !11277
  br label %for.cond66, !dbg !11279, !llvm.loop !11280

for.end88:                                        ; preds = %for.cond66
  %80 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11282
  %81 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11283
  %bs_num_env89 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %81, i32 0, i32 2, !dbg !11284
  %82 = load i32, i32* %bs_num_env89, align 8, !dbg !11284
  %idxprom90 = sext i32 %82 to i64, !dbg !11285
  %arrayidx91 = getelementptr inbounds [6 x i8], [6 x i8]* @ceil_log2, i64 0, i64 %idxprom90, !dbg !11285
  %83 = load i8, i8* %arrayidx91, align 1, !dbg !11285
  %conv92 = sext i8 %83 to i32, !dbg !11285
  %call93 = call i32 @get_bits(%struct.GetBitContext* %80, i32 %conv92), !dbg !11286
  store i32 %call93, i32* %bs_pointer, align 4, !dbg !11287
  store i32 0, i32* %i, align 4, !dbg !11288
  br label %for.cond94, !dbg !11290

for.cond94:                                       ; preds = %for.inc106, %for.end88
  %84 = load i32, i32* %i, align 4, !dbg !11291
  %85 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11294
  %bs_num_env95 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %85, i32 0, i32 2, !dbg !11295
  %86 = load i32, i32* %bs_num_env95, align 8, !dbg !11295
  %cmp96 = icmp slt i32 %84, %86, !dbg !11296
  br i1 %cmp96, label %for.body98, label %for.end108, !dbg !11297

for.body98:                                       ; preds = %for.cond94
  %87 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11298
  %call99 = call i32 @get_bits1(%struct.GetBitContext* %87), !dbg !11299
  %conv100 = trunc i32 %call99 to i8, !dbg !11299
  %88 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11300
  %bs_num_env101 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %88, i32 0, i32 2, !dbg !11301
  %89 = load i32, i32* %bs_num_env101, align 8, !dbg !11301
  %90 = load i32, i32* %i, align 4, !dbg !11302
  %sub102 = sub nsw i32 %89, %90, !dbg !11303
  %idxprom103 = sext i32 %sub102 to i64, !dbg !11304
  %91 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11304
  %bs_freq_res104 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %91, i32 0, i32 3, !dbg !11305
  %arrayidx105 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res104, i64 0, i64 %idxprom103, !dbg !11304
  store i8 %conv100, i8* %arrayidx105, align 1, !dbg !11306
  br label %for.inc106, !dbg !11304

for.inc106:                                       ; preds = %for.body98
  %92 = load i32, i32* %i, align 4, !dbg !11307
  %inc107 = add nsw i32 %92, 1, !dbg !11307
  store i32 %inc107, i32* %i, align 4, !dbg !11307
  br label %for.cond94, !dbg !11309, !llvm.loop !11310

for.end108:                                       ; preds = %for.cond94
  br label %sw.epilog, !dbg !11312

sw.bb109:                                         ; preds = %entry
  %93 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11313
  %call110 = call i32 @get_bits(%struct.GetBitContext* %93, i32 2), !dbg !11314
  %conv111 = trunc i32 %call110 to i8, !dbg !11314
  %94 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11315
  %t_env112 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %94, i32 0, i32 26, !dbg !11316
  %arrayidx113 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env112, i64 0, i64 0, !dbg !11315
  store i8 %conv111, i8* %arrayidx113, align 8, !dbg !11317
  %95 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11318
  %call114 = call i32 @get_bits(%struct.GetBitContext* %95, i32 2), !dbg !11319
  store i32 %call114, i32* %num_rel_lead, align 4, !dbg !11320
  %96 = load i32, i32* %num_rel_lead, align 4, !dbg !11321
  %add115 = add nsw i32 %96, 1, !dbg !11322
  %97 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11323
  %bs_num_env116 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %97, i32 0, i32 2, !dbg !11324
  store i32 %add115, i32* %bs_num_env116, align 8, !dbg !11325
  %98 = load i32, i32* %abs_bord_trail, align 4, !dbg !11326
  %conv117 = trunc i32 %98 to i8, !dbg !11326
  %99 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11327
  %bs_num_env118 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %99, i32 0, i32 2, !dbg !11328
  %100 = load i32, i32* %bs_num_env118, align 8, !dbg !11328
  %idxprom119 = sext i32 %100 to i64, !dbg !11329
  %101 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11329
  %t_env120 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %101, i32 0, i32 26, !dbg !11330
  %arrayidx121 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env120, i64 0, i64 %idxprom119, !dbg !11329
  store i8 %conv117, i8* %arrayidx121, align 1, !dbg !11331
  store i32 0, i32* %i, align 4, !dbg !11332
  br label %for.cond122, !dbg !11334

for.cond122:                                      ; preds = %for.inc139, %sw.bb109
  %102 = load i32, i32* %i, align 4, !dbg !11335
  %103 = load i32, i32* %num_rel_lead, align 4, !dbg !11338
  %cmp123 = icmp slt i32 %102, %103, !dbg !11339
  br i1 %cmp123, label %for.body125, label %for.end141, !dbg !11340

for.body125:                                      ; preds = %for.cond122
  %104 = load i32, i32* %i, align 4, !dbg !11341
  %idxprom126 = sext i32 %104 to i64, !dbg !11342
  %105 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11342
  %t_env127 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %105, i32 0, i32 26, !dbg !11343
  %arrayidx128 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env127, i64 0, i64 %idxprom126, !dbg !11342
  %106 = load i8, i8* %arrayidx128, align 1, !dbg !11342
  %conv129 = zext i8 %106 to i32, !dbg !11342
  %107 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11344
  %call130 = call i32 @get_bits(%struct.GetBitContext* %107, i32 2), !dbg !11345
  %mul131 = mul i32 2, %call130, !dbg !11346
  %add132 = add i32 %conv129, %mul131, !dbg !11347
  %add133 = add i32 %add132, 2, !dbg !11348
  %conv134 = trunc i32 %add133 to i8, !dbg !11342
  %108 = load i32, i32* %i, align 4, !dbg !11349
  %add135 = add nsw i32 %108, 1, !dbg !11350
  %idxprom136 = sext i32 %add135 to i64, !dbg !11351
  %109 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11351
  %t_env137 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %109, i32 0, i32 26, !dbg !11352
  %arrayidx138 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env137, i64 0, i64 %idxprom136, !dbg !11351
  store i8 %conv134, i8* %arrayidx138, align 1, !dbg !11353
  br label %for.inc139, !dbg !11351

for.inc139:                                       ; preds = %for.body125
  %110 = load i32, i32* %i, align 4, !dbg !11354
  %inc140 = add nsw i32 %110, 1, !dbg !11354
  store i32 %inc140, i32* %i, align 4, !dbg !11354
  br label %for.cond122, !dbg !11356, !llvm.loop !11357

for.end141:                                       ; preds = %for.cond122
  %111 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11359
  %112 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11360
  %bs_num_env142 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %112, i32 0, i32 2, !dbg !11361
  %113 = load i32, i32* %bs_num_env142, align 8, !dbg !11361
  %idxprom143 = sext i32 %113 to i64, !dbg !11362
  %arrayidx144 = getelementptr inbounds [6 x i8], [6 x i8]* @ceil_log2, i64 0, i64 %idxprom143, !dbg !11362
  %114 = load i8, i8* %arrayidx144, align 1, !dbg !11362
  %conv145 = sext i8 %114 to i32, !dbg !11362
  %call146 = call i32 @get_bits(%struct.GetBitContext* %111, i32 %conv145), !dbg !11363
  store i32 %call146, i32* %bs_pointer, align 4, !dbg !11364
  %115 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11365
  %116 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11366
  %bs_freq_res147 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %116, i32 0, i32 3, !dbg !11367
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res147, i32 0, i32 0, !dbg !11366
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !11368
  %117 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11369
  %bs_num_env148 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %117, i32 0, i32 2, !dbg !11370
  %118 = load i32, i32* %bs_num_env148, align 8, !dbg !11370
  store %struct.GetBitContext* %115, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !11371
  store i8* %add.ptr, i8** %vec.addr.i, align 8, !dbg !11371
  store i32 %118, i32* %elements.addr.i, align 4, !dbg !11371
  store i32 0, i32* %i.i, align 4, !dbg !11372
  br label %for.cond.i, !dbg !11373

for.cond.i:                                       ; preds = %for.body.i, %for.end141
  %119 = load i32, i32* %i.i, align 4, !dbg !11374
  %120 = load i32, i32* %elements.addr.i, align 4, !dbg !11375
  %cmp.i = icmp slt i32 %119, %120, !dbg !11376
  br i1 %cmp.i, label %for.body.i, label %get_bits1_vector.exit, !dbg !11377

for.body.i:                                       ; preds = %for.cond.i
  %121 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !11378
  %call.i = call i32 @get_bits1(%struct.GetBitContext* %121) #12, !dbg !11379
  %conv.i = trunc i32 %call.i to i8, !dbg !11379
  %122 = load i32, i32* %i.i, align 4, !dbg !11380
  %idxprom.i = sext i32 %122 to i64, !dbg !11381
  %123 = load i8*, i8** %vec.addr.i, align 8, !dbg !11381
  %arrayidx.i = getelementptr inbounds i8, i8* %123, i64 %idxprom.i, !dbg !11381
  store i8 %conv.i, i8* %arrayidx.i, align 1, !dbg !11382
  %124 = load i32, i32* %i.i, align 4, !dbg !11383
  %inc.i = add nsw i32 %124, 1, !dbg !11383
  store i32 %inc.i, i32* %i.i, align 4, !dbg !11383
  br label %for.cond.i, !dbg !11384, !llvm.loop !10720

get_bits1_vector.exit:                            ; preds = %for.cond.i
  br label %sw.epilog, !dbg !11385

sw.bb149:                                         ; preds = %entry
  %125 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11386
  %call150 = call i32 @get_bits(%struct.GetBitContext* %125, i32 2), !dbg !11387
  %conv151 = trunc i32 %call150 to i8, !dbg !11387
  %126 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11388
  %t_env152 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %126, i32 0, i32 26, !dbg !11389
  %arrayidx153 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env152, i64 0, i64 0, !dbg !11388
  store i8 %conv151, i8* %arrayidx153, align 8, !dbg !11390
  %127 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11391
  %call154 = call i32 @get_bits(%struct.GetBitContext* %127, i32 2), !dbg !11392
  %128 = load i32, i32* %abs_bord_trail, align 4, !dbg !11393
  %add155 = add i32 %128, %call154, !dbg !11393
  store i32 %add155, i32* %abs_bord_trail, align 4, !dbg !11393
  %129 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11394
  %call156 = call i32 @get_bits(%struct.GetBitContext* %129, i32 2), !dbg !11395
  store i32 %call156, i32* %num_rel_lead, align 4, !dbg !11396
  %130 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11397
  %call157 = call i32 @get_bits(%struct.GetBitContext* %130, i32 2), !dbg !11398
  store i32 %call157, i32* %num_rel_trail, align 4, !dbg !11399
  %131 = load i32, i32* %num_rel_lead, align 4, !dbg !11400
  %132 = load i32, i32* %num_rel_trail, align 4, !dbg !11401
  %add158 = add nsw i32 %131, %132, !dbg !11402
  %add159 = add nsw i32 %add158, 1, !dbg !11403
  store i32 %add159, i32* %bs_num_env1, align 4, !dbg !11404
  %133 = load i32, i32* %bs_num_env1, align 4, !dbg !11405
  %cmp160 = icmp sgt i32 %133, 5, !dbg !11407
  br i1 %cmp160, label %if.then162, label %if.end164, !dbg !11408

if.then162:                                       ; preds = %sw.bb149
  %134 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11409
  %avctx163 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %134, i32 0, i32 1, !dbg !11411
  %135 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx163, align 8, !dbg !11411
  %136 = bitcast %struct.AVCodecContext* %135 to i8*, !dbg !11409
  %137 = load i32, i32* %bs_num_env1, align 4, !dbg !11412
  call void (i8*, i32, i8*, ...) @av_log(i8* %136, i32 16, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.33, i32 0, i32 0), i32 %137), !dbg !11413
  store i32 -1, i32* %retval, align 4, !dbg !11414
  br label %return, !dbg !11414

if.end164:                                        ; preds = %sw.bb149
  %138 = load i32, i32* %bs_num_env1, align 4, !dbg !11415
  %139 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11416
  %bs_num_env165 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %139, i32 0, i32 2, !dbg !11417
  store i32 %138, i32* %bs_num_env165, align 8, !dbg !11418
  %140 = load i32, i32* %abs_bord_trail, align 4, !dbg !11419
  %conv166 = trunc i32 %140 to i8, !dbg !11419
  %141 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11420
  %bs_num_env167 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %141, i32 0, i32 2, !dbg !11421
  %142 = load i32, i32* %bs_num_env167, align 8, !dbg !11421
  %idxprom168 = sext i32 %142 to i64, !dbg !11422
  %143 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11422
  %t_env169 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %143, i32 0, i32 26, !dbg !11423
  %arrayidx170 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env169, i64 0, i64 %idxprom168, !dbg !11422
  store i8 %conv166, i8* %arrayidx170, align 1, !dbg !11424
  store i32 0, i32* %i, align 4, !dbg !11425
  br label %for.cond171, !dbg !11427

for.cond171:                                      ; preds = %for.inc188, %if.end164
  %144 = load i32, i32* %i, align 4, !dbg !11428
  %145 = load i32, i32* %num_rel_lead, align 4, !dbg !11431
  %cmp172 = icmp slt i32 %144, %145, !dbg !11432
  br i1 %cmp172, label %for.body174, label %for.end190, !dbg !11433

for.body174:                                      ; preds = %for.cond171
  %146 = load i32, i32* %i, align 4, !dbg !11434
  %idxprom175 = sext i32 %146 to i64, !dbg !11435
  %147 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11435
  %t_env176 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %147, i32 0, i32 26, !dbg !11436
  %arrayidx177 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env176, i64 0, i64 %idxprom175, !dbg !11435
  %148 = load i8, i8* %arrayidx177, align 1, !dbg !11435
  %conv178 = zext i8 %148 to i32, !dbg !11435
  %149 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11437
  %call179 = call i32 @get_bits(%struct.GetBitContext* %149, i32 2), !dbg !11438
  %mul180 = mul i32 2, %call179, !dbg !11439
  %add181 = add i32 %conv178, %mul180, !dbg !11440
  %add182 = add i32 %add181, 2, !dbg !11441
  %conv183 = trunc i32 %add182 to i8, !dbg !11435
  %150 = load i32, i32* %i, align 4, !dbg !11442
  %add184 = add nsw i32 %150, 1, !dbg !11443
  %idxprom185 = sext i32 %add184 to i64, !dbg !11444
  %151 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11444
  %t_env186 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %151, i32 0, i32 26, !dbg !11445
  %arrayidx187 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env186, i64 0, i64 %idxprom185, !dbg !11444
  store i8 %conv183, i8* %arrayidx187, align 1, !dbg !11446
  br label %for.inc188, !dbg !11444

for.inc188:                                       ; preds = %for.body174
  %152 = load i32, i32* %i, align 4, !dbg !11447
  %inc189 = add nsw i32 %152, 1, !dbg !11447
  store i32 %inc189, i32* %i, align 4, !dbg !11447
  br label %for.cond171, !dbg !11449, !llvm.loop !11450

for.end190:                                       ; preds = %for.cond171
  store i32 0, i32* %i, align 4, !dbg !11452
  br label %for.cond191, !dbg !11454

for.cond191:                                      ; preds = %for.inc212, %for.end190
  %153 = load i32, i32* %i, align 4, !dbg !11455
  %154 = load i32, i32* %num_rel_trail, align 4, !dbg !11458
  %cmp192 = icmp slt i32 %153, %154, !dbg !11459
  br i1 %cmp192, label %for.body194, label %for.end214, !dbg !11460

for.body194:                                      ; preds = %for.cond191
  %155 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11461
  %bs_num_env195 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %155, i32 0, i32 2, !dbg !11462
  %156 = load i32, i32* %bs_num_env195, align 8, !dbg !11462
  %157 = load i32, i32* %i, align 4, !dbg !11463
  %sub196 = sub nsw i32 %156, %157, !dbg !11464
  %idxprom197 = sext i32 %sub196 to i64, !dbg !11465
  %158 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11465
  %t_env198 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %158, i32 0, i32 26, !dbg !11466
  %arrayidx199 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env198, i64 0, i64 %idxprom197, !dbg !11465
  %159 = load i8, i8* %arrayidx199, align 1, !dbg !11465
  %conv200 = zext i8 %159 to i32, !dbg !11465
  %160 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11467
  %call201 = call i32 @get_bits(%struct.GetBitContext* %160, i32 2), !dbg !11468
  %mul202 = mul i32 2, %call201, !dbg !11469
  %sub203 = sub i32 %conv200, %mul202, !dbg !11470
  %sub204 = sub i32 %sub203, 2, !dbg !11471
  %conv205 = trunc i32 %sub204 to i8, !dbg !11465
  %161 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11472
  %bs_num_env206 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %161, i32 0, i32 2, !dbg !11473
  %162 = load i32, i32* %bs_num_env206, align 8, !dbg !11473
  %sub207 = sub nsw i32 %162, 1, !dbg !11474
  %163 = load i32, i32* %i, align 4, !dbg !11475
  %sub208 = sub nsw i32 %sub207, %163, !dbg !11476
  %idxprom209 = sext i32 %sub208 to i64, !dbg !11477
  %164 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11477
  %t_env210 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %164, i32 0, i32 26, !dbg !11478
  %arrayidx211 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env210, i64 0, i64 %idxprom209, !dbg !11477
  store i8 %conv205, i8* %arrayidx211, align 1, !dbg !11479
  br label %for.inc212, !dbg !11477

for.inc212:                                       ; preds = %for.body194
  %165 = load i32, i32* %i, align 4, !dbg !11480
  %inc213 = add nsw i32 %165, 1, !dbg !11480
  store i32 %inc213, i32* %i, align 4, !dbg !11480
  br label %for.cond191, !dbg !11482, !llvm.loop !11483

for.end214:                                       ; preds = %for.cond191
  %166 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11485
  %167 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11486
  %bs_num_env215 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %167, i32 0, i32 2, !dbg !11487
  %168 = load i32, i32* %bs_num_env215, align 8, !dbg !11487
  %idxprom216 = sext i32 %168 to i64, !dbg !11488
  %arrayidx217 = getelementptr inbounds [6 x i8], [6 x i8]* @ceil_log2, i64 0, i64 %idxprom216, !dbg !11488
  %169 = load i8, i8* %arrayidx217, align 1, !dbg !11488
  %conv218 = sext i8 %169 to i32, !dbg !11488
  %call219 = call i32 @get_bits(%struct.GetBitContext* %166, i32 %conv218), !dbg !11489
  store i32 %call219, i32* %bs_pointer, align 4, !dbg !11490
  %170 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11491
  %171 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11492
  %bs_freq_res220 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %171, i32 0, i32 3, !dbg !11493
  %arraydecay221 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res220, i32 0, i32 0, !dbg !11492
  %add.ptr222 = getelementptr inbounds i8, i8* %arraydecay221, i64 1, !dbg !11494
  %172 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11495
  %bs_num_env223 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %172, i32 0, i32 2, !dbg !11496
  %173 = load i32, i32* %bs_num_env223, align 8, !dbg !11496
  store %struct.GetBitContext* %170, %struct.GetBitContext** %gb.addr.i343, align 8, !dbg !11497
  store i8* %add.ptr222, i8** %vec.addr.i344, align 8, !dbg !11497
  store i32 %173, i32* %elements.addr.i345, align 4, !dbg !11497
  store i32 0, i32* %i.i346, align 4, !dbg !11498
  br label %for.cond.i348, !dbg !11499

for.cond.i348:                                    ; preds = %for.body.i353, %for.end214
  %174 = load i32, i32* %i.i346, align 4, !dbg !11500
  %175 = load i32, i32* %elements.addr.i345, align 4, !dbg !11501
  %cmp.i347 = icmp slt i32 %174, %175, !dbg !11502
  br i1 %cmp.i347, label %for.body.i353, label %get_bits1_vector.exit355, !dbg !11503

for.body.i353:                                    ; preds = %for.cond.i348
  %176 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i343, align 8, !dbg !11504
  %call.i349 = call i32 @get_bits1(%struct.GetBitContext* %176) #12, !dbg !11505
  %conv.i350 = trunc i32 %call.i349 to i8, !dbg !11505
  %177 = load i32, i32* %i.i346, align 4, !dbg !11506
  %idxprom.i351 = sext i32 %177 to i64, !dbg !11507
  %178 = load i8*, i8** %vec.addr.i344, align 8, !dbg !11507
  %arrayidx.i352 = getelementptr inbounds i8, i8* %178, i64 %idxprom.i351, !dbg !11507
  store i8 %conv.i350, i8* %arrayidx.i352, align 1, !dbg !11508
  %179 = load i32, i32* %i.i346, align 4, !dbg !11509
  %inc.i354 = add nsw i32 %179, 1, !dbg !11509
  store i32 %inc.i354, i32* %i.i346, align 4, !dbg !11509
  br label %for.cond.i348, !dbg !11510, !llvm.loop !10720

get_bits1_vector.exit355:                         ; preds = %for.cond.i348
  br label %sw.epilog, !dbg !11511

sw.epilog:                                        ; preds = %entry, %get_bits1_vector.exit355, %get_bits1_vector.exit, %for.end108, %for.end52
  %180 = load i32, i32* %bs_frame_class, align 4, !dbg !11512
  %181 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11513
  %bs_frame_class224 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %181, i32 0, i32 0, !dbg !11514
  store i32 %180, i32* %bs_frame_class224, align 32, !dbg !11515
  br label %do.body, !dbg !11516, !llvm.loop !11517

do.body:                                          ; preds = %sw.epilog
  %182 = load i32, i32* %bs_pointer, align 4, !dbg !11518
  %cmp225 = icmp sge i32 %182, 0, !dbg !11522
  br i1 %cmp225, label %if.end228, label %if.then227, !dbg !11523

if.then227:                                       ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i32 731), !dbg !11524
  call void @abort() #11, !dbg !11527
  unreachable, !dbg !11529

if.end228:                                        ; preds = %do.body
  br label %do.end, !dbg !11530

do.end:                                           ; preds = %if.end228
  %183 = load i32, i32* %bs_pointer, align 4, !dbg !11532
  %184 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11534
  %bs_num_env229 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %184, i32 0, i32 2, !dbg !11535
  %185 = load i32, i32* %bs_num_env229, align 8, !dbg !11535
  %add230 = add nsw i32 %185, 1, !dbg !11536
  %cmp231 = icmp sgt i32 %183, %add230, !dbg !11537
  br i1 %cmp231, label %if.then233, label %if.end235, !dbg !11538

if.then233:                                       ; preds = %do.end
  %186 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11539
  %avctx234 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %186, i32 0, i32 1, !dbg !11541
  %187 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx234, align 8, !dbg !11541
  %188 = bitcast %struct.AVCodecContext* %187 to i8*, !dbg !11539
  %189 = load i32, i32* %bs_pointer, align 4, !dbg !11542
  call void (i8*, i32, i8*, ...) @av_log(i8* %188, i32 16, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.35, i32 0, i32 0), i32 %189), !dbg !11543
  store i32 -1, i32* %retval, align 4, !dbg !11544
  br label %return, !dbg !11544

if.end235:                                        ; preds = %do.end
  store i32 1, i32* %i, align 4, !dbg !11545
  br label %for.cond236, !dbg !11547

for.cond236:                                      ; preds = %for.inc255, %if.end235
  %190 = load i32, i32* %i, align 4, !dbg !11548
  %191 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11551
  %bs_num_env237 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %191, i32 0, i32 2, !dbg !11552
  %192 = load i32, i32* %bs_num_env237, align 8, !dbg !11552
  %cmp238 = icmp sle i32 %190, %192, !dbg !11553
  br i1 %cmp238, label %for.body240, label %for.end257, !dbg !11554

for.body240:                                      ; preds = %for.cond236
  %193 = load i32, i32* %i, align 4, !dbg !11555
  %sub241 = sub nsw i32 %193, 1, !dbg !11558
  %idxprom242 = sext i32 %sub241 to i64, !dbg !11559
  %194 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11559
  %t_env243 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %194, i32 0, i32 26, !dbg !11560
  %arrayidx244 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env243, i64 0, i64 %idxprom242, !dbg !11559
  %195 = load i8, i8* %arrayidx244, align 1, !dbg !11559
  %conv245 = zext i8 %195 to i32, !dbg !11559
  %196 = load i32, i32* %i, align 4, !dbg !11561
  %idxprom246 = sext i32 %196 to i64, !dbg !11562
  %197 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11562
  %t_env247 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %197, i32 0, i32 26, !dbg !11563
  %arrayidx248 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env247, i64 0, i64 %idxprom246, !dbg !11562
  %198 = load i8, i8* %arrayidx248, align 1, !dbg !11562
  %conv249 = zext i8 %198 to i32, !dbg !11562
  %cmp250 = icmp sge i32 %conv245, %conv249, !dbg !11564
  br i1 %cmp250, label %if.then252, label %if.end254, !dbg !11565

if.then252:                                       ; preds = %for.body240
  %199 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11566
  %avctx253 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %199, i32 0, i32 1, !dbg !11568
  %200 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx253, align 8, !dbg !11568
  %201 = bitcast %struct.AVCodecContext* %200 to i8*, !dbg !11566
  call void (i8*, i32, i8*, ...) @av_log(i8* %201, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.36, i32 0, i32 0)), !dbg !11569
  store i32 -1, i32* %retval, align 4, !dbg !11570
  br label %return, !dbg !11570

if.end254:                                        ; preds = %for.body240
  br label %for.inc255, !dbg !11571

for.inc255:                                       ; preds = %if.end254
  %202 = load i32, i32* %i, align 4, !dbg !11572
  %inc256 = add nsw i32 %202, 1, !dbg !11572
  store i32 %inc256, i32* %i, align 4, !dbg !11572
  br label %for.cond236, !dbg !11574, !llvm.loop !11575

for.end257:                                       ; preds = %for.cond236
  %203 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11577
  %bs_num_env258 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %203, i32 0, i32 2, !dbg !11578
  %204 = load i32, i32* %bs_num_env258, align 8, !dbg !11578
  %cmp259 = icmp sgt i32 %204, 1, !dbg !11579
  %conv260 = zext i1 %cmp259 to i32, !dbg !11579
  %add261 = add nsw i32 %conv260, 1, !dbg !11580
  %205 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11581
  %bs_num_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %205, i32 0, i32 4, !dbg !11582
  store i32 %add261, i32* %bs_num_noise, align 4, !dbg !11583
  %206 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11584
  %t_env262 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %206, i32 0, i32 26, !dbg !11585
  %arrayidx263 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env262, i64 0, i64 0, !dbg !11584
  %207 = load i8, i8* %arrayidx263, align 8, !dbg !11584
  %208 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11586
  %t_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %208, i32 0, i32 28, !dbg !11587
  %arrayidx264 = getelementptr inbounds [3 x i8], [3 x i8]* %t_q, i64 0, i64 0, !dbg !11586
  store i8 %207, i8* %arrayidx264, align 1, !dbg !11588
  %209 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11589
  %bs_num_env265 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %209, i32 0, i32 2, !dbg !11590
  %210 = load i32, i32* %bs_num_env265, align 8, !dbg !11590
  %idxprom266 = sext i32 %210 to i64, !dbg !11591
  %211 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11591
  %t_env267 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %211, i32 0, i32 26, !dbg !11592
  %arrayidx268 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env267, i64 0, i64 %idxprom266, !dbg !11591
  %212 = load i8, i8* %arrayidx268, align 1, !dbg !11591
  %213 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11593
  %bs_num_noise269 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %213, i32 0, i32 4, !dbg !11594
  %214 = load i32, i32* %bs_num_noise269, align 4, !dbg !11594
  %idxprom270 = sext i32 %214 to i64, !dbg !11595
  %215 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11595
  %t_q271 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %215, i32 0, i32 28, !dbg !11596
  %arrayidx272 = getelementptr inbounds [3 x i8], [3 x i8]* %t_q271, i64 0, i64 %idxprom270, !dbg !11595
  store i8 %212, i8* %arrayidx272, align 1, !dbg !11597
  %216 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11598
  %bs_num_noise273 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %216, i32 0, i32 4, !dbg !11600
  %217 = load i32, i32* %bs_num_noise273, align 4, !dbg !11600
  %cmp274 = icmp sgt i32 %217, 1, !dbg !11601
  br i1 %cmp274, label %if.then276, label %if.end311, !dbg !11602

if.then276:                                       ; preds = %for.end257
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !11603, metadata !2734), !dbg !11605
  %218 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11606
  %bs_frame_class277 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %218, i32 0, i32 0, !dbg !11608
  %219 = load i32, i32* %bs_frame_class277, align 32, !dbg !11608
  %cmp278 = icmp eq i32 %219, 0, !dbg !11609
  br i1 %cmp278, label %if.then280, label %if.else, !dbg !11610

if.then280:                                       ; preds = %if.then276
  %220 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11611
  %bs_num_env281 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %220, i32 0, i32 2, !dbg !11613
  %221 = load i32, i32* %bs_num_env281, align 8, !dbg !11613
  %shr282 = ashr i32 %221, 1, !dbg !11614
  store i32 %shr282, i32* %idx, align 4, !dbg !11615
  br label %if.end305, !dbg !11616

if.else:                                          ; preds = %if.then276
  %222 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11617
  %bs_frame_class283 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %222, i32 0, i32 0, !dbg !11620
  %223 = load i32, i32* %bs_frame_class283, align 32, !dbg !11620
  %and = and i32 %223, 1, !dbg !11621
  %tobool = icmp ne i32 %and, 0, !dbg !11621
  br i1 %tobool, label %if.then284, label %if.else291, !dbg !11617

if.then284:                                       ; preds = %if.else
  %224 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11622
  %bs_num_env285 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %224, i32 0, i32 2, !dbg !11624
  %225 = load i32, i32* %bs_num_env285, align 8, !dbg !11624
  %226 = load i32, i32* %bs_pointer, align 4, !dbg !11625
  %sub286 = sub nsw i32 %226, 1, !dbg !11626
  %cmp287 = icmp sgt i32 %sub286, 1, !dbg !11627
  br i1 %cmp287, label %cond.true, label %cond.false, !dbg !11628

cond.true:                                        ; preds = %if.then284
  %227 = load i32, i32* %bs_pointer, align 4, !dbg !11629
  %sub289 = sub nsw i32 %227, 1, !dbg !11631
  br label %cond.end, !dbg !11632

cond.false:                                       ; preds = %if.then284
  br label %cond.end, !dbg !11633

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub289, %cond.true ], [ 1, %cond.false ], !dbg !11635
  %sub290 = sub nsw i32 %225, %cond, !dbg !11637
  store i32 %sub290, i32* %idx, align 4, !dbg !11638
  br label %if.end304, !dbg !11639

if.else291:                                       ; preds = %if.else
  %228 = load i32, i32* %bs_pointer, align 4, !dbg !11640
  %tobool292 = icmp ne i32 %228, 0, !dbg !11640
  br i1 %tobool292, label %if.else294, label %if.then293, !dbg !11643

if.then293:                                       ; preds = %if.else291
  store i32 1, i32* %idx, align 4, !dbg !11644
  br label %if.end303, !dbg !11645

if.else294:                                       ; preds = %if.else291
  %229 = load i32, i32* %bs_pointer, align 4, !dbg !11646
  %cmp295 = icmp eq i32 %229, 1, !dbg !11648
  br i1 %cmp295, label %if.then297, label %if.else300, !dbg !11649

if.then297:                                       ; preds = %if.else294
  %230 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11650
  %bs_num_env298 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %230, i32 0, i32 2, !dbg !11651
  %231 = load i32, i32* %bs_num_env298, align 8, !dbg !11651
  %sub299 = sub nsw i32 %231, 1, !dbg !11652
  store i32 %sub299, i32* %idx, align 4, !dbg !11653
  br label %if.end302, !dbg !11654

if.else300:                                       ; preds = %if.else294
  %232 = load i32, i32* %bs_pointer, align 4, !dbg !11655
  %sub301 = sub nsw i32 %232, 1, !dbg !11656
  store i32 %sub301, i32* %idx, align 4, !dbg !11657
  br label %if.end302

if.end302:                                        ; preds = %if.else300, %if.then297
  br label %if.end303

if.end303:                                        ; preds = %if.end302, %if.then293
  br label %if.end304

if.end304:                                        ; preds = %if.end303, %cond.end
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %if.then280
  %233 = load i32, i32* %idx, align 4, !dbg !11658
  %idxprom306 = sext i32 %233 to i64, !dbg !11659
  %234 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11659
  %t_env307 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %234, i32 0, i32 26, !dbg !11660
  %arrayidx308 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env307, i64 0, i64 %idxprom306, !dbg !11659
  %235 = load i8, i8* %arrayidx308, align 1, !dbg !11659
  %236 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11661
  %t_q309 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %236, i32 0, i32 28, !dbg !11662
  %arrayidx310 = getelementptr inbounds [3 x i8], [3 x i8]* %t_q309, i64 0, i64 1, !dbg !11661
  store i8 %235, i8* %arrayidx310, align 1, !dbg !11663
  br label %if.end311, !dbg !11664

if.end311:                                        ; preds = %if.end305, %for.end257
  %237 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11665
  %e_a = getelementptr inbounds %struct.SBRData, %struct.SBRData* %237, i32 0, i32 13, !dbg !11666
  %arrayidx312 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a, i64 0, i64 1, !dbg !11665
  %238 = load i32, i32* %arrayidx312, align 4, !dbg !11665
  %239 = load i32, i32* %bs_num_env_old, align 4, !dbg !11667
  %cmp313 = icmp ne i32 %238, %239, !dbg !11668
  %conv314 = zext i1 %cmp313 to i32, !dbg !11668
  %sub315 = sub nsw i32 0, %conv314, !dbg !11669
  %240 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11670
  %e_a316 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %240, i32 0, i32 13, !dbg !11671
  %arrayidx317 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a316, i64 0, i64 0, !dbg !11670
  store i32 %sub315, i32* %arrayidx317, align 4, !dbg !11672
  %241 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11673
  %e_a318 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %241, i32 0, i32 13, !dbg !11674
  %arrayidx319 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a318, i64 0, i64 1, !dbg !11673
  store i32 -1, i32* %arrayidx319, align 4, !dbg !11675
  %242 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11676
  %bs_frame_class320 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %242, i32 0, i32 0, !dbg !11678
  %243 = load i32, i32* %bs_frame_class320, align 32, !dbg !11678
  %and321 = and i32 %243, 1, !dbg !11679
  %tobool322 = icmp ne i32 %and321, 0, !dbg !11679
  br i1 %tobool322, label %land.lhs.true, label %if.else330, !dbg !11680

land.lhs.true:                                    ; preds = %if.end311
  %244 = load i32, i32* %bs_pointer, align 4, !dbg !11681
  %tobool323 = icmp ne i32 %244, 0, !dbg !11681
  br i1 %tobool323, label %if.then324, label %if.else330, !dbg !11683

if.then324:                                       ; preds = %land.lhs.true
  %245 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11684
  %bs_num_env325 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %245, i32 0, i32 2, !dbg !11686
  %246 = load i32, i32* %bs_num_env325, align 8, !dbg !11686
  %add326 = add nsw i32 %246, 1, !dbg !11687
  %247 = load i32, i32* %bs_pointer, align 4, !dbg !11688
  %sub327 = sub nsw i32 %add326, %247, !dbg !11689
  %248 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11690
  %e_a328 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %248, i32 0, i32 13, !dbg !11691
  %arrayidx329 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a328, i64 0, i64 1, !dbg !11690
  store i32 %sub327, i32* %arrayidx329, align 4, !dbg !11692
  br label %if.end342, !dbg !11693

if.else330:                                       ; preds = %land.lhs.true, %if.end311
  %249 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11694
  %bs_frame_class331 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %249, i32 0, i32 0, !dbg !11697
  %250 = load i32, i32* %bs_frame_class331, align 32, !dbg !11697
  %cmp332 = icmp eq i32 %250, 2, !dbg !11698
  br i1 %cmp332, label %land.lhs.true334, label %if.end341, !dbg !11699

land.lhs.true334:                                 ; preds = %if.else330
  %251 = load i32, i32* %bs_pointer, align 4, !dbg !11700
  %cmp335 = icmp sgt i32 %251, 1, !dbg !11702
  br i1 %cmp335, label %if.then337, label %if.end341, !dbg !11703

if.then337:                                       ; preds = %land.lhs.true334
  %252 = load i32, i32* %bs_pointer, align 4, !dbg !11704
  %sub338 = sub nsw i32 %252, 1, !dbg !11705
  %253 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11706
  %e_a339 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %253, i32 0, i32 13, !dbg !11707
  %arrayidx340 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a339, i64 0, i64 1, !dbg !11706
  store i32 %sub338, i32* %arrayidx340, align 4, !dbg !11708
  br label %if.end341, !dbg !11706

if.end341:                                        ; preds = %if.then337, %land.lhs.true334, %if.else330
  br label %if.end342

if.end342:                                        ; preds = %if.end341, %if.then324
  store i32 0, i32* %retval, align 4, !dbg !11709
  br label %return, !dbg !11709

return:                                           ; preds = %if.end342, %if.then252, %if.then233, %if.then162, %if.then
  %254 = load i32, i32* %retval, align 4, !dbg !11710
  ret i32 %254, !dbg !11710
}

; Function Attrs: nounwind uwtable
define internal void @read_sbr_dtdf(%struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, %struct.SBRData* %ch_data) #3 !dbg !11711 {
entry:
  %gb.addr.i2 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i2, metadata !10618, metadata !2734), !dbg !11714
  %vec.addr.i3 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i3, metadata !10625, metadata !2734), !dbg !11716
  %elements.addr.i4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i4, metadata !10627, metadata !2734), !dbg !11717
  %i.i5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i5, metadata !10629, metadata !2734), !dbg !11718
  %gb.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i, metadata !10618, metadata !2734), !dbg !11719
  %vec.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i, metadata !10625, metadata !2734), !dbg !11721
  %elements.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i, metadata !10627, metadata !2734), !dbg !11722
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !10629, metadata !2734), !dbg !11723
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !11724, metadata !2734), !dbg !11725
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !11726, metadata !2734), !dbg !11727
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !11728, metadata !2734), !dbg !11729
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11730
  %1 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11731
  %bs_df_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %1, i32 0, i32 5, !dbg !11732
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %bs_df_env, i32 0, i32 0, !dbg !11731
  %2 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11733
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %2, i32 0, i32 2, !dbg !11734
  %3 = load i32, i32* %bs_num_env, align 8, !dbg !11734
  store %struct.GetBitContext* %0, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !11735
  store i8* %arraydecay, i8** %vec.addr.i, align 8, !dbg !11735
  store i32 %3, i32* %elements.addr.i, align 4, !dbg !11735
  store i32 0, i32* %i.i, align 4, !dbg !11736
  br label %for.cond.i, !dbg !11737

for.cond.i:                                       ; preds = %for.body.i, %entry
  %4 = load i32, i32* %i.i, align 4, !dbg !11738
  %5 = load i32, i32* %elements.addr.i, align 4, !dbg !11739
  %cmp.i = icmp slt i32 %4, %5, !dbg !11740
  br i1 %cmp.i, label %for.body.i, label %get_bits1_vector.exit, !dbg !11741

for.body.i:                                       ; preds = %for.cond.i
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !11742
  %call.i = call i32 @get_bits1(%struct.GetBitContext* %6) #12, !dbg !11743
  %conv.i = trunc i32 %call.i to i8, !dbg !11743
  %7 = load i32, i32* %i.i, align 4, !dbg !11744
  %idxprom.i = sext i32 %7 to i64, !dbg !11745
  %8 = load i8*, i8** %vec.addr.i, align 8, !dbg !11745
  %arrayidx.i = getelementptr inbounds i8, i8* %8, i64 %idxprom.i, !dbg !11745
  store i8 %conv.i, i8* %arrayidx.i, align 1, !dbg !11746
  %9 = load i32, i32* %i.i, align 4, !dbg !11747
  %inc.i = add nsw i32 %9, 1, !dbg !11747
  store i32 %inc.i, i32* %i.i, align 4, !dbg !11747
  br label %for.cond.i, !dbg !11748, !llvm.loop !10720

get_bits1_vector.exit:                            ; preds = %for.cond.i
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11749
  %11 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11750
  %bs_df_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %11, i32 0, i32 6, !dbg !11751
  %arraydecay1 = getelementptr inbounds [2 x i8], [2 x i8]* %bs_df_noise, i32 0, i32 0, !dbg !11750
  %12 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11752
  %bs_num_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %12, i32 0, i32 4, !dbg !11753
  %13 = load i32, i32* %bs_num_noise, align 4, !dbg !11753
  store %struct.GetBitContext* %10, %struct.GetBitContext** %gb.addr.i2, align 8, !dbg !11754
  store i8* %arraydecay1, i8** %vec.addr.i3, align 8, !dbg !11754
  store i32 %13, i32* %elements.addr.i4, align 4, !dbg !11754
  store i32 0, i32* %i.i5, align 4, !dbg !11755
  br label %for.cond.i7, !dbg !11756

for.cond.i7:                                      ; preds = %for.body.i12, %get_bits1_vector.exit
  %14 = load i32, i32* %i.i5, align 4, !dbg !11757
  %15 = load i32, i32* %elements.addr.i4, align 4, !dbg !11758
  %cmp.i6 = icmp slt i32 %14, %15, !dbg !11759
  br i1 %cmp.i6, label %for.body.i12, label %get_bits1_vector.exit14, !dbg !11760

for.body.i12:                                     ; preds = %for.cond.i7
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i2, align 8, !dbg !11761
  %call.i8 = call i32 @get_bits1(%struct.GetBitContext* %16) #12, !dbg !11762
  %conv.i9 = trunc i32 %call.i8 to i8, !dbg !11762
  %17 = load i32, i32* %i.i5, align 4, !dbg !11763
  %idxprom.i10 = sext i32 %17 to i64, !dbg !11764
  %18 = load i8*, i8** %vec.addr.i3, align 8, !dbg !11764
  %arrayidx.i11 = getelementptr inbounds i8, i8* %18, i64 %idxprom.i10, !dbg !11764
  store i8 %conv.i9, i8* %arrayidx.i11, align 1, !dbg !11765
  %19 = load i32, i32* %i.i5, align 4, !dbg !11766
  %inc.i13 = add nsw i32 %19, 1, !dbg !11766
  store i32 %inc.i13, i32* %i.i5, align 4, !dbg !11766
  br label %for.cond.i7, !dbg !11767, !llvm.loop !10720

get_bits1_vector.exit14:                          ; preds = %for.cond.i7
  ret void, !dbg !11768
}

; Function Attrs: nounwind uwtable
define internal void @read_sbr_invf(%struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, %struct.SBRData* %ch_data) #3 !dbg !11769 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %i = alloca i32, align 4
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !11770, metadata !2734), !dbg !11771
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !11772, metadata !2734), !dbg !11773
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !11774, metadata !2734), !dbg !11775
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11776, metadata !2734), !dbg !11777
  %0 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11778
  %bs_invf_mode = getelementptr inbounds %struct.SBRData, %struct.SBRData* %0, i32 0, i32 7, !dbg !11779
  %arrayidx = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode, i64 0, i64 1, !dbg !11778
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx, i32 0, i32 0, !dbg !11780
  %1 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11781
  %bs_invf_mode1 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %1, i32 0, i32 7, !dbg !11782
  %arrayidx2 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode1, i64 0, i64 0, !dbg !11781
  %arraydecay3 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx2, i32 0, i32 0, !dbg !11780
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay3, i64 5, i32 1, i1 false), !dbg !11780
  store i32 0, i32* %i, align 4, !dbg !11783
  br label %for.cond, !dbg !11785

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !11786
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !11789
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 20, !dbg !11790
  %4 = load i32, i32* %n_q, align 8, !dbg !11790
  %cmp = icmp slt i32 %2, %4, !dbg !11791
  br i1 %cmp, label %for.body, label %for.end, !dbg !11792

for.body:                                         ; preds = %for.cond
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11793
  %call = call i32 @get_bits(%struct.GetBitContext* %5, i32 2), !dbg !11794
  %conv = trunc i32 %call to i8, !dbg !11794
  %6 = load i32, i32* %i, align 4, !dbg !11795
  %idxprom = sext i32 %6 to i64, !dbg !11796
  %7 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11796
  %bs_invf_mode4 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %7, i32 0, i32 7, !dbg !11797
  %arrayidx5 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode4, i64 0, i64 0, !dbg !11796
  %arrayidx6 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx5, i64 0, i64 %idxprom, !dbg !11796
  store i8 %conv, i8* %arrayidx6, align 1, !dbg !11798
  br label %for.inc, !dbg !11796

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !11799
  %inc = add nsw i32 %8, 1, !dbg !11799
  store i32 %inc, i32* %i, align 4, !dbg !11799
  br label %for.cond, !dbg !11801, !llvm.loop !11802

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11804
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_envelope(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, %struct.SBRData* %ch_data, i32 %ch) #3 !dbg !11805 {
entry:
  %x.addr.i96.i556 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i556, metadata !6588, metadata !2734), !dbg !11808
  %x.addr.i81.i557 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i557, metadata !6588, metadata !2734), !dbg !11828
  %x.addr.i.i558 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i558, metadata !6588, metadata !2734), !dbg !11831
  %s.addr.i559 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i559, metadata !11833, metadata !2734), !dbg !11834
  %table.addr.i560 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i560, metadata !11835, metadata !2734), !dbg !11836
  %bits.addr.i561 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i561, metadata !11837, metadata !2734), !dbg !11838
  %max_depth.addr.i562 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i562, metadata !11839, metadata !2734), !dbg !11840
  %code.i563 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i563, metadata !11841, metadata !2734), !dbg !11842
  %re_index.i564 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i564, metadata !11843, metadata !2734), !dbg !11844
  %re_cache.i565 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i565, metadata !11845, metadata !2734), !dbg !11846
  %re_size_plus8.i566 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i566, metadata !11847, metadata !2734), !dbg !11848
  %n.i567 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i567, metadata !11849, metadata !2734), !dbg !11850
  %nb_bits.i568 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i568, metadata !11851, metadata !2734), !dbg !11852
  %index1.i569 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i569, metadata !11853, metadata !2734), !dbg !11854
  %x.addr.i96.i410 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i410, metadata !6588, metadata !2734), !dbg !11855
  %x.addr.i81.i411 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i411, metadata !6588, metadata !2734), !dbg !11865
  %x.addr.i.i412 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i412, metadata !6588, metadata !2734), !dbg !11867
  %s.addr.i413 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i413, metadata !11833, metadata !2734), !dbg !11869
  %table.addr.i414 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i414, metadata !11835, metadata !2734), !dbg !11870
  %bits.addr.i415 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i415, metadata !11837, metadata !2734), !dbg !11871
  %max_depth.addr.i416 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i416, metadata !11839, metadata !2734), !dbg !11872
  %code.i417 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i417, metadata !11841, metadata !2734), !dbg !11873
  %re_index.i418 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i418, metadata !11843, metadata !2734), !dbg !11874
  %re_cache.i419 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i419, metadata !11845, metadata !2734), !dbg !11875
  %re_size_plus8.i420 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i420, metadata !11847, metadata !2734), !dbg !11876
  %n.i421 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i421, metadata !11849, metadata !2734), !dbg !11877
  %nb_bits.i422 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i422, metadata !11851, metadata !2734), !dbg !11878
  %index1.i423 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i423, metadata !11853, metadata !2734), !dbg !11879
  %x.addr.i96.i264 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i264, metadata !6588, metadata !2734), !dbg !11880
  %x.addr.i81.i265 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i265, metadata !6588, metadata !2734), !dbg !11887
  %x.addr.i.i266 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i266, metadata !6588, metadata !2734), !dbg !11889
  %s.addr.i267 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i267, metadata !11833, metadata !2734), !dbg !11891
  %table.addr.i268 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i268, metadata !11835, metadata !2734), !dbg !11892
  %bits.addr.i269 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i269, metadata !11837, metadata !2734), !dbg !11893
  %max_depth.addr.i270 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i270, metadata !11839, metadata !2734), !dbg !11894
  %code.i271 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i271, metadata !11841, metadata !2734), !dbg !11895
  %re_index.i272 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i272, metadata !11843, metadata !2734), !dbg !11896
  %re_cache.i273 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i273, metadata !11845, metadata !2734), !dbg !11897
  %re_size_plus8.i274 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i274, metadata !11847, metadata !2734), !dbg !11898
  %n.i275 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i275, metadata !11849, metadata !2734), !dbg !11899
  %nb_bits.i276 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i276, metadata !11851, metadata !2734), !dbg !11900
  %index1.i277 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i277, metadata !11853, metadata !2734), !dbg !11901
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !6588, metadata !2734), !dbg !11902
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !6588, metadata !2734), !dbg !11909
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !6588, metadata !2734), !dbg !11911
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !11833, metadata !2734), !dbg !11913
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !11835, metadata !2734), !dbg !11914
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !11837, metadata !2734), !dbg !11915
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !11839, metadata !2734), !dbg !11916
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !11841, metadata !2734), !dbg !11917
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !11843, metadata !2734), !dbg !11918
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !11845, metadata !2734), !dbg !11919
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !11847, metadata !2734), !dbg !11920
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !11849, metadata !2734), !dbg !11921
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !11851, metadata !2734), !dbg !11922
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !11853, metadata !2734), !dbg !11923
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %ch.addr = alloca i32, align 4
  %bits = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %t_huff = alloca [2 x i16]*, align 8
  %f_huff = alloca [2 x i16]*, align 8
  %t_lav = alloca i32, align 4
  %f_lav = alloca i32, align 4
  %delta = alloca i32, align 4
  %odd = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !11924, metadata !2734), !dbg !11925
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !11926, metadata !2734), !dbg !11927
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !11928, metadata !2734), !dbg !11929
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !11930, metadata !2734), !dbg !11931
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !11932, metadata !2734), !dbg !11933
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !11934, metadata !2734), !dbg !11935
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11936, metadata !2734), !dbg !11937
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11938, metadata !2734), !dbg !11939
  call void @llvm.dbg.declare(metadata i32* %k, metadata !11940, metadata !2734), !dbg !11941
  call void @llvm.dbg.declare(metadata [2 x i16]** %t_huff, metadata !11942, metadata !2734), !dbg !11943
  call void @llvm.dbg.declare(metadata [2 x i16]** %f_huff, metadata !11944, metadata !2734), !dbg !11945
  call void @llvm.dbg.declare(metadata i32* %t_lav, metadata !11946, metadata !2734), !dbg !11947
  call void @llvm.dbg.declare(metadata i32* %f_lav, metadata !11948, metadata !2734), !dbg !11949
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !11950, metadata !2734), !dbg !11951
  %0 = load i32, i32* %ch.addr, align 4, !dbg !11952
  %cmp = icmp eq i32 %0, 1, !dbg !11953
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11954

land.rhs:                                         ; preds = %entry
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !11955
  %bs_coupling = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 11, !dbg !11957
  %2 = load i32, i32* %bs_coupling, align 16, !dbg !11957
  %cmp1 = icmp eq i32 %2, 1, !dbg !11958
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  %land.ext = zext i1 %3 to i32, !dbg !11959
  %add = add nsw i32 %land.ext, 1, !dbg !11961
  store i32 %add, i32* %delta, align 4, !dbg !11962
  call void @llvm.dbg.declare(metadata i32* %odd, metadata !11963, metadata !2734), !dbg !11964
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !11965
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 19, !dbg !11966
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 1, !dbg !11965
  %5 = load i32, i32* %arrayidx, align 4, !dbg !11965
  %and = and i32 %5, 1, !dbg !11967
  store i32 %and, i32* %odd, align 4, !dbg !11964
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !11968
  %bs_coupling2 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 11, !dbg !11970
  %7 = load i32, i32* %bs_coupling2, align 16, !dbg !11970
  %tobool = icmp ne i32 %7, 0, !dbg !11968
  br i1 %tobool, label %land.lhs.true, label %if.else9, !dbg !11971

land.lhs.true:                                    ; preds = %land.end
  %8 = load i32, i32* %ch.addr, align 4, !dbg !11972
  %tobool3 = icmp ne i32 %8, 0, !dbg !11972
  br i1 %tobool3, label %if.then, label %if.else9, !dbg !11974

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11975
  %bs_amp_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %9, i32 0, i32 9, !dbg !11978
  %10 = load i32, i32* %bs_amp_res, align 4, !dbg !11978
  %tobool4 = icmp ne i32 %10, 0, !dbg !11975
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !11979

if.then5:                                         ; preds = %if.then
  store i32 5, i32* %bits, align 4, !dbg !11980
  %11 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 6, i32 1), align 8, !dbg !11982
  store [2 x i16]* %11, [2 x i16]** %t_huff, align 8, !dbg !11983
  %12 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 6), align 1, !dbg !11984
  %conv = sext i8 %12 to i32, !dbg !11984
  store i32 %conv, i32* %t_lav, align 4, !dbg !11985
  %13 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 7, i32 1), align 8, !dbg !11986
  store [2 x i16]* %13, [2 x i16]** %f_huff, align 8, !dbg !11987
  %14 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 7), align 1, !dbg !11988
  %conv6 = sext i8 %14 to i32, !dbg !11988
  store i32 %conv6, i32* %f_lav, align 4, !dbg !11989
  br label %if.end, !dbg !11990

if.else:                                          ; preds = %if.then
  store i32 6, i32* %bits, align 4, !dbg !11991
  %15 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 2, i32 1), align 8, !dbg !11993
  store [2 x i16]* %15, [2 x i16]** %t_huff, align 8, !dbg !11994
  %16 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 2), align 1, !dbg !11995
  %conv7 = sext i8 %16 to i32, !dbg !11995
  store i32 %conv7, i32* %t_lav, align 4, !dbg !11996
  %17 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 3, i32 1), align 8, !dbg !11997
  store [2 x i16]* %17, [2 x i16]** %f_huff, align 8, !dbg !11998
  %18 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 3), align 1, !dbg !11999
  %conv8 = sext i8 %18 to i32, !dbg !11999
  store i32 %conv8, i32* %f_lav, align 4, !dbg !12000
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end19, !dbg !12001

if.else9:                                         ; preds = %land.lhs.true, %land.end
  %19 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12002
  %bs_amp_res10 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %19, i32 0, i32 9, !dbg !12005
  %20 = load i32, i32* %bs_amp_res10, align 4, !dbg !12005
  %tobool11 = icmp ne i32 %20, 0, !dbg !12002
  br i1 %tobool11, label %if.then12, label %if.else15, !dbg !12006

if.then12:                                        ; preds = %if.else9
  store i32 6, i32* %bits, align 4, !dbg !12007
  %21 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 4, i32 1), align 8, !dbg !12009
  store [2 x i16]* %21, [2 x i16]** %t_huff, align 8, !dbg !12010
  %22 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 4), align 1, !dbg !12011
  %conv13 = sext i8 %22 to i32, !dbg !12011
  store i32 %conv13, i32* %t_lav, align 4, !dbg !12012
  %23 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 5, i32 1), align 8, !dbg !12013
  store [2 x i16]* %23, [2 x i16]** %f_huff, align 8, !dbg !12014
  %24 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 5), align 1, !dbg !12015
  %conv14 = sext i8 %24 to i32, !dbg !12015
  store i32 %conv14, i32* %f_lav, align 4, !dbg !12016
  br label %if.end18, !dbg !12017

if.else15:                                        ; preds = %if.else9
  store i32 7, i32* %bits, align 4, !dbg !12018
  %25 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 0, i32 1), align 8, !dbg !12020
  store [2 x i16]* %25, [2 x i16]** %t_huff, align 8, !dbg !12021
  %26 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 0), align 1, !dbg !12022
  %conv16 = sext i8 %26 to i32, !dbg !12022
  store i32 %conv16, i32* %t_lav, align 4, !dbg !12023
  %27 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 1, i32 1), align 8, !dbg !12024
  store [2 x i16]* %27, [2 x i16]** %f_huff, align 8, !dbg !12025
  %28 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 1), align 1, !dbg !12026
  %conv17 = sext i8 %28 to i32, !dbg !12026
  store i32 %conv17, i32* %f_lav, align 4, !dbg !12027
  br label %if.end18

if.end18:                                         ; preds = %if.else15, %if.then12
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end
  store i32 0, i32* %i, align 4, !dbg !12028
  br label %for.cond, !dbg !12029

for.cond:                                         ; preds = %for.inc254, %if.end19
  %29 = load i32, i32* %i, align 4, !dbg !12030
  %30 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12032
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %30, i32 0, i32 2, !dbg !12033
  %31 = load i32, i32* %bs_num_env, align 8, !dbg !12033
  %cmp20 = icmp slt i32 %29, %31, !dbg !12034
  br i1 %cmp20, label %for.body, label %for.end256, !dbg !12035

for.body:                                         ; preds = %for.cond
  %32 = load i32, i32* %i, align 4, !dbg !12036
  %idxprom = sext i32 %32 to i64, !dbg !12037
  %33 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12037
  %bs_df_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %33, i32 0, i32 5, !dbg !12038
  %arrayidx22 = getelementptr inbounds [5 x i8], [5 x i8]* %bs_df_env, i64 0, i64 %idxprom, !dbg !12037
  %34 = load i8, i8* %arrayidx22, align 1, !dbg !12037
  %tobool23 = icmp ne i8 %34, 0, !dbg !12037
  br i1 %tobool23, label %if.then24, label %if.else192, !dbg !12039

if.then24:                                        ; preds = %for.body
  %35 = load i32, i32* %i, align 4, !dbg !12040
  %add25 = add nsw i32 %35, 1, !dbg !12041
  %idxprom26 = sext i32 %add25 to i64, !dbg !12042
  %36 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12042
  %bs_freq_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %36, i32 0, i32 3, !dbg !12043
  %arrayidx27 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res, i64 0, i64 %idxprom26, !dbg !12042
  %37 = load i8, i8* %arrayidx27, align 1, !dbg !12042
  %conv28 = zext i8 %37 to i32, !dbg !12042
  %38 = load i32, i32* %i, align 4, !dbg !12044
  %idxprom29 = sext i32 %38 to i64, !dbg !12045
  %39 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12045
  %bs_freq_res30 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %39, i32 0, i32 3, !dbg !12046
  %arrayidx31 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res30, i64 0, i64 %idxprom29, !dbg !12045
  %40 = load i8, i8* %arrayidx31, align 1, !dbg !12045
  %conv32 = zext i8 %40 to i32, !dbg !12045
  %cmp33 = icmp eq i32 %conv28, %conv32, !dbg !12047
  br i1 %cmp33, label %if.then35, label %if.else78, !dbg !12048

if.then35:                                        ; preds = %if.then24
  store i32 0, i32* %j, align 4, !dbg !12049
  br label %for.cond36, !dbg !12050

for.cond36:                                       ; preds = %for.inc, %if.then35
  %41 = load i32, i32* %j, align 4, !dbg !12051
  %42 = load i32, i32* %i, align 4, !dbg !12053
  %add37 = add nsw i32 %42, 1, !dbg !12054
  %idxprom38 = sext i32 %add37 to i64, !dbg !12055
  %43 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12055
  %bs_freq_res39 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %43, i32 0, i32 3, !dbg !12056
  %arrayidx40 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res39, i64 0, i64 %idxprom38, !dbg !12055
  %44 = load i8, i8* %arrayidx40, align 1, !dbg !12055
  %idxprom41 = zext i8 %44 to i64, !dbg !12057
  %45 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !12057
  %n42 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %45, i32 0, i32 19, !dbg !12058
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %n42, i64 0, i64 %idxprom41, !dbg !12057
  %46 = load i32, i32* %arrayidx43, align 4, !dbg !12057
  %cmp44 = icmp slt i32 %41, %46, !dbg !12059
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !12060

for.body46:                                       ; preds = %for.cond36
  %47 = load i32, i32* %j, align 4, !dbg !12061
  %idxprom47 = sext i32 %47 to i64, !dbg !12062
  %48 = load i32, i32* %i, align 4, !dbg !12063
  %idxprom48 = sext i32 %48 to i64, !dbg !12062
  %49 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12062
  %env_facs_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %49, i32 0, i32 22, !dbg !12064
  %arrayidx49 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q, i64 0, i64 %idxprom48, !dbg !12062
  %arrayidx50 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx49, i64 0, i64 %idxprom47, !dbg !12062
  %50 = load i8, i8* %arrayidx50, align 1, !dbg !12062
  %conv51 = zext i8 %50 to i32, !dbg !12062
  %51 = load i32, i32* %delta, align 4, !dbg !12065
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12066
  %53 = load [2 x i16]*, [2 x i16]** %t_huff, align 8, !dbg !12067
  store %struct.GetBitContext* %52, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12068
  store [2 x i16]* %53, [2 x i16]** %table.addr.i, align 8, !dbg !12068
  store i32 9, i32* %bits.addr.i, align 4, !dbg !12068
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !12068
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12069
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %54, i32 0, i32 2, !dbg !12070
  %55 = load i32, i32* %index.i, align 8, !dbg !12070
  store i32 %55, i32* %re_index.i, align 4, !dbg !11918
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12071
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %56, i32 0, i32 4, !dbg !12072
  %57 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !12072
  store i32 %57, i32* %re_size_plus8.i, align 4, !dbg !11920
  %58 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12073
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %58, i32 0, i32 0, !dbg !12074
  %59 = load i8*, i8** %buffer.i, align 8, !dbg !12074
  %60 = load i32, i32* %re_index.i, align 4, !dbg !12075
  %shr.i = lshr i32 %60, 3, !dbg !12076
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !12077
  %add.ptr.i = getelementptr inbounds i8, i8* %59, i64 %idx.ext.i, !dbg !12077
  %61 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !12078
  %l.i = bitcast %union.unaligned_32* %61 to i32*, !dbg !12078
  %62 = load i32, i32* %l.i, align 1, !dbg !12078
  store i32 %62, i32* %x.addr.i.i, align 4, !dbg !12079
  %63 = load i32, i32* %x.addr.i.i, align 4, !dbg !12080
  %shl.i.i = shl i32 %63, 8, !dbg !12081
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !12082
  %64 = load i32, i32* %x.addr.i.i, align 4, !dbg !12083
  %shr.i.i = lshr i32 %64, 8, !dbg !12084
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !12085
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !12086
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !12087
  %65 = load i32, i32* %x.addr.i.i, align 4, !dbg !12088
  %shr3.i.i = lshr i32 %65, 16, !dbg !12089
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !12090
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !12091
  %66 = load i32, i32* %x.addr.i.i, align 4, !dbg !12092
  %shr6.i.i = lshr i32 %66, 16, !dbg !12093
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !12094
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !12095
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !12096
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !12097
  %67 = load i32, i32* %re_index.i, align 4, !dbg !12098
  %and.i = and i32 %67, 7, !dbg !12099
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !12100
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !12101
  %68 = load i32, i32* %re_cache.i, align 4, !dbg !12102
  %69 = load i32, i32* %bits.addr.i, align 4, !dbg !12104
  %conv.i = trunc i32 %69 to i8, !dbg !12104
  %call2.i = call i32 @NEG_USR32(i32 %68, i8 signext %conv.i) #12, !dbg !12105
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !12106
  %70 = load i32, i32* %index1.i, align 4, !dbg !12107
  %idxprom.i = zext i32 %70 to i64, !dbg !12108
  %71 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12108
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %71, i64 %idxprom.i, !dbg !12108
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !12108
  %72 = load i16, i16* %arrayidx3.i, align 2, !dbg !12108
  %conv4.i = sext i16 %72 to i32, !dbg !12108
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !12109
  %73 = load i32, i32* %index1.i, align 4, !dbg !12110
  %idxprom5.i = zext i32 %73 to i64, !dbg !12111
  %74 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12111
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %74, i64 %idxprom5.i, !dbg !12111
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !12111
  %75 = load i16, i16* %arrayidx7.i, align 2, !dbg !12111
  %conv8.i = sext i16 %75 to i32, !dbg !12111
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !12112
  %76 = load i32, i32* %max_depth.addr.i, align 4, !dbg !12113
  %cmp.i = icmp sgt i32 %76, 1, !dbg !12114
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !12115

land.lhs.true.i:                                  ; preds = %for.body46
  %77 = load i32, i32* %n.i, align 4, !dbg !12116
  %cmp10.i = icmp slt i32 %77, 0, !dbg !12118
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !12119

if.then.i:                                        ; preds = %land.lhs.true.i
  %78 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12120
  %79 = load i32, i32* %re_index.i, align 4, !dbg !12122
  %80 = load i32, i32* %bits.addr.i, align 4, !dbg !12123
  %add.i = add i32 %79, %80, !dbg !12124
  %cmp12.i = icmp ugt i32 %78, %add.i, !dbg !12125
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !12126

cond.true.i:                                      ; preds = %if.then.i
  %81 = load i32, i32* %re_index.i, align 4, !dbg !12127
  %82 = load i32, i32* %bits.addr.i, align 4, !dbg !12129
  %add14.i = add i32 %81, %82, !dbg !12130
  br label %cond.end.i, !dbg !12131

cond.false.i:                                     ; preds = %if.then.i
  %83 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12132
  br label %cond.end.i, !dbg !12134

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %83, %cond.false.i ], !dbg !12135
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !12136
  %84 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12137
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %84, i32 0, i32 0, !dbg !12138
  %85 = load i8*, i8** %buffer15.i, align 8, !dbg !12138
  %86 = load i32, i32* %re_index.i, align 4, !dbg !12139
  %shr16.i = lshr i32 %86, 3, !dbg !12140
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !12141
  %add.ptr18.i = getelementptr inbounds i8, i8* %85, i64 %idx.ext17.i, !dbg !12141
  %87 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !12142
  %l19.i = bitcast %union.unaligned_32* %87 to i32*, !dbg !12142
  %88 = load i32, i32* %l19.i, align 1, !dbg !12142
  store i32 %88, i32* %x.addr.i81.i, align 4, !dbg !12143
  %89 = load i32, i32* %x.addr.i81.i, align 4, !dbg !12144
  %shl.i82.i = shl i32 %89, 8, !dbg !12145
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !12146
  %90 = load i32, i32* %x.addr.i81.i, align 4, !dbg !12147
  %shr.i84.i = lshr i32 %90, 8, !dbg !12148
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !12149
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !12150
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !12151
  %91 = load i32, i32* %x.addr.i81.i, align 4, !dbg !12152
  %shr3.i88.i = lshr i32 %91, 16, !dbg !12153
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !12154
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !12155
  %92 = load i32, i32* %x.addr.i81.i, align 4, !dbg !12156
  %shr6.i91.i = lshr i32 %92, 16, !dbg !12157
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !12158
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !12159
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !12160
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !12161
  %93 = load i32, i32* %re_index.i, align 4, !dbg !12162
  %and21.i = and i32 %93, 7, !dbg !12163
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !12164
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !12165
  %94 = load i32, i32* %n.i, align 4, !dbg !12166
  %sub.i = sub nsw i32 0, %94, !dbg !12167
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !12168
  %95 = load i32, i32* %re_cache.i, align 4, !dbg !12169
  %96 = load i32, i32* %nb_bits.i, align 4, !dbg !12170
  %conv23.i = trunc i32 %96 to i8, !dbg !12170
  %call24.i = call i32 @NEG_USR32(i32 %95, i8 signext %conv23.i) #12, !dbg !12171
  %97 = load i32, i32* %code.i, align 4, !dbg !12173
  %add25.i = add i32 %call24.i, %97, !dbg !12174
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !12175
  %98 = load i32, i32* %index1.i, align 4, !dbg !12176
  %idxprom26.i = zext i32 %98 to i64, !dbg !12177
  %99 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12177
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %99, i64 %idxprom26.i, !dbg !12177
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !12177
  %100 = load i16, i16* %arrayidx28.i, align 2, !dbg !12177
  %conv29.i = sext i16 %100 to i32, !dbg !12177
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !12178
  %101 = load i32, i32* %index1.i, align 4, !dbg !12179
  %idxprom30.i = zext i32 %101 to i64, !dbg !12180
  %102 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12180
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %102, i64 %idxprom30.i, !dbg !12180
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !12180
  %103 = load i16, i16* %arrayidx32.i, align 2, !dbg !12180
  %conv33.i = sext i16 %103 to i32, !dbg !12180
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !12181
  %104 = load i32, i32* %max_depth.addr.i, align 4, !dbg !12182
  %cmp34.i = icmp sgt i32 %104, 2, !dbg !12183
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !12184

land.lhs.true36.i:                                ; preds = %cond.end.i
  %105 = load i32, i32* %n.i, align 4, !dbg !12185
  %cmp37.i = icmp slt i32 %105, 0, !dbg !12187
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !12188

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %106 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12189
  %107 = load i32, i32* %re_index.i, align 4, !dbg !12191
  %108 = load i32, i32* %nb_bits.i, align 4, !dbg !12192
  %add40.i = add i32 %107, %108, !dbg !12193
  %cmp41.i = icmp ugt i32 %106, %add40.i, !dbg !12194
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !12195

cond.true43.i:                                    ; preds = %if.then39.i
  %109 = load i32, i32* %re_index.i, align 4, !dbg !12196
  %110 = load i32, i32* %nb_bits.i, align 4, !dbg !12198
  %add44.i = add i32 %109, %110, !dbg !12199
  br label %cond.end46.i, !dbg !12200

cond.false45.i:                                   ; preds = %if.then39.i
  %111 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12201
  br label %cond.end46.i, !dbg !12203

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %111, %cond.false45.i ], !dbg !12204
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !12205
  %112 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12206
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %112, i32 0, i32 0, !dbg !12207
  %113 = load i8*, i8** %buffer48.i, align 8, !dbg !12207
  %114 = load i32, i32* %re_index.i, align 4, !dbg !12208
  %shr49.i = lshr i32 %114, 3, !dbg !12209
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !12210
  %add.ptr51.i = getelementptr inbounds i8, i8* %113, i64 %idx.ext50.i, !dbg !12210
  %115 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !12211
  %l52.i = bitcast %union.unaligned_32* %115 to i32*, !dbg !12211
  %116 = load i32, i32* %l52.i, align 1, !dbg !12211
  store i32 %116, i32* %x.addr.i96.i, align 4, !dbg !12212
  %117 = load i32, i32* %x.addr.i96.i, align 4, !dbg !12213
  %shl.i97.i = shl i32 %117, 8, !dbg !12214
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !12215
  %118 = load i32, i32* %x.addr.i96.i, align 4, !dbg !12216
  %shr.i99.i = lshr i32 %118, 8, !dbg !12217
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !12218
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !12219
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !12220
  %119 = load i32, i32* %x.addr.i96.i, align 4, !dbg !12221
  %shr3.i103.i = lshr i32 %119, 16, !dbg !12222
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !12223
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !12224
  %120 = load i32, i32* %x.addr.i96.i, align 4, !dbg !12225
  %shr6.i106.i = lshr i32 %120, 16, !dbg !12226
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !12227
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !12228
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !12229
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !12230
  %121 = load i32, i32* %re_index.i, align 4, !dbg !12231
  %and54.i = and i32 %121, 7, !dbg !12232
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !12233
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !12234
  %122 = load i32, i32* %n.i, align 4, !dbg !12235
  %sub56.i = sub nsw i32 0, %122, !dbg !12236
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !12237
  %123 = load i32, i32* %re_cache.i, align 4, !dbg !12238
  %124 = load i32, i32* %nb_bits.i, align 4, !dbg !12239
  %conv57.i = trunc i32 %124 to i8, !dbg !12239
  %call58.i = call i32 @NEG_USR32(i32 %123, i8 signext %conv57.i) #12, !dbg !12240
  %125 = load i32, i32* %code.i, align 4, !dbg !12242
  %add59.i = add i32 %call58.i, %125, !dbg !12243
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !12244
  %126 = load i32, i32* %index1.i, align 4, !dbg !12245
  %idxprom60.i = zext i32 %126 to i64, !dbg !12246
  %127 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12246
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %127, i64 %idxprom60.i, !dbg !12246
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !12246
  %128 = load i16, i16* %arrayidx62.i, align 2, !dbg !12246
  %conv63.i = sext i16 %128 to i32, !dbg !12246
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !12247
  %129 = load i32, i32* %index1.i, align 4, !dbg !12248
  %idxprom64.i = zext i32 %129 to i64, !dbg !12249
  %130 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12249
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %130, i64 %idxprom64.i, !dbg !12249
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !12249
  %131 = load i16, i16* %arrayidx66.i, align 2, !dbg !12249
  %conv67.i = sext i16 %131 to i32, !dbg !12249
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !12250
  br label %if.end.i, !dbg !12251

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !12252

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body46
  %132 = load i32, i32* %n.i, align 4, !dbg !12254
  %133 = load i32, i32* %re_cache.i, align 4, !dbg !12257
  %shl70.i = shl i32 %133, %132, !dbg !12257
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !12257
  %134 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12258
  %135 = load i32, i32* %re_index.i, align 4, !dbg !12259
  %136 = load i32, i32* %n.i, align 4, !dbg !12260
  %add71.i = add i32 %135, %136, !dbg !12261
  %cmp72.i = icmp ugt i32 %134, %add71.i, !dbg !12262
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !12263

cond.true74.i:                                    ; preds = %if.end68.i
  %137 = load i32, i32* %re_index.i, align 4, !dbg !12264
  %138 = load i32, i32* %n.i, align 4, !dbg !12266
  %add75.i = add i32 %137, %138, !dbg !12267
  br label %get_vlc2.exit, !dbg !12268

cond.false76.i:                                   ; preds = %if.end68.i
  %139 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12269
  br label %get_vlc2.exit, !dbg !12271

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %139, %cond.false76.i ], !dbg !12272
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !12274
  %140 = load i32, i32* %re_index.i, align 4, !dbg !12275
  %141 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12276
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %141, i32 0, i32 2, !dbg !12277
  store i32 %140, i32* %index80.i, align 8, !dbg !12278
  %142 = load i32, i32* %code.i, align 4, !dbg !12279
  %143 = load i32, i32* %t_lav, align 4, !dbg !12280
  %sub = sub nsw i32 %142, %143, !dbg !12281
  %mul = mul nsw i32 %51, %sub, !dbg !12282
  %add52 = add nsw i32 %conv51, %mul, !dbg !12283
  %conv53 = trunc i32 %add52 to i8, !dbg !12062
  %144 = load i32, i32* %j, align 4, !dbg !12284
  %idxprom54 = sext i32 %144 to i64, !dbg !12285
  %145 = load i32, i32* %i, align 4, !dbg !12286
  %add55 = add nsw i32 %145, 1, !dbg !12287
  %idxprom56 = sext i32 %add55 to i64, !dbg !12285
  %146 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12285
  %env_facs_q57 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %146, i32 0, i32 22, !dbg !12288
  %arrayidx58 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q57, i64 0, i64 %idxprom56, !dbg !12285
  %arrayidx59 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx58, i64 0, i64 %idxprom54, !dbg !12285
  store i8 %conv53, i8* %arrayidx59, align 1, !dbg !12289
  %147 = load i32, i32* %j, align 4, !dbg !12290
  %idxprom60 = sext i32 %147 to i64, !dbg !12292
  %148 = load i32, i32* %i, align 4, !dbg !12293
  %add61 = add nsw i32 %148, 1, !dbg !12294
  %idxprom62 = sext i32 %add61 to i64, !dbg !12292
  %149 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12292
  %env_facs_q63 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %149, i32 0, i32 22, !dbg !12295
  %arrayidx64 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q63, i64 0, i64 %idxprom62, !dbg !12292
  %arrayidx65 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx64, i64 0, i64 %idxprom60, !dbg !12292
  %150 = load i8, i8* %arrayidx65, align 1, !dbg !12292
  %conv66 = zext i8 %150 to i32, !dbg !12292
  %cmp67 = icmp ugt i32 %conv66, 127, !dbg !12296
  br i1 %cmp67, label %if.then69, label %if.end77, !dbg !12297

if.then69:                                        ; preds = %get_vlc2.exit
  %151 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12298
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %151, i32 0, i32 1, !dbg !12300
  %152 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !12300
  %153 = bitcast %struct.AVCodecContext* %152 to i8*, !dbg !12298
  %154 = load i32, i32* %j, align 4, !dbg !12301
  %idxprom70 = sext i32 %154 to i64, !dbg !12302
  %155 = load i32, i32* %i, align 4, !dbg !12303
  %add71 = add nsw i32 %155, 1, !dbg !12304
  %idxprom72 = sext i32 %add71 to i64, !dbg !12302
  %156 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12302
  %env_facs_q73 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %156, i32 0, i32 22, !dbg !12305
  %arrayidx74 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q73, i64 0, i64 %idxprom72, !dbg !12302
  %arrayidx75 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx74, i64 0, i64 %idxprom70, !dbg !12302
  %157 = load i8, i8* %arrayidx75, align 1, !dbg !12302
  %conv76 = zext i8 %157 to i32, !dbg !12302
  call void (i8*, i32, i8*, ...) @av_log(i8* %153, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i32 0, i32 0), i32 %conv76), !dbg !12306
  store i32 -1094995529, i32* %retval, align 4, !dbg !12307
  br label %return, !dbg !12307

if.end77:                                         ; preds = %get_vlc2.exit
  br label %for.inc, !dbg !12308

for.inc:                                          ; preds = %if.end77
  %158 = load i32, i32* %j, align 4, !dbg !12309
  %inc = add nsw i32 %158, 1, !dbg !12309
  store i32 %inc, i32* %j, align 4, !dbg !12309
  br label %for.cond36, !dbg !12311, !llvm.loop !12312

for.end:                                          ; preds = %for.cond36
  br label %if.end191, !dbg !12314

if.else78:                                        ; preds = %if.then24
  %159 = load i32, i32* %i, align 4, !dbg !12315
  %add79 = add nsw i32 %159, 1, !dbg !12317
  %idxprom80 = sext i32 %add79 to i64, !dbg !12318
  %160 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12318
  %bs_freq_res81 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %160, i32 0, i32 3, !dbg !12319
  %arrayidx82 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res81, i64 0, i64 %idxprom80, !dbg !12318
  %161 = load i8, i8* %arrayidx82, align 1, !dbg !12318
  %tobool83 = icmp ne i8 %161, 0, !dbg !12318
  br i1 %tobool83, label %if.then84, label %if.else136, !dbg !12318

if.then84:                                        ; preds = %if.else78
  store i32 0, i32* %j, align 4, !dbg !12320
  br label %for.cond85, !dbg !12321

for.cond85:                                       ; preds = %for.inc133, %if.then84
  %162 = load i32, i32* %j, align 4, !dbg !12322
  %163 = load i32, i32* %i, align 4, !dbg !12324
  %add86 = add nsw i32 %163, 1, !dbg !12325
  %idxprom87 = sext i32 %add86 to i64, !dbg !12326
  %164 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12326
  %bs_freq_res88 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %164, i32 0, i32 3, !dbg !12327
  %arrayidx89 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res88, i64 0, i64 %idxprom87, !dbg !12326
  %165 = load i8, i8* %arrayidx89, align 1, !dbg !12326
  %idxprom90 = zext i8 %165 to i64, !dbg !12328
  %166 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !12328
  %n91 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %166, i32 0, i32 19, !dbg !12329
  %arrayidx92 = getelementptr inbounds [2 x i32], [2 x i32]* %n91, i64 0, i64 %idxprom90, !dbg !12328
  %167 = load i32, i32* %arrayidx92, align 4, !dbg !12328
  %cmp93 = icmp slt i32 %162, %167, !dbg !12330
  br i1 %cmp93, label %for.body95, label %for.end135, !dbg !12331

for.body95:                                       ; preds = %for.cond85
  %168 = load i32, i32* %j, align 4, !dbg !12332
  %169 = load i32, i32* %odd, align 4, !dbg !12333
  %add96 = add nsw i32 %168, %169, !dbg !12334
  %shr = ashr i32 %add96, 1, !dbg !12335
  store i32 %shr, i32* %k, align 4, !dbg !12336
  %170 = load i32, i32* %k, align 4, !dbg !12337
  %idxprom97 = sext i32 %170 to i64, !dbg !12338
  %171 = load i32, i32* %i, align 4, !dbg !12339
  %idxprom98 = sext i32 %171 to i64, !dbg !12338
  %172 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12338
  %env_facs_q99 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %172, i32 0, i32 22, !dbg !12340
  %arrayidx100 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q99, i64 0, i64 %idxprom98, !dbg !12338
  %arrayidx101 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx100, i64 0, i64 %idxprom97, !dbg !12338
  %173 = load i8, i8* %arrayidx101, align 1, !dbg !12338
  %conv102 = zext i8 %173 to i32, !dbg !12338
  %174 = load i32, i32* %delta, align 4, !dbg !12341
  %175 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12342
  %176 = load [2 x i16]*, [2 x i16]** %t_huff, align 8, !dbg !12343
  store %struct.GetBitContext* %175, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !12344
  store [2 x i16]* %176, [2 x i16]** %table.addr.i268, align 8, !dbg !12344
  store i32 9, i32* %bits.addr.i269, align 4, !dbg !12344
  store i32 3, i32* %max_depth.addr.i270, align 4, !dbg !12344
  %177 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !12345
  %index.i278 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %177, i32 0, i32 2, !dbg !12346
  %178 = load i32, i32* %index.i278, align 8, !dbg !12346
  store i32 %178, i32* %re_index.i272, align 4, !dbg !11896
  %179 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !12347
  %size_in_bits_plus8.i279 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %179, i32 0, i32 4, !dbg !12348
  %180 = load i32, i32* %size_in_bits_plus8.i279, align 8, !dbg !12348
  store i32 %180, i32* %re_size_plus8.i274, align 4, !dbg !11898
  %181 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !12349
  %buffer.i280 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %181, i32 0, i32 0, !dbg !12350
  %182 = load i8*, i8** %buffer.i280, align 8, !dbg !12350
  %183 = load i32, i32* %re_index.i272, align 4, !dbg !12351
  %shr.i281 = lshr i32 %183, 3, !dbg !12352
  %idx.ext.i282 = zext i32 %shr.i281 to i64, !dbg !12353
  %add.ptr.i283 = getelementptr inbounds i8, i8* %182, i64 %idx.ext.i282, !dbg !12353
  %184 = bitcast i8* %add.ptr.i283 to %union.unaligned_32*, !dbg !12354
  %l.i284 = bitcast %union.unaligned_32* %184 to i32*, !dbg !12354
  %185 = load i32, i32* %l.i284, align 1, !dbg !12354
  store i32 %185, i32* %x.addr.i.i266, align 4, !dbg !12355
  %186 = load i32, i32* %x.addr.i.i266, align 4, !dbg !12356
  %shl.i.i285 = shl i32 %186, 8, !dbg !12357
  %and.i.i286 = and i32 %shl.i.i285, 65280, !dbg !12358
  %187 = load i32, i32* %x.addr.i.i266, align 4, !dbg !12359
  %shr.i.i287 = lshr i32 %187, 8, !dbg !12360
  %and1.i.i288 = and i32 %shr.i.i287, 255, !dbg !12361
  %or.i.i289 = or i32 %and.i.i286, %and1.i.i288, !dbg !12362
  %shl2.i.i290 = shl i32 %or.i.i289, 16, !dbg !12363
  %188 = load i32, i32* %x.addr.i.i266, align 4, !dbg !12364
  %shr3.i.i291 = lshr i32 %188, 16, !dbg !12365
  %shl4.i.i292 = shl i32 %shr3.i.i291, 8, !dbg !12366
  %and5.i.i293 = and i32 %shl4.i.i292, 65280, !dbg !12367
  %189 = load i32, i32* %x.addr.i.i266, align 4, !dbg !12368
  %shr6.i.i294 = lshr i32 %189, 16, !dbg !12369
  %shr7.i.i295 = lshr i32 %shr6.i.i294, 8, !dbg !12370
  %and8.i.i296 = and i32 %shr7.i.i295, 255, !dbg !12371
  %or9.i.i297 = or i32 %and5.i.i293, %and8.i.i296, !dbg !12372
  %or10.i.i298 = or i32 %shl2.i.i290, %or9.i.i297, !dbg !12373
  %190 = load i32, i32* %re_index.i272, align 4, !dbg !12374
  %and.i299 = and i32 %190, 7, !dbg !12375
  %shl.i300 = shl i32 %or10.i.i298, %and.i299, !dbg !12376
  store i32 %shl.i300, i32* %re_cache.i273, align 4, !dbg !12377
  %191 = load i32, i32* %re_cache.i273, align 4, !dbg !12378
  %192 = load i32, i32* %bits.addr.i269, align 4, !dbg !12379
  %conv.i301 = trunc i32 %192 to i8, !dbg !12379
  %call2.i302 = call i32 @NEG_USR32(i32 %191, i8 signext %conv.i301) #12, !dbg !12380
  store i32 %call2.i302, i32* %index1.i277, align 4, !dbg !12381
  %193 = load i32, i32* %index1.i277, align 4, !dbg !12382
  %idxprom.i303 = zext i32 %193 to i64, !dbg !12383
  %194 = load [2 x i16]*, [2 x i16]** %table.addr.i268, align 8, !dbg !12383
  %arrayidx.i304 = getelementptr inbounds [2 x i16], [2 x i16]* %194, i64 %idxprom.i303, !dbg !12383
  %arrayidx3.i305 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i304, i64 0, i64 0, !dbg !12383
  %195 = load i16, i16* %arrayidx3.i305, align 2, !dbg !12383
  %conv4.i306 = sext i16 %195 to i32, !dbg !12383
  store i32 %conv4.i306, i32* %code.i271, align 4, !dbg !12384
  %196 = load i32, i32* %index1.i277, align 4, !dbg !12385
  %idxprom5.i307 = zext i32 %196 to i64, !dbg !12386
  %197 = load [2 x i16]*, [2 x i16]** %table.addr.i268, align 8, !dbg !12386
  %arrayidx6.i308 = getelementptr inbounds [2 x i16], [2 x i16]* %197, i64 %idxprom5.i307, !dbg !12386
  %arrayidx7.i309 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i308, i64 0, i64 1, !dbg !12386
  %198 = load i16, i16* %arrayidx7.i309, align 2, !dbg !12386
  %conv8.i310 = sext i16 %198 to i32, !dbg !12386
  store i32 %conv8.i310, i32* %n.i275, align 4, !dbg !12387
  %199 = load i32, i32* %max_depth.addr.i270, align 4, !dbg !12388
  %cmp.i311 = icmp sgt i32 %199, 1, !dbg !12389
  br i1 %cmp.i311, label %land.lhs.true.i313, label %if.end68.i400, !dbg !12390

land.lhs.true.i313:                               ; preds = %for.body95
  %200 = load i32, i32* %n.i275, align 4, !dbg !12391
  %cmp10.i312 = icmp slt i32 %200, 0, !dbg !12392
  br i1 %cmp10.i312, label %if.then.i316, label %if.end68.i400, !dbg !12393

if.then.i316:                                     ; preds = %land.lhs.true.i313
  %201 = load i32, i32* %re_size_plus8.i274, align 4, !dbg !12394
  %202 = load i32, i32* %re_index.i272, align 4, !dbg !12395
  %203 = load i32, i32* %bits.addr.i269, align 4, !dbg !12396
  %add.i314 = add i32 %202, %203, !dbg !12397
  %cmp12.i315 = icmp ugt i32 %201, %add.i314, !dbg !12398
  br i1 %cmp12.i315, label %cond.true.i318, label %cond.false.i319, !dbg !12399

cond.true.i318:                                   ; preds = %if.then.i316
  %204 = load i32, i32* %re_index.i272, align 4, !dbg !12400
  %205 = load i32, i32* %bits.addr.i269, align 4, !dbg !12401
  %add14.i317 = add i32 %204, %205, !dbg !12402
  br label %cond.end.i355, !dbg !12403

cond.false.i319:                                  ; preds = %if.then.i316
  %206 = load i32, i32* %re_size_plus8.i274, align 4, !dbg !12404
  br label %cond.end.i355, !dbg !12405

cond.end.i355:                                    ; preds = %cond.false.i319, %cond.true.i318
  %cond.i320 = phi i32 [ %add14.i317, %cond.true.i318 ], [ %206, %cond.false.i319 ], !dbg !12406
  store i32 %cond.i320, i32* %re_index.i272, align 4, !dbg !12407
  %207 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !12408
  %buffer15.i321 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %207, i32 0, i32 0, !dbg !12409
  %208 = load i8*, i8** %buffer15.i321, align 8, !dbg !12409
  %209 = load i32, i32* %re_index.i272, align 4, !dbg !12410
  %shr16.i322 = lshr i32 %209, 3, !dbg !12411
  %idx.ext17.i323 = zext i32 %shr16.i322 to i64, !dbg !12412
  %add.ptr18.i324 = getelementptr inbounds i8, i8* %208, i64 %idx.ext17.i323, !dbg !12412
  %210 = bitcast i8* %add.ptr18.i324 to %union.unaligned_32*, !dbg !12413
  %l19.i325 = bitcast %union.unaligned_32* %210 to i32*, !dbg !12413
  %211 = load i32, i32* %l19.i325, align 1, !dbg !12413
  store i32 %211, i32* %x.addr.i81.i265, align 4, !dbg !12414
  %212 = load i32, i32* %x.addr.i81.i265, align 4, !dbg !12415
  %shl.i82.i326 = shl i32 %212, 8, !dbg !12416
  %and.i83.i327 = and i32 %shl.i82.i326, 65280, !dbg !12417
  %213 = load i32, i32* %x.addr.i81.i265, align 4, !dbg !12418
  %shr.i84.i328 = lshr i32 %213, 8, !dbg !12419
  %and1.i85.i329 = and i32 %shr.i84.i328, 255, !dbg !12420
  %or.i86.i330 = or i32 %and.i83.i327, %and1.i85.i329, !dbg !12421
  %shl2.i87.i331 = shl i32 %or.i86.i330, 16, !dbg !12422
  %214 = load i32, i32* %x.addr.i81.i265, align 4, !dbg !12423
  %shr3.i88.i332 = lshr i32 %214, 16, !dbg !12424
  %shl4.i89.i333 = shl i32 %shr3.i88.i332, 8, !dbg !12425
  %and5.i90.i334 = and i32 %shl4.i89.i333, 65280, !dbg !12426
  %215 = load i32, i32* %x.addr.i81.i265, align 4, !dbg !12427
  %shr6.i91.i335 = lshr i32 %215, 16, !dbg !12428
  %shr7.i92.i336 = lshr i32 %shr6.i91.i335, 8, !dbg !12429
  %and8.i93.i337 = and i32 %shr7.i92.i336, 255, !dbg !12430
  %or9.i94.i338 = or i32 %and5.i90.i334, %and8.i93.i337, !dbg !12431
  %or10.i95.i339 = or i32 %shl2.i87.i331, %or9.i94.i338, !dbg !12432
  %216 = load i32, i32* %re_index.i272, align 4, !dbg !12433
  %and21.i340 = and i32 %216, 7, !dbg !12434
  %shl22.i341 = shl i32 %or10.i95.i339, %and21.i340, !dbg !12435
  store i32 %shl22.i341, i32* %re_cache.i273, align 4, !dbg !12436
  %217 = load i32, i32* %n.i275, align 4, !dbg !12437
  %sub.i342 = sub nsw i32 0, %217, !dbg !12438
  store i32 %sub.i342, i32* %nb_bits.i276, align 4, !dbg !12439
  %218 = load i32, i32* %re_cache.i273, align 4, !dbg !12440
  %219 = load i32, i32* %nb_bits.i276, align 4, !dbg !12441
  %conv23.i343 = trunc i32 %219 to i8, !dbg !12441
  %call24.i344 = call i32 @NEG_USR32(i32 %218, i8 signext %conv23.i343) #12, !dbg !12442
  %220 = load i32, i32* %code.i271, align 4, !dbg !12443
  %add25.i345 = add i32 %call24.i344, %220, !dbg !12444
  store i32 %add25.i345, i32* %index1.i277, align 4, !dbg !12445
  %221 = load i32, i32* %index1.i277, align 4, !dbg !12446
  %idxprom26.i346 = zext i32 %221 to i64, !dbg !12447
  %222 = load [2 x i16]*, [2 x i16]** %table.addr.i268, align 8, !dbg !12447
  %arrayidx27.i347 = getelementptr inbounds [2 x i16], [2 x i16]* %222, i64 %idxprom26.i346, !dbg !12447
  %arrayidx28.i348 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i347, i64 0, i64 0, !dbg !12447
  %223 = load i16, i16* %arrayidx28.i348, align 2, !dbg !12447
  %conv29.i349 = sext i16 %223 to i32, !dbg !12447
  store i32 %conv29.i349, i32* %code.i271, align 4, !dbg !12448
  %224 = load i32, i32* %index1.i277, align 4, !dbg !12449
  %idxprom30.i350 = zext i32 %224 to i64, !dbg !12450
  %225 = load [2 x i16]*, [2 x i16]** %table.addr.i268, align 8, !dbg !12450
  %arrayidx31.i351 = getelementptr inbounds [2 x i16], [2 x i16]* %225, i64 %idxprom30.i350, !dbg !12450
  %arrayidx32.i352 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i351, i64 0, i64 1, !dbg !12450
  %226 = load i16, i16* %arrayidx32.i352, align 2, !dbg !12450
  %conv33.i353 = sext i16 %226 to i32, !dbg !12450
  store i32 %conv33.i353, i32* %n.i275, align 4, !dbg !12451
  %227 = load i32, i32* %max_depth.addr.i270, align 4, !dbg !12452
  %cmp34.i354 = icmp sgt i32 %227, 2, !dbg !12453
  br i1 %cmp34.i354, label %land.lhs.true36.i357, label %if.end.i399, !dbg !12454

land.lhs.true36.i357:                             ; preds = %cond.end.i355
  %228 = load i32, i32* %n.i275, align 4, !dbg !12455
  %cmp37.i356 = icmp slt i32 %228, 0, !dbg !12456
  br i1 %cmp37.i356, label %if.then39.i360, label %if.end.i399, !dbg !12457

if.then39.i360:                                   ; preds = %land.lhs.true36.i357
  %229 = load i32, i32* %re_size_plus8.i274, align 4, !dbg !12458
  %230 = load i32, i32* %re_index.i272, align 4, !dbg !12459
  %231 = load i32, i32* %nb_bits.i276, align 4, !dbg !12460
  %add40.i358 = add i32 %230, %231, !dbg !12461
  %cmp41.i359 = icmp ugt i32 %229, %add40.i358, !dbg !12462
  br i1 %cmp41.i359, label %cond.true43.i362, label %cond.false45.i363, !dbg !12463

cond.true43.i362:                                 ; preds = %if.then39.i360
  %232 = load i32, i32* %re_index.i272, align 4, !dbg !12464
  %233 = load i32, i32* %nb_bits.i276, align 4, !dbg !12465
  %add44.i361 = add i32 %232, %233, !dbg !12466
  br label %cond.end46.i398, !dbg !12467

cond.false45.i363:                                ; preds = %if.then39.i360
  %234 = load i32, i32* %re_size_plus8.i274, align 4, !dbg !12468
  br label %cond.end46.i398, !dbg !12469

cond.end46.i398:                                  ; preds = %cond.false45.i363, %cond.true43.i362
  %cond47.i364 = phi i32 [ %add44.i361, %cond.true43.i362 ], [ %234, %cond.false45.i363 ], !dbg !12470
  store i32 %cond47.i364, i32* %re_index.i272, align 4, !dbg !12471
  %235 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !12472
  %buffer48.i365 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %235, i32 0, i32 0, !dbg !12473
  %236 = load i8*, i8** %buffer48.i365, align 8, !dbg !12473
  %237 = load i32, i32* %re_index.i272, align 4, !dbg !12474
  %shr49.i366 = lshr i32 %237, 3, !dbg !12475
  %idx.ext50.i367 = zext i32 %shr49.i366 to i64, !dbg !12476
  %add.ptr51.i368 = getelementptr inbounds i8, i8* %236, i64 %idx.ext50.i367, !dbg !12476
  %238 = bitcast i8* %add.ptr51.i368 to %union.unaligned_32*, !dbg !12477
  %l52.i369 = bitcast %union.unaligned_32* %238 to i32*, !dbg !12477
  %239 = load i32, i32* %l52.i369, align 1, !dbg !12477
  store i32 %239, i32* %x.addr.i96.i264, align 4, !dbg !12478
  %240 = load i32, i32* %x.addr.i96.i264, align 4, !dbg !12479
  %shl.i97.i370 = shl i32 %240, 8, !dbg !12480
  %and.i98.i371 = and i32 %shl.i97.i370, 65280, !dbg !12481
  %241 = load i32, i32* %x.addr.i96.i264, align 4, !dbg !12482
  %shr.i99.i372 = lshr i32 %241, 8, !dbg !12483
  %and1.i100.i373 = and i32 %shr.i99.i372, 255, !dbg !12484
  %or.i101.i374 = or i32 %and.i98.i371, %and1.i100.i373, !dbg !12485
  %shl2.i102.i375 = shl i32 %or.i101.i374, 16, !dbg !12486
  %242 = load i32, i32* %x.addr.i96.i264, align 4, !dbg !12487
  %shr3.i103.i376 = lshr i32 %242, 16, !dbg !12488
  %shl4.i104.i377 = shl i32 %shr3.i103.i376, 8, !dbg !12489
  %and5.i105.i378 = and i32 %shl4.i104.i377, 65280, !dbg !12490
  %243 = load i32, i32* %x.addr.i96.i264, align 4, !dbg !12491
  %shr6.i106.i379 = lshr i32 %243, 16, !dbg !12492
  %shr7.i107.i380 = lshr i32 %shr6.i106.i379, 8, !dbg !12493
  %and8.i108.i381 = and i32 %shr7.i107.i380, 255, !dbg !12494
  %or9.i109.i382 = or i32 %and5.i105.i378, %and8.i108.i381, !dbg !12495
  %or10.i110.i383 = or i32 %shl2.i102.i375, %or9.i109.i382, !dbg !12496
  %244 = load i32, i32* %re_index.i272, align 4, !dbg !12497
  %and54.i384 = and i32 %244, 7, !dbg !12498
  %shl55.i385 = shl i32 %or10.i110.i383, %and54.i384, !dbg !12499
  store i32 %shl55.i385, i32* %re_cache.i273, align 4, !dbg !12500
  %245 = load i32, i32* %n.i275, align 4, !dbg !12501
  %sub56.i386 = sub nsw i32 0, %245, !dbg !12502
  store i32 %sub56.i386, i32* %nb_bits.i276, align 4, !dbg !12503
  %246 = load i32, i32* %re_cache.i273, align 4, !dbg !12504
  %247 = load i32, i32* %nb_bits.i276, align 4, !dbg !12505
  %conv57.i387 = trunc i32 %247 to i8, !dbg !12505
  %call58.i388 = call i32 @NEG_USR32(i32 %246, i8 signext %conv57.i387) #12, !dbg !12506
  %248 = load i32, i32* %code.i271, align 4, !dbg !12507
  %add59.i389 = add i32 %call58.i388, %248, !dbg !12508
  store i32 %add59.i389, i32* %index1.i277, align 4, !dbg !12509
  %249 = load i32, i32* %index1.i277, align 4, !dbg !12510
  %idxprom60.i390 = zext i32 %249 to i64, !dbg !12511
  %250 = load [2 x i16]*, [2 x i16]** %table.addr.i268, align 8, !dbg !12511
  %arrayidx61.i391 = getelementptr inbounds [2 x i16], [2 x i16]* %250, i64 %idxprom60.i390, !dbg !12511
  %arrayidx62.i392 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i391, i64 0, i64 0, !dbg !12511
  %251 = load i16, i16* %arrayidx62.i392, align 2, !dbg !12511
  %conv63.i393 = sext i16 %251 to i32, !dbg !12511
  store i32 %conv63.i393, i32* %code.i271, align 4, !dbg !12512
  %252 = load i32, i32* %index1.i277, align 4, !dbg !12513
  %idxprom64.i394 = zext i32 %252 to i64, !dbg !12514
  %253 = load [2 x i16]*, [2 x i16]** %table.addr.i268, align 8, !dbg !12514
  %arrayidx65.i395 = getelementptr inbounds [2 x i16], [2 x i16]* %253, i64 %idxprom64.i394, !dbg !12514
  %arrayidx66.i396 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i395, i64 0, i64 1, !dbg !12514
  %254 = load i16, i16* %arrayidx66.i396, align 2, !dbg !12514
  %conv67.i397 = sext i16 %254 to i32, !dbg !12514
  store i32 %conv67.i397, i32* %n.i275, align 4, !dbg !12515
  br label %if.end.i399, !dbg !12516

if.end.i399:                                      ; preds = %cond.end46.i398, %land.lhs.true36.i357, %cond.end.i355
  br label %if.end68.i400, !dbg !12517

if.end68.i400:                                    ; preds = %if.end.i399, %land.lhs.true.i313, %for.body95
  %255 = load i32, i32* %n.i275, align 4, !dbg !12518
  %256 = load i32, i32* %re_cache.i273, align 4, !dbg !12519
  %shl70.i401 = shl i32 %256, %255, !dbg !12519
  store i32 %shl70.i401, i32* %re_cache.i273, align 4, !dbg !12519
  %257 = load i32, i32* %re_size_plus8.i274, align 4, !dbg !12520
  %258 = load i32, i32* %re_index.i272, align 4, !dbg !12521
  %259 = load i32, i32* %n.i275, align 4, !dbg !12522
  %add71.i402 = add i32 %258, %259, !dbg !12523
  %cmp72.i403 = icmp ugt i32 %257, %add71.i402, !dbg !12524
  br i1 %cmp72.i403, label %cond.true74.i405, label %cond.false76.i406, !dbg !12525

cond.true74.i405:                                 ; preds = %if.end68.i400
  %260 = load i32, i32* %re_index.i272, align 4, !dbg !12526
  %261 = load i32, i32* %n.i275, align 4, !dbg !12527
  %add75.i404 = add i32 %260, %261, !dbg !12528
  br label %get_vlc2.exit409, !dbg !12529

cond.false76.i406:                                ; preds = %if.end68.i400
  %262 = load i32, i32* %re_size_plus8.i274, align 4, !dbg !12530
  br label %get_vlc2.exit409, !dbg !12531

get_vlc2.exit409:                                 ; preds = %cond.true74.i405, %cond.false76.i406
  %cond78.i407 = phi i32 [ %add75.i404, %cond.true74.i405 ], [ %262, %cond.false76.i406 ], !dbg !12532
  store i32 %cond78.i407, i32* %re_index.i272, align 4, !dbg !12533
  %263 = load i32, i32* %re_index.i272, align 4, !dbg !12534
  %264 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !12535
  %index80.i408 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %264, i32 0, i32 2, !dbg !12536
  store i32 %263, i32* %index80.i408, align 8, !dbg !12537
  %265 = load i32, i32* %code.i271, align 4, !dbg !12538
  %266 = load i32, i32* %t_lav, align 4, !dbg !12539
  %sub104 = sub nsw i32 %265, %266, !dbg !12540
  %mul105 = mul nsw i32 %174, %sub104, !dbg !12541
  %add106 = add nsw i32 %conv102, %mul105, !dbg !12542
  %conv107 = trunc i32 %add106 to i8, !dbg !12338
  %267 = load i32, i32* %j, align 4, !dbg !12543
  %idxprom108 = sext i32 %267 to i64, !dbg !12544
  %268 = load i32, i32* %i, align 4, !dbg !12545
  %add109 = add nsw i32 %268, 1, !dbg !12546
  %idxprom110 = sext i32 %add109 to i64, !dbg !12544
  %269 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12544
  %env_facs_q111 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %269, i32 0, i32 22, !dbg !12547
  %arrayidx112 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q111, i64 0, i64 %idxprom110, !dbg !12544
  %arrayidx113 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx112, i64 0, i64 %idxprom108, !dbg !12544
  store i8 %conv107, i8* %arrayidx113, align 1, !dbg !12548
  %270 = load i32, i32* %j, align 4, !dbg !12549
  %idxprom114 = sext i32 %270 to i64, !dbg !12551
  %271 = load i32, i32* %i, align 4, !dbg !12552
  %add115 = add nsw i32 %271, 1, !dbg !12553
  %idxprom116 = sext i32 %add115 to i64, !dbg !12551
  %272 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12551
  %env_facs_q117 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %272, i32 0, i32 22, !dbg !12554
  %arrayidx118 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q117, i64 0, i64 %idxprom116, !dbg !12551
  %arrayidx119 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx118, i64 0, i64 %idxprom114, !dbg !12551
  %273 = load i8, i8* %arrayidx119, align 1, !dbg !12551
  %conv120 = zext i8 %273 to i32, !dbg !12551
  %cmp121 = icmp ugt i32 %conv120, 127, !dbg !12555
  br i1 %cmp121, label %if.then123, label %if.end132, !dbg !12556

if.then123:                                       ; preds = %get_vlc2.exit409
  %274 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12557
  %avctx124 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %274, i32 0, i32 1, !dbg !12559
  %275 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx124, align 8, !dbg !12559
  %276 = bitcast %struct.AVCodecContext* %275 to i8*, !dbg !12557
  %277 = load i32, i32* %j, align 4, !dbg !12560
  %idxprom125 = sext i32 %277 to i64, !dbg !12561
  %278 = load i32, i32* %i, align 4, !dbg !12562
  %add126 = add nsw i32 %278, 1, !dbg !12563
  %idxprom127 = sext i32 %add126 to i64, !dbg !12561
  %279 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12561
  %env_facs_q128 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %279, i32 0, i32 22, !dbg !12564
  %arrayidx129 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q128, i64 0, i64 %idxprom127, !dbg !12561
  %arrayidx130 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx129, i64 0, i64 %idxprom125, !dbg !12561
  %280 = load i8, i8* %arrayidx130, align 1, !dbg !12561
  %conv131 = zext i8 %280 to i32, !dbg !12561
  call void (i8*, i32, i8*, ...) @av_log(i8* %276, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i32 0, i32 0), i32 %conv131), !dbg !12565
  store i32 -1094995529, i32* %retval, align 4, !dbg !12566
  br label %return, !dbg !12566

if.end132:                                        ; preds = %get_vlc2.exit409
  br label %for.inc133, !dbg !12567

for.inc133:                                       ; preds = %if.end132
  %281 = load i32, i32* %j, align 4, !dbg !12568
  %inc134 = add nsw i32 %281, 1, !dbg !12568
  store i32 %inc134, i32* %j, align 4, !dbg !12568
  br label %for.cond85, !dbg !12570, !llvm.loop !12571

for.end135:                                       ; preds = %for.cond85
  br label %if.end190, !dbg !12573

if.else136:                                       ; preds = %if.else78
  store i32 0, i32* %j, align 4, !dbg !12574
  br label %for.cond137, !dbg !12575

for.cond137:                                      ; preds = %for.inc187, %if.else136
  %282 = load i32, i32* %j, align 4, !dbg !12576
  %283 = load i32, i32* %i, align 4, !dbg !12578
  %add138 = add nsw i32 %283, 1, !dbg !12579
  %idxprom139 = sext i32 %add138 to i64, !dbg !12580
  %284 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12580
  %bs_freq_res140 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %284, i32 0, i32 3, !dbg !12581
  %arrayidx141 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res140, i64 0, i64 %idxprom139, !dbg !12580
  %285 = load i8, i8* %arrayidx141, align 1, !dbg !12580
  %idxprom142 = zext i8 %285 to i64, !dbg !12582
  %286 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !12582
  %n143 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %286, i32 0, i32 19, !dbg !12583
  %arrayidx144 = getelementptr inbounds [2 x i32], [2 x i32]* %n143, i64 0, i64 %idxprom142, !dbg !12582
  %287 = load i32, i32* %arrayidx144, align 4, !dbg !12582
  %cmp145 = icmp slt i32 %282, %287, !dbg !12584
  br i1 %cmp145, label %for.body147, label %for.end189, !dbg !12585

for.body147:                                      ; preds = %for.cond137
  %288 = load i32, i32* %j, align 4, !dbg !12586
  %tobool148 = icmp ne i32 %288, 0, !dbg !12586
  br i1 %tobool148, label %cond.true, label %cond.false, !dbg !12586

cond.true:                                        ; preds = %for.body147
  %289 = load i32, i32* %j, align 4, !dbg !12587
  %mul149 = mul nsw i32 2, %289, !dbg !12589
  %290 = load i32, i32* %odd, align 4, !dbg !12590
  %sub150 = sub nsw i32 %mul149, %290, !dbg !12591
  br label %cond.end, !dbg !12592

cond.false:                                       ; preds = %for.body147
  br label %cond.end, !dbg !12593

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub150, %cond.true ], [ 0, %cond.false ], !dbg !12595
  store i32 %cond, i32* %k, align 4, !dbg !12597
  %291 = load i32, i32* %k, align 4, !dbg !12598
  %idxprom151 = sext i32 %291 to i64, !dbg !12599
  %292 = load i32, i32* %i, align 4, !dbg !12600
  %idxprom152 = sext i32 %292 to i64, !dbg !12599
  %293 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12599
  %env_facs_q153 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %293, i32 0, i32 22, !dbg !12601
  %arrayidx154 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q153, i64 0, i64 %idxprom152, !dbg !12599
  %arrayidx155 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx154, i64 0, i64 %idxprom151, !dbg !12599
  %294 = load i8, i8* %arrayidx155, align 1, !dbg !12599
  %conv156 = zext i8 %294 to i32, !dbg !12599
  %295 = load i32, i32* %delta, align 4, !dbg !12602
  %296 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12603
  %297 = load [2 x i16]*, [2 x i16]** %t_huff, align 8, !dbg !12604
  store %struct.GetBitContext* %296, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12605
  store [2 x i16]* %297, [2 x i16]** %table.addr.i414, align 8, !dbg !12605
  store i32 9, i32* %bits.addr.i415, align 4, !dbg !12605
  store i32 3, i32* %max_depth.addr.i416, align 4, !dbg !12605
  %298 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12606
  %index.i424 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %298, i32 0, i32 2, !dbg !12607
  %299 = load i32, i32* %index.i424, align 8, !dbg !12607
  store i32 %299, i32* %re_index.i418, align 4, !dbg !11874
  %300 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12608
  %size_in_bits_plus8.i425 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %300, i32 0, i32 4, !dbg !12609
  %301 = load i32, i32* %size_in_bits_plus8.i425, align 8, !dbg !12609
  store i32 %301, i32* %re_size_plus8.i420, align 4, !dbg !11876
  %302 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12610
  %buffer.i426 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %302, i32 0, i32 0, !dbg !12611
  %303 = load i8*, i8** %buffer.i426, align 8, !dbg !12611
  %304 = load i32, i32* %re_index.i418, align 4, !dbg !12612
  %shr.i427 = lshr i32 %304, 3, !dbg !12613
  %idx.ext.i428 = zext i32 %shr.i427 to i64, !dbg !12614
  %add.ptr.i429 = getelementptr inbounds i8, i8* %303, i64 %idx.ext.i428, !dbg !12614
  %305 = bitcast i8* %add.ptr.i429 to %union.unaligned_32*, !dbg !12615
  %l.i430 = bitcast %union.unaligned_32* %305 to i32*, !dbg !12615
  %306 = load i32, i32* %l.i430, align 1, !dbg !12615
  store i32 %306, i32* %x.addr.i.i412, align 4, !dbg !12616
  %307 = load i32, i32* %x.addr.i.i412, align 4, !dbg !12617
  %shl.i.i431 = shl i32 %307, 8, !dbg !12618
  %and.i.i432 = and i32 %shl.i.i431, 65280, !dbg !12619
  %308 = load i32, i32* %x.addr.i.i412, align 4, !dbg !12620
  %shr.i.i433 = lshr i32 %308, 8, !dbg !12621
  %and1.i.i434 = and i32 %shr.i.i433, 255, !dbg !12622
  %or.i.i435 = or i32 %and.i.i432, %and1.i.i434, !dbg !12623
  %shl2.i.i436 = shl i32 %or.i.i435, 16, !dbg !12624
  %309 = load i32, i32* %x.addr.i.i412, align 4, !dbg !12625
  %shr3.i.i437 = lshr i32 %309, 16, !dbg !12626
  %shl4.i.i438 = shl i32 %shr3.i.i437, 8, !dbg !12627
  %and5.i.i439 = and i32 %shl4.i.i438, 65280, !dbg !12628
  %310 = load i32, i32* %x.addr.i.i412, align 4, !dbg !12629
  %shr6.i.i440 = lshr i32 %310, 16, !dbg !12630
  %shr7.i.i441 = lshr i32 %shr6.i.i440, 8, !dbg !12631
  %and8.i.i442 = and i32 %shr7.i.i441, 255, !dbg !12632
  %or9.i.i443 = or i32 %and5.i.i439, %and8.i.i442, !dbg !12633
  %or10.i.i444 = or i32 %shl2.i.i436, %or9.i.i443, !dbg !12634
  %311 = load i32, i32* %re_index.i418, align 4, !dbg !12635
  %and.i445 = and i32 %311, 7, !dbg !12636
  %shl.i446 = shl i32 %or10.i.i444, %and.i445, !dbg !12637
  store i32 %shl.i446, i32* %re_cache.i419, align 4, !dbg !12638
  %312 = load i32, i32* %re_cache.i419, align 4, !dbg !12639
  %313 = load i32, i32* %bits.addr.i415, align 4, !dbg !12640
  %conv.i447 = trunc i32 %313 to i8, !dbg !12640
  %call2.i448 = call i32 @NEG_USR32(i32 %312, i8 signext %conv.i447) #12, !dbg !12641
  store i32 %call2.i448, i32* %index1.i423, align 4, !dbg !12642
  %314 = load i32, i32* %index1.i423, align 4, !dbg !12643
  %idxprom.i449 = zext i32 %314 to i64, !dbg !12644
  %315 = load [2 x i16]*, [2 x i16]** %table.addr.i414, align 8, !dbg !12644
  %arrayidx.i450 = getelementptr inbounds [2 x i16], [2 x i16]* %315, i64 %idxprom.i449, !dbg !12644
  %arrayidx3.i451 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i450, i64 0, i64 0, !dbg !12644
  %316 = load i16, i16* %arrayidx3.i451, align 2, !dbg !12644
  %conv4.i452 = sext i16 %316 to i32, !dbg !12644
  store i32 %conv4.i452, i32* %code.i417, align 4, !dbg !12645
  %317 = load i32, i32* %index1.i423, align 4, !dbg !12646
  %idxprom5.i453 = zext i32 %317 to i64, !dbg !12647
  %318 = load [2 x i16]*, [2 x i16]** %table.addr.i414, align 8, !dbg !12647
  %arrayidx6.i454 = getelementptr inbounds [2 x i16], [2 x i16]* %318, i64 %idxprom5.i453, !dbg !12647
  %arrayidx7.i455 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i454, i64 0, i64 1, !dbg !12647
  %319 = load i16, i16* %arrayidx7.i455, align 2, !dbg !12647
  %conv8.i456 = sext i16 %319 to i32, !dbg !12647
  store i32 %conv8.i456, i32* %n.i421, align 4, !dbg !12648
  %320 = load i32, i32* %max_depth.addr.i416, align 4, !dbg !12649
  %cmp.i457 = icmp sgt i32 %320, 1, !dbg !12650
  br i1 %cmp.i457, label %land.lhs.true.i459, label %if.end68.i546, !dbg !12651

land.lhs.true.i459:                               ; preds = %cond.end
  %321 = load i32, i32* %n.i421, align 4, !dbg !12652
  %cmp10.i458 = icmp slt i32 %321, 0, !dbg !12653
  br i1 %cmp10.i458, label %if.then.i462, label %if.end68.i546, !dbg !12654

if.then.i462:                                     ; preds = %land.lhs.true.i459
  %322 = load i32, i32* %re_size_plus8.i420, align 4, !dbg !12655
  %323 = load i32, i32* %re_index.i418, align 4, !dbg !12656
  %324 = load i32, i32* %bits.addr.i415, align 4, !dbg !12657
  %add.i460 = add i32 %323, %324, !dbg !12658
  %cmp12.i461 = icmp ugt i32 %322, %add.i460, !dbg !12659
  br i1 %cmp12.i461, label %cond.true.i464, label %cond.false.i465, !dbg !12660

cond.true.i464:                                   ; preds = %if.then.i462
  %325 = load i32, i32* %re_index.i418, align 4, !dbg !12661
  %326 = load i32, i32* %bits.addr.i415, align 4, !dbg !12662
  %add14.i463 = add i32 %325, %326, !dbg !12663
  br label %cond.end.i501, !dbg !12664

cond.false.i465:                                  ; preds = %if.then.i462
  %327 = load i32, i32* %re_size_plus8.i420, align 4, !dbg !12665
  br label %cond.end.i501, !dbg !12666

cond.end.i501:                                    ; preds = %cond.false.i465, %cond.true.i464
  %cond.i466 = phi i32 [ %add14.i463, %cond.true.i464 ], [ %327, %cond.false.i465 ], !dbg !12667
  store i32 %cond.i466, i32* %re_index.i418, align 4, !dbg !12668
  %328 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12669
  %buffer15.i467 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %328, i32 0, i32 0, !dbg !12670
  %329 = load i8*, i8** %buffer15.i467, align 8, !dbg !12670
  %330 = load i32, i32* %re_index.i418, align 4, !dbg !12671
  %shr16.i468 = lshr i32 %330, 3, !dbg !12672
  %idx.ext17.i469 = zext i32 %shr16.i468 to i64, !dbg !12673
  %add.ptr18.i470 = getelementptr inbounds i8, i8* %329, i64 %idx.ext17.i469, !dbg !12673
  %331 = bitcast i8* %add.ptr18.i470 to %union.unaligned_32*, !dbg !12674
  %l19.i471 = bitcast %union.unaligned_32* %331 to i32*, !dbg !12674
  %332 = load i32, i32* %l19.i471, align 1, !dbg !12674
  store i32 %332, i32* %x.addr.i81.i411, align 4, !dbg !12675
  %333 = load i32, i32* %x.addr.i81.i411, align 4, !dbg !12676
  %shl.i82.i472 = shl i32 %333, 8, !dbg !12677
  %and.i83.i473 = and i32 %shl.i82.i472, 65280, !dbg !12678
  %334 = load i32, i32* %x.addr.i81.i411, align 4, !dbg !12679
  %shr.i84.i474 = lshr i32 %334, 8, !dbg !12680
  %and1.i85.i475 = and i32 %shr.i84.i474, 255, !dbg !12681
  %or.i86.i476 = or i32 %and.i83.i473, %and1.i85.i475, !dbg !12682
  %shl2.i87.i477 = shl i32 %or.i86.i476, 16, !dbg !12683
  %335 = load i32, i32* %x.addr.i81.i411, align 4, !dbg !12684
  %shr3.i88.i478 = lshr i32 %335, 16, !dbg !12685
  %shl4.i89.i479 = shl i32 %shr3.i88.i478, 8, !dbg !12686
  %and5.i90.i480 = and i32 %shl4.i89.i479, 65280, !dbg !12687
  %336 = load i32, i32* %x.addr.i81.i411, align 4, !dbg !12688
  %shr6.i91.i481 = lshr i32 %336, 16, !dbg !12689
  %shr7.i92.i482 = lshr i32 %shr6.i91.i481, 8, !dbg !12690
  %and8.i93.i483 = and i32 %shr7.i92.i482, 255, !dbg !12691
  %or9.i94.i484 = or i32 %and5.i90.i480, %and8.i93.i483, !dbg !12692
  %or10.i95.i485 = or i32 %shl2.i87.i477, %or9.i94.i484, !dbg !12693
  %337 = load i32, i32* %re_index.i418, align 4, !dbg !12694
  %and21.i486 = and i32 %337, 7, !dbg !12695
  %shl22.i487 = shl i32 %or10.i95.i485, %and21.i486, !dbg !12696
  store i32 %shl22.i487, i32* %re_cache.i419, align 4, !dbg !12697
  %338 = load i32, i32* %n.i421, align 4, !dbg !12698
  %sub.i488 = sub nsw i32 0, %338, !dbg !12699
  store i32 %sub.i488, i32* %nb_bits.i422, align 4, !dbg !12700
  %339 = load i32, i32* %re_cache.i419, align 4, !dbg !12701
  %340 = load i32, i32* %nb_bits.i422, align 4, !dbg !12702
  %conv23.i489 = trunc i32 %340 to i8, !dbg !12702
  %call24.i490 = call i32 @NEG_USR32(i32 %339, i8 signext %conv23.i489) #12, !dbg !12703
  %341 = load i32, i32* %code.i417, align 4, !dbg !12704
  %add25.i491 = add i32 %call24.i490, %341, !dbg !12705
  store i32 %add25.i491, i32* %index1.i423, align 4, !dbg !12706
  %342 = load i32, i32* %index1.i423, align 4, !dbg !12707
  %idxprom26.i492 = zext i32 %342 to i64, !dbg !12708
  %343 = load [2 x i16]*, [2 x i16]** %table.addr.i414, align 8, !dbg !12708
  %arrayidx27.i493 = getelementptr inbounds [2 x i16], [2 x i16]* %343, i64 %idxprom26.i492, !dbg !12708
  %arrayidx28.i494 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i493, i64 0, i64 0, !dbg !12708
  %344 = load i16, i16* %arrayidx28.i494, align 2, !dbg !12708
  %conv29.i495 = sext i16 %344 to i32, !dbg !12708
  store i32 %conv29.i495, i32* %code.i417, align 4, !dbg !12709
  %345 = load i32, i32* %index1.i423, align 4, !dbg !12710
  %idxprom30.i496 = zext i32 %345 to i64, !dbg !12711
  %346 = load [2 x i16]*, [2 x i16]** %table.addr.i414, align 8, !dbg !12711
  %arrayidx31.i497 = getelementptr inbounds [2 x i16], [2 x i16]* %346, i64 %idxprom30.i496, !dbg !12711
  %arrayidx32.i498 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i497, i64 0, i64 1, !dbg !12711
  %347 = load i16, i16* %arrayidx32.i498, align 2, !dbg !12711
  %conv33.i499 = sext i16 %347 to i32, !dbg !12711
  store i32 %conv33.i499, i32* %n.i421, align 4, !dbg !12712
  %348 = load i32, i32* %max_depth.addr.i416, align 4, !dbg !12713
  %cmp34.i500 = icmp sgt i32 %348, 2, !dbg !12714
  br i1 %cmp34.i500, label %land.lhs.true36.i503, label %if.end.i545, !dbg !12715

land.lhs.true36.i503:                             ; preds = %cond.end.i501
  %349 = load i32, i32* %n.i421, align 4, !dbg !12716
  %cmp37.i502 = icmp slt i32 %349, 0, !dbg !12717
  br i1 %cmp37.i502, label %if.then39.i506, label %if.end.i545, !dbg !12718

if.then39.i506:                                   ; preds = %land.lhs.true36.i503
  %350 = load i32, i32* %re_size_plus8.i420, align 4, !dbg !12719
  %351 = load i32, i32* %re_index.i418, align 4, !dbg !12720
  %352 = load i32, i32* %nb_bits.i422, align 4, !dbg !12721
  %add40.i504 = add i32 %351, %352, !dbg !12722
  %cmp41.i505 = icmp ugt i32 %350, %add40.i504, !dbg !12723
  br i1 %cmp41.i505, label %cond.true43.i508, label %cond.false45.i509, !dbg !12724

cond.true43.i508:                                 ; preds = %if.then39.i506
  %353 = load i32, i32* %re_index.i418, align 4, !dbg !12725
  %354 = load i32, i32* %nb_bits.i422, align 4, !dbg !12726
  %add44.i507 = add i32 %353, %354, !dbg !12727
  br label %cond.end46.i544, !dbg !12728

cond.false45.i509:                                ; preds = %if.then39.i506
  %355 = load i32, i32* %re_size_plus8.i420, align 4, !dbg !12729
  br label %cond.end46.i544, !dbg !12730

cond.end46.i544:                                  ; preds = %cond.false45.i509, %cond.true43.i508
  %cond47.i510 = phi i32 [ %add44.i507, %cond.true43.i508 ], [ %355, %cond.false45.i509 ], !dbg !12731
  store i32 %cond47.i510, i32* %re_index.i418, align 4, !dbg !12732
  %356 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12733
  %buffer48.i511 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %356, i32 0, i32 0, !dbg !12734
  %357 = load i8*, i8** %buffer48.i511, align 8, !dbg !12734
  %358 = load i32, i32* %re_index.i418, align 4, !dbg !12735
  %shr49.i512 = lshr i32 %358, 3, !dbg !12736
  %idx.ext50.i513 = zext i32 %shr49.i512 to i64, !dbg !12737
  %add.ptr51.i514 = getelementptr inbounds i8, i8* %357, i64 %idx.ext50.i513, !dbg !12737
  %359 = bitcast i8* %add.ptr51.i514 to %union.unaligned_32*, !dbg !12738
  %l52.i515 = bitcast %union.unaligned_32* %359 to i32*, !dbg !12738
  %360 = load i32, i32* %l52.i515, align 1, !dbg !12738
  store i32 %360, i32* %x.addr.i96.i410, align 4, !dbg !12739
  %361 = load i32, i32* %x.addr.i96.i410, align 4, !dbg !12740
  %shl.i97.i516 = shl i32 %361, 8, !dbg !12741
  %and.i98.i517 = and i32 %shl.i97.i516, 65280, !dbg !12742
  %362 = load i32, i32* %x.addr.i96.i410, align 4, !dbg !12743
  %shr.i99.i518 = lshr i32 %362, 8, !dbg !12744
  %and1.i100.i519 = and i32 %shr.i99.i518, 255, !dbg !12745
  %or.i101.i520 = or i32 %and.i98.i517, %and1.i100.i519, !dbg !12746
  %shl2.i102.i521 = shl i32 %or.i101.i520, 16, !dbg !12747
  %363 = load i32, i32* %x.addr.i96.i410, align 4, !dbg !12748
  %shr3.i103.i522 = lshr i32 %363, 16, !dbg !12749
  %shl4.i104.i523 = shl i32 %shr3.i103.i522, 8, !dbg !12750
  %and5.i105.i524 = and i32 %shl4.i104.i523, 65280, !dbg !12751
  %364 = load i32, i32* %x.addr.i96.i410, align 4, !dbg !12752
  %shr6.i106.i525 = lshr i32 %364, 16, !dbg !12753
  %shr7.i107.i526 = lshr i32 %shr6.i106.i525, 8, !dbg !12754
  %and8.i108.i527 = and i32 %shr7.i107.i526, 255, !dbg !12755
  %or9.i109.i528 = or i32 %and5.i105.i524, %and8.i108.i527, !dbg !12756
  %or10.i110.i529 = or i32 %shl2.i102.i521, %or9.i109.i528, !dbg !12757
  %365 = load i32, i32* %re_index.i418, align 4, !dbg !12758
  %and54.i530 = and i32 %365, 7, !dbg !12759
  %shl55.i531 = shl i32 %or10.i110.i529, %and54.i530, !dbg !12760
  store i32 %shl55.i531, i32* %re_cache.i419, align 4, !dbg !12761
  %366 = load i32, i32* %n.i421, align 4, !dbg !12762
  %sub56.i532 = sub nsw i32 0, %366, !dbg !12763
  store i32 %sub56.i532, i32* %nb_bits.i422, align 4, !dbg !12764
  %367 = load i32, i32* %re_cache.i419, align 4, !dbg !12765
  %368 = load i32, i32* %nb_bits.i422, align 4, !dbg !12766
  %conv57.i533 = trunc i32 %368 to i8, !dbg !12766
  %call58.i534 = call i32 @NEG_USR32(i32 %367, i8 signext %conv57.i533) #12, !dbg !12767
  %369 = load i32, i32* %code.i417, align 4, !dbg !12768
  %add59.i535 = add i32 %call58.i534, %369, !dbg !12769
  store i32 %add59.i535, i32* %index1.i423, align 4, !dbg !12770
  %370 = load i32, i32* %index1.i423, align 4, !dbg !12771
  %idxprom60.i536 = zext i32 %370 to i64, !dbg !12772
  %371 = load [2 x i16]*, [2 x i16]** %table.addr.i414, align 8, !dbg !12772
  %arrayidx61.i537 = getelementptr inbounds [2 x i16], [2 x i16]* %371, i64 %idxprom60.i536, !dbg !12772
  %arrayidx62.i538 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i537, i64 0, i64 0, !dbg !12772
  %372 = load i16, i16* %arrayidx62.i538, align 2, !dbg !12772
  %conv63.i539 = sext i16 %372 to i32, !dbg !12772
  store i32 %conv63.i539, i32* %code.i417, align 4, !dbg !12773
  %373 = load i32, i32* %index1.i423, align 4, !dbg !12774
  %idxprom64.i540 = zext i32 %373 to i64, !dbg !12775
  %374 = load [2 x i16]*, [2 x i16]** %table.addr.i414, align 8, !dbg !12775
  %arrayidx65.i541 = getelementptr inbounds [2 x i16], [2 x i16]* %374, i64 %idxprom64.i540, !dbg !12775
  %arrayidx66.i542 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i541, i64 0, i64 1, !dbg !12775
  %375 = load i16, i16* %arrayidx66.i542, align 2, !dbg !12775
  %conv67.i543 = sext i16 %375 to i32, !dbg !12775
  store i32 %conv67.i543, i32* %n.i421, align 4, !dbg !12776
  br label %if.end.i545, !dbg !12777

if.end.i545:                                      ; preds = %cond.end46.i544, %land.lhs.true36.i503, %cond.end.i501
  br label %if.end68.i546, !dbg !12778

if.end68.i546:                                    ; preds = %if.end.i545, %land.lhs.true.i459, %cond.end
  %376 = load i32, i32* %n.i421, align 4, !dbg !12779
  %377 = load i32, i32* %re_cache.i419, align 4, !dbg !12780
  %shl70.i547 = shl i32 %377, %376, !dbg !12780
  store i32 %shl70.i547, i32* %re_cache.i419, align 4, !dbg !12780
  %378 = load i32, i32* %re_size_plus8.i420, align 4, !dbg !12781
  %379 = load i32, i32* %re_index.i418, align 4, !dbg !12782
  %380 = load i32, i32* %n.i421, align 4, !dbg !12783
  %add71.i548 = add i32 %379, %380, !dbg !12784
  %cmp72.i549 = icmp ugt i32 %378, %add71.i548, !dbg !12785
  br i1 %cmp72.i549, label %cond.true74.i551, label %cond.false76.i552, !dbg !12786

cond.true74.i551:                                 ; preds = %if.end68.i546
  %381 = load i32, i32* %re_index.i418, align 4, !dbg !12787
  %382 = load i32, i32* %n.i421, align 4, !dbg !12788
  %add75.i550 = add i32 %381, %382, !dbg !12789
  br label %get_vlc2.exit555, !dbg !12790

cond.false76.i552:                                ; preds = %if.end68.i546
  %383 = load i32, i32* %re_size_plus8.i420, align 4, !dbg !12791
  br label %get_vlc2.exit555, !dbg !12792

get_vlc2.exit555:                                 ; preds = %cond.true74.i551, %cond.false76.i552
  %cond78.i553 = phi i32 [ %add75.i550, %cond.true74.i551 ], [ %383, %cond.false76.i552 ], !dbg !12793
  store i32 %cond78.i553, i32* %re_index.i418, align 4, !dbg !12794
  %384 = load i32, i32* %re_index.i418, align 4, !dbg !12795
  %385 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12796
  %index80.i554 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %385, i32 0, i32 2, !dbg !12797
  store i32 %384, i32* %index80.i554, align 8, !dbg !12798
  %386 = load i32, i32* %code.i417, align 4, !dbg !12799
  %387 = load i32, i32* %t_lav, align 4, !dbg !12800
  %sub158 = sub nsw i32 %386, %387, !dbg !12801
  %mul159 = mul nsw i32 %295, %sub158, !dbg !12802
  %add160 = add nsw i32 %conv156, %mul159, !dbg !12803
  %conv161 = trunc i32 %add160 to i8, !dbg !12599
  %388 = load i32, i32* %j, align 4, !dbg !12804
  %idxprom162 = sext i32 %388 to i64, !dbg !12805
  %389 = load i32, i32* %i, align 4, !dbg !12806
  %add163 = add nsw i32 %389, 1, !dbg !12807
  %idxprom164 = sext i32 %add163 to i64, !dbg !12805
  %390 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12805
  %env_facs_q165 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %390, i32 0, i32 22, !dbg !12808
  %arrayidx166 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q165, i64 0, i64 %idxprom164, !dbg !12805
  %arrayidx167 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx166, i64 0, i64 %idxprom162, !dbg !12805
  store i8 %conv161, i8* %arrayidx167, align 1, !dbg !12809
  %391 = load i32, i32* %j, align 4, !dbg !12810
  %idxprom168 = sext i32 %391 to i64, !dbg !12812
  %392 = load i32, i32* %i, align 4, !dbg !12813
  %add169 = add nsw i32 %392, 1, !dbg !12814
  %idxprom170 = sext i32 %add169 to i64, !dbg !12812
  %393 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12812
  %env_facs_q171 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %393, i32 0, i32 22, !dbg !12815
  %arrayidx172 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q171, i64 0, i64 %idxprom170, !dbg !12812
  %arrayidx173 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx172, i64 0, i64 %idxprom168, !dbg !12812
  %394 = load i8, i8* %arrayidx173, align 1, !dbg !12812
  %conv174 = zext i8 %394 to i32, !dbg !12812
  %cmp175 = icmp ugt i32 %conv174, 127, !dbg !12816
  br i1 %cmp175, label %if.then177, label %if.end186, !dbg !12817

if.then177:                                       ; preds = %get_vlc2.exit555
  %395 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12818
  %avctx178 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %395, i32 0, i32 1, !dbg !12820
  %396 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx178, align 8, !dbg !12820
  %397 = bitcast %struct.AVCodecContext* %396 to i8*, !dbg !12818
  %398 = load i32, i32* %j, align 4, !dbg !12821
  %idxprom179 = sext i32 %398 to i64, !dbg !12822
  %399 = load i32, i32* %i, align 4, !dbg !12823
  %add180 = add nsw i32 %399, 1, !dbg !12824
  %idxprom181 = sext i32 %add180 to i64, !dbg !12822
  %400 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12822
  %env_facs_q182 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %400, i32 0, i32 22, !dbg !12825
  %arrayidx183 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q182, i64 0, i64 %idxprom181, !dbg !12822
  %arrayidx184 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx183, i64 0, i64 %idxprom179, !dbg !12822
  %401 = load i8, i8* %arrayidx184, align 1, !dbg !12822
  %conv185 = zext i8 %401 to i32, !dbg !12822
  call void (i8*, i32, i8*, ...) @av_log(i8* %397, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i32 0, i32 0), i32 %conv185), !dbg !12826
  store i32 -1094995529, i32* %retval, align 4, !dbg !12827
  br label %return, !dbg !12827

if.end186:                                        ; preds = %get_vlc2.exit555
  br label %for.inc187, !dbg !12828

for.inc187:                                       ; preds = %if.end186
  %402 = load i32, i32* %j, align 4, !dbg !12829
  %inc188 = add nsw i32 %402, 1, !dbg !12829
  store i32 %inc188, i32* %j, align 4, !dbg !12829
  br label %for.cond137, !dbg !12831, !llvm.loop !12832

for.end189:                                       ; preds = %for.cond137
  br label %if.end190

if.end190:                                        ; preds = %for.end189, %for.end135
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %for.end
  br label %if.end253, !dbg !12834

if.else192:                                       ; preds = %for.body
  %403 = load i32, i32* %delta, align 4, !dbg !12835
  %404 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12836
  %405 = load i32, i32* %bits, align 4, !dbg !12837
  %call193 = call i32 @get_bits(%struct.GetBitContext* %404, i32 %405), !dbg !12838
  %mul194 = mul i32 %403, %call193, !dbg !12839
  %conv195 = trunc i32 %mul194 to i8, !dbg !12835
  %406 = load i32, i32* %i, align 4, !dbg !12840
  %add196 = add nsw i32 %406, 1, !dbg !12841
  %idxprom197 = sext i32 %add196 to i64, !dbg !12842
  %407 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12842
  %env_facs_q198 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %407, i32 0, i32 22, !dbg !12843
  %arrayidx199 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q198, i64 0, i64 %idxprom197, !dbg !12842
  %arrayidx200 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx199, i64 0, i64 0, !dbg !12842
  store i8 %conv195, i8* %arrayidx200, align 16, !dbg !12844
  store i32 1, i32* %j, align 4, !dbg !12845
  br label %for.cond201, !dbg !12846

for.cond201:                                      ; preds = %for.inc250, %if.else192
  %408 = load i32, i32* %j, align 4, !dbg !12847
  %409 = load i32, i32* %i, align 4, !dbg !12849
  %add202 = add nsw i32 %409, 1, !dbg !12850
  %idxprom203 = sext i32 %add202 to i64, !dbg !12851
  %410 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12851
  %bs_freq_res204 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %410, i32 0, i32 3, !dbg !12852
  %arrayidx205 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res204, i64 0, i64 %idxprom203, !dbg !12851
  %411 = load i8, i8* %arrayidx205, align 1, !dbg !12851
  %idxprom206 = zext i8 %411 to i64, !dbg !12853
  %412 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !12853
  %n207 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %412, i32 0, i32 19, !dbg !12854
  %arrayidx208 = getelementptr inbounds [2 x i32], [2 x i32]* %n207, i64 0, i64 %idxprom206, !dbg !12853
  %413 = load i32, i32* %arrayidx208, align 4, !dbg !12853
  %cmp209 = icmp slt i32 %408, %413, !dbg !12855
  br i1 %cmp209, label %for.body211, label %for.end252, !dbg !12856

for.body211:                                      ; preds = %for.cond201
  %414 = load i32, i32* %j, align 4, !dbg !12857
  %sub212 = sub nsw i32 %414, 1, !dbg !12858
  %idxprom213 = sext i32 %sub212 to i64, !dbg !12859
  %415 = load i32, i32* %i, align 4, !dbg !12860
  %add214 = add nsw i32 %415, 1, !dbg !12861
  %idxprom215 = sext i32 %add214 to i64, !dbg !12859
  %416 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12859
  %env_facs_q216 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %416, i32 0, i32 22, !dbg !12862
  %arrayidx217 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q216, i64 0, i64 %idxprom215, !dbg !12859
  %arrayidx218 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx217, i64 0, i64 %idxprom213, !dbg !12859
  %417 = load i8, i8* %arrayidx218, align 1, !dbg !12859
  %conv219 = zext i8 %417 to i32, !dbg !12859
  %418 = load i32, i32* %delta, align 4, !dbg !12863
  %419 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12864
  %420 = load [2 x i16]*, [2 x i16]** %f_huff, align 8, !dbg !12865
  store %struct.GetBitContext* %419, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !12866
  store [2 x i16]* %420, [2 x i16]** %table.addr.i560, align 8, !dbg !12866
  store i32 9, i32* %bits.addr.i561, align 4, !dbg !12866
  store i32 3, i32* %max_depth.addr.i562, align 4, !dbg !12866
  %421 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !12867
  %index.i570 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %421, i32 0, i32 2, !dbg !12868
  %422 = load i32, i32* %index.i570, align 8, !dbg !12868
  store i32 %422, i32* %re_index.i564, align 4, !dbg !11844
  %423 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !12869
  %size_in_bits_plus8.i571 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %423, i32 0, i32 4, !dbg !12870
  %424 = load i32, i32* %size_in_bits_plus8.i571, align 8, !dbg !12870
  store i32 %424, i32* %re_size_plus8.i566, align 4, !dbg !11848
  %425 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !12871
  %buffer.i572 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %425, i32 0, i32 0, !dbg !12872
  %426 = load i8*, i8** %buffer.i572, align 8, !dbg !12872
  %427 = load i32, i32* %re_index.i564, align 4, !dbg !12873
  %shr.i573 = lshr i32 %427, 3, !dbg !12874
  %idx.ext.i574 = zext i32 %shr.i573 to i64, !dbg !12875
  %add.ptr.i575 = getelementptr inbounds i8, i8* %426, i64 %idx.ext.i574, !dbg !12875
  %428 = bitcast i8* %add.ptr.i575 to %union.unaligned_32*, !dbg !12876
  %l.i576 = bitcast %union.unaligned_32* %428 to i32*, !dbg !12876
  %429 = load i32, i32* %l.i576, align 1, !dbg !12876
  store i32 %429, i32* %x.addr.i.i558, align 4, !dbg !12877
  %430 = load i32, i32* %x.addr.i.i558, align 4, !dbg !12878
  %shl.i.i577 = shl i32 %430, 8, !dbg !12879
  %and.i.i578 = and i32 %shl.i.i577, 65280, !dbg !12880
  %431 = load i32, i32* %x.addr.i.i558, align 4, !dbg !12881
  %shr.i.i579 = lshr i32 %431, 8, !dbg !12882
  %and1.i.i580 = and i32 %shr.i.i579, 255, !dbg !12883
  %or.i.i581 = or i32 %and.i.i578, %and1.i.i580, !dbg !12884
  %shl2.i.i582 = shl i32 %or.i.i581, 16, !dbg !12885
  %432 = load i32, i32* %x.addr.i.i558, align 4, !dbg !12886
  %shr3.i.i583 = lshr i32 %432, 16, !dbg !12887
  %shl4.i.i584 = shl i32 %shr3.i.i583, 8, !dbg !12888
  %and5.i.i585 = and i32 %shl4.i.i584, 65280, !dbg !12889
  %433 = load i32, i32* %x.addr.i.i558, align 4, !dbg !12890
  %shr6.i.i586 = lshr i32 %433, 16, !dbg !12891
  %shr7.i.i587 = lshr i32 %shr6.i.i586, 8, !dbg !12892
  %and8.i.i588 = and i32 %shr7.i.i587, 255, !dbg !12893
  %or9.i.i589 = or i32 %and5.i.i585, %and8.i.i588, !dbg !12894
  %or10.i.i590 = or i32 %shl2.i.i582, %or9.i.i589, !dbg !12895
  %434 = load i32, i32* %re_index.i564, align 4, !dbg !12896
  %and.i591 = and i32 %434, 7, !dbg !12897
  %shl.i592 = shl i32 %or10.i.i590, %and.i591, !dbg !12898
  store i32 %shl.i592, i32* %re_cache.i565, align 4, !dbg !12899
  %435 = load i32, i32* %re_cache.i565, align 4, !dbg !12900
  %436 = load i32, i32* %bits.addr.i561, align 4, !dbg !12901
  %conv.i593 = trunc i32 %436 to i8, !dbg !12901
  %call2.i594 = call i32 @NEG_USR32(i32 %435, i8 signext %conv.i593) #12, !dbg !12902
  store i32 %call2.i594, i32* %index1.i569, align 4, !dbg !12903
  %437 = load i32, i32* %index1.i569, align 4, !dbg !12904
  %idxprom.i595 = zext i32 %437 to i64, !dbg !12905
  %438 = load [2 x i16]*, [2 x i16]** %table.addr.i560, align 8, !dbg !12905
  %arrayidx.i596 = getelementptr inbounds [2 x i16], [2 x i16]* %438, i64 %idxprom.i595, !dbg !12905
  %arrayidx3.i597 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i596, i64 0, i64 0, !dbg !12905
  %439 = load i16, i16* %arrayidx3.i597, align 2, !dbg !12905
  %conv4.i598 = sext i16 %439 to i32, !dbg !12905
  store i32 %conv4.i598, i32* %code.i563, align 4, !dbg !12906
  %440 = load i32, i32* %index1.i569, align 4, !dbg !12907
  %idxprom5.i599 = zext i32 %440 to i64, !dbg !12908
  %441 = load [2 x i16]*, [2 x i16]** %table.addr.i560, align 8, !dbg !12908
  %arrayidx6.i600 = getelementptr inbounds [2 x i16], [2 x i16]* %441, i64 %idxprom5.i599, !dbg !12908
  %arrayidx7.i601 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i600, i64 0, i64 1, !dbg !12908
  %442 = load i16, i16* %arrayidx7.i601, align 2, !dbg !12908
  %conv8.i602 = sext i16 %442 to i32, !dbg !12908
  store i32 %conv8.i602, i32* %n.i567, align 4, !dbg !12909
  %443 = load i32, i32* %max_depth.addr.i562, align 4, !dbg !12910
  %cmp.i603 = icmp sgt i32 %443, 1, !dbg !12911
  br i1 %cmp.i603, label %land.lhs.true.i605, label %if.end68.i692, !dbg !12912

land.lhs.true.i605:                               ; preds = %for.body211
  %444 = load i32, i32* %n.i567, align 4, !dbg !12913
  %cmp10.i604 = icmp slt i32 %444, 0, !dbg !12914
  br i1 %cmp10.i604, label %if.then.i608, label %if.end68.i692, !dbg !12915

if.then.i608:                                     ; preds = %land.lhs.true.i605
  %445 = load i32, i32* %re_size_plus8.i566, align 4, !dbg !12916
  %446 = load i32, i32* %re_index.i564, align 4, !dbg !12917
  %447 = load i32, i32* %bits.addr.i561, align 4, !dbg !12918
  %add.i606 = add i32 %446, %447, !dbg !12919
  %cmp12.i607 = icmp ugt i32 %445, %add.i606, !dbg !12920
  br i1 %cmp12.i607, label %cond.true.i610, label %cond.false.i611, !dbg !12921

cond.true.i610:                                   ; preds = %if.then.i608
  %448 = load i32, i32* %re_index.i564, align 4, !dbg !12922
  %449 = load i32, i32* %bits.addr.i561, align 4, !dbg !12923
  %add14.i609 = add i32 %448, %449, !dbg !12924
  br label %cond.end.i647, !dbg !12925

cond.false.i611:                                  ; preds = %if.then.i608
  %450 = load i32, i32* %re_size_plus8.i566, align 4, !dbg !12926
  br label %cond.end.i647, !dbg !12927

cond.end.i647:                                    ; preds = %cond.false.i611, %cond.true.i610
  %cond.i612 = phi i32 [ %add14.i609, %cond.true.i610 ], [ %450, %cond.false.i611 ], !dbg !12928
  store i32 %cond.i612, i32* %re_index.i564, align 4, !dbg !12929
  %451 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !12930
  %buffer15.i613 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %451, i32 0, i32 0, !dbg !12931
  %452 = load i8*, i8** %buffer15.i613, align 8, !dbg !12931
  %453 = load i32, i32* %re_index.i564, align 4, !dbg !12932
  %shr16.i614 = lshr i32 %453, 3, !dbg !12933
  %idx.ext17.i615 = zext i32 %shr16.i614 to i64, !dbg !12934
  %add.ptr18.i616 = getelementptr inbounds i8, i8* %452, i64 %idx.ext17.i615, !dbg !12934
  %454 = bitcast i8* %add.ptr18.i616 to %union.unaligned_32*, !dbg !12935
  %l19.i617 = bitcast %union.unaligned_32* %454 to i32*, !dbg !12935
  %455 = load i32, i32* %l19.i617, align 1, !dbg !12935
  store i32 %455, i32* %x.addr.i81.i557, align 4, !dbg !12936
  %456 = load i32, i32* %x.addr.i81.i557, align 4, !dbg !12937
  %shl.i82.i618 = shl i32 %456, 8, !dbg !12938
  %and.i83.i619 = and i32 %shl.i82.i618, 65280, !dbg !12939
  %457 = load i32, i32* %x.addr.i81.i557, align 4, !dbg !12940
  %shr.i84.i620 = lshr i32 %457, 8, !dbg !12941
  %and1.i85.i621 = and i32 %shr.i84.i620, 255, !dbg !12942
  %or.i86.i622 = or i32 %and.i83.i619, %and1.i85.i621, !dbg !12943
  %shl2.i87.i623 = shl i32 %or.i86.i622, 16, !dbg !12944
  %458 = load i32, i32* %x.addr.i81.i557, align 4, !dbg !12945
  %shr3.i88.i624 = lshr i32 %458, 16, !dbg !12946
  %shl4.i89.i625 = shl i32 %shr3.i88.i624, 8, !dbg !12947
  %and5.i90.i626 = and i32 %shl4.i89.i625, 65280, !dbg !12948
  %459 = load i32, i32* %x.addr.i81.i557, align 4, !dbg !12949
  %shr6.i91.i627 = lshr i32 %459, 16, !dbg !12950
  %shr7.i92.i628 = lshr i32 %shr6.i91.i627, 8, !dbg !12951
  %and8.i93.i629 = and i32 %shr7.i92.i628, 255, !dbg !12952
  %or9.i94.i630 = or i32 %and5.i90.i626, %and8.i93.i629, !dbg !12953
  %or10.i95.i631 = or i32 %shl2.i87.i623, %or9.i94.i630, !dbg !12954
  %460 = load i32, i32* %re_index.i564, align 4, !dbg !12955
  %and21.i632 = and i32 %460, 7, !dbg !12956
  %shl22.i633 = shl i32 %or10.i95.i631, %and21.i632, !dbg !12957
  store i32 %shl22.i633, i32* %re_cache.i565, align 4, !dbg !12958
  %461 = load i32, i32* %n.i567, align 4, !dbg !12959
  %sub.i634 = sub nsw i32 0, %461, !dbg !12960
  store i32 %sub.i634, i32* %nb_bits.i568, align 4, !dbg !12961
  %462 = load i32, i32* %re_cache.i565, align 4, !dbg !12962
  %463 = load i32, i32* %nb_bits.i568, align 4, !dbg !12963
  %conv23.i635 = trunc i32 %463 to i8, !dbg !12963
  %call24.i636 = call i32 @NEG_USR32(i32 %462, i8 signext %conv23.i635) #12, !dbg !12964
  %464 = load i32, i32* %code.i563, align 4, !dbg !12965
  %add25.i637 = add i32 %call24.i636, %464, !dbg !12966
  store i32 %add25.i637, i32* %index1.i569, align 4, !dbg !12967
  %465 = load i32, i32* %index1.i569, align 4, !dbg !12968
  %idxprom26.i638 = zext i32 %465 to i64, !dbg !12969
  %466 = load [2 x i16]*, [2 x i16]** %table.addr.i560, align 8, !dbg !12969
  %arrayidx27.i639 = getelementptr inbounds [2 x i16], [2 x i16]* %466, i64 %idxprom26.i638, !dbg !12969
  %arrayidx28.i640 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i639, i64 0, i64 0, !dbg !12969
  %467 = load i16, i16* %arrayidx28.i640, align 2, !dbg !12969
  %conv29.i641 = sext i16 %467 to i32, !dbg !12969
  store i32 %conv29.i641, i32* %code.i563, align 4, !dbg !12970
  %468 = load i32, i32* %index1.i569, align 4, !dbg !12971
  %idxprom30.i642 = zext i32 %468 to i64, !dbg !12972
  %469 = load [2 x i16]*, [2 x i16]** %table.addr.i560, align 8, !dbg !12972
  %arrayidx31.i643 = getelementptr inbounds [2 x i16], [2 x i16]* %469, i64 %idxprom30.i642, !dbg !12972
  %arrayidx32.i644 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i643, i64 0, i64 1, !dbg !12972
  %470 = load i16, i16* %arrayidx32.i644, align 2, !dbg !12972
  %conv33.i645 = sext i16 %470 to i32, !dbg !12972
  store i32 %conv33.i645, i32* %n.i567, align 4, !dbg !12973
  %471 = load i32, i32* %max_depth.addr.i562, align 4, !dbg !12974
  %cmp34.i646 = icmp sgt i32 %471, 2, !dbg !12975
  br i1 %cmp34.i646, label %land.lhs.true36.i649, label %if.end.i691, !dbg !12976

land.lhs.true36.i649:                             ; preds = %cond.end.i647
  %472 = load i32, i32* %n.i567, align 4, !dbg !12977
  %cmp37.i648 = icmp slt i32 %472, 0, !dbg !12978
  br i1 %cmp37.i648, label %if.then39.i652, label %if.end.i691, !dbg !12979

if.then39.i652:                                   ; preds = %land.lhs.true36.i649
  %473 = load i32, i32* %re_size_plus8.i566, align 4, !dbg !12980
  %474 = load i32, i32* %re_index.i564, align 4, !dbg !12981
  %475 = load i32, i32* %nb_bits.i568, align 4, !dbg !12982
  %add40.i650 = add i32 %474, %475, !dbg !12983
  %cmp41.i651 = icmp ugt i32 %473, %add40.i650, !dbg !12984
  br i1 %cmp41.i651, label %cond.true43.i654, label %cond.false45.i655, !dbg !12985

cond.true43.i654:                                 ; preds = %if.then39.i652
  %476 = load i32, i32* %re_index.i564, align 4, !dbg !12986
  %477 = load i32, i32* %nb_bits.i568, align 4, !dbg !12987
  %add44.i653 = add i32 %476, %477, !dbg !12988
  br label %cond.end46.i690, !dbg !12989

cond.false45.i655:                                ; preds = %if.then39.i652
  %478 = load i32, i32* %re_size_plus8.i566, align 4, !dbg !12990
  br label %cond.end46.i690, !dbg !12991

cond.end46.i690:                                  ; preds = %cond.false45.i655, %cond.true43.i654
  %cond47.i656 = phi i32 [ %add44.i653, %cond.true43.i654 ], [ %478, %cond.false45.i655 ], !dbg !12992
  store i32 %cond47.i656, i32* %re_index.i564, align 4, !dbg !12993
  %479 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !12994
  %buffer48.i657 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %479, i32 0, i32 0, !dbg !12995
  %480 = load i8*, i8** %buffer48.i657, align 8, !dbg !12995
  %481 = load i32, i32* %re_index.i564, align 4, !dbg !12996
  %shr49.i658 = lshr i32 %481, 3, !dbg !12997
  %idx.ext50.i659 = zext i32 %shr49.i658 to i64, !dbg !12998
  %add.ptr51.i660 = getelementptr inbounds i8, i8* %480, i64 %idx.ext50.i659, !dbg !12998
  %482 = bitcast i8* %add.ptr51.i660 to %union.unaligned_32*, !dbg !12999
  %l52.i661 = bitcast %union.unaligned_32* %482 to i32*, !dbg !12999
  %483 = load i32, i32* %l52.i661, align 1, !dbg !12999
  store i32 %483, i32* %x.addr.i96.i556, align 4, !dbg !13000
  %484 = load i32, i32* %x.addr.i96.i556, align 4, !dbg !13001
  %shl.i97.i662 = shl i32 %484, 8, !dbg !13002
  %and.i98.i663 = and i32 %shl.i97.i662, 65280, !dbg !13003
  %485 = load i32, i32* %x.addr.i96.i556, align 4, !dbg !13004
  %shr.i99.i664 = lshr i32 %485, 8, !dbg !13005
  %and1.i100.i665 = and i32 %shr.i99.i664, 255, !dbg !13006
  %or.i101.i666 = or i32 %and.i98.i663, %and1.i100.i665, !dbg !13007
  %shl2.i102.i667 = shl i32 %or.i101.i666, 16, !dbg !13008
  %486 = load i32, i32* %x.addr.i96.i556, align 4, !dbg !13009
  %shr3.i103.i668 = lshr i32 %486, 16, !dbg !13010
  %shl4.i104.i669 = shl i32 %shr3.i103.i668, 8, !dbg !13011
  %and5.i105.i670 = and i32 %shl4.i104.i669, 65280, !dbg !13012
  %487 = load i32, i32* %x.addr.i96.i556, align 4, !dbg !13013
  %shr6.i106.i671 = lshr i32 %487, 16, !dbg !13014
  %shr7.i107.i672 = lshr i32 %shr6.i106.i671, 8, !dbg !13015
  %and8.i108.i673 = and i32 %shr7.i107.i672, 255, !dbg !13016
  %or9.i109.i674 = or i32 %and5.i105.i670, %and8.i108.i673, !dbg !13017
  %or10.i110.i675 = or i32 %shl2.i102.i667, %or9.i109.i674, !dbg !13018
  %488 = load i32, i32* %re_index.i564, align 4, !dbg !13019
  %and54.i676 = and i32 %488, 7, !dbg !13020
  %shl55.i677 = shl i32 %or10.i110.i675, %and54.i676, !dbg !13021
  store i32 %shl55.i677, i32* %re_cache.i565, align 4, !dbg !13022
  %489 = load i32, i32* %n.i567, align 4, !dbg !13023
  %sub56.i678 = sub nsw i32 0, %489, !dbg !13024
  store i32 %sub56.i678, i32* %nb_bits.i568, align 4, !dbg !13025
  %490 = load i32, i32* %re_cache.i565, align 4, !dbg !13026
  %491 = load i32, i32* %nb_bits.i568, align 4, !dbg !13027
  %conv57.i679 = trunc i32 %491 to i8, !dbg !13027
  %call58.i680 = call i32 @NEG_USR32(i32 %490, i8 signext %conv57.i679) #12, !dbg !13028
  %492 = load i32, i32* %code.i563, align 4, !dbg !13029
  %add59.i681 = add i32 %call58.i680, %492, !dbg !13030
  store i32 %add59.i681, i32* %index1.i569, align 4, !dbg !13031
  %493 = load i32, i32* %index1.i569, align 4, !dbg !13032
  %idxprom60.i682 = zext i32 %493 to i64, !dbg !13033
  %494 = load [2 x i16]*, [2 x i16]** %table.addr.i560, align 8, !dbg !13033
  %arrayidx61.i683 = getelementptr inbounds [2 x i16], [2 x i16]* %494, i64 %idxprom60.i682, !dbg !13033
  %arrayidx62.i684 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i683, i64 0, i64 0, !dbg !13033
  %495 = load i16, i16* %arrayidx62.i684, align 2, !dbg !13033
  %conv63.i685 = sext i16 %495 to i32, !dbg !13033
  store i32 %conv63.i685, i32* %code.i563, align 4, !dbg !13034
  %496 = load i32, i32* %index1.i569, align 4, !dbg !13035
  %idxprom64.i686 = zext i32 %496 to i64, !dbg !13036
  %497 = load [2 x i16]*, [2 x i16]** %table.addr.i560, align 8, !dbg !13036
  %arrayidx65.i687 = getelementptr inbounds [2 x i16], [2 x i16]* %497, i64 %idxprom64.i686, !dbg !13036
  %arrayidx66.i688 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i687, i64 0, i64 1, !dbg !13036
  %498 = load i16, i16* %arrayidx66.i688, align 2, !dbg !13036
  %conv67.i689 = sext i16 %498 to i32, !dbg !13036
  store i32 %conv67.i689, i32* %n.i567, align 4, !dbg !13037
  br label %if.end.i691, !dbg !13038

if.end.i691:                                      ; preds = %cond.end46.i690, %land.lhs.true36.i649, %cond.end.i647
  br label %if.end68.i692, !dbg !13039

if.end68.i692:                                    ; preds = %if.end.i691, %land.lhs.true.i605, %for.body211
  %499 = load i32, i32* %n.i567, align 4, !dbg !13040
  %500 = load i32, i32* %re_cache.i565, align 4, !dbg !13041
  %shl70.i693 = shl i32 %500, %499, !dbg !13041
  store i32 %shl70.i693, i32* %re_cache.i565, align 4, !dbg !13041
  %501 = load i32, i32* %re_size_plus8.i566, align 4, !dbg !13042
  %502 = load i32, i32* %re_index.i564, align 4, !dbg !13043
  %503 = load i32, i32* %n.i567, align 4, !dbg !13044
  %add71.i694 = add i32 %502, %503, !dbg !13045
  %cmp72.i695 = icmp ugt i32 %501, %add71.i694, !dbg !13046
  br i1 %cmp72.i695, label %cond.true74.i697, label %cond.false76.i698, !dbg !13047

cond.true74.i697:                                 ; preds = %if.end68.i692
  %504 = load i32, i32* %re_index.i564, align 4, !dbg !13048
  %505 = load i32, i32* %n.i567, align 4, !dbg !13049
  %add75.i696 = add i32 %504, %505, !dbg !13050
  br label %get_vlc2.exit701, !dbg !13051

cond.false76.i698:                                ; preds = %if.end68.i692
  %506 = load i32, i32* %re_size_plus8.i566, align 4, !dbg !13052
  br label %get_vlc2.exit701, !dbg !13053

get_vlc2.exit701:                                 ; preds = %cond.true74.i697, %cond.false76.i698
  %cond78.i699 = phi i32 [ %add75.i696, %cond.true74.i697 ], [ %506, %cond.false76.i698 ], !dbg !13054
  store i32 %cond78.i699, i32* %re_index.i564, align 4, !dbg !13055
  %507 = load i32, i32* %re_index.i564, align 4, !dbg !13056
  %508 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !13057
  %index80.i700 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %508, i32 0, i32 2, !dbg !13058
  store i32 %507, i32* %index80.i700, align 8, !dbg !13059
  %509 = load i32, i32* %code.i563, align 4, !dbg !13060
  %510 = load i32, i32* %f_lav, align 4, !dbg !13061
  %sub221 = sub nsw i32 %509, %510, !dbg !13062
  %mul222 = mul nsw i32 %418, %sub221, !dbg !13063
  %add223 = add nsw i32 %conv219, %mul222, !dbg !13064
  %conv224 = trunc i32 %add223 to i8, !dbg !12859
  %511 = load i32, i32* %j, align 4, !dbg !13065
  %idxprom225 = sext i32 %511 to i64, !dbg !13066
  %512 = load i32, i32* %i, align 4, !dbg !13067
  %add226 = add nsw i32 %512, 1, !dbg !13068
  %idxprom227 = sext i32 %add226 to i64, !dbg !13066
  %513 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13066
  %env_facs_q228 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %513, i32 0, i32 22, !dbg !13069
  %arrayidx229 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q228, i64 0, i64 %idxprom227, !dbg !13066
  %arrayidx230 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx229, i64 0, i64 %idxprom225, !dbg !13066
  store i8 %conv224, i8* %arrayidx230, align 1, !dbg !13070
  %514 = load i32, i32* %j, align 4, !dbg !13071
  %idxprom231 = sext i32 %514 to i64, !dbg !13073
  %515 = load i32, i32* %i, align 4, !dbg !13074
  %add232 = add nsw i32 %515, 1, !dbg !13075
  %idxprom233 = sext i32 %add232 to i64, !dbg !13073
  %516 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13073
  %env_facs_q234 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %516, i32 0, i32 22, !dbg !13076
  %arrayidx235 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q234, i64 0, i64 %idxprom233, !dbg !13073
  %arrayidx236 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx235, i64 0, i64 %idxprom231, !dbg !13073
  %517 = load i8, i8* %arrayidx236, align 1, !dbg !13073
  %conv237 = zext i8 %517 to i32, !dbg !13073
  %cmp238 = icmp ugt i32 %conv237, 127, !dbg !13077
  br i1 %cmp238, label %if.then240, label %if.end249, !dbg !13078

if.then240:                                       ; preds = %get_vlc2.exit701
  %518 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13079
  %avctx241 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %518, i32 0, i32 1, !dbg !13081
  %519 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx241, align 8, !dbg !13081
  %520 = bitcast %struct.AVCodecContext* %519 to i8*, !dbg !13079
  %521 = load i32, i32* %j, align 4, !dbg !13082
  %idxprom242 = sext i32 %521 to i64, !dbg !13083
  %522 = load i32, i32* %i, align 4, !dbg !13084
  %add243 = add nsw i32 %522, 1, !dbg !13085
  %idxprom244 = sext i32 %add243 to i64, !dbg !13083
  %523 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13083
  %env_facs_q245 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %523, i32 0, i32 22, !dbg !13086
  %arrayidx246 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q245, i64 0, i64 %idxprom244, !dbg !13083
  %arrayidx247 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx246, i64 0, i64 %idxprom242, !dbg !13083
  %524 = load i8, i8* %arrayidx247, align 1, !dbg !13083
  %conv248 = zext i8 %524 to i32, !dbg !13083
  call void (i8*, i32, i8*, ...) @av_log(i8* %520, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i32 0, i32 0), i32 %conv248), !dbg !13087
  store i32 -1094995529, i32* %retval, align 4, !dbg !13088
  br label %return, !dbg !13088

if.end249:                                        ; preds = %get_vlc2.exit701
  br label %for.inc250, !dbg !13089

for.inc250:                                       ; preds = %if.end249
  %525 = load i32, i32* %j, align 4, !dbg !13090
  %inc251 = add nsw i32 %525, 1, !dbg !13090
  store i32 %inc251, i32* %j, align 4, !dbg !13090
  br label %for.cond201, !dbg !13092, !llvm.loop !13093

for.end252:                                       ; preds = %for.cond201
  br label %if.end253

if.end253:                                        ; preds = %for.end252, %if.end191
  br label %for.inc254, !dbg !13095

for.inc254:                                       ; preds = %if.end253
  %526 = load i32, i32* %i, align 4, !dbg !13096
  %inc255 = add nsw i32 %526, 1, !dbg !13096
  store i32 %inc255, i32* %i, align 4, !dbg !13096
  br label %for.cond, !dbg !13098, !llvm.loop !13099

for.end256:                                       ; preds = %for.cond
  %527 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13101
  %env_facs_q257 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %527, i32 0, i32 22, !dbg !13102
  %arrayidx258 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q257, i64 0, i64 0, !dbg !13101
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx258, i32 0, i32 0, !dbg !13103
  %528 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13104
  %bs_num_env259 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %528, i32 0, i32 2, !dbg !13105
  %529 = load i32, i32* %bs_num_env259, align 8, !dbg !13105
  %idxprom260 = sext i32 %529 to i64, !dbg !13106
  %530 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13106
  %env_facs_q261 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %530, i32 0, i32 22, !dbg !13107
  %arrayidx262 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q261, i64 0, i64 %idxprom260, !dbg !13106
  %arraydecay263 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx262, i32 0, i32 0, !dbg !13103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay263, i64 48, i32 16, i1 false), !dbg !13103
  store i32 0, i32* %retval, align 4, !dbg !13108
  br label %return, !dbg !13108

return:                                           ; preds = %for.end256, %if.then240, %if.then177, %if.then123, %if.then69
  %531 = load i32, i32* %retval, align 4, !dbg !13109
  ret i32 %531, !dbg !13109
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_noise(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, %struct.SBRData* %ch_data, i32 %ch) #3 !dbg !13110 {
entry:
  %x.addr.i96.i112 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i112, metadata !6588, metadata !2734), !dbg !13111
  %x.addr.i81.i113 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i113, metadata !6588, metadata !2734), !dbg !13122
  %x.addr.i.i114 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i114, metadata !6588, metadata !2734), !dbg !13124
  %s.addr.i115 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i115, metadata !11833, metadata !2734), !dbg !13126
  %table.addr.i116 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i116, metadata !11835, metadata !2734), !dbg !13127
  %bits.addr.i117 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i117, metadata !11837, metadata !2734), !dbg !13128
  %max_depth.addr.i118 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i118, metadata !11839, metadata !2734), !dbg !13129
  %code.i119 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i119, metadata !11841, metadata !2734), !dbg !13130
  %re_index.i120 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i120, metadata !11843, metadata !2734), !dbg !13131
  %re_cache.i121 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i121, metadata !11845, metadata !2734), !dbg !13132
  %re_size_plus8.i122 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i122, metadata !11847, metadata !2734), !dbg !13133
  %n.i123 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i123, metadata !11849, metadata !2734), !dbg !13134
  %nb_bits.i124 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i124, metadata !11851, metadata !2734), !dbg !13135
  %index1.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i125, metadata !11853, metadata !2734), !dbg !13136
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !6588, metadata !2734), !dbg !13137
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !6588, metadata !2734), !dbg !13144
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !6588, metadata !2734), !dbg !13146
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !11833, metadata !2734), !dbg !13148
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !11835, metadata !2734), !dbg !13149
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !11837, metadata !2734), !dbg !13150
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !11839, metadata !2734), !dbg !13151
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !11841, metadata !2734), !dbg !13152
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !11843, metadata !2734), !dbg !13153
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !11845, metadata !2734), !dbg !13154
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !11847, metadata !2734), !dbg !13155
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !11849, metadata !2734), !dbg !13156
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !11851, metadata !2734), !dbg !13157
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !11853, metadata !2734), !dbg !13158
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %ch.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %t_huff = alloca [2 x i16]*, align 8
  %f_huff = alloca [2 x i16]*, align 8
  %t_lav = alloca i32, align 4
  %f_lav = alloca i32, align 4
  %delta = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !13159, metadata !2734), !dbg !13160
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !13161, metadata !2734), !dbg !13162
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !13163, metadata !2734), !dbg !13164
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !13165, metadata !2734), !dbg !13166
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !13167, metadata !2734), !dbg !13168
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13169, metadata !2734), !dbg !13170
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13171, metadata !2734), !dbg !13172
  call void @llvm.dbg.declare(metadata [2 x i16]** %t_huff, metadata !13173, metadata !2734), !dbg !13174
  call void @llvm.dbg.declare(metadata [2 x i16]** %f_huff, metadata !13175, metadata !2734), !dbg !13176
  call void @llvm.dbg.declare(metadata i32* %t_lav, metadata !13177, metadata !2734), !dbg !13178
  call void @llvm.dbg.declare(metadata i32* %f_lav, metadata !13179, metadata !2734), !dbg !13180
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !13181, metadata !2734), !dbg !13182
  %0 = load i32, i32* %ch.addr, align 4, !dbg !13183
  %cmp = icmp eq i32 %0, 1, !dbg !13184
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !13185

land.rhs:                                         ; preds = %entry
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13186
  %bs_coupling = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 11, !dbg !13188
  %2 = load i32, i32* %bs_coupling, align 16, !dbg !13188
  %cmp1 = icmp eq i32 %2, 1, !dbg !13189
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  %land.ext = zext i1 %3 to i32, !dbg !13190
  %add = add nsw i32 %land.ext, 1, !dbg !13192
  store i32 %add, i32* %delta, align 4, !dbg !13193
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13194
  %bs_coupling2 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 11, !dbg !13196
  %5 = load i32, i32* %bs_coupling2, align 16, !dbg !13196
  %tobool = icmp ne i32 %5, 0, !dbg !13194
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !13197

land.lhs.true:                                    ; preds = %land.end
  %6 = load i32, i32* %ch.addr, align 4, !dbg !13198
  %tobool3 = icmp ne i32 %6, 0, !dbg !13198
  br i1 %tobool3, label %if.then, label %if.else, !dbg !13200

if.then:                                          ; preds = %land.lhs.true
  %7 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 9, i32 1), align 8, !dbg !13201
  store [2 x i16]* %7, [2 x i16]** %t_huff, align 8, !dbg !13203
  %8 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 9), align 1, !dbg !13204
  %conv = sext i8 %8 to i32, !dbg !13204
  store i32 %conv, i32* %t_lav, align 4, !dbg !13205
  %9 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 7, i32 1), align 8, !dbg !13206
  store [2 x i16]* %9, [2 x i16]** %f_huff, align 8, !dbg !13207
  %10 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 7), align 1, !dbg !13208
  %conv4 = sext i8 %10 to i32, !dbg !13208
  store i32 %conv4, i32* %f_lav, align 4, !dbg !13209
  br label %if.end, !dbg !13210

if.else:                                          ; preds = %land.lhs.true, %land.end
  %11 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 8, i32 1), align 8, !dbg !13211
  store [2 x i16]* %11, [2 x i16]** %t_huff, align 8, !dbg !13213
  %12 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 8), align 1, !dbg !13214
  %conv5 = sext i8 %12 to i32, !dbg !13214
  store i32 %conv5, i32* %t_lav, align 4, !dbg !13215
  %13 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 5, i32 1), align 8, !dbg !13216
  store [2 x i16]* %13, [2 x i16]** %f_huff, align 8, !dbg !13217
  %14 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 5), align 1, !dbg !13218
  %conv6 = sext i8 %14 to i32, !dbg !13218
  store i32 %conv6, i32* %f_lav, align 4, !dbg !13219
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !13220
  br label %for.cond, !dbg !13221

for.cond:                                         ; preds = %for.inc102, %if.end
  %15 = load i32, i32* %i, align 4, !dbg !13222
  %16 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13224
  %bs_num_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %16, i32 0, i32 4, !dbg !13225
  %17 = load i32, i32* %bs_num_noise, align 4, !dbg !13225
  %cmp7 = icmp slt i32 %15, %17, !dbg !13226
  br i1 %cmp7, label %for.body, label %for.end104, !dbg !13227

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !13228
  %idxprom = sext i32 %18 to i64, !dbg !13229
  %19 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13229
  %bs_df_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %19, i32 0, i32 6, !dbg !13230
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %bs_df_noise, i64 0, i64 %idxprom, !dbg !13229
  %20 = load i8, i8* %arrayidx, align 1, !dbg !13229
  %tobool9 = icmp ne i8 %20, 0, !dbg !13229
  br i1 %tobool9, label %if.then10, label %if.else46, !dbg !13231

if.then10:                                        ; preds = %for.body
  store i32 0, i32* %j, align 4, !dbg !13232
  br label %for.cond11, !dbg !13233

for.cond11:                                       ; preds = %for.inc, %if.then10
  %21 = load i32, i32* %j, align 4, !dbg !13234
  %22 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13236
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %22, i32 0, i32 20, !dbg !13237
  %23 = load i32, i32* %n_q, align 8, !dbg !13237
  %cmp12 = icmp slt i32 %21, %23, !dbg !13238
  br i1 %cmp12, label %for.body14, label %for.end, !dbg !13239

for.body14:                                       ; preds = %for.cond11
  %24 = load i32, i32* %j, align 4, !dbg !13240
  %idxprom15 = sext i32 %24 to i64, !dbg !13241
  %25 = load i32, i32* %i, align 4, !dbg !13242
  %idxprom16 = sext i32 %25 to i64, !dbg !13241
  %26 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13241
  %noise_facs_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %26, i32 0, i32 24, !dbg !13243
  %arrayidx17 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q, i64 0, i64 %idxprom16, !dbg !13241
  %arrayidx18 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx17, i64 0, i64 %idxprom15, !dbg !13241
  %27 = load i8, i8* %arrayidx18, align 1, !dbg !13241
  %conv19 = zext i8 %27 to i32, !dbg !13241
  %28 = load i32, i32* %delta, align 4, !dbg !13244
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13245
  %30 = load [2 x i16]*, [2 x i16]** %t_huff, align 8, !dbg !13246
  store %struct.GetBitContext* %29, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13247
  store [2 x i16]* %30, [2 x i16]** %table.addr.i, align 8, !dbg !13247
  store i32 9, i32* %bits.addr.i, align 4, !dbg !13247
  store i32 2, i32* %max_depth.addr.i, align 4, !dbg !13247
  %31 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13248
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %31, i32 0, i32 2, !dbg !13249
  %32 = load i32, i32* %index.i, align 8, !dbg !13249
  store i32 %32, i32* %re_index.i, align 4, !dbg !13153
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13250
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %33, i32 0, i32 4, !dbg !13251
  %34 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !13251
  store i32 %34, i32* %re_size_plus8.i, align 4, !dbg !13155
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13252
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %35, i32 0, i32 0, !dbg !13253
  %36 = load i8*, i8** %buffer.i, align 8, !dbg !13253
  %37 = load i32, i32* %re_index.i, align 4, !dbg !13254
  %shr.i = lshr i32 %37, 3, !dbg !13255
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !13256
  %add.ptr.i = getelementptr inbounds i8, i8* %36, i64 %idx.ext.i, !dbg !13256
  %38 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !13257
  %l.i = bitcast %union.unaligned_32* %38 to i32*, !dbg !13257
  %39 = load i32, i32* %l.i, align 1, !dbg !13257
  store i32 %39, i32* %x.addr.i.i, align 4, !dbg !13258
  %40 = load i32, i32* %x.addr.i.i, align 4, !dbg !13259
  %shl.i.i = shl i32 %40, 8, !dbg !13260
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !13261
  %41 = load i32, i32* %x.addr.i.i, align 4, !dbg !13262
  %shr.i.i = lshr i32 %41, 8, !dbg !13263
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !13264
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !13265
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !13266
  %42 = load i32, i32* %x.addr.i.i, align 4, !dbg !13267
  %shr3.i.i = lshr i32 %42, 16, !dbg !13268
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !13269
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !13270
  %43 = load i32, i32* %x.addr.i.i, align 4, !dbg !13271
  %shr6.i.i = lshr i32 %43, 16, !dbg !13272
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !13273
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !13274
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !13275
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !13276
  %44 = load i32, i32* %re_index.i, align 4, !dbg !13277
  %and.i = and i32 %44, 7, !dbg !13278
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !13279
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !13280
  %45 = load i32, i32* %re_cache.i, align 4, !dbg !13281
  %46 = load i32, i32* %bits.addr.i, align 4, !dbg !13282
  %conv.i = trunc i32 %46 to i8, !dbg !13282
  %call2.i = call i32 @NEG_USR32(i32 %45, i8 signext %conv.i) #12, !dbg !13283
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !13284
  %47 = load i32, i32* %index1.i, align 4, !dbg !13285
  %idxprom.i = zext i32 %47 to i64, !dbg !13286
  %48 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13286
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %48, i64 %idxprom.i, !dbg !13286
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !13286
  %49 = load i16, i16* %arrayidx3.i, align 2, !dbg !13286
  %conv4.i = sext i16 %49 to i32, !dbg !13286
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !13287
  %50 = load i32, i32* %index1.i, align 4, !dbg !13288
  %idxprom5.i = zext i32 %50 to i64, !dbg !13289
  %51 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13289
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %51, i64 %idxprom5.i, !dbg !13289
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !13289
  %52 = load i16, i16* %arrayidx7.i, align 2, !dbg !13289
  %conv8.i = sext i16 %52 to i32, !dbg !13289
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !13290
  %53 = load i32, i32* %max_depth.addr.i, align 4, !dbg !13291
  %cmp.i = icmp sgt i32 %53, 1, !dbg !13292
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !13293

land.lhs.true.i:                                  ; preds = %for.body14
  %54 = load i32, i32* %n.i, align 4, !dbg !13294
  %cmp10.i = icmp slt i32 %54, 0, !dbg !13295
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !13296

if.then.i:                                        ; preds = %land.lhs.true.i
  %55 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13297
  %56 = load i32, i32* %re_index.i, align 4, !dbg !13298
  %57 = load i32, i32* %bits.addr.i, align 4, !dbg !13299
  %add.i = add i32 %56, %57, !dbg !13300
  %cmp12.i = icmp ugt i32 %55, %add.i, !dbg !13301
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !13302

cond.true.i:                                      ; preds = %if.then.i
  %58 = load i32, i32* %re_index.i, align 4, !dbg !13303
  %59 = load i32, i32* %bits.addr.i, align 4, !dbg !13304
  %add14.i = add i32 %58, %59, !dbg !13305
  br label %cond.end.i, !dbg !13306

cond.false.i:                                     ; preds = %if.then.i
  %60 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13307
  br label %cond.end.i, !dbg !13308

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %60, %cond.false.i ], !dbg !13309
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !13310
  %61 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13311
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %61, i32 0, i32 0, !dbg !13312
  %62 = load i8*, i8** %buffer15.i, align 8, !dbg !13312
  %63 = load i32, i32* %re_index.i, align 4, !dbg !13313
  %shr16.i = lshr i32 %63, 3, !dbg !13314
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !13315
  %add.ptr18.i = getelementptr inbounds i8, i8* %62, i64 %idx.ext17.i, !dbg !13315
  %64 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !13316
  %l19.i = bitcast %union.unaligned_32* %64 to i32*, !dbg !13316
  %65 = load i32, i32* %l19.i, align 1, !dbg !13316
  store i32 %65, i32* %x.addr.i81.i, align 4, !dbg !13317
  %66 = load i32, i32* %x.addr.i81.i, align 4, !dbg !13318
  %shl.i82.i = shl i32 %66, 8, !dbg !13319
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !13320
  %67 = load i32, i32* %x.addr.i81.i, align 4, !dbg !13321
  %shr.i84.i = lshr i32 %67, 8, !dbg !13322
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !13323
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !13324
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !13325
  %68 = load i32, i32* %x.addr.i81.i, align 4, !dbg !13326
  %shr3.i88.i = lshr i32 %68, 16, !dbg !13327
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !13328
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !13329
  %69 = load i32, i32* %x.addr.i81.i, align 4, !dbg !13330
  %shr6.i91.i = lshr i32 %69, 16, !dbg !13331
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !13332
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !13333
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !13334
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !13335
  %70 = load i32, i32* %re_index.i, align 4, !dbg !13336
  %and21.i = and i32 %70, 7, !dbg !13337
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !13338
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !13339
  %71 = load i32, i32* %n.i, align 4, !dbg !13340
  %sub.i = sub nsw i32 0, %71, !dbg !13341
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !13342
  %72 = load i32, i32* %re_cache.i, align 4, !dbg !13343
  %73 = load i32, i32* %nb_bits.i, align 4, !dbg !13344
  %conv23.i = trunc i32 %73 to i8, !dbg !13344
  %call24.i = call i32 @NEG_USR32(i32 %72, i8 signext %conv23.i) #12, !dbg !13345
  %74 = load i32, i32* %code.i, align 4, !dbg !13346
  %add25.i = add i32 %call24.i, %74, !dbg !13347
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !13348
  %75 = load i32, i32* %index1.i, align 4, !dbg !13349
  %idxprom26.i = zext i32 %75 to i64, !dbg !13350
  %76 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13350
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %76, i64 %idxprom26.i, !dbg !13350
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !13350
  %77 = load i16, i16* %arrayidx28.i, align 2, !dbg !13350
  %conv29.i = sext i16 %77 to i32, !dbg !13350
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !13351
  %78 = load i32, i32* %index1.i, align 4, !dbg !13352
  %idxprom30.i = zext i32 %78 to i64, !dbg !13353
  %79 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13353
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %79, i64 %idxprom30.i, !dbg !13353
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !13353
  %80 = load i16, i16* %arrayidx32.i, align 2, !dbg !13353
  %conv33.i = sext i16 %80 to i32, !dbg !13353
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !13354
  %81 = load i32, i32* %max_depth.addr.i, align 4, !dbg !13355
  %cmp34.i = icmp sgt i32 %81, 2, !dbg !13356
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !13357

land.lhs.true36.i:                                ; preds = %cond.end.i
  %82 = load i32, i32* %n.i, align 4, !dbg !13358
  %cmp37.i = icmp slt i32 %82, 0, !dbg !13359
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !13360

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %83 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13361
  %84 = load i32, i32* %re_index.i, align 4, !dbg !13362
  %85 = load i32, i32* %nb_bits.i, align 4, !dbg !13363
  %add40.i = add i32 %84, %85, !dbg !13364
  %cmp41.i = icmp ugt i32 %83, %add40.i, !dbg !13365
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !13366

cond.true43.i:                                    ; preds = %if.then39.i
  %86 = load i32, i32* %re_index.i, align 4, !dbg !13367
  %87 = load i32, i32* %nb_bits.i, align 4, !dbg !13368
  %add44.i = add i32 %86, %87, !dbg !13369
  br label %cond.end46.i, !dbg !13370

cond.false45.i:                                   ; preds = %if.then39.i
  %88 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13371
  br label %cond.end46.i, !dbg !13372

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %88, %cond.false45.i ], !dbg !13373
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !13374
  %89 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13375
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %89, i32 0, i32 0, !dbg !13376
  %90 = load i8*, i8** %buffer48.i, align 8, !dbg !13376
  %91 = load i32, i32* %re_index.i, align 4, !dbg !13377
  %shr49.i = lshr i32 %91, 3, !dbg !13378
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !13379
  %add.ptr51.i = getelementptr inbounds i8, i8* %90, i64 %idx.ext50.i, !dbg !13379
  %92 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !13380
  %l52.i = bitcast %union.unaligned_32* %92 to i32*, !dbg !13380
  %93 = load i32, i32* %l52.i, align 1, !dbg !13380
  store i32 %93, i32* %x.addr.i96.i, align 4, !dbg !13381
  %94 = load i32, i32* %x.addr.i96.i, align 4, !dbg !13382
  %shl.i97.i = shl i32 %94, 8, !dbg !13383
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !13384
  %95 = load i32, i32* %x.addr.i96.i, align 4, !dbg !13385
  %shr.i99.i = lshr i32 %95, 8, !dbg !13386
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !13387
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !13388
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !13389
  %96 = load i32, i32* %x.addr.i96.i, align 4, !dbg !13390
  %shr3.i103.i = lshr i32 %96, 16, !dbg !13391
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !13392
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !13393
  %97 = load i32, i32* %x.addr.i96.i, align 4, !dbg !13394
  %shr6.i106.i = lshr i32 %97, 16, !dbg !13395
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !13396
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !13397
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !13398
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !13399
  %98 = load i32, i32* %re_index.i, align 4, !dbg !13400
  %and54.i = and i32 %98, 7, !dbg !13401
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !13402
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !13403
  %99 = load i32, i32* %n.i, align 4, !dbg !13404
  %sub56.i = sub nsw i32 0, %99, !dbg !13405
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !13406
  %100 = load i32, i32* %re_cache.i, align 4, !dbg !13407
  %101 = load i32, i32* %nb_bits.i, align 4, !dbg !13408
  %conv57.i = trunc i32 %101 to i8, !dbg !13408
  %call58.i = call i32 @NEG_USR32(i32 %100, i8 signext %conv57.i) #12, !dbg !13409
  %102 = load i32, i32* %code.i, align 4, !dbg !13410
  %add59.i = add i32 %call58.i, %102, !dbg !13411
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !13412
  %103 = load i32, i32* %index1.i, align 4, !dbg !13413
  %idxprom60.i = zext i32 %103 to i64, !dbg !13414
  %104 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13414
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %104, i64 %idxprom60.i, !dbg !13414
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !13414
  %105 = load i16, i16* %arrayidx62.i, align 2, !dbg !13414
  %conv63.i = sext i16 %105 to i32, !dbg !13414
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !13415
  %106 = load i32, i32* %index1.i, align 4, !dbg !13416
  %idxprom64.i = zext i32 %106 to i64, !dbg !13417
  %107 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13417
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %107, i64 %idxprom64.i, !dbg !13417
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !13417
  %108 = load i16, i16* %arrayidx66.i, align 2, !dbg !13417
  %conv67.i = sext i16 %108 to i32, !dbg !13417
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !13418
  br label %if.end.i, !dbg !13419

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !13420

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body14
  %109 = load i32, i32* %n.i, align 4, !dbg !13421
  %110 = load i32, i32* %re_cache.i, align 4, !dbg !13422
  %shl70.i = shl i32 %110, %109, !dbg !13422
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !13422
  %111 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13423
  %112 = load i32, i32* %re_index.i, align 4, !dbg !13424
  %113 = load i32, i32* %n.i, align 4, !dbg !13425
  %add71.i = add i32 %112, %113, !dbg !13426
  %cmp72.i = icmp ugt i32 %111, %add71.i, !dbg !13427
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !13428

cond.true74.i:                                    ; preds = %if.end68.i
  %114 = load i32, i32* %re_index.i, align 4, !dbg !13429
  %115 = load i32, i32* %n.i, align 4, !dbg !13430
  %add75.i = add i32 %114, %115, !dbg !13431
  br label %get_vlc2.exit, !dbg !13432

cond.false76.i:                                   ; preds = %if.end68.i
  %116 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13433
  br label %get_vlc2.exit, !dbg !13434

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %116, %cond.false76.i ], !dbg !13435
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !13436
  %117 = load i32, i32* %re_index.i, align 4, !dbg !13437
  %118 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13438
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %118, i32 0, i32 2, !dbg !13439
  store i32 %117, i32* %index80.i, align 8, !dbg !13440
  %119 = load i32, i32* %code.i, align 4, !dbg !13441
  %120 = load i32, i32* %t_lav, align 4, !dbg !13442
  %sub = sub nsw i32 %119, %120, !dbg !13443
  %mul = mul nsw i32 %28, %sub, !dbg !13444
  %add20 = add nsw i32 %conv19, %mul, !dbg !13445
  %conv21 = trunc i32 %add20 to i8, !dbg !13241
  %121 = load i32, i32* %j, align 4, !dbg !13446
  %idxprom22 = sext i32 %121 to i64, !dbg !13447
  %122 = load i32, i32* %i, align 4, !dbg !13448
  %add23 = add nsw i32 %122, 1, !dbg !13449
  %idxprom24 = sext i32 %add23 to i64, !dbg !13447
  %123 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13447
  %noise_facs_q25 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %123, i32 0, i32 24, !dbg !13450
  %arrayidx26 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q25, i64 0, i64 %idxprom24, !dbg !13447
  %arrayidx27 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx26, i64 0, i64 %idxprom22, !dbg !13447
  store i8 %conv21, i8* %arrayidx27, align 1, !dbg !13451
  %124 = load i32, i32* %j, align 4, !dbg !13452
  %idxprom28 = sext i32 %124 to i64, !dbg !13454
  %125 = load i32, i32* %i, align 4, !dbg !13455
  %add29 = add nsw i32 %125, 1, !dbg !13456
  %idxprom30 = sext i32 %add29 to i64, !dbg !13454
  %126 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13454
  %noise_facs_q31 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %126, i32 0, i32 24, !dbg !13457
  %arrayidx32 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q31, i64 0, i64 %idxprom30, !dbg !13454
  %arrayidx33 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx32, i64 0, i64 %idxprom28, !dbg !13454
  %127 = load i8, i8* %arrayidx33, align 1, !dbg !13454
  %conv34 = zext i8 %127 to i32, !dbg !13454
  %cmp35 = icmp ugt i32 %conv34, 30, !dbg !13458
  br i1 %cmp35, label %if.then37, label %if.end45, !dbg !13459

if.then37:                                        ; preds = %get_vlc2.exit
  %128 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13460
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %128, i32 0, i32 1, !dbg !13462
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !13462
  %130 = bitcast %struct.AVCodecContext* %129 to i8*, !dbg !13460
  %131 = load i32, i32* %j, align 4, !dbg !13463
  %idxprom38 = sext i32 %131 to i64, !dbg !13464
  %132 = load i32, i32* %i, align 4, !dbg !13465
  %add39 = add nsw i32 %132, 1, !dbg !13466
  %idxprom40 = sext i32 %add39 to i64, !dbg !13464
  %133 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13464
  %noise_facs_q41 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %133, i32 0, i32 24, !dbg !13467
  %arrayidx42 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q41, i64 0, i64 %idxprom40, !dbg !13464
  %arrayidx43 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx42, i64 0, i64 %idxprom38, !dbg !13464
  %134 = load i8, i8* %arrayidx43, align 1, !dbg !13464
  %conv44 = zext i8 %134 to i32, !dbg !13464
  call void (i8*, i32, i8*, ...) @av_log(i8* %130, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.38, i32 0, i32 0), i32 %conv44), !dbg !13468
  store i32 -1094995529, i32* %retval, align 4, !dbg !13469
  br label %return, !dbg !13469

if.end45:                                         ; preds = %get_vlc2.exit
  br label %for.inc, !dbg !13470

for.inc:                                          ; preds = %if.end45
  %135 = load i32, i32* %j, align 4, !dbg !13471
  %inc = add nsw i32 %135, 1, !dbg !13471
  store i32 %inc, i32* %j, align 4, !dbg !13471
  br label %for.cond11, !dbg !13473, !llvm.loop !13474

for.end:                                          ; preds = %for.cond11
  br label %if.end101, !dbg !13476

if.else46:                                        ; preds = %for.body
  %136 = load i32, i32* %delta, align 4, !dbg !13477
  %137 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13478
  %call47 = call i32 @get_bits(%struct.GetBitContext* %137, i32 5), !dbg !13479
  %mul48 = mul i32 %136, %call47, !dbg !13480
  %conv49 = trunc i32 %mul48 to i8, !dbg !13477
  %138 = load i32, i32* %i, align 4, !dbg !13481
  %add50 = add nsw i32 %138, 1, !dbg !13482
  %idxprom51 = sext i32 %add50 to i64, !dbg !13483
  %139 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13483
  %noise_facs_q52 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %139, i32 0, i32 24, !dbg !13484
  %arrayidx53 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q52, i64 0, i64 %idxprom51, !dbg !13483
  %arrayidx54 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx53, i64 0, i64 0, !dbg !13483
  store i8 %conv49, i8* %arrayidx54, align 1, !dbg !13485
  store i32 1, i32* %j, align 4, !dbg !13486
  br label %for.cond55, !dbg !13487

for.cond55:                                       ; preds = %for.inc98, %if.else46
  %140 = load i32, i32* %j, align 4, !dbg !13488
  %141 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13490
  %n_q56 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %141, i32 0, i32 20, !dbg !13491
  %142 = load i32, i32* %n_q56, align 8, !dbg !13491
  %cmp57 = icmp slt i32 %140, %142, !dbg !13492
  br i1 %cmp57, label %for.body59, label %for.end100, !dbg !13493

for.body59:                                       ; preds = %for.cond55
  %143 = load i32, i32* %j, align 4, !dbg !13494
  %sub60 = sub nsw i32 %143, 1, !dbg !13495
  %idxprom61 = sext i32 %sub60 to i64, !dbg !13496
  %144 = load i32, i32* %i, align 4, !dbg !13497
  %add62 = add nsw i32 %144, 1, !dbg !13498
  %idxprom63 = sext i32 %add62 to i64, !dbg !13496
  %145 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13496
  %noise_facs_q64 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %145, i32 0, i32 24, !dbg !13499
  %arrayidx65 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q64, i64 0, i64 %idxprom63, !dbg !13496
  %arrayidx66 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx65, i64 0, i64 %idxprom61, !dbg !13496
  %146 = load i8, i8* %arrayidx66, align 1, !dbg !13496
  %conv67 = zext i8 %146 to i32, !dbg !13496
  %147 = load i32, i32* %delta, align 4, !dbg !13500
  %148 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13501
  %149 = load [2 x i16]*, [2 x i16]** %f_huff, align 8, !dbg !13502
  store %struct.GetBitContext* %148, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13503
  store [2 x i16]* %149, [2 x i16]** %table.addr.i116, align 8, !dbg !13503
  store i32 9, i32* %bits.addr.i117, align 4, !dbg !13503
  store i32 3, i32* %max_depth.addr.i118, align 4, !dbg !13503
  %150 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13504
  %index.i126 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %150, i32 0, i32 2, !dbg !13505
  %151 = load i32, i32* %index.i126, align 8, !dbg !13505
  store i32 %151, i32* %re_index.i120, align 4, !dbg !13131
  %152 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13506
  %size_in_bits_plus8.i127 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %152, i32 0, i32 4, !dbg !13507
  %153 = load i32, i32* %size_in_bits_plus8.i127, align 8, !dbg !13507
  store i32 %153, i32* %re_size_plus8.i122, align 4, !dbg !13133
  %154 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13508
  %buffer.i128 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %154, i32 0, i32 0, !dbg !13509
  %155 = load i8*, i8** %buffer.i128, align 8, !dbg !13509
  %156 = load i32, i32* %re_index.i120, align 4, !dbg !13510
  %shr.i129 = lshr i32 %156, 3, !dbg !13511
  %idx.ext.i130 = zext i32 %shr.i129 to i64, !dbg !13512
  %add.ptr.i131 = getelementptr inbounds i8, i8* %155, i64 %idx.ext.i130, !dbg !13512
  %157 = bitcast i8* %add.ptr.i131 to %union.unaligned_32*, !dbg !13513
  %l.i132 = bitcast %union.unaligned_32* %157 to i32*, !dbg !13513
  %158 = load i32, i32* %l.i132, align 1, !dbg !13513
  store i32 %158, i32* %x.addr.i.i114, align 4, !dbg !13514
  %159 = load i32, i32* %x.addr.i.i114, align 4, !dbg !13515
  %shl.i.i133 = shl i32 %159, 8, !dbg !13516
  %and.i.i134 = and i32 %shl.i.i133, 65280, !dbg !13517
  %160 = load i32, i32* %x.addr.i.i114, align 4, !dbg !13518
  %shr.i.i135 = lshr i32 %160, 8, !dbg !13519
  %and1.i.i136 = and i32 %shr.i.i135, 255, !dbg !13520
  %or.i.i137 = or i32 %and.i.i134, %and1.i.i136, !dbg !13521
  %shl2.i.i138 = shl i32 %or.i.i137, 16, !dbg !13522
  %161 = load i32, i32* %x.addr.i.i114, align 4, !dbg !13523
  %shr3.i.i139 = lshr i32 %161, 16, !dbg !13524
  %shl4.i.i140 = shl i32 %shr3.i.i139, 8, !dbg !13525
  %and5.i.i141 = and i32 %shl4.i.i140, 65280, !dbg !13526
  %162 = load i32, i32* %x.addr.i.i114, align 4, !dbg !13527
  %shr6.i.i142 = lshr i32 %162, 16, !dbg !13528
  %shr7.i.i143 = lshr i32 %shr6.i.i142, 8, !dbg !13529
  %and8.i.i144 = and i32 %shr7.i.i143, 255, !dbg !13530
  %or9.i.i145 = or i32 %and5.i.i141, %and8.i.i144, !dbg !13531
  %or10.i.i146 = or i32 %shl2.i.i138, %or9.i.i145, !dbg !13532
  %163 = load i32, i32* %re_index.i120, align 4, !dbg !13533
  %and.i147 = and i32 %163, 7, !dbg !13534
  %shl.i148 = shl i32 %or10.i.i146, %and.i147, !dbg !13535
  store i32 %shl.i148, i32* %re_cache.i121, align 4, !dbg !13536
  %164 = load i32, i32* %re_cache.i121, align 4, !dbg !13537
  %165 = load i32, i32* %bits.addr.i117, align 4, !dbg !13538
  %conv.i149 = trunc i32 %165 to i8, !dbg !13538
  %call2.i150 = call i32 @NEG_USR32(i32 %164, i8 signext %conv.i149) #12, !dbg !13539
  store i32 %call2.i150, i32* %index1.i125, align 4, !dbg !13540
  %166 = load i32, i32* %index1.i125, align 4, !dbg !13541
  %idxprom.i151 = zext i32 %166 to i64, !dbg !13542
  %167 = load [2 x i16]*, [2 x i16]** %table.addr.i116, align 8, !dbg !13542
  %arrayidx.i152 = getelementptr inbounds [2 x i16], [2 x i16]* %167, i64 %idxprom.i151, !dbg !13542
  %arrayidx3.i153 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i152, i64 0, i64 0, !dbg !13542
  %168 = load i16, i16* %arrayidx3.i153, align 2, !dbg !13542
  %conv4.i154 = sext i16 %168 to i32, !dbg !13542
  store i32 %conv4.i154, i32* %code.i119, align 4, !dbg !13543
  %169 = load i32, i32* %index1.i125, align 4, !dbg !13544
  %idxprom5.i155 = zext i32 %169 to i64, !dbg !13545
  %170 = load [2 x i16]*, [2 x i16]** %table.addr.i116, align 8, !dbg !13545
  %arrayidx6.i156 = getelementptr inbounds [2 x i16], [2 x i16]* %170, i64 %idxprom5.i155, !dbg !13545
  %arrayidx7.i157 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i156, i64 0, i64 1, !dbg !13545
  %171 = load i16, i16* %arrayidx7.i157, align 2, !dbg !13545
  %conv8.i158 = sext i16 %171 to i32, !dbg !13545
  store i32 %conv8.i158, i32* %n.i123, align 4, !dbg !13546
  %172 = load i32, i32* %max_depth.addr.i118, align 4, !dbg !13547
  %cmp.i159 = icmp sgt i32 %172, 1, !dbg !13548
  br i1 %cmp.i159, label %land.lhs.true.i161, label %if.end68.i248, !dbg !13549

land.lhs.true.i161:                               ; preds = %for.body59
  %173 = load i32, i32* %n.i123, align 4, !dbg !13550
  %cmp10.i160 = icmp slt i32 %173, 0, !dbg !13551
  br i1 %cmp10.i160, label %if.then.i164, label %if.end68.i248, !dbg !13552

if.then.i164:                                     ; preds = %land.lhs.true.i161
  %174 = load i32, i32* %re_size_plus8.i122, align 4, !dbg !13553
  %175 = load i32, i32* %re_index.i120, align 4, !dbg !13554
  %176 = load i32, i32* %bits.addr.i117, align 4, !dbg !13555
  %add.i162 = add i32 %175, %176, !dbg !13556
  %cmp12.i163 = icmp ugt i32 %174, %add.i162, !dbg !13557
  br i1 %cmp12.i163, label %cond.true.i166, label %cond.false.i167, !dbg !13558

cond.true.i166:                                   ; preds = %if.then.i164
  %177 = load i32, i32* %re_index.i120, align 4, !dbg !13559
  %178 = load i32, i32* %bits.addr.i117, align 4, !dbg !13560
  %add14.i165 = add i32 %177, %178, !dbg !13561
  br label %cond.end.i203, !dbg !13562

cond.false.i167:                                  ; preds = %if.then.i164
  %179 = load i32, i32* %re_size_plus8.i122, align 4, !dbg !13563
  br label %cond.end.i203, !dbg !13564

cond.end.i203:                                    ; preds = %cond.false.i167, %cond.true.i166
  %cond.i168 = phi i32 [ %add14.i165, %cond.true.i166 ], [ %179, %cond.false.i167 ], !dbg !13565
  store i32 %cond.i168, i32* %re_index.i120, align 4, !dbg !13566
  %180 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13567
  %buffer15.i169 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %180, i32 0, i32 0, !dbg !13568
  %181 = load i8*, i8** %buffer15.i169, align 8, !dbg !13568
  %182 = load i32, i32* %re_index.i120, align 4, !dbg !13569
  %shr16.i170 = lshr i32 %182, 3, !dbg !13570
  %idx.ext17.i171 = zext i32 %shr16.i170 to i64, !dbg !13571
  %add.ptr18.i172 = getelementptr inbounds i8, i8* %181, i64 %idx.ext17.i171, !dbg !13571
  %183 = bitcast i8* %add.ptr18.i172 to %union.unaligned_32*, !dbg !13572
  %l19.i173 = bitcast %union.unaligned_32* %183 to i32*, !dbg !13572
  %184 = load i32, i32* %l19.i173, align 1, !dbg !13572
  store i32 %184, i32* %x.addr.i81.i113, align 4, !dbg !13573
  %185 = load i32, i32* %x.addr.i81.i113, align 4, !dbg !13574
  %shl.i82.i174 = shl i32 %185, 8, !dbg !13575
  %and.i83.i175 = and i32 %shl.i82.i174, 65280, !dbg !13576
  %186 = load i32, i32* %x.addr.i81.i113, align 4, !dbg !13577
  %shr.i84.i176 = lshr i32 %186, 8, !dbg !13578
  %and1.i85.i177 = and i32 %shr.i84.i176, 255, !dbg !13579
  %or.i86.i178 = or i32 %and.i83.i175, %and1.i85.i177, !dbg !13580
  %shl2.i87.i179 = shl i32 %or.i86.i178, 16, !dbg !13581
  %187 = load i32, i32* %x.addr.i81.i113, align 4, !dbg !13582
  %shr3.i88.i180 = lshr i32 %187, 16, !dbg !13583
  %shl4.i89.i181 = shl i32 %shr3.i88.i180, 8, !dbg !13584
  %and5.i90.i182 = and i32 %shl4.i89.i181, 65280, !dbg !13585
  %188 = load i32, i32* %x.addr.i81.i113, align 4, !dbg !13586
  %shr6.i91.i183 = lshr i32 %188, 16, !dbg !13587
  %shr7.i92.i184 = lshr i32 %shr6.i91.i183, 8, !dbg !13588
  %and8.i93.i185 = and i32 %shr7.i92.i184, 255, !dbg !13589
  %or9.i94.i186 = or i32 %and5.i90.i182, %and8.i93.i185, !dbg !13590
  %or10.i95.i187 = or i32 %shl2.i87.i179, %or9.i94.i186, !dbg !13591
  %189 = load i32, i32* %re_index.i120, align 4, !dbg !13592
  %and21.i188 = and i32 %189, 7, !dbg !13593
  %shl22.i189 = shl i32 %or10.i95.i187, %and21.i188, !dbg !13594
  store i32 %shl22.i189, i32* %re_cache.i121, align 4, !dbg !13595
  %190 = load i32, i32* %n.i123, align 4, !dbg !13596
  %sub.i190 = sub nsw i32 0, %190, !dbg !13597
  store i32 %sub.i190, i32* %nb_bits.i124, align 4, !dbg !13598
  %191 = load i32, i32* %re_cache.i121, align 4, !dbg !13599
  %192 = load i32, i32* %nb_bits.i124, align 4, !dbg !13600
  %conv23.i191 = trunc i32 %192 to i8, !dbg !13600
  %call24.i192 = call i32 @NEG_USR32(i32 %191, i8 signext %conv23.i191) #12, !dbg !13601
  %193 = load i32, i32* %code.i119, align 4, !dbg !13602
  %add25.i193 = add i32 %call24.i192, %193, !dbg !13603
  store i32 %add25.i193, i32* %index1.i125, align 4, !dbg !13604
  %194 = load i32, i32* %index1.i125, align 4, !dbg !13605
  %idxprom26.i194 = zext i32 %194 to i64, !dbg !13606
  %195 = load [2 x i16]*, [2 x i16]** %table.addr.i116, align 8, !dbg !13606
  %arrayidx27.i195 = getelementptr inbounds [2 x i16], [2 x i16]* %195, i64 %idxprom26.i194, !dbg !13606
  %arrayidx28.i196 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i195, i64 0, i64 0, !dbg !13606
  %196 = load i16, i16* %arrayidx28.i196, align 2, !dbg !13606
  %conv29.i197 = sext i16 %196 to i32, !dbg !13606
  store i32 %conv29.i197, i32* %code.i119, align 4, !dbg !13607
  %197 = load i32, i32* %index1.i125, align 4, !dbg !13608
  %idxprom30.i198 = zext i32 %197 to i64, !dbg !13609
  %198 = load [2 x i16]*, [2 x i16]** %table.addr.i116, align 8, !dbg !13609
  %arrayidx31.i199 = getelementptr inbounds [2 x i16], [2 x i16]* %198, i64 %idxprom30.i198, !dbg !13609
  %arrayidx32.i200 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i199, i64 0, i64 1, !dbg !13609
  %199 = load i16, i16* %arrayidx32.i200, align 2, !dbg !13609
  %conv33.i201 = sext i16 %199 to i32, !dbg !13609
  store i32 %conv33.i201, i32* %n.i123, align 4, !dbg !13610
  %200 = load i32, i32* %max_depth.addr.i118, align 4, !dbg !13611
  %cmp34.i202 = icmp sgt i32 %200, 2, !dbg !13612
  br i1 %cmp34.i202, label %land.lhs.true36.i205, label %if.end.i247, !dbg !13613

land.lhs.true36.i205:                             ; preds = %cond.end.i203
  %201 = load i32, i32* %n.i123, align 4, !dbg !13614
  %cmp37.i204 = icmp slt i32 %201, 0, !dbg !13615
  br i1 %cmp37.i204, label %if.then39.i208, label %if.end.i247, !dbg !13616

if.then39.i208:                                   ; preds = %land.lhs.true36.i205
  %202 = load i32, i32* %re_size_plus8.i122, align 4, !dbg !13617
  %203 = load i32, i32* %re_index.i120, align 4, !dbg !13618
  %204 = load i32, i32* %nb_bits.i124, align 4, !dbg !13619
  %add40.i206 = add i32 %203, %204, !dbg !13620
  %cmp41.i207 = icmp ugt i32 %202, %add40.i206, !dbg !13621
  br i1 %cmp41.i207, label %cond.true43.i210, label %cond.false45.i211, !dbg !13622

cond.true43.i210:                                 ; preds = %if.then39.i208
  %205 = load i32, i32* %re_index.i120, align 4, !dbg !13623
  %206 = load i32, i32* %nb_bits.i124, align 4, !dbg !13624
  %add44.i209 = add i32 %205, %206, !dbg !13625
  br label %cond.end46.i246, !dbg !13626

cond.false45.i211:                                ; preds = %if.then39.i208
  %207 = load i32, i32* %re_size_plus8.i122, align 4, !dbg !13627
  br label %cond.end46.i246, !dbg !13628

cond.end46.i246:                                  ; preds = %cond.false45.i211, %cond.true43.i210
  %cond47.i212 = phi i32 [ %add44.i209, %cond.true43.i210 ], [ %207, %cond.false45.i211 ], !dbg !13629
  store i32 %cond47.i212, i32* %re_index.i120, align 4, !dbg !13630
  %208 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13631
  %buffer48.i213 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %208, i32 0, i32 0, !dbg !13632
  %209 = load i8*, i8** %buffer48.i213, align 8, !dbg !13632
  %210 = load i32, i32* %re_index.i120, align 4, !dbg !13633
  %shr49.i214 = lshr i32 %210, 3, !dbg !13634
  %idx.ext50.i215 = zext i32 %shr49.i214 to i64, !dbg !13635
  %add.ptr51.i216 = getelementptr inbounds i8, i8* %209, i64 %idx.ext50.i215, !dbg !13635
  %211 = bitcast i8* %add.ptr51.i216 to %union.unaligned_32*, !dbg !13636
  %l52.i217 = bitcast %union.unaligned_32* %211 to i32*, !dbg !13636
  %212 = load i32, i32* %l52.i217, align 1, !dbg !13636
  store i32 %212, i32* %x.addr.i96.i112, align 4, !dbg !13637
  %213 = load i32, i32* %x.addr.i96.i112, align 4, !dbg !13638
  %shl.i97.i218 = shl i32 %213, 8, !dbg !13639
  %and.i98.i219 = and i32 %shl.i97.i218, 65280, !dbg !13640
  %214 = load i32, i32* %x.addr.i96.i112, align 4, !dbg !13641
  %shr.i99.i220 = lshr i32 %214, 8, !dbg !13642
  %and1.i100.i221 = and i32 %shr.i99.i220, 255, !dbg !13643
  %or.i101.i222 = or i32 %and.i98.i219, %and1.i100.i221, !dbg !13644
  %shl2.i102.i223 = shl i32 %or.i101.i222, 16, !dbg !13645
  %215 = load i32, i32* %x.addr.i96.i112, align 4, !dbg !13646
  %shr3.i103.i224 = lshr i32 %215, 16, !dbg !13647
  %shl4.i104.i225 = shl i32 %shr3.i103.i224, 8, !dbg !13648
  %and5.i105.i226 = and i32 %shl4.i104.i225, 65280, !dbg !13649
  %216 = load i32, i32* %x.addr.i96.i112, align 4, !dbg !13650
  %shr6.i106.i227 = lshr i32 %216, 16, !dbg !13651
  %shr7.i107.i228 = lshr i32 %shr6.i106.i227, 8, !dbg !13652
  %and8.i108.i229 = and i32 %shr7.i107.i228, 255, !dbg !13653
  %or9.i109.i230 = or i32 %and5.i105.i226, %and8.i108.i229, !dbg !13654
  %or10.i110.i231 = or i32 %shl2.i102.i223, %or9.i109.i230, !dbg !13655
  %217 = load i32, i32* %re_index.i120, align 4, !dbg !13656
  %and54.i232 = and i32 %217, 7, !dbg !13657
  %shl55.i233 = shl i32 %or10.i110.i231, %and54.i232, !dbg !13658
  store i32 %shl55.i233, i32* %re_cache.i121, align 4, !dbg !13659
  %218 = load i32, i32* %n.i123, align 4, !dbg !13660
  %sub56.i234 = sub nsw i32 0, %218, !dbg !13661
  store i32 %sub56.i234, i32* %nb_bits.i124, align 4, !dbg !13662
  %219 = load i32, i32* %re_cache.i121, align 4, !dbg !13663
  %220 = load i32, i32* %nb_bits.i124, align 4, !dbg !13664
  %conv57.i235 = trunc i32 %220 to i8, !dbg !13664
  %call58.i236 = call i32 @NEG_USR32(i32 %219, i8 signext %conv57.i235) #12, !dbg !13665
  %221 = load i32, i32* %code.i119, align 4, !dbg !13666
  %add59.i237 = add i32 %call58.i236, %221, !dbg !13667
  store i32 %add59.i237, i32* %index1.i125, align 4, !dbg !13668
  %222 = load i32, i32* %index1.i125, align 4, !dbg !13669
  %idxprom60.i238 = zext i32 %222 to i64, !dbg !13670
  %223 = load [2 x i16]*, [2 x i16]** %table.addr.i116, align 8, !dbg !13670
  %arrayidx61.i239 = getelementptr inbounds [2 x i16], [2 x i16]* %223, i64 %idxprom60.i238, !dbg !13670
  %arrayidx62.i240 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i239, i64 0, i64 0, !dbg !13670
  %224 = load i16, i16* %arrayidx62.i240, align 2, !dbg !13670
  %conv63.i241 = sext i16 %224 to i32, !dbg !13670
  store i32 %conv63.i241, i32* %code.i119, align 4, !dbg !13671
  %225 = load i32, i32* %index1.i125, align 4, !dbg !13672
  %idxprom64.i242 = zext i32 %225 to i64, !dbg !13673
  %226 = load [2 x i16]*, [2 x i16]** %table.addr.i116, align 8, !dbg !13673
  %arrayidx65.i243 = getelementptr inbounds [2 x i16], [2 x i16]* %226, i64 %idxprom64.i242, !dbg !13673
  %arrayidx66.i244 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i243, i64 0, i64 1, !dbg !13673
  %227 = load i16, i16* %arrayidx66.i244, align 2, !dbg !13673
  %conv67.i245 = sext i16 %227 to i32, !dbg !13673
  store i32 %conv67.i245, i32* %n.i123, align 4, !dbg !13674
  br label %if.end.i247, !dbg !13675

if.end.i247:                                      ; preds = %cond.end46.i246, %land.lhs.true36.i205, %cond.end.i203
  br label %if.end68.i248, !dbg !13676

if.end68.i248:                                    ; preds = %if.end.i247, %land.lhs.true.i161, %for.body59
  %228 = load i32, i32* %n.i123, align 4, !dbg !13677
  %229 = load i32, i32* %re_cache.i121, align 4, !dbg !13678
  %shl70.i249 = shl i32 %229, %228, !dbg !13678
  store i32 %shl70.i249, i32* %re_cache.i121, align 4, !dbg !13678
  %230 = load i32, i32* %re_size_plus8.i122, align 4, !dbg !13679
  %231 = load i32, i32* %re_index.i120, align 4, !dbg !13680
  %232 = load i32, i32* %n.i123, align 4, !dbg !13681
  %add71.i250 = add i32 %231, %232, !dbg !13682
  %cmp72.i251 = icmp ugt i32 %230, %add71.i250, !dbg !13683
  br i1 %cmp72.i251, label %cond.true74.i253, label %cond.false76.i254, !dbg !13684

cond.true74.i253:                                 ; preds = %if.end68.i248
  %233 = load i32, i32* %re_index.i120, align 4, !dbg !13685
  %234 = load i32, i32* %n.i123, align 4, !dbg !13686
  %add75.i252 = add i32 %233, %234, !dbg !13687
  br label %get_vlc2.exit257, !dbg !13688

cond.false76.i254:                                ; preds = %if.end68.i248
  %235 = load i32, i32* %re_size_plus8.i122, align 4, !dbg !13689
  br label %get_vlc2.exit257, !dbg !13690

get_vlc2.exit257:                                 ; preds = %cond.true74.i253, %cond.false76.i254
  %cond78.i255 = phi i32 [ %add75.i252, %cond.true74.i253 ], [ %235, %cond.false76.i254 ], !dbg !13691
  store i32 %cond78.i255, i32* %re_index.i120, align 4, !dbg !13692
  %236 = load i32, i32* %re_index.i120, align 4, !dbg !13693
  %237 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13694
  %index80.i256 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %237, i32 0, i32 2, !dbg !13695
  store i32 %236, i32* %index80.i256, align 8, !dbg !13696
  %238 = load i32, i32* %code.i119, align 4, !dbg !13697
  %239 = load i32, i32* %f_lav, align 4, !dbg !13698
  %sub69 = sub nsw i32 %238, %239, !dbg !13699
  %mul70 = mul nsw i32 %147, %sub69, !dbg !13700
  %add71 = add nsw i32 %conv67, %mul70, !dbg !13701
  %conv72 = trunc i32 %add71 to i8, !dbg !13496
  %240 = load i32, i32* %j, align 4, !dbg !13702
  %idxprom73 = sext i32 %240 to i64, !dbg !13703
  %241 = load i32, i32* %i, align 4, !dbg !13704
  %add74 = add nsw i32 %241, 1, !dbg !13705
  %idxprom75 = sext i32 %add74 to i64, !dbg !13703
  %242 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13703
  %noise_facs_q76 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %242, i32 0, i32 24, !dbg !13706
  %arrayidx77 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q76, i64 0, i64 %idxprom75, !dbg !13703
  %arrayidx78 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx77, i64 0, i64 %idxprom73, !dbg !13703
  store i8 %conv72, i8* %arrayidx78, align 1, !dbg !13707
  %243 = load i32, i32* %j, align 4, !dbg !13708
  %idxprom79 = sext i32 %243 to i64, !dbg !13710
  %244 = load i32, i32* %i, align 4, !dbg !13711
  %add80 = add nsw i32 %244, 1, !dbg !13712
  %idxprom81 = sext i32 %add80 to i64, !dbg !13710
  %245 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13710
  %noise_facs_q82 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %245, i32 0, i32 24, !dbg !13713
  %arrayidx83 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q82, i64 0, i64 %idxprom81, !dbg !13710
  %arrayidx84 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx83, i64 0, i64 %idxprom79, !dbg !13710
  %246 = load i8, i8* %arrayidx84, align 1, !dbg !13710
  %conv85 = zext i8 %246 to i32, !dbg !13710
  %cmp86 = icmp ugt i32 %conv85, 30, !dbg !13714
  br i1 %cmp86, label %if.then88, label %if.end97, !dbg !13715

if.then88:                                        ; preds = %get_vlc2.exit257
  %247 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13716
  %avctx89 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %247, i32 0, i32 1, !dbg !13718
  %248 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx89, align 8, !dbg !13718
  %249 = bitcast %struct.AVCodecContext* %248 to i8*, !dbg !13716
  %250 = load i32, i32* %j, align 4, !dbg !13719
  %idxprom90 = sext i32 %250 to i64, !dbg !13720
  %251 = load i32, i32* %i, align 4, !dbg !13721
  %add91 = add nsw i32 %251, 1, !dbg !13722
  %idxprom92 = sext i32 %add91 to i64, !dbg !13720
  %252 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13720
  %noise_facs_q93 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %252, i32 0, i32 24, !dbg !13723
  %arrayidx94 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q93, i64 0, i64 %idxprom92, !dbg !13720
  %arrayidx95 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx94, i64 0, i64 %idxprom90, !dbg !13720
  %253 = load i8, i8* %arrayidx95, align 1, !dbg !13720
  %conv96 = zext i8 %253 to i32, !dbg !13720
  call void (i8*, i32, i8*, ...) @av_log(i8* %249, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.38, i32 0, i32 0), i32 %conv96), !dbg !13724
  store i32 -1094995529, i32* %retval, align 4, !dbg !13725
  br label %return, !dbg !13725

if.end97:                                         ; preds = %get_vlc2.exit257
  br label %for.inc98, !dbg !13726

for.inc98:                                        ; preds = %if.end97
  %254 = load i32, i32* %j, align 4, !dbg !13727
  %inc99 = add nsw i32 %254, 1, !dbg !13727
  store i32 %inc99, i32* %j, align 4, !dbg !13727
  br label %for.cond55, !dbg !13729, !llvm.loop !13730

for.end100:                                       ; preds = %for.cond55
  br label %if.end101

if.end101:                                        ; preds = %for.end100, %for.end
  br label %for.inc102, !dbg !13732

for.inc102:                                       ; preds = %if.end101
  %255 = load i32, i32* %i, align 4, !dbg !13733
  %inc103 = add nsw i32 %255, 1, !dbg !13733
  store i32 %inc103, i32* %i, align 4, !dbg !13733
  br label %for.cond, !dbg !13735, !llvm.loop !13736

for.end104:                                       ; preds = %for.cond
  %256 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13738
  %noise_facs_q105 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %256, i32 0, i32 24, !dbg !13739
  %arrayidx106 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q105, i64 0, i64 0, !dbg !13738
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx106, i32 0, i32 0, !dbg !13740
  %257 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13741
  %bs_num_noise107 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %257, i32 0, i32 4, !dbg !13742
  %258 = load i32, i32* %bs_num_noise107, align 4, !dbg !13742
  %idxprom108 = sext i32 %258 to i64, !dbg !13743
  %259 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13743
  %noise_facs_q109 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %259, i32 0, i32 24, !dbg !13744
  %arrayidx110 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q109, i64 0, i64 %idxprom108, !dbg !13743
  %arraydecay111 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx110, i32 0, i32 0, !dbg !13740
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay111, i64 5, i32 1, i1 false), !dbg !13740
  store i32 0, i32* %retval, align 4, !dbg !13745
  br label %return, !dbg !13745

return:                                           ; preds = %for.end104, %if.then88, %if.then37
  %260 = load i32, i32* %retval, align 4, !dbg !13746
  ret i32 %260, !dbg !13746
}

; Function Attrs: nounwind uwtable
define internal void @copy_sbr_grid(%struct.SBRData* %dst, %struct.SBRData* %src) #3 !dbg !13747 {
entry:
  %dst.addr = alloca %struct.SBRData*, align 8
  %src.addr = alloca %struct.SBRData*, align 8
  store %struct.SBRData* %dst, %struct.SBRData** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %dst.addr, metadata !13752, metadata !2734), !dbg !13753
  store %struct.SBRData* %src, %struct.SBRData** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %src.addr, metadata !13754, metadata !2734), !dbg !13755
  %0 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13756
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %0, i32 0, i32 2, !dbg !13757
  %1 = load i32, i32* %bs_num_env, align 8, !dbg !13757
  %idxprom = sext i32 %1 to i64, !dbg !13758
  %2 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13758
  %bs_freq_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %2, i32 0, i32 3, !dbg !13759
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res, i64 0, i64 %idxprom, !dbg !13758
  %3 = load i8, i8* %arrayidx, align 1, !dbg !13758
  %4 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13760
  %bs_freq_res1 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %4, i32 0, i32 3, !dbg !13761
  %arrayidx2 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res1, i64 0, i64 0, !dbg !13760
  store i8 %3, i8* %arrayidx2, align 4, !dbg !13762
  %5 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13763
  %bs_num_env3 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %5, i32 0, i32 2, !dbg !13764
  %6 = load i32, i32* %bs_num_env3, align 8, !dbg !13764
  %idxprom4 = sext i32 %6 to i64, !dbg !13765
  %7 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13765
  %t_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %7, i32 0, i32 26, !dbg !13766
  %arrayidx5 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env, i64 0, i64 %idxprom4, !dbg !13765
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !13765
  %9 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13767
  %t_env_num_env_old = getelementptr inbounds %struct.SBRData, %struct.SBRData* %9, i32 0, i32 27, !dbg !13768
  store i8 %8, i8* %t_env_num_env_old, align 32, !dbg !13769
  %10 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13770
  %e_a = getelementptr inbounds %struct.SBRData, %struct.SBRData* %10, i32 0, i32 13, !dbg !13771
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a, i64 0, i64 1, !dbg !13770
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !13770
  %12 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13772
  %bs_num_env7 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %12, i32 0, i32 2, !dbg !13773
  %13 = load i32, i32* %bs_num_env7, align 8, !dbg !13773
  %cmp = icmp ne i32 %11, %13, !dbg !13774
  %conv = zext i1 %cmp to i32, !dbg !13774
  %sub = sub nsw i32 0, %conv, !dbg !13775
  %14 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13776
  %e_a8 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %14, i32 0, i32 13, !dbg !13777
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a8, i64 0, i64 0, !dbg !13776
  store i32 %sub, i32* %arrayidx9, align 4, !dbg !13778
  %15 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13779
  %bs_freq_res10 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %15, i32 0, i32 3, !dbg !13780
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res10, i32 0, i32 0, !dbg !13779
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !13781
  %16 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13782
  %bs_freq_res11 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %16, i32 0, i32 3, !dbg !13783
  %arraydecay12 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res11, i32 0, i32 0, !dbg !13782
  %add.ptr13 = getelementptr inbounds i8, i8* %arraydecay12, i64 1, !dbg !13784
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %add.ptr13, i64 6, i32 1, i1 false), !dbg !13785
  %17 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13786
  %t_env14 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %17, i32 0, i32 26, !dbg !13787
  %arraydecay15 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env14, i32 0, i32 0, !dbg !13788
  %18 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13789
  %t_env16 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %18, i32 0, i32 26, !dbg !13790
  %arraydecay17 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env16, i32 0, i32 0, !dbg !13788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay15, i8* %arraydecay17, i64 8, i32 8, i1 false), !dbg !13788
  %19 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13791
  %t_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %19, i32 0, i32 28, !dbg !13792
  %arraydecay18 = getelementptr inbounds [3 x i8], [3 x i8]* %t_q, i32 0, i32 0, !dbg !13793
  %20 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13794
  %t_q19 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %20, i32 0, i32 28, !dbg !13795
  %arraydecay20 = getelementptr inbounds [3 x i8], [3 x i8]* %t_q19, i32 0, i32 0, !dbg !13793
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay18, i8* %arraydecay20, i64 3, i32 1, i1 false), !dbg !13793
  %21 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13796
  %bs_num_env21 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %21, i32 0, i32 2, !dbg !13797
  %22 = load i32, i32* %bs_num_env21, align 8, !dbg !13797
  %23 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13798
  %bs_num_env22 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %23, i32 0, i32 2, !dbg !13799
  store i32 %22, i32* %bs_num_env22, align 8, !dbg !13800
  %24 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13801
  %bs_amp_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %24, i32 0, i32 9, !dbg !13802
  %25 = load i32, i32* %bs_amp_res, align 4, !dbg !13802
  %26 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13803
  %bs_amp_res23 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %26, i32 0, i32 9, !dbg !13804
  store i32 %25, i32* %bs_amp_res23, align 4, !dbg !13805
  %27 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13806
  %bs_num_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %27, i32 0, i32 4, !dbg !13807
  %28 = load i32, i32* %bs_num_noise, align 4, !dbg !13807
  %29 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13808
  %bs_num_noise24 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %29, i32 0, i32 4, !dbg !13809
  store i32 %28, i32* %bs_num_noise24, align 4, !dbg !13810
  %30 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13811
  %bs_frame_class = getelementptr inbounds %struct.SBRData, %struct.SBRData* %30, i32 0, i32 0, !dbg !13812
  %31 = load i32, i32* %bs_frame_class, align 32, !dbg !13812
  %32 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13813
  %bs_frame_class25 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %32, i32 0, i32 0, !dbg !13814
  store i32 %31, i32* %bs_frame_class25, align 32, !dbg !13815
  %33 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13816
  %e_a26 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %33, i32 0, i32 13, !dbg !13817
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a26, i64 0, i64 1, !dbg !13816
  %34 = load i32, i32* %arrayidx27, align 4, !dbg !13816
  %35 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13818
  %e_a28 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %35, i32 0, i32 13, !dbg !13819
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a28, i64 0, i64 1, !dbg !13818
  store i32 %34, i32* %arrayidx29, align 4, !dbg !13820
  ret void, !dbg !13821
}

declare i32 @ff_ps_read_data_fixed(%struct.AVCodecContext*, %struct.GetBitContext*, %struct.PSContext*, i32) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !13822 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6588, metadata !2734), !dbg !13823
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !13825, metadata !2734), !dbg !13826
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !13827, metadata !2734), !dbg !13828
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !13829, metadata !2734), !dbg !13830
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !13831, metadata !2734), !dbg !13832
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !13833
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !13834
  %1 = load i32, i32* %index, align 8, !dbg !13834
  store i32 %1, i32* %re_index, align 4, !dbg !13832
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !13835, metadata !2734), !dbg !13836
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !13837
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 0, !dbg !13838
  %3 = load i8*, i8** %buffer, align 8, !dbg !13838
  %4 = load i32, i32* %re_index, align 4, !dbg !13839
  %shr = lshr i32 %4, 3, !dbg !13840
  %idx.ext = zext i32 %shr to i64, !dbg !13841
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !13841
  %5 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !13842
  %l = bitcast %union.unaligned_32* %5 to i32*, !dbg !13842
  %6 = load i32, i32* %l, align 1, !dbg !13842
  store i32 %6, i32* %x.addr.i, align 4, !dbg !13843
  %7 = load i32, i32* %x.addr.i, align 4, !dbg !13844
  %shl.i = shl i32 %7, 8, !dbg !13845
  %and.i = and i32 %shl.i, 65280, !dbg !13846
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !13847
  %shr.i = lshr i32 %8, 8, !dbg !13848
  %and1.i = and i32 %shr.i, 255, !dbg !13849
  %or.i = or i32 %and.i, %and1.i, !dbg !13850
  %shl2.i = shl i32 %or.i, 16, !dbg !13851
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !13852
  %shr3.i = lshr i32 %9, 16, !dbg !13853
  %shl4.i = shl i32 %shr3.i, 8, !dbg !13854
  %and5.i = and i32 %shl4.i, 65280, !dbg !13855
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !13856
  %shr6.i = lshr i32 %10, 16, !dbg !13857
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !13858
  %and8.i = and i32 %shr7.i, 255, !dbg !13859
  %or9.i = or i32 %and5.i, %and8.i, !dbg !13860
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !13861
  %11 = load i32, i32* %re_index, align 4, !dbg !13862
  %and = and i32 %11, 7, !dbg !13863
  %shl = shl i32 %or10.i, %and, !dbg !13864
  store i32 %shl, i32* %re_cache, align 4, !dbg !13865
  %12 = load i32, i32* %re_cache, align 4, !dbg !13866
  %13 = load i32, i32* %n.addr, align 4, !dbg !13867
  %conv = trunc i32 %13 to i8, !dbg !13867
  %call3 = call i32 @NEG_USR32(i32 %12, i8 signext %conv), !dbg !13868
  store i32 %call3, i32* %tmp, align 4, !dbg !13869
  %14 = load i32, i32* %tmp, align 4, !dbg !13870
  ret i32 %14, !dbg !13871
}

declare void @avpriv_request_sample(i8*, i8*, ...) #1

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_div_sf(i64 %a.coerce, i64 %b.coerce) #8 !dbg !13872 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %a = alloca %struct.SoftFloat, align 4
  %b = alloca %struct.SoftFloat, align 4
  %temp = alloca i64, align 8
  %coerce = alloca %struct.SoftFloat, align 4
  %0 = bitcast %struct.SoftFloat* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  %1 = bitcast %struct.SoftFloat* %b to i64*
  store i64 %b.coerce, i64* %1, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a, metadata !13875, metadata !2734), !dbg !13876
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %b, metadata !13877, metadata !2734), !dbg !13878
  call void @llvm.dbg.declare(metadata i64* %temp, metadata !13879, metadata !2734), !dbg !13880
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !13881
  %2 = load i32, i32* %mant, align 4, !dbg !13881
  %conv = sext i32 %2 to i64, !dbg !13882
  %mul = mul nsw i64 %conv, 1073741824, !dbg !13883
  store i64 %mul, i64* %temp, align 8, !dbg !13880
  %mant1 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 0, !dbg !13884
  %3 = load i32, i32* %mant1, align 4, !dbg !13884
  %conv2 = sext i32 %3 to i64, !dbg !13885
  %4 = load i64, i64* %temp, align 8, !dbg !13886
  %div = sdiv i64 %4, %conv2, !dbg !13886
  store i64 %div, i64* %temp, align 8, !dbg !13886
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 1, !dbg !13887
  %5 = load i32, i32* %exp, align 4, !dbg !13887
  %exp3 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !13888
  %6 = load i32, i32* %exp3, align 4, !dbg !13889
  %sub = sub nsw i32 %6, %5, !dbg !13889
  store i32 %sub, i32* %exp3, align 4, !dbg !13889
  %7 = load i64, i64* %temp, align 8, !dbg !13890
  %conv4 = trunc i64 %7 to i32, !dbg !13890
  %mant5 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !13891
  store i32 %conv4, i32* %mant5, align 4, !dbg !13892
  br label %while.cond, !dbg !13893

while.cond:                                       ; preds = %while.body, %entry
  %mant6 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !13894
  %8 = load i32, i32* %mant6, align 4, !dbg !13894
  %conv7 = sext i32 %8 to i64, !dbg !13896
  %9 = load i64, i64* %temp, align 8, !dbg !13897
  %cmp = icmp ne i64 %conv7, %9, !dbg !13898
  br i1 %cmp, label %while.body, label %while.end, !dbg !13899

while.body:                                       ; preds = %while.cond
  %10 = load i64, i64* %temp, align 8, !dbg !13900
  %div9 = sdiv i64 %10, 2, !dbg !13900
  store i64 %div9, i64* %temp, align 8, !dbg !13900
  %exp10 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !13902
  %11 = load i32, i32* %exp10, align 4, !dbg !13903
  %dec = add nsw i32 %11, -1, !dbg !13903
  store i32 %dec, i32* %exp10, align 4, !dbg !13903
  %12 = load i64, i64* %temp, align 8, !dbg !13904
  %conv11 = trunc i64 %12 to i32, !dbg !13904
  %mant12 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !13905
  store i32 %conv11, i32* %mant12, align 4, !dbg !13906
  br label %while.cond, !dbg !13907, !llvm.loop !13909

while.end:                                        ; preds = %while.cond
  %13 = bitcast %struct.SoftFloat* %a to i64*, !dbg !13910
  %14 = load i64, i64* %13, align 4, !dbg !13910
  %call = call i64 @av_normalize1_sf(i64 %14) #2, !dbg !13910
  %15 = bitcast %struct.SoftFloat* %coerce to i64*, !dbg !13910
  store i64 %call, i64* %15, align 4, !dbg !13910
  %16 = bitcast %struct.SoftFloat* %a to i8*, !dbg !13910
  %17 = bitcast %struct.SoftFloat* %coerce to i8*, !dbg !13910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 4, i1 false), !dbg !13911
  %mant13 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !13912
  %18 = load i32, i32* %mant13, align 4, !dbg !13912
  %tobool = icmp ne i32 %18, 0, !dbg !13914
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13915

lor.lhs.false:                                    ; preds = %while.end
  %exp14 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !13916
  %19 = load i32, i32* %exp14, align 4, !dbg !13916
  %cmp15 = icmp slt i32 %19, -149, !dbg !13918
  br i1 %cmp15, label %if.then, label %if.end, !dbg !13919

if.then:                                          ; preds = %lor.lhs.false, %while.end
  %20 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !13920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* bitcast (%struct.SoftFloat* @FLOAT_0 to i8*), i64 8, i32 4, i1 false), !dbg !13920
  br label %return, !dbg !13921

if.end:                                           ; preds = %lor.lhs.false
  %21 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !13922
  %22 = bitcast %struct.SoftFloat* %a to i8*, !dbg !13922
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false), !dbg !13922
  br label %return, !dbg !13923

return:                                           ; preds = %if.end, %if.then
  %23 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !13924
  %24 = load i64, i64* %23, align 4, !dbg !13924
  ret i64 %24, !dbg !13924
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_add_sf(i64 %a.coerce, i64 %b.coerce) #8 !dbg !13925 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %a = alloca %struct.SoftFloat, align 4
  %b = alloca %struct.SoftFloat, align 4
  %t = alloca i32, align 4
  %agg.tmp = alloca %struct.SoftFloat, align 4
  %.compoundliteral = alloca %struct.SoftFloat, align 4
  %agg.tmp13 = alloca %struct.SoftFloat, align 4
  %.compoundliteral14 = alloca %struct.SoftFloat, align 4
  %0 = bitcast %struct.SoftFloat* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  %1 = bitcast %struct.SoftFloat* %b to i64*
  store i64 %b.coerce, i64* %1, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a, metadata !13926, metadata !2734), !dbg !13927
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %b, metadata !13928, metadata !2734), !dbg !13929
  call void @llvm.dbg.declare(metadata i32* %t, metadata !13930, metadata !2734), !dbg !13931
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !13932
  %2 = load i32, i32* %exp, align 4, !dbg !13932
  %exp1 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 1, !dbg !13933
  %3 = load i32, i32* %exp1, align 4, !dbg !13933
  %sub = sub nsw i32 %2, %3, !dbg !13934
  store i32 %sub, i32* %t, align 4, !dbg !13931
  %4 = load i32, i32* %t, align 4, !dbg !13935
  %cmp = icmp slt i32 %4, -31, !dbg !13937
  br i1 %cmp, label %if.then, label %if.else, !dbg !13938

if.then:                                          ; preds = %entry
  %5 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !13939
  %6 = bitcast %struct.SoftFloat* %b to i8*, !dbg !13939
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 4, i1 false), !dbg !13939
  br label %return, !dbg !13941

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %t, align 4, !dbg !13942
  %cmp2 = icmp slt i32 %7, 0, !dbg !13944
  br i1 %cmp2, label %if.then3, label %if.else10, !dbg !13945

if.then3:                                         ; preds = %if.else
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 0, !dbg !13946
  %mant4 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 0, !dbg !13948
  %8 = load i32, i32* %mant4, align 4, !dbg !13948
  %mant5 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !13949
  %9 = load i32, i32* %mant5, align 4, !dbg !13949
  %10 = load i32, i32* %t, align 4, !dbg !13950
  %sub6 = sub nsw i32 0, %10, !dbg !13951
  %shr = ashr i32 %9, %sub6, !dbg !13952
  %add = add nsw i32 %8, %shr, !dbg !13953
  store i32 %add, i32* %mant, align 4, !dbg !13946
  %exp7 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 1, !dbg !13946
  %exp8 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 1, !dbg !13954
  %11 = load i32, i32* %exp8, align 4, !dbg !13954
  store i32 %11, i32* %exp7, align 4, !dbg !13946
  %12 = bitcast %struct.SoftFloat* %.compoundliteral to i64*, !dbg !13955
  %13 = load i64, i64* %12, align 4, !dbg !13955
  %call = call i64 @av_normalize1_sf(i64 %13) #2, !dbg !13955
  %14 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !13955
  store i64 %call, i64* %14, align 4, !dbg !13955
  %15 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !13956
  %16 = load i64, i64* %15, align 4, !dbg !13956
  %call9 = call i64 @av_normalize_sf(i64 %16) #2, !dbg !13957
  %17 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !13956
  store i64 %call9, i64* %17, align 4, !dbg !13956
  br label %return, !dbg !13959

if.else10:                                        ; preds = %if.else
  %18 = load i32, i32* %t, align 4, !dbg !13960
  %cmp11 = icmp slt i32 %18, 32, !dbg !13962
  br i1 %cmp11, label %if.then12, label %if.else24, !dbg !13963

if.then12:                                        ; preds = %if.else10
  %mant15 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral14, i32 0, i32 0, !dbg !13964
  %mant16 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !13966
  %19 = load i32, i32* %mant16, align 4, !dbg !13966
  %mant17 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 0, !dbg !13967
  %20 = load i32, i32* %mant17, align 4, !dbg !13967
  %21 = load i32, i32* %t, align 4, !dbg !13968
  %shr18 = ashr i32 %20, %21, !dbg !13969
  %add19 = add nsw i32 %19, %shr18, !dbg !13970
  store i32 %add19, i32* %mant15, align 4, !dbg !13964
  %exp20 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral14, i32 0, i32 1, !dbg !13964
  %exp21 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !13971
  %22 = load i32, i32* %exp21, align 4, !dbg !13971
  store i32 %22, i32* %exp20, align 4, !dbg !13964
  %23 = bitcast %struct.SoftFloat* %.compoundliteral14 to i64*, !dbg !13972
  %24 = load i64, i64* %23, align 4, !dbg !13972
  %call22 = call i64 @av_normalize1_sf(i64 %24) #2, !dbg !13972
  %25 = bitcast %struct.SoftFloat* %agg.tmp13 to i64*, !dbg !13972
  store i64 %call22, i64* %25, align 4, !dbg !13972
  %26 = bitcast %struct.SoftFloat* %agg.tmp13 to i64*, !dbg !13973
  %27 = load i64, i64* %26, align 4, !dbg !13973
  %call23 = call i64 @av_normalize_sf(i64 %27) #2, !dbg !13974
  %28 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !13973
  store i64 %call23, i64* %28, align 4, !dbg !13973
  br label %return, !dbg !13976

if.else24:                                        ; preds = %if.else10
  %29 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !13977
  %30 = bitcast %struct.SoftFloat* %a to i8*, !dbg !13977
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 4, i1 false), !dbg !13977
  br label %return, !dbg !13978

return:                                           ; preds = %if.else24, %if.then12, %if.then3, %if.then
  %31 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !13979
  %32 = load i64, i64* %31, align 4, !dbg !13979
  ret i64 %32, !dbg !13979
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_mul_sf(i64 %a.coerce, i64 %b.coerce) #8 !dbg !13980 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %a = alloca %struct.SoftFloat, align 4
  %b = alloca %struct.SoftFloat, align 4
  %.compoundliteral = alloca %struct.SoftFloat, align 4
  %coerce = alloca %struct.SoftFloat, align 4
  %0 = bitcast %struct.SoftFloat* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  %1 = bitcast %struct.SoftFloat* %b to i64*
  store i64 %b.coerce, i64* %1, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a, metadata !13981, metadata !2734), !dbg !13982
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %b, metadata !13983, metadata !2734), !dbg !13984
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 1, !dbg !13985
  %2 = load i32, i32* %exp, align 4, !dbg !13985
  %exp1 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !13986
  %3 = load i32, i32* %exp1, align 4, !dbg !13987
  %add = add nsw i32 %3, %2, !dbg !13987
  store i32 %add, i32* %exp1, align 4, !dbg !13987
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !13988
  %4 = load i32, i32* %mant, align 4, !dbg !13988
  %conv = sext i32 %4 to i64, !dbg !13989
  %mant2 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 0, !dbg !13990
  %5 = load i32, i32* %mant2, align 4, !dbg !13990
  %conv3 = sext i32 %5 to i64, !dbg !13991
  %mul = mul nsw i64 %conv, %conv3, !dbg !13992
  %shr = ashr i64 %mul, 29, !dbg !13993
  %conv4 = trunc i64 %shr to i32, !dbg !13994
  %mant5 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !13995
  store i32 %conv4, i32* %mant5, align 4, !dbg !13996
  %mant6 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 0, !dbg !13997
  %mant7 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !13998
  %6 = load i32, i32* %mant7, align 4, !dbg !13998
  store i32 %6, i32* %mant6, align 4, !dbg !13997
  %exp8 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 1, !dbg !13997
  %exp9 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !13999
  %7 = load i32, i32* %exp9, align 4, !dbg !13999
  %sub = sub nsw i32 %7, 1, !dbg !14000
  store i32 %sub, i32* %exp8, align 4, !dbg !13997
  %8 = bitcast %struct.SoftFloat* %.compoundliteral to i64*, !dbg !14001
  %9 = load i64, i64* %8, align 4, !dbg !14001
  %call = call i64 @av_normalize1_sf(i64 %9) #2, !dbg !14001
  %10 = bitcast %struct.SoftFloat* %coerce to i64*, !dbg !14001
  store i64 %call, i64* %10, align 4, !dbg !14001
  %11 = bitcast %struct.SoftFloat* %a to i8*, !dbg !14001
  %12 = bitcast %struct.SoftFloat* %coerce to i8*, !dbg !14001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 4, i1 false), !dbg !14002
  %mant10 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14004
  %13 = load i32, i32* %mant10, align 4, !dbg !14004
  %tobool = icmp ne i32 %13, 0, !dbg !14006
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !14007

lor.lhs.false:                                    ; preds = %entry
  %exp11 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14008
  %14 = load i32, i32* %exp11, align 4, !dbg !14008
  %cmp = icmp slt i32 %14, -149, !dbg !14010
  br i1 %cmp, label %if.then, label %if.end, !dbg !14011

if.then:                                          ; preds = %lor.lhs.false, %entry
  %15 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !14012
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* bitcast (%struct.SoftFloat* @FLOAT_0 to i8*), i64 8, i32 4, i1 false), !dbg !14012
  br label %return, !dbg !14013

if.end:                                           ; preds = %lor.lhs.false
  %16 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !14014
  %17 = bitcast %struct.SoftFloat* %a to i8*, !dbg !14014
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 4, i1 false), !dbg !14014
  br label %return, !dbg !14015

return:                                           ; preds = %if.end, %if.then
  %18 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14016
  %19 = load i64, i64* %18, align 4, !dbg !14016
  ret i64 %19, !dbg !14016
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_normalize1_sf(i64 %a.coerce) #8 !dbg !14017 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %a = alloca %struct.SoftFloat, align 4
  %0 = bitcast %struct.SoftFloat* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a, metadata !14018, metadata !2734), !dbg !14019
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14020
  %1 = load i32, i32* %mant, align 4, !dbg !14020
  %add = add i32 %1, 1073741824, !dbg !14022
  %cmp = icmp sle i32 %add, 0, !dbg !14023
  br i1 %cmp, label %if.then, label %if.end, !dbg !14024

if.then:                                          ; preds = %entry
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14025
  %2 = load i32, i32* %exp, align 4, !dbg !14027
  %inc = add nsw i32 %2, 1, !dbg !14027
  store i32 %inc, i32* %exp, align 4, !dbg !14027
  %mant1 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14028
  %3 = load i32, i32* %mant1, align 4, !dbg !14029
  %shr = ashr i32 %3, 1, !dbg !14029
  store i32 %shr, i32* %mant1, align 4, !dbg !14029
  br label %if.end, !dbg !14030

if.end:                                           ; preds = %if.then, %entry
  %4 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !14031
  %5 = bitcast %struct.SoftFloat* %a to i8*, !dbg !14031
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 8, i32 4, i1 false), !dbg !14031
  %6 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14032
  %7 = load i64, i64* %6, align 4, !dbg !14032
  ret i64 %7, !dbg !14032
}

; Function Attrs: nounwind readnone uwtable
define internal i64 @av_normalize_sf(i64 %a.coerce) #9 !dbg !14033 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %a = alloca %struct.SoftFloat, align 4
  %0 = bitcast %struct.SoftFloat* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a, metadata !14034, metadata !2734), !dbg !14035
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14036
  %1 = load i32, i32* %mant, align 4, !dbg !14036
  %tobool = icmp ne i32 %1, 0, !dbg !14038
  br i1 %tobool, label %if.then, label %if.else, !dbg !14039

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !14040

while.cond:                                       ; preds = %while.body, %if.then
  %mant1 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14042
  %2 = load i32, i32* %mant1, align 4, !dbg !14042
  %add = add i32 %2, 536870911, !dbg !14044
  %cmp = icmp ult i32 %add, 1073741823, !dbg !14045
  br i1 %cmp, label %while.body, label %while.end, !dbg !14046

while.body:                                       ; preds = %while.cond
  %mant2 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14047
  %3 = load i32, i32* %mant2, align 4, !dbg !14047
  %mant3 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14049
  %4 = load i32, i32* %mant3, align 4, !dbg !14050
  %add4 = add nsw i32 %4, %3, !dbg !14050
  store i32 %add4, i32* %mant3, align 4, !dbg !14050
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14051
  %5 = load i32, i32* %exp, align 4, !dbg !14052
  %sub = sub nsw i32 %5, 1, !dbg !14052
  store i32 %sub, i32* %exp, align 4, !dbg !14052
  br label %while.cond, !dbg !14053, !llvm.loop !14055

while.end:                                        ; preds = %while.cond
  %exp5 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14056
  %6 = load i32, i32* %exp5, align 4, !dbg !14056
  %cmp6 = icmp slt i32 %6, -149, !dbg !14058
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !14059

if.then7:                                         ; preds = %while.end
  %exp8 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14060
  store i32 -149, i32* %exp8, align 4, !dbg !14062
  %mant9 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14063
  store i32 0, i32* %mant9, align 4, !dbg !14064
  br label %if.end, !dbg !14065

if.end:                                           ; preds = %if.then7, %while.end
  br label %if.end11, !dbg !14066

if.else:                                          ; preds = %entry
  %exp10 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14067
  store i32 -149, i32* %exp10, align 4, !dbg !14069
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.end
  %7 = bitcast %struct.SoftFloat* %retval to i8*, !dbg !14070
  %8 = bitcast %struct.SoftFloat* %a to i8*, !dbg !14070
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 4, i1 false), !dbg !14070
  %9 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14071
  %10 = load i64, i64* %9, align 4, !dbg !14071
  ret i64 %10, !dbg !14071
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_int2sf(i32 %v, i32 %frac_bits) #8 !dbg !14072 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %v.addr = alloca i32, align 4
  %frac_bits.addr = alloca i32, align 4
  %exp_offset = alloca i32, align 4
  %agg.tmp = alloca %struct.SoftFloat, align 4
  %.compoundliteral = alloca %struct.SoftFloat, align 4
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !14075, metadata !2734), !dbg !14076
  store i32 %frac_bits, i32* %frac_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frac_bits.addr, metadata !14077, metadata !2734), !dbg !14078
  call void @llvm.dbg.declare(metadata i32* %exp_offset, metadata !14079, metadata !2734), !dbg !14080
  store i32 0, i32* %exp_offset, align 4, !dbg !14080
  %0 = load i32, i32* %v.addr, align 4, !dbg !14081
  %cmp = icmp sle i32 %0, -2147483647, !dbg !14083
  br i1 %cmp, label %if.then, label %if.end, !dbg !14084

if.then:                                          ; preds = %entry
  store i32 1, i32* %exp_offset, align 4, !dbg !14085
  %1 = load i32, i32* %v.addr, align 4, !dbg !14087
  %shr = ashr i32 %1, 1, !dbg !14087
  store i32 %shr, i32* %v.addr, align 4, !dbg !14087
  br label %if.end, !dbg !14088

if.end:                                           ; preds = %if.then, %entry
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 0, !dbg !14089
  %2 = load i32, i32* %v.addr, align 4, !dbg !14090
  store i32 %2, i32* %mant, align 4, !dbg !14089
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 1, !dbg !14089
  %3 = load i32, i32* %frac_bits.addr, align 4, !dbg !14091
  %sub = sub nsw i32 30, %3, !dbg !14092
  %4 = load i32, i32* %exp_offset, align 4, !dbg !14093
  %add = add nsw i32 %sub, %4, !dbg !14094
  store i32 %add, i32* %exp, align 4, !dbg !14089
  %5 = bitcast %struct.SoftFloat* %.compoundliteral to i64*, !dbg !14095
  %6 = load i64, i64* %5, align 4, !dbg !14095
  %call = call i64 @av_normalize1_sf(i64 %6) #2, !dbg !14095
  %7 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !14095
  store i64 %call, i64* %7, align 4, !dbg !14095
  %8 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !14096
  %9 = load i64, i64* %8, align 4, !dbg !14096
  %call1 = call i64 @av_normalize_sf(i64 %9) #2, !dbg !14097
  %10 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14096
  store i64 %call1, i64* %10, align 4, !dbg !14096
  %11 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !14099
  %12 = load i64, i64* %11, align 4, !dbg !14099
  ret i64 %12, !dbg !14099
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @av_gt_sf(i64 %a.coerce, i64 %b.coerce) #8 !dbg !14100 {
entry:
  %retval = alloca i32, align 4
  %a = alloca %struct.SoftFloat, align 4
  %b = alloca %struct.SoftFloat, align 4
  %t = alloca i32, align 4
  %0 = bitcast %struct.SoftFloat* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  %1 = bitcast %struct.SoftFloat* %b to i64*
  store i64 %b.coerce, i64* %1, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a, metadata !14103, metadata !2734), !dbg !14104
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %b, metadata !14105, metadata !2734), !dbg !14106
  call void @llvm.dbg.declare(metadata i32* %t, metadata !14107, metadata !2734), !dbg !14108
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 1, !dbg !14109
  %2 = load i32, i32* %exp, align 4, !dbg !14109
  %exp1 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 1, !dbg !14110
  %3 = load i32, i32* %exp1, align 4, !dbg !14110
  %sub = sub nsw i32 %2, %3, !dbg !14111
  store i32 %sub, i32* %t, align 4, !dbg !14108
  %4 = load i32, i32* %t, align 4, !dbg !14112
  %cmp = icmp slt i32 %4, -31, !dbg !14114
  br i1 %cmp, label %if.then, label %if.else, !dbg !14115

if.then:                                          ; preds = %entry
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 0, !dbg !14116
  %5 = load i32, i32* %mant, align 4, !dbg !14116
  %cmp2 = icmp sgt i32 0, %5, !dbg !14118
  %conv = zext i1 %cmp2 to i32, !dbg !14118
  store i32 %conv, i32* %retval, align 4, !dbg !14119
  br label %return, !dbg !14119

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %t, align 4, !dbg !14120
  %cmp3 = icmp slt i32 %6, 0, !dbg !14122
  br i1 %cmp3, label %if.then5, label %if.else11, !dbg !14123

if.then5:                                         ; preds = %if.else
  %mant6 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14124
  %7 = load i32, i32* %mant6, align 4, !dbg !14124
  %8 = load i32, i32* %t, align 4, !dbg !14126
  %sub7 = sub nsw i32 0, %8, !dbg !14127
  %shr = ashr i32 %7, %sub7, !dbg !14128
  %mant8 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 0, !dbg !14129
  %9 = load i32, i32* %mant8, align 4, !dbg !14129
  %cmp9 = icmp sgt i32 %shr, %9, !dbg !14130
  %conv10 = zext i1 %cmp9 to i32, !dbg !14130
  store i32 %conv10, i32* %retval, align 4, !dbg !14131
  br label %return, !dbg !14131

if.else11:                                        ; preds = %if.else
  %10 = load i32, i32* %t, align 4, !dbg !14132
  %cmp12 = icmp slt i32 %10, 32, !dbg !14134
  br i1 %cmp12, label %if.then14, label %if.else20, !dbg !14135

if.then14:                                        ; preds = %if.else11
  %mant15 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14136
  %11 = load i32, i32* %mant15, align 4, !dbg !14136
  %mant16 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 0, !dbg !14138
  %12 = load i32, i32* %mant16, align 4, !dbg !14138
  %13 = load i32, i32* %t, align 4, !dbg !14139
  %shr17 = ashr i32 %12, %13, !dbg !14140
  %cmp18 = icmp sgt i32 %11, %shr17, !dbg !14141
  %conv19 = zext i1 %cmp18 to i32, !dbg !14141
  store i32 %conv19, i32* %retval, align 4, !dbg !14142
  br label %return, !dbg !14142

if.else20:                                        ; preds = %if.else11
  %mant21 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a, i32 0, i32 0, !dbg !14143
  %14 = load i32, i32* %mant21, align 4, !dbg !14143
  %cmp22 = icmp sgt i32 %14, 0, !dbg !14144
  %conv23 = zext i1 %cmp22 to i32, !dbg !14144
  store i32 %conv23, i32* %retval, align 4, !dbg !14145
  br label %return, !dbg !14145

return:                                           ; preds = %if.else20, %if.then14, %if.then5, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !14146
  ret i32 %15, !dbg !14146
}

; Function Attrs: nounwind uwtable
define internal i32 @sbr_lf_gen(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, [40 x [2 x i32]]* %X_low, [32 x [32 x [2 x i32]]]* %W, i32 %buf_idx) #3 !dbg !14147 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %X_low.addr = alloca [40 x [2 x i32]]*, align 8
  %W.addr = alloca [32 x [32 x [2 x i32]]]*, align 8
  %buf_idx.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %t_HFGen = alloca i32, align 4
  %i_f = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !14148, metadata !2734), !dbg !14149
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !14150, metadata !2734), !dbg !14151
  store [40 x [2 x i32]]* %X_low, [40 x [2 x i32]]** %X_low.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x i32]]** %X_low.addr, metadata !14152, metadata !2734), !dbg !14153
  store [32 x [32 x [2 x i32]]]* %W, [32 x [32 x [2 x i32]]]** %W.addr, align 8
  call void @llvm.dbg.declare(metadata [32 x [32 x [2 x i32]]]** %W.addr, metadata !14154, metadata !2734), !dbg !14155
  store i32 %buf_idx, i32* %buf_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_idx.addr, metadata !14156, metadata !2734), !dbg !14157
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14158, metadata !2734), !dbg !14159
  call void @llvm.dbg.declare(metadata i32* %k, metadata !14160, metadata !2734), !dbg !14161
  call void @llvm.dbg.declare(metadata i32* %t_HFGen, metadata !14162, metadata !2734), !dbg !14163
  store i32 8, i32* %t_HFGen, align 4, !dbg !14163
  call void @llvm.dbg.declare(metadata i32* %i_f, metadata !14164, metadata !2734), !dbg !14165
  store i32 32, i32* %i_f, align 4, !dbg !14165
  %0 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_low.addr, align 8, !dbg !14166
  %1 = bitcast [40 x [2 x i32]]* %0 to i8*, !dbg !14167
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 10240, i32 4, i1 false), !dbg !14167
  store i32 0, i32* %k, align 4, !dbg !14168
  br label %for.cond, !dbg !14170

for.cond:                                         ; preds = %for.inc28, %entry
  %2 = load i32, i32* %k, align 4, !dbg !14171
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14174
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 13, !dbg !14175
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !14174
  %4 = load i32, i32* %arrayidx, align 4, !dbg !14174
  %cmp = icmp slt i32 %2, %4, !dbg !14176
  br i1 %cmp, label %for.body, label %for.end30, !dbg !14177

for.body:                                         ; preds = %for.cond
  store i32 8, i32* %i, align 4, !dbg !14178
  br label %for.cond1, !dbg !14181

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %i, align 4, !dbg !14182
  %cmp2 = icmp slt i32 %5, 40, !dbg !14185
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !14186

for.body3:                                        ; preds = %for.cond1
  %6 = load i32, i32* %k, align 4, !dbg !14187
  %idxprom = sext i32 %6 to i64, !dbg !14189
  %7 = load i32, i32* %i, align 4, !dbg !14190
  %sub = sub nsw i32 %7, 8, !dbg !14191
  %idxprom4 = sext i32 %sub to i64, !dbg !14189
  %8 = load i32, i32* %buf_idx.addr, align 4, !dbg !14192
  %idxprom5 = sext i32 %8 to i64, !dbg !14189
  %9 = load [32 x [32 x [2 x i32]]]*, [32 x [32 x [2 x i32]]]** %W.addr, align 8, !dbg !14189
  %arrayidx6 = getelementptr inbounds [32 x [32 x [2 x i32]]], [32 x [32 x [2 x i32]]]* %9, i64 %idxprom5, !dbg !14189
  %arrayidx7 = getelementptr inbounds [32 x [32 x [2 x i32]]], [32 x [32 x [2 x i32]]]* %arrayidx6, i64 0, i64 %idxprom4, !dbg !14189
  %arrayidx8 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx7, i64 0, i64 %idxprom, !dbg !14189
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx8, i64 0, i64 0, !dbg !14189
  %10 = load i32, i32* %arrayidx9, align 4, !dbg !14189
  %11 = load i32, i32* %i, align 4, !dbg !14193
  %idxprom10 = sext i32 %11 to i64, !dbg !14194
  %12 = load i32, i32* %k, align 4, !dbg !14195
  %idxprom11 = sext i32 %12 to i64, !dbg !14194
  %13 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_low.addr, align 8, !dbg !14194
  %arrayidx12 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %13, i64 %idxprom11, !dbg !14194
  %arrayidx13 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %arrayidx12, i64 0, i64 %idxprom10, !dbg !14194
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx13, i64 0, i64 0, !dbg !14194
  store i32 %10, i32* %arrayidx14, align 4, !dbg !14196
  %14 = load i32, i32* %k, align 4, !dbg !14197
  %idxprom15 = sext i32 %14 to i64, !dbg !14198
  %15 = load i32, i32* %i, align 4, !dbg !14199
  %sub16 = sub nsw i32 %15, 8, !dbg !14200
  %idxprom17 = sext i32 %sub16 to i64, !dbg !14198
  %16 = load i32, i32* %buf_idx.addr, align 4, !dbg !14201
  %idxprom18 = sext i32 %16 to i64, !dbg !14198
  %17 = load [32 x [32 x [2 x i32]]]*, [32 x [32 x [2 x i32]]]** %W.addr, align 8, !dbg !14198
  %arrayidx19 = getelementptr inbounds [32 x [32 x [2 x i32]]], [32 x [32 x [2 x i32]]]* %17, i64 %idxprom18, !dbg !14198
  %arrayidx20 = getelementptr inbounds [32 x [32 x [2 x i32]]], [32 x [32 x [2 x i32]]]* %arrayidx19, i64 0, i64 %idxprom17, !dbg !14198
  %arrayidx21 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx20, i64 0, i64 %idxprom15, !dbg !14198
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx21, i64 0, i64 1, !dbg !14198
  %18 = load i32, i32* %arrayidx22, align 4, !dbg !14198
  %19 = load i32, i32* %i, align 4, !dbg !14202
  %idxprom23 = sext i32 %19 to i64, !dbg !14203
  %20 = load i32, i32* %k, align 4, !dbg !14204
  %idxprom24 = sext i32 %20 to i64, !dbg !14203
  %21 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_low.addr, align 8, !dbg !14203
  %arrayidx25 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %21, i64 %idxprom24, !dbg !14203
  %arrayidx26 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %arrayidx25, i64 0, i64 %idxprom23, !dbg !14203
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx26, i64 0, i64 1, !dbg !14203
  store i32 %18, i32* %arrayidx27, align 4, !dbg !14205
  br label %for.inc, !dbg !14206

for.inc:                                          ; preds = %for.body3
  %22 = load i32, i32* %i, align 4, !dbg !14207
  %inc = add nsw i32 %22, 1, !dbg !14207
  store i32 %inc, i32* %i, align 4, !dbg !14207
  br label %for.cond1, !dbg !14209, !llvm.loop !14210

for.end:                                          ; preds = %for.cond1
  br label %for.inc28, !dbg !14212

for.inc28:                                        ; preds = %for.end
  %23 = load i32, i32* %k, align 4, !dbg !14213
  %inc29 = add nsw i32 %23, 1, !dbg !14213
  store i32 %inc29, i32* %k, align 4, !dbg !14213
  br label %for.cond, !dbg !14215, !llvm.loop !14216

for.end30:                                        ; preds = %for.cond
  %24 = load i32, i32* %buf_idx.addr, align 4, !dbg !14218
  %sub31 = sub nsw i32 1, %24, !dbg !14219
  store i32 %sub31, i32* %buf_idx.addr, align 4, !dbg !14220
  store i32 0, i32* %k, align 4, !dbg !14221
  br label %for.cond32, !dbg !14223

for.cond32:                                       ; preds = %for.inc70, %for.end30
  %25 = load i32, i32* %k, align 4, !dbg !14224
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14227
  %kx33 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 13, !dbg !14228
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %kx33, i64 0, i64 0, !dbg !14227
  %27 = load i32, i32* %arrayidx34, align 8, !dbg !14227
  %cmp35 = icmp slt i32 %25, %27, !dbg !14229
  br i1 %cmp35, label %for.body36, label %for.end72, !dbg !14230

for.body36:                                       ; preds = %for.cond32
  store i32 0, i32* %i, align 4, !dbg !14231
  br label %for.cond37, !dbg !14234

for.cond37:                                       ; preds = %for.inc67, %for.body36
  %28 = load i32, i32* %i, align 4, !dbg !14235
  %cmp38 = icmp slt i32 %28, 8, !dbg !14238
  br i1 %cmp38, label %for.body39, label %for.end69, !dbg !14239

for.body39:                                       ; preds = %for.cond37
  %29 = load i32, i32* %k, align 4, !dbg !14240
  %idxprom40 = sext i32 %29 to i64, !dbg !14242
  %30 = load i32, i32* %i, align 4, !dbg !14243
  %add = add nsw i32 %30, 32, !dbg !14244
  %sub41 = sub nsw i32 %add, 8, !dbg !14245
  %idxprom42 = sext i32 %sub41 to i64, !dbg !14242
  %31 = load i32, i32* %buf_idx.addr, align 4, !dbg !14246
  %idxprom43 = sext i32 %31 to i64, !dbg !14242
  %32 = load [32 x [32 x [2 x i32]]]*, [32 x [32 x [2 x i32]]]** %W.addr, align 8, !dbg !14242
  %arrayidx44 = getelementptr inbounds [32 x [32 x [2 x i32]]], [32 x [32 x [2 x i32]]]* %32, i64 %idxprom43, !dbg !14242
  %arrayidx45 = getelementptr inbounds [32 x [32 x [2 x i32]]], [32 x [32 x [2 x i32]]]* %arrayidx44, i64 0, i64 %idxprom42, !dbg !14242
  %arrayidx46 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx45, i64 0, i64 %idxprom40, !dbg !14242
  %arrayidx47 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx46, i64 0, i64 0, !dbg !14242
  %33 = load i32, i32* %arrayidx47, align 4, !dbg !14242
  %34 = load i32, i32* %i, align 4, !dbg !14247
  %idxprom48 = sext i32 %34 to i64, !dbg !14248
  %35 = load i32, i32* %k, align 4, !dbg !14249
  %idxprom49 = sext i32 %35 to i64, !dbg !14248
  %36 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_low.addr, align 8, !dbg !14248
  %arrayidx50 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %36, i64 %idxprom49, !dbg !14248
  %arrayidx51 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %arrayidx50, i64 0, i64 %idxprom48, !dbg !14248
  %arrayidx52 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx51, i64 0, i64 0, !dbg !14248
  store i32 %33, i32* %arrayidx52, align 4, !dbg !14250
  %37 = load i32, i32* %k, align 4, !dbg !14251
  %idxprom53 = sext i32 %37 to i64, !dbg !14252
  %38 = load i32, i32* %i, align 4, !dbg !14253
  %add54 = add nsw i32 %38, 32, !dbg !14254
  %sub55 = sub nsw i32 %add54, 8, !dbg !14255
  %idxprom56 = sext i32 %sub55 to i64, !dbg !14252
  %39 = load i32, i32* %buf_idx.addr, align 4, !dbg !14256
  %idxprom57 = sext i32 %39 to i64, !dbg !14252
  %40 = load [32 x [32 x [2 x i32]]]*, [32 x [32 x [2 x i32]]]** %W.addr, align 8, !dbg !14252
  %arrayidx58 = getelementptr inbounds [32 x [32 x [2 x i32]]], [32 x [32 x [2 x i32]]]* %40, i64 %idxprom57, !dbg !14252
  %arrayidx59 = getelementptr inbounds [32 x [32 x [2 x i32]]], [32 x [32 x [2 x i32]]]* %arrayidx58, i64 0, i64 %idxprom56, !dbg !14252
  %arrayidx60 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx59, i64 0, i64 %idxprom53, !dbg !14252
  %arrayidx61 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx60, i64 0, i64 1, !dbg !14252
  %41 = load i32, i32* %arrayidx61, align 4, !dbg !14252
  %42 = load i32, i32* %i, align 4, !dbg !14257
  %idxprom62 = sext i32 %42 to i64, !dbg !14258
  %43 = load i32, i32* %k, align 4, !dbg !14259
  %idxprom63 = sext i32 %43 to i64, !dbg !14258
  %44 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_low.addr, align 8, !dbg !14258
  %arrayidx64 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %44, i64 %idxprom63, !dbg !14258
  %arrayidx65 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %arrayidx64, i64 0, i64 %idxprom62, !dbg !14258
  %arrayidx66 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx65, i64 0, i64 1, !dbg !14258
  store i32 %41, i32* %arrayidx66, align 4, !dbg !14260
  br label %for.inc67, !dbg !14261

for.inc67:                                        ; preds = %for.body39
  %45 = load i32, i32* %i, align 4, !dbg !14262
  %inc68 = add nsw i32 %45, 1, !dbg !14262
  store i32 %inc68, i32* %i, align 4, !dbg !14262
  br label %for.cond37, !dbg !14264, !llvm.loop !14265

for.end69:                                        ; preds = %for.cond37
  br label %for.inc70, !dbg !14267

for.inc70:                                        ; preds = %for.end69
  %46 = load i32, i32* %k, align 4, !dbg !14268
  %inc71 = add nsw i32 %46, 1, !dbg !14268
  store i32 %inc71, i32* %k, align 4, !dbg !14268
  br label %for.cond32, !dbg !14270, !llvm.loop !14271

for.end72:                                        ; preds = %for.cond32
  ret i32 0, !dbg !14273
}

; Function Attrs: nounwind uwtable
define internal void @sbr_hf_assemble([64 x [2 x i32]]* %Y1, [40 x [2 x i32]]* %X_high, %struct.SpectralBandReplication* %sbr, %struct.SBRData* %ch_data, i32* %e_a) #3 !dbg !2567 {
entry:
  %Y1.addr = alloca [64 x [2 x i32]]*, align 8
  %X_high.addr = alloca [40 x [2 x i32]]*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %e_a.addr = alloca i32*, align 8
  %e = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %m = alloca i32, align 4
  %h_SL = alloca i32, align 4
  %kx = alloca i32, align 4
  %m_max = alloca i32, align 4
  %g_temp = alloca [48 x %struct.SoftFloat]*, align 8
  %q_temp = alloca [48 x %struct.SoftFloat]*, align 8
  %indexnoise = alloca i32, align 4
  %indexsine = alloca i32, align 4
  %g_filt_tab = alloca [48 x %struct.SoftFloat], align 16
  %q_filt_tab = alloca [48 x %struct.SoftFloat], align 16
  %g_filt = alloca %struct.SoftFloat*, align 8
  %q_filt = alloca %struct.SoftFloat*, align 8
  %idx1 = alloca i32, align 4
  %agg.tmp = alloca %struct.SoftFloat, align 4
  %coerce = alloca %struct.SoftFloat, align 4
  %agg.tmp177 = alloca %struct.SoftFloat, align 4
  %coerce187 = alloca %struct.SoftFloat, align 4
  %idx = alloca i32, align 4
  %A = alloca i32, align 4
  %B = alloca i32, align 4
  %out = alloca i32*, align 8
  %shift = alloca i32, align 4
  %round = alloca i32, align 4
  %in = alloca %struct.SoftFloat*, align 8
  %shift2 = alloca i32, align 4
  store [64 x [2 x i32]]* %Y1, [64 x [2 x i32]]** %Y1.addr, align 8
  call void @llvm.dbg.declare(metadata [64 x [2 x i32]]** %Y1.addr, metadata !14274, metadata !2734), !dbg !14275
  store [40 x [2 x i32]]* %X_high, [40 x [2 x i32]]** %X_high.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x i32]]** %X_high.addr, metadata !14276, metadata !2734), !dbg !14277
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !14278, metadata !2734), !dbg !14279
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !14280, metadata !2734), !dbg !14281
  store i32* %e_a, i32** %e_a.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %e_a.addr, metadata !14282, metadata !2734), !dbg !14283
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14284, metadata !2734), !dbg !14285
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14286, metadata !2734), !dbg !14287
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14288, metadata !2734), !dbg !14289
  call void @llvm.dbg.declare(metadata i32* %m, metadata !14290, metadata !2734), !dbg !14291
  call void @llvm.dbg.declare(metadata i32* %h_SL, metadata !14292, metadata !2734), !dbg !14293
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14294
  %bs_smoothing_mode = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 10, !dbg !14295
  %1 = load i32, i32* %bs_smoothing_mode, align 4, !dbg !14295
  %tobool = icmp ne i32 %1, 0, !dbg !14296
  %lnot = xor i1 %tobool, true, !dbg !14296
  %lnot.ext = zext i1 %lnot to i32, !dbg !14296
  %mul = mul nsw i32 4, %lnot.ext, !dbg !14297
  store i32 %mul, i32* %h_SL, align 4, !dbg !14293
  call void @llvm.dbg.declare(metadata i32* %kx, metadata !14298, metadata !2734), !dbg !14299
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14300
  %kx1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 13, !dbg !14301
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %kx1, i64 0, i64 1, !dbg !14300
  %3 = load i32, i32* %arrayidx, align 4, !dbg !14300
  store i32 %3, i32* %kx, align 4, !dbg !14299
  call void @llvm.dbg.declare(metadata i32* %m_max, metadata !14302, metadata !2734), !dbg !14303
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14304
  %m2 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 14, !dbg !14305
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %m2, i64 0, i64 1, !dbg !14304
  %5 = load i32, i32* %arrayidx3, align 4, !dbg !14304
  store i32 %5, i32* %m_max, align 4, !dbg !14303
  call void @llvm.dbg.declare(metadata [48 x %struct.SoftFloat]** %g_temp, metadata !14306, metadata !2734), !dbg !14309
  %6 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14310
  %g_temp4 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %6, i32 0, i32 19, !dbg !14311
  %arraydecay = getelementptr inbounds [42 x [48 x %struct.SoftFloat]], [42 x [48 x %struct.SoftFloat]]* %g_temp4, i32 0, i32 0, !dbg !14310
  store [48 x %struct.SoftFloat]* %arraydecay, [48 x %struct.SoftFloat]** %g_temp, align 8, !dbg !14309
  call void @llvm.dbg.declare(metadata [48 x %struct.SoftFloat]** %q_temp, metadata !14312, metadata !2734), !dbg !14313
  %7 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14314
  %q_temp5 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %7, i32 0, i32 20, !dbg !14315
  %arraydecay6 = getelementptr inbounds [42 x [48 x %struct.SoftFloat]], [42 x [48 x %struct.SoftFloat]]* %q_temp5, i32 0, i32 0, !dbg !14314
  store [48 x %struct.SoftFloat]* %arraydecay6, [48 x %struct.SoftFloat]** %q_temp, align 8, !dbg !14313
  call void @llvm.dbg.declare(metadata i32* %indexnoise, metadata !14316, metadata !2734), !dbg !14317
  %8 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14318
  %f_indexnoise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %8, i32 0, i32 29, !dbg !14319
  %9 = load i32, i32* %f_indexnoise, align 4, !dbg !14319
  store i32 %9, i32* %indexnoise, align 4, !dbg !14317
  call void @llvm.dbg.declare(metadata i32* %indexsine, metadata !14320, metadata !2734), !dbg !14321
  %10 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14322
  %f_indexsine = getelementptr inbounds %struct.SBRData, %struct.SBRData* %10, i32 0, i32 30, !dbg !14323
  %11 = load i32, i32* %f_indexsine, align 8, !dbg !14323
  store i32 %11, i32* %indexsine, align 4, !dbg !14321
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14324
  %reset = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 4, !dbg !14326
  %13 = load i32, i32* %reset, align 16, !dbg !14326
  %tobool7 = icmp ne i32 %13, 0, !dbg !14324
  br i1 %tobool7, label %if.then, label %if.else, !dbg !14327

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !14328
  br label %for.cond, !dbg !14331

for.cond:                                         ; preds = %for.inc, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !14332
  %15 = load i32, i32* %h_SL, align 4, !dbg !14335
  %cmp = icmp slt i32 %14, %15, !dbg !14336
  br i1 %cmp, label %for.body, label %for.end, !dbg !14337

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !14338
  %17 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14340
  %t_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %17, i32 0, i32 26, !dbg !14341
  %arrayidx8 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env, i64 0, i64 0, !dbg !14340
  %18 = load i8, i8* %arrayidx8, align 8, !dbg !14340
  %conv = zext i8 %18 to i32, !dbg !14340
  %mul9 = mul nsw i32 2, %conv, !dbg !14342
  %add = add nsw i32 %16, %mul9, !dbg !14343
  %idxprom = sext i32 %add to i64, !dbg !14344
  %19 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %g_temp, align 8, !dbg !14344
  %arrayidx10 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %19, i64 %idxprom, !dbg !14344
  %arraydecay11 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx10, i32 0, i32 0, !dbg !14345
  %20 = bitcast %struct.SoftFloat* %arraydecay11 to i8*, !dbg !14345
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14346
  %gain = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %21, i32 0, i32 41, !dbg !14347
  %arrayidx12 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain, i64 0, i64 0, !dbg !14346
  %arraydecay13 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx12, i32 0, i32 0, !dbg !14345
  %22 = bitcast %struct.SoftFloat* %arraydecay13 to i8*, !dbg !14345
  %23 = load i32, i32* %m_max, align 4, !dbg !14348
  %conv14 = sext i32 %23 to i64, !dbg !14348
  %mul15 = mul i64 %conv14, 8, !dbg !14349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %22, i64 %mul15, i32 4, i1 false), !dbg !14345
  %24 = load i32, i32* %i, align 4, !dbg !14350
  %25 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14351
  %t_env16 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %25, i32 0, i32 26, !dbg !14352
  %arrayidx17 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env16, i64 0, i64 0, !dbg !14351
  %26 = load i8, i8* %arrayidx17, align 8, !dbg !14351
  %conv18 = zext i8 %26 to i32, !dbg !14351
  %mul19 = mul nsw i32 2, %conv18, !dbg !14353
  %add20 = add nsw i32 %24, %mul19, !dbg !14354
  %idxprom21 = sext i32 %add20 to i64, !dbg !14355
  %27 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %q_temp, align 8, !dbg !14355
  %arrayidx22 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %27, i64 %idxprom21, !dbg !14355
  %arraydecay23 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx22, i32 0, i32 0, !dbg !14356
  %28 = bitcast %struct.SoftFloat* %arraydecay23 to i8*, !dbg !14356
  %29 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14357
  %q_m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %29, i32 0, i32 39, !dbg !14358
  %arrayidx24 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_m, i64 0, i64 0, !dbg !14357
  %arraydecay25 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx24, i32 0, i32 0, !dbg !14356
  %30 = bitcast %struct.SoftFloat* %arraydecay25 to i8*, !dbg !14356
  %31 = load i32, i32* %m_max, align 4, !dbg !14359
  %conv26 = sext i32 %31 to i64, !dbg !14359
  %mul27 = mul i64 %conv26, 8, !dbg !14360
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %30, i64 %mul27, i32 4, i1 false), !dbg !14356
  br label %for.inc, !dbg !14361

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !14362
  %inc = add nsw i32 %32, 1, !dbg !14362
  store i32 %inc, i32* %i, align 4, !dbg !14362
  br label %for.cond, !dbg !14364, !llvm.loop !14365

for.end:                                          ; preds = %for.cond
  br label %if.end66, !dbg !14367

if.else:                                          ; preds = %entry
  %33 = load i32, i32* %h_SL, align 4, !dbg !14368
  %tobool28 = icmp ne i32 %33, 0, !dbg !14368
  br i1 %tobool28, label %if.then29, label %if.end, !dbg !14368

if.then29:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !14371
  br label %for.cond30, !dbg !14374

for.cond30:                                       ; preds = %for.inc63, %if.then29
  %34 = load i32, i32* %i, align 4, !dbg !14375
  %cmp31 = icmp slt i32 %34, 4, !dbg !14378
  br i1 %cmp31, label %for.body33, label %for.end65, !dbg !14379

for.body33:                                       ; preds = %for.cond30
  %35 = load i32, i32* %i, align 4, !dbg !14380
  %36 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14382
  %t_env34 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %36, i32 0, i32 26, !dbg !14383
  %arrayidx35 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env34, i64 0, i64 0, !dbg !14382
  %37 = load i8, i8* %arrayidx35, align 8, !dbg !14382
  %conv36 = zext i8 %37 to i32, !dbg !14382
  %mul37 = mul nsw i32 2, %conv36, !dbg !14384
  %add38 = add nsw i32 %35, %mul37, !dbg !14385
  %idxprom39 = sext i32 %add38 to i64, !dbg !14386
  %38 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %g_temp, align 8, !dbg !14386
  %arrayidx40 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %38, i64 %idxprom39, !dbg !14386
  %arraydecay41 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx40, i32 0, i32 0, !dbg !14387
  %39 = bitcast %struct.SoftFloat* %arraydecay41 to i8*, !dbg !14387
  %40 = load i32, i32* %i, align 4, !dbg !14388
  %41 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14389
  %t_env_num_env_old = getelementptr inbounds %struct.SBRData, %struct.SBRData* %41, i32 0, i32 27, !dbg !14390
  %42 = load i8, i8* %t_env_num_env_old, align 32, !dbg !14390
  %conv42 = zext i8 %42 to i32, !dbg !14389
  %mul43 = mul nsw i32 2, %conv42, !dbg !14391
  %add44 = add nsw i32 %40, %mul43, !dbg !14392
  %idxprom45 = sext i32 %add44 to i64, !dbg !14393
  %43 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %g_temp, align 8, !dbg !14393
  %arrayidx46 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %43, i64 %idxprom45, !dbg !14393
  %arraydecay47 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx46, i32 0, i32 0, !dbg !14387
  %44 = bitcast %struct.SoftFloat* %arraydecay47 to i8*, !dbg !14387
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %44, i64 384, i32 4, i1 false), !dbg !14387
  %45 = load i32, i32* %i, align 4, !dbg !14394
  %46 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14395
  %t_env48 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %46, i32 0, i32 26, !dbg !14396
  %arrayidx49 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env48, i64 0, i64 0, !dbg !14395
  %47 = load i8, i8* %arrayidx49, align 8, !dbg !14395
  %conv50 = zext i8 %47 to i32, !dbg !14395
  %mul51 = mul nsw i32 2, %conv50, !dbg !14397
  %add52 = add nsw i32 %45, %mul51, !dbg !14398
  %idxprom53 = sext i32 %add52 to i64, !dbg !14399
  %48 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %q_temp, align 8, !dbg !14399
  %arrayidx54 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %48, i64 %idxprom53, !dbg !14399
  %arraydecay55 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx54, i32 0, i32 0, !dbg !14400
  %49 = bitcast %struct.SoftFloat* %arraydecay55 to i8*, !dbg !14400
  %50 = load i32, i32* %i, align 4, !dbg !14401
  %51 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14402
  %t_env_num_env_old56 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %51, i32 0, i32 27, !dbg !14403
  %52 = load i8, i8* %t_env_num_env_old56, align 32, !dbg !14403
  %conv57 = zext i8 %52 to i32, !dbg !14402
  %mul58 = mul nsw i32 2, %conv57, !dbg !14404
  %add59 = add nsw i32 %50, %mul58, !dbg !14405
  %idxprom60 = sext i32 %add59 to i64, !dbg !14406
  %53 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %q_temp, align 8, !dbg !14406
  %arrayidx61 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %53, i64 %idxprom60, !dbg !14406
  %arraydecay62 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx61, i32 0, i32 0, !dbg !14400
  %54 = bitcast %struct.SoftFloat* %arraydecay62 to i8*, !dbg !14400
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %54, i64 384, i32 4, i1 false), !dbg !14400
  br label %for.inc63, !dbg !14407

for.inc63:                                        ; preds = %for.body33
  %55 = load i32, i32* %i, align 4, !dbg !14408
  %inc64 = add nsw i32 %55, 1, !dbg !14408
  store i32 %inc64, i32* %i, align 4, !dbg !14408
  br label %for.cond30, !dbg !14410, !llvm.loop !14411

for.end65:                                        ; preds = %for.cond30
  br label %if.end, !dbg !14413

if.end:                                           ; preds = %for.end65, %if.else
  br label %if.end66

if.end66:                                         ; preds = %if.end, %for.end
  store i32 0, i32* %e, align 4, !dbg !14414
  br label %for.cond67, !dbg !14416

for.cond67:                                       ; preds = %for.inc109, %if.end66
  %56 = load i32, i32* %e, align 4, !dbg !14417
  %57 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14420
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %57, i32 0, i32 2, !dbg !14421
  %58 = load i32, i32* %bs_num_env, align 8, !dbg !14421
  %cmp68 = icmp slt i32 %56, %58, !dbg !14422
  br i1 %cmp68, label %for.body70, label %for.end111, !dbg !14423

for.body70:                                       ; preds = %for.cond67
  %59 = load i32, i32* %e, align 4, !dbg !14424
  %idxprom71 = sext i32 %59 to i64, !dbg !14427
  %60 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14427
  %t_env72 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %60, i32 0, i32 26, !dbg !14428
  %arrayidx73 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env72, i64 0, i64 %idxprom71, !dbg !14427
  %61 = load i8, i8* %arrayidx73, align 1, !dbg !14427
  %conv74 = zext i8 %61 to i32, !dbg !14427
  %mul75 = mul nsw i32 2, %conv74, !dbg !14429
  store i32 %mul75, i32* %i, align 4, !dbg !14430
  br label %for.cond76, !dbg !14431

for.cond76:                                       ; preds = %for.inc106, %for.body70
  %62 = load i32, i32* %i, align 4, !dbg !14432
  %63 = load i32, i32* %e, align 4, !dbg !14435
  %add77 = add nsw i32 %63, 1, !dbg !14436
  %idxprom78 = sext i32 %add77 to i64, !dbg !14437
  %64 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14437
  %t_env79 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %64, i32 0, i32 26, !dbg !14438
  %arrayidx80 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env79, i64 0, i64 %idxprom78, !dbg !14437
  %65 = load i8, i8* %arrayidx80, align 1, !dbg !14437
  %conv81 = zext i8 %65 to i32, !dbg !14437
  %mul82 = mul nsw i32 2, %conv81, !dbg !14439
  %cmp83 = icmp slt i32 %62, %mul82, !dbg !14440
  br i1 %cmp83, label %for.body85, label %for.end108, !dbg !14441

for.body85:                                       ; preds = %for.cond76
  %66 = load i32, i32* %h_SL, align 4, !dbg !14442
  %67 = load i32, i32* %i, align 4, !dbg !14444
  %add86 = add nsw i32 %66, %67, !dbg !14445
  %idxprom87 = sext i32 %add86 to i64, !dbg !14446
  %68 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %g_temp, align 8, !dbg !14446
  %arrayidx88 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %68, i64 %idxprom87, !dbg !14446
  %arraydecay89 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx88, i32 0, i32 0, !dbg !14447
  %69 = bitcast %struct.SoftFloat* %arraydecay89 to i8*, !dbg !14447
  %70 = load i32, i32* %e, align 4, !dbg !14448
  %idxprom90 = sext i32 %70 to i64, !dbg !14449
  %71 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14449
  %gain91 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %71, i32 0, i32 41, !dbg !14450
  %arrayidx92 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %gain91, i64 0, i64 %idxprom90, !dbg !14449
  %arraydecay93 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx92, i32 0, i32 0, !dbg !14447
  %72 = bitcast %struct.SoftFloat* %arraydecay93 to i8*, !dbg !14447
  %73 = load i32, i32* %m_max, align 4, !dbg !14451
  %conv94 = sext i32 %73 to i64, !dbg !14451
  %mul95 = mul i64 %conv94, 8, !dbg !14452
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %72, i64 %mul95, i32 4, i1 false), !dbg !14447
  %74 = load i32, i32* %h_SL, align 4, !dbg !14453
  %75 = load i32, i32* %i, align 4, !dbg !14454
  %add96 = add nsw i32 %74, %75, !dbg !14455
  %idxprom97 = sext i32 %add96 to i64, !dbg !14456
  %76 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %q_temp, align 8, !dbg !14456
  %arrayidx98 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %76, i64 %idxprom97, !dbg !14456
  %arraydecay99 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx98, i32 0, i32 0, !dbg !14457
  %77 = bitcast %struct.SoftFloat* %arraydecay99 to i8*, !dbg !14457
  %78 = load i32, i32* %e, align 4, !dbg !14458
  %idxprom100 = sext i32 %78 to i64, !dbg !14459
  %79 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14459
  %q_m101 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %79, i32 0, i32 39, !dbg !14460
  %arrayidx102 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %q_m101, i64 0, i64 %idxprom100, !dbg !14459
  %arraydecay103 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx102, i32 0, i32 0, !dbg !14457
  %80 = bitcast %struct.SoftFloat* %arraydecay103 to i8*, !dbg !14457
  %81 = load i32, i32* %m_max, align 4, !dbg !14461
  %conv104 = sext i32 %81 to i64, !dbg !14461
  %mul105 = mul i64 %conv104, 8, !dbg !14462
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %80, i64 %mul105, i32 4, i1 false), !dbg !14457
  br label %for.inc106, !dbg !14463

for.inc106:                                       ; preds = %for.body85
  %82 = load i32, i32* %i, align 4, !dbg !14464
  %inc107 = add nsw i32 %82, 1, !dbg !14464
  store i32 %inc107, i32* %i, align 4, !dbg !14464
  br label %for.cond76, !dbg !14466, !llvm.loop !14467

for.end108:                                       ; preds = %for.cond76
  br label %for.inc109, !dbg !14469

for.inc109:                                       ; preds = %for.end108
  %83 = load i32, i32* %e, align 4, !dbg !14470
  %inc110 = add nsw i32 %83, 1, !dbg !14470
  store i32 %inc110, i32* %e, align 4, !dbg !14470
  br label %for.cond67, !dbg !14472, !llvm.loop !14473

for.end111:                                       ; preds = %for.cond67
  store i32 0, i32* %e, align 4, !dbg !14475
  br label %for.cond112, !dbg !14477

for.cond112:                                      ; preds = %for.inc338, %for.end111
  %84 = load i32, i32* %e, align 4, !dbg !14478
  %85 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14481
  %bs_num_env113 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %85, i32 0, i32 2, !dbg !14482
  %86 = load i32, i32* %bs_num_env113, align 8, !dbg !14482
  %cmp114 = icmp slt i32 %84, %86, !dbg !14483
  br i1 %cmp114, label %for.body116, label %for.end340, !dbg !14484

for.body116:                                      ; preds = %for.cond112
  %87 = load i32, i32* %e, align 4, !dbg !14485
  %idxprom117 = sext i32 %87 to i64, !dbg !14488
  %88 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14488
  %t_env118 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %88, i32 0, i32 26, !dbg !14489
  %arrayidx119 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env118, i64 0, i64 %idxprom117, !dbg !14488
  %89 = load i8, i8* %arrayidx119, align 1, !dbg !14488
  %conv120 = zext i8 %89 to i32, !dbg !14488
  %mul121 = mul nsw i32 2, %conv120, !dbg !14490
  store i32 %mul121, i32* %i, align 4, !dbg !14491
  br label %for.cond122, !dbg !14492

for.cond122:                                      ; preds = %for.inc335, %for.body116
  %90 = load i32, i32* %i, align 4, !dbg !14493
  %91 = load i32, i32* %e, align 4, !dbg !14496
  %add123 = add nsw i32 %91, 1, !dbg !14497
  %idxprom124 = sext i32 %add123 to i64, !dbg !14498
  %92 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14498
  %t_env125 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %92, i32 0, i32 26, !dbg !14499
  %arrayidx126 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env125, i64 0, i64 %idxprom124, !dbg !14498
  %93 = load i8, i8* %arrayidx126, align 1, !dbg !14498
  %conv127 = zext i8 %93 to i32, !dbg !14498
  %mul128 = mul nsw i32 2, %conv127, !dbg !14500
  %cmp129 = icmp slt i32 %90, %mul128, !dbg !14501
  br i1 %cmp129, label %for.body131, label %for.end337, !dbg !14502

for.body131:                                      ; preds = %for.cond122
  call void @llvm.dbg.declare(metadata [48 x %struct.SoftFloat]* %g_filt_tab, metadata !14503, metadata !2734), !dbg !14505
  call void @llvm.dbg.declare(metadata [48 x %struct.SoftFloat]* %q_filt_tab, metadata !14506, metadata !2734), !dbg !14507
  call void @llvm.dbg.declare(metadata %struct.SoftFloat** %g_filt, metadata !14508, metadata !2734), !dbg !14510
  call void @llvm.dbg.declare(metadata %struct.SoftFloat** %q_filt, metadata !14511, metadata !2734), !dbg !14512
  %94 = load i32, i32* %h_SL, align 4, !dbg !14513
  %tobool132 = icmp ne i32 %94, 0, !dbg !14513
  br i1 %tobool132, label %land.lhs.true, label %if.else194, !dbg !14515

land.lhs.true:                                    ; preds = %for.body131
  %95 = load i32, i32* %e, align 4, !dbg !14516
  %96 = load i32*, i32** %e_a.addr, align 8, !dbg !14518
  %arrayidx133 = getelementptr inbounds i32, i32* %96, i64 0, !dbg !14518
  %97 = load i32, i32* %arrayidx133, align 4, !dbg !14518
  %cmp134 = icmp ne i32 %95, %97, !dbg !14519
  br i1 %cmp134, label %land.lhs.true136, label %if.else194, !dbg !14520

land.lhs.true136:                                 ; preds = %land.lhs.true
  %98 = load i32, i32* %e, align 4, !dbg !14521
  %99 = load i32*, i32** %e_a.addr, align 8, !dbg !14523
  %arrayidx137 = getelementptr inbounds i32, i32* %99, i64 1, !dbg !14523
  %100 = load i32, i32* %arrayidx137, align 4, !dbg !14523
  %cmp138 = icmp ne i32 %98, %100, !dbg !14524
  br i1 %cmp138, label %if.then140, label %if.else194, !dbg !14525

if.then140:                                       ; preds = %land.lhs.true136
  %arraydecay141 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %g_filt_tab, i32 0, i32 0, !dbg !14526
  store %struct.SoftFloat* %arraydecay141, %struct.SoftFloat** %g_filt, align 8, !dbg !14528
  %arraydecay142 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %q_filt_tab, i32 0, i32 0, !dbg !14529
  store %struct.SoftFloat* %arraydecay142, %struct.SoftFloat** %q_filt, align 8, !dbg !14530
  store i32 0, i32* %m, align 4, !dbg !14531
  br label %for.cond143, !dbg !14533

for.cond143:                                      ; preds = %for.inc191, %if.then140
  %101 = load i32, i32* %m, align 4, !dbg !14534
  %102 = load i32, i32* %m_max, align 4, !dbg !14537
  %cmp144 = icmp slt i32 %101, %102, !dbg !14538
  br i1 %cmp144, label %for.body146, label %for.end193, !dbg !14539

for.body146:                                      ; preds = %for.cond143
  call void @llvm.dbg.declare(metadata i32* %idx1, metadata !14540, metadata !2734), !dbg !14542
  %103 = load i32, i32* %i, align 4, !dbg !14543
  %104 = load i32, i32* %h_SL, align 4, !dbg !14544
  %add147 = add nsw i32 %103, %104, !dbg !14545
  store i32 %add147, i32* %idx1, align 4, !dbg !14542
  %105 = load i32, i32* %m, align 4, !dbg !14546
  %idxprom148 = sext i32 %105 to i64, !dbg !14547
  %106 = load %struct.SoftFloat*, %struct.SoftFloat** %g_filt, align 8, !dbg !14547
  %arrayidx149 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %106, i64 %idxprom148, !dbg !14547
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx149, i32 0, i32 1, !dbg !14548
  store i32 0, i32* %exp, align 4, !dbg !14549
  %107 = load i32, i32* %m, align 4, !dbg !14550
  %idxprom150 = sext i32 %107 to i64, !dbg !14551
  %108 = load %struct.SoftFloat*, %struct.SoftFloat** %g_filt, align 8, !dbg !14551
  %arrayidx151 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %108, i64 %idxprom150, !dbg !14551
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx151, i32 0, i32 0, !dbg !14552
  store i32 0, i32* %mant, align 4, !dbg !14553
  %109 = load i32, i32* %m, align 4, !dbg !14554
  %idxprom152 = sext i32 %109 to i64, !dbg !14555
  %110 = load %struct.SoftFloat*, %struct.SoftFloat** %q_filt, align 8, !dbg !14555
  %arrayidx153 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %110, i64 %idxprom152, !dbg !14555
  %exp154 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx153, i32 0, i32 1, !dbg !14556
  store i32 0, i32* %exp154, align 4, !dbg !14557
  %111 = load i32, i32* %m, align 4, !dbg !14558
  %idxprom155 = sext i32 %111 to i64, !dbg !14559
  %112 = load %struct.SoftFloat*, %struct.SoftFloat** %q_filt, align 8, !dbg !14559
  %arrayidx156 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %112, i64 %idxprom155, !dbg !14559
  %mant157 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx156, i32 0, i32 0, !dbg !14560
  store i32 0, i32* %mant157, align 4, !dbg !14561
  store i32 0, i32* %j, align 4, !dbg !14562
  br label %for.cond158, !dbg !14564

for.cond158:                                      ; preds = %for.inc188, %for.body146
  %113 = load i32, i32* %j, align 4, !dbg !14565
  %114 = load i32, i32* %h_SL, align 4, !dbg !14568
  %cmp159 = icmp sle i32 %113, %114, !dbg !14569
  br i1 %cmp159, label %for.body161, label %for.end190, !dbg !14570

for.body161:                                      ; preds = %for.cond158
  %115 = load i32, i32* %m, align 4, !dbg !14571
  %idxprom162 = sext i32 %115 to i64, !dbg !14573
  %116 = load %struct.SoftFloat*, %struct.SoftFloat** %g_filt, align 8, !dbg !14573
  %arrayidx163 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %116, i64 %idxprom162, !dbg !14573
  %117 = load i32, i32* %m, align 4, !dbg !14574
  %idxprom164 = sext i32 %117 to i64, !dbg !14575
  %118 = load %struct.SoftFloat*, %struct.SoftFloat** %g_filt, align 8, !dbg !14575
  %arrayidx165 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %118, i64 %idxprom164, !dbg !14575
  %119 = load i32, i32* %m, align 4, !dbg !14576
  %idxprom166 = sext i32 %119 to i64, !dbg !14577
  %120 = load i32, i32* %idx1, align 4, !dbg !14578
  %121 = load i32, i32* %j, align 4, !dbg !14579
  %sub = sub nsw i32 %120, %121, !dbg !14580
  %idxprom167 = sext i32 %sub to i64, !dbg !14577
  %122 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %g_temp, align 8, !dbg !14577
  %arrayidx168 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %122, i64 %idxprom167, !dbg !14577
  %arrayidx169 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx168, i64 0, i64 %idxprom166, !dbg !14577
  %123 = load i32, i32* %j, align 4, !dbg !14581
  %idxprom170 = sext i32 %123 to i64, !dbg !14582
  %arrayidx171 = getelementptr inbounds [5 x %struct.SoftFloat], [5 x %struct.SoftFloat]* @sbr_hf_assemble.h_smooth, i64 0, i64 %idxprom170, !dbg !14582
  %124 = bitcast %struct.SoftFloat* %arrayidx169 to i64*, !dbg !14583
  %125 = load i64, i64* %124, align 4, !dbg !14583
  %126 = bitcast %struct.SoftFloat* %arrayidx171 to i64*, !dbg !14583
  %127 = load i64, i64* %126, align 8, !dbg !14583
  %call = call i64 @av_mul_sf(i64 %125, i64 %127) #2, !dbg !14583
  %128 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !14583
  store i64 %call, i64* %128, align 4, !dbg !14583
  %129 = bitcast %struct.SoftFloat* %arrayidx165 to i64*, !dbg !14584
  %130 = load i64, i64* %129, align 4, !dbg !14584
  %131 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !14584
  %132 = load i64, i64* %131, align 4, !dbg !14584
  %call172 = call i64 @av_add_sf(i64 %130, i64 %132) #2, !dbg !14584
  %133 = bitcast %struct.SoftFloat* %coerce to i64*, !dbg !14584
  store i64 %call172, i64* %133, align 4, !dbg !14584
  %134 = bitcast %struct.SoftFloat* %arrayidx163 to i8*, !dbg !14584
  %135 = bitcast %struct.SoftFloat* %coerce to i8*, !dbg !14584
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %134, i8* %135, i64 8, i32 4, i1 false), !dbg !14585
  %136 = load i32, i32* %m, align 4, !dbg !14587
  %idxprom173 = sext i32 %136 to i64, !dbg !14588
  %137 = load %struct.SoftFloat*, %struct.SoftFloat** %q_filt, align 8, !dbg !14588
  %arrayidx174 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %137, i64 %idxprom173, !dbg !14588
  %138 = load i32, i32* %m, align 4, !dbg !14589
  %idxprom175 = sext i32 %138 to i64, !dbg !14590
  %139 = load %struct.SoftFloat*, %struct.SoftFloat** %q_filt, align 8, !dbg !14590
  %arrayidx176 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %139, i64 %idxprom175, !dbg !14590
  %140 = load i32, i32* %m, align 4, !dbg !14591
  %idxprom178 = sext i32 %140 to i64, !dbg !14592
  %141 = load i32, i32* %idx1, align 4, !dbg !14593
  %142 = load i32, i32* %j, align 4, !dbg !14594
  %sub179 = sub nsw i32 %141, %142, !dbg !14595
  %idxprom180 = sext i32 %sub179 to i64, !dbg !14592
  %143 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %q_temp, align 8, !dbg !14592
  %arrayidx181 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %143, i64 %idxprom180, !dbg !14592
  %arrayidx182 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx181, i64 0, i64 %idxprom178, !dbg !14592
  %144 = load i32, i32* %j, align 4, !dbg !14596
  %idxprom183 = sext i32 %144 to i64, !dbg !14597
  %arrayidx184 = getelementptr inbounds [5 x %struct.SoftFloat], [5 x %struct.SoftFloat]* @sbr_hf_assemble.h_smooth, i64 0, i64 %idxprom183, !dbg !14597
  %145 = bitcast %struct.SoftFloat* %arrayidx182 to i64*, !dbg !14598
  %146 = load i64, i64* %145, align 4, !dbg !14598
  %147 = bitcast %struct.SoftFloat* %arrayidx184 to i64*, !dbg !14598
  %148 = load i64, i64* %147, align 8, !dbg !14598
  %call185 = call i64 @av_mul_sf(i64 %146, i64 %148) #2, !dbg !14598
  %149 = bitcast %struct.SoftFloat* %agg.tmp177 to i64*, !dbg !14598
  store i64 %call185, i64* %149, align 4, !dbg !14598
  %150 = bitcast %struct.SoftFloat* %arrayidx176 to i64*, !dbg !14599
  %151 = load i64, i64* %150, align 4, !dbg !14599
  %152 = bitcast %struct.SoftFloat* %agg.tmp177 to i64*, !dbg !14599
  %153 = load i64, i64* %152, align 4, !dbg !14599
  %call186 = call i64 @av_add_sf(i64 %151, i64 %153) #2, !dbg !14599
  %154 = bitcast %struct.SoftFloat* %coerce187 to i64*, !dbg !14599
  store i64 %call186, i64* %154, align 4, !dbg !14599
  %155 = bitcast %struct.SoftFloat* %arrayidx174 to i8*, !dbg !14599
  %156 = bitcast %struct.SoftFloat* %coerce187 to i8*, !dbg !14599
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %155, i8* %156, i64 8, i32 4, i1 false), !dbg !14600
  br label %for.inc188, !dbg !14601

for.inc188:                                       ; preds = %for.body161
  %157 = load i32, i32* %j, align 4, !dbg !14602
  %inc189 = add nsw i32 %157, 1, !dbg !14602
  store i32 %inc189, i32* %j, align 4, !dbg !14602
  br label %for.cond158, !dbg !14604, !llvm.loop !14605

for.end190:                                       ; preds = %for.cond158
  br label %for.inc191, !dbg !14607

for.inc191:                                       ; preds = %for.end190
  %158 = load i32, i32* %m, align 4, !dbg !14608
  %inc192 = add nsw i32 %158, 1, !dbg !14608
  store i32 %inc192, i32* %m, align 4, !dbg !14608
  br label %for.cond143, !dbg !14610, !llvm.loop !14611

for.end193:                                       ; preds = %for.cond143
  br label %if.end202, !dbg !14613

if.else194:                                       ; preds = %land.lhs.true136, %land.lhs.true, %for.body131
  %159 = load i32, i32* %i, align 4, !dbg !14614
  %160 = load i32, i32* %h_SL, align 4, !dbg !14616
  %add195 = add nsw i32 %159, %160, !dbg !14617
  %idxprom196 = sext i32 %add195 to i64, !dbg !14618
  %161 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %g_temp, align 8, !dbg !14618
  %arrayidx197 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %161, i64 %idxprom196, !dbg !14618
  %arraydecay198 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx197, i32 0, i32 0, !dbg !14618
  store %struct.SoftFloat* %arraydecay198, %struct.SoftFloat** %g_filt, align 8, !dbg !14619
  %162 = load i32, i32* %i, align 4, !dbg !14620
  %idxprom199 = sext i32 %162 to i64, !dbg !14621
  %163 = load [48 x %struct.SoftFloat]*, [48 x %struct.SoftFloat]** %q_temp, align 8, !dbg !14621
  %arrayidx200 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %163, i64 %idxprom199, !dbg !14621
  %arraydecay201 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx200, i32 0, i32 0, !dbg !14621
  store %struct.SoftFloat* %arraydecay201, %struct.SoftFloat** %q_filt, align 8, !dbg !14622
  br label %if.end202

if.end202:                                        ; preds = %if.else194, %for.end193
  %164 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14623
  %dsp = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %164, i32 0, i32 46, !dbg !14624
  %hf_g_filt = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %dsp, i32 0, i32 9, !dbg !14625
  %165 = load void ([2 x i32]*, [40 x [2 x i32]]*, %struct.SoftFloat*, i32, i64)*, void ([2 x i32]*, [40 x [2 x i32]]*, %struct.SoftFloat*, i32, i64)** %hf_g_filt, align 8, !dbg !14625
  %166 = load i32, i32* %i, align 4, !dbg !14626
  %idxprom203 = sext i32 %166 to i64, !dbg !14627
  %167 = load [64 x [2 x i32]]*, [64 x [2 x i32]]** %Y1.addr, align 8, !dbg !14627
  %arrayidx204 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %167, i64 %idxprom203, !dbg !14627
  %arraydecay205 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %arrayidx204, i32 0, i32 0, !dbg !14627
  %168 = load i32, i32* %kx, align 4, !dbg !14628
  %idx.ext = sext i32 %168 to i64, !dbg !14629
  %add.ptr = getelementptr inbounds [2 x i32], [2 x i32]* %arraydecay205, i64 %idx.ext, !dbg !14629
  %169 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_high.addr, align 8, !dbg !14630
  %170 = load i32, i32* %kx, align 4, !dbg !14631
  %idx.ext206 = sext i32 %170 to i64, !dbg !14632
  %add.ptr207 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %169, i64 %idx.ext206, !dbg !14632
  %171 = load %struct.SoftFloat*, %struct.SoftFloat** %g_filt, align 8, !dbg !14633
  %172 = load i32, i32* %m_max, align 4, !dbg !14634
  %173 = load i32, i32* %i, align 4, !dbg !14635
  %add208 = add nsw i32 %173, 2, !dbg !14636
  %conv209 = sext i32 %add208 to i64, !dbg !14635
  call void %165([2 x i32]* %add.ptr, [40 x [2 x i32]]* %add.ptr207, %struct.SoftFloat* %171, i32 %172, i64 %conv209), !dbg !14623
  %174 = load i32, i32* %e, align 4, !dbg !14637
  %175 = load i32*, i32** %e_a.addr, align 8, !dbg !14639
  %arrayidx210 = getelementptr inbounds i32, i32* %175, i64 0, !dbg !14639
  %176 = load i32, i32* %arrayidx210, align 4, !dbg !14639
  %cmp211 = icmp ne i32 %174, %176, !dbg !14640
  br i1 %cmp211, label %land.lhs.true213, label %if.else229, !dbg !14641

land.lhs.true213:                                 ; preds = %if.end202
  %177 = load i32, i32* %e, align 4, !dbg !14642
  %178 = load i32*, i32** %e_a.addr, align 8, !dbg !14644
  %arrayidx214 = getelementptr inbounds i32, i32* %178, i64 1, !dbg !14644
  %179 = load i32, i32* %arrayidx214, align 4, !dbg !14644
  %cmp215 = icmp ne i32 %177, %179, !dbg !14645
  br i1 %cmp215, label %if.then217, label %if.else229, !dbg !14646

if.then217:                                       ; preds = %land.lhs.true213
  %180 = load i32, i32* %indexsine, align 4, !dbg !14647
  %idxprom218 = sext i32 %180 to i64, !dbg !14649
  %181 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14649
  %dsp219 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %181, i32 0, i32 46, !dbg !14650
  %hf_apply_noise = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %dsp219, i32 0, i32 10, !dbg !14651
  %arrayidx220 = getelementptr inbounds [4 x void ([2 x i32]*, %struct.SoftFloat*, %struct.SoftFloat*, i32, i32, i32)*], [4 x void ([2 x i32]*, %struct.SoftFloat*, %struct.SoftFloat*, i32, i32, i32)*]* %hf_apply_noise, i64 0, i64 %idxprom218, !dbg !14649
  %182 = load void ([2 x i32]*, %struct.SoftFloat*, %struct.SoftFloat*, i32, i32, i32)*, void ([2 x i32]*, %struct.SoftFloat*, %struct.SoftFloat*, i32, i32, i32)** %arrayidx220, align 8, !dbg !14649
  %183 = load i32, i32* %i, align 4, !dbg !14652
  %idxprom221 = sext i32 %183 to i64, !dbg !14653
  %184 = load [64 x [2 x i32]]*, [64 x [2 x i32]]** %Y1.addr, align 8, !dbg !14653
  %arrayidx222 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %184, i64 %idxprom221, !dbg !14653
  %arraydecay223 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %arrayidx222, i32 0, i32 0, !dbg !14653
  %185 = load i32, i32* %kx, align 4, !dbg !14654
  %idx.ext224 = sext i32 %185 to i64, !dbg !14655
  %add.ptr225 = getelementptr inbounds [2 x i32], [2 x i32]* %arraydecay223, i64 %idx.ext224, !dbg !14655
  %186 = load i32, i32* %e, align 4, !dbg !14656
  %idxprom226 = sext i32 %186 to i64, !dbg !14657
  %187 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14657
  %s_m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %187, i32 0, i32 40, !dbg !14658
  %arrayidx227 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %s_m, i64 0, i64 %idxprom226, !dbg !14657
  %arraydecay228 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx227, i32 0, i32 0, !dbg !14657
  %188 = load %struct.SoftFloat*, %struct.SoftFloat** %q_filt, align 8, !dbg !14659
  %189 = load i32, i32* %indexnoise, align 4, !dbg !14660
  %190 = load i32, i32* %kx, align 4, !dbg !14661
  %191 = load i32, i32* %m_max, align 4, !dbg !14662
  call void %182([2 x i32]* %add.ptr225, %struct.SoftFloat* %arraydecay228, %struct.SoftFloat* %188, i32 %189, i32 %190, i32 %191), !dbg !14649
  br label %if.end330, !dbg !14663

if.else229:                                       ; preds = %land.lhs.true213, %if.end202
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !14664, metadata !2734), !dbg !14666
  %192 = load i32, i32* %indexsine, align 4, !dbg !14667
  %and = and i32 %192, 1, !dbg !14668
  store i32 %and, i32* %idx, align 4, !dbg !14666
  call void @llvm.dbg.declare(metadata i32* %A, metadata !14669, metadata !2734), !dbg !14670
  %193 = load i32, i32* %indexsine, align 4, !dbg !14671
  %194 = load i32, i32* %kx, align 4, !dbg !14672
  %and230 = and i32 %194, 1, !dbg !14673
  %add231 = add nsw i32 %193, %and230, !dbg !14674
  %and232 = and i32 %add231, 2, !dbg !14675
  %sub233 = sub nsw i32 1, %and232, !dbg !14676
  store i32 %sub233, i32* %A, align 4, !dbg !14670
  call void @llvm.dbg.declare(metadata i32* %B, metadata !14677, metadata !2734), !dbg !14678
  %195 = load i32, i32* %A, align 4, !dbg !14679
  %196 = load i32, i32* %idx, align 4, !dbg !14680
  %sub234 = sub nsw i32 0, %196, !dbg !14681
  %xor = xor i32 %195, %sub234, !dbg !14682
  %197 = load i32, i32* %idx, align 4, !dbg !14683
  %add235 = add nsw i32 %xor, %197, !dbg !14684
  store i32 %add235, i32* %B, align 4, !dbg !14678
  call void @llvm.dbg.declare(metadata i32** %out, metadata !14685, metadata !2734), !dbg !14687
  %198 = load i32, i32* %idx, align 4, !dbg !14688
  %idxprom236 = sext i32 %198 to i64, !dbg !14689
  %199 = load i32, i32* %kx, align 4, !dbg !14690
  %idxprom237 = sext i32 %199 to i64, !dbg !14689
  %200 = load i32, i32* %i, align 4, !dbg !14691
  %idxprom238 = sext i32 %200 to i64, !dbg !14689
  %201 = load [64 x [2 x i32]]*, [64 x [2 x i32]]** %Y1.addr, align 8, !dbg !14689
  %arrayidx239 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %201, i64 %idxprom238, !dbg !14689
  %arrayidx240 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %arrayidx239, i64 0, i64 %idxprom237, !dbg !14689
  %arrayidx241 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx240, i64 0, i64 %idxprom236, !dbg !14689
  store i32* %arrayidx241, i32** %out, align 8, !dbg !14687
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !14692, metadata !2734), !dbg !14693
  call void @llvm.dbg.declare(metadata i32* %round, metadata !14694, metadata !2734), !dbg !14695
  call void @llvm.dbg.declare(metadata %struct.SoftFloat** %in, metadata !14696, metadata !2734), !dbg !14697
  %202 = load i32, i32* %e, align 4, !dbg !14698
  %idxprom242 = sext i32 %202 to i64, !dbg !14699
  %203 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14699
  %s_m243 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %203, i32 0, i32 40, !dbg !14700
  %arrayidx244 = getelementptr inbounds [7 x [48 x %struct.SoftFloat]], [7 x [48 x %struct.SoftFloat]]* %s_m243, i64 0, i64 %idxprom242, !dbg !14699
  %arraydecay245 = getelementptr inbounds [48 x %struct.SoftFloat], [48 x %struct.SoftFloat]* %arrayidx244, i32 0, i32 0, !dbg !14699
  store %struct.SoftFloat* %arraydecay245, %struct.SoftFloat** %in, align 8, !dbg !14697
  store i32 0, i32* %m, align 4, !dbg !14701
  br label %for.cond246, !dbg !14703

for.cond246:                                      ; preds = %for.inc298, %if.else229
  %204 = load i32, i32* %m, align 4, !dbg !14704
  %add247 = add nsw i32 %204, 1, !dbg !14707
  %205 = load i32, i32* %m_max, align 4, !dbg !14708
  %cmp248 = icmp slt i32 %add247, %205, !dbg !14709
  br i1 %cmp248, label %for.body250, label %for.end300, !dbg !14710

for.body250:                                      ; preds = %for.cond246
  call void @llvm.dbg.declare(metadata i32* %shift2, metadata !14711, metadata !2734), !dbg !14713
  %206 = load i32, i32* %m, align 4, !dbg !14714
  %idxprom251 = sext i32 %206 to i64, !dbg !14715
  %207 = load %struct.SoftFloat*, %struct.SoftFloat** %in, align 8, !dbg !14715
  %arrayidx252 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %207, i64 %idxprom251, !dbg !14715
  %exp253 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx252, i32 0, i32 1, !dbg !14716
  %208 = load i32, i32* %exp253, align 4, !dbg !14716
  %sub254 = sub nsw i32 22, %208, !dbg !14717
  store i32 %sub254, i32* %shift, align 4, !dbg !14718
  %209 = load i32, i32* %m, align 4, !dbg !14719
  %add255 = add nsw i32 %209, 1, !dbg !14720
  %idxprom256 = sext i32 %add255 to i64, !dbg !14721
  %210 = load %struct.SoftFloat*, %struct.SoftFloat** %in, align 8, !dbg !14721
  %arrayidx257 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %210, i64 %idxprom256, !dbg !14721
  %exp258 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx257, i32 0, i32 1, !dbg !14722
  %211 = load i32, i32* %exp258, align 4, !dbg !14722
  %sub259 = sub nsw i32 22, %211, !dbg !14723
  store i32 %sub259, i32* %shift2, align 4, !dbg !14724
  %212 = load i32, i32* %shift, align 4, !dbg !14725
  %cmp260 = icmp slt i32 %212, 1, !dbg !14727
  br i1 %cmp260, label %if.then264, label %lor.lhs.false, !dbg !14728

lor.lhs.false:                                    ; preds = %for.body250
  %213 = load i32, i32* %shift2, align 4, !dbg !14729
  %cmp262 = icmp slt i32 %213, 1, !dbg !14731
  br i1 %cmp262, label %if.then264, label %if.end265, !dbg !14732

if.then264:                                       ; preds = %lor.lhs.false, %for.body250
  %214 = load i32, i32* %shift, align 4, !dbg !14733
  %215 = load i32, i32* %shift2, align 4, !dbg !14735
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.48, i32 0, i32 0), i32 %214, i32 %215), !dbg !14736
  br label %return, !dbg !14737

if.end265:                                        ; preds = %lor.lhs.false
  %216 = load i32, i32* %shift, align 4, !dbg !14738
  %cmp266 = icmp slt i32 %216, 32, !dbg !14740
  br i1 %cmp266, label %if.then268, label %if.end279, !dbg !14741

if.then268:                                       ; preds = %if.end265
  %217 = load i32, i32* %shift, align 4, !dbg !14742
  %sub269 = sub nsw i32 %217, 1, !dbg !14744
  %shl = shl i32 1, %sub269, !dbg !14745
  store i32 %shl, i32* %round, align 4, !dbg !14746
  %218 = load i32, i32* %m, align 4, !dbg !14747
  %idxprom270 = sext i32 %218 to i64, !dbg !14748
  %219 = load %struct.SoftFloat*, %struct.SoftFloat** %in, align 8, !dbg !14748
  %arrayidx271 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %219, i64 %idxprom270, !dbg !14748
  %mant272 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx271, i32 0, i32 0, !dbg !14749
  %220 = load i32, i32* %mant272, align 4, !dbg !14749
  %221 = load i32, i32* %A, align 4, !dbg !14750
  %mul273 = mul nsw i32 %220, %221, !dbg !14751
  %222 = load i32, i32* %round, align 4, !dbg !14752
  %add274 = add i32 %mul273, %222, !dbg !14753
  %223 = load i32, i32* %shift, align 4, !dbg !14754
  %shr = ashr i32 %add274, %223, !dbg !14755
  %224 = load i32, i32* %m, align 4, !dbg !14756
  %mul275 = mul nsw i32 2, %224, !dbg !14757
  %idxprom276 = sext i32 %mul275 to i64, !dbg !14758
  %225 = load i32*, i32** %out, align 8, !dbg !14758
  %arrayidx277 = getelementptr inbounds i32, i32* %225, i64 %idxprom276, !dbg !14758
  %226 = load i32, i32* %arrayidx277, align 4, !dbg !14759
  %add278 = add i32 %226, %shr, !dbg !14759
  store i32 %add278, i32* %arrayidx277, align 4, !dbg !14759
  br label %if.end279, !dbg !14760

if.end279:                                        ; preds = %if.then268, %if.end265
  %227 = load i32, i32* %shift2, align 4, !dbg !14761
  %cmp280 = icmp slt i32 %227, 32, !dbg !14763
  br i1 %cmp280, label %if.then282, label %if.end297, !dbg !14764

if.then282:                                       ; preds = %if.end279
  %228 = load i32, i32* %shift2, align 4, !dbg !14765
  %sub283 = sub nsw i32 %228, 1, !dbg !14767
  %shl284 = shl i32 1, %sub283, !dbg !14768
  store i32 %shl284, i32* %round, align 4, !dbg !14769
  %229 = load i32, i32* %m, align 4, !dbg !14770
  %add285 = add nsw i32 %229, 1, !dbg !14771
  %idxprom286 = sext i32 %add285 to i64, !dbg !14772
  %230 = load %struct.SoftFloat*, %struct.SoftFloat** %in, align 8, !dbg !14772
  %arrayidx287 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %230, i64 %idxprom286, !dbg !14772
  %mant288 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx287, i32 0, i32 0, !dbg !14773
  %231 = load i32, i32* %mant288, align 4, !dbg !14773
  %232 = load i32, i32* %B, align 4, !dbg !14774
  %mul289 = mul nsw i32 %231, %232, !dbg !14775
  %233 = load i32, i32* %round, align 4, !dbg !14776
  %add290 = add i32 %mul289, %233, !dbg !14777
  %234 = load i32, i32* %shift2, align 4, !dbg !14778
  %shr291 = ashr i32 %add290, %234, !dbg !14779
  %235 = load i32, i32* %m, align 4, !dbg !14780
  %mul292 = mul nsw i32 2, %235, !dbg !14781
  %add293 = add nsw i32 %mul292, 2, !dbg !14782
  %idxprom294 = sext i32 %add293 to i64, !dbg !14783
  %236 = load i32*, i32** %out, align 8, !dbg !14783
  %arrayidx295 = getelementptr inbounds i32, i32* %236, i64 %idxprom294, !dbg !14783
  %237 = load i32, i32* %arrayidx295, align 4, !dbg !14784
  %add296 = add i32 %237, %shr291, !dbg !14784
  store i32 %add296, i32* %arrayidx295, align 4, !dbg !14784
  br label %if.end297, !dbg !14785

if.end297:                                        ; preds = %if.then282, %if.end279
  br label %for.inc298, !dbg !14786

for.inc298:                                       ; preds = %if.end297
  %238 = load i32, i32* %m, align 4, !dbg !14787
  %add299 = add nsw i32 %238, 2, !dbg !14787
  store i32 %add299, i32* %m, align 4, !dbg !14787
  br label %for.cond246, !dbg !14789, !llvm.loop !14790

for.end300:                                       ; preds = %for.cond246
  %239 = load i32, i32* %m_max, align 4, !dbg !14792
  %and301 = and i32 %239, 1, !dbg !14794
  %tobool302 = icmp ne i32 %and301, 0, !dbg !14794
  br i1 %tobool302, label %if.then303, label %if.end329, !dbg !14795

if.then303:                                       ; preds = %for.end300
  %240 = load i32, i32* %m, align 4, !dbg !14796
  %idxprom304 = sext i32 %240 to i64, !dbg !14798
  %241 = load %struct.SoftFloat*, %struct.SoftFloat** %in, align 8, !dbg !14798
  %arrayidx305 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %241, i64 %idxprom304, !dbg !14798
  %exp306 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx305, i32 0, i32 1, !dbg !14799
  %242 = load i32, i32* %exp306, align 4, !dbg !14799
  %sub307 = sub nsw i32 22, %242, !dbg !14800
  store i32 %sub307, i32* %shift, align 4, !dbg !14801
  %243 = load i32, i32* %shift, align 4, !dbg !14802
  %cmp308 = icmp slt i32 %243, 1, !dbg !14804
  br i1 %cmp308, label %if.then310, label %if.else311, !dbg !14805

if.then310:                                       ; preds = %if.then303
  %244 = load i32, i32* %shift, align 4, !dbg !14806
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.49, i32 0, i32 0), i32 %244), !dbg !14808
  br label %return, !dbg !14809

if.else311:                                       ; preds = %if.then303
  %245 = load i32, i32* %shift, align 4, !dbg !14810
  %cmp312 = icmp slt i32 %245, 32, !dbg !14812
  br i1 %cmp312, label %if.then314, label %if.end327, !dbg !14813

if.then314:                                       ; preds = %if.else311
  %246 = load i32, i32* %shift, align 4, !dbg !14814
  %sub315 = sub nsw i32 %246, 1, !dbg !14816
  %shl316 = shl i32 1, %sub315, !dbg !14817
  store i32 %shl316, i32* %round, align 4, !dbg !14818
  %247 = load i32, i32* %m, align 4, !dbg !14819
  %idxprom317 = sext i32 %247 to i64, !dbg !14820
  %248 = load %struct.SoftFloat*, %struct.SoftFloat** %in, align 8, !dbg !14820
  %arrayidx318 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %248, i64 %idxprom317, !dbg !14820
  %mant319 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx318, i32 0, i32 0, !dbg !14821
  %249 = load i32, i32* %mant319, align 4, !dbg !14821
  %250 = load i32, i32* %A, align 4, !dbg !14822
  %mul320 = mul nsw i32 %249, %250, !dbg !14823
  %251 = load i32, i32* %round, align 4, !dbg !14824
  %add321 = add i32 %mul320, %251, !dbg !14825
  %252 = load i32, i32* %shift, align 4, !dbg !14826
  %shr322 = ashr i32 %add321, %252, !dbg !14827
  %253 = load i32, i32* %m, align 4, !dbg !14828
  %mul323 = mul nsw i32 2, %253, !dbg !14829
  %idxprom324 = sext i32 %mul323 to i64, !dbg !14830
  %254 = load i32*, i32** %out, align 8, !dbg !14830
  %arrayidx325 = getelementptr inbounds i32, i32* %254, i64 %idxprom324, !dbg !14830
  %255 = load i32, i32* %arrayidx325, align 4, !dbg !14831
  %add326 = add i32 %255, %shr322, !dbg !14831
  store i32 %add326, i32* %arrayidx325, align 4, !dbg !14831
  br label %if.end327, !dbg !14832

if.end327:                                        ; preds = %if.then314, %if.else311
  br label %if.end328

if.end328:                                        ; preds = %if.end327
  br label %if.end329, !dbg !14833

if.end329:                                        ; preds = %if.end328, %for.end300
  br label %if.end330

if.end330:                                        ; preds = %if.end329, %if.then217
  %256 = load i32, i32* %indexnoise, align 4, !dbg !14834
  %257 = load i32, i32* %m_max, align 4, !dbg !14835
  %add331 = add nsw i32 %256, %257, !dbg !14836
  %and332 = and i32 %add331, 511, !dbg !14837
  store i32 %and332, i32* %indexnoise, align 4, !dbg !14838
  %258 = load i32, i32* %indexsine, align 4, !dbg !14839
  %add333 = add nsw i32 %258, 1, !dbg !14840
  %and334 = and i32 %add333, 3, !dbg !14841
  store i32 %and334, i32* %indexsine, align 4, !dbg !14842
  br label %for.inc335, !dbg !14843

for.inc335:                                       ; preds = %if.end330
  %259 = load i32, i32* %i, align 4, !dbg !14844
  %inc336 = add nsw i32 %259, 1, !dbg !14844
  store i32 %inc336, i32* %i, align 4, !dbg !14844
  br label %for.cond122, !dbg !14846, !llvm.loop !14847

for.end337:                                       ; preds = %for.cond122
  br label %for.inc338, !dbg !14849

for.inc338:                                       ; preds = %for.end337
  %260 = load i32, i32* %e, align 4, !dbg !14850
  %inc339 = add nsw i32 %260, 1, !dbg !14850
  store i32 %inc339, i32* %e, align 4, !dbg !14850
  br label %for.cond112, !dbg !14852, !llvm.loop !14853

for.end340:                                       ; preds = %for.cond112
  %261 = load i32, i32* %indexnoise, align 4, !dbg !14855
  %262 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14856
  %f_indexnoise341 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %262, i32 0, i32 29, !dbg !14857
  store i32 %261, i32* %f_indexnoise341, align 4, !dbg !14858
  %263 = load i32, i32* %indexsine, align 4, !dbg !14859
  %264 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14860
  %f_indexsine342 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %264, i32 0, i32 30, !dbg !14861
  store i32 %263, i32* %f_indexsine342, align 8, !dbg !14862
  br label %return, !dbg !14863

return:                                           ; preds = %for.end340, %if.then310, %if.then264
  ret void, !dbg !14864
}

; Function Attrs: nounwind uwtable
define internal i32 @sbr_x_gen(%struct.SpectralBandReplication* %sbr, [38 x [64 x i32]]* %X, [64 x [2 x i32]]* %Y0, [64 x [2 x i32]]* %Y1, [40 x [2 x i32]]* %X_low, i32 %ch) #3 !dbg !14866 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %X.addr = alloca [38 x [64 x i32]]*, align 8
  %Y0.addr = alloca [64 x [2 x i32]]*, align 8
  %Y1.addr = alloca [64 x [2 x i32]]*, align 8
  %X_low.addr = alloca [40 x [2 x i32]]*, align 8
  %ch.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %i_f = alloca i32, align 4
  %i_Temp = alloca i32, align 4
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !14867, metadata !2734), !dbg !14868
  store [38 x [64 x i32]]* %X, [38 x [64 x i32]]** %X.addr, align 8
  call void @llvm.dbg.declare(metadata [38 x [64 x i32]]** %X.addr, metadata !14869, metadata !2734), !dbg !14870
  store [64 x [2 x i32]]* %Y0, [64 x [2 x i32]]** %Y0.addr, align 8
  call void @llvm.dbg.declare(metadata [64 x [2 x i32]]** %Y0.addr, metadata !14871, metadata !2734), !dbg !14872
  store [64 x [2 x i32]]* %Y1, [64 x [2 x i32]]** %Y1.addr, align 8
  call void @llvm.dbg.declare(metadata [64 x [2 x i32]]** %Y1.addr, metadata !14873, metadata !2734), !dbg !14874
  store [40 x [2 x i32]]* %X_low, [40 x [2 x i32]]** %X_low.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x i32]]** %X_low.addr, metadata !14875, metadata !2734), !dbg !14876
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !14877, metadata !2734), !dbg !14878
  call void @llvm.dbg.declare(metadata i32* %k, metadata !14879, metadata !2734), !dbg !14880
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14881, metadata !2734), !dbg !14882
  call void @llvm.dbg.declare(metadata i32* %i_f, metadata !14883, metadata !2734), !dbg !14884
  store i32 32, i32* %i_f, align 4, !dbg !14884
  call void @llvm.dbg.declare(metadata i32* %i_Temp, metadata !14885, metadata !2734), !dbg !14886
  %0 = load i32, i32* %ch.addr, align 4, !dbg !14887
  %idxprom = sext i32 %0 to i64, !dbg !14888
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14888
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 17, !dbg !14889
  %arrayidx = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 %idxprom, !dbg !14888
  %t_env_num_env_old = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx, i32 0, i32 27, !dbg !14890
  %2 = load i8, i8* %t_env_num_env_old, align 32, !dbg !14890
  %conv = zext i8 %2 to i32, !dbg !14888
  %mul = mul nsw i32 2, %conv, !dbg !14891
  %sub = sub nsw i32 %mul, 32, !dbg !14892
  %cmp = icmp sgt i32 %sub, 0, !dbg !14893
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14894

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %ch.addr, align 4, !dbg !14895
  %idxprom2 = sext i32 %3 to i64, !dbg !14897
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14897
  %data3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 17, !dbg !14898
  %arrayidx4 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data3, i64 0, i64 %idxprom2, !dbg !14897
  %t_env_num_env_old5 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx4, i32 0, i32 27, !dbg !14899
  %5 = load i8, i8* %t_env_num_env_old5, align 32, !dbg !14899
  %conv6 = zext i8 %5 to i32, !dbg !14897
  %mul7 = mul nsw i32 2, %conv6, !dbg !14900
  %sub8 = sub nsw i32 %mul7, 32, !dbg !14901
  br label %cond.end, !dbg !14902

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14903

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub8, %cond.true ], [ 0, %cond.false ], !dbg !14905
  store i32 %cond, i32* %i_Temp, align 4, !dbg !14907
  %6 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !14908
  %7 = bitcast [38 x [64 x i32]]* %6 to i8*, !dbg !14909
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 19456, i32 4, i1 false), !dbg !14909
  store i32 0, i32* %k, align 4, !dbg !14910
  br label %for.cond, !dbg !14912

for.cond:                                         ; preds = %for.inc37, %cond.end
  %8 = load i32, i32* %k, align 4, !dbg !14913
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14916
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %9, i32 0, i32 13, !dbg !14917
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 0, !dbg !14916
  %10 = load i32, i32* %arrayidx9, align 8, !dbg !14916
  %cmp10 = icmp slt i32 %8, %10, !dbg !14918
  br i1 %cmp10, label %for.body, label %for.end39, !dbg !14919

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !14920
  br label %for.cond12, !dbg !14923

for.cond12:                                       ; preds = %for.inc, %for.body
  %11 = load i32, i32* %i, align 4, !dbg !14924
  %12 = load i32, i32* %i_Temp, align 4, !dbg !14927
  %cmp13 = icmp slt i32 %11, %12, !dbg !14928
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !14929

for.body15:                                       ; preds = %for.cond12
  %13 = load i32, i32* %i, align 4, !dbg !14930
  %add = add nsw i32 %13, 2, !dbg !14932
  %idxprom16 = sext i32 %add to i64, !dbg !14933
  %14 = load i32, i32* %k, align 4, !dbg !14934
  %idxprom17 = sext i32 %14 to i64, !dbg !14933
  %15 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_low.addr, align 8, !dbg !14933
  %arrayidx18 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %15, i64 %idxprom17, !dbg !14933
  %arrayidx19 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %arrayidx18, i64 0, i64 %idxprom16, !dbg !14933
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx19, i64 0, i64 0, !dbg !14933
  %16 = load i32, i32* %arrayidx20, align 4, !dbg !14933
  %17 = load i32, i32* %k, align 4, !dbg !14935
  %idxprom21 = sext i32 %17 to i64, !dbg !14936
  %18 = load i32, i32* %i, align 4, !dbg !14937
  %idxprom22 = sext i32 %18 to i64, !dbg !14936
  %19 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !14936
  %arrayidx23 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %19, i64 0, !dbg !14936
  %arrayidx24 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx23, i64 0, i64 %idxprom22, !dbg !14936
  %arrayidx25 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx24, i64 0, i64 %idxprom21, !dbg !14936
  store i32 %16, i32* %arrayidx25, align 4, !dbg !14938
  %20 = load i32, i32* %i, align 4, !dbg !14939
  %add26 = add nsw i32 %20, 2, !dbg !14940
  %idxprom27 = sext i32 %add26 to i64, !dbg !14941
  %21 = load i32, i32* %k, align 4, !dbg !14942
  %idxprom28 = sext i32 %21 to i64, !dbg !14941
  %22 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_low.addr, align 8, !dbg !14941
  %arrayidx29 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %22, i64 %idxprom28, !dbg !14941
  %arrayidx30 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %arrayidx29, i64 0, i64 %idxprom27, !dbg !14941
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx30, i64 0, i64 1, !dbg !14941
  %23 = load i32, i32* %arrayidx31, align 4, !dbg !14941
  %24 = load i32, i32* %k, align 4, !dbg !14943
  %idxprom32 = sext i32 %24 to i64, !dbg !14944
  %25 = load i32, i32* %i, align 4, !dbg !14945
  %idxprom33 = sext i32 %25 to i64, !dbg !14944
  %26 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !14944
  %arrayidx34 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %26, i64 1, !dbg !14944
  %arrayidx35 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx34, i64 0, i64 %idxprom33, !dbg !14944
  %arrayidx36 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx35, i64 0, i64 %idxprom32, !dbg !14944
  store i32 %23, i32* %arrayidx36, align 4, !dbg !14946
  br label %for.inc, !dbg !14947

for.inc:                                          ; preds = %for.body15
  %27 = load i32, i32* %i, align 4, !dbg !14948
  %inc = add nsw i32 %27, 1, !dbg !14948
  store i32 %inc, i32* %i, align 4, !dbg !14948
  br label %for.cond12, !dbg !14950, !llvm.loop !14951

for.end:                                          ; preds = %for.cond12
  br label %for.inc37, !dbg !14953

for.inc37:                                        ; preds = %for.end
  %28 = load i32, i32* %k, align 4, !dbg !14954
  %inc38 = add nsw i32 %28, 1, !dbg !14954
  store i32 %inc38, i32* %k, align 4, !dbg !14954
  br label %for.cond, !dbg !14956, !llvm.loop !14957

for.end39:                                        ; preds = %for.cond
  br label %for.cond40, !dbg !14959

for.cond40:                                       ; preds = %for.inc77, %for.end39
  %29 = load i32, i32* %k, align 4, !dbg !14960
  %30 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14964
  %kx41 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %30, i32 0, i32 13, !dbg !14965
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %kx41, i64 0, i64 0, !dbg !14964
  %31 = load i32, i32* %arrayidx42, align 8, !dbg !14964
  %32 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14966
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %32, i32 0, i32 14, !dbg !14967
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 0, !dbg !14966
  %33 = load i32, i32* %arrayidx43, align 16, !dbg !14966
  %add44 = add nsw i32 %31, %33, !dbg !14968
  %cmp45 = icmp slt i32 %29, %add44, !dbg !14969
  br i1 %cmp45, label %for.body47, label %for.end79, !dbg !14970

for.body47:                                       ; preds = %for.cond40
  store i32 0, i32* %i, align 4, !dbg !14971
  br label %for.cond48, !dbg !14974

for.cond48:                                       ; preds = %for.inc74, %for.body47
  %34 = load i32, i32* %i, align 4, !dbg !14975
  %35 = load i32, i32* %i_Temp, align 4, !dbg !14978
  %cmp49 = icmp slt i32 %34, %35, !dbg !14979
  br i1 %cmp49, label %for.body51, label %for.end76, !dbg !14980

for.body51:                                       ; preds = %for.cond48
  %36 = load i32, i32* %k, align 4, !dbg !14981
  %idxprom52 = sext i32 %36 to i64, !dbg !14983
  %37 = load i32, i32* %i, align 4, !dbg !14984
  %add53 = add nsw i32 %37, 32, !dbg !14985
  %idxprom54 = sext i32 %add53 to i64, !dbg !14983
  %38 = load [64 x [2 x i32]]*, [64 x [2 x i32]]** %Y0.addr, align 8, !dbg !14983
  %arrayidx55 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %38, i64 %idxprom54, !dbg !14983
  %arrayidx56 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %arrayidx55, i64 0, i64 %idxprom52, !dbg !14983
  %arrayidx57 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx56, i64 0, i64 0, !dbg !14983
  %39 = load i32, i32* %arrayidx57, align 4, !dbg !14983
  %40 = load i32, i32* %k, align 4, !dbg !14986
  %idxprom58 = sext i32 %40 to i64, !dbg !14987
  %41 = load i32, i32* %i, align 4, !dbg !14988
  %idxprom59 = sext i32 %41 to i64, !dbg !14987
  %42 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !14987
  %arrayidx60 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %42, i64 0, !dbg !14987
  %arrayidx61 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx60, i64 0, i64 %idxprom59, !dbg !14987
  %arrayidx62 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx61, i64 0, i64 %idxprom58, !dbg !14987
  store i32 %39, i32* %arrayidx62, align 4, !dbg !14989
  %43 = load i32, i32* %k, align 4, !dbg !14990
  %idxprom63 = sext i32 %43 to i64, !dbg !14991
  %44 = load i32, i32* %i, align 4, !dbg !14992
  %add64 = add nsw i32 %44, 32, !dbg !14993
  %idxprom65 = sext i32 %add64 to i64, !dbg !14991
  %45 = load [64 x [2 x i32]]*, [64 x [2 x i32]]** %Y0.addr, align 8, !dbg !14991
  %arrayidx66 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %45, i64 %idxprom65, !dbg !14991
  %arrayidx67 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %arrayidx66, i64 0, i64 %idxprom63, !dbg !14991
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx67, i64 0, i64 1, !dbg !14991
  %46 = load i32, i32* %arrayidx68, align 4, !dbg !14991
  %47 = load i32, i32* %k, align 4, !dbg !14994
  %idxprom69 = sext i32 %47 to i64, !dbg !14995
  %48 = load i32, i32* %i, align 4, !dbg !14996
  %idxprom70 = sext i32 %48 to i64, !dbg !14995
  %49 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !14995
  %arrayidx71 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %49, i64 1, !dbg !14995
  %arrayidx72 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx71, i64 0, i64 %idxprom70, !dbg !14995
  %arrayidx73 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx72, i64 0, i64 %idxprom69, !dbg !14995
  store i32 %46, i32* %arrayidx73, align 4, !dbg !14997
  br label %for.inc74, !dbg !14998

for.inc74:                                        ; preds = %for.body51
  %50 = load i32, i32* %i, align 4, !dbg !14999
  %inc75 = add nsw i32 %50, 1, !dbg !14999
  store i32 %inc75, i32* %i, align 4, !dbg !14999
  br label %for.cond48, !dbg !15001, !llvm.loop !15002

for.end76:                                        ; preds = %for.cond48
  br label %for.inc77, !dbg !15004

for.inc77:                                        ; preds = %for.end76
  %51 = load i32, i32* %k, align 4, !dbg !15005
  %inc78 = add nsw i32 %51, 1, !dbg !15005
  store i32 %inc78, i32* %k, align 4, !dbg !15005
  br label %for.cond40, !dbg !15007, !llvm.loop !15008

for.end79:                                        ; preds = %for.cond40
  store i32 0, i32* %k, align 4, !dbg !15009
  br label %for.cond80, !dbg !15011

for.cond80:                                       ; preds = %for.inc115, %for.end79
  %52 = load i32, i32* %k, align 4, !dbg !15012
  %53 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !15015
  %kx81 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %53, i32 0, i32 13, !dbg !15016
  %arrayidx82 = getelementptr inbounds [2 x i32], [2 x i32]* %kx81, i64 0, i64 1, !dbg !15015
  %54 = load i32, i32* %arrayidx82, align 4, !dbg !15015
  %cmp83 = icmp slt i32 %52, %54, !dbg !15017
  br i1 %cmp83, label %for.body85, label %for.end117, !dbg !15018

for.body85:                                       ; preds = %for.cond80
  %55 = load i32, i32* %i_Temp, align 4, !dbg !15019
  store i32 %55, i32* %i, align 4, !dbg !15022
  br label %for.cond86, !dbg !15023

for.cond86:                                       ; preds = %for.inc112, %for.body85
  %56 = load i32, i32* %i, align 4, !dbg !15024
  %cmp87 = icmp slt i32 %56, 38, !dbg !15027
  br i1 %cmp87, label %for.body89, label %for.end114, !dbg !15028

for.body89:                                       ; preds = %for.cond86
  %57 = load i32, i32* %i, align 4, !dbg !15029
  %add90 = add nsw i32 %57, 2, !dbg !15031
  %idxprom91 = sext i32 %add90 to i64, !dbg !15032
  %58 = load i32, i32* %k, align 4, !dbg !15033
  %idxprom92 = sext i32 %58 to i64, !dbg !15032
  %59 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_low.addr, align 8, !dbg !15032
  %arrayidx93 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %59, i64 %idxprom92, !dbg !15032
  %arrayidx94 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %arrayidx93, i64 0, i64 %idxprom91, !dbg !15032
  %arrayidx95 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx94, i64 0, i64 0, !dbg !15032
  %60 = load i32, i32* %arrayidx95, align 4, !dbg !15032
  %61 = load i32, i32* %k, align 4, !dbg !15034
  %idxprom96 = sext i32 %61 to i64, !dbg !15035
  %62 = load i32, i32* %i, align 4, !dbg !15036
  %idxprom97 = sext i32 %62 to i64, !dbg !15035
  %63 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !15035
  %arrayidx98 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %63, i64 0, !dbg !15035
  %arrayidx99 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx98, i64 0, i64 %idxprom97, !dbg !15035
  %arrayidx100 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx99, i64 0, i64 %idxprom96, !dbg !15035
  store i32 %60, i32* %arrayidx100, align 4, !dbg !15037
  %64 = load i32, i32* %i, align 4, !dbg !15038
  %add101 = add nsw i32 %64, 2, !dbg !15039
  %idxprom102 = sext i32 %add101 to i64, !dbg !15040
  %65 = load i32, i32* %k, align 4, !dbg !15041
  %idxprom103 = sext i32 %65 to i64, !dbg !15040
  %66 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_low.addr, align 8, !dbg !15040
  %arrayidx104 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %66, i64 %idxprom103, !dbg !15040
  %arrayidx105 = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %arrayidx104, i64 0, i64 %idxprom102, !dbg !15040
  %arrayidx106 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx105, i64 0, i64 1, !dbg !15040
  %67 = load i32, i32* %arrayidx106, align 4, !dbg !15040
  %68 = load i32, i32* %k, align 4, !dbg !15042
  %idxprom107 = sext i32 %68 to i64, !dbg !15043
  %69 = load i32, i32* %i, align 4, !dbg !15044
  %idxprom108 = sext i32 %69 to i64, !dbg !15043
  %70 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !15043
  %arrayidx109 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %70, i64 1, !dbg !15043
  %arrayidx110 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx109, i64 0, i64 %idxprom108, !dbg !15043
  %arrayidx111 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx110, i64 0, i64 %idxprom107, !dbg !15043
  store i32 %67, i32* %arrayidx111, align 4, !dbg !15045
  br label %for.inc112, !dbg !15046

for.inc112:                                       ; preds = %for.body89
  %71 = load i32, i32* %i, align 4, !dbg !15047
  %inc113 = add nsw i32 %71, 1, !dbg !15047
  store i32 %inc113, i32* %i, align 4, !dbg !15047
  br label %for.cond86, !dbg !15049, !llvm.loop !15050

for.end114:                                       ; preds = %for.cond86
  br label %for.inc115, !dbg !15052

for.inc115:                                       ; preds = %for.end114
  %72 = load i32, i32* %k, align 4, !dbg !15053
  %inc116 = add nsw i32 %72, 1, !dbg !15053
  store i32 %inc116, i32* %k, align 4, !dbg !15053
  br label %for.cond80, !dbg !15055, !llvm.loop !15056

for.end117:                                       ; preds = %for.cond80
  br label %for.cond118, !dbg !15058

for.cond118:                                      ; preds = %for.inc154, %for.end117
  %73 = load i32, i32* %k, align 4, !dbg !15059
  %74 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !15063
  %kx119 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %74, i32 0, i32 13, !dbg !15064
  %arrayidx120 = getelementptr inbounds [2 x i32], [2 x i32]* %kx119, i64 0, i64 1, !dbg !15063
  %75 = load i32, i32* %arrayidx120, align 4, !dbg !15063
  %76 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !15065
  %m121 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %76, i32 0, i32 14, !dbg !15066
  %arrayidx122 = getelementptr inbounds [2 x i32], [2 x i32]* %m121, i64 0, i64 1, !dbg !15065
  %77 = load i32, i32* %arrayidx122, align 4, !dbg !15065
  %add123 = add nsw i32 %75, %77, !dbg !15067
  %cmp124 = icmp slt i32 %73, %add123, !dbg !15068
  br i1 %cmp124, label %for.body126, label %for.end156, !dbg !15069

for.body126:                                      ; preds = %for.cond118
  %78 = load i32, i32* %i_Temp, align 4, !dbg !15070
  store i32 %78, i32* %i, align 4, !dbg !15073
  br label %for.cond127, !dbg !15074

for.cond127:                                      ; preds = %for.inc151, %for.body126
  %79 = load i32, i32* %i, align 4, !dbg !15075
  %cmp128 = icmp slt i32 %79, 32, !dbg !15078
  br i1 %cmp128, label %for.body130, label %for.end153, !dbg !15079

for.body130:                                      ; preds = %for.cond127
  %80 = load i32, i32* %k, align 4, !dbg !15080
  %idxprom131 = sext i32 %80 to i64, !dbg !15082
  %81 = load i32, i32* %i, align 4, !dbg !15083
  %idxprom132 = sext i32 %81 to i64, !dbg !15082
  %82 = load [64 x [2 x i32]]*, [64 x [2 x i32]]** %Y1.addr, align 8, !dbg !15082
  %arrayidx133 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %82, i64 %idxprom132, !dbg !15082
  %arrayidx134 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %arrayidx133, i64 0, i64 %idxprom131, !dbg !15082
  %arrayidx135 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx134, i64 0, i64 0, !dbg !15082
  %83 = load i32, i32* %arrayidx135, align 4, !dbg !15082
  %84 = load i32, i32* %k, align 4, !dbg !15084
  %idxprom136 = sext i32 %84 to i64, !dbg !15085
  %85 = load i32, i32* %i, align 4, !dbg !15086
  %idxprom137 = sext i32 %85 to i64, !dbg !15085
  %86 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !15085
  %arrayidx138 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %86, i64 0, !dbg !15085
  %arrayidx139 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx138, i64 0, i64 %idxprom137, !dbg !15085
  %arrayidx140 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx139, i64 0, i64 %idxprom136, !dbg !15085
  store i32 %83, i32* %arrayidx140, align 4, !dbg !15087
  %87 = load i32, i32* %k, align 4, !dbg !15088
  %idxprom141 = sext i32 %87 to i64, !dbg !15089
  %88 = load i32, i32* %i, align 4, !dbg !15090
  %idxprom142 = sext i32 %88 to i64, !dbg !15089
  %89 = load [64 x [2 x i32]]*, [64 x [2 x i32]]** %Y1.addr, align 8, !dbg !15089
  %arrayidx143 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %89, i64 %idxprom142, !dbg !15089
  %arrayidx144 = getelementptr inbounds [64 x [2 x i32]], [64 x [2 x i32]]* %arrayidx143, i64 0, i64 %idxprom141, !dbg !15089
  %arrayidx145 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx144, i64 0, i64 1, !dbg !15089
  %90 = load i32, i32* %arrayidx145, align 4, !dbg !15089
  %91 = load i32, i32* %k, align 4, !dbg !15091
  %idxprom146 = sext i32 %91 to i64, !dbg !15092
  %92 = load i32, i32* %i, align 4, !dbg !15093
  %idxprom147 = sext i32 %92 to i64, !dbg !15092
  %93 = load [38 x [64 x i32]]*, [38 x [64 x i32]]** %X.addr, align 8, !dbg !15092
  %arrayidx148 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %93, i64 1, !dbg !15092
  %arrayidx149 = getelementptr inbounds [38 x [64 x i32]], [38 x [64 x i32]]* %arrayidx148, i64 0, i64 %idxprom147, !dbg !15092
  %arrayidx150 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx149, i64 0, i64 %idxprom146, !dbg !15092
  store i32 %90, i32* %arrayidx150, align 4, !dbg !15094
  br label %for.inc151, !dbg !15095

for.inc151:                                       ; preds = %for.body130
  %94 = load i32, i32* %i, align 4, !dbg !15096
  %inc152 = add nsw i32 %94, 1, !dbg !15096
  store i32 %inc152, i32* %i, align 4, !dbg !15096
  br label %for.cond127, !dbg !15098, !llvm.loop !15099

for.end153:                                       ; preds = %for.cond127
  br label %for.inc154, !dbg !15101

for.inc154:                                       ; preds = %for.end153
  %95 = load i32, i32* %k, align 4, !dbg !15102
  %inc155 = add nsw i32 %95, 1, !dbg !15102
  store i32 %inc155, i32* %k, align 4, !dbg !15102
  br label %for.cond118, !dbg !15104, !llvm.loop !15105

for.end156:                                       ; preds = %for.cond118
  ret i32 0, !dbg !15106
}

; Function Attrs: nounwind uwtable
define internal void @sbr_hf_inverse_filter(%struct.SBRDSPContext* %dsp, [2 x i32]* %alpha0, [2 x i32]* %alpha1, [40 x [2 x i32]]* %X_low, i32 %k0) #3 !dbg !15107 {
entry:
  %dsp.addr = alloca %struct.SBRDSPContext*, align 8
  %alpha0.addr = alloca [2 x i32]*, align 8
  %alpha1.addr = alloca [2 x i32]*, align 8
  %X_low.addr = alloca [40 x [2 x i32]]*, align 8
  %k0.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %shift = alloca i32, align 4
  %round = alloca i32, align 4
  %phi = alloca [3 x [2 x [2 x %struct.SoftFloat]]], align 16
  %a00 = alloca %struct.SoftFloat, align 4
  %a01 = alloca %struct.SoftFloat, align 4
  %a10 = alloca %struct.SoftFloat, align 4
  %a11 = alloca %struct.SoftFloat, align 4
  %dk = alloca %struct.SoftFloat, align 4
  %agg.tmp = alloca %struct.SoftFloat, align 4
  %agg.tmp8 = alloca %struct.SoftFloat, align 4
  %agg.tmp9 = alloca %struct.SoftFloat, align 4
  %agg.tmp10 = alloca %struct.SoftFloat, align 4
  %agg.tmp18 = alloca %struct.SoftFloat, align 4
  %coerce = alloca %struct.SoftFloat, align 4
  %temp_real = alloca %struct.SoftFloat, align 4
  %temp_im = alloca %struct.SoftFloat, align 4
  %agg.tmp29 = alloca %struct.SoftFloat, align 4
  %agg.tmp30 = alloca %struct.SoftFloat, align 4
  %agg.tmp38 = alloca %struct.SoftFloat, align 4
  %agg.tmp47 = alloca %struct.SoftFloat, align 4
  %coerce56 = alloca %struct.SoftFloat, align 4
  %agg.tmp57 = alloca %struct.SoftFloat, align 4
  %agg.tmp58 = alloca %struct.SoftFloat, align 4
  %agg.tmp66 = alloca %struct.SoftFloat, align 4
  %agg.tmp75 = alloca %struct.SoftFloat, align 4
  %coerce84 = alloca %struct.SoftFloat, align 4
  %coerce86 = alloca %struct.SoftFloat, align 4
  %coerce88 = alloca %struct.SoftFloat, align 4
  %temp_real96 = alloca %struct.SoftFloat, align 4
  %temp_im97 = alloca %struct.SoftFloat, align 4
  %agg.tmp101 = alloca %struct.SoftFloat, align 4
  %agg.tmp102 = alloca %struct.SoftFloat, align 4
  %agg.tmp107 = alloca %struct.SoftFloat, align 4
  %coerce114 = alloca %struct.SoftFloat, align 4
  %agg.tmp118 = alloca %struct.SoftFloat, align 4
  %agg.tmp119 = alloca %struct.SoftFloat, align 4
  %agg.tmp124 = alloca %struct.SoftFloat, align 4
  %coerce131 = alloca %struct.SoftFloat, align 4
  %coerce141 = alloca %struct.SoftFloat, align 4
  %coerce146 = alloca %struct.SoftFloat, align 4
  store %struct.SBRDSPContext* %dsp, %struct.SBRDSPContext** %dsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRDSPContext** %dsp.addr, metadata !15111, metadata !2734), !dbg !15112
  store [2 x i32]* %alpha0, [2 x i32]** %alpha0.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %alpha0.addr, metadata !15113, metadata !2734), !dbg !15114
  store [2 x i32]* %alpha1, [2 x i32]** %alpha1.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %alpha1.addr, metadata !15115, metadata !2734), !dbg !15116
  store [40 x [2 x i32]]* %X_low, [40 x [2 x i32]]** %X_low.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x i32]]** %X_low.addr, metadata !15117, metadata !2734), !dbg !15118
  store i32 %k0, i32* %k0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k0.addr, metadata !15119, metadata !2734), !dbg !15120
  call void @llvm.dbg.declare(metadata i32* %k, metadata !15121, metadata !2734), !dbg !15122
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !15123, metadata !2734), !dbg !15124
  call void @llvm.dbg.declare(metadata i32* %round, metadata !15125, metadata !2734), !dbg !15126
  store i32 0, i32* %k, align 4, !dbg !15127
  br label %for.cond, !dbg !15129

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %k, align 4, !dbg !15130
  %1 = load i32, i32* %k0.addr, align 4, !dbg !15133
  %cmp = icmp slt i32 %0, %1, !dbg !15134
  br i1 %cmp, label %for.body, label %for.end, !dbg !15135

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, metadata !15136, metadata !2734), !dbg !15140
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a00, metadata !15141, metadata !2734), !dbg !15142
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a01, metadata !15143, metadata !2734), !dbg !15144
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a10, metadata !15145, metadata !2734), !dbg !15146
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a11, metadata !15147, metadata !2734), !dbg !15148
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %dk, metadata !15149, metadata !2734), !dbg !15150
  %2 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %dsp.addr, align 8, !dbg !15151
  %autocorrelate = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %2, i32 0, i32 7, !dbg !15152
  %3 = load void ([2 x i32]*, [2 x [2 x %struct.SoftFloat]]*)*, void ([2 x i32]*, [2 x [2 x %struct.SoftFloat]]*)** %autocorrelate, align 8, !dbg !15152
  %4 = load i32, i32* %k, align 4, !dbg !15153
  %idxprom = sext i32 %4 to i64, !dbg !15154
  %5 = load [40 x [2 x i32]]*, [40 x [2 x i32]]** %X_low.addr, align 8, !dbg !15154
  %arrayidx = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %5, i64 %idxprom, !dbg !15154
  %arraydecay = getelementptr inbounds [40 x [2 x i32]], [40 x [2 x i32]]* %arrayidx, i32 0, i32 0, !dbg !15154
  %arraydecay1 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i32 0, i32 0, !dbg !15155
  call void %3([2 x i32]* %arraydecay, [2 x [2 x %struct.SoftFloat]]* %arraydecay1), !dbg !15151
  %arrayidx2 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 2, !dbg !15156
  %arrayidx3 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx2, i64 0, i64 1, !dbg !15156
  %arrayidx4 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx3, i64 0, i64 0, !dbg !15156
  %arrayidx5 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15157
  %arrayidx6 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx5, i64 0, i64 0, !dbg !15157
  %arrayidx7 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx6, i64 0, i64 0, !dbg !15157
  %6 = bitcast %struct.SoftFloat* %arrayidx4 to i64*, !dbg !15158
  %7 = load i64, i64* %6, align 16, !dbg !15158
  %8 = bitcast %struct.SoftFloat* %arrayidx7 to i64*, !dbg !15158
  %9 = load i64, i64* %8, align 16, !dbg !15158
  %call = call i64 @av_mul_sf(i64 %7, i64 %9) #2, !dbg !15158
  %10 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !15158
  store i64 %call, i64* %10, align 4, !dbg !15158
  %arrayidx11 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15159
  %arrayidx12 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx11, i64 0, i64 1, !dbg !15159
  %arrayidx13 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx12, i64 0, i64 0, !dbg !15159
  %arrayidx14 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15160
  %arrayidx15 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx14, i64 0, i64 1, !dbg !15160
  %arrayidx16 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx15, i64 0, i64 0, !dbg !15160
  %11 = bitcast %struct.SoftFloat* %arrayidx13 to i64*, !dbg !15161
  %12 = load i64, i64* %11, align 16, !dbg !15161
  %13 = bitcast %struct.SoftFloat* %arrayidx16 to i64*, !dbg !15161
  %14 = load i64, i64* %13, align 16, !dbg !15161
  %call17 = call i64 @av_mul_sf(i64 %12, i64 %14) #2, !dbg !15161
  %15 = bitcast %struct.SoftFloat* %agg.tmp10 to i64*, !dbg !15161
  store i64 %call17, i64* %15, align 4, !dbg !15161
  %arrayidx19 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15162
  %arrayidx20 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx19, i64 0, i64 1, !dbg !15162
  %arrayidx21 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx20, i64 0, i64 1, !dbg !15162
  %arrayidx22 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15163
  %arrayidx23 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx22, i64 0, i64 1, !dbg !15163
  %arrayidx24 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx23, i64 0, i64 1, !dbg !15163
  %16 = bitcast %struct.SoftFloat* %arrayidx21 to i64*, !dbg !15164
  %17 = load i64, i64* %16, align 8, !dbg !15164
  %18 = bitcast %struct.SoftFloat* %arrayidx24 to i64*, !dbg !15164
  %19 = load i64, i64* %18, align 8, !dbg !15164
  %call25 = call i64 @av_mul_sf(i64 %17, i64 %19) #2, !dbg !15164
  %20 = bitcast %struct.SoftFloat* %agg.tmp18 to i64*, !dbg !15164
  store i64 %call25, i64* %20, align 4, !dbg !15164
  %21 = bitcast %struct.SoftFloat* %agg.tmp10 to i64*, !dbg !15165
  %22 = load i64, i64* %21, align 4, !dbg !15165
  %23 = bitcast %struct.SoftFloat* %agg.tmp18 to i64*, !dbg !15165
  %24 = load i64, i64* %23, align 4, !dbg !15165
  %call26 = call i64 @av_add_sf(i64 %22, i64 %24) #2, !dbg !15166
  %25 = bitcast %struct.SoftFloat* %agg.tmp9 to i64*, !dbg !15165
  store i64 %call26, i64* %25, align 4, !dbg !15165
  %26 = bitcast %struct.SoftFloat* %agg.tmp9 to i64*, !dbg !15168
  %27 = load i64, i64* %26, align 4, !dbg !15168
  %28 = load i64, i64* bitcast (%struct.SoftFloat* @FLOAT_0999999 to i64*), align 4, !dbg !15168
  %call27 = call i64 @av_mul_sf(i64 %27, i64 %28) #2, !dbg !15169
  %29 = bitcast %struct.SoftFloat* %agg.tmp8 to i64*, !dbg !15168
  store i64 %call27, i64* %29, align 4, !dbg !15168
  %30 = bitcast %struct.SoftFloat* %agg.tmp to i64*, !dbg !15171
  %31 = load i64, i64* %30, align 4, !dbg !15171
  %32 = bitcast %struct.SoftFloat* %agg.tmp8 to i64*, !dbg !15171
  %33 = load i64, i64* %32, align 4, !dbg !15171
  %call28 = call i64 @av_sub_sf(i64 %31, i64 %33) #2, !dbg !15172
  %34 = bitcast %struct.SoftFloat* %coerce to i64*, !dbg !15171
  store i64 %call28, i64* %34, align 4, !dbg !15171
  %35 = bitcast %struct.SoftFloat* %dk to i8*, !dbg !15171
  %36 = bitcast %struct.SoftFloat* %coerce to i8*, !dbg !15171
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 4, i1 false), !dbg !15173
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %dk, i32 0, i32 0, !dbg !15174
  %37 = load i32, i32* %mant, align 4, !dbg !15174
  %tobool = icmp ne i32 %37, 0, !dbg !15176
  br i1 %tobool, label %if.else, label %if.then, !dbg !15177

if.then:                                          ; preds = %for.body
  %38 = bitcast %struct.SoftFloat* %a10 to i8*, !dbg !15178
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* bitcast (%struct.SoftFloat* @FLOAT_0 to i8*), i64 8, i32 4, i1 false), !dbg !15178
  %39 = bitcast %struct.SoftFloat* %a11 to i8*, !dbg !15180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* bitcast (%struct.SoftFloat* @FLOAT_0 to i8*), i64 8, i32 4, i1 false), !dbg !15180
  br label %if.end, !dbg !15181

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %temp_real, metadata !15182, metadata !2734), !dbg !15184
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %temp_im, metadata !15185, metadata !2734), !dbg !15186
  %arrayidx31 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 0, !dbg !15187
  %arrayidx32 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx31, i64 0, i64 0, !dbg !15187
  %arrayidx33 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx32, i64 0, i64 0, !dbg !15187
  %arrayidx34 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15188
  %arrayidx35 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx34, i64 0, i64 1, !dbg !15188
  %arrayidx36 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx35, i64 0, i64 0, !dbg !15188
  %40 = bitcast %struct.SoftFloat* %arrayidx33 to i64*, !dbg !15189
  %41 = load i64, i64* %40, align 16, !dbg !15189
  %42 = bitcast %struct.SoftFloat* %arrayidx36 to i64*, !dbg !15189
  %43 = load i64, i64* %42, align 16, !dbg !15189
  %call37 = call i64 @av_mul_sf(i64 %41, i64 %43) #2, !dbg !15189
  %44 = bitcast %struct.SoftFloat* %agg.tmp30 to i64*, !dbg !15189
  store i64 %call37, i64* %44, align 4, !dbg !15189
  %arrayidx39 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 0, !dbg !15190
  %arrayidx40 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx39, i64 0, i64 0, !dbg !15190
  %arrayidx41 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx40, i64 0, i64 1, !dbg !15190
  %arrayidx42 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15191
  %arrayidx43 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx42, i64 0, i64 1, !dbg !15191
  %arrayidx44 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx43, i64 0, i64 1, !dbg !15191
  %45 = bitcast %struct.SoftFloat* %arrayidx41 to i64*, !dbg !15192
  %46 = load i64, i64* %45, align 8, !dbg !15192
  %47 = bitcast %struct.SoftFloat* %arrayidx44 to i64*, !dbg !15192
  %48 = load i64, i64* %47, align 8, !dbg !15192
  %call45 = call i64 @av_mul_sf(i64 %46, i64 %48) #2, !dbg !15192
  %49 = bitcast %struct.SoftFloat* %agg.tmp38 to i64*, !dbg !15192
  store i64 %call45, i64* %49, align 4, !dbg !15192
  %50 = bitcast %struct.SoftFloat* %agg.tmp30 to i64*, !dbg !15193
  %51 = load i64, i64* %50, align 4, !dbg !15193
  %52 = bitcast %struct.SoftFloat* %agg.tmp38 to i64*, !dbg !15193
  %53 = load i64, i64* %52, align 4, !dbg !15193
  %call46 = call i64 @av_sub_sf(i64 %51, i64 %53) #2, !dbg !15194
  %54 = bitcast %struct.SoftFloat* %agg.tmp29 to i64*, !dbg !15193
  store i64 %call46, i64* %54, align 4, !dbg !15193
  %arrayidx48 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 0, !dbg !15196
  %arrayidx49 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx48, i64 0, i64 1, !dbg !15196
  %arrayidx50 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx49, i64 0, i64 0, !dbg !15196
  %arrayidx51 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15197
  %arrayidx52 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx51, i64 0, i64 0, !dbg !15197
  %arrayidx53 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx52, i64 0, i64 0, !dbg !15197
  %55 = bitcast %struct.SoftFloat* %arrayidx50 to i64*, !dbg !15198
  %56 = load i64, i64* %55, align 16, !dbg !15198
  %57 = bitcast %struct.SoftFloat* %arrayidx53 to i64*, !dbg !15198
  %58 = load i64, i64* %57, align 16, !dbg !15198
  %call54 = call i64 @av_mul_sf(i64 %56, i64 %58) #2, !dbg !15198
  %59 = bitcast %struct.SoftFloat* %agg.tmp47 to i64*, !dbg !15198
  store i64 %call54, i64* %59, align 4, !dbg !15198
  %60 = bitcast %struct.SoftFloat* %agg.tmp29 to i64*, !dbg !15199
  %61 = load i64, i64* %60, align 4, !dbg !15199
  %62 = bitcast %struct.SoftFloat* %agg.tmp47 to i64*, !dbg !15199
  %63 = load i64, i64* %62, align 4, !dbg !15199
  %call55 = call i64 @av_sub_sf(i64 %61, i64 %63) #2, !dbg !15200
  %64 = bitcast %struct.SoftFloat* %coerce56 to i64*, !dbg !15199
  store i64 %call55, i64* %64, align 4, !dbg !15199
  %65 = bitcast %struct.SoftFloat* %temp_real to i8*, !dbg !15199
  %66 = bitcast %struct.SoftFloat* %coerce56 to i8*, !dbg !15199
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 4, i1 false), !dbg !15202
  %arrayidx59 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 0, !dbg !15204
  %arrayidx60 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx59, i64 0, i64 0, !dbg !15204
  %arrayidx61 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx60, i64 0, i64 0, !dbg !15204
  %arrayidx62 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15205
  %arrayidx63 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx62, i64 0, i64 1, !dbg !15205
  %arrayidx64 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx63, i64 0, i64 1, !dbg !15205
  %67 = bitcast %struct.SoftFloat* %arrayidx61 to i64*, !dbg !15206
  %68 = load i64, i64* %67, align 16, !dbg !15206
  %69 = bitcast %struct.SoftFloat* %arrayidx64 to i64*, !dbg !15206
  %70 = load i64, i64* %69, align 8, !dbg !15206
  %call65 = call i64 @av_mul_sf(i64 %68, i64 %70) #2, !dbg !15206
  %71 = bitcast %struct.SoftFloat* %agg.tmp58 to i64*, !dbg !15206
  store i64 %call65, i64* %71, align 4, !dbg !15206
  %arrayidx67 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 0, !dbg !15207
  %arrayidx68 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx67, i64 0, i64 0, !dbg !15207
  %arrayidx69 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx68, i64 0, i64 1, !dbg !15207
  %arrayidx70 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15208
  %arrayidx71 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx70, i64 0, i64 1, !dbg !15208
  %arrayidx72 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx71, i64 0, i64 0, !dbg !15208
  %72 = bitcast %struct.SoftFloat* %arrayidx69 to i64*, !dbg !15209
  %73 = load i64, i64* %72, align 8, !dbg !15209
  %74 = bitcast %struct.SoftFloat* %arrayidx72 to i64*, !dbg !15209
  %75 = load i64, i64* %74, align 16, !dbg !15209
  %call73 = call i64 @av_mul_sf(i64 %73, i64 %75) #2, !dbg !15209
  %76 = bitcast %struct.SoftFloat* %agg.tmp66 to i64*, !dbg !15209
  store i64 %call73, i64* %76, align 4, !dbg !15209
  %77 = bitcast %struct.SoftFloat* %agg.tmp58 to i64*, !dbg !15210
  %78 = load i64, i64* %77, align 4, !dbg !15210
  %79 = bitcast %struct.SoftFloat* %agg.tmp66 to i64*, !dbg !15210
  %80 = load i64, i64* %79, align 4, !dbg !15210
  %call74 = call i64 @av_add_sf(i64 %78, i64 %80) #2, !dbg !15211
  %81 = bitcast %struct.SoftFloat* %agg.tmp57 to i64*, !dbg !15210
  store i64 %call74, i64* %81, align 4, !dbg !15210
  %arrayidx76 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 0, !dbg !15212
  %arrayidx77 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx76, i64 0, i64 1, !dbg !15212
  %arrayidx78 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx77, i64 0, i64 1, !dbg !15212
  %arrayidx79 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15213
  %arrayidx80 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx79, i64 0, i64 0, !dbg !15213
  %arrayidx81 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx80, i64 0, i64 0, !dbg !15213
  %82 = bitcast %struct.SoftFloat* %arrayidx78 to i64*, !dbg !15214
  %83 = load i64, i64* %82, align 8, !dbg !15214
  %84 = bitcast %struct.SoftFloat* %arrayidx81 to i64*, !dbg !15214
  %85 = load i64, i64* %84, align 16, !dbg !15214
  %call82 = call i64 @av_mul_sf(i64 %83, i64 %85) #2, !dbg !15214
  %86 = bitcast %struct.SoftFloat* %agg.tmp75 to i64*, !dbg !15214
  store i64 %call82, i64* %86, align 4, !dbg !15214
  %87 = bitcast %struct.SoftFloat* %agg.tmp57 to i64*, !dbg !15215
  %88 = load i64, i64* %87, align 4, !dbg !15215
  %89 = bitcast %struct.SoftFloat* %agg.tmp75 to i64*, !dbg !15215
  %90 = load i64, i64* %89, align 4, !dbg !15215
  %call83 = call i64 @av_sub_sf(i64 %88, i64 %90) #2, !dbg !15216
  %91 = bitcast %struct.SoftFloat* %coerce84 to i64*, !dbg !15215
  store i64 %call83, i64* %91, align 4, !dbg !15215
  %92 = bitcast %struct.SoftFloat* %temp_im to i8*, !dbg !15215
  %93 = bitcast %struct.SoftFloat* %coerce84 to i8*, !dbg !15215
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 8, i32 4, i1 false), !dbg !15217
  %94 = bitcast %struct.SoftFloat* %temp_real to i64*, !dbg !15218
  %95 = load i64, i64* %94, align 4, !dbg !15218
  %96 = bitcast %struct.SoftFloat* %dk to i64*, !dbg !15218
  %97 = load i64, i64* %96, align 4, !dbg !15218
  %call85 = call i64 @av_div_sf(i64 %95, i64 %97) #2, !dbg !15218
  %98 = bitcast %struct.SoftFloat* %coerce86 to i64*, !dbg !15218
  store i64 %call85, i64* %98, align 4, !dbg !15218
  %99 = bitcast %struct.SoftFloat* %a10 to i8*, !dbg !15218
  %100 = bitcast %struct.SoftFloat* %coerce86 to i8*, !dbg !15218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 4, i1 false), !dbg !15219
  %101 = bitcast %struct.SoftFloat* %temp_im to i64*, !dbg !15220
  %102 = load i64, i64* %101, align 4, !dbg !15220
  %103 = bitcast %struct.SoftFloat* %dk to i64*, !dbg !15220
  %104 = load i64, i64* %103, align 4, !dbg !15220
  %call87 = call i64 @av_div_sf(i64 %102, i64 %104) #2, !dbg !15220
  %105 = bitcast %struct.SoftFloat* %coerce88 to i64*, !dbg !15220
  store i64 %call87, i64* %105, align 4, !dbg !15220
  %106 = bitcast %struct.SoftFloat* %a11 to i8*, !dbg !15220
  %107 = bitcast %struct.SoftFloat* %coerce88 to i8*, !dbg !15220
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %106, i8* %107, i64 8, i32 4, i1 false), !dbg !15221
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx89 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15222
  %arrayidx90 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx89, i64 0, i64 0, !dbg !15222
  %arrayidx91 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx90, i64 0, i64 0, !dbg !15222
  %mant92 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %arrayidx91, i32 0, i32 0, !dbg !15224
  %108 = load i32, i32* %mant92, align 16, !dbg !15224
  %tobool93 = icmp ne i32 %108, 0, !dbg !15222
  br i1 %tobool93, label %if.else95, label %if.then94, !dbg !15225

if.then94:                                        ; preds = %if.end
  %109 = bitcast %struct.SoftFloat* %a00 to i8*, !dbg !15226
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* bitcast (%struct.SoftFloat* @FLOAT_0 to i8*), i64 8, i32 4, i1 false), !dbg !15226
  %110 = bitcast %struct.SoftFloat* %a01 to i8*, !dbg !15228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* bitcast (%struct.SoftFloat* @FLOAT_0 to i8*), i64 8, i32 4, i1 false), !dbg !15228
  br label %if.end147, !dbg !15229

if.else95:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %temp_real96, metadata !15230, metadata !2734), !dbg !15232
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %temp_im97, metadata !15233, metadata !2734), !dbg !15234
  %arrayidx98 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 0, !dbg !15235
  %arrayidx99 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx98, i64 0, i64 0, !dbg !15235
  %arrayidx100 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx99, i64 0, i64 0, !dbg !15235
  %arrayidx103 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15236
  %arrayidx104 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx103, i64 0, i64 1, !dbg !15236
  %arrayidx105 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx104, i64 0, i64 0, !dbg !15236
  %111 = bitcast %struct.SoftFloat* %a10 to i64*, !dbg !15237
  %112 = load i64, i64* %111, align 4, !dbg !15237
  %113 = bitcast %struct.SoftFloat* %arrayidx105 to i64*, !dbg !15237
  %114 = load i64, i64* %113, align 16, !dbg !15237
  %call106 = call i64 @av_mul_sf(i64 %112, i64 %114) #2, !dbg !15237
  %115 = bitcast %struct.SoftFloat* %agg.tmp102 to i64*, !dbg !15237
  store i64 %call106, i64* %115, align 4, !dbg !15237
  %arrayidx108 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15238
  %arrayidx109 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx108, i64 0, i64 1, !dbg !15238
  %arrayidx110 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx109, i64 0, i64 1, !dbg !15238
  %116 = bitcast %struct.SoftFloat* %a11 to i64*, !dbg !15239
  %117 = load i64, i64* %116, align 4, !dbg !15239
  %118 = bitcast %struct.SoftFloat* %arrayidx110 to i64*, !dbg !15239
  %119 = load i64, i64* %118, align 8, !dbg !15239
  %call111 = call i64 @av_mul_sf(i64 %117, i64 %119) #2, !dbg !15239
  %120 = bitcast %struct.SoftFloat* %agg.tmp107 to i64*, !dbg !15239
  store i64 %call111, i64* %120, align 4, !dbg !15239
  %121 = bitcast %struct.SoftFloat* %agg.tmp102 to i64*, !dbg !15240
  %122 = load i64, i64* %121, align 4, !dbg !15240
  %123 = bitcast %struct.SoftFloat* %agg.tmp107 to i64*, !dbg !15240
  %124 = load i64, i64* %123, align 4, !dbg !15240
  %call112 = call i64 @av_add_sf(i64 %122, i64 %124) #2, !dbg !15241
  %125 = bitcast %struct.SoftFloat* %agg.tmp101 to i64*, !dbg !15240
  store i64 %call112, i64* %125, align 4, !dbg !15240
  %126 = bitcast %struct.SoftFloat* %arrayidx100 to i64*, !dbg !15243
  %127 = load i64, i64* %126, align 16, !dbg !15243
  %128 = bitcast %struct.SoftFloat* %agg.tmp101 to i64*, !dbg !15243
  %129 = load i64, i64* %128, align 4, !dbg !15243
  %call113 = call i64 @av_add_sf(i64 %127, i64 %129) #2, !dbg !15243
  %130 = bitcast %struct.SoftFloat* %coerce114 to i64*, !dbg !15243
  store i64 %call113, i64* %130, align 4, !dbg !15243
  %131 = bitcast %struct.SoftFloat* %temp_real96 to i8*, !dbg !15243
  %132 = bitcast %struct.SoftFloat* %coerce114 to i8*, !dbg !15243
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %132, i64 8, i32 4, i1 false), !dbg !15244
  %arrayidx115 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 0, !dbg !15245
  %arrayidx116 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx115, i64 0, i64 0, !dbg !15245
  %arrayidx117 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx116, i64 0, i64 1, !dbg !15245
  %arrayidx120 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15246
  %arrayidx121 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx120, i64 0, i64 1, !dbg !15246
  %arrayidx122 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx121, i64 0, i64 0, !dbg !15246
  %133 = bitcast %struct.SoftFloat* %a11 to i64*, !dbg !15247
  %134 = load i64, i64* %133, align 4, !dbg !15247
  %135 = bitcast %struct.SoftFloat* %arrayidx122 to i64*, !dbg !15247
  %136 = load i64, i64* %135, align 16, !dbg !15247
  %call123 = call i64 @av_mul_sf(i64 %134, i64 %136) #2, !dbg !15247
  %137 = bitcast %struct.SoftFloat* %agg.tmp119 to i64*, !dbg !15247
  store i64 %call123, i64* %137, align 4, !dbg !15247
  %arrayidx125 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15248
  %arrayidx126 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx125, i64 0, i64 1, !dbg !15248
  %arrayidx127 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx126, i64 0, i64 1, !dbg !15248
  %138 = bitcast %struct.SoftFloat* %a10 to i64*, !dbg !15249
  %139 = load i64, i64* %138, align 4, !dbg !15249
  %140 = bitcast %struct.SoftFloat* %arrayidx127 to i64*, !dbg !15249
  %141 = load i64, i64* %140, align 8, !dbg !15249
  %call128 = call i64 @av_mul_sf(i64 %139, i64 %141) #2, !dbg !15249
  %142 = bitcast %struct.SoftFloat* %agg.tmp124 to i64*, !dbg !15249
  store i64 %call128, i64* %142, align 4, !dbg !15249
  %143 = bitcast %struct.SoftFloat* %agg.tmp119 to i64*, !dbg !15250
  %144 = load i64, i64* %143, align 4, !dbg !15250
  %145 = bitcast %struct.SoftFloat* %agg.tmp124 to i64*, !dbg !15250
  %146 = load i64, i64* %145, align 4, !dbg !15250
  %call129 = call i64 @av_sub_sf(i64 %144, i64 %146) #2, !dbg !15251
  %147 = bitcast %struct.SoftFloat* %agg.tmp118 to i64*, !dbg !15250
  store i64 %call129, i64* %147, align 4, !dbg !15250
  %148 = bitcast %struct.SoftFloat* %arrayidx117 to i64*, !dbg !15252
  %149 = load i64, i64* %148, align 8, !dbg !15252
  %150 = bitcast %struct.SoftFloat* %agg.tmp118 to i64*, !dbg !15252
  %151 = load i64, i64* %150, align 4, !dbg !15252
  %call130 = call i64 @av_add_sf(i64 %149, i64 %151) #2, !dbg !15252
  %152 = bitcast %struct.SoftFloat* %coerce131 to i64*, !dbg !15252
  store i64 %call130, i64* %152, align 4, !dbg !15252
  %153 = bitcast %struct.SoftFloat* %temp_im97 to i8*, !dbg !15252
  %154 = bitcast %struct.SoftFloat* %coerce131 to i8*, !dbg !15252
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %153, i8* %154, i64 8, i32 4, i1 false), !dbg !15253
  %mant132 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp_real96, i32 0, i32 0, !dbg !15254
  %155 = load i32, i32* %mant132, align 4, !dbg !15254
  %sub = sub nsw i32 0, %155, !dbg !15255
  %mant133 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp_real96, i32 0, i32 0, !dbg !15256
  store i32 %sub, i32* %mant133, align 4, !dbg !15257
  %mant134 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp_im97, i32 0, i32 0, !dbg !15258
  %156 = load i32, i32* %mant134, align 4, !dbg !15258
  %sub135 = sub nsw i32 0, %156, !dbg !15259
  %mant136 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %temp_im97, i32 0, i32 0, !dbg !15260
  store i32 %sub135, i32* %mant136, align 4, !dbg !15261
  %arrayidx137 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15262
  %arrayidx138 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx137, i64 0, i64 0, !dbg !15262
  %arrayidx139 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx138, i64 0, i64 0, !dbg !15262
  %157 = bitcast %struct.SoftFloat* %temp_real96 to i64*, !dbg !15263
  %158 = load i64, i64* %157, align 4, !dbg !15263
  %159 = bitcast %struct.SoftFloat* %arrayidx139 to i64*, !dbg !15263
  %160 = load i64, i64* %159, align 16, !dbg !15263
  %call140 = call i64 @av_div_sf(i64 %158, i64 %160) #2, !dbg !15263
  %161 = bitcast %struct.SoftFloat* %coerce141 to i64*, !dbg !15263
  store i64 %call140, i64* %161, align 4, !dbg !15263
  %162 = bitcast %struct.SoftFloat* %a00 to i8*, !dbg !15263
  %163 = bitcast %struct.SoftFloat* %coerce141 to i8*, !dbg !15263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %162, i8* %163, i64 8, i32 4, i1 false), !dbg !15264
  %arrayidx142 = getelementptr inbounds [3 x [2 x [2 x %struct.SoftFloat]]], [3 x [2 x [2 x %struct.SoftFloat]]]* %phi, i64 0, i64 1, !dbg !15265
  %arrayidx143 = getelementptr inbounds [2 x [2 x %struct.SoftFloat]], [2 x [2 x %struct.SoftFloat]]* %arrayidx142, i64 0, i64 0, !dbg !15265
  %arrayidx144 = getelementptr inbounds [2 x %struct.SoftFloat], [2 x %struct.SoftFloat]* %arrayidx143, i64 0, i64 0, !dbg !15265
  %164 = bitcast %struct.SoftFloat* %temp_im97 to i64*, !dbg !15266
  %165 = load i64, i64* %164, align 4, !dbg !15266
  %166 = bitcast %struct.SoftFloat* %arrayidx144 to i64*, !dbg !15266
  %167 = load i64, i64* %166, align 16, !dbg !15266
  %call145 = call i64 @av_div_sf(i64 %165, i64 %167) #2, !dbg !15266
  %168 = bitcast %struct.SoftFloat* %coerce146 to i64*, !dbg !15266
  store i64 %call145, i64* %168, align 4, !dbg !15266
  %169 = bitcast %struct.SoftFloat* %a01 to i8*, !dbg !15266
  %170 = bitcast %struct.SoftFloat* %coerce146 to i8*, !dbg !15266
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %169, i8* %170, i64 8, i32 4, i1 false), !dbg !15267
  br label %if.end147

if.end147:                                        ; preds = %if.else95, %if.then94
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a00, i32 0, i32 1, !dbg !15268
  %171 = load i32, i32* %exp, align 4, !dbg !15268
  store i32 %171, i32* %shift, align 4, !dbg !15269
  %172 = load i32, i32* %shift, align 4, !dbg !15270
  %cmp148 = icmp sge i32 %172, 3, !dbg !15272
  br i1 %cmp148, label %if.then149, label %if.else153, !dbg !15273

if.then149:                                       ; preds = %if.end147
  %173 = load i32, i32* %k, align 4, !dbg !15274
  %idxprom150 = sext i32 %173 to i64, !dbg !15275
  %174 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15275
  %arrayidx151 = getelementptr inbounds [2 x i32], [2 x i32]* %174, i64 %idxprom150, !dbg !15275
  %arrayidx152 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx151, i64 0, i64 0, !dbg !15275
  store i32 2147483647, i32* %arrayidx152, align 4, !dbg !15276
  br label %if.end177, !dbg !15275

if.else153:                                       ; preds = %if.end147
  %175 = load i32, i32* %shift, align 4, !dbg !15277
  %cmp154 = icmp sle i32 %175, -30, !dbg !15279
  br i1 %cmp154, label %if.then155, label %if.else159, !dbg !15280

if.then155:                                       ; preds = %if.else153
  %176 = load i32, i32* %k, align 4, !dbg !15281
  %idxprom156 = sext i32 %176 to i64, !dbg !15282
  %177 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15282
  %arrayidx157 = getelementptr inbounds [2 x i32], [2 x i32]* %177, i64 %idxprom156, !dbg !15282
  %arrayidx158 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx157, i64 0, i64 0, !dbg !15282
  store i32 0, i32* %arrayidx158, align 4, !dbg !15283
  br label %if.end176, !dbg !15282

if.else159:                                       ; preds = %if.else153
  %178 = load i32, i32* %shift, align 4, !dbg !15284
  %sub160 = sub nsw i32 1, %178, !dbg !15286
  store i32 %sub160, i32* %shift, align 4, !dbg !15287
  %179 = load i32, i32* %shift, align 4, !dbg !15288
  %cmp161 = icmp sle i32 %179, 0, !dbg !15290
  br i1 %cmp161, label %if.then162, label %if.else168, !dbg !15291

if.then162:                                       ; preds = %if.else159
  %mant163 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a00, i32 0, i32 0, !dbg !15292
  %180 = load i32, i32* %mant163, align 4, !dbg !15292
  %181 = load i32, i32* %shift, align 4, !dbg !15293
  %sub164 = sub nsw i32 0, %181, !dbg !15294
  %shl = shl i32 1, %sub164, !dbg !15295
  %mul = mul nsw i32 %180, %shl, !dbg !15296
  %182 = load i32, i32* %k, align 4, !dbg !15297
  %idxprom165 = sext i32 %182 to i64, !dbg !15298
  %183 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15298
  %arrayidx166 = getelementptr inbounds [2 x i32], [2 x i32]* %183, i64 %idxprom165, !dbg !15298
  %arrayidx167 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx166, i64 0, i64 0, !dbg !15298
  store i32 %mul, i32* %arrayidx167, align 4, !dbg !15299
  br label %if.end175, !dbg !15298

if.else168:                                       ; preds = %if.else159
  %184 = load i32, i32* %shift, align 4, !dbg !15300
  %sub169 = sub nsw i32 %184, 1, !dbg !15302
  %shl170 = shl i32 1, %sub169, !dbg !15303
  store i32 %shl170, i32* %round, align 4, !dbg !15304
  %mant171 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a00, i32 0, i32 0, !dbg !15305
  %185 = load i32, i32* %mant171, align 4, !dbg !15305
  %186 = load i32, i32* %round, align 4, !dbg !15306
  %add = add nsw i32 %185, %186, !dbg !15307
  %187 = load i32, i32* %shift, align 4, !dbg !15308
  %shr = ashr i32 %add, %187, !dbg !15309
  %188 = load i32, i32* %k, align 4, !dbg !15310
  %idxprom172 = sext i32 %188 to i64, !dbg !15311
  %189 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15311
  %arrayidx173 = getelementptr inbounds [2 x i32], [2 x i32]* %189, i64 %idxprom172, !dbg !15311
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx173, i64 0, i64 0, !dbg !15311
  store i32 %shr, i32* %arrayidx174, align 4, !dbg !15312
  br label %if.end175

if.end175:                                        ; preds = %if.else168, %if.then162
  br label %if.end176

if.end176:                                        ; preds = %if.end175, %if.then155
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %if.then149
  %exp178 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a01, i32 0, i32 1, !dbg !15313
  %190 = load i32, i32* %exp178, align 4, !dbg !15313
  store i32 %190, i32* %shift, align 4, !dbg !15314
  %191 = load i32, i32* %shift, align 4, !dbg !15315
  %cmp179 = icmp sge i32 %191, 3, !dbg !15317
  br i1 %cmp179, label %if.then180, label %if.else184, !dbg !15318

if.then180:                                       ; preds = %if.end177
  %192 = load i32, i32* %k, align 4, !dbg !15319
  %idxprom181 = sext i32 %192 to i64, !dbg !15320
  %193 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15320
  %arrayidx182 = getelementptr inbounds [2 x i32], [2 x i32]* %193, i64 %idxprom181, !dbg !15320
  %arrayidx183 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx182, i64 0, i64 1, !dbg !15320
  store i32 2147483647, i32* %arrayidx183, align 4, !dbg !15321
  br label %if.end212, !dbg !15320

if.else184:                                       ; preds = %if.end177
  %194 = load i32, i32* %shift, align 4, !dbg !15322
  %cmp185 = icmp sle i32 %194, -30, !dbg !15324
  br i1 %cmp185, label %if.then186, label %if.else190, !dbg !15325

if.then186:                                       ; preds = %if.else184
  %195 = load i32, i32* %k, align 4, !dbg !15326
  %idxprom187 = sext i32 %195 to i64, !dbg !15327
  %196 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15327
  %arrayidx188 = getelementptr inbounds [2 x i32], [2 x i32]* %196, i64 %idxprom187, !dbg !15327
  %arrayidx189 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx188, i64 0, i64 1, !dbg !15327
  store i32 0, i32* %arrayidx189, align 4, !dbg !15328
  br label %if.end211, !dbg !15327

if.else190:                                       ; preds = %if.else184
  %197 = load i32, i32* %shift, align 4, !dbg !15329
  %sub191 = sub nsw i32 1, %197, !dbg !15331
  store i32 %sub191, i32* %shift, align 4, !dbg !15332
  %198 = load i32, i32* %shift, align 4, !dbg !15333
  %cmp192 = icmp sle i32 %198, 0, !dbg !15335
  br i1 %cmp192, label %if.then193, label %if.else201, !dbg !15336

if.then193:                                       ; preds = %if.else190
  %mant194 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a01, i32 0, i32 0, !dbg !15337
  %199 = load i32, i32* %mant194, align 4, !dbg !15337
  %200 = load i32, i32* %shift, align 4, !dbg !15338
  %sub195 = sub nsw i32 0, %200, !dbg !15339
  %shl196 = shl i32 1, %sub195, !dbg !15340
  %mul197 = mul nsw i32 %199, %shl196, !dbg !15341
  %201 = load i32, i32* %k, align 4, !dbg !15342
  %idxprom198 = sext i32 %201 to i64, !dbg !15343
  %202 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15343
  %arrayidx199 = getelementptr inbounds [2 x i32], [2 x i32]* %202, i64 %idxprom198, !dbg !15343
  %arrayidx200 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx199, i64 0, i64 1, !dbg !15343
  store i32 %mul197, i32* %arrayidx200, align 4, !dbg !15344
  br label %if.end210, !dbg !15343

if.else201:                                       ; preds = %if.else190
  %203 = load i32, i32* %shift, align 4, !dbg !15345
  %sub202 = sub nsw i32 %203, 1, !dbg !15347
  %shl203 = shl i32 1, %sub202, !dbg !15348
  store i32 %shl203, i32* %round, align 4, !dbg !15349
  %mant204 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a01, i32 0, i32 0, !dbg !15350
  %204 = load i32, i32* %mant204, align 4, !dbg !15350
  %205 = load i32, i32* %round, align 4, !dbg !15351
  %add205 = add nsw i32 %204, %205, !dbg !15352
  %206 = load i32, i32* %shift, align 4, !dbg !15353
  %shr206 = ashr i32 %add205, %206, !dbg !15354
  %207 = load i32, i32* %k, align 4, !dbg !15355
  %idxprom207 = sext i32 %207 to i64, !dbg !15356
  %208 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15356
  %arrayidx208 = getelementptr inbounds [2 x i32], [2 x i32]* %208, i64 %idxprom207, !dbg !15356
  %arrayidx209 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx208, i64 0, i64 1, !dbg !15356
  store i32 %shr206, i32* %arrayidx209, align 4, !dbg !15357
  br label %if.end210

if.end210:                                        ; preds = %if.else201, %if.then193
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.then186
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %if.then180
  %exp213 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a10, i32 0, i32 1, !dbg !15358
  %209 = load i32, i32* %exp213, align 4, !dbg !15358
  store i32 %209, i32* %shift, align 4, !dbg !15359
  %210 = load i32, i32* %shift, align 4, !dbg !15360
  %cmp214 = icmp sge i32 %210, 3, !dbg !15362
  br i1 %cmp214, label %if.then215, label %if.else219, !dbg !15363

if.then215:                                       ; preds = %if.end212
  %211 = load i32, i32* %k, align 4, !dbg !15364
  %idxprom216 = sext i32 %211 to i64, !dbg !15365
  %212 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15365
  %arrayidx217 = getelementptr inbounds [2 x i32], [2 x i32]* %212, i64 %idxprom216, !dbg !15365
  %arrayidx218 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx217, i64 0, i64 0, !dbg !15365
  store i32 2147483647, i32* %arrayidx218, align 4, !dbg !15366
  br label %if.end247, !dbg !15365

if.else219:                                       ; preds = %if.end212
  %213 = load i32, i32* %shift, align 4, !dbg !15367
  %cmp220 = icmp sle i32 %213, -30, !dbg !15369
  br i1 %cmp220, label %if.then221, label %if.else225, !dbg !15370

if.then221:                                       ; preds = %if.else219
  %214 = load i32, i32* %k, align 4, !dbg !15371
  %idxprom222 = sext i32 %214 to i64, !dbg !15372
  %215 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15372
  %arrayidx223 = getelementptr inbounds [2 x i32], [2 x i32]* %215, i64 %idxprom222, !dbg !15372
  %arrayidx224 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx223, i64 0, i64 0, !dbg !15372
  store i32 0, i32* %arrayidx224, align 4, !dbg !15373
  br label %if.end246, !dbg !15372

if.else225:                                       ; preds = %if.else219
  %216 = load i32, i32* %shift, align 4, !dbg !15374
  %sub226 = sub nsw i32 1, %216, !dbg !15376
  store i32 %sub226, i32* %shift, align 4, !dbg !15377
  %217 = load i32, i32* %shift, align 4, !dbg !15378
  %cmp227 = icmp sle i32 %217, 0, !dbg !15380
  br i1 %cmp227, label %if.then228, label %if.else236, !dbg !15381

if.then228:                                       ; preds = %if.else225
  %mant229 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a10, i32 0, i32 0, !dbg !15382
  %218 = load i32, i32* %mant229, align 4, !dbg !15382
  %219 = load i32, i32* %shift, align 4, !dbg !15383
  %sub230 = sub nsw i32 0, %219, !dbg !15384
  %shl231 = shl i32 1, %sub230, !dbg !15385
  %mul232 = mul nsw i32 %218, %shl231, !dbg !15386
  %220 = load i32, i32* %k, align 4, !dbg !15387
  %idxprom233 = sext i32 %220 to i64, !dbg !15388
  %221 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15388
  %arrayidx234 = getelementptr inbounds [2 x i32], [2 x i32]* %221, i64 %idxprom233, !dbg !15388
  %arrayidx235 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx234, i64 0, i64 0, !dbg !15388
  store i32 %mul232, i32* %arrayidx235, align 4, !dbg !15389
  br label %if.end245, !dbg !15388

if.else236:                                       ; preds = %if.else225
  %222 = load i32, i32* %shift, align 4, !dbg !15390
  %sub237 = sub nsw i32 %222, 1, !dbg !15392
  %shl238 = shl i32 1, %sub237, !dbg !15393
  store i32 %shl238, i32* %round, align 4, !dbg !15394
  %mant239 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a10, i32 0, i32 0, !dbg !15395
  %223 = load i32, i32* %mant239, align 4, !dbg !15395
  %224 = load i32, i32* %round, align 4, !dbg !15396
  %add240 = add nsw i32 %223, %224, !dbg !15397
  %225 = load i32, i32* %shift, align 4, !dbg !15398
  %shr241 = ashr i32 %add240, %225, !dbg !15399
  %226 = load i32, i32* %k, align 4, !dbg !15400
  %idxprom242 = sext i32 %226 to i64, !dbg !15401
  %227 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15401
  %arrayidx243 = getelementptr inbounds [2 x i32], [2 x i32]* %227, i64 %idxprom242, !dbg !15401
  %arrayidx244 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx243, i64 0, i64 0, !dbg !15401
  store i32 %shr241, i32* %arrayidx244, align 4, !dbg !15402
  br label %if.end245

if.end245:                                        ; preds = %if.else236, %if.then228
  br label %if.end246

if.end246:                                        ; preds = %if.end245, %if.then221
  br label %if.end247

if.end247:                                        ; preds = %if.end246, %if.then215
  %exp248 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a11, i32 0, i32 1, !dbg !15403
  %228 = load i32, i32* %exp248, align 4, !dbg !15403
  store i32 %228, i32* %shift, align 4, !dbg !15404
  %229 = load i32, i32* %shift, align 4, !dbg !15405
  %cmp249 = icmp sge i32 %229, 3, !dbg !15407
  br i1 %cmp249, label %if.then250, label %if.else254, !dbg !15408

if.then250:                                       ; preds = %if.end247
  %230 = load i32, i32* %k, align 4, !dbg !15409
  %idxprom251 = sext i32 %230 to i64, !dbg !15410
  %231 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15410
  %arrayidx252 = getelementptr inbounds [2 x i32], [2 x i32]* %231, i64 %idxprom251, !dbg !15410
  %arrayidx253 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx252, i64 0, i64 1, !dbg !15410
  store i32 2147483647, i32* %arrayidx253, align 4, !dbg !15411
  br label %if.end282, !dbg !15410

if.else254:                                       ; preds = %if.end247
  %232 = load i32, i32* %shift, align 4, !dbg !15412
  %cmp255 = icmp sle i32 %232, -30, !dbg !15414
  br i1 %cmp255, label %if.then256, label %if.else260, !dbg !15415

if.then256:                                       ; preds = %if.else254
  %233 = load i32, i32* %k, align 4, !dbg !15416
  %idxprom257 = sext i32 %233 to i64, !dbg !15417
  %234 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15417
  %arrayidx258 = getelementptr inbounds [2 x i32], [2 x i32]* %234, i64 %idxprom257, !dbg !15417
  %arrayidx259 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx258, i64 0, i64 1, !dbg !15417
  store i32 0, i32* %arrayidx259, align 4, !dbg !15418
  br label %if.end281, !dbg !15417

if.else260:                                       ; preds = %if.else254
  %235 = load i32, i32* %shift, align 4, !dbg !15419
  %sub261 = sub nsw i32 1, %235, !dbg !15421
  store i32 %sub261, i32* %shift, align 4, !dbg !15422
  %236 = load i32, i32* %shift, align 4, !dbg !15423
  %cmp262 = icmp sle i32 %236, 0, !dbg !15425
  br i1 %cmp262, label %if.then263, label %if.else271, !dbg !15426

if.then263:                                       ; preds = %if.else260
  %mant264 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a11, i32 0, i32 0, !dbg !15427
  %237 = load i32, i32* %mant264, align 4, !dbg !15427
  %238 = load i32, i32* %shift, align 4, !dbg !15428
  %sub265 = sub nsw i32 0, %238, !dbg !15429
  %shl266 = shl i32 1, %sub265, !dbg !15430
  %mul267 = mul nsw i32 %237, %shl266, !dbg !15431
  %239 = load i32, i32* %k, align 4, !dbg !15432
  %idxprom268 = sext i32 %239 to i64, !dbg !15433
  %240 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15433
  %arrayidx269 = getelementptr inbounds [2 x i32], [2 x i32]* %240, i64 %idxprom268, !dbg !15433
  %arrayidx270 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx269, i64 0, i64 1, !dbg !15433
  store i32 %mul267, i32* %arrayidx270, align 4, !dbg !15434
  br label %if.end280, !dbg !15433

if.else271:                                       ; preds = %if.else260
  %241 = load i32, i32* %shift, align 4, !dbg !15435
  %sub272 = sub nsw i32 %241, 1, !dbg !15437
  %shl273 = shl i32 1, %sub272, !dbg !15438
  store i32 %shl273, i32* %round, align 4, !dbg !15439
  %mant274 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %a11, i32 0, i32 0, !dbg !15440
  %242 = load i32, i32* %mant274, align 4, !dbg !15440
  %243 = load i32, i32* %round, align 4, !dbg !15441
  %add275 = add nsw i32 %242, %243, !dbg !15442
  %244 = load i32, i32* %shift, align 4, !dbg !15443
  %shr276 = ashr i32 %add275, %244, !dbg !15444
  %245 = load i32, i32* %k, align 4, !dbg !15445
  %idxprom277 = sext i32 %245 to i64, !dbg !15446
  %246 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15446
  %arrayidx278 = getelementptr inbounds [2 x i32], [2 x i32]* %246, i64 %idxprom277, !dbg !15446
  %arrayidx279 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx278, i64 0, i64 1, !dbg !15446
  store i32 %shr276, i32* %arrayidx279, align 4, !dbg !15447
  br label %if.end280

if.end280:                                        ; preds = %if.else271, %if.then263
  br label %if.end281

if.end281:                                        ; preds = %if.end280, %if.then256
  br label %if.end282

if.end282:                                        ; preds = %if.end281, %if.then250
  %247 = load i32, i32* %k, align 4, !dbg !15448
  %idxprom283 = sext i32 %247 to i64, !dbg !15449
  %248 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15449
  %arrayidx284 = getelementptr inbounds [2 x i32], [2 x i32]* %248, i64 %idxprom283, !dbg !15449
  %arrayidx285 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx284, i64 0, i64 0, !dbg !15449
  %249 = load i32, i32* %arrayidx285, align 4, !dbg !15449
  %shr286 = ashr i32 %249, 1, !dbg !15450
  %conv = sext i32 %shr286 to i64, !dbg !15451
  %250 = load i32, i32* %k, align 4, !dbg !15452
  %idxprom287 = sext i32 %250 to i64, !dbg !15453
  %251 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15453
  %arrayidx288 = getelementptr inbounds [2 x i32], [2 x i32]* %251, i64 %idxprom287, !dbg !15453
  %arrayidx289 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx288, i64 0, i64 0, !dbg !15453
  %252 = load i32, i32* %arrayidx289, align 4, !dbg !15453
  %shr290 = ashr i32 %252, 1, !dbg !15454
  %conv291 = sext i32 %shr290 to i64, !dbg !15455
  %mul292 = mul nsw i64 %conv, %conv291, !dbg !15456
  %253 = load i32, i32* %k, align 4, !dbg !15457
  %idxprom293 = sext i32 %253 to i64, !dbg !15458
  %254 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15458
  %arrayidx294 = getelementptr inbounds [2 x i32], [2 x i32]* %254, i64 %idxprom293, !dbg !15458
  %arrayidx295 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx294, i64 0, i64 1, !dbg !15458
  %255 = load i32, i32* %arrayidx295, align 4, !dbg !15458
  %shr296 = ashr i32 %255, 1, !dbg !15459
  %conv297 = sext i32 %shr296 to i64, !dbg !15460
  %256 = load i32, i32* %k, align 4, !dbg !15461
  %idxprom298 = sext i32 %256 to i64, !dbg !15462
  %257 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15462
  %arrayidx299 = getelementptr inbounds [2 x i32], [2 x i32]* %257, i64 %idxprom298, !dbg !15462
  %arrayidx300 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx299, i64 0, i64 1, !dbg !15462
  %258 = load i32, i32* %arrayidx300, align 4, !dbg !15462
  %shr301 = ashr i32 %258, 1, !dbg !15463
  %conv302 = sext i32 %shr301 to i64, !dbg !15464
  %mul303 = mul nsw i64 %conv297, %conv302, !dbg !15465
  %add304 = add nsw i64 %mul292, %mul303, !dbg !15466
  %add305 = add nsw i64 %add304, 1073741824, !dbg !15467
  %shr306 = ashr i64 %add305, 31, !dbg !15468
  %conv307 = trunc i64 %shr306 to i32, !dbg !15469
  store i32 %conv307, i32* %shift, align 4, !dbg !15470
  %259 = load i32, i32* %shift, align 4, !dbg !15471
  %cmp308 = icmp sge i32 %259, 536870912, !dbg !15473
  br i1 %cmp308, label %if.then310, label %if.end323, !dbg !15474

if.then310:                                       ; preds = %if.end282
  %260 = load i32, i32* %k, align 4, !dbg !15475
  %idxprom311 = sext i32 %260 to i64, !dbg !15477
  %261 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15477
  %arrayidx312 = getelementptr inbounds [2 x i32], [2 x i32]* %261, i64 %idxprom311, !dbg !15477
  %arrayidx313 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx312, i64 0, i64 0, !dbg !15477
  store i32 0, i32* %arrayidx313, align 4, !dbg !15478
  %262 = load i32, i32* %k, align 4, !dbg !15479
  %idxprom314 = sext i32 %262 to i64, !dbg !15480
  %263 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15480
  %arrayidx315 = getelementptr inbounds [2 x i32], [2 x i32]* %263, i64 %idxprom314, !dbg !15480
  %arrayidx316 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx315, i64 0, i64 1, !dbg !15480
  store i32 0, i32* %arrayidx316, align 4, !dbg !15481
  %264 = load i32, i32* %k, align 4, !dbg !15482
  %idxprom317 = sext i32 %264 to i64, !dbg !15483
  %265 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15483
  %arrayidx318 = getelementptr inbounds [2 x i32], [2 x i32]* %265, i64 %idxprom317, !dbg !15483
  %arrayidx319 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx318, i64 0, i64 0, !dbg !15483
  store i32 0, i32* %arrayidx319, align 4, !dbg !15484
  %266 = load i32, i32* %k, align 4, !dbg !15485
  %idxprom320 = sext i32 %266 to i64, !dbg !15486
  %267 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15486
  %arrayidx321 = getelementptr inbounds [2 x i32], [2 x i32]* %267, i64 %idxprom320, !dbg !15486
  %arrayidx322 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx321, i64 0, i64 1, !dbg !15486
  store i32 0, i32* %arrayidx322, align 4, !dbg !15487
  br label %if.end323, !dbg !15488

if.end323:                                        ; preds = %if.then310, %if.end282
  %268 = load i32, i32* %k, align 4, !dbg !15489
  %idxprom324 = sext i32 %268 to i64, !dbg !15490
  %269 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15490
  %arrayidx325 = getelementptr inbounds [2 x i32], [2 x i32]* %269, i64 %idxprom324, !dbg !15490
  %arrayidx326 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx325, i64 0, i64 0, !dbg !15490
  %270 = load i32, i32* %arrayidx326, align 4, !dbg !15490
  %shr327 = ashr i32 %270, 1, !dbg !15491
  %conv328 = sext i32 %shr327 to i64, !dbg !15492
  %271 = load i32, i32* %k, align 4, !dbg !15493
  %idxprom329 = sext i32 %271 to i64, !dbg !15494
  %272 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15494
  %arrayidx330 = getelementptr inbounds [2 x i32], [2 x i32]* %272, i64 %idxprom329, !dbg !15494
  %arrayidx331 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx330, i64 0, i64 0, !dbg !15494
  %273 = load i32, i32* %arrayidx331, align 4, !dbg !15494
  %shr332 = ashr i32 %273, 1, !dbg !15495
  %conv333 = sext i32 %shr332 to i64, !dbg !15496
  %mul334 = mul nsw i64 %conv328, %conv333, !dbg !15497
  %274 = load i32, i32* %k, align 4, !dbg !15498
  %idxprom335 = sext i32 %274 to i64, !dbg !15499
  %275 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15499
  %arrayidx336 = getelementptr inbounds [2 x i32], [2 x i32]* %275, i64 %idxprom335, !dbg !15499
  %arrayidx337 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx336, i64 0, i64 1, !dbg !15499
  %276 = load i32, i32* %arrayidx337, align 4, !dbg !15499
  %shr338 = ashr i32 %276, 1, !dbg !15500
  %conv339 = sext i32 %shr338 to i64, !dbg !15501
  %277 = load i32, i32* %k, align 4, !dbg !15502
  %idxprom340 = sext i32 %277 to i64, !dbg !15503
  %278 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15503
  %arrayidx341 = getelementptr inbounds [2 x i32], [2 x i32]* %278, i64 %idxprom340, !dbg !15503
  %arrayidx342 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx341, i64 0, i64 1, !dbg !15503
  %279 = load i32, i32* %arrayidx342, align 4, !dbg !15503
  %shr343 = ashr i32 %279, 1, !dbg !15504
  %conv344 = sext i32 %shr343 to i64, !dbg !15505
  %mul345 = mul nsw i64 %conv339, %conv344, !dbg !15506
  %add346 = add nsw i64 %mul334, %mul345, !dbg !15507
  %add347 = add nsw i64 %add346, 1073741824, !dbg !15508
  %shr348 = ashr i64 %add347, 31, !dbg !15509
  %conv349 = trunc i64 %shr348 to i32, !dbg !15510
  store i32 %conv349, i32* %shift, align 4, !dbg !15511
  %280 = load i32, i32* %shift, align 4, !dbg !15512
  %cmp350 = icmp sge i32 %280, 536870912, !dbg !15514
  br i1 %cmp350, label %if.then352, label %if.end365, !dbg !15515

if.then352:                                       ; preds = %if.end323
  %281 = load i32, i32* %k, align 4, !dbg !15516
  %idxprom353 = sext i32 %281 to i64, !dbg !15518
  %282 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15518
  %arrayidx354 = getelementptr inbounds [2 x i32], [2 x i32]* %282, i64 %idxprom353, !dbg !15518
  %arrayidx355 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx354, i64 0, i64 0, !dbg !15518
  store i32 0, i32* %arrayidx355, align 4, !dbg !15519
  %283 = load i32, i32* %k, align 4, !dbg !15520
  %idxprom356 = sext i32 %283 to i64, !dbg !15521
  %284 = load [2 x i32]*, [2 x i32]** %alpha1.addr, align 8, !dbg !15521
  %arrayidx357 = getelementptr inbounds [2 x i32], [2 x i32]* %284, i64 %idxprom356, !dbg !15521
  %arrayidx358 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx357, i64 0, i64 1, !dbg !15521
  store i32 0, i32* %arrayidx358, align 4, !dbg !15522
  %285 = load i32, i32* %k, align 4, !dbg !15523
  %idxprom359 = sext i32 %285 to i64, !dbg !15524
  %286 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15524
  %arrayidx360 = getelementptr inbounds [2 x i32], [2 x i32]* %286, i64 %idxprom359, !dbg !15524
  %arrayidx361 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx360, i64 0, i64 0, !dbg !15524
  store i32 0, i32* %arrayidx361, align 4, !dbg !15525
  %287 = load i32, i32* %k, align 4, !dbg !15526
  %idxprom362 = sext i32 %287 to i64, !dbg !15527
  %288 = load [2 x i32]*, [2 x i32]** %alpha0.addr, align 8, !dbg !15527
  %arrayidx363 = getelementptr inbounds [2 x i32], [2 x i32]* %288, i64 %idxprom362, !dbg !15527
  %arrayidx364 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx363, i64 0, i64 1, !dbg !15527
  store i32 0, i32* %arrayidx364, align 4, !dbg !15528
  br label %if.end365, !dbg !15529

if.end365:                                        ; preds = %if.then352, %if.end323
  br label %for.inc, !dbg !15530

for.inc:                                          ; preds = %if.end365
  %289 = load i32, i32* %k, align 4, !dbg !15531
  %inc = add nsw i32 %289, 1, !dbg !15531
  store i32 %inc, i32* %k, align 4, !dbg !15531
  br label %for.cond, !dbg !15533, !llvm.loop !15534

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15536
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_sub_sf(i64 %a.coerce, i64 %b.coerce) #8 !dbg !15537 {
entry:
  %retval = alloca %struct.SoftFloat, align 4
  %a = alloca %struct.SoftFloat, align 4
  %b = alloca %struct.SoftFloat, align 4
  %.compoundliteral = alloca %struct.SoftFloat, align 4
  %0 = bitcast %struct.SoftFloat* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  %1 = bitcast %struct.SoftFloat* %b to i64*
  store i64 %b.coerce, i64* %1, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %a, metadata !15538, metadata !2734), !dbg !15539
  call void @llvm.dbg.declare(metadata %struct.SoftFloat* %b, metadata !15540, metadata !2734), !dbg !15541
  %mant = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 0, !dbg !15542
  %mant1 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 0, !dbg !15543
  %2 = load i32, i32* %mant1, align 4, !dbg !15543
  %sub = sub nsw i32 0, %2, !dbg !15544
  store i32 %sub, i32* %mant, align 4, !dbg !15542
  %exp = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %.compoundliteral, i32 0, i32 1, !dbg !15542
  %exp2 = getelementptr inbounds %struct.SoftFloat, %struct.SoftFloat* %b, i32 0, i32 1, !dbg !15545
  %3 = load i32, i32* %exp2, align 4, !dbg !15545
  store i32 %3, i32* %exp, align 4, !dbg !15542
  %4 = bitcast %struct.SoftFloat* %a to i64*, !dbg !15546
  %5 = load i64, i64* %4, align 4, !dbg !15546
  %6 = bitcast %struct.SoftFloat* %.compoundliteral to i64*, !dbg !15546
  %7 = load i64, i64* %6, align 4, !dbg !15546
  %call = call i64 @av_add_sf(i64 %5, i64 %7) #2, !dbg !15546
  %8 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !15546
  store i64 %call, i64* %8, align 4, !dbg !15546
  %9 = bitcast %struct.SoftFloat* %retval to i64*, !dbg !15547
  %10 = load i64, i64* %9, align 4, !dbg !15547
  ret i64 %10, !dbg !15547
}

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2576, !2577}
!llvm.ident = !{!2578}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !954, globals: !995)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--aacsbr_fixed.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887, !894, !903, !908, !918, !924, !928, !935, !942}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "WindowSequence", file: !888, line: 75, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/aac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!889 = !{!890, !891, !892, !893}
!890 = !DIEnumerator(name: "ONLY_LONG_SEQUENCE", value: 0)
!891 = !DIEnumerator(name: "LONG_START_SEQUENCE", value: 1)
!892 = !DIEnumerator(name: "EIGHT_SHORT_SEQUENCE", value: 2)
!893 = !DIEnumerator(name: "LONG_STOP_SEQUENCE", value: 3)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BandType", file: !888, line: 82, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902}
!896 = !DIEnumerator(name: "ZERO_BT", value: 0)
!897 = !DIEnumerator(name: "FIRST_PAIR_BT", value: 5)
!898 = !DIEnumerator(name: "ESC_BT", value: 11)
!899 = !DIEnumerator(name: "RESERVED_BT", value: 12)
!900 = !DIEnumerator(name: "NOISE_BT", value: 13)
!901 = !DIEnumerator(name: "INTENSITY_BT2", value: 14)
!902 = !DIEnumerator(name: "INTENSITY_BT", value: 15)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CouplingPoint", file: !888, line: 106, size: 32, align: 32, elements: !904)
!904 = !{!905, !906, !907}
!905 = !DIEnumerator(name: "BEFORE_TNS", value: 0)
!906 = !DIEnumerator(name: "BETWEEN_TNS_AND_IMDCT", value: 1)
!907 = !DIEnumerator(name: "AFTER_IMDCT", value: 3)
!908 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RawDataBlockType", file: !888, line: 55, size: 32, align: 32, elements: !909)
!909 = !{!910, !911, !912, !913, !914, !915, !916, !917}
!910 = !DIEnumerator(name: "TYPE_SCE", value: 0)
!911 = !DIEnumerator(name: "TYPE_CPE", value: 1)
!912 = !DIEnumerator(name: "TYPE_CCE", value: 2)
!913 = !DIEnumerator(name: "TYPE_LFE", value: 3)
!914 = !DIEnumerator(name: "TYPE_DSE", value: 4)
!915 = !DIEnumerator(name: "TYPE_PCE", value: 5)
!916 = !DIEnumerator(name: "TYPE_FIL", value: 6)
!917 = !DIEnumerator(name: "TYPE_END", value: 7)
!918 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !919, line: 77, size: 32, align: 32, elements: !920)
!919 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!920 = !{!921, !922, !923}
!921 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!922 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!923 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!924 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !919, line: 83, size: 32, align: 32, elements: !925)
!925 = !{!926, !927}
!926 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!927 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!928 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OCStatus", file: !888, line: 115, size: 32, align: 32, elements: !929)
!929 = !{!930, !931, !932, !933, !934}
!930 = !DIEnumerator(name: "OC_NONE", value: 0)
!931 = !DIEnumerator(name: "OC_TRIAL_PCE", value: 1)
!932 = !DIEnumerator(name: "OC_TRIAL_FRAME", value: 2)
!933 = !DIEnumerator(name: "OC_GLOBAL_HDR", value: 3)
!934 = !DIEnumerator(name: "OC_LOCKED", value: 4)
!935 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !936, line: 58, size: 32, align: 32, elements: !937)
!936 = !DIFile(filename: "libavcodec/aacsbr.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!937 = !{!938, !939, !940, !941}
!938 = !DIEnumerator(name: "FIXFIX", value: 0)
!939 = !DIEnumerator(name: "FIXVAR", value: 1)
!940 = !DIEnumerator(name: "VARFIX", value: 2)
!941 = !DIEnumerator(name: "VARVAR", value: 3)
!942 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !936, line: 42, size: 32, align: 32, elements: !943)
!943 = !{!944, !945, !946, !947, !948, !949, !950, !951, !952, !953}
!944 = !DIEnumerator(name: "T_HUFFMAN_ENV_1_5DB", value: 0)
!945 = !DIEnumerator(name: "F_HUFFMAN_ENV_1_5DB", value: 1)
!946 = !DIEnumerator(name: "T_HUFFMAN_ENV_BAL_1_5DB", value: 2)
!947 = !DIEnumerator(name: "F_HUFFMAN_ENV_BAL_1_5DB", value: 3)
!948 = !DIEnumerator(name: "T_HUFFMAN_ENV_3_0DB", value: 4)
!949 = !DIEnumerator(name: "F_HUFFMAN_ENV_3_0DB", value: 5)
!950 = !DIEnumerator(name: "T_HUFFMAN_ENV_BAL_3_0DB", value: 6)
!951 = !DIEnumerator(name: "F_HUFFMAN_ENV_BAL_3_0DB", value: 7)
!952 = !DIEnumerator(name: "T_HUFFMAN_NOISE_3_0DB", value: 8)
!953 = !DIEnumerator(name: "T_HUFFMAN_NOISE_BAL_3_0DB", value: 9)
!954 = !{!955, !959, !965, !969, !970, !973, !977, !986, !988, !958, !992, !985, !994}
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64, align: 64)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "INTFLOAT", file: !957, line: 37, baseType: !958)
!957 = !DIFile(filename: "libavcodec/aac_defines.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!958 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64, align: 64)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 65536, align: 32, elements: !962)
!961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!962 = !{!963, !963, !964}
!963 = !DISubrange(count: 32)
!964 = !DISubrange(count: 2)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64, align: 64)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 2560, align: 32, elements: !967)
!967 = !{!968, !964}
!968 = !DISubrange(count: 40)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 64, align: 32, elements: !972)
!972 = !{!964}
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64, align: 64)
!974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 4096, align: 32, elements: !975)
!975 = !{!976, !964}
!976 = !DISubrange(count: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64, align: 64)
!978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !979)
!979 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !980, line: 221, size: 32, align: 8, elements: !981)
!980 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!981 = !{!982}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !979, file: !980, line: 221, baseType: !983, size: 32, align: 32)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !984, line: 51, baseType: !985)
!984 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!985 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !984, line: 48, baseType: !987)
!987 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !984, line: 37, baseType: !991)
!991 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !984, line: 40, baseType: !993)
!993 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !984, line: 38, baseType: !958)
!995 = !{!996, !1001, !1020, !1024, !1028, !1032, !1036, !1040, !1044, !1048, !1049, !1053, !1057, !1070, !1075, !1078, !1079, !1080, !1084, !1086, !1087, !1088, !1092, !1094, !1095, !1096, !1103, !1105, !1106, !1107, !1109, !1110, !1111, !1112, !1117, !1121, !2527, !2528, !2529, !2533, !2534, !2536, !2538, !2540, !2542, !2544, !2545, !2550, !2555, !2560, !2562, !2563, !2564, !2565, !2566, !2575}
!996 = distinct !DIGlobalVariable(name: "ff_sbr_noise_table_fixed", scope: !0, file: !997, line: 271, type: !998, isLocal: false, isDefinition: true, variable: [520 x [2 x i32]]* @ff_sbr_noise_table_fixed)
!997 = !DIFile(filename: "libavcodec/aacsbrdata.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 33280, align: 32, elements: !999)
!999 = !{!1000, !964}
!1000 = !DISubrange(count: 520)
!1001 = distinct !DIGlobalVariable(name: "sbr_tmp", scope: !1002, file: !1003, line: 54, type: !1007, isLocal: true, isDefinition: true, variable: [10 x %struct.anon]* @ff_aac_sbr_init_fixed.sbr_tmp)
!1002 = distinct !DISubprogram(name: "ff_aac_sbr_init_fixed", scope: !1003, file: !1003, line: 49, type: !1004, isLocal: false, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!1003 = !DIFile(filename: "libavcodec/aacsbr_template.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1004 = !DISubroutineType(types: !1005)
!1005 = !{null}
!1006 = !{}
!1007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 1920, align: 64, elements: !1018)
!1008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1009)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1002, file: !1003, line: 51, size: 192, align: 64, elements: !1010)
!1010 = !{!1011, !1014, !1015, !1017}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_codes", scope: !1009, file: !1003, line: 52, baseType: !1012, size: 64, align: 64)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64, align: 64)
!1013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_bits", scope: !1009, file: !1003, line: 52, baseType: !1012, size: 64, align: 64, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1009, file: !1003, line: 53, baseType: !1016, size: 32, align: 32, offset: 128)
!1016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "elem_size", scope: !1009, file: !1003, line: 53, baseType: !1016, size: 32, align: 32, offset: 160)
!1018 = !{!1019}
!1019 = !DISubrange(count: 10)
!1020 = distinct !DIGlobalVariable(name: "table", scope: !1002, file: !1003, line: 68, type: !1021, isLocal: true, isDefinition: true, variable: [1098 x [2 x i16]]* @ff_aac_sbr_init_fixed.table)
!1021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 35136, align: 16, elements: !1022)
!1022 = !{!1023, !964}
!1023 = !DISubrange(count: 1098)
!1024 = distinct !DIGlobalVariable(name: "table", scope: !1002, file: !1003, line: 69, type: !1025, isLocal: true, isDefinition: true, variable: [1092 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.1)
!1025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 34944, align: 16, elements: !1026)
!1026 = !{!1027, !964}
!1027 = !DISubrange(count: 1092)
!1028 = distinct !DIGlobalVariable(name: "table", scope: !1002, file: !1003, line: 70, type: !1029, isLocal: true, isDefinition: true, variable: [768 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.2)
!1029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 24576, align: 16, elements: !1030)
!1030 = !{!1031, !964}
!1031 = !DISubrange(count: 768)
!1032 = distinct !DIGlobalVariable(name: "table", scope: !1002, file: !1003, line: 71, type: !1033, isLocal: true, isDefinition: true, variable: [1026 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.3)
!1033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 32832, align: 16, elements: !1034)
!1034 = !{!1035, !964}
!1035 = !DISubrange(count: 1026)
!1036 = distinct !DIGlobalVariable(name: "table", scope: !1002, file: !1003, line: 72, type: !1037, isLocal: true, isDefinition: true, variable: [1058 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.4)
!1037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 33856, align: 16, elements: !1038)
!1038 = !{!1039, !964}
!1039 = !DISubrange(count: 1058)
!1040 = distinct !DIGlobalVariable(name: "table", scope: !1002, file: !1003, line: 73, type: !1041, isLocal: true, isDefinition: true, variable: [1052 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.5)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 33664, align: 16, elements: !1042)
!1042 = !{!1043, !964}
!1043 = !DISubrange(count: 1052)
!1044 = distinct !DIGlobalVariable(name: "table", scope: !1002, file: !1003, line: 74, type: !1045, isLocal: true, isDefinition: true, variable: [544 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.6)
!1045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 17408, align: 16, elements: !1046)
!1046 = !{!1047, !964}
!1047 = !DISubrange(count: 544)
!1048 = distinct !DIGlobalVariable(name: "table", scope: !1002, file: !1003, line: 75, type: !1045, isLocal: true, isDefinition: true, variable: [544 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.7)
!1049 = distinct !DIGlobalVariable(name: "table", scope: !1002, file: !1003, line: 76, type: !1050, isLocal: true, isDefinition: true, variable: [592 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.8)
!1050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 18944, align: 16, elements: !1051)
!1051 = !{!1052, !964}
!1052 = !DISubrange(count: 592)
!1053 = distinct !DIGlobalVariable(name: "table", scope: !1002, file: !1003, line: 77, type: !1054, isLocal: true, isDefinition: true, variable: [512 x [2 x i16]]* @ff_aac_sbr_init_fixed.table.9)
!1054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 16384, align: 16, elements: !1055)
!1055 = !{!1056, !964}
!1056 = !DISubrange(count: 512)
!1057 = distinct !DIGlobalVariable(name: "vlc_sbr", scope: !0, file: !1058, line: 75, type: !1059, isLocal: true, isDefinition: true, variable: [10 x %struct.VLC]* @vlc_sbr)
!1058 = !DIFile(filename: "libavcodec/aacsbr_fixed.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1060, size: 1920, align: 64, elements: !1018)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1061, line: 30, baseType: !1062)
!1061 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1061, line: 26, size: 192, align: 64, elements: !1063)
!1063 = !{!1064, !1065, !1068, !1069}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1062, file: !1061, line: 27, baseType: !958, size: 32, align: 32)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1062, file: !1061, line: 28, baseType: !1066, size: 64, align: 64, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64, align: 64)
!1067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 32, align: 16, elements: !972)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1062, file: !1061, line: 29, baseType: !958, size: 32, align: 32, offset: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1062, file: !1061, line: 29, baseType: !958, size: 32, align: 32, offset: 160)
!1070 = distinct !DIGlobalVariable(name: "t_huffman_env_1_5dB_codes", scope: !0, file: !997, line: 56, type: !1071, isLocal: true, isDefinition: true, variable: [121 x i32]* @t_huffman_env_1_5dB_codes)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1072, size: 3872, align: 32, elements: !1073)
!1072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !983)
!1073 = !{!1074}
!1074 = !DISubrange(count: 121)
!1075 = distinct !DIGlobalVariable(name: "t_huffman_env_1_5dB_bits", scope: !0, file: !997, line: 37, type: !1076, isLocal: true, isDefinition: true, variable: [121 x i8]* @t_huffman_env_1_5dB_bits)
!1076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1077, size: 968, align: 8, elements: !1073)
!1077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!1078 = distinct !DIGlobalVariable(name: "f_huffman_env_1_5dB_codes", scope: !0, file: !997, line: 94, type: !1071, isLocal: true, isDefinition: true, variable: [121 x i32]* @f_huffman_env_1_5dB_codes)
!1079 = distinct !DIGlobalVariable(name: "f_huffman_env_1_5dB_bits", scope: !0, file: !997, line: 75, type: !1076, isLocal: true, isDefinition: true, variable: [121 x i8]* @f_huffman_env_1_5dB_bits)
!1080 = distinct !DIGlobalVariable(name: "t_huffman_env_bal_1_5dB_codes", scope: !0, file: !997, line: 123, type: !1081, isLocal: true, isDefinition: true, variable: [49 x i32]* @t_huffman_env_bal_1_5dB_codes)
!1081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1072, size: 1568, align: 32, elements: !1082)
!1082 = !{!1083}
!1083 = !DISubrange(count: 49)
!1084 = distinct !DIGlobalVariable(name: "t_huffman_env_bal_1_5dB_bits", scope: !0, file: !997, line: 113, type: !1085, isLocal: true, isDefinition: true, variable: [49 x i8]* @t_huffman_env_bal_1_5dB_bits)
!1085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1077, size: 392, align: 8, elements: !1082)
!1086 = distinct !DIGlobalVariable(name: "f_huffman_env_bal_1_5dB_codes", scope: !0, file: !997, line: 143, type: !1081, isLocal: true, isDefinition: true, variable: [49 x i32]* @f_huffman_env_bal_1_5dB_codes)
!1087 = distinct !DIGlobalVariable(name: "f_huffman_env_bal_1_5dB_bits", scope: !0, file: !997, line: 133, type: !1085, isLocal: true, isDefinition: true, variable: [49 x i8]* @f_huffman_env_bal_1_5dB_bits)
!1088 = distinct !DIGlobalVariable(name: "t_huffman_env_3_0dB_codes", scope: !0, file: !997, line: 164, type: !1089, isLocal: true, isDefinition: true, variable: [63 x i32]* @t_huffman_env_3_0dB_codes)
!1089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1072, size: 2016, align: 32, elements: !1090)
!1090 = !{!1091}
!1091 = !DISubrange(count: 63)
!1092 = distinct !DIGlobalVariable(name: "t_huffman_env_3_0dB_bits", scope: !0, file: !997, line: 153, type: !1093, isLocal: true, isDefinition: true, variable: [63 x i8]* @t_huffman_env_3_0dB_bits)
!1093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1077, size: 504, align: 8, elements: !1090)
!1094 = distinct !DIGlobalVariable(name: "f_huffman_env_3_0dB_codes", scope: !0, file: !997, line: 186, type: !1089, isLocal: true, isDefinition: true, variable: [63 x i32]* @f_huffman_env_3_0dB_codes)
!1095 = distinct !DIGlobalVariable(name: "f_huffman_env_3_0dB_bits", scope: !0, file: !997, line: 175, type: !1093, isLocal: true, isDefinition: true, variable: [63 x i8]* @f_huffman_env_3_0dB_bits)
!1096 = distinct !DIGlobalVariable(name: "t_huffman_env_bal_3_0dB_codes", scope: !0, file: !997, line: 204, type: !1097, isLocal: true, isDefinition: true, variable: [25 x i16]* @t_huffman_env_bal_3_0dB_codes)
!1097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1098, size: 400, align: 16, elements: !1101)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !984, line: 49, baseType: !1100)
!1100 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1101 = !{!1102}
!1102 = !DISubrange(count: 25)
!1103 = distinct !DIGlobalVariable(name: "t_huffman_env_bal_3_0dB_bits", scope: !0, file: !997, line: 197, type: !1104, isLocal: true, isDefinition: true, variable: [25 x i8]* @t_huffman_env_bal_3_0dB_bits)
!1104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1077, size: 200, align: 8, elements: !1101)
!1105 = distinct !DIGlobalVariable(name: "f_huffman_env_bal_3_0dB_codes", scope: !0, file: !997, line: 218, type: !1097, isLocal: true, isDefinition: true, variable: [25 x i16]* @f_huffman_env_bal_3_0dB_codes)
!1106 = distinct !DIGlobalVariable(name: "f_huffman_env_bal_3_0dB_bits", scope: !0, file: !997, line: 211, type: !1104, isLocal: true, isDefinition: true, variable: [25 x i8]* @f_huffman_env_bal_3_0dB_bits)
!1107 = distinct !DIGlobalVariable(name: "t_huffman_noise_3_0dB_codes", scope: !0, file: !997, line: 236, type: !1108, isLocal: true, isDefinition: true, variable: [63 x i16]* @t_huffman_noise_3_0dB_codes)
!1108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1098, size: 1008, align: 16, elements: !1090)
!1109 = distinct !DIGlobalVariable(name: "t_huffman_noise_3_0dB_bits", scope: !0, file: !997, line: 225, type: !1093, isLocal: true, isDefinition: true, variable: [63 x i8]* @t_huffman_noise_3_0dB_bits)
!1110 = distinct !DIGlobalVariable(name: "t_huffman_noise_bal_3_0dB_codes", scope: !0, file: !997, line: 254, type: !1104, isLocal: true, isDefinition: true, variable: [25 x i8]* @t_huffman_noise_bal_3_0dB_codes)
!1111 = distinct !DIGlobalVariable(name: "t_huffman_noise_bal_3_0dB_bits", scope: !0, file: !997, line: 247, type: !1104, isLocal: true, isDefinition: true, variable: [25 x i8]* @t_huffman_noise_bal_3_0dB_bits)
!1112 = distinct !DIGlobalVariable(name: "sbr_qmf_window_us", scope: !0, file: !1113, line: 30, type: !1114, isLocal: true, isDefinition: true, variable: [640 x i32]* @sbr_qmf_window_us)
!1113 = !DIFile(filename: "libavcodec/aacsbr_tablegen_common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 20480, align: 32, elements: !1115)
!1115 = !{!1116}
!1116 = !DISubrange(count: 640)
!1117 = distinct !DIGlobalVariable(name: "sbr_qmf_window_ds", scope: !0, file: !1113, line: 29, type: !1118, isLocal: true, isDefinition: true, variable: [320 x i32]* @sbr_qmf_window_ds)
!1118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 10240, align: 32, elements: !1119)
!1119 = !{!1120}
!1120 = !DISubrange(count: 320)
!1121 = distinct !DIGlobalVariable(name: "bands_warped", scope: !1122, file: !1003, line: 140, type: !2526, isLocal: true, isDefinition: true, variable: [3 x i32]* @sbr_make_f_tablelim.bands_warped)
!1122 = distinct !DISubprogram(name: "sbr_make_f_tablelim", scope: !1003, file: !1003, line: 136, type: !1123, isLocal: true, isDefinition: true, scopeLine: 137, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{null, !1125}
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64, align: 64)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectralBandReplication", file: !1127, line: 115, baseType: !1128)
!1127 = !DIFile(filename: "libavcodec/sbr.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectralBandReplication", file: !1127, line: 139, size: 3471872, align: 256, elements: !1129)
!1129 = !{!1130, !1131, !1132, !1133, !1134, !1135, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1156, !1158, !1159, !1160, !1161, !1244, !1363, !1364, !1365, !1366, !1368, !1370, !1371, !1373, !1377, !1378, !1380, !1381, !1384, !1387, !1390, !1392, !1393, !1396, !1397, !1399, !1400, !1401, !1402, !1403, !1406, !1451, !1452, !1502}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1128, file: !1127, line: 140, baseType: !958, size: 32, align: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1128, file: !1127, line: 141, baseType: !958, size: 32, align: 32, offset: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "ready_for_dequant", scope: !1128, file: !1127, line: 142, baseType: !958, size: 32, align: 32, offset: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "id_aac", scope: !1128, file: !1127, line: 143, baseType: !958, size: 32, align: 32, offset: 96)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !1128, file: !1127, line: 144, baseType: !958, size: 32, align: 32, offset: 128)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "spectrum_params", scope: !1128, file: !1127, line: 145, baseType: !1136, size: 48, align: 8, offset: 160)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectrumParameters", file: !1127, line: 55, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectrumParameters", file: !1127, line: 42, size: 48, align: 8, elements: !1138)
!1138 = !{!1139, !1140, !1141, !1142, !1143, !1144}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "bs_start_freq", scope: !1137, file: !1127, line: 43, baseType: !986, size: 8, align: 8)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "bs_stop_freq", scope: !1137, file: !1127, line: 44, baseType: !986, size: 8, align: 8, offset: 8)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "bs_xover_band", scope: !1137, file: !1127, line: 45, baseType: !986, size: 8, align: 8, offset: 16)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_scale", scope: !1137, file: !1127, line: 51, baseType: !986, size: 8, align: 8, offset: 24)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "bs_alter_scale", scope: !1137, file: !1127, line: 52, baseType: !986, size: 8, align: 8, offset: 32)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "bs_noise_bands", scope: !1137, file: !1127, line: 53, baseType: !986, size: 8, align: 8, offset: 40)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res_header", scope: !1128, file: !1127, line: 146, baseType: !958, size: 32, align: 32, offset: 224)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_bands", scope: !1128, file: !1127, line: 151, baseType: !985, size: 32, align: 32, offset: 256)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_gains", scope: !1128, file: !1127, line: 152, baseType: !985, size: 32, align: 32, offset: 288)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "bs_interpol_freq", scope: !1128, file: !1127, line: 153, baseType: !985, size: 32, align: 32, offset: 320)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "bs_smoothing_mode", scope: !1128, file: !1127, line: 154, baseType: !985, size: 32, align: 32, offset: 352)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "bs_coupling", scope: !1128, file: !1127, line: 156, baseType: !985, size: 32, align: 32, offset: 384)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1128, file: !1127, line: 157, baseType: !1152, size: 160, align: 32, offset: 416)
!1152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1153, size: 160, align: 32, elements: !1154)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_SIGNE", file: !957, line: 42, baseType: !958)
!1154 = !{!1155}
!1155 = !DISubrange(count: 5)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "kx", scope: !1128, file: !1127, line: 160, baseType: !1157, size: 64, align: 32, offset: 576)
!1157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1153, size: 64, align: 32, elements: !972)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !1128, file: !1127, line: 162, baseType: !1157, size: 64, align: 32, offset: 640)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "kx_and_m_pushed", scope: !1128, file: !1127, line: 163, baseType: !985, size: 32, align: 32, offset: 704)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "n_master", scope: !1128, file: !1127, line: 165, baseType: !1153, size: 32, align: 32, offset: 736)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1128, file: !1127, line: 166, baseType: !1162, size: 1684992, align: 256, offset: 768)
!1162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 1684992, align: 256, elements: !972)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRData", file: !1127, line: 113, baseType: !1164)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRData", file: !1127, line: 62, size: 842496, align: 256, elements: !1165)
!1165 = !{!1166, !1167, !1168, !1169, !1173, !1174, !1176, !1178, !1181, !1185, !1186, !1190, !1194, !1195, !1197, !1199, !1202, !1203, !1207, !1218, !1219, !1223, !1227, !1229, !1233, !1235, !1238, !1239, !1242, !1243}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "bs_frame_class", scope: !1164, file: !1127, line: 67, baseType: !985, size: 32, align: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic_flag", scope: !1164, file: !1127, line: 68, baseType: !985, size: 32, align: 32, offset: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_env", scope: !1164, file: !1127, line: 69, baseType: !1153, size: 32, align: 32, offset: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_res", scope: !1164, file: !1127, line: 70, baseType: !1170, size: 56, align: 8, offset: 96)
!1170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 56, align: 8, elements: !1171)
!1171 = !{!1172}
!1172 = !DISubrange(count: 7)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_noise", scope: !1164, file: !1127, line: 71, baseType: !1153, size: 32, align: 32, offset: 160)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_env", scope: !1164, file: !1127, line: 72, baseType: !1175, size: 40, align: 8, offset: 192)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 40, align: 8, elements: !1154)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_noise", scope: !1164, file: !1127, line: 73, baseType: !1177, size: 16, align: 8, offset: 232)
!1177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 16, align: 8, elements: !972)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "bs_invf_mode", scope: !1164, file: !1127, line: 74, baseType: !1179, size: 80, align: 8, offset: 248)
!1179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 80, align: 8, elements: !1180)
!1180 = !{!964, !1155}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic", scope: !1164, file: !1127, line: 75, baseType: !1182, size: 384, align: 8, offset: 328)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 384, align: 8, elements: !1183)
!1183 = !{!1184}
!1184 = !DISubrange(count: 48)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res", scope: !1164, file: !1127, line: 76, baseType: !985, size: 32, align: 32, offset: 736)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples", scope: !1164, file: !1127, line: 83, baseType: !1187, size: 73728, align: 32, offset: 768)
!1187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 73728, align: 32, elements: !1188)
!1188 = !{!1189}
!1189 = !DISubrange(count: 2304)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "analysis_filterbank_samples", scope: !1164, file: !1127, line: 84, baseType: !1191, size: 41984, align: 32, offset: 74496)
!1191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 41984, align: 32, elements: !1192)
!1192 = !{!1193}
!1193 = !DISubrange(count: 1312)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples_offset", scope: !1164, file: !1127, line: 85, baseType: !958, size: 32, align: 32, offset: 116480)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "e_a", scope: !1164, file: !1127, line: 87, baseType: !1196, size: 64, align: 32, offset: 116512)
!1196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 64, align: 32, elements: !972)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "bw_array", scope: !1164, file: !1127, line: 89, baseType: !1198, size: 160, align: 32, offset: 116576)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 160, align: 32, elements: !1154)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "W", scope: !1164, file: !1127, line: 91, baseType: !1200, size: 131072, align: 32, offset: 116736)
!1200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 131072, align: 32, elements: !1201)
!1201 = !{!964, !963, !963, !964}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "Ypos", scope: !1164, file: !1127, line: 93, baseType: !958, size: 32, align: 32, offset: 247808)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "Y", scope: !1164, file: !1127, line: 94, baseType: !1204, size: 311296, align: 32, offset: 247936)
!1204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 311296, align: 32, elements: !1205)
!1205 = !{!964, !1206, !976, !964}
!1206 = !DISubrange(count: 38)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "g_temp", scope: !1164, file: !1127, line: 95, baseType: !1208, size: 129024, align: 32, offset: 559232)
!1208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1209, size: 129024, align: 32, elements: !1216)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_FLOAT", file: !957, line: 41, baseType: !1210)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "SoftFloat", file: !1211, line: 37, baseType: !1212)
!1211 = !DIFile(filename: "./libavutil/softfloat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SoftFloat", file: !1211, line: 34, size: 64, align: 32, elements: !1213)
!1213 = !{!1214, !1215}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "mant", scope: !1212, file: !1211, line: 35, baseType: !994, size: 32, align: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1212, file: !1211, line: 36, baseType: !994, size: 32, align: 32, offset: 32)
!1216 = !{!1217, !1184}
!1217 = !DISubrange(count: 42)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "q_temp", scope: !1164, file: !1127, line: 96, baseType: !1208, size: 129024, align: 32, offset: 688256)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "s_indexmapped", scope: !1164, file: !1127, line: 97, baseType: !1220, size: 3072, align: 8, offset: 817280)
!1220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 3072, align: 8, elements: !1221)
!1221 = !{!1222, !1184}
!1222 = !DISubrange(count: 8)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs_q", scope: !1164, file: !1127, line: 99, baseType: !1224, size: 2304, align: 8, offset: 820352)
!1224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 2304, align: 8, elements: !1225)
!1225 = !{!1226, !1184}
!1226 = !DISubrange(count: 6)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs", scope: !1164, file: !1127, line: 100, baseType: !1228, size: 18432, align: 32, offset: 822656)
!1228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1209, size: 18432, align: 32, elements: !1225)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs_q", scope: !1164, file: !1127, line: 102, baseType: !1230, size: 120, align: 8, offset: 841088)
!1230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 120, align: 8, elements: !1231)
!1231 = !{!1232, !1155}
!1232 = !DISubrange(count: 3)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs", scope: !1164, file: !1127, line: 103, baseType: !1234, size: 960, align: 32, offset: 841216)
!1234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1209, size: 960, align: 32, elements: !1231)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "t_env", scope: !1164, file: !1127, line: 105, baseType: !1236, size: 64, align: 8, offset: 842176)
!1236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 64, align: 8, elements: !1237)
!1237 = !{!1222}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "t_env_num_env_old", scope: !1164, file: !1127, line: 107, baseType: !986, size: 8, align: 8, offset: 842240)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "t_q", scope: !1164, file: !1127, line: 109, baseType: !1240, size: 24, align: 8, offset: 842248)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 24, align: 8, elements: !1241)
!1241 = !{!1232}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexnoise", scope: !1164, file: !1127, line: 110, baseType: !985, size: 32, align: 32, offset: 842272)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexsine", scope: !1164, file: !1127, line: 111, baseType: !985, size: 32, align: 32, offset: 842304)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !1128, file: !1127, line: 167, baseType: !1245, size: 1072896, align: 128, offset: 1685760)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSContext", file: !1246, line: 79, baseType: !1247)
!1246 = !DIFile(filename: "libavcodec/aacps.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSContext", file: !1246, line: 41, size: 1072896, align: 128, elements: !1248)
!1248 = !{!1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1265, !1271, !1272, !1273, !1274, !1275, !1276, !1280, !1285, !1290, !1293, !1294, !1295, !1298, !1299, !1300, !1301, !1304, !1305, !1307, !1308}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1247, file: !1246, line: 42, baseType: !958, size: 32, align: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "enable_iid", scope: !1247, file: !1246, line: 43, baseType: !958, size: 32, align: 32, offset: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "iid_quant", scope: !1247, file: !1246, line: 44, baseType: !958, size: 32, align: 32, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "nr_iid_par", scope: !1247, file: !1246, line: 45, baseType: !958, size: 32, align: 32, offset: 96)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ipdopd_par", scope: !1247, file: !1246, line: 46, baseType: !958, size: 32, align: 32, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "enable_icc", scope: !1247, file: !1246, line: 47, baseType: !958, size: 32, align: 32, offset: 160)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "icc_mode", scope: !1247, file: !1246, line: 48, baseType: !958, size: 32, align: 32, offset: 192)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "nr_icc_par", scope: !1247, file: !1246, line: 49, baseType: !958, size: 32, align: 32, offset: 224)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ext", scope: !1247, file: !1246, line: 50, baseType: !958, size: 32, align: 32, offset: 256)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "frame_class", scope: !1247, file: !1246, line: 51, baseType: !958, size: 32, align: 32, offset: 288)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "num_env_old", scope: !1247, file: !1246, line: 52, baseType: !958, size: 32, align: 32, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "num_env", scope: !1247, file: !1246, line: 53, baseType: !958, size: 32, align: 32, offset: 352)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ipdopd", scope: !1247, file: !1246, line: 54, baseType: !958, size: 32, align: 32, offset: 384)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "border_position", scope: !1247, file: !1246, line: 55, baseType: !1263, size: 192, align: 32, offset: 416)
!1263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 192, align: 32, elements: !1264)
!1264 = !{!1226}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "iid_par", scope: !1247, file: !1246, line: 56, baseType: !1266, size: 1360, align: 8, offset: 608)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1267, size: 1360, align: 8, elements: !1269)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !984, line: 36, baseType: !1268)
!1268 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1269 = !{!1155, !1270}
!1270 = !DISubrange(count: 34)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "icc_par", scope: !1247, file: !1246, line: 57, baseType: !1266, size: 1360, align: 8, offset: 1968)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_par", scope: !1247, file: !1246, line: 59, baseType: !1266, size: 1360, align: 8, offset: 3328)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "opd_par", scope: !1247, file: !1246, line: 60, baseType: !1266, size: 1360, align: 8, offset: 4688)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands", scope: !1247, file: !1246, line: 61, baseType: !958, size: 32, align: 32, offset: 6048)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands_old", scope: !1247, file: !1246, line: 62, baseType: !958, size: 32, align: 32, offset: 6080)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1247, file: !1246, line: 64, baseType: !1277, size: 14080, align: 32, offset: 6144)
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 14080, align: 32, elements: !1278)
!1278 = !{!1155, !1279, !964}
!1279 = !DISubrange(count: 44)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1247, file: !1246, line: 65, baseType: !1281, size: 267904, align: 32, offset: 20224)
!1281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 267904, align: 32, elements: !1282)
!1282 = !{!1283, !1284, !964}
!1283 = !DISubrange(count: 91)
!1284 = !DISubrange(count: 46)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "ap_delay", scope: !1247, file: !1246, line: 66, baseType: !1286, size: 355200, align: 32, offset: 288128)
!1286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 355200, align: 32, elements: !1287)
!1287 = !{!1288, !1232, !1289, !964}
!1288 = !DISubrange(count: 50)
!1289 = !DISubrange(count: 37)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_nrg", scope: !1247, file: !1246, line: 67, baseType: !1291, size: 1088, align: 32, offset: 643328)
!1291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 1088, align: 32, elements: !1292)
!1292 = !{!1270}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "power_smooth", scope: !1247, file: !1246, line: 68, baseType: !1291, size: 1088, align: 32, offset: 644480)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_diff_smooth", scope: !1247, file: !1246, line: 69, baseType: !1291, size: 1088, align: 32, offset: 645632)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "H11", scope: !1247, file: !1246, line: 70, baseType: !1296, size: 13056, align: 32, offset: 646784)
!1296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 13056, align: 32, elements: !1297)
!1297 = !{!964, !1226, !1270}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "H12", scope: !1247, file: !1246, line: 71, baseType: !1296, size: 13056, align: 32, offset: 659840)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "H21", scope: !1247, file: !1246, line: 72, baseType: !1296, size: 13056, align: 32, offset: 672896)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "H22", scope: !1247, file: !1246, line: 73, baseType: !1296, size: 13056, align: 32, offset: 685952)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "Lbuf", scope: !1247, file: !1246, line: 74, baseType: !1302, size: 186368, align: 32, offset: 699008)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 186368, align: 32, elements: !1303)
!1303 = !{!1283, !963, !964}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "Rbuf", scope: !1247, file: !1246, line: 75, baseType: !1302, size: 186368, align: 32, offset: 885376)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "opd_hist", scope: !1247, file: !1246, line: 76, baseType: !1306, size: 272, align: 8, offset: 1071744)
!1306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1267, size: 272, align: 8, elements: !1292)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_hist", scope: !1247, file: !1246, line: 77, baseType: !1306, size: 272, align: 8, offset: 1072016)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !1247, file: !1246, line: 78, baseType: !1309, size: 512, align: 64, offset: 1072320)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSDSPContext", file: !1310, line: 52, baseType: !1311)
!1310 = !DIFile(filename: "libavcodec/aacpsdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSDSPContext", file: !1310, line: 32, size: 512, align: 64, elements: !1312)
!1312 = !{!1313, !1317, !1323, !1332, !1342, !1346, !1354}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "add_squares", scope: !1311, file: !1310, line: 33, baseType: !1314, size: 64, align: 64)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64, align: 64)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{null, !955, !970, !958}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "mul_pair_single", scope: !1311, file: !1310, line: 34, baseType: !1318, size: 64, align: 64, offset: 64)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64, align: 64)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{null, !1321, !1321, !955, !958}
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64, align: 64)
!1322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 64, align: 32, elements: !972)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis", scope: !1311, file: !1310, line: 36, baseType: !1324, size: 64, align: 64, offset: 128)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64, align: 64)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{null, !1321, !1321, !1327, !1330, !958}
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64, align: 64)
!1328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 512, align: 32, elements: !1329)
!1329 = !{!1222, !964}
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1331, line: 149, baseType: !993)
!1331 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis_ileave", scope: !1311, file: !1310, line: 39, baseType: !1333, size: 64, align: 64, offset: 192)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64, align: 64)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{null, !1336, !1339, !958, !958}
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64, align: 64)
!1337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 2048, align: 32, elements: !1338)
!1338 = !{!963, !964}
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64, align: 64)
!1340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 77824, align: 32, elements: !1341)
!1341 = !{!1206, !976}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_synthesis_deint", scope: !1311, file: !1310, line: 41, baseType: !1343, size: 64, align: 64, offset: 256)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64, align: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{null, !1339, !1336, !958, !958}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "decorrelate", scope: !1311, file: !1310, line: 43, baseType: !1347, size: 64, align: 64, offset: 320)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64, align: 64)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{null, !1321, !1321, !1350, !1353, !970, !1353, !956, !958}
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64, align: 64)
!1351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 2368, align: 32, elements: !1352)
!1352 = !{!1289, !964}
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64, align: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_interpolate", scope: !1311, file: !1310, line: 49, baseType: !1355, size: 128, align: 64, offset: 384)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 128, align: 64, elements: !972)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64, align: 64)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{null, !1321, !1321, !1359, !1359, !958}
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64, align: 64)
!1360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 128, align: 32, elements: !1361)
!1361 = !{!1362}
!1362 = !DISubrange(count: 4)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !1128, file: !1127, line: 169, baseType: !1157, size: 64, align: 32, offset: 2758656)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "n_q", scope: !1128, file: !1127, line: 171, baseType: !1153, size: 32, align: 32, offset: 2758720)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "n_lim", scope: !1128, file: !1127, line: 173, baseType: !1153, size: 32, align: 32, offset: 2758752)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "f_master", scope: !1128, file: !1127, line: 175, baseType: !1367, size: 784, align: 16, offset: 2758784)
!1367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1099, size: 784, align: 16, elements: !1082)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelow", scope: !1128, file: !1127, line: 177, baseType: !1369, size: 400, align: 16, offset: 2759568)
!1369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1099, size: 400, align: 16, elements: !1101)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablehigh", scope: !1128, file: !1127, line: 179, baseType: !1367, size: 784, align: 16, offset: 2759968)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablenoise", scope: !1128, file: !1127, line: 181, baseType: !1372, size: 96, align: 16, offset: 2760752)
!1372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1099, size: 96, align: 16, elements: !1264)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelim", scope: !1128, file: !1127, line: 183, baseType: !1374, size: 480, align: 16, offset: 2760848)
!1374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1099, size: 480, align: 16, elements: !1375)
!1375 = !{!1376}
!1376 = !DISubrange(count: 30)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "num_patches", scope: !1128, file: !1127, line: 184, baseType: !1153, size: 32, align: 32, offset: 2761344)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "patch_num_subbands", scope: !1128, file: !1127, line: 185, baseType: !1379, size: 48, align: 8, offset: 2761376)
!1379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 48, align: 8, elements: !1264)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "patch_start_subband", scope: !1128, file: !1127, line: 186, baseType: !1379, size: 48, align: 8, offset: 2761424)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "X_low", scope: !1128, file: !1127, line: 188, baseType: !1382, size: 81920, align: 32, offset: 2761472)
!1382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 81920, align: 32, elements: !1383)
!1383 = !{!963, !968, !964}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "X_high", scope: !1128, file: !1127, line: 190, baseType: !1385, size: 163840, align: 32, offset: 2843392)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 163840, align: 32, elements: !1386)
!1386 = !{!976, !968, !964}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "X", scope: !1128, file: !1127, line: 192, baseType: !1388, size: 311296, align: 32, offset: 3007232)
!1388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 311296, align: 32, elements: !1389)
!1389 = !{!964, !964, !1206, !976}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "alpha0", scope: !1128, file: !1127, line: 194, baseType: !1391, size: 4096, align: 32, offset: 3318528)
!1391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 4096, align: 32, elements: !975)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "alpha1", scope: !1128, file: !1127, line: 196, baseType: !1391, size: 4096, align: 32, offset: 3322624)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "e_origmapped", scope: !1128, file: !1127, line: 198, baseType: !1394, size: 21504, align: 32, offset: 3326720)
!1394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1209, size: 21504, align: 32, elements: !1395)
!1395 = !{!1172, !1184}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "q_mapped", scope: !1128, file: !1127, line: 200, baseType: !1394, size: 21504, align: 32, offset: 3348224)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "s_mapped", scope: !1128, file: !1127, line: 202, baseType: !1398, size: 2688, align: 8, offset: 3369728)
!1398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 2688, align: 8, elements: !1395)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "e_curr", scope: !1128, file: !1127, line: 204, baseType: !1394, size: 21504, align: 32, offset: 3372416)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "q_m", scope: !1128, file: !1127, line: 206, baseType: !1394, size: 21504, align: 32, offset: 3393920)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "s_m", scope: !1128, file: !1127, line: 208, baseType: !1394, size: 21504, align: 32, offset: 3415424)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1128, file: !1127, line: 209, baseType: !1394, size: 21504, align: 32, offset: 3436928)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_filter_scratch", scope: !1128, file: !1127, line: 210, baseType: !1404, size: 10240, align: 32, offset: 3458560)
!1404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 10240, align: 32, elements: !1405)
!1405 = !{!1155, !976}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ana", scope: !1128, file: !1127, line: 211, baseType: !1407, size: 896, align: 64, offset: 3468800)
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !919, line: 67, baseType: !1408)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !919, line: 88, size: 896, align: 64, elements: !1409)
!1409 = !{!1410, !1411, !1412, !1414, !1422, !1423, !1424, !1426, !1427, !1432, !1433, !1439, !1440, !1441, !1447, !1448, !1449}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1408, file: !919, line: 89, baseType: !958, size: 32, align: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1408, file: !919, line: 90, baseType: !958, size: 32, align: 32, offset: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1408, file: !919, line: 91, baseType: !1413, size: 64, align: 64, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64, align: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1408, file: !919, line: 92, baseType: !1415, size: 64, align: 64, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64, align: 64)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !919, line: 64, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !919, line: 62, size: 64, align: 32, elements: !1418)
!1418 = !{!1419, !1421}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !1417, file: !919, line: 63, baseType: !1420, size: 32, align: 32)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !919, line: 52, baseType: !994)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1417, file: !919, line: 63, baseType: !1420, size: 32, align: 32, offset: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1408, file: !919, line: 93, baseType: !958, size: 32, align: 32, offset: 192)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1408, file: !919, line: 94, baseType: !958, size: 32, align: 32, offset: 224)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1408, file: !919, line: 96, baseType: !1425, size: 64, align: 64, offset: 256)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64, align: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1408, file: !919, line: 97, baseType: !1425, size: 64, align: 64, offset: 320)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1408, file: !919, line: 101, baseType: !1428, size: 64, align: 64, offset: 384)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64, align: 64)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{null, !1431, !1415}
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64, align: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1408, file: !919, line: 106, baseType: !1428, size: 64, align: 64, offset: 448)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1408, file: !919, line: 107, baseType: !1434, size: 64, align: 64, offset: 512)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64, align: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{null, !1431, !1425, !1437}
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64, align: 64)
!1438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1420)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1408, file: !919, line: 108, baseType: !1434, size: 64, align: 64, offset: 576)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1408, file: !919, line: 109, baseType: !1434, size: 64, align: 64, offset: 640)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1408, file: !919, line: 110, baseType: !1442, size: 64, align: 64, offset: 704)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64, align: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{null, !1431, !1445, !1437}
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64, align: 64)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !919, line: 66, baseType: !958)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1408, file: !919, line: 111, baseType: !918, size: 32, align: 32, offset: 768)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1408, file: !919, line: 112, baseType: !924, size: 32, align: 32, offset: 800)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1408, file: !919, line: 113, baseType: !1450, size: 64, align: 64, offset: 832)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64, align: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !1128, file: !1127, line: 212, baseType: !1407, size: 896, align: 64, offset: 3469696)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !1128, file: !1127, line: 213, baseType: !1453, size: 896, align: 64, offset: 3470592)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRDSPContext", file: !1454, line: 45, baseType: !1455)
!1454 = !DIFile(filename: "libavcodec/sbrdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRDSPContext", file: !1454, line: 28, size: 896, align: 64, elements: !1456)
!1456 = !{!1457, !1461, !1465, !1466, !1467, !1471, !1475, !1479, !1486, !1490, !1497}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "sum64x5", scope: !1455, file: !1454, line: 29, baseType: !1458, size: 64, align: 64)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64, align: 64)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{null, !955}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "sum_square", scope: !1455, file: !1454, line: 30, baseType: !1462, size: 64, align: 64, offset: 64)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64, align: 64)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{!1209, !1321, !958}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "neg_odd_64", scope: !1455, file: !1454, line: 31, baseType: !1458, size: 64, align: 64, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_pre_shuffle", scope: !1455, file: !1454, line: 32, baseType: !1458, size: 64, align: 64, offset: 192)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_post_shuffle", scope: !1455, file: !1454, line: 33, baseType: !1468, size: 64, align: 64, offset: 256)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64, align: 64)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{null, !1321, !1353}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_neg", scope: !1455, file: !1454, line: 34, baseType: !1472, size: 64, align: 64, offset: 320)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64, align: 64)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{null, !955, !1353}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_bfly", scope: !1455, file: !1454, line: 35, baseType: !1476, size: 64, align: 64, offset: 384)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64, align: 64)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{null, !955, !1353, !1353}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "autocorrelate", scope: !1455, file: !1454, line: 36, baseType: !1480, size: 64, align: 64, offset: 448)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64, align: 64)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{null, !970, !1483}
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64, align: 64)
!1484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1209, size: 256, align: 32, elements: !1485)
!1485 = !{!964, !964}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "hf_gen", scope: !1455, file: !1454, line: 37, baseType: !1487, size: 64, align: 64, offset: 512)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64, align: 64)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{null, !1321, !970, !1353, !1353, !956, !958, !958}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "hf_g_filt", scope: !1455, file: !1454, line: 40, baseType: !1491, size: 64, align: 64, offset: 576)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64, align: 64)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{null, !1321, !965, !1494, !958, !1496}
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64, align: 64)
!1495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1209)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !984, line: 119, baseType: !993)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "hf_apply_noise", scope: !1455, file: !1454, line: 42, baseType: !1498, size: 256, align: 64, offset: 640)
!1498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1499, size: 256, align: 64, elements: !1361)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64, align: 64)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{null, !1321, !1494, !1494, !958, !958, !958}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1128, file: !1127, line: 214, baseType: !1503, size: 256, align: 64, offset: 3471488)
!1503 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACSBRContext", file: !1127, line: 134, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACSBRContext", file: !1127, line: 120, size: 256, align: 64, elements: !1505)
!1505 = !{!1506, !2511, !2517, !2521}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_lf_gen", scope: !1504, file: !1127, line: 121, baseType: !1507, size: 64, align: 64)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64, align: 64)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!958, !1510, !1125, !2509, !959, !958}
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64, align: 64)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACContext", file: !1127, line: 37, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACContext", file: !888, line: 293, size: 61952, align: 256, elements: !1513)
!1513 = !{!1514, !1557, !2229, !2230, !2231, !2248, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2445, !2446, !2449, !2450, !2451, !2453, !2482, !2483, !2484, !2485, !2489, !2490, !2496, !2500, !2501, !2505}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1512, file: !888, line: 294, baseType: !1515, size: 64, align: 64)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64, align: 64)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !1518)
!1518 = !{!1519, !1523, !1527, !1531, !1532, !1533, !1534, !1538, !1544, !1546, !1550}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1517, file: !4, line: 72, baseType: !1520, size: 64, align: 64)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64, align: 64)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!1522 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1517, file: !4, line: 78, baseType: !1524, size: 64, align: 64, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64, align: 64)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!1520, !969}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1517, file: !4, line: 85, baseType: !1528, size: 64, align: 64, offset: 128)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64, align: 64)
!1529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1530)
!1530 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1517, file: !4, line: 93, baseType: !958, size: 32, align: 32, offset: 192)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1517, file: !4, line: 99, baseType: !958, size: 32, align: 32, offset: 224)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1517, file: !4, line: 108, baseType: !958, size: 32, align: 32, offset: 256)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1517, file: !4, line: 113, baseType: !1535, size: 64, align: 64, offset: 320)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64, align: 64)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{!969, !969, !969}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1517, file: !4, line: 123, baseType: !1539, size: 64, align: 64, offset: 384)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64, align: 64)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!1542, !1542}
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64, align: 64)
!1543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1517)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1517, file: !4, line: 130, baseType: !1545, size: 32, align: 32, offset: 448)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1517, file: !4, line: 136, baseType: !1547, size: 64, align: 64, offset: 512)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64, align: 64)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!1545, !969}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1517, file: !4, line: 142, baseType: !1551, size: 64, align: 64, offset: 576)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64, align: 64)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!958, !1554, !969, !1520, !958}
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64, align: 64)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64, align: 64)
!1556 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1512, file: !888, line: 295, baseType: !1558, size: 64, align: 64, offset: 64)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64, align: 64)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !1560)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !1561)
!1561 = !{!1562, !1565, !1566, !1567, !1828, !1829, !1830, !1831, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1984, !1988, !1989, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2167, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1560, file: !35, line: 1561, baseType: !1563, size: 64, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64, align: 64)
!1564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1516)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1560, file: !35, line: 1562, baseType: !958, size: 32, align: 32, offset: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1560, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1560, file: !35, line: 1565, baseType: !1568, size: 64, align: 64, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64, align: 64)
!1569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1570)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1571)
!1571 = !{!1572, !1573, !1574, !1575, !1576, !1577, !1586, !1589, !1592, !1595, !1600, !1601, !1602, !1610, !1611, !1612, !1614, !1618, !1624, !1634, !1638, !1639, !1681, !1799, !1803, !1804, !1808, !1812, !1817, !1821, !1822, !1823}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1570, file: !35, line: 3475, baseType: !1520, size: 64, align: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1570, file: !35, line: 3480, baseType: !1520, size: 64, align: 64, offset: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1570, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1570, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1570, file: !35, line: 3487, baseType: !958, size: 32, align: 32, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1570, file: !35, line: 3488, baseType: !1578, size: 64, align: 64, offset: 256)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64, align: 64)
!1579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1580)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1581, line: 61, baseType: !1582)
!1581 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1581, line: 58, size: 64, align: 32, elements: !1583)
!1583 = !{!1584, !1585}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1582, file: !1581, line: 59, baseType: !958, size: 32, align: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1582, file: !1581, line: 60, baseType: !958, size: 32, align: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1570, file: !35, line: 3489, baseType: !1587, size: 64, align: 64, offset: 320)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64, align: 64)
!1588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1570, file: !35, line: 3490, baseType: !1590, size: 64, align: 64, offset: 384)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64, align: 64)
!1591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !958)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1570, file: !35, line: 3491, baseType: !1593, size: 64, align: 64, offset: 448)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64, align: 64)
!1594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1570, file: !35, line: 3492, baseType: !1596, size: 64, align: 64, offset: 512)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64, align: 64)
!1597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1598)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !984, line: 55, baseType: !1599)
!1599 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1570, file: !35, line: 3493, baseType: !986, size: 8, align: 8, offset: 576)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1570, file: !35, line: 3494, baseType: !1563, size: 64, align: 64, offset: 640)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1570, file: !35, line: 3495, baseType: !1603, size: 64, align: 64, offset: 704)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64, align: 64)
!1604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1605)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1606)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1607)
!1607 = !{!1608, !1609}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1606, file: !35, line: 3402, baseType: !958, size: 32, align: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1606, file: !35, line: 3403, baseType: !1520, size: 64, align: 64, offset: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1570, file: !35, line: 3507, baseType: !1520, size: 64, align: 64, offset: 768)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1570, file: !35, line: 3516, baseType: !958, size: 32, align: 32, offset: 832)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1570, file: !35, line: 3517, baseType: !1613, size: 64, align: 64, offset: 896)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64, align: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1570, file: !35, line: 3527, baseType: !1615, size: 64, align: 64, offset: 960)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64, align: 64)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!958, !1558}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1570, file: !35, line: 3535, baseType: !1619, size: 64, align: 64, offset: 1024)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64, align: 64)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!958, !1558, !1622}
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64, align: 64)
!1623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1559)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1570, file: !35, line: 3541, baseType: !1625, size: 64, align: 64, offset: 1088)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64, align: 64)
!1626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1629, line: 223, size: 128, align: 64, elements: !1630)
!1629 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1630 = !{!1631, !1633}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1628, file: !1629, line: 224, baseType: !1632, size: 64, align: 64)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64, align: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1628, file: !1629, line: 225, baseType: !1632, size: 64, align: 64, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1570, file: !35, line: 3549, baseType: !1635, size: 64, align: 64, offset: 1152)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64, align: 64)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{null, !1613}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1570, file: !35, line: 3551, baseType: !1615, size: 64, align: 64, offset: 1216)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1570, file: !35, line: 3552, baseType: !1640, size: 64, align: 64, offset: 1280)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64, align: 64)
!1641 = !DISubroutineType(types: !1642)
!1642 = !{!958, !1558, !1643, !958, !1644}
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64, align: 64)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64, align: 64)
!1645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1646)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1647)
!1647 = !{!1648, !1649, !1650, !1651, !1652, !1680}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1646, file: !35, line: 3921, baseType: !1099, size: 16, align: 16)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1646, file: !35, line: 3922, baseType: !983, size: 32, align: 32, offset: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1646, file: !35, line: 3923, baseType: !983, size: 32, align: 32, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1646, file: !35, line: 3924, baseType: !985, size: 32, align: 32, offset: 96)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1646, file: !35, line: 3925, baseType: !1653, size: 64, align: 64, offset: 128)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64, align: 64)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64, align: 64)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1656)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1657)
!1657 = !{!1658, !1659, !1660, !1661, !1662, !1663, !1671, !1673, !1675, !1676, !1678, !1679}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1656, file: !35, line: 3886, baseType: !958, size: 32, align: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1656, file: !35, line: 3887, baseType: !958, size: 32, align: 32, offset: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1656, file: !35, line: 3888, baseType: !958, size: 32, align: 32, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1656, file: !35, line: 3889, baseType: !958, size: 32, align: 32, offset: 96)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1656, file: !35, line: 3890, baseType: !958, size: 32, align: 32, offset: 128)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1656, file: !35, line: 3897, baseType: !1664, size: 768, align: 64, offset: 192)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1666)
!1666 = !{!1667, !1669}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1665, file: !35, line: 3855, baseType: !1668, size: 512, align: 64)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1643, size: 512, align: 64, elements: !1237)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1665, file: !35, line: 3857, baseType: !1670, size: 256, align: 32, offset: 512)
!1670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 256, align: 32, elements: !1237)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1656, file: !35, line: 3903, baseType: !1672, size: 256, align: 64, offset: 960)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1643, size: 256, align: 64, elements: !1361)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1656, file: !35, line: 3904, baseType: !1674, size: 128, align: 32, offset: 1216)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 128, align: 32, elements: !1361)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1656, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1656, file: !35, line: 3908, baseType: !1677, size: 64, align: 64, offset: 1408)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64, align: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1656, file: !35, line: 3915, baseType: !1677, size: 64, align: 64, offset: 1472)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1656, file: !35, line: 3917, baseType: !958, size: 32, align: 32, offset: 1536)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1646, file: !35, line: 3926, baseType: !992, size: 64, align: 64, offset: 192)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1570, file: !35, line: 3564, baseType: !1682, size: 64, align: 64, offset: 1344)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64, align: 64)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!958, !1558, !1685, !1719, !1798}
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64, align: 64)
!1686 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1688)
!1688 = !{!1689, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1715, !1716, !1717, !1718}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1687, file: !35, line: 1451, baseType: !1690, size: 64, align: 64)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64, align: 64)
!1691 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1692, line: 94, baseType: !1693)
!1692 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1692, line: 81, size: 192, align: 64, elements: !1694)
!1694 = !{!1695, !1699, !1700}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1693, file: !1692, line: 82, baseType: !1696, size: 64, align: 64)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64, align: 64)
!1697 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1692, line: 73, baseType: !1698)
!1698 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1692, line: 73, flags: DIFlagFwdDecl)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1693, file: !1692, line: 89, baseType: !1643, size: 64, align: 64, offset: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1693, file: !1692, line: 93, baseType: !958, size: 32, align: 32, offset: 128)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1687, file: !35, line: 1461, baseType: !992, size: 64, align: 64, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1687, file: !35, line: 1467, baseType: !992, size: 64, align: 64, offset: 128)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1687, file: !35, line: 1468, baseType: !1643, size: 64, align: 64, offset: 192)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1687, file: !35, line: 1469, baseType: !958, size: 32, align: 32, offset: 256)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1687, file: !35, line: 1470, baseType: !958, size: 32, align: 32, offset: 288)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1687, file: !35, line: 1474, baseType: !958, size: 32, align: 32, offset: 320)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1687, file: !35, line: 1479, baseType: !1708, size: 64, align: 64, offset: 384)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64, align: 64)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1711)
!1711 = !{!1712, !1713, !1714}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1710, file: !35, line: 1412, baseType: !1643, size: 64, align: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1710, file: !35, line: 1413, baseType: !958, size: 32, align: 32, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1710, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1687, file: !35, line: 1480, baseType: !958, size: 32, align: 32, offset: 448)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1687, file: !35, line: 1486, baseType: !992, size: 64, align: 64, offset: 512)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1687, file: !35, line: 1488, baseType: !992, size: 64, align: 64, offset: 576)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1687, file: !35, line: 1497, baseType: !992, size: 64, align: 64, offset: 640)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64, align: 64)
!1720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1721)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1722)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1723)
!1723 = !{!1724, !1725, !1726, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1753, !1755, !1756, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1787, !1788, !1789, !1790, !1791, !1792, !1794, !1795, !1796, !1797}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1722, file: !758, line: 282, baseType: !1668, size: 512, align: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1722, file: !758, line: 299, baseType: !1670, size: 256, align: 32, offset: 512)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1722, file: !758, line: 315, baseType: !1727, size: 64, align: 64, offset: 768)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64, align: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1722, file: !758, line: 326, baseType: !958, size: 32, align: 32, offset: 832)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1722, file: !758, line: 326, baseType: !958, size: 32, align: 32, offset: 864)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1722, file: !758, line: 334, baseType: !958, size: 32, align: 32, offset: 896)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1722, file: !758, line: 341, baseType: !958, size: 32, align: 32, offset: 928)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1722, file: !758, line: 346, baseType: !958, size: 32, align: 32, offset: 960)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1722, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1722, file: !758, line: 356, baseType: !1580, size: 64, align: 32, offset: 1024)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1722, file: !758, line: 361, baseType: !992, size: 64, align: 64, offset: 1088)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1722, file: !758, line: 369, baseType: !992, size: 64, align: 64, offset: 1152)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1722, file: !758, line: 377, baseType: !992, size: 64, align: 64, offset: 1216)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1722, file: !758, line: 382, baseType: !958, size: 32, align: 32, offset: 1280)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1722, file: !758, line: 386, baseType: !958, size: 32, align: 32, offset: 1312)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1722, file: !758, line: 391, baseType: !958, size: 32, align: 32, offset: 1344)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1722, file: !758, line: 396, baseType: !969, size: 64, align: 64, offset: 1408)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1722, file: !758, line: 403, baseType: !1743, size: 512, align: 64, offset: 1472)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1598, size: 512, align: 64, elements: !1237)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1722, file: !758, line: 410, baseType: !958, size: 32, align: 32, offset: 1984)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1722, file: !758, line: 415, baseType: !958, size: 32, align: 32, offset: 2016)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1722, file: !758, line: 420, baseType: !958, size: 32, align: 32, offset: 2048)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1722, file: !758, line: 425, baseType: !958, size: 32, align: 32, offset: 2080)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1722, file: !758, line: 435, baseType: !992, size: 64, align: 64, offset: 2112)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1722, file: !758, line: 440, baseType: !958, size: 32, align: 32, offset: 2176)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1722, file: !758, line: 445, baseType: !1598, size: 64, align: 64, offset: 2240)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1722, file: !758, line: 459, baseType: !1752, size: 512, align: 64, offset: 2304)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1690, size: 512, align: 64, elements: !1237)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1722, file: !758, line: 473, baseType: !1754, size: 64, align: 64, offset: 2816)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64, align: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1722, file: !758, line: 477, baseType: !958, size: 32, align: 32, offset: 2880)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1722, file: !758, line: 479, baseType: !1757, size: 64, align: 64, offset: 2944)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64, align: 64)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64, align: 64)
!1759 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1760)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1761)
!1761 = !{!1762, !1763, !1764, !1765, !1770}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1760, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1760, file: !758, line: 203, baseType: !1643, size: 64, align: 64, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1760, file: !758, line: 204, baseType: !958, size: 32, align: 32, offset: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1760, file: !758, line: 205, baseType: !1766, size: 64, align: 64, offset: 192)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64, align: 64)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1768, line: 86, baseType: !1769)
!1768 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1769 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1768, line: 86, flags: DIFlagFwdDecl)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1760, file: !758, line: 206, baseType: !1690, size: 64, align: 64, offset: 256)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1722, file: !758, line: 480, baseType: !958, size: 32, align: 32, offset: 3008)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1722, file: !758, line: 505, baseType: !958, size: 32, align: 32, offset: 3040)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1722, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1722, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1722, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1722, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1722, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1722, file: !758, line: 532, baseType: !992, size: 64, align: 64, offset: 3264)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1722, file: !758, line: 539, baseType: !992, size: 64, align: 64, offset: 3328)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1722, file: !758, line: 547, baseType: !992, size: 64, align: 64, offset: 3392)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1722, file: !758, line: 554, baseType: !1766, size: 64, align: 64, offset: 3456)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1722, file: !758, line: 563, baseType: !958, size: 32, align: 32, offset: 3520)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1722, file: !758, line: 572, baseType: !958, size: 32, align: 32, offset: 3552)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1722, file: !758, line: 581, baseType: !958, size: 32, align: 32, offset: 3584)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1722, file: !758, line: 588, baseType: !1786, size: 64, align: 64, offset: 3648)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64, align: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1722, file: !758, line: 593, baseType: !958, size: 32, align: 32, offset: 3712)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1722, file: !758, line: 596, baseType: !958, size: 32, align: 32, offset: 3744)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1722, file: !758, line: 599, baseType: !1690, size: 64, align: 64, offset: 3776)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1722, file: !758, line: 605, baseType: !1690, size: 64, align: 64, offset: 3840)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1722, file: !758, line: 616, baseType: !1690, size: 64, align: 64, offset: 3904)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1722, file: !758, line: 626, baseType: !1793, size: 64, align: 64, offset: 3968)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1331, line: 216, baseType: !1599)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1722, file: !758, line: 627, baseType: !1793, size: 64, align: 64, offset: 4032)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1722, file: !758, line: 628, baseType: !1793, size: 64, align: 64, offset: 4096)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1722, file: !758, line: 629, baseType: !1793, size: 64, align: 64, offset: 4160)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1722, file: !758, line: 645, baseType: !1690, size: 64, align: 64, offset: 4224)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64, align: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1570, file: !35, line: 3566, baseType: !1800, size: 64, align: 64, offset: 1408)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64, align: 64)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!958, !1558, !969, !1798, !1685}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1570, file: !35, line: 3567, baseType: !1615, size: 64, align: 64, offset: 1472)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1570, file: !35, line: 3576, baseType: !1805, size: 64, align: 64, offset: 1536)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64, align: 64)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{!958, !1558, !1719}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1570, file: !35, line: 3577, baseType: !1809, size: 64, align: 64, offset: 1600)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64, align: 64)
!1810 = !DISubroutineType(types: !1811)
!1811 = !{!958, !1558, !1685}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1570, file: !35, line: 3584, baseType: !1813, size: 64, align: 64, offset: 1664)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64, align: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!958, !1558, !1816}
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64, align: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1570, file: !35, line: 3589, baseType: !1818, size: 64, align: 64, offset: 1728)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64, align: 64)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{null, !1558}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1570, file: !35, line: 3594, baseType: !958, size: 32, align: 32, offset: 1792)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1570, file: !35, line: 3600, baseType: !1520, size: 64, align: 64, offset: 1856)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1570, file: !35, line: 3609, baseType: !1824, size: 64, align: 64, offset: 1920)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64, align: 64)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64, align: 64)
!1826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1827)
!1827 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1560, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1560, file: !35, line: 1581, baseType: !985, size: 32, align: 32, offset: 224)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1560, file: !35, line: 1583, baseType: !969, size: 64, align: 64, offset: 256)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1560, file: !35, line: 1591, baseType: !1832, size: 64, align: 64, offset: 320)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64, align: 64)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1629, line: 129, size: 1664, align: 64, elements: !1834)
!1834 = !{!1835, !1836, !1837, !1838, !1839, !1857, !1858, !1864, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1833, file: !1629, line: 136, baseType: !958, size: 32, align: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1833, file: !1629, line: 151, baseType: !958, size: 32, align: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1833, file: !1629, line: 157, baseType: !958, size: 32, align: 32, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1833, file: !1629, line: 159, baseType: !1816, size: 64, align: 64, offset: 128)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1833, file: !1629, line: 161, baseType: !1840, size: 64, align: 64, offset: 192)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64, align: 64)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1629, line: 117, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1629, line: 100, size: 832, align: 64, elements: !1843)
!1843 = !{!1844, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1842, file: !1629, line: 105, baseType: !1845, size: 256, align: 64)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1846, size: 256, align: 64, elements: !1361)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64, align: 64)
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1692, line: 238, baseType: !1848)
!1848 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1692, line: 238, flags: DIFlagFwdDecl)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1842, file: !1629, line: 110, baseType: !958, size: 32, align: 32, offset: 256)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1842, file: !1629, line: 111, baseType: !958, size: 32, align: 32, offset: 288)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1842, file: !1629, line: 111, baseType: !958, size: 32, align: 32, offset: 320)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1842, file: !1629, line: 112, baseType: !1670, size: 256, align: 32, offset: 352)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1842, file: !1629, line: 113, baseType: !1674, size: 128, align: 32, offset: 608)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1842, file: !1629, line: 114, baseType: !958, size: 32, align: 32, offset: 736)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1842, file: !1629, line: 115, baseType: !958, size: 32, align: 32, offset: 768)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1842, file: !1629, line: 116, baseType: !958, size: 32, align: 32, offset: 800)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1833, file: !1629, line: 163, baseType: !969, size: 64, align: 64, offset: 256)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1833, file: !1629, line: 165, baseType: !1859, size: 128, align: 64, offset: 320)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1629, line: 122, baseType: !1860)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1629, line: 119, size: 128, align: 64, elements: !1861)
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1860, file: !1629, line: 120, baseType: !1685, size: 64, align: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1860, file: !1629, line: 121, baseType: !1816, size: 64, align: 64, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1833, file: !1629, line: 166, baseType: !1865, size: 128, align: 64, offset: 448)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1629, line: 127, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1629, line: 124, size: 128, align: 64, elements: !1867)
!1867 = !{!1868, !1941}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1866, file: !1629, line: 125, baseType: !1869, size: 64, align: 64)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64, align: 64)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64, align: 64)
!1871 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !35, line: 5794, baseType: !1872)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !35, line: 5747, size: 512, align: 64, elements: !1873)
!1873 = !{!1874, !1875, !1899, !1903, !1904, !1938, !1939, !1940}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1872, file: !35, line: 5751, baseType: !1563, size: 64, align: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1872, file: !35, line: 5756, baseType: !1876, size: 64, align: 64, offset: 64)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64, align: 64)
!1877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !35, line: 5796, size: 512, align: 64, elements: !1879)
!1879 = !{!1880, !1881, !1884, !1885, !1886, !1890, !1894, !1898}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1878, file: !35, line: 5797, baseType: !1520, size: 64, align: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1878, file: !35, line: 5804, baseType: !1882, size: 64, align: 64, offset: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64, align: 64)
!1883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1878, file: !35, line: 5815, baseType: !1563, size: 64, align: 64, offset: 128)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1878, file: !35, line: 5825, baseType: !958, size: 32, align: 32, offset: 192)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1878, file: !35, line: 5826, baseType: !1887, size: 64, align: 64, offset: 256)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64, align: 64)
!1888 = !DISubroutineType(types: !1889)
!1889 = !{!958, !1870}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1878, file: !35, line: 5827, baseType: !1891, size: 64, align: 64, offset: 320)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64, align: 64)
!1892 = !DISubroutineType(types: !1893)
!1893 = !{!958, !1870, !1685}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1878, file: !35, line: 5828, baseType: !1895, size: 64, align: 64, offset: 384)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64, align: 64)
!1896 = !DISubroutineType(types: !1897)
!1897 = !{null, !1870}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1878, file: !35, line: 5829, baseType: !1895, size: 64, align: 64, offset: 448)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1872, file: !35, line: 5762, baseType: !1900, size: 64, align: 64, offset: 128)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64, align: 64)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !35, line: 5735, baseType: !1902)
!1902 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !35, line: 5735, flags: DIFlagFwdDecl)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1872, file: !35, line: 5768, baseType: !969, size: 64, align: 64, offset: 192)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1872, file: !35, line: 5775, baseType: !1905, size: 64, align: 64, offset: 256)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64, align: 64)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !35, line: 4085, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !35, line: 3936, size: 1152, align: 64, elements: !1908)
!1908 = !{!1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1907, file: !35, line: 3940, baseType: !24, size: 32, align: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1907, file: !35, line: 3944, baseType: !34, size: 32, align: 32, offset: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1907, file: !35, line: 3948, baseType: !983, size: 32, align: 32, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1907, file: !35, line: 3958, baseType: !1643, size: 64, align: 64, offset: 128)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1907, file: !35, line: 3962, baseType: !958, size: 32, align: 32, offset: 192)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1907, file: !35, line: 3968, baseType: !958, size: 32, align: 32, offset: 224)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1907, file: !35, line: 3973, baseType: !992, size: 64, align: 64, offset: 256)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1907, file: !35, line: 3986, baseType: !958, size: 32, align: 32, offset: 320)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1907, file: !35, line: 3999, baseType: !958, size: 32, align: 32, offset: 352)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1907, file: !35, line: 4004, baseType: !958, size: 32, align: 32, offset: 384)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1907, file: !35, line: 4005, baseType: !958, size: 32, align: 32, offset: 416)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1907, file: !35, line: 4010, baseType: !958, size: 32, align: 32, offset: 448)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1907, file: !35, line: 4011, baseType: !958, size: 32, align: 32, offset: 480)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1907, file: !35, line: 4020, baseType: !1580, size: 64, align: 32, offset: 512)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1907, file: !35, line: 4025, baseType: !858, size: 32, align: 32, offset: 576)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1907, file: !35, line: 4030, baseType: !781, size: 32, align: 32, offset: 608)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1907, file: !35, line: 4031, baseType: !787, size: 32, align: 32, offset: 640)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1907, file: !35, line: 4032, baseType: !805, size: 32, align: 32, offset: 672)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1907, file: !35, line: 4033, baseType: !829, size: 32, align: 32, offset: 704)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1907, file: !35, line: 4034, baseType: !848, size: 32, align: 32, offset: 736)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1907, file: !35, line: 4039, baseType: !958, size: 32, align: 32, offset: 768)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1907, file: !35, line: 4046, baseType: !1598, size: 64, align: 64, offset: 832)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1907, file: !35, line: 4050, baseType: !958, size: 32, align: 32, offset: 896)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1907, file: !35, line: 4054, baseType: !958, size: 32, align: 32, offset: 928)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1907, file: !35, line: 4061, baseType: !958, size: 32, align: 32, offset: 960)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1907, file: !35, line: 4065, baseType: !958, size: 32, align: 32, offset: 992)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1907, file: !35, line: 4073, baseType: !958, size: 32, align: 32, offset: 1024)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1907, file: !35, line: 4080, baseType: !958, size: 32, align: 32, offset: 1056)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1907, file: !35, line: 4084, baseType: !958, size: 32, align: 32, offset: 1088)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1872, file: !35, line: 5781, baseType: !1905, size: 64, align: 64, offset: 320)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1872, file: !35, line: 5787, baseType: !1580, size: 64, align: 32, offset: 384)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1872, file: !35, line: 5793, baseType: !1580, size: 64, align: 32, offset: 448)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1866, file: !1629, line: 126, baseType: !958, size: 32, align: 32, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1833, file: !1629, line: 172, baseType: !1685, size: 64, align: 64, offset: 576)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1833, file: !1629, line: 177, baseType: !1643, size: 64, align: 64, offset: 640)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1833, file: !1629, line: 178, baseType: !985, size: 32, align: 32, offset: 704)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1833, file: !1629, line: 180, baseType: !969, size: 64, align: 64, offset: 768)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1833, file: !1629, line: 185, baseType: !958, size: 32, align: 32, offset: 832)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1833, file: !1629, line: 190, baseType: !969, size: 64, align: 64, offset: 896)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1833, file: !1629, line: 195, baseType: !958, size: 32, align: 32, offset: 960)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1833, file: !1629, line: 200, baseType: !1685, size: 64, align: 64, offset: 1024)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1833, file: !1629, line: 201, baseType: !958, size: 32, align: 32, offset: 1088)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1833, file: !1629, line: 202, baseType: !1816, size: 64, align: 64, offset: 1152)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1833, file: !1629, line: 203, baseType: !958, size: 32, align: 32, offset: 1216)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1833, file: !1629, line: 205, baseType: !958, size: 32, align: 32, offset: 1248)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1833, file: !1629, line: 206, baseType: !958, size: 32, align: 32, offset: 1280)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1833, file: !1629, line: 209, baseType: !1793, size: 64, align: 64, offset: 1344)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1833, file: !1629, line: 212, baseType: !1793, size: 64, align: 64, offset: 1408)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1833, file: !1629, line: 213, baseType: !1816, size: 64, align: 64, offset: 1472)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1833, file: !1629, line: 215, baseType: !958, size: 32, align: 32, offset: 1536)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1833, file: !1629, line: 217, baseType: !958, size: 32, align: 32, offset: 1568)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1833, file: !1629, line: 220, baseType: !958, size: 32, align: 32, offset: 1600)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1560, file: !35, line: 1598, baseType: !969, size: 64, align: 64, offset: 384)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1560, file: !35, line: 1606, baseType: !992, size: 64, align: 64, offset: 448)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1560, file: !35, line: 1614, baseType: !958, size: 32, align: 32, offset: 512)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1560, file: !35, line: 1622, baseType: !958, size: 32, align: 32, offset: 544)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1560, file: !35, line: 1628, baseType: !958, size: 32, align: 32, offset: 576)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1560, file: !35, line: 1636, baseType: !958, size: 32, align: 32, offset: 608)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1560, file: !35, line: 1643, baseType: !958, size: 32, align: 32, offset: 640)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1560, file: !35, line: 1657, baseType: !1643, size: 64, align: 64, offset: 704)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1560, file: !35, line: 1658, baseType: !958, size: 32, align: 32, offset: 768)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1560, file: !35, line: 1679, baseType: !1580, size: 64, align: 32, offset: 800)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1560, file: !35, line: 1688, baseType: !958, size: 32, align: 32, offset: 864)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1560, file: !35, line: 1712, baseType: !958, size: 32, align: 32, offset: 896)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1560, file: !35, line: 1729, baseType: !958, size: 32, align: 32, offset: 928)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1560, file: !35, line: 1729, baseType: !958, size: 32, align: 32, offset: 960)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1560, file: !35, line: 1744, baseType: !958, size: 32, align: 32, offset: 992)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1560, file: !35, line: 1744, baseType: !958, size: 32, align: 32, offset: 1024)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1560, file: !35, line: 1751, baseType: !958, size: 32, align: 32, offset: 1056)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1560, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1560, file: !35, line: 1791, baseType: !1980, size: 64, align: 64, offset: 1152)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64, align: 64)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{null, !1983, !1719, !1798, !958, !958, !958}
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64, align: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1560, file: !35, line: 1808, baseType: !1985, size: 64, align: 64, offset: 1216)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64, align: 64)
!1986 = !DISubroutineType(types: !1987)
!1987 = !{!494, !1983, !1587}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1560, file: !35, line: 1816, baseType: !958, size: 32, align: 32, offset: 1280)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1560, file: !35, line: 1825, baseType: !1990, size: 32, align: 32, offset: 1312)
!1990 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1560, file: !35, line: 1830, baseType: !958, size: 32, align: 32, offset: 1344)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1560, file: !35, line: 1838, baseType: !1990, size: 32, align: 32, offset: 1376)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1560, file: !35, line: 1846, baseType: !958, size: 32, align: 32, offset: 1408)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1560, file: !35, line: 1851, baseType: !958, size: 32, align: 32, offset: 1440)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1560, file: !35, line: 1861, baseType: !1990, size: 32, align: 32, offset: 1472)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1560, file: !35, line: 1868, baseType: !1990, size: 32, align: 32, offset: 1504)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1560, file: !35, line: 1875, baseType: !1990, size: 32, align: 32, offset: 1536)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1560, file: !35, line: 1882, baseType: !1990, size: 32, align: 32, offset: 1568)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1560, file: !35, line: 1889, baseType: !1990, size: 32, align: 32, offset: 1600)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1560, file: !35, line: 1896, baseType: !1990, size: 32, align: 32, offset: 1632)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1560, file: !35, line: 1903, baseType: !1990, size: 32, align: 32, offset: 1664)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1560, file: !35, line: 1910, baseType: !958, size: 32, align: 32, offset: 1696)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1560, file: !35, line: 1915, baseType: !958, size: 32, align: 32, offset: 1728)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1560, file: !35, line: 1926, baseType: !1798, size: 64, align: 64, offset: 1792)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1560, file: !35, line: 1935, baseType: !1580, size: 64, align: 32, offset: 1856)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1560, file: !35, line: 1942, baseType: !958, size: 32, align: 32, offset: 1920)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1560, file: !35, line: 1948, baseType: !958, size: 32, align: 32, offset: 1952)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1560, file: !35, line: 1954, baseType: !958, size: 32, align: 32, offset: 1984)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1560, file: !35, line: 1960, baseType: !958, size: 32, align: 32, offset: 2016)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1560, file: !35, line: 1984, baseType: !958, size: 32, align: 32, offset: 2048)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1560, file: !35, line: 1991, baseType: !958, size: 32, align: 32, offset: 2080)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1560, file: !35, line: 1996, baseType: !958, size: 32, align: 32, offset: 2112)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1560, file: !35, line: 2004, baseType: !958, size: 32, align: 32, offset: 2144)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1560, file: !35, line: 2011, baseType: !958, size: 32, align: 32, offset: 2176)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1560, file: !35, line: 2018, baseType: !958, size: 32, align: 32, offset: 2208)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1560, file: !35, line: 2027, baseType: !958, size: 32, align: 32, offset: 2240)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1560, file: !35, line: 2034, baseType: !958, size: 32, align: 32, offset: 2272)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1560, file: !35, line: 2044, baseType: !958, size: 32, align: 32, offset: 2304)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1560, file: !35, line: 2054, baseType: !1413, size: 64, align: 64, offset: 2368)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1560, file: !35, line: 2061, baseType: !1413, size: 64, align: 64, offset: 2432)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1560, file: !35, line: 2066, baseType: !958, size: 32, align: 32, offset: 2496)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1560, file: !35, line: 2070, baseType: !958, size: 32, align: 32, offset: 2528)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1560, file: !35, line: 2078, baseType: !958, size: 32, align: 32, offset: 2560)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1560, file: !35, line: 2085, baseType: !958, size: 32, align: 32, offset: 2592)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1560, file: !35, line: 2092, baseType: !958, size: 32, align: 32, offset: 2624)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1560, file: !35, line: 2099, baseType: !958, size: 32, align: 32, offset: 2656)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1560, file: !35, line: 2106, baseType: !958, size: 32, align: 32, offset: 2688)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1560, file: !35, line: 2113, baseType: !958, size: 32, align: 32, offset: 2720)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1560, file: !35, line: 2120, baseType: !958, size: 32, align: 32, offset: 2752)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1560, file: !35, line: 2125, baseType: !958, size: 32, align: 32, offset: 2784)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1560, file: !35, line: 2133, baseType: !958, size: 32, align: 32, offset: 2816)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1560, file: !35, line: 2140, baseType: !958, size: 32, align: 32, offset: 2848)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1560, file: !35, line: 2145, baseType: !958, size: 32, align: 32, offset: 2880)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1560, file: !35, line: 2153, baseType: !958, size: 32, align: 32, offset: 2912)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1560, file: !35, line: 2158, baseType: !958, size: 32, align: 32, offset: 2944)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1560, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1560, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1560, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1560, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1560, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1560, file: !35, line: 2203, baseType: !958, size: 32, align: 32, offset: 3136)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1560, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1560, file: !35, line: 2212, baseType: !958, size: 32, align: 32, offset: 3200)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1560, file: !35, line: 2213, baseType: !958, size: 32, align: 32, offset: 3232)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1560, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1560, file: !35, line: 2232, baseType: !958, size: 32, align: 32, offset: 3296)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1560, file: !35, line: 2243, baseType: !958, size: 32, align: 32, offset: 3328)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1560, file: !35, line: 2249, baseType: !958, size: 32, align: 32, offset: 3360)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1560, file: !35, line: 2256, baseType: !958, size: 32, align: 32, offset: 3392)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1560, file: !35, line: 2263, baseType: !1598, size: 64, align: 64, offset: 3456)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1560, file: !35, line: 2270, baseType: !1598, size: 64, align: 64, offset: 3520)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1560, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1560, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1560, file: !35, line: 2367, baseType: !2055, size: 64, align: 64, offset: 3648)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64, align: 64)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{!958, !1983, !1816, !958}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1560, file: !35, line: 2383, baseType: !958, size: 32, align: 32, offset: 3712)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1560, file: !35, line: 2386, baseType: !1990, size: 32, align: 32, offset: 3744)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1560, file: !35, line: 2387, baseType: !1990, size: 32, align: 32, offset: 3776)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1560, file: !35, line: 2394, baseType: !958, size: 32, align: 32, offset: 3808)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1560, file: !35, line: 2401, baseType: !958, size: 32, align: 32, offset: 3840)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1560, file: !35, line: 2408, baseType: !958, size: 32, align: 32, offset: 3872)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1560, file: !35, line: 2415, baseType: !958, size: 32, align: 32, offset: 3904)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1560, file: !35, line: 2422, baseType: !958, size: 32, align: 32, offset: 3936)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1560, file: !35, line: 2423, baseType: !2067, size: 64, align: 64, offset: 3968)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64, align: 64)
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !2069)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !2070)
!2070 = !{!2071, !2072, !2073, !2074}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2069, file: !35, line: 827, baseType: !958, size: 32, align: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2069, file: !35, line: 828, baseType: !958, size: 32, align: 32, offset: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !2069, file: !35, line: 829, baseType: !958, size: 32, align: 32, offset: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !2069, file: !35, line: 830, baseType: !1990, size: 32, align: 32, offset: 96)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1560, file: !35, line: 2430, baseType: !992, size: 64, align: 64, offset: 4032)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1560, file: !35, line: 2437, baseType: !992, size: 64, align: 64, offset: 4096)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1560, file: !35, line: 2444, baseType: !1990, size: 32, align: 32, offset: 4160)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1560, file: !35, line: 2451, baseType: !1990, size: 32, align: 32, offset: 4192)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1560, file: !35, line: 2458, baseType: !958, size: 32, align: 32, offset: 4224)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1560, file: !35, line: 2469, baseType: !958, size: 32, align: 32, offset: 4256)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1560, file: !35, line: 2475, baseType: !958, size: 32, align: 32, offset: 4288)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1560, file: !35, line: 2481, baseType: !958, size: 32, align: 32, offset: 4320)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1560, file: !35, line: 2485, baseType: !958, size: 32, align: 32, offset: 4352)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1560, file: !35, line: 2489, baseType: !958, size: 32, align: 32, offset: 4384)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1560, file: !35, line: 2493, baseType: !958, size: 32, align: 32, offset: 4416)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1560, file: !35, line: 2501, baseType: !958, size: 32, align: 32, offset: 4448)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1560, file: !35, line: 2506, baseType: !958, size: 32, align: 32, offset: 4480)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1560, file: !35, line: 2510, baseType: !958, size: 32, align: 32, offset: 4512)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1560, file: !35, line: 2514, baseType: !992, size: 64, align: 64, offset: 4544)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1560, file: !35, line: 2528, baseType: !2091, size: 64, align: 64, offset: 4608)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64, align: 64)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{null, !1983, !969, !958, !958}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1560, file: !35, line: 2534, baseType: !958, size: 32, align: 32, offset: 4672)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1560, file: !35, line: 2545, baseType: !958, size: 32, align: 32, offset: 4704)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1560, file: !35, line: 2547, baseType: !958, size: 32, align: 32, offset: 4736)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1560, file: !35, line: 2549, baseType: !958, size: 32, align: 32, offset: 4768)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1560, file: !35, line: 2551, baseType: !958, size: 32, align: 32, offset: 4800)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1560, file: !35, line: 2553, baseType: !958, size: 32, align: 32, offset: 4832)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1560, file: !35, line: 2555, baseType: !958, size: 32, align: 32, offset: 4864)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1560, file: !35, line: 2557, baseType: !958, size: 32, align: 32, offset: 4896)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1560, file: !35, line: 2559, baseType: !958, size: 32, align: 32, offset: 4928)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1560, file: !35, line: 2563, baseType: !958, size: 32, align: 32, offset: 4960)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1560, file: !35, line: 2571, baseType: !1677, size: 64, align: 64, offset: 4992)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1560, file: !35, line: 2579, baseType: !1677, size: 64, align: 64, offset: 5056)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1560, file: !35, line: 2586, baseType: !958, size: 32, align: 32, offset: 5120)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1560, file: !35, line: 2615, baseType: !958, size: 32, align: 32, offset: 5152)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1560, file: !35, line: 2627, baseType: !958, size: 32, align: 32, offset: 5184)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1560, file: !35, line: 2637, baseType: !958, size: 32, align: 32, offset: 5216)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1560, file: !35, line: 2681, baseType: !958, size: 32, align: 32, offset: 5248)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1560, file: !35, line: 2709, baseType: !992, size: 64, align: 64, offset: 5312)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1560, file: !35, line: 2716, baseType: !2113, size: 64, align: 64, offset: 5376)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64, align: 64)
!2114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2115)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !2116)
!2116 = !{!2117, !2118, !2119, !2120, !2121, !2122, !2123, !2127, !2131, !2132, !2133, !2134, !2140, !2141, !2142, !2143, !2144}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2115, file: !35, line: 3642, baseType: !1520, size: 64, align: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2115, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2115, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !2115, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !2115, file: !35, line: 3669, baseType: !958, size: 32, align: 32, offset: 160)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !2115, file: !35, line: 3682, baseType: !1813, size: 64, align: 64, offset: 192)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2115, file: !35, line: 3698, baseType: !2124, size: 64, align: 64, offset: 256)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64, align: 64)
!2125 = !DISubroutineType(types: !2126)
!2126 = !{!958, !1558, !1632, !983}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !2115, file: !35, line: 3712, baseType: !2128, size: 64, align: 64, offset: 320)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64, align: 64)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{!958, !1558, !958, !1632, !983}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !2115, file: !35, line: 3726, baseType: !2124, size: 64, align: 64, offset: 384)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2115, file: !35, line: 3737, baseType: !1615, size: 64, align: 64, offset: 448)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !2115, file: !35, line: 3746, baseType: !958, size: 32, align: 32, offset: 512)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !2115, file: !35, line: 3757, baseType: !2135, size: 64, align: 64, offset: 576)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64, align: 64)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{null, !2138}
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64, align: 64)
!2139 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2115, file: !35, line: 3766, baseType: !1615, size: 64, align: 64, offset: 640)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2115, file: !35, line: 3774, baseType: !1615, size: 64, align: 64, offset: 704)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2115, file: !35, line: 3780, baseType: !958, size: 32, align: 32, offset: 768)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !2115, file: !35, line: 3785, baseType: !958, size: 32, align: 32, offset: 800)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !2115, file: !35, line: 3795, baseType: !2145, size: 64, align: 64, offset: 832)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64, align: 64)
!2146 = !DISubroutineType(types: !2147)
!2147 = !{!958, !1558, !1690}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1560, file: !35, line: 2728, baseType: !969, size: 64, align: 64, offset: 5440)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1560, file: !35, line: 2735, baseType: !1743, size: 512, align: 64, offset: 5504)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1560, file: !35, line: 2742, baseType: !958, size: 32, align: 32, offset: 6016)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1560, file: !35, line: 2755, baseType: !958, size: 32, align: 32, offset: 6048)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1560, file: !35, line: 2776, baseType: !958, size: 32, align: 32, offset: 6080)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1560, file: !35, line: 2783, baseType: !958, size: 32, align: 32, offset: 6112)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1560, file: !35, line: 2791, baseType: !958, size: 32, align: 32, offset: 6144)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1560, file: !35, line: 2802, baseType: !1816, size: 64, align: 64, offset: 6208)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1560, file: !35, line: 2811, baseType: !958, size: 32, align: 32, offset: 6272)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1560, file: !35, line: 2821, baseType: !958, size: 32, align: 32, offset: 6304)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1560, file: !35, line: 2830, baseType: !958, size: 32, align: 32, offset: 6336)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1560, file: !35, line: 2840, baseType: !958, size: 32, align: 32, offset: 6368)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1560, file: !35, line: 2851, baseType: !2161, size: 64, align: 64, offset: 6400)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64, align: 64)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{!958, !1983, !2164, !969, !1798, !958, !958}
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64, align: 64)
!2165 = !DISubroutineType(types: !2166)
!2166 = !{!958, !1983, !969}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1560, file: !35, line: 2871, baseType: !2168, size: 64, align: 64, offset: 6464)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64, align: 64)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{!958, !1983, !2171, !969, !1798, !958}
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64, align: 64)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!958, !1983, !969, !958, !958}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1560, file: !35, line: 2878, baseType: !958, size: 32, align: 32, offset: 6528)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1560, file: !35, line: 2885, baseType: !958, size: 32, align: 32, offset: 6560)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1560, file: !35, line: 3005, baseType: !958, size: 32, align: 32, offset: 6592)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1560, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1560, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1560, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1560, file: !35, line: 3037, baseType: !1643, size: 64, align: 64, offset: 6720)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1560, file: !35, line: 3038, baseType: !958, size: 32, align: 32, offset: 6784)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1560, file: !35, line: 3050, baseType: !1598, size: 64, align: 64, offset: 6848)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1560, file: !35, line: 3065, baseType: !958, size: 32, align: 32, offset: 6912)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1560, file: !35, line: 3083, baseType: !958, size: 32, align: 32, offset: 6944)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1560, file: !35, line: 3092, baseType: !1580, size: 64, align: 32, offset: 6976)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1560, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1560, file: !35, line: 3106, baseType: !1580, size: 64, align: 32, offset: 7072)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1560, file: !35, line: 3113, baseType: !2189, size: 64, align: 64, offset: 7168)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64, align: 64)
!2190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2191)
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !2192)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !2193)
!2193 = !{!2194, !2195, !2196, !2197, !2198, !2199, !2202}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2192, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2192, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2192, file: !35, line: 720, baseType: !1520, size: 64, align: 64, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !2192, file: !35, line: 724, baseType: !1520, size: 64, align: 64, offset: 128)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !2192, file: !35, line: 728, baseType: !958, size: 32, align: 32, offset: 192)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !2192, file: !35, line: 734, baseType: !2200, size: 64, align: 64, offset: 256)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64, align: 64)
!2201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1520)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !2192, file: !35, line: 739, baseType: !2203, size: 64, align: 64, offset: 320)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64, align: 64)
!2204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1606)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1560, file: !35, line: 3129, baseType: !992, size: 64, align: 64, offset: 7232)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1560, file: !35, line: 3130, baseType: !992, size: 64, align: 64, offset: 7296)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1560, file: !35, line: 3131, baseType: !992, size: 64, align: 64, offset: 7360)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1560, file: !35, line: 3132, baseType: !992, size: 64, align: 64, offset: 7424)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1560, file: !35, line: 3139, baseType: !1677, size: 64, align: 64, offset: 7488)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1560, file: !35, line: 3147, baseType: !958, size: 32, align: 32, offset: 7552)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1560, file: !35, line: 3165, baseType: !958, size: 32, align: 32, offset: 7584)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1560, file: !35, line: 3172, baseType: !958, size: 32, align: 32, offset: 7616)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1560, file: !35, line: 3180, baseType: !958, size: 32, align: 32, offset: 7648)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1560, file: !35, line: 3191, baseType: !1413, size: 64, align: 64, offset: 7680)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1560, file: !35, line: 3199, baseType: !1643, size: 64, align: 64, offset: 7744)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1560, file: !35, line: 3207, baseType: !1677, size: 64, align: 64, offset: 7808)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1560, file: !35, line: 3214, baseType: !985, size: 32, align: 32, offset: 7872)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1560, file: !35, line: 3224, baseType: !1708, size: 64, align: 64, offset: 7936)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1560, file: !35, line: 3225, baseType: !958, size: 32, align: 32, offset: 8000)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1560, file: !35, line: 3249, baseType: !1690, size: 64, align: 64, offset: 8064)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1560, file: !35, line: 3256, baseType: !958, size: 32, align: 32, offset: 8128)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1560, file: !35, line: 3271, baseType: !958, size: 32, align: 32, offset: 8160)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1560, file: !35, line: 3279, baseType: !992, size: 64, align: 64, offset: 8192)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1560, file: !35, line: 3301, baseType: !1690, size: 64, align: 64, offset: 8256)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1560, file: !35, line: 3310, baseType: !958, size: 32, align: 32, offset: 8320)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1560, file: !35, line: 3337, baseType: !958, size: 32, align: 32, offset: 8352)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1560, file: !35, line: 3351, baseType: !958, size: 32, align: 32, offset: 8384)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1560, file: !35, line: 3359, baseType: !958, size: 32, align: 32, offset: 8416)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1512, file: !888, line: 296, baseType: !1816, size: 64, align: 64, offset: 128)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "is_saved", scope: !1512, file: !888, line: 298, baseType: !958, size: 32, align: 32, offset: 192)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "che_drc", scope: !1512, file: !888, line: 299, baseType: !2232, size: 3808, align: 32, offset: 224)
!2232 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicRangeControl", file: !888, line: 222, baseType: !2233)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicRangeControl", file: !888, line: 211, size: 3808, align: 32, elements: !2234)
!2234 = !{!2235, !2236, !2240, !2241, !2244, !2245, !2246, !2247}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "pce_instance_tag", scope: !2233, file: !888, line: 212, baseType: !958, size: 32, align: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_sgn", scope: !2233, file: !888, line: 213, baseType: !2237, size: 544, align: 32, offset: 32)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 544, align: 32, elements: !2238)
!2238 = !{!2239}
!2239 = !DISubrange(count: 17)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_ctl", scope: !2233, file: !888, line: 214, baseType: !2237, size: 544, align: 32, offset: 576)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_mask", scope: !2233, file: !888, line: 215, baseType: !2242, size: 2048, align: 32, offset: 1120)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 2048, align: 32, elements: !2243)
!2243 = !{!976}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "band_incr", scope: !2233, file: !888, line: 216, baseType: !958, size: 32, align: 32, offset: 3168)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation_scheme", scope: !2233, file: !888, line: 217, baseType: !958, size: 32, align: 32, offset: 3200)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "band_top", scope: !2233, file: !888, line: 218, baseType: !2237, size: 544, align: 32, offset: 3232)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ref_level", scope: !2233, file: !888, line: 219, baseType: !958, size: 32, align: 32, offset: 3776)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "che", scope: !1512, file: !888, line: 305, baseType: !2249, size: 4096, align: 64, offset: 4032)
!2249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2250, size: 4096, align: 64, elements: !2400)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64, align: 64)
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelElement", file: !888, line: 288, baseType: !2252)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelElement", file: !888, line: 275, size: 5199104, align: 256, elements: !2253)
!2253 = !{!2254, !2255, !2256, !2257, !2258, !2262, !2263, !2385, !2399}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2252, file: !888, line: 276, baseType: !958, size: 32, align: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "common_window", scope: !2252, file: !888, line: 278, baseType: !958, size: 32, align: 32, offset: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mode", scope: !2252, file: !888, line: 279, baseType: !958, size: 32, align: 32, offset: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "is_mode", scope: !2252, file: !888, line: 280, baseType: !986, size: 8, align: 8, offset: 96)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mask", scope: !2252, file: !888, line: 281, baseType: !2259, size: 1024, align: 8, offset: 104)
!2259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 1024, align: 8, elements: !2260)
!2260 = !{!2261}
!2261 = !DISubrange(count: 128)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "is_mask", scope: !2252, file: !888, line: 282, baseType: !2259, size: 1024, align: 8, offset: 1128)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !2252, file: !888, line: 284, baseType: !2264, size: 1662464, align: 256, offset: 2304)
!2264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2265, size: 1662464, align: 256, elements: !972)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "SingleChannelElement", file: !888, line: 270, baseType: !2266)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SingleChannelElement", file: !888, line: 248, size: 831232, align: 256, elements: !2267)
!2267 = !{!2268, !2308, !2325, !2333, !2335, !2336, !2340, !2342, !2344, !2345, !2346, !2348, !2349, !2353, !2354, !2358, !2362, !2366, !2368, !2369, !2384}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "ics", scope: !2266, file: !888, line: 249, baseType: !2269, size: 2432, align: 64)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndividualChannelStream", file: !888, line: 193, baseType: !2270)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IndividualChannelStream", file: !888, line: 174, size: 2432, align: 64, elements: !2271)
!2271 = !{!2272, !2273, !2275, !2276, !2277, !2278, !2289, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2302, !2306, !2307}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "max_sfb", scope: !2270, file: !888, line: 175, baseType: !986, size: 8, align: 8)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "window_sequence", scope: !2270, file: !888, line: 176, baseType: !2274, size: 64, align: 32, offset: 32)
!2274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !887, size: 64, align: 32, elements: !972)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "use_kb_window", scope: !2270, file: !888, line: 177, baseType: !1177, size: 16, align: 8, offset: 96)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "num_window_groups", scope: !2270, file: !888, line: 178, baseType: !958, size: 32, align: 32, offset: 128)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "group_len", scope: !2270, file: !888, line: 179, baseType: !1236, size: 64, align: 8, offset: 160)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "ltp", scope: !2270, file: !888, line: 180, baseType: !2279, size: 416, align: 32, offset: 224)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "LongTermPrediction", file: !888, line: 169, baseType: !2280)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LongTermPrediction", file: !888, line: 163, size: 416, align: 32, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2286}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2280, file: !888, line: 164, baseType: !1267, size: 8, align: 8)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "lag", scope: !2280, file: !888, line: 165, baseType: !990, size: 16, align: 16, offset: 16)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !2280, file: !888, line: 166, baseType: !958, size: 32, align: 32, offset: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !2280, file: !888, line: 167, baseType: !956, size: 32, align: 32, offset: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2280, file: !888, line: 168, baseType: !2287, size: 320, align: 8, offset: 96)
!2287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1267, size: 320, align: 8, elements: !2288)
!2288 = !{!968}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "swb_offset", scope: !2270, file: !888, line: 181, baseType: !2290, size: 64, align: 64, offset: 640)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64, align: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "swb_sizes", scope: !2270, file: !888, line: 182, baseType: !1632, size: 64, align: 64, offset: 704)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "num_swb", scope: !2270, file: !888, line: 183, baseType: !958, size: 32, align: 32, offset: 768)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "num_windows", scope: !2270, file: !888, line: 184, baseType: !958, size: 32, align: 32, offset: 800)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "tns_max_bands", scope: !2270, file: !888, line: 185, baseType: !958, size: 32, align: 32, offset: 832)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_present", scope: !2270, file: !888, line: 186, baseType: !958, size: 32, align: 32, offset: 864)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_initialized", scope: !2270, file: !888, line: 187, baseType: !958, size: 32, align: 32, offset: 896)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_group", scope: !2270, file: !888, line: 188, baseType: !958, size: 32, align: 32, offset: 928)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_count", scope: !2270, file: !888, line: 189, baseType: !2299, size: 992, align: 32, offset: 960)
!2299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 992, align: 32, elements: !2300)
!2300 = !{!2301}
!2301 = !DISubrange(count: 31)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_used", scope: !2270, file: !888, line: 190, baseType: !2303, size: 328, align: 8, offset: 1952)
!2303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 328, align: 8, elements: !2304)
!2304 = !{!2305}
!2305 = !DISubrange(count: 41)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "window_clipping", scope: !2270, file: !888, line: 191, baseType: !1236, size: 64, align: 8, offset: 2280)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "clip_avoidance_factor", scope: !2270, file: !888, line: 192, baseType: !1990, size: 32, align: 32, offset: 2368)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "tns", scope: !2266, file: !888, line: 250, baseType: !2309, size: 44320, align: 32, offset: 2432)
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "TemporalNoiseShaping", file: !888, line: 206, baseType: !2310)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TemporalNoiseShaping", file: !888, line: 198, size: 44320, align: 32, elements: !2311)
!2311 = !{!2312, !2313, !2314, !2317, !2318, !2319, !2323}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2310, file: !888, line: 199, baseType: !958, size: 32, align: 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "n_filt", scope: !2310, file: !888, line: 200, baseType: !1670, size: 256, align: 32, offset: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2310, file: !888, line: 201, baseType: !2315, size: 1024, align: 32, offset: 288)
!2315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 1024, align: 32, elements: !2316)
!2316 = !{!1222, !1362}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !2310, file: !888, line: 202, baseType: !2315, size: 1024, align: 32, offset: 1312)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !2310, file: !888, line: 203, baseType: !2315, size: 1024, align: 32, offset: 2336)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !2310, file: !888, line: 204, baseType: !2320, size: 20480, align: 32, offset: 3360)
!2320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 20480, align: 32, elements: !2321)
!2321 = !{!1222, !1362, !2322}
!2322 = !DISubrange(count: 20)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !2310, file: !888, line: 205, baseType: !2324, size: 20480, align: 32, offset: 23840)
!2324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 20480, align: 32, elements: !2321)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "pulse", scope: !2266, file: !888, line: 251, baseType: !2326, size: 320, align: 32, offset: 46752)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pulse", file: !888, line: 229, baseType: !2327)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Pulse", file: !888, line: 224, size: 320, align: 32, elements: !2328)
!2328 = !{!2329, !2330, !2331, !2332}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "num_pulse", scope: !2327, file: !888, line: 225, baseType: !958, size: 32, align: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2327, file: !888, line: 226, baseType: !958, size: 32, align: 32, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2327, file: !888, line: 227, baseType: !1674, size: 128, align: 32, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "amp", scope: !2327, file: !888, line: 228, baseType: !1674, size: 128, align: 32, offset: 192)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "band_type", scope: !2266, file: !888, line: 252, baseType: !2334, size: 4096, align: 32, offset: 47072)
!2334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !894, size: 4096, align: 32, elements: !2260)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "band_alt", scope: !2266, file: !888, line: 253, baseType: !2334, size: 4096, align: 32, offset: 51168)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "band_type_run_end", scope: !2266, file: !888, line: 254, baseType: !2337, size: 3840, align: 32, offset: 55264)
!2337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 3840, align: 32, elements: !2338)
!2338 = !{!2339}
!2339 = !DISubrange(count: 120)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !2266, file: !888, line: 255, baseType: !2341, size: 3840, align: 32, offset: 59104)
!2341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 3840, align: 32, elements: !2338)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "sf_idx", scope: !2266, file: !888, line: 256, baseType: !2343, size: 4096, align: 32, offset: 62944)
!2343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 4096, align: 32, elements: !2260)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "zeroes", scope: !2266, file: !888, line: 257, baseType: !2259, size: 1024, align: 8, offset: 67040)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "can_pns", scope: !2266, file: !888, line: 258, baseType: !2259, size: 1024, align: 8, offset: 68064)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "is_ener", scope: !2266, file: !888, line: 259, baseType: !2347, size: 4096, align: 32, offset: 69088)
!2347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1990, size: 4096, align: 32, elements: !2260)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "pns_ener", scope: !2266, file: !888, line: 260, baseType: !2347, size: 4096, align: 32, offset: 73184)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "pcoeffs", scope: !2266, file: !888, line: 261, baseType: !2350, size: 32768, align: 32, offset: 77312)
!2350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 32768, align: 32, elements: !2351)
!2351 = !{!2352}
!2352 = !DISubrange(count: 1024)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !2266, file: !888, line: 262, baseType: !2350, size: 32768, align: 32, offset: 110080)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !2266, file: !888, line: 263, baseType: !2355, size: 49152, align: 32, offset: 142848)
!2355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 49152, align: 32, elements: !2356)
!2356 = !{!2357}
!2357 = !DISubrange(count: 1536)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "ret_buf", scope: !2266, file: !888, line: 264, baseType: !2359, size: 65536, align: 32, offset: 192000)
!2359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 65536, align: 32, elements: !2360)
!2360 = !{!2361}
!2361 = !DISubrange(count: 2048)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_state", scope: !2266, file: !888, line: 265, baseType: !2363, size: 98304, align: 32, offset: 257536)
!2363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 98304, align: 32, elements: !2364)
!2364 = !{!2365}
!2365 = !DISubrange(count: 3072)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "lcoeffs", scope: !2266, file: !888, line: 266, baseType: !2367, size: 65536, align: 32, offset: 355840)
!2367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1209, size: 65536, align: 32, elements: !2351)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "prcoeffs", scope: !2266, file: !888, line: 267, baseType: !2367, size: 65536, align: 32, offset: 421376)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_state", scope: !2266, file: !888, line: 268, baseType: !2370, size: 344064, align: 32, offset: 486912)
!2370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2371, size: 344064, align: 32, elements: !2382)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "PredictorState", file: !888, line: 144, baseType: !2372)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PredictorState", file: !888, line: 135, size: 512, align: 32, elements: !2373)
!2373 = !{!2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "cor0", scope: !2372, file: !888, line: 136, baseType: !1209, size: 64, align: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "cor1", scope: !2372, file: !888, line: 137, baseType: !1209, size: 64, align: 32, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "var0", scope: !2372, file: !888, line: 138, baseType: !1209, size: 64, align: 32, offset: 128)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "var1", scope: !2372, file: !888, line: 139, baseType: !1209, size: 64, align: 32, offset: 192)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2372, file: !888, line: 140, baseType: !1209, size: 64, align: 32, offset: 256)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2372, file: !888, line: 141, baseType: !1209, size: 64, align: 32, offset: 320)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2372, file: !888, line: 142, baseType: !1209, size: 64, align: 32, offset: 384)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "x_est", scope: !2372, file: !888, line: 143, baseType: !1209, size: 64, align: 32, offset: 448)
!2382 = !{!2383}
!2383 = !DISubrange(count: 672)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ret", scope: !2266, file: !888, line: 269, baseType: !955, size: 64, align: 64, offset: 830976)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "coup", scope: !2252, file: !888, line: 286, baseType: !2386, size: 62272, align: 32, offset: 1664768)
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelCoupling", file: !888, line: 243, baseType: !2387)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelCoupling", file: !888, line: 234, size: 62272, align: 32, elements: !2388)
!2388 = !{!2389, !2390, !2391, !2393, !2394, !2395}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "coupling_point", scope: !2387, file: !888, line: 235, baseType: !903, size: 32, align: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "num_coupled", scope: !2387, file: !888, line: 236, baseType: !958, size: 32, align: 32, offset: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2387, file: !888, line: 237, baseType: !2392, size: 256, align: 32, offset: 64)
!2392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !908, size: 256, align: 32, elements: !1237)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "id_select", scope: !2387, file: !888, line: 238, baseType: !1670, size: 256, align: 32, offset: 320)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "ch_select", scope: !2387, file: !888, line: 239, baseType: !1670, size: 256, align: 32, offset: 576)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2387, file: !888, line: 242, baseType: !2396, size: 61440, align: 32, offset: 832)
!2396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 61440, align: 32, elements: !2397)
!2397 = !{!2398, !2339}
!2398 = !DISubrange(count: 16)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2252, file: !888, line: 287, baseType: !1126, size: 3471872, align: 256, offset: 1727232)
!2400 = !{!1362, !2398}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "tag_che_map", scope: !1512, file: !888, line: 306, baseType: !2249, size: 4096, align: 64, offset: 8128)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "tags_mapped", scope: !1512, file: !888, line: 307, baseType: !958, size: 32, align: 32, offset: 12224)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "warned_remapping_once", scope: !1512, file: !888, line: 308, baseType: !958, size: 32, align: 32, offset: 12256)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mdct", scope: !1512, file: !888, line: 316, baseType: !2350, size: 32768, align: 32, offset: 12288)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !1512, file: !888, line: 323, baseType: !1407, size: 896, align: 64, offset: 45056)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_small", scope: !1512, file: !888, line: 324, baseType: !1407, size: 896, align: 64, offset: 45952)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ld", scope: !1512, file: !888, line: 325, baseType: !1407, size: 896, align: 64, offset: 46848)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ltp", scope: !1512, file: !888, line: 326, baseType: !1407, size: 896, align: 64, offset: 47744)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1512, file: !888, line: 328, baseType: !2410, size: 64, align: 64, offset: 48640)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64, align: 64)
!2411 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFixedDSPContext", file: !2412, line: 154, baseType: !2413)
!2412 = !DIFile(filename: "./libavutil/fixed_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFixedDSPContext", file: !2412, line: 56, size: 448, align: 64, elements: !2414)
!2414 = !{!2415, !2422, !2427, !2431, !2432, !2436, !2440}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window_scaled", scope: !2413, file: !2412, line: 80, baseType: !2416, size: 64, align: 64)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64, align: 64)
!2417 = !DISubroutineType(types: !2418)
!2418 = !{null, !2419, !2420, !2420, !2420, !958, !986}
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64, align: 64)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64, align: 64)
!2421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !994)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !2413, file: !2412, line: 98, baseType: !2423, size: 64, align: 64, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64, align: 64)
!2424 = !DISubroutineType(types: !2425)
!2425 = !{null, !2426, !2420, !2420, !2420, !958}
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64, align: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !2413, file: !2412, line: 113, baseType: !2428, size: 64, align: 64, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 64, align: 64)
!2429 = !DISubroutineType(types: !2430)
!2430 = !{null, !1798, !1590, !1590, !958}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !2413, file: !2412, line: 116, baseType: !2428, size: 64, align: 64, offset: 192)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !2413, file: !2412, line: 132, baseType: !2433, size: 64, align: 64, offset: 256)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64, align: 64)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{null, !1798, !1590, !1590, !1590, !958}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_fixed", scope: !2413, file: !2412, line: 144, baseType: !2437, size: 64, align: 64, offset: 320)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64, align: 64)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!958, !1590, !1590, !958}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_fixed", scope: !2413, file: !2412, line: 153, baseType: !2441, size: 64, align: 64, offset: 384)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64, align: 64)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{null, !2444, !2444, !958}
!2444 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1798)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "random_state", scope: !1512, file: !888, line: 335, baseType: !958, size: 32, align: 32, offset: 48704)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "output_element", scope: !1512, file: !888, line: 342, baseType: !2447, size: 4096, align: 64, offset: 48768)
!2447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2448, size: 4096, align: 64, elements: !2243)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64, align: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "force_dmono_mode", scope: !1512, file: !888, line: 350, baseType: !958, size: 32, align: 32, offset: 52864)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "dmono_mode", scope: !1512, file: !888, line: 351, baseType: !958, size: 32, align: 32, offset: 52896)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1512, file: !888, line: 354, baseType: !2452, size: 4096, align: 32, offset: 52992)
!2452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 4096, align: 32, elements: !2260)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "oc", scope: !1512, file: !888, line: 356, baseType: !2454, size: 4224, align: 64, offset: 57088)
!2454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2455, size: 4224, align: 64, elements: !972)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "OutputConfiguration", file: !888, line: 130, baseType: !2456)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OutputConfiguration", file: !888, line: 123, size: 2112, align: 64, elements: !2457)
!2457 = !{!2458, !2475, !2478, !2479, !2480, !2481}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "m4ac", scope: !2456, file: !888, line: 124, baseType: !2459, size: 384, align: 32)
!2459 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPEG4AudioConfig", file: !2460, line: 46, baseType: !2461)
!2460 = !DIFile(filename: "libavcodec/mpeg4audio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPEG4AudioConfig", file: !2460, line: 33, size: 384, align: 32, elements: !2462)
!2462 = !{!2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "object_type", scope: !2461, file: !2460, line: 34, baseType: !958, size: 32, align: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_index", scope: !2461, file: !2460, line: 35, baseType: !958, size: 32, align: 32, offset: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2461, file: !2460, line: 36, baseType: !958, size: 32, align: 32, offset: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !2461, file: !2460, line: 37, baseType: !958, size: 32, align: 32, offset: 96)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2461, file: !2460, line: 38, baseType: !958, size: 32, align: 32, offset: 128)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "ext_object_type", scope: !2461, file: !2460, line: 39, baseType: !958, size: 32, align: 32, offset: 160)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sampling_index", scope: !2461, file: !2460, line: 40, baseType: !958, size: 32, align: 32, offset: 192)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sample_rate", scope: !2461, file: !2460, line: 41, baseType: !958, size: 32, align: 32, offset: 224)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "ext_chan_config", scope: !2461, file: !2460, line: 42, baseType: !958, size: 32, align: 32, offset: 256)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2461, file: !2460, line: 43, baseType: !958, size: 32, align: 32, offset: 288)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !2461, file: !2460, line: 44, baseType: !958, size: 32, align: 32, offset: 320)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length_short", scope: !2461, file: !2460, line: 45, baseType: !958, size: 32, align: 32, offset: 352)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map", scope: !2456, file: !888, line: 125, baseType: !2476, size: 1536, align: 8, offset: 384)
!2476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 1536, align: 8, elements: !2477)
!2477 = !{!976, !1232}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map_tags", scope: !2456, file: !888, line: 126, baseType: !958, size: 32, align: 32, offset: 1920)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2456, file: !888, line: 127, baseType: !958, size: 32, align: 32, offset: 1952)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !2456, file: !888, line: 128, baseType: !1598, size: 64, align: 64, offset: 1984)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2456, file: !888, line: 129, baseType: !928, size: 32, align: 32, offset: 2048)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "warned_num_aac_frames", scope: !1512, file: !888, line: 357, baseType: !958, size: 32, align: 32, offset: 61312)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "warned_960_sbr", scope: !1512, file: !888, line: 358, baseType: !958, size: 32, align: 32, offset: 61344)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "warned_gain_control", scope: !1512, file: !888, line: 360, baseType: !958, size: 32, align: 32, offset: 61376)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_and_windowing", scope: !1512, file: !888, line: 363, baseType: !2486, size: 64, align: 64, offset: 61440)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 64, align: 64)
!2487 = !DISubroutineType(types: !2488)
!2488 = !{null, !1510, !2448}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "apply_ltp", scope: !1512, file: !888, line: 364, baseType: !2486, size: 64, align: 64, offset: 61504)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "apply_tns", scope: !1512, file: !888, line: 365, baseType: !2491, size: 64, align: 64, offset: 61568)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64, align: 64)
!2492 = !DISubroutineType(types: !2493)
!2493 = !{null, !955, !2494, !2495, !958}
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64, align: 64)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64, align: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "windowing_and_mdct_ltp", scope: !1512, file: !888, line: 367, baseType: !2497, size: 64, align: 64, offset: 61632)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64, align: 64)
!2498 = !DISubroutineType(types: !2499)
!2499 = !{null, !1510, !955, !955, !2495}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "update_ltp", scope: !1512, file: !888, line: 369, baseType: !2486, size: 64, align: 64, offset: 61696)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "vector_pow43", scope: !1512, file: !888, line: 370, baseType: !2502, size: 64, align: 64, offset: 61760)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64, align: 64)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{null, !1798, !958}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "subband_scale", scope: !1512, file: !888, line: 371, baseType: !2506, size: 64, align: 64, offset: 61824)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 64, align: 64)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{null, !1798, !1798, !958, !958, !958, !969}
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 64, align: 64)
!2510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 2560, align: 32, elements: !967)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_assemble", scope: !1504, file: !1127, line: 124, baseType: !2512, size: 64, align: 64, offset: 64)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 64, align: 64)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{null, !2515, !965, !1125, !2516, !1590}
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64, align: 64)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64, align: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_x_gen", scope: !1504, file: !1127, line: 128, baseType: !2518, size: 64, align: 64, offset: 128)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64, align: 64)
!2519 = !DISubroutineType(types: !2520)
!2520 = !{!958, !1125, !1339, !973, !973, !965, !958}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_inverse_filter", scope: !1504, file: !1127, line: 131, baseType: !2522, size: 64, align: 64, offset: 192)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64, align: 64)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{null, !2525, !1321, !1321, !965, !958}
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64, align: 64)
!2526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 96, align: 32, elements: !1241)
!2527 = distinct !DIGlobalVariable(name: "CONST_RECIP_LN2", scope: !0, file: !1058, line: 78, type: !1591, isLocal: true, isDefinition: true, variable: i32 1549082005)
!2528 = distinct !DIGlobalVariable(name: "CONST_076923", scope: !0, file: !1058, line: 79, type: !1591, isLocal: true, isDefinition: true, variable: i32 1651910528)
!2529 = distinct !DIGlobalVariable(name: "sbr_offset", scope: !0, file: !997, line: 261, type: !2530, isLocal: true, isDefinition: true, variable: [6 x [16 x i8]]* @sbr_offset)
!2530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2531, size: 768, align: 8, elements: !2532)
!2531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1267)
!2532 = !{!1226, !2398}
!2533 = distinct !DIGlobalVariable(name: "CONST_LN2", scope: !0, file: !1058, line: 77, type: !1591, isLocal: true, isDefinition: true, variable: i32 5814540)
!2534 = distinct !DIGlobalVariable(name: "fixed_exp_table", scope: !0, file: !1058, line: 106, type: !2535, isLocal: true, isDefinition: true, variable: [7 x i32]* @fixed_exp_table)
!2535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1591, size: 224, align: 32, elements: !1171)
!2536 = distinct !DIGlobalVariable(name: "fixed_log_table", scope: !0, file: !1058, line: 81, type: !2537, isLocal: true, isDefinition: true, variable: [10 x i32]* @fixed_log_table)
!2537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1591, size: 320, align: 32, elements: !1018)
!2538 = distinct !DIGlobalVariable(name: "ceil_log2", scope: !0, file: !1003, line: 626, type: !2539, isLocal: true, isDefinition: true, variable: [6 x i8]* @ceil_log2)
!2539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2531, size: 48, align: 8, elements: !1264)
!2540 = distinct !DIGlobalVariable(name: "vlc_sbr_lav", scope: !0, file: !936, line: 69, type: !2541, isLocal: true, isDefinition: true, variable: [10 x i8]* @vlc_sbr_lav)
!2541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2531, size: 80, align: 8, elements: !1018)
!2542 = distinct !DIGlobalVariable(name: "FLOAT_1", scope: !0, file: !1211, line: 41, type: !2543, isLocal: true, isDefinition: true, variable: %struct.SoftFloat* @FLOAT_1)
!2543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1210)
!2544 = distinct !DIGlobalVariable(name: "FLOAT_0", scope: !0, file: !1211, line: 39, type: !2543, isLocal: true, isDefinition: true, variable: %struct.SoftFloat* @FLOAT_0)
!2545 = distinct !DIGlobalVariable(name: "bw_tab", scope: !2546, file: !1058, line: 374, type: !2549, isLocal: true, isDefinition: true, variable: [4 x i32]* @sbr_chirp.bw_tab)
!2546 = distinct !DISubprogram(name: "sbr_chirp", scope: !1058, file: !1058, line: 370, type: !2547, isLocal: true, isDefinition: true, scopeLine: 371, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!2547 = !DISubroutineType(types: !2548)
!2548 = !{null, !1125, !2516}
!2549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1591, size: 128, align: 32, elements: !1361)
!2550 = distinct !DIGlobalVariable(name: "limgain", scope: !2551, file: !1058, line: 405, type: !2554, isLocal: true, isDefinition: true, variable: [4 x %struct.SoftFloat]* @sbr_gain_calc.limgain)
!2551 = distinct !DISubprogram(name: "sbr_gain_calc", scope: !1058, file: !1058, line: 400, type: !2552, isLocal: true, isDefinition: true, scopeLine: 402, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{null, !1510, !1125, !2516, !1590}
!2554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2543, size: 256, align: 32, elements: !1361)
!2555 = distinct !DIGlobalVariable(name: "av_sqrttbl_sf", scope: !0, file: !2556, line: 52, type: !2557, isLocal: true, isDefinition: true, variable: [513 x i32]* @av_sqrttbl_sf)
!2556 = !DIFile(filename: "./libavutil/softfloat_tables.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2421, size: 16416, align: 32, elements: !2558)
!2558 = !{!2559}
!2559 = !DISubrange(count: 513)
!2560 = distinct !DIGlobalVariable(name: "av_sqr_exp_multbl_sf", scope: !0, file: !2556, line: 184, type: !2561, isLocal: true, isDefinition: true, variable: [2 x i32]* @av_sqr_exp_multbl_sf)
!2561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2421, size: 64, align: 32, elements: !972)
!2562 = distinct !DIGlobalVariable(name: "FLOAT_MIN", scope: !0, file: !1211, line: 46, type: !2543, isLocal: true, isDefinition: true, variable: %struct.SoftFloat* @FLOAT_MIN)
!2563 = distinct !DIGlobalVariable(name: "FLOAT_EPSILON", scope: !0, file: !1211, line: 42, type: !2543, isLocal: true, isDefinition: true, variable: %struct.SoftFloat* @FLOAT_EPSILON)
!2564 = distinct !DIGlobalVariable(name: "FLOAT_100000", scope: !0, file: !1211, line: 44, type: !2543, isLocal: true, isDefinition: true, variable: %struct.SoftFloat* @FLOAT_100000)
!2565 = distinct !DIGlobalVariable(name: "FLOAT_1584893192", scope: !0, file: !1211, line: 43, type: !2543, isLocal: true, isDefinition: true, variable: %struct.SoftFloat* @FLOAT_1584893192)
!2566 = distinct !DIGlobalVariable(name: "h_smooth", scope: !2567, file: !1058, line: 498, type: !2574, isLocal: true, isDefinition: true, variable: [5 x %struct.SoftFloat]* @sbr_hf_assemble.h_smooth)
!2567 = distinct !DISubprogram(name: "sbr_hf_assemble", scope: !1058, file: !1058, line: 489, type: !2568, isLocal: true, isDefinition: true, scopeLine: 493, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!2568 = !DISubroutineType(types: !2569)
!2569 = !{null, !2570, !2572, !1125, !2516, !1590}
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64, align: 64)
!2571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 4096, align: 32, elements: !975)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 64, align: 64)
!2573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1591, size: 2560, align: 32, elements: !967)
!2574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2543, size: 320, align: 32, elements: !1154)
!2575 = distinct !DIGlobalVariable(name: "FLOAT_0999999", scope: !0, file: !1211, line: 45, type: !2543, isLocal: true, isDefinition: true, variable: %struct.SoftFloat* @FLOAT_0999999)
!2576 = !{i32 2, !"Dwarf Version", i32 4}
!2577 = !{i32 2, !"Debug Info Version", i32 3}
!2578 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2579 = !DILocation(line: 68, column: 5, scope: !1002)
!2580 = distinct !{!2580, !2579}
!2581 = !DILocation(line: 68, column: 62, scope: !2582)
!2582 = !DILexicalBlockFile(scope: !2583, file: !1003, discriminator: 1)
!2583 = distinct !DILexicalBlock(scope: !1002, file: !1003, line: 68, column: 8)
!2584 = !DILocation(line: 68, column: 102, scope: !2582)
!2585 = !DILocation(line: 68, column: 156, scope: !2582)
!2586 = !DILocation(line: 68, column: 180, scope: !2582)
!2587 = !DILocation(line: 68, column: 167, scope: !2582)
!2588 = !DILocation(line: 68, column: 202, scope: !2582)
!2589 = !DILocation(line: 68, column: 229, scope: !2582)
!2590 = !DILocation(line: 68, column: 251, scope: !2582)
!2591 = !DILocation(line: 68, column: 273, scope: !2582)
!2592 = !DILocation(line: 68, column: 110, scope: !2582)
!2593 = !DILocation(line: 68, column: 16, scope: !2582)
!2594 = !DILocation(line: 69, column: 5, scope: !1002)
!2595 = distinct !{!2595, !2594}
!2596 = !DILocation(line: 69, column: 62, scope: !2597)
!2597 = !DILexicalBlockFile(scope: !2598, file: !1003, discriminator: 1)
!2598 = distinct !DILexicalBlock(scope: !1002, file: !1003, line: 69, column: 8)
!2599 = !DILocation(line: 69, column: 102, scope: !2597)
!2600 = !DILocation(line: 69, column: 156, scope: !2597)
!2601 = !DILocation(line: 69, column: 180, scope: !2597)
!2602 = !DILocation(line: 69, column: 167, scope: !2597)
!2603 = !DILocation(line: 69, column: 202, scope: !2597)
!2604 = !DILocation(line: 69, column: 229, scope: !2597)
!2605 = !DILocation(line: 69, column: 251, scope: !2597)
!2606 = !DILocation(line: 69, column: 273, scope: !2597)
!2607 = !DILocation(line: 69, column: 110, scope: !2597)
!2608 = !DILocation(line: 69, column: 16, scope: !2597)
!2609 = !DILocation(line: 70, column: 5, scope: !1002)
!2610 = distinct !{!2610, !2609}
!2611 = !DILocation(line: 70, column: 61, scope: !2612)
!2612 = !DILexicalBlockFile(scope: !2613, file: !1003, discriminator: 1)
!2613 = distinct !DILexicalBlock(scope: !1002, file: !1003, line: 70, column: 8)
!2614 = !DILocation(line: 70, column: 101, scope: !2612)
!2615 = !DILocation(line: 70, column: 154, scope: !2612)
!2616 = !DILocation(line: 70, column: 178, scope: !2612)
!2617 = !DILocation(line: 70, column: 165, scope: !2612)
!2618 = !DILocation(line: 70, column: 200, scope: !2612)
!2619 = !DILocation(line: 70, column: 227, scope: !2612)
!2620 = !DILocation(line: 70, column: 249, scope: !2612)
!2621 = !DILocation(line: 70, column: 271, scope: !2612)
!2622 = !DILocation(line: 70, column: 108, scope: !2612)
!2623 = !DILocation(line: 70, column: 16, scope: !2612)
!2624 = !DILocation(line: 71, column: 5, scope: !1002)
!2625 = distinct !{!2625, !2624}
!2626 = !DILocation(line: 71, column: 62, scope: !2627)
!2627 = !DILexicalBlockFile(scope: !2628, file: !1003, discriminator: 1)
!2628 = distinct !DILexicalBlock(scope: !1002, file: !1003, line: 71, column: 8)
!2629 = !DILocation(line: 71, column: 102, scope: !2627)
!2630 = !DILocation(line: 71, column: 156, scope: !2627)
!2631 = !DILocation(line: 71, column: 180, scope: !2627)
!2632 = !DILocation(line: 71, column: 167, scope: !2627)
!2633 = !DILocation(line: 71, column: 202, scope: !2627)
!2634 = !DILocation(line: 71, column: 229, scope: !2627)
!2635 = !DILocation(line: 71, column: 251, scope: !2627)
!2636 = !DILocation(line: 71, column: 273, scope: !2627)
!2637 = !DILocation(line: 71, column: 110, scope: !2627)
!2638 = !DILocation(line: 71, column: 16, scope: !2627)
!2639 = !DILocation(line: 72, column: 5, scope: !1002)
!2640 = distinct !{!2640, !2639}
!2641 = !DILocation(line: 72, column: 62, scope: !2642)
!2642 = !DILexicalBlockFile(scope: !2643, file: !1003, discriminator: 1)
!2643 = distinct !DILexicalBlock(scope: !1002, file: !1003, line: 72, column: 8)
!2644 = !DILocation(line: 72, column: 102, scope: !2642)
!2645 = !DILocation(line: 72, column: 156, scope: !2642)
!2646 = !DILocation(line: 72, column: 180, scope: !2642)
!2647 = !DILocation(line: 72, column: 167, scope: !2642)
!2648 = !DILocation(line: 72, column: 202, scope: !2642)
!2649 = !DILocation(line: 72, column: 229, scope: !2642)
!2650 = !DILocation(line: 72, column: 251, scope: !2642)
!2651 = !DILocation(line: 72, column: 273, scope: !2642)
!2652 = !DILocation(line: 72, column: 110, scope: !2642)
!2653 = !DILocation(line: 72, column: 16, scope: !2642)
!2654 = !DILocation(line: 73, column: 5, scope: !1002)
!2655 = distinct !{!2655, !2654}
!2656 = !DILocation(line: 73, column: 62, scope: !2657)
!2657 = !DILexicalBlockFile(scope: !2658, file: !1003, discriminator: 1)
!2658 = distinct !DILexicalBlock(scope: !1002, file: !1003, line: 73, column: 8)
!2659 = !DILocation(line: 73, column: 102, scope: !2657)
!2660 = !DILocation(line: 73, column: 156, scope: !2657)
!2661 = !DILocation(line: 73, column: 180, scope: !2657)
!2662 = !DILocation(line: 73, column: 167, scope: !2657)
!2663 = !DILocation(line: 73, column: 202, scope: !2657)
!2664 = !DILocation(line: 73, column: 229, scope: !2657)
!2665 = !DILocation(line: 73, column: 251, scope: !2657)
!2666 = !DILocation(line: 73, column: 273, scope: !2657)
!2667 = !DILocation(line: 73, column: 110, scope: !2657)
!2668 = !DILocation(line: 73, column: 16, scope: !2657)
!2669 = !DILocation(line: 74, column: 5, scope: !1002)
!2670 = distinct !{!2670, !2669}
!2671 = !DILocation(line: 74, column: 61, scope: !2672)
!2672 = !DILexicalBlockFile(scope: !2673, file: !1003, discriminator: 1)
!2673 = distinct !DILexicalBlock(scope: !1002, file: !1003, line: 74, column: 8)
!2674 = !DILocation(line: 74, column: 101, scope: !2672)
!2675 = !DILocation(line: 74, column: 154, scope: !2672)
!2676 = !DILocation(line: 74, column: 178, scope: !2672)
!2677 = !DILocation(line: 74, column: 165, scope: !2672)
!2678 = !DILocation(line: 74, column: 200, scope: !2672)
!2679 = !DILocation(line: 74, column: 227, scope: !2672)
!2680 = !DILocation(line: 74, column: 249, scope: !2672)
!2681 = !DILocation(line: 74, column: 271, scope: !2672)
!2682 = !DILocation(line: 74, column: 108, scope: !2672)
!2683 = !DILocation(line: 74, column: 16, scope: !2672)
!2684 = !DILocation(line: 75, column: 5, scope: !1002)
!2685 = distinct !{!2685, !2684}
!2686 = !DILocation(line: 75, column: 61, scope: !2687)
!2687 = !DILexicalBlockFile(scope: !2688, file: !1003, discriminator: 1)
!2688 = distinct !DILexicalBlock(scope: !1002, file: !1003, line: 75, column: 8)
!2689 = !DILocation(line: 75, column: 101, scope: !2687)
!2690 = !DILocation(line: 75, column: 154, scope: !2687)
!2691 = !DILocation(line: 75, column: 178, scope: !2687)
!2692 = !DILocation(line: 75, column: 165, scope: !2687)
!2693 = !DILocation(line: 75, column: 200, scope: !2687)
!2694 = !DILocation(line: 75, column: 227, scope: !2687)
!2695 = !DILocation(line: 75, column: 249, scope: !2687)
!2696 = !DILocation(line: 75, column: 271, scope: !2687)
!2697 = !DILocation(line: 75, column: 108, scope: !2687)
!2698 = !DILocation(line: 75, column: 16, scope: !2687)
!2699 = !DILocation(line: 76, column: 5, scope: !1002)
!2700 = distinct !{!2700, !2699}
!2701 = !DILocation(line: 76, column: 61, scope: !2702)
!2702 = !DILexicalBlockFile(scope: !2703, file: !1003, discriminator: 1)
!2703 = distinct !DILexicalBlock(scope: !1002, file: !1003, line: 76, column: 8)
!2704 = !DILocation(line: 76, column: 101, scope: !2702)
!2705 = !DILocation(line: 76, column: 154, scope: !2702)
!2706 = !DILocation(line: 76, column: 178, scope: !2702)
!2707 = !DILocation(line: 76, column: 165, scope: !2702)
!2708 = !DILocation(line: 76, column: 200, scope: !2702)
!2709 = !DILocation(line: 76, column: 227, scope: !2702)
!2710 = !DILocation(line: 76, column: 249, scope: !2702)
!2711 = !DILocation(line: 76, column: 271, scope: !2702)
!2712 = !DILocation(line: 76, column: 108, scope: !2702)
!2713 = !DILocation(line: 76, column: 16, scope: !2702)
!2714 = !DILocation(line: 77, column: 5, scope: !1002)
!2715 = distinct !{!2715, !2714}
!2716 = !DILocation(line: 77, column: 61, scope: !2717)
!2717 = !DILexicalBlockFile(scope: !2718, file: !1003, discriminator: 1)
!2718 = distinct !DILexicalBlock(scope: !1002, file: !1003, line: 77, column: 8)
!2719 = !DILocation(line: 77, column: 101, scope: !2717)
!2720 = !DILocation(line: 77, column: 154, scope: !2717)
!2721 = !DILocation(line: 77, column: 178, scope: !2717)
!2722 = !DILocation(line: 77, column: 165, scope: !2717)
!2723 = !DILocation(line: 77, column: 200, scope: !2717)
!2724 = !DILocation(line: 77, column: 227, scope: !2717)
!2725 = !DILocation(line: 77, column: 249, scope: !2717)
!2726 = !DILocation(line: 77, column: 271, scope: !2717)
!2727 = !DILocation(line: 77, column: 108, scope: !2717)
!2728 = !DILocation(line: 77, column: 16, scope: !2717)
!2729 = !DILocation(line: 79, column: 5, scope: !1002)
!2730 = !DILocation(line: 81, column: 5, scope: !1002)
!2731 = !DILocation(line: 82, column: 1, scope: !1002)
!2732 = distinct !DISubprogram(name: "aacsbr_tableinit", scope: !1003, file: !1003, line: 37, type: !1004, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!2733 = !DILocalVariable(name: "n", scope: !2732, file: !1003, line: 39, type: !958)
!2734 = !DIExpression()
!2735 = !DILocation(line: 39, column: 9, scope: !2732)
!2736 = !DILocation(line: 40, column: 12, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2732, file: !1003, line: 40, column: 5)
!2738 = !DILocation(line: 40, column: 10, scope: !2737)
!2739 = !DILocation(line: 40, column: 17, scope: !2740)
!2740 = !DILexicalBlockFile(scope: !2741, file: !1003, discriminator: 1)
!2741 = distinct !DILexicalBlock(scope: !2737, file: !1003, line: 40, column: 5)
!2742 = !DILocation(line: 40, column: 19, scope: !2740)
!2743 = !DILocation(line: 40, column: 5, scope: !2740)
!2744 = !DILocation(line: 41, column: 62, scope: !2741)
!2745 = !DILocation(line: 41, column: 60, scope: !2741)
!2746 = !DILocation(line: 41, column: 38, scope: !2741)
!2747 = !DILocation(line: 41, column: 33, scope: !2741)
!2748 = !DILocation(line: 41, column: 31, scope: !2741)
!2749 = !DILocation(line: 41, column: 9, scope: !2741)
!2750 = !DILocation(line: 41, column: 36, scope: !2741)
!2751 = !DILocation(line: 40, column: 27, scope: !2752)
!2752 = !DILexicalBlockFile(scope: !2741, file: !1003, discriminator: 2)
!2753 = !DILocation(line: 40, column: 5, scope: !2752)
!2754 = distinct !{!2754, !2755}
!2755 = !DILocation(line: 40, column: 5, scope: !2732)
!2756 = !DILocation(line: 42, column: 31, scope: !2732)
!2757 = !DILocation(line: 42, column: 30, scope: !2732)
!2758 = !DILocation(line: 42, column: 28, scope: !2732)
!2759 = !DILocation(line: 43, column: 31, scope: !2732)
!2760 = !DILocation(line: 43, column: 30, scope: !2732)
!2761 = !DILocation(line: 43, column: 28, scope: !2732)
!2762 = !DILocation(line: 45, column: 12, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2732, file: !1003, line: 45, column: 5)
!2764 = !DILocation(line: 45, column: 10, scope: !2763)
!2765 = !DILocation(line: 45, column: 17, scope: !2766)
!2766 = !DILexicalBlockFile(scope: !2767, file: !1003, discriminator: 1)
!2767 = distinct !DILexicalBlock(scope: !2763, file: !1003, line: 45, column: 5)
!2768 = !DILocation(line: 45, column: 19, scope: !2766)
!2769 = !DILocation(line: 45, column: 5, scope: !2766)
!2770 = !DILocation(line: 46, column: 52, scope: !2767)
!2771 = !DILocation(line: 46, column: 51, scope: !2767)
!2772 = !DILocation(line: 46, column: 32, scope: !2767)
!2773 = !DILocation(line: 46, column: 27, scope: !2767)
!2774 = !DILocation(line: 46, column: 9, scope: !2767)
!2775 = !DILocation(line: 46, column: 30, scope: !2767)
!2776 = !DILocation(line: 45, column: 27, scope: !2777)
!2777 = !DILexicalBlockFile(scope: !2767, file: !1003, discriminator: 2)
!2778 = !DILocation(line: 45, column: 5, scope: !2777)
!2779 = distinct !{!2779, !2780}
!2780 = !DILocation(line: 45, column: 5, scope: !2732)
!2781 = !DILocation(line: 47, column: 1, scope: !2732)
!2782 = distinct !DISubprogram(name: "ff_aac_sbr_ctx_init_fixed", scope: !1003, file: !1003, line: 96, type: !2783, isLocal: false, isDefinition: true, scopeLine: 97, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{null, !1510, !1125, !958}
!2785 = !DILocalVariable(name: "ac", arg: 1, scope: !2782, file: !1003, line: 96, type: !1510)
!2786 = !DILocation(line: 96, column: 66, scope: !2782)
!2787 = !DILocalVariable(name: "sbr", arg: 2, scope: !2782, file: !1003, line: 96, type: !1125)
!2788 = !DILocation(line: 96, column: 95, scope: !2782)
!2789 = !DILocalVariable(name: "id_aac", arg: 3, scope: !2782, file: !1003, line: 96, type: !958)
!2790 = !DILocation(line: 96, column: 104, scope: !2782)
!2791 = !DILocation(line: 98, column: 8, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2782, file: !1003, line: 98, column: 8)
!2793 = !DILocation(line: 98, column: 13, scope: !2792)
!2794 = !DILocation(line: 98, column: 18, scope: !2792)
!2795 = !DILocation(line: 98, column: 8, scope: !2782)
!2796 = !DILocation(line: 99, column: 9, scope: !2792)
!2797 = !DILocation(line: 100, column: 18, scope: !2782)
!2798 = !DILocation(line: 100, column: 23, scope: !2782)
!2799 = !DILocation(line: 100, column: 5, scope: !2782)
!2800 = !DILocation(line: 100, column: 10, scope: !2782)
!2801 = !DILocation(line: 100, column: 16, scope: !2782)
!2802 = !DILocation(line: 101, column: 19, scope: !2782)
!2803 = !DILocation(line: 101, column: 5, scope: !2782)
!2804 = !DILocation(line: 101, column: 10, scope: !2782)
!2805 = !DILocation(line: 101, column: 17, scope: !2782)
!2806 = !DILocation(line: 102, column: 17, scope: !2782)
!2807 = !DILocation(line: 102, column: 5, scope: !2782)
!2808 = !DILocation(line: 103, column: 5, scope: !2782)
!2809 = !DILocation(line: 103, column: 10, scope: !2782)
!2810 = !DILocation(line: 103, column: 18, scope: !2782)
!2811 = !DILocation(line: 103, column: 54, scope: !2782)
!2812 = !DILocation(line: 104, column: 5, scope: !2782)
!2813 = !DILocation(line: 104, column: 10, scope: !2782)
!2814 = !DILocation(line: 104, column: 18, scope: !2782)
!2815 = !DILocation(line: 104, column: 54, scope: !2782)
!2816 = !DILocation(line: 108, column: 28, scope: !2782)
!2817 = !DILocation(line: 108, column: 33, scope: !2782)
!2818 = !DILocation(line: 108, column: 5, scope: !2782)
!2819 = !DILocation(line: 109, column: 28, scope: !2782)
!2820 = !DILocation(line: 109, column: 33, scope: !2782)
!2821 = !DILocation(line: 109, column: 5, scope: !2782)
!2822 = !DILocation(line: 110, column: 27, scope: !2782)
!2823 = !DILocation(line: 110, column: 32, scope: !2782)
!2824 = !DILocation(line: 110, column: 5, scope: !2782)
!2825 = !DILocation(line: 111, column: 27, scope: !2782)
!2826 = !DILocation(line: 111, column: 32, scope: !2782)
!2827 = !DILocation(line: 111, column: 5, scope: !2782)
!2828 = !DILocation(line: 112, column: 27, scope: !2782)
!2829 = !DILocation(line: 112, column: 32, scope: !2782)
!2830 = !DILocation(line: 112, column: 5, scope: !2782)
!2831 = !DILocation(line: 113, column: 1, scope: !2782)
!2832 = !DILocation(line: 113, column: 1, scope: !2833)
!2833 = !DILexicalBlockFile(scope: !2782, file: !1003, discriminator: 1)
!2834 = distinct !DISubprogram(name: "sbr_turnoff", scope: !1003, file: !1003, line: 85, type: !1123, isLocal: true, isDefinition: true, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!2835 = !DILocalVariable(name: "sbr", arg: 1, scope: !2834, file: !1003, line: 85, type: !1125)
!2836 = !DILocation(line: 85, column: 50, scope: !2834)
!2837 = !DILocation(line: 86, column: 5, scope: !2834)
!2838 = !DILocation(line: 86, column: 10, scope: !2834)
!2839 = !DILocation(line: 86, column: 16, scope: !2834)
!2840 = !DILocation(line: 87, column: 5, scope: !2834)
!2841 = !DILocation(line: 87, column: 10, scope: !2834)
!2842 = !DILocation(line: 87, column: 28, scope: !2834)
!2843 = !DILocation(line: 89, column: 5, scope: !2834)
!2844 = !DILocation(line: 89, column: 10, scope: !2834)
!2845 = !DILocation(line: 89, column: 16, scope: !2834)
!2846 = !DILocation(line: 90, column: 5, scope: !2834)
!2847 = !DILocation(line: 90, column: 10, scope: !2834)
!2848 = !DILocation(line: 90, column: 15, scope: !2834)
!2849 = !DILocation(line: 92, column: 27, scope: !2834)
!2850 = !DILocation(line: 92, column: 32, scope: !2834)
!2851 = !DILocation(line: 92, column: 40, scope: !2834)
!2852 = !DILocation(line: 92, column: 47, scope: !2834)
!2853 = !DILocation(line: 92, column: 5, scope: !2834)
!2854 = !DILocation(line: 92, column: 10, scope: !2834)
!2855 = !DILocation(line: 92, column: 18, scope: !2834)
!2856 = !DILocation(line: 92, column: 25, scope: !2834)
!2857 = !DILocation(line: 93, column: 13, scope: !2834)
!2858 = !DILocation(line: 93, column: 18, scope: !2834)
!2859 = !DILocation(line: 93, column: 5, scope: !2834)
!2860 = !DILocation(line: 94, column: 1, scope: !2834)
!2861 = distinct !DISubprogram(name: "aacsbr_func_ptr_init", scope: !1003, file: !1003, line: 1572, type: !2862, isLocal: true, isDefinition: true, scopeLine: 1573, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!2862 = !DISubroutineType(types: !2863)
!2863 = !{null, !2864}
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64, align: 64)
!2865 = !DILocalVariable(name: "c", arg: 1, scope: !2861, file: !1003, line: 1572, type: !2864)
!2866 = !DILocation(line: 1572, column: 49, scope: !2861)
!2867 = !DILocation(line: 1574, column: 5, scope: !2861)
!2868 = !DILocation(line: 1574, column: 8, scope: !2861)
!2869 = !DILocation(line: 1574, column: 19, scope: !2861)
!2870 = !DILocation(line: 1575, column: 5, scope: !2861)
!2871 = !DILocation(line: 1575, column: 8, scope: !2861)
!2872 = !DILocation(line: 1575, column: 24, scope: !2861)
!2873 = !DILocation(line: 1576, column: 5, scope: !2861)
!2874 = !DILocation(line: 1576, column: 8, scope: !2861)
!2875 = !DILocation(line: 1576, column: 18, scope: !2861)
!2876 = !DILocation(line: 1577, column: 5, scope: !2861)
!2877 = !DILocation(line: 1577, column: 8, scope: !2861)
!2878 = !DILocation(line: 1577, column: 30, scope: !2861)
!2879 = !DILocation(line: 1583, column: 1, scope: !2861)
!2880 = distinct !DISubprogram(name: "ff_aac_sbr_ctx_close_fixed", scope: !1003, file: !1003, line: 115, type: !1123, isLocal: false, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!2881 = !DILocalVariable(name: "sbr", arg: 1, scope: !2880, file: !1003, line: 115, type: !1125)
!2882 = !DILocation(line: 115, column: 80, scope: !2880)
!2883 = !DILocation(line: 117, column: 27, scope: !2880)
!2884 = !DILocation(line: 117, column: 32, scope: !2880)
!2885 = !DILocation(line: 117, column: 5, scope: !2880)
!2886 = !DILocation(line: 118, column: 27, scope: !2880)
!2887 = !DILocation(line: 118, column: 32, scope: !2880)
!2888 = !DILocation(line: 118, column: 5, scope: !2880)
!2889 = !DILocation(line: 119, column: 1, scope: !2880)
!2890 = distinct !DISubprogram(name: "ff_decode_sbr_extension_fixed", scope: !1003, file: !1003, line: 1115, type: !2891, isLocal: false, isDefinition: true, scopeLine: 1117, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!2891 = !DISubroutineType(types: !2892)
!2892 = !{!958, !1510, !1125, !2893, !958, !958, !958}
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64, align: 64)
!2894 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !2895, line: 70, baseType: !2896)
!2895 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !2895, line: 61, size: 256, align: 64, elements: !2897)
!2897 = !{!2898, !2899, !2900, !2901, !2902}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2896, file: !2895, line: 62, baseType: !1632, size: 64, align: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2896, file: !2895, line: 62, baseType: !1632, size: 64, align: 64, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2896, file: !2895, line: 67, baseType: !958, size: 32, align: 32, offset: 128)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !2896, file: !2895, line: 68, baseType: !958, size: 32, align: 32, offset: 160)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !2896, file: !2895, line: 69, baseType: !958, size: 32, align: 32, offset: 192)
!2903 = !DILocalVariable(name: "ac", arg: 1, scope: !2890, file: !1003, line: 1115, type: !1510)
!2904 = !DILocation(line: 1115, column: 47, scope: !2890)
!2905 = !DILocalVariable(name: "sbr", arg: 2, scope: !2890, file: !1003, line: 1115, type: !1125)
!2906 = !DILocation(line: 1115, column: 76, scope: !2890)
!2907 = !DILocalVariable(name: "gb_host", arg: 3, scope: !2890, file: !1003, line: 1116, type: !2893)
!2908 = !DILocation(line: 1116, column: 44, scope: !2890)
!2909 = !DILocalVariable(name: "crc", arg: 4, scope: !2890, file: !1003, line: 1116, type: !958)
!2910 = !DILocation(line: 1116, column: 57, scope: !2890)
!2911 = !DILocalVariable(name: "cnt", arg: 5, scope: !2890, file: !1003, line: 1116, type: !958)
!2912 = !DILocation(line: 1116, column: 66, scope: !2890)
!2913 = !DILocalVariable(name: "id_aac", arg: 6, scope: !2890, file: !1003, line: 1116, type: !958)
!2914 = !DILocation(line: 1116, column: 75, scope: !2890)
!2915 = !DILocalVariable(name: "num_sbr_bits", scope: !2890, file: !1003, line: 1118, type: !985)
!2916 = !DILocation(line: 1118, column: 18, scope: !2890)
!2917 = !DILocalVariable(name: "num_align_bits", scope: !2890, file: !1003, line: 1118, type: !985)
!2918 = !DILocation(line: 1118, column: 36, scope: !2890)
!2919 = !DILocalVariable(name: "bytes_read", scope: !2890, file: !1003, line: 1119, type: !985)
!2920 = !DILocation(line: 1119, column: 14, scope: !2890)
!2921 = !DILocalVariable(name: "gbc", scope: !2890, file: !1003, line: 1120, type: !2894)
!2922 = !DILocation(line: 1120, column: 19, scope: !2890)
!2923 = !DILocation(line: 1120, column: 26, scope: !2890)
!2924 = !DILocation(line: 1120, column: 25, scope: !2890)
!2925 = !DILocalVariable(name: "gb", scope: !2890, file: !1003, line: 1120, type: !2893)
!2926 = !DILocation(line: 1120, column: 36, scope: !2890)
!2927 = !DILocation(line: 1121, column: 20, scope: !2890)
!2928 = !DILocation(line: 1121, column: 29, scope: !2890)
!2929 = !DILocation(line: 1121, column: 32, scope: !2890)
!2930 = !DILocation(line: 1121, column: 35, scope: !2890)
!2931 = !DILocation(line: 1121, column: 5, scope: !2890)
!2932 = !DILocation(line: 1123, column: 5, scope: !2890)
!2933 = !DILocation(line: 1123, column: 10, scope: !2890)
!2934 = !DILocation(line: 1123, column: 16, scope: !2890)
!2935 = !DILocation(line: 1125, column: 10, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2890, file: !1003, line: 1125, column: 9)
!2937 = !DILocation(line: 1125, column: 15, scope: !2936)
!2938 = !DILocation(line: 1125, column: 9, scope: !2890)
!2939 = !DILocation(line: 1126, column: 32, scope: !2936)
!2940 = !DILocation(line: 1126, column: 36, scope: !2936)
!2941 = !DILocation(line: 1126, column: 42, scope: !2936)
!2942 = !DILocation(line: 1126, column: 47, scope: !2936)
!2943 = !DILocation(line: 1126, column: 30, scope: !2936)
!2944 = !DILocation(line: 1126, column: 9, scope: !2936)
!2945 = !DILocation(line: 1126, column: 14, scope: !2936)
!2946 = !DILocation(line: 1126, column: 26, scope: !2936)
!2947 = !DILocation(line: 1127, column: 10, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2890, file: !1003, line: 1127, column: 9)
!2949 = !DILocation(line: 1127, column: 14, scope: !2948)
!2950 = !DILocation(line: 1127, column: 20, scope: !2948)
!2951 = !DILocation(line: 1127, column: 25, scope: !2948)
!2952 = !DILocation(line: 1127, column: 9, scope: !2890)
!2953 = !DILocation(line: 1128, column: 46, scope: !2948)
!2954 = !DILocation(line: 1128, column: 50, scope: !2948)
!2955 = !DILocation(line: 1128, column: 56, scope: !2948)
!2956 = !DILocation(line: 1128, column: 61, scope: !2948)
!2957 = !DILocation(line: 1128, column: 44, scope: !2948)
!2958 = !DILocation(line: 1128, column: 9, scope: !2948)
!2959 = !DILocation(line: 1128, column: 13, scope: !2948)
!2960 = !DILocation(line: 1128, column: 19, scope: !2948)
!2961 = !DILocation(line: 1128, column: 24, scope: !2948)
!2962 = !DILocation(line: 1128, column: 40, scope: !2948)
!2963 = !DILocation(line: 1130, column: 9, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2890, file: !1003, line: 1130, column: 9)
!2965 = !DILocation(line: 1130, column: 9, scope: !2890)
!2966 = !DILocation(line: 1131, column: 19, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2964, file: !1003, line: 1130, column: 14)
!2968 = !DILocation(line: 1131, column: 9, scope: !2967)
!2969 = !DILocation(line: 1132, column: 22, scope: !2967)
!2970 = !DILocation(line: 1133, column: 5, scope: !2967)
!2971 = !DILocation(line: 1136, column: 18, scope: !2890)
!2972 = !DILocation(line: 1136, column: 23, scope: !2890)
!2973 = !DILocation(line: 1136, column: 5, scope: !2890)
!2974 = !DILocation(line: 1136, column: 10, scope: !2890)
!2975 = !DILocation(line: 1136, column: 16, scope: !2890)
!2976 = !DILocation(line: 1137, column: 17, scope: !2890)
!2977 = !DILocation(line: 1137, column: 22, scope: !2890)
!2978 = !DILocation(line: 1137, column: 5, scope: !2890)
!2979 = !DILocation(line: 1137, column: 10, scope: !2890)
!2980 = !DILocation(line: 1137, column: 15, scope: !2890)
!2981 = !DILocation(line: 1138, column: 5, scope: !2890)
!2982 = !DILocation(line: 1138, column: 10, scope: !2890)
!2983 = !DILocation(line: 1138, column: 26, scope: !2890)
!2984 = !DILocation(line: 1140, column: 17, scope: !2890)
!2985 = !DILocation(line: 1141, column: 19, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2890, file: !1003, line: 1141, column: 9)
!2987 = !DILocation(line: 1141, column: 9, scope: !2986)
!2988 = !DILocation(line: 1141, column: 9, scope: !2890)
!2989 = !DILocation(line: 1142, column: 41, scope: !2986)
!2990 = !DILocation(line: 1142, column: 46, scope: !2986)
!2991 = !DILocation(line: 1142, column: 25, scope: !2986)
!2992 = !DILocation(line: 1142, column: 22, scope: !2986)
!2993 = !DILocation(line: 1142, column: 9, scope: !2986)
!2994 = !DILocation(line: 1144, column: 9, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2890, file: !1003, line: 1144, column: 9)
!2996 = !DILocation(line: 1144, column: 14, scope: !2995)
!2997 = !DILocation(line: 1144, column: 9, scope: !2890)
!2998 = !DILocation(line: 1145, column: 19, scope: !2995)
!2999 = !DILocation(line: 1145, column: 23, scope: !2995)
!3000 = !DILocation(line: 1145, column: 9, scope: !2995)
!3001 = !DILocation(line: 1147, column: 9, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2890, file: !1003, line: 1147, column: 9)
!3003 = !DILocation(line: 1147, column: 14, scope: !3002)
!3004 = !DILocation(line: 1147, column: 9, scope: !2890)
!3005 = !DILocation(line: 1148, column: 39, scope: !3002)
!3006 = !DILocation(line: 1148, column: 43, scope: !3002)
!3007 = !DILocation(line: 1148, column: 48, scope: !3002)
!3008 = !DILocation(line: 1148, column: 52, scope: !3002)
!3009 = !DILocation(line: 1148, column: 25, scope: !3002)
!3010 = !DILocation(line: 1148, column: 22, scope: !3002)
!3011 = !DILocation(line: 1148, column: 9, scope: !3002)
!3012 = !DILocation(line: 1150, column: 24, scope: !2890)
!3013 = !DILocation(line: 1150, column: 28, scope: !2890)
!3014 = !DILocation(line: 1150, column: 34, scope: !2890)
!3015 = !DILocation(line: 1150, column: 40, scope: !2890)
!3016 = !DILocation(line: 1150, column: 38, scope: !2890)
!3017 = !DILocation(line: 1150, column: 54, scope: !2890)
!3018 = !DILocation(line: 1150, column: 20, scope: !2890)
!3019 = !DILocation(line: 1151, column: 20, scope: !2890)
!3020 = !DILocation(line: 1151, column: 35, scope: !2890)
!3021 = !DILocation(line: 1151, column: 33, scope: !2890)
!3022 = !DILocation(line: 1151, column: 50, scope: !2890)
!3023 = !DILocation(line: 1151, column: 55, scope: !2890)
!3024 = !DILocation(line: 1151, column: 16, scope: !2890)
!3025 = !DILocation(line: 1153, column: 9, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !2890, file: !1003, line: 1153, column: 9)
!3027 = !DILocation(line: 1153, column: 22, scope: !3026)
!3028 = !DILocation(line: 1153, column: 20, scope: !3026)
!3029 = !DILocation(line: 1153, column: 9, scope: !2890)
!3030 = !DILocation(line: 1154, column: 16, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3026, file: !1003, line: 1153, column: 27)
!3032 = !DILocation(line: 1154, column: 20, scope: !3031)
!3033 = !DILocation(line: 1155, column: 69, scope: !3031)
!3034 = !DILocation(line: 1155, column: 74, scope: !3031)
!3035 = !DILocation(line: 1154, column: 9, scope: !3031)
!3036 = !DILocation(line: 1156, column: 21, scope: !3031)
!3037 = !DILocation(line: 1156, column: 9, scope: !3031)
!3038 = !DILocation(line: 1157, column: 5, scope: !3031)
!3039 = !DILocation(line: 1158, column: 12, scope: !2890)
!3040 = !DILocation(line: 1158, column: 5, scope: !2890)
!3041 = distinct !DISubprogram(name: "skip_bits_long", scope: !2895, file: !2895, line: 293, type: !3042, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{null, !2893, !958}
!3044 = !DILocalVariable(name: "a", arg: 1, scope: !3045, file: !3046, line: 127, type: !958)
!3045 = distinct !DISubprogram(name: "av_clip_c", scope: !3046, file: !3046, line: 127, type: !3047, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!3046 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3047 = !DISubroutineType(types: !3048)
!3048 = !{!958, !958, !958, !958}
!3049 = !DILocation(line: 127, column: 87, scope: !3045, inlinedAt: !3050)
!3050 = distinct !DILocation(line: 301, column: 17, scope: !3041)
!3051 = !DILocalVariable(name: "amin", arg: 2, scope: !3045, file: !3046, line: 127, type: !958)
!3052 = !DILocation(line: 127, column: 94, scope: !3045, inlinedAt: !3050)
!3053 = !DILocalVariable(name: "amax", arg: 3, scope: !3045, file: !3046, line: 127, type: !958)
!3054 = !DILocation(line: 127, column: 104, scope: !3045, inlinedAt: !3050)
!3055 = !DILocalVariable(name: "s", arg: 1, scope: !3041, file: !2895, line: 293, type: !2893)
!3056 = !DILocation(line: 293, column: 50, scope: !3041)
!3057 = !DILocalVariable(name: "n", arg: 2, scope: !3041, file: !2895, line: 293, type: !958)
!3058 = !DILocation(line: 293, column: 57, scope: !3041)
!3059 = !DILocation(line: 301, column: 27, scope: !3041)
!3060 = !DILocation(line: 301, column: 31, scope: !3041)
!3061 = !DILocation(line: 301, column: 34, scope: !3041)
!3062 = !DILocation(line: 301, column: 30, scope: !3041)
!3063 = !DILocation(line: 301, column: 41, scope: !3041)
!3064 = !DILocation(line: 301, column: 44, scope: !3041)
!3065 = !DILocation(line: 301, column: 65, scope: !3041)
!3066 = !DILocation(line: 301, column: 68, scope: !3041)
!3067 = !DILocation(line: 301, column: 63, scope: !3041)
!3068 = !DILocation(line: 301, column: 17, scope: !3041)
!3069 = !DILocation(line: 132, column: 9, scope: !3070, inlinedAt: !3050)
!3070 = distinct !DILexicalBlock(scope: !3045, file: !3046, line: 132, column: 9)
!3071 = !DILocation(line: 132, column: 13, scope: !3070, inlinedAt: !3050)
!3072 = !DILocation(line: 132, column: 11, scope: !3070, inlinedAt: !3050)
!3073 = !DILocation(line: 132, column: 9, scope: !3045, inlinedAt: !3050)
!3074 = !DILocation(line: 132, column: 26, scope: !3075, inlinedAt: !3050)
!3075 = !DILexicalBlockFile(scope: !3070, file: !3046, discriminator: 1)
!3076 = !DILocation(line: 132, column: 19, scope: !3075, inlinedAt: !3050)
!3077 = !DILocation(line: 133, column: 14, scope: !3078, inlinedAt: !3050)
!3078 = distinct !DILexicalBlock(scope: !3070, file: !3046, line: 133, column: 14)
!3079 = !DILocation(line: 133, column: 18, scope: !3078, inlinedAt: !3050)
!3080 = !DILocation(line: 133, column: 16, scope: !3078, inlinedAt: !3050)
!3081 = !DILocation(line: 133, column: 14, scope: !3070, inlinedAt: !3050)
!3082 = !DILocation(line: 133, column: 31, scope: !3083, inlinedAt: !3050)
!3083 = !DILexicalBlockFile(scope: !3078, file: !3046, discriminator: 1)
!3084 = !DILocation(line: 133, column: 24, scope: !3083, inlinedAt: !3050)
!3085 = !DILocation(line: 134, column: 17, scope: !3078, inlinedAt: !3050)
!3086 = !DILocation(line: 134, column: 10, scope: !3078, inlinedAt: !3050)
!3087 = !DILocation(line: 135, column: 1, scope: !3045, inlinedAt: !3050)
!3088 = !DILocation(line: 301, column: 5, scope: !3041)
!3089 = !DILocation(line: 301, column: 8, scope: !3041)
!3090 = !DILocation(line: 301, column: 14, scope: !3041)
!3091 = !DILocation(line: 304, column: 1, scope: !3041)
!3092 = distinct !DISubprogram(name: "skip_bits", scope: !2895, file: !2895, line: 460, type: !3042, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!3093 = !DILocalVariable(name: "s", arg: 1, scope: !3092, file: !2895, line: 460, type: !2893)
!3094 = !DILocation(line: 460, column: 45, scope: !3092)
!3095 = !DILocalVariable(name: "n", arg: 2, scope: !3092, file: !2895, line: 460, type: !958)
!3096 = !DILocation(line: 460, column: 52, scope: !3092)
!3097 = !DILocalVariable(name: "re_index", scope: !3092, file: !2895, line: 481, type: !985)
!3098 = !DILocation(line: 481, column: 18, scope: !3092)
!3099 = !DILocation(line: 481, column: 30, scope: !3092)
!3100 = !DILocation(line: 481, column: 34, scope: !3092)
!3101 = !DILocalVariable(name: "re_cache", scope: !3092, file: !2895, line: 481, type: !985)
!3102 = !DILocation(line: 481, column: 78, scope: !3092)
!3103 = !DILocalVariable(name: "re_size_plus8", scope: !3092, file: !2895, line: 481, type: !985)
!3104 = !DILocation(line: 481, column: 101, scope: !3092)
!3105 = !DILocation(line: 481, column: 118, scope: !3092)
!3106 = !DILocation(line: 481, column: 122, scope: !3092)
!3107 = !DILocation(line: 482, column: 18, scope: !3092)
!3108 = !DILocation(line: 482, column: 36, scope: !3092)
!3109 = !DILocation(line: 482, column: 48, scope: !3092)
!3110 = !DILocation(line: 482, column: 45, scope: !3092)
!3111 = !DILocation(line: 482, column: 33, scope: !3092)
!3112 = !DILocation(line: 482, column: 17, scope: !3092)
!3113 = !DILocation(line: 482, column: 55, scope: !3114)
!3114 = !DILexicalBlockFile(scope: !3092, file: !2895, discriminator: 1)
!3115 = !DILocation(line: 482, column: 67, scope: !3114)
!3116 = !DILocation(line: 482, column: 64, scope: !3114)
!3117 = !DILocation(line: 482, column: 17, scope: !3114)
!3118 = !DILocation(line: 482, column: 74, scope: !3119)
!3119 = !DILexicalBlockFile(scope: !3092, file: !2895, discriminator: 2)
!3120 = !DILocation(line: 482, column: 17, scope: !3119)
!3121 = !DILocation(line: 482, column: 17, scope: !3122)
!3122 = !DILexicalBlockFile(scope: !3092, file: !2895, discriminator: 3)
!3123 = !DILocation(line: 482, column: 14, scope: !3122)
!3124 = !DILocation(line: 483, column: 18, scope: !3092)
!3125 = !DILocation(line: 483, column: 6, scope: !3092)
!3126 = !DILocation(line: 483, column: 10, scope: !3092)
!3127 = !DILocation(line: 483, column: 16, scope: !3092)
!3128 = !DILocation(line: 485, column: 1, scope: !3092)
!3129 = distinct !DISubprogram(name: "get_bits1", scope: !2895, file: !2895, line: 487, type: !3130, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{!985, !2893}
!3132 = !DILocalVariable(name: "s", arg: 1, scope: !3129, file: !2895, line: 487, type: !2893)
!3133 = !DILocation(line: 487, column: 53, scope: !3129)
!3134 = !DILocalVariable(name: "index", scope: !3129, file: !2895, line: 499, type: !985)
!3135 = !DILocation(line: 499, column: 18, scope: !3129)
!3136 = !DILocation(line: 499, column: 26, scope: !3129)
!3137 = !DILocation(line: 499, column: 29, scope: !3129)
!3138 = !DILocalVariable(name: "result", scope: !3129, file: !2895, line: 500, type: !986)
!3139 = !DILocation(line: 500, column: 13, scope: !3129)
!3140 = !DILocation(line: 500, column: 32, scope: !3129)
!3141 = !DILocation(line: 500, column: 38, scope: !3129)
!3142 = !DILocation(line: 500, column: 22, scope: !3129)
!3143 = !DILocation(line: 500, column: 25, scope: !3129)
!3144 = !DILocation(line: 505, column: 16, scope: !3129)
!3145 = !DILocation(line: 505, column: 22, scope: !3129)
!3146 = !DILocation(line: 505, column: 12, scope: !3129)
!3147 = !DILocation(line: 506, column: 12, scope: !3129)
!3148 = !DILocation(line: 509, column: 9, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3129, file: !2895, line: 509, column: 9)
!3150 = !DILocation(line: 509, column: 12, scope: !3149)
!3151 = !DILocation(line: 509, column: 20, scope: !3149)
!3152 = !DILocation(line: 509, column: 23, scope: !3149)
!3153 = !DILocation(line: 509, column: 18, scope: !3149)
!3154 = !DILocation(line: 509, column: 9, scope: !3129)
!3155 = !DILocation(line: 511, column: 14, scope: !3149)
!3156 = !DILocation(line: 511, column: 9, scope: !3149)
!3157 = !DILocation(line: 512, column: 16, scope: !3129)
!3158 = !DILocation(line: 512, column: 5, scope: !3129)
!3159 = !DILocation(line: 512, column: 8, scope: !3129)
!3160 = !DILocation(line: 512, column: 14, scope: !3129)
!3161 = !DILocation(line: 514, column: 12, scope: !3129)
!3162 = !DILocation(line: 514, column: 5, scope: !3129)
!3163 = distinct !DISubprogram(name: "read_sbr_header", scope: !1003, file: !1003, line: 187, type: !3164, isLocal: true, isDefinition: true, scopeLine: 188, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!3164 = !DISubroutineType(types: !3165)
!3165 = !{!985, !1125, !2893}
!3166 = !DILocalVariable(name: "sbr", arg: 1, scope: !3163, file: !1003, line: 187, type: !1125)
!3167 = !DILocation(line: 187, column: 62, scope: !3163)
!3168 = !DILocalVariable(name: "gb", arg: 2, scope: !3163, file: !1003, line: 187, type: !2893)
!3169 = !DILocation(line: 187, column: 82, scope: !3163)
!3170 = !DILocalVariable(name: "cnt", scope: !3163, file: !1003, line: 189, type: !985)
!3171 = !DILocation(line: 189, column: 18, scope: !3163)
!3172 = !DILocation(line: 189, column: 39, scope: !3163)
!3173 = !DILocation(line: 189, column: 24, scope: !3163)
!3174 = !DILocalVariable(name: "bs_header_extra_1", scope: !3163, file: !1003, line: 190, type: !986)
!3175 = !DILocation(line: 190, column: 13, scope: !3163)
!3176 = !DILocalVariable(name: "bs_header_extra_2", scope: !3163, file: !1003, line: 191, type: !986)
!3177 = !DILocation(line: 191, column: 13, scope: !3163)
!3178 = !DILocalVariable(name: "old_bs_limiter_bands", scope: !3163, file: !1003, line: 192, type: !958)
!3179 = !DILocation(line: 192, column: 9, scope: !3163)
!3180 = !DILocation(line: 192, column: 32, scope: !3163)
!3181 = !DILocation(line: 192, column: 37, scope: !3163)
!3182 = !DILocalVariable(name: "old_spectrum_params", scope: !3163, file: !1003, line: 193, type: !1136)
!3183 = !DILocation(line: 193, column: 24, scope: !3163)
!3184 = !DILocation(line: 195, column: 5, scope: !3163)
!3185 = !DILocation(line: 195, column: 10, scope: !3163)
!3186 = !DILocation(line: 195, column: 16, scope: !3163)
!3187 = !DILocation(line: 196, column: 5, scope: !3163)
!3188 = !DILocation(line: 196, column: 10, scope: !3163)
!3189 = !DILocation(line: 196, column: 28, scope: !3163)
!3190 = !DILocation(line: 199, column: 5, scope: !3163)
!3191 = !DILocation(line: 199, column: 35, scope: !3163)
!3192 = !DILocation(line: 199, column: 40, scope: !3163)
!3193 = !DILocation(line: 201, column: 40, scope: !3163)
!3194 = !DILocation(line: 201, column: 30, scope: !3163)
!3195 = !DILocation(line: 201, column: 5, scope: !3163)
!3196 = !DILocation(line: 201, column: 10, scope: !3163)
!3197 = !DILocation(line: 201, column: 28, scope: !3163)
!3198 = !DILocation(line: 202, column: 51, scope: !3163)
!3199 = !DILocation(line: 202, column: 42, scope: !3163)
!3200 = !DILocation(line: 202, column: 5, scope: !3163)
!3201 = !DILocation(line: 202, column: 10, scope: !3163)
!3202 = !DILocation(line: 202, column: 26, scope: !3163)
!3203 = !DILocation(line: 202, column: 40, scope: !3163)
!3204 = !DILocation(line: 203, column: 50, scope: !3163)
!3205 = !DILocation(line: 203, column: 41, scope: !3163)
!3206 = !DILocation(line: 203, column: 5, scope: !3163)
!3207 = !DILocation(line: 203, column: 10, scope: !3163)
!3208 = !DILocation(line: 203, column: 26, scope: !3163)
!3209 = !DILocation(line: 203, column: 39, scope: !3163)
!3210 = !DILocation(line: 204, column: 51, scope: !3163)
!3211 = !DILocation(line: 204, column: 42, scope: !3163)
!3212 = !DILocation(line: 204, column: 5, scope: !3163)
!3213 = !DILocation(line: 204, column: 10, scope: !3163)
!3214 = !DILocation(line: 204, column: 26, scope: !3163)
!3215 = !DILocation(line: 204, column: 40, scope: !3163)
!3216 = !DILocation(line: 205, column: 53, scope: !3163)
!3217 = !DILocation(line: 205, column: 43, scope: !3163)
!3218 = !DILocation(line: 207, column: 35, scope: !3163)
!3219 = !DILocation(line: 207, column: 25, scope: !3163)
!3220 = !DILocation(line: 207, column: 23, scope: !3163)
!3221 = !DILocation(line: 208, column: 35, scope: !3163)
!3222 = !DILocation(line: 208, column: 25, scope: !3163)
!3223 = !DILocation(line: 208, column: 23, scope: !3163)
!3224 = !DILocation(line: 210, column: 9, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3163, file: !1003, line: 210, column: 9)
!3226 = !DILocation(line: 210, column: 9, scope: !3163)
!3227 = !DILocation(line: 211, column: 55, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3225, file: !1003, line: 210, column: 28)
!3229 = !DILocation(line: 211, column: 46, scope: !3228)
!3230 = !DILocation(line: 211, column: 9, scope: !3228)
!3231 = !DILocation(line: 211, column: 14, scope: !3228)
!3232 = !DILocation(line: 211, column: 30, scope: !3228)
!3233 = !DILocation(line: 211, column: 44, scope: !3228)
!3234 = !DILocation(line: 212, column: 57, scope: !3228)
!3235 = !DILocation(line: 212, column: 47, scope: !3228)
!3236 = !DILocation(line: 212, column: 9, scope: !3228)
!3237 = !DILocation(line: 212, column: 14, scope: !3228)
!3238 = !DILocation(line: 212, column: 30, scope: !3228)
!3239 = !DILocation(line: 212, column: 45, scope: !3228)
!3240 = !DILocation(line: 213, column: 56, scope: !3228)
!3241 = !DILocation(line: 213, column: 47, scope: !3228)
!3242 = !DILocation(line: 213, column: 9, scope: !3228)
!3243 = !DILocation(line: 213, column: 14, scope: !3228)
!3244 = !DILocation(line: 213, column: 30, scope: !3228)
!3245 = !DILocation(line: 213, column: 45, scope: !3228)
!3246 = !DILocation(line: 214, column: 5, scope: !3228)
!3247 = !DILocation(line: 215, column: 9, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3225, file: !1003, line: 214, column: 12)
!3249 = !DILocation(line: 215, column: 14, scope: !3248)
!3250 = !DILocation(line: 215, column: 30, scope: !3248)
!3251 = !DILocation(line: 215, column: 44, scope: !3248)
!3252 = !DILocation(line: 216, column: 9, scope: !3248)
!3253 = !DILocation(line: 216, column: 14, scope: !3248)
!3254 = !DILocation(line: 216, column: 30, scope: !3248)
!3255 = !DILocation(line: 216, column: 45, scope: !3248)
!3256 = !DILocation(line: 217, column: 9, scope: !3248)
!3257 = !DILocation(line: 217, column: 14, scope: !3248)
!3258 = !DILocation(line: 217, column: 30, scope: !3248)
!3259 = !DILocation(line: 217, column: 45, scope: !3248)
!3260 = !DILocation(line: 221, column: 16, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3163, file: !1003, line: 221, column: 9)
!3262 = !DILocation(line: 221, column: 39, scope: !3261)
!3263 = !DILocation(line: 221, column: 44, scope: !3261)
!3264 = !DILocation(line: 221, column: 38, scope: !3261)
!3265 = !DILocation(line: 221, column: 9, scope: !3261)
!3266 = !DILocation(line: 221, column: 9, scope: !3163)
!3267 = !DILocation(line: 222, column: 9, scope: !3261)
!3268 = !DILocation(line: 222, column: 14, scope: !3261)
!3269 = !DILocation(line: 222, column: 20, scope: !3261)
!3270 = !DILocation(line: 224, column: 9, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3163, file: !1003, line: 224, column: 9)
!3272 = !DILocation(line: 224, column: 9, scope: !3163)
!3273 = !DILocation(line: 225, column: 42, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3271, file: !1003, line: 224, column: 28)
!3275 = !DILocation(line: 225, column: 33, scope: !3274)
!3276 = !DILocation(line: 225, column: 9, scope: !3274)
!3277 = !DILocation(line: 225, column: 14, scope: !3274)
!3278 = !DILocation(line: 225, column: 31, scope: !3274)
!3279 = !DILocation(line: 226, column: 42, scope: !3274)
!3280 = !DILocation(line: 226, column: 33, scope: !3274)
!3281 = !DILocation(line: 226, column: 9, scope: !3274)
!3282 = !DILocation(line: 226, column: 14, scope: !3274)
!3283 = !DILocation(line: 226, column: 31, scope: !3274)
!3284 = !DILocation(line: 227, column: 43, scope: !3274)
!3285 = !DILocation(line: 227, column: 33, scope: !3274)
!3286 = !DILocation(line: 227, column: 9, scope: !3274)
!3287 = !DILocation(line: 227, column: 14, scope: !3274)
!3288 = !DILocation(line: 227, column: 31, scope: !3274)
!3289 = !DILocation(line: 228, column: 44, scope: !3274)
!3290 = !DILocation(line: 228, column: 34, scope: !3274)
!3291 = !DILocation(line: 228, column: 9, scope: !3274)
!3292 = !DILocation(line: 228, column: 14, scope: !3274)
!3293 = !DILocation(line: 228, column: 32, scope: !3274)
!3294 = !DILocation(line: 229, column: 5, scope: !3274)
!3295 = !DILocation(line: 230, column: 9, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3271, file: !1003, line: 229, column: 12)
!3297 = !DILocation(line: 230, column: 14, scope: !3296)
!3298 = !DILocation(line: 230, column: 31, scope: !3296)
!3299 = !DILocation(line: 231, column: 9, scope: !3296)
!3300 = !DILocation(line: 231, column: 14, scope: !3296)
!3301 = !DILocation(line: 231, column: 31, scope: !3296)
!3302 = !DILocation(line: 232, column: 9, scope: !3296)
!3303 = !DILocation(line: 232, column: 14, scope: !3296)
!3304 = !DILocation(line: 232, column: 31, scope: !3296)
!3305 = !DILocation(line: 233, column: 9, scope: !3296)
!3306 = !DILocation(line: 233, column: 14, scope: !3296)
!3307 = !DILocation(line: 233, column: 32, scope: !3296)
!3308 = !DILocation(line: 236, column: 9, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3163, file: !1003, line: 236, column: 9)
!3310 = !DILocation(line: 236, column: 14, scope: !3309)
!3311 = !DILocation(line: 236, column: 34, scope: !3309)
!3312 = !DILocation(line: 236, column: 31, scope: !3309)
!3313 = !DILocation(line: 236, column: 55, scope: !3309)
!3314 = !DILocation(line: 236, column: 59, scope: !3315)
!3315 = !DILexicalBlockFile(scope: !3309, file: !1003, discriminator: 1)
!3316 = !DILocation(line: 236, column: 64, scope: !3315)
!3317 = !DILocation(line: 236, column: 9, scope: !3315)
!3318 = !DILocation(line: 237, column: 29, scope: !3309)
!3319 = !DILocation(line: 237, column: 9, scope: !3309)
!3320 = !DILocation(line: 239, column: 27, scope: !3163)
!3321 = !DILocation(line: 239, column: 12, scope: !3163)
!3322 = !DILocation(line: 239, column: 33, scope: !3163)
!3323 = !DILocation(line: 239, column: 31, scope: !3163)
!3324 = !DILocation(line: 239, column: 5, scope: !3163)
!3325 = distinct !DISubprogram(name: "sbr_reset", scope: !1003, file: !1003, line: 1094, type: !3326, isLocal: true, isDefinition: true, scopeLine: 1095, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!3326 = !DISubroutineType(types: !3327)
!3327 = !{null, !1510, !1125}
!3328 = !DILocalVariable(name: "ac", arg: 1, scope: !3325, file: !1003, line: 1094, type: !1510)
!3329 = !DILocation(line: 1094, column: 35, scope: !3325)
!3330 = !DILocalVariable(name: "sbr", arg: 2, scope: !3325, file: !1003, line: 1094, type: !1125)
!3331 = !DILocation(line: 1094, column: 64, scope: !3325)
!3332 = !DILocalVariable(name: "err", scope: !3325, file: !1003, line: 1096, type: !958)
!3333 = !DILocation(line: 1096, column: 9, scope: !3325)
!3334 = !DILocation(line: 1097, column: 29, scope: !3325)
!3335 = !DILocation(line: 1097, column: 33, scope: !3325)
!3336 = !DILocation(line: 1097, column: 39, scope: !3325)
!3337 = !DILocation(line: 1097, column: 44, scope: !3325)
!3338 = !DILocation(line: 1097, column: 11, scope: !3325)
!3339 = !DILocation(line: 1097, column: 9, scope: !3325)
!3340 = !DILocation(line: 1098, column: 9, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3325, file: !1003, line: 1098, column: 9)
!3342 = !DILocation(line: 1098, column: 13, scope: !3341)
!3343 = !DILocation(line: 1098, column: 9, scope: !3325)
!3344 = !DILocation(line: 1099, column: 34, scope: !3341)
!3345 = !DILocation(line: 1099, column: 38, scope: !3341)
!3346 = !DILocation(line: 1099, column: 15, scope: !3341)
!3347 = !DILocation(line: 1099, column: 13, scope: !3341)
!3348 = !DILocation(line: 1099, column: 9, scope: !3341)
!3349 = !DILocation(line: 1100, column: 9, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3325, file: !1003, line: 1100, column: 9)
!3351 = !DILocation(line: 1100, column: 13, scope: !3350)
!3352 = !DILocation(line: 1100, column: 9, scope: !3325)
!3353 = !DILocation(line: 1101, column: 16, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3350, file: !1003, line: 1100, column: 18)
!3355 = !DILocation(line: 1101, column: 20, scope: !3354)
!3356 = !DILocation(line: 1101, column: 9, scope: !3354)
!3357 = !DILocation(line: 1103, column: 21, scope: !3354)
!3358 = !DILocation(line: 1103, column: 9, scope: !3354)
!3359 = !DILocation(line: 1104, column: 5, scope: !3354)
!3360 = !DILocation(line: 1105, column: 1, scope: !3325)
!3361 = distinct !DISubprogram(name: "read_sbr_data", scope: !1003, file: !1003, line: 1050, type: !3362, isLocal: true, isDefinition: true, scopeLine: 1052, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!3362 = !DISubroutineType(types: !3363)
!3363 = !{!985, !1510, !1125, !2893, !958}
!3364 = !DILocalVariable(name: "ac", arg: 1, scope: !3361, file: !1003, line: 1050, type: !1510)
!3365 = !DILocation(line: 1050, column: 47, scope: !3361)
!3366 = !DILocalVariable(name: "sbr", arg: 2, scope: !3361, file: !1003, line: 1050, type: !1125)
!3367 = !DILocation(line: 1050, column: 76, scope: !3361)
!3368 = !DILocalVariable(name: "gb", arg: 3, scope: !3361, file: !1003, line: 1051, type: !2893)
!3369 = !DILocation(line: 1051, column: 50, scope: !3361)
!3370 = !DILocalVariable(name: "id_aac", arg: 4, scope: !3361, file: !1003, line: 1051, type: !958)
!3371 = !DILocation(line: 1051, column: 58, scope: !3361)
!3372 = !DILocalVariable(name: "cnt", scope: !3361, file: !1003, line: 1053, type: !985)
!3373 = !DILocation(line: 1053, column: 18, scope: !3361)
!3374 = !DILocation(line: 1053, column: 39, scope: !3361)
!3375 = !DILocation(line: 1053, column: 24, scope: !3361)
!3376 = !DILocation(line: 1055, column: 19, scope: !3361)
!3377 = !DILocation(line: 1055, column: 5, scope: !3361)
!3378 = !DILocation(line: 1055, column: 10, scope: !3361)
!3379 = !DILocation(line: 1055, column: 17, scope: !3361)
!3380 = !DILocation(line: 1056, column: 5, scope: !3361)
!3381 = !DILocation(line: 1056, column: 10, scope: !3361)
!3382 = !DILocation(line: 1056, column: 28, scope: !3361)
!3383 = !DILocation(line: 1058, column: 9, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3361, file: !1003, line: 1058, column: 9)
!3385 = !DILocation(line: 1058, column: 16, scope: !3384)
!3386 = !DILocation(line: 1058, column: 28, scope: !3384)
!3387 = !DILocation(line: 1058, column: 31, scope: !3388)
!3388 = !DILexicalBlockFile(scope: !3384, file: !1003, discriminator: 1)
!3389 = !DILocation(line: 1058, column: 38, scope: !3388)
!3390 = !DILocation(line: 1058, column: 9, scope: !3388)
!3391 = !DILocation(line: 1059, column: 45, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !1003, line: 1059, column: 13)
!3393 = distinct !DILexicalBlock(scope: !3384, file: !1003, line: 1058, column: 51)
!3394 = !DILocation(line: 1059, column: 49, scope: !3392)
!3395 = !DILocation(line: 1059, column: 54, scope: !3392)
!3396 = !DILocation(line: 1059, column: 13, scope: !3392)
!3397 = !DILocation(line: 1059, column: 13, scope: !3393)
!3398 = !DILocation(line: 1060, column: 25, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3392, file: !1003, line: 1059, column: 59)
!3400 = !DILocation(line: 1060, column: 13, scope: !3399)
!3401 = !DILocation(line: 1061, column: 35, scope: !3399)
!3402 = !DILocation(line: 1061, column: 20, scope: !3399)
!3403 = !DILocation(line: 1061, column: 41, scope: !3399)
!3404 = !DILocation(line: 1061, column: 39, scope: !3399)
!3405 = !DILocation(line: 1061, column: 13, scope: !3399)
!3406 = !DILocation(line: 1063, column: 5, scope: !3393)
!3407 = !DILocation(line: 1063, column: 16, scope: !3408)
!3408 = !DILexicalBlockFile(scope: !3409, file: !1003, discriminator: 1)
!3409 = distinct !DILexicalBlock(scope: !3384, file: !1003, line: 1063, column: 16)
!3410 = !DILocation(line: 1063, column: 23, scope: !3408)
!3411 = !DILocation(line: 1064, column: 43, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !1003, line: 1064, column: 13)
!3413 = distinct !DILexicalBlock(scope: !3409, file: !1003, line: 1063, column: 36)
!3414 = !DILocation(line: 1064, column: 47, scope: !3412)
!3415 = !DILocation(line: 1064, column: 52, scope: !3412)
!3416 = !DILocation(line: 1064, column: 13, scope: !3412)
!3417 = !DILocation(line: 1064, column: 13, scope: !3413)
!3418 = !DILocation(line: 1065, column: 25, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3412, file: !1003, line: 1064, column: 57)
!3420 = !DILocation(line: 1065, column: 13, scope: !3419)
!3421 = !DILocation(line: 1066, column: 35, scope: !3419)
!3422 = !DILocation(line: 1066, column: 20, scope: !3419)
!3423 = !DILocation(line: 1066, column: 41, scope: !3419)
!3424 = !DILocation(line: 1066, column: 39, scope: !3419)
!3425 = !DILocation(line: 1066, column: 13, scope: !3419)
!3426 = !DILocation(line: 1068, column: 5, scope: !3413)
!3427 = !DILocation(line: 1069, column: 16, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3409, file: !1003, line: 1068, column: 12)
!3429 = !DILocation(line: 1069, column: 20, scope: !3428)
!3430 = !DILocation(line: 1070, column: 74, scope: !3428)
!3431 = !DILocation(line: 1069, column: 9, scope: !3428)
!3432 = !DILocation(line: 1071, column: 21, scope: !3428)
!3433 = !DILocation(line: 1071, column: 9, scope: !3428)
!3434 = !DILocation(line: 1072, column: 31, scope: !3428)
!3435 = !DILocation(line: 1072, column: 16, scope: !3428)
!3436 = !DILocation(line: 1072, column: 37, scope: !3428)
!3437 = !DILocation(line: 1072, column: 35, scope: !3428)
!3438 = !DILocation(line: 1072, column: 9, scope: !3428)
!3439 = !DILocation(line: 1074, column: 19, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3361, file: !1003, line: 1074, column: 9)
!3441 = !DILocation(line: 1074, column: 9, scope: !3440)
!3442 = !DILocation(line: 1074, column: 9, scope: !3361)
!3443 = !DILocalVariable(name: "num_bits_left", scope: !3444, file: !1003, line: 1075, type: !958)
!3444 = distinct !DILexicalBlock(scope: !3440, file: !1003, line: 1074, column: 24)
!3445 = !DILocation(line: 1075, column: 13, scope: !3444)
!3446 = !DILocation(line: 1075, column: 38, scope: !3444)
!3447 = !DILocation(line: 1075, column: 29, scope: !3444)
!3448 = !DILocation(line: 1076, column: 13, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3444, file: !1003, line: 1076, column: 13)
!3450 = !DILocation(line: 1076, column: 27, scope: !3449)
!3451 = !DILocation(line: 1076, column: 13, scope: !3444)
!3452 = !DILocation(line: 1077, column: 39, scope: !3449)
!3453 = !DILocation(line: 1077, column: 30, scope: !3449)
!3454 = !DILocation(line: 1077, column: 27, scope: !3449)
!3455 = !DILocation(line: 1077, column: 13, scope: !3449)
!3456 = !DILocation(line: 1079, column: 23, scope: !3444)
!3457 = !DILocation(line: 1080, column: 9, scope: !3444)
!3458 = !DILocation(line: 1080, column: 16, scope: !3459)
!3459 = !DILexicalBlockFile(scope: !3444, file: !1003, discriminator: 1)
!3460 = !DILocation(line: 1080, column: 30, scope: !3459)
!3461 = !DILocation(line: 1080, column: 9, scope: !3459)
!3462 = !DILocation(line: 1081, column: 27, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3444, file: !1003, line: 1080, column: 35)
!3464 = !DILocation(line: 1082, column: 32, scope: !3463)
!3465 = !DILocation(line: 1082, column: 36, scope: !3463)
!3466 = !DILocation(line: 1082, column: 41, scope: !3463)
!3467 = !DILocation(line: 1082, column: 54, scope: !3463)
!3468 = !DILocation(line: 1082, column: 45, scope: !3463)
!3469 = !DILocation(line: 1082, column: 13, scope: !3470)
!3470 = !DILexicalBlockFile(scope: !3463, file: !1003, discriminator: 1)
!3471 = !DILocation(line: 1080, column: 9, scope: !3472)
!3472 = !DILexicalBlockFile(scope: !3444, file: !1003, discriminator: 2)
!3473 = distinct !{!3473, !3457}
!3474 = !DILocation(line: 1084, column: 13, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3444, file: !1003, line: 1084, column: 13)
!3476 = !DILocation(line: 1084, column: 27, scope: !3475)
!3477 = !DILocation(line: 1084, column: 13, scope: !3444)
!3478 = !DILocation(line: 1085, column: 20, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3475, file: !1003, line: 1084, column: 32)
!3480 = !DILocation(line: 1085, column: 24, scope: !3479)
!3481 = !DILocation(line: 1085, column: 13, scope: !3479)
!3482 = !DILocation(line: 1086, column: 9, scope: !3479)
!3483 = !DILocation(line: 1087, column: 13, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3444, file: !1003, line: 1087, column: 13)
!3485 = !DILocation(line: 1087, column: 27, scope: !3484)
!3486 = !DILocation(line: 1087, column: 13, scope: !3444)
!3487 = !DILocation(line: 1088, column: 23, scope: !3484)
!3488 = !DILocation(line: 1088, column: 27, scope: !3484)
!3489 = !DILocation(line: 1088, column: 13, scope: !3484)
!3490 = !DILocation(line: 1089, column: 5, scope: !3444)
!3491 = !DILocation(line: 1091, column: 27, scope: !3361)
!3492 = !DILocation(line: 1091, column: 12, scope: !3361)
!3493 = !DILocation(line: 1091, column: 33, scope: !3361)
!3494 = !DILocation(line: 1091, column: 31, scope: !3361)
!3495 = !DILocation(line: 1091, column: 5, scope: !3361)
!3496 = !DILocation(line: 1092, column: 1, scope: !3361)
!3497 = distinct !DISubprogram(name: "ff_sbr_apply_fixed", scope: !1003, file: !1003, line: 1479, type: !3498, isLocal: false, isDefinition: true, scopeLine: 1481, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{null, !1510, !1125, !958, !955, !955}
!3500 = !DILocalVariable(name: "ac", arg: 1, scope: !3497, file: !1003, line: 1479, type: !1510)
!3501 = !DILocation(line: 1479, column: 37, scope: !3497)
!3502 = !DILocalVariable(name: "sbr", arg: 2, scope: !3497, file: !1003, line: 1479, type: !1125)
!3503 = !DILocation(line: 1479, column: 66, scope: !3497)
!3504 = !DILocalVariable(name: "id_aac", arg: 3, scope: !3497, file: !1003, line: 1479, type: !958)
!3505 = !DILocation(line: 1479, column: 75, scope: !3497)
!3506 = !DILocalVariable(name: "L", arg: 4, scope: !3497, file: !1003, line: 1480, type: !955)
!3507 = !DILocation(line: 1480, column: 29, scope: !3497)
!3508 = !DILocalVariable(name: "R", arg: 5, scope: !3497, file: !1003, line: 1480, type: !955)
!3509 = !DILocation(line: 1480, column: 42, scope: !3497)
!3510 = !DILocalVariable(name: "downsampled", scope: !3497, file: !1003, line: 1482, type: !958)
!3511 = !DILocation(line: 1482, column: 9, scope: !3497)
!3512 = !DILocation(line: 1482, column: 23, scope: !3497)
!3513 = !DILocation(line: 1482, column: 27, scope: !3497)
!3514 = !DILocation(line: 1482, column: 33, scope: !3497)
!3515 = !DILocation(line: 1482, column: 38, scope: !3497)
!3516 = !DILocation(line: 1482, column: 56, scope: !3497)
!3517 = !DILocation(line: 1482, column: 61, scope: !3497)
!3518 = !DILocation(line: 1482, column: 54, scope: !3497)
!3519 = !DILocalVariable(name: "ch", scope: !3497, file: !1003, line: 1483, type: !958)
!3520 = !DILocation(line: 1483, column: 9, scope: !3497)
!3521 = !DILocalVariable(name: "nch", scope: !3497, file: !1003, line: 1484, type: !958)
!3522 = !DILocation(line: 1484, column: 9, scope: !3497)
!3523 = !DILocation(line: 1484, column: 16, scope: !3497)
!3524 = !DILocation(line: 1484, column: 23, scope: !3497)
!3525 = !DILocation(line: 1484, column: 15, scope: !3497)
!3526 = !DILocalVariable(name: "err", scope: !3497, file: !1003, line: 1485, type: !958)
!3527 = !DILocation(line: 1485, column: 9, scope: !3497)
!3528 = !DILocation(line: 1487, column: 9, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3497, file: !1003, line: 1487, column: 9)
!3530 = !DILocation(line: 1487, column: 19, scope: !3529)
!3531 = !DILocation(line: 1487, column: 24, scope: !3529)
!3532 = !DILocation(line: 1487, column: 16, scope: !3529)
!3533 = !DILocation(line: 1487, column: 9, scope: !3497)
!3534 = !DILocation(line: 1488, column: 16, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3529, file: !1003, line: 1487, column: 32)
!3536 = !DILocation(line: 1488, column: 20, scope: !3535)
!3537 = !DILocation(line: 1488, column: 27, scope: !3535)
!3538 = !DILocation(line: 1488, column: 34, scope: !3535)
!3539 = !DILocation(line: 1489, column: 49, scope: !3535)
!3540 = !DILocation(line: 1489, column: 57, scope: !3535)
!3541 = !DILocation(line: 1489, column: 62, scope: !3535)
!3542 = !DILocation(line: 1488, column: 9, scope: !3535)
!3543 = !DILocation(line: 1490, column: 21, scope: !3535)
!3544 = !DILocation(line: 1490, column: 9, scope: !3535)
!3545 = !DILocation(line: 1491, column: 5, scope: !3535)
!3546 = !DILocation(line: 1493, column: 9, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3497, file: !1003, line: 1493, column: 9)
!3548 = !DILocation(line: 1493, column: 14, scope: !3547)
!3549 = !DILocation(line: 1493, column: 20, scope: !3547)
!3550 = !DILocation(line: 1493, column: 24, scope: !3551)
!3551 = !DILexicalBlockFile(scope: !3547, file: !1003, discriminator: 1)
!3552 = !DILocation(line: 1493, column: 29, scope: !3551)
!3553 = !DILocation(line: 1493, column: 9, scope: !3551)
!3554 = !DILocation(line: 1494, column: 16, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3547, file: !1003, line: 1493, column: 48)
!3556 = !DILocation(line: 1494, column: 20, scope: !3555)
!3557 = !DILocation(line: 1494, column: 9, scope: !3555)
!3558 = !DILocation(line: 1496, column: 21, scope: !3555)
!3559 = !DILocation(line: 1496, column: 9, scope: !3555)
!3560 = !DILocation(line: 1497, column: 5, scope: !3555)
!3561 = !DILocation(line: 1499, column: 10, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3497, file: !1003, line: 1499, column: 9)
!3563 = !DILocation(line: 1499, column: 15, scope: !3562)
!3564 = !DILocation(line: 1499, column: 9, scope: !3497)
!3565 = !DILocation(line: 1500, column: 22, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3562, file: !1003, line: 1499, column: 32)
!3567 = !DILocation(line: 1500, column: 27, scope: !3566)
!3568 = !DILocation(line: 1500, column: 9, scope: !3566)
!3569 = !DILocation(line: 1500, column: 14, scope: !3566)
!3570 = !DILocation(line: 1500, column: 20, scope: !3566)
!3571 = !DILocation(line: 1501, column: 21, scope: !3566)
!3572 = !DILocation(line: 1501, column: 26, scope: !3566)
!3573 = !DILocation(line: 1501, column: 9, scope: !3566)
!3574 = !DILocation(line: 1501, column: 14, scope: !3566)
!3575 = !DILocation(line: 1501, column: 19, scope: !3566)
!3576 = !DILocation(line: 1502, column: 5, scope: !3566)
!3577 = !DILocation(line: 1503, column: 9, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3562, file: !1003, line: 1502, column: 12)
!3579 = !DILocation(line: 1503, column: 14, scope: !3578)
!3580 = !DILocation(line: 1503, column: 30, scope: !3578)
!3581 = !DILocation(line: 1506, column: 9, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3497, file: !1003, line: 1506, column: 9)
!3583 = !DILocation(line: 1506, column: 14, scope: !3582)
!3584 = !DILocation(line: 1506, column: 9, scope: !3497)
!3585 = !DILocation(line: 1507, column: 21, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3582, file: !1003, line: 1506, column: 21)
!3587 = !DILocation(line: 1507, column: 26, scope: !3586)
!3588 = !DILocation(line: 1507, column: 9, scope: !3586)
!3589 = !DILocation(line: 1508, column: 9, scope: !3586)
!3590 = !DILocation(line: 1508, column: 14, scope: !3586)
!3591 = !DILocation(line: 1508, column: 32, scope: !3586)
!3592 = !DILocation(line: 1509, column: 5, scope: !3586)
!3593 = !DILocation(line: 1510, column: 13, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3497, file: !1003, line: 1510, column: 5)
!3595 = !DILocation(line: 1510, column: 10, scope: !3594)
!3596 = !DILocation(line: 1510, column: 18, scope: !3597)
!3597 = !DILexicalBlockFile(scope: !3598, file: !1003, discriminator: 1)
!3598 = distinct !DILexicalBlock(scope: !3594, file: !1003, line: 1510, column: 5)
!3599 = !DILocation(line: 1510, column: 23, scope: !3597)
!3600 = !DILocation(line: 1510, column: 21, scope: !3597)
!3601 = !DILocation(line: 1510, column: 5, scope: !3597)
!3602 = !DILocation(line: 1512, column: 26, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3598, file: !1003, line: 1510, column: 34)
!3604 = !DILocation(line: 1512, column: 30, scope: !3603)
!3605 = !DILocation(line: 1512, column: 37, scope: !3603)
!3606 = !DILocation(line: 1512, column: 42, scope: !3603)
!3607 = !DILocation(line: 1512, column: 53, scope: !3603)
!3608 = !DILocation(line: 1512, column: 58, scope: !3603)
!3609 = !DILocation(line: 1512, column: 63, scope: !3603)
!3610 = !DILocation(line: 1512, column: 68, scope: !3611)
!3611 = !DILexicalBlockFile(scope: !3603, file: !1003, discriminator: 1)
!3612 = !DILocation(line: 1512, column: 63, scope: !3611)
!3613 = !DILocation(line: 1512, column: 72, scope: !3614)
!3614 = !DILexicalBlockFile(scope: !3603, file: !1003, discriminator: 2)
!3615 = !DILocation(line: 1512, column: 63, scope: !3614)
!3616 = !DILocation(line: 1512, column: 63, scope: !3617)
!3617 = !DILexicalBlockFile(scope: !3603, file: !1003, discriminator: 3)
!3618 = !DILocation(line: 1512, column: 85, scope: !3617)
!3619 = !DILocation(line: 1512, column: 75, scope: !3617)
!3620 = !DILocation(line: 1512, column: 80, scope: !3617)
!3621 = !DILocation(line: 1512, column: 89, scope: !3617)
!3622 = !DILocation(line: 1513, column: 37, scope: !3603)
!3623 = !DILocation(line: 1513, column: 42, scope: !3603)
!3624 = !DILocation(line: 1513, column: 26, scope: !3603)
!3625 = !DILocation(line: 1514, column: 36, scope: !3603)
!3626 = !DILocation(line: 1514, column: 26, scope: !3603)
!3627 = !DILocation(line: 1514, column: 31, scope: !3603)
!3628 = !DILocation(line: 1514, column: 40, scope: !3603)
!3629 = !DILocation(line: 1514, column: 53, scope: !3603)
!3630 = !DILocation(line: 1514, column: 43, scope: !3603)
!3631 = !DILocation(line: 1514, column: 48, scope: !3603)
!3632 = !DILocation(line: 1514, column: 57, scope: !3603)
!3633 = !DILocation(line: 1512, column: 9, scope: !3617)
!3634 = !DILocation(line: 1515, column: 9, scope: !3603)
!3635 = !DILocation(line: 1515, column: 14, scope: !3603)
!3636 = !DILocation(line: 1515, column: 16, scope: !3603)
!3637 = !DILocation(line: 1515, column: 27, scope: !3603)
!3638 = !DILocation(line: 1515, column: 31, scope: !3603)
!3639 = !DILocation(line: 1515, column: 36, scope: !3603)
!3640 = !DILocation(line: 1515, column: 41, scope: !3603)
!3641 = !DILocation(line: 1516, column: 69, scope: !3603)
!3642 = !DILocation(line: 1516, column: 59, scope: !3603)
!3643 = !DILocation(line: 1516, column: 64, scope: !3603)
!3644 = !DILocation(line: 1516, column: 73, scope: !3603)
!3645 = !DILocation(line: 1517, column: 37, scope: !3603)
!3646 = !DILocation(line: 1517, column: 27, scope: !3603)
!3647 = !DILocation(line: 1517, column: 32, scope: !3603)
!3648 = !DILocation(line: 1517, column: 41, scope: !3603)
!3649 = !DILocation(line: 1518, column: 19, scope: !3603)
!3650 = !DILocation(line: 1518, column: 9, scope: !3603)
!3651 = !DILocation(line: 1518, column: 14, scope: !3603)
!3652 = !DILocation(line: 1518, column: 23, scope: !3603)
!3653 = !DILocation(line: 1518, column: 28, scope: !3603)
!3654 = !DILocation(line: 1519, column: 13, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3603, file: !1003, line: 1519, column: 13)
!3656 = !DILocation(line: 1519, column: 18, scope: !3655)
!3657 = !DILocation(line: 1519, column: 13, scope: !3603)
!3658 = !DILocation(line: 1520, column: 13, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3655, file: !1003, line: 1519, column: 25)
!3660 = !DILocation(line: 1520, column: 18, scope: !3659)
!3661 = !DILocation(line: 1520, column: 20, scope: !3659)
!3662 = !DILocation(line: 1520, column: 43, scope: !3659)
!3663 = !DILocation(line: 1520, column: 48, scope: !3659)
!3664 = !DILocation(line: 1520, column: 53, scope: !3659)
!3665 = !DILocation(line: 1520, column: 58, scope: !3659)
!3666 = !DILocation(line: 1520, column: 66, scope: !3659)
!3667 = !DILocation(line: 1520, column: 71, scope: !3659)
!3668 = !DILocation(line: 1521, column: 70, scope: !3659)
!3669 = !DILocation(line: 1521, column: 75, scope: !3659)
!3670 = !DILocation(line: 1521, column: 82, scope: !3659)
!3671 = !DILocation(line: 1521, column: 87, scope: !3659)
!3672 = !DILocation(line: 1522, column: 23, scope: !3659)
!3673 = !DILocation(line: 1522, column: 39, scope: !3659)
!3674 = !DILocation(line: 1522, column: 29, scope: !3659)
!3675 = !DILocation(line: 1522, column: 34, scope: !3659)
!3676 = !DILocation(line: 1522, column: 13, scope: !3659)
!3677 = !DILocation(line: 1523, column: 13, scope: !3659)
!3678 = distinct !{!3678, !3677}
!3679 = !DILocation(line: 1523, column: 34, scope: !3680)
!3680 = !DILexicalBlockFile(scope: !3681, file: !1003, discriminator: 1)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !1003, line: 1523, column: 22)
!3682 = distinct !DILexicalBlock(scope: !3659, file: !1003, line: 1523, column: 16)
!3683 = !DILocation(line: 1523, column: 24, scope: !3680)
!3684 = !DILocation(line: 1523, column: 29, scope: !3680)
!3685 = !DILocation(line: 1523, column: 38, scope: !3680)
!3686 = !DILocation(line: 1523, column: 49, scope: !3680)
!3687 = !DILocation(line: 1523, column: 22, scope: !3680)
!3688 = !DILocation(line: 1523, column: 57, scope: !3689)
!3689 = !DILexicalBlockFile(scope: !3690, file: !1003, discriminator: 2)
!3690 = distinct !DILexicalBlock(scope: !3681, file: !1003, line: 1523, column: 55)
!3691 = !DILocation(line: 1523, column: 122, scope: !3692)
!3692 = !DILexicalBlockFile(scope: !3689, file: !1003, discriminator: 4)
!3693 = !DILocation(line: 1523, column: 122, scope: !3689)
!3694 = !DILocation(line: 1523, column: 133, scope: !3695)
!3695 = !DILexicalBlockFile(scope: !3682, file: !1003, discriminator: 3)
!3696 = !DILocation(line: 1524, column: 24, scope: !3659)
!3697 = !DILocation(line: 1524, column: 28, scope: !3659)
!3698 = !DILocation(line: 1524, column: 33, scope: !3659)
!3699 = !DILocation(line: 1524, column: 38, scope: !3659)
!3700 = !DILocation(line: 1525, column: 52, scope: !3659)
!3701 = !DILocation(line: 1525, column: 57, scope: !3659)
!3702 = !DILocation(line: 1526, column: 48, scope: !3659)
!3703 = !DILocation(line: 1526, column: 53, scope: !3659)
!3704 = !DILocation(line: 1527, column: 48, scope: !3659)
!3705 = !DILocation(line: 1527, column: 53, scope: !3659)
!3706 = !DILocation(line: 1528, column: 34, scope: !3659)
!3707 = !DILocation(line: 1528, column: 24, scope: !3659)
!3708 = !DILocation(line: 1528, column: 29, scope: !3659)
!3709 = !DILocation(line: 1528, column: 38, scope: !3659)
!3710 = !DILocation(line: 1528, column: 58, scope: !3659)
!3711 = !DILocation(line: 1528, column: 48, scope: !3659)
!3712 = !DILocation(line: 1528, column: 53, scope: !3659)
!3713 = !DILocation(line: 1528, column: 62, scope: !3659)
!3714 = !DILocation(line: 1529, column: 34, scope: !3659)
!3715 = !DILocation(line: 1529, column: 24, scope: !3659)
!3716 = !DILocation(line: 1529, column: 29, scope: !3659)
!3717 = !DILocation(line: 1529, column: 38, scope: !3659)
!3718 = !DILocation(line: 1524, column: 13, scope: !3659)
!3719 = !DILocation(line: 1532, column: 31, scope: !3659)
!3720 = !DILocation(line: 1532, column: 35, scope: !3659)
!3721 = !DILocation(line: 1532, column: 51, scope: !3659)
!3722 = !DILocation(line: 1532, column: 41, scope: !3659)
!3723 = !DILocation(line: 1532, column: 46, scope: !3659)
!3724 = !DILocation(line: 1532, column: 66, scope: !3659)
!3725 = !DILocation(line: 1532, column: 56, scope: !3659)
!3726 = !DILocation(line: 1532, column: 61, scope: !3659)
!3727 = !DILocation(line: 1532, column: 70, scope: !3659)
!3728 = !DILocation(line: 1532, column: 19, scope: !3659)
!3729 = !DILocation(line: 1532, column: 17, scope: !3659)
!3730 = !DILocation(line: 1533, column: 18, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3659, file: !1003, line: 1533, column: 17)
!3732 = !DILocation(line: 1533, column: 17, scope: !3659)
!3733 = !DILocation(line: 1534, column: 34, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3731, file: !1003, line: 1533, column: 23)
!3735 = !DILocation(line: 1534, column: 39, scope: !3734)
!3736 = !DILocation(line: 1534, column: 47, scope: !3734)
!3737 = !DILocation(line: 1534, column: 52, scope: !3734)
!3738 = !DILocation(line: 1534, column: 60, scope: !3734)
!3739 = !DILocation(line: 1534, column: 76, scope: !3734)
!3740 = !DILocation(line: 1534, column: 66, scope: !3734)
!3741 = !DILocation(line: 1534, column: 71, scope: !3734)
!3742 = !DILocation(line: 1534, column: 17, scope: !3734)
!3743 = !DILocation(line: 1535, column: 31, scope: !3734)
!3744 = !DILocation(line: 1535, column: 35, scope: !3734)
!3745 = !DILocation(line: 1535, column: 51, scope: !3734)
!3746 = !DILocation(line: 1535, column: 41, scope: !3734)
!3747 = !DILocation(line: 1535, column: 46, scope: !3734)
!3748 = !DILocation(line: 1535, column: 66, scope: !3734)
!3749 = !DILocation(line: 1535, column: 56, scope: !3734)
!3750 = !DILocation(line: 1535, column: 61, scope: !3734)
!3751 = !DILocation(line: 1535, column: 70, scope: !3734)
!3752 = !DILocation(line: 1535, column: 17, scope: !3734)
!3753 = !DILocation(line: 1536, column: 17, scope: !3734)
!3754 = !DILocation(line: 1536, column: 22, scope: !3734)
!3755 = !DILocation(line: 1536, column: 24, scope: !3734)
!3756 = !DILocation(line: 1536, column: 66, scope: !3734)
!3757 = !DILocation(line: 1536, column: 56, scope: !3734)
!3758 = !DILocation(line: 1536, column: 61, scope: !3734)
!3759 = !DILocation(line: 1536, column: 70, scope: !3734)
!3760 = !DILocation(line: 1536, column: 40, scope: !3734)
!3761 = !DILocation(line: 1536, column: 50, scope: !3734)
!3762 = !DILocation(line: 1536, column: 45, scope: !3734)
!3763 = !DILocation(line: 1536, column: 54, scope: !3734)
!3764 = !DILocation(line: 1537, column: 61, scope: !3734)
!3765 = !DILocation(line: 1537, column: 66, scope: !3734)
!3766 = !DILocation(line: 1538, column: 33, scope: !3734)
!3767 = !DILocation(line: 1538, column: 49, scope: !3734)
!3768 = !DILocation(line: 1538, column: 39, scope: !3734)
!3769 = !DILocation(line: 1538, column: 44, scope: !3734)
!3770 = !DILocation(line: 1539, column: 43, scope: !3734)
!3771 = !DILocation(line: 1539, column: 33, scope: !3734)
!3772 = !DILocation(line: 1539, column: 38, scope: !3734)
!3773 = !DILocation(line: 1539, column: 47, scope: !3734)
!3774 = !DILocation(line: 1540, column: 13, scope: !3734)
!3775 = !DILocation(line: 1541, column: 9, scope: !3659)
!3776 = !DILocation(line: 1544, column: 9, scope: !3603)
!3777 = !DILocation(line: 1544, column: 14, scope: !3603)
!3778 = !DILocation(line: 1544, column: 16, scope: !3603)
!3779 = !DILocation(line: 1544, column: 26, scope: !3603)
!3780 = !DILocation(line: 1544, column: 38, scope: !3603)
!3781 = !DILocation(line: 1544, column: 31, scope: !3603)
!3782 = !DILocation(line: 1544, column: 36, scope: !3603)
!3783 = !DILocation(line: 1545, column: 75, scope: !3603)
!3784 = !DILocation(line: 1545, column: 65, scope: !3603)
!3785 = !DILocation(line: 1545, column: 70, scope: !3603)
!3786 = !DILocation(line: 1545, column: 79, scope: !3603)
!3787 = !DILocation(line: 1545, column: 64, scope: !3603)
!3788 = !DILocation(line: 1545, column: 47, scope: !3603)
!3789 = !DILocation(line: 1545, column: 57, scope: !3603)
!3790 = !DILocation(line: 1545, column: 52, scope: !3603)
!3791 = !DILocation(line: 1545, column: 61, scope: !3603)
!3792 = !DILocation(line: 1546, column: 74, scope: !3603)
!3793 = !DILocation(line: 1546, column: 64, scope: !3603)
!3794 = !DILocation(line: 1546, column: 69, scope: !3603)
!3795 = !DILocation(line: 1546, column: 78, scope: !3603)
!3796 = !DILocation(line: 1546, column: 47, scope: !3603)
!3797 = !DILocation(line: 1546, column: 57, scope: !3603)
!3798 = !DILocation(line: 1546, column: 52, scope: !3603)
!3799 = !DILocation(line: 1546, column: 61, scope: !3603)
!3800 = !DILocation(line: 1547, column: 47, scope: !3603)
!3801 = !DILocation(line: 1547, column: 52, scope: !3603)
!3802 = !DILocation(line: 1547, column: 59, scope: !3603)
!3803 = !DILocation(line: 1548, column: 5, scope: !3603)
!3804 = !DILocation(line: 1510, column: 30, scope: !3805)
!3805 = !DILexicalBlockFile(scope: !3598, file: !1003, discriminator: 2)
!3806 = !DILocation(line: 1510, column: 5, scope: !3805)
!3807 = distinct !{!3807, !3808}
!3808 = !DILocation(line: 1510, column: 5, scope: !3497)
!3809 = !DILocation(line: 1550, column: 9, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3497, file: !1003, line: 1550, column: 9)
!3811 = !DILocation(line: 1550, column: 13, scope: !3810)
!3812 = !DILocation(line: 1550, column: 19, scope: !3810)
!3813 = !DILocation(line: 1550, column: 24, scope: !3810)
!3814 = !DILocation(line: 1550, column: 27, scope: !3810)
!3815 = !DILocation(line: 1550, column: 9, scope: !3497)
!3816 = !DILocation(line: 1551, column: 13, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3818, file: !1003, line: 1551, column: 13)
!3818 = distinct !DILexicalBlock(scope: !3810, file: !1003, line: 1550, column: 33)
!3819 = !DILocation(line: 1551, column: 18, scope: !3817)
!3820 = !DILocation(line: 1551, column: 21, scope: !3817)
!3821 = !DILocation(line: 1551, column: 13, scope: !3818)
!3822 = !DILocation(line: 1552, column: 31, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3817, file: !1003, line: 1551, column: 28)
!3824 = !DILocation(line: 1552, column: 35, scope: !3823)
!3825 = !DILocation(line: 1552, column: 43, scope: !3823)
!3826 = !DILocation(line: 1552, column: 48, scope: !3823)
!3827 = !DILocation(line: 1552, column: 52, scope: !3823)
!3828 = !DILocation(line: 1552, column: 57, scope: !3823)
!3829 = !DILocation(line: 1552, column: 63, scope: !3823)
!3830 = !DILocation(line: 1552, column: 68, scope: !3823)
!3831 = !DILocation(line: 1552, column: 74, scope: !3823)
!3832 = !DILocation(line: 1552, column: 79, scope: !3823)
!3833 = !DILocation(line: 1552, column: 87, scope: !3823)
!3834 = !DILocation(line: 1552, column: 92, scope: !3823)
!3835 = !DILocation(line: 1552, column: 85, scope: !3823)
!3836 = !DILocation(line: 1552, column: 13, scope: !3823)
!3837 = !DILocation(line: 1553, column: 9, scope: !3823)
!3838 = !DILocation(line: 1554, column: 20, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3817, file: !1003, line: 1553, column: 16)
!3840 = !DILocation(line: 1554, column: 25, scope: !3839)
!3841 = !DILocation(line: 1554, column: 13, scope: !3839)
!3842 = !DILocation(line: 1554, column: 31, scope: !3839)
!3843 = !DILocation(line: 1554, column: 36, scope: !3839)
!3844 = !DILocation(line: 1556, column: 13, scope: !3818)
!3845 = !DILocation(line: 1557, column: 5, scope: !3818)
!3846 = !DILocation(line: 1559, column: 24, scope: !3497)
!3847 = !DILocation(line: 1559, column: 29, scope: !3497)
!3848 = !DILocation(line: 1559, column: 36, scope: !3497)
!3849 = !DILocation(line: 1559, column: 41, scope: !3497)
!3850 = !DILocation(line: 1559, column: 46, scope: !3497)
!3851 = !DILocation(line: 1559, column: 50, scope: !3497)
!3852 = !DILocation(line: 1560, column: 23, scope: !3497)
!3853 = !DILocation(line: 1560, column: 26, scope: !3497)
!3854 = !DILocation(line: 1560, column: 31, scope: !3497)
!3855 = !DILocation(line: 1560, column: 37, scope: !3497)
!3856 = !DILocation(line: 1560, column: 42, scope: !3497)
!3857 = !DILocation(line: 1561, column: 23, scope: !3497)
!3858 = !DILocation(line: 1561, column: 28, scope: !3497)
!3859 = !DILocation(line: 1561, column: 36, scope: !3497)
!3860 = !DILocation(line: 1562, column: 24, scope: !3497)
!3861 = !DILocation(line: 1562, column: 29, scope: !3497)
!3862 = !DILocation(line: 1562, column: 37, scope: !3497)
!3863 = !DILocation(line: 1563, column: 23, scope: !3497)
!3864 = !DILocation(line: 1559, column: 5, scope: !3497)
!3865 = !DILocation(line: 1564, column: 9, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3497, file: !1003, line: 1564, column: 9)
!3867 = !DILocation(line: 1564, column: 13, scope: !3866)
!3868 = !DILocation(line: 1564, column: 9, scope: !3497)
!3869 = !DILocation(line: 1565, column: 28, scope: !3866)
!3870 = !DILocation(line: 1565, column: 33, scope: !3866)
!3871 = !DILocation(line: 1565, column: 40, scope: !3866)
!3872 = !DILocation(line: 1565, column: 45, scope: !3866)
!3873 = !DILocation(line: 1565, column: 50, scope: !3866)
!3874 = !DILocation(line: 1565, column: 54, scope: !3866)
!3875 = !DILocation(line: 1566, column: 27, scope: !3866)
!3876 = !DILocation(line: 1566, column: 30, scope: !3866)
!3877 = !DILocation(line: 1566, column: 35, scope: !3866)
!3878 = !DILocation(line: 1566, column: 41, scope: !3866)
!3879 = !DILocation(line: 1566, column: 46, scope: !3866)
!3880 = !DILocation(line: 1567, column: 27, scope: !3866)
!3881 = !DILocation(line: 1567, column: 32, scope: !3866)
!3882 = !DILocation(line: 1567, column: 40, scope: !3866)
!3883 = !DILocation(line: 1568, column: 28, scope: !3866)
!3884 = !DILocation(line: 1568, column: 33, scope: !3866)
!3885 = !DILocation(line: 1568, column: 41, scope: !3866)
!3886 = !DILocation(line: 1569, column: 27, scope: !3866)
!3887 = !DILocation(line: 1565, column: 9, scope: !3866)
!3888 = !DILocation(line: 1570, column: 1, scope: !3497)
!3889 = distinct !DISubprogram(name: "sbr_dequant", scope: !1058, file: !1058, line: 154, type: !3890, isLocal: true, isDefinition: true, scopeLine: 155, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!3890 = !DISubroutineType(types: !3891)
!3891 = !{null, !1125, !958}
!3892 = !DILocalVariable(name: "sbr", arg: 1, scope: !3889, file: !1058, line: 154, type: !1125)
!3893 = !DILocation(line: 154, column: 50, scope: !3889)
!3894 = !DILocalVariable(name: "id_aac", arg: 2, scope: !3889, file: !1058, line: 154, type: !958)
!3895 = !DILocation(line: 154, column: 59, scope: !3889)
!3896 = !DILocalVariable(name: "k", scope: !3889, file: !1058, line: 156, type: !958)
!3897 = !DILocation(line: 156, column: 9, scope: !3889)
!3898 = !DILocalVariable(name: "e", scope: !3889, file: !1058, line: 156, type: !958)
!3899 = !DILocation(line: 156, column: 12, scope: !3889)
!3900 = !DILocalVariable(name: "ch", scope: !3889, file: !1058, line: 157, type: !958)
!3901 = !DILocation(line: 157, column: 9, scope: !3889)
!3902 = !DILocation(line: 159, column: 9, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3889, file: !1058, line: 159, column: 9)
!3904 = !DILocation(line: 159, column: 16, scope: !3903)
!3905 = !DILocation(line: 159, column: 28, scope: !3903)
!3906 = !DILocation(line: 159, column: 31, scope: !3907)
!3907 = !DILexicalBlockFile(scope: !3903, file: !1058, discriminator: 1)
!3908 = !DILocation(line: 159, column: 36, scope: !3907)
!3909 = !DILocation(line: 159, column: 9, scope: !3907)
!3910 = !DILocalVariable(name: "alpha", scope: !3911, file: !1058, line: 160, type: !958)
!3911 = distinct !DILexicalBlock(scope: !3903, file: !1058, line: 159, column: 49)
!3912 = !DILocation(line: 160, column: 13, scope: !3911)
!3913 = !DILocation(line: 160, column: 21, scope: !3911)
!3914 = !DILocation(line: 160, column: 26, scope: !3911)
!3915 = !DILocation(line: 160, column: 34, scope: !3911)
!3916 = !DILocalVariable(name: "pan_offset", scope: !3911, file: !1058, line: 161, type: !958)
!3917 = !DILocation(line: 161, column: 13, scope: !3911)
!3918 = !DILocation(line: 161, column: 26, scope: !3911)
!3919 = !DILocation(line: 161, column: 31, scope: !3911)
!3920 = !DILocation(line: 161, column: 39, scope: !3911)
!3921 = !DILocation(line: 162, column: 16, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3911, file: !1058, line: 162, column: 9)
!3923 = !DILocation(line: 162, column: 14, scope: !3922)
!3924 = !DILocation(line: 162, column: 21, scope: !3925)
!3925 = !DILexicalBlockFile(scope: !3926, file: !1058, discriminator: 1)
!3926 = distinct !DILexicalBlock(scope: !3922, file: !1058, line: 162, column: 9)
!3927 = !DILocation(line: 162, column: 26, scope: !3925)
!3928 = !DILocation(line: 162, column: 31, scope: !3925)
!3929 = !DILocation(line: 162, column: 39, scope: !3925)
!3930 = !DILocation(line: 162, column: 23, scope: !3925)
!3931 = !DILocation(line: 162, column: 9, scope: !3925)
!3932 = !DILocation(line: 163, column: 20, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !1058, line: 163, column: 13)
!3934 = distinct !DILexicalBlock(scope: !3926, file: !1058, line: 162, column: 56)
!3935 = !DILocation(line: 163, column: 18, scope: !3933)
!3936 = !DILocation(line: 163, column: 25, scope: !3937)
!3937 = !DILexicalBlockFile(scope: !3938, file: !1058, discriminator: 1)
!3938 = distinct !DILexicalBlock(scope: !3933, file: !1058, line: 163, column: 13)
!3939 = !DILocation(line: 163, column: 61, scope: !3937)
!3940 = !DILocation(line: 163, column: 36, scope: !3937)
!3941 = !DILocation(line: 163, column: 41, scope: !3937)
!3942 = !DILocation(line: 163, column: 49, scope: !3937)
!3943 = !DILocation(line: 163, column: 29, scope: !3937)
!3944 = !DILocation(line: 163, column: 34, scope: !3937)
!3945 = !DILocation(line: 163, column: 27, scope: !3937)
!3946 = !DILocation(line: 163, column: 13, scope: !3937)
!3947 = !DILocalVariable(name: "temp1", scope: !3948, file: !1058, line: 164, type: !1210)
!3948 = distinct !DILexicalBlock(scope: !3938, file: !1058, line: 163, column: 71)
!3949 = !DILocation(line: 164, column: 27, scope: !3948)
!3950 = !DILocalVariable(name: "temp2", scope: !3948, file: !1058, line: 164, type: !1210)
!3951 = !DILocation(line: 164, column: 34, scope: !3948)
!3952 = !DILocalVariable(name: "fac", scope: !3948, file: !1058, line: 164, type: !1210)
!3953 = !DILocation(line: 164, column: 41, scope: !3948)
!3954 = !DILocation(line: 166, column: 56, scope: !3948)
!3955 = !DILocation(line: 166, column: 29, scope: !3948)
!3956 = !DILocation(line: 166, column: 53, scope: !3948)
!3957 = !DILocation(line: 166, column: 34, scope: !3948)
!3958 = !DILocation(line: 166, column: 42, scope: !3948)
!3959 = !DILocation(line: 166, column: 61, scope: !3948)
!3960 = !DILocation(line: 166, column: 59, scope: !3948)
!3961 = !DILocation(line: 166, column: 67, scope: !3948)
!3962 = !DILocation(line: 166, column: 23, scope: !3948)
!3963 = !DILocation(line: 166, column: 27, scope: !3948)
!3964 = !DILocation(line: 167, column: 27, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3948, file: !1058, line: 167, column: 21)
!3966 = !DILocation(line: 167, column: 31, scope: !3965)
!3967 = !DILocation(line: 167, column: 21, scope: !3948)
!3968 = !DILocation(line: 168, column: 25, scope: !3965)
!3969 = !DILocation(line: 168, column: 30, scope: !3965)
!3970 = !DILocation(line: 168, column: 19, scope: !3965)
!3971 = !DILocation(line: 170, column: 25, scope: !3965)
!3972 = !DILocation(line: 170, column: 30, scope: !3965)
!3973 = !DILocation(line: 171, column: 36, scope: !3948)
!3974 = !DILocation(line: 171, column: 40, scope: !3948)
!3975 = !DILocation(line: 171, column: 46, scope: !3948)
!3976 = !DILocation(line: 171, column: 23, scope: !3948)
!3977 = !DILocation(line: 171, column: 27, scope: !3948)
!3978 = !DILocation(line: 172, column: 27, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3948, file: !1058, line: 172, column: 21)
!3980 = !DILocation(line: 172, column: 31, scope: !3979)
!3981 = !DILocation(line: 172, column: 21, scope: !3948)
!3982 = !DILocation(line: 173, column: 21, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3979, file: !1058, line: 172, column: 37)
!3984 = !DILocation(line: 174, column: 29, scope: !3983)
!3985 = !DILocation(line: 175, column: 17, scope: !3983)
!3986 = !DILocation(line: 177, column: 30, scope: !3948)
!3987 = !DILocation(line: 177, column: 70, scope: !3948)
!3988 = !DILocation(line: 177, column: 43, scope: !3948)
!3989 = !DILocation(line: 177, column: 67, scope: !3948)
!3990 = !DILocation(line: 177, column: 48, scope: !3948)
!3991 = !DILocation(line: 177, column: 56, scope: !3948)
!3992 = !DILocation(line: 177, column: 41, scope: !3948)
!3993 = !DILocation(line: 177, column: 76, scope: !3948)
!3994 = !DILocation(line: 177, column: 74, scope: !3948)
!3995 = !DILocation(line: 177, column: 23, scope: !3948)
!3996 = !DILocation(line: 177, column: 27, scope: !3948)
!3997 = !DILocation(line: 178, column: 27, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3948, file: !1058, line: 178, column: 21)
!3999 = !DILocation(line: 178, column: 31, scope: !3998)
!4000 = !DILocation(line: 178, column: 21, scope: !3948)
!4001 = !DILocation(line: 179, column: 25, scope: !3998)
!4002 = !DILocation(line: 179, column: 30, scope: !3998)
!4003 = !DILocation(line: 179, column: 19, scope: !3998)
!4004 = !DILocation(line: 181, column: 25, scope: !3998)
!4005 = !DILocation(line: 181, column: 30, scope: !3998)
!4006 = !DILocation(line: 182, column: 36, scope: !3948)
!4007 = !DILocation(line: 182, column: 40, scope: !3948)
!4008 = !DILocation(line: 182, column: 46, scope: !3948)
!4009 = !DILocation(line: 182, column: 23, scope: !3948)
!4010 = !DILocation(line: 182, column: 27, scope: !3948)
!4011 = !DILocation(line: 183, column: 40, scope: !3948)
!4012 = !DILocation(line: 183, column: 23, scope: !3948)
!4013 = !DILocation(line: 183, column: 23, scope: !4014)
!4014 = !DILexicalBlockFile(scope: !3948, file: !1058, discriminator: 1)
!4015 = !DILocation(line: 183, column: 23, scope: !4016)
!4016 = !DILexicalBlockFile(scope: !3948, file: !1058, discriminator: 2)
!4017 = !DILocation(line: 184, column: 42, scope: !3948)
!4018 = !DILocation(line: 184, column: 17, scope: !3948)
!4019 = !DILocation(line: 184, column: 39, scope: !3948)
!4020 = !DILocation(line: 184, column: 22, scope: !3948)
!4021 = !DILocation(line: 184, column: 30, scope: !3948)
!4022 = !DILocation(line: 184, column: 47, scope: !3948)
!4023 = !DILocation(line: 185, column: 42, scope: !3948)
!4024 = !DILocation(line: 185, column: 17, scope: !3948)
!4025 = !DILocation(line: 185, column: 39, scope: !3948)
!4026 = !DILocation(line: 185, column: 22, scope: !3948)
!4027 = !DILocation(line: 185, column: 30, scope: !3948)
!4028 = !DILocation(line: 185, column: 47, scope: !3948)
!4029 = !DILocation(line: 185, column: 47, scope: !4014)
!4030 = !DILocation(line: 186, column: 13, scope: !3948)
!4031 = !DILocation(line: 163, column: 67, scope: !4032)
!4032 = !DILexicalBlockFile(scope: !3938, file: !1058, discriminator: 2)
!4033 = !DILocation(line: 163, column: 13, scope: !4032)
!4034 = distinct !{!4034, !4035}
!4035 = !DILocation(line: 163, column: 13, scope: !3934)
!4036 = !DILocation(line: 187, column: 9, scope: !3934)
!4037 = !DILocation(line: 162, column: 52, scope: !4038)
!4038 = !DILexicalBlockFile(scope: !3926, file: !1058, discriminator: 2)
!4039 = !DILocation(line: 162, column: 9, scope: !4038)
!4040 = distinct !{!4040, !4041}
!4041 = !DILocation(line: 162, column: 9, scope: !3911)
!4042 = !DILocation(line: 188, column: 16, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !3911, file: !1058, line: 188, column: 9)
!4044 = !DILocation(line: 188, column: 14, scope: !4043)
!4045 = !DILocation(line: 188, column: 21, scope: !4046)
!4046 = !DILexicalBlockFile(scope: !4047, file: !1058, discriminator: 1)
!4047 = distinct !DILexicalBlock(scope: !4043, file: !1058, line: 188, column: 9)
!4048 = !DILocation(line: 188, column: 26, scope: !4046)
!4049 = !DILocation(line: 188, column: 31, scope: !4046)
!4050 = !DILocation(line: 188, column: 39, scope: !4046)
!4051 = !DILocation(line: 188, column: 23, scope: !4046)
!4052 = !DILocation(line: 188, column: 9, scope: !4046)
!4053 = !DILocation(line: 189, column: 20, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4055, file: !1058, line: 189, column: 13)
!4055 = distinct !DILexicalBlock(scope: !4047, file: !1058, line: 188, column: 58)
!4056 = !DILocation(line: 189, column: 18, scope: !4054)
!4057 = !DILocation(line: 189, column: 25, scope: !4058)
!4058 = !DILexicalBlockFile(scope: !4059, file: !1058, discriminator: 1)
!4059 = distinct !DILexicalBlock(scope: !4054, file: !1058, line: 189, column: 13)
!4060 = !DILocation(line: 189, column: 29, scope: !4058)
!4061 = !DILocation(line: 189, column: 34, scope: !4058)
!4062 = !DILocation(line: 189, column: 27, scope: !4058)
!4063 = !DILocation(line: 189, column: 13, scope: !4058)
!4064 = !DILocalVariable(name: "temp1", scope: !4065, file: !1058, line: 190, type: !1210)
!4065 = distinct !DILexicalBlock(scope: !4059, file: !1058, line: 189, column: 44)
!4066 = !DILocation(line: 190, column: 27, scope: !4065)
!4067 = !DILocalVariable(name: "temp2", scope: !4065, file: !1058, line: 190, type: !1210)
!4068 = !DILocation(line: 190, column: 34, scope: !4065)
!4069 = !DILocalVariable(name: "fac", scope: !4065, file: !1058, line: 190, type: !1210)
!4070 = !DILocation(line: 190, column: 41, scope: !4065)
!4071 = !DILocation(line: 193, column: 50, scope: !4065)
!4072 = !DILocation(line: 193, column: 21, scope: !4065)
!4073 = !DILocation(line: 193, column: 47, scope: !4065)
!4074 = !DILocation(line: 193, column: 26, scope: !4065)
!4075 = !DILocation(line: 193, column: 34, scope: !4065)
!4076 = !DILocation(line: 192, column: 31, scope: !4065)
!4077 = !DILocation(line: 193, column: 53, scope: !4065)
!4078 = !DILocation(line: 192, column: 23, scope: !4065)
!4079 = !DILocation(line: 192, column: 27, scope: !4065)
!4080 = !DILocation(line: 194, column: 23, scope: !4065)
!4081 = !DILocation(line: 194, column: 28, scope: !4065)
!4082 = !DILocation(line: 195, column: 17, scope: !4065)
!4083 = distinct !{!4083, !4082}
!4084 = !DILocation(line: 195, column: 34, scope: !4085)
!4085 = !DILexicalBlockFile(scope: !4086, file: !1058, discriminator: 1)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !1058, line: 195, column: 26)
!4087 = distinct !DILexicalBlock(scope: !4065, file: !1058, line: 195, column: 20)
!4088 = !DILocation(line: 195, column: 38, scope: !4085)
!4089 = !DILocation(line: 195, column: 26, scope: !4085)
!4090 = !DILocation(line: 195, column: 48, scope: !4091)
!4091 = !DILexicalBlockFile(scope: !4092, file: !1058, discriminator: 2)
!4092 = distinct !DILexicalBlock(scope: !4086, file: !1058, line: 195, column: 46)
!4093 = !DILocation(line: 195, column: 109, scope: !4094)
!4094 = !DILexicalBlockFile(scope: !4091, file: !1058, discriminator: 4)
!4095 = !DILocation(line: 195, column: 109, scope: !4091)
!4096 = !DILocation(line: 195, column: 120, scope: !4097)
!4097 = !DILexicalBlockFile(scope: !4087, file: !1058, discriminator: 3)
!4098 = !DILocation(line: 196, column: 63, scope: !4065)
!4099 = !DILocation(line: 196, column: 34, scope: !4065)
!4100 = !DILocation(line: 196, column: 60, scope: !4065)
!4101 = !DILocation(line: 196, column: 39, scope: !4065)
!4102 = !DILocation(line: 196, column: 47, scope: !4065)
!4103 = !DILocation(line: 196, column: 32, scope: !4065)
!4104 = !DILocation(line: 196, column: 66, scope: !4065)
!4105 = !DILocation(line: 196, column: 23, scope: !4065)
!4106 = !DILocation(line: 196, column: 27, scope: !4065)
!4107 = !DILocation(line: 197, column: 23, scope: !4065)
!4108 = !DILocation(line: 197, column: 28, scope: !4065)
!4109 = !DILocation(line: 198, column: 40, scope: !4065)
!4110 = !DILocation(line: 198, column: 23, scope: !4065)
!4111 = !DILocation(line: 198, column: 23, scope: !4112)
!4112 = !DILexicalBlockFile(scope: !4065, file: !1058, discriminator: 1)
!4113 = !DILocation(line: 198, column: 23, scope: !4114)
!4114 = !DILexicalBlockFile(scope: !4065, file: !1058, discriminator: 2)
!4115 = !DILocation(line: 199, column: 44, scope: !4065)
!4116 = !DILocation(line: 199, column: 17, scope: !4065)
!4117 = !DILocation(line: 199, column: 41, scope: !4065)
!4118 = !DILocation(line: 199, column: 22, scope: !4065)
!4119 = !DILocation(line: 199, column: 30, scope: !4065)
!4120 = !DILocation(line: 199, column: 49, scope: !4065)
!4121 = !DILocation(line: 200, column: 44, scope: !4065)
!4122 = !DILocation(line: 200, column: 17, scope: !4065)
!4123 = !DILocation(line: 200, column: 41, scope: !4065)
!4124 = !DILocation(line: 200, column: 22, scope: !4065)
!4125 = !DILocation(line: 200, column: 30, scope: !4065)
!4126 = !DILocation(line: 200, column: 49, scope: !4065)
!4127 = !DILocation(line: 200, column: 49, scope: !4112)
!4128 = !DILocation(line: 201, column: 13, scope: !4065)
!4129 = !DILocation(line: 189, column: 40, scope: !4130)
!4130 = !DILexicalBlockFile(scope: !4059, file: !1058, discriminator: 2)
!4131 = !DILocation(line: 189, column: 13, scope: !4130)
!4132 = distinct !{!4132, !4133}
!4133 = !DILocation(line: 189, column: 13, scope: !4055)
!4134 = !DILocation(line: 202, column: 9, scope: !4055)
!4135 = !DILocation(line: 188, column: 54, scope: !4136)
!4136 = !DILexicalBlockFile(scope: !4047, file: !1058, discriminator: 2)
!4137 = !DILocation(line: 188, column: 9, scope: !4136)
!4138 = distinct !{!4138, !4139}
!4139 = !DILocation(line: 188, column: 9, scope: !3911)
!4140 = !DILocation(line: 203, column: 5, scope: !3911)
!4141 = !DILocation(line: 204, column: 17, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !1058, line: 204, column: 9)
!4143 = distinct !DILexicalBlock(scope: !3903, file: !1058, line: 203, column: 12)
!4144 = !DILocation(line: 204, column: 14, scope: !4142)
!4145 = !DILocation(line: 204, column: 22, scope: !4146)
!4146 = !DILexicalBlockFile(scope: !4147, file: !1058, discriminator: 1)
!4147 = distinct !DILexicalBlock(scope: !4142, file: !1058, line: 204, column: 9)
!4148 = !DILocation(line: 204, column: 28, scope: !4146)
!4149 = !DILocation(line: 204, column: 35, scope: !4146)
!4150 = !DILocation(line: 204, column: 48, scope: !4146)
!4151 = !DILocation(line: 204, column: 25, scope: !4146)
!4152 = !DILocation(line: 204, column: 9, scope: !4146)
!4153 = !DILocalVariable(name: "alpha", scope: !4154, file: !1058, line: 205, type: !958)
!4154 = distinct !DILexicalBlock(scope: !4147, file: !1058, line: 204, column: 59)
!4155 = !DILocation(line: 205, column: 17, scope: !4154)
!4156 = !DILocation(line: 205, column: 35, scope: !4154)
!4157 = !DILocation(line: 205, column: 25, scope: !4154)
!4158 = !DILocation(line: 205, column: 30, scope: !4154)
!4159 = !DILocation(line: 205, column: 39, scope: !4154)
!4160 = !DILocation(line: 206, column: 20, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4154, file: !1058, line: 206, column: 13)
!4162 = !DILocation(line: 206, column: 18, scope: !4161)
!4163 = !DILocation(line: 206, column: 25, scope: !4164)
!4164 = !DILexicalBlockFile(scope: !4165, file: !1058, discriminator: 1)
!4165 = distinct !DILexicalBlock(scope: !4161, file: !1058, line: 206, column: 13)
!4166 = !DILocation(line: 206, column: 40, scope: !4164)
!4167 = !DILocation(line: 206, column: 30, scope: !4164)
!4168 = !DILocation(line: 206, column: 35, scope: !4164)
!4169 = !DILocation(line: 206, column: 44, scope: !4164)
!4170 = !DILocation(line: 206, column: 27, scope: !4164)
!4171 = !DILocation(line: 206, column: 13, scope: !4164)
!4172 = !DILocation(line: 207, column: 24, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4165, file: !1058, line: 207, column: 17)
!4174 = !DILocation(line: 207, column: 22, scope: !4173)
!4175 = !DILocation(line: 207, column: 29, scope: !4176)
!4176 = !DILexicalBlockFile(scope: !4177, file: !1058, discriminator: 1)
!4177 = distinct !DILexicalBlock(scope: !4173, file: !1058, line: 207, column: 17)
!4178 = !DILocation(line: 207, column: 66, scope: !4176)
!4179 = !DILocation(line: 207, column: 40, scope: !4176)
!4180 = !DILocation(line: 207, column: 50, scope: !4176)
!4181 = !DILocation(line: 207, column: 45, scope: !4176)
!4182 = !DILocation(line: 207, column: 54, scope: !4176)
!4183 = !DILocation(line: 207, column: 33, scope: !4176)
!4184 = !DILocation(line: 207, column: 38, scope: !4176)
!4185 = !DILocation(line: 207, column: 31, scope: !4176)
!4186 = !DILocation(line: 207, column: 17, scope: !4176)
!4187 = !DILocalVariable(name: "temp1", scope: !4188, file: !1058, line: 208, type: !1210)
!4188 = distinct !DILexicalBlock(scope: !4177, file: !1058, line: 207, column: 75)
!4189 = !DILocation(line: 208, column: 31, scope: !4188)
!4190 = !DILocation(line: 210, column: 33, scope: !4188)
!4191 = !DILocation(line: 210, column: 69, scope: !4188)
!4192 = !DILocation(line: 210, column: 41, scope: !4188)
!4193 = !DILocation(line: 210, column: 66, scope: !4188)
!4194 = !DILocation(line: 210, column: 51, scope: !4188)
!4195 = !DILocation(line: 210, column: 46, scope: !4188)
!4196 = !DILocation(line: 210, column: 55, scope: !4188)
!4197 = !DILocation(line: 210, column: 39, scope: !4188)
!4198 = !DILocation(line: 210, column: 72, scope: !4188)
!4199 = !DILocation(line: 210, column: 27, scope: !4188)
!4200 = !DILocation(line: 210, column: 31, scope: !4188)
!4201 = !DILocation(line: 211, column: 31, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4188, file: !1058, line: 211, column: 25)
!4203 = !DILocation(line: 211, column: 35, scope: !4202)
!4204 = !DILocation(line: 211, column: 25, scope: !4188)
!4205 = !DILocation(line: 212, column: 31, scope: !4202)
!4206 = !DILocation(line: 212, column: 36, scope: !4202)
!4207 = !DILocation(line: 212, column: 25, scope: !4202)
!4208 = !DILocation(line: 214, column: 31, scope: !4202)
!4209 = !DILocation(line: 214, column: 36, scope: !4202)
!4210 = !DILocation(line: 215, column: 40, scope: !4188)
!4211 = !DILocation(line: 215, column: 44, scope: !4188)
!4212 = !DILocation(line: 215, column: 50, scope: !4188)
!4213 = !DILocation(line: 215, column: 27, scope: !4188)
!4214 = !DILocation(line: 215, column: 31, scope: !4188)
!4215 = !DILocation(line: 216, column: 31, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4188, file: !1058, line: 216, column: 25)
!4217 = !DILocation(line: 216, column: 35, scope: !4216)
!4218 = !DILocation(line: 216, column: 25, scope: !4188)
!4219 = !DILocation(line: 217, column: 25, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4216, file: !1058, line: 216, column: 41)
!4221 = !DILocation(line: 218, column: 33, scope: !4220)
!4222 = !DILocation(line: 219, column: 21, scope: !4220)
!4223 = !DILocation(line: 220, column: 47, scope: !4188)
!4224 = !DILocation(line: 220, column: 21, scope: !4188)
!4225 = !DILocation(line: 220, column: 44, scope: !4188)
!4226 = !DILocation(line: 220, column: 31, scope: !4188)
!4227 = !DILocation(line: 220, column: 26, scope: !4188)
!4228 = !DILocation(line: 220, column: 35, scope: !4188)
!4229 = !DILocation(line: 220, column: 52, scope: !4188)
!4230 = !DILocation(line: 221, column: 17, scope: !4188)
!4231 = !DILocation(line: 207, column: 72, scope: !4232)
!4232 = !DILexicalBlockFile(scope: !4177, file: !1058, discriminator: 2)
!4233 = !DILocation(line: 207, column: 17, scope: !4232)
!4234 = distinct !{!4234, !4235}
!4235 = !DILocation(line: 207, column: 17, scope: !4165)
!4236 = !DILocation(line: 221, column: 17, scope: !4237)
!4237 = !DILexicalBlockFile(scope: !4173, file: !1058, discriminator: 1)
!4238 = !DILocation(line: 206, column: 57, scope: !4239)
!4239 = !DILexicalBlockFile(scope: !4165, file: !1058, discriminator: 2)
!4240 = !DILocation(line: 206, column: 13, scope: !4239)
!4241 = distinct !{!4241, !4242}
!4242 = !DILocation(line: 206, column: 13, scope: !4154)
!4243 = !DILocation(line: 222, column: 20, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4154, file: !1058, line: 222, column: 13)
!4245 = !DILocation(line: 222, column: 18, scope: !4244)
!4246 = !DILocation(line: 222, column: 25, scope: !4247)
!4247 = !DILexicalBlockFile(scope: !4248, file: !1058, discriminator: 1)
!4248 = distinct !DILexicalBlock(scope: !4244, file: !1058, line: 222, column: 13)
!4249 = !DILocation(line: 222, column: 40, scope: !4247)
!4250 = !DILocation(line: 222, column: 30, scope: !4247)
!4251 = !DILocation(line: 222, column: 35, scope: !4247)
!4252 = !DILocation(line: 222, column: 44, scope: !4247)
!4253 = !DILocation(line: 222, column: 27, scope: !4247)
!4254 = !DILocation(line: 222, column: 13, scope: !4247)
!4255 = !DILocation(line: 223, column: 24, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4248, file: !1058, line: 223, column: 17)
!4257 = !DILocation(line: 223, column: 22, scope: !4256)
!4258 = !DILocation(line: 223, column: 29, scope: !4259)
!4259 = !DILexicalBlockFile(scope: !4260, file: !1058, discriminator: 1)
!4260 = distinct !DILexicalBlock(scope: !4256, file: !1058, line: 223, column: 17)
!4261 = !DILocation(line: 223, column: 33, scope: !4259)
!4262 = !DILocation(line: 223, column: 38, scope: !4259)
!4263 = !DILocation(line: 223, column: 31, scope: !4259)
!4264 = !DILocation(line: 223, column: 17, scope: !4259)
!4265 = !DILocation(line: 225, column: 55, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4260, file: !1058, line: 223, column: 47)
!4267 = !DILocation(line: 225, column: 25, scope: !4266)
!4268 = !DILocation(line: 225, column: 52, scope: !4266)
!4269 = !DILocation(line: 225, column: 35, scope: !4266)
!4270 = !DILocation(line: 225, column: 30, scope: !4266)
!4271 = !DILocation(line: 225, column: 39, scope: !4266)
!4272 = !DILocation(line: 224, column: 60, scope: !4266)
!4273 = !DILocation(line: 225, column: 58, scope: !4266)
!4274 = !DILocation(line: 224, column: 49, scope: !4266)
!4275 = !DILocation(line: 224, column: 21, scope: !4266)
!4276 = !DILocation(line: 224, column: 46, scope: !4266)
!4277 = !DILocation(line: 224, column: 31, scope: !4266)
!4278 = !DILocation(line: 224, column: 26, scope: !4266)
!4279 = !DILocation(line: 224, column: 35, scope: !4266)
!4280 = !DILocation(line: 224, column: 52, scope: !4266)
!4281 = !DILocation(line: 224, column: 56, scope: !4266)
!4282 = !DILocation(line: 226, column: 49, scope: !4266)
!4283 = !DILocation(line: 226, column: 21, scope: !4266)
!4284 = !DILocation(line: 226, column: 46, scope: !4266)
!4285 = !DILocation(line: 226, column: 31, scope: !4266)
!4286 = !DILocation(line: 226, column: 26, scope: !4266)
!4287 = !DILocation(line: 226, column: 35, scope: !4266)
!4288 = !DILocation(line: 226, column: 52, scope: !4266)
!4289 = !DILocation(line: 226, column: 57, scope: !4266)
!4290 = !DILocation(line: 227, column: 17, scope: !4266)
!4291 = !DILocation(line: 223, column: 44, scope: !4292)
!4292 = !DILexicalBlockFile(scope: !4260, file: !1058, discriminator: 2)
!4293 = !DILocation(line: 223, column: 17, scope: !4292)
!4294 = distinct !{!4294, !4295}
!4295 = !DILocation(line: 223, column: 17, scope: !4248)
!4296 = !DILocation(line: 227, column: 17, scope: !4297)
!4297 = !DILexicalBlockFile(scope: !4256, file: !1058, discriminator: 1)
!4298 = !DILocation(line: 222, column: 59, scope: !4299)
!4299 = !DILexicalBlockFile(scope: !4248, file: !1058, discriminator: 2)
!4300 = !DILocation(line: 222, column: 13, scope: !4299)
!4301 = distinct !{!4301, !4302}
!4302 = !DILocation(line: 222, column: 13, scope: !4154)
!4303 = !DILocation(line: 228, column: 9, scope: !4154)
!4304 = !DILocation(line: 204, column: 55, scope: !4305)
!4305 = !DILexicalBlockFile(scope: !4147, file: !1058, discriminator: 2)
!4306 = !DILocation(line: 204, column: 9, scope: !4305)
!4307 = distinct !{!4307, !4308}
!4308 = !DILocation(line: 204, column: 9, scope: !4143)
!4309 = !DILocation(line: 230, column: 1, scope: !3889)
!4310 = distinct !DISubprogram(name: "sbr_qmf_analysis", scope: !1003, file: !1003, line: 1169, type: !4311, isLocal: true, isDefinition: true, scopeLine: 1175, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{null, !2410, !4313, !2525, !1353, !955, !955, !4314, !958}
!4313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64, align: 64)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 64, align: 64)
!4315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 65536, align: 32, elements: !962)
!4316 = !DILocalVariable(name: "dsp", arg: 1, scope: !4310, file: !1003, line: 1169, type: !2410)
!4317 = !DILocation(line: 1169, column: 49, scope: !4310)
!4318 = !DILocalVariable(name: "mdct", arg: 2, scope: !4310, file: !1003, line: 1169, type: !4313)
!4319 = !DILocation(line: 1169, column: 66, scope: !4310)
!4320 = !DILocalVariable(name: "sbrdsp", arg: 3, scope: !4310, file: !1003, line: 1173, type: !2525)
!4321 = !DILocation(line: 1173, column: 45, scope: !4310)
!4322 = !DILocalVariable(name: "in", arg: 4, scope: !4310, file: !1003, line: 1173, type: !1353)
!4323 = !DILocation(line: 1173, column: 69, scope: !4310)
!4324 = !DILocalVariable(name: "x", arg: 5, scope: !4310, file: !1003, line: 1173, type: !955)
!4325 = !DILocation(line: 1173, column: 83, scope: !4310)
!4326 = !DILocalVariable(name: "z", arg: 6, scope: !4310, file: !1003, line: 1174, type: !955)
!4327 = !DILocation(line: 1174, column: 39, scope: !4310)
!4328 = !DILocalVariable(name: "W", arg: 7, scope: !4310, file: !1003, line: 1174, type: !4314)
!4329 = !DILocation(line: 1174, column: 56, scope: !4310)
!4330 = !DILocalVariable(name: "buf_idx", arg: 8, scope: !4310, file: !1003, line: 1174, type: !958)
!4331 = !DILocation(line: 1174, column: 77, scope: !4310)
!4332 = !DILocalVariable(name: "i", scope: !4310, file: !1003, line: 1176, type: !958)
!4333 = !DILocation(line: 1176, column: 9, scope: !4310)
!4334 = !DILocalVariable(name: "j", scope: !4310, file: !1003, line: 1178, type: !958)
!4335 = !DILocation(line: 1178, column: 9, scope: !4310)
!4336 = !DILocation(line: 1180, column: 12, scope: !4310)
!4337 = !DILocation(line: 1180, column: 5, scope: !4310)
!4338 = !DILocation(line: 1180, column: 16, scope: !4310)
!4339 = !DILocation(line: 1180, column: 17, scope: !4310)
!4340 = !DILocation(line: 1181, column: 12, scope: !4310)
!4341 = !DILocation(line: 1181, column: 13, scope: !4310)
!4342 = !DILocation(line: 1181, column: 5, scope: !4310)
!4343 = !DILocation(line: 1181, column: 19, scope: !4310)
!4344 = !DILocation(line: 1182, column: 12, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4310, file: !1003, line: 1182, column: 5)
!4346 = !DILocation(line: 1182, column: 10, scope: !4345)
!4347 = !DILocation(line: 1182, column: 17, scope: !4348)
!4348 = !DILexicalBlockFile(scope: !4349, file: !1003, discriminator: 1)
!4349 = distinct !DILexicalBlock(scope: !4345, file: !1003, line: 1182, column: 5)
!4350 = !DILocation(line: 1182, column: 19, scope: !4348)
!4351 = !DILocation(line: 1182, column: 5, scope: !4348)
!4352 = !DILocation(line: 1184, column: 9, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4349, file: !1003, line: 1182, column: 30)
!4354 = !DILocation(line: 1184, column: 14, scope: !4353)
!4355 = !DILocation(line: 1184, column: 34, scope: !4353)
!4356 = !DILocation(line: 1184, column: 56, scope: !4353)
!4357 = !DILocation(line: 1185, column: 9, scope: !4353)
!4358 = !DILocation(line: 1185, column: 17, scope: !4353)
!4359 = !DILocation(line: 1185, column: 25, scope: !4353)
!4360 = !DILocation(line: 1186, column: 9, scope: !4353)
!4361 = !DILocation(line: 1186, column: 17, scope: !4353)
!4362 = !DILocation(line: 1186, column: 33, scope: !4353)
!4363 = !DILocation(line: 1188, column: 16, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4353, file: !1003, line: 1188, column: 9)
!4365 = !DILocation(line: 1188, column: 14, scope: !4364)
!4366 = !DILocation(line: 1188, column: 22, scope: !4367)
!4367 = !DILexicalBlockFile(scope: !4368, file: !1003, discriminator: 1)
!4368 = distinct !DILexicalBlock(scope: !4364, file: !1003, line: 1188, column: 9)
!4369 = !DILocation(line: 1188, column: 24, scope: !4367)
!4370 = !DILocation(line: 1188, column: 9, scope: !4367)
!4371 = !DILocation(line: 1189, column: 19, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !1003, line: 1189, column: 17)
!4373 = distinct !DILexicalBlock(scope: !4368, file: !1003, line: 1188, column: 36)
!4374 = !DILocation(line: 1189, column: 17, scope: !4372)
!4375 = !DILocation(line: 1189, column: 22, scope: !4372)
!4376 = !DILocation(line: 1189, column: 17, scope: !4373)
!4377 = !DILocation(line: 1192, column: 26, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4372, file: !1003, line: 1189, column: 31)
!4379 = !DILocation(line: 1192, column: 24, scope: !4378)
!4380 = !DILocation(line: 1190, column: 17, scope: !4378)
!4381 = !DILocation(line: 1193, column: 19, scope: !4378)
!4382 = !DILocation(line: 1193, column: 17, scope: !4378)
!4383 = !DILocation(line: 1193, column: 22, scope: !4378)
!4384 = !DILocation(line: 1194, column: 13, scope: !4378)
!4385 = !DILocation(line: 1194, column: 26, scope: !4386)
!4386 = !DILexicalBlockFile(scope: !4387, file: !1003, discriminator: 1)
!4387 = distinct !DILexicalBlock(scope: !4372, file: !1003, line: 1194, column: 24)
!4388 = !DILocation(line: 1194, column: 24, scope: !4386)
!4389 = !DILocation(line: 1194, column: 29, scope: !4386)
!4390 = !DILocation(line: 1197, column: 26, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4387, file: !1003, line: 1194, column: 41)
!4392 = !DILocation(line: 1197, column: 24, scope: !4391)
!4393 = !DILocation(line: 1195, column: 17, scope: !4391)
!4394 = !DILocation(line: 1198, column: 19, scope: !4391)
!4395 = !DILocation(line: 1198, column: 17, scope: !4391)
!4396 = !DILocation(line: 1198, column: 22, scope: !4391)
!4397 = !DILocation(line: 1199, column: 13, scope: !4391)
!4398 = !DILocation(line: 1200, column: 9, scope: !4373)
!4399 = !DILocation(line: 1188, column: 32, scope: !4400)
!4400 = !DILexicalBlockFile(scope: !4368, file: !1003, discriminator: 2)
!4401 = !DILocation(line: 1188, column: 9, scope: !4400)
!4402 = distinct !{!4402, !4403}
!4403 = !DILocation(line: 1188, column: 9, scope: !4353)
!4404 = !DILocation(line: 1202, column: 9, scope: !4353)
!4405 = !DILocation(line: 1202, column: 15, scope: !4353)
!4406 = !DILocation(line: 1202, column: 26, scope: !4353)
!4407 = !DILocation(line: 1202, column: 32, scope: !4353)
!4408 = !DILocation(line: 1202, column: 35, scope: !4353)
!4409 = !DILocation(line: 1202, column: 36, scope: !4353)
!4410 = !DILocation(line: 1203, column: 9, scope: !4353)
!4411 = !DILocation(line: 1203, column: 17, scope: !4353)
!4412 = !DILocation(line: 1203, column: 45, scope: !4353)
!4413 = !DILocation(line: 1203, column: 34, scope: !4353)
!4414 = !DILocation(line: 1203, column: 36, scope: !4353)
!4415 = !DILocation(line: 1203, column: 49, scope: !4353)
!4416 = !DILocation(line: 1204, column: 11, scope: !4353)
!4417 = !DILocation(line: 1205, column: 5, scope: !4353)
!4418 = !DILocation(line: 1182, column: 26, scope: !4419)
!4419 = !DILexicalBlockFile(scope: !4349, file: !1003, discriminator: 2)
!4420 = !DILocation(line: 1182, column: 5, scope: !4419)
!4421 = distinct !{!4421, !4422}
!4422 = !DILocation(line: 1182, column: 5, scope: !4310)
!4423 = !DILocation(line: 1206, column: 1, scope: !4310)
!4424 = !DILocalVariable(name: "sbr", arg: 1, scope: !2546, file: !1058, line: 370, type: !1125)
!4425 = !DILocation(line: 370, column: 48, scope: !2546)
!4426 = !DILocalVariable(name: "ch_data", arg: 2, scope: !2546, file: !1058, line: 370, type: !2516)
!4427 = !DILocation(line: 370, column: 62, scope: !2546)
!4428 = !DILocalVariable(name: "i", scope: !2546, file: !1058, line: 372, type: !958)
!4429 = !DILocation(line: 372, column: 9, scope: !2546)
!4430 = !DILocalVariable(name: "new_bw", scope: !2546, file: !1058, line: 373, type: !958)
!4431 = !DILocation(line: 373, column: 9, scope: !2546)
!4432 = !DILocalVariable(name: "accu", scope: !2546, file: !1058, line: 375, type: !992)
!4433 = !DILocation(line: 375, column: 13, scope: !2546)
!4434 = !DILocation(line: 377, column: 12, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !2546, file: !1058, line: 377, column: 5)
!4436 = !DILocation(line: 377, column: 10, scope: !4435)
!4437 = !DILocation(line: 377, column: 17, scope: !4438)
!4438 = !DILexicalBlockFile(scope: !4439, file: !1058, discriminator: 1)
!4439 = distinct !DILexicalBlock(scope: !4435, file: !1058, line: 377, column: 5)
!4440 = !DILocation(line: 377, column: 21, scope: !4438)
!4441 = !DILocation(line: 377, column: 26, scope: !4438)
!4442 = !DILocation(line: 377, column: 19, scope: !4438)
!4443 = !DILocation(line: 377, column: 5, scope: !4438)
!4444 = !DILocation(line: 378, column: 38, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4446, file: !1058, line: 378, column: 13)
!4446 = distinct !DILexicalBlock(scope: !4439, file: !1058, line: 377, column: 36)
!4447 = !DILocation(line: 378, column: 13, scope: !4445)
!4448 = !DILocation(line: 378, column: 22, scope: !4445)
!4449 = !DILocation(line: 378, column: 68, scope: !4445)
!4450 = !DILocation(line: 378, column: 43, scope: !4445)
!4451 = !DILocation(line: 378, column: 52, scope: !4445)
!4452 = !DILocation(line: 378, column: 41, scope: !4445)
!4453 = !DILocation(line: 378, column: 71, scope: !4445)
!4454 = !DILocation(line: 378, column: 13, scope: !4446)
!4455 = !DILocation(line: 379, column: 20, scope: !4445)
!4456 = !DILocation(line: 379, column: 13, scope: !4445)
!4457 = !DILocation(line: 381, column: 54, scope: !4445)
!4458 = !DILocation(line: 381, column: 29, scope: !4445)
!4459 = !DILocation(line: 381, column: 38, scope: !4445)
!4460 = !DILocation(line: 381, column: 22, scope: !4445)
!4461 = !DILocation(line: 381, column: 20, scope: !4445)
!4462 = !DILocation(line: 383, column: 13, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4446, file: !1058, line: 383, column: 13)
!4464 = !DILocation(line: 383, column: 40, scope: !4463)
!4465 = !DILocation(line: 383, column: 22, scope: !4463)
!4466 = !DILocation(line: 383, column: 31, scope: !4463)
!4467 = !DILocation(line: 383, column: 20, scope: !4463)
!4468 = !DILocation(line: 383, column: 13, scope: !4446)
!4469 = !DILocation(line: 384, column: 29, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4463, file: !1058, line: 383, column: 43)
!4471 = !DILocation(line: 384, column: 20, scope: !4470)
!4472 = !DILocation(line: 384, column: 36, scope: !4470)
!4473 = !DILocation(line: 384, column: 18, scope: !4470)
!4474 = !DILocation(line: 385, column: 48, scope: !4470)
!4475 = !DILocation(line: 385, column: 30, scope: !4470)
!4476 = !DILocation(line: 385, column: 39, scope: !4470)
!4477 = !DILocation(line: 385, column: 21, scope: !4470)
!4478 = !DILocation(line: 385, column: 51, scope: !4470)
!4479 = !DILocation(line: 385, column: 18, scope: !4470)
!4480 = !DILocation(line: 386, column: 29, scope: !4470)
!4481 = !DILocation(line: 386, column: 34, scope: !4470)
!4482 = !DILocation(line: 386, column: 48, scope: !4470)
!4483 = !DILocation(line: 386, column: 22, scope: !4470)
!4484 = !DILocation(line: 386, column: 20, scope: !4470)
!4485 = !DILocation(line: 387, column: 9, scope: !4470)
!4486 = !DILocation(line: 388, column: 29, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4463, file: !1058, line: 387, column: 16)
!4488 = !DILocation(line: 388, column: 20, scope: !4487)
!4489 = !DILocation(line: 388, column: 36, scope: !4487)
!4490 = !DILocation(line: 388, column: 18, scope: !4487)
!4491 = !DILocation(line: 389, column: 48, scope: !4487)
!4492 = !DILocation(line: 389, column: 30, scope: !4487)
!4493 = !DILocation(line: 389, column: 39, scope: !4487)
!4494 = !DILocation(line: 389, column: 21, scope: !4487)
!4495 = !DILocation(line: 389, column: 51, scope: !4487)
!4496 = !DILocation(line: 389, column: 18, scope: !4487)
!4497 = !DILocation(line: 390, column: 29, scope: !4487)
!4498 = !DILocation(line: 390, column: 34, scope: !4487)
!4499 = !DILocation(line: 390, column: 48, scope: !4487)
!4500 = !DILocation(line: 390, column: 22, scope: !4487)
!4501 = !DILocation(line: 390, column: 20, scope: !4487)
!4502 = !DILocation(line: 392, column: 32, scope: !4446)
!4503 = !DILocation(line: 392, column: 39, scope: !4446)
!4504 = !DILocation(line: 392, column: 32, scope: !4505)
!4505 = !DILexicalBlockFile(scope: !4446, file: !1058, discriminator: 1)
!4506 = !DILocation(line: 392, column: 57, scope: !4507)
!4507 = !DILexicalBlockFile(scope: !4446, file: !1058, discriminator: 2)
!4508 = !DILocation(line: 392, column: 32, scope: !4507)
!4509 = !DILocation(line: 392, column: 32, scope: !4510)
!4510 = !DILexicalBlockFile(scope: !4446, file: !1058, discriminator: 3)
!4511 = !DILocation(line: 392, column: 27, scope: !4510)
!4512 = !DILocation(line: 392, column: 9, scope: !4510)
!4513 = !DILocation(line: 392, column: 18, scope: !4510)
!4514 = !DILocation(line: 392, column: 30, scope: !4510)
!4515 = !DILocation(line: 393, column: 5, scope: !4446)
!4516 = !DILocation(line: 377, column: 32, scope: !4517)
!4517 = !DILexicalBlockFile(scope: !4439, file: !1058, discriminator: 2)
!4518 = !DILocation(line: 377, column: 5, scope: !4517)
!4519 = distinct !{!4519, !4520}
!4520 = !DILocation(line: 377, column: 5, scope: !2546)
!4521 = !DILocation(line: 394, column: 1, scope: !2546)
!4522 = distinct !DISubprogram(name: "sbr_hf_gen", scope: !1003, file: !1003, line: 1291, type: !4523, isLocal: true, isDefinition: true, scopeLine: 1296, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!4523 = !DISubroutineType(types: !4524)
!4524 = !{!958, !1510, !1125, !2509, !965, !970, !970, !1353, !1632, !958}
!4525 = !DILocalVariable(name: "ac", arg: 1, scope: !4522, file: !1003, line: 1291, type: !1510)
!4526 = !DILocation(line: 1291, column: 35, scope: !4522)
!4527 = !DILocalVariable(name: "sbr", arg: 2, scope: !4522, file: !1003, line: 1291, type: !1125)
!4528 = !DILocation(line: 1291, column: 64, scope: !4522)
!4529 = !DILocalVariable(name: "X_high", arg: 3, scope: !4522, file: !1003, line: 1292, type: !2509)
!4530 = !DILocation(line: 1292, column: 32, scope: !4522)
!4531 = !DILocalVariable(name: "X_low", arg: 4, scope: !4522, file: !1003, line: 1292, type: !965)
!4532 = !DILocation(line: 1292, column: 66, scope: !4522)
!4533 = !DILocalVariable(name: "alpha0", arg: 5, scope: !4522, file: !1003, line: 1293, type: !970)
!4534 = !DILocation(line: 1293, column: 40, scope: !4522)
!4535 = !DILocalVariable(name: "alpha1", arg: 6, scope: !4522, file: !1003, line: 1293, type: !970)
!4536 = !DILocation(line: 1293, column: 69, scope: !4522)
!4537 = !DILocalVariable(name: "bw_array", arg: 7, scope: !4522, file: !1003, line: 1294, type: !1353)
!4538 = !DILocation(line: 1294, column: 38, scope: !4522)
!4539 = !DILocalVariable(name: "t_env", arg: 8, scope: !4522, file: !1003, line: 1294, type: !1632)
!4540 = !DILocation(line: 1294, column: 66, scope: !4522)
!4541 = !DILocalVariable(name: "bs_num_env", arg: 9, scope: !4522, file: !1003, line: 1295, type: !958)
!4542 = !DILocation(line: 1295, column: 27, scope: !4522)
!4543 = !DILocalVariable(name: "j", scope: !4522, file: !1003, line: 1297, type: !958)
!4544 = !DILocation(line: 1297, column: 9, scope: !4522)
!4545 = !DILocalVariable(name: "x", scope: !4522, file: !1003, line: 1297, type: !958)
!4546 = !DILocation(line: 1297, column: 12, scope: !4522)
!4547 = !DILocalVariable(name: "g", scope: !4522, file: !1003, line: 1298, type: !958)
!4548 = !DILocation(line: 1298, column: 9, scope: !4522)
!4549 = !DILocalVariable(name: "k", scope: !4522, file: !1003, line: 1299, type: !958)
!4550 = !DILocation(line: 1299, column: 9, scope: !4522)
!4551 = !DILocation(line: 1299, column: 13, scope: !4522)
!4552 = !DILocation(line: 1299, column: 18, scope: !4522)
!4553 = !DILocation(line: 1300, column: 12, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4522, file: !1003, line: 1300, column: 5)
!4555 = !DILocation(line: 1300, column: 10, scope: !4554)
!4556 = !DILocation(line: 1300, column: 17, scope: !4557)
!4557 = !DILexicalBlockFile(scope: !4558, file: !1003, discriminator: 1)
!4558 = distinct !DILexicalBlock(scope: !4554, file: !1003, line: 1300, column: 5)
!4559 = !DILocation(line: 1300, column: 21, scope: !4557)
!4560 = !DILocation(line: 1300, column: 26, scope: !4557)
!4561 = !DILocation(line: 1300, column: 19, scope: !4557)
!4562 = !DILocation(line: 1300, column: 5, scope: !4557)
!4563 = !DILocation(line: 1301, column: 16, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !1003, line: 1301, column: 9)
!4565 = distinct !DILexicalBlock(scope: !4558, file: !1003, line: 1300, column: 44)
!4566 = !DILocation(line: 1301, column: 14, scope: !4564)
!4567 = !DILocation(line: 1301, column: 21, scope: !4568)
!4568 = !DILexicalBlockFile(scope: !4569, file: !1003, discriminator: 1)
!4569 = distinct !DILexicalBlock(scope: !4564, file: !1003, line: 1301, column: 9)
!4570 = !DILocation(line: 1301, column: 49, scope: !4568)
!4571 = !DILocation(line: 1301, column: 25, scope: !4568)
!4572 = !DILocation(line: 1301, column: 30, scope: !4568)
!4573 = !DILocation(line: 1301, column: 23, scope: !4568)
!4574 = !DILocation(line: 1301, column: 9, scope: !4568)
!4575 = !DILocalVariable(name: "p", scope: !4576, file: !1003, line: 1302, type: !1591)
!4576 = distinct !DILexicalBlock(scope: !4569, file: !1003, line: 1301, column: 63)
!4577 = !DILocation(line: 1302, column: 23, scope: !4576)
!4578 = !DILocation(line: 1302, column: 52, scope: !4576)
!4579 = !DILocation(line: 1302, column: 27, scope: !4576)
!4580 = !DILocation(line: 1302, column: 32, scope: !4576)
!4581 = !DILocation(line: 1302, column: 57, scope: !4576)
!4582 = !DILocation(line: 1302, column: 55, scope: !4576)
!4583 = !DILocation(line: 1303, column: 13, scope: !4576)
!4584 = !DILocation(line: 1303, column: 20, scope: !4585)
!4585 = !DILexicalBlockFile(scope: !4576, file: !1003, discriminator: 1)
!4586 = !DILocation(line: 1303, column: 25, scope: !4585)
!4587 = !DILocation(line: 1303, column: 30, scope: !4585)
!4588 = !DILocation(line: 1303, column: 22, scope: !4585)
!4589 = !DILocation(line: 1303, column: 34, scope: !4585)
!4590 = !DILocation(line: 1303, column: 37, scope: !4591)
!4591 = !DILexicalBlockFile(scope: !4576, file: !1003, discriminator: 2)
!4592 = !DILocation(line: 1303, column: 60, scope: !4591)
!4593 = !DILocation(line: 1303, column: 42, scope: !4591)
!4594 = !DILocation(line: 1303, column: 47, scope: !4591)
!4595 = !DILocation(line: 1303, column: 39, scope: !4591)
!4596 = !DILocation(line: 1303, column: 13, scope: !4597)
!4597 = !DILexicalBlockFile(scope: !4576, file: !1003, discriminator: 3)
!4598 = !DILocation(line: 1304, column: 18, scope: !4576)
!4599 = !DILocation(line: 1303, column: 13, scope: !4600)
!4600 = !DILexicalBlockFile(scope: !4576, file: !1003, discriminator: 4)
!4601 = distinct !{!4601, !4583}
!4602 = !DILocation(line: 1305, column: 14, scope: !4576)
!4603 = !DILocation(line: 1307, column: 17, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4576, file: !1003, line: 1307, column: 17)
!4605 = !DILocation(line: 1307, column: 19, scope: !4604)
!4606 = !DILocation(line: 1307, column: 17, scope: !4576)
!4607 = !DILocation(line: 1308, column: 24, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4604, file: !1003, line: 1307, column: 24)
!4609 = !DILocation(line: 1308, column: 28, scope: !4608)
!4610 = !DILocation(line: 1309, column: 71, scope: !4608)
!4611 = !DILocation(line: 1308, column: 17, scope: !4608)
!4612 = !DILocation(line: 1310, column: 17, scope: !4608)
!4613 = !DILocation(line: 1313, column: 13, scope: !4576)
!4614 = !DILocation(line: 1313, column: 18, scope: !4576)
!4615 = !DILocation(line: 1313, column: 22, scope: !4576)
!4616 = !DILocation(line: 1313, column: 36, scope: !4576)
!4617 = !DILocation(line: 1313, column: 29, scope: !4576)
!4618 = !DILocation(line: 1313, column: 39, scope: !4576)
!4619 = !DILocation(line: 1314, column: 35, scope: !4576)
!4620 = !DILocation(line: 1314, column: 29, scope: !4576)
!4621 = !DILocation(line: 1314, column: 38, scope: !4576)
!4622 = !DILocation(line: 1315, column: 36, scope: !4576)
!4623 = !DILocation(line: 1315, column: 29, scope: !4576)
!4624 = !DILocation(line: 1315, column: 47, scope: !4576)
!4625 = !DILocation(line: 1315, column: 40, scope: !4576)
!4626 = !DILocation(line: 1315, column: 60, scope: !4576)
!4627 = !DILocation(line: 1315, column: 51, scope: !4576)
!4628 = !DILocation(line: 1316, column: 33, scope: !4576)
!4629 = !DILocation(line: 1316, column: 31, scope: !4576)
!4630 = !DILocation(line: 1316, column: 53, scope: !4576)
!4631 = !DILocation(line: 1316, column: 47, scope: !4576)
!4632 = !DILocation(line: 1316, column: 45, scope: !4576)
!4633 = !DILocation(line: 1317, column: 9, scope: !4576)
!4634 = !DILocation(line: 1301, column: 54, scope: !4635)
!4635 = !DILexicalBlockFile(scope: !4569, file: !1003, discriminator: 2)
!4636 = !DILocation(line: 1301, column: 59, scope: !4635)
!4637 = !DILocation(line: 1301, column: 9, scope: !4635)
!4638 = distinct !{!4638, !4639}
!4639 = !DILocation(line: 1301, column: 9, scope: !4565)
!4640 = !DILocation(line: 1318, column: 5, scope: !4565)
!4641 = !DILocation(line: 1300, column: 40, scope: !4642)
!4642 = !DILexicalBlockFile(scope: !4558, file: !1003, discriminator: 2)
!4643 = !DILocation(line: 1300, column: 5, scope: !4642)
!4644 = distinct !{!4644, !4645}
!4645 = !DILocation(line: 1300, column: 5, scope: !4522)
!4646 = !DILocation(line: 1319, column: 9, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4522, file: !1003, line: 1319, column: 9)
!4648 = !DILocation(line: 1319, column: 13, scope: !4647)
!4649 = !DILocation(line: 1319, column: 18, scope: !4647)
!4650 = !DILocation(line: 1319, column: 25, scope: !4647)
!4651 = !DILocation(line: 1319, column: 30, scope: !4647)
!4652 = !DILocation(line: 1319, column: 23, scope: !4647)
!4653 = !DILocation(line: 1319, column: 11, scope: !4647)
!4654 = !DILocation(line: 1319, column: 9, scope: !4522)
!4655 = !DILocation(line: 1320, column: 16, scope: !4647)
!4656 = !DILocation(line: 1320, column: 25, scope: !4647)
!4657 = !DILocation(line: 1320, column: 23, scope: !4647)
!4658 = !DILocation(line: 1320, column: 9, scope: !4647)
!4659 = !DILocation(line: 1320, column: 32, scope: !4647)
!4660 = !DILocation(line: 1320, column: 37, scope: !4647)
!4661 = !DILocation(line: 1320, column: 44, scope: !4647)
!4662 = !DILocation(line: 1320, column: 49, scope: !4647)
!4663 = !DILocation(line: 1320, column: 42, scope: !4647)
!4664 = !DILocation(line: 1320, column: 57, scope: !4647)
!4665 = !DILocation(line: 1320, column: 55, scope: !4647)
!4666 = !DILocation(line: 1320, column: 31, scope: !4647)
!4667 = !DILocation(line: 1320, column: 60, scope: !4647)
!4668 = !DILocation(line: 1322, column: 5, scope: !4522)
!4669 = !DILocation(line: 1323, column: 1, scope: !4522)
!4670 = distinct !DISubprogram(name: "sbr_mapping", scope: !1003, file: !1003, line: 1365, type: !4671, isLocal: true, isDefinition: true, scopeLine: 1367, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!4671 = !DISubroutineType(types: !4672)
!4672 = !{!958, !1510, !1125, !2516, !1798}
!4673 = !DILocalVariable(name: "ac", arg: 1, scope: !4670, file: !1003, line: 1365, type: !1510)
!4674 = !DILocation(line: 1365, column: 36, scope: !4670)
!4675 = !DILocalVariable(name: "sbr", arg: 2, scope: !4670, file: !1003, line: 1365, type: !1125)
!4676 = !DILocation(line: 1365, column: 65, scope: !4670)
!4677 = !DILocalVariable(name: "ch_data", arg: 3, scope: !4670, file: !1003, line: 1366, type: !2516)
!4678 = !DILocation(line: 1366, column: 34, scope: !4670)
!4679 = !DILocalVariable(name: "e_a", arg: 4, scope: !4670, file: !1003, line: 1366, type: !1798)
!4680 = !DILocation(line: 1366, column: 47, scope: !4670)
!4681 = !DILocalVariable(name: "e", scope: !4670, file: !1003, line: 1368, type: !958)
!4682 = !DILocation(line: 1368, column: 9, scope: !4670)
!4683 = !DILocalVariable(name: "i", scope: !4670, file: !1003, line: 1368, type: !958)
!4684 = !DILocation(line: 1368, column: 12, scope: !4670)
!4685 = !DILocalVariable(name: "m", scope: !4670, file: !1003, line: 1368, type: !958)
!4686 = !DILocation(line: 1368, column: 15, scope: !4670)
!4687 = !DILocation(line: 1370, column: 12, scope: !4670)
!4688 = !DILocation(line: 1370, column: 21, scope: !4670)
!4689 = !DILocation(line: 1370, column: 5, scope: !4670)
!4690 = !DILocation(line: 1371, column: 12, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4670, file: !1003, line: 1371, column: 5)
!4692 = !DILocation(line: 1371, column: 10, scope: !4691)
!4693 = !DILocation(line: 1371, column: 17, scope: !4694)
!4694 = !DILexicalBlockFile(scope: !4695, file: !1003, discriminator: 1)
!4695 = distinct !DILexicalBlock(scope: !4691, file: !1003, line: 1371, column: 5)
!4696 = !DILocation(line: 1371, column: 21, scope: !4694)
!4697 = !DILocation(line: 1371, column: 30, scope: !4694)
!4698 = !DILocation(line: 1371, column: 19, scope: !4694)
!4699 = !DILocation(line: 1371, column: 5, scope: !4694)
!4700 = !DILocalVariable(name: "ilim", scope: !4701, file: !1003, line: 1372, type: !1016)
!4701 = distinct !DILexicalBlock(scope: !4695, file: !1003, line: 1371, column: 47)
!4702 = !DILocation(line: 1372, column: 28, scope: !4701)
!4703 = !DILocation(line: 1372, column: 63, scope: !4701)
!4704 = !DILocation(line: 1372, column: 65, scope: !4701)
!4705 = !DILocation(line: 1372, column: 42, scope: !4701)
!4706 = !DILocation(line: 1372, column: 51, scope: !4701)
!4707 = !DILocation(line: 1372, column: 35, scope: !4701)
!4708 = !DILocation(line: 1372, column: 40, scope: !4701)
!4709 = !DILocalVariable(name: "table", scope: !4701, file: !1003, line: 1373, type: !1413)
!4710 = !DILocation(line: 1373, column: 19, scope: !4701)
!4711 = !DILocation(line: 1373, column: 48, scope: !4701)
!4712 = !DILocation(line: 1373, column: 50, scope: !4701)
!4713 = !DILocation(line: 1373, column: 27, scope: !4701)
!4714 = !DILocation(line: 1373, column: 36, scope: !4701)
!4715 = !DILocation(line: 1373, column: 57, scope: !4716)
!4716 = !DILexicalBlockFile(scope: !4701, file: !1003, discriminator: 1)
!4717 = !DILocation(line: 1373, column: 62, scope: !4716)
!4718 = !DILocation(line: 1373, column: 27, scope: !4716)
!4719 = !DILocation(line: 1373, column: 76, scope: !4720)
!4720 = !DILexicalBlockFile(scope: !4701, file: !1003, discriminator: 2)
!4721 = !DILocation(line: 1373, column: 81, scope: !4720)
!4722 = !DILocation(line: 1373, column: 27, scope: !4720)
!4723 = !DILocation(line: 1373, column: 27, scope: !4724)
!4724 = !DILexicalBlockFile(scope: !4701, file: !1003, discriminator: 3)
!4725 = !DILocation(line: 1373, column: 19, scope: !4724)
!4726 = !DILocalVariable(name: "k", scope: !4701, file: !1003, line: 1374, type: !958)
!4727 = !DILocation(line: 1374, column: 13, scope: !4701)
!4728 = !DILocation(line: 1376, column: 13, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4701, file: !1003, line: 1376, column: 13)
!4730 = !DILocation(line: 1376, column: 18, scope: !4729)
!4731 = !DILocation(line: 1376, column: 27, scope: !4729)
!4732 = !DILocation(line: 1376, column: 24, scope: !4729)
!4733 = !DILocation(line: 1376, column: 13, scope: !4701)
!4734 = !DILocation(line: 1377, column: 20, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4729, file: !1003, line: 1376, column: 37)
!4736 = !DILocation(line: 1377, column: 24, scope: !4735)
!4737 = !DILocation(line: 1377, column: 13, scope: !4735)
!4738 = !DILocation(line: 1379, column: 25, scope: !4735)
!4739 = !DILocation(line: 1379, column: 13, scope: !4735)
!4740 = !DILocation(line: 1380, column: 13, scope: !4735)
!4741 = !DILocation(line: 1382, column: 16, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4701, file: !1003, line: 1382, column: 9)
!4743 = !DILocation(line: 1382, column: 14, scope: !4742)
!4744 = !DILocation(line: 1382, column: 21, scope: !4745)
!4745 = !DILexicalBlockFile(scope: !4746, file: !1003, discriminator: 1)
!4746 = distinct !DILexicalBlock(scope: !4742, file: !1003, line: 1382, column: 9)
!4747 = !DILocation(line: 1382, column: 25, scope: !4745)
!4748 = !DILocation(line: 1382, column: 23, scope: !4745)
!4749 = !DILocation(line: 1382, column: 9, scope: !4745)
!4750 = !DILocation(line: 1383, column: 28, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4746, file: !1003, line: 1383, column: 13)
!4752 = !DILocation(line: 1383, column: 22, scope: !4751)
!4753 = !DILocation(line: 1383, column: 20, scope: !4751)
!4754 = !DILocation(line: 1383, column: 18, scope: !4751)
!4755 = !DILocation(line: 1383, column: 32, scope: !4756)
!4756 = !DILexicalBlockFile(scope: !4757, file: !1003, discriminator: 1)
!4757 = distinct !DILexicalBlock(scope: !4751, file: !1003, line: 1383, column: 13)
!4758 = !DILocation(line: 1383, column: 42, scope: !4756)
!4759 = !DILocation(line: 1383, column: 44, scope: !4756)
!4760 = !DILocation(line: 1383, column: 36, scope: !4756)
!4761 = !DILocation(line: 1383, column: 34, scope: !4756)
!4762 = !DILocation(line: 1383, column: 13, scope: !4756)
!4763 = !DILocation(line: 1384, column: 38, scope: !4757)
!4764 = !DILocation(line: 1384, column: 42, scope: !4757)
!4765 = !DILocation(line: 1384, column: 47, scope: !4757)
!4766 = !DILocation(line: 1384, column: 40, scope: !4757)
!4767 = !DILocation(line: 1384, column: 17, scope: !4757)
!4768 = !DILocation(line: 1384, column: 35, scope: !4757)
!4769 = !DILocation(line: 1384, column: 22, scope: !4757)
!4770 = !DILocation(line: 1384, column: 79, scope: !4757)
!4771 = !DILocation(line: 1384, column: 56, scope: !4757)
!4772 = !DILocation(line: 1384, column: 74, scope: !4757)
!4773 = !DILocation(line: 1384, column: 75, scope: !4757)
!4774 = !DILocation(line: 1384, column: 65, scope: !4757)
!4775 = !DILocation(line: 1383, column: 51, scope: !4776)
!4776 = !DILexicalBlockFile(scope: !4757, file: !1003, discriminator: 2)
!4777 = !DILocation(line: 1383, column: 13, scope: !4776)
!4778 = distinct !{!4778, !4779}
!4779 = !DILocation(line: 1383, column: 13, scope: !4746)
!4780 = !DILocation(line: 1384, column: 80, scope: !4781)
!4781 = !DILexicalBlockFile(scope: !4751, file: !1003, discriminator: 1)
!4782 = !DILocation(line: 1382, column: 32, scope: !4783)
!4783 = !DILexicalBlockFile(scope: !4746, file: !1003, discriminator: 2)
!4784 = !DILocation(line: 1382, column: 9, scope: !4783)
!4785 = distinct !{!4785, !4786}
!4786 = !DILocation(line: 1382, column: 9, scope: !4701)
!4787 = !DILocation(line: 1387, column: 14, scope: !4701)
!4788 = !DILocation(line: 1387, column: 23, scope: !4701)
!4789 = !DILocation(line: 1387, column: 36, scope: !4701)
!4790 = !DILocation(line: 1387, column: 41, scope: !4701)
!4791 = !DILocation(line: 1387, column: 60, scope: !4716)
!4792 = !DILocation(line: 1387, column: 45, scope: !4716)
!4793 = !DILocation(line: 1387, column: 54, scope: !4716)
!4794 = !DILocation(line: 1387, column: 66, scope: !4716)
!4795 = !DILocation(line: 1387, column: 75, scope: !4716)
!4796 = !DILocation(line: 1387, column: 63, scope: !4716)
!4797 = !DILocation(line: 1387, column: 41, scope: !4720)
!4798 = !DILocation(line: 1387, column: 11, scope: !4720)
!4799 = !DILocation(line: 1388, column: 16, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4701, file: !1003, line: 1388, column: 9)
!4801 = !DILocation(line: 1388, column: 14, scope: !4800)
!4802 = !DILocation(line: 1388, column: 21, scope: !4803)
!4803 = !DILexicalBlockFile(scope: !4804, file: !1003, discriminator: 1)
!4804 = distinct !DILexicalBlock(scope: !4800, file: !1003, line: 1388, column: 9)
!4805 = !DILocation(line: 1388, column: 25, scope: !4803)
!4806 = !DILocation(line: 1388, column: 30, scope: !4803)
!4807 = !DILocation(line: 1388, column: 23, scope: !4803)
!4808 = !DILocation(line: 1388, column: 9, scope: !4803)
!4809 = !DILocation(line: 1389, column: 40, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4804, file: !1003, line: 1389, column: 13)
!4811 = !DILocation(line: 1389, column: 22, scope: !4810)
!4812 = !DILocation(line: 1389, column: 27, scope: !4810)
!4813 = !DILocation(line: 1389, column: 20, scope: !4810)
!4814 = !DILocation(line: 1389, column: 18, scope: !4810)
!4815 = !DILocation(line: 1389, column: 44, scope: !4816)
!4816 = !DILexicalBlockFile(scope: !4817, file: !1003, discriminator: 1)
!4817 = distinct !DILexicalBlock(scope: !4810, file: !1003, line: 1389, column: 13)
!4818 = !DILocation(line: 1389, column: 66, scope: !4816)
!4819 = !DILocation(line: 1389, column: 68, scope: !4816)
!4820 = !DILocation(line: 1389, column: 48, scope: !4816)
!4821 = !DILocation(line: 1389, column: 53, scope: !4816)
!4822 = !DILocation(line: 1389, column: 46, scope: !4816)
!4823 = !DILocation(line: 1389, column: 13, scope: !4816)
!4824 = !DILocation(line: 1390, column: 34, scope: !4817)
!4825 = !DILocation(line: 1390, column: 38, scope: !4817)
!4826 = !DILocation(line: 1390, column: 43, scope: !4817)
!4827 = !DILocation(line: 1390, column: 36, scope: !4817)
!4828 = !DILocation(line: 1390, column: 17, scope: !4817)
!4829 = !DILocation(line: 1390, column: 31, scope: !4817)
!4830 = !DILocation(line: 1390, column: 22, scope: !4817)
!4831 = !DILocation(line: 1390, column: 77, scope: !4817)
!4832 = !DILocation(line: 1390, column: 52, scope: !4817)
!4833 = !DILocation(line: 1390, column: 72, scope: !4817)
!4834 = !DILocation(line: 1390, column: 73, scope: !4817)
!4835 = !DILocation(line: 1390, column: 61, scope: !4817)
!4836 = !DILocation(line: 1389, column: 75, scope: !4837)
!4837 = !DILexicalBlockFile(scope: !4817, file: !1003, discriminator: 2)
!4838 = !DILocation(line: 1389, column: 13, scope: !4837)
!4839 = distinct !{!4839, !4840}
!4840 = !DILocation(line: 1389, column: 13, scope: !4804)
!4841 = !DILocation(line: 1390, column: 78, scope: !4842)
!4842 = !DILexicalBlockFile(scope: !4810, file: !1003, discriminator: 1)
!4843 = !DILocation(line: 1388, column: 36, scope: !4844)
!4844 = !DILexicalBlockFile(scope: !4804, file: !1003, discriminator: 2)
!4845 = !DILocation(line: 1388, column: 9, scope: !4844)
!4846 = distinct !{!4846, !4847}
!4847 = !DILocation(line: 1388, column: 9, scope: !4701)
!4848 = !DILocation(line: 1392, column: 16, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4701, file: !1003, line: 1392, column: 9)
!4850 = !DILocation(line: 1392, column: 14, scope: !4849)
!4851 = !DILocation(line: 1392, column: 21, scope: !4852)
!4852 = !DILexicalBlockFile(scope: !4853, file: !1003, discriminator: 1)
!4853 = distinct !DILexicalBlock(scope: !4849, file: !1003, line: 1392, column: 9)
!4854 = !DILocation(line: 1392, column: 25, scope: !4852)
!4855 = !DILocation(line: 1392, column: 30, scope: !4852)
!4856 = !DILocation(line: 1392, column: 23, scope: !4852)
!4857 = !DILocation(line: 1392, column: 9, scope: !4852)
!4858 = !DILocation(line: 1393, column: 17, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !1003, line: 1393, column: 17)
!4860 = distinct !DILexicalBlock(scope: !4853, file: !1003, line: 1392, column: 41)
!4861 = !DILocation(line: 1393, column: 26, scope: !4859)
!4862 = !DILocation(line: 1393, column: 17, scope: !4860)
!4863 = !DILocalVariable(name: "m_midpoint", scope: !4864, file: !1003, line: 1394, type: !1016)
!4864 = distinct !DILexicalBlock(scope: !4859, file: !1003, line: 1393, column: 48)
!4865 = !DILocation(line: 1394, column: 36, scope: !4864)
!4866 = !DILocation(line: 1395, column: 39, scope: !4864)
!4867 = !DILocation(line: 1395, column: 22, scope: !4864)
!4868 = !DILocation(line: 1395, column: 27, scope: !4864)
!4869 = !DILocation(line: 1395, column: 61, scope: !4864)
!4870 = !DILocation(line: 1395, column: 63, scope: !4864)
!4871 = !DILocation(line: 1395, column: 44, scope: !4864)
!4872 = !DILocation(line: 1395, column: 49, scope: !4864)
!4873 = !DILocation(line: 1395, column: 42, scope: !4864)
!4874 = !DILocation(line: 1395, column: 69, scope: !4864)
!4875 = !DILocation(line: 1397, column: 99, scope: !4864)
!4876 = !DILocation(line: 1397, column: 74, scope: !4864)
!4877 = !DILocation(line: 1397, column: 83, scope: !4864)
!4878 = !DILocation(line: 1398, column: 22, scope: !4864)
!4879 = !DILocation(line: 1398, column: 27, scope: !4864)
!4880 = !DILocation(line: 1398, column: 24, scope: !4864)
!4881 = !DILocation(line: 1398, column: 34, scope: !4864)
!4882 = !DILocation(line: 1398, column: 64, scope: !4883)
!4883 = !DILexicalBlockFile(scope: !4864, file: !1003, discriminator: 1)
!4884 = !DILocation(line: 1398, column: 77, scope: !4883)
!4885 = !DILocation(line: 1398, column: 82, scope: !4883)
!4886 = !DILocation(line: 1398, column: 75, scope: !4883)
!4887 = !DILocation(line: 1398, column: 38, scope: !4883)
!4888 = !DILocation(line: 1398, column: 47, scope: !4883)
!4889 = !DILocation(line: 1398, column: 89, scope: !4883)
!4890 = !DILocation(line: 1398, column: 34, scope: !4883)
!4891 = !DILocation(line: 1398, column: 34, scope: !4892)
!4892 = !DILexicalBlockFile(scope: !4864, file: !1003, discriminator: 2)
!4893 = !DILocation(line: 1397, column: 102, scope: !4883)
!4894 = !DILocation(line: 1397, column: 74, scope: !4883)
!4895 = !DILocation(line: 1397, column: 47, scope: !4883)
!4896 = !DILocation(line: 1397, column: 60, scope: !4883)
!4897 = !DILocation(line: 1397, column: 65, scope: !4883)
!4898 = !DILocation(line: 1397, column: 58, scope: !4883)
!4899 = !DILocation(line: 1397, column: 17, scope: !4883)
!4900 = !DILocation(line: 1397, column: 40, scope: !4883)
!4901 = !DILocation(line: 1397, column: 42, scope: !4883)
!4902 = !DILocation(line: 1397, column: 26, scope: !4883)
!4903 = !DILocation(line: 1397, column: 72, scope: !4883)
!4904 = !DILocation(line: 1399, column: 13, scope: !4864)
!4905 = !DILocation(line: 1400, column: 9, scope: !4860)
!4906 = !DILocation(line: 1392, column: 37, scope: !4907)
!4907 = !DILexicalBlockFile(scope: !4853, file: !1003, discriminator: 2)
!4908 = !DILocation(line: 1392, column: 9, scope: !4907)
!4909 = distinct !{!4909, !4910}
!4910 = !DILocation(line: 1392, column: 9, scope: !4701)
!4911 = !DILocation(line: 1402, column: 16, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4701, file: !1003, line: 1402, column: 9)
!4913 = !DILocation(line: 1402, column: 14, scope: !4912)
!4914 = !DILocation(line: 1402, column: 21, scope: !4915)
!4915 = !DILexicalBlockFile(scope: !4916, file: !1003, discriminator: 1)
!4916 = distinct !DILexicalBlock(scope: !4912, file: !1003, line: 1402, column: 9)
!4917 = !DILocation(line: 1402, column: 25, scope: !4915)
!4918 = !DILocation(line: 1402, column: 23, scope: !4915)
!4919 = !DILocation(line: 1402, column: 9, scope: !4915)
!4920 = !DILocalVariable(name: "additional_sinusoid_present", scope: !4921, file: !1003, line: 1403, type: !958)
!4921 = distinct !DILexicalBlock(scope: !4916, file: !1003, line: 1402, column: 36)
!4922 = !DILocation(line: 1403, column: 17, scope: !4921)
!4923 = !DILocation(line: 1404, column: 28, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4921, file: !1003, line: 1404, column: 13)
!4925 = !DILocation(line: 1404, column: 22, scope: !4924)
!4926 = !DILocation(line: 1404, column: 20, scope: !4924)
!4927 = !DILocation(line: 1404, column: 18, scope: !4924)
!4928 = !DILocation(line: 1404, column: 32, scope: !4929)
!4929 = !DILexicalBlockFile(scope: !4930, file: !1003, discriminator: 1)
!4930 = distinct !DILexicalBlock(scope: !4924, file: !1003, line: 1404, column: 13)
!4931 = !DILocation(line: 1404, column: 42, scope: !4929)
!4932 = !DILocation(line: 1404, column: 44, scope: !4929)
!4933 = !DILocation(line: 1404, column: 36, scope: !4929)
!4934 = !DILocation(line: 1404, column: 34, scope: !4929)
!4935 = !DILocation(line: 1404, column: 13, scope: !4929)
!4936 = !DILocation(line: 1405, column: 51, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4938, file: !1003, line: 1405, column: 21)
!4938 = distinct !DILexicalBlock(scope: !4930, file: !1003, line: 1404, column: 55)
!4939 = !DILocation(line: 1405, column: 55, scope: !4937)
!4940 = !DILocation(line: 1405, column: 60, scope: !4937)
!4941 = !DILocation(line: 1405, column: 53, scope: !4937)
!4942 = !DILocation(line: 1405, column: 21, scope: !4937)
!4943 = !DILocation(line: 1405, column: 44, scope: !4937)
!4944 = !DILocation(line: 1405, column: 46, scope: !4937)
!4945 = !DILocation(line: 1405, column: 30, scope: !4937)
!4946 = !DILocation(line: 1405, column: 21, scope: !4938)
!4947 = !DILocation(line: 1406, column: 49, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4937, file: !1003, line: 1405, column: 68)
!4949 = !DILocation(line: 1407, column: 21, scope: !4948)
!4950 = !DILocation(line: 1409, column: 13, scope: !4938)
!4951 = !DILocation(line: 1404, column: 51, scope: !4952)
!4952 = !DILexicalBlockFile(scope: !4930, file: !1003, discriminator: 2)
!4953 = !DILocation(line: 1404, column: 13, scope: !4952)
!4954 = distinct !{!4954, !4955}
!4955 = !DILocation(line: 1404, column: 13, scope: !4921)
!4956 = !DILocation(line: 1410, column: 44, scope: !4921)
!4957 = !DILocation(line: 1410, column: 38, scope: !4921)
!4958 = !DILocation(line: 1410, column: 49, scope: !4921)
!4959 = !DILocation(line: 1410, column: 54, scope: !4921)
!4960 = !DILocation(line: 1410, column: 47, scope: !4921)
!4961 = !DILocation(line: 1410, column: 21, scope: !4921)
!4962 = !DILocation(line: 1410, column: 35, scope: !4921)
!4963 = !DILocation(line: 1410, column: 26, scope: !4921)
!4964 = !DILocation(line: 1410, column: 62, scope: !4921)
!4965 = !DILocation(line: 1410, column: 13, scope: !4921)
!4966 = !DILocation(line: 1411, column: 27, scope: !4921)
!4967 = !DILocation(line: 1411, column: 29, scope: !4921)
!4968 = !DILocation(line: 1411, column: 21, scope: !4921)
!4969 = !DILocation(line: 1411, column: 42, scope: !4921)
!4970 = !DILocation(line: 1411, column: 36, scope: !4921)
!4971 = !DILocation(line: 1411, column: 34, scope: !4921)
!4972 = !DILocation(line: 1411, column: 20, scope: !4921)
!4973 = !DILocation(line: 1411, column: 46, scope: !4921)
!4974 = !DILocation(line: 1412, column: 9, scope: !4921)
!4975 = !DILocation(line: 1402, column: 32, scope: !4976)
!4976 = !DILexicalBlockFile(scope: !4916, file: !1003, discriminator: 2)
!4977 = !DILocation(line: 1402, column: 9, scope: !4976)
!4978 = distinct !{!4978, !4979}
!4979 = !DILocation(line: 1402, column: 9, scope: !4701)
!4980 = !DILocation(line: 1413, column: 5, scope: !4701)
!4981 = !DILocation(line: 1371, column: 43, scope: !4982)
!4982 = !DILexicalBlockFile(scope: !4695, file: !1003, discriminator: 2)
!4983 = !DILocation(line: 1371, column: 5, scope: !4982)
!4984 = distinct !{!4984, !4985}
!4985 = !DILocation(line: 1371, column: 5, scope: !4670)
!4986 = !DILocation(line: 1415, column: 12, scope: !4670)
!4987 = !DILocation(line: 1415, column: 21, scope: !4670)
!4988 = !DILocation(line: 1415, column: 5, scope: !4670)
!4989 = !DILocation(line: 1415, column: 62, scope: !4670)
!4990 = !DILocation(line: 1415, column: 71, scope: !4670)
!4991 = !DILocation(line: 1415, column: 39, scope: !4670)
!4992 = !DILocation(line: 1415, column: 48, scope: !4670)
!4993 = !DILocation(line: 1416, column: 5, scope: !4670)
!4994 = !DILocation(line: 1417, column: 1, scope: !4670)
!4995 = distinct !DISubprogram(name: "sbr_env_estimate", scope: !1003, file: !1003, line: 1420, type: !4996, isLocal: true, isDefinition: true, scopeLine: 1422, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{null, !4998, !2509, !1125, !2516}
!4998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4999, size: 64, align: 64)
!4999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1209, size: 3072, align: 32, elements: !1183)
!5000 = !DILocalVariable(name: "e_curr", arg: 1, scope: !4995, file: !1003, line: 1420, type: !4998)
!5001 = !DILocation(line: 1420, column: 42, scope: !4995)
!5002 = !DILocalVariable(name: "X_high", arg: 2, scope: !4995, file: !1003, line: 1420, type: !2509)
!5003 = !DILocation(line: 1420, column: 64, scope: !4995)
!5004 = !DILocalVariable(name: "sbr", arg: 3, scope: !4995, file: !1003, line: 1421, type: !1125)
!5005 = !DILocation(line: 1421, column: 55, scope: !4995)
!5006 = !DILocalVariable(name: "ch_data", arg: 4, scope: !4995, file: !1003, line: 1421, type: !2516)
!5007 = !DILocation(line: 1421, column: 69, scope: !4995)
!5008 = !DILocalVariable(name: "e", scope: !4995, file: !1003, line: 1423, type: !958)
!5009 = !DILocation(line: 1423, column: 9, scope: !4995)
!5010 = !DILocalVariable(name: "m", scope: !4995, file: !1003, line: 1423, type: !958)
!5011 = !DILocation(line: 1423, column: 12, scope: !4995)
!5012 = !DILocalVariable(name: "kx1", scope: !4995, file: !1003, line: 1424, type: !958)
!5013 = !DILocation(line: 1424, column: 9, scope: !4995)
!5014 = !DILocation(line: 1424, column: 15, scope: !4995)
!5015 = !DILocation(line: 1424, column: 20, scope: !4995)
!5016 = !DILocation(line: 1426, column: 9, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4995, file: !1003, line: 1426, column: 9)
!5018 = !DILocation(line: 1426, column: 14, scope: !5017)
!5019 = !DILocation(line: 1426, column: 9, scope: !4995)
!5020 = !DILocation(line: 1427, column: 16, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5022, file: !1003, line: 1427, column: 9)
!5022 = distinct !DILexicalBlock(scope: !5017, file: !1003, line: 1426, column: 32)
!5023 = !DILocation(line: 1427, column: 14, scope: !5021)
!5024 = !DILocation(line: 1427, column: 21, scope: !5025)
!5025 = !DILexicalBlockFile(scope: !5026, file: !1003, discriminator: 1)
!5026 = distinct !DILexicalBlock(scope: !5021, file: !1003, line: 1427, column: 9)
!5027 = !DILocation(line: 1427, column: 25, scope: !5025)
!5028 = !DILocation(line: 1427, column: 34, scope: !5025)
!5029 = !DILocation(line: 1427, column: 23, scope: !5025)
!5030 = !DILocation(line: 1427, column: 9, scope: !5025)
!5031 = !DILocalVariable(name: "recip_env_size", scope: !5032, file: !1003, line: 1429, type: !2543)
!5032 = distinct !DILexicalBlock(scope: !5026, file: !1003, line: 1427, column: 51)
!5033 = !DILocation(line: 1429, column: 29, scope: !5032)
!5034 = !DILocation(line: 1429, column: 85, scope: !5032)
!5035 = !DILocation(line: 1429, column: 87, scope: !5032)
!5036 = !DILocation(line: 1429, column: 70, scope: !5032)
!5037 = !DILocation(line: 1429, column: 79, scope: !5032)
!5038 = !DILocation(line: 1429, column: 109, scope: !5032)
!5039 = !DILocation(line: 1429, column: 94, scope: !5032)
!5040 = !DILocation(line: 1429, column: 103, scope: !5032)
!5041 = !DILocation(line: 1429, column: 92, scope: !5032)
!5042 = !DILocation(line: 1429, column: 67, scope: !5032)
!5043 = !DILocation(line: 1429, column: 46, scope: !5032)
!5044 = !DILocalVariable(name: "ilb", scope: !5032, file: !1003, line: 1433, type: !958)
!5045 = !DILocation(line: 1433, column: 17, scope: !5032)
!5046 = !DILocation(line: 1433, column: 38, scope: !5032)
!5047 = !DILocation(line: 1433, column: 23, scope: !5032)
!5048 = !DILocation(line: 1433, column: 32, scope: !5032)
!5049 = !DILocation(line: 1433, column: 41, scope: !5032)
!5050 = !DILocation(line: 1433, column: 45, scope: !5032)
!5051 = !DILocalVariable(name: "iub", scope: !5032, file: !1003, line: 1434, type: !958)
!5052 = !DILocation(line: 1434, column: 17, scope: !5032)
!5053 = !DILocation(line: 1434, column: 38, scope: !5032)
!5054 = !DILocation(line: 1434, column: 40, scope: !5032)
!5055 = !DILocation(line: 1434, column: 23, scope: !5032)
!5056 = !DILocation(line: 1434, column: 32, scope: !5032)
!5057 = !DILocation(line: 1434, column: 45, scope: !5032)
!5058 = !DILocation(line: 1434, column: 49, scope: !5032)
!5059 = !DILocation(line: 1436, column: 20, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5032, file: !1003, line: 1436, column: 13)
!5061 = !DILocation(line: 1436, column: 18, scope: !5060)
!5062 = !DILocation(line: 1436, column: 25, scope: !5063)
!5063 = !DILexicalBlockFile(scope: !5064, file: !1003, discriminator: 1)
!5064 = distinct !DILexicalBlock(scope: !5060, file: !1003, line: 1436, column: 13)
!5065 = !DILocation(line: 1436, column: 29, scope: !5063)
!5066 = !DILocation(line: 1436, column: 34, scope: !5063)
!5067 = !DILocation(line: 1436, column: 27, scope: !5063)
!5068 = !DILocation(line: 1436, column: 13, scope: !5063)
!5069 = !DILocalVariable(name: "sum", scope: !5070, file: !1003, line: 1437, type: !1209)
!5070 = distinct !DILexicalBlock(scope: !5064, file: !1003, line: 1436, column: 45)
!5071 = !DILocation(line: 1437, column: 27, scope: !5070)
!5072 = !DILocation(line: 1437, column: 33, scope: !5070)
!5073 = !DILocation(line: 1437, column: 38, scope: !5070)
!5074 = !DILocation(line: 1437, column: 42, scope: !5070)
!5075 = !DILocation(line: 1437, column: 60, scope: !5070)
!5076 = !DILocation(line: 1437, column: 62, scope: !5070)
!5077 = !DILocation(line: 1437, column: 61, scope: !5070)
!5078 = !DILocation(line: 1437, column: 53, scope: !5070)
!5079 = !DILocation(line: 1437, column: 69, scope: !5070)
!5080 = !DILocation(line: 1437, column: 67, scope: !5070)
!5081 = !DILocation(line: 1437, column: 74, scope: !5070)
!5082 = !DILocation(line: 1437, column: 80, scope: !5070)
!5083 = !DILocation(line: 1437, column: 78, scope: !5070)
!5084 = !DILocation(line: 1439, column: 27, scope: !5070)
!5085 = !DILocation(line: 1439, column: 17, scope: !5070)
!5086 = !DILocation(line: 1439, column: 24, scope: !5070)
!5087 = !DILocation(line: 1439, column: 32, scope: !5070)
!5088 = !DILocation(line: 1439, column: 32, scope: !5089)
!5089 = !DILexicalBlockFile(scope: !5070, file: !1003, discriminator: 1)
!5090 = !DILocation(line: 1443, column: 13, scope: !5070)
!5091 = !DILocation(line: 1436, column: 41, scope: !5092)
!5092 = !DILexicalBlockFile(scope: !5064, file: !1003, discriminator: 2)
!5093 = !DILocation(line: 1436, column: 13, scope: !5092)
!5094 = distinct !{!5094, !5095}
!5095 = !DILocation(line: 1436, column: 13, scope: !5032)
!5096 = !DILocation(line: 1444, column: 9, scope: !5032)
!5097 = !DILocation(line: 1427, column: 47, scope: !5098)
!5098 = !DILexicalBlockFile(scope: !5026, file: !1003, discriminator: 2)
!5099 = !DILocation(line: 1427, column: 9, scope: !5098)
!5100 = distinct !{!5100, !5101}
!5101 = !DILocation(line: 1427, column: 9, scope: !5022)
!5102 = !DILocation(line: 1445, column: 5, scope: !5022)
!5103 = !DILocalVariable(name: "k", scope: !5104, file: !1003, line: 1446, type: !958)
!5104 = distinct !DILexicalBlock(scope: !5017, file: !1003, line: 1445, column: 12)
!5105 = !DILocation(line: 1446, column: 13, scope: !5104)
!5106 = !DILocalVariable(name: "p", scope: !5104, file: !1003, line: 1446, type: !958)
!5107 = !DILocation(line: 1446, column: 16, scope: !5104)
!5108 = !DILocation(line: 1448, column: 16, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5104, file: !1003, line: 1448, column: 9)
!5110 = !DILocation(line: 1448, column: 14, scope: !5109)
!5111 = !DILocation(line: 1448, column: 21, scope: !5112)
!5112 = !DILexicalBlockFile(scope: !5113, file: !1003, discriminator: 1)
!5113 = distinct !DILexicalBlock(scope: !5109, file: !1003, line: 1448, column: 9)
!5114 = !DILocation(line: 1448, column: 25, scope: !5112)
!5115 = !DILocation(line: 1448, column: 34, scope: !5112)
!5116 = !DILocation(line: 1448, column: 23, scope: !5112)
!5117 = !DILocation(line: 1448, column: 9, scope: !5112)
!5118 = !DILocalVariable(name: "env_size", scope: !5119, file: !1003, line: 1449, type: !1591)
!5119 = distinct !DILexicalBlock(scope: !5113, file: !1003, line: 1448, column: 51)
!5120 = !DILocation(line: 1449, column: 23, scope: !5119)
!5121 = !DILocation(line: 1449, column: 54, scope: !5119)
!5122 = !DILocation(line: 1449, column: 56, scope: !5119)
!5123 = !DILocation(line: 1449, column: 39, scope: !5119)
!5124 = !DILocation(line: 1449, column: 48, scope: !5119)
!5125 = !DILocation(line: 1449, column: 78, scope: !5119)
!5126 = !DILocation(line: 1449, column: 63, scope: !5119)
!5127 = !DILocation(line: 1449, column: 72, scope: !5119)
!5128 = !DILocation(line: 1449, column: 61, scope: !5119)
!5129 = !DILocation(line: 1449, column: 36, scope: !5119)
!5130 = !DILocalVariable(name: "ilb", scope: !5119, file: !1003, line: 1450, type: !958)
!5131 = !DILocation(line: 1450, column: 17, scope: !5119)
!5132 = !DILocation(line: 1450, column: 38, scope: !5119)
!5133 = !DILocation(line: 1450, column: 23, scope: !5119)
!5134 = !DILocation(line: 1450, column: 32, scope: !5119)
!5135 = !DILocation(line: 1450, column: 41, scope: !5119)
!5136 = !DILocation(line: 1450, column: 45, scope: !5119)
!5137 = !DILocalVariable(name: "iub", scope: !5119, file: !1003, line: 1451, type: !958)
!5138 = !DILocation(line: 1451, column: 17, scope: !5119)
!5139 = !DILocation(line: 1451, column: 38, scope: !5119)
!5140 = !DILocation(line: 1451, column: 40, scope: !5119)
!5141 = !DILocation(line: 1451, column: 23, scope: !5119)
!5142 = !DILocation(line: 1451, column: 32, scope: !5119)
!5143 = !DILocation(line: 1451, column: 45, scope: !5119)
!5144 = !DILocation(line: 1451, column: 49, scope: !5119)
!5145 = !DILocalVariable(name: "table", scope: !5119, file: !1003, line: 1452, type: !2290)
!5146 = !DILocation(line: 1452, column: 29, scope: !5119)
!5147 = !DILocation(line: 1452, column: 58, scope: !5119)
!5148 = !DILocation(line: 1452, column: 60, scope: !5119)
!5149 = !DILocation(line: 1452, column: 37, scope: !5119)
!5150 = !DILocation(line: 1452, column: 46, scope: !5119)
!5151 = !DILocation(line: 1452, column: 67, scope: !5152)
!5152 = !DILexicalBlockFile(scope: !5119, file: !1003, discriminator: 1)
!5153 = !DILocation(line: 1452, column: 72, scope: !5152)
!5154 = !DILocation(line: 1452, column: 37, scope: !5152)
!5155 = !DILocation(line: 1452, column: 86, scope: !5156)
!5156 = !DILexicalBlockFile(scope: !5119, file: !1003, discriminator: 2)
!5157 = !DILocation(line: 1452, column: 91, scope: !5156)
!5158 = !DILocation(line: 1452, column: 37, scope: !5156)
!5159 = !DILocation(line: 1452, column: 37, scope: !5160)
!5160 = !DILexicalBlockFile(scope: !5119, file: !1003, discriminator: 3)
!5161 = !DILocation(line: 1452, column: 29, scope: !5160)
!5162 = !DILocation(line: 1454, column: 20, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5119, file: !1003, line: 1454, column: 13)
!5164 = !DILocation(line: 1454, column: 18, scope: !5163)
!5165 = !DILocation(line: 1454, column: 25, scope: !5166)
!5166 = !DILexicalBlockFile(scope: !5167, file: !1003, discriminator: 1)
!5167 = distinct !DILexicalBlock(scope: !5163, file: !1003, line: 1454, column: 13)
!5168 = !DILocation(line: 1454, column: 57, scope: !5166)
!5169 = !DILocation(line: 1454, column: 59, scope: !5166)
!5170 = !DILocation(line: 1454, column: 36, scope: !5166)
!5171 = !DILocation(line: 1454, column: 45, scope: !5166)
!5172 = !DILocation(line: 1454, column: 29, scope: !5166)
!5173 = !DILocation(line: 1454, column: 34, scope: !5166)
!5174 = !DILocation(line: 1454, column: 27, scope: !5166)
!5175 = !DILocation(line: 1454, column: 13, scope: !5166)
!5176 = !DILocalVariable(name: "sum", scope: !5177, file: !1003, line: 1456, type: !1210)
!5177 = distinct !DILexicalBlock(scope: !5167, file: !1003, line: 1454, column: 71)
!5178 = !DILocation(line: 1456, column: 27, scope: !5177)
!5179 = !DILocation(line: 1456, column: 33, scope: !5177)
!5180 = !DILocalVariable(name: "den", scope: !5177, file: !1003, line: 1457, type: !2543)
!5181 = !DILocation(line: 1457, column: 33, scope: !5177)
!5182 = !DILocation(line: 1457, column: 63, scope: !5177)
!5183 = !DILocation(line: 1457, column: 81, scope: !5177)
!5184 = !DILocation(line: 1457, column: 83, scope: !5177)
!5185 = !DILocation(line: 1457, column: 75, scope: !5177)
!5186 = !DILocation(line: 1457, column: 96, scope: !5177)
!5187 = !DILocation(line: 1457, column: 90, scope: !5177)
!5188 = !DILocation(line: 1457, column: 88, scope: !5177)
!5189 = !DILocation(line: 1457, column: 72, scope: !5177)
!5190 = !DILocation(line: 1457, column: 60, scope: !5177)
!5191 = !DILocation(line: 1457, column: 39, scope: !5177)
!5192 = !DILocation(line: 1458, column: 32, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5177, file: !1003, line: 1458, column: 17)
!5194 = !DILocation(line: 1458, column: 26, scope: !5193)
!5195 = !DILocation(line: 1458, column: 24, scope: !5193)
!5196 = !DILocation(line: 1458, column: 22, scope: !5193)
!5197 = !DILocation(line: 1458, column: 36, scope: !5198)
!5198 = !DILexicalBlockFile(scope: !5199, file: !1003, discriminator: 1)
!5199 = distinct !DILexicalBlock(scope: !5193, file: !1003, line: 1458, column: 17)
!5200 = !DILocation(line: 1458, column: 46, scope: !5198)
!5201 = !DILocation(line: 1458, column: 48, scope: !5198)
!5202 = !DILocation(line: 1458, column: 40, scope: !5198)
!5203 = !DILocation(line: 1458, column: 38, scope: !5198)
!5204 = !DILocation(line: 1458, column: 17, scope: !5198)
!5205 = !DILocation(line: 1459, column: 42, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5199, file: !1003, line: 1458, column: 59)
!5207 = !DILocation(line: 1459, column: 47, scope: !5206)
!5208 = !DILocation(line: 1459, column: 51, scope: !5206)
!5209 = !DILocation(line: 1459, column: 69, scope: !5206)
!5210 = !DILocation(line: 1459, column: 62, scope: !5206)
!5211 = !DILocation(line: 1459, column: 74, scope: !5206)
!5212 = !DILocation(line: 1459, column: 72, scope: !5206)
!5213 = !DILocation(line: 1459, column: 79, scope: !5206)
!5214 = !DILocation(line: 1459, column: 85, scope: !5206)
!5215 = !DILocation(line: 1459, column: 83, scope: !5206)
!5216 = !DILocation(line: 1459, column: 27, scope: !5206)
!5217 = !DILocation(line: 1459, column: 27, scope: !5218)
!5218 = !DILexicalBlockFile(scope: !5206, file: !1003, discriminator: 1)
!5219 = !DILocation(line: 1459, column: 27, scope: !5220)
!5220 = !DILexicalBlockFile(scope: !5206, file: !1003, discriminator: 2)
!5221 = !DILocation(line: 1460, column: 17, scope: !5206)
!5222 = !DILocation(line: 1458, column: 55, scope: !5223)
!5223 = !DILexicalBlockFile(scope: !5199, file: !1003, discriminator: 2)
!5224 = !DILocation(line: 1458, column: 17, scope: !5223)
!5225 = distinct !{!5225, !5226}
!5226 = !DILocation(line: 1458, column: 17, scope: !5177)
!5227 = !DILocation(line: 1461, column: 23, scope: !5177)
!5228 = !DILocation(line: 1461, column: 23, scope: !5229)
!5229 = !DILexicalBlockFile(scope: !5177, file: !1003, discriminator: 1)
!5230 = !DILocation(line: 1471, column: 32, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5177, file: !1003, line: 1471, column: 17)
!5232 = !DILocation(line: 1471, column: 26, scope: !5231)
!5233 = !DILocation(line: 1471, column: 24, scope: !5231)
!5234 = !DILocation(line: 1471, column: 22, scope: !5231)
!5235 = !DILocation(line: 1471, column: 36, scope: !5236)
!5236 = !DILexicalBlockFile(scope: !5237, file: !1003, discriminator: 1)
!5237 = distinct !DILexicalBlock(scope: !5231, file: !1003, line: 1471, column: 17)
!5238 = !DILocation(line: 1471, column: 46, scope: !5236)
!5239 = !DILocation(line: 1471, column: 48, scope: !5236)
!5240 = !DILocation(line: 1471, column: 40, scope: !5236)
!5241 = !DILocation(line: 1471, column: 38, scope: !5236)
!5242 = !DILocation(line: 1471, column: 17, scope: !5236)
!5243 = !DILocation(line: 1472, column: 31, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5237, file: !1003, line: 1471, column: 59)
!5245 = !DILocation(line: 1472, column: 35, scope: !5244)
!5246 = !DILocation(line: 1472, column: 33, scope: !5244)
!5247 = !DILocation(line: 1472, column: 21, scope: !5244)
!5248 = !DILocation(line: 1472, column: 28, scope: !5244)
!5249 = !DILocation(line: 1472, column: 42, scope: !5244)
!5250 = !DILocation(line: 1473, column: 17, scope: !5244)
!5251 = !DILocation(line: 1471, column: 55, scope: !5252)
!5252 = !DILexicalBlockFile(scope: !5237, file: !1003, discriminator: 2)
!5253 = !DILocation(line: 1471, column: 17, scope: !5252)
!5254 = distinct !{!5254, !5255}
!5255 = !DILocation(line: 1471, column: 17, scope: !5177)
!5256 = !DILocation(line: 1474, column: 13, scope: !5177)
!5257 = !DILocation(line: 1454, column: 67, scope: !5258)
!5258 = !DILexicalBlockFile(scope: !5167, file: !1003, discriminator: 2)
!5259 = !DILocation(line: 1454, column: 13, scope: !5258)
!5260 = distinct !{!5260, !5261}
!5261 = !DILocation(line: 1454, column: 13, scope: !5119)
!5262 = !DILocation(line: 1475, column: 9, scope: !5119)
!5263 = !DILocation(line: 1448, column: 47, scope: !5264)
!5264 = !DILexicalBlockFile(scope: !5113, file: !1003, discriminator: 2)
!5265 = !DILocation(line: 1448, column: 9, scope: !5264)
!5266 = distinct !{!5266, !5267}
!5267 = !DILocation(line: 1448, column: 9, scope: !5104)
!5268 = !DILocation(line: 1477, column: 1, scope: !4995)
!5269 = !DILocalVariable(name: "val", arg: 1, scope: !5270, file: !1211, line: 207, type: !1210)
!5270 = distinct !DISubprogram(name: "av_sqrt_sf", scope: !1211, file: !1211, line: 207, type: !5271, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!5271 = !DISubroutineType(types: !5272)
!5272 = !{!1210, !1210}
!5273 = !DILocation(line: 207, column: 77, scope: !5270, inlinedAt: !5274)
!5274 = distinct !DILocation(line: 472, column: 26, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5276, file: !1058, line: 410, column: 42)
!5276 = distinct !DILexicalBlock(scope: !5277, file: !1058, line: 410, column: 9)
!5277 = distinct !DILexicalBlock(scope: !5278, file: !1058, line: 410, column: 9)
!5278 = distinct !DILexicalBlock(scope: !5279, file: !1058, line: 408, column: 47)
!5279 = distinct !DILexicalBlock(scope: !5280, file: !1058, line: 408, column: 5)
!5280 = distinct !DILexicalBlock(scope: !2551, file: !1058, line: 408, column: 5)
!5281 = !DILocalVariable(name: "tabIndex", scope: !5270, file: !1211, line: 209, type: !958)
!5282 = !DILocation(line: 209, column: 9, scope: !5270, inlinedAt: !5274)
!5283 = !DILocalVariable(name: "rem", scope: !5270, file: !1211, line: 209, type: !958)
!5284 = !DILocation(line: 209, column: 19, scope: !5270, inlinedAt: !5274)
!5285 = !DILocation(line: 207, column: 77, scope: !5270, inlinedAt: !5286)
!5286 = distinct !DILocation(line: 443, column: 29, scope: !5275)
!5287 = !DILocation(line: 209, column: 9, scope: !5270, inlinedAt: !5286)
!5288 = !DILocation(line: 209, column: 19, scope: !5270, inlinedAt: !5286)
!5289 = !DILocation(line: 207, column: 77, scope: !5270, inlinedAt: !5290)
!5290 = distinct !DILocation(line: 429, column: 39, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5292, file: !1058, line: 428, column: 24)
!5292 = distinct !DILexicalBlock(scope: !5293, file: !1058, line: 419, column: 21)
!5293 = distinct !DILexicalBlock(scope: !5294, file: !1058, line: 414, column: 101)
!5294 = distinct !DILexicalBlock(scope: !5295, file: !1058, line: 414, column: 13)
!5295 = distinct !DILexicalBlock(scope: !5275, file: !1058, line: 414, column: 13)
!5296 = !DILocation(line: 209, column: 9, scope: !5270, inlinedAt: !5290)
!5297 = !DILocation(line: 209, column: 19, scope: !5270, inlinedAt: !5290)
!5298 = !DILocation(line: 207, column: 77, scope: !5270, inlinedAt: !5299)
!5299 = distinct !DILocation(line: 425, column: 41, scope: !5300)
!5300 = !DILexicalBlockFile(scope: !5301, file: !1058, discriminator: 1)
!5301 = distinct !DILexicalBlock(scope: !5302, file: !1058, line: 424, column: 28)
!5302 = distinct !DILexicalBlock(scope: !5303, file: !1058, line: 420, column: 25)
!5303 = distinct !DILexicalBlock(scope: !5292, file: !1058, line: 419, column: 43)
!5304 = !DILocation(line: 209, column: 9, scope: !5270, inlinedAt: !5299)
!5305 = !DILocation(line: 209, column: 19, scope: !5270, inlinedAt: !5299)
!5306 = !DILocation(line: 207, column: 77, scope: !5270, inlinedAt: !5307)
!5307 = distinct !DILocation(line: 421, column: 41, scope: !5308)
!5308 = !DILexicalBlockFile(scope: !5309, file: !1058, discriminator: 1)
!5309 = distinct !DILexicalBlock(scope: !5302, file: !1058, line: 420, column: 32)
!5310 = !DILocation(line: 209, column: 9, scope: !5270, inlinedAt: !5307)
!5311 = !DILocation(line: 209, column: 19, scope: !5270, inlinedAt: !5307)
!5312 = !DILocation(line: 207, column: 77, scope: !5270, inlinedAt: !5313)
!5313 = distinct !DILocation(line: 418, column: 34, scope: !5314)
!5314 = !DILexicalBlockFile(scope: !5293, file: !1058, discriminator: 2)
!5315 = !DILocation(line: 209, column: 9, scope: !5270, inlinedAt: !5313)
!5316 = !DILocation(line: 209, column: 19, scope: !5270, inlinedAt: !5313)
!5317 = !DILocation(line: 207, column: 77, scope: !5270, inlinedAt: !5318)
!5318 = distinct !DILocation(line: 417, column: 34, scope: !5319)
!5319 = !DILexicalBlockFile(scope: !5293, file: !1058, discriminator: 1)
!5320 = !DILocation(line: 209, column: 9, scope: !5270, inlinedAt: !5318)
!5321 = !DILocation(line: 209, column: 19, scope: !5270, inlinedAt: !5318)
!5322 = !DILocalVariable(name: "ac", arg: 1, scope: !2551, file: !1058, line: 400, type: !1510)
!5323 = !DILocation(line: 400, column: 39, scope: !2551)
!5324 = !DILocalVariable(name: "sbr", arg: 2, scope: !2551, file: !1058, line: 400, type: !1125)
!5325 = !DILocation(line: 400, column: 68, scope: !2551)
!5326 = !DILocalVariable(name: "ch_data", arg: 3, scope: !2551, file: !1058, line: 401, type: !2516)
!5327 = !DILocation(line: 401, column: 36, scope: !2551)
!5328 = !DILocalVariable(name: "e_a", arg: 4, scope: !2551, file: !1058, line: 401, type: !1590)
!5329 = !DILocation(line: 401, column: 55, scope: !2551)
!5330 = !DILocalVariable(name: "e", scope: !2551, file: !1058, line: 403, type: !958)
!5331 = !DILocation(line: 403, column: 9, scope: !2551)
!5332 = !DILocalVariable(name: "k", scope: !2551, file: !1058, line: 403, type: !958)
!5333 = !DILocation(line: 403, column: 12, scope: !2551)
!5334 = !DILocalVariable(name: "m", scope: !2551, file: !1058, line: 403, type: !958)
!5335 = !DILocation(line: 403, column: 15, scope: !2551)
!5336 = !DILocation(line: 408, column: 12, scope: !5280)
!5337 = !DILocation(line: 408, column: 10, scope: !5280)
!5338 = !DILocation(line: 408, column: 17, scope: !5339)
!5339 = !DILexicalBlockFile(scope: !5279, file: !1058, discriminator: 1)
!5340 = !DILocation(line: 408, column: 21, scope: !5339)
!5341 = !DILocation(line: 408, column: 30, scope: !5339)
!5342 = !DILocation(line: 408, column: 19, scope: !5339)
!5343 = !DILocation(line: 408, column: 5, scope: !5339)
!5344 = !DILocalVariable(name: "delta", scope: !5278, file: !1058, line: 409, type: !958)
!5345 = !DILocation(line: 409, column: 13, scope: !5278)
!5346 = !DILocation(line: 409, column: 24, scope: !5278)
!5347 = !DILocation(line: 409, column: 29, scope: !5278)
!5348 = !DILocation(line: 409, column: 26, scope: !5278)
!5349 = !DILocation(line: 409, column: 37, scope: !5278)
!5350 = !DILocation(line: 409, column: 41, scope: !5351)
!5351 = !DILexicalBlockFile(scope: !5278, file: !1058, discriminator: 1)
!5352 = !DILocation(line: 409, column: 46, scope: !5351)
!5353 = !DILocation(line: 409, column: 43, scope: !5351)
!5354 = !DILocation(line: 409, column: 37, scope: !5351)
!5355 = !DILocation(line: 409, column: 21, scope: !5356)
!5356 = !DILexicalBlockFile(scope: !5278, file: !1058, discriminator: 2)
!5357 = !DILocation(line: 409, column: 13, scope: !5356)
!5358 = !DILocation(line: 410, column: 16, scope: !5277)
!5359 = !DILocation(line: 410, column: 14, scope: !5277)
!5360 = !DILocation(line: 410, column: 21, scope: !5361)
!5361 = !DILexicalBlockFile(scope: !5276, file: !1058, discriminator: 1)
!5362 = !DILocation(line: 410, column: 25, scope: !5361)
!5363 = !DILocation(line: 410, column: 30, scope: !5361)
!5364 = !DILocation(line: 410, column: 23, scope: !5361)
!5365 = !DILocation(line: 410, column: 9, scope: !5361)
!5366 = !DILocalVariable(name: "gain_boost", scope: !5275, file: !1058, line: 411, type: !1210)
!5367 = !DILocation(line: 411, column: 23, scope: !5275)
!5368 = !DILocalVariable(name: "gain_max", scope: !5275, file: !1058, line: 411, type: !1210)
!5369 = !DILocation(line: 411, column: 35, scope: !5275)
!5370 = !DILocalVariable(name: "sum", scope: !5275, file: !1058, line: 412, type: !5371)
!5371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1210, size: 128, align: 32, elements: !972)
!5372 = !DILocation(line: 412, column: 23, scope: !5275)
!5373 = !DILocation(line: 413, column: 13, scope: !5275)
!5374 = !DILocation(line: 413, column: 22, scope: !5275)
!5375 = !DILocation(line: 413, column: 31, scope: !5275)
!5376 = !DILocation(line: 413, column: 29, scope: !5275)
!5377 = !DILocation(line: 413, column: 29, scope: !5378)
!5378 = !DILexicalBlockFile(scope: !5275, file: !1058, discriminator: 1)
!5379 = !DILocation(line: 414, column: 38, scope: !5295)
!5380 = !DILocation(line: 414, column: 22, scope: !5295)
!5381 = !DILocation(line: 414, column: 27, scope: !5295)
!5382 = !DILocation(line: 414, column: 43, scope: !5295)
!5383 = !DILocation(line: 414, column: 48, scope: !5295)
!5384 = !DILocation(line: 414, column: 41, scope: !5295)
!5385 = !DILocation(line: 414, column: 20, scope: !5295)
!5386 = !DILocation(line: 414, column: 18, scope: !5295)
!5387 = !DILocation(line: 414, column: 55, scope: !5388)
!5388 = !DILexicalBlockFile(scope: !5294, file: !1058, discriminator: 1)
!5389 = !DILocation(line: 414, column: 75, scope: !5388)
!5390 = !DILocation(line: 414, column: 77, scope: !5388)
!5391 = !DILocation(line: 414, column: 59, scope: !5388)
!5392 = !DILocation(line: 414, column: 64, scope: !5388)
!5393 = !DILocation(line: 414, column: 84, scope: !5388)
!5394 = !DILocation(line: 414, column: 89, scope: !5388)
!5395 = !DILocation(line: 414, column: 82, scope: !5388)
!5396 = !DILocation(line: 414, column: 57, scope: !5388)
!5397 = !DILocation(line: 414, column: 13, scope: !5388)
!5398 = !DILocalVariable(name: "temp", scope: !5293, file: !1058, line: 415, type: !2543)
!5399 = !DILocation(line: 415, column: 33, scope: !5293)
!5400 = !DILocation(line: 415, column: 71, scope: !5293)
!5401 = !DILocation(line: 415, column: 50, scope: !5293)
!5402 = !DILocation(line: 415, column: 68, scope: !5293)
!5403 = !DILocation(line: 415, column: 55, scope: !5293)
!5404 = !DILocation(line: 416, column: 81, scope: !5293)
!5405 = !DILocation(line: 416, column: 64, scope: !5293)
!5406 = !DILocation(line: 416, column: 78, scope: !5293)
!5407 = !DILocation(line: 416, column: 69, scope: !5293)
!5408 = !DILocation(line: 416, column: 45, scope: !5293)
!5409 = !DILocation(line: 415, column: 40, scope: !5293)
!5410 = !DILocation(line: 417, column: 29, scope: !5293)
!5411 = !DILocation(line: 417, column: 17, scope: !5293)
!5412 = !DILocation(line: 417, column: 26, scope: !5293)
!5413 = !DILocation(line: 417, column: 22, scope: !5293)
!5414 = !DILocation(line: 417, column: 78, scope: !5293)
!5415 = !DILocation(line: 417, column: 61, scope: !5293)
!5416 = !DILocation(line: 417, column: 75, scope: !5293)
!5417 = !DILocation(line: 417, column: 66, scope: !5293)
!5418 = !DILocation(line: 417, column: 45, scope: !5293)
!5419 = !DILocation(line: 417, column: 34, scope: !5293)
!5420 = !DILocation(line: 417, column: 34, scope: !5319)
!5421 = !DILocation(line: 211, column: 13, scope: !5422, inlinedAt: !5318)
!5422 = distinct !DILexicalBlock(scope: !5270, file: !1211, line: 211, column: 9)
!5423 = !DILocation(line: 211, column: 18, scope: !5422, inlinedAt: !5318)
!5424 = !DILocation(line: 211, column: 9, scope: !5270, inlinedAt: !5318)
!5425 = !DILocation(line: 212, column: 13, scope: !5422, inlinedAt: !5318)
!5426 = !DILocation(line: 212, column: 17, scope: !5422, inlinedAt: !5318)
!5427 = !DILocation(line: 212, column: 9, scope: !5422, inlinedAt: !5318)
!5428 = !DILocation(line: 213, column: 18, scope: !5429, inlinedAt: !5318)
!5429 = distinct !DILexicalBlock(scope: !5422, file: !1211, line: 213, column: 14)
!5430 = !DILocation(line: 213, column: 23, scope: !5429, inlinedAt: !5318)
!5431 = !DILocation(line: 213, column: 14, scope: !5422, inlinedAt: !5318)
!5432 = !DILocation(line: 214, column: 9, scope: !5429, inlinedAt: !5318)
!5433 = !DILocation(line: 217, column: 25, scope: !5434, inlinedAt: !5318)
!5434 = distinct !DILexicalBlock(scope: !5429, file: !1211, line: 216, column: 5)
!5435 = !DILocation(line: 217, column: 30, scope: !5434, inlinedAt: !5318)
!5436 = !DILocation(line: 217, column: 44, scope: !5434, inlinedAt: !5318)
!5437 = !DILocation(line: 217, column: 18, scope: !5434, inlinedAt: !5318)
!5438 = !DILocation(line: 219, column: 19, scope: !5434, inlinedAt: !5318)
!5439 = !DILocation(line: 219, column: 24, scope: !5434, inlinedAt: !5318)
!5440 = !DILocation(line: 219, column: 13, scope: !5434, inlinedAt: !5318)
!5441 = !DILocation(line: 220, column: 50, scope: !5434, inlinedAt: !5318)
!5442 = !DILocation(line: 220, column: 36, scope: !5434, inlinedAt: !5318)
!5443 = !DILocation(line: 220, column: 27, scope: !5434, inlinedAt: !5318)
!5444 = !DILocation(line: 220, column: 74, scope: !5434, inlinedAt: !5318)
!5445 = !DILocation(line: 220, column: 72, scope: !5434, inlinedAt: !5318)
!5446 = !DILocation(line: 220, column: 62, scope: !5434, inlinedAt: !5318)
!5447 = !DILocation(line: 220, column: 60, scope: !5434, inlinedAt: !5318)
!5448 = !DILocation(line: 221, column: 51, scope: !5434, inlinedAt: !5318)
!5449 = !DILocation(line: 221, column: 60, scope: !5434, inlinedAt: !5318)
!5450 = !DILocation(line: 221, column: 37, scope: !5434, inlinedAt: !5318)
!5451 = !DILocation(line: 221, column: 28, scope: !5434, inlinedAt: !5318)
!5452 = !DILocation(line: 221, column: 67, scope: !5434, inlinedAt: !5318)
!5453 = !DILocation(line: 221, column: 65, scope: !5434, inlinedAt: !5318)
!5454 = !DILocation(line: 220, column: 79, scope: !5434, inlinedAt: !5318)
!5455 = !DILocation(line: 221, column: 71, scope: !5434, inlinedAt: !5318)
!5456 = !DILocation(line: 222, column: 37, scope: !5434, inlinedAt: !5318)
!5457 = !DILocation(line: 220, column: 20, scope: !5434, inlinedAt: !5318)
!5458 = !DILocation(line: 220, column: 13, scope: !5434, inlinedAt: !5318)
!5459 = !DILocation(line: 220, column: 18, scope: !5434, inlinedAt: !5318)
!5460 = !DILocation(line: 223, column: 61, scope: !5434, inlinedAt: !5318)
!5461 = !DILocation(line: 223, column: 65, scope: !5434, inlinedAt: !5318)
!5462 = !DILocation(line: 223, column: 36, scope: !5434, inlinedAt: !5318)
!5463 = !DILocation(line: 223, column: 27, scope: !5434, inlinedAt: !5318)
!5464 = !DILocation(line: 223, column: 76, scope: !5434, inlinedAt: !5318)
!5465 = !DILocation(line: 223, column: 72, scope: !5434, inlinedAt: !5318)
!5466 = !DILocation(line: 223, column: 70, scope: !5434, inlinedAt: !5318)
!5467 = !DILocation(line: 223, column: 81, scope: !5434, inlinedAt: !5318)
!5468 = !DILocation(line: 224, column: 39, scope: !5434, inlinedAt: !5318)
!5469 = !DILocation(line: 223, column: 20, scope: !5434, inlinedAt: !5318)
!5470 = !DILocation(line: 223, column: 13, scope: !5434, inlinedAt: !5318)
!5471 = !DILocation(line: 223, column: 18, scope: !5434, inlinedAt: !5318)
!5472 = !DILocation(line: 226, column: 17, scope: !5473, inlinedAt: !5318)
!5473 = distinct !DILexicalBlock(scope: !5434, file: !1211, line: 226, column: 13)
!5474 = !DILocation(line: 226, column: 22, scope: !5473, inlinedAt: !5318)
!5475 = !DILocation(line: 226, column: 13, scope: !5434, inlinedAt: !5318)
!5476 = !DILocation(line: 227, column: 17, scope: !5473, inlinedAt: !5318)
!5477 = !DILocation(line: 227, column: 21, scope: !5473, inlinedAt: !5318)
!5478 = !DILocation(line: 227, column: 13, scope: !5473, inlinedAt: !5318)
!5479 = !DILocation(line: 229, column: 17, scope: !5473, inlinedAt: !5318)
!5480 = !DILocation(line: 229, column: 22, scope: !5473, inlinedAt: !5318)
!5481 = !DILocation(line: 231, column: 24, scope: !5434, inlinedAt: !5318)
!5482 = !DILocation(line: 231, column: 28, scope: !5434, inlinedAt: !5318)
!5483 = !DILocation(line: 231, column: 34, scope: !5434, inlinedAt: !5318)
!5484 = !DILocation(line: 231, column: 13, scope: !5434, inlinedAt: !5318)
!5485 = !DILocation(line: 231, column: 17, scope: !5434, inlinedAt: !5318)
!5486 = !DILocation(line: 234, column: 12, scope: !5270, inlinedAt: !5318)
!5487 = !DILocation(line: 234, column: 5, scope: !5270, inlinedAt: !5318)
!5488 = !DILocation(line: 417, column: 34, scope: !5314)
!5489 = !DILocation(line: 418, column: 29, scope: !5293)
!5490 = !DILocation(line: 418, column: 17, scope: !5293)
!5491 = !DILocation(line: 418, column: 26, scope: !5293)
!5492 = !DILocation(line: 418, column: 22, scope: !5293)
!5493 = !DILocation(line: 418, column: 101, scope: !5293)
!5494 = !DILocation(line: 418, column: 71, scope: !5293)
!5495 = !DILocation(line: 418, column: 94, scope: !5293)
!5496 = !DILocation(line: 418, column: 96, scope: !5293)
!5497 = !DILocation(line: 418, column: 80, scope: !5293)
!5498 = !DILocation(line: 418, column: 61, scope: !5293)
!5499 = !DILocation(line: 418, column: 45, scope: !5293)
!5500 = !DILocation(line: 418, column: 45, scope: !5319)
!5501 = !DILocation(line: 418, column: 34, scope: !5293)
!5502 = !DILocation(line: 418, column: 34, scope: !5314)
!5503 = !DILocation(line: 211, column: 13, scope: !5422, inlinedAt: !5313)
!5504 = !DILocation(line: 211, column: 18, scope: !5422, inlinedAt: !5313)
!5505 = !DILocation(line: 211, column: 9, scope: !5270, inlinedAt: !5313)
!5506 = !DILocation(line: 212, column: 13, scope: !5422, inlinedAt: !5313)
!5507 = !DILocation(line: 212, column: 17, scope: !5422, inlinedAt: !5313)
!5508 = !DILocation(line: 212, column: 9, scope: !5422, inlinedAt: !5313)
!5509 = !DILocation(line: 213, column: 18, scope: !5429, inlinedAt: !5313)
!5510 = !DILocation(line: 213, column: 23, scope: !5429, inlinedAt: !5313)
!5511 = !DILocation(line: 213, column: 14, scope: !5422, inlinedAt: !5313)
!5512 = !DILocation(line: 214, column: 9, scope: !5429, inlinedAt: !5313)
!5513 = !DILocation(line: 217, column: 25, scope: !5434, inlinedAt: !5313)
!5514 = !DILocation(line: 217, column: 30, scope: !5434, inlinedAt: !5313)
!5515 = !DILocation(line: 217, column: 44, scope: !5434, inlinedAt: !5313)
!5516 = !DILocation(line: 217, column: 18, scope: !5434, inlinedAt: !5313)
!5517 = !DILocation(line: 219, column: 19, scope: !5434, inlinedAt: !5313)
!5518 = !DILocation(line: 219, column: 24, scope: !5434, inlinedAt: !5313)
!5519 = !DILocation(line: 219, column: 13, scope: !5434, inlinedAt: !5313)
!5520 = !DILocation(line: 220, column: 50, scope: !5434, inlinedAt: !5313)
!5521 = !DILocation(line: 220, column: 36, scope: !5434, inlinedAt: !5313)
!5522 = !DILocation(line: 220, column: 27, scope: !5434, inlinedAt: !5313)
!5523 = !DILocation(line: 220, column: 74, scope: !5434, inlinedAt: !5313)
!5524 = !DILocation(line: 220, column: 72, scope: !5434, inlinedAt: !5313)
!5525 = !DILocation(line: 220, column: 62, scope: !5434, inlinedAt: !5313)
!5526 = !DILocation(line: 220, column: 60, scope: !5434, inlinedAt: !5313)
!5527 = !DILocation(line: 221, column: 51, scope: !5434, inlinedAt: !5313)
!5528 = !DILocation(line: 221, column: 60, scope: !5434, inlinedAt: !5313)
!5529 = !DILocation(line: 221, column: 37, scope: !5434, inlinedAt: !5313)
!5530 = !DILocation(line: 221, column: 28, scope: !5434, inlinedAt: !5313)
!5531 = !DILocation(line: 221, column: 67, scope: !5434, inlinedAt: !5313)
!5532 = !DILocation(line: 221, column: 65, scope: !5434, inlinedAt: !5313)
!5533 = !DILocation(line: 220, column: 79, scope: !5434, inlinedAt: !5313)
!5534 = !DILocation(line: 221, column: 71, scope: !5434, inlinedAt: !5313)
!5535 = !DILocation(line: 222, column: 37, scope: !5434, inlinedAt: !5313)
!5536 = !DILocation(line: 220, column: 20, scope: !5434, inlinedAt: !5313)
!5537 = !DILocation(line: 220, column: 13, scope: !5434, inlinedAt: !5313)
!5538 = !DILocation(line: 220, column: 18, scope: !5434, inlinedAt: !5313)
!5539 = !DILocation(line: 223, column: 61, scope: !5434, inlinedAt: !5313)
!5540 = !DILocation(line: 223, column: 65, scope: !5434, inlinedAt: !5313)
!5541 = !DILocation(line: 223, column: 36, scope: !5434, inlinedAt: !5313)
!5542 = !DILocation(line: 223, column: 27, scope: !5434, inlinedAt: !5313)
!5543 = !DILocation(line: 223, column: 76, scope: !5434, inlinedAt: !5313)
!5544 = !DILocation(line: 223, column: 72, scope: !5434, inlinedAt: !5313)
!5545 = !DILocation(line: 223, column: 70, scope: !5434, inlinedAt: !5313)
!5546 = !DILocation(line: 223, column: 81, scope: !5434, inlinedAt: !5313)
!5547 = !DILocation(line: 224, column: 39, scope: !5434, inlinedAt: !5313)
!5548 = !DILocation(line: 223, column: 20, scope: !5434, inlinedAt: !5313)
!5549 = !DILocation(line: 223, column: 13, scope: !5434, inlinedAt: !5313)
!5550 = !DILocation(line: 223, column: 18, scope: !5434, inlinedAt: !5313)
!5551 = !DILocation(line: 226, column: 17, scope: !5473, inlinedAt: !5313)
!5552 = !DILocation(line: 226, column: 22, scope: !5473, inlinedAt: !5313)
!5553 = !DILocation(line: 226, column: 13, scope: !5434, inlinedAt: !5313)
!5554 = !DILocation(line: 227, column: 17, scope: !5473, inlinedAt: !5313)
!5555 = !DILocation(line: 227, column: 21, scope: !5473, inlinedAt: !5313)
!5556 = !DILocation(line: 227, column: 13, scope: !5473, inlinedAt: !5313)
!5557 = !DILocation(line: 229, column: 17, scope: !5473, inlinedAt: !5313)
!5558 = !DILocation(line: 229, column: 22, scope: !5473, inlinedAt: !5313)
!5559 = !DILocation(line: 231, column: 24, scope: !5434, inlinedAt: !5313)
!5560 = !DILocation(line: 231, column: 28, scope: !5434, inlinedAt: !5313)
!5561 = !DILocation(line: 231, column: 34, scope: !5434, inlinedAt: !5313)
!5562 = !DILocation(line: 231, column: 13, scope: !5434, inlinedAt: !5313)
!5563 = !DILocation(line: 231, column: 17, scope: !5434, inlinedAt: !5313)
!5564 = !DILocation(line: 234, column: 12, scope: !5270, inlinedAt: !5313)
!5565 = !DILocation(line: 234, column: 5, scope: !5270, inlinedAt: !5313)
!5566 = !DILocation(line: 418, column: 34, scope: !5567)
!5567 = !DILexicalBlockFile(scope: !5293, file: !1058, discriminator: 3)
!5568 = !DILocation(line: 419, column: 39, scope: !5292)
!5569 = !DILocation(line: 419, column: 22, scope: !5292)
!5570 = !DILocation(line: 419, column: 36, scope: !5292)
!5571 = !DILocation(line: 419, column: 27, scope: !5292)
!5572 = !DILocation(line: 419, column: 21, scope: !5293)
!5573 = !DILocation(line: 420, column: 25, scope: !5302)
!5574 = !DILocation(line: 420, column: 25, scope: !5303)
!5575 = !DILocation(line: 421, column: 36, scope: !5309)
!5576 = !DILocation(line: 421, column: 23, scope: !5309)
!5577 = !DILocation(line: 421, column: 33, scope: !5309)
!5578 = !DILocation(line: 421, column: 28, scope: !5309)
!5579 = !DILocation(line: 421, column: 83, scope: !5309)
!5580 = !DILocation(line: 421, column: 62, scope: !5309)
!5581 = !DILocation(line: 421, column: 80, scope: !5309)
!5582 = !DILocation(line: 421, column: 67, scope: !5309)
!5583 = !DILocation(line: 422, column: 89, scope: !5309)
!5584 = !DILocation(line: 422, column: 74, scope: !5309)
!5585 = !DILocation(line: 422, column: 86, scope: !5309)
!5586 = !DILocation(line: 422, column: 79, scope: !5309)
!5587 = !DILocation(line: 422, column: 55, scope: !5309)
!5588 = !DILocation(line: 423, column: 81, scope: !5309)
!5589 = !DILocation(line: 423, column: 64, scope: !5309)
!5590 = !DILocation(line: 423, column: 78, scope: !5309)
!5591 = !DILocation(line: 423, column: 69, scope: !5309)
!5592 = !DILocation(line: 423, column: 45, scope: !5309)
!5593 = !DILocation(line: 422, column: 45, scope: !5309)
!5594 = !DILocation(line: 422, column: 45, scope: !5308)
!5595 = !DILocation(line: 421, column: 52, scope: !5309)
!5596 = !DILocation(line: 421, column: 41, scope: !5309)
!5597 = !DILocation(line: 421, column: 41, scope: !5308)
!5598 = !DILocation(line: 211, column: 13, scope: !5422, inlinedAt: !5307)
!5599 = !DILocation(line: 211, column: 18, scope: !5422, inlinedAt: !5307)
!5600 = !DILocation(line: 211, column: 9, scope: !5270, inlinedAt: !5307)
!5601 = !DILocation(line: 212, column: 13, scope: !5422, inlinedAt: !5307)
!5602 = !DILocation(line: 212, column: 17, scope: !5422, inlinedAt: !5307)
!5603 = !DILocation(line: 212, column: 9, scope: !5422, inlinedAt: !5307)
!5604 = !DILocation(line: 213, column: 18, scope: !5429, inlinedAt: !5307)
!5605 = !DILocation(line: 213, column: 23, scope: !5429, inlinedAt: !5307)
!5606 = !DILocation(line: 213, column: 14, scope: !5422, inlinedAt: !5307)
!5607 = !DILocation(line: 214, column: 9, scope: !5429, inlinedAt: !5307)
!5608 = !DILocation(line: 217, column: 25, scope: !5434, inlinedAt: !5307)
!5609 = !DILocation(line: 217, column: 30, scope: !5434, inlinedAt: !5307)
!5610 = !DILocation(line: 217, column: 44, scope: !5434, inlinedAt: !5307)
!5611 = !DILocation(line: 217, column: 18, scope: !5434, inlinedAt: !5307)
!5612 = !DILocation(line: 219, column: 19, scope: !5434, inlinedAt: !5307)
!5613 = !DILocation(line: 219, column: 24, scope: !5434, inlinedAt: !5307)
!5614 = !DILocation(line: 219, column: 13, scope: !5434, inlinedAt: !5307)
!5615 = !DILocation(line: 220, column: 50, scope: !5434, inlinedAt: !5307)
!5616 = !DILocation(line: 220, column: 36, scope: !5434, inlinedAt: !5307)
!5617 = !DILocation(line: 220, column: 27, scope: !5434, inlinedAt: !5307)
!5618 = !DILocation(line: 220, column: 74, scope: !5434, inlinedAt: !5307)
!5619 = !DILocation(line: 220, column: 72, scope: !5434, inlinedAt: !5307)
!5620 = !DILocation(line: 220, column: 62, scope: !5434, inlinedAt: !5307)
!5621 = !DILocation(line: 220, column: 60, scope: !5434, inlinedAt: !5307)
!5622 = !DILocation(line: 221, column: 51, scope: !5434, inlinedAt: !5307)
!5623 = !DILocation(line: 221, column: 60, scope: !5434, inlinedAt: !5307)
!5624 = !DILocation(line: 221, column: 37, scope: !5434, inlinedAt: !5307)
!5625 = !DILocation(line: 221, column: 28, scope: !5434, inlinedAt: !5307)
!5626 = !DILocation(line: 221, column: 67, scope: !5434, inlinedAt: !5307)
!5627 = !DILocation(line: 221, column: 65, scope: !5434, inlinedAt: !5307)
!5628 = !DILocation(line: 220, column: 79, scope: !5434, inlinedAt: !5307)
!5629 = !DILocation(line: 221, column: 71, scope: !5434, inlinedAt: !5307)
!5630 = !DILocation(line: 222, column: 37, scope: !5434, inlinedAt: !5307)
!5631 = !DILocation(line: 220, column: 20, scope: !5434, inlinedAt: !5307)
!5632 = !DILocation(line: 220, column: 13, scope: !5434, inlinedAt: !5307)
!5633 = !DILocation(line: 220, column: 18, scope: !5434, inlinedAt: !5307)
!5634 = !DILocation(line: 223, column: 61, scope: !5434, inlinedAt: !5307)
!5635 = !DILocation(line: 223, column: 65, scope: !5434, inlinedAt: !5307)
!5636 = !DILocation(line: 223, column: 36, scope: !5434, inlinedAt: !5307)
!5637 = !DILocation(line: 223, column: 27, scope: !5434, inlinedAt: !5307)
!5638 = !DILocation(line: 223, column: 76, scope: !5434, inlinedAt: !5307)
!5639 = !DILocation(line: 223, column: 72, scope: !5434, inlinedAt: !5307)
!5640 = !DILocation(line: 223, column: 70, scope: !5434, inlinedAt: !5307)
!5641 = !DILocation(line: 223, column: 81, scope: !5434, inlinedAt: !5307)
!5642 = !DILocation(line: 224, column: 39, scope: !5434, inlinedAt: !5307)
!5643 = !DILocation(line: 223, column: 20, scope: !5434, inlinedAt: !5307)
!5644 = !DILocation(line: 223, column: 13, scope: !5434, inlinedAt: !5307)
!5645 = !DILocation(line: 223, column: 18, scope: !5434, inlinedAt: !5307)
!5646 = !DILocation(line: 226, column: 17, scope: !5473, inlinedAt: !5307)
!5647 = !DILocation(line: 226, column: 22, scope: !5473, inlinedAt: !5307)
!5648 = !DILocation(line: 226, column: 13, scope: !5434, inlinedAt: !5307)
!5649 = !DILocation(line: 227, column: 17, scope: !5473, inlinedAt: !5307)
!5650 = !DILocation(line: 227, column: 21, scope: !5473, inlinedAt: !5307)
!5651 = !DILocation(line: 227, column: 13, scope: !5473, inlinedAt: !5307)
!5652 = !DILocation(line: 229, column: 17, scope: !5473, inlinedAt: !5307)
!5653 = !DILocation(line: 229, column: 22, scope: !5473, inlinedAt: !5307)
!5654 = !DILocation(line: 231, column: 24, scope: !5434, inlinedAt: !5307)
!5655 = !DILocation(line: 231, column: 28, scope: !5434, inlinedAt: !5307)
!5656 = !DILocation(line: 231, column: 34, scope: !5434, inlinedAt: !5307)
!5657 = !DILocation(line: 231, column: 13, scope: !5434, inlinedAt: !5307)
!5658 = !DILocation(line: 231, column: 17, scope: !5434, inlinedAt: !5307)
!5659 = !DILocation(line: 234, column: 12, scope: !5270, inlinedAt: !5307)
!5660 = !DILocation(line: 234, column: 5, scope: !5270, inlinedAt: !5307)
!5661 = !DILocation(line: 421, column: 41, scope: !5662)
!5662 = !DILexicalBlockFile(scope: !5309, file: !1058, discriminator: 2)
!5663 = !DILocation(line: 424, column: 21, scope: !5309)
!5664 = !DILocation(line: 425, column: 36, scope: !5301)
!5665 = !DILocation(line: 425, column: 23, scope: !5301)
!5666 = !DILocation(line: 425, column: 33, scope: !5301)
!5667 = !DILocation(line: 425, column: 28, scope: !5301)
!5668 = !DILocation(line: 425, column: 83, scope: !5301)
!5669 = !DILocation(line: 425, column: 62, scope: !5301)
!5670 = !DILocation(line: 425, column: 80, scope: !5301)
!5671 = !DILocation(line: 425, column: 67, scope: !5301)
!5672 = !DILocation(line: 426, column: 79, scope: !5301)
!5673 = !DILocation(line: 426, column: 64, scope: !5301)
!5674 = !DILocation(line: 426, column: 76, scope: !5301)
!5675 = !DILocation(line: 426, column: 69, scope: !5301)
!5676 = !DILocation(line: 426, column: 45, scope: !5301)
!5677 = !DILocation(line: 425, column: 52, scope: !5301)
!5678 = !DILocation(line: 425, column: 41, scope: !5301)
!5679 = !DILocation(line: 425, column: 41, scope: !5300)
!5680 = !DILocation(line: 211, column: 13, scope: !5422, inlinedAt: !5299)
!5681 = !DILocation(line: 211, column: 18, scope: !5422, inlinedAt: !5299)
!5682 = !DILocation(line: 211, column: 9, scope: !5270, inlinedAt: !5299)
!5683 = !DILocation(line: 212, column: 13, scope: !5422, inlinedAt: !5299)
!5684 = !DILocation(line: 212, column: 17, scope: !5422, inlinedAt: !5299)
!5685 = !DILocation(line: 212, column: 9, scope: !5422, inlinedAt: !5299)
!5686 = !DILocation(line: 213, column: 18, scope: !5429, inlinedAt: !5299)
!5687 = !DILocation(line: 213, column: 23, scope: !5429, inlinedAt: !5299)
!5688 = !DILocation(line: 213, column: 14, scope: !5422, inlinedAt: !5299)
!5689 = !DILocation(line: 214, column: 9, scope: !5429, inlinedAt: !5299)
!5690 = !DILocation(line: 217, column: 25, scope: !5434, inlinedAt: !5299)
!5691 = !DILocation(line: 217, column: 30, scope: !5434, inlinedAt: !5299)
!5692 = !DILocation(line: 217, column: 44, scope: !5434, inlinedAt: !5299)
!5693 = !DILocation(line: 217, column: 18, scope: !5434, inlinedAt: !5299)
!5694 = !DILocation(line: 219, column: 19, scope: !5434, inlinedAt: !5299)
!5695 = !DILocation(line: 219, column: 24, scope: !5434, inlinedAt: !5299)
!5696 = !DILocation(line: 219, column: 13, scope: !5434, inlinedAt: !5299)
!5697 = !DILocation(line: 220, column: 50, scope: !5434, inlinedAt: !5299)
!5698 = !DILocation(line: 220, column: 36, scope: !5434, inlinedAt: !5299)
!5699 = !DILocation(line: 220, column: 27, scope: !5434, inlinedAt: !5299)
!5700 = !DILocation(line: 220, column: 74, scope: !5434, inlinedAt: !5299)
!5701 = !DILocation(line: 220, column: 72, scope: !5434, inlinedAt: !5299)
!5702 = !DILocation(line: 220, column: 62, scope: !5434, inlinedAt: !5299)
!5703 = !DILocation(line: 220, column: 60, scope: !5434, inlinedAt: !5299)
!5704 = !DILocation(line: 221, column: 51, scope: !5434, inlinedAt: !5299)
!5705 = !DILocation(line: 221, column: 60, scope: !5434, inlinedAt: !5299)
!5706 = !DILocation(line: 221, column: 37, scope: !5434, inlinedAt: !5299)
!5707 = !DILocation(line: 221, column: 28, scope: !5434, inlinedAt: !5299)
!5708 = !DILocation(line: 221, column: 67, scope: !5434, inlinedAt: !5299)
!5709 = !DILocation(line: 221, column: 65, scope: !5434, inlinedAt: !5299)
!5710 = !DILocation(line: 220, column: 79, scope: !5434, inlinedAt: !5299)
!5711 = !DILocation(line: 221, column: 71, scope: !5434, inlinedAt: !5299)
!5712 = !DILocation(line: 222, column: 37, scope: !5434, inlinedAt: !5299)
!5713 = !DILocation(line: 220, column: 20, scope: !5434, inlinedAt: !5299)
!5714 = !DILocation(line: 220, column: 13, scope: !5434, inlinedAt: !5299)
!5715 = !DILocation(line: 220, column: 18, scope: !5434, inlinedAt: !5299)
!5716 = !DILocation(line: 223, column: 61, scope: !5434, inlinedAt: !5299)
!5717 = !DILocation(line: 223, column: 65, scope: !5434, inlinedAt: !5299)
!5718 = !DILocation(line: 223, column: 36, scope: !5434, inlinedAt: !5299)
!5719 = !DILocation(line: 223, column: 27, scope: !5434, inlinedAt: !5299)
!5720 = !DILocation(line: 223, column: 76, scope: !5434, inlinedAt: !5299)
!5721 = !DILocation(line: 223, column: 72, scope: !5434, inlinedAt: !5299)
!5722 = !DILocation(line: 223, column: 70, scope: !5434, inlinedAt: !5299)
!5723 = !DILocation(line: 223, column: 81, scope: !5434, inlinedAt: !5299)
!5724 = !DILocation(line: 224, column: 39, scope: !5434, inlinedAt: !5299)
!5725 = !DILocation(line: 223, column: 20, scope: !5434, inlinedAt: !5299)
!5726 = !DILocation(line: 223, column: 13, scope: !5434, inlinedAt: !5299)
!5727 = !DILocation(line: 223, column: 18, scope: !5434, inlinedAt: !5299)
!5728 = !DILocation(line: 226, column: 17, scope: !5473, inlinedAt: !5299)
!5729 = !DILocation(line: 226, column: 22, scope: !5473, inlinedAt: !5299)
!5730 = !DILocation(line: 226, column: 13, scope: !5434, inlinedAt: !5299)
!5731 = !DILocation(line: 227, column: 17, scope: !5473, inlinedAt: !5299)
!5732 = !DILocation(line: 227, column: 21, scope: !5473, inlinedAt: !5299)
!5733 = !DILocation(line: 227, column: 13, scope: !5473, inlinedAt: !5299)
!5734 = !DILocation(line: 229, column: 17, scope: !5473, inlinedAt: !5299)
!5735 = !DILocation(line: 229, column: 22, scope: !5473, inlinedAt: !5299)
!5736 = !DILocation(line: 231, column: 24, scope: !5434, inlinedAt: !5299)
!5737 = !DILocation(line: 231, column: 28, scope: !5434, inlinedAt: !5299)
!5738 = !DILocation(line: 231, column: 34, scope: !5434, inlinedAt: !5299)
!5739 = !DILocation(line: 231, column: 13, scope: !5434, inlinedAt: !5299)
!5740 = !DILocation(line: 231, column: 17, scope: !5434, inlinedAt: !5299)
!5741 = !DILocation(line: 234, column: 12, scope: !5270, inlinedAt: !5299)
!5742 = !DILocation(line: 234, column: 5, scope: !5270, inlinedAt: !5299)
!5743 = !DILocation(line: 425, column: 41, scope: !5744)
!5744 = !DILexicalBlockFile(scope: !5301, file: !1058, discriminator: 2)
!5745 = !DILocation(line: 428, column: 17, scope: !5303)
!5746 = !DILocation(line: 429, column: 34, scope: !5291)
!5747 = !DILocation(line: 429, column: 21, scope: !5291)
!5748 = !DILocation(line: 429, column: 31, scope: !5291)
!5749 = !DILocation(line: 429, column: 26, scope: !5291)
!5750 = !DILocation(line: 431, column: 76, scope: !5291)
!5751 = !DILocation(line: 431, column: 55, scope: !5291)
!5752 = !DILocation(line: 431, column: 73, scope: !5291)
!5753 = !DILocation(line: 431, column: 60, scope: !5291)
!5754 = !DILocation(line: 431, column: 97, scope: !5291)
!5755 = !DILocation(line: 431, column: 80, scope: !5291)
!5756 = !DILocation(line: 431, column: 94, scope: !5291)
!5757 = !DILocation(line: 431, column: 85, scope: !5291)
!5758 = !DILocation(line: 431, column: 45, scope: !5291)
!5759 = !DILocation(line: 433, column: 83, scope: !5291)
!5760 = !DILocation(line: 433, column: 68, scope: !5291)
!5761 = !DILocation(line: 433, column: 80, scope: !5291)
!5762 = !DILocation(line: 433, column: 73, scope: !5291)
!5763 = !DILocation(line: 433, column: 49, scope: !5291)
!5764 = !DILocation(line: 434, column: 85, scope: !5291)
!5765 = !DILocation(line: 434, column: 68, scope: !5291)
!5766 = !DILocation(line: 434, column: 82, scope: !5291)
!5767 = !DILocation(line: 434, column: 73, scope: !5291)
!5768 = !DILocation(line: 434, column: 49, scope: !5291)
!5769 = !DILocation(line: 432, column: 45, scope: !5291)
!5770 = !DILocation(line: 430, column: 41, scope: !5291)
!5771 = !DILocation(line: 429, column: 39, scope: !5291)
!5772 = !DILocation(line: 211, column: 13, scope: !5422, inlinedAt: !5290)
!5773 = !DILocation(line: 211, column: 18, scope: !5422, inlinedAt: !5290)
!5774 = !DILocation(line: 211, column: 9, scope: !5270, inlinedAt: !5290)
!5775 = !DILocation(line: 212, column: 13, scope: !5422, inlinedAt: !5290)
!5776 = !DILocation(line: 212, column: 17, scope: !5422, inlinedAt: !5290)
!5777 = !DILocation(line: 212, column: 9, scope: !5422, inlinedAt: !5290)
!5778 = !DILocation(line: 213, column: 18, scope: !5429, inlinedAt: !5290)
!5779 = !DILocation(line: 213, column: 23, scope: !5429, inlinedAt: !5290)
!5780 = !DILocation(line: 213, column: 14, scope: !5422, inlinedAt: !5290)
!5781 = !DILocation(line: 214, column: 9, scope: !5429, inlinedAt: !5290)
!5782 = !DILocation(line: 217, column: 25, scope: !5434, inlinedAt: !5290)
!5783 = !DILocation(line: 217, column: 30, scope: !5434, inlinedAt: !5290)
!5784 = !DILocation(line: 217, column: 44, scope: !5434, inlinedAt: !5290)
!5785 = !DILocation(line: 217, column: 18, scope: !5434, inlinedAt: !5290)
!5786 = !DILocation(line: 219, column: 19, scope: !5434, inlinedAt: !5290)
!5787 = !DILocation(line: 219, column: 24, scope: !5434, inlinedAt: !5290)
!5788 = !DILocation(line: 219, column: 13, scope: !5434, inlinedAt: !5290)
!5789 = !DILocation(line: 220, column: 50, scope: !5434, inlinedAt: !5290)
!5790 = !DILocation(line: 220, column: 36, scope: !5434, inlinedAt: !5290)
!5791 = !DILocation(line: 220, column: 27, scope: !5434, inlinedAt: !5290)
!5792 = !DILocation(line: 220, column: 74, scope: !5434, inlinedAt: !5290)
!5793 = !DILocation(line: 220, column: 72, scope: !5434, inlinedAt: !5290)
!5794 = !DILocation(line: 220, column: 62, scope: !5434, inlinedAt: !5290)
!5795 = !DILocation(line: 220, column: 60, scope: !5434, inlinedAt: !5290)
!5796 = !DILocation(line: 221, column: 51, scope: !5434, inlinedAt: !5290)
!5797 = !DILocation(line: 221, column: 60, scope: !5434, inlinedAt: !5290)
!5798 = !DILocation(line: 221, column: 37, scope: !5434, inlinedAt: !5290)
!5799 = !DILocation(line: 221, column: 28, scope: !5434, inlinedAt: !5290)
!5800 = !DILocation(line: 221, column: 67, scope: !5434, inlinedAt: !5290)
!5801 = !DILocation(line: 221, column: 65, scope: !5434, inlinedAt: !5290)
!5802 = !DILocation(line: 220, column: 79, scope: !5434, inlinedAt: !5290)
!5803 = !DILocation(line: 221, column: 71, scope: !5434, inlinedAt: !5290)
!5804 = !DILocation(line: 222, column: 37, scope: !5434, inlinedAt: !5290)
!5805 = !DILocation(line: 220, column: 20, scope: !5434, inlinedAt: !5290)
!5806 = !DILocation(line: 220, column: 13, scope: !5434, inlinedAt: !5290)
!5807 = !DILocation(line: 220, column: 18, scope: !5434, inlinedAt: !5290)
!5808 = !DILocation(line: 223, column: 61, scope: !5434, inlinedAt: !5290)
!5809 = !DILocation(line: 223, column: 65, scope: !5434, inlinedAt: !5290)
!5810 = !DILocation(line: 223, column: 36, scope: !5434, inlinedAt: !5290)
!5811 = !DILocation(line: 223, column: 27, scope: !5434, inlinedAt: !5290)
!5812 = !DILocation(line: 223, column: 76, scope: !5434, inlinedAt: !5290)
!5813 = !DILocation(line: 223, column: 72, scope: !5434, inlinedAt: !5290)
!5814 = !DILocation(line: 223, column: 70, scope: !5434, inlinedAt: !5290)
!5815 = !DILocation(line: 223, column: 81, scope: !5434, inlinedAt: !5290)
!5816 = !DILocation(line: 224, column: 39, scope: !5434, inlinedAt: !5290)
!5817 = !DILocation(line: 223, column: 20, scope: !5434, inlinedAt: !5290)
!5818 = !DILocation(line: 223, column: 13, scope: !5434, inlinedAt: !5290)
!5819 = !DILocation(line: 223, column: 18, scope: !5434, inlinedAt: !5290)
!5820 = !DILocation(line: 226, column: 17, scope: !5473, inlinedAt: !5290)
!5821 = !DILocation(line: 226, column: 22, scope: !5473, inlinedAt: !5290)
!5822 = !DILocation(line: 226, column: 13, scope: !5434, inlinedAt: !5290)
!5823 = !DILocation(line: 227, column: 17, scope: !5473, inlinedAt: !5290)
!5824 = !DILocation(line: 227, column: 21, scope: !5473, inlinedAt: !5290)
!5825 = !DILocation(line: 227, column: 13, scope: !5473, inlinedAt: !5290)
!5826 = !DILocation(line: 229, column: 17, scope: !5473, inlinedAt: !5290)
!5827 = !DILocation(line: 229, column: 22, scope: !5473, inlinedAt: !5290)
!5828 = !DILocation(line: 231, column: 24, scope: !5434, inlinedAt: !5290)
!5829 = !DILocation(line: 231, column: 28, scope: !5434, inlinedAt: !5290)
!5830 = !DILocation(line: 231, column: 34, scope: !5434, inlinedAt: !5290)
!5831 = !DILocation(line: 231, column: 13, scope: !5434, inlinedAt: !5290)
!5832 = !DILocation(line: 231, column: 17, scope: !5434, inlinedAt: !5290)
!5833 = !DILocation(line: 234, column: 12, scope: !5270, inlinedAt: !5290)
!5834 = !DILocation(line: 234, column: 5, scope: !5270, inlinedAt: !5290)
!5835 = !DILocation(line: 429, column: 39, scope: !5836)
!5836 = !DILexicalBlockFile(scope: !5291, file: !1058, discriminator: 1)
!5837 = !DILocation(line: 436, column: 30, scope: !5293)
!5838 = !DILocation(line: 436, column: 17, scope: !5293)
!5839 = !DILocation(line: 436, column: 27, scope: !5293)
!5840 = !DILocation(line: 436, column: 22, scope: !5293)
!5841 = !DILocation(line: 436, column: 58, scope: !5293)
!5842 = !DILocation(line: 436, column: 45, scope: !5293)
!5843 = !DILocation(line: 436, column: 55, scope: !5293)
!5844 = !DILocation(line: 436, column: 50, scope: !5293)
!5845 = !DILocation(line: 436, column: 35, scope: !5293)
!5846 = !DILocation(line: 436, column: 35, scope: !5319)
!5847 = !DILocation(line: 437, column: 13, scope: !5293)
!5848 = !DILocation(line: 414, column: 97, scope: !5849)
!5849 = !DILexicalBlockFile(scope: !5294, file: !1058, discriminator: 2)
!5850 = !DILocation(line: 414, column: 13, scope: !5849)
!5851 = distinct !{!5851, !5852}
!5852 = !DILocation(line: 414, column: 13, scope: !5275)
!5853 = !DILocation(line: 438, column: 38, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5275, file: !1058, line: 438, column: 13)
!5855 = !DILocation(line: 438, column: 22, scope: !5854)
!5856 = !DILocation(line: 438, column: 27, scope: !5854)
!5857 = !DILocation(line: 438, column: 43, scope: !5854)
!5858 = !DILocation(line: 438, column: 48, scope: !5854)
!5859 = !DILocation(line: 438, column: 41, scope: !5854)
!5860 = !DILocation(line: 438, column: 20, scope: !5854)
!5861 = !DILocation(line: 438, column: 18, scope: !5854)
!5862 = !DILocation(line: 438, column: 55, scope: !5863)
!5863 = !DILexicalBlockFile(scope: !5864, file: !1058, discriminator: 1)
!5864 = distinct !DILexicalBlock(scope: !5854, file: !1058, line: 438, column: 13)
!5865 = !DILocation(line: 438, column: 75, scope: !5863)
!5866 = !DILocation(line: 438, column: 77, scope: !5863)
!5867 = !DILocation(line: 438, column: 59, scope: !5863)
!5868 = !DILocation(line: 438, column: 64, scope: !5863)
!5869 = !DILocation(line: 438, column: 84, scope: !5863)
!5870 = !DILocation(line: 438, column: 89, scope: !5863)
!5871 = !DILocation(line: 438, column: 82, scope: !5863)
!5872 = !DILocation(line: 438, column: 57, scope: !5863)
!5873 = !DILocation(line: 438, column: 13, scope: !5863)
!5874 = !DILocation(line: 439, column: 17, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5864, file: !1058, line: 438, column: 101)
!5876 = !DILocation(line: 439, column: 36, scope: !5875)
!5877 = !DILocation(line: 439, column: 65, scope: !5875)
!5878 = !DILocation(line: 439, column: 44, scope: !5875)
!5879 = !DILocation(line: 439, column: 62, scope: !5875)
!5880 = !DILocation(line: 439, column: 49, scope: !5875)
!5881 = !DILocation(line: 439, column: 26, scope: !5875)
!5882 = !DILocation(line: 439, column: 26, scope: !5883)
!5883 = !DILexicalBlockFile(scope: !5875, file: !1058, discriminator: 1)
!5884 = !DILocation(line: 440, column: 17, scope: !5875)
!5885 = !DILocation(line: 440, column: 36, scope: !5875)
!5886 = !DILocation(line: 440, column: 59, scope: !5875)
!5887 = !DILocation(line: 440, column: 44, scope: !5875)
!5888 = !DILocation(line: 440, column: 56, scope: !5875)
!5889 = !DILocation(line: 440, column: 49, scope: !5875)
!5890 = !DILocation(line: 440, column: 26, scope: !5875)
!5891 = !DILocation(line: 440, column: 26, scope: !5883)
!5892 = !DILocation(line: 441, column: 13, scope: !5875)
!5893 = !DILocation(line: 438, column: 97, scope: !5894)
!5894 = !DILexicalBlockFile(scope: !5864, file: !1058, discriminator: 2)
!5895 = !DILocation(line: 438, column: 13, scope: !5894)
!5896 = distinct !{!5896, !5897}
!5897 = !DILocation(line: 438, column: 13, scope: !5275)
!5898 = !DILocation(line: 442, column: 42, scope: !5275)
!5899 = !DILocation(line: 442, column: 47, scope: !5275)
!5900 = !DILocation(line: 442, column: 34, scope: !5275)
!5901 = !DILocation(line: 445, column: 62, scope: !5275)
!5902 = !DILocation(line: 445, column: 37, scope: !5275)
!5903 = !DILocation(line: 446, column: 62, scope: !5275)
!5904 = !DILocation(line: 446, column: 37, scope: !5275)
!5905 = !DILocation(line: 444, column: 33, scope: !5275)
!5906 = !DILocation(line: 443, column: 29, scope: !5275)
!5907 = !DILocation(line: 211, column: 13, scope: !5422, inlinedAt: !5286)
!5908 = !DILocation(line: 211, column: 18, scope: !5422, inlinedAt: !5286)
!5909 = !DILocation(line: 211, column: 9, scope: !5270, inlinedAt: !5286)
!5910 = !DILocation(line: 212, column: 13, scope: !5422, inlinedAt: !5286)
!5911 = !DILocation(line: 212, column: 17, scope: !5422, inlinedAt: !5286)
!5912 = !DILocation(line: 212, column: 9, scope: !5422, inlinedAt: !5286)
!5913 = !DILocation(line: 213, column: 18, scope: !5429, inlinedAt: !5286)
!5914 = !DILocation(line: 213, column: 23, scope: !5429, inlinedAt: !5286)
!5915 = !DILocation(line: 213, column: 14, scope: !5422, inlinedAt: !5286)
!5916 = !DILocation(line: 214, column: 9, scope: !5429, inlinedAt: !5286)
!5917 = !DILocation(line: 217, column: 25, scope: !5434, inlinedAt: !5286)
!5918 = !DILocation(line: 217, column: 30, scope: !5434, inlinedAt: !5286)
!5919 = !DILocation(line: 217, column: 44, scope: !5434, inlinedAt: !5286)
!5920 = !DILocation(line: 217, column: 18, scope: !5434, inlinedAt: !5286)
!5921 = !DILocation(line: 219, column: 19, scope: !5434, inlinedAt: !5286)
!5922 = !DILocation(line: 219, column: 24, scope: !5434, inlinedAt: !5286)
!5923 = !DILocation(line: 219, column: 13, scope: !5434, inlinedAt: !5286)
!5924 = !DILocation(line: 220, column: 50, scope: !5434, inlinedAt: !5286)
!5925 = !DILocation(line: 220, column: 36, scope: !5434, inlinedAt: !5286)
!5926 = !DILocation(line: 220, column: 27, scope: !5434, inlinedAt: !5286)
!5927 = !DILocation(line: 220, column: 74, scope: !5434, inlinedAt: !5286)
!5928 = !DILocation(line: 220, column: 72, scope: !5434, inlinedAt: !5286)
!5929 = !DILocation(line: 220, column: 62, scope: !5434, inlinedAt: !5286)
!5930 = !DILocation(line: 220, column: 60, scope: !5434, inlinedAt: !5286)
!5931 = !DILocation(line: 221, column: 51, scope: !5434, inlinedAt: !5286)
!5932 = !DILocation(line: 221, column: 60, scope: !5434, inlinedAt: !5286)
!5933 = !DILocation(line: 221, column: 37, scope: !5434, inlinedAt: !5286)
!5934 = !DILocation(line: 221, column: 28, scope: !5434, inlinedAt: !5286)
!5935 = !DILocation(line: 221, column: 67, scope: !5434, inlinedAt: !5286)
!5936 = !DILocation(line: 221, column: 65, scope: !5434, inlinedAt: !5286)
!5937 = !DILocation(line: 220, column: 79, scope: !5434, inlinedAt: !5286)
!5938 = !DILocation(line: 221, column: 71, scope: !5434, inlinedAt: !5286)
!5939 = !DILocation(line: 222, column: 37, scope: !5434, inlinedAt: !5286)
!5940 = !DILocation(line: 220, column: 20, scope: !5434, inlinedAt: !5286)
!5941 = !DILocation(line: 220, column: 13, scope: !5434, inlinedAt: !5286)
!5942 = !DILocation(line: 220, column: 18, scope: !5434, inlinedAt: !5286)
!5943 = !DILocation(line: 223, column: 61, scope: !5434, inlinedAt: !5286)
!5944 = !DILocation(line: 223, column: 65, scope: !5434, inlinedAt: !5286)
!5945 = !DILocation(line: 223, column: 36, scope: !5434, inlinedAt: !5286)
!5946 = !DILocation(line: 223, column: 27, scope: !5434, inlinedAt: !5286)
!5947 = !DILocation(line: 223, column: 76, scope: !5434, inlinedAt: !5286)
!5948 = !DILocation(line: 223, column: 72, scope: !5434, inlinedAt: !5286)
!5949 = !DILocation(line: 223, column: 70, scope: !5434, inlinedAt: !5286)
!5950 = !DILocation(line: 223, column: 81, scope: !5434, inlinedAt: !5286)
!5951 = !DILocation(line: 224, column: 39, scope: !5434, inlinedAt: !5286)
!5952 = !DILocation(line: 223, column: 20, scope: !5434, inlinedAt: !5286)
!5953 = !DILocation(line: 223, column: 13, scope: !5434, inlinedAt: !5286)
!5954 = !DILocation(line: 223, column: 18, scope: !5434, inlinedAt: !5286)
!5955 = !DILocation(line: 226, column: 17, scope: !5473, inlinedAt: !5286)
!5956 = !DILocation(line: 226, column: 22, scope: !5473, inlinedAt: !5286)
!5957 = !DILocation(line: 226, column: 13, scope: !5434, inlinedAt: !5286)
!5958 = !DILocation(line: 227, column: 17, scope: !5473, inlinedAt: !5286)
!5959 = !DILocation(line: 227, column: 21, scope: !5473, inlinedAt: !5286)
!5960 = !DILocation(line: 227, column: 13, scope: !5473, inlinedAt: !5286)
!5961 = !DILocation(line: 229, column: 17, scope: !5473, inlinedAt: !5286)
!5962 = !DILocation(line: 229, column: 22, scope: !5473, inlinedAt: !5286)
!5963 = !DILocation(line: 231, column: 24, scope: !5434, inlinedAt: !5286)
!5964 = !DILocation(line: 231, column: 28, scope: !5434, inlinedAt: !5286)
!5965 = !DILocation(line: 231, column: 34, scope: !5434, inlinedAt: !5286)
!5966 = !DILocation(line: 231, column: 13, scope: !5434, inlinedAt: !5286)
!5967 = !DILocation(line: 231, column: 17, scope: !5434, inlinedAt: !5286)
!5968 = !DILocation(line: 234, column: 12, scope: !5270, inlinedAt: !5286)
!5969 = !DILocation(line: 234, column: 5, scope: !5270, inlinedAt: !5286)
!5970 = !DILocation(line: 442, column: 24, scope: !5275)
!5971 = !DILocation(line: 442, column: 24, scope: !5378)
!5972 = !DILocation(line: 447, column: 17, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5275, file: !1058, line: 447, column: 17)
!5974 = !DILocation(line: 447, column: 17, scope: !5275)
!5975 = !DILocation(line: 448, column: 26, scope: !5973)
!5976 = !DILocation(line: 448, column: 15, scope: !5973)
!5977 = !DILocation(line: 449, column: 38, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5275, file: !1058, line: 449, column: 13)
!5979 = !DILocation(line: 449, column: 22, scope: !5978)
!5980 = !DILocation(line: 449, column: 27, scope: !5978)
!5981 = !DILocation(line: 449, column: 43, scope: !5978)
!5982 = !DILocation(line: 449, column: 48, scope: !5978)
!5983 = !DILocation(line: 449, column: 41, scope: !5978)
!5984 = !DILocation(line: 449, column: 20, scope: !5978)
!5985 = !DILocation(line: 449, column: 18, scope: !5978)
!5986 = !DILocation(line: 449, column: 55, scope: !5987)
!5987 = !DILexicalBlockFile(scope: !5988, file: !1058, discriminator: 1)
!5988 = distinct !DILexicalBlock(scope: !5978, file: !1058, line: 449, column: 13)
!5989 = !DILocation(line: 449, column: 75, scope: !5987)
!5990 = !DILocation(line: 449, column: 77, scope: !5987)
!5991 = !DILocation(line: 449, column: 59, scope: !5987)
!5992 = !DILocation(line: 449, column: 64, scope: !5987)
!5993 = !DILocation(line: 449, column: 84, scope: !5987)
!5994 = !DILocation(line: 449, column: 89, scope: !5987)
!5995 = !DILocation(line: 449, column: 82, scope: !5987)
!5996 = !DILocation(line: 449, column: 57, scope: !5987)
!5997 = !DILocation(line: 449, column: 13, scope: !5987)
!5998 = !DILocalVariable(name: "q_m_max", scope: !5999, file: !1058, line: 450, type: !1210)
!5999 = distinct !DILexicalBlock(scope: !5988, file: !1058, line: 449, column: 101)
!6000 = !DILocation(line: 450, column: 27, scope: !5999)
!6001 = !DILocation(line: 451, column: 63, scope: !5999)
!6002 = !DILocation(line: 451, column: 51, scope: !5999)
!6003 = !DILocation(line: 451, column: 60, scope: !5999)
!6004 = !DILocation(line: 451, column: 56, scope: !5999)
!6005 = !DILocation(line: 451, column: 41, scope: !5999)
!6006 = !DILocation(line: 452, column: 54, scope: !5999)
!6007 = !DILocation(line: 452, column: 41, scope: !5999)
!6008 = !DILocation(line: 452, column: 51, scope: !5999)
!6009 = !DILocation(line: 452, column: 46, scope: !5999)
!6010 = !DILocation(line: 450, column: 37, scope: !5999)
!6011 = !DILocation(line: 453, column: 42, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5999, file: !1058, line: 453, column: 21)
!6013 = !DILocation(line: 453, column: 30, scope: !6012)
!6014 = !DILocation(line: 453, column: 39, scope: !6012)
!6015 = !DILocation(line: 453, column: 35, scope: !6012)
!6016 = !DILocation(line: 453, column: 21, scope: !6012)
!6017 = !DILocation(line: 453, column: 21, scope: !5999)
!6018 = !DILocation(line: 454, column: 31, scope: !6012)
!6019 = !DILocation(line: 454, column: 19, scope: !6012)
!6020 = !DILocation(line: 454, column: 28, scope: !6012)
!6021 = !DILocation(line: 454, column: 24, scope: !6012)
!6022 = !DILocation(line: 454, column: 36, scope: !6012)
!6023 = !DILocation(line: 455, column: 43, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !5999, file: !1058, line: 455, column: 21)
!6025 = !DILocation(line: 455, column: 30, scope: !6024)
!6026 = !DILocation(line: 455, column: 40, scope: !6024)
!6027 = !DILocation(line: 455, column: 35, scope: !6024)
!6028 = !DILocation(line: 455, column: 21, scope: !6024)
!6029 = !DILocation(line: 455, column: 21, scope: !5999)
!6030 = !DILocation(line: 456, column: 32, scope: !6024)
!6031 = !DILocation(line: 456, column: 19, scope: !6024)
!6032 = !DILocation(line: 456, column: 29, scope: !6024)
!6033 = !DILocation(line: 456, column: 24, scope: !6024)
!6034 = !DILocation(line: 456, column: 37, scope: !6024)
!6035 = !DILocation(line: 457, column: 13, scope: !5999)
!6036 = !DILocation(line: 449, column: 97, scope: !6037)
!6037 = !DILexicalBlockFile(scope: !5988, file: !1058, discriminator: 2)
!6038 = !DILocation(line: 449, column: 13, scope: !6037)
!6039 = distinct !{!6039, !6040}
!6040 = !DILocation(line: 449, column: 13, scope: !5275)
!6041 = !DILocation(line: 458, column: 13, scope: !5275)
!6042 = !DILocation(line: 458, column: 22, scope: !5275)
!6043 = !DILocation(line: 458, column: 31, scope: !5275)
!6044 = !DILocation(line: 458, column: 29, scope: !5275)
!6045 = !DILocation(line: 458, column: 29, scope: !5378)
!6046 = !DILocation(line: 459, column: 38, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !5275, file: !1058, line: 459, column: 13)
!6048 = !DILocation(line: 459, column: 22, scope: !6047)
!6049 = !DILocation(line: 459, column: 27, scope: !6047)
!6050 = !DILocation(line: 459, column: 43, scope: !6047)
!6051 = !DILocation(line: 459, column: 48, scope: !6047)
!6052 = !DILocation(line: 459, column: 41, scope: !6047)
!6053 = !DILocation(line: 459, column: 20, scope: !6047)
!6054 = !DILocation(line: 459, column: 18, scope: !6047)
!6055 = !DILocation(line: 459, column: 55, scope: !6056)
!6056 = !DILexicalBlockFile(scope: !6057, file: !1058, discriminator: 1)
!6057 = distinct !DILexicalBlock(scope: !6047, file: !1058, line: 459, column: 13)
!6058 = !DILocation(line: 459, column: 75, scope: !6056)
!6059 = !DILocation(line: 459, column: 77, scope: !6056)
!6060 = !DILocation(line: 459, column: 59, scope: !6056)
!6061 = !DILocation(line: 459, column: 64, scope: !6056)
!6062 = !DILocation(line: 459, column: 84, scope: !6056)
!6063 = !DILocation(line: 459, column: 89, scope: !6056)
!6064 = !DILocation(line: 459, column: 82, scope: !6056)
!6065 = !DILocation(line: 459, column: 57, scope: !6056)
!6066 = !DILocation(line: 459, column: 13, scope: !6056)
!6067 = !DILocation(line: 460, column: 17, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6057, file: !1058, line: 459, column: 101)
!6069 = !DILocation(line: 460, column: 36, scope: !6068)
!6070 = !DILocation(line: 460, column: 65, scope: !6068)
!6071 = !DILocation(line: 460, column: 44, scope: !6068)
!6072 = !DILocation(line: 460, column: 62, scope: !6068)
!6073 = !DILocation(line: 460, column: 49, scope: !6068)
!6074 = !DILocation(line: 460, column: 26, scope: !6068)
!6075 = !DILocation(line: 460, column: 26, scope: !6076)
!6076 = !DILexicalBlockFile(scope: !6068, file: !1058, discriminator: 1)
!6077 = !DILocation(line: 461, column: 17, scope: !6068)
!6078 = !DILocation(line: 461, column: 36, scope: !6068)
!6079 = !DILocation(line: 463, column: 58, scope: !6068)
!6080 = !DILocation(line: 463, column: 43, scope: !6068)
!6081 = !DILocation(line: 463, column: 55, scope: !6068)
!6082 = !DILocation(line: 463, column: 48, scope: !6068)
!6083 = !DILocation(line: 464, column: 56, scope: !6068)
!6084 = !DILocation(line: 464, column: 43, scope: !6068)
!6085 = !DILocation(line: 464, column: 53, scope: !6068)
!6086 = !DILocation(line: 464, column: 48, scope: !6068)
!6087 = !DILocation(line: 463, column: 33, scope: !6068)
!6088 = !DILocation(line: 465, column: 46, scope: !6068)
!6089 = !DILocation(line: 465, column: 33, scope: !6068)
!6090 = !DILocation(line: 465, column: 43, scope: !6068)
!6091 = !DILocation(line: 465, column: 38, scope: !6068)
!6092 = !DILocation(line: 462, column: 29, scope: !6068)
!6093 = !DILocation(line: 461, column: 26, scope: !6068)
!6094 = !DILocation(line: 461, column: 26, scope: !6076)
!6095 = !DILocation(line: 466, column: 17, scope: !6068)
!6096 = !DILocation(line: 466, column: 36, scope: !6068)
!6097 = !DILocation(line: 467, column: 51, scope: !6068)
!6098 = !DILocation(line: 467, column: 39, scope: !6068)
!6099 = !DILocation(line: 467, column: 48, scope: !6068)
!6100 = !DILocation(line: 467, column: 44, scope: !6068)
!6101 = !DILocation(line: 467, column: 67, scope: !6068)
!6102 = !DILocation(line: 467, column: 55, scope: !6068)
!6103 = !DILocation(line: 467, column: 64, scope: !6068)
!6104 = !DILocation(line: 467, column: 60, scope: !6068)
!6105 = !DILocation(line: 467, column: 29, scope: !6068)
!6106 = !DILocation(line: 466, column: 26, scope: !6068)
!6107 = !DILocation(line: 466, column: 26, scope: !6076)
!6108 = !DILocation(line: 468, column: 21, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6068, file: !1058, line: 468, column: 21)
!6110 = !DILocation(line: 468, column: 27, scope: !6109)
!6111 = !DILocation(line: 468, column: 43, scope: !6112)
!6112 = !DILexicalBlockFile(scope: !6109, file: !1058, discriminator: 1)
!6113 = !DILocation(line: 468, column: 31, scope: !6112)
!6114 = !DILocation(line: 468, column: 40, scope: !6112)
!6115 = !DILocation(line: 468, column: 36, scope: !6112)
!6116 = !DILocation(line: 468, column: 46, scope: !6112)
!6117 = !DILocation(line: 468, column: 21, scope: !6112)
!6118 = !DILocation(line: 469, column: 19, scope: !6109)
!6119 = !DILocation(line: 469, column: 38, scope: !6109)
!6120 = !DILocation(line: 470, column: 55, scope: !6109)
!6121 = !DILocation(line: 470, column: 43, scope: !6109)
!6122 = !DILocation(line: 470, column: 52, scope: !6109)
!6123 = !DILocation(line: 470, column: 48, scope: !6109)
!6124 = !DILocation(line: 470, column: 71, scope: !6109)
!6125 = !DILocation(line: 470, column: 59, scope: !6109)
!6126 = !DILocation(line: 470, column: 68, scope: !6109)
!6127 = !DILocation(line: 470, column: 64, scope: !6109)
!6128 = !DILocation(line: 470, column: 33, scope: !6109)
!6129 = !DILocation(line: 469, column: 28, scope: !6109)
!6130 = !DILocation(line: 469, column: 28, scope: !6112)
!6131 = !DILocation(line: 471, column: 13, scope: !6068)
!6132 = !DILocation(line: 459, column: 97, scope: !6133)
!6133 = !DILexicalBlockFile(scope: !6057, file: !1058, discriminator: 2)
!6134 = !DILocation(line: 459, column: 13, scope: !6133)
!6135 = distinct !{!6135, !6136}
!6136 = !DILocation(line: 459, column: 13, scope: !5275)
!6137 = !DILocation(line: 474, column: 58, scope: !5275)
!6138 = !DILocation(line: 474, column: 33, scope: !5275)
!6139 = !DILocation(line: 475, column: 58, scope: !5275)
!6140 = !DILocation(line: 475, column: 33, scope: !5275)
!6141 = !DILocation(line: 473, column: 29, scope: !5275)
!6142 = !DILocation(line: 472, column: 26, scope: !5275)
!6143 = !DILocation(line: 211, column: 13, scope: !5422, inlinedAt: !5274)
!6144 = !DILocation(line: 211, column: 18, scope: !5422, inlinedAt: !5274)
!6145 = !DILocation(line: 211, column: 9, scope: !5270, inlinedAt: !5274)
!6146 = !DILocation(line: 212, column: 13, scope: !5422, inlinedAt: !5274)
!6147 = !DILocation(line: 212, column: 17, scope: !5422, inlinedAt: !5274)
!6148 = !DILocation(line: 212, column: 9, scope: !5422, inlinedAt: !5274)
!6149 = !DILocation(line: 213, column: 18, scope: !5429, inlinedAt: !5274)
!6150 = !DILocation(line: 213, column: 23, scope: !5429, inlinedAt: !5274)
!6151 = !DILocation(line: 213, column: 14, scope: !5422, inlinedAt: !5274)
!6152 = !DILocation(line: 214, column: 9, scope: !5429, inlinedAt: !5274)
!6153 = !DILocation(line: 217, column: 25, scope: !5434, inlinedAt: !5274)
!6154 = !DILocation(line: 217, column: 30, scope: !5434, inlinedAt: !5274)
!6155 = !DILocation(line: 217, column: 44, scope: !5434, inlinedAt: !5274)
!6156 = !DILocation(line: 217, column: 18, scope: !5434, inlinedAt: !5274)
!6157 = !DILocation(line: 219, column: 19, scope: !5434, inlinedAt: !5274)
!6158 = !DILocation(line: 219, column: 24, scope: !5434, inlinedAt: !5274)
!6159 = !DILocation(line: 219, column: 13, scope: !5434, inlinedAt: !5274)
!6160 = !DILocation(line: 220, column: 50, scope: !5434, inlinedAt: !5274)
!6161 = !DILocation(line: 220, column: 36, scope: !5434, inlinedAt: !5274)
!6162 = !DILocation(line: 220, column: 27, scope: !5434, inlinedAt: !5274)
!6163 = !DILocation(line: 220, column: 74, scope: !5434, inlinedAt: !5274)
!6164 = !DILocation(line: 220, column: 72, scope: !5434, inlinedAt: !5274)
!6165 = !DILocation(line: 220, column: 62, scope: !5434, inlinedAt: !5274)
!6166 = !DILocation(line: 220, column: 60, scope: !5434, inlinedAt: !5274)
!6167 = !DILocation(line: 221, column: 51, scope: !5434, inlinedAt: !5274)
!6168 = !DILocation(line: 221, column: 60, scope: !5434, inlinedAt: !5274)
!6169 = !DILocation(line: 221, column: 37, scope: !5434, inlinedAt: !5274)
!6170 = !DILocation(line: 221, column: 28, scope: !5434, inlinedAt: !5274)
!6171 = !DILocation(line: 221, column: 67, scope: !5434, inlinedAt: !5274)
!6172 = !DILocation(line: 221, column: 65, scope: !5434, inlinedAt: !5274)
!6173 = !DILocation(line: 220, column: 79, scope: !5434, inlinedAt: !5274)
!6174 = !DILocation(line: 221, column: 71, scope: !5434, inlinedAt: !5274)
!6175 = !DILocation(line: 222, column: 37, scope: !5434, inlinedAt: !5274)
!6176 = !DILocation(line: 220, column: 20, scope: !5434, inlinedAt: !5274)
!6177 = !DILocation(line: 220, column: 13, scope: !5434, inlinedAt: !5274)
!6178 = !DILocation(line: 220, column: 18, scope: !5434, inlinedAt: !5274)
!6179 = !DILocation(line: 223, column: 61, scope: !5434, inlinedAt: !5274)
!6180 = !DILocation(line: 223, column: 65, scope: !5434, inlinedAt: !5274)
!6181 = !DILocation(line: 223, column: 36, scope: !5434, inlinedAt: !5274)
!6182 = !DILocation(line: 223, column: 27, scope: !5434, inlinedAt: !5274)
!6183 = !DILocation(line: 223, column: 76, scope: !5434, inlinedAt: !5274)
!6184 = !DILocation(line: 223, column: 72, scope: !5434, inlinedAt: !5274)
!6185 = !DILocation(line: 223, column: 70, scope: !5434, inlinedAt: !5274)
!6186 = !DILocation(line: 223, column: 81, scope: !5434, inlinedAt: !5274)
!6187 = !DILocation(line: 224, column: 39, scope: !5434, inlinedAt: !5274)
!6188 = !DILocation(line: 223, column: 20, scope: !5434, inlinedAt: !5274)
!6189 = !DILocation(line: 223, column: 13, scope: !5434, inlinedAt: !5274)
!6190 = !DILocation(line: 223, column: 18, scope: !5434, inlinedAt: !5274)
!6191 = !DILocation(line: 226, column: 17, scope: !5473, inlinedAt: !5274)
!6192 = !DILocation(line: 226, column: 22, scope: !5473, inlinedAt: !5274)
!6193 = !DILocation(line: 226, column: 13, scope: !5434, inlinedAt: !5274)
!6194 = !DILocation(line: 227, column: 17, scope: !5473, inlinedAt: !5274)
!6195 = !DILocation(line: 227, column: 21, scope: !5473, inlinedAt: !5274)
!6196 = !DILocation(line: 227, column: 13, scope: !5473, inlinedAt: !5274)
!6197 = !DILocation(line: 229, column: 17, scope: !5473, inlinedAt: !5274)
!6198 = !DILocation(line: 229, column: 22, scope: !5473, inlinedAt: !5274)
!6199 = !DILocation(line: 231, column: 24, scope: !5434, inlinedAt: !5274)
!6200 = !DILocation(line: 231, column: 28, scope: !5434, inlinedAt: !5274)
!6201 = !DILocation(line: 231, column: 34, scope: !5434, inlinedAt: !5274)
!6202 = !DILocation(line: 231, column: 13, scope: !5434, inlinedAt: !5274)
!6203 = !DILocation(line: 231, column: 17, scope: !5434, inlinedAt: !5274)
!6204 = !DILocation(line: 234, column: 12, scope: !5270, inlinedAt: !5274)
!6205 = !DILocation(line: 234, column: 5, scope: !5270, inlinedAt: !5274)
!6206 = !DILocation(line: 472, column: 26, scope: !5378)
!6207 = !DILocation(line: 476, column: 17, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !5275, file: !1058, line: 476, column: 17)
!6209 = !DILocation(line: 476, column: 17, scope: !5275)
!6210 = !DILocation(line: 477, column: 28, scope: !6208)
!6211 = !DILocation(line: 477, column: 15, scope: !6208)
!6212 = !DILocation(line: 479, column: 38, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !5275, file: !1058, line: 479, column: 13)
!6214 = !DILocation(line: 479, column: 22, scope: !6213)
!6215 = !DILocation(line: 479, column: 27, scope: !6213)
!6216 = !DILocation(line: 479, column: 43, scope: !6213)
!6217 = !DILocation(line: 479, column: 48, scope: !6213)
!6218 = !DILocation(line: 479, column: 41, scope: !6213)
!6219 = !DILocation(line: 479, column: 20, scope: !6213)
!6220 = !DILocation(line: 479, column: 18, scope: !6213)
!6221 = !DILocation(line: 479, column: 55, scope: !6222)
!6222 = !DILexicalBlockFile(scope: !6223, file: !1058, discriminator: 1)
!6223 = distinct !DILexicalBlock(scope: !6213, file: !1058, line: 479, column: 13)
!6224 = !DILocation(line: 479, column: 75, scope: !6222)
!6225 = !DILocation(line: 479, column: 77, scope: !6222)
!6226 = !DILocation(line: 479, column: 59, scope: !6222)
!6227 = !DILocation(line: 479, column: 64, scope: !6222)
!6228 = !DILocation(line: 479, column: 84, scope: !6222)
!6229 = !DILocation(line: 479, column: 89, scope: !6222)
!6230 = !DILocation(line: 479, column: 82, scope: !6222)
!6231 = !DILocation(line: 479, column: 57, scope: !6222)
!6232 = !DILocation(line: 479, column: 13, scope: !6222)
!6233 = !DILocation(line: 480, column: 30, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6223, file: !1058, line: 479, column: 101)
!6235 = !DILocation(line: 480, column: 17, scope: !6234)
!6236 = !DILocation(line: 480, column: 27, scope: !6234)
!6237 = !DILocation(line: 480, column: 22, scope: !6234)
!6238 = !DILocation(line: 480, column: 58, scope: !6234)
!6239 = !DILocation(line: 480, column: 45, scope: !6234)
!6240 = !DILocation(line: 480, column: 55, scope: !6234)
!6241 = !DILocation(line: 480, column: 50, scope: !6234)
!6242 = !DILocation(line: 480, column: 35, scope: !6234)
!6243 = !DILocation(line: 480, column: 35, scope: !6244)
!6244 = !DILexicalBlockFile(scope: !6234, file: !1058, discriminator: 1)
!6245 = !DILocation(line: 481, column: 29, scope: !6234)
!6246 = !DILocation(line: 481, column: 17, scope: !6234)
!6247 = !DILocation(line: 481, column: 26, scope: !6234)
!6248 = !DILocation(line: 481, column: 22, scope: !6234)
!6249 = !DILocation(line: 481, column: 56, scope: !6234)
!6250 = !DILocation(line: 481, column: 44, scope: !6234)
!6251 = !DILocation(line: 481, column: 53, scope: !6234)
!6252 = !DILocation(line: 481, column: 49, scope: !6234)
!6253 = !DILocation(line: 481, column: 34, scope: !6234)
!6254 = !DILocation(line: 481, column: 34, scope: !6244)
!6255 = !DILocation(line: 482, column: 29, scope: !6234)
!6256 = !DILocation(line: 482, column: 17, scope: !6234)
!6257 = !DILocation(line: 482, column: 26, scope: !6234)
!6258 = !DILocation(line: 482, column: 22, scope: !6234)
!6259 = !DILocation(line: 482, column: 56, scope: !6234)
!6260 = !DILocation(line: 482, column: 44, scope: !6234)
!6261 = !DILocation(line: 482, column: 53, scope: !6234)
!6262 = !DILocation(line: 482, column: 49, scope: !6234)
!6263 = !DILocation(line: 482, column: 34, scope: !6234)
!6264 = !DILocation(line: 482, column: 34, scope: !6244)
!6265 = !DILocation(line: 483, column: 13, scope: !6234)
!6266 = !DILocation(line: 479, column: 97, scope: !6267)
!6267 = !DILexicalBlockFile(scope: !6223, file: !1058, discriminator: 2)
!6268 = !DILocation(line: 479, column: 13, scope: !6267)
!6269 = distinct !{!6269, !6270}
!6270 = !DILocation(line: 479, column: 13, scope: !5275)
!6271 = !DILocation(line: 484, column: 9, scope: !5275)
!6272 = !DILocation(line: 410, column: 38, scope: !6273)
!6273 = !DILexicalBlockFile(scope: !5276, file: !1058, discriminator: 2)
!6274 = !DILocation(line: 410, column: 9, scope: !6273)
!6275 = distinct !{!6275, !6276}
!6276 = !DILocation(line: 410, column: 9, scope: !5278)
!6277 = !DILocation(line: 485, column: 5, scope: !5278)
!6278 = !DILocation(line: 408, column: 43, scope: !6279)
!6279 = !DILexicalBlockFile(scope: !5279, file: !1058, discriminator: 2)
!6280 = !DILocation(line: 408, column: 5, scope: !6279)
!6281 = distinct !{!6281, !6282}
!6282 = !DILocation(line: 408, column: 5, scope: !2551)
!6283 = !DILocation(line: 486, column: 1, scope: !2551)
!6284 = distinct !DISubprogram(name: "sbr_qmf_synthesis", scope: !1003, file: !1003, line: 1214, type: !6285, isLocal: true, isDefinition: true, scopeLine: 1223, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!6285 = !DISubroutineType(types: !6286)
!6286 = !{null, !4313, !2525, !2410, !955, !1339, !6287, !955, !1798, !1016}
!6287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6288, size: 64, align: 64)
!6288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 2048, align: 32, elements: !2243)
!6289 = !DILocalVariable(name: "mdct", arg: 1, scope: !6284, file: !1003, line: 1214, type: !4313)
!6290 = !DILocation(line: 1214, column: 43, scope: !6284)
!6291 = !DILocalVariable(name: "sbrdsp", arg: 2, scope: !6284, file: !1003, line: 1216, type: !2525)
!6292 = !DILocation(line: 1216, column: 46, scope: !6284)
!6293 = !DILocalVariable(name: "dsp", arg: 3, scope: !6284, file: !1003, line: 1216, type: !2410)
!6294 = !DILocation(line: 1216, column: 73, scope: !6284)
!6295 = !DILocalVariable(name: "out", arg: 4, scope: !6284, file: !1003, line: 1220, type: !955)
!6296 = !DILocation(line: 1220, column: 41, scope: !6284)
!6297 = !DILocalVariable(name: "X", arg: 5, scope: !6284, file: !1003, line: 1220, type: !1339)
!6298 = !DILocation(line: 1220, column: 55, scope: !6284)
!6299 = !DILocalVariable(name: "mdct_buf", arg: 6, scope: !6284, file: !1003, line: 1221, type: !6287)
!6300 = !DILocation(line: 1221, column: 40, scope: !6284)
!6301 = !DILocalVariable(name: "v0", arg: 7, scope: !6284, file: !1003, line: 1222, type: !955)
!6302 = !DILocation(line: 1222, column: 41, scope: !6284)
!6303 = !DILocalVariable(name: "v_off", arg: 8, scope: !6284, file: !1003, line: 1222, type: !1798)
!6304 = !DILocation(line: 1222, column: 50, scope: !6284)
!6305 = !DILocalVariable(name: "div", arg: 9, scope: !6284, file: !1003, line: 1222, type: !1016)
!6306 = !DILocation(line: 1222, column: 76, scope: !6284)
!6307 = !DILocalVariable(name: "i", scope: !6284, file: !1003, line: 1224, type: !958)
!6308 = !DILocation(line: 1224, column: 9, scope: !6284)
!6309 = !DILocalVariable(name: "n", scope: !6284, file: !1003, line: 1224, type: !958)
!6310 = !DILocation(line: 1224, column: 12, scope: !6284)
!6311 = !DILocalVariable(name: "sbr_qmf_window", scope: !6284, file: !1003, line: 1225, type: !1353)
!6312 = !DILocation(line: 1225, column: 21, scope: !6284)
!6313 = !DILocation(line: 1225, column: 38, scope: !6284)
!6314 = !DILocalVariable(name: "step", scope: !6284, file: !1003, line: 1226, type: !1591)
!6315 = !DILocation(line: 1226, column: 15, scope: !6284)
!6316 = !DILocation(line: 1226, column: 29, scope: !6284)
!6317 = !DILocation(line: 1226, column: 26, scope: !6284)
!6318 = !DILocalVariable(name: "v", scope: !6284, file: !1003, line: 1227, type: !955)
!6319 = !DILocation(line: 1227, column: 15, scope: !6284)
!6320 = !DILocation(line: 1228, column: 12, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6284, file: !1003, line: 1228, column: 5)
!6322 = !DILocation(line: 1228, column: 10, scope: !6321)
!6323 = !DILocation(line: 1228, column: 17, scope: !6324)
!6324 = !DILexicalBlockFile(scope: !6325, file: !1003, discriminator: 1)
!6325 = distinct !DILexicalBlock(scope: !6321, file: !1003, line: 1228, column: 5)
!6326 = !DILocation(line: 1228, column: 19, scope: !6324)
!6327 = !DILocation(line: 1228, column: 5, scope: !6324)
!6328 = !DILocation(line: 1229, column: 14, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !1003, line: 1229, column: 13)
!6330 = distinct !DILexicalBlock(scope: !6325, file: !1003, line: 1228, column: 30)
!6331 = !DILocation(line: 1229, column: 13, scope: !6329)
!6332 = !DILocation(line: 1229, column: 22, scope: !6329)
!6333 = !DILocation(line: 1229, column: 20, scope: !6329)
!6334 = !DILocation(line: 1229, column: 13, scope: !6330)
!6335 = !DILocalVariable(name: "saved_samples", scope: !6336, file: !1003, line: 1230, type: !958)
!6336 = distinct !DILexicalBlock(scope: !6329, file: !1003, line: 1229, column: 28)
!6337 = !DILocation(line: 1230, column: 17, scope: !6336)
!6338 = !DILocation(line: 1230, column: 49, scope: !6336)
!6339 = !DILocation(line: 1230, column: 46, scope: !6336)
!6340 = !DILocation(line: 1231, column: 41, scope: !6336)
!6341 = !DILocation(line: 1231, column: 39, scope: !6336)
!6342 = !DILocation(line: 1231, column: 21, scope: !6336)
!6343 = !DILocation(line: 1231, column: 13, scope: !6336)
!6344 = !DILocation(line: 1231, column: 57, scope: !6336)
!6345 = !DILocation(line: 1231, column: 61, scope: !6336)
!6346 = !DILocation(line: 1231, column: 75, scope: !6336)
!6347 = !DILocation(line: 1232, column: 39, scope: !6336)
!6348 = !DILocation(line: 1232, column: 37, scope: !6336)
!6349 = !DILocation(line: 1232, column: 55, scope: !6336)
!6350 = !DILocation(line: 1232, column: 53, scope: !6336)
!6351 = !DILocation(line: 1232, column: 14, scope: !6336)
!6352 = !DILocation(line: 1232, column: 20, scope: !6336)
!6353 = !DILocation(line: 1233, column: 9, scope: !6336)
!6354 = !DILocation(line: 1234, column: 23, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6329, file: !1003, line: 1233, column: 16)
!6356 = !DILocation(line: 1234, column: 14, scope: !6355)
!6357 = !DILocation(line: 1234, column: 20, scope: !6355)
!6358 = !DILocation(line: 1236, column: 13, scope: !6330)
!6359 = !DILocation(line: 1236, column: 19, scope: !6330)
!6360 = !DILocation(line: 1236, column: 18, scope: !6330)
!6361 = !DILocation(line: 1236, column: 16, scope: !6330)
!6362 = !DILocation(line: 1236, column: 11, scope: !6330)
!6363 = !DILocation(line: 1237, column: 13, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6330, file: !1003, line: 1237, column: 13)
!6365 = !DILocation(line: 1237, column: 13, scope: !6330)
!6366 = !DILocation(line: 1238, column: 20, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6368, file: !1003, line: 1238, column: 13)
!6368 = distinct !DILexicalBlock(scope: !6364, file: !1003, line: 1237, column: 18)
!6369 = !DILocation(line: 1238, column: 18, scope: !6367)
!6370 = !DILocation(line: 1238, column: 25, scope: !6371)
!6371 = !DILexicalBlockFile(scope: !6372, file: !1003, discriminator: 1)
!6372 = distinct !DILexicalBlock(scope: !6367, file: !1003, line: 1238, column: 13)
!6373 = !DILocation(line: 1238, column: 27, scope: !6371)
!6374 = !DILocation(line: 1238, column: 13, scope: !6371)
!6375 = !DILocation(line: 1239, column: 40, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6372, file: !1003, line: 1238, column: 38)
!6377 = !DILocation(line: 1239, column: 32, scope: !6376)
!6378 = !DILocation(line: 1239, column: 37, scope: !6376)
!6379 = !DILocation(line: 1239, column: 31, scope: !6376)
!6380 = !DILocation(line: 1239, column: 26, scope: !6376)
!6381 = !DILocation(line: 1239, column: 17, scope: !6376)
!6382 = !DILocation(line: 1239, column: 22, scope: !6376)
!6383 = !DILocation(line: 1239, column: 29, scope: !6376)
!6384 = !DILocation(line: 1240, column: 44, scope: !6376)
!6385 = !DILocation(line: 1240, column: 43, scope: !6376)
!6386 = !DILocation(line: 1240, column: 33, scope: !6376)
!6387 = !DILocation(line: 1240, column: 38, scope: !6376)
!6388 = !DILocation(line: 1240, column: 28, scope: !6376)
!6389 = !DILocation(line: 1240, column: 27, scope: !6376)
!6390 = !DILocation(line: 1240, column: 17, scope: !6376)
!6391 = !DILocation(line: 1240, column: 22, scope: !6376)
!6392 = !DILocation(line: 1240, column: 31, scope: !6376)
!6393 = !DILocation(line: 1241, column: 13, scope: !6376)
!6394 = !DILocation(line: 1238, column: 34, scope: !6395)
!6395 = !DILexicalBlockFile(scope: !6372, file: !1003, discriminator: 2)
!6396 = !DILocation(line: 1238, column: 13, scope: !6395)
!6397 = distinct !{!6397, !6398}
!6398 = !DILocation(line: 1238, column: 13, scope: !6368)
!6399 = !DILocation(line: 1242, column: 13, scope: !6368)
!6400 = !DILocation(line: 1242, column: 19, scope: !6368)
!6401 = !DILocation(line: 1242, column: 30, scope: !6368)
!6402 = !DILocation(line: 1242, column: 36, scope: !6368)
!6403 = !DILocation(line: 1242, column: 54, scope: !6368)
!6404 = !DILocation(line: 1242, column: 49, scope: !6368)
!6405 = !DILocation(line: 1243, column: 13, scope: !6368)
!6406 = !DILocation(line: 1243, column: 21, scope: !6368)
!6407 = !DILocation(line: 1243, column: 35, scope: !6368)
!6408 = !DILocation(line: 1243, column: 38, scope: !6368)
!6409 = !DILocation(line: 1244, column: 9, scope: !6368)
!6410 = !DILocation(line: 1245, column: 13, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6364, file: !1003, line: 1244, column: 16)
!6412 = !DILocation(line: 1245, column: 21, scope: !6411)
!6413 = !DILocation(line: 1245, column: 37, scope: !6411)
!6414 = !DILocation(line: 1245, column: 32, scope: !6411)
!6415 = !DILocation(line: 1246, column: 13, scope: !6411)
!6416 = !DILocation(line: 1246, column: 19, scope: !6411)
!6417 = !DILocation(line: 1246, column: 30, scope: !6411)
!6418 = !DILocation(line: 1246, column: 36, scope: !6411)
!6419 = !DILocation(line: 1246, column: 54, scope: !6411)
!6420 = !DILocation(line: 1246, column: 49, scope: !6411)
!6421 = !DILocation(line: 1247, column: 13, scope: !6411)
!6422 = !DILocation(line: 1247, column: 19, scope: !6411)
!6423 = !DILocation(line: 1247, column: 30, scope: !6411)
!6424 = !DILocation(line: 1247, column: 36, scope: !6411)
!6425 = !DILocation(line: 1247, column: 54, scope: !6411)
!6426 = !DILocation(line: 1247, column: 49, scope: !6411)
!6427 = !DILocation(line: 1248, column: 13, scope: !6411)
!6428 = !DILocation(line: 1248, column: 21, scope: !6411)
!6429 = !DILocation(line: 1248, column: 36, scope: !6411)
!6430 = !DILocation(line: 1248, column: 39, scope: !6411)
!6431 = !DILocation(line: 1248, column: 52, scope: !6411)
!6432 = !DILocation(line: 1250, column: 9, scope: !6330)
!6433 = !DILocation(line: 1250, column: 14, scope: !6330)
!6434 = !DILocation(line: 1250, column: 27, scope: !6330)
!6435 = !DILocation(line: 1250, column: 32, scope: !6330)
!6436 = !DILocation(line: 1250, column: 36, scope: !6330)
!6437 = !DILocation(line: 1250, column: 59, scope: !6330)
!6438 = !DILocation(line: 1250, column: 56, scope: !6330)
!6439 = !DILocation(line: 1251, column: 9, scope: !6330)
!6440 = !DILocation(line: 1251, column: 14, scope: !6330)
!6441 = !DILocation(line: 1251, column: 30, scope: !6330)
!6442 = !DILocation(line: 1251, column: 35, scope: !6330)
!6443 = !DILocation(line: 1251, column: 48, scope: !6330)
!6444 = !DILocation(line: 1251, column: 45, scope: !6330)
!6445 = !DILocation(line: 1251, column: 37, scope: !6330)
!6446 = !DILocation(line: 1251, column: 54, scope: !6330)
!6447 = !DILocation(line: 1251, column: 79, scope: !6330)
!6448 = !DILocation(line: 1251, column: 76, scope: !6330)
!6449 = !DILocation(line: 1251, column: 69, scope: !6330)
!6450 = !DILocation(line: 1251, column: 85, scope: !6330)
!6451 = !DILocation(line: 1251, column: 97, scope: !6330)
!6452 = !DILocation(line: 1251, column: 94, scope: !6330)
!6453 = !DILocation(line: 1252, column: 9, scope: !6330)
!6454 = !DILocation(line: 1252, column: 14, scope: !6330)
!6455 = !DILocation(line: 1252, column: 30, scope: !6330)
!6456 = !DILocation(line: 1252, column: 35, scope: !6330)
!6457 = !DILocation(line: 1252, column: 48, scope: !6330)
!6458 = !DILocation(line: 1252, column: 45, scope: !6330)
!6459 = !DILocation(line: 1252, column: 37, scope: !6330)
!6460 = !DILocation(line: 1252, column: 54, scope: !6330)
!6461 = !DILocation(line: 1252, column: 79, scope: !6330)
!6462 = !DILocation(line: 1252, column: 76, scope: !6330)
!6463 = !DILocation(line: 1252, column: 69, scope: !6330)
!6464 = !DILocation(line: 1252, column: 85, scope: !6330)
!6465 = !DILocation(line: 1252, column: 97, scope: !6330)
!6466 = !DILocation(line: 1252, column: 94, scope: !6330)
!6467 = !DILocation(line: 1253, column: 9, scope: !6330)
!6468 = !DILocation(line: 1253, column: 14, scope: !6330)
!6469 = !DILocation(line: 1253, column: 30, scope: !6330)
!6470 = !DILocation(line: 1253, column: 35, scope: !6330)
!6471 = !DILocation(line: 1253, column: 48, scope: !6330)
!6472 = !DILocation(line: 1253, column: 45, scope: !6330)
!6473 = !DILocation(line: 1253, column: 37, scope: !6330)
!6474 = !DILocation(line: 1253, column: 54, scope: !6330)
!6475 = !DILocation(line: 1253, column: 79, scope: !6330)
!6476 = !DILocation(line: 1253, column: 76, scope: !6330)
!6477 = !DILocation(line: 1253, column: 69, scope: !6330)
!6478 = !DILocation(line: 1253, column: 85, scope: !6330)
!6479 = !DILocation(line: 1253, column: 97, scope: !6330)
!6480 = !DILocation(line: 1253, column: 94, scope: !6330)
!6481 = !DILocation(line: 1254, column: 9, scope: !6330)
!6482 = !DILocation(line: 1254, column: 14, scope: !6330)
!6483 = !DILocation(line: 1254, column: 30, scope: !6330)
!6484 = !DILocation(line: 1254, column: 35, scope: !6330)
!6485 = !DILocation(line: 1254, column: 48, scope: !6330)
!6486 = !DILocation(line: 1254, column: 45, scope: !6330)
!6487 = !DILocation(line: 1254, column: 37, scope: !6330)
!6488 = !DILocation(line: 1254, column: 54, scope: !6330)
!6489 = !DILocation(line: 1254, column: 79, scope: !6330)
!6490 = !DILocation(line: 1254, column: 76, scope: !6330)
!6491 = !DILocation(line: 1254, column: 69, scope: !6330)
!6492 = !DILocation(line: 1254, column: 85, scope: !6330)
!6493 = !DILocation(line: 1254, column: 97, scope: !6330)
!6494 = !DILocation(line: 1254, column: 94, scope: !6330)
!6495 = !DILocation(line: 1255, column: 9, scope: !6330)
!6496 = !DILocation(line: 1255, column: 14, scope: !6330)
!6497 = !DILocation(line: 1255, column: 30, scope: !6330)
!6498 = !DILocation(line: 1255, column: 35, scope: !6330)
!6499 = !DILocation(line: 1255, column: 48, scope: !6330)
!6500 = !DILocation(line: 1255, column: 45, scope: !6330)
!6501 = !DILocation(line: 1255, column: 37, scope: !6330)
!6502 = !DILocation(line: 1255, column: 54, scope: !6330)
!6503 = !DILocation(line: 1255, column: 79, scope: !6330)
!6504 = !DILocation(line: 1255, column: 76, scope: !6330)
!6505 = !DILocation(line: 1255, column: 69, scope: !6330)
!6506 = !DILocation(line: 1255, column: 85, scope: !6330)
!6507 = !DILocation(line: 1255, column: 97, scope: !6330)
!6508 = !DILocation(line: 1255, column: 94, scope: !6330)
!6509 = !DILocation(line: 1256, column: 9, scope: !6330)
!6510 = !DILocation(line: 1256, column: 14, scope: !6330)
!6511 = !DILocation(line: 1256, column: 30, scope: !6330)
!6512 = !DILocation(line: 1256, column: 35, scope: !6330)
!6513 = !DILocation(line: 1256, column: 48, scope: !6330)
!6514 = !DILocation(line: 1256, column: 45, scope: !6330)
!6515 = !DILocation(line: 1256, column: 37, scope: !6330)
!6516 = !DILocation(line: 1256, column: 54, scope: !6330)
!6517 = !DILocation(line: 1256, column: 79, scope: !6330)
!6518 = !DILocation(line: 1256, column: 76, scope: !6330)
!6519 = !DILocation(line: 1256, column: 69, scope: !6330)
!6520 = !DILocation(line: 1256, column: 85, scope: !6330)
!6521 = !DILocation(line: 1256, column: 97, scope: !6330)
!6522 = !DILocation(line: 1256, column: 94, scope: !6330)
!6523 = !DILocation(line: 1257, column: 9, scope: !6330)
!6524 = !DILocation(line: 1257, column: 14, scope: !6330)
!6525 = !DILocation(line: 1257, column: 30, scope: !6330)
!6526 = !DILocation(line: 1257, column: 35, scope: !6330)
!6527 = !DILocation(line: 1257, column: 48, scope: !6330)
!6528 = !DILocation(line: 1257, column: 45, scope: !6330)
!6529 = !DILocation(line: 1257, column: 37, scope: !6330)
!6530 = !DILocation(line: 1257, column: 54, scope: !6330)
!6531 = !DILocation(line: 1257, column: 79, scope: !6330)
!6532 = !DILocation(line: 1257, column: 76, scope: !6330)
!6533 = !DILocation(line: 1257, column: 69, scope: !6330)
!6534 = !DILocation(line: 1257, column: 85, scope: !6330)
!6535 = !DILocation(line: 1257, column: 97, scope: !6330)
!6536 = !DILocation(line: 1257, column: 94, scope: !6330)
!6537 = !DILocation(line: 1258, column: 9, scope: !6330)
!6538 = !DILocation(line: 1258, column: 14, scope: !6330)
!6539 = !DILocation(line: 1258, column: 30, scope: !6330)
!6540 = !DILocation(line: 1258, column: 35, scope: !6330)
!6541 = !DILocation(line: 1258, column: 48, scope: !6330)
!6542 = !DILocation(line: 1258, column: 45, scope: !6330)
!6543 = !DILocation(line: 1258, column: 37, scope: !6330)
!6544 = !DILocation(line: 1258, column: 54, scope: !6330)
!6545 = !DILocation(line: 1258, column: 79, scope: !6330)
!6546 = !DILocation(line: 1258, column: 76, scope: !6330)
!6547 = !DILocation(line: 1258, column: 69, scope: !6330)
!6548 = !DILocation(line: 1258, column: 85, scope: !6330)
!6549 = !DILocation(line: 1258, column: 97, scope: !6330)
!6550 = !DILocation(line: 1258, column: 94, scope: !6330)
!6551 = !DILocation(line: 1259, column: 9, scope: !6330)
!6552 = !DILocation(line: 1259, column: 14, scope: !6330)
!6553 = !DILocation(line: 1259, column: 30, scope: !6330)
!6554 = !DILocation(line: 1259, column: 35, scope: !6330)
!6555 = !DILocation(line: 1259, column: 48, scope: !6330)
!6556 = !DILocation(line: 1259, column: 45, scope: !6330)
!6557 = !DILocation(line: 1259, column: 37, scope: !6330)
!6558 = !DILocation(line: 1259, column: 54, scope: !6330)
!6559 = !DILocation(line: 1259, column: 79, scope: !6330)
!6560 = !DILocation(line: 1259, column: 76, scope: !6330)
!6561 = !DILocation(line: 1259, column: 69, scope: !6330)
!6562 = !DILocation(line: 1259, column: 85, scope: !6330)
!6563 = !DILocation(line: 1259, column: 97, scope: !6330)
!6564 = !DILocation(line: 1259, column: 94, scope: !6330)
!6565 = !DILocation(line: 1260, column: 22, scope: !6330)
!6566 = !DILocation(line: 1260, column: 19, scope: !6330)
!6567 = !DILocation(line: 1260, column: 13, scope: !6330)
!6568 = !DILocation(line: 1261, column: 5, scope: !6330)
!6569 = !DILocation(line: 1228, column: 26, scope: !6570)
!6570 = !DILexicalBlockFile(scope: !6325, file: !1003, discriminator: 2)
!6571 = !DILocation(line: 1228, column: 5, scope: !6570)
!6572 = distinct !{!6572, !6573}
!6573 = !DILocation(line: 1228, column: 5, scope: !6284)
!6574 = !DILocation(line: 1262, column: 1, scope: !6284)
!6575 = distinct !DISubprogram(name: "get_bits_count", scope: !2895, file: !2895, line: 219, type: !6576, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!6576 = !DISubroutineType(types: !6577)
!6577 = !{!958, !6578}
!6578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6579, size: 64, align: 64)
!6579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2894)
!6580 = !DILocalVariable(name: "s", arg: 1, scope: !6575, file: !2895, line: 219, type: !6578)
!6581 = !DILocation(line: 219, column: 55, scope: !6575)
!6582 = !DILocation(line: 224, column: 12, scope: !6575)
!6583 = !DILocation(line: 224, column: 15, scope: !6575)
!6584 = !DILocation(line: 224, column: 5, scope: !6575)
!6585 = distinct !DISubprogram(name: "get_bits", scope: !2895, file: !2895, line: 381, type: !6586, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!6586 = !DISubroutineType(types: !6587)
!6587 = !{!985, !2893, !958}
!6588 = !DILocalVariable(name: "x", arg: 1, scope: !6589, file: !6590, line: 66, type: !983)
!6589 = distinct !DISubprogram(name: "av_bswap32", scope: !6590, file: !6590, line: 66, type: !6591, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!6590 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6591 = !DISubroutineType(types: !6592)
!6592 = !{!983, !983}
!6593 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !6594)
!6594 = distinct !DILocation(line: 401, column: 16, scope: !6585)
!6595 = !DILocalVariable(name: "s", arg: 1, scope: !6585, file: !2895, line: 381, type: !2893)
!6596 = !DILocation(line: 381, column: 52, scope: !6585)
!6597 = !DILocalVariable(name: "n", arg: 2, scope: !6585, file: !2895, line: 381, type: !958)
!6598 = !DILocation(line: 381, column: 59, scope: !6585)
!6599 = !DILocalVariable(name: "tmp", scope: !6585, file: !2895, line: 383, type: !958)
!6600 = !DILocation(line: 383, column: 18, scope: !6585)
!6601 = !DILocalVariable(name: "re_index", scope: !6585, file: !2895, line: 399, type: !985)
!6602 = !DILocation(line: 399, column: 18, scope: !6585)
!6603 = !DILocation(line: 399, column: 30, scope: !6585)
!6604 = !DILocation(line: 399, column: 34, scope: !6585)
!6605 = !DILocalVariable(name: "re_cache", scope: !6585, file: !2895, line: 399, type: !985)
!6606 = !DILocation(line: 399, column: 78, scope: !6585)
!6607 = !DILocalVariable(name: "re_size_plus8", scope: !6585, file: !2895, line: 399, type: !985)
!6608 = !DILocation(line: 399, column: 101, scope: !6585)
!6609 = !DILocation(line: 399, column: 118, scope: !6585)
!6610 = !DILocation(line: 399, column: 122, scope: !6585)
!6611 = !DILocation(line: 401, column: 60, scope: !6585)
!6612 = !DILocation(line: 401, column: 64, scope: !6585)
!6613 = !DILocation(line: 401, column: 74, scope: !6585)
!6614 = !DILocation(line: 401, column: 83, scope: !6585)
!6615 = !DILocation(line: 401, column: 71, scope: !6585)
!6616 = !DILocation(line: 401, column: 92, scope: !6585)
!6617 = !DILocation(line: 401, column: 16, scope: !6585)
!6618 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !6594)
!6619 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !6594)
!6620 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !6594)
!6621 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !6594)
!6622 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !6594)
!6623 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !6594)
!6624 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !6594)
!6625 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !6594)
!6626 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !6594)
!6627 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !6594)
!6628 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !6594)
!6629 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !6594)
!6630 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !6594)
!6631 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !6594)
!6632 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !6594)
!6633 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !6594)
!6634 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !6594)
!6635 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !6594)
!6636 = !DILocation(line: 401, column: 100, scope: !6585)
!6637 = !DILocation(line: 401, column: 109, scope: !6585)
!6638 = !DILocation(line: 401, column: 96, scope: !6585)
!6639 = !DILocation(line: 401, column: 14, scope: !6585)
!6640 = !DILocation(line: 402, column: 21, scope: !6585)
!6641 = !DILocation(line: 402, column: 31, scope: !6585)
!6642 = !DILocation(line: 402, column: 11, scope: !6585)
!6643 = !DILocation(line: 402, column: 9, scope: !6585)
!6644 = !DILocation(line: 403, column: 18, scope: !6585)
!6645 = !DILocation(line: 403, column: 36, scope: !6585)
!6646 = !DILocation(line: 403, column: 48, scope: !6585)
!6647 = !DILocation(line: 403, column: 45, scope: !6585)
!6648 = !DILocation(line: 403, column: 33, scope: !6585)
!6649 = !DILocation(line: 403, column: 17, scope: !6585)
!6650 = !DILocation(line: 403, column: 55, scope: !6651)
!6651 = !DILexicalBlockFile(scope: !6585, file: !2895, discriminator: 1)
!6652 = !DILocation(line: 403, column: 67, scope: !6651)
!6653 = !DILocation(line: 403, column: 64, scope: !6651)
!6654 = !DILocation(line: 403, column: 17, scope: !6651)
!6655 = !DILocation(line: 403, column: 74, scope: !6656)
!6656 = !DILexicalBlockFile(scope: !6585, file: !2895, discriminator: 2)
!6657 = !DILocation(line: 403, column: 17, scope: !6656)
!6658 = !DILocation(line: 403, column: 17, scope: !6659)
!6659 = !DILexicalBlockFile(scope: !6585, file: !2895, discriminator: 3)
!6660 = !DILocation(line: 403, column: 14, scope: !6659)
!6661 = !DILocation(line: 404, column: 18, scope: !6585)
!6662 = !DILocation(line: 404, column: 6, scope: !6585)
!6663 = !DILocation(line: 404, column: 10, scope: !6585)
!6664 = !DILocation(line: 404, column: 16, scope: !6585)
!6665 = !DILocation(line: 406, column: 12, scope: !6585)
!6666 = !DILocation(line: 406, column: 5, scope: !6585)
!6667 = !DILocalVariable(name: "sbr", arg: 1, scope: !1122, file: !1003, line: 136, type: !1125)
!6668 = !DILocation(line: 136, column: 58, scope: !1122)
!6669 = !DILocalVariable(name: "k", scope: !1122, file: !1003, line: 138, type: !958)
!6670 = !DILocation(line: 138, column: 9, scope: !1122)
!6671 = !DILocation(line: 139, column: 9, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !1122, file: !1003, line: 139, column: 9)
!6673 = !DILocation(line: 139, column: 14, scope: !6672)
!6674 = !DILocation(line: 139, column: 31, scope: !6672)
!6675 = !DILocation(line: 139, column: 9, scope: !1122)
!6676 = !DILocalVariable(name: "lim_bands_per_octave_warped", scope: !6677, file: !1003, line: 143, type: !961)
!6677 = distinct !DILexicalBlock(scope: !6672, file: !1003, line: 139, column: 36)
!6678 = !DILocation(line: 143, column: 24, scope: !6677)
!6679 = !DILocation(line: 143, column: 67, scope: !6677)
!6680 = !DILocation(line: 143, column: 72, scope: !6677)
!6681 = !DILocation(line: 143, column: 89, scope: !6677)
!6682 = !DILocation(line: 143, column: 54, scope: !6677)
!6683 = !DILocalVariable(name: "patch_borders", scope: !6677, file: !1003, line: 144, type: !6684)
!6684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 112, align: 16, elements: !1171)
!6685 = !DILocation(line: 144, column: 17, scope: !6677)
!6686 = !DILocalVariable(name: "in", scope: !6677, file: !1003, line: 145, type: !1413)
!6687 = !DILocation(line: 145, column: 19, scope: !6677)
!6688 = !DILocation(line: 145, column: 24, scope: !6677)
!6689 = !DILocation(line: 145, column: 29, scope: !6677)
!6690 = !DILocation(line: 145, column: 40, scope: !6677)
!6691 = !DILocalVariable(name: "out", scope: !6677, file: !1003, line: 145, type: !1413)
!6692 = !DILocation(line: 145, column: 46, scope: !6677)
!6693 = !DILocation(line: 145, column: 52, scope: !6677)
!6694 = !DILocation(line: 145, column: 57, scope: !6677)
!6695 = !DILocation(line: 147, column: 28, scope: !6677)
!6696 = !DILocation(line: 147, column: 33, scope: !6677)
!6697 = !DILocation(line: 147, column: 9, scope: !6677)
!6698 = !DILocation(line: 147, column: 26, scope: !6677)
!6699 = !DILocation(line: 148, column: 16, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6677, file: !1003, line: 148, column: 9)
!6701 = !DILocation(line: 148, column: 14, scope: !6700)
!6702 = !DILocation(line: 148, column: 21, scope: !6703)
!6703 = !DILexicalBlockFile(scope: !6704, file: !1003, discriminator: 1)
!6704 = distinct !DILexicalBlock(scope: !6700, file: !1003, line: 148, column: 9)
!6705 = !DILocation(line: 148, column: 26, scope: !6703)
!6706 = !DILocation(line: 148, column: 31, scope: !6703)
!6707 = !DILocation(line: 148, column: 23, scope: !6703)
!6708 = !DILocation(line: 148, column: 9, scope: !6703)
!6709 = !DILocation(line: 149, column: 46, scope: !6704)
!6710 = !DILocation(line: 149, column: 47, scope: !6704)
!6711 = !DILocation(line: 149, column: 32, scope: !6704)
!6712 = !DILocation(line: 149, column: 77, scope: !6704)
!6713 = !DILocation(line: 149, column: 78, scope: !6704)
!6714 = !DILocation(line: 149, column: 53, scope: !6704)
!6715 = !DILocation(line: 149, column: 58, scope: !6704)
!6716 = !DILocation(line: 149, column: 51, scope: !6704)
!6717 = !DILocation(line: 149, column: 27, scope: !6704)
!6718 = !DILocation(line: 149, column: 13, scope: !6704)
!6719 = !DILocation(line: 149, column: 30, scope: !6704)
!6720 = !DILocation(line: 148, column: 45, scope: !6721)
!6721 = !DILexicalBlockFile(scope: !6704, file: !1003, discriminator: 2)
!6722 = !DILocation(line: 148, column: 9, scope: !6721)
!6723 = distinct !{!6723, !6724}
!6724 = !DILocation(line: 148, column: 9, scope: !6677)
!6725 = !DILocation(line: 151, column: 16, scope: !6677)
!6726 = !DILocation(line: 151, column: 21, scope: !6677)
!6727 = !DILocation(line: 151, column: 9, scope: !6677)
!6728 = !DILocation(line: 151, column: 33, scope: !6677)
!6729 = !DILocation(line: 151, column: 38, scope: !6677)
!6730 = !DILocation(line: 152, column: 17, scope: !6677)
!6731 = !DILocation(line: 152, column: 22, scope: !6677)
!6732 = !DILocation(line: 152, column: 27, scope: !6677)
!6733 = !DILocation(line: 152, column: 16, scope: !6677)
!6734 = !DILocation(line: 152, column: 32, scope: !6677)
!6735 = !DILocation(line: 153, column: 13, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6677, file: !1003, line: 153, column: 13)
!6737 = !DILocation(line: 153, column: 18, scope: !6736)
!6738 = !DILocation(line: 153, column: 30, scope: !6736)
!6739 = !DILocation(line: 153, column: 13, scope: !6677)
!6740 = !DILocation(line: 154, column: 20, scope: !6736)
!6741 = !DILocation(line: 154, column: 25, scope: !6736)
!6742 = !DILocation(line: 154, column: 38, scope: !6736)
!6743 = !DILocation(line: 154, column: 43, scope: !6736)
!6744 = !DILocation(line: 154, column: 36, scope: !6736)
!6745 = !DILocation(line: 154, column: 48, scope: !6736)
!6746 = !DILocation(line: 154, column: 13, scope: !6736)
!6747 = !DILocation(line: 154, column: 53, scope: !6736)
!6748 = !DILocation(line: 154, column: 67, scope: !6736)
!6749 = !DILocation(line: 155, column: 21, scope: !6736)
!6750 = !DILocation(line: 155, column: 26, scope: !6736)
!6751 = !DILocation(line: 155, column: 38, scope: !6736)
!6752 = !DILocation(line: 155, column: 20, scope: !6736)
!6753 = !DILocation(line: 155, column: 43, scope: !6736)
!6754 = !DILocation(line: 157, column: 9, scope: !6677)
!6755 = distinct !{!6755, !6754}
!6756 = !DILocalVariable(name: "stack", scope: !6757, file: !1003, line: 157, type: !6758)
!6757 = distinct !DILexicalBlock(scope: !6677, file: !1003, line: 157, column: 12)
!6758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 8192, align: 64, elements: !975)
!6759 = !DILocation(line: 157, column: 20, scope: !6757)
!6760 = !DILocalVariable(name: "sp", scope: !6757, file: !1003, line: 157, type: !958)
!6761 = !DILocation(line: 157, column: 38, scope: !6757)
!6762 = !DILocation(line: 157, column: 38, scope: !6763)
!6763 = !DILexicalBlockFile(scope: !6757, file: !1003, discriminator: 1)
!6764 = !DILocation(line: 157, column: 59, scope: !6763)
!6765 = !DILocation(line: 157, column: 64, scope: !6763)
!6766 = !DILocation(line: 157, column: 45, scope: !6763)
!6767 = !DILocation(line: 157, column: 57, scope: !6763)
!6768 = !DILocation(line: 157, column: 91, scope: !6763)
!6769 = !DILocation(line: 157, column: 96, scope: !6763)
!6770 = !DILocation(line: 157, column: 90, scope: !6763)
!6771 = !DILocation(line: 157, column: 109, scope: !6763)
!6772 = !DILocation(line: 157, column: 114, scope: !6763)
!6773 = !DILocation(line: 157, column: 128, scope: !6763)
!6774 = !DILocation(line: 157, column: 133, scope: !6763)
!6775 = !DILocation(line: 157, column: 126, scope: !6763)
!6776 = !DILocation(line: 157, column: 107, scope: !6763)
!6777 = !DILocation(line: 157, column: 138, scope: !6763)
!6778 = !DILocation(line: 157, column: 76, scope: !6763)
!6779 = !DILocation(line: 157, column: 88, scope: !6763)
!6780 = !DILocation(line: 157, column: 142, scope: !6763)
!6781 = !DILocation(line: 157, column: 148, scope: !6782)
!6782 = !DILexicalBlockFile(scope: !6757, file: !1003, discriminator: 2)
!6783 = !DILocation(line: 157, column: 142, scope: !6782)
!6784 = !DILocalVariable(name: "start", scope: !6785, file: !1003, line: 157, type: !1413)
!6785 = distinct !DILexicalBlock(scope: !6757, file: !1003, line: 157, column: 151)
!6786 = !DILocation(line: 157, column: 163, scope: !6785)
!6787 = !DILocation(line: 157, column: 176, scope: !6788)
!6788 = !DILexicalBlockFile(scope: !6785, file: !1003, discriminator: 3)
!6789 = !DILocation(line: 157, column: 170, scope: !6788)
!6790 = !DILocation(line: 157, column: 163, scope: !6788)
!6791 = !DILocalVariable(name: "end", scope: !6785, file: !1003, line: 157, type: !1413)
!6792 = !DILocation(line: 157, column: 196, scope: !6785)
!6793 = !DILocation(line: 157, column: 209, scope: !6788)
!6794 = !DILocation(line: 157, column: 202, scope: !6788)
!6795 = !DILocation(line: 157, column: 196, scope: !6788)
!6796 = !DILocation(line: 157, column: 217, scope: !6788)
!6797 = !DILocation(line: 157, column: 223, scope: !6798)
!6798 = !DILexicalBlockFile(scope: !6785, file: !1003, discriminator: 4)
!6799 = !DILocation(line: 157, column: 231, scope: !6798)
!6800 = !DILocation(line: 157, column: 229, scope: !6798)
!6801 = !DILocation(line: 157, column: 217, scope: !6798)
!6802 = !DILocation(line: 157, column: 240, scope: !6803)
!6803 = !DILexicalBlockFile(scope: !6804, file: !1003, discriminator: 5)
!6804 = distinct !DILexicalBlock(scope: !6805, file: !1003, line: 157, column: 240)
!6805 = distinct !DILexicalBlock(scope: !6785, file: !1003, line: 157, column: 235)
!6806 = !DILocation(line: 157, column: 248, scope: !6803)
!6807 = !DILocation(line: 157, column: 251, scope: !6803)
!6808 = !DILocation(line: 157, column: 246, scope: !6803)
!6809 = !DILocalVariable(name: "checksort", scope: !6810, file: !1003, line: 157, type: !958)
!6810 = distinct !DILexicalBlock(scope: !6804, file: !1003, line: 157, column: 255)
!6811 = !DILocation(line: 157, column: 261, scope: !6810)
!6812 = !DILocation(line: 157, column: 261, scope: !6813)
!6813 = !DILexicalBlockFile(scope: !6810, file: !1003, discriminator: 6)
!6814 = !DILocalVariable(name: "right", scope: !6810, file: !1003, line: 157, type: !1413)
!6815 = !DILocation(line: 157, column: 284, scope: !6810)
!6816 = !DILocation(line: 157, column: 292, scope: !6813)
!6817 = !DILocation(line: 157, column: 295, scope: !6813)
!6818 = !DILocation(line: 157, column: 284, scope: !6813)
!6819 = !DILocalVariable(name: "left", scope: !6810, file: !1003, line: 157, type: !1413)
!6820 = !DILocation(line: 157, column: 309, scope: !6810)
!6821 = !DILocation(line: 157, column: 316, scope: !6813)
!6822 = !DILocation(line: 157, column: 321, scope: !6813)
!6823 = !DILocation(line: 157, column: 309, scope: !6813)
!6824 = !DILocalVariable(name: "mid", scope: !6810, file: !1003, line: 157, type: !1413)
!6825 = !DILocation(line: 157, column: 335, scope: !6810)
!6826 = !DILocation(line: 157, column: 341, scope: !6813)
!6827 = !DILocation(line: 157, column: 351, scope: !6813)
!6828 = !DILocation(line: 157, column: 355, scope: !6813)
!6829 = !DILocation(line: 157, column: 354, scope: !6813)
!6830 = !DILocation(line: 157, column: 361, scope: !6813)
!6831 = !DILocation(line: 157, column: 347, scope: !6813)
!6832 = !DILocation(line: 157, column: 335, scope: !6813)
!6833 = !DILocation(line: 157, column: 402, scope: !6813)
!6834 = !DILocation(line: 157, column: 409, scope: !6813)
!6835 = !DILocation(line: 157, column: 370, scope: !6813)
!6836 = !DILocation(line: 157, column: 414, scope: !6813)
!6837 = !DILocation(line: 157, column: 457, scope: !6838)
!6838 = !DILexicalBlockFile(scope: !6839, file: !1003, discriminator: 7)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !1003, line: 157, column: 424)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !1003, line: 157, column: 419)
!6841 = distinct !DILexicalBlock(scope: !6810, file: !1003, line: 157, column: 370)
!6842 = !DILocation(line: 157, column: 462, scope: !6838)
!6843 = !DILocation(line: 157, column: 424, scope: !6838)
!6844 = !DILocation(line: 157, column: 467, scope: !6838)
!6845 = !DILocation(line: 157, column: 472, scope: !6846)
!6846 = !DILexicalBlockFile(scope: !6839, file: !1003, discriminator: 8)
!6847 = distinct !{!6847, !6848}
!6848 = !DILocation(line: 157, column: 472, scope: !6839)
!6849 = !DILocalVariable(name: "SWAP_tmp", scope: !6850, file: !1003, line: 157, type: !1099)
!6850 = distinct !DILexicalBlock(scope: !6839, file: !1003, line: 157, column: 474)
!6851 = !DILocation(line: 157, column: 484, scope: !6850)
!6852 = !DILocation(line: 157, column: 495, scope: !6853)
!6853 = !DILexicalBlockFile(scope: !6850, file: !1003, discriminator: 9)
!6854 = !DILocation(line: 157, column: 494, scope: !6853)
!6855 = !DILocation(line: 157, column: 484, scope: !6853)
!6856 = !DILocation(line: 157, column: 507, scope: !6853)
!6857 = !DILocation(line: 157, column: 506, scope: !6853)
!6858 = !DILocation(line: 157, column: 501, scope: !6853)
!6859 = !DILocation(line: 157, column: 504, scope: !6853)
!6860 = !DILocation(line: 157, column: 522, scope: !6853)
!6861 = !DILocation(line: 157, column: 515, scope: !6853)
!6862 = !DILocation(line: 157, column: 520, scope: !6853)
!6863 = !DILocation(line: 157, column: 531, scope: !6853)
!6864 = !DILocation(line: 157, column: 531, scope: !6865)
!6865 = !DILexicalBlockFile(scope: !6850, file: !1003, discriminator: 10)
!6866 = !DILocation(line: 157, column: 547, scope: !6867)
!6867 = !DILexicalBlockFile(scope: !6839, file: !1003, discriminator: 11)
!6868 = distinct !{!6868, !6869}
!6869 = !DILocation(line: 157, column: 547, scope: !6839)
!6870 = !DILocalVariable(name: "SWAP_tmp", scope: !6871, file: !1003, line: 157, type: !1099)
!6871 = distinct !DILexicalBlock(scope: !6839, file: !1003, line: 157, column: 549)
!6872 = !DILocation(line: 157, column: 559, scope: !6871)
!6873 = !DILocation(line: 157, column: 570, scope: !6874)
!6874 = !DILexicalBlockFile(scope: !6871, file: !1003, discriminator: 12)
!6875 = !DILocation(line: 157, column: 569, scope: !6874)
!6876 = !DILocation(line: 157, column: 559, scope: !6874)
!6877 = !DILocation(line: 157, column: 582, scope: !6874)
!6878 = !DILocation(line: 157, column: 581, scope: !6874)
!6879 = !DILocation(line: 157, column: 576, scope: !6874)
!6880 = !DILocation(line: 157, column: 579, scope: !6874)
!6881 = !DILocation(line: 157, column: 597, scope: !6874)
!6882 = !DILocation(line: 157, column: 590, scope: !6874)
!6883 = !DILocation(line: 157, column: 595, scope: !6874)
!6884 = !DILocation(line: 157, column: 606, scope: !6874)
!6885 = !DILocation(line: 157, column: 617, scope: !6886)
!6886 = !DILexicalBlockFile(scope: !6840, file: !1003, discriminator: 13)
!6887 = !DILocation(line: 157, column: 659, scope: !6888)
!6888 = !DILexicalBlockFile(scope: !6889, file: !1003, discriminator: 14)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !1003, line: 157, column: 627)
!6890 = distinct !DILexicalBlock(scope: !6841, file: !1003, line: 157, column: 622)
!6891 = !DILocation(line: 157, column: 666, scope: !6888)
!6892 = !DILocation(line: 157, column: 627, scope: !6888)
!6893 = !DILocation(line: 157, column: 671, scope: !6888)
!6894 = !DILocation(line: 157, column: 676, scope: !6895)
!6895 = !DILexicalBlockFile(scope: !6889, file: !1003, discriminator: 15)
!6896 = distinct !{!6896, !6897}
!6897 = !DILocation(line: 157, column: 676, scope: !6889)
!6898 = !DILocalVariable(name: "SWAP_tmp", scope: !6899, file: !1003, line: 157, type: !1099)
!6899 = distinct !DILexicalBlock(scope: !6889, file: !1003, line: 157, column: 678)
!6900 = !DILocation(line: 157, column: 688, scope: !6899)
!6901 = !DILocation(line: 157, column: 699, scope: !6902)
!6902 = !DILexicalBlockFile(scope: !6899, file: !1003, discriminator: 16)
!6903 = !DILocation(line: 157, column: 698, scope: !6902)
!6904 = !DILocation(line: 157, column: 688, scope: !6902)
!6905 = !DILocation(line: 157, column: 711, scope: !6902)
!6906 = !DILocation(line: 157, column: 710, scope: !6902)
!6907 = !DILocation(line: 157, column: 705, scope: !6902)
!6908 = !DILocation(line: 157, column: 708, scope: !6902)
!6909 = !DILocation(line: 157, column: 726, scope: !6902)
!6910 = !DILocation(line: 157, column: 719, scope: !6902)
!6911 = !DILocation(line: 157, column: 724, scope: !6902)
!6912 = !DILocation(line: 157, column: 735, scope: !6902)
!6913 = !DILocation(line: 157, column: 735, scope: !6914)
!6914 = !DILexicalBlockFile(scope: !6899, file: !1003, discriminator: 17)
!6915 = !DILocation(line: 157, column: 760, scope: !6916)
!6916 = !DILexicalBlockFile(scope: !6889, file: !1003, discriminator: 18)
!6917 = !DILocation(line: 157, column: 802, scope: !6918)
!6918 = !DILexicalBlockFile(scope: !6919, file: !1003, discriminator: 19)
!6919 = distinct !DILexicalBlock(scope: !6810, file: !1003, line: 157, column: 770)
!6920 = !DILocation(line: 157, column: 807, scope: !6918)
!6921 = !DILocation(line: 157, column: 770, scope: !6918)
!6922 = !DILocation(line: 157, column: 812, scope: !6918)
!6923 = !DILocation(line: 157, column: 818, scope: !6924)
!6924 = !DILexicalBlockFile(scope: !6925, file: !1003, discriminator: 20)
!6925 = distinct !DILexicalBlock(scope: !6919, file: !1003, line: 157, column: 816)
!6926 = distinct !{!6926, !6927}
!6927 = !DILocation(line: 157, column: 818, scope: !6925)
!6928 = !DILocalVariable(name: "SWAP_tmp", scope: !6929, file: !1003, line: 157, type: !1099)
!6929 = distinct !DILexicalBlock(scope: !6925, file: !1003, line: 157, column: 820)
!6930 = !DILocation(line: 157, column: 830, scope: !6929)
!6931 = !DILocation(line: 157, column: 841, scope: !6932)
!6932 = !DILexicalBlockFile(scope: !6929, file: !1003, discriminator: 21)
!6933 = !DILocation(line: 157, column: 840, scope: !6932)
!6934 = !DILocation(line: 157, column: 830, scope: !6932)
!6935 = !DILocation(line: 157, column: 853, scope: !6932)
!6936 = !DILocation(line: 157, column: 852, scope: !6932)
!6937 = !DILocation(line: 157, column: 847, scope: !6932)
!6938 = !DILocation(line: 157, column: 850, scope: !6932)
!6939 = !DILocation(line: 157, column: 864, scope: !6932)
!6940 = !DILocation(line: 157, column: 859, scope: !6932)
!6941 = !DILocation(line: 157, column: 862, scope: !6932)
!6942 = !DILocation(line: 157, column: 873, scope: !6932)
!6943 = !DILocation(line: 157, column: 893, scope: !6944)
!6944 = !DILexicalBlockFile(scope: !6925, file: !1003, discriminator: 22)
!6945 = !DILocation(line: 157, column: 897, scope: !6944)
!6946 = !DILocation(line: 157, column: 902, scope: !6947)
!6947 = !DILexicalBlockFile(scope: !6948, file: !1003, discriminator: 23)
!6948 = distinct !DILexicalBlock(scope: !6810, file: !1003, line: 157, column: 902)
!6949 = !DILocation(line: 157, column: 911, scope: !6947)
!6950 = !DILocation(line: 157, column: 914, scope: !6947)
!6951 = !DILocation(line: 157, column: 908, scope: !6947)
!6952 = !DILocation(line: 157, column: 918, scope: !6953)
!6953 = !DILexicalBlockFile(scope: !6948, file: !1003, discriminator: 24)
!6954 = !DILocation(line: 157, column: 925, scope: !6955)
!6955 = !DILexicalBlockFile(scope: !6810, file: !1003, discriminator: 25)
!6956 = distinct !{!6956, !6957}
!6957 = !DILocation(line: 157, column: 925, scope: !6810)
!6958 = !DILocalVariable(name: "SWAP_tmp", scope: !6959, file: !1003, line: 157, type: !1099)
!6959 = distinct !DILexicalBlock(scope: !6810, file: !1003, line: 157, column: 927)
!6960 = !DILocation(line: 157, column: 937, scope: !6959)
!6961 = !DILocation(line: 157, column: 948, scope: !6962)
!6962 = !DILexicalBlockFile(scope: !6959, file: !1003, discriminator: 26)
!6963 = !DILocation(line: 157, column: 947, scope: !6962)
!6964 = !DILocation(line: 157, column: 937, scope: !6962)
!6965 = !DILocation(line: 157, column: 959, scope: !6962)
!6966 = !DILocation(line: 157, column: 954, scope: !6962)
!6967 = !DILocation(line: 157, column: 957, scope: !6962)
!6968 = !DILocation(line: 157, column: 977, scope: !6962)
!6969 = !DILocation(line: 157, column: 968, scope: !6962)
!6970 = !DILocation(line: 157, column: 975, scope: !6962)
!6971 = !DILocation(line: 157, column: 986, scope: !6962)
!6972 = !DILocation(line: 157, column: 997, scope: !6973)
!6973 = !DILexicalBlockFile(scope: !6810, file: !1003, discriminator: 27)
!6974 = !DILocation(line: 157, column: 1003, scope: !6975)
!6975 = !DILexicalBlockFile(scope: !6810, file: !1003, discriminator: 28)
!6976 = !DILocation(line: 157, column: 1011, scope: !6975)
!6977 = !DILocation(line: 157, column: 1008, scope: !6975)
!6978 = !DILocation(line: 157, column: 997, scope: !6975)
!6979 = !DILocation(line: 157, column: 1019, scope: !6980)
!6980 = !DILexicalBlockFile(scope: !6981, file: !1003, discriminator: 29)
!6981 = distinct !DILexicalBlock(scope: !6810, file: !1003, line: 157, column: 1017)
!6982 = !DILocation(line: 157, column: 1025, scope: !6983)
!6983 = !DILexicalBlockFile(scope: !6981, file: !1003, discriminator: 30)
!6984 = !DILocation(line: 157, column: 1031, scope: !6983)
!6985 = !DILocation(line: 157, column: 1029, scope: !6983)
!6986 = !DILocation(line: 157, column: 1037, scope: !6983)
!6987 = !DILocation(line: 157, column: 1072, scope: !6988)
!6988 = !DILexicalBlockFile(scope: !6981, file: !1003, discriminator: 31)
!6989 = !DILocation(line: 157, column: 1078, scope: !6988)
!6990 = !DILocation(line: 157, column: 1081, scope: !6988)
!6991 = !DILocation(line: 157, column: 1040, scope: !6988)
!6992 = !DILocation(line: 157, column: 1085, scope: !6988)
!6993 = !DILocation(line: 157, column: 1019, scope: !6994)
!6994 = !DILexicalBlockFile(scope: !6981, file: !1003, discriminator: 32)
!6995 = !DILocation(line: 157, column: 1094, scope: !6996)
!6996 = !DILexicalBlockFile(scope: !6981, file: !1003, discriminator: 33)
!6997 = !DILocation(line: 157, column: 1019, scope: !6996)
!6998 = distinct !{!6998, !6999}
!6999 = !DILocation(line: 157, column: 1019, scope: !6981)
!7000 = !DILocation(line: 157, column: 1098, scope: !7001)
!7001 = !DILexicalBlockFile(scope: !6981, file: !1003, discriminator: 34)
!7002 = !DILocation(line: 157, column: 1104, scope: !7003)
!7003 = !DILexicalBlockFile(scope: !6981, file: !1003, discriminator: 35)
!7004 = !DILocation(line: 157, column: 1110, scope: !7003)
!7005 = !DILocation(line: 157, column: 1108, scope: !7003)
!7006 = !DILocation(line: 157, column: 1116, scope: !7003)
!7007 = !DILocation(line: 157, column: 1151, scope: !7008)
!7008 = !DILexicalBlockFile(scope: !6981, file: !1003, discriminator: 36)
!7009 = !DILocation(line: 157, column: 1158, scope: !7008)
!7010 = !DILocation(line: 157, column: 1161, scope: !7008)
!7011 = !DILocation(line: 157, column: 1119, scope: !7008)
!7012 = !DILocation(line: 157, column: 1165, scope: !7008)
!7013 = !DILocation(line: 157, column: 1098, scope: !7014)
!7014 = !DILexicalBlockFile(scope: !6981, file: !1003, discriminator: 37)
!7015 = !DILocation(line: 157, column: 1175, scope: !7016)
!7016 = !DILexicalBlockFile(scope: !6981, file: !1003, discriminator: 38)
!7017 = !DILocation(line: 157, column: 1098, scope: !7016)
!7018 = distinct !{!7018, !7019}
!7019 = !DILocation(line: 157, column: 1098, scope: !6981)
!7020 = !DILocation(line: 157, column: 1182, scope: !7021)
!7021 = !DILexicalBlockFile(scope: !7022, file: !1003, discriminator: 39)
!7022 = distinct !DILexicalBlock(scope: !6981, file: !1003, line: 157, column: 1182)
!7023 = !DILocation(line: 157, column: 1190, scope: !7021)
!7024 = !DILocation(line: 157, column: 1187, scope: !7021)
!7025 = !DILocation(line: 157, column: 1198, scope: !7026)
!7026 = !DILexicalBlockFile(scope: !7027, file: !1003, discriminator: 40)
!7027 = distinct !DILexicalBlock(scope: !7022, file: !1003, line: 157, column: 1196)
!7028 = distinct !{!7028, !7029}
!7029 = !DILocation(line: 157, column: 1198, scope: !7027)
!7030 = !DILocalVariable(name: "SWAP_tmp", scope: !7031, file: !1003, line: 157, type: !1099)
!7031 = distinct !DILexicalBlock(scope: !7027, file: !1003, line: 157, column: 1200)
!7032 = !DILocation(line: 157, column: 1210, scope: !7031)
!7033 = !DILocation(line: 157, column: 1221, scope: !7034)
!7034 = !DILexicalBlockFile(scope: !7031, file: !1003, discriminator: 41)
!7035 = !DILocation(line: 157, column: 1220, scope: !7034)
!7036 = !DILocation(line: 157, column: 1210, scope: !7034)
!7037 = !DILocation(line: 157, column: 1237, scope: !7034)
!7038 = !DILocation(line: 157, column: 1236, scope: !7034)
!7039 = !DILocation(line: 157, column: 1229, scope: !7034)
!7040 = !DILocation(line: 157, column: 1234, scope: !7034)
!7041 = !DILocation(line: 157, column: 1250, scope: !7034)
!7042 = !DILocation(line: 157, column: 1244, scope: !7034)
!7043 = !DILocation(line: 157, column: 1248, scope: !7034)
!7044 = !DILocation(line: 157, column: 1259, scope: !7034)
!7045 = !DILocation(line: 157, column: 1274, scope: !7046)
!7046 = !DILexicalBlockFile(scope: !7027, file: !1003, discriminator: 42)
!7047 = !DILocation(line: 157, column: 1283, scope: !7046)
!7048 = !DILocation(line: 157, column: 1287, scope: !7046)
!7049 = !DILocation(line: 157, column: 997, scope: !7050)
!7050 = !DILexicalBlockFile(scope: !6810, file: !1003, discriminator: 43)
!7051 = distinct !{!7051, !7052}
!7052 = !DILocation(line: 157, column: 997, scope: !6810)
!7053 = !DILocation(line: 157, column: 1291, scope: !7054)
!7054 = !DILexicalBlockFile(scope: !6810, file: !1003, discriminator: 44)
!7055 = distinct !{!7055, !7056}
!7056 = !DILocation(line: 157, column: 1291, scope: !6810)
!7057 = !DILocalVariable(name: "SWAP_tmp", scope: !7058, file: !1003, line: 157, type: !1099)
!7058 = distinct !DILexicalBlock(scope: !6810, file: !1003, line: 157, column: 1293)
!7059 = !DILocation(line: 157, column: 1303, scope: !7058)
!7060 = !DILocation(line: 157, column: 1314, scope: !7061)
!7061 = !DILexicalBlockFile(scope: !7058, file: !1003, discriminator: 45)
!7062 = !DILocation(line: 157, column: 1313, scope: !7061)
!7063 = !DILocation(line: 157, column: 1303, scope: !7061)
!7064 = !DILocation(line: 157, column: 1327, scope: !7061)
!7065 = !DILocation(line: 157, column: 1321, scope: !7061)
!7066 = !DILocation(line: 157, column: 1325, scope: !7061)
!7067 = !DILocation(line: 157, column: 1345, scope: !7061)
!7068 = !DILocation(line: 157, column: 1336, scope: !7061)
!7069 = !DILocation(line: 157, column: 1343, scope: !7061)
!7070 = !DILocation(line: 157, column: 1354, scope: !7061)
!7071 = !DILocation(line: 157, column: 1368, scope: !7072)
!7072 = !DILexicalBlockFile(scope: !7073, file: !1003, discriminator: 46)
!7073 = distinct !DILexicalBlock(scope: !6810, file: !1003, line: 157, column: 1368)
!7074 = !DILocation(line: 157, column: 1378, scope: !7072)
!7075 = !DILocation(line: 157, column: 1382, scope: !7076)
!7076 = !DILexicalBlockFile(scope: !7073, file: !1003, discriminator: 47)
!7077 = !DILocation(line: 157, column: 1389, scope: !7076)
!7078 = !DILocation(line: 157, column: 1393, scope: !7076)
!7079 = !DILocation(line: 157, column: 1386, scope: !7076)
!7080 = !DILocation(line: 157, column: 1396, scope: !7076)
!7081 = !DILocation(line: 157, column: 1399, scope: !7082)
!7082 = !DILexicalBlockFile(scope: !7073, file: !1003, discriminator: 48)
!7083 = !DILocation(line: 157, column: 1406, scope: !7082)
!7084 = !DILocation(line: 157, column: 1403, scope: !7082)
!7085 = !DILocation(line: 157, column: 1368, scope: !7082)
!7086 = !DILocation(line: 157, column: 1419, scope: !7087)
!7087 = !DILexicalBlockFile(scope: !7088, file: !1003, discriminator: 49)
!7088 = distinct !DILexicalBlock(scope: !7073, file: !1003, line: 157, column: 1412)
!7089 = !DILocation(line: 157, column: 1417, scope: !7087)
!7090 = !DILocation(line: 157, column: 1426, scope: !7087)
!7091 = !DILocation(line: 157, column: 1432, scope: !7092)
!7092 = !DILexicalBlockFile(scope: !7088, file: !1003, discriminator: 50)
!7093 = !DILocation(line: 157, column: 1436, scope: !7092)
!7094 = !DILocation(line: 157, column: 1435, scope: !7092)
!7095 = !DILocation(line: 157, column: 1440, scope: !7092)
!7096 = !DILocation(line: 157, column: 1475, scope: !7097)
!7097 = !DILexicalBlockFile(scope: !7088, file: !1003, discriminator: 51)
!7098 = !DILocation(line: 157, column: 1480, scope: !7097)
!7099 = !DILocation(line: 157, column: 1483, scope: !7097)
!7100 = !DILocation(line: 157, column: 1443, scope: !7097)
!7101 = !DILocation(line: 157, column: 1487, scope: !7097)
!7102 = !DILocation(line: 157, column: 1426, scope: !7103)
!7103 = !DILexicalBlockFile(scope: !7088, file: !1003, discriminator: 52)
!7104 = !DILocation(line: 157, column: 1496, scope: !7105)
!7105 = !DILexicalBlockFile(scope: !7088, file: !1003, discriminator: 53)
!7106 = !DILocation(line: 157, column: 1426, scope: !7105)
!7107 = distinct !{!7107, !7108}
!7108 = !DILocation(line: 157, column: 1426, scope: !7088)
!7109 = !DILocation(line: 157, column: 1503, scope: !7110)
!7110 = !DILexicalBlockFile(scope: !7111, file: !1003, discriminator: 54)
!7111 = distinct !DILexicalBlock(scope: !7088, file: !1003, line: 157, column: 1503)
!7112 = !DILocation(line: 157, column: 1508, scope: !7110)
!7113 = !DILocation(line: 157, column: 1506, scope: !7110)
!7114 = !DILocation(line: 157, column: 1513, scope: !7115)
!7115 = !DILexicalBlockFile(scope: !7111, file: !1003, discriminator: 55)
!7116 = !DILocation(line: 157, column: 1520, scope: !7117)
!7117 = !DILexicalBlockFile(scope: !7088, file: !1003, discriminator: 56)
!7118 = !DILocation(line: 157, column: 1525, scope: !7119)
!7119 = !DILexicalBlockFile(scope: !7120, file: !1003, discriminator: 57)
!7120 = distinct !DILexicalBlock(scope: !6810, file: !1003, line: 157, column: 1525)
!7121 = !DILocation(line: 157, column: 1529, scope: !7119)
!7122 = !DILocation(line: 157, column: 1528, scope: !7119)
!7123 = !DILocation(line: 157, column: 1536, scope: !7119)
!7124 = !DILocation(line: 157, column: 1541, scope: !7119)
!7125 = !DILocation(line: 157, column: 1540, scope: !7119)
!7126 = !DILocation(line: 157, column: 1534, scope: !7119)
!7127 = !DILocation(line: 157, column: 1564, scope: !7128)
!7128 = !DILexicalBlockFile(scope: !7129, file: !1003, discriminator: 58)
!7129 = distinct !DILexicalBlock(scope: !7120, file: !1003, line: 157, column: 1547)
!7130 = !DILocation(line: 157, column: 1555, scope: !7128)
!7131 = !DILocation(line: 157, column: 1549, scope: !7128)
!7132 = !DILocation(line: 157, column: 1562, scope: !7128)
!7133 = !DILocation(line: 157, column: 1587, scope: !7128)
!7134 = !DILocation(line: 157, column: 1579, scope: !7128)
!7135 = !DILocation(line: 157, column: 1571, scope: !7128)
!7136 = !DILocation(line: 157, column: 1585, scope: !7128)
!7137 = !DILocation(line: 157, column: 1602, scope: !7128)
!7138 = !DILocation(line: 157, column: 1606, scope: !7128)
!7139 = !DILocation(line: 157, column: 1600, scope: !7128)
!7140 = !DILocation(line: 157, column: 1610, scope: !7128)
!7141 = !DILocation(line: 157, column: 1632, scope: !7142)
!7142 = !DILexicalBlockFile(scope: !7143, file: !1003, discriminator: 59)
!7143 = distinct !DILexicalBlock(scope: !7120, file: !1003, line: 157, column: 1615)
!7144 = !DILocation(line: 157, column: 1636, scope: !7142)
!7145 = !DILocation(line: 157, column: 1623, scope: !7142)
!7146 = !DILocation(line: 157, column: 1617, scope: !7142)
!7147 = !DILocation(line: 157, column: 1630, scope: !7142)
!7148 = !DILocation(line: 157, column: 1656, scope: !7142)
!7149 = !DILocation(line: 157, column: 1648, scope: !7142)
!7150 = !DILocation(line: 157, column: 1640, scope: !7142)
!7151 = !DILocation(line: 157, column: 1654, scope: !7142)
!7152 = !DILocation(line: 157, column: 1667, scope: !7142)
!7153 = !DILocation(line: 157, column: 1665, scope: !7142)
!7154 = !DILocation(line: 157, column: 1676, scope: !7155)
!7155 = !DILexicalBlockFile(scope: !6810, file: !1003, discriminator: 60)
!7156 = !DILocation(line: 157, column: 1718, scope: !7157)
!7157 = !DILexicalBlockFile(scope: !7158, file: !1003, discriminator: 61)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !1003, line: 157, column: 1686)
!7159 = distinct !DILexicalBlock(scope: !6804, file: !1003, line: 157, column: 1681)
!7160 = !DILocation(line: 157, column: 1725, scope: !7157)
!7161 = !DILocation(line: 157, column: 1686, scope: !7157)
!7162 = !DILocation(line: 157, column: 1730, scope: !7157)
!7163 = !DILocation(line: 157, column: 1735, scope: !7164)
!7164 = !DILexicalBlockFile(scope: !7158, file: !1003, discriminator: 62)
!7165 = distinct !{!7165, !7166}
!7166 = !DILocation(line: 157, column: 1735, scope: !7158)
!7167 = !DILocalVariable(name: "SWAP_tmp", scope: !7168, file: !1003, line: 157, type: !1099)
!7168 = distinct !DILexicalBlock(scope: !7158, file: !1003, line: 157, column: 1737)
!7169 = !DILocation(line: 157, column: 1747, scope: !7168)
!7170 = !DILocation(line: 157, column: 1758, scope: !7171)
!7171 = !DILexicalBlockFile(scope: !7168, file: !1003, discriminator: 63)
!7172 = !DILocation(line: 157, column: 1757, scope: !7171)
!7173 = !DILocation(line: 157, column: 1747, scope: !7171)
!7174 = !DILocation(line: 157, column: 1770, scope: !7171)
!7175 = !DILocation(line: 157, column: 1769, scope: !7171)
!7176 = !DILocation(line: 157, column: 1764, scope: !7171)
!7177 = !DILocation(line: 157, column: 1767, scope: !7171)
!7178 = !DILocation(line: 157, column: 1785, scope: !7171)
!7179 = !DILocation(line: 157, column: 1778, scope: !7171)
!7180 = !DILocation(line: 157, column: 1783, scope: !7171)
!7181 = !DILocation(line: 157, column: 1794, scope: !7171)
!7182 = !DILocation(line: 157, column: 1794, scope: !7183)
!7183 = !DILexicalBlockFile(scope: !7168, file: !1003, discriminator: 64)
!7184 = !DILocation(line: 157, column: 1805, scope: !7185)
!7185 = !DILexicalBlockFile(scope: !7159, file: !1003, discriminator: 65)
!7186 = !DILocation(line: 157, column: 217, scope: !7187)
!7187 = !DILexicalBlockFile(scope: !6785, file: !1003, discriminator: 66)
!7188 = distinct !{!7188, !7189}
!7189 = !DILocation(line: 157, column: 217, scope: !6785)
!7190 = !DILocation(line: 157, column: 142, scope: !7191)
!7191 = !DILexicalBlockFile(scope: !6757, file: !1003, discriminator: 67)
!7192 = distinct !{!7192, !7193}
!7193 = !DILocation(line: 157, column: 142, scope: !6757)
!7194 = !DILocation(line: 157, column: 1817, scope: !7195)
!7195 = !DILexicalBlockFile(scope: !6757, file: !1003, discriminator: 68)
!7196 = !DILocation(line: 161, column: 22, scope: !6677)
!7197 = !DILocation(line: 161, column: 27, scope: !6677)
!7198 = !DILocation(line: 161, column: 34, scope: !6677)
!7199 = !DILocation(line: 161, column: 39, scope: !6677)
!7200 = !DILocation(line: 161, column: 32, scope: !6677)
!7201 = !DILocation(line: 161, column: 51, scope: !6677)
!7202 = !DILocation(line: 161, column: 9, scope: !6677)
!7203 = !DILocation(line: 161, column: 14, scope: !6677)
!7204 = !DILocation(line: 161, column: 20, scope: !6677)
!7205 = !DILocation(line: 162, column: 9, scope: !6677)
!7206 = !DILocation(line: 162, column: 16, scope: !7207)
!7207 = !DILexicalBlockFile(scope: !6677, file: !1003, discriminator: 1)
!7208 = !DILocation(line: 162, column: 22, scope: !7207)
!7209 = !DILocation(line: 162, column: 27, scope: !7207)
!7210 = !DILocation(line: 162, column: 40, scope: !7207)
!7211 = !DILocation(line: 162, column: 45, scope: !7207)
!7212 = !DILocation(line: 162, column: 38, scope: !7207)
!7213 = !DILocation(line: 162, column: 20, scope: !7207)
!7214 = !DILocation(line: 162, column: 9, scope: !7207)
!7215 = !DILocation(line: 164, column: 19, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7217, file: !1003, line: 164, column: 17)
!7217 = distinct !DILexicalBlock(scope: !6677, file: !1003, line: 162, column: 52)
!7218 = !DILocation(line: 164, column: 18, scope: !7216)
!7219 = !DILocation(line: 164, column: 22, scope: !7216)
!7220 = !DILocation(line: 164, column: 33, scope: !7216)
!7221 = !DILocation(line: 164, column: 32, scope: !7216)
!7222 = !DILocation(line: 164, column: 39, scope: !7216)
!7223 = !DILocation(line: 164, column: 37, scope: !7216)
!7224 = !DILocation(line: 164, column: 29, scope: !7216)
!7225 = !DILocation(line: 164, column: 17, scope: !7217)
!7226 = !DILocation(line: 168, column: 29, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7216, file: !1003, line: 164, column: 68)
!7228 = !DILocation(line: 168, column: 26, scope: !7227)
!7229 = !DILocation(line: 168, column: 18, scope: !7227)
!7230 = !DILocation(line: 168, column: 24, scope: !7227)
!7231 = !DILocation(line: 169, column: 13, scope: !7227)
!7232 = !DILocation(line: 169, column: 25, scope: !7233)
!7233 = !DILexicalBlockFile(scope: !7234, file: !1003, discriminator: 1)
!7234 = distinct !DILexicalBlock(scope: !7216, file: !1003, line: 169, column: 24)
!7235 = !DILocation(line: 169, column: 24, scope: !7233)
!7236 = !DILocation(line: 169, column: 32, scope: !7233)
!7237 = !DILocation(line: 169, column: 31, scope: !7233)
!7238 = !DILocation(line: 169, column: 28, scope: !7233)
!7239 = !DILocation(line: 169, column: 36, scope: !7233)
!7240 = !DILocation(line: 170, column: 33, scope: !7234)
!7241 = !DILocation(line: 170, column: 48, scope: !7234)
!7242 = !DILocation(line: 170, column: 53, scope: !7234)
!7243 = !DILocation(line: 170, column: 67, scope: !7234)
!7244 = !DILocation(line: 170, column: 66, scope: !7234)
!7245 = !DILocation(line: 170, column: 18, scope: !7234)
!7246 = !DILocation(line: 169, column: 24, scope: !7247)
!7247 = !DILexicalBlockFile(scope: !7216, file: !1003, discriminator: 2)
!7248 = !DILocation(line: 171, column: 19, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7234, file: !1003, line: 170, column: 72)
!7250 = !DILocation(line: 172, column: 17, scope: !7249)
!7251 = !DILocation(line: 172, column: 22, scope: !7249)
!7252 = !DILocation(line: 172, column: 27, scope: !7249)
!7253 = !DILocation(line: 173, column: 13, scope: !7249)
!7254 = !DILocation(line: 173, column: 40, scope: !7255)
!7255 = !DILexicalBlockFile(scope: !7256, file: !1003, discriminator: 1)
!7256 = distinct !DILexicalBlock(scope: !7234, file: !1003, line: 173, column: 24)
!7257 = !DILocation(line: 173, column: 55, scope: !7255)
!7258 = !DILocation(line: 173, column: 60, scope: !7255)
!7259 = !DILocation(line: 173, column: 74, scope: !7255)
!7260 = !DILocation(line: 173, column: 73, scope: !7255)
!7261 = !DILocation(line: 173, column: 25, scope: !7255)
!7262 = !DILocation(line: 173, column: 24, scope: !7255)
!7263 = !DILocation(line: 174, column: 27, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7256, file: !1003, line: 173, column: 80)
!7265 = !DILocation(line: 174, column: 24, scope: !7264)
!7266 = !DILocation(line: 174, column: 18, scope: !7264)
!7267 = !DILocation(line: 174, column: 22, scope: !7264)
!7268 = !DILocation(line: 175, column: 17, scope: !7264)
!7269 = !DILocation(line: 175, column: 22, scope: !7264)
!7270 = !DILocation(line: 175, column: 27, scope: !7264)
!7271 = !DILocation(line: 176, column: 13, scope: !7264)
!7272 = !DILocation(line: 177, column: 29, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7256, file: !1003, line: 176, column: 20)
!7274 = !DILocation(line: 177, column: 26, scope: !7273)
!7275 = !DILocation(line: 177, column: 18, scope: !7273)
!7276 = !DILocation(line: 177, column: 24, scope: !7273)
!7277 = !DILocation(line: 162, column: 9, scope: !7278)
!7278 = !DILexicalBlockFile(scope: !6677, file: !1003, discriminator: 2)
!7279 = distinct !{!7279, !7205}
!7280 = !DILocation(line: 180, column: 5, scope: !6677)
!7281 = !DILocation(line: 181, column: 30, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !6672, file: !1003, line: 180, column: 12)
!7283 = !DILocation(line: 181, column: 35, scope: !7282)
!7284 = !DILocation(line: 181, column: 9, scope: !7282)
!7285 = !DILocation(line: 181, column: 14, scope: !7282)
!7286 = !DILocation(line: 181, column: 28, scope: !7282)
!7287 = !DILocation(line: 182, column: 46, scope: !7282)
!7288 = !DILocation(line: 182, column: 51, scope: !7282)
!7289 = !DILocation(line: 182, column: 30, scope: !7282)
!7290 = !DILocation(line: 182, column: 35, scope: !7282)
!7291 = !DILocation(line: 182, column: 9, scope: !7282)
!7292 = !DILocation(line: 182, column: 14, scope: !7282)
!7293 = !DILocation(line: 182, column: 28, scope: !7282)
!7294 = !DILocation(line: 183, column: 9, scope: !7282)
!7295 = !DILocation(line: 183, column: 14, scope: !7282)
!7296 = !DILocation(line: 183, column: 20, scope: !7282)
!7297 = !DILocation(line: 185, column: 1, scope: !1122)
!7298 = distinct !DISubprogram(name: "NEG_USR32", scope: !7299, file: !7299, line: 124, type: !7300, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!7299 = !DIFile(filename: "./libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7300 = !DISubroutineType(types: !7301)
!7301 = !{!983, !983, !1267}
!7302 = !DILocalVariable(name: "a", arg: 1, scope: !7298, file: !7299, line: 124, type: !983)
!7303 = !DILocation(line: 124, column: 43, scope: !7298)
!7304 = !DILocalVariable(name: "s", arg: 2, scope: !7298, file: !7299, line: 124, type: !1267)
!7305 = !DILocation(line: 124, column: 53, scope: !7298)
!7306 = !DILocation(line: 125, column: 5, scope: !7298)
!7307 = !DILocation(line: 127, column: 29, scope: !7298)
!7308 = !DILocation(line: 127, column: 28, scope: !7298)
!7309 = !DILocation(line: 127, column: 18, scope: !7298)
!7310 = !{i32 126204, i32 126218}
!7311 = !DILocation(line: 129, column: 12, scope: !7298)
!7312 = !DILocation(line: 129, column: 5, scope: !7298)
!7313 = distinct !DISubprogram(name: "qsort_comparison_function_int16", scope: !1003, file: !1003, line: 121, type: !7314, isLocal: true, isDefinition: true, scopeLine: 122, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!7314 = !DISubroutineType(types: !7315)
!7315 = !{!958, !1012, !1012}
!7316 = !DILocalVariable(name: "a", arg: 1, scope: !7313, file: !1003, line: 121, type: !1012)
!7317 = !DILocation(line: 121, column: 56, scope: !7313)
!7318 = !DILocalVariable(name: "b", arg: 2, scope: !7313, file: !1003, line: 121, type: !1012)
!7319 = !DILocation(line: 121, column: 71, scope: !7313)
!7320 = !DILocation(line: 123, column: 30, scope: !7313)
!7321 = !DILocation(line: 123, column: 13, scope: !7313)
!7322 = !DILocation(line: 123, column: 12, scope: !7313)
!7323 = !DILocation(line: 123, column: 52, scope: !7313)
!7324 = !DILocation(line: 123, column: 35, scope: !7313)
!7325 = !DILocation(line: 123, column: 34, scope: !7313)
!7326 = !DILocation(line: 123, column: 32, scope: !7313)
!7327 = !DILocation(line: 123, column: 5, scope: !7313)
!7328 = distinct !DISubprogram(name: "in_table_int16", scope: !1003, file: !1003, line: 126, type: !7329, isLocal: true, isDefinition: true, scopeLine: 127, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!7329 = !DISubroutineType(types: !7330)
!7330 = !{!958, !988, !958, !990}
!7331 = !DILocalVariable(name: "table", arg: 1, scope: !7328, file: !1003, line: 126, type: !988)
!7332 = !DILocation(line: 126, column: 49, scope: !7328)
!7333 = !DILocalVariable(name: "last_el", arg: 2, scope: !7328, file: !1003, line: 126, type: !958)
!7334 = !DILocation(line: 126, column: 60, scope: !7328)
!7335 = !DILocalVariable(name: "needle", arg: 3, scope: !7328, file: !1003, line: 126, type: !990)
!7336 = !DILocation(line: 126, column: 77, scope: !7328)
!7337 = !DILocalVariable(name: "i", scope: !7328, file: !1003, line: 128, type: !958)
!7338 = !DILocation(line: 128, column: 9, scope: !7328)
!7339 = !DILocation(line: 129, column: 12, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7328, file: !1003, line: 129, column: 5)
!7341 = !DILocation(line: 129, column: 10, scope: !7340)
!7342 = !DILocation(line: 129, column: 17, scope: !7343)
!7343 = !DILexicalBlockFile(scope: !7344, file: !1003, discriminator: 1)
!7344 = distinct !DILexicalBlock(scope: !7340, file: !1003, line: 129, column: 5)
!7345 = !DILocation(line: 129, column: 22, scope: !7343)
!7346 = !DILocation(line: 129, column: 19, scope: !7343)
!7347 = !DILocation(line: 129, column: 5, scope: !7343)
!7348 = !DILocation(line: 130, column: 19, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7344, file: !1003, line: 130, column: 13)
!7350 = !DILocation(line: 130, column: 13, scope: !7349)
!7351 = !DILocation(line: 130, column: 25, scope: !7349)
!7352 = !DILocation(line: 130, column: 22, scope: !7349)
!7353 = !DILocation(line: 130, column: 13, scope: !7344)
!7354 = !DILocation(line: 131, column: 13, scope: !7349)
!7355 = !DILocation(line: 130, column: 25, scope: !7356)
!7356 = !DILexicalBlockFile(scope: !7349, file: !1003, discriminator: 1)
!7357 = !DILocation(line: 129, column: 32, scope: !7358)
!7358 = !DILexicalBlockFile(scope: !7344, file: !1003, discriminator: 2)
!7359 = !DILocation(line: 129, column: 5, scope: !7358)
!7360 = distinct !{!7360, !7361}
!7361 = !DILocation(line: 129, column: 5, scope: !7328)
!7362 = !DILocation(line: 132, column: 5, scope: !7328)
!7363 = !DILocation(line: 133, column: 1, scope: !7328)
!7364 = distinct !DISubprogram(name: "sbr_make_f_master", scope: !1003, file: !1003, line: 267, type: !7365, isLocal: true, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!7365 = !DISubroutineType(types: !7366)
!7366 = !{!958, !1510, !1125, !7367}
!7367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64, align: 64)
!7368 = !DILocalVariable(name: "ac", arg: 1, scope: !7364, file: !1003, line: 267, type: !1510)
!7369 = !DILocation(line: 267, column: 42, scope: !7364)
!7370 = !DILocalVariable(name: "sbr", arg: 2, scope: !7364, file: !1003, line: 267, type: !1125)
!7371 = !DILocation(line: 267, column: 71, scope: !7364)
!7372 = !DILocalVariable(name: "spectrum", arg: 3, scope: !7364, file: !1003, line: 268, type: !7367)
!7373 = !DILocation(line: 268, column: 50, scope: !7364)
!7374 = !DILocalVariable(name: "temp", scope: !7364, file: !1003, line: 270, type: !985)
!7375 = !DILocation(line: 270, column: 18, scope: !7364)
!7376 = !DILocalVariable(name: "max_qmf_subbands", scope: !7364, file: !1003, line: 270, type: !985)
!7377 = !DILocation(line: 270, column: 24, scope: !7364)
!7378 = !DILocalVariable(name: "start_min", scope: !7364, file: !1003, line: 271, type: !985)
!7379 = !DILocation(line: 271, column: 18, scope: !7364)
!7380 = !DILocalVariable(name: "stop_min", scope: !7364, file: !1003, line: 271, type: !985)
!7381 = !DILocation(line: 271, column: 29, scope: !7364)
!7382 = !DILocalVariable(name: "k", scope: !7364, file: !1003, line: 272, type: !958)
!7383 = !DILocation(line: 272, column: 9, scope: !7364)
!7384 = !DILocalVariable(name: "sbr_offset_ptr", scope: !7364, file: !1003, line: 273, type: !7385)
!7385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 64, align: 64)
!7386 = !DILocation(line: 273, column: 19, scope: !7364)
!7387 = !DILocalVariable(name: "stop_dk", scope: !7364, file: !1003, line: 274, type: !7388)
!7388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 208, align: 16, elements: !7389)
!7389 = !{!7390}
!7390 = !DISubrange(count: 13)
!7391 = !DILocation(line: 274, column: 13, scope: !7364)
!7392 = !DILocation(line: 276, column: 13, scope: !7364)
!7393 = !DILocation(line: 276, column: 18, scope: !7364)
!7394 = !DILocation(line: 276, column: 5, scope: !7364)
!7395 = !DILocation(line: 278, column: 24, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7364, file: !1003, line: 276, column: 31)
!7397 = !DILocation(line: 279, column: 9, scope: !7396)
!7398 = !DILocation(line: 281, column: 24, scope: !7396)
!7399 = !DILocation(line: 282, column: 9, scope: !7396)
!7400 = !DILocation(line: 284, column: 24, scope: !7396)
!7401 = !DILocation(line: 285, column: 9, scope: !7396)
!7402 = !DILocation(line: 287, column: 24, scope: !7396)
!7403 = !DILocation(line: 288, column: 9, scope: !7396)
!7404 = !DILocation(line: 290, column: 24, scope: !7396)
!7405 = !DILocation(line: 291, column: 9, scope: !7396)
!7406 = !DILocation(line: 293, column: 24, scope: !7396)
!7407 = !DILocation(line: 294, column: 9, scope: !7396)
!7408 = !DILocation(line: 296, column: 16, scope: !7396)
!7409 = !DILocation(line: 296, column: 20, scope: !7396)
!7410 = !DILocation(line: 297, column: 57, scope: !7396)
!7411 = !DILocation(line: 297, column: 62, scope: !7396)
!7412 = !DILocation(line: 296, column: 9, scope: !7396)
!7413 = !DILocation(line: 298, column: 9, scope: !7396)
!7414 = !DILocation(line: 301, column: 9, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7364, file: !1003, line: 301, column: 9)
!7416 = !DILocation(line: 301, column: 14, scope: !7415)
!7417 = !DILocation(line: 301, column: 26, scope: !7415)
!7418 = !DILocation(line: 301, column: 9, scope: !7364)
!7419 = !DILocation(line: 302, column: 14, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7415, file: !1003, line: 301, column: 35)
!7421 = !DILocation(line: 303, column: 5, scope: !7420)
!7422 = !DILocation(line: 303, column: 16, scope: !7423)
!7423 = !DILexicalBlockFile(scope: !7424, file: !1003, discriminator: 1)
!7424 = distinct !DILexicalBlock(scope: !7415, file: !1003, line: 303, column: 16)
!7425 = !DILocation(line: 303, column: 21, scope: !7423)
!7426 = !DILocation(line: 303, column: 33, scope: !7423)
!7427 = !DILocation(line: 304, column: 14, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7424, file: !1003, line: 303, column: 42)
!7429 = !DILocation(line: 305, column: 5, scope: !7428)
!7430 = !DILocation(line: 306, column: 14, scope: !7424)
!7431 = !DILocation(line: 308, column: 19, scope: !7364)
!7432 = !DILocation(line: 308, column: 24, scope: !7364)
!7433 = !DILocation(line: 308, column: 33, scope: !7364)
!7434 = !DILocation(line: 308, column: 38, scope: !7364)
!7435 = !DILocation(line: 308, column: 50, scope: !7364)
!7436 = !DILocation(line: 308, column: 30, scope: !7364)
!7437 = !DILocation(line: 308, column: 59, scope: !7364)
!7438 = !DILocation(line: 308, column: 64, scope: !7364)
!7439 = !DILocation(line: 308, column: 57, scope: !7364)
!7440 = !DILocation(line: 308, column: 15, scope: !7364)
!7441 = !DILocation(line: 309, column: 18, scope: !7364)
!7442 = !DILocation(line: 309, column: 23, scope: !7364)
!7443 = !DILocation(line: 309, column: 32, scope: !7364)
!7444 = !DILocation(line: 309, column: 37, scope: !7364)
!7445 = !DILocation(line: 309, column: 49, scope: !7364)
!7446 = !DILocation(line: 309, column: 29, scope: !7364)
!7447 = !DILocation(line: 309, column: 58, scope: !7364)
!7448 = !DILocation(line: 309, column: 63, scope: !7364)
!7449 = !DILocation(line: 309, column: 56, scope: !7364)
!7450 = !DILocation(line: 309, column: 14, scope: !7364)
!7451 = !DILocation(line: 311, column: 17, scope: !7364)
!7452 = !DILocation(line: 311, column: 44, scope: !7364)
!7453 = !DILocation(line: 311, column: 54, scope: !7364)
!7454 = !DILocation(line: 311, column: 29, scope: !7364)
!7455 = !DILocation(line: 311, column: 27, scope: !7364)
!7456 = !DILocation(line: 311, column: 5, scope: !7364)
!7457 = !DILocation(line: 311, column: 10, scope: !7364)
!7458 = !DILocation(line: 311, column: 15, scope: !7364)
!7459 = !DILocation(line: 313, column: 9, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7364, file: !1003, line: 313, column: 9)
!7461 = !DILocation(line: 313, column: 19, scope: !7460)
!7462 = !DILocation(line: 313, column: 32, scope: !7460)
!7463 = !DILocation(line: 313, column: 9, scope: !7364)
!7464 = !DILocation(line: 314, column: 21, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7460, file: !1003, line: 313, column: 38)
!7466 = !DILocation(line: 314, column: 9, scope: !7465)
!7467 = !DILocation(line: 314, column: 14, scope: !7465)
!7468 = !DILocation(line: 314, column: 19, scope: !7465)
!7469 = !DILocation(line: 315, column: 20, scope: !7465)
!7470 = !DILocation(line: 315, column: 29, scope: !7465)
!7471 = !DILocation(line: 315, column: 9, scope: !7465)
!7472 = !DILocation(line: 316, column: 9, scope: !7465)
!7473 = distinct !{!7473, !7472}
!7474 = !DILocalVariable(name: "stack", scope: !7475, file: !1003, line: 316, type: !6758)
!7475 = distinct !DILexicalBlock(scope: !7465, file: !1003, line: 316, column: 12)
!7476 = !DILocation(line: 316, column: 20, scope: !7475)
!7477 = !DILocalVariable(name: "sp", scope: !7475, file: !1003, line: 316, type: !958)
!7478 = !DILocation(line: 316, column: 38, scope: !7475)
!7479 = !DILocation(line: 316, column: 38, scope: !7480)
!7480 = !DILexicalBlockFile(scope: !7475, file: !1003, discriminator: 1)
!7481 = !DILocation(line: 316, column: 59, scope: !7480)
!7482 = !DILocation(line: 316, column: 45, scope: !7480)
!7483 = !DILocation(line: 316, column: 57, scope: !7480)
!7484 = !DILocation(line: 316, column: 82, scope: !7480)
!7485 = !DILocation(line: 316, column: 91, scope: !7480)
!7486 = !DILocation(line: 316, column: 96, scope: !7480)
!7487 = !DILocation(line: 316, column: 68, scope: !7480)
!7488 = !DILocation(line: 316, column: 80, scope: !7480)
!7489 = !DILocation(line: 316, column: 100, scope: !7480)
!7490 = !DILocation(line: 316, column: 106, scope: !7491)
!7491 = !DILexicalBlockFile(scope: !7475, file: !1003, discriminator: 2)
!7492 = !DILocation(line: 316, column: 100, scope: !7491)
!7493 = !DILocalVariable(name: "start", scope: !7494, file: !1003, line: 316, type: !2419)
!7494 = distinct !DILexicalBlock(scope: !7475, file: !1003, line: 316, column: 109)
!7495 = !DILocation(line: 316, column: 120, scope: !7494)
!7496 = !DILocation(line: 316, column: 133, scope: !7497)
!7497 = !DILexicalBlockFile(scope: !7494, file: !1003, discriminator: 3)
!7498 = !DILocation(line: 316, column: 127, scope: !7497)
!7499 = !DILocation(line: 316, column: 120, scope: !7497)
!7500 = !DILocalVariable(name: "end", scope: !7494, file: !1003, line: 316, type: !2419)
!7501 = !DILocation(line: 316, column: 152, scope: !7494)
!7502 = !DILocation(line: 316, column: 165, scope: !7497)
!7503 = !DILocation(line: 316, column: 158, scope: !7497)
!7504 = !DILocation(line: 316, column: 152, scope: !7497)
!7505 = !DILocation(line: 316, column: 173, scope: !7497)
!7506 = !DILocation(line: 316, column: 179, scope: !7507)
!7507 = !DILexicalBlockFile(scope: !7494, file: !1003, discriminator: 4)
!7508 = !DILocation(line: 316, column: 187, scope: !7507)
!7509 = !DILocation(line: 316, column: 185, scope: !7507)
!7510 = !DILocation(line: 316, column: 173, scope: !7507)
!7511 = !DILocation(line: 316, column: 196, scope: !7512)
!7512 = !DILexicalBlockFile(scope: !7513, file: !1003, discriminator: 5)
!7513 = distinct !DILexicalBlock(scope: !7514, file: !1003, line: 316, column: 196)
!7514 = distinct !DILexicalBlock(scope: !7494, file: !1003, line: 316, column: 191)
!7515 = !DILocation(line: 316, column: 204, scope: !7512)
!7516 = !DILocation(line: 316, column: 207, scope: !7512)
!7517 = !DILocation(line: 316, column: 202, scope: !7512)
!7518 = !DILocalVariable(name: "checksort", scope: !7519, file: !1003, line: 316, type: !958)
!7519 = distinct !DILexicalBlock(scope: !7513, file: !1003, line: 316, column: 211)
!7520 = !DILocation(line: 316, column: 217, scope: !7519)
!7521 = !DILocation(line: 316, column: 217, scope: !7522)
!7522 = !DILexicalBlockFile(scope: !7519, file: !1003, discriminator: 6)
!7523 = !DILocalVariable(name: "right", scope: !7519, file: !1003, line: 316, type: !2419)
!7524 = !DILocation(line: 316, column: 239, scope: !7519)
!7525 = !DILocation(line: 316, column: 247, scope: !7522)
!7526 = !DILocation(line: 316, column: 250, scope: !7522)
!7527 = !DILocation(line: 316, column: 239, scope: !7522)
!7528 = !DILocalVariable(name: "left", scope: !7519, file: !1003, line: 316, type: !2419)
!7529 = !DILocation(line: 316, column: 263, scope: !7519)
!7530 = !DILocation(line: 316, column: 270, scope: !7522)
!7531 = !DILocation(line: 316, column: 275, scope: !7522)
!7532 = !DILocation(line: 316, column: 263, scope: !7522)
!7533 = !DILocalVariable(name: "mid", scope: !7519, file: !1003, line: 316, type: !2419)
!7534 = !DILocation(line: 316, column: 288, scope: !7519)
!7535 = !DILocation(line: 316, column: 294, scope: !7522)
!7536 = !DILocation(line: 316, column: 304, scope: !7522)
!7537 = !DILocation(line: 316, column: 308, scope: !7522)
!7538 = !DILocation(line: 316, column: 307, scope: !7522)
!7539 = !DILocation(line: 316, column: 314, scope: !7522)
!7540 = !DILocation(line: 316, column: 300, scope: !7522)
!7541 = !DILocation(line: 316, column: 288, scope: !7522)
!7542 = !DILocation(line: 316, column: 355, scope: !7522)
!7543 = !DILocation(line: 316, column: 362, scope: !7522)
!7544 = !DILocation(line: 316, column: 323, scope: !7522)
!7545 = !DILocation(line: 316, column: 367, scope: !7522)
!7546 = !DILocation(line: 316, column: 410, scope: !7547)
!7547 = !DILexicalBlockFile(scope: !7548, file: !1003, discriminator: 7)
!7548 = distinct !DILexicalBlock(scope: !7549, file: !1003, line: 316, column: 377)
!7549 = distinct !DILexicalBlock(scope: !7550, file: !1003, line: 316, column: 372)
!7550 = distinct !DILexicalBlock(scope: !7519, file: !1003, line: 316, column: 323)
!7551 = !DILocation(line: 316, column: 415, scope: !7547)
!7552 = !DILocation(line: 316, column: 377, scope: !7547)
!7553 = !DILocation(line: 316, column: 420, scope: !7547)
!7554 = !DILocation(line: 316, column: 425, scope: !7555)
!7555 = !DILexicalBlockFile(scope: !7548, file: !1003, discriminator: 8)
!7556 = distinct !{!7556, !7557}
!7557 = !DILocation(line: 316, column: 425, scope: !7548)
!7558 = !DILocalVariable(name: "SWAP_tmp", scope: !7559, file: !1003, line: 316, type: !990)
!7559 = distinct !DILexicalBlock(scope: !7548, file: !1003, line: 316, column: 427)
!7560 = !DILocation(line: 316, column: 436, scope: !7559)
!7561 = !DILocation(line: 316, column: 447, scope: !7562)
!7562 = !DILexicalBlockFile(scope: !7559, file: !1003, discriminator: 9)
!7563 = !DILocation(line: 316, column: 446, scope: !7562)
!7564 = !DILocation(line: 316, column: 436, scope: !7562)
!7565 = !DILocation(line: 316, column: 459, scope: !7562)
!7566 = !DILocation(line: 316, column: 458, scope: !7562)
!7567 = !DILocation(line: 316, column: 453, scope: !7562)
!7568 = !DILocation(line: 316, column: 456, scope: !7562)
!7569 = !DILocation(line: 316, column: 474, scope: !7562)
!7570 = !DILocation(line: 316, column: 467, scope: !7562)
!7571 = !DILocation(line: 316, column: 472, scope: !7562)
!7572 = !DILocation(line: 316, column: 483, scope: !7562)
!7573 = !DILocation(line: 316, column: 483, scope: !7574)
!7574 = !DILexicalBlockFile(scope: !7559, file: !1003, discriminator: 10)
!7575 = !DILocation(line: 316, column: 499, scope: !7576)
!7576 = !DILexicalBlockFile(scope: !7548, file: !1003, discriminator: 11)
!7577 = distinct !{!7577, !7578}
!7578 = !DILocation(line: 316, column: 499, scope: !7548)
!7579 = !DILocalVariable(name: "SWAP_tmp", scope: !7580, file: !1003, line: 316, type: !990)
!7580 = distinct !DILexicalBlock(scope: !7548, file: !1003, line: 316, column: 501)
!7581 = !DILocation(line: 316, column: 510, scope: !7580)
!7582 = !DILocation(line: 316, column: 521, scope: !7583)
!7583 = !DILexicalBlockFile(scope: !7580, file: !1003, discriminator: 12)
!7584 = !DILocation(line: 316, column: 520, scope: !7583)
!7585 = !DILocation(line: 316, column: 510, scope: !7583)
!7586 = !DILocation(line: 316, column: 533, scope: !7583)
!7587 = !DILocation(line: 316, column: 532, scope: !7583)
!7588 = !DILocation(line: 316, column: 527, scope: !7583)
!7589 = !DILocation(line: 316, column: 530, scope: !7583)
!7590 = !DILocation(line: 316, column: 548, scope: !7583)
!7591 = !DILocation(line: 316, column: 541, scope: !7583)
!7592 = !DILocation(line: 316, column: 546, scope: !7583)
!7593 = !DILocation(line: 316, column: 557, scope: !7583)
!7594 = !DILocation(line: 316, column: 568, scope: !7595)
!7595 = !DILexicalBlockFile(scope: !7549, file: !1003, discriminator: 13)
!7596 = !DILocation(line: 316, column: 610, scope: !7597)
!7597 = !DILexicalBlockFile(scope: !7598, file: !1003, discriminator: 14)
!7598 = distinct !DILexicalBlock(scope: !7599, file: !1003, line: 316, column: 578)
!7599 = distinct !DILexicalBlock(scope: !7550, file: !1003, line: 316, column: 573)
!7600 = !DILocation(line: 316, column: 617, scope: !7597)
!7601 = !DILocation(line: 316, column: 578, scope: !7597)
!7602 = !DILocation(line: 316, column: 622, scope: !7597)
!7603 = !DILocation(line: 316, column: 627, scope: !7604)
!7604 = !DILexicalBlockFile(scope: !7598, file: !1003, discriminator: 15)
!7605 = distinct !{!7605, !7606}
!7606 = !DILocation(line: 316, column: 627, scope: !7598)
!7607 = !DILocalVariable(name: "SWAP_tmp", scope: !7608, file: !1003, line: 316, type: !990)
!7608 = distinct !DILexicalBlock(scope: !7598, file: !1003, line: 316, column: 629)
!7609 = !DILocation(line: 316, column: 638, scope: !7608)
!7610 = !DILocation(line: 316, column: 649, scope: !7611)
!7611 = !DILexicalBlockFile(scope: !7608, file: !1003, discriminator: 16)
!7612 = !DILocation(line: 316, column: 648, scope: !7611)
!7613 = !DILocation(line: 316, column: 638, scope: !7611)
!7614 = !DILocation(line: 316, column: 661, scope: !7611)
!7615 = !DILocation(line: 316, column: 660, scope: !7611)
!7616 = !DILocation(line: 316, column: 655, scope: !7611)
!7617 = !DILocation(line: 316, column: 658, scope: !7611)
!7618 = !DILocation(line: 316, column: 676, scope: !7611)
!7619 = !DILocation(line: 316, column: 669, scope: !7611)
!7620 = !DILocation(line: 316, column: 674, scope: !7611)
!7621 = !DILocation(line: 316, column: 685, scope: !7611)
!7622 = !DILocation(line: 316, column: 685, scope: !7623)
!7623 = !DILexicalBlockFile(scope: !7608, file: !1003, discriminator: 17)
!7624 = !DILocation(line: 316, column: 710, scope: !7625)
!7625 = !DILexicalBlockFile(scope: !7598, file: !1003, discriminator: 18)
!7626 = !DILocation(line: 316, column: 752, scope: !7627)
!7627 = !DILexicalBlockFile(scope: !7628, file: !1003, discriminator: 19)
!7628 = distinct !DILexicalBlock(scope: !7519, file: !1003, line: 316, column: 720)
!7629 = !DILocation(line: 316, column: 757, scope: !7627)
!7630 = !DILocation(line: 316, column: 720, scope: !7627)
!7631 = !DILocation(line: 316, column: 762, scope: !7627)
!7632 = !DILocation(line: 316, column: 768, scope: !7633)
!7633 = !DILexicalBlockFile(scope: !7634, file: !1003, discriminator: 20)
!7634 = distinct !DILexicalBlock(scope: !7628, file: !1003, line: 316, column: 766)
!7635 = distinct !{!7635, !7636}
!7636 = !DILocation(line: 316, column: 768, scope: !7634)
!7637 = !DILocalVariable(name: "SWAP_tmp", scope: !7638, file: !1003, line: 316, type: !990)
!7638 = distinct !DILexicalBlock(scope: !7634, file: !1003, line: 316, column: 770)
!7639 = !DILocation(line: 316, column: 779, scope: !7638)
!7640 = !DILocation(line: 316, column: 790, scope: !7641)
!7641 = !DILexicalBlockFile(scope: !7638, file: !1003, discriminator: 21)
!7642 = !DILocation(line: 316, column: 789, scope: !7641)
!7643 = !DILocation(line: 316, column: 779, scope: !7641)
!7644 = !DILocation(line: 316, column: 802, scope: !7641)
!7645 = !DILocation(line: 316, column: 801, scope: !7641)
!7646 = !DILocation(line: 316, column: 796, scope: !7641)
!7647 = !DILocation(line: 316, column: 799, scope: !7641)
!7648 = !DILocation(line: 316, column: 813, scope: !7641)
!7649 = !DILocation(line: 316, column: 808, scope: !7641)
!7650 = !DILocation(line: 316, column: 811, scope: !7641)
!7651 = !DILocation(line: 316, column: 822, scope: !7641)
!7652 = !DILocation(line: 316, column: 842, scope: !7653)
!7653 = !DILexicalBlockFile(scope: !7634, file: !1003, discriminator: 22)
!7654 = !DILocation(line: 316, column: 846, scope: !7653)
!7655 = !DILocation(line: 316, column: 851, scope: !7656)
!7656 = !DILexicalBlockFile(scope: !7657, file: !1003, discriminator: 23)
!7657 = distinct !DILexicalBlock(scope: !7519, file: !1003, line: 316, column: 851)
!7658 = !DILocation(line: 316, column: 860, scope: !7656)
!7659 = !DILocation(line: 316, column: 863, scope: !7656)
!7660 = !DILocation(line: 316, column: 857, scope: !7656)
!7661 = !DILocation(line: 316, column: 867, scope: !7662)
!7662 = !DILexicalBlockFile(scope: !7657, file: !1003, discriminator: 24)
!7663 = !DILocation(line: 316, column: 874, scope: !7664)
!7664 = !DILexicalBlockFile(scope: !7519, file: !1003, discriminator: 25)
!7665 = distinct !{!7665, !7666}
!7666 = !DILocation(line: 316, column: 874, scope: !7519)
!7667 = !DILocalVariable(name: "SWAP_tmp", scope: !7668, file: !1003, line: 316, type: !990)
!7668 = distinct !DILexicalBlock(scope: !7519, file: !1003, line: 316, column: 876)
!7669 = !DILocation(line: 316, column: 885, scope: !7668)
!7670 = !DILocation(line: 316, column: 896, scope: !7671)
!7671 = !DILexicalBlockFile(scope: !7668, file: !1003, discriminator: 26)
!7672 = !DILocation(line: 316, column: 895, scope: !7671)
!7673 = !DILocation(line: 316, column: 885, scope: !7671)
!7674 = !DILocation(line: 316, column: 907, scope: !7671)
!7675 = !DILocation(line: 316, column: 902, scope: !7671)
!7676 = !DILocation(line: 316, column: 905, scope: !7671)
!7677 = !DILocation(line: 316, column: 925, scope: !7671)
!7678 = !DILocation(line: 316, column: 916, scope: !7671)
!7679 = !DILocation(line: 316, column: 923, scope: !7671)
!7680 = !DILocation(line: 316, column: 934, scope: !7671)
!7681 = !DILocation(line: 316, column: 945, scope: !7682)
!7682 = !DILexicalBlockFile(scope: !7519, file: !1003, discriminator: 27)
!7683 = !DILocation(line: 316, column: 951, scope: !7684)
!7684 = !DILexicalBlockFile(scope: !7519, file: !1003, discriminator: 28)
!7685 = !DILocation(line: 316, column: 959, scope: !7684)
!7686 = !DILocation(line: 316, column: 956, scope: !7684)
!7687 = !DILocation(line: 316, column: 945, scope: !7684)
!7688 = !DILocation(line: 316, column: 967, scope: !7689)
!7689 = !DILexicalBlockFile(scope: !7690, file: !1003, discriminator: 29)
!7690 = distinct !DILexicalBlock(scope: !7519, file: !1003, line: 316, column: 965)
!7691 = !DILocation(line: 316, column: 973, scope: !7692)
!7692 = !DILexicalBlockFile(scope: !7690, file: !1003, discriminator: 30)
!7693 = !DILocation(line: 316, column: 979, scope: !7692)
!7694 = !DILocation(line: 316, column: 977, scope: !7692)
!7695 = !DILocation(line: 316, column: 985, scope: !7692)
!7696 = !DILocation(line: 316, column: 1020, scope: !7697)
!7697 = !DILexicalBlockFile(scope: !7690, file: !1003, discriminator: 31)
!7698 = !DILocation(line: 316, column: 1026, scope: !7697)
!7699 = !DILocation(line: 316, column: 1029, scope: !7697)
!7700 = !DILocation(line: 316, column: 988, scope: !7697)
!7701 = !DILocation(line: 316, column: 1033, scope: !7697)
!7702 = !DILocation(line: 316, column: 967, scope: !7703)
!7703 = !DILexicalBlockFile(scope: !7690, file: !1003, discriminator: 32)
!7704 = !DILocation(line: 316, column: 1042, scope: !7705)
!7705 = !DILexicalBlockFile(scope: !7690, file: !1003, discriminator: 33)
!7706 = !DILocation(line: 316, column: 967, scope: !7705)
!7707 = distinct !{!7707, !7708}
!7708 = !DILocation(line: 316, column: 967, scope: !7690)
!7709 = !DILocation(line: 316, column: 1046, scope: !7710)
!7710 = !DILexicalBlockFile(scope: !7690, file: !1003, discriminator: 34)
!7711 = !DILocation(line: 316, column: 1052, scope: !7712)
!7712 = !DILexicalBlockFile(scope: !7690, file: !1003, discriminator: 35)
!7713 = !DILocation(line: 316, column: 1058, scope: !7712)
!7714 = !DILocation(line: 316, column: 1056, scope: !7712)
!7715 = !DILocation(line: 316, column: 1064, scope: !7712)
!7716 = !DILocation(line: 316, column: 1099, scope: !7717)
!7717 = !DILexicalBlockFile(scope: !7690, file: !1003, discriminator: 36)
!7718 = !DILocation(line: 316, column: 1106, scope: !7717)
!7719 = !DILocation(line: 316, column: 1109, scope: !7717)
!7720 = !DILocation(line: 316, column: 1067, scope: !7717)
!7721 = !DILocation(line: 316, column: 1113, scope: !7717)
!7722 = !DILocation(line: 316, column: 1046, scope: !7723)
!7723 = !DILexicalBlockFile(scope: !7690, file: !1003, discriminator: 37)
!7724 = !DILocation(line: 316, column: 1123, scope: !7725)
!7725 = !DILexicalBlockFile(scope: !7690, file: !1003, discriminator: 38)
!7726 = !DILocation(line: 316, column: 1046, scope: !7725)
!7727 = distinct !{!7727, !7728}
!7728 = !DILocation(line: 316, column: 1046, scope: !7690)
!7729 = !DILocation(line: 316, column: 1130, scope: !7730)
!7730 = !DILexicalBlockFile(scope: !7731, file: !1003, discriminator: 39)
!7731 = distinct !DILexicalBlock(scope: !7690, file: !1003, line: 316, column: 1130)
!7732 = !DILocation(line: 316, column: 1138, scope: !7730)
!7733 = !DILocation(line: 316, column: 1135, scope: !7730)
!7734 = !DILocation(line: 316, column: 1146, scope: !7735)
!7735 = !DILexicalBlockFile(scope: !7736, file: !1003, discriminator: 40)
!7736 = distinct !DILexicalBlock(scope: !7731, file: !1003, line: 316, column: 1144)
!7737 = distinct !{!7737, !7738}
!7738 = !DILocation(line: 316, column: 1146, scope: !7736)
!7739 = !DILocalVariable(name: "SWAP_tmp", scope: !7740, file: !1003, line: 316, type: !990)
!7740 = distinct !DILexicalBlock(scope: !7736, file: !1003, line: 316, column: 1148)
!7741 = !DILocation(line: 316, column: 1157, scope: !7740)
!7742 = !DILocation(line: 316, column: 1168, scope: !7743)
!7743 = !DILexicalBlockFile(scope: !7740, file: !1003, discriminator: 41)
!7744 = !DILocation(line: 316, column: 1167, scope: !7743)
!7745 = !DILocation(line: 316, column: 1157, scope: !7743)
!7746 = !DILocation(line: 316, column: 1184, scope: !7743)
!7747 = !DILocation(line: 316, column: 1183, scope: !7743)
!7748 = !DILocation(line: 316, column: 1176, scope: !7743)
!7749 = !DILocation(line: 316, column: 1181, scope: !7743)
!7750 = !DILocation(line: 316, column: 1197, scope: !7743)
!7751 = !DILocation(line: 316, column: 1191, scope: !7743)
!7752 = !DILocation(line: 316, column: 1195, scope: !7743)
!7753 = !DILocation(line: 316, column: 1206, scope: !7743)
!7754 = !DILocation(line: 316, column: 1221, scope: !7755)
!7755 = !DILexicalBlockFile(scope: !7736, file: !1003, discriminator: 42)
!7756 = !DILocation(line: 316, column: 1230, scope: !7755)
!7757 = !DILocation(line: 316, column: 1234, scope: !7755)
!7758 = !DILocation(line: 316, column: 945, scope: !7759)
!7759 = !DILexicalBlockFile(scope: !7519, file: !1003, discriminator: 43)
!7760 = distinct !{!7760, !7761}
!7761 = !DILocation(line: 316, column: 945, scope: !7519)
!7762 = !DILocation(line: 316, column: 1238, scope: !7763)
!7763 = !DILexicalBlockFile(scope: !7519, file: !1003, discriminator: 44)
!7764 = distinct !{!7764, !7765}
!7765 = !DILocation(line: 316, column: 1238, scope: !7519)
!7766 = !DILocalVariable(name: "SWAP_tmp", scope: !7767, file: !1003, line: 316, type: !990)
!7767 = distinct !DILexicalBlock(scope: !7519, file: !1003, line: 316, column: 1240)
!7768 = !DILocation(line: 316, column: 1249, scope: !7767)
!7769 = !DILocation(line: 316, column: 1260, scope: !7770)
!7770 = !DILexicalBlockFile(scope: !7767, file: !1003, discriminator: 45)
!7771 = !DILocation(line: 316, column: 1259, scope: !7770)
!7772 = !DILocation(line: 316, column: 1249, scope: !7770)
!7773 = !DILocation(line: 316, column: 1273, scope: !7770)
!7774 = !DILocation(line: 316, column: 1267, scope: !7770)
!7775 = !DILocation(line: 316, column: 1271, scope: !7770)
!7776 = !DILocation(line: 316, column: 1291, scope: !7770)
!7777 = !DILocation(line: 316, column: 1282, scope: !7770)
!7778 = !DILocation(line: 316, column: 1289, scope: !7770)
!7779 = !DILocation(line: 316, column: 1300, scope: !7770)
!7780 = !DILocation(line: 316, column: 1314, scope: !7781)
!7781 = !DILexicalBlockFile(scope: !7782, file: !1003, discriminator: 46)
!7782 = distinct !DILexicalBlock(scope: !7519, file: !1003, line: 316, column: 1314)
!7783 = !DILocation(line: 316, column: 1324, scope: !7781)
!7784 = !DILocation(line: 316, column: 1328, scope: !7785)
!7785 = !DILexicalBlockFile(scope: !7782, file: !1003, discriminator: 47)
!7786 = !DILocation(line: 316, column: 1335, scope: !7785)
!7787 = !DILocation(line: 316, column: 1339, scope: !7785)
!7788 = !DILocation(line: 316, column: 1332, scope: !7785)
!7789 = !DILocation(line: 316, column: 1342, scope: !7785)
!7790 = !DILocation(line: 316, column: 1345, scope: !7791)
!7791 = !DILexicalBlockFile(scope: !7782, file: !1003, discriminator: 48)
!7792 = !DILocation(line: 316, column: 1352, scope: !7791)
!7793 = !DILocation(line: 316, column: 1349, scope: !7791)
!7794 = !DILocation(line: 316, column: 1314, scope: !7791)
!7795 = !DILocation(line: 316, column: 1365, scope: !7796)
!7796 = !DILexicalBlockFile(scope: !7797, file: !1003, discriminator: 49)
!7797 = distinct !DILexicalBlock(scope: !7782, file: !1003, line: 316, column: 1358)
!7798 = !DILocation(line: 316, column: 1363, scope: !7796)
!7799 = !DILocation(line: 316, column: 1372, scope: !7796)
!7800 = !DILocation(line: 316, column: 1378, scope: !7801)
!7801 = !DILexicalBlockFile(scope: !7797, file: !1003, discriminator: 50)
!7802 = !DILocation(line: 316, column: 1382, scope: !7801)
!7803 = !DILocation(line: 316, column: 1381, scope: !7801)
!7804 = !DILocation(line: 316, column: 1386, scope: !7801)
!7805 = !DILocation(line: 316, column: 1421, scope: !7806)
!7806 = !DILexicalBlockFile(scope: !7797, file: !1003, discriminator: 51)
!7807 = !DILocation(line: 316, column: 1426, scope: !7806)
!7808 = !DILocation(line: 316, column: 1429, scope: !7806)
!7809 = !DILocation(line: 316, column: 1389, scope: !7806)
!7810 = !DILocation(line: 316, column: 1433, scope: !7806)
!7811 = !DILocation(line: 316, column: 1372, scope: !7812)
!7812 = !DILexicalBlockFile(scope: !7797, file: !1003, discriminator: 52)
!7813 = !DILocation(line: 316, column: 1442, scope: !7814)
!7814 = !DILexicalBlockFile(scope: !7797, file: !1003, discriminator: 53)
!7815 = !DILocation(line: 316, column: 1372, scope: !7814)
!7816 = distinct !{!7816, !7817}
!7817 = !DILocation(line: 316, column: 1372, scope: !7797)
!7818 = !DILocation(line: 316, column: 1449, scope: !7819)
!7819 = !DILexicalBlockFile(scope: !7820, file: !1003, discriminator: 54)
!7820 = distinct !DILexicalBlock(scope: !7797, file: !1003, line: 316, column: 1449)
!7821 = !DILocation(line: 316, column: 1454, scope: !7819)
!7822 = !DILocation(line: 316, column: 1452, scope: !7819)
!7823 = !DILocation(line: 316, column: 1459, scope: !7824)
!7824 = !DILexicalBlockFile(scope: !7820, file: !1003, discriminator: 55)
!7825 = !DILocation(line: 316, column: 1466, scope: !7826)
!7826 = !DILexicalBlockFile(scope: !7797, file: !1003, discriminator: 56)
!7827 = !DILocation(line: 316, column: 1471, scope: !7828)
!7828 = !DILexicalBlockFile(scope: !7829, file: !1003, discriminator: 57)
!7829 = distinct !DILexicalBlock(scope: !7519, file: !1003, line: 316, column: 1471)
!7830 = !DILocation(line: 316, column: 1475, scope: !7828)
!7831 = !DILocation(line: 316, column: 1474, scope: !7828)
!7832 = !DILocation(line: 316, column: 1482, scope: !7828)
!7833 = !DILocation(line: 316, column: 1487, scope: !7828)
!7834 = !DILocation(line: 316, column: 1486, scope: !7828)
!7835 = !DILocation(line: 316, column: 1480, scope: !7828)
!7836 = !DILocation(line: 316, column: 1510, scope: !7837)
!7837 = !DILexicalBlockFile(scope: !7838, file: !1003, discriminator: 58)
!7838 = distinct !DILexicalBlock(scope: !7829, file: !1003, line: 316, column: 1493)
!7839 = !DILocation(line: 316, column: 1501, scope: !7837)
!7840 = !DILocation(line: 316, column: 1495, scope: !7837)
!7841 = !DILocation(line: 316, column: 1508, scope: !7837)
!7842 = !DILocation(line: 316, column: 1533, scope: !7837)
!7843 = !DILocation(line: 316, column: 1525, scope: !7837)
!7844 = !DILocation(line: 316, column: 1517, scope: !7837)
!7845 = !DILocation(line: 316, column: 1531, scope: !7837)
!7846 = !DILocation(line: 316, column: 1548, scope: !7837)
!7847 = !DILocation(line: 316, column: 1552, scope: !7837)
!7848 = !DILocation(line: 316, column: 1546, scope: !7837)
!7849 = !DILocation(line: 316, column: 1556, scope: !7837)
!7850 = !DILocation(line: 316, column: 1578, scope: !7851)
!7851 = !DILexicalBlockFile(scope: !7852, file: !1003, discriminator: 59)
!7852 = distinct !DILexicalBlock(scope: !7829, file: !1003, line: 316, column: 1561)
!7853 = !DILocation(line: 316, column: 1582, scope: !7851)
!7854 = !DILocation(line: 316, column: 1569, scope: !7851)
!7855 = !DILocation(line: 316, column: 1563, scope: !7851)
!7856 = !DILocation(line: 316, column: 1576, scope: !7851)
!7857 = !DILocation(line: 316, column: 1602, scope: !7851)
!7858 = !DILocation(line: 316, column: 1594, scope: !7851)
!7859 = !DILocation(line: 316, column: 1586, scope: !7851)
!7860 = !DILocation(line: 316, column: 1600, scope: !7851)
!7861 = !DILocation(line: 316, column: 1613, scope: !7851)
!7862 = !DILocation(line: 316, column: 1611, scope: !7851)
!7863 = !DILocation(line: 316, column: 1622, scope: !7864)
!7864 = !DILexicalBlockFile(scope: !7519, file: !1003, discriminator: 60)
!7865 = !DILocation(line: 316, column: 1664, scope: !7866)
!7866 = !DILexicalBlockFile(scope: !7867, file: !1003, discriminator: 61)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !1003, line: 316, column: 1632)
!7868 = distinct !DILexicalBlock(scope: !7513, file: !1003, line: 316, column: 1627)
!7869 = !DILocation(line: 316, column: 1671, scope: !7866)
!7870 = !DILocation(line: 316, column: 1632, scope: !7866)
!7871 = !DILocation(line: 316, column: 1676, scope: !7866)
!7872 = !DILocation(line: 316, column: 1681, scope: !7873)
!7873 = !DILexicalBlockFile(scope: !7867, file: !1003, discriminator: 62)
!7874 = distinct !{!7874, !7875}
!7875 = !DILocation(line: 316, column: 1681, scope: !7867)
!7876 = !DILocalVariable(name: "SWAP_tmp", scope: !7877, file: !1003, line: 316, type: !990)
!7877 = distinct !DILexicalBlock(scope: !7867, file: !1003, line: 316, column: 1683)
!7878 = !DILocation(line: 316, column: 1692, scope: !7877)
!7879 = !DILocation(line: 316, column: 1703, scope: !7880)
!7880 = !DILexicalBlockFile(scope: !7877, file: !1003, discriminator: 63)
!7881 = !DILocation(line: 316, column: 1702, scope: !7880)
!7882 = !DILocation(line: 316, column: 1692, scope: !7880)
!7883 = !DILocation(line: 316, column: 1715, scope: !7880)
!7884 = !DILocation(line: 316, column: 1714, scope: !7880)
!7885 = !DILocation(line: 316, column: 1709, scope: !7880)
!7886 = !DILocation(line: 316, column: 1712, scope: !7880)
!7887 = !DILocation(line: 316, column: 1730, scope: !7880)
!7888 = !DILocation(line: 316, column: 1723, scope: !7880)
!7889 = !DILocation(line: 316, column: 1728, scope: !7880)
!7890 = !DILocation(line: 316, column: 1739, scope: !7880)
!7891 = !DILocation(line: 316, column: 1739, scope: !7892)
!7892 = !DILexicalBlockFile(scope: !7877, file: !1003, discriminator: 64)
!7893 = !DILocation(line: 316, column: 1750, scope: !7894)
!7894 = !DILexicalBlockFile(scope: !7868, file: !1003, discriminator: 65)
!7895 = !DILocation(line: 316, column: 173, scope: !7896)
!7896 = !DILexicalBlockFile(scope: !7494, file: !1003, discriminator: 66)
!7897 = distinct !{!7897, !7898}
!7898 = !DILocation(line: 316, column: 173, scope: !7494)
!7899 = !DILocation(line: 316, column: 100, scope: !7900)
!7900 = !DILexicalBlockFile(scope: !7475, file: !1003, discriminator: 67)
!7901 = distinct !{!7901, !7902}
!7902 = !DILocation(line: 316, column: 100, scope: !7475)
!7903 = !DILocation(line: 316, column: 1762, scope: !7904)
!7904 = !DILexicalBlockFile(scope: !7475, file: !1003, discriminator: 68)
!7905 = !DILocation(line: 317, column: 16, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7465, file: !1003, line: 317, column: 9)
!7907 = !DILocation(line: 317, column: 14, scope: !7906)
!7908 = !DILocation(line: 317, column: 21, scope: !7909)
!7909 = !DILexicalBlockFile(scope: !7910, file: !1003, discriminator: 1)
!7910 = distinct !DILexicalBlock(scope: !7906, file: !1003, line: 317, column: 9)
!7911 = !DILocation(line: 317, column: 25, scope: !7909)
!7912 = !DILocation(line: 317, column: 35, scope: !7909)
!7913 = !DILocation(line: 317, column: 23, scope: !7909)
!7914 = !DILocation(line: 317, column: 9, scope: !7909)
!7915 = !DILocation(line: 318, column: 34, scope: !7910)
!7916 = !DILocation(line: 318, column: 26, scope: !7910)
!7917 = !DILocation(line: 318, column: 13, scope: !7910)
!7918 = !DILocation(line: 318, column: 18, scope: !7910)
!7919 = !DILocation(line: 318, column: 23, scope: !7910)
!7920 = !DILocation(line: 317, column: 50, scope: !7921)
!7921 = !DILexicalBlockFile(scope: !7910, file: !1003, discriminator: 2)
!7922 = !DILocation(line: 317, column: 9, scope: !7921)
!7923 = distinct !{!7923, !7924}
!7924 = !DILocation(line: 317, column: 9, scope: !7465)
!7925 = !DILocation(line: 319, column: 5, scope: !7465)
!7926 = !DILocation(line: 319, column: 16, scope: !7927)
!7927 = !DILexicalBlockFile(scope: !7928, file: !1003, discriminator: 1)
!7928 = distinct !DILexicalBlock(scope: !7460, file: !1003, line: 319, column: 16)
!7929 = !DILocation(line: 319, column: 26, scope: !7927)
!7930 = !DILocation(line: 319, column: 39, scope: !7927)
!7931 = !DILocation(line: 320, column: 23, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7928, file: !1003, line: 319, column: 46)
!7933 = !DILocation(line: 320, column: 28, scope: !7932)
!7934 = !DILocation(line: 320, column: 22, scope: !7932)
!7935 = !DILocation(line: 320, column: 9, scope: !7932)
!7936 = !DILocation(line: 320, column: 14, scope: !7932)
!7937 = !DILocation(line: 320, column: 19, scope: !7932)
!7938 = !DILocation(line: 321, column: 5, scope: !7932)
!7939 = !DILocation(line: 321, column: 16, scope: !7940)
!7940 = !DILexicalBlockFile(scope: !7941, file: !1003, discriminator: 1)
!7941 = distinct !DILexicalBlock(scope: !7928, file: !1003, line: 321, column: 16)
!7942 = !DILocation(line: 321, column: 26, scope: !7940)
!7943 = !DILocation(line: 321, column: 39, scope: !7940)
!7944 = !DILocation(line: 322, column: 23, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7941, file: !1003, line: 321, column: 46)
!7946 = !DILocation(line: 322, column: 28, scope: !7945)
!7947 = !DILocation(line: 322, column: 22, scope: !7945)
!7948 = !DILocation(line: 322, column: 9, scope: !7945)
!7949 = !DILocation(line: 322, column: 14, scope: !7945)
!7950 = !DILocation(line: 322, column: 19, scope: !7945)
!7951 = !DILocation(line: 323, column: 5, scope: !7945)
!7952 = !DILocation(line: 324, column: 16, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7941, file: !1003, line: 323, column: 12)
!7954 = !DILocation(line: 324, column: 20, scope: !7953)
!7955 = !DILocation(line: 325, column: 46, scope: !7953)
!7956 = !DILocation(line: 325, column: 56, scope: !7953)
!7957 = !DILocation(line: 324, column: 9, scope: !7953)
!7958 = !DILocation(line: 326, column: 9, scope: !7953)
!7959 = !DILocation(line: 328, column: 26, scope: !7364)
!7960 = !DILocation(line: 328, column: 31, scope: !7364)
!7961 = !DILocation(line: 328, column: 23, scope: !7364)
!7962 = !DILocation(line: 328, column: 18, scope: !7364)
!7963 = !DILocation(line: 328, column: 40, scope: !7964)
!7964 = !DILexicalBlockFile(scope: !7364, file: !1003, discriminator: 1)
!7965 = !DILocation(line: 328, column: 45, scope: !7964)
!7966 = !DILocation(line: 328, column: 18, scope: !7964)
!7967 = !DILocation(line: 328, column: 18, scope: !7968)
!7968 = !DILexicalBlockFile(scope: !7364, file: !1003, discriminator: 2)
!7969 = !DILocation(line: 328, column: 18, scope: !7970)
!7970 = !DILexicalBlockFile(scope: !7364, file: !1003, discriminator: 3)
!7971 = !DILocation(line: 328, column: 5, scope: !7970)
!7972 = !DILocation(line: 328, column: 10, scope: !7970)
!7973 = !DILocation(line: 328, column: 15, scope: !7970)
!7974 = !DILocation(line: 331, column: 9, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7364, file: !1003, line: 331, column: 9)
!7976 = !DILocation(line: 331, column: 14, scope: !7975)
!7977 = !DILocation(line: 331, column: 26, scope: !7975)
!7978 = !DILocation(line: 331, column: 9, scope: !7364)
!7979 = !DILocation(line: 332, column: 26, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7975, file: !1003, line: 331, column: 36)
!7981 = !DILocation(line: 333, column: 5, scope: !7980)
!7982 = !DILocation(line: 333, column: 16, scope: !7983)
!7983 = !DILexicalBlockFile(scope: !7984, file: !1003, discriminator: 1)
!7984 = distinct !DILexicalBlock(scope: !7975, file: !1003, line: 333, column: 16)
!7985 = !DILocation(line: 333, column: 21, scope: !7983)
!7986 = !DILocation(line: 333, column: 33, scope: !7983)
!7987 = !DILocation(line: 334, column: 26, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7984, file: !1003, line: 333, column: 43)
!7989 = !DILocation(line: 335, column: 5, scope: !7988)
!7990 = !DILocation(line: 335, column: 16, scope: !7991)
!7991 = !DILexicalBlockFile(scope: !7992, file: !1003, discriminator: 1)
!7992 = distinct !DILexicalBlock(scope: !7984, file: !1003, line: 335, column: 16)
!7993 = !DILocation(line: 335, column: 21, scope: !7991)
!7994 = !DILocation(line: 335, column: 33, scope: !7991)
!7995 = !DILocation(line: 336, column: 26, scope: !7992)
!7996 = !DILocation(line: 336, column: 9, scope: !7992)
!7997 = !DILocation(line: 338, column: 9, scope: !7992)
!7998 = distinct !{!7998, !7997}
!7999 = !DILocation(line: 338, column: 26, scope: !8000)
!8000 = !DILexicalBlockFile(scope: !8001, file: !1003, discriminator: 1)
!8001 = distinct !DILexicalBlock(scope: !8002, file: !1003, line: 338, column: 24)
!8002 = distinct !DILexicalBlock(scope: !8003, file: !1003, line: 338, column: 18)
!8003 = distinct !DILexicalBlock(scope: !7992, file: !1003, line: 338, column: 12)
!8004 = !DILocation(line: 338, column: 90, scope: !8005)
!8005 = !DILexicalBlockFile(scope: !8000, file: !1003, discriminator: 2)
!8006 = !DILocation(line: 338, column: 90, scope: !8000)
!8007 = !DILocation(line: 340, column: 9, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !7364, file: !1003, line: 340, column: 9)
!8009 = !DILocation(line: 340, column: 14, scope: !8008)
!8010 = !DILocation(line: 340, column: 21, scope: !8008)
!8011 = !DILocation(line: 340, column: 26, scope: !8008)
!8012 = !DILocation(line: 340, column: 19, scope: !8008)
!8013 = !DILocation(line: 340, column: 33, scope: !8008)
!8014 = !DILocation(line: 340, column: 31, scope: !8008)
!8015 = !DILocation(line: 340, column: 9, scope: !7364)
!8016 = !DILocation(line: 341, column: 16, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8008, file: !1003, line: 340, column: 51)
!8018 = !DILocation(line: 341, column: 20, scope: !8017)
!8019 = !DILocation(line: 342, column: 66, scope: !8017)
!8020 = !DILocation(line: 342, column: 71, scope: !8017)
!8021 = !DILocation(line: 342, column: 78, scope: !8017)
!8022 = !DILocation(line: 342, column: 83, scope: !8017)
!8023 = !DILocation(line: 342, column: 76, scope: !8017)
!8024 = !DILocation(line: 341, column: 9, scope: !8017)
!8025 = !DILocation(line: 343, column: 9, scope: !8017)
!8026 = !DILocation(line: 346, column: 10, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !7364, file: !1003, line: 346, column: 9)
!8028 = !DILocation(line: 346, column: 20, scope: !8027)
!8029 = !DILocation(line: 346, column: 9, scope: !7364)
!8030 = !DILocalVariable(name: "dk", scope: !8031, file: !1003, line: 347, type: !958)
!8031 = distinct !DILexicalBlock(scope: !8027, file: !1003, line: 346, column: 35)
!8032 = !DILocation(line: 347, column: 13, scope: !8031)
!8033 = !DILocalVariable(name: "k2diff", scope: !8031, file: !1003, line: 347, type: !958)
!8034 = !DILocation(line: 347, column: 17, scope: !8031)
!8035 = !DILocation(line: 349, column: 14, scope: !8031)
!8036 = !DILocation(line: 349, column: 24, scope: !8031)
!8037 = !DILocation(line: 349, column: 39, scope: !8031)
!8038 = !DILocation(line: 349, column: 12, scope: !8031)
!8039 = !DILocation(line: 350, column: 27, scope: !8031)
!8040 = !DILocation(line: 350, column: 32, scope: !8031)
!8041 = !DILocation(line: 350, column: 39, scope: !8031)
!8042 = !DILocation(line: 350, column: 44, scope: !8031)
!8043 = !DILocation(line: 350, column: 37, scope: !8031)
!8044 = !DILocation(line: 350, column: 52, scope: !8031)
!8045 = !DILocation(line: 350, column: 54, scope: !8031)
!8046 = !DILocation(line: 350, column: 49, scope: !8031)
!8047 = !DILocation(line: 350, column: 62, scope: !8031)
!8048 = !DILocation(line: 350, column: 59, scope: !8031)
!8049 = !DILocation(line: 350, column: 66, scope: !8031)
!8050 = !DILocation(line: 350, column: 9, scope: !8031)
!8051 = !DILocation(line: 350, column: 14, scope: !8031)
!8052 = !DILocation(line: 350, column: 23, scope: !8031)
!8053 = !DILocation(line: 351, column: 28, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8031, file: !1003, line: 351, column: 13)
!8055 = !DILocation(line: 351, column: 32, scope: !8054)
!8056 = !DILocation(line: 351, column: 39, scope: !8054)
!8057 = !DILocation(line: 351, column: 44, scope: !8054)
!8058 = !DILocation(line: 351, column: 54, scope: !8054)
!8059 = !DILocation(line: 351, column: 59, scope: !8054)
!8060 = !DILocation(line: 351, column: 75, scope: !8054)
!8061 = !DILocation(line: 351, column: 13, scope: !8054)
!8062 = !DILocation(line: 351, column: 13, scope: !8031)
!8063 = !DILocation(line: 352, column: 13, scope: !8054)
!8064 = !DILocation(line: 354, column: 16, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8031, file: !1003, line: 354, column: 9)
!8066 = !DILocation(line: 354, column: 14, scope: !8065)
!8067 = !DILocation(line: 354, column: 21, scope: !8068)
!8068 = !DILexicalBlockFile(scope: !8069, file: !1003, discriminator: 1)
!8069 = distinct !DILexicalBlock(scope: !8065, file: !1003, line: 354, column: 9)
!8070 = !DILocation(line: 354, column: 26, scope: !8068)
!8071 = !DILocation(line: 354, column: 31, scope: !8068)
!8072 = !DILocation(line: 354, column: 23, scope: !8068)
!8073 = !DILocation(line: 354, column: 9, scope: !8068)
!8074 = !DILocation(line: 355, column: 32, scope: !8069)
!8075 = !DILocation(line: 355, column: 27, scope: !8069)
!8076 = !DILocation(line: 355, column: 13, scope: !8069)
!8077 = !DILocation(line: 355, column: 18, scope: !8069)
!8078 = !DILocation(line: 355, column: 30, scope: !8069)
!8079 = !DILocation(line: 354, column: 42, scope: !8080)
!8080 = !DILexicalBlockFile(scope: !8069, file: !1003, discriminator: 2)
!8081 = !DILocation(line: 354, column: 9, scope: !8080)
!8082 = distinct !{!8082, !8083}
!8083 = !DILocation(line: 354, column: 9, scope: !8031)
!8084 = !DILocation(line: 357, column: 18, scope: !8031)
!8085 = !DILocation(line: 357, column: 23, scope: !8031)
!8086 = !DILocation(line: 357, column: 30, scope: !8031)
!8087 = !DILocation(line: 357, column: 35, scope: !8031)
!8088 = !DILocation(line: 357, column: 28, scope: !8031)
!8089 = !DILocation(line: 357, column: 42, scope: !8031)
!8090 = !DILocation(line: 357, column: 47, scope: !8031)
!8091 = !DILocation(line: 357, column: 58, scope: !8031)
!8092 = !DILocation(line: 357, column: 56, scope: !8031)
!8093 = !DILocation(line: 357, column: 40, scope: !8031)
!8094 = !DILocation(line: 357, column: 16, scope: !8031)
!8095 = !DILocation(line: 358, column: 13, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8031, file: !1003, line: 358, column: 13)
!8097 = !DILocation(line: 358, column: 20, scope: !8096)
!8098 = !DILocation(line: 358, column: 13, scope: !8031)
!8099 = !DILocation(line: 359, column: 13, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8096, file: !1003, line: 358, column: 25)
!8101 = !DILocation(line: 359, column: 18, scope: !8100)
!8102 = !DILocation(line: 359, column: 29, scope: !8100)
!8103 = !DILocation(line: 360, column: 33, scope: !8100)
!8104 = !DILocation(line: 360, column: 40, scope: !8100)
!8105 = !DILocation(line: 360, column: 13, scope: !8100)
!8106 = !DILocation(line: 360, column: 18, scope: !8100)
!8107 = !DILocation(line: 360, column: 29, scope: !8100)
!8108 = !DILocation(line: 361, column: 9, scope: !8100)
!8109 = !DILocation(line: 361, column: 20, scope: !8110)
!8110 = !DILexicalBlockFile(scope: !8111, file: !1003, discriminator: 1)
!8111 = distinct !DILexicalBlock(scope: !8096, file: !1003, line: 361, column: 20)
!8112 = !DILocation(line: 362, column: 27, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8111, file: !1003, line: 361, column: 28)
!8114 = !DILocation(line: 362, column: 32, scope: !8113)
!8115 = !DILocation(line: 362, column: 13, scope: !8113)
!8116 = !DILocation(line: 362, column: 18, scope: !8113)
!8117 = !DILocation(line: 362, column: 41, scope: !8113)
!8118 = !DILocation(line: 363, column: 9, scope: !8113)
!8119 = !DILocation(line: 365, column: 28, scope: !8031)
!8120 = !DILocation(line: 365, column: 33, scope: !8031)
!8121 = !DILocation(line: 365, column: 9, scope: !8031)
!8122 = !DILocation(line: 365, column: 14, scope: !8031)
!8123 = !DILocation(line: 365, column: 26, scope: !8031)
!8124 = !DILocation(line: 366, column: 16, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8031, file: !1003, line: 366, column: 9)
!8126 = !DILocation(line: 366, column: 14, scope: !8125)
!8127 = !DILocation(line: 366, column: 21, scope: !8128)
!8128 = !DILexicalBlockFile(scope: !8129, file: !1003, discriminator: 1)
!8129 = distinct !DILexicalBlock(scope: !8125, file: !1003, line: 366, column: 9)
!8130 = !DILocation(line: 366, column: 26, scope: !8128)
!8131 = !DILocation(line: 366, column: 31, scope: !8128)
!8132 = !DILocation(line: 366, column: 23, scope: !8128)
!8133 = !DILocation(line: 366, column: 9, scope: !8128)
!8134 = !DILocation(line: 367, column: 47, scope: !8129)
!8135 = !DILocation(line: 367, column: 49, scope: !8129)
!8136 = !DILocation(line: 367, column: 33, scope: !8129)
!8137 = !DILocation(line: 367, column: 38, scope: !8129)
!8138 = !DILocation(line: 367, column: 27, scope: !8129)
!8139 = !DILocation(line: 367, column: 13, scope: !8129)
!8140 = !DILocation(line: 367, column: 18, scope: !8129)
!8141 = !DILocation(line: 367, column: 30, scope: !8129)
!8142 = !DILocation(line: 366, column: 42, scope: !8143)
!8143 = !DILexicalBlockFile(scope: !8129, file: !1003, discriminator: 2)
!8144 = !DILocation(line: 366, column: 9, scope: !8143)
!8145 = distinct !{!8145, !8146}
!8146 = !DILocation(line: 366, column: 9, scope: !8031)
!8147 = !DILocation(line: 369, column: 5, scope: !8031)
!8148 = !DILocalVariable(name: "half_bands", scope: !8149, file: !1003, line: 370, type: !958)
!8149 = distinct !DILexicalBlock(scope: !8027, file: !1003, line: 369, column: 12)
!8150 = !DILocation(line: 370, column: 13, scope: !8149)
!8151 = !DILocation(line: 370, column: 30, scope: !8149)
!8152 = !DILocation(line: 370, column: 40, scope: !8149)
!8153 = !DILocation(line: 370, column: 28, scope: !8149)
!8154 = !DILocalVariable(name: "two_regions", scope: !8149, file: !1003, line: 371, type: !958)
!8155 = !DILocation(line: 371, column: 13, scope: !8149)
!8156 = !DILocalVariable(name: "num_bands_0", scope: !8149, file: !1003, line: 371, type: !958)
!8157 = !DILocation(line: 371, column: 26, scope: !8149)
!8158 = !DILocalVariable(name: "vdk0_max", scope: !8149, file: !1003, line: 372, type: !958)
!8159 = !DILocation(line: 372, column: 13, scope: !8149)
!8160 = !DILocalVariable(name: "vdk1_min", scope: !8149, file: !1003, line: 372, type: !958)
!8161 = !DILocation(line: 372, column: 23, scope: !8149)
!8162 = !DILocalVariable(name: "vk0", scope: !8149, file: !1003, line: 373, type: !8163)
!8163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 784, align: 16, elements: !1082)
!8164 = !DILocation(line: 373, column: 17, scope: !8149)
!8165 = !DILocalVariable(name: "tmp", scope: !8149, file: !1003, line: 375, type: !958)
!8166 = !DILocation(line: 375, column: 13, scope: !8149)
!8167 = !DILocalVariable(name: "nz", scope: !8149, file: !1003, line: 375, type: !958)
!8168 = !DILocation(line: 375, column: 18, scope: !8149)
!8169 = !DILocation(line: 378, column: 18, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8149, file: !1003, line: 378, column: 13)
!8171 = !DILocation(line: 378, column: 23, scope: !8170)
!8172 = !DILocation(line: 378, column: 16, scope: !8170)
!8173 = !DILocation(line: 378, column: 36, scope: !8170)
!8174 = !DILocation(line: 378, column: 41, scope: !8170)
!8175 = !DILocation(line: 378, column: 34, scope: !8170)
!8176 = !DILocation(line: 378, column: 28, scope: !8170)
!8177 = !DILocation(line: 378, column: 13, scope: !8149)
!8178 = !DILocation(line: 379, column: 25, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8170, file: !1003, line: 378, column: 47)
!8180 = !DILocation(line: 380, column: 29, scope: !8179)
!8181 = !DILocation(line: 380, column: 34, scope: !8179)
!8182 = !DILocation(line: 380, column: 27, scope: !8179)
!8183 = !DILocation(line: 380, column: 13, scope: !8179)
!8184 = !DILocation(line: 380, column: 18, scope: !8179)
!8185 = !DILocation(line: 380, column: 23, scope: !8179)
!8186 = !DILocation(line: 381, column: 9, scope: !8179)
!8187 = !DILocation(line: 382, column: 25, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8170, file: !1003, line: 381, column: 16)
!8189 = !DILocation(line: 383, column: 25, scope: !8188)
!8190 = !DILocation(line: 383, column: 30, scope: !8188)
!8191 = !DILocation(line: 383, column: 13, scope: !8188)
!8192 = !DILocation(line: 383, column: 18, scope: !8188)
!8193 = !DILocation(line: 383, column: 23, scope: !8188)
!8194 = !DILocation(line: 387, column: 16, scope: !8149)
!8195 = !DILocation(line: 387, column: 21, scope: !8149)
!8196 = !DILocation(line: 387, column: 26, scope: !8149)
!8197 = !DILocation(line: 387, column: 35, scope: !8149)
!8198 = !DILocation(line: 387, column: 40, scope: !8149)
!8199 = !DILocation(line: 387, column: 33, scope: !8149)
!8200 = !DILocation(line: 387, column: 13, scope: !8149)
!8201 = !DILocation(line: 388, column: 9, scope: !8149)
!8202 = !DILocation(line: 388, column: 16, scope: !8203)
!8203 = !DILexicalBlockFile(scope: !8149, file: !1003, discriminator: 1)
!8204 = !DILocation(line: 388, column: 20, scope: !8203)
!8205 = !DILocation(line: 388, column: 9, scope: !8203)
!8206 = !DILocation(line: 389, column: 15, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8149, file: !1003, line: 388, column: 34)
!8208 = !DILocation(line: 390, column: 13, scope: !8207)
!8209 = !DILocation(line: 388, column: 9, scope: !8210)
!8210 = !DILexicalBlockFile(scope: !8149, file: !1003, discriminator: 2)
!8211 = distinct !{!8211, !8201}
!8212 = !DILocation(line: 392, column: 25, scope: !8149)
!8213 = !DILocation(line: 392, column: 29, scope: !8149)
!8214 = !DILocation(line: 392, column: 15, scope: !8149)
!8215 = !DILocation(line: 392, column: 13, scope: !8149)
!8216 = !DILocation(line: 393, column: 31, scope: !8149)
!8217 = !DILocation(line: 393, column: 22, scope: !8149)
!8218 = !DILocation(line: 393, column: 35, scope: !8149)
!8219 = !DILocation(line: 393, column: 53, scope: !8149)
!8220 = !DILocation(line: 393, column: 67, scope: !8149)
!8221 = !DILocation(line: 393, column: 15, scope: !8149)
!8222 = !DILocation(line: 393, column: 13, scope: !8149)
!8223 = !DILocation(line: 394, column: 18, scope: !8149)
!8224 = !DILocation(line: 394, column: 22, scope: !8149)
!8225 = !DILocation(line: 394, column: 30, scope: !8149)
!8226 = !DILocation(line: 394, column: 44, scope: !8149)
!8227 = !DILocation(line: 394, column: 42, scope: !8149)
!8228 = !DILocation(line: 394, column: 48, scope: !8149)
!8229 = !DILocation(line: 394, column: 36, scope: !8149)
!8230 = !DILocation(line: 394, column: 58, scope: !8149)
!8231 = !DILocation(line: 394, column: 56, scope: !8149)
!8232 = !DILocation(line: 394, column: 13, scope: !8149)
!8233 = !DILocation(line: 395, column: 25, scope: !8149)
!8234 = !DILocation(line: 395, column: 29, scope: !8149)
!8235 = !DILocation(line: 395, column: 41, scope: !8149)
!8236 = !DILocation(line: 395, column: 48, scope: !8149)
!8237 = !DILocation(line: 395, column: 21, scope: !8149)
!8238 = !DILocation(line: 400, column: 13, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8149, file: !1003, line: 400, column: 13)
!8240 = !DILocation(line: 400, column: 25, scope: !8239)
!8241 = !DILocation(line: 400, column: 13, scope: !8149)
!8242 = !DILocation(line: 401, column: 20, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8239, file: !1003, line: 400, column: 31)
!8244 = !DILocation(line: 401, column: 24, scope: !8243)
!8245 = !DILocation(line: 401, column: 64, scope: !8243)
!8246 = !DILocation(line: 401, column: 13, scope: !8243)
!8247 = !DILocation(line: 402, column: 13, scope: !8243)
!8248 = !DILocation(line: 405, column: 9, scope: !8149)
!8249 = !DILocation(line: 405, column: 16, scope: !8149)
!8250 = !DILocation(line: 407, column: 20, scope: !8149)
!8251 = !DILocation(line: 407, column: 23, scope: !8149)
!8252 = !DILocation(line: 407, column: 27, scope: !8149)
!8253 = !DILocation(line: 407, column: 32, scope: !8149)
!8254 = !DILocation(line: 407, column: 38, scope: !8149)
!8255 = !DILocation(line: 407, column: 43, scope: !8149)
!8256 = !DILocation(line: 407, column: 49, scope: !8149)
!8257 = !DILocation(line: 407, column: 9, scope: !8149)
!8258 = !DILocation(line: 409, column: 9, scope: !8149)
!8259 = distinct !{!8259, !8258}
!8260 = !DILocalVariable(name: "stack", scope: !8261, file: !1003, line: 409, type: !6758)
!8261 = distinct !DILexicalBlock(scope: !8149, file: !1003, line: 409, column: 12)
!8262 = !DILocation(line: 409, column: 20, scope: !8261)
!8263 = !DILocalVariable(name: "sp", scope: !8261, file: !1003, line: 409, type: !958)
!8264 = !DILocation(line: 409, column: 38, scope: !8261)
!8265 = !DILocation(line: 409, column: 38, scope: !8266)
!8266 = !DILexicalBlockFile(scope: !8261, file: !1003, discriminator: 1)
!8267 = !DILocation(line: 409, column: 59, scope: !8266)
!8268 = !DILocation(line: 409, column: 63, scope: !8266)
!8269 = !DILocation(line: 409, column: 45, scope: !8266)
!8270 = !DILocation(line: 409, column: 57, scope: !8266)
!8271 = !DILocation(line: 409, column: 83, scope: !8266)
!8272 = !DILocation(line: 409, column: 87, scope: !8266)
!8273 = !DILocation(line: 409, column: 93, scope: !8266)
!8274 = !DILocation(line: 409, column: 91, scope: !8266)
!8275 = !DILocation(line: 409, column: 105, scope: !8266)
!8276 = !DILocation(line: 409, column: 82, scope: !8266)
!8277 = !DILocation(line: 409, column: 68, scope: !8266)
!8278 = !DILocation(line: 409, column: 80, scope: !8266)
!8279 = !DILocation(line: 409, column: 109, scope: !8266)
!8280 = !DILocation(line: 409, column: 115, scope: !8281)
!8281 = !DILexicalBlockFile(scope: !8261, file: !1003, discriminator: 2)
!8282 = !DILocation(line: 409, column: 109, scope: !8281)
!8283 = !DILocalVariable(name: "start", scope: !8284, file: !1003, line: 409, type: !2419)
!8284 = distinct !DILexicalBlock(scope: !8261, file: !1003, line: 409, column: 118)
!8285 = !DILocation(line: 409, column: 129, scope: !8284)
!8286 = !DILocation(line: 409, column: 142, scope: !8287)
!8287 = !DILexicalBlockFile(scope: !8284, file: !1003, discriminator: 3)
!8288 = !DILocation(line: 409, column: 136, scope: !8287)
!8289 = !DILocation(line: 409, column: 129, scope: !8287)
!8290 = !DILocalVariable(name: "end", scope: !8284, file: !1003, line: 409, type: !2419)
!8291 = !DILocation(line: 409, column: 161, scope: !8284)
!8292 = !DILocation(line: 409, column: 174, scope: !8287)
!8293 = !DILocation(line: 409, column: 167, scope: !8287)
!8294 = !DILocation(line: 409, column: 161, scope: !8287)
!8295 = !DILocation(line: 409, column: 182, scope: !8287)
!8296 = !DILocation(line: 409, column: 188, scope: !8297)
!8297 = !DILexicalBlockFile(scope: !8284, file: !1003, discriminator: 4)
!8298 = !DILocation(line: 409, column: 196, scope: !8297)
!8299 = !DILocation(line: 409, column: 194, scope: !8297)
!8300 = !DILocation(line: 409, column: 182, scope: !8297)
!8301 = !DILocation(line: 409, column: 205, scope: !8302)
!8302 = !DILexicalBlockFile(scope: !8303, file: !1003, discriminator: 5)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !1003, line: 409, column: 205)
!8304 = distinct !DILexicalBlock(scope: !8284, file: !1003, line: 409, column: 200)
!8305 = !DILocation(line: 409, column: 213, scope: !8302)
!8306 = !DILocation(line: 409, column: 216, scope: !8302)
!8307 = !DILocation(line: 409, column: 211, scope: !8302)
!8308 = !DILocalVariable(name: "checksort", scope: !8309, file: !1003, line: 409, type: !958)
!8309 = distinct !DILexicalBlock(scope: !8303, file: !1003, line: 409, column: 220)
!8310 = !DILocation(line: 409, column: 226, scope: !8309)
!8311 = !DILocation(line: 409, column: 226, scope: !8312)
!8312 = !DILexicalBlockFile(scope: !8309, file: !1003, discriminator: 6)
!8313 = !DILocalVariable(name: "right", scope: !8309, file: !1003, line: 409, type: !2419)
!8314 = !DILocation(line: 409, column: 248, scope: !8309)
!8315 = !DILocation(line: 409, column: 256, scope: !8312)
!8316 = !DILocation(line: 409, column: 259, scope: !8312)
!8317 = !DILocation(line: 409, column: 248, scope: !8312)
!8318 = !DILocalVariable(name: "left", scope: !8309, file: !1003, line: 409, type: !2419)
!8319 = !DILocation(line: 409, column: 272, scope: !8309)
!8320 = !DILocation(line: 409, column: 279, scope: !8312)
!8321 = !DILocation(line: 409, column: 284, scope: !8312)
!8322 = !DILocation(line: 409, column: 272, scope: !8312)
!8323 = !DILocalVariable(name: "mid", scope: !8309, file: !1003, line: 409, type: !2419)
!8324 = !DILocation(line: 409, column: 297, scope: !8309)
!8325 = !DILocation(line: 409, column: 303, scope: !8312)
!8326 = !DILocation(line: 409, column: 313, scope: !8312)
!8327 = !DILocation(line: 409, column: 317, scope: !8312)
!8328 = !DILocation(line: 409, column: 316, scope: !8312)
!8329 = !DILocation(line: 409, column: 323, scope: !8312)
!8330 = !DILocation(line: 409, column: 309, scope: !8312)
!8331 = !DILocation(line: 409, column: 297, scope: !8312)
!8332 = !DILocation(line: 409, column: 364, scope: !8312)
!8333 = !DILocation(line: 409, column: 371, scope: !8312)
!8334 = !DILocation(line: 409, column: 332, scope: !8312)
!8335 = !DILocation(line: 409, column: 376, scope: !8312)
!8336 = !DILocation(line: 409, column: 419, scope: !8337)
!8337 = !DILexicalBlockFile(scope: !8338, file: !1003, discriminator: 7)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !1003, line: 409, column: 386)
!8339 = distinct !DILexicalBlock(scope: !8340, file: !1003, line: 409, column: 381)
!8340 = distinct !DILexicalBlock(scope: !8309, file: !1003, line: 409, column: 332)
!8341 = !DILocation(line: 409, column: 424, scope: !8337)
!8342 = !DILocation(line: 409, column: 386, scope: !8337)
!8343 = !DILocation(line: 409, column: 429, scope: !8337)
!8344 = !DILocation(line: 409, column: 434, scope: !8345)
!8345 = !DILexicalBlockFile(scope: !8338, file: !1003, discriminator: 8)
!8346 = distinct !{!8346, !8347}
!8347 = !DILocation(line: 409, column: 434, scope: !8338)
!8348 = !DILocalVariable(name: "SWAP_tmp", scope: !8349, file: !1003, line: 409, type: !990)
!8349 = distinct !DILexicalBlock(scope: !8338, file: !1003, line: 409, column: 436)
!8350 = !DILocation(line: 409, column: 445, scope: !8349)
!8351 = !DILocation(line: 409, column: 456, scope: !8352)
!8352 = !DILexicalBlockFile(scope: !8349, file: !1003, discriminator: 9)
!8353 = !DILocation(line: 409, column: 455, scope: !8352)
!8354 = !DILocation(line: 409, column: 445, scope: !8352)
!8355 = !DILocation(line: 409, column: 468, scope: !8352)
!8356 = !DILocation(line: 409, column: 467, scope: !8352)
!8357 = !DILocation(line: 409, column: 462, scope: !8352)
!8358 = !DILocation(line: 409, column: 465, scope: !8352)
!8359 = !DILocation(line: 409, column: 483, scope: !8352)
!8360 = !DILocation(line: 409, column: 476, scope: !8352)
!8361 = !DILocation(line: 409, column: 481, scope: !8352)
!8362 = !DILocation(line: 409, column: 492, scope: !8352)
!8363 = !DILocation(line: 409, column: 492, scope: !8364)
!8364 = !DILexicalBlockFile(scope: !8349, file: !1003, discriminator: 10)
!8365 = !DILocation(line: 409, column: 508, scope: !8366)
!8366 = !DILexicalBlockFile(scope: !8338, file: !1003, discriminator: 11)
!8367 = distinct !{!8367, !8368}
!8368 = !DILocation(line: 409, column: 508, scope: !8338)
!8369 = !DILocalVariable(name: "SWAP_tmp", scope: !8370, file: !1003, line: 409, type: !990)
!8370 = distinct !DILexicalBlock(scope: !8338, file: !1003, line: 409, column: 510)
!8371 = !DILocation(line: 409, column: 519, scope: !8370)
!8372 = !DILocation(line: 409, column: 530, scope: !8373)
!8373 = !DILexicalBlockFile(scope: !8370, file: !1003, discriminator: 12)
!8374 = !DILocation(line: 409, column: 529, scope: !8373)
!8375 = !DILocation(line: 409, column: 519, scope: !8373)
!8376 = !DILocation(line: 409, column: 542, scope: !8373)
!8377 = !DILocation(line: 409, column: 541, scope: !8373)
!8378 = !DILocation(line: 409, column: 536, scope: !8373)
!8379 = !DILocation(line: 409, column: 539, scope: !8373)
!8380 = !DILocation(line: 409, column: 557, scope: !8373)
!8381 = !DILocation(line: 409, column: 550, scope: !8373)
!8382 = !DILocation(line: 409, column: 555, scope: !8373)
!8383 = !DILocation(line: 409, column: 566, scope: !8373)
!8384 = !DILocation(line: 409, column: 577, scope: !8385)
!8385 = !DILexicalBlockFile(scope: !8339, file: !1003, discriminator: 13)
!8386 = !DILocation(line: 409, column: 619, scope: !8387)
!8387 = !DILexicalBlockFile(scope: !8388, file: !1003, discriminator: 14)
!8388 = distinct !DILexicalBlock(scope: !8389, file: !1003, line: 409, column: 587)
!8389 = distinct !DILexicalBlock(scope: !8340, file: !1003, line: 409, column: 582)
!8390 = !DILocation(line: 409, column: 626, scope: !8387)
!8391 = !DILocation(line: 409, column: 587, scope: !8387)
!8392 = !DILocation(line: 409, column: 631, scope: !8387)
!8393 = !DILocation(line: 409, column: 636, scope: !8394)
!8394 = !DILexicalBlockFile(scope: !8388, file: !1003, discriminator: 15)
!8395 = distinct !{!8395, !8396}
!8396 = !DILocation(line: 409, column: 636, scope: !8388)
!8397 = !DILocalVariable(name: "SWAP_tmp", scope: !8398, file: !1003, line: 409, type: !990)
!8398 = distinct !DILexicalBlock(scope: !8388, file: !1003, line: 409, column: 638)
!8399 = !DILocation(line: 409, column: 647, scope: !8398)
!8400 = !DILocation(line: 409, column: 658, scope: !8401)
!8401 = !DILexicalBlockFile(scope: !8398, file: !1003, discriminator: 16)
!8402 = !DILocation(line: 409, column: 657, scope: !8401)
!8403 = !DILocation(line: 409, column: 647, scope: !8401)
!8404 = !DILocation(line: 409, column: 670, scope: !8401)
!8405 = !DILocation(line: 409, column: 669, scope: !8401)
!8406 = !DILocation(line: 409, column: 664, scope: !8401)
!8407 = !DILocation(line: 409, column: 667, scope: !8401)
!8408 = !DILocation(line: 409, column: 685, scope: !8401)
!8409 = !DILocation(line: 409, column: 678, scope: !8401)
!8410 = !DILocation(line: 409, column: 683, scope: !8401)
!8411 = !DILocation(line: 409, column: 694, scope: !8401)
!8412 = !DILocation(line: 409, column: 694, scope: !8413)
!8413 = !DILexicalBlockFile(scope: !8398, file: !1003, discriminator: 17)
!8414 = !DILocation(line: 409, column: 719, scope: !8415)
!8415 = !DILexicalBlockFile(scope: !8388, file: !1003, discriminator: 18)
!8416 = !DILocation(line: 409, column: 761, scope: !8417)
!8417 = !DILexicalBlockFile(scope: !8418, file: !1003, discriminator: 19)
!8418 = distinct !DILexicalBlock(scope: !8309, file: !1003, line: 409, column: 729)
!8419 = !DILocation(line: 409, column: 766, scope: !8417)
!8420 = !DILocation(line: 409, column: 729, scope: !8417)
!8421 = !DILocation(line: 409, column: 771, scope: !8417)
!8422 = !DILocation(line: 409, column: 777, scope: !8423)
!8423 = !DILexicalBlockFile(scope: !8424, file: !1003, discriminator: 20)
!8424 = distinct !DILexicalBlock(scope: !8418, file: !1003, line: 409, column: 775)
!8425 = distinct !{!8425, !8426}
!8426 = !DILocation(line: 409, column: 777, scope: !8424)
!8427 = !DILocalVariable(name: "SWAP_tmp", scope: !8428, file: !1003, line: 409, type: !990)
!8428 = distinct !DILexicalBlock(scope: !8424, file: !1003, line: 409, column: 779)
!8429 = !DILocation(line: 409, column: 788, scope: !8428)
!8430 = !DILocation(line: 409, column: 799, scope: !8431)
!8431 = !DILexicalBlockFile(scope: !8428, file: !1003, discriminator: 21)
!8432 = !DILocation(line: 409, column: 798, scope: !8431)
!8433 = !DILocation(line: 409, column: 788, scope: !8431)
!8434 = !DILocation(line: 409, column: 811, scope: !8431)
!8435 = !DILocation(line: 409, column: 810, scope: !8431)
!8436 = !DILocation(line: 409, column: 805, scope: !8431)
!8437 = !DILocation(line: 409, column: 808, scope: !8431)
!8438 = !DILocation(line: 409, column: 822, scope: !8431)
!8439 = !DILocation(line: 409, column: 817, scope: !8431)
!8440 = !DILocation(line: 409, column: 820, scope: !8431)
!8441 = !DILocation(line: 409, column: 831, scope: !8431)
!8442 = !DILocation(line: 409, column: 851, scope: !8443)
!8443 = !DILexicalBlockFile(scope: !8424, file: !1003, discriminator: 22)
!8444 = !DILocation(line: 409, column: 855, scope: !8443)
!8445 = !DILocation(line: 409, column: 860, scope: !8446)
!8446 = !DILexicalBlockFile(scope: !8447, file: !1003, discriminator: 23)
!8447 = distinct !DILexicalBlock(scope: !8309, file: !1003, line: 409, column: 860)
!8448 = !DILocation(line: 409, column: 869, scope: !8446)
!8449 = !DILocation(line: 409, column: 872, scope: !8446)
!8450 = !DILocation(line: 409, column: 866, scope: !8446)
!8451 = !DILocation(line: 409, column: 876, scope: !8452)
!8452 = !DILexicalBlockFile(scope: !8447, file: !1003, discriminator: 24)
!8453 = !DILocation(line: 409, column: 883, scope: !8454)
!8454 = !DILexicalBlockFile(scope: !8309, file: !1003, discriminator: 25)
!8455 = distinct !{!8455, !8456}
!8456 = !DILocation(line: 409, column: 883, scope: !8309)
!8457 = !DILocalVariable(name: "SWAP_tmp", scope: !8458, file: !1003, line: 409, type: !990)
!8458 = distinct !DILexicalBlock(scope: !8309, file: !1003, line: 409, column: 885)
!8459 = !DILocation(line: 409, column: 894, scope: !8458)
!8460 = !DILocation(line: 409, column: 905, scope: !8461)
!8461 = !DILexicalBlockFile(scope: !8458, file: !1003, discriminator: 26)
!8462 = !DILocation(line: 409, column: 904, scope: !8461)
!8463 = !DILocation(line: 409, column: 894, scope: !8461)
!8464 = !DILocation(line: 409, column: 916, scope: !8461)
!8465 = !DILocation(line: 409, column: 911, scope: !8461)
!8466 = !DILocation(line: 409, column: 914, scope: !8461)
!8467 = !DILocation(line: 409, column: 934, scope: !8461)
!8468 = !DILocation(line: 409, column: 925, scope: !8461)
!8469 = !DILocation(line: 409, column: 932, scope: !8461)
!8470 = !DILocation(line: 409, column: 943, scope: !8461)
!8471 = !DILocation(line: 409, column: 954, scope: !8472)
!8472 = !DILexicalBlockFile(scope: !8309, file: !1003, discriminator: 27)
!8473 = !DILocation(line: 409, column: 960, scope: !8474)
!8474 = !DILexicalBlockFile(scope: !8309, file: !1003, discriminator: 28)
!8475 = !DILocation(line: 409, column: 968, scope: !8474)
!8476 = !DILocation(line: 409, column: 965, scope: !8474)
!8477 = !DILocation(line: 409, column: 954, scope: !8474)
!8478 = !DILocation(line: 409, column: 976, scope: !8479)
!8479 = !DILexicalBlockFile(scope: !8480, file: !1003, discriminator: 29)
!8480 = distinct !DILexicalBlock(scope: !8309, file: !1003, line: 409, column: 974)
!8481 = !DILocation(line: 409, column: 982, scope: !8482)
!8482 = !DILexicalBlockFile(scope: !8480, file: !1003, discriminator: 30)
!8483 = !DILocation(line: 409, column: 988, scope: !8482)
!8484 = !DILocation(line: 409, column: 986, scope: !8482)
!8485 = !DILocation(line: 409, column: 994, scope: !8482)
!8486 = !DILocation(line: 409, column: 1029, scope: !8487)
!8487 = !DILexicalBlockFile(scope: !8480, file: !1003, discriminator: 31)
!8488 = !DILocation(line: 409, column: 1035, scope: !8487)
!8489 = !DILocation(line: 409, column: 1038, scope: !8487)
!8490 = !DILocation(line: 409, column: 997, scope: !8487)
!8491 = !DILocation(line: 409, column: 1042, scope: !8487)
!8492 = !DILocation(line: 409, column: 976, scope: !8493)
!8493 = !DILexicalBlockFile(scope: !8480, file: !1003, discriminator: 32)
!8494 = !DILocation(line: 409, column: 1051, scope: !8495)
!8495 = !DILexicalBlockFile(scope: !8480, file: !1003, discriminator: 33)
!8496 = !DILocation(line: 409, column: 976, scope: !8495)
!8497 = distinct !{!8497, !8498}
!8498 = !DILocation(line: 409, column: 976, scope: !8480)
!8499 = !DILocation(line: 409, column: 1055, scope: !8500)
!8500 = !DILexicalBlockFile(scope: !8480, file: !1003, discriminator: 34)
!8501 = !DILocation(line: 409, column: 1061, scope: !8502)
!8502 = !DILexicalBlockFile(scope: !8480, file: !1003, discriminator: 35)
!8503 = !DILocation(line: 409, column: 1067, scope: !8502)
!8504 = !DILocation(line: 409, column: 1065, scope: !8502)
!8505 = !DILocation(line: 409, column: 1073, scope: !8502)
!8506 = !DILocation(line: 409, column: 1108, scope: !8507)
!8507 = !DILexicalBlockFile(scope: !8480, file: !1003, discriminator: 36)
!8508 = !DILocation(line: 409, column: 1115, scope: !8507)
!8509 = !DILocation(line: 409, column: 1118, scope: !8507)
!8510 = !DILocation(line: 409, column: 1076, scope: !8507)
!8511 = !DILocation(line: 409, column: 1122, scope: !8507)
!8512 = !DILocation(line: 409, column: 1055, scope: !8513)
!8513 = !DILexicalBlockFile(scope: !8480, file: !1003, discriminator: 37)
!8514 = !DILocation(line: 409, column: 1132, scope: !8515)
!8515 = !DILexicalBlockFile(scope: !8480, file: !1003, discriminator: 38)
!8516 = !DILocation(line: 409, column: 1055, scope: !8515)
!8517 = distinct !{!8517, !8518}
!8518 = !DILocation(line: 409, column: 1055, scope: !8480)
!8519 = !DILocation(line: 409, column: 1139, scope: !8520)
!8520 = !DILexicalBlockFile(scope: !8521, file: !1003, discriminator: 39)
!8521 = distinct !DILexicalBlock(scope: !8480, file: !1003, line: 409, column: 1139)
!8522 = !DILocation(line: 409, column: 1147, scope: !8520)
!8523 = !DILocation(line: 409, column: 1144, scope: !8520)
!8524 = !DILocation(line: 409, column: 1155, scope: !8525)
!8525 = !DILexicalBlockFile(scope: !8526, file: !1003, discriminator: 40)
!8526 = distinct !DILexicalBlock(scope: !8521, file: !1003, line: 409, column: 1153)
!8527 = distinct !{!8527, !8528}
!8528 = !DILocation(line: 409, column: 1155, scope: !8526)
!8529 = !DILocalVariable(name: "SWAP_tmp", scope: !8530, file: !1003, line: 409, type: !990)
!8530 = distinct !DILexicalBlock(scope: !8526, file: !1003, line: 409, column: 1157)
!8531 = !DILocation(line: 409, column: 1166, scope: !8530)
!8532 = !DILocation(line: 409, column: 1177, scope: !8533)
!8533 = !DILexicalBlockFile(scope: !8530, file: !1003, discriminator: 41)
!8534 = !DILocation(line: 409, column: 1176, scope: !8533)
!8535 = !DILocation(line: 409, column: 1166, scope: !8533)
!8536 = !DILocation(line: 409, column: 1193, scope: !8533)
!8537 = !DILocation(line: 409, column: 1192, scope: !8533)
!8538 = !DILocation(line: 409, column: 1185, scope: !8533)
!8539 = !DILocation(line: 409, column: 1190, scope: !8533)
!8540 = !DILocation(line: 409, column: 1206, scope: !8533)
!8541 = !DILocation(line: 409, column: 1200, scope: !8533)
!8542 = !DILocation(line: 409, column: 1204, scope: !8533)
!8543 = !DILocation(line: 409, column: 1215, scope: !8533)
!8544 = !DILocation(line: 409, column: 1230, scope: !8545)
!8545 = !DILexicalBlockFile(scope: !8526, file: !1003, discriminator: 42)
!8546 = !DILocation(line: 409, column: 1239, scope: !8545)
!8547 = !DILocation(line: 409, column: 1243, scope: !8545)
!8548 = !DILocation(line: 409, column: 954, scope: !8549)
!8549 = !DILexicalBlockFile(scope: !8309, file: !1003, discriminator: 43)
!8550 = distinct !{!8550, !8551}
!8551 = !DILocation(line: 409, column: 954, scope: !8309)
!8552 = !DILocation(line: 409, column: 1247, scope: !8553)
!8553 = !DILexicalBlockFile(scope: !8309, file: !1003, discriminator: 44)
!8554 = distinct !{!8554, !8555}
!8555 = !DILocation(line: 409, column: 1247, scope: !8309)
!8556 = !DILocalVariable(name: "SWAP_tmp", scope: !8557, file: !1003, line: 409, type: !990)
!8557 = distinct !DILexicalBlock(scope: !8309, file: !1003, line: 409, column: 1249)
!8558 = !DILocation(line: 409, column: 1258, scope: !8557)
!8559 = !DILocation(line: 409, column: 1269, scope: !8560)
!8560 = !DILexicalBlockFile(scope: !8557, file: !1003, discriminator: 45)
!8561 = !DILocation(line: 409, column: 1268, scope: !8560)
!8562 = !DILocation(line: 409, column: 1258, scope: !8560)
!8563 = !DILocation(line: 409, column: 1282, scope: !8560)
!8564 = !DILocation(line: 409, column: 1276, scope: !8560)
!8565 = !DILocation(line: 409, column: 1280, scope: !8560)
!8566 = !DILocation(line: 409, column: 1300, scope: !8560)
!8567 = !DILocation(line: 409, column: 1291, scope: !8560)
!8568 = !DILocation(line: 409, column: 1298, scope: !8560)
!8569 = !DILocation(line: 409, column: 1309, scope: !8560)
!8570 = !DILocation(line: 409, column: 1323, scope: !8571)
!8571 = !DILexicalBlockFile(scope: !8572, file: !1003, discriminator: 46)
!8572 = distinct !DILexicalBlock(scope: !8309, file: !1003, line: 409, column: 1323)
!8573 = !DILocation(line: 409, column: 1333, scope: !8571)
!8574 = !DILocation(line: 409, column: 1337, scope: !8575)
!8575 = !DILexicalBlockFile(scope: !8572, file: !1003, discriminator: 47)
!8576 = !DILocation(line: 409, column: 1344, scope: !8575)
!8577 = !DILocation(line: 409, column: 1348, scope: !8575)
!8578 = !DILocation(line: 409, column: 1341, scope: !8575)
!8579 = !DILocation(line: 409, column: 1351, scope: !8575)
!8580 = !DILocation(line: 409, column: 1354, scope: !8581)
!8581 = !DILexicalBlockFile(scope: !8572, file: !1003, discriminator: 48)
!8582 = !DILocation(line: 409, column: 1361, scope: !8581)
!8583 = !DILocation(line: 409, column: 1358, scope: !8581)
!8584 = !DILocation(line: 409, column: 1323, scope: !8581)
!8585 = !DILocation(line: 409, column: 1374, scope: !8586)
!8586 = !DILexicalBlockFile(scope: !8587, file: !1003, discriminator: 49)
!8587 = distinct !DILexicalBlock(scope: !8572, file: !1003, line: 409, column: 1367)
!8588 = !DILocation(line: 409, column: 1372, scope: !8586)
!8589 = !DILocation(line: 409, column: 1381, scope: !8586)
!8590 = !DILocation(line: 409, column: 1387, scope: !8591)
!8591 = !DILexicalBlockFile(scope: !8587, file: !1003, discriminator: 50)
!8592 = !DILocation(line: 409, column: 1391, scope: !8591)
!8593 = !DILocation(line: 409, column: 1390, scope: !8591)
!8594 = !DILocation(line: 409, column: 1395, scope: !8591)
!8595 = !DILocation(line: 409, column: 1430, scope: !8596)
!8596 = !DILexicalBlockFile(scope: !8587, file: !1003, discriminator: 51)
!8597 = !DILocation(line: 409, column: 1435, scope: !8596)
!8598 = !DILocation(line: 409, column: 1438, scope: !8596)
!8599 = !DILocation(line: 409, column: 1398, scope: !8596)
!8600 = !DILocation(line: 409, column: 1442, scope: !8596)
!8601 = !DILocation(line: 409, column: 1381, scope: !8602)
!8602 = !DILexicalBlockFile(scope: !8587, file: !1003, discriminator: 52)
!8603 = !DILocation(line: 409, column: 1451, scope: !8604)
!8604 = !DILexicalBlockFile(scope: !8587, file: !1003, discriminator: 53)
!8605 = !DILocation(line: 409, column: 1381, scope: !8604)
!8606 = distinct !{!8606, !8607}
!8607 = !DILocation(line: 409, column: 1381, scope: !8587)
!8608 = !DILocation(line: 409, column: 1458, scope: !8609)
!8609 = !DILexicalBlockFile(scope: !8610, file: !1003, discriminator: 54)
!8610 = distinct !DILexicalBlock(scope: !8587, file: !1003, line: 409, column: 1458)
!8611 = !DILocation(line: 409, column: 1463, scope: !8609)
!8612 = !DILocation(line: 409, column: 1461, scope: !8609)
!8613 = !DILocation(line: 409, column: 1468, scope: !8614)
!8614 = !DILexicalBlockFile(scope: !8610, file: !1003, discriminator: 55)
!8615 = !DILocation(line: 409, column: 1475, scope: !8616)
!8616 = !DILexicalBlockFile(scope: !8587, file: !1003, discriminator: 56)
!8617 = !DILocation(line: 409, column: 1480, scope: !8618)
!8618 = !DILexicalBlockFile(scope: !8619, file: !1003, discriminator: 57)
!8619 = distinct !DILexicalBlock(scope: !8309, file: !1003, line: 409, column: 1480)
!8620 = !DILocation(line: 409, column: 1484, scope: !8618)
!8621 = !DILocation(line: 409, column: 1483, scope: !8618)
!8622 = !DILocation(line: 409, column: 1491, scope: !8618)
!8623 = !DILocation(line: 409, column: 1496, scope: !8618)
!8624 = !DILocation(line: 409, column: 1495, scope: !8618)
!8625 = !DILocation(line: 409, column: 1489, scope: !8618)
!8626 = !DILocation(line: 409, column: 1519, scope: !8627)
!8627 = !DILexicalBlockFile(scope: !8628, file: !1003, discriminator: 58)
!8628 = distinct !DILexicalBlock(scope: !8619, file: !1003, line: 409, column: 1502)
!8629 = !DILocation(line: 409, column: 1510, scope: !8627)
!8630 = !DILocation(line: 409, column: 1504, scope: !8627)
!8631 = !DILocation(line: 409, column: 1517, scope: !8627)
!8632 = !DILocation(line: 409, column: 1542, scope: !8627)
!8633 = !DILocation(line: 409, column: 1534, scope: !8627)
!8634 = !DILocation(line: 409, column: 1526, scope: !8627)
!8635 = !DILocation(line: 409, column: 1540, scope: !8627)
!8636 = !DILocation(line: 409, column: 1557, scope: !8627)
!8637 = !DILocation(line: 409, column: 1561, scope: !8627)
!8638 = !DILocation(line: 409, column: 1555, scope: !8627)
!8639 = !DILocation(line: 409, column: 1565, scope: !8627)
!8640 = !DILocation(line: 409, column: 1587, scope: !8641)
!8641 = !DILexicalBlockFile(scope: !8642, file: !1003, discriminator: 59)
!8642 = distinct !DILexicalBlock(scope: !8619, file: !1003, line: 409, column: 1570)
!8643 = !DILocation(line: 409, column: 1591, scope: !8641)
!8644 = !DILocation(line: 409, column: 1578, scope: !8641)
!8645 = !DILocation(line: 409, column: 1572, scope: !8641)
!8646 = !DILocation(line: 409, column: 1585, scope: !8641)
!8647 = !DILocation(line: 409, column: 1611, scope: !8641)
!8648 = !DILocation(line: 409, column: 1603, scope: !8641)
!8649 = !DILocation(line: 409, column: 1595, scope: !8641)
!8650 = !DILocation(line: 409, column: 1609, scope: !8641)
!8651 = !DILocation(line: 409, column: 1622, scope: !8641)
!8652 = !DILocation(line: 409, column: 1620, scope: !8641)
!8653 = !DILocation(line: 409, column: 1631, scope: !8654)
!8654 = !DILexicalBlockFile(scope: !8309, file: !1003, discriminator: 60)
!8655 = !DILocation(line: 409, column: 1673, scope: !8656)
!8656 = !DILexicalBlockFile(scope: !8657, file: !1003, discriminator: 61)
!8657 = distinct !DILexicalBlock(scope: !8658, file: !1003, line: 409, column: 1641)
!8658 = distinct !DILexicalBlock(scope: !8303, file: !1003, line: 409, column: 1636)
!8659 = !DILocation(line: 409, column: 1680, scope: !8656)
!8660 = !DILocation(line: 409, column: 1641, scope: !8656)
!8661 = !DILocation(line: 409, column: 1685, scope: !8656)
!8662 = !DILocation(line: 409, column: 1690, scope: !8663)
!8663 = !DILexicalBlockFile(scope: !8657, file: !1003, discriminator: 62)
!8664 = distinct !{!8664, !8665}
!8665 = !DILocation(line: 409, column: 1690, scope: !8657)
!8666 = !DILocalVariable(name: "SWAP_tmp", scope: !8667, file: !1003, line: 409, type: !990)
!8667 = distinct !DILexicalBlock(scope: !8657, file: !1003, line: 409, column: 1692)
!8668 = !DILocation(line: 409, column: 1701, scope: !8667)
!8669 = !DILocation(line: 409, column: 1712, scope: !8670)
!8670 = !DILexicalBlockFile(scope: !8667, file: !1003, discriminator: 63)
!8671 = !DILocation(line: 409, column: 1711, scope: !8670)
!8672 = !DILocation(line: 409, column: 1701, scope: !8670)
!8673 = !DILocation(line: 409, column: 1724, scope: !8670)
!8674 = !DILocation(line: 409, column: 1723, scope: !8670)
!8675 = !DILocation(line: 409, column: 1718, scope: !8670)
!8676 = !DILocation(line: 409, column: 1721, scope: !8670)
!8677 = !DILocation(line: 409, column: 1739, scope: !8670)
!8678 = !DILocation(line: 409, column: 1732, scope: !8670)
!8679 = !DILocation(line: 409, column: 1737, scope: !8670)
!8680 = !DILocation(line: 409, column: 1748, scope: !8670)
!8681 = !DILocation(line: 409, column: 1748, scope: !8682)
!8682 = !DILexicalBlockFile(scope: !8667, file: !1003, discriminator: 64)
!8683 = !DILocation(line: 409, column: 1759, scope: !8684)
!8684 = !DILexicalBlockFile(scope: !8658, file: !1003, discriminator: 65)
!8685 = !DILocation(line: 409, column: 182, scope: !8686)
!8686 = !DILexicalBlockFile(scope: !8284, file: !1003, discriminator: 66)
!8687 = distinct !{!8687, !8688}
!8688 = !DILocation(line: 409, column: 182, scope: !8284)
!8689 = !DILocation(line: 409, column: 109, scope: !8690)
!8690 = !DILexicalBlockFile(scope: !8261, file: !1003, discriminator: 67)
!8691 = distinct !{!8691, !8692}
!8692 = !DILocation(line: 409, column: 109, scope: !8261)
!8693 = !DILocation(line: 409, column: 1771, scope: !8694)
!8694 = !DILexicalBlockFile(scope: !8261, file: !1003, discriminator: 68)
!8695 = !DILocation(line: 410, column: 24, scope: !8149)
!8696 = !DILocation(line: 410, column: 20, scope: !8149)
!8697 = !DILocation(line: 410, column: 18, scope: !8149)
!8698 = !DILocation(line: 412, column: 18, scope: !8149)
!8699 = !DILocation(line: 412, column: 23, scope: !8149)
!8700 = !DILocation(line: 412, column: 9, scope: !8149)
!8701 = !DILocation(line: 412, column: 16, scope: !8149)
!8702 = !DILocation(line: 413, column: 16, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8149, file: !1003, line: 413, column: 9)
!8704 = !DILocation(line: 413, column: 14, scope: !8703)
!8705 = !DILocation(line: 413, column: 21, scope: !8706)
!8706 = !DILexicalBlockFile(scope: !8707, file: !1003, discriminator: 1)
!8707 = distinct !DILexicalBlock(scope: !8703, file: !1003, line: 413, column: 9)
!8708 = !DILocation(line: 413, column: 26, scope: !8706)
!8709 = !DILocation(line: 413, column: 23, scope: !8706)
!8710 = !DILocation(line: 413, column: 9, scope: !8706)
!8711 = !DILocation(line: 414, column: 21, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8713, file: !1003, line: 414, column: 17)
!8713 = distinct !DILexicalBlock(scope: !8707, file: !1003, line: 413, column: 44)
!8714 = !DILocation(line: 414, column: 17, scope: !8712)
!8715 = !DILocation(line: 414, column: 24, scope: !8712)
!8716 = !DILocation(line: 414, column: 17, scope: !8713)
!8717 = !DILocation(line: 415, column: 24, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8712, file: !1003, line: 414, column: 30)
!8719 = !DILocation(line: 415, column: 28, scope: !8718)
!8720 = !DILocation(line: 415, column: 65, scope: !8718)
!8721 = !DILocation(line: 415, column: 72, scope: !8718)
!8722 = !DILocation(line: 415, column: 68, scope: !8718)
!8723 = !DILocation(line: 415, column: 17, scope: !8718)
!8724 = !DILocation(line: 416, column: 17, scope: !8718)
!8725 = !DILocation(line: 418, column: 27, scope: !8713)
!8726 = !DILocation(line: 418, column: 28, scope: !8713)
!8727 = !DILocation(line: 418, column: 23, scope: !8713)
!8728 = !DILocation(line: 418, column: 17, scope: !8713)
!8729 = !DILocation(line: 418, column: 13, scope: !8713)
!8730 = !DILocation(line: 418, column: 20, scope: !8713)
!8731 = !DILocation(line: 419, column: 9, scope: !8713)
!8732 = !DILocation(line: 413, column: 40, scope: !8733)
!8733 = !DILexicalBlockFile(scope: !8707, file: !1003, discriminator: 2)
!8734 = !DILocation(line: 413, column: 9, scope: !8733)
!8735 = distinct !{!8735, !8736}
!8736 = !DILocation(line: 413, column: 9, scope: !8149)
!8737 = !DILocation(line: 421, column: 13, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8149, file: !1003, line: 421, column: 13)
!8739 = !DILocation(line: 421, column: 13, scope: !8149)
!8740 = !DILocalVariable(name: "vk1", scope: !8741, file: !1003, line: 422, type: !8163)
!8741 = distinct !DILexicalBlock(scope: !8738, file: !1003, line: 421, column: 26)
!8742 = !DILocation(line: 422, column: 21, scope: !8741)
!8743 = !DILocalVariable(name: "num_bands_1", scope: !8741, file: !1003, line: 424, type: !958)
!8744 = !DILocation(line: 424, column: 17, scope: !8741)
!8745 = !DILocation(line: 426, column: 20, scope: !8741)
!8746 = !DILocation(line: 426, column: 25, scope: !8741)
!8747 = !DILocation(line: 426, column: 30, scope: !8741)
!8748 = !DILocation(line: 426, column: 39, scope: !8741)
!8749 = !DILocation(line: 426, column: 44, scope: !8741)
!8750 = !DILocation(line: 426, column: 37, scope: !8741)
!8751 = !DILocation(line: 426, column: 17, scope: !8741)
!8752 = !DILocation(line: 427, column: 16, scope: !8741)
!8753 = !DILocation(line: 428, column: 13, scope: !8741)
!8754 = !DILocation(line: 428, column: 20, scope: !8755)
!8755 = !DILexicalBlockFile(scope: !8741, file: !1003, discriminator: 1)
!8756 = !DILocation(line: 428, column: 24, scope: !8755)
!8757 = !DILocation(line: 428, column: 13, scope: !8755)
!8758 = !DILocation(line: 429, column: 19, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8741, file: !1003, line: 428, column: 38)
!8760 = !DILocation(line: 430, column: 17, scope: !8759)
!8761 = !DILocation(line: 428, column: 13, scope: !8762)
!8762 = !DILexicalBlockFile(scope: !8741, file: !1003, discriminator: 2)
!8763 = distinct !{!8763, !8753}
!8764 = !DILocation(line: 432, column: 29, scope: !8741)
!8765 = !DILocation(line: 432, column: 33, scope: !8741)
!8766 = !DILocation(line: 432, column: 19, scope: !8741)
!8767 = !DILocation(line: 432, column: 17, scope: !8741)
!8768 = !DILocation(line: 433, column: 35, scope: !8741)
!8769 = !DILocation(line: 433, column: 26, scope: !8741)
!8770 = !DILocation(line: 433, column: 39, scope: !8741)
!8771 = !DILocation(line: 433, column: 57, scope: !8741)
!8772 = !DILocation(line: 433, column: 71, scope: !8741)
!8773 = !DILocation(line: 433, column: 19, scope: !8741)
!8774 = !DILocation(line: 433, column: 17, scope: !8741)
!8775 = !DILocation(line: 434, column: 22, scope: !8741)
!8776 = !DILocation(line: 434, column: 26, scope: !8741)
!8777 = !DILocation(line: 434, column: 34, scope: !8741)
!8778 = !DILocation(line: 434, column: 48, scope: !8741)
!8779 = !DILocation(line: 434, column: 46, scope: !8741)
!8780 = !DILocation(line: 434, column: 52, scope: !8741)
!8781 = !DILocation(line: 434, column: 40, scope: !8741)
!8782 = !DILocation(line: 434, column: 62, scope: !8741)
!8783 = !DILocation(line: 434, column: 60, scope: !8741)
!8784 = !DILocation(line: 434, column: 17, scope: !8741)
!8785 = !DILocation(line: 435, column: 17, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8741, file: !1003, line: 435, column: 17)
!8787 = !DILocation(line: 435, column: 27, scope: !8786)
!8788 = !DILocation(line: 435, column: 17, scope: !8741)
!8789 = !DILocation(line: 436, column: 39, scope: !8786)
!8790 = !DILocation(line: 436, column: 30, scope: !8786)
!8791 = !DILocation(line: 436, column: 43, scope: !8786)
!8792 = !DILocation(line: 436, column: 58, scope: !8786)
!8793 = !DILocation(line: 436, column: 72, scope: !8786)
!8794 = !DILocation(line: 436, column: 23, scope: !8786)
!8795 = !DILocation(line: 436, column: 21, scope: !8786)
!8796 = !DILocation(line: 436, column: 17, scope: !8786)
!8797 = !DILocation(line: 437, column: 29, scope: !8741)
!8798 = !DILocation(line: 437, column: 33, scope: !8741)
!8799 = !DILocation(line: 437, column: 45, scope: !8741)
!8800 = !DILocation(line: 437, column: 52, scope: !8741)
!8801 = !DILocation(line: 437, column: 25, scope: !8741)
!8802 = !DILocation(line: 444, column: 24, scope: !8741)
!8803 = !DILocation(line: 444, column: 27, scope: !8741)
!8804 = !DILocation(line: 444, column: 31, scope: !8741)
!8805 = !DILocation(line: 444, column: 36, scope: !8741)
!8806 = !DILocation(line: 444, column: 42, scope: !8741)
!8807 = !DILocation(line: 444, column: 47, scope: !8741)
!8808 = !DILocation(line: 444, column: 53, scope: !8741)
!8809 = !DILocation(line: 444, column: 13, scope: !8741)
!8810 = !DILocation(line: 446, column: 40, scope: !8741)
!8811 = !DILocation(line: 446, column: 44, scope: !8741)
!8812 = !DILocation(line: 446, column: 49, scope: !8741)
!8813 = !DILocation(line: 446, column: 24, scope: !8741)
!8814 = !DILocation(line: 446, column: 22, scope: !8741)
!8815 = !DILocation(line: 448, column: 17, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8741, file: !1003, line: 448, column: 17)
!8817 = !DILocation(line: 448, column: 28, scope: !8816)
!8818 = !DILocation(line: 448, column: 26, scope: !8816)
!8819 = !DILocation(line: 448, column: 17, scope: !8741)
!8820 = !DILocalVariable(name: "change", scope: !8821, file: !1003, line: 449, type: !958)
!8821 = distinct !DILexicalBlock(scope: !8816, file: !1003, line: 448, column: 38)
!8822 = !DILocation(line: 449, column: 21, scope: !8821)
!8823 = !DILocation(line: 450, column: 17, scope: !8821)
!8824 = distinct !{!8824, !8823}
!8825 = !DILocalVariable(name: "stack", scope: !8826, file: !1003, line: 450, type: !6758)
!8826 = distinct !DILexicalBlock(scope: !8821, file: !1003, line: 450, column: 20)
!8827 = !DILocation(line: 450, column: 28, scope: !8826)
!8828 = !DILocalVariable(name: "sp", scope: !8826, file: !1003, line: 450, type: !958)
!8829 = !DILocation(line: 450, column: 46, scope: !8826)
!8830 = !DILocation(line: 450, column: 46, scope: !8831)
!8831 = !DILexicalBlockFile(scope: !8826, file: !1003, discriminator: 1)
!8832 = !DILocation(line: 450, column: 67, scope: !8831)
!8833 = !DILocation(line: 450, column: 71, scope: !8831)
!8834 = !DILocation(line: 450, column: 53, scope: !8831)
!8835 = !DILocation(line: 450, column: 65, scope: !8831)
!8836 = !DILocation(line: 450, column: 91, scope: !8831)
!8837 = !DILocation(line: 450, column: 95, scope: !8831)
!8838 = !DILocation(line: 450, column: 101, scope: !8831)
!8839 = !DILocation(line: 450, column: 99, scope: !8831)
!8840 = !DILocation(line: 450, column: 113, scope: !8831)
!8841 = !DILocation(line: 450, column: 90, scope: !8831)
!8842 = !DILocation(line: 450, column: 76, scope: !8831)
!8843 = !DILocation(line: 450, column: 88, scope: !8831)
!8844 = !DILocation(line: 450, column: 117, scope: !8831)
!8845 = !DILocation(line: 450, column: 123, scope: !8846)
!8846 = !DILexicalBlockFile(scope: !8826, file: !1003, discriminator: 2)
!8847 = !DILocation(line: 450, column: 117, scope: !8846)
!8848 = !DILocalVariable(name: "start", scope: !8849, file: !1003, line: 450, type: !2419)
!8849 = distinct !DILexicalBlock(scope: !8826, file: !1003, line: 450, column: 126)
!8850 = !DILocation(line: 450, column: 137, scope: !8849)
!8851 = !DILocation(line: 450, column: 150, scope: !8852)
!8852 = !DILexicalBlockFile(scope: !8849, file: !1003, discriminator: 3)
!8853 = !DILocation(line: 450, column: 144, scope: !8852)
!8854 = !DILocation(line: 450, column: 137, scope: !8852)
!8855 = !DILocalVariable(name: "end", scope: !8849, file: !1003, line: 450, type: !2419)
!8856 = !DILocation(line: 450, column: 169, scope: !8849)
!8857 = !DILocation(line: 450, column: 182, scope: !8852)
!8858 = !DILocation(line: 450, column: 175, scope: !8852)
!8859 = !DILocation(line: 450, column: 169, scope: !8852)
!8860 = !DILocation(line: 450, column: 190, scope: !8852)
!8861 = !DILocation(line: 450, column: 196, scope: !8862)
!8862 = !DILexicalBlockFile(scope: !8849, file: !1003, discriminator: 4)
!8863 = !DILocation(line: 450, column: 204, scope: !8862)
!8864 = !DILocation(line: 450, column: 202, scope: !8862)
!8865 = !DILocation(line: 450, column: 190, scope: !8862)
!8866 = !DILocation(line: 450, column: 213, scope: !8867)
!8867 = !DILexicalBlockFile(scope: !8868, file: !1003, discriminator: 5)
!8868 = distinct !DILexicalBlock(scope: !8869, file: !1003, line: 450, column: 213)
!8869 = distinct !DILexicalBlock(scope: !8849, file: !1003, line: 450, column: 208)
!8870 = !DILocation(line: 450, column: 221, scope: !8867)
!8871 = !DILocation(line: 450, column: 224, scope: !8867)
!8872 = !DILocation(line: 450, column: 219, scope: !8867)
!8873 = !DILocalVariable(name: "checksort", scope: !8874, file: !1003, line: 450, type: !958)
!8874 = distinct !DILexicalBlock(scope: !8868, file: !1003, line: 450, column: 228)
!8875 = !DILocation(line: 450, column: 234, scope: !8874)
!8876 = !DILocation(line: 450, column: 234, scope: !8877)
!8877 = !DILexicalBlockFile(scope: !8874, file: !1003, discriminator: 6)
!8878 = !DILocalVariable(name: "right", scope: !8874, file: !1003, line: 450, type: !2419)
!8879 = !DILocation(line: 450, column: 256, scope: !8874)
!8880 = !DILocation(line: 450, column: 264, scope: !8877)
!8881 = !DILocation(line: 450, column: 267, scope: !8877)
!8882 = !DILocation(line: 450, column: 256, scope: !8877)
!8883 = !DILocalVariable(name: "left", scope: !8874, file: !1003, line: 450, type: !2419)
!8884 = !DILocation(line: 450, column: 280, scope: !8874)
!8885 = !DILocation(line: 450, column: 287, scope: !8877)
!8886 = !DILocation(line: 450, column: 292, scope: !8877)
!8887 = !DILocation(line: 450, column: 280, scope: !8877)
!8888 = !DILocalVariable(name: "mid", scope: !8874, file: !1003, line: 450, type: !2419)
!8889 = !DILocation(line: 450, column: 305, scope: !8874)
!8890 = !DILocation(line: 450, column: 311, scope: !8877)
!8891 = !DILocation(line: 450, column: 321, scope: !8877)
!8892 = !DILocation(line: 450, column: 325, scope: !8877)
!8893 = !DILocation(line: 450, column: 324, scope: !8877)
!8894 = !DILocation(line: 450, column: 331, scope: !8877)
!8895 = !DILocation(line: 450, column: 317, scope: !8877)
!8896 = !DILocation(line: 450, column: 305, scope: !8877)
!8897 = !DILocation(line: 450, column: 372, scope: !8877)
!8898 = !DILocation(line: 450, column: 379, scope: !8877)
!8899 = !DILocation(line: 450, column: 340, scope: !8877)
!8900 = !DILocation(line: 450, column: 384, scope: !8877)
!8901 = !DILocation(line: 450, column: 427, scope: !8902)
!8902 = !DILexicalBlockFile(scope: !8903, file: !1003, discriminator: 7)
!8903 = distinct !DILexicalBlock(scope: !8904, file: !1003, line: 450, column: 394)
!8904 = distinct !DILexicalBlock(scope: !8905, file: !1003, line: 450, column: 389)
!8905 = distinct !DILexicalBlock(scope: !8874, file: !1003, line: 450, column: 340)
!8906 = !DILocation(line: 450, column: 432, scope: !8902)
!8907 = !DILocation(line: 450, column: 394, scope: !8902)
!8908 = !DILocation(line: 450, column: 437, scope: !8902)
!8909 = !DILocation(line: 450, column: 442, scope: !8910)
!8910 = !DILexicalBlockFile(scope: !8903, file: !1003, discriminator: 8)
!8911 = distinct !{!8911, !8912}
!8912 = !DILocation(line: 450, column: 442, scope: !8903)
!8913 = !DILocalVariable(name: "SWAP_tmp", scope: !8914, file: !1003, line: 450, type: !990)
!8914 = distinct !DILexicalBlock(scope: !8903, file: !1003, line: 450, column: 444)
!8915 = !DILocation(line: 450, column: 453, scope: !8914)
!8916 = !DILocation(line: 450, column: 464, scope: !8917)
!8917 = !DILexicalBlockFile(scope: !8914, file: !1003, discriminator: 9)
!8918 = !DILocation(line: 450, column: 463, scope: !8917)
!8919 = !DILocation(line: 450, column: 453, scope: !8917)
!8920 = !DILocation(line: 450, column: 476, scope: !8917)
!8921 = !DILocation(line: 450, column: 475, scope: !8917)
!8922 = !DILocation(line: 450, column: 470, scope: !8917)
!8923 = !DILocation(line: 450, column: 473, scope: !8917)
!8924 = !DILocation(line: 450, column: 491, scope: !8917)
!8925 = !DILocation(line: 450, column: 484, scope: !8917)
!8926 = !DILocation(line: 450, column: 489, scope: !8917)
!8927 = !DILocation(line: 450, column: 500, scope: !8917)
!8928 = !DILocation(line: 450, column: 500, scope: !8929)
!8929 = !DILexicalBlockFile(scope: !8914, file: !1003, discriminator: 10)
!8930 = !DILocation(line: 450, column: 516, scope: !8931)
!8931 = !DILexicalBlockFile(scope: !8903, file: !1003, discriminator: 11)
!8932 = distinct !{!8932, !8933}
!8933 = !DILocation(line: 450, column: 516, scope: !8903)
!8934 = !DILocalVariable(name: "SWAP_tmp", scope: !8935, file: !1003, line: 450, type: !990)
!8935 = distinct !DILexicalBlock(scope: !8903, file: !1003, line: 450, column: 518)
!8936 = !DILocation(line: 450, column: 527, scope: !8935)
!8937 = !DILocation(line: 450, column: 538, scope: !8938)
!8938 = !DILexicalBlockFile(scope: !8935, file: !1003, discriminator: 12)
!8939 = !DILocation(line: 450, column: 537, scope: !8938)
!8940 = !DILocation(line: 450, column: 527, scope: !8938)
!8941 = !DILocation(line: 450, column: 550, scope: !8938)
!8942 = !DILocation(line: 450, column: 549, scope: !8938)
!8943 = !DILocation(line: 450, column: 544, scope: !8938)
!8944 = !DILocation(line: 450, column: 547, scope: !8938)
!8945 = !DILocation(line: 450, column: 565, scope: !8938)
!8946 = !DILocation(line: 450, column: 558, scope: !8938)
!8947 = !DILocation(line: 450, column: 563, scope: !8938)
!8948 = !DILocation(line: 450, column: 574, scope: !8938)
!8949 = !DILocation(line: 450, column: 585, scope: !8950)
!8950 = !DILexicalBlockFile(scope: !8904, file: !1003, discriminator: 13)
!8951 = !DILocation(line: 450, column: 627, scope: !8952)
!8952 = !DILexicalBlockFile(scope: !8953, file: !1003, discriminator: 14)
!8953 = distinct !DILexicalBlock(scope: !8954, file: !1003, line: 450, column: 595)
!8954 = distinct !DILexicalBlock(scope: !8905, file: !1003, line: 450, column: 590)
!8955 = !DILocation(line: 450, column: 634, scope: !8952)
!8956 = !DILocation(line: 450, column: 595, scope: !8952)
!8957 = !DILocation(line: 450, column: 639, scope: !8952)
!8958 = !DILocation(line: 450, column: 644, scope: !8959)
!8959 = !DILexicalBlockFile(scope: !8953, file: !1003, discriminator: 15)
!8960 = distinct !{!8960, !8961}
!8961 = !DILocation(line: 450, column: 644, scope: !8953)
!8962 = !DILocalVariable(name: "SWAP_tmp", scope: !8963, file: !1003, line: 450, type: !990)
!8963 = distinct !DILexicalBlock(scope: !8953, file: !1003, line: 450, column: 646)
!8964 = !DILocation(line: 450, column: 655, scope: !8963)
!8965 = !DILocation(line: 450, column: 666, scope: !8966)
!8966 = !DILexicalBlockFile(scope: !8963, file: !1003, discriminator: 16)
!8967 = !DILocation(line: 450, column: 665, scope: !8966)
!8968 = !DILocation(line: 450, column: 655, scope: !8966)
!8969 = !DILocation(line: 450, column: 678, scope: !8966)
!8970 = !DILocation(line: 450, column: 677, scope: !8966)
!8971 = !DILocation(line: 450, column: 672, scope: !8966)
!8972 = !DILocation(line: 450, column: 675, scope: !8966)
!8973 = !DILocation(line: 450, column: 693, scope: !8966)
!8974 = !DILocation(line: 450, column: 686, scope: !8966)
!8975 = !DILocation(line: 450, column: 691, scope: !8966)
!8976 = !DILocation(line: 450, column: 702, scope: !8966)
!8977 = !DILocation(line: 450, column: 702, scope: !8978)
!8978 = !DILexicalBlockFile(scope: !8963, file: !1003, discriminator: 17)
!8979 = !DILocation(line: 450, column: 727, scope: !8980)
!8980 = !DILexicalBlockFile(scope: !8953, file: !1003, discriminator: 18)
!8981 = !DILocation(line: 450, column: 769, scope: !8982)
!8982 = !DILexicalBlockFile(scope: !8983, file: !1003, discriminator: 19)
!8983 = distinct !DILexicalBlock(scope: !8874, file: !1003, line: 450, column: 737)
!8984 = !DILocation(line: 450, column: 774, scope: !8982)
!8985 = !DILocation(line: 450, column: 737, scope: !8982)
!8986 = !DILocation(line: 450, column: 779, scope: !8982)
!8987 = !DILocation(line: 450, column: 785, scope: !8988)
!8988 = !DILexicalBlockFile(scope: !8989, file: !1003, discriminator: 20)
!8989 = distinct !DILexicalBlock(scope: !8983, file: !1003, line: 450, column: 783)
!8990 = distinct !{!8990, !8991}
!8991 = !DILocation(line: 450, column: 785, scope: !8989)
!8992 = !DILocalVariable(name: "SWAP_tmp", scope: !8993, file: !1003, line: 450, type: !990)
!8993 = distinct !DILexicalBlock(scope: !8989, file: !1003, line: 450, column: 787)
!8994 = !DILocation(line: 450, column: 796, scope: !8993)
!8995 = !DILocation(line: 450, column: 807, scope: !8996)
!8996 = !DILexicalBlockFile(scope: !8993, file: !1003, discriminator: 21)
!8997 = !DILocation(line: 450, column: 806, scope: !8996)
!8998 = !DILocation(line: 450, column: 796, scope: !8996)
!8999 = !DILocation(line: 450, column: 819, scope: !8996)
!9000 = !DILocation(line: 450, column: 818, scope: !8996)
!9001 = !DILocation(line: 450, column: 813, scope: !8996)
!9002 = !DILocation(line: 450, column: 816, scope: !8996)
!9003 = !DILocation(line: 450, column: 830, scope: !8996)
!9004 = !DILocation(line: 450, column: 825, scope: !8996)
!9005 = !DILocation(line: 450, column: 828, scope: !8996)
!9006 = !DILocation(line: 450, column: 839, scope: !8996)
!9007 = !DILocation(line: 450, column: 859, scope: !9008)
!9008 = !DILexicalBlockFile(scope: !8989, file: !1003, discriminator: 22)
!9009 = !DILocation(line: 450, column: 863, scope: !9008)
!9010 = !DILocation(line: 450, column: 868, scope: !9011)
!9011 = !DILexicalBlockFile(scope: !9012, file: !1003, discriminator: 23)
!9012 = distinct !DILexicalBlock(scope: !8874, file: !1003, line: 450, column: 868)
!9013 = !DILocation(line: 450, column: 877, scope: !9011)
!9014 = !DILocation(line: 450, column: 880, scope: !9011)
!9015 = !DILocation(line: 450, column: 874, scope: !9011)
!9016 = !DILocation(line: 450, column: 884, scope: !9017)
!9017 = !DILexicalBlockFile(scope: !9012, file: !1003, discriminator: 24)
!9018 = !DILocation(line: 450, column: 891, scope: !9019)
!9019 = !DILexicalBlockFile(scope: !8874, file: !1003, discriminator: 25)
!9020 = distinct !{!9020, !9021}
!9021 = !DILocation(line: 450, column: 891, scope: !8874)
!9022 = !DILocalVariable(name: "SWAP_tmp", scope: !9023, file: !1003, line: 450, type: !990)
!9023 = distinct !DILexicalBlock(scope: !8874, file: !1003, line: 450, column: 893)
!9024 = !DILocation(line: 450, column: 902, scope: !9023)
!9025 = !DILocation(line: 450, column: 913, scope: !9026)
!9026 = !DILexicalBlockFile(scope: !9023, file: !1003, discriminator: 26)
!9027 = !DILocation(line: 450, column: 912, scope: !9026)
!9028 = !DILocation(line: 450, column: 902, scope: !9026)
!9029 = !DILocation(line: 450, column: 924, scope: !9026)
!9030 = !DILocation(line: 450, column: 919, scope: !9026)
!9031 = !DILocation(line: 450, column: 922, scope: !9026)
!9032 = !DILocation(line: 450, column: 942, scope: !9026)
!9033 = !DILocation(line: 450, column: 933, scope: !9026)
!9034 = !DILocation(line: 450, column: 940, scope: !9026)
!9035 = !DILocation(line: 450, column: 951, scope: !9026)
!9036 = !DILocation(line: 450, column: 962, scope: !9037)
!9037 = !DILexicalBlockFile(scope: !8874, file: !1003, discriminator: 27)
!9038 = !DILocation(line: 450, column: 968, scope: !9039)
!9039 = !DILexicalBlockFile(scope: !8874, file: !1003, discriminator: 28)
!9040 = !DILocation(line: 450, column: 976, scope: !9039)
!9041 = !DILocation(line: 450, column: 973, scope: !9039)
!9042 = !DILocation(line: 450, column: 962, scope: !9039)
!9043 = !DILocation(line: 450, column: 984, scope: !9044)
!9044 = !DILexicalBlockFile(scope: !9045, file: !1003, discriminator: 29)
!9045 = distinct !DILexicalBlock(scope: !8874, file: !1003, line: 450, column: 982)
!9046 = !DILocation(line: 450, column: 990, scope: !9047)
!9047 = !DILexicalBlockFile(scope: !9045, file: !1003, discriminator: 30)
!9048 = !DILocation(line: 450, column: 996, scope: !9047)
!9049 = !DILocation(line: 450, column: 994, scope: !9047)
!9050 = !DILocation(line: 450, column: 1002, scope: !9047)
!9051 = !DILocation(line: 450, column: 1037, scope: !9052)
!9052 = !DILexicalBlockFile(scope: !9045, file: !1003, discriminator: 31)
!9053 = !DILocation(line: 450, column: 1043, scope: !9052)
!9054 = !DILocation(line: 450, column: 1046, scope: !9052)
!9055 = !DILocation(line: 450, column: 1005, scope: !9052)
!9056 = !DILocation(line: 450, column: 1050, scope: !9052)
!9057 = !DILocation(line: 450, column: 984, scope: !9058)
!9058 = !DILexicalBlockFile(scope: !9045, file: !1003, discriminator: 32)
!9059 = !DILocation(line: 450, column: 1059, scope: !9060)
!9060 = !DILexicalBlockFile(scope: !9045, file: !1003, discriminator: 33)
!9061 = !DILocation(line: 450, column: 984, scope: !9060)
!9062 = distinct !{!9062, !9063}
!9063 = !DILocation(line: 450, column: 984, scope: !9045)
!9064 = !DILocation(line: 450, column: 1063, scope: !9065)
!9065 = !DILexicalBlockFile(scope: !9045, file: !1003, discriminator: 34)
!9066 = !DILocation(line: 450, column: 1069, scope: !9067)
!9067 = !DILexicalBlockFile(scope: !9045, file: !1003, discriminator: 35)
!9068 = !DILocation(line: 450, column: 1075, scope: !9067)
!9069 = !DILocation(line: 450, column: 1073, scope: !9067)
!9070 = !DILocation(line: 450, column: 1081, scope: !9067)
!9071 = !DILocation(line: 450, column: 1116, scope: !9072)
!9072 = !DILexicalBlockFile(scope: !9045, file: !1003, discriminator: 36)
!9073 = !DILocation(line: 450, column: 1123, scope: !9072)
!9074 = !DILocation(line: 450, column: 1126, scope: !9072)
!9075 = !DILocation(line: 450, column: 1084, scope: !9072)
!9076 = !DILocation(line: 450, column: 1130, scope: !9072)
!9077 = !DILocation(line: 450, column: 1063, scope: !9078)
!9078 = !DILexicalBlockFile(scope: !9045, file: !1003, discriminator: 37)
!9079 = !DILocation(line: 450, column: 1140, scope: !9080)
!9080 = !DILexicalBlockFile(scope: !9045, file: !1003, discriminator: 38)
!9081 = !DILocation(line: 450, column: 1063, scope: !9080)
!9082 = distinct !{!9082, !9083}
!9083 = !DILocation(line: 450, column: 1063, scope: !9045)
!9084 = !DILocation(line: 450, column: 1147, scope: !9085)
!9085 = !DILexicalBlockFile(scope: !9086, file: !1003, discriminator: 39)
!9086 = distinct !DILexicalBlock(scope: !9045, file: !1003, line: 450, column: 1147)
!9087 = !DILocation(line: 450, column: 1155, scope: !9085)
!9088 = !DILocation(line: 450, column: 1152, scope: !9085)
!9089 = !DILocation(line: 450, column: 1163, scope: !9090)
!9090 = !DILexicalBlockFile(scope: !9091, file: !1003, discriminator: 40)
!9091 = distinct !DILexicalBlock(scope: !9086, file: !1003, line: 450, column: 1161)
!9092 = distinct !{!9092, !9093}
!9093 = !DILocation(line: 450, column: 1163, scope: !9091)
!9094 = !DILocalVariable(name: "SWAP_tmp", scope: !9095, file: !1003, line: 450, type: !990)
!9095 = distinct !DILexicalBlock(scope: !9091, file: !1003, line: 450, column: 1165)
!9096 = !DILocation(line: 450, column: 1174, scope: !9095)
!9097 = !DILocation(line: 450, column: 1185, scope: !9098)
!9098 = !DILexicalBlockFile(scope: !9095, file: !1003, discriminator: 41)
!9099 = !DILocation(line: 450, column: 1184, scope: !9098)
!9100 = !DILocation(line: 450, column: 1174, scope: !9098)
!9101 = !DILocation(line: 450, column: 1201, scope: !9098)
!9102 = !DILocation(line: 450, column: 1200, scope: !9098)
!9103 = !DILocation(line: 450, column: 1193, scope: !9098)
!9104 = !DILocation(line: 450, column: 1198, scope: !9098)
!9105 = !DILocation(line: 450, column: 1214, scope: !9098)
!9106 = !DILocation(line: 450, column: 1208, scope: !9098)
!9107 = !DILocation(line: 450, column: 1212, scope: !9098)
!9108 = !DILocation(line: 450, column: 1223, scope: !9098)
!9109 = !DILocation(line: 450, column: 1238, scope: !9110)
!9110 = !DILexicalBlockFile(scope: !9091, file: !1003, discriminator: 42)
!9111 = !DILocation(line: 450, column: 1247, scope: !9110)
!9112 = !DILocation(line: 450, column: 1251, scope: !9110)
!9113 = !DILocation(line: 450, column: 962, scope: !9114)
!9114 = !DILexicalBlockFile(scope: !8874, file: !1003, discriminator: 43)
!9115 = distinct !{!9115, !9116}
!9116 = !DILocation(line: 450, column: 962, scope: !8874)
!9117 = !DILocation(line: 450, column: 1255, scope: !9118)
!9118 = !DILexicalBlockFile(scope: !8874, file: !1003, discriminator: 44)
!9119 = distinct !{!9119, !9120}
!9120 = !DILocation(line: 450, column: 1255, scope: !8874)
!9121 = !DILocalVariable(name: "SWAP_tmp", scope: !9122, file: !1003, line: 450, type: !990)
!9122 = distinct !DILexicalBlock(scope: !8874, file: !1003, line: 450, column: 1257)
!9123 = !DILocation(line: 450, column: 1266, scope: !9122)
!9124 = !DILocation(line: 450, column: 1277, scope: !9125)
!9125 = !DILexicalBlockFile(scope: !9122, file: !1003, discriminator: 45)
!9126 = !DILocation(line: 450, column: 1276, scope: !9125)
!9127 = !DILocation(line: 450, column: 1266, scope: !9125)
!9128 = !DILocation(line: 450, column: 1290, scope: !9125)
!9129 = !DILocation(line: 450, column: 1284, scope: !9125)
!9130 = !DILocation(line: 450, column: 1288, scope: !9125)
!9131 = !DILocation(line: 450, column: 1308, scope: !9125)
!9132 = !DILocation(line: 450, column: 1299, scope: !9125)
!9133 = !DILocation(line: 450, column: 1306, scope: !9125)
!9134 = !DILocation(line: 450, column: 1317, scope: !9125)
!9135 = !DILocation(line: 450, column: 1331, scope: !9136)
!9136 = !DILexicalBlockFile(scope: !9137, file: !1003, discriminator: 46)
!9137 = distinct !DILexicalBlock(scope: !8874, file: !1003, line: 450, column: 1331)
!9138 = !DILocation(line: 450, column: 1341, scope: !9136)
!9139 = !DILocation(line: 450, column: 1345, scope: !9140)
!9140 = !DILexicalBlockFile(scope: !9137, file: !1003, discriminator: 47)
!9141 = !DILocation(line: 450, column: 1352, scope: !9140)
!9142 = !DILocation(line: 450, column: 1356, scope: !9140)
!9143 = !DILocation(line: 450, column: 1349, scope: !9140)
!9144 = !DILocation(line: 450, column: 1359, scope: !9140)
!9145 = !DILocation(line: 450, column: 1362, scope: !9146)
!9146 = !DILexicalBlockFile(scope: !9137, file: !1003, discriminator: 48)
!9147 = !DILocation(line: 450, column: 1369, scope: !9146)
!9148 = !DILocation(line: 450, column: 1366, scope: !9146)
!9149 = !DILocation(line: 450, column: 1331, scope: !9146)
!9150 = !DILocation(line: 450, column: 1382, scope: !9151)
!9151 = !DILexicalBlockFile(scope: !9152, file: !1003, discriminator: 49)
!9152 = distinct !DILexicalBlock(scope: !9137, file: !1003, line: 450, column: 1375)
!9153 = !DILocation(line: 450, column: 1380, scope: !9151)
!9154 = !DILocation(line: 450, column: 1389, scope: !9151)
!9155 = !DILocation(line: 450, column: 1395, scope: !9156)
!9156 = !DILexicalBlockFile(scope: !9152, file: !1003, discriminator: 50)
!9157 = !DILocation(line: 450, column: 1399, scope: !9156)
!9158 = !DILocation(line: 450, column: 1398, scope: !9156)
!9159 = !DILocation(line: 450, column: 1403, scope: !9156)
!9160 = !DILocation(line: 450, column: 1438, scope: !9161)
!9161 = !DILexicalBlockFile(scope: !9152, file: !1003, discriminator: 51)
!9162 = !DILocation(line: 450, column: 1443, scope: !9161)
!9163 = !DILocation(line: 450, column: 1446, scope: !9161)
!9164 = !DILocation(line: 450, column: 1406, scope: !9161)
!9165 = !DILocation(line: 450, column: 1450, scope: !9161)
!9166 = !DILocation(line: 450, column: 1389, scope: !9167)
!9167 = !DILexicalBlockFile(scope: !9152, file: !1003, discriminator: 52)
!9168 = !DILocation(line: 450, column: 1459, scope: !9169)
!9169 = !DILexicalBlockFile(scope: !9152, file: !1003, discriminator: 53)
!9170 = !DILocation(line: 450, column: 1389, scope: !9169)
!9171 = distinct !{!9171, !9172}
!9172 = !DILocation(line: 450, column: 1389, scope: !9152)
!9173 = !DILocation(line: 450, column: 1466, scope: !9174)
!9174 = !DILexicalBlockFile(scope: !9175, file: !1003, discriminator: 54)
!9175 = distinct !DILexicalBlock(scope: !9152, file: !1003, line: 450, column: 1466)
!9176 = !DILocation(line: 450, column: 1471, scope: !9174)
!9177 = !DILocation(line: 450, column: 1469, scope: !9174)
!9178 = !DILocation(line: 450, column: 1476, scope: !9179)
!9179 = !DILexicalBlockFile(scope: !9175, file: !1003, discriminator: 55)
!9180 = !DILocation(line: 450, column: 1483, scope: !9181)
!9181 = !DILexicalBlockFile(scope: !9152, file: !1003, discriminator: 56)
!9182 = !DILocation(line: 450, column: 1488, scope: !9183)
!9183 = !DILexicalBlockFile(scope: !9184, file: !1003, discriminator: 57)
!9184 = distinct !DILexicalBlock(scope: !8874, file: !1003, line: 450, column: 1488)
!9185 = !DILocation(line: 450, column: 1492, scope: !9183)
!9186 = !DILocation(line: 450, column: 1491, scope: !9183)
!9187 = !DILocation(line: 450, column: 1499, scope: !9183)
!9188 = !DILocation(line: 450, column: 1504, scope: !9183)
!9189 = !DILocation(line: 450, column: 1503, scope: !9183)
!9190 = !DILocation(line: 450, column: 1497, scope: !9183)
!9191 = !DILocation(line: 450, column: 1527, scope: !9192)
!9192 = !DILexicalBlockFile(scope: !9193, file: !1003, discriminator: 58)
!9193 = distinct !DILexicalBlock(scope: !9184, file: !1003, line: 450, column: 1510)
!9194 = !DILocation(line: 450, column: 1518, scope: !9192)
!9195 = !DILocation(line: 450, column: 1512, scope: !9192)
!9196 = !DILocation(line: 450, column: 1525, scope: !9192)
!9197 = !DILocation(line: 450, column: 1550, scope: !9192)
!9198 = !DILocation(line: 450, column: 1542, scope: !9192)
!9199 = !DILocation(line: 450, column: 1534, scope: !9192)
!9200 = !DILocation(line: 450, column: 1548, scope: !9192)
!9201 = !DILocation(line: 450, column: 1565, scope: !9192)
!9202 = !DILocation(line: 450, column: 1569, scope: !9192)
!9203 = !DILocation(line: 450, column: 1563, scope: !9192)
!9204 = !DILocation(line: 450, column: 1573, scope: !9192)
!9205 = !DILocation(line: 450, column: 1595, scope: !9206)
!9206 = !DILexicalBlockFile(scope: !9207, file: !1003, discriminator: 59)
!9207 = distinct !DILexicalBlock(scope: !9184, file: !1003, line: 450, column: 1578)
!9208 = !DILocation(line: 450, column: 1599, scope: !9206)
!9209 = !DILocation(line: 450, column: 1586, scope: !9206)
!9210 = !DILocation(line: 450, column: 1580, scope: !9206)
!9211 = !DILocation(line: 450, column: 1593, scope: !9206)
!9212 = !DILocation(line: 450, column: 1619, scope: !9206)
!9213 = !DILocation(line: 450, column: 1611, scope: !9206)
!9214 = !DILocation(line: 450, column: 1603, scope: !9206)
!9215 = !DILocation(line: 450, column: 1617, scope: !9206)
!9216 = !DILocation(line: 450, column: 1630, scope: !9206)
!9217 = !DILocation(line: 450, column: 1628, scope: !9206)
!9218 = !DILocation(line: 450, column: 1639, scope: !9219)
!9219 = !DILexicalBlockFile(scope: !8874, file: !1003, discriminator: 60)
!9220 = !DILocation(line: 450, column: 1681, scope: !9221)
!9221 = !DILexicalBlockFile(scope: !9222, file: !1003, discriminator: 61)
!9222 = distinct !DILexicalBlock(scope: !9223, file: !1003, line: 450, column: 1649)
!9223 = distinct !DILexicalBlock(scope: !8868, file: !1003, line: 450, column: 1644)
!9224 = !DILocation(line: 450, column: 1688, scope: !9221)
!9225 = !DILocation(line: 450, column: 1649, scope: !9221)
!9226 = !DILocation(line: 450, column: 1693, scope: !9221)
!9227 = !DILocation(line: 450, column: 1698, scope: !9228)
!9228 = !DILexicalBlockFile(scope: !9222, file: !1003, discriminator: 62)
!9229 = distinct !{!9229, !9230}
!9230 = !DILocation(line: 450, column: 1698, scope: !9222)
!9231 = !DILocalVariable(name: "SWAP_tmp", scope: !9232, file: !1003, line: 450, type: !990)
!9232 = distinct !DILexicalBlock(scope: !9222, file: !1003, line: 450, column: 1700)
!9233 = !DILocation(line: 450, column: 1709, scope: !9232)
!9234 = !DILocation(line: 450, column: 1720, scope: !9235)
!9235 = !DILexicalBlockFile(scope: !9232, file: !1003, discriminator: 63)
!9236 = !DILocation(line: 450, column: 1719, scope: !9235)
!9237 = !DILocation(line: 450, column: 1709, scope: !9235)
!9238 = !DILocation(line: 450, column: 1732, scope: !9235)
!9239 = !DILocation(line: 450, column: 1731, scope: !9235)
!9240 = !DILocation(line: 450, column: 1726, scope: !9235)
!9241 = !DILocation(line: 450, column: 1729, scope: !9235)
!9242 = !DILocation(line: 450, column: 1747, scope: !9235)
!9243 = !DILocation(line: 450, column: 1740, scope: !9235)
!9244 = !DILocation(line: 450, column: 1745, scope: !9235)
!9245 = !DILocation(line: 450, column: 1756, scope: !9235)
!9246 = !DILocation(line: 450, column: 1756, scope: !9247)
!9247 = !DILexicalBlockFile(scope: !9232, file: !1003, discriminator: 64)
!9248 = !DILocation(line: 450, column: 1767, scope: !9249)
!9249 = !DILexicalBlockFile(scope: !9223, file: !1003, discriminator: 65)
!9250 = !DILocation(line: 450, column: 190, scope: !9251)
!9251 = !DILexicalBlockFile(scope: !8849, file: !1003, discriminator: 66)
!9252 = distinct !{!9252, !9253}
!9253 = !DILocation(line: 450, column: 190, scope: !8849)
!9254 = !DILocation(line: 450, column: 117, scope: !9255)
!9255 = !DILexicalBlockFile(scope: !8826, file: !1003, discriminator: 67)
!9256 = distinct !{!9256, !9257}
!9257 = !DILocation(line: 450, column: 117, scope: !8826)
!9258 = !DILocation(line: 450, column: 1779, scope: !9259)
!9259 = !DILexicalBlockFile(scope: !8826, file: !1003, discriminator: 68)
!9260 = !DILocation(line: 451, column: 28, scope: !8821)
!9261 = !DILocation(line: 451, column: 39, scope: !8821)
!9262 = !DILocation(line: 451, column: 37, scope: !8821)
!9263 = !DILocation(line: 451, column: 55, scope: !8821)
!9264 = !DILocation(line: 451, column: 51, scope: !8821)
!9265 = !DILocation(line: 451, column: 70, scope: !8821)
!9266 = !DILocation(line: 451, column: 68, scope: !8821)
!9267 = !DILocation(line: 451, column: 78, scope: !8821)
!9268 = !DILocation(line: 451, column: 47, scope: !8821)
!9269 = !DILocation(line: 451, column: 27, scope: !8821)
!9270 = !DILocation(line: 451, column: 92, scope: !9271)
!9271 = !DILexicalBlockFile(scope: !8821, file: !1003, discriminator: 1)
!9272 = !DILocation(line: 451, column: 88, scope: !9271)
!9273 = !DILocation(line: 451, column: 107, scope: !9271)
!9274 = !DILocation(line: 451, column: 105, scope: !9271)
!9275 = !DILocation(line: 451, column: 115, scope: !9271)
!9276 = !DILocation(line: 451, column: 27, scope: !9271)
!9277 = !DILocation(line: 451, column: 124, scope: !9278)
!9278 = !DILexicalBlockFile(scope: !8821, file: !1003, discriminator: 2)
!9279 = !DILocation(line: 451, column: 135, scope: !9278)
!9280 = !DILocation(line: 451, column: 133, scope: !9278)
!9281 = !DILocation(line: 451, column: 27, scope: !9278)
!9282 = !DILocation(line: 451, column: 27, scope: !9283)
!9283 = !DILexicalBlockFile(scope: !8821, file: !1003, discriminator: 3)
!9284 = !DILocation(line: 451, column: 24, scope: !9283)
!9285 = !DILocation(line: 452, column: 27, scope: !8821)
!9286 = !DILocation(line: 452, column: 17, scope: !8821)
!9287 = !DILocation(line: 452, column: 24, scope: !8821)
!9288 = !DILocation(line: 453, column: 37, scope: !8821)
!9289 = !DILocation(line: 453, column: 21, scope: !8821)
!9290 = !DILocation(line: 453, column: 17, scope: !8821)
!9291 = !DILocation(line: 453, column: 34, scope: !8821)
!9292 = !DILocation(line: 454, column: 13, scope: !8821)
!9293 = !DILocation(line: 456, column: 13, scope: !8741)
!9294 = distinct !{!9294, !9293}
!9295 = !DILocalVariable(name: "stack", scope: !9296, file: !1003, line: 456, type: !6758)
!9296 = distinct !DILexicalBlock(scope: !8741, file: !1003, line: 456, column: 16)
!9297 = !DILocation(line: 456, column: 24, scope: !9296)
!9298 = !DILocalVariable(name: "sp", scope: !9296, file: !1003, line: 456, type: !958)
!9299 = !DILocation(line: 456, column: 42, scope: !9296)
!9300 = !DILocation(line: 456, column: 42, scope: !9301)
!9301 = !DILexicalBlockFile(scope: !9296, file: !1003, discriminator: 1)
!9302 = !DILocation(line: 456, column: 63, scope: !9301)
!9303 = !DILocation(line: 456, column: 67, scope: !9301)
!9304 = !DILocation(line: 456, column: 49, scope: !9301)
!9305 = !DILocation(line: 456, column: 61, scope: !9301)
!9306 = !DILocation(line: 456, column: 87, scope: !9301)
!9307 = !DILocation(line: 456, column: 91, scope: !9301)
!9308 = !DILocation(line: 456, column: 97, scope: !9301)
!9309 = !DILocation(line: 456, column: 95, scope: !9301)
!9310 = !DILocation(line: 456, column: 109, scope: !9301)
!9311 = !DILocation(line: 456, column: 86, scope: !9301)
!9312 = !DILocation(line: 456, column: 72, scope: !9301)
!9313 = !DILocation(line: 456, column: 84, scope: !9301)
!9314 = !DILocation(line: 456, column: 113, scope: !9301)
!9315 = !DILocation(line: 456, column: 119, scope: !9316)
!9316 = !DILexicalBlockFile(scope: !9296, file: !1003, discriminator: 2)
!9317 = !DILocation(line: 456, column: 113, scope: !9316)
!9318 = !DILocalVariable(name: "start", scope: !9319, file: !1003, line: 456, type: !2419)
!9319 = distinct !DILexicalBlock(scope: !9296, file: !1003, line: 456, column: 122)
!9320 = !DILocation(line: 456, column: 133, scope: !9319)
!9321 = !DILocation(line: 456, column: 146, scope: !9322)
!9322 = !DILexicalBlockFile(scope: !9319, file: !1003, discriminator: 3)
!9323 = !DILocation(line: 456, column: 140, scope: !9322)
!9324 = !DILocation(line: 456, column: 133, scope: !9322)
!9325 = !DILocalVariable(name: "end", scope: !9319, file: !1003, line: 456, type: !2419)
!9326 = !DILocation(line: 456, column: 165, scope: !9319)
!9327 = !DILocation(line: 456, column: 178, scope: !9322)
!9328 = !DILocation(line: 456, column: 171, scope: !9322)
!9329 = !DILocation(line: 456, column: 165, scope: !9322)
!9330 = !DILocation(line: 456, column: 186, scope: !9322)
!9331 = !DILocation(line: 456, column: 192, scope: !9332)
!9332 = !DILexicalBlockFile(scope: !9319, file: !1003, discriminator: 4)
!9333 = !DILocation(line: 456, column: 200, scope: !9332)
!9334 = !DILocation(line: 456, column: 198, scope: !9332)
!9335 = !DILocation(line: 456, column: 186, scope: !9332)
!9336 = !DILocation(line: 456, column: 209, scope: !9337)
!9337 = !DILexicalBlockFile(scope: !9338, file: !1003, discriminator: 5)
!9338 = distinct !DILexicalBlock(scope: !9339, file: !1003, line: 456, column: 209)
!9339 = distinct !DILexicalBlock(scope: !9319, file: !1003, line: 456, column: 204)
!9340 = !DILocation(line: 456, column: 217, scope: !9337)
!9341 = !DILocation(line: 456, column: 220, scope: !9337)
!9342 = !DILocation(line: 456, column: 215, scope: !9337)
!9343 = !DILocalVariable(name: "checksort", scope: !9344, file: !1003, line: 456, type: !958)
!9344 = distinct !DILexicalBlock(scope: !9338, file: !1003, line: 456, column: 224)
!9345 = !DILocation(line: 456, column: 230, scope: !9344)
!9346 = !DILocation(line: 456, column: 230, scope: !9347)
!9347 = !DILexicalBlockFile(scope: !9344, file: !1003, discriminator: 6)
!9348 = !DILocalVariable(name: "right", scope: !9344, file: !1003, line: 456, type: !2419)
!9349 = !DILocation(line: 456, column: 252, scope: !9344)
!9350 = !DILocation(line: 456, column: 260, scope: !9347)
!9351 = !DILocation(line: 456, column: 263, scope: !9347)
!9352 = !DILocation(line: 456, column: 252, scope: !9347)
!9353 = !DILocalVariable(name: "left", scope: !9344, file: !1003, line: 456, type: !2419)
!9354 = !DILocation(line: 456, column: 276, scope: !9344)
!9355 = !DILocation(line: 456, column: 283, scope: !9347)
!9356 = !DILocation(line: 456, column: 288, scope: !9347)
!9357 = !DILocation(line: 456, column: 276, scope: !9347)
!9358 = !DILocalVariable(name: "mid", scope: !9344, file: !1003, line: 456, type: !2419)
!9359 = !DILocation(line: 456, column: 301, scope: !9344)
!9360 = !DILocation(line: 456, column: 307, scope: !9347)
!9361 = !DILocation(line: 456, column: 317, scope: !9347)
!9362 = !DILocation(line: 456, column: 321, scope: !9347)
!9363 = !DILocation(line: 456, column: 320, scope: !9347)
!9364 = !DILocation(line: 456, column: 327, scope: !9347)
!9365 = !DILocation(line: 456, column: 313, scope: !9347)
!9366 = !DILocation(line: 456, column: 301, scope: !9347)
!9367 = !DILocation(line: 456, column: 368, scope: !9347)
!9368 = !DILocation(line: 456, column: 375, scope: !9347)
!9369 = !DILocation(line: 456, column: 336, scope: !9347)
!9370 = !DILocation(line: 456, column: 380, scope: !9347)
!9371 = !DILocation(line: 456, column: 423, scope: !9372)
!9372 = !DILexicalBlockFile(scope: !9373, file: !1003, discriminator: 7)
!9373 = distinct !DILexicalBlock(scope: !9374, file: !1003, line: 456, column: 390)
!9374 = distinct !DILexicalBlock(scope: !9375, file: !1003, line: 456, column: 385)
!9375 = distinct !DILexicalBlock(scope: !9344, file: !1003, line: 456, column: 336)
!9376 = !DILocation(line: 456, column: 428, scope: !9372)
!9377 = !DILocation(line: 456, column: 390, scope: !9372)
!9378 = !DILocation(line: 456, column: 433, scope: !9372)
!9379 = !DILocation(line: 456, column: 438, scope: !9380)
!9380 = !DILexicalBlockFile(scope: !9373, file: !1003, discriminator: 8)
!9381 = distinct !{!9381, !9382}
!9382 = !DILocation(line: 456, column: 438, scope: !9373)
!9383 = !DILocalVariable(name: "SWAP_tmp", scope: !9384, file: !1003, line: 456, type: !990)
!9384 = distinct !DILexicalBlock(scope: !9373, file: !1003, line: 456, column: 440)
!9385 = !DILocation(line: 456, column: 449, scope: !9384)
!9386 = !DILocation(line: 456, column: 460, scope: !9387)
!9387 = !DILexicalBlockFile(scope: !9384, file: !1003, discriminator: 9)
!9388 = !DILocation(line: 456, column: 459, scope: !9387)
!9389 = !DILocation(line: 456, column: 449, scope: !9387)
!9390 = !DILocation(line: 456, column: 472, scope: !9387)
!9391 = !DILocation(line: 456, column: 471, scope: !9387)
!9392 = !DILocation(line: 456, column: 466, scope: !9387)
!9393 = !DILocation(line: 456, column: 469, scope: !9387)
!9394 = !DILocation(line: 456, column: 487, scope: !9387)
!9395 = !DILocation(line: 456, column: 480, scope: !9387)
!9396 = !DILocation(line: 456, column: 485, scope: !9387)
!9397 = !DILocation(line: 456, column: 496, scope: !9387)
!9398 = !DILocation(line: 456, column: 496, scope: !9399)
!9399 = !DILexicalBlockFile(scope: !9384, file: !1003, discriminator: 10)
!9400 = !DILocation(line: 456, column: 512, scope: !9401)
!9401 = !DILexicalBlockFile(scope: !9373, file: !1003, discriminator: 11)
!9402 = distinct !{!9402, !9403}
!9403 = !DILocation(line: 456, column: 512, scope: !9373)
!9404 = !DILocalVariable(name: "SWAP_tmp", scope: !9405, file: !1003, line: 456, type: !990)
!9405 = distinct !DILexicalBlock(scope: !9373, file: !1003, line: 456, column: 514)
!9406 = !DILocation(line: 456, column: 523, scope: !9405)
!9407 = !DILocation(line: 456, column: 534, scope: !9408)
!9408 = !DILexicalBlockFile(scope: !9405, file: !1003, discriminator: 12)
!9409 = !DILocation(line: 456, column: 533, scope: !9408)
!9410 = !DILocation(line: 456, column: 523, scope: !9408)
!9411 = !DILocation(line: 456, column: 546, scope: !9408)
!9412 = !DILocation(line: 456, column: 545, scope: !9408)
!9413 = !DILocation(line: 456, column: 540, scope: !9408)
!9414 = !DILocation(line: 456, column: 543, scope: !9408)
!9415 = !DILocation(line: 456, column: 561, scope: !9408)
!9416 = !DILocation(line: 456, column: 554, scope: !9408)
!9417 = !DILocation(line: 456, column: 559, scope: !9408)
!9418 = !DILocation(line: 456, column: 570, scope: !9408)
!9419 = !DILocation(line: 456, column: 581, scope: !9420)
!9420 = !DILexicalBlockFile(scope: !9374, file: !1003, discriminator: 13)
!9421 = !DILocation(line: 456, column: 623, scope: !9422)
!9422 = !DILexicalBlockFile(scope: !9423, file: !1003, discriminator: 14)
!9423 = distinct !DILexicalBlock(scope: !9424, file: !1003, line: 456, column: 591)
!9424 = distinct !DILexicalBlock(scope: !9375, file: !1003, line: 456, column: 586)
!9425 = !DILocation(line: 456, column: 630, scope: !9422)
!9426 = !DILocation(line: 456, column: 591, scope: !9422)
!9427 = !DILocation(line: 456, column: 635, scope: !9422)
!9428 = !DILocation(line: 456, column: 640, scope: !9429)
!9429 = !DILexicalBlockFile(scope: !9423, file: !1003, discriminator: 15)
!9430 = distinct !{!9430, !9431}
!9431 = !DILocation(line: 456, column: 640, scope: !9423)
!9432 = !DILocalVariable(name: "SWAP_tmp", scope: !9433, file: !1003, line: 456, type: !990)
!9433 = distinct !DILexicalBlock(scope: !9423, file: !1003, line: 456, column: 642)
!9434 = !DILocation(line: 456, column: 651, scope: !9433)
!9435 = !DILocation(line: 456, column: 662, scope: !9436)
!9436 = !DILexicalBlockFile(scope: !9433, file: !1003, discriminator: 16)
!9437 = !DILocation(line: 456, column: 661, scope: !9436)
!9438 = !DILocation(line: 456, column: 651, scope: !9436)
!9439 = !DILocation(line: 456, column: 674, scope: !9436)
!9440 = !DILocation(line: 456, column: 673, scope: !9436)
!9441 = !DILocation(line: 456, column: 668, scope: !9436)
!9442 = !DILocation(line: 456, column: 671, scope: !9436)
!9443 = !DILocation(line: 456, column: 689, scope: !9436)
!9444 = !DILocation(line: 456, column: 682, scope: !9436)
!9445 = !DILocation(line: 456, column: 687, scope: !9436)
!9446 = !DILocation(line: 456, column: 698, scope: !9436)
!9447 = !DILocation(line: 456, column: 698, scope: !9448)
!9448 = !DILexicalBlockFile(scope: !9433, file: !1003, discriminator: 17)
!9449 = !DILocation(line: 456, column: 723, scope: !9450)
!9450 = !DILexicalBlockFile(scope: !9423, file: !1003, discriminator: 18)
!9451 = !DILocation(line: 456, column: 765, scope: !9452)
!9452 = !DILexicalBlockFile(scope: !9453, file: !1003, discriminator: 19)
!9453 = distinct !DILexicalBlock(scope: !9344, file: !1003, line: 456, column: 733)
!9454 = !DILocation(line: 456, column: 770, scope: !9452)
!9455 = !DILocation(line: 456, column: 733, scope: !9452)
!9456 = !DILocation(line: 456, column: 775, scope: !9452)
!9457 = !DILocation(line: 456, column: 781, scope: !9458)
!9458 = !DILexicalBlockFile(scope: !9459, file: !1003, discriminator: 20)
!9459 = distinct !DILexicalBlock(scope: !9453, file: !1003, line: 456, column: 779)
!9460 = distinct !{!9460, !9461}
!9461 = !DILocation(line: 456, column: 781, scope: !9459)
!9462 = !DILocalVariable(name: "SWAP_tmp", scope: !9463, file: !1003, line: 456, type: !990)
!9463 = distinct !DILexicalBlock(scope: !9459, file: !1003, line: 456, column: 783)
!9464 = !DILocation(line: 456, column: 792, scope: !9463)
!9465 = !DILocation(line: 456, column: 803, scope: !9466)
!9466 = !DILexicalBlockFile(scope: !9463, file: !1003, discriminator: 21)
!9467 = !DILocation(line: 456, column: 802, scope: !9466)
!9468 = !DILocation(line: 456, column: 792, scope: !9466)
!9469 = !DILocation(line: 456, column: 815, scope: !9466)
!9470 = !DILocation(line: 456, column: 814, scope: !9466)
!9471 = !DILocation(line: 456, column: 809, scope: !9466)
!9472 = !DILocation(line: 456, column: 812, scope: !9466)
!9473 = !DILocation(line: 456, column: 826, scope: !9466)
!9474 = !DILocation(line: 456, column: 821, scope: !9466)
!9475 = !DILocation(line: 456, column: 824, scope: !9466)
!9476 = !DILocation(line: 456, column: 835, scope: !9466)
!9477 = !DILocation(line: 456, column: 855, scope: !9478)
!9478 = !DILexicalBlockFile(scope: !9459, file: !1003, discriminator: 22)
!9479 = !DILocation(line: 456, column: 859, scope: !9478)
!9480 = !DILocation(line: 456, column: 864, scope: !9481)
!9481 = !DILexicalBlockFile(scope: !9482, file: !1003, discriminator: 23)
!9482 = distinct !DILexicalBlock(scope: !9344, file: !1003, line: 456, column: 864)
!9483 = !DILocation(line: 456, column: 873, scope: !9481)
!9484 = !DILocation(line: 456, column: 876, scope: !9481)
!9485 = !DILocation(line: 456, column: 870, scope: !9481)
!9486 = !DILocation(line: 456, column: 880, scope: !9487)
!9487 = !DILexicalBlockFile(scope: !9482, file: !1003, discriminator: 24)
!9488 = !DILocation(line: 456, column: 887, scope: !9489)
!9489 = !DILexicalBlockFile(scope: !9344, file: !1003, discriminator: 25)
!9490 = distinct !{!9490, !9491}
!9491 = !DILocation(line: 456, column: 887, scope: !9344)
!9492 = !DILocalVariable(name: "SWAP_tmp", scope: !9493, file: !1003, line: 456, type: !990)
!9493 = distinct !DILexicalBlock(scope: !9344, file: !1003, line: 456, column: 889)
!9494 = !DILocation(line: 456, column: 898, scope: !9493)
!9495 = !DILocation(line: 456, column: 909, scope: !9496)
!9496 = !DILexicalBlockFile(scope: !9493, file: !1003, discriminator: 26)
!9497 = !DILocation(line: 456, column: 908, scope: !9496)
!9498 = !DILocation(line: 456, column: 898, scope: !9496)
!9499 = !DILocation(line: 456, column: 920, scope: !9496)
!9500 = !DILocation(line: 456, column: 915, scope: !9496)
!9501 = !DILocation(line: 456, column: 918, scope: !9496)
!9502 = !DILocation(line: 456, column: 938, scope: !9496)
!9503 = !DILocation(line: 456, column: 929, scope: !9496)
!9504 = !DILocation(line: 456, column: 936, scope: !9496)
!9505 = !DILocation(line: 456, column: 947, scope: !9496)
!9506 = !DILocation(line: 456, column: 958, scope: !9507)
!9507 = !DILexicalBlockFile(scope: !9344, file: !1003, discriminator: 27)
!9508 = !DILocation(line: 456, column: 964, scope: !9509)
!9509 = !DILexicalBlockFile(scope: !9344, file: !1003, discriminator: 28)
!9510 = !DILocation(line: 456, column: 972, scope: !9509)
!9511 = !DILocation(line: 456, column: 969, scope: !9509)
!9512 = !DILocation(line: 456, column: 958, scope: !9509)
!9513 = !DILocation(line: 456, column: 980, scope: !9514)
!9514 = !DILexicalBlockFile(scope: !9515, file: !1003, discriminator: 29)
!9515 = distinct !DILexicalBlock(scope: !9344, file: !1003, line: 456, column: 978)
!9516 = !DILocation(line: 456, column: 986, scope: !9517)
!9517 = !DILexicalBlockFile(scope: !9515, file: !1003, discriminator: 30)
!9518 = !DILocation(line: 456, column: 992, scope: !9517)
!9519 = !DILocation(line: 456, column: 990, scope: !9517)
!9520 = !DILocation(line: 456, column: 998, scope: !9517)
!9521 = !DILocation(line: 456, column: 1033, scope: !9522)
!9522 = !DILexicalBlockFile(scope: !9515, file: !1003, discriminator: 31)
!9523 = !DILocation(line: 456, column: 1039, scope: !9522)
!9524 = !DILocation(line: 456, column: 1042, scope: !9522)
!9525 = !DILocation(line: 456, column: 1001, scope: !9522)
!9526 = !DILocation(line: 456, column: 1046, scope: !9522)
!9527 = !DILocation(line: 456, column: 980, scope: !9528)
!9528 = !DILexicalBlockFile(scope: !9515, file: !1003, discriminator: 32)
!9529 = !DILocation(line: 456, column: 1055, scope: !9530)
!9530 = !DILexicalBlockFile(scope: !9515, file: !1003, discriminator: 33)
!9531 = !DILocation(line: 456, column: 980, scope: !9530)
!9532 = distinct !{!9532, !9533}
!9533 = !DILocation(line: 456, column: 980, scope: !9515)
!9534 = !DILocation(line: 456, column: 1059, scope: !9535)
!9535 = !DILexicalBlockFile(scope: !9515, file: !1003, discriminator: 34)
!9536 = !DILocation(line: 456, column: 1065, scope: !9537)
!9537 = !DILexicalBlockFile(scope: !9515, file: !1003, discriminator: 35)
!9538 = !DILocation(line: 456, column: 1071, scope: !9537)
!9539 = !DILocation(line: 456, column: 1069, scope: !9537)
!9540 = !DILocation(line: 456, column: 1077, scope: !9537)
!9541 = !DILocation(line: 456, column: 1112, scope: !9542)
!9542 = !DILexicalBlockFile(scope: !9515, file: !1003, discriminator: 36)
!9543 = !DILocation(line: 456, column: 1119, scope: !9542)
!9544 = !DILocation(line: 456, column: 1122, scope: !9542)
!9545 = !DILocation(line: 456, column: 1080, scope: !9542)
!9546 = !DILocation(line: 456, column: 1126, scope: !9542)
!9547 = !DILocation(line: 456, column: 1059, scope: !9548)
!9548 = !DILexicalBlockFile(scope: !9515, file: !1003, discriminator: 37)
!9549 = !DILocation(line: 456, column: 1136, scope: !9550)
!9550 = !DILexicalBlockFile(scope: !9515, file: !1003, discriminator: 38)
!9551 = !DILocation(line: 456, column: 1059, scope: !9550)
!9552 = distinct !{!9552, !9553}
!9553 = !DILocation(line: 456, column: 1059, scope: !9515)
!9554 = !DILocation(line: 456, column: 1143, scope: !9555)
!9555 = !DILexicalBlockFile(scope: !9556, file: !1003, discriminator: 39)
!9556 = distinct !DILexicalBlock(scope: !9515, file: !1003, line: 456, column: 1143)
!9557 = !DILocation(line: 456, column: 1151, scope: !9555)
!9558 = !DILocation(line: 456, column: 1148, scope: !9555)
!9559 = !DILocation(line: 456, column: 1159, scope: !9560)
!9560 = !DILexicalBlockFile(scope: !9561, file: !1003, discriminator: 40)
!9561 = distinct !DILexicalBlock(scope: !9556, file: !1003, line: 456, column: 1157)
!9562 = distinct !{!9562, !9563}
!9563 = !DILocation(line: 456, column: 1159, scope: !9561)
!9564 = !DILocalVariable(name: "SWAP_tmp", scope: !9565, file: !1003, line: 456, type: !990)
!9565 = distinct !DILexicalBlock(scope: !9561, file: !1003, line: 456, column: 1161)
!9566 = !DILocation(line: 456, column: 1170, scope: !9565)
!9567 = !DILocation(line: 456, column: 1181, scope: !9568)
!9568 = !DILexicalBlockFile(scope: !9565, file: !1003, discriminator: 41)
!9569 = !DILocation(line: 456, column: 1180, scope: !9568)
!9570 = !DILocation(line: 456, column: 1170, scope: !9568)
!9571 = !DILocation(line: 456, column: 1197, scope: !9568)
!9572 = !DILocation(line: 456, column: 1196, scope: !9568)
!9573 = !DILocation(line: 456, column: 1189, scope: !9568)
!9574 = !DILocation(line: 456, column: 1194, scope: !9568)
!9575 = !DILocation(line: 456, column: 1210, scope: !9568)
!9576 = !DILocation(line: 456, column: 1204, scope: !9568)
!9577 = !DILocation(line: 456, column: 1208, scope: !9568)
!9578 = !DILocation(line: 456, column: 1219, scope: !9568)
!9579 = !DILocation(line: 456, column: 1234, scope: !9580)
!9580 = !DILexicalBlockFile(scope: !9561, file: !1003, discriminator: 42)
!9581 = !DILocation(line: 456, column: 1243, scope: !9580)
!9582 = !DILocation(line: 456, column: 1247, scope: !9580)
!9583 = !DILocation(line: 456, column: 958, scope: !9584)
!9584 = !DILexicalBlockFile(scope: !9344, file: !1003, discriminator: 43)
!9585 = distinct !{!9585, !9586}
!9586 = !DILocation(line: 456, column: 958, scope: !9344)
!9587 = !DILocation(line: 456, column: 1251, scope: !9588)
!9588 = !DILexicalBlockFile(scope: !9344, file: !1003, discriminator: 44)
!9589 = distinct !{!9589, !9590}
!9590 = !DILocation(line: 456, column: 1251, scope: !9344)
!9591 = !DILocalVariable(name: "SWAP_tmp", scope: !9592, file: !1003, line: 456, type: !990)
!9592 = distinct !DILexicalBlock(scope: !9344, file: !1003, line: 456, column: 1253)
!9593 = !DILocation(line: 456, column: 1262, scope: !9592)
!9594 = !DILocation(line: 456, column: 1273, scope: !9595)
!9595 = !DILexicalBlockFile(scope: !9592, file: !1003, discriminator: 45)
!9596 = !DILocation(line: 456, column: 1272, scope: !9595)
!9597 = !DILocation(line: 456, column: 1262, scope: !9595)
!9598 = !DILocation(line: 456, column: 1286, scope: !9595)
!9599 = !DILocation(line: 456, column: 1280, scope: !9595)
!9600 = !DILocation(line: 456, column: 1284, scope: !9595)
!9601 = !DILocation(line: 456, column: 1304, scope: !9595)
!9602 = !DILocation(line: 456, column: 1295, scope: !9595)
!9603 = !DILocation(line: 456, column: 1302, scope: !9595)
!9604 = !DILocation(line: 456, column: 1313, scope: !9595)
!9605 = !DILocation(line: 456, column: 1327, scope: !9606)
!9606 = !DILexicalBlockFile(scope: !9607, file: !1003, discriminator: 46)
!9607 = distinct !DILexicalBlock(scope: !9344, file: !1003, line: 456, column: 1327)
!9608 = !DILocation(line: 456, column: 1337, scope: !9606)
!9609 = !DILocation(line: 456, column: 1341, scope: !9610)
!9610 = !DILexicalBlockFile(scope: !9607, file: !1003, discriminator: 47)
!9611 = !DILocation(line: 456, column: 1348, scope: !9610)
!9612 = !DILocation(line: 456, column: 1352, scope: !9610)
!9613 = !DILocation(line: 456, column: 1345, scope: !9610)
!9614 = !DILocation(line: 456, column: 1355, scope: !9610)
!9615 = !DILocation(line: 456, column: 1358, scope: !9616)
!9616 = !DILexicalBlockFile(scope: !9607, file: !1003, discriminator: 48)
!9617 = !DILocation(line: 456, column: 1365, scope: !9616)
!9618 = !DILocation(line: 456, column: 1362, scope: !9616)
!9619 = !DILocation(line: 456, column: 1327, scope: !9616)
!9620 = !DILocation(line: 456, column: 1378, scope: !9621)
!9621 = !DILexicalBlockFile(scope: !9622, file: !1003, discriminator: 49)
!9622 = distinct !DILexicalBlock(scope: !9607, file: !1003, line: 456, column: 1371)
!9623 = !DILocation(line: 456, column: 1376, scope: !9621)
!9624 = !DILocation(line: 456, column: 1385, scope: !9621)
!9625 = !DILocation(line: 456, column: 1391, scope: !9626)
!9626 = !DILexicalBlockFile(scope: !9622, file: !1003, discriminator: 50)
!9627 = !DILocation(line: 456, column: 1395, scope: !9626)
!9628 = !DILocation(line: 456, column: 1394, scope: !9626)
!9629 = !DILocation(line: 456, column: 1399, scope: !9626)
!9630 = !DILocation(line: 456, column: 1434, scope: !9631)
!9631 = !DILexicalBlockFile(scope: !9622, file: !1003, discriminator: 51)
!9632 = !DILocation(line: 456, column: 1439, scope: !9631)
!9633 = !DILocation(line: 456, column: 1442, scope: !9631)
!9634 = !DILocation(line: 456, column: 1402, scope: !9631)
!9635 = !DILocation(line: 456, column: 1446, scope: !9631)
!9636 = !DILocation(line: 456, column: 1385, scope: !9637)
!9637 = !DILexicalBlockFile(scope: !9622, file: !1003, discriminator: 52)
!9638 = !DILocation(line: 456, column: 1455, scope: !9639)
!9639 = !DILexicalBlockFile(scope: !9622, file: !1003, discriminator: 53)
!9640 = !DILocation(line: 456, column: 1385, scope: !9639)
!9641 = distinct !{!9641, !9642}
!9642 = !DILocation(line: 456, column: 1385, scope: !9622)
!9643 = !DILocation(line: 456, column: 1462, scope: !9644)
!9644 = !DILexicalBlockFile(scope: !9645, file: !1003, discriminator: 54)
!9645 = distinct !DILexicalBlock(scope: !9622, file: !1003, line: 456, column: 1462)
!9646 = !DILocation(line: 456, column: 1467, scope: !9644)
!9647 = !DILocation(line: 456, column: 1465, scope: !9644)
!9648 = !DILocation(line: 456, column: 1472, scope: !9649)
!9649 = !DILexicalBlockFile(scope: !9645, file: !1003, discriminator: 55)
!9650 = !DILocation(line: 456, column: 1479, scope: !9651)
!9651 = !DILexicalBlockFile(scope: !9622, file: !1003, discriminator: 56)
!9652 = !DILocation(line: 456, column: 1484, scope: !9653)
!9653 = !DILexicalBlockFile(scope: !9654, file: !1003, discriminator: 57)
!9654 = distinct !DILexicalBlock(scope: !9344, file: !1003, line: 456, column: 1484)
!9655 = !DILocation(line: 456, column: 1488, scope: !9653)
!9656 = !DILocation(line: 456, column: 1487, scope: !9653)
!9657 = !DILocation(line: 456, column: 1495, scope: !9653)
!9658 = !DILocation(line: 456, column: 1500, scope: !9653)
!9659 = !DILocation(line: 456, column: 1499, scope: !9653)
!9660 = !DILocation(line: 456, column: 1493, scope: !9653)
!9661 = !DILocation(line: 456, column: 1523, scope: !9662)
!9662 = !DILexicalBlockFile(scope: !9663, file: !1003, discriminator: 58)
!9663 = distinct !DILexicalBlock(scope: !9654, file: !1003, line: 456, column: 1506)
!9664 = !DILocation(line: 456, column: 1514, scope: !9662)
!9665 = !DILocation(line: 456, column: 1508, scope: !9662)
!9666 = !DILocation(line: 456, column: 1521, scope: !9662)
!9667 = !DILocation(line: 456, column: 1546, scope: !9662)
!9668 = !DILocation(line: 456, column: 1538, scope: !9662)
!9669 = !DILocation(line: 456, column: 1530, scope: !9662)
!9670 = !DILocation(line: 456, column: 1544, scope: !9662)
!9671 = !DILocation(line: 456, column: 1561, scope: !9662)
!9672 = !DILocation(line: 456, column: 1565, scope: !9662)
!9673 = !DILocation(line: 456, column: 1559, scope: !9662)
!9674 = !DILocation(line: 456, column: 1569, scope: !9662)
!9675 = !DILocation(line: 456, column: 1591, scope: !9676)
!9676 = !DILexicalBlockFile(scope: !9677, file: !1003, discriminator: 59)
!9677 = distinct !DILexicalBlock(scope: !9654, file: !1003, line: 456, column: 1574)
!9678 = !DILocation(line: 456, column: 1595, scope: !9676)
!9679 = !DILocation(line: 456, column: 1582, scope: !9676)
!9680 = !DILocation(line: 456, column: 1576, scope: !9676)
!9681 = !DILocation(line: 456, column: 1589, scope: !9676)
!9682 = !DILocation(line: 456, column: 1615, scope: !9676)
!9683 = !DILocation(line: 456, column: 1607, scope: !9676)
!9684 = !DILocation(line: 456, column: 1599, scope: !9676)
!9685 = !DILocation(line: 456, column: 1613, scope: !9676)
!9686 = !DILocation(line: 456, column: 1626, scope: !9676)
!9687 = !DILocation(line: 456, column: 1624, scope: !9676)
!9688 = !DILocation(line: 456, column: 1635, scope: !9689)
!9689 = !DILexicalBlockFile(scope: !9344, file: !1003, discriminator: 60)
!9690 = !DILocation(line: 456, column: 1677, scope: !9691)
!9691 = !DILexicalBlockFile(scope: !9692, file: !1003, discriminator: 61)
!9692 = distinct !DILexicalBlock(scope: !9693, file: !1003, line: 456, column: 1645)
!9693 = distinct !DILexicalBlock(scope: !9338, file: !1003, line: 456, column: 1640)
!9694 = !DILocation(line: 456, column: 1684, scope: !9691)
!9695 = !DILocation(line: 456, column: 1645, scope: !9691)
!9696 = !DILocation(line: 456, column: 1689, scope: !9691)
!9697 = !DILocation(line: 456, column: 1694, scope: !9698)
!9698 = !DILexicalBlockFile(scope: !9692, file: !1003, discriminator: 62)
!9699 = distinct !{!9699, !9700}
!9700 = !DILocation(line: 456, column: 1694, scope: !9692)
!9701 = !DILocalVariable(name: "SWAP_tmp", scope: !9702, file: !1003, line: 456, type: !990)
!9702 = distinct !DILexicalBlock(scope: !9692, file: !1003, line: 456, column: 1696)
!9703 = !DILocation(line: 456, column: 1705, scope: !9702)
!9704 = !DILocation(line: 456, column: 1716, scope: !9705)
!9705 = !DILexicalBlockFile(scope: !9702, file: !1003, discriminator: 63)
!9706 = !DILocation(line: 456, column: 1715, scope: !9705)
!9707 = !DILocation(line: 456, column: 1705, scope: !9705)
!9708 = !DILocation(line: 456, column: 1728, scope: !9705)
!9709 = !DILocation(line: 456, column: 1727, scope: !9705)
!9710 = !DILocation(line: 456, column: 1722, scope: !9705)
!9711 = !DILocation(line: 456, column: 1725, scope: !9705)
!9712 = !DILocation(line: 456, column: 1743, scope: !9705)
!9713 = !DILocation(line: 456, column: 1736, scope: !9705)
!9714 = !DILocation(line: 456, column: 1741, scope: !9705)
!9715 = !DILocation(line: 456, column: 1752, scope: !9705)
!9716 = !DILocation(line: 456, column: 1752, scope: !9717)
!9717 = !DILexicalBlockFile(scope: !9702, file: !1003, discriminator: 64)
!9718 = !DILocation(line: 456, column: 1763, scope: !9719)
!9719 = !DILexicalBlockFile(scope: !9693, file: !1003, discriminator: 65)
!9720 = !DILocation(line: 456, column: 186, scope: !9721)
!9721 = !DILexicalBlockFile(scope: !9319, file: !1003, discriminator: 66)
!9722 = distinct !{!9722, !9723}
!9723 = !DILocation(line: 456, column: 186, scope: !9319)
!9724 = !DILocation(line: 456, column: 113, scope: !9725)
!9725 = !DILexicalBlockFile(scope: !9296, file: !1003, discriminator: 67)
!9726 = distinct !{!9726, !9727}
!9727 = !DILocation(line: 456, column: 113, scope: !9296)
!9728 = !DILocation(line: 456, column: 1775, scope: !9729)
!9729 = !DILexicalBlockFile(scope: !9296, file: !1003, discriminator: 68)
!9730 = !DILocation(line: 458, column: 22, scope: !8741)
!9731 = !DILocation(line: 458, column: 27, scope: !8741)
!9732 = !DILocation(line: 458, column: 13, scope: !8741)
!9733 = !DILocation(line: 458, column: 20, scope: !8741)
!9734 = !DILocation(line: 459, column: 20, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !8741, file: !1003, line: 459, column: 13)
!9736 = !DILocation(line: 459, column: 18, scope: !9735)
!9737 = !DILocation(line: 459, column: 25, scope: !9738)
!9738 = !DILexicalBlockFile(scope: !9739, file: !1003, discriminator: 1)
!9739 = distinct !DILexicalBlock(scope: !9735, file: !1003, line: 459, column: 13)
!9740 = !DILocation(line: 459, column: 30, scope: !9738)
!9741 = !DILocation(line: 459, column: 27, scope: !9738)
!9742 = !DILocation(line: 459, column: 13, scope: !9738)
!9743 = !DILocation(line: 460, column: 25, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9745, file: !1003, line: 460, column: 21)
!9745 = distinct !DILexicalBlock(scope: !9739, file: !1003, line: 459, column: 48)
!9746 = !DILocation(line: 460, column: 21, scope: !9744)
!9747 = !DILocation(line: 460, column: 28, scope: !9744)
!9748 = !DILocation(line: 460, column: 21, scope: !9745)
!9749 = !DILocation(line: 461, column: 28, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9744, file: !1003, line: 460, column: 34)
!9751 = !DILocation(line: 461, column: 32, scope: !9750)
!9752 = !DILocation(line: 461, column: 69, scope: !9750)
!9753 = !DILocation(line: 461, column: 76, scope: !9750)
!9754 = !DILocation(line: 461, column: 72, scope: !9750)
!9755 = !DILocation(line: 461, column: 21, scope: !9750)
!9756 = !DILocation(line: 462, column: 21, scope: !9750)
!9757 = !DILocation(line: 464, column: 31, scope: !9745)
!9758 = !DILocation(line: 464, column: 32, scope: !9745)
!9759 = !DILocation(line: 464, column: 27, scope: !9745)
!9760 = !DILocation(line: 464, column: 21, scope: !9745)
!9761 = !DILocation(line: 464, column: 17, scope: !9745)
!9762 = !DILocation(line: 464, column: 24, scope: !9745)
!9763 = !DILocation(line: 465, column: 13, scope: !9745)
!9764 = !DILocation(line: 459, column: 44, scope: !9765)
!9765 = !DILexicalBlockFile(scope: !9739, file: !1003, discriminator: 2)
!9766 = !DILocation(line: 459, column: 13, scope: !9765)
!9767 = distinct !{!9767, !9768}
!9768 = !DILocation(line: 459, column: 13, scope: !8741)
!9769 = !DILocation(line: 467, column: 29, scope: !8741)
!9770 = !DILocation(line: 467, column: 43, scope: !8741)
!9771 = !DILocation(line: 467, column: 41, scope: !8741)
!9772 = !DILocation(line: 467, column: 13, scope: !8741)
!9773 = !DILocation(line: 467, column: 18, scope: !8741)
!9774 = !DILocation(line: 467, column: 27, scope: !8741)
!9775 = !DILocation(line: 468, column: 32, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !8741, file: !1003, line: 468, column: 17)
!9777 = !DILocation(line: 468, column: 36, scope: !9776)
!9778 = !DILocation(line: 468, column: 43, scope: !9776)
!9779 = !DILocation(line: 468, column: 48, scope: !9776)
!9780 = !DILocation(line: 468, column: 58, scope: !9776)
!9781 = !DILocation(line: 468, column: 63, scope: !9776)
!9782 = !DILocation(line: 468, column: 79, scope: !9776)
!9783 = !DILocation(line: 468, column: 17, scope: !9776)
!9784 = !DILocation(line: 468, column: 17, scope: !8741)
!9785 = !DILocation(line: 469, column: 17, scope: !9776)
!9786 = !DILocation(line: 470, column: 21, scope: !8741)
!9787 = !DILocation(line: 470, column: 26, scope: !8741)
!9788 = !DILocation(line: 470, column: 13, scope: !8741)
!9789 = !DILocation(line: 471, column: 21, scope: !8741)
!9790 = !DILocation(line: 471, column: 33, scope: !8741)
!9791 = !DILocation(line: 471, column: 20, scope: !8741)
!9792 = !DILocation(line: 471, column: 38, scope: !8741)
!9793 = !DILocation(line: 472, column: 35, scope: !8741)
!9794 = !DILocation(line: 472, column: 47, scope: !8741)
!9795 = !DILocation(line: 472, column: 21, scope: !8741)
!9796 = !DILocation(line: 472, column: 26, scope: !8741)
!9797 = !DILocation(line: 472, column: 13, scope: !8741)
!9798 = !DILocation(line: 472, column: 53, scope: !8741)
!9799 = !DILocation(line: 472, column: 57, scope: !8741)
!9800 = !DILocation(line: 473, column: 21, scope: !8741)
!9801 = !DILocation(line: 473, column: 33, scope: !8741)
!9802 = !DILocation(line: 475, column: 9, scope: !8741)
!9803 = !DILocation(line: 476, column: 29, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !8738, file: !1003, line: 475, column: 16)
!9805 = !DILocation(line: 476, column: 13, scope: !9804)
!9806 = !DILocation(line: 476, column: 18, scope: !9804)
!9807 = !DILocation(line: 476, column: 27, scope: !9804)
!9808 = !DILocation(line: 477, column: 32, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9804, file: !1003, line: 477, column: 17)
!9810 = !DILocation(line: 477, column: 36, scope: !9809)
!9811 = !DILocation(line: 477, column: 43, scope: !9809)
!9812 = !DILocation(line: 477, column: 48, scope: !9809)
!9813 = !DILocation(line: 477, column: 58, scope: !9809)
!9814 = !DILocation(line: 477, column: 63, scope: !9809)
!9815 = !DILocation(line: 477, column: 79, scope: !9809)
!9816 = !DILocation(line: 477, column: 17, scope: !9809)
!9817 = !DILocation(line: 477, column: 17, scope: !9804)
!9818 = !DILocation(line: 478, column: 17, scope: !9809)
!9819 = !DILocation(line: 479, column: 20, scope: !9804)
!9820 = !DILocation(line: 479, column: 25, scope: !9804)
!9821 = !DILocation(line: 479, column: 13, scope: !9804)
!9822 = !DILocation(line: 479, column: 41, scope: !9804)
!9823 = !DILocation(line: 479, column: 53, scope: !9804)
!9824 = !DILocation(line: 479, column: 40, scope: !9804)
!9825 = !DILocation(line: 479, column: 58, scope: !9804)
!9826 = !DILocation(line: 483, column: 5, scope: !7364)
!9827 = !DILocation(line: 484, column: 1, scope: !7364)
!9828 = distinct !DISubprogram(name: "sbr_make_f_derived", scope: !1003, file: !1003, line: 545, type: !9829, isLocal: true, isDefinition: true, scopeLine: 546, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!9829 = !DISubroutineType(types: !9830)
!9830 = !{!958, !1510, !1125}
!9831 = !DILocalVariable(name: "ac", arg: 1, scope: !9828, file: !1003, line: 545, type: !1510)
!9832 = !DILocation(line: 545, column: 43, scope: !9828)
!9833 = !DILocalVariable(name: "sbr", arg: 2, scope: !9828, file: !1003, line: 545, type: !1125)
!9834 = !DILocation(line: 545, column: 72, scope: !9828)
!9835 = !DILocalVariable(name: "k", scope: !9828, file: !1003, line: 547, type: !958)
!9836 = !DILocation(line: 547, column: 9, scope: !9828)
!9837 = !DILocalVariable(name: "temp", scope: !9828, file: !1003, line: 547, type: !958)
!9838 = !DILocation(line: 547, column: 12, scope: !9828)
!9839 = !DILocalVariable(name: "nz", scope: !9828, file: !1003, line: 549, type: !958)
!9840 = !DILocation(line: 549, column: 9, scope: !9828)
!9841 = !DILocation(line: 552, column: 17, scope: !9828)
!9842 = !DILocation(line: 552, column: 22, scope: !9828)
!9843 = !DILocation(line: 552, column: 33, scope: !9828)
!9844 = !DILocation(line: 552, column: 38, scope: !9828)
!9845 = !DILocation(line: 552, column: 54, scope: !9828)
!9846 = !DILocation(line: 552, column: 31, scope: !9828)
!9847 = !DILocation(line: 552, column: 5, scope: !9828)
!9848 = !DILocation(line: 552, column: 10, scope: !9828)
!9849 = !DILocation(line: 552, column: 15, scope: !9828)
!9850 = !DILocation(line: 553, column: 18, scope: !9828)
!9851 = !DILocation(line: 553, column: 23, scope: !9828)
!9852 = !DILocation(line: 553, column: 28, scope: !9828)
!9853 = !DILocation(line: 553, column: 33, scope: !9828)
!9854 = !DILocation(line: 553, column: 5, scope: !9828)
!9855 = !DILocation(line: 553, column: 10, scope: !9828)
!9856 = !DILocation(line: 553, column: 15, scope: !9828)
!9857 = !DILocation(line: 555, column: 12, scope: !9828)
!9858 = !DILocation(line: 555, column: 17, scope: !9828)
!9859 = !DILocation(line: 555, column: 5, scope: !9828)
!9860 = !DILocation(line: 555, column: 45, scope: !9828)
!9861 = !DILocation(line: 555, column: 50, scope: !9828)
!9862 = !DILocation(line: 555, column: 66, scope: !9828)
!9863 = !DILocation(line: 555, column: 31, scope: !9828)
!9864 = !DILocation(line: 555, column: 36, scope: !9828)
!9865 = !DILocation(line: 556, column: 13, scope: !9828)
!9866 = !DILocation(line: 556, column: 18, scope: !9828)
!9867 = !DILocation(line: 556, column: 23, scope: !9828)
!9868 = !DILocation(line: 556, column: 12, scope: !9828)
!9869 = !DILocation(line: 556, column: 28, scope: !9828)
!9870 = !DILocation(line: 557, column: 34, scope: !9828)
!9871 = !DILocation(line: 557, column: 39, scope: !9828)
!9872 = !DILocation(line: 557, column: 17, scope: !9828)
!9873 = !DILocation(line: 557, column: 22, scope: !9828)
!9874 = !DILocation(line: 557, column: 47, scope: !9828)
!9875 = !DILocation(line: 557, column: 52, scope: !9828)
!9876 = !DILocation(line: 557, column: 45, scope: !9828)
!9877 = !DILocation(line: 557, column: 5, scope: !9828)
!9878 = !DILocation(line: 557, column: 10, scope: !9828)
!9879 = !DILocation(line: 557, column: 15, scope: !9828)
!9880 = !DILocation(line: 558, column: 18, scope: !9828)
!9881 = !DILocation(line: 558, column: 23, scope: !9828)
!9882 = !DILocation(line: 558, column: 5, scope: !9828)
!9883 = !DILocation(line: 558, column: 10, scope: !9828)
!9884 = !DILocation(line: 558, column: 16, scope: !9828)
!9885 = !DILocation(line: 561, column: 9, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9828, file: !1003, line: 561, column: 9)
!9887 = !DILocation(line: 561, column: 14, scope: !9886)
!9888 = !DILocation(line: 561, column: 22, scope: !9886)
!9889 = !DILocation(line: 561, column: 27, scope: !9886)
!9890 = !DILocation(line: 561, column: 20, scope: !9886)
!9891 = !DILocation(line: 561, column: 32, scope: !9886)
!9892 = !DILocation(line: 561, column: 9, scope: !9828)
!9893 = !DILocation(line: 562, column: 16, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9886, file: !1003, line: 561, column: 38)
!9895 = !DILocation(line: 562, column: 20, scope: !9894)
!9896 = !DILocation(line: 563, column: 56, scope: !9894)
!9897 = !DILocation(line: 563, column: 61, scope: !9894)
!9898 = !DILocation(line: 563, column: 69, scope: !9894)
!9899 = !DILocation(line: 563, column: 74, scope: !9894)
!9900 = !DILocation(line: 563, column: 67, scope: !9894)
!9901 = !DILocation(line: 562, column: 9, scope: !9894)
!9902 = !DILocation(line: 564, column: 9, scope: !9894)
!9903 = !DILocation(line: 566, column: 9, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9828, file: !1003, line: 566, column: 9)
!9905 = !DILocation(line: 566, column: 14, scope: !9904)
!9906 = !DILocation(line: 566, column: 20, scope: !9904)
!9907 = !DILocation(line: 566, column: 9, scope: !9828)
!9908 = !DILocation(line: 567, column: 16, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9904, file: !1003, line: 566, column: 26)
!9910 = !DILocation(line: 567, column: 20, scope: !9909)
!9911 = !DILocation(line: 567, column: 72, scope: !9909)
!9912 = !DILocation(line: 567, column: 77, scope: !9909)
!9913 = !DILocation(line: 567, column: 9, scope: !9909)
!9914 = !DILocation(line: 568, column: 9, scope: !9909)
!9915 = !DILocation(line: 571, column: 26, scope: !9828)
!9916 = !DILocation(line: 571, column: 31, scope: !9828)
!9917 = !DILocation(line: 571, column: 5, scope: !9828)
!9918 = !DILocation(line: 571, column: 10, scope: !9828)
!9919 = !DILocation(line: 571, column: 24, scope: !9828)
!9920 = !DILocation(line: 572, column: 12, scope: !9828)
!9921 = !DILocation(line: 572, column: 17, scope: !9828)
!9922 = !DILocation(line: 572, column: 22, scope: !9828)
!9923 = !DILocation(line: 572, column: 10, scope: !9828)
!9924 = !DILocation(line: 573, column: 12, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9828, file: !1003, line: 573, column: 5)
!9926 = !DILocation(line: 573, column: 10, scope: !9925)
!9927 = !DILocation(line: 573, column: 17, scope: !9928)
!9928 = !DILexicalBlockFile(scope: !9929, file: !1003, discriminator: 1)
!9929 = distinct !DILexicalBlock(scope: !9925, file: !1003, line: 573, column: 5)
!9930 = !DILocation(line: 573, column: 22, scope: !9928)
!9931 = !DILocation(line: 573, column: 27, scope: !9928)
!9932 = !DILocation(line: 573, column: 19, scope: !9928)
!9933 = !DILocation(line: 573, column: 5, scope: !9928)
!9934 = !DILocation(line: 574, column: 51, scope: !9929)
!9935 = !DILocation(line: 574, column: 49, scope: !9929)
!9936 = !DILocation(line: 574, column: 55, scope: !9929)
!9937 = !DILocation(line: 574, column: 53, scope: !9929)
!9938 = !DILocation(line: 574, column: 30, scope: !9929)
!9939 = !DILocation(line: 574, column: 35, scope: !9929)
!9940 = !DILocation(line: 574, column: 25, scope: !9929)
!9941 = !DILocation(line: 574, column: 9, scope: !9929)
!9942 = !DILocation(line: 574, column: 14, scope: !9929)
!9943 = !DILocation(line: 574, column: 28, scope: !9929)
!9944 = !DILocation(line: 573, column: 34, scope: !9945)
!9945 = !DILexicalBlockFile(scope: !9929, file: !1003, discriminator: 2)
!9946 = !DILocation(line: 573, column: 5, scope: !9945)
!9947 = distinct !{!9947, !9948}
!9948 = !DILocation(line: 573, column: 5, scope: !9828)
!9949 = !DILocation(line: 576, column: 13, scope: !9828)
!9950 = !DILocation(line: 576, column: 18, scope: !9828)
!9951 = !DILocation(line: 576, column: 23, scope: !9828)
!9952 = !DILocation(line: 576, column: 32, scope: !9828)
!9953 = !DILocation(line: 576, column: 37, scope: !9828)
!9954 = !DILocation(line: 576, column: 30, scope: !9828)
!9955 = !DILocation(line: 576, column: 10, scope: !9828)
!9956 = !DILocation(line: 577, column: 5, scope: !9828)
!9957 = !DILocation(line: 577, column: 12, scope: !9958)
!9958 = !DILexicalBlockFile(scope: !9828, file: !1003, discriminator: 1)
!9959 = !DILocation(line: 577, column: 17, scope: !9958)
!9960 = !DILocation(line: 577, column: 5, scope: !9958)
!9961 = !DILocation(line: 578, column: 14, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9828, file: !1003, line: 577, column: 31)
!9963 = !DILocation(line: 579, column: 11, scope: !9962)
!9964 = !DILocation(line: 577, column: 5, scope: !9965)
!9965 = !DILexicalBlockFile(scope: !9828, file: !1003, discriminator: 2)
!9966 = distinct !{!9966, !9956}
!9967 = !DILocation(line: 581, column: 22, scope: !9828)
!9968 = !DILocation(line: 581, column: 27, scope: !9828)
!9969 = !DILocation(line: 581, column: 12, scope: !9828)
!9970 = !DILocation(line: 581, column: 10, scope: !9828)
!9971 = !DILocation(line: 582, column: 28, scope: !9828)
!9972 = !DILocation(line: 582, column: 19, scope: !9828)
!9973 = !DILocation(line: 582, column: 33, scope: !9828)
!9974 = !DILocation(line: 582, column: 51, scope: !9828)
!9975 = !DILocation(line: 582, column: 65, scope: !9828)
!9976 = !DILocation(line: 582, column: 12, scope: !9828)
!9977 = !DILocation(line: 582, column: 10, scope: !9828)
!9978 = !DILocation(line: 583, column: 15, scope: !9828)
!9979 = !DILocation(line: 583, column: 20, scope: !9828)
!9980 = !DILocation(line: 583, column: 28, scope: !9828)
!9981 = !DILocation(line: 583, column: 42, scope: !9828)
!9982 = !DILocation(line: 583, column: 40, scope: !9828)
!9983 = !DILocation(line: 583, column: 46, scope: !9828)
!9984 = !DILocation(line: 583, column: 34, scope: !9828)
!9985 = !DILocation(line: 583, column: 56, scope: !9828)
!9986 = !DILocation(line: 583, column: 61, scope: !9828)
!9987 = !DILocation(line: 583, column: 77, scope: !9828)
!9988 = !DILocation(line: 583, column: 54, scope: !9828)
!9989 = !DILocation(line: 583, column: 10, scope: !9828)
!9990 = !DILocation(line: 585, column: 17, scope: !9828)
!9991 = !DILocation(line: 585, column: 22, scope: !9828)
!9992 = !DILocation(line: 585, column: 34, scope: !9828)
!9993 = !DILocation(line: 585, column: 5, scope: !9828)
!9994 = !DILocation(line: 585, column: 10, scope: !9828)
!9995 = !DILocation(line: 585, column: 14, scope: !9828)
!9996 = !DILocation(line: 586, column: 9, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9828, file: !1003, line: 586, column: 9)
!9998 = !DILocation(line: 586, column: 14, scope: !9997)
!9999 = !DILocation(line: 586, column: 18, scope: !9997)
!10000 = !DILocation(line: 586, column: 9, scope: !9828)
!10001 = !DILocation(line: 587, column: 9, scope: !9997)
!10002 = !DILocation(line: 587, column: 14, scope: !9997)
!10003 = !DILocation(line: 587, column: 18, scope: !9997)
!10004 = !DILocation(line: 593, column: 9, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9828, file: !1003, line: 593, column: 9)
!10006 = !DILocation(line: 593, column: 14, scope: !10005)
!10007 = !DILocation(line: 593, column: 18, scope: !10005)
!10008 = !DILocation(line: 593, column: 9, scope: !9828)
!10009 = !DILocation(line: 594, column: 16, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10005, file: !1003, line: 593, column: 23)
!10011 = !DILocation(line: 594, column: 20, scope: !10010)
!10012 = !DILocation(line: 594, column: 75, scope: !10010)
!10013 = !DILocation(line: 594, column: 80, scope: !10010)
!10014 = !DILocation(line: 594, column: 9, scope: !10010)
!10015 = !DILocation(line: 595, column: 9, scope: !10010)
!10016 = !DILocation(line: 598, column: 28, scope: !9828)
!10017 = !DILocation(line: 598, column: 33, scope: !9828)
!10018 = !DILocation(line: 598, column: 5, scope: !9828)
!10019 = !DILocation(line: 598, column: 10, scope: !9828)
!10020 = !DILocation(line: 598, column: 26, scope: !9828)
!10021 = !DILocation(line: 599, column: 10, scope: !9828)
!10022 = !DILocation(line: 600, column: 12, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !9828, file: !1003, line: 600, column: 5)
!10024 = !DILocation(line: 600, column: 10, scope: !10023)
!10025 = !DILocation(line: 600, column: 17, scope: !10026)
!10026 = !DILexicalBlockFile(scope: !10027, file: !1003, discriminator: 1)
!10027 = distinct !DILexicalBlock(scope: !10023, file: !1003, line: 600, column: 5)
!10028 = !DILocation(line: 600, column: 22, scope: !10026)
!10029 = !DILocation(line: 600, column: 27, scope: !10026)
!10030 = !DILocation(line: 600, column: 19, scope: !10026)
!10031 = !DILocation(line: 600, column: 5, scope: !10026)
!10032 = !DILocation(line: 601, column: 18, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10027, file: !1003, line: 600, column: 37)
!10034 = !DILocation(line: 601, column: 23, scope: !10033)
!10035 = !DILocation(line: 601, column: 30, scope: !10033)
!10036 = !DILocation(line: 601, column: 28, scope: !10033)
!10037 = !DILocation(line: 601, column: 39, scope: !10033)
!10038 = !DILocation(line: 601, column: 44, scope: !10033)
!10039 = !DILocation(line: 601, column: 48, scope: !10033)
!10040 = !DILocation(line: 601, column: 54, scope: !10033)
!10041 = !DILocation(line: 601, column: 52, scope: !10033)
!10042 = !DILocation(line: 601, column: 36, scope: !10033)
!10043 = !DILocation(line: 601, column: 14, scope: !10033)
!10044 = !DILocation(line: 602, column: 48, scope: !10033)
!10045 = !DILocation(line: 602, column: 32, scope: !10033)
!10046 = !DILocation(line: 602, column: 37, scope: !10033)
!10047 = !DILocation(line: 602, column: 27, scope: !10033)
!10048 = !DILocation(line: 602, column: 9, scope: !10033)
!10049 = !DILocation(line: 602, column: 14, scope: !10033)
!10050 = !DILocation(line: 602, column: 30, scope: !10033)
!10051 = !DILocation(line: 603, column: 5, scope: !10033)
!10052 = !DILocation(line: 600, column: 33, scope: !10053)
!10053 = !DILexicalBlockFile(scope: !10027, file: !1003, discriminator: 2)
!10054 = !DILocation(line: 600, column: 5, scope: !10053)
!10055 = distinct !{!10055, !10056}
!10056 = !DILocation(line: 600, column: 5, scope: !9828)
!10057 = !DILocation(line: 605, column: 30, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !9828, file: !1003, line: 605, column: 9)
!10059 = !DILocation(line: 605, column: 34, scope: !10058)
!10060 = !DILocation(line: 605, column: 9, scope: !10058)
!10061 = !DILocation(line: 605, column: 39, scope: !10058)
!10062 = !DILocation(line: 605, column: 9, scope: !9828)
!10063 = !DILocation(line: 606, column: 9, scope: !10058)
!10064 = !DILocation(line: 608, column: 25, scope: !9828)
!10065 = !DILocation(line: 608, column: 5, scope: !9828)
!10066 = !DILocation(line: 610, column: 5, scope: !9828)
!10067 = !DILocation(line: 610, column: 10, scope: !9828)
!10068 = !DILocation(line: 610, column: 18, scope: !9828)
!10069 = !DILocation(line: 610, column: 31, scope: !9828)
!10070 = !DILocation(line: 611, column: 5, scope: !9828)
!10071 = !DILocation(line: 611, column: 10, scope: !9828)
!10072 = !DILocation(line: 611, column: 18, scope: !9828)
!10073 = !DILocation(line: 611, column: 31, scope: !9828)
!10074 = !DILocation(line: 613, column: 5, scope: !9828)
!10075 = !DILocation(line: 614, column: 1, scope: !9828)
!10076 = distinct !DISubprogram(name: "make_bands", scope: !1058, file: !1058, line: 127, type: !10077, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!10077 = !DISubroutineType(types: !10078)
!10078 = !{null, !2419, !958, !958, !958}
!10079 = !DILocalVariable(name: "bands", arg: 1, scope: !10076, file: !1058, line: 127, type: !2419)
!10080 = !DILocation(line: 127, column: 33, scope: !10076)
!10081 = !DILocalVariable(name: "start", arg: 2, scope: !10076, file: !1058, line: 127, type: !958)
!10082 = !DILocation(line: 127, column: 44, scope: !10076)
!10083 = !DILocalVariable(name: "stop", arg: 3, scope: !10076, file: !1058, line: 127, type: !958)
!10084 = !DILocation(line: 127, column: 55, scope: !10076)
!10085 = !DILocalVariable(name: "num_bands", arg: 4, scope: !10076, file: !1058, line: 127, type: !958)
!10086 = !DILocation(line: 127, column: 65, scope: !10076)
!10087 = !DILocalVariable(name: "k", scope: !10076, file: !1058, line: 129, type: !958)
!10088 = !DILocation(line: 129, column: 9, scope: !10076)
!10089 = !DILocalVariable(name: "previous", scope: !10076, file: !1058, line: 129, type: !958)
!10090 = !DILocation(line: 129, column: 12, scope: !10076)
!10091 = !DILocalVariable(name: "present", scope: !10076, file: !1058, line: 129, type: !958)
!10092 = !DILocation(line: 129, column: 22, scope: !10076)
!10093 = !DILocalVariable(name: "base", scope: !10076, file: !1058, line: 130, type: !958)
!10094 = !DILocation(line: 130, column: 9, scope: !10076)
!10095 = !DILocalVariable(name: "prod", scope: !10076, file: !1058, line: 130, type: !958)
!10096 = !DILocation(line: 130, column: 15, scope: !10076)
!10097 = !DILocalVariable(name: "nz", scope: !10076, file: !1058, line: 130, type: !958)
!10098 = !DILocation(line: 130, column: 21, scope: !10076)
!10099 = !DILocation(line: 132, column: 13, scope: !10076)
!10100 = !DILocation(line: 132, column: 18, scope: !10076)
!10101 = !DILocation(line: 132, column: 27, scope: !10076)
!10102 = !DILocation(line: 132, column: 25, scope: !10076)
!10103 = !DILocation(line: 132, column: 10, scope: !10076)
!10104 = !DILocation(line: 133, column: 5, scope: !10076)
!10105 = !DILocation(line: 133, column: 12, scope: !10106)
!10106 = !DILexicalBlockFile(scope: !10076, file: !1058, discriminator: 1)
!10107 = !DILocation(line: 133, column: 17, scope: !10106)
!10108 = !DILocation(line: 133, column: 5, scope: !10106)
!10109 = !DILocation(line: 134, column: 14, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10076, file: !1058, line: 133, column: 30)
!10111 = !DILocation(line: 135, column: 11, scope: !10110)
!10112 = !DILocation(line: 133, column: 5, scope: !10113)
!10113 = !DILexicalBlockFile(scope: !10076, file: !1058, discriminator: 2)
!10114 = distinct !{!10114, !10104}
!10115 = !DILocation(line: 137, column: 22, scope: !10076)
!10116 = !DILocation(line: 137, column: 27, scope: !10076)
!10117 = !DILocation(line: 137, column: 12, scope: !10076)
!10118 = !DILocation(line: 137, column: 10, scope: !10076)
!10119 = !DILocation(line: 138, column: 15, scope: !10076)
!10120 = !DILocation(line: 138, column: 20, scope: !10076)
!10121 = !DILocation(line: 138, column: 28, scope: !10076)
!10122 = !DILocation(line: 138, column: 39, scope: !10076)
!10123 = !DILocation(line: 138, column: 38, scope: !10076)
!10124 = !DILocation(line: 138, column: 42, scope: !10076)
!10125 = !DILocation(line: 138, column: 34, scope: !10076)
!10126 = !DILocation(line: 138, column: 56, scope: !10076)
!10127 = !DILocation(line: 138, column: 54, scope: !10076)
!10128 = !DILocation(line: 138, column: 10, scope: !10076)
!10129 = !DILocation(line: 139, column: 22, scope: !10076)
!10130 = !DILocation(line: 139, column: 12, scope: !10076)
!10131 = !DILocation(line: 139, column: 10, scope: !10076)
!10132 = !DILocation(line: 141, column: 16, scope: !10076)
!10133 = !DILocation(line: 141, column: 14, scope: !10076)
!10134 = !DILocation(line: 142, column: 12, scope: !10076)
!10135 = !DILocation(line: 142, column: 18, scope: !10076)
!10136 = !DILocation(line: 142, column: 10, scope: !10076)
!10137 = !DILocation(line: 144, column: 12, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10076, file: !1058, line: 144, column: 5)
!10139 = !DILocation(line: 144, column: 10, scope: !10138)
!10140 = !DILocation(line: 144, column: 17, scope: !10141)
!10141 = !DILexicalBlockFile(scope: !10142, file: !1058, discriminator: 1)
!10142 = distinct !DILexicalBlock(scope: !10138, file: !1058, line: 144, column: 5)
!10143 = !DILocation(line: 144, column: 21, scope: !10141)
!10144 = !DILocation(line: 144, column: 30, scope: !10141)
!10145 = !DILocation(line: 144, column: 19, scope: !10141)
!10146 = !DILocation(line: 144, column: 5, scope: !10141)
!10147 = !DILocation(line: 145, column: 32, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10142, file: !1058, line: 144, column: 39)
!10149 = !DILocation(line: 145, column: 23, scope: !10148)
!10150 = !DILocation(line: 145, column: 39, scope: !10148)
!10151 = !DILocation(line: 145, column: 37, scope: !10148)
!10152 = !DILocation(line: 145, column: 44, scope: !10148)
!10153 = !DILocation(line: 145, column: 56, scope: !10148)
!10154 = !DILocation(line: 145, column: 16, scope: !10148)
!10155 = !DILocation(line: 145, column: 14, scope: !10148)
!10156 = !DILocation(line: 146, column: 20, scope: !10148)
!10157 = !DILocation(line: 146, column: 25, scope: !10148)
!10158 = !DILocation(line: 146, column: 37, scope: !10148)
!10159 = !DILocation(line: 146, column: 17, scope: !10148)
!10160 = !DILocation(line: 147, column: 20, scope: !10148)
!10161 = !DILocation(line: 147, column: 30, scope: !10148)
!10162 = !DILocation(line: 147, column: 28, scope: !10148)
!10163 = !DILocation(line: 147, column: 15, scope: !10148)
!10164 = !DILocation(line: 147, column: 9, scope: !10148)
!10165 = !DILocation(line: 147, column: 18, scope: !10148)
!10166 = !DILocation(line: 148, column: 20, scope: !10148)
!10167 = !DILocation(line: 148, column: 18, scope: !10148)
!10168 = !DILocation(line: 149, column: 5, scope: !10148)
!10169 = !DILocation(line: 144, column: 35, scope: !10170)
!10170 = !DILexicalBlockFile(scope: !10142, file: !1058, discriminator: 2)
!10171 = !DILocation(line: 144, column: 5, scope: !10170)
!10172 = distinct !{!10172, !10173}
!10173 = !DILocation(line: 144, column: 5, scope: !10076)
!10174 = !DILocation(line: 150, column: 26, scope: !10076)
!10175 = !DILocation(line: 150, column: 33, scope: !10076)
!10176 = !DILocation(line: 150, column: 31, scope: !10076)
!10177 = !DILocation(line: 150, column: 11, scope: !10076)
!10178 = !DILocation(line: 150, column: 20, scope: !10076)
!10179 = !DILocation(line: 150, column: 5, scope: !10076)
!10180 = !DILocation(line: 150, column: 24, scope: !10076)
!10181 = !DILocation(line: 151, column: 1, scope: !10076)
!10182 = distinct !DISubprogram(name: "check_n_master", scope: !1003, file: !1003, line: 250, type: !10183, isLocal: true, isDefinition: true, scopeLine: 251, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!10183 = !DISubroutineType(types: !10184)
!10184 = !{!958, !1558, !958, !958}
!10185 = !DILocalVariable(name: "avctx", arg: 1, scope: !10182, file: !1003, line: 250, type: !1558)
!10186 = !DILocation(line: 250, column: 43, scope: !10182)
!10187 = !DILocalVariable(name: "n_master", arg: 2, scope: !10182, file: !1003, line: 250, type: !958)
!10188 = !DILocation(line: 250, column: 54, scope: !10182)
!10189 = !DILocalVariable(name: "bs_xover_band", arg: 3, scope: !10182, file: !1003, line: 250, type: !958)
!10190 = !DILocation(line: 250, column: 68, scope: !10182)
!10191 = !DILocation(line: 253, column: 9, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10182, file: !1003, line: 253, column: 9)
!10193 = !DILocation(line: 253, column: 18, scope: !10192)
!10194 = !DILocation(line: 253, column: 9, scope: !10182)
!10195 = !DILocation(line: 254, column: 16, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10192, file: !1003, line: 253, column: 24)
!10197 = !DILocation(line: 254, column: 53, scope: !10196)
!10198 = !DILocation(line: 254, column: 9, scope: !10196)
!10199 = !DILocation(line: 255, column: 9, scope: !10196)
!10200 = !DILocation(line: 257, column: 9, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10182, file: !1003, line: 257, column: 9)
!10202 = !DILocation(line: 257, column: 26, scope: !10201)
!10203 = !DILocation(line: 257, column: 23, scope: !10201)
!10204 = !DILocation(line: 257, column: 9, scope: !10182)
!10205 = !DILocation(line: 258, column: 16, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10201, file: !1003, line: 257, column: 36)
!10207 = !DILocation(line: 260, column: 16, scope: !10206)
!10208 = !DILocation(line: 258, column: 9, scope: !10206)
!10209 = !DILocation(line: 261, column: 9, scope: !10206)
!10210 = !DILocation(line: 263, column: 5, scope: !10182)
!10211 = !DILocation(line: 264, column: 1, scope: !10182)
!10212 = distinct !DISubprogram(name: "fixed_log", scope: !1058, file: !1058, line: 87, type: !10213, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!10213 = !DISubroutineType(types: !10214)
!10214 = !{!958, !958}
!10215 = !DILocalVariable(name: "x", arg: 1, scope: !10212, file: !1058, line: 87, type: !958)
!10216 = !DILocation(line: 87, column: 26, scope: !10212)
!10217 = !DILocalVariable(name: "i", scope: !10212, file: !1058, line: 89, type: !958)
!10218 = !DILocation(line: 89, column: 9, scope: !10212)
!10219 = !DILocalVariable(name: "ret", scope: !10212, file: !1058, line: 89, type: !958)
!10220 = !DILocation(line: 89, column: 12, scope: !10212)
!10221 = !DILocalVariable(name: "xpow", scope: !10212, file: !1058, line: 89, type: !958)
!10222 = !DILocation(line: 89, column: 17, scope: !10212)
!10223 = !DILocalVariable(name: "tmp", scope: !10212, file: !1058, line: 89, type: !958)
!10224 = !DILocation(line: 89, column: 23, scope: !10212)
!10225 = !DILocation(line: 91, column: 11, scope: !10212)
!10226 = !DILocation(line: 91, column: 9, scope: !10212)
!10227 = !DILocation(line: 92, column: 12, scope: !10212)
!10228 = !DILocation(line: 92, column: 10, scope: !10212)
!10229 = !DILocation(line: 93, column: 11, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10212, file: !1058, line: 93, column: 5)
!10231 = !DILocation(line: 93, column: 10, scope: !10230)
!10232 = !DILocation(line: 93, column: 15, scope: !10233)
!10233 = !DILexicalBlockFile(scope: !10234, file: !1058, discriminator: 1)
!10234 = distinct !DILexicalBlock(scope: !10230, file: !1058, line: 93, column: 5)
!10235 = !DILocation(line: 93, column: 16, scope: !10233)
!10236 = !DILocation(line: 93, column: 5, scope: !10233)
!10237 = !DILocation(line: 94, column: 32, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10234, file: !1058, line: 93, column: 26)
!10239 = !DILocation(line: 94, column: 23, scope: !10238)
!10240 = !DILocation(line: 94, column: 39, scope: !10238)
!10241 = !DILocation(line: 94, column: 37, scope: !10238)
!10242 = !DILocation(line: 94, column: 41, scope: !10238)
!10243 = !DILocation(line: 94, column: 55, scope: !10238)
!10244 = !DILocation(line: 94, column: 16, scope: !10238)
!10245 = !DILocation(line: 94, column: 14, scope: !10238)
!10246 = !DILocation(line: 95, column: 31, scope: !10238)
!10247 = !DILocation(line: 95, column: 22, scope: !10238)
!10248 = !DILocation(line: 95, column: 54, scope: !10238)
!10249 = !DILocation(line: 95, column: 38, scope: !10238)
!10250 = !DILocation(line: 95, column: 36, scope: !10238)
!10251 = !DILocation(line: 95, column: 57, scope: !10238)
!10252 = !DILocation(line: 95, column: 71, scope: !10238)
!10253 = !DILocation(line: 95, column: 15, scope: !10238)
!10254 = !DILocation(line: 95, column: 13, scope: !10238)
!10255 = !DILocation(line: 96, column: 16, scope: !10238)
!10256 = !DILocation(line: 96, column: 13, scope: !10238)
!10257 = !DILocation(line: 98, column: 32, scope: !10238)
!10258 = !DILocation(line: 98, column: 23, scope: !10238)
!10259 = !DILocation(line: 98, column: 39, scope: !10238)
!10260 = !DILocation(line: 98, column: 37, scope: !10238)
!10261 = !DILocation(line: 98, column: 41, scope: !10238)
!10262 = !DILocation(line: 98, column: 55, scope: !10238)
!10263 = !DILocation(line: 98, column: 16, scope: !10238)
!10264 = !DILocation(line: 98, column: 14, scope: !10238)
!10265 = !DILocation(line: 99, column: 31, scope: !10238)
!10266 = !DILocation(line: 99, column: 22, scope: !10238)
!10267 = !DILocation(line: 99, column: 54, scope: !10238)
!10268 = !DILocation(line: 99, column: 55, scope: !10238)
!10269 = !DILocation(line: 99, column: 38, scope: !10238)
!10270 = !DILocation(line: 99, column: 36, scope: !10238)
!10271 = !DILocation(line: 99, column: 59, scope: !10238)
!10272 = !DILocation(line: 99, column: 73, scope: !10238)
!10273 = !DILocation(line: 99, column: 15, scope: !10238)
!10274 = !DILocation(line: 99, column: 13, scope: !10238)
!10275 = !DILocation(line: 100, column: 16, scope: !10238)
!10276 = !DILocation(line: 100, column: 13, scope: !10238)
!10277 = !DILocation(line: 101, column: 5, scope: !10238)
!10278 = !DILocation(line: 93, column: 22, scope: !10279)
!10279 = !DILexicalBlockFile(scope: !10234, file: !1058, discriminator: 2)
!10280 = !DILocation(line: 93, column: 5, scope: !10279)
!10281 = distinct !{!10281, !10282}
!10282 = !DILocation(line: 93, column: 5, scope: !10212)
!10283 = !DILocation(line: 103, column: 12, scope: !10212)
!10284 = !DILocation(line: 103, column: 5, scope: !10212)
!10285 = distinct !DISubprogram(name: "array_min_int16", scope: !1003, file: !1003, line: 242, type: !10286, isLocal: true, isDefinition: true, scopeLine: 243, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!10286 = !DISubroutineType(types: !10287)
!10287 = !{!958, !988, !958}
!10288 = !DILocalVariable(name: "array", arg: 1, scope: !10285, file: !1003, line: 242, type: !988)
!10289 = !DILocation(line: 242, column: 43, scope: !10285)
!10290 = !DILocalVariable(name: "nel", arg: 2, scope: !10285, file: !1003, line: 242, type: !958)
!10291 = !DILocation(line: 242, column: 54, scope: !10285)
!10292 = !DILocalVariable(name: "i", scope: !10285, file: !1003, line: 244, type: !958)
!10293 = !DILocation(line: 244, column: 9, scope: !10285)
!10294 = !DILocalVariable(name: "min", scope: !10285, file: !1003, line: 244, type: !958)
!10295 = !DILocation(line: 244, column: 12, scope: !10285)
!10296 = !DILocation(line: 244, column: 18, scope: !10285)
!10297 = !DILocation(line: 245, column: 12, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10285, file: !1003, line: 245, column: 5)
!10299 = !DILocation(line: 245, column: 10, scope: !10298)
!10300 = !DILocation(line: 245, column: 17, scope: !10301)
!10301 = !DILexicalBlockFile(scope: !10302, file: !1003, discriminator: 1)
!10302 = distinct !DILexicalBlock(scope: !10298, file: !1003, line: 245, column: 5)
!10303 = !DILocation(line: 245, column: 21, scope: !10301)
!10304 = !DILocation(line: 245, column: 19, scope: !10301)
!10305 = !DILocation(line: 245, column: 5, scope: !10301)
!10306 = !DILocation(line: 246, column: 23, scope: !10302)
!10307 = !DILocation(line: 246, column: 17, scope: !10302)
!10308 = !DILocation(line: 246, column: 16, scope: !10302)
!10309 = !DILocation(line: 246, column: 30, scope: !10302)
!10310 = !DILocation(line: 246, column: 27, scope: !10302)
!10311 = !DILocation(line: 246, column: 38, scope: !10301)
!10312 = !DILocation(line: 246, column: 16, scope: !10301)
!10313 = !DILocation(line: 246, column: 52, scope: !10314)
!10314 = !DILexicalBlockFile(scope: !10302, file: !1003, discriminator: 2)
!10315 = !DILocation(line: 246, column: 46, scope: !10314)
!10316 = !DILocation(line: 246, column: 45, scope: !10314)
!10317 = !DILocation(line: 246, column: 16, scope: !10314)
!10318 = !DILocation(line: 246, column: 16, scope: !10319)
!10319 = !DILexicalBlockFile(scope: !10302, file: !1003, discriminator: 3)
!10320 = !DILocation(line: 246, column: 13, scope: !10319)
!10321 = !DILocation(line: 246, column: 9, scope: !10319)
!10322 = !DILocation(line: 245, column: 27, scope: !10314)
!10323 = !DILocation(line: 245, column: 5, scope: !10314)
!10324 = distinct !{!10324, !10325}
!10325 = !DILocation(line: 245, column: 5, scope: !10285)
!10326 = !DILocation(line: 247, column: 12, scope: !10285)
!10327 = !DILocation(line: 247, column: 5, scope: !10285)
!10328 = distinct !DISubprogram(name: "fixed_exp", scope: !1058, file: !1058, line: 112, type: !10213, isLocal: true, isDefinition: true, scopeLine: 113, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!10329 = !DILocalVariable(name: "x", arg: 1, scope: !10328, file: !1058, line: 112, type: !958)
!10330 = !DILocation(line: 112, column: 26, scope: !10328)
!10331 = !DILocalVariable(name: "i", scope: !10328, file: !1058, line: 114, type: !958)
!10332 = !DILocation(line: 114, column: 9, scope: !10328)
!10333 = !DILocalVariable(name: "ret", scope: !10328, file: !1058, line: 114, type: !958)
!10334 = !DILocation(line: 114, column: 12, scope: !10328)
!10335 = !DILocalVariable(name: "xpow", scope: !10328, file: !1058, line: 114, type: !958)
!10336 = !DILocation(line: 114, column: 17, scope: !10328)
!10337 = !DILocalVariable(name: "tmp", scope: !10328, file: !1058, line: 114, type: !958)
!10338 = !DILocation(line: 114, column: 23, scope: !10328)
!10339 = !DILocation(line: 116, column: 22, scope: !10328)
!10340 = !DILocation(line: 116, column: 20, scope: !10328)
!10341 = !DILocation(line: 116, column: 9, scope: !10328)
!10342 = !DILocation(line: 117, column: 12, scope: !10328)
!10343 = !DILocation(line: 117, column: 10, scope: !10328)
!10344 = !DILocation(line: 118, column: 11, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10328, file: !1058, line: 118, column: 5)
!10346 = !DILocation(line: 118, column: 10, scope: !10345)
!10347 = !DILocation(line: 118, column: 15, scope: !10348)
!10348 = !DILexicalBlockFile(scope: !10349, file: !1058, discriminator: 1)
!10349 = distinct !DILexicalBlock(scope: !10345, file: !1058, line: 118, column: 5)
!10350 = !DILocation(line: 118, column: 16, scope: !10348)
!10351 = !DILocation(line: 118, column: 5, scope: !10348)
!10352 = !DILocation(line: 119, column: 32, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10349, file: !1058, line: 118, column: 24)
!10354 = !DILocation(line: 119, column: 23, scope: !10353)
!10355 = !DILocation(line: 119, column: 39, scope: !10353)
!10356 = !DILocation(line: 119, column: 37, scope: !10353)
!10357 = !DILocation(line: 119, column: 41, scope: !10353)
!10358 = !DILocation(line: 119, column: 53, scope: !10353)
!10359 = !DILocation(line: 119, column: 16, scope: !10353)
!10360 = !DILocation(line: 119, column: 14, scope: !10353)
!10361 = !DILocation(line: 120, column: 31, scope: !10353)
!10362 = !DILocation(line: 120, column: 22, scope: !10353)
!10363 = !DILocation(line: 120, column: 54, scope: !10353)
!10364 = !DILocation(line: 120, column: 38, scope: !10353)
!10365 = !DILocation(line: 120, column: 36, scope: !10353)
!10366 = !DILocation(line: 120, column: 57, scope: !10353)
!10367 = !DILocation(line: 120, column: 71, scope: !10353)
!10368 = !DILocation(line: 120, column: 15, scope: !10353)
!10369 = !DILocation(line: 120, column: 13, scope: !10353)
!10370 = !DILocation(line: 121, column: 16, scope: !10353)
!10371 = !DILocation(line: 121, column: 13, scope: !10353)
!10372 = !DILocation(line: 122, column: 5, scope: !10353)
!10373 = !DILocation(line: 118, column: 21, scope: !10374)
!10374 = !DILexicalBlockFile(scope: !10349, file: !1058, discriminator: 2)
!10375 = !DILocation(line: 118, column: 5, scope: !10374)
!10376 = distinct !{!10376, !10377}
!10377 = !DILocation(line: 118, column: 5, scope: !10328)
!10378 = !DILocation(line: 124, column: 12, scope: !10328)
!10379 = !DILocation(line: 124, column: 5, scope: !10328)
!10380 = distinct !DISubprogram(name: "sbr_hf_calc_npatches", scope: !1003, file: !1003, line: 487, type: !9829, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!10381 = !DILocalVariable(name: "ac", arg: 1, scope: !10380, file: !1003, line: 487, type: !1510)
!10382 = !DILocation(line: 487, column: 45, scope: !10380)
!10383 = !DILocalVariable(name: "sbr", arg: 2, scope: !10380, file: !1003, line: 487, type: !1125)
!10384 = !DILocation(line: 487, column: 74, scope: !10380)
!10385 = !DILocalVariable(name: "i", scope: !10380, file: !1003, line: 489, type: !958)
!10386 = !DILocation(line: 489, column: 9, scope: !10380)
!10387 = !DILocalVariable(name: "k", scope: !10380, file: !1003, line: 489, type: !958)
!10388 = !DILocation(line: 489, column: 12, scope: !10380)
!10389 = !DILocalVariable(name: "last_k", scope: !10380, file: !1003, line: 489, type: !958)
!10390 = !DILocation(line: 489, column: 15, scope: !10380)
!10391 = !DILocalVariable(name: "last_msb", scope: !10380, file: !1003, line: 489, type: !958)
!10392 = !DILocation(line: 489, column: 28, scope: !10380)
!10393 = !DILocalVariable(name: "sb", scope: !10380, file: !1003, line: 489, type: !958)
!10394 = !DILocation(line: 489, column: 43, scope: !10380)
!10395 = !DILocalVariable(name: "msb", scope: !10380, file: !1003, line: 490, type: !958)
!10396 = !DILocation(line: 490, column: 9, scope: !10380)
!10397 = !DILocation(line: 490, column: 15, scope: !10380)
!10398 = !DILocation(line: 490, column: 20, scope: !10380)
!10399 = !DILocalVariable(name: "usb", scope: !10380, file: !1003, line: 491, type: !958)
!10400 = !DILocation(line: 491, column: 9, scope: !10380)
!10401 = !DILocation(line: 491, column: 15, scope: !10380)
!10402 = !DILocation(line: 491, column: 20, scope: !10380)
!10403 = !DILocalVariable(name: "goal_sb", scope: !10380, file: !1003, line: 492, type: !958)
!10404 = !DILocation(line: 492, column: 9, scope: !10380)
!10405 = !DILocation(line: 492, column: 36, scope: !10380)
!10406 = !DILocation(line: 492, column: 41, scope: !10380)
!10407 = !DILocation(line: 492, column: 53, scope: !10380)
!10408 = !DILocation(line: 492, column: 33, scope: !10380)
!10409 = !DILocation(line: 492, column: 62, scope: !10380)
!10410 = !DILocation(line: 492, column: 67, scope: !10380)
!10411 = !DILocation(line: 492, column: 60, scope: !10380)
!10412 = !DILocation(line: 494, column: 5, scope: !10380)
!10413 = !DILocation(line: 494, column: 10, scope: !10380)
!10414 = !DILocation(line: 494, column: 22, scope: !10380)
!10415 = !DILocation(line: 496, column: 9, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10380, file: !1003, line: 496, column: 9)
!10417 = !DILocation(line: 496, column: 19, scope: !10416)
!10418 = !DILocation(line: 496, column: 24, scope: !10416)
!10419 = !DILocation(line: 496, column: 32, scope: !10416)
!10420 = !DILocation(line: 496, column: 37, scope: !10416)
!10421 = !DILocation(line: 496, column: 30, scope: !10416)
!10422 = !DILocation(line: 496, column: 17, scope: !10416)
!10423 = !DILocation(line: 496, column: 9, scope: !10380)
!10424 = !DILocation(line: 497, column: 16, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10426, file: !1003, line: 497, column: 9)
!10426 = distinct !DILexicalBlock(scope: !10416, file: !1003, line: 496, column: 43)
!10427 = !DILocation(line: 497, column: 14, scope: !10425)
!10428 = !DILocation(line: 497, column: 35, scope: !10429)
!10429 = !DILexicalBlockFile(scope: !10430, file: !1003, discriminator: 1)
!10430 = distinct !DILexicalBlock(scope: !10425, file: !1003, line: 497, column: 9)
!10431 = !DILocation(line: 497, column: 21, scope: !10429)
!10432 = !DILocation(line: 497, column: 26, scope: !10429)
!10433 = !DILocation(line: 497, column: 40, scope: !10429)
!10434 = !DILocation(line: 497, column: 38, scope: !10429)
!10435 = !DILocation(line: 497, column: 9, scope: !10429)
!10436 = !DILocation(line: 497, column: 9, scope: !10437)
!10437 = !DILexicalBlockFile(scope: !10425, file: !1003, discriminator: 2)
!10438 = !DILocation(line: 497, column: 50, scope: !10439)
!10439 = !DILexicalBlockFile(scope: !10430, file: !1003, discriminator: 3)
!10440 = !DILocation(line: 497, column: 9, scope: !10439)
!10441 = distinct !{!10441, !10442}
!10442 = !DILocation(line: 497, column: 9, scope: !10426)
!10443 = !DILocation(line: 498, column: 5, scope: !10426)
!10444 = !DILocation(line: 499, column: 13, scope: !10416)
!10445 = !DILocation(line: 499, column: 18, scope: !10416)
!10446 = !DILocation(line: 499, column: 11, scope: !10416)
!10447 = !DILocation(line: 501, column: 5, scope: !10380)
!10448 = distinct !{!10448, !10447}
!10449 = !DILocalVariable(name: "odd", scope: !10450, file: !1003, line: 502, type: !958)
!10450 = distinct !DILexicalBlock(scope: !10380, file: !1003, line: 501, column: 8)
!10451 = !DILocation(line: 502, column: 13, scope: !10450)
!10452 = !DILocation(line: 503, column: 13, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10450, file: !1003, line: 503, column: 13)
!10454 = !DILocation(line: 503, column: 18, scope: !10453)
!10455 = !DILocation(line: 503, column: 15, scope: !10453)
!10456 = !DILocation(line: 503, column: 25, scope: !10453)
!10457 = !DILocation(line: 503, column: 28, scope: !10458)
!10458 = !DILexicalBlockFile(scope: !10453, file: !1003, discriminator: 1)
!10459 = !DILocation(line: 503, column: 35, scope: !10458)
!10460 = !DILocation(line: 503, column: 32, scope: !10458)
!10461 = !DILocation(line: 503, column: 13, scope: !10458)
!10462 = !DILocation(line: 504, column: 20, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10453, file: !1003, line: 503, column: 45)
!10464 = !DILocation(line: 504, column: 24, scope: !10463)
!10465 = !DILocation(line: 504, column: 13, scope: !10463)
!10466 = !DILocation(line: 505, column: 13, scope: !10463)
!10467 = !DILocation(line: 507, column: 18, scope: !10450)
!10468 = !DILocation(line: 507, column: 16, scope: !10450)
!10469 = !DILocation(line: 508, column: 20, scope: !10450)
!10470 = !DILocation(line: 508, column: 18, scope: !10450)
!10471 = !DILocation(line: 509, column: 18, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10450, file: !1003, line: 509, column: 9)
!10473 = !DILocation(line: 509, column: 16, scope: !10472)
!10474 = !DILocation(line: 509, column: 14, scope: !10472)
!10475 = !DILocation(line: 509, column: 21, scope: !10476)
!10476 = !DILexicalBlockFile(scope: !10477, file: !1003, discriminator: 1)
!10477 = distinct !DILexicalBlock(scope: !10472, file: !1003, line: 509, column: 9)
!10478 = !DILocation(line: 509, column: 26, scope: !10476)
!10479 = !DILocation(line: 509, column: 23, scope: !10476)
!10480 = !DILocation(line: 509, column: 28, scope: !10476)
!10481 = !DILocation(line: 509, column: 31, scope: !10482)
!10482 = !DILexicalBlockFile(scope: !10477, file: !1003, discriminator: 2)
!10483 = !DILocation(line: 509, column: 37, scope: !10482)
!10484 = !DILocation(line: 509, column: 42, scope: !10482)
!10485 = !DILocation(line: 509, column: 47, scope: !10482)
!10486 = !DILocation(line: 509, column: 53, scope: !10482)
!10487 = !DILocation(line: 509, column: 51, scope: !10482)
!10488 = !DILocation(line: 509, column: 59, scope: !10482)
!10489 = !DILocation(line: 509, column: 57, scope: !10482)
!10490 = !DILocation(line: 509, column: 34, scope: !10482)
!10491 = !DILocation(line: 509, column: 28, scope: !10482)
!10492 = !DILocation(line: 509, column: 9, scope: !10493)
!10493 = !DILexicalBlockFile(scope: !10472, file: !1003, discriminator: 3)
!10494 = !DILocation(line: 510, column: 32, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10477, file: !1003, line: 509, column: 70)
!10496 = !DILocation(line: 510, column: 18, scope: !10495)
!10497 = !DILocation(line: 510, column: 23, scope: !10495)
!10498 = !DILocation(line: 510, column: 16, scope: !10495)
!10499 = !DILocation(line: 511, column: 20, scope: !10495)
!10500 = !DILocation(line: 511, column: 25, scope: !10495)
!10501 = !DILocation(line: 511, column: 30, scope: !10495)
!10502 = !DILocation(line: 511, column: 23, scope: !10495)
!10503 = !DILocation(line: 511, column: 36, scope: !10495)
!10504 = !DILocation(line: 511, column: 17, scope: !10495)
!10505 = !DILocation(line: 512, column: 9, scope: !10495)
!10506 = !DILocation(line: 509, column: 66, scope: !10507)
!10507 = !DILexicalBlockFile(scope: !10477, file: !1003, discriminator: 4)
!10508 = !DILocation(line: 509, column: 9, scope: !10507)
!10509 = distinct !{!10509, !10510}
!10510 = !DILocation(line: 509, column: 9, scope: !10450)
!10511 = !DILocation(line: 518, column: 13, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10450, file: !1003, line: 518, column: 13)
!10513 = !DILocation(line: 518, column: 18, scope: !10512)
!10514 = !DILocation(line: 518, column: 30, scope: !10512)
!10515 = !DILocation(line: 518, column: 13, scope: !10450)
!10516 = !DILocation(line: 519, column: 20, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10512, file: !1003, line: 518, column: 35)
!10518 = !DILocation(line: 519, column: 24, scope: !10517)
!10519 = !DILocation(line: 519, column: 61, scope: !10517)
!10520 = !DILocation(line: 519, column: 66, scope: !10517)
!10521 = !DILocation(line: 519, column: 13, scope: !10517)
!10522 = !DILocation(line: 520, column: 13, scope: !10517)
!10523 = !DILocation(line: 523, column: 55, scope: !10450)
!10524 = !DILocation(line: 523, column: 60, scope: !10450)
!10525 = !DILocation(line: 523, column: 58, scope: !10450)
!10526 = !DILocation(line: 523, column: 65, scope: !10450)
!10527 = !DILocation(line: 523, column: 54, scope: !10450)
!10528 = !DILocation(line: 523, column: 74, scope: !10529)
!10529 = !DILexicalBlockFile(scope: !10450, file: !1003, discriminator: 1)
!10530 = !DILocation(line: 523, column: 79, scope: !10529)
!10531 = !DILocation(line: 523, column: 77, scope: !10529)
!10532 = !DILocation(line: 523, column: 54, scope: !10529)
!10533 = !DILocation(line: 523, column: 54, scope: !10534)
!10534 = !DILexicalBlockFile(scope: !10450, file: !1003, discriminator: 2)
!10535 = !DILocation(line: 523, column: 54, scope: !10536)
!10536 = !DILexicalBlockFile(scope: !10450, file: !1003, discriminator: 3)
!10537 = !DILocation(line: 523, column: 53, scope: !10536)
!10538 = !DILocation(line: 523, column: 33, scope: !10536)
!10539 = !DILocation(line: 523, column: 38, scope: !10536)
!10540 = !DILocation(line: 523, column: 9, scope: !10536)
!10541 = !DILocation(line: 523, column: 14, scope: !10536)
!10542 = !DILocation(line: 523, column: 51, scope: !10536)
!10543 = !DILocation(line: 524, column: 54, scope: !10450)
!10544 = !DILocation(line: 524, column: 59, scope: !10450)
!10545 = !DILocation(line: 524, column: 66, scope: !10450)
!10546 = !DILocation(line: 524, column: 64, scope: !10450)
!10547 = !DILocation(line: 524, column: 96, scope: !10450)
!10548 = !DILocation(line: 524, column: 101, scope: !10450)
!10549 = !DILocation(line: 524, column: 72, scope: !10450)
!10550 = !DILocation(line: 524, column: 77, scope: !10450)
!10551 = !DILocation(line: 524, column: 70, scope: !10450)
!10552 = !DILocation(line: 524, column: 34, scope: !10450)
!10553 = !DILocation(line: 524, column: 39, scope: !10450)
!10554 = !DILocation(line: 524, column: 9, scope: !10450)
!10555 = !DILocation(line: 524, column: 14, scope: !10450)
!10556 = !DILocation(line: 524, column: 52, scope: !10450)
!10557 = !DILocation(line: 526, column: 37, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10450, file: !1003, line: 526, column: 13)
!10559 = !DILocation(line: 526, column: 42, scope: !10558)
!10560 = !DILocation(line: 526, column: 13, scope: !10558)
!10561 = !DILocation(line: 526, column: 18, scope: !10558)
!10562 = !DILocation(line: 526, column: 55, scope: !10558)
!10563 = !DILocation(line: 526, column: 13, scope: !10450)
!10564 = !DILocation(line: 527, column: 19, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10558, file: !1003, line: 526, column: 60)
!10566 = !DILocation(line: 527, column: 17, scope: !10565)
!10567 = !DILocation(line: 528, column: 19, scope: !10565)
!10568 = !DILocation(line: 528, column: 17, scope: !10565)
!10569 = !DILocation(line: 529, column: 13, scope: !10565)
!10570 = !DILocation(line: 529, column: 18, scope: !10565)
!10571 = !DILocation(line: 529, column: 29, scope: !10565)
!10572 = !DILocation(line: 530, column: 9, scope: !10565)
!10573 = !DILocation(line: 531, column: 19, scope: !10558)
!10574 = !DILocation(line: 531, column: 24, scope: !10558)
!10575 = !DILocation(line: 531, column: 17, scope: !10558)
!10576 = !DILocation(line: 533, column: 27, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10450, file: !1003, line: 533, column: 13)
!10578 = !DILocation(line: 533, column: 13, scope: !10577)
!10579 = !DILocation(line: 533, column: 18, scope: !10577)
!10580 = !DILocation(line: 533, column: 32, scope: !10577)
!10581 = !DILocation(line: 533, column: 30, scope: !10577)
!10582 = !DILocation(line: 533, column: 35, scope: !10577)
!10583 = !DILocation(line: 533, column: 13, scope: !10450)
!10584 = !DILocation(line: 534, column: 17, scope: !10577)
!10585 = !DILocation(line: 534, column: 22, scope: !10577)
!10586 = !DILocation(line: 534, column: 15, scope: !10577)
!10587 = !DILocation(line: 534, column: 13, scope: !10577)
!10588 = !DILocation(line: 535, column: 5, scope: !10450)
!10589 = !DILocation(line: 535, column: 14, scope: !10590)
!10590 = !DILexicalBlockFile(scope: !10380, file: !1003, discriminator: 1)
!10591 = !DILocation(line: 535, column: 20, scope: !10590)
!10592 = !DILocation(line: 535, column: 25, scope: !10590)
!10593 = !DILocation(line: 535, column: 33, scope: !10590)
!10594 = !DILocation(line: 535, column: 38, scope: !10590)
!10595 = !DILocation(line: 535, column: 31, scope: !10590)
!10596 = !DILocation(line: 535, column: 17, scope: !10590)
!10597 = !DILocation(line: 535, column: 5, scope: !10590)
!10598 = !DILocation(line: 537, column: 9, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10380, file: !1003, line: 537, column: 9)
!10600 = !DILocation(line: 537, column: 14, scope: !10599)
!10601 = !DILocation(line: 537, column: 26, scope: !10599)
!10602 = !DILocation(line: 537, column: 30, scope: !10599)
!10603 = !DILocation(line: 538, column: 33, scope: !10599)
!10604 = !DILocation(line: 538, column: 38, scope: !10599)
!10605 = !DILocation(line: 538, column: 50, scope: !10599)
!10606 = !DILocation(line: 538, column: 9, scope: !10599)
!10607 = !DILocation(line: 538, column: 14, scope: !10599)
!10608 = !DILocation(line: 538, column: 55, scope: !10599)
!10609 = !DILocation(line: 537, column: 9, scope: !10590)
!10610 = !DILocation(line: 539, column: 9, scope: !10599)
!10611 = !DILocation(line: 539, column: 14, scope: !10599)
!10612 = !DILocation(line: 539, column: 25, scope: !10599)
!10613 = !DILocation(line: 541, column: 5, scope: !10380)
!10614 = !DILocation(line: 542, column: 1, scope: !10380)
!10615 = distinct !DISubprogram(name: "read_sbr_single_channel_element", scope: !1003, file: !1003, line: 974, type: !10616, isLocal: true, isDefinition: true, scopeLine: 977, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!10616 = !DISubroutineType(types: !10617)
!10617 = !{!958, !1510, !1125, !2893}
!10618 = !DILocalVariable(name: "gb", arg: 1, scope: !10619, file: !1003, line: 616, type: !2893)
!10619 = distinct !DISubprogram(name: "get_bits1_vector", scope: !1003, file: !1003, line: 616, type: !10620, isLocal: true, isDefinition: true, scopeLine: 618, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!10620 = !DISubroutineType(types: !10621)
!10621 = !{null, !2893, !1643, !958}
!10622 = !DILocation(line: 616, column: 83, scope: !10619, inlinedAt: !10623)
!10623 = distinct !DILocation(line: 993, column: 9, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10615, file: !1003, line: 992, column: 9)
!10625 = !DILocalVariable(name: "vec", arg: 2, scope: !10619, file: !1003, line: 616, type: !1643)
!10626 = !DILocation(line: 616, column: 96, scope: !10619, inlinedAt: !10623)
!10627 = !DILocalVariable(name: "elements", arg: 3, scope: !10619, file: !1003, line: 617, type: !958)
!10628 = !DILocation(line: 617, column: 51, scope: !10619, inlinedAt: !10623)
!10629 = !DILocalVariable(name: "i", scope: !10619, file: !1003, line: 619, type: !958)
!10630 = !DILocation(line: 619, column: 9, scope: !10619, inlinedAt: !10623)
!10631 = !DILocalVariable(name: "ac", arg: 1, scope: !10615, file: !1003, line: 974, type: !1510)
!10632 = !DILocation(line: 974, column: 56, scope: !10615)
!10633 = !DILocalVariable(name: "sbr", arg: 2, scope: !10615, file: !1003, line: 975, type: !1125)
!10634 = !DILocation(line: 975, column: 70, scope: !10615)
!10635 = !DILocalVariable(name: "gb", arg: 3, scope: !10615, file: !1003, line: 976, type: !2893)
!10636 = !DILocation(line: 976, column: 60, scope: !10615)
!10637 = !DILocalVariable(name: "ret", scope: !10615, file: !1003, line: 978, type: !958)
!10638 = !DILocation(line: 978, column: 9, scope: !10615)
!10639 = !DILocation(line: 980, column: 19, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10615, file: !1003, line: 980, column: 9)
!10641 = !DILocation(line: 980, column: 9, scope: !10640)
!10642 = !DILocation(line: 980, column: 9, scope: !10615)
!10643 = !DILocation(line: 981, column: 19, scope: !10640)
!10644 = !DILocation(line: 981, column: 9, scope: !10640)
!10645 = !DILocation(line: 983, column: 23, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10615, file: !1003, line: 983, column: 9)
!10647 = !DILocation(line: 983, column: 27, scope: !10646)
!10648 = !DILocation(line: 983, column: 32, scope: !10646)
!10649 = !DILocation(line: 983, column: 37, scope: !10646)
!10650 = !DILocation(line: 983, column: 42, scope: !10646)
!10651 = !DILocation(line: 983, column: 9, scope: !10646)
!10652 = !DILocation(line: 983, column: 9, scope: !10615)
!10653 = !DILocation(line: 984, column: 9, scope: !10646)
!10654 = !DILocation(line: 985, column: 19, scope: !10615)
!10655 = !DILocation(line: 985, column: 24, scope: !10615)
!10656 = !DILocation(line: 985, column: 29, scope: !10615)
!10657 = !DILocation(line: 985, column: 34, scope: !10615)
!10658 = !DILocation(line: 985, column: 5, scope: !10615)
!10659 = !DILocation(line: 986, column: 19, scope: !10615)
!10660 = !DILocation(line: 986, column: 24, scope: !10615)
!10661 = !DILocation(line: 986, column: 29, scope: !10615)
!10662 = !DILocation(line: 986, column: 34, scope: !10615)
!10663 = !DILocation(line: 986, column: 5, scope: !10615)
!10664 = !DILocation(line: 987, column: 33, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10615, file: !1003, line: 987, column: 8)
!10666 = !DILocation(line: 987, column: 37, scope: !10665)
!10667 = !DILocation(line: 987, column: 42, scope: !10665)
!10668 = !DILocation(line: 987, column: 47, scope: !10665)
!10669 = !DILocation(line: 987, column: 52, scope: !10665)
!10670 = !DILocation(line: 987, column: 15, scope: !10665)
!10671 = !DILocation(line: 987, column: 13, scope: !10665)
!10672 = !DILocation(line: 987, column: 65, scope: !10665)
!10673 = !DILocation(line: 987, column: 8, scope: !10615)
!10674 = !DILocation(line: 988, column: 16, scope: !10665)
!10675 = !DILocation(line: 988, column: 9, scope: !10665)
!10676 = !DILocation(line: 989, column: 30, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10615, file: !1003, line: 989, column: 8)
!10678 = !DILocation(line: 989, column: 34, scope: !10677)
!10679 = !DILocation(line: 989, column: 39, scope: !10677)
!10680 = !DILocation(line: 989, column: 44, scope: !10677)
!10681 = !DILocation(line: 989, column: 49, scope: !10677)
!10682 = !DILocation(line: 989, column: 15, scope: !10677)
!10683 = !DILocation(line: 989, column: 13, scope: !10677)
!10684 = !DILocation(line: 989, column: 62, scope: !10677)
!10685 = !DILocation(line: 989, column: 8, scope: !10615)
!10686 = !DILocation(line: 990, column: 16, scope: !10677)
!10687 = !DILocation(line: 990, column: 9, scope: !10677)
!10688 = !DILocation(line: 992, column: 56, scope: !10624)
!10689 = !DILocation(line: 992, column: 46, scope: !10624)
!10690 = !DILocation(line: 992, column: 10, scope: !10624)
!10691 = !DILocation(line: 992, column: 15, scope: !10624)
!10692 = !DILocation(line: 992, column: 23, scope: !10624)
!10693 = !DILocation(line: 992, column: 44, scope: !10624)
!10694 = !DILocation(line: 992, column: 9, scope: !10615)
!10695 = !DILocation(line: 993, column: 26, scope: !10624)
!10696 = !DILocation(line: 993, column: 30, scope: !10624)
!10697 = !DILocation(line: 993, column: 35, scope: !10624)
!10698 = !DILocation(line: 993, column: 43, scope: !10624)
!10699 = !DILocation(line: 993, column: 60, scope: !10624)
!10700 = !DILocation(line: 993, column: 65, scope: !10624)
!10701 = !DILocation(line: 993, column: 9, scope: !10624)
!10702 = !DILocation(line: 620, column: 12, scope: !10703, inlinedAt: !10623)
!10703 = distinct !DILexicalBlock(scope: !10619, file: !1003, line: 620, column: 5)
!10704 = !DILocation(line: 620, column: 10, scope: !10703, inlinedAt: !10623)
!10705 = !DILocation(line: 620, column: 17, scope: !10706, inlinedAt: !10623)
!10706 = !DILexicalBlockFile(scope: !10707, file: !1003, discriminator: 1)
!10707 = distinct !DILexicalBlock(scope: !10703, file: !1003, line: 620, column: 5)
!10708 = !DILocation(line: 620, column: 21, scope: !10706, inlinedAt: !10623)
!10709 = !DILocation(line: 620, column: 19, scope: !10706, inlinedAt: !10623)
!10710 = !DILocation(line: 620, column: 5, scope: !10706, inlinedAt: !10623)
!10711 = !DILocation(line: 621, column: 28, scope: !10712, inlinedAt: !10623)
!10712 = distinct !DILexicalBlock(scope: !10707, file: !1003, line: 620, column: 36)
!10713 = !DILocation(line: 621, column: 18, scope: !10712, inlinedAt: !10623)
!10714 = !DILocation(line: 621, column: 13, scope: !10712, inlinedAt: !10623)
!10715 = !DILocation(line: 621, column: 9, scope: !10712, inlinedAt: !10623)
!10716 = !DILocation(line: 621, column: 16, scope: !10712, inlinedAt: !10623)
!10717 = !DILocation(line: 620, column: 32, scope: !10718, inlinedAt: !10623)
!10718 = !DILexicalBlockFile(scope: !10707, file: !1003, discriminator: 2)
!10719 = !DILocation(line: 620, column: 5, scope: !10718, inlinedAt: !10623)
!10720 = distinct !{!10720, !10721}
!10721 = !DILocation(line: 620, column: 5, scope: !10619)
!10722 = !DILocation(line: 995, column: 5, scope: !10615)
!10723 = !DILocation(line: 996, column: 1, scope: !10615)
!10724 = distinct !DISubprogram(name: "read_sbr_channel_pair_element", scope: !1003, file: !1003, line: 998, type: !10616, isLocal: true, isDefinition: true, scopeLine: 1001, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!10725 = !DILocation(line: 616, column: 83, scope: !10619, inlinedAt: !10726)
!10726 = distinct !DILocation(line: 1045, column: 9, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10724, file: !1003, line: 1044, column: 9)
!10728 = !DILocation(line: 616, column: 96, scope: !10619, inlinedAt: !10726)
!10729 = !DILocation(line: 617, column: 51, scope: !10619, inlinedAt: !10726)
!10730 = !DILocation(line: 619, column: 9, scope: !10619, inlinedAt: !10726)
!10731 = !DILocation(line: 616, column: 83, scope: !10619, inlinedAt: !10732)
!10732 = distinct !DILocation(line: 1043, column: 9, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10724, file: !1003, line: 1042, column: 9)
!10734 = !DILocation(line: 616, column: 96, scope: !10619, inlinedAt: !10732)
!10735 = !DILocation(line: 617, column: 51, scope: !10619, inlinedAt: !10732)
!10736 = !DILocation(line: 619, column: 9, scope: !10619, inlinedAt: !10732)
!10737 = !DILocalVariable(name: "ac", arg: 1, scope: !10724, file: !1003, line: 998, type: !1510)
!10738 = !DILocation(line: 998, column: 54, scope: !10724)
!10739 = !DILocalVariable(name: "sbr", arg: 2, scope: !10724, file: !1003, line: 999, type: !1125)
!10740 = !DILocation(line: 999, column: 68, scope: !10724)
!10741 = !DILocalVariable(name: "gb", arg: 3, scope: !10724, file: !1003, line: 1000, type: !2893)
!10742 = !DILocation(line: 1000, column: 58, scope: !10724)
!10743 = !DILocalVariable(name: "ret", scope: !10724, file: !1003, line: 1002, type: !958)
!10744 = !DILocation(line: 1002, column: 9, scope: !10724)
!10745 = !DILocation(line: 1004, column: 19, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10724, file: !1003, line: 1004, column: 9)
!10747 = !DILocation(line: 1004, column: 9, scope: !10746)
!10748 = !DILocation(line: 1004, column: 9, scope: !10724)
!10749 = !DILocation(line: 1005, column: 19, scope: !10746)
!10750 = !DILocation(line: 1005, column: 9, scope: !10746)
!10751 = !DILocation(line: 1007, column: 39, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10724, file: !1003, line: 1007, column: 9)
!10753 = !DILocation(line: 1007, column: 29, scope: !10752)
!10754 = !DILocation(line: 1007, column: 10, scope: !10752)
!10755 = !DILocation(line: 1007, column: 15, scope: !10752)
!10756 = !DILocation(line: 1007, column: 27, scope: !10752)
!10757 = !DILocation(line: 1007, column: 9, scope: !10724)
!10758 = !DILocation(line: 1008, column: 27, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10760, file: !1003, line: 1008, column: 13)
!10760 = distinct !DILexicalBlock(scope: !10752, file: !1003, line: 1007, column: 45)
!10761 = !DILocation(line: 1008, column: 31, scope: !10759)
!10762 = !DILocation(line: 1008, column: 36, scope: !10759)
!10763 = !DILocation(line: 1008, column: 41, scope: !10759)
!10764 = !DILocation(line: 1008, column: 46, scope: !10759)
!10765 = !DILocation(line: 1008, column: 13, scope: !10759)
!10766 = !DILocation(line: 1008, column: 13, scope: !10760)
!10767 = !DILocation(line: 1009, column: 13, scope: !10759)
!10768 = !DILocation(line: 1010, column: 24, scope: !10760)
!10769 = !DILocation(line: 1010, column: 29, scope: !10760)
!10770 = !DILocation(line: 1010, column: 39, scope: !10760)
!10771 = !DILocation(line: 1010, column: 44, scope: !10760)
!10772 = !DILocation(line: 1010, column: 9, scope: !10760)
!10773 = !DILocation(line: 1011, column: 23, scope: !10760)
!10774 = !DILocation(line: 1011, column: 28, scope: !10760)
!10775 = !DILocation(line: 1011, column: 33, scope: !10760)
!10776 = !DILocation(line: 1011, column: 38, scope: !10760)
!10777 = !DILocation(line: 1011, column: 9, scope: !10760)
!10778 = !DILocation(line: 1012, column: 23, scope: !10760)
!10779 = !DILocation(line: 1012, column: 28, scope: !10760)
!10780 = !DILocation(line: 1012, column: 33, scope: !10760)
!10781 = !DILocation(line: 1012, column: 38, scope: !10760)
!10782 = !DILocation(line: 1012, column: 9, scope: !10760)
!10783 = !DILocation(line: 1013, column: 23, scope: !10760)
!10784 = !DILocation(line: 1013, column: 28, scope: !10760)
!10785 = !DILocation(line: 1013, column: 33, scope: !10760)
!10786 = !DILocation(line: 1013, column: 38, scope: !10760)
!10787 = !DILocation(line: 1013, column: 9, scope: !10760)
!10788 = !DILocation(line: 1014, column: 16, scope: !10760)
!10789 = !DILocation(line: 1014, column: 21, scope: !10760)
!10790 = !DILocation(line: 1014, column: 29, scope: !10760)
!10791 = !DILocation(line: 1014, column: 9, scope: !10760)
!10792 = !DILocation(line: 1014, column: 46, scope: !10760)
!10793 = !DILocation(line: 1014, column: 51, scope: !10760)
!10794 = !DILocation(line: 1014, column: 59, scope: !10760)
!10795 = !DILocation(line: 1015, column: 16, scope: !10760)
!10796 = !DILocation(line: 1015, column: 21, scope: !10760)
!10797 = !DILocation(line: 1015, column: 29, scope: !10760)
!10798 = !DILocation(line: 1015, column: 9, scope: !10760)
!10799 = !DILocation(line: 1015, column: 46, scope: !10760)
!10800 = !DILocation(line: 1015, column: 51, scope: !10760)
!10801 = !DILocation(line: 1015, column: 59, scope: !10760)
!10802 = !DILocation(line: 1016, column: 37, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10760, file: !1003, line: 1016, column: 12)
!10804 = !DILocation(line: 1016, column: 41, scope: !10803)
!10805 = !DILocation(line: 1016, column: 46, scope: !10803)
!10806 = !DILocation(line: 1016, column: 51, scope: !10803)
!10807 = !DILocation(line: 1016, column: 56, scope: !10803)
!10808 = !DILocation(line: 1016, column: 19, scope: !10803)
!10809 = !DILocation(line: 1016, column: 17, scope: !10803)
!10810 = !DILocation(line: 1016, column: 69, scope: !10803)
!10811 = !DILocation(line: 1016, column: 12, scope: !10760)
!10812 = !DILocation(line: 1017, column: 20, scope: !10803)
!10813 = !DILocation(line: 1017, column: 13, scope: !10803)
!10814 = !DILocation(line: 1018, column: 34, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10760, file: !1003, line: 1018, column: 12)
!10816 = !DILocation(line: 1018, column: 38, scope: !10815)
!10817 = !DILocation(line: 1018, column: 43, scope: !10815)
!10818 = !DILocation(line: 1018, column: 48, scope: !10815)
!10819 = !DILocation(line: 1018, column: 53, scope: !10815)
!10820 = !DILocation(line: 1018, column: 19, scope: !10815)
!10821 = !DILocation(line: 1018, column: 17, scope: !10815)
!10822 = !DILocation(line: 1018, column: 66, scope: !10815)
!10823 = !DILocation(line: 1018, column: 12, scope: !10760)
!10824 = !DILocation(line: 1019, column: 20, scope: !10815)
!10825 = !DILocation(line: 1019, column: 13, scope: !10815)
!10826 = !DILocation(line: 1020, column: 37, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10760, file: !1003, line: 1020, column: 12)
!10828 = !DILocation(line: 1020, column: 41, scope: !10827)
!10829 = !DILocation(line: 1020, column: 46, scope: !10827)
!10830 = !DILocation(line: 1020, column: 51, scope: !10827)
!10831 = !DILocation(line: 1020, column: 56, scope: !10827)
!10832 = !DILocation(line: 1020, column: 19, scope: !10827)
!10833 = !DILocation(line: 1020, column: 17, scope: !10827)
!10834 = !DILocation(line: 1020, column: 69, scope: !10827)
!10835 = !DILocation(line: 1020, column: 12, scope: !10760)
!10836 = !DILocation(line: 1021, column: 20, scope: !10827)
!10837 = !DILocation(line: 1021, column: 13, scope: !10827)
!10838 = !DILocation(line: 1022, column: 34, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10760, file: !1003, line: 1022, column: 12)
!10840 = !DILocation(line: 1022, column: 38, scope: !10839)
!10841 = !DILocation(line: 1022, column: 43, scope: !10839)
!10842 = !DILocation(line: 1022, column: 48, scope: !10839)
!10843 = !DILocation(line: 1022, column: 53, scope: !10839)
!10844 = !DILocation(line: 1022, column: 19, scope: !10839)
!10845 = !DILocation(line: 1022, column: 17, scope: !10839)
!10846 = !DILocation(line: 1022, column: 66, scope: !10839)
!10847 = !DILocation(line: 1022, column: 12, scope: !10760)
!10848 = !DILocation(line: 1023, column: 20, scope: !10839)
!10849 = !DILocation(line: 1023, column: 13, scope: !10839)
!10850 = !DILocation(line: 1024, column: 5, scope: !10760)
!10851 = !DILocation(line: 1025, column: 27, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10853, file: !1003, line: 1025, column: 13)
!10853 = distinct !DILexicalBlock(scope: !10752, file: !1003, line: 1024, column: 12)
!10854 = !DILocation(line: 1025, column: 31, scope: !10852)
!10855 = !DILocation(line: 1025, column: 36, scope: !10852)
!10856 = !DILocation(line: 1025, column: 41, scope: !10852)
!10857 = !DILocation(line: 1025, column: 46, scope: !10852)
!10858 = !DILocation(line: 1025, column: 13, scope: !10852)
!10859 = !DILocation(line: 1025, column: 55, scope: !10852)
!10860 = !DILocation(line: 1026, column: 27, scope: !10852)
!10861 = !DILocation(line: 1026, column: 31, scope: !10852)
!10862 = !DILocation(line: 1026, column: 36, scope: !10852)
!10863 = !DILocation(line: 1026, column: 41, scope: !10852)
!10864 = !DILocation(line: 1026, column: 46, scope: !10852)
!10865 = !DILocation(line: 1026, column: 13, scope: !10852)
!10866 = !DILocation(line: 1025, column: 13, scope: !10867)
!10867 = !DILexicalBlockFile(scope: !10853, file: !1003, discriminator: 1)
!10868 = !DILocation(line: 1027, column: 13, scope: !10852)
!10869 = !DILocation(line: 1028, column: 23, scope: !10853)
!10870 = !DILocation(line: 1028, column: 28, scope: !10853)
!10871 = !DILocation(line: 1028, column: 33, scope: !10853)
!10872 = !DILocation(line: 1028, column: 38, scope: !10853)
!10873 = !DILocation(line: 1028, column: 9, scope: !10853)
!10874 = !DILocation(line: 1029, column: 23, scope: !10853)
!10875 = !DILocation(line: 1029, column: 28, scope: !10853)
!10876 = !DILocation(line: 1029, column: 33, scope: !10853)
!10877 = !DILocation(line: 1029, column: 38, scope: !10853)
!10878 = !DILocation(line: 1029, column: 9, scope: !10853)
!10879 = !DILocation(line: 1030, column: 23, scope: !10853)
!10880 = !DILocation(line: 1030, column: 28, scope: !10853)
!10881 = !DILocation(line: 1030, column: 33, scope: !10853)
!10882 = !DILocation(line: 1030, column: 38, scope: !10853)
!10883 = !DILocation(line: 1030, column: 9, scope: !10853)
!10884 = !DILocation(line: 1031, column: 23, scope: !10853)
!10885 = !DILocation(line: 1031, column: 28, scope: !10853)
!10886 = !DILocation(line: 1031, column: 33, scope: !10853)
!10887 = !DILocation(line: 1031, column: 38, scope: !10853)
!10888 = !DILocation(line: 1031, column: 9, scope: !10853)
!10889 = !DILocation(line: 1032, column: 37, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10853, file: !1003, line: 1032, column: 12)
!10891 = !DILocation(line: 1032, column: 41, scope: !10890)
!10892 = !DILocation(line: 1032, column: 46, scope: !10890)
!10893 = !DILocation(line: 1032, column: 51, scope: !10890)
!10894 = !DILocation(line: 1032, column: 56, scope: !10890)
!10895 = !DILocation(line: 1032, column: 19, scope: !10890)
!10896 = !DILocation(line: 1032, column: 17, scope: !10890)
!10897 = !DILocation(line: 1032, column: 69, scope: !10890)
!10898 = !DILocation(line: 1032, column: 12, scope: !10853)
!10899 = !DILocation(line: 1033, column: 20, scope: !10890)
!10900 = !DILocation(line: 1033, column: 13, scope: !10890)
!10901 = !DILocation(line: 1034, column: 37, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10853, file: !1003, line: 1034, column: 12)
!10903 = !DILocation(line: 1034, column: 41, scope: !10902)
!10904 = !DILocation(line: 1034, column: 46, scope: !10902)
!10905 = !DILocation(line: 1034, column: 51, scope: !10902)
!10906 = !DILocation(line: 1034, column: 56, scope: !10902)
!10907 = !DILocation(line: 1034, column: 19, scope: !10902)
!10908 = !DILocation(line: 1034, column: 17, scope: !10902)
!10909 = !DILocation(line: 1034, column: 69, scope: !10902)
!10910 = !DILocation(line: 1034, column: 12, scope: !10853)
!10911 = !DILocation(line: 1035, column: 20, scope: !10902)
!10912 = !DILocation(line: 1035, column: 13, scope: !10902)
!10913 = !DILocation(line: 1036, column: 34, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10853, file: !1003, line: 1036, column: 12)
!10915 = !DILocation(line: 1036, column: 38, scope: !10914)
!10916 = !DILocation(line: 1036, column: 43, scope: !10914)
!10917 = !DILocation(line: 1036, column: 48, scope: !10914)
!10918 = !DILocation(line: 1036, column: 53, scope: !10914)
!10919 = !DILocation(line: 1036, column: 19, scope: !10914)
!10920 = !DILocation(line: 1036, column: 17, scope: !10914)
!10921 = !DILocation(line: 1036, column: 66, scope: !10914)
!10922 = !DILocation(line: 1036, column: 12, scope: !10853)
!10923 = !DILocation(line: 1037, column: 20, scope: !10914)
!10924 = !DILocation(line: 1037, column: 13, scope: !10914)
!10925 = !DILocation(line: 1038, column: 34, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10853, file: !1003, line: 1038, column: 12)
!10927 = !DILocation(line: 1038, column: 38, scope: !10926)
!10928 = !DILocation(line: 1038, column: 43, scope: !10926)
!10929 = !DILocation(line: 1038, column: 48, scope: !10926)
!10930 = !DILocation(line: 1038, column: 53, scope: !10926)
!10931 = !DILocation(line: 1038, column: 19, scope: !10926)
!10932 = !DILocation(line: 1038, column: 17, scope: !10926)
!10933 = !DILocation(line: 1038, column: 66, scope: !10926)
!10934 = !DILocation(line: 1038, column: 12, scope: !10853)
!10935 = !DILocation(line: 1039, column: 20, scope: !10926)
!10936 = !DILocation(line: 1039, column: 13, scope: !10926)
!10937 = !DILocation(line: 1042, column: 56, scope: !10733)
!10938 = !DILocation(line: 1042, column: 46, scope: !10733)
!10939 = !DILocation(line: 1042, column: 10, scope: !10733)
!10940 = !DILocation(line: 1042, column: 15, scope: !10733)
!10941 = !DILocation(line: 1042, column: 23, scope: !10733)
!10942 = !DILocation(line: 1042, column: 44, scope: !10733)
!10943 = !DILocation(line: 1042, column: 9, scope: !10724)
!10944 = !DILocation(line: 1043, column: 26, scope: !10733)
!10945 = !DILocation(line: 1043, column: 30, scope: !10733)
!10946 = !DILocation(line: 1043, column: 35, scope: !10733)
!10947 = !DILocation(line: 1043, column: 43, scope: !10733)
!10948 = !DILocation(line: 1043, column: 60, scope: !10733)
!10949 = !DILocation(line: 1043, column: 65, scope: !10733)
!10950 = !DILocation(line: 1043, column: 9, scope: !10733)
!10951 = !DILocation(line: 620, column: 12, scope: !10703, inlinedAt: !10732)
!10952 = !DILocation(line: 620, column: 10, scope: !10703, inlinedAt: !10732)
!10953 = !DILocation(line: 620, column: 17, scope: !10706, inlinedAt: !10732)
!10954 = !DILocation(line: 620, column: 21, scope: !10706, inlinedAt: !10732)
!10955 = !DILocation(line: 620, column: 19, scope: !10706, inlinedAt: !10732)
!10956 = !DILocation(line: 620, column: 5, scope: !10706, inlinedAt: !10732)
!10957 = !DILocation(line: 621, column: 28, scope: !10712, inlinedAt: !10732)
!10958 = !DILocation(line: 621, column: 18, scope: !10712, inlinedAt: !10732)
!10959 = !DILocation(line: 621, column: 13, scope: !10712, inlinedAt: !10732)
!10960 = !DILocation(line: 621, column: 9, scope: !10712, inlinedAt: !10732)
!10961 = !DILocation(line: 621, column: 16, scope: !10712, inlinedAt: !10732)
!10962 = !DILocation(line: 620, column: 32, scope: !10718, inlinedAt: !10732)
!10963 = !DILocation(line: 620, column: 5, scope: !10718, inlinedAt: !10732)
!10964 = !DILocation(line: 1044, column: 56, scope: !10727)
!10965 = !DILocation(line: 1044, column: 46, scope: !10727)
!10966 = !DILocation(line: 1044, column: 10, scope: !10727)
!10967 = !DILocation(line: 1044, column: 15, scope: !10727)
!10968 = !DILocation(line: 1044, column: 23, scope: !10727)
!10969 = !DILocation(line: 1044, column: 44, scope: !10727)
!10970 = !DILocation(line: 1044, column: 9, scope: !10724)
!10971 = !DILocation(line: 1045, column: 26, scope: !10727)
!10972 = !DILocation(line: 1045, column: 30, scope: !10727)
!10973 = !DILocation(line: 1045, column: 35, scope: !10727)
!10974 = !DILocation(line: 1045, column: 43, scope: !10727)
!10975 = !DILocation(line: 1045, column: 60, scope: !10727)
!10976 = !DILocation(line: 1045, column: 65, scope: !10727)
!10977 = !DILocation(line: 1045, column: 9, scope: !10727)
!10978 = !DILocation(line: 620, column: 12, scope: !10703, inlinedAt: !10726)
!10979 = !DILocation(line: 620, column: 10, scope: !10703, inlinedAt: !10726)
!10980 = !DILocation(line: 620, column: 17, scope: !10706, inlinedAt: !10726)
!10981 = !DILocation(line: 620, column: 21, scope: !10706, inlinedAt: !10726)
!10982 = !DILocation(line: 620, column: 19, scope: !10706, inlinedAt: !10726)
!10983 = !DILocation(line: 620, column: 5, scope: !10706, inlinedAt: !10726)
!10984 = !DILocation(line: 621, column: 28, scope: !10712, inlinedAt: !10726)
!10985 = !DILocation(line: 621, column: 18, scope: !10712, inlinedAt: !10726)
!10986 = !DILocation(line: 621, column: 13, scope: !10712, inlinedAt: !10726)
!10987 = !DILocation(line: 621, column: 9, scope: !10712, inlinedAt: !10726)
!10988 = !DILocation(line: 621, column: 16, scope: !10712, inlinedAt: !10726)
!10989 = !DILocation(line: 620, column: 32, scope: !10718, inlinedAt: !10726)
!10990 = !DILocation(line: 620, column: 5, scope: !10718, inlinedAt: !10726)
!10991 = !DILocation(line: 1047, column: 5, scope: !10724)
!10992 = !DILocation(line: 1048, column: 1, scope: !10724)
!10993 = distinct !DISubprogram(name: "read_sbr_extension", scope: !1003, file: !1003, line: 949, type: !10994, isLocal: true, isDefinition: true, scopeLine: 952, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!10994 = !DISubroutineType(types: !10995)
!10995 = !{null, !1510, !1125, !2893, !958, !1798}
!10996 = !DILocalVariable(name: "ac", arg: 1, scope: !10993, file: !1003, line: 949, type: !1510)
!10997 = !DILocation(line: 949, column: 44, scope: !10993)
!10998 = !DILocalVariable(name: "sbr", arg: 2, scope: !10993, file: !1003, line: 949, type: !1125)
!10999 = !DILocation(line: 949, column: 73, scope: !10993)
!11000 = !DILocalVariable(name: "gb", arg: 3, scope: !10993, file: !1003, line: 950, type: !2893)
!11001 = !DILocation(line: 950, column: 47, scope: !10993)
!11002 = !DILocalVariable(name: "bs_extension_id", arg: 4, scope: !10993, file: !1003, line: 951, type: !958)
!11003 = !DILocation(line: 951, column: 36, scope: !10993)
!11004 = !DILocalVariable(name: "num_bits_left", arg: 5, scope: !10993, file: !1003, line: 951, type: !1798)
!11005 = !DILocation(line: 951, column: 58, scope: !10993)
!11006 = !DILocation(line: 953, column: 13, scope: !10993)
!11007 = !DILocation(line: 953, column: 5, scope: !10993)
!11008 = !DILocation(line: 955, column: 14, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !1003, line: 955, column: 13)
!11010 = distinct !DILexicalBlock(scope: !10993, file: !1003, line: 953, column: 30)
!11011 = !DILocation(line: 955, column: 18, scope: !11009)
!11012 = !DILocation(line: 955, column: 24, scope: !11009)
!11013 = !DILocation(line: 955, column: 29, scope: !11009)
!11014 = !DILocation(line: 955, column: 13, scope: !11010)
!11015 = !DILocation(line: 956, column: 20, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11009, file: !1003, line: 955, column: 33)
!11017 = !DILocation(line: 956, column: 24, scope: !11016)
!11018 = !DILocation(line: 956, column: 13, scope: !11016)
!11019 = !DILocation(line: 957, column: 28, scope: !11016)
!11020 = !DILocation(line: 957, column: 33, scope: !11016)
!11021 = !DILocation(line: 957, column: 32, scope: !11016)
!11022 = !DILocation(line: 957, column: 13, scope: !11016)
!11023 = !DILocation(line: 958, column: 14, scope: !11016)
!11024 = !DILocation(line: 958, column: 28, scope: !11016)
!11025 = !DILocation(line: 959, column: 9, scope: !11016)
!11026 = !DILocation(line: 960, column: 53, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11009, file: !1003, line: 959, column: 16)
!11028 = !DILocation(line: 960, column: 57, scope: !11027)
!11029 = !DILocation(line: 960, column: 64, scope: !11027)
!11030 = !DILocation(line: 960, column: 69, scope: !11027)
!11031 = !DILocation(line: 960, column: 74, scope: !11027)
!11032 = !DILocation(line: 960, column: 79, scope: !11027)
!11033 = !DILocation(line: 960, column: 78, scope: !11027)
!11034 = !DILocation(line: 960, column: 31, scope: !11027)
!11035 = !DILocation(line: 960, column: 14, scope: !11027)
!11036 = !DILocation(line: 960, column: 28, scope: !11027)
!11037 = !DILocation(line: 961, column: 13, scope: !11027)
!11038 = !DILocation(line: 961, column: 17, scope: !11027)
!11039 = !DILocation(line: 961, column: 24, scope: !11027)
!11040 = !DILocation(line: 961, column: 32, scope: !11027)
!11041 = !DILocation(line: 963, column: 9, scope: !11010)
!11042 = !DILocation(line: 966, column: 13, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11010, file: !1003, line: 966, column: 13)
!11044 = !DILocation(line: 966, column: 29, scope: !11043)
!11045 = !DILocation(line: 966, column: 33, scope: !11046)
!11046 = !DILexicalBlockFile(scope: !11043, file: !1003, discriminator: 1)
!11047 = !DILocation(line: 966, column: 32, scope: !11046)
!11048 = !DILocation(line: 966, column: 47, scope: !11046)
!11049 = !DILocation(line: 966, column: 52, scope: !11046)
!11050 = !DILocation(line: 966, column: 65, scope: !11051)
!11051 = !DILexicalBlockFile(scope: !11043, file: !1003, discriminator: 2)
!11052 = !DILocation(line: 966, column: 70, scope: !11051)
!11053 = !DILocation(line: 966, column: 69, scope: !11051)
!11054 = !DILocation(line: 966, column: 55, scope: !11051)
!11055 = !DILocation(line: 966, column: 13, scope: !11051)
!11056 = !DILocation(line: 967, column: 35, scope: !11043)
!11057 = !DILocation(line: 967, column: 39, scope: !11043)
!11058 = !DILocation(line: 967, column: 13, scope: !11043)
!11059 = !DILocation(line: 968, column: 24, scope: !11010)
!11060 = !DILocation(line: 968, column: 29, scope: !11010)
!11061 = !DILocation(line: 968, column: 28, scope: !11010)
!11062 = !DILocation(line: 968, column: 9, scope: !11010)
!11063 = !DILocation(line: 969, column: 10, scope: !11010)
!11064 = !DILocation(line: 969, column: 24, scope: !11010)
!11065 = !DILocation(line: 970, column: 9, scope: !11010)
!11066 = !DILocation(line: 972, column: 1, scope: !10993)
!11067 = distinct !DISubprogram(name: "read_sbr_grid", scope: !1003, file: !1003, line: 630, type: !11068, isLocal: true, isDefinition: true, scopeLine: 632, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!11068 = !DISubroutineType(types: !11069)
!11069 = !{!958, !1510, !1125, !2893, !2516}
!11070 = !DILocation(line: 616, column: 83, scope: !10619, inlinedAt: !11071)
!11071 = distinct !DILocation(line: 726, column: 9, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11067, file: !1003, line: 645, column: 47)
!11073 = !DILocation(line: 616, column: 96, scope: !10619, inlinedAt: !11071)
!11074 = !DILocation(line: 617, column: 51, scope: !10619, inlinedAt: !11071)
!11075 = !DILocation(line: 619, column: 9, scope: !10619, inlinedAt: !11071)
!11076 = !DILocation(line: 616, column: 83, scope: !10619, inlinedAt: !11077)
!11077 = distinct !DILocation(line: 699, column: 9, scope: !11072)
!11078 = !DILocation(line: 616, column: 96, scope: !10619, inlinedAt: !11077)
!11079 = !DILocation(line: 617, column: 51, scope: !10619, inlinedAt: !11077)
!11080 = !DILocation(line: 619, column: 9, scope: !10619, inlinedAt: !11077)
!11081 = !DILocalVariable(name: "ac", arg: 1, scope: !11067, file: !1003, line: 630, type: !1510)
!11082 = !DILocation(line: 630, column: 38, scope: !11067)
!11083 = !DILocalVariable(name: "sbr", arg: 2, scope: !11067, file: !1003, line: 630, type: !1125)
!11084 = !DILocation(line: 630, column: 67, scope: !11067)
!11085 = !DILocalVariable(name: "gb", arg: 3, scope: !11067, file: !1003, line: 631, type: !2893)
!11086 = !DILocation(line: 631, column: 41, scope: !11067)
!11087 = !DILocalVariable(name: "ch_data", arg: 4, scope: !11067, file: !1003, line: 631, type: !2516)
!11088 = !DILocation(line: 631, column: 54, scope: !11067)
!11089 = !DILocalVariable(name: "i", scope: !11067, file: !1003, line: 633, type: !958)
!11090 = !DILocation(line: 633, column: 9, scope: !11067)
!11091 = !DILocalVariable(name: "bs_pointer", scope: !11067, file: !1003, line: 634, type: !958)
!11092 = !DILocation(line: 634, column: 9, scope: !11067)
!11093 = !DILocalVariable(name: "abs_bord_trail", scope: !11067, file: !1003, line: 636, type: !958)
!11094 = !DILocation(line: 636, column: 9, scope: !11067)
!11095 = !DILocalVariable(name: "num_rel_lead", scope: !11067, file: !1003, line: 637, type: !958)
!11096 = !DILocation(line: 637, column: 9, scope: !11067)
!11097 = !DILocalVariable(name: "num_rel_trail", scope: !11067, file: !1003, line: 637, type: !958)
!11098 = !DILocation(line: 637, column: 23, scope: !11067)
!11099 = !DILocalVariable(name: "bs_num_env_old", scope: !11067, file: !1003, line: 638, type: !985)
!11100 = !DILocation(line: 638, column: 14, scope: !11067)
!11101 = !DILocation(line: 638, column: 31, scope: !11067)
!11102 = !DILocation(line: 638, column: 40, scope: !11067)
!11103 = !DILocalVariable(name: "bs_frame_class", scope: !11067, file: !1003, line: 639, type: !958)
!11104 = !DILocation(line: 639, column: 9, scope: !11067)
!11105 = !DILocalVariable(name: "bs_num_env", scope: !11067, file: !1003, line: 639, type: !958)
!11106 = !DILocation(line: 639, column: 25, scope: !11067)
!11107 = !DILocation(line: 641, column: 52, scope: !11067)
!11108 = !DILocation(line: 641, column: 61, scope: !11067)
!11109 = !DILocation(line: 641, column: 31, scope: !11067)
!11110 = !DILocation(line: 641, column: 40, scope: !11067)
!11111 = !DILocation(line: 641, column: 5, scope: !11067)
!11112 = !DILocation(line: 641, column: 14, scope: !11067)
!11113 = !DILocation(line: 641, column: 29, scope: !11067)
!11114 = !DILocation(line: 642, column: 27, scope: !11067)
!11115 = !DILocation(line: 642, column: 32, scope: !11067)
!11116 = !DILocation(line: 642, column: 5, scope: !11067)
!11117 = !DILocation(line: 642, column: 14, scope: !11067)
!11118 = !DILocation(line: 642, column: 25, scope: !11067)
!11119 = !DILocation(line: 643, column: 49, scope: !11067)
!11120 = !DILocation(line: 643, column: 34, scope: !11067)
!11121 = !DILocation(line: 643, column: 43, scope: !11067)
!11122 = !DILocation(line: 643, column: 5, scope: !11067)
!11123 = !DILocation(line: 643, column: 14, scope: !11067)
!11124 = !DILocation(line: 643, column: 32, scope: !11067)
!11125 = !DILocation(line: 645, column: 39, scope: !11067)
!11126 = !DILocation(line: 645, column: 30, scope: !11067)
!11127 = !DILocation(line: 645, column: 28, scope: !11067)
!11128 = !DILocation(line: 645, column: 5, scope: !11067)
!11129 = !DILocation(line: 647, column: 36, scope: !11072)
!11130 = !DILocation(line: 647, column: 27, scope: !11072)
!11131 = !DILocation(line: 647, column: 24, scope: !11072)
!11132 = !DILocation(line: 647, column: 20, scope: !11072)
!11133 = !DILocation(line: 648, column: 13, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11072, file: !1003, line: 648, column: 13)
!11135 = !DILocation(line: 648, column: 24, scope: !11134)
!11136 = !DILocation(line: 648, column: 13, scope: !11072)
!11137 = !DILocation(line: 649, column: 20, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11134, file: !1003, line: 648, column: 29)
!11139 = !DILocation(line: 649, column: 24, scope: !11138)
!11140 = !DILocation(line: 651, column: 20, scope: !11138)
!11141 = !DILocation(line: 649, column: 13, scope: !11138)
!11142 = !DILocation(line: 652, column: 13, scope: !11138)
!11143 = !DILocation(line: 654, column: 31, scope: !11072)
!11144 = !DILocation(line: 654, column: 9, scope: !11072)
!11145 = !DILocation(line: 654, column: 18, scope: !11072)
!11146 = !DILocation(line: 654, column: 29, scope: !11072)
!11147 = !DILocation(line: 655, column: 24, scope: !11072)
!11148 = !DILocation(line: 655, column: 33, scope: !11072)
!11149 = !DILocation(line: 655, column: 44, scope: !11072)
!11150 = !DILocation(line: 655, column: 22, scope: !11072)
!11151 = !DILocation(line: 656, column: 13, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11072, file: !1003, line: 656, column: 13)
!11153 = !DILocation(line: 656, column: 22, scope: !11152)
!11154 = !DILocation(line: 656, column: 33, scope: !11152)
!11155 = !DILocation(line: 656, column: 13, scope: !11072)
!11156 = !DILocation(line: 657, column: 13, scope: !11152)
!11157 = !DILocation(line: 657, column: 22, scope: !11152)
!11158 = !DILocation(line: 657, column: 33, scope: !11152)
!11159 = !DILocation(line: 660, column: 9, scope: !11072)
!11160 = !DILocation(line: 660, column: 18, scope: !11072)
!11161 = !DILocation(line: 660, column: 27, scope: !11072)
!11162 = !DILocation(line: 661, column: 47, scope: !11072)
!11163 = !DILocation(line: 661, column: 24, scope: !11072)
!11164 = !DILocation(line: 661, column: 33, scope: !11072)
!11165 = !DILocation(line: 661, column: 9, scope: !11072)
!11166 = !DILocation(line: 661, column: 18, scope: !11072)
!11167 = !DILocation(line: 661, column: 45, scope: !11072)
!11168 = !DILocation(line: 663, column: 27, scope: !11072)
!11169 = !DILocation(line: 663, column: 45, scope: !11072)
!11170 = !DILocation(line: 663, column: 54, scope: !11072)
!11171 = !DILocation(line: 663, column: 65, scope: !11072)
!11172 = !DILocation(line: 663, column: 42, scope: !11072)
!11173 = !DILocation(line: 664, column: 20, scope: !11072)
!11174 = !DILocation(line: 664, column: 29, scope: !11072)
!11175 = !DILocation(line: 663, column: 72, scope: !11072)
!11176 = !DILocation(line: 663, column: 24, scope: !11072)
!11177 = !DILocation(line: 665, column: 16, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11072, file: !1003, line: 665, column: 9)
!11179 = !DILocation(line: 665, column: 14, scope: !11178)
!11180 = !DILocation(line: 665, column: 21, scope: !11181)
!11181 = !DILexicalBlockFile(scope: !11182, file: !1003, discriminator: 1)
!11182 = distinct !DILexicalBlock(scope: !11178, file: !1003, line: 665, column: 9)
!11183 = !DILocation(line: 665, column: 25, scope: !11181)
!11184 = !DILocation(line: 665, column: 23, scope: !11181)
!11185 = !DILocation(line: 665, column: 9, scope: !11181)
!11186 = !DILocation(line: 666, column: 52, scope: !11182)
!11187 = !DILocation(line: 666, column: 37, scope: !11182)
!11188 = !DILocation(line: 666, column: 46, scope: !11182)
!11189 = !DILocation(line: 666, column: 57, scope: !11182)
!11190 = !DILocation(line: 666, column: 55, scope: !11182)
!11191 = !DILocation(line: 666, column: 28, scope: !11182)
!11192 = !DILocation(line: 666, column: 30, scope: !11182)
!11193 = !DILocation(line: 666, column: 13, scope: !11182)
!11194 = !DILocation(line: 666, column: 22, scope: !11182)
!11195 = !DILocation(line: 666, column: 35, scope: !11182)
!11196 = !DILocation(line: 665, column: 40, scope: !11197)
!11197 = !DILexicalBlockFile(scope: !11182, file: !1003, discriminator: 2)
!11198 = !DILocation(line: 665, column: 9, scope: !11197)
!11199 = distinct !{!11199, !11200}
!11200 = !DILocation(line: 665, column: 9, scope: !11072)
!11201 = !DILocation(line: 668, column: 45, scope: !11072)
!11202 = !DILocation(line: 668, column: 35, scope: !11072)
!11203 = !DILocation(line: 668, column: 9, scope: !11072)
!11204 = !DILocation(line: 668, column: 18, scope: !11072)
!11205 = !DILocation(line: 668, column: 33, scope: !11072)
!11206 = !DILocation(line: 669, column: 16, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11072, file: !1003, line: 669, column: 9)
!11208 = !DILocation(line: 669, column: 14, scope: !11207)
!11209 = !DILocation(line: 669, column: 21, scope: !11210)
!11210 = !DILexicalBlockFile(scope: !11211, file: !1003, discriminator: 1)
!11211 = distinct !DILexicalBlock(scope: !11207, file: !1003, line: 669, column: 9)
!11212 = !DILocation(line: 669, column: 25, scope: !11210)
!11213 = !DILocation(line: 669, column: 34, scope: !11210)
!11214 = !DILocation(line: 669, column: 23, scope: !11210)
!11215 = !DILocation(line: 669, column: 9, scope: !11210)
!11216 = !DILocation(line: 670, column: 43, scope: !11211)
!11217 = !DILocation(line: 670, column: 52, scope: !11211)
!11218 = !DILocation(line: 670, column: 34, scope: !11211)
!11219 = !DILocation(line: 670, column: 36, scope: !11211)
!11220 = !DILocation(line: 670, column: 13, scope: !11211)
!11221 = !DILocation(line: 670, column: 22, scope: !11211)
!11222 = !DILocation(line: 670, column: 41, scope: !11211)
!11223 = !DILocation(line: 669, column: 47, scope: !11224)
!11224 = !DILexicalBlockFile(scope: !11211, file: !1003, discriminator: 2)
!11225 = !DILocation(line: 669, column: 9, scope: !11224)
!11226 = distinct !{!11226, !11227}
!11227 = !DILocation(line: 669, column: 9, scope: !11072)
!11228 = !DILocation(line: 671, column: 9, scope: !11072)
!11229 = !DILocation(line: 673, column: 36, scope: !11072)
!11230 = !DILocation(line: 673, column: 27, scope: !11072)
!11231 = !DILocation(line: 673, column: 24, scope: !11072)
!11232 = !DILocation(line: 674, column: 34, scope: !11072)
!11233 = !DILocation(line: 674, column: 25, scope: !11072)
!11234 = !DILocation(line: 674, column: 23, scope: !11072)
!11235 = !DILocation(line: 675, column: 31, scope: !11072)
!11236 = !DILocation(line: 675, column: 45, scope: !11072)
!11237 = !DILocation(line: 675, column: 9, scope: !11072)
!11238 = !DILocation(line: 675, column: 18, scope: !11072)
!11239 = !DILocation(line: 675, column: 29, scope: !11072)
!11240 = !DILocation(line: 676, column: 9, scope: !11072)
!11241 = !DILocation(line: 676, column: 18, scope: !11072)
!11242 = !DILocation(line: 676, column: 27, scope: !11072)
!11243 = !DILocation(line: 677, column: 47, scope: !11072)
!11244 = !DILocation(line: 677, column: 24, scope: !11072)
!11245 = !DILocation(line: 677, column: 33, scope: !11072)
!11246 = !DILocation(line: 677, column: 9, scope: !11072)
!11247 = !DILocation(line: 677, column: 18, scope: !11072)
!11248 = !DILocation(line: 677, column: 45, scope: !11072)
!11249 = !DILocation(line: 679, column: 16, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11072, file: !1003, line: 679, column: 9)
!11251 = !DILocation(line: 679, column: 14, scope: !11250)
!11252 = !DILocation(line: 679, column: 21, scope: !11253)
!11253 = !DILexicalBlockFile(scope: !11254, file: !1003, discriminator: 1)
!11254 = distinct !DILexicalBlock(scope: !11250, file: !1003, line: 679, column: 9)
!11255 = !DILocation(line: 679, column: 25, scope: !11253)
!11256 = !DILocation(line: 679, column: 23, scope: !11253)
!11257 = !DILocation(line: 679, column: 9, scope: !11253)
!11258 = !DILocation(line: 681, column: 32, scope: !11254)
!11259 = !DILocation(line: 681, column: 41, scope: !11254)
!11260 = !DILocation(line: 681, column: 54, scope: !11254)
!11261 = !DILocation(line: 681, column: 52, scope: !11254)
!11262 = !DILocation(line: 681, column: 17, scope: !11254)
!11263 = !DILocation(line: 681, column: 26, scope: !11254)
!11264 = !DILocation(line: 681, column: 72, scope: !11254)
!11265 = !DILocation(line: 681, column: 63, scope: !11254)
!11266 = !DILocation(line: 681, column: 61, scope: !11254)
!11267 = !DILocation(line: 681, column: 57, scope: !11254)
!11268 = !DILocation(line: 681, column: 79, scope: !11254)
!11269 = !DILocation(line: 680, column: 28, scope: !11254)
!11270 = !DILocation(line: 680, column: 37, scope: !11254)
!11271 = !DILocation(line: 680, column: 48, scope: !11254)
!11272 = !DILocation(line: 680, column: 54, scope: !11254)
!11273 = !DILocation(line: 680, column: 52, scope: !11254)
!11274 = !DILocation(line: 680, column: 13, scope: !11254)
!11275 = !DILocation(line: 680, column: 22, scope: !11254)
!11276 = !DILocation(line: 680, column: 57, scope: !11254)
!11277 = !DILocation(line: 679, column: 41, scope: !11278)
!11278 = !DILexicalBlockFile(scope: !11254, file: !1003, discriminator: 2)
!11279 = !DILocation(line: 679, column: 9, scope: !11278)
!11280 = distinct !{!11280, !11281}
!11281 = !DILocation(line: 679, column: 9, scope: !11072)
!11282 = !DILocation(line: 683, column: 31, scope: !11072)
!11283 = !DILocation(line: 683, column: 45, scope: !11072)
!11284 = !DILocation(line: 683, column: 54, scope: !11072)
!11285 = !DILocation(line: 683, column: 35, scope: !11072)
!11286 = !DILocation(line: 683, column: 22, scope: !11072)
!11287 = !DILocation(line: 683, column: 20, scope: !11072)
!11288 = !DILocation(line: 685, column: 16, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11072, file: !1003, line: 685, column: 9)
!11290 = !DILocation(line: 685, column: 14, scope: !11289)
!11291 = !DILocation(line: 685, column: 21, scope: !11292)
!11292 = !DILexicalBlockFile(scope: !11293, file: !1003, discriminator: 1)
!11293 = distinct !DILexicalBlock(scope: !11289, file: !1003, line: 685, column: 9)
!11294 = !DILocation(line: 685, column: 25, scope: !11292)
!11295 = !DILocation(line: 685, column: 34, scope: !11292)
!11296 = !DILocation(line: 685, column: 23, scope: !11292)
!11297 = !DILocation(line: 685, column: 9, scope: !11292)
!11298 = !DILocation(line: 686, column: 71, scope: !11293)
!11299 = !DILocation(line: 686, column: 61, scope: !11293)
!11300 = !DILocation(line: 686, column: 34, scope: !11293)
!11301 = !DILocation(line: 686, column: 43, scope: !11293)
!11302 = !DILocation(line: 686, column: 56, scope: !11293)
!11303 = !DILocation(line: 686, column: 54, scope: !11293)
!11304 = !DILocation(line: 686, column: 13, scope: !11293)
!11305 = !DILocation(line: 686, column: 22, scope: !11293)
!11306 = !DILocation(line: 686, column: 59, scope: !11293)
!11307 = !DILocation(line: 685, column: 47, scope: !11308)
!11308 = !DILexicalBlockFile(scope: !11293, file: !1003, discriminator: 2)
!11309 = !DILocation(line: 685, column: 9, scope: !11308)
!11310 = distinct !{!11310, !11311}
!11311 = !DILocation(line: 685, column: 9, scope: !11072)
!11312 = !DILocation(line: 687, column: 9, scope: !11072)
!11313 = !DILocation(line: 689, column: 38, scope: !11072)
!11314 = !DILocation(line: 689, column: 29, scope: !11072)
!11315 = !DILocation(line: 689, column: 9, scope: !11072)
!11316 = !DILocation(line: 689, column: 18, scope: !11072)
!11317 = !DILocation(line: 689, column: 27, scope: !11072)
!11318 = !DILocation(line: 690, column: 33, scope: !11072)
!11319 = !DILocation(line: 690, column: 24, scope: !11072)
!11320 = !DILocation(line: 690, column: 22, scope: !11072)
!11321 = !DILocation(line: 691, column: 31, scope: !11072)
!11322 = !DILocation(line: 691, column: 44, scope: !11072)
!11323 = !DILocation(line: 691, column: 9, scope: !11072)
!11324 = !DILocation(line: 691, column: 18, scope: !11072)
!11325 = !DILocation(line: 691, column: 29, scope: !11072)
!11326 = !DILocation(line: 692, column: 47, scope: !11072)
!11327 = !DILocation(line: 692, column: 24, scope: !11072)
!11328 = !DILocation(line: 692, column: 33, scope: !11072)
!11329 = !DILocation(line: 692, column: 9, scope: !11072)
!11330 = !DILocation(line: 692, column: 18, scope: !11072)
!11331 = !DILocation(line: 692, column: 45, scope: !11072)
!11332 = !DILocation(line: 694, column: 16, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11072, file: !1003, line: 694, column: 9)
!11334 = !DILocation(line: 694, column: 14, scope: !11333)
!11335 = !DILocation(line: 694, column: 21, scope: !11336)
!11336 = !DILexicalBlockFile(scope: !11337, file: !1003, discriminator: 1)
!11337 = distinct !DILexicalBlock(scope: !11333, file: !1003, line: 694, column: 9)
!11338 = !DILocation(line: 694, column: 25, scope: !11336)
!11339 = !DILocation(line: 694, column: 23, scope: !11336)
!11340 = !DILocation(line: 694, column: 9, scope: !11336)
!11341 = !DILocation(line: 695, column: 52, scope: !11337)
!11342 = !DILocation(line: 695, column: 37, scope: !11337)
!11343 = !DILocation(line: 695, column: 46, scope: !11337)
!11344 = !DILocation(line: 695, column: 70, scope: !11337)
!11345 = !DILocation(line: 695, column: 61, scope: !11337)
!11346 = !DILocation(line: 695, column: 59, scope: !11337)
!11347 = !DILocation(line: 695, column: 55, scope: !11337)
!11348 = !DILocation(line: 695, column: 77, scope: !11337)
!11349 = !DILocation(line: 695, column: 28, scope: !11337)
!11350 = !DILocation(line: 695, column: 30, scope: !11337)
!11351 = !DILocation(line: 695, column: 13, scope: !11337)
!11352 = !DILocation(line: 695, column: 22, scope: !11337)
!11353 = !DILocation(line: 695, column: 35, scope: !11337)
!11354 = !DILocation(line: 694, column: 40, scope: !11355)
!11355 = !DILexicalBlockFile(scope: !11337, file: !1003, discriminator: 2)
!11356 = !DILocation(line: 694, column: 9, scope: !11355)
!11357 = distinct !{!11357, !11358}
!11358 = !DILocation(line: 694, column: 9, scope: !11072)
!11359 = !DILocation(line: 697, column: 31, scope: !11072)
!11360 = !DILocation(line: 697, column: 45, scope: !11072)
!11361 = !DILocation(line: 697, column: 54, scope: !11072)
!11362 = !DILocation(line: 697, column: 35, scope: !11072)
!11363 = !DILocation(line: 697, column: 22, scope: !11072)
!11364 = !DILocation(line: 697, column: 20, scope: !11072)
!11365 = !DILocation(line: 699, column: 26, scope: !11072)
!11366 = !DILocation(line: 699, column: 30, scope: !11072)
!11367 = !DILocation(line: 699, column: 39, scope: !11072)
!11368 = !DILocation(line: 699, column: 51, scope: !11072)
!11369 = !DILocation(line: 699, column: 56, scope: !11072)
!11370 = !DILocation(line: 699, column: 65, scope: !11072)
!11371 = !DILocation(line: 699, column: 9, scope: !11072)
!11372 = !DILocation(line: 620, column: 12, scope: !10703, inlinedAt: !11077)
!11373 = !DILocation(line: 620, column: 10, scope: !10703, inlinedAt: !11077)
!11374 = !DILocation(line: 620, column: 17, scope: !10706, inlinedAt: !11077)
!11375 = !DILocation(line: 620, column: 21, scope: !10706, inlinedAt: !11077)
!11376 = !DILocation(line: 620, column: 19, scope: !10706, inlinedAt: !11077)
!11377 = !DILocation(line: 620, column: 5, scope: !10706, inlinedAt: !11077)
!11378 = !DILocation(line: 621, column: 28, scope: !10712, inlinedAt: !11077)
!11379 = !DILocation(line: 621, column: 18, scope: !10712, inlinedAt: !11077)
!11380 = !DILocation(line: 621, column: 13, scope: !10712, inlinedAt: !11077)
!11381 = !DILocation(line: 621, column: 9, scope: !10712, inlinedAt: !11077)
!11382 = !DILocation(line: 621, column: 16, scope: !10712, inlinedAt: !11077)
!11383 = !DILocation(line: 620, column: 32, scope: !10718, inlinedAt: !11077)
!11384 = !DILocation(line: 620, column: 5, scope: !10718, inlinedAt: !11077)
!11385 = !DILocation(line: 700, column: 9, scope: !11072)
!11386 = !DILocation(line: 702, column: 38, scope: !11072)
!11387 = !DILocation(line: 702, column: 29, scope: !11072)
!11388 = !DILocation(line: 702, column: 9, scope: !11072)
!11389 = !DILocation(line: 702, column: 18, scope: !11072)
!11390 = !DILocation(line: 702, column: 27, scope: !11072)
!11391 = !DILocation(line: 703, column: 36, scope: !11072)
!11392 = !DILocation(line: 703, column: 27, scope: !11072)
!11393 = !DILocation(line: 703, column: 24, scope: !11072)
!11394 = !DILocation(line: 704, column: 33, scope: !11072)
!11395 = !DILocation(line: 704, column: 24, scope: !11072)
!11396 = !DILocation(line: 704, column: 22, scope: !11072)
!11397 = !DILocation(line: 705, column: 34, scope: !11072)
!11398 = !DILocation(line: 705, column: 25, scope: !11072)
!11399 = !DILocation(line: 705, column: 23, scope: !11072)
!11400 = !DILocation(line: 706, column: 22, scope: !11072)
!11401 = !DILocation(line: 706, column: 37, scope: !11072)
!11402 = !DILocation(line: 706, column: 35, scope: !11072)
!11403 = !DILocation(line: 706, column: 51, scope: !11072)
!11404 = !DILocation(line: 706, column: 20, scope: !11072)
!11405 = !DILocation(line: 708, column: 13, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11072, file: !1003, line: 708, column: 13)
!11407 = !DILocation(line: 708, column: 24, scope: !11406)
!11408 = !DILocation(line: 708, column: 13, scope: !11072)
!11409 = !DILocation(line: 709, column: 20, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11406, file: !1003, line: 708, column: 29)
!11411 = !DILocation(line: 709, column: 24, scope: !11410)
!11412 = !DILocation(line: 711, column: 20, scope: !11410)
!11413 = !DILocation(line: 709, column: 13, scope: !11410)
!11414 = !DILocation(line: 712, column: 13, scope: !11410)
!11415 = !DILocation(line: 714, column: 31, scope: !11072)
!11416 = !DILocation(line: 714, column: 9, scope: !11072)
!11417 = !DILocation(line: 714, column: 18, scope: !11072)
!11418 = !DILocation(line: 714, column: 29, scope: !11072)
!11419 = !DILocation(line: 716, column: 47, scope: !11072)
!11420 = !DILocation(line: 716, column: 24, scope: !11072)
!11421 = !DILocation(line: 716, column: 33, scope: !11072)
!11422 = !DILocation(line: 716, column: 9, scope: !11072)
!11423 = !DILocation(line: 716, column: 18, scope: !11072)
!11424 = !DILocation(line: 716, column: 45, scope: !11072)
!11425 = !DILocation(line: 718, column: 16, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11072, file: !1003, line: 718, column: 9)
!11427 = !DILocation(line: 718, column: 14, scope: !11426)
!11428 = !DILocation(line: 718, column: 21, scope: !11429)
!11429 = !DILexicalBlockFile(scope: !11430, file: !1003, discriminator: 1)
!11430 = distinct !DILexicalBlock(scope: !11426, file: !1003, line: 718, column: 9)
!11431 = !DILocation(line: 718, column: 25, scope: !11429)
!11432 = !DILocation(line: 718, column: 23, scope: !11429)
!11433 = !DILocation(line: 718, column: 9, scope: !11429)
!11434 = !DILocation(line: 719, column: 52, scope: !11430)
!11435 = !DILocation(line: 719, column: 37, scope: !11430)
!11436 = !DILocation(line: 719, column: 46, scope: !11430)
!11437 = !DILocation(line: 719, column: 70, scope: !11430)
!11438 = !DILocation(line: 719, column: 61, scope: !11430)
!11439 = !DILocation(line: 719, column: 59, scope: !11430)
!11440 = !DILocation(line: 719, column: 55, scope: !11430)
!11441 = !DILocation(line: 719, column: 77, scope: !11430)
!11442 = !DILocation(line: 719, column: 28, scope: !11430)
!11443 = !DILocation(line: 719, column: 30, scope: !11430)
!11444 = !DILocation(line: 719, column: 13, scope: !11430)
!11445 = !DILocation(line: 719, column: 22, scope: !11430)
!11446 = !DILocation(line: 719, column: 35, scope: !11430)
!11447 = !DILocation(line: 718, column: 40, scope: !11448)
!11448 = !DILexicalBlockFile(scope: !11430, file: !1003, discriminator: 2)
!11449 = !DILocation(line: 718, column: 9, scope: !11448)
!11450 = distinct !{!11450, !11451}
!11451 = !DILocation(line: 718, column: 9, scope: !11072)
!11452 = !DILocation(line: 720, column: 16, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11072, file: !1003, line: 720, column: 9)
!11454 = !DILocation(line: 720, column: 14, scope: !11453)
!11455 = !DILocation(line: 720, column: 21, scope: !11456)
!11456 = !DILexicalBlockFile(scope: !11457, file: !1003, discriminator: 1)
!11457 = distinct !DILexicalBlock(scope: !11453, file: !1003, line: 720, column: 9)
!11458 = !DILocation(line: 720, column: 25, scope: !11456)
!11459 = !DILocation(line: 720, column: 23, scope: !11456)
!11460 = !DILocation(line: 720, column: 9, scope: !11456)
!11461 = !DILocation(line: 722, column: 32, scope: !11457)
!11462 = !DILocation(line: 722, column: 41, scope: !11457)
!11463 = !DILocation(line: 722, column: 54, scope: !11457)
!11464 = !DILocation(line: 722, column: 52, scope: !11457)
!11465 = !DILocation(line: 722, column: 17, scope: !11457)
!11466 = !DILocation(line: 722, column: 26, scope: !11457)
!11467 = !DILocation(line: 722, column: 72, scope: !11457)
!11468 = !DILocation(line: 722, column: 63, scope: !11457)
!11469 = !DILocation(line: 722, column: 61, scope: !11457)
!11470 = !DILocation(line: 722, column: 57, scope: !11457)
!11471 = !DILocation(line: 722, column: 79, scope: !11457)
!11472 = !DILocation(line: 721, column: 28, scope: !11457)
!11473 = !DILocation(line: 721, column: 37, scope: !11457)
!11474 = !DILocation(line: 721, column: 48, scope: !11457)
!11475 = !DILocation(line: 721, column: 54, scope: !11457)
!11476 = !DILocation(line: 721, column: 52, scope: !11457)
!11477 = !DILocation(line: 721, column: 13, scope: !11457)
!11478 = !DILocation(line: 721, column: 22, scope: !11457)
!11479 = !DILocation(line: 721, column: 57, scope: !11457)
!11480 = !DILocation(line: 720, column: 41, scope: !11481)
!11481 = !DILexicalBlockFile(scope: !11457, file: !1003, discriminator: 2)
!11482 = !DILocation(line: 720, column: 9, scope: !11481)
!11483 = distinct !{!11483, !11484}
!11484 = !DILocation(line: 720, column: 9, scope: !11072)
!11485 = !DILocation(line: 724, column: 31, scope: !11072)
!11486 = !DILocation(line: 724, column: 45, scope: !11072)
!11487 = !DILocation(line: 724, column: 54, scope: !11072)
!11488 = !DILocation(line: 724, column: 35, scope: !11072)
!11489 = !DILocation(line: 724, column: 22, scope: !11072)
!11490 = !DILocation(line: 724, column: 20, scope: !11072)
!11491 = !DILocation(line: 726, column: 26, scope: !11072)
!11492 = !DILocation(line: 726, column: 30, scope: !11072)
!11493 = !DILocation(line: 726, column: 39, scope: !11072)
!11494 = !DILocation(line: 726, column: 51, scope: !11072)
!11495 = !DILocation(line: 726, column: 56, scope: !11072)
!11496 = !DILocation(line: 726, column: 65, scope: !11072)
!11497 = !DILocation(line: 726, column: 9, scope: !11072)
!11498 = !DILocation(line: 620, column: 12, scope: !10703, inlinedAt: !11071)
!11499 = !DILocation(line: 620, column: 10, scope: !10703, inlinedAt: !11071)
!11500 = !DILocation(line: 620, column: 17, scope: !10706, inlinedAt: !11071)
!11501 = !DILocation(line: 620, column: 21, scope: !10706, inlinedAt: !11071)
!11502 = !DILocation(line: 620, column: 19, scope: !10706, inlinedAt: !11071)
!11503 = !DILocation(line: 620, column: 5, scope: !10706, inlinedAt: !11071)
!11504 = !DILocation(line: 621, column: 28, scope: !10712, inlinedAt: !11071)
!11505 = !DILocation(line: 621, column: 18, scope: !10712, inlinedAt: !11071)
!11506 = !DILocation(line: 621, column: 13, scope: !10712, inlinedAt: !11071)
!11507 = !DILocation(line: 621, column: 9, scope: !10712, inlinedAt: !11071)
!11508 = !DILocation(line: 621, column: 16, scope: !10712, inlinedAt: !11071)
!11509 = !DILocation(line: 620, column: 32, scope: !10718, inlinedAt: !11071)
!11510 = !DILocation(line: 620, column: 5, scope: !10718, inlinedAt: !11071)
!11511 = !DILocation(line: 727, column: 9, scope: !11072)
!11512 = !DILocation(line: 729, column: 31, scope: !11067)
!11513 = !DILocation(line: 729, column: 5, scope: !11067)
!11514 = !DILocation(line: 729, column: 14, scope: !11067)
!11515 = !DILocation(line: 729, column: 29, scope: !11067)
!11516 = !DILocation(line: 731, column: 5, scope: !11067)
!11517 = distinct !{!11517, !11516}
!11518 = !DILocation(line: 731, column: 16, scope: !11519)
!11519 = !DILexicalBlockFile(scope: !11520, file: !1003, discriminator: 1)
!11520 = distinct !DILexicalBlock(scope: !11521, file: !1003, line: 731, column: 14)
!11521 = distinct !DILexicalBlock(scope: !11067, file: !1003, line: 731, column: 8)
!11522 = !DILocation(line: 731, column: 27, scope: !11519)
!11523 = !DILocation(line: 731, column: 14, scope: !11519)
!11524 = !DILocation(line: 731, column: 36, scope: !11525)
!11525 = !DILexicalBlockFile(scope: !11526, file: !1003, discriminator: 2)
!11526 = distinct !DILexicalBlock(scope: !11520, file: !1003, line: 731, column: 34)
!11527 = !DILocation(line: 731, column: 100, scope: !11528)
!11528 = !DILexicalBlockFile(scope: !11525, file: !1003, discriminator: 4)
!11529 = !DILocation(line: 731, column: 100, scope: !11525)
!11530 = !DILocation(line: 731, column: 111, scope: !11531)
!11531 = !DILexicalBlockFile(scope: !11521, file: !1003, discriminator: 3)
!11532 = !DILocation(line: 732, column: 9, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11067, file: !1003, line: 732, column: 9)
!11534 = !DILocation(line: 732, column: 22, scope: !11533)
!11535 = !DILocation(line: 732, column: 31, scope: !11533)
!11536 = !DILocation(line: 732, column: 42, scope: !11533)
!11537 = !DILocation(line: 732, column: 20, scope: !11533)
!11538 = !DILocation(line: 732, column: 9, scope: !11067)
!11539 = !DILocation(line: 733, column: 16, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11533, file: !1003, line: 732, column: 47)
!11541 = !DILocation(line: 733, column: 20, scope: !11540)
!11542 = !DILocation(line: 735, column: 16, scope: !11540)
!11543 = !DILocation(line: 733, column: 9, scope: !11540)
!11544 = !DILocation(line: 736, column: 9, scope: !11540)
!11545 = !DILocation(line: 739, column: 12, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11067, file: !1003, line: 739, column: 5)
!11547 = !DILocation(line: 739, column: 10, scope: !11546)
!11548 = !DILocation(line: 739, column: 17, scope: !11549)
!11549 = !DILexicalBlockFile(scope: !11550, file: !1003, discriminator: 1)
!11550 = distinct !DILexicalBlock(scope: !11546, file: !1003, line: 739, column: 5)
!11551 = !DILocation(line: 739, column: 22, scope: !11549)
!11552 = !DILocation(line: 739, column: 31, scope: !11549)
!11553 = !DILocation(line: 739, column: 19, scope: !11549)
!11554 = !DILocation(line: 739, column: 5, scope: !11549)
!11555 = !DILocation(line: 740, column: 28, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11557, file: !1003, line: 740, column: 13)
!11557 = distinct !DILexicalBlock(scope: !11550, file: !1003, line: 739, column: 48)
!11558 = !DILocation(line: 740, column: 29, scope: !11556)
!11559 = !DILocation(line: 740, column: 13, scope: !11556)
!11560 = !DILocation(line: 740, column: 22, scope: !11556)
!11561 = !DILocation(line: 740, column: 51, scope: !11556)
!11562 = !DILocation(line: 740, column: 36, scope: !11556)
!11563 = !DILocation(line: 740, column: 45, scope: !11556)
!11564 = !DILocation(line: 740, column: 33, scope: !11556)
!11565 = !DILocation(line: 740, column: 13, scope: !11557)
!11566 = !DILocation(line: 741, column: 20, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11556, file: !1003, line: 740, column: 55)
!11568 = !DILocation(line: 741, column: 24, scope: !11567)
!11569 = !DILocation(line: 741, column: 13, scope: !11567)
!11570 = !DILocation(line: 742, column: 13, scope: !11567)
!11571 = !DILocation(line: 744, column: 5, scope: !11557)
!11572 = !DILocation(line: 739, column: 44, scope: !11573)
!11573 = !DILexicalBlockFile(scope: !11550, file: !1003, discriminator: 2)
!11574 = !DILocation(line: 739, column: 5, scope: !11573)
!11575 = distinct !{!11575, !11576}
!11576 = !DILocation(line: 739, column: 5, scope: !11067)
!11577 = !DILocation(line: 746, column: 30, scope: !11067)
!11578 = !DILocation(line: 746, column: 39, scope: !11067)
!11579 = !DILocation(line: 746, column: 50, scope: !11067)
!11580 = !DILocation(line: 746, column: 55, scope: !11067)
!11581 = !DILocation(line: 746, column: 5, scope: !11067)
!11582 = !DILocation(line: 746, column: 14, scope: !11067)
!11583 = !DILocation(line: 746, column: 27, scope: !11067)
!11584 = !DILocation(line: 748, column: 23, scope: !11067)
!11585 = !DILocation(line: 748, column: 32, scope: !11067)
!11586 = !DILocation(line: 748, column: 5, scope: !11067)
!11587 = !DILocation(line: 748, column: 14, scope: !11067)
!11588 = !DILocation(line: 748, column: 21, scope: !11067)
!11589 = !DILocation(line: 749, column: 58, scope: !11067)
!11590 = !DILocation(line: 749, column: 67, scope: !11067)
!11591 = !DILocation(line: 749, column: 43, scope: !11067)
!11592 = !DILocation(line: 749, column: 52, scope: !11067)
!11593 = !DILocation(line: 749, column: 18, scope: !11067)
!11594 = !DILocation(line: 749, column: 27, scope: !11067)
!11595 = !DILocation(line: 749, column: 5, scope: !11067)
!11596 = !DILocation(line: 749, column: 14, scope: !11067)
!11597 = !DILocation(line: 749, column: 41, scope: !11067)
!11598 = !DILocation(line: 750, column: 9, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11067, file: !1003, line: 750, column: 9)
!11600 = !DILocation(line: 750, column: 18, scope: !11599)
!11601 = !DILocation(line: 750, column: 31, scope: !11599)
!11602 = !DILocation(line: 750, column: 9, scope: !11067)
!11603 = !DILocalVariable(name: "idx", scope: !11604, file: !1003, line: 751, type: !958)
!11604 = distinct !DILexicalBlock(scope: !11599, file: !1003, line: 750, column: 36)
!11605 = !DILocation(line: 751, column: 13, scope: !11604)
!11606 = !DILocation(line: 752, column: 13, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11604, file: !1003, line: 752, column: 13)
!11608 = !DILocation(line: 752, column: 22, scope: !11607)
!11609 = !DILocation(line: 752, column: 37, scope: !11607)
!11610 = !DILocation(line: 752, column: 13, scope: !11604)
!11611 = !DILocation(line: 753, column: 19, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11607, file: !1003, line: 752, column: 48)
!11613 = !DILocation(line: 753, column: 28, scope: !11612)
!11614 = !DILocation(line: 753, column: 39, scope: !11612)
!11615 = !DILocation(line: 753, column: 17, scope: !11612)
!11616 = !DILocation(line: 754, column: 9, scope: !11612)
!11617 = !DILocation(line: 754, column: 20, scope: !11618)
!11618 = !DILexicalBlockFile(scope: !11619, file: !1003, discriminator: 1)
!11619 = distinct !DILexicalBlock(scope: !11607, file: !1003, line: 754, column: 20)
!11620 = !DILocation(line: 754, column: 29, scope: !11618)
!11621 = !DILocation(line: 754, column: 44, scope: !11618)
!11622 = !DILocation(line: 755, column: 19, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11619, file: !1003, line: 754, column: 49)
!11624 = !DILocation(line: 755, column: 28, scope: !11623)
!11625 = !DILocation(line: 755, column: 43, scope: !11623)
!11626 = !DILocation(line: 755, column: 54, scope: !11623)
!11627 = !DILocation(line: 755, column: 59, scope: !11623)
!11628 = !DILocation(line: 755, column: 42, scope: !11623)
!11629 = !DILocation(line: 755, column: 68, scope: !11630)
!11630 = !DILexicalBlockFile(scope: !11623, file: !1003, discriminator: 1)
!11631 = !DILocation(line: 755, column: 79, scope: !11630)
!11632 = !DILocation(line: 755, column: 42, scope: !11630)
!11633 = !DILocation(line: 755, column: 42, scope: !11634)
!11634 = !DILexicalBlockFile(scope: !11623, file: !1003, discriminator: 2)
!11635 = !DILocation(line: 755, column: 42, scope: !11636)
!11636 = !DILexicalBlockFile(scope: !11623, file: !1003, discriminator: 3)
!11637 = !DILocation(line: 755, column: 39, scope: !11636)
!11638 = !DILocation(line: 755, column: 17, scope: !11636)
!11639 = !DILocation(line: 756, column: 9, scope: !11623)
!11640 = !DILocation(line: 757, column: 18, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11642, file: !1003, line: 757, column: 17)
!11642 = distinct !DILexicalBlock(scope: !11619, file: !1003, line: 756, column: 16)
!11643 = !DILocation(line: 757, column: 17, scope: !11642)
!11644 = !DILocation(line: 758, column: 21, scope: !11641)
!11645 = !DILocation(line: 758, column: 17, scope: !11641)
!11646 = !DILocation(line: 759, column: 22, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11641, file: !1003, line: 759, column: 22)
!11648 = !DILocation(line: 759, column: 33, scope: !11647)
!11649 = !DILocation(line: 759, column: 22, scope: !11641)
!11650 = !DILocation(line: 760, column: 23, scope: !11647)
!11651 = !DILocation(line: 760, column: 32, scope: !11647)
!11652 = !DILocation(line: 760, column: 43, scope: !11647)
!11653 = !DILocation(line: 760, column: 21, scope: !11647)
!11654 = !DILocation(line: 760, column: 17, scope: !11647)
!11655 = !DILocation(line: 762, column: 23, scope: !11647)
!11656 = !DILocation(line: 762, column: 34, scope: !11647)
!11657 = !DILocation(line: 762, column: 21, scope: !11647)
!11658 = !DILocation(line: 764, column: 42, scope: !11604)
!11659 = !DILocation(line: 764, column: 27, scope: !11604)
!11660 = !DILocation(line: 764, column: 36, scope: !11604)
!11661 = !DILocation(line: 764, column: 9, scope: !11604)
!11662 = !DILocation(line: 764, column: 18, scope: !11604)
!11663 = !DILocation(line: 764, column: 25, scope: !11604)
!11664 = !DILocation(line: 765, column: 5, scope: !11604)
!11665 = !DILocation(line: 767, column: 25, scope: !11067)
!11666 = !DILocation(line: 767, column: 34, scope: !11067)
!11667 = !DILocation(line: 767, column: 44, scope: !11067)
!11668 = !DILocation(line: 767, column: 41, scope: !11067)
!11669 = !DILocation(line: 767, column: 23, scope: !11067)
!11670 = !DILocation(line: 767, column: 5, scope: !11067)
!11671 = !DILocation(line: 767, column: 14, scope: !11067)
!11672 = !DILocation(line: 767, column: 21, scope: !11067)
!11673 = !DILocation(line: 768, column: 5, scope: !11067)
!11674 = !DILocation(line: 768, column: 14, scope: !11067)
!11675 = !DILocation(line: 768, column: 21, scope: !11067)
!11676 = !DILocation(line: 769, column: 10, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11067, file: !1003, line: 769, column: 9)
!11678 = !DILocation(line: 769, column: 19, scope: !11677)
!11679 = !DILocation(line: 769, column: 34, scope: !11677)
!11680 = !DILocation(line: 769, column: 39, scope: !11677)
!11681 = !DILocation(line: 769, column: 42, scope: !11682)
!11682 = !DILexicalBlockFile(scope: !11677, file: !1003, discriminator: 1)
!11683 = !DILocation(line: 769, column: 9, scope: !11682)
!11684 = !DILocation(line: 770, column: 27, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11677, file: !1003, line: 769, column: 54)
!11686 = !DILocation(line: 770, column: 36, scope: !11685)
!11687 = !DILocation(line: 770, column: 47, scope: !11685)
!11688 = !DILocation(line: 770, column: 53, scope: !11685)
!11689 = !DILocation(line: 770, column: 51, scope: !11685)
!11690 = !DILocation(line: 770, column: 9, scope: !11685)
!11691 = !DILocation(line: 770, column: 18, scope: !11685)
!11692 = !DILocation(line: 770, column: 25, scope: !11685)
!11693 = !DILocation(line: 771, column: 5, scope: !11685)
!11694 = !DILocation(line: 771, column: 17, scope: !11695)
!11695 = !DILexicalBlockFile(scope: !11696, file: !1003, discriminator: 1)
!11696 = distinct !DILexicalBlock(scope: !11677, file: !1003, line: 771, column: 16)
!11697 = !DILocation(line: 771, column: 26, scope: !11695)
!11698 = !DILocation(line: 771, column: 41, scope: !11695)
!11699 = !DILocation(line: 771, column: 47, scope: !11695)
!11700 = !DILocation(line: 771, column: 51, scope: !11701)
!11701 = !DILexicalBlockFile(scope: !11696, file: !1003, discriminator: 2)
!11702 = !DILocation(line: 771, column: 62, scope: !11701)
!11703 = !DILocation(line: 771, column: 16, scope: !11701)
!11704 = !DILocation(line: 772, column: 27, scope: !11696)
!11705 = !DILocation(line: 772, column: 38, scope: !11696)
!11706 = !DILocation(line: 772, column: 9, scope: !11696)
!11707 = !DILocation(line: 772, column: 18, scope: !11696)
!11708 = !DILocation(line: 772, column: 25, scope: !11696)
!11709 = !DILocation(line: 774, column: 5, scope: !11067)
!11710 = !DILocation(line: 775, column: 1, scope: !11067)
!11711 = distinct !DISubprogram(name: "read_sbr_dtdf", scope: !1003, file: !1003, line: 795, type: !11712, isLocal: true, isDefinition: true, scopeLine: 797, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!11712 = !DISubroutineType(types: !11713)
!11713 = !{null, !1125, !2893, !2516}
!11714 = !DILocation(line: 616, column: 83, scope: !10619, inlinedAt: !11715)
!11715 = distinct !DILocation(line: 799, column: 5, scope: !11711)
!11716 = !DILocation(line: 616, column: 96, scope: !10619, inlinedAt: !11715)
!11717 = !DILocation(line: 617, column: 51, scope: !10619, inlinedAt: !11715)
!11718 = !DILocation(line: 619, column: 9, scope: !10619, inlinedAt: !11715)
!11719 = !DILocation(line: 616, column: 83, scope: !10619, inlinedAt: !11720)
!11720 = distinct !DILocation(line: 798, column: 5, scope: !11711)
!11721 = !DILocation(line: 616, column: 96, scope: !10619, inlinedAt: !11720)
!11722 = !DILocation(line: 617, column: 51, scope: !10619, inlinedAt: !11720)
!11723 = !DILocation(line: 619, column: 9, scope: !10619, inlinedAt: !11720)
!11724 = !DILocalVariable(name: "sbr", arg: 1, scope: !11711, file: !1003, line: 795, type: !1125)
!11725 = !DILocation(line: 795, column: 52, scope: !11711)
!11726 = !DILocalVariable(name: "gb", arg: 2, scope: !11711, file: !1003, line: 795, type: !2893)
!11727 = !DILocation(line: 795, column: 72, scope: !11711)
!11728 = !DILocalVariable(name: "ch_data", arg: 3, scope: !11711, file: !1003, line: 796, type: !2516)
!11729 = !DILocation(line: 796, column: 36, scope: !11711)
!11730 = !DILocation(line: 798, column: 22, scope: !11711)
!11731 = !DILocation(line: 798, column: 26, scope: !11711)
!11732 = !DILocation(line: 798, column: 35, scope: !11711)
!11733 = !DILocation(line: 798, column: 46, scope: !11711)
!11734 = !DILocation(line: 798, column: 55, scope: !11711)
!11735 = !DILocation(line: 798, column: 5, scope: !11711)
!11736 = !DILocation(line: 620, column: 12, scope: !10703, inlinedAt: !11720)
!11737 = !DILocation(line: 620, column: 10, scope: !10703, inlinedAt: !11720)
!11738 = !DILocation(line: 620, column: 17, scope: !10706, inlinedAt: !11720)
!11739 = !DILocation(line: 620, column: 21, scope: !10706, inlinedAt: !11720)
!11740 = !DILocation(line: 620, column: 19, scope: !10706, inlinedAt: !11720)
!11741 = !DILocation(line: 620, column: 5, scope: !10706, inlinedAt: !11720)
!11742 = !DILocation(line: 621, column: 28, scope: !10712, inlinedAt: !11720)
!11743 = !DILocation(line: 621, column: 18, scope: !10712, inlinedAt: !11720)
!11744 = !DILocation(line: 621, column: 13, scope: !10712, inlinedAt: !11720)
!11745 = !DILocation(line: 621, column: 9, scope: !10712, inlinedAt: !11720)
!11746 = !DILocation(line: 621, column: 16, scope: !10712, inlinedAt: !11720)
!11747 = !DILocation(line: 620, column: 32, scope: !10718, inlinedAt: !11720)
!11748 = !DILocation(line: 620, column: 5, scope: !10718, inlinedAt: !11720)
!11749 = !DILocation(line: 799, column: 22, scope: !11711)
!11750 = !DILocation(line: 799, column: 26, scope: !11711)
!11751 = !DILocation(line: 799, column: 35, scope: !11711)
!11752 = !DILocation(line: 799, column: 48, scope: !11711)
!11753 = !DILocation(line: 799, column: 57, scope: !11711)
!11754 = !DILocation(line: 799, column: 5, scope: !11711)
!11755 = !DILocation(line: 620, column: 12, scope: !10703, inlinedAt: !11715)
!11756 = !DILocation(line: 620, column: 10, scope: !10703, inlinedAt: !11715)
!11757 = !DILocation(line: 620, column: 17, scope: !10706, inlinedAt: !11715)
!11758 = !DILocation(line: 620, column: 21, scope: !10706, inlinedAt: !11715)
!11759 = !DILocation(line: 620, column: 19, scope: !10706, inlinedAt: !11715)
!11760 = !DILocation(line: 620, column: 5, scope: !10706, inlinedAt: !11715)
!11761 = !DILocation(line: 621, column: 28, scope: !10712, inlinedAt: !11715)
!11762 = !DILocation(line: 621, column: 18, scope: !10712, inlinedAt: !11715)
!11763 = !DILocation(line: 621, column: 13, scope: !10712, inlinedAt: !11715)
!11764 = !DILocation(line: 621, column: 9, scope: !10712, inlinedAt: !11715)
!11765 = !DILocation(line: 621, column: 16, scope: !10712, inlinedAt: !11715)
!11766 = !DILocation(line: 620, column: 32, scope: !10718, inlinedAt: !11715)
!11767 = !DILocation(line: 620, column: 5, scope: !10718, inlinedAt: !11715)
!11768 = !DILocation(line: 800, column: 1, scope: !11711)
!11769 = distinct !DISubprogram(name: "read_sbr_invf", scope: !1003, file: !1003, line: 803, type: !11712, isLocal: true, isDefinition: true, scopeLine: 805, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!11770 = !DILocalVariable(name: "sbr", arg: 1, scope: !11769, file: !1003, line: 803, type: !1125)
!11771 = !DILocation(line: 803, column: 52, scope: !11769)
!11772 = !DILocalVariable(name: "gb", arg: 2, scope: !11769, file: !1003, line: 803, type: !2893)
!11773 = !DILocation(line: 803, column: 72, scope: !11769)
!11774 = !DILocalVariable(name: "ch_data", arg: 3, scope: !11769, file: !1003, line: 804, type: !2516)
!11775 = !DILocation(line: 804, column: 36, scope: !11769)
!11776 = !DILocalVariable(name: "i", scope: !11769, file: !1003, line: 806, type: !958)
!11777 = !DILocation(line: 806, column: 9, scope: !11769)
!11778 = !DILocation(line: 808, column: 12, scope: !11769)
!11779 = !DILocation(line: 808, column: 21, scope: !11769)
!11780 = !DILocation(line: 808, column: 5, scope: !11769)
!11781 = !DILocation(line: 808, column: 38, scope: !11769)
!11782 = !DILocation(line: 808, column: 47, scope: !11769)
!11783 = !DILocation(line: 809, column: 12, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11769, file: !1003, line: 809, column: 5)
!11785 = !DILocation(line: 809, column: 10, scope: !11784)
!11786 = !DILocation(line: 809, column: 17, scope: !11787)
!11787 = !DILexicalBlockFile(scope: !11788, file: !1003, discriminator: 1)
!11788 = distinct !DILexicalBlock(scope: !11784, file: !1003, line: 809, column: 5)
!11789 = !DILocation(line: 809, column: 21, scope: !11787)
!11790 = !DILocation(line: 809, column: 26, scope: !11787)
!11791 = !DILocation(line: 809, column: 19, scope: !11787)
!11792 = !DILocation(line: 809, column: 5, scope: !11787)
!11793 = !DILocation(line: 810, column: 48, scope: !11788)
!11794 = !DILocation(line: 810, column: 39, scope: !11788)
!11795 = !DILocation(line: 810, column: 34, scope: !11788)
!11796 = !DILocation(line: 810, column: 9, scope: !11788)
!11797 = !DILocation(line: 810, column: 18, scope: !11788)
!11798 = !DILocation(line: 810, column: 37, scope: !11788)
!11799 = !DILocation(line: 809, column: 32, scope: !11800)
!11800 = !DILexicalBlockFile(scope: !11788, file: !1003, discriminator: 2)
!11801 = !DILocation(line: 809, column: 5, scope: !11800)
!11802 = distinct !{!11802, !11803}
!11803 = !DILocation(line: 809, column: 5, scope: !11769)
!11804 = !DILocation(line: 811, column: 1, scope: !11769)
!11805 = distinct !DISubprogram(name: "read_sbr_envelope", scope: !1003, file: !1003, line: 813, type: !11806, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!11806 = !DISubroutineType(types: !11807)
!11807 = !{!958, !1510, !1125, !2893, !2516, !958}
!11808 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !11809)
!11809 = distinct !DILocation(line: 788, column: 601, scope: !11810, inlinedAt: !11819)
!11810 = !DILexicalBlockFile(scope: !11811, file: !2895, discriminator: 11)
!11811 = distinct !DILexicalBlock(scope: !11812, file: !2895, line: 788, column: 490)
!11812 = distinct !DILexicalBlock(scope: !11813, file: !2895, line: 788, column: 466)
!11813 = distinct !DILexicalBlock(scope: !11814, file: !2895, line: 788, column: 154)
!11814 = distinct !DILexicalBlock(scope: !11815, file: !2895, line: 788, column: 130)
!11815 = distinct !DILexicalBlock(scope: !11816, file: !2895, line: 788, column: 8)
!11816 = distinct !DISubprogram(name: "get_vlc2", scope: !2895, file: !2895, line: 762, type: !11817, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!11817 = !DISubroutineType(types: !11818)
!11818 = !{!958, !2893, !1066, !958, !958}
!11819 = distinct !DILocation(line: 886, column: 94, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11821, file: !1003, line: 885, column: 71)
!11821 = distinct !DILexicalBlock(scope: !11822, file: !1003, line: 885, column: 13)
!11822 = distinct !DILexicalBlock(scope: !11823, file: !1003, line: 885, column: 13)
!11823 = distinct !DILexicalBlock(scope: !11824, file: !1003, line: 883, column: 16)
!11824 = distinct !DILexicalBlock(scope: !11825, file: !1003, line: 854, column: 13)
!11825 = distinct !DILexicalBlock(scope: !11826, file: !1003, line: 853, column: 47)
!11826 = distinct !DILexicalBlock(scope: !11827, file: !1003, line: 853, column: 5)
!11827 = distinct !DILexicalBlock(scope: !11805, file: !1003, line: 853, column: 5)
!11828 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !11829)
!11829 = distinct !DILocation(line: 788, column: 259, scope: !11830, inlinedAt: !11819)
!11830 = !DILexicalBlockFile(scope: !11813, file: !2895, discriminator: 6)
!11831 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !11832)
!11832 = distinct !DILocation(line: 786, column: 16, scope: !11816, inlinedAt: !11819)
!11833 = !DILocalVariable(name: "s", arg: 1, scope: !11816, file: !2895, line: 762, type: !2893)
!11834 = !DILocation(line: 762, column: 74, scope: !11816, inlinedAt: !11819)
!11835 = !DILocalVariable(name: "table", arg: 2, scope: !11816, file: !2895, line: 762, type: !1066)
!11836 = !DILocation(line: 762, column: 87, scope: !11816, inlinedAt: !11819)
!11837 = !DILocalVariable(name: "bits", arg: 3, scope: !11816, file: !2895, line: 763, type: !958)
!11838 = !DILocation(line: 763, column: 42, scope: !11816, inlinedAt: !11819)
!11839 = !DILocalVariable(name: "max_depth", arg: 4, scope: !11816, file: !2895, line: 763, type: !958)
!11840 = !DILocation(line: 763, column: 52, scope: !11816, inlinedAt: !11819)
!11841 = !DILocalVariable(name: "code", scope: !11816, file: !2895, line: 783, type: !958)
!11842 = !DILocation(line: 783, column: 9, scope: !11816, inlinedAt: !11819)
!11843 = !DILocalVariable(name: "re_index", scope: !11816, file: !2895, line: 785, type: !985)
!11844 = !DILocation(line: 785, column: 18, scope: !11816, inlinedAt: !11819)
!11845 = !DILocalVariable(name: "re_cache", scope: !11816, file: !2895, line: 785, type: !985)
!11846 = !DILocation(line: 785, column: 78, scope: !11816, inlinedAt: !11819)
!11847 = !DILocalVariable(name: "re_size_plus8", scope: !11816, file: !2895, line: 785, type: !985)
!11848 = !DILocation(line: 785, column: 101, scope: !11816, inlinedAt: !11819)
!11849 = !DILocalVariable(name: "n", scope: !11815, file: !2895, line: 788, type: !958)
!11850 = !DILocation(line: 788, column: 14, scope: !11815, inlinedAt: !11819)
!11851 = !DILocalVariable(name: "nb_bits", scope: !11815, file: !2895, line: 788, type: !958)
!11852 = !DILocation(line: 788, column: 17, scope: !11815, inlinedAt: !11819)
!11853 = !DILocalVariable(name: "index", scope: !11815, file: !2895, line: 788, type: !985)
!11854 = !DILocation(line: 788, column: 39, scope: !11815, inlinedAt: !11819)
!11855 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !11856)
!11856 = distinct !DILocation(line: 788, column: 601, scope: !11810, inlinedAt: !11857)
!11857 = distinct !DILocation(line: 876, column: 90, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11859, file: !1003, line: 874, column: 75)
!11859 = distinct !DILexicalBlock(scope: !11860, file: !1003, line: 874, column: 17)
!11860 = distinct !DILexicalBlock(scope: !11861, file: !1003, line: 874, column: 17)
!11861 = distinct !DILexicalBlock(scope: !11862, file: !1003, line: 873, column: 20)
!11862 = distinct !DILexicalBlock(scope: !11863, file: !1003, line: 864, column: 24)
!11863 = distinct !DILexicalBlock(scope: !11864, file: !1003, line: 856, column: 17)
!11864 = distinct !DILexicalBlock(scope: !11824, file: !1003, line: 854, column: 36)
!11865 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !11866)
!11866 = distinct !DILocation(line: 788, column: 259, scope: !11830, inlinedAt: !11857)
!11867 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !11868)
!11868 = distinct !DILocation(line: 786, column: 16, scope: !11816, inlinedAt: !11857)
!11869 = !DILocation(line: 762, column: 74, scope: !11816, inlinedAt: !11857)
!11870 = !DILocation(line: 762, column: 87, scope: !11816, inlinedAt: !11857)
!11871 = !DILocation(line: 763, column: 42, scope: !11816, inlinedAt: !11857)
!11872 = !DILocation(line: 763, column: 52, scope: !11816, inlinedAt: !11857)
!11873 = !DILocation(line: 783, column: 9, scope: !11816, inlinedAt: !11857)
!11874 = !DILocation(line: 785, column: 18, scope: !11816, inlinedAt: !11857)
!11875 = !DILocation(line: 785, column: 78, scope: !11816, inlinedAt: !11857)
!11876 = !DILocation(line: 785, column: 101, scope: !11816, inlinedAt: !11857)
!11877 = !DILocation(line: 788, column: 14, scope: !11815, inlinedAt: !11857)
!11878 = !DILocation(line: 788, column: 17, scope: !11815, inlinedAt: !11857)
!11879 = !DILocation(line: 788, column: 39, scope: !11815, inlinedAt: !11857)
!11880 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !11881)
!11881 = distinct !DILocation(line: 788, column: 601, scope: !11810, inlinedAt: !11882)
!11882 = distinct !DILocation(line: 867, column: 90, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11884, file: !1003, line: 865, column: 75)
!11884 = distinct !DILexicalBlock(scope: !11885, file: !1003, line: 865, column: 17)
!11885 = distinct !DILexicalBlock(scope: !11886, file: !1003, line: 865, column: 17)
!11886 = distinct !DILexicalBlock(scope: !11862, file: !1003, line: 864, column: 53)
!11887 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !11888)
!11888 = distinct !DILocation(line: 788, column: 259, scope: !11830, inlinedAt: !11882)
!11889 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !11890)
!11890 = distinct !DILocation(line: 786, column: 16, scope: !11816, inlinedAt: !11882)
!11891 = !DILocation(line: 762, column: 74, scope: !11816, inlinedAt: !11882)
!11892 = !DILocation(line: 762, column: 87, scope: !11816, inlinedAt: !11882)
!11893 = !DILocation(line: 763, column: 42, scope: !11816, inlinedAt: !11882)
!11894 = !DILocation(line: 763, column: 52, scope: !11816, inlinedAt: !11882)
!11895 = !DILocation(line: 783, column: 9, scope: !11816, inlinedAt: !11882)
!11896 = !DILocation(line: 785, column: 18, scope: !11816, inlinedAt: !11882)
!11897 = !DILocation(line: 785, column: 78, scope: !11816, inlinedAt: !11882)
!11898 = !DILocation(line: 785, column: 101, scope: !11816, inlinedAt: !11882)
!11899 = !DILocation(line: 788, column: 14, scope: !11815, inlinedAt: !11882)
!11900 = !DILocation(line: 788, column: 17, scope: !11815, inlinedAt: !11882)
!11901 = !DILocation(line: 788, column: 39, scope: !11815, inlinedAt: !11882)
!11902 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !11903)
!11903 = distinct !DILocation(line: 788, column: 601, scope: !11810, inlinedAt: !11904)
!11904 = distinct !DILocation(line: 858, column: 90, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11906, file: !1003, line: 857, column: 75)
!11906 = distinct !DILexicalBlock(scope: !11907, file: !1003, line: 857, column: 17)
!11907 = distinct !DILexicalBlock(scope: !11908, file: !1003, line: 857, column: 17)
!11908 = distinct !DILexicalBlock(scope: !11863, file: !1003, line: 856, column: 73)
!11909 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !11910)
!11910 = distinct !DILocation(line: 788, column: 259, scope: !11830, inlinedAt: !11904)
!11911 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !11912)
!11912 = distinct !DILocation(line: 786, column: 16, scope: !11816, inlinedAt: !11904)
!11913 = !DILocation(line: 762, column: 74, scope: !11816, inlinedAt: !11904)
!11914 = !DILocation(line: 762, column: 87, scope: !11816, inlinedAt: !11904)
!11915 = !DILocation(line: 763, column: 42, scope: !11816, inlinedAt: !11904)
!11916 = !DILocation(line: 763, column: 52, scope: !11816, inlinedAt: !11904)
!11917 = !DILocation(line: 783, column: 9, scope: !11816, inlinedAt: !11904)
!11918 = !DILocation(line: 785, column: 18, scope: !11816, inlinedAt: !11904)
!11919 = !DILocation(line: 785, column: 78, scope: !11816, inlinedAt: !11904)
!11920 = !DILocation(line: 785, column: 101, scope: !11816, inlinedAt: !11904)
!11921 = !DILocation(line: 788, column: 14, scope: !11815, inlinedAt: !11904)
!11922 = !DILocation(line: 788, column: 17, scope: !11815, inlinedAt: !11904)
!11923 = !DILocation(line: 788, column: 39, scope: !11815, inlinedAt: !11904)
!11924 = !DILocalVariable(name: "ac", arg: 1, scope: !11805, file: !1003, line: 813, type: !1510)
!11925 = !DILocation(line: 813, column: 42, scope: !11805)
!11926 = !DILocalVariable(name: "sbr", arg: 2, scope: !11805, file: !1003, line: 813, type: !1125)
!11927 = !DILocation(line: 813, column: 71, scope: !11805)
!11928 = !DILocalVariable(name: "gb", arg: 3, scope: !11805, file: !1003, line: 813, type: !2893)
!11929 = !DILocation(line: 813, column: 91, scope: !11805)
!11930 = !DILocalVariable(name: "ch_data", arg: 4, scope: !11805, file: !1003, line: 814, type: !2516)
!11931 = !DILocation(line: 814, column: 40, scope: !11805)
!11932 = !DILocalVariable(name: "ch", arg: 5, scope: !11805, file: !1003, line: 814, type: !958)
!11933 = !DILocation(line: 814, column: 53, scope: !11805)
!11934 = !DILocalVariable(name: "bits", scope: !11805, file: !1003, line: 816, type: !958)
!11935 = !DILocation(line: 816, column: 9, scope: !11805)
!11936 = !DILocalVariable(name: "i", scope: !11805, file: !1003, line: 817, type: !958)
!11937 = !DILocation(line: 817, column: 9, scope: !11805)
!11938 = !DILocalVariable(name: "j", scope: !11805, file: !1003, line: 817, type: !958)
!11939 = !DILocation(line: 817, column: 12, scope: !11805)
!11940 = !DILocalVariable(name: "k", scope: !11805, file: !1003, line: 817, type: !958)
!11941 = !DILocation(line: 817, column: 15, scope: !11805)
!11942 = !DILocalVariable(name: "t_huff", scope: !11805, file: !1003, line: 818, type: !1066)
!11943 = !DILocation(line: 818, column: 15, scope: !11805)
!11944 = !DILocalVariable(name: "f_huff", scope: !11805, file: !1003, line: 818, type: !1066)
!11945 = !DILocation(line: 818, column: 29, scope: !11805)
!11946 = !DILocalVariable(name: "t_lav", scope: !11805, file: !1003, line: 819, type: !958)
!11947 = !DILocation(line: 819, column: 9, scope: !11805)
!11948 = !DILocalVariable(name: "f_lav", scope: !11805, file: !1003, line: 819, type: !958)
!11949 = !DILocation(line: 819, column: 16, scope: !11805)
!11950 = !DILocalVariable(name: "delta", scope: !11805, file: !1003, line: 820, type: !1591)
!11951 = !DILocation(line: 820, column: 15, scope: !11805)
!11952 = !DILocation(line: 820, column: 24, scope: !11805)
!11953 = !DILocation(line: 820, column: 27, scope: !11805)
!11954 = !DILocation(line: 820, column: 32, scope: !11805)
!11955 = !DILocation(line: 820, column: 35, scope: !11956)
!11956 = !DILexicalBlockFile(scope: !11805, file: !1003, discriminator: 1)
!11957 = !DILocation(line: 820, column: 40, scope: !11956)
!11958 = !DILocation(line: 820, column: 52, scope: !11956)
!11959 = !DILocation(line: 820, column: 32, scope: !11960)
!11960 = !DILexicalBlockFile(scope: !11805, file: !1003, discriminator: 2)
!11961 = !DILocation(line: 820, column: 58, scope: !11960)
!11962 = !DILocation(line: 820, column: 15, scope: !11960)
!11963 = !DILocalVariable(name: "odd", scope: !11805, file: !1003, line: 821, type: !1591)
!11964 = !DILocation(line: 821, column: 15, scope: !11805)
!11965 = !DILocation(line: 821, column: 21, scope: !11805)
!11966 = !DILocation(line: 821, column: 26, scope: !11805)
!11967 = !DILocation(line: 821, column: 31, scope: !11805)
!11968 = !DILocation(line: 823, column: 9, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11805, file: !1003, line: 823, column: 9)
!11970 = !DILocation(line: 823, column: 14, scope: !11969)
!11971 = !DILocation(line: 823, column: 26, scope: !11969)
!11972 = !DILocation(line: 823, column: 29, scope: !11973)
!11973 = !DILexicalBlockFile(scope: !11969, file: !1003, discriminator: 1)
!11974 = !DILocation(line: 823, column: 9, scope: !11973)
!11975 = !DILocation(line: 824, column: 13, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11977, file: !1003, line: 824, column: 13)
!11977 = distinct !DILexicalBlock(scope: !11969, file: !1003, line: 823, column: 33)
!11978 = !DILocation(line: 824, column: 22, scope: !11976)
!11979 = !DILocation(line: 824, column: 13, scope: !11977)
!11980 = !DILocation(line: 825, column: 18, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11976, file: !1003, line: 824, column: 34)
!11982 = !DILocation(line: 826, column: 55, scope: !11981)
!11983 = !DILocation(line: 826, column: 20, scope: !11981)
!11984 = !DILocation(line: 827, column: 21, scope: !11981)
!11985 = !DILocation(line: 827, column: 19, scope: !11981)
!11986 = !DILocation(line: 828, column: 55, scope: !11981)
!11987 = !DILocation(line: 828, column: 20, scope: !11981)
!11988 = !DILocation(line: 829, column: 21, scope: !11981)
!11989 = !DILocation(line: 829, column: 19, scope: !11981)
!11990 = !DILocation(line: 830, column: 9, scope: !11981)
!11991 = !DILocation(line: 831, column: 18, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11976, file: !1003, line: 830, column: 16)
!11993 = !DILocation(line: 832, column: 55, scope: !11992)
!11994 = !DILocation(line: 832, column: 20, scope: !11992)
!11995 = !DILocation(line: 833, column: 21, scope: !11992)
!11996 = !DILocation(line: 833, column: 19, scope: !11992)
!11997 = !DILocation(line: 834, column: 55, scope: !11992)
!11998 = !DILocation(line: 834, column: 20, scope: !11992)
!11999 = !DILocation(line: 835, column: 21, scope: !11992)
!12000 = !DILocation(line: 835, column: 19, scope: !11992)
!12001 = !DILocation(line: 837, column: 5, scope: !11977)
!12002 = !DILocation(line: 838, column: 13, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !12004, file: !1003, line: 838, column: 13)
!12004 = distinct !DILexicalBlock(scope: !11969, file: !1003, line: 837, column: 12)
!12005 = !DILocation(line: 838, column: 22, scope: !12003)
!12006 = !DILocation(line: 838, column: 13, scope: !12004)
!12007 = !DILocation(line: 839, column: 18, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !12003, file: !1003, line: 838, column: 34)
!12009 = !DILocation(line: 840, column: 51, scope: !12008)
!12010 = !DILocation(line: 840, column: 20, scope: !12008)
!12011 = !DILocation(line: 841, column: 21, scope: !12008)
!12012 = !DILocation(line: 841, column: 19, scope: !12008)
!12013 = !DILocation(line: 842, column: 51, scope: !12008)
!12014 = !DILocation(line: 842, column: 20, scope: !12008)
!12015 = !DILocation(line: 843, column: 21, scope: !12008)
!12016 = !DILocation(line: 843, column: 19, scope: !12008)
!12017 = !DILocation(line: 844, column: 9, scope: !12008)
!12018 = !DILocation(line: 845, column: 18, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12003, file: !1003, line: 844, column: 16)
!12020 = !DILocation(line: 846, column: 51, scope: !12019)
!12021 = !DILocation(line: 846, column: 20, scope: !12019)
!12022 = !DILocation(line: 847, column: 21, scope: !12019)
!12023 = !DILocation(line: 847, column: 19, scope: !12019)
!12024 = !DILocation(line: 848, column: 51, scope: !12019)
!12025 = !DILocation(line: 848, column: 20, scope: !12019)
!12026 = !DILocation(line: 849, column: 21, scope: !12019)
!12027 = !DILocation(line: 849, column: 19, scope: !12019)
!12028 = !DILocation(line: 853, column: 12, scope: !11827)
!12029 = !DILocation(line: 853, column: 10, scope: !11827)
!12030 = !DILocation(line: 853, column: 17, scope: !12031)
!12031 = !DILexicalBlockFile(scope: !11826, file: !1003, discriminator: 1)
!12032 = !DILocation(line: 853, column: 21, scope: !12031)
!12033 = !DILocation(line: 853, column: 30, scope: !12031)
!12034 = !DILocation(line: 853, column: 19, scope: !12031)
!12035 = !DILocation(line: 853, column: 5, scope: !12031)
!12036 = !DILocation(line: 854, column: 32, scope: !11824)
!12037 = !DILocation(line: 854, column: 13, scope: !11824)
!12038 = !DILocation(line: 854, column: 22, scope: !11824)
!12039 = !DILocation(line: 854, column: 13, scope: !11825)
!12040 = !DILocation(line: 856, column: 38, scope: !11863)
!12041 = !DILocation(line: 856, column: 40, scope: !11863)
!12042 = !DILocation(line: 856, column: 17, scope: !11863)
!12043 = !DILocation(line: 856, column: 26, scope: !11863)
!12044 = !DILocation(line: 856, column: 69, scope: !11863)
!12045 = !DILocation(line: 856, column: 48, scope: !11863)
!12046 = !DILocation(line: 856, column: 57, scope: !11863)
!12047 = !DILocation(line: 856, column: 45, scope: !11863)
!12048 = !DILocation(line: 856, column: 17, scope: !11864)
!12049 = !DILocation(line: 857, column: 24, scope: !11907)
!12050 = !DILocation(line: 857, column: 22, scope: !11907)
!12051 = !DILocation(line: 857, column: 29, scope: !12052)
!12052 = !DILexicalBlockFile(scope: !11906, file: !1003, discriminator: 1)
!12053 = !DILocation(line: 857, column: 61, scope: !12052)
!12054 = !DILocation(line: 857, column: 63, scope: !12052)
!12055 = !DILocation(line: 857, column: 40, scope: !12052)
!12056 = !DILocation(line: 857, column: 49, scope: !12052)
!12057 = !DILocation(line: 857, column: 33, scope: !12052)
!12058 = !DILocation(line: 857, column: 38, scope: !12052)
!12059 = !DILocation(line: 857, column: 31, scope: !12052)
!12060 = !DILocation(line: 857, column: 17, scope: !12052)
!12061 = !DILocation(line: 858, column: 76, scope: !11905)
!12062 = !DILocation(line: 858, column: 53, scope: !11905)
!12063 = !DILocation(line: 858, column: 73, scope: !11905)
!12064 = !DILocation(line: 858, column: 62, scope: !11905)
!12065 = !DILocation(line: 858, column: 81, scope: !11905)
!12066 = !DILocation(line: 858, column: 99, scope: !11905)
!12067 = !DILocation(line: 858, column: 103, scope: !11905)
!12068 = !DILocation(line: 858, column: 90, scope: !11905)
!12069 = !DILocation(line: 785, column: 30, scope: !11816, inlinedAt: !11904)
!12070 = !DILocation(line: 785, column: 34, scope: !11816, inlinedAt: !11904)
!12071 = !DILocation(line: 785, column: 118, scope: !11816, inlinedAt: !11904)
!12072 = !DILocation(line: 785, column: 122, scope: !11816, inlinedAt: !11904)
!12073 = !DILocation(line: 786, column: 60, scope: !11816, inlinedAt: !11904)
!12074 = !DILocation(line: 786, column: 64, scope: !11816, inlinedAt: !11904)
!12075 = !DILocation(line: 786, column: 74, scope: !11816, inlinedAt: !11904)
!12076 = !DILocation(line: 786, column: 83, scope: !11816, inlinedAt: !11904)
!12077 = !DILocation(line: 786, column: 71, scope: !11816, inlinedAt: !11904)
!12078 = !DILocation(line: 786, column: 92, scope: !11816, inlinedAt: !11904)
!12079 = !DILocation(line: 786, column: 16, scope: !11816, inlinedAt: !11904)
!12080 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !11912)
!12081 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !11912)
!12082 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !11912)
!12083 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !11912)
!12084 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !11912)
!12085 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !11912)
!12086 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !11912)
!12087 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !11912)
!12088 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !11912)
!12089 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !11912)
!12090 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !11912)
!12091 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !11912)
!12092 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !11912)
!12093 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !11912)
!12094 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !11912)
!12095 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !11912)
!12096 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !11912)
!12097 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !11912)
!12098 = !DILocation(line: 786, column: 100, scope: !11816, inlinedAt: !11904)
!12099 = !DILocation(line: 786, column: 109, scope: !11816, inlinedAt: !11904)
!12100 = !DILocation(line: 786, column: 96, scope: !11816, inlinedAt: !11904)
!12101 = !DILocation(line: 786, column: 14, scope: !11816, inlinedAt: !11904)
!12102 = !DILocation(line: 788, column: 64, scope: !12103, inlinedAt: !11904)
!12103 = !DILexicalBlockFile(scope: !11815, file: !2895, discriminator: 1)
!12104 = !DILocation(line: 788, column: 74, scope: !12103, inlinedAt: !11904)
!12105 = !DILocation(line: 788, column: 54, scope: !12103, inlinedAt: !11904)
!12106 = !DILocation(line: 788, column: 52, scope: !12103, inlinedAt: !11904)
!12107 = !DILocation(line: 788, column: 94, scope: !12103, inlinedAt: !11904)
!12108 = !DILocation(line: 788, column: 88, scope: !12103, inlinedAt: !11904)
!12109 = !DILocation(line: 788, column: 86, scope: !12103, inlinedAt: !11904)
!12110 = !DILocation(line: 788, column: 115, scope: !12103, inlinedAt: !11904)
!12111 = !DILocation(line: 788, column: 109, scope: !12103, inlinedAt: !11904)
!12112 = !DILocation(line: 788, column: 107, scope: !12103, inlinedAt: !11904)
!12113 = !DILocation(line: 788, column: 130, scope: !12103, inlinedAt: !11904)
!12114 = !DILocation(line: 788, column: 140, scope: !12103, inlinedAt: !11904)
!12115 = !DILocation(line: 788, column: 144, scope: !12103, inlinedAt: !11904)
!12116 = !DILocation(line: 788, column: 147, scope: !12117, inlinedAt: !11904)
!12117 = !DILexicalBlockFile(scope: !11814, file: !2895, discriminator: 2)
!12118 = !DILocation(line: 788, column: 149, scope: !12117, inlinedAt: !11904)
!12119 = !DILocation(line: 788, column: 130, scope: !12117, inlinedAt: !11904)
!12120 = !DILocation(line: 788, column: 169, scope: !12121, inlinedAt: !11904)
!12121 = !DILexicalBlockFile(scope: !11813, file: !2895, discriminator: 3)
!12122 = !DILocation(line: 788, column: 187, scope: !12121, inlinedAt: !11904)
!12123 = !DILocation(line: 788, column: 199, scope: !12121, inlinedAt: !11904)
!12124 = !DILocation(line: 788, column: 196, scope: !12121, inlinedAt: !11904)
!12125 = !DILocation(line: 788, column: 184, scope: !12121, inlinedAt: !11904)
!12126 = !DILocation(line: 788, column: 168, scope: !12121, inlinedAt: !11904)
!12127 = !DILocation(line: 788, column: 209, scope: !12128, inlinedAt: !11904)
!12128 = !DILexicalBlockFile(scope: !11813, file: !2895, discriminator: 4)
!12129 = !DILocation(line: 788, column: 221, scope: !12128, inlinedAt: !11904)
!12130 = !DILocation(line: 788, column: 218, scope: !12128, inlinedAt: !11904)
!12131 = !DILocation(line: 788, column: 168, scope: !12128, inlinedAt: !11904)
!12132 = !DILocation(line: 788, column: 231, scope: !12133, inlinedAt: !11904)
!12133 = !DILexicalBlockFile(scope: !11813, file: !2895, discriminator: 5)
!12134 = !DILocation(line: 788, column: 168, scope: !12133, inlinedAt: !11904)
!12135 = !DILocation(line: 788, column: 168, scope: !11830, inlinedAt: !11904)
!12136 = !DILocation(line: 788, column: 165, scope: !11830, inlinedAt: !11904)
!12137 = !DILocation(line: 788, column: 303, scope: !11830, inlinedAt: !11904)
!12138 = !DILocation(line: 788, column: 307, scope: !11830, inlinedAt: !11904)
!12139 = !DILocation(line: 788, column: 317, scope: !11830, inlinedAt: !11904)
!12140 = !DILocation(line: 788, column: 326, scope: !11830, inlinedAt: !11904)
!12141 = !DILocation(line: 788, column: 314, scope: !11830, inlinedAt: !11904)
!12142 = !DILocation(line: 788, column: 335, scope: !11830, inlinedAt: !11904)
!12143 = !DILocation(line: 788, column: 259, scope: !11830, inlinedAt: !11904)
!12144 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !11910)
!12145 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !11910)
!12146 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !11910)
!12147 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !11910)
!12148 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !11910)
!12149 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !11910)
!12150 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !11910)
!12151 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !11910)
!12152 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !11910)
!12153 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !11910)
!12154 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !11910)
!12155 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !11910)
!12156 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !11910)
!12157 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !11910)
!12158 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !11910)
!12159 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !11910)
!12160 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !11910)
!12161 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !11910)
!12162 = !DILocation(line: 788, column: 343, scope: !11830, inlinedAt: !11904)
!12163 = !DILocation(line: 788, column: 352, scope: !11830, inlinedAt: !11904)
!12164 = !DILocation(line: 788, column: 339, scope: !11830, inlinedAt: !11904)
!12165 = !DILocation(line: 788, column: 257, scope: !11830, inlinedAt: !11904)
!12166 = !DILocation(line: 788, column: 369, scope: !11830, inlinedAt: !11904)
!12167 = !DILocation(line: 788, column: 368, scope: !11830, inlinedAt: !11904)
!12168 = !DILocation(line: 788, column: 366, scope: !11830, inlinedAt: !11904)
!12169 = !DILocation(line: 788, column: 390, scope: !11830, inlinedAt: !11904)
!12170 = !DILocation(line: 788, column: 400, scope: !11830, inlinedAt: !11904)
!12171 = !DILocation(line: 788, column: 380, scope: !12172, inlinedAt: !11904)
!12172 = !DILexicalBlockFile(scope: !11830, file: !2895, discriminator: 19)
!12173 = !DILocation(line: 788, column: 411, scope: !11830, inlinedAt: !11904)
!12174 = !DILocation(line: 788, column: 409, scope: !11830, inlinedAt: !11904)
!12175 = !DILocation(line: 788, column: 378, scope: !11830, inlinedAt: !11904)
!12176 = !DILocation(line: 788, column: 430, scope: !11830, inlinedAt: !11904)
!12177 = !DILocation(line: 788, column: 424, scope: !11830, inlinedAt: !11904)
!12178 = !DILocation(line: 788, column: 422, scope: !11830, inlinedAt: !11904)
!12179 = !DILocation(line: 788, column: 451, scope: !11830, inlinedAt: !11904)
!12180 = !DILocation(line: 788, column: 445, scope: !11830, inlinedAt: !11904)
!12181 = !DILocation(line: 788, column: 443, scope: !11830, inlinedAt: !11904)
!12182 = !DILocation(line: 788, column: 466, scope: !11830, inlinedAt: !11904)
!12183 = !DILocation(line: 788, column: 476, scope: !11830, inlinedAt: !11904)
!12184 = !DILocation(line: 788, column: 480, scope: !11830, inlinedAt: !11904)
!12185 = !DILocation(line: 788, column: 483, scope: !12186, inlinedAt: !11904)
!12186 = !DILexicalBlockFile(scope: !11812, file: !2895, discriminator: 7)
!12187 = !DILocation(line: 788, column: 485, scope: !12186, inlinedAt: !11904)
!12188 = !DILocation(line: 788, column: 466, scope: !12186, inlinedAt: !11904)
!12189 = !DILocation(line: 788, column: 505, scope: !12190, inlinedAt: !11904)
!12190 = !DILexicalBlockFile(scope: !11811, file: !2895, discriminator: 8)
!12191 = !DILocation(line: 788, column: 523, scope: !12190, inlinedAt: !11904)
!12192 = !DILocation(line: 788, column: 535, scope: !12190, inlinedAt: !11904)
!12193 = !DILocation(line: 788, column: 532, scope: !12190, inlinedAt: !11904)
!12194 = !DILocation(line: 788, column: 520, scope: !12190, inlinedAt: !11904)
!12195 = !DILocation(line: 788, column: 504, scope: !12190, inlinedAt: !11904)
!12196 = !DILocation(line: 788, column: 548, scope: !12197, inlinedAt: !11904)
!12197 = !DILexicalBlockFile(scope: !11811, file: !2895, discriminator: 9)
!12198 = !DILocation(line: 788, column: 560, scope: !12197, inlinedAt: !11904)
!12199 = !DILocation(line: 788, column: 557, scope: !12197, inlinedAt: !11904)
!12200 = !DILocation(line: 788, column: 504, scope: !12197, inlinedAt: !11904)
!12201 = !DILocation(line: 788, column: 573, scope: !12202, inlinedAt: !11904)
!12202 = !DILexicalBlockFile(scope: !11811, file: !2895, discriminator: 10)
!12203 = !DILocation(line: 788, column: 504, scope: !12202, inlinedAt: !11904)
!12204 = !DILocation(line: 788, column: 504, scope: !11810, inlinedAt: !11904)
!12205 = !DILocation(line: 788, column: 501, scope: !11810, inlinedAt: !11904)
!12206 = !DILocation(line: 788, column: 645, scope: !11810, inlinedAt: !11904)
!12207 = !DILocation(line: 788, column: 649, scope: !11810, inlinedAt: !11904)
!12208 = !DILocation(line: 788, column: 659, scope: !11810, inlinedAt: !11904)
!12209 = !DILocation(line: 788, column: 668, scope: !11810, inlinedAt: !11904)
!12210 = !DILocation(line: 788, column: 656, scope: !11810, inlinedAt: !11904)
!12211 = !DILocation(line: 788, column: 677, scope: !11810, inlinedAt: !11904)
!12212 = !DILocation(line: 788, column: 601, scope: !11810, inlinedAt: !11904)
!12213 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !11903)
!12214 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !11903)
!12215 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !11903)
!12216 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !11903)
!12217 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !11903)
!12218 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !11903)
!12219 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !11903)
!12220 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !11903)
!12221 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !11903)
!12222 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !11903)
!12223 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !11903)
!12224 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !11903)
!12225 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !11903)
!12226 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !11903)
!12227 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !11903)
!12228 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !11903)
!12229 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !11903)
!12230 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !11903)
!12231 = !DILocation(line: 788, column: 685, scope: !11810, inlinedAt: !11904)
!12232 = !DILocation(line: 788, column: 694, scope: !11810, inlinedAt: !11904)
!12233 = !DILocation(line: 788, column: 681, scope: !11810, inlinedAt: !11904)
!12234 = !DILocation(line: 788, column: 599, scope: !11810, inlinedAt: !11904)
!12235 = !DILocation(line: 788, column: 711, scope: !11810, inlinedAt: !11904)
!12236 = !DILocation(line: 788, column: 710, scope: !11810, inlinedAt: !11904)
!12237 = !DILocation(line: 788, column: 708, scope: !11810, inlinedAt: !11904)
!12238 = !DILocation(line: 788, column: 732, scope: !11810, inlinedAt: !11904)
!12239 = !DILocation(line: 788, column: 742, scope: !11810, inlinedAt: !11904)
!12240 = !DILocation(line: 788, column: 722, scope: !12241, inlinedAt: !11904)
!12241 = !DILexicalBlockFile(scope: !11810, file: !2895, discriminator: 20)
!12242 = !DILocation(line: 788, column: 753, scope: !11810, inlinedAt: !11904)
!12243 = !DILocation(line: 788, column: 751, scope: !11810, inlinedAt: !11904)
!12244 = !DILocation(line: 788, column: 720, scope: !11810, inlinedAt: !11904)
!12245 = !DILocation(line: 788, column: 772, scope: !11810, inlinedAt: !11904)
!12246 = !DILocation(line: 788, column: 766, scope: !11810, inlinedAt: !11904)
!12247 = !DILocation(line: 788, column: 764, scope: !11810, inlinedAt: !11904)
!12248 = !DILocation(line: 788, column: 793, scope: !11810, inlinedAt: !11904)
!12249 = !DILocation(line: 788, column: 787, scope: !11810, inlinedAt: !11904)
!12250 = !DILocation(line: 788, column: 785, scope: !11810, inlinedAt: !11904)
!12251 = !DILocation(line: 788, column: 804, scope: !11810, inlinedAt: !11904)
!12252 = !DILocation(line: 788, column: 806, scope: !12253, inlinedAt: !11904)
!12253 = !DILexicalBlockFile(scope: !11813, file: !2895, discriminator: 12)
!12254 = !DILocation(line: 788, column: 827, scope: !12255, inlinedAt: !11904)
!12255 = !DILexicalBlockFile(scope: !12256, file: !2895, discriminator: 14)
!12256 = distinct !DILexicalBlock(scope: !11815, file: !2895, line: 788, column: 811)
!12257 = !DILocation(line: 788, column: 822, scope: !12255, inlinedAt: !11904)
!12258 = !DILocation(line: 788, column: 844, scope: !12255, inlinedAt: !11904)
!12259 = !DILocation(line: 788, column: 862, scope: !12255, inlinedAt: !11904)
!12260 = !DILocation(line: 788, column: 874, scope: !12255, inlinedAt: !11904)
!12261 = !DILocation(line: 788, column: 871, scope: !12255, inlinedAt: !11904)
!12262 = !DILocation(line: 788, column: 859, scope: !12255, inlinedAt: !11904)
!12263 = !DILocation(line: 788, column: 843, scope: !12255, inlinedAt: !11904)
!12264 = !DILocation(line: 788, column: 881, scope: !12265, inlinedAt: !11904)
!12265 = !DILexicalBlockFile(scope: !12256, file: !2895, discriminator: 15)
!12266 = !DILocation(line: 788, column: 893, scope: !12265, inlinedAt: !11904)
!12267 = !DILocation(line: 788, column: 890, scope: !12265, inlinedAt: !11904)
!12268 = !DILocation(line: 788, column: 843, scope: !12265, inlinedAt: !11904)
!12269 = !DILocation(line: 788, column: 900, scope: !12270, inlinedAt: !11904)
!12270 = !DILexicalBlockFile(scope: !12256, file: !2895, discriminator: 16)
!12271 = !DILocation(line: 788, column: 843, scope: !12270, inlinedAt: !11904)
!12272 = !DILocation(line: 788, column: 843, scope: !12273, inlinedAt: !11904)
!12273 = !DILexicalBlockFile(scope: !12256, file: !2895, discriminator: 17)
!12274 = !DILocation(line: 788, column: 840, scope: !12273, inlinedAt: !11904)
!12275 = !DILocation(line: 790, column: 18, scope: !11816, inlinedAt: !11904)
!12276 = !DILocation(line: 790, column: 6, scope: !11816, inlinedAt: !11904)
!12277 = !DILocation(line: 790, column: 10, scope: !11816, inlinedAt: !11904)
!12278 = !DILocation(line: 790, column: 16, scope: !11816, inlinedAt: !11904)
!12279 = !DILocation(line: 792, column: 12, scope: !11816, inlinedAt: !11904)
!12280 = !DILocation(line: 858, column: 119, scope: !11905)
!12281 = !DILocation(line: 858, column: 117, scope: !11905)
!12282 = !DILocation(line: 858, column: 87, scope: !11905)
!12283 = !DILocation(line: 858, column: 79, scope: !11905)
!12284 = !DILocation(line: 858, column: 48, scope: !11905)
!12285 = !DILocation(line: 858, column: 21, scope: !11905)
!12286 = !DILocation(line: 858, column: 41, scope: !11905)
!12287 = !DILocation(line: 858, column: 43, scope: !11905)
!12288 = !DILocation(line: 858, column: 30, scope: !11905)
!12289 = !DILocation(line: 858, column: 51, scope: !11905)
!12290 = !DILocation(line: 859, column: 52, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !11905, file: !1003, line: 859, column: 25)
!12292 = !DILocation(line: 859, column: 25, scope: !12291)
!12293 = !DILocation(line: 859, column: 45, scope: !12291)
!12294 = !DILocation(line: 859, column: 47, scope: !12291)
!12295 = !DILocation(line: 859, column: 34, scope: !12291)
!12296 = !DILocation(line: 859, column: 55, scope: !12291)
!12297 = !DILocation(line: 859, column: 25, scope: !11905)
!12298 = !DILocation(line: 860, column: 32, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12291, file: !1003, line: 859, column: 63)
!12300 = !DILocation(line: 860, column: 36, scope: !12299)
!12301 = !DILocation(line: 860, column: 104, scope: !12299)
!12302 = !DILocation(line: 860, column: 77, scope: !12299)
!12303 = !DILocation(line: 860, column: 97, scope: !12299)
!12304 = !DILocation(line: 860, column: 99, scope: !12299)
!12305 = !DILocation(line: 860, column: 86, scope: !12299)
!12306 = !DILocation(line: 860, column: 25, scope: !12299)
!12307 = !DILocation(line: 861, column: 25, scope: !12299)
!12308 = !DILocation(line: 863, column: 17, scope: !11905)
!12309 = !DILocation(line: 857, column: 71, scope: !12310)
!12310 = !DILexicalBlockFile(scope: !11906, file: !1003, discriminator: 2)
!12311 = !DILocation(line: 857, column: 17, scope: !12310)
!12312 = distinct !{!12312, !12313}
!12313 = !DILocation(line: 857, column: 17, scope: !11908)
!12314 = !DILocation(line: 864, column: 13, scope: !11908)
!12315 = !DILocation(line: 864, column: 45, scope: !12316)
!12316 = !DILexicalBlockFile(scope: !11862, file: !1003, discriminator: 1)
!12317 = !DILocation(line: 864, column: 47, scope: !12316)
!12318 = !DILocation(line: 864, column: 24, scope: !12316)
!12319 = !DILocation(line: 864, column: 33, scope: !12316)
!12320 = !DILocation(line: 865, column: 24, scope: !11885)
!12321 = !DILocation(line: 865, column: 22, scope: !11885)
!12322 = !DILocation(line: 865, column: 29, scope: !12323)
!12323 = !DILexicalBlockFile(scope: !11884, file: !1003, discriminator: 1)
!12324 = !DILocation(line: 865, column: 61, scope: !12323)
!12325 = !DILocation(line: 865, column: 63, scope: !12323)
!12326 = !DILocation(line: 865, column: 40, scope: !12323)
!12327 = !DILocation(line: 865, column: 49, scope: !12323)
!12328 = !DILocation(line: 865, column: 33, scope: !12323)
!12329 = !DILocation(line: 865, column: 38, scope: !12323)
!12330 = !DILocation(line: 865, column: 31, scope: !12323)
!12331 = !DILocation(line: 865, column: 17, scope: !12323)
!12332 = !DILocation(line: 866, column: 26, scope: !11883)
!12333 = !DILocation(line: 866, column: 30, scope: !11883)
!12334 = !DILocation(line: 866, column: 28, scope: !11883)
!12335 = !DILocation(line: 866, column: 35, scope: !11883)
!12336 = !DILocation(line: 866, column: 23, scope: !11883)
!12337 = !DILocation(line: 867, column: 76, scope: !11883)
!12338 = !DILocation(line: 867, column: 53, scope: !11883)
!12339 = !DILocation(line: 867, column: 73, scope: !11883)
!12340 = !DILocation(line: 867, column: 62, scope: !11883)
!12341 = !DILocation(line: 867, column: 81, scope: !11883)
!12342 = !DILocation(line: 867, column: 99, scope: !11883)
!12343 = !DILocation(line: 867, column: 103, scope: !11883)
!12344 = !DILocation(line: 867, column: 90, scope: !11883)
!12345 = !DILocation(line: 785, column: 30, scope: !11816, inlinedAt: !11882)
!12346 = !DILocation(line: 785, column: 34, scope: !11816, inlinedAt: !11882)
!12347 = !DILocation(line: 785, column: 118, scope: !11816, inlinedAt: !11882)
!12348 = !DILocation(line: 785, column: 122, scope: !11816, inlinedAt: !11882)
!12349 = !DILocation(line: 786, column: 60, scope: !11816, inlinedAt: !11882)
!12350 = !DILocation(line: 786, column: 64, scope: !11816, inlinedAt: !11882)
!12351 = !DILocation(line: 786, column: 74, scope: !11816, inlinedAt: !11882)
!12352 = !DILocation(line: 786, column: 83, scope: !11816, inlinedAt: !11882)
!12353 = !DILocation(line: 786, column: 71, scope: !11816, inlinedAt: !11882)
!12354 = !DILocation(line: 786, column: 92, scope: !11816, inlinedAt: !11882)
!12355 = !DILocation(line: 786, column: 16, scope: !11816, inlinedAt: !11882)
!12356 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !11890)
!12357 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !11890)
!12358 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !11890)
!12359 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !11890)
!12360 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !11890)
!12361 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !11890)
!12362 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !11890)
!12363 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !11890)
!12364 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !11890)
!12365 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !11890)
!12366 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !11890)
!12367 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !11890)
!12368 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !11890)
!12369 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !11890)
!12370 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !11890)
!12371 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !11890)
!12372 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !11890)
!12373 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !11890)
!12374 = !DILocation(line: 786, column: 100, scope: !11816, inlinedAt: !11882)
!12375 = !DILocation(line: 786, column: 109, scope: !11816, inlinedAt: !11882)
!12376 = !DILocation(line: 786, column: 96, scope: !11816, inlinedAt: !11882)
!12377 = !DILocation(line: 786, column: 14, scope: !11816, inlinedAt: !11882)
!12378 = !DILocation(line: 788, column: 64, scope: !12103, inlinedAt: !11882)
!12379 = !DILocation(line: 788, column: 74, scope: !12103, inlinedAt: !11882)
!12380 = !DILocation(line: 788, column: 54, scope: !12103, inlinedAt: !11882)
!12381 = !DILocation(line: 788, column: 52, scope: !12103, inlinedAt: !11882)
!12382 = !DILocation(line: 788, column: 94, scope: !12103, inlinedAt: !11882)
!12383 = !DILocation(line: 788, column: 88, scope: !12103, inlinedAt: !11882)
!12384 = !DILocation(line: 788, column: 86, scope: !12103, inlinedAt: !11882)
!12385 = !DILocation(line: 788, column: 115, scope: !12103, inlinedAt: !11882)
!12386 = !DILocation(line: 788, column: 109, scope: !12103, inlinedAt: !11882)
!12387 = !DILocation(line: 788, column: 107, scope: !12103, inlinedAt: !11882)
!12388 = !DILocation(line: 788, column: 130, scope: !12103, inlinedAt: !11882)
!12389 = !DILocation(line: 788, column: 140, scope: !12103, inlinedAt: !11882)
!12390 = !DILocation(line: 788, column: 144, scope: !12103, inlinedAt: !11882)
!12391 = !DILocation(line: 788, column: 147, scope: !12117, inlinedAt: !11882)
!12392 = !DILocation(line: 788, column: 149, scope: !12117, inlinedAt: !11882)
!12393 = !DILocation(line: 788, column: 130, scope: !12117, inlinedAt: !11882)
!12394 = !DILocation(line: 788, column: 169, scope: !12121, inlinedAt: !11882)
!12395 = !DILocation(line: 788, column: 187, scope: !12121, inlinedAt: !11882)
!12396 = !DILocation(line: 788, column: 199, scope: !12121, inlinedAt: !11882)
!12397 = !DILocation(line: 788, column: 196, scope: !12121, inlinedAt: !11882)
!12398 = !DILocation(line: 788, column: 184, scope: !12121, inlinedAt: !11882)
!12399 = !DILocation(line: 788, column: 168, scope: !12121, inlinedAt: !11882)
!12400 = !DILocation(line: 788, column: 209, scope: !12128, inlinedAt: !11882)
!12401 = !DILocation(line: 788, column: 221, scope: !12128, inlinedAt: !11882)
!12402 = !DILocation(line: 788, column: 218, scope: !12128, inlinedAt: !11882)
!12403 = !DILocation(line: 788, column: 168, scope: !12128, inlinedAt: !11882)
!12404 = !DILocation(line: 788, column: 231, scope: !12133, inlinedAt: !11882)
!12405 = !DILocation(line: 788, column: 168, scope: !12133, inlinedAt: !11882)
!12406 = !DILocation(line: 788, column: 168, scope: !11830, inlinedAt: !11882)
!12407 = !DILocation(line: 788, column: 165, scope: !11830, inlinedAt: !11882)
!12408 = !DILocation(line: 788, column: 303, scope: !11830, inlinedAt: !11882)
!12409 = !DILocation(line: 788, column: 307, scope: !11830, inlinedAt: !11882)
!12410 = !DILocation(line: 788, column: 317, scope: !11830, inlinedAt: !11882)
!12411 = !DILocation(line: 788, column: 326, scope: !11830, inlinedAt: !11882)
!12412 = !DILocation(line: 788, column: 314, scope: !11830, inlinedAt: !11882)
!12413 = !DILocation(line: 788, column: 335, scope: !11830, inlinedAt: !11882)
!12414 = !DILocation(line: 788, column: 259, scope: !11830, inlinedAt: !11882)
!12415 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !11888)
!12416 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !11888)
!12417 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !11888)
!12418 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !11888)
!12419 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !11888)
!12420 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !11888)
!12421 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !11888)
!12422 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !11888)
!12423 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !11888)
!12424 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !11888)
!12425 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !11888)
!12426 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !11888)
!12427 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !11888)
!12428 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !11888)
!12429 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !11888)
!12430 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !11888)
!12431 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !11888)
!12432 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !11888)
!12433 = !DILocation(line: 788, column: 343, scope: !11830, inlinedAt: !11882)
!12434 = !DILocation(line: 788, column: 352, scope: !11830, inlinedAt: !11882)
!12435 = !DILocation(line: 788, column: 339, scope: !11830, inlinedAt: !11882)
!12436 = !DILocation(line: 788, column: 257, scope: !11830, inlinedAt: !11882)
!12437 = !DILocation(line: 788, column: 369, scope: !11830, inlinedAt: !11882)
!12438 = !DILocation(line: 788, column: 368, scope: !11830, inlinedAt: !11882)
!12439 = !DILocation(line: 788, column: 366, scope: !11830, inlinedAt: !11882)
!12440 = !DILocation(line: 788, column: 390, scope: !11830, inlinedAt: !11882)
!12441 = !DILocation(line: 788, column: 400, scope: !11830, inlinedAt: !11882)
!12442 = !DILocation(line: 788, column: 380, scope: !12172, inlinedAt: !11882)
!12443 = !DILocation(line: 788, column: 411, scope: !11830, inlinedAt: !11882)
!12444 = !DILocation(line: 788, column: 409, scope: !11830, inlinedAt: !11882)
!12445 = !DILocation(line: 788, column: 378, scope: !11830, inlinedAt: !11882)
!12446 = !DILocation(line: 788, column: 430, scope: !11830, inlinedAt: !11882)
!12447 = !DILocation(line: 788, column: 424, scope: !11830, inlinedAt: !11882)
!12448 = !DILocation(line: 788, column: 422, scope: !11830, inlinedAt: !11882)
!12449 = !DILocation(line: 788, column: 451, scope: !11830, inlinedAt: !11882)
!12450 = !DILocation(line: 788, column: 445, scope: !11830, inlinedAt: !11882)
!12451 = !DILocation(line: 788, column: 443, scope: !11830, inlinedAt: !11882)
!12452 = !DILocation(line: 788, column: 466, scope: !11830, inlinedAt: !11882)
!12453 = !DILocation(line: 788, column: 476, scope: !11830, inlinedAt: !11882)
!12454 = !DILocation(line: 788, column: 480, scope: !11830, inlinedAt: !11882)
!12455 = !DILocation(line: 788, column: 483, scope: !12186, inlinedAt: !11882)
!12456 = !DILocation(line: 788, column: 485, scope: !12186, inlinedAt: !11882)
!12457 = !DILocation(line: 788, column: 466, scope: !12186, inlinedAt: !11882)
!12458 = !DILocation(line: 788, column: 505, scope: !12190, inlinedAt: !11882)
!12459 = !DILocation(line: 788, column: 523, scope: !12190, inlinedAt: !11882)
!12460 = !DILocation(line: 788, column: 535, scope: !12190, inlinedAt: !11882)
!12461 = !DILocation(line: 788, column: 532, scope: !12190, inlinedAt: !11882)
!12462 = !DILocation(line: 788, column: 520, scope: !12190, inlinedAt: !11882)
!12463 = !DILocation(line: 788, column: 504, scope: !12190, inlinedAt: !11882)
!12464 = !DILocation(line: 788, column: 548, scope: !12197, inlinedAt: !11882)
!12465 = !DILocation(line: 788, column: 560, scope: !12197, inlinedAt: !11882)
!12466 = !DILocation(line: 788, column: 557, scope: !12197, inlinedAt: !11882)
!12467 = !DILocation(line: 788, column: 504, scope: !12197, inlinedAt: !11882)
!12468 = !DILocation(line: 788, column: 573, scope: !12202, inlinedAt: !11882)
!12469 = !DILocation(line: 788, column: 504, scope: !12202, inlinedAt: !11882)
!12470 = !DILocation(line: 788, column: 504, scope: !11810, inlinedAt: !11882)
!12471 = !DILocation(line: 788, column: 501, scope: !11810, inlinedAt: !11882)
!12472 = !DILocation(line: 788, column: 645, scope: !11810, inlinedAt: !11882)
!12473 = !DILocation(line: 788, column: 649, scope: !11810, inlinedAt: !11882)
!12474 = !DILocation(line: 788, column: 659, scope: !11810, inlinedAt: !11882)
!12475 = !DILocation(line: 788, column: 668, scope: !11810, inlinedAt: !11882)
!12476 = !DILocation(line: 788, column: 656, scope: !11810, inlinedAt: !11882)
!12477 = !DILocation(line: 788, column: 677, scope: !11810, inlinedAt: !11882)
!12478 = !DILocation(line: 788, column: 601, scope: !11810, inlinedAt: !11882)
!12479 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !11881)
!12480 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !11881)
!12481 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !11881)
!12482 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !11881)
!12483 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !11881)
!12484 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !11881)
!12485 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !11881)
!12486 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !11881)
!12487 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !11881)
!12488 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !11881)
!12489 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !11881)
!12490 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !11881)
!12491 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !11881)
!12492 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !11881)
!12493 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !11881)
!12494 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !11881)
!12495 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !11881)
!12496 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !11881)
!12497 = !DILocation(line: 788, column: 685, scope: !11810, inlinedAt: !11882)
!12498 = !DILocation(line: 788, column: 694, scope: !11810, inlinedAt: !11882)
!12499 = !DILocation(line: 788, column: 681, scope: !11810, inlinedAt: !11882)
!12500 = !DILocation(line: 788, column: 599, scope: !11810, inlinedAt: !11882)
!12501 = !DILocation(line: 788, column: 711, scope: !11810, inlinedAt: !11882)
!12502 = !DILocation(line: 788, column: 710, scope: !11810, inlinedAt: !11882)
!12503 = !DILocation(line: 788, column: 708, scope: !11810, inlinedAt: !11882)
!12504 = !DILocation(line: 788, column: 732, scope: !11810, inlinedAt: !11882)
!12505 = !DILocation(line: 788, column: 742, scope: !11810, inlinedAt: !11882)
!12506 = !DILocation(line: 788, column: 722, scope: !12241, inlinedAt: !11882)
!12507 = !DILocation(line: 788, column: 753, scope: !11810, inlinedAt: !11882)
!12508 = !DILocation(line: 788, column: 751, scope: !11810, inlinedAt: !11882)
!12509 = !DILocation(line: 788, column: 720, scope: !11810, inlinedAt: !11882)
!12510 = !DILocation(line: 788, column: 772, scope: !11810, inlinedAt: !11882)
!12511 = !DILocation(line: 788, column: 766, scope: !11810, inlinedAt: !11882)
!12512 = !DILocation(line: 788, column: 764, scope: !11810, inlinedAt: !11882)
!12513 = !DILocation(line: 788, column: 793, scope: !11810, inlinedAt: !11882)
!12514 = !DILocation(line: 788, column: 787, scope: !11810, inlinedAt: !11882)
!12515 = !DILocation(line: 788, column: 785, scope: !11810, inlinedAt: !11882)
!12516 = !DILocation(line: 788, column: 804, scope: !11810, inlinedAt: !11882)
!12517 = !DILocation(line: 788, column: 806, scope: !12253, inlinedAt: !11882)
!12518 = !DILocation(line: 788, column: 827, scope: !12255, inlinedAt: !11882)
!12519 = !DILocation(line: 788, column: 822, scope: !12255, inlinedAt: !11882)
!12520 = !DILocation(line: 788, column: 844, scope: !12255, inlinedAt: !11882)
!12521 = !DILocation(line: 788, column: 862, scope: !12255, inlinedAt: !11882)
!12522 = !DILocation(line: 788, column: 874, scope: !12255, inlinedAt: !11882)
!12523 = !DILocation(line: 788, column: 871, scope: !12255, inlinedAt: !11882)
!12524 = !DILocation(line: 788, column: 859, scope: !12255, inlinedAt: !11882)
!12525 = !DILocation(line: 788, column: 843, scope: !12255, inlinedAt: !11882)
!12526 = !DILocation(line: 788, column: 881, scope: !12265, inlinedAt: !11882)
!12527 = !DILocation(line: 788, column: 893, scope: !12265, inlinedAt: !11882)
!12528 = !DILocation(line: 788, column: 890, scope: !12265, inlinedAt: !11882)
!12529 = !DILocation(line: 788, column: 843, scope: !12265, inlinedAt: !11882)
!12530 = !DILocation(line: 788, column: 900, scope: !12270, inlinedAt: !11882)
!12531 = !DILocation(line: 788, column: 843, scope: !12270, inlinedAt: !11882)
!12532 = !DILocation(line: 788, column: 843, scope: !12273, inlinedAt: !11882)
!12533 = !DILocation(line: 788, column: 840, scope: !12273, inlinedAt: !11882)
!12534 = !DILocation(line: 790, column: 18, scope: !11816, inlinedAt: !11882)
!12535 = !DILocation(line: 790, column: 6, scope: !11816, inlinedAt: !11882)
!12536 = !DILocation(line: 790, column: 10, scope: !11816, inlinedAt: !11882)
!12537 = !DILocation(line: 790, column: 16, scope: !11816, inlinedAt: !11882)
!12538 = !DILocation(line: 792, column: 12, scope: !11816, inlinedAt: !11882)
!12539 = !DILocation(line: 867, column: 119, scope: !11883)
!12540 = !DILocation(line: 867, column: 117, scope: !11883)
!12541 = !DILocation(line: 867, column: 87, scope: !11883)
!12542 = !DILocation(line: 867, column: 79, scope: !11883)
!12543 = !DILocation(line: 867, column: 48, scope: !11883)
!12544 = !DILocation(line: 867, column: 21, scope: !11883)
!12545 = !DILocation(line: 867, column: 41, scope: !11883)
!12546 = !DILocation(line: 867, column: 43, scope: !11883)
!12547 = !DILocation(line: 867, column: 30, scope: !11883)
!12548 = !DILocation(line: 867, column: 51, scope: !11883)
!12549 = !DILocation(line: 868, column: 52, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !11883, file: !1003, line: 868, column: 25)
!12551 = !DILocation(line: 868, column: 25, scope: !12550)
!12552 = !DILocation(line: 868, column: 45, scope: !12550)
!12553 = !DILocation(line: 868, column: 47, scope: !12550)
!12554 = !DILocation(line: 868, column: 34, scope: !12550)
!12555 = !DILocation(line: 868, column: 55, scope: !12550)
!12556 = !DILocation(line: 868, column: 25, scope: !11883)
!12557 = !DILocation(line: 869, column: 32, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12550, file: !1003, line: 868, column: 63)
!12559 = !DILocation(line: 869, column: 36, scope: !12558)
!12560 = !DILocation(line: 869, column: 104, scope: !12558)
!12561 = !DILocation(line: 869, column: 77, scope: !12558)
!12562 = !DILocation(line: 869, column: 97, scope: !12558)
!12563 = !DILocation(line: 869, column: 99, scope: !12558)
!12564 = !DILocation(line: 869, column: 86, scope: !12558)
!12565 = !DILocation(line: 869, column: 25, scope: !12558)
!12566 = !DILocation(line: 870, column: 25, scope: !12558)
!12567 = !DILocation(line: 872, column: 17, scope: !11883)
!12568 = !DILocation(line: 865, column: 71, scope: !12569)
!12569 = !DILexicalBlockFile(scope: !11884, file: !1003, discriminator: 2)
!12570 = !DILocation(line: 865, column: 17, scope: !12569)
!12571 = distinct !{!12571, !12572}
!12572 = !DILocation(line: 865, column: 17, scope: !11886)
!12573 = !DILocation(line: 873, column: 13, scope: !11886)
!12574 = !DILocation(line: 874, column: 24, scope: !11860)
!12575 = !DILocation(line: 874, column: 22, scope: !11860)
!12576 = !DILocation(line: 874, column: 29, scope: !12577)
!12577 = !DILexicalBlockFile(scope: !11859, file: !1003, discriminator: 1)
!12578 = !DILocation(line: 874, column: 61, scope: !12577)
!12579 = !DILocation(line: 874, column: 63, scope: !12577)
!12580 = !DILocation(line: 874, column: 40, scope: !12577)
!12581 = !DILocation(line: 874, column: 49, scope: !12577)
!12582 = !DILocation(line: 874, column: 33, scope: !12577)
!12583 = !DILocation(line: 874, column: 38, scope: !12577)
!12584 = !DILocation(line: 874, column: 31, scope: !12577)
!12585 = !DILocation(line: 874, column: 17, scope: !12577)
!12586 = !DILocation(line: 875, column: 25, scope: !11858)
!12587 = !DILocation(line: 875, column: 31, scope: !12588)
!12588 = !DILexicalBlockFile(scope: !11858, file: !1003, discriminator: 1)
!12589 = !DILocation(line: 875, column: 30, scope: !12588)
!12590 = !DILocation(line: 875, column: 35, scope: !12588)
!12591 = !DILocation(line: 875, column: 33, scope: !12588)
!12592 = !DILocation(line: 875, column: 25, scope: !12588)
!12593 = !DILocation(line: 875, column: 25, scope: !12594)
!12594 = !DILexicalBlockFile(scope: !11858, file: !1003, discriminator: 2)
!12595 = !DILocation(line: 875, column: 25, scope: !12596)
!12596 = !DILexicalBlockFile(scope: !11858, file: !1003, discriminator: 3)
!12597 = !DILocation(line: 875, column: 23, scope: !12596)
!12598 = !DILocation(line: 876, column: 76, scope: !11858)
!12599 = !DILocation(line: 876, column: 53, scope: !11858)
!12600 = !DILocation(line: 876, column: 73, scope: !11858)
!12601 = !DILocation(line: 876, column: 62, scope: !11858)
!12602 = !DILocation(line: 876, column: 81, scope: !11858)
!12603 = !DILocation(line: 876, column: 99, scope: !11858)
!12604 = !DILocation(line: 876, column: 103, scope: !11858)
!12605 = !DILocation(line: 876, column: 90, scope: !11858)
!12606 = !DILocation(line: 785, column: 30, scope: !11816, inlinedAt: !11857)
!12607 = !DILocation(line: 785, column: 34, scope: !11816, inlinedAt: !11857)
!12608 = !DILocation(line: 785, column: 118, scope: !11816, inlinedAt: !11857)
!12609 = !DILocation(line: 785, column: 122, scope: !11816, inlinedAt: !11857)
!12610 = !DILocation(line: 786, column: 60, scope: !11816, inlinedAt: !11857)
!12611 = !DILocation(line: 786, column: 64, scope: !11816, inlinedAt: !11857)
!12612 = !DILocation(line: 786, column: 74, scope: !11816, inlinedAt: !11857)
!12613 = !DILocation(line: 786, column: 83, scope: !11816, inlinedAt: !11857)
!12614 = !DILocation(line: 786, column: 71, scope: !11816, inlinedAt: !11857)
!12615 = !DILocation(line: 786, column: 92, scope: !11816, inlinedAt: !11857)
!12616 = !DILocation(line: 786, column: 16, scope: !11816, inlinedAt: !11857)
!12617 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !11868)
!12618 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !11868)
!12619 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !11868)
!12620 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !11868)
!12621 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !11868)
!12622 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !11868)
!12623 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !11868)
!12624 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !11868)
!12625 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !11868)
!12626 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !11868)
!12627 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !11868)
!12628 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !11868)
!12629 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !11868)
!12630 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !11868)
!12631 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !11868)
!12632 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !11868)
!12633 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !11868)
!12634 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !11868)
!12635 = !DILocation(line: 786, column: 100, scope: !11816, inlinedAt: !11857)
!12636 = !DILocation(line: 786, column: 109, scope: !11816, inlinedAt: !11857)
!12637 = !DILocation(line: 786, column: 96, scope: !11816, inlinedAt: !11857)
!12638 = !DILocation(line: 786, column: 14, scope: !11816, inlinedAt: !11857)
!12639 = !DILocation(line: 788, column: 64, scope: !12103, inlinedAt: !11857)
!12640 = !DILocation(line: 788, column: 74, scope: !12103, inlinedAt: !11857)
!12641 = !DILocation(line: 788, column: 54, scope: !12103, inlinedAt: !11857)
!12642 = !DILocation(line: 788, column: 52, scope: !12103, inlinedAt: !11857)
!12643 = !DILocation(line: 788, column: 94, scope: !12103, inlinedAt: !11857)
!12644 = !DILocation(line: 788, column: 88, scope: !12103, inlinedAt: !11857)
!12645 = !DILocation(line: 788, column: 86, scope: !12103, inlinedAt: !11857)
!12646 = !DILocation(line: 788, column: 115, scope: !12103, inlinedAt: !11857)
!12647 = !DILocation(line: 788, column: 109, scope: !12103, inlinedAt: !11857)
!12648 = !DILocation(line: 788, column: 107, scope: !12103, inlinedAt: !11857)
!12649 = !DILocation(line: 788, column: 130, scope: !12103, inlinedAt: !11857)
!12650 = !DILocation(line: 788, column: 140, scope: !12103, inlinedAt: !11857)
!12651 = !DILocation(line: 788, column: 144, scope: !12103, inlinedAt: !11857)
!12652 = !DILocation(line: 788, column: 147, scope: !12117, inlinedAt: !11857)
!12653 = !DILocation(line: 788, column: 149, scope: !12117, inlinedAt: !11857)
!12654 = !DILocation(line: 788, column: 130, scope: !12117, inlinedAt: !11857)
!12655 = !DILocation(line: 788, column: 169, scope: !12121, inlinedAt: !11857)
!12656 = !DILocation(line: 788, column: 187, scope: !12121, inlinedAt: !11857)
!12657 = !DILocation(line: 788, column: 199, scope: !12121, inlinedAt: !11857)
!12658 = !DILocation(line: 788, column: 196, scope: !12121, inlinedAt: !11857)
!12659 = !DILocation(line: 788, column: 184, scope: !12121, inlinedAt: !11857)
!12660 = !DILocation(line: 788, column: 168, scope: !12121, inlinedAt: !11857)
!12661 = !DILocation(line: 788, column: 209, scope: !12128, inlinedAt: !11857)
!12662 = !DILocation(line: 788, column: 221, scope: !12128, inlinedAt: !11857)
!12663 = !DILocation(line: 788, column: 218, scope: !12128, inlinedAt: !11857)
!12664 = !DILocation(line: 788, column: 168, scope: !12128, inlinedAt: !11857)
!12665 = !DILocation(line: 788, column: 231, scope: !12133, inlinedAt: !11857)
!12666 = !DILocation(line: 788, column: 168, scope: !12133, inlinedAt: !11857)
!12667 = !DILocation(line: 788, column: 168, scope: !11830, inlinedAt: !11857)
!12668 = !DILocation(line: 788, column: 165, scope: !11830, inlinedAt: !11857)
!12669 = !DILocation(line: 788, column: 303, scope: !11830, inlinedAt: !11857)
!12670 = !DILocation(line: 788, column: 307, scope: !11830, inlinedAt: !11857)
!12671 = !DILocation(line: 788, column: 317, scope: !11830, inlinedAt: !11857)
!12672 = !DILocation(line: 788, column: 326, scope: !11830, inlinedAt: !11857)
!12673 = !DILocation(line: 788, column: 314, scope: !11830, inlinedAt: !11857)
!12674 = !DILocation(line: 788, column: 335, scope: !11830, inlinedAt: !11857)
!12675 = !DILocation(line: 788, column: 259, scope: !11830, inlinedAt: !11857)
!12676 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !11866)
!12677 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !11866)
!12678 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !11866)
!12679 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !11866)
!12680 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !11866)
!12681 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !11866)
!12682 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !11866)
!12683 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !11866)
!12684 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !11866)
!12685 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !11866)
!12686 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !11866)
!12687 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !11866)
!12688 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !11866)
!12689 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !11866)
!12690 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !11866)
!12691 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !11866)
!12692 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !11866)
!12693 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !11866)
!12694 = !DILocation(line: 788, column: 343, scope: !11830, inlinedAt: !11857)
!12695 = !DILocation(line: 788, column: 352, scope: !11830, inlinedAt: !11857)
!12696 = !DILocation(line: 788, column: 339, scope: !11830, inlinedAt: !11857)
!12697 = !DILocation(line: 788, column: 257, scope: !11830, inlinedAt: !11857)
!12698 = !DILocation(line: 788, column: 369, scope: !11830, inlinedAt: !11857)
!12699 = !DILocation(line: 788, column: 368, scope: !11830, inlinedAt: !11857)
!12700 = !DILocation(line: 788, column: 366, scope: !11830, inlinedAt: !11857)
!12701 = !DILocation(line: 788, column: 390, scope: !11830, inlinedAt: !11857)
!12702 = !DILocation(line: 788, column: 400, scope: !11830, inlinedAt: !11857)
!12703 = !DILocation(line: 788, column: 380, scope: !12172, inlinedAt: !11857)
!12704 = !DILocation(line: 788, column: 411, scope: !11830, inlinedAt: !11857)
!12705 = !DILocation(line: 788, column: 409, scope: !11830, inlinedAt: !11857)
!12706 = !DILocation(line: 788, column: 378, scope: !11830, inlinedAt: !11857)
!12707 = !DILocation(line: 788, column: 430, scope: !11830, inlinedAt: !11857)
!12708 = !DILocation(line: 788, column: 424, scope: !11830, inlinedAt: !11857)
!12709 = !DILocation(line: 788, column: 422, scope: !11830, inlinedAt: !11857)
!12710 = !DILocation(line: 788, column: 451, scope: !11830, inlinedAt: !11857)
!12711 = !DILocation(line: 788, column: 445, scope: !11830, inlinedAt: !11857)
!12712 = !DILocation(line: 788, column: 443, scope: !11830, inlinedAt: !11857)
!12713 = !DILocation(line: 788, column: 466, scope: !11830, inlinedAt: !11857)
!12714 = !DILocation(line: 788, column: 476, scope: !11830, inlinedAt: !11857)
!12715 = !DILocation(line: 788, column: 480, scope: !11830, inlinedAt: !11857)
!12716 = !DILocation(line: 788, column: 483, scope: !12186, inlinedAt: !11857)
!12717 = !DILocation(line: 788, column: 485, scope: !12186, inlinedAt: !11857)
!12718 = !DILocation(line: 788, column: 466, scope: !12186, inlinedAt: !11857)
!12719 = !DILocation(line: 788, column: 505, scope: !12190, inlinedAt: !11857)
!12720 = !DILocation(line: 788, column: 523, scope: !12190, inlinedAt: !11857)
!12721 = !DILocation(line: 788, column: 535, scope: !12190, inlinedAt: !11857)
!12722 = !DILocation(line: 788, column: 532, scope: !12190, inlinedAt: !11857)
!12723 = !DILocation(line: 788, column: 520, scope: !12190, inlinedAt: !11857)
!12724 = !DILocation(line: 788, column: 504, scope: !12190, inlinedAt: !11857)
!12725 = !DILocation(line: 788, column: 548, scope: !12197, inlinedAt: !11857)
!12726 = !DILocation(line: 788, column: 560, scope: !12197, inlinedAt: !11857)
!12727 = !DILocation(line: 788, column: 557, scope: !12197, inlinedAt: !11857)
!12728 = !DILocation(line: 788, column: 504, scope: !12197, inlinedAt: !11857)
!12729 = !DILocation(line: 788, column: 573, scope: !12202, inlinedAt: !11857)
!12730 = !DILocation(line: 788, column: 504, scope: !12202, inlinedAt: !11857)
!12731 = !DILocation(line: 788, column: 504, scope: !11810, inlinedAt: !11857)
!12732 = !DILocation(line: 788, column: 501, scope: !11810, inlinedAt: !11857)
!12733 = !DILocation(line: 788, column: 645, scope: !11810, inlinedAt: !11857)
!12734 = !DILocation(line: 788, column: 649, scope: !11810, inlinedAt: !11857)
!12735 = !DILocation(line: 788, column: 659, scope: !11810, inlinedAt: !11857)
!12736 = !DILocation(line: 788, column: 668, scope: !11810, inlinedAt: !11857)
!12737 = !DILocation(line: 788, column: 656, scope: !11810, inlinedAt: !11857)
!12738 = !DILocation(line: 788, column: 677, scope: !11810, inlinedAt: !11857)
!12739 = !DILocation(line: 788, column: 601, scope: !11810, inlinedAt: !11857)
!12740 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !11856)
!12741 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !11856)
!12742 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !11856)
!12743 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !11856)
!12744 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !11856)
!12745 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !11856)
!12746 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !11856)
!12747 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !11856)
!12748 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !11856)
!12749 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !11856)
!12750 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !11856)
!12751 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !11856)
!12752 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !11856)
!12753 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !11856)
!12754 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !11856)
!12755 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !11856)
!12756 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !11856)
!12757 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !11856)
!12758 = !DILocation(line: 788, column: 685, scope: !11810, inlinedAt: !11857)
!12759 = !DILocation(line: 788, column: 694, scope: !11810, inlinedAt: !11857)
!12760 = !DILocation(line: 788, column: 681, scope: !11810, inlinedAt: !11857)
!12761 = !DILocation(line: 788, column: 599, scope: !11810, inlinedAt: !11857)
!12762 = !DILocation(line: 788, column: 711, scope: !11810, inlinedAt: !11857)
!12763 = !DILocation(line: 788, column: 710, scope: !11810, inlinedAt: !11857)
!12764 = !DILocation(line: 788, column: 708, scope: !11810, inlinedAt: !11857)
!12765 = !DILocation(line: 788, column: 732, scope: !11810, inlinedAt: !11857)
!12766 = !DILocation(line: 788, column: 742, scope: !11810, inlinedAt: !11857)
!12767 = !DILocation(line: 788, column: 722, scope: !12241, inlinedAt: !11857)
!12768 = !DILocation(line: 788, column: 753, scope: !11810, inlinedAt: !11857)
!12769 = !DILocation(line: 788, column: 751, scope: !11810, inlinedAt: !11857)
!12770 = !DILocation(line: 788, column: 720, scope: !11810, inlinedAt: !11857)
!12771 = !DILocation(line: 788, column: 772, scope: !11810, inlinedAt: !11857)
!12772 = !DILocation(line: 788, column: 766, scope: !11810, inlinedAt: !11857)
!12773 = !DILocation(line: 788, column: 764, scope: !11810, inlinedAt: !11857)
!12774 = !DILocation(line: 788, column: 793, scope: !11810, inlinedAt: !11857)
!12775 = !DILocation(line: 788, column: 787, scope: !11810, inlinedAt: !11857)
!12776 = !DILocation(line: 788, column: 785, scope: !11810, inlinedAt: !11857)
!12777 = !DILocation(line: 788, column: 804, scope: !11810, inlinedAt: !11857)
!12778 = !DILocation(line: 788, column: 806, scope: !12253, inlinedAt: !11857)
!12779 = !DILocation(line: 788, column: 827, scope: !12255, inlinedAt: !11857)
!12780 = !DILocation(line: 788, column: 822, scope: !12255, inlinedAt: !11857)
!12781 = !DILocation(line: 788, column: 844, scope: !12255, inlinedAt: !11857)
!12782 = !DILocation(line: 788, column: 862, scope: !12255, inlinedAt: !11857)
!12783 = !DILocation(line: 788, column: 874, scope: !12255, inlinedAt: !11857)
!12784 = !DILocation(line: 788, column: 871, scope: !12255, inlinedAt: !11857)
!12785 = !DILocation(line: 788, column: 859, scope: !12255, inlinedAt: !11857)
!12786 = !DILocation(line: 788, column: 843, scope: !12255, inlinedAt: !11857)
!12787 = !DILocation(line: 788, column: 881, scope: !12265, inlinedAt: !11857)
!12788 = !DILocation(line: 788, column: 893, scope: !12265, inlinedAt: !11857)
!12789 = !DILocation(line: 788, column: 890, scope: !12265, inlinedAt: !11857)
!12790 = !DILocation(line: 788, column: 843, scope: !12265, inlinedAt: !11857)
!12791 = !DILocation(line: 788, column: 900, scope: !12270, inlinedAt: !11857)
!12792 = !DILocation(line: 788, column: 843, scope: !12270, inlinedAt: !11857)
!12793 = !DILocation(line: 788, column: 843, scope: !12273, inlinedAt: !11857)
!12794 = !DILocation(line: 788, column: 840, scope: !12273, inlinedAt: !11857)
!12795 = !DILocation(line: 790, column: 18, scope: !11816, inlinedAt: !11857)
!12796 = !DILocation(line: 790, column: 6, scope: !11816, inlinedAt: !11857)
!12797 = !DILocation(line: 790, column: 10, scope: !11816, inlinedAt: !11857)
!12798 = !DILocation(line: 790, column: 16, scope: !11816, inlinedAt: !11857)
!12799 = !DILocation(line: 792, column: 12, scope: !11816, inlinedAt: !11857)
!12800 = !DILocation(line: 876, column: 119, scope: !11858)
!12801 = !DILocation(line: 876, column: 117, scope: !11858)
!12802 = !DILocation(line: 876, column: 87, scope: !11858)
!12803 = !DILocation(line: 876, column: 79, scope: !11858)
!12804 = !DILocation(line: 876, column: 48, scope: !11858)
!12805 = !DILocation(line: 876, column: 21, scope: !11858)
!12806 = !DILocation(line: 876, column: 41, scope: !11858)
!12807 = !DILocation(line: 876, column: 43, scope: !11858)
!12808 = !DILocation(line: 876, column: 30, scope: !11858)
!12809 = !DILocation(line: 876, column: 51, scope: !11858)
!12810 = !DILocation(line: 877, column: 52, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !11858, file: !1003, line: 877, column: 25)
!12812 = !DILocation(line: 877, column: 25, scope: !12811)
!12813 = !DILocation(line: 877, column: 45, scope: !12811)
!12814 = !DILocation(line: 877, column: 47, scope: !12811)
!12815 = !DILocation(line: 877, column: 34, scope: !12811)
!12816 = !DILocation(line: 877, column: 55, scope: !12811)
!12817 = !DILocation(line: 877, column: 25, scope: !11858)
!12818 = !DILocation(line: 878, column: 32, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12811, file: !1003, line: 877, column: 63)
!12820 = !DILocation(line: 878, column: 36, scope: !12819)
!12821 = !DILocation(line: 878, column: 104, scope: !12819)
!12822 = !DILocation(line: 878, column: 77, scope: !12819)
!12823 = !DILocation(line: 878, column: 97, scope: !12819)
!12824 = !DILocation(line: 878, column: 99, scope: !12819)
!12825 = !DILocation(line: 878, column: 86, scope: !12819)
!12826 = !DILocation(line: 878, column: 25, scope: !12819)
!12827 = !DILocation(line: 879, column: 25, scope: !12819)
!12828 = !DILocation(line: 881, column: 17, scope: !11858)
!12829 = !DILocation(line: 874, column: 71, scope: !12830)
!12830 = !DILexicalBlockFile(scope: !11859, file: !1003, discriminator: 2)
!12831 = !DILocation(line: 874, column: 17, scope: !12830)
!12832 = distinct !{!12832, !12833}
!12833 = !DILocation(line: 874, column: 17, scope: !11861)
!12834 = !DILocation(line: 883, column: 9, scope: !11864)
!12835 = !DILocation(line: 884, column: 45, scope: !11823)
!12836 = !DILocation(line: 884, column: 62, scope: !11823)
!12837 = !DILocation(line: 884, column: 66, scope: !11823)
!12838 = !DILocation(line: 884, column: 53, scope: !11823)
!12839 = !DILocation(line: 884, column: 51, scope: !11823)
!12840 = !DILocation(line: 884, column: 33, scope: !11823)
!12841 = !DILocation(line: 884, column: 35, scope: !11823)
!12842 = !DILocation(line: 884, column: 13, scope: !11823)
!12843 = !DILocation(line: 884, column: 22, scope: !11823)
!12844 = !DILocation(line: 884, column: 43, scope: !11823)
!12845 = !DILocation(line: 885, column: 20, scope: !11822)
!12846 = !DILocation(line: 885, column: 18, scope: !11822)
!12847 = !DILocation(line: 885, column: 25, scope: !12848)
!12848 = !DILexicalBlockFile(scope: !11821, file: !1003, discriminator: 1)
!12849 = !DILocation(line: 885, column: 57, scope: !12848)
!12850 = !DILocation(line: 885, column: 59, scope: !12848)
!12851 = !DILocation(line: 885, column: 36, scope: !12848)
!12852 = !DILocation(line: 885, column: 45, scope: !12848)
!12853 = !DILocation(line: 885, column: 29, scope: !12848)
!12854 = !DILocation(line: 885, column: 34, scope: !12848)
!12855 = !DILocation(line: 885, column: 27, scope: !12848)
!12856 = !DILocation(line: 885, column: 13, scope: !12848)
!12857 = !DILocation(line: 886, column: 76, scope: !11820)
!12858 = !DILocation(line: 886, column: 78, scope: !11820)
!12859 = !DILocation(line: 886, column: 49, scope: !11820)
!12860 = !DILocation(line: 886, column: 69, scope: !11820)
!12861 = !DILocation(line: 886, column: 71, scope: !11820)
!12862 = !DILocation(line: 886, column: 58, scope: !11820)
!12863 = !DILocation(line: 886, column: 85, scope: !11820)
!12864 = !DILocation(line: 886, column: 103, scope: !11820)
!12865 = !DILocation(line: 886, column: 107, scope: !11820)
!12866 = !DILocation(line: 886, column: 94, scope: !11820)
!12867 = !DILocation(line: 785, column: 30, scope: !11816, inlinedAt: !11819)
!12868 = !DILocation(line: 785, column: 34, scope: !11816, inlinedAt: !11819)
!12869 = !DILocation(line: 785, column: 118, scope: !11816, inlinedAt: !11819)
!12870 = !DILocation(line: 785, column: 122, scope: !11816, inlinedAt: !11819)
!12871 = !DILocation(line: 786, column: 60, scope: !11816, inlinedAt: !11819)
!12872 = !DILocation(line: 786, column: 64, scope: !11816, inlinedAt: !11819)
!12873 = !DILocation(line: 786, column: 74, scope: !11816, inlinedAt: !11819)
!12874 = !DILocation(line: 786, column: 83, scope: !11816, inlinedAt: !11819)
!12875 = !DILocation(line: 786, column: 71, scope: !11816, inlinedAt: !11819)
!12876 = !DILocation(line: 786, column: 92, scope: !11816, inlinedAt: !11819)
!12877 = !DILocation(line: 786, column: 16, scope: !11816, inlinedAt: !11819)
!12878 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !11832)
!12879 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !11832)
!12880 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !11832)
!12881 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !11832)
!12882 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !11832)
!12883 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !11832)
!12884 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !11832)
!12885 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !11832)
!12886 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !11832)
!12887 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !11832)
!12888 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !11832)
!12889 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !11832)
!12890 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !11832)
!12891 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !11832)
!12892 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !11832)
!12893 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !11832)
!12894 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !11832)
!12895 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !11832)
!12896 = !DILocation(line: 786, column: 100, scope: !11816, inlinedAt: !11819)
!12897 = !DILocation(line: 786, column: 109, scope: !11816, inlinedAt: !11819)
!12898 = !DILocation(line: 786, column: 96, scope: !11816, inlinedAt: !11819)
!12899 = !DILocation(line: 786, column: 14, scope: !11816, inlinedAt: !11819)
!12900 = !DILocation(line: 788, column: 64, scope: !12103, inlinedAt: !11819)
!12901 = !DILocation(line: 788, column: 74, scope: !12103, inlinedAt: !11819)
!12902 = !DILocation(line: 788, column: 54, scope: !12103, inlinedAt: !11819)
!12903 = !DILocation(line: 788, column: 52, scope: !12103, inlinedAt: !11819)
!12904 = !DILocation(line: 788, column: 94, scope: !12103, inlinedAt: !11819)
!12905 = !DILocation(line: 788, column: 88, scope: !12103, inlinedAt: !11819)
!12906 = !DILocation(line: 788, column: 86, scope: !12103, inlinedAt: !11819)
!12907 = !DILocation(line: 788, column: 115, scope: !12103, inlinedAt: !11819)
!12908 = !DILocation(line: 788, column: 109, scope: !12103, inlinedAt: !11819)
!12909 = !DILocation(line: 788, column: 107, scope: !12103, inlinedAt: !11819)
!12910 = !DILocation(line: 788, column: 130, scope: !12103, inlinedAt: !11819)
!12911 = !DILocation(line: 788, column: 140, scope: !12103, inlinedAt: !11819)
!12912 = !DILocation(line: 788, column: 144, scope: !12103, inlinedAt: !11819)
!12913 = !DILocation(line: 788, column: 147, scope: !12117, inlinedAt: !11819)
!12914 = !DILocation(line: 788, column: 149, scope: !12117, inlinedAt: !11819)
!12915 = !DILocation(line: 788, column: 130, scope: !12117, inlinedAt: !11819)
!12916 = !DILocation(line: 788, column: 169, scope: !12121, inlinedAt: !11819)
!12917 = !DILocation(line: 788, column: 187, scope: !12121, inlinedAt: !11819)
!12918 = !DILocation(line: 788, column: 199, scope: !12121, inlinedAt: !11819)
!12919 = !DILocation(line: 788, column: 196, scope: !12121, inlinedAt: !11819)
!12920 = !DILocation(line: 788, column: 184, scope: !12121, inlinedAt: !11819)
!12921 = !DILocation(line: 788, column: 168, scope: !12121, inlinedAt: !11819)
!12922 = !DILocation(line: 788, column: 209, scope: !12128, inlinedAt: !11819)
!12923 = !DILocation(line: 788, column: 221, scope: !12128, inlinedAt: !11819)
!12924 = !DILocation(line: 788, column: 218, scope: !12128, inlinedAt: !11819)
!12925 = !DILocation(line: 788, column: 168, scope: !12128, inlinedAt: !11819)
!12926 = !DILocation(line: 788, column: 231, scope: !12133, inlinedAt: !11819)
!12927 = !DILocation(line: 788, column: 168, scope: !12133, inlinedAt: !11819)
!12928 = !DILocation(line: 788, column: 168, scope: !11830, inlinedAt: !11819)
!12929 = !DILocation(line: 788, column: 165, scope: !11830, inlinedAt: !11819)
!12930 = !DILocation(line: 788, column: 303, scope: !11830, inlinedAt: !11819)
!12931 = !DILocation(line: 788, column: 307, scope: !11830, inlinedAt: !11819)
!12932 = !DILocation(line: 788, column: 317, scope: !11830, inlinedAt: !11819)
!12933 = !DILocation(line: 788, column: 326, scope: !11830, inlinedAt: !11819)
!12934 = !DILocation(line: 788, column: 314, scope: !11830, inlinedAt: !11819)
!12935 = !DILocation(line: 788, column: 335, scope: !11830, inlinedAt: !11819)
!12936 = !DILocation(line: 788, column: 259, scope: !11830, inlinedAt: !11819)
!12937 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !11829)
!12938 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !11829)
!12939 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !11829)
!12940 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !11829)
!12941 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !11829)
!12942 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !11829)
!12943 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !11829)
!12944 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !11829)
!12945 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !11829)
!12946 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !11829)
!12947 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !11829)
!12948 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !11829)
!12949 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !11829)
!12950 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !11829)
!12951 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !11829)
!12952 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !11829)
!12953 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !11829)
!12954 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !11829)
!12955 = !DILocation(line: 788, column: 343, scope: !11830, inlinedAt: !11819)
!12956 = !DILocation(line: 788, column: 352, scope: !11830, inlinedAt: !11819)
!12957 = !DILocation(line: 788, column: 339, scope: !11830, inlinedAt: !11819)
!12958 = !DILocation(line: 788, column: 257, scope: !11830, inlinedAt: !11819)
!12959 = !DILocation(line: 788, column: 369, scope: !11830, inlinedAt: !11819)
!12960 = !DILocation(line: 788, column: 368, scope: !11830, inlinedAt: !11819)
!12961 = !DILocation(line: 788, column: 366, scope: !11830, inlinedAt: !11819)
!12962 = !DILocation(line: 788, column: 390, scope: !11830, inlinedAt: !11819)
!12963 = !DILocation(line: 788, column: 400, scope: !11830, inlinedAt: !11819)
!12964 = !DILocation(line: 788, column: 380, scope: !12172, inlinedAt: !11819)
!12965 = !DILocation(line: 788, column: 411, scope: !11830, inlinedAt: !11819)
!12966 = !DILocation(line: 788, column: 409, scope: !11830, inlinedAt: !11819)
!12967 = !DILocation(line: 788, column: 378, scope: !11830, inlinedAt: !11819)
!12968 = !DILocation(line: 788, column: 430, scope: !11830, inlinedAt: !11819)
!12969 = !DILocation(line: 788, column: 424, scope: !11830, inlinedAt: !11819)
!12970 = !DILocation(line: 788, column: 422, scope: !11830, inlinedAt: !11819)
!12971 = !DILocation(line: 788, column: 451, scope: !11830, inlinedAt: !11819)
!12972 = !DILocation(line: 788, column: 445, scope: !11830, inlinedAt: !11819)
!12973 = !DILocation(line: 788, column: 443, scope: !11830, inlinedAt: !11819)
!12974 = !DILocation(line: 788, column: 466, scope: !11830, inlinedAt: !11819)
!12975 = !DILocation(line: 788, column: 476, scope: !11830, inlinedAt: !11819)
!12976 = !DILocation(line: 788, column: 480, scope: !11830, inlinedAt: !11819)
!12977 = !DILocation(line: 788, column: 483, scope: !12186, inlinedAt: !11819)
!12978 = !DILocation(line: 788, column: 485, scope: !12186, inlinedAt: !11819)
!12979 = !DILocation(line: 788, column: 466, scope: !12186, inlinedAt: !11819)
!12980 = !DILocation(line: 788, column: 505, scope: !12190, inlinedAt: !11819)
!12981 = !DILocation(line: 788, column: 523, scope: !12190, inlinedAt: !11819)
!12982 = !DILocation(line: 788, column: 535, scope: !12190, inlinedAt: !11819)
!12983 = !DILocation(line: 788, column: 532, scope: !12190, inlinedAt: !11819)
!12984 = !DILocation(line: 788, column: 520, scope: !12190, inlinedAt: !11819)
!12985 = !DILocation(line: 788, column: 504, scope: !12190, inlinedAt: !11819)
!12986 = !DILocation(line: 788, column: 548, scope: !12197, inlinedAt: !11819)
!12987 = !DILocation(line: 788, column: 560, scope: !12197, inlinedAt: !11819)
!12988 = !DILocation(line: 788, column: 557, scope: !12197, inlinedAt: !11819)
!12989 = !DILocation(line: 788, column: 504, scope: !12197, inlinedAt: !11819)
!12990 = !DILocation(line: 788, column: 573, scope: !12202, inlinedAt: !11819)
!12991 = !DILocation(line: 788, column: 504, scope: !12202, inlinedAt: !11819)
!12992 = !DILocation(line: 788, column: 504, scope: !11810, inlinedAt: !11819)
!12993 = !DILocation(line: 788, column: 501, scope: !11810, inlinedAt: !11819)
!12994 = !DILocation(line: 788, column: 645, scope: !11810, inlinedAt: !11819)
!12995 = !DILocation(line: 788, column: 649, scope: !11810, inlinedAt: !11819)
!12996 = !DILocation(line: 788, column: 659, scope: !11810, inlinedAt: !11819)
!12997 = !DILocation(line: 788, column: 668, scope: !11810, inlinedAt: !11819)
!12998 = !DILocation(line: 788, column: 656, scope: !11810, inlinedAt: !11819)
!12999 = !DILocation(line: 788, column: 677, scope: !11810, inlinedAt: !11819)
!13000 = !DILocation(line: 788, column: 601, scope: !11810, inlinedAt: !11819)
!13001 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !11809)
!13002 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !11809)
!13003 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !11809)
!13004 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !11809)
!13005 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !11809)
!13006 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !11809)
!13007 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !11809)
!13008 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !11809)
!13009 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !11809)
!13010 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !11809)
!13011 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !11809)
!13012 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !11809)
!13013 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !11809)
!13014 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !11809)
!13015 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !11809)
!13016 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !11809)
!13017 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !11809)
!13018 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !11809)
!13019 = !DILocation(line: 788, column: 685, scope: !11810, inlinedAt: !11819)
!13020 = !DILocation(line: 788, column: 694, scope: !11810, inlinedAt: !11819)
!13021 = !DILocation(line: 788, column: 681, scope: !11810, inlinedAt: !11819)
!13022 = !DILocation(line: 788, column: 599, scope: !11810, inlinedAt: !11819)
!13023 = !DILocation(line: 788, column: 711, scope: !11810, inlinedAt: !11819)
!13024 = !DILocation(line: 788, column: 710, scope: !11810, inlinedAt: !11819)
!13025 = !DILocation(line: 788, column: 708, scope: !11810, inlinedAt: !11819)
!13026 = !DILocation(line: 788, column: 732, scope: !11810, inlinedAt: !11819)
!13027 = !DILocation(line: 788, column: 742, scope: !11810, inlinedAt: !11819)
!13028 = !DILocation(line: 788, column: 722, scope: !12241, inlinedAt: !11819)
!13029 = !DILocation(line: 788, column: 753, scope: !11810, inlinedAt: !11819)
!13030 = !DILocation(line: 788, column: 751, scope: !11810, inlinedAt: !11819)
!13031 = !DILocation(line: 788, column: 720, scope: !11810, inlinedAt: !11819)
!13032 = !DILocation(line: 788, column: 772, scope: !11810, inlinedAt: !11819)
!13033 = !DILocation(line: 788, column: 766, scope: !11810, inlinedAt: !11819)
!13034 = !DILocation(line: 788, column: 764, scope: !11810, inlinedAt: !11819)
!13035 = !DILocation(line: 788, column: 793, scope: !11810, inlinedAt: !11819)
!13036 = !DILocation(line: 788, column: 787, scope: !11810, inlinedAt: !11819)
!13037 = !DILocation(line: 788, column: 785, scope: !11810, inlinedAt: !11819)
!13038 = !DILocation(line: 788, column: 804, scope: !11810, inlinedAt: !11819)
!13039 = !DILocation(line: 788, column: 806, scope: !12253, inlinedAt: !11819)
!13040 = !DILocation(line: 788, column: 827, scope: !12255, inlinedAt: !11819)
!13041 = !DILocation(line: 788, column: 822, scope: !12255, inlinedAt: !11819)
!13042 = !DILocation(line: 788, column: 844, scope: !12255, inlinedAt: !11819)
!13043 = !DILocation(line: 788, column: 862, scope: !12255, inlinedAt: !11819)
!13044 = !DILocation(line: 788, column: 874, scope: !12255, inlinedAt: !11819)
!13045 = !DILocation(line: 788, column: 871, scope: !12255, inlinedAt: !11819)
!13046 = !DILocation(line: 788, column: 859, scope: !12255, inlinedAt: !11819)
!13047 = !DILocation(line: 788, column: 843, scope: !12255, inlinedAt: !11819)
!13048 = !DILocation(line: 788, column: 881, scope: !12265, inlinedAt: !11819)
!13049 = !DILocation(line: 788, column: 893, scope: !12265, inlinedAt: !11819)
!13050 = !DILocation(line: 788, column: 890, scope: !12265, inlinedAt: !11819)
!13051 = !DILocation(line: 788, column: 843, scope: !12265, inlinedAt: !11819)
!13052 = !DILocation(line: 788, column: 900, scope: !12270, inlinedAt: !11819)
!13053 = !DILocation(line: 788, column: 843, scope: !12270, inlinedAt: !11819)
!13054 = !DILocation(line: 788, column: 843, scope: !12273, inlinedAt: !11819)
!13055 = !DILocation(line: 788, column: 840, scope: !12273, inlinedAt: !11819)
!13056 = !DILocation(line: 790, column: 18, scope: !11816, inlinedAt: !11819)
!13057 = !DILocation(line: 790, column: 6, scope: !11816, inlinedAt: !11819)
!13058 = !DILocation(line: 790, column: 10, scope: !11816, inlinedAt: !11819)
!13059 = !DILocation(line: 790, column: 16, scope: !11816, inlinedAt: !11819)
!13060 = !DILocation(line: 792, column: 12, scope: !11816, inlinedAt: !11819)
!13061 = !DILocation(line: 886, column: 123, scope: !11820)
!13062 = !DILocation(line: 886, column: 121, scope: !11820)
!13063 = !DILocation(line: 886, column: 91, scope: !11820)
!13064 = !DILocation(line: 886, column: 83, scope: !11820)
!13065 = !DILocation(line: 886, column: 44, scope: !11820)
!13066 = !DILocation(line: 886, column: 17, scope: !11820)
!13067 = !DILocation(line: 886, column: 37, scope: !11820)
!13068 = !DILocation(line: 886, column: 39, scope: !11820)
!13069 = !DILocation(line: 886, column: 26, scope: !11820)
!13070 = !DILocation(line: 886, column: 47, scope: !11820)
!13071 = !DILocation(line: 887, column: 48, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !11820, file: !1003, line: 887, column: 21)
!13073 = !DILocation(line: 887, column: 21, scope: !13072)
!13074 = !DILocation(line: 887, column: 41, scope: !13072)
!13075 = !DILocation(line: 887, column: 43, scope: !13072)
!13076 = !DILocation(line: 887, column: 30, scope: !13072)
!13077 = !DILocation(line: 887, column: 51, scope: !13072)
!13078 = !DILocation(line: 887, column: 21, scope: !11820)
!13079 = !DILocation(line: 888, column: 28, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13072, file: !1003, line: 887, column: 59)
!13081 = !DILocation(line: 888, column: 32, scope: !13080)
!13082 = !DILocation(line: 888, column: 100, scope: !13080)
!13083 = !DILocation(line: 888, column: 73, scope: !13080)
!13084 = !DILocation(line: 888, column: 93, scope: !13080)
!13085 = !DILocation(line: 888, column: 95, scope: !13080)
!13086 = !DILocation(line: 888, column: 82, scope: !13080)
!13087 = !DILocation(line: 888, column: 21, scope: !13080)
!13088 = !DILocation(line: 889, column: 21, scope: !13080)
!13089 = !DILocation(line: 891, column: 13, scope: !11820)
!13090 = !DILocation(line: 885, column: 67, scope: !13091)
!13091 = !DILexicalBlockFile(scope: !11821, file: !1003, discriminator: 2)
!13092 = !DILocation(line: 885, column: 13, scope: !13091)
!13093 = distinct !{!13093, !13094}
!13094 = !DILocation(line: 885, column: 13, scope: !11823)
!13095 = !DILocation(line: 893, column: 5, scope: !11825)
!13096 = !DILocation(line: 853, column: 43, scope: !13097)
!13097 = !DILexicalBlockFile(scope: !11826, file: !1003, discriminator: 2)
!13098 = !DILocation(line: 853, column: 5, scope: !13097)
!13099 = distinct !{!13099, !13100}
!13100 = !DILocation(line: 853, column: 5, scope: !11805)
!13101 = !DILocation(line: 896, column: 12, scope: !11805)
!13102 = !DILocation(line: 896, column: 21, scope: !11805)
!13103 = !DILocation(line: 896, column: 5, scope: !11805)
!13104 = !DILocation(line: 896, column: 56, scope: !11805)
!13105 = !DILocation(line: 896, column: 65, scope: !11805)
!13106 = !DILocation(line: 896, column: 36, scope: !11805)
!13107 = !DILocation(line: 896, column: 45, scope: !11805)
!13108 = !DILocation(line: 899, column: 5, scope: !11805)
!13109 = !DILocation(line: 900, column: 1, scope: !11805)
!13110 = distinct !DISubprogram(name: "read_sbr_noise", scope: !1003, file: !1003, line: 902, type: !11806, isLocal: true, isDefinition: true, scopeLine: 904, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!13111 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !13112)
!13112 = distinct !DILocation(line: 788, column: 601, scope: !11810, inlinedAt: !13113)
!13113 = distinct !DILocation(line: 934, column: 98, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13115, file: !1003, line: 933, column: 44)
!13115 = distinct !DILexicalBlock(scope: !13116, file: !1003, line: 933, column: 13)
!13116 = distinct !DILexicalBlock(scope: !13117, file: !1003, line: 933, column: 13)
!13117 = distinct !DILexicalBlock(scope: !13118, file: !1003, line: 931, column: 16)
!13118 = distinct !DILexicalBlock(scope: !13119, file: !1003, line: 923, column: 13)
!13119 = distinct !DILexicalBlock(scope: !13120, file: !1003, line: 922, column: 49)
!13120 = distinct !DILexicalBlock(scope: !13121, file: !1003, line: 922, column: 5)
!13121 = distinct !DILexicalBlock(scope: !13110, file: !1003, line: 922, column: 5)
!13122 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !13123)
!13123 = distinct !DILocation(line: 788, column: 259, scope: !11830, inlinedAt: !13113)
!13124 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !13125)
!13125 = distinct !DILocation(line: 786, column: 16, scope: !11816, inlinedAt: !13113)
!13126 = !DILocation(line: 762, column: 74, scope: !11816, inlinedAt: !13113)
!13127 = !DILocation(line: 762, column: 87, scope: !11816, inlinedAt: !13113)
!13128 = !DILocation(line: 763, column: 42, scope: !11816, inlinedAt: !13113)
!13129 = !DILocation(line: 763, column: 52, scope: !11816, inlinedAt: !13113)
!13130 = !DILocation(line: 783, column: 9, scope: !11816, inlinedAt: !13113)
!13131 = !DILocation(line: 785, column: 18, scope: !11816, inlinedAt: !13113)
!13132 = !DILocation(line: 785, column: 78, scope: !11816, inlinedAt: !13113)
!13133 = !DILocation(line: 785, column: 101, scope: !11816, inlinedAt: !13113)
!13134 = !DILocation(line: 788, column: 14, scope: !11815, inlinedAt: !13113)
!13135 = !DILocation(line: 788, column: 17, scope: !11815, inlinedAt: !13113)
!13136 = !DILocation(line: 788, column: 39, scope: !11815, inlinedAt: !13113)
!13137 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !13138)
!13138 = distinct !DILocation(line: 788, column: 601, scope: !11810, inlinedAt: !13139)
!13139 = distinct !DILocation(line: 925, column: 90, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13141, file: !1003, line: 924, column: 44)
!13141 = distinct !DILexicalBlock(scope: !13142, file: !1003, line: 924, column: 13)
!13142 = distinct !DILexicalBlock(scope: !13143, file: !1003, line: 924, column: 13)
!13143 = distinct !DILexicalBlock(scope: !13118, file: !1003, line: 923, column: 38)
!13144 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !13145)
!13145 = distinct !DILocation(line: 788, column: 259, scope: !11830, inlinedAt: !13139)
!13146 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !13147)
!13147 = distinct !DILocation(line: 786, column: 16, scope: !11816, inlinedAt: !13139)
!13148 = !DILocation(line: 762, column: 74, scope: !11816, inlinedAt: !13139)
!13149 = !DILocation(line: 762, column: 87, scope: !11816, inlinedAt: !13139)
!13150 = !DILocation(line: 763, column: 42, scope: !11816, inlinedAt: !13139)
!13151 = !DILocation(line: 763, column: 52, scope: !11816, inlinedAt: !13139)
!13152 = !DILocation(line: 783, column: 9, scope: !11816, inlinedAt: !13139)
!13153 = !DILocation(line: 785, column: 18, scope: !11816, inlinedAt: !13139)
!13154 = !DILocation(line: 785, column: 78, scope: !11816, inlinedAt: !13139)
!13155 = !DILocation(line: 785, column: 101, scope: !11816, inlinedAt: !13139)
!13156 = !DILocation(line: 788, column: 14, scope: !11815, inlinedAt: !13139)
!13157 = !DILocation(line: 788, column: 17, scope: !11815, inlinedAt: !13139)
!13158 = !DILocation(line: 788, column: 39, scope: !11815, inlinedAt: !13139)
!13159 = !DILocalVariable(name: "ac", arg: 1, scope: !13110, file: !1003, line: 902, type: !1510)
!13160 = !DILocation(line: 902, column: 39, scope: !13110)
!13161 = !DILocalVariable(name: "sbr", arg: 2, scope: !13110, file: !1003, line: 902, type: !1125)
!13162 = !DILocation(line: 902, column: 68, scope: !13110)
!13163 = !DILocalVariable(name: "gb", arg: 3, scope: !13110, file: !1003, line: 902, type: !2893)
!13164 = !DILocation(line: 902, column: 88, scope: !13110)
!13165 = !DILocalVariable(name: "ch_data", arg: 4, scope: !13110, file: !1003, line: 903, type: !2516)
!13166 = !DILocation(line: 903, column: 37, scope: !13110)
!13167 = !DILocalVariable(name: "ch", arg: 5, scope: !13110, file: !1003, line: 903, type: !958)
!13168 = !DILocation(line: 903, column: 50, scope: !13110)
!13169 = !DILocalVariable(name: "i", scope: !13110, file: !1003, line: 905, type: !958)
!13170 = !DILocation(line: 905, column: 9, scope: !13110)
!13171 = !DILocalVariable(name: "j", scope: !13110, file: !1003, line: 905, type: !958)
!13172 = !DILocation(line: 905, column: 12, scope: !13110)
!13173 = !DILocalVariable(name: "t_huff", scope: !13110, file: !1003, line: 906, type: !1066)
!13174 = !DILocation(line: 906, column: 15, scope: !13110)
!13175 = !DILocalVariable(name: "f_huff", scope: !13110, file: !1003, line: 906, type: !1066)
!13176 = !DILocation(line: 906, column: 29, scope: !13110)
!13177 = !DILocalVariable(name: "t_lav", scope: !13110, file: !1003, line: 907, type: !958)
!13178 = !DILocation(line: 907, column: 9, scope: !13110)
!13179 = !DILocalVariable(name: "f_lav", scope: !13110, file: !1003, line: 907, type: !958)
!13180 = !DILocation(line: 907, column: 16, scope: !13110)
!13181 = !DILocalVariable(name: "delta", scope: !13110, file: !1003, line: 908, type: !958)
!13182 = !DILocation(line: 908, column: 9, scope: !13110)
!13183 = !DILocation(line: 908, column: 18, scope: !13110)
!13184 = !DILocation(line: 908, column: 21, scope: !13110)
!13185 = !DILocation(line: 908, column: 26, scope: !13110)
!13186 = !DILocation(line: 908, column: 29, scope: !13187)
!13187 = !DILexicalBlockFile(scope: !13110, file: !1003, discriminator: 1)
!13188 = !DILocation(line: 908, column: 34, scope: !13187)
!13189 = !DILocation(line: 908, column: 46, scope: !13187)
!13190 = !DILocation(line: 908, column: 26, scope: !13191)
!13191 = !DILexicalBlockFile(scope: !13110, file: !1003, discriminator: 2)
!13192 = !DILocation(line: 908, column: 52, scope: !13191)
!13193 = !DILocation(line: 908, column: 9, scope: !13191)
!13194 = !DILocation(line: 910, column: 9, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !13110, file: !1003, line: 910, column: 9)
!13196 = !DILocation(line: 910, column: 14, scope: !13195)
!13197 = !DILocation(line: 910, column: 26, scope: !13195)
!13198 = !DILocation(line: 910, column: 29, scope: !13199)
!13199 = !DILexicalBlockFile(scope: !13195, file: !1003, discriminator: 1)
!13200 = !DILocation(line: 910, column: 9, scope: !13199)
!13201 = !DILocation(line: 911, column: 53, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13195, file: !1003, line: 910, column: 33)
!13203 = !DILocation(line: 911, column: 16, scope: !13202)
!13204 = !DILocation(line: 912, column: 17, scope: !13202)
!13205 = !DILocation(line: 912, column: 15, scope: !13202)
!13206 = !DILocation(line: 913, column: 51, scope: !13202)
!13207 = !DILocation(line: 913, column: 16, scope: !13202)
!13208 = !DILocation(line: 914, column: 17, scope: !13202)
!13209 = !DILocation(line: 914, column: 15, scope: !13202)
!13210 = !DILocation(line: 915, column: 5, scope: !13202)
!13211 = !DILocation(line: 916, column: 49, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13195, file: !1003, line: 915, column: 12)
!13213 = !DILocation(line: 916, column: 16, scope: !13212)
!13214 = !DILocation(line: 917, column: 17, scope: !13212)
!13215 = !DILocation(line: 917, column: 15, scope: !13212)
!13216 = !DILocation(line: 918, column: 47, scope: !13212)
!13217 = !DILocation(line: 918, column: 16, scope: !13212)
!13218 = !DILocation(line: 919, column: 17, scope: !13212)
!13219 = !DILocation(line: 919, column: 15, scope: !13212)
!13220 = !DILocation(line: 922, column: 12, scope: !13121)
!13221 = !DILocation(line: 922, column: 10, scope: !13121)
!13222 = !DILocation(line: 922, column: 17, scope: !13223)
!13223 = !DILexicalBlockFile(scope: !13120, file: !1003, discriminator: 1)
!13224 = !DILocation(line: 922, column: 21, scope: !13223)
!13225 = !DILocation(line: 922, column: 30, scope: !13223)
!13226 = !DILocation(line: 922, column: 19, scope: !13223)
!13227 = !DILocation(line: 922, column: 5, scope: !13223)
!13228 = !DILocation(line: 923, column: 34, scope: !13118)
!13229 = !DILocation(line: 923, column: 13, scope: !13118)
!13230 = !DILocation(line: 923, column: 22, scope: !13118)
!13231 = !DILocation(line: 923, column: 13, scope: !13119)
!13232 = !DILocation(line: 924, column: 20, scope: !13142)
!13233 = !DILocation(line: 924, column: 18, scope: !13142)
!13234 = !DILocation(line: 924, column: 25, scope: !13235)
!13235 = !DILexicalBlockFile(scope: !13141, file: !1003, discriminator: 1)
!13236 = !DILocation(line: 924, column: 29, scope: !13235)
!13237 = !DILocation(line: 924, column: 34, scope: !13235)
!13238 = !DILocation(line: 924, column: 27, scope: !13235)
!13239 = !DILocation(line: 924, column: 13, scope: !13235)
!13240 = !DILocation(line: 925, column: 76, scope: !13140)
!13241 = !DILocation(line: 925, column: 51, scope: !13140)
!13242 = !DILocation(line: 925, column: 73, scope: !13140)
!13243 = !DILocation(line: 925, column: 60, scope: !13140)
!13244 = !DILocation(line: 925, column: 81, scope: !13140)
!13245 = !DILocation(line: 925, column: 99, scope: !13140)
!13246 = !DILocation(line: 925, column: 103, scope: !13140)
!13247 = !DILocation(line: 925, column: 90, scope: !13140)
!13248 = !DILocation(line: 785, column: 30, scope: !11816, inlinedAt: !13139)
!13249 = !DILocation(line: 785, column: 34, scope: !11816, inlinedAt: !13139)
!13250 = !DILocation(line: 785, column: 118, scope: !11816, inlinedAt: !13139)
!13251 = !DILocation(line: 785, column: 122, scope: !11816, inlinedAt: !13139)
!13252 = !DILocation(line: 786, column: 60, scope: !11816, inlinedAt: !13139)
!13253 = !DILocation(line: 786, column: 64, scope: !11816, inlinedAt: !13139)
!13254 = !DILocation(line: 786, column: 74, scope: !11816, inlinedAt: !13139)
!13255 = !DILocation(line: 786, column: 83, scope: !11816, inlinedAt: !13139)
!13256 = !DILocation(line: 786, column: 71, scope: !11816, inlinedAt: !13139)
!13257 = !DILocation(line: 786, column: 92, scope: !11816, inlinedAt: !13139)
!13258 = !DILocation(line: 786, column: 16, scope: !11816, inlinedAt: !13139)
!13259 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !13147)
!13260 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !13147)
!13261 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !13147)
!13262 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !13147)
!13263 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !13147)
!13264 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !13147)
!13265 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !13147)
!13266 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !13147)
!13267 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !13147)
!13268 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !13147)
!13269 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !13147)
!13270 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !13147)
!13271 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !13147)
!13272 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !13147)
!13273 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !13147)
!13274 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !13147)
!13275 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !13147)
!13276 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !13147)
!13277 = !DILocation(line: 786, column: 100, scope: !11816, inlinedAt: !13139)
!13278 = !DILocation(line: 786, column: 109, scope: !11816, inlinedAt: !13139)
!13279 = !DILocation(line: 786, column: 96, scope: !11816, inlinedAt: !13139)
!13280 = !DILocation(line: 786, column: 14, scope: !11816, inlinedAt: !13139)
!13281 = !DILocation(line: 788, column: 64, scope: !12103, inlinedAt: !13139)
!13282 = !DILocation(line: 788, column: 74, scope: !12103, inlinedAt: !13139)
!13283 = !DILocation(line: 788, column: 54, scope: !12103, inlinedAt: !13139)
!13284 = !DILocation(line: 788, column: 52, scope: !12103, inlinedAt: !13139)
!13285 = !DILocation(line: 788, column: 94, scope: !12103, inlinedAt: !13139)
!13286 = !DILocation(line: 788, column: 88, scope: !12103, inlinedAt: !13139)
!13287 = !DILocation(line: 788, column: 86, scope: !12103, inlinedAt: !13139)
!13288 = !DILocation(line: 788, column: 115, scope: !12103, inlinedAt: !13139)
!13289 = !DILocation(line: 788, column: 109, scope: !12103, inlinedAt: !13139)
!13290 = !DILocation(line: 788, column: 107, scope: !12103, inlinedAt: !13139)
!13291 = !DILocation(line: 788, column: 130, scope: !12103, inlinedAt: !13139)
!13292 = !DILocation(line: 788, column: 140, scope: !12103, inlinedAt: !13139)
!13293 = !DILocation(line: 788, column: 144, scope: !12103, inlinedAt: !13139)
!13294 = !DILocation(line: 788, column: 147, scope: !12117, inlinedAt: !13139)
!13295 = !DILocation(line: 788, column: 149, scope: !12117, inlinedAt: !13139)
!13296 = !DILocation(line: 788, column: 130, scope: !12117, inlinedAt: !13139)
!13297 = !DILocation(line: 788, column: 169, scope: !12121, inlinedAt: !13139)
!13298 = !DILocation(line: 788, column: 187, scope: !12121, inlinedAt: !13139)
!13299 = !DILocation(line: 788, column: 199, scope: !12121, inlinedAt: !13139)
!13300 = !DILocation(line: 788, column: 196, scope: !12121, inlinedAt: !13139)
!13301 = !DILocation(line: 788, column: 184, scope: !12121, inlinedAt: !13139)
!13302 = !DILocation(line: 788, column: 168, scope: !12121, inlinedAt: !13139)
!13303 = !DILocation(line: 788, column: 209, scope: !12128, inlinedAt: !13139)
!13304 = !DILocation(line: 788, column: 221, scope: !12128, inlinedAt: !13139)
!13305 = !DILocation(line: 788, column: 218, scope: !12128, inlinedAt: !13139)
!13306 = !DILocation(line: 788, column: 168, scope: !12128, inlinedAt: !13139)
!13307 = !DILocation(line: 788, column: 231, scope: !12133, inlinedAt: !13139)
!13308 = !DILocation(line: 788, column: 168, scope: !12133, inlinedAt: !13139)
!13309 = !DILocation(line: 788, column: 168, scope: !11830, inlinedAt: !13139)
!13310 = !DILocation(line: 788, column: 165, scope: !11830, inlinedAt: !13139)
!13311 = !DILocation(line: 788, column: 303, scope: !11830, inlinedAt: !13139)
!13312 = !DILocation(line: 788, column: 307, scope: !11830, inlinedAt: !13139)
!13313 = !DILocation(line: 788, column: 317, scope: !11830, inlinedAt: !13139)
!13314 = !DILocation(line: 788, column: 326, scope: !11830, inlinedAt: !13139)
!13315 = !DILocation(line: 788, column: 314, scope: !11830, inlinedAt: !13139)
!13316 = !DILocation(line: 788, column: 335, scope: !11830, inlinedAt: !13139)
!13317 = !DILocation(line: 788, column: 259, scope: !11830, inlinedAt: !13139)
!13318 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !13145)
!13319 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !13145)
!13320 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !13145)
!13321 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !13145)
!13322 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !13145)
!13323 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !13145)
!13324 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !13145)
!13325 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !13145)
!13326 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !13145)
!13327 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !13145)
!13328 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !13145)
!13329 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !13145)
!13330 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !13145)
!13331 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !13145)
!13332 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !13145)
!13333 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !13145)
!13334 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !13145)
!13335 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !13145)
!13336 = !DILocation(line: 788, column: 343, scope: !11830, inlinedAt: !13139)
!13337 = !DILocation(line: 788, column: 352, scope: !11830, inlinedAt: !13139)
!13338 = !DILocation(line: 788, column: 339, scope: !11830, inlinedAt: !13139)
!13339 = !DILocation(line: 788, column: 257, scope: !11830, inlinedAt: !13139)
!13340 = !DILocation(line: 788, column: 369, scope: !11830, inlinedAt: !13139)
!13341 = !DILocation(line: 788, column: 368, scope: !11830, inlinedAt: !13139)
!13342 = !DILocation(line: 788, column: 366, scope: !11830, inlinedAt: !13139)
!13343 = !DILocation(line: 788, column: 390, scope: !11830, inlinedAt: !13139)
!13344 = !DILocation(line: 788, column: 400, scope: !11830, inlinedAt: !13139)
!13345 = !DILocation(line: 788, column: 380, scope: !12172, inlinedAt: !13139)
!13346 = !DILocation(line: 788, column: 411, scope: !11830, inlinedAt: !13139)
!13347 = !DILocation(line: 788, column: 409, scope: !11830, inlinedAt: !13139)
!13348 = !DILocation(line: 788, column: 378, scope: !11830, inlinedAt: !13139)
!13349 = !DILocation(line: 788, column: 430, scope: !11830, inlinedAt: !13139)
!13350 = !DILocation(line: 788, column: 424, scope: !11830, inlinedAt: !13139)
!13351 = !DILocation(line: 788, column: 422, scope: !11830, inlinedAt: !13139)
!13352 = !DILocation(line: 788, column: 451, scope: !11830, inlinedAt: !13139)
!13353 = !DILocation(line: 788, column: 445, scope: !11830, inlinedAt: !13139)
!13354 = !DILocation(line: 788, column: 443, scope: !11830, inlinedAt: !13139)
!13355 = !DILocation(line: 788, column: 466, scope: !11830, inlinedAt: !13139)
!13356 = !DILocation(line: 788, column: 476, scope: !11830, inlinedAt: !13139)
!13357 = !DILocation(line: 788, column: 480, scope: !11830, inlinedAt: !13139)
!13358 = !DILocation(line: 788, column: 483, scope: !12186, inlinedAt: !13139)
!13359 = !DILocation(line: 788, column: 485, scope: !12186, inlinedAt: !13139)
!13360 = !DILocation(line: 788, column: 466, scope: !12186, inlinedAt: !13139)
!13361 = !DILocation(line: 788, column: 505, scope: !12190, inlinedAt: !13139)
!13362 = !DILocation(line: 788, column: 523, scope: !12190, inlinedAt: !13139)
!13363 = !DILocation(line: 788, column: 535, scope: !12190, inlinedAt: !13139)
!13364 = !DILocation(line: 788, column: 532, scope: !12190, inlinedAt: !13139)
!13365 = !DILocation(line: 788, column: 520, scope: !12190, inlinedAt: !13139)
!13366 = !DILocation(line: 788, column: 504, scope: !12190, inlinedAt: !13139)
!13367 = !DILocation(line: 788, column: 548, scope: !12197, inlinedAt: !13139)
!13368 = !DILocation(line: 788, column: 560, scope: !12197, inlinedAt: !13139)
!13369 = !DILocation(line: 788, column: 557, scope: !12197, inlinedAt: !13139)
!13370 = !DILocation(line: 788, column: 504, scope: !12197, inlinedAt: !13139)
!13371 = !DILocation(line: 788, column: 573, scope: !12202, inlinedAt: !13139)
!13372 = !DILocation(line: 788, column: 504, scope: !12202, inlinedAt: !13139)
!13373 = !DILocation(line: 788, column: 504, scope: !11810, inlinedAt: !13139)
!13374 = !DILocation(line: 788, column: 501, scope: !11810, inlinedAt: !13139)
!13375 = !DILocation(line: 788, column: 645, scope: !11810, inlinedAt: !13139)
!13376 = !DILocation(line: 788, column: 649, scope: !11810, inlinedAt: !13139)
!13377 = !DILocation(line: 788, column: 659, scope: !11810, inlinedAt: !13139)
!13378 = !DILocation(line: 788, column: 668, scope: !11810, inlinedAt: !13139)
!13379 = !DILocation(line: 788, column: 656, scope: !11810, inlinedAt: !13139)
!13380 = !DILocation(line: 788, column: 677, scope: !11810, inlinedAt: !13139)
!13381 = !DILocation(line: 788, column: 601, scope: !11810, inlinedAt: !13139)
!13382 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !13138)
!13383 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !13138)
!13384 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !13138)
!13385 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !13138)
!13386 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !13138)
!13387 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !13138)
!13388 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !13138)
!13389 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !13138)
!13390 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !13138)
!13391 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !13138)
!13392 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !13138)
!13393 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !13138)
!13394 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !13138)
!13395 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !13138)
!13396 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !13138)
!13397 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !13138)
!13398 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !13138)
!13399 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !13138)
!13400 = !DILocation(line: 788, column: 685, scope: !11810, inlinedAt: !13139)
!13401 = !DILocation(line: 788, column: 694, scope: !11810, inlinedAt: !13139)
!13402 = !DILocation(line: 788, column: 681, scope: !11810, inlinedAt: !13139)
!13403 = !DILocation(line: 788, column: 599, scope: !11810, inlinedAt: !13139)
!13404 = !DILocation(line: 788, column: 711, scope: !11810, inlinedAt: !13139)
!13405 = !DILocation(line: 788, column: 710, scope: !11810, inlinedAt: !13139)
!13406 = !DILocation(line: 788, column: 708, scope: !11810, inlinedAt: !13139)
!13407 = !DILocation(line: 788, column: 732, scope: !11810, inlinedAt: !13139)
!13408 = !DILocation(line: 788, column: 742, scope: !11810, inlinedAt: !13139)
!13409 = !DILocation(line: 788, column: 722, scope: !12241, inlinedAt: !13139)
!13410 = !DILocation(line: 788, column: 753, scope: !11810, inlinedAt: !13139)
!13411 = !DILocation(line: 788, column: 751, scope: !11810, inlinedAt: !13139)
!13412 = !DILocation(line: 788, column: 720, scope: !11810, inlinedAt: !13139)
!13413 = !DILocation(line: 788, column: 772, scope: !11810, inlinedAt: !13139)
!13414 = !DILocation(line: 788, column: 766, scope: !11810, inlinedAt: !13139)
!13415 = !DILocation(line: 788, column: 764, scope: !11810, inlinedAt: !13139)
!13416 = !DILocation(line: 788, column: 793, scope: !11810, inlinedAt: !13139)
!13417 = !DILocation(line: 788, column: 787, scope: !11810, inlinedAt: !13139)
!13418 = !DILocation(line: 788, column: 785, scope: !11810, inlinedAt: !13139)
!13419 = !DILocation(line: 788, column: 804, scope: !11810, inlinedAt: !13139)
!13420 = !DILocation(line: 788, column: 806, scope: !12253, inlinedAt: !13139)
!13421 = !DILocation(line: 788, column: 827, scope: !12255, inlinedAt: !13139)
!13422 = !DILocation(line: 788, column: 822, scope: !12255, inlinedAt: !13139)
!13423 = !DILocation(line: 788, column: 844, scope: !12255, inlinedAt: !13139)
!13424 = !DILocation(line: 788, column: 862, scope: !12255, inlinedAt: !13139)
!13425 = !DILocation(line: 788, column: 874, scope: !12255, inlinedAt: !13139)
!13426 = !DILocation(line: 788, column: 871, scope: !12255, inlinedAt: !13139)
!13427 = !DILocation(line: 788, column: 859, scope: !12255, inlinedAt: !13139)
!13428 = !DILocation(line: 788, column: 843, scope: !12255, inlinedAt: !13139)
!13429 = !DILocation(line: 788, column: 881, scope: !12265, inlinedAt: !13139)
!13430 = !DILocation(line: 788, column: 893, scope: !12265, inlinedAt: !13139)
!13431 = !DILocation(line: 788, column: 890, scope: !12265, inlinedAt: !13139)
!13432 = !DILocation(line: 788, column: 843, scope: !12265, inlinedAt: !13139)
!13433 = !DILocation(line: 788, column: 900, scope: !12270, inlinedAt: !13139)
!13434 = !DILocation(line: 788, column: 843, scope: !12270, inlinedAt: !13139)
!13435 = !DILocation(line: 788, column: 843, scope: !12273, inlinedAt: !13139)
!13436 = !DILocation(line: 788, column: 840, scope: !12273, inlinedAt: !13139)
!13437 = !DILocation(line: 790, column: 18, scope: !11816, inlinedAt: !13139)
!13438 = !DILocation(line: 790, column: 6, scope: !11816, inlinedAt: !13139)
!13439 = !DILocation(line: 790, column: 10, scope: !11816, inlinedAt: !13139)
!13440 = !DILocation(line: 790, column: 16, scope: !11816, inlinedAt: !13139)
!13441 = !DILocation(line: 792, column: 12, scope: !11816, inlinedAt: !13139)
!13442 = !DILocation(line: 925, column: 119, scope: !13140)
!13443 = !DILocation(line: 925, column: 117, scope: !13140)
!13444 = !DILocation(line: 925, column: 87, scope: !13140)
!13445 = !DILocation(line: 925, column: 79, scope: !13140)
!13446 = !DILocation(line: 925, column: 46, scope: !13140)
!13447 = !DILocation(line: 925, column: 17, scope: !13140)
!13448 = !DILocation(line: 925, column: 39, scope: !13140)
!13449 = !DILocation(line: 925, column: 41, scope: !13140)
!13450 = !DILocation(line: 925, column: 26, scope: !13140)
!13451 = !DILocation(line: 925, column: 49, scope: !13140)
!13452 = !DILocation(line: 926, column: 50, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13140, file: !1003, line: 926, column: 21)
!13454 = !DILocation(line: 926, column: 21, scope: !13453)
!13455 = !DILocation(line: 926, column: 43, scope: !13453)
!13456 = !DILocation(line: 926, column: 45, scope: !13453)
!13457 = !DILocation(line: 926, column: 30, scope: !13453)
!13458 = !DILocation(line: 926, column: 53, scope: !13453)
!13459 = !DILocation(line: 926, column: 21, scope: !13140)
!13460 = !DILocation(line: 927, column: 28, scope: !13461)
!13461 = distinct !DILexicalBlock(scope: !13453, file: !1003, line: 926, column: 60)
!13462 = !DILocation(line: 927, column: 32, scope: !13461)
!13463 = !DILocation(line: 927, column: 104, scope: !13461)
!13464 = !DILocation(line: 927, column: 75, scope: !13461)
!13465 = !DILocation(line: 927, column: 97, scope: !13461)
!13466 = !DILocation(line: 927, column: 99, scope: !13461)
!13467 = !DILocation(line: 927, column: 84, scope: !13461)
!13468 = !DILocation(line: 927, column: 21, scope: !13461)
!13469 = !DILocation(line: 928, column: 21, scope: !13461)
!13470 = !DILocation(line: 930, column: 13, scope: !13140)
!13471 = !DILocation(line: 924, column: 40, scope: !13472)
!13472 = !DILexicalBlockFile(scope: !13141, file: !1003, discriminator: 2)
!13473 = !DILocation(line: 924, column: 13, scope: !13472)
!13474 = distinct !{!13474, !13475}
!13475 = !DILocation(line: 924, column: 13, scope: !13143)
!13476 = !DILocation(line: 931, column: 9, scope: !13143)
!13477 = !DILocation(line: 932, column: 47, scope: !13117)
!13478 = !DILocation(line: 932, column: 64, scope: !13117)
!13479 = !DILocation(line: 932, column: 55, scope: !13117)
!13480 = !DILocation(line: 932, column: 53, scope: !13117)
!13481 = !DILocation(line: 932, column: 35, scope: !13117)
!13482 = !DILocation(line: 932, column: 37, scope: !13117)
!13483 = !DILocation(line: 932, column: 13, scope: !13117)
!13484 = !DILocation(line: 932, column: 22, scope: !13117)
!13485 = !DILocation(line: 932, column: 45, scope: !13117)
!13486 = !DILocation(line: 933, column: 20, scope: !13116)
!13487 = !DILocation(line: 933, column: 18, scope: !13116)
!13488 = !DILocation(line: 933, column: 25, scope: !13489)
!13489 = !DILexicalBlockFile(scope: !13115, file: !1003, discriminator: 1)
!13490 = !DILocation(line: 933, column: 29, scope: !13489)
!13491 = !DILocation(line: 933, column: 34, scope: !13489)
!13492 = !DILocation(line: 933, column: 27, scope: !13489)
!13493 = !DILocation(line: 933, column: 13, scope: !13489)
!13494 = !DILocation(line: 934, column: 80, scope: !13114)
!13495 = !DILocation(line: 934, column: 82, scope: !13114)
!13496 = !DILocation(line: 934, column: 51, scope: !13114)
!13497 = !DILocation(line: 934, column: 73, scope: !13114)
!13498 = !DILocation(line: 934, column: 75, scope: !13114)
!13499 = !DILocation(line: 934, column: 60, scope: !13114)
!13500 = !DILocation(line: 934, column: 89, scope: !13114)
!13501 = !DILocation(line: 934, column: 107, scope: !13114)
!13502 = !DILocation(line: 934, column: 111, scope: !13114)
!13503 = !DILocation(line: 934, column: 98, scope: !13114)
!13504 = !DILocation(line: 785, column: 30, scope: !11816, inlinedAt: !13113)
!13505 = !DILocation(line: 785, column: 34, scope: !11816, inlinedAt: !13113)
!13506 = !DILocation(line: 785, column: 118, scope: !11816, inlinedAt: !13113)
!13507 = !DILocation(line: 785, column: 122, scope: !11816, inlinedAt: !13113)
!13508 = !DILocation(line: 786, column: 60, scope: !11816, inlinedAt: !13113)
!13509 = !DILocation(line: 786, column: 64, scope: !11816, inlinedAt: !13113)
!13510 = !DILocation(line: 786, column: 74, scope: !11816, inlinedAt: !13113)
!13511 = !DILocation(line: 786, column: 83, scope: !11816, inlinedAt: !13113)
!13512 = !DILocation(line: 786, column: 71, scope: !11816, inlinedAt: !13113)
!13513 = !DILocation(line: 786, column: 92, scope: !11816, inlinedAt: !13113)
!13514 = !DILocation(line: 786, column: 16, scope: !11816, inlinedAt: !13113)
!13515 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !13125)
!13516 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !13125)
!13517 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !13125)
!13518 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !13125)
!13519 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !13125)
!13520 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !13125)
!13521 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !13125)
!13522 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !13125)
!13523 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !13125)
!13524 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !13125)
!13525 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !13125)
!13526 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !13125)
!13527 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !13125)
!13528 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !13125)
!13529 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !13125)
!13530 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !13125)
!13531 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !13125)
!13532 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !13125)
!13533 = !DILocation(line: 786, column: 100, scope: !11816, inlinedAt: !13113)
!13534 = !DILocation(line: 786, column: 109, scope: !11816, inlinedAt: !13113)
!13535 = !DILocation(line: 786, column: 96, scope: !11816, inlinedAt: !13113)
!13536 = !DILocation(line: 786, column: 14, scope: !11816, inlinedAt: !13113)
!13537 = !DILocation(line: 788, column: 64, scope: !12103, inlinedAt: !13113)
!13538 = !DILocation(line: 788, column: 74, scope: !12103, inlinedAt: !13113)
!13539 = !DILocation(line: 788, column: 54, scope: !12103, inlinedAt: !13113)
!13540 = !DILocation(line: 788, column: 52, scope: !12103, inlinedAt: !13113)
!13541 = !DILocation(line: 788, column: 94, scope: !12103, inlinedAt: !13113)
!13542 = !DILocation(line: 788, column: 88, scope: !12103, inlinedAt: !13113)
!13543 = !DILocation(line: 788, column: 86, scope: !12103, inlinedAt: !13113)
!13544 = !DILocation(line: 788, column: 115, scope: !12103, inlinedAt: !13113)
!13545 = !DILocation(line: 788, column: 109, scope: !12103, inlinedAt: !13113)
!13546 = !DILocation(line: 788, column: 107, scope: !12103, inlinedAt: !13113)
!13547 = !DILocation(line: 788, column: 130, scope: !12103, inlinedAt: !13113)
!13548 = !DILocation(line: 788, column: 140, scope: !12103, inlinedAt: !13113)
!13549 = !DILocation(line: 788, column: 144, scope: !12103, inlinedAt: !13113)
!13550 = !DILocation(line: 788, column: 147, scope: !12117, inlinedAt: !13113)
!13551 = !DILocation(line: 788, column: 149, scope: !12117, inlinedAt: !13113)
!13552 = !DILocation(line: 788, column: 130, scope: !12117, inlinedAt: !13113)
!13553 = !DILocation(line: 788, column: 169, scope: !12121, inlinedAt: !13113)
!13554 = !DILocation(line: 788, column: 187, scope: !12121, inlinedAt: !13113)
!13555 = !DILocation(line: 788, column: 199, scope: !12121, inlinedAt: !13113)
!13556 = !DILocation(line: 788, column: 196, scope: !12121, inlinedAt: !13113)
!13557 = !DILocation(line: 788, column: 184, scope: !12121, inlinedAt: !13113)
!13558 = !DILocation(line: 788, column: 168, scope: !12121, inlinedAt: !13113)
!13559 = !DILocation(line: 788, column: 209, scope: !12128, inlinedAt: !13113)
!13560 = !DILocation(line: 788, column: 221, scope: !12128, inlinedAt: !13113)
!13561 = !DILocation(line: 788, column: 218, scope: !12128, inlinedAt: !13113)
!13562 = !DILocation(line: 788, column: 168, scope: !12128, inlinedAt: !13113)
!13563 = !DILocation(line: 788, column: 231, scope: !12133, inlinedAt: !13113)
!13564 = !DILocation(line: 788, column: 168, scope: !12133, inlinedAt: !13113)
!13565 = !DILocation(line: 788, column: 168, scope: !11830, inlinedAt: !13113)
!13566 = !DILocation(line: 788, column: 165, scope: !11830, inlinedAt: !13113)
!13567 = !DILocation(line: 788, column: 303, scope: !11830, inlinedAt: !13113)
!13568 = !DILocation(line: 788, column: 307, scope: !11830, inlinedAt: !13113)
!13569 = !DILocation(line: 788, column: 317, scope: !11830, inlinedAt: !13113)
!13570 = !DILocation(line: 788, column: 326, scope: !11830, inlinedAt: !13113)
!13571 = !DILocation(line: 788, column: 314, scope: !11830, inlinedAt: !13113)
!13572 = !DILocation(line: 788, column: 335, scope: !11830, inlinedAt: !13113)
!13573 = !DILocation(line: 788, column: 259, scope: !11830, inlinedAt: !13113)
!13574 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !13123)
!13575 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !13123)
!13576 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !13123)
!13577 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !13123)
!13578 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !13123)
!13579 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !13123)
!13580 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !13123)
!13581 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !13123)
!13582 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !13123)
!13583 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !13123)
!13584 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !13123)
!13585 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !13123)
!13586 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !13123)
!13587 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !13123)
!13588 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !13123)
!13589 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !13123)
!13590 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !13123)
!13591 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !13123)
!13592 = !DILocation(line: 788, column: 343, scope: !11830, inlinedAt: !13113)
!13593 = !DILocation(line: 788, column: 352, scope: !11830, inlinedAt: !13113)
!13594 = !DILocation(line: 788, column: 339, scope: !11830, inlinedAt: !13113)
!13595 = !DILocation(line: 788, column: 257, scope: !11830, inlinedAt: !13113)
!13596 = !DILocation(line: 788, column: 369, scope: !11830, inlinedAt: !13113)
!13597 = !DILocation(line: 788, column: 368, scope: !11830, inlinedAt: !13113)
!13598 = !DILocation(line: 788, column: 366, scope: !11830, inlinedAt: !13113)
!13599 = !DILocation(line: 788, column: 390, scope: !11830, inlinedAt: !13113)
!13600 = !DILocation(line: 788, column: 400, scope: !11830, inlinedAt: !13113)
!13601 = !DILocation(line: 788, column: 380, scope: !12172, inlinedAt: !13113)
!13602 = !DILocation(line: 788, column: 411, scope: !11830, inlinedAt: !13113)
!13603 = !DILocation(line: 788, column: 409, scope: !11830, inlinedAt: !13113)
!13604 = !DILocation(line: 788, column: 378, scope: !11830, inlinedAt: !13113)
!13605 = !DILocation(line: 788, column: 430, scope: !11830, inlinedAt: !13113)
!13606 = !DILocation(line: 788, column: 424, scope: !11830, inlinedAt: !13113)
!13607 = !DILocation(line: 788, column: 422, scope: !11830, inlinedAt: !13113)
!13608 = !DILocation(line: 788, column: 451, scope: !11830, inlinedAt: !13113)
!13609 = !DILocation(line: 788, column: 445, scope: !11830, inlinedAt: !13113)
!13610 = !DILocation(line: 788, column: 443, scope: !11830, inlinedAt: !13113)
!13611 = !DILocation(line: 788, column: 466, scope: !11830, inlinedAt: !13113)
!13612 = !DILocation(line: 788, column: 476, scope: !11830, inlinedAt: !13113)
!13613 = !DILocation(line: 788, column: 480, scope: !11830, inlinedAt: !13113)
!13614 = !DILocation(line: 788, column: 483, scope: !12186, inlinedAt: !13113)
!13615 = !DILocation(line: 788, column: 485, scope: !12186, inlinedAt: !13113)
!13616 = !DILocation(line: 788, column: 466, scope: !12186, inlinedAt: !13113)
!13617 = !DILocation(line: 788, column: 505, scope: !12190, inlinedAt: !13113)
!13618 = !DILocation(line: 788, column: 523, scope: !12190, inlinedAt: !13113)
!13619 = !DILocation(line: 788, column: 535, scope: !12190, inlinedAt: !13113)
!13620 = !DILocation(line: 788, column: 532, scope: !12190, inlinedAt: !13113)
!13621 = !DILocation(line: 788, column: 520, scope: !12190, inlinedAt: !13113)
!13622 = !DILocation(line: 788, column: 504, scope: !12190, inlinedAt: !13113)
!13623 = !DILocation(line: 788, column: 548, scope: !12197, inlinedAt: !13113)
!13624 = !DILocation(line: 788, column: 560, scope: !12197, inlinedAt: !13113)
!13625 = !DILocation(line: 788, column: 557, scope: !12197, inlinedAt: !13113)
!13626 = !DILocation(line: 788, column: 504, scope: !12197, inlinedAt: !13113)
!13627 = !DILocation(line: 788, column: 573, scope: !12202, inlinedAt: !13113)
!13628 = !DILocation(line: 788, column: 504, scope: !12202, inlinedAt: !13113)
!13629 = !DILocation(line: 788, column: 504, scope: !11810, inlinedAt: !13113)
!13630 = !DILocation(line: 788, column: 501, scope: !11810, inlinedAt: !13113)
!13631 = !DILocation(line: 788, column: 645, scope: !11810, inlinedAt: !13113)
!13632 = !DILocation(line: 788, column: 649, scope: !11810, inlinedAt: !13113)
!13633 = !DILocation(line: 788, column: 659, scope: !11810, inlinedAt: !13113)
!13634 = !DILocation(line: 788, column: 668, scope: !11810, inlinedAt: !13113)
!13635 = !DILocation(line: 788, column: 656, scope: !11810, inlinedAt: !13113)
!13636 = !DILocation(line: 788, column: 677, scope: !11810, inlinedAt: !13113)
!13637 = !DILocation(line: 788, column: 601, scope: !11810, inlinedAt: !13113)
!13638 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !13112)
!13639 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !13112)
!13640 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !13112)
!13641 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !13112)
!13642 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !13112)
!13643 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !13112)
!13644 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !13112)
!13645 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !13112)
!13646 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !13112)
!13647 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !13112)
!13648 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !13112)
!13649 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !13112)
!13650 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !13112)
!13651 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !13112)
!13652 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !13112)
!13653 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !13112)
!13654 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !13112)
!13655 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !13112)
!13656 = !DILocation(line: 788, column: 685, scope: !11810, inlinedAt: !13113)
!13657 = !DILocation(line: 788, column: 694, scope: !11810, inlinedAt: !13113)
!13658 = !DILocation(line: 788, column: 681, scope: !11810, inlinedAt: !13113)
!13659 = !DILocation(line: 788, column: 599, scope: !11810, inlinedAt: !13113)
!13660 = !DILocation(line: 788, column: 711, scope: !11810, inlinedAt: !13113)
!13661 = !DILocation(line: 788, column: 710, scope: !11810, inlinedAt: !13113)
!13662 = !DILocation(line: 788, column: 708, scope: !11810, inlinedAt: !13113)
!13663 = !DILocation(line: 788, column: 732, scope: !11810, inlinedAt: !13113)
!13664 = !DILocation(line: 788, column: 742, scope: !11810, inlinedAt: !13113)
!13665 = !DILocation(line: 788, column: 722, scope: !12241, inlinedAt: !13113)
!13666 = !DILocation(line: 788, column: 753, scope: !11810, inlinedAt: !13113)
!13667 = !DILocation(line: 788, column: 751, scope: !11810, inlinedAt: !13113)
!13668 = !DILocation(line: 788, column: 720, scope: !11810, inlinedAt: !13113)
!13669 = !DILocation(line: 788, column: 772, scope: !11810, inlinedAt: !13113)
!13670 = !DILocation(line: 788, column: 766, scope: !11810, inlinedAt: !13113)
!13671 = !DILocation(line: 788, column: 764, scope: !11810, inlinedAt: !13113)
!13672 = !DILocation(line: 788, column: 793, scope: !11810, inlinedAt: !13113)
!13673 = !DILocation(line: 788, column: 787, scope: !11810, inlinedAt: !13113)
!13674 = !DILocation(line: 788, column: 785, scope: !11810, inlinedAt: !13113)
!13675 = !DILocation(line: 788, column: 804, scope: !11810, inlinedAt: !13113)
!13676 = !DILocation(line: 788, column: 806, scope: !12253, inlinedAt: !13113)
!13677 = !DILocation(line: 788, column: 827, scope: !12255, inlinedAt: !13113)
!13678 = !DILocation(line: 788, column: 822, scope: !12255, inlinedAt: !13113)
!13679 = !DILocation(line: 788, column: 844, scope: !12255, inlinedAt: !13113)
!13680 = !DILocation(line: 788, column: 862, scope: !12255, inlinedAt: !13113)
!13681 = !DILocation(line: 788, column: 874, scope: !12255, inlinedAt: !13113)
!13682 = !DILocation(line: 788, column: 871, scope: !12255, inlinedAt: !13113)
!13683 = !DILocation(line: 788, column: 859, scope: !12255, inlinedAt: !13113)
!13684 = !DILocation(line: 788, column: 843, scope: !12255, inlinedAt: !13113)
!13685 = !DILocation(line: 788, column: 881, scope: !12265, inlinedAt: !13113)
!13686 = !DILocation(line: 788, column: 893, scope: !12265, inlinedAt: !13113)
!13687 = !DILocation(line: 788, column: 890, scope: !12265, inlinedAt: !13113)
!13688 = !DILocation(line: 788, column: 843, scope: !12265, inlinedAt: !13113)
!13689 = !DILocation(line: 788, column: 900, scope: !12270, inlinedAt: !13113)
!13690 = !DILocation(line: 788, column: 843, scope: !12270, inlinedAt: !13113)
!13691 = !DILocation(line: 788, column: 843, scope: !12273, inlinedAt: !13113)
!13692 = !DILocation(line: 788, column: 840, scope: !12273, inlinedAt: !13113)
!13693 = !DILocation(line: 790, column: 18, scope: !11816, inlinedAt: !13113)
!13694 = !DILocation(line: 790, column: 6, scope: !11816, inlinedAt: !13113)
!13695 = !DILocation(line: 790, column: 10, scope: !11816, inlinedAt: !13113)
!13696 = !DILocation(line: 790, column: 16, scope: !11816, inlinedAt: !13113)
!13697 = !DILocation(line: 792, column: 12, scope: !11816, inlinedAt: !13113)
!13698 = !DILocation(line: 934, column: 127, scope: !13114)
!13699 = !DILocation(line: 934, column: 125, scope: !13114)
!13700 = !DILocation(line: 934, column: 95, scope: !13114)
!13701 = !DILocation(line: 934, column: 87, scope: !13114)
!13702 = !DILocation(line: 934, column: 46, scope: !13114)
!13703 = !DILocation(line: 934, column: 17, scope: !13114)
!13704 = !DILocation(line: 934, column: 39, scope: !13114)
!13705 = !DILocation(line: 934, column: 41, scope: !13114)
!13706 = !DILocation(line: 934, column: 26, scope: !13114)
!13707 = !DILocation(line: 934, column: 49, scope: !13114)
!13708 = !DILocation(line: 935, column: 50, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !13114, file: !1003, line: 935, column: 21)
!13710 = !DILocation(line: 935, column: 21, scope: !13709)
!13711 = !DILocation(line: 935, column: 43, scope: !13709)
!13712 = !DILocation(line: 935, column: 45, scope: !13709)
!13713 = !DILocation(line: 935, column: 30, scope: !13709)
!13714 = !DILocation(line: 935, column: 53, scope: !13709)
!13715 = !DILocation(line: 935, column: 21, scope: !13114)
!13716 = !DILocation(line: 936, column: 28, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13709, file: !1003, line: 935, column: 60)
!13718 = !DILocation(line: 936, column: 32, scope: !13717)
!13719 = !DILocation(line: 936, column: 104, scope: !13717)
!13720 = !DILocation(line: 936, column: 75, scope: !13717)
!13721 = !DILocation(line: 936, column: 97, scope: !13717)
!13722 = !DILocation(line: 936, column: 99, scope: !13717)
!13723 = !DILocation(line: 936, column: 84, scope: !13717)
!13724 = !DILocation(line: 936, column: 21, scope: !13717)
!13725 = !DILocation(line: 937, column: 21, scope: !13717)
!13726 = !DILocation(line: 939, column: 13, scope: !13114)
!13727 = !DILocation(line: 933, column: 40, scope: !13728)
!13728 = !DILexicalBlockFile(scope: !13115, file: !1003, discriminator: 2)
!13729 = !DILocation(line: 933, column: 13, scope: !13728)
!13730 = distinct !{!13730, !13731}
!13731 = !DILocation(line: 933, column: 13, scope: !13117)
!13732 = !DILocation(line: 941, column: 5, scope: !13119)
!13733 = !DILocation(line: 922, column: 45, scope: !13734)
!13734 = !DILexicalBlockFile(scope: !13120, file: !1003, discriminator: 2)
!13735 = !DILocation(line: 922, column: 5, scope: !13734)
!13736 = distinct !{!13736, !13737}
!13737 = !DILocation(line: 922, column: 5, scope: !13110)
!13738 = !DILocation(line: 944, column: 12, scope: !13110)
!13739 = !DILocation(line: 944, column: 21, scope: !13110)
!13740 = !DILocation(line: 944, column: 5, scope: !13110)
!13741 = !DILocation(line: 944, column: 60, scope: !13110)
!13742 = !DILocation(line: 944, column: 69, scope: !13110)
!13743 = !DILocation(line: 944, column: 38, scope: !13110)
!13744 = !DILocation(line: 944, column: 47, scope: !13110)
!13745 = !DILocation(line: 946, column: 5, scope: !13110)
!13746 = !DILocation(line: 947, column: 1, scope: !13110)
!13747 = distinct !DISubprogram(name: "copy_sbr_grid", scope: !1003, file: !1003, line: 777, type: !13748, isLocal: true, isDefinition: true, scopeLine: 777, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!13748 = !DISubroutineType(types: !13749)
!13749 = !{null, !2516, !13750}
!13750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13751, size: 64, align: 64)
!13751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!13752 = !DILocalVariable(name: "dst", arg: 1, scope: !13747, file: !1003, line: 777, type: !2516)
!13753 = !DILocation(line: 777, column: 36, scope: !13747)
!13754 = !DILocalVariable(name: "src", arg: 2, scope: !13747, file: !1003, line: 777, type: !13750)
!13755 = !DILocation(line: 777, column: 56, scope: !13747)
!13756 = !DILocation(line: 779, column: 44, scope: !13747)
!13757 = !DILocation(line: 779, column: 49, scope: !13747)
!13758 = !DILocation(line: 779, column: 27, scope: !13747)
!13759 = !DILocation(line: 779, column: 32, scope: !13747)
!13760 = !DILocation(line: 779, column: 5, scope: !13747)
!13761 = !DILocation(line: 779, column: 10, scope: !13747)
!13762 = !DILocation(line: 779, column: 25, scope: !13747)
!13763 = !DILocation(line: 780, column: 41, scope: !13747)
!13764 = !DILocation(line: 780, column: 46, scope: !13747)
!13765 = !DILocation(line: 780, column: 30, scope: !13747)
!13766 = !DILocation(line: 780, column: 35, scope: !13747)
!13767 = !DILocation(line: 780, column: 5, scope: !13747)
!13768 = !DILocation(line: 780, column: 10, scope: !13747)
!13769 = !DILocation(line: 780, column: 28, scope: !13747)
!13770 = !DILocation(line: 781, column: 21, scope: !13747)
!13771 = !DILocation(line: 781, column: 26, scope: !13747)
!13772 = !DILocation(line: 781, column: 36, scope: !13747)
!13773 = !DILocation(line: 781, column: 41, scope: !13747)
!13774 = !DILocation(line: 781, column: 33, scope: !13747)
!13775 = !DILocation(line: 781, column: 19, scope: !13747)
!13776 = !DILocation(line: 781, column: 5, scope: !13747)
!13777 = !DILocation(line: 781, column: 10, scope: !13747)
!13778 = !DILocation(line: 781, column: 17, scope: !13747)
!13779 = !DILocation(line: 784, column: 12, scope: !13747)
!13780 = !DILocation(line: 784, column: 17, scope: !13747)
!13781 = !DILocation(line: 784, column: 28, scope: !13747)
!13782 = !DILocation(line: 784, column: 32, scope: !13747)
!13783 = !DILocation(line: 784, column: 37, scope: !13747)
!13784 = !DILocation(line: 784, column: 48, scope: !13747)
!13785 = !DILocation(line: 784, column: 5, scope: !13747)
!13786 = !DILocation(line: 785, column: 12, scope: !13747)
!13787 = !DILocation(line: 785, column: 17, scope: !13747)
!13788 = !DILocation(line: 785, column: 5, scope: !13747)
!13789 = !DILocation(line: 785, column: 24, scope: !13747)
!13790 = !DILocation(line: 785, column: 29, scope: !13747)
!13791 = !DILocation(line: 786, column: 12, scope: !13747)
!13792 = !DILocation(line: 786, column: 17, scope: !13747)
!13793 = !DILocation(line: 786, column: 5, scope: !13747)
!13794 = !DILocation(line: 786, column: 22, scope: !13747)
!13795 = !DILocation(line: 786, column: 27, scope: !13747)
!13796 = !DILocation(line: 787, column: 23, scope: !13747)
!13797 = !DILocation(line: 787, column: 28, scope: !13747)
!13798 = !DILocation(line: 787, column: 5, scope: !13747)
!13799 = !DILocation(line: 787, column: 10, scope: !13747)
!13800 = !DILocation(line: 787, column: 21, scope: !13747)
!13801 = !DILocation(line: 788, column: 23, scope: !13747)
!13802 = !DILocation(line: 788, column: 28, scope: !13747)
!13803 = !DILocation(line: 788, column: 5, scope: !13747)
!13804 = !DILocation(line: 788, column: 10, scope: !13747)
!13805 = !DILocation(line: 788, column: 21, scope: !13747)
!13806 = !DILocation(line: 789, column: 25, scope: !13747)
!13807 = !DILocation(line: 789, column: 30, scope: !13747)
!13808 = !DILocation(line: 789, column: 5, scope: !13747)
!13809 = !DILocation(line: 789, column: 10, scope: !13747)
!13810 = !DILocation(line: 789, column: 23, scope: !13747)
!13811 = !DILocation(line: 790, column: 27, scope: !13747)
!13812 = !DILocation(line: 790, column: 32, scope: !13747)
!13813 = !DILocation(line: 790, column: 5, scope: !13747)
!13814 = !DILocation(line: 790, column: 10, scope: !13747)
!13815 = !DILocation(line: 790, column: 25, scope: !13747)
!13816 = !DILocation(line: 791, column: 19, scope: !13747)
!13817 = !DILocation(line: 791, column: 24, scope: !13747)
!13818 = !DILocation(line: 791, column: 5, scope: !13747)
!13819 = !DILocation(line: 791, column: 10, scope: !13747)
!13820 = !DILocation(line: 791, column: 17, scope: !13747)
!13821 = !DILocation(line: 792, column: 1, scope: !13747)
!13822 = distinct !DISubprogram(name: "show_bits", scope: !2895, file: !2895, line: 443, type: !6586, isLocal: true, isDefinition: true, scopeLine: 444, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!13823 = !DILocation(line: 66, column: 98, scope: !6589, inlinedAt: !13824)
!13824 = distinct !DILocation(line: 454, column: 16, scope: !13822)
!13825 = !DILocalVariable(name: "s", arg: 1, scope: !13822, file: !2895, line: 443, type: !2893)
!13826 = !DILocation(line: 443, column: 53, scope: !13822)
!13827 = !DILocalVariable(name: "n", arg: 2, scope: !13822, file: !2895, line: 443, type: !958)
!13828 = !DILocation(line: 443, column: 60, scope: !13822)
!13829 = !DILocalVariable(name: "tmp", scope: !13822, file: !2895, line: 445, type: !958)
!13830 = !DILocation(line: 445, column: 18, scope: !13822)
!13831 = !DILocalVariable(name: "re_index", scope: !13822, file: !2895, line: 452, type: !985)
!13832 = !DILocation(line: 452, column: 18, scope: !13822)
!13833 = !DILocation(line: 452, column: 30, scope: !13822)
!13834 = !DILocation(line: 452, column: 34, scope: !13822)
!13835 = !DILocalVariable(name: "re_cache", scope: !13822, file: !2895, line: 452, type: !985)
!13836 = !DILocation(line: 452, column: 78, scope: !13822)
!13837 = !DILocation(line: 454, column: 60, scope: !13822)
!13838 = !DILocation(line: 454, column: 64, scope: !13822)
!13839 = !DILocation(line: 454, column: 74, scope: !13822)
!13840 = !DILocation(line: 454, column: 83, scope: !13822)
!13841 = !DILocation(line: 454, column: 71, scope: !13822)
!13842 = !DILocation(line: 454, column: 92, scope: !13822)
!13843 = !DILocation(line: 454, column: 16, scope: !13822)
!13844 = !DILocation(line: 68, column: 16, scope: !6589, inlinedAt: !13824)
!13845 = !DILocation(line: 68, column: 19, scope: !6589, inlinedAt: !13824)
!13846 = !DILocation(line: 68, column: 24, scope: !6589, inlinedAt: !13824)
!13847 = !DILocation(line: 68, column: 38, scope: !6589, inlinedAt: !13824)
!13848 = !DILocation(line: 68, column: 41, scope: !6589, inlinedAt: !13824)
!13849 = !DILocation(line: 68, column: 46, scope: !6589, inlinedAt: !13824)
!13850 = !DILocation(line: 68, column: 34, scope: !6589, inlinedAt: !13824)
!13851 = !DILocation(line: 68, column: 57, scope: !6589, inlinedAt: !13824)
!13852 = !DILocation(line: 68, column: 69, scope: !6589, inlinedAt: !13824)
!13853 = !DILocation(line: 68, column: 72, scope: !6589, inlinedAt: !13824)
!13854 = !DILocation(line: 68, column: 79, scope: !6589, inlinedAt: !13824)
!13855 = !DILocation(line: 68, column: 84, scope: !6589, inlinedAt: !13824)
!13856 = !DILocation(line: 68, column: 99, scope: !6589, inlinedAt: !13824)
!13857 = !DILocation(line: 68, column: 102, scope: !6589, inlinedAt: !13824)
!13858 = !DILocation(line: 68, column: 109, scope: !6589, inlinedAt: !13824)
!13859 = !DILocation(line: 68, column: 114, scope: !6589, inlinedAt: !13824)
!13860 = !DILocation(line: 68, column: 94, scope: !6589, inlinedAt: !13824)
!13861 = !DILocation(line: 68, column: 63, scope: !6589, inlinedAt: !13824)
!13862 = !DILocation(line: 454, column: 100, scope: !13822)
!13863 = !DILocation(line: 454, column: 109, scope: !13822)
!13864 = !DILocation(line: 454, column: 96, scope: !13822)
!13865 = !DILocation(line: 454, column: 14, scope: !13822)
!13866 = !DILocation(line: 455, column: 21, scope: !13822)
!13867 = !DILocation(line: 455, column: 31, scope: !13822)
!13868 = !DILocation(line: 455, column: 11, scope: !13822)
!13869 = !DILocation(line: 455, column: 9, scope: !13822)
!13870 = !DILocation(line: 457, column: 12, scope: !13822)
!13871 = !DILocation(line: 457, column: 5, scope: !13822)
!13872 = distinct !DISubprogram(name: "av_div_sf", scope: !1211, file: !1211, line: 116, type: !13873, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!13873 = !DISubroutineType(types: !13874)
!13874 = !{!1210, !1210, !1210}
!13875 = !DILocalVariable(name: "a", arg: 1, scope: !13872, file: !1211, line: 116, type: !1210)
!13876 = !DILocation(line: 116, column: 68, scope: !13872)
!13877 = !DILocalVariable(name: "b", arg: 2, scope: !13872, file: !1211, line: 116, type: !1210)
!13878 = !DILocation(line: 116, column: 81, scope: !13872)
!13879 = !DILocalVariable(name: "temp", scope: !13872, file: !1211, line: 117, type: !992)
!13880 = !DILocation(line: 117, column: 13, scope: !13872)
!13881 = !DILocation(line: 117, column: 31, scope: !13872)
!13882 = !DILocation(line: 117, column: 20, scope: !13872)
!13883 = !DILocation(line: 117, column: 36, scope: !13872)
!13884 = !DILocation(line: 118, column: 15, scope: !13872)
!13885 = !DILocation(line: 118, column: 13, scope: !13872)
!13886 = !DILocation(line: 118, column: 10, scope: !13872)
!13887 = !DILocation(line: 119, column: 16, scope: !13872)
!13888 = !DILocation(line: 119, column: 7, scope: !13872)
!13889 = !DILocation(line: 119, column: 11, scope: !13872)
!13890 = !DILocation(line: 120, column: 14, scope: !13872)
!13891 = !DILocation(line: 120, column: 7, scope: !13872)
!13892 = !DILocation(line: 120, column: 12, scope: !13872)
!13893 = !DILocation(line: 121, column: 5, scope: !13872)
!13894 = !DILocation(line: 121, column: 14, scope: !13895)
!13895 = !DILexicalBlockFile(scope: !13872, file: !1211, discriminator: 1)
!13896 = !DILocation(line: 121, column: 12, scope: !13895)
!13897 = !DILocation(line: 121, column: 22, scope: !13895)
!13898 = !DILocation(line: 121, column: 19, scope: !13895)
!13899 = !DILocation(line: 121, column: 5, scope: !13895)
!13900 = !DILocation(line: 122, column: 14, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13872, file: !1211, line: 121, column: 28)
!13902 = !DILocation(line: 123, column: 11, scope: !13901)
!13903 = !DILocation(line: 123, column: 14, scope: !13901)
!13904 = !DILocation(line: 124, column: 18, scope: !13901)
!13905 = !DILocation(line: 124, column: 11, scope: !13901)
!13906 = !DILocation(line: 124, column: 16, scope: !13901)
!13907 = !DILocation(line: 121, column: 5, scope: !13908)
!13908 = !DILexicalBlockFile(scope: !13872, file: !1211, discriminator: 2)
!13909 = distinct !{!13909, !13893}
!13910 = !DILocation(line: 126, column: 9, scope: !13872)
!13911 = !DILocation(line: 126, column: 9, scope: !13895)
!13912 = !DILocation(line: 127, column: 12, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13872, file: !1211, line: 127, column: 9)
!13914 = !DILocation(line: 127, column: 10, scope: !13913)
!13915 = !DILocation(line: 127, column: 17, scope: !13913)
!13916 = !DILocation(line: 127, column: 22, scope: !13917)
!13917 = !DILexicalBlockFile(scope: !13913, file: !1211, discriminator: 1)
!13918 = !DILocation(line: 127, column: 26, scope: !13917)
!13919 = !DILocation(line: 127, column: 9, scope: !13917)
!13920 = !DILocation(line: 128, column: 16, scope: !13913)
!13921 = !DILocation(line: 128, column: 9, scope: !13913)
!13922 = !DILocation(line: 129, column: 12, scope: !13872)
!13923 = !DILocation(line: 129, column: 5, scope: !13872)
!13924 = !DILocation(line: 130, column: 1, scope: !13872)
!13925 = distinct !DISubprogram(name: "av_add_sf", scope: !1211, file: !1211, line: 162, type: !13873, isLocal: true, isDefinition: true, scopeLine: 162, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!13926 = !DILocalVariable(name: "a", arg: 1, scope: !13925, file: !1211, line: 162, type: !1210)
!13927 = !DILocation(line: 162, column: 68, scope: !13925)
!13928 = !DILocalVariable(name: "b", arg: 2, scope: !13925, file: !1211, line: 162, type: !1210)
!13929 = !DILocation(line: 162, column: 81, scope: !13925)
!13930 = !DILocalVariable(name: "t", scope: !13925, file: !1211, line: 163, type: !958)
!13931 = !DILocation(line: 163, column: 9, scope: !13925)
!13932 = !DILocation(line: 163, column: 14, scope: !13925)
!13933 = !DILocation(line: 163, column: 22, scope: !13925)
!13934 = !DILocation(line: 163, column: 18, scope: !13925)
!13935 = !DILocation(line: 164, column: 9, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13925, file: !1211, line: 164, column: 9)
!13937 = !DILocation(line: 164, column: 11, scope: !13936)
!13938 = !DILocation(line: 164, column: 9, scope: !13925)
!13939 = !DILocation(line: 164, column: 24, scope: !13940)
!13940 = !DILexicalBlockFile(scope: !13936, file: !1211, discriminator: 1)
!13941 = !DILocation(line: 164, column: 17, scope: !13940)
!13942 = !DILocation(line: 165, column: 14, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !13936, file: !1211, line: 165, column: 14)
!13944 = !DILocation(line: 165, column: 16, scope: !13943)
!13945 = !DILocation(line: 165, column: 14, scope: !13936)
!13946 = !DILocation(line: 165, column: 72, scope: !13947)
!13947 = !DILexicalBlockFile(scope: !13943, file: !1211, discriminator: 1)
!13948 = !DILocation(line: 165, column: 76, scope: !13947)
!13949 = !DILocation(line: 165, column: 86, scope: !13947)
!13950 = !DILocation(line: 165, column: 96, scope: !13947)
!13951 = !DILocation(line: 165, column: 95, scope: !13947)
!13952 = !DILocation(line: 165, column: 91, scope: !13947)
!13953 = !DILocation(line: 165, column: 81, scope: !13947)
!13954 = !DILocation(line: 165, column: 103, scope: !13947)
!13955 = !DILocation(line: 165, column: 44, scope: !13947)
!13956 = !DILocation(line: 165, column: 28, scope: !13947)
!13957 = !DILocation(line: 165, column: 28, scope: !13958)
!13958 = !DILexicalBlockFile(scope: !13947, file: !1211, discriminator: 2)
!13959 = !DILocation(line: 165, column: 21, scope: !13947)
!13960 = !DILocation(line: 166, column: 14, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13943, file: !1211, line: 166, column: 14)
!13962 = !DILocation(line: 166, column: 16, scope: !13961)
!13963 = !DILocation(line: 166, column: 14, scope: !13943)
!13964 = !DILocation(line: 166, column: 73, scope: !13965)
!13965 = !DILexicalBlockFile(scope: !13961, file: !1211, discriminator: 1)
!13966 = !DILocation(line: 166, column: 77, scope: !13965)
!13967 = !DILocation(line: 166, column: 87, scope: !13965)
!13968 = !DILocation(line: 166, column: 95, scope: !13965)
!13969 = !DILocation(line: 166, column: 92, scope: !13965)
!13970 = !DILocation(line: 166, column: 82, scope: !13965)
!13971 = !DILocation(line: 166, column: 102, scope: !13965)
!13972 = !DILocation(line: 166, column: 45, scope: !13965)
!13973 = !DILocation(line: 166, column: 29, scope: !13965)
!13974 = !DILocation(line: 166, column: 29, scope: !13975)
!13975 = !DILexicalBlockFile(scope: !13965, file: !1211, discriminator: 2)
!13976 = !DILocation(line: 166, column: 22, scope: !13965)
!13977 = !DILocation(line: 167, column: 17, scope: !13961)
!13978 = !DILocation(line: 167, column: 10, scope: !13961)
!13979 = !DILocation(line: 168, column: 1, scope: !13925)
!13980 = distinct !DISubprogram(name: "av_mul_sf", scope: !1211, file: !1211, line: 102, type: !13873, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!13981 = !DILocalVariable(name: "a", arg: 1, scope: !13980, file: !1211, line: 102, type: !1210)
!13982 = !DILocation(line: 102, column: 68, scope: !13980)
!13983 = !DILocalVariable(name: "b", arg: 2, scope: !13980, file: !1211, line: 102, type: !1210)
!13984 = !DILocation(line: 102, column: 81, scope: !13980)
!13985 = !DILocation(line: 103, column: 16, scope: !13980)
!13986 = !DILocation(line: 103, column: 7, scope: !13980)
!13987 = !DILocation(line: 103, column: 11, scope: !13980)
!13988 = !DILocation(line: 105, column: 17, scope: !13980)
!13989 = !DILocation(line: 105, column: 15, scope: !13980)
!13990 = !DILocation(line: 105, column: 35, scope: !13980)
!13991 = !DILocation(line: 105, column: 24, scope: !13980)
!13992 = !DILocation(line: 105, column: 22, scope: !13980)
!13993 = !DILocation(line: 105, column: 41, scope: !13980)
!13994 = !DILocation(line: 105, column: 14, scope: !13980)
!13995 = !DILocation(line: 105, column: 7, scope: !13980)
!13996 = !DILocation(line: 105, column: 12, scope: !13980)
!13997 = !DILocation(line: 106, column: 37, scope: !13980)
!13998 = !DILocation(line: 106, column: 40, scope: !13980)
!13999 = !DILocation(line: 106, column: 48, scope: !13980)
!14000 = !DILocation(line: 106, column: 52, scope: !13980)
!14001 = !DILocation(line: 106, column: 9, scope: !13980)
!14002 = !DILocation(line: 106, column: 9, scope: !14003)
!14003 = !DILexicalBlockFile(scope: !13980, file: !1211, discriminator: 1)
!14004 = !DILocation(line: 107, column: 12, scope: !14005)
!14005 = distinct !DILexicalBlock(scope: !13980, file: !1211, line: 107, column: 9)
!14006 = !DILocation(line: 107, column: 10, scope: !14005)
!14007 = !DILocation(line: 107, column: 17, scope: !14005)
!14008 = !DILocation(line: 107, column: 22, scope: !14009)
!14009 = !DILexicalBlockFile(scope: !14005, file: !1211, discriminator: 1)
!14010 = !DILocation(line: 107, column: 26, scope: !14009)
!14011 = !DILocation(line: 107, column: 9, scope: !14009)
!14012 = !DILocation(line: 108, column: 16, scope: !14005)
!14013 = !DILocation(line: 108, column: 9, scope: !14005)
!14014 = !DILocation(line: 109, column: 12, scope: !13980)
!14015 = !DILocation(line: 109, column: 5, scope: !13980)
!14016 = !DILocation(line: 110, column: 1, scope: !13980)
!14017 = distinct !DISubprogram(name: "av_normalize1_sf", scope: !1211, file: !1211, line: 79, type: !5271, isLocal: true, isDefinition: true, scopeLine: 79, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!14018 = !DILocalVariable(name: "a", arg: 1, scope: !14017, file: !1211, line: 79, type: !1210)
!14019 = !DILocation(line: 79, column: 75, scope: !14017)
!14020 = !DILocation(line: 81, column: 20, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !14017, file: !1211, line: 81, column: 8)
!14022 = !DILocation(line: 81, column: 25, scope: !14021)
!14023 = !DILocation(line: 81, column: 40, scope: !14021)
!14024 = !DILocation(line: 81, column: 8, scope: !14017)
!14025 = !DILocation(line: 82, column: 11, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !14021, file: !1211, line: 81, column: 45)
!14027 = !DILocation(line: 82, column: 14, scope: !14026)
!14028 = !DILocation(line: 83, column: 11, scope: !14026)
!14029 = !DILocation(line: 83, column: 15, scope: !14026)
!14030 = !DILocation(line: 84, column: 5, scope: !14026)
!14031 = !DILocation(line: 87, column: 12, scope: !14017)
!14032 = !DILocation(line: 87, column: 5, scope: !14017)
!14033 = distinct !DISubprogram(name: "av_normalize_sf", scope: !1211, file: !1211, line: 57, type: !5271, isLocal: true, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!14034 = !DILocalVariable(name: "a", arg: 1, scope: !14033, file: !1211, line: 57, type: !1210)
!14035 = !DILocation(line: 57, column: 67, scope: !14033)
!14036 = !DILocation(line: 58, column: 10, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14033, file: !1211, line: 58, column: 8)
!14038 = !DILocation(line: 58, column: 8, scope: !14037)
!14039 = !DILocation(line: 58, column: 8, scope: !14033)
!14040 = !DILocation(line: 60, column: 9, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14037, file: !1211, line: 58, column: 15)
!14042 = !DILocation(line: 60, column: 18, scope: !14043)
!14043 = !DILexicalBlockFile(scope: !14041, file: !1211, discriminator: 1)
!14044 = !DILocation(line: 60, column: 23, scope: !14043)
!14045 = !DILocation(line: 60, column: 37, scope: !14043)
!14046 = !DILocation(line: 60, column: 9, scope: !14043)
!14047 = !DILocation(line: 61, column: 25, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14041, file: !1211, line: 60, column: 50)
!14049 = !DILocation(line: 61, column: 15, scope: !14048)
!14050 = !DILocation(line: 61, column: 20, scope: !14048)
!14051 = !DILocation(line: 62, column: 15, scope: !14048)
!14052 = !DILocation(line: 62, column: 19, scope: !14048)
!14053 = !DILocation(line: 60, column: 9, scope: !14054)
!14054 = !DILexicalBlockFile(scope: !14041, file: !1211, discriminator: 2)
!14055 = distinct !{!14055, !14040}
!14056 = !DILocation(line: 69, column: 14, scope: !14057)
!14057 = distinct !DILexicalBlock(scope: !14041, file: !1211, line: 69, column: 12)
!14058 = !DILocation(line: 69, column: 18, scope: !14057)
!14059 = !DILocation(line: 69, column: 12, scope: !14041)
!14060 = !DILocation(line: 70, column: 15, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14057, file: !1211, line: 69, column: 25)
!14062 = !DILocation(line: 70, column: 19, scope: !14061)
!14063 = !DILocation(line: 71, column: 15, scope: !14061)
!14064 = !DILocation(line: 71, column: 19, scope: !14061)
!14065 = !DILocation(line: 72, column: 9, scope: !14061)
!14066 = !DILocation(line: 73, column: 5, scope: !14041)
!14067 = !DILocation(line: 74, column: 11, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14037, file: !1211, line: 73, column: 10)
!14069 = !DILocation(line: 74, column: 14, scope: !14068)
!14070 = !DILocation(line: 76, column: 12, scope: !14033)
!14071 = !DILocation(line: 76, column: 5, scope: !14033)
!14072 = distinct !DISubprogram(name: "av_int2sf", scope: !1211, file: !1211, line: 185, type: !14073, isLocal: true, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!14073 = !DISubroutineType(types: !14074)
!14074 = !{!1210, !958, !958}
!14075 = !DILocalVariable(name: "v", arg: 1, scope: !14072, file: !1211, line: 185, type: !958)
!14076 = !DILocation(line: 185, column: 62, scope: !14072)
!14077 = !DILocalVariable(name: "frac_bits", arg: 2, scope: !14072, file: !1211, line: 185, type: !958)
!14078 = !DILocation(line: 185, column: 69, scope: !14072)
!14079 = !DILocalVariable(name: "exp_offset", scope: !14072, file: !1211, line: 186, type: !958)
!14080 = !DILocation(line: 186, column: 9, scope: !14072)
!14081 = !DILocation(line: 187, column: 8, scope: !14082)
!14082 = distinct !DILexicalBlock(scope: !14072, file: !1211, line: 187, column: 8)
!14083 = !DILocation(line: 187, column: 10, scope: !14082)
!14084 = !DILocation(line: 187, column: 8, scope: !14072)
!14085 = !DILocation(line: 188, column: 20, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14082, file: !1211, line: 187, column: 24)
!14087 = !DILocation(line: 189, column: 10, scope: !14086)
!14088 = !DILocation(line: 190, column: 5, scope: !14086)
!14089 = !DILocation(line: 191, column: 56, scope: !14072)
!14090 = !DILocation(line: 191, column: 57, scope: !14072)
!14091 = !DILocation(line: 191, column: 69, scope: !14072)
!14092 = !DILocation(line: 191, column: 67, scope: !14072)
!14093 = !DILocation(line: 191, column: 81, scope: !14072)
!14094 = !DILocation(line: 191, column: 79, scope: !14072)
!14095 = !DILocation(line: 191, column: 28, scope: !14072)
!14096 = !DILocation(line: 191, column: 12, scope: !14072)
!14097 = !DILocation(line: 191, column: 12, scope: !14098)
!14098 = !DILexicalBlockFile(scope: !14072, file: !1211, discriminator: 1)
!14099 = !DILocation(line: 191, column: 5, scope: !14072)
!14100 = distinct !DISubprogram(name: "av_gt_sf", scope: !1211, file: !1211, line: 150, type: !14101, isLocal: true, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!14101 = !DISubroutineType(types: !14102)
!14102 = !{!958, !1210, !1210}
!14103 = !DILocalVariable(name: "a", arg: 1, scope: !14100, file: !1211, line: 150, type: !1210)
!14104 = !DILocation(line: 150, column: 61, scope: !14100)
!14105 = !DILocalVariable(name: "b", arg: 2, scope: !14100, file: !1211, line: 150, type: !1210)
!14106 = !DILocation(line: 150, column: 74, scope: !14100)
!14107 = !DILocalVariable(name: "t", scope: !14100, file: !1211, line: 152, type: !958)
!14108 = !DILocation(line: 152, column: 9, scope: !14100)
!14109 = !DILocation(line: 152, column: 14, scope: !14100)
!14110 = !DILocation(line: 152, column: 22, scope: !14100)
!14111 = !DILocation(line: 152, column: 18, scope: !14100)
!14112 = !DILocation(line: 153, column: 9, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14100, file: !1211, line: 153, column: 9)
!14114 = !DILocation(line: 153, column: 11, scope: !14113)
!14115 = !DILocation(line: 153, column: 9, scope: !14100)
!14116 = !DILocation(line: 153, column: 30, scope: !14117)
!14117 = !DILexicalBlockFile(scope: !14113, file: !1211, discriminator: 1)
!14118 = !DILocation(line: 153, column: 26, scope: !14117)
!14119 = !DILocation(line: 153, column: 17, scope: !14117)
!14120 = !DILocation(line: 154, column: 14, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14113, file: !1211, line: 154, column: 14)
!14122 = !DILocation(line: 154, column: 16, scope: !14121)
!14123 = !DILocation(line: 154, column: 14, scope: !14113)
!14124 = !DILocation(line: 154, column: 31, scope: !14125)
!14125 = !DILexicalBlockFile(scope: !14121, file: !1211, discriminator: 1)
!14126 = !DILocation(line: 154, column: 41, scope: !14125)
!14127 = !DILocation(line: 154, column: 40, scope: !14125)
!14128 = !DILocation(line: 154, column: 36, scope: !14125)
!14129 = !DILocation(line: 154, column: 49, scope: !14125)
!14130 = !DILocation(line: 154, column: 45, scope: !14125)
!14131 = !DILocation(line: 154, column: 21, scope: !14125)
!14132 = !DILocation(line: 155, column: 14, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14121, file: !1211, line: 155, column: 14)
!14134 = !DILocation(line: 155, column: 16, scope: !14133)
!14135 = !DILocation(line: 155, column: 14, scope: !14121)
!14136 = !DILocation(line: 155, column: 31, scope: !14137)
!14137 = !DILexicalBlockFile(scope: !14133, file: !1211, discriminator: 1)
!14138 = !DILocation(line: 155, column: 41, scope: !14137)
!14139 = !DILocation(line: 155, column: 49, scope: !14137)
!14140 = !DILocation(line: 155, column: 46, scope: !14137)
!14141 = !DILocation(line: 155, column: 36, scope: !14137)
!14142 = !DILocation(line: 155, column: 22, scope: !14137)
!14143 = !DILocation(line: 156, column: 19, scope: !14133)
!14144 = !DILocation(line: 156, column: 24, scope: !14133)
!14145 = !DILocation(line: 156, column: 10, scope: !14133)
!14146 = !DILocation(line: 157, column: 1, scope: !14100)
!14147 = distinct !DISubprogram(name: "sbr_lf_gen", scope: !1003, file: !1003, line: 1266, type: !1508, isLocal: true, isDefinition: true, scopeLine: 1269, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!14148 = !DILocalVariable(name: "ac", arg: 1, scope: !14147, file: !1003, line: 1266, type: !1510)
!14149 = !DILocation(line: 1266, column: 35, scope: !14147)
!14150 = !DILocalVariable(name: "sbr", arg: 2, scope: !14147, file: !1003, line: 1266, type: !1125)
!14151 = !DILocation(line: 1266, column: 64, scope: !14147)
!14152 = !DILocalVariable(name: "X_low", arg: 3, scope: !14147, file: !1003, line: 1267, type: !2509)
!14153 = !DILocation(line: 1267, column: 32, scope: !14147)
!14154 = !DILocalVariable(name: "W", arg: 4, scope: !14147, file: !1003, line: 1267, type: !959)
!14155 = !DILocation(line: 1267, column: 65, scope: !14147)
!14156 = !DILocalVariable(name: "buf_idx", arg: 5, scope: !14147, file: !1003, line: 1268, type: !958)
!14157 = !DILocation(line: 1268, column: 27, scope: !14147)
!14158 = !DILocalVariable(name: "i", scope: !14147, file: !1003, line: 1270, type: !958)
!14159 = !DILocation(line: 1270, column: 9, scope: !14147)
!14160 = !DILocalVariable(name: "k", scope: !14147, file: !1003, line: 1270, type: !958)
!14161 = !DILocation(line: 1270, column: 12, scope: !14147)
!14162 = !DILocalVariable(name: "t_HFGen", scope: !14147, file: !1003, line: 1271, type: !1591)
!14163 = !DILocation(line: 1271, column: 15, scope: !14147)
!14164 = !DILocalVariable(name: "i_f", scope: !14147, file: !1003, line: 1272, type: !1591)
!14165 = !DILocation(line: 1272, column: 15, scope: !14147)
!14166 = !DILocation(line: 1273, column: 12, scope: !14147)
!14167 = !DILocation(line: 1273, column: 5, scope: !14147)
!14168 = !DILocation(line: 1274, column: 12, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14147, file: !1003, line: 1274, column: 5)
!14170 = !DILocation(line: 1274, column: 10, scope: !14169)
!14171 = !DILocation(line: 1274, column: 17, scope: !14172)
!14172 = !DILexicalBlockFile(scope: !14173, file: !1003, discriminator: 1)
!14173 = distinct !DILexicalBlock(scope: !14169, file: !1003, line: 1274, column: 5)
!14174 = !DILocation(line: 1274, column: 21, scope: !14172)
!14175 = !DILocation(line: 1274, column: 26, scope: !14172)
!14176 = !DILocation(line: 1274, column: 19, scope: !14172)
!14177 = !DILocation(line: 1274, column: 5, scope: !14172)
!14178 = !DILocation(line: 1275, column: 16, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14180, file: !1003, line: 1275, column: 9)
!14180 = distinct !DILexicalBlock(scope: !14173, file: !1003, line: 1274, column: 38)
!14181 = !DILocation(line: 1275, column: 14, scope: !14179)
!14182 = !DILocation(line: 1275, column: 27, scope: !14183)
!14183 = !DILexicalBlockFile(scope: !14184, file: !1003, discriminator: 1)
!14184 = distinct !DILexicalBlock(scope: !14179, file: !1003, line: 1275, column: 9)
!14185 = !DILocation(line: 1275, column: 29, scope: !14183)
!14186 = !DILocation(line: 1275, column: 9, scope: !14183)
!14187 = !DILocation(line: 1276, column: 54, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14184, file: !1003, line: 1275, column: 51)
!14189 = !DILocation(line: 1276, column: 30, scope: !14188)
!14190 = !DILocation(line: 1276, column: 41, scope: !14188)
!14191 = !DILocation(line: 1276, column: 43, scope: !14188)
!14192 = !DILocation(line: 1276, column: 32, scope: !14188)
!14193 = !DILocation(line: 1276, column: 22, scope: !14188)
!14194 = !DILocation(line: 1276, column: 13, scope: !14188)
!14195 = !DILocation(line: 1276, column: 19, scope: !14188)
!14196 = !DILocation(line: 1276, column: 28, scope: !14188)
!14197 = !DILocation(line: 1277, column: 54, scope: !14188)
!14198 = !DILocation(line: 1277, column: 30, scope: !14188)
!14199 = !DILocation(line: 1277, column: 41, scope: !14188)
!14200 = !DILocation(line: 1277, column: 43, scope: !14188)
!14201 = !DILocation(line: 1277, column: 32, scope: !14188)
!14202 = !DILocation(line: 1277, column: 22, scope: !14188)
!14203 = !DILocation(line: 1277, column: 13, scope: !14188)
!14204 = !DILocation(line: 1277, column: 19, scope: !14188)
!14205 = !DILocation(line: 1277, column: 28, scope: !14188)
!14206 = !DILocation(line: 1278, column: 9, scope: !14188)
!14207 = !DILocation(line: 1275, column: 47, scope: !14208)
!14208 = !DILexicalBlockFile(scope: !14184, file: !1003, discriminator: 2)
!14209 = !DILocation(line: 1275, column: 9, scope: !14208)
!14210 = distinct !{!14210, !14211}
!14211 = !DILocation(line: 1275, column: 9, scope: !14180)
!14212 = !DILocation(line: 1279, column: 5, scope: !14180)
!14213 = !DILocation(line: 1274, column: 34, scope: !14214)
!14214 = !DILexicalBlockFile(scope: !14173, file: !1003, discriminator: 2)
!14215 = !DILocation(line: 1274, column: 5, scope: !14214)
!14216 = distinct !{!14216, !14217}
!14217 = !DILocation(line: 1274, column: 5, scope: !14147)
!14218 = !DILocation(line: 1280, column: 17, scope: !14147)
!14219 = !DILocation(line: 1280, column: 16, scope: !14147)
!14220 = !DILocation(line: 1280, column: 13, scope: !14147)
!14221 = !DILocation(line: 1281, column: 12, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14147, file: !1003, line: 1281, column: 5)
!14223 = !DILocation(line: 1281, column: 10, scope: !14222)
!14224 = !DILocation(line: 1281, column: 17, scope: !14225)
!14225 = !DILexicalBlockFile(scope: !14226, file: !1003, discriminator: 1)
!14226 = distinct !DILexicalBlock(scope: !14222, file: !1003, line: 1281, column: 5)
!14227 = !DILocation(line: 1281, column: 21, scope: !14225)
!14228 = !DILocation(line: 1281, column: 26, scope: !14225)
!14229 = !DILocation(line: 1281, column: 19, scope: !14225)
!14230 = !DILocation(line: 1281, column: 5, scope: !14225)
!14231 = !DILocation(line: 1282, column: 16, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !14233, file: !1003, line: 1282, column: 9)
!14233 = distinct !DILexicalBlock(scope: !14226, file: !1003, line: 1281, column: 38)
!14234 = !DILocation(line: 1282, column: 14, scope: !14232)
!14235 = !DILocation(line: 1282, column: 21, scope: !14236)
!14236 = !DILexicalBlockFile(scope: !14237, file: !1003, discriminator: 1)
!14237 = distinct !DILexicalBlock(scope: !14232, file: !1003, line: 1282, column: 9)
!14238 = !DILocation(line: 1282, column: 23, scope: !14236)
!14239 = !DILocation(line: 1282, column: 9, scope: !14236)
!14240 = !DILocation(line: 1283, column: 60, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14237, file: !1003, line: 1282, column: 39)
!14242 = !DILocation(line: 1283, column: 30, scope: !14241)
!14243 = !DILocation(line: 1283, column: 41, scope: !14241)
!14244 = !DILocation(line: 1283, column: 43, scope: !14241)
!14245 = !DILocation(line: 1283, column: 49, scope: !14241)
!14246 = !DILocation(line: 1283, column: 32, scope: !14241)
!14247 = !DILocation(line: 1283, column: 22, scope: !14241)
!14248 = !DILocation(line: 1283, column: 13, scope: !14241)
!14249 = !DILocation(line: 1283, column: 19, scope: !14241)
!14250 = !DILocation(line: 1283, column: 28, scope: !14241)
!14251 = !DILocation(line: 1284, column: 60, scope: !14241)
!14252 = !DILocation(line: 1284, column: 30, scope: !14241)
!14253 = !DILocation(line: 1284, column: 41, scope: !14241)
!14254 = !DILocation(line: 1284, column: 43, scope: !14241)
!14255 = !DILocation(line: 1284, column: 49, scope: !14241)
!14256 = !DILocation(line: 1284, column: 32, scope: !14241)
!14257 = !DILocation(line: 1284, column: 22, scope: !14241)
!14258 = !DILocation(line: 1284, column: 13, scope: !14241)
!14259 = !DILocation(line: 1284, column: 19, scope: !14241)
!14260 = !DILocation(line: 1284, column: 28, scope: !14241)
!14261 = !DILocation(line: 1285, column: 9, scope: !14241)
!14262 = !DILocation(line: 1282, column: 35, scope: !14263)
!14263 = !DILexicalBlockFile(scope: !14237, file: !1003, discriminator: 2)
!14264 = !DILocation(line: 1282, column: 9, scope: !14263)
!14265 = distinct !{!14265, !14266}
!14266 = !DILocation(line: 1282, column: 9, scope: !14233)
!14267 = !DILocation(line: 1286, column: 5, scope: !14233)
!14268 = !DILocation(line: 1281, column: 34, scope: !14269)
!14269 = !DILexicalBlockFile(scope: !14226, file: !1003, discriminator: 2)
!14270 = !DILocation(line: 1281, column: 5, scope: !14269)
!14271 = distinct !{!14271, !14272}
!14272 = !DILocation(line: 1281, column: 5, scope: !14147)
!14273 = !DILocation(line: 1287, column: 5, scope: !14147)
!14274 = !DILocalVariable(name: "Y1", arg: 1, scope: !2567, file: !1058, line: 489, type: !2570)
!14275 = !DILocation(line: 489, column: 33, scope: !2567)
!14276 = !DILocalVariable(name: "X_high", arg: 2, scope: !2567, file: !1058, line: 490, type: !2572)
!14277 = !DILocation(line: 490, column: 39, scope: !2567)
!14278 = !DILocalVariable(name: "sbr", arg: 3, scope: !2567, file: !1058, line: 491, type: !1125)
!14279 = !DILocation(line: 491, column: 54, scope: !2567)
!14280 = !DILocalVariable(name: "ch_data", arg: 4, scope: !2567, file: !1058, line: 491, type: !2516)
!14281 = !DILocation(line: 491, column: 68, scope: !2567)
!14282 = !DILocalVariable(name: "e_a", arg: 5, scope: !2567, file: !1058, line: 492, type: !1590)
!14283 = !DILocation(line: 492, column: 39, scope: !2567)
!14284 = !DILocalVariable(name: "e", scope: !2567, file: !1058, line: 494, type: !958)
!14285 = !DILocation(line: 494, column: 9, scope: !2567)
!14286 = !DILocalVariable(name: "i", scope: !2567, file: !1058, line: 494, type: !958)
!14287 = !DILocation(line: 494, column: 12, scope: !2567)
!14288 = !DILocalVariable(name: "j", scope: !2567, file: !1058, line: 494, type: !958)
!14289 = !DILocation(line: 494, column: 15, scope: !2567)
!14290 = !DILocalVariable(name: "m", scope: !2567, file: !1058, line: 494, type: !958)
!14291 = !DILocation(line: 494, column: 18, scope: !2567)
!14292 = !DILocalVariable(name: "h_SL", scope: !2567, file: !1058, line: 495, type: !1591)
!14293 = !DILocation(line: 495, column: 15, scope: !2567)
!14294 = !DILocation(line: 495, column: 27, scope: !2567)
!14295 = !DILocation(line: 495, column: 32, scope: !2567)
!14296 = !DILocation(line: 495, column: 26, scope: !2567)
!14297 = !DILocation(line: 495, column: 24, scope: !2567)
!14298 = !DILocalVariable(name: "kx", scope: !2567, file: !1058, line: 496, type: !1591)
!14299 = !DILocation(line: 496, column: 15, scope: !2567)
!14300 = !DILocation(line: 496, column: 20, scope: !2567)
!14301 = !DILocation(line: 496, column: 25, scope: !2567)
!14302 = !DILocalVariable(name: "m_max", scope: !2567, file: !1058, line: 497, type: !1591)
!14303 = !DILocation(line: 497, column: 15, scope: !2567)
!14304 = !DILocation(line: 497, column: 23, scope: !2567)
!14305 = !DILocation(line: 497, column: 28, scope: !2567)
!14306 = !DILocalVariable(name: "g_temp", scope: !2567, file: !1058, line: 505, type: !14307)
!14307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14308, size: 64, align: 64)
!14308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1210, size: 3072, align: 32, elements: !1183)
!14309 = !DILocation(line: 505, column: 17, scope: !2567)
!14310 = !DILocation(line: 505, column: 31, scope: !2567)
!14311 = !DILocation(line: 505, column: 40, scope: !2567)
!14312 = !DILocalVariable(name: "q_temp", scope: !2567, file: !1058, line: 505, type: !14307)
!14313 = !DILocation(line: 505, column: 50, scope: !2567)
!14314 = !DILocation(line: 505, column: 64, scope: !2567)
!14315 = !DILocation(line: 505, column: 73, scope: !2567)
!14316 = !DILocalVariable(name: "indexnoise", scope: !2567, file: !1058, line: 506, type: !958)
!14317 = !DILocation(line: 506, column: 9, scope: !2567)
!14318 = !DILocation(line: 506, column: 22, scope: !2567)
!14319 = !DILocation(line: 506, column: 31, scope: !2567)
!14320 = !DILocalVariable(name: "indexsine", scope: !2567, file: !1058, line: 507, type: !958)
!14321 = !DILocation(line: 507, column: 9, scope: !2567)
!14322 = !DILocation(line: 507, column: 21, scope: !2567)
!14323 = !DILocation(line: 507, column: 30, scope: !2567)
!14324 = !DILocation(line: 509, column: 9, scope: !14325)
!14325 = distinct !DILexicalBlock(scope: !2567, file: !1058, line: 509, column: 9)
!14326 = !DILocation(line: 509, column: 14, scope: !14325)
!14327 = !DILocation(line: 509, column: 9, scope: !2567)
!14328 = !DILocation(line: 510, column: 16, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !14330, file: !1058, line: 510, column: 9)
!14330 = distinct !DILexicalBlock(scope: !14325, file: !1058, line: 509, column: 21)
!14331 = !DILocation(line: 510, column: 14, scope: !14329)
!14332 = !DILocation(line: 510, column: 21, scope: !14333)
!14333 = !DILexicalBlockFile(scope: !14334, file: !1058, discriminator: 1)
!14334 = distinct !DILexicalBlock(scope: !14329, file: !1058, line: 510, column: 9)
!14335 = !DILocation(line: 510, column: 25, scope: !14333)
!14336 = !DILocation(line: 510, column: 23, scope: !14333)
!14337 = !DILocation(line: 510, column: 9, scope: !14333)
!14338 = !DILocation(line: 511, column: 27, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14334, file: !1058, line: 510, column: 36)
!14340 = !DILocation(line: 511, column: 33, scope: !14339)
!14341 = !DILocation(line: 511, column: 42, scope: !14339)
!14342 = !DILocation(line: 511, column: 32, scope: !14339)
!14343 = !DILocation(line: 511, column: 29, scope: !14339)
!14344 = !DILocation(line: 511, column: 20, scope: !14339)
!14345 = !DILocation(line: 511, column: 13, scope: !14339)
!14346 = !DILocation(line: 511, column: 53, scope: !14339)
!14347 = !DILocation(line: 511, column: 58, scope: !14339)
!14348 = !DILocation(line: 511, column: 67, scope: !14339)
!14349 = !DILocation(line: 511, column: 73, scope: !14339)
!14350 = !DILocation(line: 512, column: 27, scope: !14339)
!14351 = !DILocation(line: 512, column: 33, scope: !14339)
!14352 = !DILocation(line: 512, column: 42, scope: !14339)
!14353 = !DILocation(line: 512, column: 32, scope: !14339)
!14354 = !DILocation(line: 512, column: 29, scope: !14339)
!14355 = !DILocation(line: 512, column: 20, scope: !14339)
!14356 = !DILocation(line: 512, column: 13, scope: !14339)
!14357 = !DILocation(line: 512, column: 53, scope: !14339)
!14358 = !DILocation(line: 512, column: 58, scope: !14339)
!14359 = !DILocation(line: 512, column: 66, scope: !14339)
!14360 = !DILocation(line: 512, column: 72, scope: !14339)
!14361 = !DILocation(line: 513, column: 9, scope: !14339)
!14362 = !DILocation(line: 510, column: 32, scope: !14363)
!14363 = !DILexicalBlockFile(scope: !14334, file: !1058, discriminator: 2)
!14364 = !DILocation(line: 510, column: 9, scope: !14363)
!14365 = distinct !{!14365, !14366}
!14366 = !DILocation(line: 510, column: 9, scope: !14330)
!14367 = !DILocation(line: 514, column: 5, scope: !14330)
!14368 = !DILocation(line: 514, column: 16, scope: !14369)
!14369 = !DILexicalBlockFile(scope: !14370, file: !1058, discriminator: 1)
!14370 = distinct !DILexicalBlock(scope: !14325, file: !1058, line: 514, column: 16)
!14371 = !DILocation(line: 515, column: 16, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14373, file: !1058, line: 515, column: 9)
!14373 = distinct !DILexicalBlock(scope: !14370, file: !1058, line: 514, column: 22)
!14374 = !DILocation(line: 515, column: 14, scope: !14372)
!14375 = !DILocation(line: 515, column: 21, scope: !14376)
!14376 = !DILexicalBlockFile(scope: !14377, file: !1058, discriminator: 1)
!14377 = distinct !DILexicalBlock(scope: !14372, file: !1058, line: 515, column: 9)
!14378 = !DILocation(line: 515, column: 23, scope: !14376)
!14379 = !DILocation(line: 515, column: 9, scope: !14376)
!14380 = !DILocation(line: 516, column: 27, scope: !14381)
!14381 = distinct !DILexicalBlock(scope: !14377, file: !1058, line: 515, column: 33)
!14382 = !DILocation(line: 516, column: 35, scope: !14381)
!14383 = !DILocation(line: 516, column: 44, scope: !14381)
!14384 = !DILocation(line: 516, column: 33, scope: !14381)
!14385 = !DILocation(line: 516, column: 29, scope: !14381)
!14386 = !DILocation(line: 516, column: 20, scope: !14381)
!14387 = !DILocation(line: 516, column: 13, scope: !14381)
!14388 = !DILocation(line: 517, column: 27, scope: !14381)
!14389 = !DILocation(line: 517, column: 35, scope: !14381)
!14390 = !DILocation(line: 517, column: 44, scope: !14381)
!14391 = !DILocation(line: 517, column: 33, scope: !14381)
!14392 = !DILocation(line: 517, column: 29, scope: !14381)
!14393 = !DILocation(line: 517, column: 20, scope: !14381)
!14394 = !DILocation(line: 519, column: 27, scope: !14381)
!14395 = !DILocation(line: 519, column: 35, scope: !14381)
!14396 = !DILocation(line: 519, column: 44, scope: !14381)
!14397 = !DILocation(line: 519, column: 33, scope: !14381)
!14398 = !DILocation(line: 519, column: 29, scope: !14381)
!14399 = !DILocation(line: 519, column: 20, scope: !14381)
!14400 = !DILocation(line: 519, column: 13, scope: !14381)
!14401 = !DILocation(line: 520, column: 27, scope: !14381)
!14402 = !DILocation(line: 520, column: 35, scope: !14381)
!14403 = !DILocation(line: 520, column: 44, scope: !14381)
!14404 = !DILocation(line: 520, column: 33, scope: !14381)
!14405 = !DILocation(line: 520, column: 29, scope: !14381)
!14406 = !DILocation(line: 520, column: 20, scope: !14381)
!14407 = !DILocation(line: 522, column: 9, scope: !14381)
!14408 = !DILocation(line: 515, column: 29, scope: !14409)
!14409 = !DILexicalBlockFile(scope: !14377, file: !1058, discriminator: 2)
!14410 = !DILocation(line: 515, column: 9, scope: !14409)
!14411 = distinct !{!14411, !14412}
!14412 = !DILocation(line: 515, column: 9, scope: !14373)
!14413 = !DILocation(line: 523, column: 5, scope: !14373)
!14414 = !DILocation(line: 525, column: 12, scope: !14415)
!14415 = distinct !DILexicalBlock(scope: !2567, file: !1058, line: 525, column: 5)
!14416 = !DILocation(line: 525, column: 10, scope: !14415)
!14417 = !DILocation(line: 525, column: 17, scope: !14418)
!14418 = !DILexicalBlockFile(scope: !14419, file: !1058, discriminator: 1)
!14419 = distinct !DILexicalBlock(scope: !14415, file: !1058, line: 525, column: 5)
!14420 = !DILocation(line: 525, column: 21, scope: !14418)
!14421 = !DILocation(line: 525, column: 30, scope: !14418)
!14422 = !DILocation(line: 525, column: 19, scope: !14418)
!14423 = !DILocation(line: 525, column: 5, scope: !14418)
!14424 = !DILocation(line: 526, column: 37, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14426, file: !1058, line: 526, column: 9)
!14426 = distinct !DILexicalBlock(scope: !14419, file: !1058, line: 525, column: 47)
!14427 = !DILocation(line: 526, column: 22, scope: !14425)
!14428 = !DILocation(line: 526, column: 31, scope: !14425)
!14429 = !DILocation(line: 526, column: 20, scope: !14425)
!14430 = !DILocation(line: 526, column: 16, scope: !14425)
!14431 = !DILocation(line: 526, column: 14, scope: !14425)
!14432 = !DILocation(line: 526, column: 41, scope: !14433)
!14433 = !DILexicalBlockFile(scope: !14434, file: !1058, discriminator: 1)
!14434 = distinct !DILexicalBlock(scope: !14425, file: !1058, line: 526, column: 9)
!14435 = !DILocation(line: 526, column: 64, scope: !14433)
!14436 = !DILocation(line: 526, column: 66, scope: !14433)
!14437 = !DILocation(line: 526, column: 49, scope: !14433)
!14438 = !DILocation(line: 526, column: 58, scope: !14433)
!14439 = !DILocation(line: 526, column: 47, scope: !14433)
!14440 = !DILocation(line: 526, column: 43, scope: !14433)
!14441 = !DILocation(line: 526, column: 9, scope: !14433)
!14442 = !DILocation(line: 527, column: 27, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14434, file: !1058, line: 526, column: 77)
!14444 = !DILocation(line: 527, column: 34, scope: !14443)
!14445 = !DILocation(line: 527, column: 32, scope: !14443)
!14446 = !DILocation(line: 527, column: 20, scope: !14443)
!14447 = !DILocation(line: 527, column: 13, scope: !14443)
!14448 = !DILocation(line: 527, column: 48, scope: !14443)
!14449 = !DILocation(line: 527, column: 38, scope: !14443)
!14450 = !DILocation(line: 527, column: 43, scope: !14443)
!14451 = !DILocation(line: 527, column: 52, scope: !14443)
!14452 = !DILocation(line: 527, column: 58, scope: !14443)
!14453 = !DILocation(line: 528, column: 27, scope: !14443)
!14454 = !DILocation(line: 528, column: 34, scope: !14443)
!14455 = !DILocation(line: 528, column: 32, scope: !14443)
!14456 = !DILocation(line: 528, column: 20, scope: !14443)
!14457 = !DILocation(line: 528, column: 13, scope: !14443)
!14458 = !DILocation(line: 528, column: 47, scope: !14443)
!14459 = !DILocation(line: 528, column: 38, scope: !14443)
!14460 = !DILocation(line: 528, column: 43, scope: !14443)
!14461 = !DILocation(line: 528, column: 51, scope: !14443)
!14462 = !DILocation(line: 528, column: 57, scope: !14443)
!14463 = !DILocation(line: 529, column: 9, scope: !14443)
!14464 = !DILocation(line: 526, column: 73, scope: !14465)
!14465 = !DILexicalBlockFile(scope: !14434, file: !1058, discriminator: 2)
!14466 = !DILocation(line: 526, column: 9, scope: !14465)
!14467 = distinct !{!14467, !14468}
!14468 = !DILocation(line: 526, column: 9, scope: !14426)
!14469 = !DILocation(line: 530, column: 5, scope: !14426)
!14470 = !DILocation(line: 525, column: 43, scope: !14471)
!14471 = !DILexicalBlockFile(scope: !14419, file: !1058, discriminator: 2)
!14472 = !DILocation(line: 525, column: 5, scope: !14471)
!14473 = distinct !{!14473, !14474}
!14474 = !DILocation(line: 525, column: 5, scope: !2567)
!14475 = !DILocation(line: 532, column: 12, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !2567, file: !1058, line: 532, column: 5)
!14477 = !DILocation(line: 532, column: 10, scope: !14476)
!14478 = !DILocation(line: 532, column: 17, scope: !14479)
!14479 = !DILexicalBlockFile(scope: !14480, file: !1058, discriminator: 1)
!14480 = distinct !DILexicalBlock(scope: !14476, file: !1058, line: 532, column: 5)
!14481 = !DILocation(line: 532, column: 21, scope: !14479)
!14482 = !DILocation(line: 532, column: 30, scope: !14479)
!14483 = !DILocation(line: 532, column: 19, scope: !14479)
!14484 = !DILocation(line: 532, column: 5, scope: !14479)
!14485 = !DILocation(line: 533, column: 37, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14487, file: !1058, line: 533, column: 9)
!14487 = distinct !DILexicalBlock(scope: !14480, file: !1058, line: 532, column: 47)
!14488 = !DILocation(line: 533, column: 22, scope: !14486)
!14489 = !DILocation(line: 533, column: 31, scope: !14486)
!14490 = !DILocation(line: 533, column: 20, scope: !14486)
!14491 = !DILocation(line: 533, column: 16, scope: !14486)
!14492 = !DILocation(line: 533, column: 14, scope: !14486)
!14493 = !DILocation(line: 533, column: 41, scope: !14494)
!14494 = !DILexicalBlockFile(scope: !14495, file: !1058, discriminator: 1)
!14495 = distinct !DILexicalBlock(scope: !14486, file: !1058, line: 533, column: 9)
!14496 = !DILocation(line: 533, column: 64, scope: !14494)
!14497 = !DILocation(line: 533, column: 66, scope: !14494)
!14498 = !DILocation(line: 533, column: 49, scope: !14494)
!14499 = !DILocation(line: 533, column: 58, scope: !14494)
!14500 = !DILocation(line: 533, column: 47, scope: !14494)
!14501 = !DILocation(line: 533, column: 43, scope: !14494)
!14502 = !DILocation(line: 533, column: 9, scope: !14494)
!14503 = !DILocalVariable(name: "g_filt_tab", scope: !14504, file: !1058, line: 534, type: !14308)
!14504 = distinct !DILexicalBlock(scope: !14495, file: !1058, line: 533, column: 77)
!14505 = !DILocation(line: 534, column: 23, scope: !14504)
!14506 = !DILocalVariable(name: "q_filt_tab", scope: !14504, file: !1058, line: 535, type: !14308)
!14507 = !DILocation(line: 535, column: 23, scope: !14504)
!14508 = !DILocalVariable(name: "g_filt", scope: !14504, file: !1058, line: 536, type: !14509)
!14509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64, align: 64)
!14510 = !DILocation(line: 536, column: 24, scope: !14504)
!14511 = !DILocalVariable(name: "q_filt", scope: !14504, file: !1058, line: 536, type: !14509)
!14512 = !DILocation(line: 536, column: 33, scope: !14504)
!14513 = !DILocation(line: 538, column: 17, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !14504, file: !1058, line: 538, column: 17)
!14515 = !DILocation(line: 538, column: 22, scope: !14514)
!14516 = !DILocation(line: 538, column: 25, scope: !14517)
!14517 = !DILexicalBlockFile(scope: !14514, file: !1058, discriminator: 1)
!14518 = !DILocation(line: 538, column: 30, scope: !14517)
!14519 = !DILocation(line: 538, column: 27, scope: !14517)
!14520 = !DILocation(line: 538, column: 37, scope: !14517)
!14521 = !DILocation(line: 538, column: 40, scope: !14522)
!14522 = !DILexicalBlockFile(scope: !14514, file: !1058, discriminator: 2)
!14523 = !DILocation(line: 538, column: 45, scope: !14522)
!14524 = !DILocation(line: 538, column: 42, scope: !14522)
!14525 = !DILocation(line: 538, column: 17, scope: !14522)
!14526 = !DILocation(line: 539, column: 26, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !14514, file: !1058, line: 538, column: 53)
!14528 = !DILocation(line: 539, column: 24, scope: !14527)
!14529 = !DILocation(line: 540, column: 26, scope: !14527)
!14530 = !DILocation(line: 540, column: 24, scope: !14527)
!14531 = !DILocation(line: 541, column: 24, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14527, file: !1058, line: 541, column: 17)
!14533 = !DILocation(line: 541, column: 22, scope: !14532)
!14534 = !DILocation(line: 541, column: 29, scope: !14535)
!14535 = !DILexicalBlockFile(scope: !14536, file: !1058, discriminator: 1)
!14536 = distinct !DILexicalBlock(scope: !14532, file: !1058, line: 541, column: 17)
!14537 = !DILocation(line: 541, column: 33, scope: !14535)
!14538 = !DILocation(line: 541, column: 31, scope: !14535)
!14539 = !DILocation(line: 541, column: 17, scope: !14535)
!14540 = !DILocalVariable(name: "idx1", scope: !14541, file: !1058, line: 542, type: !1591)
!14541 = distinct !DILexicalBlock(scope: !14536, file: !1058, line: 541, column: 45)
!14542 = !DILocation(line: 542, column: 31, scope: !14541)
!14543 = !DILocation(line: 542, column: 38, scope: !14541)
!14544 = !DILocation(line: 542, column: 42, scope: !14541)
!14545 = !DILocation(line: 542, column: 40, scope: !14541)
!14546 = !DILocation(line: 543, column: 45, scope: !14541)
!14547 = !DILocation(line: 543, column: 38, scope: !14541)
!14548 = !DILocation(line: 543, column: 48, scope: !14541)
!14549 = !DILocation(line: 543, column: 52, scope: !14541)
!14550 = !DILocation(line: 543, column: 28, scope: !14541)
!14551 = !DILocation(line: 543, column: 21, scope: !14541)
!14552 = !DILocation(line: 543, column: 31, scope: !14541)
!14553 = !DILocation(line: 543, column: 36, scope: !14541)
!14554 = !DILocation(line: 544, column: 45, scope: !14541)
!14555 = !DILocation(line: 544, column: 38, scope: !14541)
!14556 = !DILocation(line: 544, column: 48, scope: !14541)
!14557 = !DILocation(line: 544, column: 52, scope: !14541)
!14558 = !DILocation(line: 544, column: 28, scope: !14541)
!14559 = !DILocation(line: 544, column: 21, scope: !14541)
!14560 = !DILocation(line: 544, column: 31, scope: !14541)
!14561 = !DILocation(line: 544, column: 36, scope: !14541)
!14562 = !DILocation(line: 545, column: 28, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14541, file: !1058, line: 545, column: 21)
!14564 = !DILocation(line: 545, column: 26, scope: !14563)
!14565 = !DILocation(line: 545, column: 33, scope: !14566)
!14566 = !DILexicalBlockFile(scope: !14567, file: !1058, discriminator: 1)
!14567 = distinct !DILexicalBlock(scope: !14563, file: !1058, line: 545, column: 21)
!14568 = !DILocation(line: 545, column: 38, scope: !14566)
!14569 = !DILocation(line: 545, column: 35, scope: !14566)
!14570 = !DILocation(line: 545, column: 21, scope: !14566)
!14571 = !DILocation(line: 546, column: 32, scope: !14572)
!14572 = distinct !DILexicalBlock(scope: !14567, file: !1058, line: 545, column: 49)
!14573 = !DILocation(line: 546, column: 25, scope: !14572)
!14574 = !DILocation(line: 546, column: 54, scope: !14572)
!14575 = !DILocation(line: 546, column: 47, scope: !14572)
!14576 = !DILocation(line: 547, column: 68, scope: !14572)
!14577 = !DILocation(line: 547, column: 51, scope: !14572)
!14578 = !DILocation(line: 547, column: 58, scope: !14572)
!14579 = !DILocation(line: 547, column: 65, scope: !14572)
!14580 = !DILocation(line: 547, column: 63, scope: !14572)
!14581 = !DILocation(line: 548, column: 54, scope: !14572)
!14582 = !DILocation(line: 548, column: 45, scope: !14572)
!14583 = !DILocation(line: 547, column: 41, scope: !14572)
!14584 = !DILocation(line: 546, column: 37, scope: !14572)
!14585 = !DILocation(line: 546, column: 37, scope: !14586)
!14586 = !DILexicalBlockFile(scope: !14572, file: !1058, discriminator: 1)
!14587 = !DILocation(line: 549, column: 32, scope: !14572)
!14588 = !DILocation(line: 549, column: 25, scope: !14572)
!14589 = !DILocation(line: 549, column: 54, scope: !14572)
!14590 = !DILocation(line: 549, column: 47, scope: !14572)
!14591 = !DILocation(line: 550, column: 68, scope: !14572)
!14592 = !DILocation(line: 550, column: 51, scope: !14572)
!14593 = !DILocation(line: 550, column: 58, scope: !14572)
!14594 = !DILocation(line: 550, column: 65, scope: !14572)
!14595 = !DILocation(line: 550, column: 63, scope: !14572)
!14596 = !DILocation(line: 551, column: 54, scope: !14572)
!14597 = !DILocation(line: 551, column: 45, scope: !14572)
!14598 = !DILocation(line: 550, column: 41, scope: !14572)
!14599 = !DILocation(line: 549, column: 37, scope: !14572)
!14600 = !DILocation(line: 549, column: 37, scope: !14586)
!14601 = !DILocation(line: 552, column: 21, scope: !14572)
!14602 = !DILocation(line: 545, column: 45, scope: !14603)
!14603 = !DILexicalBlockFile(scope: !14567, file: !1058, discriminator: 2)
!14604 = !DILocation(line: 545, column: 21, scope: !14603)
!14605 = distinct !{!14605, !14606}
!14606 = !DILocation(line: 545, column: 21, scope: !14541)
!14607 = !DILocation(line: 553, column: 17, scope: !14541)
!14608 = !DILocation(line: 541, column: 41, scope: !14609)
!14609 = !DILexicalBlockFile(scope: !14536, file: !1058, discriminator: 2)
!14610 = !DILocation(line: 541, column: 17, scope: !14609)
!14611 = distinct !{!14611, !14612}
!14612 = !DILocation(line: 541, column: 17, scope: !14527)
!14613 = !DILocation(line: 554, column: 13, scope: !14527)
!14614 = !DILocation(line: 555, column: 33, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14514, file: !1058, line: 554, column: 20)
!14616 = !DILocation(line: 555, column: 37, scope: !14615)
!14617 = !DILocation(line: 555, column: 35, scope: !14615)
!14618 = !DILocation(line: 555, column: 26, scope: !14615)
!14619 = !DILocation(line: 555, column: 24, scope: !14615)
!14620 = !DILocation(line: 556, column: 33, scope: !14615)
!14621 = !DILocation(line: 556, column: 26, scope: !14615)
!14622 = !DILocation(line: 556, column: 24, scope: !14615)
!14623 = !DILocation(line: 559, column: 13, scope: !14504)
!14624 = !DILocation(line: 559, column: 18, scope: !14504)
!14625 = !DILocation(line: 559, column: 22, scope: !14504)
!14626 = !DILocation(line: 559, column: 35, scope: !14504)
!14627 = !DILocation(line: 559, column: 32, scope: !14504)
!14628 = !DILocation(line: 559, column: 40, scope: !14504)
!14629 = !DILocation(line: 559, column: 38, scope: !14504)
!14630 = !DILocation(line: 559, column: 44, scope: !14504)
!14631 = !DILocation(line: 559, column: 53, scope: !14504)
!14632 = !DILocation(line: 559, column: 51, scope: !14504)
!14633 = !DILocation(line: 559, column: 57, scope: !14504)
!14634 = !DILocation(line: 559, column: 65, scope: !14504)
!14635 = !DILocation(line: 560, column: 32, scope: !14504)
!14636 = !DILocation(line: 560, column: 34, scope: !14504)
!14637 = !DILocation(line: 562, column: 17, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14504, file: !1058, line: 562, column: 17)
!14639 = !DILocation(line: 562, column: 22, scope: !14638)
!14640 = !DILocation(line: 562, column: 19, scope: !14638)
!14641 = !DILocation(line: 562, column: 29, scope: !14638)
!14642 = !DILocation(line: 562, column: 32, scope: !14643)
!14643 = !DILexicalBlockFile(scope: !14638, file: !1058, discriminator: 1)
!14644 = !DILocation(line: 562, column: 37, scope: !14643)
!14645 = !DILocation(line: 562, column: 34, scope: !14643)
!14646 = !DILocation(line: 562, column: 17, scope: !14643)
!14647 = !DILocation(line: 563, column: 41, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14638, file: !1058, line: 562, column: 45)
!14649 = !DILocation(line: 563, column: 17, scope: !14648)
!14650 = !DILocation(line: 563, column: 22, scope: !14648)
!14651 = !DILocation(line: 563, column: 26, scope: !14648)
!14652 = !DILocation(line: 563, column: 55, scope: !14648)
!14653 = !DILocation(line: 563, column: 52, scope: !14648)
!14654 = !DILocation(line: 563, column: 60, scope: !14648)
!14655 = !DILocation(line: 563, column: 58, scope: !14648)
!14656 = !DILocation(line: 563, column: 73, scope: !14648)
!14657 = !DILocation(line: 563, column: 64, scope: !14648)
!14658 = !DILocation(line: 563, column: 69, scope: !14648)
!14659 = !DILocation(line: 564, column: 52, scope: !14648)
!14660 = !DILocation(line: 564, column: 60, scope: !14648)
!14661 = !DILocation(line: 565, column: 52, scope: !14648)
!14662 = !DILocation(line: 565, column: 56, scope: !14648)
!14663 = !DILocation(line: 566, column: 13, scope: !14648)
!14664 = !DILocalVariable(name: "idx", scope: !14665, file: !1058, line: 567, type: !958)
!14665 = distinct !DILexicalBlock(scope: !14638, file: !1058, line: 566, column: 20)
!14666 = !DILocation(line: 567, column: 21, scope: !14665)
!14667 = !DILocation(line: 567, column: 27, scope: !14665)
!14668 = !DILocation(line: 567, column: 36, scope: !14665)
!14669 = !DILocalVariable(name: "A", scope: !14665, file: !1058, line: 568, type: !958)
!14670 = !DILocation(line: 568, column: 21, scope: !14665)
!14671 = !DILocation(line: 568, column: 30, scope: !14665)
!14672 = !DILocation(line: 568, column: 41, scope: !14665)
!14673 = !DILocation(line: 568, column: 44, scope: !14665)
!14674 = !DILocation(line: 568, column: 39, scope: !14665)
!14675 = !DILocation(line: 568, column: 49, scope: !14665)
!14676 = !DILocation(line: 568, column: 27, scope: !14665)
!14677 = !DILocalVariable(name: "B", scope: !14665, file: !1058, line: 569, type: !958)
!14678 = !DILocation(line: 569, column: 21, scope: !14665)
!14679 = !DILocation(line: 569, column: 26, scope: !14665)
!14680 = !DILocation(line: 569, column: 30, scope: !14665)
!14681 = !DILocation(line: 569, column: 29, scope: !14665)
!14682 = !DILocation(line: 569, column: 27, scope: !14665)
!14683 = !DILocation(line: 569, column: 38, scope: !14665)
!14684 = !DILocation(line: 569, column: 36, scope: !14665)
!14685 = !DILocalVariable(name: "out", scope: !14665, file: !1058, line: 570, type: !14686)
!14686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64, align: 64)
!14687 = !DILocation(line: 570, column: 27, scope: !14665)
!14688 = !DILocation(line: 570, column: 44, scope: !14665)
!14689 = !DILocation(line: 570, column: 34, scope: !14665)
!14690 = !DILocation(line: 570, column: 40, scope: !14665)
!14691 = !DILocation(line: 570, column: 37, scope: !14665)
!14692 = !DILocalVariable(name: "shift", scope: !14665, file: !1058, line: 571, type: !958)
!14693 = !DILocation(line: 571, column: 21, scope: !14665)
!14694 = !DILocalVariable(name: "round", scope: !14665, file: !1058, line: 572, type: !985)
!14695 = !DILocation(line: 572, column: 26, scope: !14665)
!14696 = !DILocalVariable(name: "in", scope: !14665, file: !1058, line: 574, type: !14509)
!14697 = !DILocation(line: 574, column: 28, scope: !14665)
!14698 = !DILocation(line: 574, column: 42, scope: !14665)
!14699 = !DILocation(line: 574, column: 33, scope: !14665)
!14700 = !DILocation(line: 574, column: 38, scope: !14665)
!14701 = !DILocation(line: 575, column: 24, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14665, file: !1058, line: 575, column: 17)
!14703 = !DILocation(line: 575, column: 22, scope: !14702)
!14704 = !DILocation(line: 575, column: 29, scope: !14705)
!14705 = !DILexicalBlockFile(scope: !14706, file: !1058, discriminator: 1)
!14706 = distinct !DILexicalBlock(scope: !14702, file: !1058, line: 575, column: 17)
!14707 = !DILocation(line: 575, column: 30, scope: !14705)
!14708 = !DILocation(line: 575, column: 35, scope: !14705)
!14709 = !DILocation(line: 575, column: 33, scope: !14705)
!14710 = !DILocation(line: 575, column: 17, scope: !14705)
!14711 = !DILocalVariable(name: "shift2", scope: !14712, file: !1058, line: 576, type: !958)
!14712 = distinct !DILexicalBlock(scope: !14706, file: !1058, line: 575, column: 48)
!14713 = !DILocation(line: 576, column: 25, scope: !14712)
!14714 = !DILocation(line: 577, column: 37, scope: !14712)
!14715 = !DILocation(line: 577, column: 34, scope: !14712)
!14716 = !DILocation(line: 577, column: 41, scope: !14712)
!14717 = !DILocation(line: 577, column: 32, scope: !14712)
!14718 = !DILocation(line: 577, column: 27, scope: !14712)
!14719 = !DILocation(line: 578, column: 37, scope: !14712)
!14720 = !DILocation(line: 578, column: 38, scope: !14712)
!14721 = !DILocation(line: 578, column: 34, scope: !14712)
!14722 = !DILocation(line: 578, column: 42, scope: !14712)
!14723 = !DILocation(line: 578, column: 32, scope: !14712)
!14724 = !DILocation(line: 578, column: 27, scope: !14712)
!14725 = !DILocation(line: 579, column: 25, scope: !14726)
!14726 = distinct !DILexicalBlock(scope: !14712, file: !1058, line: 579, column: 25)
!14727 = !DILocation(line: 579, column: 31, scope: !14726)
!14728 = !DILocation(line: 579, column: 35, scope: !14726)
!14729 = !DILocation(line: 579, column: 38, scope: !14730)
!14730 = !DILexicalBlockFile(scope: !14726, file: !1058, discriminator: 1)
!14731 = !DILocation(line: 579, column: 45, scope: !14730)
!14732 = !DILocation(line: 579, column: 25, scope: !14730)
!14733 = !DILocation(line: 580, column: 87, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14726, file: !1058, line: 579, column: 50)
!14735 = !DILocation(line: 580, column: 94, scope: !14734)
!14736 = !DILocation(line: 580, column: 25, scope: !14734)
!14737 = !DILocation(line: 581, column: 25, scope: !14734)
!14738 = !DILocation(line: 583, column: 25, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14712, file: !1058, line: 583, column: 25)
!14740 = !DILocation(line: 583, column: 31, scope: !14739)
!14741 = !DILocation(line: 583, column: 25, scope: !14712)
!14742 = !DILocation(line: 584, column: 39, scope: !14743)
!14743 = distinct !DILexicalBlock(scope: !14739, file: !1058, line: 583, column: 37)
!14744 = !DILocation(line: 584, column: 44, scope: !14743)
!14745 = !DILocation(line: 584, column: 35, scope: !14743)
!14746 = !DILocation(line: 584, column: 31, scope: !14743)
!14747 = !DILocation(line: 585, column: 47, scope: !14743)
!14748 = !DILocation(line: 585, column: 44, scope: !14743)
!14749 = !DILocation(line: 585, column: 51, scope: !14743)
!14750 = !DILocation(line: 585, column: 58, scope: !14743)
!14751 = !DILocation(line: 585, column: 56, scope: !14743)
!14752 = !DILocation(line: 585, column: 62, scope: !14743)
!14753 = !DILocation(line: 585, column: 60, scope: !14743)
!14754 = !DILocation(line: 585, column: 72, scope: !14743)
!14755 = !DILocation(line: 585, column: 69, scope: !14743)
!14756 = !DILocation(line: 585, column: 31, scope: !14743)
!14757 = !DILocation(line: 585, column: 30, scope: !14743)
!14758 = !DILocation(line: 585, column: 25, scope: !14743)
!14759 = !DILocation(line: 585, column: 35, scope: !14743)
!14760 = !DILocation(line: 586, column: 21, scope: !14743)
!14761 = !DILocation(line: 588, column: 25, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14712, file: !1058, line: 588, column: 25)
!14763 = !DILocation(line: 588, column: 32, scope: !14762)
!14764 = !DILocation(line: 588, column: 25, scope: !14712)
!14765 = !DILocation(line: 589, column: 39, scope: !14766)
!14766 = distinct !DILexicalBlock(scope: !14762, file: !1058, line: 588, column: 38)
!14767 = !DILocation(line: 589, column: 45, scope: !14766)
!14768 = !DILocation(line: 589, column: 35, scope: !14766)
!14769 = !DILocation(line: 589, column: 31, scope: !14766)
!14770 = !DILocation(line: 590, column: 48, scope: !14766)
!14771 = !DILocation(line: 590, column: 49, scope: !14766)
!14772 = !DILocation(line: 590, column: 45, scope: !14766)
!14773 = !DILocation(line: 590, column: 53, scope: !14766)
!14774 = !DILocation(line: 590, column: 60, scope: !14766)
!14775 = !DILocation(line: 590, column: 58, scope: !14766)
!14776 = !DILocation(line: 590, column: 64, scope: !14766)
!14777 = !DILocation(line: 590, column: 62, scope: !14766)
!14778 = !DILocation(line: 590, column: 74, scope: !14766)
!14779 = !DILocation(line: 590, column: 71, scope: !14766)
!14780 = !DILocation(line: 590, column: 31, scope: !14766)
!14781 = !DILocation(line: 590, column: 30, scope: !14766)
!14782 = !DILocation(line: 590, column: 32, scope: !14766)
!14783 = !DILocation(line: 590, column: 25, scope: !14766)
!14784 = !DILocation(line: 590, column: 36, scope: !14766)
!14785 = !DILocation(line: 591, column: 21, scope: !14766)
!14786 = !DILocation(line: 592, column: 17, scope: !14712)
!14787 = !DILocation(line: 575, column: 43, scope: !14788)
!14788 = !DILexicalBlockFile(scope: !14706, file: !1058, discriminator: 2)
!14789 = !DILocation(line: 575, column: 17, scope: !14788)
!14790 = distinct !{!14790, !14791}
!14791 = !DILocation(line: 575, column: 17, scope: !14665)
!14792 = !DILocation(line: 593, column: 20, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !14665, file: !1058, line: 593, column: 20)
!14794 = !DILocation(line: 593, column: 25, scope: !14793)
!14795 = !DILocation(line: 593, column: 20, scope: !14665)
!14796 = !DILocation(line: 595, column: 37, scope: !14797)
!14797 = distinct !DILexicalBlock(scope: !14793, file: !1058, line: 594, column: 17)
!14798 = !DILocation(line: 595, column: 34, scope: !14797)
!14799 = !DILocation(line: 595, column: 41, scope: !14797)
!14800 = !DILocation(line: 595, column: 32, scope: !14797)
!14801 = !DILocation(line: 595, column: 27, scope: !14797)
!14802 = !DILocation(line: 596, column: 25, scope: !14803)
!14803 = distinct !DILexicalBlock(scope: !14797, file: !1058, line: 596, column: 25)
!14804 = !DILocation(line: 596, column: 31, scope: !14803)
!14805 = !DILocation(line: 596, column: 25, scope: !14797)
!14806 = !DILocation(line: 597, column: 84, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14803, file: !1058, line: 596, column: 36)
!14808 = !DILocation(line: 597, column: 25, scope: !14807)
!14809 = !DILocation(line: 598, column: 25, scope: !14807)
!14810 = !DILocation(line: 599, column: 32, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14803, file: !1058, line: 599, column: 32)
!14812 = !DILocation(line: 599, column: 38, scope: !14811)
!14813 = !DILocation(line: 599, column: 32, scope: !14803)
!14814 = !DILocation(line: 600, column: 39, scope: !14815)
!14815 = distinct !DILexicalBlock(scope: !14811, file: !1058, line: 599, column: 44)
!14816 = !DILocation(line: 600, column: 44, scope: !14815)
!14817 = !DILocation(line: 600, column: 35, scope: !14815)
!14818 = !DILocation(line: 600, column: 31, scope: !14815)
!14819 = !DILocation(line: 601, column: 47, scope: !14815)
!14820 = !DILocation(line: 601, column: 44, scope: !14815)
!14821 = !DILocation(line: 601, column: 51, scope: !14815)
!14822 = !DILocation(line: 601, column: 58, scope: !14815)
!14823 = !DILocation(line: 601, column: 56, scope: !14815)
!14824 = !DILocation(line: 601, column: 62, scope: !14815)
!14825 = !DILocation(line: 601, column: 60, scope: !14815)
!14826 = !DILocation(line: 601, column: 72, scope: !14815)
!14827 = !DILocation(line: 601, column: 69, scope: !14815)
!14828 = !DILocation(line: 601, column: 31, scope: !14815)
!14829 = !DILocation(line: 601, column: 30, scope: !14815)
!14830 = !DILocation(line: 601, column: 25, scope: !14815)
!14831 = !DILocation(line: 601, column: 35, scope: !14815)
!14832 = !DILocation(line: 602, column: 21, scope: !14815)
!14833 = !DILocation(line: 603, column: 17, scope: !14797)
!14834 = !DILocation(line: 605, column: 27, scope: !14504)
!14835 = !DILocation(line: 605, column: 40, scope: !14504)
!14836 = !DILocation(line: 605, column: 38, scope: !14504)
!14837 = !DILocation(line: 605, column: 47, scope: !14504)
!14838 = !DILocation(line: 605, column: 24, scope: !14504)
!14839 = !DILocation(line: 606, column: 26, scope: !14504)
!14840 = !DILocation(line: 606, column: 36, scope: !14504)
!14841 = !DILocation(line: 606, column: 41, scope: !14504)
!14842 = !DILocation(line: 606, column: 23, scope: !14504)
!14843 = !DILocation(line: 607, column: 9, scope: !14504)
!14844 = !DILocation(line: 533, column: 73, scope: !14845)
!14845 = !DILexicalBlockFile(scope: !14495, file: !1058, discriminator: 2)
!14846 = !DILocation(line: 533, column: 9, scope: !14845)
!14847 = distinct !{!14847, !14848}
!14848 = !DILocation(line: 533, column: 9, scope: !14487)
!14849 = !DILocation(line: 608, column: 5, scope: !14487)
!14850 = !DILocation(line: 532, column: 43, scope: !14851)
!14851 = !DILexicalBlockFile(scope: !14480, file: !1058, discriminator: 2)
!14852 = !DILocation(line: 532, column: 5, scope: !14851)
!14853 = distinct !{!14853, !14854}
!14854 = !DILocation(line: 532, column: 5, scope: !2567)
!14855 = !DILocation(line: 609, column: 29, scope: !2567)
!14856 = !DILocation(line: 609, column: 5, scope: !2567)
!14857 = !DILocation(line: 609, column: 14, scope: !2567)
!14858 = !DILocation(line: 609, column: 27, scope: !2567)
!14859 = !DILocation(line: 610, column: 28, scope: !2567)
!14860 = !DILocation(line: 610, column: 5, scope: !2567)
!14861 = !DILocation(line: 610, column: 14, scope: !2567)
!14862 = !DILocation(line: 610, column: 26, scope: !2567)
!14863 = !DILocation(line: 611, column: 1, scope: !2567)
!14864 = !DILocation(line: 611, column: 1, scope: !14865)
!14865 = !DILexicalBlockFile(scope: !2567, file: !1058, discriminator: 1)
!14866 = distinct !DISubprogram(name: "sbr_x_gen", scope: !1003, file: !1003, line: 1326, type: !2519, isLocal: true, isDefinition: true, scopeLine: 1329, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!14867 = !DILocalVariable(name: "sbr", arg: 1, scope: !14866, file: !1003, line: 1326, type: !1125)
!14868 = !DILocation(line: 1326, column: 47, scope: !14866)
!14869 = !DILocalVariable(name: "X", arg: 2, scope: !14866, file: !1003, line: 1326, type: !1339)
!14870 = !DILocation(line: 1326, column: 61, scope: !14866)
!14871 = !DILocalVariable(name: "Y0", arg: 3, scope: !14866, file: !1003, line: 1327, type: !973)
!14872 = !DILocation(line: 1327, column: 37, scope: !14866)
!14873 = !DILocalVariable(name: "Y1", arg: 4, scope: !14866, file: !1003, line: 1327, type: !973)
!14874 = !DILocation(line: 1327, column: 67, scope: !14866)
!14875 = !DILocalVariable(name: "X_low", arg: 5, scope: !14866, file: !1003, line: 1328, type: !965)
!14876 = !DILocation(line: 1328, column: 37, scope: !14866)
!14877 = !DILocalVariable(name: "ch", arg: 6, scope: !14866, file: !1003, line: 1328, type: !958)
!14878 = !DILocation(line: 1328, column: 59, scope: !14866)
!14879 = !DILocalVariable(name: "k", scope: !14866, file: !1003, line: 1330, type: !958)
!14880 = !DILocation(line: 1330, column: 9, scope: !14866)
!14881 = !DILocalVariable(name: "i", scope: !14866, file: !1003, line: 1330, type: !958)
!14882 = !DILocation(line: 1330, column: 12, scope: !14866)
!14883 = !DILocalVariable(name: "i_f", scope: !14866, file: !1003, line: 1331, type: !1591)
!14884 = !DILocation(line: 1331, column: 15, scope: !14866)
!14885 = !DILocalVariable(name: "i_Temp", scope: !14866, file: !1003, line: 1332, type: !1591)
!14886 = !DILocation(line: 1332, column: 15, scope: !14866)
!14887 = !DILocation(line: 1332, column: 38, scope: !14866)
!14888 = !DILocation(line: 1332, column: 28, scope: !14866)
!14889 = !DILocation(line: 1332, column: 33, scope: !14866)
!14890 = !DILocation(line: 1332, column: 42, scope: !14866)
!14891 = !DILocation(line: 1332, column: 27, scope: !14866)
!14892 = !DILocation(line: 1332, column: 60, scope: !14866)
!14893 = !DILocation(line: 1332, column: 67, scope: !14866)
!14894 = !DILocation(line: 1332, column: 25, scope: !14866)
!14895 = !DILocation(line: 1332, column: 88, scope: !14896)
!14896 = !DILexicalBlockFile(scope: !14866, file: !1003, discriminator: 1)
!14897 = !DILocation(line: 1332, column: 78, scope: !14896)
!14898 = !DILocation(line: 1332, column: 83, scope: !14896)
!14899 = !DILocation(line: 1332, column: 92, scope: !14896)
!14900 = !DILocation(line: 1332, column: 77, scope: !14896)
!14901 = !DILocation(line: 1332, column: 110, scope: !14896)
!14902 = !DILocation(line: 1332, column: 25, scope: !14896)
!14903 = !DILocation(line: 1332, column: 25, scope: !14904)
!14904 = !DILexicalBlockFile(scope: !14866, file: !1003, discriminator: 2)
!14905 = !DILocation(line: 1332, column: 25, scope: !14906)
!14906 = !DILexicalBlockFile(scope: !14866, file: !1003, discriminator: 3)
!14907 = !DILocation(line: 1332, column: 15, scope: !14906)
!14908 = !DILocation(line: 1333, column: 12, scope: !14866)
!14909 = !DILocation(line: 1333, column: 5, scope: !14866)
!14910 = !DILocation(line: 1334, column: 12, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14866, file: !1003, line: 1334, column: 5)
!14912 = !DILocation(line: 1334, column: 10, scope: !14911)
!14913 = !DILocation(line: 1334, column: 17, scope: !14914)
!14914 = !DILexicalBlockFile(scope: !14915, file: !1003, discriminator: 1)
!14915 = distinct !DILexicalBlock(scope: !14911, file: !1003, line: 1334, column: 5)
!14916 = !DILocation(line: 1334, column: 21, scope: !14914)
!14917 = !DILocation(line: 1334, column: 26, scope: !14914)
!14918 = !DILocation(line: 1334, column: 19, scope: !14914)
!14919 = !DILocation(line: 1334, column: 5, scope: !14914)
!14920 = !DILocation(line: 1335, column: 16, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14922, file: !1003, line: 1335, column: 9)
!14922 = distinct !DILexicalBlock(scope: !14915, file: !1003, line: 1334, column: 38)
!14923 = !DILocation(line: 1335, column: 14, scope: !14921)
!14924 = !DILocation(line: 1335, column: 21, scope: !14925)
!14925 = !DILexicalBlockFile(scope: !14926, file: !1003, discriminator: 1)
!14926 = distinct !DILexicalBlock(scope: !14921, file: !1003, line: 1335, column: 9)
!14927 = !DILocation(line: 1335, column: 25, scope: !14925)
!14928 = !DILocation(line: 1335, column: 23, scope: !14925)
!14929 = !DILocation(line: 1335, column: 9, scope: !14925)
!14930 = !DILocation(line: 1336, column: 35, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14926, file: !1003, line: 1335, column: 38)
!14932 = !DILocation(line: 1336, column: 37, scope: !14931)
!14933 = !DILocation(line: 1336, column: 26, scope: !14931)
!14934 = !DILocation(line: 1336, column: 32, scope: !14931)
!14935 = !DILocation(line: 1336, column: 21, scope: !14931)
!14936 = !DILocation(line: 1336, column: 13, scope: !14931)
!14937 = !DILocation(line: 1336, column: 18, scope: !14931)
!14938 = !DILocation(line: 1336, column: 24, scope: !14931)
!14939 = !DILocation(line: 1337, column: 35, scope: !14931)
!14940 = !DILocation(line: 1337, column: 37, scope: !14931)
!14941 = !DILocation(line: 1337, column: 26, scope: !14931)
!14942 = !DILocation(line: 1337, column: 32, scope: !14931)
!14943 = !DILocation(line: 1337, column: 21, scope: !14931)
!14944 = !DILocation(line: 1337, column: 13, scope: !14931)
!14945 = !DILocation(line: 1337, column: 18, scope: !14931)
!14946 = !DILocation(line: 1337, column: 24, scope: !14931)
!14947 = !DILocation(line: 1338, column: 9, scope: !14931)
!14948 = !DILocation(line: 1335, column: 34, scope: !14949)
!14949 = !DILexicalBlockFile(scope: !14926, file: !1003, discriminator: 2)
!14950 = !DILocation(line: 1335, column: 9, scope: !14949)
!14951 = distinct !{!14951, !14952}
!14952 = !DILocation(line: 1335, column: 9, scope: !14922)
!14953 = !DILocation(line: 1339, column: 5, scope: !14922)
!14954 = !DILocation(line: 1334, column: 34, scope: !14955)
!14955 = !DILexicalBlockFile(scope: !14915, file: !1003, discriminator: 2)
!14956 = !DILocation(line: 1334, column: 5, scope: !14955)
!14957 = distinct !{!14957, !14958}
!14958 = !DILocation(line: 1334, column: 5, scope: !14866)
!14959 = !DILocation(line: 1340, column: 5, scope: !14866)
!14960 = !DILocation(line: 1340, column: 12, scope: !14961)
!14961 = !DILexicalBlockFile(scope: !14962, file: !1003, discriminator: 1)
!14962 = distinct !DILexicalBlock(scope: !14963, file: !1003, line: 1340, column: 5)
!14963 = distinct !DILexicalBlock(scope: !14866, file: !1003, line: 1340, column: 5)
!14964 = !DILocation(line: 1340, column: 16, scope: !14961)
!14965 = !DILocation(line: 1340, column: 21, scope: !14961)
!14966 = !DILocation(line: 1340, column: 29, scope: !14961)
!14967 = !DILocation(line: 1340, column: 34, scope: !14961)
!14968 = !DILocation(line: 1340, column: 27, scope: !14961)
!14969 = !DILocation(line: 1340, column: 14, scope: !14961)
!14970 = !DILocation(line: 1340, column: 5, scope: !14961)
!14971 = !DILocation(line: 1341, column: 16, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !14973, file: !1003, line: 1341, column: 9)
!14973 = distinct !DILexicalBlock(scope: !14962, file: !1003, line: 1340, column: 45)
!14974 = !DILocation(line: 1341, column: 14, scope: !14972)
!14975 = !DILocation(line: 1341, column: 21, scope: !14976)
!14976 = !DILexicalBlockFile(scope: !14977, file: !1003, discriminator: 1)
!14977 = distinct !DILexicalBlock(scope: !14972, file: !1003, line: 1341, column: 9)
!14978 = !DILocation(line: 1341, column: 25, scope: !14976)
!14979 = !DILocation(line: 1341, column: 23, scope: !14976)
!14980 = !DILocation(line: 1341, column: 9, scope: !14976)
!14981 = !DILocation(line: 1342, column: 38, scope: !14982)
!14982 = distinct !DILexicalBlock(scope: !14977, file: !1003, line: 1341, column: 38)
!14983 = !DILocation(line: 1342, column: 26, scope: !14982)
!14984 = !DILocation(line: 1342, column: 29, scope: !14982)
!14985 = !DILocation(line: 1342, column: 31, scope: !14982)
!14986 = !DILocation(line: 1342, column: 21, scope: !14982)
!14987 = !DILocation(line: 1342, column: 13, scope: !14982)
!14988 = !DILocation(line: 1342, column: 18, scope: !14982)
!14989 = !DILocation(line: 1342, column: 24, scope: !14982)
!14990 = !DILocation(line: 1343, column: 38, scope: !14982)
!14991 = !DILocation(line: 1343, column: 26, scope: !14982)
!14992 = !DILocation(line: 1343, column: 29, scope: !14982)
!14993 = !DILocation(line: 1343, column: 31, scope: !14982)
!14994 = !DILocation(line: 1343, column: 21, scope: !14982)
!14995 = !DILocation(line: 1343, column: 13, scope: !14982)
!14996 = !DILocation(line: 1343, column: 18, scope: !14982)
!14997 = !DILocation(line: 1343, column: 24, scope: !14982)
!14998 = !DILocation(line: 1344, column: 9, scope: !14982)
!14999 = !DILocation(line: 1341, column: 34, scope: !15000)
!15000 = !DILexicalBlockFile(scope: !14977, file: !1003, discriminator: 2)
!15001 = !DILocation(line: 1341, column: 9, scope: !15000)
!15002 = distinct !{!15002, !15003}
!15003 = !DILocation(line: 1341, column: 9, scope: !14973)
!15004 = !DILocation(line: 1345, column: 5, scope: !14973)
!15005 = !DILocation(line: 1340, column: 41, scope: !15006)
!15006 = !DILexicalBlockFile(scope: !14962, file: !1003, discriminator: 2)
!15007 = !DILocation(line: 1340, column: 5, scope: !15006)
!15008 = distinct !{!15008, !14959}
!15009 = !DILocation(line: 1347, column: 12, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !14866, file: !1003, line: 1347, column: 5)
!15011 = !DILocation(line: 1347, column: 10, scope: !15010)
!15012 = !DILocation(line: 1347, column: 17, scope: !15013)
!15013 = !DILexicalBlockFile(scope: !15014, file: !1003, discriminator: 1)
!15014 = distinct !DILexicalBlock(scope: !15010, file: !1003, line: 1347, column: 5)
!15015 = !DILocation(line: 1347, column: 21, scope: !15013)
!15016 = !DILocation(line: 1347, column: 26, scope: !15013)
!15017 = !DILocation(line: 1347, column: 19, scope: !15013)
!15018 = !DILocation(line: 1347, column: 5, scope: !15013)
!15019 = !DILocation(line: 1348, column: 18, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !15021, file: !1003, line: 1348, column: 9)
!15021 = distinct !DILexicalBlock(scope: !15014, file: !1003, line: 1347, column: 38)
!15022 = !DILocation(line: 1348, column: 16, scope: !15020)
!15023 = !DILocation(line: 1348, column: 14, scope: !15020)
!15024 = !DILocation(line: 1348, column: 26, scope: !15025)
!15025 = !DILexicalBlockFile(scope: !15026, file: !1003, discriminator: 1)
!15026 = distinct !DILexicalBlock(scope: !15020, file: !1003, line: 1348, column: 9)
!15027 = !DILocation(line: 1348, column: 28, scope: !15025)
!15028 = !DILocation(line: 1348, column: 9, scope: !15025)
!15029 = !DILocation(line: 1349, column: 35, scope: !15030)
!15030 = distinct !DILexicalBlock(scope: !15026, file: !1003, line: 1348, column: 39)
!15031 = !DILocation(line: 1349, column: 37, scope: !15030)
!15032 = !DILocation(line: 1349, column: 26, scope: !15030)
!15033 = !DILocation(line: 1349, column: 32, scope: !15030)
!15034 = !DILocation(line: 1349, column: 21, scope: !15030)
!15035 = !DILocation(line: 1349, column: 13, scope: !15030)
!15036 = !DILocation(line: 1349, column: 18, scope: !15030)
!15037 = !DILocation(line: 1349, column: 24, scope: !15030)
!15038 = !DILocation(line: 1350, column: 35, scope: !15030)
!15039 = !DILocation(line: 1350, column: 37, scope: !15030)
!15040 = !DILocation(line: 1350, column: 26, scope: !15030)
!15041 = !DILocation(line: 1350, column: 32, scope: !15030)
!15042 = !DILocation(line: 1350, column: 21, scope: !15030)
!15043 = !DILocation(line: 1350, column: 13, scope: !15030)
!15044 = !DILocation(line: 1350, column: 18, scope: !15030)
!15045 = !DILocation(line: 1350, column: 24, scope: !15030)
!15046 = !DILocation(line: 1351, column: 9, scope: !15030)
!15047 = !DILocation(line: 1348, column: 35, scope: !15048)
!15048 = !DILexicalBlockFile(scope: !15026, file: !1003, discriminator: 2)
!15049 = !DILocation(line: 1348, column: 9, scope: !15048)
!15050 = distinct !{!15050, !15051}
!15051 = !DILocation(line: 1348, column: 9, scope: !15021)
!15052 = !DILocation(line: 1352, column: 5, scope: !15021)
!15053 = !DILocation(line: 1347, column: 34, scope: !15054)
!15054 = !DILexicalBlockFile(scope: !15014, file: !1003, discriminator: 2)
!15055 = !DILocation(line: 1347, column: 5, scope: !15054)
!15056 = distinct !{!15056, !15057}
!15057 = !DILocation(line: 1347, column: 5, scope: !14866)
!15058 = !DILocation(line: 1353, column: 5, scope: !14866)
!15059 = !DILocation(line: 1353, column: 12, scope: !15060)
!15060 = !DILexicalBlockFile(scope: !15061, file: !1003, discriminator: 1)
!15061 = distinct !DILexicalBlock(scope: !15062, file: !1003, line: 1353, column: 5)
!15062 = distinct !DILexicalBlock(scope: !14866, file: !1003, line: 1353, column: 5)
!15063 = !DILocation(line: 1353, column: 16, scope: !15060)
!15064 = !DILocation(line: 1353, column: 21, scope: !15060)
!15065 = !DILocation(line: 1353, column: 29, scope: !15060)
!15066 = !DILocation(line: 1353, column: 34, scope: !15060)
!15067 = !DILocation(line: 1353, column: 27, scope: !15060)
!15068 = !DILocation(line: 1353, column: 14, scope: !15060)
!15069 = !DILocation(line: 1353, column: 5, scope: !15060)
!15070 = !DILocation(line: 1354, column: 18, scope: !15071)
!15071 = distinct !DILexicalBlock(scope: !15072, file: !1003, line: 1354, column: 9)
!15072 = distinct !DILexicalBlock(scope: !15061, file: !1003, line: 1353, column: 45)
!15073 = !DILocation(line: 1354, column: 16, scope: !15071)
!15074 = !DILocation(line: 1354, column: 14, scope: !15071)
!15075 = !DILocation(line: 1354, column: 26, scope: !15076)
!15076 = !DILexicalBlockFile(scope: !15077, file: !1003, discriminator: 1)
!15077 = distinct !DILexicalBlock(scope: !15071, file: !1003, line: 1354, column: 9)
!15078 = !DILocation(line: 1354, column: 28, scope: !15076)
!15079 = !DILocation(line: 1354, column: 9, scope: !15076)
!15080 = !DILocation(line: 1355, column: 32, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !15077, file: !1003, line: 1354, column: 40)
!15082 = !DILocation(line: 1355, column: 26, scope: !15081)
!15083 = !DILocation(line: 1355, column: 29, scope: !15081)
!15084 = !DILocation(line: 1355, column: 21, scope: !15081)
!15085 = !DILocation(line: 1355, column: 13, scope: !15081)
!15086 = !DILocation(line: 1355, column: 18, scope: !15081)
!15087 = !DILocation(line: 1355, column: 24, scope: !15081)
!15088 = !DILocation(line: 1356, column: 32, scope: !15081)
!15089 = !DILocation(line: 1356, column: 26, scope: !15081)
!15090 = !DILocation(line: 1356, column: 29, scope: !15081)
!15091 = !DILocation(line: 1356, column: 21, scope: !15081)
!15092 = !DILocation(line: 1356, column: 13, scope: !15081)
!15093 = !DILocation(line: 1356, column: 18, scope: !15081)
!15094 = !DILocation(line: 1356, column: 24, scope: !15081)
!15095 = !DILocation(line: 1357, column: 9, scope: !15081)
!15096 = !DILocation(line: 1354, column: 36, scope: !15097)
!15097 = !DILexicalBlockFile(scope: !15077, file: !1003, discriminator: 2)
!15098 = !DILocation(line: 1354, column: 9, scope: !15097)
!15099 = distinct !{!15099, !15100}
!15100 = !DILocation(line: 1354, column: 9, scope: !15072)
!15101 = !DILocation(line: 1358, column: 5, scope: !15072)
!15102 = !DILocation(line: 1353, column: 41, scope: !15103)
!15103 = !DILexicalBlockFile(scope: !15061, file: !1003, discriminator: 2)
!15104 = !DILocation(line: 1353, column: 5, scope: !15103)
!15105 = distinct !{!15105, !15058}
!15106 = !DILocation(line: 1359, column: 5, scope: !14866)
!15107 = distinct !DISubprogram(name: "sbr_hf_inverse_filter", scope: !1058, file: !1058, line: 236, type: !15108, isLocal: true, isDefinition: true, scopeLine: 239, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!15108 = !DISubroutineType(types: !15109)
!15109 = !{null, !2525, !15110, !15110, !2572, !958}
!15110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64, align: 64)
!15111 = !DILocalVariable(name: "dsp", arg: 1, scope: !15107, file: !1058, line: 236, type: !2525)
!15112 = !DILocation(line: 236, column: 50, scope: !15107)
!15113 = !DILocalVariable(name: "alpha0", arg: 2, scope: !15107, file: !1058, line: 237, type: !15110)
!15114 = !DILocation(line: 237, column: 41, scope: !15107)
!15115 = !DILocalVariable(name: "alpha1", arg: 3, scope: !15107, file: !1058, line: 237, type: !15110)
!15116 = !DILocation(line: 237, column: 59, scope: !15107)
!15117 = !DILocalVariable(name: "X_low", arg: 4, scope: !15107, file: !1058, line: 238, type: !2572)
!15118 = !DILocation(line: 238, column: 45, scope: !15107)
!15119 = !DILocalVariable(name: "k0", arg: 5, scope: !15107, file: !1058, line: 238, type: !958)
!15120 = !DILocation(line: 238, column: 67, scope: !15107)
!15121 = !DILocalVariable(name: "k", scope: !15107, file: !1058, line: 240, type: !958)
!15122 = !DILocation(line: 240, column: 9, scope: !15107)
!15123 = !DILocalVariable(name: "shift", scope: !15107, file: !1058, line: 241, type: !958)
!15124 = !DILocation(line: 241, column: 9, scope: !15107)
!15125 = !DILocalVariable(name: "round", scope: !15107, file: !1058, line: 241, type: !958)
!15126 = !DILocation(line: 241, column: 16, scope: !15107)
!15127 = !DILocation(line: 243, column: 12, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !15107, file: !1058, line: 243, column: 5)
!15129 = !DILocation(line: 243, column: 10, scope: !15128)
!15130 = !DILocation(line: 243, column: 17, scope: !15131)
!15131 = !DILexicalBlockFile(scope: !15132, file: !1058, discriminator: 1)
!15132 = distinct !DILexicalBlock(scope: !15128, file: !1058, line: 243, column: 5)
!15133 = !DILocation(line: 243, column: 21, scope: !15131)
!15134 = !DILocation(line: 243, column: 19, scope: !15131)
!15135 = !DILocation(line: 243, column: 5, scope: !15131)
!15136 = !DILocalVariable(name: "phi", scope: !15137, file: !1058, line: 244, type: !15138)
!15137 = distinct !DILexicalBlock(scope: !15132, file: !1058, line: 243, column: 30)
!15138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1210, size: 768, align: 32, elements: !15139)
!15139 = !{!1232, !964, !964}
!15140 = !DILocation(line: 244, column: 19, scope: !15137)
!15141 = !DILocalVariable(name: "a00", scope: !15137, file: !1058, line: 245, type: !1210)
!15142 = !DILocation(line: 245, column: 19, scope: !15137)
!15143 = !DILocalVariable(name: "a01", scope: !15137, file: !1058, line: 245, type: !1210)
!15144 = !DILocation(line: 245, column: 24, scope: !15137)
!15145 = !DILocalVariable(name: "a10", scope: !15137, file: !1058, line: 245, type: !1210)
!15146 = !DILocation(line: 245, column: 29, scope: !15137)
!15147 = !DILocalVariable(name: "a11", scope: !15137, file: !1058, line: 245, type: !1210)
!15148 = !DILocation(line: 245, column: 34, scope: !15137)
!15149 = !DILocalVariable(name: "dk", scope: !15137, file: !1058, line: 246, type: !1210)
!15150 = !DILocation(line: 246, column: 19, scope: !15137)
!15151 = !DILocation(line: 248, column: 9, scope: !15137)
!15152 = !DILocation(line: 248, column: 14, scope: !15137)
!15153 = !DILocation(line: 248, column: 34, scope: !15137)
!15154 = !DILocation(line: 248, column: 28, scope: !15137)
!15155 = !DILocation(line: 248, column: 38, scope: !15137)
!15156 = !DILocation(line: 250, column: 34, scope: !15137)
!15157 = !DILocation(line: 250, column: 48, scope: !15137)
!15158 = !DILocation(line: 250, column: 24, scope: !15137)
!15159 = !DILocation(line: 251, column: 44, scope: !15137)
!15160 = !DILocation(line: 251, column: 58, scope: !15137)
!15161 = !DILocation(line: 251, column: 34, scope: !15137)
!15162 = !DILocation(line: 252, column: 24, scope: !15137)
!15163 = !DILocation(line: 252, column: 38, scope: !15137)
!15164 = !DILocation(line: 252, column: 14, scope: !15137)
!15165 = !DILocation(line: 251, column: 24, scope: !15137)
!15166 = !DILocation(line: 251, column: 24, scope: !15167)
!15167 = !DILexicalBlockFile(scope: !15137, file: !1058, discriminator: 1)
!15168 = !DILocation(line: 251, column: 14, scope: !15137)
!15169 = !DILocation(line: 251, column: 14, scope: !15170)
!15170 = !DILexicalBlockFile(scope: !15137, file: !1058, discriminator: 2)
!15171 = !DILocation(line: 250, column: 14, scope: !15137)
!15172 = !DILocation(line: 250, column: 14, scope: !15167)
!15173 = !DILocation(line: 250, column: 14, scope: !15170)
!15174 = !DILocation(line: 254, column: 17, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15137, file: !1058, line: 254, column: 13)
!15176 = !DILocation(line: 254, column: 14, scope: !15175)
!15177 = !DILocation(line: 254, column: 13, scope: !15137)
!15178 = !DILocation(line: 255, column: 19, scope: !15179)
!15179 = distinct !DILexicalBlock(scope: !15175, file: !1058, line: 254, column: 23)
!15180 = !DILocation(line: 256, column: 19, scope: !15179)
!15181 = !DILocation(line: 257, column: 9, scope: !15179)
!15182 = !DILocalVariable(name: "temp_real", scope: !15183, file: !1058, line: 258, type: !1210)
!15183 = distinct !DILexicalBlock(scope: !15175, file: !1058, line: 257, column: 16)
!15184 = !DILocation(line: 258, column: 23, scope: !15183)
!15185 = !DILocalVariable(name: "temp_im", scope: !15183, file: !1058, line: 258, type: !1210)
!15186 = !DILocation(line: 258, column: 34, scope: !15183)
!15187 = !DILocation(line: 259, column: 55, scope: !15183)
!15188 = !DILocation(line: 259, column: 69, scope: !15183)
!15189 = !DILocation(line: 259, column: 45, scope: !15183)
!15190 = !DILocation(line: 260, column: 55, scope: !15183)
!15191 = !DILocation(line: 260, column: 69, scope: !15183)
!15192 = !DILocation(line: 260, column: 45, scope: !15183)
!15193 = !DILocation(line: 259, column: 35, scope: !15183)
!15194 = !DILocation(line: 259, column: 35, scope: !15195)
!15195 = !DILexicalBlockFile(scope: !15183, file: !1058, discriminator: 1)
!15196 = !DILocation(line: 261, column: 45, scope: !15183)
!15197 = !DILocation(line: 261, column: 59, scope: !15183)
!15198 = !DILocation(line: 261, column: 35, scope: !15183)
!15199 = !DILocation(line: 259, column: 25, scope: !15183)
!15200 = !DILocation(line: 259, column: 25, scope: !15201)
!15201 = !DILexicalBlockFile(scope: !15183, file: !1058, discriminator: 2)
!15202 = !DILocation(line: 259, column: 25, scope: !15203)
!15203 = !DILexicalBlockFile(scope: !15183, file: !1058, discriminator: 3)
!15204 = !DILocation(line: 262, column: 53, scope: !15183)
!15205 = !DILocation(line: 262, column: 67, scope: !15183)
!15206 = !DILocation(line: 262, column: 43, scope: !15183)
!15207 = !DILocation(line: 263, column: 55, scope: !15183)
!15208 = !DILocation(line: 263, column: 69, scope: !15183)
!15209 = !DILocation(line: 263, column: 45, scope: !15183)
!15210 = !DILocation(line: 262, column: 33, scope: !15183)
!15211 = !DILocation(line: 262, column: 33, scope: !15195)
!15212 = !DILocation(line: 264, column: 45, scope: !15183)
!15213 = !DILocation(line: 264, column: 59, scope: !15183)
!15214 = !DILocation(line: 264, column: 35, scope: !15183)
!15215 = !DILocation(line: 262, column: 23, scope: !15183)
!15216 = !DILocation(line: 262, column: 23, scope: !15201)
!15217 = !DILocation(line: 262, column: 23, scope: !15203)
!15218 = !DILocation(line: 266, column: 19, scope: !15183)
!15219 = !DILocation(line: 266, column: 19, scope: !15195)
!15220 = !DILocation(line: 267, column: 19, scope: !15183)
!15221 = !DILocation(line: 267, column: 19, scope: !15195)
!15222 = !DILocation(line: 270, column: 14, scope: !15223)
!15223 = distinct !DILexicalBlock(scope: !15137, file: !1058, line: 270, column: 13)
!15224 = !DILocation(line: 270, column: 27, scope: !15223)
!15225 = !DILocation(line: 270, column: 13, scope: !15137)
!15226 = !DILocation(line: 271, column: 19, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15223, file: !1058, line: 270, column: 33)
!15228 = !DILocation(line: 272, column: 19, scope: !15227)
!15229 = !DILocation(line: 273, column: 9, scope: !15227)
!15230 = !DILocalVariable(name: "temp_real", scope: !15231, file: !1058, line: 274, type: !1210)
!15231 = distinct !DILexicalBlock(scope: !15223, file: !1058, line: 273, column: 16)
!15232 = !DILocation(line: 274, column: 23, scope: !15231)
!15233 = !DILocalVariable(name: "temp_im", scope: !15231, file: !1058, line: 274, type: !1210)
!15234 = !DILocation(line: 274, column: 34, scope: !15231)
!15235 = !DILocation(line: 275, column: 35, scope: !15231)
!15236 = !DILocation(line: 276, column: 60, scope: !15231)
!15237 = !DILocation(line: 276, column: 45, scope: !15231)
!15238 = !DILocation(line: 277, column: 60, scope: !15231)
!15239 = !DILocation(line: 277, column: 45, scope: !15231)
!15240 = !DILocation(line: 276, column: 35, scope: !15231)
!15241 = !DILocation(line: 276, column: 35, scope: !15242)
!15242 = !DILexicalBlockFile(scope: !15231, file: !1058, discriminator: 1)
!15243 = !DILocation(line: 275, column: 25, scope: !15231)
!15244 = !DILocation(line: 275, column: 25, scope: !15242)
!15245 = !DILocation(line: 278, column: 33, scope: !15231)
!15246 = !DILocation(line: 279, column: 60, scope: !15231)
!15247 = !DILocation(line: 279, column: 45, scope: !15231)
!15248 = !DILocation(line: 280, column: 60, scope: !15231)
!15249 = !DILocation(line: 280, column: 45, scope: !15231)
!15250 = !DILocation(line: 279, column: 35, scope: !15231)
!15251 = !DILocation(line: 279, column: 35, scope: !15242)
!15252 = !DILocation(line: 278, column: 23, scope: !15231)
!15253 = !DILocation(line: 278, column: 23, scope: !15242)
!15254 = !DILocation(line: 282, column: 41, scope: !15231)
!15255 = !DILocation(line: 282, column: 30, scope: !15231)
!15256 = !DILocation(line: 282, column: 23, scope: !15231)
!15257 = !DILocation(line: 282, column: 28, scope: !15231)
!15258 = !DILocation(line: 283, column: 37, scope: !15231)
!15259 = !DILocation(line: 283, column: 28, scope: !15231)
!15260 = !DILocation(line: 283, column: 21, scope: !15231)
!15261 = !DILocation(line: 283, column: 26, scope: !15231)
!15262 = !DILocation(line: 284, column: 40, scope: !15231)
!15263 = !DILocation(line: 284, column: 19, scope: !15231)
!15264 = !DILocation(line: 284, column: 19, scope: !15242)
!15265 = !DILocation(line: 285, column: 38, scope: !15231)
!15266 = !DILocation(line: 285, column: 19, scope: !15231)
!15267 = !DILocation(line: 285, column: 19, scope: !15242)
!15268 = !DILocation(line: 288, column: 21, scope: !15137)
!15269 = !DILocation(line: 288, column: 15, scope: !15137)
!15270 = !DILocation(line: 289, column: 13, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !15137, file: !1058, line: 289, column: 13)
!15272 = !DILocation(line: 289, column: 19, scope: !15271)
!15273 = !DILocation(line: 289, column: 13, scope: !15137)
!15274 = !DILocation(line: 290, column: 20, scope: !15271)
!15275 = !DILocation(line: 290, column: 13, scope: !15271)
!15276 = !DILocation(line: 290, column: 26, scope: !15271)
!15277 = !DILocation(line: 291, column: 18, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15271, file: !1058, line: 291, column: 18)
!15279 = !DILocation(line: 291, column: 24, scope: !15278)
!15280 = !DILocation(line: 291, column: 18, scope: !15271)
!15281 = !DILocation(line: 292, column: 20, scope: !15278)
!15282 = !DILocation(line: 292, column: 13, scope: !15278)
!15283 = !DILocation(line: 292, column: 26, scope: !15278)
!15284 = !DILocation(line: 294, column: 23, scope: !15285)
!15285 = distinct !DILexicalBlock(scope: !15278, file: !1058, line: 293, column: 14)
!15286 = !DILocation(line: 294, column: 22, scope: !15285)
!15287 = !DILocation(line: 294, column: 19, scope: !15285)
!15288 = !DILocation(line: 295, column: 17, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15285, file: !1058, line: 295, column: 17)
!15290 = !DILocation(line: 295, column: 23, scope: !15289)
!15291 = !DILocation(line: 295, column: 17, scope: !15285)
!15292 = !DILocation(line: 296, column: 36, scope: !15289)
!15293 = !DILocation(line: 296, column: 48, scope: !15289)
!15294 = !DILocation(line: 296, column: 47, scope: !15289)
!15295 = !DILocation(line: 296, column: 45, scope: !15289)
!15296 = !DILocation(line: 296, column: 41, scope: !15289)
!15297 = !DILocation(line: 296, column: 24, scope: !15289)
!15298 = !DILocation(line: 296, column: 17, scope: !15289)
!15299 = !DILocation(line: 296, column: 30, scope: !15289)
!15300 = !DILocation(line: 298, column: 31, scope: !15301)
!15301 = distinct !DILexicalBlock(scope: !15289, file: !1058, line: 297, column: 18)
!15302 = !DILocation(line: 298, column: 36, scope: !15301)
!15303 = !DILocation(line: 298, column: 27, scope: !15301)
!15304 = !DILocation(line: 298, column: 23, scope: !15301)
!15305 = !DILocation(line: 299, column: 37, scope: !15301)
!15306 = !DILocation(line: 299, column: 44, scope: !15301)
!15307 = !DILocation(line: 299, column: 42, scope: !15301)
!15308 = !DILocation(line: 299, column: 54, scope: !15301)
!15309 = !DILocation(line: 299, column: 51, scope: !15301)
!15310 = !DILocation(line: 299, column: 24, scope: !15301)
!15311 = !DILocation(line: 299, column: 17, scope: !15301)
!15312 = !DILocation(line: 299, column: 30, scope: !15301)
!15313 = !DILocation(line: 303, column: 21, scope: !15137)
!15314 = !DILocation(line: 303, column: 15, scope: !15137)
!15315 = !DILocation(line: 304, column: 13, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15137, file: !1058, line: 304, column: 13)
!15317 = !DILocation(line: 304, column: 19, scope: !15316)
!15318 = !DILocation(line: 304, column: 13, scope: !15137)
!15319 = !DILocation(line: 305, column: 20, scope: !15316)
!15320 = !DILocation(line: 305, column: 13, scope: !15316)
!15321 = !DILocation(line: 305, column: 26, scope: !15316)
!15322 = !DILocation(line: 306, column: 18, scope: !15323)
!15323 = distinct !DILexicalBlock(scope: !15316, file: !1058, line: 306, column: 18)
!15324 = !DILocation(line: 306, column: 24, scope: !15323)
!15325 = !DILocation(line: 306, column: 18, scope: !15316)
!15326 = !DILocation(line: 307, column: 20, scope: !15323)
!15327 = !DILocation(line: 307, column: 13, scope: !15323)
!15328 = !DILocation(line: 307, column: 26, scope: !15323)
!15329 = !DILocation(line: 309, column: 23, scope: !15330)
!15330 = distinct !DILexicalBlock(scope: !15323, file: !1058, line: 308, column: 14)
!15331 = !DILocation(line: 309, column: 22, scope: !15330)
!15332 = !DILocation(line: 309, column: 19, scope: !15330)
!15333 = !DILocation(line: 310, column: 17, scope: !15334)
!15334 = distinct !DILexicalBlock(scope: !15330, file: !1058, line: 310, column: 17)
!15335 = !DILocation(line: 310, column: 23, scope: !15334)
!15336 = !DILocation(line: 310, column: 17, scope: !15330)
!15337 = !DILocation(line: 311, column: 36, scope: !15334)
!15338 = !DILocation(line: 311, column: 48, scope: !15334)
!15339 = !DILocation(line: 311, column: 47, scope: !15334)
!15340 = !DILocation(line: 311, column: 45, scope: !15334)
!15341 = !DILocation(line: 311, column: 41, scope: !15334)
!15342 = !DILocation(line: 311, column: 24, scope: !15334)
!15343 = !DILocation(line: 311, column: 17, scope: !15334)
!15344 = !DILocation(line: 311, column: 30, scope: !15334)
!15345 = !DILocation(line: 313, column: 31, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15334, file: !1058, line: 312, column: 18)
!15347 = !DILocation(line: 313, column: 36, scope: !15346)
!15348 = !DILocation(line: 313, column: 27, scope: !15346)
!15349 = !DILocation(line: 313, column: 23, scope: !15346)
!15350 = !DILocation(line: 314, column: 37, scope: !15346)
!15351 = !DILocation(line: 314, column: 44, scope: !15346)
!15352 = !DILocation(line: 314, column: 42, scope: !15346)
!15353 = !DILocation(line: 314, column: 54, scope: !15346)
!15354 = !DILocation(line: 314, column: 51, scope: !15346)
!15355 = !DILocation(line: 314, column: 24, scope: !15346)
!15356 = !DILocation(line: 314, column: 17, scope: !15346)
!15357 = !DILocation(line: 314, column: 30, scope: !15346)
!15358 = !DILocation(line: 317, column: 21, scope: !15137)
!15359 = !DILocation(line: 317, column: 15, scope: !15137)
!15360 = !DILocation(line: 318, column: 13, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15137, file: !1058, line: 318, column: 13)
!15362 = !DILocation(line: 318, column: 19, scope: !15361)
!15363 = !DILocation(line: 318, column: 13, scope: !15137)
!15364 = !DILocation(line: 319, column: 20, scope: !15361)
!15365 = !DILocation(line: 319, column: 13, scope: !15361)
!15366 = !DILocation(line: 319, column: 26, scope: !15361)
!15367 = !DILocation(line: 320, column: 18, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15361, file: !1058, line: 320, column: 18)
!15369 = !DILocation(line: 320, column: 24, scope: !15368)
!15370 = !DILocation(line: 320, column: 18, scope: !15361)
!15371 = !DILocation(line: 321, column: 20, scope: !15368)
!15372 = !DILocation(line: 321, column: 13, scope: !15368)
!15373 = !DILocation(line: 321, column: 26, scope: !15368)
!15374 = !DILocation(line: 323, column: 23, scope: !15375)
!15375 = distinct !DILexicalBlock(scope: !15368, file: !1058, line: 322, column: 14)
!15376 = !DILocation(line: 323, column: 22, scope: !15375)
!15377 = !DILocation(line: 323, column: 19, scope: !15375)
!15378 = !DILocation(line: 324, column: 17, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15375, file: !1058, line: 324, column: 17)
!15380 = !DILocation(line: 324, column: 23, scope: !15379)
!15381 = !DILocation(line: 324, column: 17, scope: !15375)
!15382 = !DILocation(line: 325, column: 36, scope: !15379)
!15383 = !DILocation(line: 325, column: 48, scope: !15379)
!15384 = !DILocation(line: 325, column: 47, scope: !15379)
!15385 = !DILocation(line: 325, column: 45, scope: !15379)
!15386 = !DILocation(line: 325, column: 41, scope: !15379)
!15387 = !DILocation(line: 325, column: 24, scope: !15379)
!15388 = !DILocation(line: 325, column: 17, scope: !15379)
!15389 = !DILocation(line: 325, column: 30, scope: !15379)
!15390 = !DILocation(line: 327, column: 31, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15379, file: !1058, line: 326, column: 18)
!15392 = !DILocation(line: 327, column: 36, scope: !15391)
!15393 = !DILocation(line: 327, column: 27, scope: !15391)
!15394 = !DILocation(line: 327, column: 23, scope: !15391)
!15395 = !DILocation(line: 328, column: 37, scope: !15391)
!15396 = !DILocation(line: 328, column: 44, scope: !15391)
!15397 = !DILocation(line: 328, column: 42, scope: !15391)
!15398 = !DILocation(line: 328, column: 54, scope: !15391)
!15399 = !DILocation(line: 328, column: 51, scope: !15391)
!15400 = !DILocation(line: 328, column: 24, scope: !15391)
!15401 = !DILocation(line: 328, column: 17, scope: !15391)
!15402 = !DILocation(line: 328, column: 30, scope: !15391)
!15403 = !DILocation(line: 332, column: 21, scope: !15137)
!15404 = !DILocation(line: 332, column: 15, scope: !15137)
!15405 = !DILocation(line: 333, column: 13, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15137, file: !1058, line: 333, column: 13)
!15407 = !DILocation(line: 333, column: 19, scope: !15406)
!15408 = !DILocation(line: 333, column: 13, scope: !15137)
!15409 = !DILocation(line: 334, column: 20, scope: !15406)
!15410 = !DILocation(line: 334, column: 13, scope: !15406)
!15411 = !DILocation(line: 334, column: 26, scope: !15406)
!15412 = !DILocation(line: 335, column: 18, scope: !15413)
!15413 = distinct !DILexicalBlock(scope: !15406, file: !1058, line: 335, column: 18)
!15414 = !DILocation(line: 335, column: 24, scope: !15413)
!15415 = !DILocation(line: 335, column: 18, scope: !15406)
!15416 = !DILocation(line: 336, column: 20, scope: !15413)
!15417 = !DILocation(line: 336, column: 13, scope: !15413)
!15418 = !DILocation(line: 336, column: 26, scope: !15413)
!15419 = !DILocation(line: 338, column: 23, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15413, file: !1058, line: 337, column: 14)
!15421 = !DILocation(line: 338, column: 22, scope: !15420)
!15422 = !DILocation(line: 338, column: 19, scope: !15420)
!15423 = !DILocation(line: 339, column: 17, scope: !15424)
!15424 = distinct !DILexicalBlock(scope: !15420, file: !1058, line: 339, column: 17)
!15425 = !DILocation(line: 339, column: 23, scope: !15424)
!15426 = !DILocation(line: 339, column: 17, scope: !15420)
!15427 = !DILocation(line: 340, column: 36, scope: !15424)
!15428 = !DILocation(line: 340, column: 48, scope: !15424)
!15429 = !DILocation(line: 340, column: 47, scope: !15424)
!15430 = !DILocation(line: 340, column: 45, scope: !15424)
!15431 = !DILocation(line: 340, column: 41, scope: !15424)
!15432 = !DILocation(line: 340, column: 24, scope: !15424)
!15433 = !DILocation(line: 340, column: 17, scope: !15424)
!15434 = !DILocation(line: 340, column: 30, scope: !15424)
!15435 = !DILocation(line: 342, column: 31, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15424, file: !1058, line: 341, column: 18)
!15437 = !DILocation(line: 342, column: 36, scope: !15436)
!15438 = !DILocation(line: 342, column: 27, scope: !15436)
!15439 = !DILocation(line: 342, column: 23, scope: !15436)
!15440 = !DILocation(line: 343, column: 37, scope: !15436)
!15441 = !DILocation(line: 343, column: 44, scope: !15436)
!15442 = !DILocation(line: 343, column: 42, scope: !15436)
!15443 = !DILocation(line: 343, column: 54, scope: !15436)
!15444 = !DILocation(line: 343, column: 51, scope: !15436)
!15445 = !DILocation(line: 343, column: 24, scope: !15436)
!15446 = !DILocation(line: 343, column: 17, scope: !15436)
!15447 = !DILocation(line: 343, column: 30, scope: !15436)
!15448 = !DILocation(line: 347, column: 41, scope: !15137)
!15449 = !DILocation(line: 347, column: 34, scope: !15137)
!15450 = !DILocation(line: 347, column: 46, scope: !15137)
!15451 = !DILocation(line: 347, column: 24, scope: !15137)
!15452 = !DILocation(line: 347, column: 61, scope: !15137)
!15453 = !DILocation(line: 347, column: 54, scope: !15137)
!15454 = !DILocation(line: 347, column: 66, scope: !15137)
!15455 = !DILocation(line: 347, column: 53, scope: !15137)
!15456 = !DILocation(line: 347, column: 51, scope: !15137)
!15457 = !DILocation(line: 348, column: 41, scope: !15137)
!15458 = !DILocation(line: 348, column: 34, scope: !15137)
!15459 = !DILocation(line: 348, column: 46, scope: !15137)
!15460 = !DILocation(line: 348, column: 24, scope: !15137)
!15461 = !DILocation(line: 348, column: 61, scope: !15137)
!15462 = !DILocation(line: 348, column: 54, scope: !15137)
!15463 = !DILocation(line: 348, column: 66, scope: !15137)
!15464 = !DILocation(line: 348, column: 53, scope: !15137)
!15465 = !DILocation(line: 348, column: 51, scope: !15137)
!15466 = !DILocation(line: 347, column: 71, scope: !15137)
!15467 = !DILocation(line: 348, column: 71, scope: !15137)
!15468 = !DILocation(line: 349, column: 36, scope: !15137)
!15469 = !DILocation(line: 347, column: 17, scope: !15137)
!15470 = !DILocation(line: 347, column: 15, scope: !15137)
!15471 = !DILocation(line: 350, column: 13, scope: !15472)
!15472 = distinct !DILexicalBlock(scope: !15137, file: !1058, line: 350, column: 13)
!15473 = !DILocation(line: 350, column: 19, scope: !15472)
!15474 = !DILocation(line: 350, column: 13, scope: !15137)
!15475 = !DILocation(line: 351, column: 20, scope: !15476)
!15476 = distinct !DILexicalBlock(scope: !15472, file: !1058, line: 350, column: 33)
!15477 = !DILocation(line: 351, column: 13, scope: !15476)
!15478 = !DILocation(line: 351, column: 26, scope: !15476)
!15479 = !DILocation(line: 352, column: 20, scope: !15476)
!15480 = !DILocation(line: 352, column: 13, scope: !15476)
!15481 = !DILocation(line: 352, column: 26, scope: !15476)
!15482 = !DILocation(line: 353, column: 20, scope: !15476)
!15483 = !DILocation(line: 353, column: 13, scope: !15476)
!15484 = !DILocation(line: 353, column: 26, scope: !15476)
!15485 = !DILocation(line: 354, column: 20, scope: !15476)
!15486 = !DILocation(line: 354, column: 13, scope: !15476)
!15487 = !DILocation(line: 354, column: 26, scope: !15476)
!15488 = !DILocation(line: 355, column: 9, scope: !15476)
!15489 = !DILocation(line: 357, column: 41, scope: !15137)
!15490 = !DILocation(line: 357, column: 34, scope: !15137)
!15491 = !DILocation(line: 357, column: 46, scope: !15137)
!15492 = !DILocation(line: 357, column: 24, scope: !15137)
!15493 = !DILocation(line: 357, column: 61, scope: !15137)
!15494 = !DILocation(line: 357, column: 54, scope: !15137)
!15495 = !DILocation(line: 357, column: 66, scope: !15137)
!15496 = !DILocation(line: 357, column: 53, scope: !15137)
!15497 = !DILocation(line: 357, column: 51, scope: !15137)
!15498 = !DILocation(line: 358, column: 41, scope: !15137)
!15499 = !DILocation(line: 358, column: 34, scope: !15137)
!15500 = !DILocation(line: 358, column: 46, scope: !15137)
!15501 = !DILocation(line: 358, column: 24, scope: !15137)
!15502 = !DILocation(line: 358, column: 61, scope: !15137)
!15503 = !DILocation(line: 358, column: 54, scope: !15137)
!15504 = !DILocation(line: 358, column: 66, scope: !15137)
!15505 = !DILocation(line: 358, column: 53, scope: !15137)
!15506 = !DILocation(line: 358, column: 51, scope: !15137)
!15507 = !DILocation(line: 357, column: 71, scope: !15137)
!15508 = !DILocation(line: 358, column: 71, scope: !15137)
!15509 = !DILocation(line: 359, column: 36, scope: !15137)
!15510 = !DILocation(line: 357, column: 17, scope: !15137)
!15511 = !DILocation(line: 357, column: 15, scope: !15137)
!15512 = !DILocation(line: 360, column: 13, scope: !15513)
!15513 = distinct !DILexicalBlock(scope: !15137, file: !1058, line: 360, column: 13)
!15514 = !DILocation(line: 360, column: 19, scope: !15513)
!15515 = !DILocation(line: 360, column: 13, scope: !15137)
!15516 = !DILocation(line: 361, column: 20, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15513, file: !1058, line: 360, column: 33)
!15518 = !DILocation(line: 361, column: 13, scope: !15517)
!15519 = !DILocation(line: 361, column: 26, scope: !15517)
!15520 = !DILocation(line: 362, column: 20, scope: !15517)
!15521 = !DILocation(line: 362, column: 13, scope: !15517)
!15522 = !DILocation(line: 362, column: 26, scope: !15517)
!15523 = !DILocation(line: 363, column: 20, scope: !15517)
!15524 = !DILocation(line: 363, column: 13, scope: !15517)
!15525 = !DILocation(line: 363, column: 26, scope: !15517)
!15526 = !DILocation(line: 364, column: 20, scope: !15517)
!15527 = !DILocation(line: 364, column: 13, scope: !15517)
!15528 = !DILocation(line: 364, column: 26, scope: !15517)
!15529 = !DILocation(line: 365, column: 9, scope: !15517)
!15530 = !DILocation(line: 366, column: 5, scope: !15137)
!15531 = !DILocation(line: 243, column: 26, scope: !15532)
!15532 = !DILexicalBlockFile(scope: !15132, file: !1058, discriminator: 2)
!15533 = !DILocation(line: 243, column: 5, scope: !15532)
!15534 = distinct !{!15534, !15535}
!15535 = !DILocation(line: 243, column: 5, scope: !15107)
!15536 = !DILocation(line: 367, column: 1, scope: !15107)
!15537 = distinct !DISubprogram(name: "av_sub_sf", scope: !1211, file: !1211, line: 173, type: !13873, isLocal: true, isDefinition: true, scopeLine: 173, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1006)
!15538 = !DILocalVariable(name: "a", arg: 1, scope: !15537, file: !1211, line: 173, type: !1210)
!15539 = !DILocation(line: 173, column: 68, scope: !15537)
!15540 = !DILocalVariable(name: "b", arg: 2, scope: !15537, file: !1211, line: 173, type: !1210)
!15541 = !DILocation(line: 173, column: 81, scope: !15537)
!15542 = !DILocation(line: 174, column: 36, scope: !15537)
!15543 = !DILocation(line: 174, column: 41, scope: !15537)
!15544 = !DILocation(line: 174, column: 38, scope: !15537)
!15545 = !DILocation(line: 174, column: 49, scope: !15537)
!15546 = !DILocation(line: 174, column: 12, scope: !15537)
!15547 = !DILocation(line: 174, column: 5, scope: !15537)
