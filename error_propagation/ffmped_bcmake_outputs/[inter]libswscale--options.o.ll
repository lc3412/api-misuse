; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libswscale--options.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libswscale--options.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, {}*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }

@.str = private unnamed_addr constant [9 x i8] c"SWScaler\00", align 1
@ff_sws_context_class = constant { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i8* (i8*)* @sws_context_to_name, %struct.AVOption* getelementptr inbounds ([44 x %struct.AVOption], [44 x %struct.AVOption]* bitcast (<{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @swscale_options to [44 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 9, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"swscaler\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"sws_flags\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"scaler flags\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"fast_bilinear\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"fast bilinear\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"bilinear\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"bicubic\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"experimental\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"neighbor\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"nearest neighbor\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"area\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"averaging area\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"bicublin\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"luma bicubic, chroma bilinear\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"gauss\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"Gaussian\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"sinc\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"lanczos\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"Lanczos\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"spline\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"natural bicubic spline\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"print_info\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"print info\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"accurate_rnd\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"accurate rounding\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"full_chroma_int\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"full chroma interpolation\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"full_chroma_inp\00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"full chroma input\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"bitexact\00", align 1
@.str.31 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"error_diffusion\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"error diffusion dither\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"srcw\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"source width\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"srch\00", align 1
@.str.37 = private unnamed_addr constant [14 x i8] c"source height\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"dstw\00", align 1
@.str.39 = private unnamed_addr constant [18 x i8] c"destination width\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"dsth\00", align 1
@.str.41 = private unnamed_addr constant [19 x i8] c"destination height\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"src_format\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"source format\00", align 1
@.str.44 = private unnamed_addr constant [11 x i8] c"dst_format\00", align 1
@.str.45 = private unnamed_addr constant [19 x i8] c"destination format\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"src_range\00", align 1
@.str.47 = private unnamed_addr constant [21 x i8] c"source is full range\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"dst_range\00", align 1
@.str.49 = private unnamed_addr constant [26 x i8] c"destination is full range\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"param0\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"scaler param 0\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"param1\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"scaler param 1\00", align 1
@.str.54 = private unnamed_addr constant [14 x i8] c"src_v_chr_pos\00", align 1
@.str.55 = private unnamed_addr constant [49 x i8] c"source vertical chroma position in luma grid/256\00", align 1
@.str.56 = private unnamed_addr constant [14 x i8] c"src_h_chr_pos\00", align 1
@.str.57 = private unnamed_addr constant [51 x i8] c"source horizontal chroma position in luma grid/256\00", align 1
@.str.58 = private unnamed_addr constant [14 x i8] c"dst_v_chr_pos\00", align 1
@.str.59 = private unnamed_addr constant [54 x i8] c"destination vertical chroma position in luma grid/256\00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"dst_h_chr_pos\00", align 1
@.str.61 = private unnamed_addr constant [56 x i8] c"destination horizontal chroma position in luma grid/256\00", align 1
@.str.62 = private unnamed_addr constant [11 x i8] c"sws_dither\00", align 1
@.str.63 = private unnamed_addr constant [24 x i8] c"set dithering algorithm\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.65 = private unnamed_addr constant [20 x i8] c"leave choice to sws\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"bayer\00", align 1
@.str.67 = private unnamed_addr constant [13 x i8] c"bayer dither\00", align 1
@.str.68 = private unnamed_addr constant [3 x i8] c"ed\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"error diffusion\00", align 1
@.str.70 = private unnamed_addr constant [9 x i8] c"a_dither\00", align 1
@.str.71 = private unnamed_addr constant [27 x i8] c"arithmetic addition dither\00", align 1
@.str.72 = private unnamed_addr constant [9 x i8] c"x_dither\00", align 1
@.str.73 = private unnamed_addr constant [22 x i8] c"arithmetic xor dither\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"gamma\00", align 1
@.str.75 = private unnamed_addr constant [22 x i8] c"gamma correct scaling\00", align 1
@.str.76 = private unnamed_addr constant [11 x i8] c"alphablend\00", align 1
@.str.77 = private unnamed_addr constant [28 x i8] c"mode for alpha -> non alpha\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.79 = private unnamed_addr constant [13 x i8] c"ignore alpha\00", align 1
@.str.80 = private unnamed_addr constant [14 x i8] c"uniform_color\00", align 1
@.str.81 = private unnamed_addr constant [27 x i8] c"blend onto a uniform color\00", align 1
@.str.82 = private unnamed_addr constant [13 x i8] c"checkerboard\00", align 1
@.str.83 = private unnamed_addr constant [26 x i8] c"blend onto a checkerboard\00", align 1
@swscale_options = internal constant <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0), i32 3540, i32 0, %union.anon { i64 4 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 32 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 64 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 128 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 256 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 512 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1024 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4096 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 262144 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8192 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16384 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.31, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 524288 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8388608 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i32 0, i32 0), i32 16, i32 1, %union.anon { i64 16 }, double 1.000000e+00, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i32 0, i32 0), i32 20, i32 1, %union.anon { i64 16 }, double 1.000000e+00, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39, i32 0, i32 0), i32 48520, i32 1, %union.anon { i64 16 }, double 1.000000e+00, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.41, i32 0, i32 0), i32 24, i32 1, %union.anon { i64 16 }, double 1.000000e+00, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i32 0, i32 0), i32 64, i32 12, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i32 0, i32 0), i32 60, i32 12, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i32 0, i32 0), i32 40172, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i32 0, i32 0), i32 40176, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 17, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i32 112, i32 3, { double } { double 1.234560e+05 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i32 0, i32 0), i32 120, i32 3, { double } { double 1.234560e+05 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 40204, i32 1, %union.anon { i64 -513 }, double -5.130000e+02, double 5.120000e+02, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.57, i32 0, i32 0), i32 40196, i32 1, %union.anon { i64 -513 }, double -5.130000e+02, double 5.120000e+02, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.59, i32 0, i32 0), i32 40208, i32 1, %union.anon { i64 -513 }, double -5.130000e+02, double 5.120000e+02, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.61, i32 0, i32 0), i32 40200, i32 1, %union.anon { i64 -513 }, double -5.130000e+02, double 5.120000e+02, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.63, i32 0, i32 0), i32 52988, i32 1, %union.anon { i64 1 }, double 0.000000e+00, double 6.000000e+00, i32 17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.75, i32 0, i32 0), i32 264, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.77, i32 0, i32 0), i32 52992, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 2.000000e+00, i32 17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.76, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.79, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.76, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.81, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.76, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.83, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.76, i32 0, i32 0) }, %struct.AVOption zeroinitializer }>, align 16

; Function Attrs: nounwind uwtable
define internal i8* @sws_context_to_name(i8* %ptr) #0 !dbg !143 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !145, metadata !146), !dbg !147
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), !dbg !148
}

; Function Attrs: nounwind uwtable
define %struct.AVClass* @sws_get_class() #0 !dbg !149 {
entry:
  ret %struct.AVClass* bitcast ({ i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }* @ff_sws_context_class to %struct.AVClass*), !dbg !153
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!140, !141}
!llvm.ident = !{!142}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, globals: !46)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libswscale--options.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !25}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !4, line: 221, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!6 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!7 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!8 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!9 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!10 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!11 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!12 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!13 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!14 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!15 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!16 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!17 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!18 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!19 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!20 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!21 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!22 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!23 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!24 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 29, size: 32, align: 32, elements: !27)
!26 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!27 = !{!28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!28 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!29 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!30 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!31 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!32 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!33 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!34 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!35 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!36 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!37 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!38 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!39 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!40 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!41 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!42 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!43 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!44 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!45 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!46 = !{!47, !134}
!47 = distinct !DIGlobalVariable(name: "ff_sws_context_class", scope: !0, file: !48, line: 87, type: !49, isLocal: false, isDefinition: true, variable: { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }* @ff_sws_context_class)
!48 = !DIFile(filename: "libswscale/options.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!49 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !50)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !26, line: 143, baseType: !51)
!51 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !26, line: 67, size: 640, align: 64, elements: !52)
!52 = !{!53, !57, !62, !93, !94, !95, !96, !100, !106, !108, !112}
!53 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !51, file: !26, line: 72, baseType: !54, size: 64, align: 64)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64, align: 64)
!55 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !56)
!56 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !51, file: !26, line: 78, baseType: !58, size: 64, align: 64, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64, align: 64)
!59 = !DISubroutineType(types: !60)
!60 = !{!54, !61}
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !51, file: !26, line: 85, baseType: !63, size: 64, align: 64, offset: 128)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64, align: 64)
!64 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !65)
!65 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 246, size: 512, align: 64, elements: !66)
!66 = !{!67, !68, !69, !71, !72, !89, !90, !91, !92}
!67 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !65, file: !4, line: 247, baseType: !54, size: 64, align: 64)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !65, file: !4, line: 253, baseType: !54, size: 64, align: 64, offset: 64)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !65, file: !4, line: 259, baseType: !70, size: 32, align: 32, offset: 128)
!70 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !65, file: !4, line: 260, baseType: !3, size: 32, align: 32, offset: 160)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !65, file: !4, line: 271, baseType: !73, size: 64, align: 64, offset: 192)
!73 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !65, file: !4, line: 265, size: 64, align: 64, elements: !74)
!74 = !{!75, !79, !81, !82}
!75 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !73, file: !4, line: 266, baseType: !76, size: 64, align: 64)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !77, line: 40, baseType: !78)
!77 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!78 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !73, file: !4, line: 267, baseType: !80, size: 64, align: 64)
!80 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !73, file: !4, line: 268, baseType: !54, size: 64, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !73, file: !4, line: 270, baseType: !83, size: 64, align: 32)
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !84, line: 61, baseType: !85)
!84 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !84, line: 58, size: 64, align: 32, elements: !86)
!86 = !{!87, !88}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !85, file: !84, line: 59, baseType: !70, size: 32, align: 32)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !85, file: !84, line: 60, baseType: !70, size: 32, align: 32, offset: 32)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !65, file: !4, line: 272, baseType: !80, size: 64, align: 64, offset: 256)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !65, file: !4, line: 273, baseType: !80, size: 64, align: 64, offset: 320)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !65, file: !4, line: 275, baseType: !70, size: 32, align: 32, offset: 384)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !65, file: !4, line: 300, baseType: !54, size: 64, align: 64, offset: 448)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !51, file: !26, line: 93, baseType: !70, size: 32, align: 32, offset: 192)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !51, file: !26, line: 99, baseType: !70, size: 32, align: 32, offset: 224)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !51, file: !26, line: 108, baseType: !70, size: 32, align: 32, offset: 256)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !51, file: !26, line: 113, baseType: !97, size: 64, align: 64, offset: 320)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64, align: 64)
!98 = !DISubroutineType(types: !99)
!99 = !{!61, !61, !61}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !51, file: !26, line: 123, baseType: !101, size: 64, align: 64, offset: 384)
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64, align: 64)
!102 = !DISubroutineType(types: !103)
!103 = !{!104, !104}
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64, align: 64)
!105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !51)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !51, file: !26, line: 130, baseType: !107, size: 32, align: 32, offset: 448)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !26, line: 48, baseType: !25)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !51, file: !26, line: 136, baseType: !109, size: 64, align: 64, offset: 512)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64, align: 64)
!110 = !DISubroutineType(types: !111)
!111 = !{!107, !61}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !51, file: !26, line: 142, baseType: !113, size: 64, align: 64, offset: 576)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64, align: 64)
!114 = !DISubroutineType(types: !115)
!115 = !{!70, !116, !61, !54, !70}
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64, align: 64)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64, align: 64)
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 329, size: 128, align: 64, elements: !119)
!119 = !{!120, !132, !133}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !118, file: !4, line: 360, baseType: !121, size: 64, align: 64)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64, align: 64)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !4, line: 324, baseType: !124)
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !4, line: 306, size: 384, align: 64, elements: !125)
!125 = !{!126, !127, !128, !129, !130, !131}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !124, file: !4, line: 307, baseType: !54, size: 64, align: 64)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !124, file: !4, line: 313, baseType: !80, size: 64, align: 64, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !124, file: !4, line: 313, baseType: !80, size: 64, align: 64, offset: 128)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !124, file: !4, line: 318, baseType: !80, size: 64, align: 64, offset: 192)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !124, file: !4, line: 318, baseType: !80, size: 64, align: 64, offset: 256)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !124, file: !4, line: 323, baseType: !70, size: 32, align: 32, offset: 320)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !118, file: !4, line: 364, baseType: !70, size: 32, align: 32, offset: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !118, file: !4, line: 368, baseType: !70, size: 32, align: 32, offset: 96)
!134 = distinct !DIGlobalVariable(name: "swscale_options", scope: !0, file: !48, line: 36, type: !135, isLocal: true, isDefinition: true, variable: <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @swscale_options)
!135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 22528, align: 64, elements: !138)
!136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !4, line: 301, baseType: !65)
!138 = !{!139}
!139 = !DISubrange(count: 44)
!140 = !{i32 2, !"Dwarf Version", i32 4}
!141 = !{i32 2, !"Debug Info Version", i32 3}
!142 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!143 = distinct !DISubprogram(name: "sws_context_to_name", scope: !48, file: !48, line: 27, type: !59, isLocal: true, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !144)
!144 = !{}
!145 = !DILocalVariable(name: "ptr", arg: 1, scope: !143, file: !48, line: 27, type: !61)
!146 = !DIExpression()
!147 = !DILocation(line: 27, column: 46, scope: !143)
!148 = !DILocation(line: 29, column: 5, scope: !143)
!149 = distinct !DISubprogram(name: "sws_get_class", scope: !48, file: !48, line: 95, type: !150, isLocal: false, isDefinition: true, scopeLine: 96, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !144)
!150 = !DISubroutineType(types: !151)
!151 = !{!152}
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64, align: 64)
!153 = !DILocation(line: 97, column: 5, scope: !149)
