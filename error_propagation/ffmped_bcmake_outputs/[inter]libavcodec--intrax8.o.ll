; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--intrax8.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--intrax8.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.IntraX8Context = type { [4 x %struct.VLC*], %struct.VLC*, [3 x %struct.VLC*], i32, i8*, [3 x %struct.ScanTable], %struct.WMV2DSPContext, [64 x i8], %struct.AVCodecContext*, i32*, [64 x i16]*, %struct.IntraX8DSPContext, %struct.IDCTDSPContext, %struct.BlockDSPContext, i32, i32, i32, i32, %struct.AVFrame*, %struct.GetBitContext*, i32, i32, i32, [3 x i8*], [42 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ScanTable = type { i8*, [64 x i8], [64 x i8] }
%struct.WMV2DSPContext = type { void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, [8 x void (i8*, i8*, i64)*], i32 }
%struct.IntraX8DSPContext = type { void (i8*, i64, i32)*, void (i8*, i64, i32)*, [12 x void (i8*, i8*, i64)*], void (i8*, i8*, i64, i32*, i32*, i32)* }
%struct.IDCTDSPContext = type { void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, [64 x i8], i32, i32 }
%struct.BlockDSPContext = type { void (i16*)*, void (i16*)*, [2 x void (i8*, i8, i64, i32)*] }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.Picture = type { %struct.AVFrame*, %struct.ThreadFrame, %struct.AVBufferRef*, i8*, [2 x %struct.AVBufferRef*], [2 x [2 x i16]*], %struct.AVBufferRef*, i32*, %struct.AVBufferRef*, i8*, [2 x %struct.AVBufferRef*], [2 x i8*], %struct.AVBufferRef*, i16*, %struct.AVBufferRef*, i16*, i32, i32, %struct.AVBufferRef*, i8*, %struct.AVBufferRef*, i8*, i32, i64, i64, i32, i32, i32, i32, [8 x i64] }
%struct.ThreadFrame = type { %struct.AVFrame*, [2 x %struct.AVCodecContext*], %struct.AVBufferRef* }
%union.unaligned_32 = type { i32 }

@ff_wmv1_scantable = external constant [4 x [64 x i8]], align 16
@x8_vlc_init.sizes = internal constant [54 x i16] [i16 576, i16 548, i16 582, i16 618, i16 546, i16 616, i16 560, i16 642, i16 584, i16 582, i16 704, i16 664, i16 512, i16 544, i16 656, i16 640, i16 512, i16 648, i16 582, i16 566, i16 532, i16 614, i16 596, i16 648, i16 586, i16 552, i16 584, i16 590, i16 544, i16 578, i16 584, i16 624, i16 528, i16 528, i16 526, i16 528, i16 536, i16 528, i16 526, i16 544, i16 544, i16 512, i16 512, i16 528, i16 528, i16 544, i16 512, i16 544, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128], align 16
@x8_vlc_init.table = internal global [28150 x [2 x i16]] zeroinitializer, align 16
@j_ac_vlc = internal global [2 x [2 x [8 x %struct.VLC]]] zeroinitializer, align 16
@x8_ac0_highquant_table = internal constant [8 x [77 x [2 x i16]]] [[77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 12, i16 6], [2 x i16] [i16 13, i16 6], [2 x i16] [i16 28, i16 7], [2 x i16] [i16 15, i16 6], [2 x i16] [i16 7424, i16 15], [2 x i16] [i16 59, i16 8], [2 x i16] [i16 7425, i16 15], [2 x i16] [i16 117, i16 9], [2 x i16] [i16 7426, i16 15], [2 x i16] [i16 128, i16 9], [2 x i16] [i16 7427, i16 15], [2 x i16] [i16 7428, i16 15], [2 x i16] [i16 7429, i16 15], [2 x i16] [i16 3715, i16 14], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 17, i16 6], [2 x i16] [i16 129, i16 9], [2 x i16] [i16 130, i16 9], [2 x i16] [i16 33, i16 7], [2 x i16] [i16 40, i16 7], [2 x i16] [i16 131, i16 9], [2 x i16] [i16 2, i16 2], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 21, i16 6], [2 x i16] [i16 82, i16 8], [2 x i16] [i16 112, i16 7], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 113, i16 7], [2 x i16] [i16 83, i16 8], [2 x i16] [i16 3716, i16 14], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 117, i16 7], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 476, i16 9], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 477, i16 9], [2 x i16] [i16 239, i16 8], [2 x i16] [i16 504, i16 9], [2 x i16] [i16 505, i16 9], [2 x i16] [i16 3717, i16 14], [2 x i16] [i16 3718, i16 14], [2 x i16] [i16 3719, i16 14], [2 x i16] [i16 253, i16 8], [2 x i16] [i16 3720, i16 14], [2 x i16] [i16 3721, i16 14], [2 x i16] [i16 3722, i16 14], [2 x i16] [i16 3723, i16 14], [2 x i16] [i16 3724, i16 14], [2 x i16] [i16 3725, i16 14], [2 x i16] [i16 3726, i16 14], [2 x i16] [i16 3727, i16 14], [2 x i16] [i16 3728, i16 14], [2 x i16] [i16 3729, i16 14], [2 x i16] [i16 508, i16 9], [2 x i16] [i16 3730, i16 14], [2 x i16] [i16 3731, i16 14], [2 x i16] [i16 3732, i16 14], [2 x i16] [i16 3733, i16 14], [2 x i16] [i16 3734, i16 14], [2 x i16] [i16 3735, i16 14], [2 x i16] [i16 509, i16 9], [2 x i16] [i16 3736, i16 14], [2 x i16] [i16 510, i16 9], [2 x i16] [i16 3737, i16 14], [2 x i16] [i16 3738, i16 14], [2 x i16] [i16 3739, i16 14], [2 x i16] [i16 3740, i16 14], [2 x i16] [i16 511, i16 9], [2 x i16] [i16 3741, i16 14], [2 x i16] [i16 3742, i16 14], [2 x i16] [i16 3743, i16 14]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 18, i16 6], [2 x i16] [i16 19, i16 6], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 21, i16 6], [2 x i16] [i16 44, i16 7], [2 x i16] [i16 90, i16 8], [2 x i16] [i16 91, i16 8], [2 x i16] [i16 92, i16 8], [2 x i16] [i16 93, i16 8], [2 x i16] [i16 6016, i16 14], [2 x i16] [i16 377, i16 10], [2 x i16] [i16 378, i16 10], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 62, i16 7], [2 x i16] [i16 16, i16 5], [2 x i16] [i16 34, i16 6], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 35, i16 6], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 47, i16 6], [2 x i16] [i16 48, i16 6], [2 x i16] [i16 49, i16 6], [2 x i16] [i16 63, i16 7], [2 x i16] [i16 95, i16 8], [2 x i16] [i16 200, i16 8], [2 x i16] [i16 101, i16 7], [2 x i16] [i16 102, i16 7], [2 x i16] [i16 103, i16 7], [2 x i16] [i16 104, i16 7], [2 x i16] [i16 201, i16 8], [2 x i16] [i16 105, i16 7], [2 x i16] [i16 106, i16 7], [2 x i16] [i16 214, i16 8], [2 x i16] [i16 215, i16 8], [2 x i16] [i16 216, i16 8], [2 x i16] [i16 6017, i16 14], [2 x i16] [i16 379, i16 10], [2 x i16] [i16 434, i16 9], [2 x i16] [i16 6018, i16 14], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 435, i16 9], [2 x i16] [i16 6019, i16 14], [2 x i16] [i16 6020, i16 14], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 218, i16 8], [2 x i16] [i16 6021, i16 14], [2 x i16] [i16 6022, i16 14], [2 x i16] [i16 6023, i16 14], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 219, i16 8], [2 x i16] [i16 120, i16 7], [2 x i16] [i16 242, i16 8], [2 x i16] [i16 486, i16 9], [2 x i16] [i16 244, i16 8], [2 x i16] [i16 6024, i16 14], [2 x i16] [i16 6025, i16 14], [2 x i16] [i16 245, i16 8], [2 x i16] [i16 487, i16 9], [2 x i16] [i16 6026, i16 14], [2 x i16] [i16 6027, i16 14], [2 x i16] [i16 6028, i16 14], [2 x i16] [i16 6029, i16 14], [2 x i16] [i16 492, i16 9], [2 x i16] [i16 6030, i16 14], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 247, i16 8], [2 x i16] [i16 493, i16 9], [2 x i16] [i16 6031, i16 14]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 4], [2 x i16] [i16 2, i16 5], [2 x i16] [i16 384, i16 12], [2 x i16] [i16 385, i16 12], [2 x i16] [i16 386, i16 12], [2 x i16] [i16 387, i16 12], [2 x i16] [i16 388, i16 12], [2 x i16] [i16 389, i16 12], [2 x i16] [i16 390, i16 12], [2 x i16] [i16 391, i16 12], [2 x i16] [i16 392, i16 12], [2 x i16] [i16 393, i16 12], [2 x i16] [i16 197, i16 11], [2 x i16] [i16 198, i16 11], [2 x i16] [i16 199, i16 11], [2 x i16] [i16 200, i16 11], [2 x i16] [i16 201, i16 11], [2 x i16] [i16 202, i16 11], [2 x i16] [i16 203, i16 11], [2 x i16] [i16 204, i16 11], [2 x i16] [i16 205, i16 11], [2 x i16] [i16 206, i16 11], [2 x i16] [i16 207, i16 11], [2 x i16] [i16 1, i16 1], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 4, i16 5], [2 x i16] [i16 5, i16 5], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 208, i16 11], [2 x i16] [i16 209, i16 11], [2 x i16] [i16 210, i16 11], [2 x i16] [i16 211, i16 11], [2 x i16] [i16 212, i16 11], [2 x i16] [i16 213, i16 11], [2 x i16] [i16 214, i16 11], [2 x i16] [i16 215, i16 11], [2 x i16] [i16 216, i16 11], [2 x i16] [i16 217, i16 11], [2 x i16] [i16 218, i16 11], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 219, i16 11], [2 x i16] [i16 220, i16 11], [2 x i16] [i16 221, i16 11], [2 x i16] [i16 222, i16 11], [2 x i16] [i16 223, i16 11], [2 x i16] [i16 224, i16 11], [2 x i16] [i16 225, i16 11], [2 x i16] [i16 226, i16 11], [2 x i16] [i16 227, i16 11], [2 x i16] [i16 228, i16 11], [2 x i16] [i16 229, i16 11], [2 x i16] [i16 230, i16 11], [2 x i16] [i16 231, i16 11], [2 x i16] [i16 232, i16 11], [2 x i16] [i16 233, i16 11], [2 x i16] [i16 234, i16 11], [2 x i16] [i16 235, i16 11], [2 x i16] [i16 236, i16 11], [2 x i16] [i16 237, i16 11], [2 x i16] [i16 238, i16 11], [2 x i16] [i16 239, i16 11], [2 x i16] [i16 240, i16 11], [2 x i16] [i16 241, i16 11], [2 x i16] [i16 242, i16 11], [2 x i16] [i16 243, i16 11], [2 x i16] [i16 244, i16 11], [2 x i16] [i16 245, i16 11], [2 x i16] [i16 246, i16 11], [2 x i16] [i16 247, i16 11], [2 x i16] [i16 248, i16 11], [2 x i16] [i16 249, i16 11], [2 x i16] [i16 250, i16 11], [2 x i16] [i16 251, i16 11], [2 x i16] [i16 252, i16 11], [2 x i16] [i16 253, i16 11], [2 x i16] [i16 254, i16 11], [2 x i16] [i16 255, i16 11]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 8], [2 x i16] [i16 1, i16 8], [2 x i16] [i16 2, i16 8], [2 x i16] [i16 3, i16 8], [2 x i16] [i16 4, i16 8], [2 x i16] [i16 5, i16 8], [2 x i16] [i16 6, i16 8], [2 x i16] [i16 7, i16 8], [2 x i16] [i16 8, i16 8], [2 x i16] [i16 9, i16 8], [2 x i16] [i16 10, i16 8], [2 x i16] [i16 11, i16 8], [2 x i16] [i16 12, i16 8], [2 x i16] [i16 13, i16 8], [2 x i16] [i16 14, i16 8], [2 x i16] [i16 15, i16 8], [2 x i16] [i16 16, i16 8], [2 x i16] [i16 17, i16 8], [2 x i16] [i16 18, i16 8], [2 x i16] [i16 19, i16 8], [2 x i16] [i16 20, i16 8], [2 x i16] [i16 21, i16 8], [2 x i16] [i16 22, i16 8], [2 x i16] [i16 1, i16 1], [2 x i16] [i16 23, i16 8], [2 x i16] [i16 12, i16 7], [2 x i16] [i16 13, i16 7], [2 x i16] [i16 14, i16 7], [2 x i16] [i16 15, i16 7], [2 x i16] [i16 16, i16 7], [2 x i16] [i16 17, i16 7], [2 x i16] [i16 18, i16 7], [2 x i16] [i16 19, i16 7], [2 x i16] [i16 20, i16 7], [2 x i16] [i16 21, i16 7], [2 x i16] [i16 22, i16 7], [2 x i16] [i16 23, i16 7], [2 x i16] [i16 24, i16 7], [2 x i16] [i16 25, i16 7], [2 x i16] [i16 26, i16 7], [2 x i16] [i16 27, i16 7], [2 x i16] [i16 28, i16 7], [2 x i16] [i16 29, i16 7], [2 x i16] [i16 30, i16 7], [2 x i16] [i16 31, i16 7], [2 x i16] [i16 32, i16 7], [2 x i16] [i16 33, i16 7], [2 x i16] [i16 34, i16 7], [2 x i16] [i16 35, i16 7], [2 x i16] [i16 36, i16 7], [2 x i16] [i16 37, i16 7], [2 x i16] [i16 38, i16 7], [2 x i16] [i16 39, i16 7], [2 x i16] [i16 40, i16 7], [2 x i16] [i16 41, i16 7], [2 x i16] [i16 42, i16 7], [2 x i16] [i16 43, i16 7], [2 x i16] [i16 44, i16 7], [2 x i16] [i16 45, i16 7], [2 x i16] [i16 46, i16 7], [2 x i16] [i16 47, i16 7], [2 x i16] [i16 48, i16 7], [2 x i16] [i16 49, i16 7], [2 x i16] [i16 50, i16 7], [2 x i16] [i16 51, i16 7], [2 x i16] [i16 52, i16 7], [2 x i16] [i16 53, i16 7], [2 x i16] [i16 54, i16 7], [2 x i16] [i16 55, i16 7], [2 x i16] [i16 56, i16 7], [2 x i16] [i16 57, i16 7], [2 x i16] [i16 58, i16 7], [2 x i16] [i16 59, i16 7], [2 x i16] [i16 60, i16 7], [2 x i16] [i16 61, i16 7], [2 x i16] [i16 62, i16 7], [2 x i16] [i16 63, i16 7]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 9], [2 x i16] [i16 1, i16 9], [2 x i16] [i16 2, i16 9], [2 x i16] [i16 3, i16 9], [2 x i16] [i16 4, i16 9], [2 x i16] [i16 5, i16 9], [2 x i16] [i16 6, i16 9], [2 x i16] [i16 7, i16 9], [2 x i16] [i16 8, i16 9], [2 x i16] [i16 9, i16 9], [2 x i16] [i16 10, i16 9], [2 x i16] [i16 11, i16 9], [2 x i16] [i16 12, i16 9], [2 x i16] [i16 13, i16 9], [2 x i16] [i16 14, i16 9], [2 x i16] [i16 15, i16 9], [2 x i16] [i16 16, i16 9], [2 x i16] [i16 17, i16 9], [2 x i16] [i16 18, i16 9], [2 x i16] [i16 19, i16 9], [2 x i16] [i16 20, i16 9], [2 x i16] [i16 21, i16 9], [2 x i16] [i16 11, i16 8], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 1, i16 1], [2 x i16] [i16 12, i16 8], [2 x i16] [i16 13, i16 8], [2 x i16] [i16 14, i16 8], [2 x i16] [i16 15, i16 8], [2 x i16] [i16 16, i16 8], [2 x i16] [i16 17, i16 8], [2 x i16] [i16 18, i16 8], [2 x i16] [i16 19, i16 8], [2 x i16] [i16 20, i16 8], [2 x i16] [i16 21, i16 8], [2 x i16] [i16 22, i16 8], [2 x i16] [i16 23, i16 8], [2 x i16] [i16 24, i16 8], [2 x i16] [i16 25, i16 8], [2 x i16] [i16 26, i16 8], [2 x i16] [i16 27, i16 8], [2 x i16] [i16 28, i16 8], [2 x i16] [i16 29, i16 8], [2 x i16] [i16 30, i16 8], [2 x i16] [i16 31, i16 8], [2 x i16] [i16 32, i16 8], [2 x i16] [i16 33, i16 8], [2 x i16] [i16 34, i16 8], [2 x i16] [i16 35, i16 8], [2 x i16] [i16 36, i16 8], [2 x i16] [i16 37, i16 8], [2 x i16] [i16 38, i16 8], [2 x i16] [i16 39, i16 8], [2 x i16] [i16 40, i16 8], [2 x i16] [i16 41, i16 8], [2 x i16] [i16 42, i16 8], [2 x i16] [i16 43, i16 8], [2 x i16] [i16 44, i16 8], [2 x i16] [i16 45, i16 8], [2 x i16] [i16 46, i16 8], [2 x i16] [i16 47, i16 8], [2 x i16] [i16 48, i16 8], [2 x i16] [i16 49, i16 8], [2 x i16] [i16 50, i16 8], [2 x i16] [i16 51, i16 8], [2 x i16] [i16 52, i16 8], [2 x i16] [i16 53, i16 8], [2 x i16] [i16 54, i16 8], [2 x i16] [i16 55, i16 8], [2 x i16] [i16 56, i16 8], [2 x i16] [i16 57, i16 8], [2 x i16] [i16 58, i16 8], [2 x i16] [i16 59, i16 8], [2 x i16] [i16 60, i16 8], [2 x i16] [i16 61, i16 8], [2 x i16] [i16 62, i16 8], [2 x i16] [i16 63, i16 8]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 10], [2 x i16] [i16 1, i16 10], [2 x i16] [i16 2, i16 10], [2 x i16] [i16 3, i16 10], [2 x i16] [i16 4, i16 10], [2 x i16] [i16 5, i16 10], [2 x i16] [i16 6, i16 10], [2 x i16] [i16 7, i16 10], [2 x i16] [i16 8, i16 10], [2 x i16] [i16 9, i16 10], [2 x i16] [i16 10, i16 10], [2 x i16] [i16 11, i16 10], [2 x i16] [i16 12, i16 10], [2 x i16] [i16 13, i16 10], [2 x i16] [i16 14, i16 10], [2 x i16] [i16 15, i16 10], [2 x i16] [i16 16, i16 10], [2 x i16] [i16 17, i16 10], [2 x i16] [i16 18, i16 10], [2 x i16] [i16 19, i16 10], [2 x i16] [i16 10, i16 9], [2 x i16] [i16 11, i16 9], [2 x i16] [i16 12, i16 9], [2 x i16] [i16 1, i16 1], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 13, i16 9], [2 x i16] [i16 14, i16 9], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 15, i16 9], [2 x i16] [i16 16, i16 9], [2 x i16] [i16 17, i16 9], [2 x i16] [i16 18, i16 9], [2 x i16] [i16 19, i16 9], [2 x i16] [i16 20, i16 9], [2 x i16] [i16 21, i16 9], [2 x i16] [i16 22, i16 9], [2 x i16] [i16 23, i16 9], [2 x i16] [i16 24, i16 9], [2 x i16] [i16 25, i16 9], [2 x i16] [i16 26, i16 9], [2 x i16] [i16 27, i16 9], [2 x i16] [i16 28, i16 9], [2 x i16] [i16 29, i16 9], [2 x i16] [i16 30, i16 9], [2 x i16] [i16 31, i16 9], [2 x i16] [i16 32, i16 9], [2 x i16] [i16 33, i16 9], [2 x i16] [i16 34, i16 9], [2 x i16] [i16 35, i16 9], [2 x i16] [i16 36, i16 9], [2 x i16] [i16 37, i16 9], [2 x i16] [i16 38, i16 9], [2 x i16] [i16 39, i16 9], [2 x i16] [i16 40, i16 9], [2 x i16] [i16 41, i16 9], [2 x i16] [i16 42, i16 9], [2 x i16] [i16 43, i16 9], [2 x i16] [i16 44, i16 9], [2 x i16] [i16 45, i16 9], [2 x i16] [i16 46, i16 9], [2 x i16] [i16 47, i16 9], [2 x i16] [i16 48, i16 9], [2 x i16] [i16 49, i16 9], [2 x i16] [i16 50, i16 9], [2 x i16] [i16 51, i16 9], [2 x i16] [i16 52, i16 9], [2 x i16] [i16 53, i16 9], [2 x i16] [i16 54, i16 9], [2 x i16] [i16 55, i16 9], [2 x i16] [i16 56, i16 9], [2 x i16] [i16 57, i16 9], [2 x i16] [i16 58, i16 9], [2 x i16] [i16 59, i16 9], [2 x i16] [i16 60, i16 9], [2 x i16] [i16 61, i16 9], [2 x i16] [i16 62, i16 9], [2 x i16] [i16 63, i16 9]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 24, i16 6], [2 x i16] [i16 25, i16 6], [2 x i16] [i16 52, i16 7], [2 x i16] [i16 106, i16 8], [2 x i16] [i16 107, i16 8], [2 x i16] [i16 108, i16 8], [2 x i16] [i16 218, i16 9], [2 x i16] [i16 219, i16 9], [2 x i16] [i16 440, i16 10], [2 x i16] [i16 221, i16 9], [2 x i16] [i16 441, i16 10], [2 x i16] [i16 14208, i16 15], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 31, i16 6], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 88, i16 7], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 89, i16 7], [2 x i16] [i16 90, i16 7], [2 x i16] [i16 91, i16 7], [2 x i16] [i16 200, i16 8], [2 x i16] [i16 101, i16 7], [2 x i16] [i16 102, i16 7], [2 x i16] [i16 201, i16 8], [2 x i16] [i16 206, i16 8], [2 x i16] [i16 207, i16 8], [2 x i16] [i16 208, i16 8], [2 x i16] [i16 209, i16 8], [2 x i16] [i16 210, i16 8], [2 x i16] [i16 211, i16 8], [2 x i16] [i16 223, i16 9], [2 x i16] [i16 212, i16 8], [2 x i16] [i16 213, i16 8], [2 x i16] [i16 214, i16 8], [2 x i16] [i16 430, i16 9], [2 x i16] [i16 14209, i16 15], [2 x i16] [i16 445, i16 10], [2 x i16] [i16 862, i16 10], [2 x i16] [i16 863, i16 10], [2 x i16] [i16 14210, i16 15], [2 x i16] [i16 864, i16 10], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 433, i16 9], [2 x i16] [i16 14211, i16 15], [2 x i16] [i16 14212, i16 15], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 865, i16 10], [2 x i16] [i16 14213, i16 15], [2 x i16] [i16 7107, i16 14], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 217, i16 8], [2 x i16] [i16 7108, i16 14], [2 x i16] [i16 872, i16 10], [2 x i16] [i16 7109, i16 14], [2 x i16] [i16 7110, i16 14], [2 x i16] [i16 7111, i16 14], [2 x i16] [i16 7112, i16 14], [2 x i16] [i16 219, i16 8], [2 x i16] [i16 873, i16 10], [2 x i16] [i16 874, i16 10], [2 x i16] [i16 7113, i16 14], [2 x i16] [i16 7114, i16 14], [2 x i16] [i16 7115, i16 14], [2 x i16] [i16 7116, i16 14], [2 x i16] [i16 7117, i16 14], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 875, i16 10], [2 x i16] [i16 7118, i16 14], [2 x i16] [i16 7119, i16 14]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 16, i16 6], [2 x i16] [i16 68, i16 8], [2 x i16] [i16 35, i16 7], [2 x i16] [i16 18, i16 6], [2 x i16] [i16 38, i16 7], [2 x i16] [i16 2208, i16 13], [2 x i16] [i16 78, i16 8], [2 x i16] [i16 79, i16 8], [2 x i16] [i16 2209, i16 13], [2 x i16] [i16 2210, i16 13], [2 x i16] [i16 2211, i16 13], [2 x i16] [i16 80, i16 8], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 41, i16 7], [2 x i16] [i16 21, i16 6], [2 x i16] [i16 28, i16 6], [2 x i16] [i16 58, i16 7], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 20, i16 5], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 31, i16 6], [2 x i16] [i16 48, i16 6], [2 x i16] [i16 49, i16 6], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 81, i16 8], [2 x i16] [i16 52, i16 6], [2 x i16] [i16 53, i16 6], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 118, i16 8], [2 x i16] [i16 119, i16 8], [2 x i16] [i16 112, i16 7], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 113, i16 7], [2 x i16] [i16 114, i16 7], [2 x i16] [i16 2212, i16 13], [2 x i16] [i16 115, i16 7], [2 x i16] [i16 240, i16 8], [2 x i16] [i16 2213, i16 13], [2 x i16] [i16 2214, i16 13], [2 x i16] [i16 2215, i16 13], [2 x i16] [i16 121, i16 7], [2 x i16] [i16 122, i16 7], [2 x i16] [i16 2216, i16 13], [2 x i16] [i16 2217, i16 13], [2 x i16] [i16 241, i16 8], [2 x i16] [i16 2218, i16 13], [2 x i16] [i16 2219, i16 13], [2 x i16] [i16 2220, i16 13], [2 x i16] [i16 2221, i16 13], [2 x i16] [i16 246, i16 8], [2 x i16] [i16 2222, i16 13], [2 x i16] [i16 124, i16 7], [2 x i16] [i16 247, i16 8], [2 x i16] [i16 2223, i16 13], [2 x i16] [i16 2224, i16 13], [2 x i16] [i16 2225, i16 13], [2 x i16] [i16 2226, i16 13], [2 x i16] [i16 250, i16 8], [2 x i16] [i16 2227, i16 13], [2 x i16] [i16 2228, i16 13], [2 x i16] [i16 2229, i16 13], [2 x i16] [i16 2230, i16 13], [2 x i16] [i16 2231, i16 13], [2 x i16] [i16 251, i16 8], [2 x i16] [i16 1116, i16 12], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 1117, i16 12], [2 x i16] [i16 1118, i16 12], [2 x i16] [i16 1119, i16 12]]], align 16
@x8_ac1_highquant_table = internal constant [8 x [77 x [2 x i16]]] [[77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 42, i16 7], [2 x i16] [i16 22, i16 6], [2 x i16] [i16 43, i16 7], [2 x i16] [i16 92, i16 8], [2 x i16] [i16 47, i16 7], [2 x i16] [i16 48, i16 7], [2 x i16] [i16 93, i16 8], [2 x i16] [i16 98, i16 8], [2 x i16] [i16 198, i16 9], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 25, i16 6], [2 x i16] [i16 26, i16 6], [2 x i16] [i16 54, i16 7], [2 x i16] [i16 16, i16 5], [2 x i16] [i16 110, i16 8], [2 x i16] [i16 34, i16 6], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 35, i16 6], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 47, i16 6], [2 x i16] [i16 48, i16 6], [2 x i16] [i16 98, i16 7], [2 x i16] [i16 99, i16 7], [2 x i16] [i16 100, i16 7], [2 x i16] [i16 101, i16 7], [2 x i16] [i16 102, i16 7], [2 x i16] [i16 103, i16 7], [2 x i16] [i16 104, i16 7], [2 x i16] [i16 105, i16 7], [2 x i16] [i16 106, i16 7], [2 x i16] [i16 107, i16 7], [2 x i16] [i16 108, i16 7], [2 x i16] [i16 199, i16 9], [2 x i16] [i16 222, i16 9], [2 x i16] [i16 223, i16 9], [2 x i16] [i16 1744, i16 11], [2 x i16] [i16 437, i16 9], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 219, i16 8], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 468, i16 9], [2 x i16] [i16 469, i16 9], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 873, i16 10], [2 x i16] [i16 13960, i16 14], [2 x i16] [i16 13961, i16 14], [2 x i16] [i16 13962, i16 14], [2 x i16] [i16 119, i16 7], [2 x i16] [i16 940, i16 10], [2 x i16] [i16 120, i16 7], [2 x i16] [i16 242, i16 8], [2 x i16] [i16 471, i16 9], [2 x i16] [i16 243, i16 8], [2 x i16] [i16 122, i16 7], [2 x i16] [i16 13963, i16 14], [2 x i16] [i16 123, i16 7], [2 x i16] [i16 124, i16 7], [2 x i16] [i16 941, i16 10], [2 x i16] [i16 1000, i16 10], [2 x i16] [i16 13964, i16 14], [2 x i16] [i16 13965, i16 14], [2 x i16] [i16 1001, i16 10], [2 x i16] [i16 13966, i16 14], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 501, i16 9], [2 x i16] [i16 251, i16 8], [2 x i16] [i16 13967, i16 14]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 24, i16 6], [2 x i16] [i16 50, i16 7], [2 x i16] [i16 51, i16 7], [2 x i16] [i16 52, i16 7], [2 x i16] [i16 106, i16 8], [2 x i16] [i16 214, i16 9], [2 x i16] [i16 215, i16 9], [2 x i16] [i16 216, i16 9], [2 x i16] [i16 217, i16 9], [2 x i16] [i16 13952, i16 15], [2 x i16] [i16 437, i16 10], [2 x i16] [i16 873, i16 11], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 55, i16 7], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 31, i16 6], [2 x i16] [i16 92, i16 7], [2 x i16] [i16 93, i16 7], [2 x i16] [i16 188, i16 8], [2 x i16] [i16 189, i16 8], [2 x i16] [i16 95, i16 7], [2 x i16] [i16 208, i16 8], [2 x i16] [i16 219, i16 9], [2 x i16] [i16 209, i16 8], [2 x i16] [i16 420, i16 9], [2 x i16] [i16 421, i16 9], [2 x i16] [i16 422, i16 9], [2 x i16] [i16 423, i16 9], [2 x i16] [i16 848, i16 10], [2 x i16] [i16 1698, i16 11], [2 x i16] [i16 1699, i16 11], [2 x i16] [i16 425, i16 9], [2 x i16] [i16 426, i16 9], [2 x i16] [i16 1708, i16 11], [2 x i16] [i16 13953, i16 15], [2 x i16] [i16 855, i16 10], [2 x i16] [i16 13954, i16 15], [2 x i16] [i16 13955, i16 15], [2 x i16] [i16 13956, i16 15], [2 x i16] [i16 13957, i16 15], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 214, i16 8], [2 x i16] [i16 13958, i16 15], [2 x i16] [i16 13959, i16 15], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 110, i16 7], [2 x i16] [i16 215, i16 8], [2 x i16] [i16 1709, i16 11], [2 x i16] [i16 13960, i16 15], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 222, i16 8], [2 x i16] [i16 1784, i16 11], [2 x i16] [i16 893, i16 10], [2 x i16] [i16 13961, i16 15], [2 x i16] [i16 13962, i16 15], [2 x i16] [i16 13963, i16 15], [2 x i16] [i16 13964, i16 15], [2 x i16] [i16 447, i16 9], [2 x i16] [i16 13965, i16 15], [2 x i16] [i16 6983, i16 14], [2 x i16] [i16 14280, i16 14], [2 x i16] [i16 14281, i16 14], [2 x i16] [i16 14282, i16 14], [2 x i16] [i16 14283, i16 14], [2 x i16] [i16 14284, i16 14], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 14285, i16 14], [2 x i16] [i16 14286, i16 14], [2 x i16] [i16 14287, i16 14]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 18, i16 6], [2 x i16] [i16 38, i16 7], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 39, i16 7], [2 x i16] [i16 168, i16 9], [2 x i16] [i16 169, i16 9], [2 x i16] [i16 85, i16 8], [2 x i16] [i16 11008, i16 15], [2 x i16] [i16 173, i16 9], [2 x i16] [i16 11009, i16 15], [2 x i16] [i16 11010, i16 15], [2 x i16] [i16 11011, i16 15], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 64, i16 7], [2 x i16] [i16 65, i16 7], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 33, i16 6], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 50, i16 6], [2 x i16] [i16 51, i16 6], [2 x i16] [i16 52, i16 6], [2 x i16] [i16 53, i16 6], [2 x i16] [i16 108, i16 7], [2 x i16] [i16 87, i16 8], [2 x i16] [i16 109, i16 7], [2 x i16] [i16 220, i16 8], [2 x i16] [i16 345, i16 10], [2 x i16] [i16 221, i16 8], [2 x i16] [i16 444, i16 9], [2 x i16] [i16 890, i16 10], [2 x i16] [i16 891, i16 10], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 114, i16 7], [2 x i16] [i16 446, i16 9], [2 x i16] [i16 447, i16 9], [2 x i16] [i16 230, i16 8], [2 x i16] [i16 924, i16 10], [2 x i16] [i16 463, i16 9], [2 x i16] [i16 11012, i16 15], [2 x i16] [i16 11013, i16 15], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 468, i16 9], [2 x i16] [i16 11014, i16 15], [2 x i16] [i16 11015, i16 15], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 235, i16 8], [2 x i16] [i16 5508, i16 14], [2 x i16] [i16 5509, i16 14], [2 x i16] [i16 5510, i16 14], [2 x i16] [i16 59, i16 6], [2 x i16] [i16 469, i16 9], [2 x i16] [i16 496, i16 9], [2 x i16] [i16 925, i16 10], [2 x i16] [i16 994, i16 10], [2 x i16] [i16 5511, i16 14], [2 x i16] [i16 5512, i16 14], [2 x i16] [i16 5513, i16 14], [2 x i16] [i16 249, i16 8], [2 x i16] [i16 5514, i16 14], [2 x i16] [i16 5515, i16 14], [2 x i16] [i16 995, i16 10], [2 x i16] [i16 5516, i16 14], [2 x i16] [i16 5517, i16 14], [2 x i16] [i16 500, i16 9], [2 x i16] [i16 5518, i16 14], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 251, i16 8], [2 x i16] [i16 501, i16 9], [2 x i16] [i16 5519, i16 14]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 16, i16 6], [2 x i16] [i16 17, i16 6], [2 x i16] [i16 36, i16 7], [2 x i16] [i16 37, i16 7], [2 x i16] [i16 19, i16 6], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 42, i16 7], [2 x i16] [i16 43, i16 7], [2 x i16] [i16 176, i16 9], [2 x i16] [i16 177, i16 9], [2 x i16] [i16 45, i16 7], [2 x i16] [i16 89, i16 8], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 23, i16 6], [2 x i16] [i16 208, i16 9], [2 x i16] [i16 53, i16 7], [2 x i16] [i16 27, i16 6], [2 x i16] [i16 56, i16 7], [2 x i16] [i16 57, i16 7], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 29, i16 6], [2 x i16] [i16 50, i16 6], [2 x i16] [i16 51, i16 6], [2 x i16] [i16 104, i16 7], [2 x i16] [i16 105, i16 7], [2 x i16] [i16 105, i16 8], [2 x i16] [i16 212, i16 8], [2 x i16] [i16 213, i16 8], [2 x i16] [i16 214, i16 8], [2 x i16] [i16 108, i16 7], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 109, i16 7], [2 x i16] [i16 112, i16 7], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 215, i16 8], [2 x i16] [i16 209, i16 9], [2 x i16] [i16 14464, i16 14], [2 x i16] [i16 14465, i16 14], [2 x i16] [i16 14466, i16 14], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 453, i16 9], [2 x i16] [i16 117, i16 7], [2 x i16] [i16 227, i16 8], [2 x i16] [i16 14467, i16 14], [2 x i16] [i16 14468, i16 14], [2 x i16] [i16 236, i16 8], [2 x i16] [i16 14469, i16 14], [2 x i16] [i16 7235, i16 13], [2 x i16] [i16 7236, i16 13], [2 x i16] [i16 7237, i16 13], [2 x i16] [i16 237, i16 8], [2 x i16] [i16 7238, i16 13], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 119, i16 7], [2 x i16] [i16 488, i16 9], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 123, i16 7], [2 x i16] [i16 7239, i16 13], [2 x i16] [i16 126, i16 7], [2 x i16] [i16 127, i16 7], [2 x i16] [i16 7240, i16 13], [2 x i16] [i16 7241, i16 13], [2 x i16] [i16 7242, i16 13], [2 x i16] [i16 7243, i16 13], [2 x i16] [i16 7244, i16 13], [2 x i16] [i16 7245, i16 13], [2 x i16] [i16 245, i16 8], [2 x i16] [i16 7246, i16 13], [2 x i16] [i16 489, i16 9], [2 x i16] [i16 7247, i16 13]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 24, i16 6], [2 x i16] [i16 25, i16 6], [2 x i16] [i16 52, i16 7], [2 x i16] [i16 53, i16 7], [2 x i16] [i16 54, i16 7], [2 x i16] [i16 110, i16 8], [2 x i16] [i16 222, i16 9], [2 x i16] [i16 223, i16 9], [2 x i16] [i16 448, i16 10], [2 x i16] [i16 449, i16 10], [2 x i16] [i16 450, i16 10], [2 x i16] [i16 14432, i16 15], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 29, i16 6], [2 x i16] [i16 57, i16 7], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 52, i16 6], [2 x i16] [i16 53, i16 6], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 110, i16 7], [2 x i16] [i16 111, i16 7], [2 x i16] [i16 112, i16 7], [2 x i16] [i16 113, i16 7], [2 x i16] [i16 113, i16 8], [2 x i16] [i16 228, i16 8], [2 x i16] [i16 229, i16 8], [2 x i16] [i16 230, i16 8], [2 x i16] [i16 231, i16 8], [2 x i16] [i16 232, i16 8], [2 x i16] [i16 932, i16 10], [2 x i16] [i16 117, i16 7], [2 x i16] [i16 236, i16 8], [2 x i16] [i16 467, i16 9], [2 x i16] [i16 474, i16 9], [2 x i16] [i16 933, i16 10], [2 x i16] [i16 950, i16 10], [2 x i16] [i16 1805, i16 12], [2 x i16] [i16 951, i16 10], [2 x i16] [i16 1806, i16 12], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 238, i16 8], [2 x i16] [i16 14433, i16 15], [2 x i16] [i16 14434, i16 15], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 478, i16 9], [2 x i16] [i16 14435, i16 15], [2 x i16] [i16 14436, i16 15], [2 x i16] [i16 14437, i16 15], [2 x i16] [i16 124, i16 7], [2 x i16] [i16 1807, i16 12], [2 x i16] [i16 958, i16 10], [2 x i16] [i16 959, i16 10], [2 x i16] [i16 14438, i16 15], [2 x i16] [i16 4000, i16 12], [2 x i16] [i16 2001, i16 11], [2 x i16] [i16 14439, i16 15], [2 x i16] [i16 251, i16 8], [2 x i16] [i16 501, i16 9], [2 x i16] [i16 32008, i16 15], [2 x i16] [i16 4004, i16 12], [2 x i16] [i16 32009, i16 15], [2 x i16] [i16 32010, i16 15], [2 x i16] [i16 32011, i16 15], [2 x i16] [i16 16006, i16 14], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 4005, i16 12], [2 x i16] [i16 2003, i16 11], [2 x i16] [i16 16007, i16 14]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 42, i16 7], [2 x i16] [i16 86, i16 8], [2 x i16] [i16 696, i16 11], [2 x i16] [i16 175, i16 9], [2 x i16] [i16 697, i16 11], [2 x i16] [i16 349, i16 10], [2 x i16] [i16 704, i16 11], [2 x i16] [i16 11280, i16 15], [2 x i16] [i16 11281, i16 15], [2 x i16] [i16 11282, i16 15], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 23, i16 6], [2 x i16] [i16 45, i16 7], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 64, i16 7], [2 x i16] [i16 33, i16 6], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 65, i16 7], [2 x i16] [i16 89, i16 8], [2 x i16] [i16 224, i16 8], [2 x i16] [i16 225, i16 8], [2 x i16] [i16 113, i16 7], [2 x i16] [i16 228, i16 8], [2 x i16] [i16 177, i16 9], [2 x i16] [i16 706, i16 11], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 115, i16 7], [2 x i16] [i16 229, i16 8], [2 x i16] [i16 240, i16 8], [2 x i16] [i16 121, i16 7], [2 x i16] [i16 964, i16 10], [2 x i16] [i16 483, i16 9], [2 x i16] [i16 488, i16 9], [2 x i16] [i16 11283, i16 15], [2 x i16] [i16 123, i16 7], [2 x i16] [i16 11284, i16 15], [2 x i16] [i16 11285, i16 15], [2 x i16] [i16 11286, i16 15], [2 x i16] [i16 124, i16 7], [2 x i16] [i16 707, i16 11], [2 x i16] [i16 11287, i16 15], [2 x i16] [i16 5644, i16 14], [2 x i16] [i16 5645, i16 14], [2 x i16] [i16 125, i16 7], [2 x i16] [i16 5646, i16 14], [2 x i16] [i16 489, i16 9], [2 x i16] [i16 965, i16 10], [2 x i16] [i16 980, i16 10], [2 x i16] [i16 491, i16 9], [2 x i16] [i16 5647, i16 14], [2 x i16] [i16 15696, i16 14], [2 x i16] [i16 252, i16 8], [2 x i16] [i16 1963, i16 11], [2 x i16] [i16 15697, i16 14], [2 x i16] [i16 15698, i16 14], [2 x i16] [i16 15699, i16 14], [2 x i16] [i16 15700, i16 14], [2 x i16] [i16 506, i16 9], [2 x i16] [i16 15701, i16 14], [2 x i16] [i16 127, i16 7], [2 x i16] [i16 507, i16 9], [2 x i16] [i16 15702, i16 14], [2 x i16] [i16 15703, i16 14]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 24, i16 6], [2 x i16] [i16 50, i16 7], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 51, i16 7], [2 x i16] [i16 3584, i16 13], [2 x i16] [i16 57, i16 7], [2 x i16] [i16 3585, i16 13], [2 x i16] [i16 58, i16 7], [2 x i16] [i16 3586, i16 13], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 59, i16 7], [2 x i16] [i16 62, i16 7], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 63, i16 7], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 84, i16 7], [2 x i16] [i16 43, i16 6], [2 x i16] [i16 85, i16 7], [2 x i16] [i16 88, i16 7], [2 x i16] [i16 3587, i16 13], [2 x i16] [i16 89, i16 7], [2 x i16] [i16 90, i16 7], [2 x i16] [i16 3588, i16 13], [2 x i16] [i16 3589, i16 13], [2 x i16] [i16 1795, i16 12], [2 x i16] [i16 91, i16 7], [2 x i16] [i16 92, i16 7], [2 x i16] [i16 1796, i16 12], [2 x i16] [i16 1797, i16 12], [2 x i16] [i16 93, i16 7], [2 x i16] [i16 1798, i16 12], [2 x i16] [i16 1799, i16 12], [2 x i16] [i16 1800, i16 12], [2 x i16] [i16 1801, i16 12], [2 x i16] [i16 1802, i16 12], [2 x i16] [i16 1803, i16 12], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 47, i16 6], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 1804, i16 12], [2 x i16] [i16 112, i16 7], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 1805, i16 12], [2 x i16] [i16 1806, i16 12], [2 x i16] [i16 1807, i16 12], [2 x i16] [i16 1808, i16 12], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 1809, i16 12], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 1810, i16 12], [2 x i16] [i16 1811, i16 12], [2 x i16] [i16 1812, i16 12], [2 x i16] [i16 1813, i16 12], [2 x i16] [i16 1814, i16 12], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 1815, i16 12], [2 x i16] [i16 1816, i16 12], [2 x i16] [i16 1817, i16 12], [2 x i16] [i16 1818, i16 12], [2 x i16] [i16 1819, i16 12], [2 x i16] [i16 1820, i16 12], [2 x i16] [i16 1821, i16 12], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 1822, i16 12], [2 x i16] [i16 113, i16 7], [2 x i16] [i16 1823, i16 12]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 14, i16 6], [2 x i16] [i16 15, i16 6], [2 x i16] [i16 64, i16 8], [2 x i16] [i16 65, i16 8], [2 x i16] [i16 66, i16 8], [2 x i16] [i16 536, i16 11], [2 x i16] [i16 8592, i16 15], [2 x i16] [i16 8593, i16 15], [2 x i16] [i16 8594, i16 15], [2 x i16] [i16 8595, i16 15], [2 x i16] [i16 8596, i16 15], [2 x i16] [i16 8597, i16 15], [2 x i16] [i16 8598, i16 15], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 17, i16 6], [2 x i16] [i16 36, i16 7], [2 x i16] [i16 135, i16 9], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 74, i16 8], [2 x i16] [i16 75, i16 8], [2 x i16] [i16 2, i16 2], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 19, i16 6], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 228, i16 8], [2 x i16] [i16 229, i16 8], [2 x i16] [i16 460, i16 9], [2 x i16] [i16 231, i16 8], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 234, i16 8], [2 x i16] [i16 461, i16 9], [2 x i16] [i16 538, i16 11], [2 x i16] [i16 8599, i16 15], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 235, i16 8], [2 x i16] [i16 476, i16 9], [2 x i16] [i16 239, i16 8], [2 x i16] [i16 477, i16 9], [2 x i16] [i16 496, i16 9], [2 x i16] [i16 8600, i16 15], [2 x i16] [i16 8601, i16 15], [2 x i16] [i16 249, i16 8], [2 x i16] [i16 994, i16 10], [2 x i16] [i16 8602, i16 15], [2 x i16] [i16 8603, i16 15], [2 x i16] [i16 250, i16 8], [2 x i16] [i16 8604, i16 15], [2 x i16] [i16 8605, i16 15], [2 x i16] [i16 8606, i16 15], [2 x i16] [i16 8607, i16 15], [2 x i16] [i16 502, i16 9], [2 x i16] [i16 8624, i16 15], [2 x i16] [i16 252, i16 8], [2 x i16] [i16 503, i16 9], [2 x i16] [i16 8625, i16 15], [2 x i16] [i16 8626, i16 15], [2 x i16] [i16 8627, i16 15], [2 x i16] [i16 8628, i16 15], [2 x i16] [i16 506, i16 9], [2 x i16] [i16 8629, i16 15], [2 x i16] [i16 8630, i16 15], [2 x i16] [i16 8631, i16 15], [2 x i16] [i16 8632, i16 15], [2 x i16] [i16 8633, i16 15], [2 x i16] [i16 995, i16 10], [2 x i16] [i16 4317, i16 14], [2 x i16] [i16 127, i16 7], [2 x i16] [i16 507, i16 9], [2 x i16] [i16 4318, i16 14], [2 x i16] [i16 4319, i16 14]]], align 16
@x8_ac0_lowquant_table = internal constant [8 x [77 x [2 x i16]]] [[77 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 62, i16 7], [2 x i16] [i16 63, i16 7], [2 x i16] [i16 64, i16 7], [2 x i16] [i16 260, i16 9], [2 x i16] [i16 131, i16 8], [2 x i16] [i16 132, i16 8], [2 x i16] [i16 133, i16 8], [2 x i16] [i16 522, i16 10], [2 x i16] [i16 523, i16 10], [2 x i16] [i16 536, i16 10], [2 x i16] [i16 537, i16 10], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 68, i16 7], [2 x i16] [i16 269, i16 9], [2 x i16] [i16 540, i16 10], [2 x i16] [i16 35, i16 6], [2 x i16] [i16 69, i16 7], [2 x i16] [i16 80, i16 7], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 81, i16 7], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 119, i16 7], [2 x i16] [i16 120, i16 7], [2 x i16] [i16 121, i16 7], [2 x i16] [i16 122, i16 7], [2 x i16] [i16 123, i16 7], [2 x i16] [i16 248, i16 8], [2 x i16] [i16 271, i16 9], [2 x i16] [i16 541, i16 10], [2 x i16] [i16 15936, i16 14], [2 x i16] [i16 15937, i16 14], [2 x i16] [i16 15938, i16 14], [2 x i16] [i16 15939, i16 14], [2 x i16] [i16 997, i16 10], [2 x i16] [i16 15940, i16 14], [2 x i16] [i16 499, i16 9], [2 x i16] [i16 15941, i16 14], [2 x i16] [i16 15942, i16 14], [2 x i16] [i16 15943, i16 14], [2 x i16] [i16 250, i16 8], [2 x i16] [i16 15944, i16 14], [2 x i16] [i16 15945, i16 14], [2 x i16] [i16 15946, i16 14], [2 x i16] [i16 15947, i16 14], [2 x i16] [i16 1004, i16 10], [2 x i16] [i16 15948, i16 14], [2 x i16] [i16 126, i16 7], [2 x i16] [i16 254, i16 8], [2 x i16] [i16 255, i16 8], [2 x i16] [i16 503, i16 9], [2 x i16] [i16 15949, i16 14], [2 x i16] [i16 15950, i16 14], [2 x i16] [i16 15951, i16 14], [2 x i16] [i16 16080, i16 14], [2 x i16] [i16 16081, i16 14], [2 x i16] [i16 16082, i16 14], [2 x i16] [i16 16083, i16 14], [2 x i16] [i16 16084, i16 14], [2 x i16] [i16 16085, i16 14], [2 x i16] [i16 8043, i16 13], [2 x i16] [i16 8044, i16 13], [2 x i16] [i16 8045, i16 13], [2 x i16] [i16 8046, i16 13], [2 x i16] [i16 8047, i16 13]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 4, i16 5], [2 x i16] [i16 20, i16 7], [2 x i16] [i16 11, i16 6], [2 x i16] [i16 12, i16 6], [2 x i16] [i16 42, i16 8], [2 x i16] [i16 43, i16 8], [2 x i16] [i16 52, i16 8], [2 x i16] [i16 3392, i16 14], [2 x i16] [i16 3393, i16 14], [2 x i16] [i16 27, i16 7], [2 x i16] [i16 3394, i16 14], [2 x i16] [i16 3395, i16 14], [2 x i16] [i16 3396, i16 14], [2 x i16] [i16 3397, i16 14], [2 x i16] [i16 3398, i16 14], [2 x i16] [i16 14, i16 6], [2 x i16] [i16 60, i16 8], [2 x i16] [i16 3399, i16 14], [2 x i16] [i16 61, i16 8], [2 x i16] [i16 3400, i16 14], [2 x i16] [i16 3401, i16 14], [2 x i16] [i16 3402, i16 14], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 20, i16 5], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 31, i16 7], [2 x i16] [i16 86, i16 7], [2 x i16] [i16 87, i16 7], [2 x i16] [i16 112, i16 7], [2 x i16] [i16 226, i16 8], [2 x i16] [i16 114, i16 7], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 59, i16 6], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 227, i16 8], [2 x i16] [i16 3403, i16 14], [2 x i16] [i16 230, i16 8], [2 x i16] [i16 231, i16 8], [2 x i16] [i16 248, i16 8], [2 x i16] [i16 3404, i16 14], [2 x i16] [i16 3405, i16 14], [2 x i16] [i16 3406, i16 14], [2 x i16] [i16 249, i16 8], [2 x i16] [i16 3407, i16 14], [2 x i16] [i16 3408, i16 14], [2 x i16] [i16 3409, i16 14], [2 x i16] [i16 1705, i16 13], [2 x i16] [i16 1706, i16 13], [2 x i16] [i16 1707, i16 13], [2 x i16] [i16 1708, i16 13], [2 x i16] [i16 1709, i16 13], [2 x i16] [i16 1710, i16 13], [2 x i16] [i16 1711, i16 13], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 1712, i16 13], [2 x i16] [i16 1713, i16 13], [2 x i16] [i16 1714, i16 13], [2 x i16] [i16 1715, i16 13], [2 x i16] [i16 1716, i16 13], [2 x i16] [i16 125, i16 7], [2 x i16] [i16 1717, i16 13], [2 x i16] [i16 1718, i16 13], [2 x i16] [i16 1719, i16 13], [2 x i16] [i16 1720, i16 13], [2 x i16] [i16 1721, i16 13], [2 x i16] [i16 1722, i16 13], [2 x i16] [i16 1723, i16 13], [2 x i16] [i16 1724, i16 13], [2 x i16] [i16 1725, i16 13], [2 x i16] [i16 1726, i16 13], [2 x i16] [i16 1727, i16 13]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 84, i16 7], [2 x i16] [i16 85, i16 7], [2 x i16] [i16 86, i16 7], [2 x i16] [i16 174, i16 8], [2 x i16] [i16 175, i16 8], [2 x i16] [i16 176, i16 8], [2 x i16] [i16 354, i16 9], [2 x i16] [i16 710, i16 10], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 178, i16 8], [2 x i16] [i16 358, i16 9], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 359, i16 9], [2 x i16] [i16 188, i16 8], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 95, i16 7], [2 x i16] [i16 114, i16 7], [2 x i16] [i16 115, i16 7], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 117, i16 7], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 119, i16 7], [2 x i16] [i16 120, i16 7], [2 x i16] [i16 121, i16 7], [2 x i16] [i16 122, i16 7], [2 x i16] [i16 123, i16 7], [2 x i16] [i16 189, i16 8], [2 x i16] [i16 -20032, i16 16], [2 x i16] [i16 -20031, i16 16], [2 x i16] [i16 22753, i16 15], [2 x i16] [i16 2845, i16 12], [2 x i16] [i16 22754, i16 15], [2 x i16] [i16 22755, i16 15], [2 x i16] [i16 22756, i16 15], [2 x i16] [i16 248, i16 8], [2 x i16] [i16 996, i16 10], [2 x i16] [i16 499, i16 9], [2 x i16] [i16 2846, i16 12], [2 x i16] [i16 22757, i16 15], [2 x i16] [i16 22758, i16 15], [2 x i16] [i16 250, i16 8], [2 x i16] [i16 22759, i16 15], [2 x i16] [i16 22776, i16 15], [2 x i16] [i16 22777, i16 15], [2 x i16] [i16 22778, i16 15], [2 x i16] [i16 502, i16 9], [2 x i16] [i16 22779, i16 15], [2 x i16] [i16 126, i16 7], [2 x i16] [i16 254, i16 8], [2 x i16] [i16 255, i16 8], [2 x i16] [i16 1994, i16 11], [2 x i16] [i16 3990, i16 12], [2 x i16] [i16 22780, i16 15], [2 x i16] [i16 22781, i16 15], [2 x i16] [i16 22782, i16 15], [2 x i16] [i16 22783, i16 15], [2 x i16] [i16 31928, i16 15], [2 x i16] [i16 31929, i16 15], [2 x i16] [i16 31930, i16 15], [2 x i16] [i16 31931, i16 15], [2 x i16] [i16 31932, i16 15], [2 x i16] [i16 503, i16 9], [2 x i16] [i16 31933, i16 15], [2 x i16] [i16 31934, i16 15], [2 x i16] [i16 31935, i16 15]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 32, i16 6], [2 x i16] [i16 33, i16 6], [2 x i16] [i16 68, i16 7], [2 x i16] [i16 69, i16 7], [2 x i16] [i16 140, i16 8], [2 x i16] [i16 141, i16 8], [2 x i16] [i16 284, i16 9], [2 x i16] [i16 285, i16 9], [2 x i16] [i16 286, i16 9], [2 x i16] [i16 574, i16 10], [2 x i16] [i16 575, i16 10], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 76, i16 7], [2 x i16] [i16 77, i16 7], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 78, i16 7], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 79, i16 7], [2 x i16] [i16 110, i16 7], [2 x i16] [i16 111, i16 7], [2 x i16] [i16 224, i16 8], [2 x i16] [i16 225, i16 8], [2 x i16] [i16 226, i16 8], [2 x i16] [i16 227, i16 8], [2 x i16] [i16 228, i16 8], [2 x i16] [i16 229, i16 8], [2 x i16] [i16 460, i16 9], [2 x i16] [i16 231, i16 8], [2 x i16] [i16 232, i16 8], [2 x i16] [i16 233, i16 8], [2 x i16] [i16 461, i16 9], [2 x i16] [i16 1872, i16 11], [2 x i16] [i16 937, i16 10], [2 x i16] [i16 1873, i16 11], [2 x i16] [i16 30016, i16 15], [2 x i16] [i16 939, i16 10], [2 x i16] [i16 30017, i16 15], [2 x i16] [i16 30018, i16 15], [2 x i16] [i16 30019, i16 15], [2 x i16] [i16 470, i16 9], [2 x i16] [i16 1877, i16 11], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 3753, i16 12], [2 x i16] [i16 30020, i16 15], [2 x i16] [i16 30021, i16 15], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 119, i16 7], [2 x i16] [i16 248, i16 8], [2 x i16] [i16 942, i16 10], [2 x i16] [i16 1886, i16 11], [2 x i16] [i16 125, i16 7], [2 x i16] [i16 996, i16 10], [2 x i16] [i16 252, i16 8], [2 x i16] [i16 253, i16 8], [2 x i16] [i16 997, i16 10], [2 x i16] [i16 998, i16 10], [2 x i16] [i16 3774, i16 12], [2 x i16] [i16 30022, i16 15], [2 x i16] [i16 1998, i16 11], [2 x i16] [i16 30023, i16 15], [2 x i16] [i16 30200, i16 15], [2 x i16] [i16 30201, i16 15], [2 x i16] [i16 30202, i16 15], [2 x i16] [i16 30203, i16 15], [2 x i16] [i16 30204, i16 15], [2 x i16] [i16 30205, i16 15], [2 x i16] [i16 127, i16 7], [2 x i16] [i16 15103, i16 14], [2 x i16] [i16 3998, i16 12], [2 x i16] [i16 3999, i16 12]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 18, i16 6], [2 x i16] [i16 19, i16 6], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 42, i16 7], [2 x i16] [i16 22, i16 6], [2 x i16] [i16 43, i16 7], [2 x i16] [i16 92, i16 8], [2 x i16] [i16 93, i16 8], [2 x i16] [i16 94, i16 8], [2 x i16] [i16 190, i16 9], [2 x i16] [i16 191, i16 9], [2 x i16] [i16 96, i16 8], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 25, i16 6], [2 x i16] [i16 32, i16 6], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 33, i16 6], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 20, i16 5], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 43, i16 6], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 47, i16 6], [2 x i16] [i16 48, i16 6], [2 x i16] [i16 49, i16 7], [2 x i16] [i16 98, i16 7], [2 x i16] [i16 99, i16 7], [2 x i16] [i16 100, i16 7], [2 x i16] [i16 101, i16 7], [2 x i16] [i16 102, i16 7], [2 x i16] [i16 97, i16 8], [2 x i16] [i16 1648, i16 11], [2 x i16] [i16 104, i16 7], [2 x i16] [i16 105, i16 7], [2 x i16] [i16 207, i16 8], [2 x i16] [i16 413, i16 9], [2 x i16] [i16 424, i16 9], [2 x i16] [i16 425, i16 9], [2 x i16] [i16 825, i16 10], [2 x i16] [i16 426, i16 9], [2 x i16] [i16 854, i16 10], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 214, i16 8], [2 x i16] [i16 26384, i16 15], [2 x i16] [i16 26385, i16 15], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 110, i16 7], [2 x i16] [i16 430, i16 9], [2 x i16] [i16 26386, i16 15], [2 x i16] [i16 26387, i16 15], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 855, i16 10], [2 x i16] [i16 111, i16 7], [2 x i16] [i16 244, i16 8], [2 x i16] [i16 245, i16 8], [2 x i16] [i16 862, i16 10], [2 x i16] [i16 492, i16 9], [2 x i16] [i16 26388, i16 15], [2 x i16] [i16 493, i16 9], [2 x i16] [i16 863, i16 10], [2 x i16] [i16 988, i16 10], [2 x i16] [i16 989, i16 10], [2 x i16] [i16 26389, i16 15], [2 x i16] [i16 13195, i16 14], [2 x i16] [i16 13196, i16 14], [2 x i16] [i16 13197, i16 14], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 495, i16 9], [2 x i16] [i16 13198, i16 14], [2 x i16] [i16 13199, i16 14]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 24, i16 6], [2 x i16] [i16 25, i16 6], [2 x i16] [i16 52, i16 7], [2 x i16] [i16 106, i16 8], [2 x i16] [i16 107, i16 8], [2 x i16] [i16 108, i16 8], [2 x i16] [i16 218, i16 9], [2 x i16] [i16 876, i16 11], [2 x i16] [i16 110, i16 8], [2 x i16] [i16 439, i16 10], [2 x i16] [i16 877, i16 11], [2 x i16] [i16 14208, i16 15], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 62, i16 7], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 63, i16 7], [2 x i16] [i16 192, i16 8], [2 x i16] [i16 97, i16 7], [2 x i16] [i16 193, i16 8], [2 x i16] [i16 98, i16 7], [2 x i16] [i16 198, i16 8], [2 x i16] [i16 100, i16 7], [2 x i16] [i16 199, i16 8], [2 x i16] [i16 202, i16 8], [2 x i16] [i16 223, i16 9], [2 x i16] [i16 406, i16 9], [2 x i16] [i16 407, i16 9], [2 x i16] [i16 408, i16 9], [2 x i16] [i16 409, i16 9], [2 x i16] [i16 889, i16 11], [2 x i16] [i16 410, i16 9], [2 x i16] [i16 445, i16 10], [2 x i16] [i16 1644, i16 11], [2 x i16] [i16 14209, i16 15], [2 x i16] [i16 823, i16 10], [2 x i16] [i16 1645, i16 11], [2 x i16] [i16 1648, i16 11], [2 x i16] [i16 825, i16 10], [2 x i16] [i16 1649, i16 11], [2 x i16] [i16 52, i16 6], [2 x i16] [i16 207, i16 8], [2 x i16] [i16 14210, i16 15], [2 x i16] [i16 14211, i16 15], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 106, i16 7], [2 x i16] [i16 107, i16 7], [2 x i16] [i16 413, i16 9], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 244, i16 8], [2 x i16] [i16 245, i16 8], [2 x i16] [i16 984, i16 10], [2 x i16] [i16 1970, i16 11], [2 x i16] [i16 14212, i16 15], [2 x i16] [i16 986, i16 10], [2 x i16] [i16 14213, i16 15], [2 x i16] [i16 987, i16 10], [2 x i16] [i16 988, i16 10], [2 x i16] [i16 14214, i16 15], [2 x i16] [i16 14215, i16 15], [2 x i16] [i16 7108, i16 14], [2 x i16] [i16 7109, i16 14], [2 x i16] [i16 7110, i16 14], [2 x i16] [i16 7111, i16 14], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 989, i16 10], [2 x i16] [i16 1971, i16 11], [2 x i16] [i16 495, i16 9]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 22, i16 6], [2 x i16] [i16 23, i16 6], [2 x i16] [i16 96, i16 8], [2 x i16] [i16 194, i16 9], [2 x i16] [i16 390, i16 10], [2 x i16] [i16 391, i16 10], [2 x i16] [i16 196, i16 9], [2 x i16] [i16 12608, i16 15], [2 x i16] [i16 12609, i16 15], [2 x i16] [i16 395, i16 10], [2 x i16] [i16 12610, i16 15], [2 x i16] [i16 396, i16 10], [2 x i16] [i16 12611, i16 15], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 100, i16 8], [2 x i16] [i16 101, i16 8], [2 x i16] [i16 16, i16 5], [2 x i16] [i16 199, i16 9], [2 x i16] [i16 102, i16 8], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 117, i16 7], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 103, i16 8], [2 x i16] [i16 238, i16 8], [2 x i16] [i16 478, i16 9], [2 x i16] [i16 240, i16 8], [2 x i16] [i16 397, i16 10], [2 x i16] [i16 12612, i16 15], [2 x i16] [i16 479, i16 9], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 482, i16 9], [2 x i16] [i16 966, i16 10], [2 x i16] [i16 242, i16 8], [2 x i16] [i16 243, i16 8], [2 x i16] [i16 967, i16 10], [2 x i16] [i16 12613, i16 15], [2 x i16] [i16 12614, i16 15], [2 x i16] [i16 504, i16 9], [2 x i16] [i16 12615, i16 15], [2 x i16] [i16 12616, i16 15], [2 x i16] [i16 12617, i16 15], [2 x i16] [i16 253, i16 8], [2 x i16] [i16 12618, i16 15], [2 x i16] [i16 12619, i16 15], [2 x i16] [i16 12620, i16 15], [2 x i16] [i16 12621, i16 15], [2 x i16] [i16 505, i16 9], [2 x i16] [i16 12622, i16 15], [2 x i16] [i16 508, i16 9], [2 x i16] [i16 12623, i16 15], [2 x i16] [i16 12624, i16 15], [2 x i16] [i16 12625, i16 15], [2 x i16] [i16 12626, i16 15], [2 x i16] [i16 12627, i16 15], [2 x i16] [i16 1018, i16 10], [2 x i16] [i16 1019, i16 10], [2 x i16] [i16 12628, i16 15], [2 x i16] [i16 12629, i16 15], [2 x i16] [i16 12630, i16 15], [2 x i16] [i16 12631, i16 15], [2 x i16] [i16 12632, i16 15], [2 x i16] [i16 12633, i16 15], [2 x i16] [i16 255, i16 8], [2 x i16] [i16 6317, i16 14], [2 x i16] [i16 6318, i16 14], [2 x i16] [i16 6319, i16 14]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 4], [2 x i16] [i16 128, i16 11], [2 x i16] [i16 129, i16 11], [2 x i16] [i16 130, i16 11], [2 x i16] [i16 131, i16 11], [2 x i16] [i16 132, i16 11], [2 x i16] [i16 133, i16 11], [2 x i16] [i16 134, i16 11], [2 x i16] [i16 135, i16 11], [2 x i16] [i16 136, i16 11], [2 x i16] [i16 137, i16 11], [2 x i16] [i16 138, i16 11], [2 x i16] [i16 139, i16 11], [2 x i16] [i16 140, i16 11], [2 x i16] [i16 141, i16 11], [2 x i16] [i16 142, i16 11], [2 x i16] [i16 143, i16 11], [2 x i16] [i16 72, i16 10], [2 x i16] [i16 73, i16 10], [2 x i16] [i16 74, i16 10], [2 x i16] [i16 75, i16 10], [2 x i16] [i16 76, i16 10], [2 x i16] [i16 77, i16 10], [2 x i16] [i16 1, i16 1], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 78, i16 10], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 79, i16 10], [2 x i16] [i16 80, i16 10], [2 x i16] [i16 81, i16 10], [2 x i16] [i16 82, i16 10], [2 x i16] [i16 83, i16 10], [2 x i16] [i16 84, i16 10], [2 x i16] [i16 85, i16 10], [2 x i16] [i16 86, i16 10], [2 x i16] [i16 87, i16 10], [2 x i16] [i16 88, i16 10], [2 x i16] [i16 89, i16 10], [2 x i16] [i16 90, i16 10], [2 x i16] [i16 91, i16 10], [2 x i16] [i16 92, i16 10], [2 x i16] [i16 93, i16 10], [2 x i16] [i16 94, i16 10], [2 x i16] [i16 95, i16 10], [2 x i16] [i16 96, i16 10], [2 x i16] [i16 97, i16 10], [2 x i16] [i16 98, i16 10], [2 x i16] [i16 99, i16 10], [2 x i16] [i16 100, i16 10], [2 x i16] [i16 101, i16 10], [2 x i16] [i16 102, i16 10], [2 x i16] [i16 103, i16 10], [2 x i16] [i16 104, i16 10], [2 x i16] [i16 105, i16 10], [2 x i16] [i16 106, i16 10], [2 x i16] [i16 107, i16 10], [2 x i16] [i16 108, i16 10], [2 x i16] [i16 109, i16 10], [2 x i16] [i16 110, i16 10], [2 x i16] [i16 111, i16 10], [2 x i16] [i16 112, i16 10], [2 x i16] [i16 113, i16 10], [2 x i16] [i16 114, i16 10], [2 x i16] [i16 115, i16 10], [2 x i16] [i16 116, i16 10], [2 x i16] [i16 117, i16 10], [2 x i16] [i16 118, i16 10], [2 x i16] [i16 119, i16 10], [2 x i16] [i16 120, i16 10], [2 x i16] [i16 121, i16 10], [2 x i16] [i16 122, i16 10], [2 x i16] [i16 123, i16 10], [2 x i16] [i16 124, i16 10], [2 x i16] [i16 125, i16 10], [2 x i16] [i16 126, i16 10], [2 x i16] [i16 127, i16 10]]], align 16
@x8_ac1_lowquant_table = internal constant [8 x [77 x [2 x i16]]] [[77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 18, i16 6], [2 x i16] [i16 38, i16 7], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 78, i16 8], [2 x i16] [i16 79, i16 8], [2 x i16] [i16 168, i16 9], [2 x i16] [i16 338, i16 10], [2 x i16] [i16 170, i16 9], [2 x i16] [i16 171, i16 9], [2 x i16] [i16 172, i16 9], [2 x i16] [i16 10848, i16 15], [2 x i16] [i16 679, i16 11], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 28, i16 6], [2 x i16] [i16 58, i16 7], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 59, i16 7], [2 x i16] [i16 16, i16 5], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 112, i16 7], [2 x i16] [i16 87, i16 8], [2 x i16] [i16 226, i16 8], [2 x i16] [i16 227, i16 8], [2 x i16] [i16 228, i16 8], [2 x i16] [i16 229, i16 8], [2 x i16] [i16 173, i16 9], [2 x i16] [i16 920, i16 10], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 231, i16 8], [2 x i16] [i16 238, i16 8], [2 x i16] [i16 239, i16 8], [2 x i16] [i16 1842, i16 11], [2 x i16] [i16 922, i16 10], [2 x i16] [i16 1843, i16 11], [2 x i16] [i16 10849, i16 15], [2 x i16] [i16 120, i16 7], [2 x i16] [i16 5425, i16 14], [2 x i16] [i16 5426, i16 14], [2 x i16] [i16 5427, i16 14], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 923, i16 10], [2 x i16] [i16 5428, i16 14], [2 x i16] [i16 5429, i16 14], [2 x i16] [i16 5430, i16 14], [2 x i16] [i16 121, i16 7], [2 x i16] [i16 5431, i16 14], [2 x i16] [i16 248, i16 8], [2 x i16] [i16 498, i16 9], [2 x i16] [i16 1996, i16 11], [2 x i16] [i16 999, i16 10], [2 x i16] [i16 1997, i16 11], [2 x i16] [i16 16000, i16 14], [2 x i16] [i16 251, i16 8], [2 x i16] [i16 1001, i16 10], [2 x i16] [i16 16001, i16 14], [2 x i16] [i16 16002, i16 14], [2 x i16] [i16 16003, i16 14], [2 x i16] [i16 16004, i16 14], [2 x i16] [i16 16005, i16 14], [2 x i16] [i16 16006, i16 14], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 501, i16 9], [2 x i16] [i16 2001, i16 11], [2 x i16] [i16 16007, i16 14]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 31, i16 6], [2 x i16] [i16 64, i16 7], [2 x i16] [i16 130, i16 8], [2 x i16] [i16 131, i16 8], [2 x i16] [i16 132, i16 8], [2 x i16] [i16 266, i16 9], [2 x i16] [i16 267, i16 9], [2 x i16] [i16 1072, i16 11], [2 x i16] [i16 1073, i16 11], [2 x i16] [i16 1074, i16 11], [2 x i16] [i16 1075, i16 11], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 36, i16 6], [2 x i16] [i16 74, i16 7], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 38, i16 6], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 135, i16 8], [2 x i16] [i16 269, i16 9], [2 x i16] [i16 600, i16 10], [2 x i16] [i16 301, i16 9], [2 x i16] [i16 601, i16 10], [2 x i16] [i16 604, i16 10], [2 x i16] [i16 2420, i16 12], [2 x i16] [i16 606, i16 10], [2 x i16] [i16 607, i16 10], [2 x i16] [i16 624, i16 10], [2 x i16] [i16 625, i16 10], [2 x i16] [i16 1211, i16 11], [2 x i16] [i16 2421, i16 12], [2 x i16] [i16 626, i16 10], [2 x i16] [i16 2508, i16 12], [2 x i16] [i16 2509, i16 12], [2 x i16] [i16 20080, i16 15], [2 x i16] [i16 20081, i16 15], [2 x i16] [i16 20082, i16 15], [2 x i16] [i16 20083, i16 15], [2 x i16] [i16 10042, i16 14], [2 x i16] [i16 10043, i16 14], [2 x i16] [i16 10044, i16 14], [2 x i16] [i16 1256, i16 11], [2 x i16] [i16 1257, i16 11], [2 x i16] [i16 158, i16 8], [2 x i16] [i16 629, i16 10], [2 x i16] [i16 2520, i16 12], [2 x i16] [i16 10045, i16 14], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 122, i16 7], [2 x i16] [i16 159, i16 8], [2 x i16] [i16 631, i16 10], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 246, i16 8], [2 x i16] [i16 1261, i16 11], [2 x i16] [i16 988, i16 10], [2 x i16] [i16 10046, i16 14], [2 x i16] [i16 1978, i16 11], [2 x i16] [i16 2521, i16 12], [2 x i16] [i16 10047, i16 14], [2 x i16] [i16 15832, i16 14], [2 x i16] [i16 15833, i16 14], [2 x i16] [i16 15834, i16 14], [2 x i16] [i16 15835, i16 14], [2 x i16] [i16 15836, i16 14], [2 x i16] [i16 15837, i16 14], [2 x i16] [i16 15838, i16 14], [2 x i16] [i16 15839, i16 14], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 1980, i16 11], [2 x i16] [i16 1981, i16 11], [2 x i16] [i16 991, i16 10]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 14, i16 6], [2 x i16] [i16 30, i16 7], [2 x i16] [i16 62, i16 8], [2 x i16] [i16 63, i16 8], [2 x i16] [i16 64, i16 8], [2 x i16] [i16 260, i16 10], [2 x i16] [i16 131, i16 9], [2 x i16] [i16 261, i16 10], [2 x i16] [i16 264, i16 10], [2 x i16] [i16 16960, i16 16], [2 x i16] [i16 266, i16 10], [2 x i16] [i16 267, i16 10], [2 x i16] [i16 16961, i16 16], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 17, i16 6], [2 x i16] [i16 67, i16 8], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 44, i16 7], [2 x i16] [i16 180, i16 9], [2 x i16] [i16 181, i16 9], [2 x i16] [i16 182, i16 9], [2 x i16] [i16 183, i16 9], [2 x i16] [i16 184, i16 9], [2 x i16] [i16 370, i16 10], [2 x i16] [i16 371, i16 10], [2 x i16] [i16 372, i16 10], [2 x i16] [i16 373, i16 10], [2 x i16] [i16 374, i16 10], [2 x i16] [i16 375, i16 10], [2 x i16] [i16 188, i16 9], [2 x i16] [i16 378, i16 10], [2 x i16] [i16 531, i16 11], [2 x i16] [i16 16962, i16 16], [2 x i16] [i16 379, i16 10], [2 x i16] [i16 760, i16 11], [2 x i16] [i16 381, i16 10], [2 x i16] [i16 761, i16 11], [2 x i16] [i16 382, i16 10], [2 x i16] [i16 16963, i16 16], [2 x i16] [i16 766, i16 11], [2 x i16] [i16 8482, i16 15], [2 x i16] [i16 8483, i16 15], [2 x i16] [i16 88, i16 7], [2 x i16] [i16 356, i16 9], [2 x i16] [i16 8484, i16 15], [2 x i16] [i16 8485, i16 15], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 179, i16 8], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 94, i16 7], [2 x i16] [i16 8486, i16 15], [2 x i16] [i16 8487, i16 15], [2 x i16] [i16 8488, i16 15], [2 x i16] [i16 8489, i16 15], [2 x i16] [i16 767, i16 11], [2 x i16] [i16 8490, i16 15], [2 x i16] [i16 1428, i16 11], [2 x i16] [i16 1429, i16 11], [2 x i16] [i16 1430, i16 11], [2 x i16] [i16 8491, i16 15], [2 x i16] [i16 8492, i16 15], [2 x i16] [i16 8493, i16 15], [2 x i16] [i16 8494, i16 15], [2 x i16] [i16 8495, i16 15], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 1431, i16 11], [2 x i16] [i16 190, i16 8], [2 x i16] [i16 191, i16 8]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 16, i16 5], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 36, i16 6], [2 x i16] [i16 37, i16 6], [2 x i16] [i16 38, i16 6], [2 x i16] [i16 39, i16 6], [2 x i16] [i16 80, i16 7], [2 x i16] [i16 81, i16 7], [2 x i16] [i16 164, i16 8], [2 x i16] [i16 165, i16 8], [2 x i16] [i16 166, i16 8], [2 x i16] [i16 334, i16 9], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 86, i16 7], [2 x i16] [i16 335, i16 9], [2 x i16] [i16 48, i16 6], [2 x i16] [i16 174, i16 8], [2 x i16] [i16 98, i16 7], [2 x i16] [i16 50, i16 6], [2 x i16] [i16 51, i16 6], [2 x i16] [i16 52, i16 6], [2 x i16] [i16 53, i16 6], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 99, i16 7], [2 x i16] [i16 110, i16 7], [2 x i16] [i16 111, i16 7], [2 x i16] [i16 112, i16 7], [2 x i16] [i16 113, i16 7], [2 x i16] [i16 114, i16 7], [2 x i16] [i16 115, i16 7], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 175, i16 8], [2 x i16] [i16 234, i16 8], [2 x i16] [i16 470, i16 9], [2 x i16] [i16 1884, i16 11], [2 x i16] [i16 943, i16 10], [2 x i16] [i16 30160, i16 15], [2 x i16] [i16 30161, i16 15], [2 x i16] [i16 30162, i16 15], [2 x i16] [i16 30163, i16 15], [2 x i16] [i16 30164, i16 15], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 238, i16 8], [2 x i16] [i16 239, i16 8], [2 x i16] [i16 3771, i16 12], [2 x i16] [i16 480, i16 9], [2 x i16] [i16 30165, i16 15], [2 x i16] [i16 121, i16 7], [2 x i16] [i16 481, i16 9], [2 x i16] [i16 30166, i16 15], [2 x i16] [i16 30167, i16 15], [2 x i16] [i16 30848, i16 15], [2 x i16] [i16 244, i16 8], [2 x i16] [i16 1929, i16 11], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 123, i16 7], [2 x i16] [i16 245, i16 8], [2 x i16] [i16 252, i16 8], [2 x i16] [i16 127, i16 7], [2 x i16] [i16 483, i16 9], [2 x i16] [i16 1930, i16 11], [2 x i16] [i16 1931, i16 11], [2 x i16] [i16 30849, i16 15], [2 x i16] [i16 30850, i16 15], [2 x i16] [i16 30851, i16 15], [2 x i16] [i16 15426, i16 14], [2 x i16] [i16 15427, i16 14], [2 x i16] [i16 15428, i16 14], [2 x i16] [i16 253, i16 8], [2 x i16] [i16 15429, i16 14], [2 x i16] [i16 15430, i16 14], [2 x i16] [i16 15431, i16 14]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 22, i16 6], [2 x i16] [i16 23, i16 6], [2 x i16] [i16 48, i16 7], [2 x i16] [i16 49, i16 7], [2 x i16] [i16 100, i16 8], [2 x i16] [i16 101, i16 8], [2 x i16] [i16 102, i16 8], [2 x i16] [i16 206, i16 9], [2 x i16] [i16 207, i16 9], [2 x i16] [i16 416, i16 10], [2 x i16] [i16 417, i16 10], [2 x i16] [i16 6688, i16 14], [2 x i16] [i16 1673, i16 12], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 27, i16 6], [2 x i16] [i16 53, i16 7], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 31, i16 6], [2 x i16] [i16 48, i16 6], [2 x i16] [i16 49, i16 6], [2 x i16] [i16 100, i16 7], [2 x i16] [i16 101, i16 7], [2 x i16] [i16 105, i16 8], [2 x i16] [i16 102, i16 7], [2 x i16] [i16 206, i16 8], [2 x i16] [i16 207, i16 8], [2 x i16] [i16 208, i16 8], [2 x i16] [i16 209, i16 8], [2 x i16] [i16 210, i16 8], [2 x i16] [i16 422, i16 9], [2 x i16] [i16 419, i16 10], [2 x i16] [i16 846, i16 10], [2 x i16] [i16 106, i16 7], [2 x i16] [i16 214, i16 8], [2 x i16] [i16 430, i16 9], [2 x i16] [i16 431, i16 9], [2 x i16] [i16 847, i16 10], [2 x i16] [i16 837, i16 11], [2 x i16] [i16 432, i16 9], [2 x i16] [i16 433, i16 9], [2 x i16] [i16 868, i16 10], [2 x i16] [i16 109, i16 7], [2 x i16] [i16 220, i16 8], [2 x i16] [i16 3476, i16 12], [2 x i16] [i16 3477, i16 12], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 221, i16 8], [2 x i16] [i16 222, i16 8], [2 x i16] [i16 435, i16 9], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 223, i16 8], [2 x i16] [i16 496, i16 9], [2 x i16] [i16 994, i16 10], [2 x i16] [i16 995, i16 10], [2 x i16] [i16 1739, i16 11], [2 x i16] [i16 996, i16 10], [2 x i16] [i16 1994, i16 11], [2 x i16] [i16 499, i16 9], [2 x i16] [i16 500, i16 9], [2 x i16] [i16 1995, i16 11], [2 x i16] [i16 2004, i16 11], [2 x i16] [i16 6689, i16 14], [2 x i16] [i16 6690, i16 14], [2 x i16] [i16 2005, i16 11], [2 x i16] [i16 6691, i16 14], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 502, i16 9], [2 x i16] [i16 503, i16 9], [2 x i16] [i16 1003, i16 10]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 32, i16 6], [2 x i16] [i16 33, i16 6], [2 x i16] [i16 68, i16 7], [2 x i16] [i16 69, i16 7], [2 x i16] [i16 70, i16 7], [2 x i16] [i16 142, i16 8], [2 x i16] [i16 143, i16 8], [2 x i16] [i16 144, i16 8], [2 x i16] [i16 290, i16 9], [2 x i16] [i16 582, i16 10], [2 x i16] [i16 292, i16 9], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 74, i16 7], [2 x i16] [i16 147, i16 8], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 75, i16 7], [2 x i16] [i16 50, i16 6], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 51, i16 6], [2 x i16] [i16 108, i16 7], [2 x i16] [i16 109, i16 7], [2 x i16] [i16 110, i16 7], [2 x i16] [i16 222, i16 8], [2 x i16] [i16 223, i16 8], [2 x i16] [i16 112, i16 7], [2 x i16] [i16 226, i16 8], [2 x i16] [i16 227, i16 8], [2 x i16] [i16 228, i16 8], [2 x i16] [i16 229, i16 8], [2 x i16] [i16 230, i16 8], [2 x i16] [i16 231, i16 8], [2 x i16] [i16 293, i16 9], [2 x i16] [i16 464, i16 9], [2 x i16] [i16 1166, i16 11], [2 x i16] [i16 2334, i16 12], [2 x i16] [i16 2335, i16 12], [2 x i16] [i16 29760, i16 15], [2 x i16] [i16 7441, i16 13], [2 x i16] [i16 29761, i16 15], [2 x i16] [i16 29762, i16 15], [2 x i16] [i16 233, i16 8], [2 x i16] [i16 468, i16 9], [2 x i16] [i16 235, i16 8], [2 x i16] [i16 931, i16 10], [2 x i16] [i16 469, i16 9], [2 x i16] [i16 7442, i16 13], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 476, i16 9], [2 x i16] [i16 477, i16 9], [2 x i16] [i16 29763, i16 15], [2 x i16] [i16 124, i16 7], [2 x i16] [i16 1861, i16 11], [2 x i16] [i16 239, i16 8], [2 x i16] [i16 250, i16 8], [2 x i16] [i16 251, i16 8], [2 x i16] [i16 504, i16 9], [2 x i16] [i16 253, i16 8], [2 x i16] [i16 2020, i16 11], [2 x i16] [i16 4042, i16 12], [2 x i16] [i16 7443, i16 13], [2 x i16] [i16 32344, i16 15], [2 x i16] [i16 32345, i16 15], [2 x i16] [i16 32346, i16 15], [2 x i16] [i16 32347, i16 15], [2 x i16] [i16 32348, i16 15], [2 x i16] [i16 32349, i16 15], [2 x i16] [i16 127, i16 7], [2 x i16] [i16 16175, i16 14], [2 x i16] [i16 2022, i16 11], [2 x i16] [i16 2023, i16 11]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 21, i16 6], [2 x i16] [i16 44, i16 7], [2 x i16] [i16 90, i16 8], [2 x i16] [i16 91, i16 8], [2 x i16] [i16 92, i16 8], [2 x i16] [i16 186, i16 9], [2 x i16] [i16 187, i16 9], [2 x i16] [i16 188, i16 9], [2 x i16] [i16 756, i16 11], [2 x i16] [i16 1514, i16 12], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 16, i16 5], [2 x i16] [i16 34, i16 6], [2 x i16] [i16 70, i16 7], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 50, i16 6], [2 x i16] [i16 71, i16 7], [2 x i16] [i16 102, i16 7], [2 x i16] [i16 103, i16 7], [2 x i16] [i16 104, i16 7], [2 x i16] [i16 105, i16 7], [2 x i16] [i16 106, i16 7], [2 x i16] [i16 95, i16 8], [2 x i16] [i16 214, i16 8], [2 x i16] [i16 215, i16 8], [2 x i16] [i16 432, i16 9], [2 x i16] [i16 217, i16 8], [2 x i16] [i16 379, i16 10], [2 x i16] [i16 109, i16 7], [2 x i16] [i16 220, i16 8], [2 x i16] [i16 433, i16 9], [2 x i16] [i16 1768, i16 11], [2 x i16] [i16 443, i16 9], [2 x i16] [i16 885, i16 10], [2 x i16] [i16 1515, i16 12], [2 x i16] [i16 444, i16 9], [2 x i16] [i16 28304, i16 15], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 114, i16 7], [2 x i16] [i16 28305, i16 15], [2 x i16] [i16 28306, i16 15], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 115, i16 7], [2 x i16] [i16 445, i16 9], [2 x i16] [i16 1784, i16 11], [2 x i16] [i16 28307, i16 15], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 447, i16 9], [2 x i16] [i16 244, i16 8], [2 x i16] [i16 490, i16 9], [2 x i16] [i16 893, i16 10], [2 x i16] [i16 982, i16 10], [2 x i16] [i16 1785, i16 11], [2 x i16] [i16 28308, i16 15], [2 x i16] [i16 246, i16 8], [2 x i16] [i16 494, i16 9], [2 x i16] [i16 28309, i16 15], [2 x i16] [i16 28310, i16 15], [2 x i16] [i16 28311, i16 15], [2 x i16] [i16 14156, i16 14], [2 x i16] [i16 14157, i16 14], [2 x i16] [i16 14158, i16 14], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 983, i16 10], [2 x i16] [i16 495, i16 9], [2 x i16] [i16 14159, i16 14]], [77 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 22, i16 6], [2 x i16] [i16 46, i16 7], [2 x i16] [i16 47, i16 7], [2 x i16] [i16 96, i16 8], [2 x i16] [i16 97, i16 8], [2 x i16] [i16 196, i16 9], [2 x i16] [i16 197, i16 9], [2 x i16] [i16 198, i16 9], [2 x i16] [i16 398, i16 10], [2 x i16] [i16 12768, i16 15], [2 x i16] [i16 12769, i16 15], [2 x i16] [i16 12770, i16 15], [2 x i16] [i16 12771, i16 15], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 25, i16 6], [2 x i16] [i16 56, i16 7], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 29, i16 6], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 114, i16 8], [2 x i16] [i16 115, i16 8], [2 x i16] [i16 240, i16 9], [2 x i16] [i16 482, i16 10], [2 x i16] [i16 242, i16 9], [2 x i16] [i16 483, i16 10], [2 x i16] [i16 243, i16 9], [2 x i16] [i16 488, i16 10], [2 x i16] [i16 489, i16 10], [2 x i16] [i16 12772, i16 15], [2 x i16] [i16 490, i16 10], [2 x i16] [i16 799, i16 11], [2 x i16] [i16 982, i16 11], [2 x i16] [i16 12773, i16 15], [2 x i16] [i16 492, i16 10], [2 x i16] [i16 12774, i16 15], [2 x i16] [i16 247, i16 9], [2 x i16] [i16 983, i16 11], [2 x i16] [i16 12775, i16 15], [2 x i16] [i16 12776, i16 15], [2 x i16] [i16 986, i16 11], [2 x i16] [i16 987, i16 11], [2 x i16] [i16 12777, i16 15], [2 x i16] [i16 992, i16 11], [2 x i16] [i16 12778, i16 15], [2 x i16] [i16 63, i16 7], [2 x i16] [i16 497, i16 10], [2 x i16] [i16 12779, i16 15], [2 x i16] [i16 12780, i16 15], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 117, i16 7], [2 x i16] [i16 249, i16 9], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 250, i16 9], [2 x i16] [i16 993, i16 11], [2 x i16] [i16 12781, i16 15], [2 x i16] [i16 6391, i16 14], [2 x i16] [i16 8032, i16 14], [2 x i16] [i16 8033, i16 14], [2 x i16] [i16 476, i16 9], [2 x i16] [i16 477, i16 9], [2 x i16] [i16 8034, i16 14], [2 x i16] [i16 8035, i16 14], [2 x i16] [i16 8036, i16 14], [2 x i16] [i16 8037, i16 14], [2 x i16] [i16 8038, i16 14], [2 x i16] [i16 8039, i16 14], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 1005, i16 11], [2 x i16] [i16 239, i16 8], [2 x i16] [i16 503, i16 10]]], align 16
@j_dc_vlc = internal global [2 x [8 x %struct.VLC]] zeroinitializer, align 16
@x8_dc_highquant_table = internal constant [8 x [34 x [2 x i16]]] [[34 x [2 x i16]] [[2 x i16] [i16 0, i16 5], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 1, i16 5], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 44, i16 7], [2 x i16] [i16 45, i16 7], [2 x i16] [i16 1472, i16 12], [2 x i16] [i16 1473, i16 12], [2 x i16] [i16 1474, i16 12], [2 x i16] [i16 1475, i16 12], [2 x i16] [i16 1476, i16 12], [2 x i16] [i16 1477, i16 12], [2 x i16] [i16 1478, i16 12], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 2, i16 2], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 47, i16 7], [2 x i16] [i16 93, i16 8], [2 x i16] [i16 1479, i16 12], [2 x i16] [i16 1480, i16 12], [2 x i16] [i16 1481, i16 12], [2 x i16] [i16 1482, i16 12], [2 x i16] [i16 1483, i16 12], [2 x i16] [i16 1484, i16 12], [2 x i16] [i16 1485, i16 12], [2 x i16] [i16 1486, i16 12], [2 x i16] [i16 1487, i16 12]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 48, i16 6], [2 x i16] [i16 98, i16 7], [2 x i16] [i16 99, i16 7], [2 x i16] [i16 1600, i16 11], [2 x i16] [i16 1601, i16 11], [2 x i16] [i16 1602, i16 11], [2 x i16] [i16 1603, i16 11], [2 x i16] [i16 1604, i16 11], [2 x i16] [i16 1605, i16 11], [2 x i16] [i16 51, i16 6], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 101, i16 7], [2 x i16] [i16 122, i16 7], [2 x i16] [i16 1606, i16 11], [2 x i16] [i16 123, i16 7], [2 x i16] [i16 1607, i16 11], [2 x i16] [i16 1608, i16 11], [2 x i16] [i16 1609, i16 11], [2 x i16] [i16 1610, i16 11], [2 x i16] [i16 1611, i16 11], [2 x i16] [i16 806, i16 10], [2 x i16] [i16 807, i16 10]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 7], [2 x i16] [i16 1, i16 7], [2 x i16] [i16 1, i16 6], [2 x i16] [i16 4, i16 7], [2 x i16] [i16 3, i16 6], [2 x i16] [i16 5, i16 7], [2 x i16] [i16 16, i16 8], [2 x i16] [i16 17, i16 8], [2 x i16] [i16 576, i16 13], [2 x i16] [i16 577, i16 13], [2 x i16] [i16 578, i16 13], [2 x i16] [i16 579, i16 13], [2 x i16] [i16 580, i16 13], [2 x i16] [i16 581, i16 13], [2 x i16] [i16 582, i16 13], [2 x i16] [i16 583, i16 13], [2 x i16] [i16 292, i16 12], [2 x i16] [i16 1, i16 1], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 3, i16 5], [2 x i16] [i16 5, i16 6], [2 x i16] [i16 19, i16 8], [2 x i16] [i16 293, i16 12], [2 x i16] [i16 294, i16 12], [2 x i16] [i16 295, i16 12], [2 x i16] [i16 296, i16 12], [2 x i16] [i16 297, i16 12], [2 x i16] [i16 298, i16 12], [2 x i16] [i16 299, i16 12], [2 x i16] [i16 300, i16 12], [2 x i16] [i16 301, i16 12], [2 x i16] [i16 302, i16 12], [2 x i16] [i16 303, i16 12]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 4], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 112, i16 7], [2 x i16] [i16 1808, i16 11], [2 x i16] [i16 1809, i16 11], [2 x i16] [i16 1810, i16 11], [2 x i16] [i16 1811, i16 11], [2 x i16] [i16 1812, i16 11], [2 x i16] [i16 1813, i16 11], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 114, i16 7], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 115, i16 7], [2 x i16] [i16 124, i16 7], [2 x i16] [i16 125, i16 7], [2 x i16] [i16 126, i16 7], [2 x i16] [i16 1814, i16 11], [2 x i16] [i16 1815, i16 11], [2 x i16] [i16 1816, i16 11], [2 x i16] [i16 127, i16 7], [2 x i16] [i16 1817, i16 11], [2 x i16] [i16 1818, i16 11], [2 x i16] [i16 1819, i16 11], [2 x i16] [i16 910, i16 10], [2 x i16] [i16 911, i16 10]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 8], [2 x i16] [i16 1, i16 7], [2 x i16] [i16 2, i16 7], [2 x i16] [i16 3, i16 7], [2 x i16] [i16 2, i16 9], [2 x i16] [i16 8, i16 8], [2 x i16] [i16 3, i16 9], [2 x i16] [i16 576, i16 14], [2 x i16] [i16 577, i16 14], [2 x i16] [i16 578, i16 14], [2 x i16] [i16 579, i16 14], [2 x i16] [i16 580, i16 14], [2 x i16] [i16 581, i16 14], [2 x i16] [i16 582, i16 14], [2 x i16] [i16 583, i16 14], [2 x i16] [i16 292, i16 13], [2 x i16] [i16 293, i16 13], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 1, i16 1], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 3, i16 6], [2 x i16] [i16 5, i16 7], [2 x i16] [i16 19, i16 9], [2 x i16] [i16 294, i16 13], [2 x i16] [i16 295, i16 13], [2 x i16] [i16 296, i16 13], [2 x i16] [i16 297, i16 13], [2 x i16] [i16 298, i16 13], [2 x i16] [i16 299, i16 13], [2 x i16] [i16 300, i16 13], [2 x i16] [i16 301, i16 13], [2 x i16] [i16 302, i16 13], [2 x i16] [i16 303, i16 13]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 7], [2 x i16] [i16 1, i16 7], [2 x i16] [i16 1, i16 6], [2 x i16] [i16 2, i16 6], [2 x i16] [i16 3, i16 6], [2 x i16] [i16 4, i16 6], [2 x i16] [i16 5, i16 6], [2 x i16] [i16 6, i16 6], [2 x i16] [i16 7, i16 6], [2 x i16] [i16 8, i16 6], [2 x i16] [i16 9, i16 6], [2 x i16] [i16 10, i16 6], [2 x i16] [i16 11, i16 6], [2 x i16] [i16 12, i16 6], [2 x i16] [i16 13, i16 6], [2 x i16] [i16 14, i16 6], [2 x i16] [i16 15, i16 6], [2 x i16] [i16 16, i16 6], [2 x i16] [i16 17, i16 6], [2 x i16] [i16 18, i16 6], [2 x i16] [i16 19, i16 6], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 21, i16 6], [2 x i16] [i16 22, i16 6], [2 x i16] [i16 23, i16 6], [2 x i16] [i16 24, i16 6], [2 x i16] [i16 25, i16 6], [2 x i16] [i16 1, i16 1], [2 x i16] [i16 26, i16 6], [2 x i16] [i16 27, i16 6], [2 x i16] [i16 28, i16 6], [2 x i16] [i16 29, i16 6], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 31, i16 6]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 5], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 1, i16 5], [2 x i16] [i16 4, i16 5], [2 x i16] [i16 10, i16 6], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 11, i16 6], [2 x i16] [i16 14, i16 6], [2 x i16] [i16 60, i16 8], [2 x i16] [i16 61, i16 8], [2 x i16] [i16 1984, i16 13], [2 x i16] [i16 1985, i16 13], [2 x i16] [i16 1986, i16 13], [2 x i16] [i16 1987, i16 13], [2 x i16] [i16 1988, i16 13], [2 x i16] [i16 1989, i16 13], [2 x i16] [i16 1990, i16 13], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 2, i16 2], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 63, i16 8], [2 x i16] [i16 125, i16 9], [2 x i16] [i16 1991, i16 13], [2 x i16] [i16 1992, i16 13], [2 x i16] [i16 1993, i16 13], [2 x i16] [i16 1994, i16 13], [2 x i16] [i16 1995, i16 13], [2 x i16] [i16 1996, i16 13], [2 x i16] [i16 1997, i16 13], [2 x i16] [i16 1998, i16 13], [2 x i16] [i16 1999, i16 13]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 7], [2 x i16] [i16 1, i16 7], [2 x i16] [i16 2, i16 7], [2 x i16] [i16 3, i16 7], [2 x i16] [i16 4, i16 7], [2 x i16] [i16 5, i16 7], [2 x i16] [i16 6, i16 7], [2 x i16] [i16 7, i16 7], [2 x i16] [i16 8, i16 7], [2 x i16] [i16 9, i16 7], [2 x i16] [i16 10, i16 7], [2 x i16] [i16 11, i16 7], [2 x i16] [i16 12, i16 7], [2 x i16] [i16 13, i16 7], [2 x i16] [i16 14, i16 7], [2 x i16] [i16 15, i16 7], [2 x i16] [i16 16, i16 7], [2 x i16] [i16 1, i16 1], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 17, i16 7], [2 x i16] [i16 18, i16 7], [2 x i16] [i16 19, i16 7], [2 x i16] [i16 20, i16 7], [2 x i16] [i16 21, i16 7], [2 x i16] [i16 22, i16 7], [2 x i16] [i16 23, i16 7], [2 x i16] [i16 24, i16 7], [2 x i16] [i16 25, i16 7], [2 x i16] [i16 26, i16 7], [2 x i16] [i16 27, i16 7], [2 x i16] [i16 28, i16 7], [2 x i16] [i16 29, i16 7], [2 x i16] [i16 30, i16 7], [2 x i16] [i16 31, i16 7]]], align 16
@x8_dc_lowquant_table = internal constant [8 x [34 x [2 x i16]]] [[34 x [2 x i16]] [[2 x i16] [i16 0, i16 5], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 1, i16 5], [2 x i16] [i16 4, i16 5], [2 x i16] [i16 5, i16 5], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 14, i16 6], [2 x i16] [i16 15, i16 6], [2 x i16] [i16 64, i16 8], [2 x i16] [i16 65, i16 8], [2 x i16] [i16 2112, i16 13], [2 x i16] [i16 2113, i16 13], [2 x i16] [i16 2114, i16 13], [2 x i16] [i16 2115, i16 13], [2 x i16] [i16 2116, i16 13], [2 x i16] [i16 2117, i16 13], [2 x i16] [i16 2118, i16 13], [2 x i16] [i16 2, i16 2], [2 x i16] [i16 3, i16 2], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 17, i16 6], [2 x i16] [i16 67, i16 8], [2 x i16] [i16 133, i16 9], [2 x i16] [i16 2119, i16 13], [2 x i16] [i16 2120, i16 13], [2 x i16] [i16 2121, i16 13], [2 x i16] [i16 2122, i16 13], [2 x i16] [i16 2123, i16 13], [2 x i16] [i16 2124, i16 13], [2 x i16] [i16 2125, i16 13], [2 x i16] [i16 2126, i16 13], [2 x i16] [i16 2127, i16 13]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 4], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 472, i16 9], [2 x i16] [i16 473, i16 9], [2 x i16] [i16 7584, i16 13], [2 x i16] [i16 7585, i16 13], [2 x i16] [i16 7586, i16 13], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 119, i16 7], [2 x i16] [i16 475, i16 9], [2 x i16] [i16 126, i16 7], [2 x i16] [i16 254, i16 8], [2 x i16] [i16 510, i16 9], [2 x i16] [i16 7587, i16 13], [2 x i16] [i16 7588, i16 13], [2 x i16] [i16 7589, i16 13], [2 x i16] [i16 3795, i16 12], [2 x i16] [i16 3796, i16 12], [2 x i16] [i16 511, i16 9], [2 x i16] [i16 3797, i16 12], [2 x i16] [i16 3798, i16 12], [2 x i16] [i16 3799, i16 12]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 4], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 84, i16 7], [2 x i16] [i16 85, i16 7], [2 x i16] [i16 2752, i16 12], [2 x i16] [i16 2753, i16 12], [2 x i16] [i16 2754, i16 12], [2 x i16] [i16 2755, i16 12], [2 x i16] [i16 2756, i16 12], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 87, i16 7], [2 x i16] [i16 173, i16 8], [2 x i16] [i16 2757, i16 12], [2 x i16] [i16 2758, i16 12], [2 x i16] [i16 2759, i16 12], [2 x i16] [i16 2760, i16 12], [2 x i16] [i16 2761, i16 12], [2 x i16] [i16 2762, i16 12], [2 x i16] [i16 2763, i16 12], [2 x i16] [i16 1382, i16 11], [2 x i16] [i16 1383, i16 11]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 4], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 124, i16 7], [2 x i16] [i16 250, i16 8], [2 x i16] [i16 16064, i16 14], [2 x i16] [i16 16065, i16 14], [2 x i16] [i16 16066, i16 14], [2 x i16] [i16 16067, i16 14], [2 x i16] [i16 8034, i16 13], [2 x i16] [i16 503, i16 9], [2 x i16] [i16 126, i16 7], [2 x i16] [i16 254, i16 8], [2 x i16] [i16 255, i16 8], [2 x i16] [i16 8035, i16 13], [2 x i16] [i16 8036, i16 13], [2 x i16] [i16 8037, i16 13], [2 x i16] [i16 8038, i16 13], [2 x i16] [i16 8039, i16 13], [2 x i16] [i16 8040, i16 13], [2 x i16] [i16 8041, i16 13], [2 x i16] [i16 8042, i16 13], [2 x i16] [i16 8043, i16 13], [2 x i16] [i16 8044, i16 13], [2 x i16] [i16 8045, i16 13], [2 x i16] [i16 8046, i16 13], [2 x i16] [i16 8047, i16 13]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 7], [2 x i16] [i16 1, i16 7], [2 x i16] [i16 2, i16 7], [2 x i16] [i16 3, i16 7], [2 x i16] [i16 4, i16 7], [2 x i16] [i16 5, i16 7], [2 x i16] [i16 6, i16 7], [2 x i16] [i16 7, i16 7], [2 x i16] [i16 8, i16 7], [2 x i16] [i16 9, i16 7], [2 x i16] [i16 10, i16 7], [2 x i16] [i16 11, i16 7], [2 x i16] [i16 12, i16 7], [2 x i16] [i16 13, i16 7], [2 x i16] [i16 14, i16 7], [2 x i16] [i16 15, i16 7], [2 x i16] [i16 16, i16 7], [2 x i16] [i16 1, i16 1], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 17, i16 7], [2 x i16] [i16 18, i16 7], [2 x i16] [i16 19, i16 7], [2 x i16] [i16 20, i16 7], [2 x i16] [i16 21, i16 7], [2 x i16] [i16 22, i16 7], [2 x i16] [i16 23, i16 7], [2 x i16] [i16 24, i16 7], [2 x i16] [i16 25, i16 7], [2 x i16] [i16 26, i16 7], [2 x i16] [i16 27, i16 7], [2 x i16] [i16 28, i16 7], [2 x i16] [i16 29, i16 7], [2 x i16] [i16 30, i16 7], [2 x i16] [i16 31, i16 7]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 5], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 1, i16 5], [2 x i16] [i16 8, i16 6], [2 x i16] [i16 9, i16 6], [2 x i16] [i16 10, i16 6], [2 x i16] [i16 22, i16 7], [2 x i16] [i16 12, i16 6], [2 x i16] [i16 23, i16 7], [2 x i16] [i16 13, i16 6], [2 x i16] [i16 56, i16 8], [2 x i16] [i16 29, i16 7], [2 x i16] [i16 57, i16 8], [2 x i16] [i16 1920, i16 13], [2 x i16] [i16 1921, i16 13], [2 x i16] [i16 1922, i16 13], [2 x i16] [i16 1923, i16 13], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 1, i16 1], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 31, i16 7], [2 x i16] [i16 61, i16 8], [2 x i16] [i16 121, i16 9], [2 x i16] [i16 1924, i16 13], [2 x i16] [i16 1925, i16 13], [2 x i16] [i16 1926, i16 13], [2 x i16] [i16 1927, i16 13], [2 x i16] [i16 1928, i16 13], [2 x i16] [i16 1929, i16 13], [2 x i16] [i16 1930, i16 13], [2 x i16] [i16 1931, i16 13], [2 x i16] [i16 1932, i16 13], [2 x i16] [i16 1933, i16 13], [2 x i16] [i16 967, i16 12]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 4], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 94, i16 7], [2 x i16] [i16 95, i16 7], [2 x i16] [i16 192, i16 8], [2 x i16] [i16 12352, i16 14], [2 x i16] [i16 12353, i16 14], [2 x i16] [i16 773, i16 10], [2 x i16] [i16 387, i16 9], [2 x i16] [i16 12354, i16 14], [2 x i16] [i16 12355, i16 14], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 49, i16 6], [2 x i16] [i16 194, i16 8], [2 x i16] [i16 195, i16 8], [2 x i16] [i16 12356, i16 14], [2 x i16] [i16 12357, i16 14], [2 x i16] [i16 12358, i16 14], [2 x i16] [i16 12359, i16 14], [2 x i16] [i16 12360, i16 14], [2 x i16] [i16 12361, i16 14], [2 x i16] [i16 12362, i16 14], [2 x i16] [i16 12363, i16 14], [2 x i16] [i16 12364, i16 14], [2 x i16] [i16 12365, i16 14], [2 x i16] [i16 6183, i16 13]], [34 x [2 x i16]] [[2 x i16] [i16 0, i16 6], [2 x i16] [i16 1, i16 6], [2 x i16] [i16 2, i16 6], [2 x i16] [i16 6, i16 7], [2 x i16] [i16 7, i16 7], [2 x i16] [i16 4, i16 6], [2 x i16] [i16 5, i16 6], [2 x i16] [i16 6, i16 6], [2 x i16] [i16 14, i16 7], [2 x i16] [i16 30, i16 8], [2 x i16] [i16 31, i16 8], [2 x i16] [i16 64, i16 9], [2 x i16] [i16 130, i16 10], [2 x i16] [i16 2096, i16 14], [2 x i16] [i16 2097, i16 14], [2 x i16] [i16 2098, i16 14], [2 x i16] [i16 2099, i16 14], [2 x i16] [i16 1, i16 1], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 5, i16 5], [2 x i16] [i16 9, i16 6], [2 x i16] [i16 17, i16 7], [2 x i16] [i16 33, i16 8], [2 x i16] [i16 2100, i16 14], [2 x i16] [i16 2101, i16 14], [2 x i16] [i16 2102, i16 14], [2 x i16] [i16 2103, i16 14], [2 x i16] [i16 2104, i16 14], [2 x i16] [i16 2105, i16 14], [2 x i16] [i16 2106, i16 14], [2 x i16] [i16 2107, i16 14], [2 x i16] [i16 1054, i16 13], [2 x i16] [i16 1055, i16 13]]], align 16
@j_orient_vlc = internal global [2 x [4 x %struct.VLC]] zeroinitializer, align 16
@x8_orient_highquant_table = internal constant [2 x [12 x [2 x i16]]] [[12 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 63, i16 6]], [12 x [2 x i16]] [[2 x i16] [i16 0, i16 1], [2 x i16] [i16 2, i16 2], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 120, i16 7], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 121, i16 7], [2 x i16] [i16 124, i16 7], [2 x i16] [i16 125, i16 7], [2 x i16] [i16 126, i16 7], [2 x i16] [i16 127, i16 7]]], align 16
@x8_orient_lowquant_table = internal constant [4 x [12 x [2 x i16]]] [[12 x [2 x i16]] [[2 x i16] [i16 0, i16 1], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 63, i16 6]], [12 x [2 x i16]] [[2 x i16] [i16 0, i16 5], [2 x i16] [i16 1, i16 5], [2 x i16] [i16 2, i16 5], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 2, i16 2], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 3, i16 5], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 31, i16 5]], [12 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 63, i16 6]], [12 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 2, i16 2], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 31, i16 5]]], align 16
@.str = private unnamed_addr constant [41 x i8] c"table size %zu does not match needed %i\0A\00", align 1
@x8_setup_spatial_predictor.prediction_table = internal constant [3 x [12 x i8]] [[12 x i8] c"\00\08\04\0A\0B\02\06\09\01\03\05\07", [12 x i8] c"\04\00\08\0B\0A\03\05\02\06\09\01\07", [12 x i8] c"\08\00\04\0A\0B\01\07\02\06\09\03\05"], align 16
@quant_table = internal constant [64 x i16] [i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 259, i16 262, i16 265, i16 269, i16 272, i16 275, i16 278, i16 282, i16 285, i16 288, i16 292, i16 295, i16 299, i16 303, i16 306, i16 310, i16 314, i16 317, i16 321, i16 325, i16 329, i16 333, i16 337, i16 341, i16 345, i16 349, i16 353, i16 358, i16 362, i16 366, i16 371, i16 375, i16 379, i16 384, i16 389, i16 393, i16 398, i16 403, i16 408, i16 413, i16 417, i16 422, i16 428, i16 433, i16 438, i16 443, i16 448, i16 454, i16 459, i16 465, i16 470, i16 476, i16 482, i16 488, i16 493, i16 499, i16 505, i16 511], align 16
@dc_index_offset = internal constant [17 x i8] c"\00\01\02\03\04\05\07\09\0D\11\19!1Aa\81\C1", align 16
@ac_decode_table = internal constant [27 x i32] [i32 1113859, i32 1638147, i32 17104642, i32 17366787, i32 2162437, i32 17891076, i32 67108866, i32 134217730, i32 201326594, i32 268435459, i32 402653187, i32 50397186, i32 117506051, i32 1113858, i32 1376002, i32 1638146, i32 1900290, i32 2162436, i32 3211012, i32 17104642, i32 17366787, i32 17891076, i32 67108866, i32 134217731, i32 268435460, i32 50397186, i32 117506051], align 16
@x8_get_ac_rlf.crazy_mix_runlevel = internal constant [32 x i8] c"\2223S#BCc$R4s%bD\83&r5T'\82Ed(\926t)\A2F\84", align 16

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_intrax8_common_init(%struct.AVCodecContext* %avctx, %struct.IntraX8Context* %w, %struct.IDCTDSPContext* %idsp, [64 x i16]* %block, i32* %block_last_index, i32 %mb_width, i32 %mb_height) #0 !dbg !1735 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %w.addr = alloca %struct.IntraX8Context*, align 8
  %idsp.addr = alloca %struct.IDCTDSPContext*, align 8
  %block.addr = alloca [64 x i16]*, align 8
  %block_last_index.addr = alloca i32*, align 8
  %mb_width.addr = alloca i32, align 4
  %mb_height.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1739, metadata !1740), !dbg !1741
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !1742, metadata !1740), !dbg !1743
  store %struct.IDCTDSPContext* %idsp, %struct.IDCTDSPContext** %idsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDCTDSPContext** %idsp.addr, metadata !1744, metadata !1740), !dbg !1745
  store [64 x i16]* %block, [64 x i16]** %block.addr, align 8
  call void @llvm.dbg.declare(metadata [64 x i16]** %block.addr, metadata !1746, metadata !1740), !dbg !1747
  store i32* %block_last_index, i32** %block_last_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block_last_index.addr, metadata !1748, metadata !1740), !dbg !1749
  store i32 %mb_width, i32* %mb_width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mb_width.addr, metadata !1750, metadata !1740), !dbg !1751
  store i32 %mb_height, i32* %mb_height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mb_height.addr, metadata !1752, metadata !1740), !dbg !1753
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1754, metadata !1740), !dbg !1755
  %call = call i32 @x8_vlc_init(), !dbg !1756
  store i32 %call, i32* %ret, align 4, !dbg !1755
  %0 = load i32, i32* %ret, align 4, !dbg !1757
  %cmp = icmp slt i32 %0, 0, !dbg !1759
  br i1 %cmp, label %if.then, label %if.end, !dbg !1760

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ret, align 4, !dbg !1761
  store i32 %1, i32* %retval, align 4, !dbg !1762
  br label %return, !dbg !1762

if.end:                                           ; preds = %entry
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1763
  %3 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1764
  %avctx1 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %3, i32 0, i32 8, !dbg !1765
  store %struct.AVCodecContext* %2, %struct.AVCodecContext** %avctx1, align 8, !dbg !1766
  %4 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1767
  %idsp2 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %4, i32 0, i32 12, !dbg !1768
  %5 = load %struct.IDCTDSPContext*, %struct.IDCTDSPContext** %idsp.addr, align 8, !dbg !1769
  %6 = bitcast %struct.IDCTDSPContext* %idsp2 to i8*, !dbg !1770
  %7 = bitcast %struct.IDCTDSPContext* %5 to i8*, !dbg !1770
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 120, i32 8, i1 false), !dbg !1770
  %8 = load i32, i32* %mb_width.addr, align 4, !dbg !1771
  %9 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1772
  %mb_width3 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %9, i32 0, i32 34, !dbg !1773
  store i32 %8, i32* %mb_width3, align 8, !dbg !1774
  %10 = load i32, i32* %mb_height.addr, align 4, !dbg !1775
  %11 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1776
  %mb_height4 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %11, i32 0, i32 35, !dbg !1777
  store i32 %10, i32* %mb_height4, align 4, !dbg !1778
  %12 = load [64 x i16]*, [64 x i16]** %block.addr, align 8, !dbg !1779
  %13 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1780
  %block5 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %13, i32 0, i32 10, !dbg !1781
  store [64 x i16]* %12, [64 x i16]** %block5, align 8, !dbg !1782
  %14 = load i32*, i32** %block_last_index.addr, align 8, !dbg !1783
  %15 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1784
  %block_last_index6 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %15, i32 0, i32 9, !dbg !1785
  store i32* %14, i32** %block_last_index6, align 8, !dbg !1786
  %16 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1787
  %mb_width7 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %16, i32 0, i32 34, !dbg !1788
  %17 = load i32, i32* %mb_width7, align 8, !dbg !1788
  %mul = mul nsw i32 %17, 2, !dbg !1789
  %mul8 = mul nsw i32 %mul, 2, !dbg !1790
  %conv = sext i32 %mul8 to i64, !dbg !1787
  %call9 = call noalias i8* @av_mallocz(i64 %conv), !dbg !1791
  %18 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1792
  %prediction_table = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %18, i32 0, i32 4, !dbg !1793
  store i8* %call9, i8** %prediction_table, align 8, !dbg !1794
  %19 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1795
  %prediction_table10 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %19, i32 0, i32 4, !dbg !1797
  %20 = load i8*, i8** %prediction_table10, align 8, !dbg !1797
  %tobool = icmp ne i8* %20, null, !dbg !1795
  br i1 %tobool, label %if.end12, label %if.then11, !dbg !1798

if.then11:                                        ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !1799
  br label %return, !dbg !1799

if.end12:                                         ; preds = %if.end
  %21 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1800
  %wdsp = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %21, i32 0, i32 6, !dbg !1801
  call void @ff_wmv2dsp_init(%struct.WMV2DSPContext* %wdsp), !dbg !1802
  %22 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1803
  %idct_permutation = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %22, i32 0, i32 7, !dbg !1804
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation, i32 0, i32 0, !dbg !1803
  %23 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1805
  %wdsp13 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %23, i32 0, i32 6, !dbg !1806
  %idct_perm = getelementptr inbounds %struct.WMV2DSPContext, %struct.WMV2DSPContext* %wdsp13, i32 0, i32 3, !dbg !1807
  %24 = load i32, i32* %idct_perm, align 8, !dbg !1807
  call void @ff_init_scantable_permutation(i8* %arraydecay, i32 %24), !dbg !1808
  %25 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1809
  %idct_permutation14 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %25, i32 0, i32 7, !dbg !1810
  %arraydecay15 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation14, i32 0, i32 0, !dbg !1809
  %26 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1811
  %scantable = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %26, i32 0, i32 5, !dbg !1812
  %arrayidx = getelementptr inbounds [3 x %struct.ScanTable], [3 x %struct.ScanTable]* %scantable, i64 0, i64 0, !dbg !1811
  call void @ff_init_scantable(i8* %arraydecay15, %struct.ScanTable* %arrayidx, i8* getelementptr inbounds ([4 x [64 x i8]], [4 x [64 x i8]]* @ff_wmv1_scantable, i64 0, i64 0, i32 0)), !dbg !1813
  %27 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1814
  %idct_permutation16 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %27, i32 0, i32 7, !dbg !1815
  %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation16, i32 0, i32 0, !dbg !1814
  %28 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1816
  %scantable18 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %28, i32 0, i32 5, !dbg !1817
  %arrayidx19 = getelementptr inbounds [3 x %struct.ScanTable], [3 x %struct.ScanTable]* %scantable18, i64 0, i64 1, !dbg !1816
  call void @ff_init_scantable(i8* %arraydecay17, %struct.ScanTable* %arrayidx19, i8* getelementptr inbounds ([4 x [64 x i8]], [4 x [64 x i8]]* @ff_wmv1_scantable, i64 0, i64 2, i32 0)), !dbg !1818
  %29 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1819
  %idct_permutation20 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %29, i32 0, i32 7, !dbg !1820
  %arraydecay21 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation20, i32 0, i32 0, !dbg !1819
  %30 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1821
  %scantable22 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %30, i32 0, i32 5, !dbg !1822
  %arrayidx23 = getelementptr inbounds [3 x %struct.ScanTable], [3 x %struct.ScanTable]* %scantable22, i64 0, i64 2, !dbg !1821
  call void @ff_init_scantable(i8* %arraydecay21, %struct.ScanTable* %arrayidx23, i8* getelementptr inbounds ([4 x [64 x i8]], [4 x [64 x i8]]* @ff_wmv1_scantable, i64 0, i64 3, i32 0)), !dbg !1823
  %31 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1824
  %dsp = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %31, i32 0, i32 11, !dbg !1825
  call void @ff_intrax8dsp_init(%struct.IntraX8DSPContext* %dsp), !dbg !1826
  %32 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !1827
  %bdsp = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %32, i32 0, i32 13, !dbg !1828
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1829
  call void @ff_blockdsp_init(%struct.BlockDSPContext* %bdsp, %struct.AVCodecContext* %33), !dbg !1830
  store i32 0, i32* %retval, align 4, !dbg !1831
  br label %return, !dbg !1831

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !1832
  ret i32 %34, !dbg !1832
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @x8_vlc_init() #0 !dbg !912 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %offset = alloca i32, align 4
  %sizeidx = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1833, metadata !1740), !dbg !1834
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !1835, metadata !1740), !dbg !1836
  store i32 0, i32* %offset, align 4, !dbg !1836
  call void @llvm.dbg.declare(metadata i32* %sizeidx, metadata !1837, metadata !1740), !dbg !1838
  store i32 0, i32* %sizeidx, align 4, !dbg !1838
  store i32 0, i32* %i, align 4, !dbg !1839
  br label %for.cond, !dbg !1841

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1842
  %cmp = icmp slt i32 %0, 8, !dbg !1845
  br i1 %cmp, label %for.body, label %for.end, !dbg !1846

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !1847, !llvm.loop !1849

do.body:                                          ; preds = %for.body
  %1 = load i32, i32* %offset, align 4, !dbg !1850
  %idxprom = sext i32 %1 to i64, !dbg !1853
  %arrayidx = getelementptr inbounds [28150 x [2 x i16]], [28150 x [2 x i16]]* @x8_vlc_init.table, i64 0, i64 %idxprom, !dbg !1853
  %2 = load i32, i32* %i, align 4, !dbg !1854
  %idxprom1 = sext i32 %2 to i64, !dbg !1855
  %arrayidx2 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [2 x [8 x %struct.VLC]]], [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc, i64 0, i64 0, i64 0), i64 0, i64 %idxprom1, !dbg !1855
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx2, i32 0, i32 1, !dbg !1856
  store [2 x i16]* %arrayidx, [2 x i16]** %table, align 8, !dbg !1857
  %3 = load i32, i32* %sizeidx, align 4, !dbg !1858
  %idxprom3 = sext i32 %3 to i64, !dbg !1859
  %arrayidx4 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom3, !dbg !1859
  %4 = load i16, i16* %arrayidx4, align 2, !dbg !1859
  %conv = zext i16 %4 to i32, !dbg !1859
  %5 = load i32, i32* %i, align 4, !dbg !1860
  %idxprom5 = sext i32 %5 to i64, !dbg !1861
  %arrayidx6 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [2 x [8 x %struct.VLC]]], [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc, i64 0, i64 0, i64 0), i64 0, i64 %idxprom5, !dbg !1861
  %table_allocated = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx6, i32 0, i32 3, !dbg !1862
  store i32 %conv, i32* %table_allocated, align 4, !dbg !1863
  %6 = load i32, i32* %sizeidx, align 4, !dbg !1864
  %inc = add nsw i32 %6, 1, !dbg !1864
  store i32 %inc, i32* %sizeidx, align 4, !dbg !1864
  %idxprom7 = sext i32 %6 to i64, !dbg !1865
  %arrayidx8 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom7, !dbg !1865
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !1865
  %conv9 = zext i16 %7 to i32, !dbg !1865
  %8 = load i32, i32* %offset, align 4, !dbg !1866
  %add = add nsw i32 %8, %conv9, !dbg !1866
  store i32 %add, i32* %offset, align 4, !dbg !1866
  %9 = load i32, i32* %i, align 4, !dbg !1867
  %idxprom10 = sext i32 %9 to i64, !dbg !1868
  %arrayidx11 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [2 x [8 x %struct.VLC]]], [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc, i64 0, i64 0, i64 0), i64 0, i64 %idxprom10, !dbg !1868
  %10 = load i32, i32* %i, align 4, !dbg !1869
  %idxprom12 = sext i32 %10 to i64, !dbg !1870
  %arrayidx13 = getelementptr inbounds [8 x [77 x [2 x i16]]], [8 x [77 x [2 x i16]]]* @x8_ac0_highquant_table, i64 0, i64 %idxprom12, !dbg !1870
  %arrayidx14 = getelementptr inbounds [77 x [2 x i16]], [77 x [2 x i16]]* %arrayidx13, i64 0, i64 0, !dbg !1870
  %arrayidx15 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx14, i64 0, i64 1, !dbg !1870
  %11 = bitcast i16* %arrayidx15 to i8*, !dbg !1871
  %12 = load i32, i32* %i, align 4, !dbg !1872
  %idxprom16 = sext i32 %12 to i64, !dbg !1873
  %arrayidx17 = getelementptr inbounds [8 x [77 x [2 x i16]]], [8 x [77 x [2 x i16]]]* @x8_ac0_highquant_table, i64 0, i64 %idxprom16, !dbg !1873
  %arrayidx18 = getelementptr inbounds [77 x [2 x i16]], [77 x [2 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !1873
  %arrayidx19 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx18, i64 0, i64 0, !dbg !1873
  %13 = bitcast i16* %arrayidx19 to i8*, !dbg !1874
  %call = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx11, i32 9, i32 77, i8* %11, i32 4, i32 2, i8* %13, i32 4, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !1875
  br label %do.end, !dbg !1876

do.end:                                           ; preds = %do.body
  br label %do.body20, !dbg !1877, !llvm.loop !1878

do.body20:                                        ; preds = %do.end
  %14 = load i32, i32* %offset, align 4, !dbg !1879
  %idxprom21 = sext i32 %14 to i64, !dbg !1882
  %arrayidx22 = getelementptr inbounds [28150 x [2 x i16]], [28150 x [2 x i16]]* @x8_vlc_init.table, i64 0, i64 %idxprom21, !dbg !1882
  %15 = load i32, i32* %i, align 4, !dbg !1883
  %idxprom23 = sext i32 %15 to i64, !dbg !1884
  %arrayidx24 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [2 x [8 x %struct.VLC]]], [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc, i64 0, i64 0, i64 1), i64 0, i64 %idxprom23, !dbg !1884
  %table25 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx24, i32 0, i32 1, !dbg !1885
  store [2 x i16]* %arrayidx22, [2 x i16]** %table25, align 8, !dbg !1886
  %16 = load i32, i32* %sizeidx, align 4, !dbg !1887
  %idxprom26 = sext i32 %16 to i64, !dbg !1888
  %arrayidx27 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom26, !dbg !1888
  %17 = load i16, i16* %arrayidx27, align 2, !dbg !1888
  %conv28 = zext i16 %17 to i32, !dbg !1888
  %18 = load i32, i32* %i, align 4, !dbg !1889
  %idxprom29 = sext i32 %18 to i64, !dbg !1890
  %arrayidx30 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [2 x [8 x %struct.VLC]]], [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc, i64 0, i64 0, i64 1), i64 0, i64 %idxprom29, !dbg !1890
  %table_allocated31 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx30, i32 0, i32 3, !dbg !1891
  store i32 %conv28, i32* %table_allocated31, align 4, !dbg !1892
  %19 = load i32, i32* %sizeidx, align 4, !dbg !1893
  %inc32 = add nsw i32 %19, 1, !dbg !1893
  store i32 %inc32, i32* %sizeidx, align 4, !dbg !1893
  %idxprom33 = sext i32 %19 to i64, !dbg !1894
  %arrayidx34 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom33, !dbg !1894
  %20 = load i16, i16* %arrayidx34, align 2, !dbg !1894
  %conv35 = zext i16 %20 to i32, !dbg !1894
  %21 = load i32, i32* %offset, align 4, !dbg !1895
  %add36 = add nsw i32 %21, %conv35, !dbg !1895
  store i32 %add36, i32* %offset, align 4, !dbg !1895
  %22 = load i32, i32* %i, align 4, !dbg !1896
  %idxprom37 = sext i32 %22 to i64, !dbg !1897
  %arrayidx38 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [2 x [8 x %struct.VLC]]], [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc, i64 0, i64 0, i64 1), i64 0, i64 %idxprom37, !dbg !1897
  %23 = load i32, i32* %i, align 4, !dbg !1898
  %idxprom39 = sext i32 %23 to i64, !dbg !1899
  %arrayidx40 = getelementptr inbounds [8 x [77 x [2 x i16]]], [8 x [77 x [2 x i16]]]* @x8_ac1_highquant_table, i64 0, i64 %idxprom39, !dbg !1899
  %arrayidx41 = getelementptr inbounds [77 x [2 x i16]], [77 x [2 x i16]]* %arrayidx40, i64 0, i64 0, !dbg !1899
  %arrayidx42 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx41, i64 0, i64 1, !dbg !1899
  %24 = bitcast i16* %arrayidx42 to i8*, !dbg !1900
  %25 = load i32, i32* %i, align 4, !dbg !1901
  %idxprom43 = sext i32 %25 to i64, !dbg !1902
  %arrayidx44 = getelementptr inbounds [8 x [77 x [2 x i16]]], [8 x [77 x [2 x i16]]]* @x8_ac1_highquant_table, i64 0, i64 %idxprom43, !dbg !1902
  %arrayidx45 = getelementptr inbounds [77 x [2 x i16]], [77 x [2 x i16]]* %arrayidx44, i64 0, i64 0, !dbg !1902
  %arrayidx46 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx45, i64 0, i64 0, !dbg !1902
  %26 = bitcast i16* %arrayidx46 to i8*, !dbg !1903
  %call47 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx38, i32 9, i32 77, i8* %24, i32 4, i32 2, i8* %26, i32 4, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !1904
  br label %do.end48, !dbg !1905

do.end48:                                         ; preds = %do.body20
  br label %do.body49, !dbg !1906, !llvm.loop !1907

do.body49:                                        ; preds = %do.end48
  %27 = load i32, i32* %offset, align 4, !dbg !1908
  %idxprom50 = sext i32 %27 to i64, !dbg !1911
  %arrayidx51 = getelementptr inbounds [28150 x [2 x i16]], [28150 x [2 x i16]]* @x8_vlc_init.table, i64 0, i64 %idxprom50, !dbg !1911
  %28 = load i32, i32* %i, align 4, !dbg !1912
  %idxprom52 = sext i32 %28 to i64, !dbg !1913
  %arrayidx53 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [2 x [8 x %struct.VLC]]], [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc, i64 0, i64 1, i64 0), i64 0, i64 %idxprom52, !dbg !1913
  %table54 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx53, i32 0, i32 1, !dbg !1914
  store [2 x i16]* %arrayidx51, [2 x i16]** %table54, align 8, !dbg !1915
  %29 = load i32, i32* %sizeidx, align 4, !dbg !1916
  %idxprom55 = sext i32 %29 to i64, !dbg !1917
  %arrayidx56 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom55, !dbg !1917
  %30 = load i16, i16* %arrayidx56, align 2, !dbg !1917
  %conv57 = zext i16 %30 to i32, !dbg !1917
  %31 = load i32, i32* %i, align 4, !dbg !1918
  %idxprom58 = sext i32 %31 to i64, !dbg !1919
  %arrayidx59 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [2 x [8 x %struct.VLC]]], [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc, i64 0, i64 1, i64 0), i64 0, i64 %idxprom58, !dbg !1919
  %table_allocated60 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx59, i32 0, i32 3, !dbg !1920
  store i32 %conv57, i32* %table_allocated60, align 4, !dbg !1921
  %32 = load i32, i32* %sizeidx, align 4, !dbg !1922
  %inc61 = add nsw i32 %32, 1, !dbg !1922
  store i32 %inc61, i32* %sizeidx, align 4, !dbg !1922
  %idxprom62 = sext i32 %32 to i64, !dbg !1923
  %arrayidx63 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom62, !dbg !1923
  %33 = load i16, i16* %arrayidx63, align 2, !dbg !1923
  %conv64 = zext i16 %33 to i32, !dbg !1923
  %34 = load i32, i32* %offset, align 4, !dbg !1924
  %add65 = add nsw i32 %34, %conv64, !dbg !1924
  store i32 %add65, i32* %offset, align 4, !dbg !1924
  %35 = load i32, i32* %i, align 4, !dbg !1925
  %idxprom66 = sext i32 %35 to i64, !dbg !1926
  %arrayidx67 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [2 x [8 x %struct.VLC]]], [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc, i64 0, i64 1, i64 0), i64 0, i64 %idxprom66, !dbg !1926
  %36 = load i32, i32* %i, align 4, !dbg !1927
  %idxprom68 = sext i32 %36 to i64, !dbg !1928
  %arrayidx69 = getelementptr inbounds [8 x [77 x [2 x i16]]], [8 x [77 x [2 x i16]]]* @x8_ac0_lowquant_table, i64 0, i64 %idxprom68, !dbg !1928
  %arrayidx70 = getelementptr inbounds [77 x [2 x i16]], [77 x [2 x i16]]* %arrayidx69, i64 0, i64 0, !dbg !1928
  %arrayidx71 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx70, i64 0, i64 1, !dbg !1928
  %37 = bitcast i16* %arrayidx71 to i8*, !dbg !1929
  %38 = load i32, i32* %i, align 4, !dbg !1930
  %idxprom72 = sext i32 %38 to i64, !dbg !1931
  %arrayidx73 = getelementptr inbounds [8 x [77 x [2 x i16]]], [8 x [77 x [2 x i16]]]* @x8_ac0_lowquant_table, i64 0, i64 %idxprom72, !dbg !1931
  %arrayidx74 = getelementptr inbounds [77 x [2 x i16]], [77 x [2 x i16]]* %arrayidx73, i64 0, i64 0, !dbg !1931
  %arrayidx75 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx74, i64 0, i64 0, !dbg !1931
  %39 = bitcast i16* %arrayidx75 to i8*, !dbg !1932
  %call76 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx67, i32 9, i32 77, i8* %37, i32 4, i32 2, i8* %39, i32 4, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !1933
  br label %do.end77, !dbg !1934

do.end77:                                         ; preds = %do.body49
  br label %do.body78, !dbg !1935, !llvm.loop !1936

do.body78:                                        ; preds = %do.end77
  %40 = load i32, i32* %offset, align 4, !dbg !1937
  %idxprom79 = sext i32 %40 to i64, !dbg !1940
  %arrayidx80 = getelementptr inbounds [28150 x [2 x i16]], [28150 x [2 x i16]]* @x8_vlc_init.table, i64 0, i64 %idxprom79, !dbg !1940
  %41 = load i32, i32* %i, align 4, !dbg !1941
  %idxprom81 = sext i32 %41 to i64, !dbg !1942
  %arrayidx82 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [2 x [8 x %struct.VLC]]], [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc, i64 0, i64 1, i64 1), i64 0, i64 %idxprom81, !dbg !1942
  %table83 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx82, i32 0, i32 1, !dbg !1943
  store [2 x i16]* %arrayidx80, [2 x i16]** %table83, align 8, !dbg !1944
  %42 = load i32, i32* %sizeidx, align 4, !dbg !1945
  %idxprom84 = sext i32 %42 to i64, !dbg !1946
  %arrayidx85 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom84, !dbg !1946
  %43 = load i16, i16* %arrayidx85, align 2, !dbg !1946
  %conv86 = zext i16 %43 to i32, !dbg !1946
  %44 = load i32, i32* %i, align 4, !dbg !1947
  %idxprom87 = sext i32 %44 to i64, !dbg !1948
  %arrayidx88 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [2 x [8 x %struct.VLC]]], [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc, i64 0, i64 1, i64 1), i64 0, i64 %idxprom87, !dbg !1948
  %table_allocated89 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx88, i32 0, i32 3, !dbg !1949
  store i32 %conv86, i32* %table_allocated89, align 4, !dbg !1950
  %45 = load i32, i32* %sizeidx, align 4, !dbg !1951
  %inc90 = add nsw i32 %45, 1, !dbg !1951
  store i32 %inc90, i32* %sizeidx, align 4, !dbg !1951
  %idxprom91 = sext i32 %45 to i64, !dbg !1952
  %arrayidx92 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom91, !dbg !1952
  %46 = load i16, i16* %arrayidx92, align 2, !dbg !1952
  %conv93 = zext i16 %46 to i32, !dbg !1952
  %47 = load i32, i32* %offset, align 4, !dbg !1953
  %add94 = add nsw i32 %47, %conv93, !dbg !1953
  store i32 %add94, i32* %offset, align 4, !dbg !1953
  %48 = load i32, i32* %i, align 4, !dbg !1954
  %idxprom95 = sext i32 %48 to i64, !dbg !1955
  %arrayidx96 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [2 x [8 x %struct.VLC]]], [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc, i64 0, i64 1, i64 1), i64 0, i64 %idxprom95, !dbg !1955
  %49 = load i32, i32* %i, align 4, !dbg !1956
  %idxprom97 = sext i32 %49 to i64, !dbg !1957
  %arrayidx98 = getelementptr inbounds [8 x [77 x [2 x i16]]], [8 x [77 x [2 x i16]]]* @x8_ac1_lowquant_table, i64 0, i64 %idxprom97, !dbg !1957
  %arrayidx99 = getelementptr inbounds [77 x [2 x i16]], [77 x [2 x i16]]* %arrayidx98, i64 0, i64 0, !dbg !1957
  %arrayidx100 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx99, i64 0, i64 1, !dbg !1957
  %50 = bitcast i16* %arrayidx100 to i8*, !dbg !1958
  %51 = load i32, i32* %i, align 4, !dbg !1959
  %idxprom101 = sext i32 %51 to i64, !dbg !1960
  %arrayidx102 = getelementptr inbounds [8 x [77 x [2 x i16]]], [8 x [77 x [2 x i16]]]* @x8_ac1_lowquant_table, i64 0, i64 %idxprom101, !dbg !1960
  %arrayidx103 = getelementptr inbounds [77 x [2 x i16]], [77 x [2 x i16]]* %arrayidx102, i64 0, i64 0, !dbg !1960
  %arrayidx104 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx103, i64 0, i64 0, !dbg !1960
  %52 = bitcast i16* %arrayidx104 to i8*, !dbg !1961
  %call105 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx96, i32 9, i32 77, i8* %50, i32 4, i32 2, i8* %52, i32 4, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !1962
  br label %do.end106, !dbg !1963

do.end106:                                        ; preds = %do.body78
  br label %for.inc, !dbg !1964

for.inc:                                          ; preds = %do.end106
  %53 = load i32, i32* %i, align 4, !dbg !1965
  %inc107 = add nsw i32 %53, 1, !dbg !1965
  store i32 %inc107, i32* %i, align 4, !dbg !1965
  br label %for.cond, !dbg !1967, !llvm.loop !1968

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !1970
  br label %for.cond108, !dbg !1972

for.cond108:                                      ; preds = %for.inc170, %for.end
  %54 = load i32, i32* %i, align 4, !dbg !1973
  %cmp109 = icmp slt i32 %54, 8, !dbg !1976
  br i1 %cmp109, label %for.body111, label %for.end172, !dbg !1977

for.body111:                                      ; preds = %for.cond108
  br label %do.body112, !dbg !1978, !llvm.loop !1980

do.body112:                                       ; preds = %for.body111
  %55 = load i32, i32* %offset, align 4, !dbg !1981
  %idxprom113 = sext i32 %55 to i64, !dbg !1984
  %arrayidx114 = getelementptr inbounds [28150 x [2 x i16]], [28150 x [2 x i16]]* @x8_vlc_init.table, i64 0, i64 %idxprom113, !dbg !1984
  %56 = load i32, i32* %i, align 4, !dbg !1985
  %idxprom115 = sext i32 %56 to i64, !dbg !1986
  %arrayidx116 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* @j_dc_vlc, i64 0, i64 0), i64 0, i64 %idxprom115, !dbg !1986
  %table117 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx116, i32 0, i32 1, !dbg !1987
  store [2 x i16]* %arrayidx114, [2 x i16]** %table117, align 8, !dbg !1988
  %57 = load i32, i32* %sizeidx, align 4, !dbg !1989
  %idxprom118 = sext i32 %57 to i64, !dbg !1990
  %arrayidx119 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom118, !dbg !1990
  %58 = load i16, i16* %arrayidx119, align 2, !dbg !1990
  %conv120 = zext i16 %58 to i32, !dbg !1990
  %59 = load i32, i32* %i, align 4, !dbg !1991
  %idxprom121 = sext i32 %59 to i64, !dbg !1992
  %arrayidx122 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* @j_dc_vlc, i64 0, i64 0), i64 0, i64 %idxprom121, !dbg !1992
  %table_allocated123 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx122, i32 0, i32 3, !dbg !1993
  store i32 %conv120, i32* %table_allocated123, align 4, !dbg !1994
  %60 = load i32, i32* %sizeidx, align 4, !dbg !1995
  %inc124 = add nsw i32 %60, 1, !dbg !1995
  store i32 %inc124, i32* %sizeidx, align 4, !dbg !1995
  %idxprom125 = sext i32 %60 to i64, !dbg !1996
  %arrayidx126 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom125, !dbg !1996
  %61 = load i16, i16* %arrayidx126, align 2, !dbg !1996
  %conv127 = zext i16 %61 to i32, !dbg !1996
  %62 = load i32, i32* %offset, align 4, !dbg !1997
  %add128 = add nsw i32 %62, %conv127, !dbg !1997
  store i32 %add128, i32* %offset, align 4, !dbg !1997
  %63 = load i32, i32* %i, align 4, !dbg !1998
  %idxprom129 = sext i32 %63 to i64, !dbg !1999
  %arrayidx130 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* @j_dc_vlc, i64 0, i64 0), i64 0, i64 %idxprom129, !dbg !1999
  %64 = load i32, i32* %i, align 4, !dbg !2000
  %idxprom131 = sext i32 %64 to i64, !dbg !2001
  %arrayidx132 = getelementptr inbounds [8 x [34 x [2 x i16]]], [8 x [34 x [2 x i16]]]* @x8_dc_highquant_table, i64 0, i64 %idxprom131, !dbg !2001
  %arrayidx133 = getelementptr inbounds [34 x [2 x i16]], [34 x [2 x i16]]* %arrayidx132, i64 0, i64 0, !dbg !2001
  %arrayidx134 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx133, i64 0, i64 1, !dbg !2001
  %65 = bitcast i16* %arrayidx134 to i8*, !dbg !2002
  %66 = load i32, i32* %i, align 4, !dbg !2003
  %idxprom135 = sext i32 %66 to i64, !dbg !2004
  %arrayidx136 = getelementptr inbounds [8 x [34 x [2 x i16]]], [8 x [34 x [2 x i16]]]* @x8_dc_highquant_table, i64 0, i64 %idxprom135, !dbg !2004
  %arrayidx137 = getelementptr inbounds [34 x [2 x i16]], [34 x [2 x i16]]* %arrayidx136, i64 0, i64 0, !dbg !2004
  %arrayidx138 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx137, i64 0, i64 0, !dbg !2004
  %67 = bitcast i16* %arrayidx138 to i8*, !dbg !2005
  %call139 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx130, i32 9, i32 34, i8* %65, i32 4, i32 2, i8* %67, i32 4, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !2006
  br label %do.end140, !dbg !2007

do.end140:                                        ; preds = %do.body112
  br label %do.body141, !dbg !2008, !llvm.loop !2009

do.body141:                                       ; preds = %do.end140
  %68 = load i32, i32* %offset, align 4, !dbg !2010
  %idxprom142 = sext i32 %68 to i64, !dbg !2013
  %arrayidx143 = getelementptr inbounds [28150 x [2 x i16]], [28150 x [2 x i16]]* @x8_vlc_init.table, i64 0, i64 %idxprom142, !dbg !2013
  %69 = load i32, i32* %i, align 4, !dbg !2014
  %idxprom144 = sext i32 %69 to i64, !dbg !2015
  %arrayidx145 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* @j_dc_vlc, i64 0, i64 1), i64 0, i64 %idxprom144, !dbg !2015
  %table146 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx145, i32 0, i32 1, !dbg !2016
  store [2 x i16]* %arrayidx143, [2 x i16]** %table146, align 8, !dbg !2017
  %70 = load i32, i32* %sizeidx, align 4, !dbg !2018
  %idxprom147 = sext i32 %70 to i64, !dbg !2019
  %arrayidx148 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom147, !dbg !2019
  %71 = load i16, i16* %arrayidx148, align 2, !dbg !2019
  %conv149 = zext i16 %71 to i32, !dbg !2019
  %72 = load i32, i32* %i, align 4, !dbg !2020
  %idxprom150 = sext i32 %72 to i64, !dbg !2021
  %arrayidx151 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* @j_dc_vlc, i64 0, i64 1), i64 0, i64 %idxprom150, !dbg !2021
  %table_allocated152 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx151, i32 0, i32 3, !dbg !2022
  store i32 %conv149, i32* %table_allocated152, align 4, !dbg !2023
  %73 = load i32, i32* %sizeidx, align 4, !dbg !2024
  %inc153 = add nsw i32 %73, 1, !dbg !2024
  store i32 %inc153, i32* %sizeidx, align 4, !dbg !2024
  %idxprom154 = sext i32 %73 to i64, !dbg !2025
  %arrayidx155 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom154, !dbg !2025
  %74 = load i16, i16* %arrayidx155, align 2, !dbg !2025
  %conv156 = zext i16 %74 to i32, !dbg !2025
  %75 = load i32, i32* %offset, align 4, !dbg !2026
  %add157 = add nsw i32 %75, %conv156, !dbg !2026
  store i32 %add157, i32* %offset, align 4, !dbg !2026
  %76 = load i32, i32* %i, align 4, !dbg !2027
  %idxprom158 = sext i32 %76 to i64, !dbg !2028
  %arrayidx159 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* getelementptr inbounds ([2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* @j_dc_vlc, i64 0, i64 1), i64 0, i64 %idxprom158, !dbg !2028
  %77 = load i32, i32* %i, align 4, !dbg !2029
  %idxprom160 = sext i32 %77 to i64, !dbg !2030
  %arrayidx161 = getelementptr inbounds [8 x [34 x [2 x i16]]], [8 x [34 x [2 x i16]]]* @x8_dc_lowquant_table, i64 0, i64 %idxprom160, !dbg !2030
  %arrayidx162 = getelementptr inbounds [34 x [2 x i16]], [34 x [2 x i16]]* %arrayidx161, i64 0, i64 0, !dbg !2030
  %arrayidx163 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx162, i64 0, i64 1, !dbg !2030
  %78 = bitcast i16* %arrayidx163 to i8*, !dbg !2031
  %79 = load i32, i32* %i, align 4, !dbg !2032
  %idxprom164 = sext i32 %79 to i64, !dbg !2033
  %arrayidx165 = getelementptr inbounds [8 x [34 x [2 x i16]]], [8 x [34 x [2 x i16]]]* @x8_dc_lowquant_table, i64 0, i64 %idxprom164, !dbg !2033
  %arrayidx166 = getelementptr inbounds [34 x [2 x i16]], [34 x [2 x i16]]* %arrayidx165, i64 0, i64 0, !dbg !2033
  %arrayidx167 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx166, i64 0, i64 0, !dbg !2033
  %80 = bitcast i16* %arrayidx167 to i8*, !dbg !2034
  %call168 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx159, i32 9, i32 34, i8* %78, i32 4, i32 2, i8* %80, i32 4, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !2035
  br label %do.end169, !dbg !2036

do.end169:                                        ; preds = %do.body141
  br label %for.inc170, !dbg !2037

for.inc170:                                       ; preds = %do.end169
  %81 = load i32, i32* %i, align 4, !dbg !2038
  %inc171 = add nsw i32 %81, 1, !dbg !2038
  store i32 %inc171, i32* %i, align 4, !dbg !2038
  br label %for.cond108, !dbg !2040, !llvm.loop !2041

for.end172:                                       ; preds = %for.cond108
  store i32 0, i32* %i, align 4, !dbg !2043
  br label %for.cond173, !dbg !2045

for.cond173:                                      ; preds = %for.inc206, %for.end172
  %82 = load i32, i32* %i, align 4, !dbg !2046
  %cmp174 = icmp slt i32 %82, 2, !dbg !2049
  br i1 %cmp174, label %for.body176, label %for.end208, !dbg !2050

for.body176:                                      ; preds = %for.cond173
  br label %do.body177, !dbg !2051, !llvm.loop !2052

do.body177:                                       ; preds = %for.body176
  %83 = load i32, i32* %offset, align 4, !dbg !2053
  %idxprom178 = sext i32 %83 to i64, !dbg !2056
  %arrayidx179 = getelementptr inbounds [28150 x [2 x i16]], [28150 x [2 x i16]]* @x8_vlc_init.table, i64 0, i64 %idxprom178, !dbg !2056
  %84 = load i32, i32* %i, align 4, !dbg !2057
  %idxprom180 = sext i32 %84 to i64, !dbg !2058
  %arrayidx181 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* getelementptr inbounds ([2 x [4 x %struct.VLC]], [2 x [4 x %struct.VLC]]* @j_orient_vlc, i64 0, i64 0), i64 0, i64 %idxprom180, !dbg !2058
  %table182 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx181, i32 0, i32 1, !dbg !2059
  store [2 x i16]* %arrayidx179, [2 x i16]** %table182, align 8, !dbg !2060
  %85 = load i32, i32* %sizeidx, align 4, !dbg !2061
  %idxprom183 = sext i32 %85 to i64, !dbg !2062
  %arrayidx184 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom183, !dbg !2062
  %86 = load i16, i16* %arrayidx184, align 2, !dbg !2062
  %conv185 = zext i16 %86 to i32, !dbg !2062
  %87 = load i32, i32* %i, align 4, !dbg !2063
  %idxprom186 = sext i32 %87 to i64, !dbg !2064
  %arrayidx187 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* getelementptr inbounds ([2 x [4 x %struct.VLC]], [2 x [4 x %struct.VLC]]* @j_orient_vlc, i64 0, i64 0), i64 0, i64 %idxprom186, !dbg !2064
  %table_allocated188 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx187, i32 0, i32 3, !dbg !2065
  store i32 %conv185, i32* %table_allocated188, align 4, !dbg !2066
  %88 = load i32, i32* %sizeidx, align 4, !dbg !2067
  %inc189 = add nsw i32 %88, 1, !dbg !2067
  store i32 %inc189, i32* %sizeidx, align 4, !dbg !2067
  %idxprom190 = sext i32 %88 to i64, !dbg !2068
  %arrayidx191 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom190, !dbg !2068
  %89 = load i16, i16* %arrayidx191, align 2, !dbg !2068
  %conv192 = zext i16 %89 to i32, !dbg !2068
  %90 = load i32, i32* %offset, align 4, !dbg !2069
  %add193 = add nsw i32 %90, %conv192, !dbg !2069
  store i32 %add193, i32* %offset, align 4, !dbg !2069
  %91 = load i32, i32* %i, align 4, !dbg !2070
  %idxprom194 = sext i32 %91 to i64, !dbg !2071
  %arrayidx195 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* getelementptr inbounds ([2 x [4 x %struct.VLC]], [2 x [4 x %struct.VLC]]* @j_orient_vlc, i64 0, i64 0), i64 0, i64 %idxprom194, !dbg !2071
  %92 = load i32, i32* %i, align 4, !dbg !2072
  %idxprom196 = sext i32 %92 to i64, !dbg !2073
  %arrayidx197 = getelementptr inbounds [2 x [12 x [2 x i16]]], [2 x [12 x [2 x i16]]]* @x8_orient_highquant_table, i64 0, i64 %idxprom196, !dbg !2073
  %arrayidx198 = getelementptr inbounds [12 x [2 x i16]], [12 x [2 x i16]]* %arrayidx197, i64 0, i64 0, !dbg !2073
  %arrayidx199 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx198, i64 0, i64 1, !dbg !2073
  %93 = bitcast i16* %arrayidx199 to i8*, !dbg !2074
  %94 = load i32, i32* %i, align 4, !dbg !2075
  %idxprom200 = sext i32 %94 to i64, !dbg !2076
  %arrayidx201 = getelementptr inbounds [2 x [12 x [2 x i16]]], [2 x [12 x [2 x i16]]]* @x8_orient_highquant_table, i64 0, i64 %idxprom200, !dbg !2076
  %arrayidx202 = getelementptr inbounds [12 x [2 x i16]], [12 x [2 x i16]]* %arrayidx201, i64 0, i64 0, !dbg !2076
  %arrayidx203 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx202, i64 0, i64 0, !dbg !2076
  %95 = bitcast i16* %arrayidx203 to i8*, !dbg !2077
  %call204 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx195, i32 7, i32 12, i8* %93, i32 4, i32 2, i8* %95, i32 4, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !2078
  br label %do.end205, !dbg !2079

do.end205:                                        ; preds = %do.body177
  br label %for.inc206, !dbg !2080

for.inc206:                                       ; preds = %do.end205
  %96 = load i32, i32* %i, align 4, !dbg !2082
  %inc207 = add nsw i32 %96, 1, !dbg !2082
  store i32 %inc207, i32* %i, align 4, !dbg !2082
  br label %for.cond173, !dbg !2084, !llvm.loop !2085

for.end208:                                       ; preds = %for.cond173
  store i32 0, i32* %i, align 4, !dbg !2087
  br label %for.cond209, !dbg !2089

for.cond209:                                      ; preds = %for.inc242, %for.end208
  %97 = load i32, i32* %i, align 4, !dbg !2090
  %cmp210 = icmp slt i32 %97, 4, !dbg !2093
  br i1 %cmp210, label %for.body212, label %for.end244, !dbg !2094

for.body212:                                      ; preds = %for.cond209
  br label %do.body213, !dbg !2095, !llvm.loop !2096

do.body213:                                       ; preds = %for.body212
  %98 = load i32, i32* %offset, align 4, !dbg !2097
  %idxprom214 = sext i32 %98 to i64, !dbg !2100
  %arrayidx215 = getelementptr inbounds [28150 x [2 x i16]], [28150 x [2 x i16]]* @x8_vlc_init.table, i64 0, i64 %idxprom214, !dbg !2100
  %99 = load i32, i32* %i, align 4, !dbg !2101
  %idxprom216 = sext i32 %99 to i64, !dbg !2102
  %arrayidx217 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* getelementptr inbounds ([2 x [4 x %struct.VLC]], [2 x [4 x %struct.VLC]]* @j_orient_vlc, i64 0, i64 1), i64 0, i64 %idxprom216, !dbg !2102
  %table218 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx217, i32 0, i32 1, !dbg !2103
  store [2 x i16]* %arrayidx215, [2 x i16]** %table218, align 8, !dbg !2104
  %100 = load i32, i32* %sizeidx, align 4, !dbg !2105
  %idxprom219 = sext i32 %100 to i64, !dbg !2106
  %arrayidx220 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom219, !dbg !2106
  %101 = load i16, i16* %arrayidx220, align 2, !dbg !2106
  %conv221 = zext i16 %101 to i32, !dbg !2106
  %102 = load i32, i32* %i, align 4, !dbg !2107
  %idxprom222 = sext i32 %102 to i64, !dbg !2108
  %arrayidx223 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* getelementptr inbounds ([2 x [4 x %struct.VLC]], [2 x [4 x %struct.VLC]]* @j_orient_vlc, i64 0, i64 1), i64 0, i64 %idxprom222, !dbg !2108
  %table_allocated224 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx223, i32 0, i32 3, !dbg !2109
  store i32 %conv221, i32* %table_allocated224, align 4, !dbg !2110
  %103 = load i32, i32* %sizeidx, align 4, !dbg !2111
  %inc225 = add nsw i32 %103, 1, !dbg !2111
  store i32 %inc225, i32* %sizeidx, align 4, !dbg !2111
  %idxprom226 = sext i32 %103 to i64, !dbg !2112
  %arrayidx227 = getelementptr inbounds [54 x i16], [54 x i16]* @x8_vlc_init.sizes, i64 0, i64 %idxprom226, !dbg !2112
  %104 = load i16, i16* %arrayidx227, align 2, !dbg !2112
  %conv228 = zext i16 %104 to i32, !dbg !2112
  %105 = load i32, i32* %offset, align 4, !dbg !2113
  %add229 = add nsw i32 %105, %conv228, !dbg !2113
  store i32 %add229, i32* %offset, align 4, !dbg !2113
  %106 = load i32, i32* %i, align 4, !dbg !2114
  %idxprom230 = sext i32 %106 to i64, !dbg !2115
  %arrayidx231 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* getelementptr inbounds ([2 x [4 x %struct.VLC]], [2 x [4 x %struct.VLC]]* @j_orient_vlc, i64 0, i64 1), i64 0, i64 %idxprom230, !dbg !2115
  %107 = load i32, i32* %i, align 4, !dbg !2116
  %idxprom232 = sext i32 %107 to i64, !dbg !2117
  %arrayidx233 = getelementptr inbounds [4 x [12 x [2 x i16]]], [4 x [12 x [2 x i16]]]* @x8_orient_lowquant_table, i64 0, i64 %idxprom232, !dbg !2117
  %arrayidx234 = getelementptr inbounds [12 x [2 x i16]], [12 x [2 x i16]]* %arrayidx233, i64 0, i64 0, !dbg !2117
  %arrayidx235 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx234, i64 0, i64 1, !dbg !2117
  %108 = bitcast i16* %arrayidx235 to i8*, !dbg !2118
  %109 = load i32, i32* %i, align 4, !dbg !2119
  %idxprom236 = sext i32 %109 to i64, !dbg !2120
  %arrayidx237 = getelementptr inbounds [4 x [12 x [2 x i16]]], [4 x [12 x [2 x i16]]]* @x8_orient_lowquant_table, i64 0, i64 %idxprom236, !dbg !2120
  %arrayidx238 = getelementptr inbounds [12 x [2 x i16]], [12 x [2 x i16]]* %arrayidx237, i64 0, i64 0, !dbg !2120
  %arrayidx239 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx238, i64 0, i64 0, !dbg !2120
  %110 = bitcast i16* %arrayidx239 to i8*, !dbg !2121
  %call240 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx231, i32 7, i32 12, i8* %108, i32 4, i32 2, i8* %110, i32 4, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !2122
  br label %do.end241, !dbg !2123

do.end241:                                        ; preds = %do.body213
  br label %for.inc242, !dbg !2124

for.inc242:                                       ; preds = %do.end241
  %111 = load i32, i32* %i, align 4, !dbg !2126
  %inc243 = add nsw i32 %111, 1, !dbg !2126
  store i32 %inc243, i32* %i, align 4, !dbg !2126
  br label %for.cond209, !dbg !2128, !llvm.loop !2129

for.end244:                                       ; preds = %for.cond209
  %112 = load i32, i32* %offset, align 4, !dbg !2131
  %conv245 = sext i32 %112 to i64, !dbg !2131
  %cmp246 = icmp ne i64 %conv245, 28150, !dbg !2133
  br i1 %cmp246, label %if.then, label %if.end, !dbg !2134

if.then:                                          ; preds = %for.end244
  %113 = load i32, i32* %offset, align 4, !dbg !2135
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i32 0, i32 0), i64 28150, i32 %113), !dbg !2137
  store i32 -1094995529, i32* %retval, align 4, !dbg !2138
  br label %return, !dbg !2138

if.end:                                           ; preds = %for.end244
  store i32 0, i32* %retval, align 4, !dbg !2139
  br label %return, !dbg !2139

return:                                           ; preds = %if.end, %if.then
  %114 = load i32, i32* %retval, align 4, !dbg !2140
  ret i32 %114, !dbg !2140
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

declare noalias i8* @av_mallocz(i64) #3

declare void @ff_wmv2dsp_init(%struct.WMV2DSPContext*) #3

declare void @ff_init_scantable_permutation(i8*, i32) #3

declare void @ff_init_scantable(i8*, %struct.ScanTable*, i8*) #3

declare void @ff_intrax8dsp_init(%struct.IntraX8DSPContext*) #3

declare void @ff_blockdsp_init(%struct.BlockDSPContext*, %struct.AVCodecContext*) #3

; Function Attrs: cold nounwind optsize uwtable
define void @ff_intrax8_common_end(%struct.IntraX8Context* %w) #0 !dbg !2141 {
entry:
  %w.addr = alloca %struct.IntraX8Context*, align 8
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !2144, metadata !1740), !dbg !2145
  %0 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2146
  %prediction_table = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %0, i32 0, i32 4, !dbg !2147
  %1 = bitcast i8** %prediction_table to i8*, !dbg !2148
  call void @av_freep(i8* %1), !dbg !2149
  ret void, !dbg !2150
}

declare void @av_freep(i8*) #3

; Function Attrs: nounwind uwtable
define i32 @ff_intrax8_decode_picture(%struct.IntraX8Context* %w, %struct.Picture* %pict, %struct.GetBitContext* %gb, i32* %mb_x, i32* %mb_y, i32 %dquant, i32 %quant_offset, i32 %loopfilter, i32 %lowdelay) #4 !dbg !2151 {
entry:
  %w.addr = alloca %struct.IntraX8Context*, align 8
  %pict.addr = alloca %struct.Picture*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %mb_x.addr = alloca i32*, align 8
  %mb_y.addr = alloca i32*, align 8
  %dquant.addr = alloca i32, align 4
  %quant_offset.addr = alloca i32, align 4
  %loopfilter.addr = alloca i32, align 4
  %lowdelay.addr = alloca i32, align 4
  %mb_xy = alloca i32, align 4
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !2202, metadata !1740), !dbg !2203
  store %struct.Picture* %pict, %struct.Picture** %pict.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Picture** %pict.addr, metadata !2204, metadata !1740), !dbg !2205
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !2206, metadata !1740), !dbg !2207
  store i32* %mb_x, i32** %mb_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mb_x.addr, metadata !2208, metadata !1740), !dbg !2209
  store i32* %mb_y, i32** %mb_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mb_y.addr, metadata !2210, metadata !1740), !dbg !2211
  store i32 %dquant, i32* %dquant.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dquant.addr, metadata !2212, metadata !1740), !dbg !2213
  store i32 %quant_offset, i32* %quant_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quant_offset.addr, metadata !2214, metadata !1740), !dbg !2215
  store i32 %loopfilter, i32* %loopfilter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %loopfilter.addr, metadata !2216, metadata !1740), !dbg !2217
  store i32 %lowdelay, i32* %lowdelay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lowdelay.addr, metadata !2218, metadata !1740), !dbg !2219
  call void @llvm.dbg.declare(metadata i32* %mb_xy, metadata !2220, metadata !1740), !dbg !2221
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2222
  %1 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2223
  %gb1 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %1, i32 0, i32 19, !dbg !2224
  store %struct.GetBitContext* %0, %struct.GetBitContext** %gb1, align 8, !dbg !2225
  %2 = load i32, i32* %dquant.addr, align 4, !dbg !2226
  %3 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2227
  %dquant2 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %3, i32 0, i32 15, !dbg !2228
  store i32 %2, i32* %dquant2, align 4, !dbg !2229
  %4 = load i32, i32* %dquant.addr, align 4, !dbg !2230
  %shr = ashr i32 %4, 1, !dbg !2231
  %5 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2232
  %quant = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %5, i32 0, i32 14, !dbg !2233
  store i32 %shr, i32* %quant, align 8, !dbg !2234
  %6 = load i32, i32* %quant_offset.addr, align 4, !dbg !2235
  %7 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2236
  %qsum = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %7, i32 0, i32 16, !dbg !2237
  store i32 %6, i32* %qsum, align 8, !dbg !2238
  %8 = load %struct.Picture*, %struct.Picture** %pict.addr, align 8, !dbg !2239
  %f = getelementptr inbounds %struct.Picture, %struct.Picture* %8, i32 0, i32 0, !dbg !2240
  %9 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !2240
  %10 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2241
  %frame = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %10, i32 0, i32 18, !dbg !2242
  store %struct.AVFrame* %9, %struct.AVFrame** %frame, align 8, !dbg !2243
  %11 = load i32, i32* %loopfilter.addr, align 4, !dbg !2244
  %12 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2245
  %loopfilter3 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %12, i32 0, i32 17, !dbg !2246
  store i32 %11, i32* %loopfilter3, align 4, !dbg !2247
  %13 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2248
  %gb4 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %13, i32 0, i32 19, !dbg !2249
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb4, align 8, !dbg !2249
  %call = call i32 @get_bits1(%struct.GetBitContext* %14), !dbg !2250
  %15 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2251
  %use_quant_matrix = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %15, i32 0, i32 3, !dbg !2252
  store i32 %call, i32* %use_quant_matrix, align 8, !dbg !2253
  %16 = load i32*, i32** %mb_x.addr, align 8, !dbg !2254
  %17 = load i32, i32* %16, align 4, !dbg !2255
  %18 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2256
  %mb_x5 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %18, i32 0, i32 32, !dbg !2257
  store i32 %17, i32* %mb_x5, align 8, !dbg !2258
  %19 = load i32*, i32** %mb_y.addr, align 8, !dbg !2259
  %20 = load i32, i32* %19, align 4, !dbg !2260
  %21 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2261
  %mb_y6 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %21, i32 0, i32 33, !dbg !2262
  store i32 %20, i32* %mb_y6, align 4, !dbg !2263
  %22 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2264
  %quant7 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %22, i32 0, i32 14, !dbg !2265
  %23 = load i32, i32* %quant7, align 8, !dbg !2265
  %shr8 = ashr i32 %23, 1, !dbg !2266
  %add = add nsw i32 65536, %shr8, !dbg !2267
  %24 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2268
  %quant9 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %24, i32 0, i32 14, !dbg !2269
  %25 = load i32, i32* %quant9, align 8, !dbg !2269
  %div = sdiv i32 %add, %25, !dbg !2270
  %26 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2271
  %divide_quant_dc_luma = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %26, i32 0, i32 21, !dbg !2272
  store i32 %div, i32* %divide_quant_dc_luma, align 4, !dbg !2273
  %27 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2274
  %quant10 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %27, i32 0, i32 14, !dbg !2276
  %28 = load i32, i32* %quant10, align 8, !dbg !2276
  %cmp = icmp slt i32 %28, 5, !dbg !2277
  br i1 %cmp, label %if.then, label %if.else, !dbg !2278

if.then:                                          ; preds = %entry
  %29 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2279
  %quant11 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %29, i32 0, i32 14, !dbg !2281
  %30 = load i32, i32* %quant11, align 8, !dbg !2281
  %31 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2282
  %quant_dc_chroma = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %31, i32 0, i32 20, !dbg !2283
  store i32 %30, i32* %quant_dc_chroma, align 8, !dbg !2284
  %32 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2285
  %divide_quant_dc_luma12 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %32, i32 0, i32 21, !dbg !2286
  %33 = load i32, i32* %divide_quant_dc_luma12, align 4, !dbg !2286
  %34 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2287
  %divide_quant_dc_chroma = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %34, i32 0, i32 22, !dbg !2288
  store i32 %33, i32* %divide_quant_dc_chroma, align 8, !dbg !2289
  br label %if.end, !dbg !2290

if.else:                                          ; preds = %entry
  %35 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2291
  %quant13 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %35, i32 0, i32 14, !dbg !2293
  %36 = load i32, i32* %quant13, align 8, !dbg !2293
  %37 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2294
  %quant14 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %37, i32 0, i32 14, !dbg !2295
  %38 = load i32, i32* %quant14, align 8, !dbg !2295
  %add15 = add nsw i32 %38, 3, !dbg !2296
  %shr16 = ashr i32 %add15, 3, !dbg !2297
  %add17 = add nsw i32 %36, %shr16, !dbg !2298
  %39 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2299
  %quant_dc_chroma18 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %39, i32 0, i32 20, !dbg !2300
  store i32 %add17, i32* %quant_dc_chroma18, align 8, !dbg !2301
  %40 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2302
  %quant_dc_chroma19 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %40, i32 0, i32 20, !dbg !2303
  %41 = load i32, i32* %quant_dc_chroma19, align 8, !dbg !2303
  %shr20 = ashr i32 %41, 1, !dbg !2304
  %add21 = add nsw i32 65536, %shr20, !dbg !2305
  %42 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2306
  %quant_dc_chroma22 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %42, i32 0, i32 20, !dbg !2307
  %43 = load i32, i32* %quant_dc_chroma22, align 8, !dbg !2307
  %div23 = sdiv i32 %add21, %43, !dbg !2308
  %44 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2309
  %divide_quant_dc_chroma24 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %44, i32 0, i32 22, !dbg !2310
  store i32 %div23, i32* %divide_quant_dc_chroma24, align 8, !dbg !2311
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %45 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2312
  call void @x8_reset_vlc_tables(%struct.IntraX8Context* %45), !dbg !2313
  %46 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2314
  %mb_y25 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %46, i32 0, i32 33, !dbg !2316
  store i32 0, i32* %mb_y25, align 4, !dbg !2317
  br label %for.cond, !dbg !2314

for.cond:                                         ; preds = %for.inc82, %if.end
  %47 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2318
  %mb_y26 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %47, i32 0, i32 33, !dbg !2321
  %48 = load i32, i32* %mb_y26, align 4, !dbg !2321
  %49 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2322
  %mb_height = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %49, i32 0, i32 35, !dbg !2323
  %50 = load i32, i32* %mb_height, align 4, !dbg !2323
  %mul = mul nsw i32 %50, 2, !dbg !2324
  %cmp27 = icmp slt i32 %48, %mul, !dbg !2325
  br i1 %cmp27, label %for.body, label %for.end85, !dbg !2326

for.body:                                         ; preds = %for.cond
  %51 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2327
  %52 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2329
  %frame28 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %52, i32 0, i32 18, !dbg !2330
  %53 = load %struct.AVFrame*, %struct.AVFrame** %frame28, align 8, !dbg !2330
  call void @x8_init_block_index(%struct.IntraX8Context* %51, %struct.AVFrame* %53), !dbg !2331
  %54 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2332
  %mb_y29 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %54, i32 0, i32 33, !dbg !2333
  %55 = load i32, i32* %mb_y29, align 4, !dbg !2333
  %shr30 = ashr i32 %55, 1, !dbg !2334
  %56 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2335
  %mb_width = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %56, i32 0, i32 34, !dbg !2336
  %57 = load i32, i32* %mb_width, align 8, !dbg !2336
  %add31 = add nsw i32 %57, 1, !dbg !2337
  %mul32 = mul nsw i32 %shr30, %add31, !dbg !2338
  store i32 %mul32, i32* %mb_xy, align 4, !dbg !2339
  %58 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2340
  %mb_x33 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %58, i32 0, i32 32, !dbg !2342
  store i32 0, i32* %mb_x33, align 8, !dbg !2343
  br label %for.cond34, !dbg !2340

for.cond34:                                       ; preds = %for.inc, %for.body
  %59 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2344
  %mb_x35 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %59, i32 0, i32 32, !dbg !2347
  %60 = load i32, i32* %mb_x35, align 8, !dbg !2347
  %61 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2348
  %mb_width36 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %61, i32 0, i32 34, !dbg !2349
  %62 = load i32, i32* %mb_width36, align 8, !dbg !2349
  %mul37 = mul nsw i32 %62, 2, !dbg !2350
  %cmp38 = icmp slt i32 %60, %mul37, !dbg !2351
  br i1 %cmp38, label %for.body39, label %for.end, !dbg !2352

for.body39:                                       ; preds = %for.cond34
  %63 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2353
  call void @x8_get_prediction(%struct.IntraX8Context* %63), !dbg !2355
  %64 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2356
  %call40 = call i32 @x8_setup_spatial_predictor(%struct.IntraX8Context* %64, i32 0), !dbg !2358
  %tobool = icmp ne i32 %call40, 0, !dbg !2358
  br i1 %tobool, label %if.then41, label %if.end42, !dbg !2359

if.then41:                                        ; preds = %for.body39
  br label %error, !dbg !2360

if.end42:                                         ; preds = %for.body39
  %65 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2361
  %call43 = call i32 @x8_decode_intra_mb(%struct.IntraX8Context* %65, i32 0), !dbg !2363
  %tobool44 = icmp ne i32 %call43, 0, !dbg !2363
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !2364

if.then45:                                        ; preds = %if.end42
  br label %error, !dbg !2365

if.end46:                                         ; preds = %if.end42
  %66 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2366
  %mb_x47 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %66, i32 0, i32 32, !dbg !2368
  %67 = load i32, i32* %mb_x47, align 8, !dbg !2368
  %68 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2369
  %mb_y48 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %68, i32 0, i32 33, !dbg !2370
  %69 = load i32, i32* %mb_y48, align 4, !dbg !2370
  %and = and i32 %67, %69, !dbg !2371
  %and49 = and i32 %and, 1, !dbg !2372
  %tobool50 = icmp ne i32 %and49, 0, !dbg !2372
  br i1 %tobool50, label %if.then51, label %if.end67, !dbg !2373

if.then51:                                        ; preds = %if.end46
  %70 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2374
  call void @x8_get_prediction_chroma(%struct.IntraX8Context* %70), !dbg !2376
  %71 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2377
  %call52 = call i32 @x8_setup_spatial_predictor(%struct.IntraX8Context* %71, i32 1), !dbg !2378
  %72 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2379
  %call53 = call i32 @x8_decode_intra_mb(%struct.IntraX8Context* %72, i32 1), !dbg !2381
  %tobool54 = icmp ne i32 %call53, 0, !dbg !2381
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !2382

if.then55:                                        ; preds = %if.then51
  br label %error, !dbg !2383

if.end56:                                         ; preds = %if.then51
  %73 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2384
  %call57 = call i32 @x8_setup_spatial_predictor(%struct.IntraX8Context* %73, i32 2), !dbg !2385
  %74 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2386
  %call58 = call i32 @x8_decode_intra_mb(%struct.IntraX8Context* %74, i32 2), !dbg !2388
  %tobool59 = icmp ne i32 %call58, 0, !dbg !2388
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !2389

if.then60:                                        ; preds = %if.end56
  br label %error, !dbg !2390

if.end61:                                         ; preds = %if.end56
  %75 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2391
  %dest = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %75, i32 0, i32 23, !dbg !2392
  %arrayidx = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest, i64 0, i64 1, !dbg !2391
  %76 = load i8*, i8** %arrayidx, align 8, !dbg !2393
  %add.ptr = getelementptr inbounds i8, i8* %76, i64 8, !dbg !2393
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !2393
  %77 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2394
  %dest62 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %77, i32 0, i32 23, !dbg !2395
  %arrayidx63 = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest62, i64 0, i64 2, !dbg !2394
  %78 = load i8*, i8** %arrayidx63, align 8, !dbg !2396
  %add.ptr64 = getelementptr inbounds i8, i8* %78, i64 8, !dbg !2396
  store i8* %add.ptr64, i8** %arrayidx63, align 8, !dbg !2396
  %79 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2397
  %quant65 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %79, i32 0, i32 14, !dbg !2398
  %80 = load i32, i32* %quant65, align 8, !dbg !2398
  %conv = trunc i32 %80 to i8, !dbg !2397
  %81 = load i32, i32* %mb_xy, align 4, !dbg !2399
  %idxprom = sext i32 %81 to i64, !dbg !2400
  %82 = load %struct.Picture*, %struct.Picture** %pict.addr, align 8, !dbg !2400
  %qscale_table = getelementptr inbounds %struct.Picture, %struct.Picture* %82, i32 0, i32 3, !dbg !2401
  %83 = load i8*, i8** %qscale_table, align 8, !dbg !2401
  %arrayidx66 = getelementptr inbounds i8, i8* %83, i64 %idxprom, !dbg !2400
  store i8 %conv, i8* %arrayidx66, align 1, !dbg !2402
  %84 = load i32, i32* %mb_xy, align 4, !dbg !2403
  %inc = add nsw i32 %84, 1, !dbg !2403
  store i32 %inc, i32* %mb_xy, align 4, !dbg !2403
  br label %if.end67, !dbg !2404

if.end67:                                         ; preds = %if.end61, %if.end46
  %85 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2405
  %dest68 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %85, i32 0, i32 23, !dbg !2406
  %arrayidx69 = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest68, i64 0, i64 0, !dbg !2405
  %86 = load i8*, i8** %arrayidx69, align 8, !dbg !2407
  %add.ptr70 = getelementptr inbounds i8, i8* %86, i64 8, !dbg !2407
  store i8* %add.ptr70, i8** %arrayidx69, align 8, !dbg !2407
  br label %for.inc, !dbg !2408

for.inc:                                          ; preds = %if.end67
  %87 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2409
  %mb_x71 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %87, i32 0, i32 32, !dbg !2411
  %88 = load i32, i32* %mb_x71, align 8, !dbg !2412
  %inc72 = add nsw i32 %88, 1, !dbg !2412
  store i32 %inc72, i32* %mb_x71, align 8, !dbg !2412
  br label %for.cond34, !dbg !2413, !llvm.loop !2414

for.end:                                          ; preds = %for.cond34
  %89 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2416
  %mb_y73 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %89, i32 0, i32 33, !dbg !2418
  %90 = load i32, i32* %mb_y73, align 4, !dbg !2418
  %and74 = and i32 %90, 1, !dbg !2419
  %tobool75 = icmp ne i32 %and74, 0, !dbg !2419
  br i1 %tobool75, label %if.then76, label %if.end81, !dbg !2420

if.then76:                                        ; preds = %for.end
  %91 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2421
  %avctx = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %91, i32 0, i32 8, !dbg !2422
  %92 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !2422
  %93 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2423
  %frame77 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %93, i32 0, i32 18, !dbg !2424
  %94 = load %struct.AVFrame*, %struct.AVFrame** %frame77, align 8, !dbg !2424
  %95 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2425
  %frame78 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %95, i32 0, i32 18, !dbg !2426
  %96 = load %struct.AVFrame*, %struct.AVFrame** %frame78, align 8, !dbg !2426
  %97 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2427
  %mb_y79 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %97, i32 0, i32 33, !dbg !2428
  %98 = load i32, i32* %mb_y79, align 4, !dbg !2428
  %sub = sub nsw i32 %98, 1, !dbg !2429
  %mul80 = mul nsw i32 %sub, 8, !dbg !2430
  %99 = load i32, i32* %lowdelay.addr, align 4, !dbg !2431
  call void @ff_draw_horiz_band(%struct.AVCodecContext* %92, %struct.AVFrame* %94, %struct.AVFrame* %96, i32 %mul80, i32 16, i32 3, i32 0, i32 %99), !dbg !2432
  br label %if.end81, !dbg !2432

if.end81:                                         ; preds = %if.then76, %for.end
  br label %for.inc82, !dbg !2433

for.inc82:                                        ; preds = %if.end81
  %100 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2434
  %mb_y83 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %100, i32 0, i32 33, !dbg !2436
  %101 = load i32, i32* %mb_y83, align 4, !dbg !2437
  %inc84 = add nsw i32 %101, 1, !dbg !2437
  store i32 %inc84, i32* %mb_y83, align 4, !dbg !2437
  br label %for.cond, !dbg !2438, !llvm.loop !2439

for.end85:                                        ; preds = %for.cond
  br label %error, !dbg !2441

error:                                            ; preds = %for.end85, %if.then60, %if.then55, %if.then45, %if.then41
  %102 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2443
  %mb_x86 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %102, i32 0, i32 32, !dbg !2444
  %103 = load i32, i32* %mb_x86, align 8, !dbg !2444
  %104 = load i32*, i32** %mb_x.addr, align 8, !dbg !2445
  store i32 %103, i32* %104, align 4, !dbg !2446
  %105 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2447
  %mb_y87 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %105, i32 0, i32 33, !dbg !2448
  %106 = load i32, i32* %mb_y87, align 4, !dbg !2448
  %107 = load i32*, i32** %mb_y.addr, align 8, !dbg !2449
  store i32 %106, i32* %107, align 4, !dbg !2450
  ret i32 0, !dbg !2451
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #5 !dbg !2452 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2455, metadata !1740), !dbg !2456
  call void @llvm.dbg.declare(metadata i32* %index, metadata !2457, metadata !1740), !dbg !2458
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2459
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !2460
  %1 = load i32, i32* %index1, align 8, !dbg !2460
  store i32 %1, i32* %index, align 4, !dbg !2458
  call void @llvm.dbg.declare(metadata i8* %result, metadata !2461, metadata !1740), !dbg !2462
  %2 = load i32, i32* %index, align 4, !dbg !2463
  %shr = lshr i32 %2, 3, !dbg !2464
  %idxprom = zext i32 %shr to i64, !dbg !2465
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2465
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !2466
  %4 = load i8*, i8** %buffer, align 8, !dbg !2466
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !2465
  %5 = load i8, i8* %arrayidx, align 1, !dbg !2465
  store i8 %5, i8* %result, align 1, !dbg !2462
  %6 = load i32, i32* %index, align 4, !dbg !2467
  %and = and i32 %6, 7, !dbg !2468
  %7 = load i8, i8* %result, align 1, !dbg !2469
  %conv = zext i8 %7 to i32, !dbg !2469
  %shl = shl i32 %conv, %and, !dbg !2469
  %conv2 = trunc i32 %shl to i8, !dbg !2469
  store i8 %conv2, i8* %result, align 1, !dbg !2469
  %8 = load i8, i8* %result, align 1, !dbg !2470
  %conv3 = zext i8 %8 to i32, !dbg !2470
  %shr4 = ashr i32 %conv3, 7, !dbg !2470
  %conv5 = trunc i32 %shr4 to i8, !dbg !2470
  store i8 %conv5, i8* %result, align 1, !dbg !2470
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2471
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !2473
  %10 = load i32, i32* %index6, align 8, !dbg !2473
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2474
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !2475
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !2475
  %cmp = icmp slt i32 %10, %12, !dbg !2476
  br i1 %cmp, label %if.then, label %if.end, !dbg !2477

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !2478
  %inc = add i32 %13, 1, !dbg !2478
  store i32 %inc, i32* %index, align 4, !dbg !2478
  br label %if.end, !dbg !2479

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !2480
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2481
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !2482
  store i32 %14, i32* %index8, align 8, !dbg !2483
  %16 = load i8, i8* %result, align 1, !dbg !2484
  %conv9 = zext i8 %16 to i32, !dbg !2484
  ret i32 %conv9, !dbg !2485
}

; Function Attrs: nounwind uwtable
define internal void @x8_reset_vlc_tables(%struct.IntraX8Context* %w) #4 !dbg !2486 {
entry:
  %w.addr = alloca %struct.IntraX8Context*, align 8
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !2487, metadata !1740), !dbg !2488
  %0 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2489
  %j_dc_vlc = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %0, i32 0, i32 2, !dbg !2490
  %arraydecay = getelementptr inbounds [3 x %struct.VLC*], [3 x %struct.VLC*]* %j_dc_vlc, i32 0, i32 0, !dbg !2491
  %1 = bitcast %struct.VLC** %arraydecay to i8*, !dbg !2491
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 24, i32 8, i1 false), !dbg !2491
  %2 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2492
  %j_ac_vlc = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %2, i32 0, i32 0, !dbg !2493
  %arraydecay1 = getelementptr inbounds [4 x %struct.VLC*], [4 x %struct.VLC*]* %j_ac_vlc, i32 0, i32 0, !dbg !2494
  %3 = bitcast %struct.VLC** %arraydecay1 to i8*, !dbg !2494
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 32, i32 8, i1 false), !dbg !2494
  %4 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2495
  %j_orient_vlc = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %4, i32 0, i32 1, !dbg !2496
  store %struct.VLC* null, %struct.VLC** %j_orient_vlc, align 8, !dbg !2497
  ret void, !dbg !2498
}

; Function Attrs: nounwind uwtable
define internal void @x8_init_block_index(%struct.IntraX8Context* %w, %struct.AVFrame* %frame) #4 !dbg !2499 {
entry:
  %w.addr = alloca %struct.IntraX8Context*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %linesize = alloca i64, align 8
  %uvlinesize = alloca i64, align 8
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !2502, metadata !1740), !dbg !2503
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !2504, metadata !1740), !dbg !2505
  call void @llvm.dbg.declare(metadata i64* %linesize, metadata !2506, metadata !1740), !dbg !2508
  %0 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2509
  %linesize1 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 1, !dbg !2510
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize1, i64 0, i64 0, !dbg !2509
  %1 = load i32, i32* %arrayidx, align 8, !dbg !2509
  %conv = sext i32 %1 to i64, !dbg !2509
  store i64 %conv, i64* %linesize, align 8, !dbg !2508
  call void @llvm.dbg.declare(metadata i64* %uvlinesize, metadata !2511, metadata !1740), !dbg !2512
  %2 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2513
  %linesize2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 1, !dbg !2514
  %arrayidx3 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize2, i64 0, i64 1, !dbg !2513
  %3 = load i32, i32* %arrayidx3, align 4, !dbg !2513
  %conv4 = sext i32 %3 to i64, !dbg !2513
  store i64 %conv4, i64* %uvlinesize, align 8, !dbg !2512
  %4 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2515
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 0, !dbg !2516
  %arrayidx5 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !2515
  %5 = load i8*, i8** %arrayidx5, align 8, !dbg !2515
  %6 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2517
  %dest = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %6, i32 0, i32 23, !dbg !2518
  %arrayidx6 = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest, i64 0, i64 0, !dbg !2517
  store i8* %5, i8** %arrayidx6, align 8, !dbg !2519
  %7 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2520
  %data7 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %7, i32 0, i32 0, !dbg !2521
  %arrayidx8 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data7, i64 0, i64 1, !dbg !2520
  %8 = load i8*, i8** %arrayidx8, align 8, !dbg !2520
  %9 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2522
  %dest9 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %9, i32 0, i32 23, !dbg !2523
  %arrayidx10 = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest9, i64 0, i64 1, !dbg !2522
  store i8* %8, i8** %arrayidx10, align 8, !dbg !2524
  %10 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2525
  %data11 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 0, !dbg !2526
  %arrayidx12 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data11, i64 0, i64 2, !dbg !2525
  %11 = load i8*, i8** %arrayidx12, align 8, !dbg !2525
  %12 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2527
  %dest13 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %12, i32 0, i32 23, !dbg !2528
  %arrayidx14 = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest13, i64 0, i64 2, !dbg !2527
  store i8* %11, i8** %arrayidx14, align 8, !dbg !2529
  %13 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2530
  %mb_y = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %13, i32 0, i32 33, !dbg !2531
  %14 = load i32, i32* %mb_y, align 4, !dbg !2531
  %conv15 = sext i32 %14 to i64, !dbg !2530
  %15 = load i64, i64* %linesize, align 8, !dbg !2532
  %mul = mul nsw i64 %conv15, %15, !dbg !2533
  %shl = shl i64 %mul, 3, !dbg !2534
  %16 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2535
  %dest16 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %16, i32 0, i32 23, !dbg !2536
  %arrayidx17 = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest16, i64 0, i64 0, !dbg !2535
  %17 = load i8*, i8** %arrayidx17, align 8, !dbg !2537
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %shl, !dbg !2537
  store i8* %add.ptr, i8** %arrayidx17, align 8, !dbg !2537
  %18 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2538
  %mb_y18 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %18, i32 0, i32 33, !dbg !2539
  %19 = load i32, i32* %mb_y18, align 4, !dbg !2539
  %and = and i32 %19, -2, !dbg !2540
  %conv19 = sext i32 %and to i64, !dbg !2541
  %20 = load i64, i64* %uvlinesize, align 8, !dbg !2542
  %mul20 = mul nsw i64 %conv19, %20, !dbg !2543
  %shl21 = shl i64 %mul20, 2, !dbg !2544
  %21 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2545
  %dest22 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %21, i32 0, i32 23, !dbg !2546
  %arrayidx23 = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest22, i64 0, i64 1, !dbg !2545
  %22 = load i8*, i8** %arrayidx23, align 8, !dbg !2547
  %add.ptr24 = getelementptr inbounds i8, i8* %22, i64 %shl21, !dbg !2547
  store i8* %add.ptr24, i8** %arrayidx23, align 8, !dbg !2547
  %23 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2548
  %mb_y25 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %23, i32 0, i32 33, !dbg !2549
  %24 = load i32, i32* %mb_y25, align 4, !dbg !2549
  %and26 = and i32 %24, -2, !dbg !2550
  %conv27 = sext i32 %and26 to i64, !dbg !2551
  %25 = load i64, i64* %uvlinesize, align 8, !dbg !2552
  %mul28 = mul nsw i64 %conv27, %25, !dbg !2553
  %shl29 = shl i64 %mul28, 2, !dbg !2554
  %26 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2555
  %dest30 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %26, i32 0, i32 23, !dbg !2556
  %arrayidx31 = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest30, i64 0, i64 2, !dbg !2555
  %27 = load i8*, i8** %arrayidx31, align 8, !dbg !2557
  %add.ptr32 = getelementptr inbounds i8, i8* %27, i64 %shl29, !dbg !2557
  store i8* %add.ptr32, i8** %arrayidx31, align 8, !dbg !2557
  ret void, !dbg !2558
}

; Function Attrs: nounwind uwtable
define internal void @x8_get_prediction(%struct.IntraX8Context* %w) #4 !dbg !2559 {
entry:
  %w.addr = alloca %struct.IntraX8Context*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !2562, metadata !1740), !dbg !2563
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2564, metadata !1740), !dbg !2565
  call void @llvm.dbg.declare(metadata i32* %b, metadata !2566, metadata !1740), !dbg !2567
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2568, metadata !1740), !dbg !2569
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2570, metadata !1740), !dbg !2571
  %0 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2572
  %mb_x = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %0, i32 0, i32 32, !dbg !2573
  %1 = load i32, i32* %mb_x, align 8, !dbg !2573
  %tobool = icmp ne i32 %1, 0, !dbg !2574
  %lnot = xor i1 %tobool, true, !dbg !2574
  %lnot.ext = zext i1 %lnot to i32, !dbg !2574
  %mul = mul nsw i32 1, %lnot.ext, !dbg !2575
  %2 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2576
  %edges = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %2, i32 0, i32 25, !dbg !2577
  store i32 %mul, i32* %edges, align 4, !dbg !2578
  %3 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2579
  %mb_y = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %3, i32 0, i32 33, !dbg !2580
  %4 = load i32, i32* %mb_y, align 4, !dbg !2580
  %tobool1 = icmp ne i32 %4, 0, !dbg !2581
  %lnot2 = xor i1 %tobool1, true, !dbg !2581
  %lnot.ext3 = zext i1 %lnot2 to i32, !dbg !2581
  %mul4 = mul nsw i32 2, %lnot.ext3, !dbg !2582
  %5 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2583
  %edges5 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %5, i32 0, i32 25, !dbg !2584
  %6 = load i32, i32* %edges5, align 4, !dbg !2585
  %or = or i32 %6, %mul4, !dbg !2585
  store i32 %or, i32* %edges5, align 4, !dbg !2585
  %7 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2586
  %mb_x6 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %7, i32 0, i32 32, !dbg !2587
  %8 = load i32, i32* %mb_x6, align 8, !dbg !2587
  %9 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2588
  %mb_width = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %9, i32 0, i32 34, !dbg !2589
  %10 = load i32, i32* %mb_width, align 8, !dbg !2589
  %mul7 = mul nsw i32 2, %10, !dbg !2590
  %sub = sub nsw i32 %mul7, 1, !dbg !2591
  %cmp = icmp sge i32 %8, %sub, !dbg !2592
  %conv = zext i1 %cmp to i32, !dbg !2592
  %mul8 = mul nsw i32 4, %conv, !dbg !2593
  %11 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2594
  %edges9 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %11, i32 0, i32 25, !dbg !2595
  %12 = load i32, i32* %edges9, align 4, !dbg !2596
  %or10 = or i32 %12, %mul8, !dbg !2596
  store i32 %or10, i32* %edges9, align 4, !dbg !2596
  %13 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2597
  %edges11 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %13, i32 0, i32 25, !dbg !2598
  %14 = load i32, i32* %edges11, align 4, !dbg !2598
  %and = and i32 %14, 3, !dbg !2599
  switch i32 %and, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb12
    i32 2, label %sw.bb19
    i32 3, label %sw.bb30
  ], !dbg !2600

sw.bb:                                            ; preds = %entry
  br label %sw.epilog, !dbg !2601

sw.bb12:                                          ; preds = %entry
  %15 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2603
  %mb_y13 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %15, i32 0, i32 33, !dbg !2604
  %16 = load i32, i32* %mb_y13, align 4, !dbg !2604
  %and14 = and i32 %16, 1, !dbg !2605
  %tobool15 = icmp ne i32 %and14, 0, !dbg !2606
  %lnot16 = xor i1 %tobool15, true, !dbg !2606
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !2606
  %idxprom = sext i32 %lnot.ext17 to i64, !dbg !2607
  %17 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2607
  %prediction_table = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %17, i32 0, i32 4, !dbg !2608
  %18 = load i8*, i8** %prediction_table, align 8, !dbg !2608
  %arrayidx = getelementptr inbounds i8, i8* %18, i64 %idxprom, !dbg !2607
  %19 = load i8, i8* %arrayidx, align 1, !dbg !2607
  %conv18 = zext i8 %19 to i32, !dbg !2607
  %shr = ashr i32 %conv18, 2, !dbg !2609
  %20 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2610
  %est_run = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %20, i32 0, i32 31, !dbg !2611
  store i32 %shr, i32* %est_run, align 4, !dbg !2612
  %21 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2613
  %orient = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %21, i32 0, i32 30, !dbg !2614
  store i32 1, i32* %orient, align 8, !dbg !2615
  br label %if.end106, !dbg !2616

sw.bb19:                                          ; preds = %entry
  %22 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2617
  %mb_x20 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %22, i32 0, i32 32, !dbg !2618
  %23 = load i32, i32* %mb_x20, align 8, !dbg !2618
  %mul21 = mul nsw i32 2, %23, !dbg !2619
  %sub22 = sub nsw i32 %mul21, 2, !dbg !2620
  %idxprom23 = sext i32 %sub22 to i64, !dbg !2621
  %24 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2621
  %prediction_table24 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %24, i32 0, i32 4, !dbg !2622
  %25 = load i8*, i8** %prediction_table24, align 8, !dbg !2622
  %arrayidx25 = getelementptr inbounds i8, i8* %25, i64 %idxprom23, !dbg !2621
  %26 = load i8, i8* %arrayidx25, align 1, !dbg !2621
  %conv26 = zext i8 %26 to i32, !dbg !2621
  %shr27 = ashr i32 %conv26, 2, !dbg !2623
  %27 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2624
  %est_run28 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %27, i32 0, i32 31, !dbg !2625
  store i32 %shr27, i32* %est_run28, align 4, !dbg !2626
  %28 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2627
  %orient29 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %28, i32 0, i32 30, !dbg !2628
  store i32 2, i32* %orient29, align 8, !dbg !2629
  br label %if.end106, !dbg !2630

sw.bb30:                                          ; preds = %entry
  %29 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2631
  %est_run31 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %29, i32 0, i32 31, !dbg !2632
  store i32 16, i32* %est_run31, align 4, !dbg !2633
  %30 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2634
  %orient32 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %30, i32 0, i32 30, !dbg !2635
  store i32 0, i32* %orient32, align 8, !dbg !2636
  br label %if.end106, !dbg !2637

sw.epilog:                                        ; preds = %entry, %sw.bb
  %31 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2638
  %mb_x33 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %31, i32 0, i32 32, !dbg !2639
  %32 = load i32, i32* %mb_x33, align 8, !dbg !2639
  %mul34 = mul nsw i32 2, %32, !dbg !2640
  %33 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2641
  %mb_y35 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %33, i32 0, i32 33, !dbg !2642
  %34 = load i32, i32* %mb_y35, align 4, !dbg !2642
  %and36 = and i32 %34, 1, !dbg !2643
  %tobool37 = icmp ne i32 %and36, 0, !dbg !2644
  %lnot38 = xor i1 %tobool37, true, !dbg !2644
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !2644
  %add = add nsw i32 %mul34, %lnot.ext39, !dbg !2645
  %idxprom40 = sext i32 %add to i64, !dbg !2646
  %35 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2646
  %prediction_table41 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %35, i32 0, i32 4, !dbg !2647
  %36 = load i8*, i8** %prediction_table41, align 8, !dbg !2647
  %arrayidx42 = getelementptr inbounds i8, i8* %36, i64 %idxprom40, !dbg !2646
  %37 = load i8, i8* %arrayidx42, align 1, !dbg !2646
  %conv43 = zext i8 %37 to i32, !dbg !2646
  store i32 %conv43, i32* %b, align 4, !dbg !2648
  %38 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2649
  %mb_x44 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %38, i32 0, i32 32, !dbg !2650
  %39 = load i32, i32* %mb_x44, align 8, !dbg !2650
  %mul45 = mul nsw i32 2, %39, !dbg !2651
  %sub46 = sub nsw i32 %mul45, 2, !dbg !2652
  %40 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2653
  %mb_y47 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %40, i32 0, i32 33, !dbg !2654
  %41 = load i32, i32* %mb_y47, align 4, !dbg !2654
  %and48 = and i32 %41, 1, !dbg !2655
  %add49 = add nsw i32 %sub46, %and48, !dbg !2656
  %idxprom50 = sext i32 %add49 to i64, !dbg !2657
  %42 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2657
  %prediction_table51 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %42, i32 0, i32 4, !dbg !2658
  %43 = load i8*, i8** %prediction_table51, align 8, !dbg !2658
  %arrayidx52 = getelementptr inbounds i8, i8* %43, i64 %idxprom50, !dbg !2657
  %44 = load i8, i8* %arrayidx52, align 1, !dbg !2657
  %conv53 = zext i8 %44 to i32, !dbg !2657
  store i32 %conv53, i32* %a, align 4, !dbg !2659
  %45 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2660
  %mb_x54 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %45, i32 0, i32 32, !dbg !2661
  %46 = load i32, i32* %mb_x54, align 8, !dbg !2661
  %mul55 = mul nsw i32 2, %46, !dbg !2662
  %sub56 = sub nsw i32 %mul55, 2, !dbg !2663
  %47 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2664
  %mb_y57 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %47, i32 0, i32 33, !dbg !2665
  %48 = load i32, i32* %mb_y57, align 4, !dbg !2665
  %and58 = and i32 %48, 1, !dbg !2666
  %tobool59 = icmp ne i32 %and58, 0, !dbg !2667
  %lnot60 = xor i1 %tobool59, true, !dbg !2667
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !2667
  %add62 = add nsw i32 %sub56, %lnot.ext61, !dbg !2668
  %idxprom63 = sext i32 %add62 to i64, !dbg !2669
  %49 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2669
  %prediction_table64 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %49, i32 0, i32 4, !dbg !2670
  %50 = load i8*, i8** %prediction_table64, align 8, !dbg !2670
  %arrayidx65 = getelementptr inbounds i8, i8* %50, i64 %idxprom63, !dbg !2669
  %51 = load i8, i8* %arrayidx65, align 1, !dbg !2669
  %conv66 = zext i8 %51 to i32, !dbg !2669
  store i32 %conv66, i32* %c, align 4, !dbg !2671
  %52 = load i32, i32* %b, align 4, !dbg !2672
  %53 = load i32, i32* %a, align 4, !dbg !2673
  %cmp67 = icmp sgt i32 %52, %53, !dbg !2674
  br i1 %cmp67, label %cond.true, label %cond.false, !dbg !2675

cond.true:                                        ; preds = %sw.epilog
  %54 = load i32, i32* %a, align 4, !dbg !2676
  br label %cond.end, !dbg !2678

cond.false:                                       ; preds = %sw.epilog
  %55 = load i32, i32* %b, align 4, !dbg !2679
  br label %cond.end, !dbg !2681

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %54, %cond.true ], [ %55, %cond.false ], !dbg !2682
  %56 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2684
  %est_run69 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %56, i32 0, i32 31, !dbg !2685
  store i32 %cond, i32* %est_run69, align 4, !dbg !2686
  %57 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2687
  %mb_x70 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %57, i32 0, i32 32, !dbg !2689
  %58 = load i32, i32* %mb_x70, align 8, !dbg !2689
  %59 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2690
  %mb_y71 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %59, i32 0, i32 33, !dbg !2691
  %60 = load i32, i32* %mb_y71, align 4, !dbg !2691
  %and72 = and i32 %58, %60, !dbg !2692
  %cmp73 = icmp ne i32 %and72, 0, !dbg !2693
  br i1 %cmp73, label %if.then, label %if.end, !dbg !2694

if.then:                                          ; preds = %cond.end
  %61 = load i32, i32* %c, align 4, !dbg !2695
  %62 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2696
  %est_run75 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %62, i32 0, i32 31, !dbg !2697
  %63 = load i32, i32* %est_run75, align 4, !dbg !2697
  %cmp76 = icmp sgt i32 %61, %63, !dbg !2698
  br i1 %cmp76, label %cond.true78, label %cond.false80, !dbg !2699

cond.true78:                                      ; preds = %if.then
  %64 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2700
  %est_run79 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %64, i32 0, i32 31, !dbg !2702
  %65 = load i32, i32* %est_run79, align 4, !dbg !2702
  br label %cond.end81, !dbg !2703

cond.false80:                                     ; preds = %if.then
  %66 = load i32, i32* %c, align 4, !dbg !2704
  br label %cond.end81, !dbg !2706

cond.end81:                                       ; preds = %cond.false80, %cond.true78
  %cond82 = phi i32 [ %65, %cond.true78 ], [ %66, %cond.false80 ], !dbg !2707
  %67 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2709
  %est_run83 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %67, i32 0, i32 31, !dbg !2710
  store i32 %cond82, i32* %est_run83, align 4, !dbg !2711
  br label %if.end, !dbg !2709

if.end:                                           ; preds = %cond.end81, %cond.end
  %68 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2712
  %est_run84 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %68, i32 0, i32 31, !dbg !2713
  %69 = load i32, i32* %est_run84, align 4, !dbg !2714
  %shr85 = ashr i32 %69, 2, !dbg !2714
  store i32 %shr85, i32* %est_run84, align 4, !dbg !2714
  %70 = load i32, i32* %a, align 4, !dbg !2715
  %and86 = and i32 %70, 3, !dbg !2715
  store i32 %and86, i32* %a, align 4, !dbg !2715
  %71 = load i32, i32* %b, align 4, !dbg !2716
  %and87 = and i32 %71, 3, !dbg !2716
  store i32 %and87, i32* %b, align 4, !dbg !2716
  %72 = load i32, i32* %c, align 4, !dbg !2717
  %and88 = and i32 %72, 3, !dbg !2717
  store i32 %and88, i32* %c, align 4, !dbg !2717
  %73 = load i32, i32* %b, align 4, !dbg !2718
  %mul89 = mul nsw i32 2, %73, !dbg !2719
  %74 = load i32, i32* %a, align 4, !dbg !2720
  %mul90 = mul nsw i32 8, %74, !dbg !2721
  %add91 = add nsw i32 %mul89, %mul90, !dbg !2722
  %shr92 = lshr i32 -1379132, %add91, !dbg !2723
  %and93 = and i32 %shr92, 3, !dbg !2724
  store i32 %and93, i32* %i, align 4, !dbg !2725
  %75 = load i32, i32* %i, align 4, !dbg !2726
  %cmp94 = icmp ne i32 %75, 3, !dbg !2728
  br i1 %cmp94, label %if.then96, label %if.else, !dbg !2729

if.then96:                                        ; preds = %if.end
  %76 = load i32, i32* %i, align 4, !dbg !2730
  %77 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2731
  %orient97 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %77, i32 0, i32 30, !dbg !2732
  store i32 %76, i32* %orient97, align 8, !dbg !2733
  br label %if.end106, !dbg !2731

if.else:                                          ; preds = %if.end
  %78 = load i32, i32* %c, align 4, !dbg !2734
  %mul98 = mul nsw i32 2, %78, !dbg !2735
  %79 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2736
  %quant = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %79, i32 0, i32 14, !dbg !2737
  %80 = load i32, i32* %quant, align 8, !dbg !2737
  %cmp99 = icmp sgt i32 %80, 12, !dbg !2738
  %conv100 = zext i1 %cmp99 to i32, !dbg !2738
  %mul101 = mul nsw i32 8, %conv100, !dbg !2739
  %add102 = add nsw i32 %mul98, %mul101, !dbg !2740
  %shr103 = ashr i32 16771800, %add102, !dbg !2741
  %and104 = and i32 %shr103, 3, !dbg !2742
  %81 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2743
  %orient105 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %81, i32 0, i32 30, !dbg !2744
  store i32 %and104, i32* %orient105, align 8, !dbg !2745
  br label %if.end106

if.end106:                                        ; preds = %sw.bb12, %sw.bb19, %sw.bb30, %if.else, %if.then96
  ret void, !dbg !2746
}

; Function Attrs: nounwind uwtable
define internal i32 @x8_setup_spatial_predictor(%struct.IntraX8Context* %w, i32 %chroma) #4 !dbg !974 {
entry:
  %retval = alloca i32, align 4
  %w.addr = alloca %struct.IntraX8Context*, align 8
  %chroma.addr = alloca i32, align 4
  %range = alloca i32, align 4
  %sum = alloca i32, align 4
  %quant = alloca i32, align 4
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !2747, metadata !1740), !dbg !2748
  store i32 %chroma, i32* %chroma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chroma.addr, metadata !2749, metadata !1740), !dbg !2750
  call void @llvm.dbg.declare(metadata i32* %range, metadata !2751, metadata !1740), !dbg !2752
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !2753, metadata !1740), !dbg !2754
  call void @llvm.dbg.declare(metadata i32* %quant, metadata !2755, metadata !1740), !dbg !2756
  %0 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2757
  %dsp = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %0, i32 0, i32 11, !dbg !2758
  %setup_spatial_compensation = getelementptr inbounds %struct.IntraX8DSPContext, %struct.IntraX8DSPContext* %dsp, i32 0, i32 3, !dbg !2759
  %1 = load void (i8*, i8*, i64, i32*, i32*, i32)*, void (i8*, i8*, i64, i32*, i32*, i32)** %setup_spatial_compensation, align 8, !dbg !2759
  %2 = load i32, i32* %chroma.addr, align 4, !dbg !2760
  %idxprom = sext i32 %2 to i64, !dbg !2761
  %3 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2761
  %dest = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %3, i32 0, i32 23, !dbg !2762
  %arrayidx = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest, i64 0, i64 %idxprom, !dbg !2761
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !2761
  %5 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2763
  %scratchpad = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %5, i32 0, i32 24, !dbg !2764
  %arraydecay = getelementptr inbounds [42 x i8], [42 x i8]* %scratchpad, i32 0, i32 0, !dbg !2763
  %6 = load i32, i32* %chroma.addr, align 4, !dbg !2765
  %cmp = icmp sgt i32 %6, 0, !dbg !2766
  %conv = zext i1 %cmp to i32, !dbg !2766
  %idxprom1 = sext i32 %conv to i64, !dbg !2767
  %7 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2767
  %frame = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %7, i32 0, i32 18, !dbg !2768
  %8 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2768
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 1, !dbg !2769
  %arrayidx2 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom1, !dbg !2767
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !2767
  %conv3 = sext i32 %9 to i64, !dbg !2767
  %10 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2770
  %edges = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %10, i32 0, i32 25, !dbg !2771
  %11 = load i32, i32* %edges, align 4, !dbg !2771
  call void %1(i8* %4, i8* %arraydecay, i64 %conv3, i32* %range, i32* %sum, i32 %11), !dbg !2757
  %12 = load i32, i32* %chroma.addr, align 4, !dbg !2772
  %tobool = icmp ne i32 %12, 0, !dbg !2772
  br i1 %tobool, label %if.then, label %if.else, !dbg !2774

if.then:                                          ; preds = %entry
  %13 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2775
  %chroma_orient = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %13, i32 0, i32 29, !dbg !2777
  %14 = load i32, i32* %chroma_orient, align 4, !dbg !2777
  %15 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2778
  %orient = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %15, i32 0, i32 30, !dbg !2779
  store i32 %14, i32* %orient, align 8, !dbg !2780
  %16 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2781
  %quant_dc_chroma = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %16, i32 0, i32 20, !dbg !2782
  %17 = load i32, i32* %quant_dc_chroma, align 8, !dbg !2782
  store i32 %17, i32* %quant, align 4, !dbg !2783
  br label %if.end, !dbg !2784

if.else:                                          ; preds = %entry
  %18 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2785
  %quant4 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %18, i32 0, i32 14, !dbg !2787
  %19 = load i32, i32* %quant4, align 8, !dbg !2787
  store i32 %19, i32* %quant, align 4, !dbg !2788
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2789
  %flat_dc = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %20, i32 0, i32 26, !dbg !2790
  store i32 0, i32* %flat_dc, align 8, !dbg !2791
  %21 = load i32, i32* %range, align 4, !dbg !2792
  %22 = load i32, i32* %quant, align 4, !dbg !2794
  %cmp5 = icmp slt i32 %21, %22, !dbg !2795
  br i1 %cmp5, label %if.then9, label %lor.lhs.false, !dbg !2796

lor.lhs.false:                                    ; preds = %if.end
  %23 = load i32, i32* %range, align 4, !dbg !2797
  %cmp7 = icmp slt i32 %23, 3, !dbg !2799
  br i1 %cmp7, label %if.then9, label %if.end16, !dbg !2800

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  %24 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2801
  %orient10 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %24, i32 0, i32 30, !dbg !2803
  store i32 0, i32* %orient10, align 8, !dbg !2804
  %25 = load i32, i32* %range, align 4, !dbg !2805
  %cmp11 = icmp slt i32 %25, 3, !dbg !2807
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !2808

if.then13:                                        ; preds = %if.then9
  %26 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2809
  %flat_dc14 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %26, i32 0, i32 26, !dbg !2811
  store i32 1, i32* %flat_dc14, align 8, !dbg !2812
  %27 = load i32, i32* %sum, align 4, !dbg !2813
  %add = add nsw i32 %27, 9, !dbg !2813
  store i32 %add, i32* %sum, align 4, !dbg !2813
  %28 = load i32, i32* %sum, align 4, !dbg !2814
  %mul = mul nsw i32 %28, 6899, !dbg !2815
  %shr = ashr i32 %mul, 17, !dbg !2816
  %29 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2817
  %predicted_dc = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %29, i32 0, i32 27, !dbg !2818
  store i32 %shr, i32* %predicted_dc, align 4, !dbg !2819
  br label %if.end15, !dbg !2820

if.end15:                                         ; preds = %if.then13, %if.then9
  br label %if.end16, !dbg !2821

if.end16:                                         ; preds = %if.end15, %lor.lhs.false
  %30 = load i32, i32* %chroma.addr, align 4, !dbg !2822
  %tobool17 = icmp ne i32 %30, 0, !dbg !2822
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !2824

if.then18:                                        ; preds = %if.end16
  store i32 0, i32* %retval, align 4, !dbg !2825
  br label %return, !dbg !2825

if.end19:                                         ; preds = %if.end16
  %31 = load i32, i32* %range, align 4, !dbg !2826
  %32 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2828
  %quant20 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %32, i32 0, i32 14, !dbg !2829
  %33 = load i32, i32* %quant20, align 8, !dbg !2829
  %mul21 = mul nsw i32 2, %33, !dbg !2830
  %cmp22 = icmp slt i32 %31, %mul21, !dbg !2831
  br i1 %cmp22, label %if.then24, label %if.else44, !dbg !2832

if.then24:                                        ; preds = %if.end19
  %34 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2833
  %edges25 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %34, i32 0, i32 25, !dbg !2836
  %35 = load i32, i32* %edges25, align 4, !dbg !2836
  %and = and i32 %35, 3, !dbg !2837
  %cmp26 = icmp eq i32 %and, 0, !dbg !2838
  br i1 %cmp26, label %if.then28, label %if.else41, !dbg !2839

if.then28:                                        ; preds = %if.then24
  %36 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2840
  %orient29 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %36, i32 0, i32 30, !dbg !2843
  %37 = load i32, i32* %orient29, align 8, !dbg !2843
  %cmp30 = icmp eq i32 %37, 1, !dbg !2844
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !2845

if.then32:                                        ; preds = %if.then28
  %38 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2846
  %orient33 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %38, i32 0, i32 30, !dbg !2847
  store i32 11, i32* %orient33, align 8, !dbg !2848
  br label %if.end34, !dbg !2846

if.end34:                                         ; preds = %if.then32, %if.then28
  %39 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2849
  %orient35 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %39, i32 0, i32 30, !dbg !2851
  %40 = load i32, i32* %orient35, align 8, !dbg !2851
  %cmp36 = icmp eq i32 %40, 2, !dbg !2852
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !2853

if.then38:                                        ; preds = %if.end34
  %41 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2854
  %orient39 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %41, i32 0, i32 30, !dbg !2855
  store i32 10, i32* %orient39, align 8, !dbg !2856
  br label %if.end40, !dbg !2854

if.end40:                                         ; preds = %if.then38, %if.end34
  br label %if.end43, !dbg !2857

if.else41:                                        ; preds = %if.then24
  %42 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2858
  %orient42 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %42, i32 0, i32 30, !dbg !2860
  store i32 0, i32* %orient42, align 8, !dbg !2861
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.end40
  %43 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2862
  %raw_orient = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %43, i32 0, i32 28, !dbg !2863
  store i32 0, i32* %raw_orient, align 8, !dbg !2864
  br label %if.end59, !dbg !2865

if.else44:                                        ; preds = %if.end19
  %44 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2866
  %call = call i32 @x8_get_orient_vlc(%struct.IntraX8Context* %44), !dbg !2868
  %45 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2869
  %raw_orient45 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %45, i32 0, i32 28, !dbg !2870
  store i32 %call, i32* %raw_orient45, align 8, !dbg !2871
  %46 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2872
  %raw_orient46 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %46, i32 0, i32 28, !dbg !2874
  %47 = load i32, i32* %raw_orient46, align 8, !dbg !2874
  %cmp47 = icmp slt i32 %47, 0, !dbg !2875
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !2876

if.then49:                                        ; preds = %if.else44
  store i32 -1, i32* %retval, align 4, !dbg !2877
  br label %return, !dbg !2877

if.end50:                                         ; preds = %if.else44
  %48 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2878
  %raw_orient51 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %48, i32 0, i32 28, !dbg !2879
  %49 = load i32, i32* %raw_orient51, align 8, !dbg !2879
  %idxprom52 = sext i32 %49 to i64, !dbg !2880
  %50 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2881
  %orient53 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %50, i32 0, i32 30, !dbg !2882
  %51 = load i32, i32* %orient53, align 8, !dbg !2882
  %idxprom54 = sext i32 %51 to i64, !dbg !2880
  %arrayidx55 = getelementptr inbounds [3 x [12 x i8]], [3 x [12 x i8]]* @x8_setup_spatial_predictor.prediction_table, i64 0, i64 %idxprom54, !dbg !2880
  %arrayidx56 = getelementptr inbounds [12 x i8], [12 x i8]* %arrayidx55, i64 0, i64 %idxprom52, !dbg !2880
  %52 = load i8, i8* %arrayidx56, align 1, !dbg !2880
  %conv57 = zext i8 %52 to i32, !dbg !2880
  %53 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2883
  %orient58 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %53, i32 0, i32 30, !dbg !2884
  store i32 %conv57, i32* %orient58, align 8, !dbg !2885
  br label %if.end59

if.end59:                                         ; preds = %if.end50, %if.end43
  store i32 0, i32* %retval, align 4, !dbg !2886
  br label %return, !dbg !2886

return:                                           ; preds = %if.end59, %if.then49, %if.then18
  %54 = load i32, i32* %retval, align 4, !dbg !2887
  ret i32 %54, !dbg !2887
}

; Function Attrs: nounwind uwtable
define internal i32 @x8_decode_intra_mb(%struct.IntraX8Context* %w, i32 %chroma) #4 !dbg !2888 {
entry:
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2889, metadata !1740), !dbg !2894
  %retval = alloca i32, align 4
  %w.addr = alloca %struct.IntraX8Context*, align 8
  %chroma.addr = alloca i32, align 4
  %scantable = alloca i8*, align 8
  %final = alloca i32, align 4
  %run = alloca i32, align 4
  %level = alloca i32, align 4
  %ac_mode = alloca i32, align 4
  %dc_mode = alloca i32, align 4
  %est_run = alloca i32, align 4
  %dc_level = alloca i32, align 4
  %pos = alloca i32, align 4
  %n = alloca i32, align 4
  %zeros_only = alloca i32, align 4
  %use_quant_matrix = alloca i32, align 4
  %sign = alloca i32, align 4
  %divide_quant = alloca i32, align 4
  %dc_quant = alloca i32, align 4
  %direction = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %linesize198 = alloca i64, align 8
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !2900, metadata !1740), !dbg !2901
  store i32 %chroma, i32* %chroma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chroma.addr, metadata !2902, metadata !1740), !dbg !2903
  call void @llvm.dbg.declare(metadata i8** %scantable, metadata !2904, metadata !1740), !dbg !2905
  call void @llvm.dbg.declare(metadata i32* %final, metadata !2906, metadata !1740), !dbg !2907
  call void @llvm.dbg.declare(metadata i32* %run, metadata !2908, metadata !1740), !dbg !2909
  call void @llvm.dbg.declare(metadata i32* %level, metadata !2910, metadata !1740), !dbg !2911
  call void @llvm.dbg.declare(metadata i32* %ac_mode, metadata !2912, metadata !1740), !dbg !2913
  call void @llvm.dbg.declare(metadata i32* %dc_mode, metadata !2914, metadata !1740), !dbg !2915
  call void @llvm.dbg.declare(metadata i32* %est_run, metadata !2916, metadata !1740), !dbg !2917
  call void @llvm.dbg.declare(metadata i32* %dc_level, metadata !2918, metadata !1740), !dbg !2919
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !2920, metadata !1740), !dbg !2921
  call void @llvm.dbg.declare(metadata i32* %n, metadata !2922, metadata !1740), !dbg !2923
  call void @llvm.dbg.declare(metadata i32* %zeros_only, metadata !2924, metadata !1740), !dbg !2925
  call void @llvm.dbg.declare(metadata i32* %use_quant_matrix, metadata !2926, metadata !1740), !dbg !2927
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !2928, metadata !1740), !dbg !2929
  %0 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2930
  %bdsp = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %0, i32 0, i32 13, !dbg !2931
  %clear_block = getelementptr inbounds %struct.BlockDSPContext, %struct.BlockDSPContext* %bdsp, i32 0, i32 0, !dbg !2932
  %1 = load void (i16*)*, void (i16*)** %clear_block, align 8, !dbg !2932
  %2 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2933
  %block = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %2, i32 0, i32 10, !dbg !2934
  %3 = load [64 x i16]*, [64 x i16]** %block, align 8, !dbg !2934
  %arrayidx = getelementptr inbounds [64 x i16], [64 x i16]* %3, i64 0, !dbg !2933
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx, i32 0, i32 0, !dbg !2933
  call void %1(i16* %arraydecay), !dbg !2930
  %4 = load i32, i32* %chroma.addr, align 4, !dbg !2935
  %tobool = icmp ne i32 %4, 0, !dbg !2935
  br i1 %tobool, label %if.then, label %if.else, !dbg !2937

if.then:                                          ; preds = %entry
  store i32 2, i32* %dc_mode, align 4, !dbg !2938
  br label %if.end, !dbg !2939

if.else:                                          ; preds = %entry
  %5 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2940
  %est_run1 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %5, i32 0, i32 31, !dbg !2941
  %6 = load i32, i32* %est_run1, align 4, !dbg !2941
  %tobool2 = icmp ne i32 %6, 0, !dbg !2942
  %lnot = xor i1 %tobool2, true, !dbg !2942
  %lnot3 = xor i1 %lnot, true, !dbg !2943
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !2943
  store i32 %lnot.ext, i32* %dc_mode, align 4, !dbg !2944
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2945
  %8 = load i32, i32* %dc_mode, align 4, !dbg !2947
  %call = call i32 @x8_get_dc_rlf(%struct.IntraX8Context* %7, i32 %8, i32* %dc_level, i32* %final), !dbg !2948
  %tobool4 = icmp ne i32 %call, 0, !dbg !2948
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !2949

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !2950
  br label %return, !dbg !2950

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %n, align 4, !dbg !2951
  store i32 0, i32* %zeros_only, align 4, !dbg !2952
  %9 = load i32, i32* %final, align 4, !dbg !2953
  %tobool7 = icmp ne i32 %9, 0, !dbg !2953
  br i1 %tobool7, label %if.else60, label %if.then8, !dbg !2954

if.then8:                                         ; preds = %if.end6
  %10 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2955
  %use_quant_matrix9 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %10, i32 0, i32 3, !dbg !2957
  %11 = load i32, i32* %use_quant_matrix9, align 8, !dbg !2957
  store i32 %11, i32* %use_quant_matrix, align 4, !dbg !2958
  %12 = load i32, i32* %chroma.addr, align 4, !dbg !2959
  %tobool10 = icmp ne i32 %12, 0, !dbg !2959
  br i1 %tobool10, label %if.then11, label %if.else12, !dbg !2961

if.then11:                                        ; preds = %if.then8
  store i32 1, i32* %ac_mode, align 4, !dbg !2962
  store i32 64, i32* %est_run, align 4, !dbg !2964
  br label %if.end26, !dbg !2965

if.else12:                                        ; preds = %if.then8
  %13 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2966
  %raw_orient = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %13, i32 0, i32 28, !dbg !2969
  %14 = load i32, i32* %raw_orient, align 8, !dbg !2969
  %cmp = icmp slt i32 %14, 3, !dbg !2970
  br i1 %cmp, label %if.then13, label %if.end14, !dbg !2971

if.then13:                                        ; preds = %if.else12
  store i32 0, i32* %use_quant_matrix, align 4, !dbg !2972
  br label %if.end14, !dbg !2973

if.end14:                                         ; preds = %if.then13, %if.else12
  %15 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2974
  %raw_orient15 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %15, i32 0, i32 28, !dbg !2976
  %16 = load i32, i32* %raw_orient15, align 8, !dbg !2976
  %cmp16 = icmp sgt i32 %16, 4, !dbg !2977
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !2978

if.then17:                                        ; preds = %if.end14
  store i32 0, i32* %ac_mode, align 4, !dbg !2979
  store i32 64, i32* %est_run, align 4, !dbg !2981
  br label %if.end25, !dbg !2982

if.else18:                                        ; preds = %if.end14
  %17 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2983
  %est_run19 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %17, i32 0, i32 31, !dbg !2986
  %18 = load i32, i32* %est_run19, align 4, !dbg !2986
  %cmp20 = icmp sgt i32 %18, 1, !dbg !2987
  br i1 %cmp20, label %if.then21, label %if.else23, !dbg !2988

if.then21:                                        ; preds = %if.else18
  store i32 2, i32* %ac_mode, align 4, !dbg !2989
  %19 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2991
  %est_run22 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %19, i32 0, i32 31, !dbg !2992
  %20 = load i32, i32* %est_run22, align 4, !dbg !2992
  store i32 %20, i32* %est_run, align 4, !dbg !2993
  br label %if.end24, !dbg !2994

if.else23:                                        ; preds = %if.else18
  store i32 3, i32* %ac_mode, align 4, !dbg !2995
  store i32 64, i32* %est_run, align 4, !dbg !2997
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.then21
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then17
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then11
  %21 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !2998
  %22 = load i32, i32* %ac_mode, align 4, !dbg !2999
  call void @x8_select_ac_table(%struct.IntraX8Context* %21, i32 %22), !dbg !3000
  %23 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3001
  %orient = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %23, i32 0, i32 30, !dbg !3002
  %24 = load i32, i32* %orient, align 8, !dbg !3002
  %mul = mul nsw i32 2, %24, !dbg !3003
  %shr = ashr i32 9602376, %mul, !dbg !3004
  %and = and i32 %shr, 3, !dbg !3005
  %idxprom = sext i32 %and to i64, !dbg !3006
  %25 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3006
  %scantable27 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %25, i32 0, i32 5, !dbg !3007
  %arrayidx28 = getelementptr inbounds [3 x %struct.ScanTable], [3 x %struct.ScanTable]* %scantable27, i64 0, i64 %idxprom, !dbg !3006
  %permutated = getelementptr inbounds %struct.ScanTable, %struct.ScanTable* %arrayidx28, i32 0, i32 1, !dbg !3008
  %arraydecay29 = getelementptr inbounds [64 x i8], [64 x i8]* %permutated, i32 0, i32 0, !dbg !3006
  store i8* %arraydecay29, i8** %scantable, align 8, !dbg !3009
  store i32 0, i32* %pos, align 4, !dbg !3010
  br label %do.body, !dbg !3011, !llvm.loop !3012

do.body:                                          ; preds = %do.cond, %if.end26
  %26 = load i32, i32* %n, align 4, !dbg !3013
  %inc = add nsw i32 %26, 1, !dbg !3013
  store i32 %inc, i32* %n, align 4, !dbg !3013
  %27 = load i32, i32* %n, align 4, !dbg !3015
  %28 = load i32, i32* %est_run, align 4, !dbg !3017
  %cmp30 = icmp sge i32 %27, %28, !dbg !3018
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !3019

if.then31:                                        ; preds = %do.body
  store i32 3, i32* %ac_mode, align 4, !dbg !3020
  %29 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3022
  call void @x8_select_ac_table(%struct.IntraX8Context* %29, i32 3), !dbg !3023
  br label %if.end32, !dbg !3024

if.end32:                                         ; preds = %if.then31, %do.body
  %30 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3025
  %31 = load i32, i32* %ac_mode, align 4, !dbg !3026
  call void @x8_get_ac_rlf(%struct.IntraX8Context* %30, i32 %31, i32* %run, i32* %level, i32* %final), !dbg !3027
  %32 = load i32, i32* %run, align 4, !dbg !3028
  %add = add nsw i32 %32, 1, !dbg !3029
  %33 = load i32, i32* %pos, align 4, !dbg !3030
  %add33 = add nsw i32 %33, %add, !dbg !3030
  store i32 %add33, i32* %pos, align 4, !dbg !3030
  %34 = load i32, i32* %pos, align 4, !dbg !3031
  %cmp34 = icmp sgt i32 %34, 63, !dbg !3033
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !3034

if.then35:                                        ; preds = %if.end32
  store i32 -1, i32* %retval, align 4, !dbg !3035
  br label %return, !dbg !3035

if.end36:                                         ; preds = %if.end32
  %35 = load i32, i32* %level, align 4, !dbg !3037
  %add37 = add nsw i32 %35, 1, !dbg !3038
  %36 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3039
  %dquant = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %36, i32 0, i32 15, !dbg !3040
  %37 = load i32, i32* %dquant, align 4, !dbg !3040
  %mul38 = mul nsw i32 %add37, %37, !dbg !3041
  store i32 %mul38, i32* %level, align 4, !dbg !3042
  %38 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3043
  %qsum = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %38, i32 0, i32 16, !dbg !3044
  %39 = load i32, i32* %qsum, align 8, !dbg !3044
  %40 = load i32, i32* %level, align 4, !dbg !3045
  %add39 = add nsw i32 %40, %39, !dbg !3045
  store i32 %add39, i32* %level, align 4, !dbg !3045
  %41 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3046
  %gb = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %41, i32 0, i32 19, !dbg !3047
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !3047
  %call40 = call i32 @get_bits1(%struct.GetBitContext* %42), !dbg !3048
  %sub = sub i32 0, %call40, !dbg !3049
  store i32 %sub, i32* %sign, align 4, !dbg !3050
  %43 = load i32, i32* %level, align 4, !dbg !3051
  %44 = load i32, i32* %sign, align 4, !dbg !3052
  %xor = xor i32 %43, %44, !dbg !3053
  %45 = load i32, i32* %sign, align 4, !dbg !3054
  %sub41 = sub nsw i32 %xor, %45, !dbg !3055
  store i32 %sub41, i32* %level, align 4, !dbg !3056
  %46 = load i32, i32* %use_quant_matrix, align 4, !dbg !3057
  %tobool42 = icmp ne i32 %46, 0, !dbg !3057
  br i1 %tobool42, label %if.then43, label %if.end48, !dbg !3059

if.then43:                                        ; preds = %if.end36
  %47 = load i32, i32* %level, align 4, !dbg !3060
  %48 = load i32, i32* %pos, align 4, !dbg !3061
  %idxprom44 = sext i32 %48 to i64, !dbg !3062
  %arrayidx45 = getelementptr inbounds [64 x i16], [64 x i16]* @quant_table, i64 0, i64 %idxprom44, !dbg !3062
  %49 = load i16, i16* %arrayidx45, align 2, !dbg !3062
  %conv = sext i16 %49 to i32, !dbg !3062
  %mul46 = mul nsw i32 %47, %conv, !dbg !3063
  %shr47 = ashr i32 %mul46, 8, !dbg !3064
  store i32 %shr47, i32* %level, align 4, !dbg !3065
  br label %if.end48, !dbg !3066

if.end48:                                         ; preds = %if.then43, %if.end36
  %50 = load i32, i32* %level, align 4, !dbg !3067
  %conv49 = trunc i32 %50 to i16, !dbg !3067
  %51 = load i32, i32* %pos, align 4, !dbg !3068
  %idxprom50 = sext i32 %51 to i64, !dbg !3069
  %52 = load i8*, i8** %scantable, align 8, !dbg !3069
  %arrayidx51 = getelementptr inbounds i8, i8* %52, i64 %idxprom50, !dbg !3069
  %53 = load i8, i8* %arrayidx51, align 1, !dbg !3069
  %idxprom52 = zext i8 %53 to i64, !dbg !3070
  %54 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3070
  %block53 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %54, i32 0, i32 10, !dbg !3071
  %55 = load [64 x i16]*, [64 x i16]** %block53, align 8, !dbg !3071
  %arrayidx54 = getelementptr inbounds [64 x i16], [64 x i16]* %55, i64 0, !dbg !3070
  %arrayidx55 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx54, i64 0, i64 %idxprom52, !dbg !3070
  store i16 %conv49, i16* %arrayidx55, align 2, !dbg !3072
  br label %do.cond, !dbg !3073

do.cond:                                          ; preds = %if.end48
  %56 = load i32, i32* %final, align 4, !dbg !3074
  %tobool56 = icmp ne i32 %56, 0, !dbg !3076
  %lnot57 = xor i1 %tobool56, true, !dbg !3076
  br i1 %lnot57, label %do.body, label %do.end, !dbg !3077, !llvm.loop !3012

do.end:                                           ; preds = %do.cond
  %57 = load i32, i32* %pos, align 4, !dbg !3078
  %58 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3079
  %block_last_index = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %58, i32 0, i32 9, !dbg !3080
  %59 = load i32*, i32** %block_last_index, align 8, !dbg !3080
  %arrayidx59 = getelementptr inbounds i32, i32* %59, i64 0, !dbg !3079
  store i32 %57, i32* %arrayidx59, align 4, !dbg !3081
  br label %if.end95, !dbg !3082

if.else60:                                        ; preds = %if.end6
  %60 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3083
  %block_last_index61 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %60, i32 0, i32 9, !dbg !3084
  %61 = load i32*, i32** %block_last_index61, align 8, !dbg !3084
  %arrayidx62 = getelementptr inbounds i32, i32* %61, i64 0, !dbg !3083
  store i32 0, i32* %arrayidx62, align 4, !dbg !3085
  %62 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3086
  %flat_dc = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %62, i32 0, i32 26, !dbg !3087
  %63 = load i32, i32* %flat_dc, align 8, !dbg !3087
  %tobool63 = icmp ne i32 %63, 0, !dbg !3086
  br i1 %tobool63, label %land.lhs.true, label %if.end92, !dbg !3088

land.lhs.true:                                    ; preds = %if.else60
  %64 = load i32, i32* %dc_level, align 4, !dbg !3089
  %add64 = add nsw i32 %64, 1, !dbg !3091
  %cmp65 = icmp ult i32 %add64, 3, !dbg !3092
  br i1 %cmp65, label %if.then67, label %if.end92, !dbg !3093

if.then67:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %divide_quant, metadata !3094, metadata !1740), !dbg !3096
  %65 = load i32, i32* %chroma.addr, align 4, !dbg !3097
  %tobool68 = icmp ne i32 %65, 0, !dbg !3097
  br i1 %tobool68, label %cond.false, label %cond.true, !dbg !3098

cond.true:                                        ; preds = %if.then67
  %66 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3099
  %divide_quant_dc_luma = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %66, i32 0, i32 21, !dbg !3101
  %67 = load i32, i32* %divide_quant_dc_luma, align 4, !dbg !3101
  br label %cond.end, !dbg !3102

cond.false:                                       ; preds = %if.then67
  %68 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3103
  %divide_quant_dc_chroma = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %68, i32 0, i32 22, !dbg !3104
  %69 = load i32, i32* %divide_quant_dc_chroma, align 8, !dbg !3104
  br label %cond.end, !dbg !3105

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %67, %cond.true ], [ %69, %cond.false ], !dbg !3107
  store i32 %cond, i32* %divide_quant, align 4, !dbg !3109
  call void @llvm.dbg.declare(metadata i32* %dc_quant, metadata !3110, metadata !1740), !dbg !3111
  %70 = load i32, i32* %chroma.addr, align 4, !dbg !3112
  %tobool69 = icmp ne i32 %70, 0, !dbg !3112
  br i1 %tobool69, label %cond.false71, label %cond.true70, !dbg !3113

cond.true70:                                      ; preds = %cond.end
  %71 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3114
  %quant = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %71, i32 0, i32 14, !dbg !3115
  %72 = load i32, i32* %quant, align 8, !dbg !3115
  br label %cond.end72, !dbg !3116

cond.false71:                                     ; preds = %cond.end
  %73 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3117
  %quant_dc_chroma = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %73, i32 0, i32 20, !dbg !3118
  %74 = load i32, i32* %quant_dc_chroma, align 8, !dbg !3118
  br label %cond.end72, !dbg !3119

cond.end72:                                       ; preds = %cond.false71, %cond.true70
  %cond73 = phi i32 [ %72, %cond.true70 ], [ %74, %cond.false71 ], !dbg !3120
  store i32 %cond73, i32* %dc_quant, align 4, !dbg !3121
  %75 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3122
  %predicted_dc = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %75, i32 0, i32 27, !dbg !3123
  %76 = load i32, i32* %predicted_dc, align 4, !dbg !3123
  %77 = load i32, i32* %divide_quant, align 4, !dbg !3124
  %mul74 = mul nsw i32 %76, %77, !dbg !3125
  %add75 = add nsw i32 %mul74, 4096, !dbg !3126
  %shr76 = ashr i32 %add75, 13, !dbg !3127
  %78 = load i32, i32* %dc_level, align 4, !dbg !3128
  %add77 = add nsw i32 %78, %shr76, !dbg !3128
  store i32 %add77, i32* %dc_level, align 4, !dbg !3128
  %79 = load i32, i32* %dc_level, align 4, !dbg !3129
  %80 = load i32, i32* %dc_quant, align 4, !dbg !3130
  %mul78 = mul nsw i32 %79, %80, !dbg !3131
  %add79 = add nsw i32 %mul78, 4, !dbg !3132
  %shr80 = ashr i32 %add79, 3, !dbg !3133
  store i32 %shr80, i32* %a.addr.i, align 4, !dbg !3134
  %81 = load i32, i32* %a.addr.i, align 4, !dbg !3135
  %and.i = and i32 %81, -256, !dbg !3137
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !3137
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !3138

if.then.i:                                        ; preds = %cond.end72
  %82 = load i32, i32* %a.addr.i, align 4, !dbg !3139
  %neg.i = xor i32 %82, -1, !dbg !3141
  %shr.i = ashr i32 %neg.i, 31, !dbg !3142
  %conv.i = trunc i32 %shr.i to i8, !dbg !3143
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !3144
  br label %av_clip_uint8_c.exit, !dbg !3144

if.else.i:                                        ; preds = %cond.end72
  %83 = load i32, i32* %a.addr.i, align 4, !dbg !3145
  %conv1.i = trunc i32 %83 to i8, !dbg !3145
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !3146
  br label %av_clip_uint8_c.exit, !dbg !3146

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %84 = load i8, i8* %retval.i, align 1, !dbg !3147
  %85 = load i32, i32* %chroma.addr, align 4, !dbg !3148
  %idxprom82 = sext i32 %85 to i64, !dbg !3149
  %86 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3149
  %dest = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %86, i32 0, i32 23, !dbg !3150
  %arrayidx83 = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest, i64 0, i64 %idxprom82, !dbg !3149
  %87 = load i8*, i8** %arrayidx83, align 8, !dbg !3149
  %88 = load i32, i32* %chroma.addr, align 4, !dbg !3151
  %tobool84 = icmp ne i32 %88, 0, !dbg !3152
  %lnot85 = xor i1 %tobool84, true, !dbg !3152
  %lnot87 = xor i1 %lnot85, true, !dbg !3153
  %lnot.ext88 = zext i1 %lnot87 to i32, !dbg !3153
  %idxprom89 = sext i32 %lnot.ext88 to i64, !dbg !3154
  %89 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3154
  %frame = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %89, i32 0, i32 18, !dbg !3155
  %90 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3155
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %90, i32 0, i32 1, !dbg !3156
  %arrayidx90 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom89, !dbg !3154
  %91 = load i32, i32* %arrayidx90, align 4, !dbg !3154
  %conv91 = sext i32 %91 to i64, !dbg !3154
  call void @dsp_x8_put_solidcolor(i8 zeroext %84, i8* %87, i64 %conv91), !dbg !3157
  br label %block_placed, !dbg !3158

if.end92:                                         ; preds = %land.lhs.true, %if.else60
  %92 = load i32, i32* %dc_level, align 4, !dbg !3159
  %cmp93 = icmp eq i32 %92, 0, !dbg !3160
  %conv94 = zext i1 %cmp93 to i32, !dbg !3160
  store i32 %conv94, i32* %zeros_only, align 4, !dbg !3161
  br label %if.end95

if.end95:                                         ; preds = %if.end92, %do.end
  %93 = load i32, i32* %chroma.addr, align 4, !dbg !3162
  %tobool96 = icmp ne i32 %93, 0, !dbg !3162
  br i1 %tobool96, label %if.else104, label %if.then97, !dbg !3164

if.then97:                                        ; preds = %if.end95
  %94 = load i32, i32* %dc_level, align 4, !dbg !3165
  %95 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3166
  %quant98 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %95, i32 0, i32 14, !dbg !3167
  %96 = load i32, i32* %quant98, align 8, !dbg !3167
  %mul99 = mul nsw i32 %94, %96, !dbg !3168
  %conv100 = trunc i32 %mul99 to i16, !dbg !3165
  %97 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3169
  %block101 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %97, i32 0, i32 10, !dbg !3170
  %98 = load [64 x i16]*, [64 x i16]** %block101, align 8, !dbg !3170
  %arrayidx102 = getelementptr inbounds [64 x i16], [64 x i16]* %98, i64 0, !dbg !3169
  %arrayidx103 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx102, i64 0, i64 0, !dbg !3169
  store i16 %conv100, i16* %arrayidx103, align 2, !dbg !3171
  br label %if.end111, !dbg !3169

if.else104:                                       ; preds = %if.end95
  %99 = load i32, i32* %dc_level, align 4, !dbg !3172
  %100 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3173
  %quant_dc_chroma105 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %100, i32 0, i32 20, !dbg !3174
  %101 = load i32, i32* %quant_dc_chroma105, align 8, !dbg !3174
  %mul106 = mul nsw i32 %99, %101, !dbg !3175
  %conv107 = trunc i32 %mul106 to i16, !dbg !3172
  %102 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3176
  %block108 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %102, i32 0, i32 10, !dbg !3177
  %103 = load [64 x i16]*, [64 x i16]** %block108, align 8, !dbg !3177
  %arrayidx109 = getelementptr inbounds [64 x i16], [64 x i16]* %103, i64 0, !dbg !3176
  %arrayidx110 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx109, i64 0, i64 0, !dbg !3176
  store i16 %conv107, i16* %arrayidx110, align 2, !dbg !3178
  br label %if.end111

if.end111:                                        ; preds = %if.else104, %if.then97
  %104 = load i32, i32* %dc_level, align 4, !dbg !3179
  %add112 = add nsw i32 %104, 1, !dbg !3181
  %cmp113 = icmp uge i32 %add112, 3, !dbg !3182
  br i1 %cmp113, label %land.lhs.true115, label %if.end132, !dbg !3183

land.lhs.true115:                                 ; preds = %if.end111
  %105 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3184
  %edges = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %105, i32 0, i32 25, !dbg !3186
  %106 = load i32, i32* %edges, align 4, !dbg !3186
  %and116 = and i32 %106, 3, !dbg !3187
  %cmp117 = icmp ne i32 %and116, 3, !dbg !3188
  br i1 %cmp117, label %if.then119, label %if.end132, !dbg !3189

if.then119:                                       ; preds = %land.lhs.true115
  call void @llvm.dbg.declare(metadata i32* %direction, metadata !3190, metadata !1740), !dbg !3192
  %107 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3193
  %orient120 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %107, i32 0, i32 30, !dbg !3194
  %108 = load i32, i32* %orient120, align 8, !dbg !3194
  %mul121 = mul nsw i32 %108, 2, !dbg !3195
  %shr122 = ashr i32 6947196, %mul121, !dbg !3196
  %and123 = and i32 %shr122, 3, !dbg !3197
  store i32 %and123, i32* %direction, align 4, !dbg !3198
  %109 = load i32, i32* %direction, align 4, !dbg !3199
  %cmp124 = icmp ne i32 %109, 3, !dbg !3201
  br i1 %cmp124, label %if.then126, label %if.end131, !dbg !3202

if.then126:                                       ; preds = %if.then119
  %110 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3203
  %111 = load i32, i32* %direction, align 4, !dbg !3205
  %112 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3206
  %block127 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %112, i32 0, i32 10, !dbg !3207
  %113 = load [64 x i16]*, [64 x i16]** %block127, align 8, !dbg !3207
  %arrayidx128 = getelementptr inbounds [64 x i16], [64 x i16]* %113, i64 0, !dbg !3206
  %arrayidx129 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx128, i64 0, i64 0, !dbg !3206
  %114 = load i16, i16* %arrayidx129, align 2, !dbg !3206
  %conv130 = sext i16 %114 to i32, !dbg !3206
  call void @x8_ac_compensation(%struct.IntraX8Context* %110, i32 %111, i32 %conv130), !dbg !3208
  br label %if.end131, !dbg !3209

if.end131:                                        ; preds = %if.then126, %if.then119
  br label %if.end132, !dbg !3210

if.end132:                                        ; preds = %if.end131, %land.lhs.true115, %if.end111
  %115 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3211
  %flat_dc133 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %115, i32 0, i32 26, !dbg !3213
  %116 = load i32, i32* %flat_dc133, align 8, !dbg !3213
  %tobool134 = icmp ne i32 %116, 0, !dbg !3211
  br i1 %tobool134, label %if.then135, label %if.else151, !dbg !3214

if.then135:                                       ; preds = %if.end132
  %117 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3215
  %predicted_dc136 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %117, i32 0, i32 27, !dbg !3217
  %118 = load i32, i32* %predicted_dc136, align 4, !dbg !3217
  %conv137 = trunc i32 %118 to i8, !dbg !3215
  %119 = load i32, i32* %chroma.addr, align 4, !dbg !3218
  %idxprom138 = sext i32 %119 to i64, !dbg !3219
  %120 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3219
  %dest139 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %120, i32 0, i32 23, !dbg !3220
  %arrayidx140 = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest139, i64 0, i64 %idxprom138, !dbg !3219
  %121 = load i8*, i8** %arrayidx140, align 8, !dbg !3219
  %122 = load i32, i32* %chroma.addr, align 4, !dbg !3221
  %tobool141 = icmp ne i32 %122, 0, !dbg !3222
  %lnot142 = xor i1 %tobool141, true, !dbg !3222
  %lnot144 = xor i1 %lnot142, true, !dbg !3223
  %lnot.ext145 = zext i1 %lnot144 to i32, !dbg !3223
  %idxprom146 = sext i32 %lnot.ext145 to i64, !dbg !3224
  %123 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3224
  %frame147 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %123, i32 0, i32 18, !dbg !3225
  %124 = load %struct.AVFrame*, %struct.AVFrame** %frame147, align 8, !dbg !3225
  %linesize148 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %124, i32 0, i32 1, !dbg !3226
  %arrayidx149 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize148, i64 0, i64 %idxprom146, !dbg !3224
  %125 = load i32, i32* %arrayidx149, align 4, !dbg !3224
  %conv150 = sext i32 %125 to i64, !dbg !3224
  call void @dsp_x8_put_solidcolor(i8 zeroext %conv137, i8* %121, i64 %conv150), !dbg !3227
  br label %if.end169, !dbg !3228

if.else151:                                       ; preds = %if.end132
  %126 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3229
  %orient152 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %126, i32 0, i32 30, !dbg !3231
  %127 = load i32, i32* %orient152, align 8, !dbg !3231
  %idxprom153 = sext i32 %127 to i64, !dbg !3232
  %128 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3232
  %dsp = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %128, i32 0, i32 11, !dbg !3233
  %spatial_compensation = getelementptr inbounds %struct.IntraX8DSPContext, %struct.IntraX8DSPContext* %dsp, i32 0, i32 2, !dbg !3234
  %arrayidx154 = getelementptr inbounds [12 x void (i8*, i8*, i64)*], [12 x void (i8*, i8*, i64)*]* %spatial_compensation, i64 0, i64 %idxprom153, !dbg !3232
  %129 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %arrayidx154, align 8, !dbg !3232
  %130 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3235
  %scratchpad = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %130, i32 0, i32 24, !dbg !3236
  %arraydecay155 = getelementptr inbounds [42 x i8], [42 x i8]* %scratchpad, i32 0, i32 0, !dbg !3235
  %131 = load i32, i32* %chroma.addr, align 4, !dbg !3237
  %idxprom156 = sext i32 %131 to i64, !dbg !3238
  %132 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3238
  %dest157 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %132, i32 0, i32 23, !dbg !3239
  %arrayidx158 = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest157, i64 0, i64 %idxprom156, !dbg !3238
  %133 = load i8*, i8** %arrayidx158, align 8, !dbg !3238
  %134 = load i32, i32* %chroma.addr, align 4, !dbg !3240
  %tobool159 = icmp ne i32 %134, 0, !dbg !3241
  %lnot160 = xor i1 %tobool159, true, !dbg !3241
  %lnot162 = xor i1 %lnot160, true, !dbg !3242
  %lnot.ext163 = zext i1 %lnot162 to i32, !dbg !3242
  %idxprom164 = sext i32 %lnot.ext163 to i64, !dbg !3243
  %135 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3243
  %frame165 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %135, i32 0, i32 18, !dbg !3244
  %136 = load %struct.AVFrame*, %struct.AVFrame** %frame165, align 8, !dbg !3244
  %linesize166 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %136, i32 0, i32 1, !dbg !3245
  %arrayidx167 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize166, i64 0, i64 %idxprom164, !dbg !3243
  %137 = load i32, i32* %arrayidx167, align 4, !dbg !3243
  %conv168 = sext i32 %137 to i64, !dbg !3243
  call void %129(i8* %arraydecay155, i8* %133, i64 %conv168), !dbg !3232
  br label %if.end169

if.end169:                                        ; preds = %if.else151, %if.then135
  %138 = load i32, i32* %zeros_only, align 4, !dbg !3246
  %tobool170 = icmp ne i32 %138, 0, !dbg !3246
  br i1 %tobool170, label %if.end188, label %if.then171, !dbg !3248

if.then171:                                       ; preds = %if.end169
  %139 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3249
  %wdsp = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %139, i32 0, i32 6, !dbg !3250
  %idct_add = getelementptr inbounds %struct.WMV2DSPContext, %struct.WMV2DSPContext* %wdsp, i32 0, i32 0, !dbg !3251
  %140 = load void (i8*, i64, i16*)*, void (i8*, i64, i16*)** %idct_add, align 8, !dbg !3251
  %141 = load i32, i32* %chroma.addr, align 4, !dbg !3252
  %idxprom172 = sext i32 %141 to i64, !dbg !3253
  %142 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3253
  %dest173 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %142, i32 0, i32 23, !dbg !3254
  %arrayidx174 = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest173, i64 0, i64 %idxprom172, !dbg !3253
  %143 = load i8*, i8** %arrayidx174, align 8, !dbg !3253
  %144 = load i32, i32* %chroma.addr, align 4, !dbg !3255
  %tobool175 = icmp ne i32 %144, 0, !dbg !3256
  %lnot176 = xor i1 %tobool175, true, !dbg !3256
  %lnot178 = xor i1 %lnot176, true, !dbg !3257
  %lnot.ext179 = zext i1 %lnot178 to i32, !dbg !3257
  %idxprom180 = sext i32 %lnot.ext179 to i64, !dbg !3258
  %145 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3258
  %frame181 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %145, i32 0, i32 18, !dbg !3259
  %146 = load %struct.AVFrame*, %struct.AVFrame** %frame181, align 8, !dbg !3259
  %linesize182 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %146, i32 0, i32 1, !dbg !3260
  %arrayidx183 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize182, i64 0, i64 %idxprom180, !dbg !3258
  %147 = load i32, i32* %arrayidx183, align 4, !dbg !3258
  %conv184 = sext i32 %147 to i64, !dbg !3258
  %148 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3261
  %block185 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %148, i32 0, i32 10, !dbg !3262
  %149 = load [64 x i16]*, [64 x i16]** %block185, align 8, !dbg !3262
  %arrayidx186 = getelementptr inbounds [64 x i16], [64 x i16]* %149, i64 0, !dbg !3261
  %arraydecay187 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx186, i32 0, i32 0, !dbg !3261
  call void %140(i8* %143, i64 %conv184, i16* %arraydecay187), !dbg !3249
  br label %if.end188, !dbg !3249

if.end188:                                        ; preds = %if.then171, %if.end169
  br label %block_placed, !dbg !3263

block_placed:                                     ; preds = %if.end188, %av_clip_uint8_c.exit
  %150 = load i32, i32* %chroma.addr, align 4, !dbg !3265
  %tobool189 = icmp ne i32 %150, 0, !dbg !3265
  br i1 %tobool189, label %if.end192, label %if.then190, !dbg !3267

if.then190:                                       ; preds = %block_placed
  %151 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3268
  %152 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3269
  %orient191 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %152, i32 0, i32 30, !dbg !3270
  %153 = load i32, i32* %orient191, align 8, !dbg !3270
  %154 = load i32, i32* %n, align 4, !dbg !3271
  call void @x8_update_predictions(%struct.IntraX8Context* %151, i32 %153, i32 %154), !dbg !3272
  br label %if.end192, !dbg !3272

if.end192:                                        ; preds = %if.then190, %block_placed
  %155 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3273
  %loopfilter = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %155, i32 0, i32 17, !dbg !3275
  %156 = load i32, i32* %loopfilter, align 4, !dbg !3275
  %tobool193 = icmp ne i32 %156, 0, !dbg !3273
  br i1 %tobool193, label %if.then194, label %if.end235, !dbg !3276

if.then194:                                       ; preds = %if.end192
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !3277, metadata !1740), !dbg !3279
  %157 = load i32, i32* %chroma.addr, align 4, !dbg !3280
  %idxprom195 = sext i32 %157 to i64, !dbg !3281
  %158 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3281
  %dest196 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %158, i32 0, i32 23, !dbg !3282
  %arrayidx197 = getelementptr inbounds [3 x i8*], [3 x i8*]* %dest196, i64 0, i64 %idxprom195, !dbg !3281
  %159 = load i8*, i8** %arrayidx197, align 8, !dbg !3281
  store i8* %159, i8** %ptr, align 8, !dbg !3279
  call void @llvm.dbg.declare(metadata i64* %linesize198, metadata !3283, metadata !1740), !dbg !3284
  %160 = load i32, i32* %chroma.addr, align 4, !dbg !3285
  %tobool199 = icmp ne i32 %160, 0, !dbg !3286
  %lnot200 = xor i1 %tobool199, true, !dbg !3286
  %lnot202 = xor i1 %lnot200, true, !dbg !3287
  %lnot.ext203 = zext i1 %lnot202 to i32, !dbg !3287
  %idxprom204 = sext i32 %lnot.ext203 to i64, !dbg !3288
  %161 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3288
  %frame205 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %161, i32 0, i32 18, !dbg !3289
  %162 = load %struct.AVFrame*, %struct.AVFrame** %frame205, align 8, !dbg !3289
  %linesize206 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %162, i32 0, i32 1, !dbg !3290
  %arrayidx207 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize206, i64 0, i64 %idxprom204, !dbg !3288
  %163 = load i32, i32* %arrayidx207, align 4, !dbg !3288
  %conv208 = sext i32 %163 to i64, !dbg !3288
  store i64 %conv208, i64* %linesize198, align 8, !dbg !3284
  %164 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3291
  %edges209 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %164, i32 0, i32 25, !dbg !3293
  %165 = load i32, i32* %edges209, align 4, !dbg !3293
  %and210 = and i32 %165, 2, !dbg !3294
  %tobool211 = icmp ne i32 %and210, 0, !dbg !3294
  br i1 %tobool211, label %if.end220, label %lor.lhs.false, !dbg !3295

lor.lhs.false:                                    ; preds = %if.then194
  %166 = load i32, i32* %zeros_only, align 4, !dbg !3296
  %tobool212 = icmp ne i32 %166, 0, !dbg !3296
  br i1 %tobool212, label %land.lhs.true213, label %if.then217, !dbg !3298

land.lhs.true213:                                 ; preds = %lor.lhs.false
  %167 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3299
  %orient214 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %167, i32 0, i32 30, !dbg !3301
  %168 = load i32, i32* %orient214, align 8, !dbg !3301
  %or = or i32 %168, 4, !dbg !3302
  %cmp215 = icmp eq i32 %or, 4, !dbg !3303
  br i1 %cmp215, label %if.end220, label %if.then217, !dbg !3304

if.then217:                                       ; preds = %land.lhs.true213, %lor.lhs.false
  %169 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3305
  %dsp218 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %169, i32 0, i32 11, !dbg !3306
  %h_loop_filter = getelementptr inbounds %struct.IntraX8DSPContext, %struct.IntraX8DSPContext* %dsp218, i32 0, i32 1, !dbg !3307
  %170 = load void (i8*, i64, i32)*, void (i8*, i64, i32)** %h_loop_filter, align 8, !dbg !3307
  %171 = load i8*, i8** %ptr, align 8, !dbg !3308
  %172 = load i64, i64* %linesize198, align 8, !dbg !3309
  %173 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3310
  %quant219 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %173, i32 0, i32 14, !dbg !3311
  %174 = load i32, i32* %quant219, align 8, !dbg !3311
  call void %170(i8* %171, i64 %172, i32 %174), !dbg !3305
  br label %if.end220, !dbg !3305

if.end220:                                        ; preds = %if.then217, %land.lhs.true213, %if.then194
  %175 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3312
  %edges221 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %175, i32 0, i32 25, !dbg !3314
  %176 = load i32, i32* %edges221, align 4, !dbg !3314
  %and222 = and i32 %176, 1, !dbg !3315
  %tobool223 = icmp ne i32 %and222, 0, !dbg !3315
  br i1 %tobool223, label %if.end234, label %lor.lhs.false224, !dbg !3316

lor.lhs.false224:                                 ; preds = %if.end220
  %177 = load i32, i32* %zeros_only, align 4, !dbg !3317
  %tobool225 = icmp ne i32 %177, 0, !dbg !3317
  br i1 %tobool225, label %land.lhs.true226, label %if.then231, !dbg !3319

land.lhs.true226:                                 ; preds = %lor.lhs.false224
  %178 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3320
  %orient227 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %178, i32 0, i32 30, !dbg !3322
  %179 = load i32, i32* %orient227, align 8, !dbg !3322
  %or228 = or i32 %179, 8, !dbg !3323
  %cmp229 = icmp eq i32 %or228, 8, !dbg !3324
  br i1 %cmp229, label %if.end234, label %if.then231, !dbg !3325

if.then231:                                       ; preds = %land.lhs.true226, %lor.lhs.false224
  %180 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3326
  %dsp232 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %180, i32 0, i32 11, !dbg !3327
  %v_loop_filter = getelementptr inbounds %struct.IntraX8DSPContext, %struct.IntraX8DSPContext* %dsp232, i32 0, i32 0, !dbg !3328
  %181 = load void (i8*, i64, i32)*, void (i8*, i64, i32)** %v_loop_filter, align 8, !dbg !3328
  %182 = load i8*, i8** %ptr, align 8, !dbg !3329
  %183 = load i64, i64* %linesize198, align 8, !dbg !3330
  %184 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3331
  %quant233 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %184, i32 0, i32 14, !dbg !3332
  %185 = load i32, i32* %quant233, align 8, !dbg !3332
  call void %181(i8* %182, i64 %183, i32 %185), !dbg !3326
  br label %if.end234, !dbg !3326

if.end234:                                        ; preds = %if.then231, %land.lhs.true226, %if.end220
  br label %if.end235, !dbg !3333

if.end235:                                        ; preds = %if.end234, %if.end192
  store i32 0, i32* %retval, align 4, !dbg !3334
  br label %return, !dbg !3334

return:                                           ; preds = %if.end235, %if.then35, %if.then5
  %186 = load i32, i32* %retval, align 4, !dbg !3335
  ret i32 %186, !dbg !3335
}

; Function Attrs: nounwind uwtable
define internal void @x8_get_prediction_chroma(%struct.IntraX8Context* %w) #4 !dbg !3336 {
entry:
  %w.addr = alloca %struct.IntraX8Context*, align 8
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !3337, metadata !1740), !dbg !3338
  %0 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3339
  %mb_x = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %0, i32 0, i32 32, !dbg !3340
  %1 = load i32, i32* %mb_x, align 8, !dbg !3340
  %shr = ashr i32 %1, 1, !dbg !3341
  %tobool = icmp ne i32 %shr, 0, !dbg !3342
  %lnot = xor i1 %tobool, true, !dbg !3342
  %lnot.ext = zext i1 %lnot to i32, !dbg !3342
  %mul = mul nsw i32 1, %lnot.ext, !dbg !3343
  %2 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3344
  %edges = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %2, i32 0, i32 25, !dbg !3345
  store i32 %mul, i32* %edges, align 4, !dbg !3346
  %3 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3347
  %mb_y = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %3, i32 0, i32 33, !dbg !3348
  %4 = load i32, i32* %mb_y, align 4, !dbg !3348
  %shr1 = ashr i32 %4, 1, !dbg !3349
  %tobool2 = icmp ne i32 %shr1, 0, !dbg !3350
  %lnot3 = xor i1 %tobool2, true, !dbg !3350
  %lnot.ext4 = zext i1 %lnot3 to i32, !dbg !3350
  %mul5 = mul nsw i32 2, %lnot.ext4, !dbg !3351
  %5 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3352
  %edges6 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %5, i32 0, i32 25, !dbg !3353
  %6 = load i32, i32* %edges6, align 4, !dbg !3354
  %or = or i32 %6, %mul5, !dbg !3354
  store i32 %or, i32* %edges6, align 4, !dbg !3354
  %7 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3355
  %mb_x7 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %7, i32 0, i32 32, !dbg !3356
  %8 = load i32, i32* %mb_x7, align 8, !dbg !3356
  %9 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3357
  %mb_width = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %9, i32 0, i32 34, !dbg !3358
  %10 = load i32, i32* %mb_width, align 8, !dbg !3358
  %mul8 = mul nsw i32 2, %10, !dbg !3359
  %sub = sub nsw i32 %mul8, 1, !dbg !3360
  %cmp = icmp sge i32 %8, %sub, !dbg !3361
  %conv = zext i1 %cmp to i32, !dbg !3361
  %mul9 = mul nsw i32 4, %conv, !dbg !3362
  %11 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3363
  %edges10 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %11, i32 0, i32 25, !dbg !3364
  %12 = load i32, i32* %edges10, align 4, !dbg !3365
  %or11 = or i32 %12, %mul9, !dbg !3365
  store i32 %or11, i32* %edges10, align 4, !dbg !3365
  %13 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3366
  %raw_orient = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %13, i32 0, i32 28, !dbg !3367
  store i32 0, i32* %raw_orient, align 8, !dbg !3368
  %14 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3369
  %edges12 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %14, i32 0, i32 25, !dbg !3371
  %15 = load i32, i32* %edges12, align 4, !dbg !3371
  %and = and i32 %15, 3, !dbg !3372
  %tobool13 = icmp ne i32 %and, 0, !dbg !3372
  br i1 %tobool13, label %if.then, label %if.end, !dbg !3373

if.then:                                          ; preds = %entry
  %16 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3374
  %edges14 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %16, i32 0, i32 25, !dbg !3376
  %17 = load i32, i32* %edges14, align 4, !dbg !3376
  %shr15 = ashr i32 204, %17, !dbg !3377
  %and16 = and i32 %shr15, 1, !dbg !3378
  %shl = shl i32 4, %and16, !dbg !3379
  %18 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3380
  %chroma_orient = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %18, i32 0, i32 29, !dbg !3381
  store i32 %shl, i32* %chroma_orient, align 4, !dbg !3382
  br label %return, !dbg !3383

if.end:                                           ; preds = %entry
  %19 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3384
  %mb_x17 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %19, i32 0, i32 32, !dbg !3385
  %20 = load i32, i32* %mb_x17, align 8, !dbg !3385
  %mul18 = mul nsw i32 2, %20, !dbg !3386
  %sub19 = sub nsw i32 %mul18, 2, !dbg !3387
  %idxprom = sext i32 %sub19 to i64, !dbg !3388
  %21 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3388
  %prediction_table = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %21, i32 0, i32 4, !dbg !3389
  %22 = load i8*, i8** %prediction_table, align 8, !dbg !3389
  %arrayidx = getelementptr inbounds i8, i8* %22, i64 %idxprom, !dbg !3388
  %23 = load i8, i8* %arrayidx, align 1, !dbg !3388
  %conv20 = zext i8 %23 to i32, !dbg !3388
  %and21 = and i32 %conv20, 3, !dbg !3390
  %shl22 = shl i32 %and21, 2, !dbg !3391
  %24 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3392
  %chroma_orient23 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %24, i32 0, i32 29, !dbg !3393
  store i32 %shl22, i32* %chroma_orient23, align 4, !dbg !3394
  br label %return, !dbg !3395

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3396
}

declare void @ff_draw_horiz_band(%struct.AVCodecContext*, %struct.AVFrame*, %struct.AVFrame*, i32, i32, i32, i32, i32) #3

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #3

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @x8_get_orient_vlc(%struct.IntraX8Context* %w) #5 !dbg !3398 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !3401, metadata !1740), !dbg !3406
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !3401, metadata !1740), !dbg !3418
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !3401, metadata !1740), !dbg !3421
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3423, metadata !1740), !dbg !3424
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3425, metadata !1740), !dbg !3426
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3427, metadata !1740), !dbg !3428
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3429, metadata !1740), !dbg !3430
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3431, metadata !1740), !dbg !3432
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3433, metadata !1740), !dbg !3434
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3435, metadata !1740), !dbg !3436
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3437, metadata !1740), !dbg !3438
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3439, metadata !1740), !dbg !3440
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3441, metadata !1740), !dbg !3442
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3443, metadata !1740), !dbg !3444
  %w.addr = alloca %struct.IntraX8Context*, align 8
  %table_index = alloca i32, align 4
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !3445, metadata !1740), !dbg !3446
  %0 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3447
  %j_orient_vlc = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %0, i32 0, i32 1, !dbg !3449
  %1 = load %struct.VLC*, %struct.VLC** %j_orient_vlc, align 8, !dbg !3449
  %tobool = icmp ne %struct.VLC* %1, null, !dbg !3447
  br i1 %tobool, label %if.end, label %if.then, !dbg !3450

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %table_index, metadata !3451, metadata !1740), !dbg !3453
  %2 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3454
  %gb = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %2, i32 0, i32 19, !dbg !3455
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !3455
  %4 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3456
  %quant = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %4, i32 0, i32 14, !dbg !3457
  %5 = load i32, i32* %quant, align 8, !dbg !3457
  %cmp = icmp slt i32 %5, 13, !dbg !3458
  %conv = zext i1 %cmp to i32, !dbg !3458
  %add = add nsw i32 1, %conv, !dbg !3459
  %call = call i32 @get_bits(%struct.GetBitContext* %3, i32 %add), !dbg !3460
  store i32 %call, i32* %table_index, align 4, !dbg !3453
  %6 = load i32, i32* %table_index, align 4, !dbg !3461
  %idxprom = sext i32 %6 to i64, !dbg !3462
  %7 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3463
  %quant1 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %7, i32 0, i32 14, !dbg !3464
  %8 = load i32, i32* %quant1, align 8, !dbg !3464
  %cmp2 = icmp slt i32 %8, 13, !dbg !3465
  %conv3 = zext i1 %cmp2 to i32, !dbg !3465
  %idxprom4 = sext i32 %conv3 to i64, !dbg !3462
  %arrayidx = getelementptr inbounds [2 x [4 x %struct.VLC]], [2 x [4 x %struct.VLC]]* @j_orient_vlc, i64 0, i64 %idxprom4, !dbg !3462
  %arrayidx5 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* %arrayidx, i64 0, i64 %idxprom, !dbg !3462
  %9 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3466
  %j_orient_vlc6 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %9, i32 0, i32 1, !dbg !3467
  store %struct.VLC* %arrayidx5, %struct.VLC** %j_orient_vlc6, align 8, !dbg !3468
  br label %if.end, !dbg !3469

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3470
  %gb7 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %10, i32 0, i32 19, !dbg !3471
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb7, align 8, !dbg !3471
  %12 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3472
  %j_orient_vlc8 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %12, i32 0, i32 1, !dbg !3473
  %13 = load %struct.VLC*, %struct.VLC** %j_orient_vlc8, align 8, !dbg !3473
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %13, i32 0, i32 1, !dbg !3474
  %14 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !3474
  store %struct.GetBitContext* %11, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3475
  store [2 x i16]* %14, [2 x i16]** %table.addr.i, align 8, !dbg !3475
  store i32 7, i32* %bits.addr.i, align 4, !dbg !3475
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !3475
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3476
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !3477
  %16 = load i32, i32* %index.i, align 8, !dbg !3477
  store i32 %16, i32* %re_index.i, align 4, !dbg !3434
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3478
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %17, i32 0, i32 4, !dbg !3479
  %18 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !3479
  store i32 %18, i32* %re_size_plus8.i, align 4, !dbg !3438
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3480
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %19, i32 0, i32 0, !dbg !3481
  %20 = load i8*, i8** %buffer.i, align 8, !dbg !3481
  %21 = load i32, i32* %re_index.i, align 4, !dbg !3482
  %shr.i = lshr i32 %21, 3, !dbg !3483
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !3484
  %add.ptr.i = getelementptr inbounds i8, i8* %20, i64 %idx.ext.i, !dbg !3484
  %22 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !3485
  %l.i = bitcast %union.unaligned_32* %22 to i32*, !dbg !3485
  %23 = load i32, i32* %l.i, align 1, !dbg !3485
  store i32 %23, i32* %x.addr.i.i, align 4, !dbg !3486
  %24 = load i32, i32* %x.addr.i.i, align 4, !dbg !3487
  %shl.i.i = shl i32 %24, 8, !dbg !3488
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !3489
  %25 = load i32, i32* %x.addr.i.i, align 4, !dbg !3490
  %shr.i.i = lshr i32 %25, 8, !dbg !3491
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !3492
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !3493
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !3494
  %26 = load i32, i32* %x.addr.i.i, align 4, !dbg !3495
  %shr3.i.i = lshr i32 %26, 16, !dbg !3496
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !3497
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !3498
  %27 = load i32, i32* %x.addr.i.i, align 4, !dbg !3499
  %shr6.i.i = lshr i32 %27, 16, !dbg !3500
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !3501
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !3502
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !3503
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !3504
  %28 = load i32, i32* %re_index.i, align 4, !dbg !3505
  %and.i = and i32 %28, 7, !dbg !3506
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !3507
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !3508
  %29 = load i32, i32* %re_cache.i, align 4, !dbg !3509
  %30 = load i32, i32* %bits.addr.i, align 4, !dbg !3511
  %conv.i = trunc i32 %30 to i8, !dbg !3511
  %call2.i = call i32 @NEG_USR32(i32 %29, i8 signext %conv.i) #6, !dbg !3512
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !3513
  %31 = load i32, i32* %index1.i, align 4, !dbg !3514
  %idxprom.i = zext i32 %31 to i64, !dbg !3515
  %32 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3515
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %32, i64 %idxprom.i, !dbg !3515
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !3515
  %33 = load i16, i16* %arrayidx3.i, align 2, !dbg !3515
  %conv4.i = sext i16 %33 to i32, !dbg !3515
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !3516
  %34 = load i32, i32* %index1.i, align 4, !dbg !3517
  %idxprom5.i = zext i32 %34 to i64, !dbg !3518
  %35 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3518
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %35, i64 %idxprom5.i, !dbg !3518
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !3518
  %36 = load i16, i16* %arrayidx7.i, align 2, !dbg !3518
  %conv8.i = sext i16 %36 to i32, !dbg !3518
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !3519
  %37 = load i32, i32* %max_depth.addr.i, align 4, !dbg !3520
  %cmp.i = icmp sgt i32 %37, 1, !dbg !3521
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !3522

land.lhs.true.i:                                  ; preds = %if.end
  %38 = load i32, i32* %n.i, align 4, !dbg !3523
  %cmp10.i = icmp slt i32 %38, 0, !dbg !3525
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !3526

if.then.i:                                        ; preds = %land.lhs.true.i
  %39 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3527
  %40 = load i32, i32* %re_index.i, align 4, !dbg !3529
  %41 = load i32, i32* %bits.addr.i, align 4, !dbg !3530
  %add.i = add i32 %40, %41, !dbg !3531
  %cmp12.i = icmp ugt i32 %39, %add.i, !dbg !3532
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !3533

cond.true.i:                                      ; preds = %if.then.i
  %42 = load i32, i32* %re_index.i, align 4, !dbg !3534
  %43 = load i32, i32* %bits.addr.i, align 4, !dbg !3536
  %add14.i = add i32 %42, %43, !dbg !3537
  br label %cond.end.i, !dbg !3538

cond.false.i:                                     ; preds = %if.then.i
  %44 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3539
  br label %cond.end.i, !dbg !3541

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %44, %cond.false.i ], !dbg !3542
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !3543
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3544
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %45, i32 0, i32 0, !dbg !3545
  %46 = load i8*, i8** %buffer15.i, align 8, !dbg !3545
  %47 = load i32, i32* %re_index.i, align 4, !dbg !3546
  %shr16.i = lshr i32 %47, 3, !dbg !3547
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !3548
  %add.ptr18.i = getelementptr inbounds i8, i8* %46, i64 %idx.ext17.i, !dbg !3548
  %48 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !3549
  %l19.i = bitcast %union.unaligned_32* %48 to i32*, !dbg !3549
  %49 = load i32, i32* %l19.i, align 1, !dbg !3549
  store i32 %49, i32* %x.addr.i81.i, align 4, !dbg !3550
  %50 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3551
  %shl.i82.i = shl i32 %50, 8, !dbg !3552
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !3553
  %51 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3554
  %shr.i84.i = lshr i32 %51, 8, !dbg !3555
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !3556
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !3557
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !3558
  %52 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3559
  %shr3.i88.i = lshr i32 %52, 16, !dbg !3560
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !3561
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !3562
  %53 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3563
  %shr6.i91.i = lshr i32 %53, 16, !dbg !3564
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !3565
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !3566
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !3567
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !3568
  %54 = load i32, i32* %re_index.i, align 4, !dbg !3569
  %and21.i = and i32 %54, 7, !dbg !3570
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !3571
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !3572
  %55 = load i32, i32* %n.i, align 4, !dbg !3573
  %sub.i = sub nsw i32 0, %55, !dbg !3574
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !3575
  %56 = load i32, i32* %re_cache.i, align 4, !dbg !3576
  %57 = load i32, i32* %nb_bits.i, align 4, !dbg !3577
  %conv23.i = trunc i32 %57 to i8, !dbg !3577
  %call24.i = call i32 @NEG_USR32(i32 %56, i8 signext %conv23.i) #6, !dbg !3578
  %58 = load i32, i32* %code.i, align 4, !dbg !3580
  %add25.i = add i32 %call24.i, %58, !dbg !3581
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !3582
  %59 = load i32, i32* %index1.i, align 4, !dbg !3583
  %idxprom26.i = zext i32 %59 to i64, !dbg !3584
  %60 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3584
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %60, i64 %idxprom26.i, !dbg !3584
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !3584
  %61 = load i16, i16* %arrayidx28.i, align 2, !dbg !3584
  %conv29.i = sext i16 %61 to i32, !dbg !3584
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !3585
  %62 = load i32, i32* %index1.i, align 4, !dbg !3586
  %idxprom30.i = zext i32 %62 to i64, !dbg !3587
  %63 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3587
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %63, i64 %idxprom30.i, !dbg !3587
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !3587
  %64 = load i16, i16* %arrayidx32.i, align 2, !dbg !3587
  %conv33.i = sext i16 %64 to i32, !dbg !3587
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !3588
  %65 = load i32, i32* %max_depth.addr.i, align 4, !dbg !3589
  %cmp34.i = icmp sgt i32 %65, 2, !dbg !3590
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !3591

land.lhs.true36.i:                                ; preds = %cond.end.i
  %66 = load i32, i32* %n.i, align 4, !dbg !3592
  %cmp37.i = icmp slt i32 %66, 0, !dbg !3594
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !3595

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %67 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3596
  %68 = load i32, i32* %re_index.i, align 4, !dbg !3598
  %69 = load i32, i32* %nb_bits.i, align 4, !dbg !3599
  %add40.i = add i32 %68, %69, !dbg !3600
  %cmp41.i = icmp ugt i32 %67, %add40.i, !dbg !3601
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !3602

cond.true43.i:                                    ; preds = %if.then39.i
  %70 = load i32, i32* %re_index.i, align 4, !dbg !3603
  %71 = load i32, i32* %nb_bits.i, align 4, !dbg !3605
  %add44.i = add i32 %70, %71, !dbg !3606
  br label %cond.end46.i, !dbg !3607

cond.false45.i:                                   ; preds = %if.then39.i
  %72 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3608
  br label %cond.end46.i, !dbg !3610

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %72, %cond.false45.i ], !dbg !3611
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !3612
  %73 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3613
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %73, i32 0, i32 0, !dbg !3614
  %74 = load i8*, i8** %buffer48.i, align 8, !dbg !3614
  %75 = load i32, i32* %re_index.i, align 4, !dbg !3615
  %shr49.i = lshr i32 %75, 3, !dbg !3616
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !3617
  %add.ptr51.i = getelementptr inbounds i8, i8* %74, i64 %idx.ext50.i, !dbg !3617
  %76 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !3618
  %l52.i = bitcast %union.unaligned_32* %76 to i32*, !dbg !3618
  %77 = load i32, i32* %l52.i, align 1, !dbg !3618
  store i32 %77, i32* %x.addr.i96.i, align 4, !dbg !3619
  %78 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3620
  %shl.i97.i = shl i32 %78, 8, !dbg !3621
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !3622
  %79 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3623
  %shr.i99.i = lshr i32 %79, 8, !dbg !3624
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !3625
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !3626
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !3627
  %80 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3628
  %shr3.i103.i = lshr i32 %80, 16, !dbg !3629
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !3630
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !3631
  %81 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3632
  %shr6.i106.i = lshr i32 %81, 16, !dbg !3633
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !3634
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !3635
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !3636
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !3637
  %82 = load i32, i32* %re_index.i, align 4, !dbg !3638
  %and54.i = and i32 %82, 7, !dbg !3639
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !3640
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !3641
  %83 = load i32, i32* %n.i, align 4, !dbg !3642
  %sub56.i = sub nsw i32 0, %83, !dbg !3643
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !3644
  %84 = load i32, i32* %re_cache.i, align 4, !dbg !3645
  %85 = load i32, i32* %nb_bits.i, align 4, !dbg !3646
  %conv57.i = trunc i32 %85 to i8, !dbg !3646
  %call58.i = call i32 @NEG_USR32(i32 %84, i8 signext %conv57.i) #6, !dbg !3647
  %86 = load i32, i32* %code.i, align 4, !dbg !3649
  %add59.i = add i32 %call58.i, %86, !dbg !3650
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !3651
  %87 = load i32, i32* %index1.i, align 4, !dbg !3652
  %idxprom60.i = zext i32 %87 to i64, !dbg !3653
  %88 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3653
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %88, i64 %idxprom60.i, !dbg !3653
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !3653
  %89 = load i16, i16* %arrayidx62.i, align 2, !dbg !3653
  %conv63.i = sext i16 %89 to i32, !dbg !3653
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !3654
  %90 = load i32, i32* %index1.i, align 4, !dbg !3655
  %idxprom64.i = zext i32 %90 to i64, !dbg !3656
  %91 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3656
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %91, i64 %idxprom64.i, !dbg !3656
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !3656
  %92 = load i16, i16* %arrayidx66.i, align 2, !dbg !3656
  %conv67.i = sext i16 %92 to i32, !dbg !3656
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !3657
  br label %if.end.i, !dbg !3658

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !3659

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.end
  %93 = load i32, i32* %n.i, align 4, !dbg !3661
  %94 = load i32, i32* %re_cache.i, align 4, !dbg !3664
  %shl70.i = shl i32 %94, %93, !dbg !3664
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !3664
  %95 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3665
  %96 = load i32, i32* %re_index.i, align 4, !dbg !3666
  %97 = load i32, i32* %n.i, align 4, !dbg !3667
  %add71.i = add i32 %96, %97, !dbg !3668
  %cmp72.i = icmp ugt i32 %95, %add71.i, !dbg !3669
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !3670

cond.true74.i:                                    ; preds = %if.end68.i
  %98 = load i32, i32* %re_index.i, align 4, !dbg !3671
  %99 = load i32, i32* %n.i, align 4, !dbg !3673
  %add75.i = add i32 %98, %99, !dbg !3674
  br label %get_vlc2.exit, !dbg !3675

cond.false76.i:                                   ; preds = %if.end68.i
  %100 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3676
  br label %get_vlc2.exit, !dbg !3678

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %100, %cond.false76.i ], !dbg !3679
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !3681
  %101 = load i32, i32* %re_index.i, align 4, !dbg !3682
  %102 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3683
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %102, i32 0, i32 2, !dbg !3684
  store i32 %101, i32* %index80.i, align 8, !dbg !3685
  %103 = load i32, i32* %code.i, align 4, !dbg !3686
  ret i32 %103, !dbg !3687
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !3688 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3401, metadata !1740), !dbg !3691
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3693, metadata !1740), !dbg !3694
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3695, metadata !1740), !dbg !3696
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !3697, metadata !1740), !dbg !3698
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !3699, metadata !1740), !dbg !3700
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3701
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3702
  %1 = load i32, i32* %index, align 8, !dbg !3702
  store i32 %1, i32* %re_index, align 4, !dbg !3700
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !3703, metadata !1740), !dbg !3704
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !3705, metadata !1740), !dbg !3706
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3707
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !3708
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3708
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !3706
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3709
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !3710
  %5 = load i8*, i8** %buffer, align 8, !dbg !3710
  %6 = load i32, i32* %re_index, align 4, !dbg !3711
  %shr = lshr i32 %6, 3, !dbg !3712
  %idx.ext = zext i32 %shr to i64, !dbg !3713
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !3713
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !3714
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !3714
  %8 = load i32, i32* %l, align 1, !dbg !3714
  store i32 %8, i32* %x.addr.i, align 4, !dbg !3715
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !3716
  %shl.i = shl i32 %9, 8, !dbg !3717
  %and.i = and i32 %shl.i, 65280, !dbg !3718
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !3719
  %shr.i = lshr i32 %10, 8, !dbg !3720
  %and1.i = and i32 %shr.i, 255, !dbg !3721
  %or.i = or i32 %and.i, %and1.i, !dbg !3722
  %shl2.i = shl i32 %or.i, 16, !dbg !3723
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !3724
  %shr3.i = lshr i32 %11, 16, !dbg !3725
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3726
  %and5.i = and i32 %shl4.i, 65280, !dbg !3727
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !3728
  %shr6.i = lshr i32 %12, 16, !dbg !3729
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3730
  %and8.i = and i32 %shr7.i, 255, !dbg !3731
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3732
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3733
  %13 = load i32, i32* %re_index, align 4, !dbg !3734
  %and = and i32 %13, 7, !dbg !3735
  %shl = shl i32 %or10.i, %and, !dbg !3736
  store i32 %shl, i32* %re_cache, align 4, !dbg !3737
  %14 = load i32, i32* %re_cache, align 4, !dbg !3738
  %15 = load i32, i32* %n.addr, align 4, !dbg !3739
  %conv = trunc i32 %15 to i8, !dbg !3739
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !3740
  store i32 %call4, i32* %tmp, align 4, !dbg !3741
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !3742
  %17 = load i32, i32* %re_index, align 4, !dbg !3743
  %18 = load i32, i32* %n.addr, align 4, !dbg !3744
  %add = add i32 %17, %18, !dbg !3745
  %cmp = icmp ugt i32 %16, %add, !dbg !3746
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3747

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !3748
  %20 = load i32, i32* %n.addr, align 4, !dbg !3750
  %add6 = add i32 %19, %20, !dbg !3751
  br label %cond.end, !dbg !3752

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !3753
  br label %cond.end, !dbg !3755

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !3756
  store i32 %cond, i32* %re_index, align 4, !dbg !3758
  %22 = load i32, i32* %re_index, align 4, !dbg !3759
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3760
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !3761
  store i32 %22, i32* %index7, align 8, !dbg !3762
  %24 = load i32, i32* %tmp, align 4, !dbg !3763
  ret i32 %24, !dbg !3764
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #5 !dbg !3765 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !3769, metadata !1740), !dbg !3770
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !3771, metadata !1740), !dbg !3772
  %0 = load i32, i32* %a.addr, align 4, !dbg !3773
  %1 = load i8, i8* %s.addr, align 1, !dbg !3774
  %conv = sext i8 %1 to i32, !dbg !3774
  %sub = sub nsw i32 0, %conv, !dbg !3775
  %conv1 = trunc i32 %sub to i8, !dbg !3776
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #1, !dbg !3773, !srcloc !3777
  store i32 %2, i32* %a.addr, align 4, !dbg !3773
  %3 = load i32, i32* %a.addr, align 4, !dbg !3778
  ret i32 %3, !dbg !3779
}

; Function Attrs: nounwind uwtable
define internal i32 @x8_get_dc_rlf(%struct.IntraX8Context* %w, i32 %mode, i32* %level, i32* %final) #4 !dbg !3780 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !3401, metadata !1740), !dbg !3783
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !3401, metadata !1740), !dbg !3786
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !3401, metadata !1740), !dbg !3788
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3423, metadata !1740), !dbg !3790
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3425, metadata !1740), !dbg !3791
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3427, metadata !1740), !dbg !3792
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3429, metadata !1740), !dbg !3793
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3431, metadata !1740), !dbg !3794
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3433, metadata !1740), !dbg !3795
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3435, metadata !1740), !dbg !3796
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3437, metadata !1740), !dbg !3797
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3439, metadata !1740), !dbg !3798
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3441, metadata !1740), !dbg !3799
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3443, metadata !1740), !dbg !3800
  %retval = alloca i32, align 4
  %w.addr = alloca %struct.IntraX8Context*, align 8
  %mode.addr = alloca i32, align 4
  %level.addr = alloca i32*, align 8
  %final.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %e = alloca i32, align 4
  %c = alloca i32, align 4
  %table_index = alloca i32, align 4
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !3801, metadata !1740), !dbg !3802
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3803, metadata !1740), !dbg !3804
  store i32* %level, i32** %level.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %level.addr, metadata !3805, metadata !1740), !dbg !3806
  store i32* %final, i32** %final.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %final.addr, metadata !3807, metadata !1740), !dbg !3808
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3809, metadata !1740), !dbg !3810
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3811, metadata !1740), !dbg !3812
  call void @llvm.dbg.declare(metadata i32* %c, metadata !3813, metadata !1740), !dbg !3814
  %0 = load i32, i32* %mode.addr, align 4, !dbg !3815
  %idxprom = sext i32 %0 to i64, !dbg !3817
  %1 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3817
  %j_dc_vlc = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %1, i32 0, i32 2, !dbg !3818
  %arrayidx = getelementptr inbounds [3 x %struct.VLC*], [3 x %struct.VLC*]* %j_dc_vlc, i64 0, i64 %idxprom, !dbg !3817
  %2 = load %struct.VLC*, %struct.VLC** %arrayidx, align 8, !dbg !3817
  %tobool = icmp ne %struct.VLC* %2, null, !dbg !3817
  br i1 %tobool, label %if.end, label %if.then, !dbg !3819

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %table_index, metadata !3820, metadata !1740), !dbg !3822
  %3 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3823
  %gb = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %3, i32 0, i32 19, !dbg !3824
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !3824
  %call = call i32 @get_bits(%struct.GetBitContext* %4, i32 3), !dbg !3825
  store i32 %call, i32* %table_index, align 4, !dbg !3822
  %5 = load i32, i32* %table_index, align 4, !dbg !3826
  %idxprom1 = sext i32 %5 to i64, !dbg !3827
  %6 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3828
  %quant = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %6, i32 0, i32 14, !dbg !3829
  %7 = load i32, i32* %quant, align 8, !dbg !3829
  %cmp = icmp slt i32 %7, 13, !dbg !3830
  %conv = zext i1 %cmp to i32, !dbg !3830
  %idxprom2 = sext i32 %conv to i64, !dbg !3827
  %arrayidx3 = getelementptr inbounds [2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* @j_dc_vlc, i64 0, i64 %idxprom2, !dbg !3827
  %arrayidx4 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* %arrayidx3, i64 0, i64 %idxprom1, !dbg !3827
  %8 = load i32, i32* %mode.addr, align 4, !dbg !3831
  %idxprom5 = sext i32 %8 to i64, !dbg !3832
  %9 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3832
  %j_dc_vlc6 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %9, i32 0, i32 2, !dbg !3833
  %arrayidx7 = getelementptr inbounds [3 x %struct.VLC*], [3 x %struct.VLC*]* %j_dc_vlc6, i64 0, i64 %idxprom5, !dbg !3832
  store %struct.VLC* %arrayidx4, %struct.VLC** %arrayidx7, align 8, !dbg !3834
  br label %if.end, !dbg !3835

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3836
  %gb8 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %10, i32 0, i32 19, !dbg !3837
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb8, align 8, !dbg !3837
  %12 = load i32, i32* %mode.addr, align 4, !dbg !3838
  %idxprom9 = sext i32 %12 to i64, !dbg !3839
  %13 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !3839
  %j_dc_vlc10 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %13, i32 0, i32 2, !dbg !3840
  %arrayidx11 = getelementptr inbounds [3 x %struct.VLC*], [3 x %struct.VLC*]* %j_dc_vlc10, i64 0, i64 %idxprom9, !dbg !3839
  %14 = load %struct.VLC*, %struct.VLC** %arrayidx11, align 8, !dbg !3839
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %14, i32 0, i32 1, !dbg !3841
  %15 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !3841
  store %struct.GetBitContext* %11, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3842
  store [2 x i16]* %15, [2 x i16]** %table.addr.i, align 8, !dbg !3842
  store i32 9, i32* %bits.addr.i, align 4, !dbg !3842
  store i32 2, i32* %max_depth.addr.i, align 4, !dbg !3842
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3843
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %16, i32 0, i32 2, !dbg !3844
  %17 = load i32, i32* %index.i, align 8, !dbg !3844
  store i32 %17, i32* %re_index.i, align 4, !dbg !3795
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3845
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %18, i32 0, i32 4, !dbg !3846
  %19 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !3846
  store i32 %19, i32* %re_size_plus8.i, align 4, !dbg !3797
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3847
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %20, i32 0, i32 0, !dbg !3848
  %21 = load i8*, i8** %buffer.i, align 8, !dbg !3848
  %22 = load i32, i32* %re_index.i, align 4, !dbg !3849
  %shr.i = lshr i32 %22, 3, !dbg !3850
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !3851
  %add.ptr.i = getelementptr inbounds i8, i8* %21, i64 %idx.ext.i, !dbg !3851
  %23 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !3852
  %l.i = bitcast %union.unaligned_32* %23 to i32*, !dbg !3852
  %24 = load i32, i32* %l.i, align 1, !dbg !3852
  store i32 %24, i32* %x.addr.i.i, align 4, !dbg !3853
  %25 = load i32, i32* %x.addr.i.i, align 4, !dbg !3854
  %shl.i.i = shl i32 %25, 8, !dbg !3855
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !3856
  %26 = load i32, i32* %x.addr.i.i, align 4, !dbg !3857
  %shr.i.i = lshr i32 %26, 8, !dbg !3858
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !3859
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !3860
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !3861
  %27 = load i32, i32* %x.addr.i.i, align 4, !dbg !3862
  %shr3.i.i = lshr i32 %27, 16, !dbg !3863
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !3864
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !3865
  %28 = load i32, i32* %x.addr.i.i, align 4, !dbg !3866
  %shr6.i.i = lshr i32 %28, 16, !dbg !3867
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !3868
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !3869
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !3870
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !3871
  %29 = load i32, i32* %re_index.i, align 4, !dbg !3872
  %and.i = and i32 %29, 7, !dbg !3873
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !3874
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !3875
  %30 = load i32, i32* %re_cache.i, align 4, !dbg !3876
  %31 = load i32, i32* %bits.addr.i, align 4, !dbg !3877
  %conv.i = trunc i32 %31 to i8, !dbg !3877
  %call2.i = call i32 @NEG_USR32(i32 %30, i8 signext %conv.i) #6, !dbg !3878
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !3879
  %32 = load i32, i32* %index1.i, align 4, !dbg !3880
  %idxprom.i = zext i32 %32 to i64, !dbg !3881
  %33 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3881
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %33, i64 %idxprom.i, !dbg !3881
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !3881
  %34 = load i16, i16* %arrayidx3.i, align 2, !dbg !3881
  %conv4.i = sext i16 %34 to i32, !dbg !3881
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !3882
  %35 = load i32, i32* %index1.i, align 4, !dbg !3883
  %idxprom5.i = zext i32 %35 to i64, !dbg !3884
  %36 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3884
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %36, i64 %idxprom5.i, !dbg !3884
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !3884
  %37 = load i16, i16* %arrayidx7.i, align 2, !dbg !3884
  %conv8.i = sext i16 %37 to i32, !dbg !3884
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !3885
  %38 = load i32, i32* %max_depth.addr.i, align 4, !dbg !3886
  %cmp.i = icmp sgt i32 %38, 1, !dbg !3887
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !3888

land.lhs.true.i:                                  ; preds = %if.end
  %39 = load i32, i32* %n.i, align 4, !dbg !3889
  %cmp10.i = icmp slt i32 %39, 0, !dbg !3890
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !3891

if.then.i:                                        ; preds = %land.lhs.true.i
  %40 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3892
  %41 = load i32, i32* %re_index.i, align 4, !dbg !3893
  %42 = load i32, i32* %bits.addr.i, align 4, !dbg !3894
  %add.i = add i32 %41, %42, !dbg !3895
  %cmp12.i = icmp ugt i32 %40, %add.i, !dbg !3896
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !3897

cond.true.i:                                      ; preds = %if.then.i
  %43 = load i32, i32* %re_index.i, align 4, !dbg !3898
  %44 = load i32, i32* %bits.addr.i, align 4, !dbg !3899
  %add14.i = add i32 %43, %44, !dbg !3900
  br label %cond.end.i, !dbg !3901

cond.false.i:                                     ; preds = %if.then.i
  %45 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3902
  br label %cond.end.i, !dbg !3903

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %45, %cond.false.i ], !dbg !3904
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !3905
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3906
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %46, i32 0, i32 0, !dbg !3907
  %47 = load i8*, i8** %buffer15.i, align 8, !dbg !3907
  %48 = load i32, i32* %re_index.i, align 4, !dbg !3908
  %shr16.i = lshr i32 %48, 3, !dbg !3909
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !3910
  %add.ptr18.i = getelementptr inbounds i8, i8* %47, i64 %idx.ext17.i, !dbg !3910
  %49 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !3911
  %l19.i = bitcast %union.unaligned_32* %49 to i32*, !dbg !3911
  %50 = load i32, i32* %l19.i, align 1, !dbg !3911
  store i32 %50, i32* %x.addr.i81.i, align 4, !dbg !3912
  %51 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3913
  %shl.i82.i = shl i32 %51, 8, !dbg !3914
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !3915
  %52 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3916
  %shr.i84.i = lshr i32 %52, 8, !dbg !3917
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !3918
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !3919
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !3920
  %53 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3921
  %shr3.i88.i = lshr i32 %53, 16, !dbg !3922
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !3923
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !3924
  %54 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3925
  %shr6.i91.i = lshr i32 %54, 16, !dbg !3926
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !3927
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !3928
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !3929
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !3930
  %55 = load i32, i32* %re_index.i, align 4, !dbg !3931
  %and21.i = and i32 %55, 7, !dbg !3932
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !3933
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !3934
  %56 = load i32, i32* %n.i, align 4, !dbg !3935
  %sub.i = sub nsw i32 0, %56, !dbg !3936
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !3937
  %57 = load i32, i32* %re_cache.i, align 4, !dbg !3938
  %58 = load i32, i32* %nb_bits.i, align 4, !dbg !3939
  %conv23.i = trunc i32 %58 to i8, !dbg !3939
  %call24.i = call i32 @NEG_USR32(i32 %57, i8 signext %conv23.i) #6, !dbg !3940
  %59 = load i32, i32* %code.i, align 4, !dbg !3941
  %add25.i = add i32 %call24.i, %59, !dbg !3942
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !3943
  %60 = load i32, i32* %index1.i, align 4, !dbg !3944
  %idxprom26.i = zext i32 %60 to i64, !dbg !3945
  %61 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3945
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %61, i64 %idxprom26.i, !dbg !3945
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !3945
  %62 = load i16, i16* %arrayidx28.i, align 2, !dbg !3945
  %conv29.i = sext i16 %62 to i32, !dbg !3945
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !3946
  %63 = load i32, i32* %index1.i, align 4, !dbg !3947
  %idxprom30.i = zext i32 %63 to i64, !dbg !3948
  %64 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3948
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %64, i64 %idxprom30.i, !dbg !3948
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !3948
  %65 = load i16, i16* %arrayidx32.i, align 2, !dbg !3948
  %conv33.i = sext i16 %65 to i32, !dbg !3948
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !3949
  %66 = load i32, i32* %max_depth.addr.i, align 4, !dbg !3950
  %cmp34.i = icmp sgt i32 %66, 2, !dbg !3951
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !3952

land.lhs.true36.i:                                ; preds = %cond.end.i
  %67 = load i32, i32* %n.i, align 4, !dbg !3953
  %cmp37.i = icmp slt i32 %67, 0, !dbg !3954
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !3955

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %68 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3956
  %69 = load i32, i32* %re_index.i, align 4, !dbg !3957
  %70 = load i32, i32* %nb_bits.i, align 4, !dbg !3958
  %add40.i = add i32 %69, %70, !dbg !3959
  %cmp41.i = icmp ugt i32 %68, %add40.i, !dbg !3960
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !3961

cond.true43.i:                                    ; preds = %if.then39.i
  %71 = load i32, i32* %re_index.i, align 4, !dbg !3962
  %72 = load i32, i32* %nb_bits.i, align 4, !dbg !3963
  %add44.i = add i32 %71, %72, !dbg !3964
  br label %cond.end46.i, !dbg !3965

cond.false45.i:                                   ; preds = %if.then39.i
  %73 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3966
  br label %cond.end46.i, !dbg !3967

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %73, %cond.false45.i ], !dbg !3968
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !3969
  %74 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3970
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %74, i32 0, i32 0, !dbg !3971
  %75 = load i8*, i8** %buffer48.i, align 8, !dbg !3971
  %76 = load i32, i32* %re_index.i, align 4, !dbg !3972
  %shr49.i = lshr i32 %76, 3, !dbg !3973
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !3974
  %add.ptr51.i = getelementptr inbounds i8, i8* %75, i64 %idx.ext50.i, !dbg !3974
  %77 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !3975
  %l52.i = bitcast %union.unaligned_32* %77 to i32*, !dbg !3975
  %78 = load i32, i32* %l52.i, align 1, !dbg !3975
  store i32 %78, i32* %x.addr.i96.i, align 4, !dbg !3976
  %79 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3977
  %shl.i97.i = shl i32 %79, 8, !dbg !3978
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !3979
  %80 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3980
  %shr.i99.i = lshr i32 %80, 8, !dbg !3981
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !3982
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !3983
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !3984
  %81 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3985
  %shr3.i103.i = lshr i32 %81, 16, !dbg !3986
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !3987
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !3988
  %82 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3989
  %shr6.i106.i = lshr i32 %82, 16, !dbg !3990
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !3991
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !3992
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !3993
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !3994
  %83 = load i32, i32* %re_index.i, align 4, !dbg !3995
  %and54.i = and i32 %83, 7, !dbg !3996
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !3997
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !3998
  %84 = load i32, i32* %n.i, align 4, !dbg !3999
  %sub56.i = sub nsw i32 0, %84, !dbg !4000
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !4001
  %85 = load i32, i32* %re_cache.i, align 4, !dbg !4002
  %86 = load i32, i32* %nb_bits.i, align 4, !dbg !4003
  %conv57.i = trunc i32 %86 to i8, !dbg !4003
  %call58.i = call i32 @NEG_USR32(i32 %85, i8 signext %conv57.i) #6, !dbg !4004
  %87 = load i32, i32* %code.i, align 4, !dbg !4005
  %add59.i = add i32 %call58.i, %87, !dbg !4006
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !4007
  %88 = load i32, i32* %index1.i, align 4, !dbg !4008
  %idxprom60.i = zext i32 %88 to i64, !dbg !4009
  %89 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4009
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %89, i64 %idxprom60.i, !dbg !4009
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !4009
  %90 = load i16, i16* %arrayidx62.i, align 2, !dbg !4009
  %conv63.i = sext i16 %90 to i32, !dbg !4009
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !4010
  %91 = load i32, i32* %index1.i, align 4, !dbg !4011
  %idxprom64.i = zext i32 %91 to i64, !dbg !4012
  %92 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4012
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %92, i64 %idxprom64.i, !dbg !4012
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !4012
  %93 = load i16, i16* %arrayidx66.i, align 2, !dbg !4012
  %conv67.i = sext i16 %93 to i32, !dbg !4012
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !4013
  br label %if.end.i, !dbg !4014

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !4015

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.end
  %94 = load i32, i32* %n.i, align 4, !dbg !4016
  %95 = load i32, i32* %re_cache.i, align 4, !dbg !4017
  %shl70.i = shl i32 %95, %94, !dbg !4017
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !4017
  %96 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4018
  %97 = load i32, i32* %re_index.i, align 4, !dbg !4019
  %98 = load i32, i32* %n.i, align 4, !dbg !4020
  %add71.i = add i32 %97, %98, !dbg !4021
  %cmp72.i = icmp ugt i32 %96, %add71.i, !dbg !4022
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !4023

cond.true74.i:                                    ; preds = %if.end68.i
  %99 = load i32, i32* %re_index.i, align 4, !dbg !4024
  %100 = load i32, i32* %n.i, align 4, !dbg !4025
  %add75.i = add i32 %99, %100, !dbg !4026
  br label %get_vlc2.exit, !dbg !4027

cond.false76.i:                                   ; preds = %if.end68.i
  %101 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4028
  br label %get_vlc2.exit, !dbg !4029

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %101, %cond.false76.i ], !dbg !4030
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !4031
  %102 = load i32, i32* %re_index.i, align 4, !dbg !4032
  %103 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4033
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %103, i32 0, i32 2, !dbg !4034
  store i32 %102, i32* %index80.i, align 8, !dbg !4035
  %104 = load i32, i32* %code.i, align 4, !dbg !4036
  store i32 %104, i32* %i, align 4, !dbg !4037
  %105 = load i32, i32* %i, align 4, !dbg !4038
  %cmp13 = icmp sgt i32 %105, 16, !dbg !4039
  %conv14 = zext i1 %cmp13 to i32, !dbg !4039
  store i32 %conv14, i32* %c, align 4, !dbg !4040
  %106 = load i32, i32* %c, align 4, !dbg !4041
  %107 = load i32*, i32** %final.addr, align 8, !dbg !4042
  store i32 %106, i32* %107, align 4, !dbg !4043
  %108 = load i32, i32* %c, align 4, !dbg !4044
  %mul = mul nsw i32 17, %108, !dbg !4045
  %109 = load i32, i32* %i, align 4, !dbg !4046
  %sub = sub nsw i32 %109, %mul, !dbg !4046
  store i32 %sub, i32* %i, align 4, !dbg !4046
  %110 = load i32, i32* %i, align 4, !dbg !4047
  %cmp15 = icmp sle i32 %110, 0, !dbg !4049
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !4050

if.then17:                                        ; preds = %get_vlc2.exit
  %111 = load i32*, i32** %level.addr, align 8, !dbg !4051
  store i32 0, i32* %111, align 4, !dbg !4053
  %112 = load i32, i32* %i, align 4, !dbg !4054
  %sub18 = sub nsw i32 0, %112, !dbg !4055
  store i32 %sub18, i32* %retval, align 4, !dbg !4056
  br label %return, !dbg !4056

if.end19:                                         ; preds = %get_vlc2.exit
  %113 = load i32, i32* %i, align 4, !dbg !4057
  %add = add nsw i32 %113, 1, !dbg !4058
  %shr = ashr i32 %add, 1, !dbg !4059
  store i32 %shr, i32* %c, align 4, !dbg !4060
  %114 = load i32, i32* %c, align 4, !dbg !4061
  %cmp20 = icmp sgt i32 %114, 1, !dbg !4062
  %conv21 = zext i1 %cmp20 to i32, !dbg !4062
  %115 = load i32, i32* %c, align 4, !dbg !4063
  %sub22 = sub nsw i32 %115, %conv21, !dbg !4063
  store i32 %sub22, i32* %c, align 4, !dbg !4063
  %116 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4064
  %gb23 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %116, i32 0, i32 19, !dbg !4065
  %117 = load %struct.GetBitContext*, %struct.GetBitContext** %gb23, align 8, !dbg !4065
  %118 = load i32, i32* %c, align 4, !dbg !4066
  %call24 = call i32 @get_bits(%struct.GetBitContext* %117, i32 %118), !dbg !4067
  store i32 %call24, i32* %e, align 4, !dbg !4068
  %119 = load i32, i32* %i, align 4, !dbg !4069
  %idxprom25 = sext i32 %119 to i64, !dbg !4070
  %arrayidx26 = getelementptr inbounds [17 x i8], [17 x i8]* @dc_index_offset, i64 0, i64 %idxprom25, !dbg !4070
  %120 = load i8, i8* %arrayidx26, align 1, !dbg !4070
  %conv27 = zext i8 %120 to i32, !dbg !4070
  %121 = load i32, i32* %e, align 4, !dbg !4071
  %shr28 = ashr i32 %121, 1, !dbg !4072
  %add29 = add nsw i32 %conv27, %shr28, !dbg !4073
  store i32 %add29, i32* %i, align 4, !dbg !4074
  %122 = load i32, i32* %e, align 4, !dbg !4075
  %and = and i32 %122, 1, !dbg !4076
  %sub30 = sub nsw i32 0, %and, !dbg !4077
  store i32 %sub30, i32* %e, align 4, !dbg !4078
  %123 = load i32, i32* %i, align 4, !dbg !4079
  %124 = load i32, i32* %e, align 4, !dbg !4080
  %xor = xor i32 %123, %124, !dbg !4081
  %125 = load i32, i32* %e, align 4, !dbg !4082
  %sub31 = sub nsw i32 %xor, %125, !dbg !4083
  %126 = load i32*, i32** %level.addr, align 8, !dbg !4084
  store i32 %sub31, i32* %126, align 4, !dbg !4085
  store i32 0, i32* %retval, align 4, !dbg !4086
  br label %return, !dbg !4086

return:                                           ; preds = %if.end19, %if.then17
  %127 = load i32, i32* %retval, align 4, !dbg !4087
  ret i32 %127, !dbg !4087
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @x8_select_ac_table(%struct.IntraX8Context* %w, i32 %mode) #5 !dbg !4088 {
entry:
  %w.addr = alloca %struct.IntraX8Context*, align 8
  %mode.addr = alloca i32, align 4
  %table_index = alloca i32, align 4
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !4091, metadata !1740), !dbg !4092
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4093, metadata !1740), !dbg !4094
  call void @llvm.dbg.declare(metadata i32* %table_index, metadata !4095, metadata !1740), !dbg !4096
  %0 = load i32, i32* %mode.addr, align 4, !dbg !4097
  %idxprom = sext i32 %0 to i64, !dbg !4099
  %1 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4099
  %j_ac_vlc = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %1, i32 0, i32 0, !dbg !4100
  %arrayidx = getelementptr inbounds [4 x %struct.VLC*], [4 x %struct.VLC*]* %j_ac_vlc, i64 0, i64 %idxprom, !dbg !4099
  %2 = load %struct.VLC*, %struct.VLC** %arrayidx, align 8, !dbg !4099
  %tobool = icmp ne %struct.VLC* %2, null, !dbg !4099
  br i1 %tobool, label %if.then, label %if.end, !dbg !4101

if.then:                                          ; preds = %entry
  br label %return, !dbg !4102

if.end:                                           ; preds = %entry
  %3 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4103
  %gb = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %3, i32 0, i32 19, !dbg !4104
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4104
  %call = call i32 @get_bits(%struct.GetBitContext* %4, i32 3), !dbg !4105
  store i32 %call, i32* %table_index, align 4, !dbg !4106
  %5 = load i32, i32* %table_index, align 4, !dbg !4107
  %idxprom1 = sext i32 %5 to i64, !dbg !4108
  %6 = load i32, i32* %mode.addr, align 4, !dbg !4109
  %shr = ashr i32 %6, 1, !dbg !4110
  %idxprom2 = sext i32 %shr to i64, !dbg !4108
  %7 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4111
  %quant = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %7, i32 0, i32 14, !dbg !4112
  %8 = load i32, i32* %quant, align 8, !dbg !4112
  %cmp = icmp slt i32 %8, 13, !dbg !4113
  %conv = zext i1 %cmp to i32, !dbg !4113
  %idxprom3 = sext i32 %conv to i64, !dbg !4108
  %arrayidx4 = getelementptr inbounds [2 x [2 x [8 x %struct.VLC]]], [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc, i64 0, i64 %idxprom3, !dbg !4108
  %arrayidx5 = getelementptr inbounds [2 x [8 x %struct.VLC]], [2 x [8 x %struct.VLC]]* %arrayidx4, i64 0, i64 %idxprom2, !dbg !4108
  %arrayidx6 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* %arrayidx5, i64 0, i64 %idxprom1, !dbg !4108
  %9 = load i32, i32* %mode.addr, align 4, !dbg !4114
  %idxprom7 = sext i32 %9 to i64, !dbg !4115
  %10 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4115
  %j_ac_vlc8 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %10, i32 0, i32 0, !dbg !4116
  %arrayidx9 = getelementptr inbounds [4 x %struct.VLC*], [4 x %struct.VLC*]* %j_ac_vlc8, i64 0, i64 %idxprom7, !dbg !4115
  store %struct.VLC* %arrayidx6, %struct.VLC** %arrayidx9, align 8, !dbg !4117
  br label %return, !dbg !4118

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !4119
}

; Function Attrs: nounwind uwtable
define internal void @x8_get_ac_rlf(%struct.IntraX8Context* %w, i32 %mode, i32* %run, i32* %level, i32* %final) #4 !dbg !1718 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !3401, metadata !1740), !dbg !4121
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !3401, metadata !1740), !dbg !4124
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !3401, metadata !1740), !dbg !4126
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3423, metadata !1740), !dbg !4128
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3425, metadata !1740), !dbg !4129
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3427, metadata !1740), !dbg !4130
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3429, metadata !1740), !dbg !4131
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3431, metadata !1740), !dbg !4132
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3433, metadata !1740), !dbg !4133
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3435, metadata !1740), !dbg !4134
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3437, metadata !1740), !dbg !4135
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3439, metadata !1740), !dbg !4136
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3441, metadata !1740), !dbg !4137
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3443, metadata !1740), !dbg !4138
  %w.addr = alloca %struct.IntraX8Context*, align 8
  %mode.addr = alloca i32, align 4
  %run.addr = alloca i32*, align 8
  %level.addr = alloca i32*, align 8
  %final.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %e = alloca i32, align 4
  %t = alloca i32, align 4
  %l = alloca i32, align 4
  %sm = alloca i32, align 4
  %mask = alloca i32, align 4
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !4139, metadata !1740), !dbg !4140
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4141, metadata !1740), !dbg !4142
  store i32* %run, i32** %run.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %run.addr, metadata !4143, metadata !1740), !dbg !4144
  store i32* %level, i32** %level.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %level.addr, metadata !4145, metadata !1740), !dbg !4146
  store i32* %final, i32** %final.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %final.addr, metadata !4147, metadata !1740), !dbg !4148
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4149, metadata !1740), !dbg !4150
  call void @llvm.dbg.declare(metadata i32* %e, metadata !4151, metadata !1740), !dbg !4152
  %0 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4153
  %gb = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %0, i32 0, i32 19, !dbg !4154
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4154
  %2 = load i32, i32* %mode.addr, align 4, !dbg !4155
  %idxprom = sext i32 %2 to i64, !dbg !4156
  %3 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4156
  %j_ac_vlc = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %3, i32 0, i32 0, !dbg !4157
  %arrayidx = getelementptr inbounds [4 x %struct.VLC*], [4 x %struct.VLC*]* %j_ac_vlc, i64 0, i64 %idxprom, !dbg !4156
  %4 = load %struct.VLC*, %struct.VLC** %arrayidx, align 8, !dbg !4156
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %4, i32 0, i32 1, !dbg !4158
  %5 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !4158
  store %struct.GetBitContext* %1, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4159
  store [2 x i16]* %5, [2 x i16]** %table.addr.i, align 8, !dbg !4159
  store i32 9, i32* %bits.addr.i, align 4, !dbg !4159
  store i32 2, i32* %max_depth.addr.i, align 4, !dbg !4159
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4160
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !4161
  %7 = load i32, i32* %index.i, align 8, !dbg !4161
  store i32 %7, i32* %re_index.i, align 4, !dbg !4133
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4162
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %8, i32 0, i32 4, !dbg !4163
  %9 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !4163
  store i32 %9, i32* %re_size_plus8.i, align 4, !dbg !4135
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4164
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %10, i32 0, i32 0, !dbg !4165
  %11 = load i8*, i8** %buffer.i, align 8, !dbg !4165
  %12 = load i32, i32* %re_index.i, align 4, !dbg !4166
  %shr.i = lshr i32 %12, 3, !dbg !4167
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !4168
  %add.ptr.i = getelementptr inbounds i8, i8* %11, i64 %idx.ext.i, !dbg !4168
  %13 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !4169
  %l.i = bitcast %union.unaligned_32* %13 to i32*, !dbg !4169
  %14 = load i32, i32* %l.i, align 1, !dbg !4169
  store i32 %14, i32* %x.addr.i.i, align 4, !dbg !4170
  %15 = load i32, i32* %x.addr.i.i, align 4, !dbg !4171
  %shl.i.i = shl i32 %15, 8, !dbg !4172
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !4173
  %16 = load i32, i32* %x.addr.i.i, align 4, !dbg !4174
  %shr.i.i = lshr i32 %16, 8, !dbg !4175
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !4176
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !4177
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !4178
  %17 = load i32, i32* %x.addr.i.i, align 4, !dbg !4179
  %shr3.i.i = lshr i32 %17, 16, !dbg !4180
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !4181
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !4182
  %18 = load i32, i32* %x.addr.i.i, align 4, !dbg !4183
  %shr6.i.i = lshr i32 %18, 16, !dbg !4184
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !4185
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !4186
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !4187
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !4188
  %19 = load i32, i32* %re_index.i, align 4, !dbg !4189
  %and.i = and i32 %19, 7, !dbg !4190
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !4191
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !4192
  %20 = load i32, i32* %re_cache.i, align 4, !dbg !4193
  %21 = load i32, i32* %bits.addr.i, align 4, !dbg !4194
  %conv.i = trunc i32 %21 to i8, !dbg !4194
  %call2.i = call i32 @NEG_USR32(i32 %20, i8 signext %conv.i) #6, !dbg !4195
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !4196
  %22 = load i32, i32* %index1.i, align 4, !dbg !4197
  %idxprom.i = zext i32 %22 to i64, !dbg !4198
  %23 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4198
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %23, i64 %idxprom.i, !dbg !4198
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !4198
  %24 = load i16, i16* %arrayidx3.i, align 2, !dbg !4198
  %conv4.i = sext i16 %24 to i32, !dbg !4198
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !4199
  %25 = load i32, i32* %index1.i, align 4, !dbg !4200
  %idxprom5.i = zext i32 %25 to i64, !dbg !4201
  %26 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4201
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %26, i64 %idxprom5.i, !dbg !4201
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !4201
  %27 = load i16, i16* %arrayidx7.i, align 2, !dbg !4201
  %conv8.i = sext i16 %27 to i32, !dbg !4201
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !4202
  %28 = load i32, i32* %max_depth.addr.i, align 4, !dbg !4203
  %cmp.i = icmp sgt i32 %28, 1, !dbg !4204
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !4205

land.lhs.true.i:                                  ; preds = %entry
  %29 = load i32, i32* %n.i, align 4, !dbg !4206
  %cmp10.i = icmp slt i32 %29, 0, !dbg !4207
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !4208

if.then.i:                                        ; preds = %land.lhs.true.i
  %30 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4209
  %31 = load i32, i32* %re_index.i, align 4, !dbg !4210
  %32 = load i32, i32* %bits.addr.i, align 4, !dbg !4211
  %add.i = add i32 %31, %32, !dbg !4212
  %cmp12.i = icmp ugt i32 %30, %add.i, !dbg !4213
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !4214

cond.true.i:                                      ; preds = %if.then.i
  %33 = load i32, i32* %re_index.i, align 4, !dbg !4215
  %34 = load i32, i32* %bits.addr.i, align 4, !dbg !4216
  %add14.i = add i32 %33, %34, !dbg !4217
  br label %cond.end.i, !dbg !4218

cond.false.i:                                     ; preds = %if.then.i
  %35 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4219
  br label %cond.end.i, !dbg !4220

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %35, %cond.false.i ], !dbg !4221
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !4222
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4223
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %36, i32 0, i32 0, !dbg !4224
  %37 = load i8*, i8** %buffer15.i, align 8, !dbg !4224
  %38 = load i32, i32* %re_index.i, align 4, !dbg !4225
  %shr16.i = lshr i32 %38, 3, !dbg !4226
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !4227
  %add.ptr18.i = getelementptr inbounds i8, i8* %37, i64 %idx.ext17.i, !dbg !4227
  %39 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !4228
  %l19.i = bitcast %union.unaligned_32* %39 to i32*, !dbg !4228
  %40 = load i32, i32* %l19.i, align 1, !dbg !4228
  store i32 %40, i32* %x.addr.i81.i, align 4, !dbg !4229
  %41 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4230
  %shl.i82.i = shl i32 %41, 8, !dbg !4231
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !4232
  %42 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4233
  %shr.i84.i = lshr i32 %42, 8, !dbg !4234
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !4235
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !4236
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !4237
  %43 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4238
  %shr3.i88.i = lshr i32 %43, 16, !dbg !4239
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !4240
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !4241
  %44 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4242
  %shr6.i91.i = lshr i32 %44, 16, !dbg !4243
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !4244
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !4245
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !4246
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !4247
  %45 = load i32, i32* %re_index.i, align 4, !dbg !4248
  %and21.i = and i32 %45, 7, !dbg !4249
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !4250
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !4251
  %46 = load i32, i32* %n.i, align 4, !dbg !4252
  %sub.i = sub nsw i32 0, %46, !dbg !4253
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !4254
  %47 = load i32, i32* %re_cache.i, align 4, !dbg !4255
  %48 = load i32, i32* %nb_bits.i, align 4, !dbg !4256
  %conv23.i = trunc i32 %48 to i8, !dbg !4256
  %call24.i = call i32 @NEG_USR32(i32 %47, i8 signext %conv23.i) #6, !dbg !4257
  %49 = load i32, i32* %code.i, align 4, !dbg !4258
  %add25.i = add i32 %call24.i, %49, !dbg !4259
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !4260
  %50 = load i32, i32* %index1.i, align 4, !dbg !4261
  %idxprom26.i = zext i32 %50 to i64, !dbg !4262
  %51 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4262
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %51, i64 %idxprom26.i, !dbg !4262
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !4262
  %52 = load i16, i16* %arrayidx28.i, align 2, !dbg !4262
  %conv29.i = sext i16 %52 to i32, !dbg !4262
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !4263
  %53 = load i32, i32* %index1.i, align 4, !dbg !4264
  %idxprom30.i = zext i32 %53 to i64, !dbg !4265
  %54 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4265
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %54, i64 %idxprom30.i, !dbg !4265
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !4265
  %55 = load i16, i16* %arrayidx32.i, align 2, !dbg !4265
  %conv33.i = sext i16 %55 to i32, !dbg !4265
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !4266
  %56 = load i32, i32* %max_depth.addr.i, align 4, !dbg !4267
  %cmp34.i = icmp sgt i32 %56, 2, !dbg !4268
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !4269

land.lhs.true36.i:                                ; preds = %cond.end.i
  %57 = load i32, i32* %n.i, align 4, !dbg !4270
  %cmp37.i = icmp slt i32 %57, 0, !dbg !4271
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !4272

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %58 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4273
  %59 = load i32, i32* %re_index.i, align 4, !dbg !4274
  %60 = load i32, i32* %nb_bits.i, align 4, !dbg !4275
  %add40.i = add i32 %59, %60, !dbg !4276
  %cmp41.i = icmp ugt i32 %58, %add40.i, !dbg !4277
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !4278

cond.true43.i:                                    ; preds = %if.then39.i
  %61 = load i32, i32* %re_index.i, align 4, !dbg !4279
  %62 = load i32, i32* %nb_bits.i, align 4, !dbg !4280
  %add44.i = add i32 %61, %62, !dbg !4281
  br label %cond.end46.i, !dbg !4282

cond.false45.i:                                   ; preds = %if.then39.i
  %63 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4283
  br label %cond.end46.i, !dbg !4284

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %63, %cond.false45.i ], !dbg !4285
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !4286
  %64 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4287
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %64, i32 0, i32 0, !dbg !4288
  %65 = load i8*, i8** %buffer48.i, align 8, !dbg !4288
  %66 = load i32, i32* %re_index.i, align 4, !dbg !4289
  %shr49.i = lshr i32 %66, 3, !dbg !4290
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !4291
  %add.ptr51.i = getelementptr inbounds i8, i8* %65, i64 %idx.ext50.i, !dbg !4291
  %67 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !4292
  %l52.i = bitcast %union.unaligned_32* %67 to i32*, !dbg !4292
  %68 = load i32, i32* %l52.i, align 1, !dbg !4292
  store i32 %68, i32* %x.addr.i96.i, align 4, !dbg !4293
  %69 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4294
  %shl.i97.i = shl i32 %69, 8, !dbg !4295
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !4296
  %70 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4297
  %shr.i99.i = lshr i32 %70, 8, !dbg !4298
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !4299
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !4300
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !4301
  %71 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4302
  %shr3.i103.i = lshr i32 %71, 16, !dbg !4303
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !4304
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !4305
  %72 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4306
  %shr6.i106.i = lshr i32 %72, 16, !dbg !4307
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !4308
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !4309
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !4310
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !4311
  %73 = load i32, i32* %re_index.i, align 4, !dbg !4312
  %and54.i = and i32 %73, 7, !dbg !4313
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !4314
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !4315
  %74 = load i32, i32* %n.i, align 4, !dbg !4316
  %sub56.i = sub nsw i32 0, %74, !dbg !4317
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !4318
  %75 = load i32, i32* %re_cache.i, align 4, !dbg !4319
  %76 = load i32, i32* %nb_bits.i, align 4, !dbg !4320
  %conv57.i = trunc i32 %76 to i8, !dbg !4320
  %call58.i = call i32 @NEG_USR32(i32 %75, i8 signext %conv57.i) #6, !dbg !4321
  %77 = load i32, i32* %code.i, align 4, !dbg !4322
  %add59.i = add i32 %call58.i, %77, !dbg !4323
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !4324
  %78 = load i32, i32* %index1.i, align 4, !dbg !4325
  %idxprom60.i = zext i32 %78 to i64, !dbg !4326
  %79 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4326
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %79, i64 %idxprom60.i, !dbg !4326
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !4326
  %80 = load i16, i16* %arrayidx62.i, align 2, !dbg !4326
  %conv63.i = sext i16 %80 to i32, !dbg !4326
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !4327
  %81 = load i32, i32* %index1.i, align 4, !dbg !4328
  %idxprom64.i = zext i32 %81 to i64, !dbg !4329
  %82 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4329
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %82, i64 %idxprom64.i, !dbg !4329
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !4329
  %83 = load i16, i16* %arrayidx66.i, align 2, !dbg !4329
  %conv67.i = sext i16 %83 to i32, !dbg !4329
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !4330
  br label %if.end.i, !dbg !4331

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !4332

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %entry
  %84 = load i32, i32* %n.i, align 4, !dbg !4333
  %85 = load i32, i32* %re_cache.i, align 4, !dbg !4334
  %shl70.i = shl i32 %85, %84, !dbg !4334
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !4334
  %86 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4335
  %87 = load i32, i32* %re_index.i, align 4, !dbg !4336
  %88 = load i32, i32* %n.i, align 4, !dbg !4337
  %add71.i = add i32 %87, %88, !dbg !4338
  %cmp72.i = icmp ugt i32 %86, %add71.i, !dbg !4339
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !4340

cond.true74.i:                                    ; preds = %if.end68.i
  %89 = load i32, i32* %re_index.i, align 4, !dbg !4341
  %90 = load i32, i32* %n.i, align 4, !dbg !4342
  %add75.i = add i32 %89, %90, !dbg !4343
  br label %get_vlc2.exit, !dbg !4344

cond.false76.i:                                   ; preds = %if.end68.i
  %91 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4345
  br label %get_vlc2.exit, !dbg !4346

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %91, %cond.false76.i ], !dbg !4347
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !4348
  %92 = load i32, i32* %re_index.i, align 4, !dbg !4349
  %93 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4350
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %93, i32 0, i32 2, !dbg !4351
  store i32 %92, i32* %index80.i, align 8, !dbg !4352
  %94 = load i32, i32* %code.i, align 4, !dbg !4353
  store i32 %94, i32* %i, align 4, !dbg !4354
  %95 = load i32, i32* %i, align 4, !dbg !4355
  %cmp = icmp slt i32 %95, 46, !dbg !4357
  br i1 %cmp, label %if.then, label %if.else, !dbg !4358

if.then:                                          ; preds = %get_vlc2.exit
  call void @llvm.dbg.declare(metadata i32* %t, metadata !4359, metadata !1740), !dbg !4361
  call void @llvm.dbg.declare(metadata i32* %l, metadata !4362, metadata !1740), !dbg !4363
  %96 = load i32, i32* %i, align 4, !dbg !4364
  %cmp1 = icmp slt i32 %96, 0, !dbg !4366
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !4367

if.then2:                                         ; preds = %if.then
  %97 = load i32*, i32** %run.addr, align 8, !dbg !4368
  store i32 64, i32* %97, align 4, !dbg !4370
  %98 = load i32*, i32** %final.addr, align 8, !dbg !4371
  store i32 64, i32* %98, align 4, !dbg !4372
  %99 = load i32*, i32** %level.addr, align 8, !dbg !4373
  store i32 64, i32* %99, align 4, !dbg !4374
  br label %return, !dbg !4375

if.end:                                           ; preds = %if.then
  %100 = load i32, i32* %i, align 4, !dbg !4376
  %cmp3 = icmp sgt i32 %100, 22, !dbg !4377
  %conv = zext i1 %cmp3 to i32, !dbg !4377
  store i32 %conv, i32* %t, align 4, !dbg !4378
  %101 = load i32*, i32** %final.addr, align 8, !dbg !4379
  store i32 %conv, i32* %101, align 4, !dbg !4380
  %102 = load i32, i32* %t, align 4, !dbg !4381
  %mul = mul nsw i32 23, %102, !dbg !4382
  %103 = load i32, i32* %i, align 4, !dbg !4383
  %sub = sub nsw i32 %103, %mul, !dbg !4383
  store i32 %sub, i32* %i, align 4, !dbg !4383
  %104 = load i32, i32* %i, align 4, !dbg !4384
  %and = and i32 %104, 30, !dbg !4385
  %shr = ashr i32 15007744, %and, !dbg !4386
  %and4 = and i32 %shr, 3, !dbg !4387
  store i32 %and4, i32* %l, align 4, !dbg !4388
  %105 = load i32, i32* %l, align 4, !dbg !4389
  %shl = shl i32 %105, 3, !dbg !4390
  %shr5 = ashr i32 66319, %shl, !dbg !4391
  store i32 %shr5, i32* %t, align 4, !dbg !4392
  %106 = load i32, i32* %i, align 4, !dbg !4393
  %107 = load i32, i32* %t, align 4, !dbg !4394
  %and6 = and i32 %106, %107, !dbg !4395
  %108 = load i32*, i32** %run.addr, align 8, !dbg !4396
  store i32 %and6, i32* %108, align 4, !dbg !4397
  %109 = load i32, i32* %l, align 4, !dbg !4398
  %110 = load i32*, i32** %level.addr, align 8, !dbg !4399
  store i32 %109, i32* %110, align 4, !dbg !4400
  br label %if.end53, !dbg !4401

if.else:                                          ; preds = %get_vlc2.exit
  %111 = load i32, i32* %i, align 4, !dbg !4402
  %cmp7 = icmp slt i32 %111, 73, !dbg !4405
  br i1 %cmp7, label %if.then9, label %if.else26, !dbg !4402

if.then9:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %sm, metadata !4406, metadata !1740), !dbg !4408
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !4409, metadata !1740), !dbg !4410
  %112 = load i32, i32* %i, align 4, !dbg !4411
  %sub10 = sub nsw i32 %112, 46, !dbg !4411
  store i32 %sub10, i32* %i, align 4, !dbg !4411
  %113 = load i32, i32* %i, align 4, !dbg !4412
  %idxprom11 = sext i32 %113 to i64, !dbg !4413
  %arrayidx12 = getelementptr inbounds [27 x i32], [27 x i32]* @ac_decode_table, i64 0, i64 %idxprom11, !dbg !4413
  %114 = load i32, i32* %arrayidx12, align 4, !dbg !4413
  store i32 %114, i32* %sm, align 4, !dbg !4414
  %115 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4415
  %gb13 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %115, i32 0, i32 19, !dbg !4416
  %116 = load %struct.GetBitContext*, %struct.GetBitContext** %gb13, align 8, !dbg !4416
  %117 = load i32, i32* %sm, align 4, !dbg !4417
  %and14 = and i32 %117, 15, !dbg !4418
  %call15 = call i32 @get_bits(%struct.GetBitContext* %116, i32 %and14), !dbg !4419
  store i32 %call15, i32* %e, align 4, !dbg !4420
  %118 = load i32, i32* %sm, align 4, !dbg !4421
  %shr16 = lshr i32 %118, 8, !dbg !4421
  store i32 %shr16, i32* %sm, align 4, !dbg !4421
  %119 = load i32, i32* %sm, align 4, !dbg !4422
  %and17 = and i32 %119, 255, !dbg !4423
  store i32 %and17, i32* %mask, align 4, !dbg !4424
  %120 = load i32, i32* %sm, align 4, !dbg !4425
  %shr18 = lshr i32 %120, 8, !dbg !4425
  store i32 %shr18, i32* %sm, align 4, !dbg !4425
  %121 = load i32, i32* %sm, align 4, !dbg !4426
  %and19 = and i32 %121, 255, !dbg !4427
  %122 = load i32, i32* %e, align 4, !dbg !4428
  %123 = load i32, i32* %mask, align 4, !dbg !4429
  %and20 = and i32 %122, %123, !dbg !4430
  %add = add i32 %and19, %and20, !dbg !4431
  %124 = load i32*, i32** %run.addr, align 8, !dbg !4432
  store i32 %add, i32* %124, align 4, !dbg !4433
  %125 = load i32, i32* %sm, align 4, !dbg !4434
  %shr21 = lshr i32 %125, 8, !dbg !4435
  %126 = load i32, i32* %e, align 4, !dbg !4436
  %127 = load i32, i32* %mask, align 4, !dbg !4437
  %neg = xor i32 %127, -1, !dbg !4438
  %and22 = and i32 %126, %neg, !dbg !4439
  %add23 = add i32 %shr21, %and22, !dbg !4440
  %128 = load i32*, i32** %level.addr, align 8, !dbg !4441
  store i32 %add23, i32* %128, align 4, !dbg !4442
  %129 = load i32, i32* %i, align 4, !dbg !4443
  %cmp24 = icmp sgt i32 %129, 12, !dbg !4444
  %conv25 = zext i1 %cmp24 to i32, !dbg !4444
  %130 = load i32*, i32** %final.addr, align 8, !dbg !4445
  store i32 %conv25, i32* %130, align 4, !dbg !4446
  br label %if.end52, !dbg !4447

if.else26:                                        ; preds = %if.else
  %131 = load i32, i32* %i, align 4, !dbg !4448
  %cmp27 = icmp slt i32 %131, 75, !dbg !4451
  br i1 %cmp27, label %if.then29, label %if.else41, !dbg !4448

if.then29:                                        ; preds = %if.else26
  %132 = load i32, i32* %i, align 4, !dbg !4452
  %and30 = and i32 %132, 1, !dbg !4454
  %tobool = icmp ne i32 %and30, 0, !dbg !4455
  %lnot = xor i1 %tobool, true, !dbg !4455
  %lnot.ext = zext i1 %lnot to i32, !dbg !4455
  %133 = load i32*, i32** %final.addr, align 8, !dbg !4456
  store i32 %lnot.ext, i32* %133, align 4, !dbg !4457
  %134 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4458
  %gb31 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %134, i32 0, i32 19, !dbg !4459
  %135 = load %struct.GetBitContext*, %struct.GetBitContext** %gb31, align 8, !dbg !4459
  %call32 = call i32 @get_bits(%struct.GetBitContext* %135, i32 5), !dbg !4460
  store i32 %call32, i32* %e, align 4, !dbg !4461
  %136 = load i32, i32* %e, align 4, !dbg !4462
  %idxprom33 = sext i32 %136 to i64, !dbg !4463
  %arrayidx34 = getelementptr inbounds [32 x i8], [32 x i8]* @x8_get_ac_rlf.crazy_mix_runlevel, i64 0, i64 %idxprom33, !dbg !4463
  %137 = load i8, i8* %arrayidx34, align 1, !dbg !4463
  %conv35 = zext i8 %137 to i32, !dbg !4463
  %shr36 = ashr i32 %conv35, 4, !dbg !4464
  %138 = load i32*, i32** %run.addr, align 8, !dbg !4465
  store i32 %shr36, i32* %138, align 4, !dbg !4466
  %139 = load i32, i32* %e, align 4, !dbg !4467
  %idxprom37 = sext i32 %139 to i64, !dbg !4468
  %arrayidx38 = getelementptr inbounds [32 x i8], [32 x i8]* @x8_get_ac_rlf.crazy_mix_runlevel, i64 0, i64 %idxprom37, !dbg !4468
  %140 = load i8, i8* %arrayidx38, align 1, !dbg !4468
  %conv39 = zext i8 %140 to i32, !dbg !4468
  %and40 = and i32 %conv39, 15, !dbg !4469
  %141 = load i32*, i32** %level.addr, align 8, !dbg !4470
  store i32 %and40, i32* %141, align 4, !dbg !4471
  br label %if.end51, !dbg !4472

if.else41:                                        ; preds = %if.else26
  %142 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4473
  %gb42 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %142, i32 0, i32 19, !dbg !4475
  %143 = load %struct.GetBitContext*, %struct.GetBitContext** %gb42, align 8, !dbg !4475
  %144 = load i32, i32* %i, align 4, !dbg !4476
  %and43 = and i32 %144, 1, !dbg !4477
  %mul44 = mul nsw i32 3, %and43, !dbg !4478
  %sub45 = sub nsw i32 7, %mul44, !dbg !4479
  %call46 = call i32 @get_bits(%struct.GetBitContext* %143, i32 %sub45), !dbg !4480
  %145 = load i32*, i32** %level.addr, align 8, !dbg !4481
  store i32 %call46, i32* %145, align 4, !dbg !4482
  %146 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4483
  %gb47 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %146, i32 0, i32 19, !dbg !4484
  %147 = load %struct.GetBitContext*, %struct.GetBitContext** %gb47, align 8, !dbg !4484
  %call48 = call i32 @get_bits(%struct.GetBitContext* %147, i32 6), !dbg !4485
  %148 = load i32*, i32** %run.addr, align 8, !dbg !4486
  store i32 %call48, i32* %148, align 4, !dbg !4487
  %149 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4488
  %gb49 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %149, i32 0, i32 19, !dbg !4489
  %150 = load %struct.GetBitContext*, %struct.GetBitContext** %gb49, align 8, !dbg !4489
  %call50 = call i32 @get_bits1(%struct.GetBitContext* %150), !dbg !4490
  %151 = load i32*, i32** %final.addr, align 8, !dbg !4491
  store i32 %call50, i32* %151, align 4, !dbg !4492
  br label %if.end51

if.end51:                                         ; preds = %if.else41, %if.then29
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then9
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end
  br label %return, !dbg !4493

return:                                           ; preds = %if.end53, %if.then2
  ret void, !dbg !4494
}

; Function Attrs: nounwind uwtable
define internal void @dsp_x8_put_solidcolor(i8 zeroext %pix, i8* %dst, i64 %linesize) #4 !dbg !4495 {
entry:
  %pix.addr = alloca i8, align 1
  %dst.addr = alloca i8*, align 8
  %linesize.addr = alloca i64, align 8
  %k = alloca i32, align 4
  store i8 %pix, i8* %pix.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pix.addr, metadata !4498, metadata !1740), !dbg !4499
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4500, metadata !1740), !dbg !4501
  store i64 %linesize, i64* %linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %linesize.addr, metadata !4502, metadata !1740), !dbg !4503
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4504, metadata !1740), !dbg !4505
  store i32 0, i32* %k, align 4, !dbg !4506
  br label %for.cond, !dbg !4508

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %k, align 4, !dbg !4509
  %cmp = icmp slt i32 %0, 8, !dbg !4512
  br i1 %cmp, label %for.body, label %for.end, !dbg !4513

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !4514
  %2 = load i8, i8* %pix.addr, align 1, !dbg !4516
  %conv = zext i8 %2 to i32, !dbg !4516
  %3 = trunc i32 %conv to i8, !dbg !4517
  call void @llvm.memset.p0i8.i64(i8* %1, i8 %3, i64 8, i32 1, i1 false), !dbg !4517
  %4 = load i64, i64* %linesize.addr, align 8, !dbg !4518
  %5 = load i8*, i8** %dst.addr, align 8, !dbg !4519
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %4, !dbg !4519
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !4519
  br label %for.inc, !dbg !4520

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %k, align 4, !dbg !4521
  %inc = add nsw i32 %6, 1, !dbg !4521
  store i32 %inc, i32* %k, align 4, !dbg !4521
  br label %for.cond, !dbg !4523, !llvm.loop !4524

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4526
}

; Function Attrs: nounwind uwtable
define internal void @x8_ac_compensation(%struct.IntraX8Context* %w, i32 %direction, i32 %dc_level) #4 !dbg !4527 {
entry:
  %w.addr = alloca %struct.IntraX8Context*, align 8
  %direction.addr = alloca i32, align 4
  %dc_level.addr = alloca i32, align 4
  %t = alloca i32, align 4
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !4530, metadata !1740), !dbg !4531
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !4532, metadata !1740), !dbg !4533
  store i32 %dc_level, i32* %dc_level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dc_level.addr, metadata !4534, metadata !1740), !dbg !4535
  call void @llvm.dbg.declare(metadata i32* %t, metadata !4536, metadata !1740), !dbg !4537
  %0 = load i32, i32* %direction.addr, align 4, !dbg !4538
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb238
    i32 2, label %sw.bb299
  ], !dbg !4539

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %dc_level.addr, align 4, !dbg !4540
  %mul = mul nsw i32 3811, %1, !dbg !4542
  %add = add nsw i32 %mul, 32768, !dbg !4543
  %shr = ashr i32 %add, 16, !dbg !4544
  store i32 %shr, i32* %t, align 4, !dbg !4545
  %2 = load i32, i32* %t, align 4, !dbg !4546
  %3 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4547
  %idct_permutation = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %3, i32 0, i32 7, !dbg !4548
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation, i64 0, i64 1, !dbg !4547
  %4 = load i8, i8* %arrayidx, align 1, !dbg !4547
  %idxprom = zext i8 %4 to i64, !dbg !4549
  %5 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4549
  %block = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %5, i32 0, i32 10, !dbg !4550
  %6 = load [64 x i16]*, [64 x i16]** %block, align 8, !dbg !4550
  %arrayidx1 = getelementptr inbounds [64 x i16], [64 x i16]* %6, i64 0, !dbg !4549
  %arrayidx2 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx1, i64 0, i64 %idxprom, !dbg !4549
  %7 = load i16, i16* %arrayidx2, align 2, !dbg !4551
  %conv = sext i16 %7 to i32, !dbg !4551
  %sub = sub nsw i32 %conv, %2, !dbg !4551
  %conv3 = trunc i32 %sub to i16, !dbg !4551
  store i16 %conv3, i16* %arrayidx2, align 2, !dbg !4551
  %8 = load i32, i32* %t, align 4, !dbg !4552
  %9 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4553
  %idct_permutation4 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %9, i32 0, i32 7, !dbg !4554
  %arrayidx5 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation4, i64 0, i64 8, !dbg !4553
  %10 = load i8, i8* %arrayidx5, align 8, !dbg !4553
  %idxprom6 = zext i8 %10 to i64, !dbg !4555
  %11 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4555
  %block7 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %11, i32 0, i32 10, !dbg !4556
  %12 = load [64 x i16]*, [64 x i16]** %block7, align 8, !dbg !4556
  %arrayidx8 = getelementptr inbounds [64 x i16], [64 x i16]* %12, i64 0, !dbg !4555
  %arrayidx9 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx8, i64 0, i64 %idxprom6, !dbg !4555
  %13 = load i16, i16* %arrayidx9, align 2, !dbg !4557
  %conv10 = sext i16 %13 to i32, !dbg !4557
  %sub11 = sub nsw i32 %conv10, %8, !dbg !4557
  %conv12 = trunc i32 %sub11 to i16, !dbg !4557
  store i16 %conv12, i16* %arrayidx9, align 2, !dbg !4557
  %14 = load i32, i32* %dc_level.addr, align 4, !dbg !4558
  %mul13 = mul nsw i32 487, %14, !dbg !4559
  %add14 = add nsw i32 %mul13, 32768, !dbg !4560
  %shr15 = ashr i32 %add14, 16, !dbg !4561
  store i32 %shr15, i32* %t, align 4, !dbg !4562
  %15 = load i32, i32* %t, align 4, !dbg !4563
  %16 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4564
  %idct_permutation16 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %16, i32 0, i32 7, !dbg !4565
  %arrayidx17 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation16, i64 0, i64 2, !dbg !4564
  %17 = load i8, i8* %arrayidx17, align 2, !dbg !4564
  %idxprom18 = zext i8 %17 to i64, !dbg !4566
  %18 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4566
  %block19 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %18, i32 0, i32 10, !dbg !4567
  %19 = load [64 x i16]*, [64 x i16]** %block19, align 8, !dbg !4567
  %arrayidx20 = getelementptr inbounds [64 x i16], [64 x i16]* %19, i64 0, !dbg !4566
  %arrayidx21 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx20, i64 0, i64 %idxprom18, !dbg !4566
  %20 = load i16, i16* %arrayidx21, align 2, !dbg !4568
  %conv22 = sext i16 %20 to i32, !dbg !4568
  %sub23 = sub nsw i32 %conv22, %15, !dbg !4568
  %conv24 = trunc i32 %sub23 to i16, !dbg !4568
  store i16 %conv24, i16* %arrayidx21, align 2, !dbg !4568
  %21 = load i32, i32* %t, align 4, !dbg !4569
  %22 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4570
  %idct_permutation25 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %22, i32 0, i32 7, !dbg !4571
  %arrayidx26 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation25, i64 0, i64 16, !dbg !4570
  %23 = load i8, i8* %arrayidx26, align 8, !dbg !4570
  %idxprom27 = zext i8 %23 to i64, !dbg !4572
  %24 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4572
  %block28 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %24, i32 0, i32 10, !dbg !4573
  %25 = load [64 x i16]*, [64 x i16]** %block28, align 8, !dbg !4573
  %arrayidx29 = getelementptr inbounds [64 x i16], [64 x i16]* %25, i64 0, !dbg !4572
  %arrayidx30 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx29, i64 0, i64 %idxprom27, !dbg !4572
  %26 = load i16, i16* %arrayidx30, align 2, !dbg !4574
  %conv31 = sext i16 %26 to i32, !dbg !4574
  %sub32 = sub nsw i32 %conv31, %21, !dbg !4574
  %conv33 = trunc i32 %sub32 to i16, !dbg !4574
  store i16 %conv33, i16* %arrayidx30, align 2, !dbg !4574
  %27 = load i32, i32* %dc_level.addr, align 4, !dbg !4575
  %mul34 = mul nsw i32 506, %27, !dbg !4576
  %add35 = add nsw i32 %mul34, 32768, !dbg !4577
  %shr36 = ashr i32 %add35, 16, !dbg !4578
  store i32 %shr36, i32* %t, align 4, !dbg !4579
  %28 = load i32, i32* %t, align 4, !dbg !4580
  %29 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4581
  %idct_permutation37 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %29, i32 0, i32 7, !dbg !4582
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation37, i64 0, i64 3, !dbg !4581
  %30 = load i8, i8* %arrayidx38, align 1, !dbg !4581
  %idxprom39 = zext i8 %30 to i64, !dbg !4583
  %31 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4583
  %block40 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %31, i32 0, i32 10, !dbg !4584
  %32 = load [64 x i16]*, [64 x i16]** %block40, align 8, !dbg !4584
  %arrayidx41 = getelementptr inbounds [64 x i16], [64 x i16]* %32, i64 0, !dbg !4583
  %arrayidx42 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx41, i64 0, i64 %idxprom39, !dbg !4583
  %33 = load i16, i16* %arrayidx42, align 2, !dbg !4585
  %conv43 = sext i16 %33 to i32, !dbg !4585
  %sub44 = sub nsw i32 %conv43, %28, !dbg !4585
  %conv45 = trunc i32 %sub44 to i16, !dbg !4585
  store i16 %conv45, i16* %arrayidx42, align 2, !dbg !4585
  %34 = load i32, i32* %t, align 4, !dbg !4586
  %35 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4587
  %idct_permutation46 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %35, i32 0, i32 7, !dbg !4588
  %arrayidx47 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation46, i64 0, i64 24, !dbg !4587
  %36 = load i8, i8* %arrayidx47, align 8, !dbg !4587
  %idxprom48 = zext i8 %36 to i64, !dbg !4589
  %37 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4589
  %block49 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %37, i32 0, i32 10, !dbg !4590
  %38 = load [64 x i16]*, [64 x i16]** %block49, align 8, !dbg !4590
  %arrayidx50 = getelementptr inbounds [64 x i16], [64 x i16]* %38, i64 0, !dbg !4589
  %arrayidx51 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx50, i64 0, i64 %idxprom48, !dbg !4589
  %39 = load i16, i16* %arrayidx51, align 2, !dbg !4591
  %conv52 = sext i16 %39 to i32, !dbg !4591
  %sub53 = sub nsw i32 %conv52, %34, !dbg !4591
  %conv54 = trunc i32 %sub53 to i16, !dbg !4591
  store i16 %conv54, i16* %arrayidx51, align 2, !dbg !4591
  %40 = load i32, i32* %dc_level.addr, align 4, !dbg !4592
  %mul55 = mul nsw i32 135, %40, !dbg !4593
  %add56 = add nsw i32 %mul55, 32768, !dbg !4594
  %shr57 = ashr i32 %add56, 16, !dbg !4595
  store i32 %shr57, i32* %t, align 4, !dbg !4596
  %41 = load i32, i32* %t, align 4, !dbg !4597
  %42 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4598
  %idct_permutation58 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %42, i32 0, i32 7, !dbg !4599
  %arrayidx59 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation58, i64 0, i64 4, !dbg !4598
  %43 = load i8, i8* %arrayidx59, align 4, !dbg !4598
  %idxprom60 = zext i8 %43 to i64, !dbg !4600
  %44 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4600
  %block61 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %44, i32 0, i32 10, !dbg !4601
  %45 = load [64 x i16]*, [64 x i16]** %block61, align 8, !dbg !4601
  %arrayidx62 = getelementptr inbounds [64 x i16], [64 x i16]* %45, i64 0, !dbg !4600
  %arrayidx63 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx62, i64 0, i64 %idxprom60, !dbg !4600
  %46 = load i16, i16* %arrayidx63, align 2, !dbg !4602
  %conv64 = sext i16 %46 to i32, !dbg !4602
  %sub65 = sub nsw i32 %conv64, %41, !dbg !4602
  %conv66 = trunc i32 %sub65 to i16, !dbg !4602
  store i16 %conv66, i16* %arrayidx63, align 2, !dbg !4602
  %47 = load i32, i32* %t, align 4, !dbg !4603
  %48 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4604
  %idct_permutation67 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %48, i32 0, i32 7, !dbg !4605
  %arrayidx68 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation67, i64 0, i64 32, !dbg !4604
  %49 = load i8, i8* %arrayidx68, align 8, !dbg !4604
  %idxprom69 = zext i8 %49 to i64, !dbg !4606
  %50 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4606
  %block70 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %50, i32 0, i32 10, !dbg !4607
  %51 = load [64 x i16]*, [64 x i16]** %block70, align 8, !dbg !4607
  %arrayidx71 = getelementptr inbounds [64 x i16], [64 x i16]* %51, i64 0, !dbg !4606
  %arrayidx72 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx71, i64 0, i64 %idxprom69, !dbg !4606
  %52 = load i16, i16* %arrayidx72, align 2, !dbg !4608
  %conv73 = sext i16 %52 to i32, !dbg !4608
  %sub74 = sub nsw i32 %conv73, %47, !dbg !4608
  %conv75 = trunc i32 %sub74 to i16, !dbg !4608
  store i16 %conv75, i16* %arrayidx72, align 2, !dbg !4608
  %53 = load i32, i32* %t, align 4, !dbg !4609
  %54 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4610
  %idct_permutation76 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %54, i32 0, i32 7, !dbg !4611
  %arrayidx77 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation76, i64 0, i64 10, !dbg !4610
  %55 = load i8, i8* %arrayidx77, align 2, !dbg !4610
  %idxprom78 = zext i8 %55 to i64, !dbg !4612
  %56 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4612
  %block79 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %56, i32 0, i32 10, !dbg !4613
  %57 = load [64 x i16]*, [64 x i16]** %block79, align 8, !dbg !4613
  %arrayidx80 = getelementptr inbounds [64 x i16], [64 x i16]* %57, i64 0, !dbg !4612
  %arrayidx81 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx80, i64 0, i64 %idxprom78, !dbg !4612
  %58 = load i16, i16* %arrayidx81, align 2, !dbg !4614
  %conv82 = sext i16 %58 to i32, !dbg !4614
  %add83 = add nsw i32 %conv82, %53, !dbg !4614
  %conv84 = trunc i32 %add83 to i16, !dbg !4614
  store i16 %conv84, i16* %arrayidx81, align 2, !dbg !4614
  %59 = load i32, i32* %t, align 4, !dbg !4615
  %60 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4616
  %idct_permutation85 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %60, i32 0, i32 7, !dbg !4617
  %arrayidx86 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation85, i64 0, i64 17, !dbg !4616
  %61 = load i8, i8* %arrayidx86, align 1, !dbg !4616
  %idxprom87 = zext i8 %61 to i64, !dbg !4618
  %62 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4618
  %block88 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %62, i32 0, i32 10, !dbg !4619
  %63 = load [64 x i16]*, [64 x i16]** %block88, align 8, !dbg !4619
  %arrayidx89 = getelementptr inbounds [64 x i16], [64 x i16]* %63, i64 0, !dbg !4618
  %arrayidx90 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx89, i64 0, i64 %idxprom87, !dbg !4618
  %64 = load i16, i16* %arrayidx90, align 2, !dbg !4620
  %conv91 = sext i16 %64 to i32, !dbg !4620
  %add92 = add nsw i32 %conv91, %59, !dbg !4620
  %conv93 = trunc i32 %add92 to i16, !dbg !4620
  store i16 %conv93, i16* %arrayidx90, align 2, !dbg !4620
  %65 = load i32, i32* %t, align 4, !dbg !4621
  %66 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4622
  %idct_permutation94 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %66, i32 0, i32 7, !dbg !4623
  %arrayidx95 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation94, i64 0, i64 11, !dbg !4622
  %67 = load i8, i8* %arrayidx95, align 1, !dbg !4622
  %idxprom96 = zext i8 %67 to i64, !dbg !4624
  %68 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4624
  %block97 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %68, i32 0, i32 10, !dbg !4625
  %69 = load [64 x i16]*, [64 x i16]** %block97, align 8, !dbg !4625
  %arrayidx98 = getelementptr inbounds [64 x i16], [64 x i16]* %69, i64 0, !dbg !4624
  %arrayidx99 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx98, i64 0, i64 %idxprom96, !dbg !4624
  %70 = load i16, i16* %arrayidx99, align 2, !dbg !4626
  %conv100 = sext i16 %70 to i32, !dbg !4626
  %add101 = add nsw i32 %conv100, %65, !dbg !4626
  %conv102 = trunc i32 %add101 to i16, !dbg !4626
  store i16 %conv102, i16* %arrayidx99, align 2, !dbg !4626
  %71 = load i32, i32* %t, align 4, !dbg !4627
  %72 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4628
  %idct_permutation103 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %72, i32 0, i32 7, !dbg !4629
  %arrayidx104 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation103, i64 0, i64 25, !dbg !4628
  %73 = load i8, i8* %arrayidx104, align 1, !dbg !4628
  %idxprom105 = zext i8 %73 to i64, !dbg !4630
  %74 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4630
  %block106 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %74, i32 0, i32 10, !dbg !4631
  %75 = load [64 x i16]*, [64 x i16]** %block106, align 8, !dbg !4631
  %arrayidx107 = getelementptr inbounds [64 x i16], [64 x i16]* %75, i64 0, !dbg !4630
  %arrayidx108 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx107, i64 0, i64 %idxprom105, !dbg !4630
  %76 = load i16, i16* %arrayidx108, align 2, !dbg !4632
  %conv109 = sext i16 %76 to i32, !dbg !4632
  %add110 = add nsw i32 %conv109, %71, !dbg !4632
  %conv111 = trunc i32 %add110 to i16, !dbg !4632
  store i16 %conv111, i16* %arrayidx108, align 2, !dbg !4632
  %77 = load i32, i32* %dc_level.addr, align 4, !dbg !4633
  %mul112 = mul nsw i32 173, %77, !dbg !4634
  %add113 = add nsw i32 %mul112, 32768, !dbg !4635
  %shr114 = ashr i32 %add113, 16, !dbg !4636
  store i32 %shr114, i32* %t, align 4, !dbg !4637
  %78 = load i32, i32* %t, align 4, !dbg !4638
  %79 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4639
  %idct_permutation115 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %79, i32 0, i32 7, !dbg !4640
  %arrayidx116 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation115, i64 0, i64 5, !dbg !4639
  %80 = load i8, i8* %arrayidx116, align 1, !dbg !4639
  %idxprom117 = zext i8 %80 to i64, !dbg !4641
  %81 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4641
  %block118 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %81, i32 0, i32 10, !dbg !4642
  %82 = load [64 x i16]*, [64 x i16]** %block118, align 8, !dbg !4642
  %arrayidx119 = getelementptr inbounds [64 x i16], [64 x i16]* %82, i64 0, !dbg !4641
  %arrayidx120 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx119, i64 0, i64 %idxprom117, !dbg !4641
  %83 = load i16, i16* %arrayidx120, align 2, !dbg !4643
  %conv121 = sext i16 %83 to i32, !dbg !4643
  %sub122 = sub nsw i32 %conv121, %78, !dbg !4643
  %conv123 = trunc i32 %sub122 to i16, !dbg !4643
  store i16 %conv123, i16* %arrayidx120, align 2, !dbg !4643
  %84 = load i32, i32* %t, align 4, !dbg !4644
  %85 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4645
  %idct_permutation124 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %85, i32 0, i32 7, !dbg !4646
  %arrayidx125 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation124, i64 0, i64 40, !dbg !4645
  %86 = load i8, i8* %arrayidx125, align 8, !dbg !4645
  %idxprom126 = zext i8 %86 to i64, !dbg !4647
  %87 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4647
  %block127 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %87, i32 0, i32 10, !dbg !4648
  %88 = load [64 x i16]*, [64 x i16]** %block127, align 8, !dbg !4648
  %arrayidx128 = getelementptr inbounds [64 x i16], [64 x i16]* %88, i64 0, !dbg !4647
  %arrayidx129 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx128, i64 0, i64 %idxprom126, !dbg !4647
  %89 = load i16, i16* %arrayidx129, align 2, !dbg !4649
  %conv130 = sext i16 %89 to i32, !dbg !4649
  %sub131 = sub nsw i32 %conv130, %84, !dbg !4649
  %conv132 = trunc i32 %sub131 to i16, !dbg !4649
  store i16 %conv132, i16* %arrayidx129, align 2, !dbg !4649
  %90 = load i32, i32* %dc_level.addr, align 4, !dbg !4650
  %mul133 = mul nsw i32 61, %90, !dbg !4651
  %add134 = add nsw i32 %mul133, 32768, !dbg !4652
  %shr135 = ashr i32 %add134, 16, !dbg !4653
  store i32 %shr135, i32* %t, align 4, !dbg !4654
  %91 = load i32, i32* %t, align 4, !dbg !4655
  %92 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4656
  %idct_permutation136 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %92, i32 0, i32 7, !dbg !4657
  %arrayidx137 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation136, i64 0, i64 6, !dbg !4656
  %93 = load i8, i8* %arrayidx137, align 2, !dbg !4656
  %idxprom138 = zext i8 %93 to i64, !dbg !4658
  %94 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4658
  %block139 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %94, i32 0, i32 10, !dbg !4659
  %95 = load [64 x i16]*, [64 x i16]** %block139, align 8, !dbg !4659
  %arrayidx140 = getelementptr inbounds [64 x i16], [64 x i16]* %95, i64 0, !dbg !4658
  %arrayidx141 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx140, i64 0, i64 %idxprom138, !dbg !4658
  %96 = load i16, i16* %arrayidx141, align 2, !dbg !4660
  %conv142 = sext i16 %96 to i32, !dbg !4660
  %sub143 = sub nsw i32 %conv142, %91, !dbg !4660
  %conv144 = trunc i32 %sub143 to i16, !dbg !4660
  store i16 %conv144, i16* %arrayidx141, align 2, !dbg !4660
  %97 = load i32, i32* %t, align 4, !dbg !4661
  %98 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4662
  %idct_permutation145 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %98, i32 0, i32 7, !dbg !4663
  %arrayidx146 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation145, i64 0, i64 48, !dbg !4662
  %99 = load i8, i8* %arrayidx146, align 8, !dbg !4662
  %idxprom147 = zext i8 %99 to i64, !dbg !4664
  %100 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4664
  %block148 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %100, i32 0, i32 10, !dbg !4665
  %101 = load [64 x i16]*, [64 x i16]** %block148, align 8, !dbg !4665
  %arrayidx149 = getelementptr inbounds [64 x i16], [64 x i16]* %101, i64 0, !dbg !4664
  %arrayidx150 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx149, i64 0, i64 %idxprom147, !dbg !4664
  %102 = load i16, i16* %arrayidx150, align 2, !dbg !4666
  %conv151 = sext i16 %102 to i32, !dbg !4666
  %sub152 = sub nsw i32 %conv151, %97, !dbg !4666
  %conv153 = trunc i32 %sub152 to i16, !dbg !4666
  store i16 %conv153, i16* %arrayidx150, align 2, !dbg !4666
  %103 = load i32, i32* %t, align 4, !dbg !4667
  %104 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4668
  %idct_permutation154 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %104, i32 0, i32 7, !dbg !4669
  %arrayidx155 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation154, i64 0, i64 13, !dbg !4668
  %105 = load i8, i8* %arrayidx155, align 1, !dbg !4668
  %idxprom156 = zext i8 %105 to i64, !dbg !4670
  %106 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4670
  %block157 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %106, i32 0, i32 10, !dbg !4671
  %107 = load [64 x i16]*, [64 x i16]** %block157, align 8, !dbg !4671
  %arrayidx158 = getelementptr inbounds [64 x i16], [64 x i16]* %107, i64 0, !dbg !4670
  %arrayidx159 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx158, i64 0, i64 %idxprom156, !dbg !4670
  %108 = load i16, i16* %arrayidx159, align 2, !dbg !4672
  %conv160 = sext i16 %108 to i32, !dbg !4672
  %add161 = add nsw i32 %conv160, %103, !dbg !4672
  %conv162 = trunc i32 %add161 to i16, !dbg !4672
  store i16 %conv162, i16* %arrayidx159, align 2, !dbg !4672
  %109 = load i32, i32* %t, align 4, !dbg !4673
  %110 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4674
  %idct_permutation163 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %110, i32 0, i32 7, !dbg !4675
  %arrayidx164 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation163, i64 0, i64 41, !dbg !4674
  %111 = load i8, i8* %arrayidx164, align 1, !dbg !4674
  %idxprom165 = zext i8 %111 to i64, !dbg !4676
  %112 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4676
  %block166 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %112, i32 0, i32 10, !dbg !4677
  %113 = load [64 x i16]*, [64 x i16]** %block166, align 8, !dbg !4677
  %arrayidx167 = getelementptr inbounds [64 x i16], [64 x i16]* %113, i64 0, !dbg !4676
  %arrayidx168 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx167, i64 0, i64 %idxprom165, !dbg !4676
  %114 = load i16, i16* %arrayidx168, align 2, !dbg !4678
  %conv169 = sext i16 %114 to i32, !dbg !4678
  %add170 = add nsw i32 %conv169, %109, !dbg !4678
  %conv171 = trunc i32 %add170 to i16, !dbg !4678
  store i16 %conv171, i16* %arrayidx168, align 2, !dbg !4678
  %115 = load i32, i32* %dc_level.addr, align 4, !dbg !4679
  %mul172 = mul nsw i32 42, %115, !dbg !4680
  %add173 = add nsw i32 %mul172, 32768, !dbg !4681
  %shr174 = ashr i32 %add173, 16, !dbg !4682
  store i32 %shr174, i32* %t, align 4, !dbg !4683
  %116 = load i32, i32* %t, align 4, !dbg !4684
  %117 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4685
  %idct_permutation175 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %117, i32 0, i32 7, !dbg !4686
  %arrayidx176 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation175, i64 0, i64 7, !dbg !4685
  %118 = load i8, i8* %arrayidx176, align 1, !dbg !4685
  %idxprom177 = zext i8 %118 to i64, !dbg !4687
  %119 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4687
  %block178 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %119, i32 0, i32 10, !dbg !4688
  %120 = load [64 x i16]*, [64 x i16]** %block178, align 8, !dbg !4688
  %arrayidx179 = getelementptr inbounds [64 x i16], [64 x i16]* %120, i64 0, !dbg !4687
  %arrayidx180 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx179, i64 0, i64 %idxprom177, !dbg !4687
  %121 = load i16, i16* %arrayidx180, align 2, !dbg !4689
  %conv181 = sext i16 %121 to i32, !dbg !4689
  %sub182 = sub nsw i32 %conv181, %116, !dbg !4689
  %conv183 = trunc i32 %sub182 to i16, !dbg !4689
  store i16 %conv183, i16* %arrayidx180, align 2, !dbg !4689
  %122 = load i32, i32* %t, align 4, !dbg !4690
  %123 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4691
  %idct_permutation184 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %123, i32 0, i32 7, !dbg !4692
  %arrayidx185 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation184, i64 0, i64 56, !dbg !4691
  %124 = load i8, i8* %arrayidx185, align 8, !dbg !4691
  %idxprom186 = zext i8 %124 to i64, !dbg !4693
  %125 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4693
  %block187 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %125, i32 0, i32 10, !dbg !4694
  %126 = load [64 x i16]*, [64 x i16]** %block187, align 8, !dbg !4694
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* %126, i64 0, !dbg !4693
  %arrayidx189 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx188, i64 0, i64 %idxprom186, !dbg !4693
  %127 = load i16, i16* %arrayidx189, align 2, !dbg !4695
  %conv190 = sext i16 %127 to i32, !dbg !4695
  %sub191 = sub nsw i32 %conv190, %122, !dbg !4695
  %conv192 = trunc i32 %sub191 to i16, !dbg !4695
  store i16 %conv192, i16* %arrayidx189, align 2, !dbg !4695
  %128 = load i32, i32* %t, align 4, !dbg !4696
  %129 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4697
  %idct_permutation193 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %129, i32 0, i32 7, !dbg !4698
  %arrayidx194 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation193, i64 0, i64 12, !dbg !4697
  %130 = load i8, i8* %arrayidx194, align 4, !dbg !4697
  %idxprom195 = zext i8 %130 to i64, !dbg !4699
  %131 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4699
  %block196 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %131, i32 0, i32 10, !dbg !4700
  %132 = load [64 x i16]*, [64 x i16]** %block196, align 8, !dbg !4700
  %arrayidx197 = getelementptr inbounds [64 x i16], [64 x i16]* %132, i64 0, !dbg !4699
  %arrayidx198 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx197, i64 0, i64 %idxprom195, !dbg !4699
  %133 = load i16, i16* %arrayidx198, align 2, !dbg !4701
  %conv199 = sext i16 %133 to i32, !dbg !4701
  %add200 = add nsw i32 %conv199, %128, !dbg !4701
  %conv201 = trunc i32 %add200 to i16, !dbg !4701
  store i16 %conv201, i16* %arrayidx198, align 2, !dbg !4701
  %134 = load i32, i32* %t, align 4, !dbg !4702
  %135 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4703
  %idct_permutation202 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %135, i32 0, i32 7, !dbg !4704
  %arrayidx203 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation202, i64 0, i64 33, !dbg !4703
  %136 = load i8, i8* %arrayidx203, align 1, !dbg !4703
  %idxprom204 = zext i8 %136 to i64, !dbg !4705
  %137 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4705
  %block205 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %137, i32 0, i32 10, !dbg !4706
  %138 = load [64 x i16]*, [64 x i16]** %block205, align 8, !dbg !4706
  %arrayidx206 = getelementptr inbounds [64 x i16], [64 x i16]* %138, i64 0, !dbg !4705
  %arrayidx207 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx206, i64 0, i64 %idxprom204, !dbg !4705
  %139 = load i16, i16* %arrayidx207, align 2, !dbg !4707
  %conv208 = sext i16 %139 to i32, !dbg !4707
  %add209 = add nsw i32 %conv208, %134, !dbg !4707
  %conv210 = trunc i32 %add209 to i16, !dbg !4707
  store i16 %conv210, i16* %arrayidx207, align 2, !dbg !4707
  %140 = load i32, i32* %t, align 4, !dbg !4708
  %141 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4709
  %idct_permutation211 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %141, i32 0, i32 7, !dbg !4710
  %arrayidx212 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation211, i64 0, i64 36, !dbg !4709
  %142 = load i8, i8* %arrayidx212, align 4, !dbg !4709
  %idxprom213 = zext i8 %142 to i64, !dbg !4711
  %143 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4711
  %block214 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %143, i32 0, i32 10, !dbg !4712
  %144 = load [64 x i16]*, [64 x i16]** %block214, align 8, !dbg !4712
  %arrayidx215 = getelementptr inbounds [64 x i16], [64 x i16]* %144, i64 0, !dbg !4711
  %arrayidx216 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx215, i64 0, i64 %idxprom213, !dbg !4711
  %145 = load i16, i16* %arrayidx216, align 2, !dbg !4713
  %conv217 = sext i16 %145 to i32, !dbg !4713
  %add218 = add nsw i32 %conv217, %140, !dbg !4713
  %conv219 = trunc i32 %add218 to i16, !dbg !4713
  store i16 %conv219, i16* %arrayidx216, align 2, !dbg !4713
  %146 = load i32, i32* %dc_level.addr, align 4, !dbg !4714
  %mul220 = mul nsw i32 1084, %146, !dbg !4715
  %add221 = add nsw i32 %mul220, 32768, !dbg !4716
  %shr222 = ashr i32 %add221, 16, !dbg !4717
  store i32 %shr222, i32* %t, align 4, !dbg !4718
  %147 = load i32, i32* %t, align 4, !dbg !4719
  %148 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4720
  %idct_permutation223 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %148, i32 0, i32 7, !dbg !4721
  %arrayidx224 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation223, i64 0, i64 9, !dbg !4720
  %149 = load i8, i8* %arrayidx224, align 1, !dbg !4720
  %idxprom225 = zext i8 %149 to i64, !dbg !4722
  %150 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4722
  %block226 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %150, i32 0, i32 10, !dbg !4723
  %151 = load [64 x i16]*, [64 x i16]** %block226, align 8, !dbg !4723
  %arrayidx227 = getelementptr inbounds [64 x i16], [64 x i16]* %151, i64 0, !dbg !4722
  %arrayidx228 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx227, i64 0, i64 %idxprom225, !dbg !4722
  %152 = load i16, i16* %arrayidx228, align 2, !dbg !4724
  %conv229 = sext i16 %152 to i32, !dbg !4724
  %add230 = add nsw i32 %conv229, %147, !dbg !4724
  %conv231 = trunc i32 %add230 to i16, !dbg !4724
  store i16 %conv231, i16* %arrayidx228, align 2, !dbg !4724
  %153 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4725
  %block_last_index = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %153, i32 0, i32 9, !dbg !4726
  %154 = load i32*, i32** %block_last_index, align 8, !dbg !4726
  %arrayidx232 = getelementptr inbounds i32, i32* %154, i64 0, !dbg !4725
  %155 = load i32, i32* %arrayidx232, align 4, !dbg !4725
  %cmp = icmp sgt i32 %155, 56, !dbg !4727
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4728

cond.true:                                        ; preds = %sw.bb
  %156 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4729
  %block_last_index234 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %156, i32 0, i32 9, !dbg !4731
  %157 = load i32*, i32** %block_last_index234, align 8, !dbg !4731
  %arrayidx235 = getelementptr inbounds i32, i32* %157, i64 0, !dbg !4729
  %158 = load i32, i32* %arrayidx235, align 4, !dbg !4729
  br label %cond.end, !dbg !4732

cond.false:                                       ; preds = %sw.bb
  br label %cond.end, !dbg !4733

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %158, %cond.true ], [ 56, %cond.false ], !dbg !4735
  %159 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4737
  %block_last_index236 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %159, i32 0, i32 9, !dbg !4738
  %160 = load i32*, i32** %block_last_index236, align 8, !dbg !4738
  %arrayidx237 = getelementptr inbounds i32, i32* %160, i64 0, !dbg !4737
  store i32 %cond, i32* %arrayidx237, align 4, !dbg !4739
  br label %sw.epilog, !dbg !4740

sw.bb238:                                         ; preds = %entry
  %161 = load i32, i32* %dc_level.addr, align 4, !dbg !4741
  %mul239 = mul nsw i32 6269, %161, !dbg !4742
  %add240 = add nsw i32 %mul239, 32768, !dbg !4743
  %shr241 = ashr i32 %add240, 16, !dbg !4744
  %162 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4745
  %idct_permutation242 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %162, i32 0, i32 7, !dbg !4746
  %arrayidx243 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation242, i64 0, i64 8, !dbg !4745
  %163 = load i8, i8* %arrayidx243, align 8, !dbg !4745
  %idxprom244 = zext i8 %163 to i64, !dbg !4747
  %164 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4747
  %block245 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %164, i32 0, i32 10, !dbg !4748
  %165 = load [64 x i16]*, [64 x i16]** %block245, align 8, !dbg !4748
  %arrayidx246 = getelementptr inbounds [64 x i16], [64 x i16]* %165, i64 0, !dbg !4747
  %arrayidx247 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx246, i64 0, i64 %idxprom244, !dbg !4747
  %166 = load i16, i16* %arrayidx247, align 2, !dbg !4749
  %conv248 = sext i16 %166 to i32, !dbg !4749
  %sub249 = sub nsw i32 %conv248, %shr241, !dbg !4749
  %conv250 = trunc i32 %sub249 to i16, !dbg !4749
  store i16 %conv250, i16* %arrayidx247, align 2, !dbg !4749
  %167 = load i32, i32* %dc_level.addr, align 4, !dbg !4750
  %mul251 = mul nsw i32 708, %167, !dbg !4751
  %add252 = add nsw i32 %mul251, 32768, !dbg !4752
  %shr253 = ashr i32 %add252, 16, !dbg !4753
  %168 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4754
  %idct_permutation254 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %168, i32 0, i32 7, !dbg !4755
  %arrayidx255 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation254, i64 0, i64 24, !dbg !4754
  %169 = load i8, i8* %arrayidx255, align 8, !dbg !4754
  %idxprom256 = zext i8 %169 to i64, !dbg !4756
  %170 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4756
  %block257 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %170, i32 0, i32 10, !dbg !4757
  %171 = load [64 x i16]*, [64 x i16]** %block257, align 8, !dbg !4757
  %arrayidx258 = getelementptr inbounds [64 x i16], [64 x i16]* %171, i64 0, !dbg !4756
  %arrayidx259 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx258, i64 0, i64 %idxprom256, !dbg !4756
  %172 = load i16, i16* %arrayidx259, align 2, !dbg !4758
  %conv260 = sext i16 %172 to i32, !dbg !4758
  %sub261 = sub nsw i32 %conv260, %shr253, !dbg !4758
  %conv262 = trunc i32 %sub261 to i16, !dbg !4758
  store i16 %conv262, i16* %arrayidx259, align 2, !dbg !4758
  %173 = load i32, i32* %dc_level.addr, align 4, !dbg !4759
  %mul263 = mul nsw i32 172, %173, !dbg !4760
  %add264 = add nsw i32 %mul263, 32768, !dbg !4761
  %shr265 = ashr i32 %add264, 16, !dbg !4762
  %174 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4763
  %idct_permutation266 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %174, i32 0, i32 7, !dbg !4764
  %arrayidx267 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation266, i64 0, i64 40, !dbg !4763
  %175 = load i8, i8* %arrayidx267, align 8, !dbg !4763
  %idxprom268 = zext i8 %175 to i64, !dbg !4765
  %176 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4765
  %block269 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %176, i32 0, i32 10, !dbg !4766
  %177 = load [64 x i16]*, [64 x i16]** %block269, align 8, !dbg !4766
  %arrayidx270 = getelementptr inbounds [64 x i16], [64 x i16]* %177, i64 0, !dbg !4765
  %arrayidx271 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx270, i64 0, i64 %idxprom268, !dbg !4765
  %178 = load i16, i16* %arrayidx271, align 2, !dbg !4767
  %conv272 = sext i16 %178 to i32, !dbg !4767
  %sub273 = sub nsw i32 %conv272, %shr265, !dbg !4767
  %conv274 = trunc i32 %sub273 to i16, !dbg !4767
  store i16 %conv274, i16* %arrayidx271, align 2, !dbg !4767
  %179 = load i32, i32* %dc_level.addr, align 4, !dbg !4768
  %mul275 = mul nsw i32 73, %179, !dbg !4769
  %add276 = add nsw i32 %mul275, 32768, !dbg !4770
  %shr277 = ashr i32 %add276, 16, !dbg !4771
  %180 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4772
  %idct_permutation278 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %180, i32 0, i32 7, !dbg !4773
  %arrayidx279 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation278, i64 0, i64 56, !dbg !4772
  %181 = load i8, i8* %arrayidx279, align 8, !dbg !4772
  %idxprom280 = zext i8 %181 to i64, !dbg !4774
  %182 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4774
  %block281 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %182, i32 0, i32 10, !dbg !4775
  %183 = load [64 x i16]*, [64 x i16]** %block281, align 8, !dbg !4775
  %arrayidx282 = getelementptr inbounds [64 x i16], [64 x i16]* %183, i64 0, !dbg !4774
  %arrayidx283 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx282, i64 0, i64 %idxprom280, !dbg !4774
  %184 = load i16, i16* %arrayidx283, align 2, !dbg !4776
  %conv284 = sext i16 %184 to i32, !dbg !4776
  %sub285 = sub nsw i32 %conv284, %shr277, !dbg !4776
  %conv286 = trunc i32 %sub285 to i16, !dbg !4776
  store i16 %conv286, i16* %arrayidx283, align 2, !dbg !4776
  %185 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4777
  %block_last_index287 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %185, i32 0, i32 9, !dbg !4778
  %186 = load i32*, i32** %block_last_index287, align 8, !dbg !4778
  %arrayidx288 = getelementptr inbounds i32, i32* %186, i64 0, !dbg !4777
  %187 = load i32, i32* %arrayidx288, align 4, !dbg !4777
  %cmp289 = icmp sgt i32 %187, 56, !dbg !4779
  br i1 %cmp289, label %cond.true291, label %cond.false294, !dbg !4780

cond.true291:                                     ; preds = %sw.bb238
  %188 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4781
  %block_last_index292 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %188, i32 0, i32 9, !dbg !4782
  %189 = load i32*, i32** %block_last_index292, align 8, !dbg !4782
  %arrayidx293 = getelementptr inbounds i32, i32* %189, i64 0, !dbg !4781
  %190 = load i32, i32* %arrayidx293, align 4, !dbg !4781
  br label %cond.end295, !dbg !4783

cond.false294:                                    ; preds = %sw.bb238
  br label %cond.end295, !dbg !4784

cond.end295:                                      ; preds = %cond.false294, %cond.true291
  %cond296 = phi i32 [ %190, %cond.true291 ], [ 56, %cond.false294 ], !dbg !4785
  %191 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4786
  %block_last_index297 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %191, i32 0, i32 9, !dbg !4787
  %192 = load i32*, i32** %block_last_index297, align 8, !dbg !4787
  %arrayidx298 = getelementptr inbounds i32, i32* %192, i64 0, !dbg !4786
  store i32 %cond296, i32* %arrayidx298, align 4, !dbg !4788
  br label %sw.epilog, !dbg !4789

sw.bb299:                                         ; preds = %entry
  %193 = load i32, i32* %dc_level.addr, align 4, !dbg !4790
  %mul300 = mul nsw i32 6269, %193, !dbg !4791
  %add301 = add nsw i32 %mul300, 32768, !dbg !4792
  %shr302 = ashr i32 %add301, 16, !dbg !4793
  %194 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4794
  %idct_permutation303 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %194, i32 0, i32 7, !dbg !4795
  %arrayidx304 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation303, i64 0, i64 1, !dbg !4794
  %195 = load i8, i8* %arrayidx304, align 1, !dbg !4794
  %idxprom305 = zext i8 %195 to i64, !dbg !4796
  %196 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4796
  %block306 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %196, i32 0, i32 10, !dbg !4797
  %197 = load [64 x i16]*, [64 x i16]** %block306, align 8, !dbg !4797
  %arrayidx307 = getelementptr inbounds [64 x i16], [64 x i16]* %197, i64 0, !dbg !4796
  %arrayidx308 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx307, i64 0, i64 %idxprom305, !dbg !4796
  %198 = load i16, i16* %arrayidx308, align 2, !dbg !4798
  %conv309 = sext i16 %198 to i32, !dbg !4798
  %sub310 = sub nsw i32 %conv309, %shr302, !dbg !4798
  %conv311 = trunc i32 %sub310 to i16, !dbg !4798
  store i16 %conv311, i16* %arrayidx308, align 2, !dbg !4798
  %199 = load i32, i32* %dc_level.addr, align 4, !dbg !4799
  %mul312 = mul nsw i32 708, %199, !dbg !4800
  %add313 = add nsw i32 %mul312, 32768, !dbg !4801
  %shr314 = ashr i32 %add313, 16, !dbg !4802
  %200 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4803
  %idct_permutation315 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %200, i32 0, i32 7, !dbg !4804
  %arrayidx316 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation315, i64 0, i64 3, !dbg !4803
  %201 = load i8, i8* %arrayidx316, align 1, !dbg !4803
  %idxprom317 = zext i8 %201 to i64, !dbg !4805
  %202 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4805
  %block318 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %202, i32 0, i32 10, !dbg !4806
  %203 = load [64 x i16]*, [64 x i16]** %block318, align 8, !dbg !4806
  %arrayidx319 = getelementptr inbounds [64 x i16], [64 x i16]* %203, i64 0, !dbg !4805
  %arrayidx320 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx319, i64 0, i64 %idxprom317, !dbg !4805
  %204 = load i16, i16* %arrayidx320, align 2, !dbg !4807
  %conv321 = sext i16 %204 to i32, !dbg !4807
  %sub322 = sub nsw i32 %conv321, %shr314, !dbg !4807
  %conv323 = trunc i32 %sub322 to i16, !dbg !4807
  store i16 %conv323, i16* %arrayidx320, align 2, !dbg !4807
  %205 = load i32, i32* %dc_level.addr, align 4, !dbg !4808
  %mul324 = mul nsw i32 172, %205, !dbg !4809
  %add325 = add nsw i32 %mul324, 32768, !dbg !4810
  %shr326 = ashr i32 %add325, 16, !dbg !4811
  %206 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4812
  %idct_permutation327 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %206, i32 0, i32 7, !dbg !4813
  %arrayidx328 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation327, i64 0, i64 5, !dbg !4812
  %207 = load i8, i8* %arrayidx328, align 1, !dbg !4812
  %idxprom329 = zext i8 %207 to i64, !dbg !4814
  %208 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4814
  %block330 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %208, i32 0, i32 10, !dbg !4815
  %209 = load [64 x i16]*, [64 x i16]** %block330, align 8, !dbg !4815
  %arrayidx331 = getelementptr inbounds [64 x i16], [64 x i16]* %209, i64 0, !dbg !4814
  %arrayidx332 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx331, i64 0, i64 %idxprom329, !dbg !4814
  %210 = load i16, i16* %arrayidx332, align 2, !dbg !4816
  %conv333 = sext i16 %210 to i32, !dbg !4816
  %sub334 = sub nsw i32 %conv333, %shr326, !dbg !4816
  %conv335 = trunc i32 %sub334 to i16, !dbg !4816
  store i16 %conv335, i16* %arrayidx332, align 2, !dbg !4816
  %211 = load i32, i32* %dc_level.addr, align 4, !dbg !4817
  %mul336 = mul nsw i32 73, %211, !dbg !4818
  %add337 = add nsw i32 %mul336, 32768, !dbg !4819
  %shr338 = ashr i32 %add337, 16, !dbg !4820
  %212 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4821
  %idct_permutation339 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %212, i32 0, i32 7, !dbg !4822
  %arrayidx340 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation339, i64 0, i64 7, !dbg !4821
  %213 = load i8, i8* %arrayidx340, align 1, !dbg !4821
  %idxprom341 = zext i8 %213 to i64, !dbg !4823
  %214 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4823
  %block342 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %214, i32 0, i32 10, !dbg !4824
  %215 = load [64 x i16]*, [64 x i16]** %block342, align 8, !dbg !4824
  %arrayidx343 = getelementptr inbounds [64 x i16], [64 x i16]* %215, i64 0, !dbg !4823
  %arrayidx344 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx343, i64 0, i64 %idxprom341, !dbg !4823
  %216 = load i16, i16* %arrayidx344, align 2, !dbg !4825
  %conv345 = sext i16 %216 to i32, !dbg !4825
  %sub346 = sub nsw i32 %conv345, %shr338, !dbg !4825
  %conv347 = trunc i32 %sub346 to i16, !dbg !4825
  store i16 %conv347, i16* %arrayidx344, align 2, !dbg !4825
  %217 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4826
  %block_last_index348 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %217, i32 0, i32 9, !dbg !4827
  %218 = load i32*, i32** %block_last_index348, align 8, !dbg !4827
  %arrayidx349 = getelementptr inbounds i32, i32* %218, i64 0, !dbg !4826
  %219 = load i32, i32* %arrayidx349, align 4, !dbg !4826
  %cmp350 = icmp sgt i32 %219, 7, !dbg !4828
  br i1 %cmp350, label %cond.true352, label %cond.false355, !dbg !4829

cond.true352:                                     ; preds = %sw.bb299
  %220 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4830
  %block_last_index353 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %220, i32 0, i32 9, !dbg !4831
  %221 = load i32*, i32** %block_last_index353, align 8, !dbg !4831
  %arrayidx354 = getelementptr inbounds i32, i32* %221, i64 0, !dbg !4830
  %222 = load i32, i32* %arrayidx354, align 4, !dbg !4830
  br label %cond.end356, !dbg !4832

cond.false355:                                    ; preds = %sw.bb299
  br label %cond.end356, !dbg !4833

cond.end356:                                      ; preds = %cond.false355, %cond.true352
  %cond357 = phi i32 [ %222, %cond.true352 ], [ 7, %cond.false355 ], !dbg !4834
  %223 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4835
  %block_last_index358 = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %223, i32 0, i32 9, !dbg !4836
  %224 = load i32*, i32** %block_last_index358, align 8, !dbg !4836
  %arrayidx359 = getelementptr inbounds i32, i32* %224, i64 0, !dbg !4835
  store i32 %cond357, i32* %arrayidx359, align 4, !dbg !4837
  br label %sw.epilog, !dbg !4838

sw.epilog:                                        ; preds = %entry, %cond.end356, %cond.end295, %cond.end
  ret void, !dbg !4839
}

; Function Attrs: nounwind uwtable
define internal void @x8_update_predictions(%struct.IntraX8Context* %w, i32 %orient, i32 %est_run) #4 !dbg !4840 {
entry:
  %w.addr = alloca %struct.IntraX8Context*, align 8
  %orient.addr = alloca i32, align 4
  %est_run.addr = alloca i32, align 4
  store %struct.IntraX8Context* %w, %struct.IntraX8Context** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IntraX8Context** %w.addr, metadata !4841, metadata !1740), !dbg !4842
  store i32 %orient, i32* %orient.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %orient.addr, metadata !4843, metadata !1740), !dbg !4844
  store i32 %est_run, i32* %est_run.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %est_run.addr, metadata !4845, metadata !1740), !dbg !4846
  %0 = load i32, i32* %est_run.addr, align 4, !dbg !4847
  %shl = shl i32 %0, 2, !dbg !4848
  %1 = load i32, i32* %orient.addr, align 4, !dbg !4849
  %cmp = icmp eq i32 %1, 4, !dbg !4850
  %conv = zext i1 %cmp to i32, !dbg !4850
  %mul = mul nsw i32 1, %conv, !dbg !4851
  %add = add nsw i32 %shl, %mul, !dbg !4852
  %2 = load i32, i32* %orient.addr, align 4, !dbg !4853
  %cmp1 = icmp eq i32 %2, 8, !dbg !4854
  %conv2 = zext i1 %cmp1 to i32, !dbg !4854
  %mul3 = mul nsw i32 2, %conv2, !dbg !4855
  %add4 = add nsw i32 %add, %mul3, !dbg !4856
  %conv5 = trunc i32 %add4 to i8, !dbg !4857
  %3 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4858
  %mb_x = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %3, i32 0, i32 32, !dbg !4859
  %4 = load i32, i32* %mb_x, align 8, !dbg !4859
  %mul6 = mul nsw i32 %4, 2, !dbg !4860
  %5 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4861
  %mb_y = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %5, i32 0, i32 33, !dbg !4862
  %6 = load i32, i32* %mb_y, align 4, !dbg !4862
  %and = and i32 %6, 1, !dbg !4863
  %add7 = add nsw i32 %mul6, %and, !dbg !4864
  %idxprom = sext i32 %add7 to i64, !dbg !4865
  %7 = load %struct.IntraX8Context*, %struct.IntraX8Context** %w.addr, align 8, !dbg !4865
  %prediction_table = getelementptr inbounds %struct.IntraX8Context, %struct.IntraX8Context* %7, i32 0, i32 4, !dbg !4866
  %8 = load i8*, i8** %prediction_table, align 8, !dbg !4866
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %idxprom, !dbg !4865
  store i8 %conv5, i8* %arrayidx, align 1, !dbg !4867
  ret void, !dbg !4868
}

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1732, !1733}
!llvm.ident = !{!1734}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !896, globals: !910)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--intrax8.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "idct_permutation_type", file: !888, line: 37, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/idctdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!889 = !{!890, !891, !892, !893, !894, !895}
!890 = !DIEnumerator(name: "FF_IDCT_PERM_NONE", value: 0)
!891 = !DIEnumerator(name: "FF_IDCT_PERM_LIBMPEG2", value: 1)
!892 = !DIEnumerator(name: "FF_IDCT_PERM_SIMPLE", value: 2)
!893 = !DIEnumerator(name: "FF_IDCT_PERM_TRANSPOSE", value: 3)
!894 = !DIEnumerator(name: "FF_IDCT_PERM_PARTTRANS", value: 4)
!895 = !DIEnumerator(name: "FF_IDCT_PERM_SSE2", value: 5)
!896 = !{!897, !898, !899, !900, !908}
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!898 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!899 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64, align: 64)
!901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !902)
!902 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !903, line: 221, size: 32, align: 8, elements: !904)
!903 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!904 = !{!905}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !902, file: !903, line: 221, baseType: !906, size: 32, align: 32)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !907, line: 51, baseType: !899)
!907 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !907, line: 48, baseType: !909)
!909 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!910 = !{!911, !923, !931, !946, !951, !952, !953, !954, !957, !961, !962, !966, !970, !973, !1713, !1717, !1725, !1730}
!911 = distinct !DIGlobalVariable(name: "sizes", scope: !912, file: !913, line: 54, type: !917, isLocal: true, isDefinition: true, variable: [54 x i16]* @x8_vlc_init.sizes)
!912 = distinct !DISubprogram(name: "x8_vlc_init", scope: !913, file: !913, line: 49, type: !914, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!913 = !DIFile(filename: "libavcodec/intrax8.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!914 = !DISubroutineType(types: !915)
!915 = !{!898}
!916 = !{}
!917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 864, align: 16, elements: !921)
!918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !907, line: 49, baseType: !920)
!920 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!921 = !{!922}
!922 = !DISubrange(count: 54)
!923 = distinct !DIGlobalVariable(name: "table", scope: !912, file: !913, line: 66, type: !924, isLocal: true, isDefinition: true, variable: [28150 x [2 x i16]]* @x8_vlc_init.table)
!924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 900800, align: 16, elements: !928)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !926, line: 195, baseType: !927)
!926 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!927 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!928 = !{!929, !930}
!929 = !DISubrange(count: 28150)
!930 = !DISubrange(count: 2)
!931 = distinct !DIGlobalVariable(name: "j_ac_vlc", scope: !0, file: !913, line: 45, type: !932, isLocal: true, isDefinition: true, variable: [2 x [2 x [8 x %struct.VLC]]]* @j_ac_vlc)
!932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 6144, align: 64, elements: !944)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !934, line: 30, baseType: !935)
!934 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !934, line: 26, size: 192, align: 64, elements: !936)
!936 = !{!937, !938, !942, !943}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !935, file: !934, line: 27, baseType: !898, size: 32, align: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !935, file: !934, line: 28, baseType: !939, size: 64, align: 64, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64, align: 64)
!940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 32, align: 16, elements: !941)
!941 = !{!930}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !935, file: !934, line: 29, baseType: !898, size: 32, align: 32, offset: 128)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !935, file: !934, line: 29, baseType: !898, size: 32, align: 32, offset: 160)
!944 = !{!930, !930, !945}
!945 = !DISubrange(count: 8)
!946 = distinct !DIGlobalVariable(name: "x8_ac0_highquant_table", scope: !0, file: !947, line: 423, type: !948, isLocal: true, isDefinition: true, variable: [8 x [77 x [2 x i16]]]* @x8_ac0_highquant_table)
!947 = !DIFile(filename: "libavcodec/intrax8huf.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 19712, align: 16, elements: !949)
!949 = !{!945, !950, !930}
!950 = !DISubrange(count: 77)
!951 = distinct !DIGlobalVariable(name: "x8_ac1_highquant_table", scope: !0, file: !947, line: 781, type: !948, isLocal: true, isDefinition: true, variable: [8 x [77 x [2 x i16]]]* @x8_ac1_highquant_table)
!952 = distinct !DIGlobalVariable(name: "x8_ac0_lowquant_table", scope: !0, file: !947, line: 244, type: !948, isLocal: true, isDefinition: true, variable: [8 x [77 x [2 x i16]]]* @x8_ac0_lowquant_table)
!953 = distinct !DIGlobalVariable(name: "x8_ac1_lowquant_table", scope: !0, file: !947, line: 602, type: !948, isLocal: true, isDefinition: true, variable: [8 x [77 x [2 x i16]]]* @x8_ac1_lowquant_table)
!954 = distinct !DIGlobalVariable(name: "j_dc_vlc", scope: !0, file: !913, line: 46, type: !955, isLocal: true, isDefinition: true, variable: [2 x [8 x %struct.VLC]]* @j_dc_vlc)
!955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 3072, align: 64, elements: !956)
!956 = !{!930, !945}
!957 = distinct !DIGlobalVariable(name: "x8_dc_highquant_table", scope: !0, file: !947, line: 152, type: !958, isLocal: true, isDefinition: true, variable: [8 x [34 x [2 x i16]]]* @x8_dc_highquant_table)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 8704, align: 16, elements: !959)
!959 = !{!945, !960, !930}
!960 = !DISubrange(count: 34)
!961 = distinct !DIGlobalVariable(name: "x8_dc_lowquant_table", scope: !0, file: !947, line: 61, type: !958, isLocal: true, isDefinition: true, variable: [8 x [34 x [2 x i16]]]* @x8_dc_lowquant_table)
!962 = distinct !DIGlobalVariable(name: "j_orient_vlc", scope: !0, file: !913, line: 47, type: !963, isLocal: true, isDefinition: true, variable: [2 x [4 x %struct.VLC]]* @j_orient_vlc)
!963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 1536, align: 64, elements: !964)
!964 = !{!930, !965}
!965 = !DISubrange(count: 4)
!966 = distinct !DIGlobalVariable(name: "x8_orient_highquant_table", scope: !0, file: !947, line: 47, type: !967, isLocal: true, isDefinition: true, variable: [2 x [12 x [2 x i16]]]* @x8_orient_highquant_table)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 768, align: 16, elements: !968)
!968 = !{!930, !969, !930}
!969 = !DISubrange(count: 12)
!970 = distinct !DIGlobalVariable(name: "x8_orient_lowquant_table", scope: !0, file: !947, line: 24, type: !971, isLocal: true, isDefinition: true, variable: [4 x [12 x [2 x i16]]]* @x8_orient_lowquant_table)
!971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 1536, align: 16, elements: !972)
!972 = !{!965, !969, !930}
!973 = distinct !DIGlobalVariable(name: "prediction_table", scope: !974, file: !913, line: 365, type: !1711, isLocal: true, isDefinition: true, variable: [3 x [12 x i8]]* @x8_setup_spatial_predictor.prediction_table)
!974 = distinct !DISubprogram(name: "x8_setup_spatial_predictor", scope: !913, file: !913, line: 322, type: !975, isLocal: true, isDefinition: true, scopeLine: 323, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!975 = !DISubroutineType(types: !976)
!976 = !{!898, !977, !1107}
!977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !978)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "IntraX8Context", file: !980, line: 75, baseType: !981)
!980 = !DIFile(filename: "libavcodec/intrax8.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IntraX8Context", file: !980, line: 29, size: 8768, align: 64, elements: !982)
!982 = !{!983, !987, !988, !992, !993, !995, !1008, !1031, !1032, !1616, !1617, !1620, !1640, !1662, !1675, !1676, !1677, !1678, !1679, !1680, !1691, !1692, !1693, !1694, !1696, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "j_ac_vlc", scope: !981, file: !980, line: 30, baseType: !984, size: 256, align: 64)
!984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 256, align: 64, elements: !986)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64, align: 64)
!986 = !{!965}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "j_orient_vlc", scope: !981, file: !980, line: 31, baseType: !985, size: 64, align: 64, offset: 256)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "j_dc_vlc", scope: !981, file: !980, line: 32, baseType: !989, size: 192, align: 64, offset: 320)
!989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 192, align: 64, elements: !990)
!990 = !{!991}
!991 = !DISubrange(count: 3)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "use_quant_matrix", scope: !981, file: !980, line: 34, baseType: !898, size: 32, align: 32, offset: 512)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_table", scope: !981, file: !980, line: 37, baseType: !994, size: 64, align: 64, offset: 576)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64, align: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "scantable", scope: !981, file: !980, line: 38, baseType: !996, size: 3264, align: 64, offset: 640)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !997, size: 3264, align: 64, elements: !990)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScanTable", file: !888, line: 35, baseType: !998)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScanTable", file: !888, line: 31, size: 1088, align: 64, elements: !999)
!999 = !{!1000, !1003, !1007}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "scantable", scope: !998, file: !888, line: 32, baseType: !1001, size: 64, align: 64)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64, align: 64)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !908)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "permutated", scope: !998, file: !888, line: 33, baseType: !1004, size: 512, align: 8, offset: 64)
!1004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !908, size: 512, align: 8, elements: !1005)
!1005 = !{!1006}
!1006 = !DISubrange(count: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "raster_end", scope: !998, file: !888, line: 34, baseType: !1004, size: 512, align: 8, offset: 576)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "wdsp", scope: !981, file: !980, line: 39, baseType: !1009, size: 704, align: 64, offset: 3904)
!1009 = !DIDerivedType(tag: DW_TAG_typedef, name: "WMV2DSPContext", file: !1010, line: 33, baseType: !1011)
!1010 = !DIFile(filename: "libavcodec/wmv2dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WMV2DSPContext", file: !1010, line: 26, size: 704, align: 64, elements: !1012)
!1012 = !{!1013, !1021, !1022, !1030}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "idct_add", scope: !1011, file: !1010, line: 27, baseType: !1014, size: 64, align: 64)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64, align: 64)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{null, !994, !1017, !1020}
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1018, line: 149, baseType: !1019)
!1018 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1019 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64, align: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "idct_put", scope: !1011, file: !1010, line: 28, baseType: !1014, size: 64, align: 64, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "put_mspel_pixels_tab", scope: !1011, file: !1010, line: 30, baseType: !1023, size: 512, align: 64, offset: 128)
!1023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1024, size: 512, align: 64, elements: !1029)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "qpel_mc_func", file: !1025, line: 65, baseType: !1026)
!1025 = !DIFile(filename: "libavcodec/qpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64, align: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{null, !994, !1001, !1017}
!1029 = !{!945}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "idct_perm", scope: !1011, file: !1010, line: 32, baseType: !898, size: 32, align: 32, offset: 640)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "idct_permutation", scope: !981, file: !980, line: 40, baseType: !1004, size: 512, align: 8, offset: 4608)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !981, file: !980, line: 41, baseType: !1033, size: 64, align: 64, offset: 5120)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64, align: 64)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !1036)
!1036 = !{!1037, !1081, !1082, !1083, !1341, !1342, !1343, !1344, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1370, !1374, !1375, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1554, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1035, file: !35, line: 1561, baseType: !1038, size: 64, align: 64)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64, align: 64)
!1039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !1041)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !1042)
!1042 = !{!1043, !1047, !1051, !1055, !1056, !1057, !1058, !1062, !1068, !1070, !1074}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1041, file: !4, line: 72, baseType: !1044, size: 64, align: 64)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64, align: 64)
!1045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1046)
!1046 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1041, file: !4, line: 78, baseType: !1048, size: 64, align: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64, align: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!1044, !897}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1041, file: !4, line: 85, baseType: !1052, size: 64, align: 64, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64, align: 64)
!1053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1054)
!1054 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1041, file: !4, line: 93, baseType: !898, size: 32, align: 32, offset: 192)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1041, file: !4, line: 99, baseType: !898, size: 32, align: 32, offset: 224)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1041, file: !4, line: 108, baseType: !898, size: 32, align: 32, offset: 256)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1041, file: !4, line: 113, baseType: !1059, size: 64, align: 64, offset: 320)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64, align: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!897, !897, !897}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1041, file: !4, line: 123, baseType: !1063, size: 64, align: 64, offset: 384)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64, align: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!1066, !1066}
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64, align: 64)
!1067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1041, file: !4, line: 130, baseType: !1069, size: 32, align: 32, offset: 448)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1041, file: !4, line: 136, baseType: !1071, size: 64, align: 64, offset: 512)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!1069, !897}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1041, file: !4, line: 142, baseType: !1075, size: 64, align: 64, offset: 576)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!898, !1078, !897, !1044, !898}
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64, align: 64)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64, align: 64)
!1080 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1035, file: !35, line: 1562, baseType: !898, size: 32, align: 32, offset: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1035, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1035, file: !35, line: 1565, baseType: !1084, size: 64, align: 64, offset: 128)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64, align: 64)
!1085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1087)
!1087 = !{!1088, !1089, !1090, !1091, !1092, !1093, !1102, !1105, !1108, !1111, !1116, !1117, !1118, !1126, !1127, !1128, !1130, !1134, !1140, !1145, !1149, !1150, !1192, !1312, !1316, !1317, !1321, !1325, !1330, !1334, !1335, !1336}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1086, file: !35, line: 3475, baseType: !1044, size: 64, align: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1086, file: !35, line: 3480, baseType: !1044, size: 64, align: 64, offset: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1086, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1086, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1086, file: !35, line: 3487, baseType: !898, size: 32, align: 32, offset: 192)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1086, file: !35, line: 3488, baseType: !1094, size: 64, align: 64, offset: 256)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64, align: 64)
!1095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1096)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1097, line: 61, baseType: !1098)
!1097 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1097, line: 58, size: 64, align: 32, elements: !1099)
!1099 = !{!1100, !1101}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1098, file: !1097, line: 59, baseType: !898, size: 32, align: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1098, file: !1097, line: 60, baseType: !898, size: 32, align: 32, offset: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1086, file: !35, line: 3489, baseType: !1103, size: 64, align: 64, offset: 320)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64, align: 64)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1086, file: !35, line: 3490, baseType: !1106, size: 64, align: 64, offset: 384)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64, align: 64)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !898)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1086, file: !35, line: 3491, baseType: !1109, size: 64, align: 64, offset: 448)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64, align: 64)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1086, file: !35, line: 3492, baseType: !1112, size: 64, align: 64, offset: 512)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64, align: 64)
!1113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1114)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !907, line: 55, baseType: !1115)
!1115 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1086, file: !35, line: 3493, baseType: !908, size: 8, align: 8, offset: 576)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1086, file: !35, line: 3494, baseType: !1038, size: 64, align: 64, offset: 640)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1086, file: !35, line: 3495, baseType: !1119, size: 64, align: 64, offset: 704)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64, align: 64)
!1120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1121)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1122)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1123)
!1123 = !{!1124, !1125}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1122, file: !35, line: 3402, baseType: !898, size: 32, align: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1122, file: !35, line: 3403, baseType: !1044, size: 64, align: 64, offset: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1086, file: !35, line: 3507, baseType: !1044, size: 64, align: 64, offset: 768)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1086, file: !35, line: 3516, baseType: !898, size: 32, align: 32, offset: 832)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1086, file: !35, line: 3517, baseType: !1129, size: 64, align: 64, offset: 896)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64, align: 64)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1086, file: !35, line: 3527, baseType: !1131, size: 64, align: 64, offset: 960)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64, align: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!898, !1033}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1086, file: !35, line: 3535, baseType: !1135, size: 64, align: 64, offset: 1024)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64, align: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!898, !1033, !1138}
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1086, file: !35, line: 3541, baseType: !1141, size: 64, align: 64, offset: 1088)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1143)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1144)
!1144 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !35, line: 3461, flags: DIFlagFwdDecl)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1086, file: !35, line: 3549, baseType: !1146, size: 64, align: 64, offset: 1152)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64, align: 64)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{null, !1129}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1086, file: !35, line: 3551, baseType: !1131, size: 64, align: 64, offset: 1216)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1086, file: !35, line: 3552, baseType: !1151, size: 64, align: 64, offset: 1280)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64, align: 64)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!898, !1033, !994, !898, !1154}
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64, align: 64)
!1155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1157)
!1157 = !{!1158, !1159, !1160, !1161, !1162, !1190}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1156, file: !35, line: 3921, baseType: !919, size: 16, align: 16)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1156, file: !35, line: 3922, baseType: !906, size: 32, align: 32, offset: 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1156, file: !35, line: 3923, baseType: !906, size: 32, align: 32, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1156, file: !35, line: 3924, baseType: !899, size: 32, align: 32, offset: 96)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1156, file: !35, line: 3925, baseType: !1163, size: 64, align: 64, offset: 128)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64, align: 64)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1166)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1171, !1172, !1173, !1181, !1183, !1185, !1186, !1188, !1189}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1166, file: !35, line: 3886, baseType: !898, size: 32, align: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1166, file: !35, line: 3887, baseType: !898, size: 32, align: 32, offset: 32)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1166, file: !35, line: 3888, baseType: !898, size: 32, align: 32, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1166, file: !35, line: 3889, baseType: !898, size: 32, align: 32, offset: 96)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1166, file: !35, line: 3890, baseType: !898, size: 32, align: 32, offset: 128)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1166, file: !35, line: 3897, baseType: !1174, size: 768, align: 64, offset: 192)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1175)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1176)
!1176 = !{!1177, !1179}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1175, file: !35, line: 3855, baseType: !1178, size: 512, align: 64)
!1178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !994, size: 512, align: 64, elements: !1029)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1175, file: !35, line: 3857, baseType: !1180, size: 256, align: 32, offset: 512)
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 256, align: 32, elements: !1029)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1166, file: !35, line: 3903, baseType: !1182, size: 256, align: 64, offset: 960)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !994, size: 256, align: 64, elements: !986)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1166, file: !35, line: 3904, baseType: !1184, size: 128, align: 32, offset: 1216)
!1184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 128, align: 32, elements: !986)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1166, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1166, file: !35, line: 3908, baseType: !1187, size: 64, align: 64, offset: 1408)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64, align: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1166, file: !35, line: 3915, baseType: !1187, size: 64, align: 64, offset: 1472)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1166, file: !35, line: 3917, baseType: !898, size: 32, align: 32, offset: 1536)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1156, file: !35, line: 3926, baseType: !1191, size: 64, align: 64, offset: 192)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !926, line: 197, baseType: !1019)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1086, file: !35, line: 3564, baseType: !1193, size: 64, align: 64, offset: 1344)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64, align: 64)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!898, !1033, !1196, !1230, !1311}
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64, align: 64)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1199)
!1199 = !{!1200, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1226, !1227, !1228, !1229}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1198, file: !35, line: 1451, baseType: !1201, size: 64, align: 64)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64, align: 64)
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1203, line: 94, baseType: !1204)
!1203 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1203, line: 81, size: 192, align: 64, elements: !1205)
!1205 = !{!1206, !1210, !1211}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1204, file: !1203, line: 82, baseType: !1207, size: 64, align: 64)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64, align: 64)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1203, line: 73, baseType: !1209)
!1209 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1203, line: 73, flags: DIFlagFwdDecl)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1204, file: !1203, line: 89, baseType: !994, size: 64, align: 64, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1204, file: !1203, line: 93, baseType: !898, size: 32, align: 32, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1198, file: !35, line: 1461, baseType: !1191, size: 64, align: 64, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1198, file: !35, line: 1467, baseType: !1191, size: 64, align: 64, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1198, file: !35, line: 1468, baseType: !994, size: 64, align: 64, offset: 192)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1198, file: !35, line: 1469, baseType: !898, size: 32, align: 32, offset: 256)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1198, file: !35, line: 1470, baseType: !898, size: 32, align: 32, offset: 288)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1198, file: !35, line: 1474, baseType: !898, size: 32, align: 32, offset: 320)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1198, file: !35, line: 1479, baseType: !1219, size: 64, align: 64, offset: 384)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64, align: 64)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1222)
!1222 = !{!1223, !1224, !1225}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1221, file: !35, line: 1412, baseType: !994, size: 64, align: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1221, file: !35, line: 1413, baseType: !898, size: 32, align: 32, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1221, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1198, file: !35, line: 1480, baseType: !898, size: 32, align: 32, offset: 448)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1198, file: !35, line: 1486, baseType: !1191, size: 64, align: 64, offset: 512)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1198, file: !35, line: 1488, baseType: !1191, size: 64, align: 64, offset: 576)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1198, file: !35, line: 1497, baseType: !1191, size: 64, align: 64, offset: 640)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64, align: 64)
!1231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1232)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1234)
!1234 = !{!1235, !1236, !1237, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1264, !1266, !1267, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1300, !1301, !1302, !1303, !1304, !1305, !1307, !1308, !1309, !1310}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1233, file: !758, line: 282, baseType: !1178, size: 512, align: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1233, file: !758, line: 299, baseType: !1180, size: 256, align: 32, offset: 512)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1233, file: !758, line: 315, baseType: !1238, size: 64, align: 64, offset: 768)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64, align: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1233, file: !758, line: 326, baseType: !898, size: 32, align: 32, offset: 832)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1233, file: !758, line: 326, baseType: !898, size: 32, align: 32, offset: 864)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1233, file: !758, line: 334, baseType: !898, size: 32, align: 32, offset: 896)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1233, file: !758, line: 341, baseType: !898, size: 32, align: 32, offset: 928)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1233, file: !758, line: 346, baseType: !898, size: 32, align: 32, offset: 960)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1233, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1233, file: !758, line: 356, baseType: !1096, size: 64, align: 32, offset: 1024)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1233, file: !758, line: 361, baseType: !1191, size: 64, align: 64, offset: 1088)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1233, file: !758, line: 369, baseType: !1191, size: 64, align: 64, offset: 1152)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1233, file: !758, line: 377, baseType: !1191, size: 64, align: 64, offset: 1216)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1233, file: !758, line: 382, baseType: !898, size: 32, align: 32, offset: 1280)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1233, file: !758, line: 386, baseType: !898, size: 32, align: 32, offset: 1312)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1233, file: !758, line: 391, baseType: !898, size: 32, align: 32, offset: 1344)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1233, file: !758, line: 396, baseType: !897, size: 64, align: 64, offset: 1408)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1233, file: !758, line: 403, baseType: !1254, size: 512, align: 64, offset: 1472)
!1254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1114, size: 512, align: 64, elements: !1029)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1233, file: !758, line: 410, baseType: !898, size: 32, align: 32, offset: 1984)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1233, file: !758, line: 415, baseType: !898, size: 32, align: 32, offset: 2016)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1233, file: !758, line: 420, baseType: !898, size: 32, align: 32, offset: 2048)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1233, file: !758, line: 425, baseType: !898, size: 32, align: 32, offset: 2080)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1233, file: !758, line: 435, baseType: !1191, size: 64, align: 64, offset: 2112)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1233, file: !758, line: 440, baseType: !898, size: 32, align: 32, offset: 2176)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1233, file: !758, line: 445, baseType: !1114, size: 64, align: 64, offset: 2240)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1233, file: !758, line: 459, baseType: !1263, size: 512, align: 64, offset: 2304)
!1263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1201, size: 512, align: 64, elements: !1029)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1233, file: !758, line: 473, baseType: !1265, size: 64, align: 64, offset: 2816)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64, align: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1233, file: !758, line: 477, baseType: !898, size: 32, align: 32, offset: 2880)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1233, file: !758, line: 479, baseType: !1268, size: 64, align: 64, offset: 2944)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64, align: 64)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64, align: 64)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1272)
!1272 = !{!1273, !1274, !1275, !1276, !1281}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1271, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1271, file: !758, line: 203, baseType: !994, size: 64, align: 64, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1271, file: !758, line: 204, baseType: !898, size: 32, align: 32, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1271, file: !758, line: 205, baseType: !1277, size: 64, align: 64, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64, align: 64)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1279, line: 86, baseType: !1280)
!1279 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1280 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1279, line: 86, flags: DIFlagFwdDecl)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1271, file: !758, line: 206, baseType: !1201, size: 64, align: 64, offset: 256)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1233, file: !758, line: 480, baseType: !898, size: 32, align: 32, offset: 3008)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1233, file: !758, line: 505, baseType: !898, size: 32, align: 32, offset: 3040)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1233, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1233, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1233, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1233, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1233, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1233, file: !758, line: 532, baseType: !1191, size: 64, align: 64, offset: 3264)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1233, file: !758, line: 539, baseType: !1191, size: 64, align: 64, offset: 3328)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1233, file: !758, line: 547, baseType: !1191, size: 64, align: 64, offset: 3392)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1233, file: !758, line: 554, baseType: !1277, size: 64, align: 64, offset: 3456)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1233, file: !758, line: 563, baseType: !898, size: 32, align: 32, offset: 3520)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1233, file: !758, line: 572, baseType: !898, size: 32, align: 32, offset: 3552)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1233, file: !758, line: 581, baseType: !898, size: 32, align: 32, offset: 3584)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1233, file: !758, line: 588, baseType: !1297, size: 64, align: 64, offset: 3648)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64, align: 64)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !926, line: 194, baseType: !1299)
!1299 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1233, file: !758, line: 593, baseType: !898, size: 32, align: 32, offset: 3712)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1233, file: !758, line: 596, baseType: !898, size: 32, align: 32, offset: 3744)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1233, file: !758, line: 599, baseType: !1201, size: 64, align: 64, offset: 3776)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1233, file: !758, line: 605, baseType: !1201, size: 64, align: 64, offset: 3840)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1233, file: !758, line: 616, baseType: !1201, size: 64, align: 64, offset: 3904)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1233, file: !758, line: 626, baseType: !1306, size: 64, align: 64, offset: 3968)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1018, line: 216, baseType: !1115)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1233, file: !758, line: 627, baseType: !1306, size: 64, align: 64, offset: 4032)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1233, file: !758, line: 628, baseType: !1306, size: 64, align: 64, offset: 4096)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1233, file: !758, line: 629, baseType: !1306, size: 64, align: 64, offset: 4160)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1233, file: !758, line: 645, baseType: !1201, size: 64, align: 64, offset: 4224)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64, align: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1086, file: !35, line: 3566, baseType: !1313, size: 64, align: 64, offset: 1408)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64, align: 64)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{!898, !1033, !897, !1311, !1196}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1086, file: !35, line: 3567, baseType: !1131, size: 64, align: 64, offset: 1472)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1086, file: !35, line: 3576, baseType: !1318, size: 64, align: 64, offset: 1536)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64, align: 64)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!898, !1033, !1230}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1086, file: !35, line: 3577, baseType: !1322, size: 64, align: 64, offset: 1600)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64, align: 64)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!898, !1033, !1196}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1086, file: !35, line: 3584, baseType: !1326, size: 64, align: 64, offset: 1664)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64, align: 64)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!898, !1033, !1329}
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64, align: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1086, file: !35, line: 3589, baseType: !1331, size: 64, align: 64, offset: 1728)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64, align: 64)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{null, !1033}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1086, file: !35, line: 3594, baseType: !898, size: 32, align: 32, offset: 1792)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1086, file: !35, line: 3600, baseType: !1044, size: 64, align: 64, offset: 1856)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1086, file: !35, line: 3609, baseType: !1337, size: 64, align: 64, offset: 1920)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64, align: 64)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64, align: 64)
!1339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1340)
!1340 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1035, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1035, file: !35, line: 1581, baseType: !899, size: 32, align: 32, offset: 224)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1035, file: !35, line: 1583, baseType: !897, size: 64, align: 64, offset: 256)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1035, file: !35, line: 1591, baseType: !1345, size: 64, align: 64, offset: 320)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64, align: 64)
!1346 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !35, line: 1532, flags: DIFlagFwdDecl)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1035, file: !35, line: 1598, baseType: !897, size: 64, align: 64, offset: 384)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1035, file: !35, line: 1606, baseType: !1191, size: 64, align: 64, offset: 448)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1035, file: !35, line: 1614, baseType: !898, size: 32, align: 32, offset: 512)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1035, file: !35, line: 1622, baseType: !898, size: 32, align: 32, offset: 544)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1035, file: !35, line: 1628, baseType: !898, size: 32, align: 32, offset: 576)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1035, file: !35, line: 1636, baseType: !898, size: 32, align: 32, offset: 608)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1035, file: !35, line: 1643, baseType: !898, size: 32, align: 32, offset: 640)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1035, file: !35, line: 1657, baseType: !994, size: 64, align: 64, offset: 704)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1035, file: !35, line: 1658, baseType: !898, size: 32, align: 32, offset: 768)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1035, file: !35, line: 1679, baseType: !1096, size: 64, align: 32, offset: 800)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1035, file: !35, line: 1688, baseType: !898, size: 32, align: 32, offset: 864)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1035, file: !35, line: 1712, baseType: !898, size: 32, align: 32, offset: 896)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1035, file: !35, line: 1729, baseType: !898, size: 32, align: 32, offset: 928)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1035, file: !35, line: 1729, baseType: !898, size: 32, align: 32, offset: 960)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1035, file: !35, line: 1744, baseType: !898, size: 32, align: 32, offset: 992)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1035, file: !35, line: 1744, baseType: !898, size: 32, align: 32, offset: 1024)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1035, file: !35, line: 1751, baseType: !898, size: 32, align: 32, offset: 1056)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1035, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1035, file: !35, line: 1791, baseType: !1366, size: 64, align: 64, offset: 1152)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64, align: 64)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{null, !1369, !1230, !1311, !898, !898, !898}
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64, align: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1035, file: !35, line: 1808, baseType: !1371, size: 64, align: 64, offset: 1216)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64, align: 64)
!1372 = !DISubroutineType(types: !1373)
!1373 = !{!494, !1369, !1103}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1035, file: !35, line: 1816, baseType: !898, size: 32, align: 32, offset: 1280)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1035, file: !35, line: 1825, baseType: !1376, size: 32, align: 32, offset: 1312)
!1376 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1035, file: !35, line: 1830, baseType: !898, size: 32, align: 32, offset: 1344)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1035, file: !35, line: 1838, baseType: !1376, size: 32, align: 32, offset: 1376)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1035, file: !35, line: 1846, baseType: !898, size: 32, align: 32, offset: 1408)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1035, file: !35, line: 1851, baseType: !898, size: 32, align: 32, offset: 1440)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1035, file: !35, line: 1861, baseType: !1376, size: 32, align: 32, offset: 1472)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1035, file: !35, line: 1868, baseType: !1376, size: 32, align: 32, offset: 1504)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1035, file: !35, line: 1875, baseType: !1376, size: 32, align: 32, offset: 1536)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1035, file: !35, line: 1882, baseType: !1376, size: 32, align: 32, offset: 1568)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1035, file: !35, line: 1889, baseType: !1376, size: 32, align: 32, offset: 1600)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1035, file: !35, line: 1896, baseType: !1376, size: 32, align: 32, offset: 1632)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1035, file: !35, line: 1903, baseType: !1376, size: 32, align: 32, offset: 1664)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1035, file: !35, line: 1910, baseType: !898, size: 32, align: 32, offset: 1696)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1035, file: !35, line: 1915, baseType: !898, size: 32, align: 32, offset: 1728)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1035, file: !35, line: 1926, baseType: !1311, size: 64, align: 64, offset: 1792)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1035, file: !35, line: 1935, baseType: !1096, size: 64, align: 32, offset: 1856)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1035, file: !35, line: 1942, baseType: !898, size: 32, align: 32, offset: 1920)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1035, file: !35, line: 1948, baseType: !898, size: 32, align: 32, offset: 1952)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1035, file: !35, line: 1954, baseType: !898, size: 32, align: 32, offset: 1984)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1035, file: !35, line: 1960, baseType: !898, size: 32, align: 32, offset: 2016)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1035, file: !35, line: 1984, baseType: !898, size: 32, align: 32, offset: 2048)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1035, file: !35, line: 1991, baseType: !898, size: 32, align: 32, offset: 2080)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1035, file: !35, line: 1996, baseType: !898, size: 32, align: 32, offset: 2112)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1035, file: !35, line: 2004, baseType: !898, size: 32, align: 32, offset: 2144)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1035, file: !35, line: 2011, baseType: !898, size: 32, align: 32, offset: 2176)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1035, file: !35, line: 2018, baseType: !898, size: 32, align: 32, offset: 2208)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1035, file: !35, line: 2027, baseType: !898, size: 32, align: 32, offset: 2240)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1035, file: !35, line: 2034, baseType: !898, size: 32, align: 32, offset: 2272)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1035, file: !35, line: 2044, baseType: !898, size: 32, align: 32, offset: 2304)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1035, file: !35, line: 2054, baseType: !1406, size: 64, align: 64, offset: 2368)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64, align: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1035, file: !35, line: 2061, baseType: !1406, size: 64, align: 64, offset: 2432)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1035, file: !35, line: 2066, baseType: !898, size: 32, align: 32, offset: 2496)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1035, file: !35, line: 2070, baseType: !898, size: 32, align: 32, offset: 2528)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1035, file: !35, line: 2078, baseType: !898, size: 32, align: 32, offset: 2560)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1035, file: !35, line: 2085, baseType: !898, size: 32, align: 32, offset: 2592)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1035, file: !35, line: 2092, baseType: !898, size: 32, align: 32, offset: 2624)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1035, file: !35, line: 2099, baseType: !898, size: 32, align: 32, offset: 2656)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1035, file: !35, line: 2106, baseType: !898, size: 32, align: 32, offset: 2688)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1035, file: !35, line: 2113, baseType: !898, size: 32, align: 32, offset: 2720)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1035, file: !35, line: 2120, baseType: !898, size: 32, align: 32, offset: 2752)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1035, file: !35, line: 2125, baseType: !898, size: 32, align: 32, offset: 2784)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1035, file: !35, line: 2133, baseType: !898, size: 32, align: 32, offset: 2816)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1035, file: !35, line: 2140, baseType: !898, size: 32, align: 32, offset: 2848)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1035, file: !35, line: 2145, baseType: !898, size: 32, align: 32, offset: 2880)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1035, file: !35, line: 2153, baseType: !898, size: 32, align: 32, offset: 2912)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1035, file: !35, line: 2158, baseType: !898, size: 32, align: 32, offset: 2944)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1035, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1035, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1035, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1035, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1035, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1035, file: !35, line: 2203, baseType: !898, size: 32, align: 32, offset: 3136)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1035, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1035, file: !35, line: 2212, baseType: !898, size: 32, align: 32, offset: 3200)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1035, file: !35, line: 2213, baseType: !898, size: 32, align: 32, offset: 3232)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1035, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1035, file: !35, line: 2232, baseType: !898, size: 32, align: 32, offset: 3296)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1035, file: !35, line: 2243, baseType: !898, size: 32, align: 32, offset: 3328)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1035, file: !35, line: 2249, baseType: !898, size: 32, align: 32, offset: 3360)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1035, file: !35, line: 2256, baseType: !898, size: 32, align: 32, offset: 3392)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1035, file: !35, line: 2263, baseType: !1114, size: 64, align: 64, offset: 3456)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1035, file: !35, line: 2270, baseType: !1114, size: 64, align: 64, offset: 3520)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1035, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1035, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1035, file: !35, line: 2367, baseType: !1442, size: 64, align: 64, offset: 3648)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64, align: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!898, !1369, !1329, !898}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1035, file: !35, line: 2383, baseType: !898, size: 32, align: 32, offset: 3712)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1035, file: !35, line: 2386, baseType: !1376, size: 32, align: 32, offset: 3744)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1035, file: !35, line: 2387, baseType: !1376, size: 32, align: 32, offset: 3776)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1035, file: !35, line: 2394, baseType: !898, size: 32, align: 32, offset: 3808)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1035, file: !35, line: 2401, baseType: !898, size: 32, align: 32, offset: 3840)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1035, file: !35, line: 2408, baseType: !898, size: 32, align: 32, offset: 3872)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1035, file: !35, line: 2415, baseType: !898, size: 32, align: 32, offset: 3904)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1035, file: !35, line: 2422, baseType: !898, size: 32, align: 32, offset: 3936)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1035, file: !35, line: 2423, baseType: !1454, size: 64, align: 64, offset: 3968)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64, align: 64)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !1456)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !1457)
!1457 = !{!1458, !1459, !1460, !1461}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1456, file: !35, line: 827, baseType: !898, size: 32, align: 32)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1456, file: !35, line: 828, baseType: !898, size: 32, align: 32, offset: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1456, file: !35, line: 829, baseType: !898, size: 32, align: 32, offset: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1456, file: !35, line: 830, baseType: !1376, size: 32, align: 32, offset: 96)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1035, file: !35, line: 2430, baseType: !1191, size: 64, align: 64, offset: 4032)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1035, file: !35, line: 2437, baseType: !1191, size: 64, align: 64, offset: 4096)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1035, file: !35, line: 2444, baseType: !1376, size: 32, align: 32, offset: 4160)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1035, file: !35, line: 2451, baseType: !1376, size: 32, align: 32, offset: 4192)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1035, file: !35, line: 2458, baseType: !898, size: 32, align: 32, offset: 4224)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1035, file: !35, line: 2469, baseType: !898, size: 32, align: 32, offset: 4256)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1035, file: !35, line: 2475, baseType: !898, size: 32, align: 32, offset: 4288)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1035, file: !35, line: 2481, baseType: !898, size: 32, align: 32, offset: 4320)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1035, file: !35, line: 2485, baseType: !898, size: 32, align: 32, offset: 4352)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1035, file: !35, line: 2489, baseType: !898, size: 32, align: 32, offset: 4384)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1035, file: !35, line: 2493, baseType: !898, size: 32, align: 32, offset: 4416)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1035, file: !35, line: 2501, baseType: !898, size: 32, align: 32, offset: 4448)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1035, file: !35, line: 2506, baseType: !898, size: 32, align: 32, offset: 4480)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1035, file: !35, line: 2510, baseType: !898, size: 32, align: 32, offset: 4512)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1035, file: !35, line: 2514, baseType: !1191, size: 64, align: 64, offset: 4544)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1035, file: !35, line: 2528, baseType: !1478, size: 64, align: 64, offset: 4608)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64, align: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{null, !1369, !897, !898, !898}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1035, file: !35, line: 2534, baseType: !898, size: 32, align: 32, offset: 4672)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1035, file: !35, line: 2545, baseType: !898, size: 32, align: 32, offset: 4704)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1035, file: !35, line: 2547, baseType: !898, size: 32, align: 32, offset: 4736)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1035, file: !35, line: 2549, baseType: !898, size: 32, align: 32, offset: 4768)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1035, file: !35, line: 2551, baseType: !898, size: 32, align: 32, offset: 4800)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1035, file: !35, line: 2553, baseType: !898, size: 32, align: 32, offset: 4832)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1035, file: !35, line: 2555, baseType: !898, size: 32, align: 32, offset: 4864)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1035, file: !35, line: 2557, baseType: !898, size: 32, align: 32, offset: 4896)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1035, file: !35, line: 2559, baseType: !898, size: 32, align: 32, offset: 4928)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1035, file: !35, line: 2563, baseType: !898, size: 32, align: 32, offset: 4960)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1035, file: !35, line: 2571, baseType: !1187, size: 64, align: 64, offset: 4992)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1035, file: !35, line: 2579, baseType: !1187, size: 64, align: 64, offset: 5056)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1035, file: !35, line: 2586, baseType: !898, size: 32, align: 32, offset: 5120)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1035, file: !35, line: 2615, baseType: !898, size: 32, align: 32, offset: 5152)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1035, file: !35, line: 2627, baseType: !898, size: 32, align: 32, offset: 5184)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1035, file: !35, line: 2637, baseType: !898, size: 32, align: 32, offset: 5216)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1035, file: !35, line: 2681, baseType: !898, size: 32, align: 32, offset: 5248)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1035, file: !35, line: 2709, baseType: !1191, size: 64, align: 64, offset: 5312)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1035, file: !35, line: 2716, baseType: !1500, size: 64, align: 64, offset: 5376)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64, align: 64)
!1501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507, !1508, !1509, !1510, !1514, !1518, !1519, !1520, !1521, !1527, !1528, !1529, !1530, !1531}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1502, file: !35, line: 3642, baseType: !1044, size: 64, align: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1502, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1502, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1502, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1502, file: !35, line: 3669, baseType: !898, size: 32, align: 32, offset: 160)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1502, file: !35, line: 3682, baseType: !1326, size: 64, align: 64, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1502, file: !35, line: 3698, baseType: !1511, size: 64, align: 64, offset: 256)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64, align: 64)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!898, !1033, !1001, !906}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1502, file: !35, line: 3712, baseType: !1515, size: 64, align: 64, offset: 320)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64, align: 64)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{!898, !1033, !898, !1001, !906}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1502, file: !35, line: 3726, baseType: !1511, size: 64, align: 64, offset: 384)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1502, file: !35, line: 3737, baseType: !1131, size: 64, align: 64, offset: 448)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1502, file: !35, line: 3746, baseType: !898, size: 32, align: 32, offset: 512)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1502, file: !35, line: 3757, baseType: !1522, size: 64, align: 64, offset: 576)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64, align: 64)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{null, !1525}
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64, align: 64)
!1526 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1502, file: !35, line: 3766, baseType: !1131, size: 64, align: 64, offset: 640)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1502, file: !35, line: 3774, baseType: !1131, size: 64, align: 64, offset: 704)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1502, file: !35, line: 3780, baseType: !898, size: 32, align: 32, offset: 768)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1502, file: !35, line: 3785, baseType: !898, size: 32, align: 32, offset: 800)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1502, file: !35, line: 3795, baseType: !1532, size: 64, align: 64, offset: 832)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64, align: 64)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!898, !1033, !1201}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1035, file: !35, line: 2728, baseType: !897, size: 64, align: 64, offset: 5440)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1035, file: !35, line: 2735, baseType: !1254, size: 512, align: 64, offset: 5504)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1035, file: !35, line: 2742, baseType: !898, size: 32, align: 32, offset: 6016)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1035, file: !35, line: 2755, baseType: !898, size: 32, align: 32, offset: 6048)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1035, file: !35, line: 2776, baseType: !898, size: 32, align: 32, offset: 6080)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1035, file: !35, line: 2783, baseType: !898, size: 32, align: 32, offset: 6112)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1035, file: !35, line: 2791, baseType: !898, size: 32, align: 32, offset: 6144)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1035, file: !35, line: 2802, baseType: !1329, size: 64, align: 64, offset: 6208)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1035, file: !35, line: 2811, baseType: !898, size: 32, align: 32, offset: 6272)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1035, file: !35, line: 2821, baseType: !898, size: 32, align: 32, offset: 6304)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1035, file: !35, line: 2830, baseType: !898, size: 32, align: 32, offset: 6336)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1035, file: !35, line: 2840, baseType: !898, size: 32, align: 32, offset: 6368)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1035, file: !35, line: 2851, baseType: !1548, size: 64, align: 64, offset: 6400)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64, align: 64)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{!898, !1369, !1551, !897, !1311, !898, !898}
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64, align: 64)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!898, !1369, !897}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1035, file: !35, line: 2871, baseType: !1555, size: 64, align: 64, offset: 6464)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64, align: 64)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{!898, !1369, !1558, !897, !1311, !898}
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64, align: 64)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!898, !1369, !897, !898, !898}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1035, file: !35, line: 2878, baseType: !898, size: 32, align: 32, offset: 6528)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1035, file: !35, line: 2885, baseType: !898, size: 32, align: 32, offset: 6560)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1035, file: !35, line: 3005, baseType: !898, size: 32, align: 32, offset: 6592)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1035, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1035, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1035, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1035, file: !35, line: 3037, baseType: !994, size: 64, align: 64, offset: 6720)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1035, file: !35, line: 3038, baseType: !898, size: 32, align: 32, offset: 6784)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1035, file: !35, line: 3050, baseType: !1114, size: 64, align: 64, offset: 6848)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1035, file: !35, line: 3065, baseType: !898, size: 32, align: 32, offset: 6912)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1035, file: !35, line: 3083, baseType: !898, size: 32, align: 32, offset: 6944)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1035, file: !35, line: 3092, baseType: !1096, size: 64, align: 32, offset: 6976)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1035, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1035, file: !35, line: 3106, baseType: !1096, size: 64, align: 32, offset: 7072)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1035, file: !35, line: 3113, baseType: !1576, size: 64, align: 64, offset: 7168)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64, align: 64)
!1577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1578)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !1579)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !1580)
!1580 = !{!1581, !1582, !1583, !1584, !1585, !1586, !1589}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1579, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1579, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1579, file: !35, line: 720, baseType: !1044, size: 64, align: 64, offset: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1579, file: !35, line: 724, baseType: !1044, size: 64, align: 64, offset: 128)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1579, file: !35, line: 728, baseType: !898, size: 32, align: 32, offset: 192)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1579, file: !35, line: 734, baseType: !1587, size: 64, align: 64, offset: 256)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64, align: 64)
!1588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1044)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1579, file: !35, line: 739, baseType: !1590, size: 64, align: 64, offset: 320)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64, align: 64)
!1591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1122)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1035, file: !35, line: 3129, baseType: !1191, size: 64, align: 64, offset: 7232)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1035, file: !35, line: 3130, baseType: !1191, size: 64, align: 64, offset: 7296)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1035, file: !35, line: 3131, baseType: !1191, size: 64, align: 64, offset: 7360)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1035, file: !35, line: 3132, baseType: !1191, size: 64, align: 64, offset: 7424)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1035, file: !35, line: 3139, baseType: !1187, size: 64, align: 64, offset: 7488)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1035, file: !35, line: 3147, baseType: !898, size: 32, align: 32, offset: 7552)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1035, file: !35, line: 3165, baseType: !898, size: 32, align: 32, offset: 7584)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1035, file: !35, line: 3172, baseType: !898, size: 32, align: 32, offset: 7616)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1035, file: !35, line: 3180, baseType: !898, size: 32, align: 32, offset: 7648)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1035, file: !35, line: 3191, baseType: !1406, size: 64, align: 64, offset: 7680)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1035, file: !35, line: 3199, baseType: !994, size: 64, align: 64, offset: 7744)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1035, file: !35, line: 3207, baseType: !1187, size: 64, align: 64, offset: 7808)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1035, file: !35, line: 3214, baseType: !899, size: 32, align: 32, offset: 7872)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1035, file: !35, line: 3224, baseType: !1219, size: 64, align: 64, offset: 7936)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1035, file: !35, line: 3225, baseType: !898, size: 32, align: 32, offset: 8000)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1035, file: !35, line: 3249, baseType: !1201, size: 64, align: 64, offset: 8064)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1035, file: !35, line: 3256, baseType: !898, size: 32, align: 32, offset: 8128)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1035, file: !35, line: 3271, baseType: !898, size: 32, align: 32, offset: 8160)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1035, file: !35, line: 3279, baseType: !1191, size: 64, align: 64, offset: 8192)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1035, file: !35, line: 3301, baseType: !1201, size: 64, align: 64, offset: 8256)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1035, file: !35, line: 3310, baseType: !898, size: 32, align: 32, offset: 8320)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1035, file: !35, line: 3337, baseType: !898, size: 32, align: 32, offset: 8352)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1035, file: !35, line: 3351, baseType: !898, size: 32, align: 32, offset: 8384)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1035, file: !35, line: 3359, baseType: !898, size: 32, align: 32, offset: 8416)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "block_last_index", scope: !981, file: !980, line: 42, baseType: !1311, size: 64, align: 64, offset: 5184)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !981, file: !980, line: 43, baseType: !1618, size: 64, align: 64, offset: 5248)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64, align: 64)
!1619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 1024, align: 16, elements: !1005)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !981, file: !980, line: 46, baseType: !1621, size: 960, align: 64, offset: 5312)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "IntraX8DSPContext", file: !1622, line: 34, baseType: !1623)
!1622 = !DIFile(filename: "libavcodec/intrax8dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IntraX8DSPContext", file: !1622, line: 25, size: 960, align: 64, elements: !1624)
!1624 = !{!1625, !1629, !1630, !1636}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "v_loop_filter", scope: !1623, file: !1622, line: 26, baseType: !1626, size: 64, align: 64)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64, align: 64)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{null, !994, !1017, !898}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "h_loop_filter", scope: !1623, file: !1622, line: 27, baseType: !1626, size: 64, align: 64, offset: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_compensation", scope: !1623, file: !1622, line: 29, baseType: !1631, size: 768, align: 64, offset: 128)
!1631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1632, size: 768, align: 64, elements: !1635)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64, align: 64)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{null, !994, !994, !1017}
!1635 = !{!969}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "setup_spatial_compensation", scope: !1623, file: !1622, line: 31, baseType: !1637, size: 64, align: 64, offset: 896)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64, align: 64)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{null, !994, !994, !1017, !1311, !1311, !898}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "idsp", scope: !981, file: !980, line: 47, baseType: !1641, size: 960, align: 64, offset: 6272)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDCTDSPContext", file: !888, line: 100, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDCTDSPContext", file: !888, line: 53, size: 960, align: 64, elements: !1643)
!1643 = !{!1644, !1651, !1652, !1653, !1657, !1658, !1659, !1660, !1661}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_clamped", scope: !1642, file: !888, line: 55, baseType: !1645, size: 64, align: 64)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64, align: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{null, !1648, !1650, !1017}
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64, align: 64)
!1649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !925)
!1650 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !994)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "put_signed_pixels_clamped", scope: !1642, file: !888, line: 58, baseType: !1645, size: 64, align: 64, offset: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "add_pixels_clamped", scope: !1642, file: !888, line: 61, baseType: !1645, size: 64, align: 64, offset: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "idct", scope: !1642, file: !888, line: 65, baseType: !1654, size: 64, align: 64, offset: 192)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64, align: 64)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{null, !1020}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "idct_put", scope: !1642, file: !888, line: 72, baseType: !1014, size: 64, align: 64, offset: 256)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "idct_add", scope: !1642, file: !888, line: 79, baseType: !1014, size: 64, align: 64, offset: 320)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "idct_permutation", scope: !1642, file: !888, line: 96, baseType: !1004, size: 512, align: 8, offset: 384)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "perm_type", scope: !1642, file: !888, line: 97, baseType: !887, size: 32, align: 32, offset: 896)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg4_studio_profile", scope: !1642, file: !888, line: 99, baseType: !898, size: 32, align: 32, offset: 928)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !981, file: !980, line: 48, baseType: !1663, size: 256, align: 64, offset: 7232)
!1663 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockDSPContext", file: !1664, line: 40, baseType: !1665)
!1664 = !DIFile(filename: "libavcodec/blockdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BlockDSPContext", file: !1664, line: 35, size: 256, align: 64, elements: !1666)
!1666 = !{!1667, !1668, !1669}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "clear_block", scope: !1665, file: !1664, line: 36, baseType: !1654, size: 64, align: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "clear_blocks", scope: !1665, file: !1664, line: 37, baseType: !1654, size: 64, align: 64, offset: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "fill_block_tab", scope: !1665, file: !1664, line: 39, baseType: !1670, size: 128, align: 64, offset: 128)
!1670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1671, size: 128, align: 64, elements: !941)
!1671 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_fill_func", file: !1664, line: 32, baseType: !1672)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64, align: 64)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{null, !994, !908, !1017, !898}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "quant", scope: !981, file: !980, line: 49, baseType: !898, size: 32, align: 32, offset: 7488)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "dquant", scope: !981, file: !980, line: 50, baseType: !898, size: 32, align: 32, offset: 7520)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "qsum", scope: !981, file: !980, line: 51, baseType: !898, size: 32, align: 32, offset: 7552)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "loopfilter", scope: !981, file: !980, line: 52, baseType: !898, size: 32, align: 32, offset: 7584)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !981, file: !980, line: 53, baseType: !1329, size: 64, align: 64, offset: 7616)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !981, file: !980, line: 54, baseType: !1681, size: 64, align: 64, offset: 7680)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64, align: 64)
!1682 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1683, line: 70, baseType: !1684)
!1683 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1683, line: 61, size: 256, align: 64, elements: !1685)
!1685 = !{!1686, !1687, !1688, !1689, !1690}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1684, file: !1683, line: 62, baseType: !1001, size: 64, align: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1684, file: !1683, line: 62, baseType: !1001, size: 64, align: 64, offset: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1684, file: !1683, line: 67, baseType: !898, size: 32, align: 32, offset: 128)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1684, file: !1683, line: 68, baseType: !898, size: 32, align: 32, offset: 160)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1684, file: !1683, line: 69, baseType: !898, size: 32, align: 32, offset: 192)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "quant_dc_chroma", scope: !981, file: !980, line: 57, baseType: !898, size: 32, align: 32, offset: 7744)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "divide_quant_dc_luma", scope: !981, file: !980, line: 58, baseType: !898, size: 32, align: 32, offset: 7776)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "divide_quant_dc_chroma", scope: !981, file: !980, line: 59, baseType: !898, size: 32, align: 32, offset: 7808)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !981, file: !980, line: 60, baseType: !1695, size: 192, align: 64, offset: 7872)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !994, size: 192, align: 64, elements: !990)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "scratchpad", scope: !981, file: !980, line: 61, baseType: !1697, size: 336, align: 8, offset: 8064)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !908, size: 336, align: 8, elements: !1698)
!1698 = !{!1699}
!1699 = !DISubrange(count: 42)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !981, file: !980, line: 64, baseType: !898, size: 32, align: 32, offset: 8416)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flat_dc", scope: !981, file: !980, line: 65, baseType: !898, size: 32, align: 32, offset: 8448)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "predicted_dc", scope: !981, file: !980, line: 66, baseType: !898, size: 32, align: 32, offset: 8480)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "raw_orient", scope: !981, file: !980, line: 67, baseType: !898, size: 32, align: 32, offset: 8512)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_orient", scope: !981, file: !980, line: 68, baseType: !898, size: 32, align: 32, offset: 8544)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "orient", scope: !981, file: !980, line: 69, baseType: !898, size: 32, align: 32, offset: 8576)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "est_run", scope: !981, file: !980, line: 70, baseType: !898, size: 32, align: 32, offset: 8608)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "mb_x", scope: !981, file: !980, line: 73, baseType: !898, size: 32, align: 32, offset: 8640)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "mb_y", scope: !981, file: !980, line: 73, baseType: !898, size: 32, align: 32, offset: 8672)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "mb_width", scope: !981, file: !980, line: 74, baseType: !898, size: 32, align: 32, offset: 8704)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "mb_height", scope: !981, file: !980, line: 74, baseType: !898, size: 32, align: 32, offset: 8736)
!1711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1002, size: 288, align: 8, elements: !1712)
!1712 = !{!991, !969}
!1713 = distinct !DIGlobalVariable(name: "dc_index_offset", scope: !0, file: !913, line: 282, type: !1714, isLocal: true, isDefinition: true, variable: [17 x i8]* @dc_index_offset)
!1714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1002, size: 136, align: 8, elements: !1715)
!1715 = !{!1716}
!1716 = !DISubrange(count: 17)
!1717 = distinct !DIGlobalVariable(name: "crazy_mix_runlevel", scope: !1718, file: !913, line: 260, type: !1722, isLocal: true, isDefinition: true, variable: [32 x i8]* @x8_get_ac_rlf.crazy_mix_runlevel)
!1718 = distinct !DISubprogram(name: "x8_get_ac_rlf", scope: !913, file: !913, line: 206, type: !1719, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{null, !977, !1107, !1721, !1721, !1721}
!1721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1311)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1002, size: 256, align: 8, elements: !1723)
!1723 = !{!1724}
!1724 = !DISubrange(count: 32)
!1725 = distinct !DIGlobalVariable(name: "ac_decode_table", scope: !0, file: !913, line: 164, type: !1726, isLocal: true, isDefinition: true, variable: [27 x i32]* @ac_decode_table)
!1726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 864, align: 32, elements: !1728)
!1727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !906)
!1728 = !{!1729}
!1729 = !DISubrange(count: 27)
!1730 = distinct !DIGlobalVariable(name: "quant_table", scope: !0, file: !913, line: 556, type: !1731, isLocal: true, isDefinition: true, variable: [64 x i16]* @quant_table)
!1731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 1024, align: 16, elements: !1005)
!1732 = !{i32 2, !"Dwarf Version", i32 4}
!1733 = !{i32 2, !"Debug Info Version", i32 3}
!1734 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1735 = distinct !DISubprogram(name: "ff_intrax8_common_init", scope: !913, file: !913, line: 728, type: !1736, isLocal: false, isDefinition: true, scopeLine: 733, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{!898, !1033, !978, !1738, !1618, !1311, !898, !898}
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64, align: 64)
!1739 = !DILocalVariable(name: "avctx", arg: 1, scope: !1735, file: !913, line: 728, type: !1033)
!1740 = !DIExpression()
!1741 = !DILocation(line: 728, column: 66, scope: !1735)
!1742 = !DILocalVariable(name: "w", arg: 2, scope: !1735, file: !913, line: 729, type: !978)
!1743 = !DILocation(line: 729, column: 52, scope: !1735)
!1744 = !DILocalVariable(name: "idsp", arg: 3, scope: !1735, file: !913, line: 729, type: !1738)
!1745 = !DILocation(line: 729, column: 71, scope: !1735)
!1746 = !DILocalVariable(name: "block", arg: 4, scope: !1735, file: !913, line: 730, type: !1618)
!1747 = !DILocation(line: 730, column: 46, scope: !1735)
!1748 = !DILocalVariable(name: "block_last_index", arg: 5, scope: !1735, file: !913, line: 731, type: !1311)
!1749 = !DILocation(line: 731, column: 40, scope: !1735)
!1750 = !DILocalVariable(name: "mb_width", arg: 6, scope: !1735, file: !913, line: 732, type: !898)
!1751 = !DILocation(line: 732, column: 40, scope: !1735)
!1752 = !DILocalVariable(name: "mb_height", arg: 7, scope: !1735, file: !913, line: 732, type: !898)
!1753 = !DILocation(line: 732, column: 54, scope: !1735)
!1754 = !DILocalVariable(name: "ret", scope: !1735, file: !913, line: 734, type: !898)
!1755 = !DILocation(line: 734, column: 9, scope: !1735)
!1756 = !DILocation(line: 734, column: 15, scope: !1735)
!1757 = !DILocation(line: 735, column: 9, scope: !1758)
!1758 = distinct !DILexicalBlock(scope: !1735, file: !913, line: 735, column: 9)
!1759 = !DILocation(line: 735, column: 13, scope: !1758)
!1760 = !DILocation(line: 735, column: 9, scope: !1735)
!1761 = !DILocation(line: 736, column: 16, scope: !1758)
!1762 = !DILocation(line: 736, column: 9, scope: !1758)
!1763 = !DILocation(line: 738, column: 16, scope: !1735)
!1764 = !DILocation(line: 738, column: 5, scope: !1735)
!1765 = !DILocation(line: 738, column: 8, scope: !1735)
!1766 = !DILocation(line: 738, column: 14, scope: !1735)
!1767 = !DILocation(line: 739, column: 5, scope: !1735)
!1768 = !DILocation(line: 739, column: 8, scope: !1735)
!1769 = !DILocation(line: 739, column: 16, scope: !1735)
!1770 = !DILocation(line: 739, column: 15, scope: !1735)
!1771 = !DILocation(line: 740, column: 19, scope: !1735)
!1772 = !DILocation(line: 740, column: 5, scope: !1735)
!1773 = !DILocation(line: 740, column: 8, scope: !1735)
!1774 = !DILocation(line: 740, column: 17, scope: !1735)
!1775 = !DILocation(line: 741, column: 20, scope: !1735)
!1776 = !DILocation(line: 741, column: 5, scope: !1735)
!1777 = !DILocation(line: 741, column: 8, scope: !1735)
!1778 = !DILocation(line: 741, column: 18, scope: !1735)
!1779 = !DILocation(line: 742, column: 16, scope: !1735)
!1780 = !DILocation(line: 742, column: 5, scope: !1735)
!1781 = !DILocation(line: 742, column: 8, scope: !1735)
!1782 = !DILocation(line: 742, column: 14, scope: !1735)
!1783 = !DILocation(line: 743, column: 27, scope: !1735)
!1784 = !DILocation(line: 743, column: 5, scope: !1735)
!1785 = !DILocation(line: 743, column: 8, scope: !1735)
!1786 = !DILocation(line: 743, column: 25, scope: !1735)
!1787 = !DILocation(line: 746, column: 38, scope: !1735)
!1788 = !DILocation(line: 746, column: 41, scope: !1735)
!1789 = !DILocation(line: 746, column: 50, scope: !1735)
!1790 = !DILocation(line: 746, column: 54, scope: !1735)
!1791 = !DILocation(line: 746, column: 27, scope: !1735)
!1792 = !DILocation(line: 746, column: 5, scope: !1735)
!1793 = !DILocation(line: 746, column: 8, scope: !1735)
!1794 = !DILocation(line: 746, column: 25, scope: !1735)
!1795 = !DILocation(line: 747, column: 10, scope: !1796)
!1796 = distinct !DILexicalBlock(scope: !1735, file: !913, line: 747, column: 9)
!1797 = !DILocation(line: 747, column: 13, scope: !1796)
!1798 = !DILocation(line: 747, column: 9, scope: !1735)
!1799 = !DILocation(line: 748, column: 9, scope: !1796)
!1800 = !DILocation(line: 750, column: 22, scope: !1735)
!1801 = !DILocation(line: 750, column: 25, scope: !1735)
!1802 = !DILocation(line: 750, column: 5, scope: !1735)
!1803 = !DILocation(line: 752, column: 35, scope: !1735)
!1804 = !DILocation(line: 752, column: 38, scope: !1735)
!1805 = !DILocation(line: 753, column: 35, scope: !1735)
!1806 = !DILocation(line: 753, column: 38, scope: !1735)
!1807 = !DILocation(line: 753, column: 43, scope: !1735)
!1808 = !DILocation(line: 752, column: 5, scope: !1735)
!1809 = !DILocation(line: 755, column: 23, scope: !1735)
!1810 = !DILocation(line: 755, column: 26, scope: !1735)
!1811 = !DILocation(line: 755, column: 45, scope: !1735)
!1812 = !DILocation(line: 755, column: 48, scope: !1735)
!1813 = !DILocation(line: 755, column: 5, scope: !1735)
!1814 = !DILocation(line: 757, column: 23, scope: !1735)
!1815 = !DILocation(line: 757, column: 26, scope: !1735)
!1816 = !DILocation(line: 757, column: 45, scope: !1735)
!1817 = !DILocation(line: 757, column: 48, scope: !1735)
!1818 = !DILocation(line: 757, column: 5, scope: !1735)
!1819 = !DILocation(line: 759, column: 23, scope: !1735)
!1820 = !DILocation(line: 759, column: 26, scope: !1735)
!1821 = !DILocation(line: 759, column: 45, scope: !1735)
!1822 = !DILocation(line: 759, column: 48, scope: !1735)
!1823 = !DILocation(line: 759, column: 5, scope: !1735)
!1824 = !DILocation(line: 762, column: 25, scope: !1735)
!1825 = !DILocation(line: 762, column: 28, scope: !1735)
!1826 = !DILocation(line: 762, column: 5, scope: !1735)
!1827 = !DILocation(line: 763, column: 23, scope: !1735)
!1828 = !DILocation(line: 763, column: 26, scope: !1735)
!1829 = !DILocation(line: 763, column: 32, scope: !1735)
!1830 = !DILocation(line: 763, column: 5, scope: !1735)
!1831 = !DILocation(line: 765, column: 5, scope: !1735)
!1832 = !DILocation(line: 766, column: 1, scope: !1735)
!1833 = !DILocalVariable(name: "i", scope: !912, file: !913, line: 51, type: !898)
!1834 = !DILocation(line: 51, column: 9, scope: !912)
!1835 = !DILocalVariable(name: "offset", scope: !912, file: !913, line: 52, type: !898)
!1836 = !DILocation(line: 52, column: 9, scope: !912)
!1837 = !DILocalVariable(name: "sizeidx", scope: !912, file: !913, line: 53, type: !898)
!1838 = !DILocation(line: 53, column: 9, scope: !912)
!1839 = !DILocation(line: 78, column: 12, scope: !1840)
!1840 = distinct !DILexicalBlock(scope: !912, file: !913, line: 78, column: 5)
!1841 = !DILocation(line: 78, column: 10, scope: !1840)
!1842 = !DILocation(line: 78, column: 17, scope: !1843)
!1843 = !DILexicalBlockFile(scope: !1844, file: !913, discriminator: 1)
!1844 = distinct !DILexicalBlock(scope: !1840, file: !913, line: 78, column: 5)
!1845 = !DILocation(line: 78, column: 19, scope: !1843)
!1846 = !DILocation(line: 78, column: 5, scope: !1843)
!1847 = !DILocation(line: 79, column: 9, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1844, file: !913, line: 78, column: 29)
!1849 = distinct !{!1849, !1847}
!1850 = !DILocation(line: 79, column: 47, scope: !1851)
!1851 = !DILexicalBlockFile(scope: !1852, file: !913, discriminator: 1)
!1852 = distinct !DILexicalBlock(scope: !1848, file: !913, line: 79, column: 12)
!1853 = !DILocation(line: 79, column: 41, scope: !1851)
!1854 = !DILocation(line: 79, column: 29, scope: !1851)
!1855 = !DILocation(line: 79, column: 14, scope: !1851)
!1856 = !DILocation(line: 79, column: 32, scope: !1851)
!1857 = !DILocation(line: 79, column: 38, scope: !1851)
!1858 = !DILocation(line: 79, column: 98, scope: !1851)
!1859 = !DILocation(line: 79, column: 92, scope: !1851)
!1860 = !DILocation(line: 79, column: 71, scope: !1851)
!1861 = !DILocation(line: 79, column: 56, scope: !1851)
!1862 = !DILocation(line: 79, column: 74, scope: !1851)
!1863 = !DILocation(line: 79, column: 90, scope: !1851)
!1864 = !DILocation(line: 79, column: 131, scope: !1851)
!1865 = !DILocation(line: 79, column: 118, scope: !1851)
!1866 = !DILocation(line: 79, column: 115, scope: !1851)
!1867 = !DILocation(line: 79, column: 171, scope: !1851)
!1868 = !DILocation(line: 79, column: 156, scope: !1851)
!1869 = !DILocation(line: 79, column: 206, scope: !1851)
!1870 = !DILocation(line: 79, column: 183, scope: !1851)
!1871 = !DILocation(line: 79, column: 182, scope: !1851)
!1872 = !DILocation(line: 79, column: 246, scope: !1851)
!1873 = !DILocation(line: 79, column: 223, scope: !1851)
!1874 = !DILocation(line: 79, column: 222, scope: !1851)
!1875 = !DILocation(line: 79, column: 136, scope: !1851)
!1876 = !DILocation(line: 79, column: 20, scope: !1851)
!1877 = !DILocation(line: 80, column: 9, scope: !1848)
!1878 = distinct !{!1878, !1877}
!1879 = !DILocation(line: 80, column: 47, scope: !1880)
!1880 = !DILexicalBlockFile(scope: !1881, file: !913, discriminator: 1)
!1881 = distinct !DILexicalBlock(scope: !1848, file: !913, line: 80, column: 12)
!1882 = !DILocation(line: 80, column: 41, scope: !1880)
!1883 = !DILocation(line: 80, column: 29, scope: !1880)
!1884 = !DILocation(line: 80, column: 14, scope: !1880)
!1885 = !DILocation(line: 80, column: 32, scope: !1880)
!1886 = !DILocation(line: 80, column: 38, scope: !1880)
!1887 = !DILocation(line: 80, column: 98, scope: !1880)
!1888 = !DILocation(line: 80, column: 92, scope: !1880)
!1889 = !DILocation(line: 80, column: 71, scope: !1880)
!1890 = !DILocation(line: 80, column: 56, scope: !1880)
!1891 = !DILocation(line: 80, column: 74, scope: !1880)
!1892 = !DILocation(line: 80, column: 90, scope: !1880)
!1893 = !DILocation(line: 80, column: 131, scope: !1880)
!1894 = !DILocation(line: 80, column: 118, scope: !1880)
!1895 = !DILocation(line: 80, column: 115, scope: !1880)
!1896 = !DILocation(line: 80, column: 171, scope: !1880)
!1897 = !DILocation(line: 80, column: 156, scope: !1880)
!1898 = !DILocation(line: 80, column: 206, scope: !1880)
!1899 = !DILocation(line: 80, column: 183, scope: !1880)
!1900 = !DILocation(line: 80, column: 182, scope: !1880)
!1901 = !DILocation(line: 80, column: 246, scope: !1880)
!1902 = !DILocation(line: 80, column: 223, scope: !1880)
!1903 = !DILocation(line: 80, column: 222, scope: !1880)
!1904 = !DILocation(line: 80, column: 136, scope: !1880)
!1905 = !DILocation(line: 80, column: 20, scope: !1880)
!1906 = !DILocation(line: 81, column: 9, scope: !1848)
!1907 = distinct !{!1907, !1906}
!1908 = !DILocation(line: 81, column: 47, scope: !1909)
!1909 = !DILexicalBlockFile(scope: !1910, file: !913, discriminator: 1)
!1910 = distinct !DILexicalBlock(scope: !1848, file: !913, line: 81, column: 12)
!1911 = !DILocation(line: 81, column: 41, scope: !1909)
!1912 = !DILocation(line: 81, column: 29, scope: !1909)
!1913 = !DILocation(line: 81, column: 14, scope: !1909)
!1914 = !DILocation(line: 81, column: 32, scope: !1909)
!1915 = !DILocation(line: 81, column: 38, scope: !1909)
!1916 = !DILocation(line: 81, column: 98, scope: !1909)
!1917 = !DILocation(line: 81, column: 92, scope: !1909)
!1918 = !DILocation(line: 81, column: 71, scope: !1909)
!1919 = !DILocation(line: 81, column: 56, scope: !1909)
!1920 = !DILocation(line: 81, column: 74, scope: !1909)
!1921 = !DILocation(line: 81, column: 90, scope: !1909)
!1922 = !DILocation(line: 81, column: 131, scope: !1909)
!1923 = !DILocation(line: 81, column: 118, scope: !1909)
!1924 = !DILocation(line: 81, column: 115, scope: !1909)
!1925 = !DILocation(line: 81, column: 171, scope: !1909)
!1926 = !DILocation(line: 81, column: 156, scope: !1909)
!1927 = !DILocation(line: 81, column: 205, scope: !1909)
!1928 = !DILocation(line: 81, column: 183, scope: !1909)
!1929 = !DILocation(line: 81, column: 182, scope: !1909)
!1930 = !DILocation(line: 81, column: 244, scope: !1909)
!1931 = !DILocation(line: 81, column: 222, scope: !1909)
!1932 = !DILocation(line: 81, column: 221, scope: !1909)
!1933 = !DILocation(line: 81, column: 136, scope: !1909)
!1934 = !DILocation(line: 81, column: 20, scope: !1909)
!1935 = !DILocation(line: 82, column: 9, scope: !1848)
!1936 = distinct !{!1936, !1935}
!1937 = !DILocation(line: 82, column: 47, scope: !1938)
!1938 = !DILexicalBlockFile(scope: !1939, file: !913, discriminator: 1)
!1939 = distinct !DILexicalBlock(scope: !1848, file: !913, line: 82, column: 12)
!1940 = !DILocation(line: 82, column: 41, scope: !1938)
!1941 = !DILocation(line: 82, column: 29, scope: !1938)
!1942 = !DILocation(line: 82, column: 14, scope: !1938)
!1943 = !DILocation(line: 82, column: 32, scope: !1938)
!1944 = !DILocation(line: 82, column: 38, scope: !1938)
!1945 = !DILocation(line: 82, column: 98, scope: !1938)
!1946 = !DILocation(line: 82, column: 92, scope: !1938)
!1947 = !DILocation(line: 82, column: 71, scope: !1938)
!1948 = !DILocation(line: 82, column: 56, scope: !1938)
!1949 = !DILocation(line: 82, column: 74, scope: !1938)
!1950 = !DILocation(line: 82, column: 90, scope: !1938)
!1951 = !DILocation(line: 82, column: 131, scope: !1938)
!1952 = !DILocation(line: 82, column: 118, scope: !1938)
!1953 = !DILocation(line: 82, column: 115, scope: !1938)
!1954 = !DILocation(line: 82, column: 171, scope: !1938)
!1955 = !DILocation(line: 82, column: 156, scope: !1938)
!1956 = !DILocation(line: 82, column: 205, scope: !1938)
!1957 = !DILocation(line: 82, column: 183, scope: !1938)
!1958 = !DILocation(line: 82, column: 182, scope: !1938)
!1959 = !DILocation(line: 82, column: 244, scope: !1938)
!1960 = !DILocation(line: 82, column: 222, scope: !1938)
!1961 = !DILocation(line: 82, column: 221, scope: !1938)
!1962 = !DILocation(line: 82, column: 136, scope: !1938)
!1963 = !DILocation(line: 82, column: 20, scope: !1938)
!1964 = !DILocation(line: 83, column: 5, scope: !1848)
!1965 = !DILocation(line: 78, column: 25, scope: !1966)
!1966 = !DILexicalBlockFile(scope: !1844, file: !913, discriminator: 2)
!1967 = !DILocation(line: 78, column: 5, scope: !1966)
!1968 = distinct !{!1968, !1969}
!1969 = !DILocation(line: 78, column: 5, scope: !912)
!1970 = !DILocation(line: 96, column: 12, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !912, file: !913, line: 96, column: 5)
!1972 = !DILocation(line: 96, column: 10, scope: !1971)
!1973 = !DILocation(line: 96, column: 17, scope: !1974)
!1974 = !DILexicalBlockFile(scope: !1975, file: !913, discriminator: 1)
!1975 = distinct !DILexicalBlock(scope: !1971, file: !913, line: 96, column: 5)
!1976 = !DILocation(line: 96, column: 19, scope: !1974)
!1977 = !DILocation(line: 96, column: 5, scope: !1974)
!1978 = !DILocation(line: 97, column: 9, scope: !1979)
!1979 = distinct !DILexicalBlock(scope: !1975, file: !913, line: 96, column: 29)
!1980 = distinct !{!1980, !1978}
!1981 = !DILocation(line: 97, column: 44, scope: !1982)
!1982 = !DILexicalBlockFile(scope: !1983, file: !913, discriminator: 1)
!1983 = distinct !DILexicalBlock(scope: !1979, file: !913, line: 97, column: 12)
!1984 = !DILocation(line: 97, column: 38, scope: !1982)
!1985 = !DILocation(line: 97, column: 26, scope: !1982)
!1986 = !DILocation(line: 97, column: 14, scope: !1982)
!1987 = !DILocation(line: 97, column: 29, scope: !1982)
!1988 = !DILocation(line: 97, column: 35, scope: !1982)
!1989 = !DILocation(line: 97, column: 92, scope: !1982)
!1990 = !DILocation(line: 97, column: 86, scope: !1982)
!1991 = !DILocation(line: 97, column: 65, scope: !1982)
!1992 = !DILocation(line: 97, column: 53, scope: !1982)
!1993 = !DILocation(line: 97, column: 68, scope: !1982)
!1994 = !DILocation(line: 97, column: 84, scope: !1982)
!1995 = !DILocation(line: 97, column: 125, scope: !1982)
!1996 = !DILocation(line: 97, column: 112, scope: !1982)
!1997 = !DILocation(line: 97, column: 109, scope: !1982)
!1998 = !DILocation(line: 97, column: 162, scope: !1982)
!1999 = !DILocation(line: 97, column: 150, scope: !1982)
!2000 = !DILocation(line: 97, column: 196, scope: !1982)
!2001 = !DILocation(line: 97, column: 174, scope: !1982)
!2002 = !DILocation(line: 97, column: 173, scope: !1982)
!2003 = !DILocation(line: 97, column: 235, scope: !1982)
!2004 = !DILocation(line: 97, column: 213, scope: !1982)
!2005 = !DILocation(line: 97, column: 212, scope: !1982)
!2006 = !DILocation(line: 97, column: 130, scope: !1982)
!2007 = !DILocation(line: 97, column: 20, scope: !1982)
!2008 = !DILocation(line: 98, column: 9, scope: !1979)
!2009 = distinct !{!2009, !2008}
!2010 = !DILocation(line: 98, column: 44, scope: !2011)
!2011 = !DILexicalBlockFile(scope: !2012, file: !913, discriminator: 1)
!2012 = distinct !DILexicalBlock(scope: !1979, file: !913, line: 98, column: 12)
!2013 = !DILocation(line: 98, column: 38, scope: !2011)
!2014 = !DILocation(line: 98, column: 26, scope: !2011)
!2015 = !DILocation(line: 98, column: 14, scope: !2011)
!2016 = !DILocation(line: 98, column: 29, scope: !2011)
!2017 = !DILocation(line: 98, column: 35, scope: !2011)
!2018 = !DILocation(line: 98, column: 92, scope: !2011)
!2019 = !DILocation(line: 98, column: 86, scope: !2011)
!2020 = !DILocation(line: 98, column: 65, scope: !2011)
!2021 = !DILocation(line: 98, column: 53, scope: !2011)
!2022 = !DILocation(line: 98, column: 68, scope: !2011)
!2023 = !DILocation(line: 98, column: 84, scope: !2011)
!2024 = !DILocation(line: 98, column: 125, scope: !2011)
!2025 = !DILocation(line: 98, column: 112, scope: !2011)
!2026 = !DILocation(line: 98, column: 109, scope: !2011)
!2027 = !DILocation(line: 98, column: 162, scope: !2011)
!2028 = !DILocation(line: 98, column: 150, scope: !2011)
!2029 = !DILocation(line: 98, column: 195, scope: !2011)
!2030 = !DILocation(line: 98, column: 174, scope: !2011)
!2031 = !DILocation(line: 98, column: 173, scope: !2011)
!2032 = !DILocation(line: 98, column: 233, scope: !2011)
!2033 = !DILocation(line: 98, column: 212, scope: !2011)
!2034 = !DILocation(line: 98, column: 211, scope: !2011)
!2035 = !DILocation(line: 98, column: 130, scope: !2011)
!2036 = !DILocation(line: 98, column: 20, scope: !2011)
!2037 = !DILocation(line: 99, column: 5, scope: !1979)
!2038 = !DILocation(line: 96, column: 25, scope: !2039)
!2039 = !DILexicalBlockFile(scope: !1975, file: !913, discriminator: 2)
!2040 = !DILocation(line: 96, column: 5, scope: !2039)
!2041 = distinct !{!2041, !2042}
!2042 = !DILocation(line: 96, column: 5, scope: !912)
!2043 = !DILocation(line: 112, column: 12, scope: !2044)
!2044 = distinct !DILexicalBlock(scope: !912, file: !913, line: 112, column: 5)
!2045 = !DILocation(line: 112, column: 10, scope: !2044)
!2046 = !DILocation(line: 112, column: 17, scope: !2047)
!2047 = !DILexicalBlockFile(scope: !2048, file: !913, discriminator: 1)
!2048 = distinct !DILexicalBlock(scope: !2044, file: !913, line: 112, column: 5)
!2049 = !DILocation(line: 112, column: 19, scope: !2047)
!2050 = !DILocation(line: 112, column: 5, scope: !2047)
!2051 = !DILocation(line: 113, column: 9, scope: !2048)
!2052 = distinct !{!2052, !2051}
!2053 = !DILocation(line: 113, column: 48, scope: !2054)
!2054 = !DILexicalBlockFile(scope: !2055, file: !913, discriminator: 1)
!2055 = distinct !DILexicalBlock(scope: !2048, file: !913, line: 113, column: 12)
!2056 = !DILocation(line: 113, column: 42, scope: !2054)
!2057 = !DILocation(line: 113, column: 30, scope: !2054)
!2058 = !DILocation(line: 113, column: 14, scope: !2054)
!2059 = !DILocation(line: 113, column: 33, scope: !2054)
!2060 = !DILocation(line: 113, column: 39, scope: !2054)
!2061 = !DILocation(line: 113, column: 100, scope: !2054)
!2062 = !DILocation(line: 113, column: 94, scope: !2054)
!2063 = !DILocation(line: 113, column: 73, scope: !2054)
!2064 = !DILocation(line: 113, column: 57, scope: !2054)
!2065 = !DILocation(line: 113, column: 76, scope: !2054)
!2066 = !DILocation(line: 113, column: 92, scope: !2054)
!2067 = !DILocation(line: 113, column: 133, scope: !2054)
!2068 = !DILocation(line: 113, column: 120, scope: !2054)
!2069 = !DILocation(line: 113, column: 117, scope: !2054)
!2070 = !DILocation(line: 113, column: 174, scope: !2054)
!2071 = !DILocation(line: 113, column: 158, scope: !2054)
!2072 = !DILocation(line: 113, column: 212, scope: !2054)
!2073 = !DILocation(line: 113, column: 186, scope: !2054)
!2074 = !DILocation(line: 113, column: 185, scope: !2054)
!2075 = !DILocation(line: 113, column: 255, scope: !2054)
!2076 = !DILocation(line: 113, column: 229, scope: !2054)
!2077 = !DILocation(line: 113, column: 228, scope: !2054)
!2078 = !DILocation(line: 113, column: 138, scope: !2054)
!2079 = !DILocation(line: 113, column: 20, scope: !2054)
!2080 = !DILocation(line: 113, column: 20, scope: !2081)
!2081 = !DILexicalBlockFile(scope: !2055, file: !913, discriminator: 2)
!2082 = !DILocation(line: 112, column: 25, scope: !2083)
!2083 = !DILexicalBlockFile(scope: !2048, file: !913, discriminator: 2)
!2084 = !DILocation(line: 112, column: 5, scope: !2083)
!2085 = distinct !{!2085, !2086}
!2086 = !DILocation(line: 112, column: 5, scope: !912)
!2087 = !DILocation(line: 114, column: 12, scope: !2088)
!2088 = distinct !DILexicalBlock(scope: !912, file: !913, line: 114, column: 5)
!2089 = !DILocation(line: 114, column: 10, scope: !2088)
!2090 = !DILocation(line: 114, column: 17, scope: !2091)
!2091 = !DILexicalBlockFile(scope: !2092, file: !913, discriminator: 1)
!2092 = distinct !DILexicalBlock(scope: !2088, file: !913, line: 114, column: 5)
!2093 = !DILocation(line: 114, column: 19, scope: !2091)
!2094 = !DILocation(line: 114, column: 5, scope: !2091)
!2095 = !DILocation(line: 115, column: 9, scope: !2092)
!2096 = distinct !{!2096, !2095}
!2097 = !DILocation(line: 115, column: 48, scope: !2098)
!2098 = !DILexicalBlockFile(scope: !2099, file: !913, discriminator: 1)
!2099 = distinct !DILexicalBlock(scope: !2092, file: !913, line: 115, column: 12)
!2100 = !DILocation(line: 115, column: 42, scope: !2098)
!2101 = !DILocation(line: 115, column: 30, scope: !2098)
!2102 = !DILocation(line: 115, column: 14, scope: !2098)
!2103 = !DILocation(line: 115, column: 33, scope: !2098)
!2104 = !DILocation(line: 115, column: 39, scope: !2098)
!2105 = !DILocation(line: 115, column: 100, scope: !2098)
!2106 = !DILocation(line: 115, column: 94, scope: !2098)
!2107 = !DILocation(line: 115, column: 73, scope: !2098)
!2108 = !DILocation(line: 115, column: 57, scope: !2098)
!2109 = !DILocation(line: 115, column: 76, scope: !2098)
!2110 = !DILocation(line: 115, column: 92, scope: !2098)
!2111 = !DILocation(line: 115, column: 133, scope: !2098)
!2112 = !DILocation(line: 115, column: 120, scope: !2098)
!2113 = !DILocation(line: 115, column: 117, scope: !2098)
!2114 = !DILocation(line: 115, column: 174, scope: !2098)
!2115 = !DILocation(line: 115, column: 158, scope: !2098)
!2116 = !DILocation(line: 115, column: 211, scope: !2098)
!2117 = !DILocation(line: 115, column: 186, scope: !2098)
!2118 = !DILocation(line: 115, column: 185, scope: !2098)
!2119 = !DILocation(line: 115, column: 253, scope: !2098)
!2120 = !DILocation(line: 115, column: 228, scope: !2098)
!2121 = !DILocation(line: 115, column: 227, scope: !2098)
!2122 = !DILocation(line: 115, column: 138, scope: !2098)
!2123 = !DILocation(line: 115, column: 20, scope: !2098)
!2124 = !DILocation(line: 115, column: 20, scope: !2125)
!2125 = !DILexicalBlockFile(scope: !2099, file: !913, discriminator: 2)
!2126 = !DILocation(line: 114, column: 25, scope: !2127)
!2127 = !DILexicalBlockFile(scope: !2092, file: !913, discriminator: 2)
!2128 = !DILocation(line: 114, column: 5, scope: !2127)
!2129 = distinct !{!2129, !2130}
!2130 = !DILocation(line: 114, column: 5, scope: !912)
!2131 = !DILocation(line: 118, column: 9, scope: !2132)
!2132 = distinct !DILexicalBlock(scope: !912, file: !913, line: 118, column: 9)
!2133 = !DILocation(line: 118, column: 16, scope: !2132)
!2134 = !DILocation(line: 118, column: 9, scope: !912)
!2135 = !DILocation(line: 120, column: 53, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2132, file: !913, line: 118, column: 56)
!2137 = !DILocation(line: 119, column: 9, scope: !2136)
!2138 = !DILocation(line: 121, column: 9, scope: !2136)
!2139 = !DILocation(line: 124, column: 5, scope: !912)
!2140 = !DILocation(line: 125, column: 1, scope: !912)
!2141 = distinct !DISubprogram(name: "ff_intrax8_common_end", scope: !913, file: !913, line: 768, type: !2142, isLocal: false, isDefinition: true, scopeLine: 769, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{null, !978}
!2144 = !DILocalVariable(name: "w", arg: 1, scope: !2141, file: !913, line: 768, type: !978)
!2145 = !DILocation(line: 768, column: 66, scope: !2141)
!2146 = !DILocation(line: 770, column: 15, scope: !2141)
!2147 = !DILocation(line: 770, column: 18, scope: !2141)
!2148 = !DILocation(line: 770, column: 14, scope: !2141)
!2149 = !DILocation(line: 770, column: 5, scope: !2141)
!2150 = !DILocation(line: 771, column: 1, scope: !2141)
!2151 = distinct !DISubprogram(name: "ff_intrax8_decode_picture", scope: !913, file: !913, line: 773, type: !2152, isLocal: false, isDefinition: true, scopeLine: 777, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{!898, !978, !2154, !1681, !1311, !1311, !898, !898, !898, !898}
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64, align: 64)
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "Picture", file: !2156, line: 91, baseType: !2157)
!2156 = !DIFile(filename: "libavcodec/mpegpicture.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Picture", file: !2156, line: 45, size: 2624, align: 64, elements: !2158)
!2158 = !{!2159, !2161, !2170, !2171, !2172, !2174, !2176, !2177, !2179, !2180, !2181, !2182, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2157, file: !2156, line: 46, baseType: !2160, size: 64, align: 64)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64, align: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !2157, file: !2156, line: 47, baseType: !2162, size: 256, align: 64, offset: 64)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadFrame", file: !2163, line: 40, baseType: !2164)
!2163 = !DIFile(filename: "libavcodec/thread.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThreadFrame", file: !2163, line: 34, size: 256, align: 64, elements: !2165)
!2165 = !{!2166, !2167, !2169}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2164, file: !2163, line: 35, baseType: !1329, size: 64, align: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2164, file: !2163, line: 36, baseType: !2168, size: 128, align: 64, offset: 64)
!2168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 128, align: 64, elements: !941)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !2164, file: !2163, line: 39, baseType: !1201, size: 64, align: 64, offset: 192)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table_buf", scope: !2157, file: !2156, line: 49, baseType: !1201, size: 64, align: 64, offset: 320)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !2157, file: !2156, line: 50, baseType: !1297, size: 64, align: 64, offset: 384)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val_buf", scope: !2157, file: !2156, line: 52, baseType: !2173, size: 128, align: 64, offset: 448)
!2173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1201, size: 128, align: 64, elements: !941)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val", scope: !2157, file: !2156, line: 53, baseType: !2175, size: 128, align: 64, offset: 576)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 128, align: 64, elements: !941)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type_buf", scope: !2157, file: !2156, line: 55, baseType: !1201, size: 64, align: 64, offset: 704)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !2157, file: !2156, line: 56, baseType: !2178, size: 64, align: 64, offset: 768)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64, align: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table_buf", scope: !2157, file: !2156, line: 58, baseType: !1201, size: 64, align: 64, offset: 832)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table", scope: !2157, file: !2156, line: 59, baseType: !994, size: 64, align: 64, offset: 896)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index_buf", scope: !2157, file: !2156, line: 61, baseType: !2173, size: 128, align: 64, offset: 960)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index", scope: !2157, file: !2156, line: 62, baseType: !2183, size: 128, align: 64, offset: 1088)
!2183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1297, size: 128, align: 64, elements: !941)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_buf", scope: !2157, file: !2156, line: 64, baseType: !1201, size: 64, align: 64, offset: 1216)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var", scope: !2157, file: !2156, line: 65, baseType: !1406, size: 64, align: 64, offset: 1280)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_buf", scope: !2157, file: !2156, line: 67, baseType: !1201, size: 64, align: 64, offset: 1344)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var", scope: !2157, file: !2156, line: 68, baseType: !1406, size: 64, align: 64, offset: 1408)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mb_width", scope: !2157, file: !2156, line: 70, baseType: !898, size: 32, align: 32, offset: 1472)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mb_height", scope: !2157, file: !2156, line: 71, baseType: !898, size: 32, align: 32, offset: 1504)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "mb_mean_buf", scope: !2157, file: !2156, line: 73, baseType: !1201, size: 64, align: 64, offset: 1536)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "mb_mean", scope: !2157, file: !2156, line: 74, baseType: !994, size: 64, align: 64, offset: 1600)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_buf", scope: !2157, file: !2156, line: 76, baseType: !1201, size: 64, align: 64, offset: 1664)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_picture_private", scope: !2157, file: !2156, line: 77, baseType: !897, size: 64, align: 64, offset: 1728)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "field_picture", scope: !2157, file: !2156, line: 79, baseType: !898, size: 32, align: 32, offset: 1792)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_sum", scope: !2157, file: !2156, line: 81, baseType: !1191, size: 64, align: 64, offset: 1856)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_sum", scope: !2157, file: !2156, line: 82, baseType: !1191, size: 64, align: 64, offset: 1920)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_score", scope: !2157, file: !2156, line: 84, baseType: !898, size: 32, align: 32, offset: 1984)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "needs_realloc", scope: !2157, file: !2156, line: 85, baseType: !898, size: 32, align: 32, offset: 2016)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !2157, file: !2156, line: 87, baseType: !898, size: 32, align: 32, offset: 2048)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2157, file: !2156, line: 88, baseType: !898, size: 32, align: 32, offset: 2080)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "encoding_error", scope: !2157, file: !2156, line: 90, baseType: !1254, size: 512, align: 64, offset: 2112)
!2202 = !DILocalVariable(name: "w", arg: 1, scope: !2151, file: !913, line: 773, type: !978)
!2203 = !DILocation(line: 773, column: 47, scope: !2151)
!2204 = !DILocalVariable(name: "pict", arg: 2, scope: !2151, file: !913, line: 773, type: !2154)
!2205 = !DILocation(line: 773, column: 59, scope: !2151)
!2206 = !DILocalVariable(name: "gb", arg: 3, scope: !2151, file: !913, line: 774, type: !1681)
!2207 = !DILocation(line: 774, column: 46, scope: !2151)
!2208 = !DILocalVariable(name: "mb_x", arg: 4, scope: !2151, file: !913, line: 774, type: !1311)
!2209 = !DILocation(line: 774, column: 55, scope: !2151)
!2210 = !DILocalVariable(name: "mb_y", arg: 5, scope: !2151, file: !913, line: 774, type: !1311)
!2211 = !DILocation(line: 774, column: 66, scope: !2151)
!2212 = !DILocalVariable(name: "dquant", arg: 6, scope: !2151, file: !913, line: 775, type: !898)
!2213 = !DILocation(line: 775, column: 35, scope: !2151)
!2214 = !DILocalVariable(name: "quant_offset", arg: 7, scope: !2151, file: !913, line: 775, type: !898)
!2215 = !DILocation(line: 775, column: 47, scope: !2151)
!2216 = !DILocalVariable(name: "loopfilter", arg: 8, scope: !2151, file: !913, line: 776, type: !898)
!2217 = !DILocation(line: 776, column: 35, scope: !2151)
!2218 = !DILocalVariable(name: "lowdelay", arg: 9, scope: !2151, file: !913, line: 776, type: !898)
!2219 = !DILocation(line: 776, column: 51, scope: !2151)
!2220 = !DILocalVariable(name: "mb_xy", scope: !2151, file: !913, line: 778, type: !898)
!2221 = !DILocation(line: 778, column: 9, scope: !2151)
!2222 = !DILocation(line: 780, column: 13, scope: !2151)
!2223 = !DILocation(line: 780, column: 5, scope: !2151)
!2224 = !DILocation(line: 780, column: 8, scope: !2151)
!2225 = !DILocation(line: 780, column: 11, scope: !2151)
!2226 = !DILocation(line: 781, column: 17, scope: !2151)
!2227 = !DILocation(line: 781, column: 5, scope: !2151)
!2228 = !DILocation(line: 781, column: 8, scope: !2151)
!2229 = !DILocation(line: 781, column: 15, scope: !2151)
!2230 = !DILocation(line: 782, column: 16, scope: !2151)
!2231 = !DILocation(line: 782, column: 23, scope: !2151)
!2232 = !DILocation(line: 782, column: 5, scope: !2151)
!2233 = !DILocation(line: 782, column: 8, scope: !2151)
!2234 = !DILocation(line: 782, column: 14, scope: !2151)
!2235 = !DILocation(line: 783, column: 15, scope: !2151)
!2236 = !DILocation(line: 783, column: 5, scope: !2151)
!2237 = !DILocation(line: 783, column: 8, scope: !2151)
!2238 = !DILocation(line: 783, column: 13, scope: !2151)
!2239 = !DILocation(line: 784, column: 16, scope: !2151)
!2240 = !DILocation(line: 784, column: 22, scope: !2151)
!2241 = !DILocation(line: 784, column: 5, scope: !2151)
!2242 = !DILocation(line: 784, column: 8, scope: !2151)
!2243 = !DILocation(line: 784, column: 14, scope: !2151)
!2244 = !DILocation(line: 785, column: 21, scope: !2151)
!2245 = !DILocation(line: 785, column: 5, scope: !2151)
!2246 = !DILocation(line: 785, column: 8, scope: !2151)
!2247 = !DILocation(line: 785, column: 19, scope: !2151)
!2248 = !DILocation(line: 786, column: 37, scope: !2151)
!2249 = !DILocation(line: 786, column: 40, scope: !2151)
!2250 = !DILocation(line: 786, column: 27, scope: !2151)
!2251 = !DILocation(line: 786, column: 5, scope: !2151)
!2252 = !DILocation(line: 786, column: 8, scope: !2151)
!2253 = !DILocation(line: 786, column: 25, scope: !2151)
!2254 = !DILocation(line: 788, column: 16, scope: !2151)
!2255 = !DILocation(line: 788, column: 15, scope: !2151)
!2256 = !DILocation(line: 788, column: 5, scope: !2151)
!2257 = !DILocation(line: 788, column: 8, scope: !2151)
!2258 = !DILocation(line: 788, column: 13, scope: !2151)
!2259 = !DILocation(line: 789, column: 16, scope: !2151)
!2260 = !DILocation(line: 789, column: 15, scope: !2151)
!2261 = !DILocation(line: 789, column: 5, scope: !2151)
!2262 = !DILocation(line: 789, column: 8, scope: !2151)
!2263 = !DILocation(line: 789, column: 13, scope: !2151)
!2264 = !DILocation(line: 791, column: 45, scope: !2151)
!2265 = !DILocation(line: 791, column: 48, scope: !2151)
!2266 = !DILocation(line: 791, column: 54, scope: !2151)
!2267 = !DILocation(line: 791, column: 42, scope: !2151)
!2268 = !DILocation(line: 791, column: 63, scope: !2151)
!2269 = !DILocation(line: 791, column: 66, scope: !2151)
!2270 = !DILocation(line: 791, column: 61, scope: !2151)
!2271 = !DILocation(line: 791, column: 5, scope: !2151)
!2272 = !DILocation(line: 791, column: 8, scope: !2151)
!2273 = !DILocation(line: 791, column: 29, scope: !2151)
!2274 = !DILocation(line: 792, column: 9, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2151, file: !913, line: 792, column: 9)
!2276 = !DILocation(line: 792, column: 12, scope: !2275)
!2277 = !DILocation(line: 792, column: 18, scope: !2275)
!2278 = !DILocation(line: 792, column: 9, scope: !2151)
!2279 = !DILocation(line: 793, column: 30, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2275, file: !913, line: 792, column: 23)
!2281 = !DILocation(line: 793, column: 33, scope: !2280)
!2282 = !DILocation(line: 793, column: 9, scope: !2280)
!2283 = !DILocation(line: 793, column: 12, scope: !2280)
!2284 = !DILocation(line: 793, column: 28, scope: !2280)
!2285 = !DILocation(line: 794, column: 37, scope: !2280)
!2286 = !DILocation(line: 794, column: 40, scope: !2280)
!2287 = !DILocation(line: 794, column: 9, scope: !2280)
!2288 = !DILocation(line: 794, column: 12, scope: !2280)
!2289 = !DILocation(line: 794, column: 35, scope: !2280)
!2290 = !DILocation(line: 795, column: 5, scope: !2280)
!2291 = !DILocation(line: 796, column: 30, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2275, file: !913, line: 795, column: 12)
!2293 = !DILocation(line: 796, column: 33, scope: !2292)
!2294 = !DILocation(line: 796, column: 43, scope: !2292)
!2295 = !DILocation(line: 796, column: 46, scope: !2292)
!2296 = !DILocation(line: 796, column: 52, scope: !2292)
!2297 = !DILocation(line: 796, column: 57, scope: !2292)
!2298 = !DILocation(line: 796, column: 39, scope: !2292)
!2299 = !DILocation(line: 796, column: 9, scope: !2292)
!2300 = !DILocation(line: 796, column: 12, scope: !2292)
!2301 = !DILocation(line: 796, column: 28, scope: !2292)
!2302 = !DILocation(line: 797, column: 51, scope: !2292)
!2303 = !DILocation(line: 797, column: 54, scope: !2292)
!2304 = !DILocation(line: 797, column: 70, scope: !2292)
!2305 = !DILocation(line: 797, column: 48, scope: !2292)
!2306 = !DILocation(line: 797, column: 79, scope: !2292)
!2307 = !DILocation(line: 797, column: 82, scope: !2292)
!2308 = !DILocation(line: 797, column: 77, scope: !2292)
!2309 = !DILocation(line: 797, column: 9, scope: !2292)
!2310 = !DILocation(line: 797, column: 12, scope: !2292)
!2311 = !DILocation(line: 797, column: 35, scope: !2292)
!2312 = !DILocation(line: 799, column: 25, scope: !2151)
!2313 = !DILocation(line: 799, column: 5, scope: !2151)
!2314 = !DILocation(line: 801, column: 10, scope: !2315)
!2315 = distinct !DILexicalBlock(scope: !2151, file: !913, line: 801, column: 5)
!2316 = !DILocation(line: 801, column: 13, scope: !2315)
!2317 = !DILocation(line: 801, column: 18, scope: !2315)
!2318 = !DILocation(line: 801, column: 23, scope: !2319)
!2319 = !DILexicalBlockFile(scope: !2320, file: !913, discriminator: 1)
!2320 = distinct !DILexicalBlock(scope: !2315, file: !913, line: 801, column: 5)
!2321 = !DILocation(line: 801, column: 26, scope: !2319)
!2322 = !DILocation(line: 801, column: 33, scope: !2319)
!2323 = !DILocation(line: 801, column: 36, scope: !2319)
!2324 = !DILocation(line: 801, column: 46, scope: !2319)
!2325 = !DILocation(line: 801, column: 31, scope: !2319)
!2326 = !DILocation(line: 801, column: 5, scope: !2319)
!2327 = !DILocation(line: 802, column: 29, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2320, file: !913, line: 801, column: 62)
!2329 = !DILocation(line: 802, column: 32, scope: !2328)
!2330 = !DILocation(line: 802, column: 35, scope: !2328)
!2331 = !DILocation(line: 802, column: 9, scope: !2328)
!2332 = !DILocation(line: 803, column: 18, scope: !2328)
!2333 = !DILocation(line: 803, column: 21, scope: !2328)
!2334 = !DILocation(line: 803, column: 26, scope: !2328)
!2335 = !DILocation(line: 803, column: 35, scope: !2328)
!2336 = !DILocation(line: 803, column: 38, scope: !2328)
!2337 = !DILocation(line: 803, column: 47, scope: !2328)
!2338 = !DILocation(line: 803, column: 32, scope: !2328)
!2339 = !DILocation(line: 803, column: 15, scope: !2328)
!2340 = !DILocation(line: 804, column: 14, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2328, file: !913, line: 804, column: 9)
!2342 = !DILocation(line: 804, column: 17, scope: !2341)
!2343 = !DILocation(line: 804, column: 22, scope: !2341)
!2344 = !DILocation(line: 804, column: 27, scope: !2345)
!2345 = !DILexicalBlockFile(scope: !2346, file: !913, discriminator: 1)
!2346 = distinct !DILexicalBlock(scope: !2341, file: !913, line: 804, column: 9)
!2347 = !DILocation(line: 804, column: 30, scope: !2345)
!2348 = !DILocation(line: 804, column: 37, scope: !2345)
!2349 = !DILocation(line: 804, column: 40, scope: !2345)
!2350 = !DILocation(line: 804, column: 49, scope: !2345)
!2351 = !DILocation(line: 804, column: 35, scope: !2345)
!2352 = !DILocation(line: 804, column: 9, scope: !2345)
!2353 = !DILocation(line: 805, column: 31, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2346, file: !913, line: 804, column: 65)
!2355 = !DILocation(line: 805, column: 13, scope: !2354)
!2356 = !DILocation(line: 806, column: 44, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2354, file: !913, line: 806, column: 17)
!2358 = !DILocation(line: 806, column: 17, scope: !2357)
!2359 = !DILocation(line: 806, column: 17, scope: !2354)
!2360 = !DILocation(line: 807, column: 17, scope: !2357)
!2361 = !DILocation(line: 808, column: 36, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2354, file: !913, line: 808, column: 17)
!2363 = !DILocation(line: 808, column: 17, scope: !2362)
!2364 = !DILocation(line: 808, column: 17, scope: !2354)
!2365 = !DILocation(line: 809, column: 17, scope: !2362)
!2366 = !DILocation(line: 811, column: 17, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2354, file: !913, line: 811, column: 17)
!2368 = !DILocation(line: 811, column: 20, scope: !2367)
!2369 = !DILocation(line: 811, column: 27, scope: !2367)
!2370 = !DILocation(line: 811, column: 30, scope: !2367)
!2371 = !DILocation(line: 811, column: 25, scope: !2367)
!2372 = !DILocation(line: 811, column: 35, scope: !2367)
!2373 = !DILocation(line: 811, column: 17, scope: !2354)
!2374 = !DILocation(line: 812, column: 42, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !2367, file: !913, line: 811, column: 40)
!2376 = !DILocation(line: 812, column: 17, scope: !2375)
!2377 = !DILocation(line: 816, column: 44, scope: !2375)
!2378 = !DILocation(line: 816, column: 17, scope: !2375)
!2379 = !DILocation(line: 817, column: 40, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2375, file: !913, line: 817, column: 21)
!2381 = !DILocation(line: 817, column: 21, scope: !2380)
!2382 = !DILocation(line: 817, column: 21, scope: !2375)
!2383 = !DILocation(line: 818, column: 21, scope: !2380)
!2384 = !DILocation(line: 820, column: 44, scope: !2375)
!2385 = !DILocation(line: 820, column: 17, scope: !2375)
!2386 = !DILocation(line: 821, column: 40, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2375, file: !913, line: 821, column: 21)
!2388 = !DILocation(line: 821, column: 21, scope: !2387)
!2389 = !DILocation(line: 821, column: 21, scope: !2375)
!2390 = !DILocation(line: 822, column: 21, scope: !2387)
!2391 = !DILocation(line: 824, column: 17, scope: !2375)
!2392 = !DILocation(line: 824, column: 20, scope: !2375)
!2393 = !DILocation(line: 824, column: 28, scope: !2375)
!2394 = !DILocation(line: 825, column: 17, scope: !2375)
!2395 = !DILocation(line: 825, column: 20, scope: !2375)
!2396 = !DILocation(line: 825, column: 28, scope: !2375)
!2397 = !DILocation(line: 827, column: 45, scope: !2375)
!2398 = !DILocation(line: 827, column: 48, scope: !2375)
!2399 = !DILocation(line: 827, column: 36, scope: !2375)
!2400 = !DILocation(line: 827, column: 17, scope: !2375)
!2401 = !DILocation(line: 827, column: 23, scope: !2375)
!2402 = !DILocation(line: 827, column: 43, scope: !2375)
!2403 = !DILocation(line: 828, column: 22, scope: !2375)
!2404 = !DILocation(line: 829, column: 13, scope: !2375)
!2405 = !DILocation(line: 830, column: 13, scope: !2354)
!2406 = !DILocation(line: 830, column: 16, scope: !2354)
!2407 = !DILocation(line: 830, column: 24, scope: !2354)
!2408 = !DILocation(line: 831, column: 9, scope: !2354)
!2409 = !DILocation(line: 804, column: 54, scope: !2410)
!2410 = !DILexicalBlockFile(scope: !2346, file: !913, discriminator: 2)
!2411 = !DILocation(line: 804, column: 57, scope: !2410)
!2412 = !DILocation(line: 804, column: 61, scope: !2410)
!2413 = !DILocation(line: 804, column: 9, scope: !2410)
!2414 = distinct !{!2414, !2415}
!2415 = !DILocation(line: 804, column: 9, scope: !2328)
!2416 = !DILocation(line: 832, column: 13, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2328, file: !913, line: 832, column: 13)
!2418 = !DILocation(line: 832, column: 16, scope: !2417)
!2419 = !DILocation(line: 832, column: 21, scope: !2417)
!2420 = !DILocation(line: 832, column: 13, scope: !2328)
!2421 = !DILocation(line: 833, column: 32, scope: !2417)
!2422 = !DILocation(line: 833, column: 35, scope: !2417)
!2423 = !DILocation(line: 833, column: 42, scope: !2417)
!2424 = !DILocation(line: 833, column: 45, scope: !2417)
!2425 = !DILocation(line: 833, column: 52, scope: !2417)
!2426 = !DILocation(line: 833, column: 55, scope: !2417)
!2427 = !DILocation(line: 834, column: 33, scope: !2417)
!2428 = !DILocation(line: 834, column: 36, scope: !2417)
!2429 = !DILocation(line: 834, column: 41, scope: !2417)
!2430 = !DILocation(line: 834, column: 46, scope: !2417)
!2431 = !DILocation(line: 835, column: 38, scope: !2417)
!2432 = !DILocation(line: 833, column: 13, scope: !2417)
!2433 = !DILocation(line: 836, column: 5, scope: !2328)
!2434 = !DILocation(line: 801, column: 51, scope: !2435)
!2435 = !DILexicalBlockFile(scope: !2320, file: !913, discriminator: 2)
!2436 = !DILocation(line: 801, column: 54, scope: !2435)
!2437 = !DILocation(line: 801, column: 58, scope: !2435)
!2438 = !DILocation(line: 801, column: 5, scope: !2435)
!2439 = distinct !{!2439, !2440}
!2440 = !DILocation(line: 801, column: 5, scope: !2151)
!2441 = !DILocation(line: 836, column: 5, scope: !2442)
!2442 = !DILexicalBlockFile(scope: !2315, file: !913, discriminator: 1)
!2443 = !DILocation(line: 839, column: 13, scope: !2151)
!2444 = !DILocation(line: 839, column: 16, scope: !2151)
!2445 = !DILocation(line: 839, column: 6, scope: !2151)
!2446 = !DILocation(line: 839, column: 11, scope: !2151)
!2447 = !DILocation(line: 840, column: 13, scope: !2151)
!2448 = !DILocation(line: 840, column: 16, scope: !2151)
!2449 = !DILocation(line: 840, column: 6, scope: !2151)
!2450 = !DILocation(line: 840, column: 11, scope: !2151)
!2451 = !DILocation(line: 842, column: 5, scope: !2151)
!2452 = distinct !DISubprogram(name: "get_bits1", scope: !1683, file: !1683, line: 487, type: !2453, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!2453 = !DISubroutineType(types: !2454)
!2454 = !{!899, !1681}
!2455 = !DILocalVariable(name: "s", arg: 1, scope: !2452, file: !1683, line: 487, type: !1681)
!2456 = !DILocation(line: 487, column: 53, scope: !2452)
!2457 = !DILocalVariable(name: "index", scope: !2452, file: !1683, line: 499, type: !899)
!2458 = !DILocation(line: 499, column: 18, scope: !2452)
!2459 = !DILocation(line: 499, column: 26, scope: !2452)
!2460 = !DILocation(line: 499, column: 29, scope: !2452)
!2461 = !DILocalVariable(name: "result", scope: !2452, file: !1683, line: 500, type: !908)
!2462 = !DILocation(line: 500, column: 13, scope: !2452)
!2463 = !DILocation(line: 500, column: 32, scope: !2452)
!2464 = !DILocation(line: 500, column: 38, scope: !2452)
!2465 = !DILocation(line: 500, column: 22, scope: !2452)
!2466 = !DILocation(line: 500, column: 25, scope: !2452)
!2467 = !DILocation(line: 505, column: 16, scope: !2452)
!2468 = !DILocation(line: 505, column: 22, scope: !2452)
!2469 = !DILocation(line: 505, column: 12, scope: !2452)
!2470 = !DILocation(line: 506, column: 12, scope: !2452)
!2471 = !DILocation(line: 509, column: 9, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2452, file: !1683, line: 509, column: 9)
!2473 = !DILocation(line: 509, column: 12, scope: !2472)
!2474 = !DILocation(line: 509, column: 20, scope: !2472)
!2475 = !DILocation(line: 509, column: 23, scope: !2472)
!2476 = !DILocation(line: 509, column: 18, scope: !2472)
!2477 = !DILocation(line: 509, column: 9, scope: !2452)
!2478 = !DILocation(line: 511, column: 14, scope: !2472)
!2479 = !DILocation(line: 511, column: 9, scope: !2472)
!2480 = !DILocation(line: 512, column: 16, scope: !2452)
!2481 = !DILocation(line: 512, column: 5, scope: !2452)
!2482 = !DILocation(line: 512, column: 8, scope: !2452)
!2483 = !DILocation(line: 512, column: 14, scope: !2452)
!2484 = !DILocation(line: 514, column: 12, scope: !2452)
!2485 = !DILocation(line: 514, column: 5, scope: !2452)
!2486 = distinct !DISubprogram(name: "x8_reset_vlc_tables", scope: !913, file: !913, line: 127, type: !2142, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!2487 = !DILocalVariable(name: "w", arg: 1, scope: !2486, file: !913, line: 127, type: !978)
!2488 = !DILocation(line: 127, column: 49, scope: !2486)
!2489 = !DILocation(line: 129, column: 12, scope: !2486)
!2490 = !DILocation(line: 129, column: 15, scope: !2486)
!2491 = !DILocation(line: 129, column: 5, scope: !2486)
!2492 = !DILocation(line: 130, column: 12, scope: !2486)
!2493 = !DILocation(line: 130, column: 15, scope: !2486)
!2494 = !DILocation(line: 130, column: 5, scope: !2486)
!2495 = !DILocation(line: 131, column: 5, scope: !2486)
!2496 = !DILocation(line: 131, column: 8, scope: !2486)
!2497 = !DILocation(line: 131, column: 21, scope: !2486)
!2498 = !DILocation(line: 132, column: 1, scope: !2486)
!2499 = distinct !DISubprogram(name: "x8_init_block_index", scope: !913, file: !913, line: 711, type: !2500, isLocal: true, isDefinition: true, scopeLine: 712, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{null, !978, !1329}
!2502 = !DILocalVariable(name: "w", arg: 1, scope: !2499, file: !913, line: 711, type: !978)
!2503 = !DILocation(line: 711, column: 49, scope: !2499)
!2504 = !DILocalVariable(name: "frame", arg: 2, scope: !2499, file: !913, line: 711, type: !1329)
!2505 = !DILocation(line: 711, column: 61, scope: !2499)
!2506 = !DILocalVariable(name: "linesize", scope: !2499, file: !913, line: 715, type: !2507)
!2507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!2508 = !DILocation(line: 715, column: 21, scope: !2499)
!2509 = !DILocation(line: 715, column: 32, scope: !2499)
!2510 = !DILocation(line: 715, column: 39, scope: !2499)
!2511 = !DILocalVariable(name: "uvlinesize", scope: !2499, file: !913, line: 716, type: !2507)
!2512 = !DILocation(line: 716, column: 21, scope: !2499)
!2513 = !DILocation(line: 716, column: 34, scope: !2499)
!2514 = !DILocation(line: 716, column: 41, scope: !2499)
!2515 = !DILocation(line: 718, column: 18, scope: !2499)
!2516 = !DILocation(line: 718, column: 25, scope: !2499)
!2517 = !DILocation(line: 718, column: 5, scope: !2499)
!2518 = !DILocation(line: 718, column: 8, scope: !2499)
!2519 = !DILocation(line: 718, column: 16, scope: !2499)
!2520 = !DILocation(line: 719, column: 18, scope: !2499)
!2521 = !DILocation(line: 719, column: 25, scope: !2499)
!2522 = !DILocation(line: 719, column: 5, scope: !2499)
!2523 = !DILocation(line: 719, column: 8, scope: !2499)
!2524 = !DILocation(line: 719, column: 16, scope: !2499)
!2525 = !DILocation(line: 720, column: 18, scope: !2499)
!2526 = !DILocation(line: 720, column: 25, scope: !2499)
!2527 = !DILocation(line: 720, column: 5, scope: !2499)
!2528 = !DILocation(line: 720, column: 8, scope: !2499)
!2529 = !DILocation(line: 720, column: 16, scope: !2499)
!2530 = !DILocation(line: 722, column: 19, scope: !2499)
!2531 = !DILocation(line: 722, column: 22, scope: !2499)
!2532 = !DILocation(line: 722, column: 29, scope: !2499)
!2533 = !DILocation(line: 722, column: 27, scope: !2499)
!2534 = !DILocation(line: 722, column: 38, scope: !2499)
!2535 = !DILocation(line: 722, column: 5, scope: !2499)
!2536 = !DILocation(line: 722, column: 8, scope: !2499)
!2537 = !DILocation(line: 722, column: 16, scope: !2499)
!2538 = !DILocation(line: 724, column: 20, scope: !2499)
!2539 = !DILocation(line: 724, column: 23, scope: !2499)
!2540 = !DILocation(line: 724, column: 28, scope: !2499)
!2541 = !DILocation(line: 724, column: 19, scope: !2499)
!2542 = !DILocation(line: 724, column: 36, scope: !2499)
!2543 = !DILocation(line: 724, column: 34, scope: !2499)
!2544 = !DILocation(line: 724, column: 47, scope: !2499)
!2545 = !DILocation(line: 724, column: 5, scope: !2499)
!2546 = !DILocation(line: 724, column: 8, scope: !2499)
!2547 = !DILocation(line: 724, column: 16, scope: !2499)
!2548 = !DILocation(line: 725, column: 20, scope: !2499)
!2549 = !DILocation(line: 725, column: 23, scope: !2499)
!2550 = !DILocation(line: 725, column: 28, scope: !2499)
!2551 = !DILocation(line: 725, column: 19, scope: !2499)
!2552 = !DILocation(line: 725, column: 36, scope: !2499)
!2553 = !DILocation(line: 725, column: 34, scope: !2499)
!2554 = !DILocation(line: 725, column: 47, scope: !2499)
!2555 = !DILocation(line: 725, column: 5, scope: !2499)
!2556 = !DILocation(line: 725, column: 8, scope: !2499)
!2557 = !DILocation(line: 725, column: 16, scope: !2499)
!2558 = !DILocation(line: 726, column: 1, scope: !2499)
!2559 = distinct !DISubprogram(name: "x8_get_prediction", scope: !913, file: !913, line: 406, type: !2560, isLocal: true, isDefinition: true, scopeLine: 407, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!2560 = !DISubroutineType(types: !2561)
!2561 = !{null, !977}
!2562 = !DILocalVariable(name: "w", arg: 1, scope: !2559, file: !913, line: 406, type: !977)
!2563 = !DILocation(line: 406, column: 53, scope: !2559)
!2564 = !DILocalVariable(name: "a", scope: !2559, file: !913, line: 408, type: !898)
!2565 = !DILocation(line: 408, column: 9, scope: !2559)
!2566 = !DILocalVariable(name: "b", scope: !2559, file: !913, line: 408, type: !898)
!2567 = !DILocation(line: 408, column: 12, scope: !2559)
!2568 = !DILocalVariable(name: "c", scope: !2559, file: !913, line: 408, type: !898)
!2569 = !DILocation(line: 408, column: 15, scope: !2559)
!2570 = !DILocalVariable(name: "i", scope: !2559, file: !913, line: 408, type: !898)
!2571 = !DILocation(line: 408, column: 18, scope: !2559)
!2572 = !DILocation(line: 410, column: 21, scope: !2559)
!2573 = !DILocation(line: 410, column: 24, scope: !2559)
!2574 = !DILocation(line: 410, column: 20, scope: !2559)
!2575 = !DILocation(line: 410, column: 18, scope: !2559)
!2576 = !DILocation(line: 410, column: 5, scope: !2559)
!2577 = !DILocation(line: 410, column: 8, scope: !2559)
!2578 = !DILocation(line: 410, column: 14, scope: !2559)
!2579 = !DILocation(line: 411, column: 22, scope: !2559)
!2580 = !DILocation(line: 411, column: 25, scope: !2559)
!2581 = !DILocation(line: 411, column: 21, scope: !2559)
!2582 = !DILocation(line: 411, column: 19, scope: !2559)
!2583 = !DILocation(line: 411, column: 5, scope: !2559)
!2584 = !DILocation(line: 411, column: 8, scope: !2559)
!2585 = !DILocation(line: 411, column: 14, scope: !2559)
!2586 = !DILocation(line: 412, column: 22, scope: !2559)
!2587 = !DILocation(line: 412, column: 25, scope: !2559)
!2588 = !DILocation(line: 412, column: 38, scope: !2559)
!2589 = !DILocation(line: 412, column: 41, scope: !2559)
!2590 = !DILocation(line: 412, column: 36, scope: !2559)
!2591 = !DILocation(line: 412, column: 50, scope: !2559)
!2592 = !DILocation(line: 412, column: 30, scope: !2559)
!2593 = !DILocation(line: 412, column: 19, scope: !2559)
!2594 = !DILocation(line: 412, column: 5, scope: !2559)
!2595 = !DILocation(line: 412, column: 8, scope: !2559)
!2596 = !DILocation(line: 412, column: 14, scope: !2559)
!2597 = !DILocation(line: 414, column: 13, scope: !2559)
!2598 = !DILocation(line: 414, column: 16, scope: !2559)
!2599 = !DILocation(line: 414, column: 22, scope: !2559)
!2600 = !DILocation(line: 414, column: 5, scope: !2559)
!2601 = !DILocation(line: 416, column: 9, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2559, file: !913, line: 414, column: 27)
!2603 = !DILocation(line: 419, column: 44, scope: !2602)
!2604 = !DILocation(line: 419, column: 47, scope: !2602)
!2605 = !DILocation(line: 419, column: 52, scope: !2602)
!2606 = !DILocation(line: 419, column: 42, scope: !2602)
!2607 = !DILocation(line: 419, column: 22, scope: !2602)
!2608 = !DILocation(line: 419, column: 25, scope: !2602)
!2609 = !DILocation(line: 419, column: 58, scope: !2602)
!2610 = !DILocation(line: 419, column: 9, scope: !2602)
!2611 = !DILocation(line: 419, column: 12, scope: !2602)
!2612 = !DILocation(line: 419, column: 20, scope: !2602)
!2613 = !DILocation(line: 420, column: 9, scope: !2602)
!2614 = !DILocation(line: 420, column: 12, scope: !2602)
!2615 = !DILocation(line: 420, column: 19, scope: !2602)
!2616 = !DILocation(line: 421, column: 9, scope: !2602)
!2617 = !DILocation(line: 424, column: 46, scope: !2602)
!2618 = !DILocation(line: 424, column: 49, scope: !2602)
!2619 = !DILocation(line: 424, column: 44, scope: !2602)
!2620 = !DILocation(line: 424, column: 54, scope: !2602)
!2621 = !DILocation(line: 424, column: 22, scope: !2602)
!2622 = !DILocation(line: 424, column: 25, scope: !2602)
!2623 = !DILocation(line: 424, column: 59, scope: !2602)
!2624 = !DILocation(line: 424, column: 9, scope: !2602)
!2625 = !DILocation(line: 424, column: 12, scope: !2602)
!2626 = !DILocation(line: 424, column: 20, scope: !2602)
!2627 = !DILocation(line: 425, column: 9, scope: !2602)
!2628 = !DILocation(line: 425, column: 12, scope: !2602)
!2629 = !DILocation(line: 425, column: 19, scope: !2602)
!2630 = !DILocation(line: 426, column: 9, scope: !2602)
!2631 = !DILocation(line: 428, column: 9, scope: !2602)
!2632 = !DILocation(line: 428, column: 12, scope: !2602)
!2633 = !DILocation(line: 428, column: 20, scope: !2602)
!2634 = !DILocation(line: 429, column: 9, scope: !2602)
!2635 = !DILocation(line: 429, column: 12, scope: !2602)
!2636 = !DILocation(line: 429, column: 19, scope: !2602)
!2637 = !DILocation(line: 430, column: 9, scope: !2602)
!2638 = !DILocation(line: 433, column: 33, scope: !2559)
!2639 = !DILocation(line: 433, column: 36, scope: !2559)
!2640 = !DILocation(line: 433, column: 31, scope: !2559)
!2641 = !DILocation(line: 433, column: 45, scope: !2559)
!2642 = !DILocation(line: 433, column: 48, scope: !2559)
!2643 = !DILocation(line: 433, column: 53, scope: !2559)
!2644 = !DILocation(line: 433, column: 43, scope: !2559)
!2645 = !DILocation(line: 433, column: 41, scope: !2559)
!2646 = !DILocation(line: 433, column: 9, scope: !2559)
!2647 = !DILocation(line: 433, column: 12, scope: !2559)
!2648 = !DILocation(line: 433, column: 7, scope: !2559)
!2649 = !DILocation(line: 434, column: 33, scope: !2559)
!2650 = !DILocation(line: 434, column: 36, scope: !2559)
!2651 = !DILocation(line: 434, column: 31, scope: !2559)
!2652 = !DILocation(line: 434, column: 41, scope: !2559)
!2653 = !DILocation(line: 434, column: 48, scope: !2559)
!2654 = !DILocation(line: 434, column: 51, scope: !2559)
!2655 = !DILocation(line: 434, column: 56, scope: !2559)
!2656 = !DILocation(line: 434, column: 45, scope: !2559)
!2657 = !DILocation(line: 434, column: 9, scope: !2559)
!2658 = !DILocation(line: 434, column: 12, scope: !2559)
!2659 = !DILocation(line: 434, column: 7, scope: !2559)
!2660 = !DILocation(line: 435, column: 33, scope: !2559)
!2661 = !DILocation(line: 435, column: 36, scope: !2559)
!2662 = !DILocation(line: 435, column: 31, scope: !2559)
!2663 = !DILocation(line: 435, column: 41, scope: !2559)
!2664 = !DILocation(line: 435, column: 49, scope: !2559)
!2665 = !DILocation(line: 435, column: 52, scope: !2559)
!2666 = !DILocation(line: 435, column: 57, scope: !2559)
!2667 = !DILocation(line: 435, column: 47, scope: !2559)
!2668 = !DILocation(line: 435, column: 45, scope: !2559)
!2669 = !DILocation(line: 435, column: 9, scope: !2559)
!2670 = !DILocation(line: 435, column: 12, scope: !2559)
!2671 = !DILocation(line: 435, column: 7, scope: !2559)
!2672 = !DILocation(line: 437, column: 20, scope: !2559)
!2673 = !DILocation(line: 437, column: 26, scope: !2559)
!2674 = !DILocation(line: 437, column: 23, scope: !2559)
!2675 = !DILocation(line: 437, column: 19, scope: !2559)
!2676 = !DILocation(line: 437, column: 32, scope: !2677)
!2677 = !DILexicalBlockFile(scope: !2559, file: !913, discriminator: 1)
!2678 = !DILocation(line: 437, column: 19, scope: !2677)
!2679 = !DILocation(line: 437, column: 38, scope: !2680)
!2680 = !DILexicalBlockFile(scope: !2559, file: !913, discriminator: 2)
!2681 = !DILocation(line: 437, column: 19, scope: !2680)
!2682 = !DILocation(line: 437, column: 19, scope: !2683)
!2683 = !DILexicalBlockFile(scope: !2559, file: !913, discriminator: 3)
!2684 = !DILocation(line: 437, column: 5, scope: !2683)
!2685 = !DILocation(line: 437, column: 8, scope: !2683)
!2686 = !DILocation(line: 437, column: 16, scope: !2683)
!2687 = !DILocation(line: 441, column: 10, scope: !2688)
!2688 = distinct !DILexicalBlock(scope: !2559, file: !913, line: 441, column: 9)
!2689 = !DILocation(line: 441, column: 13, scope: !2688)
!2690 = !DILocation(line: 441, column: 20, scope: !2688)
!2691 = !DILocation(line: 441, column: 23, scope: !2688)
!2692 = !DILocation(line: 441, column: 18, scope: !2688)
!2693 = !DILocation(line: 441, column: 29, scope: !2688)
!2694 = !DILocation(line: 441, column: 9, scope: !2559)
!2695 = !DILocation(line: 442, column: 24, scope: !2688)
!2696 = !DILocation(line: 442, column: 30, scope: !2688)
!2697 = !DILocation(line: 442, column: 33, scope: !2688)
!2698 = !DILocation(line: 442, column: 27, scope: !2688)
!2699 = !DILocation(line: 442, column: 23, scope: !2688)
!2700 = !DILocation(line: 442, column: 45, scope: !2701)
!2701 = !DILexicalBlockFile(scope: !2688, file: !913, discriminator: 1)
!2702 = !DILocation(line: 442, column: 48, scope: !2701)
!2703 = !DILocation(line: 442, column: 23, scope: !2701)
!2704 = !DILocation(line: 442, column: 60, scope: !2705)
!2705 = !DILexicalBlockFile(scope: !2688, file: !913, discriminator: 2)
!2706 = !DILocation(line: 442, column: 23, scope: !2705)
!2707 = !DILocation(line: 442, column: 23, scope: !2708)
!2708 = !DILexicalBlockFile(scope: !2688, file: !913, discriminator: 3)
!2709 = !DILocation(line: 442, column: 9, scope: !2708)
!2710 = !DILocation(line: 442, column: 12, scope: !2708)
!2711 = !DILocation(line: 442, column: 20, scope: !2708)
!2712 = !DILocation(line: 443, column: 5, scope: !2559)
!2713 = !DILocation(line: 443, column: 8, scope: !2559)
!2714 = !DILocation(line: 443, column: 16, scope: !2559)
!2715 = !DILocation(line: 445, column: 7, scope: !2559)
!2716 = !DILocation(line: 446, column: 7, scope: !2559)
!2717 = !DILocation(line: 447, column: 7, scope: !2559)
!2718 = !DILocation(line: 449, column: 29, scope: !2559)
!2719 = !DILocation(line: 449, column: 27, scope: !2559)
!2720 = !DILocation(line: 449, column: 37, scope: !2559)
!2721 = !DILocation(line: 449, column: 35, scope: !2559)
!2722 = !DILocation(line: 449, column: 31, scope: !2559)
!2723 = !DILocation(line: 449, column: 21, scope: !2559)
!2724 = !DILocation(line: 449, column: 41, scope: !2559)
!2725 = !DILocation(line: 449, column: 7, scope: !2559)
!2726 = !DILocation(line: 450, column: 9, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2559, file: !913, line: 450, column: 9)
!2728 = !DILocation(line: 450, column: 11, scope: !2727)
!2729 = !DILocation(line: 450, column: 9, scope: !2559)
!2730 = !DILocation(line: 451, column: 21, scope: !2727)
!2731 = !DILocation(line: 451, column: 9, scope: !2727)
!2732 = !DILocation(line: 451, column: 12, scope: !2727)
!2733 = !DILocation(line: 451, column: 19, scope: !2727)
!2734 = !DILocation(line: 453, column: 39, scope: !2727)
!2735 = !DILocation(line: 453, column: 37, scope: !2727)
!2736 = !DILocation(line: 453, column: 48, scope: !2727)
!2737 = !DILocation(line: 453, column: 51, scope: !2727)
!2738 = !DILocation(line: 453, column: 57, scope: !2727)
!2739 = !DILocation(line: 453, column: 45, scope: !2727)
!2740 = !DILocation(line: 453, column: 41, scope: !2727)
!2741 = !DILocation(line: 453, column: 31, scope: !2727)
!2742 = !DILocation(line: 453, column: 65, scope: !2727)
!2743 = !DILocation(line: 453, column: 9, scope: !2727)
!2744 = !DILocation(line: 453, column: 12, scope: !2727)
!2745 = !DILocation(line: 453, column: 19, scope: !2727)
!2746 = !DILocation(line: 473, column: 1, scope: !2559)
!2747 = !DILocalVariable(name: "w", arg: 1, scope: !974, file: !913, line: 322, type: !977)
!2748 = !DILocation(line: 322, column: 61, scope: !974)
!2749 = !DILocalVariable(name: "chroma", arg: 2, scope: !974, file: !913, line: 322, type: !1107)
!2750 = !DILocation(line: 322, column: 74, scope: !974)
!2751 = !DILocalVariable(name: "range", scope: !974, file: !913, line: 324, type: !898)
!2752 = !DILocation(line: 324, column: 9, scope: !974)
!2753 = !DILocalVariable(name: "sum", scope: !974, file: !913, line: 325, type: !898)
!2754 = !DILocation(line: 325, column: 9, scope: !974)
!2755 = !DILocalVariable(name: "quant", scope: !974, file: !913, line: 326, type: !898)
!2756 = !DILocation(line: 326, column: 9, scope: !974)
!2757 = !DILocation(line: 328, column: 5, scope: !974)
!2758 = !DILocation(line: 328, column: 8, scope: !974)
!2759 = !DILocation(line: 328, column: 12, scope: !974)
!2760 = !DILocation(line: 328, column: 47, scope: !974)
!2761 = !DILocation(line: 328, column: 39, scope: !974)
!2762 = !DILocation(line: 328, column: 42, scope: !974)
!2763 = !DILocation(line: 328, column: 56, scope: !974)
!2764 = !DILocation(line: 328, column: 59, scope: !974)
!2765 = !DILocation(line: 329, column: 58, scope: !974)
!2766 = !DILocation(line: 329, column: 65, scope: !974)
!2767 = !DILocation(line: 329, column: 39, scope: !974)
!2768 = !DILocation(line: 329, column: 42, scope: !974)
!2769 = !DILocation(line: 329, column: 49, scope: !974)
!2770 = !DILocation(line: 330, column: 53, scope: !974)
!2771 = !DILocation(line: 330, column: 56, scope: !974)
!2772 = !DILocation(line: 331, column: 9, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !974, file: !913, line: 331, column: 9)
!2774 = !DILocation(line: 331, column: 9, scope: !974)
!2775 = !DILocation(line: 332, column: 21, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2773, file: !913, line: 331, column: 17)
!2777 = !DILocation(line: 332, column: 24, scope: !2776)
!2778 = !DILocation(line: 332, column: 9, scope: !2776)
!2779 = !DILocation(line: 332, column: 12, scope: !2776)
!2780 = !DILocation(line: 332, column: 19, scope: !2776)
!2781 = !DILocation(line: 333, column: 17, scope: !2776)
!2782 = !DILocation(line: 333, column: 20, scope: !2776)
!2783 = !DILocation(line: 333, column: 15, scope: !2776)
!2784 = !DILocation(line: 334, column: 5, scope: !2776)
!2785 = !DILocation(line: 335, column: 17, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2773, file: !913, line: 334, column: 12)
!2787 = !DILocation(line: 335, column: 20, scope: !2786)
!2788 = !DILocation(line: 335, column: 15, scope: !2786)
!2789 = !DILocation(line: 338, column: 5, scope: !974)
!2790 = !DILocation(line: 338, column: 8, scope: !974)
!2791 = !DILocation(line: 338, column: 16, scope: !974)
!2792 = !DILocation(line: 339, column: 9, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !974, file: !913, line: 339, column: 9)
!2794 = !DILocation(line: 339, column: 17, scope: !2793)
!2795 = !DILocation(line: 339, column: 15, scope: !2793)
!2796 = !DILocation(line: 339, column: 23, scope: !2793)
!2797 = !DILocation(line: 339, column: 26, scope: !2798)
!2798 = !DILexicalBlockFile(scope: !2793, file: !913, discriminator: 1)
!2799 = !DILocation(line: 339, column: 32, scope: !2798)
!2800 = !DILocation(line: 339, column: 9, scope: !2798)
!2801 = !DILocation(line: 340, column: 9, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2793, file: !913, line: 339, column: 37)
!2803 = !DILocation(line: 340, column: 12, scope: !2802)
!2804 = !DILocation(line: 340, column: 19, scope: !2802)
!2805 = !DILocation(line: 343, column: 13, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2802, file: !913, line: 343, column: 13)
!2807 = !DILocation(line: 343, column: 19, scope: !2806)
!2808 = !DILocation(line: 343, column: 13, scope: !2802)
!2809 = !DILocation(line: 344, column: 13, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2806, file: !913, line: 343, column: 24)
!2811 = !DILocation(line: 344, column: 16, scope: !2810)
!2812 = !DILocation(line: 344, column: 24, scope: !2810)
!2813 = !DILocation(line: 345, column: 17, scope: !2810)
!2814 = !DILocation(line: 347, column: 31, scope: !2810)
!2815 = !DILocation(line: 347, column: 35, scope: !2810)
!2816 = !DILocation(line: 347, column: 42, scope: !2810)
!2817 = !DILocation(line: 347, column: 13, scope: !2810)
!2818 = !DILocation(line: 347, column: 16, scope: !2810)
!2819 = !DILocation(line: 347, column: 29, scope: !2810)
!2820 = !DILocation(line: 348, column: 9, scope: !2810)
!2821 = !DILocation(line: 349, column: 5, scope: !2802)
!2822 = !DILocation(line: 350, column: 9, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !974, file: !913, line: 350, column: 9)
!2824 = !DILocation(line: 350, column: 9, scope: !974)
!2825 = !DILocation(line: 351, column: 9, scope: !2823)
!2826 = !DILocation(line: 354, column: 9, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !974, file: !913, line: 354, column: 9)
!2828 = !DILocation(line: 354, column: 21, scope: !2827)
!2829 = !DILocation(line: 354, column: 24, scope: !2827)
!2830 = !DILocation(line: 354, column: 19, scope: !2827)
!2831 = !DILocation(line: 354, column: 15, scope: !2827)
!2832 = !DILocation(line: 354, column: 9, scope: !974)
!2833 = !DILocation(line: 355, column: 14, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2835, file: !913, line: 355, column: 13)
!2835 = distinct !DILexicalBlock(scope: !2827, file: !913, line: 354, column: 31)
!2836 = !DILocation(line: 355, column: 17, scope: !2834)
!2837 = !DILocation(line: 355, column: 23, scope: !2834)
!2838 = !DILocation(line: 355, column: 28, scope: !2834)
!2839 = !DILocation(line: 355, column: 13, scope: !2835)
!2840 = !DILocation(line: 356, column: 17, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2842, file: !913, line: 356, column: 17)
!2842 = distinct !DILexicalBlock(scope: !2834, file: !913, line: 355, column: 34)
!2843 = !DILocation(line: 356, column: 20, scope: !2841)
!2844 = !DILocation(line: 356, column: 27, scope: !2841)
!2845 = !DILocation(line: 356, column: 17, scope: !2842)
!2846 = !DILocation(line: 357, column: 17, scope: !2841)
!2847 = !DILocation(line: 357, column: 20, scope: !2841)
!2848 = !DILocation(line: 357, column: 27, scope: !2841)
!2849 = !DILocation(line: 358, column: 17, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2842, file: !913, line: 358, column: 17)
!2851 = !DILocation(line: 358, column: 20, scope: !2850)
!2852 = !DILocation(line: 358, column: 27, scope: !2850)
!2853 = !DILocation(line: 358, column: 17, scope: !2842)
!2854 = !DILocation(line: 359, column: 17, scope: !2850)
!2855 = !DILocation(line: 359, column: 20, scope: !2850)
!2856 = !DILocation(line: 359, column: 27, scope: !2850)
!2857 = !DILocation(line: 360, column: 9, scope: !2842)
!2858 = !DILocation(line: 361, column: 13, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2834, file: !913, line: 360, column: 16)
!2860 = !DILocation(line: 361, column: 16, scope: !2859)
!2861 = !DILocation(line: 361, column: 23, scope: !2859)
!2862 = !DILocation(line: 363, column: 9, scope: !2835)
!2863 = !DILocation(line: 363, column: 12, scope: !2835)
!2864 = !DILocation(line: 363, column: 23, scope: !2835)
!2865 = !DILocation(line: 364, column: 5, scope: !2835)
!2866 = !DILocation(line: 370, column: 43, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2827, file: !913, line: 364, column: 12)
!2868 = !DILocation(line: 370, column: 25, scope: !2867)
!2869 = !DILocation(line: 370, column: 9, scope: !2867)
!2870 = !DILocation(line: 370, column: 12, scope: !2867)
!2871 = !DILocation(line: 370, column: 23, scope: !2867)
!2872 = !DILocation(line: 371, column: 13, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2867, file: !913, line: 371, column: 13)
!2874 = !DILocation(line: 371, column: 16, scope: !2873)
!2875 = !DILocation(line: 371, column: 27, scope: !2873)
!2876 = !DILocation(line: 371, column: 13, scope: !2867)
!2877 = !DILocation(line: 372, column: 13, scope: !2873)
!2878 = !DILocation(line: 375, column: 47, scope: !2867)
!2879 = !DILocation(line: 375, column: 50, scope: !2867)
!2880 = !DILocation(line: 375, column: 19, scope: !2867)
!2881 = !DILocation(line: 375, column: 36, scope: !2867)
!2882 = !DILocation(line: 375, column: 39, scope: !2867)
!2883 = !DILocation(line: 375, column: 9, scope: !2867)
!2884 = !DILocation(line: 375, column: 12, scope: !2867)
!2885 = !DILocation(line: 375, column: 18, scope: !2867)
!2886 = !DILocation(line: 377, column: 5, scope: !974)
!2887 = !DILocation(line: 378, column: 1, scope: !974)
!2888 = distinct !DISubprogram(name: "x8_decode_intra_mb", scope: !913, file: !913, line: 567, type: !975, isLocal: true, isDefinition: true, scopeLine: 568, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!2889 = !DILocalVariable(name: "a", arg: 1, scope: !2890, file: !2891, line: 159, type: !898)
!2890 = distinct !DISubprogram(name: "av_clip_uint8_c", scope: !2891, file: !2891, line: 159, type: !2892, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!2891 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2892 = !DISubroutineType(types: !2893)
!2893 = !{!908, !898}
!2894 = !DILocation(line: 159, column: 97, scope: !2890, inlinedAt: !2895)
!2895 = distinct !DILocation(line: 655, column: 35, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2897, file: !913, line: 645, column: 60)
!2897 = distinct !DILexicalBlock(scope: !2898, file: !913, line: 645, column: 13)
!2898 = distinct !DILexicalBlock(scope: !2899, file: !913, line: 643, column: 12)
!2899 = distinct !DILexicalBlock(scope: !2888, file: !913, line: 589, column: 9)
!2900 = !DILocalVariable(name: "w", arg: 1, scope: !2888, file: !913, line: 567, type: !977)
!2901 = !DILocation(line: 567, column: 53, scope: !2888)
!2902 = !DILocalVariable(name: "chroma", arg: 2, scope: !2888, file: !913, line: 567, type: !1107)
!2903 = !DILocation(line: 567, column: 66, scope: !2888)
!2904 = !DILocalVariable(name: "scantable", scope: !2888, file: !913, line: 569, type: !994)
!2905 = !DILocation(line: 569, column: 14, scope: !2888)
!2906 = !DILocalVariable(name: "final", scope: !2888, file: !913, line: 570, type: !898)
!2907 = !DILocation(line: 570, column: 9, scope: !2888)
!2908 = !DILocalVariable(name: "run", scope: !2888, file: !913, line: 570, type: !898)
!2909 = !DILocation(line: 570, column: 16, scope: !2888)
!2910 = !DILocalVariable(name: "level", scope: !2888, file: !913, line: 570, type: !898)
!2911 = !DILocation(line: 570, column: 21, scope: !2888)
!2912 = !DILocalVariable(name: "ac_mode", scope: !2888, file: !913, line: 571, type: !898)
!2913 = !DILocation(line: 571, column: 9, scope: !2888)
!2914 = !DILocalVariable(name: "dc_mode", scope: !2888, file: !913, line: 571, type: !898)
!2915 = !DILocation(line: 571, column: 18, scope: !2888)
!2916 = !DILocalVariable(name: "est_run", scope: !2888, file: !913, line: 571, type: !898)
!2917 = !DILocation(line: 571, column: 27, scope: !2888)
!2918 = !DILocalVariable(name: "dc_level", scope: !2888, file: !913, line: 571, type: !898)
!2919 = !DILocation(line: 571, column: 36, scope: !2888)
!2920 = !DILocalVariable(name: "pos", scope: !2888, file: !913, line: 572, type: !898)
!2921 = !DILocation(line: 572, column: 9, scope: !2888)
!2922 = !DILocalVariable(name: "n", scope: !2888, file: !913, line: 572, type: !898)
!2923 = !DILocation(line: 572, column: 14, scope: !2888)
!2924 = !DILocalVariable(name: "zeros_only", scope: !2888, file: !913, line: 573, type: !898)
!2925 = !DILocation(line: 573, column: 9, scope: !2888)
!2926 = !DILocalVariable(name: "use_quant_matrix", scope: !2888, file: !913, line: 574, type: !898)
!2927 = !DILocation(line: 574, column: 9, scope: !2888)
!2928 = !DILocalVariable(name: "sign", scope: !2888, file: !913, line: 575, type: !898)
!2929 = !DILocation(line: 575, column: 9, scope: !2888)
!2930 = !DILocation(line: 578, column: 5, scope: !2888)
!2931 = !DILocation(line: 578, column: 8, scope: !2888)
!2932 = !DILocation(line: 578, column: 13, scope: !2888)
!2933 = !DILocation(line: 578, column: 25, scope: !2888)
!2934 = !DILocation(line: 578, column: 28, scope: !2888)
!2935 = !DILocation(line: 580, column: 9, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2888, file: !913, line: 580, column: 9)
!2937 = !DILocation(line: 580, column: 9, scope: !2888)
!2938 = !DILocation(line: 581, column: 17, scope: !2936)
!2939 = !DILocation(line: 581, column: 9, scope: !2936)
!2940 = !DILocation(line: 583, column: 21, scope: !2936)
!2941 = !DILocation(line: 583, column: 24, scope: !2936)
!2942 = !DILocation(line: 583, column: 20, scope: !2936)
!2943 = !DILocation(line: 583, column: 19, scope: !2936)
!2944 = !DILocation(line: 583, column: 17, scope: !2936)
!2945 = !DILocation(line: 585, column: 23, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2888, file: !913, line: 585, column: 9)
!2947 = !DILocation(line: 585, column: 26, scope: !2946)
!2948 = !DILocation(line: 585, column: 9, scope: !2946)
!2949 = !DILocation(line: 585, column: 9, scope: !2888)
!2950 = !DILocation(line: 586, column: 9, scope: !2946)
!2951 = !DILocation(line: 587, column: 7, scope: !2888)
!2952 = !DILocation(line: 588, column: 16, scope: !2888)
!2953 = !DILocation(line: 589, column: 10, scope: !2899)
!2954 = !DILocation(line: 589, column: 9, scope: !2888)
!2955 = !DILocation(line: 590, column: 28, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2899, file: !913, line: 589, column: 17)
!2957 = !DILocation(line: 590, column: 31, scope: !2956)
!2958 = !DILocation(line: 590, column: 26, scope: !2956)
!2959 = !DILocation(line: 591, column: 13, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2956, file: !913, line: 591, column: 13)
!2961 = !DILocation(line: 591, column: 13, scope: !2956)
!2962 = !DILocation(line: 592, column: 21, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2960, file: !913, line: 591, column: 21)
!2964 = !DILocation(line: 593, column: 21, scope: !2963)
!2965 = !DILocation(line: 594, column: 9, scope: !2963)
!2966 = !DILocation(line: 595, column: 17, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2968, file: !913, line: 595, column: 17)
!2968 = distinct !DILexicalBlock(scope: !2960, file: !913, line: 594, column: 16)
!2969 = !DILocation(line: 595, column: 20, scope: !2967)
!2970 = !DILocation(line: 595, column: 31, scope: !2967)
!2971 = !DILocation(line: 595, column: 17, scope: !2968)
!2972 = !DILocation(line: 596, column: 34, scope: !2967)
!2973 = !DILocation(line: 596, column: 17, scope: !2967)
!2974 = !DILocation(line: 598, column: 17, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2968, file: !913, line: 598, column: 17)
!2976 = !DILocation(line: 598, column: 20, scope: !2975)
!2977 = !DILocation(line: 598, column: 31, scope: !2975)
!2978 = !DILocation(line: 598, column: 17, scope: !2968)
!2979 = !DILocation(line: 599, column: 25, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2975, file: !913, line: 598, column: 36)
!2981 = !DILocation(line: 600, column: 25, scope: !2980)
!2982 = !DILocation(line: 601, column: 13, scope: !2980)
!2983 = !DILocation(line: 602, column: 21, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2985, file: !913, line: 602, column: 21)
!2985 = distinct !DILexicalBlock(scope: !2975, file: !913, line: 601, column: 20)
!2986 = !DILocation(line: 602, column: 24, scope: !2984)
!2987 = !DILocation(line: 602, column: 32, scope: !2984)
!2988 = !DILocation(line: 602, column: 21, scope: !2985)
!2989 = !DILocation(line: 603, column: 29, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2984, file: !913, line: 602, column: 37)
!2991 = !DILocation(line: 604, column: 31, scope: !2990)
!2992 = !DILocation(line: 604, column: 34, scope: !2990)
!2993 = !DILocation(line: 604, column: 29, scope: !2990)
!2994 = !DILocation(line: 605, column: 17, scope: !2990)
!2995 = !DILocation(line: 606, column: 29, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2984, file: !913, line: 605, column: 24)
!2997 = !DILocation(line: 607, column: 29, scope: !2996)
!2998 = !DILocation(line: 611, column: 28, scope: !2956)
!2999 = !DILocation(line: 611, column: 31, scope: !2956)
!3000 = !DILocation(line: 611, column: 9, scope: !2956)
!3001 = !DILocation(line: 614, column: 52, scope: !2956)
!3002 = !DILocation(line: 614, column: 55, scope: !2956)
!3003 = !DILocation(line: 614, column: 50, scope: !2956)
!3004 = !DILocation(line: 614, column: 44, scope: !2956)
!3005 = !DILocation(line: 614, column: 64, scope: !2956)
!3006 = !DILocation(line: 614, column: 21, scope: !2956)
!3007 = !DILocation(line: 614, column: 24, scope: !2956)
!3008 = !DILocation(line: 614, column: 69, scope: !2956)
!3009 = !DILocation(line: 614, column: 19, scope: !2956)
!3010 = !DILocation(line: 615, column: 13, scope: !2956)
!3011 = !DILocation(line: 616, column: 9, scope: !2956)
!3012 = distinct !{!3012, !3011}
!3013 = !DILocation(line: 617, column: 14, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !2956, file: !913, line: 616, column: 12)
!3015 = !DILocation(line: 618, column: 17, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3014, file: !913, line: 618, column: 17)
!3017 = !DILocation(line: 618, column: 22, scope: !3016)
!3018 = !DILocation(line: 618, column: 19, scope: !3016)
!3019 = !DILocation(line: 618, column: 17, scope: !3014)
!3020 = !DILocation(line: 619, column: 25, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3016, file: !913, line: 618, column: 31)
!3022 = !DILocation(line: 620, column: 36, scope: !3021)
!3023 = !DILocation(line: 620, column: 17, scope: !3021)
!3024 = !DILocation(line: 621, column: 13, scope: !3021)
!3025 = !DILocation(line: 623, column: 27, scope: !3014)
!3026 = !DILocation(line: 623, column: 30, scope: !3014)
!3027 = !DILocation(line: 623, column: 13, scope: !3014)
!3028 = !DILocation(line: 625, column: 20, scope: !3014)
!3029 = !DILocation(line: 625, column: 24, scope: !3014)
!3030 = !DILocation(line: 625, column: 17, scope: !3014)
!3031 = !DILocation(line: 626, column: 17, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3014, file: !913, line: 626, column: 17)
!3033 = !DILocation(line: 626, column: 21, scope: !3032)
!3034 = !DILocation(line: 626, column: 17, scope: !3014)
!3035 = !DILocation(line: 628, column: 17, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3032, file: !913, line: 626, column: 27)
!3037 = !DILocation(line: 630, column: 22, scope: !3014)
!3038 = !DILocation(line: 630, column: 28, scope: !3014)
!3039 = !DILocation(line: 630, column: 35, scope: !3014)
!3040 = !DILocation(line: 630, column: 38, scope: !3014)
!3041 = !DILocation(line: 630, column: 33, scope: !3014)
!3042 = !DILocation(line: 630, column: 19, scope: !3014)
!3043 = !DILocation(line: 631, column: 22, scope: !3014)
!3044 = !DILocation(line: 631, column: 25, scope: !3014)
!3045 = !DILocation(line: 631, column: 19, scope: !3014)
!3046 = !DILocation(line: 633, column: 31, scope: !3014)
!3047 = !DILocation(line: 633, column: 34, scope: !3014)
!3048 = !DILocation(line: 633, column: 21, scope: !3014)
!3049 = !DILocation(line: 633, column: 20, scope: !3014)
!3050 = !DILocation(line: 633, column: 18, scope: !3014)
!3051 = !DILocation(line: 634, column: 22, scope: !3014)
!3052 = !DILocation(line: 634, column: 30, scope: !3014)
!3053 = !DILocation(line: 634, column: 28, scope: !3014)
!3054 = !DILocation(line: 634, column: 38, scope: !3014)
!3055 = !DILocation(line: 634, column: 36, scope: !3014)
!3056 = !DILocation(line: 634, column: 19, scope: !3014)
!3057 = !DILocation(line: 636, column: 17, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3014, file: !913, line: 636, column: 17)
!3059 = !DILocation(line: 636, column: 17, scope: !3014)
!3060 = !DILocation(line: 637, column: 26, scope: !3058)
!3061 = !DILocation(line: 637, column: 46, scope: !3058)
!3062 = !DILocation(line: 637, column: 34, scope: !3058)
!3063 = !DILocation(line: 637, column: 32, scope: !3058)
!3064 = !DILocation(line: 637, column: 52, scope: !3058)
!3065 = !DILocation(line: 637, column: 23, scope: !3058)
!3066 = !DILocation(line: 637, column: 17, scope: !3058)
!3067 = !DILocation(line: 639, column: 43, scope: !3014)
!3068 = !DILocation(line: 639, column: 35, scope: !3014)
!3069 = !DILocation(line: 639, column: 25, scope: !3014)
!3070 = !DILocation(line: 639, column: 13, scope: !3014)
!3071 = !DILocation(line: 639, column: 16, scope: !3014)
!3072 = !DILocation(line: 639, column: 41, scope: !3014)
!3073 = !DILocation(line: 640, column: 9, scope: !3014)
!3074 = !DILocation(line: 640, column: 19, scope: !3075)
!3075 = !DILexicalBlockFile(scope: !2956, file: !913, discriminator: 1)
!3076 = !DILocation(line: 640, column: 18, scope: !3075)
!3077 = !DILocation(line: 640, column: 9, scope: !3075)
!3078 = !DILocation(line: 642, column: 34, scope: !2956)
!3079 = !DILocation(line: 642, column: 9, scope: !2956)
!3080 = !DILocation(line: 642, column: 12, scope: !2956)
!3081 = !DILocation(line: 642, column: 32, scope: !2956)
!3082 = !DILocation(line: 643, column: 5, scope: !2956)
!3083 = !DILocation(line: 644, column: 9, scope: !2898)
!3084 = !DILocation(line: 644, column: 12, scope: !2898)
!3085 = !DILocation(line: 644, column: 32, scope: !2898)
!3086 = !DILocation(line: 645, column: 13, scope: !2897)
!3087 = !DILocation(line: 645, column: 16, scope: !2897)
!3088 = !DILocation(line: 645, column: 24, scope: !2897)
!3089 = !DILocation(line: 645, column: 40, scope: !3090)
!3090 = !DILexicalBlockFile(scope: !2897, file: !913, discriminator: 1)
!3091 = !DILocation(line: 645, column: 49, scope: !3090)
!3092 = !DILocation(line: 645, column: 55, scope: !3090)
!3093 = !DILocation(line: 645, column: 13, scope: !3090)
!3094 = !DILocalVariable(name: "divide_quant", scope: !2896, file: !913, line: 646, type: !3095)
!3095 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !926, line: 196, baseType: !898)
!3096 = !DILocation(line: 646, column: 21, scope: !2896)
!3097 = !DILocation(line: 646, column: 37, scope: !2896)
!3098 = !DILocation(line: 646, column: 36, scope: !2896)
!3099 = !DILocation(line: 646, column: 46, scope: !3100)
!3100 = !DILexicalBlockFile(scope: !2896, file: !913, discriminator: 1)
!3101 = !DILocation(line: 646, column: 49, scope: !3100)
!3102 = !DILocation(line: 646, column: 36, scope: !3100)
!3103 = !DILocation(line: 647, column: 46, scope: !2896)
!3104 = !DILocation(line: 647, column: 49, scope: !2896)
!3105 = !DILocation(line: 646, column: 36, scope: !3106)
!3106 = !DILexicalBlockFile(scope: !2896, file: !913, discriminator: 2)
!3107 = !DILocation(line: 646, column: 36, scope: !3108)
!3108 = !DILexicalBlockFile(scope: !2896, file: !913, discriminator: 3)
!3109 = !DILocation(line: 646, column: 21, scope: !3108)
!3110 = !DILocalVariable(name: "dc_quant", scope: !2896, file: !913, line: 648, type: !3095)
!3111 = !DILocation(line: 648, column: 21, scope: !2896)
!3112 = !DILocation(line: 648, column: 33, scope: !2896)
!3113 = !DILocation(line: 648, column: 32, scope: !2896)
!3114 = !DILocation(line: 648, column: 42, scope: !3100)
!3115 = !DILocation(line: 648, column: 45, scope: !3100)
!3116 = !DILocation(line: 648, column: 32, scope: !3100)
!3117 = !DILocation(line: 649, column: 46, scope: !2896)
!3118 = !DILocation(line: 649, column: 49, scope: !2896)
!3119 = !DILocation(line: 648, column: 32, scope: !3106)
!3120 = !DILocation(line: 648, column: 32, scope: !3108)
!3121 = !DILocation(line: 648, column: 21, scope: !3108)
!3122 = !DILocation(line: 653, column: 26, scope: !2896)
!3123 = !DILocation(line: 653, column: 29, scope: !2896)
!3124 = !DILocation(line: 653, column: 44, scope: !2896)
!3125 = !DILocation(line: 653, column: 42, scope: !2896)
!3126 = !DILocation(line: 653, column: 57, scope: !2896)
!3127 = !DILocation(line: 653, column: 70, scope: !2896)
!3128 = !DILocation(line: 653, column: 22, scope: !2896)
!3129 = !DILocation(line: 655, column: 52, scope: !2896)
!3130 = !DILocation(line: 655, column: 63, scope: !2896)
!3131 = !DILocation(line: 655, column: 61, scope: !2896)
!3132 = !DILocation(line: 655, column: 72, scope: !2896)
!3133 = !DILocation(line: 655, column: 77, scope: !2896)
!3134 = !DILocation(line: 655, column: 35, scope: !2896)
!3135 = !DILocation(line: 161, column: 9, scope: !3136, inlinedAt: !2895)
!3136 = distinct !DILexicalBlock(scope: !2890, file: !2891, line: 161, column: 9)
!3137 = !DILocation(line: 161, column: 10, scope: !3136, inlinedAt: !2895)
!3138 = !DILocation(line: 161, column: 9, scope: !2890, inlinedAt: !2895)
!3139 = !DILocation(line: 161, column: 29, scope: !3140, inlinedAt: !2895)
!3140 = !DILexicalBlockFile(scope: !3136, file: !2891, discriminator: 1)
!3141 = !DILocation(line: 161, column: 28, scope: !3140, inlinedAt: !2895)
!3142 = !DILocation(line: 161, column: 31, scope: !3140, inlinedAt: !2895)
!3143 = !DILocation(line: 161, column: 27, scope: !3140, inlinedAt: !2895)
!3144 = !DILocation(line: 161, column: 20, scope: !3140, inlinedAt: !2895)
!3145 = !DILocation(line: 162, column: 17, scope: !3136, inlinedAt: !2895)
!3146 = !DILocation(line: 162, column: 10, scope: !3136, inlinedAt: !2895)
!3147 = !DILocation(line: 163, column: 1, scope: !2890, inlinedAt: !2895)
!3148 = !DILocation(line: 656, column: 43, scope: !2896)
!3149 = !DILocation(line: 656, column: 35, scope: !2896)
!3150 = !DILocation(line: 656, column: 38, scope: !2896)
!3151 = !DILocation(line: 657, column: 56, scope: !2896)
!3152 = !DILocation(line: 657, column: 55, scope: !2896)
!3153 = !DILocation(line: 657, column: 54, scope: !2896)
!3154 = !DILocation(line: 657, column: 35, scope: !2896)
!3155 = !DILocation(line: 657, column: 38, scope: !2896)
!3156 = !DILocation(line: 657, column: 45, scope: !2896)
!3157 = !DILocation(line: 655, column: 13, scope: !3100)
!3158 = !DILocation(line: 659, column: 13, scope: !2896)
!3159 = !DILocation(line: 661, column: 22, scope: !2898)
!3160 = !DILocation(line: 661, column: 31, scope: !2898)
!3161 = !DILocation(line: 661, column: 20, scope: !2898)
!3162 = !DILocation(line: 663, column: 10, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !2888, file: !913, line: 663, column: 9)
!3164 = !DILocation(line: 663, column: 9, scope: !2888)
!3165 = !DILocation(line: 664, column: 26, scope: !3163)
!3166 = !DILocation(line: 664, column: 37, scope: !3163)
!3167 = !DILocation(line: 664, column: 40, scope: !3163)
!3168 = !DILocation(line: 664, column: 35, scope: !3163)
!3169 = !DILocation(line: 664, column: 9, scope: !3163)
!3170 = !DILocation(line: 664, column: 12, scope: !3163)
!3171 = !DILocation(line: 664, column: 24, scope: !3163)
!3172 = !DILocation(line: 666, column: 26, scope: !3163)
!3173 = !DILocation(line: 666, column: 37, scope: !3163)
!3174 = !DILocation(line: 666, column: 40, scope: !3163)
!3175 = !DILocation(line: 666, column: 35, scope: !3163)
!3176 = !DILocation(line: 666, column: 9, scope: !3163)
!3177 = !DILocation(line: 666, column: 12, scope: !3163)
!3178 = !DILocation(line: 666, column: 24, scope: !3163)
!3179 = !DILocation(line: 669, column: 25, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !2888, file: !913, line: 669, column: 9)
!3181 = !DILocation(line: 669, column: 34, scope: !3180)
!3182 = !DILocation(line: 669, column: 39, scope: !3180)
!3183 = !DILocation(line: 669, column: 44, scope: !3180)
!3184 = !DILocation(line: 669, column: 48, scope: !3185)
!3185 = !DILexicalBlockFile(scope: !3180, file: !913, discriminator: 1)
!3186 = !DILocation(line: 669, column: 51, scope: !3185)
!3187 = !DILocation(line: 669, column: 57, scope: !3185)
!3188 = !DILocation(line: 669, column: 62, scope: !3185)
!3189 = !DILocation(line: 669, column: 9, scope: !3185)
!3190 = !DILocalVariable(name: "direction", scope: !3191, file: !913, line: 670, type: !898)
!3191 = distinct !DILexicalBlock(scope: !3180, file: !913, line: 669, column: 68)
!3192 = !DILocation(line: 670, column: 13, scope: !3191)
!3193 = !DILocation(line: 673, column: 35, scope: !3191)
!3194 = !DILocation(line: 673, column: 38, scope: !3191)
!3195 = !DILocation(line: 673, column: 45, scope: !3191)
!3196 = !DILocation(line: 673, column: 31, scope: !3191)
!3197 = !DILocation(line: 673, column: 51, scope: !3191)
!3198 = !DILocation(line: 673, column: 19, scope: !3191)
!3199 = !DILocation(line: 674, column: 13, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3191, file: !913, line: 674, column: 13)
!3201 = !DILocation(line: 674, column: 23, scope: !3200)
!3202 = !DILocation(line: 674, column: 13, scope: !3191)
!3203 = !DILocation(line: 676, column: 32, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3200, file: !913, line: 674, column: 29)
!3205 = !DILocation(line: 676, column: 35, scope: !3204)
!3206 = !DILocation(line: 676, column: 46, scope: !3204)
!3207 = !DILocation(line: 676, column: 49, scope: !3204)
!3208 = !DILocation(line: 676, column: 13, scope: !3204)
!3209 = !DILocation(line: 677, column: 9, scope: !3204)
!3210 = !DILocation(line: 678, column: 5, scope: !3191)
!3211 = !DILocation(line: 680, column: 9, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !2888, file: !913, line: 680, column: 9)
!3213 = !DILocation(line: 680, column: 12, scope: !3212)
!3214 = !DILocation(line: 680, column: 9, scope: !2888)
!3215 = !DILocation(line: 681, column: 31, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3212, file: !913, line: 680, column: 21)
!3217 = !DILocation(line: 681, column: 34, scope: !3216)
!3218 = !DILocation(line: 681, column: 56, scope: !3216)
!3219 = !DILocation(line: 681, column: 48, scope: !3216)
!3220 = !DILocation(line: 681, column: 51, scope: !3216)
!3221 = !DILocation(line: 682, column: 52, scope: !3216)
!3222 = !DILocation(line: 682, column: 51, scope: !3216)
!3223 = !DILocation(line: 682, column: 50, scope: !3216)
!3224 = !DILocation(line: 682, column: 31, scope: !3216)
!3225 = !DILocation(line: 682, column: 34, scope: !3216)
!3226 = !DILocation(line: 682, column: 41, scope: !3216)
!3227 = !DILocation(line: 681, column: 9, scope: !3216)
!3228 = !DILocation(line: 683, column: 5, scope: !3216)
!3229 = !DILocation(line: 684, column: 37, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3212, file: !913, line: 683, column: 12)
!3231 = !DILocation(line: 684, column: 40, scope: !3230)
!3232 = !DILocation(line: 684, column: 9, scope: !3230)
!3233 = !DILocation(line: 684, column: 12, scope: !3230)
!3234 = !DILocation(line: 684, column: 16, scope: !3230)
!3235 = !DILocation(line: 684, column: 48, scope: !3230)
!3236 = !DILocation(line: 684, column: 51, scope: !3230)
!3237 = !DILocation(line: 685, column: 56, scope: !3230)
!3238 = !DILocation(line: 685, column: 48, scope: !3230)
!3239 = !DILocation(line: 685, column: 51, scope: !3230)
!3240 = !DILocation(line: 686, column: 69, scope: !3230)
!3241 = !DILocation(line: 686, column: 68, scope: !3230)
!3242 = !DILocation(line: 686, column: 67, scope: !3230)
!3243 = !DILocation(line: 686, column: 48, scope: !3230)
!3244 = !DILocation(line: 686, column: 51, scope: !3230)
!3245 = !DILocation(line: 686, column: 58, scope: !3230)
!3246 = !DILocation(line: 688, column: 10, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !2888, file: !913, line: 688, column: 9)
!3248 = !DILocation(line: 688, column: 9, scope: !2888)
!3249 = !DILocation(line: 689, column: 9, scope: !3247)
!3250 = !DILocation(line: 689, column: 12, scope: !3247)
!3251 = !DILocation(line: 689, column: 17, scope: !3247)
!3252 = !DILocation(line: 689, column: 34, scope: !3247)
!3253 = !DILocation(line: 689, column: 26, scope: !3247)
!3254 = !DILocation(line: 689, column: 29, scope: !3247)
!3255 = !DILocation(line: 690, column: 47, scope: !3247)
!3256 = !DILocation(line: 690, column: 46, scope: !3247)
!3257 = !DILocation(line: 690, column: 45, scope: !3247)
!3258 = !DILocation(line: 690, column: 26, scope: !3247)
!3259 = !DILocation(line: 690, column: 29, scope: !3247)
!3260 = !DILocation(line: 690, column: 36, scope: !3247)
!3261 = !DILocation(line: 691, column: 26, scope: !3247)
!3262 = !DILocation(line: 691, column: 29, scope: !3247)
!3263 = !DILocation(line: 688, column: 10, scope: !3264)
!3264 = !DILexicalBlockFile(scope: !3247, file: !913, discriminator: 1)
!3265 = !DILocation(line: 694, column: 10, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !2888, file: !913, line: 694, column: 9)
!3267 = !DILocation(line: 694, column: 9, scope: !2888)
!3268 = !DILocation(line: 695, column: 31, scope: !3266)
!3269 = !DILocation(line: 695, column: 34, scope: !3266)
!3270 = !DILocation(line: 695, column: 37, scope: !3266)
!3271 = !DILocation(line: 695, column: 45, scope: !3266)
!3272 = !DILocation(line: 695, column: 9, scope: !3266)
!3273 = !DILocation(line: 697, column: 9, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !2888, file: !913, line: 697, column: 9)
!3275 = !DILocation(line: 697, column: 12, scope: !3274)
!3276 = !DILocation(line: 697, column: 9, scope: !2888)
!3277 = !DILocalVariable(name: "ptr", scope: !3278, file: !913, line: 698, type: !994)
!3278 = distinct !DILexicalBlock(scope: !3274, file: !913, line: 697, column: 24)
!3279 = !DILocation(line: 698, column: 18, scope: !3278)
!3280 = !DILocation(line: 698, column: 32, scope: !3278)
!3281 = !DILocation(line: 698, column: 24, scope: !3278)
!3282 = !DILocation(line: 698, column: 27, scope: !3278)
!3283 = !DILocalVariable(name: "linesize", scope: !3278, file: !913, line: 699, type: !1017)
!3284 = !DILocation(line: 699, column: 19, scope: !3278)
!3285 = !DILocation(line: 699, column: 51, scope: !3278)
!3286 = !DILocation(line: 699, column: 50, scope: !3278)
!3287 = !DILocation(line: 699, column: 49, scope: !3278)
!3288 = !DILocation(line: 699, column: 30, scope: !3278)
!3289 = !DILocation(line: 699, column: 33, scope: !3278)
!3290 = !DILocation(line: 699, column: 40, scope: !3278)
!3291 = !DILocation(line: 701, column: 16, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3278, file: !913, line: 701, column: 13)
!3293 = !DILocation(line: 701, column: 19, scope: !3292)
!3294 = !DILocation(line: 701, column: 25, scope: !3292)
!3295 = !DILocation(line: 701, column: 30, scope: !3292)
!3296 = !DILocation(line: 701, column: 34, scope: !3297)
!3297 = !DILexicalBlockFile(scope: !3292, file: !913, discriminator: 1)
!3298 = !DILocation(line: 701, column: 45, scope: !3297)
!3299 = !DILocation(line: 701, column: 49, scope: !3300)
!3300 = !DILexicalBlockFile(scope: !3292, file: !913, discriminator: 2)
!3301 = !DILocation(line: 701, column: 52, scope: !3300)
!3302 = !DILocation(line: 701, column: 59, scope: !3300)
!3303 = !DILocation(line: 701, column: 64, scope: !3300)
!3304 = !DILocation(line: 701, column: 13, scope: !3300)
!3305 = !DILocation(line: 702, column: 13, scope: !3292)
!3306 = !DILocation(line: 702, column: 16, scope: !3292)
!3307 = !DILocation(line: 702, column: 20, scope: !3292)
!3308 = !DILocation(line: 702, column: 34, scope: !3292)
!3309 = !DILocation(line: 702, column: 39, scope: !3292)
!3310 = !DILocation(line: 702, column: 49, scope: !3292)
!3311 = !DILocation(line: 702, column: 52, scope: !3292)
!3312 = !DILocation(line: 704, column: 16, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3278, file: !913, line: 704, column: 13)
!3314 = !DILocation(line: 704, column: 19, scope: !3313)
!3315 = !DILocation(line: 704, column: 25, scope: !3313)
!3316 = !DILocation(line: 704, column: 30, scope: !3313)
!3317 = !DILocation(line: 704, column: 34, scope: !3318)
!3318 = !DILexicalBlockFile(scope: !3313, file: !913, discriminator: 1)
!3319 = !DILocation(line: 704, column: 45, scope: !3318)
!3320 = !DILocation(line: 704, column: 49, scope: !3321)
!3321 = !DILexicalBlockFile(scope: !3313, file: !913, discriminator: 2)
!3322 = !DILocation(line: 704, column: 52, scope: !3321)
!3323 = !DILocation(line: 704, column: 59, scope: !3321)
!3324 = !DILocation(line: 704, column: 64, scope: !3321)
!3325 = !DILocation(line: 704, column: 13, scope: !3321)
!3326 = !DILocation(line: 705, column: 13, scope: !3313)
!3327 = !DILocation(line: 705, column: 16, scope: !3313)
!3328 = !DILocation(line: 705, column: 20, scope: !3313)
!3329 = !DILocation(line: 705, column: 34, scope: !3313)
!3330 = !DILocation(line: 705, column: 39, scope: !3313)
!3331 = !DILocation(line: 705, column: 49, scope: !3313)
!3332 = !DILocation(line: 705, column: 52, scope: !3313)
!3333 = !DILocation(line: 706, column: 5, scope: !3278)
!3334 = !DILocation(line: 707, column: 5, scope: !2888)
!3335 = !DILocation(line: 708, column: 1, scope: !2888)
!3336 = distinct !DISubprogram(name: "x8_get_prediction_chroma", scope: !913, file: !913, line: 390, type: !2560, isLocal: true, isDefinition: true, scopeLine: 391, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!3337 = !DILocalVariable(name: "w", arg: 1, scope: !3336, file: !913, line: 390, type: !977)
!3338 = !DILocation(line: 390, column: 60, scope: !3336)
!3339 = !DILocation(line: 392, column: 22, scope: !3336)
!3340 = !DILocation(line: 392, column: 25, scope: !3336)
!3341 = !DILocation(line: 392, column: 30, scope: !3336)
!3342 = !DILocation(line: 392, column: 20, scope: !3336)
!3343 = !DILocation(line: 392, column: 18, scope: !3336)
!3344 = !DILocation(line: 392, column: 5, scope: !3336)
!3345 = !DILocation(line: 392, column: 8, scope: !3336)
!3346 = !DILocation(line: 392, column: 14, scope: !3336)
!3347 = !DILocation(line: 393, column: 23, scope: !3336)
!3348 = !DILocation(line: 393, column: 26, scope: !3336)
!3349 = !DILocation(line: 393, column: 31, scope: !3336)
!3350 = !DILocation(line: 393, column: 21, scope: !3336)
!3351 = !DILocation(line: 393, column: 19, scope: !3336)
!3352 = !DILocation(line: 393, column: 5, scope: !3336)
!3353 = !DILocation(line: 393, column: 8, scope: !3336)
!3354 = !DILocation(line: 393, column: 14, scope: !3336)
!3355 = !DILocation(line: 394, column: 22, scope: !3336)
!3356 = !DILocation(line: 394, column: 25, scope: !3336)
!3357 = !DILocation(line: 394, column: 38, scope: !3336)
!3358 = !DILocation(line: 394, column: 41, scope: !3336)
!3359 = !DILocation(line: 394, column: 36, scope: !3336)
!3360 = !DILocation(line: 394, column: 50, scope: !3336)
!3361 = !DILocation(line: 394, column: 30, scope: !3336)
!3362 = !DILocation(line: 394, column: 19, scope: !3336)
!3363 = !DILocation(line: 394, column: 5, scope: !3336)
!3364 = !DILocation(line: 394, column: 8, scope: !3336)
!3365 = !DILocation(line: 394, column: 14, scope: !3336)
!3366 = !DILocation(line: 396, column: 5, scope: !3336)
!3367 = !DILocation(line: 396, column: 8, scope: !3336)
!3368 = !DILocation(line: 396, column: 19, scope: !3336)
!3369 = !DILocation(line: 398, column: 9, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3336, file: !913, line: 398, column: 9)
!3371 = !DILocation(line: 398, column: 12, scope: !3370)
!3372 = !DILocation(line: 398, column: 18, scope: !3370)
!3373 = !DILocation(line: 398, column: 9, scope: !3336)
!3374 = !DILocation(line: 399, column: 43, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3370, file: !913, line: 398, column: 23)
!3376 = !DILocation(line: 399, column: 46, scope: !3375)
!3377 = !DILocation(line: 399, column: 40, scope: !3375)
!3378 = !DILocation(line: 399, column: 53, scope: !3375)
!3379 = !DILocation(line: 399, column: 30, scope: !3375)
!3380 = !DILocation(line: 399, column: 9, scope: !3375)
!3381 = !DILocation(line: 399, column: 12, scope: !3375)
!3382 = !DILocation(line: 399, column: 26, scope: !3375)
!3383 = !DILocation(line: 400, column: 9, scope: !3375)
!3384 = !DILocation(line: 403, column: 49, scope: !3336)
!3385 = !DILocation(line: 403, column: 52, scope: !3336)
!3386 = !DILocation(line: 403, column: 47, scope: !3336)
!3387 = !DILocation(line: 403, column: 57, scope: !3336)
!3388 = !DILocation(line: 403, column: 25, scope: !3336)
!3389 = !DILocation(line: 403, column: 28, scope: !3336)
!3390 = !DILocation(line: 403, column: 62, scope: !3336)
!3391 = !DILocation(line: 403, column: 70, scope: !3336)
!3392 = !DILocation(line: 403, column: 5, scope: !3336)
!3393 = !DILocation(line: 403, column: 8, scope: !3336)
!3394 = !DILocation(line: 403, column: 22, scope: !3336)
!3395 = !DILocation(line: 404, column: 1, scope: !3336)
!3396 = !DILocation(line: 404, column: 1, scope: !3397)
!3397 = !DILexicalBlockFile(scope: !3336, file: !913, discriminator: 1)
!3398 = distinct !DISubprogram(name: "x8_get_orient_vlc", scope: !913, file: !913, line: 149, type: !3399, isLocal: true, isDefinition: true, scopeLine: 150, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!3399 = !DISubroutineType(types: !3400)
!3400 = !{!898, !978}
!3401 = !DILocalVariable(name: "x", arg: 1, scope: !3402, file: !3403, line: 66, type: !906)
!3402 = distinct !DISubprogram(name: "av_bswap32", scope: !3403, file: !3403, line: 66, type: !3404, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!3403 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3404 = !DISubroutineType(types: !3405)
!3405 = !{!906, !906}
!3406 = !DILocation(line: 66, column: 98, scope: !3402, inlinedAt: !3407)
!3407 = distinct !DILocation(line: 788, column: 601, scope: !3408, inlinedAt: !3417)
!3408 = !DILexicalBlockFile(scope: !3409, file: !1683, discriminator: 11)
!3409 = distinct !DILexicalBlock(scope: !3410, file: !1683, line: 788, column: 490)
!3410 = distinct !DILexicalBlock(scope: !3411, file: !1683, line: 788, column: 466)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !1683, line: 788, column: 154)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !1683, line: 788, column: 130)
!3413 = distinct !DILexicalBlock(scope: !3414, file: !1683, line: 788, column: 8)
!3414 = distinct !DISubprogram(name: "get_vlc2", scope: !1683, file: !1683, line: 762, type: !3415, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!3415 = !DISubroutineType(types: !3416)
!3416 = !{!898, !1681, !939, !898, !898}
!3417 = distinct !DILocation(line: 156, column: 12, scope: !3398)
!3418 = !DILocation(line: 66, column: 98, scope: !3402, inlinedAt: !3419)
!3419 = distinct !DILocation(line: 788, column: 259, scope: !3420, inlinedAt: !3417)
!3420 = !DILexicalBlockFile(scope: !3411, file: !1683, discriminator: 6)
!3421 = !DILocation(line: 66, column: 98, scope: !3402, inlinedAt: !3422)
!3422 = distinct !DILocation(line: 786, column: 16, scope: !3414, inlinedAt: !3417)
!3423 = !DILocalVariable(name: "s", arg: 1, scope: !3414, file: !1683, line: 762, type: !1681)
!3424 = !DILocation(line: 762, column: 74, scope: !3414, inlinedAt: !3417)
!3425 = !DILocalVariable(name: "table", arg: 2, scope: !3414, file: !1683, line: 762, type: !939)
!3426 = !DILocation(line: 762, column: 87, scope: !3414, inlinedAt: !3417)
!3427 = !DILocalVariable(name: "bits", arg: 3, scope: !3414, file: !1683, line: 763, type: !898)
!3428 = !DILocation(line: 763, column: 42, scope: !3414, inlinedAt: !3417)
!3429 = !DILocalVariable(name: "max_depth", arg: 4, scope: !3414, file: !1683, line: 763, type: !898)
!3430 = !DILocation(line: 763, column: 52, scope: !3414, inlinedAt: !3417)
!3431 = !DILocalVariable(name: "code", scope: !3414, file: !1683, line: 783, type: !898)
!3432 = !DILocation(line: 783, column: 9, scope: !3414, inlinedAt: !3417)
!3433 = !DILocalVariable(name: "re_index", scope: !3414, file: !1683, line: 785, type: !899)
!3434 = !DILocation(line: 785, column: 18, scope: !3414, inlinedAt: !3417)
!3435 = !DILocalVariable(name: "re_cache", scope: !3414, file: !1683, line: 785, type: !899)
!3436 = !DILocation(line: 785, column: 78, scope: !3414, inlinedAt: !3417)
!3437 = !DILocalVariable(name: "re_size_plus8", scope: !3414, file: !1683, line: 785, type: !899)
!3438 = !DILocation(line: 785, column: 101, scope: !3414, inlinedAt: !3417)
!3439 = !DILocalVariable(name: "n", scope: !3413, file: !1683, line: 788, type: !898)
!3440 = !DILocation(line: 788, column: 14, scope: !3413, inlinedAt: !3417)
!3441 = !DILocalVariable(name: "nb_bits", scope: !3413, file: !1683, line: 788, type: !898)
!3442 = !DILocation(line: 788, column: 17, scope: !3413, inlinedAt: !3417)
!3443 = !DILocalVariable(name: "index", scope: !3413, file: !1683, line: 788, type: !899)
!3444 = !DILocation(line: 788, column: 39, scope: !3413, inlinedAt: !3417)
!3445 = !DILocalVariable(name: "w", arg: 1, scope: !3398, file: !913, line: 149, type: !978)
!3446 = !DILocation(line: 149, column: 53, scope: !3398)
!3447 = !DILocation(line: 151, column: 10, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3398, file: !913, line: 151, column: 9)
!3449 = !DILocation(line: 151, column: 13, scope: !3448)
!3450 = !DILocation(line: 151, column: 9, scope: !3398)
!3451 = !DILocalVariable(name: "table_index", scope: !3452, file: !913, line: 152, type: !898)
!3452 = distinct !DILexicalBlock(scope: !3448, file: !913, line: 151, column: 27)
!3453 = !DILocation(line: 152, column: 13, scope: !3452)
!3454 = !DILocation(line: 152, column: 36, scope: !3452)
!3455 = !DILocation(line: 152, column: 39, scope: !3452)
!3456 = !DILocation(line: 152, column: 48, scope: !3452)
!3457 = !DILocation(line: 152, column: 51, scope: !3452)
!3458 = !DILocation(line: 152, column: 57, scope: !3452)
!3459 = !DILocation(line: 152, column: 45, scope: !3452)
!3460 = !DILocation(line: 152, column: 27, scope: !3452)
!3461 = !DILocation(line: 153, column: 56, scope: !3452)
!3462 = !DILocation(line: 153, column: 28, scope: !3452)
!3463 = !DILocation(line: 153, column: 41, scope: !3452)
!3464 = !DILocation(line: 153, column: 44, scope: !3452)
!3465 = !DILocation(line: 153, column: 50, scope: !3452)
!3466 = !DILocation(line: 153, column: 9, scope: !3452)
!3467 = !DILocation(line: 153, column: 12, scope: !3452)
!3468 = !DILocation(line: 153, column: 25, scope: !3452)
!3469 = !DILocation(line: 154, column: 5, scope: !3452)
!3470 = !DILocation(line: 156, column: 21, scope: !3398)
!3471 = !DILocation(line: 156, column: 24, scope: !3398)
!3472 = !DILocation(line: 156, column: 28, scope: !3398)
!3473 = !DILocation(line: 156, column: 31, scope: !3398)
!3474 = !DILocation(line: 156, column: 45, scope: !3398)
!3475 = !DILocation(line: 156, column: 12, scope: !3398)
!3476 = !DILocation(line: 785, column: 30, scope: !3414, inlinedAt: !3417)
!3477 = !DILocation(line: 785, column: 34, scope: !3414, inlinedAt: !3417)
!3478 = !DILocation(line: 785, column: 118, scope: !3414, inlinedAt: !3417)
!3479 = !DILocation(line: 785, column: 122, scope: !3414, inlinedAt: !3417)
!3480 = !DILocation(line: 786, column: 60, scope: !3414, inlinedAt: !3417)
!3481 = !DILocation(line: 786, column: 64, scope: !3414, inlinedAt: !3417)
!3482 = !DILocation(line: 786, column: 74, scope: !3414, inlinedAt: !3417)
!3483 = !DILocation(line: 786, column: 83, scope: !3414, inlinedAt: !3417)
!3484 = !DILocation(line: 786, column: 71, scope: !3414, inlinedAt: !3417)
!3485 = !DILocation(line: 786, column: 92, scope: !3414, inlinedAt: !3417)
!3486 = !DILocation(line: 786, column: 16, scope: !3414, inlinedAt: !3417)
!3487 = !DILocation(line: 68, column: 16, scope: !3402, inlinedAt: !3422)
!3488 = !DILocation(line: 68, column: 19, scope: !3402, inlinedAt: !3422)
!3489 = !DILocation(line: 68, column: 24, scope: !3402, inlinedAt: !3422)
!3490 = !DILocation(line: 68, column: 38, scope: !3402, inlinedAt: !3422)
!3491 = !DILocation(line: 68, column: 41, scope: !3402, inlinedAt: !3422)
!3492 = !DILocation(line: 68, column: 46, scope: !3402, inlinedAt: !3422)
!3493 = !DILocation(line: 68, column: 34, scope: !3402, inlinedAt: !3422)
!3494 = !DILocation(line: 68, column: 57, scope: !3402, inlinedAt: !3422)
!3495 = !DILocation(line: 68, column: 69, scope: !3402, inlinedAt: !3422)
!3496 = !DILocation(line: 68, column: 72, scope: !3402, inlinedAt: !3422)
!3497 = !DILocation(line: 68, column: 79, scope: !3402, inlinedAt: !3422)
!3498 = !DILocation(line: 68, column: 84, scope: !3402, inlinedAt: !3422)
!3499 = !DILocation(line: 68, column: 99, scope: !3402, inlinedAt: !3422)
!3500 = !DILocation(line: 68, column: 102, scope: !3402, inlinedAt: !3422)
!3501 = !DILocation(line: 68, column: 109, scope: !3402, inlinedAt: !3422)
!3502 = !DILocation(line: 68, column: 114, scope: !3402, inlinedAt: !3422)
!3503 = !DILocation(line: 68, column: 94, scope: !3402, inlinedAt: !3422)
!3504 = !DILocation(line: 68, column: 63, scope: !3402, inlinedAt: !3422)
!3505 = !DILocation(line: 786, column: 100, scope: !3414, inlinedAt: !3417)
!3506 = !DILocation(line: 786, column: 109, scope: !3414, inlinedAt: !3417)
!3507 = !DILocation(line: 786, column: 96, scope: !3414, inlinedAt: !3417)
!3508 = !DILocation(line: 786, column: 14, scope: !3414, inlinedAt: !3417)
!3509 = !DILocation(line: 788, column: 64, scope: !3510, inlinedAt: !3417)
!3510 = !DILexicalBlockFile(scope: !3413, file: !1683, discriminator: 1)
!3511 = !DILocation(line: 788, column: 74, scope: !3510, inlinedAt: !3417)
!3512 = !DILocation(line: 788, column: 54, scope: !3510, inlinedAt: !3417)
!3513 = !DILocation(line: 788, column: 52, scope: !3510, inlinedAt: !3417)
!3514 = !DILocation(line: 788, column: 94, scope: !3510, inlinedAt: !3417)
!3515 = !DILocation(line: 788, column: 88, scope: !3510, inlinedAt: !3417)
!3516 = !DILocation(line: 788, column: 86, scope: !3510, inlinedAt: !3417)
!3517 = !DILocation(line: 788, column: 115, scope: !3510, inlinedAt: !3417)
!3518 = !DILocation(line: 788, column: 109, scope: !3510, inlinedAt: !3417)
!3519 = !DILocation(line: 788, column: 107, scope: !3510, inlinedAt: !3417)
!3520 = !DILocation(line: 788, column: 130, scope: !3510, inlinedAt: !3417)
!3521 = !DILocation(line: 788, column: 140, scope: !3510, inlinedAt: !3417)
!3522 = !DILocation(line: 788, column: 144, scope: !3510, inlinedAt: !3417)
!3523 = !DILocation(line: 788, column: 147, scope: !3524, inlinedAt: !3417)
!3524 = !DILexicalBlockFile(scope: !3412, file: !1683, discriminator: 2)
!3525 = !DILocation(line: 788, column: 149, scope: !3524, inlinedAt: !3417)
!3526 = !DILocation(line: 788, column: 130, scope: !3524, inlinedAt: !3417)
!3527 = !DILocation(line: 788, column: 169, scope: !3528, inlinedAt: !3417)
!3528 = !DILexicalBlockFile(scope: !3411, file: !1683, discriminator: 3)
!3529 = !DILocation(line: 788, column: 187, scope: !3528, inlinedAt: !3417)
!3530 = !DILocation(line: 788, column: 199, scope: !3528, inlinedAt: !3417)
!3531 = !DILocation(line: 788, column: 196, scope: !3528, inlinedAt: !3417)
!3532 = !DILocation(line: 788, column: 184, scope: !3528, inlinedAt: !3417)
!3533 = !DILocation(line: 788, column: 168, scope: !3528, inlinedAt: !3417)
!3534 = !DILocation(line: 788, column: 209, scope: !3535, inlinedAt: !3417)
!3535 = !DILexicalBlockFile(scope: !3411, file: !1683, discriminator: 4)
!3536 = !DILocation(line: 788, column: 221, scope: !3535, inlinedAt: !3417)
!3537 = !DILocation(line: 788, column: 218, scope: !3535, inlinedAt: !3417)
!3538 = !DILocation(line: 788, column: 168, scope: !3535, inlinedAt: !3417)
!3539 = !DILocation(line: 788, column: 231, scope: !3540, inlinedAt: !3417)
!3540 = !DILexicalBlockFile(scope: !3411, file: !1683, discriminator: 5)
!3541 = !DILocation(line: 788, column: 168, scope: !3540, inlinedAt: !3417)
!3542 = !DILocation(line: 788, column: 168, scope: !3420, inlinedAt: !3417)
!3543 = !DILocation(line: 788, column: 165, scope: !3420, inlinedAt: !3417)
!3544 = !DILocation(line: 788, column: 303, scope: !3420, inlinedAt: !3417)
!3545 = !DILocation(line: 788, column: 307, scope: !3420, inlinedAt: !3417)
!3546 = !DILocation(line: 788, column: 317, scope: !3420, inlinedAt: !3417)
!3547 = !DILocation(line: 788, column: 326, scope: !3420, inlinedAt: !3417)
!3548 = !DILocation(line: 788, column: 314, scope: !3420, inlinedAt: !3417)
!3549 = !DILocation(line: 788, column: 335, scope: !3420, inlinedAt: !3417)
!3550 = !DILocation(line: 788, column: 259, scope: !3420, inlinedAt: !3417)
!3551 = !DILocation(line: 68, column: 16, scope: !3402, inlinedAt: !3419)
!3552 = !DILocation(line: 68, column: 19, scope: !3402, inlinedAt: !3419)
!3553 = !DILocation(line: 68, column: 24, scope: !3402, inlinedAt: !3419)
!3554 = !DILocation(line: 68, column: 38, scope: !3402, inlinedAt: !3419)
!3555 = !DILocation(line: 68, column: 41, scope: !3402, inlinedAt: !3419)
!3556 = !DILocation(line: 68, column: 46, scope: !3402, inlinedAt: !3419)
!3557 = !DILocation(line: 68, column: 34, scope: !3402, inlinedAt: !3419)
!3558 = !DILocation(line: 68, column: 57, scope: !3402, inlinedAt: !3419)
!3559 = !DILocation(line: 68, column: 69, scope: !3402, inlinedAt: !3419)
!3560 = !DILocation(line: 68, column: 72, scope: !3402, inlinedAt: !3419)
!3561 = !DILocation(line: 68, column: 79, scope: !3402, inlinedAt: !3419)
!3562 = !DILocation(line: 68, column: 84, scope: !3402, inlinedAt: !3419)
!3563 = !DILocation(line: 68, column: 99, scope: !3402, inlinedAt: !3419)
!3564 = !DILocation(line: 68, column: 102, scope: !3402, inlinedAt: !3419)
!3565 = !DILocation(line: 68, column: 109, scope: !3402, inlinedAt: !3419)
!3566 = !DILocation(line: 68, column: 114, scope: !3402, inlinedAt: !3419)
!3567 = !DILocation(line: 68, column: 94, scope: !3402, inlinedAt: !3419)
!3568 = !DILocation(line: 68, column: 63, scope: !3402, inlinedAt: !3419)
!3569 = !DILocation(line: 788, column: 343, scope: !3420, inlinedAt: !3417)
!3570 = !DILocation(line: 788, column: 352, scope: !3420, inlinedAt: !3417)
!3571 = !DILocation(line: 788, column: 339, scope: !3420, inlinedAt: !3417)
!3572 = !DILocation(line: 788, column: 257, scope: !3420, inlinedAt: !3417)
!3573 = !DILocation(line: 788, column: 369, scope: !3420, inlinedAt: !3417)
!3574 = !DILocation(line: 788, column: 368, scope: !3420, inlinedAt: !3417)
!3575 = !DILocation(line: 788, column: 366, scope: !3420, inlinedAt: !3417)
!3576 = !DILocation(line: 788, column: 390, scope: !3420, inlinedAt: !3417)
!3577 = !DILocation(line: 788, column: 400, scope: !3420, inlinedAt: !3417)
!3578 = !DILocation(line: 788, column: 380, scope: !3579, inlinedAt: !3417)
!3579 = !DILexicalBlockFile(scope: !3420, file: !1683, discriminator: 19)
!3580 = !DILocation(line: 788, column: 411, scope: !3420, inlinedAt: !3417)
!3581 = !DILocation(line: 788, column: 409, scope: !3420, inlinedAt: !3417)
!3582 = !DILocation(line: 788, column: 378, scope: !3420, inlinedAt: !3417)
!3583 = !DILocation(line: 788, column: 430, scope: !3420, inlinedAt: !3417)
!3584 = !DILocation(line: 788, column: 424, scope: !3420, inlinedAt: !3417)
!3585 = !DILocation(line: 788, column: 422, scope: !3420, inlinedAt: !3417)
!3586 = !DILocation(line: 788, column: 451, scope: !3420, inlinedAt: !3417)
!3587 = !DILocation(line: 788, column: 445, scope: !3420, inlinedAt: !3417)
!3588 = !DILocation(line: 788, column: 443, scope: !3420, inlinedAt: !3417)
!3589 = !DILocation(line: 788, column: 466, scope: !3420, inlinedAt: !3417)
!3590 = !DILocation(line: 788, column: 476, scope: !3420, inlinedAt: !3417)
!3591 = !DILocation(line: 788, column: 480, scope: !3420, inlinedAt: !3417)
!3592 = !DILocation(line: 788, column: 483, scope: !3593, inlinedAt: !3417)
!3593 = !DILexicalBlockFile(scope: !3410, file: !1683, discriminator: 7)
!3594 = !DILocation(line: 788, column: 485, scope: !3593, inlinedAt: !3417)
!3595 = !DILocation(line: 788, column: 466, scope: !3593, inlinedAt: !3417)
!3596 = !DILocation(line: 788, column: 505, scope: !3597, inlinedAt: !3417)
!3597 = !DILexicalBlockFile(scope: !3409, file: !1683, discriminator: 8)
!3598 = !DILocation(line: 788, column: 523, scope: !3597, inlinedAt: !3417)
!3599 = !DILocation(line: 788, column: 535, scope: !3597, inlinedAt: !3417)
!3600 = !DILocation(line: 788, column: 532, scope: !3597, inlinedAt: !3417)
!3601 = !DILocation(line: 788, column: 520, scope: !3597, inlinedAt: !3417)
!3602 = !DILocation(line: 788, column: 504, scope: !3597, inlinedAt: !3417)
!3603 = !DILocation(line: 788, column: 548, scope: !3604, inlinedAt: !3417)
!3604 = !DILexicalBlockFile(scope: !3409, file: !1683, discriminator: 9)
!3605 = !DILocation(line: 788, column: 560, scope: !3604, inlinedAt: !3417)
!3606 = !DILocation(line: 788, column: 557, scope: !3604, inlinedAt: !3417)
!3607 = !DILocation(line: 788, column: 504, scope: !3604, inlinedAt: !3417)
!3608 = !DILocation(line: 788, column: 573, scope: !3609, inlinedAt: !3417)
!3609 = !DILexicalBlockFile(scope: !3409, file: !1683, discriminator: 10)
!3610 = !DILocation(line: 788, column: 504, scope: !3609, inlinedAt: !3417)
!3611 = !DILocation(line: 788, column: 504, scope: !3408, inlinedAt: !3417)
!3612 = !DILocation(line: 788, column: 501, scope: !3408, inlinedAt: !3417)
!3613 = !DILocation(line: 788, column: 645, scope: !3408, inlinedAt: !3417)
!3614 = !DILocation(line: 788, column: 649, scope: !3408, inlinedAt: !3417)
!3615 = !DILocation(line: 788, column: 659, scope: !3408, inlinedAt: !3417)
!3616 = !DILocation(line: 788, column: 668, scope: !3408, inlinedAt: !3417)
!3617 = !DILocation(line: 788, column: 656, scope: !3408, inlinedAt: !3417)
!3618 = !DILocation(line: 788, column: 677, scope: !3408, inlinedAt: !3417)
!3619 = !DILocation(line: 788, column: 601, scope: !3408, inlinedAt: !3417)
!3620 = !DILocation(line: 68, column: 16, scope: !3402, inlinedAt: !3407)
!3621 = !DILocation(line: 68, column: 19, scope: !3402, inlinedAt: !3407)
!3622 = !DILocation(line: 68, column: 24, scope: !3402, inlinedAt: !3407)
!3623 = !DILocation(line: 68, column: 38, scope: !3402, inlinedAt: !3407)
!3624 = !DILocation(line: 68, column: 41, scope: !3402, inlinedAt: !3407)
!3625 = !DILocation(line: 68, column: 46, scope: !3402, inlinedAt: !3407)
!3626 = !DILocation(line: 68, column: 34, scope: !3402, inlinedAt: !3407)
!3627 = !DILocation(line: 68, column: 57, scope: !3402, inlinedAt: !3407)
!3628 = !DILocation(line: 68, column: 69, scope: !3402, inlinedAt: !3407)
!3629 = !DILocation(line: 68, column: 72, scope: !3402, inlinedAt: !3407)
!3630 = !DILocation(line: 68, column: 79, scope: !3402, inlinedAt: !3407)
!3631 = !DILocation(line: 68, column: 84, scope: !3402, inlinedAt: !3407)
!3632 = !DILocation(line: 68, column: 99, scope: !3402, inlinedAt: !3407)
!3633 = !DILocation(line: 68, column: 102, scope: !3402, inlinedAt: !3407)
!3634 = !DILocation(line: 68, column: 109, scope: !3402, inlinedAt: !3407)
!3635 = !DILocation(line: 68, column: 114, scope: !3402, inlinedAt: !3407)
!3636 = !DILocation(line: 68, column: 94, scope: !3402, inlinedAt: !3407)
!3637 = !DILocation(line: 68, column: 63, scope: !3402, inlinedAt: !3407)
!3638 = !DILocation(line: 788, column: 685, scope: !3408, inlinedAt: !3417)
!3639 = !DILocation(line: 788, column: 694, scope: !3408, inlinedAt: !3417)
!3640 = !DILocation(line: 788, column: 681, scope: !3408, inlinedAt: !3417)
!3641 = !DILocation(line: 788, column: 599, scope: !3408, inlinedAt: !3417)
!3642 = !DILocation(line: 788, column: 711, scope: !3408, inlinedAt: !3417)
!3643 = !DILocation(line: 788, column: 710, scope: !3408, inlinedAt: !3417)
!3644 = !DILocation(line: 788, column: 708, scope: !3408, inlinedAt: !3417)
!3645 = !DILocation(line: 788, column: 732, scope: !3408, inlinedAt: !3417)
!3646 = !DILocation(line: 788, column: 742, scope: !3408, inlinedAt: !3417)
!3647 = !DILocation(line: 788, column: 722, scope: !3648, inlinedAt: !3417)
!3648 = !DILexicalBlockFile(scope: !3408, file: !1683, discriminator: 20)
!3649 = !DILocation(line: 788, column: 753, scope: !3408, inlinedAt: !3417)
!3650 = !DILocation(line: 788, column: 751, scope: !3408, inlinedAt: !3417)
!3651 = !DILocation(line: 788, column: 720, scope: !3408, inlinedAt: !3417)
!3652 = !DILocation(line: 788, column: 772, scope: !3408, inlinedAt: !3417)
!3653 = !DILocation(line: 788, column: 766, scope: !3408, inlinedAt: !3417)
!3654 = !DILocation(line: 788, column: 764, scope: !3408, inlinedAt: !3417)
!3655 = !DILocation(line: 788, column: 793, scope: !3408, inlinedAt: !3417)
!3656 = !DILocation(line: 788, column: 787, scope: !3408, inlinedAt: !3417)
!3657 = !DILocation(line: 788, column: 785, scope: !3408, inlinedAt: !3417)
!3658 = !DILocation(line: 788, column: 804, scope: !3408, inlinedAt: !3417)
!3659 = !DILocation(line: 788, column: 806, scope: !3660, inlinedAt: !3417)
!3660 = !DILexicalBlockFile(scope: !3411, file: !1683, discriminator: 12)
!3661 = !DILocation(line: 788, column: 827, scope: !3662, inlinedAt: !3417)
!3662 = !DILexicalBlockFile(scope: !3663, file: !1683, discriminator: 14)
!3663 = distinct !DILexicalBlock(scope: !3413, file: !1683, line: 788, column: 811)
!3664 = !DILocation(line: 788, column: 822, scope: !3662, inlinedAt: !3417)
!3665 = !DILocation(line: 788, column: 844, scope: !3662, inlinedAt: !3417)
!3666 = !DILocation(line: 788, column: 862, scope: !3662, inlinedAt: !3417)
!3667 = !DILocation(line: 788, column: 874, scope: !3662, inlinedAt: !3417)
!3668 = !DILocation(line: 788, column: 871, scope: !3662, inlinedAt: !3417)
!3669 = !DILocation(line: 788, column: 859, scope: !3662, inlinedAt: !3417)
!3670 = !DILocation(line: 788, column: 843, scope: !3662, inlinedAt: !3417)
!3671 = !DILocation(line: 788, column: 881, scope: !3672, inlinedAt: !3417)
!3672 = !DILexicalBlockFile(scope: !3663, file: !1683, discriminator: 15)
!3673 = !DILocation(line: 788, column: 893, scope: !3672, inlinedAt: !3417)
!3674 = !DILocation(line: 788, column: 890, scope: !3672, inlinedAt: !3417)
!3675 = !DILocation(line: 788, column: 843, scope: !3672, inlinedAt: !3417)
!3676 = !DILocation(line: 788, column: 900, scope: !3677, inlinedAt: !3417)
!3677 = !DILexicalBlockFile(scope: !3663, file: !1683, discriminator: 16)
!3678 = !DILocation(line: 788, column: 843, scope: !3677, inlinedAt: !3417)
!3679 = !DILocation(line: 788, column: 843, scope: !3680, inlinedAt: !3417)
!3680 = !DILexicalBlockFile(scope: !3663, file: !1683, discriminator: 17)
!3681 = !DILocation(line: 788, column: 840, scope: !3680, inlinedAt: !3417)
!3682 = !DILocation(line: 790, column: 18, scope: !3414, inlinedAt: !3417)
!3683 = !DILocation(line: 790, column: 6, scope: !3414, inlinedAt: !3417)
!3684 = !DILocation(line: 790, column: 10, scope: !3414, inlinedAt: !3417)
!3685 = !DILocation(line: 790, column: 16, scope: !3414, inlinedAt: !3417)
!3686 = !DILocation(line: 792, column: 12, scope: !3414, inlinedAt: !3417)
!3687 = !DILocation(line: 156, column: 5, scope: !3398)
!3688 = distinct !DISubprogram(name: "get_bits", scope: !1683, file: !1683, line: 381, type: !3689, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{!899, !1681, !898}
!3691 = !DILocation(line: 66, column: 98, scope: !3402, inlinedAt: !3692)
!3692 = distinct !DILocation(line: 401, column: 16, scope: !3688)
!3693 = !DILocalVariable(name: "s", arg: 1, scope: !3688, file: !1683, line: 381, type: !1681)
!3694 = !DILocation(line: 381, column: 52, scope: !3688)
!3695 = !DILocalVariable(name: "n", arg: 2, scope: !3688, file: !1683, line: 381, type: !898)
!3696 = !DILocation(line: 381, column: 59, scope: !3688)
!3697 = !DILocalVariable(name: "tmp", scope: !3688, file: !1683, line: 383, type: !898)
!3698 = !DILocation(line: 383, column: 18, scope: !3688)
!3699 = !DILocalVariable(name: "re_index", scope: !3688, file: !1683, line: 399, type: !899)
!3700 = !DILocation(line: 399, column: 18, scope: !3688)
!3701 = !DILocation(line: 399, column: 30, scope: !3688)
!3702 = !DILocation(line: 399, column: 34, scope: !3688)
!3703 = !DILocalVariable(name: "re_cache", scope: !3688, file: !1683, line: 399, type: !899)
!3704 = !DILocation(line: 399, column: 78, scope: !3688)
!3705 = !DILocalVariable(name: "re_size_plus8", scope: !3688, file: !1683, line: 399, type: !899)
!3706 = !DILocation(line: 399, column: 101, scope: !3688)
!3707 = !DILocation(line: 399, column: 118, scope: !3688)
!3708 = !DILocation(line: 399, column: 122, scope: !3688)
!3709 = !DILocation(line: 401, column: 60, scope: !3688)
!3710 = !DILocation(line: 401, column: 64, scope: !3688)
!3711 = !DILocation(line: 401, column: 74, scope: !3688)
!3712 = !DILocation(line: 401, column: 83, scope: !3688)
!3713 = !DILocation(line: 401, column: 71, scope: !3688)
!3714 = !DILocation(line: 401, column: 92, scope: !3688)
!3715 = !DILocation(line: 401, column: 16, scope: !3688)
!3716 = !DILocation(line: 68, column: 16, scope: !3402, inlinedAt: !3692)
!3717 = !DILocation(line: 68, column: 19, scope: !3402, inlinedAt: !3692)
!3718 = !DILocation(line: 68, column: 24, scope: !3402, inlinedAt: !3692)
!3719 = !DILocation(line: 68, column: 38, scope: !3402, inlinedAt: !3692)
!3720 = !DILocation(line: 68, column: 41, scope: !3402, inlinedAt: !3692)
!3721 = !DILocation(line: 68, column: 46, scope: !3402, inlinedAt: !3692)
!3722 = !DILocation(line: 68, column: 34, scope: !3402, inlinedAt: !3692)
!3723 = !DILocation(line: 68, column: 57, scope: !3402, inlinedAt: !3692)
!3724 = !DILocation(line: 68, column: 69, scope: !3402, inlinedAt: !3692)
!3725 = !DILocation(line: 68, column: 72, scope: !3402, inlinedAt: !3692)
!3726 = !DILocation(line: 68, column: 79, scope: !3402, inlinedAt: !3692)
!3727 = !DILocation(line: 68, column: 84, scope: !3402, inlinedAt: !3692)
!3728 = !DILocation(line: 68, column: 99, scope: !3402, inlinedAt: !3692)
!3729 = !DILocation(line: 68, column: 102, scope: !3402, inlinedAt: !3692)
!3730 = !DILocation(line: 68, column: 109, scope: !3402, inlinedAt: !3692)
!3731 = !DILocation(line: 68, column: 114, scope: !3402, inlinedAt: !3692)
!3732 = !DILocation(line: 68, column: 94, scope: !3402, inlinedAt: !3692)
!3733 = !DILocation(line: 68, column: 63, scope: !3402, inlinedAt: !3692)
!3734 = !DILocation(line: 401, column: 100, scope: !3688)
!3735 = !DILocation(line: 401, column: 109, scope: !3688)
!3736 = !DILocation(line: 401, column: 96, scope: !3688)
!3737 = !DILocation(line: 401, column: 14, scope: !3688)
!3738 = !DILocation(line: 402, column: 21, scope: !3688)
!3739 = !DILocation(line: 402, column: 31, scope: !3688)
!3740 = !DILocation(line: 402, column: 11, scope: !3688)
!3741 = !DILocation(line: 402, column: 9, scope: !3688)
!3742 = !DILocation(line: 403, column: 18, scope: !3688)
!3743 = !DILocation(line: 403, column: 36, scope: !3688)
!3744 = !DILocation(line: 403, column: 48, scope: !3688)
!3745 = !DILocation(line: 403, column: 45, scope: !3688)
!3746 = !DILocation(line: 403, column: 33, scope: !3688)
!3747 = !DILocation(line: 403, column: 17, scope: !3688)
!3748 = !DILocation(line: 403, column: 55, scope: !3749)
!3749 = !DILexicalBlockFile(scope: !3688, file: !1683, discriminator: 1)
!3750 = !DILocation(line: 403, column: 67, scope: !3749)
!3751 = !DILocation(line: 403, column: 64, scope: !3749)
!3752 = !DILocation(line: 403, column: 17, scope: !3749)
!3753 = !DILocation(line: 403, column: 74, scope: !3754)
!3754 = !DILexicalBlockFile(scope: !3688, file: !1683, discriminator: 2)
!3755 = !DILocation(line: 403, column: 17, scope: !3754)
!3756 = !DILocation(line: 403, column: 17, scope: !3757)
!3757 = !DILexicalBlockFile(scope: !3688, file: !1683, discriminator: 3)
!3758 = !DILocation(line: 403, column: 14, scope: !3757)
!3759 = !DILocation(line: 404, column: 18, scope: !3688)
!3760 = !DILocation(line: 404, column: 6, scope: !3688)
!3761 = !DILocation(line: 404, column: 10, scope: !3688)
!3762 = !DILocation(line: 404, column: 16, scope: !3688)
!3763 = !DILocation(line: 406, column: 12, scope: !3688)
!3764 = !DILocation(line: 406, column: 5, scope: !3688)
!3765 = distinct !DISubprogram(name: "NEG_USR32", scope: !3766, file: !3766, line: 124, type: !3767, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!3766 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!906, !906, !1298}
!3769 = !DILocalVariable(name: "a", arg: 1, scope: !3765, file: !3766, line: 124, type: !906)
!3770 = !DILocation(line: 124, column: 43, scope: !3765)
!3771 = !DILocalVariable(name: "s", arg: 2, scope: !3765, file: !3766, line: 124, type: !1298)
!3772 = !DILocation(line: 124, column: 53, scope: !3765)
!3773 = !DILocation(line: 125, column: 5, scope: !3765)
!3774 = !DILocation(line: 127, column: 29, scope: !3765)
!3775 = !DILocation(line: 127, column: 28, scope: !3765)
!3776 = !DILocation(line: 127, column: 18, scope: !3765)
!3777 = !{i32 178809, i32 178823}
!3778 = !DILocation(line: 129, column: 12, scope: !3765)
!3779 = !DILocation(line: 129, column: 5, scope: !3765)
!3780 = distinct !DISubprogram(name: "x8_get_dc_rlf", scope: !913, file: !913, line: 286, type: !3781, isLocal: true, isDefinition: true, scopeLine: 288, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!898, !977, !1107, !1721, !1721}
!3783 = !DILocation(line: 66, column: 98, scope: !3402, inlinedAt: !3784)
!3784 = distinct !DILocation(line: 788, column: 601, scope: !3408, inlinedAt: !3785)
!3785 = distinct !DILocation(line: 298, column: 9, scope: !3780)
!3786 = !DILocation(line: 66, column: 98, scope: !3402, inlinedAt: !3787)
!3787 = distinct !DILocation(line: 788, column: 259, scope: !3420, inlinedAt: !3785)
!3788 = !DILocation(line: 66, column: 98, scope: !3402, inlinedAt: !3789)
!3789 = distinct !DILocation(line: 786, column: 16, scope: !3414, inlinedAt: !3785)
!3790 = !DILocation(line: 762, column: 74, scope: !3414, inlinedAt: !3785)
!3791 = !DILocation(line: 762, column: 87, scope: !3414, inlinedAt: !3785)
!3792 = !DILocation(line: 763, column: 42, scope: !3414, inlinedAt: !3785)
!3793 = !DILocation(line: 763, column: 52, scope: !3414, inlinedAt: !3785)
!3794 = !DILocation(line: 783, column: 9, scope: !3414, inlinedAt: !3785)
!3795 = !DILocation(line: 785, column: 18, scope: !3414, inlinedAt: !3785)
!3796 = !DILocation(line: 785, column: 78, scope: !3414, inlinedAt: !3785)
!3797 = !DILocation(line: 785, column: 101, scope: !3414, inlinedAt: !3785)
!3798 = !DILocation(line: 788, column: 14, scope: !3413, inlinedAt: !3785)
!3799 = !DILocation(line: 788, column: 17, scope: !3413, inlinedAt: !3785)
!3800 = !DILocation(line: 788, column: 39, scope: !3413, inlinedAt: !3785)
!3801 = !DILocalVariable(name: "w", arg: 1, scope: !3780, file: !913, line: 286, type: !977)
!3802 = !DILocation(line: 286, column: 48, scope: !3780)
!3803 = !DILocalVariable(name: "mode", arg: 2, scope: !3780, file: !913, line: 286, type: !1107)
!3804 = !DILocation(line: 286, column: 61, scope: !3780)
!3805 = !DILocalVariable(name: "level", arg: 3, scope: !3780, file: !913, line: 287, type: !1721)
!3806 = !DILocation(line: 287, column: 37, scope: !3780)
!3807 = !DILocalVariable(name: "final", arg: 4, scope: !3780, file: !913, line: 287, type: !1721)
!3808 = !DILocation(line: 287, column: 55, scope: !3780)
!3809 = !DILocalVariable(name: "i", scope: !3780, file: !913, line: 289, type: !898)
!3810 = !DILocation(line: 289, column: 9, scope: !3780)
!3811 = !DILocalVariable(name: "e", scope: !3780, file: !913, line: 289, type: !898)
!3812 = !DILocation(line: 289, column: 12, scope: !3780)
!3813 = !DILocalVariable(name: "c", scope: !3780, file: !913, line: 289, type: !898)
!3814 = !DILocation(line: 289, column: 15, scope: !3780)
!3815 = !DILocation(line: 292, column: 22, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3780, file: !913, line: 292, column: 9)
!3817 = !DILocation(line: 292, column: 10, scope: !3816)
!3818 = !DILocation(line: 292, column: 13, scope: !3816)
!3819 = !DILocation(line: 292, column: 9, scope: !3780)
!3820 = !DILocalVariable(name: "table_index", scope: !3821, file: !913, line: 293, type: !898)
!3821 = distinct !DILexicalBlock(scope: !3816, file: !913, line: 292, column: 29)
!3822 = !DILocation(line: 293, column: 13, scope: !3821)
!3823 = !DILocation(line: 293, column: 36, scope: !3821)
!3824 = !DILocation(line: 293, column: 39, scope: !3821)
!3825 = !DILocation(line: 293, column: 27, scope: !3821)
!3826 = !DILocation(line: 295, column: 54, scope: !3821)
!3827 = !DILocation(line: 295, column: 30, scope: !3821)
!3828 = !DILocation(line: 295, column: 39, scope: !3821)
!3829 = !DILocation(line: 295, column: 42, scope: !3821)
!3830 = !DILocation(line: 295, column: 48, scope: !3821)
!3831 = !DILocation(line: 295, column: 21, scope: !3821)
!3832 = !DILocation(line: 295, column: 9, scope: !3821)
!3833 = !DILocation(line: 295, column: 12, scope: !3821)
!3834 = !DILocation(line: 295, column: 27, scope: !3821)
!3835 = !DILocation(line: 296, column: 5, scope: !3821)
!3836 = !DILocation(line: 298, column: 18, scope: !3780)
!3837 = !DILocation(line: 298, column: 21, scope: !3780)
!3838 = !DILocation(line: 298, column: 37, scope: !3780)
!3839 = !DILocation(line: 298, column: 25, scope: !3780)
!3840 = !DILocation(line: 298, column: 28, scope: !3780)
!3841 = !DILocation(line: 298, column: 44, scope: !3780)
!3842 = !DILocation(line: 298, column: 9, scope: !3780)
!3843 = !DILocation(line: 785, column: 30, scope: !3414, inlinedAt: !3785)
!3844 = !DILocation(line: 785, column: 34, scope: !3414, inlinedAt: !3785)
!3845 = !DILocation(line: 785, column: 118, scope: !3414, inlinedAt: !3785)
!3846 = !DILocation(line: 785, column: 122, scope: !3414, inlinedAt: !3785)
!3847 = !DILocation(line: 786, column: 60, scope: !3414, inlinedAt: !3785)
!3848 = !DILocation(line: 786, column: 64, scope: !3414, inlinedAt: !3785)
!3849 = !DILocation(line: 786, column: 74, scope: !3414, inlinedAt: !3785)
!3850 = !DILocation(line: 786, column: 83, scope: !3414, inlinedAt: !3785)
!3851 = !DILocation(line: 786, column: 71, scope: !3414, inlinedAt: !3785)
!3852 = !DILocation(line: 786, column: 92, scope: !3414, inlinedAt: !3785)
!3853 = !DILocation(line: 786, column: 16, scope: !3414, inlinedAt: !3785)
!3854 = !DILocation(line: 68, column: 16, scope: !3402, inlinedAt: !3789)
!3855 = !DILocation(line: 68, column: 19, scope: !3402, inlinedAt: !3789)
!3856 = !DILocation(line: 68, column: 24, scope: !3402, inlinedAt: !3789)
!3857 = !DILocation(line: 68, column: 38, scope: !3402, inlinedAt: !3789)
!3858 = !DILocation(line: 68, column: 41, scope: !3402, inlinedAt: !3789)
!3859 = !DILocation(line: 68, column: 46, scope: !3402, inlinedAt: !3789)
!3860 = !DILocation(line: 68, column: 34, scope: !3402, inlinedAt: !3789)
!3861 = !DILocation(line: 68, column: 57, scope: !3402, inlinedAt: !3789)
!3862 = !DILocation(line: 68, column: 69, scope: !3402, inlinedAt: !3789)
!3863 = !DILocation(line: 68, column: 72, scope: !3402, inlinedAt: !3789)
!3864 = !DILocation(line: 68, column: 79, scope: !3402, inlinedAt: !3789)
!3865 = !DILocation(line: 68, column: 84, scope: !3402, inlinedAt: !3789)
!3866 = !DILocation(line: 68, column: 99, scope: !3402, inlinedAt: !3789)
!3867 = !DILocation(line: 68, column: 102, scope: !3402, inlinedAt: !3789)
!3868 = !DILocation(line: 68, column: 109, scope: !3402, inlinedAt: !3789)
!3869 = !DILocation(line: 68, column: 114, scope: !3402, inlinedAt: !3789)
!3870 = !DILocation(line: 68, column: 94, scope: !3402, inlinedAt: !3789)
!3871 = !DILocation(line: 68, column: 63, scope: !3402, inlinedAt: !3789)
!3872 = !DILocation(line: 786, column: 100, scope: !3414, inlinedAt: !3785)
!3873 = !DILocation(line: 786, column: 109, scope: !3414, inlinedAt: !3785)
!3874 = !DILocation(line: 786, column: 96, scope: !3414, inlinedAt: !3785)
!3875 = !DILocation(line: 786, column: 14, scope: !3414, inlinedAt: !3785)
!3876 = !DILocation(line: 788, column: 64, scope: !3510, inlinedAt: !3785)
!3877 = !DILocation(line: 788, column: 74, scope: !3510, inlinedAt: !3785)
!3878 = !DILocation(line: 788, column: 54, scope: !3510, inlinedAt: !3785)
!3879 = !DILocation(line: 788, column: 52, scope: !3510, inlinedAt: !3785)
!3880 = !DILocation(line: 788, column: 94, scope: !3510, inlinedAt: !3785)
!3881 = !DILocation(line: 788, column: 88, scope: !3510, inlinedAt: !3785)
!3882 = !DILocation(line: 788, column: 86, scope: !3510, inlinedAt: !3785)
!3883 = !DILocation(line: 788, column: 115, scope: !3510, inlinedAt: !3785)
!3884 = !DILocation(line: 788, column: 109, scope: !3510, inlinedAt: !3785)
!3885 = !DILocation(line: 788, column: 107, scope: !3510, inlinedAt: !3785)
!3886 = !DILocation(line: 788, column: 130, scope: !3510, inlinedAt: !3785)
!3887 = !DILocation(line: 788, column: 140, scope: !3510, inlinedAt: !3785)
!3888 = !DILocation(line: 788, column: 144, scope: !3510, inlinedAt: !3785)
!3889 = !DILocation(line: 788, column: 147, scope: !3524, inlinedAt: !3785)
!3890 = !DILocation(line: 788, column: 149, scope: !3524, inlinedAt: !3785)
!3891 = !DILocation(line: 788, column: 130, scope: !3524, inlinedAt: !3785)
!3892 = !DILocation(line: 788, column: 169, scope: !3528, inlinedAt: !3785)
!3893 = !DILocation(line: 788, column: 187, scope: !3528, inlinedAt: !3785)
!3894 = !DILocation(line: 788, column: 199, scope: !3528, inlinedAt: !3785)
!3895 = !DILocation(line: 788, column: 196, scope: !3528, inlinedAt: !3785)
!3896 = !DILocation(line: 788, column: 184, scope: !3528, inlinedAt: !3785)
!3897 = !DILocation(line: 788, column: 168, scope: !3528, inlinedAt: !3785)
!3898 = !DILocation(line: 788, column: 209, scope: !3535, inlinedAt: !3785)
!3899 = !DILocation(line: 788, column: 221, scope: !3535, inlinedAt: !3785)
!3900 = !DILocation(line: 788, column: 218, scope: !3535, inlinedAt: !3785)
!3901 = !DILocation(line: 788, column: 168, scope: !3535, inlinedAt: !3785)
!3902 = !DILocation(line: 788, column: 231, scope: !3540, inlinedAt: !3785)
!3903 = !DILocation(line: 788, column: 168, scope: !3540, inlinedAt: !3785)
!3904 = !DILocation(line: 788, column: 168, scope: !3420, inlinedAt: !3785)
!3905 = !DILocation(line: 788, column: 165, scope: !3420, inlinedAt: !3785)
!3906 = !DILocation(line: 788, column: 303, scope: !3420, inlinedAt: !3785)
!3907 = !DILocation(line: 788, column: 307, scope: !3420, inlinedAt: !3785)
!3908 = !DILocation(line: 788, column: 317, scope: !3420, inlinedAt: !3785)
!3909 = !DILocation(line: 788, column: 326, scope: !3420, inlinedAt: !3785)
!3910 = !DILocation(line: 788, column: 314, scope: !3420, inlinedAt: !3785)
!3911 = !DILocation(line: 788, column: 335, scope: !3420, inlinedAt: !3785)
!3912 = !DILocation(line: 788, column: 259, scope: !3420, inlinedAt: !3785)
!3913 = !DILocation(line: 68, column: 16, scope: !3402, inlinedAt: !3787)
!3914 = !DILocation(line: 68, column: 19, scope: !3402, inlinedAt: !3787)
!3915 = !DILocation(line: 68, column: 24, scope: !3402, inlinedAt: !3787)
!3916 = !DILocation(line: 68, column: 38, scope: !3402, inlinedAt: !3787)
!3917 = !DILocation(line: 68, column: 41, scope: !3402, inlinedAt: !3787)
!3918 = !DILocation(line: 68, column: 46, scope: !3402, inlinedAt: !3787)
!3919 = !DILocation(line: 68, column: 34, scope: !3402, inlinedAt: !3787)
!3920 = !DILocation(line: 68, column: 57, scope: !3402, inlinedAt: !3787)
!3921 = !DILocation(line: 68, column: 69, scope: !3402, inlinedAt: !3787)
!3922 = !DILocation(line: 68, column: 72, scope: !3402, inlinedAt: !3787)
!3923 = !DILocation(line: 68, column: 79, scope: !3402, inlinedAt: !3787)
!3924 = !DILocation(line: 68, column: 84, scope: !3402, inlinedAt: !3787)
!3925 = !DILocation(line: 68, column: 99, scope: !3402, inlinedAt: !3787)
!3926 = !DILocation(line: 68, column: 102, scope: !3402, inlinedAt: !3787)
!3927 = !DILocation(line: 68, column: 109, scope: !3402, inlinedAt: !3787)
!3928 = !DILocation(line: 68, column: 114, scope: !3402, inlinedAt: !3787)
!3929 = !DILocation(line: 68, column: 94, scope: !3402, inlinedAt: !3787)
!3930 = !DILocation(line: 68, column: 63, scope: !3402, inlinedAt: !3787)
!3931 = !DILocation(line: 788, column: 343, scope: !3420, inlinedAt: !3785)
!3932 = !DILocation(line: 788, column: 352, scope: !3420, inlinedAt: !3785)
!3933 = !DILocation(line: 788, column: 339, scope: !3420, inlinedAt: !3785)
!3934 = !DILocation(line: 788, column: 257, scope: !3420, inlinedAt: !3785)
!3935 = !DILocation(line: 788, column: 369, scope: !3420, inlinedAt: !3785)
!3936 = !DILocation(line: 788, column: 368, scope: !3420, inlinedAt: !3785)
!3937 = !DILocation(line: 788, column: 366, scope: !3420, inlinedAt: !3785)
!3938 = !DILocation(line: 788, column: 390, scope: !3420, inlinedAt: !3785)
!3939 = !DILocation(line: 788, column: 400, scope: !3420, inlinedAt: !3785)
!3940 = !DILocation(line: 788, column: 380, scope: !3579, inlinedAt: !3785)
!3941 = !DILocation(line: 788, column: 411, scope: !3420, inlinedAt: !3785)
!3942 = !DILocation(line: 788, column: 409, scope: !3420, inlinedAt: !3785)
!3943 = !DILocation(line: 788, column: 378, scope: !3420, inlinedAt: !3785)
!3944 = !DILocation(line: 788, column: 430, scope: !3420, inlinedAt: !3785)
!3945 = !DILocation(line: 788, column: 424, scope: !3420, inlinedAt: !3785)
!3946 = !DILocation(line: 788, column: 422, scope: !3420, inlinedAt: !3785)
!3947 = !DILocation(line: 788, column: 451, scope: !3420, inlinedAt: !3785)
!3948 = !DILocation(line: 788, column: 445, scope: !3420, inlinedAt: !3785)
!3949 = !DILocation(line: 788, column: 443, scope: !3420, inlinedAt: !3785)
!3950 = !DILocation(line: 788, column: 466, scope: !3420, inlinedAt: !3785)
!3951 = !DILocation(line: 788, column: 476, scope: !3420, inlinedAt: !3785)
!3952 = !DILocation(line: 788, column: 480, scope: !3420, inlinedAt: !3785)
!3953 = !DILocation(line: 788, column: 483, scope: !3593, inlinedAt: !3785)
!3954 = !DILocation(line: 788, column: 485, scope: !3593, inlinedAt: !3785)
!3955 = !DILocation(line: 788, column: 466, scope: !3593, inlinedAt: !3785)
!3956 = !DILocation(line: 788, column: 505, scope: !3597, inlinedAt: !3785)
!3957 = !DILocation(line: 788, column: 523, scope: !3597, inlinedAt: !3785)
!3958 = !DILocation(line: 788, column: 535, scope: !3597, inlinedAt: !3785)
!3959 = !DILocation(line: 788, column: 532, scope: !3597, inlinedAt: !3785)
!3960 = !DILocation(line: 788, column: 520, scope: !3597, inlinedAt: !3785)
!3961 = !DILocation(line: 788, column: 504, scope: !3597, inlinedAt: !3785)
!3962 = !DILocation(line: 788, column: 548, scope: !3604, inlinedAt: !3785)
!3963 = !DILocation(line: 788, column: 560, scope: !3604, inlinedAt: !3785)
!3964 = !DILocation(line: 788, column: 557, scope: !3604, inlinedAt: !3785)
!3965 = !DILocation(line: 788, column: 504, scope: !3604, inlinedAt: !3785)
!3966 = !DILocation(line: 788, column: 573, scope: !3609, inlinedAt: !3785)
!3967 = !DILocation(line: 788, column: 504, scope: !3609, inlinedAt: !3785)
!3968 = !DILocation(line: 788, column: 504, scope: !3408, inlinedAt: !3785)
!3969 = !DILocation(line: 788, column: 501, scope: !3408, inlinedAt: !3785)
!3970 = !DILocation(line: 788, column: 645, scope: !3408, inlinedAt: !3785)
!3971 = !DILocation(line: 788, column: 649, scope: !3408, inlinedAt: !3785)
!3972 = !DILocation(line: 788, column: 659, scope: !3408, inlinedAt: !3785)
!3973 = !DILocation(line: 788, column: 668, scope: !3408, inlinedAt: !3785)
!3974 = !DILocation(line: 788, column: 656, scope: !3408, inlinedAt: !3785)
!3975 = !DILocation(line: 788, column: 677, scope: !3408, inlinedAt: !3785)
!3976 = !DILocation(line: 788, column: 601, scope: !3408, inlinedAt: !3785)
!3977 = !DILocation(line: 68, column: 16, scope: !3402, inlinedAt: !3784)
!3978 = !DILocation(line: 68, column: 19, scope: !3402, inlinedAt: !3784)
!3979 = !DILocation(line: 68, column: 24, scope: !3402, inlinedAt: !3784)
!3980 = !DILocation(line: 68, column: 38, scope: !3402, inlinedAt: !3784)
!3981 = !DILocation(line: 68, column: 41, scope: !3402, inlinedAt: !3784)
!3982 = !DILocation(line: 68, column: 46, scope: !3402, inlinedAt: !3784)
!3983 = !DILocation(line: 68, column: 34, scope: !3402, inlinedAt: !3784)
!3984 = !DILocation(line: 68, column: 57, scope: !3402, inlinedAt: !3784)
!3985 = !DILocation(line: 68, column: 69, scope: !3402, inlinedAt: !3784)
!3986 = !DILocation(line: 68, column: 72, scope: !3402, inlinedAt: !3784)
!3987 = !DILocation(line: 68, column: 79, scope: !3402, inlinedAt: !3784)
!3988 = !DILocation(line: 68, column: 84, scope: !3402, inlinedAt: !3784)
!3989 = !DILocation(line: 68, column: 99, scope: !3402, inlinedAt: !3784)
!3990 = !DILocation(line: 68, column: 102, scope: !3402, inlinedAt: !3784)
!3991 = !DILocation(line: 68, column: 109, scope: !3402, inlinedAt: !3784)
!3992 = !DILocation(line: 68, column: 114, scope: !3402, inlinedAt: !3784)
!3993 = !DILocation(line: 68, column: 94, scope: !3402, inlinedAt: !3784)
!3994 = !DILocation(line: 68, column: 63, scope: !3402, inlinedAt: !3784)
!3995 = !DILocation(line: 788, column: 685, scope: !3408, inlinedAt: !3785)
!3996 = !DILocation(line: 788, column: 694, scope: !3408, inlinedAt: !3785)
!3997 = !DILocation(line: 788, column: 681, scope: !3408, inlinedAt: !3785)
!3998 = !DILocation(line: 788, column: 599, scope: !3408, inlinedAt: !3785)
!3999 = !DILocation(line: 788, column: 711, scope: !3408, inlinedAt: !3785)
!4000 = !DILocation(line: 788, column: 710, scope: !3408, inlinedAt: !3785)
!4001 = !DILocation(line: 788, column: 708, scope: !3408, inlinedAt: !3785)
!4002 = !DILocation(line: 788, column: 732, scope: !3408, inlinedAt: !3785)
!4003 = !DILocation(line: 788, column: 742, scope: !3408, inlinedAt: !3785)
!4004 = !DILocation(line: 788, column: 722, scope: !3648, inlinedAt: !3785)
!4005 = !DILocation(line: 788, column: 753, scope: !3408, inlinedAt: !3785)
!4006 = !DILocation(line: 788, column: 751, scope: !3408, inlinedAt: !3785)
!4007 = !DILocation(line: 788, column: 720, scope: !3408, inlinedAt: !3785)
!4008 = !DILocation(line: 788, column: 772, scope: !3408, inlinedAt: !3785)
!4009 = !DILocation(line: 788, column: 766, scope: !3408, inlinedAt: !3785)
!4010 = !DILocation(line: 788, column: 764, scope: !3408, inlinedAt: !3785)
!4011 = !DILocation(line: 788, column: 793, scope: !3408, inlinedAt: !3785)
!4012 = !DILocation(line: 788, column: 787, scope: !3408, inlinedAt: !3785)
!4013 = !DILocation(line: 788, column: 785, scope: !3408, inlinedAt: !3785)
!4014 = !DILocation(line: 788, column: 804, scope: !3408, inlinedAt: !3785)
!4015 = !DILocation(line: 788, column: 806, scope: !3660, inlinedAt: !3785)
!4016 = !DILocation(line: 788, column: 827, scope: !3662, inlinedAt: !3785)
!4017 = !DILocation(line: 788, column: 822, scope: !3662, inlinedAt: !3785)
!4018 = !DILocation(line: 788, column: 844, scope: !3662, inlinedAt: !3785)
!4019 = !DILocation(line: 788, column: 862, scope: !3662, inlinedAt: !3785)
!4020 = !DILocation(line: 788, column: 874, scope: !3662, inlinedAt: !3785)
!4021 = !DILocation(line: 788, column: 871, scope: !3662, inlinedAt: !3785)
!4022 = !DILocation(line: 788, column: 859, scope: !3662, inlinedAt: !3785)
!4023 = !DILocation(line: 788, column: 843, scope: !3662, inlinedAt: !3785)
!4024 = !DILocation(line: 788, column: 881, scope: !3672, inlinedAt: !3785)
!4025 = !DILocation(line: 788, column: 893, scope: !3672, inlinedAt: !3785)
!4026 = !DILocation(line: 788, column: 890, scope: !3672, inlinedAt: !3785)
!4027 = !DILocation(line: 788, column: 843, scope: !3672, inlinedAt: !3785)
!4028 = !DILocation(line: 788, column: 900, scope: !3677, inlinedAt: !3785)
!4029 = !DILocation(line: 788, column: 843, scope: !3677, inlinedAt: !3785)
!4030 = !DILocation(line: 788, column: 843, scope: !3680, inlinedAt: !3785)
!4031 = !DILocation(line: 788, column: 840, scope: !3680, inlinedAt: !3785)
!4032 = !DILocation(line: 790, column: 18, scope: !3414, inlinedAt: !3785)
!4033 = !DILocation(line: 790, column: 6, scope: !3414, inlinedAt: !3785)
!4034 = !DILocation(line: 790, column: 10, scope: !3414, inlinedAt: !3785)
!4035 = !DILocation(line: 790, column: 16, scope: !3414, inlinedAt: !3785)
!4036 = !DILocation(line: 792, column: 12, scope: !3414, inlinedAt: !3785)
!4037 = !DILocation(line: 298, column: 7, scope: !3780)
!4038 = !DILocation(line: 301, column: 9, scope: !3780)
!4039 = !DILocation(line: 301, column: 11, scope: !3780)
!4040 = !DILocation(line: 301, column: 7, scope: !3780)
!4041 = !DILocation(line: 302, column: 14, scope: !3780)
!4042 = !DILocation(line: 302, column: 6, scope: !3780)
!4043 = !DILocation(line: 302, column: 12, scope: !3780)
!4044 = !DILocation(line: 303, column: 15, scope: !3780)
!4045 = !DILocation(line: 303, column: 13, scope: !3780)
!4046 = !DILocation(line: 303, column: 7, scope: !3780)
!4047 = !DILocation(line: 305, column: 9, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !3780, file: !913, line: 305, column: 9)
!4049 = !DILocation(line: 305, column: 11, scope: !4048)
!4050 = !DILocation(line: 305, column: 9, scope: !3780)
!4051 = !DILocation(line: 306, column: 10, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4048, file: !913, line: 305, column: 17)
!4053 = !DILocation(line: 306, column: 16, scope: !4052)
!4054 = !DILocation(line: 307, column: 17, scope: !4052)
!4055 = !DILocation(line: 307, column: 16, scope: !4052)
!4056 = !DILocation(line: 307, column: 9, scope: !4052)
!4057 = !DILocation(line: 309, column: 10, scope: !3780)
!4058 = !DILocation(line: 309, column: 12, scope: !3780)
!4059 = !DILocation(line: 309, column: 17, scope: !3780)
!4060 = !DILocation(line: 309, column: 7, scope: !3780)
!4061 = !DILocation(line: 310, column: 10, scope: !3780)
!4062 = !DILocation(line: 310, column: 12, scope: !3780)
!4063 = !DILocation(line: 310, column: 7, scope: !3780)
!4064 = !DILocation(line: 312, column: 18, scope: !3780)
!4065 = !DILocation(line: 312, column: 21, scope: !3780)
!4066 = !DILocation(line: 312, column: 25, scope: !3780)
!4067 = !DILocation(line: 312, column: 9, scope: !3780)
!4068 = !DILocation(line: 312, column: 7, scope: !3780)
!4069 = !DILocation(line: 313, column: 25, scope: !3780)
!4070 = !DILocation(line: 313, column: 9, scope: !3780)
!4071 = !DILocation(line: 313, column: 31, scope: !3780)
!4072 = !DILocation(line: 313, column: 33, scope: !3780)
!4073 = !DILocation(line: 313, column: 28, scope: !3780)
!4074 = !DILocation(line: 313, column: 7, scope: !3780)
!4075 = !DILocation(line: 315, column: 11, scope: !3780)
!4076 = !DILocation(line: 315, column: 13, scope: !3780)
!4077 = !DILocation(line: 315, column: 9, scope: !3780)
!4078 = !DILocation(line: 315, column: 7, scope: !3780)
!4079 = !DILocation(line: 316, column: 15, scope: !3780)
!4080 = !DILocation(line: 316, column: 19, scope: !3780)
!4081 = !DILocation(line: 316, column: 17, scope: !3780)
!4082 = !DILocation(line: 316, column: 24, scope: !3780)
!4083 = !DILocation(line: 316, column: 22, scope: !3780)
!4084 = !DILocation(line: 316, column: 6, scope: !3780)
!4085 = !DILocation(line: 316, column: 12, scope: !3780)
!4086 = !DILocation(line: 317, column: 5, scope: !3780)
!4087 = !DILocation(line: 318, column: 1, scope: !3780)
!4088 = distinct !DISubprogram(name: "x8_select_ac_table", scope: !913, file: !913, line: 134, type: !4089, isLocal: true, isDefinition: true, scopeLine: 135, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!4089 = !DISubroutineType(types: !4090)
!4090 = !{null, !977, !898}
!4091 = !DILocalVariable(name: "w", arg: 1, scope: !4088, file: !913, line: 134, type: !977)
!4092 = !DILocation(line: 134, column: 61, scope: !4088)
!4093 = !DILocalVariable(name: "mode", arg: 2, scope: !4088, file: !913, line: 134, type: !898)
!4094 = !DILocation(line: 134, column: 68, scope: !4088)
!4095 = !DILocalVariable(name: "table_index", scope: !4088, file: !913, line: 136, type: !898)
!4096 = !DILocation(line: 136, column: 9, scope: !4088)
!4097 = !DILocation(line: 140, column: 21, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4088, file: !913, line: 140, column: 9)
!4099 = !DILocation(line: 140, column: 9, scope: !4098)
!4100 = !DILocation(line: 140, column: 12, scope: !4098)
!4101 = !DILocation(line: 140, column: 9, scope: !4088)
!4102 = !DILocation(line: 141, column: 9, scope: !4098)
!4103 = !DILocation(line: 143, column: 28, scope: !4088)
!4104 = !DILocation(line: 143, column: 31, scope: !4088)
!4105 = !DILocation(line: 143, column: 19, scope: !4088)
!4106 = !DILocation(line: 143, column: 17, scope: !4088)
!4107 = !DILocation(line: 145, column: 61, scope: !4088)
!4108 = !DILocation(line: 145, column: 26, scope: !4088)
!4109 = !DILocation(line: 145, column: 50, scope: !4088)
!4110 = !DILocation(line: 145, column: 55, scope: !4088)
!4111 = !DILocation(line: 145, column: 35, scope: !4088)
!4112 = !DILocation(line: 145, column: 38, scope: !4088)
!4113 = !DILocation(line: 145, column: 44, scope: !4088)
!4114 = !DILocation(line: 145, column: 17, scope: !4088)
!4115 = !DILocation(line: 145, column: 5, scope: !4088)
!4116 = !DILocation(line: 145, column: 8, scope: !4088)
!4117 = !DILocation(line: 145, column: 23, scope: !4088)
!4118 = !DILocation(line: 147, column: 1, scope: !4088)
!4119 = !DILocation(line: 147, column: 1, scope: !4120)
!4120 = !DILexicalBlockFile(scope: !4088, file: !913, discriminator: 1)
!4121 = !DILocation(line: 66, column: 98, scope: !3402, inlinedAt: !4122)
!4122 = distinct !DILocation(line: 788, column: 601, scope: !3408, inlinedAt: !4123)
!4123 = distinct !DILocation(line: 212, column: 9, scope: !1718)
!4124 = !DILocation(line: 66, column: 98, scope: !3402, inlinedAt: !4125)
!4125 = distinct !DILocation(line: 788, column: 259, scope: !3420, inlinedAt: !4123)
!4126 = !DILocation(line: 66, column: 98, scope: !3402, inlinedAt: !4127)
!4127 = distinct !DILocation(line: 786, column: 16, scope: !3414, inlinedAt: !4123)
!4128 = !DILocation(line: 762, column: 74, scope: !3414, inlinedAt: !4123)
!4129 = !DILocation(line: 762, column: 87, scope: !3414, inlinedAt: !4123)
!4130 = !DILocation(line: 763, column: 42, scope: !3414, inlinedAt: !4123)
!4131 = !DILocation(line: 763, column: 52, scope: !3414, inlinedAt: !4123)
!4132 = !DILocation(line: 783, column: 9, scope: !3414, inlinedAt: !4123)
!4133 = !DILocation(line: 785, column: 18, scope: !3414, inlinedAt: !4123)
!4134 = !DILocation(line: 785, column: 78, scope: !3414, inlinedAt: !4123)
!4135 = !DILocation(line: 785, column: 101, scope: !3414, inlinedAt: !4123)
!4136 = !DILocation(line: 788, column: 14, scope: !3413, inlinedAt: !4123)
!4137 = !DILocation(line: 788, column: 17, scope: !3413, inlinedAt: !4123)
!4138 = !DILocation(line: 788, column: 39, scope: !3413, inlinedAt: !4123)
!4139 = !DILocalVariable(name: "w", arg: 1, scope: !1718, file: !913, line: 206, type: !977)
!4140 = !DILocation(line: 206, column: 49, scope: !1718)
!4141 = !DILocalVariable(name: "mode", arg: 2, scope: !1718, file: !913, line: 206, type: !1107)
!4142 = !DILocation(line: 206, column: 62, scope: !1718)
!4143 = !DILocalVariable(name: "run", arg: 3, scope: !1718, file: !913, line: 207, type: !1721)
!4144 = !DILocation(line: 207, column: 38, scope: !1718)
!4145 = !DILocalVariable(name: "level", arg: 4, scope: !1718, file: !913, line: 207, type: !1721)
!4146 = !DILocation(line: 207, column: 54, scope: !1718)
!4147 = !DILocalVariable(name: "final", arg: 5, scope: !1718, file: !913, line: 207, type: !1721)
!4148 = !DILocation(line: 207, column: 72, scope: !1718)
!4149 = !DILocalVariable(name: "i", scope: !1718, file: !913, line: 209, type: !898)
!4150 = !DILocation(line: 209, column: 9, scope: !1718)
!4151 = !DILocalVariable(name: "e", scope: !1718, file: !913, line: 209, type: !898)
!4152 = !DILocation(line: 209, column: 12, scope: !1718)
!4153 = !DILocation(line: 212, column: 18, scope: !1718)
!4154 = !DILocation(line: 212, column: 21, scope: !1718)
!4155 = !DILocation(line: 212, column: 37, scope: !1718)
!4156 = !DILocation(line: 212, column: 25, scope: !1718)
!4157 = !DILocation(line: 212, column: 28, scope: !1718)
!4158 = !DILocation(line: 212, column: 44, scope: !1718)
!4159 = !DILocation(line: 212, column: 9, scope: !1718)
!4160 = !DILocation(line: 785, column: 30, scope: !3414, inlinedAt: !4123)
!4161 = !DILocation(line: 785, column: 34, scope: !3414, inlinedAt: !4123)
!4162 = !DILocation(line: 785, column: 118, scope: !3414, inlinedAt: !4123)
!4163 = !DILocation(line: 785, column: 122, scope: !3414, inlinedAt: !4123)
!4164 = !DILocation(line: 786, column: 60, scope: !3414, inlinedAt: !4123)
!4165 = !DILocation(line: 786, column: 64, scope: !3414, inlinedAt: !4123)
!4166 = !DILocation(line: 786, column: 74, scope: !3414, inlinedAt: !4123)
!4167 = !DILocation(line: 786, column: 83, scope: !3414, inlinedAt: !4123)
!4168 = !DILocation(line: 786, column: 71, scope: !3414, inlinedAt: !4123)
!4169 = !DILocation(line: 786, column: 92, scope: !3414, inlinedAt: !4123)
!4170 = !DILocation(line: 786, column: 16, scope: !3414, inlinedAt: !4123)
!4171 = !DILocation(line: 68, column: 16, scope: !3402, inlinedAt: !4127)
!4172 = !DILocation(line: 68, column: 19, scope: !3402, inlinedAt: !4127)
!4173 = !DILocation(line: 68, column: 24, scope: !3402, inlinedAt: !4127)
!4174 = !DILocation(line: 68, column: 38, scope: !3402, inlinedAt: !4127)
!4175 = !DILocation(line: 68, column: 41, scope: !3402, inlinedAt: !4127)
!4176 = !DILocation(line: 68, column: 46, scope: !3402, inlinedAt: !4127)
!4177 = !DILocation(line: 68, column: 34, scope: !3402, inlinedAt: !4127)
!4178 = !DILocation(line: 68, column: 57, scope: !3402, inlinedAt: !4127)
!4179 = !DILocation(line: 68, column: 69, scope: !3402, inlinedAt: !4127)
!4180 = !DILocation(line: 68, column: 72, scope: !3402, inlinedAt: !4127)
!4181 = !DILocation(line: 68, column: 79, scope: !3402, inlinedAt: !4127)
!4182 = !DILocation(line: 68, column: 84, scope: !3402, inlinedAt: !4127)
!4183 = !DILocation(line: 68, column: 99, scope: !3402, inlinedAt: !4127)
!4184 = !DILocation(line: 68, column: 102, scope: !3402, inlinedAt: !4127)
!4185 = !DILocation(line: 68, column: 109, scope: !3402, inlinedAt: !4127)
!4186 = !DILocation(line: 68, column: 114, scope: !3402, inlinedAt: !4127)
!4187 = !DILocation(line: 68, column: 94, scope: !3402, inlinedAt: !4127)
!4188 = !DILocation(line: 68, column: 63, scope: !3402, inlinedAt: !4127)
!4189 = !DILocation(line: 786, column: 100, scope: !3414, inlinedAt: !4123)
!4190 = !DILocation(line: 786, column: 109, scope: !3414, inlinedAt: !4123)
!4191 = !DILocation(line: 786, column: 96, scope: !3414, inlinedAt: !4123)
!4192 = !DILocation(line: 786, column: 14, scope: !3414, inlinedAt: !4123)
!4193 = !DILocation(line: 788, column: 64, scope: !3510, inlinedAt: !4123)
!4194 = !DILocation(line: 788, column: 74, scope: !3510, inlinedAt: !4123)
!4195 = !DILocation(line: 788, column: 54, scope: !3510, inlinedAt: !4123)
!4196 = !DILocation(line: 788, column: 52, scope: !3510, inlinedAt: !4123)
!4197 = !DILocation(line: 788, column: 94, scope: !3510, inlinedAt: !4123)
!4198 = !DILocation(line: 788, column: 88, scope: !3510, inlinedAt: !4123)
!4199 = !DILocation(line: 788, column: 86, scope: !3510, inlinedAt: !4123)
!4200 = !DILocation(line: 788, column: 115, scope: !3510, inlinedAt: !4123)
!4201 = !DILocation(line: 788, column: 109, scope: !3510, inlinedAt: !4123)
!4202 = !DILocation(line: 788, column: 107, scope: !3510, inlinedAt: !4123)
!4203 = !DILocation(line: 788, column: 130, scope: !3510, inlinedAt: !4123)
!4204 = !DILocation(line: 788, column: 140, scope: !3510, inlinedAt: !4123)
!4205 = !DILocation(line: 788, column: 144, scope: !3510, inlinedAt: !4123)
!4206 = !DILocation(line: 788, column: 147, scope: !3524, inlinedAt: !4123)
!4207 = !DILocation(line: 788, column: 149, scope: !3524, inlinedAt: !4123)
!4208 = !DILocation(line: 788, column: 130, scope: !3524, inlinedAt: !4123)
!4209 = !DILocation(line: 788, column: 169, scope: !3528, inlinedAt: !4123)
!4210 = !DILocation(line: 788, column: 187, scope: !3528, inlinedAt: !4123)
!4211 = !DILocation(line: 788, column: 199, scope: !3528, inlinedAt: !4123)
!4212 = !DILocation(line: 788, column: 196, scope: !3528, inlinedAt: !4123)
!4213 = !DILocation(line: 788, column: 184, scope: !3528, inlinedAt: !4123)
!4214 = !DILocation(line: 788, column: 168, scope: !3528, inlinedAt: !4123)
!4215 = !DILocation(line: 788, column: 209, scope: !3535, inlinedAt: !4123)
!4216 = !DILocation(line: 788, column: 221, scope: !3535, inlinedAt: !4123)
!4217 = !DILocation(line: 788, column: 218, scope: !3535, inlinedAt: !4123)
!4218 = !DILocation(line: 788, column: 168, scope: !3535, inlinedAt: !4123)
!4219 = !DILocation(line: 788, column: 231, scope: !3540, inlinedAt: !4123)
!4220 = !DILocation(line: 788, column: 168, scope: !3540, inlinedAt: !4123)
!4221 = !DILocation(line: 788, column: 168, scope: !3420, inlinedAt: !4123)
!4222 = !DILocation(line: 788, column: 165, scope: !3420, inlinedAt: !4123)
!4223 = !DILocation(line: 788, column: 303, scope: !3420, inlinedAt: !4123)
!4224 = !DILocation(line: 788, column: 307, scope: !3420, inlinedAt: !4123)
!4225 = !DILocation(line: 788, column: 317, scope: !3420, inlinedAt: !4123)
!4226 = !DILocation(line: 788, column: 326, scope: !3420, inlinedAt: !4123)
!4227 = !DILocation(line: 788, column: 314, scope: !3420, inlinedAt: !4123)
!4228 = !DILocation(line: 788, column: 335, scope: !3420, inlinedAt: !4123)
!4229 = !DILocation(line: 788, column: 259, scope: !3420, inlinedAt: !4123)
!4230 = !DILocation(line: 68, column: 16, scope: !3402, inlinedAt: !4125)
!4231 = !DILocation(line: 68, column: 19, scope: !3402, inlinedAt: !4125)
!4232 = !DILocation(line: 68, column: 24, scope: !3402, inlinedAt: !4125)
!4233 = !DILocation(line: 68, column: 38, scope: !3402, inlinedAt: !4125)
!4234 = !DILocation(line: 68, column: 41, scope: !3402, inlinedAt: !4125)
!4235 = !DILocation(line: 68, column: 46, scope: !3402, inlinedAt: !4125)
!4236 = !DILocation(line: 68, column: 34, scope: !3402, inlinedAt: !4125)
!4237 = !DILocation(line: 68, column: 57, scope: !3402, inlinedAt: !4125)
!4238 = !DILocation(line: 68, column: 69, scope: !3402, inlinedAt: !4125)
!4239 = !DILocation(line: 68, column: 72, scope: !3402, inlinedAt: !4125)
!4240 = !DILocation(line: 68, column: 79, scope: !3402, inlinedAt: !4125)
!4241 = !DILocation(line: 68, column: 84, scope: !3402, inlinedAt: !4125)
!4242 = !DILocation(line: 68, column: 99, scope: !3402, inlinedAt: !4125)
!4243 = !DILocation(line: 68, column: 102, scope: !3402, inlinedAt: !4125)
!4244 = !DILocation(line: 68, column: 109, scope: !3402, inlinedAt: !4125)
!4245 = !DILocation(line: 68, column: 114, scope: !3402, inlinedAt: !4125)
!4246 = !DILocation(line: 68, column: 94, scope: !3402, inlinedAt: !4125)
!4247 = !DILocation(line: 68, column: 63, scope: !3402, inlinedAt: !4125)
!4248 = !DILocation(line: 788, column: 343, scope: !3420, inlinedAt: !4123)
!4249 = !DILocation(line: 788, column: 352, scope: !3420, inlinedAt: !4123)
!4250 = !DILocation(line: 788, column: 339, scope: !3420, inlinedAt: !4123)
!4251 = !DILocation(line: 788, column: 257, scope: !3420, inlinedAt: !4123)
!4252 = !DILocation(line: 788, column: 369, scope: !3420, inlinedAt: !4123)
!4253 = !DILocation(line: 788, column: 368, scope: !3420, inlinedAt: !4123)
!4254 = !DILocation(line: 788, column: 366, scope: !3420, inlinedAt: !4123)
!4255 = !DILocation(line: 788, column: 390, scope: !3420, inlinedAt: !4123)
!4256 = !DILocation(line: 788, column: 400, scope: !3420, inlinedAt: !4123)
!4257 = !DILocation(line: 788, column: 380, scope: !3579, inlinedAt: !4123)
!4258 = !DILocation(line: 788, column: 411, scope: !3420, inlinedAt: !4123)
!4259 = !DILocation(line: 788, column: 409, scope: !3420, inlinedAt: !4123)
!4260 = !DILocation(line: 788, column: 378, scope: !3420, inlinedAt: !4123)
!4261 = !DILocation(line: 788, column: 430, scope: !3420, inlinedAt: !4123)
!4262 = !DILocation(line: 788, column: 424, scope: !3420, inlinedAt: !4123)
!4263 = !DILocation(line: 788, column: 422, scope: !3420, inlinedAt: !4123)
!4264 = !DILocation(line: 788, column: 451, scope: !3420, inlinedAt: !4123)
!4265 = !DILocation(line: 788, column: 445, scope: !3420, inlinedAt: !4123)
!4266 = !DILocation(line: 788, column: 443, scope: !3420, inlinedAt: !4123)
!4267 = !DILocation(line: 788, column: 466, scope: !3420, inlinedAt: !4123)
!4268 = !DILocation(line: 788, column: 476, scope: !3420, inlinedAt: !4123)
!4269 = !DILocation(line: 788, column: 480, scope: !3420, inlinedAt: !4123)
!4270 = !DILocation(line: 788, column: 483, scope: !3593, inlinedAt: !4123)
!4271 = !DILocation(line: 788, column: 485, scope: !3593, inlinedAt: !4123)
!4272 = !DILocation(line: 788, column: 466, scope: !3593, inlinedAt: !4123)
!4273 = !DILocation(line: 788, column: 505, scope: !3597, inlinedAt: !4123)
!4274 = !DILocation(line: 788, column: 523, scope: !3597, inlinedAt: !4123)
!4275 = !DILocation(line: 788, column: 535, scope: !3597, inlinedAt: !4123)
!4276 = !DILocation(line: 788, column: 532, scope: !3597, inlinedAt: !4123)
!4277 = !DILocation(line: 788, column: 520, scope: !3597, inlinedAt: !4123)
!4278 = !DILocation(line: 788, column: 504, scope: !3597, inlinedAt: !4123)
!4279 = !DILocation(line: 788, column: 548, scope: !3604, inlinedAt: !4123)
!4280 = !DILocation(line: 788, column: 560, scope: !3604, inlinedAt: !4123)
!4281 = !DILocation(line: 788, column: 557, scope: !3604, inlinedAt: !4123)
!4282 = !DILocation(line: 788, column: 504, scope: !3604, inlinedAt: !4123)
!4283 = !DILocation(line: 788, column: 573, scope: !3609, inlinedAt: !4123)
!4284 = !DILocation(line: 788, column: 504, scope: !3609, inlinedAt: !4123)
!4285 = !DILocation(line: 788, column: 504, scope: !3408, inlinedAt: !4123)
!4286 = !DILocation(line: 788, column: 501, scope: !3408, inlinedAt: !4123)
!4287 = !DILocation(line: 788, column: 645, scope: !3408, inlinedAt: !4123)
!4288 = !DILocation(line: 788, column: 649, scope: !3408, inlinedAt: !4123)
!4289 = !DILocation(line: 788, column: 659, scope: !3408, inlinedAt: !4123)
!4290 = !DILocation(line: 788, column: 668, scope: !3408, inlinedAt: !4123)
!4291 = !DILocation(line: 788, column: 656, scope: !3408, inlinedAt: !4123)
!4292 = !DILocation(line: 788, column: 677, scope: !3408, inlinedAt: !4123)
!4293 = !DILocation(line: 788, column: 601, scope: !3408, inlinedAt: !4123)
!4294 = !DILocation(line: 68, column: 16, scope: !3402, inlinedAt: !4122)
!4295 = !DILocation(line: 68, column: 19, scope: !3402, inlinedAt: !4122)
!4296 = !DILocation(line: 68, column: 24, scope: !3402, inlinedAt: !4122)
!4297 = !DILocation(line: 68, column: 38, scope: !3402, inlinedAt: !4122)
!4298 = !DILocation(line: 68, column: 41, scope: !3402, inlinedAt: !4122)
!4299 = !DILocation(line: 68, column: 46, scope: !3402, inlinedAt: !4122)
!4300 = !DILocation(line: 68, column: 34, scope: !3402, inlinedAt: !4122)
!4301 = !DILocation(line: 68, column: 57, scope: !3402, inlinedAt: !4122)
!4302 = !DILocation(line: 68, column: 69, scope: !3402, inlinedAt: !4122)
!4303 = !DILocation(line: 68, column: 72, scope: !3402, inlinedAt: !4122)
!4304 = !DILocation(line: 68, column: 79, scope: !3402, inlinedAt: !4122)
!4305 = !DILocation(line: 68, column: 84, scope: !3402, inlinedAt: !4122)
!4306 = !DILocation(line: 68, column: 99, scope: !3402, inlinedAt: !4122)
!4307 = !DILocation(line: 68, column: 102, scope: !3402, inlinedAt: !4122)
!4308 = !DILocation(line: 68, column: 109, scope: !3402, inlinedAt: !4122)
!4309 = !DILocation(line: 68, column: 114, scope: !3402, inlinedAt: !4122)
!4310 = !DILocation(line: 68, column: 94, scope: !3402, inlinedAt: !4122)
!4311 = !DILocation(line: 68, column: 63, scope: !3402, inlinedAt: !4122)
!4312 = !DILocation(line: 788, column: 685, scope: !3408, inlinedAt: !4123)
!4313 = !DILocation(line: 788, column: 694, scope: !3408, inlinedAt: !4123)
!4314 = !DILocation(line: 788, column: 681, scope: !3408, inlinedAt: !4123)
!4315 = !DILocation(line: 788, column: 599, scope: !3408, inlinedAt: !4123)
!4316 = !DILocation(line: 788, column: 711, scope: !3408, inlinedAt: !4123)
!4317 = !DILocation(line: 788, column: 710, scope: !3408, inlinedAt: !4123)
!4318 = !DILocation(line: 788, column: 708, scope: !3408, inlinedAt: !4123)
!4319 = !DILocation(line: 788, column: 732, scope: !3408, inlinedAt: !4123)
!4320 = !DILocation(line: 788, column: 742, scope: !3408, inlinedAt: !4123)
!4321 = !DILocation(line: 788, column: 722, scope: !3648, inlinedAt: !4123)
!4322 = !DILocation(line: 788, column: 753, scope: !3408, inlinedAt: !4123)
!4323 = !DILocation(line: 788, column: 751, scope: !3408, inlinedAt: !4123)
!4324 = !DILocation(line: 788, column: 720, scope: !3408, inlinedAt: !4123)
!4325 = !DILocation(line: 788, column: 772, scope: !3408, inlinedAt: !4123)
!4326 = !DILocation(line: 788, column: 766, scope: !3408, inlinedAt: !4123)
!4327 = !DILocation(line: 788, column: 764, scope: !3408, inlinedAt: !4123)
!4328 = !DILocation(line: 788, column: 793, scope: !3408, inlinedAt: !4123)
!4329 = !DILocation(line: 788, column: 787, scope: !3408, inlinedAt: !4123)
!4330 = !DILocation(line: 788, column: 785, scope: !3408, inlinedAt: !4123)
!4331 = !DILocation(line: 788, column: 804, scope: !3408, inlinedAt: !4123)
!4332 = !DILocation(line: 788, column: 806, scope: !3660, inlinedAt: !4123)
!4333 = !DILocation(line: 788, column: 827, scope: !3662, inlinedAt: !4123)
!4334 = !DILocation(line: 788, column: 822, scope: !3662, inlinedAt: !4123)
!4335 = !DILocation(line: 788, column: 844, scope: !3662, inlinedAt: !4123)
!4336 = !DILocation(line: 788, column: 862, scope: !3662, inlinedAt: !4123)
!4337 = !DILocation(line: 788, column: 874, scope: !3662, inlinedAt: !4123)
!4338 = !DILocation(line: 788, column: 871, scope: !3662, inlinedAt: !4123)
!4339 = !DILocation(line: 788, column: 859, scope: !3662, inlinedAt: !4123)
!4340 = !DILocation(line: 788, column: 843, scope: !3662, inlinedAt: !4123)
!4341 = !DILocation(line: 788, column: 881, scope: !3672, inlinedAt: !4123)
!4342 = !DILocation(line: 788, column: 893, scope: !3672, inlinedAt: !4123)
!4343 = !DILocation(line: 788, column: 890, scope: !3672, inlinedAt: !4123)
!4344 = !DILocation(line: 788, column: 843, scope: !3672, inlinedAt: !4123)
!4345 = !DILocation(line: 788, column: 900, scope: !3677, inlinedAt: !4123)
!4346 = !DILocation(line: 788, column: 843, scope: !3677, inlinedAt: !4123)
!4347 = !DILocation(line: 788, column: 843, scope: !3680, inlinedAt: !4123)
!4348 = !DILocation(line: 788, column: 840, scope: !3680, inlinedAt: !4123)
!4349 = !DILocation(line: 790, column: 18, scope: !3414, inlinedAt: !4123)
!4350 = !DILocation(line: 790, column: 6, scope: !3414, inlinedAt: !4123)
!4351 = !DILocation(line: 790, column: 10, scope: !3414, inlinedAt: !4123)
!4352 = !DILocation(line: 790, column: 16, scope: !3414, inlinedAt: !4123)
!4353 = !DILocation(line: 792, column: 12, scope: !3414, inlinedAt: !4123)
!4354 = !DILocation(line: 212, column: 7, scope: !1718)
!4355 = !DILocation(line: 214, column: 9, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !1718, file: !913, line: 214, column: 9)
!4357 = !DILocation(line: 214, column: 11, scope: !4356)
!4358 = !DILocation(line: 214, column: 9, scope: !1718)
!4359 = !DILocalVariable(name: "t", scope: !4360, file: !913, line: 215, type: !898)
!4360 = distinct !DILexicalBlock(scope: !4356, file: !913, line: 214, column: 17)
!4361 = !DILocation(line: 215, column: 13, scope: !4360)
!4362 = !DILocalVariable(name: "l", scope: !4360, file: !913, line: 215, type: !898)
!4363 = !DILocation(line: 215, column: 16, scope: !4360)
!4364 = !DILocation(line: 216, column: 13, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4360, file: !913, line: 216, column: 13)
!4366 = !DILocation(line: 216, column: 15, scope: !4365)
!4367 = !DILocation(line: 216, column: 13, scope: !4360)
!4368 = !DILocation(line: 219, column: 14, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4365, file: !913, line: 216, column: 20)
!4370 = !DILocation(line: 219, column: 18, scope: !4369)
!4371 = !DILocation(line: 218, column: 14, scope: !4369)
!4372 = !DILocation(line: 218, column: 20, scope: !4369)
!4373 = !DILocation(line: 217, column: 14, scope: !4369)
!4374 = !DILocation(line: 217, column: 20, scope: !4369)
!4375 = !DILocation(line: 220, column: 13, scope: !4369)
!4376 = !DILocation(line: 231, column: 13, scope: !4360)
!4377 = !DILocation(line: 231, column: 15, scope: !4360)
!4378 = !DILocation(line: 231, column: 11, scope: !4360)
!4379 = !DILocation(line: 230, column: 10, scope: !4360)
!4380 = !DILocation(line: 230, column: 16, scope: !4360)
!4381 = !DILocation(line: 232, column: 19, scope: !4360)
!4382 = !DILocation(line: 232, column: 17, scope: !4360)
!4383 = !DILocation(line: 232, column: 11, scope: !4360)
!4384 = !DILocation(line: 236, column: 27, scope: !4360)
!4385 = !DILocation(line: 236, column: 29, scope: !4360)
!4386 = !DILocation(line: 236, column: 23, scope: !4360)
!4387 = !DILocation(line: 236, column: 38, scope: !4360)
!4388 = !DILocation(line: 236, column: 11, scope: !4360)
!4389 = !DILocation(line: 240, column: 26, scope: !4360)
!4390 = !DILocation(line: 240, column: 28, scope: !4360)
!4391 = !DILocation(line: 240, column: 22, scope: !4360)
!4392 = !DILocation(line: 240, column: 11, scope: !4360)
!4393 = !DILocation(line: 242, column: 16, scope: !4360)
!4394 = !DILocation(line: 242, column: 20, scope: !4360)
!4395 = !DILocation(line: 242, column: 18, scope: !4360)
!4396 = !DILocation(line: 242, column: 10, scope: !4360)
!4397 = !DILocation(line: 242, column: 14, scope: !4360)
!4398 = !DILocation(line: 243, column: 18, scope: !4360)
!4399 = !DILocation(line: 243, column: 10, scope: !4360)
!4400 = !DILocation(line: 243, column: 16, scope: !4360)
!4401 = !DILocation(line: 244, column: 5, scope: !4360)
!4402 = !DILocation(line: 244, column: 16, scope: !4403)
!4403 = !DILexicalBlockFile(scope: !4404, file: !913, discriminator: 1)
!4404 = distinct !DILexicalBlock(scope: !4356, file: !913, line: 244, column: 16)
!4405 = !DILocation(line: 244, column: 18, scope: !4403)
!4406 = !DILocalVariable(name: "sm", scope: !4407, file: !913, line: 245, type: !906)
!4407 = distinct !DILexicalBlock(scope: !4404, file: !913, line: 244, column: 24)
!4408 = !DILocation(line: 245, column: 18, scope: !4407)
!4409 = !DILocalVariable(name: "mask", scope: !4407, file: !913, line: 246, type: !906)
!4410 = !DILocation(line: 246, column: 18, scope: !4407)
!4411 = !DILocation(line: 248, column: 11, scope: !4407)
!4412 = !DILocation(line: 249, column: 30, scope: !4407)
!4413 = !DILocation(line: 249, column: 14, scope: !4407)
!4414 = !DILocation(line: 249, column: 12, scope: !4407)
!4415 = !DILocation(line: 251, column: 22, scope: !4407)
!4416 = !DILocation(line: 251, column: 25, scope: !4407)
!4417 = !DILocation(line: 251, column: 29, scope: !4407)
!4418 = !DILocation(line: 251, column: 32, scope: !4407)
!4419 = !DILocation(line: 251, column: 13, scope: !4407)
!4420 = !DILocation(line: 251, column: 11, scope: !4407)
!4421 = !DILocation(line: 252, column: 12, scope: !4407)
!4422 = !DILocation(line: 253, column: 16, scope: !4407)
!4423 = !DILocation(line: 253, column: 19, scope: !4407)
!4424 = !DILocation(line: 253, column: 14, scope: !4407)
!4425 = !DILocation(line: 254, column: 12, scope: !4407)
!4426 = !DILocation(line: 256, column: 17, scope: !4407)
!4427 = !DILocation(line: 256, column: 20, scope: !4407)
!4428 = !DILocation(line: 256, column: 31, scope: !4407)
!4429 = !DILocation(line: 256, column: 35, scope: !4407)
!4430 = !DILocation(line: 256, column: 33, scope: !4407)
!4431 = !DILocation(line: 256, column: 28, scope: !4407)
!4432 = !DILocation(line: 256, column: 10, scope: !4407)
!4433 = !DILocation(line: 256, column: 14, scope: !4407)
!4434 = !DILocation(line: 257, column: 19, scope: !4407)
!4435 = !DILocation(line: 257, column: 22, scope: !4407)
!4436 = !DILocation(line: 257, column: 31, scope: !4407)
!4437 = !DILocation(line: 257, column: 36, scope: !4407)
!4438 = !DILocation(line: 257, column: 35, scope: !4407)
!4439 = !DILocation(line: 257, column: 33, scope: !4407)
!4440 = !DILocation(line: 257, column: 28, scope: !4407)
!4441 = !DILocation(line: 257, column: 10, scope: !4407)
!4442 = !DILocation(line: 257, column: 16, scope: !4407)
!4443 = !DILocation(line: 258, column: 18, scope: !4407)
!4444 = !DILocation(line: 258, column: 20, scope: !4407)
!4445 = !DILocation(line: 258, column: 10, scope: !4407)
!4446 = !DILocation(line: 258, column: 16, scope: !4407)
!4447 = !DILocation(line: 259, column: 5, scope: !4407)
!4448 = !DILocation(line: 259, column: 16, scope: !4449)
!4449 = !DILexicalBlockFile(scope: !4450, file: !913, discriminator: 1)
!4450 = distinct !DILexicalBlock(scope: !4404, file: !913, line: 259, column: 16)
!4451 = !DILocation(line: 259, column: 18, scope: !4449)
!4452 = !DILocation(line: 267, column: 20, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4450, file: !913, line: 259, column: 24)
!4454 = !DILocation(line: 267, column: 22, scope: !4453)
!4455 = !DILocation(line: 267, column: 18, scope: !4453)
!4456 = !DILocation(line: 267, column: 10, scope: !4453)
!4457 = !DILocation(line: 267, column: 16, scope: !4453)
!4458 = !DILocation(line: 268, column: 22, scope: !4453)
!4459 = !DILocation(line: 268, column: 25, scope: !4453)
!4460 = !DILocation(line: 268, column: 13, scope: !4453)
!4461 = !DILocation(line: 268, column: 11, scope: !4453)
!4462 = !DILocation(line: 269, column: 35, scope: !4453)
!4463 = !DILocation(line: 269, column: 16, scope: !4453)
!4464 = !DILocation(line: 269, column: 38, scope: !4453)
!4465 = !DILocation(line: 269, column: 10, scope: !4453)
!4466 = !DILocation(line: 269, column: 14, scope: !4453)
!4467 = !DILocation(line: 270, column: 37, scope: !4453)
!4468 = !DILocation(line: 270, column: 18, scope: !4453)
!4469 = !DILocation(line: 270, column: 40, scope: !4453)
!4470 = !DILocation(line: 270, column: 10, scope: !4453)
!4471 = !DILocation(line: 270, column: 16, scope: !4453)
!4472 = !DILocation(line: 271, column: 5, scope: !4453)
!4473 = !DILocation(line: 272, column: 27, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4450, file: !913, line: 271, column: 12)
!4475 = !DILocation(line: 272, column: 30, scope: !4474)
!4476 = !DILocation(line: 272, column: 43, scope: !4474)
!4477 = !DILocation(line: 272, column: 45, scope: !4474)
!4478 = !DILocation(line: 272, column: 40, scope: !4474)
!4479 = !DILocation(line: 272, column: 36, scope: !4474)
!4480 = !DILocation(line: 272, column: 18, scope: !4474)
!4481 = !DILocation(line: 272, column: 10, scope: !4474)
!4482 = !DILocation(line: 272, column: 16, scope: !4474)
!4483 = !DILocation(line: 273, column: 25, scope: !4474)
!4484 = !DILocation(line: 273, column: 28, scope: !4474)
!4485 = !DILocation(line: 273, column: 16, scope: !4474)
!4486 = !DILocation(line: 273, column: 10, scope: !4474)
!4487 = !DILocation(line: 273, column: 14, scope: !4474)
!4488 = !DILocation(line: 274, column: 28, scope: !4474)
!4489 = !DILocation(line: 274, column: 31, scope: !4474)
!4490 = !DILocation(line: 274, column: 18, scope: !4474)
!4491 = !DILocation(line: 274, column: 10, scope: !4474)
!4492 = !DILocation(line: 274, column: 16, scope: !4474)
!4493 = !DILocation(line: 276, column: 5, scope: !1718)
!4494 = !DILocation(line: 277, column: 1, scope: !1718)
!4495 = distinct !DISubprogram(name: "dsp_x8_put_solidcolor", scope: !913, file: !913, line: 546, type: !4496, isLocal: true, isDefinition: true, scopeLine: 548, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{null, !1002, !994, !2507}
!4498 = !DILocalVariable(name: "pix", arg: 1, scope: !4495, file: !913, line: 546, type: !1002)
!4499 = !DILocation(line: 546, column: 49, scope: !4495)
!4500 = !DILocalVariable(name: "dst", arg: 2, scope: !4495, file: !913, line: 546, type: !994)
!4501 = !DILocation(line: 546, column: 63, scope: !4495)
!4502 = !DILocalVariable(name: "linesize", arg: 3, scope: !4495, file: !913, line: 547, type: !2507)
!4503 = !DILocation(line: 547, column: 51, scope: !4495)
!4504 = !DILocalVariable(name: "k", scope: !4495, file: !913, line: 549, type: !898)
!4505 = !DILocation(line: 549, column: 9, scope: !4495)
!4506 = !DILocation(line: 550, column: 12, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4495, file: !913, line: 550, column: 5)
!4508 = !DILocation(line: 550, column: 10, scope: !4507)
!4509 = !DILocation(line: 550, column: 17, scope: !4510)
!4510 = !DILexicalBlockFile(scope: !4511, file: !913, discriminator: 1)
!4511 = distinct !DILexicalBlock(scope: !4507, file: !913, line: 550, column: 5)
!4512 = !DILocation(line: 550, column: 19, scope: !4510)
!4513 = !DILocation(line: 550, column: 5, scope: !4510)
!4514 = !DILocation(line: 551, column: 16, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4511, file: !913, line: 550, column: 29)
!4516 = !DILocation(line: 551, column: 21, scope: !4515)
!4517 = !DILocation(line: 551, column: 9, scope: !4515)
!4518 = !DILocation(line: 552, column: 16, scope: !4515)
!4519 = !DILocation(line: 552, column: 13, scope: !4515)
!4520 = !DILocation(line: 553, column: 5, scope: !4515)
!4521 = !DILocation(line: 550, column: 25, scope: !4522)
!4522 = !DILexicalBlockFile(scope: !4511, file: !913, discriminator: 2)
!4523 = !DILocation(line: 550, column: 5, scope: !4522)
!4524 = distinct !{!4524, !4525}
!4525 = !DILocation(line: 550, column: 5, scope: !4495)
!4526 = !DILocation(line: 554, column: 1, scope: !4495)
!4527 = distinct !DISubprogram(name: "x8_ac_compensation", scope: !913, file: !913, line: 475, type: !4528, isLocal: true, isDefinition: true, scopeLine: 477, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!4528 = !DISubroutineType(types: !4529)
!4529 = !{null, !977, !1107, !1107}
!4530 = !DILocalVariable(name: "w", arg: 1, scope: !4527, file: !913, line: 475, type: !977)
!4531 = !DILocation(line: 475, column: 54, scope: !4527)
!4532 = !DILocalVariable(name: "direction", arg: 2, scope: !4527, file: !913, line: 475, type: !1107)
!4533 = !DILocation(line: 475, column: 67, scope: !4527)
!4534 = !DILocalVariable(name: "dc_level", arg: 3, scope: !4527, file: !913, line: 476, type: !1107)
!4535 = !DILocation(line: 476, column: 42, scope: !4527)
!4536 = !DILocalVariable(name: "t", scope: !4527, file: !913, line: 478, type: !898)
!4537 = !DILocation(line: 478, column: 9, scope: !4527)
!4538 = !DILocation(line: 481, column: 13, scope: !4527)
!4539 = !DILocation(line: 481, column: 5, scope: !4527)
!4540 = !DILocation(line: 483, column: 23, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4527, file: !913, line: 481, column: 24)
!4542 = !DILocation(line: 483, column: 21, scope: !4541)
!4543 = !DILocation(line: 483, column: 32, scope: !4541)
!4544 = !DILocation(line: 483, column: 42, scope: !4541)
!4545 = !DILocation(line: 483, column: 11, scope: !4541)
!4546 = !DILocation(line: 484, column: 60, scope: !4541)
!4547 = !DILocation(line: 484, column: 21, scope: !4541)
!4548 = !DILocation(line: 484, column: 24, scope: !4541)
!4549 = !DILocation(line: 484, column: 9, scope: !4541)
!4550 = !DILocation(line: 484, column: 12, scope: !4541)
!4551 = !DILocation(line: 484, column: 57, scope: !4541)
!4552 = !DILocation(line: 485, column: 60, scope: !4541)
!4553 = !DILocation(line: 485, column: 21, scope: !4541)
!4554 = !DILocation(line: 485, column: 24, scope: !4541)
!4555 = !DILocation(line: 485, column: 9, scope: !4541)
!4556 = !DILocation(line: 485, column: 12, scope: !4541)
!4557 = !DILocation(line: 485, column: 57, scope: !4541)
!4558 = !DILocation(line: 487, column: 22, scope: !4541)
!4559 = !DILocation(line: 487, column: 20, scope: !4541)
!4560 = !DILocation(line: 487, column: 31, scope: !4541)
!4561 = !DILocation(line: 487, column: 41, scope: !4541)
!4562 = !DILocation(line: 487, column: 11, scope: !4541)
!4563 = !DILocation(line: 488, column: 60, scope: !4541)
!4564 = !DILocation(line: 488, column: 21, scope: !4541)
!4565 = !DILocation(line: 488, column: 24, scope: !4541)
!4566 = !DILocation(line: 488, column: 9, scope: !4541)
!4567 = !DILocation(line: 488, column: 12, scope: !4541)
!4568 = !DILocation(line: 488, column: 57, scope: !4541)
!4569 = !DILocation(line: 489, column: 60, scope: !4541)
!4570 = !DILocation(line: 489, column: 21, scope: !4541)
!4571 = !DILocation(line: 489, column: 24, scope: !4541)
!4572 = !DILocation(line: 489, column: 9, scope: !4541)
!4573 = !DILocation(line: 489, column: 12, scope: !4541)
!4574 = !DILocation(line: 489, column: 57, scope: !4541)
!4575 = !DILocation(line: 491, column: 22, scope: !4541)
!4576 = !DILocation(line: 491, column: 20, scope: !4541)
!4577 = !DILocation(line: 491, column: 31, scope: !4541)
!4578 = !DILocation(line: 491, column: 41, scope: !4541)
!4579 = !DILocation(line: 491, column: 11, scope: !4541)
!4580 = !DILocation(line: 492, column: 60, scope: !4541)
!4581 = !DILocation(line: 492, column: 21, scope: !4541)
!4582 = !DILocation(line: 492, column: 24, scope: !4541)
!4583 = !DILocation(line: 492, column: 9, scope: !4541)
!4584 = !DILocation(line: 492, column: 12, scope: !4541)
!4585 = !DILocation(line: 492, column: 57, scope: !4541)
!4586 = !DILocation(line: 493, column: 60, scope: !4541)
!4587 = !DILocation(line: 493, column: 21, scope: !4541)
!4588 = !DILocation(line: 493, column: 24, scope: !4541)
!4589 = !DILocation(line: 493, column: 9, scope: !4541)
!4590 = !DILocation(line: 493, column: 12, scope: !4541)
!4591 = !DILocation(line: 493, column: 57, scope: !4541)
!4592 = !DILocation(line: 495, column: 22, scope: !4541)
!4593 = !DILocation(line: 495, column: 20, scope: !4541)
!4594 = !DILocation(line: 495, column: 31, scope: !4541)
!4595 = !DILocation(line: 495, column: 41, scope: !4541)
!4596 = !DILocation(line: 495, column: 11, scope: !4541)
!4597 = !DILocation(line: 496, column: 60, scope: !4541)
!4598 = !DILocation(line: 496, column: 21, scope: !4541)
!4599 = !DILocation(line: 496, column: 24, scope: !4541)
!4600 = !DILocation(line: 496, column: 9, scope: !4541)
!4601 = !DILocation(line: 496, column: 12, scope: !4541)
!4602 = !DILocation(line: 496, column: 57, scope: !4541)
!4603 = !DILocation(line: 497, column: 60, scope: !4541)
!4604 = !DILocation(line: 497, column: 21, scope: !4541)
!4605 = !DILocation(line: 497, column: 24, scope: !4541)
!4606 = !DILocation(line: 497, column: 9, scope: !4541)
!4607 = !DILocation(line: 497, column: 12, scope: !4541)
!4608 = !DILocation(line: 497, column: 57, scope: !4541)
!4609 = !DILocation(line: 498, column: 60, scope: !4541)
!4610 = !DILocation(line: 498, column: 21, scope: !4541)
!4611 = !DILocation(line: 498, column: 24, scope: !4541)
!4612 = !DILocation(line: 498, column: 9, scope: !4541)
!4613 = !DILocation(line: 498, column: 12, scope: !4541)
!4614 = !DILocation(line: 498, column: 57, scope: !4541)
!4615 = !DILocation(line: 499, column: 60, scope: !4541)
!4616 = !DILocation(line: 499, column: 21, scope: !4541)
!4617 = !DILocation(line: 499, column: 24, scope: !4541)
!4618 = !DILocation(line: 499, column: 9, scope: !4541)
!4619 = !DILocation(line: 499, column: 12, scope: !4541)
!4620 = !DILocation(line: 499, column: 57, scope: !4541)
!4621 = !DILocation(line: 500, column: 60, scope: !4541)
!4622 = !DILocation(line: 500, column: 21, scope: !4541)
!4623 = !DILocation(line: 500, column: 24, scope: !4541)
!4624 = !DILocation(line: 500, column: 9, scope: !4541)
!4625 = !DILocation(line: 500, column: 12, scope: !4541)
!4626 = !DILocation(line: 500, column: 57, scope: !4541)
!4627 = !DILocation(line: 501, column: 60, scope: !4541)
!4628 = !DILocation(line: 501, column: 21, scope: !4541)
!4629 = !DILocation(line: 501, column: 24, scope: !4541)
!4630 = !DILocation(line: 501, column: 9, scope: !4541)
!4631 = !DILocation(line: 501, column: 12, scope: !4541)
!4632 = !DILocation(line: 501, column: 57, scope: !4541)
!4633 = !DILocation(line: 503, column: 22, scope: !4541)
!4634 = !DILocation(line: 503, column: 20, scope: !4541)
!4635 = !DILocation(line: 503, column: 31, scope: !4541)
!4636 = !DILocation(line: 503, column: 41, scope: !4541)
!4637 = !DILocation(line: 503, column: 11, scope: !4541)
!4638 = !DILocation(line: 504, column: 60, scope: !4541)
!4639 = !DILocation(line: 504, column: 21, scope: !4541)
!4640 = !DILocation(line: 504, column: 24, scope: !4541)
!4641 = !DILocation(line: 504, column: 9, scope: !4541)
!4642 = !DILocation(line: 504, column: 12, scope: !4541)
!4643 = !DILocation(line: 504, column: 57, scope: !4541)
!4644 = !DILocation(line: 505, column: 60, scope: !4541)
!4645 = !DILocation(line: 505, column: 21, scope: !4541)
!4646 = !DILocation(line: 505, column: 24, scope: !4541)
!4647 = !DILocation(line: 505, column: 9, scope: !4541)
!4648 = !DILocation(line: 505, column: 12, scope: !4541)
!4649 = !DILocation(line: 505, column: 57, scope: !4541)
!4650 = !DILocation(line: 507, column: 21, scope: !4541)
!4651 = !DILocation(line: 507, column: 19, scope: !4541)
!4652 = !DILocation(line: 507, column: 30, scope: !4541)
!4653 = !DILocation(line: 507, column: 40, scope: !4541)
!4654 = !DILocation(line: 507, column: 11, scope: !4541)
!4655 = !DILocation(line: 508, column: 60, scope: !4541)
!4656 = !DILocation(line: 508, column: 21, scope: !4541)
!4657 = !DILocation(line: 508, column: 24, scope: !4541)
!4658 = !DILocation(line: 508, column: 9, scope: !4541)
!4659 = !DILocation(line: 508, column: 12, scope: !4541)
!4660 = !DILocation(line: 508, column: 57, scope: !4541)
!4661 = !DILocation(line: 509, column: 60, scope: !4541)
!4662 = !DILocation(line: 509, column: 21, scope: !4541)
!4663 = !DILocation(line: 509, column: 24, scope: !4541)
!4664 = !DILocation(line: 509, column: 9, scope: !4541)
!4665 = !DILocation(line: 509, column: 12, scope: !4541)
!4666 = !DILocation(line: 509, column: 57, scope: !4541)
!4667 = !DILocation(line: 510, column: 60, scope: !4541)
!4668 = !DILocation(line: 510, column: 21, scope: !4541)
!4669 = !DILocation(line: 510, column: 24, scope: !4541)
!4670 = !DILocation(line: 510, column: 9, scope: !4541)
!4671 = !DILocation(line: 510, column: 12, scope: !4541)
!4672 = !DILocation(line: 510, column: 57, scope: !4541)
!4673 = !DILocation(line: 511, column: 60, scope: !4541)
!4674 = !DILocation(line: 511, column: 21, scope: !4541)
!4675 = !DILocation(line: 511, column: 24, scope: !4541)
!4676 = !DILocation(line: 511, column: 9, scope: !4541)
!4677 = !DILocation(line: 511, column: 12, scope: !4541)
!4678 = !DILocation(line: 511, column: 57, scope: !4541)
!4679 = !DILocation(line: 513, column: 21, scope: !4541)
!4680 = !DILocation(line: 513, column: 19, scope: !4541)
!4681 = !DILocation(line: 513, column: 30, scope: !4541)
!4682 = !DILocation(line: 513, column: 40, scope: !4541)
!4683 = !DILocation(line: 513, column: 11, scope: !4541)
!4684 = !DILocation(line: 514, column: 60, scope: !4541)
!4685 = !DILocation(line: 514, column: 21, scope: !4541)
!4686 = !DILocation(line: 514, column: 24, scope: !4541)
!4687 = !DILocation(line: 514, column: 9, scope: !4541)
!4688 = !DILocation(line: 514, column: 12, scope: !4541)
!4689 = !DILocation(line: 514, column: 57, scope: !4541)
!4690 = !DILocation(line: 515, column: 60, scope: !4541)
!4691 = !DILocation(line: 515, column: 21, scope: !4541)
!4692 = !DILocation(line: 515, column: 24, scope: !4541)
!4693 = !DILocation(line: 515, column: 9, scope: !4541)
!4694 = !DILocation(line: 515, column: 12, scope: !4541)
!4695 = !DILocation(line: 515, column: 57, scope: !4541)
!4696 = !DILocation(line: 516, column: 60, scope: !4541)
!4697 = !DILocation(line: 516, column: 21, scope: !4541)
!4698 = !DILocation(line: 516, column: 24, scope: !4541)
!4699 = !DILocation(line: 516, column: 9, scope: !4541)
!4700 = !DILocation(line: 516, column: 12, scope: !4541)
!4701 = !DILocation(line: 516, column: 57, scope: !4541)
!4702 = !DILocation(line: 517, column: 60, scope: !4541)
!4703 = !DILocation(line: 517, column: 21, scope: !4541)
!4704 = !DILocation(line: 517, column: 24, scope: !4541)
!4705 = !DILocation(line: 517, column: 9, scope: !4541)
!4706 = !DILocation(line: 517, column: 12, scope: !4541)
!4707 = !DILocation(line: 517, column: 57, scope: !4541)
!4708 = !DILocation(line: 518, column: 60, scope: !4541)
!4709 = !DILocation(line: 518, column: 21, scope: !4541)
!4710 = !DILocation(line: 518, column: 24, scope: !4541)
!4711 = !DILocation(line: 518, column: 9, scope: !4541)
!4712 = !DILocation(line: 518, column: 12, scope: !4541)
!4713 = !DILocation(line: 518, column: 57, scope: !4541)
!4714 = !DILocation(line: 520, column: 23, scope: !4541)
!4715 = !DILocation(line: 520, column: 21, scope: !4541)
!4716 = !DILocation(line: 520, column: 32, scope: !4541)
!4717 = !DILocation(line: 520, column: 42, scope: !4541)
!4718 = !DILocation(line: 520, column: 11, scope: !4541)
!4719 = !DILocation(line: 521, column: 60, scope: !4541)
!4720 = !DILocation(line: 521, column: 21, scope: !4541)
!4721 = !DILocation(line: 521, column: 24, scope: !4541)
!4722 = !DILocation(line: 521, column: 9, scope: !4541)
!4723 = !DILocation(line: 521, column: 12, scope: !4541)
!4724 = !DILocation(line: 521, column: 57, scope: !4541)
!4725 = !DILocation(line: 523, column: 36, scope: !4541)
!4726 = !DILocation(line: 523, column: 39, scope: !4541)
!4727 = !DILocation(line: 523, column: 60, scope: !4541)
!4728 = !DILocation(line: 523, column: 35, scope: !4541)
!4729 = !DILocation(line: 523, column: 73, scope: !4730)
!4730 = !DILexicalBlockFile(scope: !4541, file: !913, discriminator: 1)
!4731 = !DILocation(line: 523, column: 76, scope: !4730)
!4732 = !DILocation(line: 523, column: 35, scope: !4730)
!4733 = !DILocation(line: 523, column: 35, scope: !4734)
!4734 = !DILexicalBlockFile(scope: !4541, file: !913, discriminator: 2)
!4735 = !DILocation(line: 523, column: 35, scope: !4736)
!4736 = !DILexicalBlockFile(scope: !4541, file: !913, discriminator: 3)
!4737 = !DILocation(line: 523, column: 9, scope: !4736)
!4738 = !DILocation(line: 523, column: 12, scope: !4736)
!4739 = !DILocation(line: 523, column: 32, scope: !4736)
!4740 = !DILocation(line: 524, column: 9, scope: !4541)
!4741 = !DILocation(line: 526, column: 70, scope: !4541)
!4742 = !DILocation(line: 526, column: 68, scope: !4541)
!4743 = !DILocation(line: 526, column: 79, scope: !4541)
!4744 = !DILocation(line: 526, column: 89, scope: !4541)
!4745 = !DILocation(line: 526, column: 21, scope: !4541)
!4746 = !DILocation(line: 526, column: 24, scope: !4541)
!4747 = !DILocation(line: 526, column: 9, scope: !4541)
!4748 = !DILocation(line: 526, column: 12, scope: !4541)
!4749 = !DILocation(line: 526, column: 57, scope: !4541)
!4750 = !DILocation(line: 527, column: 69, scope: !4541)
!4751 = !DILocation(line: 527, column: 67, scope: !4541)
!4752 = !DILocation(line: 527, column: 78, scope: !4541)
!4753 = !DILocation(line: 527, column: 88, scope: !4541)
!4754 = !DILocation(line: 527, column: 21, scope: !4541)
!4755 = !DILocation(line: 527, column: 24, scope: !4541)
!4756 = !DILocation(line: 527, column: 9, scope: !4541)
!4757 = !DILocation(line: 527, column: 12, scope: !4541)
!4758 = !DILocation(line: 527, column: 57, scope: !4541)
!4759 = !DILocation(line: 528, column: 69, scope: !4541)
!4760 = !DILocation(line: 528, column: 67, scope: !4541)
!4761 = !DILocation(line: 528, column: 78, scope: !4541)
!4762 = !DILocation(line: 528, column: 88, scope: !4541)
!4763 = !DILocation(line: 528, column: 21, scope: !4541)
!4764 = !DILocation(line: 528, column: 24, scope: !4541)
!4765 = !DILocation(line: 528, column: 9, scope: !4541)
!4766 = !DILocation(line: 528, column: 12, scope: !4541)
!4767 = !DILocation(line: 528, column: 57, scope: !4541)
!4768 = !DILocation(line: 529, column: 68, scope: !4541)
!4769 = !DILocation(line: 529, column: 66, scope: !4541)
!4770 = !DILocation(line: 529, column: 77, scope: !4541)
!4771 = !DILocation(line: 529, column: 87, scope: !4541)
!4772 = !DILocation(line: 529, column: 21, scope: !4541)
!4773 = !DILocation(line: 529, column: 24, scope: !4541)
!4774 = !DILocation(line: 529, column: 9, scope: !4541)
!4775 = !DILocation(line: 529, column: 12, scope: !4541)
!4776 = !DILocation(line: 529, column: 57, scope: !4541)
!4777 = !DILocation(line: 531, column: 36, scope: !4541)
!4778 = !DILocation(line: 531, column: 39, scope: !4541)
!4779 = !DILocation(line: 531, column: 60, scope: !4541)
!4780 = !DILocation(line: 531, column: 35, scope: !4541)
!4781 = !DILocation(line: 531, column: 73, scope: !4730)
!4782 = !DILocation(line: 531, column: 76, scope: !4730)
!4783 = !DILocation(line: 531, column: 35, scope: !4730)
!4784 = !DILocation(line: 531, column: 35, scope: !4734)
!4785 = !DILocation(line: 531, column: 35, scope: !4736)
!4786 = !DILocation(line: 531, column: 9, scope: !4736)
!4787 = !DILocation(line: 531, column: 12, scope: !4736)
!4788 = !DILocation(line: 531, column: 32, scope: !4736)
!4789 = !DILocation(line: 532, column: 9, scope: !4541)
!4790 = !DILocation(line: 534, column: 70, scope: !4541)
!4791 = !DILocation(line: 534, column: 68, scope: !4541)
!4792 = !DILocation(line: 534, column: 79, scope: !4541)
!4793 = !DILocation(line: 534, column: 89, scope: !4541)
!4794 = !DILocation(line: 534, column: 21, scope: !4541)
!4795 = !DILocation(line: 534, column: 24, scope: !4541)
!4796 = !DILocation(line: 534, column: 9, scope: !4541)
!4797 = !DILocation(line: 534, column: 12, scope: !4541)
!4798 = !DILocation(line: 534, column: 57, scope: !4541)
!4799 = !DILocation(line: 535, column: 69, scope: !4541)
!4800 = !DILocation(line: 535, column: 67, scope: !4541)
!4801 = !DILocation(line: 535, column: 78, scope: !4541)
!4802 = !DILocation(line: 535, column: 88, scope: !4541)
!4803 = !DILocation(line: 535, column: 21, scope: !4541)
!4804 = !DILocation(line: 535, column: 24, scope: !4541)
!4805 = !DILocation(line: 535, column: 9, scope: !4541)
!4806 = !DILocation(line: 535, column: 12, scope: !4541)
!4807 = !DILocation(line: 535, column: 57, scope: !4541)
!4808 = !DILocation(line: 536, column: 69, scope: !4541)
!4809 = !DILocation(line: 536, column: 67, scope: !4541)
!4810 = !DILocation(line: 536, column: 78, scope: !4541)
!4811 = !DILocation(line: 536, column: 88, scope: !4541)
!4812 = !DILocation(line: 536, column: 21, scope: !4541)
!4813 = !DILocation(line: 536, column: 24, scope: !4541)
!4814 = !DILocation(line: 536, column: 9, scope: !4541)
!4815 = !DILocation(line: 536, column: 12, scope: !4541)
!4816 = !DILocation(line: 536, column: 57, scope: !4541)
!4817 = !DILocation(line: 537, column: 68, scope: !4541)
!4818 = !DILocation(line: 537, column: 66, scope: !4541)
!4819 = !DILocation(line: 537, column: 77, scope: !4541)
!4820 = !DILocation(line: 537, column: 87, scope: !4541)
!4821 = !DILocation(line: 537, column: 21, scope: !4541)
!4822 = !DILocation(line: 537, column: 24, scope: !4541)
!4823 = !DILocation(line: 537, column: 9, scope: !4541)
!4824 = !DILocation(line: 537, column: 12, scope: !4541)
!4825 = !DILocation(line: 537, column: 57, scope: !4541)
!4826 = !DILocation(line: 539, column: 36, scope: !4541)
!4827 = !DILocation(line: 539, column: 39, scope: !4541)
!4828 = !DILocation(line: 539, column: 60, scope: !4541)
!4829 = !DILocation(line: 539, column: 35, scope: !4541)
!4830 = !DILocation(line: 539, column: 69, scope: !4730)
!4831 = !DILocation(line: 539, column: 72, scope: !4730)
!4832 = !DILocation(line: 539, column: 35, scope: !4730)
!4833 = !DILocation(line: 539, column: 35, scope: !4734)
!4834 = !DILocation(line: 539, column: 35, scope: !4736)
!4835 = !DILocation(line: 539, column: 9, scope: !4736)
!4836 = !DILocation(line: 539, column: 12, scope: !4736)
!4837 = !DILocation(line: 539, column: 32, scope: !4736)
!4838 = !DILocation(line: 540, column: 9, scope: !4541)
!4839 = !DILocation(line: 544, column: 1, scope: !4527)
!4840 = distinct !DISubprogram(name: "x8_update_predictions", scope: !913, file: !913, line: 380, type: !4528, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !916)
!4841 = !DILocalVariable(name: "w", arg: 1, scope: !4840, file: !913, line: 380, type: !977)
!4842 = !DILocation(line: 380, column: 57, scope: !4840)
!4843 = !DILocalVariable(name: "orient", arg: 2, scope: !4840, file: !913, line: 380, type: !1107)
!4844 = !DILocation(line: 380, column: 70, scope: !4840)
!4845 = !DILocalVariable(name: "est_run", arg: 3, scope: !4840, file: !913, line: 381, type: !1107)
!4846 = !DILocation(line: 381, column: 45, scope: !4840)
!4847 = !DILocation(line: 383, column: 57, scope: !4840)
!4848 = !DILocation(line: 383, column: 65, scope: !4840)
!4849 = !DILocation(line: 383, column: 78, scope: !4840)
!4850 = !DILocation(line: 383, column: 85, scope: !4840)
!4851 = !DILocation(line: 383, column: 75, scope: !4840)
!4852 = !DILocation(line: 383, column: 71, scope: !4840)
!4853 = !DILocation(line: 383, column: 98, scope: !4840)
!4854 = !DILocation(line: 383, column: 105, scope: !4840)
!4855 = !DILocation(line: 383, column: 95, scope: !4840)
!4856 = !DILocation(line: 383, column: 91, scope: !4840)
!4857 = !DILocation(line: 383, column: 56, scope: !4840)
!4858 = !DILocation(line: 383, column: 25, scope: !4840)
!4859 = !DILocation(line: 383, column: 28, scope: !4840)
!4860 = !DILocation(line: 383, column: 33, scope: !4840)
!4861 = !DILocation(line: 383, column: 40, scope: !4840)
!4862 = !DILocation(line: 383, column: 43, scope: !4840)
!4863 = !DILocation(line: 383, column: 48, scope: !4840)
!4864 = !DILocation(line: 383, column: 37, scope: !4840)
!4865 = !DILocation(line: 383, column: 5, scope: !4840)
!4866 = !DILocation(line: 383, column: 8, scope: !4840)
!4867 = !DILocation(line: 383, column: 54, scope: !4840)
!4868 = !DILocation(line: 388, column: 1, scope: !4840)
