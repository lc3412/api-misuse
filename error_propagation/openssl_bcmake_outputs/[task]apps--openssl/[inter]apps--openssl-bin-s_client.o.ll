; ModuleID = '/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl/[inter]apps--openssl-bin-s_client.o.i'
source_filename = "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl/[inter]apps--openssl-bin-s_client.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.options_st = type { i8*, i32, i32, i8* }
%struct.srp_arg_st = type { i8*, i8*, i32, i32, i32, i32 }
%struct.bio_st = type opaque
%struct.verify_options_st = type { i32, i32, i32, i32 }
%struct.string_int_pair_st = type { i8*, i32 }
%struct.tlsextnextprotoctx_st = type { i8*, i64, i32 }
%struct.ssl_session_st = type opaque
%struct.tlsa_field = type { i8*, i8*, i64 (i8**, i8*)* }
%struct.evp_pkey_st = type opaque
%struct.ssl_st = type opaque
%struct.ssl_ctx_st = type opaque
%struct.stack_st_X509 = type opaque
%struct.x509_st = type opaque
%struct.X509_VERIFY_PARAM_st = type opaque
%struct.ssl_excert_st = type opaque
%struct.ssl_conf_ctx_st = type opaque
%struct.stack_st_OPENSSL_STRING = type opaque
%struct.stack_st_X509_CRL = type opaque
%struct.ssl_method_st = type opaque
%struct.timeval = type { i64, i64 }
%struct.fd_set = type { [16 x i64] }
%struct.engine_st = type opaque
%struct.tlsextctx_st = type { %struct.bio_st*, i32 }
%struct.X509_crl_st = type opaque
%struct.stack_st_X509_NAME = type opaque
%union.BIO_sock_info_u = type { %union.bio_addr_st* }
%union.bio_addr_st = type opaque
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.conf_st = type { %struct.conf_method_st*, i8*, %struct.lhash_st_CONF_VALUE* }
%struct.conf_method_st = type { i8*, %struct.conf_st* (%struct.conf_method_st*)*, i32 (%struct.conf_st*)*, i32 (%struct.conf_st*)*, i32 (%struct.conf_st*)*, i32 (%struct.conf_st*, %struct.bio_st*, i64*)*, i32 (%struct.conf_st*, %struct.bio_st*)*, i32 (%struct.conf_st*, i8)*, i32 (%struct.conf_st*, i8)*, i32 (%struct.conf_st*, i8*, i64*)* }
%struct.lhash_st_CONF_VALUE = type { %union.lh_CONF_VALUE_dummy }
%union.lh_CONF_VALUE_dummy = type { i8* }
%struct.bio_method_st = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.stack_st = type opaque
%struct.X509_name_st = type opaque
%struct.evp_md_st = type opaque
%struct.ssl_cipher_st = type opaque
%struct.x509_store_ctx_st = type opaque
%struct.pw_cb_data = type { i8*, i8* }
%struct.bignum_st = type opaque
%struct.ocsp_response_st = type opaque
%struct.comp_method_st = type opaque
%struct.stack_st_SCT = type opaque
%struct.ctlog_store_st = type opaque
%struct.sct_st = type opaque
%struct.srtp_protection_profile_st = type { i8*, i64 }
%struct.bignum_ctx = type opaque
%struct.bn_gencb_st = type opaque

@tls13_aes128gcmsha256_id = constant [2 x i8] c"\13\01", align 1
@tls13_aes256gcmsha384_id = constant [2 x i8] c"\13\02", align 1
@.str = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"Display this summary\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"host\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"Use -connect instead\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"connect\00", align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"TCP/IP where to connect (default is :4433)\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"bind\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"bind local address for connection\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"proxy\00", align 1
@.str.10 = private unnamed_addr constant [50 x i8] c"Connect to via specified proxy to the real server\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"proxy_user\00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c"UserID for proxy authentication\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"proxy_pass\00", align 1
@.str.14 = private unnamed_addr constant [37 x i8] c"Proxy authentication password source\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.16 = private unnamed_addr constant [46 x i8] c"Connect over the specified Unix-domain socket\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"Use IPv4 only\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"6\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"Use IPv6 only\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"verify\00", align 1
@.str.22 = private unnamed_addr constant [38 x i8] c"Turn on peer certificate verification\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"cert\00", align 1
@.str.24 = private unnamed_addr constant [44 x i8] c"Certificate file to use, PEM format assumed\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"certform\00", align 1
@.str.26 = private unnamed_addr constant [44 x i8] c"Certificate format (PEM or DER) PEM default\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"nameopt\00", align 1
@.str.28 = private unnamed_addr constant [33 x i8] c"Various certificate name options\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.30 = private unnamed_addr constant [46 x i8] c"Private key file to use, if not in -cert file\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"keyform\00", align 1
@.str.32 = private unnamed_addr constant [44 x i8] c"Key format (PEM, DER or engine) PEM default\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"pass\00", align 1
@.str.34 = private unnamed_addr constant [36 x i8] c"Private key file pass phrase source\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"CApath\00", align 1
@.str.36 = private unnamed_addr constant [29 x i8] c"PEM format directory of CA's\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"CAfile\00", align 1
@.str.38 = private unnamed_addr constant [24 x i8] c"PEM format file of CA's\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"no-CAfile\00", align 1
@.str.40 = private unnamed_addr constant [42 x i8] c"Do not load the default certificates file\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"no-CApath\00", align 1
@.str.42 = private unnamed_addr constant [65 x i8] c"Do not load certificates from the default certificates directory\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"requestCAfile\00", align 1
@.str.44 = private unnamed_addr constant [50 x i8] c"PEM format file of CA names to send to the server\00", align 1
@.str.45 = private unnamed_addr constant [17 x i8] c"dane_tlsa_domain\00", align 1
@.str.46 = private unnamed_addr constant [22 x i8] c"DANE TLSA base domain\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"dane_tlsa_rrdata\00", align 1
@.str.48 = private unnamed_addr constant [35 x i8] c"DANE TLSA rrdata presentation form\00", align 1
@.str.49 = private unnamed_addr constant [22 x i8] c"dane_ee_no_namechecks\00", align 1
@.str.50 = private unnamed_addr constant [58 x i8] c"Disable name checks when matching DANE-EE(3) TLSA records\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"reconnect\00", align 1
@.str.52 = private unnamed_addr constant [57 x i8] c"Drop and re-make the connection with the same Session-ID\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"showcerts\00", align 1
@.str.54 = private unnamed_addr constant [41 x i8] c"Show all certificates sent by the server\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.56 = private unnamed_addr constant [13 x i8] c"Extra output\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"msg\00", align 1
@.str.58 = private unnamed_addr constant [23 x i8] c"Show protocol messages\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"msgfile\00", align 1
@.str.60 = private unnamed_addr constant [57 x i8] c"File to send output of -msg or -trace, instead of stdout\00", align 1
@.str.61 = private unnamed_addr constant [10 x i8] c"nbio_test\00", align 1
@.str.62 = private unnamed_addr constant [26 x i8] c"More ssl protocol testing\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"state\00", align 1
@.str.64 = private unnamed_addr constant [21 x i8] c"Print the ssl states\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"crlf\00", align 1
@.str.66 = private unnamed_addr constant [35 x i8] c"Convert LF from terminal into CRLF\00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"quiet\00", align 1
@.str.68 = private unnamed_addr constant [19 x i8] c"No s_client output\00", align 1
@.str.69 = private unnamed_addr constant [8 x i8] c"ign_eof\00", align 1
@.str.70 = private unnamed_addr constant [39 x i8] c"Ignore input eof (default when -quiet)\00", align 1
@.str.71 = private unnamed_addr constant [11 x i8] c"no_ign_eof\00", align 1
@.str.72 = private unnamed_addr constant [23 x i8] c"Don't ignore input eof\00", align 1
@.str.73 = private unnamed_addr constant [9 x i8] c"starttls\00", align 1
@.str.74 = private unnamed_addr constant [57 x i8] c"Use the appropriate STARTTLS command before starting TLS\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"xmpphost\00", align 1
@.str.76 = private unnamed_addr constant [52 x i8] c"Alias of -name option for \22-starttls xmpp[-server]\22\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"rand\00", align 1
@.str.78 = private unnamed_addr constant [50 x i8] c"Load the file(s) into the random number generator\00", align 1
@.str.79 = private unnamed_addr constant [10 x i8] c"writerand\00", align 1
@.str.80 = private unnamed_addr constant [40 x i8] c"Write random data to the specified file\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"sess_out\00", align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"File to write SSL session to\00", align 1
@.str.83 = private unnamed_addr constant [8 x i8] c"sess_in\00", align 1
@.str.84 = private unnamed_addr constant [30 x i8] c"File to read SSL session from\00", align 1
@.str.85 = private unnamed_addr constant [9 x i8] c"use_srtp\00", align 1
@.str.86 = private unnamed_addr constant [62 x i8] c"Offer SRTP key management with a colon-separated profile list\00", align 1
@.str.87 = private unnamed_addr constant [13 x i8] c"keymatexport\00", align 1
@.str.88 = private unnamed_addr constant [35 x i8] c"Export keying material using label\00", align 1
@.str.89 = private unnamed_addr constant [16 x i8] c"keymatexportlen\00", align 1
@.str.90 = private unnamed_addr constant [49 x i8] c"Export len bytes of keying material (default 20)\00", align 1
@.str.91 = private unnamed_addr constant [11 x i8] c"maxfraglen\00", align 1
@.str.92 = private unnamed_addr constant [82 x i8] c"Enable Maximum Fragment Length Negotiation (len values: 512, 1024, 2048 and 4096)\00", align 1
@.str.93 = private unnamed_addr constant [14 x i8] c"fallback_scsv\00", align 1
@.str.94 = private unnamed_addr constant [23 x i8] c"Send the fallback SCSV\00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.96 = private unnamed_addr constant [84 x i8] c"Hostname to use for \22-starttls lmtp\22, \22-starttls smtp\22 or \22-starttls xmpp[-server]\22\00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"CRL\00", align 1
@.str.98 = private unnamed_addr constant [16 x i8] c"CRL file to use\00", align 1
@.str.99 = private unnamed_addr constant [13 x i8] c"crl_download\00", align 1
@.str.100 = private unnamed_addr constant [38 x i8] c"Download CRL from distribution points\00", align 1
@.str.101 = private unnamed_addr constant [8 x i8] c"CRLform\00", align 1
@.str.102 = private unnamed_addr constant [39 x i8] c"CRL format (PEM or DER) PEM is default\00", align 1
@.str.103 = private unnamed_addr constant [20 x i8] c"verify_return_error\00", align 1
@.str.104 = private unnamed_addr constant [39 x i8] c"Close connection on verification error\00", align 1
@.str.105 = private unnamed_addr constant [13 x i8] c"verify_quiet\00", align 1
@.str.106 = private unnamed_addr constant [33 x i8] c"Restrict verify output to errors\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"brief\00", align 1
@.str.108 = private unnamed_addr constant [58 x i8] c"Restrict output to brief summary of connection parameters\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"prexit\00", align 1
@.str.110 = private unnamed_addr constant [49 x i8] c"Print session information when the program exits\00", align 1
@.str.111 = private unnamed_addr constant [15 x i8] c"security_debug\00", align 1
@.str.112 = private unnamed_addr constant [31 x i8] c"Enable security debug messages\00", align 1
@.str.113 = private unnamed_addr constant [23 x i8] c"security_debug_verbose\00", align 1
@.str.114 = private unnamed_addr constant [34 x i8] c"Output more security debug output\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"cert_chain\00", align 1
@.str.116 = private unnamed_addr constant [39 x i8] c"Certificate chain file (in PEM format)\00", align 1
@.str.117 = private unnamed_addr constant [12 x i8] c"chainCApath\00", align 1
@.str.118 = private unnamed_addr constant [64 x i8] c"Use dir as certificate store path to build CA certificate chain\00", align 1
@.str.119 = private unnamed_addr constant [13 x i8] c"verifyCApath\00", align 1
@.str.120 = private unnamed_addr constant [59 x i8] c"Use dir as certificate store path to verify CA certificate\00", align 1
@.str.121 = private unnamed_addr constant [12 x i8] c"build_chain\00", align 1
@.str.122 = private unnamed_addr constant [24 x i8] c"Build certificate chain\00", align 1
@.str.123 = private unnamed_addr constant [12 x i8] c"chainCAfile\00", align 1
@.str.124 = private unnamed_addr constant [43 x i8] c"CA file for certificate chain (PEM format)\00", align 1
@.str.125 = private unnamed_addr constant [13 x i8] c"verifyCAfile\00", align 1
@.str.126 = private unnamed_addr constant [50 x i8] c"CA file for certificate verification (PEM format)\00", align 1
@.str.127 = private unnamed_addr constant [11 x i8] c"nocommands\00", align 1
@.str.128 = private unnamed_addr constant [39 x i8] c"Do not use interactive command letters\00", align 1
@.str.129 = private unnamed_addr constant [11 x i8] c"servername\00", align 1
@.str.130 = private unnamed_addr constant [60 x i8] c"Set TLS extension servername (SNI) in ClientHello (default)\00", align 1
@.str.131 = private unnamed_addr constant [13 x i8] c"noservername\00", align 1
@.str.132 = private unnamed_addr constant [63 x i8] c"Do not send the server name (SNI) extension in the ClientHello\00", align 1
@.str.133 = private unnamed_addr constant [12 x i8] c"tlsextdebug\00", align 1
@.str.134 = private unnamed_addr constant [40 x i8] c"Hex dump of all TLS extensions received\00", align 1
@.str.135 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.136 = private unnamed_addr constant [39 x i8] c"Request certificate status from server\00", align 1
@.str.137 = private unnamed_addr constant [11 x i8] c"serverinfo\00", align 1
@.str.138 = private unnamed_addr constant [67 x i8] c"types  Send empty ClientHello extensions (comma-separated numbers)\00", align 1
@.str.139 = private unnamed_addr constant [5 x i8] c"alpn\00", align 1
@.str.140 = private unnamed_addr constant [84 x i8] c"Enable ALPN extension, considering named protocols supported (comma-separated list)\00", align 1
@.str.141 = private unnamed_addr constant [6 x i8] c"async\00", align 1
@.str.142 = private unnamed_addr constant [31 x i8] c"Support asynchronous operation\00", align 1
@.str.143 = private unnamed_addr constant [11 x i8] c"ssl_config\00", align 1
@.str.144 = private unnamed_addr constant [33 x i8] c"Use specified configuration file\00", align 1
@.str.145 = private unnamed_addr constant [14 x i8] c"max_send_frag\00", align 1
@.str.146 = private unnamed_addr constant [29 x i8] c"Maximum Size of send frames \00", align 1
@.str.147 = private unnamed_addr constant [16 x i8] c"split_send_frag\00", align 1
@.str.148 = private unnamed_addr constant [46 x i8] c"Size used to split data for encrypt pipelines\00", align 1
@.str.149 = private unnamed_addr constant [14 x i8] c"max_pipelines\00", align 1
@.str.150 = private unnamed_addr constant [55 x i8] c"Maximum number of encrypt/decrypt pipelines to be used\00", align 1
@.str.151 = private unnamed_addr constant [9 x i8] c"read_buf\00", align 1
@.str.152 = private unnamed_addr constant [52 x i8] c"Default read buffer size to be used for connections\00", align 1
@.str.153 = private unnamed_addr constant [8 x i8] c"no_ssl3\00", align 1
@.str.154 = private unnamed_addr constant [19 x i8] c"Just disable SSLv3\00", align 1
@.str.155 = private unnamed_addr constant [8 x i8] c"no_tls1\00", align 1
@.str.156 = private unnamed_addr constant [19 x i8] c"Just disable TLSv1\00", align 1
@.str.157 = private unnamed_addr constant [10 x i8] c"no_tls1_1\00", align 1
@.str.158 = private unnamed_addr constant [21 x i8] c"Just disable TLSv1.1\00", align 1
@.str.159 = private unnamed_addr constant [10 x i8] c"no_tls1_2\00", align 1
@.str.160 = private unnamed_addr constant [21 x i8] c"Just disable TLSv1.2\00", align 1
@.str.161 = private unnamed_addr constant [10 x i8] c"no_tls1_3\00", align 1
@.str.162 = private unnamed_addr constant [21 x i8] c"Just disable TLSv1.3\00", align 1
@.str.163 = private unnamed_addr constant [5 x i8] c"bugs\00", align 1
@.str.164 = private unnamed_addr constant [30 x i8] c"Turn on SSL bug compatibility\00", align 1
@.str.165 = private unnamed_addr constant [8 x i8] c"no_comp\00", align 1
@.str.166 = private unnamed_addr constant [38 x i8] c"Disable SSL/TLS compression (default)\00", align 1
@.str.167 = private unnamed_addr constant [5 x i8] c"comp\00", align 1
@.str.168 = private unnamed_addr constant [30 x i8] c"Use SSL/TLS-level compression\00", align 1
@.str.169 = private unnamed_addr constant [10 x i8] c"no_ticket\00", align 1
@.str.170 = private unnamed_addr constant [35 x i8] c"Disable use of TLS session tickets\00", align 1
@.str.171 = private unnamed_addr constant [11 x i8] c"serverpref\00", align 1
@.str.172 = private unnamed_addr constant [32 x i8] c"Use server's cipher preferences\00", align 1
@.str.173 = private unnamed_addr constant [21 x i8] c"legacy_renegotiation\00", align 1
@.str.174 = private unnamed_addr constant [47 x i8] c"Enable use of legacy renegotiation (dangerous)\00", align 1
@.str.175 = private unnamed_addr constant [17 x i8] c"no_renegotiation\00", align 1
@.str.176 = private unnamed_addr constant [27 x i8] c"Disable all renegotiation.\00", align 1
@.str.177 = private unnamed_addr constant [22 x i8] c"legacy_server_connect\00", align 1
@.str.178 = private unnamed_addr constant [58 x i8] c"Allow initial connection to servers that don't support RI\00", align 1
@.str.179 = private unnamed_addr constant [23 x i8] c"no_resumption_on_reneg\00", align 1
@.str.180 = private unnamed_addr constant [45 x i8] c"Disallow session resumption on renegotiation\00", align 1
@.str.181 = private unnamed_addr constant [25 x i8] c"no_legacy_server_connect\00", align 1
@.str.182 = private unnamed_addr constant [61 x i8] c"Disallow initial connection to servers that don't support RI\00", align 1
@.str.183 = private unnamed_addr constant [17 x i8] c"allow_no_dhe_kex\00", align 1
@.str.184 = private unnamed_addr constant [62 x i8] c"In TLSv1.3 allow non-(ec)dhe based key exchange on resumption\00", align 1
@.str.185 = private unnamed_addr constant [18 x i8] c"prioritize_chacha\00", align 1
@.str.186 = private unnamed_addr constant [52 x i8] c"Prioritize ChaCha ciphers when preferred by clients\00", align 1
@.str.187 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.188 = private unnamed_addr constant [54 x i8] c"Enforce strict certificate checks as per TLS standard\00", align 1
@.str.189 = private unnamed_addr constant [8 x i8] c"sigalgs\00", align 1
@.str.190 = private unnamed_addr constant [55 x i8] c"Signature algorithms to support (colon-separated list)\00", align 1
@.str.191 = private unnamed_addr constant [15 x i8] c"client_sigalgs\00", align 1
@.str.192 = private unnamed_addr constant [93 x i8] c"Signature algorithms to support for client certificate authentication (colon-separated list)\00", align 1
@.str.193 = private unnamed_addr constant [7 x i8] c"groups\00", align 1
@.str.194 = private unnamed_addr constant [43 x i8] c"Groups to advertise (colon-separated list)\00", align 1
@.str.195 = private unnamed_addr constant [7 x i8] c"curves\00", align 1
@.str.196 = private unnamed_addr constant [12 x i8] c"named_curve\00", align 1
@.str.197 = private unnamed_addr constant [49 x i8] c"Elliptic curve used for ECDHE (server-side only)\00", align 1
@.str.198 = private unnamed_addr constant [7 x i8] c"cipher\00", align 1
@.str.199 = private unnamed_addr constant [49 x i8] c"Specify TLSv1.2 and below cipher list to be used\00", align 1
@.str.200 = private unnamed_addr constant [13 x i8] c"ciphersuites\00", align 1
@.str.201 = private unnamed_addr constant [40 x i8] c"Specify TLSv1.3 ciphersuites to be used\00", align 1
@.str.202 = private unnamed_addr constant [13 x i8] c"min_protocol\00", align 1
@.str.203 = private unnamed_addr constant [48 x i8] c"Specify the minimum protocol version to be used\00", align 1
@.str.204 = private unnamed_addr constant [13 x i8] c"max_protocol\00", align 1
@.str.205 = private unnamed_addr constant [48 x i8] c"Specify the maximum protocol version to be used\00", align 1
@.str.206 = private unnamed_addr constant [15 x i8] c"record_padding\00", align 1
@.str.207 = private unnamed_addr constant [38 x i8] c"Block size to pad TLS 1.3 records to.\00", align 1
@.str.208 = private unnamed_addr constant [22 x i8] c"debug_broken_protocol\00", align 1
@.str.209 = private unnamed_addr constant [62 x i8] c"Perform all sorts of protocol violations for testing purposes\00", align 1
@.str.210 = private unnamed_addr constant [13 x i8] c"no_middlebox\00", align 1
@.str.211 = private unnamed_addr constant [38 x i8] c"Disable TLSv1.3 middlebox compat mode\00", align 1
@.str.212 = private unnamed_addr constant [7 x i8] c"policy\00", align 1
@.str.213 = private unnamed_addr constant [41 x i8] c"adds policy to the acceptable policy set\00", align 1
@.str.214 = private unnamed_addr constant [8 x i8] c"purpose\00", align 1
@.str.215 = private unnamed_addr constant [26 x i8] c"certificate chain purpose\00", align 1
@.str.216 = private unnamed_addr constant [12 x i8] c"verify_name\00", align 1
@.str.217 = private unnamed_addr constant [25 x i8] c"verification policy name\00", align 1
@.str.218 = private unnamed_addr constant [13 x i8] c"verify_depth\00", align 1
@.str.219 = private unnamed_addr constant [18 x i8] c"chain depth limit\00", align 1
@.str.220 = private unnamed_addr constant [11 x i8] c"auth_level\00", align 1
@.str.221 = private unnamed_addr constant [36 x i8] c"chain authentication security level\00", align 1
@.str.222 = private unnamed_addr constant [7 x i8] c"attime\00", align 1
@.str.223 = private unnamed_addr constant [24 x i8] c"verification epoch time\00", align 1
@.str.224 = private unnamed_addr constant [16 x i8] c"verify_hostname\00", align 1
@.str.225 = private unnamed_addr constant [23 x i8] c"expected peer hostname\00", align 1
@.str.226 = private unnamed_addr constant [13 x i8] c"verify_email\00", align 1
@.str.227 = private unnamed_addr constant [20 x i8] c"expected peer email\00", align 1
@.str.228 = private unnamed_addr constant [10 x i8] c"verify_ip\00", align 1
@.str.229 = private unnamed_addr constant [25 x i8] c"expected peer IP address\00", align 1
@.str.230 = private unnamed_addr constant [16 x i8] c"ignore_critical\00", align 1
@.str.231 = private unnamed_addr constant [37 x i8] c"permit unhandled critical extensions\00", align 1
@.str.232 = private unnamed_addr constant [14 x i8] c"issuer_checks\00", align 1
@.str.233 = private unnamed_addr constant [13 x i8] c"(deprecated)\00", align 1
@.str.234 = private unnamed_addr constant [10 x i8] c"crl_check\00", align 1
@.str.235 = private unnamed_addr constant [34 x i8] c"check leaf certificate revocation\00", align 1
@.str.236 = private unnamed_addr constant [14 x i8] c"crl_check_all\00", align 1
@.str.237 = private unnamed_addr constant [28 x i8] c"check full chain revocation\00", align 1
@.str.238 = private unnamed_addr constant [13 x i8] c"policy_check\00", align 1
@.str.239 = private unnamed_addr constant [30 x i8] c"perform rfc5280 policy checks\00", align 1
@.str.240 = private unnamed_addr constant [16 x i8] c"explicit_policy\00", align 1
@.str.241 = private unnamed_addr constant [44 x i8] c"set policy variable require-explicit-policy\00", align 1
@.str.242 = private unnamed_addr constant [12 x i8] c"inhibit_any\00", align 1
@.str.243 = private unnamed_addr constant [39 x i8] c"set policy variable inhibit-any-policy\00", align 1
@.str.244 = private unnamed_addr constant [12 x i8] c"inhibit_map\00", align 1
@.str.245 = private unnamed_addr constant [43 x i8] c"set policy variable inhibit-policy-mapping\00", align 1
@.str.246 = private unnamed_addr constant [12 x i8] c"x509_strict\00", align 1
@.str.247 = private unnamed_addr constant [47 x i8] c"disable certificate compatibility work-arounds\00", align 1
@.str.248 = private unnamed_addr constant [13 x i8] c"extended_crl\00", align 1
@.str.249 = private unnamed_addr constant [29 x i8] c"enable extended CRL features\00", align 1
@.str.250 = private unnamed_addr constant [11 x i8] c"use_deltas\00", align 1
@.str.251 = private unnamed_addr constant [15 x i8] c"use delta CRLs\00", align 1
@.str.252 = private unnamed_addr constant [13 x i8] c"policy_print\00", align 1
@.str.253 = private unnamed_addr constant [36 x i8] c"print policy processing diagnostics\00", align 1
@.str.254 = private unnamed_addr constant [13 x i8] c"check_ss_sig\00", align 1
@.str.255 = private unnamed_addr constant [30 x i8] c"check root CA self-signatures\00", align 1
@.str.256 = private unnamed_addr constant [14 x i8] c"trusted_first\00", align 1
@.str.257 = private unnamed_addr constant [35 x i8] c"search trust store first (default)\00", align 1
@.str.258 = private unnamed_addr constant [16 x i8] c"suiteB_128_only\00", align 1
@.str.259 = private unnamed_addr constant [26 x i8] c"Suite B 128-bit-only mode\00", align 1
@.str.260 = private unnamed_addr constant [11 x i8] c"suiteB_128\00", align 1
@.str.261 = private unnamed_addr constant [49 x i8] c"Suite B 128-bit mode allowing 192-bit algorithms\00", align 1
@.str.262 = private unnamed_addr constant [11 x i8] c"suiteB_192\00", align 1
@.str.263 = private unnamed_addr constant [26 x i8] c"Suite B 192-bit-only mode\00", align 1
@.str.264 = private unnamed_addr constant [14 x i8] c"partial_chain\00", align 1
@.str.265 = private unnamed_addr constant [55 x i8] c"accept chains anchored by intermediate trust-store CAs\00", align 1
@.str.266 = private unnamed_addr constant [14 x i8] c"no_alt_chains\00", align 1
@.str.267 = private unnamed_addr constant [14 x i8] c"no_check_time\00", align 1
@.str.268 = private unnamed_addr constant [33 x i8] c"ignore certificate validity time\00", align 1
@.str.269 = private unnamed_addr constant [18 x i8] c"allow_proxy_certs\00", align 1
@.str.270 = private unnamed_addr constant [36 x i8] c"allow the use of proxy certificates\00", align 1
@.str.271 = private unnamed_addr constant [5 x i8] c"xkey\00", align 1
@.str.272 = private unnamed_addr constant [30 x i8] c"key for Extended certificates\00", align 1
@.str.273 = private unnamed_addr constant [6 x i8] c"xcert\00", align 1
@.str.274 = private unnamed_addr constant [31 x i8] c"cert for Extended certificates\00", align 1
@.str.275 = private unnamed_addr constant [7 x i8] c"xchain\00", align 1
@.str.276 = private unnamed_addr constant [32 x i8] c"chain for Extended certificates\00", align 1
@.str.277 = private unnamed_addr constant [13 x i8] c"xchain_build\00", align 1
@.str.278 = private unnamed_addr constant [54 x i8] c"build certificate chain for the extended certificates\00", align 1
@.str.279 = private unnamed_addr constant [10 x i8] c"xcertform\00", align 1
@.str.280 = private unnamed_addr constant [57 x i8] c"format of Extended certificate (PEM or DER) PEM default \00", align 1
@.str.281 = private unnamed_addr constant [9 x i8] c"xkeyform\00", align 1
@.str.282 = private unnamed_addr constant [62 x i8] c"format of Extended certificate's key (PEM or DER) PEM default\00", align 1
@.str.283 = private unnamed_addr constant [5 x i8] c"tls1\00", align 1
@.str.284 = private unnamed_addr constant [15 x i8] c"Just use TLSv1\00", align 1
@.str.285 = private unnamed_addr constant [7 x i8] c"tls1_1\00", align 1
@.str.286 = private unnamed_addr constant [17 x i8] c"Just use TLSv1.1\00", align 1
@.str.287 = private unnamed_addr constant [7 x i8] c"tls1_2\00", align 1
@.str.288 = private unnamed_addr constant [17 x i8] c"Just use TLSv1.2\00", align 1
@.str.289 = private unnamed_addr constant [7 x i8] c"tls1_3\00", align 1
@.str.290 = private unnamed_addr constant [17 x i8] c"Just use TLSv1.3\00", align 1
@.str.291 = private unnamed_addr constant [5 x i8] c"dtls\00", align 1
@.str.292 = private unnamed_addr constant [24 x i8] c"Use any version of DTLS\00", align 1
@.str.293 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@.str.294 = private unnamed_addr constant [48 x i8] c"Enable send/receive timeout on DTLS connections\00", align 1
@.str.295 = private unnamed_addr constant [4 x i8] c"mtu\00", align 1
@.str.296 = private unnamed_addr constant [23 x i8] c"Set the link layer MTU\00", align 1
@.str.297 = private unnamed_addr constant [6 x i8] c"dtls1\00", align 1
@.str.298 = private unnamed_addr constant [16 x i8] c"Just use DTLSv1\00", align 1
@.str.299 = private unnamed_addr constant [8 x i8] c"dtls1_2\00", align 1
@.str.300 = private unnamed_addr constant [18 x i8] c"Just use DTLSv1.2\00", align 1
@.str.301 = private unnamed_addr constant [5 x i8] c"nbio\00", align 1
@.str.302 = private unnamed_addr constant [20 x i8] c"Use non-blocking IO\00", align 1
@.str.303 = private unnamed_addr constant [13 x i8] c"psk_identity\00", align 1
@.str.304 = private unnamed_addr constant [13 x i8] c"PSK identity\00", align 1
@.str.305 = private unnamed_addr constant [4 x i8] c"psk\00", align 1
@.str.306 = private unnamed_addr constant [24 x i8] c"PSK in hex (without 0x)\00", align 1
@.str.307 = private unnamed_addr constant [12 x i8] c"psk_session\00", align 1
@.str.308 = private unnamed_addr constant [34 x i8] c"File to read PSK SSL session from\00", align 1
@.str.309 = private unnamed_addr constant [8 x i8] c"srpuser\00", align 1
@.str.310 = private unnamed_addr constant [30 x i8] c"SRP authentication for 'user'\00", align 1
@.str.311 = private unnamed_addr constant [8 x i8] c"srppass\00", align 1
@.str.312 = private unnamed_addr constant [20 x i8] c"Password for 'user'\00", align 1
@.str.313 = private unnamed_addr constant [13 x i8] c"srp_lateuser\00", align 1
@.str.314 = private unnamed_addr constant [45 x i8] c"SRP username into second ClientHello message\00", align 1
@.str.315 = private unnamed_addr constant [15 x i8] c"srp_moregroups\00", align 1
@.str.316 = private unnamed_addr constant [42 x i8] c"Tolerate other than the known g N values.\00", align 1
@.str.317 = private unnamed_addr constant [13 x i8] c"srp_strength\00", align 1
@.str.318 = private unnamed_addr constant [29 x i8] c"Minimal length in bits for N\00", align 1
@.str.319 = private unnamed_addr constant [13 x i8] c"nextprotoneg\00", align 1
@.str.320 = private unnamed_addr constant [83 x i8] c"Enable NPN extension, considering named protocols supported (comma-separated list)\00", align 1
@.str.321 = private unnamed_addr constant [7 x i8] c"engine\00", align 1
@.str.322 = private unnamed_addr constant [39 x i8] c"Use engine, possibly a hardware device\00", align 1
@.str.323 = private unnamed_addr constant [18 x i8] c"ssl_client_engine\00", align 1
@.str.324 = private unnamed_addr constant [60 x i8] c"Specify engine to be used for client certificate operations\00", align 1
@.str.325 = private unnamed_addr constant [3 x i8] c"ct\00", align 1
@.str.326 = private unnamed_addr constant [52 x i8] c"Request and parse SCTs (also enables OCSP stapling)\00", align 1
@.str.327 = private unnamed_addr constant [5 x i8] c"noct\00", align 1
@.str.328 = private unnamed_addr constant [39 x i8] c"Do not request or parse SCTs (default)\00", align 1
@.str.329 = private unnamed_addr constant [10 x i8] c"ctlogfile\00", align 1
@.str.330 = private unnamed_addr constant [22 x i8] c"CT log list CONF file\00", align 1
@.str.331 = private unnamed_addr constant [11 x i8] c"keylogfile\00", align 1
@.str.332 = private unnamed_addr constant [26 x i8] c"Write TLS secrets to file\00", align 1
@.str.333 = private unnamed_addr constant [11 x i8] c"early_data\00", align 1
@.str.334 = private unnamed_addr constant [27 x i8] c"File to send as early data\00", align 1
@.str.335 = private unnamed_addr constant [11 x i8] c"enable_pha\00", align 1
@.str.336 = private unnamed_addr constant [37 x i8] c"Enable post-handshake-authentication\00", align 1
@s_client_options = constant [171 x %struct.options_st] [%struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32 1, i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 4, i32 115, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 112, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), i32 6, i32 115, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i32 7, i32 115, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), i32 3034, i32 115, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i32 0, i32 0), i32 3035, i32 115, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), i32 3036, i32 115, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), i32 8, i32 115, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.16, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i32 0, i32 0), i32 2, i32 45, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i32 0, i32 0), i32 3, i32 45, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i32 0, i32 0), i32 10, i32 112, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0), i32 12, i32 60, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0), i32 17, i32 70, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), i32 11, i32 115, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.28, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i32 69, i32 115, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.30, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i32 0, i32 0), i32 62, i32 69, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.32, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0), i32 63, i32 115, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.34, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0), i32 65, i32 47, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i32 72, i32 60, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i32 0, i32 0), i32 73, i32 45, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.40, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), i32 66, i32 45, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.42, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i32 0, i32 0), i32 94, i32 60, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.44, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i32 0, i32 0), i32 3037, i32 115, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i32 0, i32 0), i32 3041, i32 115, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.48, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.49, i32 0, i32 0), i32 3042, i32 45, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.50, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i32 0, i32 0), i32 70, i32 45, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.52, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i32 0, i32 0), i32 39, i32 45, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.54, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), i32 29, i32 45, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.56, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i32 0, i32 0), i32 33, i32 45, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.58, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i32 0, i32 0), i32 34, i32 62, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.60, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i32 0, i32 0), i32 40, i32 45, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.62, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 41, i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), i32 23, i32 45, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.66, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0), i32 24, i32 45, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.68, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i32 0, i32 0), i32 27, i32 45, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.70, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.71, i32 0, i32 0), i32 28, i32 45, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.72, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.73, i32 0, i32 0), i32 79, i32 115, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.74, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i32 9, i32 115, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.76, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i32 1501, i32 115, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.78, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i32 0, i32 0), i32 1502, i32 62, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.80, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0), i32 15, i32 62, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.83, i32 0, i32 0), i32 16, i32 60, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.84, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i32 0, i32 0), i32 83, i32 115, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.86, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87, i32 0, i32 0), i32 84, i32 115, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.88, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i32 0, i32 0), i32 85, i32 112, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.90, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.91, i32 0, i32 0), i32 87, i32 112, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.92, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.93, i32 0, i32 0), i32 3032, i32 45, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.94, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), i32 86, i32 115, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.96, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i32 0, i32 0), i32 13, i32 60, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.98, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i32 0, i32 0), i32 14, i32 45, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.100, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.101, i32 0, i32 0), i32 18, i32 70, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.102, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.103, i32 0, i32 0), i32 19, i32 45, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.104, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i32 0, i32 0), i32 20, i32 45, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.106, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i32 0, i32 0), i32 21, i32 45, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.108, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i32 0, i32 0), i32 22, i32 45, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.110, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.111, i32 0, i32 0), i32 37, i32 45, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.112, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.113, i32 0, i32 0), i32 38, i32 45, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.114, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.115, i32 0, i32 0), i32 64, i32 60, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.116, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.117, i32 0, i32 0), i32 67, i32 47, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.118, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.119, i32 0, i32 0), i32 68, i32 47, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.120, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.121, i32 0, i32 0), i32 71, i32 45, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.122, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.123, i32 0, i32 0), i32 74, i32 60, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.124, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.125, i32 0, i32 0), i32 75, i32 60, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.126, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i32 0, i32 0), i32 3033, i32 45, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.128, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.129, i32 0, i32 0), i32 80, i32 115, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.131, i32 0, i32 0), i32 81, i32 45, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.132, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.133, i32 0, i32 0), i32 30, i32 45, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.134, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.135, i32 0, i32 0), i32 31, i32 45, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.136, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.137, i32 0, i32 0), i32 78, i32 115, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.138, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.139, i32 0, i32 0), i32 77, i32 115, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.140, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.141, i32 0, i32 0), i32 82, i32 45, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.142, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.143, i32 0, i32 0), i32 51, i32 115, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.144, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.145, i32 0, i32 0), i32 88, i32 112, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.147, i32 0, i32 0), i32 89, i32 112, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.148, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.149, i32 0, i32 0), i32 90, i32 112, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.150, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.151, i32 0, i32 0), i32 91, i32 112, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.152, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.153, i32 0, i32 0), i32 3001, i32 45, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.154, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.155, i32 0, i32 0), i32 3002, i32 45, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.156, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.157, i32 0, i32 0), i32 3003, i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.158, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.159, i32 0, i32 0), i32 3004, i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.160, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.161, i32 0, i32 0), i32 3005, i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.162, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.163, i32 0, i32 0), i32 3006, i32 45, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.164, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.165, i32 0, i32 0), i32 3007, i32 45, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.166, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.167, i32 0, i32 0), i32 3026, i32 45, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.168, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.169, i32 0, i32 0), i32 3008, i32 45, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.170, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.171, i32 0, i32 0), i32 3009, i32 45, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.172, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.173, i32 0, i32 0), i32 3010, i32 45, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.174, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.175, i32 0, i32 0), i32 3029, i32 45, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.176, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.177, i32 0, i32 0), i32 3011, i32 45, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.178, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.179, i32 0, i32 0), i32 3012, i32 45, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.180, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.181, i32 0, i32 0), i32 3013, i32 45, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.182, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.183, i32 0, i32 0), i32 3014, i32 45, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.184, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.185, i32 0, i32 0), i32 3015, i32 45, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.186, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.187, i32 0, i32 0), i32 3016, i32 45, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.188, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.189, i32 0, i32 0), i32 3017, i32 115, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.190, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.191, i32 0, i32 0), i32 3018, i32 115, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.192, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.193, i32 0, i32 0), i32 3019, i32 115, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.194, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.195, i32 0, i32 0), i32 3020, i32 115, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.194, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.196, i32 0, i32 0), i32 3021, i32 115, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.197, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.198, i32 0, i32 0), i32 3022, i32 115, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.199, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.200, i32 0, i32 0), i32 3023, i32 115, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.201, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.202, i32 0, i32 0), i32 3027, i32 115, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.203, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.204, i32 0, i32 0), i32 3028, i32 115, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.205, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.206, i32 0, i32 0), i32 3024, i32 115, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.207, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.208, i32 0, i32 0), i32 3025, i32 45, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.209, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.210, i32 0, i32 0), i32 3030, i32 45, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.211, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.212, i32 0, i32 0), i32 2001, i32 115, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.213, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.214, i32 0, i32 0), i32 2002, i32 115, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.215, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.216, i32 0, i32 0), i32 2003, i32 115, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.217, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.218, i32 0, i32 0), i32 2004, i32 110, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.219, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.220, i32 0, i32 0), i32 2029, i32 110, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.221, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i32 0, i32 0), i32 2005, i32 77, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.223, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.224, i32 0, i32 0), i32 2006, i32 115, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.225, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.226, i32 0, i32 0), i32 2007, i32 115, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.227, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.228, i32 0, i32 0), i32 2008, i32 115, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.229, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.230, i32 0, i32 0), i32 2009, i32 45, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.231, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.232, i32 0, i32 0), i32 2010, i32 45, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.233, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.234, i32 0, i32 0), i32 2011, i32 45, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.235, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.236, i32 0, i32 0), i32 2012, i32 45, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.237, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.238, i32 0, i32 0), i32 2013, i32 45, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.239, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.240, i32 0, i32 0), i32 2014, i32 45, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.241, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.242, i32 0, i32 0), i32 2015, i32 45, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.243, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.244, i32 0, i32 0), i32 2016, i32 45, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.245, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.246, i32 0, i32 0), i32 2017, i32 45, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.247, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.248, i32 0, i32 0), i32 2018, i32 45, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.250, i32 0, i32 0), i32 2019, i32 45, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.251, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.252, i32 0, i32 0), i32 2020, i32 45, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.253, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.254, i32 0, i32 0), i32 2021, i32 45, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.255, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.256, i32 0, i32 0), i32 2022, i32 45, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.257, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.258, i32 0, i32 0), i32 2023, i32 45, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.259, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.260, i32 0, i32 0), i32 2024, i32 45, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.261, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.262, i32 0, i32 0), i32 2025, i32 45, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.263, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.264, i32 0, i32 0), i32 2026, i32 45, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.265, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.266, i32 0, i32 0), i32 2027, i32 45, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.233, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i32 0, i32 0), i32 2028, i32 45, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.268, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.269, i32 0, i32 0), i32 2030, i32 45, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.270, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.271, i32 0, i32 0), i32 1001, i32 60, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.272, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.273, i32 0, i32 0), i32 1002, i32 60, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.274, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.275, i32 0, i32 0), i32 1003, i32 60, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.276, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.277, i32 0, i32 0), i32 1004, i32 45, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.278, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.279, i32 0, i32 0), i32 1005, i32 70, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.280, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.281, i32 0, i32 0), i32 1006, i32 70, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.282, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.283, i32 0, i32 0), i32 55, i32 45, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.284, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.285, i32 0, i32 0), i32 54, i32 45, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.286, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.287, i32 0, i32 0), i32 53, i32 45, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.288, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.289, i32 0, i32 0), i32 52, i32 45, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.290, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.291, i32 0, i32 0), i32 56, i32 45, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.292, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.293, i32 0, i32 0), i32 60, i32 45, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.294, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i32 61, i32 112, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.296, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.297, i32 0, i32 0), i32 57, i32 45, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.298, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.299, i32 0, i32 0), i32 58, i32 45, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.300, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.301, i32 0, i32 0), i32 25, i32 45, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.302, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.303, i32 0, i32 0), i32 42, i32 115, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.304, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.305, i32 0, i32 0), i32 43, i32 115, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.306, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.307, i32 0, i32 0), i32 44, i32 60, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.308, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.309, i32 0, i32 0), i32 45, i32 115, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.310, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.311, i32 0, i32 0), i32 46, i32 115, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.312, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.313, i32 0, i32 0), i32 48, i32 45, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.314, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.315, i32 0, i32 0), i32 49, i32 45, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.316, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.317, i32 0, i32 0), i32 47, i32 112, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.318, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.319, i32 0, i32 0), i32 76, i32 115, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.320, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.321, i32 0, i32 0), i32 35, i32 115, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.322, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.323, i32 0, i32 0), i32 26, i32 115, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.324, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.325, i32 0, i32 0), i32 3038, i32 45, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.326, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.327, i32 0, i32 0), i32 3039, i32 45, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.328, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.329, i32 0, i32 0), i32 3040, i32 60, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.330, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.331, i32 0, i32 0), i32 92, i32 62, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.332, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.333, i32 0, i32 0), i32 93, i32 60, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.334, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.335, i32 0, i32 0), i32 3043, i32 45, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.336, i32 0, i32 0) }, %struct.options_st zeroinitializer], align 16
@.str.337 = private unnamed_addr constant [5 x i8] c"4433\00", align 1
@.str.338 = private unnamed_addr constant [16 x i8] c"apps/s_client.c\00", align 1
@s_client_main.srp_arg = private unnamed_addr constant %struct.srp_arg_st { i8* null, i8* null, i32 0, i32 0, i32 0, i32 1024 }, align 8
@prog = internal global i8* null, align 8
@c_quiet = internal global i32 0, align 4
@c_debug = internal global i32 0, align 4
@c_showcerts = internal global i32 0, align 4
@bio_err = external global %struct.bio_st*, align 8
@.str.339 = private unnamed_addr constant [19 x i8] c"%s: out of memory\0A\00", align 1
@.str.340 = private unnamed_addr constant [5 x i8] c"cbuf\00", align 1
@.str.341 = private unnamed_addr constant [5 x i8] c"sbuf\00", align 1
@.str.342 = private unnamed_addr constant [5 x i8] c"mbuf\00", align 1
@.str.343 = private unnamed_addr constant [59 x i8] c"%s: Intermixed protocol flags (unix and internet domains)\0A\00", align 1
@.str.344 = private unnamed_addr constant [59 x i8] c"%s: Intermixed protocol flags (internet and unix domains)\0A\00", align 1
@.str.345 = private unnamed_addr constant [39 x i8] c"Cannot supply multiple protocol flags\0A\00", align 1
@.str.346 = private unnamed_addr constant [53 x i8] c"Cannot supply both a protocol flag and '-no_<prot>'\0A\00", align 1
@.str.347 = private unnamed_addr constant [28 x i8] c"%s: Use -help for summary.\0A\00", align 1
@verify_args = external global %struct.verify_options_st, align 4
@.str.348 = private unnamed_addr constant [20 x i8] c"verify depth is %d\0A\00", align 1
@sess_out = internal global i8* null, align 8
@.str.349 = private unnamed_addr constant [31 x i8] c"%s: Memory allocation failure\0A\00", align 1
@.str.350 = private unnamed_addr constant [34 x i8] c"Error getting client auth engine\0A\00", align 1
@.str.351 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@psk_identity = internal global i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.484, i32 0, i32 0), align 8
@psk_key = external global i8*, align 8
@.str.352 = private unnamed_addr constant [23 x i8] c"Not a hex number '%s'\0A\00", align 1
@.str.353 = private unnamed_addr constant [32 x i8] c"SRP minimal length for N is %d\0A\00", align 1
@services = internal constant [15 x %struct.string_int_pair_st] [%struct.string_int_pair_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.485, i32 0, i32 0), i32 1 }, %struct.string_int_pair_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.486, i32 0, i32 0), i32 2 }, %struct.string_int_pair_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.487, i32 0, i32 0), i32 3 }, %struct.string_int_pair_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.488, i32 0, i32 0), i32 4 }, %struct.string_int_pair_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.489, i32 0, i32 0), i32 6 }, %struct.string_int_pair_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.490, i32 0, i32 0), i32 7 }, %struct.string_int_pair_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.491, i32 0, i32 0), i32 5 }, %struct.string_int_pair_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.492, i32 0, i32 0), i32 9 }, %struct.string_int_pair_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.493, i32 0, i32 0), i32 10 }, %struct.string_int_pair_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.494, i32 0, i32 0), i32 11 }, %struct.string_int_pair_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.495, i32 0, i32 0), i32 12 }, %struct.string_int_pair_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.496, i32 0, i32 0), i32 13 }, %struct.string_int_pair_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.497, i32 0, i32 0), i32 14 }, %struct.string_int_pair_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.498, i32 0, i32 0), i32 15 }, %struct.string_int_pair_st zeroinitializer], align 16
@keymatexportlabel = internal global i8* null, align 8
@keymatexportlen = internal global i32 20, align 4
@.str.354 = private unnamed_addr constant [51 x i8] c"%s: Max Fragment Len %u is out of permitted values\00", align 1
@.str.355 = private unnamed_addr constant [30 x i8] c"%s: Can't use both -4 and -6\0A\00", align 1
@.str.356 = private unnamed_addr constant [54 x i8] c"%s: Can't use -servername and -noservername together\0A\00", align 1
@.str.357 = private unnamed_addr constant [60 x i8] c"%s: Can't use -dane_tlsa_domain and -noservername together\0A\00", align 1
@.str.358 = private unnamed_addr constant [64 x i8] c"%s: must not provide both -connect option and target parameter\0A\00", align 1
@.str.359 = private unnamed_addr constant [42 x i8] c"Cannot supply -nextprotoneg with TLSv1.3\0A\00", align 1
@.str.360 = private unnamed_addr constant [57 x i8] c"%s: -proxy requires use of -connect or target parameter\0A\00", align 1
@.str.361 = private unnamed_addr constant [44 x i8] c"%s: -proxy argument malformed or ambiguous\0A\00", align 1
@.str.362 = private unnamed_addr constant [66 x i8] c"%s: -connect argument or target parameter malformed or ambiguous\0A\00", align 1
@.str.363 = private unnamed_addr constant [53 x i8] c"%s: -bind argument parameter malformed or ambiguous\0A\00", align 1
@.str.364 = private unnamed_addr constant [47 x i8] c"Can't use unix sockets and datagrams together\0A\00", align 1
@next_proto = internal global %struct.tlsextnextprotoctx_st zeroinitializer, align 8
@.str.365 = private unnamed_addr constant [38 x i8] c"Error parsing -nextprotoneg argument\0A\00", align 1
@.str.366 = private unnamed_addr constant [36 x i8] c"Error getting private key password\0A\00", align 1
@.str.367 = private unnamed_addr constant [30 x i8] c"Error getting proxy password\0A\00", align 1
@.str.368 = private unnamed_addr constant [48 x i8] c"Error: Must specify proxy_user with proxy_pass\0A\00", align 1
@.str.369 = private unnamed_addr constant [36 x i8] c"client certificate private key file\00", align 1
@.str.370 = private unnamed_addr constant [24 x i8] c"client certificate file\00", align 1
@.str.371 = private unnamed_addr constant [25 x i8] c"client certificate chain\00", align 1
@.str.372 = private unnamed_addr constant [19 x i8] c"Error loading CRL\0A\00", align 1
@.str.373 = private unnamed_addr constant [18 x i8] c"Error adding CRL\0A\00", align 1
@bio_c_out = internal global %struct.bio_st* null, align 8
@.str.374 = private unnamed_addr constant [24 x i8] c"Error getting password\0A\00", align 1
@.str.375 = private unnamed_addr constant [32 x i8] c"Error using configuration \22%s\22\0A\00", align 1
@.str.376 = private unnamed_addr constant [29 x i8] c"Error setting verify params\0A\00", align 1
@.str.377 = private unnamed_addr constant [57 x i8] c"%s: Max send fragment size %u is out of permitted range\0A\00", align 1
@.str.378 = private unnamed_addr constant [59 x i8] c"%s: Split send fragment size %u is out of permitted range\0A\00", align 1
@.str.379 = private unnamed_addr constant [48 x i8] c"%s: Max pipelines %u is out of permitted range\0A\00", align 1
@.str.380 = private unnamed_addr constant [60 x i8] c"%s: Max Fragment Length code %u is out of permitted values\0A\00", align 1
@.str.381 = private unnamed_addr constant [31 x i8] c"Error loading store locations\0A\00", align 1
@.str.382 = private unnamed_addr constant [24 x i8] c"Error loading CA names\0A\00", align 1
@.str.383 = private unnamed_addr constant [34 x i8] c"Error setting client auth engine\0A\00", align 1
@.str.384 = private unnamed_addr constant [40 x i8] c"PSK key given, setting client callback\0A\00", align 1
@.str.385 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.386 = private unnamed_addr constant [32 x i8] c"Can't open PSK session file %s\0A\00", align 1
@psksess = internal global %struct.ssl_session_st* null, align 8
@.str.387 = private unnamed_addr constant [32 x i8] c"Can't read PSK session file %s\0A\00", align 1
@.str.388 = private unnamed_addr constant [28 x i8] c"Error setting SRTP profile\0A\00", align 1
@.str.389 = private unnamed_addr constant [30 x i8] c"Error parsing -alpn argument\0A\00", align 1
@.str.390 = private unnamed_addr constant [20 x i8] c"Error setting ALPN\0A\00", align 1
@.str.391 = private unnamed_addr constant [54 x i8] c"Warning: Unable to add custom extension %u, skipping\0A\00", align 1
@.str.392 = private unnamed_addr constant [28 x i8] c"Unable to set SRP username\0A\00", align 1
@.str.393 = private unnamed_addr constant [46 x i8] c"%s: Error enabling DANE TLSA authentication.\0A\00", align 1
@.str.394 = private unnamed_addr constant [28 x i8] c"Can't open session file %s\0A\00", align 1
@.str.395 = private unnamed_addr constant [19 x i8] c"Can't set session\0A\00", align 1
@.str.396 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.397 = private unnamed_addr constant [41 x i8] c"Unable to set TLS servername extension.\0A\00", align 1
@.str.398 = private unnamed_addr constant [78 x i8] c"%s: DANE TLSA authentication requires at least one -dane_tlsa_rrdata option.\0A\00", align 1
@.str.399 = private unnamed_addr constant [40 x i8] c"%s: Failed to import any TLSA records.\0A\00", align 1
@.str.400 = private unnamed_addr constant [69 x i8] c"%s: DANE TLSA authentication requires the -dane_tlsa_domain option.\0A\00", align 1
@.str.401 = private unnamed_addr constant [18 x i8] c"connect:errno=%d\0A\00", align 1
@.str.402 = private unnamed_addr constant [17 x i8] c"CONNECTED(%08X)\0A\00", align 1
@.str.403 = private unnamed_addr constant [27 x i8] c"Turned on non blocking io\0A\00", align 1
@.str.404 = private unnamed_addr constant [27 x i8] c"memory allocation failure\0A\00", align 1
@.str.405 = private unnamed_addr constant [22 x i8] c"getsockname:errno=%d\0A\00", align 1
@.str.406 = private unnamed_addr constant [37 x i8] c"MTU too small. Must be at least %ld\0A\00", align 1
@.str.407 = private unnamed_addr constant [19 x i8] c"Failed to set MTU\0A\00", align 1
@.str.408 = private unnamed_addr constant [17 x i8] c"mail.example.com\00", align 1
@.str.409 = private unnamed_addr constant [10 x i8] c"LHLO %s\0D\0A\00", align 1
@.str.410 = private unnamed_addr constant [10 x i8] c"EHLO %s\0D\0A\00", align 1
@.str.411 = private unnamed_addr constant [9 x i8] c"STARTTLS\00", align 1
@.str.412 = private unnamed_addr constant [59 x i8] c"Didn't find STARTTLS in server response, trying anyway...\0A\00", align 1
@.str.413 = private unnamed_addr constant [11 x i8] c"STARTTLS\0D\0A\00", align 1
@.str.414 = private unnamed_addr constant [7 x i8] c"STLS\0D\0A\00", align 1
@.str.415 = private unnamed_addr constant [17 x i8] c"BIO_read failed\0A\00", align 1
@.str.416 = private unnamed_addr constant [15 x i8] c". CAPABILITY\0D\0A\00", align 1
@.str.417 = private unnamed_addr constant [13 x i8] c". STARTTLS\0D\0A\00", align 1
@.str.418 = private unnamed_addr constant [11 x i8] c"AUTH TLS\0D\0A\00", align 1
@.str.419 = private unnamed_addr constant [104 x i8] c"<stream:stream xmlns:stream='http://etherx.jabber.org/streams' xmlns='jabber:%s' to='%s' version='1.0'>\00", align 1
@.str.420 = private unnamed_addr constant [7 x i8] c"client\00", align 1
@.str.421 = private unnamed_addr constant [7 x i8] c"server\00", align 1
@.str.422 = private unnamed_addr constant [50 x i8] c"<starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'\00", align 1
@.str.423 = private unnamed_addr constant [50 x i8] c"<starttls xmlns=\22urn:ietf:params:xml:ns:xmpp-tls\22\00", align 1
@.str.424 = private unnamed_addr constant [52 x i8] c"<starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'/>\00", align 1
@.str.425 = private unnamed_addr constant [9 x i8] c"<proceed\00", align 1
@s_client_main.tls_do = internal constant [3 x i8] c"\FF\FD.", align 1
@s_client_main.tls_will = internal constant [3 x i8] c"\FF\FB.", align 1
@s_client_main.tls_follows = internal constant [6 x i8] c"\FF\FA.\01\FF\F0", align 1
@.str.426 = private unnamed_addr constant [22 x i8] c"CONNECT %s HTTP/1.0\0D\0A\00", align 1
@.str.427 = private unnamed_addr constant [31 x i8] c"Proxy-Connection: Keep-Alive\0D\0A\00", align 1
@.str.428 = private unnamed_addr constant [18 x i8] c"Proxy auth string\00", align 1
@.str.429 = private unnamed_addr constant [6 x i8] c"%s:%s\00", align 1
@.str.430 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.431 = private unnamed_addr constant [32 x i8] c"Proxy-Authorization: Basic %s\0D\0A\00", align 1
@.str.432 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.433 = private unnamed_addr constant [75 x i8] c"%s: HTTP CONNECT failed, insufficient response from proxy (got %d octets)\0A\00", align 1
@.str.434 = private unnamed_addr constant [56 x i8] c"%s: HTTP CONNECT failed, incorrect response from proxy\0A\00", align 1
@.str.435 = private unnamed_addr constant [29 x i8] c"%s: HTTP CONNECT failed: %s \00", align 1
@.str.436 = private unnamed_addr constant [44 x i8] c"Timeout waiting for response (%d seconds).\0A\00", align 1
@.str.437 = private unnamed_addr constant [7 x i8] c"%*s %d\00", align 1
@.str.438 = private unnamed_addr constant [27 x i8] c"STARTTLS not supported: %s\00", align 1
@.str.439 = private unnamed_addr constant [30 x i8] c"STARTTLS negotiation failed: \00", align 1
@.str.440 = private unnamed_addr constant [35 x i8] c"Server does not support STARTTLS.\0A\00", align 1
@s_client_main.ssl_req = internal constant [36 x i8] c" \00\00\01\85\AE\7F\00\00\00\00\01!\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@.str.441 = private unnamed_addr constant [25 x i8] c"MySQL packet too short.\0A\00", align 1
@.str.442 = private unnamed_addr constant [37 x i8] c"MySQL packet length does not match.\0A\00", align 1
@.str.443 = private unnamed_addr constant [46 x i8] c"Only MySQL protocol version 10 is supported.\0A\00", align 1
@.str.444 = private unnamed_addr constant [32 x i8] c"Cannot confirm server version. \00", align 1
@.str.445 = private unnamed_addr constant [42 x i8] c"MySQL server handshake packet is broken.\0A\00", align 1
@.str.446 = private unnamed_addr constant [25 x i8] c"MySQL packet is broken.\0A\00", align 1
@.str.447 = private unnamed_addr constant [36 x i8] c"MySQL server does not support SSL.\0A\00", align 1
@s_client_main.ssl_request = internal constant [8 x i8] c"\00\00\00\08\04\D2\16/", align 1
@.str.448 = private unnamed_addr constant [15 x i8] c"CAPABILITIES\0D\0A\00", align 1
@.str.449 = private unnamed_addr constant [4 x i8] c"101\00", align 1
@.str.450 = private unnamed_addr constant [4 x i8] c"382\00", align 1
@.str.451 = private unnamed_addr constant [20 x i8] c"STARTTLS failed: %s\00", align 1
@.str.452 = private unnamed_addr constant [11 x i8] c"\22STARTTLS\22\00", align 1
@.str.453 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@s_client_main.ldap_tls_genconf = internal global [138 x i8] c"asn1=SEQUENCE:LDAPMessage\0A[LDAPMessage]\0AmessageID=INTEGER:1\0AextendedReq=EXPLICIT:23A,IMPLICIT:0C,FORMAT:ASCII,OCT:1.3.6.1.4.1.1466.20037\0A\00", align 16
@.str.454 = private unnamed_addr constant [23 x i8] c"NCONF_load_bio failed\0A\00", align 1
@.str.455 = private unnamed_addr constant [19 x i8] c"Error on line %ld\0A\00", align 1
@.str.456 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.457 = private unnamed_addr constant [5 x i8] c"asn1\00", align 1
@.str.458 = private unnamed_addr constant [25 x i8] c"NCONF_get_string failed\0A\00", align 1
@.str.459 = private unnamed_addr constant [28 x i8] c"ASN1_generate_nconf failed\0A\00", align 1
@.str.460 = private unnamed_addr constant [36 x i8] c"ldap_ExtendedResponse_parse failed\0A\00", align 1
@.str.461 = private unnamed_addr constant [39 x i8] c"STARTTLS failed, LDAP Result Code: %i\0A\00", align 1
@.str.462 = private unnamed_addr constant [29 x i8] c"Cannot open early data file\0A\00", align 1
@.str.463 = private unnamed_addr constant [26 x i8] c"Error writing early data\0A\00", align 1
@.str.464 = private unnamed_addr constant [24 x i8] c"CONNECTION ESTABLISHED\0A\00", align 1
@.str.465 = private unnamed_addr constant [36 x i8] c"drop connection and then reconnect\0A\00", align 1
@.str.466 = private unnamed_addr constant [15 x i8] c"bad select %d\0A\00", align 1
@.str.467 = private unnamed_addr constant [18 x i8] c"TIMEOUT occurred\0A\00", align 1
@.str.468 = private unnamed_addr constant [15 x i8] c"write W BLOCK\0A\00", align 1
@.str.469 = private unnamed_addr constant [15 x i8] c"write A BLOCK\0A\00", align 1
@.str.470 = private unnamed_addr constant [15 x i8] c"write R BLOCK\0A\00", align 1
@.str.471 = private unnamed_addr constant [15 x i8] c"write X BLOCK\0A\00", align 1
@.str.472 = private unnamed_addr constant [10 x i8] c"shutdown\0A\00", align 1
@.str.473 = private unnamed_addr constant [16 x i8] c"write:errno=%d\0A\00", align 1
@.str.474 = private unnamed_addr constant [6 x i8] c"DONE\0A\00", align 1
@.str.475 = private unnamed_addr constant [14 x i8] c"read A BLOCK\0A\00", align 1
@.str.476 = private unnamed_addr constant [14 x i8] c"read W BLOCK\0A\00", align 1
@.str.477 = private unnamed_addr constant [14 x i8] c"read R BLOCK\0A\00", align 1
@.str.478 = private unnamed_addr constant [14 x i8] c"read X BLOCK\0A\00", align 1
@.str.479 = private unnamed_addr constant [29 x i8] c"CONNECTION CLOSED BY SERVER\0A\00", align 1
@.str.480 = private unnamed_addr constant [15 x i8] c"read:errno=%d\0A\00", align 1
@.str.481 = private unnamed_addr constant [8 x i8] c"closed\0A\00", align 1
@.str.482 = private unnamed_addr constant [15 x i8] c"RENEGOTIATING\0A\00", align 1
@.str.483 = private unnamed_addr constant [11 x i8] c"KEYUPDATE\0A\00", align 1
@.str.484 = private unnamed_addr constant [16 x i8] c"Client_identity\00", align 1
@.str.485 = private unnamed_addr constant [5 x i8] c"smtp\00", align 1
@.str.486 = private unnamed_addr constant [5 x i8] c"pop3\00", align 1
@.str.487 = private unnamed_addr constant [5 x i8] c"imap\00", align 1
@.str.488 = private unnamed_addr constant [4 x i8] c"ftp\00", align 1
@.str.489 = private unnamed_addr constant [5 x i8] c"xmpp\00", align 1
@.str.490 = private unnamed_addr constant [12 x i8] c"xmpp-server\00", align 1
@.str.491 = private unnamed_addr constant [7 x i8] c"telnet\00", align 1
@.str.492 = private unnamed_addr constant [4 x i8] c"irc\00", align 1
@.str.493 = private unnamed_addr constant [6 x i8] c"mysql\00", align 1
@.str.494 = private unnamed_addr constant [9 x i8] c"postgres\00", align 1
@.str.495 = private unnamed_addr constant [5 x i8] c"lmtp\00", align 1
@.str.496 = private unnamed_addr constant [5 x i8] c"nntp\00", align 1
@.str.497 = private unnamed_addr constant [6 x i8] c"sieve\00", align 1
@.str.498 = private unnamed_addr constant [5 x i8] c"ldap\00", align 1
@.str.499 = private unnamed_addr constant [15 x i8] c"psk_client_cb\0A\00", align 1
@.str.500 = private unnamed_addr constant [52 x i8] c"NULL received PSK identity hint, continuing anyway\0A\00", align 1
@.str.501 = private unnamed_addr constant [33 x i8] c"Received PSK identity hint '%s'\0A\00", align 1
@.str.502 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.503 = private unnamed_addr constant [30 x i8] c"created identity '%s' len=%d\0A\00", align 1
@.str.504 = private unnamed_addr constant [42 x i8] c"Could not convert PSK key '%s' to buffer\0A\00", align 1
@.str.505 = private unnamed_addr constant [56 x i8] c"psk buffer of callback is too small (%d) for key (%ld)\0A\00", align 1
@.str.506 = private unnamed_addr constant [21 x i8] c"created PSK len=%ld\0A\00", align 1
@.str.507 = private unnamed_addr constant [30 x i8] c"Error in PSK client callback\0A\00", align 1
@.str.508 = private unnamed_addr constant [36 x i8] c"Error finding suitable ciphersuite\0A\00", align 1
@.str.509 = private unnamed_addr constant [33 x i8] c"Protocols advertised by server: \00", align 1
@.str.510 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.511 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.512 = private unnamed_addr constant [28 x i8] c"SERVERINFO FOR EXTENSION %d\00", align 1
@.str.513 = private unnamed_addr constant [30 x i8] c"Can't use SSL_get_servername\0A\00", align 1
@.str.514 = private unnamed_addr constant [20 x i8] c"SRP password buffer\00", align 1
@.str.515 = private unnamed_addr constant [9 x i8] c"SRP user\00", align 1
@.str.516 = private unnamed_addr constant [21 x i8] c"Can't read Password\0A\00", align 1
@.str.517 = private unnamed_addr constant [17 x i8] c"SRP parameters:\0A\00", align 1
@.str.518 = private unnamed_addr constant [4 x i8] c"\09N=\00", align 1
@.str.519 = private unnamed_addr constant [5 x i8] c"\0A\09g=\00", align 1
@.str.520 = private unnamed_addr constant [64 x i8] c"SRP param N and g are not known params, going to check deeper.\0A\00", align 1
@.str.521 = private unnamed_addr constant [29 x i8] c"SRP param N and g rejected.\0A\00", align 1
@.str.522 = private unnamed_addr constant [31 x i8] c"Error writing session file %s\0A\00", align 1
@.str.523 = private unnamed_addr constant [48 x i8] c"---\0APost-Handshake New Session Ticket arrived:\0A\00", align 1
@.str.524 = private unnamed_addr constant [5 x i8] c"---\0A\00", align 1
@tlsa_import_rr.usage = internal global i8 0, align 1
@tlsa_import_rr.selector = internal global i8 0, align 1
@tlsa_import_rr.mtype = internal global i8 0, align 1
@tlsa_import_rr.data = internal global i8* null, align 8
@tlsa_import_rr.tlsa_fields = internal global [5 x %struct.tlsa_field] [%struct.tlsa_field { i8* @tlsa_import_rr.usage, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.525, i32 0, i32 0), i64 (i8**, i8*)* @checked_uint8 }, %struct.tlsa_field { i8* @tlsa_import_rr.selector, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.526, i32 0, i32 0), i64 (i8**, i8*)* @checked_uint8 }, %struct.tlsa_field { i8* @tlsa_import_rr.mtype, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.527, i32 0, i32 0), i64 (i8**, i8*)* @checked_uint8 }, %struct.tlsa_field { i8* bitcast (i8** @tlsa_import_rr.data to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.528, i32 0, i32 0), i64 (i8**, i8*)* @hexdecode }, %struct.tlsa_field zeroinitializer], align 16
@.str.525 = private unnamed_addr constant [6 x i8] c"usage\00", align 1
@.str.526 = private unnamed_addr constant [9 x i8] c"selector\00", align 1
@.str.527 = private unnamed_addr constant [6 x i8] c"mtype\00", align 1
@.str.528 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.529 = private unnamed_addr constant [39 x i8] c"%s: warning: bad TLSA %s field in: %s\0A\00", align 1
@.str.530 = private unnamed_addr constant [39 x i8] c"%s: warning: unusable TLSA rrdata: %s\0A\00", align 1
@.str.531 = private unnamed_addr constant [44 x i8] c"%s: warning: error loading TLSA rrdata: %s\0A\00", align 1
@saved_errno = internal global i32 0, align 4
@.str.532 = private unnamed_addr constant [10 x i8] c"hexdecode\00", align 1
@.str.533 = private unnamed_addr constant [23 x i8] c"---\0ACertificate chain\0A\00", align 1
@.str.534 = private unnamed_addr constant [7 x i8] c"%2d s:\00", align 1
@.str.535 = private unnamed_addr constant [6 x i8] c"   i:\00", align 1
@.str.536 = private unnamed_addr constant [20 x i8] c"Server certificate\0A\00", align 1
@.str.537 = private unnamed_addr constant [31 x i8] c"no peer certificate available\0A\00", align 1
@.str.538 = private unnamed_addr constant [23 x i8] c"---\0ASCTs present (%i)\0A\00", align 1
@.str.539 = private unnamed_addr constant [27 x i8] c"SCT validation status: %s\0A\00", align 1
@.str.540 = private unnamed_addr constant [6 x i8] c"\0A---\0A\00", align 1
@.str.541 = private unnamed_addr constant [60 x i8] c"---\0ASSL handshake has read %ju bytes and written %ju bytes\0A\00", align 1
@.str.542 = private unnamed_addr constant [13 x i8] c"---\0AReused, \00", align 1
@.str.543 = private unnamed_addr constant [10 x i8] c"---\0ANew, \00", align 1
@.str.544 = private unnamed_addr constant [18 x i8] c"%s, Cipher is %s\0A\00", align 1
@.str.545 = private unnamed_addr constant [29 x i8] c"Server public key is %d bit\0A\00", align 1
@.str.546 = private unnamed_addr constant [37 x i8] c"Secure Renegotiation IS%s supported\0A\00", align 1
@.str.547 = private unnamed_addr constant [5 x i8] c" NOT\00", align 1
@.str.548 = private unnamed_addr constant [17 x i8] c"Compression: %s\0A\00", align 1
@.str.549 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.550 = private unnamed_addr constant [15 x i8] c"Expansion: %s\0A\00", align 1
@.str.551 = private unnamed_addr constant [21 x i8] c"Next protocol: (%d) \00", align 1
@.str.552 = private unnamed_addr constant [16 x i8] c"ALPN protocol: \00", align 1
@.str.553 = private unnamed_addr constant [20 x i8] c"No ALPN negotiated\0A\00", align 1
@.str.554 = private unnamed_addr constant [39 x i8] c"SRTP Extension negotiated, profile=%s\0A\00", align 1
@.str.555 = private unnamed_addr constant [25 x i8] c"Early data was not sent\0A\00", align 1
@.str.556 = private unnamed_addr constant [25 x i8] c"Early data was rejected\0A\00", align 1
@.str.557 = private unnamed_addr constant [25 x i8] c"Early data was accepted\0A\00", align 1
@.str.558 = private unnamed_addr constant [30 x i8] c"Verify return code: %ld (%s)\0A\00", align 1
@.str.559 = private unnamed_addr constant [27 x i8] c"Keying material exporter:\0A\00", align 1
@.str.560 = private unnamed_addr constant [17 x i8] c"    Label: '%s'\0A\00", align 1
@.str.561 = private unnamed_addr constant [22 x i8] c"    Length: %i bytes\0A\00", align 1
@.str.562 = private unnamed_addr constant [11 x i8] c"export key\00", align 1
@.str.563 = private unnamed_addr constant [11 x i8] c"    Error\0A\00", align 1
@.str.564 = private unnamed_addr constant [22 x i8] c"    Keying material: \00", align 1
@.str.565 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.566 = private unnamed_addr constant [16 x i8] c"OCSP response: \00", align 1
@.str.567 = private unnamed_addr constant [18 x i8] c"no response sent\0A\00", align 1
@.str.568 = private unnamed_addr constant [22 x i8] c"response parse error\0A\00", align 1
@.str.569 = private unnamed_addr constant [41 x i8] c"\0A======================================\0A\00", align 1
@.str.570 = private unnamed_addr constant [40 x i8] c"======================================\0A\00", align 1
@.str.571 = private unnamed_addr constant [26 x i8] c"Unexpected LDAP response\0A\00", align 1
@.str.572 = private unnamed_addr constant [14 x i8] c"No MessageID\0A\00", align 1
@.str.573 = private unnamed_addr constant [22 x i8] c"Not ExtendedResponse\0A\00", align 1
@.str.574 = private unnamed_addr constant [16 x i8] c"Not LDAPResult\0A\00", align 1
@.str.575 = private unnamed_addr constant [21 x i8] c"base64 encode buffer\00", align 1

; Function Attrs: nounwind uwtable
define i32 @s_client_main(i32 %argc, i8** %argv) #0 !dbg !222 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %sbio = alloca %struct.bio_st*, align 8
  %key = alloca %struct.evp_pkey_st*, align 8
  %con = alloca %struct.ssl_st*, align 8
  %ctx = alloca %struct.ssl_ctx_st*, align 8
  %chain = alloca %struct.stack_st_X509*, align 8
  %cert = alloca %struct.x509_st*, align 8
  %vpm = alloca %struct.X509_VERIFY_PARAM_st*, align 8
  %exc = alloca %struct.ssl_excert_st*, align 8
  %cctx = alloca %struct.ssl_conf_ctx_st*, align 8
  %ssl_args = alloca %struct.stack_st_OPENSSL_STRING*, align 8
  %dane_tlsa_domain = alloca i8*, align 8
  %dane_tlsa_rrset = alloca %struct.stack_st_OPENSSL_STRING*, align 8
  %dane_ee_no_name = alloca i32, align 4
  %crls = alloca %struct.stack_st_X509_CRL*, align 8
  %meth = alloca %struct.ssl_method_st*, align 8
  %CApath = alloca i8*, align 8
  %CAfile = alloca i8*, align 8
  %cbuf = alloca i8*, align 8
  %sbuf = alloca i8*, align 8
  %mbuf = alloca i8*, align 8
  %proxystr = alloca i8*, align 8
  %proxyuser = alloca i8*, align 8
  %proxypassarg = alloca i8*, align 8
  %proxypass = alloca i8*, align 8
  %connectstr = alloca i8*, align 8
  %bindstr = alloca i8*, align 8
  %cert_file = alloca i8*, align 8
  %key_file = alloca i8*, align 8
  %chain_file = alloca i8*, align 8
  %chCApath = alloca i8*, align 8
  %chCAfile = alloca i8*, align 8
  %host = alloca i8*, align 8
  %port = alloca i8*, align 8
  %bindhost = alloca i8*, align 8
  %bindport = alloca i8*, align 8
  %passarg = alloca i8*, align 8
  %pass = alloca i8*, align 8
  %vfyCApath = alloca i8*, align 8
  %vfyCAfile = alloca i8*, align 8
  %ReqCAfile = alloca i8*, align 8
  %sess_in = alloca i8*, align 8
  %crl_file = alloca i8*, align 8
  %p = alloca i8*, align 8
  %protohost = alloca i8*, align 8
  %timeout = alloca %struct.timeval, align 8
  %timeoutp = alloca %struct.timeval*, align 8
  %readfds = alloca %struct.fd_set, align 8
  %writefds = alloca %struct.fd_set, align 8
  %noCApath = alloca i32, align 4
  %noCAfile = alloca i32, align 4
  %build_chain = alloca i32, align 4
  %cbuf_len = alloca i32, align 4
  %cbuf_off = alloca i32, align 4
  %cert_format = alloca i32, align 4
  %key_format = alloca i32, align 4
  %crlf = alloca i32, align 4
  %full_log = alloca i32, align 4
  %mbuf_len = alloca i32, align 4
  %prexit = alloca i32, align 4
  %sdebug = alloca i32, align 4
  %reconnect = alloca i32, align 4
  %verify = alloca i32, align 4
  %vpmtouched = alloca i32, align 4
  %ret = alloca i32, align 4
  %in_init = alloca i32, align 4
  %i = alloca i32, align 4
  %nbio_test = alloca i32, align 4
  %s = alloca i32, align 4
  %k = alloca i32, align 4
  %width = alloca i32, align 4
  %state = alloca i32, align 4
  %sbuf_len = alloca i32, align 4
  %sbuf_off = alloca i32, align 4
  %cmdletters = alloca i32, align 4
  %socket_family = alloca i32, align 4
  %socket_type = alloca i32, align 4
  %protocol = alloca i32, align 4
  %starttls_proto = alloca i32, align 4
  %crl_format = alloca i32, align 4
  %crl_download = alloca i32, align 4
  %write_tty = alloca i32, align 4
  %read_tty = alloca i32, align 4
  %write_ssl = alloca i32, align 4
  %read_ssl = alloca i32, align 4
  %tty_on = alloca i32, align 4
  %ssl_pending = alloca i32, align 4
  %at_eof = alloca i32, align 4
  %read_buf_len = alloca i32, align 4
  %fallback_scsv = alloca i32, align 4
  %o = alloca i32, align 4
  %enable_timeouts = alloca i32, align 4
  %socket_mtu = alloca i64, align 8
  %ssl_client_engine = alloca %struct.engine_st*, align 8
  %e = alloca %struct.engine_st*, align 8
  %servername = alloca i8*, align 8
  %noservername = alloca i32, align 4
  %alpn_in = alloca i8*, align 8
  %tlsextcbp = alloca %struct.tlsextctx_st, align 8
  %ssl_config = alloca i8*, align 8
  %serverinfo_types = alloca [100 x i16], align 16
  %serverinfo_count = alloca i32, align 4
  %start = alloca i32, align 4
  %len = alloca i32, align 4
  %next_proto_neg_in = alloca i8*, align 8
  %srppass = alloca i8*, align 8
  %srp_lateuser = alloca i32, align 4
  %srp_arg = alloca %struct.srp_arg_st, align 8
  %srtp_profiles = alloca i8*, align 8
  %ctlog_file = alloca i8*, align 8
  %ct_validation = alloca i32, align 4
  %min_version = alloca i32, align 4
  %max_version = alloca i32, align 4
  %prot_opt = alloca i32, align 4
  %no_prot_opt = alloca i32, align 4
  %async = alloca i32, align 4
  %max_send_fragment = alloca i32, align 4
  %split_send_fragment = alloca i32, align 4
  %max_pipelines = alloca i32, align 4
  %connect_type = alloca i32, align 4
  %count4or6 = alloca i32, align 4
  %maxfraglen = alloca i8, align 1
  %c_nbio = alloca i32, align 4
  %c_msg = alloca i32, align 4
  %c_ign_eof = alloca i32, align 4
  %c_brief = alloca i32, align 4
  %c_tlsextdebug = alloca i32, align 4
  %c_status_req = alloca i32, align 4
  %bio_c_msg = alloca %struct.bio_st*, align 8
  %keylog_file = alloca i8*, align 8
  %early_data_file = alloca i8*, align 8
  %isdtls = alloca i32, align 4
  %psksessf = alloca i8*, align 8
  %enable_pha = alloca i32, align 4
  %__d0 = alloca i32, align 4
  %__d1 = alloca i32, align 4
  %__d04 = alloca i32, align 4
  %__d15 = alloca i32, align 4
  %res = alloca i32, align 4
  %tmp_host = alloca i8*, align 8
  %tmp_port = alloca i8*, align 8
  %res466 = alloca i32, align 4
  %tmp_host467 = alloca i8*, align 8
  %tmp_port468 = alloca i8*, align 8
  %res490 = alloca i32, align 4
  %crl = alloca %struct.X509_crl_st*, align 8
  %nm = alloca %struct.stack_st_X509_NAME*, align 8
  %stmp = alloca %struct.bio_st*, align 8
  %alpn_len = alloca i64, align 8
  %alpn = alloca i8*, align 8
  %sess = alloca %struct.ssl_session_st*, align 8
  %stmp903 = alloca %struct.bio_st*, align 8
  %peer_info = alloca %union.BIO_sock_info_u, align 8
  %test = alloca %struct.bio_st*, align 8
  %foundit = alloca i32, align 4
  %fbio = alloca %struct.bio_st*, align 8
  %foundit1151 = alloca i32, align 4
  %fbio1152 = alloca %struct.bio_st*, align 8
  %fbio1187 = alloca %struct.bio_st*, align 8
  %seen = alloca i32, align 4
  %bytes = alloca i32, align 4
  %foundit1281 = alloca i32, align 4
  %fbio1282 = alloca %struct.bio_st*, align 8
  %l = alloca i64, align 8
  %proxyauth = alloca i8*, align 8
  %proxyauthenc = alloca i8*, align 8
  %numeric = alloca i32, align 4
  %fbio1364 = alloca %struct.bio_st*, align 8
  %__d01375 = alloca i32, align 4
  %__d11376 = alloca i32, align 4
  %bytes1447 = alloca i32, align 4
  %ssl_flg = alloca i32, align 4
  %pos = alloca i32, align 4
  %packet = alloca i8*, align 8
  %bytes1535 = alloca i32, align 4
  %foundit1550 = alloca i32, align 4
  %fbio1551 = alloca %struct.bio_st*, align 8
  %foundit1605 = alloca i32, align 4
  %fbio1606 = alloca %struct.bio_st*, align 8
  %errline = alloca i64, align 8
  %genstr = alloca i8*, align 8
  %result = alloca i32, align 4
  %atyp = alloca %struct.asn1_type_st*, align 8
  %ldapbio = alloca %struct.bio_st*, align 8
  %cnf = alloca %struct.conf_st*, align 8
  %edfile = alloca %struct.bio_st*, align 8
  %readbytes = alloca i64, align 8
  %writtenbytes = alloca i64, align 8
  %finish = alloca i32, align 4
  %__d01774 = alloca i32, align 4
  %__d11775 = alloca i32, align 4
  %__d01783 = alloca i32, align 4
  %__d11784 = alloca i32, align 4
  %j = alloca i32, align 4
  %lf_num = alloca i32, align 4
  %__d02189 = alloca i32, align 4
  %__d12190 = alloca i32, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !438, metadata !439), !dbg !440
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !441, metadata !439), !dbg !442
  call void @llvm.dbg.declare(metadata %struct.bio_st** %sbio, metadata !443, metadata !439), !dbg !444
  call void @llvm.dbg.declare(metadata %struct.evp_pkey_st** %key, metadata !445, metadata !439), !dbg !449
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %key, align 8, !dbg !449
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %con, metadata !450, metadata !439), !dbg !451
  store %struct.ssl_st* null, %struct.ssl_st** %con, align 8, !dbg !451
  call void @llvm.dbg.declare(metadata %struct.ssl_ctx_st** %ctx, metadata !452, metadata !439), !dbg !456
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %ctx, align 8, !dbg !456
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509** %chain, metadata !457, metadata !439), !dbg !460
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %chain, align 8, !dbg !460
  call void @llvm.dbg.declare(metadata %struct.x509_st** %cert, metadata !461, metadata !439), !dbg !462
  store %struct.x509_st* null, %struct.x509_st** %cert, align 8, !dbg !462
  call void @llvm.dbg.declare(metadata %struct.X509_VERIFY_PARAM_st** %vpm, metadata !463, metadata !439), !dbg !467
  store %struct.X509_VERIFY_PARAM_st* null, %struct.X509_VERIFY_PARAM_st** %vpm, align 8, !dbg !467
  call void @llvm.dbg.declare(metadata %struct.ssl_excert_st** %exc, metadata !468, metadata !439), !dbg !473
  store %struct.ssl_excert_st* null, %struct.ssl_excert_st** %exc, align 8, !dbg !473
  call void @llvm.dbg.declare(metadata %struct.ssl_conf_ctx_st** %cctx, metadata !474, metadata !439), !dbg !478
  store %struct.ssl_conf_ctx_st* null, %struct.ssl_conf_ctx_st** %cctx, align 8, !dbg !478
  call void @llvm.dbg.declare(metadata %struct.stack_st_OPENSSL_STRING** %ssl_args, metadata !479, metadata !439), !dbg !480
  store %struct.stack_st_OPENSSL_STRING* null, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !480
  call void @llvm.dbg.declare(metadata i8** %dane_tlsa_domain, metadata !481, metadata !439), !dbg !482
  store i8* null, i8** %dane_tlsa_domain, align 8, !dbg !482
  call void @llvm.dbg.declare(metadata %struct.stack_st_OPENSSL_STRING** %dane_tlsa_rrset, metadata !483, metadata !439), !dbg !484
  store %struct.stack_st_OPENSSL_STRING* null, %struct.stack_st_OPENSSL_STRING** %dane_tlsa_rrset, align 8, !dbg !484
  call void @llvm.dbg.declare(metadata i32* %dane_ee_no_name, metadata !485, metadata !439), !dbg !486
  store i32 0, i32* %dane_ee_no_name, align 4, !dbg !486
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509_CRL** %crls, metadata !487, metadata !439), !dbg !488
  store %struct.stack_st_X509_CRL* null, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !488
  call void @llvm.dbg.declare(metadata %struct.ssl_method_st** %meth, metadata !489, metadata !439), !dbg !494
  %call = call %struct.ssl_method_st* @TLS_client_method(), !dbg !495
  store %struct.ssl_method_st* %call, %struct.ssl_method_st** %meth, align 8, !dbg !494
  call void @llvm.dbg.declare(metadata i8** %CApath, metadata !496, metadata !439), !dbg !497
  store i8* null, i8** %CApath, align 8, !dbg !497
  call void @llvm.dbg.declare(metadata i8** %CAfile, metadata !498, metadata !439), !dbg !499
  store i8* null, i8** %CAfile, align 8, !dbg !499
  call void @llvm.dbg.declare(metadata i8** %cbuf, metadata !500, metadata !439), !dbg !501
  store i8* null, i8** %cbuf, align 8, !dbg !501
  call void @llvm.dbg.declare(metadata i8** %sbuf, metadata !502, metadata !439), !dbg !503
  store i8* null, i8** %sbuf, align 8, !dbg !503
  call void @llvm.dbg.declare(metadata i8** %mbuf, metadata !504, metadata !439), !dbg !505
  store i8* null, i8** %mbuf, align 8, !dbg !505
  call void @llvm.dbg.declare(metadata i8** %proxystr, metadata !506, metadata !439), !dbg !507
  store i8* null, i8** %proxystr, align 8, !dbg !507
  call void @llvm.dbg.declare(metadata i8** %proxyuser, metadata !508, metadata !439), !dbg !509
  store i8* null, i8** %proxyuser, align 8, !dbg !509
  call void @llvm.dbg.declare(metadata i8** %proxypassarg, metadata !510, metadata !439), !dbg !511
  store i8* null, i8** %proxypassarg, align 8, !dbg !511
  call void @llvm.dbg.declare(metadata i8** %proxypass, metadata !512, metadata !439), !dbg !513
  store i8* null, i8** %proxypass, align 8, !dbg !513
  call void @llvm.dbg.declare(metadata i8** %connectstr, metadata !514, metadata !439), !dbg !515
  store i8* null, i8** %connectstr, align 8, !dbg !515
  call void @llvm.dbg.declare(metadata i8** %bindstr, metadata !516, metadata !439), !dbg !517
  store i8* null, i8** %bindstr, align 8, !dbg !517
  call void @llvm.dbg.declare(metadata i8** %cert_file, metadata !518, metadata !439), !dbg !519
  store i8* null, i8** %cert_file, align 8, !dbg !519
  call void @llvm.dbg.declare(metadata i8** %key_file, metadata !520, metadata !439), !dbg !521
  store i8* null, i8** %key_file, align 8, !dbg !521
  call void @llvm.dbg.declare(metadata i8** %chain_file, metadata !522, metadata !439), !dbg !523
  store i8* null, i8** %chain_file, align 8, !dbg !523
  call void @llvm.dbg.declare(metadata i8** %chCApath, metadata !524, metadata !439), !dbg !525
  store i8* null, i8** %chCApath, align 8, !dbg !525
  call void @llvm.dbg.declare(metadata i8** %chCAfile, metadata !526, metadata !439), !dbg !527
  store i8* null, i8** %chCAfile, align 8, !dbg !527
  call void @llvm.dbg.declare(metadata i8** %host, metadata !528, metadata !439), !dbg !529
  store i8* null, i8** %host, align 8, !dbg !529
  call void @llvm.dbg.declare(metadata i8** %port, metadata !530, metadata !439), !dbg !531
  %call1 = call i8* @CRYPTO_strdup(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.337, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 909), !dbg !532
  store i8* %call1, i8** %port, align 8, !dbg !531
  call void @llvm.dbg.declare(metadata i8** %bindhost, metadata !533, metadata !439), !dbg !534
  store i8* null, i8** %bindhost, align 8, !dbg !534
  call void @llvm.dbg.declare(metadata i8** %bindport, metadata !535, metadata !439), !dbg !536
  store i8* null, i8** %bindport, align 8, !dbg !536
  call void @llvm.dbg.declare(metadata i8** %passarg, metadata !537, metadata !439), !dbg !538
  store i8* null, i8** %passarg, align 8, !dbg !538
  call void @llvm.dbg.declare(metadata i8** %pass, metadata !539, metadata !439), !dbg !540
  store i8* null, i8** %pass, align 8, !dbg !540
  call void @llvm.dbg.declare(metadata i8** %vfyCApath, metadata !541, metadata !439), !dbg !542
  store i8* null, i8** %vfyCApath, align 8, !dbg !542
  call void @llvm.dbg.declare(metadata i8** %vfyCAfile, metadata !543, metadata !439), !dbg !544
  store i8* null, i8** %vfyCAfile, align 8, !dbg !544
  call void @llvm.dbg.declare(metadata i8** %ReqCAfile, metadata !545, metadata !439), !dbg !546
  store i8* null, i8** %ReqCAfile, align 8, !dbg !546
  call void @llvm.dbg.declare(metadata i8** %sess_in, metadata !547, metadata !439), !dbg !548
  store i8* null, i8** %sess_in, align 8, !dbg !548
  call void @llvm.dbg.declare(metadata i8** %crl_file, metadata !549, metadata !439), !dbg !550
  store i8* null, i8** %crl_file, align 8, !dbg !550
  call void @llvm.dbg.declare(metadata i8** %p, metadata !551, metadata !439), !dbg !552
  call void @llvm.dbg.declare(metadata i8** %protohost, metadata !553, metadata !439), !dbg !554
  store i8* null, i8** %protohost, align 8, !dbg !554
  call void @llvm.dbg.declare(metadata %struct.timeval* %timeout, metadata !555, metadata !439), !dbg !563
  call void @llvm.dbg.declare(metadata %struct.timeval** %timeoutp, metadata !564, metadata !439), !dbg !566
  call void @llvm.dbg.declare(metadata %struct.fd_set* %readfds, metadata !567, metadata !439), !dbg !575
  call void @llvm.dbg.declare(metadata %struct.fd_set* %writefds, metadata !576, metadata !439), !dbg !577
  call void @llvm.dbg.declare(metadata i32* %noCApath, metadata !578, metadata !439), !dbg !579
  store i32 0, i32* %noCApath, align 4, !dbg !579
  call void @llvm.dbg.declare(metadata i32* %noCAfile, metadata !580, metadata !439), !dbg !581
  store i32 0, i32* %noCAfile, align 4, !dbg !581
  call void @llvm.dbg.declare(metadata i32* %build_chain, metadata !582, metadata !439), !dbg !583
  store i32 0, i32* %build_chain, align 4, !dbg !583
  call void @llvm.dbg.declare(metadata i32* %cbuf_len, metadata !584, metadata !439), !dbg !585
  call void @llvm.dbg.declare(metadata i32* %cbuf_off, metadata !586, metadata !439), !dbg !587
  call void @llvm.dbg.declare(metadata i32* %cert_format, metadata !588, metadata !439), !dbg !589
  store i32 32773, i32* %cert_format, align 4, !dbg !589
  call void @llvm.dbg.declare(metadata i32* %key_format, metadata !590, metadata !439), !dbg !591
  store i32 32773, i32* %key_format, align 4, !dbg !591
  call void @llvm.dbg.declare(metadata i32* %crlf, metadata !592, metadata !439), !dbg !593
  store i32 0, i32* %crlf, align 4, !dbg !593
  call void @llvm.dbg.declare(metadata i32* %full_log, metadata !594, metadata !439), !dbg !595
  store i32 1, i32* %full_log, align 4, !dbg !595
  call void @llvm.dbg.declare(metadata i32* %mbuf_len, metadata !596, metadata !439), !dbg !597
  store i32 0, i32* %mbuf_len, align 4, !dbg !597
  call void @llvm.dbg.declare(metadata i32* %prexit, metadata !598, metadata !439), !dbg !599
  store i32 0, i32* %prexit, align 4, !dbg !599
  call void @llvm.dbg.declare(metadata i32* %sdebug, metadata !600, metadata !439), !dbg !601
  store i32 0, i32* %sdebug, align 4, !dbg !601
  call void @llvm.dbg.declare(metadata i32* %reconnect, metadata !602, metadata !439), !dbg !603
  store i32 0, i32* %reconnect, align 4, !dbg !603
  call void @llvm.dbg.declare(metadata i32* %verify, metadata !604, metadata !439), !dbg !605
  store i32 0, i32* %verify, align 4, !dbg !605
  call void @llvm.dbg.declare(metadata i32* %vpmtouched, metadata !606, metadata !439), !dbg !607
  store i32 0, i32* %vpmtouched, align 4, !dbg !607
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !608, metadata !439), !dbg !609
  store i32 1, i32* %ret, align 4, !dbg !609
  call void @llvm.dbg.declare(metadata i32* %in_init, metadata !610, metadata !439), !dbg !611
  store i32 1, i32* %in_init, align 4, !dbg !611
  call void @llvm.dbg.declare(metadata i32* %i, metadata !612, metadata !439), !dbg !613
  call void @llvm.dbg.declare(metadata i32* %nbio_test, metadata !614, metadata !439), !dbg !615
  store i32 0, i32* %nbio_test, align 4, !dbg !615
  call void @llvm.dbg.declare(metadata i32* %s, metadata !616, metadata !439), !dbg !617
  store i32 -1, i32* %s, align 4, !dbg !617
  call void @llvm.dbg.declare(metadata i32* %k, metadata !618, metadata !439), !dbg !619
  call void @llvm.dbg.declare(metadata i32* %width, metadata !620, metadata !439), !dbg !621
  call void @llvm.dbg.declare(metadata i32* %state, metadata !622, metadata !439), !dbg !623
  store i32 0, i32* %state, align 4, !dbg !623
  call void @llvm.dbg.declare(metadata i32* %sbuf_len, metadata !624, metadata !439), !dbg !625
  call void @llvm.dbg.declare(metadata i32* %sbuf_off, metadata !626, metadata !439), !dbg !627
  call void @llvm.dbg.declare(metadata i32* %cmdletters, metadata !628, metadata !439), !dbg !629
  store i32 1, i32* %cmdletters, align 4, !dbg !629
  call void @llvm.dbg.declare(metadata i32* %socket_family, metadata !630, metadata !439), !dbg !631
  store i32 0, i32* %socket_family, align 4, !dbg !631
  call void @llvm.dbg.declare(metadata i32* %socket_type, metadata !632, metadata !439), !dbg !633
  store i32 1, i32* %socket_type, align 4, !dbg !633
  call void @llvm.dbg.declare(metadata i32* %protocol, metadata !634, metadata !439), !dbg !635
  store i32 0, i32* %protocol, align 4, !dbg !635
  call void @llvm.dbg.declare(metadata i32* %starttls_proto, metadata !636, metadata !439), !dbg !637
  store i32 0, i32* %starttls_proto, align 4, !dbg !637
  call void @llvm.dbg.declare(metadata i32* %crl_format, metadata !638, metadata !439), !dbg !639
  store i32 32773, i32* %crl_format, align 4, !dbg !639
  call void @llvm.dbg.declare(metadata i32* %crl_download, metadata !640, metadata !439), !dbg !641
  store i32 0, i32* %crl_download, align 4, !dbg !641
  call void @llvm.dbg.declare(metadata i32* %write_tty, metadata !642, metadata !439), !dbg !643
  call void @llvm.dbg.declare(metadata i32* %read_tty, metadata !644, metadata !439), !dbg !645
  call void @llvm.dbg.declare(metadata i32* %write_ssl, metadata !646, metadata !439), !dbg !647
  call void @llvm.dbg.declare(metadata i32* %read_ssl, metadata !648, metadata !439), !dbg !649
  call void @llvm.dbg.declare(metadata i32* %tty_on, metadata !650, metadata !439), !dbg !651
  call void @llvm.dbg.declare(metadata i32* %ssl_pending, metadata !652, metadata !439), !dbg !653
  call void @llvm.dbg.declare(metadata i32* %at_eof, metadata !654, metadata !439), !dbg !655
  store i32 0, i32* %at_eof, align 4, !dbg !655
  call void @llvm.dbg.declare(metadata i32* %read_buf_len, metadata !656, metadata !439), !dbg !657
  store i32 0, i32* %read_buf_len, align 4, !dbg !657
  call void @llvm.dbg.declare(metadata i32* %fallback_scsv, metadata !658, metadata !439), !dbg !659
  store i32 0, i32* %fallback_scsv, align 4, !dbg !659
  call void @llvm.dbg.declare(metadata i32* %o, metadata !660, metadata !439), !dbg !662
  call void @llvm.dbg.declare(metadata i32* %enable_timeouts, metadata !663, metadata !439), !dbg !664
  store i32 0, i32* %enable_timeouts, align 4, !dbg !664
  call void @llvm.dbg.declare(metadata i64* %socket_mtu, metadata !665, metadata !439), !dbg !666
  store i64 0, i64* %socket_mtu, align 8, !dbg !666
  call void @llvm.dbg.declare(metadata %struct.engine_st** %ssl_client_engine, metadata !667, metadata !439), !dbg !671
  store %struct.engine_st* null, %struct.engine_st** %ssl_client_engine, align 8, !dbg !671
  call void @llvm.dbg.declare(metadata %struct.engine_st** %e, metadata !672, metadata !439), !dbg !673
  store %struct.engine_st* null, %struct.engine_st** %e, align 8, !dbg !673
  call void @llvm.dbg.declare(metadata i8** %servername, metadata !674, metadata !439), !dbg !675
  store i8* null, i8** %servername, align 8, !dbg !675
  call void @llvm.dbg.declare(metadata i32* %noservername, metadata !676, metadata !439), !dbg !677
  store i32 0, i32* %noservername, align 4, !dbg !677
  call void @llvm.dbg.declare(metadata i8** %alpn_in, metadata !678, metadata !439), !dbg !679
  store i8* null, i8** %alpn_in, align 8, !dbg !679
  call void @llvm.dbg.declare(metadata %struct.tlsextctx_st* %tlsextcbp, metadata !680, metadata !439), !dbg !681
  %0 = bitcast %struct.tlsextctx_st* %tlsextcbp to i8*, !dbg !681
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 16, i32 8, i1 false), !dbg !681
  call void @llvm.dbg.declare(metadata i8** %ssl_config, metadata !682, metadata !439), !dbg !683
  store i8* null, i8** %ssl_config, align 8, !dbg !683
  call void @llvm.dbg.declare(metadata [100 x i16]* %serverinfo_types, metadata !684, metadata !439), !dbg !688
  call void @llvm.dbg.declare(metadata i32* %serverinfo_count, metadata !689, metadata !439), !dbg !690
  store i32 0, i32* %serverinfo_count, align 4, !dbg !690
  call void @llvm.dbg.declare(metadata i32* %start, metadata !691, metadata !439), !dbg !692
  store i32 0, i32* %start, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata i32* %len, metadata !693, metadata !439), !dbg !694
  call void @llvm.dbg.declare(metadata i8** %next_proto_neg_in, metadata !695, metadata !439), !dbg !696
  store i8* null, i8** %next_proto_neg_in, align 8, !dbg !696
  call void @llvm.dbg.declare(metadata i8** %srppass, metadata !697, metadata !439), !dbg !698
  store i8* null, i8** %srppass, align 8, !dbg !698
  call void @llvm.dbg.declare(metadata i32* %srp_lateuser, metadata !699, metadata !439), !dbg !700
  store i32 0, i32* %srp_lateuser, align 4, !dbg !700
  call void @llvm.dbg.declare(metadata %struct.srp_arg_st* %srp_arg, metadata !701, metadata !439), !dbg !702
  %1 = bitcast %struct.srp_arg_st* %srp_arg to i8*, !dbg !702
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast (%struct.srp_arg_st* @s_client_main.srp_arg to i8*), i64 32, i32 8, i1 false), !dbg !702
  call void @llvm.dbg.declare(metadata i8** %srtp_profiles, metadata !703, metadata !439), !dbg !704
  store i8* null, i8** %srtp_profiles, align 8, !dbg !704
  call void @llvm.dbg.declare(metadata i8** %ctlog_file, metadata !705, metadata !439), !dbg !706
  store i8* null, i8** %ctlog_file, align 8, !dbg !706
  call void @llvm.dbg.declare(metadata i32* %ct_validation, metadata !707, metadata !439), !dbg !708
  store i32 0, i32* %ct_validation, align 4, !dbg !708
  call void @llvm.dbg.declare(metadata i32* %min_version, metadata !709, metadata !439), !dbg !710
  store i32 0, i32* %min_version, align 4, !dbg !710
  call void @llvm.dbg.declare(metadata i32* %max_version, metadata !711, metadata !439), !dbg !712
  store i32 0, i32* %max_version, align 4, !dbg !712
  call void @llvm.dbg.declare(metadata i32* %prot_opt, metadata !713, metadata !439), !dbg !714
  store i32 0, i32* %prot_opt, align 4, !dbg !714
  call void @llvm.dbg.declare(metadata i32* %no_prot_opt, metadata !715, metadata !439), !dbg !716
  store i32 0, i32* %no_prot_opt, align 4, !dbg !716
  call void @llvm.dbg.declare(metadata i32* %async, metadata !717, metadata !439), !dbg !718
  store i32 0, i32* %async, align 4, !dbg !718
  call void @llvm.dbg.declare(metadata i32* %max_send_fragment, metadata !719, metadata !439), !dbg !720
  store i32 0, i32* %max_send_fragment, align 4, !dbg !720
  call void @llvm.dbg.declare(metadata i32* %split_send_fragment, metadata !721, metadata !439), !dbg !722
  store i32 0, i32* %split_send_fragment, align 4, !dbg !722
  call void @llvm.dbg.declare(metadata i32* %max_pipelines, metadata !723, metadata !439), !dbg !724
  store i32 0, i32* %max_pipelines, align 4, !dbg !724
  call void @llvm.dbg.declare(metadata i32* %connect_type, metadata !725, metadata !439), !dbg !726
  store i32 2, i32* %connect_type, align 4, !dbg !726
  call void @llvm.dbg.declare(metadata i32* %count4or6, metadata !727, metadata !439), !dbg !728
  store i32 0, i32* %count4or6, align 4, !dbg !728
  call void @llvm.dbg.declare(metadata i8* %maxfraglen, metadata !729, metadata !439), !dbg !730
  store i8 0, i8* %maxfraglen, align 1, !dbg !730
  call void @llvm.dbg.declare(metadata i32* %c_nbio, metadata !731, metadata !439), !dbg !732
  store i32 0, i32* %c_nbio, align 4, !dbg !732
  call void @llvm.dbg.declare(metadata i32* %c_msg, metadata !733, metadata !439), !dbg !734
  store i32 0, i32* %c_msg, align 4, !dbg !734
  call void @llvm.dbg.declare(metadata i32* %c_ign_eof, metadata !735, metadata !439), !dbg !736
  store i32 0, i32* %c_ign_eof, align 4, !dbg !736
  call void @llvm.dbg.declare(metadata i32* %c_brief, metadata !737, metadata !439), !dbg !738
  store i32 0, i32* %c_brief, align 4, !dbg !738
  call void @llvm.dbg.declare(metadata i32* %c_tlsextdebug, metadata !739, metadata !439), !dbg !740
  store i32 0, i32* %c_tlsextdebug, align 4, !dbg !740
  call void @llvm.dbg.declare(metadata i32* %c_status_req, metadata !741, metadata !439), !dbg !742
  store i32 0, i32* %c_status_req, align 4, !dbg !742
  call void @llvm.dbg.declare(metadata %struct.bio_st** %bio_c_msg, metadata !743, metadata !439), !dbg !744
  store %struct.bio_st* null, %struct.bio_st** %bio_c_msg, align 8, !dbg !744
  call void @llvm.dbg.declare(metadata i8** %keylog_file, metadata !745, metadata !439), !dbg !746
  store i8* null, i8** %keylog_file, align 8, !dbg !746
  call void @llvm.dbg.declare(metadata i8** %early_data_file, metadata !747, metadata !439), !dbg !748
  store i8* null, i8** %early_data_file, align 8, !dbg !748
  call void @llvm.dbg.declare(metadata i32* %isdtls, metadata !749, metadata !439), !dbg !750
  store i32 0, i32* %isdtls, align 4, !dbg !750
  call void @llvm.dbg.declare(metadata i8** %psksessf, metadata !751, metadata !439), !dbg !752
  store i8* null, i8** %psksessf, align 8, !dbg !752
  call void @llvm.dbg.declare(metadata i32* %enable_pha, metadata !753, metadata !439), !dbg !754
  store i32 0, i32* %enable_pha, align 4, !dbg !754
  br label %do.body, !dbg !755, !llvm.loop !756

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__d0, metadata !757, metadata !439), !dbg !759
  call void @llvm.dbg.declare(metadata i32* %__d1, metadata !760, metadata !439), !dbg !761
  %__fds_bits = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !762
  %arrayidx = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits, i64 0, i64 0, !dbg !764
  %2 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %arrayidx) #8, !dbg !765, !srcloc !766
  %asmresult = extractvalue { i64, i64* } %2, 0, !dbg !765
  %asmresult2 = extractvalue { i64, i64* } %2, 1, !dbg !765
  %3 = trunc i64 %asmresult to i32, !dbg !765
  store i32 %3, i32* %__d0, align 4, !dbg !765
  %4 = ptrtoint i64* %asmresult2 to i64, !dbg !765
  %5 = trunc i64 %4 to i32, !dbg !765
  store i32 %5, i32* %__d1, align 4, !dbg !765
  br label %do.end, !dbg !767

do.end:                                           ; preds = %do.body
  br label %do.body3, !dbg !768, !llvm.loop !769

do.body3:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__d04, metadata !770, metadata !439), !dbg !772
  call void @llvm.dbg.declare(metadata i32* %__d15, metadata !773, metadata !439), !dbg !774
  %__fds_bits6 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %writefds, i32 0, i32 0, !dbg !775
  %arrayidx7 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits6, i64 0, i64 0, !dbg !777
  %6 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %arrayidx7) #8, !dbg !778, !srcloc !779
  %asmresult8 = extractvalue { i64, i64* } %6, 0, !dbg !778
  %asmresult9 = extractvalue { i64, i64* } %6, 1, !dbg !778
  %7 = trunc i64 %asmresult8 to i32, !dbg !778
  store i32 %7, i32* %__d04, align 4, !dbg !778
  %8 = ptrtoint i64* %asmresult9 to i64, !dbg !778
  %9 = trunc i64 %8 to i32, !dbg !778
  store i32 %9, i32* %__d15, align 4, !dbg !778
  br label %do.end10, !dbg !780

do.end10:                                         ; preds = %do.body3
  %10 = load i8**, i8*** %argv.addr, align 8, !dbg !781
  %arrayidx11 = getelementptr inbounds i8*, i8** %10, i64 0, !dbg !781
  %11 = load i8*, i8** %arrayidx11, align 8, !dbg !781
  %call12 = call i8* @opt_progname(i8* %11), !dbg !782
  store i8* %call12, i8** @prog, align 8, !dbg !783
  store i32 0, i32* @c_quiet, align 4, !dbg !784
  store i32 0, i32* @c_debug, align 4, !dbg !785
  store i32 0, i32* @c_showcerts, align 4, !dbg !786
  store i32 0, i32* %c_nbio, align 4, !dbg !787
  %call13 = call %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_new(), !dbg !788
  store %struct.X509_VERIFY_PARAM_st* %call13, %struct.X509_VERIFY_PARAM_st** %vpm, align 8, !dbg !789
  %call14 = call %struct.ssl_conf_ctx_st* @SSL_CONF_CTX_new(), !dbg !790
  store %struct.ssl_conf_ctx_st* %call14, %struct.ssl_conf_ctx_st** %cctx, align 8, !dbg !791
  %12 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %vpm, align 8, !dbg !792
  %cmp = icmp eq %struct.X509_VERIFY_PARAM_st* %12, null, !dbg !794
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !795

lor.lhs.false:                                    ; preds = %do.end10
  %13 = load %struct.ssl_conf_ctx_st*, %struct.ssl_conf_ctx_st** %cctx, align 8, !dbg !796
  %cmp15 = icmp eq %struct.ssl_conf_ctx_st* %13, null, !dbg !798
  br i1 %cmp15, label %if.then, label %if.end, !dbg !799

if.then:                                          ; preds = %lor.lhs.false, %do.end10
  %14 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !800
  %15 = load i8*, i8** @prog, align 8, !dbg !802
  %call16 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %14, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.339, i32 0, i32 0), i8* %15), !dbg !803
  br label %end, !dbg !804

if.end:                                           ; preds = %lor.lhs.false
  %call17 = call i8* @app_malloc(i32 8192, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.340, i32 0, i32 0)), !dbg !805
  store i8* %call17, i8** %cbuf, align 8, !dbg !806
  %call18 = call i8* @app_malloc(i32 8192, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.341, i32 0, i32 0)), !dbg !807
  store i8* %call18, i8** %sbuf, align 8, !dbg !808
  %call19 = call i8* @app_malloc(i32 8192, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.342, i32 0, i32 0)), !dbg !809
  store i8* %call19, i8** %mbuf, align 8, !dbg !810
  %16 = load %struct.ssl_conf_ctx_st*, %struct.ssl_conf_ctx_st** %cctx, align 8, !dbg !811
  %call20 = call i32 @SSL_CONF_CTX_set_flags(%struct.ssl_conf_ctx_st* %16, i32 5), !dbg !812
  %17 = load i32, i32* %argc.addr, align 4, !dbg !813
  %18 = load i8**, i8*** %argv.addr, align 8, !dbg !814
  %call21 = call i8* @opt_init(i32 %17, i8** %18, %struct.options_st* getelementptr inbounds ([171 x %struct.options_st], [171 x %struct.options_st]* @s_client_options, i32 0, i32 0)), !dbg !815
  store i8* %call21, i8** @prog, align 8, !dbg !816
  br label %while.cond, !dbg !817

while.cond:                                       ; preds = %sw.epilog402, %if.end
  %call22 = call i32 @opt_next(), !dbg !818
  store i32 %call22, i32* %o, align 4, !dbg !820
  %cmp23 = icmp ne i32 %call22, 0, !dbg !821
  br i1 %cmp23, label %while.body, label %while.end, !dbg !822

while.body:                                       ; preds = %while.cond
  %19 = load i32, i32* %connect_type, align 4, !dbg !823
  %cmp24 = icmp eq i32 %19, 1, !dbg !826
  br i1 %cmp24, label %land.lhs.true, label %if.end36, !dbg !827

land.lhs.true:                                    ; preds = %while.body
  %20 = load i32, i32* %o, align 4, !dbg !828
  %cmp25 = icmp eq i32 %20, 2, !dbg !830
  br i1 %cmp25, label %if.then34, label %lor.lhs.false26, !dbg !831

lor.lhs.false26:                                  ; preds = %land.lhs.true
  %21 = load i32, i32* %o, align 4, !dbg !832
  %cmp27 = icmp eq i32 %21, 3, !dbg !834
  br i1 %cmp27, label %if.then34, label %lor.lhs.false28, !dbg !835

lor.lhs.false28:                                  ; preds = %lor.lhs.false26
  %22 = load i32, i32* %o, align 4, !dbg !836
  %cmp29 = icmp eq i32 %22, 4, !dbg !838
  br i1 %cmp29, label %if.then34, label %lor.lhs.false30, !dbg !839

lor.lhs.false30:                                  ; preds = %lor.lhs.false28
  %23 = load i32, i32* %o, align 4, !dbg !840
  %cmp31 = icmp eq i32 %23, 5, !dbg !842
  br i1 %cmp31, label %if.then34, label %lor.lhs.false32, !dbg !843

lor.lhs.false32:                                  ; preds = %lor.lhs.false30
  %24 = load i32, i32* %o, align 4, !dbg !844
  %cmp33 = icmp eq i32 %24, 6, !dbg !846
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !847

if.then34:                                        ; preds = %lor.lhs.false32, %lor.lhs.false30, %lor.lhs.false28, %lor.lhs.false26, %land.lhs.true
  %25 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !848
  %26 = load i8*, i8** @prog, align 8, !dbg !850
  %call35 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %25, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.343, i32 0, i32 0), i8* %26), !dbg !851
  br label %end, !dbg !852

if.end36:                                         ; preds = %lor.lhs.false32, %while.body
  %27 = load i32, i32* %connect_type, align 4, !dbg !853
  %cmp37 = icmp eq i32 %27, 0, !dbg !855
  br i1 %cmp37, label %land.lhs.true38, label %if.end42, !dbg !856

land.lhs.true38:                                  ; preds = %if.end36
  %28 = load i32, i32* %o, align 4, !dbg !857
  %cmp39 = icmp eq i32 %28, 8, !dbg !859
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !860

if.then40:                                        ; preds = %land.lhs.true38
  %29 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !861
  %30 = load i8*, i8** @prog, align 8, !dbg !863
  %call41 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %29, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.344, i32 0, i32 0), i8* %30), !dbg !864
  br label %end, !dbg !865

if.end42:                                         ; preds = %land.lhs.true38, %if.end36
  %31 = load i32, i32* %o, align 4, !dbg !866
  %cmp43 = icmp eq i32 %31, 50, !dbg !868
  br i1 %cmp43, label %land.lhs.true58, label %lor.lhs.false44, !dbg !869

lor.lhs.false44:                                  ; preds = %if.end42
  %32 = load i32, i32* %o, align 4, !dbg !870
  %cmp45 = icmp eq i32 %32, 55, !dbg !872
  br i1 %cmp45, label %land.lhs.true58, label %lor.lhs.false46, !dbg !873

lor.lhs.false46:                                  ; preds = %lor.lhs.false44
  %33 = load i32, i32* %o, align 4, !dbg !874
  %cmp47 = icmp eq i32 %33, 54, !dbg !876
  br i1 %cmp47, label %land.lhs.true58, label %lor.lhs.false48, !dbg !877

lor.lhs.false48:                                  ; preds = %lor.lhs.false46
  %34 = load i32, i32* %o, align 4, !dbg !878
  %cmp49 = icmp eq i32 %34, 53, !dbg !880
  br i1 %cmp49, label %land.lhs.true58, label %lor.lhs.false50, !dbg !881

lor.lhs.false50:                                  ; preds = %lor.lhs.false48
  %35 = load i32, i32* %o, align 4, !dbg !882
  %cmp51 = icmp eq i32 %35, 52, !dbg !884
  br i1 %cmp51, label %land.lhs.true58, label %lor.lhs.false52, !dbg !885

lor.lhs.false52:                                  ; preds = %lor.lhs.false50
  %36 = load i32, i32* %o, align 4, !dbg !886
  %cmp53 = icmp eq i32 %36, 56, !dbg !888
  br i1 %cmp53, label %land.lhs.true58, label %lor.lhs.false54, !dbg !889

lor.lhs.false54:                                  ; preds = %lor.lhs.false52
  %37 = load i32, i32* %o, align 4, !dbg !890
  %cmp55 = icmp eq i32 %37, 57, !dbg !892
  br i1 %cmp55, label %land.lhs.true58, label %lor.lhs.false56, !dbg !893

lor.lhs.false56:                                  ; preds = %lor.lhs.false54
  %38 = load i32, i32* %o, align 4, !dbg !894
  %cmp57 = icmp eq i32 %38, 58, !dbg !896
  br i1 %cmp57, label %land.lhs.true58, label %if.end62, !dbg !897

land.lhs.true58:                                  ; preds = %lor.lhs.false56, %lor.lhs.false54, %lor.lhs.false52, %lor.lhs.false50, %lor.lhs.false48, %lor.lhs.false46, %lor.lhs.false44, %if.end42
  %39 = load i32, i32* %prot_opt, align 4, !dbg !898
  %inc = add nsw i32 %39, 1, !dbg !898
  store i32 %inc, i32* %prot_opt, align 4, !dbg !898
  %cmp59 = icmp sgt i32 %inc, 1, !dbg !900
  br i1 %cmp59, label %if.then60, label %if.end62, !dbg !901

if.then60:                                        ; preds = %land.lhs.true58
  %40 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !902
  %call61 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %40, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.345, i32 0, i32 0)), !dbg !904
  br label %end, !dbg !905

if.end62:                                         ; preds = %land.lhs.true58, %lor.lhs.false56
  %41 = load i32, i32* %o, align 4, !dbg !906
  %cmp63 = icmp eq i32 %41, 3001, !dbg !908
  br i1 %cmp63, label %if.then72, label %lor.lhs.false64, !dbg !909

lor.lhs.false64:                                  ; preds = %if.end62
  %42 = load i32, i32* %o, align 4, !dbg !910
  %cmp65 = icmp eq i32 %42, 3002, !dbg !912
  br i1 %cmp65, label %if.then72, label %lor.lhs.false66, !dbg !913

lor.lhs.false66:                                  ; preds = %lor.lhs.false64
  %43 = load i32, i32* %o, align 4, !dbg !914
  %cmp67 = icmp eq i32 %43, 3003, !dbg !916
  br i1 %cmp67, label %if.then72, label %lor.lhs.false68, !dbg !917

lor.lhs.false68:                                  ; preds = %lor.lhs.false66
  %44 = load i32, i32* %o, align 4, !dbg !918
  %cmp69 = icmp eq i32 %44, 3004, !dbg !920
  br i1 %cmp69, label %if.then72, label %lor.lhs.false70, !dbg !921

lor.lhs.false70:                                  ; preds = %lor.lhs.false68
  %45 = load i32, i32* %o, align 4, !dbg !922
  %cmp71 = icmp eq i32 %45, 3005, !dbg !924
  br i1 %cmp71, label %if.then72, label %if.end74, !dbg !925

if.then72:                                        ; preds = %lor.lhs.false70, %lor.lhs.false68, %lor.lhs.false66, %lor.lhs.false64, %if.end62
  %46 = load i32, i32* %no_prot_opt, align 4, !dbg !926
  %inc73 = add nsw i32 %46, 1, !dbg !926
  store i32 %inc73, i32* %no_prot_opt, align 4, !dbg !926
  br label %if.end74, !dbg !927

if.end74:                                         ; preds = %if.then72, %lor.lhs.false70
  %47 = load i32, i32* %prot_opt, align 4, !dbg !928
  %cmp75 = icmp eq i32 %47, 1, !dbg !930
  br i1 %cmp75, label %land.lhs.true76, label %if.end79, !dbg !931

land.lhs.true76:                                  ; preds = %if.end74
  %48 = load i32, i32* %no_prot_opt, align 4, !dbg !932
  %tobool = icmp ne i32 %48, 0, !dbg !932
  br i1 %tobool, label %if.then77, label %if.end79, !dbg !934

if.then77:                                        ; preds = %land.lhs.true76
  %49 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !935
  %call78 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %49, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.346, i32 0, i32 0)), !dbg !937
  br label %end, !dbg !938

if.end79:                                         ; preds = %land.lhs.true76, %if.end74
  %50 = load i32, i32* %o, align 4, !dbg !939
  switch i32 %50, label %sw.epilog402 [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb
    i32 1, label %sw.bb81
    i32 2, label %sw.bb82
    i32 3, label %sw.bb84
    i32 4, label %sw.bb86
    i32 5, label %sw.bb88
    i32 6, label %sw.bb90
    i32 7, label %sw.bb92
    i32 3034, label %sw.bb94
    i32 3035, label %sw.bb96
    i32 3036, label %sw.bb98
    i32 8, label %sw.bb100
    i32 9, label %sw.bb102
    i32 86, label %sw.bb102
    i32 10, label %sw.bb104
    i32 12, label %sw.bb111
    i32 11, label %sw.bb113
    i32 13, label %sw.bb119
    i32 14, label %sw.bb121
    i32 15, label %sw.bb122
    i32 16, label %sw.bb124
    i32 17, label %sw.bb126
    i32 18, label %sw.bb132
    i32 19, label %sw.bb138
    i32 20, label %sw.bb139
    i32 21, label %sw.bb140
    i32 3000, label %sw.bb141
    i32 3031, label %sw.bb141
    i32 3001, label %sw.bb142
    i32 3002, label %sw.bb142
    i32 3003, label %sw.bb142
    i32 3004, label %sw.bb142
    i32 3005, label %sw.bb142
    i32 3006, label %sw.bb142
    i32 3007, label %sw.bb142
    i32 3026, label %sw.bb142
    i32 3008, label %sw.bb142
    i32 3009, label %sw.bb142
    i32 3010, label %sw.bb142
    i32 3011, label %sw.bb142
    i32 3012, label %sw.bb142
    i32 3013, label %sw.bb142
    i32 3014, label %sw.bb142
    i32 3015, label %sw.bb142
    i32 3016, label %sw.bb142
    i32 3017, label %sw.bb142
    i32 3018, label %sw.bb142
    i32 3019, label %sw.bb142
    i32 3020, label %sw.bb142
    i32 3021, label %sw.bb142
    i32 3022, label %sw.bb142
    i32 3023, label %sw.bb142
    i32 3024, label %sw.bb142
    i32 3029, label %sw.bb142
    i32 3027, label %sw.bb142
    i32 3028, label %sw.bb142
    i32 3025, label %sw.bb142
    i32 3030, label %sw.bb142
    i32 2000, label %sw.bb159
    i32 2031, label %sw.bb159
    i32 2001, label %sw.bb160
    i32 2002, label %sw.bb160
    i32 2003, label %sw.bb160
    i32 2004, label %sw.bb160
    i32 2029, label %sw.bb160
    i32 2005, label %sw.bb160
    i32 2006, label %sw.bb160
    i32 2007, label %sw.bb160
    i32 2008, label %sw.bb160
    i32 2009, label %sw.bb160
    i32 2010, label %sw.bb160
    i32 2011, label %sw.bb160
    i32 2012, label %sw.bb160
    i32 2013, label %sw.bb160
    i32 2014, label %sw.bb160
    i32 2015, label %sw.bb160
    i32 2016, label %sw.bb160
    i32 2017, label %sw.bb160
    i32 2018, label %sw.bb160
    i32 2019, label %sw.bb160
    i32 2020, label %sw.bb160
    i32 2021, label %sw.bb160
    i32 2022, label %sw.bb160
    i32 2023, label %sw.bb160
    i32 2024, label %sw.bb160
    i32 2025, label %sw.bb160
    i32 2026, label %sw.bb160
    i32 2027, label %sw.bb160
    i32 2028, label %sw.bb160
    i32 2030, label %sw.bb160
    i32 1000, label %sw.bb166
    i32 1007, label %sw.bb166
    i32 1001, label %sw.bb167
    i32 1002, label %sw.bb167
    i32 1003, label %sw.bb167
    i32 1004, label %sw.bb167
    i32 1005, label %sw.bb167
    i32 1006, label %sw.bb167
    i32 22, label %sw.bb172
    i32 23, label %sw.bb173
    i32 24, label %sw.bb174
    i32 25, label %sw.bb175
    i32 3033, label %sw.bb176
    i32 35, label %sw.bb177
    i32 26, label %sw.bb180
    i32 1500, label %sw.bb187
    i32 1503, label %sw.bb187
    i32 1501, label %sw.bb188
    i32 1502, label %sw.bb188
    i32 27, label %sw.bb193
    i32 28, label %sw.bb194
    i32 29, label %sw.bb195
    i32 30, label %sw.bb196
    i32 31, label %sw.bb197
    i32 32, label %sw.bb198
    i32 33, label %sw.bb199
    i32 34, label %sw.bb200
    i32 36, label %sw.bb203
    i32 37, label %sw.bb204
    i32 38, label %sw.bb205
    i32 39, label %sw.bb206
    i32 40, label %sw.bb207
    i32 41, label %sw.bb208
    i32 42, label %sw.bb209
    i32 43, label %sw.bb211
    i32 44, label %sw.bb221
    i32 45, label %sw.bb223
    i32 46, label %sw.bb229
    i32 47, label %sw.bb235
    i32 48, label %sw.bb244
    i32 49, label %sw.bb249
    i32 51, label %sw.bb254
    i32 50, label %sw.bb256
    i32 52, label %sw.bb257
    i32 53, label %sw.bb258
    i32 54, label %sw.bb259
    i32 55, label %sw.bb260
    i32 56, label %sw.bb261
    i32 57, label %sw.bb263
    i32 58, label %sw.bb265
    i32 59, label %sw.bb267
    i32 3044, label %sw.bb268
    i32 60, label %sw.bb269
    i32 61, label %sw.bb270
    i32 3032, label %sw.bb273
    i32 62, label %sw.bb274
    i32 63, label %sw.bb280
    i32 64, label %sw.bb282
    i32 69, label %sw.bb284
    i32 70, label %sw.bb286
    i32 65, label %sw.bb287
    i32 66, label %sw.bb289
    i32 67, label %sw.bb290
    i32 68, label %sw.bb292
    i32 71, label %sw.bb294
    i32 94, label %sw.bb295
    i32 72, label %sw.bb297
    i32 73, label %sw.bb299
    i32 3039, label %sw.bb300
    i32 3038, label %sw.bb301
    i32 3040, label %sw.bb302
    i32 74, label %sw.bb304
    i32 75, label %sw.bb306
    i32 3037, label %sw.bb308
    i32 3041, label %sw.bb310
    i32 3042, label %sw.bb325
    i32 76, label %sw.bb326
    i32 77, label %sw.bb328
    i32 78, label %sw.bb330
    i32 79, label %sw.bb360
    i32 80, label %sw.bb366
    i32 81, label %sw.bb368
    i32 83, label %sw.bb369
    i32 84, label %sw.bb371
    i32 85, label %sw.bb373
    i32 82, label %sw.bb376
    i32 87, label %sw.bb377
    i32 88, label %sw.bb385
    i32 89, label %sw.bb388
    i32 90, label %sw.bb391
    i32 91, label %sw.bb394
    i32 92, label %sw.bb397
    i32 93, label %sw.bb399
    i32 3043, label %sw.bb401
  ], !dbg !940

sw.bb:                                            ; preds = %if.end79, %if.end79
  br label %opthelp, !dbg !941

opthelp:                                          ; preds = %if.then449, %if.then441, %if.then433, %if.then427, %if.then417, %if.then412, %if.then405, %sw.default, %if.then278, %if.then184, %if.then136, %if.then130, %sw.bb
  %51 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !943
  %52 = load i8*, i8** @prog, align 8, !dbg !945
  %call80 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %51, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.347, i32 0, i32 0), i8* %52), !dbg !946
  br label %end, !dbg !947

sw.bb81:                                          ; preds = %if.end79
  call void @opt_help(%struct.options_st* getelementptr inbounds ([171 x %struct.options_st], [171 x %struct.options_st]* @s_client_options, i32 0, i32 0)), !dbg !948
  store i32 0, i32* %ret, align 4, !dbg !949
  br label %end, !dbg !950

sw.bb82:                                          ; preds = %if.end79
  store i32 0, i32* %connect_type, align 4, !dbg !951
  store i32 2, i32* %socket_family, align 4, !dbg !952
  %53 = load i32, i32* %count4or6, align 4, !dbg !953
  %inc83 = add nsw i32 %53, 1, !dbg !953
  store i32 %inc83, i32* %count4or6, align 4, !dbg !953
  br label %sw.epilog402, !dbg !954

sw.bb84:                                          ; preds = %if.end79
  store i32 0, i32* %connect_type, align 4, !dbg !955
  store i32 10, i32* %socket_family, align 4, !dbg !956
  %54 = load i32, i32* %count4or6, align 4, !dbg !957
  %inc85 = add nsw i32 %54, 1, !dbg !957
  store i32 %inc85, i32* %count4or6, align 4, !dbg !957
  br label %sw.epilog402, !dbg !958

sw.bb86:                                          ; preds = %if.end79
  store i32 0, i32* %connect_type, align 4, !dbg !959
  %call87 = call i8* @opt_arg(), !dbg !960
  call void @freeandcopy(i8** %host, i8* %call87), !dbg !961
  br label %sw.epilog402, !dbg !963

sw.bb88:                                          ; preds = %if.end79
  store i32 0, i32* %connect_type, align 4, !dbg !964
  %call89 = call i8* @opt_arg(), !dbg !965
  call void @freeandcopy(i8** %port, i8* %call89), !dbg !966
  br label %sw.epilog402, !dbg !967

sw.bb90:                                          ; preds = %if.end79
  store i32 0, i32* %connect_type, align 4, !dbg !968
  %call91 = call i8* @opt_arg(), !dbg !969
  call void @freeandcopy(i8** %connectstr, i8* %call91), !dbg !970
  br label %sw.epilog402, !dbg !971

sw.bb92:                                          ; preds = %if.end79
  %call93 = call i8* @opt_arg(), !dbg !972
  call void @freeandcopy(i8** %bindstr, i8* %call93), !dbg !973
  br label %sw.epilog402, !dbg !974

sw.bb94:                                          ; preds = %if.end79
  %call95 = call i8* @opt_arg(), !dbg !975
  store i8* %call95, i8** %proxystr, align 8, !dbg !976
  store i32 8, i32* %starttls_proto, align 4, !dbg !977
  br label %sw.epilog402, !dbg !978

sw.bb96:                                          ; preds = %if.end79
  %call97 = call i8* @opt_arg(), !dbg !979
  store i8* %call97, i8** %proxyuser, align 8, !dbg !980
  br label %sw.epilog402, !dbg !981

sw.bb98:                                          ; preds = %if.end79
  %call99 = call i8* @opt_arg(), !dbg !982
  store i8* %call99, i8** %proxypassarg, align 8, !dbg !983
  br label %sw.epilog402, !dbg !984

sw.bb100:                                         ; preds = %if.end79
  store i32 1, i32* %connect_type, align 4, !dbg !985
  store i32 1, i32* %socket_family, align 4, !dbg !986
  %call101 = call i8* @opt_arg(), !dbg !987
  call void @freeandcopy(i8** %host, i8* %call101), !dbg !988
  br label %sw.epilog402, !dbg !989

sw.bb102:                                         ; preds = %if.end79, %if.end79
  %call103 = call i8* @opt_arg(), !dbg !990
  store i8* %call103, i8** %protohost, align 8, !dbg !991
  br label %sw.epilog402, !dbg !992

sw.bb104:                                         ; preds = %if.end79
  store i32 1, i32* %verify, align 4, !dbg !993
  %call105 = call i8* @opt_arg(), !dbg !994
  %call106 = call i32 @atoi(i8* %call105) #9, !dbg !995
  store i32 %call106, i32* getelementptr inbounds (%struct.verify_options_st, %struct.verify_options_st* @verify_args, i32 0, i32 0), align 4, !dbg !996
  %55 = load i32, i32* @c_quiet, align 4, !dbg !997
  %tobool107 = icmp ne i32 %55, 0, !dbg !997
  br i1 %tobool107, label %if.end110, label %if.then108, !dbg !999

if.then108:                                       ; preds = %sw.bb104
  %56 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1000
  %57 = load i32, i32* getelementptr inbounds (%struct.verify_options_st, %struct.verify_options_st* @verify_args, i32 0, i32 0), align 4, !dbg !1001
  %call109 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %56, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.348, i32 0, i32 0), i32 %57), !dbg !1002
  br label %if.end110, !dbg !1002

if.end110:                                        ; preds = %if.then108, %sw.bb104
  br label %sw.epilog402, !dbg !1003

sw.bb111:                                         ; preds = %if.end79
  %call112 = call i8* @opt_arg(), !dbg !1004
  store i8* %call112, i8** %cert_file, align 8, !dbg !1005
  br label %sw.epilog402, !dbg !1006

sw.bb113:                                         ; preds = %if.end79
  %call114 = call i8* @opt_arg(), !dbg !1007
  %call115 = call i32 @set_nameopt(i8* %call114), !dbg !1009
  %tobool116 = icmp ne i32 %call115, 0, !dbg !1011
  br i1 %tobool116, label %if.end118, label %if.then117, !dbg !1012

if.then117:                                       ; preds = %sw.bb113
  br label %end, !dbg !1013

if.end118:                                        ; preds = %sw.bb113
  br label %sw.epilog402, !dbg !1014

sw.bb119:                                         ; preds = %if.end79
  %call120 = call i8* @opt_arg(), !dbg !1015
  store i8* %call120, i8** %crl_file, align 8, !dbg !1016
  br label %sw.epilog402, !dbg !1017

sw.bb121:                                         ; preds = %if.end79
  store i32 1, i32* %crl_download, align 4, !dbg !1018
  br label %sw.epilog402, !dbg !1019

sw.bb122:                                         ; preds = %if.end79
  %call123 = call i8* @opt_arg(), !dbg !1020
  store i8* %call123, i8** @sess_out, align 8, !dbg !1021
  br label %sw.epilog402, !dbg !1022

sw.bb124:                                         ; preds = %if.end79
  %call125 = call i8* @opt_arg(), !dbg !1023
  store i8* %call125, i8** %sess_in, align 8, !dbg !1024
  br label %sw.epilog402, !dbg !1025

sw.bb126:                                         ; preds = %if.end79
  %call127 = call i8* @opt_arg(), !dbg !1026
  %call128 = call i32 @opt_format(i8* %call127, i64 2, i32* %cert_format), !dbg !1028
  %tobool129 = icmp ne i32 %call128, 0, !dbg !1030
  br i1 %tobool129, label %if.end131, label %if.then130, !dbg !1031

if.then130:                                       ; preds = %sw.bb126
  br label %opthelp, !dbg !1032

if.end131:                                        ; preds = %sw.bb126
  br label %sw.epilog402, !dbg !1033

sw.bb132:                                         ; preds = %if.end79
  %call133 = call i8* @opt_arg(), !dbg !1034
  %call134 = call i32 @opt_format(i8* %call133, i64 2, i32* %crl_format), !dbg !1036
  %tobool135 = icmp ne i32 %call134, 0, !dbg !1038
  br i1 %tobool135, label %if.end137, label %if.then136, !dbg !1039

if.then136:                                       ; preds = %sw.bb132
  br label %opthelp, !dbg !1040

if.end137:                                        ; preds = %sw.bb132
  br label %sw.epilog402, !dbg !1041

sw.bb138:                                         ; preds = %if.end79
  store i32 1, i32* %verify, align 4, !dbg !1042
  store i32 1, i32* getelementptr inbounds (%struct.verify_options_st, %struct.verify_options_st* @verify_args, i32 0, i32 3), align 4, !dbg !1043
  br label %sw.epilog402, !dbg !1044

sw.bb139:                                         ; preds = %if.end79
  store i32 1, i32* getelementptr inbounds (%struct.verify_options_st, %struct.verify_options_st* @verify_args, i32 0, i32 1), align 4, !dbg !1045
  br label %sw.epilog402, !dbg !1046

sw.bb140:                                         ; preds = %if.end79
  store i32 1, i32* @c_quiet, align 4, !dbg !1047
  store i32 1, i32* getelementptr inbounds (%struct.verify_options_st, %struct.verify_options_st* @verify_args, i32 0, i32 1), align 4, !dbg !1048
  store i32 1, i32* %c_brief, align 4, !dbg !1049
  br label %sw.epilog402, !dbg !1050

sw.bb141:                                         ; preds = %if.end79, %if.end79
  br label %sw.epilog402, !dbg !1051

sw.bb142:                                         ; preds = %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79
  %58 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !1052
  %cmp143 = icmp eq %struct.stack_st_OPENSSL_STRING* %58, null, !dbg !1054
  br i1 %cmp143, label %if.then144, label %if.end146, !dbg !1055

if.then144:                                       ; preds = %sw.bb142
  %call145 = call %struct.stack_st_OPENSSL_STRING* @sk_OPENSSL_STRING_new_null(), !dbg !1056
  store %struct.stack_st_OPENSSL_STRING* %call145, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !1057
  br label %if.end146, !dbg !1058

if.end146:                                        ; preds = %if.then144, %sw.bb142
  %59 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !1059
  %cmp147 = icmp eq %struct.stack_st_OPENSSL_STRING* %59, null, !dbg !1061
  br i1 %cmp147, label %if.then156, label %lor.lhs.false148, !dbg !1062

lor.lhs.false148:                                 ; preds = %if.end146
  %60 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !1063
  %call149 = call i8* @opt_flag(), !dbg !1065
  %call150 = call i32 @sk_OPENSSL_STRING_push(%struct.stack_st_OPENSSL_STRING* %60, i8* %call149), !dbg !1066
  %tobool151 = icmp ne i32 %call150, 0, !dbg !1068
  br i1 %tobool151, label %lor.lhs.false152, label %if.then156, !dbg !1069

lor.lhs.false152:                                 ; preds = %lor.lhs.false148
  %61 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !1070
  %call153 = call i8* @opt_arg(), !dbg !1071
  %call154 = call i32 @sk_OPENSSL_STRING_push(%struct.stack_st_OPENSSL_STRING* %61, i8* %call153), !dbg !1072
  %tobool155 = icmp ne i32 %call154, 0, !dbg !1073
  br i1 %tobool155, label %if.end158, label %if.then156, !dbg !1074

if.then156:                                       ; preds = %lor.lhs.false152, %lor.lhs.false148, %if.end146
  %62 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1075
  %63 = load i8*, i8** @prog, align 8, !dbg !1077
  %call157 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %62, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.349, i32 0, i32 0), i8* %63), !dbg !1078
  br label %end, !dbg !1079

if.end158:                                        ; preds = %lor.lhs.false152
  br label %sw.epilog402, !dbg !1080

sw.bb159:                                         ; preds = %if.end79, %if.end79
  br label %sw.epilog402, !dbg !1081

sw.bb160:                                         ; preds = %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79
  %64 = load i32, i32* %o, align 4, !dbg !1082
  %65 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %vpm, align 8, !dbg !1084
  %call161 = call i32 @opt_verify(i32 %64, %struct.X509_VERIFY_PARAM_st* %65), !dbg !1085
  %tobool162 = icmp ne i32 %call161, 0, !dbg !1085
  br i1 %tobool162, label %if.end164, label %if.then163, !dbg !1086

if.then163:                                       ; preds = %sw.bb160
  br label %end, !dbg !1087

if.end164:                                        ; preds = %sw.bb160
  %66 = load i32, i32* %vpmtouched, align 4, !dbg !1088
  %inc165 = add nsw i32 %66, 1, !dbg !1088
  store i32 %inc165, i32* %vpmtouched, align 4, !dbg !1088
  br label %sw.epilog402, !dbg !1089

sw.bb166:                                         ; preds = %if.end79, %if.end79
  br label %sw.epilog402, !dbg !1090

sw.bb167:                                         ; preds = %if.end79, %if.end79, %if.end79, %if.end79, %if.end79, %if.end79
  %67 = load i32, i32* %o, align 4, !dbg !1091
  %call168 = call i32 @args_excert(i32 %67, %struct.ssl_excert_st** %exc), !dbg !1093
  %tobool169 = icmp ne i32 %call168, 0, !dbg !1093
  br i1 %tobool169, label %if.end171, label %if.then170, !dbg !1094

if.then170:                                       ; preds = %sw.bb167
  br label %end, !dbg !1095

if.end171:                                        ; preds = %sw.bb167
  br label %sw.epilog402, !dbg !1096

sw.bb172:                                         ; preds = %if.end79
  store i32 1, i32* %prexit, align 4, !dbg !1097
  br label %sw.epilog402, !dbg !1098

sw.bb173:                                         ; preds = %if.end79
  store i32 1, i32* %crlf, align 4, !dbg !1099
  br label %sw.epilog402, !dbg !1100

sw.bb174:                                         ; preds = %if.end79
  store i32 1, i32* %c_ign_eof, align 4, !dbg !1101
  store i32 1, i32* @c_quiet, align 4, !dbg !1102
  br label %sw.epilog402, !dbg !1103

sw.bb175:                                         ; preds = %if.end79
  store i32 1, i32* %c_nbio, align 4, !dbg !1104
  br label %sw.epilog402, !dbg !1105

sw.bb176:                                         ; preds = %if.end79
  store i32 0, i32* %cmdletters, align 4, !dbg !1106
  br label %sw.epilog402, !dbg !1107

sw.bb177:                                         ; preds = %if.end79
  %call178 = call i8* @opt_arg(), !dbg !1108
  %call179 = call %struct.engine_st* @setup_engine(i8* %call178, i32 1), !dbg !1109
  store %struct.engine_st* %call179, %struct.engine_st** %e, align 8, !dbg !1110
  br label %sw.epilog402, !dbg !1111

sw.bb180:                                         ; preds = %if.end79
  %call181 = call i8* @opt_arg(), !dbg !1112
  %call182 = call %struct.engine_st* @ENGINE_by_id(i8* %call181), !dbg !1113
  store %struct.engine_st* %call182, %struct.engine_st** %ssl_client_engine, align 8, !dbg !1114
  %68 = load %struct.engine_st*, %struct.engine_st** %ssl_client_engine, align 8, !dbg !1115
  %cmp183 = icmp eq %struct.engine_st* %68, null, !dbg !1117
  br i1 %cmp183, label %if.then184, label %if.end186, !dbg !1118

if.then184:                                       ; preds = %sw.bb180
  %69 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1119
  %call185 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %69, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.350, i32 0, i32 0)), !dbg !1121
  br label %opthelp, !dbg !1122

if.end186:                                        ; preds = %sw.bb180
  br label %sw.epilog402, !dbg !1123

sw.bb187:                                         ; preds = %if.end79, %if.end79
  br label %sw.epilog402, !dbg !1124

sw.bb188:                                         ; preds = %if.end79, %if.end79
  %70 = load i32, i32* %o, align 4, !dbg !1125
  %call189 = call i32 @opt_rand(i32 %70), !dbg !1127
  %tobool190 = icmp ne i32 %call189, 0, !dbg !1127
  br i1 %tobool190, label %if.end192, label %if.then191, !dbg !1128

if.then191:                                       ; preds = %sw.bb188
  br label %end, !dbg !1129

if.end192:                                        ; preds = %sw.bb188
  br label %sw.epilog402, !dbg !1130

sw.bb193:                                         ; preds = %if.end79
  store i32 1, i32* %c_ign_eof, align 4, !dbg !1131
  br label %sw.epilog402, !dbg !1132

sw.bb194:                                         ; preds = %if.end79
  store i32 0, i32* %c_ign_eof, align 4, !dbg !1133
  br label %sw.epilog402, !dbg !1134

sw.bb195:                                         ; preds = %if.end79
  store i32 1, i32* @c_debug, align 4, !dbg !1135
  br label %sw.epilog402, !dbg !1136

sw.bb196:                                         ; preds = %if.end79
  store i32 1, i32* %c_tlsextdebug, align 4, !dbg !1137
  br label %sw.epilog402, !dbg !1138

sw.bb197:                                         ; preds = %if.end79
  store i32 1, i32* %c_status_req, align 4, !dbg !1139
  br label %sw.epilog402, !dbg !1140

sw.bb198:                                         ; preds = %if.end79
  br label %sw.epilog402, !dbg !1141

sw.bb199:                                         ; preds = %if.end79
  store i32 1, i32* %c_msg, align 4, !dbg !1142
  br label %sw.epilog402, !dbg !1143

sw.bb200:                                         ; preds = %if.end79
  %call201 = call i8* @opt_arg(), !dbg !1144
  %call202 = call %struct.bio_st* @BIO_new_file(i8* %call201, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.351, i32 0, i32 0)), !dbg !1145
  store %struct.bio_st* %call202, %struct.bio_st** %bio_c_msg, align 8, !dbg !1146
  br label %sw.epilog402, !dbg !1147

sw.bb203:                                         ; preds = %if.end79
  br label %sw.epilog402, !dbg !1148

sw.bb204:                                         ; preds = %if.end79
  store i32 1, i32* %sdebug, align 4, !dbg !1149
  br label %sw.epilog402, !dbg !1150

sw.bb205:                                         ; preds = %if.end79
  store i32 2, i32* %sdebug, align 4, !dbg !1151
  br label %sw.epilog402, !dbg !1152

sw.bb206:                                         ; preds = %if.end79
  store i32 1, i32* @c_showcerts, align 4, !dbg !1153
  br label %sw.epilog402, !dbg !1154

sw.bb207:                                         ; preds = %if.end79
  store i32 1, i32* %nbio_test, align 4, !dbg !1155
  br label %sw.epilog402, !dbg !1156

sw.bb208:                                         ; preds = %if.end79
  store i32 1, i32* %state, align 4, !dbg !1157
  br label %sw.epilog402, !dbg !1158

sw.bb209:                                         ; preds = %if.end79
  %call210 = call i8* @opt_arg(), !dbg !1159
  store i8* %call210, i8** @psk_identity, align 8, !dbg !1160
  br label %sw.epilog402, !dbg !1161

sw.bb211:                                         ; preds = %if.end79
  %call212 = call i8* @opt_arg(), !dbg !1162
  store i8* %call212, i8** @psk_key, align 8, !dbg !1164
  store i8* %call212, i8** %p, align 8, !dbg !1165
  br label %for.cond, !dbg !1166

for.cond:                                         ; preds = %for.inc, %sw.bb211
  %71 = load i8*, i8** %p, align 8, !dbg !1167
  %72 = load i8, i8* %71, align 1, !dbg !1170
  %tobool213 = icmp ne i8 %72, 0, !dbg !1171
  br i1 %tobool213, label %for.body, label %for.end, !dbg !1171

for.body:                                         ; preds = %for.cond
  %73 = load i8*, i8** %p, align 8, !dbg !1172
  %74 = load i8, i8* %73, align 1, !dbg !1175
  %conv = zext i8 %74 to i32, !dbg !1176
  %idxprom = sext i32 %conv to i64, !dbg !1177
  %call214 = call i16** @__ctype_b_loc() #1, !dbg !1178
  %75 = load i16*, i16** %call214, align 8, !dbg !1179
  %arrayidx215 = getelementptr inbounds i16, i16* %75, i64 %idxprom, !dbg !1177
  %76 = load i16, i16* %arrayidx215, align 2, !dbg !1177
  %conv216 = zext i16 %76 to i32, !dbg !1177
  %and = and i32 %conv216, 4096, !dbg !1180
  %tobool217 = icmp ne i32 %and, 0, !dbg !1180
  br i1 %tobool217, label %if.then218, label %if.end219, !dbg !1181

if.then218:                                       ; preds = %for.body
  br label %for.inc, !dbg !1182

if.end219:                                        ; preds = %for.body
  %77 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1183
  %78 = load i8*, i8** @psk_key, align 8, !dbg !1184
  %call220 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %77, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.352, i32 0, i32 0), i8* %78), !dbg !1185
  br label %end, !dbg !1186

for.inc:                                          ; preds = %if.then218
  %79 = load i8*, i8** %p, align 8, !dbg !1187
  %incdec.ptr = getelementptr inbounds i8, i8* %79, i32 1, !dbg !1187
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !1187
  br label %for.cond, !dbg !1189, !llvm.loop !1190

for.end:                                          ; preds = %for.cond
  br label %sw.epilog402, !dbg !1192

sw.bb221:                                         ; preds = %if.end79
  %call222 = call i8* @opt_arg(), !dbg !1193
  store i8* %call222, i8** %psksessf, align 8, !dbg !1194
  br label %sw.epilog402, !dbg !1195

sw.bb223:                                         ; preds = %if.end79
  %call224 = call i8* @opt_arg(), !dbg !1196
  %srplogin = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %srp_arg, i32 0, i32 1, !dbg !1197
  store i8* %call224, i8** %srplogin, align 8, !dbg !1198
  %80 = load i32, i32* %min_version, align 4, !dbg !1199
  %cmp225 = icmp slt i32 %80, 769, !dbg !1201
  br i1 %cmp225, label %if.then227, label %if.end228, !dbg !1202

if.then227:                                       ; preds = %sw.bb223
  store i32 769, i32* %min_version, align 4, !dbg !1203
  br label %if.end228, !dbg !1204

if.end228:                                        ; preds = %if.then227, %sw.bb223
  br label %sw.epilog402, !dbg !1205

sw.bb229:                                         ; preds = %if.end79
  %call230 = call i8* @opt_arg(), !dbg !1206
  store i8* %call230, i8** %srppass, align 8, !dbg !1207
  %81 = load i32, i32* %min_version, align 4, !dbg !1208
  %cmp231 = icmp slt i32 %81, 769, !dbg !1210
  br i1 %cmp231, label %if.then233, label %if.end234, !dbg !1211

if.then233:                                       ; preds = %sw.bb229
  store i32 769, i32* %min_version, align 4, !dbg !1212
  br label %if.end234, !dbg !1213

if.end234:                                        ; preds = %if.then233, %sw.bb229
  br label %sw.epilog402, !dbg !1214

sw.bb235:                                         ; preds = %if.end79
  %call236 = call i8* @opt_arg(), !dbg !1215
  %call237 = call i32 @atoi(i8* %call236) #9, !dbg !1216
  %strength = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %srp_arg, i32 0, i32 5, !dbg !1217
  store i32 %call237, i32* %strength, align 4, !dbg !1218
  %82 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1219
  %strength238 = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %srp_arg, i32 0, i32 5, !dbg !1220
  %83 = load i32, i32* %strength238, align 4, !dbg !1220
  %call239 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %82, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.353, i32 0, i32 0), i32 %83), !dbg !1221
  %84 = load i32, i32* %min_version, align 4, !dbg !1222
  %cmp240 = icmp slt i32 %84, 769, !dbg !1224
  br i1 %cmp240, label %if.then242, label %if.end243, !dbg !1225

if.then242:                                       ; preds = %sw.bb235
  store i32 769, i32* %min_version, align 4, !dbg !1226
  br label %if.end243, !dbg !1227

if.end243:                                        ; preds = %if.then242, %sw.bb235
  br label %sw.epilog402, !dbg !1228

sw.bb244:                                         ; preds = %if.end79
  store i32 1, i32* %srp_lateuser, align 4, !dbg !1229
  %85 = load i32, i32* %min_version, align 4, !dbg !1230
  %cmp245 = icmp slt i32 %85, 769, !dbg !1232
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !1233

if.then247:                                       ; preds = %sw.bb244
  store i32 769, i32* %min_version, align 4, !dbg !1234
  br label %if.end248, !dbg !1235

if.end248:                                        ; preds = %if.then247, %sw.bb244
  br label %sw.epilog402, !dbg !1236

sw.bb249:                                         ; preds = %if.end79
  %amp = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %srp_arg, i32 0, i32 4, !dbg !1237
  store i32 1, i32* %amp, align 8, !dbg !1238
  %86 = load i32, i32* %min_version, align 4, !dbg !1239
  %cmp250 = icmp slt i32 %86, 769, !dbg !1241
  br i1 %cmp250, label %if.then252, label %if.end253, !dbg !1242

if.then252:                                       ; preds = %sw.bb249
  store i32 769, i32* %min_version, align 4, !dbg !1243
  br label %if.end253, !dbg !1244

if.end253:                                        ; preds = %if.then252, %sw.bb249
  br label %sw.epilog402, !dbg !1245

sw.bb254:                                         ; preds = %if.end79
  %call255 = call i8* @opt_arg(), !dbg !1246
  store i8* %call255, i8** %ssl_config, align 8, !dbg !1247
  br label %sw.epilog402, !dbg !1248

sw.bb256:                                         ; preds = %if.end79
  store i32 768, i32* %min_version, align 4, !dbg !1249
  store i32 768, i32* %max_version, align 4, !dbg !1250
  br label %sw.epilog402, !dbg !1251

sw.bb257:                                         ; preds = %if.end79
  store i32 772, i32* %min_version, align 4, !dbg !1252
  store i32 772, i32* %max_version, align 4, !dbg !1253
  br label %sw.epilog402, !dbg !1254

sw.bb258:                                         ; preds = %if.end79
  store i32 771, i32* %min_version, align 4, !dbg !1255
  store i32 771, i32* %max_version, align 4, !dbg !1256
  br label %sw.epilog402, !dbg !1257

sw.bb259:                                         ; preds = %if.end79
  store i32 770, i32* %min_version, align 4, !dbg !1258
  store i32 770, i32* %max_version, align 4, !dbg !1259
  br label %sw.epilog402, !dbg !1260

sw.bb260:                                         ; preds = %if.end79
  store i32 769, i32* %min_version, align 4, !dbg !1261
  store i32 769, i32* %max_version, align 4, !dbg !1262
  br label %sw.epilog402, !dbg !1263

sw.bb261:                                         ; preds = %if.end79
  %call262 = call %struct.ssl_method_st* @DTLS_client_method(), !dbg !1264
  store %struct.ssl_method_st* %call262, %struct.ssl_method_st** %meth, align 8, !dbg !1265
  store i32 2, i32* %socket_type, align 4, !dbg !1266
  store i32 1, i32* %isdtls, align 4, !dbg !1267
  br label %sw.epilog402, !dbg !1268

sw.bb263:                                         ; preds = %if.end79
  %call264 = call %struct.ssl_method_st* @DTLS_client_method(), !dbg !1269
  store %struct.ssl_method_st* %call264, %struct.ssl_method_st** %meth, align 8, !dbg !1270
  store i32 65279, i32* %min_version, align 4, !dbg !1271
  store i32 65279, i32* %max_version, align 4, !dbg !1272
  store i32 2, i32* %socket_type, align 4, !dbg !1273
  store i32 1, i32* %isdtls, align 4, !dbg !1274
  br label %sw.epilog402, !dbg !1275

sw.bb265:                                         ; preds = %if.end79
  %call266 = call %struct.ssl_method_st* @DTLS_client_method(), !dbg !1276
  store %struct.ssl_method_st* %call266, %struct.ssl_method_st** %meth, align 8, !dbg !1277
  store i32 65277, i32* %min_version, align 4, !dbg !1278
  store i32 65277, i32* %max_version, align 4, !dbg !1279
  store i32 2, i32* %socket_type, align 4, !dbg !1280
  store i32 1, i32* %isdtls, align 4, !dbg !1281
  br label %sw.epilog402, !dbg !1282

sw.bb267:                                         ; preds = %if.end79
  br label %sw.epilog402, !dbg !1283

sw.bb268:                                         ; preds = %if.end79
  br label %sw.epilog402, !dbg !1284

sw.bb269:                                         ; preds = %if.end79
  store i32 1, i32* %enable_timeouts, align 4, !dbg !1285
  br label %sw.epilog402, !dbg !1286

sw.bb270:                                         ; preds = %if.end79
  %call271 = call i8* @opt_arg(), !dbg !1287
  %call272 = call i64 @atol(i8* %call271) #9, !dbg !1288
  store i64 %call272, i64* %socket_mtu, align 8, !dbg !1289
  br label %sw.epilog402, !dbg !1290

sw.bb273:                                         ; preds = %if.end79
  store i32 1, i32* %fallback_scsv, align 4, !dbg !1291
  br label %sw.epilog402, !dbg !1292

sw.bb274:                                         ; preds = %if.end79
  %call275 = call i8* @opt_arg(), !dbg !1293
  %call276 = call i32 @opt_format(i8* %call275, i64 18, i32* %key_format), !dbg !1295
  %tobool277 = icmp ne i32 %call276, 0, !dbg !1297
  br i1 %tobool277, label %if.end279, label %if.then278, !dbg !1298

if.then278:                                       ; preds = %sw.bb274
  br label %opthelp, !dbg !1299

if.end279:                                        ; preds = %sw.bb274
  br label %sw.epilog402, !dbg !1300

sw.bb280:                                         ; preds = %if.end79
  %call281 = call i8* @opt_arg(), !dbg !1301
  store i8* %call281, i8** %passarg, align 8, !dbg !1302
  br label %sw.epilog402, !dbg !1303

sw.bb282:                                         ; preds = %if.end79
  %call283 = call i8* @opt_arg(), !dbg !1304
  store i8* %call283, i8** %chain_file, align 8, !dbg !1305
  br label %sw.epilog402, !dbg !1306

sw.bb284:                                         ; preds = %if.end79
  %call285 = call i8* @opt_arg(), !dbg !1307
  store i8* %call285, i8** %key_file, align 8, !dbg !1308
  br label %sw.epilog402, !dbg !1309

sw.bb286:                                         ; preds = %if.end79
  store i32 5, i32* %reconnect, align 4, !dbg !1310
  br label %sw.epilog402, !dbg !1311

sw.bb287:                                         ; preds = %if.end79
  %call288 = call i8* @opt_arg(), !dbg !1312
  store i8* %call288, i8** %CApath, align 8, !dbg !1313
  br label %sw.epilog402, !dbg !1314

sw.bb289:                                         ; preds = %if.end79
  store i32 1, i32* %noCApath, align 4, !dbg !1315
  br label %sw.epilog402, !dbg !1316

sw.bb290:                                         ; preds = %if.end79
  %call291 = call i8* @opt_arg(), !dbg !1317
  store i8* %call291, i8** %chCApath, align 8, !dbg !1318
  br label %sw.epilog402, !dbg !1319

sw.bb292:                                         ; preds = %if.end79
  %call293 = call i8* @opt_arg(), !dbg !1320
  store i8* %call293, i8** %vfyCApath, align 8, !dbg !1321
  br label %sw.epilog402, !dbg !1322

sw.bb294:                                         ; preds = %if.end79
  store i32 1, i32* %build_chain, align 4, !dbg !1323
  br label %sw.epilog402, !dbg !1324

sw.bb295:                                         ; preds = %if.end79
  %call296 = call i8* @opt_arg(), !dbg !1325
  store i8* %call296, i8** %ReqCAfile, align 8, !dbg !1326
  br label %sw.epilog402, !dbg !1327

sw.bb297:                                         ; preds = %if.end79
  %call298 = call i8* @opt_arg(), !dbg !1328
  store i8* %call298, i8** %CAfile, align 8, !dbg !1329
  br label %sw.epilog402, !dbg !1330

sw.bb299:                                         ; preds = %if.end79
  store i32 1, i32* %noCAfile, align 4, !dbg !1331
  br label %sw.epilog402, !dbg !1332

sw.bb300:                                         ; preds = %if.end79
  store i32 0, i32* %ct_validation, align 4, !dbg !1333
  br label %sw.epilog402, !dbg !1334

sw.bb301:                                         ; preds = %if.end79
  store i32 1, i32* %ct_validation, align 4, !dbg !1335
  br label %sw.epilog402, !dbg !1336

sw.bb302:                                         ; preds = %if.end79
  %call303 = call i8* @opt_arg(), !dbg !1337
  store i8* %call303, i8** %ctlog_file, align 8, !dbg !1338
  br label %sw.epilog402, !dbg !1339

sw.bb304:                                         ; preds = %if.end79
  %call305 = call i8* @opt_arg(), !dbg !1340
  store i8* %call305, i8** %chCAfile, align 8, !dbg !1341
  br label %sw.epilog402, !dbg !1342

sw.bb306:                                         ; preds = %if.end79
  %call307 = call i8* @opt_arg(), !dbg !1343
  store i8* %call307, i8** %vfyCAfile, align 8, !dbg !1344
  br label %sw.epilog402, !dbg !1345

sw.bb308:                                         ; preds = %if.end79
  %call309 = call i8* @opt_arg(), !dbg !1346
  store i8* %call309, i8** %dane_tlsa_domain, align 8, !dbg !1347
  br label %sw.epilog402, !dbg !1348

sw.bb310:                                         ; preds = %if.end79
  %87 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %dane_tlsa_rrset, align 8, !dbg !1349
  %cmp311 = icmp eq %struct.stack_st_OPENSSL_STRING* %87, null, !dbg !1351
  br i1 %cmp311, label %if.then313, label %if.end315, !dbg !1352

if.then313:                                       ; preds = %sw.bb310
  %call314 = call %struct.stack_st_OPENSSL_STRING* @sk_OPENSSL_STRING_new_null(), !dbg !1353
  store %struct.stack_st_OPENSSL_STRING* %call314, %struct.stack_st_OPENSSL_STRING** %dane_tlsa_rrset, align 8, !dbg !1354
  br label %if.end315, !dbg !1355

if.end315:                                        ; preds = %if.then313, %sw.bb310
  %88 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %dane_tlsa_rrset, align 8, !dbg !1356
  %cmp316 = icmp eq %struct.stack_st_OPENSSL_STRING* %88, null, !dbg !1358
  br i1 %cmp316, label %if.then322, label %lor.lhs.false318, !dbg !1359

lor.lhs.false318:                                 ; preds = %if.end315
  %89 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %dane_tlsa_rrset, align 8, !dbg !1360
  %call319 = call i8* @opt_arg(), !dbg !1361
  %call320 = call i32 @sk_OPENSSL_STRING_push(%struct.stack_st_OPENSSL_STRING* %89, i8* %call319), !dbg !1362
  %tobool321 = icmp ne i32 %call320, 0, !dbg !1364
  br i1 %tobool321, label %if.end324, label %if.then322, !dbg !1365

if.then322:                                       ; preds = %lor.lhs.false318, %if.end315
  %90 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1366
  %91 = load i8*, i8** @prog, align 8, !dbg !1368
  %call323 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %90, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.349, i32 0, i32 0), i8* %91), !dbg !1369
  br label %end, !dbg !1370

if.end324:                                        ; preds = %lor.lhs.false318
  br label %sw.epilog402, !dbg !1371

sw.bb325:                                         ; preds = %if.end79
  store i32 1, i32* %dane_ee_no_name, align 4, !dbg !1372
  br label %sw.epilog402, !dbg !1373

sw.bb326:                                         ; preds = %if.end79
  %call327 = call i8* @opt_arg(), !dbg !1374
  store i8* %call327, i8** %next_proto_neg_in, align 8, !dbg !1375
  br label %sw.epilog402, !dbg !1376

sw.bb328:                                         ; preds = %if.end79
  %call329 = call i8* @opt_arg(), !dbg !1377
  store i8* %call329, i8** %alpn_in, align 8, !dbg !1378
  br label %sw.epilog402, !dbg !1379

sw.bb330:                                         ; preds = %if.end79
  %call331 = call i8* @opt_arg(), !dbg !1380
  store i8* %call331, i8** %p, align 8, !dbg !1381
  %92 = load i8*, i8** %p, align 8, !dbg !1382
  %call332 = call i64 @strlen(i8* %92) #9, !dbg !1383
  %conv333 = trunc i64 %call332 to i32, !dbg !1383
  store i32 %conv333, i32* %len, align 4, !dbg !1384
  store i32 0, i32* %start, align 4, !dbg !1385
  store i32 0, i32* %i, align 4, !dbg !1387
  br label %for.cond334, !dbg !1388

for.cond334:                                      ; preds = %for.inc357, %sw.bb330
  %93 = load i32, i32* %i, align 4, !dbg !1389
  %94 = load i32, i32* %len, align 4, !dbg !1392
  %cmp335 = icmp sle i32 %93, %94, !dbg !1393
  br i1 %cmp335, label %for.body337, label %for.end359, !dbg !1394

for.body337:                                      ; preds = %for.cond334
  %95 = load i32, i32* %i, align 4, !dbg !1395
  %96 = load i32, i32* %len, align 4, !dbg !1398
  %cmp338 = icmp eq i32 %95, %96, !dbg !1399
  br i1 %cmp338, label %if.then346, label %lor.lhs.false340, !dbg !1400

lor.lhs.false340:                                 ; preds = %for.body337
  %97 = load i32, i32* %i, align 4, !dbg !1401
  %idxprom341 = sext i32 %97 to i64, !dbg !1403
  %98 = load i8*, i8** %p, align 8, !dbg !1403
  %arrayidx342 = getelementptr inbounds i8, i8* %98, i64 %idxprom341, !dbg !1403
  %99 = load i8, i8* %arrayidx342, align 1, !dbg !1403
  %conv343 = sext i8 %99 to i32, !dbg !1403
  %cmp344 = icmp eq i32 %conv343, 44, !dbg !1404
  br i1 %cmp344, label %if.then346, label %if.end356, !dbg !1405

if.then346:                                       ; preds = %lor.lhs.false340, %for.body337
  %100 = load i8*, i8** %p, align 8, !dbg !1406
  %101 = load i32, i32* %start, align 4, !dbg !1408
  %idx.ext = sext i32 %101 to i64, !dbg !1409
  %add.ptr = getelementptr inbounds i8, i8* %100, i64 %idx.ext, !dbg !1409
  %call347 = call i32 @atoi(i8* %add.ptr) #9, !dbg !1410
  %conv348 = trunc i32 %call347 to i16, !dbg !1410
  %102 = load i32, i32* %serverinfo_count, align 4, !dbg !1411
  %idxprom349 = sext i32 %102 to i64, !dbg !1412
  %arrayidx350 = getelementptr inbounds [100 x i16], [100 x i16]* %serverinfo_types, i64 0, i64 %idxprom349, !dbg !1412
  store i16 %conv348, i16* %arrayidx350, align 2, !dbg !1413
  %103 = load i32, i32* %serverinfo_count, align 4, !dbg !1414
  %inc351 = add nsw i32 %103, 1, !dbg !1414
  store i32 %inc351, i32* %serverinfo_count, align 4, !dbg !1414
  %cmp352 = icmp eq i32 %inc351, 100, !dbg !1416
  br i1 %cmp352, label %if.then354, label %if.end355, !dbg !1417

if.then354:                                       ; preds = %if.then346
  br label %for.end359, !dbg !1418

if.end355:                                        ; preds = %if.then346
  %104 = load i32, i32* %i, align 4, !dbg !1419
  %add = add nsw i32 %104, 1, !dbg !1420
  store i32 %add, i32* %start, align 4, !dbg !1421
  br label %if.end356, !dbg !1422

if.end356:                                        ; preds = %if.end355, %lor.lhs.false340
  br label %for.inc357, !dbg !1423

for.inc357:                                       ; preds = %if.end356
  %105 = load i32, i32* %i, align 4, !dbg !1424
  %inc358 = add nsw i32 %105, 1, !dbg !1424
  store i32 %inc358, i32* %i, align 4, !dbg !1424
  br label %for.cond334, !dbg !1426, !llvm.loop !1427

for.end359:                                       ; preds = %if.then354, %for.cond334
  br label %sw.epilog402, !dbg !1429

sw.bb360:                                         ; preds = %if.end79
  %call361 = call i8* @opt_arg(), !dbg !1430
  %call362 = call i32 @opt_pair(i8* %call361, %struct.string_int_pair_st* getelementptr inbounds ([15 x %struct.string_int_pair_st], [15 x %struct.string_int_pair_st]* @services, i32 0, i32 0), i32* %starttls_proto), !dbg !1432
  %tobool363 = icmp ne i32 %call362, 0, !dbg !1434
  br i1 %tobool363, label %if.end365, label %if.then364, !dbg !1435

if.then364:                                       ; preds = %sw.bb360
  br label %end, !dbg !1436

if.end365:                                        ; preds = %sw.bb360
  br label %sw.epilog402, !dbg !1437

sw.bb366:                                         ; preds = %if.end79
  %call367 = call i8* @opt_arg(), !dbg !1438
  store i8* %call367, i8** %servername, align 8, !dbg !1439
  br label %sw.epilog402, !dbg !1440

sw.bb368:                                         ; preds = %if.end79
  store i32 1, i32* %noservername, align 4, !dbg !1441
  br label %sw.epilog402, !dbg !1442

sw.bb369:                                         ; preds = %if.end79
  %call370 = call i8* @opt_arg(), !dbg !1443
  store i8* %call370, i8** %srtp_profiles, align 8, !dbg !1444
  br label %sw.epilog402, !dbg !1445

sw.bb371:                                         ; preds = %if.end79
  %call372 = call i8* @opt_arg(), !dbg !1446
  store i8* %call372, i8** @keymatexportlabel, align 8, !dbg !1447
  br label %sw.epilog402, !dbg !1448

sw.bb373:                                         ; preds = %if.end79
  %call374 = call i8* @opt_arg(), !dbg !1449
  %call375 = call i32 @atoi(i8* %call374) #9, !dbg !1450
  store i32 %call375, i32* @keymatexportlen, align 4, !dbg !1451
  br label %sw.epilog402, !dbg !1452

sw.bb376:                                         ; preds = %if.end79
  store i32 1, i32* %async, align 4, !dbg !1453
  br label %sw.epilog402, !dbg !1454

sw.bb377:                                         ; preds = %if.end79
  %call378 = call i8* @opt_arg(), !dbg !1455
  %call379 = call i32 @atoi(i8* %call378) #9, !dbg !1456
  store i32 %call379, i32* %len, align 4, !dbg !1457
  %106 = load i32, i32* %len, align 4, !dbg !1458
  switch i32 %106, label %sw.default [
    i32 512, label %sw.bb380
    i32 1024, label %sw.bb381
    i32 2048, label %sw.bb382
    i32 4096, label %sw.bb383
  ], !dbg !1459

sw.bb380:                                         ; preds = %sw.bb377
  store i8 1, i8* %maxfraglen, align 1, !dbg !1460
  br label %sw.epilog, !dbg !1462

sw.bb381:                                         ; preds = %sw.bb377
  store i8 2, i8* %maxfraglen, align 1, !dbg !1463
  br label %sw.epilog, !dbg !1464

sw.bb382:                                         ; preds = %sw.bb377
  store i8 3, i8* %maxfraglen, align 1, !dbg !1465
  br label %sw.epilog, !dbg !1466

sw.bb383:                                         ; preds = %sw.bb377
  store i8 4, i8* %maxfraglen, align 1, !dbg !1467
  br label %sw.epilog, !dbg !1468

sw.default:                                       ; preds = %sw.bb377
  %107 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1469
  %108 = load i8*, i8** @prog, align 8, !dbg !1470
  %109 = load i32, i32* %len, align 4, !dbg !1471
  %call384 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %107, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.354, i32 0, i32 0), i8* %108, i32 %109), !dbg !1472
  br label %opthelp, !dbg !1473

sw.epilog:                                        ; preds = %sw.bb383, %sw.bb382, %sw.bb381, %sw.bb380
  br label %sw.epilog402, !dbg !1474

sw.bb385:                                         ; preds = %if.end79
  %call386 = call i8* @opt_arg(), !dbg !1475
  %call387 = call i32 @atoi(i8* %call386) #9, !dbg !1476
  store i32 %call387, i32* %max_send_fragment, align 4, !dbg !1477
  br label %sw.epilog402, !dbg !1478

sw.bb388:                                         ; preds = %if.end79
  %call389 = call i8* @opt_arg(), !dbg !1479
  %call390 = call i32 @atoi(i8* %call389) #9, !dbg !1480
  store i32 %call390, i32* %split_send_fragment, align 4, !dbg !1481
  br label %sw.epilog402, !dbg !1482

sw.bb391:                                         ; preds = %if.end79
  %call392 = call i8* @opt_arg(), !dbg !1483
  %call393 = call i32 @atoi(i8* %call392) #9, !dbg !1484
  store i32 %call393, i32* %max_pipelines, align 4, !dbg !1485
  br label %sw.epilog402, !dbg !1486

sw.bb394:                                         ; preds = %if.end79
  %call395 = call i8* @opt_arg(), !dbg !1487
  %call396 = call i32 @atoi(i8* %call395) #9, !dbg !1488
  store i32 %call396, i32* %read_buf_len, align 4, !dbg !1489
  br label %sw.epilog402, !dbg !1490

sw.bb397:                                         ; preds = %if.end79
  %call398 = call i8* @opt_arg(), !dbg !1491
  store i8* %call398, i8** %keylog_file, align 8, !dbg !1492
  br label %sw.epilog402, !dbg !1493

sw.bb399:                                         ; preds = %if.end79
  %call400 = call i8* @opt_arg(), !dbg !1494
  store i8* %call400, i8** %early_data_file, align 8, !dbg !1495
  br label %sw.epilog402, !dbg !1496

sw.bb401:                                         ; preds = %if.end79
  store i32 1, i32* %enable_pha, align 4, !dbg !1497
  br label %sw.epilog402, !dbg !1498

sw.epilog402:                                     ; preds = %if.end79, %sw.bb401, %sw.bb399, %sw.bb397, %sw.bb394, %sw.bb391, %sw.bb388, %sw.bb385, %sw.epilog, %sw.bb376, %sw.bb373, %sw.bb371, %sw.bb369, %sw.bb368, %sw.bb366, %if.end365, %for.end359, %sw.bb328, %sw.bb326, %sw.bb325, %if.end324, %sw.bb308, %sw.bb306, %sw.bb304, %sw.bb302, %sw.bb301, %sw.bb300, %sw.bb299, %sw.bb297, %sw.bb295, %sw.bb294, %sw.bb292, %sw.bb290, %sw.bb289, %sw.bb287, %sw.bb286, %sw.bb284, %sw.bb282, %sw.bb280, %if.end279, %sw.bb273, %sw.bb270, %sw.bb269, %sw.bb268, %sw.bb267, %sw.bb265, %sw.bb263, %sw.bb261, %sw.bb260, %sw.bb259, %sw.bb258, %sw.bb257, %sw.bb256, %sw.bb254, %if.end253, %if.end248, %if.end243, %if.end234, %if.end228, %sw.bb221, %for.end, %sw.bb209, %sw.bb208, %sw.bb207, %sw.bb206, %sw.bb205, %sw.bb204, %sw.bb203, %sw.bb200, %sw.bb199, %sw.bb198, %sw.bb197, %sw.bb196, %sw.bb195, %sw.bb194, %sw.bb193, %if.end192, %sw.bb187, %if.end186, %sw.bb177, %sw.bb176, %sw.bb175, %sw.bb174, %sw.bb173, %sw.bb172, %if.end171, %sw.bb166, %if.end164, %sw.bb159, %if.end158, %sw.bb141, %sw.bb140, %sw.bb139, %sw.bb138, %if.end137, %if.end131, %sw.bb124, %sw.bb122, %sw.bb121, %sw.bb119, %if.end118, %sw.bb111, %if.end110, %sw.bb102, %sw.bb100, %sw.bb98, %sw.bb96, %sw.bb94, %sw.bb92, %sw.bb90, %sw.bb88, %sw.bb86, %sw.bb84, %sw.bb82
  br label %while.cond, !dbg !1499, !llvm.loop !1501

while.end:                                        ; preds = %while.cond
  %110 = load i32, i32* %count4or6, align 4, !dbg !1502
  %cmp403 = icmp sge i32 %110, 2, !dbg !1504
  br i1 %cmp403, label %if.then405, label %if.end407, !dbg !1505

if.then405:                                       ; preds = %while.end
  %111 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1506
  %112 = load i8*, i8** @prog, align 8, !dbg !1508
  %call406 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %111, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.355, i32 0, i32 0), i8* %112), !dbg !1509
  br label %opthelp, !dbg !1510

if.end407:                                        ; preds = %while.end
  %113 = load i32, i32* %noservername, align 4, !dbg !1511
  %tobool408 = icmp ne i32 %113, 0, !dbg !1511
  br i1 %tobool408, label %if.then409, label %if.end420, !dbg !1513

if.then409:                                       ; preds = %if.end407
  %114 = load i8*, i8** %servername, align 8, !dbg !1514
  %cmp410 = icmp ne i8* %114, null, !dbg !1517
  br i1 %cmp410, label %if.then412, label %if.end414, !dbg !1518

if.then412:                                       ; preds = %if.then409
  %115 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1519
  %116 = load i8*, i8** @prog, align 8, !dbg !1521
  %call413 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %115, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.356, i32 0, i32 0), i8* %116), !dbg !1522
  br label %opthelp, !dbg !1523

if.end414:                                        ; preds = %if.then409
  %117 = load i8*, i8** %dane_tlsa_domain, align 8, !dbg !1524
  %cmp415 = icmp ne i8* %117, null, !dbg !1526
  br i1 %cmp415, label %if.then417, label %if.end419, !dbg !1527

if.then417:                                       ; preds = %if.end414
  %118 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1528
  %119 = load i8*, i8** @prog, align 8, !dbg !1530
  %call418 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %118, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.357, i32 0, i32 0), i8* %119), !dbg !1531
  br label %opthelp, !dbg !1532

if.end419:                                        ; preds = %if.end414
  br label %if.end420, !dbg !1533

if.end420:                                        ; preds = %if.end419, %if.end407
  %call421 = call i32 @opt_num_rest(), !dbg !1534
  store i32 %call421, i32* %argc.addr, align 4, !dbg !1535
  %120 = load i32, i32* %argc.addr, align 4, !dbg !1536
  %cmp422 = icmp eq i32 %120, 1, !dbg !1538
  br i1 %cmp422, label %if.then424, label %if.else, !dbg !1539

if.then424:                                       ; preds = %if.end420
  %121 = load i8*, i8** %connectstr, align 8, !dbg !1540
  %cmp425 = icmp ne i8* %121, null, !dbg !1543
  br i1 %cmp425, label %if.then427, label %if.end429, !dbg !1544

if.then427:                                       ; preds = %if.then424
  %122 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1545
  %123 = load i8*, i8** @prog, align 8, !dbg !1547
  %call428 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %122, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.358, i32 0, i32 0), i8* %123), !dbg !1548
  br label %opthelp, !dbg !1549

if.end429:                                        ; preds = %if.then424
  store i32 0, i32* %connect_type, align 4, !dbg !1550
  %call430 = call i8** @opt_rest(), !dbg !1551
  %124 = load i8*, i8** %call430, align 8, !dbg !1552
  call void @freeandcopy(i8** %connectstr, i8* %124), !dbg !1553
  br label %if.end435, !dbg !1555

if.else:                                          ; preds = %if.end420
  %125 = load i32, i32* %argc.addr, align 4, !dbg !1556
  %cmp431 = icmp ne i32 %125, 0, !dbg !1559
  br i1 %cmp431, label %if.then433, label %if.end434, !dbg !1556

if.then433:                                       ; preds = %if.else
  br label %opthelp, !dbg !1560

if.end434:                                        ; preds = %if.else
  br label %if.end435

if.end435:                                        ; preds = %if.end434, %if.end429
  %126 = load i32, i32* %min_version, align 4, !dbg !1562
  %cmp436 = icmp eq i32 %126, 772, !dbg !1564
  br i1 %cmp436, label %land.lhs.true438, label %if.end443, !dbg !1565

land.lhs.true438:                                 ; preds = %if.end435
  %127 = load i8*, i8** %next_proto_neg_in, align 8, !dbg !1566
  %cmp439 = icmp ne i8* %127, null, !dbg !1568
  br i1 %cmp439, label %if.then441, label %if.end443, !dbg !1569

if.then441:                                       ; preds = %land.lhs.true438
  %128 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1570
  %call442 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %128, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.359, i32 0, i32 0)), !dbg !1572
  br label %opthelp, !dbg !1573

if.end443:                                        ; preds = %land.lhs.true438, %if.end435
  %129 = load i8*, i8** %proxystr, align 8, !dbg !1574
  %cmp444 = icmp ne i8* %129, null, !dbg !1576
  br i1 %cmp444, label %if.then446, label %if.else465, !dbg !1577

if.then446:                                       ; preds = %if.end443
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1578, metadata !439), !dbg !1580
  call void @llvm.dbg.declare(metadata i8** %tmp_host, metadata !1581, metadata !439), !dbg !1582
  %130 = load i8*, i8** %host, align 8, !dbg !1583
  store i8* %130, i8** %tmp_host, align 8, !dbg !1582
  call void @llvm.dbg.declare(metadata i8** %tmp_port, metadata !1584, metadata !439), !dbg !1585
  %131 = load i8*, i8** %port, align 8, !dbg !1586
  store i8* %131, i8** %tmp_port, align 8, !dbg !1585
  %132 = load i8*, i8** %connectstr, align 8, !dbg !1587
  %cmp447 = icmp eq i8* %132, null, !dbg !1589
  br i1 %cmp447, label %if.then449, label %if.end451, !dbg !1590

if.then449:                                       ; preds = %if.then446
  %133 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1591
  %134 = load i8*, i8** @prog, align 8, !dbg !1593
  %call450 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %133, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.360, i32 0, i32 0), i8* %134), !dbg !1594
  br label %opthelp, !dbg !1595

if.end451:                                        ; preds = %if.then446
  %135 = load i8*, i8** %proxystr, align 8, !dbg !1596
  %call452 = call i32 @BIO_parse_hostserv(i8* %135, i8** %host, i8** %port, i32 0), !dbg !1597
  store i32 %call452, i32* %res, align 4, !dbg !1598
  %136 = load i8*, i8** %tmp_host, align 8, !dbg !1599
  %137 = load i8*, i8** %host, align 8, !dbg !1601
  %cmp453 = icmp ne i8* %136, %137, !dbg !1602
  br i1 %cmp453, label %if.then455, label %if.end456, !dbg !1603

if.then455:                                       ; preds = %if.end451
  %138 = load i8*, i8** %tmp_host, align 8, !dbg !1604
  call void @CRYPTO_free(i8* %138, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 1574), !dbg !1605
  br label %if.end456, !dbg !1605

if.end456:                                        ; preds = %if.then455, %if.end451
  %139 = load i8*, i8** %tmp_port, align 8, !dbg !1606
  %140 = load i8*, i8** %port, align 8, !dbg !1608
  %cmp457 = icmp ne i8* %139, %140, !dbg !1609
  br i1 %cmp457, label %if.then459, label %if.end460, !dbg !1610

if.then459:                                       ; preds = %if.end456
  %141 = load i8*, i8** %tmp_port, align 8, !dbg !1611
  call void @CRYPTO_free(i8* %141, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 1576), !dbg !1612
  br label %if.end460, !dbg !1612

if.end460:                                        ; preds = %if.then459, %if.end456
  %142 = load i32, i32* %res, align 4, !dbg !1613
  %tobool461 = icmp ne i32 %142, 0, !dbg !1613
  br i1 %tobool461, label %if.end464, label %if.then462, !dbg !1615

if.then462:                                       ; preds = %if.end460
  %143 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1616
  %144 = load i8*, i8** @prog, align 8, !dbg !1618
  %call463 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %143, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.361, i32 0, i32 0), i8* %144), !dbg !1619
  br label %end, !dbg !1620

if.end464:                                        ; preds = %if.end460
  br label %if.end486, !dbg !1621

if.else465:                                       ; preds = %if.end443
  call void @llvm.dbg.declare(metadata i32* %res466, metadata !1622, metadata !439), !dbg !1624
  store i32 1, i32* %res466, align 4, !dbg !1624
  call void @llvm.dbg.declare(metadata i8** %tmp_host467, metadata !1625, metadata !439), !dbg !1626
  %145 = load i8*, i8** %host, align 8, !dbg !1627
  store i8* %145, i8** %tmp_host467, align 8, !dbg !1626
  call void @llvm.dbg.declare(metadata i8** %tmp_port468, metadata !1628, metadata !439), !dbg !1629
  %146 = load i8*, i8** %port, align 8, !dbg !1630
  store i8* %146, i8** %tmp_port468, align 8, !dbg !1629
  %147 = load i8*, i8** %connectstr, align 8, !dbg !1631
  %cmp469 = icmp ne i8* %147, null, !dbg !1633
  br i1 %cmp469, label %if.then471, label %if.end473, !dbg !1634

if.then471:                                       ; preds = %if.else465
  %148 = load i8*, i8** %connectstr, align 8, !dbg !1635
  %call472 = call i32 @BIO_parse_hostserv(i8* %148, i8** %host, i8** %port, i32 0), !dbg !1636
  store i32 %call472, i32* %res466, align 4, !dbg !1637
  br label %if.end473, !dbg !1638

if.end473:                                        ; preds = %if.then471, %if.else465
  %149 = load i8*, i8** %tmp_host467, align 8, !dbg !1639
  %150 = load i8*, i8** %host, align 8, !dbg !1641
  %cmp474 = icmp ne i8* %149, %150, !dbg !1642
  br i1 %cmp474, label %if.then476, label %if.end477, !dbg !1643

if.then476:                                       ; preds = %if.end473
  %151 = load i8*, i8** %tmp_host467, align 8, !dbg !1644
  call void @CRYPTO_free(i8* %151, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 1589), !dbg !1645
  br label %if.end477, !dbg !1645

if.end477:                                        ; preds = %if.then476, %if.end473
  %152 = load i8*, i8** %tmp_port468, align 8, !dbg !1646
  %153 = load i8*, i8** %port, align 8, !dbg !1648
  %cmp478 = icmp ne i8* %152, %153, !dbg !1649
  br i1 %cmp478, label %if.then480, label %if.end481, !dbg !1650

if.then480:                                       ; preds = %if.end477
  %154 = load i8*, i8** %tmp_port468, align 8, !dbg !1651
  call void @CRYPTO_free(i8* %154, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 1591), !dbg !1652
  br label %if.end481, !dbg !1652

if.end481:                                        ; preds = %if.then480, %if.end477
  %155 = load i32, i32* %res466, align 4, !dbg !1653
  %tobool482 = icmp ne i32 %155, 0, !dbg !1653
  br i1 %tobool482, label %if.end485, label %if.then483, !dbg !1655

if.then483:                                       ; preds = %if.end481
  %156 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1656
  %157 = load i8*, i8** @prog, align 8, !dbg !1658
  %call484 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %156, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.362, i32 0, i32 0), i8* %157), !dbg !1659
  br label %end, !dbg !1660

if.end485:                                        ; preds = %if.end481
  br label %if.end486

if.end486:                                        ; preds = %if.end485, %if.end464
  %158 = load i8*, i8** %bindstr, align 8, !dbg !1661
  %cmp487 = icmp ne i8* %158, null, !dbg !1663
  br i1 %cmp487, label %if.then489, label %if.end496, !dbg !1664

if.then489:                                       ; preds = %if.end486
  call void @llvm.dbg.declare(metadata i32* %res490, metadata !1665, metadata !439), !dbg !1667
  %159 = load i8*, i8** %bindstr, align 8, !dbg !1668
  %call491 = call i32 @BIO_parse_hostserv(i8* %159, i8** %bindhost, i8** %bindport, i32 0), !dbg !1669
  store i32 %call491, i32* %res490, align 4, !dbg !1670
  %160 = load i32, i32* %res490, align 4, !dbg !1671
  %tobool492 = icmp ne i32 %160, 0, !dbg !1671
  br i1 %tobool492, label %if.end495, label %if.then493, !dbg !1673

if.then493:                                       ; preds = %if.then489
  %161 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1674
  %162 = load i8*, i8** @prog, align 8, !dbg !1676
  %call494 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %161, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.363, i32 0, i32 0), i8* %162), !dbg !1677
  br label %end, !dbg !1678

if.end495:                                        ; preds = %if.then489
  br label %if.end496, !dbg !1679

if.end496:                                        ; preds = %if.end495, %if.end486
  %163 = load i32, i32* %socket_family, align 4, !dbg !1680
  %cmp497 = icmp eq i32 %163, 1, !dbg !1682
  br i1 %cmp497, label %land.lhs.true499, label %if.end504, !dbg !1683

land.lhs.true499:                                 ; preds = %if.end496
  %164 = load i32, i32* %socket_type, align 4, !dbg !1684
  %cmp500 = icmp ne i32 %164, 1, !dbg !1686
  br i1 %cmp500, label %if.then502, label %if.end504, !dbg !1687

if.then502:                                       ; preds = %land.lhs.true499
  %165 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1688
  %call503 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %165, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.364, i32 0, i32 0)), !dbg !1690
  br label %end, !dbg !1691

if.end504:                                        ; preds = %land.lhs.true499, %if.end496
  store i32 -1, i32* getelementptr inbounds (%struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* @next_proto, i32 0, i32 2), align 8, !dbg !1692
  %166 = load i8*, i8** %next_proto_neg_in, align 8, !dbg !1693
  %tobool505 = icmp ne i8* %166, null, !dbg !1693
  br i1 %tobool505, label %if.then506, label %if.else513, !dbg !1695

if.then506:                                       ; preds = %if.end504
  %167 = load i8*, i8** %next_proto_neg_in, align 8, !dbg !1696
  %call507 = call i8* @next_protos_parse(i64* getelementptr inbounds (%struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* @next_proto, i32 0, i32 1), i8* %167), !dbg !1698
  store i8* %call507, i8** getelementptr inbounds (%struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* @next_proto, i32 0, i32 0), align 8, !dbg !1699
  %168 = load i8*, i8** getelementptr inbounds (%struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* @next_proto, i32 0, i32 0), align 8, !dbg !1700
  %cmp508 = icmp eq i8* %168, null, !dbg !1702
  br i1 %cmp508, label %if.then510, label %if.end512, !dbg !1703

if.then510:                                       ; preds = %if.then506
  %169 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1704
  %call511 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %169, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.365, i32 0, i32 0)), !dbg !1706
  br label %end, !dbg !1707

if.end512:                                        ; preds = %if.then506
  br label %if.end514, !dbg !1708

if.else513:                                       ; preds = %if.end504
  store i8* null, i8** getelementptr inbounds (%struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* @next_proto, i32 0, i32 0), align 8, !dbg !1709
  br label %if.end514

if.end514:                                        ; preds = %if.else513, %if.end512
  %170 = load i8*, i8** %passarg, align 8, !dbg !1710
  %call515 = call i32 @app_passwd(i8* %170, i8* null, i8** %pass, i8** null), !dbg !1712
  %tobool516 = icmp ne i32 %call515, 0, !dbg !1712
  br i1 %tobool516, label %if.end519, label %if.then517, !dbg !1713

if.then517:                                       ; preds = %if.end514
  %171 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1714
  %call518 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %171, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.366, i32 0, i32 0)), !dbg !1716
  br label %end, !dbg !1717

if.end519:                                        ; preds = %if.end514
  %172 = load i8*, i8** %proxypassarg, align 8, !dbg !1718
  %call520 = call i32 @app_passwd(i8* %172, i8* null, i8** %proxypass, i8** null), !dbg !1720
  %tobool521 = icmp ne i32 %call520, 0, !dbg !1720
  br i1 %tobool521, label %if.end524, label %if.then522, !dbg !1721

if.then522:                                       ; preds = %if.end519
  %173 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1722
  %call523 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %173, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.367, i32 0, i32 0)), !dbg !1724
  br label %end, !dbg !1725

if.end524:                                        ; preds = %if.end519
  %174 = load i8*, i8** %proxypass, align 8, !dbg !1726
  %cmp525 = icmp ne i8* %174, null, !dbg !1728
  br i1 %cmp525, label %land.lhs.true527, label %if.end532, !dbg !1729

land.lhs.true527:                                 ; preds = %if.end524
  %175 = load i8*, i8** %proxyuser, align 8, !dbg !1730
  %cmp528 = icmp eq i8* %175, null, !dbg !1732
  br i1 %cmp528, label %if.then530, label %if.end532, !dbg !1733

if.then530:                                       ; preds = %land.lhs.true527
  %176 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1734
  %call531 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %176, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.368, i32 0, i32 0)), !dbg !1736
  br label %end, !dbg !1737

if.end532:                                        ; preds = %land.lhs.true527, %if.end524
  %177 = load i8*, i8** %key_file, align 8, !dbg !1738
  %cmp533 = icmp eq i8* %177, null, !dbg !1740
  br i1 %cmp533, label %if.then535, label %if.end536, !dbg !1741

if.then535:                                       ; preds = %if.end532
  %178 = load i8*, i8** %cert_file, align 8, !dbg !1742
  store i8* %178, i8** %key_file, align 8, !dbg !1743
  br label %if.end536, !dbg !1744

if.end536:                                        ; preds = %if.then535, %if.end532
  %179 = load i8*, i8** %key_file, align 8, !dbg !1745
  %cmp537 = icmp ne i8* %179, null, !dbg !1747
  br i1 %cmp537, label %if.then539, label %if.end545, !dbg !1748

if.then539:                                       ; preds = %if.end536
  %180 = load i8*, i8** %key_file, align 8, !dbg !1749
  %181 = load i32, i32* %key_format, align 4, !dbg !1751
  %182 = load i8*, i8** %pass, align 8, !dbg !1752
  %183 = load %struct.engine_st*, %struct.engine_st** %e, align 8, !dbg !1753
  %call540 = call %struct.evp_pkey_st* @load_key(i8* %180, i32 %181, i32 0, i8* %182, %struct.engine_st* %183, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.369, i32 0, i32 0)), !dbg !1754
  store %struct.evp_pkey_st* %call540, %struct.evp_pkey_st** %key, align 8, !dbg !1755
  %184 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %key, align 8, !dbg !1756
  %cmp541 = icmp eq %struct.evp_pkey_st* %184, null, !dbg !1758
  br i1 %cmp541, label %if.then543, label %if.end544, !dbg !1759

if.then543:                                       ; preds = %if.then539
  %185 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1760
  call void @ERR_print_errors(%struct.bio_st* %185), !dbg !1762
  br label %end, !dbg !1763

if.end544:                                        ; preds = %if.then539
  br label %if.end545, !dbg !1764

if.end545:                                        ; preds = %if.end544, %if.end536
  %186 = load i8*, i8** %cert_file, align 8, !dbg !1765
  %cmp546 = icmp ne i8* %186, null, !dbg !1767
  br i1 %cmp546, label %if.then548, label %if.end554, !dbg !1768

if.then548:                                       ; preds = %if.end545
  %187 = load i8*, i8** %cert_file, align 8, !dbg !1769
  %188 = load i32, i32* %cert_format, align 4, !dbg !1771
  %call549 = call %struct.x509_st* @load_cert(i8* %187, i32 %188, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.370, i32 0, i32 0)), !dbg !1772
  store %struct.x509_st* %call549, %struct.x509_st** %cert, align 8, !dbg !1773
  %189 = load %struct.x509_st*, %struct.x509_st** %cert, align 8, !dbg !1774
  %cmp550 = icmp eq %struct.x509_st* %189, null, !dbg !1776
  br i1 %cmp550, label %if.then552, label %if.end553, !dbg !1777

if.then552:                                       ; preds = %if.then548
  %190 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1778
  call void @ERR_print_errors(%struct.bio_st* %190), !dbg !1780
  br label %end, !dbg !1781

if.end553:                                        ; preds = %if.then548
  br label %if.end554, !dbg !1782

if.end554:                                        ; preds = %if.end553, %if.end545
  %191 = load i8*, i8** %chain_file, align 8, !dbg !1783
  %cmp555 = icmp ne i8* %191, null, !dbg !1785
  br i1 %cmp555, label %if.then557, label %if.end562, !dbg !1786

if.then557:                                       ; preds = %if.end554
  %192 = load i8*, i8** %chain_file, align 8, !dbg !1787
  %call558 = call i32 @load_certs(i8* %192, %struct.stack_st_X509** %chain, i32 32773, i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.371, i32 0, i32 0)), !dbg !1790
  %tobool559 = icmp ne i32 %call558, 0, !dbg !1790
  br i1 %tobool559, label %if.end561, label %if.then560, !dbg !1791

if.then560:                                       ; preds = %if.then557
  br label %end, !dbg !1792

if.end561:                                        ; preds = %if.then557
  br label %if.end562, !dbg !1793

if.end562:                                        ; preds = %if.end561, %if.end554
  %193 = load i8*, i8** %crl_file, align 8, !dbg !1794
  %cmp563 = icmp ne i8* %193, null, !dbg !1796
  br i1 %cmp563, label %if.then565, label %if.end581, !dbg !1797

if.then565:                                       ; preds = %if.end562
  call void @llvm.dbg.declare(metadata %struct.X509_crl_st** %crl, metadata !1798, metadata !439), !dbg !1803
  %194 = load i8*, i8** %crl_file, align 8, !dbg !1804
  %195 = load i32, i32* %crl_format, align 4, !dbg !1805
  %call566 = call %struct.X509_crl_st* @load_crl(i8* %194, i32 %195), !dbg !1806
  store %struct.X509_crl_st* %call566, %struct.X509_crl_st** %crl, align 8, !dbg !1807
  %196 = load %struct.X509_crl_st*, %struct.X509_crl_st** %crl, align 8, !dbg !1808
  %cmp567 = icmp eq %struct.X509_crl_st* %196, null, !dbg !1810
  br i1 %cmp567, label %if.then569, label %if.end571, !dbg !1811

if.then569:                                       ; preds = %if.then565
  %197 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1812
  %call570 = call i32 @BIO_puts(%struct.bio_st* %197, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.372, i32 0, i32 0)), !dbg !1814
  %198 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1815
  call void @ERR_print_errors(%struct.bio_st* %198), !dbg !1816
  br label %end, !dbg !1817

if.end571:                                        ; preds = %if.then565
  %call572 = call %struct.stack_st_X509_CRL* @sk_X509_CRL_new_null(), !dbg !1818
  store %struct.stack_st_X509_CRL* %call572, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !1819
  %199 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !1820
  %cmp573 = icmp eq %struct.stack_st_X509_CRL* %199, null, !dbg !1822
  br i1 %cmp573, label %if.then578, label %lor.lhs.false575, !dbg !1823

lor.lhs.false575:                                 ; preds = %if.end571
  %200 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !1824
  %201 = load %struct.X509_crl_st*, %struct.X509_crl_st** %crl, align 8, !dbg !1826
  %call576 = call i32 @sk_X509_CRL_push(%struct.stack_st_X509_CRL* %200, %struct.X509_crl_st* %201), !dbg !1827
  %tobool577 = icmp ne i32 %call576, 0, !dbg !1827
  br i1 %tobool577, label %if.end580, label %if.then578, !dbg !1828

if.then578:                                       ; preds = %lor.lhs.false575, %if.end571
  %202 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1829
  %call579 = call i32 @BIO_puts(%struct.bio_st* %202, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.373, i32 0, i32 0)), !dbg !1831
  %203 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1832
  call void @ERR_print_errors(%struct.bio_st* %203), !dbg !1833
  %204 = load %struct.X509_crl_st*, %struct.X509_crl_st** %crl, align 8, !dbg !1834
  call void @X509_CRL_free(%struct.X509_crl_st* %204), !dbg !1835
  br label %end, !dbg !1836

if.end580:                                        ; preds = %lor.lhs.false575
  br label %if.end581, !dbg !1837

if.end581:                                        ; preds = %if.end580, %if.end562
  %call582 = call i32 @load_excert(%struct.ssl_excert_st** %exc), !dbg !1838
  %tobool583 = icmp ne i32 %call582, 0, !dbg !1838
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !1840

if.then584:                                       ; preds = %if.end581
  br label %end, !dbg !1841

if.end585:                                        ; preds = %if.end581
  %205 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !1842
  %cmp586 = icmp eq %struct.bio_st* %205, null, !dbg !1844
  br i1 %cmp586, label %if.then588, label %if.end609, !dbg !1845

if.then588:                                       ; preds = %if.end585
  %206 = load i32, i32* @c_quiet, align 4, !dbg !1846
  %tobool589 = icmp ne i32 %206, 0, !dbg !1846
  br i1 %tobool589, label %land.lhs.true590, label %if.else602, !dbg !1849

land.lhs.true590:                                 ; preds = %if.then588
  %207 = load i32, i32* @c_debug, align 4, !dbg !1850
  %tobool591 = icmp ne i32 %207, 0, !dbg !1850
  br i1 %tobool591, label %if.else602, label %if.then592, !dbg !1852

if.then592:                                       ; preds = %land.lhs.true590
  %call593 = call %struct.bio_method_st* @BIO_s_null(), !dbg !1853
  %call594 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call593), !dbg !1855
  store %struct.bio_st* %call594, %struct.bio_st** @bio_c_out, align 8, !dbg !1857
  %208 = load i32, i32* %c_msg, align 4, !dbg !1858
  %tobool595 = icmp ne i32 %208, 0, !dbg !1858
  br i1 %tobool595, label %land.lhs.true596, label %if.end601, !dbg !1860

land.lhs.true596:                                 ; preds = %if.then592
  %209 = load %struct.bio_st*, %struct.bio_st** %bio_c_msg, align 8, !dbg !1861
  %cmp597 = icmp eq %struct.bio_st* %209, null, !dbg !1863
  br i1 %cmp597, label %if.then599, label %if.end601, !dbg !1864

if.then599:                                       ; preds = %land.lhs.true596
  %call600 = call %struct.bio_st* @dup_bio_out(i32 32769), !dbg !1865
  store %struct.bio_st* %call600, %struct.bio_st** %bio_c_msg, align 8, !dbg !1866
  br label %if.end601, !dbg !1867

if.end601:                                        ; preds = %if.then599, %land.lhs.true596, %if.then592
  br label %if.end608, !dbg !1868

if.else602:                                       ; preds = %land.lhs.true590, %if.then588
  %210 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !1869
  %cmp603 = icmp eq %struct.bio_st* %210, null, !dbg !1872
  br i1 %cmp603, label %if.then605, label %if.end607, !dbg !1869

if.then605:                                       ; preds = %if.else602
  %call606 = call %struct.bio_st* @dup_bio_out(i32 32769), !dbg !1873
  store %struct.bio_st* %call606, %struct.bio_st** @bio_c_out, align 8, !dbg !1874
  br label %if.end607, !dbg !1875

if.end607:                                        ; preds = %if.then605, %if.else602
  br label %if.end608

if.end608:                                        ; preds = %if.end607, %if.end601
  br label %if.end609, !dbg !1876

if.end609:                                        ; preds = %if.end608, %if.end585
  %211 = load i8*, i8** %srppass, align 8, !dbg !1877
  %srppassin = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %srp_arg, i32 0, i32 0, !dbg !1879
  %call610 = call i32 @app_passwd(i8* %211, i8* null, i8** %srppassin, i8** null), !dbg !1880
  %tobool611 = icmp ne i32 %call610, 0, !dbg !1880
  br i1 %tobool611, label %if.end614, label %if.then612, !dbg !1881

if.then612:                                       ; preds = %if.end609
  %212 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1882
  %call613 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %212, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.374, i32 0, i32 0)), !dbg !1884
  br label %end, !dbg !1885

if.end614:                                        ; preds = %if.end609
  %213 = load %struct.ssl_method_st*, %struct.ssl_method_st** %meth, align 8, !dbg !1886
  %call615 = call %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st* %213), !dbg !1887
  store %struct.ssl_ctx_st* %call615, %struct.ssl_ctx_st** %ctx, align 8, !dbg !1888
  %214 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !1889
  %cmp616 = icmp eq %struct.ssl_ctx_st* %214, null, !dbg !1891
  br i1 %cmp616, label %if.then618, label %if.end619, !dbg !1892

if.then618:                                       ; preds = %if.end614
  %215 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1893
  call void @ERR_print_errors(%struct.bio_st* %215), !dbg !1895
  br label %end, !dbg !1896

if.end619:                                        ; preds = %if.end614
  %216 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !1897
  %call620 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %216, i32 78, i64 4, i8* null), !dbg !1898
  %217 = load i32, i32* %sdebug, align 4, !dbg !1899
  %tobool621 = icmp ne i32 %217, 0, !dbg !1899
  br i1 %tobool621, label %if.then622, label %if.end623, !dbg !1901

if.then622:                                       ; preds = %if.end619
  %218 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !1902
  %219 = load i32, i32* %sdebug, align 4, !dbg !1903
  call void @ssl_ctx_security_debug(%struct.ssl_ctx_st* %218, i32 %219), !dbg !1904
  br label %if.end623, !dbg !1904

if.end623:                                        ; preds = %if.then622, %if.end619
  %220 = load %struct.ssl_conf_ctx_st*, %struct.ssl_conf_ctx_st** %cctx, align 8, !dbg !1905
  %221 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !1907
  %222 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !1908
  %call624 = call i32 @config_ctx(%struct.ssl_conf_ctx_st* %220, %struct.stack_st_OPENSSL_STRING* %221, %struct.ssl_ctx_st* %222), !dbg !1909
  %tobool625 = icmp ne i32 %call624, 0, !dbg !1909
  br i1 %tobool625, label %if.end627, label %if.then626, !dbg !1910

if.then626:                                       ; preds = %if.end623
  br label %end, !dbg !1911

if.end627:                                        ; preds = %if.end623
  %223 = load i8*, i8** %ssl_config, align 8, !dbg !1912
  %cmp628 = icmp ne i8* %223, null, !dbg !1914
  br i1 %cmp628, label %if.then630, label %if.end637, !dbg !1915

if.then630:                                       ; preds = %if.end627
  %224 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !1916
  %225 = load i8*, i8** %ssl_config, align 8, !dbg !1919
  %call631 = call i32 @SSL_CTX_config(%struct.ssl_ctx_st* %224, i8* %225), !dbg !1920
  %cmp632 = icmp eq i32 %call631, 0, !dbg !1921
  br i1 %cmp632, label %if.then634, label %if.end636, !dbg !1922

if.then634:                                       ; preds = %if.then630
  %226 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1923
  %227 = load i8*, i8** %ssl_config, align 8, !dbg !1925
  %call635 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %226, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.375, i32 0, i32 0), i8* %227), !dbg !1926
  %228 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1927
  call void @ERR_print_errors(%struct.bio_st* %228), !dbg !1928
  br label %end, !dbg !1929

if.end636:                                        ; preds = %if.then630
  br label %if.end637, !dbg !1930

if.end637:                                        ; preds = %if.end636, %if.end627
  %229 = load i32, i32* %min_version, align 4, !dbg !1931
  %cmp638 = icmp ne i32 %229, 0, !dbg !1933
  br i1 %cmp638, label %land.lhs.true640, label %if.end646, !dbg !1934

land.lhs.true640:                                 ; preds = %if.end637
  %230 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !1935
  %231 = load i32, i32* %min_version, align 4, !dbg !1937
  %conv641 = sext i32 %231 to i64, !dbg !1937
  %call642 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %230, i32 123, i64 %conv641, i8* null), !dbg !1938
  %cmp643 = icmp eq i64 %call642, 0, !dbg !1939
  br i1 %cmp643, label %if.then645, label %if.end646, !dbg !1940

if.then645:                                       ; preds = %land.lhs.true640
  br label %end, !dbg !1941

if.end646:                                        ; preds = %land.lhs.true640, %if.end637
  %232 = load i32, i32* %max_version, align 4, !dbg !1942
  %cmp647 = icmp ne i32 %232, 0, !dbg !1944
  br i1 %cmp647, label %land.lhs.true649, label %if.end655, !dbg !1945

land.lhs.true649:                                 ; preds = %if.end646
  %233 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !1946
  %234 = load i32, i32* %max_version, align 4, !dbg !1948
  %conv650 = sext i32 %234 to i64, !dbg !1948
  %call651 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %233, i32 124, i64 %conv650, i8* null), !dbg !1949
  %cmp652 = icmp eq i64 %call651, 0, !dbg !1950
  br i1 %cmp652, label %if.then654, label %if.end655, !dbg !1951

if.then654:                                       ; preds = %land.lhs.true649
  br label %end, !dbg !1952

if.end655:                                        ; preds = %land.lhs.true649, %if.end646
  %235 = load i32, i32* %vpmtouched, align 4, !dbg !1953
  %tobool656 = icmp ne i32 %235, 0, !dbg !1953
  br i1 %tobool656, label %land.lhs.true657, label %if.end662, !dbg !1955

land.lhs.true657:                                 ; preds = %if.end655
  %236 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !1956
  %237 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %vpm, align 8, !dbg !1958
  %call658 = call i32 @SSL_CTX_set1_param(%struct.ssl_ctx_st* %236, %struct.X509_VERIFY_PARAM_st* %237), !dbg !1959
  %tobool659 = icmp ne i32 %call658, 0, !dbg !1959
  br i1 %tobool659, label %if.end662, label %if.then660, !dbg !1960

if.then660:                                       ; preds = %land.lhs.true657
  %238 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1961
  %call661 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %238, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0)), !dbg !1963
  %239 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1964
  call void @ERR_print_errors(%struct.bio_st* %239), !dbg !1965
  br label %end, !dbg !1966

if.end662:                                        ; preds = %land.lhs.true657, %if.end655
  %240 = load i32, i32* %async, align 4, !dbg !1967
  %tobool663 = icmp ne i32 %240, 0, !dbg !1967
  br i1 %tobool663, label %if.then664, label %if.end666, !dbg !1969

if.then664:                                       ; preds = %if.end662
  %241 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !1970
  %call665 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %241, i32 33, i64 256, i8* null), !dbg !1972
  br label %if.end666, !dbg !1973

if.end666:                                        ; preds = %if.then664, %if.end662
  %242 = load i32, i32* %max_send_fragment, align 4, !dbg !1974
  %cmp667 = icmp ugt i32 %242, 0, !dbg !1976
  br i1 %cmp667, label %land.lhs.true669, label %if.end675, !dbg !1977

land.lhs.true669:                                 ; preds = %if.end666
  %243 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !1978
  %244 = load i32, i32* %max_send_fragment, align 4, !dbg !1980
  %conv670 = zext i32 %244 to i64, !dbg !1980
  %call671 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %243, i32 52, i64 %conv670, i8* null), !dbg !1981
  %tobool672 = icmp ne i64 %call671, 0, !dbg !1981
  br i1 %tobool672, label %if.end675, label %if.then673, !dbg !1982

if.then673:                                       ; preds = %land.lhs.true669
  %245 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1983
  %246 = load i8*, i8** @prog, align 8, !dbg !1985
  %247 = load i32, i32* %max_send_fragment, align 4, !dbg !1986
  %call674 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %245, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.377, i32 0, i32 0), i8* %246, i32 %247), !dbg !1987
  br label %end, !dbg !1988

if.end675:                                        ; preds = %land.lhs.true669, %if.end666
  %248 = load i32, i32* %split_send_fragment, align 4, !dbg !1989
  %cmp676 = icmp ugt i32 %248, 0, !dbg !1991
  br i1 %cmp676, label %land.lhs.true678, label %if.end684, !dbg !1992

land.lhs.true678:                                 ; preds = %if.end675
  %249 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !1993
  %250 = load i32, i32* %split_send_fragment, align 4, !dbg !1995
  %conv679 = zext i32 %250 to i64, !dbg !1995
  %call680 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %249, i32 125, i64 %conv679, i8* null), !dbg !1996
  %tobool681 = icmp ne i64 %call680, 0, !dbg !1996
  br i1 %tobool681, label %if.end684, label %if.then682, !dbg !1997

if.then682:                                       ; preds = %land.lhs.true678
  %251 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1998
  %252 = load i8*, i8** @prog, align 8, !dbg !2000
  %253 = load i32, i32* %split_send_fragment, align 4, !dbg !2001
  %call683 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %251, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.378, i32 0, i32 0), i8* %252, i32 %253), !dbg !2002
  br label %end, !dbg !2003

if.end684:                                        ; preds = %land.lhs.true678, %if.end675
  %254 = load i32, i32* %max_pipelines, align 4, !dbg !2004
  %cmp685 = icmp ugt i32 %254, 0, !dbg !2006
  br i1 %cmp685, label %land.lhs.true687, label %if.end693, !dbg !2007

land.lhs.true687:                                 ; preds = %if.end684
  %255 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2008
  %256 = load i32, i32* %max_pipelines, align 4, !dbg !2010
  %conv688 = zext i32 %256 to i64, !dbg !2010
  %call689 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %255, i32 126, i64 %conv688, i8* null), !dbg !2011
  %tobool690 = icmp ne i64 %call689, 0, !dbg !2011
  br i1 %tobool690, label %if.end693, label %if.then691, !dbg !2012

if.then691:                                       ; preds = %land.lhs.true687
  %257 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2013
  %258 = load i8*, i8** @prog, align 8, !dbg !2015
  %259 = load i32, i32* %max_pipelines, align 4, !dbg !2016
  %call692 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %257, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.379, i32 0, i32 0), i8* %258, i32 %259), !dbg !2017
  br label %end, !dbg !2018

if.end693:                                        ; preds = %land.lhs.true687, %if.end684
  %260 = load i32, i32* %read_buf_len, align 4, !dbg !2019
  %cmp694 = icmp sgt i32 %260, 0, !dbg !2021
  br i1 %cmp694, label %if.then696, label %if.end698, !dbg !2022

if.then696:                                       ; preds = %if.end693
  %261 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2023
  %262 = load i32, i32* %read_buf_len, align 4, !dbg !2025
  %conv697 = sext i32 %262 to i64, !dbg !2025
  call void @SSL_CTX_set_default_read_buffer_len(%struct.ssl_ctx_st* %261, i64 %conv697), !dbg !2026
  br label %if.end698, !dbg !2027

if.end698:                                        ; preds = %if.then696, %if.end693
  %263 = load i8, i8* %maxfraglen, align 1, !dbg !2028
  %conv699 = zext i8 %263 to i32, !dbg !2028
  %cmp700 = icmp sgt i32 %conv699, 0, !dbg !2030
  br i1 %cmp700, label %land.lhs.true702, label %if.end708, !dbg !2031

land.lhs.true702:                                 ; preds = %if.end698
  %264 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2032
  %265 = load i8, i8* %maxfraglen, align 1, !dbg !2034
  %call703 = call i32 @SSL_CTX_set_tlsext_max_fragment_length(%struct.ssl_ctx_st* %264, i8 zeroext %265), !dbg !2035
  %tobool704 = icmp ne i32 %call703, 0, !dbg !2035
  br i1 %tobool704, label %if.end708, label %if.then705, !dbg !2036

if.then705:                                       ; preds = %land.lhs.true702
  %266 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2037
  %267 = load i8*, i8** @prog, align 8, !dbg !2039
  %268 = load i8, i8* %maxfraglen, align 1, !dbg !2040
  %conv706 = zext i8 %268 to i32, !dbg !2040
  %call707 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %266, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.380, i32 0, i32 0), i8* %267, i32 %conv706), !dbg !2041
  br label %end, !dbg !2042

if.end708:                                        ; preds = %land.lhs.true702, %if.end698
  %269 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2043
  %270 = load i8*, i8** %vfyCApath, align 8, !dbg !2045
  %271 = load i8*, i8** %vfyCAfile, align 8, !dbg !2046
  %272 = load i8*, i8** %chCApath, align 8, !dbg !2047
  %273 = load i8*, i8** %chCAfile, align 8, !dbg !2048
  %274 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !2049
  %275 = load i32, i32* %crl_download, align 4, !dbg !2050
  %call709 = call i32 @ssl_load_stores(%struct.ssl_ctx_st* %269, i8* %270, i8* %271, i8* %272, i8* %273, %struct.stack_st_X509_CRL* %274, i32 %275), !dbg !2051
  %tobool710 = icmp ne i32 %call709, 0, !dbg !2051
  br i1 %tobool710, label %if.end713, label %if.then711, !dbg !2052

if.then711:                                       ; preds = %if.end708
  %276 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2053
  %call712 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %276, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.381, i32 0, i32 0)), !dbg !2055
  %277 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2056
  call void @ERR_print_errors(%struct.bio_st* %277), !dbg !2057
  br label %end, !dbg !2058

if.end713:                                        ; preds = %if.end708
  %278 = load i8*, i8** %ReqCAfile, align 8, !dbg !2059
  %cmp714 = icmp ne i8* %278, null, !dbg !2061
  br i1 %cmp714, label %if.then716, label %if.end726, !dbg !2062

if.then716:                                       ; preds = %if.end713
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509_NAME** %nm, metadata !2063, metadata !439), !dbg !2065
  %call717 = call %struct.stack_st_X509_NAME* @sk_X509_NAME_new_null(), !dbg !2066
  store %struct.stack_st_X509_NAME* %call717, %struct.stack_st_X509_NAME** %nm, align 8, !dbg !2065
  %279 = load %struct.stack_st_X509_NAME*, %struct.stack_st_X509_NAME** %nm, align 8, !dbg !2067
  %cmp718 = icmp eq %struct.stack_st_X509_NAME* %279, null, !dbg !2069
  br i1 %cmp718, label %if.then723, label %lor.lhs.false720, !dbg !2070

lor.lhs.false720:                                 ; preds = %if.then716
  %280 = load %struct.stack_st_X509_NAME*, %struct.stack_st_X509_NAME** %nm, align 8, !dbg !2071
  %281 = load i8*, i8** %ReqCAfile, align 8, !dbg !2073
  %call721 = call i32 @SSL_add_file_cert_subjects_to_stack(%struct.stack_st_X509_NAME* %280, i8* %281), !dbg !2074
  %tobool722 = icmp ne i32 %call721, 0, !dbg !2074
  br i1 %tobool722, label %if.end725, label %if.then723, !dbg !2075

if.then723:                                       ; preds = %lor.lhs.false720, %if.then716
  %282 = load %struct.stack_st_X509_NAME*, %struct.stack_st_X509_NAME** %nm, align 8, !dbg !2076
  call void @sk_X509_NAME_pop_free(%struct.stack_st_X509_NAME* %282, void (%struct.X509_name_st*)* @X509_NAME_free), !dbg !2078
  %283 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2079
  %call724 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %283, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.382, i32 0, i32 0)), !dbg !2080
  %284 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2081
  call void @ERR_print_errors(%struct.bio_st* %284), !dbg !2082
  br label %end, !dbg !2083

if.end725:                                        ; preds = %lor.lhs.false720
  %285 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2084
  %286 = load %struct.stack_st_X509_NAME*, %struct.stack_st_X509_NAME** %nm, align 8, !dbg !2085
  call void @SSL_CTX_set0_CA_list(%struct.ssl_ctx_st* %285, %struct.stack_st_X509_NAME* %286), !dbg !2086
  br label %if.end726, !dbg !2087

if.end726:                                        ; preds = %if.end725, %if.end713
  %287 = load %struct.engine_st*, %struct.engine_st** %ssl_client_engine, align 8, !dbg !2088
  %tobool727 = icmp ne %struct.engine_st* %287, null, !dbg !2088
  br i1 %tobool727, label %if.then728, label %if.end736, !dbg !2090

if.then728:                                       ; preds = %if.end726
  %288 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2091
  %289 = load %struct.engine_st*, %struct.engine_st** %ssl_client_engine, align 8, !dbg !2094
  %call729 = call i32 @SSL_CTX_set_client_cert_engine(%struct.ssl_ctx_st* %288, %struct.engine_st* %289), !dbg !2095
  %tobool730 = icmp ne i32 %call729, 0, !dbg !2095
  br i1 %tobool730, label %if.end734, label %if.then731, !dbg !2096

if.then731:                                       ; preds = %if.then728
  %290 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2097
  %call732 = call i32 @BIO_puts(%struct.bio_st* %290, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.383, i32 0, i32 0)), !dbg !2099
  %291 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2100
  call void @ERR_print_errors(%struct.bio_st* %291), !dbg !2101
  %292 = load %struct.engine_st*, %struct.engine_st** %ssl_client_engine, align 8, !dbg !2102
  %call733 = call i32 @ENGINE_free(%struct.engine_st* %292), !dbg !2103
  br label %end, !dbg !2104

if.end734:                                        ; preds = %if.then728
  %293 = load %struct.engine_st*, %struct.engine_st** %ssl_client_engine, align 8, !dbg !2105
  %call735 = call i32 @ENGINE_free(%struct.engine_st* %293), !dbg !2106
  br label %if.end736, !dbg !2107

if.end736:                                        ; preds = %if.end734, %if.end726
  %294 = load i8*, i8** @psk_key, align 8, !dbg !2108
  %cmp737 = icmp ne i8* %294, null, !dbg !2110
  br i1 %cmp737, label %if.then739, label %if.end744, !dbg !2111

if.then739:                                       ; preds = %if.end736
  %295 = load i32, i32* @c_debug, align 4, !dbg !2112
  %tobool740 = icmp ne i32 %295, 0, !dbg !2112
  br i1 %tobool740, label %if.then741, label %if.end743, !dbg !2115

if.then741:                                       ; preds = %if.then739
  %296 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !2116
  %call742 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %296, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.384, i32 0, i32 0)), !dbg !2117
  br label %if.end743, !dbg !2117

if.end743:                                        ; preds = %if.then741, %if.then739
  %297 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2118
  call void @SSL_CTX_set_psk_client_callback(%struct.ssl_ctx_st* %297, i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)* @psk_client_cb), !dbg !2119
  br label %if.end744, !dbg !2120

if.end744:                                        ; preds = %if.end743, %if.end736
  %298 = load i8*, i8** %psksessf, align 8, !dbg !2121
  %cmp745 = icmp ne i8* %298, null, !dbg !2123
  br i1 %cmp745, label %if.then747, label %if.end761, !dbg !2124

if.then747:                                       ; preds = %if.end744
  call void @llvm.dbg.declare(metadata %struct.bio_st** %stmp, metadata !2125, metadata !439), !dbg !2127
  %299 = load i8*, i8** %psksessf, align 8, !dbg !2128
  %call748 = call %struct.bio_st* @BIO_new_file(i8* %299, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.385, i32 0, i32 0)), !dbg !2129
  store %struct.bio_st* %call748, %struct.bio_st** %stmp, align 8, !dbg !2127
  %300 = load %struct.bio_st*, %struct.bio_st** %stmp, align 8, !dbg !2130
  %cmp749 = icmp eq %struct.bio_st* %300, null, !dbg !2132
  br i1 %cmp749, label %if.then751, label %if.end753, !dbg !2133

if.then751:                                       ; preds = %if.then747
  %301 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2134
  %302 = load i8*, i8** %psksessf, align 8, !dbg !2136
  %call752 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %301, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.386, i32 0, i32 0), i8* %302), !dbg !2137
  %303 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2138
  call void @ERR_print_errors(%struct.bio_st* %303), !dbg !2139
  br label %end, !dbg !2140

if.end753:                                        ; preds = %if.then747
  %304 = load %struct.bio_st*, %struct.bio_st** %stmp, align 8, !dbg !2141
  %call754 = call %struct.ssl_session_st* @PEM_read_bio_SSL_SESSION(%struct.bio_st* %304, %struct.ssl_session_st** null, i32 (i8*, i32, i32, i8*)* null, i8* null), !dbg !2142
  store %struct.ssl_session_st* %call754, %struct.ssl_session_st** @psksess, align 8, !dbg !2143
  %305 = load %struct.bio_st*, %struct.bio_st** %stmp, align 8, !dbg !2144
  %call755 = call i32 @BIO_free(%struct.bio_st* %305), !dbg !2145
  %306 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !2146
  %cmp756 = icmp eq %struct.ssl_session_st* %306, null, !dbg !2148
  br i1 %cmp756, label %if.then758, label %if.end760, !dbg !2149

if.then758:                                       ; preds = %if.end753
  %307 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2150
  %308 = load i8*, i8** %psksessf, align 8, !dbg !2152
  %call759 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %307, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.387, i32 0, i32 0), i8* %308), !dbg !2153
  %309 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2154
  call void @ERR_print_errors(%struct.bio_st* %309), !dbg !2155
  br label %end, !dbg !2156

if.end760:                                        ; preds = %if.end753
  br label %if.end761, !dbg !2157

if.end761:                                        ; preds = %if.end760, %if.end744
  %310 = load i8*, i8** @psk_key, align 8, !dbg !2158
  %cmp762 = icmp ne i8* %310, null, !dbg !2160
  br i1 %cmp762, label %if.then767, label %lor.lhs.false764, !dbg !2161

lor.lhs.false764:                                 ; preds = %if.end761
  %311 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !2162
  %cmp765 = icmp ne %struct.ssl_session_st* %311, null, !dbg !2164
  br i1 %cmp765, label %if.then767, label %if.end768, !dbg !2165

if.then767:                                       ; preds = %lor.lhs.false764, %if.end761
  %312 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2166
  call void @SSL_CTX_set_psk_use_session_callback(%struct.ssl_ctx_st* %312, i32 (%struct.ssl_st*, %struct.evp_md_st*, i8**, i64*, %struct.ssl_session_st**)* @psk_use_session_cb), !dbg !2167
  br label %if.end768, !dbg !2167

if.end768:                                        ; preds = %if.then767, %lor.lhs.false764
  %313 = load i8*, i8** %srtp_profiles, align 8, !dbg !2168
  %cmp769 = icmp ne i8* %313, null, !dbg !2170
  br i1 %cmp769, label %if.then771, label %if.end778, !dbg !2171

if.then771:                                       ; preds = %if.end768
  %314 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2172
  %315 = load i8*, i8** %srtp_profiles, align 8, !dbg !2175
  %call772 = call i32 @SSL_CTX_set_tlsext_use_srtp(%struct.ssl_ctx_st* %314, i8* %315), !dbg !2176
  %cmp773 = icmp ne i32 %call772, 0, !dbg !2177
  br i1 %cmp773, label %if.then775, label %if.end777, !dbg !2178

if.then775:                                       ; preds = %if.then771
  %316 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2179
  %call776 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %316, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.388, i32 0, i32 0)), !dbg !2181
  %317 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2182
  call void @ERR_print_errors(%struct.bio_st* %317), !dbg !2183
  br label %end, !dbg !2184

if.end777:                                        ; preds = %if.then771
  br label %if.end778, !dbg !2185

if.end778:                                        ; preds = %if.end777, %if.end768
  %318 = load %struct.ssl_excert_st*, %struct.ssl_excert_st** %exc, align 8, !dbg !2186
  %cmp779 = icmp ne %struct.ssl_excert_st* %318, null, !dbg !2188
  br i1 %cmp779, label %if.then781, label %if.end782, !dbg !2189

if.then781:                                       ; preds = %if.end778
  %319 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2190
  %320 = load %struct.ssl_excert_st*, %struct.ssl_excert_st** %exc, align 8, !dbg !2191
  call void @ssl_ctx_set_excert(%struct.ssl_ctx_st* %319, %struct.ssl_excert_st* %320), !dbg !2192
  br label %if.end782, !dbg !2192

if.end782:                                        ; preds = %if.then781, %if.end778
  %321 = load i8*, i8** getelementptr inbounds (%struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* @next_proto, i32 0, i32 0), align 8, !dbg !2193
  %cmp783 = icmp ne i8* %321, null, !dbg !2195
  br i1 %cmp783, label %if.then785, label %if.end786, !dbg !2196

if.then785:                                       ; preds = %if.end782
  %322 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2197
  call void @SSL_CTX_set_next_proto_select_cb(%struct.ssl_ctx_st* %322, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)* @next_proto_cb, i8* bitcast (%struct.tlsextnextprotoctx_st* @next_proto to i8*)), !dbg !2198
  br label %if.end786, !dbg !2198

if.end786:                                        ; preds = %if.then785, %if.end782
  %323 = load i8*, i8** %alpn_in, align 8, !dbg !2199
  %tobool787 = icmp ne i8* %323, null, !dbg !2199
  br i1 %tobool787, label %if.then788, label %if.end802, !dbg !2201

if.then788:                                       ; preds = %if.end786
  call void @llvm.dbg.declare(metadata i64* %alpn_len, metadata !2202, metadata !439), !dbg !2204
  call void @llvm.dbg.declare(metadata i8** %alpn, metadata !2205, metadata !439), !dbg !2206
  %324 = load i8*, i8** %alpn_in, align 8, !dbg !2207
  %call789 = call i8* @next_protos_parse(i64* %alpn_len, i8* %324), !dbg !2208
  store i8* %call789, i8** %alpn, align 8, !dbg !2206
  %325 = load i8*, i8** %alpn, align 8, !dbg !2209
  %cmp790 = icmp eq i8* %325, null, !dbg !2211
  br i1 %cmp790, label %if.then792, label %if.end794, !dbg !2212

if.then792:                                       ; preds = %if.then788
  %326 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2213
  %call793 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %326, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.389, i32 0, i32 0)), !dbg !2215
  br label %end, !dbg !2216

if.end794:                                        ; preds = %if.then788
  %327 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2217
  %328 = load i8*, i8** %alpn, align 8, !dbg !2219
  %329 = load i64, i64* %alpn_len, align 8, !dbg !2220
  %conv795 = trunc i64 %329 to i32, !dbg !2220
  %call796 = call i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st* %327, i8* %328, i32 %conv795), !dbg !2221
  %cmp797 = icmp ne i32 %call796, 0, !dbg !2222
  br i1 %cmp797, label %if.then799, label %if.end801, !dbg !2223

if.then799:                                       ; preds = %if.end794
  %330 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2224
  %call800 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %330, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.390, i32 0, i32 0)), !dbg !2226
  br label %end, !dbg !2227

if.end801:                                        ; preds = %if.end794
  %331 = load i8*, i8** %alpn, align 8, !dbg !2228
  call void @CRYPTO_free(i8* %331, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 1884), !dbg !2229
  br label %if.end802, !dbg !2230

if.end802:                                        ; preds = %if.end801, %if.end786
  store i32 0, i32* %i, align 4, !dbg !2231
  br label %for.cond803, !dbg !2233

for.cond803:                                      ; preds = %for.inc818, %if.end802
  %332 = load i32, i32* %i, align 4, !dbg !2234
  %333 = load i32, i32* %serverinfo_count, align 4, !dbg !2237
  %cmp804 = icmp slt i32 %332, %333, !dbg !2238
  br i1 %cmp804, label %for.body806, label %for.end820, !dbg !2239

for.body806:                                      ; preds = %for.cond803
  %334 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2240
  %335 = load i32, i32* %i, align 4, !dbg !2243
  %idxprom807 = sext i32 %335 to i64, !dbg !2244
  %arrayidx808 = getelementptr inbounds [100 x i16], [100 x i16]* %serverinfo_types, i64 0, i64 %idxprom807, !dbg !2244
  %336 = load i16, i16* %arrayidx808, align 2, !dbg !2244
  %conv809 = zext i16 %336 to i32, !dbg !2244
  %call810 = call i32 @SSL_CTX_add_client_custom_ext(%struct.ssl_ctx_st* %334, i32 %conv809, i32 (%struct.ssl_st*, i32, i8**, i64*, i32*, i8*)* null, void (%struct.ssl_st*, i32, i8*, i8*)* null, i8* null, i32 (%struct.ssl_st*, i32, i8*, i64, i32*, i8*)* @serverinfo_cli_parse_cb, i8* null), !dbg !2245
  %tobool811 = icmp ne i32 %call810, 0, !dbg !2245
  br i1 %tobool811, label %if.end817, label %if.then812, !dbg !2246

if.then812:                                       ; preds = %for.body806
  %337 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2247
  %338 = load i32, i32* %i, align 4, !dbg !2249
  %idxprom813 = sext i32 %338 to i64, !dbg !2250
  %arrayidx814 = getelementptr inbounds [100 x i16], [100 x i16]* %serverinfo_types, i64 0, i64 %idxprom813, !dbg !2250
  %339 = load i16, i16* %arrayidx814, align 2, !dbg !2250
  %conv815 = zext i16 %339 to i32, !dbg !2250
  %call816 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %337, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.391, i32 0, i32 0), i32 %conv815), !dbg !2251
  br label %if.end817, !dbg !2252

if.end817:                                        ; preds = %if.then812, %for.body806
  br label %for.inc818, !dbg !2253

for.inc818:                                       ; preds = %if.end817
  %340 = load i32, i32* %i, align 4, !dbg !2254
  %inc819 = add nsw i32 %340, 1, !dbg !2254
  store i32 %inc819, i32* %i, align 4, !dbg !2254
  br label %for.cond803, !dbg !2256, !llvm.loop !2257

for.end820:                                       ; preds = %for.cond803
  %341 = load i32, i32* %state, align 4, !dbg !2259
  %tobool821 = icmp ne i32 %341, 0, !dbg !2259
  br i1 %tobool821, label %if.then822, label %if.end823, !dbg !2261

if.then822:                                       ; preds = %for.end820
  %342 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2262
  call void @SSL_CTX_set_info_callback(%struct.ssl_ctx_st* %342, void (%struct.ssl_st*, i32, i32)* @apps_ssl_info_callback), !dbg !2263
  br label %if.end823, !dbg !2263

if.end823:                                        ; preds = %if.then822, %for.end820
  %343 = load i32, i32* %ct_validation, align 4, !dbg !2264
  %tobool824 = icmp ne i32 %343, 0, !dbg !2264
  br i1 %tobool824, label %land.lhs.true825, label %if.end829, !dbg !2266

land.lhs.true825:                                 ; preds = %if.end823
  %344 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2267
  %call826 = call i32 @SSL_CTX_enable_ct(%struct.ssl_ctx_st* %344, i32 0), !dbg !2268
  %tobool827 = icmp ne i32 %call826, 0, !dbg !2268
  br i1 %tobool827, label %if.end829, label %if.then828, !dbg !2269

if.then828:                                       ; preds = %land.lhs.true825
  %345 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2270
  call void @ERR_print_errors(%struct.bio_st* %345), !dbg !2272
  br label %end, !dbg !2273

if.end829:                                        ; preds = %land.lhs.true825, %if.end823
  %346 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2274
  %347 = load i8*, i8** %ctlog_file, align 8, !dbg !2276
  %call830 = call i32 @ctx_set_ctlog_list_file(%struct.ssl_ctx_st* %346, i8* %347), !dbg !2277
  %tobool831 = icmp ne i32 %call830, 0, !dbg !2277
  br i1 %tobool831, label %if.end836, label %if.then832, !dbg !2278

if.then832:                                       ; preds = %if.end829
  %348 = load i32, i32* %ct_validation, align 4, !dbg !2279
  %tobool833 = icmp ne i32 %348, 0, !dbg !2279
  br i1 %tobool833, label %if.then834, label %if.end835, !dbg !2282

if.then834:                                       ; preds = %if.then832
  %349 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2283
  call void @ERR_print_errors(%struct.bio_st* %349), !dbg !2285
  br label %end, !dbg !2286

if.end835:                                        ; preds = %if.then832
  call void @ERR_clear_error(), !dbg !2287
  br label %if.end836, !dbg !2288

if.end836:                                        ; preds = %if.end835, %if.end829
  %350 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2289
  %351 = load i32, i32* %verify, align 4, !dbg !2290
  call void @SSL_CTX_set_verify(%struct.ssl_ctx_st* %350, i32 %351, i32 (i32, %struct.x509_store_ctx_st*)* @verify_callback), !dbg !2291
  %352 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2292
  %353 = load i8*, i8** %CAfile, align 8, !dbg !2294
  %354 = load i8*, i8** %CApath, align 8, !dbg !2295
  %355 = load i32, i32* %noCAfile, align 4, !dbg !2296
  %356 = load i32, i32* %noCApath, align 4, !dbg !2297
  %call837 = call i32 @ctx_set_verify_locations(%struct.ssl_ctx_st* %352, i8* %353, i8* %354, i32 %355, i32 %356), !dbg !2298
  %tobool838 = icmp ne i32 %call837, 0, !dbg !2298
  br i1 %tobool838, label %if.end840, label %if.then839, !dbg !2299

if.then839:                                       ; preds = %if.end836
  %357 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2300
  call void @ERR_print_errors(%struct.bio_st* %357), !dbg !2302
  br label %end, !dbg !2303

if.end840:                                        ; preds = %if.end836
  %358 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2304
  %359 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !2305
  %360 = load i32, i32* %crl_download, align 4, !dbg !2306
  %call841 = call i32 @ssl_ctx_add_crls(%struct.ssl_ctx_st* %358, %struct.stack_st_X509_CRL* %359, i32 %360), !dbg !2307
  %361 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2308
  %362 = load %struct.x509_st*, %struct.x509_st** %cert, align 8, !dbg !2310
  %363 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %key, align 8, !dbg !2311
  %364 = load %struct.stack_st_X509*, %struct.stack_st_X509** %chain, align 8, !dbg !2312
  %365 = load i32, i32* %build_chain, align 4, !dbg !2313
  %call842 = call i32 @set_cert_key_stuff(%struct.ssl_ctx_st* %361, %struct.x509_st* %362, %struct.evp_pkey_st* %363, %struct.stack_st_X509* %364, i32 %365), !dbg !2314
  %tobool843 = icmp ne i32 %call842, 0, !dbg !2314
  br i1 %tobool843, label %if.end845, label %if.then844, !dbg !2315

if.then844:                                       ; preds = %if.end840
  br label %end, !dbg !2316

if.end845:                                        ; preds = %if.end840
  %366 = load i32, i32* %noservername, align 4, !dbg !2317
  %tobool846 = icmp ne i32 %366, 0, !dbg !2317
  br i1 %tobool846, label %if.end850, label %if.then847, !dbg !2319

if.then847:                                       ; preds = %if.end845
  %367 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2320
  %biodebug = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %tlsextcbp, i32 0, i32 0, !dbg !2322
  store %struct.bio_st* %367, %struct.bio_st** %biodebug, align 8, !dbg !2323
  %368 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2324
  %call848 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* %368, i32 53, void ()* bitcast (i32 (%struct.ssl_st*, i32*, i8*)* @ssl_servername_cb to void ()*)), !dbg !2325
  %369 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2326
  %370 = bitcast %struct.tlsextctx_st* %tlsextcbp to i8*, !dbg !2327
  %call849 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %369, i32 54, i64 0, i8* %370), !dbg !2328
  br label %if.end850, !dbg !2329

if.end850:                                        ; preds = %if.then847, %if.end845
  %srplogin851 = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %srp_arg, i32 0, i32 1, !dbg !2330
  %371 = load i8*, i8** %srplogin851, align 8, !dbg !2330
  %tobool852 = icmp ne i8* %371, null, !dbg !2332
  br i1 %tobool852, label %if.then853, label %if.end876, !dbg !2333

if.then853:                                       ; preds = %if.end850
  %372 = load i32, i32* %srp_lateuser, align 4, !dbg !2334
  %tobool854 = icmp ne i32 %372, 0, !dbg !2334
  br i1 %tobool854, label %if.end861, label %land.lhs.true855, !dbg !2337

land.lhs.true855:                                 ; preds = %if.then853
  %373 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2338
  %srplogin856 = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %srp_arg, i32 0, i32 1, !dbg !2340
  %374 = load i8*, i8** %srplogin856, align 8, !dbg !2340
  %call857 = call i32 @SSL_CTX_set_srp_username(%struct.ssl_ctx_st* %373, i8* %374), !dbg !2341
  %tobool858 = icmp ne i32 %call857, 0, !dbg !2341
  br i1 %tobool858, label %if.end861, label %if.then859, !dbg !2342

if.then859:                                       ; preds = %land.lhs.true855
  %375 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2343
  %call860 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %375, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.392, i32 0, i32 0)), !dbg !2345
  br label %end, !dbg !2346

if.end861:                                        ; preds = %land.lhs.true855, %if.then853
  %376 = load i32, i32* %c_msg, align 4, !dbg !2347
  %msg = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %srp_arg, i32 0, i32 2, !dbg !2348
  store i32 %376, i32* %msg, align 8, !dbg !2349
  %377 = load i32, i32* @c_debug, align 4, !dbg !2350
  %debug = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %srp_arg, i32 0, i32 3, !dbg !2351
  store i32 %377, i32* %debug, align 4, !dbg !2352
  %378 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2353
  %379 = bitcast %struct.srp_arg_st* %srp_arg to i8*, !dbg !2354
  %call862 = call i32 @SSL_CTX_set_srp_cb_arg(%struct.ssl_ctx_st* %378, i8* %379), !dbg !2355
  %380 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2356
  %call863 = call i32 @SSL_CTX_set_srp_client_pwd_callback(%struct.ssl_ctx_st* %380, i8* (%struct.ssl_st*, i8*)* @ssl_give_srp_client_pwd_cb), !dbg !2357
  %381 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2358
  %strength864 = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %srp_arg, i32 0, i32 5, !dbg !2359
  %382 = load i32, i32* %strength864, align 4, !dbg !2359
  %call865 = call i32 @SSL_CTX_set_srp_strength(%struct.ssl_ctx_st* %381, i32 %382), !dbg !2360
  %383 = load i32, i32* %c_msg, align 4, !dbg !2361
  %tobool866 = icmp ne i32 %383, 0, !dbg !2361
  br i1 %tobool866, label %if.then873, label %lor.lhs.false867, !dbg !2363

lor.lhs.false867:                                 ; preds = %if.end861
  %384 = load i32, i32* @c_debug, align 4, !dbg !2364
  %tobool868 = icmp ne i32 %384, 0, !dbg !2364
  br i1 %tobool868, label %if.then873, label %lor.lhs.false869, !dbg !2366

lor.lhs.false869:                                 ; preds = %lor.lhs.false867
  %amp870 = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %srp_arg, i32 0, i32 4, !dbg !2367
  %385 = load i32, i32* %amp870, align 8, !dbg !2367
  %cmp871 = icmp eq i32 %385, 0, !dbg !2369
  br i1 %cmp871, label %if.then873, label %if.end875, !dbg !2370

if.then873:                                       ; preds = %lor.lhs.false869, %lor.lhs.false867, %if.end861
  %386 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2371
  %call874 = call i32 @SSL_CTX_set_srp_verify_param_callback(%struct.ssl_ctx_st* %386, i32 (%struct.ssl_st*, i8*)* @ssl_srp_verify_param_cb), !dbg !2372
  br label %if.end875, !dbg !2372

if.end875:                                        ; preds = %if.then873, %lor.lhs.false869
  br label %if.end876, !dbg !2373

if.end876:                                        ; preds = %if.end875, %if.end850
  %387 = load i8*, i8** %dane_tlsa_domain, align 8, !dbg !2374
  %cmp877 = icmp ne i8* %387, null, !dbg !2376
  br i1 %cmp877, label %if.then879, label %if.end886, !dbg !2377

if.then879:                                       ; preds = %if.end876
  %388 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2378
  %call880 = call i32 @SSL_CTX_dane_enable(%struct.ssl_ctx_st* %388), !dbg !2381
  %cmp881 = icmp sle i32 %call880, 0, !dbg !2382
  br i1 %cmp881, label %if.then883, label %if.end885, !dbg !2383

if.then883:                                       ; preds = %if.then879
  %389 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2384
  %390 = load i8*, i8** @prog, align 8, !dbg !2386
  %call884 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %389, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.393, i32 0, i32 0), i8* %390), !dbg !2387
  %391 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2388
  call void @ERR_print_errors(%struct.bio_st* %391), !dbg !2389
  br label %end, !dbg !2390

if.end885:                                        ; preds = %if.then879
  br label %if.end886, !dbg !2391

if.end886:                                        ; preds = %if.end885, %if.end876
  %392 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2392
  %call887 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %392, i32 44, i64 513, i8* null), !dbg !2393
  %393 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2394
  call void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st* %393, i32 (%struct.ssl_st*, %struct.ssl_session_st*)* @new_session_cb), !dbg !2395
  %394 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2396
  %395 = load i8*, i8** %keylog_file, align 8, !dbg !2398
  %call888 = call i32 @set_keylog_file(%struct.ssl_ctx_st* %394, i8* %395), !dbg !2399
  %tobool889 = icmp ne i32 %call888, 0, !dbg !2399
  br i1 %tobool889, label %if.then890, label %if.end891, !dbg !2400

if.then890:                                       ; preds = %if.end886
  br label %end, !dbg !2401

if.end891:                                        ; preds = %if.end886
  %396 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2402
  %call892 = call %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* %396), !dbg !2403
  store %struct.ssl_st* %call892, %struct.ssl_st** %con, align 8, !dbg !2404
  %397 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2405
  %cmp893 = icmp eq %struct.ssl_st* %397, null, !dbg !2407
  br i1 %cmp893, label %if.then895, label %if.end896, !dbg !2408

if.then895:                                       ; preds = %if.end891
  br label %end, !dbg !2409

if.end896:                                        ; preds = %if.end891
  %398 = load i32, i32* %enable_pha, align 4, !dbg !2410
  %tobool897 = icmp ne i32 %398, 0, !dbg !2410
  br i1 %tobool897, label %if.then898, label %if.end899, !dbg !2412

if.then898:                                       ; preds = %if.end896
  %399 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2413
  call void @SSL_set_post_handshake_auth(%struct.ssl_st* %399, i32 1), !dbg !2414
  br label %if.end899, !dbg !2414

if.end899:                                        ; preds = %if.then898, %if.end896
  %400 = load i8*, i8** %sess_in, align 8, !dbg !2415
  %cmp900 = icmp ne i8* %400, null, !dbg !2417
  br i1 %cmp900, label %if.then902, label %if.end922, !dbg !2418

if.then902:                                       ; preds = %if.end899
  call void @llvm.dbg.declare(metadata %struct.ssl_session_st** %sess, metadata !2419, metadata !439), !dbg !2421
  call void @llvm.dbg.declare(metadata %struct.bio_st** %stmp903, metadata !2422, metadata !439), !dbg !2423
  %401 = load i8*, i8** %sess_in, align 8, !dbg !2424
  %call904 = call %struct.bio_st* @BIO_new_file(i8* %401, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.385, i32 0, i32 0)), !dbg !2425
  store %struct.bio_st* %call904, %struct.bio_st** %stmp903, align 8, !dbg !2423
  %402 = load %struct.bio_st*, %struct.bio_st** %stmp903, align 8, !dbg !2426
  %cmp905 = icmp eq %struct.bio_st* %402, null, !dbg !2428
  br i1 %cmp905, label %if.then907, label %if.end909, !dbg !2429

if.then907:                                       ; preds = %if.then902
  %403 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2430
  %404 = load i8*, i8** %sess_in, align 8, !dbg !2432
  %call908 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %403, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.394, i32 0, i32 0), i8* %404), !dbg !2433
  %405 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2434
  call void @ERR_print_errors(%struct.bio_st* %405), !dbg !2435
  br label %end, !dbg !2436

if.end909:                                        ; preds = %if.then902
  %406 = load %struct.bio_st*, %struct.bio_st** %stmp903, align 8, !dbg !2437
  %call910 = call %struct.ssl_session_st* @PEM_read_bio_SSL_SESSION(%struct.bio_st* %406, %struct.ssl_session_st** null, i32 (i8*, i32, i32, i8*)* null, i8* null), !dbg !2438
  store %struct.ssl_session_st* %call910, %struct.ssl_session_st** %sess, align 8, !dbg !2439
  %407 = load %struct.bio_st*, %struct.bio_st** %stmp903, align 8, !dbg !2440
  %call911 = call i32 @BIO_free(%struct.bio_st* %407), !dbg !2441
  %408 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !dbg !2442
  %cmp912 = icmp eq %struct.ssl_session_st* %408, null, !dbg !2444
  br i1 %cmp912, label %if.then914, label %if.end916, !dbg !2445

if.then914:                                       ; preds = %if.end909
  %409 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2446
  %410 = load i8*, i8** %sess_in, align 8, !dbg !2448
  %call915 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %409, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.394, i32 0, i32 0), i8* %410), !dbg !2449
  %411 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2450
  call void @ERR_print_errors(%struct.bio_st* %411), !dbg !2451
  br label %end, !dbg !2452

if.end916:                                        ; preds = %if.end909
  %412 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2453
  %413 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !dbg !2455
  %call917 = call i32 @SSL_set_session(%struct.ssl_st* %412, %struct.ssl_session_st* %413), !dbg !2456
  %tobool918 = icmp ne i32 %call917, 0, !dbg !2456
  br i1 %tobool918, label %if.end921, label %if.then919, !dbg !2457

if.then919:                                       ; preds = %if.end916
  %414 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2458
  %call920 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %414, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.395, i32 0, i32 0)), !dbg !2460
  %415 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2461
  call void @ERR_print_errors(%struct.bio_st* %415), !dbg !2462
  br label %end, !dbg !2463

if.end921:                                        ; preds = %if.end916
  %416 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !dbg !2464
  call void @SSL_SESSION_free(%struct.ssl_session_st* %416), !dbg !2465
  br label %if.end922, !dbg !2466

if.end922:                                        ; preds = %if.end921, %if.end899
  %417 = load i32, i32* %fallback_scsv, align 4, !dbg !2467
  %tobool923 = icmp ne i32 %417, 0, !dbg !2467
  br i1 %tobool923, label %if.then924, label %if.end926, !dbg !2469

if.then924:                                       ; preds = %if.end922
  %418 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2470
  %call925 = call i64 @SSL_ctrl(%struct.ssl_st* %418, i32 33, i64 128, i8* null), !dbg !2471
  br label %if.end926, !dbg !2471

if.end926:                                        ; preds = %if.then924, %if.end922
  %419 = load i32, i32* %noservername, align 4, !dbg !2472
  %tobool927 = icmp ne i32 %419, 0, !dbg !2472
  br i1 %tobool927, label %if.end946, label %land.lhs.true928, !dbg !2474

land.lhs.true928:                                 ; preds = %if.end926
  %420 = load i8*, i8** %servername, align 8, !dbg !2475
  %cmp929 = icmp ne i8* %420, null, !dbg !2477
  br i1 %cmp929, label %if.then934, label %lor.lhs.false931, !dbg !2478

lor.lhs.false931:                                 ; preds = %land.lhs.true928
  %421 = load i8*, i8** %dane_tlsa_domain, align 8, !dbg !2479
  %cmp932 = icmp eq i8* %421, null, !dbg !2481
  br i1 %cmp932, label %if.then934, label %if.end946, !dbg !2482

if.then934:                                       ; preds = %lor.lhs.false931, %land.lhs.true928
  %422 = load i8*, i8** %servername, align 8, !dbg !2483
  %cmp935 = icmp eq i8* %422, null, !dbg !2486
  br i1 %cmp935, label %if.then937, label %if.end940, !dbg !2487

if.then937:                                       ; preds = %if.then934
  %423 = load i8*, i8** %host, align 8, !dbg !2488
  %cmp938 = icmp eq i8* %423, null, !dbg !2489
  br i1 %cmp938, label %cond.true, label %cond.false, !dbg !2490

cond.true:                                        ; preds = %if.then937
  br label %cond.end, !dbg !2491

cond.false:                                       ; preds = %if.then937
  %424 = load i8*, i8** %host, align 8, !dbg !2493
  br label %cond.end, !dbg !2495

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.396, i32 0, i32 0), %cond.true ], [ %424, %cond.false ], !dbg !2496
  store i8* %cond, i8** %servername, align 8, !dbg !2498
  br label %if.end940, !dbg !2499

if.end940:                                        ; preds = %cond.end, %if.then934
  %425 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2500
  %426 = load i8*, i8** %servername, align 8, !dbg !2502
  %call941 = call i64 @SSL_ctrl(%struct.ssl_st* %425, i32 55, i64 0, i8* %426), !dbg !2503
  %tobool942 = icmp ne i64 %call941, 0, !dbg !2503
  br i1 %tobool942, label %if.end945, label %if.then943, !dbg !2504

if.then943:                                       ; preds = %if.end940
  %427 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2505
  %call944 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %427, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.397, i32 0, i32 0)), !dbg !2507
  %428 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2508
  call void @ERR_print_errors(%struct.bio_st* %428), !dbg !2509
  br label %end, !dbg !2510

if.end945:                                        ; preds = %if.end940
  br label %if.end946, !dbg !2511

if.end946:                                        ; preds = %if.end945, %lor.lhs.false931, %if.end926
  %429 = load i8*, i8** %dane_tlsa_domain, align 8, !dbg !2512
  %cmp947 = icmp ne i8* %429, null, !dbg !2514
  br i1 %cmp947, label %if.then949, label %if.else971, !dbg !2515

if.then949:                                       ; preds = %if.end946
  %430 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2516
  %431 = load i8*, i8** %dane_tlsa_domain, align 8, !dbg !2519
  %call950 = call i32 @SSL_dane_enable(%struct.ssl_st* %430, i8* %431), !dbg !2520
  %cmp951 = icmp sle i32 %call950, 0, !dbg !2521
  br i1 %cmp951, label %if.then953, label %if.end955, !dbg !2522

if.then953:                                       ; preds = %if.then949
  %432 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2523
  %433 = load i8*, i8** @prog, align 8, !dbg !2525
  %call954 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %432, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.393, i32 0, i32 0), i8* %433), !dbg !2526
  %434 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2527
  call void @ERR_print_errors(%struct.bio_st* %434), !dbg !2528
  br label %end, !dbg !2529

if.end955:                                        ; preds = %if.then949
  %435 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %dane_tlsa_rrset, align 8, !dbg !2530
  %cmp956 = icmp eq %struct.stack_st_OPENSSL_STRING* %435, null, !dbg !2532
  br i1 %cmp956, label %if.then958, label %if.end960, !dbg !2533

if.then958:                                       ; preds = %if.end955
  %436 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2534
  %437 = load i8*, i8** @prog, align 8, !dbg !2536
  %call959 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %436, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.398, i32 0, i32 0), i8* %437), !dbg !2537
  br label %end, !dbg !2538

if.end960:                                        ; preds = %if.end955
  %438 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2539
  %439 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %dane_tlsa_rrset, align 8, !dbg !2541
  %call961 = call i32 @tlsa_import_rrset(%struct.ssl_st* %438, %struct.stack_st_OPENSSL_STRING* %439), !dbg !2542
  %cmp962 = icmp sle i32 %call961, 0, !dbg !2543
  br i1 %cmp962, label %if.then964, label %if.end966, !dbg !2544

if.then964:                                       ; preds = %if.end960
  %440 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2545
  %441 = load i8*, i8** @prog, align 8, !dbg !2547
  %call965 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %440, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.399, i32 0, i32 0), i8* %441), !dbg !2548
  br label %end, !dbg !2549

if.end966:                                        ; preds = %if.end960
  %442 = load i32, i32* %dane_ee_no_name, align 4, !dbg !2550
  %tobool967 = icmp ne i32 %442, 0, !dbg !2550
  br i1 %tobool967, label %if.then968, label %if.end970, !dbg !2552

if.then968:                                       ; preds = %if.end966
  %443 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2553
  %call969 = call i64 @SSL_dane_set_flags(%struct.ssl_st* %443, i64 1), !dbg !2554
  br label %if.end970, !dbg !2554

if.end970:                                        ; preds = %if.then968, %if.end966
  br label %if.end977, !dbg !2555

if.else971:                                       ; preds = %if.end946
  %444 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %dane_tlsa_rrset, align 8, !dbg !2556
  %cmp972 = icmp ne %struct.stack_st_OPENSSL_STRING* %444, null, !dbg !2559
  br i1 %cmp972, label %if.then974, label %if.end976, !dbg !2556

if.then974:                                       ; preds = %if.else971
  %445 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2560
  %446 = load i8*, i8** @prog, align 8, !dbg !2562
  %call975 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %445, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.400, i32 0, i32 0), i8* %446), !dbg !2563
  br label %end, !dbg !2564

if.end976:                                        ; preds = %if.else971
  br label %if.end977

if.end977:                                        ; preds = %if.end976, %if.end970
  br label %re_start, !dbg !2565

re_start:                                         ; preds = %if.then1829, %if.end977
  %447 = load i8*, i8** %host, align 8, !dbg !2567
  %448 = load i8*, i8** %port, align 8, !dbg !2569
  %449 = load i8*, i8** %bindhost, align 8, !dbg !2570
  %450 = load i8*, i8** %bindport, align 8, !dbg !2571
  %451 = load i32, i32* %socket_family, align 4, !dbg !2572
  %452 = load i32, i32* %socket_type, align 4, !dbg !2573
  %453 = load i32, i32* %protocol, align 4, !dbg !2574
  %call978 = call i32 @init_client(i32* %s, i8* %447, i8* %448, i8* %449, i8* %450, i32 %451, i32 %452, i32 %453), !dbg !2575
  %cmp979 = icmp eq i32 %call978, 0, !dbg !2576
  br i1 %cmp979, label %if.then981, label %if.end985, !dbg !2577

if.then981:                                       ; preds = %re_start
  %454 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2578
  %call982 = call i32* @__errno_location() #1, !dbg !2580
  %455 = load i32, i32* %call982, align 4, !dbg !2581
  %call983 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %454, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.401, i32 0, i32 0), i32 %455), !dbg !2582
  %456 = load i32, i32* %s, align 4, !dbg !2584
  %call984 = call i32 @BIO_closesocket(i32 %456), !dbg !2585
  br label %end, !dbg !2586

if.end985:                                        ; preds = %re_start
  %457 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !2587
  %458 = load i32, i32* %s, align 4, !dbg !2588
  %call986 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %457, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.402, i32 0, i32 0), i32 %458), !dbg !2589
  %459 = load i32, i32* %c_nbio, align 4, !dbg !2590
  %tobool987 = icmp ne i32 %459, 0, !dbg !2590
  br i1 %tobool987, label %if.then988, label %if.end994, !dbg !2592

if.then988:                                       ; preds = %if.end985
  %460 = load i32, i32* %s, align 4, !dbg !2593
  %call989 = call i32 @BIO_socket_nbio(i32 %460, i32 1), !dbg !2596
  %tobool990 = icmp ne i32 %call989, 0, !dbg !2596
  br i1 %tobool990, label %if.end992, label %if.then991, !dbg !2597

if.then991:                                       ; preds = %if.then988
  %461 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2598
  call void @ERR_print_errors(%struct.bio_st* %461), !dbg !2600
  br label %end, !dbg !2601

if.end992:                                        ; preds = %if.then988
  %462 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !2602
  %call993 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %462, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.403, i32 0, i32 0)), !dbg !2603
  br label %if.end994, !dbg !2604

if.end994:                                        ; preds = %if.end992, %if.end985
  %463 = load i32, i32* %isdtls, align 4, !dbg !2605
  %tobool995 = icmp ne i32 %463, 0, !dbg !2605
  br i1 %tobool995, label %if.then996, label %if.else1045, !dbg !2607

if.then996:                                       ; preds = %if.end994
  call void @llvm.dbg.declare(metadata %union.BIO_sock_info_u* %peer_info, metadata !2608, metadata !439), !dbg !2616
  %464 = load i32, i32* %s, align 4, !dbg !2617
  %call997 = call %struct.bio_st* @BIO_new_dgram(i32 %464, i32 0), !dbg !2618
  store %struct.bio_st* %call997, %struct.bio_st** %sbio, align 8, !dbg !2619
  %call998 = call %union.bio_addr_st* @BIO_ADDR_new(), !dbg !2620
  %addr = bitcast %union.BIO_sock_info_u* %peer_info to %union.bio_addr_st**, !dbg !2622
  store %union.bio_addr_st* %call998, %union.bio_addr_st** %addr, align 8, !dbg !2623
  %cmp999 = icmp eq %union.bio_addr_st* %call998, null, !dbg !2624
  br i1 %cmp999, label %if.then1001, label %if.end1004, !dbg !2625

if.then1001:                                      ; preds = %if.then996
  %465 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2626
  %call1002 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %465, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.404, i32 0, i32 0)), !dbg !2628
  %466 = load i32, i32* %s, align 4, !dbg !2629
  %call1003 = call i32 @BIO_closesocket(i32 %466), !dbg !2630
  br label %end, !dbg !2631

if.end1004:                                       ; preds = %if.then996
  %467 = load i32, i32* %s, align 4, !dbg !2632
  %call1005 = call i32 @BIO_sock_info(i32 %467, i32 0, %union.BIO_sock_info_u* %peer_info), !dbg !2634
  %tobool1006 = icmp ne i32 %call1005, 0, !dbg !2634
  br i1 %tobool1006, label %if.end1012, label %if.then1007, !dbg !2635

if.then1007:                                      ; preds = %if.end1004
  %468 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2636
  %call1008 = call i32* @__errno_location() #1, !dbg !2638
  %469 = load i32, i32* %call1008, align 4, !dbg !2639
  %call1009 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %468, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.405, i32 0, i32 0), i32 %469), !dbg !2640
  %addr1010 = bitcast %union.BIO_sock_info_u* %peer_info to %union.bio_addr_st**, !dbg !2641
  %470 = load %union.bio_addr_st*, %union.bio_addr_st** %addr1010, align 8, !dbg !2641
  call void @BIO_ADDR_free(%union.bio_addr_st* %470), !dbg !2642
  %471 = load i32, i32* %s, align 4, !dbg !2643
  %call1011 = call i32 @BIO_closesocket(i32 %471), !dbg !2644
  br label %end, !dbg !2645

if.end1012:                                       ; preds = %if.end1004
  %472 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2646
  %addr1013 = bitcast %union.BIO_sock_info_u* %peer_info to %union.bio_addr_st**, !dbg !2647
  %473 = load %union.bio_addr_st*, %union.bio_addr_st** %addr1013, align 8, !dbg !2647
  %474 = bitcast %union.bio_addr_st* %473 to i8*, !dbg !2648
  %call1014 = call i64 @BIO_ctrl(%struct.bio_st* %472, i32 32, i64 0, i8* %474), !dbg !2649
  %conv1015 = trunc i64 %call1014 to i32, !dbg !2650
  %addr1016 = bitcast %union.BIO_sock_info_u* %peer_info to %union.bio_addr_st**, !dbg !2651
  %475 = load %union.bio_addr_st*, %union.bio_addr_st** %addr1016, align 8, !dbg !2651
  call void @BIO_ADDR_free(%union.bio_addr_st* %475), !dbg !2652
  %addr1017 = bitcast %union.BIO_sock_info_u* %peer_info to %union.bio_addr_st**, !dbg !2653
  store %union.bio_addr_st* null, %union.bio_addr_st** %addr1017, align 8, !dbg !2654
  %476 = load i32, i32* %enable_timeouts, align 4, !dbg !2655
  %tobool1018 = icmp ne i32 %476, 0, !dbg !2655
  br i1 %tobool1018, label %if.then1019, label %if.end1024, !dbg !2657

if.then1019:                                      ; preds = %if.end1012
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %timeout, i32 0, i32 0, !dbg !2658
  store i64 0, i64* %tv_sec, align 8, !dbg !2660
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %timeout, i32 0, i32 1, !dbg !2661
  store i64 250000, i64* %tv_usec, align 8, !dbg !2662
  %477 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2663
  %478 = bitcast %struct.timeval* %timeout to i8*, !dbg !2664
  %call1020 = call i64 @BIO_ctrl(%struct.bio_st* %477, i32 33, i64 0, i8* %478), !dbg !2665
  %tv_sec1021 = getelementptr inbounds %struct.timeval, %struct.timeval* %timeout, i32 0, i32 0, !dbg !2666
  store i64 0, i64* %tv_sec1021, align 8, !dbg !2667
  %tv_usec1022 = getelementptr inbounds %struct.timeval, %struct.timeval* %timeout, i32 0, i32 1, !dbg !2668
  store i64 250000, i64* %tv_usec1022, align 8, !dbg !2669
  %479 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2670
  %480 = bitcast %struct.timeval* %timeout to i8*, !dbg !2671
  %call1023 = call i64 @BIO_ctrl(%struct.bio_st* %479, i32 35, i64 0, i8* %480), !dbg !2672
  br label %if.end1024, !dbg !2673

if.end1024:                                       ; preds = %if.then1019, %if.end1012
  %481 = load i64, i64* %socket_mtu, align 8, !dbg !2674
  %tobool1025 = icmp ne i64 %481, 0, !dbg !2674
  br i1 %tobool1025, label %if.then1026, label %if.else1042, !dbg !2676

if.then1026:                                      ; preds = %if.end1024
  %482 = load i64, i64* %socket_mtu, align 8, !dbg !2677
  %483 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2680
  %call1027 = call i64 @SSL_ctrl(%struct.ssl_st* %483, i32 121, i64 0, i8* null), !dbg !2681
  %cmp1028 = icmp slt i64 %482, %call1027, !dbg !2682
  br i1 %cmp1028, label %if.then1030, label %if.end1034, !dbg !2683

if.then1030:                                      ; preds = %if.then1026
  %484 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2684
  %485 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2686
  %call1031 = call i64 @SSL_ctrl(%struct.ssl_st* %485, i32 121, i64 0, i8* null), !dbg !2687
  %call1032 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %484, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.406, i32 0, i32 0), i64 %call1031), !dbg !2688
  %486 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2689
  %call1033 = call i32 @BIO_free(%struct.bio_st* %486), !dbg !2690
  br label %shut, !dbg !2691

if.end1034:                                       ; preds = %if.then1026
  %487 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2692
  %call1035 = call i64 @SSL_set_options(%struct.ssl_st* %487, i64 4096), !dbg !2693
  %488 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2694
  %489 = load i64, i64* %socket_mtu, align 8, !dbg !2696
  %call1036 = call i64 @SSL_ctrl(%struct.ssl_st* %488, i32 120, i64 %489, i8* null), !dbg !2697
  %tobool1037 = icmp ne i64 %call1036, 0, !dbg !2697
  br i1 %tobool1037, label %if.end1041, label %if.then1038, !dbg !2698

if.then1038:                                      ; preds = %if.end1034
  %490 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2699
  %call1039 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %490, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.407, i32 0, i32 0)), !dbg !2701
  %491 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2702
  %call1040 = call i32 @BIO_free(%struct.bio_st* %491), !dbg !2703
  br label %shut, !dbg !2704

if.end1041:                                       ; preds = %if.end1034
  br label %if.end1044, !dbg !2705

if.else1042:                                      ; preds = %if.end1024
  %492 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2706
  %call1043 = call i64 @BIO_ctrl(%struct.bio_st* %492, i32 39, i64 0, i8* null), !dbg !2708
  br label %if.end1044

if.end1044:                                       ; preds = %if.else1042, %if.end1041
  br label %if.end1047, !dbg !2709

if.else1045:                                      ; preds = %if.end994
  %493 = load i32, i32* %s, align 4, !dbg !2710
  %call1046 = call %struct.bio_st* @BIO_new_socket(i32 %493, i32 0), !dbg !2711
  store %struct.bio_st* %call1046, %struct.bio_st** %sbio, align 8, !dbg !2712
  br label %if.end1047

if.end1047:                                       ; preds = %if.else1045, %if.end1044
  %494 = load i32, i32* %nbio_test, align 4, !dbg !2713
  %tobool1048 = icmp ne i32 %494, 0, !dbg !2713
  br i1 %tobool1048, label %if.then1049, label %if.end1053, !dbg !2715

if.then1049:                                      ; preds = %if.end1047
  call void @llvm.dbg.declare(metadata %struct.bio_st** %test, metadata !2716, metadata !439), !dbg !2718
  %call1050 = call %struct.bio_method_st* @BIO_f_nbio_test(), !dbg !2719
  %call1051 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call1050), !dbg !2720
  store %struct.bio_st* %call1051, %struct.bio_st** %test, align 8, !dbg !2722
  %495 = load %struct.bio_st*, %struct.bio_st** %test, align 8, !dbg !2723
  %496 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2724
  %call1052 = call %struct.bio_st* @BIO_push(%struct.bio_st* %495, %struct.bio_st* %496), !dbg !2725
  store %struct.bio_st* %call1052, %struct.bio_st** %sbio, align 8, !dbg !2726
  br label %if.end1053, !dbg !2727

if.end1053:                                       ; preds = %if.then1049, %if.end1047
  %497 = load i32, i32* @c_debug, align 4, !dbg !2728
  %tobool1054 = icmp ne i32 %497, 0, !dbg !2728
  br i1 %tobool1054, label %if.then1055, label %if.end1056, !dbg !2730

if.then1055:                                      ; preds = %if.end1053
  %498 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2731
  call void @BIO_set_callback(%struct.bio_st* %498, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)* @bio_dump_callback), !dbg !2733
  %499 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2734
  %500 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !2735
  %501 = bitcast %struct.bio_st* %500 to i8*, !dbg !2736
  call void @BIO_set_callback_arg(%struct.bio_st* %499, i8* %501), !dbg !2737
  br label %if.end1056, !dbg !2738

if.end1056:                                       ; preds = %if.then1055, %if.end1053
  %502 = load i32, i32* %c_msg, align 4, !dbg !2739
  %tobool1057 = icmp ne i32 %502, 0, !dbg !2739
  br i1 %tobool1057, label %if.then1058, label %if.end1065, !dbg !2741

if.then1058:                                      ; preds = %if.end1056
  %503 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2742
  call void @SSL_set_msg_callback(%struct.ssl_st* %503, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)* @msg_cb), !dbg !2744
  %504 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2745
  %505 = load %struct.bio_st*, %struct.bio_st** %bio_c_msg, align 8, !dbg !2746
  %tobool1059 = icmp ne %struct.bio_st* %505, null, !dbg !2746
  br i1 %tobool1059, label %cond.true1060, label %cond.false1061, !dbg !2746

cond.true1060:                                    ; preds = %if.then1058
  %506 = load %struct.bio_st*, %struct.bio_st** %bio_c_msg, align 8, !dbg !2747
  br label %cond.end1062, !dbg !2749

cond.false1061:                                   ; preds = %if.then1058
  %507 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !2750
  br label %cond.end1062, !dbg !2752

cond.end1062:                                     ; preds = %cond.false1061, %cond.true1060
  %cond1063 = phi %struct.bio_st* [ %506, %cond.true1060 ], [ %507, %cond.false1061 ], !dbg !2753
  %508 = bitcast %struct.bio_st* %cond1063 to i8*, !dbg !2755
  %call1064 = call i64 @SSL_ctrl(%struct.ssl_st* %504, i32 16, i64 0, i8* %508), !dbg !2756
  br label %if.end1065, !dbg !2757

if.end1065:                                       ; preds = %cond.end1062, %if.end1056
  %509 = load i32, i32* %c_tlsextdebug, align 4, !dbg !2758
  %tobool1066 = icmp ne i32 %509, 0, !dbg !2758
  br i1 %tobool1066, label %if.then1067, label %if.end1070, !dbg !2760

if.then1067:                                      ; preds = %if.end1065
  %510 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2761
  %call1068 = call i64 @SSL_callback_ctrl(%struct.ssl_st* %510, i32 56, void ()* bitcast (void (%struct.ssl_st*, i32, i32, i8*, i32, i8*)* @tlsext_cb to void ()*)), !dbg !2763
  %511 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2764
  %512 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !2765
  %513 = bitcast %struct.bio_st* %512 to i8*, !dbg !2765
  %call1069 = call i64 @SSL_ctrl(%struct.ssl_st* %511, i32 57, i64 0, i8* %513), !dbg !2766
  br label %if.end1070, !dbg !2767

if.end1070:                                       ; preds = %if.then1067, %if.end1065
  %514 = load i32, i32* %c_status_req, align 4, !dbg !2768
  %tobool1071 = icmp ne i32 %514, 0, !dbg !2768
  br i1 %tobool1071, label %if.then1072, label %if.end1076, !dbg !2770

if.then1072:                                      ; preds = %if.end1070
  %515 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2771
  %call1073 = call i64 @SSL_ctrl(%struct.ssl_st* %515, i32 65, i64 1, i8* null), !dbg !2773
  %516 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2774
  %call1074 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* %516, i32 63, void ()* bitcast (i32 (%struct.ssl_st*, i8*)* @ocsp_resp_cb to void ()*)), !dbg !2775
  %517 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !2776
  %518 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !2777
  %519 = bitcast %struct.bio_st* %518 to i8*, !dbg !2777
  %call1075 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %517, i32 64, i64 0, i8* %519), !dbg !2778
  br label %if.end1076, !dbg !2779

if.end1076:                                       ; preds = %if.then1072, %if.end1070
  %520 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2780
  %521 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2781
  %522 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2782
  call void @SSL_set_bio(%struct.ssl_st* %520, %struct.bio_st* %521, %struct.bio_st* %522), !dbg !2783
  %523 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2784
  call void @SSL_set_connect_state(%struct.ssl_st* %523), !dbg !2785
  %call1077 = call i32 @fileno_stdin(), !dbg !2786
  %524 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2788
  %call1078 = call i32 @SSL_get_fd(%struct.ssl_st* %524), !dbg !2789
  %cmp1079 = icmp sgt i32 %call1077, %call1078, !dbg !2791
  br i1 %cmp1079, label %if.then1081, label %if.else1084, !dbg !2792

if.then1081:                                      ; preds = %if.end1076
  %call1082 = call i32 @fileno_stdin(), !dbg !2793
  %add1083 = add nsw i32 %call1082, 1, !dbg !2794
  store i32 %add1083, i32* %width, align 4, !dbg !2795
  br label %if.end1087, !dbg !2796

if.else1084:                                      ; preds = %if.end1076
  %525 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !2797
  %call1085 = call i32 @SSL_get_fd(%struct.ssl_st* %525), !dbg !2798
  %add1086 = add nsw i32 %call1085, 1, !dbg !2799
  store i32 %add1086, i32* %width, align 4, !dbg !2800
  br label %if.end1087

if.end1087:                                       ; preds = %if.else1084, %if.then1081
  store i32 1, i32* %read_tty, align 4, !dbg !2801
  store i32 0, i32* %write_tty, align 4, !dbg !2802
  store i32 0, i32* %tty_on, align 4, !dbg !2803
  store i32 1, i32* %read_ssl, align 4, !dbg !2804
  store i32 1, i32* %write_ssl, align 4, !dbg !2805
  store i32 0, i32* %cbuf_len, align 4, !dbg !2806
  store i32 0, i32* %cbuf_off, align 4, !dbg !2807
  store i32 0, i32* %sbuf_len, align 4, !dbg !2808
  store i32 0, i32* %sbuf_off, align 4, !dbg !2809
  %526 = load i32, i32* %starttls_proto, align 4, !dbg !2810
  switch i32 %526, label %sw.epilog1724 [
    i32 0, label %sw.bb1088
    i32 12, label %sw.bb1089
    i32 1, label %sw.bb1089
    i32 2, label %sw.bb1141
    i32 3, label %sw.bb1150
    i32 4, label %sw.bb1186
    i32 6, label %sw.bb1209
    i32 7, label %sw.bb1209
    i32 5, label %sw.bb1257
    i32 8, label %sw.bb1280
    i32 9, label %sw.bb1363
    i32 10, label %sw.bb1446
    i32 11, label %sw.bb1534
    i32 13, label %sw.bb1549
    i32 14, label %sw.bb1604
    i32 15, label %sw.bb1665
  ], !dbg !2811

sw.bb1088:                                        ; preds = %if.end1087
  br label %sw.epilog1724, !dbg !2812

sw.bb1089:                                        ; preds = %if.end1087, %if.end1087
  call void @llvm.dbg.declare(metadata i32* %foundit, metadata !2814, metadata !439), !dbg !2816
  store i32 0, i32* %foundit, align 4, !dbg !2816
  call void @llvm.dbg.declare(metadata %struct.bio_st** %fbio, metadata !2817, metadata !439), !dbg !2818
  %call1090 = call %struct.bio_method_st* @BIO_f_buffer(), !dbg !2819
  %call1091 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call1090), !dbg !2820
  store %struct.bio_st* %call1091, %struct.bio_st** %fbio, align 8, !dbg !2818
  %527 = load %struct.bio_st*, %struct.bio_st** %fbio, align 8, !dbg !2822
  %528 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2823
  %call1092 = call %struct.bio_st* @BIO_push(%struct.bio_st* %527, %struct.bio_st* %528), !dbg !2824
  br label %do.body1093, !dbg !2825, !llvm.loop !2826

do.body1093:                                      ; preds = %land.end, %sw.bb1089
  %529 = load %struct.bio_st*, %struct.bio_st** %fbio, align 8, !dbg !2827
  %530 = load i8*, i8** %mbuf, align 8, !dbg !2829
  %call1094 = call i32 @BIO_gets(%struct.bio_st* %529, i8* %530, i32 8192), !dbg !2830
  store i32 %call1094, i32* %mbuf_len, align 4, !dbg !2831
  br label %do.cond, !dbg !2832

do.cond:                                          ; preds = %do.body1093
  %531 = load i32, i32* %mbuf_len, align 4, !dbg !2833
  %cmp1095 = icmp sgt i32 %531, 3, !dbg !2834
  br i1 %cmp1095, label %land.rhs, label %land.end, !dbg !2835

land.rhs:                                         ; preds = %do.cond
  %532 = load i8*, i8** %mbuf, align 8, !dbg !2836
  %arrayidx1097 = getelementptr inbounds i8, i8* %532, i64 3, !dbg !2836
  %533 = load i8, i8* %arrayidx1097, align 1, !dbg !2836
  %conv1098 = sext i8 %533 to i32, !dbg !2836
  %cmp1099 = icmp eq i32 %conv1098, 45, !dbg !2838
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %534 = phi i1 [ false, %do.cond ], [ %cmp1099, %land.rhs ]
  br i1 %534, label %do.body1093, label %do.end1101, !dbg !2839, !llvm.loop !2826

do.end1101:                                       ; preds = %land.end
  %535 = load i8*, i8** %protohost, align 8, !dbg !2841
  %cmp1102 = icmp eq i8* %535, null, !dbg !2843
  br i1 %cmp1102, label %if.then1104, label %if.end1105, !dbg !2844

if.then1104:                                      ; preds = %do.end1101
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.408, i32 0, i32 0), i8** %protohost, align 8, !dbg !2845
  br label %if.end1105, !dbg !2846

if.end1105:                                       ; preds = %if.then1104, %do.end1101
  %536 = load i32, i32* %starttls_proto, align 4, !dbg !2847
  %cmp1106 = icmp eq i32 %536, 12, !dbg !2849
  br i1 %cmp1106, label %if.then1108, label %if.else1110, !dbg !2850

if.then1108:                                      ; preds = %if.end1105
  %537 = load %struct.bio_st*, %struct.bio_st** %fbio, align 8, !dbg !2851
  %538 = load i8*, i8** %protohost, align 8, !dbg !2852
  %call1109 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %537, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.409, i32 0, i32 0), i8* %538), !dbg !2853
  br label %if.end1112, !dbg !2853

if.else1110:                                      ; preds = %if.end1105
  %539 = load %struct.bio_st*, %struct.bio_st** %fbio, align 8, !dbg !2854
  %540 = load i8*, i8** %protohost, align 8, !dbg !2855
  %call1111 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %539, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.410, i32 0, i32 0), i8* %540), !dbg !2856
  br label %if.end1112

if.end1112:                                       ; preds = %if.else1110, %if.then1108
  %541 = load %struct.bio_st*, %struct.bio_st** %fbio, align 8, !dbg !2857
  %call1113 = call i64 @BIO_ctrl(%struct.bio_st* %541, i32 11, i64 0, i8* null), !dbg !2858
  %conv1114 = trunc i64 %call1113 to i32, !dbg !2859
  br label %do.body1115, !dbg !2860, !llvm.loop !2861

do.body1115:                                      ; preds = %land.end1129, %if.end1112
  %542 = load %struct.bio_st*, %struct.bio_st** %fbio, align 8, !dbg !2862
  %543 = load i8*, i8** %mbuf, align 8, !dbg !2864
  %call1116 = call i32 @BIO_gets(%struct.bio_st* %542, i8* %543, i32 8192), !dbg !2865
  store i32 %call1116, i32* %mbuf_len, align 4, !dbg !2866
  %544 = load i8*, i8** %mbuf, align 8, !dbg !2867
  %call1117 = call i8* @strstr(i8* %544, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.411, i32 0, i32 0)) #9, !dbg !2869
  %tobool1118 = icmp ne i8* %call1117, null, !dbg !2869
  br i1 %tobool1118, label %if.then1119, label %if.end1120, !dbg !2870

if.then1119:                                      ; preds = %do.body1115
  store i32 1, i32* %foundit, align 4, !dbg !2871
  br label %if.end1120, !dbg !2872

if.end1120:                                       ; preds = %if.then1119, %do.body1115
  br label %do.cond1121, !dbg !2873

do.cond1121:                                      ; preds = %if.end1120
  %545 = load i32, i32* %mbuf_len, align 4, !dbg !2874
  %cmp1122 = icmp sgt i32 %545, 3, !dbg !2875
  br i1 %cmp1122, label %land.rhs1124, label %land.end1129, !dbg !2876

land.rhs1124:                                     ; preds = %do.cond1121
  %546 = load i8*, i8** %mbuf, align 8, !dbg !2877
  %arrayidx1125 = getelementptr inbounds i8, i8* %546, i64 3, !dbg !2877
  %547 = load i8, i8* %arrayidx1125, align 1, !dbg !2877
  %conv1126 = sext i8 %547 to i32, !dbg !2877
  %cmp1127 = icmp eq i32 %conv1126, 45, !dbg !2878
  br label %land.end1129

land.end1129:                                     ; preds = %land.rhs1124, %do.cond1121
  %548 = phi i1 [ false, %do.cond1121 ], [ %cmp1127, %land.rhs1124 ]
  br i1 %548, label %do.body1115, label %do.end1130, !dbg !2879, !llvm.loop !2861

do.end1130:                                       ; preds = %land.end1129
  %549 = load %struct.bio_st*, %struct.bio_st** %fbio, align 8, !dbg !2881
  %call1131 = call i64 @BIO_ctrl(%struct.bio_st* %549, i32 11, i64 0, i8* null), !dbg !2882
  %conv1132 = trunc i64 %call1131 to i32, !dbg !2883
  %550 = load %struct.bio_st*, %struct.bio_st** %fbio, align 8, !dbg !2884
  %call1133 = call %struct.bio_st* @BIO_pop(%struct.bio_st* %550), !dbg !2885
  %551 = load %struct.bio_st*, %struct.bio_st** %fbio, align 8, !dbg !2886
  %call1134 = call i32 @BIO_free(%struct.bio_st* %551), !dbg !2887
  %552 = load i32, i32* %foundit, align 4, !dbg !2888
  %tobool1135 = icmp ne i32 %552, 0, !dbg !2888
  br i1 %tobool1135, label %if.end1138, label %if.then1136, !dbg !2890

if.then1136:                                      ; preds = %do.end1130
  %553 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2891
  %call1137 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %553, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.412, i32 0, i32 0)), !dbg !2892
  br label %if.end1138, !dbg !2892

if.end1138:                                       ; preds = %if.then1136, %do.end1130
  %554 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2893
  %call1139 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %554, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.413, i32 0, i32 0)), !dbg !2894
  %555 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2895
  %556 = load i8*, i8** %sbuf, align 8, !dbg !2896
  %call1140 = call i32 @BIO_read(%struct.bio_st* %555, i8* %556, i32 8192), !dbg !2897
  br label %sw.epilog1724, !dbg !2898

sw.bb1141:                                        ; preds = %if.end1087
  %557 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2899
  %558 = load i8*, i8** %mbuf, align 8, !dbg !2901
  %call1142 = call i32 @BIO_read(%struct.bio_st* %557, i8* %558, i32 8192), !dbg !2902
  %559 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2903
  %call1143 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %559, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.414, i32 0, i32 0)), !dbg !2904
  %560 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2905
  %561 = load i8*, i8** %sbuf, align 8, !dbg !2906
  %call1144 = call i32 @BIO_read(%struct.bio_st* %560, i8* %561, i32 8192), !dbg !2907
  store i32 %call1144, i32* %mbuf_len, align 4, !dbg !2908
  %562 = load i32, i32* %mbuf_len, align 4, !dbg !2909
  %cmp1145 = icmp slt i32 %562, 0, !dbg !2911
  br i1 %cmp1145, label %if.then1147, label %if.end1149, !dbg !2912

if.then1147:                                      ; preds = %sw.bb1141
  %563 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2913
  %call1148 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %563, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.415, i32 0, i32 0)), !dbg !2915
  br label %end, !dbg !2916

if.end1149:                                       ; preds = %sw.bb1141
  br label %sw.epilog1724, !dbg !2917

sw.bb1150:                                        ; preds = %if.end1087
  call void @llvm.dbg.declare(metadata i32* %foundit1151, metadata !2918, metadata !439), !dbg !2920
  store i32 0, i32* %foundit1151, align 4, !dbg !2920
  call void @llvm.dbg.declare(metadata %struct.bio_st** %fbio1152, metadata !2921, metadata !439), !dbg !2922
  %call1153 = call %struct.bio_method_st* @BIO_f_buffer(), !dbg !2923
  %call1154 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call1153), !dbg !2924
  store %struct.bio_st* %call1154, %struct.bio_st** %fbio1152, align 8, !dbg !2922
  %564 = load %struct.bio_st*, %struct.bio_st** %fbio1152, align 8, !dbg !2926
  %565 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2927
  %call1155 = call %struct.bio_st* @BIO_push(%struct.bio_st* %564, %struct.bio_st* %565), !dbg !2928
  %566 = load %struct.bio_st*, %struct.bio_st** %fbio1152, align 8, !dbg !2929
  %567 = load i8*, i8** %mbuf, align 8, !dbg !2930
  %call1156 = call i32 @BIO_gets(%struct.bio_st* %566, i8* %567, i32 8192), !dbg !2931
  %568 = load %struct.bio_st*, %struct.bio_st** %fbio1152, align 8, !dbg !2932
  %call1157 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %568, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.416, i32 0, i32 0)), !dbg !2933
  %569 = load %struct.bio_st*, %struct.bio_st** %fbio1152, align 8, !dbg !2934
  %call1158 = call i64 @BIO_ctrl(%struct.bio_st* %569, i32 11, i64 0, i8* null), !dbg !2935
  %conv1159 = trunc i64 %call1158 to i32, !dbg !2936
  br label %do.body1160, !dbg !2937, !llvm.loop !2938

do.body1160:                                      ; preds = %land.end1174, %sw.bb1150
  %570 = load %struct.bio_st*, %struct.bio_st** %fbio1152, align 8, !dbg !2939
  %571 = load i8*, i8** %mbuf, align 8, !dbg !2941
  %call1161 = call i32 @BIO_gets(%struct.bio_st* %570, i8* %571, i32 8192), !dbg !2942
  store i32 %call1161, i32* %mbuf_len, align 4, !dbg !2943
  %572 = load i8*, i8** %mbuf, align 8, !dbg !2944
  %call1162 = call i8* @strstr(i8* %572, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.411, i32 0, i32 0)) #9, !dbg !2946
  %tobool1163 = icmp ne i8* %call1162, null, !dbg !2946
  br i1 %tobool1163, label %if.then1164, label %if.end1165, !dbg !2947

if.then1164:                                      ; preds = %do.body1160
  store i32 1, i32* %foundit1151, align 4, !dbg !2948
  br label %if.end1165, !dbg !2949

if.end1165:                                       ; preds = %if.then1164, %do.body1160
  br label %do.cond1166, !dbg !2950

do.cond1166:                                      ; preds = %if.end1165
  %573 = load i32, i32* %mbuf_len, align 4, !dbg !2951
  %cmp1167 = icmp sgt i32 %573, 3, !dbg !2952
  br i1 %cmp1167, label %land.rhs1169, label %land.end1174, !dbg !2953

land.rhs1169:                                     ; preds = %do.cond1166
  %574 = load i8*, i8** %mbuf, align 8, !dbg !2954
  %arrayidx1170 = getelementptr inbounds i8, i8* %574, i64 0, !dbg !2954
  %575 = load i8, i8* %arrayidx1170, align 1, !dbg !2954
  %conv1171 = sext i8 %575 to i32, !dbg !2954
  %cmp1172 = icmp ne i32 %conv1171, 46, !dbg !2955
  br label %land.end1174

land.end1174:                                     ; preds = %land.rhs1169, %do.cond1166
  %576 = phi i1 [ false, %do.cond1166 ], [ %cmp1172, %land.rhs1169 ]
  br i1 %576, label %do.body1160, label %do.end1175, !dbg !2956, !llvm.loop !2938

do.end1175:                                       ; preds = %land.end1174
  %577 = load %struct.bio_st*, %struct.bio_st** %fbio1152, align 8, !dbg !2958
  %call1176 = call i64 @BIO_ctrl(%struct.bio_st* %577, i32 11, i64 0, i8* null), !dbg !2959
  %conv1177 = trunc i64 %call1176 to i32, !dbg !2960
  %578 = load %struct.bio_st*, %struct.bio_st** %fbio1152, align 8, !dbg !2961
  %call1178 = call %struct.bio_st* @BIO_pop(%struct.bio_st* %578), !dbg !2962
  %579 = load %struct.bio_st*, %struct.bio_st** %fbio1152, align 8, !dbg !2963
  %call1179 = call i32 @BIO_free(%struct.bio_st* %579), !dbg !2964
  %580 = load i32, i32* %foundit1151, align 4, !dbg !2965
  %tobool1180 = icmp ne i32 %580, 0, !dbg !2965
  br i1 %tobool1180, label %if.end1183, label %if.then1181, !dbg !2967

if.then1181:                                      ; preds = %do.end1175
  %581 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2968
  %call1182 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %581, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.412, i32 0, i32 0)), !dbg !2969
  br label %if.end1183, !dbg !2969

if.end1183:                                       ; preds = %if.then1181, %do.end1175
  %582 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2970
  %call1184 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %582, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.417, i32 0, i32 0)), !dbg !2971
  %583 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2972
  %584 = load i8*, i8** %sbuf, align 8, !dbg !2973
  %call1185 = call i32 @BIO_read(%struct.bio_st* %583, i8* %584, i32 8192), !dbg !2974
  br label %sw.epilog1724, !dbg !2975

sw.bb1186:                                        ; preds = %if.end1087
  call void @llvm.dbg.declare(metadata %struct.bio_st** %fbio1187, metadata !2976, metadata !439), !dbg !2978
  %call1188 = call %struct.bio_method_st* @BIO_f_buffer(), !dbg !2979
  %call1189 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call1188), !dbg !2980
  store %struct.bio_st* %call1189, %struct.bio_st** %fbio1187, align 8, !dbg !2978
  %585 = load %struct.bio_st*, %struct.bio_st** %fbio1187, align 8, !dbg !2982
  %586 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !2983
  %call1190 = call %struct.bio_st* @BIO_push(%struct.bio_st* %585, %struct.bio_st* %586), !dbg !2984
  br label %do.body1191, !dbg !2985, !llvm.loop !2986

do.body1191:                                      ; preds = %land.end1201, %sw.bb1186
  %587 = load %struct.bio_st*, %struct.bio_st** %fbio1187, align 8, !dbg !2987
  %588 = load i8*, i8** %mbuf, align 8, !dbg !2989
  %call1192 = call i32 @BIO_gets(%struct.bio_st* %587, i8* %588, i32 8192), !dbg !2990
  store i32 %call1192, i32* %mbuf_len, align 4, !dbg !2991
  br label %do.cond1193, !dbg !2992

do.cond1193:                                      ; preds = %do.body1191
  %589 = load i32, i32* %mbuf_len, align 4, !dbg !2993
  %cmp1194 = icmp sgt i32 %589, 3, !dbg !2994
  br i1 %cmp1194, label %land.rhs1196, label %land.end1201, !dbg !2995

land.rhs1196:                                     ; preds = %do.cond1193
  %590 = load i8*, i8** %mbuf, align 8, !dbg !2996
  %arrayidx1197 = getelementptr inbounds i8, i8* %590, i64 3, !dbg !2996
  %591 = load i8, i8* %arrayidx1197, align 1, !dbg !2996
  %conv1198 = sext i8 %591 to i32, !dbg !2996
  %cmp1199 = icmp eq i32 %conv1198, 45, !dbg !2997
  br label %land.end1201

land.end1201:                                     ; preds = %land.rhs1196, %do.cond1193
  %592 = phi i1 [ false, %do.cond1193 ], [ %cmp1199, %land.rhs1196 ]
  br i1 %592, label %do.body1191, label %do.end1202, !dbg !2998, !llvm.loop !2986

do.end1202:                                       ; preds = %land.end1201
  %593 = load %struct.bio_st*, %struct.bio_st** %fbio1187, align 8, !dbg !3000
  %call1203 = call i64 @BIO_ctrl(%struct.bio_st* %593, i32 11, i64 0, i8* null), !dbg !3001
  %conv1204 = trunc i64 %call1203 to i32, !dbg !3002
  %594 = load %struct.bio_st*, %struct.bio_st** %fbio1187, align 8, !dbg !3003
  %call1205 = call %struct.bio_st* @BIO_pop(%struct.bio_st* %594), !dbg !3004
  %595 = load %struct.bio_st*, %struct.bio_st** %fbio1187, align 8, !dbg !3005
  %call1206 = call i32 @BIO_free(%struct.bio_st* %595), !dbg !3006
  %596 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3007
  %call1207 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %596, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.418, i32 0, i32 0)), !dbg !3008
  %597 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3009
  %598 = load i8*, i8** %sbuf, align 8, !dbg !3010
  %call1208 = call i32 @BIO_read(%struct.bio_st* %597, i8* %598, i32 8192), !dbg !3011
  br label %sw.epilog1724, !dbg !3012

sw.bb1209:                                        ; preds = %if.end1087, %if.end1087
  call void @llvm.dbg.declare(metadata i32* %seen, metadata !3013, metadata !439), !dbg !3015
  store i32 0, i32* %seen, align 4, !dbg !3015
  %599 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3016
  %600 = load i32, i32* %starttls_proto, align 4, !dbg !3017
  %cmp1210 = icmp eq i32 %600, 6, !dbg !3018
  %cond1212 = select i1 %cmp1210, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.420, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.421, i32 0, i32 0), !dbg !3017
  %601 = load i8*, i8** %protohost, align 8, !dbg !3019
  %tobool1213 = icmp ne i8* %601, null, !dbg !3019
  br i1 %tobool1213, label %cond.true1214, label %cond.false1215, !dbg !3019

cond.true1214:                                    ; preds = %sw.bb1209
  %602 = load i8*, i8** %protohost, align 8, !dbg !3020
  br label %cond.end1216, !dbg !3022

cond.false1215:                                   ; preds = %sw.bb1209
  %603 = load i8*, i8** %host, align 8, !dbg !3023
  br label %cond.end1216, !dbg !3025

cond.end1216:                                     ; preds = %cond.false1215, %cond.true1214
  %cond1217 = phi i8* [ %602, %cond.true1214 ], [ %603, %cond.false1215 ], !dbg !3026
  %call1218 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %599, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.419, i32 0, i32 0), i8* %cond1212, i8* %cond1217), !dbg !3028
  %604 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3029
  %605 = load i8*, i8** %mbuf, align 8, !dbg !3030
  %call1219 = call i32 @BIO_read(%struct.bio_st* %604, i8* %605, i32 8192), !dbg !3031
  store i32 %call1219, i32* %seen, align 4, !dbg !3032
  %606 = load i32, i32* %seen, align 4, !dbg !3033
  %cmp1220 = icmp slt i32 %606, 0, !dbg !3035
  br i1 %cmp1220, label %if.then1222, label %if.end1224, !dbg !3036

if.then1222:                                      ; preds = %cond.end1216
  %607 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3037
  %call1223 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %607, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.415, i32 0, i32 0)), !dbg !3039
  br label %end, !dbg !3040

if.end1224:                                       ; preds = %cond.end1216
  %608 = load i32, i32* %seen, align 4, !dbg !3041
  %idxprom1225 = sext i32 %608 to i64, !dbg !3042
  %609 = load i8*, i8** %mbuf, align 8, !dbg !3042
  %arrayidx1226 = getelementptr inbounds i8, i8* %609, i64 %idxprom1225, !dbg !3042
  store i8 0, i8* %arrayidx1226, align 1, !dbg !3043
  br label %while.cond1227, !dbg !3044

while.cond1227:                                   ; preds = %if.end1239, %if.end1224
  %610 = load i8*, i8** %mbuf, align 8, !dbg !3045
  %call1228 = call i8* @strstr(i8* %610, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.422, i32 0, i32 0)) #9, !dbg !3046
  %tobool1229 = icmp ne i8* %call1228, null, !dbg !3046
  br i1 %tobool1229, label %land.end1233, label %land.rhs1230, !dbg !3047

land.rhs1230:                                     ; preds = %while.cond1227
  %611 = load i8*, i8** %mbuf, align 8, !dbg !3048
  %call1231 = call i8* @strstr(i8* %611, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.423, i32 0, i32 0)) #9, !dbg !3049
  %tobool1232 = icmp ne i8* %call1231, null, !dbg !3050
  %lnot = xor i1 %tobool1232, true, !dbg !3050
  br label %land.end1233

land.end1233:                                     ; preds = %land.rhs1230, %while.cond1227
  %612 = phi i1 [ false, %while.cond1227 ], [ %lnot, %land.rhs1230 ]
  br i1 %612, label %while.body1234, label %while.end1242, !dbg !3051

while.body1234:                                   ; preds = %land.end1233
  %613 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3052
  %614 = load i8*, i8** %mbuf, align 8, !dbg !3054
  %call1235 = call i32 @BIO_read(%struct.bio_st* %613, i8* %614, i32 8192), !dbg !3055
  store i32 %call1235, i32* %seen, align 4, !dbg !3056
  %615 = load i32, i32* %seen, align 4, !dbg !3057
  %cmp1236 = icmp sle i32 %615, 0, !dbg !3059
  br i1 %cmp1236, label %if.then1238, label %if.end1239, !dbg !3060

if.then1238:                                      ; preds = %while.body1234
  br label %shut, !dbg !3061

if.end1239:                                       ; preds = %while.body1234
  %616 = load i32, i32* %seen, align 4, !dbg !3062
  %idxprom1240 = sext i32 %616 to i64, !dbg !3063
  %617 = load i8*, i8** %mbuf, align 8, !dbg !3063
  %arrayidx1241 = getelementptr inbounds i8, i8* %617, i64 %idxprom1240, !dbg !3063
  store i8 0, i8* %arrayidx1241, align 1, !dbg !3064
  br label %while.cond1227, !dbg !3065, !llvm.loop !3066

while.end1242:                                    ; preds = %land.end1233
  %618 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3067
  %call1243 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %618, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.424, i32 0, i32 0)), !dbg !3068
  %619 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3069
  %620 = load i8*, i8** %sbuf, align 8, !dbg !3070
  %call1244 = call i32 @BIO_read(%struct.bio_st* %619, i8* %620, i32 8192), !dbg !3071
  store i32 %call1244, i32* %seen, align 4, !dbg !3072
  %621 = load i32, i32* %seen, align 4, !dbg !3073
  %cmp1245 = icmp slt i32 %621, 0, !dbg !3075
  br i1 %cmp1245, label %if.then1247, label %if.end1249, !dbg !3076

if.then1247:                                      ; preds = %while.end1242
  %622 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3077
  %call1248 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %622, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.415, i32 0, i32 0)), !dbg !3079
  br label %shut, !dbg !3080

if.end1249:                                       ; preds = %while.end1242
  %623 = load i32, i32* %seen, align 4, !dbg !3081
  %idxprom1250 = sext i32 %623 to i64, !dbg !3082
  %624 = load i8*, i8** %sbuf, align 8, !dbg !3082
  %arrayidx1251 = getelementptr inbounds i8, i8* %624, i64 %idxprom1250, !dbg !3082
  store i8 0, i8* %arrayidx1251, align 1, !dbg !3083
  %625 = load i8*, i8** %sbuf, align 8, !dbg !3084
  %call1252 = call i8* @strstr(i8* %625, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.425, i32 0, i32 0)) #9, !dbg !3086
  %tobool1253 = icmp ne i8* %call1252, null, !dbg !3086
  br i1 %tobool1253, label %if.end1255, label %if.then1254, !dbg !3087

if.then1254:                                      ; preds = %if.end1249
  br label %shut, !dbg !3088

if.end1255:                                       ; preds = %if.end1249
  %626 = load i8*, i8** %mbuf, align 8, !dbg !3089
  %arrayidx1256 = getelementptr inbounds i8, i8* %626, i64 0, !dbg !3089
  store i8 0, i8* %arrayidx1256, align 1, !dbg !3090
  br label %sw.epilog1724, !dbg !3091

sw.bb1257:                                        ; preds = %if.end1087
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !3092, metadata !439), !dbg !3094
  %627 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3095
  %628 = load i8*, i8** %mbuf, align 8, !dbg !3096
  %call1258 = call i32 @BIO_read(%struct.bio_st* %627, i8* %628, i32 8192), !dbg !3097
  store i32 %call1258, i32* %bytes, align 4, !dbg !3098
  %629 = load i32, i32* %bytes, align 4, !dbg !3099
  %cmp1259 = icmp ne i32 %629, 3, !dbg !3101
  br i1 %cmp1259, label %if.then1265, label %lor.lhs.false1261, !dbg !3102

lor.lhs.false1261:                                ; preds = %sw.bb1257
  %630 = load i8*, i8** %mbuf, align 8, !dbg !3103
  %call1262 = call i32 @memcmp(i8* %630, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @s_client_main.tls_do, i32 0, i32 0), i64 3) #9, !dbg !3105
  %cmp1263 = icmp ne i32 %call1262, 0, !dbg !3106
  br i1 %cmp1263, label %if.then1265, label %if.end1266, !dbg !3107

if.then1265:                                      ; preds = %lor.lhs.false1261, %sw.bb1257
  br label %shut, !dbg !3108

if.end1266:                                       ; preds = %lor.lhs.false1261
  %631 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3109
  %call1267 = call i32 @BIO_write(%struct.bio_st* %631, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @s_client_main.tls_will, i32 0, i32 0), i32 3), !dbg !3110
  %632 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3111
  %call1268 = call i32 @BIO_write(%struct.bio_st* %632, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @s_client_main.tls_follows, i32 0, i32 0), i32 6), !dbg !3112
  %633 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3113
  %call1269 = call i64 @BIO_ctrl(%struct.bio_st* %633, i32 11, i64 0, i8* null), !dbg !3114
  %conv1270 = trunc i64 %call1269 to i32, !dbg !3115
  %634 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3116
  %635 = load i8*, i8** %mbuf, align 8, !dbg !3117
  %call1271 = call i32 @BIO_read(%struct.bio_st* %634, i8* %635, i32 8192), !dbg !3118
  store i32 %call1271, i32* %bytes, align 4, !dbg !3119
  %636 = load i32, i32* %bytes, align 4, !dbg !3120
  %cmp1272 = icmp ne i32 %636, 6, !dbg !3122
  br i1 %cmp1272, label %if.then1278, label %lor.lhs.false1274, !dbg !3123

lor.lhs.false1274:                                ; preds = %if.end1266
  %637 = load i8*, i8** %mbuf, align 8, !dbg !3124
  %call1275 = call i32 @memcmp(i8* %637, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @s_client_main.tls_follows, i32 0, i32 0), i64 6) #9, !dbg !3126
  %cmp1276 = icmp ne i32 %call1275, 0, !dbg !3127
  br i1 %cmp1276, label %if.then1278, label %if.end1279, !dbg !3128

if.then1278:                                      ; preds = %lor.lhs.false1274, %if.end1266
  br label %shut, !dbg !3129

if.end1279:                                       ; preds = %lor.lhs.false1274
  br label %sw.epilog1724, !dbg !3130

sw.bb1280:                                        ; preds = %if.end1087
  call void @llvm.dbg.declare(metadata i32* %foundit1281, metadata !3131, metadata !439), !dbg !3133
  store i32 1, i32* %foundit1281, align 4, !dbg !3133
  call void @llvm.dbg.declare(metadata %struct.bio_st** %fbio1282, metadata !3134, metadata !439), !dbg !3135
  %call1283 = call %struct.bio_method_st* @BIO_f_buffer(), !dbg !3136
  %call1284 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call1283), !dbg !3137
  store %struct.bio_st* %call1284, %struct.bio_st** %fbio1282, align 8, !dbg !3135
  %638 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3139
  %639 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3140
  %call1285 = call %struct.bio_st* @BIO_push(%struct.bio_st* %638, %struct.bio_st* %639), !dbg !3141
  %640 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3142
  %641 = load i8*, i8** %connectstr, align 8, !dbg !3143
  %call1286 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %640, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.426, i32 0, i32 0), i8* %641), !dbg !3144
  %642 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3145
  %call1287 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %642, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.427, i32 0, i32 0)), !dbg !3146
  %643 = load i8*, i8** %proxyuser, align 8, !dbg !3147
  %cmp1288 = icmp ne i8* %643, null, !dbg !3149
  br i1 %cmp1288, label %if.then1290, label %if.end1314, !dbg !3150

if.then1290:                                      ; preds = %sw.bb1280
  call void @llvm.dbg.declare(metadata i64* %l, metadata !3151, metadata !439), !dbg !3153
  call void @llvm.dbg.declare(metadata i8** %proxyauth, metadata !3154, metadata !439), !dbg !3155
  call void @llvm.dbg.declare(metadata i8** %proxyauthenc, metadata !3156, metadata !439), !dbg !3157
  %644 = load i8*, i8** %proxyuser, align 8, !dbg !3158
  %call1291 = call i64 @strlen(i8* %644) #9, !dbg !3159
  store i64 %call1291, i64* %l, align 8, !dbg !3160
  %645 = load i8*, i8** %proxypass, align 8, !dbg !3161
  %cmp1292 = icmp ne i8* %645, null, !dbg !3163
  br i1 %cmp1292, label %if.then1294, label %if.end1297, !dbg !3164

if.then1294:                                      ; preds = %if.then1290
  %646 = load i8*, i8** %proxypass, align 8, !dbg !3165
  %call1295 = call i64 @strlen(i8* %646) #9, !dbg !3166
  %647 = load i64, i64* %l, align 8, !dbg !3167
  %add1296 = add i64 %647, %call1295, !dbg !3167
  store i64 %add1296, i64* %l, align 8, !dbg !3167
  br label %if.end1297, !dbg !3168

if.end1297:                                       ; preds = %if.then1294, %if.then1290
  %648 = load i64, i64* %l, align 8, !dbg !3169
  %add1298 = add i64 %648, 2, !dbg !3170
  %conv1299 = trunc i64 %add1298 to i32, !dbg !3169
  %call1300 = call i8* @app_malloc(i32 %conv1299, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.428, i32 0, i32 0)), !dbg !3171
  store i8* %call1300, i8** %proxyauth, align 8, !dbg !3172
  %649 = load i8*, i8** %proxyauth, align 8, !dbg !3173
  %650 = load i64, i64* %l, align 8, !dbg !3174
  %add1301 = add i64 %650, 2, !dbg !3175
  %651 = load i8*, i8** %proxyuser, align 8, !dbg !3176
  %652 = load i8*, i8** %proxypass, align 8, !dbg !3177
  %cmp1302 = icmp ne i8* %652, null, !dbg !3178
  br i1 %cmp1302, label %cond.true1304, label %cond.false1305, !dbg !3179

cond.true1304:                                    ; preds = %if.end1297
  %653 = load i8*, i8** %proxypass, align 8, !dbg !3180
  br label %cond.end1306, !dbg !3182

cond.false1305:                                   ; preds = %if.end1297
  br label %cond.end1306, !dbg !3183

cond.end1306:                                     ; preds = %cond.false1305, %cond.true1304
  %cond1307 = phi i8* [ %653, %cond.true1304 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.430, i32 0, i32 0), %cond.false1305 ], !dbg !3185
  %call1308 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* %649, i64 %add1301, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.429, i32 0, i32 0), i8* %651, i8* %cond1307), !dbg !3187
  %654 = load i8*, i8** %proxyauth, align 8, !dbg !3188
  %655 = load i8*, i8** %proxyauth, align 8, !dbg !3189
  %call1309 = call i64 @strlen(i8* %655) #9, !dbg !3190
  %call1310 = call i8* @base64encode(i8* %654, i64 %call1309), !dbg !3191
  store i8* %call1310, i8** %proxyauthenc, align 8, !dbg !3192
  %656 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3193
  %657 = load i8*, i8** %proxyauthenc, align 8, !dbg !3194
  %call1311 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %656, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.431, i32 0, i32 0), i8* %657), !dbg !3195
  %658 = load i8*, i8** %proxyauth, align 8, !dbg !3196
  %659 = load i8*, i8** %proxyauth, align 8, !dbg !3197
  %call1312 = call i64 @strlen(i8* %659) #9, !dbg !3198
  call void @CRYPTO_clear_free(i8* %658, i64 %call1312, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 2384), !dbg !3199
  %660 = load i8*, i8** %proxyauthenc, align 8, !dbg !3200
  %661 = load i8*, i8** %proxyauthenc, align 8, !dbg !3201
  %call1313 = call i64 @strlen(i8* %661) #9, !dbg !3202
  call void @CRYPTO_clear_free(i8* %660, i64 %call1313, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 2385), !dbg !3203
  br label %if.end1314, !dbg !3204

if.end1314:                                       ; preds = %cond.end1306, %sw.bb1280
  %662 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3205
  %call1315 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %662, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.432, i32 0, i32 0)), !dbg !3206
  %663 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3207
  %call1316 = call i64 @BIO_ctrl(%struct.bio_st* %663, i32 11, i64 0, i8* null), !dbg !3208
  %conv1317 = trunc i64 %call1316 to i32, !dbg !3209
  %664 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3210
  %665 = load i8*, i8** %mbuf, align 8, !dbg !3211
  %call1318 = call i32 @BIO_gets(%struct.bio_st* %664, i8* %665, i32 8192), !dbg !3212
  store i32 %call1318, i32* %mbuf_len, align 4, !dbg !3213
  %666 = load i32, i32* %mbuf_len, align 4, !dbg !3214
  %cmp1319 = icmp slt i32 %666, 12, !dbg !3216
  br i1 %cmp1319, label %if.then1321, label %if.end1327, !dbg !3217

if.then1321:                                      ; preds = %if.end1314
  %667 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3218
  %668 = load i8*, i8** @prog, align 8, !dbg !3220
  %669 = load i32, i32* %mbuf_len, align 4, !dbg !3221
  %call1322 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %667, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.433, i32 0, i32 0), i8* %668, i32 %669), !dbg !3222
  %670 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3223
  %call1323 = call i64 @BIO_ctrl(%struct.bio_st* %670, i32 11, i64 0, i8* null), !dbg !3224
  %conv1324 = trunc i64 %call1323 to i32, !dbg !3225
  %671 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3226
  %call1325 = call %struct.bio_st* @BIO_pop(%struct.bio_st* %671), !dbg !3227
  %672 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3228
  %call1326 = call i32 @BIO_free(%struct.bio_st* %672), !dbg !3229
  br label %shut, !dbg !3230

if.end1327:                                       ; preds = %if.end1314
  %673 = load i8*, i8** %mbuf, align 8, !dbg !3231
  %arrayidx1328 = getelementptr inbounds i8, i8* %673, i64 8, !dbg !3231
  %674 = load i8, i8* %arrayidx1328, align 1, !dbg !3231
  %conv1329 = sext i8 %674 to i32, !dbg !3231
  %cmp1330 = icmp ne i32 %conv1329, 32, !dbg !3233
  br i1 %cmp1330, label %if.then1332, label %if.else1334, !dbg !3234

if.then1332:                                      ; preds = %if.end1327
  %675 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3235
  %676 = load i8*, i8** @prog, align 8, !dbg !3237
  %call1333 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %675, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.434, i32 0, i32 0), i8* %676), !dbg !3238
  store i32 0, i32* %foundit1281, align 4, !dbg !3239
  br label %if.end1344, !dbg !3240

if.else1334:                                      ; preds = %if.end1327
  %677 = load i8*, i8** %mbuf, align 8, !dbg !3241
  %arrayidx1335 = getelementptr inbounds i8, i8* %677, i64 9, !dbg !3241
  %678 = load i8, i8* %arrayidx1335, align 1, !dbg !3241
  %conv1336 = sext i8 %678 to i32, !dbg !3241
  %cmp1337 = icmp ne i32 %conv1336, 50, !dbg !3244
  br i1 %cmp1337, label %if.then1339, label %if.else1342, !dbg !3241

if.then1339:                                      ; preds = %if.else1334
  %679 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3245
  %680 = load i8*, i8** @prog, align 8, !dbg !3247
  %681 = load i8*, i8** %mbuf, align 8, !dbg !3248
  %arrayidx1340 = getelementptr inbounds i8, i8* %681, i64 9, !dbg !3248
  %call1341 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %679, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.435, i32 0, i32 0), i8* %680, i8* %arrayidx1340), !dbg !3249
  br label %if.end1343, !dbg !3250

if.else1342:                                      ; preds = %if.else1334
  store i32 2, i32* %foundit1281, align 4, !dbg !3251
  br label %if.end1343

if.end1343:                                       ; preds = %if.else1342, %if.then1339
  br label %if.end1344

if.end1344:                                       ; preds = %if.end1343, %if.then1332
  %682 = load i32, i32* %foundit1281, align 4, !dbg !3253
  %cmp1345 = icmp ne i32 %682, 0, !dbg !3255
  br i1 %cmp1345, label %if.then1347, label %if.end1354, !dbg !3256

if.then1347:                                      ; preds = %if.end1344
  br label %do.body1348, !dbg !3257, !llvm.loop !3259

do.body1348:                                      ; preds = %do.cond1350, %if.then1347
  %683 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3260
  %684 = load i8*, i8** %mbuf, align 8, !dbg !3262
  %call1349 = call i32 @BIO_gets(%struct.bio_st* %683, i8* %684, i32 8192), !dbg !3263
  store i32 %call1349, i32* %mbuf_len, align 4, !dbg !3264
  br label %do.cond1350, !dbg !3265

do.cond1350:                                      ; preds = %do.body1348
  %685 = load i32, i32* %mbuf_len, align 4, !dbg !3266
  %cmp1351 = icmp sgt i32 %685, 2, !dbg !3268
  br i1 %cmp1351, label %do.body1348, label %do.end1353, !dbg !3269, !llvm.loop !3259

do.end1353:                                       ; preds = %do.cond1350
  br label %if.end1354, !dbg !3270

if.end1354:                                       ; preds = %do.end1353, %if.end1344
  %686 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3271
  %call1355 = call i64 @BIO_ctrl(%struct.bio_st* %686, i32 11, i64 0, i8* null), !dbg !3272
  %conv1356 = trunc i64 %call1355 to i32, !dbg !3273
  %687 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3274
  %call1357 = call %struct.bio_st* @BIO_pop(%struct.bio_st* %687), !dbg !3275
  %688 = load %struct.bio_st*, %struct.bio_st** %fbio1282, align 8, !dbg !3276
  %call1358 = call i32 @BIO_free(%struct.bio_st* %688), !dbg !3277
  %689 = load i32, i32* %foundit1281, align 4, !dbg !3278
  %cmp1359 = icmp ne i32 %689, 2, !dbg !3280
  br i1 %cmp1359, label %if.then1361, label %if.end1362, !dbg !3281

if.then1361:                                      ; preds = %if.end1354
  br label %shut, !dbg !3282

if.end1362:                                       ; preds = %if.end1354
  br label %sw.epilog1724, !dbg !3284

sw.bb1363:                                        ; preds = %if.end1087
  call void @llvm.dbg.declare(metadata i32* %numeric, metadata !3285, metadata !439), !dbg !3287
  call void @llvm.dbg.declare(metadata %struct.bio_st** %fbio1364, metadata !3288, metadata !439), !dbg !3289
  %call1365 = call %struct.bio_method_st* @BIO_f_buffer(), !dbg !3290
  %call1366 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call1365), !dbg !3291
  store %struct.bio_st* %call1366, %struct.bio_st** %fbio1364, align 8, !dbg !3289
  %690 = load %struct.bio_st*, %struct.bio_st** %fbio1364, align 8, !dbg !3293
  %691 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3294
  %call1367 = call %struct.bio_st* @BIO_push(%struct.bio_st* %690, %struct.bio_st* %691), !dbg !3295
  %692 = load %struct.bio_st*, %struct.bio_st** %fbio1364, align 8, !dbg !3296
  %call1368 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %692, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.413, i32 0, i32 0)), !dbg !3297
  %693 = load %struct.bio_st*, %struct.bio_st** %fbio1364, align 8, !dbg !3298
  %call1369 = call i64 @BIO_ctrl(%struct.bio_st* %693, i32 11, i64 0, i8* null), !dbg !3299
  %conv1370 = trunc i64 %call1369 to i32, !dbg !3300
  %694 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3301
  %call1371 = call i32 @SSL_get_fd(%struct.ssl_st* %694), !dbg !3302
  %add1372 = add nsw i32 %call1371, 1, !dbg !3303
  store i32 %add1372, i32* %width, align 4, !dbg !3304
  br label %do.body1373, !dbg !3305, !llvm.loop !3306

do.body1373:                                      ; preds = %do.cond1433, %sw.bb1363
  store i32 0, i32* %numeric, align 4, !dbg !3307
  br label %do.body1374, !dbg !3309, !llvm.loop !3310

do.body1374:                                      ; preds = %do.body1373
  call void @llvm.dbg.declare(metadata i32* %__d01375, metadata !3311, metadata !439), !dbg !3313
  call void @llvm.dbg.declare(metadata i32* %__d11376, metadata !3314, metadata !439), !dbg !3315
  %__fds_bits1377 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !3316
  %arrayidx1378 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits1377, i64 0, i64 0, !dbg !3318
  %695 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %arrayidx1378) #8, !dbg !3319, !srcloc !3320
  %asmresult1379 = extractvalue { i64, i64* } %695, 0, !dbg !3319
  %asmresult1380 = extractvalue { i64, i64* } %695, 1, !dbg !3319
  %696 = trunc i64 %asmresult1379 to i32, !dbg !3319
  store i32 %696, i32* %__d01375, align 4, !dbg !3319
  %697 = ptrtoint i64* %asmresult1380 to i64, !dbg !3319
  %698 = trunc i64 %697 to i32, !dbg !3319
  store i32 %698, i32* %__d11376, align 4, !dbg !3319
  br label %do.end1382, !dbg !3321

do.end1382:                                       ; preds = %do.body1374
  %699 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3322
  %call1383 = call i32 @SSL_get_fd(%struct.ssl_st* %699), !dbg !3323
  %rem = srem i32 %call1383, 64, !dbg !3324
  %sh_prom = zext i32 %rem to i64, !dbg !3325
  %shl = shl i64 1, %sh_prom, !dbg !3325
  %700 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3322
  %call1384 = call i32 @SSL_get_fd(%struct.ssl_st* %700), !dbg !3326
  %div = sdiv i32 %call1384, 64, !dbg !3324
  %idxprom1385 = sext i32 %div to i64, !dbg !3328
  %__fds_bits1386 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !3329
  %arrayidx1387 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits1386, i64 0, i64 %idxprom1385, !dbg !3328
  %701 = load i64, i64* %arrayidx1387, align 8, !dbg !3330
  %or = or i64 %701, %shl, !dbg !3330
  store i64 %or, i64* %arrayidx1387, align 8, !dbg !3330
  %tv_sec1388 = getelementptr inbounds %struct.timeval, %struct.timeval* %timeout, i32 0, i32 0, !dbg !3331
  store i64 8, i64* %tv_sec1388, align 8, !dbg !3332
  %tv_usec1389 = getelementptr inbounds %struct.timeval, %struct.timeval* %timeout, i32 0, i32 1, !dbg !3333
  store i64 0, i64* %tv_usec1389, align 8, !dbg !3334
  %702 = load %struct.bio_st*, %struct.bio_st** %fbio1364, align 8, !dbg !3335
  %call1390 = call i64 @BIO_ctrl(%struct.bio_st* %702, i32 116, i64 0, i8* null), !dbg !3337
  %tobool1391 = icmp ne i64 %call1390, 0, !dbg !3337
  br i1 %tobool1391, label %if.end1406, label %land.lhs.true1392, !dbg !3338

land.lhs.true1392:                                ; preds = %do.end1382
  %703 = load %struct.bio_st*, %struct.bio_st** %fbio1364, align 8, !dbg !3339
  %call1393 = call i64 @BIO_ctrl(%struct.bio_st* %703, i32 10, i64 0, i8* null), !dbg !3341
  %conv1394 = trunc i64 %call1393 to i32, !dbg !3342
  %tobool1395 = icmp ne i32 %conv1394, 0, !dbg !3342
  br i1 %tobool1395, label %if.end1406, label %land.lhs.true1396, !dbg !3343

land.lhs.true1396:                                ; preds = %land.lhs.true1392
  %704 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3344
  %call1397 = call i64 @BIO_ctrl(%struct.bio_st* %704, i32 10, i64 0, i8* null), !dbg !3345
  %conv1398 = trunc i64 %call1397 to i32, !dbg !3346
  %tobool1399 = icmp ne i32 %conv1398, 0, !dbg !3346
  br i1 %tobool1399, label %if.end1406, label %land.lhs.true1400, !dbg !3347

land.lhs.true1400:                                ; preds = %land.lhs.true1396
  %705 = load i32, i32* %width, align 4, !dbg !3348
  %706 = bitcast %struct.fd_set* %readfds to i8*, !dbg !3349
  %707 = bitcast i8* %706 to %struct.fd_set*, !dbg !3349
  %call1401 = call i32 @select(i32 %705, %struct.fd_set* %707, %struct.fd_set* null, %struct.fd_set* null, %struct.timeval* %timeout), !dbg !3350
  %cmp1402 = icmp slt i32 %call1401, 1, !dbg !3351
  br i1 %cmp1402, label %if.then1404, label %if.end1406, !dbg !3352

if.then1404:                                      ; preds = %land.lhs.true1400
  %708 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3353
  %call1405 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %708, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.436, i32 0, i32 0), i32 8), !dbg !3355
  br label %do.end1436, !dbg !3356

if.end1406:                                       ; preds = %land.lhs.true1400, %land.lhs.true1396, %land.lhs.true1392, %do.end1382
  %709 = load %struct.bio_st*, %struct.bio_st** %fbio1364, align 8, !dbg !3357
  %710 = load i8*, i8** %mbuf, align 8, !dbg !3358
  %call1407 = call i32 @BIO_gets(%struct.bio_st* %709, i8* %710, i32 8192), !dbg !3359
  store i32 %call1407, i32* %mbuf_len, align 4, !dbg !3360
  %711 = load i32, i32* %mbuf_len, align 4, !dbg !3361
  %cmp1408 = icmp slt i32 %711, 1, !dbg !3363
  br i1 %cmp1408, label %if.then1414, label %lor.lhs.false1410, !dbg !3364

lor.lhs.false1410:                                ; preds = %if.end1406
  %712 = load i8*, i8** %mbuf, align 8, !dbg !3365
  %call1411 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %712, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.437, i32 0, i32 0), i32* %numeric) #8, !dbg !3367
  %cmp1412 = icmp ne i32 %call1411, 1, !dbg !3368
  br i1 %cmp1412, label %if.then1414, label %if.end1415, !dbg !3369

if.then1414:                                      ; preds = %lor.lhs.false1410, %if.end1406
  br label %do.end1436, !dbg !3370

if.end1415:                                       ; preds = %lor.lhs.false1410
  %713 = load i32, i32* %numeric, align 4, !dbg !3371
  %cmp1416 = icmp eq i32 %713, 451, !dbg !3373
  br i1 %cmp1416, label %land.lhs.true1421, label %lor.lhs.false1418, !dbg !3374

lor.lhs.false1418:                                ; preds = %if.end1415
  %714 = load i32, i32* %numeric, align 4, !dbg !3375
  %cmp1419 = icmp eq i32 %714, 421, !dbg !3377
  br i1 %cmp1419, label %land.lhs.true1421, label %if.end1427, !dbg !3378

land.lhs.true1421:                                ; preds = %lor.lhs.false1418, %if.end1415
  %715 = load i8*, i8** %mbuf, align 8, !dbg !3379
  %call1422 = call i8* @strstr(i8* %715, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.411, i32 0, i32 0)) #9, !dbg !3380
  %cmp1423 = icmp ne i8* %call1422, null, !dbg !3381
  br i1 %cmp1423, label %if.then1425, label %if.end1427, !dbg !3382

if.then1425:                                      ; preds = %land.lhs.true1421
  %716 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3384
  %717 = load i8*, i8** %mbuf, align 8, !dbg !3386
  %call1426 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %716, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.438, i32 0, i32 0), i8* %717), !dbg !3387
  br label %do.end1436, !dbg !3388

if.end1427:                                       ; preds = %land.lhs.true1421, %lor.lhs.false1418
  %718 = load i32, i32* %numeric, align 4, !dbg !3389
  %cmp1428 = icmp eq i32 %718, 691, !dbg !3391
  br i1 %cmp1428, label %if.then1430, label %if.end1432, !dbg !3392

if.then1430:                                      ; preds = %if.end1427
  %719 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3393
  %call1431 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %719, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.439, i32 0, i32 0)), !dbg !3395
  %720 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3396
  call void @ERR_print_errors(%struct.bio_st* %720), !dbg !3397
  br label %do.end1436, !dbg !3398

if.end1432:                                       ; preds = %if.end1427
  br label %do.cond1433, !dbg !3399

do.cond1433:                                      ; preds = %if.end1432
  %721 = load i32, i32* %numeric, align 4, !dbg !3400
  %cmp1434 = icmp ne i32 %721, 670, !dbg !3401
  br i1 %cmp1434, label %do.body1373, label %do.end1436, !dbg !3402, !llvm.loop !3306

do.end1436:                                       ; preds = %do.cond1433, %if.then1430, %if.then1425, %if.then1414, %if.then1404
  %722 = load %struct.bio_st*, %struct.bio_st** %fbio1364, align 8, !dbg !3403
  %call1437 = call i64 @BIO_ctrl(%struct.bio_st* %722, i32 11, i64 0, i8* null), !dbg !3404
  %conv1438 = trunc i64 %call1437 to i32, !dbg !3405
  %723 = load %struct.bio_st*, %struct.bio_st** %fbio1364, align 8, !dbg !3406
  %call1439 = call %struct.bio_st* @BIO_pop(%struct.bio_st* %723), !dbg !3407
  %724 = load %struct.bio_st*, %struct.bio_st** %fbio1364, align 8, !dbg !3408
  %call1440 = call i32 @BIO_free(%struct.bio_st* %724), !dbg !3409
  %725 = load i32, i32* %numeric, align 4, !dbg !3410
  %cmp1441 = icmp ne i32 %725, 670, !dbg !3412
  br i1 %cmp1441, label %if.then1443, label %if.end1445, !dbg !3413

if.then1443:                                      ; preds = %do.end1436
  %726 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3414
  %call1444 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %726, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.440, i32 0, i32 0)), !dbg !3416
  store i32 1, i32* %ret, align 4, !dbg !3417
  br label %shut, !dbg !3418

if.end1445:                                       ; preds = %do.end1436
  br label %sw.epilog1724, !dbg !3419

sw.bb1446:                                        ; preds = %if.end1087
  call void @llvm.dbg.declare(metadata i32* %bytes1447, metadata !3420, metadata !439), !dbg !3422
  store i32 0, i32* %bytes1447, align 4, !dbg !3422
  call void @llvm.dbg.declare(metadata i32* %ssl_flg, metadata !3423, metadata !439), !dbg !3424
  store i32 2048, i32* %ssl_flg, align 4, !dbg !3424
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !3425, metadata !439), !dbg !3426
  call void @llvm.dbg.declare(metadata i8** %packet, metadata !3427, metadata !439), !dbg !3428
  %727 = load i8*, i8** %sbuf, align 8, !dbg !3429
  store i8* %727, i8** %packet, align 8, !dbg !3428
  %728 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3430
  %729 = load i8*, i8** %packet, align 8, !dbg !3431
  %call1448 = call i32 @BIO_read(%struct.bio_st* %728, i8* %729, i32 8192), !dbg !3432
  store i32 %call1448, i32* %bytes1447, align 4, !dbg !3433
  %730 = load i32, i32* %bytes1447, align 4, !dbg !3434
  %cmp1449 = icmp slt i32 %730, 0, !dbg !3436
  br i1 %cmp1449, label %if.then1451, label %if.else1453, !dbg !3437

if.then1451:                                      ; preds = %sw.bb1446
  %731 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3438
  %call1452 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %731, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.415, i32 0, i32 0)), !dbg !3440
  br label %shut, !dbg !3441

if.else1453:                                      ; preds = %sw.bb1446
  %732 = load i32, i32* %bytes1447, align 4, !dbg !3442
  %cmp1454 = icmp slt i32 %732, 21, !dbg !3444
  br i1 %cmp1454, label %if.then1456, label %if.else1458, !dbg !3445

if.then1456:                                      ; preds = %if.else1453
  %733 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3446
  %call1457 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %733, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.441, i32 0, i32 0)), !dbg !3448
  br label %shut, !dbg !3449

if.else1458:                                      ; preds = %if.else1453
  %734 = load i32, i32* %bytes1447, align 4, !dbg !3450
  %735 = load i8*, i8** %packet, align 8, !dbg !3452
  %arrayidx1459 = getelementptr inbounds i8, i8* %735, i64 0, !dbg !3452
  %736 = load i8, i8* %arrayidx1459, align 1, !dbg !3452
  %conv1460 = zext i8 %736 to i32, !dbg !3452
  %add1461 = add nsw i32 4, %conv1460, !dbg !3453
  %737 = load i8*, i8** %packet, align 8, !dbg !3454
  %arrayidx1462 = getelementptr inbounds i8, i8* %737, i64 1, !dbg !3454
  %738 = load i8, i8* %arrayidx1462, align 1, !dbg !3454
  %conv1463 = zext i8 %738 to i32, !dbg !3454
  %shl1464 = shl i32 %conv1463, 8, !dbg !3455
  %add1465 = add nsw i32 %add1461, %shl1464, !dbg !3456
  %739 = load i8*, i8** %packet, align 8, !dbg !3457
  %arrayidx1466 = getelementptr inbounds i8, i8* %739, i64 2, !dbg !3457
  %740 = load i8, i8* %arrayidx1466, align 1, !dbg !3457
  %conv1467 = zext i8 %740 to i32, !dbg !3457
  %shl1468 = shl i32 %conv1467, 16, !dbg !3458
  %add1469 = add nsw i32 %add1465, %shl1468, !dbg !3459
  %cmp1470 = icmp ne i32 %734, %add1469, !dbg !3460
  br i1 %cmp1470, label %if.then1472, label %if.else1474, !dbg !3461

if.then1472:                                      ; preds = %if.else1458
  %741 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3462
  %call1473 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %741, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.442, i32 0, i32 0)), !dbg !3464
  br label %shut, !dbg !3465

if.else1474:                                      ; preds = %if.else1458
  %742 = load i8*, i8** %packet, align 8, !dbg !3466
  %arrayidx1475 = getelementptr inbounds i8, i8* %742, i64 4, !dbg !3466
  %743 = load i8, i8* %arrayidx1475, align 1, !dbg !3466
  %conv1476 = zext i8 %743 to i32, !dbg !3466
  %cmp1477 = icmp ne i32 %conv1476, 10, !dbg !3468
  br i1 %cmp1477, label %if.then1479, label %if.end1481, !dbg !3469

if.then1479:                                      ; preds = %if.else1474
  %744 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3470
  %call1480 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %744, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.443, i32 0, i32 0)), !dbg !3472
  br label %shut, !dbg !3473

if.end1481:                                       ; preds = %if.else1474
  br label %if.end1482

if.end1482:                                       ; preds = %if.end1481
  br label %if.end1483

if.end1483:                                       ; preds = %if.end1482
  br label %if.end1484

if.end1484:                                       ; preds = %if.end1483
  store i32 5, i32* %pos, align 4, !dbg !3474
  br label %for.cond1485, !dbg !3475

for.cond1485:                                     ; preds = %if.end1499, %if.end1484
  %745 = load i32, i32* %pos, align 4, !dbg !3476
  %746 = load i32, i32* %bytes1447, align 4, !dbg !3481
  %cmp1486 = icmp sge i32 %745, %746, !dbg !3482
  br i1 %cmp1486, label %if.then1488, label %if.else1490, !dbg !3483

if.then1488:                                      ; preds = %for.cond1485
  %747 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3484
  %call1489 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %747, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.444, i32 0, i32 0)), !dbg !3486
  br label %shut, !dbg !3487

if.else1490:                                      ; preds = %for.cond1485
  %748 = load i32, i32* %pos, align 4, !dbg !3488
  %inc1491 = add nsw i32 %748, 1, !dbg !3488
  store i32 %inc1491, i32* %pos, align 4, !dbg !3488
  %idxprom1492 = sext i32 %748 to i64, !dbg !3490
  %749 = load i8*, i8** %packet, align 8, !dbg !3490
  %arrayidx1493 = getelementptr inbounds i8, i8* %749, i64 %idxprom1492, !dbg !3490
  %750 = load i8, i8* %arrayidx1493, align 1, !dbg !3490
  %conv1494 = zext i8 %750 to i32, !dbg !3490
  %cmp1495 = icmp eq i32 %conv1494, 0, !dbg !3491
  br i1 %cmp1495, label %if.then1497, label %if.end1498, !dbg !3492

if.then1497:                                      ; preds = %if.else1490
  br label %for.end1500, !dbg !3493

if.end1498:                                       ; preds = %if.else1490
  br label %if.end1499

if.end1499:                                       ; preds = %if.end1498
  br label %for.cond1485, !dbg !3495, !llvm.loop !3497

for.end1500:                                      ; preds = %if.then1497
  %751 = load i32, i32* %pos, align 4, !dbg !3498
  %add1501 = add nsw i32 %751, 15, !dbg !3500
  %752 = load i32, i32* %bytes1447, align 4, !dbg !3501
  %cmp1502 = icmp sgt i32 %add1501, %752, !dbg !3502
  br i1 %cmp1502, label %if.then1504, label %if.end1506, !dbg !3503

if.then1504:                                      ; preds = %for.end1500
  %753 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3504
  %call1505 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %753, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.445, i32 0, i32 0)), !dbg !3506
  br label %shut, !dbg !3507

if.end1506:                                       ; preds = %for.end1500
  %754 = load i32, i32* %pos, align 4, !dbg !3508
  %add1507 = add nsw i32 %754, 12, !dbg !3508
  store i32 %add1507, i32* %pos, align 4, !dbg !3508
  %755 = load i32, i32* %pos, align 4, !dbg !3509
  %inc1508 = add nsw i32 %755, 1, !dbg !3509
  store i32 %inc1508, i32* %pos, align 4, !dbg !3509
  %idxprom1509 = sext i32 %755 to i64, !dbg !3511
  %756 = load i8*, i8** %packet, align 8, !dbg !3511
  %arrayidx1510 = getelementptr inbounds i8, i8* %756, i64 %idxprom1509, !dbg !3511
  %757 = load i8, i8* %arrayidx1510, align 1, !dbg !3511
  %conv1511 = zext i8 %757 to i32, !dbg !3511
  %cmp1512 = icmp ne i32 %conv1511, 0, !dbg !3512
  br i1 %cmp1512, label %if.then1514, label %if.end1516, !dbg !3513

if.then1514:                                      ; preds = %if.end1506
  %758 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3514
  %call1515 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %758, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.446, i32 0, i32 0)), !dbg !3516
  br label %shut, !dbg !3517

if.end1516:                                       ; preds = %if.end1506
  %759 = load i32, i32* %pos, align 4, !dbg !3518
  %idxprom1517 = sext i32 %759 to i64, !dbg !3520
  %760 = load i8*, i8** %packet, align 8, !dbg !3520
  %arrayidx1518 = getelementptr inbounds i8, i8* %760, i64 %idxprom1517, !dbg !3520
  %761 = load i8, i8* %arrayidx1518, align 1, !dbg !3520
  %conv1519 = zext i8 %761 to i32, !dbg !3520
  %762 = load i32, i32* %pos, align 4, !dbg !3521
  %add1520 = add nsw i32 %762, 1, !dbg !3522
  %idxprom1521 = sext i32 %add1520 to i64, !dbg !3523
  %763 = load i8*, i8** %packet, align 8, !dbg !3523
  %arrayidx1522 = getelementptr inbounds i8, i8* %763, i64 %idxprom1521, !dbg !3523
  %764 = load i8, i8* %arrayidx1522, align 1, !dbg !3523
  %conv1523 = zext i8 %764 to i32, !dbg !3523
  %shl1524 = shl i32 %conv1523, 8, !dbg !3524
  %add1525 = add nsw i32 %conv1519, %shl1524, !dbg !3525
  %765 = load i32, i32* %ssl_flg, align 4, !dbg !3526
  %and1526 = and i32 %add1525, %765, !dbg !3527
  %tobool1527 = icmp ne i32 %and1526, 0, !dbg !3527
  br i1 %tobool1527, label %if.end1530, label %if.then1528, !dbg !3528

if.then1528:                                      ; preds = %if.end1516
  %766 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3529
  %call1529 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %766, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.447, i32 0, i32 0)), !dbg !3531
  br label %shut, !dbg !3532

if.end1530:                                       ; preds = %if.end1516
  %767 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3533
  %call1531 = call i32 @BIO_write(%struct.bio_st* %767, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @s_client_main.ssl_req, i32 0, i32 0), i32 36), !dbg !3534
  %768 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3535
  %call1532 = call i64 @BIO_ctrl(%struct.bio_st* %768, i32 11, i64 0, i8* null), !dbg !3536
  %conv1533 = trunc i64 %call1532 to i32, !dbg !3537
  br label %sw.epilog1724, !dbg !3538

sw.bb1534:                                        ; preds = %if.end1087
  call void @llvm.dbg.declare(metadata i32* %bytes1535, metadata !3539, metadata !439), !dbg !3541
  %769 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3542
  %call1536 = call i32 @BIO_write(%struct.bio_st* %769, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @s_client_main.ssl_request, i32 0, i32 0), i32 8), !dbg !3543
  %770 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3544
  %call1537 = call i64 @BIO_ctrl(%struct.bio_st* %770, i32 11, i64 0, i8* null), !dbg !3545
  %conv1538 = trunc i64 %call1537 to i32, !dbg !3546
  %771 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3547
  %772 = load i8*, i8** %sbuf, align 8, !dbg !3548
  %call1539 = call i32 @BIO_read(%struct.bio_st* %771, i8* %772, i32 8192), !dbg !3549
  store i32 %call1539, i32* %bytes1535, align 4, !dbg !3550
  %773 = load i32, i32* %bytes1535, align 4, !dbg !3551
  %cmp1540 = icmp ne i32 %773, 1, !dbg !3553
  br i1 %cmp1540, label %if.then1547, label %lor.lhs.false1542, !dbg !3554

lor.lhs.false1542:                                ; preds = %sw.bb1534
  %774 = load i8*, i8** %sbuf, align 8, !dbg !3555
  %arrayidx1543 = getelementptr inbounds i8, i8* %774, i64 0, !dbg !3555
  %775 = load i8, i8* %arrayidx1543, align 1, !dbg !3555
  %conv1544 = sext i8 %775 to i32, !dbg !3555
  %cmp1545 = icmp ne i32 %conv1544, 83, !dbg !3557
  br i1 %cmp1545, label %if.then1547, label %if.end1548, !dbg !3558

if.then1547:                                      ; preds = %lor.lhs.false1542, %sw.bb1534
  br label %shut, !dbg !3559

if.end1548:                                       ; preds = %lor.lhs.false1542
  br label %sw.epilog1724, !dbg !3560

sw.bb1549:                                        ; preds = %if.end1087
  call void @llvm.dbg.declare(metadata i32* %foundit1550, metadata !3561, metadata !439), !dbg !3563
  store i32 0, i32* %foundit1550, align 4, !dbg !3563
  call void @llvm.dbg.declare(metadata %struct.bio_st** %fbio1551, metadata !3564, metadata !439), !dbg !3565
  %call1552 = call %struct.bio_method_st* @BIO_f_buffer(), !dbg !3566
  %call1553 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call1552), !dbg !3567
  store %struct.bio_st* %call1553, %struct.bio_st** %fbio1551, align 8, !dbg !3565
  %776 = load %struct.bio_st*, %struct.bio_st** %fbio1551, align 8, !dbg !3569
  %777 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3570
  %call1554 = call %struct.bio_st* @BIO_push(%struct.bio_st* %776, %struct.bio_st* %777), !dbg !3571
  %778 = load %struct.bio_st*, %struct.bio_st** %fbio1551, align 8, !dbg !3572
  %779 = load i8*, i8** %mbuf, align 8, !dbg !3573
  %call1555 = call i32 @BIO_gets(%struct.bio_st* %778, i8* %779, i32 8192), !dbg !3574
  %780 = load %struct.bio_st*, %struct.bio_st** %fbio1551, align 8, !dbg !3575
  %call1556 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %780, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.448, i32 0, i32 0)), !dbg !3576
  %781 = load %struct.bio_st*, %struct.bio_st** %fbio1551, align 8, !dbg !3577
  %call1557 = call i64 @BIO_ctrl(%struct.bio_st* %781, i32 11, i64 0, i8* null), !dbg !3578
  %conv1558 = trunc i64 %call1557 to i32, !dbg !3579
  %782 = load %struct.bio_st*, %struct.bio_st** %fbio1551, align 8, !dbg !3580
  %783 = load i8*, i8** %mbuf, align 8, !dbg !3581
  %call1559 = call i32 @BIO_gets(%struct.bio_st* %782, i8* %783, i32 8192), !dbg !3582
  %784 = load i8*, i8** %mbuf, align 8, !dbg !3583
  %call1560 = call i8* @strstr(i8* %784, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.449, i32 0, i32 0)) #9, !dbg !3585
  %cmp1561 = icmp ne i8* %call1560, null, !dbg !3586
  br i1 %cmp1561, label %if.then1563, label %if.end1580, !dbg !3587

if.then1563:                                      ; preds = %sw.bb1549
  br label %do.body1564, !dbg !3588, !llvm.loop !3590

do.body1564:                                      ; preds = %land.end1578, %if.then1563
  %785 = load %struct.bio_st*, %struct.bio_st** %fbio1551, align 8, !dbg !3591
  %786 = load i8*, i8** %mbuf, align 8, !dbg !3593
  %call1565 = call i32 @BIO_gets(%struct.bio_st* %785, i8* %786, i32 8192), !dbg !3594
  store i32 %call1565, i32* %mbuf_len, align 4, !dbg !3595
  %787 = load i8*, i8** %mbuf, align 8, !dbg !3596
  %call1566 = call i8* @strstr(i8* %787, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.411, i32 0, i32 0)) #9, !dbg !3598
  %tobool1567 = icmp ne i8* %call1566, null, !dbg !3598
  br i1 %tobool1567, label %if.then1568, label %if.end1569, !dbg !3599

if.then1568:                                      ; preds = %do.body1564
  store i32 1, i32* %foundit1550, align 4, !dbg !3600
  br label %if.end1569, !dbg !3601

if.end1569:                                       ; preds = %if.then1568, %do.body1564
  br label %do.cond1570, !dbg !3602

do.cond1570:                                      ; preds = %if.end1569
  %788 = load i32, i32* %mbuf_len, align 4, !dbg !3603
  %cmp1571 = icmp sgt i32 %788, 1, !dbg !3605
  br i1 %cmp1571, label %land.rhs1573, label %land.end1578, !dbg !3606

land.rhs1573:                                     ; preds = %do.cond1570
  %789 = load i8*, i8** %mbuf, align 8, !dbg !3607
  %arrayidx1574 = getelementptr inbounds i8, i8* %789, i64 0, !dbg !3607
  %790 = load i8, i8* %arrayidx1574, align 1, !dbg !3607
  %conv1575 = sext i8 %790 to i32, !dbg !3607
  %cmp1576 = icmp ne i32 %conv1575, 46, !dbg !3609
  br label %land.end1578

land.end1578:                                     ; preds = %land.rhs1573, %do.cond1570
  %791 = phi i1 [ false, %do.cond1570 ], [ %cmp1576, %land.rhs1573 ]
  br i1 %791, label %do.body1564, label %do.end1579, !dbg !3610, !llvm.loop !3590

do.end1579:                                       ; preds = %land.end1578
  br label %if.end1580, !dbg !3612

if.end1580:                                       ; preds = %do.end1579, %sw.bb1549
  %792 = load %struct.bio_st*, %struct.bio_st** %fbio1551, align 8, !dbg !3613
  %call1581 = call i64 @BIO_ctrl(%struct.bio_st* %792, i32 11, i64 0, i8* null), !dbg !3614
  %conv1582 = trunc i64 %call1581 to i32, !dbg !3615
  %793 = load %struct.bio_st*, %struct.bio_st** %fbio1551, align 8, !dbg !3616
  %call1583 = call %struct.bio_st* @BIO_pop(%struct.bio_st* %793), !dbg !3617
  %794 = load %struct.bio_st*, %struct.bio_st** %fbio1551, align 8, !dbg !3618
  %call1584 = call i32 @BIO_free(%struct.bio_st* %794), !dbg !3619
  %795 = load i32, i32* %foundit1550, align 4, !dbg !3620
  %tobool1585 = icmp ne i32 %795, 0, !dbg !3620
  br i1 %tobool1585, label %if.end1588, label %if.then1586, !dbg !3622

if.then1586:                                      ; preds = %if.end1580
  %796 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3623
  %call1587 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %796, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.412, i32 0, i32 0)), !dbg !3624
  br label %if.end1588, !dbg !3624

if.end1588:                                       ; preds = %if.then1586, %if.end1580
  %797 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3625
  %call1589 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %797, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.413, i32 0, i32 0)), !dbg !3626
  %798 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3627
  %799 = load i8*, i8** %mbuf, align 8, !dbg !3628
  %call1590 = call i32 @BIO_read(%struct.bio_st* %798, i8* %799, i32 8192), !dbg !3629
  store i32 %call1590, i32* %mbuf_len, align 4, !dbg !3630
  %800 = load i32, i32* %mbuf_len, align 4, !dbg !3631
  %cmp1591 = icmp slt i32 %800, 0, !dbg !3633
  br i1 %cmp1591, label %if.then1593, label %if.end1595, !dbg !3634

if.then1593:                                      ; preds = %if.end1588
  %801 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3635
  %call1594 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %801, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.415, i32 0, i32 0)), !dbg !3637
  br label %end, !dbg !3638

if.end1595:                                       ; preds = %if.end1588
  %802 = load i32, i32* %mbuf_len, align 4, !dbg !3639
  %idxprom1596 = sext i32 %802 to i64, !dbg !3640
  %803 = load i8*, i8** %mbuf, align 8, !dbg !3640
  %arrayidx1597 = getelementptr inbounds i8, i8* %803, i64 %idxprom1596, !dbg !3640
  store i8 0, i8* %arrayidx1597, align 1, !dbg !3641
  %804 = load i8*, i8** %mbuf, align 8, !dbg !3642
  %call1598 = call i8* @strstr(i8* %804, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.450, i32 0, i32 0)) #9, !dbg !3644
  %cmp1599 = icmp eq i8* %call1598, null, !dbg !3645
  br i1 %cmp1599, label %if.then1601, label %if.end1603, !dbg !3646

if.then1601:                                      ; preds = %if.end1595
  %805 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3647
  %806 = load i8*, i8** %mbuf, align 8, !dbg !3649
  %call1602 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %805, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.451, i32 0, i32 0), i8* %806), !dbg !3650
  br label %shut, !dbg !3651

if.end1603:                                       ; preds = %if.end1595
  br label %sw.epilog1724, !dbg !3652

sw.bb1604:                                        ; preds = %if.end1087
  call void @llvm.dbg.declare(metadata i32* %foundit1605, metadata !3653, metadata !439), !dbg !3655
  store i32 0, i32* %foundit1605, align 4, !dbg !3655
  call void @llvm.dbg.declare(metadata %struct.bio_st** %fbio1606, metadata !3656, metadata !439), !dbg !3657
  %call1607 = call %struct.bio_method_st* @BIO_f_buffer(), !dbg !3658
  %call1608 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call1607), !dbg !3659
  store %struct.bio_st* %call1608, %struct.bio_st** %fbio1606, align 8, !dbg !3657
  %807 = load %struct.bio_st*, %struct.bio_st** %fbio1606, align 8, !dbg !3661
  %808 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3662
  %call1609 = call %struct.bio_st* @BIO_push(%struct.bio_st* %807, %struct.bio_st* %808), !dbg !3663
  br label %do.body1610, !dbg !3664, !llvm.loop !3665

do.body1610:                                      ; preds = %land.end1634, %sw.bb1604
  %809 = load %struct.bio_st*, %struct.bio_st** %fbio1606, align 8, !dbg !3666
  %810 = load i8*, i8** %mbuf, align 8, !dbg !3668
  %call1611 = call i32 @BIO_gets(%struct.bio_st* %809, i8* %810, i32 8192), !dbg !3669
  store i32 %call1611, i32* %mbuf_len, align 4, !dbg !3670
  %811 = load i32, i32* %mbuf_len, align 4, !dbg !3671
  %cmp1612 = icmp sgt i32 %811, 1, !dbg !3673
  br i1 %cmp1612, label %land.lhs.true1614, label %if.end1625, !dbg !3674

land.lhs.true1614:                                ; preds = %do.body1610
  %812 = load i8*, i8** %mbuf, align 8, !dbg !3675
  %arrayidx1615 = getelementptr inbounds i8, i8* %812, i64 0, !dbg !3675
  %813 = load i8, i8* %arrayidx1615, align 1, !dbg !3675
  %conv1616 = sext i8 %813 to i32, !dbg !3675
  %cmp1617 = icmp eq i32 %conv1616, 34, !dbg !3677
  br i1 %cmp1617, label %if.then1619, label %if.end1625, !dbg !3678

if.then1619:                                      ; preds = %land.lhs.true1614
  %814 = load i8*, i8** %mbuf, align 8, !dbg !3679
  call void @make_uppercase(i8* %814), !dbg !3681
  %815 = load i8*, i8** %mbuf, align 8, !dbg !3682
  %call1620 = call i32 @strncmp(i8* %815, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.452, i32 0, i32 0), i64 10) #9, !dbg !3684
  %cmp1621 = icmp eq i32 %call1620, 0, !dbg !3685
  br i1 %cmp1621, label %if.then1623, label %if.end1624, !dbg !3686

if.then1623:                                      ; preds = %if.then1619
  store i32 1, i32* %foundit1605, align 4, !dbg !3687
  br label %if.end1624, !dbg !3688

if.end1624:                                       ; preds = %if.then1623, %if.then1619
  br label %if.end1625, !dbg !3689

if.end1625:                                       ; preds = %if.end1624, %land.lhs.true1614, %do.body1610
  br label %do.cond1626, !dbg !3690

do.cond1626:                                      ; preds = %if.end1625
  %816 = load i32, i32* %mbuf_len, align 4, !dbg !3691
  %cmp1627 = icmp sgt i32 %816, 1, !dbg !3692
  br i1 %cmp1627, label %land.rhs1629, label %land.end1634, !dbg !3693

land.rhs1629:                                     ; preds = %do.cond1626
  %817 = load i8*, i8** %mbuf, align 8, !dbg !3694
  %arrayidx1630 = getelementptr inbounds i8, i8* %817, i64 0, !dbg !3694
  %818 = load i8, i8* %arrayidx1630, align 1, !dbg !3694
  %conv1631 = sext i8 %818 to i32, !dbg !3694
  %cmp1632 = icmp eq i32 %conv1631, 34, !dbg !3696
  br label %land.end1634

land.end1634:                                     ; preds = %land.rhs1629, %do.cond1626
  %819 = phi i1 [ false, %do.cond1626 ], [ %cmp1632, %land.rhs1629 ]
  br i1 %819, label %do.body1610, label %do.end1635, !dbg !3697, !llvm.loop !3665

do.end1635:                                       ; preds = %land.end1634
  %820 = load %struct.bio_st*, %struct.bio_st** %fbio1606, align 8, !dbg !3699
  %call1636 = call i64 @BIO_ctrl(%struct.bio_st* %820, i32 11, i64 0, i8* null), !dbg !3700
  %conv1637 = trunc i64 %call1636 to i32, !dbg !3701
  %821 = load %struct.bio_st*, %struct.bio_st** %fbio1606, align 8, !dbg !3702
  %call1638 = call %struct.bio_st* @BIO_pop(%struct.bio_st* %821), !dbg !3703
  %822 = load %struct.bio_st*, %struct.bio_st** %fbio1606, align 8, !dbg !3704
  %call1639 = call i32 @BIO_free(%struct.bio_st* %822), !dbg !3705
  %823 = load i32, i32* %foundit1605, align 4, !dbg !3706
  %tobool1640 = icmp ne i32 %823, 0, !dbg !3706
  br i1 %tobool1640, label %if.end1643, label %if.then1641, !dbg !3708

if.then1641:                                      ; preds = %do.end1635
  %824 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3709
  %call1642 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %824, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.412, i32 0, i32 0)), !dbg !3710
  br label %if.end1643, !dbg !3710

if.end1643:                                       ; preds = %if.then1641, %do.end1635
  %825 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3711
  %call1644 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %825, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.413, i32 0, i32 0)), !dbg !3712
  %826 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3713
  %827 = load i8*, i8** %mbuf, align 8, !dbg !3714
  %call1645 = call i32 @BIO_read(%struct.bio_st* %826, i8* %827, i32 8192), !dbg !3715
  store i32 %call1645, i32* %mbuf_len, align 4, !dbg !3716
  %828 = load i32, i32* %mbuf_len, align 4, !dbg !3717
  %cmp1646 = icmp slt i32 %828, 0, !dbg !3719
  br i1 %cmp1646, label %if.then1648, label %if.end1650, !dbg !3720

if.then1648:                                      ; preds = %if.end1643
  %829 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3721
  %call1649 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %829, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.415, i32 0, i32 0)), !dbg !3723
  br label %end, !dbg !3724

if.end1650:                                       ; preds = %if.end1643
  %830 = load i32, i32* %mbuf_len, align 4, !dbg !3725
  %idxprom1651 = sext i32 %830 to i64, !dbg !3726
  %831 = load i8*, i8** %mbuf, align 8, !dbg !3726
  %arrayidx1652 = getelementptr inbounds i8, i8* %831, i64 %idxprom1651, !dbg !3726
  store i8 0, i8* %arrayidx1652, align 1, !dbg !3727
  %832 = load i32, i32* %mbuf_len, align 4, !dbg !3728
  %cmp1653 = icmp slt i32 %832, 2, !dbg !3730
  br i1 %cmp1653, label %if.then1655, label %if.end1657, !dbg !3731

if.then1655:                                      ; preds = %if.end1650
  %833 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3732
  %834 = load i8*, i8** %mbuf, align 8, !dbg !3734
  %call1656 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %833, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.451, i32 0, i32 0), i8* %834), !dbg !3735
  br label %shut, !dbg !3736

if.end1657:                                       ; preds = %if.end1650
  %835 = load i8*, i8** %sbuf, align 8, !dbg !3737
  %836 = load i8*, i8** %mbuf, align 8, !dbg !3738
  %call1658 = call i8* @strncpy(i8* %835, i8* %836, i64 2) #8, !dbg !3739
  %837 = load i8*, i8** %sbuf, align 8, !dbg !3740
  call void @make_uppercase(i8* %837), !dbg !3741
  %838 = load i8*, i8** %sbuf, align 8, !dbg !3742
  %call1659 = call i32 @strncmp(i8* %838, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.453, i32 0, i32 0), i64 2) #9, !dbg !3744
  %cmp1660 = icmp ne i32 %call1659, 0, !dbg !3745
  br i1 %cmp1660, label %if.then1662, label %if.end1664, !dbg !3746

if.then1662:                                      ; preds = %if.end1657
  %839 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3747
  %840 = load i8*, i8** %mbuf, align 8, !dbg !3749
  %call1663 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %839, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.438, i32 0, i32 0), i8* %840), !dbg !3750
  br label %shut, !dbg !3751

if.end1664:                                       ; preds = %if.end1657
  br label %sw.epilog1724, !dbg !3752

sw.bb1665:                                        ; preds = %if.end1087
  call void @llvm.dbg.declare(metadata i64* %errline, metadata !3753, metadata !439), !dbg !3755
  store i64 -1, i64* %errline, align 8, !dbg !3755
  call void @llvm.dbg.declare(metadata i8** %genstr, metadata !3756, metadata !439), !dbg !3757
  store i8* null, i8** %genstr, align 8, !dbg !3757
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3758, metadata !439), !dbg !3759
  store i32 -1, i32* %result, align 4, !dbg !3759
  call void @llvm.dbg.declare(metadata %struct.asn1_type_st** %atyp, metadata !3760, metadata !439), !dbg !3834
  store %struct.asn1_type_st* null, %struct.asn1_type_st** %atyp, align 8, !dbg !3834
  call void @llvm.dbg.declare(metadata %struct.bio_st** %ldapbio, metadata !3835, metadata !439), !dbg !3836
  %call1666 = call %struct.bio_method_st* @BIO_s_mem(), !dbg !3837
  %call1667 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call1666), !dbg !3838
  store %struct.bio_st* %call1667, %struct.bio_st** %ldapbio, align 8, !dbg !3836
  call void @llvm.dbg.declare(metadata %struct.conf_st** %cnf, metadata !3840, metadata !439), !dbg !3893
  %call1668 = call %struct.conf_st* @NCONF_new(%struct.conf_method_st* null), !dbg !3894
  store %struct.conf_st* %call1668, %struct.conf_st** %cnf, align 8, !dbg !3893
  %841 = load %struct.conf_st*, %struct.conf_st** %cnf, align 8, !dbg !3895
  %cmp1669 = icmp eq %struct.conf_st* %841, null, !dbg !3897
  br i1 %cmp1669, label %if.then1671, label %if.end1673, !dbg !3898

if.then1671:                                      ; preds = %sw.bb1665
  %842 = load %struct.bio_st*, %struct.bio_st** %ldapbio, align 8, !dbg !3899
  %call1672 = call i32 @BIO_free(%struct.bio_st* %842), !dbg !3901
  br label %end, !dbg !3902

if.end1673:                                       ; preds = %sw.bb1665
  %843 = load %struct.bio_st*, %struct.bio_st** %ldapbio, align 8, !dbg !3903
  %call1674 = call i32 @BIO_puts(%struct.bio_st* %843, i8* getelementptr inbounds ([138 x i8], [138 x i8]* @s_client_main.ldap_tls_genconf, i32 0, i32 0)), !dbg !3904
  %844 = load %struct.conf_st*, %struct.conf_st** %cnf, align 8, !dbg !3905
  %845 = load %struct.bio_st*, %struct.bio_st** %ldapbio, align 8, !dbg !3907
  %call1675 = call i32 @NCONF_load_bio(%struct.conf_st* %844, %struct.bio_st* %845, i64* %errline), !dbg !3908
  %cmp1676 = icmp sle i32 %call1675, 0, !dbg !3909
  br i1 %cmp1676, label %if.then1678, label %if.end1686, !dbg !3910

if.then1678:                                      ; preds = %if.end1673
  %846 = load %struct.bio_st*, %struct.bio_st** %ldapbio, align 8, !dbg !3911
  %call1679 = call i32 @BIO_free(%struct.bio_st* %846), !dbg !3913
  %847 = load %struct.conf_st*, %struct.conf_st** %cnf, align 8, !dbg !3914
  call void @NCONF_free(%struct.conf_st* %847), !dbg !3915
  %848 = load i64, i64* %errline, align 8, !dbg !3916
  %cmp1680 = icmp sle i64 %848, 0, !dbg !3918
  br i1 %cmp1680, label %if.then1682, label %if.else1684, !dbg !3919

if.then1682:                                      ; preds = %if.then1678
  %849 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3920
  %call1683 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %849, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.454, i32 0, i32 0)), !dbg !3922
  br label %end, !dbg !3923

if.else1684:                                      ; preds = %if.then1678
  %850 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3924
  %851 = load i64, i64* %errline, align 8, !dbg !3926
  %call1685 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %850, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.455, i32 0, i32 0), i64 %851), !dbg !3927
  br label %end, !dbg !3928

if.end1686:                                       ; preds = %if.end1673
  %852 = load %struct.bio_st*, %struct.bio_st** %ldapbio, align 8, !dbg !3929
  %call1687 = call i32 @BIO_free(%struct.bio_st* %852), !dbg !3930
  %853 = load %struct.conf_st*, %struct.conf_st** %cnf, align 8, !dbg !3931
  %call1688 = call i8* @NCONF_get_string(%struct.conf_st* %853, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.456, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.457, i32 0, i32 0)), !dbg !3932
  store i8* %call1688, i8** %genstr, align 8, !dbg !3933
  %854 = load i8*, i8** %genstr, align 8, !dbg !3934
  %cmp1689 = icmp eq i8* %854, null, !dbg !3936
  br i1 %cmp1689, label %if.then1691, label %if.end1693, !dbg !3937

if.then1691:                                      ; preds = %if.end1686
  %855 = load %struct.conf_st*, %struct.conf_st** %cnf, align 8, !dbg !3938
  call void @NCONF_free(%struct.conf_st* %855), !dbg !3940
  %856 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3941
  %call1692 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %856, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.458, i32 0, i32 0)), !dbg !3942
  br label %end, !dbg !3943

if.end1693:                                       ; preds = %if.end1686
  %857 = load i8*, i8** %genstr, align 8, !dbg !3944
  %858 = load %struct.conf_st*, %struct.conf_st** %cnf, align 8, !dbg !3945
  %call1694 = call %struct.asn1_type_st* @ASN1_generate_nconf(i8* %857, %struct.conf_st* %858), !dbg !3946
  store %struct.asn1_type_st* %call1694, %struct.asn1_type_st** %atyp, align 8, !dbg !3947
  %859 = load %struct.asn1_type_st*, %struct.asn1_type_st** %atyp, align 8, !dbg !3948
  %cmp1695 = icmp eq %struct.asn1_type_st* %859, null, !dbg !3950
  br i1 %cmp1695, label %if.then1697, label %if.end1699, !dbg !3951

if.then1697:                                      ; preds = %if.end1693
  %860 = load %struct.conf_st*, %struct.conf_st** %cnf, align 8, !dbg !3952
  call void @NCONF_free(%struct.conf_st* %860), !dbg !3954
  %861 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3955
  %call1698 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %861, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.459, i32 0, i32 0)), !dbg !3956
  br label %end, !dbg !3957

if.end1699:                                       ; preds = %if.end1693
  %862 = load %struct.conf_st*, %struct.conf_st** %cnf, align 8, !dbg !3958
  call void @NCONF_free(%struct.conf_st* %862), !dbg !3959
  %863 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3960
  %864 = load %struct.asn1_type_st*, %struct.asn1_type_st** %atyp, align 8, !dbg !3961
  %value = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %864, i32 0, i32 1, !dbg !3962
  %sequence = bitcast %union.anon* %value to %struct.asn1_string_st**, !dbg !3963
  %865 = load %struct.asn1_string_st*, %struct.asn1_string_st** %sequence, align 8, !dbg !3963
  %data = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %865, i32 0, i32 2, !dbg !3964
  %866 = load i8*, i8** %data, align 8, !dbg !3964
  %867 = load %struct.asn1_type_st*, %struct.asn1_type_st** %atyp, align 8, !dbg !3965
  %value1700 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %867, i32 0, i32 1, !dbg !3966
  %sequence1701 = bitcast %union.anon* %value1700 to %struct.asn1_string_st**, !dbg !3967
  %868 = load %struct.asn1_string_st*, %struct.asn1_string_st** %sequence1701, align 8, !dbg !3967
  %length = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %868, i32 0, i32 0, !dbg !3968
  %869 = load i32, i32* %length, align 8, !dbg !3968
  %call1702 = call i32 @BIO_write(%struct.bio_st* %863, i8* %866, i32 %869), !dbg !3969
  %870 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3970
  %call1703 = call i64 @BIO_ctrl(%struct.bio_st* %870, i32 11, i64 0, i8* null), !dbg !3971
  %conv1704 = trunc i64 %call1703 to i32, !dbg !3972
  %871 = load %struct.asn1_type_st*, %struct.asn1_type_st** %atyp, align 8, !dbg !3973
  call void @ASN1_TYPE_free(%struct.asn1_type_st* %871), !dbg !3974
  %872 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3975
  %873 = load i8*, i8** %mbuf, align 8, !dbg !3976
  %call1705 = call i32 @BIO_read(%struct.bio_st* %872, i8* %873, i32 8192), !dbg !3977
  store i32 %call1705, i32* %mbuf_len, align 4, !dbg !3978
  %874 = load i32, i32* %mbuf_len, align 4, !dbg !3979
  %cmp1706 = icmp slt i32 %874, 0, !dbg !3981
  br i1 %cmp1706, label %if.then1708, label %if.end1710, !dbg !3982

if.then1708:                                      ; preds = %if.end1699
  %875 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3983
  %call1709 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %875, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.415, i32 0, i32 0)), !dbg !3985
  br label %end, !dbg !3986

if.end1710:                                       ; preds = %if.end1699
  %876 = load i8*, i8** %mbuf, align 8, !dbg !3987
  %877 = load i32, i32* %mbuf_len, align 4, !dbg !3988
  %conv1711 = sext i32 %877 to i64, !dbg !3988
  %call1712 = call i32 @ldap_ExtendedResponse_parse(i8* %876, i64 %conv1711), !dbg !3989
  store i32 %call1712, i32* %result, align 4, !dbg !3990
  %878 = load i32, i32* %result, align 4, !dbg !3991
  %cmp1713 = icmp slt i32 %878, 0, !dbg !3993
  br i1 %cmp1713, label %if.then1715, label %if.else1717, !dbg !3994

if.then1715:                                      ; preds = %if.end1710
  %879 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3995
  %call1716 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %879, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.460, i32 0, i32 0)), !dbg !3997
  br label %shut, !dbg !3998

if.else1717:                                      ; preds = %if.end1710
  %880 = load i32, i32* %result, align 4, !dbg !3999
  %cmp1718 = icmp sgt i32 %880, 0, !dbg !4001
  br i1 %cmp1718, label %if.then1720, label %if.end1722, !dbg !4002

if.then1720:                                      ; preds = %if.else1717
  %881 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4003
  %882 = load i32, i32* %result, align 4, !dbg !4005
  %call1721 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %881, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.461, i32 0, i32 0), i32 %882), !dbg !4006
  br label %shut, !dbg !4007

if.end1722:                                       ; preds = %if.else1717
  br label %if.end1723

if.end1723:                                       ; preds = %if.end1722
  store i32 0, i32* %mbuf_len, align 4, !dbg !4008
  br label %sw.epilog1724, !dbg !4009

sw.epilog1724:                                    ; preds = %if.end1087, %if.end1723, %if.end1664, %if.end1603, %if.end1548, %if.end1530, %if.end1445, %if.end1362, %if.end1279, %if.end1255, %do.end1202, %if.end1183, %if.end1149, %if.end1138, %sw.bb1088
  %883 = load i8*, i8** %early_data_file, align 8, !dbg !4010
  %cmp1725 = icmp ne i8* %883, null, !dbg !4012
  br i1 %cmp1725, label %land.lhs.true1727, label %if.end1771, !dbg !4013

land.lhs.true1727:                                ; preds = %sw.epilog1724
  %884 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4014
  %call1728 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %884), !dbg !4016
  %cmp1729 = icmp ne %struct.ssl_session_st* %call1728, null, !dbg !4017
  br i1 %cmp1729, label %land.lhs.true1731, label %lor.lhs.false1736, !dbg !4018

land.lhs.true1731:                                ; preds = %land.lhs.true1727
  %885 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4019
  %call1732 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %885), !dbg !4020
  %call1733 = call i32 @SSL_SESSION_get_max_early_data(%struct.ssl_session_st* %call1732), !dbg !4021
  %cmp1734 = icmp ugt i32 %call1733, 0, !dbg !4023
  br i1 %cmp1734, label %if.then1743, label %lor.lhs.false1736, !dbg !4024

lor.lhs.false1736:                                ; preds = %land.lhs.true1731, %land.lhs.true1727
  %886 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !4025
  %cmp1737 = icmp ne %struct.ssl_session_st* %886, null, !dbg !4026
  br i1 %cmp1737, label %land.lhs.true1739, label %if.end1771, !dbg !4027

land.lhs.true1739:                                ; preds = %lor.lhs.false1736
  %887 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !4028
  %call1740 = call i32 @SSL_SESSION_get_max_early_data(%struct.ssl_session_st* %887), !dbg !4029
  %cmp1741 = icmp ugt i32 %call1740, 0, !dbg !4030
  br i1 %cmp1741, label %if.then1743, label %if.end1771, !dbg !4031

if.then1743:                                      ; preds = %land.lhs.true1739, %land.lhs.true1731
  call void @llvm.dbg.declare(metadata %struct.bio_st** %edfile, metadata !4032, metadata !439), !dbg !4034
  %888 = load i8*, i8** %early_data_file, align 8, !dbg !4035
  %call1744 = call %struct.bio_st* @BIO_new_file(i8* %888, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.385, i32 0, i32 0)), !dbg !4036
  store %struct.bio_st* %call1744, %struct.bio_st** %edfile, align 8, !dbg !4034
  call void @llvm.dbg.declare(metadata i64* %readbytes, metadata !4037, metadata !439), !dbg !4038
  call void @llvm.dbg.declare(metadata i64* %writtenbytes, metadata !4039, metadata !439), !dbg !4040
  call void @llvm.dbg.declare(metadata i32* %finish, metadata !4041, metadata !439), !dbg !4042
  store i32 0, i32* %finish, align 4, !dbg !4042
  %889 = load %struct.bio_st*, %struct.bio_st** %edfile, align 8, !dbg !4043
  %cmp1745 = icmp eq %struct.bio_st* %889, null, !dbg !4045
  br i1 %cmp1745, label %if.then1747, label %if.end1749, !dbg !4046

if.then1747:                                      ; preds = %if.then1743
  %890 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4047
  %call1748 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %890, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.462, i32 0, i32 0)), !dbg !4049
  br label %shut, !dbg !4050

if.end1749:                                       ; preds = %if.then1743
  br label %while.cond1750, !dbg !4051

while.cond1750:                                   ; preds = %while.end1768, %if.end1749
  %891 = load i32, i32* %finish, align 4, !dbg !4052
  %tobool1751 = icmp ne i32 %891, 0, !dbg !4054
  %lnot1752 = xor i1 %tobool1751, true, !dbg !4054
  br i1 %lnot1752, label %while.body1753, label %while.end1769, !dbg !4055

while.body1753:                                   ; preds = %while.cond1750
  %892 = load %struct.bio_st*, %struct.bio_st** %edfile, align 8, !dbg !4056
  %893 = load i8*, i8** %cbuf, align 8, !dbg !4059
  %call1754 = call i32 @BIO_read_ex(%struct.bio_st* %892, i8* %893, i64 8192, i64* %readbytes), !dbg !4060
  %tobool1755 = icmp ne i32 %call1754, 0, !dbg !4060
  br i1 %tobool1755, label %if.end1757, label %if.then1756, !dbg !4061

if.then1756:                                      ; preds = %while.body1753
  store i32 1, i32* %finish, align 4, !dbg !4062
  br label %if.end1757, !dbg !4063

if.end1757:                                       ; preds = %if.then1756, %while.body1753
  br label %while.cond1758, !dbg !4064

while.cond1758:                                   ; preds = %sw.bb1764, %if.end1757
  %894 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4065
  %895 = load i8*, i8** %cbuf, align 8, !dbg !4067
  %896 = load i64, i64* %readbytes, align 8, !dbg !4068
  %call1759 = call i32 @SSL_write_early_data(%struct.ssl_st* %894, i8* %895, i64 %896, i64* %writtenbytes), !dbg !4069
  %tobool1760 = icmp ne i32 %call1759, 0, !dbg !4070
  %lnot1761 = xor i1 %tobool1760, true, !dbg !4070
  br i1 %lnot1761, label %while.body1762, label %while.end1768, !dbg !4071

while.body1762:                                   ; preds = %while.cond1758
  %897 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4072
  %call1763 = call i32 @SSL_get_error(%struct.ssl_st* %897, i32 0), !dbg !4074
  switch i32 %call1763, label %sw.default1765 [
    i32 3, label %sw.bb1764
    i32 9, label %sw.bb1764
    i32 2, label %sw.bb1764
  ], !dbg !4075

sw.bb1764:                                        ; preds = %while.body1762, %while.body1762, %while.body1762
  br label %while.cond1758, !dbg !4076, !llvm.loop !4078

sw.default1765:                                   ; preds = %while.body1762
  %898 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4079
  %call1766 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %898, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.463, i32 0, i32 0)), !dbg !4080
  %899 = load %struct.bio_st*, %struct.bio_st** %edfile, align 8, !dbg !4081
  %call1767 = call i32 @BIO_free(%struct.bio_st* %899), !dbg !4082
  %900 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4083
  call void @ERR_print_errors(%struct.bio_st* %900), !dbg !4084
  br label %shut, !dbg !4085

while.end1768:                                    ; preds = %while.cond1758
  br label %while.cond1750, !dbg !4086, !llvm.loop !4088

while.end1769:                                    ; preds = %while.cond1750
  %901 = load %struct.bio_st*, %struct.bio_st** %edfile, align 8, !dbg !4089
  %call1770 = call i32 @BIO_free(%struct.bio_st* %901), !dbg !4090
  br label %if.end1771, !dbg !4091

if.end1771:                                       ; preds = %while.end1769, %land.lhs.true1739, %lor.lhs.false1736, %sw.epilog1724
  br label %for.cond1772, !dbg !4092

for.cond1772:                                     ; preds = %if.end2179, %if.end1771
  br label %do.body1773, !dbg !4093, !llvm.loop !4097

do.body1773:                                      ; preds = %for.cond1772
  call void @llvm.dbg.declare(metadata i32* %__d01774, metadata !4098, metadata !439), !dbg !4100
  call void @llvm.dbg.declare(metadata i32* %__d11775, metadata !4101, metadata !439), !dbg !4102
  %__fds_bits1776 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !4103
  %arrayidx1777 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits1776, i64 0, i64 0, !dbg !4105
  %902 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %arrayidx1777) #8, !dbg !4106, !srcloc !4107
  %asmresult1778 = extractvalue { i64, i64* } %902, 0, !dbg !4106
  %asmresult1779 = extractvalue { i64, i64* } %902, 1, !dbg !4106
  %903 = trunc i64 %asmresult1778 to i32, !dbg !4106
  store i32 %903, i32* %__d01774, align 4, !dbg !4106
  %904 = ptrtoint i64* %asmresult1779 to i64, !dbg !4106
  %905 = trunc i64 %904 to i32, !dbg !4106
  store i32 %905, i32* %__d11775, align 4, !dbg !4106
  br label %do.end1781, !dbg !4108

do.end1781:                                       ; preds = %do.body1773
  br label %do.body1782, !dbg !4109, !llvm.loop !4110

do.body1782:                                      ; preds = %do.end1781
  call void @llvm.dbg.declare(metadata i32* %__d01783, metadata !4111, metadata !439), !dbg !4113
  call void @llvm.dbg.declare(metadata i32* %__d11784, metadata !4114, metadata !439), !dbg !4115
  %__fds_bits1785 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %writefds, i32 0, i32 0, !dbg !4116
  %arrayidx1786 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits1785, i64 0, i64 0, !dbg !4118
  %906 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %arrayidx1786) #8, !dbg !4119, !srcloc !4120
  %asmresult1787 = extractvalue { i64, i64* } %906, 0, !dbg !4119
  %asmresult1788 = extractvalue { i64, i64* } %906, 1, !dbg !4119
  %907 = trunc i64 %asmresult1787 to i32, !dbg !4119
  store i32 %907, i32* %__d01783, align 4, !dbg !4119
  %908 = ptrtoint i64* %asmresult1788 to i64, !dbg !4119
  %909 = trunc i64 %908 to i32, !dbg !4119
  store i32 %909, i32* %__d11784, align 4, !dbg !4119
  br label %do.end1790, !dbg !4121

do.end1790:                                       ; preds = %do.body1782
  %910 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4122
  %call1791 = call i32 @SSL_is_dtls(%struct.ssl_st* %910), !dbg !4124
  %tobool1792 = icmp ne i32 %call1791, 0, !dbg !4124
  br i1 %tobool1792, label %land.lhs.true1793, label %if.else1797, !dbg !4125

land.lhs.true1793:                                ; preds = %do.end1790
  %911 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4126
  %912 = bitcast %struct.timeval* %timeout to i8*, !dbg !4128
  %call1794 = call i64 @SSL_ctrl(%struct.ssl_st* %911, i32 73, i64 0, i8* %912), !dbg !4129
  %tobool1795 = icmp ne i64 %call1794, 0, !dbg !4129
  br i1 %tobool1795, label %if.then1796, label %if.else1797, !dbg !4130

if.then1796:                                      ; preds = %land.lhs.true1793
  store %struct.timeval* %timeout, %struct.timeval** %timeoutp, align 8, !dbg !4131
  br label %if.end1798, !dbg !4132

if.else1797:                                      ; preds = %land.lhs.true1793, %do.end1790
  store %struct.timeval* null, %struct.timeval** %timeoutp, align 8, !dbg !4133
  br label %if.end1798

if.end1798:                                       ; preds = %if.else1797, %if.then1796
  %913 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4134
  %call1799 = call i32 @SSL_is_init_finished(%struct.ssl_st* %913), !dbg !4136
  %tobool1800 = icmp ne i32 %call1799, 0, !dbg !4136
  br i1 %tobool1800, label %if.else1810, label %land.lhs.true1801, !dbg !4137

land.lhs.true1801:                                ; preds = %if.end1798
  %914 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4138
  %call1802 = call i64 @SSL_ctrl(%struct.ssl_st* %914, i32 12, i64 0, i8* null), !dbg !4140
  %cmp1803 = icmp eq i64 %call1802, 0, !dbg !4141
  br i1 %cmp1803, label %land.lhs.true1805, label %if.else1810, !dbg !4142

land.lhs.true1805:                                ; preds = %land.lhs.true1801
  %915 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4143
  %call1806 = call i32 @SSL_get_key_update_type(%struct.ssl_st* %915), !dbg !4144
  %cmp1807 = icmp eq i32 %call1806, -1, !dbg !4145
  br i1 %cmp1807, label %if.then1809, label %if.else1810, !dbg !4146

if.then1809:                                      ; preds = %land.lhs.true1805
  store i32 1, i32* %in_init, align 4, !dbg !4148
  store i32 0, i32* %tty_on, align 4, !dbg !4150
  br label %if.end1836, !dbg !4151

if.else1810:                                      ; preds = %land.lhs.true1805, %land.lhs.true1801, %if.end1798
  store i32 1, i32* %tty_on, align 4, !dbg !4152
  %916 = load i32, i32* %in_init, align 4, !dbg !4154
  %tobool1811 = icmp ne i32 %916, 0, !dbg !4154
  br i1 %tobool1811, label %if.then1812, label %if.end1835, !dbg !4156

if.then1812:                                      ; preds = %if.else1810
  store i32 0, i32* %in_init, align 4, !dbg !4157
  %917 = load i32, i32* %c_brief, align 4, !dbg !4159
  %tobool1813 = icmp ne i32 %917, 0, !dbg !4159
  br i1 %tobool1813, label %if.then1814, label %if.end1816, !dbg !4161

if.then1814:                                      ; preds = %if.then1812
  %918 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4162
  %call1815 = call i32 @BIO_puts(%struct.bio_st* %918, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.464, i32 0, i32 0)), !dbg !4164
  %919 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4165
  call void @print_ssl_summary(%struct.ssl_st* %919), !dbg !4166
  br label %if.end1816, !dbg !4167

if.end1816:                                       ; preds = %if.then1814, %if.then1812
  %920 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4168
  %921 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4169
  %922 = load i32, i32* %full_log, align 4, !dbg !4170
  call void @print_stuff(%struct.bio_st* %920, %struct.ssl_st* %921, i32 %922), !dbg !4171
  %923 = load i32, i32* %full_log, align 4, !dbg !4172
  %cmp1817 = icmp sgt i32 %923, 0, !dbg !4174
  br i1 %cmp1817, label %if.then1819, label %if.end1820, !dbg !4175

if.then1819:                                      ; preds = %if.end1816
  %924 = load i32, i32* %full_log, align 4, !dbg !4176
  %dec = add nsw i32 %924, -1, !dbg !4176
  store i32 %dec, i32* %full_log, align 4, !dbg !4176
  br label %if.end1820, !dbg !4177

if.end1820:                                       ; preds = %if.then1819, %if.end1816
  %925 = load i32, i32* %starttls_proto, align 4, !dbg !4178
  %tobool1821 = icmp ne i32 %925, 0, !dbg !4178
  br i1 %tobool1821, label %if.then1822, label %if.end1827, !dbg !4180

if.then1822:                                      ; preds = %if.end1820
  %926 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4181
  %927 = load i8*, i8** %mbuf, align 8, !dbg !4183
  %928 = load i32, i32* %mbuf_len, align 4, !dbg !4184
  %call1823 = call i32 @BIO_write(%struct.bio_st* %926, i8* %927, i32 %928), !dbg !4185
  %929 = load i32, i32* %reconnect, align 4, !dbg !4186
  %tobool1824 = icmp ne i32 %929, 0, !dbg !4186
  br i1 %tobool1824, label %if.end1826, label %if.then1825, !dbg !4188

if.then1825:                                      ; preds = %if.then1822
  store i32 0, i32* %starttls_proto, align 4, !dbg !4189
  br label %if.end1826, !dbg !4190

if.end1826:                                       ; preds = %if.then1825, %if.then1822
  br label %if.end1827, !dbg !4191

if.end1827:                                       ; preds = %if.end1826, %if.end1820
  %930 = load i32, i32* %reconnect, align 4, !dbg !4192
  %tobool1828 = icmp ne i32 %930, 0, !dbg !4192
  br i1 %tobool1828, label %if.then1829, label %if.end1834, !dbg !4194

if.then1829:                                      ; preds = %if.end1827
  %931 = load i32, i32* %reconnect, align 4, !dbg !4195
  %dec1830 = add nsw i32 %931, -1, !dbg !4195
  store i32 %dec1830, i32* %reconnect, align 4, !dbg !4195
  %932 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4197
  %call1831 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %932, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.465, i32 0, i32 0)), !dbg !4198
  %933 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4199
  call void @do_ssl_shutdown(%struct.ssl_st* %933), !dbg !4200
  %934 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4201
  call void @SSL_set_connect_state(%struct.ssl_st* %934), !dbg !4202
  %935 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4203
  %call1832 = call i32 @SSL_get_fd(%struct.ssl_st* %935), !dbg !4204
  %call1833 = call i32 @BIO_closesocket(i32 %call1832), !dbg !4205
  br label %re_start, !dbg !4207

if.end1834:                                       ; preds = %if.end1827
  br label %if.end1835, !dbg !4208

if.end1835:                                       ; preds = %if.end1834, %if.else1810
  br label %if.end1836

if.end1836:                                       ; preds = %if.end1835, %if.then1809
  %936 = load i32, i32* %read_ssl, align 4, !dbg !4209
  %tobool1837 = icmp ne i32 %936, 0, !dbg !4209
  br i1 %tobool1837, label %land.rhs1838, label %land.end1841, !dbg !4210

land.rhs1838:                                     ; preds = %if.end1836
  %937 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4211
  %call1839 = call i32 @SSL_has_pending(%struct.ssl_st* %937), !dbg !4213
  %tobool1840 = icmp ne i32 %call1839, 0, !dbg !4214
  br label %land.end1841

land.end1841:                                     ; preds = %land.rhs1838, %if.end1836
  %938 = phi i1 [ false, %if.end1836 ], [ %tobool1840, %land.rhs1838 ]
  %land.ext = zext i1 %938 to i32, !dbg !4215
  store i32 %land.ext, i32* %ssl_pending, align 4, !dbg !4216
  %939 = load i32, i32* %ssl_pending, align 4, !dbg !4217
  %tobool1842 = icmp ne i32 %939, 0, !dbg !4217
  br i1 %tobool1842, label %if.end1908, label %if.then1843, !dbg !4219

if.then1843:                                      ; preds = %land.end1841
  %940 = load i32, i32* %tty_on, align 4, !dbg !4220
  %tobool1844 = icmp ne i32 %940, 0, !dbg !4220
  br i1 %tobool1844, label %if.then1845, label %if.end1874, !dbg !4223

if.then1845:                                      ; preds = %if.then1843
  %941 = load i32, i32* %read_tty, align 4, !dbg !4224
  %tobool1846 = icmp ne i32 %941, 0, !dbg !4224
  br i1 %tobool1846, label %land.lhs.true1847, label %if.end1860, !dbg !4227

land.lhs.true1847:                                ; preds = %if.then1845
  %942 = load i32, i32* %at_eof, align 4, !dbg !4228
  %tobool1848 = icmp ne i32 %942, 0, !dbg !4228
  br i1 %tobool1848, label %if.end1860, label %if.then1849, !dbg !4230

if.then1849:                                      ; preds = %land.lhs.true1847
  %call1850 = call i32 @fileno_stdin(), !dbg !4231
  %rem1851 = srem i32 %call1850, 64, !dbg !4232
  %sh_prom1852 = zext i32 %rem1851 to i64, !dbg !4233
  %shl1853 = shl i64 1, %sh_prom1852, !dbg !4233
  %call1854 = call i32 @fileno_stdin(), !dbg !4234
  %div1855 = sdiv i32 %call1854, 64, !dbg !4232
  %idxprom1856 = sext i32 %div1855 to i64, !dbg !4235
  %__fds_bits1857 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !4236
  %arrayidx1858 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits1857, i64 0, i64 %idxprom1856, !dbg !4235
  %943 = load i64, i64* %arrayidx1858, align 8, !dbg !4237
  %or1859 = or i64 %943, %shl1853, !dbg !4237
  store i64 %or1859, i64* %arrayidx1858, align 8, !dbg !4237
  br label %if.end1860, !dbg !4231

if.end1860:                                       ; preds = %if.then1849, %land.lhs.true1847, %if.then1845
  %944 = load i32, i32* %write_tty, align 4, !dbg !4238
  %tobool1861 = icmp ne i32 %944, 0, !dbg !4238
  br i1 %tobool1861, label %if.then1862, label %if.end1873, !dbg !4240

if.then1862:                                      ; preds = %if.end1860
  %call1863 = call i32 @fileno_stdout(), !dbg !4241
  %rem1864 = srem i32 %call1863, 64, !dbg !4242
  %sh_prom1865 = zext i32 %rem1864 to i64, !dbg !4243
  %shl1866 = shl i64 1, %sh_prom1865, !dbg !4243
  %call1867 = call i32 @fileno_stdout(), !dbg !4244
  %div1868 = sdiv i32 %call1867, 64, !dbg !4242
  %idxprom1869 = sext i32 %div1868 to i64, !dbg !4246
  %__fds_bits1870 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %writefds, i32 0, i32 0, !dbg !4247
  %arrayidx1871 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits1870, i64 0, i64 %idxprom1869, !dbg !4246
  %945 = load i64, i64* %arrayidx1871, align 8, !dbg !4248
  %or1872 = or i64 %945, %shl1866, !dbg !4248
  store i64 %or1872, i64* %arrayidx1871, align 8, !dbg !4248
  br label %if.end1873, !dbg !4241

if.end1873:                                       ; preds = %if.then1862, %if.end1860
  br label %if.end1874, !dbg !4249

if.end1874:                                       ; preds = %if.end1873, %if.then1843
  %946 = load i32, i32* %read_ssl, align 4, !dbg !4250
  %tobool1875 = icmp ne i32 %946, 0, !dbg !4250
  br i1 %tobool1875, label %if.then1876, label %if.end1887, !dbg !4252

if.then1876:                                      ; preds = %if.end1874
  %947 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4253
  %call1877 = call i32 @SSL_get_fd(%struct.ssl_st* %947), !dbg !4254
  %rem1878 = srem i32 %call1877, 64, !dbg !4255
  %sh_prom1879 = zext i32 %rem1878 to i64, !dbg !4256
  %shl1880 = shl i64 1, %sh_prom1879, !dbg !4256
  %948 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4253
  %call1881 = call i32 @SSL_get_fd(%struct.ssl_st* %948), !dbg !4257
  %div1882 = sdiv i32 %call1881, 64, !dbg !4255
  %idxprom1883 = sext i32 %div1882 to i64, !dbg !4259
  %__fds_bits1884 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !4260
  %arrayidx1885 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits1884, i64 0, i64 %idxprom1883, !dbg !4259
  %949 = load i64, i64* %arrayidx1885, align 8, !dbg !4261
  %or1886 = or i64 %949, %shl1880, !dbg !4261
  store i64 %or1886, i64* %arrayidx1885, align 8, !dbg !4261
  br label %if.end1887, !dbg !4254

if.end1887:                                       ; preds = %if.then1876, %if.end1874
  %950 = load i32, i32* %write_ssl, align 4, !dbg !4262
  %tobool1888 = icmp ne i32 %950, 0, !dbg !4262
  br i1 %tobool1888, label %if.then1889, label %if.end1900, !dbg !4264

if.then1889:                                      ; preds = %if.end1887
  %951 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4265
  %call1890 = call i32 @SSL_get_fd(%struct.ssl_st* %951), !dbg !4266
  %rem1891 = srem i32 %call1890, 64, !dbg !4267
  %sh_prom1892 = zext i32 %rem1891 to i64, !dbg !4268
  %shl1893 = shl i64 1, %sh_prom1892, !dbg !4268
  %952 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4265
  %call1894 = call i32 @SSL_get_fd(%struct.ssl_st* %952), !dbg !4269
  %div1895 = sdiv i32 %call1894, 64, !dbg !4267
  %idxprom1896 = sext i32 %div1895 to i64, !dbg !4271
  %__fds_bits1897 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %writefds, i32 0, i32 0, !dbg !4272
  %arrayidx1898 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits1897, i64 0, i64 %idxprom1896, !dbg !4271
  %953 = load i64, i64* %arrayidx1898, align 8, !dbg !4273
  %or1899 = or i64 %953, %shl1893, !dbg !4273
  store i64 %or1899, i64* %arrayidx1898, align 8, !dbg !4273
  br label %if.end1900, !dbg !4266

if.end1900:                                       ; preds = %if.then1889, %if.end1887
  %954 = load i32, i32* %width, align 4, !dbg !4274
  %955 = bitcast %struct.fd_set* %readfds to i8*, !dbg !4275
  %956 = bitcast i8* %955 to %struct.fd_set*, !dbg !4275
  %957 = bitcast %struct.fd_set* %writefds to i8*, !dbg !4276
  %958 = bitcast i8* %957 to %struct.fd_set*, !dbg !4276
  %959 = load %struct.timeval*, %struct.timeval** %timeoutp, align 8, !dbg !4277
  %call1901 = call i32 @select(i32 %954, %struct.fd_set* %956, %struct.fd_set* %958, %struct.fd_set* null, %struct.timeval* %959), !dbg !4278
  store i32 %call1901, i32* %i, align 4, !dbg !4279
  %960 = load i32, i32* %i, align 4, !dbg !4280
  %cmp1902 = icmp slt i32 %960, 0, !dbg !4282
  br i1 %cmp1902, label %if.then1904, label %if.end1907, !dbg !4283

if.then1904:                                      ; preds = %if.end1900
  %961 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4284
  %call1905 = call i32* @__errno_location() #1, !dbg !4286
  %962 = load i32, i32* %call1905, align 4, !dbg !4287
  %call1906 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %961, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.466, i32 0, i32 0), i32 %962), !dbg !4288
  br label %shut, !dbg !4289

if.end1907:                                       ; preds = %if.end1900
  br label %if.end1908, !dbg !4290

if.end1908:                                       ; preds = %if.end1907, %land.end1841
  %963 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4291
  %call1909 = call i32 @SSL_is_dtls(%struct.ssl_st* %963), !dbg !4293
  %tobool1910 = icmp ne i32 %call1909, 0, !dbg !4293
  br i1 %tobool1910, label %land.lhs.true1911, label %if.end1917, !dbg !4294

land.lhs.true1911:                                ; preds = %if.end1908
  %964 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4295
  %call1912 = call i64 @SSL_ctrl(%struct.ssl_st* %964, i32 74, i64 0, i8* null), !dbg !4297
  %cmp1913 = icmp sgt i64 %call1912, 0, !dbg !4298
  br i1 %cmp1913, label %if.then1915, label %if.end1917, !dbg !4299

if.then1915:                                      ; preds = %land.lhs.true1911
  %965 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4300
  %call1916 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %965, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.467, i32 0, i32 0)), !dbg !4301
  br label %if.end1917, !dbg !4301

if.end1917:                                       ; preds = %if.then1915, %land.lhs.true1911, %if.end1908
  %966 = load i32, i32* %ssl_pending, align 4, !dbg !4302
  %tobool1918 = icmp ne i32 %966, 0, !dbg !4302
  br i1 %tobool1918, label %if.else1975, label %land.lhs.true1919, !dbg !4304

land.lhs.true1919:                                ; preds = %if.end1917
  %967 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4305
  %call1920 = call i32 @SSL_get_fd(%struct.ssl_st* %967), !dbg !4307
  %div1921 = sdiv i32 %call1920, 64, !dbg !4308
  %idxprom1922 = sext i32 %div1921 to i64, !dbg !4308
  %__fds_bits1923 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %writefds, i32 0, i32 0, !dbg !4309
  %arrayidx1924 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits1923, i64 0, i64 %idxprom1922, !dbg !4308
  %968 = load i64, i64* %arrayidx1924, align 8, !dbg !4308
  %969 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4305
  %call1925 = call i32 @SSL_get_fd(%struct.ssl_st* %969), !dbg !4310
  %rem1926 = srem i32 %call1925, 64, !dbg !4308
  %sh_prom1927 = zext i32 %rem1926 to i64, !dbg !4312
  %shl1928 = shl i64 1, %sh_prom1927, !dbg !4312
  %and1929 = and i64 %968, %shl1928, !dbg !4313
  %cmp1930 = icmp ne i64 %and1929, 0, !dbg !4314
  br i1 %cmp1930, label %if.then1932, label %if.else1975, !dbg !4315

if.then1932:                                      ; preds = %land.lhs.true1919
  %970 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4316
  %971 = load i32, i32* %cbuf_off, align 4, !dbg !4318
  %idxprom1933 = sext i32 %971 to i64, !dbg !4319
  %972 = load i8*, i8** %cbuf, align 8, !dbg !4319
  %arrayidx1934 = getelementptr inbounds i8, i8* %972, i64 %idxprom1933, !dbg !4319
  %973 = load i32, i32* %cbuf_len, align 4, !dbg !4320
  %call1935 = call i32 @SSL_write(%struct.ssl_st* %970, i8* %arrayidx1934, i32 %973), !dbg !4321
  store i32 %call1935, i32* %k, align 4, !dbg !4322
  %974 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4323
  %975 = load i32, i32* %k, align 4, !dbg !4324
  %call1936 = call i32 @SSL_get_error(%struct.ssl_st* %974, i32 %975), !dbg !4325
  switch i32 %call1936, label %sw.epilog1974 [
    i32 0, label %sw.bb1937
    i32 3, label %sw.bb1948
    i32 9, label %sw.bb1950
    i32 2, label %sw.bb1952
    i32 4, label %sw.bb1954
    i32 6, label %sw.bb1956
    i32 5, label %sw.bb1962
    i32 10, label %sw.bb1973
    i32 1, label %sw.bb1973
  ], !dbg !4326

sw.bb1937:                                        ; preds = %if.then1932
  %976 = load i32, i32* %k, align 4, !dbg !4327
  %977 = load i32, i32* %cbuf_off, align 4, !dbg !4329
  %add1938 = add nsw i32 %977, %976, !dbg !4329
  store i32 %add1938, i32* %cbuf_off, align 4, !dbg !4329
  %978 = load i32, i32* %k, align 4, !dbg !4330
  %979 = load i32, i32* %cbuf_len, align 4, !dbg !4331
  %sub = sub nsw i32 %979, %978, !dbg !4331
  store i32 %sub, i32* %cbuf_len, align 4, !dbg !4331
  %980 = load i32, i32* %k, align 4, !dbg !4332
  %cmp1939 = icmp sle i32 %980, 0, !dbg !4334
  br i1 %cmp1939, label %if.then1941, label %if.end1942, !dbg !4335

if.then1941:                                      ; preds = %sw.bb1937
  br label %end, !dbg !4336

if.end1942:                                       ; preds = %sw.bb1937
  %981 = load i32, i32* %cbuf_len, align 4, !dbg !4337
  %cmp1943 = icmp sle i32 %981, 0, !dbg !4339
  br i1 %cmp1943, label %if.then1945, label %if.else1946, !dbg !4340

if.then1945:                                      ; preds = %if.end1942
  store i32 1, i32* %read_tty, align 4, !dbg !4341
  store i32 0, i32* %write_ssl, align 4, !dbg !4343
  br label %if.end1947, !dbg !4344

if.else1946:                                      ; preds = %if.end1942
  store i32 0, i32* %read_tty, align 4, !dbg !4345
  store i32 1, i32* %write_ssl, align 4, !dbg !4347
  br label %if.end1947

if.end1947:                                       ; preds = %if.else1946, %if.then1945
  br label %sw.epilog1974, !dbg !4348

sw.bb1948:                                        ; preds = %if.then1932
  %982 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4349
  %call1949 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %982, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.468, i32 0, i32 0)), !dbg !4350
  store i32 1, i32* %write_ssl, align 4, !dbg !4351
  store i32 0, i32* %read_tty, align 4, !dbg !4352
  br label %sw.epilog1974, !dbg !4353

sw.bb1950:                                        ; preds = %if.then1932
  %983 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4354
  %call1951 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %983, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.469, i32 0, i32 0)), !dbg !4355
  %984 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4356
  call void @wait_for_async(%struct.ssl_st* %984), !dbg !4357
  store i32 1, i32* %write_ssl, align 4, !dbg !4358
  store i32 0, i32* %read_tty, align 4, !dbg !4359
  br label %sw.epilog1974, !dbg !4360

sw.bb1952:                                        ; preds = %if.then1932
  %985 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4361
  %call1953 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %985, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.470, i32 0, i32 0)), !dbg !4362
  store i32 0, i32* %write_tty, align 4, !dbg !4363
  store i32 1, i32* %read_ssl, align 4, !dbg !4364
  store i32 0, i32* %write_ssl, align 4, !dbg !4365
  br label %sw.epilog1974, !dbg !4366

sw.bb1954:                                        ; preds = %if.then1932
  %986 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4367
  %call1955 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %986, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.471, i32 0, i32 0)), !dbg !4368
  br label %sw.epilog1974, !dbg !4369

sw.bb1956:                                        ; preds = %if.then1932
  %987 = load i32, i32* %cbuf_len, align 4, !dbg !4370
  %cmp1957 = icmp ne i32 %987, 0, !dbg !4372
  br i1 %cmp1957, label %if.then1959, label %if.else1961, !dbg !4373

if.then1959:                                      ; preds = %sw.bb1956
  %988 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4374
  %call1960 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %988, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.472, i32 0, i32 0)), !dbg !4376
  store i32 0, i32* %ret, align 4, !dbg !4377
  br label %shut, !dbg !4378

if.else1961:                                      ; preds = %sw.bb1956
  store i32 1, i32* %read_tty, align 4, !dbg !4379
  store i32 0, i32* %write_ssl, align 4, !dbg !4381
  br label %sw.epilog1974, !dbg !4382

sw.bb1962:                                        ; preds = %if.then1932
  %989 = load i32, i32* %k, align 4, !dbg !4383
  %cmp1963 = icmp ne i32 %989, 0, !dbg !4385
  br i1 %cmp1963, label %if.then1968, label %lor.lhs.false1965, !dbg !4386

lor.lhs.false1965:                                ; preds = %sw.bb1962
  %990 = load i32, i32* %cbuf_len, align 4, !dbg !4387
  %cmp1966 = icmp ne i32 %990, 0, !dbg !4389
  br i1 %cmp1966, label %if.then1968, label %if.else1971, !dbg !4390

if.then1968:                                      ; preds = %lor.lhs.false1965, %sw.bb1962
  %991 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4391
  %call1969 = call i32* @__errno_location() #1, !dbg !4393
  %992 = load i32, i32* %call1969, align 4, !dbg !4394
  %call1970 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %991, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.473, i32 0, i32 0), i32 %992), !dbg !4395
  br label %shut, !dbg !4396

if.else1971:                                      ; preds = %lor.lhs.false1965
  store i32 1, i32* %read_tty, align 4, !dbg !4397
  store i32 0, i32* %write_ssl, align 4, !dbg !4399
  br label %if.end1972

if.end1972:                                       ; preds = %if.else1971
  br label %sw.epilog1974, !dbg !4400

sw.bb1973:                                        ; preds = %if.then1932, %if.then1932
  %993 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4401
  call void @ERR_print_errors(%struct.bio_st* %993), !dbg !4402
  br label %shut, !dbg !4403

sw.epilog1974:                                    ; preds = %if.then1932, %if.end1972, %if.else1961, %sw.bb1954, %sw.bb1952, %sw.bb1950, %sw.bb1948, %if.end1947
  br label %if.end2179, !dbg !4404

if.else1975:                                      ; preds = %land.lhs.true1919, %if.end1917
  %994 = load i32, i32* %ssl_pending, align 4, !dbg !4405
  %tobool1976 = icmp ne i32 %994, 0, !dbg !4405
  br i1 %tobool1976, label %if.else2005, label %land.lhs.true1977, !dbg !4407

land.lhs.true1977:                                ; preds = %if.else1975
  %call1978 = call i32 @fileno_stdout(), !dbg !4408
  %div1979 = sdiv i32 %call1978, 64, !dbg !4410
  %idxprom1980 = sext i32 %div1979 to i64, !dbg !4410
  %__fds_bits1981 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %writefds, i32 0, i32 0, !dbg !4411
  %arrayidx1982 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits1981, i64 0, i64 %idxprom1980, !dbg !4410
  %995 = load i64, i64* %arrayidx1982, align 8, !dbg !4410
  %call1983 = call i32 @fileno_stdout(), !dbg !4412
  %rem1984 = srem i32 %call1983, 64, !dbg !4410
  %sh_prom1985 = zext i32 %rem1984 to i64, !dbg !4414
  %shl1986 = shl i64 1, %sh_prom1985, !dbg !4414
  %and1987 = and i64 %995, %shl1986, !dbg !4415
  %cmp1988 = icmp ne i64 %and1987, 0, !dbg !4416
  br i1 %cmp1988, label %if.then1990, label %if.else2005, !dbg !4417

if.then1990:                                      ; preds = %land.lhs.true1977
  %996 = load i32, i32* %sbuf_off, align 4, !dbg !4418
  %idxprom1991 = sext i32 %996 to i64, !dbg !4420
  %997 = load i8*, i8** %sbuf, align 8, !dbg !4420
  %arrayidx1992 = getelementptr inbounds i8, i8* %997, i64 %idxprom1991, !dbg !4420
  %998 = load i32, i32* %sbuf_len, align 4, !dbg !4421
  %call1993 = call i32 @raw_write_stdout(i8* %arrayidx1992, i32 %998), !dbg !4422
  store i32 %call1993, i32* %i, align 4, !dbg !4423
  %999 = load i32, i32* %i, align 4, !dbg !4424
  %cmp1994 = icmp sle i32 %999, 0, !dbg !4426
  br i1 %cmp1994, label %if.then1996, label %if.end1998, !dbg !4427

if.then1996:                                      ; preds = %if.then1990
  %1000 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4428
  %call1997 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %1000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.474, i32 0, i32 0)), !dbg !4430
  store i32 0, i32* %ret, align 4, !dbg !4431
  br label %shut, !dbg !4432

if.end1998:                                       ; preds = %if.then1990
  %1001 = load i32, i32* %i, align 4, !dbg !4433
  %1002 = load i32, i32* %sbuf_len, align 4, !dbg !4434
  %sub1999 = sub nsw i32 %1002, %1001, !dbg !4434
  store i32 %sub1999, i32* %sbuf_len, align 4, !dbg !4434
  %1003 = load i32, i32* %i, align 4, !dbg !4435
  %1004 = load i32, i32* %sbuf_off, align 4, !dbg !4436
  %add2000 = add nsw i32 %1004, %1003, !dbg !4436
  store i32 %add2000, i32* %sbuf_off, align 4, !dbg !4436
  %1005 = load i32, i32* %sbuf_len, align 4, !dbg !4437
  %cmp2001 = icmp sle i32 %1005, 0, !dbg !4439
  br i1 %cmp2001, label %if.then2003, label %if.end2004, !dbg !4440

if.then2003:                                      ; preds = %if.end1998
  store i32 1, i32* %read_ssl, align 4, !dbg !4441
  store i32 0, i32* %write_tty, align 4, !dbg !4443
  br label %if.end2004, !dbg !4444

if.end2004:                                       ; preds = %if.then2003, %if.end1998
  br label %if.end2178, !dbg !4445

if.else2005:                                      ; preds = %land.lhs.true1977, %if.else1975
  %1006 = load i32, i32* %ssl_pending, align 4, !dbg !4446
  %tobool2006 = icmp ne i32 %1006, 0, !dbg !4446
  br i1 %tobool2006, label %if.then2020, label %lor.lhs.false2007, !dbg !4449

lor.lhs.false2007:                                ; preds = %if.else2005
  %1007 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4450
  %call2008 = call i32 @SSL_get_fd(%struct.ssl_st* %1007), !dbg !4452
  %div2009 = sdiv i32 %call2008, 64, !dbg !4453
  %idxprom2010 = sext i32 %div2009 to i64, !dbg !4453
  %__fds_bits2011 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !4454
  %arrayidx2012 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits2011, i64 0, i64 %idxprom2010, !dbg !4453
  %1008 = load i64, i64* %arrayidx2012, align 8, !dbg !4453
  %1009 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4450
  %call2013 = call i32 @SSL_get_fd(%struct.ssl_st* %1009), !dbg !4455
  %rem2014 = srem i32 %call2013, 64, !dbg !4453
  %sh_prom2015 = zext i32 %rem2014 to i64, !dbg !4457
  %shl2016 = shl i64 1, %sh_prom2015, !dbg !4457
  %and2017 = and i64 %1008, %shl2016, !dbg !4458
  %cmp2018 = icmp ne i64 %and2017, 0, !dbg !4459
  br i1 %cmp2018, label %if.then2020, label %if.else2062, !dbg !4460

if.then2020:                                      ; preds = %lor.lhs.false2007, %if.else2005
  %1010 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4461
  %1011 = load i8*, i8** %sbuf, align 8, !dbg !4463
  %call2021 = call i32 @SSL_read(%struct.ssl_st* %1010, i8* %1011, i32 1024), !dbg !4464
  store i32 %call2021, i32* %k, align 4, !dbg !4465
  %1012 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4466
  %1013 = load i32, i32* %k, align 4, !dbg !4467
  %call2022 = call i32 @SSL_get_error(%struct.ssl_st* %1012, i32 %1013), !dbg !4468
  switch i32 %call2022, label %sw.epilog2061 [
    i32 0, label %sw.bb2023
    i32 9, label %sw.bb2028
    i32 3, label %sw.bb2037
    i32 2, label %sw.bb2039
    i32 4, label %sw.bb2048
    i32 5, label %sw.bb2050
    i32 6, label %sw.bb2058
    i32 10, label %sw.bb2060
    i32 1, label %sw.bb2060
  ], !dbg !4469

sw.bb2023:                                        ; preds = %if.then2020
  %1014 = load i32, i32* %k, align 4, !dbg !4470
  %cmp2024 = icmp sle i32 %1014, 0, !dbg !4473
  br i1 %cmp2024, label %if.then2026, label %if.end2027, !dbg !4474

if.then2026:                                      ; preds = %sw.bb2023
  br label %end, !dbg !4475

if.end2027:                                       ; preds = %sw.bb2023
  store i32 0, i32* %sbuf_off, align 4, !dbg !4476
  %1015 = load i32, i32* %k, align 4, !dbg !4477
  store i32 %1015, i32* %sbuf_len, align 4, !dbg !4478
  store i32 0, i32* %read_ssl, align 4, !dbg !4479
  store i32 1, i32* %write_tty, align 4, !dbg !4480
  br label %sw.epilog2061, !dbg !4481

sw.bb2028:                                        ; preds = %if.then2020
  %1016 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4482
  %call2029 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %1016, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.475, i32 0, i32 0)), !dbg !4483
  %1017 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4484
  call void @wait_for_async(%struct.ssl_st* %1017), !dbg !4485
  store i32 0, i32* %write_tty, align 4, !dbg !4486
  store i32 1, i32* %read_ssl, align 4, !dbg !4487
  %1018 = load i32, i32* %read_tty, align 4, !dbg !4488
  %cmp2030 = icmp eq i32 %1018, 0, !dbg !4490
  br i1 %cmp2030, label %land.lhs.true2032, label %if.end2036, !dbg !4491

land.lhs.true2032:                                ; preds = %sw.bb2028
  %1019 = load i32, i32* %write_ssl, align 4, !dbg !4492
  %cmp2033 = icmp eq i32 %1019, 0, !dbg !4494
  br i1 %cmp2033, label %if.then2035, label %if.end2036, !dbg !4495

if.then2035:                                      ; preds = %land.lhs.true2032
  store i32 1, i32* %write_ssl, align 4, !dbg !4496
  br label %if.end2036, !dbg !4497

if.end2036:                                       ; preds = %if.then2035, %land.lhs.true2032, %sw.bb2028
  br label %sw.epilog2061, !dbg !4498

sw.bb2037:                                        ; preds = %if.then2020
  %1020 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4499
  %call2038 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %1020, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.476, i32 0, i32 0)), !dbg !4500
  store i32 1, i32* %write_ssl, align 4, !dbg !4501
  store i32 0, i32* %read_tty, align 4, !dbg !4502
  br label %sw.epilog2061, !dbg !4503

sw.bb2039:                                        ; preds = %if.then2020
  %1021 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4504
  %call2040 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %1021, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.477, i32 0, i32 0)), !dbg !4505
  store i32 0, i32* %write_tty, align 4, !dbg !4506
  store i32 1, i32* %read_ssl, align 4, !dbg !4507
  %1022 = load i32, i32* %read_tty, align 4, !dbg !4508
  %cmp2041 = icmp eq i32 %1022, 0, !dbg !4510
  br i1 %cmp2041, label %land.lhs.true2043, label %if.end2047, !dbg !4511

land.lhs.true2043:                                ; preds = %sw.bb2039
  %1023 = load i32, i32* %write_ssl, align 4, !dbg !4512
  %cmp2044 = icmp eq i32 %1023, 0, !dbg !4514
  br i1 %cmp2044, label %if.then2046, label %if.end2047, !dbg !4515

if.then2046:                                      ; preds = %land.lhs.true2043
  store i32 1, i32* %write_ssl, align 4, !dbg !4516
  br label %if.end2047, !dbg !4517

if.end2047:                                       ; preds = %if.then2046, %land.lhs.true2043, %sw.bb2039
  br label %sw.epilog2061, !dbg !4518

sw.bb2048:                                        ; preds = %if.then2020
  %1024 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4519
  %call2049 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %1024, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.478, i32 0, i32 0)), !dbg !4520
  br label %sw.epilog2061, !dbg !4521

sw.bb2050:                                        ; preds = %if.then2020
  %call2051 = call i32* @__errno_location() #1, !dbg !4522
  %1025 = load i32, i32* %call2051, align 4, !dbg !4523
  store i32 %1025, i32* %ret, align 4, !dbg !4524
  %1026 = load i32, i32* %c_brief, align 4, !dbg !4525
  %tobool2052 = icmp ne i32 %1026, 0, !dbg !4525
  br i1 %tobool2052, label %if.then2053, label %if.else2055, !dbg !4527

if.then2053:                                      ; preds = %sw.bb2050
  %1027 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4528
  %call2054 = call i32 @BIO_puts(%struct.bio_st* %1027, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.479, i32 0, i32 0)), !dbg !4529
  br label %if.end2057, !dbg !4529

if.else2055:                                      ; preds = %sw.bb2050
  %1028 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4530
  %1029 = load i32, i32* %ret, align 4, !dbg !4531
  %call2056 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %1028, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.480, i32 0, i32 0), i32 %1029), !dbg !4532
  br label %if.end2057

if.end2057:                                       ; preds = %if.else2055, %if.then2053
  br label %shut, !dbg !4533

sw.bb2058:                                        ; preds = %if.then2020
  %1030 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4534
  %call2059 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %1030, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.481, i32 0, i32 0)), !dbg !4535
  store i32 0, i32* %ret, align 4, !dbg !4536
  br label %shut, !dbg !4537

sw.bb2060:                                        ; preds = %if.then2020, %if.then2020
  %1031 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4538
  call void @ERR_print_errors(%struct.bio_st* %1031), !dbg !4539
  br label %shut, !dbg !4540

sw.epilog2061:                                    ; preds = %if.then2020, %sw.bb2048, %if.end2047, %sw.bb2037, %if.end2036, %if.end2027
  br label %if.end2177, !dbg !4541

if.else2062:                                      ; preds = %lor.lhs.false2007
  %call2063 = call i32 @fileno_stdin(), !dbg !4542
  %div2064 = sdiv i32 %call2063, 64, !dbg !4544
  %idxprom2065 = sext i32 %div2064 to i64, !dbg !4544
  %__fds_bits2066 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !4545
  %arrayidx2067 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits2066, i64 0, i64 %idxprom2065, !dbg !4544
  %1032 = load i64, i64* %arrayidx2067, align 8, !dbg !4544
  %call2068 = call i32 @fileno_stdin(), !dbg !4546
  %rem2069 = srem i32 %call2068, 64, !dbg !4544
  %sh_prom2070 = zext i32 %rem2069 to i64, !dbg !4548
  %shl2071 = shl i64 1, %sh_prom2070, !dbg !4548
  %and2072 = and i64 %1032, %shl2071, !dbg !4549
  %cmp2073 = icmp ne i64 %and2072, 0, !dbg !4550
  br i1 %cmp2073, label %if.then2075, label %if.end2176, !dbg !4551

if.then2075:                                      ; preds = %if.else2062
  %1033 = load i32, i32* %crlf, align 4, !dbg !4552
  %tobool2076 = icmp ne i32 %1033, 0, !dbg !4552
  br i1 %tobool2076, label %if.then2077, label %if.else2119, !dbg !4555

if.then2077:                                      ; preds = %if.then2075
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4556, metadata !439), !dbg !4558
  call void @llvm.dbg.declare(metadata i32* %lf_num, metadata !4559, metadata !439), !dbg !4560
  %1034 = load i8*, i8** %cbuf, align 8, !dbg !4561
  %call2078 = call i32 @raw_read_stdin(i8* %1034, i32 4096), !dbg !4562
  store i32 %call2078, i32* %i, align 4, !dbg !4563
  store i32 0, i32* %lf_num, align 4, !dbg !4564
  store i32 0, i32* %j, align 4, !dbg !4565
  br label %for.cond2079, !dbg !4567

for.cond2079:                                     ; preds = %for.inc2091, %if.then2077
  %1035 = load i32, i32* %j, align 4, !dbg !4568
  %1036 = load i32, i32* %i, align 4, !dbg !4571
  %cmp2080 = icmp slt i32 %1035, %1036, !dbg !4572
  br i1 %cmp2080, label %for.body2082, label %for.end2093, !dbg !4573

for.body2082:                                     ; preds = %for.cond2079
  %1037 = load i32, i32* %j, align 4, !dbg !4574
  %idxprom2083 = sext i32 %1037 to i64, !dbg !4576
  %1038 = load i8*, i8** %cbuf, align 8, !dbg !4576
  %arrayidx2084 = getelementptr inbounds i8, i8* %1038, i64 %idxprom2083, !dbg !4576
  %1039 = load i8, i8* %arrayidx2084, align 1, !dbg !4576
  %conv2085 = sext i8 %1039 to i32, !dbg !4576
  %cmp2086 = icmp eq i32 %conv2085, 10, !dbg !4577
  br i1 %cmp2086, label %if.then2088, label %if.end2090, !dbg !4578

if.then2088:                                      ; preds = %for.body2082
  %1040 = load i32, i32* %lf_num, align 4, !dbg !4579
  %inc2089 = add nsw i32 %1040, 1, !dbg !4579
  store i32 %inc2089, i32* %lf_num, align 4, !dbg !4579
  br label %if.end2090, !dbg !4580

if.end2090:                                       ; preds = %if.then2088, %for.body2082
  br label %for.inc2091, !dbg !4581

for.inc2091:                                      ; preds = %if.end2090
  %1041 = load i32, i32* %j, align 4, !dbg !4583
  %inc2092 = add nsw i32 %1041, 1, !dbg !4583
  store i32 %inc2092, i32* %j, align 4, !dbg !4583
  br label %for.cond2079, !dbg !4585, !llvm.loop !4586

for.end2093:                                      ; preds = %for.cond2079
  %1042 = load i32, i32* %i, align 4, !dbg !4588
  %sub2094 = sub nsw i32 %1042, 1, !dbg !4590
  store i32 %sub2094, i32* %j, align 4, !dbg !4591
  br label %for.cond2095, !dbg !4592

for.cond2095:                                     ; preds = %for.inc2116, %for.end2093
  %1043 = load i32, i32* %j, align 4, !dbg !4593
  %cmp2096 = icmp sge i32 %1043, 0, !dbg !4596
  br i1 %cmp2096, label %for.body2098, label %for.end2118, !dbg !4597

for.body2098:                                     ; preds = %for.cond2095
  %1044 = load i32, i32* %j, align 4, !dbg !4598
  %idxprom2099 = sext i32 %1044 to i64, !dbg !4600
  %1045 = load i8*, i8** %cbuf, align 8, !dbg !4600
  %arrayidx2100 = getelementptr inbounds i8, i8* %1045, i64 %idxprom2099, !dbg !4600
  %1046 = load i8, i8* %arrayidx2100, align 1, !dbg !4600
  %1047 = load i32, i32* %j, align 4, !dbg !4601
  %1048 = load i32, i32* %lf_num, align 4, !dbg !4602
  %add2101 = add nsw i32 %1047, %1048, !dbg !4603
  %idxprom2102 = sext i32 %add2101 to i64, !dbg !4604
  %1049 = load i8*, i8** %cbuf, align 8, !dbg !4604
  %arrayidx2103 = getelementptr inbounds i8, i8* %1049, i64 %idxprom2102, !dbg !4604
  store i8 %1046, i8* %arrayidx2103, align 1, !dbg !4605
  %1050 = load i32, i32* %j, align 4, !dbg !4606
  %idxprom2104 = sext i32 %1050 to i64, !dbg !4608
  %1051 = load i8*, i8** %cbuf, align 8, !dbg !4608
  %arrayidx2105 = getelementptr inbounds i8, i8* %1051, i64 %idxprom2104, !dbg !4608
  %1052 = load i8, i8* %arrayidx2105, align 1, !dbg !4608
  %conv2106 = sext i8 %1052 to i32, !dbg !4608
  %cmp2107 = icmp eq i32 %conv2106, 10, !dbg !4609
  br i1 %cmp2107, label %if.then2109, label %if.end2115, !dbg !4610

if.then2109:                                      ; preds = %for.body2098
  %1053 = load i32, i32* %lf_num, align 4, !dbg !4611
  %dec2110 = add nsw i32 %1053, -1, !dbg !4611
  store i32 %dec2110, i32* %lf_num, align 4, !dbg !4611
  %1054 = load i32, i32* %i, align 4, !dbg !4613
  %inc2111 = add nsw i32 %1054, 1, !dbg !4613
  store i32 %inc2111, i32* %i, align 4, !dbg !4613
  %1055 = load i32, i32* %j, align 4, !dbg !4614
  %1056 = load i32, i32* %lf_num, align 4, !dbg !4615
  %add2112 = add nsw i32 %1055, %1056, !dbg !4616
  %idxprom2113 = sext i32 %add2112 to i64, !dbg !4617
  %1057 = load i8*, i8** %cbuf, align 8, !dbg !4617
  %arrayidx2114 = getelementptr inbounds i8, i8* %1057, i64 %idxprom2113, !dbg !4617
  store i8 13, i8* %arrayidx2114, align 1, !dbg !4618
  br label %if.end2115, !dbg !4619

if.end2115:                                       ; preds = %if.then2109, %for.body2098
  br label %for.inc2116, !dbg !4620

for.inc2116:                                      ; preds = %if.end2115
  %1058 = load i32, i32* %j, align 4, !dbg !4621
  %dec2117 = add nsw i32 %1058, -1, !dbg !4621
  store i32 %dec2117, i32* %j, align 4, !dbg !4621
  br label %for.cond2095, !dbg !4623, !llvm.loop !4624

for.end2118:                                      ; preds = %for.cond2095
  br label %if.end2121, !dbg !4626

if.else2119:                                      ; preds = %if.then2075
  %1059 = load i8*, i8** %cbuf, align 8, !dbg !4627
  %call2120 = call i32 @raw_read_stdin(i8* %1059, i32 8192), !dbg !4628
  store i32 %call2120, i32* %i, align 4, !dbg !4629
  br label %if.end2121

if.end2121:                                       ; preds = %if.else2119, %for.end2118
  %1060 = load i32, i32* %i, align 4, !dbg !4630
  %cmp2122 = icmp eq i32 %1060, 0, !dbg !4632
  br i1 %cmp2122, label %if.then2124, label %if.end2125, !dbg !4633

if.then2124:                                      ; preds = %if.end2121
  store i32 1, i32* %at_eof, align 4, !dbg !4634
  br label %if.end2125, !dbg !4635

if.end2125:                                       ; preds = %if.then2124, %if.end2121
  %1061 = load i32, i32* %c_ign_eof, align 4, !dbg !4636
  %tobool2126 = icmp ne i32 %1061, 0, !dbg !4636
  br i1 %tobool2126, label %if.end2139, label %land.lhs.true2127, !dbg !4638

land.lhs.true2127:                                ; preds = %if.end2125
  %1062 = load i32, i32* %i, align 4, !dbg !4639
  %cmp2128 = icmp sle i32 %1062, 0, !dbg !4641
  br i1 %cmp2128, label %if.then2137, label %lor.lhs.false2130, !dbg !4642

lor.lhs.false2130:                                ; preds = %land.lhs.true2127
  %1063 = load i8*, i8** %cbuf, align 8, !dbg !4643
  %arrayidx2131 = getelementptr inbounds i8, i8* %1063, i64 0, !dbg !4643
  %1064 = load i8, i8* %arrayidx2131, align 1, !dbg !4643
  %conv2132 = sext i8 %1064 to i32, !dbg !4643
  %cmp2133 = icmp eq i32 %conv2132, 81, !dbg !4645
  br i1 %cmp2133, label %land.lhs.true2135, label %if.end2139, !dbg !4646

land.lhs.true2135:                                ; preds = %lor.lhs.false2130
  %1065 = load i32, i32* %cmdletters, align 4, !dbg !4647
  %tobool2136 = icmp ne i32 %1065, 0, !dbg !4647
  br i1 %tobool2136, label %if.then2137, label %if.end2139, !dbg !4649

if.then2137:                                      ; preds = %land.lhs.true2135, %land.lhs.true2127
  %1066 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4650
  %call2138 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %1066, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.474, i32 0, i32 0)), !dbg !4652
  store i32 0, i32* %ret, align 4, !dbg !4653
  br label %shut, !dbg !4654

if.end2139:                                       ; preds = %land.lhs.true2135, %lor.lhs.false2130, %if.end2125
  %1067 = load i32, i32* %c_ign_eof, align 4, !dbg !4655
  %tobool2140 = icmp ne i32 %1067, 0, !dbg !4655
  br i1 %tobool2140, label %if.else2151, label %land.lhs.true2141, !dbg !4657

land.lhs.true2141:                                ; preds = %if.end2139
  %1068 = load i8*, i8** %cbuf, align 8, !dbg !4658
  %arrayidx2142 = getelementptr inbounds i8, i8* %1068, i64 0, !dbg !4658
  %1069 = load i8, i8* %arrayidx2142, align 1, !dbg !4658
  %conv2143 = sext i8 %1069 to i32, !dbg !4658
  %cmp2144 = icmp eq i32 %conv2143, 82, !dbg !4660
  br i1 %cmp2144, label %land.lhs.true2146, label %if.else2151, !dbg !4661

land.lhs.true2146:                                ; preds = %land.lhs.true2141
  %1070 = load i32, i32* %cmdletters, align 4, !dbg !4662
  %tobool2147 = icmp ne i32 %1070, 0, !dbg !4662
  br i1 %tobool2147, label %if.then2148, label %if.else2151, !dbg !4664

if.then2148:                                      ; preds = %land.lhs.true2146
  %1071 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4665
  %call2149 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %1071, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.482, i32 0, i32 0)), !dbg !4667
  %1072 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4668
  %call2150 = call i32 @SSL_renegotiate(%struct.ssl_st* %1072), !dbg !4669
  store i32 0, i32* %cbuf_len, align 4, !dbg !4670
  br label %if.end2175, !dbg !4671

if.else2151:                                      ; preds = %land.lhs.true2146, %land.lhs.true2141, %if.end2139
  %1073 = load i32, i32* %c_ign_eof, align 4, !dbg !4672
  %tobool2152 = icmp ne i32 %1073, 0, !dbg !4672
  br i1 %tobool2152, label %if.else2173, label %land.lhs.true2153, !dbg !4675

land.lhs.true2153:                                ; preds = %if.else2151
  %1074 = load i8*, i8** %cbuf, align 8, !dbg !4676
  %arrayidx2154 = getelementptr inbounds i8, i8* %1074, i64 0, !dbg !4676
  %1075 = load i8, i8* %arrayidx2154, align 1, !dbg !4676
  %conv2155 = sext i8 %1075 to i32, !dbg !4676
  %cmp2156 = icmp eq i32 %conv2155, 75, !dbg !4678
  br i1 %cmp2156, label %land.lhs.true2163, label %lor.lhs.false2158, !dbg !4679

lor.lhs.false2158:                                ; preds = %land.lhs.true2153
  %1076 = load i8*, i8** %cbuf, align 8, !dbg !4680
  %arrayidx2159 = getelementptr inbounds i8, i8* %1076, i64 0, !dbg !4680
  %1077 = load i8, i8* %arrayidx2159, align 1, !dbg !4680
  %conv2160 = sext i8 %1077 to i32, !dbg !4680
  %cmp2161 = icmp eq i32 %conv2160, 107, !dbg !4682
  br i1 %cmp2161, label %land.lhs.true2163, label %if.else2173, !dbg !4683

land.lhs.true2163:                                ; preds = %lor.lhs.false2158, %land.lhs.true2153
  %1078 = load i32, i32* %cmdletters, align 4, !dbg !4684
  %tobool2164 = icmp ne i32 %1078, 0, !dbg !4684
  br i1 %tobool2164, label %if.then2165, label %if.else2173, !dbg !4685

if.then2165:                                      ; preds = %land.lhs.true2163
  %1079 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4687
  %call2166 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %1079, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.483, i32 0, i32 0)), !dbg !4689
  %1080 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4690
  %1081 = load i8*, i8** %cbuf, align 8, !dbg !4691
  %arrayidx2167 = getelementptr inbounds i8, i8* %1081, i64 0, !dbg !4691
  %1082 = load i8, i8* %arrayidx2167, align 1, !dbg !4691
  %conv2168 = sext i8 %1082 to i32, !dbg !4691
  %cmp2169 = icmp eq i32 %conv2168, 75, !dbg !4692
  %cond2171 = select i1 %cmp2169, i32 1, i32 0, !dbg !4691
  %call2172 = call i32 @SSL_key_update(%struct.ssl_st* %1080, i32 %cond2171), !dbg !4693
  store i32 0, i32* %cbuf_len, align 4, !dbg !4694
  br label %if.end2174, !dbg !4695

if.else2173:                                      ; preds = %land.lhs.true2163, %lor.lhs.false2158, %if.else2151
  %1083 = load i32, i32* %i, align 4, !dbg !4696
  store i32 %1083, i32* %cbuf_len, align 4, !dbg !4698
  store i32 0, i32* %cbuf_off, align 4, !dbg !4699
  br label %if.end2174

if.end2174:                                       ; preds = %if.else2173, %if.then2165
  br label %if.end2175

if.end2175:                                       ; preds = %if.end2174, %if.then2148
  store i32 1, i32* %write_ssl, align 4, !dbg !4700
  store i32 0, i32* %read_tty, align 4, !dbg !4701
  br label %if.end2176, !dbg !4702

if.end2176:                                       ; preds = %if.end2175, %if.else2062
  br label %if.end2177

if.end2177:                                       ; preds = %if.end2176, %sw.epilog2061
  br label %if.end2178

if.end2178:                                       ; preds = %if.end2177, %if.end2004
  br label %if.end2179

if.end2179:                                       ; preds = %if.end2178, %sw.epilog1974
  br label %for.cond1772, !dbg !4703, !llvm.loop !4705

shut:                                             ; preds = %if.then2137, %sw.bb2060, %sw.bb2058, %if.end2057, %if.then1996, %sw.bb1973, %if.then1968, %if.then1959, %if.then1904, %sw.default1765, %if.then1747, %if.then1720, %if.then1715, %if.then1662, %if.then1655, %if.then1601, %if.then1547, %if.then1528, %if.then1514, %if.then1504, %if.then1488, %if.then1479, %if.then1472, %if.then1456, %if.then1451, %if.then1443, %if.then1361, %if.then1321, %if.then1278, %if.then1265, %if.then1254, %if.then1247, %if.then1238, %if.then1038, %if.then1030
  %1084 = load i32, i32* %in_init, align 4, !dbg !4706
  %tobool2180 = icmp ne i32 %1084, 0, !dbg !4706
  br i1 %tobool2180, label %if.then2181, label %if.end2182, !dbg !4708

if.then2181:                                      ; preds = %shut
  %1085 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4709
  %1086 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4710
  %1087 = load i32, i32* %full_log, align 4, !dbg !4711
  call void @print_stuff(%struct.bio_st* %1085, %struct.ssl_st* %1086, i32 %1087), !dbg !4712
  br label %if.end2182, !dbg !4712

if.end2182:                                       ; preds = %if.then2181, %shut
  %1088 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4713
  call void @do_ssl_shutdown(%struct.ssl_st* %1088), !dbg !4714
  %1089 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4715
  %call2183 = call i32 @SSL_get_fd(%struct.ssl_st* %1089), !dbg !4716
  %call2184 = call i32 @shutdown(i32 %call2183, i32 1) #8, !dbg !4717
  %tv_sec2185 = getelementptr inbounds %struct.timeval, %struct.timeval* %timeout, i32 0, i32 0, !dbg !4718
  store i64 0, i64* %tv_sec2185, align 8, !dbg !4719
  %tv_usec2186 = getelementptr inbounds %struct.timeval, %struct.timeval* %timeout, i32 0, i32 1, !dbg !4720
  store i64 500000, i64* %tv_usec2186, align 8, !dbg !4721
  br label %do.body2187, !dbg !4722, !llvm.loop !4723

do.body2187:                                      ; preds = %land.end2214, %if.end2182
  br label %do.body2188, !dbg !4724, !llvm.loop !4726

do.body2188:                                      ; preds = %do.body2187
  call void @llvm.dbg.declare(metadata i32* %__d02189, metadata !4727, metadata !439), !dbg !4729
  call void @llvm.dbg.declare(metadata i32* %__d12190, metadata !4730, metadata !439), !dbg !4731
  %__fds_bits2191 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !4732
  %arrayidx2192 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits2191, i64 0, i64 0, !dbg !4734
  %1090 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %arrayidx2192) #8, !dbg !4735, !srcloc !4736
  %asmresult2193 = extractvalue { i64, i64* } %1090, 0, !dbg !4735
  %asmresult2194 = extractvalue { i64, i64* } %1090, 1, !dbg !4735
  %1091 = trunc i64 %asmresult2193 to i32, !dbg !4735
  store i32 %1091, i32* %__d02189, align 4, !dbg !4735
  %1092 = ptrtoint i64* %asmresult2194 to i64, !dbg !4735
  %1093 = trunc i64 %1092 to i32, !dbg !4735
  store i32 %1093, i32* %__d12190, align 4, !dbg !4735
  br label %do.end2196, !dbg !4737

do.end2196:                                       ; preds = %do.body2188
  %1094 = load i32, i32* %s, align 4, !dbg !4738
  %rem2197 = srem i32 %1094, 64, !dbg !4739
  %sh_prom2198 = zext i32 %rem2197 to i64, !dbg !4740
  %shl2199 = shl i64 1, %sh_prom2198, !dbg !4740
  %1095 = load i32, i32* %s, align 4, !dbg !4738
  %div2200 = sdiv i32 %1095, 64, !dbg !4739
  %idxprom2201 = sext i32 %div2200 to i64, !dbg !4741
  %__fds_bits2202 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !4742
  %arrayidx2203 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits2202, i64 0, i64 %idxprom2201, !dbg !4741
  %1096 = load i64, i64* %arrayidx2203, align 8, !dbg !4743
  %or2204 = or i64 %1096, %shl2199, !dbg !4743
  store i64 %or2204, i64* %arrayidx2203, align 8, !dbg !4743
  br label %do.cond2205, !dbg !4744

do.cond2205:                                      ; preds = %do.end2196
  %1097 = load i32, i32* %s, align 4, !dbg !4745
  %add2206 = add nsw i32 %1097, 1, !dbg !4746
  %call2207 = call i32 @select(i32 %add2206, %struct.fd_set* %readfds, %struct.fd_set* null, %struct.fd_set* null, %struct.timeval* %timeout), !dbg !4747
  %cmp2208 = icmp sgt i32 %call2207, 0, !dbg !4748
  br i1 %cmp2208, label %land.rhs2210, label %land.end2214, !dbg !4749

land.rhs2210:                                     ; preds = %do.cond2205
  %1098 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !4750
  %1099 = load i8*, i8** %sbuf, align 8, !dbg !4751
  %call2211 = call i32 @BIO_read(%struct.bio_st* %1098, i8* %1099, i32 8192), !dbg !4752
  %cmp2212 = icmp sgt i32 %call2211, 0, !dbg !4753
  br label %land.end2214

land.end2214:                                     ; preds = %land.rhs2210, %do.cond2205
  %1100 = phi i1 [ false, %do.cond2205 ], [ %cmp2212, %land.rhs2210 ]
  br i1 %1100, label %do.body2187, label %do.end2216, !dbg !4754, !llvm.loop !4723

do.end2216:                                       ; preds = %land.end2214
  %1101 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4756
  %call2217 = call i32 @SSL_get_fd(%struct.ssl_st* %1101), !dbg !4757
  %call2218 = call i32 @BIO_closesocket(i32 %call2217), !dbg !4758
  br label %end, !dbg !4759

end:                                              ; preds = %do.end2216, %if.then2026, %if.then1941, %if.then1708, %if.then1697, %if.then1691, %if.else1684, %if.then1682, %if.then1671, %if.then1648, %if.then1593, %if.then1222, %if.then1147, %if.then1007, %if.then1001, %if.then991, %if.then981, %if.then974, %if.then964, %if.then958, %if.then953, %if.then943, %if.then919, %if.then914, %if.then907, %if.then895, %if.then890, %if.then883, %if.then859, %if.then844, %if.then839, %if.then834, %if.then828, %if.then799, %if.then792, %if.then775, %if.then758, %if.then751, %if.then731, %if.then723, %if.then711, %if.then705, %if.then691, %if.then682, %if.then673, %if.then660, %if.then654, %if.then645, %if.then634, %if.then626, %if.then618, %if.then612, %if.then584, %if.then578, %if.then569, %if.then560, %if.then552, %if.then543, %if.then530, %if.then522, %if.then517, %if.then510, %if.then502, %if.then493, %if.then483, %if.then462, %if.then364, %if.then322, %if.end219, %if.then191, %if.then170, %if.then163, %if.then156, %if.then117, %sw.bb81, %opthelp, %if.then77, %if.then60, %if.then40, %if.then34, %if.then
  %1102 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4760
  %cmp2219 = icmp ne %struct.ssl_st* %1102, null, !dbg !4762
  br i1 %cmp2219, label %if.then2221, label %if.end2226, !dbg !4763

if.then2221:                                      ; preds = %end
  %1103 = load i32, i32* %prexit, align 4, !dbg !4764
  %cmp2222 = icmp ne i32 %1103, 0, !dbg !4767
  br i1 %cmp2222, label %if.then2224, label %if.end2225, !dbg !4768

if.then2224:                                      ; preds = %if.then2221
  %1104 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4769
  %1105 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4770
  call void @print_stuff(%struct.bio_st* %1104, %struct.ssl_st* %1105, i32 1), !dbg !4771
  br label %if.end2225, !dbg !4771

if.end2225:                                       ; preds = %if.then2224, %if.then2221
  %1106 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4772
  call void @SSL_free(%struct.ssl_st* %1106), !dbg !4773
  br label %if.end2226, !dbg !4774

if.end2226:                                       ; preds = %if.end2225, %end
  %1107 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !4775
  call void @SSL_SESSION_free(%struct.ssl_session_st* %1107), !dbg !4776
  %1108 = load i8*, i8** getelementptr inbounds (%struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* @next_proto, i32 0, i32 0), align 8, !dbg !4777
  call void @CRYPTO_free(i8* %1108, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 3169), !dbg !4778
  %1109 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !4779
  call void @SSL_CTX_free(%struct.ssl_ctx_st* %1109), !dbg !4780
  %call2227 = call i32 @set_keylog_file(%struct.ssl_ctx_st* null, i8* null), !dbg !4781
  %1110 = load %struct.x509_st*, %struct.x509_st** %cert, align 8, !dbg !4782
  call void @X509_free(%struct.x509_st* %1110), !dbg !4783
  %1111 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !4784
  call void @sk_X509_CRL_pop_free(%struct.stack_st_X509_CRL* %1111, void (%struct.X509_crl_st*)* @X509_CRL_free), !dbg !4785
  %1112 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %key, align 8, !dbg !4786
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %1112), !dbg !4787
  %1113 = load %struct.stack_st_X509*, %struct.stack_st_X509** %chain, align 8, !dbg !4788
  call void @sk_X509_pop_free(%struct.stack_st_X509* %1113, void (%struct.x509_st*)* @X509_free), !dbg !4789
  %1114 = load i8*, i8** %pass, align 8, !dbg !4790
  call void @CRYPTO_free(i8* %1114, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 3177), !dbg !4791
  %srppassin2228 = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %srp_arg, i32 0, i32 0, !dbg !4792
  %1115 = load i8*, i8** %srppassin2228, align 8, !dbg !4792
  call void @CRYPTO_free(i8* %1115, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 3179), !dbg !4793
  %1116 = load i8*, i8** %connectstr, align 8, !dbg !4794
  call void @CRYPTO_free(i8* %1116, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 3181), !dbg !4795
  %1117 = load i8*, i8** %bindstr, align 8, !dbg !4796
  call void @CRYPTO_free(i8* %1117, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 3182), !dbg !4797
  %1118 = load i8*, i8** %host, align 8, !dbg !4798
  call void @CRYPTO_free(i8* %1118, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 3183), !dbg !4799
  %1119 = load i8*, i8** %port, align 8, !dbg !4800
  call void @CRYPTO_free(i8* %1119, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 3184), !dbg !4801
  %1120 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %vpm, align 8, !dbg !4802
  call void @X509_VERIFY_PARAM_free(%struct.X509_VERIFY_PARAM_st* %1120), !dbg !4803
  %1121 = load %struct.ssl_excert_st*, %struct.ssl_excert_st** %exc, align 8, !dbg !4804
  call void @ssl_excert_free(%struct.ssl_excert_st* %1121), !dbg !4805
  %1122 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !4806
  call void @sk_OPENSSL_STRING_free(%struct.stack_st_OPENSSL_STRING* %1122), !dbg !4807
  %1123 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %dane_tlsa_rrset, align 8, !dbg !4808
  call void @sk_OPENSSL_STRING_free(%struct.stack_st_OPENSSL_STRING* %1123), !dbg !4809
  %1124 = load %struct.ssl_conf_ctx_st*, %struct.ssl_conf_ctx_st** %cctx, align 8, !dbg !4810
  call void @SSL_CONF_CTX_free(%struct.ssl_conf_ctx_st* %1124), !dbg !4811
  %1125 = load i8*, i8** %cbuf, align 8, !dbg !4812
  call void @CRYPTO_clear_free(i8* %1125, i64 8192, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 3190), !dbg !4813
  %1126 = load i8*, i8** %sbuf, align 8, !dbg !4814
  call void @CRYPTO_clear_free(i8* %1126, i64 8192, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 3191), !dbg !4815
  %1127 = load i8*, i8** %mbuf, align 8, !dbg !4816
  call void @CRYPTO_clear_free(i8* %1127, i64 8192, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 3192), !dbg !4817
  %1128 = load i8*, i8** %proxypass, align 8, !dbg !4818
  %cmp2229 = icmp ne i8* %1128, null, !dbg !4820
  br i1 %cmp2229, label %if.then2231, label %if.end2233, !dbg !4821

if.then2231:                                      ; preds = %if.end2226
  %1129 = load i8*, i8** %proxypass, align 8, !dbg !4822
  %1130 = load i8*, i8** %proxypass, align 8, !dbg !4823
  %call2232 = call i64 @strlen(i8* %1130) #9, !dbg !4824
  call void @CRYPTO_clear_free(i8* %1129, i64 %call2232, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 3194), !dbg !4825
  br label %if.end2233, !dbg !4827

if.end2233:                                       ; preds = %if.then2231, %if.end2226
  %1131 = load %struct.engine_st*, %struct.engine_st** %e, align 8, !dbg !4828
  call void @release_engine(%struct.engine_st* %1131), !dbg !4829
  %1132 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4830
  %call2234 = call i32 @BIO_free(%struct.bio_st* %1132), !dbg !4831
  store %struct.bio_st* null, %struct.bio_st** @bio_c_out, align 8, !dbg !4832
  %1133 = load %struct.bio_st*, %struct.bio_st** %bio_c_msg, align 8, !dbg !4833
  %call2235 = call i32 @BIO_free(%struct.bio_st* %1133), !dbg !4834
  store %struct.bio_st* null, %struct.bio_st** %bio_c_msg, align 8, !dbg !4835
  %1134 = load i32, i32* %ret, align 4, !dbg !4836
  ret i32 %1134, !dbg !4837
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare %struct.ssl_method_st* @TLS_client_method() #2

declare i8* @CRYPTO_strdup(i8*, i8*, i32) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #3

declare i8* @opt_progname(i8*) #2

declare %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_new() #2

declare %struct.ssl_conf_ctx_st* @SSL_CONF_CTX_new() #2

declare i32 @BIO_printf(%struct.bio_st*, i8*, ...) #2

declare i8* @app_malloc(i32, i8*) #2

declare i32 @SSL_CONF_CTX_set_flags(%struct.ssl_conf_ctx_st*, i32) #2

declare i8* @opt_init(i32, i8**, %struct.options_st*) #2

declare i32 @opt_next() #2

declare void @opt_help(%struct.options_st*) #2

; Function Attrs: nounwind uwtable
define internal void @freeandcopy(i8** %dest, i8* %source) #0 !dbg !4838 {
entry:
  %dest.addr = alloca i8**, align 8
  %source.addr = alloca i8*, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !4841, metadata !439), !dbg !4842
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !4843, metadata !439), !dbg !4844
  %0 = load i8**, i8*** %dest.addr, align 8, !dbg !4845
  %1 = load i8*, i8** %0, align 8, !dbg !4846
  call void @CRYPTO_free(i8* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 847), !dbg !4847
  %2 = load i8**, i8*** %dest.addr, align 8, !dbg !4848
  store i8* null, i8** %2, align 8, !dbg !4849
  %3 = load i8*, i8** %source.addr, align 8, !dbg !4850
  %cmp = icmp ne i8* %3, null, !dbg !4852
  br i1 %cmp, label %if.then, label %if.end, !dbg !4853

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %source.addr, align 8, !dbg !4854
  %call = call i8* @CRYPTO_strdup(i8* %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 850), !dbg !4855
  %5 = load i8**, i8*** %dest.addr, align 8, !dbg !4856
  store i8* %call, i8** %5, align 8, !dbg !4857
  br label %if.end, !dbg !4858

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4859
}

declare i8* @opt_arg() #2

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #4

declare i32 @set_nameopt(i8*) #2

declare i32 @opt_format(i8*, i64, i32*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.stack_st_OPENSSL_STRING* @sk_OPENSSL_STRING_new_null() #5 !dbg !4860 {
entry:
  %call = call %struct.stack_st* @OPENSSL_sk_new_null(), !dbg !4863
  %0 = bitcast %struct.stack_st* %call to %struct.stack_st_OPENSSL_STRING*, !dbg !4864
  ret %struct.stack_st_OPENSSL_STRING* %0, !dbg !4865
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @sk_OPENSSL_STRING_push(%struct.stack_st_OPENSSL_STRING* %sk, i8* %ptr) #5 !dbg !4866 {
entry:
  %sk.addr = alloca %struct.stack_st_OPENSSL_STRING*, align 8
  %ptr.addr = alloca i8*, align 8
  store %struct.stack_st_OPENSSL_STRING* %sk, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_OPENSSL_STRING** %sk.addr, metadata !4869, metadata !439), !dbg !4870
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4871, metadata !439), !dbg !4872
  %0 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8, !dbg !4873
  %1 = bitcast %struct.stack_st_OPENSSL_STRING* %0 to %struct.stack_st*, !dbg !4874
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !4875
  %call = call i32 @OPENSSL_sk_push(%struct.stack_st* %1, i8* %2), !dbg !4876
  ret i32 %call, !dbg !4877
}

declare i8* @opt_flag() #2

declare i32 @opt_verify(i32, %struct.X509_VERIFY_PARAM_st*) #2

declare i32 @args_excert(i32, %struct.ssl_excert_st**) #2

declare %struct.engine_st* @setup_engine(i8*, i32) #2

declare %struct.engine_st* @ENGINE_by_id(i8*) #2

declare i32 @opt_rand(i32) #2

declare %struct.bio_st* @BIO_new_file(i8*, i8*) #2

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #6

declare %struct.ssl_method_st* @DTLS_client_method() #2

; Function Attrs: nounwind readonly
declare i64 @atol(i8*) #4

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

declare i32 @opt_pair(i8*, %struct.string_int_pair_st*, i32*) #2

declare i32 @opt_num_rest() #2

declare i8** @opt_rest() #2

declare i32 @BIO_parse_hostserv(i8*, i8**, i8**, i32) #2

declare void @CRYPTO_free(i8*, i8*, i32) #2

declare i8* @next_protos_parse(i64*, i8*) #2

declare i32 @app_passwd(i8*, i8*, i8**, i8**) #2

declare %struct.evp_pkey_st* @load_key(i8*, i32, i32, i8*, %struct.engine_st*, i8*) #2

declare void @ERR_print_errors(%struct.bio_st*) #2

declare %struct.x509_st* @load_cert(i8*, i32, i8*) #2

declare i32 @load_certs(i8*, %struct.stack_st_X509**, i32, i8*, i8*) #2

declare %struct.X509_crl_st* @load_crl(i8*, i32) #2

declare i32 @BIO_puts(%struct.bio_st*, i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.stack_st_X509_CRL* @sk_X509_CRL_new_null() #5 !dbg !4878 {
entry:
  %call = call %struct.stack_st* @OPENSSL_sk_new_null(), !dbg !4881
  %0 = bitcast %struct.stack_st* %call to %struct.stack_st_X509_CRL*, !dbg !4882
  ret %struct.stack_st_X509_CRL* %0, !dbg !4883
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @sk_X509_CRL_push(%struct.stack_st_X509_CRL* %sk, %struct.X509_crl_st* %ptr) #5 !dbg !4884 {
entry:
  %sk.addr = alloca %struct.stack_st_X509_CRL*, align 8
  %ptr.addr = alloca %struct.X509_crl_st*, align 8
  store %struct.stack_st_X509_CRL* %sk, %struct.stack_st_X509_CRL** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509_CRL** %sk.addr, metadata !4887, metadata !439), !dbg !4888
  store %struct.X509_crl_st* %ptr, %struct.X509_crl_st** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.X509_crl_st** %ptr.addr, metadata !4889, metadata !439), !dbg !4890
  %0 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %sk.addr, align 8, !dbg !4891
  %1 = bitcast %struct.stack_st_X509_CRL* %0 to %struct.stack_st*, !dbg !4892
  %2 = load %struct.X509_crl_st*, %struct.X509_crl_st** %ptr.addr, align 8, !dbg !4893
  %3 = bitcast %struct.X509_crl_st* %2 to i8*, !dbg !4894
  %call = call i32 @OPENSSL_sk_push(%struct.stack_st* %1, i8* %3), !dbg !4895
  ret i32 %call, !dbg !4896
}

declare void @X509_CRL_free(%struct.X509_crl_st*) #2

declare i32 @load_excert(%struct.ssl_excert_st**) #2

declare %struct.bio_st* @BIO_new(%struct.bio_method_st*) #2

declare %struct.bio_method_st* @BIO_s_null() #2

declare %struct.bio_st* @dup_bio_out(i32) #2

declare %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st*) #2

declare i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st*, i32, i64, i8*) #2

declare void @ssl_ctx_security_debug(%struct.ssl_ctx_st*, i32) #2

declare i32 @config_ctx(%struct.ssl_conf_ctx_st*, %struct.stack_st_OPENSSL_STRING*, %struct.ssl_ctx_st*) #2

declare i32 @SSL_CTX_config(%struct.ssl_ctx_st*, i8*) #2

declare i32 @SSL_CTX_set1_param(%struct.ssl_ctx_st*, %struct.X509_VERIFY_PARAM_st*) #2

declare void @SSL_CTX_set_default_read_buffer_len(%struct.ssl_ctx_st*, i64) #2

declare i32 @SSL_CTX_set_tlsext_max_fragment_length(%struct.ssl_ctx_st*, i8 zeroext) #2

declare i32 @ssl_load_stores(%struct.ssl_ctx_st*, i8*, i8*, i8*, i8*, %struct.stack_st_X509_CRL*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.stack_st_X509_NAME* @sk_X509_NAME_new_null() #5 !dbg !4897 {
entry:
  %call = call %struct.stack_st* @OPENSSL_sk_new_null(), !dbg !4900
  %0 = bitcast %struct.stack_st* %call to %struct.stack_st_X509_NAME*, !dbg !4901
  ret %struct.stack_st_X509_NAME* %0, !dbg !4902
}

declare i32 @SSL_add_file_cert_subjects_to_stack(%struct.stack_st_X509_NAME*, i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @sk_X509_NAME_pop_free(%struct.stack_st_X509_NAME* %sk, void (%struct.X509_name_st*)* %freefunc) #5 !dbg !4903 {
entry:
  %sk.addr = alloca %struct.stack_st_X509_NAME*, align 8
  %freefunc.addr = alloca void (%struct.X509_name_st*)*, align 8
  store %struct.stack_st_X509_NAME* %sk, %struct.stack_st_X509_NAME** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509_NAME** %sk.addr, metadata !4913, metadata !439), !dbg !4914
  store void (%struct.X509_name_st*)* %freefunc, void (%struct.X509_name_st*)** %freefunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.X509_name_st*)** %freefunc.addr, metadata !4915, metadata !439), !dbg !4916
  %0 = load %struct.stack_st_X509_NAME*, %struct.stack_st_X509_NAME** %sk.addr, align 8, !dbg !4917
  %1 = bitcast %struct.stack_st_X509_NAME* %0 to %struct.stack_st*, !dbg !4918
  %2 = load void (%struct.X509_name_st*)*, void (%struct.X509_name_st*)** %freefunc.addr, align 8, !dbg !4919
  %3 = bitcast void (%struct.X509_name_st*)* %2 to void (i8*)*, !dbg !4920
  call void @OPENSSL_sk_pop_free(%struct.stack_st* %1, void (i8*)* %3), !dbg !4921
  ret void, !dbg !4922
}

declare void @X509_NAME_free(%struct.X509_name_st*) #2

declare void @SSL_CTX_set0_CA_list(%struct.ssl_ctx_st*, %struct.stack_st_X509_NAME*) #2

declare i32 @SSL_CTX_set_client_cert_engine(%struct.ssl_ctx_st*, %struct.engine_st*) #2

declare i32 @ENGINE_free(%struct.engine_st*) #2

declare void @SSL_CTX_set_psk_client_callback(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @psk_client_cb(%struct.ssl_st* %ssl, i8* %hint, i8* %identity, i32 %max_identity_len, i8* %psk, i32 %max_psk_len) #0 !dbg !4923 {
entry:
  %retval = alloca i32, align 4
  %ssl.addr = alloca %struct.ssl_st*, align 8
  %hint.addr = alloca i8*, align 8
  %identity.addr = alloca i8*, align 8
  %max_identity_len.addr = alloca i32, align 4
  %psk.addr = alloca i8*, align 8
  %max_psk_len.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %key_len = alloca i64, align 8
  %key = alloca i8*, align 8
  store %struct.ssl_st* %ssl, %struct.ssl_st** %ssl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %ssl.addr, metadata !4926, metadata !439), !dbg !4927
  store i8* %hint, i8** %hint.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %hint.addr, metadata !4928, metadata !439), !dbg !4929
  store i8* %identity, i8** %identity.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identity.addr, metadata !4930, metadata !439), !dbg !4931
  store i32 %max_identity_len, i32* %max_identity_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_identity_len.addr, metadata !4932, metadata !439), !dbg !4933
  store i8* %psk, i8** %psk.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %psk.addr, metadata !4934, metadata !439), !dbg !4935
  store i32 %max_psk_len, i32* %max_psk_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_psk_len.addr, metadata !4936, metadata !439), !dbg !4937
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4938, metadata !439), !dbg !4939
  call void @llvm.dbg.declare(metadata i64* %key_len, metadata !4940, metadata !439), !dbg !4941
  call void @llvm.dbg.declare(metadata i8** %key, metadata !4942, metadata !439), !dbg !4943
  %0 = load i32, i32* @c_debug, align 4, !dbg !4944
  %tobool = icmp ne i32 %0, 0, !dbg !4944
  br i1 %tobool, label %if.then, label %if.end, !dbg !4946

if.then:                                          ; preds = %entry
  %1 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4947
  %call = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.499, i32 0, i32 0)), !dbg !4948
  br label %if.end, !dbg !4948

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8*, i8** %hint.addr, align 8, !dbg !4949
  %tobool1 = icmp ne i8* %2, null, !dbg !4949
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !4951

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* @c_debug, align 4, !dbg !4952
  %tobool3 = icmp ne i32 %3, 0, !dbg !4952
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !4955

if.then4:                                         ; preds = %if.then2
  %4 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4956
  %call5 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.500, i32 0, i32 0)), !dbg !4957
  br label %if.end6, !dbg !4957

if.end6:                                          ; preds = %if.then4, %if.then2
  br label %if.end11, !dbg !4958

if.else:                                          ; preds = %if.end
  %5 = load i32, i32* @c_debug, align 4, !dbg !4959
  %tobool7 = icmp ne i32 %5, 0, !dbg !4959
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !4959

if.then8:                                         ; preds = %if.else
  %6 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4962
  %7 = load i8*, i8** %hint.addr, align 8, !dbg !4964
  %call9 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.501, i32 0, i32 0), i8* %7), !dbg !4965
  br label %if.end10, !dbg !4966

if.end10:                                         ; preds = %if.then8, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end6
  %8 = load i8*, i8** %identity.addr, align 8, !dbg !4967
  %9 = load i32, i32* %max_identity_len.addr, align 4, !dbg !4968
  %conv = zext i32 %9 to i64, !dbg !4968
  %10 = load i8*, i8** @psk_identity, align 8, !dbg !4969
  %call12 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* %8, i64 %conv, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.502, i32 0, i32 0), i8* %10), !dbg !4970
  store i32 %call12, i32* %ret, align 4, !dbg !4971
  %11 = load i32, i32* %ret, align 4, !dbg !4972
  %cmp = icmp slt i32 %11, 0, !dbg !4974
  br i1 %cmp, label %if.then16, label %lor.lhs.false, !dbg !4975

lor.lhs.false:                                    ; preds = %if.end11
  %12 = load i32, i32* %ret, align 4, !dbg !4976
  %13 = load i32, i32* %max_identity_len.addr, align 4, !dbg !4978
  %cmp14 = icmp ugt i32 %12, %13, !dbg !4979
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !4980

if.then16:                                        ; preds = %lor.lhs.false, %if.end11
  br label %out_err, !dbg !4981

if.end17:                                         ; preds = %lor.lhs.false
  %14 = load i32, i32* @c_debug, align 4, !dbg !4982
  %tobool18 = icmp ne i32 %14, 0, !dbg !4982
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !4984

if.then19:                                        ; preds = %if.end17
  %15 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !4985
  %16 = load i8*, i8** %identity.addr, align 8, !dbg !4986
  %17 = load i32, i32* %ret, align 4, !dbg !4987
  %call20 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %15, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.503, i32 0, i32 0), i8* %16, i32 %17), !dbg !4988
  br label %if.end21, !dbg !4988

if.end21:                                         ; preds = %if.then19, %if.end17
  %18 = load i8*, i8** @psk_key, align 8, !dbg !4989
  %call22 = call i8* @OPENSSL_hexstr2buf(i8* %18, i64* %key_len), !dbg !4990
  store i8* %call22, i8** %key, align 8, !dbg !4991
  %19 = load i8*, i8** %key, align 8, !dbg !4992
  %cmp23 = icmp eq i8* %19, null, !dbg !4994
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !4995

if.then25:                                        ; preds = %if.end21
  %20 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4996
  %21 = load i8*, i8** @psk_key, align 8, !dbg !4998
  %call26 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %20, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.504, i32 0, i32 0), i8* %21), !dbg !4999
  store i32 0, i32* %retval, align 4, !dbg !5000
  br label %return, !dbg !5000

if.end27:                                         ; preds = %if.end21
  %22 = load i32, i32* %max_psk_len.addr, align 4, !dbg !5001
  %cmp28 = icmp ugt i32 %22, 2147483647, !dbg !5003
  br i1 %cmp28, label %if.then34, label %lor.lhs.false30, !dbg !5004

lor.lhs.false30:                                  ; preds = %if.end27
  %23 = load i64, i64* %key_len, align 8, !dbg !5005
  %24 = load i32, i32* %max_psk_len.addr, align 4, !dbg !5007
  %conv31 = zext i32 %24 to i64, !dbg !5008
  %cmp32 = icmp sgt i64 %23, %conv31, !dbg !5009
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !5010

if.then34:                                        ; preds = %lor.lhs.false30, %if.end27
  %25 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5011
  %26 = load i32, i32* %max_psk_len.addr, align 4, !dbg !5013
  %27 = load i64, i64* %key_len, align 8, !dbg !5014
  %call35 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %25, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.505, i32 0, i32 0), i32 %26, i64 %27), !dbg !5015
  %28 = load i8*, i8** %key, align 8, !dbg !5016
  call void @CRYPTO_free(i8* %28, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 160), !dbg !5017
  store i32 0, i32* %retval, align 4, !dbg !5018
  br label %return, !dbg !5018

if.end36:                                         ; preds = %lor.lhs.false30
  %29 = load i8*, i8** %psk.addr, align 8, !dbg !5019
  %30 = load i8*, i8** %key, align 8, !dbg !5020
  %31 = load i64, i64* %key_len, align 8, !dbg !5021
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 %31, i32 1, i1 false), !dbg !5022
  %32 = load i8*, i8** %key, align 8, !dbg !5023
  call void @CRYPTO_free(i8* %32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 165), !dbg !5024
  %33 = load i32, i32* @c_debug, align 4, !dbg !5025
  %tobool37 = icmp ne i32 %33, 0, !dbg !5025
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !5027

if.then38:                                        ; preds = %if.end36
  %34 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !5028
  %35 = load i64, i64* %key_len, align 8, !dbg !5029
  %call39 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %34, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.506, i32 0, i32 0), i64 %35), !dbg !5030
  br label %if.end40, !dbg !5030

if.end40:                                         ; preds = %if.then38, %if.end36
  %36 = load i64, i64* %key_len, align 8, !dbg !5031
  %conv41 = trunc i64 %36 to i32, !dbg !5031
  store i32 %conv41, i32* %retval, align 4, !dbg !5032
  br label %return, !dbg !5032

out_err:                                          ; preds = %if.then16
  %37 = load i32, i32* @c_debug, align 4, !dbg !5033
  %tobool42 = icmp ne i32 %37, 0, !dbg !5033
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !5035

if.then43:                                        ; preds = %out_err
  %38 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5036
  %call44 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %38, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.507, i32 0, i32 0)), !dbg !5037
  br label %if.end45, !dbg !5037

if.end45:                                         ; preds = %if.then43, %out_err
  store i32 0, i32* %retval, align 4, !dbg !5038
  br label %return, !dbg !5038

return:                                           ; preds = %if.end45, %if.end40, %if.then34, %if.then25
  %39 = load i32, i32* %retval, align 4, !dbg !5039
  ret i32 %39, !dbg !5039
}

declare %struct.ssl_session_st* @PEM_read_bio_SSL_SESSION(%struct.bio_st*, %struct.ssl_session_st**, i32 (i8*, i32, i32, i8*)*, i8*) #2

declare i32 @BIO_free(%struct.bio_st*) #2

declare void @SSL_CTX_set_psk_use_session_callback(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, %struct.evp_md_st*, i8**, i64*, %struct.ssl_session_st**)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @psk_use_session_cb(%struct.ssl_st* %s, %struct.evp_md_st* %md, i8** %id, i64* %idlen, %struct.ssl_session_st** %sess) #0 !dbg !5040 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ssl_st*, align 8
  %md.addr = alloca %struct.evp_md_st*, align 8
  %id.addr = alloca i8**, align 8
  %idlen.addr = alloca i64*, align 8
  %sess.addr = alloca %struct.ssl_session_st**, align 8
  %usesess = alloca %struct.ssl_session_st*, align 8
  %cipher = alloca %struct.ssl_cipher_st*, align 8
  %key_len = alloca i64, align 8
  %key = alloca i8*, align 8
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !5050, metadata !439), !dbg !5051
  store %struct.evp_md_st* %md, %struct.evp_md_st** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.evp_md_st** %md.addr, metadata !5052, metadata !439), !dbg !5053
  store i8** %id, i8*** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %id.addr, metadata !5054, metadata !439), !dbg !5055
  store i64* %idlen, i64** %idlen.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %idlen.addr, metadata !5056, metadata !439), !dbg !5057
  store %struct.ssl_session_st** %sess, %struct.ssl_session_st*** %sess.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_session_st*** %sess.addr, metadata !5058, metadata !439), !dbg !5059
  call void @llvm.dbg.declare(metadata %struct.ssl_session_st** %usesess, metadata !5060, metadata !439), !dbg !5061
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %usesess, align 8, !dbg !5061
  call void @llvm.dbg.declare(metadata %struct.ssl_cipher_st** %cipher, metadata !5062, metadata !439), !dbg !5067
  store %struct.ssl_cipher_st* null, %struct.ssl_cipher_st** %cipher, align 8, !dbg !5067
  %0 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !5068
  %cmp = icmp ne %struct.ssl_session_st* %0, null, !dbg !5070
  br i1 %cmp, label %if.then, label %if.else, !dbg !5071

if.then:                                          ; preds = %entry
  %1 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !5072
  %call = call i32 @SSL_SESSION_up_ref(%struct.ssl_session_st* %1), !dbg !5074
  %2 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !5075
  store %struct.ssl_session_st* %2, %struct.ssl_session_st** %usesess, align 8, !dbg !5076
  br label %if.end21, !dbg !5077

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %key_len, metadata !5078, metadata !439), !dbg !5080
  call void @llvm.dbg.declare(metadata i8** %key, metadata !5081, metadata !439), !dbg !5082
  %3 = load i8*, i8** @psk_key, align 8, !dbg !5083
  %call1 = call i8* @OPENSSL_hexstr2buf(i8* %3, i64* %key_len), !dbg !5084
  store i8* %call1, i8** %key, align 8, !dbg !5082
  %4 = load i8*, i8** %key, align 8, !dbg !5085
  %cmp2 = icmp eq i8* %4, null, !dbg !5087
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !5088

if.then3:                                         ; preds = %if.else
  %5 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5089
  %6 = load i8*, i8** @psk_key, align 8, !dbg !5091
  %call4 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.504, i32 0, i32 0), i8* %6), !dbg !5092
  store i32 0, i32* %retval, align 4, !dbg !5093
  br label %return, !dbg !5093

if.end:                                           ; preds = %if.else
  %7 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5094
  %call5 = call %struct.ssl_cipher_st* @SSL_CIPHER_find(%struct.ssl_st* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @tls13_aes128gcmsha256_id, i32 0, i32 0)), !dbg !5095
  store %struct.ssl_cipher_st* %call5, %struct.ssl_cipher_st** %cipher, align 8, !dbg !5096
  %8 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %cipher, align 8, !dbg !5097
  %cmp6 = icmp eq %struct.ssl_cipher_st* %8, null, !dbg !5099
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !5100

if.then7:                                         ; preds = %if.end
  %9 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5101
  %call8 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %9, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.508, i32 0, i32 0)), !dbg !5103
  %10 = load i8*, i8** %key, align 8, !dbg !5104
  call void @CRYPTO_free(i8* %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 205), !dbg !5105
  store i32 0, i32* %retval, align 4, !dbg !5106
  br label %return, !dbg !5106

if.end9:                                          ; preds = %if.end
  %call10 = call %struct.ssl_session_st* @SSL_SESSION_new(), !dbg !5107
  store %struct.ssl_session_st* %call10, %struct.ssl_session_st** %usesess, align 8, !dbg !5108
  %11 = load %struct.ssl_session_st*, %struct.ssl_session_st** %usesess, align 8, !dbg !5109
  %cmp11 = icmp eq %struct.ssl_session_st* %11, null, !dbg !5111
  br i1 %cmp11, label %if.then19, label %lor.lhs.false, !dbg !5112

lor.lhs.false:                                    ; preds = %if.end9
  %12 = load %struct.ssl_session_st*, %struct.ssl_session_st** %usesess, align 8, !dbg !5113
  %13 = load i8*, i8** %key, align 8, !dbg !5115
  %14 = load i64, i64* %key_len, align 8, !dbg !5116
  %call12 = call i32 @SSL_SESSION_set1_master_key(%struct.ssl_session_st* %12, i8* %13, i64 %14), !dbg !5117
  %tobool = icmp ne i32 %call12, 0, !dbg !5117
  br i1 %tobool, label %lor.lhs.false13, label %if.then19, !dbg !5118

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %15 = load %struct.ssl_session_st*, %struct.ssl_session_st** %usesess, align 8, !dbg !5119
  %16 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %cipher, align 8, !dbg !5120
  %call14 = call i32 @SSL_SESSION_set_cipher(%struct.ssl_session_st* %15, %struct.ssl_cipher_st* %16), !dbg !5121
  %tobool15 = icmp ne i32 %call14, 0, !dbg !5121
  br i1 %tobool15, label %lor.lhs.false16, label %if.then19, !dbg !5122

lor.lhs.false16:                                  ; preds = %lor.lhs.false13
  %17 = load %struct.ssl_session_st*, %struct.ssl_session_st** %usesess, align 8, !dbg !5123
  %call17 = call i32 @SSL_SESSION_set_protocol_version(%struct.ssl_session_st* %17, i32 772), !dbg !5124
  %tobool18 = icmp ne i32 %call17, 0, !dbg !5124
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !5125

if.then19:                                        ; preds = %lor.lhs.false16, %lor.lhs.false13, %lor.lhs.false, %if.end9
  %18 = load i8*, i8** %key, align 8, !dbg !5127
  call void @CRYPTO_free(i8* %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 214), !dbg !5129
  br label %err, !dbg !5130

if.end20:                                         ; preds = %lor.lhs.false16
  %19 = load i8*, i8** %key, align 8, !dbg !5131
  call void @CRYPTO_free(i8* %19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 217), !dbg !5132
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then
  %20 = load %struct.ssl_session_st*, %struct.ssl_session_st** %usesess, align 8, !dbg !5133
  %call22 = call %struct.ssl_cipher_st* @SSL_SESSION_get0_cipher(%struct.ssl_session_st* %20), !dbg !5134
  store %struct.ssl_cipher_st* %call22, %struct.ssl_cipher_st** %cipher, align 8, !dbg !5135
  %21 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %cipher, align 8, !dbg !5136
  %cmp23 = icmp eq %struct.ssl_cipher_st* %21, null, !dbg !5138
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !5139

if.then24:                                        ; preds = %if.end21
  br label %err, !dbg !5140

if.end25:                                         ; preds = %if.end21
  %22 = load %struct.evp_md_st*, %struct.evp_md_st** %md.addr, align 8, !dbg !5141
  %cmp26 = icmp ne %struct.evp_md_st* %22, null, !dbg !5143
  br i1 %cmp26, label %land.lhs.true, label %if.else30, !dbg !5144

land.lhs.true:                                    ; preds = %if.end25
  %23 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %cipher, align 8, !dbg !5145
  %call27 = call %struct.evp_md_st* @SSL_CIPHER_get_handshake_digest(%struct.ssl_cipher_st* %23), !dbg !5147
  %24 = load %struct.evp_md_st*, %struct.evp_md_st** %md.addr, align 8, !dbg !5148
  %cmp28 = icmp ne %struct.evp_md_st* %call27, %24, !dbg !5149
  br i1 %cmp28, label %if.then29, label %if.else30, !dbg !5150

if.then29:                                        ; preds = %land.lhs.true
  %25 = load i8**, i8*** %id.addr, align 8, !dbg !5151
  store i8* null, i8** %25, align 8, !dbg !5153
  %26 = load i64*, i64** %idlen.addr, align 8, !dbg !5154
  store i64 0, i64* %26, align 8, !dbg !5155
  %27 = load %struct.ssl_session_st**, %struct.ssl_session_st*** %sess.addr, align 8, !dbg !5156
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %27, align 8, !dbg !5157
  %28 = load %struct.ssl_session_st*, %struct.ssl_session_st** %usesess, align 8, !dbg !5158
  call void @SSL_SESSION_free(%struct.ssl_session_st* %28), !dbg !5159
  br label %if.end32, !dbg !5160

if.else30:                                        ; preds = %land.lhs.true, %if.end25
  %29 = load %struct.ssl_session_st*, %struct.ssl_session_st** %usesess, align 8, !dbg !5161
  %30 = load %struct.ssl_session_st**, %struct.ssl_session_st*** %sess.addr, align 8, !dbg !5163
  store %struct.ssl_session_st* %29, %struct.ssl_session_st** %30, align 8, !dbg !5164
  %31 = load i8*, i8** @psk_identity, align 8, !dbg !5165
  %32 = load i8**, i8*** %id.addr, align 8, !dbg !5166
  store i8* %31, i8** %32, align 8, !dbg !5167
  %33 = load i8*, i8** @psk_identity, align 8, !dbg !5168
  %call31 = call i64 @strlen(i8* %33) #9, !dbg !5169
  %34 = load i64*, i64** %idlen.addr, align 8, !dbg !5170
  store i64 %call31, i64* %34, align 8, !dbg !5171
  br label %if.end32

if.end32:                                         ; preds = %if.else30, %if.then29
  store i32 1, i32* %retval, align 4, !dbg !5172
  br label %return, !dbg !5172

err:                                              ; preds = %if.then24, %if.then19
  %35 = load %struct.ssl_session_st*, %struct.ssl_session_st** %usesess, align 8, !dbg !5173
  call void @SSL_SESSION_free(%struct.ssl_session_st* %35), !dbg !5174
  store i32 0, i32* %retval, align 4, !dbg !5175
  br label %return, !dbg !5175

return:                                           ; preds = %err, %if.end32, %if.then7, %if.then3
  %36 = load i32, i32* %retval, align 4, !dbg !5176
  ret i32 %36, !dbg !5176
}

declare i32 @SSL_CTX_set_tlsext_use_srtp(%struct.ssl_ctx_st*, i8*) #2

declare void @ssl_ctx_set_excert(%struct.ssl_ctx_st*, %struct.ssl_excert_st*) #2

declare void @SSL_CTX_set_next_proto_select_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @next_proto_cb(%struct.ssl_st* %s, i8** %out, i8* %outlen, i8* %in, i32 %inlen, i8* %arg) #0 !dbg !5177 {
entry:
  %s.addr = alloca %struct.ssl_st*, align 8
  %out.addr = alloca i8**, align 8
  %outlen.addr = alloca i8*, align 8
  %in.addr = alloca i8*, align 8
  %inlen.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %ctx = alloca %struct.tlsextnextprotoctx_st*, align 8
  %i = alloca i32, align 4
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !5180, metadata !439), !dbg !5181
  store i8** %out, i8*** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %out.addr, metadata !5182, metadata !439), !dbg !5183
  store i8* %outlen, i8** %outlen.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %outlen.addr, metadata !5184, metadata !439), !dbg !5185
  store i8* %in, i8** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in.addr, metadata !5186, metadata !439), !dbg !5187
  store i32 %inlen, i32* %inlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %inlen.addr, metadata !5188, metadata !439), !dbg !5189
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5190, metadata !439), !dbg !5191
  call void @llvm.dbg.declare(metadata %struct.tlsextnextprotoctx_st** %ctx, metadata !5192, metadata !439), !dbg !5194
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5195
  %1 = bitcast i8* %0 to %struct.tlsextnextprotoctx_st*, !dbg !5195
  store %struct.tlsextnextprotoctx_st* %1, %struct.tlsextnextprotoctx_st** %ctx, align 8, !dbg !5194
  %2 = load i32, i32* @c_quiet, align 4, !dbg !5196
  %tobool = icmp ne i32 %2, 0, !dbg !5196
  br i1 %tobool, label %if.end13, label %if.then, !dbg !5198

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5199, metadata !439), !dbg !5201
  %3 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !5202
  %call = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.509, i32 0, i32 0)), !dbg !5203
  store i32 0, i32* %i, align 4, !dbg !5204
  br label %for.cond, !dbg !5206

for.cond:                                         ; preds = %if.end, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !5207
  %5 = load i32, i32* %inlen.addr, align 4, !dbg !5210
  %cmp = icmp ult i32 %4, %5, !dbg !5211
  br i1 %cmp, label %for.body, label %for.end, !dbg !5212

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !5213
  %tobool1 = icmp ne i32 %6, 0, !dbg !5213
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !5216

if.then2:                                         ; preds = %for.body
  %7 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !5217
  %call3 = call i32 @BIO_write(%struct.bio_st* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.510, i32 0, i32 0), i32 2), !dbg !5218
  br label %if.end, !dbg !5218

if.end:                                           ; preds = %if.then2, %for.body
  %8 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !5219
  %9 = load i32, i32* %i, align 4, !dbg !5220
  %add = add i32 %9, 1, !dbg !5221
  %idxprom = zext i32 %add to i64, !dbg !5222
  %10 = load i8*, i8** %in.addr, align 8, !dbg !5222
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %idxprom, !dbg !5222
  %11 = load i32, i32* %i, align 4, !dbg !5223
  %idxprom4 = zext i32 %11 to i64, !dbg !5224
  %12 = load i8*, i8** %in.addr, align 8, !dbg !5224
  %arrayidx5 = getelementptr inbounds i8, i8* %12, i64 %idxprom4, !dbg !5224
  %13 = load i8, i8* %arrayidx5, align 1, !dbg !5224
  %conv = zext i8 %13 to i32, !dbg !5224
  %call6 = call i32 @BIO_write(%struct.bio_st* %8, i8* %arrayidx, i32 %conv), !dbg !5225
  %14 = load i32, i32* %i, align 4, !dbg !5226
  %idxprom7 = zext i32 %14 to i64, !dbg !5227
  %15 = load i8*, i8** %in.addr, align 8, !dbg !5227
  %arrayidx8 = getelementptr inbounds i8, i8* %15, i64 %idxprom7, !dbg !5227
  %16 = load i8, i8* %arrayidx8, align 1, !dbg !5227
  %conv9 = zext i8 %16 to i32, !dbg !5227
  %add10 = add nsw i32 %conv9, 1, !dbg !5228
  %17 = load i32, i32* %i, align 4, !dbg !5229
  %add11 = add i32 %17, %add10, !dbg !5229
  store i32 %add11, i32* %i, align 4, !dbg !5229
  br label %for.cond, !dbg !5230, !llvm.loop !5232

for.end:                                          ; preds = %for.cond
  %18 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !5234
  %call12 = call i32 @BIO_write(%struct.bio_st* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.511, i32 0, i32 0), i32 1), !dbg !5235
  br label %if.end13, !dbg !5236

if.end13:                                         ; preds = %for.end, %entry
  %19 = load i8**, i8*** %out.addr, align 8, !dbg !5237
  %20 = load i8*, i8** %outlen.addr, align 8, !dbg !5238
  %21 = load i8*, i8** %in.addr, align 8, !dbg !5239
  %22 = load i32, i32* %inlen.addr, align 4, !dbg !5240
  %23 = load %struct.tlsextnextprotoctx_st*, %struct.tlsextnextprotoctx_st** %ctx, align 8, !dbg !5241
  %data = getelementptr inbounds %struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* %23, i32 0, i32 0, !dbg !5242
  %24 = load i8*, i8** %data, align 8, !dbg !5242
  %25 = load %struct.tlsextnextprotoctx_st*, %struct.tlsextnextprotoctx_st** %ctx, align 8, !dbg !5243
  %len = getelementptr inbounds %struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* %25, i32 0, i32 1, !dbg !5244
  %26 = load i64, i64* %len, align 8, !dbg !5244
  %conv14 = trunc i64 %26 to i32, !dbg !5243
  %call15 = call i32 @SSL_select_next_proto(i8** %19, i8* %20, i8* %21, i32 %22, i8* %24, i32 %conv14), !dbg !5245
  %27 = load %struct.tlsextnextprotoctx_st*, %struct.tlsextnextprotoctx_st** %ctx, align 8, !dbg !5246
  %status = getelementptr inbounds %struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* %27, i32 0, i32 2, !dbg !5247
  store i32 %call15, i32* %status, align 8, !dbg !5248
  ret i32 0, !dbg !5249
}

declare i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st*, i8*, i32) #2

declare i32 @SSL_CTX_add_client_custom_ext(%struct.ssl_ctx_st*, i32, i32 (%struct.ssl_st*, i32, i8**, i64*, i32*, i8*)*, void (%struct.ssl_st*, i32, i8*, i8*)*, i8*, i32 (%struct.ssl_st*, i32, i8*, i64, i32*, i8*)*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @serverinfo_cli_parse_cb(%struct.ssl_st* %s, i32 %ext_type, i8* %in, i64 %inlen, i32* %al, i8* %arg) #0 !dbg !5250 {
entry:
  %s.addr = alloca %struct.ssl_st*, align 8
  %ext_type.addr = alloca i32, align 4
  %in.addr = alloca i8*, align 8
  %inlen.addr = alloca i64, align 8
  %al.addr = alloca i32*, align 8
  %arg.addr = alloca i8*, align 8
  %pem_name = alloca [100 x i8], align 16
  %ext_buf = alloca [65540 x i8], align 16
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !5254, metadata !439), !dbg !5255
  store i32 %ext_type, i32* %ext_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ext_type.addr, metadata !5256, metadata !439), !dbg !5257
  store i8* %in, i8** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in.addr, metadata !5258, metadata !439), !dbg !5259
  store i64 %inlen, i64* %inlen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %inlen.addr, metadata !5260, metadata !439), !dbg !5261
  store i32* %al, i32** %al.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %al.addr, metadata !5262, metadata !439), !dbg !5263
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5264, metadata !439), !dbg !5265
  call void @llvm.dbg.declare(metadata [100 x i8]* %pem_name, metadata !5266, metadata !439), !dbg !5268
  call void @llvm.dbg.declare(metadata [65540 x i8]* %ext_buf, metadata !5269, metadata !439), !dbg !5273
  %0 = load i64, i64* %inlen.addr, align 8, !dbg !5274
  %and = and i64 %0, 65535, !dbg !5274
  store i64 %and, i64* %inlen.addr, align 8, !dbg !5274
  %1 = load i32, i32* %ext_type.addr, align 4, !dbg !5275
  %shr = lshr i32 %1, 8, !dbg !5276
  %conv = trunc i32 %shr to i8, !dbg !5277
  %arrayidx = getelementptr inbounds [65540 x i8], [65540 x i8]* %ext_buf, i64 0, i64 0, !dbg !5278
  store i8 %conv, i8* %arrayidx, align 16, !dbg !5279
  %2 = load i32, i32* %ext_type.addr, align 4, !dbg !5280
  %conv1 = trunc i32 %2 to i8, !dbg !5281
  %arrayidx2 = getelementptr inbounds [65540 x i8], [65540 x i8]* %ext_buf, i64 0, i64 1, !dbg !5282
  store i8 %conv1, i8* %arrayidx2, align 1, !dbg !5283
  %3 = load i64, i64* %inlen.addr, align 8, !dbg !5284
  %shr3 = lshr i64 %3, 8, !dbg !5285
  %conv4 = trunc i64 %shr3 to i8, !dbg !5286
  %arrayidx5 = getelementptr inbounds [65540 x i8], [65540 x i8]* %ext_buf, i64 0, i64 2, !dbg !5287
  store i8 %conv4, i8* %arrayidx5, align 2, !dbg !5288
  %4 = load i64, i64* %inlen.addr, align 8, !dbg !5289
  %conv6 = trunc i64 %4 to i8, !dbg !5290
  %arrayidx7 = getelementptr inbounds [65540 x i8], [65540 x i8]* %ext_buf, i64 0, i64 3, !dbg !5291
  store i8 %conv6, i8* %arrayidx7, align 1, !dbg !5292
  %arraydecay = getelementptr inbounds [65540 x i8], [65540 x i8]* %ext_buf, i32 0, i32 0, !dbg !5293
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 4, !dbg !5294
  %5 = load i8*, i8** %in.addr, align 8, !dbg !5295
  %6 = load i64, i64* %inlen.addr, align 8, !dbg !5296
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %5, i64 %6, i32 1, i1 false), !dbg !5297
  %arraydecay8 = getelementptr inbounds [100 x i8], [100 x i8]* %pem_name, i32 0, i32 0, !dbg !5298
  %7 = load i32, i32* %ext_type.addr, align 4, !dbg !5299
  %call = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* %arraydecay8, i64 100, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.512, i32 0, i32 0), i32 %7), !dbg !5300
  %8 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !5301
  %arraydecay9 = getelementptr inbounds [100 x i8], [100 x i8]* %pem_name, i32 0, i32 0, !dbg !5302
  %arraydecay10 = getelementptr inbounds [65540 x i8], [65540 x i8]* %ext_buf, i32 0, i32 0, !dbg !5303
  %9 = load i64, i64* %inlen.addr, align 8, !dbg !5304
  %add = add i64 4, %9, !dbg !5305
  %call11 = call i32 @PEM_write_bio(%struct.bio_st* %8, i8* %arraydecay9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.430, i32 0, i32 0), i8* %arraydecay10, i64 %add), !dbg !5306
  ret i32 1, !dbg !5307
}

declare void @SSL_CTX_set_info_callback(%struct.ssl_ctx_st*, void (%struct.ssl_st*, i32, i32)*) #2

declare void @apps_ssl_info_callback(%struct.ssl_st*, i32, i32) #2

declare i32 @SSL_CTX_enable_ct(%struct.ssl_ctx_st*, i32) #2

declare i32 @ctx_set_ctlog_list_file(%struct.ssl_ctx_st*, i8*) #2

declare void @ERR_clear_error() #2

declare void @SSL_CTX_set_verify(%struct.ssl_ctx_st*, i32, i32 (i32, %struct.x509_store_ctx_st*)*) #2

declare i32 @verify_callback(i32, %struct.x509_store_ctx_st*) #2

declare i32 @ctx_set_verify_locations(%struct.ssl_ctx_st*, i8*, i8*, i32, i32) #2

declare i32 @ssl_ctx_add_crls(%struct.ssl_ctx_st*, %struct.stack_st_X509_CRL*, i32) #2

declare i32 @set_cert_key_stuff(%struct.ssl_ctx_st*, %struct.x509_st*, %struct.evp_pkey_st*, %struct.stack_st_X509*, i32) #2

declare i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st*, i32, void ()*) #2

; Function Attrs: nounwind uwtable
define internal i32 @ssl_servername_cb(%struct.ssl_st* %s, i32* %ad, i8* %arg) #0 !dbg !5308 {
entry:
  %s.addr = alloca %struct.ssl_st*, align 8
  %ad.addr = alloca i32*, align 8
  %arg.addr = alloca i8*, align 8
  %p = alloca %struct.tlsextctx_st*, align 8
  %hn = alloca i8*, align 8
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !5311, metadata !439), !dbg !5312
  store i32* %ad, i32** %ad.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ad.addr, metadata !5313, metadata !439), !dbg !5314
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5315, metadata !439), !dbg !5316
  call void @llvm.dbg.declare(metadata %struct.tlsextctx_st** %p, metadata !5317, metadata !439), !dbg !5318
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5319
  %1 = bitcast i8* %0 to %struct.tlsextctx_st*, !dbg !5320
  store %struct.tlsextctx_st* %1, %struct.tlsextctx_st** %p, align 8, !dbg !5318
  call void @llvm.dbg.declare(metadata i8** %hn, metadata !5321, metadata !439), !dbg !5322
  %2 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5323
  %call = call i8* @SSL_get_servername(%struct.ssl_st* %2, i32 0), !dbg !5324
  store i8* %call, i8** %hn, align 8, !dbg !5322
  %3 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5325
  %call1 = call i32 @SSL_get_servername_type(%struct.ssl_st* %3), !dbg !5327
  %cmp = icmp ne i32 %call1, -1, !dbg !5328
  br i1 %cmp, label %if.then, label %if.else, !dbg !5329

if.then:                                          ; preds = %entry
  %4 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5330
  %call2 = call i32 @SSL_session_reused(%struct.ssl_st* %4), !dbg !5331
  %tobool = icmp ne i32 %call2, 0, !dbg !5331
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5332

land.rhs:                                         ; preds = %if.then
  %5 = load i8*, i8** %hn, align 8, !dbg !5333
  %cmp3 = icmp ne i8* %5, null, !dbg !5335
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %6 = phi i1 [ false, %if.then ], [ %cmp3, %land.rhs ]
  %land.ext = zext i1 %6 to i32, !dbg !5336
  %7 = load %struct.tlsextctx_st*, %struct.tlsextctx_st** %p, align 8, !dbg !5338
  %ack = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %7, i32 0, i32 1, !dbg !5339
  store i32 %land.ext, i32* %ack, align 8, !dbg !5340
  br label %if.end, !dbg !5338

if.else:                                          ; preds = %entry
  %8 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5341
  %call4 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.513, i32 0, i32 0)), !dbg !5342
  br label %if.end

if.end:                                           ; preds = %if.else, %land.end
  ret i32 0, !dbg !5343
}

declare i32 @SSL_CTX_set_srp_username(%struct.ssl_ctx_st*, i8*) #2

declare i32 @SSL_CTX_set_srp_cb_arg(%struct.ssl_ctx_st*, i8*) #2

declare i32 @SSL_CTX_set_srp_client_pwd_callback(%struct.ssl_ctx_st*, i8* (%struct.ssl_st*, i8*)*) #2

; Function Attrs: nounwind uwtable
define internal i8* @ssl_give_srp_client_pwd_cb(%struct.ssl_st* %s, i8* %arg) #0 !dbg !5344 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca %struct.ssl_st*, align 8
  %arg.addr = alloca i8*, align 8
  %srp_arg = alloca %struct.srp_arg_st*, align 8
  %pass = alloca i8*, align 8
  %cb_tmp = alloca %struct.pw_cb_data, align 8
  %l = alloca i32, align 4
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !5347, metadata !439), !dbg !5348
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5349, metadata !439), !dbg !5350
  call void @llvm.dbg.declare(metadata %struct.srp_arg_st** %srp_arg, metadata !5351, metadata !439), !dbg !5352
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5353
  %1 = bitcast i8* %0 to %struct.srp_arg_st*, !dbg !5354
  store %struct.srp_arg_st* %1, %struct.srp_arg_st** %srp_arg, align 8, !dbg !5352
  call void @llvm.dbg.declare(metadata i8** %pass, metadata !5355, metadata !439), !dbg !5356
  %call = call i8* @app_malloc(i32 1025, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.514, i32 0, i32 0)), !dbg !5357
  store i8* %call, i8** %pass, align 8, !dbg !5356
  call void @llvm.dbg.declare(metadata %struct.pw_cb_data* %cb_tmp, metadata !5358, metadata !439), !dbg !5365
  call void @llvm.dbg.declare(metadata i32* %l, metadata !5366, metadata !439), !dbg !5367
  %2 = load %struct.srp_arg_st*, %struct.srp_arg_st** %srp_arg, align 8, !dbg !5368
  %srppassin = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %2, i32 0, i32 0, !dbg !5369
  %3 = load i8*, i8** %srppassin, align 8, !dbg !5369
  %password = getelementptr inbounds %struct.pw_cb_data, %struct.pw_cb_data* %cb_tmp, i32 0, i32 0, !dbg !5370
  store i8* %3, i8** %password, align 8, !dbg !5371
  %prompt_info = getelementptr inbounds %struct.pw_cb_data, %struct.pw_cb_data* %cb_tmp, i32 0, i32 1, !dbg !5372
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.515, i32 0, i32 0), i8** %prompt_info, align 8, !dbg !5373
  %4 = load i8*, i8** %pass, align 8, !dbg !5374
  %call1 = call i32 @password_callback(i8* %4, i32 1024, i32 0, %struct.pw_cb_data* %cb_tmp), !dbg !5376
  store i32 %call1, i32* %l, align 4, !dbg !5377
  %cmp = icmp slt i32 %call1, 0, !dbg !5378
  br i1 %cmp, label %if.then, label %if.end, !dbg !5379

if.then:                                          ; preds = %entry
  %5 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5380
  %call2 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.516, i32 0, i32 0)), !dbg !5382
  %6 = load i8*, i8** %pass, align 8, !dbg !5383
  call void @CRYPTO_free(i8* %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 362), !dbg !5384
  store i8* null, i8** %retval, align 8, !dbg !5385
  br label %return, !dbg !5385

if.end:                                           ; preds = %entry
  %7 = load i8*, i8** %pass, align 8, !dbg !5386
  %8 = load i32, i32* %l, align 4, !dbg !5387
  %idx.ext = sext i32 %8 to i64, !dbg !5388
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %idx.ext, !dbg !5388
  store i8 0, i8* %add.ptr, align 1, !dbg !5389
  %9 = load i8*, i8** %pass, align 8, !dbg !5390
  store i8* %9, i8** %retval, align 8, !dbg !5391
  br label %return, !dbg !5391

return:                                           ; preds = %if.end, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !5392
  ret i8* %10, !dbg !5392
}

declare i32 @SSL_CTX_set_srp_strength(%struct.ssl_ctx_st*, i32) #2

declare i32 @SSL_CTX_set_srp_verify_param_callback(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8*)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @ssl_srp_verify_param_cb(%struct.ssl_st* %s, i8* %arg) #0 !dbg !5393 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ssl_st*, align 8
  %arg.addr = alloca i8*, align 8
  %srp_arg = alloca %struct.srp_arg_st*, align 8
  %N = alloca %struct.bignum_st*, align 8
  %g = alloca %struct.bignum_st*, align 8
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !5396, metadata !439), !dbg !5397
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5398, metadata !439), !dbg !5399
  call void @llvm.dbg.declare(metadata %struct.srp_arg_st** %srp_arg, metadata !5400, metadata !439), !dbg !5401
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5402
  %1 = bitcast i8* %0 to %struct.srp_arg_st*, !dbg !5403
  store %struct.srp_arg_st* %1, %struct.srp_arg_st** %srp_arg, align 8, !dbg !5401
  call void @llvm.dbg.declare(metadata %struct.bignum_st** %N, metadata !5404, metadata !439), !dbg !5408
  store %struct.bignum_st* null, %struct.bignum_st** %N, align 8, !dbg !5408
  call void @llvm.dbg.declare(metadata %struct.bignum_st** %g, metadata !5409, metadata !439), !dbg !5410
  store %struct.bignum_st* null, %struct.bignum_st** %g, align 8, !dbg !5410
  %2 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5411
  %call = call %struct.bignum_st* @SSL_get_srp_N(%struct.ssl_st* %2), !dbg !5413
  store %struct.bignum_st* %call, %struct.bignum_st** %N, align 8, !dbg !5414
  %cmp = icmp eq %struct.bignum_st* %call, null, !dbg !5415
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5416

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5417
  %call1 = call %struct.bignum_st* @SSL_get_srp_g(%struct.ssl_st* %3), !dbg !5419
  store %struct.bignum_st* %call1, %struct.bignum_st** %g, align 8, !dbg !5420
  %cmp2 = icmp eq %struct.bignum_st* %call1, null, !dbg !5421
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5422

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !5423
  br label %return, !dbg !5423

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.srp_arg_st*, %struct.srp_arg_st** %srp_arg, align 8, !dbg !5424
  %debug = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %4, i32 0, i32 3, !dbg !5426
  %5 = load i32, i32* %debug, align 4, !dbg !5426
  %tobool = icmp ne i32 %5, 0, !dbg !5424
  br i1 %tobool, label %if.then7, label %lor.lhs.false3, !dbg !5427

lor.lhs.false3:                                   ; preds = %if.end
  %6 = load %struct.srp_arg_st*, %struct.srp_arg_st** %srp_arg, align 8, !dbg !5428
  %msg = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %6, i32 0, i32 2, !dbg !5430
  %7 = load i32, i32* %msg, align 8, !dbg !5430
  %tobool4 = icmp ne i32 %7, 0, !dbg !5428
  br i1 %tobool4, label %if.then7, label %lor.lhs.false5, !dbg !5431

lor.lhs.false5:                                   ; preds = %lor.lhs.false3
  %8 = load %struct.srp_arg_st*, %struct.srp_arg_st** %srp_arg, align 8, !dbg !5432
  %amp = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %8, i32 0, i32 4, !dbg !5434
  %9 = load i32, i32* %amp, align 8, !dbg !5434
  %cmp6 = icmp eq i32 %9, 1, !dbg !5435
  br i1 %cmp6, label %if.then7, label %if.end14, !dbg !5436

if.then7:                                         ; preds = %lor.lhs.false5, %lor.lhs.false3, %if.end
  %10 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5437
  %call8 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.517, i32 0, i32 0)), !dbg !5439
  %11 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5440
  %call9 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.518, i32 0, i32 0)), !dbg !5441
  %12 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5442
  %13 = load %struct.bignum_st*, %struct.bignum_st** %N, align 8, !dbg !5443
  %call10 = call i32 @BN_print(%struct.bio_st* %12, %struct.bignum_st* %13), !dbg !5444
  %14 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5445
  %call11 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.519, i32 0, i32 0)), !dbg !5446
  %15 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5447
  %16 = load %struct.bignum_st*, %struct.bignum_st** %g, align 8, !dbg !5448
  %call12 = call i32 @BN_print(%struct.bio_st* %15, %struct.bignum_st* %16), !dbg !5449
  %17 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5450
  %call13 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.511, i32 0, i32 0)), !dbg !5451
  br label %if.end14, !dbg !5452

if.end14:                                         ; preds = %if.then7, %lor.lhs.false5
  %18 = load %struct.bignum_st*, %struct.bignum_st** %g, align 8, !dbg !5453
  %19 = load %struct.bignum_st*, %struct.bignum_st** %N, align 8, !dbg !5455
  %call15 = call i8* @SRP_check_known_gN_param(%struct.bignum_st* %18, %struct.bignum_st* %19), !dbg !5456
  %tobool16 = icmp ne i8* %call15, null, !dbg !5456
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5457

if.then17:                                        ; preds = %if.end14
  store i32 1, i32* %retval, align 4, !dbg !5458
  br label %return, !dbg !5458

if.end18:                                         ; preds = %if.end14
  %20 = load %struct.srp_arg_st*, %struct.srp_arg_st** %srp_arg, align 8, !dbg !5459
  %amp19 = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %20, i32 0, i32 4, !dbg !5461
  %21 = load i32, i32* %amp19, align 8, !dbg !5461
  %cmp20 = icmp eq i32 %21, 1, !dbg !5462
  br i1 %cmp20, label %if.then21, label %if.end33, !dbg !5463

if.then21:                                        ; preds = %if.end18
  %22 = load %struct.srp_arg_st*, %struct.srp_arg_st** %srp_arg, align 8, !dbg !5464
  %debug22 = getelementptr inbounds %struct.srp_arg_st, %struct.srp_arg_st* %22, i32 0, i32 3, !dbg !5467
  %23 = load i32, i32* %debug22, align 4, !dbg !5467
  %tobool23 = icmp ne i32 %23, 0, !dbg !5464
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !5468

if.then24:                                        ; preds = %if.then21
  %24 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5469
  %call25 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %24, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.520, i32 0, i32 0)), !dbg !5470
  br label %if.end26, !dbg !5470

if.end26:                                         ; preds = %if.then24, %if.then21
  %25 = load %struct.bignum_st*, %struct.bignum_st** %g, align 8, !dbg !5471
  %call27 = call i32 @BN_num_bits(%struct.bignum_st* %25), !dbg !5473
  %cmp28 = icmp sle i32 %call27, 128, !dbg !5474
  br i1 %cmp28, label %land.lhs.true, label %if.end32, !dbg !5475

land.lhs.true:                                    ; preds = %if.end26
  %26 = load %struct.bignum_st*, %struct.bignum_st** %N, align 8, !dbg !5476
  %27 = load %struct.bignum_st*, %struct.bignum_st** %g, align 8, !dbg !5478
  %call29 = call i32 @srp_Verify_N_and_g(%struct.bignum_st* %26, %struct.bignum_st* %27), !dbg !5479
  %tobool30 = icmp ne i32 %call29, 0, !dbg !5479
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !5480

if.then31:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !5481
  br label %return, !dbg !5481

if.end32:                                         ; preds = %land.lhs.true, %if.end26
  br label %if.end33, !dbg !5482

if.end33:                                         ; preds = %if.end32, %if.end18
  %28 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5483
  %call34 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %28, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.521, i32 0, i32 0)), !dbg !5484
  store i32 0, i32* %retval, align 4, !dbg !5485
  br label %return, !dbg !5485

return:                                           ; preds = %if.end33, %if.then31, %if.then17, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !5486
  ret i32 %29, !dbg !5486
}

declare i32 @SSL_CTX_dane_enable(%struct.ssl_ctx_st*) #2

declare void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @new_session_cb(%struct.ssl_st* %s, %struct.ssl_session_st* %sess) #0 !dbg !5487 {
entry:
  %s.addr = alloca %struct.ssl_st*, align 8
  %sess.addr = alloca %struct.ssl_session_st*, align 8
  %stmp = alloca %struct.bio_st*, align 8
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !5490, metadata !439), !dbg !5491
  store %struct.ssl_session_st* %sess, %struct.ssl_session_st** %sess.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_session_st** %sess.addr, metadata !5492, metadata !439), !dbg !5493
  %0 = load i8*, i8** @sess_out, align 8, !dbg !5494
  %cmp = icmp ne i8* %0, null, !dbg !5496
  br i1 %cmp, label %if.then, label %if.end6, !dbg !5497

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bio_st** %stmp, metadata !5498, metadata !439), !dbg !5500
  %1 = load i8*, i8** @sess_out, align 8, !dbg !5501
  %call = call %struct.bio_st* @BIO_new_file(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.351, i32 0, i32 0)), !dbg !5502
  store %struct.bio_st* %call, %struct.bio_st** %stmp, align 8, !dbg !5500
  %2 = load %struct.bio_st*, %struct.bio_st** %stmp, align 8, !dbg !5503
  %cmp1 = icmp eq %struct.bio_st* %2, null, !dbg !5505
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !5506

if.then2:                                         ; preds = %if.then
  %3 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5507
  %4 = load i8*, i8** @sess_out, align 8, !dbg !5509
  %call3 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.522, i32 0, i32 0), i8* %4), !dbg !5510
  br label %if.end, !dbg !5511

if.else:                                          ; preds = %if.then
  %5 = load %struct.bio_st*, %struct.bio_st** %stmp, align 8, !dbg !5512
  %6 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess.addr, align 8, !dbg !5514
  %call4 = call i32 @PEM_write_bio_SSL_SESSION(%struct.bio_st* %5, %struct.ssl_session_st* %6), !dbg !5515
  %7 = load %struct.bio_st*, %struct.bio_st** %stmp, align 8, !dbg !5516
  %call5 = call i32 @BIO_free(%struct.bio_st* %7), !dbg !5517
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end6, !dbg !5518

if.end6:                                          ; preds = %if.end, %entry
  %8 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5519
  %call7 = call i32 @SSL_version(%struct.ssl_st* %8), !dbg !5521
  %cmp8 = icmp eq i32 %call7, 772, !dbg !5522
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !5523

if.then9:                                         ; preds = %if.end6
  %9 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !5524
  %call10 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %9, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.523, i32 0, i32 0)), !dbg !5526
  %10 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !5527
  %11 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess.addr, align 8, !dbg !5528
  %call11 = call i32 @SSL_SESSION_print(%struct.bio_st* %10, %struct.ssl_session_st* %11), !dbg !5529
  %12 = load %struct.bio_st*, %struct.bio_st** @bio_c_out, align 8, !dbg !5530
  %call12 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.524, i32 0, i32 0)), !dbg !5531
  br label %if.end13, !dbg !5532

if.end13:                                         ; preds = %if.then9, %if.end6
  ret i32 0, !dbg !5533
}

declare i32 @set_keylog_file(%struct.ssl_ctx_st*, i8*) #2

declare %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st*) #2

declare void @SSL_set_post_handshake_auth(%struct.ssl_st*, i32) #2

declare i32 @SSL_set_session(%struct.ssl_st*, %struct.ssl_session_st*) #2

declare void @SSL_SESSION_free(%struct.ssl_session_st*) #2

declare i64 @SSL_ctrl(%struct.ssl_st*, i32, i64, i8*) #2

declare i32 @SSL_dane_enable(%struct.ssl_st*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @tlsa_import_rrset(%struct.ssl_st* %con, %struct.stack_st_OPENSSL_STRING* %rrset) #0 !dbg !5534 {
entry:
  %con.addr = alloca %struct.ssl_st*, align 8
  %rrset.addr = alloca %struct.stack_st_OPENSSL_STRING*, align 8
  %num = alloca i32, align 4
  %count = alloca i32, align 4
  %i = alloca i32, align 4
  %rrdata = alloca i8*, align 8
  store %struct.ssl_st* %con, %struct.ssl_st** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %con.addr, metadata !5537, metadata !439), !dbg !5538
  store %struct.stack_st_OPENSSL_STRING* %rrset, %struct.stack_st_OPENSSL_STRING** %rrset.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_OPENSSL_STRING** %rrset.addr, metadata !5539, metadata !439), !dbg !5540
  call void @llvm.dbg.declare(metadata i32* %num, metadata !5541, metadata !439), !dbg !5542
  %0 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %rrset.addr, align 8, !dbg !5543
  %call = call i32 @sk_OPENSSL_STRING_num(%struct.stack_st_OPENSSL_STRING* %0), !dbg !5544
  store i32 %call, i32* %num, align 4, !dbg !5542
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5545, metadata !439), !dbg !5546
  store i32 0, i32* %count, align 4, !dbg !5546
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5547, metadata !439), !dbg !5548
  store i32 0, i32* %i, align 4, !dbg !5549
  br label %for.cond, !dbg !5551

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !5552
  %2 = load i32, i32* %num, align 4, !dbg !5555
  %cmp = icmp slt i32 %1, %2, !dbg !5556
  br i1 %cmp, label %for.body, label %for.end, !dbg !5557

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %rrdata, metadata !5558, metadata !439), !dbg !5560
  %3 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %rrset.addr, align 8, !dbg !5561
  %4 = load i32, i32* %i, align 4, !dbg !5562
  %call1 = call i8* @sk_OPENSSL_STRING_value(%struct.stack_st_OPENSSL_STRING* %3, i32 %4), !dbg !5563
  store i8* %call1, i8** %rrdata, align 8, !dbg !5560
  %5 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !5564
  %6 = load i8*, i8** %rrdata, align 8, !dbg !5566
  %call2 = call i32 @tlsa_import_rr(%struct.ssl_st* %5, i8* %6), !dbg !5567
  %cmp3 = icmp sgt i32 %call2, 0, !dbg !5568
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5569

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %count, align 4, !dbg !5570
  %inc = add nsw i32 %7, 1, !dbg !5570
  store i32 %inc, i32* %count, align 4, !dbg !5570
  br label %if.end, !dbg !5570

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5571

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !5572
  %inc4 = add nsw i32 %8, 1, !dbg !5572
  store i32 %inc4, i32* %i, align 4, !dbg !5572
  br label %for.cond, !dbg !5574, !llvm.loop !5575

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %count, align 4, !dbg !5577
  %cmp5 = icmp sgt i32 %9, 0, !dbg !5578
  %conv = zext i1 %cmp5 to i32, !dbg !5578
  ret i32 %conv, !dbg !5579
}

declare i64 @SSL_dane_set_flags(%struct.ssl_st*, i64) #2

declare i32 @init_client(i32*, i8*, i8*, i8*, i8*, i32, i32, i32) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #6

declare i32 @BIO_closesocket(i32) #2

declare i32 @BIO_socket_nbio(i32, i32) #2

declare %struct.bio_st* @BIO_new_dgram(i32, i32) #2

declare %union.bio_addr_st* @BIO_ADDR_new() #2

declare i32 @BIO_sock_info(i32, i32, %union.BIO_sock_info_u*) #2

declare void @BIO_ADDR_free(%union.bio_addr_st*) #2

declare i64 @BIO_ctrl(%struct.bio_st*, i32, i64, i8*) #2

declare i64 @SSL_set_options(%struct.ssl_st*, i64) #2

declare %struct.bio_st* @BIO_new_socket(i32, i32) #2

declare %struct.bio_method_st* @BIO_f_nbio_test() #2

declare %struct.bio_st* @BIO_push(%struct.bio_st*, %struct.bio_st*) #2

declare void @BIO_set_callback(%struct.bio_st*, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*) #2

declare i64 @bio_dump_callback(%struct.bio_st*, i32, i8*, i32, i64, i64) #2

declare void @BIO_set_callback_arg(%struct.bio_st*, i8*) #2

declare void @SSL_set_msg_callback(%struct.ssl_st*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*) #2

declare void @msg_cb(i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*) #2

declare i64 @SSL_callback_ctrl(%struct.ssl_st*, i32, void ()*) #2

declare void @tlsext_cb(%struct.ssl_st*, i32, i32, i8*, i32, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @ocsp_resp_cb(%struct.ssl_st* %s, i8* %arg) #0 !dbg !5580 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ssl_st*, align 8
  %arg.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %len = alloca i32, align 4
  %rsp = alloca %struct.ocsp_response_st*, align 8
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !5581, metadata !439), !dbg !5582
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5583, metadata !439), !dbg !5584
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5585, metadata !439), !dbg !5586
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5587, metadata !439), !dbg !5588
  call void @llvm.dbg.declare(metadata %struct.ocsp_response_st** %rsp, metadata !5589, metadata !439), !dbg !5593
  %0 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5594
  %1 = bitcast i8** %p to i8*, !dbg !5595
  %call = call i64 @SSL_ctrl(%struct.ssl_st* %0, i32 70, i64 0, i8* %1), !dbg !5596
  %conv = trunc i64 %call to i32, !dbg !5596
  store i32 %conv, i32* %len, align 4, !dbg !5597
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !5598
  %3 = bitcast i8* %2 to %struct.bio_st*, !dbg !5598
  %call1 = call i32 @BIO_puts(%struct.bio_st* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.566, i32 0, i32 0)), !dbg !5599
  %4 = load i8*, i8** %p, align 8, !dbg !5600
  %cmp = icmp eq i8* %4, null, !dbg !5602
  br i1 %cmp, label %if.then, label %if.end, !dbg !5603

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !5604
  %6 = bitcast i8* %5 to %struct.bio_st*, !dbg !5604
  %call3 = call i32 @BIO_puts(%struct.bio_st* %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.567, i32 0, i32 0)), !dbg !5606
  store i32 1, i32* %retval, align 4, !dbg !5607
  br label %return, !dbg !5607

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %len, align 4, !dbg !5608
  %conv4 = sext i32 %7 to i64, !dbg !5608
  %call5 = call %struct.ocsp_response_st* @d2i_OCSP_RESPONSE(%struct.ocsp_response_st** null, i8** %p, i64 %conv4), !dbg !5609
  store %struct.ocsp_response_st* %call5, %struct.ocsp_response_st** %rsp, align 8, !dbg !5610
  %8 = load %struct.ocsp_response_st*, %struct.ocsp_response_st** %rsp, align 8, !dbg !5611
  %cmp6 = icmp eq %struct.ocsp_response_st* %8, null, !dbg !5613
  br i1 %cmp6, label %if.then8, label %if.end11, !dbg !5614

if.then8:                                         ; preds = %if.end
  %9 = load i8*, i8** %arg.addr, align 8, !dbg !5615
  %10 = bitcast i8* %9 to %struct.bio_st*, !dbg !5615
  %call9 = call i32 @BIO_puts(%struct.bio_st* %10, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.568, i32 0, i32 0)), !dbg !5617
  %11 = load i8*, i8** %arg.addr, align 8, !dbg !5618
  %12 = bitcast i8* %11 to %struct.bio_st*, !dbg !5618
  %13 = load i8*, i8** %p, align 8, !dbg !5619
  %14 = load i32, i32* %len, align 4, !dbg !5620
  %call10 = call i32 @BIO_dump_indent(%struct.bio_st* %12, i8* %13, i32 %14, i32 4), !dbg !5621
  store i32 0, i32* %retval, align 4, !dbg !5622
  br label %return, !dbg !5622

if.end11:                                         ; preds = %if.end
  %15 = load i8*, i8** %arg.addr, align 8, !dbg !5623
  %16 = bitcast i8* %15 to %struct.bio_st*, !dbg !5623
  %call12 = call i32 @BIO_puts(%struct.bio_st* %16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.569, i32 0, i32 0)), !dbg !5624
  %17 = load i8*, i8** %arg.addr, align 8, !dbg !5625
  %18 = bitcast i8* %17 to %struct.bio_st*, !dbg !5625
  %19 = load %struct.ocsp_response_st*, %struct.ocsp_response_st** %rsp, align 8, !dbg !5626
  %call13 = call i32 @OCSP_RESPONSE_print(%struct.bio_st* %18, %struct.ocsp_response_st* %19, i64 0), !dbg !5627
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !5628
  %21 = bitcast i8* %20 to %struct.bio_st*, !dbg !5628
  %call14 = call i32 @BIO_puts(%struct.bio_st* %21, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.570, i32 0, i32 0)), !dbg !5629
  %22 = load %struct.ocsp_response_st*, %struct.ocsp_response_st** %rsp, align 8, !dbg !5630
  call void @OCSP_RESPONSE_free(%struct.ocsp_response_st* %22), !dbg !5631
  store i32 1, i32* %retval, align 4, !dbg !5632
  br label %return, !dbg !5632

return:                                           ; preds = %if.end11, %if.then8, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !5633
  ret i32 %23, !dbg !5633
}

declare void @SSL_set_bio(%struct.ssl_st*, %struct.bio_st*, %struct.bio_st*) #2

declare void @SSL_set_connect_state(%struct.ssl_st*) #2

declare i32 @fileno_stdin() #2

declare i32 @SSL_get_fd(%struct.ssl_st*) #2

declare %struct.bio_method_st* @BIO_f_buffer() #2

declare i32 @BIO_gets(%struct.bio_st*, i8*, i32) #2

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #4

declare %struct.bio_st* @BIO_pop(%struct.bio_st*) #2

declare i32 @BIO_read(%struct.bio_st*, i8*, i32) #2

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

declare i32 @BIO_write(%struct.bio_st*, i8*, i32) #2

declare i32 @BIO_snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal i8* @base64encode(i8* %buf, i64 %len) #0 !dbg !5634 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %outl = alloca i64, align 8
  %out = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5637, metadata !439), !dbg !5638
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !5639, metadata !439), !dbg !5640
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5641, metadata !439), !dbg !5642
  call void @llvm.dbg.declare(metadata i64* %outl, metadata !5643, metadata !439), !dbg !5644
  call void @llvm.dbg.declare(metadata i8** %out, metadata !5645, metadata !439), !dbg !5646
  %0 = load i64, i64* %len.addr, align 8, !dbg !5647
  %div = udiv i64 %0, 3, !dbg !5648
  store i64 %div, i64* %outl, align 8, !dbg !5649
  %1 = load i64, i64* %len.addr, align 8, !dbg !5650
  %rem = urem i64 %1, 3, !dbg !5652
  %cmp = icmp ugt i64 %rem, 0, !dbg !5653
  br i1 %cmp, label %if.then, label %if.end, !dbg !5654

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %outl, align 8, !dbg !5655
  %inc = add i64 %2, 1, !dbg !5655
  store i64 %inc, i64* %outl, align 8, !dbg !5655
  br label %if.end, !dbg !5656

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %outl, align 8, !dbg !5657
  %shl = shl i64 %3, 2, !dbg !5657
  store i64 %shl, i64* %outl, align 8, !dbg !5657
  %4 = load i64, i64* %outl, align 8, !dbg !5658
  %add = add i64 %4, 1, !dbg !5659
  %conv = trunc i64 %add to i32, !dbg !5658
  %call = call i8* @app_malloc(i32 %conv, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.575, i32 0, i32 0)), !dbg !5660
  store i8* %call, i8** %out, align 8, !dbg !5661
  %5 = load i8*, i8** %out, align 8, !dbg !5662
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !5663
  %7 = load i64, i64* %len.addr, align 8, !dbg !5664
  %conv1 = trunc i64 %7 to i32, !dbg !5664
  %call2 = call i32 @EVP_EncodeBlock(i8* %5, i8* %6, i32 %conv1), !dbg !5665
  store i32 %call2, i32* %i, align 4, !dbg !5666
  %8 = load i32, i32* %i, align 4, !dbg !5667
  %cmp3 = icmp slt i32 %8, 0, !dbg !5669
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !5670

if.then5:                                         ; preds = %if.end
  %9 = load i8*, i8** %out, align 8, !dbg !5671
  store i8 0, i8* %9, align 1, !dbg !5672
  br label %if.end6, !dbg !5673

if.end6:                                          ; preds = %if.then5, %if.end
  %10 = load i8*, i8** %out, align 8, !dbg !5674
  ret i8* %10, !dbg !5675
}

declare void @CRYPTO_clear_free(i8*, i64, i8*, i32) #2

declare i32 @select(i32, %struct.fd_set*, %struct.fd_set*, %struct.fd_set*, %struct.timeval*) #2

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #7

declare void @make_uppercase(i8*) #2

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #4

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #7

declare %struct.bio_method_st* @BIO_s_mem() #2

declare %struct.conf_st* @NCONF_new(%struct.conf_method_st*) #2

declare i32 @NCONF_load_bio(%struct.conf_st*, %struct.bio_st*, i64*) #2

declare void @NCONF_free(%struct.conf_st*) #2

declare i8* @NCONF_get_string(%struct.conf_st*, i8*, i8*) #2

declare %struct.asn1_type_st* @ASN1_generate_nconf(i8*, %struct.conf_st*) #2

declare void @ASN1_TYPE_free(%struct.asn1_type_st*) #2

; Function Attrs: nounwind uwtable
define internal i32 @ldap_ExtendedResponse_parse(i8* %buf, i64 %rem) #0 !dbg !5676 {
entry:
  %buf.addr = alloca i8*, align 8
  %rem.addr = alloca i64, align 8
  %cur = alloca i8*, align 8
  %end = alloca i8*, align 8
  %len = alloca i64, align 8
  %tag = alloca i32, align 4
  %xclass = alloca i32, align 4
  %inf = alloca i32, align 4
  %ret = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5679, metadata !439), !dbg !5680
  store i64 %rem, i64* %rem.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rem.addr, metadata !5681, metadata !439), !dbg !5682
  call void @llvm.dbg.declare(metadata i8** %cur, metadata !5683, metadata !439), !dbg !5684
  call void @llvm.dbg.declare(metadata i8** %end, metadata !5685, metadata !439), !dbg !5686
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5687, metadata !439), !dbg !5688
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !5689, metadata !439), !dbg !5690
  call void @llvm.dbg.declare(metadata i32* %xclass, metadata !5691, metadata !439), !dbg !5692
  call void @llvm.dbg.declare(metadata i32* %inf, metadata !5693, metadata !439), !dbg !5694
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5695, metadata !439), !dbg !5696
  store i32 -1, i32* %ret, align 4, !dbg !5696
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !5697
  store i8* %0, i8** %cur, align 8, !dbg !5698
  %1 = load i8*, i8** %cur, align 8, !dbg !5699
  %2 = load i64, i64* %rem.addr, align 8, !dbg !5700
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !5701
  store i8* %add.ptr, i8** %end, align 8, !dbg !5702
  %3 = load i64, i64* %rem.addr, align 8, !dbg !5703
  %call = call i32 @ASN1_get_object(i8** %cur, i64* %len, i32* %tag, i32* %xclass, i64 %3), !dbg !5704
  store i32 %call, i32* %inf, align 4, !dbg !5705
  %4 = load i32, i32* %inf, align 4, !dbg !5706
  %cmp = icmp ne i32 %4, 32, !dbg !5708
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5709

lor.lhs.false:                                    ; preds = %entry
  %5 = load i32, i32* %tag, align 4, !dbg !5710
  %cmp1 = icmp ne i32 %5, 16, !dbg !5712
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !5713

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %6 = load i8*, i8** %end, align 8, !dbg !5714
  %7 = load i8*, i8** %cur, align 8, !dbg !5715
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !5716
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !5716
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5716
  store i64 %sub.ptr.sub, i64* %rem.addr, align 8, !dbg !5717
  %8 = load i64, i64* %len, align 8, !dbg !5718
  %9 = load i64, i64* %rem.addr, align 8, !dbg !5719
  %cmp3 = icmp sgt i64 %8, %9, !dbg !5720
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5721

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  %10 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5723
  %call4 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %10, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.571, i32 0, i32 0)), !dbg !5725
  br label %end50, !dbg !5726

if.end:                                           ; preds = %lor.lhs.false2
  %11 = load i64, i64* %len, align 8, !dbg !5727
  store i64 %11, i64* %rem.addr, align 8, !dbg !5728
  %12 = load i64, i64* %rem.addr, align 8, !dbg !5729
  %call5 = call i32 @ASN1_get_object(i8** %cur, i64* %len, i32* %tag, i32* %xclass, i64 %12), !dbg !5730
  store i32 %call5, i32* %inf, align 4, !dbg !5731
  %13 = load i32, i32* %inf, align 4, !dbg !5732
  %cmp6 = icmp ne i32 %13, 0, !dbg !5734
  br i1 %cmp6, label %if.then14, label %lor.lhs.false7, !dbg !5735

lor.lhs.false7:                                   ; preds = %if.end
  %14 = load i32, i32* %tag, align 4, !dbg !5736
  %cmp8 = icmp ne i32 %14, 2, !dbg !5738
  br i1 %cmp8, label %if.then14, label %lor.lhs.false9, !dbg !5739

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %15 = load i8*, i8** %end, align 8, !dbg !5740
  %16 = load i8*, i8** %cur, align 8, !dbg !5741
  %sub.ptr.lhs.cast10 = ptrtoint i8* %15 to i64, !dbg !5742
  %sub.ptr.rhs.cast11 = ptrtoint i8* %16 to i64, !dbg !5742
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !5742
  store i64 %sub.ptr.sub12, i64* %rem.addr, align 8, !dbg !5743
  %17 = load i64, i64* %len, align 8, !dbg !5744
  %18 = load i64, i64* %rem.addr, align 8, !dbg !5745
  %cmp13 = icmp sgt i64 %17, %18, !dbg !5746
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !5747

if.then14:                                        ; preds = %lor.lhs.false9, %lor.lhs.false7, %if.end
  %19 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5748
  %call15 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.572, i32 0, i32 0)), !dbg !5750
  br label %end50, !dbg !5751

if.end16:                                         ; preds = %lor.lhs.false9
  %20 = load i64, i64* %len, align 8, !dbg !5752
  %21 = load i8*, i8** %cur, align 8, !dbg !5753
  %add.ptr17 = getelementptr inbounds i8, i8* %21, i64 %20, !dbg !5753
  store i8* %add.ptr17, i8** %cur, align 8, !dbg !5753
  %22 = load i8*, i8** %end, align 8, !dbg !5754
  %23 = load i8*, i8** %cur, align 8, !dbg !5755
  %sub.ptr.lhs.cast18 = ptrtoint i8* %22 to i64, !dbg !5756
  %sub.ptr.rhs.cast19 = ptrtoint i8* %23 to i64, !dbg !5756
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19, !dbg !5756
  store i64 %sub.ptr.sub20, i64* %rem.addr, align 8, !dbg !5757
  %24 = load i64, i64* %rem.addr, align 8, !dbg !5758
  %call21 = call i32 @ASN1_get_object(i8** %cur, i64* %len, i32* %tag, i32* %xclass, i64 %24), !dbg !5759
  store i32 %call21, i32* %inf, align 4, !dbg !5760
  %25 = load i32, i32* %inf, align 4, !dbg !5761
  %cmp22 = icmp ne i32 %25, 32, !dbg !5763
  br i1 %cmp22, label %if.then27, label %lor.lhs.false23, !dbg !5764

lor.lhs.false23:                                  ; preds = %if.end16
  %26 = load i32, i32* %xclass, align 4, !dbg !5765
  %cmp24 = icmp ne i32 %26, 64, !dbg !5767
  br i1 %cmp24, label %if.then27, label %lor.lhs.false25, !dbg !5768

lor.lhs.false25:                                  ; preds = %lor.lhs.false23
  %27 = load i32, i32* %tag, align 4, !dbg !5769
  %cmp26 = icmp ne i32 %27, 24, !dbg !5770
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !5771

if.then27:                                        ; preds = %lor.lhs.false25, %lor.lhs.false23, %if.end16
  %28 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5772
  %call28 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.573, i32 0, i32 0)), !dbg !5774
  br label %end50, !dbg !5775

if.end29:                                         ; preds = %lor.lhs.false25
  %29 = load i8*, i8** %end, align 8, !dbg !5776
  %30 = load i8*, i8** %cur, align 8, !dbg !5777
  %sub.ptr.lhs.cast30 = ptrtoint i8* %29 to i64, !dbg !5778
  %sub.ptr.rhs.cast31 = ptrtoint i8* %30 to i64, !dbg !5778
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31, !dbg !5778
  store i64 %sub.ptr.sub32, i64* %rem.addr, align 8, !dbg !5779
  %31 = load i64, i64* %rem.addr, align 8, !dbg !5780
  %call33 = call i32 @ASN1_get_object(i8** %cur, i64* %len, i32* %tag, i32* %xclass, i64 %31), !dbg !5781
  store i32 %call33, i32* %inf, align 4, !dbg !5782
  %32 = load i32, i32* %inf, align 4, !dbg !5783
  %cmp34 = icmp ne i32 %32, 0, !dbg !5785
  br i1 %cmp34, label %if.then44, label %lor.lhs.false35, !dbg !5786

lor.lhs.false35:                                  ; preds = %if.end29
  %33 = load i32, i32* %tag, align 4, !dbg !5787
  %cmp36 = icmp ne i32 %33, 10, !dbg !5789
  br i1 %cmp36, label %if.then44, label %lor.lhs.false37, !dbg !5790

lor.lhs.false37:                                  ; preds = %lor.lhs.false35
  %34 = load i64, i64* %len, align 8, !dbg !5791
  %cmp38 = icmp eq i64 %34, 0, !dbg !5793
  br i1 %cmp38, label %if.then44, label %lor.lhs.false39, !dbg !5794

lor.lhs.false39:                                  ; preds = %lor.lhs.false37
  %35 = load i8*, i8** %end, align 8, !dbg !5795
  %36 = load i8*, i8** %cur, align 8, !dbg !5796
  %sub.ptr.lhs.cast40 = ptrtoint i8* %35 to i64, !dbg !5797
  %sub.ptr.rhs.cast41 = ptrtoint i8* %36 to i64, !dbg !5797
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41, !dbg !5797
  store i64 %sub.ptr.sub42, i64* %rem.addr, align 8, !dbg !5798
  %37 = load i64, i64* %len, align 8, !dbg !5799
  %38 = load i64, i64* %rem.addr, align 8, !dbg !5800
  %cmp43 = icmp sgt i64 %37, %38, !dbg !5801
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !5802

if.then44:                                        ; preds = %lor.lhs.false39, %lor.lhs.false37, %lor.lhs.false35, %if.end29
  %39 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5804
  %call45 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %39, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.574, i32 0, i32 0)), !dbg !5806
  br label %end50, !dbg !5807

if.end46:                                         ; preds = %lor.lhs.false39
  store i32 0, i32* %ret, align 4, !dbg !5808
  store i32 0, i32* %inf, align 4, !dbg !5810
  br label %for.cond, !dbg !5811

for.cond:                                         ; preds = %for.inc, %if.end46
  %40 = load i32, i32* %inf, align 4, !dbg !5812
  %conv = sext i32 %40 to i64, !dbg !5812
  %41 = load i64, i64* %len, align 8, !dbg !5815
  %cmp47 = icmp slt i64 %conv, %41, !dbg !5816
  br i1 %cmp47, label %for.body, label %for.end, !dbg !5817

for.body:                                         ; preds = %for.cond
  %42 = load i32, i32* %ret, align 4, !dbg !5818
  %shl = shl i32 %42, 8, !dbg !5818
  store i32 %shl, i32* %ret, align 4, !dbg !5818
  %43 = load i32, i32* %inf, align 4, !dbg !5820
  %idxprom = sext i32 %43 to i64, !dbg !5821
  %44 = load i8*, i8** %cur, align 8, !dbg !5821
  %arrayidx = getelementptr inbounds i8, i8* %44, i64 %idxprom, !dbg !5821
  %45 = load i8, i8* %arrayidx, align 1, !dbg !5821
  %conv49 = zext i8 %45 to i32, !dbg !5821
  %46 = load i32, i32* %ret, align 4, !dbg !5822
  %or = or i32 %46, %conv49, !dbg !5822
  store i32 %or, i32* %ret, align 4, !dbg !5822
  br label %for.inc, !dbg !5823

for.inc:                                          ; preds = %for.body
  %47 = load i32, i32* %inf, align 4, !dbg !5824
  %inc = add nsw i32 %47, 1, !dbg !5824
  store i32 %inc, i32* %inf, align 4, !dbg !5824
  br label %for.cond, !dbg !5826, !llvm.loop !5827

for.end:                                          ; preds = %for.cond
  br label %end50, !dbg !5829

end50:                                            ; preds = %for.end, %if.then44, %if.then27, %if.then14, %if.then
  %48 = load i32, i32* %ret, align 4, !dbg !5831
  ret i32 %48, !dbg !5832
}

declare %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st*) #2

declare i32 @SSL_SESSION_get_max_early_data(%struct.ssl_session_st*) #2

declare i32 @BIO_read_ex(%struct.bio_st*, i8*, i64, i64*) #2

declare i32 @SSL_write_early_data(%struct.ssl_st*, i8*, i64, i64*) #2

declare i32 @SSL_get_error(%struct.ssl_st*, i32) #2

declare i32 @SSL_is_dtls(%struct.ssl_st*) #2

declare i32 @SSL_is_init_finished(%struct.ssl_st*) #2

declare i32 @SSL_get_key_update_type(%struct.ssl_st*) #2

declare void @print_ssl_summary(%struct.ssl_st*) #2

; Function Attrs: nounwind uwtable
define internal void @print_stuff(%struct.bio_st* %bio, %struct.ssl_st* %s, i32 %full) #0 !dbg !5833 {
entry:
  %bio.addr = alloca %struct.bio_st*, align 8
  %s.addr = alloca %struct.ssl_st*, align 8
  %full.addr = alloca i32, align 4
  %peer = alloca %struct.x509_st*, align 8
  %sk = alloca %struct.stack_st_X509*, align 8
  %c = alloca %struct.ssl_cipher_st*, align 8
  %i = alloca i32, align 4
  %istls13 = alloca i32, align 4
  %verify_result = alloca i64, align 8
  %comp = alloca %struct.comp_method_st*, align 8
  %expansion = alloca %struct.comp_method_st*, align 8
  %exportedkeymat = alloca i8*, align 8
  %ctx = alloca %struct.ssl_ctx_st*, align 8
  %got_a_chain = alloca i32, align 4
  %scts = alloca %struct.stack_st_SCT*, align 8
  %sct_count = alloca i32, align 4
  %log_store = alloca %struct.ctlog_store_st*, align 8
  %sct = alloca %struct.sct_st*, align 8
  %pktmp = alloca %struct.evp_pkey_st*, align 8
  %proto = alloca i8*, align 8
  %proto_len = alloca i32, align 4
  %proto128 = alloca i8*, align 8
  %proto_len129 = alloca i32, align 4
  %srtp_profile = alloca %struct.srtp_protection_profile_st*, align 8
  store %struct.bio_st* %bio, %struct.bio_st** %bio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_st** %bio.addr, metadata !5836, metadata !439), !dbg !5837
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !5838, metadata !439), !dbg !5839
  store i32 %full, i32* %full.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %full.addr, metadata !5840, metadata !439), !dbg !5841
  call void @llvm.dbg.declare(metadata %struct.x509_st** %peer, metadata !5842, metadata !439), !dbg !5843
  store %struct.x509_st* null, %struct.x509_st** %peer, align 8, !dbg !5843
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509** %sk, metadata !5844, metadata !439), !dbg !5845
  call void @llvm.dbg.declare(metadata %struct.ssl_cipher_st** %c, metadata !5846, metadata !439), !dbg !5847
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5848, metadata !439), !dbg !5849
  call void @llvm.dbg.declare(metadata i32* %istls13, metadata !5850, metadata !439), !dbg !5851
  %0 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5852
  %call = call i32 @SSL_version(%struct.ssl_st* %0), !dbg !5853
  %cmp = icmp eq i32 %call, 772, !dbg !5854
  %conv = zext i1 %cmp to i32, !dbg !5854
  store i32 %conv, i32* %istls13, align 4, !dbg !5851
  call void @llvm.dbg.declare(metadata i64* %verify_result, metadata !5855, metadata !439), !dbg !5856
  call void @llvm.dbg.declare(metadata %struct.comp_method_st** %comp, metadata !5857, metadata !439), !dbg !5862
  call void @llvm.dbg.declare(metadata %struct.comp_method_st** %expansion, metadata !5863, metadata !439), !dbg !5864
  call void @llvm.dbg.declare(metadata i8** %exportedkeymat, metadata !5865, metadata !439), !dbg !5866
  call void @llvm.dbg.declare(metadata %struct.ssl_ctx_st** %ctx, metadata !5867, metadata !439), !dbg !5870
  %1 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5871
  %call1 = call %struct.ssl_ctx_st* @SSL_get_SSL_CTX(%struct.ssl_st* %1), !dbg !5872
  store %struct.ssl_ctx_st* %call1, %struct.ssl_ctx_st** %ctx, align 8, !dbg !5870
  %2 = load i32, i32* %full.addr, align 4, !dbg !5873
  %tobool = icmp ne i32 %2, 0, !dbg !5873
  br i1 %tobool, label %if.then, label %if.end85, !dbg !5875

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %got_a_chain, metadata !5876, metadata !439), !dbg !5878
  store i32 0, i32* %got_a_chain, align 4, !dbg !5878
  %3 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5879
  %call2 = call %struct.stack_st_X509* @SSL_get_peer_cert_chain(%struct.ssl_st* %3), !dbg !5880
  store %struct.stack_st_X509* %call2, %struct.stack_st_X509** %sk, align 8, !dbg !5881
  %4 = load %struct.stack_st_X509*, %struct.stack_st_X509** %sk, align 8, !dbg !5882
  %cmp3 = icmp ne %struct.stack_st_X509* %4, null, !dbg !5884
  br i1 %cmp3, label %if.then5, label %if.end26, !dbg !5885

if.then5:                                         ; preds = %if.then
  store i32 1, i32* %got_a_chain, align 4, !dbg !5886
  %5 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5888
  %call6 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.533, i32 0, i32 0)), !dbg !5889
  store i32 0, i32* %i, align 4, !dbg !5890
  br label %for.cond, !dbg !5892

for.cond:                                         ; preds = %for.inc, %if.then5
  %6 = load i32, i32* %i, align 4, !dbg !5893
  %7 = load %struct.stack_st_X509*, %struct.stack_st_X509** %sk, align 8, !dbg !5896
  %call7 = call i32 @sk_X509_num(%struct.stack_st_X509* %7), !dbg !5897
  %cmp8 = icmp slt i32 %6, %call7, !dbg !5898
  br i1 %cmp8, label %for.body, label %for.end, !dbg !5899

for.body:                                         ; preds = %for.cond
  %8 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5900
  %9 = load i32, i32* %i, align 4, !dbg !5902
  %call10 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.534, i32 0, i32 0), i32 %9), !dbg !5903
  %10 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5904
  %11 = load %struct.stack_st_X509*, %struct.stack_st_X509** %sk, align 8, !dbg !5905
  %12 = load i32, i32* %i, align 4, !dbg !5906
  %call11 = call %struct.x509_st* @sk_X509_value(%struct.stack_st_X509* %11, i32 %12), !dbg !5907
  %call12 = call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* %call11), !dbg !5908
  %call13 = call i64 @get_nameopt(), !dbg !5910
  %call14 = call i32 @X509_NAME_print_ex(%struct.bio_st* %10, %struct.X509_name_st* %call12, i32 0, i64 %call13), !dbg !5912
  %13 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5914
  %call15 = call i32 @BIO_puts(%struct.bio_st* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.511, i32 0, i32 0)), !dbg !5915
  %14 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5916
  %call16 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.535, i32 0, i32 0)), !dbg !5917
  %15 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5918
  %16 = load %struct.stack_st_X509*, %struct.stack_st_X509** %sk, align 8, !dbg !5919
  %17 = load i32, i32* %i, align 4, !dbg !5920
  %call17 = call %struct.x509_st* @sk_X509_value(%struct.stack_st_X509* %16, i32 %17), !dbg !5921
  %call18 = call %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st* %call17), !dbg !5922
  %call19 = call i64 @get_nameopt(), !dbg !5923
  %call20 = call i32 @X509_NAME_print_ex(%struct.bio_st* %15, %struct.X509_name_st* %call18, i32 0, i64 %call19), !dbg !5924
  %18 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5925
  %call21 = call i32 @BIO_puts(%struct.bio_st* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.511, i32 0, i32 0)), !dbg !5926
  %19 = load i32, i32* @c_showcerts, align 4, !dbg !5927
  %tobool22 = icmp ne i32 %19, 0, !dbg !5927
  br i1 %tobool22, label %if.then23, label %if.end, !dbg !5929

if.then23:                                        ; preds = %for.body
  %20 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5930
  %21 = load %struct.stack_st_X509*, %struct.stack_st_X509** %sk, align 8, !dbg !5931
  %22 = load i32, i32* %i, align 4, !dbg !5932
  %call24 = call %struct.x509_st* @sk_X509_value(%struct.stack_st_X509* %21, i32 %22), !dbg !5933
  %call25 = call i32 @PEM_write_bio_X509(%struct.bio_st* %20, %struct.x509_st* %call24), !dbg !5934
  br label %if.end, !dbg !5936

if.end:                                           ; preds = %if.then23, %for.body
  br label %for.inc, !dbg !5937

for.inc:                                          ; preds = %if.end
  %23 = load i32, i32* %i, align 4, !dbg !5938
  %inc = add nsw i32 %23, 1, !dbg !5938
  store i32 %inc, i32* %i, align 4, !dbg !5938
  br label %for.cond, !dbg !5940, !llvm.loop !5941

for.end:                                          ; preds = %for.cond
  br label %if.end26, !dbg !5943

if.end26:                                         ; preds = %for.end, %if.then
  %24 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5944
  %call27 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.524, i32 0, i32 0)), !dbg !5945
  %25 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5946
  %call28 = call %struct.x509_st* @SSL_get_peer_certificate(%struct.ssl_st* %25), !dbg !5947
  store %struct.x509_st* %call28, %struct.x509_st** %peer, align 8, !dbg !5948
  %26 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !5949
  %cmp29 = icmp ne %struct.x509_st* %26, null, !dbg !5951
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !5952

if.then31:                                        ; preds = %if.end26
  %27 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5953
  %call32 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %27, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.536, i32 0, i32 0)), !dbg !5955
  %28 = load i32, i32* @c_showcerts, align 4, !dbg !5956
  %tobool33 = icmp ne i32 %28, 0, !dbg !5956
  br i1 %tobool33, label %land.lhs.true, label %if.then35, !dbg !5958

land.lhs.true:                                    ; preds = %if.then31
  %29 = load i32, i32* %got_a_chain, align 4, !dbg !5959
  %tobool34 = icmp ne i32 %29, 0, !dbg !5959
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !5961

if.then35:                                        ; preds = %land.lhs.true, %if.then31
  %30 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5962
  %31 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !5963
  %call36 = call i32 @PEM_write_bio_X509(%struct.bio_st* %30, %struct.x509_st* %31), !dbg !5964
  br label %if.end37, !dbg !5964

if.end37:                                         ; preds = %if.then35, %land.lhs.true
  %32 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5965
  %33 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !5966
  %call38 = call i32 @dump_cert_text(%struct.bio_st* %32, %struct.x509_st* %33), !dbg !5967
  br label %if.end40, !dbg !5968

if.else:                                          ; preds = %if.end26
  %34 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5969
  %call39 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %34, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.537, i32 0, i32 0)), !dbg !5971
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.end37
  %35 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5972
  %36 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5973
  call void @print_ca_names(%struct.bio_st* %35, %struct.ssl_st* %36), !dbg !5974
  %37 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5975
  %38 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5976
  %call41 = call i32 @ssl_print_sigalgs(%struct.bio_st* %37, %struct.ssl_st* %38), !dbg !5977
  %39 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5978
  %40 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5979
  %call42 = call i32 @ssl_print_tmp_key(%struct.bio_st* %39, %struct.ssl_st* %40), !dbg !5980
  %41 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !5981
  %cmp43 = icmp ne %struct.x509_st* %41, null, !dbg !5983
  br i1 %cmp43, label %land.lhs.true45, label %if.end79, !dbg !5984

land.lhs.true45:                                  ; preds = %if.end40
  %42 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5985
  %call46 = call i32 @SSL_session_reused(%struct.ssl_st* %42), !dbg !5987
  %tobool47 = icmp ne i32 %call46, 0, !dbg !5987
  br i1 %tobool47, label %if.end79, label %land.lhs.true48, !dbg !5988

land.lhs.true48:                                  ; preds = %land.lhs.true45
  %43 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5989
  %call49 = call i32 @SSL_ct_is_enabled(%struct.ssl_st* %43), !dbg !5991
  %tobool50 = icmp ne i32 %call49, 0, !dbg !5991
  br i1 %tobool50, label %if.then51, label %if.end79, !dbg !5992

if.then51:                                        ; preds = %land.lhs.true48
  call void @llvm.dbg.declare(metadata %struct.stack_st_SCT** %scts, metadata !5993, metadata !439), !dbg !5999
  %44 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6000
  %call52 = call %struct.stack_st_SCT* @SSL_get0_peer_scts(%struct.ssl_st* %44), !dbg !6001
  store %struct.stack_st_SCT* %call52, %struct.stack_st_SCT** %scts, align 8, !dbg !5999
  call void @llvm.dbg.declare(metadata i32* %sct_count, metadata !6002, metadata !439), !dbg !6003
  %45 = load %struct.stack_st_SCT*, %struct.stack_st_SCT** %scts, align 8, !dbg !6004
  %cmp53 = icmp ne %struct.stack_st_SCT* %45, null, !dbg !6005
  br i1 %cmp53, label %cond.true, label %cond.false, !dbg !6004

cond.true:                                        ; preds = %if.then51
  %46 = load %struct.stack_st_SCT*, %struct.stack_st_SCT** %scts, align 8, !dbg !6006
  %call55 = call i32 @sk_SCT_num(%struct.stack_st_SCT* %46), !dbg !6008
  br label %cond.end, !dbg !6009

cond.false:                                       ; preds = %if.then51
  br label %cond.end, !dbg !6010

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call55, %cond.true ], [ 0, %cond.false ], !dbg !6012
  store i32 %cond, i32* %sct_count, align 4, !dbg !6014
  %47 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6015
  %48 = load i32, i32* %sct_count, align 4, !dbg !6016
  %call56 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %47, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.538, i32 0, i32 0), i32 %48), !dbg !6017
  %49 = load i32, i32* %sct_count, align 4, !dbg !6018
  %cmp57 = icmp sgt i32 %49, 0, !dbg !6020
  br i1 %cmp57, label %if.then59, label %if.end78, !dbg !6021

if.then59:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.ctlog_store_st** %log_store, metadata !6022, metadata !439), !dbg !6028
  %50 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !dbg !6029
  %call60 = call %struct.ctlog_store_st* @SSL_CTX_get0_ctlog_store(%struct.ssl_ctx_st* %50), !dbg !6030
  store %struct.ctlog_store_st* %call60, %struct.ctlog_store_st** %log_store, align 8, !dbg !6028
  %51 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6031
  %call61 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.524, i32 0, i32 0)), !dbg !6032
  store i32 0, i32* %i, align 4, !dbg !6033
  br label %for.cond62, !dbg !6035

for.cond62:                                       ; preds = %for.inc74, %if.then59
  %52 = load i32, i32* %i, align 4, !dbg !6036
  %53 = load i32, i32* %sct_count, align 4, !dbg !6039
  %cmp63 = icmp slt i32 %52, %53, !dbg !6040
  br i1 %cmp63, label %for.body65, label %for.end76, !dbg !6041

for.body65:                                       ; preds = %for.cond62
  call void @llvm.dbg.declare(metadata %struct.sct_st** %sct, metadata !6042, metadata !439), !dbg !6044
  %54 = load %struct.stack_st_SCT*, %struct.stack_st_SCT** %scts, align 8, !dbg !6045
  %55 = load i32, i32* %i, align 4, !dbg !6046
  %call66 = call %struct.sct_st* @sk_SCT_value(%struct.stack_st_SCT* %54, i32 %55), !dbg !6047
  store %struct.sct_st* %call66, %struct.sct_st** %sct, align 8, !dbg !6044
  %56 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6048
  %57 = load %struct.sct_st*, %struct.sct_st** %sct, align 8, !dbg !6049
  %call67 = call i8* @SCT_validation_status_string(%struct.sct_st* %57), !dbg !6050
  %call68 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %56, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.539, i32 0, i32 0), i8* %call67), !dbg !6051
  %58 = load %struct.sct_st*, %struct.sct_st** %sct, align 8, !dbg !6052
  %59 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6053
  %60 = load %struct.ctlog_store_st*, %struct.ctlog_store_st** %log_store, align 8, !dbg !6054
  call void @SCT_print(%struct.sct_st* %58, %struct.bio_st* %59, i32 0, %struct.ctlog_store_st* %60), !dbg !6055
  %61 = load i32, i32* %i, align 4, !dbg !6056
  %62 = load i32, i32* %sct_count, align 4, !dbg !6058
  %sub = sub nsw i32 %62, 1, !dbg !6059
  %cmp69 = icmp slt i32 %61, %sub, !dbg !6060
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !6061

if.then71:                                        ; preds = %for.body65
  %63 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6062
  %call72 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %63, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.540, i32 0, i32 0)), !dbg !6063
  br label %if.end73, !dbg !6063

if.end73:                                         ; preds = %if.then71, %for.body65
  br label %for.inc74, !dbg !6064

for.inc74:                                        ; preds = %if.end73
  %64 = load i32, i32* %i, align 4, !dbg !6065
  %inc75 = add nsw i32 %64, 1, !dbg !6065
  store i32 %inc75, i32* %i, align 4, !dbg !6065
  br label %for.cond62, !dbg !6067, !llvm.loop !6068

for.end76:                                        ; preds = %for.cond62
  %65 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6070
  %call77 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.511, i32 0, i32 0)), !dbg !6071
  br label %if.end78, !dbg !6072

if.end78:                                         ; preds = %for.end76, %cond.end
  br label %if.end79, !dbg !6073

if.end79:                                         ; preds = %if.end78, %land.lhs.true48, %land.lhs.true45, %if.end40
  %66 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6074
  %67 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6075
  %call80 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* %67), !dbg !6076
  %call81 = call i64 @BIO_number_read(%struct.bio_st* %call80), !dbg !6077
  %68 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6079
  %call82 = call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* %68), !dbg !6080
  %call83 = call i64 @BIO_number_written(%struct.bio_st* %call82), !dbg !6081
  %call84 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %66, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.541, i32 0, i32 0), i64 %call81, i64 %call83), !dbg !6082
  br label %if.end85, !dbg !6083

if.end85:                                         ; preds = %if.end79, %entry
  %69 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6084
  %70 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6085
  call void @print_verify_detail(%struct.ssl_st* %69, %struct.bio_st* %70), !dbg !6086
  %71 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6087
  %72 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6088
  %call86 = call i32 @SSL_session_reused(%struct.ssl_st* %72), !dbg !6089
  %tobool87 = icmp ne i32 %call86, 0, !dbg !6089
  %cond88 = select i1 %tobool87, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.542, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.543, i32 0, i32 0), !dbg !6089
  %call89 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %71, i8* %cond88), !dbg !6090
  %73 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6092
  %call90 = call %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st* %73), !dbg !6093
  store %struct.ssl_cipher_st* %call90, %struct.ssl_cipher_st** %c, align 8, !dbg !6094
  %74 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6095
  %75 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %c, align 8, !dbg !6096
  %call91 = call i8* @SSL_CIPHER_get_version(%struct.ssl_cipher_st* %75), !dbg !6097
  %76 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %c, align 8, !dbg !6098
  %call92 = call i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st* %76), !dbg !6099
  %call93 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %74, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.544, i32 0, i32 0), i8* %call91, i8* %call92), !dbg !6100
  %77 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !6101
  %cmp94 = icmp ne %struct.x509_st* %77, null, !dbg !6103
  br i1 %cmp94, label %if.then96, label %if.end100, !dbg !6104

if.then96:                                        ; preds = %if.end85
  call void @llvm.dbg.declare(metadata %struct.evp_pkey_st** %pktmp, metadata !6105, metadata !439), !dbg !6107
  %78 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !6108
  %call97 = call %struct.evp_pkey_st* @X509_get0_pubkey(%struct.x509_st* %78), !dbg !6109
  store %struct.evp_pkey_st* %call97, %struct.evp_pkey_st** %pktmp, align 8, !dbg !6110
  %79 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6111
  %80 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %pktmp, align 8, !dbg !6112
  %call98 = call i32 @EVP_PKEY_bits(%struct.evp_pkey_st* %80), !dbg !6113
  %call99 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %79, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.545, i32 0, i32 0), i32 %call98), !dbg !6114
  br label %if.end100, !dbg !6115

if.end100:                                        ; preds = %if.then96, %if.end85
  %81 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6116
  %82 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6117
  %call101 = call i64 @SSL_ctrl(%struct.ssl_st* %82, i32 76, i64 0, i8* null), !dbg !6118
  %tobool102 = icmp ne i64 %call101, 0, !dbg !6118
  %cond103 = select i1 %tobool102, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.430, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.547, i32 0, i32 0), !dbg !6118
  %call104 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %81, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.546, i32 0, i32 0), i8* %cond103), !dbg !6119
  %83 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6120
  %call105 = call %struct.comp_method_st* @SSL_get_current_compression(%struct.ssl_st* %83), !dbg !6121
  store %struct.comp_method_st* %call105, %struct.comp_method_st** %comp, align 8, !dbg !6122
  %84 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6123
  %call106 = call %struct.comp_method_st* @SSL_get_current_expansion(%struct.ssl_st* %84), !dbg !6124
  store %struct.comp_method_st* %call106, %struct.comp_method_st** %expansion, align 8, !dbg !6125
  %85 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6126
  %86 = load %struct.comp_method_st*, %struct.comp_method_st** %comp, align 8, !dbg !6127
  %tobool107 = icmp ne %struct.comp_method_st* %86, null, !dbg !6127
  br i1 %tobool107, label %cond.true108, label %cond.false110, !dbg !6127

cond.true108:                                     ; preds = %if.end100
  %87 = load %struct.comp_method_st*, %struct.comp_method_st** %comp, align 8, !dbg !6128
  %call109 = call i8* @SSL_COMP_get_name(%struct.comp_method_st* %87), !dbg !6129
  br label %cond.end111, !dbg !6130

cond.false110:                                    ; preds = %if.end100
  br label %cond.end111, !dbg !6131

cond.end111:                                      ; preds = %cond.false110, %cond.true108
  %cond112 = phi i8* [ %call109, %cond.true108 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.549, i32 0, i32 0), %cond.false110 ], !dbg !6133
  %call113 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %85, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.548, i32 0, i32 0), i8* %cond112), !dbg !6135
  %88 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6136
  %89 = load %struct.comp_method_st*, %struct.comp_method_st** %expansion, align 8, !dbg !6137
  %tobool114 = icmp ne %struct.comp_method_st* %89, null, !dbg !6137
  br i1 %tobool114, label %cond.true115, label %cond.false117, !dbg !6137

cond.true115:                                     ; preds = %cond.end111
  %90 = load %struct.comp_method_st*, %struct.comp_method_st** %expansion, align 8, !dbg !6138
  %call116 = call i8* @SSL_COMP_get_name(%struct.comp_method_st* %90), !dbg !6139
  br label %cond.end118, !dbg !6140

cond.false117:                                    ; preds = %cond.end111
  br label %cond.end118, !dbg !6141

cond.end118:                                      ; preds = %cond.false117, %cond.true115
  %cond119 = phi i8* [ %call116, %cond.true115 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.549, i32 0, i32 0), %cond.false117 ], !dbg !6142
  %call120 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %88, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.550, i32 0, i32 0), i8* %cond119), !dbg !6143
  %91 = load i32, i32* getelementptr inbounds (%struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* @next_proto, i32 0, i32 2), align 8, !dbg !6144
  %cmp121 = icmp ne i32 %91, -1, !dbg !6146
  br i1 %cmp121, label %if.then123, label %if.end127, !dbg !6147

if.then123:                                       ; preds = %cond.end118
  call void @llvm.dbg.declare(metadata i8** %proto, metadata !6148, metadata !439), !dbg !6150
  call void @llvm.dbg.declare(metadata i32* %proto_len, metadata !6151, metadata !439), !dbg !6152
  %92 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6153
  call void @SSL_get0_next_proto_negotiated(%struct.ssl_st* %92, i8** %proto, i32* %proto_len), !dbg !6154
  %93 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6155
  %94 = load i32, i32* getelementptr inbounds (%struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* @next_proto, i32 0, i32 2), align 8, !dbg !6156
  %call124 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %93, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.551, i32 0, i32 0), i32 %94), !dbg !6157
  %95 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6158
  %96 = load i8*, i8** %proto, align 8, !dbg !6159
  %97 = load i32, i32* %proto_len, align 4, !dbg !6160
  %call125 = call i32 @BIO_write(%struct.bio_st* %95, i8* %96, i32 %97), !dbg !6161
  %98 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6162
  %call126 = call i32 @BIO_write(%struct.bio_st* %98, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.511, i32 0, i32 0), i32 1), !dbg !6163
  br label %if.end127, !dbg !6164

if.end127:                                        ; preds = %if.then123, %cond.end118
  call void @llvm.dbg.declare(metadata i8** %proto128, metadata !6165, metadata !439), !dbg !6167
  call void @llvm.dbg.declare(metadata i32* %proto_len129, metadata !6168, metadata !439), !dbg !6169
  %99 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6170
  call void @SSL_get0_alpn_selected(%struct.ssl_st* %99, i8** %proto128, i32* %proto_len129), !dbg !6171
  %100 = load i32, i32* %proto_len129, align 4, !dbg !6172
  %cmp130 = icmp ugt i32 %100, 0, !dbg !6174
  br i1 %cmp130, label %if.then132, label %if.else136, !dbg !6175

if.then132:                                       ; preds = %if.end127
  %101 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6176
  %call133 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %101, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.552, i32 0, i32 0)), !dbg !6178
  %102 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6179
  %103 = load i8*, i8** %proto128, align 8, !dbg !6180
  %104 = load i32, i32* %proto_len129, align 4, !dbg !6181
  %call134 = call i32 @BIO_write(%struct.bio_st* %102, i8* %103, i32 %104), !dbg !6182
  %105 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6183
  %call135 = call i32 @BIO_write(%struct.bio_st* %105, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.511, i32 0, i32 0), i32 1), !dbg !6184
  br label %if.end138, !dbg !6185

if.else136:                                       ; preds = %if.end127
  %106 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6186
  %call137 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %106, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.553, i32 0, i32 0)), !dbg !6187
  br label %if.end138

if.end138:                                        ; preds = %if.else136, %if.then132
  call void @llvm.dbg.declare(metadata %struct.srtp_protection_profile_st** %srtp_profile, metadata !6188, metadata !439), !dbg !6196
  %107 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6197
  %call139 = call %struct.srtp_protection_profile_st* @SSL_get_selected_srtp_profile(%struct.ssl_st* %107), !dbg !6198
  store %struct.srtp_protection_profile_st* %call139, %struct.srtp_protection_profile_st** %srtp_profile, align 8, !dbg !6196
  %108 = load %struct.srtp_protection_profile_st*, %struct.srtp_protection_profile_st** %srtp_profile, align 8, !dbg !6199
  %tobool140 = icmp ne %struct.srtp_protection_profile_st* %108, null, !dbg !6199
  br i1 %tobool140, label %if.then141, label %if.end143, !dbg !6201

if.then141:                                       ; preds = %if.end138
  %109 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6202
  %110 = load %struct.srtp_protection_profile_st*, %struct.srtp_protection_profile_st** %srtp_profile, align 8, !dbg !6203
  %name = getelementptr inbounds %struct.srtp_protection_profile_st, %struct.srtp_protection_profile_st* %110, i32 0, i32 0, !dbg !6204
  %111 = load i8*, i8** %name, align 8, !dbg !6204
  %call142 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %109, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.554, i32 0, i32 0), i8* %111), !dbg !6205
  br label %if.end143, !dbg !6205

if.end143:                                        ; preds = %if.then141, %if.end138
  %112 = load i32, i32* %istls13, align 4, !dbg !6206
  %tobool144 = icmp ne i32 %112, 0, !dbg !6206
  br i1 %tobool144, label %if.then145, label %if.else155, !dbg !6208

if.then145:                                       ; preds = %if.end143
  %113 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6209
  %call146 = call i32 @SSL_get_early_data_status(%struct.ssl_st* %113), !dbg !6211
  switch i32 %call146, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb148
    i32 2, label %sw.bb150
  ], !dbg !6212

sw.bb:                                            ; preds = %if.then145
  %114 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6213
  %call147 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %114, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.555, i32 0, i32 0)), !dbg !6215
  br label %sw.epilog, !dbg !6216

sw.bb148:                                         ; preds = %if.then145
  %115 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6217
  %call149 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %115, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.556, i32 0, i32 0)), !dbg !6218
  br label %sw.epilog, !dbg !6219

sw.bb150:                                         ; preds = %if.then145
  %116 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6220
  %call151 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %116, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.557, i32 0, i32 0)), !dbg !6221
  br label %sw.epilog, !dbg !6222

sw.epilog:                                        ; preds = %if.then145, %sw.bb150, %sw.bb148, %sw.bb
  %117 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6223
  %call152 = call i64 @SSL_get_verify_result(%struct.ssl_st* %117), !dbg !6224
  store i64 %call152, i64* %verify_result, align 8, !dbg !6225
  %118 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6226
  %119 = load i64, i64* %verify_result, align 8, !dbg !6227
  %120 = load i64, i64* %verify_result, align 8, !dbg !6228
  %call153 = call i8* @X509_verify_cert_error_string(i64 %120), !dbg !6229
  %call154 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %118, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.558, i32 0, i32 0), i64 %119, i8* %call153), !dbg !6230
  br label %if.end158, !dbg !6231

if.else155:                                       ; preds = %if.end143
  %121 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6232
  %122 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6234
  %call156 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %122), !dbg !6235
  %call157 = call i32 @SSL_SESSION_print(%struct.bio_st* %121, %struct.ssl_session_st* %call156), !dbg !6236
  br label %if.end158

if.end158:                                        ; preds = %if.else155, %sw.epilog
  %123 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6238
  %call159 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %123), !dbg !6240
  %cmp160 = icmp ne %struct.ssl_session_st* %call159, null, !dbg !6241
  br i1 %cmp160, label %land.lhs.true162, label %if.end189, !dbg !6242

land.lhs.true162:                                 ; preds = %if.end158
  %124 = load i8*, i8** @keymatexportlabel, align 8, !dbg !6243
  %cmp163 = icmp ne i8* %124, null, !dbg !6245
  br i1 %cmp163, label %if.then165, label %if.end189, !dbg !6246

if.then165:                                       ; preds = %land.lhs.true162
  %125 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6247
  %call166 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %125, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.559, i32 0, i32 0)), !dbg !6249
  %126 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6250
  %127 = load i8*, i8** @keymatexportlabel, align 8, !dbg !6251
  %call167 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %126, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.560, i32 0, i32 0), i8* %127), !dbg !6252
  %128 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6253
  %129 = load i32, i32* @keymatexportlen, align 4, !dbg !6254
  %call168 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %128, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.561, i32 0, i32 0), i32 %129), !dbg !6255
  %130 = load i32, i32* @keymatexportlen, align 4, !dbg !6256
  %call169 = call i8* @app_malloc(i32 %130, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.562, i32 0, i32 0)), !dbg !6257
  store i8* %call169, i8** %exportedkeymat, align 8, !dbg !6258
  %131 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !6259
  %132 = load i8*, i8** %exportedkeymat, align 8, !dbg !6261
  %133 = load i32, i32* @keymatexportlen, align 4, !dbg !6262
  %conv170 = sext i32 %133 to i64, !dbg !6262
  %134 = load i8*, i8** @keymatexportlabel, align 8, !dbg !6263
  %135 = load i8*, i8** @keymatexportlabel, align 8, !dbg !6264
  %call171 = call i64 @strlen(i8* %135) #9, !dbg !6265
  %call172 = call i32 @SSL_export_keying_material(%struct.ssl_st* %131, i8* %132, i64 %conv170, i8* %134, i64 %call171, i8* null, i64 0, i32 0), !dbg !6266
  %tobool173 = icmp ne i32 %call172, 0, !dbg !6266
  br i1 %tobool173, label %if.else176, label %if.then174, !dbg !6267

if.then174:                                       ; preds = %if.then165
  %136 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6268
  %call175 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %136, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.563, i32 0, i32 0)), !dbg !6270
  br label %if.end188, !dbg !6271

if.else176:                                       ; preds = %if.then165
  %137 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6272
  %call177 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %137, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.564, i32 0, i32 0)), !dbg !6274
  store i32 0, i32* %i, align 4, !dbg !6275
  br label %for.cond178, !dbg !6277

for.cond178:                                      ; preds = %for.inc184, %if.else176
  %138 = load i32, i32* %i, align 4, !dbg !6278
  %139 = load i32, i32* @keymatexportlen, align 4, !dbg !6281
  %cmp179 = icmp slt i32 %138, %139, !dbg !6282
  br i1 %cmp179, label %for.body181, label %for.end186, !dbg !6283

for.body181:                                      ; preds = %for.cond178
  %140 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6284
  %141 = load i32, i32* %i, align 4, !dbg !6285
  %idxprom = sext i32 %141 to i64, !dbg !6286
  %142 = load i8*, i8** %exportedkeymat, align 8, !dbg !6286
  %arrayidx = getelementptr inbounds i8, i8* %142, i64 %idxprom, !dbg !6286
  %143 = load i8, i8* %arrayidx, align 1, !dbg !6286
  %conv182 = zext i8 %143 to i32, !dbg !6286
  %call183 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %140, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.565, i32 0, i32 0), i32 %conv182), !dbg !6287
  br label %for.inc184, !dbg !6287

for.inc184:                                       ; preds = %for.body181
  %144 = load i32, i32* %i, align 4, !dbg !6288
  %inc185 = add nsw i32 %144, 1, !dbg !6288
  store i32 %inc185, i32* %i, align 4, !dbg !6288
  br label %for.cond178, !dbg !6290, !llvm.loop !6291

for.end186:                                       ; preds = %for.cond178
  %145 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6293
  %call187 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %145, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.511, i32 0, i32 0)), !dbg !6294
  br label %if.end188

if.end188:                                        ; preds = %for.end186, %if.then174
  %146 = load i8*, i8** %exportedkeymat, align 8, !dbg !6295
  call void @CRYPTO_free(i8* %146, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 3416), !dbg !6296
  br label %if.end189, !dbg !6297

if.end189:                                        ; preds = %if.end188, %land.lhs.true162, %if.end158
  %147 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6298
  %call190 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %147, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.524, i32 0, i32 0)), !dbg !6299
  %148 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !6300
  call void @X509_free(%struct.x509_st* %148), !dbg !6301
  %149 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !6302
  %call191 = call i64 @BIO_ctrl(%struct.bio_st* %149, i32 11, i64 0, i8* null), !dbg !6303
  %conv192 = trunc i64 %call191 to i32, !dbg !6304
  ret void, !dbg !6305
}

; Function Attrs: nounwind uwtable
define internal void @do_ssl_shutdown(%struct.ssl_st* %ssl) #0 !dbg !6306 {
entry:
  %ssl.addr = alloca %struct.ssl_st*, align 8
  %ret = alloca i32, align 4
  store %struct.ssl_st* %ssl, %struct.ssl_st** %ssl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %ssl.addr, metadata !6309, metadata !439), !dbg !6310
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6311, metadata !439), !dbg !6312
  br label %do.body, !dbg !6313, !llvm.loop !6314

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct.ssl_st*, %struct.ssl_st** %ssl.addr, align 8, !dbg !6315
  %call = call i32 @SSL_shutdown(%struct.ssl_st* %0), !dbg !6317
  store i32 %call, i32* %ret, align 4, !dbg !6318
  %1 = load i32, i32* %ret, align 4, !dbg !6319
  %cmp = icmp slt i32 %1, 0, !dbg !6321
  br i1 %cmp, label %if.then, label %if.end, !dbg !6322

if.then:                                          ; preds = %do.body
  %2 = load %struct.ssl_st*, %struct.ssl_st** %ssl.addr, align 8, !dbg !6323
  %3 = load i32, i32* %ret, align 4, !dbg !6325
  %call1 = call i32 @SSL_get_error(%struct.ssl_st* %2, i32 %3), !dbg !6326
  switch i32 %call1, label %sw.epilog [
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
  ], !dbg !6327

sw.bb:                                            ; preds = %if.then, %if.then, %if.then, %if.then
  br label %do.cond, !dbg !6328

sw.epilog:                                        ; preds = %if.then
  store i32 0, i32* %ret, align 4, !dbg !6330
  br label %if.end, !dbg !6331

if.end:                                           ; preds = %sw.epilog, %do.body
  br label %do.cond, !dbg !6332

do.cond:                                          ; preds = %if.end, %sw.bb
  %4 = load i32, i32* %ret, align 4, !dbg !6333
  %cmp2 = icmp slt i32 %4, 0, !dbg !6335
  br i1 %cmp2, label %do.body, label %do.end, !dbg !6336, !llvm.loop !6314

do.end:                                           ; preds = %do.cond
  ret void, !dbg !6337
}

declare i32 @SSL_has_pending(%struct.ssl_st*) #2

declare i32 @fileno_stdout() #2

declare i32 @SSL_write(%struct.ssl_st*, i8*, i32) #2

declare void @wait_for_async(%struct.ssl_st*) #2

declare i32 @raw_write_stdout(i8*, i32) #2

declare i32 @SSL_read(%struct.ssl_st*, i8*, i32) #2

declare i32 @raw_read_stdin(i8*, i32) #2

declare i32 @SSL_renegotiate(%struct.ssl_st*) #2

declare i32 @SSL_key_update(%struct.ssl_st*, i32) #2

; Function Attrs: nounwind
declare i32 @shutdown(i32, i32) #7

declare void @SSL_free(%struct.ssl_st*) #2

declare void @SSL_CTX_free(%struct.ssl_ctx_st*) #2

declare void @X509_free(%struct.x509_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @sk_X509_CRL_pop_free(%struct.stack_st_X509_CRL* %sk, void (%struct.X509_crl_st*)* %freefunc) #5 !dbg !6338 {
entry:
  %sk.addr = alloca %struct.stack_st_X509_CRL*, align 8
  %freefunc.addr = alloca void (%struct.X509_crl_st*)*, align 8
  store %struct.stack_st_X509_CRL* %sk, %struct.stack_st_X509_CRL** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509_CRL** %sk.addr, metadata !6345, metadata !439), !dbg !6346
  store void (%struct.X509_crl_st*)* %freefunc, void (%struct.X509_crl_st*)** %freefunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.X509_crl_st*)** %freefunc.addr, metadata !6347, metadata !439), !dbg !6348
  %0 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %sk.addr, align 8, !dbg !6349
  %1 = bitcast %struct.stack_st_X509_CRL* %0 to %struct.stack_st*, !dbg !6350
  %2 = load void (%struct.X509_crl_st*)*, void (%struct.X509_crl_st*)** %freefunc.addr, align 8, !dbg !6351
  %3 = bitcast void (%struct.X509_crl_st*)* %2 to void (i8*)*, !dbg !6352
  call void @OPENSSL_sk_pop_free(%struct.stack_st* %1, void (i8*)* %3), !dbg !6353
  ret void, !dbg !6354
}

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @sk_X509_pop_free(%struct.stack_st_X509* %sk, void (%struct.x509_st*)* %freefunc) #5 !dbg !6355 {
entry:
  %sk.addr = alloca %struct.stack_st_X509*, align 8
  %freefunc.addr = alloca void (%struct.x509_st*)*, align 8
  store %struct.stack_st_X509* %sk, %struct.stack_st_X509** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509** %sk.addr, metadata !6362, metadata !439), !dbg !6363
  store void (%struct.x509_st*)* %freefunc, void (%struct.x509_st*)** %freefunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.x509_st*)** %freefunc.addr, metadata !6364, metadata !439), !dbg !6365
  %0 = load %struct.stack_st_X509*, %struct.stack_st_X509** %sk.addr, align 8, !dbg !6366
  %1 = bitcast %struct.stack_st_X509* %0 to %struct.stack_st*, !dbg !6367
  %2 = load void (%struct.x509_st*)*, void (%struct.x509_st*)** %freefunc.addr, align 8, !dbg !6368
  %3 = bitcast void (%struct.x509_st*)* %2 to void (i8*)*, !dbg !6369
  call void @OPENSSL_sk_pop_free(%struct.stack_st* %1, void (i8*)* %3), !dbg !6370
  ret void, !dbg !6371
}

declare void @X509_VERIFY_PARAM_free(%struct.X509_VERIFY_PARAM_st*) #2

declare void @ssl_excert_free(%struct.ssl_excert_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @sk_OPENSSL_STRING_free(%struct.stack_st_OPENSSL_STRING* %sk) #5 !dbg !6372 {
entry:
  %sk.addr = alloca %struct.stack_st_OPENSSL_STRING*, align 8
  store %struct.stack_st_OPENSSL_STRING* %sk, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_OPENSSL_STRING** %sk.addr, metadata !6375, metadata !439), !dbg !6376
  %0 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8, !dbg !6377
  %1 = bitcast %struct.stack_st_OPENSSL_STRING* %0 to %struct.stack_st*, !dbg !6378
  call void @OPENSSL_sk_free(%struct.stack_st* %1), !dbg !6379
  ret void, !dbg !6380
}

declare void @SSL_CONF_CTX_free(%struct.ssl_conf_ctx_st*) #2

declare void @release_engine(%struct.engine_st*) #2

declare %struct.stack_st* @OPENSSL_sk_new_null() #2

declare i32 @OPENSSL_sk_push(%struct.stack_st*, i8*) #2

declare void @OPENSSL_sk_pop_free(%struct.stack_st*, void (i8*)*) #2

declare i8* @OPENSSL_hexstr2buf(i8*, i64*) #2

declare i32 @SSL_SESSION_up_ref(%struct.ssl_session_st*) #2

declare %struct.ssl_cipher_st* @SSL_CIPHER_find(%struct.ssl_st*, i8*) #2

declare %struct.ssl_session_st* @SSL_SESSION_new() #2

declare i32 @SSL_SESSION_set1_master_key(%struct.ssl_session_st*, i8*, i64) #2

declare i32 @SSL_SESSION_set_cipher(%struct.ssl_session_st*, %struct.ssl_cipher_st*) #2

declare i32 @SSL_SESSION_set_protocol_version(%struct.ssl_session_st*, i32) #2

declare %struct.ssl_cipher_st* @SSL_SESSION_get0_cipher(%struct.ssl_session_st*) #2

declare %struct.evp_md_st* @SSL_CIPHER_get_handshake_digest(%struct.ssl_cipher_st*) #2

declare i32 @SSL_select_next_proto(i8**, i8*, i8*, i32, i8*, i32) #2

declare i32 @PEM_write_bio(%struct.bio_st*, i8*, i8*, i8*, i64) #2

declare i8* @SSL_get_servername(%struct.ssl_st*, i32) #2

declare i32 @SSL_get_servername_type(%struct.ssl_st*) #2

declare i32 @SSL_session_reused(%struct.ssl_st*) #2

declare i32 @password_callback(i8*, i32, i32, %struct.pw_cb_data*) #2

declare %struct.bignum_st* @SSL_get_srp_N(%struct.ssl_st*) #2

declare %struct.bignum_st* @SSL_get_srp_g(%struct.ssl_st*) #2

declare i32 @BN_print(%struct.bio_st*, %struct.bignum_st*) #2

declare i8* @SRP_check_known_gN_param(%struct.bignum_st*, %struct.bignum_st*) #2

declare i32 @BN_num_bits(%struct.bignum_st*) #2

; Function Attrs: nounwind uwtable
define internal i32 @srp_Verify_N_and_g(%struct.bignum_st* %N, %struct.bignum_st* %g) #0 !dbg !6381 {
entry:
  %N.addr = alloca %struct.bignum_st*, align 8
  %g.addr = alloca %struct.bignum_st*, align 8
  %bn_ctx = alloca %struct.bignum_ctx*, align 8
  %p = alloca %struct.bignum_st*, align 8
  %r = alloca %struct.bignum_st*, align 8
  %ret = alloca i32, align 4
  store %struct.bignum_st* %N, %struct.bignum_st** %N.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bignum_st** %N.addr, metadata !6386, metadata !439), !dbg !6387
  store %struct.bignum_st* %g, %struct.bignum_st** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bignum_st** %g.addr, metadata !6388, metadata !439), !dbg !6389
  call void @llvm.dbg.declare(metadata %struct.bignum_ctx** %bn_ctx, metadata !6390, metadata !439), !dbg !6394
  %call = call %struct.bignum_ctx* @BN_CTX_new(), !dbg !6395
  store %struct.bignum_ctx* %call, %struct.bignum_ctx** %bn_ctx, align 8, !dbg !6394
  call void @llvm.dbg.declare(metadata %struct.bignum_st** %p, metadata !6396, metadata !439), !dbg !6397
  %call1 = call %struct.bignum_st* @BN_new(), !dbg !6398
  store %struct.bignum_st* %call1, %struct.bignum_st** %p, align 8, !dbg !6397
  call void @llvm.dbg.declare(metadata %struct.bignum_st** %r, metadata !6399, metadata !439), !dbg !6400
  %call2 = call %struct.bignum_st* @BN_new(), !dbg !6401
  store %struct.bignum_st* %call2, %struct.bignum_st** %r, align 8, !dbg !6400
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6402, metadata !439), !dbg !6403
  %0 = load %struct.bignum_st*, %struct.bignum_st** %g.addr, align 8, !dbg !6404
  %cmp = icmp ne %struct.bignum_st* %0, null, !dbg !6405
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !6406

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.bignum_st*, %struct.bignum_st** %N.addr, align 8, !dbg !6407
  %cmp3 = icmp ne %struct.bignum_st* %1, null, !dbg !6409
  br i1 %cmp3, label %land.lhs.true4, label %land.end, !dbg !6410

land.lhs.true4:                                   ; preds = %land.lhs.true
  %2 = load %struct.bignum_ctx*, %struct.bignum_ctx** %bn_ctx, align 8, !dbg !6411
  %cmp5 = icmp ne %struct.bignum_ctx* %2, null, !dbg !6413
  br i1 %cmp5, label %land.lhs.true6, label %land.end, !dbg !6414

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %3 = load %struct.bignum_st*, %struct.bignum_st** %N.addr, align 8, !dbg !6415
  %call7 = call i32 @BN_is_odd(%struct.bignum_st* %3), !dbg !6417
  %tobool = icmp ne i32 %call7, 0, !dbg !6417
  br i1 %tobool, label %land.lhs.true8, label %land.end, !dbg !6418

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %4 = load %struct.bignum_st*, %struct.bignum_st** %N.addr, align 8, !dbg !6419
  %5 = load %struct.bignum_ctx*, %struct.bignum_ctx** %bn_ctx, align 8, !dbg !6420
  %call9 = call i32 @BN_is_prime_ex(%struct.bignum_st* %4, i32 64, %struct.bignum_ctx* %5, %struct.bn_gencb_st* null), !dbg !6421
  %cmp10 = icmp eq i32 %call9, 1, !dbg !6422
  br i1 %cmp10, label %land.lhs.true11, label %land.end, !dbg !6423

land.lhs.true11:                                  ; preds = %land.lhs.true8
  %6 = load %struct.bignum_st*, %struct.bignum_st** %p, align 8, !dbg !6424
  %cmp12 = icmp ne %struct.bignum_st* %6, null, !dbg !6425
  br i1 %cmp12, label %land.lhs.true13, label %land.end, !dbg !6426

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %7 = load %struct.bignum_st*, %struct.bignum_st** %p, align 8, !dbg !6427
  %8 = load %struct.bignum_st*, %struct.bignum_st** %N.addr, align 8, !dbg !6428
  %call14 = call i32 @BN_rshift1(%struct.bignum_st* %7, %struct.bignum_st* %8), !dbg !6429
  %tobool15 = icmp ne i32 %call14, 0, !dbg !6429
  br i1 %tobool15, label %land.lhs.true16, label %land.end, !dbg !6430

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %9 = load %struct.bignum_st*, %struct.bignum_st** %p, align 8, !dbg !6431
  %10 = load %struct.bignum_ctx*, %struct.bignum_ctx** %bn_ctx, align 8, !dbg !6432
  %call17 = call i32 @BN_is_prime_ex(%struct.bignum_st* %9, i32 64, %struct.bignum_ctx* %10, %struct.bn_gencb_st* null), !dbg !6433
  %cmp18 = icmp eq i32 %call17, 1, !dbg !6434
  br i1 %cmp18, label %land.lhs.true19, label %land.end, !dbg !6435

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %11 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !6436
  %cmp20 = icmp ne %struct.bignum_st* %11, null, !dbg !6437
  br i1 %cmp20, label %land.lhs.true21, label %land.end, !dbg !6438

land.lhs.true21:                                  ; preds = %land.lhs.true19
  %12 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !6439
  %13 = load %struct.bignum_st*, %struct.bignum_st** %g.addr, align 8, !dbg !6440
  %14 = load %struct.bignum_st*, %struct.bignum_st** %p, align 8, !dbg !6441
  %15 = load %struct.bignum_st*, %struct.bignum_st** %N.addr, align 8, !dbg !6442
  %16 = load %struct.bignum_ctx*, %struct.bignum_ctx** %bn_ctx, align 8, !dbg !6443
  %call22 = call i32 @BN_mod_exp(%struct.bignum_st* %12, %struct.bignum_st* %13, %struct.bignum_st* %14, %struct.bignum_st* %15, %struct.bignum_ctx* %16), !dbg !6444
  %tobool23 = icmp ne i32 %call22, 0, !dbg !6444
  br i1 %tobool23, label %land.lhs.true24, label %land.end, !dbg !6445

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %17 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !6446
  %call25 = call i32 @BN_add_word(%struct.bignum_st* %17, i64 1), !dbg !6447
  %tobool26 = icmp ne i32 %call25, 0, !dbg !6447
  br i1 %tobool26, label %land.rhs, label %land.end, !dbg !6448

land.rhs:                                         ; preds = %land.lhs.true24
  %18 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !6449
  %19 = load %struct.bignum_st*, %struct.bignum_st** %N.addr, align 8, !dbg !6450
  %call27 = call i32 @BN_cmp(%struct.bignum_st* %18, %struct.bignum_st* %19), !dbg !6451
  %cmp28 = icmp eq i32 %call27, 0, !dbg !6452
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true24, %land.lhs.true21, %land.lhs.true19, %land.lhs.true16, %land.lhs.true13, %land.lhs.true11, %land.lhs.true8, %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %entry
  %20 = phi i1 [ false, %land.lhs.true24 ], [ false, %land.lhs.true21 ], [ false, %land.lhs.true19 ], [ false, %land.lhs.true16 ], [ false, %land.lhs.true13 ], [ false, %land.lhs.true11 ], [ false, %land.lhs.true8 ], [ false, %land.lhs.true6 ], [ false, %land.lhs.true4 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp28, %land.rhs ]
  %land.ext = zext i1 %20 to i32, !dbg !6453
  store i32 %land.ext, i32* %ret, align 4, !dbg !6403
  %21 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !6454
  call void @BN_free(%struct.bignum_st* %21), !dbg !6455
  %22 = load %struct.bignum_st*, %struct.bignum_st** %p, align 8, !dbg !6456
  call void @BN_free(%struct.bignum_st* %22), !dbg !6457
  %23 = load %struct.bignum_ctx*, %struct.bignum_ctx** %bn_ctx, align 8, !dbg !6458
  call void @BN_CTX_free(%struct.bignum_ctx* %23), !dbg !6459
  %24 = load i32, i32* %ret, align 4, !dbg !6460
  ret i32 %24, !dbg !6461
}

declare %struct.bignum_ctx* @BN_CTX_new() #2

declare %struct.bignum_st* @BN_new() #2

declare i32 @BN_is_odd(%struct.bignum_st*) #2

declare i32 @BN_is_prime_ex(%struct.bignum_st*, i32, %struct.bignum_ctx*, %struct.bn_gencb_st*) #2

declare i32 @BN_rshift1(%struct.bignum_st*, %struct.bignum_st*) #2

declare i32 @BN_mod_exp(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) #2

declare i32 @BN_add_word(%struct.bignum_st*, i64) #2

declare i32 @BN_cmp(%struct.bignum_st*, %struct.bignum_st*) #2

declare void @BN_free(%struct.bignum_st*) #2

declare void @BN_CTX_free(%struct.bignum_ctx*) #2

declare i32 @PEM_write_bio_SSL_SESSION(%struct.bio_st*, %struct.ssl_session_st*) #2

declare i32 @SSL_version(%struct.ssl_st*) #2

declare i32 @SSL_SESSION_print(%struct.bio_st*, %struct.ssl_session_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @sk_OPENSSL_STRING_num(%struct.stack_st_OPENSSL_STRING* %sk) #5 !dbg !6462 {
entry:
  %sk.addr = alloca %struct.stack_st_OPENSSL_STRING*, align 8
  store %struct.stack_st_OPENSSL_STRING* %sk, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_OPENSSL_STRING** %sk.addr, metadata !6467, metadata !439), !dbg !6468
  %0 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8, !dbg !6469
  %1 = bitcast %struct.stack_st_OPENSSL_STRING* %0 to %struct.stack_st*, !dbg !6470
  %call = call i32 @OPENSSL_sk_num(%struct.stack_st* %1), !dbg !6471
  ret i32 %call, !dbg !6472
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @sk_OPENSSL_STRING_value(%struct.stack_st_OPENSSL_STRING* %sk, i32 %idx) #5 !dbg !6473 {
entry:
  %sk.addr = alloca %struct.stack_st_OPENSSL_STRING*, align 8
  %idx.addr = alloca i32, align 4
  store %struct.stack_st_OPENSSL_STRING* %sk, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_OPENSSL_STRING** %sk.addr, metadata !6476, metadata !439), !dbg !6477
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !6478, metadata !439), !dbg !6479
  %0 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8, !dbg !6480
  %1 = bitcast %struct.stack_st_OPENSSL_STRING* %0 to %struct.stack_st*, !dbg !6481
  %2 = load i32, i32* %idx.addr, align 4, !dbg !6482
  %call = call i8* @OPENSSL_sk_value(%struct.stack_st* %1, i32 %2), !dbg !6483
  ret i8* %call, !dbg !6484
}

; Function Attrs: nounwind uwtable
define internal i32 @tlsa_import_rr(%struct.ssl_st* %con, i8* %rrdata) #0 !dbg !408 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.ssl_st*, align 8
  %rrdata.addr = alloca i8*, align 8
  %f = alloca %struct.tlsa_field*, align 8
  %ret = alloca i32, align 4
  %cp = alloca i8*, align 8
  %len = alloca i64, align 8
  store %struct.ssl_st* %con, %struct.ssl_st** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %con.addr, metadata !6485, metadata !439), !dbg !6486
  store i8* %rrdata, i8** %rrdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rrdata.addr, metadata !6487, metadata !439), !dbg !6488
  call void @llvm.dbg.declare(metadata %struct.tlsa_field** %f, metadata !6489, metadata !439), !dbg !6491
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6492, metadata !439), !dbg !6493
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !6494, metadata !439), !dbg !6495
  %0 = load i8*, i8** %rrdata.addr, align 8, !dbg !6496
  store i8* %0, i8** %cp, align 8, !dbg !6495
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6497, metadata !439), !dbg !6498
  store i64 0, i64* %len, align 8, !dbg !6498
  store %struct.tlsa_field* getelementptr inbounds ([5 x %struct.tlsa_field], [5 x %struct.tlsa_field]* @tlsa_import_rr.tlsa_fields, i32 0, i32 0), %struct.tlsa_field** %f, align 8, !dbg !6499
  br label %for.cond, !dbg !6501

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.tlsa_field*, %struct.tlsa_field** %f, align 8, !dbg !6502
  %var = getelementptr inbounds %struct.tlsa_field, %struct.tlsa_field* %1, i32 0, i32 0, !dbg !6505
  %2 = load i8*, i8** %var, align 8, !dbg !6505
  %tobool = icmp ne i8* %2, null, !dbg !6506
  br i1 %tobool, label %for.body, label %for.end, !dbg !6506

for.body:                                         ; preds = %for.cond
  %3 = load %struct.tlsa_field*, %struct.tlsa_field** %f, align 8, !dbg !6507
  %parser = getelementptr inbounds %struct.tlsa_field, %struct.tlsa_field* %3, i32 0, i32 2, !dbg !6510
  %4 = load i64 (i8**, i8*)*, i64 (i8**, i8*)** %parser, align 8, !dbg !6510
  %5 = load %struct.tlsa_field*, %struct.tlsa_field** %f, align 8, !dbg !6511
  %var1 = getelementptr inbounds %struct.tlsa_field, %struct.tlsa_field* %5, i32 0, i32 0, !dbg !6512
  %6 = load i8*, i8** %var1, align 8, !dbg !6512
  %call = call i64 %4(i8** %cp, i8* %6), !dbg !6507
  store i64 %call, i64* %len, align 8, !dbg !6513
  %cmp = icmp sle i64 %call, 0, !dbg !6514
  br i1 %cmp, label %if.then, label %if.end, !dbg !6515

if.then:                                          ; preds = %for.body
  %7 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6516
  %8 = load i8*, i8** @prog, align 8, !dbg !6518
  %9 = load %struct.tlsa_field*, %struct.tlsa_field** %f, align 8, !dbg !6519
  %name = getelementptr inbounds %struct.tlsa_field, %struct.tlsa_field* %9, i32 0, i32 1, !dbg !6520
  %10 = load i8*, i8** %name, align 8, !dbg !6520
  %11 = load i8*, i8** %rrdata.addr, align 8, !dbg !6521
  %call2 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.529, i32 0, i32 0), i8* %8, i8* %10, i8* %11), !dbg !6522
  store i32 0, i32* %retval, align 4, !dbg !6523
  br label %return, !dbg !6523

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6524

for.inc:                                          ; preds = %if.end
  %12 = load %struct.tlsa_field*, %struct.tlsa_field** %f, align 8, !dbg !6525
  %incdec.ptr = getelementptr inbounds %struct.tlsa_field, %struct.tlsa_field* %12, i32 1, !dbg !6525
  store %struct.tlsa_field* %incdec.ptr, %struct.tlsa_field** %f, align 8, !dbg !6525
  br label %for.cond, !dbg !6527, !llvm.loop !6528

for.end:                                          ; preds = %for.cond
  %13 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6530
  %14 = load i8, i8* @tlsa_import_rr.usage, align 1, !dbg !6531
  %15 = load i8, i8* @tlsa_import_rr.selector, align 1, !dbg !6532
  %16 = load i8, i8* @tlsa_import_rr.mtype, align 1, !dbg !6533
  %17 = load i8*, i8** @tlsa_import_rr.data, align 8, !dbg !6534
  %18 = load i64, i64* %len, align 8, !dbg !6535
  %call3 = call i32 @SSL_dane_tlsa_add(%struct.ssl_st* %13, i8 zeroext %14, i8 zeroext %15, i8 zeroext %16, i8* %17, i64 %18), !dbg !6536
  store i32 %call3, i32* %ret, align 4, !dbg !6537
  %19 = load i8*, i8** @tlsa_import_rr.data, align 8, !dbg !6538
  call void @CRYPTO_free(i8* %19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 534), !dbg !6539
  %20 = load i32, i32* %ret, align 4, !dbg !6540
  %cmp4 = icmp eq i32 %20, 0, !dbg !6542
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !6543

if.then5:                                         ; preds = %for.end
  %21 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6544
  call void @ERR_print_errors(%struct.bio_st* %21), !dbg !6546
  %22 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6547
  %23 = load i8*, i8** @prog, align 8, !dbg !6548
  %24 = load i8*, i8** %rrdata.addr, align 8, !dbg !6549
  %call6 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %22, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.530, i32 0, i32 0), i8* %23, i8* %24), !dbg !6550
  store i32 0, i32* %retval, align 4, !dbg !6551
  br label %return, !dbg !6551

if.end7:                                          ; preds = %for.end
  %25 = load i32, i32* %ret, align 4, !dbg !6552
  %cmp8 = icmp slt i32 %25, 0, !dbg !6554
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !6555

if.then9:                                         ; preds = %if.end7
  %26 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6556
  call void @ERR_print_errors(%struct.bio_st* %26), !dbg !6558
  %27 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6559
  %28 = load i8*, i8** @prog, align 8, !dbg !6560
  %29 = load i8*, i8** %rrdata.addr, align 8, !dbg !6561
  %call10 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %27, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.531, i32 0, i32 0), i8* %28, i8* %29), !dbg !6562
  store i32 0, i32* %retval, align 4, !dbg !6563
  br label %return, !dbg !6563

if.end11:                                         ; preds = %if.end7
  %30 = load i32, i32* %ret, align 4, !dbg !6564
  store i32 %30, i32* %retval, align 4, !dbg !6565
  br label %return, !dbg !6565

return:                                           ; preds = %if.end11, %if.then9, %if.then5, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !6566
  ret i32 %31, !dbg !6566
}

declare i32 @OPENSSL_sk_num(%struct.stack_st*) #2

declare i8* @OPENSSL_sk_value(%struct.stack_st*, i32) #2

; Function Attrs: nounwind uwtable
define internal i64 @checked_uint8(i8** %inptr, i8* %out) #0 !dbg !6567 {
entry:
  %retval = alloca i64, align 8
  %inptr.addr = alloca i8**, align 8
  %out.addr = alloca i8*, align 8
  %result = alloca i8*, align 8
  %in = alloca i8*, align 8
  %endp = alloca i8*, align 8
  %v = alloca i64, align 8
  %e = alloca i32, align 4
  store i8** %inptr, i8*** %inptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %inptr.addr, metadata !6568, metadata !439), !dbg !6569
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !6570, metadata !439), !dbg !6571
  call void @llvm.dbg.declare(metadata i8** %result, metadata !6572, metadata !439), !dbg !6573
  %0 = load i8*, i8** %out.addr, align 8, !dbg !6574
  store i8* %0, i8** %result, align 8, !dbg !6573
  call void @llvm.dbg.declare(metadata i8** %in, metadata !6575, metadata !439), !dbg !6576
  %1 = load i8**, i8*** %inptr.addr, align 8, !dbg !6577
  %2 = load i8*, i8** %1, align 8, !dbg !6578
  store i8* %2, i8** %in, align 8, !dbg !6576
  call void @llvm.dbg.declare(metadata i8** %endp, metadata !6579, metadata !439), !dbg !6580
  call void @llvm.dbg.declare(metadata i64* %v, metadata !6581, metadata !439), !dbg !6582
  call void @llvm.dbg.declare(metadata i32* %e, metadata !6583, metadata !439), !dbg !6584
  call void @save_errno(), !dbg !6585
  %3 = load i8*, i8** %in, align 8, !dbg !6586
  %call = call i64 @strtol(i8* %3, i8** %endp, i32 10) #8, !dbg !6587
  store i64 %call, i64* %v, align 8, !dbg !6588
  %call1 = call i32 @restore_errno(), !dbg !6589
  store i32 %call1, i32* %e, align 4, !dbg !6590
  %4 = load i64, i64* %v, align 8, !dbg !6591
  %cmp = icmp eq i64 %4, -9223372036854775808, !dbg !6593
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !6594

lor.lhs.false:                                    ; preds = %entry
  %5 = load i64, i64* %v, align 8, !dbg !6595
  %cmp2 = icmp eq i64 %5, 9223372036854775807, !dbg !6597
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false4, !dbg !6598

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %6 = load i32, i32* %e, align 4, !dbg !6599
  %cmp3 = icmp eq i32 %6, 34, !dbg !6601
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !6601

lor.lhs.false4:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %7 = load i8*, i8** %endp, align 8, !dbg !6602
  %8 = load i8*, i8** %in, align 8, !dbg !6603
  %cmp5 = icmp eq i8* %7, %8, !dbg !6604
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !6605

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %9 = load i8*, i8** %endp, align 8, !dbg !6606
  %10 = load i8, i8* %9, align 1, !dbg !6607
  %conv = zext i8 %10 to i32, !dbg !6608
  %idxprom = sext i32 %conv to i64, !dbg !6609
  %call7 = call i16** @__ctype_b_loc() #1, !dbg !6610
  %11 = load i16*, i16** %call7, align 8, !dbg !6611
  %arrayidx = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !6609
  %12 = load i16, i16* %arrayidx, align 2, !dbg !6609
  %conv8 = zext i16 %12 to i32, !dbg !6609
  %and = and i32 %conv8, 8192, !dbg !6612
  %tobool = icmp ne i32 %and, 0, !dbg !6612
  br i1 %tobool, label %lor.lhs.false9, label %if.then, !dbg !6613

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %13 = load i64, i64* %v, align 8, !dbg !6614
  %14 = load i64, i64* %v, align 8, !dbg !6615
  %conv10 = trunc i64 %14 to i8, !dbg !6616
  %15 = load i8*, i8** %result, align 8, !dbg !6617
  store i8 %conv10, i8* %15, align 1, !dbg !6618
  %conv11 = zext i8 %conv10 to i64, !dbg !6619
  %cmp12 = icmp ne i64 %13, %conv11, !dbg !6620
  br i1 %cmp12, label %if.then, label %if.end, !dbg !6621

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false6, %lor.lhs.false4, %land.lhs.true
  store i64 -1, i64* %retval, align 8, !dbg !6623
  br label %return, !dbg !6623

if.end:                                           ; preds = %lor.lhs.false9
  %16 = load i8*, i8** %endp, align 8, !dbg !6625
  store i8* %16, i8** %in, align 8, !dbg !6627
  br label %for.cond, !dbg !6628

for.cond:                                         ; preds = %for.inc, %if.end
  %17 = load i8*, i8** %in, align 8, !dbg !6629
  %18 = load i8, i8* %17, align 1, !dbg !6632
  %conv14 = zext i8 %18 to i32, !dbg !6633
  %idxprom15 = sext i32 %conv14 to i64, !dbg !6634
  %call16 = call i16** @__ctype_b_loc() #1, !dbg !6635
  %19 = load i16*, i16** %call16, align 8, !dbg !6636
  %arrayidx17 = getelementptr inbounds i16, i16* %19, i64 %idxprom15, !dbg !6634
  %20 = load i16, i16* %arrayidx17, align 2, !dbg !6634
  %conv18 = zext i16 %20 to i32, !dbg !6634
  %and19 = and i32 %conv18, 8192, !dbg !6637
  %tobool20 = icmp ne i32 %and19, 0, !dbg !6638
  br i1 %tobool20, label %for.body, label %for.end, !dbg !6638

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !6639

for.inc:                                          ; preds = %for.body
  %21 = load i8*, i8** %in, align 8, !dbg !6640
  %incdec.ptr = getelementptr inbounds i8, i8* %21, i32 1, !dbg !6640
  store i8* %incdec.ptr, i8** %in, align 8, !dbg !6640
  br label %for.cond, !dbg !6642, !llvm.loop !6643

for.end:                                          ; preds = %for.cond
  %22 = load i8*, i8** %in, align 8, !dbg !6645
  %23 = load i8**, i8*** %inptr.addr, align 8, !dbg !6646
  store i8* %22, i8** %23, align 8, !dbg !6647
  store i64 1, i64* %retval, align 8, !dbg !6648
  br label %return, !dbg !6648

return:                                           ; preds = %for.end, %if.then
  %24 = load i64, i64* %retval, align 8, !dbg !6649
  ret i64 %24, !dbg !6649
}

; Function Attrs: nounwind uwtable
define internal i64 @hexdecode(i8** %inptr, i8* %result) #0 !dbg !6650 {
entry:
  %retval = alloca i64, align 8
  %inptr.addr = alloca i8**, align 8
  %result.addr = alloca i8*, align 8
  %out = alloca i8**, align 8
  %in = alloca i8*, align 8
  %ret = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %byte = alloca i8, align 1
  %nibble = alloca i32, align 4
  %x = alloca i32, align 4
  store i8** %inptr, i8*** %inptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %inptr.addr, metadata !6651, metadata !439), !dbg !6652
  store i8* %result, i8** %result.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %result.addr, metadata !6653, metadata !439), !dbg !6654
  call void @llvm.dbg.declare(metadata i8*** %out, metadata !6655, metadata !439), !dbg !6656
  %0 = load i8*, i8** %result.addr, align 8, !dbg !6657
  %1 = bitcast i8* %0 to i8**, !dbg !6658
  store i8** %1, i8*** %out, align 8, !dbg !6656
  call void @llvm.dbg.declare(metadata i8** %in, metadata !6659, metadata !439), !dbg !6660
  %2 = load i8**, i8*** %inptr.addr, align 8, !dbg !6661
  %3 = load i8*, i8** %2, align 8, !dbg !6662
  store i8* %3, i8** %in, align 8, !dbg !6660
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !6663, metadata !439), !dbg !6664
  %4 = load i8*, i8** %in, align 8, !dbg !6665
  %call = call i64 @strlen(i8* %4) #9, !dbg !6666
  %div = udiv i64 %call, 2, !dbg !6667
  %conv = trunc i64 %div to i32, !dbg !6666
  %call1 = call i8* @app_malloc(i32 %conv, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.532, i32 0, i32 0)), !dbg !6668
  store i8* %call1, i8** %ret, align 8, !dbg !6664
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !6670, metadata !439), !dbg !6671
  %5 = load i8*, i8** %ret, align 8, !dbg !6672
  store i8* %5, i8** %cp, align 8, !dbg !6671
  call void @llvm.dbg.declare(metadata i8* %byte, metadata !6673, metadata !439), !dbg !6674
  call void @llvm.dbg.declare(metadata i32* %nibble, metadata !6675, metadata !439), !dbg !6676
  store i32 0, i32* %nibble, align 4, !dbg !6676
  %6 = load i8*, i8** %ret, align 8, !dbg !6677
  %cmp = icmp eq i8* %6, null, !dbg !6679
  br i1 %cmp, label %if.then, label %if.end, !dbg !6680

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !6681
  br label %return, !dbg !6681

if.end:                                           ; preds = %entry
  store i8 0, i8* %byte, align 1, !dbg !6682
  br label %for.cond, !dbg !6684

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i8*, i8** %in, align 8, !dbg !6685
  %8 = load i8, i8* %7, align 1, !dbg !6688
  %tobool = icmp ne i8 %8, 0, !dbg !6689
  br i1 %tobool, label %for.body, label %for.end, !dbg !6689

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6690, metadata !439), !dbg !6692
  %9 = load i8*, i8** %in, align 8, !dbg !6693
  %10 = load i8, i8* %9, align 1, !dbg !6695
  %conv3 = zext i8 %10 to i32, !dbg !6696
  %idxprom = sext i32 %conv3 to i64, !dbg !6697
  %call4 = call i16** @__ctype_b_loc() #1, !dbg !6698
  %11 = load i16*, i16** %call4, align 8, !dbg !6699
  %arrayidx = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !6697
  %12 = load i16, i16* %arrayidx, align 2, !dbg !6697
  %conv5 = zext i16 %12 to i32, !dbg !6697
  %and = and i32 %conv5, 8192, !dbg !6700
  %tobool6 = icmp ne i32 %and, 0, !dbg !6700
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !6701

if.then7:                                         ; preds = %for.body
  br label %for.inc, !dbg !6702

if.end8:                                          ; preds = %for.body
  %13 = load i8*, i8** %in, align 8, !dbg !6703
  %14 = load i8, i8* %13, align 1, !dbg !6704
  %call9 = call i32 @OPENSSL_hexchar2int(i8 zeroext %14), !dbg !6705
  store i32 %call9, i32* %x, align 4, !dbg !6706
  %15 = load i32, i32* %x, align 4, !dbg !6707
  %cmp10 = icmp slt i32 %15, 0, !dbg !6709
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !6710

if.then12:                                        ; preds = %if.end8
  %16 = load i8*, i8** %ret, align 8, !dbg !6711
  call void @CRYPTO_free(i8* %16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 451), !dbg !6713
  store i64 0, i64* %retval, align 8, !dbg !6714
  br label %return, !dbg !6714

if.end13:                                         ; preds = %if.end8
  %17 = load i32, i32* %x, align 4, !dbg !6715
  %conv14 = trunc i32 %17 to i8, !dbg !6716
  %conv15 = sext i8 %conv14 to i32, !dbg !6716
  %18 = load i8, i8* %byte, align 1, !dbg !6717
  %conv16 = zext i8 %18 to i32, !dbg !6717
  %or = or i32 %conv16, %conv15, !dbg !6717
  %conv17 = trunc i32 %or to i8, !dbg !6717
  store i8 %conv17, i8* %byte, align 1, !dbg !6717
  %19 = load i32, i32* %nibble, align 4, !dbg !6718
  %xor = xor i32 %19, 1, !dbg !6718
  store i32 %xor, i32* %nibble, align 4, !dbg !6718
  %cmp18 = icmp eq i32 %xor, 0, !dbg !6720
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !6721

if.then20:                                        ; preds = %if.end13
  %20 = load i8, i8* %byte, align 1, !dbg !6722
  %21 = load i8*, i8** %cp, align 8, !dbg !6724
  %incdec.ptr = getelementptr inbounds i8, i8* %21, i32 1, !dbg !6724
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !6724
  store i8 %20, i8* %21, align 1, !dbg !6725
  store i8 0, i8* %byte, align 1, !dbg !6726
  br label %if.end23, !dbg !6727

if.else:                                          ; preds = %if.end13
  %22 = load i8, i8* %byte, align 1, !dbg !6728
  %conv21 = zext i8 %22 to i32, !dbg !6728
  %shl = shl i32 %conv21, 4, !dbg !6728
  %conv22 = trunc i32 %shl to i8, !dbg !6728
  store i8 %conv22, i8* %byte, align 1, !dbg !6728
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then20
  br label %for.inc, !dbg !6730

for.inc:                                          ; preds = %if.end23, %if.then7
  %23 = load i8*, i8** %in, align 8, !dbg !6731
  %incdec.ptr24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6731
  store i8* %incdec.ptr24, i8** %in, align 8, !dbg !6731
  br label %for.cond, !dbg !6733, !llvm.loop !6734

for.end:                                          ; preds = %for.cond
  %24 = load i32, i32* %nibble, align 4, !dbg !6736
  %cmp25 = icmp ne i32 %24, 0, !dbg !6738
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !6739

if.then27:                                        ; preds = %for.end
  %25 = load i8*, i8** %ret, align 8, !dbg !6740
  call void @CRYPTO_free(i8* %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i32 463), !dbg !6742
  store i64 0, i64* %retval, align 8, !dbg !6743
  br label %return, !dbg !6743

if.end28:                                         ; preds = %for.end
  %26 = load i8*, i8** %in, align 8, !dbg !6744
  %27 = load i8**, i8*** %inptr.addr, align 8, !dbg !6745
  store i8* %26, i8** %27, align 8, !dbg !6746
  %28 = load i8*, i8** %cp, align 8, !dbg !6747
  %29 = load i8*, i8** %ret, align 8, !dbg !6748
  %30 = load i8**, i8*** %out, align 8, !dbg !6749
  store i8* %29, i8** %30, align 8, !dbg !6750
  %sub.ptr.lhs.cast = ptrtoint i8* %28 to i64, !dbg !6751
  %sub.ptr.rhs.cast = ptrtoint i8* %29 to i64, !dbg !6751
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6751
  store i64 %sub.ptr.sub, i64* %retval, align 8, !dbg !6752
  br label %return, !dbg !6752

return:                                           ; preds = %if.end28, %if.then27, %if.then12, %if.then
  %31 = load i64, i64* %retval, align 8, !dbg !6753
  ret i64 %31, !dbg !6753
}

declare i32 @SSL_dane_tlsa_add(%struct.ssl_st*, i8 zeroext, i8 zeroext, i8 zeroext, i8*, i64) #2

; Function Attrs: nounwind uwtable
define internal void @save_errno() #0 !dbg !6754 {
entry:
  %call = call i32* @__errno_location() #1, !dbg !6755
  %0 = load i32, i32* %call, align 4, !dbg !6756
  store i32 %0, i32* @saved_errno, align 4, !dbg !6757
  %call1 = call i32* @__errno_location() #1, !dbg !6758
  store i32 0, i32* %call1, align 4, !dbg !6759
  ret void, !dbg !6760
}

; Function Attrs: nounwind
declare i64 @strtol(i8*, i8**, i32) #7

; Function Attrs: nounwind uwtable
define internal i32 @restore_errno() #0 !dbg !6761 {
entry:
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6764, metadata !439), !dbg !6765
  %call = call i32* @__errno_location() #1, !dbg !6766
  %0 = load i32, i32* %call, align 4, !dbg !6767
  store i32 %0, i32* %ret, align 4, !dbg !6765
  %1 = load i32, i32* @saved_errno, align 4, !dbg !6768
  %call1 = call i32* @__errno_location() #1, !dbg !6769
  store i32 %1, i32* %call1, align 4, !dbg !6770
  %2 = load i32, i32* %ret, align 4, !dbg !6771
  ret i32 %2, !dbg !6772
}

declare i32 @OPENSSL_hexchar2int(i8 zeroext) #2

declare i32 @SSL_shutdown(%struct.ssl_st*) #2

declare void @OPENSSL_sk_free(%struct.stack_st*) #2

declare %struct.ssl_ctx_st* @SSL_get_SSL_CTX(%struct.ssl_st*) #2

declare %struct.stack_st_X509* @SSL_get_peer_cert_chain(%struct.ssl_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @sk_X509_num(%struct.stack_st_X509* %sk) #5 !dbg !6773 {
entry:
  %sk.addr = alloca %struct.stack_st_X509*, align 8
  store %struct.stack_st_X509* %sk, %struct.stack_st_X509** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509** %sk.addr, metadata !6778, metadata !439), !dbg !6779
  %0 = load %struct.stack_st_X509*, %struct.stack_st_X509** %sk.addr, align 8, !dbg !6780
  %1 = bitcast %struct.stack_st_X509* %0 to %struct.stack_st*, !dbg !6781
  %call = call i32 @OPENSSL_sk_num(%struct.stack_st* %1), !dbg !6782
  ret i32 %call, !dbg !6783
}

declare i32 @X509_NAME_print_ex(%struct.bio_st*, %struct.X509_name_st*, i32, i64) #2

declare %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.x509_st* @sk_X509_value(%struct.stack_st_X509* %sk, i32 %idx) #5 !dbg !6784 {
entry:
  %sk.addr = alloca %struct.stack_st_X509*, align 8
  %idx.addr = alloca i32, align 4
  store %struct.stack_st_X509* %sk, %struct.stack_st_X509** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509** %sk.addr, metadata !6787, metadata !439), !dbg !6788
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !6789, metadata !439), !dbg !6790
  %0 = load %struct.stack_st_X509*, %struct.stack_st_X509** %sk.addr, align 8, !dbg !6791
  %1 = bitcast %struct.stack_st_X509* %0 to %struct.stack_st*, !dbg !6792
  %2 = load i32, i32* %idx.addr, align 4, !dbg !6793
  %call = call i8* @OPENSSL_sk_value(%struct.stack_st* %1, i32 %2), !dbg !6794
  %3 = bitcast i8* %call to %struct.x509_st*, !dbg !6795
  ret %struct.x509_st* %3, !dbg !6796
}

declare i64 @get_nameopt() #2

declare %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st*) #2

declare i32 @PEM_write_bio_X509(%struct.bio_st*, %struct.x509_st*) #2

declare %struct.x509_st* @SSL_get_peer_certificate(%struct.ssl_st*) #2

declare i32 @dump_cert_text(%struct.bio_st*, %struct.x509_st*) #2

declare void @print_ca_names(%struct.bio_st*, %struct.ssl_st*) #2

declare i32 @ssl_print_sigalgs(%struct.bio_st*, %struct.ssl_st*) #2

declare i32 @ssl_print_tmp_key(%struct.bio_st*, %struct.ssl_st*) #2

declare i32 @SSL_ct_is_enabled(%struct.ssl_st*) #2

declare %struct.stack_st_SCT* @SSL_get0_peer_scts(%struct.ssl_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @sk_SCT_num(%struct.stack_st_SCT* %sk) #5 !dbg !6797 {
entry:
  %sk.addr = alloca %struct.stack_st_SCT*, align 8
  store %struct.stack_st_SCT* %sk, %struct.stack_st_SCT** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_SCT** %sk.addr, metadata !6800, metadata !439), !dbg !6801
  %0 = load %struct.stack_st_SCT*, %struct.stack_st_SCT** %sk.addr, align 8, !dbg !6802
  %1 = bitcast %struct.stack_st_SCT* %0 to %struct.stack_st*, !dbg !6803
  %call = call i32 @OPENSSL_sk_num(%struct.stack_st* %1), !dbg !6804
  ret i32 %call, !dbg !6805
}

declare %struct.ctlog_store_st* @SSL_CTX_get0_ctlog_store(%struct.ssl_ctx_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.sct_st* @sk_SCT_value(%struct.stack_st_SCT* %sk, i32 %idx) #5 !dbg !6806 {
entry:
  %sk.addr = alloca %struct.stack_st_SCT*, align 8
  %idx.addr = alloca i32, align 4
  store %struct.stack_st_SCT* %sk, %struct.stack_st_SCT** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_SCT** %sk.addr, metadata !6809, metadata !439), !dbg !6810
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !6811, metadata !439), !dbg !6812
  %0 = load %struct.stack_st_SCT*, %struct.stack_st_SCT** %sk.addr, align 8, !dbg !6813
  %1 = bitcast %struct.stack_st_SCT* %0 to %struct.stack_st*, !dbg !6814
  %2 = load i32, i32* %idx.addr, align 4, !dbg !6815
  %call = call i8* @OPENSSL_sk_value(%struct.stack_st* %1, i32 %2), !dbg !6816
  %3 = bitcast i8* %call to %struct.sct_st*, !dbg !6817
  ret %struct.sct_st* %3, !dbg !6818
}

declare i8* @SCT_validation_status_string(%struct.sct_st*) #2

declare void @SCT_print(%struct.sct_st*, %struct.bio_st*, i32, %struct.ctlog_store_st*) #2

declare i64 @BIO_number_read(%struct.bio_st*) #2

declare %struct.bio_st* @SSL_get_rbio(%struct.ssl_st*) #2

declare i64 @BIO_number_written(%struct.bio_st*) #2

declare %struct.bio_st* @SSL_get_wbio(%struct.ssl_st*) #2

declare void @print_verify_detail(%struct.ssl_st*, %struct.bio_st*) #2

declare %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st*) #2

declare i8* @SSL_CIPHER_get_version(%struct.ssl_cipher_st*) #2

declare i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st*) #2

declare %struct.evp_pkey_st* @X509_get0_pubkey(%struct.x509_st*) #2

declare i32 @EVP_PKEY_bits(%struct.evp_pkey_st*) #2

declare %struct.comp_method_st* @SSL_get_current_compression(%struct.ssl_st*) #2

declare %struct.comp_method_st* @SSL_get_current_expansion(%struct.ssl_st*) #2

declare i8* @SSL_COMP_get_name(%struct.comp_method_st*) #2

declare void @SSL_get0_next_proto_negotiated(%struct.ssl_st*, i8**, i32*) #2

declare void @SSL_get0_alpn_selected(%struct.ssl_st*, i8**, i32*) #2

declare %struct.srtp_protection_profile_st* @SSL_get_selected_srtp_profile(%struct.ssl_st*) #2

declare i32 @SSL_get_early_data_status(%struct.ssl_st*) #2

declare i64 @SSL_get_verify_result(%struct.ssl_st*) #2

declare i8* @X509_verify_cert_error_string(i64) #2

declare i32 @SSL_export_keying_material(%struct.ssl_st*, i8*, i64, i8*, i64, i8*, i64, i32) #2

declare %struct.ocsp_response_st* @d2i_OCSP_RESPONSE(%struct.ocsp_response_st**, i8**, i64) #2

declare i32 @BIO_dump_indent(%struct.bio_st*, i8*, i32, i32) #2

declare i32 @OCSP_RESPONSE_print(%struct.bio_st*, %struct.ocsp_response_st*, i64) #2

declare void @OCSP_RESPONSE_free(%struct.ocsp_response_st*) #2

declare i32 @ASN1_get_object(i8**, i64*, i32*, i32*, i64) #2

declare i32 @EVP_EncodeBlock(i8*, i8*, i32) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!435, !436}
!llvm.ident = !{!437}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !267, globals: !332)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl/[inter]apps--openssl-bin-s_client.o.i", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!2 = !{!3, !15, !34, !221, !234, !249, !254, !259, !262}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !4, line: 24, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14}
!6 = !DIEnumerator(name: "SOCK_STREAM", value: 1)
!7 = !DIEnumerator(name: "SOCK_DGRAM", value: 2)
!8 = !DIEnumerator(name: "SOCK_RAW", value: 3)
!9 = !DIEnumerator(name: "SOCK_RDM", value: 4)
!10 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5)
!11 = !DIEnumerator(name: "SOCK_DCCP", value: 6)
!12 = !DIEnumerator(name: "SOCK_PACKET", value: 10)
!13 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288)
!14 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PROTOCOL_choice", file: !16, line: 799, size: 32, align: 32, elements: !17)
!16 = !DIFile(filename: "apps/s_client.c", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!17 = !{!18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33}
!18 = !DIEnumerator(name: "PROTO_OFF", value: 0)
!19 = !DIEnumerator(name: "PROTO_SMTP", value: 1)
!20 = !DIEnumerator(name: "PROTO_POP3", value: 2)
!21 = !DIEnumerator(name: "PROTO_IMAP", value: 3)
!22 = !DIEnumerator(name: "PROTO_FTP", value: 4)
!23 = !DIEnumerator(name: "PROTO_TELNET", value: 5)
!24 = !DIEnumerator(name: "PROTO_XMPP", value: 6)
!25 = !DIEnumerator(name: "PROTO_XMPP_SERVER", value: 7)
!26 = !DIEnumerator(name: "PROTO_CONNECT", value: 8)
!27 = !DIEnumerator(name: "PROTO_IRC", value: 9)
!28 = !DIEnumerator(name: "PROTO_MYSQL", value: 10)
!29 = !DIEnumerator(name: "PROTO_POSTGRES", value: 11)
!30 = !DIEnumerator(name: "PROTO_LMTP", value: 12)
!31 = !DIEnumerator(name: "PROTO_NNTP", value: 13)
!32 = !DIEnumerator(name: "PROTO_SIEVE", value: 14)
!33 = !DIEnumerator(name: "PROTO_LDAP", value: 15)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OPTION_choice", file: !16, line: 565, size: 32, align: 32, elements: !35)
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!36 = !DIEnumerator(name: "OPT_ERR", value: -1)
!37 = !DIEnumerator(name: "OPT_EOF", value: 0)
!38 = !DIEnumerator(name: "OPT_HELP", value: 1)
!39 = !DIEnumerator(name: "OPT_4", value: 2)
!40 = !DIEnumerator(name: "OPT_6", value: 3)
!41 = !DIEnumerator(name: "OPT_HOST", value: 4)
!42 = !DIEnumerator(name: "OPT_PORT", value: 5)
!43 = !DIEnumerator(name: "OPT_CONNECT", value: 6)
!44 = !DIEnumerator(name: "OPT_BIND", value: 7)
!45 = !DIEnumerator(name: "OPT_UNIX", value: 8)
!46 = !DIEnumerator(name: "OPT_XMPPHOST", value: 9)
!47 = !DIEnumerator(name: "OPT_VERIFY", value: 10)
!48 = !DIEnumerator(name: "OPT_NAMEOPT", value: 11)
!49 = !DIEnumerator(name: "OPT_CERT", value: 12)
!50 = !DIEnumerator(name: "OPT_CRL", value: 13)
!51 = !DIEnumerator(name: "OPT_CRL_DOWNLOAD", value: 14)
!52 = !DIEnumerator(name: "OPT_SESS_OUT", value: 15)
!53 = !DIEnumerator(name: "OPT_SESS_IN", value: 16)
!54 = !DIEnumerator(name: "OPT_CERTFORM", value: 17)
!55 = !DIEnumerator(name: "OPT_CRLFORM", value: 18)
!56 = !DIEnumerator(name: "OPT_VERIFY_RET_ERROR", value: 19)
!57 = !DIEnumerator(name: "OPT_VERIFY_QUIET", value: 20)
!58 = !DIEnumerator(name: "OPT_BRIEF", value: 21)
!59 = !DIEnumerator(name: "OPT_PREXIT", value: 22)
!60 = !DIEnumerator(name: "OPT_CRLF", value: 23)
!61 = !DIEnumerator(name: "OPT_QUIET", value: 24)
!62 = !DIEnumerator(name: "OPT_NBIO", value: 25)
!63 = !DIEnumerator(name: "OPT_SSL_CLIENT_ENGINE", value: 26)
!64 = !DIEnumerator(name: "OPT_IGN_EOF", value: 27)
!65 = !DIEnumerator(name: "OPT_NO_IGN_EOF", value: 28)
!66 = !DIEnumerator(name: "OPT_DEBUG", value: 29)
!67 = !DIEnumerator(name: "OPT_TLSEXTDEBUG", value: 30)
!68 = !DIEnumerator(name: "OPT_STATUS", value: 31)
!69 = !DIEnumerator(name: "OPT_WDEBUG", value: 32)
!70 = !DIEnumerator(name: "OPT_MSG", value: 33)
!71 = !DIEnumerator(name: "OPT_MSGFILE", value: 34)
!72 = !DIEnumerator(name: "OPT_ENGINE", value: 35)
!73 = !DIEnumerator(name: "OPT_TRACE", value: 36)
!74 = !DIEnumerator(name: "OPT_SECURITY_DEBUG", value: 37)
!75 = !DIEnumerator(name: "OPT_SECURITY_DEBUG_VERBOSE", value: 38)
!76 = !DIEnumerator(name: "OPT_SHOWCERTS", value: 39)
!77 = !DIEnumerator(name: "OPT_NBIO_TEST", value: 40)
!78 = !DIEnumerator(name: "OPT_STATE", value: 41)
!79 = !DIEnumerator(name: "OPT_PSK_IDENTITY", value: 42)
!80 = !DIEnumerator(name: "OPT_PSK", value: 43)
!81 = !DIEnumerator(name: "OPT_PSK_SESS", value: 44)
!82 = !DIEnumerator(name: "OPT_SRPUSER", value: 45)
!83 = !DIEnumerator(name: "OPT_SRPPASS", value: 46)
!84 = !DIEnumerator(name: "OPT_SRP_STRENGTH", value: 47)
!85 = !DIEnumerator(name: "OPT_SRP_LATEUSER", value: 48)
!86 = !DIEnumerator(name: "OPT_SRP_MOREGROUPS", value: 49)
!87 = !DIEnumerator(name: "OPT_SSL3", value: 50)
!88 = !DIEnumerator(name: "OPT_SSL_CONFIG", value: 51)
!89 = !DIEnumerator(name: "OPT_TLS1_3", value: 52)
!90 = !DIEnumerator(name: "OPT_TLS1_2", value: 53)
!91 = !DIEnumerator(name: "OPT_TLS1_1", value: 54)
!92 = !DIEnumerator(name: "OPT_TLS1", value: 55)
!93 = !DIEnumerator(name: "OPT_DTLS", value: 56)
!94 = !DIEnumerator(name: "OPT_DTLS1", value: 57)
!95 = !DIEnumerator(name: "OPT_DTLS1_2", value: 58)
!96 = !DIEnumerator(name: "OPT_SCTP", value: 59)
!97 = !DIEnumerator(name: "OPT_TIMEOUT", value: 60)
!98 = !DIEnumerator(name: "OPT_MTU", value: 61)
!99 = !DIEnumerator(name: "OPT_KEYFORM", value: 62)
!100 = !DIEnumerator(name: "OPT_PASS", value: 63)
!101 = !DIEnumerator(name: "OPT_CERT_CHAIN", value: 64)
!102 = !DIEnumerator(name: "OPT_CAPATH", value: 65)
!103 = !DIEnumerator(name: "OPT_NOCAPATH", value: 66)
!104 = !DIEnumerator(name: "OPT_CHAINCAPATH", value: 67)
!105 = !DIEnumerator(name: "OPT_VERIFYCAPATH", value: 68)
!106 = !DIEnumerator(name: "OPT_KEY", value: 69)
!107 = !DIEnumerator(name: "OPT_RECONNECT", value: 70)
!108 = !DIEnumerator(name: "OPT_BUILD_CHAIN", value: 71)
!109 = !DIEnumerator(name: "OPT_CAFILE", value: 72)
!110 = !DIEnumerator(name: "OPT_NOCAFILE", value: 73)
!111 = !DIEnumerator(name: "OPT_CHAINCAFILE", value: 74)
!112 = !DIEnumerator(name: "OPT_VERIFYCAFILE", value: 75)
!113 = !DIEnumerator(name: "OPT_NEXTPROTONEG", value: 76)
!114 = !DIEnumerator(name: "OPT_ALPN", value: 77)
!115 = !DIEnumerator(name: "OPT_SERVERINFO", value: 78)
!116 = !DIEnumerator(name: "OPT_STARTTLS", value: 79)
!117 = !DIEnumerator(name: "OPT_SERVERNAME", value: 80)
!118 = !DIEnumerator(name: "OPT_NOSERVERNAME", value: 81)
!119 = !DIEnumerator(name: "OPT_ASYNC", value: 82)
!120 = !DIEnumerator(name: "OPT_USE_SRTP", value: 83)
!121 = !DIEnumerator(name: "OPT_KEYMATEXPORT", value: 84)
!122 = !DIEnumerator(name: "OPT_KEYMATEXPORTLEN", value: 85)
!123 = !DIEnumerator(name: "OPT_PROTOHOST", value: 86)
!124 = !DIEnumerator(name: "OPT_MAXFRAGLEN", value: 87)
!125 = !DIEnumerator(name: "OPT_MAX_SEND_FRAG", value: 88)
!126 = !DIEnumerator(name: "OPT_SPLIT_SEND_FRAG", value: 89)
!127 = !DIEnumerator(name: "OPT_MAX_PIPELINES", value: 90)
!128 = !DIEnumerator(name: "OPT_READ_BUF", value: 91)
!129 = !DIEnumerator(name: "OPT_KEYLOG_FILE", value: 92)
!130 = !DIEnumerator(name: "OPT_EARLY_DATA", value: 93)
!131 = !DIEnumerator(name: "OPT_REQCAFILE", value: 94)
!132 = !DIEnumerator(name: "OPT_V__FIRST", value: 2000)
!133 = !DIEnumerator(name: "OPT_V_POLICY", value: 2001)
!134 = !DIEnumerator(name: "OPT_V_PURPOSE", value: 2002)
!135 = !DIEnumerator(name: "OPT_V_VERIFY_NAME", value: 2003)
!136 = !DIEnumerator(name: "OPT_V_VERIFY_DEPTH", value: 2004)
!137 = !DIEnumerator(name: "OPT_V_ATTIME", value: 2005)
!138 = !DIEnumerator(name: "OPT_V_VERIFY_HOSTNAME", value: 2006)
!139 = !DIEnumerator(name: "OPT_V_VERIFY_EMAIL", value: 2007)
!140 = !DIEnumerator(name: "OPT_V_VERIFY_IP", value: 2008)
!141 = !DIEnumerator(name: "OPT_V_IGNORE_CRITICAL", value: 2009)
!142 = !DIEnumerator(name: "OPT_V_ISSUER_CHECKS", value: 2010)
!143 = !DIEnumerator(name: "OPT_V_CRL_CHECK", value: 2011)
!144 = !DIEnumerator(name: "OPT_V_CRL_CHECK_ALL", value: 2012)
!145 = !DIEnumerator(name: "OPT_V_POLICY_CHECK", value: 2013)
!146 = !DIEnumerator(name: "OPT_V_EXPLICIT_POLICY", value: 2014)
!147 = !DIEnumerator(name: "OPT_V_INHIBIT_ANY", value: 2015)
!148 = !DIEnumerator(name: "OPT_V_INHIBIT_MAP", value: 2016)
!149 = !DIEnumerator(name: "OPT_V_X509_STRICT", value: 2017)
!150 = !DIEnumerator(name: "OPT_V_EXTENDED_CRL", value: 2018)
!151 = !DIEnumerator(name: "OPT_V_USE_DELTAS", value: 2019)
!152 = !DIEnumerator(name: "OPT_V_POLICY_PRINT", value: 2020)
!153 = !DIEnumerator(name: "OPT_V_CHECK_SS_SIG", value: 2021)
!154 = !DIEnumerator(name: "OPT_V_TRUSTED_FIRST", value: 2022)
!155 = !DIEnumerator(name: "OPT_V_SUITEB_128_ONLY", value: 2023)
!156 = !DIEnumerator(name: "OPT_V_SUITEB_128", value: 2024)
!157 = !DIEnumerator(name: "OPT_V_SUITEB_192", value: 2025)
!158 = !DIEnumerator(name: "OPT_V_PARTIAL_CHAIN", value: 2026)
!159 = !DIEnumerator(name: "OPT_V_NO_ALT_CHAINS", value: 2027)
!160 = !DIEnumerator(name: "OPT_V_NO_CHECK_TIME", value: 2028)
!161 = !DIEnumerator(name: "OPT_V_VERIFY_AUTH_LEVEL", value: 2029)
!162 = !DIEnumerator(name: "OPT_V_ALLOW_PROXY_CERTS", value: 2030)
!163 = !DIEnumerator(name: "OPT_V__LAST", value: 2031)
!164 = !DIEnumerator(name: "OPT_X__FIRST", value: 1000)
!165 = !DIEnumerator(name: "OPT_X_KEY", value: 1001)
!166 = !DIEnumerator(name: "OPT_X_CERT", value: 1002)
!167 = !DIEnumerator(name: "OPT_X_CHAIN", value: 1003)
!168 = !DIEnumerator(name: "OPT_X_CHAIN_BUILD", value: 1004)
!169 = !DIEnumerator(name: "OPT_X_CERTFORM", value: 1005)
!170 = !DIEnumerator(name: "OPT_X_KEYFORM", value: 1006)
!171 = !DIEnumerator(name: "OPT_X__LAST", value: 1007)
!172 = !DIEnumerator(name: "OPT_S__FIRST", value: 3000)
!173 = !DIEnumerator(name: "OPT_S_NOSSL3", value: 3001)
!174 = !DIEnumerator(name: "OPT_S_NOTLS1", value: 3002)
!175 = !DIEnumerator(name: "OPT_S_NOTLS1_1", value: 3003)
!176 = !DIEnumerator(name: "OPT_S_NOTLS1_2", value: 3004)
!177 = !DIEnumerator(name: "OPT_S_NOTLS1_3", value: 3005)
!178 = !DIEnumerator(name: "OPT_S_BUGS", value: 3006)
!179 = !DIEnumerator(name: "OPT_S_NO_COMP", value: 3007)
!180 = !DIEnumerator(name: "OPT_S_NOTICKET", value: 3008)
!181 = !DIEnumerator(name: "OPT_S_SERVERPREF", value: 3009)
!182 = !DIEnumerator(name: "OPT_S_LEGACYRENEG", value: 3010)
!183 = !DIEnumerator(name: "OPT_S_LEGACYCONN", value: 3011)
!184 = !DIEnumerator(name: "OPT_S_ONRESUMP", value: 3012)
!185 = !DIEnumerator(name: "OPT_S_NOLEGACYCONN", value: 3013)
!186 = !DIEnumerator(name: "OPT_S_ALLOW_NO_DHE_KEX", value: 3014)
!187 = !DIEnumerator(name: "OPT_S_PRIORITIZE_CHACHA", value: 3015)
!188 = !DIEnumerator(name: "OPT_S_STRICT", value: 3016)
!189 = !DIEnumerator(name: "OPT_S_SIGALGS", value: 3017)
!190 = !DIEnumerator(name: "OPT_S_CLIENTSIGALGS", value: 3018)
!191 = !DIEnumerator(name: "OPT_S_GROUPS", value: 3019)
!192 = !DIEnumerator(name: "OPT_S_CURVES", value: 3020)
!193 = !DIEnumerator(name: "OPT_S_NAMEDCURVE", value: 3021)
!194 = !DIEnumerator(name: "OPT_S_CIPHER", value: 3022)
!195 = !DIEnumerator(name: "OPT_S_CIPHERSUITES", value: 3023)
!196 = !DIEnumerator(name: "OPT_S_RECORD_PADDING", value: 3024)
!197 = !DIEnumerator(name: "OPT_S_DEBUGBROKE", value: 3025)
!198 = !DIEnumerator(name: "OPT_S_COMP", value: 3026)
!199 = !DIEnumerator(name: "OPT_S_MINPROTO", value: 3027)
!200 = !DIEnumerator(name: "OPT_S_MAXPROTO", value: 3028)
!201 = !DIEnumerator(name: "OPT_S_NO_RENEGOTIATION", value: 3029)
!202 = !DIEnumerator(name: "OPT_S_NO_MIDDLEBOX", value: 3030)
!203 = !DIEnumerator(name: "OPT_S__LAST", value: 3031)
!204 = !DIEnumerator(name: "OPT_FALLBACKSCSV", value: 3032)
!205 = !DIEnumerator(name: "OPT_NOCMDS", value: 3033)
!206 = !DIEnumerator(name: "OPT_PROXY", value: 3034)
!207 = !DIEnumerator(name: "OPT_PROXY_USER", value: 3035)
!208 = !DIEnumerator(name: "OPT_PROXY_PASS", value: 3036)
!209 = !DIEnumerator(name: "OPT_DANE_TLSA_DOMAIN", value: 3037)
!210 = !DIEnumerator(name: "OPT_CT", value: 3038)
!211 = !DIEnumerator(name: "OPT_NOCT", value: 3039)
!212 = !DIEnumerator(name: "OPT_CTLOG_FILE", value: 3040)
!213 = !DIEnumerator(name: "OPT_DANE_TLSA_RRDATA", value: 3041)
!214 = !DIEnumerator(name: "OPT_DANE_EE_NO_NAME", value: 3042)
!215 = !DIEnumerator(name: "OPT_ENABLE_PHA", value: 3043)
!216 = !DIEnumerator(name: "OPT_SCTP_LABEL_BUG", value: 3044)
!217 = !DIEnumerator(name: "OPT_R__FIRST", value: 1500)
!218 = !DIEnumerator(name: "OPT_R_RAND", value: 1501)
!219 = !DIEnumerator(name: "OPT_R_WRITERAND", value: 1502)
!220 = !DIEnumerator(name: "OPT_R__LAST", value: 1503)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !222, file: !16, line: 972, size: 32, align: 32, elements: !230)
!222 = distinct !DISubprogram(name: "s_client_main", scope: !16, file: !16, line: 885, type: !223, isLocal: false, isDefinition: true, scopeLine: 886, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!223 = !DISubroutineType(types: !224)
!224 = !{!225, !225, !226}
!225 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64, align: 64)
!228 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!229 = !{}
!230 = !{!231, !232, !233}
!231 = !DIEnumerator(name: "use_inet", value: 0)
!232 = !DIEnumerator(name: "use_unix", value: 1)
!233 = !DIEnumerator(name: "use_unknown", value: 2)
!234 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !235, line: 46, size: 32, align: 32, elements: !236)
!235 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!236 = !{!237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248}
!237 = !DIEnumerator(name: "_ISupper", value: 256)
!238 = !DIEnumerator(name: "_ISlower", value: 512)
!239 = !DIEnumerator(name: "_ISalpha", value: 1024)
!240 = !DIEnumerator(name: "_ISdigit", value: 2048)
!241 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!242 = !DIEnumerator(name: "_ISspace", value: 8192)
!243 = !DIEnumerator(name: "_ISprint", value: 16384)
!244 = !DIEnumerator(name: "_ISgraph", value: 32768)
!245 = !DIEnumerator(name: "_ISblank", value: 1)
!246 = !DIEnumerator(name: "_IScntrl", value: 2)
!247 = !DIEnumerator(name: "_ISpunct", value: 4)
!248 = !DIEnumerator(name: "_ISalnum", value: 8)
!249 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BIO_hostserv_priorities", file: !250, line: 676, size: 32, align: 32, elements: !251)
!250 = !DIFile(filename: "include/openssl/bio.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!251 = !{!252, !253}
!252 = !DIEnumerator(name: "BIO_PARSE_PRIO_HOST", value: 0)
!253 = !DIEnumerator(name: "BIO_PARSE_PRIO_SERV", value: 1)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 2228, size: 32, align: 32, elements: !256)
!255 = !DIFile(filename: "include/openssl/ssl.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!256 = !{!257, !258}
!257 = !DIEnumerator(name: "SSL_CT_VALIDATION_PERMISSIVE", value: 0)
!258 = !DIEnumerator(name: "SSL_CT_VALIDATION_STRICT", value: 1)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BIO_sock_info_type", file: !250, line: 708, size: 32, align: 32, elements: !260)
!260 = !{!261}
!261 = !DIEnumerator(name: "BIO_SOCK_INFO_ADDRESS", value: 0)
!262 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !222, file: !16, line: 2355, size: 32, align: 32, elements: !263)
!263 = !{!264, !265, !266}
!264 = !DIEnumerator(name: "error_proto", value: 0)
!265 = !DIEnumerator(name: "error_connect", value: 1)
!266 = !DIEnumerator(name: "success", value: 2)
!267 = !{!268, !225, !269, !270, !271, !227, !274, !275, !278, !280, !281, !284, !288, !290, !293, !295, !277, !299, !300, !310, !320, !322, !323, !325, !228, !326, !329}
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!269 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!270 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64, align: 64)
!272 = !DISubroutineType(types: !273)
!273 = !{null}
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "PROTOCOL_CHOICE", file: !16, line: 816, baseType: !15)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fd_mask", file: !276, line: 54, baseType: !277)
!276 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!277 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64, align: 64)
!279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!280 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64, align: 64)
!282 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_OPENSSL_STRING", file: !283, line: 159, flags: DIFlagFwdDecl)
!283 = !DIFile(filename: "include/openssl/safestack.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64, align: 64)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "OPENSSL_STACK", file: !286, line: 17, baseType: !287)
!286 = !DIFile(filename: "include/openssl/stack.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!287 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st", file: !286, line: 17, flags: DIFlagFwdDecl)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64, align: 64)
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64, align: 64)
!291 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509_CRL", file: !292, line: 228, flags: DIFlagFwdDecl)
!292 = !DIFile(filename: "include/openssl/x509.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64, align: 64)
!294 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509_NAME", file: !292, line: 77, flags: DIFlagFwdDecl)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "OPENSSL_sk_freefunc", file: !286, line: 20, baseType: !296)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64, align: 64)
!297 = !DISubroutineType(types: !298)
!298 = !{null, !268}
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64, align: 64)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64, align: 64)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "tlsextctx", file: !16, line: 247, baseType: !302)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlsextctx_st", file: !16, line: 244, size: 128, align: 64, elements: !303)
!303 = !{!304, !309}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "biodebug", scope: !302, file: !16, line: 245, baseType: !305, size: 64, align: 64)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64, align: 64)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIO", file: !307, line: 79, baseType: !308)
!307 = !DIFile(filename: "include/openssl/ossl_typ.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!308 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_st", file: !307, line: 79, flags: DIFlagFwdDecl)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !302, file: !16, line: 246, baseType: !225, size: 32, align: 32, offset: 64)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64, align: 64)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "SRP_ARG", file: !16, line: 271, baseType: !312)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srp_arg_st", file: !16, line: 264, size: 256, align: 64, elements: !313)
!313 = !{!314, !315, !316, !317, !318, !319}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "srppassin", scope: !312, file: !16, line: 265, baseType: !227, size: 64, align: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "srplogin", scope: !312, file: !16, line: 266, baseType: !227, size: 64, align: 64, offset: 64)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !312, file: !16, line: 267, baseType: !225, size: 32, align: 32, offset: 128)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !312, file: !16, line: 268, baseType: !225, size: 32, align: 32, offset: 160)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "amp", scope: !312, file: !16, line: 269, baseType: !225, size: 32, align: 32, offset: 192)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !312, file: !16, line: 270, baseType: !225, size: 32, align: 32, offset: 224)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64, align: 64)
!321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !285)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64, align: 64)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !324, line: 48, baseType: !269)
!324 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64, align: 64)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64, align: 64)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509", file: !307, line: 124, baseType: !328)
!328 = !DICompositeType(tag: DW_TAG_structure_type, name: "x509_st", file: !307, line: 124, flags: DIFlagFwdDecl)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64, align: 64)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCT", file: !307, line: 173, baseType: !331)
!331 = !DICompositeType(tag: DW_TAG_structure_type, name: "sct_st", file: !307, line: 173, flags: DIFlagFwdDecl)
!332 = !{!333, !337, !338, !353, !357, !358, !362, !366, !370, !374, !375, !385, !386, !387, !388, !389, !390, !400, !401, !402, !403, !407, !414, !415, !416, !417, !434}
!333 = distinct !DIGlobalVariable(name: "tls13_aes128gcmsha256_id", scope: !0, file: !16, line: 178, type: !334, isLocal: false, isDefinition: true, variable: [2 x i8]* @tls13_aes128gcmsha256_id)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 16, align: 8, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 2)
!337 = distinct !DIGlobalVariable(name: "tls13_aes256gcmsha384_id", scope: !0, file: !16, line: 179, type: !334, isLocal: false, isDefinition: true, variable: [2 x i8]* @tls13_aes256gcmsha384_id)
!338 = distinct !DIGlobalVariable(name: "s_client_options", scope: !0, file: !16, line: 605, type: !339, isLocal: false, isDefinition: true, variable: [171 x %struct.options_st]* @s_client_options)
!339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !340, size: 32832, align: 64, elements: !351)
!340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !341)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "OPTIONS", file: !342, line: 280, baseType: !343)
!342 = !DIFile(filename: "apps/include/opt.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "options_st", file: !342, line: 269, size: 192, align: 64, elements: !344)
!344 = !{!345, !348, !349, !350}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !343, file: !342, line: 270, baseType: !346, size: 64, align: 64)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64, align: 64)
!347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !228)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !343, file: !342, line: 271, baseType: !225, size: 32, align: 32, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "valtype", scope: !343, file: !342, line: 278, baseType: !225, size: 32, align: 32, offset: 96)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "helpstr", scope: !343, file: !342, line: 279, baseType: !346, size: 64, align: 64, offset: 128)
!351 = !{!352}
!352 = !DISubrange(count: 171)
!353 = distinct !DIGlobalVariable(name: "tls_do", scope: !222, file: !16, line: 2325, type: !354, isLocal: true, isDefinition: true, variable: [3 x i8]* @s_client_main.tls_do)
!354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 24, align: 8, elements: !355)
!355 = !{!356}
!356 = !DISubrange(count: 3)
!357 = distinct !DIGlobalVariable(name: "tls_will", scope: !222, file: !16, line: 2329, type: !354, isLocal: true, isDefinition: true, variable: [3 x i8]* @s_client_main.tls_will)
!358 = distinct !DIGlobalVariable(name: "tls_follows", scope: !222, file: !16, line: 2333, type: !359, isLocal: true, isDefinition: true, variable: [6 x i8]* @s_client_main.tls_follows)
!359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 48, align: 8, elements: !360)
!360 = !{!361}
!361 = !DISubrange(count: 6)
!362 = distinct !DIGlobalVariable(name: "ssl_req", scope: !222, file: !16, line: 2497, type: !363, isLocal: true, isDefinition: true, variable: [36 x i8]* @s_client_main.ssl_req)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 288, align: 8, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 36)
!366 = distinct !DIGlobalVariable(name: "ssl_request", scope: !222, file: !16, line: 2576, type: !367, isLocal: true, isDefinition: true, variable: [8 x i8]* @s_client_main.ssl_request)
!367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 64, align: 8, elements: !368)
!368 = !{!369}
!369 = !DISubrange(count: 8)
!370 = distinct !DIGlobalVariable(name: "ldap_tls_genconf", scope: !222, file: !16, line: 2684, type: !371, isLocal: true, isDefinition: true, variable: [138 x i8]* @s_client_main.ldap_tls_genconf)
!371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 1104, align: 8, elements: !372)
!372 = !{!373}
!373 = !DISubrange(count: 138)
!374 = distinct !DIGlobalVariable(name: "prog", scope: !0, file: !16, line: 62, type: !227, isLocal: true, isDefinition: true, variable: i8** @prog)
!375 = distinct !DIGlobalVariable(name: "next_proto", scope: !0, file: !16, line: 380, type: !376, isLocal: true, isDefinition: true, variable: %struct.tlsextnextprotoctx_st* @next_proto)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "tlsextnextprotoctx", file: !16, line: 378, baseType: !377)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlsextnextprotoctx_st", file: !16, line: 374, size: 192, align: 64, elements: !378)
!378 = !{!379, !380, !384}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !377, file: !16, line: 375, baseType: !299, size: 64, align: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !377, file: !16, line: 376, baseType: !381, size: 64, align: 64, offset: 64)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !382, line: 216, baseType: !383)
!382 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!383 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !377, file: !16, line: 377, baseType: !225, size: 32, align: 32, offset: 128)
!385 = distinct !DIGlobalVariable(name: "c_quiet", scope: !0, file: !16, line: 68, type: !225, isLocal: true, isDefinition: true, variable: i32* @c_quiet)
!386 = distinct !DIGlobalVariable(name: "c_debug", scope: !0, file: !16, line: 63, type: !225, isLocal: true, isDefinition: true, variable: i32* @c_debug)
!387 = distinct !DIGlobalVariable(name: "c_showcerts", scope: !0, file: !16, line: 64, type: !225, isLocal: true, isDefinition: true, variable: i32* @c_showcerts)
!388 = distinct !DIGlobalVariable(name: "sess_out", scope: !0, file: !16, line: 69, type: !227, isLocal: true, isDefinition: true, variable: i8** @sess_out)
!389 = distinct !DIGlobalVariable(name: "psk_identity", scope: !0, file: !16, line: 116, type: !227, isLocal: true, isDefinition: true, variable: i8** @psk_identity)
!390 = distinct !DIGlobalVariable(name: "services", scope: !0, file: !16, line: 818, type: !391, isLocal: true, isDefinition: true, variable: [15 x %struct.string_int_pair_st]* @services)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !392, size: 1920, align: 64, elements: !398)
!392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !393)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "OPT_PAIR", file: !342, line: 290, baseType: !394)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "string_int_pair_st", file: !342, line: 287, size: 128, align: 64, elements: !395)
!395 = !{!396, !397}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !394, file: !342, line: 288, baseType: !346, size: 64, align: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !394, file: !342, line: 289, baseType: !225, size: 32, align: 32, offset: 64)
!398 = !{!399}
!399 = !DISubrange(count: 15)
!400 = distinct !DIGlobalVariable(name: "keymatexportlabel", scope: !0, file: !16, line: 65, type: !227, isLocal: true, isDefinition: true, variable: i8** @keymatexportlabel)
!401 = distinct !DIGlobalVariable(name: "keymatexportlen", scope: !0, file: !16, line: 66, type: !225, isLocal: true, isDefinition: true, variable: i32* @keymatexportlen)
!402 = distinct !DIGlobalVariable(name: "bio_c_out", scope: !0, file: !16, line: 67, type: !305, isLocal: true, isDefinition: true, variable: %struct.bio_st** @bio_c_out)
!403 = distinct !DIGlobalVariable(name: "psksess", scope: !0, file: !16, line: 70, type: !404, isLocal: true, isDefinition: true, variable: %struct.ssl_session_st** @psksess)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64, align: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_SESSION", file: !255, line: 213, baseType: !406)
!406 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_session_st", file: !255, line: 213, flags: DIFlagFwdDecl)
!407 = distinct !DIGlobalVariable(name: "usage", scope: !408, file: !16, line: 508, type: !323, isLocal: true, isDefinition: true, variable: i8* @tlsa_import_rr.usage)
!408 = distinct !DISubprogram(name: "tlsa_import_rr", scope: !16, file: !16, line: 505, type: !409, isLocal: true, isDefinition: true, scopeLine: 506, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!409 = !DISubroutineType(types: !410)
!410 = !{!225, !411, !346}
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64, align: 64)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL", file: !307, line: 151, baseType: !413)
!413 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_st", file: !307, line: 151, flags: DIFlagFwdDecl)
!414 = distinct !DIGlobalVariable(name: "selector", scope: !408, file: !16, line: 509, type: !323, isLocal: true, isDefinition: true, variable: i8* @tlsa_import_rr.selector)
!415 = distinct !DIGlobalVariable(name: "mtype", scope: !408, file: !16, line: 510, type: !323, isLocal: true, isDefinition: true, variable: i8* @tlsa_import_rr.mtype)
!416 = distinct !DIGlobalVariable(name: "data", scope: !408, file: !16, line: 511, type: !299, isLocal: true, isDefinition: true, variable: i8** @tlsa_import_rr.data)
!417 = distinct !DIGlobalVariable(name: "tlsa_fields", scope: !408, file: !16, line: 512, type: !418, isLocal: true, isDefinition: true, variable: [5 x %struct.tlsa_field]* @tlsa_import_rr.tlsa_fields)
!418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 960, align: 64, elements: !432)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlsa_field", file: !16, line: 499, size: 192, align: 64, elements: !420)
!420 = !{!421, !422, !423}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !419, file: !16, line: 500, baseType: !268, size: 64, align: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !419, file: !16, line: 501, baseType: !346, size: 64, align: 64, offset: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !419, file: !16, line: 502, baseType: !424, size: 64, align: 64, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64, align: 64)
!425 = !DISubroutineType(types: !426)
!426 = !{!427, !431, !268}
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !428, line: 109, baseType: !429)
!428 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !430, line: 172, baseType: !277)
!430 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64, align: 64)
!432 = !{!433}
!433 = !DISubrange(count: 5)
!434 = distinct !DIGlobalVariable(name: "saved_errno", scope: !0, file: !16, line: 79, type: !225, isLocal: true, isDefinition: true, variable: i32* @saved_errno)
!435 = !{i32 2, !"Dwarf Version", i32 4}
!436 = !{i32 2, !"Debug Info Version", i32 3}
!437 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!438 = !DILocalVariable(name: "argc", arg: 1, scope: !222, file: !16, line: 885, type: !225)
!439 = !DIExpression()
!440 = !DILocation(line: 885, column: 23, scope: !222)
!441 = !DILocalVariable(name: "argv", arg: 2, scope: !222, file: !16, line: 885, type: !226)
!442 = !DILocation(line: 885, column: 36, scope: !222)
!443 = !DILocalVariable(name: "sbio", scope: !222, file: !16, line: 887, type: !305)
!444 = !DILocation(line: 887, column: 10, scope: !222)
!445 = !DILocalVariable(name: "key", scope: !222, file: !16, line: 888, type: !446)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64, align: 64)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "EVP_PKEY", file: !307, line: 95, baseType: !448)
!448 = !DICompositeType(tag: DW_TAG_structure_type, name: "evp_pkey_st", file: !307, line: 95, flags: DIFlagFwdDecl)
!449 = !DILocation(line: 888, column: 15, scope: !222)
!450 = !DILocalVariable(name: "con", scope: !222, file: !16, line: 889, type: !411)
!451 = !DILocation(line: 889, column: 10, scope: !222)
!452 = !DILocalVariable(name: "ctx", scope: !222, file: !16, line: 890, type: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64, align: 64)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_CTX", file: !307, line: 152, baseType: !455)
!455 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_ctx_st", file: !307, line: 152, flags: DIFlagFwdDecl)
!456 = !DILocation(line: 890, column: 14, scope: !222)
!457 = !DILocalVariable(name: "chain", scope: !222, file: !16, line: 891, type: !458)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64, align: 64)
!459 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509", file: !292, line: 99, flags: DIFlagFwdDecl)
!460 = !DILocation(line: 891, column: 27, scope: !222)
!461 = !DILocalVariable(name: "cert", scope: !222, file: !16, line: 892, type: !326)
!462 = !DILocation(line: 892, column: 11, scope: !222)
!463 = !DILocalVariable(name: "vpm", scope: !222, file: !16, line: 893, type: !464)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64, align: 64)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_VERIFY_PARAM", file: !307, line: 137, baseType: !466)
!466 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_VERIFY_PARAM_st", file: !307, line: 137, flags: DIFlagFwdDecl)
!467 = !DILocation(line: 893, column: 24, scope: !222)
!468 = !DILocalVariable(name: "exc", scope: !222, file: !16, line: 894, type: !469)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64, align: 64)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_EXCERT", file: !471, line: 70, baseType: !472)
!471 = !DIFile(filename: "apps/include/s_apps.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!472 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_excert_st", file: !471, line: 70, flags: DIFlagFwdDecl)
!473 = !DILocation(line: 894, column: 17, scope: !222)
!474 = !DILocalVariable(name: "cctx", scope: !222, file: !16, line: 895, type: !475)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64, align: 64)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_CONF_CTX", file: !255, line: 215, baseType: !477)
!477 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_conf_ctx_st", file: !255, line: 215, flags: DIFlagFwdDecl)
!478 = !DILocation(line: 895, column: 19, scope: !222)
!479 = !DILocalVariable(name: "ssl_args", scope: !222, file: !16, line: 896, type: !281)
!480 = !DILocation(line: 896, column: 37, scope: !222)
!481 = !DILocalVariable(name: "dane_tlsa_domain", scope: !222, file: !16, line: 897, type: !227)
!482 = !DILocation(line: 897, column: 11, scope: !222)
!483 = !DILocalVariable(name: "dane_tlsa_rrset", scope: !222, file: !16, line: 898, type: !281)
!484 = !DILocation(line: 898, column: 37, scope: !222)
!485 = !DILocalVariable(name: "dane_ee_no_name", scope: !222, file: !16, line: 899, type: !225)
!486 = !DILocation(line: 899, column: 9, scope: !222)
!487 = !DILocalVariable(name: "crls", scope: !222, file: !16, line: 900, type: !290)
!488 = !DILocation(line: 900, column: 31, scope: !222)
!489 = !DILocalVariable(name: "meth", scope: !222, file: !16, line: 901, type: !490)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64, align: 64)
!491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_METHOD", file: !255, line: 211, baseType: !493)
!493 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_method_st", file: !255, line: 211, flags: DIFlagFwdDecl)
!494 = !DILocation(line: 901, column: 23, scope: !222)
!495 = !DILocation(line: 901, column: 30, scope: !222)
!496 = !DILocalVariable(name: "CApath", scope: !222, file: !16, line: 902, type: !346)
!497 = !DILocation(line: 902, column: 17, scope: !222)
!498 = !DILocalVariable(name: "CAfile", scope: !222, file: !16, line: 902, type: !346)
!499 = !DILocation(line: 902, column: 32, scope: !222)
!500 = !DILocalVariable(name: "cbuf", scope: !222, file: !16, line: 903, type: !227)
!501 = !DILocation(line: 903, column: 11, scope: !222)
!502 = !DILocalVariable(name: "sbuf", scope: !222, file: !16, line: 903, type: !227)
!503 = !DILocation(line: 903, column: 24, scope: !222)
!504 = !DILocalVariable(name: "mbuf", scope: !222, file: !16, line: 903, type: !227)
!505 = !DILocation(line: 903, column: 38, scope: !222)
!506 = !DILocalVariable(name: "proxystr", scope: !222, file: !16, line: 904, type: !227)
!507 = !DILocation(line: 904, column: 11, scope: !222)
!508 = !DILocalVariable(name: "proxyuser", scope: !222, file: !16, line: 904, type: !227)
!509 = !DILocation(line: 904, column: 28, scope: !222)
!510 = !DILocalVariable(name: "proxypassarg", scope: !222, file: !16, line: 905, type: !227)
!511 = !DILocation(line: 905, column: 11, scope: !222)
!512 = !DILocalVariable(name: "proxypass", scope: !222, file: !16, line: 905, type: !227)
!513 = !DILocation(line: 905, column: 32, scope: !222)
!514 = !DILocalVariable(name: "connectstr", scope: !222, file: !16, line: 906, type: !227)
!515 = !DILocation(line: 906, column: 11, scope: !222)
!516 = !DILocalVariable(name: "bindstr", scope: !222, file: !16, line: 906, type: !227)
!517 = !DILocation(line: 906, column: 30, scope: !222)
!518 = !DILocalVariable(name: "cert_file", scope: !222, file: !16, line: 907, type: !227)
!519 = !DILocation(line: 907, column: 11, scope: !222)
!520 = !DILocalVariable(name: "key_file", scope: !222, file: !16, line: 907, type: !227)
!521 = !DILocation(line: 907, column: 29, scope: !222)
!522 = !DILocalVariable(name: "chain_file", scope: !222, file: !16, line: 907, type: !227)
!523 = !DILocation(line: 907, column: 47, scope: !222)
!524 = !DILocalVariable(name: "chCApath", scope: !222, file: !16, line: 908, type: !227)
!525 = !DILocation(line: 908, column: 11, scope: !222)
!526 = !DILocalVariable(name: "chCAfile", scope: !222, file: !16, line: 908, type: !227)
!527 = !DILocation(line: 908, column: 28, scope: !222)
!528 = !DILocalVariable(name: "host", scope: !222, file: !16, line: 908, type: !227)
!529 = !DILocation(line: 908, column: 46, scope: !222)
!530 = !DILocalVariable(name: "port", scope: !222, file: !16, line: 909, type: !227)
!531 = !DILocation(line: 909, column: 11, scope: !222)
!532 = !DILocation(line: 909, column: 18, scope: !222)
!533 = !DILocalVariable(name: "bindhost", scope: !222, file: !16, line: 910, type: !227)
!534 = !DILocation(line: 910, column: 11, scope: !222)
!535 = !DILocalVariable(name: "bindport", scope: !222, file: !16, line: 910, type: !227)
!536 = !DILocation(line: 910, column: 28, scope: !222)
!537 = !DILocalVariable(name: "passarg", scope: !222, file: !16, line: 911, type: !227)
!538 = !DILocation(line: 911, column: 11, scope: !222)
!539 = !DILocalVariable(name: "pass", scope: !222, file: !16, line: 911, type: !227)
!540 = !DILocation(line: 911, column: 27, scope: !222)
!541 = !DILocalVariable(name: "vfyCApath", scope: !222, file: !16, line: 911, type: !227)
!542 = !DILocation(line: 911, column: 41, scope: !222)
!543 = !DILocalVariable(name: "vfyCAfile", scope: !222, file: !16, line: 911, type: !227)
!544 = !DILocation(line: 911, column: 60, scope: !222)
!545 = !DILocalVariable(name: "ReqCAfile", scope: !222, file: !16, line: 912, type: !227)
!546 = !DILocation(line: 912, column: 11, scope: !222)
!547 = !DILocalVariable(name: "sess_in", scope: !222, file: !16, line: 913, type: !227)
!548 = !DILocation(line: 913, column: 11, scope: !222)
!549 = !DILocalVariable(name: "crl_file", scope: !222, file: !16, line: 913, type: !227)
!550 = !DILocation(line: 913, column: 27, scope: !222)
!551 = !DILocalVariable(name: "p", scope: !222, file: !16, line: 913, type: !227)
!552 = !DILocation(line: 913, column: 45, scope: !222)
!553 = !DILocalVariable(name: "protohost", scope: !222, file: !16, line: 914, type: !346)
!554 = !DILocation(line: 914, column: 17, scope: !222)
!555 = !DILocalVariable(name: "timeout", scope: !222, file: !16, line: 915, type: !556)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !557, line: 30, size: 128, align: 64, elements: !558)
!557 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!558 = !{!559, !561}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !556, file: !557, line: 32, baseType: !560, size: 64, align: 64)
!560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !430, line: 139, baseType: !277)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !556, file: !557, line: 33, baseType: !562, size: 64, align: 64, offset: 64)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !430, line: 141, baseType: !277)
!563 = !DILocation(line: 915, column: 20, scope: !222)
!564 = !DILocalVariable(name: "timeoutp", scope: !222, file: !16, line: 915, type: !565)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64, align: 64)
!566 = !DILocation(line: 915, column: 30, scope: !222)
!567 = !DILocalVariable(name: "readfds", scope: !222, file: !16, line: 916, type: !568)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !276, line: 75, baseType: !569)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !276, line: 64, size: 1024, align: 64, elements: !570)
!570 = !{!571}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "__fds_bits", scope: !569, file: !276, line: 72, baseType: !572, size: 1024, align: 64)
!572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !275, size: 1024, align: 64, elements: !573)
!573 = !{!574}
!574 = !DISubrange(count: 16)
!575 = !DILocation(line: 916, column: 12, scope: !222)
!576 = !DILocalVariable(name: "writefds", scope: !222, file: !16, line: 916, type: !568)
!577 = !DILocation(line: 916, column: 21, scope: !222)
!578 = !DILocalVariable(name: "noCApath", scope: !222, file: !16, line: 917, type: !225)
!579 = !DILocation(line: 917, column: 9, scope: !222)
!580 = !DILocalVariable(name: "noCAfile", scope: !222, file: !16, line: 917, type: !225)
!581 = !DILocation(line: 917, column: 23, scope: !222)
!582 = !DILocalVariable(name: "build_chain", scope: !222, file: !16, line: 918, type: !225)
!583 = !DILocation(line: 918, column: 9, scope: !222)
!584 = !DILocalVariable(name: "cbuf_len", scope: !222, file: !16, line: 918, type: !225)
!585 = !DILocation(line: 918, column: 26, scope: !222)
!586 = !DILocalVariable(name: "cbuf_off", scope: !222, file: !16, line: 918, type: !225)
!587 = !DILocation(line: 918, column: 36, scope: !222)
!588 = !DILocalVariable(name: "cert_format", scope: !222, file: !16, line: 918, type: !225)
!589 = !DILocation(line: 918, column: 46, scope: !222)
!590 = !DILocalVariable(name: "key_format", scope: !222, file: !16, line: 919, type: !225)
!591 = !DILocation(line: 919, column: 9, scope: !222)
!592 = !DILocalVariable(name: "crlf", scope: !222, file: !16, line: 919, type: !225)
!593 = !DILocation(line: 919, column: 36, scope: !222)
!594 = !DILocalVariable(name: "full_log", scope: !222, file: !16, line: 919, type: !225)
!595 = !DILocation(line: 919, column: 46, scope: !222)
!596 = !DILocalVariable(name: "mbuf_len", scope: !222, file: !16, line: 919, type: !225)
!597 = !DILocation(line: 919, column: 60, scope: !222)
!598 = !DILocalVariable(name: "prexit", scope: !222, file: !16, line: 920, type: !225)
!599 = !DILocation(line: 920, column: 9, scope: !222)
!600 = !DILocalVariable(name: "sdebug", scope: !222, file: !16, line: 921, type: !225)
!601 = !DILocation(line: 921, column: 9, scope: !222)
!602 = !DILocalVariable(name: "reconnect", scope: !222, file: !16, line: 922, type: !225)
!603 = !DILocation(line: 922, column: 9, scope: !222)
!604 = !DILocalVariable(name: "verify", scope: !222, file: !16, line: 922, type: !225)
!605 = !DILocation(line: 922, column: 24, scope: !222)
!606 = !DILocalVariable(name: "vpmtouched", scope: !222, file: !16, line: 922, type: !225)
!607 = !DILocation(line: 922, column: 39, scope: !222)
!608 = !DILocalVariable(name: "ret", scope: !222, file: !16, line: 923, type: !225)
!609 = !DILocation(line: 923, column: 9, scope: !222)
!610 = !DILocalVariable(name: "in_init", scope: !222, file: !16, line: 923, type: !225)
!611 = !DILocation(line: 923, column: 18, scope: !222)
!612 = !DILocalVariable(name: "i", scope: !222, file: !16, line: 923, type: !225)
!613 = !DILocation(line: 923, column: 31, scope: !222)
!614 = !DILocalVariable(name: "nbio_test", scope: !222, file: !16, line: 923, type: !225)
!615 = !DILocation(line: 923, column: 34, scope: !222)
!616 = !DILocalVariable(name: "s", scope: !222, file: !16, line: 923, type: !225)
!617 = !DILocation(line: 923, column: 49, scope: !222)
!618 = !DILocalVariable(name: "k", scope: !222, file: !16, line: 923, type: !225)
!619 = !DILocation(line: 923, column: 57, scope: !222)
!620 = !DILocalVariable(name: "width", scope: !222, file: !16, line: 923, type: !225)
!621 = !DILocation(line: 923, column: 60, scope: !222)
!622 = !DILocalVariable(name: "state", scope: !222, file: !16, line: 923, type: !225)
!623 = !DILocation(line: 923, column: 67, scope: !222)
!624 = !DILocalVariable(name: "sbuf_len", scope: !222, file: !16, line: 924, type: !225)
!625 = !DILocation(line: 924, column: 9, scope: !222)
!626 = !DILocalVariable(name: "sbuf_off", scope: !222, file: !16, line: 924, type: !225)
!627 = !DILocation(line: 924, column: 19, scope: !222)
!628 = !DILocalVariable(name: "cmdletters", scope: !222, file: !16, line: 924, type: !225)
!629 = !DILocation(line: 924, column: 29, scope: !222)
!630 = !DILocalVariable(name: "socket_family", scope: !222, file: !16, line: 925, type: !225)
!631 = !DILocation(line: 925, column: 9, scope: !222)
!632 = !DILocalVariable(name: "socket_type", scope: !222, file: !16, line: 925, type: !225)
!633 = !DILocation(line: 925, column: 35, scope: !222)
!634 = !DILocalVariable(name: "protocol", scope: !222, file: !16, line: 925, type: !225)
!635 = !DILocation(line: 925, column: 62, scope: !222)
!636 = !DILocalVariable(name: "starttls_proto", scope: !222, file: !16, line: 926, type: !225)
!637 = !DILocation(line: 926, column: 9, scope: !222)
!638 = !DILocalVariable(name: "crl_format", scope: !222, file: !16, line: 926, type: !225)
!639 = !DILocation(line: 926, column: 37, scope: !222)
!640 = !DILocalVariable(name: "crl_download", scope: !222, file: !16, line: 926, type: !225)
!641 = !DILocation(line: 926, column: 64, scope: !222)
!642 = !DILocalVariable(name: "write_tty", scope: !222, file: !16, line: 927, type: !225)
!643 = !DILocation(line: 927, column: 9, scope: !222)
!644 = !DILocalVariable(name: "read_tty", scope: !222, file: !16, line: 927, type: !225)
!645 = !DILocation(line: 927, column: 20, scope: !222)
!646 = !DILocalVariable(name: "write_ssl", scope: !222, file: !16, line: 927, type: !225)
!647 = !DILocation(line: 927, column: 30, scope: !222)
!648 = !DILocalVariable(name: "read_ssl", scope: !222, file: !16, line: 927, type: !225)
!649 = !DILocation(line: 927, column: 41, scope: !222)
!650 = !DILocalVariable(name: "tty_on", scope: !222, file: !16, line: 927, type: !225)
!651 = !DILocation(line: 927, column: 51, scope: !222)
!652 = !DILocalVariable(name: "ssl_pending", scope: !222, file: !16, line: 927, type: !225)
!653 = !DILocation(line: 927, column: 59, scope: !222)
!654 = !DILocalVariable(name: "at_eof", scope: !222, file: !16, line: 929, type: !225)
!655 = !DILocation(line: 929, column: 9, scope: !222)
!656 = !DILocalVariable(name: "read_buf_len", scope: !222, file: !16, line: 931, type: !225)
!657 = !DILocation(line: 931, column: 9, scope: !222)
!658 = !DILocalVariable(name: "fallback_scsv", scope: !222, file: !16, line: 932, type: !225)
!659 = !DILocation(line: 932, column: 9, scope: !222)
!660 = !DILocalVariable(name: "o", scope: !222, file: !16, line: 933, type: !661)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "OPTION_CHOICE", file: !16, line: 603, baseType: !34)
!662 = !DILocation(line: 933, column: 19, scope: !222)
!663 = !DILocalVariable(name: "enable_timeouts", scope: !222, file: !16, line: 935, type: !225)
!664 = !DILocation(line: 935, column: 9, scope: !222)
!665 = !DILocalVariable(name: "socket_mtu", scope: !222, file: !16, line: 936, type: !277)
!666 = !DILocation(line: 936, column: 10, scope: !222)
!667 = !DILocalVariable(name: "ssl_client_engine", scope: !222, file: !16, line: 939, type: !668)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64, align: 64)
!669 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENGINE", file: !307, line: 150, baseType: !670)
!670 = !DICompositeType(tag: DW_TAG_structure_type, name: "engine_st", file: !307, line: 150, flags: DIFlagFwdDecl)
!671 = !DILocation(line: 939, column: 13, scope: !222)
!672 = !DILocalVariable(name: "e", scope: !222, file: !16, line: 941, type: !668)
!673 = !DILocation(line: 941, column: 13, scope: !222)
!674 = !DILocalVariable(name: "servername", scope: !222, file: !16, line: 945, type: !346)
!675 = !DILocation(line: 945, column: 17, scope: !222)
!676 = !DILocalVariable(name: "noservername", scope: !222, file: !16, line: 946, type: !225)
!677 = !DILocation(line: 946, column: 9, scope: !222)
!678 = !DILocalVariable(name: "alpn_in", scope: !222, file: !16, line: 947, type: !346)
!679 = !DILocation(line: 947, column: 17, scope: !222)
!680 = !DILocalVariable(name: "tlsextcbp", scope: !222, file: !16, line: 948, type: !301)
!681 = !DILocation(line: 948, column: 15, scope: !222)
!682 = !DILocalVariable(name: "ssl_config", scope: !222, file: !16, line: 949, type: !346)
!683 = !DILocation(line: 949, column: 17, scope: !222)
!684 = !DILocalVariable(name: "serverinfo_types", scope: !222, file: !16, line: 951, type: !685)
!685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !270, size: 1600, align: 16, elements: !686)
!686 = !{!687}
!687 = !DISubrange(count: 100)
!688 = !DILocation(line: 951, column: 20, scope: !222)
!689 = !DILocalVariable(name: "serverinfo_count", scope: !222, file: !16, line: 952, type: !225)
!690 = !DILocation(line: 952, column: 9, scope: !222)
!691 = !DILocalVariable(name: "start", scope: !222, file: !16, line: 952, type: !225)
!692 = !DILocation(line: 952, column: 31, scope: !222)
!693 = !DILocalVariable(name: "len", scope: !222, file: !16, line: 952, type: !225)
!694 = !DILocation(line: 952, column: 42, scope: !222)
!695 = !DILocalVariable(name: "next_proto_neg_in", scope: !222, file: !16, line: 954, type: !346)
!696 = !DILocation(line: 954, column: 17, scope: !222)
!697 = !DILocalVariable(name: "srppass", scope: !222, file: !16, line: 957, type: !227)
!698 = !DILocation(line: 957, column: 11, scope: !222)
!699 = !DILocalVariable(name: "srp_lateuser", scope: !222, file: !16, line: 958, type: !225)
!700 = !DILocation(line: 958, column: 9, scope: !222)
!701 = !DILocalVariable(name: "srp_arg", scope: !222, file: !16, line: 959, type: !311)
!702 = !DILocation(line: 959, column: 13, scope: !222)
!703 = !DILocalVariable(name: "srtp_profiles", scope: !222, file: !16, line: 962, type: !227)
!704 = !DILocation(line: 962, column: 11, scope: !222)
!705 = !DILocalVariable(name: "ctlog_file", scope: !222, file: !16, line: 965, type: !227)
!706 = !DILocation(line: 965, column: 11, scope: !222)
!707 = !DILocalVariable(name: "ct_validation", scope: !222, file: !16, line: 966, type: !225)
!708 = !DILocation(line: 966, column: 9, scope: !222)
!709 = !DILocalVariable(name: "min_version", scope: !222, file: !16, line: 968, type: !225)
!710 = !DILocation(line: 968, column: 9, scope: !222)
!711 = !DILocalVariable(name: "max_version", scope: !222, file: !16, line: 968, type: !225)
!712 = !DILocation(line: 968, column: 26, scope: !222)
!713 = !DILocalVariable(name: "prot_opt", scope: !222, file: !16, line: 968, type: !225)
!714 = !DILocation(line: 968, column: 43, scope: !222)
!715 = !DILocalVariable(name: "no_prot_opt", scope: !222, file: !16, line: 968, type: !225)
!716 = !DILocation(line: 968, column: 57, scope: !222)
!717 = !DILocalVariable(name: "async", scope: !222, file: !16, line: 969, type: !225)
!718 = !DILocation(line: 969, column: 9, scope: !222)
!719 = !DILocalVariable(name: "max_send_fragment", scope: !222, file: !16, line: 970, type: !280)
!720 = !DILocation(line: 970, column: 18, scope: !222)
!721 = !DILocalVariable(name: "split_send_fragment", scope: !222, file: !16, line: 971, type: !280)
!722 = !DILocation(line: 971, column: 18, scope: !222)
!723 = !DILocalVariable(name: "max_pipelines", scope: !222, file: !16, line: 971, type: !280)
!724 = !DILocation(line: 971, column: 43, scope: !222)
!725 = !DILocalVariable(name: "connect_type", scope: !222, file: !16, line: 972, type: !221)
!726 = !DILocation(line: 972, column: 46, scope: !222)
!727 = !DILocalVariable(name: "count4or6", scope: !222, file: !16, line: 973, type: !225)
!728 = !DILocation(line: 973, column: 9, scope: !222)
!729 = !DILocalVariable(name: "maxfraglen", scope: !222, file: !16, line: 974, type: !323)
!730 = !DILocation(line: 974, column: 13, scope: !222)
!731 = !DILocalVariable(name: "c_nbio", scope: !222, file: !16, line: 975, type: !225)
!732 = !DILocation(line: 975, column: 9, scope: !222)
!733 = !DILocalVariable(name: "c_msg", scope: !222, file: !16, line: 975, type: !225)
!734 = !DILocation(line: 975, column: 21, scope: !222)
!735 = !DILocalVariable(name: "c_ign_eof", scope: !222, file: !16, line: 975, type: !225)
!736 = !DILocation(line: 975, column: 32, scope: !222)
!737 = !DILocalVariable(name: "c_brief", scope: !222, file: !16, line: 975, type: !225)
!738 = !DILocation(line: 975, column: 47, scope: !222)
!739 = !DILocalVariable(name: "c_tlsextdebug", scope: !222, file: !16, line: 976, type: !225)
!740 = !DILocation(line: 976, column: 9, scope: !222)
!741 = !DILocalVariable(name: "c_status_req", scope: !222, file: !16, line: 978, type: !225)
!742 = !DILocation(line: 978, column: 9, scope: !222)
!743 = !DILocalVariable(name: "bio_c_msg", scope: !222, file: !16, line: 980, type: !305)
!744 = !DILocation(line: 980, column: 10, scope: !222)
!745 = !DILocalVariable(name: "keylog_file", scope: !222, file: !16, line: 981, type: !346)
!746 = !DILocation(line: 981, column: 17, scope: !222)
!747 = !DILocalVariable(name: "early_data_file", scope: !222, file: !16, line: 981, type: !346)
!748 = !DILocation(line: 981, column: 37, scope: !222)
!749 = !DILocalVariable(name: "isdtls", scope: !222, file: !16, line: 983, type: !225)
!750 = !DILocation(line: 983, column: 9, scope: !222)
!751 = !DILocalVariable(name: "psksessf", scope: !222, file: !16, line: 985, type: !227)
!752 = !DILocation(line: 985, column: 11, scope: !222)
!753 = !DILocalVariable(name: "enable_pha", scope: !222, file: !16, line: 986, type: !225)
!754 = !DILocation(line: 986, column: 9, scope: !222)
!755 = !DILocation(line: 991, column: 4, scope: !222)
!756 = distinct !{!756, !755}
!757 = !DILocalVariable(name: "__d0", scope: !758, file: !16, line: 991, type: !225)
!758 = distinct !DILexicalBlock(scope: !222, file: !16, line: 991, column: 7)
!759 = !DILocation(line: 991, column: 13, scope: !758)
!760 = !DILocalVariable(name: "__d1", scope: !758, file: !16, line: 991, type: !225)
!761 = !DILocation(line: 991, column: 19, scope: !758)
!762 = !DILocation(line: 991, column: 7, scope: !763)
!763 = !DILexicalBlockFile(scope: !758, file: !16, discriminator: 1)
!764 = !DILocation(line: 991, column: 156, scope: !763)
!765 = !DILocation(line: 991, column: 25, scope: !763)
!766 = !{i32 928146}
!767 = !DILocation(line: 991, column: 36, scope: !763)
!768 = !DILocation(line: 992, column: 4, scope: !222)
!769 = distinct !{!769, !768}
!770 = !DILocalVariable(name: "__d0", scope: !771, file: !16, line: 992, type: !225)
!771 = distinct !DILexicalBlock(scope: !222, file: !16, line: 992, column: 7)
!772 = !DILocation(line: 992, column: 13, scope: !771)
!773 = !DILocalVariable(name: "__d1", scope: !771, file: !16, line: 992, type: !225)
!774 = !DILocation(line: 992, column: 19, scope: !771)
!775 = !DILocation(line: 992, column: 7, scope: !776)
!776 = !DILexicalBlockFile(scope: !771, file: !16, discriminator: 1)
!777 = !DILocation(line: 992, column: 156, scope: !776)
!778 = !DILocation(line: 992, column: 25, scope: !776)
!779 = !{i32 928494}
!780 = !DILocation(line: 992, column: 36, scope: !776)
!781 = !DILocation(line: 1001, column: 25, scope: !222)
!782 = !DILocation(line: 1001, column: 12, scope: !222)
!783 = !DILocation(line: 1001, column: 10, scope: !222)
!784 = !DILocation(line: 1002, column: 13, scope: !222)
!785 = !DILocation(line: 1003, column: 13, scope: !222)
!786 = !DILocation(line: 1004, column: 17, scope: !222)
!787 = !DILocation(line: 1005, column: 12, scope: !222)
!788 = !DILocation(line: 1006, column: 11, scope: !222)
!789 = !DILocation(line: 1006, column: 9, scope: !222)
!790 = !DILocation(line: 1007, column: 12, scope: !222)
!791 = !DILocation(line: 1007, column: 10, scope: !222)
!792 = !DILocation(line: 1009, column: 9, scope: !793)
!793 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1009, column: 9)
!794 = !DILocation(line: 1009, column: 13, scope: !793)
!795 = !DILocation(line: 1009, column: 20, scope: !793)
!796 = !DILocation(line: 1009, column: 23, scope: !797)
!797 = !DILexicalBlockFile(scope: !793, file: !16, discriminator: 1)
!798 = !DILocation(line: 1009, column: 28, scope: !797)
!799 = !DILocation(line: 1009, column: 9, scope: !797)
!800 = !DILocation(line: 1010, column: 20, scope: !801)
!801 = distinct !DILexicalBlock(scope: !793, file: !16, line: 1009, column: 37)
!802 = !DILocation(line: 1010, column: 52, scope: !801)
!803 = !DILocation(line: 1010, column: 9, scope: !801)
!804 = !DILocation(line: 1011, column: 9, scope: !801)
!805 = !DILocation(line: 1014, column: 12, scope: !222)
!806 = !DILocation(line: 1014, column: 10, scope: !222)
!807 = !DILocation(line: 1015, column: 12, scope: !222)
!808 = !DILocation(line: 1015, column: 10, scope: !222)
!809 = !DILocation(line: 1016, column: 12, scope: !222)
!810 = !DILocation(line: 1016, column: 10, scope: !222)
!811 = !DILocation(line: 1018, column: 28, scope: !222)
!812 = !DILocation(line: 1018, column: 5, scope: !222)
!813 = !DILocation(line: 1020, column: 21, scope: !222)
!814 = !DILocation(line: 1020, column: 27, scope: !222)
!815 = !DILocation(line: 1020, column: 12, scope: !222)
!816 = !DILocation(line: 1020, column: 10, scope: !222)
!817 = !DILocation(line: 1021, column: 5, scope: !222)
!818 = !DILocation(line: 1021, column: 17, scope: !819)
!819 = !DILexicalBlockFile(scope: !222, file: !16, discriminator: 1)
!820 = !DILocation(line: 1021, column: 15, scope: !819)
!821 = !DILocation(line: 1021, column: 29, scope: !819)
!822 = !DILocation(line: 1021, column: 5, scope: !819)
!823 = !DILocation(line: 1023, column: 13, scope: !824)
!824 = distinct !DILexicalBlock(scope: !825, file: !16, line: 1023, column: 13)
!825 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1021, column: 41)
!826 = !DILocation(line: 1023, column: 26, scope: !824)
!827 = !DILocation(line: 1023, column: 38, scope: !824)
!828 = !DILocation(line: 1023, column: 42, scope: !829)
!829 = !DILexicalBlockFile(scope: !824, file: !16, discriminator: 1)
!830 = !DILocation(line: 1023, column: 44, scope: !829)
!831 = !DILocation(line: 1023, column: 53, scope: !829)
!832 = !DILocation(line: 1023, column: 56, scope: !833)
!833 = !DILexicalBlockFile(scope: !824, file: !16, discriminator: 2)
!834 = !DILocation(line: 1023, column: 58, scope: !833)
!835 = !DILocation(line: 1023, column: 67, scope: !833)
!836 = !DILocation(line: 1023, column: 70, scope: !837)
!837 = !DILexicalBlockFile(scope: !824, file: !16, discriminator: 3)
!838 = !DILocation(line: 1023, column: 72, scope: !837)
!839 = !DILocation(line: 1023, column: 84, scope: !837)
!840 = !DILocation(line: 1023, column: 87, scope: !841)
!841 = !DILexicalBlockFile(scope: !824, file: !16, discriminator: 4)
!842 = !DILocation(line: 1023, column: 89, scope: !841)
!843 = !DILocation(line: 1023, column: 101, scope: !841)
!844 = !DILocation(line: 1023, column: 104, scope: !845)
!845 = !DILexicalBlockFile(scope: !824, file: !16, discriminator: 5)
!846 = !DILocation(line: 1023, column: 106, scope: !845)
!847 = !DILocation(line: 1023, column: 13, scope: !845)
!848 = !DILocation(line: 1024, column: 24, scope: !849)
!849 = distinct !DILexicalBlock(scope: !824, file: !16, line: 1023, column: 123)
!850 = !DILocation(line: 1026, column: 24, scope: !849)
!851 = !DILocation(line: 1024, column: 13, scope: !849)
!852 = !DILocation(line: 1027, column: 13, scope: !849)
!853 = !DILocation(line: 1029, column: 13, scope: !854)
!854 = distinct !DILexicalBlock(scope: !825, file: !16, line: 1029, column: 13)
!855 = !DILocation(line: 1029, column: 26, scope: !854)
!856 = !DILocation(line: 1029, column: 38, scope: !854)
!857 = !DILocation(line: 1029, column: 42, scope: !858)
!858 = !DILexicalBlockFile(scope: !854, file: !16, discriminator: 1)
!859 = !DILocation(line: 1029, column: 44, scope: !858)
!860 = !DILocation(line: 1029, column: 13, scope: !858)
!861 = !DILocation(line: 1030, column: 24, scope: !862)
!862 = distinct !DILexicalBlock(scope: !854, file: !16, line: 1029, column: 58)
!863 = !DILocation(line: 1032, column: 24, scope: !862)
!864 = !DILocation(line: 1030, column: 13, scope: !862)
!865 = !DILocation(line: 1033, column: 13, scope: !862)
!866 = !DILocation(line: 1036, column: 14, scope: !867)
!867 = distinct !DILexicalBlock(scope: !825, file: !16, line: 1036, column: 13)
!868 = !DILocation(line: 1036, column: 16, scope: !867)
!869 = !DILocation(line: 1036, column: 28, scope: !867)
!870 = !DILocation(line: 1036, column: 31, scope: !871)
!871 = !DILexicalBlockFile(scope: !867, file: !16, discriminator: 1)
!872 = !DILocation(line: 1036, column: 33, scope: !871)
!873 = !DILocation(line: 1036, column: 45, scope: !871)
!874 = !DILocation(line: 1036, column: 48, scope: !875)
!875 = !DILexicalBlockFile(scope: !867, file: !16, discriminator: 2)
!876 = !DILocation(line: 1036, column: 50, scope: !875)
!877 = !DILocation(line: 1036, column: 64, scope: !875)
!878 = !DILocation(line: 1036, column: 67, scope: !879)
!879 = !DILexicalBlockFile(scope: !867, file: !16, discriminator: 3)
!880 = !DILocation(line: 1036, column: 69, scope: !879)
!881 = !DILocation(line: 1036, column: 83, scope: !879)
!882 = !DILocation(line: 1036, column: 86, scope: !883)
!883 = !DILexicalBlockFile(scope: !867, file: !16, discriminator: 4)
!884 = !DILocation(line: 1036, column: 88, scope: !883)
!885 = !DILocation(line: 1036, column: 102, scope: !883)
!886 = !DILocation(line: 1036, column: 105, scope: !887)
!887 = !DILexicalBlockFile(scope: !867, file: !16, discriminator: 5)
!888 = !DILocation(line: 1036, column: 107, scope: !887)
!889 = !DILocation(line: 1036, column: 119, scope: !887)
!890 = !DILocation(line: 1036, column: 122, scope: !891)
!891 = !DILexicalBlockFile(scope: !867, file: !16, discriminator: 6)
!892 = !DILocation(line: 1036, column: 124, scope: !891)
!893 = !DILocation(line: 1036, column: 137, scope: !891)
!894 = !DILocation(line: 1036, column: 140, scope: !895)
!895 = !DILexicalBlockFile(scope: !867, file: !16, discriminator: 7)
!896 = !DILocation(line: 1036, column: 142, scope: !895)
!897 = !DILocation(line: 1036, column: 158, scope: !895)
!898 = !DILocation(line: 1036, column: 161, scope: !899)
!899 = !DILexicalBlockFile(scope: !867, file: !16, discriminator: 8)
!900 = !DILocation(line: 1036, column: 172, scope: !899)
!901 = !DILocation(line: 1036, column: 13, scope: !899)
!902 = !DILocation(line: 1037, column: 24, scope: !903)
!903 = distinct !DILexicalBlock(scope: !867, file: !16, line: 1036, column: 177)
!904 = !DILocation(line: 1037, column: 13, scope: !903)
!905 = !DILocation(line: 1038, column: 13, scope: !903)
!906 = !DILocation(line: 1040, column: 14, scope: !907)
!907 = distinct !DILexicalBlock(scope: !825, file: !16, line: 1040, column: 13)
!908 = !DILocation(line: 1040, column: 16, scope: !907)
!909 = !DILocation(line: 1040, column: 32, scope: !907)
!910 = !DILocation(line: 1040, column: 35, scope: !911)
!911 = !DILexicalBlockFile(scope: !907, file: !16, discriminator: 1)
!912 = !DILocation(line: 1040, column: 37, scope: !911)
!913 = !DILocation(line: 1040, column: 53, scope: !911)
!914 = !DILocation(line: 1040, column: 56, scope: !915)
!915 = !DILexicalBlockFile(scope: !907, file: !16, discriminator: 2)
!916 = !DILocation(line: 1040, column: 58, scope: !915)
!917 = !DILocation(line: 1040, column: 76, scope: !915)
!918 = !DILocation(line: 1040, column: 79, scope: !919)
!919 = !DILexicalBlockFile(scope: !907, file: !16, discriminator: 3)
!920 = !DILocation(line: 1040, column: 81, scope: !919)
!921 = !DILocation(line: 1040, column: 99, scope: !919)
!922 = !DILocation(line: 1040, column: 102, scope: !923)
!923 = !DILexicalBlockFile(scope: !907, file: !16, discriminator: 4)
!924 = !DILocation(line: 1040, column: 104, scope: !923)
!925 = !DILocation(line: 1040, column: 13, scope: !923)
!926 = !DILocation(line: 1041, column: 24, scope: !907)
!927 = !DILocation(line: 1041, column: 13, scope: !907)
!928 = !DILocation(line: 1042, column: 13, scope: !929)
!929 = distinct !DILexicalBlock(scope: !825, file: !16, line: 1042, column: 13)
!930 = !DILocation(line: 1042, column: 22, scope: !929)
!931 = !DILocation(line: 1042, column: 27, scope: !929)
!932 = !DILocation(line: 1042, column: 30, scope: !933)
!933 = !DILexicalBlockFile(scope: !929, file: !16, discriminator: 1)
!934 = !DILocation(line: 1042, column: 13, scope: !933)
!935 = !DILocation(line: 1043, column: 24, scope: !936)
!936 = distinct !DILexicalBlock(scope: !929, file: !16, line: 1042, column: 43)
!937 = !DILocation(line: 1043, column: 13, scope: !936)
!938 = !DILocation(line: 1045, column: 13, scope: !936)
!939 = !DILocation(line: 1048, column: 17, scope: !825)
!940 = !DILocation(line: 1048, column: 9, scope: !825)
!941 = !DILocation(line: 1048, column: 20, scope: !942)
!942 = !DILexicalBlockFile(scope: !825, file: !16, discriminator: 1)
!943 = !DILocation(line: 1052, column: 24, scope: !944)
!944 = distinct !DILexicalBlock(scope: !825, file: !16, line: 1048, column: 20)
!945 = !DILocation(line: 1052, column: 65, scope: !944)
!946 = !DILocation(line: 1052, column: 13, scope: !944)
!947 = !DILocation(line: 1053, column: 13, scope: !944)
!948 = !DILocation(line: 1055, column: 13, scope: !944)
!949 = !DILocation(line: 1056, column: 17, scope: !944)
!950 = !DILocation(line: 1057, column: 13, scope: !944)
!951 = !DILocation(line: 1059, column: 26, scope: !944)
!952 = !DILocation(line: 1060, column: 27, scope: !944)
!953 = !DILocation(line: 1061, column: 22, scope: !944)
!954 = !DILocation(line: 1062, column: 13, scope: !944)
!955 = !DILocation(line: 1065, column: 26, scope: !944)
!956 = !DILocation(line: 1066, column: 27, scope: !944)
!957 = !DILocation(line: 1067, column: 22, scope: !944)
!958 = !DILocation(line: 1068, column: 13, scope: !944)
!959 = !DILocation(line: 1071, column: 26, scope: !944)
!960 = !DILocation(line: 1072, column: 32, scope: !944)
!961 = !DILocation(line: 1072, column: 13, scope: !962)
!962 = !DILexicalBlockFile(scope: !944, file: !16, discriminator: 1)
!963 = !DILocation(line: 1073, column: 13, scope: !944)
!964 = !DILocation(line: 1075, column: 26, scope: !944)
!965 = !DILocation(line: 1076, column: 32, scope: !944)
!966 = !DILocation(line: 1076, column: 13, scope: !962)
!967 = !DILocation(line: 1077, column: 13, scope: !944)
!968 = !DILocation(line: 1079, column: 26, scope: !944)
!969 = !DILocation(line: 1080, column: 38, scope: !944)
!970 = !DILocation(line: 1080, column: 13, scope: !962)
!971 = !DILocation(line: 1081, column: 13, scope: !944)
!972 = !DILocation(line: 1083, column: 35, scope: !944)
!973 = !DILocation(line: 1083, column: 13, scope: !962)
!974 = !DILocation(line: 1084, column: 13, scope: !944)
!975 = !DILocation(line: 1086, column: 24, scope: !944)
!976 = !DILocation(line: 1086, column: 22, scope: !944)
!977 = !DILocation(line: 1087, column: 28, scope: !944)
!978 = !DILocation(line: 1088, column: 13, scope: !944)
!979 = !DILocation(line: 1090, column: 25, scope: !944)
!980 = !DILocation(line: 1090, column: 23, scope: !944)
!981 = !DILocation(line: 1091, column: 13, scope: !944)
!982 = !DILocation(line: 1093, column: 28, scope: !944)
!983 = !DILocation(line: 1093, column: 26, scope: !944)
!984 = !DILocation(line: 1094, column: 13, scope: !944)
!985 = !DILocation(line: 1097, column: 26, scope: !944)
!986 = !DILocation(line: 1098, column: 27, scope: !944)
!987 = !DILocation(line: 1099, column: 32, scope: !944)
!988 = !DILocation(line: 1099, column: 13, scope: !962)
!989 = !DILocation(line: 1100, column: 13, scope: !944)
!990 = !DILocation(line: 1105, column: 25, scope: !944)
!991 = !DILocation(line: 1105, column: 23, scope: !944)
!992 = !DILocation(line: 1106, column: 13, scope: !944)
!993 = !DILocation(line: 1108, column: 20, scope: !944)
!994 = !DILocation(line: 1109, column: 38, scope: !944)
!995 = !DILocation(line: 1109, column: 33, scope: !962)
!996 = !DILocation(line: 1109, column: 31, scope: !944)
!997 = !DILocation(line: 1110, column: 18, scope: !998)
!998 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1110, column: 17)
!999 = !DILocation(line: 1110, column: 17, scope: !944)
!1000 = !DILocation(line: 1111, column: 28, scope: !998)
!1001 = !DILocation(line: 1111, column: 73, scope: !998)
!1002 = !DILocation(line: 1111, column: 17, scope: !998)
!1003 = !DILocation(line: 1112, column: 13, scope: !944)
!1004 = !DILocation(line: 1114, column: 25, scope: !944)
!1005 = !DILocation(line: 1114, column: 23, scope: !944)
!1006 = !DILocation(line: 1115, column: 13, scope: !944)
!1007 = !DILocation(line: 1117, column: 30, scope: !1008)
!1008 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1117, column: 17)
!1009 = !DILocation(line: 1117, column: 18, scope: !1010)
!1010 = !DILexicalBlockFile(scope: !1008, file: !16, discriminator: 1)
!1011 = !DILocation(line: 1117, column: 18, scope: !1008)
!1012 = !DILocation(line: 1117, column: 17, scope: !944)
!1013 = !DILocation(line: 1118, column: 17, scope: !1008)
!1014 = !DILocation(line: 1119, column: 13, scope: !944)
!1015 = !DILocation(line: 1121, column: 24, scope: !944)
!1016 = !DILocation(line: 1121, column: 22, scope: !944)
!1017 = !DILocation(line: 1122, column: 13, scope: !944)
!1018 = !DILocation(line: 1124, column: 26, scope: !944)
!1019 = !DILocation(line: 1125, column: 13, scope: !944)
!1020 = !DILocation(line: 1127, column: 24, scope: !944)
!1021 = !DILocation(line: 1127, column: 22, scope: !944)
!1022 = !DILocation(line: 1128, column: 13, scope: !944)
!1023 = !DILocation(line: 1130, column: 23, scope: !944)
!1024 = !DILocation(line: 1130, column: 21, scope: !944)
!1025 = !DILocation(line: 1131, column: 13, scope: !944)
!1026 = !DILocation(line: 1133, column: 29, scope: !1027)
!1027 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1133, column: 17)
!1028 = !DILocation(line: 1133, column: 18, scope: !1029)
!1029 = !DILexicalBlockFile(scope: !1027, file: !16, discriminator: 1)
!1030 = !DILocation(line: 1133, column: 18, scope: !1027)
!1031 = !DILocation(line: 1133, column: 17, scope: !944)
!1032 = !DILocation(line: 1134, column: 17, scope: !1027)
!1033 = !DILocation(line: 1135, column: 13, scope: !944)
!1034 = !DILocation(line: 1137, column: 29, scope: !1035)
!1035 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1137, column: 17)
!1036 = !DILocation(line: 1137, column: 18, scope: !1037)
!1037 = !DILexicalBlockFile(scope: !1035, file: !16, discriminator: 1)
!1038 = !DILocation(line: 1137, column: 18, scope: !1035)
!1039 = !DILocation(line: 1137, column: 17, scope: !944)
!1040 = !DILocation(line: 1138, column: 17, scope: !1035)
!1041 = !DILocation(line: 1139, column: 13, scope: !944)
!1042 = !DILocation(line: 1141, column: 20, scope: !944)
!1043 = !DILocation(line: 1142, column: 38, scope: !944)
!1044 = !DILocation(line: 1143, column: 13, scope: !944)
!1045 = !DILocation(line: 1145, column: 31, scope: !944)
!1046 = !DILocation(line: 1146, column: 13, scope: !944)
!1047 = !DILocation(line: 1148, column: 51, scope: !944)
!1048 = !DILocation(line: 1148, column: 41, scope: !944)
!1049 = !DILocation(line: 1148, column: 21, scope: !944)
!1050 = !DILocation(line: 1149, column: 13, scope: !944)
!1051 = !DILocation(line: 1150, column: 46, scope: !944)
!1052 = !DILocation(line: 1151, column: 17, scope: !1053)
!1053 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1151, column: 17)
!1054 = !DILocation(line: 1151, column: 26, scope: !1053)
!1055 = !DILocation(line: 1151, column: 17, scope: !944)
!1056 = !DILocation(line: 1152, column: 28, scope: !1053)
!1057 = !DILocation(line: 1152, column: 26, scope: !1053)
!1058 = !DILocation(line: 1152, column: 17, scope: !1053)
!1059 = !DILocation(line: 1153, column: 17, scope: !1060)
!1060 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1153, column: 17)
!1061 = !DILocation(line: 1153, column: 26, scope: !1060)
!1062 = !DILocation(line: 1154, column: 16, scope: !1060)
!1063 = !DILocation(line: 1154, column: 43, scope: !1064)
!1064 = !DILexicalBlockFile(scope: !1060, file: !16, discriminator: 1)
!1065 = !DILocation(line: 1154, column: 53, scope: !1064)
!1066 = !DILocation(line: 1154, column: 20, scope: !1067)
!1067 = !DILexicalBlockFile(scope: !1064, file: !16, discriminator: 2)
!1068 = !DILocation(line: 1154, column: 20, scope: !1064)
!1069 = !DILocation(line: 1155, column: 17, scope: !1060)
!1070 = !DILocation(line: 1155, column: 44, scope: !1064)
!1071 = !DILocation(line: 1155, column: 54, scope: !1064)
!1072 = !DILocation(line: 1155, column: 21, scope: !1067)
!1073 = !DILocation(line: 1155, column: 21, scope: !1064)
!1074 = !DILocation(line: 1153, column: 17, scope: !962)
!1075 = !DILocation(line: 1156, column: 28, scope: !1076)
!1076 = distinct !DILexicalBlock(scope: !1060, file: !16, line: 1155, column: 66)
!1077 = !DILocation(line: 1156, column: 72, scope: !1076)
!1078 = !DILocation(line: 1156, column: 17, scope: !1076)
!1079 = !DILocation(line: 1157, column: 17, scope: !1076)
!1080 = !DILocation(line: 1159, column: 13, scope: !944)
!1081 = !DILocation(line: 1160, column: 46, scope: !944)
!1082 = !DILocation(line: 1161, column: 29, scope: !1083)
!1083 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1161, column: 17)
!1084 = !DILocation(line: 1161, column: 32, scope: !1083)
!1085 = !DILocation(line: 1161, column: 18, scope: !1083)
!1086 = !DILocation(line: 1161, column: 17, scope: !944)
!1087 = !DILocation(line: 1162, column: 17, scope: !1083)
!1088 = !DILocation(line: 1163, column: 23, scope: !944)
!1089 = !DILocation(line: 1164, column: 13, scope: !944)
!1090 = !DILocation(line: 1165, column: 46, scope: !944)
!1091 = !DILocation(line: 1166, column: 30, scope: !1092)
!1092 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1166, column: 17)
!1093 = !DILocation(line: 1166, column: 18, scope: !1092)
!1094 = !DILocation(line: 1166, column: 17, scope: !944)
!1095 = !DILocation(line: 1167, column: 17, scope: !1092)
!1096 = !DILocation(line: 1168, column: 13, scope: !944)
!1097 = !DILocation(line: 1170, column: 20, scope: !944)
!1098 = !DILocation(line: 1171, column: 13, scope: !944)
!1099 = !DILocation(line: 1173, column: 18, scope: !944)
!1100 = !DILocation(line: 1174, column: 13, scope: !944)
!1101 = !DILocation(line: 1176, column: 33, scope: !944)
!1102 = !DILocation(line: 1176, column: 21, scope: !944)
!1103 = !DILocation(line: 1177, column: 13, scope: !944)
!1104 = !DILocation(line: 1179, column: 20, scope: !944)
!1105 = !DILocation(line: 1180, column: 13, scope: !944)
!1106 = !DILocation(line: 1182, column: 24, scope: !944)
!1107 = !DILocation(line: 1183, column: 13, scope: !944)
!1108 = !DILocation(line: 1185, column: 30, scope: !944)
!1109 = !DILocation(line: 1185, column: 17, scope: !962)
!1110 = !DILocation(line: 1185, column: 15, scope: !944)
!1111 = !DILocation(line: 1186, column: 13, scope: !944)
!1112 = !DILocation(line: 1189, column: 46, scope: !944)
!1113 = !DILocation(line: 1189, column: 33, scope: !962)
!1114 = !DILocation(line: 1189, column: 31, scope: !944)
!1115 = !DILocation(line: 1190, column: 17, scope: !1116)
!1116 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1190, column: 17)
!1117 = !DILocation(line: 1190, column: 35, scope: !1116)
!1118 = !DILocation(line: 1190, column: 17, scope: !944)
!1119 = !DILocation(line: 1191, column: 28, scope: !1120)
!1120 = distinct !DILexicalBlock(scope: !1116, file: !16, line: 1190, column: 43)
!1121 = !DILocation(line: 1191, column: 17, scope: !1120)
!1122 = !DILocation(line: 1192, column: 17, scope: !1120)
!1123 = !DILocation(line: 1195, column: 13, scope: !944)
!1124 = !DILocation(line: 1196, column: 46, scope: !944)
!1125 = !DILocation(line: 1197, column: 27, scope: !1126)
!1126 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1197, column: 17)
!1127 = !DILocation(line: 1197, column: 18, scope: !1126)
!1128 = !DILocation(line: 1197, column: 17, scope: !944)
!1129 = !DILocation(line: 1198, column: 17, scope: !1126)
!1130 = !DILocation(line: 1199, column: 13, scope: !944)
!1131 = !DILocation(line: 1201, column: 23, scope: !944)
!1132 = !DILocation(line: 1202, column: 13, scope: !944)
!1133 = !DILocation(line: 1204, column: 23, scope: !944)
!1134 = !DILocation(line: 1205, column: 13, scope: !944)
!1135 = !DILocation(line: 1207, column: 21, scope: !944)
!1136 = !DILocation(line: 1208, column: 13, scope: !944)
!1137 = !DILocation(line: 1210, column: 27, scope: !944)
!1138 = !DILocation(line: 1211, column: 13, scope: !944)
!1139 = !DILocation(line: 1214, column: 26, scope: !944)
!1140 = !DILocation(line: 1216, column: 13, scope: !944)
!1141 = !DILocation(line: 1221, column: 13, scope: !944)
!1142 = !DILocation(line: 1223, column: 19, scope: !944)
!1143 = !DILocation(line: 1224, column: 13, scope: !944)
!1144 = !DILocation(line: 1226, column: 38, scope: !944)
!1145 = !DILocation(line: 1226, column: 25, scope: !962)
!1146 = !DILocation(line: 1226, column: 23, scope: !944)
!1147 = !DILocation(line: 1227, column: 13, scope: !944)
!1148 = !DILocation(line: 1232, column: 13, scope: !944)
!1149 = !DILocation(line: 1234, column: 20, scope: !944)
!1150 = !DILocation(line: 1235, column: 13, scope: !944)
!1151 = !DILocation(line: 1237, column: 20, scope: !944)
!1152 = !DILocation(line: 1238, column: 13, scope: !944)
!1153 = !DILocation(line: 1240, column: 25, scope: !944)
!1154 = !DILocation(line: 1241, column: 13, scope: !944)
!1155 = !DILocation(line: 1243, column: 23, scope: !944)
!1156 = !DILocation(line: 1244, column: 13, scope: !944)
!1157 = !DILocation(line: 1246, column: 19, scope: !944)
!1158 = !DILocation(line: 1247, column: 13, scope: !944)
!1159 = !DILocation(line: 1249, column: 28, scope: !944)
!1160 = !DILocation(line: 1249, column: 26, scope: !944)
!1161 = !DILocation(line: 1250, column: 13, scope: !944)
!1162 = !DILocation(line: 1252, column: 32, scope: !1163)
!1163 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1252, column: 13)
!1164 = !DILocation(line: 1252, column: 30, scope: !1163)
!1165 = !DILocation(line: 1252, column: 20, scope: !1163)
!1166 = !DILocation(line: 1252, column: 18, scope: !1163)
!1167 = !DILocation(line: 1252, column: 44, scope: !1168)
!1168 = !DILexicalBlockFile(scope: !1169, file: !16, discriminator: 1)
!1169 = distinct !DILexicalBlock(scope: !1163, file: !16, line: 1252, column: 13)
!1170 = !DILocation(line: 1252, column: 43, scope: !1168)
!1171 = !DILocation(line: 1252, column: 13, scope: !1168)
!1172 = !DILocation(line: 1253, column: 38, scope: !1173)
!1173 = distinct !DILexicalBlock(scope: !1174, file: !16, line: 1253, column: 20)
!1174 = distinct !DILexicalBlock(scope: !1169, file: !16, line: 1252, column: 52)
!1175 = !DILocation(line: 1253, column: 37, scope: !1173)
!1176 = !DILocation(line: 1253, column: 41, scope: !1173)
!1177 = !DILocation(line: 1253, column: 21, scope: !1173)
!1178 = !DILocation(line: 1253, column: 23, scope: !1173)
!1179 = !DILocation(line: 1253, column: 22, scope: !1173)
!1180 = !DILocation(line: 1253, column: 24, scope: !1173)
!1181 = !DILocation(line: 1253, column: 20, scope: !1174)
!1182 = !DILocation(line: 1254, column: 21, scope: !1173)
!1183 = !DILocation(line: 1255, column: 28, scope: !1174)
!1184 = !DILocation(line: 1255, column: 64, scope: !1174)
!1185 = !DILocation(line: 1255, column: 17, scope: !1174)
!1186 = !DILocation(line: 1256, column: 17, scope: !1174)
!1187 = !DILocation(line: 1252, column: 48, scope: !1188)
!1188 = !DILexicalBlockFile(scope: !1169, file: !16, discriminator: 2)
!1189 = !DILocation(line: 1252, column: 13, scope: !1188)
!1190 = distinct !{!1190, !1191}
!1191 = !DILocation(line: 1252, column: 13, scope: !944)
!1192 = !DILocation(line: 1258, column: 13, scope: !944)
!1193 = !DILocation(line: 1260, column: 24, scope: !944)
!1194 = !DILocation(line: 1260, column: 22, scope: !944)
!1195 = !DILocation(line: 1261, column: 13, scope: !944)
!1196 = !DILocation(line: 1264, column: 32, scope: !944)
!1197 = !DILocation(line: 1264, column: 21, scope: !944)
!1198 = !DILocation(line: 1264, column: 30, scope: !944)
!1199 = !DILocation(line: 1265, column: 17, scope: !1200)
!1200 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1265, column: 17)
!1201 = !DILocation(line: 1265, column: 29, scope: !1200)
!1202 = !DILocation(line: 1265, column: 17, scope: !944)
!1203 = !DILocation(line: 1266, column: 29, scope: !1200)
!1204 = !DILocation(line: 1266, column: 17, scope: !1200)
!1205 = !DILocation(line: 1267, column: 13, scope: !944)
!1206 = !DILocation(line: 1269, column: 23, scope: !944)
!1207 = !DILocation(line: 1269, column: 21, scope: !944)
!1208 = !DILocation(line: 1270, column: 17, scope: !1209)
!1209 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1270, column: 17)
!1210 = !DILocation(line: 1270, column: 29, scope: !1209)
!1211 = !DILocation(line: 1270, column: 17, scope: !944)
!1212 = !DILocation(line: 1271, column: 29, scope: !1209)
!1213 = !DILocation(line: 1271, column: 17, scope: !1209)
!1214 = !DILocation(line: 1272, column: 13, scope: !944)
!1215 = !DILocation(line: 1274, column: 37, scope: !944)
!1216 = !DILocation(line: 1274, column: 32, scope: !962)
!1217 = !DILocation(line: 1274, column: 21, scope: !944)
!1218 = !DILocation(line: 1274, column: 30, scope: !944)
!1219 = !DILocation(line: 1275, column: 24, scope: !944)
!1220 = !DILocation(line: 1276, column: 32, scope: !944)
!1221 = !DILocation(line: 1275, column: 13, scope: !944)
!1222 = !DILocation(line: 1277, column: 17, scope: !1223)
!1223 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1277, column: 17)
!1224 = !DILocation(line: 1277, column: 29, scope: !1223)
!1225 = !DILocation(line: 1277, column: 17, scope: !944)
!1226 = !DILocation(line: 1278, column: 29, scope: !1223)
!1227 = !DILocation(line: 1278, column: 17, scope: !1223)
!1228 = !DILocation(line: 1279, column: 13, scope: !944)
!1229 = !DILocation(line: 1281, column: 26, scope: !944)
!1230 = !DILocation(line: 1282, column: 17, scope: !1231)
!1231 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1282, column: 17)
!1232 = !DILocation(line: 1282, column: 29, scope: !1231)
!1233 = !DILocation(line: 1282, column: 17, scope: !944)
!1234 = !DILocation(line: 1283, column: 29, scope: !1231)
!1235 = !DILocation(line: 1283, column: 17, scope: !1231)
!1236 = !DILocation(line: 1284, column: 13, scope: !944)
!1237 = !DILocation(line: 1286, column: 21, scope: !944)
!1238 = !DILocation(line: 1286, column: 25, scope: !944)
!1239 = !DILocation(line: 1287, column: 17, scope: !1240)
!1240 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1287, column: 17)
!1241 = !DILocation(line: 1287, column: 29, scope: !1240)
!1242 = !DILocation(line: 1287, column: 17, scope: !944)
!1243 = !DILocation(line: 1288, column: 29, scope: !1240)
!1244 = !DILocation(line: 1288, column: 17, scope: !1240)
!1245 = !DILocation(line: 1289, column: 13, scope: !944)
!1246 = !DILocation(line: 1292, column: 26, scope: !944)
!1247 = !DILocation(line: 1292, column: 24, scope: !944)
!1248 = !DILocation(line: 1293, column: 13, scope: !944)
!1249 = !DILocation(line: 1295, column: 25, scope: !944)
!1250 = !DILocation(line: 1296, column: 25, scope: !944)
!1251 = !DILocation(line: 1297, column: 13, scope: !944)
!1252 = !DILocation(line: 1299, column: 25, scope: !944)
!1253 = !DILocation(line: 1300, column: 25, scope: !944)
!1254 = !DILocation(line: 1301, column: 13, scope: !944)
!1255 = !DILocation(line: 1303, column: 25, scope: !944)
!1256 = !DILocation(line: 1304, column: 25, scope: !944)
!1257 = !DILocation(line: 1305, column: 13, scope: !944)
!1258 = !DILocation(line: 1307, column: 25, scope: !944)
!1259 = !DILocation(line: 1308, column: 25, scope: !944)
!1260 = !DILocation(line: 1309, column: 13, scope: !944)
!1261 = !DILocation(line: 1311, column: 25, scope: !944)
!1262 = !DILocation(line: 1312, column: 25, scope: !944)
!1263 = !DILocation(line: 1313, column: 13, scope: !944)
!1264 = !DILocation(line: 1316, column: 20, scope: !944)
!1265 = !DILocation(line: 1316, column: 18, scope: !944)
!1266 = !DILocation(line: 1317, column: 25, scope: !944)
!1267 = !DILocation(line: 1318, column: 20, scope: !944)
!1268 = !DILocation(line: 1320, column: 13, scope: !944)
!1269 = !DILocation(line: 1323, column: 20, scope: !944)
!1270 = !DILocation(line: 1323, column: 18, scope: !944)
!1271 = !DILocation(line: 1324, column: 25, scope: !944)
!1272 = !DILocation(line: 1325, column: 25, scope: !944)
!1273 = !DILocation(line: 1326, column: 25, scope: !944)
!1274 = !DILocation(line: 1327, column: 20, scope: !944)
!1275 = !DILocation(line: 1329, column: 13, scope: !944)
!1276 = !DILocation(line: 1332, column: 20, scope: !944)
!1277 = !DILocation(line: 1332, column: 18, scope: !944)
!1278 = !DILocation(line: 1333, column: 25, scope: !944)
!1279 = !DILocation(line: 1334, column: 25, scope: !944)
!1280 = !DILocation(line: 1335, column: 25, scope: !944)
!1281 = !DILocation(line: 1336, column: 20, scope: !944)
!1282 = !DILocation(line: 1338, column: 13, scope: !944)
!1283 = !DILocation(line: 1343, column: 13, scope: !944)
!1284 = !DILocation(line: 1348, column: 13, scope: !944)
!1285 = !DILocation(line: 1351, column: 29, scope: !944)
!1286 = !DILocation(line: 1353, column: 13, scope: !944)
!1287 = !DILocation(line: 1356, column: 31, scope: !944)
!1288 = !DILocation(line: 1356, column: 26, scope: !962)
!1289 = !DILocation(line: 1356, column: 24, scope: !944)
!1290 = !DILocation(line: 1358, column: 13, scope: !944)
!1291 = !DILocation(line: 1360, column: 27, scope: !944)
!1292 = !DILocation(line: 1361, column: 13, scope: !944)
!1293 = !DILocation(line: 1363, column: 29, scope: !1294)
!1294 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1363, column: 17)
!1295 = !DILocation(line: 1363, column: 18, scope: !1296)
!1296 = !DILexicalBlockFile(scope: !1294, file: !16, discriminator: 1)
!1297 = !DILocation(line: 1363, column: 18, scope: !1294)
!1298 = !DILocation(line: 1363, column: 17, scope: !944)
!1299 = !DILocation(line: 1364, column: 17, scope: !1294)
!1300 = !DILocation(line: 1365, column: 13, scope: !944)
!1301 = !DILocation(line: 1367, column: 23, scope: !944)
!1302 = !DILocation(line: 1367, column: 21, scope: !944)
!1303 = !DILocation(line: 1368, column: 13, scope: !944)
!1304 = !DILocation(line: 1370, column: 26, scope: !944)
!1305 = !DILocation(line: 1370, column: 24, scope: !944)
!1306 = !DILocation(line: 1371, column: 13, scope: !944)
!1307 = !DILocation(line: 1373, column: 24, scope: !944)
!1308 = !DILocation(line: 1373, column: 22, scope: !944)
!1309 = !DILocation(line: 1374, column: 13, scope: !944)
!1310 = !DILocation(line: 1376, column: 23, scope: !944)
!1311 = !DILocation(line: 1377, column: 13, scope: !944)
!1312 = !DILocation(line: 1379, column: 22, scope: !944)
!1313 = !DILocation(line: 1379, column: 20, scope: !944)
!1314 = !DILocation(line: 1380, column: 13, scope: !944)
!1315 = !DILocation(line: 1382, column: 22, scope: !944)
!1316 = !DILocation(line: 1383, column: 13, scope: !944)
!1317 = !DILocation(line: 1385, column: 24, scope: !944)
!1318 = !DILocation(line: 1385, column: 22, scope: !944)
!1319 = !DILocation(line: 1386, column: 13, scope: !944)
!1320 = !DILocation(line: 1388, column: 25, scope: !944)
!1321 = !DILocation(line: 1388, column: 23, scope: !944)
!1322 = !DILocation(line: 1389, column: 13, scope: !944)
!1323 = !DILocation(line: 1391, column: 25, scope: !944)
!1324 = !DILocation(line: 1392, column: 13, scope: !944)
!1325 = !DILocation(line: 1394, column: 25, scope: !944)
!1326 = !DILocation(line: 1394, column: 23, scope: !944)
!1327 = !DILocation(line: 1395, column: 13, scope: !944)
!1328 = !DILocation(line: 1397, column: 22, scope: !944)
!1329 = !DILocation(line: 1397, column: 20, scope: !944)
!1330 = !DILocation(line: 1398, column: 13, scope: !944)
!1331 = !DILocation(line: 1400, column: 22, scope: !944)
!1332 = !DILocation(line: 1401, column: 13, scope: !944)
!1333 = !DILocation(line: 1404, column: 27, scope: !944)
!1334 = !DILocation(line: 1405, column: 13, scope: !944)
!1335 = !DILocation(line: 1407, column: 27, scope: !944)
!1336 = !DILocation(line: 1408, column: 13, scope: !944)
!1337 = !DILocation(line: 1410, column: 26, scope: !944)
!1338 = !DILocation(line: 1410, column: 24, scope: !944)
!1339 = !DILocation(line: 1411, column: 13, scope: !944)
!1340 = !DILocation(line: 1414, column: 24, scope: !944)
!1341 = !DILocation(line: 1414, column: 22, scope: !944)
!1342 = !DILocation(line: 1415, column: 13, scope: !944)
!1343 = !DILocation(line: 1417, column: 25, scope: !944)
!1344 = !DILocation(line: 1417, column: 23, scope: !944)
!1345 = !DILocation(line: 1418, column: 13, scope: !944)
!1346 = !DILocation(line: 1420, column: 32, scope: !944)
!1347 = !DILocation(line: 1420, column: 30, scope: !944)
!1348 = !DILocation(line: 1421, column: 13, scope: !944)
!1349 = !DILocation(line: 1423, column: 17, scope: !1350)
!1350 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1423, column: 17)
!1351 = !DILocation(line: 1423, column: 33, scope: !1350)
!1352 = !DILocation(line: 1423, column: 17, scope: !944)
!1353 = !DILocation(line: 1424, column: 35, scope: !1350)
!1354 = !DILocation(line: 1424, column: 33, scope: !1350)
!1355 = !DILocation(line: 1424, column: 17, scope: !1350)
!1356 = !DILocation(line: 1425, column: 17, scope: !1357)
!1357 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1425, column: 17)
!1358 = !DILocation(line: 1425, column: 33, scope: !1357)
!1359 = !DILocation(line: 1425, column: 40, scope: !1357)
!1360 = !DILocation(line: 1426, column: 41, scope: !1357)
!1361 = !DILocation(line: 1426, column: 58, scope: !1357)
!1362 = !DILocation(line: 1426, column: 18, scope: !1363)
!1363 = !DILexicalBlockFile(scope: !1357, file: !16, discriminator: 1)
!1364 = !DILocation(line: 1426, column: 18, scope: !1357)
!1365 = !DILocation(line: 1425, column: 17, scope: !962)
!1366 = !DILocation(line: 1427, column: 28, scope: !1367)
!1367 = distinct !DILexicalBlock(scope: !1357, file: !16, line: 1426, column: 70)
!1368 = !DILocation(line: 1427, column: 72, scope: !1367)
!1369 = !DILocation(line: 1427, column: 17, scope: !1367)
!1370 = !DILocation(line: 1428, column: 17, scope: !1367)
!1371 = !DILocation(line: 1430, column: 13, scope: !944)
!1372 = !DILocation(line: 1432, column: 29, scope: !944)
!1373 = !DILocation(line: 1433, column: 13, scope: !944)
!1374 = !DILocation(line: 1436, column: 33, scope: !944)
!1375 = !DILocation(line: 1436, column: 31, scope: !944)
!1376 = !DILocation(line: 1438, column: 13, scope: !944)
!1377 = !DILocation(line: 1440, column: 23, scope: !944)
!1378 = !DILocation(line: 1440, column: 21, scope: !944)
!1379 = !DILocation(line: 1441, column: 13, scope: !944)
!1380 = !DILocation(line: 1443, column: 17, scope: !944)
!1381 = !DILocation(line: 1443, column: 15, scope: !944)
!1382 = !DILocation(line: 1444, column: 26, scope: !944)
!1383 = !DILocation(line: 1444, column: 19, scope: !944)
!1384 = !DILocation(line: 1444, column: 17, scope: !944)
!1385 = !DILocation(line: 1445, column: 24, scope: !1386)
!1386 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1445, column: 13)
!1387 = !DILocation(line: 1445, column: 31, scope: !1386)
!1388 = !DILocation(line: 1445, column: 18, scope: !1386)
!1389 = !DILocation(line: 1445, column: 36, scope: !1390)
!1390 = !DILexicalBlockFile(scope: !1391, file: !16, discriminator: 1)
!1391 = distinct !DILexicalBlock(scope: !1386, file: !16, line: 1445, column: 13)
!1392 = !DILocation(line: 1445, column: 41, scope: !1390)
!1393 = !DILocation(line: 1445, column: 38, scope: !1390)
!1394 = !DILocation(line: 1445, column: 13, scope: !1390)
!1395 = !DILocation(line: 1446, column: 21, scope: !1396)
!1396 = distinct !DILexicalBlock(scope: !1397, file: !16, line: 1446, column: 21)
!1397 = distinct !DILexicalBlock(scope: !1391, file: !16, line: 1445, column: 51)
!1398 = !DILocation(line: 1446, column: 26, scope: !1396)
!1399 = !DILocation(line: 1446, column: 23, scope: !1396)
!1400 = !DILocation(line: 1446, column: 30, scope: !1396)
!1401 = !DILocation(line: 1446, column: 35, scope: !1402)
!1402 = !DILexicalBlockFile(scope: !1396, file: !16, discriminator: 1)
!1403 = !DILocation(line: 1446, column: 33, scope: !1402)
!1404 = !DILocation(line: 1446, column: 38, scope: !1402)
!1405 = !DILocation(line: 1446, column: 21, scope: !1402)
!1406 = !DILocation(line: 1447, column: 63, scope: !1407)
!1407 = distinct !DILexicalBlock(scope: !1396, file: !16, line: 1446, column: 46)
!1408 = !DILocation(line: 1447, column: 67, scope: !1407)
!1409 = !DILocation(line: 1447, column: 65, scope: !1407)
!1410 = !DILocation(line: 1447, column: 58, scope: !1407)
!1411 = !DILocation(line: 1447, column: 38, scope: !1407)
!1412 = !DILocation(line: 1447, column: 21, scope: !1407)
!1413 = !DILocation(line: 1447, column: 56, scope: !1407)
!1414 = !DILocation(line: 1448, column: 25, scope: !1415)
!1415 = distinct !DILexicalBlock(scope: !1407, file: !16, line: 1448, column: 25)
!1416 = !DILocation(line: 1448, column: 44, scope: !1415)
!1417 = !DILocation(line: 1448, column: 25, scope: !1407)
!1418 = !DILocation(line: 1449, column: 25, scope: !1415)
!1419 = !DILocation(line: 1450, column: 29, scope: !1407)
!1420 = !DILocation(line: 1450, column: 31, scope: !1407)
!1421 = !DILocation(line: 1450, column: 27, scope: !1407)
!1422 = !DILocation(line: 1451, column: 17, scope: !1407)
!1423 = !DILocation(line: 1452, column: 13, scope: !1397)
!1424 = !DILocation(line: 1445, column: 46, scope: !1425)
!1425 = !DILexicalBlockFile(scope: !1391, file: !16, discriminator: 2)
!1426 = !DILocation(line: 1445, column: 13, scope: !1425)
!1427 = distinct !{!1427, !1428}
!1428 = !DILocation(line: 1445, column: 13, scope: !944)
!1429 = !DILocation(line: 1453, column: 13, scope: !944)
!1430 = !DILocation(line: 1455, column: 27, scope: !1431)
!1431 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1455, column: 17)
!1432 = !DILocation(line: 1455, column: 18, scope: !1433)
!1433 = !DILexicalBlockFile(scope: !1431, file: !16, discriminator: 1)
!1434 = !DILocation(line: 1455, column: 18, scope: !1431)
!1435 = !DILocation(line: 1455, column: 17, scope: !944)
!1436 = !DILocation(line: 1456, column: 17, scope: !1431)
!1437 = !DILocation(line: 1457, column: 13, scope: !944)
!1438 = !DILocation(line: 1459, column: 26, scope: !944)
!1439 = !DILocation(line: 1459, column: 24, scope: !944)
!1440 = !DILocation(line: 1460, column: 13, scope: !944)
!1441 = !DILocation(line: 1462, column: 26, scope: !944)
!1442 = !DILocation(line: 1463, column: 13, scope: !944)
!1443 = !DILocation(line: 1466, column: 29, scope: !944)
!1444 = !DILocation(line: 1466, column: 27, scope: !944)
!1445 = !DILocation(line: 1468, column: 13, scope: !944)
!1446 = !DILocation(line: 1470, column: 33, scope: !944)
!1447 = !DILocation(line: 1470, column: 31, scope: !944)
!1448 = !DILocation(line: 1471, column: 13, scope: !944)
!1449 = !DILocation(line: 1473, column: 36, scope: !944)
!1450 = !DILocation(line: 1473, column: 31, scope: !962)
!1451 = !DILocation(line: 1473, column: 29, scope: !944)
!1452 = !DILocation(line: 1474, column: 13, scope: !944)
!1453 = !DILocation(line: 1476, column: 19, scope: !944)
!1454 = !DILocation(line: 1477, column: 13, scope: !944)
!1455 = !DILocation(line: 1479, column: 24, scope: !944)
!1456 = !DILocation(line: 1479, column: 19, scope: !962)
!1457 = !DILocation(line: 1479, column: 17, scope: !944)
!1458 = !DILocation(line: 1480, column: 21, scope: !944)
!1459 = !DILocation(line: 1480, column: 13, scope: !944)
!1460 = !DILocation(line: 1482, column: 28, scope: !1461)
!1461 = distinct !DILexicalBlock(scope: !944, file: !16, line: 1480, column: 26)
!1462 = !DILocation(line: 1483, column: 17, scope: !1461)
!1463 = !DILocation(line: 1485, column: 28, scope: !1461)
!1464 = !DILocation(line: 1486, column: 17, scope: !1461)
!1465 = !DILocation(line: 1488, column: 28, scope: !1461)
!1466 = !DILocation(line: 1489, column: 17, scope: !1461)
!1467 = !DILocation(line: 1491, column: 28, scope: !1461)
!1468 = !DILocation(line: 1492, column: 17, scope: !1461)
!1469 = !DILocation(line: 1494, column: 28, scope: !1461)
!1470 = !DILocation(line: 1496, column: 28, scope: !1461)
!1471 = !DILocation(line: 1496, column: 34, scope: !1461)
!1472 = !DILocation(line: 1494, column: 17, scope: !1461)
!1473 = !DILocation(line: 1497, column: 17, scope: !1461)
!1474 = !DILocation(line: 1499, column: 13, scope: !944)
!1475 = !DILocation(line: 1501, column: 38, scope: !944)
!1476 = !DILocation(line: 1501, column: 33, scope: !962)
!1477 = !DILocation(line: 1501, column: 31, scope: !944)
!1478 = !DILocation(line: 1502, column: 13, scope: !944)
!1479 = !DILocation(line: 1504, column: 40, scope: !944)
!1480 = !DILocation(line: 1504, column: 35, scope: !962)
!1481 = !DILocation(line: 1504, column: 33, scope: !944)
!1482 = !DILocation(line: 1505, column: 13, scope: !944)
!1483 = !DILocation(line: 1507, column: 34, scope: !944)
!1484 = !DILocation(line: 1507, column: 29, scope: !962)
!1485 = !DILocation(line: 1507, column: 27, scope: !944)
!1486 = !DILocation(line: 1508, column: 13, scope: !944)
!1487 = !DILocation(line: 1510, column: 33, scope: !944)
!1488 = !DILocation(line: 1510, column: 28, scope: !962)
!1489 = !DILocation(line: 1510, column: 26, scope: !944)
!1490 = !DILocation(line: 1511, column: 13, scope: !944)
!1491 = !DILocation(line: 1513, column: 27, scope: !944)
!1492 = !DILocation(line: 1513, column: 25, scope: !944)
!1493 = !DILocation(line: 1514, column: 13, scope: !944)
!1494 = !DILocation(line: 1516, column: 31, scope: !944)
!1495 = !DILocation(line: 1516, column: 29, scope: !944)
!1496 = !DILocation(line: 1517, column: 13, scope: !944)
!1497 = !DILocation(line: 1519, column: 24, scope: !944)
!1498 = !DILocation(line: 1520, column: 13, scope: !944)
!1499 = !DILocation(line: 1021, column: 5, scope: !1500)
!1500 = !DILexicalBlockFile(scope: !222, file: !16, discriminator: 2)
!1501 = distinct !{!1501, !817}
!1502 = !DILocation(line: 1523, column: 9, scope: !1503)
!1503 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1523, column: 9)
!1504 = !DILocation(line: 1523, column: 19, scope: !1503)
!1505 = !DILocation(line: 1523, column: 9, scope: !222)
!1506 = !DILocation(line: 1524, column: 20, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1503, file: !16, line: 1523, column: 25)
!1508 = !DILocation(line: 1524, column: 63, scope: !1507)
!1509 = !DILocation(line: 1524, column: 9, scope: !1507)
!1510 = !DILocation(line: 1525, column: 9, scope: !1507)
!1511 = !DILocation(line: 1527, column: 9, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1527, column: 9)
!1513 = !DILocation(line: 1527, column: 9, scope: !222)
!1514 = !DILocation(line: 1528, column: 13, scope: !1515)
!1515 = distinct !DILexicalBlock(scope: !1516, file: !16, line: 1528, column: 13)
!1516 = distinct !DILexicalBlock(scope: !1512, file: !16, line: 1527, column: 23)
!1517 = !DILocation(line: 1528, column: 24, scope: !1515)
!1518 = !DILocation(line: 1528, column: 13, scope: !1516)
!1519 = !DILocation(line: 1529, column: 24, scope: !1520)
!1520 = distinct !DILexicalBlock(scope: !1515, file: !16, line: 1528, column: 32)
!1521 = !DILocation(line: 1531, column: 24, scope: !1520)
!1522 = !DILocation(line: 1529, column: 13, scope: !1520)
!1523 = !DILocation(line: 1532, column: 13, scope: !1520)
!1524 = !DILocation(line: 1534, column: 13, scope: !1525)
!1525 = distinct !DILexicalBlock(scope: !1516, file: !16, line: 1534, column: 13)
!1526 = !DILocation(line: 1534, column: 30, scope: !1525)
!1527 = !DILocation(line: 1534, column: 13, scope: !1516)
!1528 = !DILocation(line: 1535, column: 24, scope: !1529)
!1529 = distinct !DILexicalBlock(scope: !1525, file: !16, line: 1534, column: 38)
!1530 = !DILocation(line: 1537, column: 16, scope: !1529)
!1531 = !DILocation(line: 1535, column: 13, scope: !1529)
!1532 = !DILocation(line: 1538, column: 13, scope: !1529)
!1533 = !DILocation(line: 1540, column: 5, scope: !1516)
!1534 = !DILocation(line: 1541, column: 12, scope: !222)
!1535 = !DILocation(line: 1541, column: 10, scope: !222)
!1536 = !DILocation(line: 1542, column: 9, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1542, column: 9)
!1538 = !DILocation(line: 1542, column: 14, scope: !1537)
!1539 = !DILocation(line: 1542, column: 9, scope: !222)
!1540 = !DILocation(line: 1547, column: 13, scope: !1541)
!1541 = distinct !DILexicalBlock(scope: !1542, file: !16, line: 1547, column: 13)
!1542 = distinct !DILexicalBlock(scope: !1537, file: !16, line: 1542, column: 20)
!1543 = !DILocation(line: 1547, column: 24, scope: !1541)
!1544 = !DILocation(line: 1547, column: 13, scope: !1542)
!1545 = !DILocation(line: 1548, column: 24, scope: !1546)
!1546 = distinct !DILexicalBlock(scope: !1541, file: !16, line: 1547, column: 32)
!1547 = !DILocation(line: 1550, column: 24, scope: !1546)
!1548 = !DILocation(line: 1548, column: 13, scope: !1546)
!1549 = !DILocation(line: 1551, column: 13, scope: !1546)
!1550 = !DILocation(line: 1553, column: 22, scope: !1542)
!1551 = !DILocation(line: 1554, column: 35, scope: !1542)
!1552 = !DILocation(line: 1554, column: 34, scope: !1542)
!1553 = !DILocation(line: 1554, column: 9, scope: !1554)
!1554 = !DILexicalBlockFile(scope: !1542, file: !16, discriminator: 1)
!1555 = !DILocation(line: 1555, column: 5, scope: !1542)
!1556 = !DILocation(line: 1555, column: 16, scope: !1557)
!1557 = !DILexicalBlockFile(scope: !1558, file: !16, discriminator: 1)
!1558 = distinct !DILexicalBlock(scope: !1537, file: !16, line: 1555, column: 16)
!1559 = !DILocation(line: 1555, column: 21, scope: !1557)
!1560 = !DILocation(line: 1556, column: 9, scope: !1561)
!1561 = distinct !DILexicalBlock(scope: !1558, file: !16, line: 1555, column: 27)
!1562 = !DILocation(line: 1560, column: 9, scope: !1563)
!1563 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1560, column: 9)
!1564 = !DILocation(line: 1560, column: 21, scope: !1563)
!1565 = !DILocation(line: 1560, column: 31, scope: !1563)
!1566 = !DILocation(line: 1560, column: 34, scope: !1567)
!1567 = !DILexicalBlockFile(scope: !1563, file: !16, discriminator: 1)
!1568 = !DILocation(line: 1560, column: 52, scope: !1567)
!1569 = !DILocation(line: 1560, column: 9, scope: !1567)
!1570 = !DILocation(line: 1561, column: 20, scope: !1571)
!1571 = distinct !DILexicalBlock(scope: !1563, file: !16, line: 1560, column: 68)
!1572 = !DILocation(line: 1561, column: 9, scope: !1571)
!1573 = !DILocation(line: 1562, column: 9, scope: !1571)
!1574 = !DILocation(line: 1565, column: 9, scope: !1575)
!1575 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1565, column: 9)
!1576 = !DILocation(line: 1565, column: 18, scope: !1575)
!1577 = !DILocation(line: 1565, column: 9, scope: !222)
!1578 = !DILocalVariable(name: "res", scope: !1579, file: !16, line: 1566, type: !225)
!1579 = distinct !DILexicalBlock(scope: !1575, file: !16, line: 1565, column: 26)
!1580 = !DILocation(line: 1566, column: 13, scope: !1579)
!1581 = !DILocalVariable(name: "tmp_host", scope: !1579, file: !16, line: 1567, type: !227)
!1582 = !DILocation(line: 1567, column: 15, scope: !1579)
!1583 = !DILocation(line: 1567, column: 26, scope: !1579)
!1584 = !DILocalVariable(name: "tmp_port", scope: !1579, file: !16, line: 1567, type: !227)
!1585 = !DILocation(line: 1567, column: 33, scope: !1579)
!1586 = !DILocation(line: 1567, column: 44, scope: !1579)
!1587 = !DILocation(line: 1568, column: 13, scope: !1588)
!1588 = distinct !DILexicalBlock(scope: !1579, file: !16, line: 1568, column: 13)
!1589 = !DILocation(line: 1568, column: 24, scope: !1588)
!1590 = !DILocation(line: 1568, column: 13, scope: !1579)
!1591 = !DILocation(line: 1569, column: 24, scope: !1592)
!1592 = distinct !DILexicalBlock(scope: !1588, file: !16, line: 1568, column: 32)
!1593 = !DILocation(line: 1569, column: 94, scope: !1592)
!1594 = !DILocation(line: 1569, column: 13, scope: !1592)
!1595 = !DILocation(line: 1570, column: 13, scope: !1592)
!1596 = !DILocation(line: 1572, column: 34, scope: !1579)
!1597 = !DILocation(line: 1572, column: 15, scope: !1579)
!1598 = !DILocation(line: 1572, column: 13, scope: !1579)
!1599 = !DILocation(line: 1573, column: 13, scope: !1600)
!1600 = distinct !DILexicalBlock(scope: !1579, file: !16, line: 1573, column: 13)
!1601 = !DILocation(line: 1573, column: 25, scope: !1600)
!1602 = !DILocation(line: 1573, column: 22, scope: !1600)
!1603 = !DILocation(line: 1573, column: 13, scope: !1579)
!1604 = !DILocation(line: 1574, column: 25, scope: !1600)
!1605 = !DILocation(line: 1574, column: 13, scope: !1600)
!1606 = !DILocation(line: 1575, column: 13, scope: !1607)
!1607 = distinct !DILexicalBlock(scope: !1579, file: !16, line: 1575, column: 13)
!1608 = !DILocation(line: 1575, column: 25, scope: !1607)
!1609 = !DILocation(line: 1575, column: 22, scope: !1607)
!1610 = !DILocation(line: 1575, column: 13, scope: !1579)
!1611 = !DILocation(line: 1576, column: 25, scope: !1607)
!1612 = !DILocation(line: 1576, column: 13, scope: !1607)
!1613 = !DILocation(line: 1577, column: 14, scope: !1614)
!1614 = distinct !DILexicalBlock(scope: !1579, file: !16, line: 1577, column: 13)
!1615 = !DILocation(line: 1577, column: 13, scope: !1579)
!1616 = !DILocation(line: 1578, column: 24, scope: !1617)
!1617 = distinct !DILexicalBlock(scope: !1614, file: !16, line: 1577, column: 19)
!1618 = !DILocation(line: 1579, column: 72, scope: !1617)
!1619 = !DILocation(line: 1578, column: 13, scope: !1617)
!1620 = !DILocation(line: 1580, column: 13, scope: !1617)
!1621 = !DILocation(line: 1582, column: 5, scope: !1579)
!1622 = !DILocalVariable(name: "res", scope: !1623, file: !16, line: 1583, type: !225)
!1623 = distinct !DILexicalBlock(scope: !1575, file: !16, line: 1582, column: 12)
!1624 = !DILocation(line: 1583, column: 13, scope: !1623)
!1625 = !DILocalVariable(name: "tmp_host", scope: !1623, file: !16, line: 1584, type: !227)
!1626 = !DILocation(line: 1584, column: 15, scope: !1623)
!1627 = !DILocation(line: 1584, column: 26, scope: !1623)
!1628 = !DILocalVariable(name: "tmp_port", scope: !1623, file: !16, line: 1584, type: !227)
!1629 = !DILocation(line: 1584, column: 33, scope: !1623)
!1630 = !DILocation(line: 1584, column: 44, scope: !1623)
!1631 = !DILocation(line: 1585, column: 13, scope: !1632)
!1632 = distinct !DILexicalBlock(scope: !1623, file: !16, line: 1585, column: 13)
!1633 = !DILocation(line: 1585, column: 24, scope: !1632)
!1634 = !DILocation(line: 1585, column: 13, scope: !1623)
!1635 = !DILocation(line: 1586, column: 38, scope: !1632)
!1636 = !DILocation(line: 1586, column: 19, scope: !1632)
!1637 = !DILocation(line: 1586, column: 17, scope: !1632)
!1638 = !DILocation(line: 1586, column: 13, scope: !1632)
!1639 = !DILocation(line: 1588, column: 13, scope: !1640)
!1640 = distinct !DILexicalBlock(scope: !1623, file: !16, line: 1588, column: 13)
!1641 = !DILocation(line: 1588, column: 25, scope: !1640)
!1642 = !DILocation(line: 1588, column: 22, scope: !1640)
!1643 = !DILocation(line: 1588, column: 13, scope: !1623)
!1644 = !DILocation(line: 1589, column: 25, scope: !1640)
!1645 = !DILocation(line: 1589, column: 13, scope: !1640)
!1646 = !DILocation(line: 1590, column: 13, scope: !1647)
!1647 = distinct !DILexicalBlock(scope: !1623, file: !16, line: 1590, column: 13)
!1648 = !DILocation(line: 1590, column: 25, scope: !1647)
!1649 = !DILocation(line: 1590, column: 22, scope: !1647)
!1650 = !DILocation(line: 1590, column: 13, scope: !1623)
!1651 = !DILocation(line: 1591, column: 25, scope: !1647)
!1652 = !DILocation(line: 1591, column: 13, scope: !1647)
!1653 = !DILocation(line: 1592, column: 14, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !1623, file: !16, line: 1592, column: 13)
!1655 = !DILocation(line: 1592, column: 13, scope: !1623)
!1656 = !DILocation(line: 1593, column: 24, scope: !1657)
!1657 = distinct !DILexicalBlock(scope: !1654, file: !16, line: 1592, column: 19)
!1658 = !DILocation(line: 1595, column: 24, scope: !1657)
!1659 = !DILocation(line: 1593, column: 13, scope: !1657)
!1660 = !DILocation(line: 1596, column: 13, scope: !1657)
!1661 = !DILocation(line: 1600, column: 9, scope: !1662)
!1662 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1600, column: 9)
!1663 = !DILocation(line: 1600, column: 17, scope: !1662)
!1664 = !DILocation(line: 1600, column: 9, scope: !222)
!1665 = !DILocalVariable(name: "res", scope: !1666, file: !16, line: 1601, type: !225)
!1666 = distinct !DILexicalBlock(scope: !1662, file: !16, line: 1600, column: 25)
!1667 = !DILocation(line: 1601, column: 13, scope: !1666)
!1668 = !DILocation(line: 1602, column: 34, scope: !1666)
!1669 = !DILocation(line: 1602, column: 15, scope: !1666)
!1670 = !DILocation(line: 1602, column: 13, scope: !1666)
!1671 = !DILocation(line: 1604, column: 14, scope: !1672)
!1672 = distinct !DILexicalBlock(scope: !1666, file: !16, line: 1604, column: 13)
!1673 = !DILocation(line: 1604, column: 13, scope: !1666)
!1674 = !DILocation(line: 1605, column: 24, scope: !1675)
!1675 = distinct !DILexicalBlock(scope: !1672, file: !16, line: 1604, column: 19)
!1676 = !DILocation(line: 1607, column: 24, scope: !1675)
!1677 = !DILocation(line: 1605, column: 13, scope: !1675)
!1678 = !DILocation(line: 1608, column: 13, scope: !1675)
!1679 = !DILocation(line: 1610, column: 5, scope: !1666)
!1680 = !DILocation(line: 1613, column: 9, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1613, column: 9)
!1682 = !DILocation(line: 1613, column: 23, scope: !1681)
!1683 = !DILocation(line: 1613, column: 33, scope: !1681)
!1684 = !DILocation(line: 1613, column: 36, scope: !1685)
!1685 = !DILexicalBlockFile(scope: !1681, file: !16, discriminator: 1)
!1686 = !DILocation(line: 1613, column: 48, scope: !1685)
!1687 = !DILocation(line: 1613, column: 9, scope: !1685)
!1688 = !DILocation(line: 1614, column: 20, scope: !1689)
!1689 = distinct !DILexicalBlock(scope: !1681, file: !16, line: 1613, column: 64)
!1690 = !DILocation(line: 1614, column: 9, scope: !1689)
!1691 = !DILocation(line: 1616, column: 9, scope: !1689)
!1692 = !DILocation(line: 1632, column: 23, scope: !222)
!1693 = !DILocation(line: 1633, column: 9, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1633, column: 9)
!1695 = !DILocation(line: 1633, column: 9, scope: !222)
!1696 = !DILocation(line: 1635, column: 48, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1694, file: !16, line: 1633, column: 28)
!1698 = !DILocation(line: 1635, column: 13, scope: !1697)
!1699 = !DILocation(line: 1634, column: 25, scope: !1697)
!1700 = !DILocation(line: 1636, column: 24, scope: !1701)
!1701 = distinct !DILexicalBlock(scope: !1697, file: !16, line: 1636, column: 13)
!1702 = !DILocation(line: 1636, column: 29, scope: !1701)
!1703 = !DILocation(line: 1636, column: 13, scope: !1697)
!1704 = !DILocation(line: 1637, column: 24, scope: !1705)
!1705 = distinct !DILexicalBlock(scope: !1701, file: !16, line: 1636, column: 37)
!1706 = !DILocation(line: 1637, column: 13, scope: !1705)
!1707 = !DILocation(line: 1638, column: 13, scope: !1705)
!1708 = !DILocation(line: 1640, column: 5, scope: !1697)
!1709 = !DILocation(line: 1641, column: 25, scope: !1694)
!1710 = !DILocation(line: 1644, column: 21, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1644, column: 9)
!1712 = !DILocation(line: 1644, column: 10, scope: !1711)
!1713 = !DILocation(line: 1644, column: 9, scope: !222)
!1714 = !DILocation(line: 1645, column: 20, scope: !1715)
!1715 = distinct !DILexicalBlock(scope: !1711, file: !16, line: 1644, column: 49)
!1716 = !DILocation(line: 1645, column: 9, scope: !1715)
!1717 = !DILocation(line: 1646, column: 9, scope: !1715)
!1718 = !DILocation(line: 1649, column: 21, scope: !1719)
!1719 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1649, column: 9)
!1720 = !DILocation(line: 1649, column: 10, scope: !1719)
!1721 = !DILocation(line: 1649, column: 9, scope: !222)
!1722 = !DILocation(line: 1650, column: 20, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1719, file: !16, line: 1649, column: 59)
!1724 = !DILocation(line: 1650, column: 9, scope: !1723)
!1725 = !DILocation(line: 1651, column: 9, scope: !1723)
!1726 = !DILocation(line: 1654, column: 9, scope: !1727)
!1727 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1654, column: 9)
!1728 = !DILocation(line: 1654, column: 19, scope: !1727)
!1729 = !DILocation(line: 1654, column: 26, scope: !1727)
!1730 = !DILocation(line: 1654, column: 29, scope: !1731)
!1731 = !DILexicalBlockFile(scope: !1727, file: !16, discriminator: 1)
!1732 = !DILocation(line: 1654, column: 39, scope: !1731)
!1733 = !DILocation(line: 1654, column: 9, scope: !1731)
!1734 = !DILocation(line: 1655, column: 20, scope: !1735)
!1735 = distinct !DILexicalBlock(scope: !1727, file: !16, line: 1654, column: 48)
!1736 = !DILocation(line: 1655, column: 9, scope: !1735)
!1737 = !DILocation(line: 1656, column: 9, scope: !1735)
!1738 = !DILocation(line: 1659, column: 9, scope: !1739)
!1739 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1659, column: 9)
!1740 = !DILocation(line: 1659, column: 18, scope: !1739)
!1741 = !DILocation(line: 1659, column: 9, scope: !222)
!1742 = !DILocation(line: 1660, column: 20, scope: !1739)
!1743 = !DILocation(line: 1660, column: 18, scope: !1739)
!1744 = !DILocation(line: 1660, column: 9, scope: !1739)
!1745 = !DILocation(line: 1662, column: 9, scope: !1746)
!1746 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1662, column: 9)
!1747 = !DILocation(line: 1662, column: 18, scope: !1746)
!1748 = !DILocation(line: 1662, column: 9, scope: !222)
!1749 = !DILocation(line: 1663, column: 24, scope: !1750)
!1750 = distinct !DILexicalBlock(scope: !1746, file: !16, line: 1662, column: 26)
!1751 = !DILocation(line: 1663, column: 34, scope: !1750)
!1752 = !DILocation(line: 1663, column: 49, scope: !1750)
!1753 = !DILocation(line: 1663, column: 55, scope: !1750)
!1754 = !DILocation(line: 1663, column: 15, scope: !1750)
!1755 = !DILocation(line: 1663, column: 13, scope: !1750)
!1756 = !DILocation(line: 1665, column: 13, scope: !1757)
!1757 = distinct !DILexicalBlock(scope: !1750, file: !16, line: 1665, column: 13)
!1758 = !DILocation(line: 1665, column: 17, scope: !1757)
!1759 = !DILocation(line: 1665, column: 13, scope: !1750)
!1760 = !DILocation(line: 1666, column: 30, scope: !1761)
!1761 = distinct !DILexicalBlock(scope: !1757, file: !16, line: 1665, column: 25)
!1762 = !DILocation(line: 1666, column: 13, scope: !1761)
!1763 = !DILocation(line: 1667, column: 13, scope: !1761)
!1764 = !DILocation(line: 1669, column: 5, scope: !1750)
!1765 = !DILocation(line: 1671, column: 9, scope: !1766)
!1766 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1671, column: 9)
!1767 = !DILocation(line: 1671, column: 19, scope: !1766)
!1768 = !DILocation(line: 1671, column: 9, scope: !222)
!1769 = !DILocation(line: 1672, column: 26, scope: !1770)
!1770 = distinct !DILexicalBlock(scope: !1766, file: !16, line: 1671, column: 27)
!1771 = !DILocation(line: 1672, column: 37, scope: !1770)
!1772 = !DILocation(line: 1672, column: 16, scope: !1770)
!1773 = !DILocation(line: 1672, column: 14, scope: !1770)
!1774 = !DILocation(line: 1673, column: 13, scope: !1775)
!1775 = distinct !DILexicalBlock(scope: !1770, file: !16, line: 1673, column: 13)
!1776 = !DILocation(line: 1673, column: 18, scope: !1775)
!1777 = !DILocation(line: 1673, column: 13, scope: !1770)
!1778 = !DILocation(line: 1674, column: 30, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1775, file: !16, line: 1673, column: 26)
!1780 = !DILocation(line: 1674, column: 13, scope: !1779)
!1781 = !DILocation(line: 1675, column: 13, scope: !1779)
!1782 = !DILocation(line: 1677, column: 5, scope: !1770)
!1783 = !DILocation(line: 1679, column: 9, scope: !1784)
!1784 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1679, column: 9)
!1785 = !DILocation(line: 1679, column: 20, scope: !1784)
!1786 = !DILocation(line: 1679, column: 9, scope: !222)
!1787 = !DILocation(line: 1680, column: 25, scope: !1788)
!1788 = distinct !DILexicalBlock(scope: !1789, file: !16, line: 1680, column: 13)
!1789 = distinct !DILexicalBlock(scope: !1784, file: !16, line: 1679, column: 28)
!1790 = !DILocation(line: 1680, column: 14, scope: !1788)
!1791 = !DILocation(line: 1680, column: 13, scope: !1789)
!1792 = !DILocation(line: 1682, column: 13, scope: !1788)
!1793 = !DILocation(line: 1683, column: 5, scope: !1789)
!1794 = !DILocation(line: 1685, column: 9, scope: !1795)
!1795 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1685, column: 9)
!1796 = !DILocation(line: 1685, column: 18, scope: !1795)
!1797 = !DILocation(line: 1685, column: 9, scope: !222)
!1798 = !DILocalVariable(name: "crl", scope: !1799, file: !16, line: 1686, type: !1800)
!1799 = distinct !DILexicalBlock(scope: !1795, file: !16, line: 1685, column: 26)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64, align: 64)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_CRL", file: !307, line: 126, baseType: !1802)
!1802 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_crl_st", file: !307, line: 126, flags: DIFlagFwdDecl)
!1803 = !DILocation(line: 1686, column: 19, scope: !1799)
!1804 = !DILocation(line: 1687, column: 24, scope: !1799)
!1805 = !DILocation(line: 1687, column: 34, scope: !1799)
!1806 = !DILocation(line: 1687, column: 15, scope: !1799)
!1807 = !DILocation(line: 1687, column: 13, scope: !1799)
!1808 = !DILocation(line: 1688, column: 13, scope: !1809)
!1809 = distinct !DILexicalBlock(scope: !1799, file: !16, line: 1688, column: 13)
!1810 = !DILocation(line: 1688, column: 17, scope: !1809)
!1811 = !DILocation(line: 1688, column: 13, scope: !1799)
!1812 = !DILocation(line: 1689, column: 22, scope: !1813)
!1813 = distinct !DILexicalBlock(scope: !1809, file: !16, line: 1688, column: 25)
!1814 = !DILocation(line: 1689, column: 13, scope: !1813)
!1815 = !DILocation(line: 1690, column: 30, scope: !1813)
!1816 = !DILocation(line: 1690, column: 13, scope: !1813)
!1817 = !DILocation(line: 1691, column: 13, scope: !1813)
!1818 = !DILocation(line: 1693, column: 16, scope: !1799)
!1819 = !DILocation(line: 1693, column: 14, scope: !1799)
!1820 = !DILocation(line: 1694, column: 13, scope: !1821)
!1821 = distinct !DILexicalBlock(scope: !1799, file: !16, line: 1694, column: 13)
!1822 = !DILocation(line: 1694, column: 18, scope: !1821)
!1823 = !DILocation(line: 1694, column: 25, scope: !1821)
!1824 = !DILocation(line: 1694, column: 46, scope: !1825)
!1825 = !DILexicalBlockFile(scope: !1821, file: !16, discriminator: 1)
!1826 = !DILocation(line: 1694, column: 52, scope: !1825)
!1827 = !DILocation(line: 1694, column: 29, scope: !1825)
!1828 = !DILocation(line: 1694, column: 13, scope: !1825)
!1829 = !DILocation(line: 1695, column: 22, scope: !1830)
!1830 = distinct !DILexicalBlock(scope: !1821, file: !16, line: 1694, column: 58)
!1831 = !DILocation(line: 1695, column: 13, scope: !1830)
!1832 = !DILocation(line: 1696, column: 30, scope: !1830)
!1833 = !DILocation(line: 1696, column: 13, scope: !1830)
!1834 = !DILocation(line: 1697, column: 27, scope: !1830)
!1835 = !DILocation(line: 1697, column: 13, scope: !1830)
!1836 = !DILocation(line: 1698, column: 13, scope: !1830)
!1837 = !DILocation(line: 1700, column: 5, scope: !1799)
!1838 = !DILocation(line: 1702, column: 10, scope: !1839)
!1839 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1702, column: 9)
!1840 = !DILocation(line: 1702, column: 9, scope: !222)
!1841 = !DILocation(line: 1703, column: 9, scope: !1839)
!1842 = !DILocation(line: 1705, column: 9, scope: !1843)
!1843 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1705, column: 9)
!1844 = !DILocation(line: 1705, column: 19, scope: !1843)
!1845 = !DILocation(line: 1705, column: 9, scope: !222)
!1846 = !DILocation(line: 1706, column: 13, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1848, file: !16, line: 1706, column: 13)
!1848 = distinct !DILexicalBlock(scope: !1843, file: !16, line: 1705, column: 27)
!1849 = !DILocation(line: 1706, column: 21, scope: !1847)
!1850 = !DILocation(line: 1706, column: 25, scope: !1851)
!1851 = !DILexicalBlockFile(scope: !1847, file: !16, discriminator: 1)
!1852 = !DILocation(line: 1706, column: 13, scope: !1851)
!1853 = !DILocation(line: 1707, column: 33, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !1847, file: !16, line: 1706, column: 34)
!1855 = !DILocation(line: 1707, column: 25, scope: !1856)
!1856 = !DILexicalBlockFile(scope: !1854, file: !16, discriminator: 1)
!1857 = !DILocation(line: 1707, column: 23, scope: !1854)
!1858 = !DILocation(line: 1708, column: 17, scope: !1859)
!1859 = distinct !DILexicalBlock(scope: !1854, file: !16, line: 1708, column: 17)
!1860 = !DILocation(line: 1708, column: 23, scope: !1859)
!1861 = !DILocation(line: 1708, column: 26, scope: !1862)
!1862 = !DILexicalBlockFile(scope: !1859, file: !16, discriminator: 1)
!1863 = !DILocation(line: 1708, column: 36, scope: !1862)
!1864 = !DILocation(line: 1708, column: 17, scope: !1862)
!1865 = !DILocation(line: 1709, column: 29, scope: !1859)
!1866 = !DILocation(line: 1709, column: 27, scope: !1859)
!1867 = !DILocation(line: 1709, column: 17, scope: !1859)
!1868 = !DILocation(line: 1710, column: 9, scope: !1854)
!1869 = !DILocation(line: 1710, column: 20, scope: !1870)
!1870 = !DILexicalBlockFile(scope: !1871, file: !16, discriminator: 1)
!1871 = distinct !DILexicalBlock(scope: !1847, file: !16, line: 1710, column: 20)
!1872 = !DILocation(line: 1710, column: 30, scope: !1870)
!1873 = !DILocation(line: 1711, column: 25, scope: !1871)
!1874 = !DILocation(line: 1711, column: 23, scope: !1871)
!1875 = !DILocation(line: 1711, column: 13, scope: !1871)
!1876 = !DILocation(line: 1712, column: 5, scope: !1848)
!1877 = !DILocation(line: 1714, column: 21, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1714, column: 9)
!1879 = !DILocation(line: 1714, column: 44, scope: !1878)
!1880 = !DILocation(line: 1714, column: 10, scope: !1878)
!1881 = !DILocation(line: 1714, column: 9, scope: !222)
!1882 = !DILocation(line: 1715, column: 20, scope: !1883)
!1883 = distinct !DILexicalBlock(scope: !1878, file: !16, line: 1714, column: 62)
!1884 = !DILocation(line: 1715, column: 9, scope: !1883)
!1885 = !DILocation(line: 1716, column: 9, scope: !1883)
!1886 = !DILocation(line: 1720, column: 23, scope: !222)
!1887 = !DILocation(line: 1720, column: 11, scope: !222)
!1888 = !DILocation(line: 1720, column: 9, scope: !222)
!1889 = !DILocation(line: 1721, column: 9, scope: !1890)
!1890 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1721, column: 9)
!1891 = !DILocation(line: 1721, column: 13, scope: !1890)
!1892 = !DILocation(line: 1721, column: 9, scope: !222)
!1893 = !DILocation(line: 1722, column: 26, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1890, file: !16, line: 1721, column: 21)
!1895 = !DILocation(line: 1722, column: 9, scope: !1894)
!1896 = !DILocation(line: 1723, column: 9, scope: !1894)
!1897 = !DILocation(line: 1726, column: 19, scope: !222)
!1898 = !DILocation(line: 1726, column: 5, scope: !222)
!1899 = !DILocation(line: 1728, column: 9, scope: !1900)
!1900 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1728, column: 9)
!1901 = !DILocation(line: 1728, column: 9, scope: !222)
!1902 = !DILocation(line: 1729, column: 32, scope: !1900)
!1903 = !DILocation(line: 1729, column: 37, scope: !1900)
!1904 = !DILocation(line: 1729, column: 9, scope: !1900)
!1905 = !DILocation(line: 1731, column: 21, scope: !1906)
!1906 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1731, column: 9)
!1907 = !DILocation(line: 1731, column: 27, scope: !1906)
!1908 = !DILocation(line: 1731, column: 37, scope: !1906)
!1909 = !DILocation(line: 1731, column: 10, scope: !1906)
!1910 = !DILocation(line: 1731, column: 9, scope: !222)
!1911 = !DILocation(line: 1732, column: 9, scope: !1906)
!1912 = !DILocation(line: 1734, column: 9, scope: !1913)
!1913 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1734, column: 9)
!1914 = !DILocation(line: 1734, column: 20, scope: !1913)
!1915 = !DILocation(line: 1734, column: 9, scope: !222)
!1916 = !DILocation(line: 1735, column: 28, scope: !1917)
!1917 = distinct !DILexicalBlock(scope: !1918, file: !16, line: 1735, column: 13)
!1918 = distinct !DILexicalBlock(scope: !1913, file: !16, line: 1734, column: 28)
!1919 = !DILocation(line: 1735, column: 33, scope: !1917)
!1920 = !DILocation(line: 1735, column: 13, scope: !1917)
!1921 = !DILocation(line: 1735, column: 45, scope: !1917)
!1922 = !DILocation(line: 1735, column: 13, scope: !1918)
!1923 = !DILocation(line: 1736, column: 24, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1917, file: !16, line: 1735, column: 51)
!1925 = !DILocation(line: 1737, column: 24, scope: !1924)
!1926 = !DILocation(line: 1736, column: 13, scope: !1924)
!1927 = !DILocation(line: 1738, column: 30, scope: !1924)
!1928 = !DILocation(line: 1738, column: 13, scope: !1924)
!1929 = !DILocation(line: 1739, column: 13, scope: !1924)
!1930 = !DILocation(line: 1741, column: 5, scope: !1918)
!1931 = !DILocation(line: 1748, column: 9, scope: !1932)
!1932 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1748, column: 9)
!1933 = !DILocation(line: 1748, column: 21, scope: !1932)
!1934 = !DILocation(line: 1749, column: 9, scope: !1932)
!1935 = !DILocation(line: 1749, column: 25, scope: !1936)
!1936 = !DILexicalBlockFile(scope: !1932, file: !16, discriminator: 1)
!1937 = !DILocation(line: 1749, column: 35, scope: !1936)
!1938 = !DILocation(line: 1749, column: 12, scope: !1936)
!1939 = !DILocation(line: 1749, column: 13, scope: !1936)
!1940 = !DILocation(line: 1748, column: 9, scope: !819)
!1941 = !DILocation(line: 1750, column: 9, scope: !1932)
!1942 = !DILocation(line: 1751, column: 9, scope: !1943)
!1943 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1751, column: 9)
!1944 = !DILocation(line: 1751, column: 21, scope: !1943)
!1945 = !DILocation(line: 1752, column: 9, scope: !1943)
!1946 = !DILocation(line: 1752, column: 25, scope: !1947)
!1947 = !DILexicalBlockFile(scope: !1943, file: !16, discriminator: 1)
!1948 = !DILocation(line: 1752, column: 35, scope: !1947)
!1949 = !DILocation(line: 1752, column: 12, scope: !1947)
!1950 = !DILocation(line: 1752, column: 13, scope: !1947)
!1951 = !DILocation(line: 1751, column: 9, scope: !819)
!1952 = !DILocation(line: 1753, column: 9, scope: !1943)
!1953 = !DILocation(line: 1755, column: 9, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1755, column: 9)
!1955 = !DILocation(line: 1755, column: 20, scope: !1954)
!1956 = !DILocation(line: 1755, column: 43, scope: !1957)
!1957 = !DILexicalBlockFile(scope: !1954, file: !16, discriminator: 1)
!1958 = !DILocation(line: 1755, column: 48, scope: !1957)
!1959 = !DILocation(line: 1755, column: 24, scope: !1957)
!1960 = !DILocation(line: 1755, column: 9, scope: !1957)
!1961 = !DILocation(line: 1756, column: 20, scope: !1962)
!1962 = distinct !DILexicalBlock(scope: !1954, file: !16, line: 1755, column: 54)
!1963 = !DILocation(line: 1756, column: 9, scope: !1962)
!1964 = !DILocation(line: 1757, column: 26, scope: !1962)
!1965 = !DILocation(line: 1757, column: 9, scope: !1962)
!1966 = !DILocation(line: 1758, column: 9, scope: !1962)
!1967 = !DILocation(line: 1761, column: 9, scope: !1968)
!1968 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1761, column: 9)
!1969 = !DILocation(line: 1761, column: 9, scope: !222)
!1970 = !DILocation(line: 1762, column: 23, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !1968, file: !16, line: 1761, column: 16)
!1972 = !DILocation(line: 1762, column: 9, scope: !1971)
!1973 = !DILocation(line: 1763, column: 5, scope: !1971)
!1974 = !DILocation(line: 1765, column: 9, scope: !1975)
!1975 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1765, column: 9)
!1976 = !DILocation(line: 1765, column: 27, scope: !1975)
!1977 = !DILocation(line: 1766, column: 9, scope: !1975)
!1978 = !DILocation(line: 1766, column: 26, scope: !1979)
!1979 = !DILexicalBlockFile(scope: !1975, file: !16, discriminator: 1)
!1980 = !DILocation(line: 1766, column: 33, scope: !1979)
!1981 = !DILocation(line: 1766, column: 13, scope: !1979)
!1982 = !DILocation(line: 1765, column: 9, scope: !819)
!1983 = !DILocation(line: 1767, column: 20, scope: !1984)
!1984 = distinct !DILexicalBlock(scope: !1975, file: !16, line: 1766, column: 15)
!1985 = !DILocation(line: 1768, column: 20, scope: !1984)
!1986 = !DILocation(line: 1768, column: 26, scope: !1984)
!1987 = !DILocation(line: 1767, column: 9, scope: !1984)
!1988 = !DILocation(line: 1769, column: 9, scope: !1984)
!1989 = !DILocation(line: 1772, column: 9, scope: !1990)
!1990 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1772, column: 9)
!1991 = !DILocation(line: 1772, column: 29, scope: !1990)
!1992 = !DILocation(line: 1773, column: 9, scope: !1990)
!1993 = !DILocation(line: 1773, column: 26, scope: !1994)
!1994 = !DILexicalBlockFile(scope: !1990, file: !16, discriminator: 1)
!1995 = !DILocation(line: 1773, column: 34, scope: !1994)
!1996 = !DILocation(line: 1773, column: 13, scope: !1994)
!1997 = !DILocation(line: 1772, column: 9, scope: !819)
!1998 = !DILocation(line: 1774, column: 20, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1990, file: !16, line: 1773, column: 15)
!2000 = !DILocation(line: 1775, column: 20, scope: !1999)
!2001 = !DILocation(line: 1775, column: 26, scope: !1999)
!2002 = !DILocation(line: 1774, column: 9, scope: !1999)
!2003 = !DILocation(line: 1776, column: 9, scope: !1999)
!2004 = !DILocation(line: 1779, column: 9, scope: !2005)
!2005 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1779, column: 9)
!2006 = !DILocation(line: 1779, column: 23, scope: !2005)
!2007 = !DILocation(line: 1780, column: 9, scope: !2005)
!2008 = !DILocation(line: 1780, column: 26, scope: !2009)
!2009 = !DILexicalBlockFile(scope: !2005, file: !16, discriminator: 1)
!2010 = !DILocation(line: 1780, column: 34, scope: !2009)
!2011 = !DILocation(line: 1780, column: 13, scope: !2009)
!2012 = !DILocation(line: 1779, column: 9, scope: !819)
!2013 = !DILocation(line: 1781, column: 20, scope: !2014)
!2014 = distinct !DILexicalBlock(scope: !2005, file: !16, line: 1780, column: 15)
!2015 = !DILocation(line: 1782, column: 20, scope: !2014)
!2016 = !DILocation(line: 1782, column: 26, scope: !2014)
!2017 = !DILocation(line: 1781, column: 9, scope: !2014)
!2018 = !DILocation(line: 1783, column: 9, scope: !2014)
!2019 = !DILocation(line: 1786, column: 9, scope: !2020)
!2020 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1786, column: 9)
!2021 = !DILocation(line: 1786, column: 22, scope: !2020)
!2022 = !DILocation(line: 1786, column: 9, scope: !222)
!2023 = !DILocation(line: 1787, column: 45, scope: !2024)
!2024 = distinct !DILexicalBlock(scope: !2020, file: !16, line: 1786, column: 27)
!2025 = !DILocation(line: 1787, column: 50, scope: !2024)
!2026 = !DILocation(line: 1787, column: 9, scope: !2024)
!2027 = !DILocation(line: 1788, column: 5, scope: !2024)
!2028 = !DILocation(line: 1790, column: 9, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1790, column: 9)
!2030 = !DILocation(line: 1790, column: 20, scope: !2029)
!2031 = !DILocation(line: 1791, column: 13, scope: !2029)
!2032 = !DILocation(line: 1791, column: 56, scope: !2033)
!2033 = !DILexicalBlockFile(scope: !2029, file: !16, discriminator: 1)
!2034 = !DILocation(line: 1791, column: 61, scope: !2033)
!2035 = !DILocation(line: 1791, column: 17, scope: !2033)
!2036 = !DILocation(line: 1790, column: 9, scope: !819)
!2037 = !DILocation(line: 1792, column: 20, scope: !2038)
!2038 = distinct !DILexicalBlock(scope: !2029, file: !16, line: 1791, column: 74)
!2039 = !DILocation(line: 1794, column: 26, scope: !2038)
!2040 = !DILocation(line: 1794, column: 32, scope: !2038)
!2041 = !DILocation(line: 1792, column: 9, scope: !2038)
!2042 = !DILocation(line: 1795, column: 9, scope: !2038)
!2043 = !DILocation(line: 1798, column: 26, scope: !2044)
!2044 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1798, column: 9)
!2045 = !DILocation(line: 1798, column: 31, scope: !2044)
!2046 = !DILocation(line: 1798, column: 42, scope: !2044)
!2047 = !DILocation(line: 1798, column: 53, scope: !2044)
!2048 = !DILocation(line: 1798, column: 63, scope: !2044)
!2049 = !DILocation(line: 1799, column: 26, scope: !2044)
!2050 = !DILocation(line: 1799, column: 32, scope: !2044)
!2051 = !DILocation(line: 1798, column: 10, scope: !2044)
!2052 = !DILocation(line: 1798, column: 9, scope: !222)
!2053 = !DILocation(line: 1800, column: 20, scope: !2054)
!2054 = distinct !DILexicalBlock(scope: !2044, file: !16, line: 1799, column: 47)
!2055 = !DILocation(line: 1800, column: 9, scope: !2054)
!2056 = !DILocation(line: 1801, column: 26, scope: !2054)
!2057 = !DILocation(line: 1801, column: 9, scope: !2054)
!2058 = !DILocation(line: 1802, column: 9, scope: !2054)
!2059 = !DILocation(line: 1804, column: 9, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1804, column: 9)
!2061 = !DILocation(line: 1804, column: 19, scope: !2060)
!2062 = !DILocation(line: 1804, column: 9, scope: !222)
!2063 = !DILocalVariable(name: "nm", scope: !2064, file: !16, line: 1805, type: !293)
!2064 = distinct !DILexicalBlock(scope: !2060, file: !16, line: 1804, column: 27)
!2065 = !DILocation(line: 1805, column: 36, scope: !2064)
!2066 = !DILocation(line: 1805, column: 41, scope: !2064)
!2067 = !DILocation(line: 1807, column: 13, scope: !2068)
!2068 = distinct !DILexicalBlock(scope: !2064, file: !16, line: 1807, column: 13)
!2069 = !DILocation(line: 1807, column: 16, scope: !2068)
!2070 = !DILocation(line: 1807, column: 23, scope: !2068)
!2071 = !DILocation(line: 1807, column: 63, scope: !2072)
!2072 = !DILexicalBlockFile(scope: !2068, file: !16, discriminator: 1)
!2073 = !DILocation(line: 1807, column: 67, scope: !2072)
!2074 = !DILocation(line: 1807, column: 27, scope: !2072)
!2075 = !DILocation(line: 1807, column: 13, scope: !2072)
!2076 = !DILocation(line: 1808, column: 35, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !2068, file: !16, line: 1807, column: 79)
!2078 = !DILocation(line: 1808, column: 13, scope: !2077)
!2079 = !DILocation(line: 1809, column: 24, scope: !2077)
!2080 = !DILocation(line: 1809, column: 13, scope: !2077)
!2081 = !DILocation(line: 1810, column: 30, scope: !2077)
!2082 = !DILocation(line: 1810, column: 13, scope: !2077)
!2083 = !DILocation(line: 1811, column: 13, scope: !2077)
!2084 = !DILocation(line: 1813, column: 30, scope: !2064)
!2085 = !DILocation(line: 1813, column: 35, scope: !2064)
!2086 = !DILocation(line: 1813, column: 9, scope: !2064)
!2087 = !DILocation(line: 1814, column: 5, scope: !2064)
!2088 = !DILocation(line: 1816, column: 9, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1816, column: 9)
!2090 = !DILocation(line: 1816, column: 9, scope: !222)
!2091 = !DILocation(line: 1817, column: 45, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !2093, file: !16, line: 1817, column: 13)
!2093 = distinct !DILexicalBlock(scope: !2089, file: !16, line: 1816, column: 28)
!2094 = !DILocation(line: 1817, column: 50, scope: !2092)
!2095 = !DILocation(line: 1817, column: 14, scope: !2092)
!2096 = !DILocation(line: 1817, column: 13, scope: !2093)
!2097 = !DILocation(line: 1818, column: 22, scope: !2098)
!2098 = distinct !DILexicalBlock(scope: !2092, file: !16, line: 1817, column: 70)
!2099 = !DILocation(line: 1818, column: 13, scope: !2098)
!2100 = !DILocation(line: 1819, column: 30, scope: !2098)
!2101 = !DILocation(line: 1819, column: 13, scope: !2098)
!2102 = !DILocation(line: 1820, column: 25, scope: !2098)
!2103 = !DILocation(line: 1820, column: 13, scope: !2098)
!2104 = !DILocation(line: 1821, column: 13, scope: !2098)
!2105 = !DILocation(line: 1823, column: 21, scope: !2093)
!2106 = !DILocation(line: 1823, column: 9, scope: !2093)
!2107 = !DILocation(line: 1824, column: 5, scope: !2093)
!2108 = !DILocation(line: 1828, column: 9, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1828, column: 9)
!2110 = !DILocation(line: 1828, column: 17, scope: !2109)
!2111 = !DILocation(line: 1828, column: 9, scope: !222)
!2112 = !DILocation(line: 1829, column: 13, scope: !2113)
!2113 = distinct !DILexicalBlock(scope: !2114, file: !16, line: 1829, column: 13)
!2114 = distinct !DILexicalBlock(scope: !2109, file: !16, line: 1828, column: 25)
!2115 = !DILocation(line: 1829, column: 13, scope: !2114)
!2116 = !DILocation(line: 1830, column: 24, scope: !2113)
!2117 = !DILocation(line: 1830, column: 13, scope: !2113)
!2118 = !DILocation(line: 1831, column: 41, scope: !2114)
!2119 = !DILocation(line: 1831, column: 9, scope: !2114)
!2120 = !DILocation(line: 1832, column: 5, scope: !2114)
!2121 = !DILocation(line: 1834, column: 9, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1834, column: 9)
!2123 = !DILocation(line: 1834, column: 18, scope: !2122)
!2124 = !DILocation(line: 1834, column: 9, scope: !222)
!2125 = !DILocalVariable(name: "stmp", scope: !2126, file: !16, line: 1835, type: !305)
!2126 = distinct !DILexicalBlock(scope: !2122, file: !16, line: 1834, column: 26)
!2127 = !DILocation(line: 1835, column: 14, scope: !2126)
!2128 = !DILocation(line: 1835, column: 34, scope: !2126)
!2129 = !DILocation(line: 1835, column: 21, scope: !2126)
!2130 = !DILocation(line: 1837, column: 13, scope: !2131)
!2131 = distinct !DILexicalBlock(scope: !2126, file: !16, line: 1837, column: 13)
!2132 = !DILocation(line: 1837, column: 18, scope: !2131)
!2133 = !DILocation(line: 1837, column: 13, scope: !2126)
!2134 = !DILocation(line: 1838, column: 24, scope: !2135)
!2135 = distinct !DILexicalBlock(scope: !2131, file: !16, line: 1837, column: 26)
!2136 = !DILocation(line: 1838, column: 69, scope: !2135)
!2137 = !DILocation(line: 1838, column: 13, scope: !2135)
!2138 = !DILocation(line: 1839, column: 30, scope: !2135)
!2139 = !DILocation(line: 1839, column: 13, scope: !2135)
!2140 = !DILocation(line: 1840, column: 13, scope: !2135)
!2141 = !DILocation(line: 1842, column: 44, scope: !2126)
!2142 = !DILocation(line: 1842, column: 19, scope: !2126)
!2143 = !DILocation(line: 1842, column: 17, scope: !2126)
!2144 = !DILocation(line: 1843, column: 18, scope: !2126)
!2145 = !DILocation(line: 1843, column: 9, scope: !2126)
!2146 = !DILocation(line: 1844, column: 13, scope: !2147)
!2147 = distinct !DILexicalBlock(scope: !2126, file: !16, line: 1844, column: 13)
!2148 = !DILocation(line: 1844, column: 21, scope: !2147)
!2149 = !DILocation(line: 1844, column: 13, scope: !2126)
!2150 = !DILocation(line: 1845, column: 24, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2147, file: !16, line: 1844, column: 29)
!2152 = !DILocation(line: 1845, column: 69, scope: !2151)
!2153 = !DILocation(line: 1845, column: 13, scope: !2151)
!2154 = !DILocation(line: 1846, column: 30, scope: !2151)
!2155 = !DILocation(line: 1846, column: 13, scope: !2151)
!2156 = !DILocation(line: 1847, column: 13, scope: !2151)
!2157 = !DILocation(line: 1849, column: 5, scope: !2126)
!2158 = !DILocation(line: 1850, column: 9, scope: !2159)
!2159 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1850, column: 9)
!2160 = !DILocation(line: 1850, column: 17, scope: !2159)
!2161 = !DILocation(line: 1850, column: 24, scope: !2159)
!2162 = !DILocation(line: 1850, column: 27, scope: !2163)
!2163 = !DILexicalBlockFile(scope: !2159, file: !16, discriminator: 1)
!2164 = !DILocation(line: 1850, column: 35, scope: !2163)
!2165 = !DILocation(line: 1850, column: 9, scope: !2163)
!2166 = !DILocation(line: 1851, column: 46, scope: !2159)
!2167 = !DILocation(line: 1851, column: 9, scope: !2159)
!2168 = !DILocation(line: 1854, column: 9, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1854, column: 9)
!2170 = !DILocation(line: 1854, column: 23, scope: !2169)
!2171 = !DILocation(line: 1854, column: 9, scope: !222)
!2172 = !DILocation(line: 1856, column: 41, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2174, file: !16, line: 1856, column: 13)
!2174 = distinct !DILexicalBlock(scope: !2169, file: !16, line: 1854, column: 31)
!2175 = !DILocation(line: 1856, column: 46, scope: !2173)
!2176 = !DILocation(line: 1856, column: 13, scope: !2173)
!2177 = !DILocation(line: 1856, column: 61, scope: !2173)
!2178 = !DILocation(line: 1856, column: 13, scope: !2174)
!2179 = !DILocation(line: 1857, column: 24, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !2173, file: !16, line: 1856, column: 67)
!2181 = !DILocation(line: 1857, column: 13, scope: !2180)
!2182 = !DILocation(line: 1858, column: 30, scope: !2180)
!2183 = !DILocation(line: 1858, column: 13, scope: !2180)
!2184 = !DILocation(line: 1859, column: 13, scope: !2180)
!2185 = !DILocation(line: 1861, column: 5, scope: !2174)
!2186 = !DILocation(line: 1864, column: 9, scope: !2187)
!2187 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1864, column: 9)
!2188 = !DILocation(line: 1864, column: 13, scope: !2187)
!2189 = !DILocation(line: 1864, column: 9, scope: !222)
!2190 = !DILocation(line: 1865, column: 28, scope: !2187)
!2191 = !DILocation(line: 1865, column: 33, scope: !2187)
!2192 = !DILocation(line: 1865, column: 9, scope: !2187)
!2193 = !DILocation(line: 1868, column: 20, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1868, column: 9)
!2195 = !DILocation(line: 1868, column: 25, scope: !2194)
!2196 = !DILocation(line: 1868, column: 9, scope: !222)
!2197 = !DILocation(line: 1869, column: 42, scope: !2194)
!2198 = !DILocation(line: 1869, column: 9, scope: !2194)
!2199 = !DILocation(line: 1871, column: 9, scope: !2200)
!2200 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1871, column: 9)
!2201 = !DILocation(line: 1871, column: 9, scope: !222)
!2202 = !DILocalVariable(name: "alpn_len", scope: !2203, file: !16, line: 1872, type: !381)
!2203 = distinct !DILexicalBlock(scope: !2200, file: !16, line: 1871, column: 18)
!2204 = !DILocation(line: 1872, column: 16, scope: !2203)
!2205 = !DILocalVariable(name: "alpn", scope: !2203, file: !16, line: 1873, type: !299)
!2206 = !DILocation(line: 1873, column: 24, scope: !2203)
!2207 = !DILocation(line: 1873, column: 60, scope: !2203)
!2208 = !DILocation(line: 1873, column: 31, scope: !2203)
!2209 = !DILocation(line: 1875, column: 13, scope: !2210)
!2210 = distinct !DILexicalBlock(scope: !2203, file: !16, line: 1875, column: 13)
!2211 = !DILocation(line: 1875, column: 18, scope: !2210)
!2212 = !DILocation(line: 1875, column: 13, scope: !2203)
!2213 = !DILocation(line: 1876, column: 24, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2210, file: !16, line: 1875, column: 26)
!2215 = !DILocation(line: 1876, column: 13, scope: !2214)
!2216 = !DILocation(line: 1877, column: 13, scope: !2214)
!2217 = !DILocation(line: 1880, column: 37, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !2203, file: !16, line: 1880, column: 13)
!2219 = !DILocation(line: 1880, column: 42, scope: !2218)
!2220 = !DILocation(line: 1880, column: 48, scope: !2218)
!2221 = !DILocation(line: 1880, column: 13, scope: !2218)
!2222 = !DILocation(line: 1880, column: 58, scope: !2218)
!2223 = !DILocation(line: 1880, column: 13, scope: !2203)
!2224 = !DILocation(line: 1881, column: 24, scope: !2225)
!2225 = distinct !DILexicalBlock(scope: !2218, file: !16, line: 1880, column: 64)
!2226 = !DILocation(line: 1881, column: 13, scope: !2225)
!2227 = !DILocation(line: 1882, column: 13, scope: !2225)
!2228 = !DILocation(line: 1884, column: 21, scope: !2203)
!2229 = !DILocation(line: 1884, column: 9, scope: !2203)
!2230 = !DILocation(line: 1885, column: 5, scope: !2203)
!2231 = !DILocation(line: 1887, column: 12, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1887, column: 5)
!2233 = !DILocation(line: 1887, column: 10, scope: !2232)
!2234 = !DILocation(line: 1887, column: 17, scope: !2235)
!2235 = !DILexicalBlockFile(scope: !2236, file: !16, discriminator: 1)
!2236 = distinct !DILexicalBlock(scope: !2232, file: !16, line: 1887, column: 5)
!2237 = !DILocation(line: 1887, column: 21, scope: !2235)
!2238 = !DILocation(line: 1887, column: 19, scope: !2235)
!2239 = !DILocation(line: 1887, column: 5, scope: !2235)
!2240 = !DILocation(line: 1888, column: 44, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2242, file: !16, line: 1888, column: 13)
!2242 = distinct !DILexicalBlock(scope: !2236, file: !16, line: 1887, column: 44)
!2243 = !DILocation(line: 1889, column: 61, scope: !2241)
!2244 = !DILocation(line: 1889, column: 44, scope: !2241)
!2245 = !DILocation(line: 1888, column: 14, scope: !2241)
!2246 = !DILocation(line: 1888, column: 13, scope: !2242)
!2247 = !DILocation(line: 1892, column: 24, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2241, file: !16, line: 1891, column: 75)
!2249 = !DILocation(line: 1894, column: 41, scope: !2248)
!2250 = !DILocation(line: 1894, column: 24, scope: !2248)
!2251 = !DILocation(line: 1892, column: 13, scope: !2248)
!2252 = !DILocation(line: 1895, column: 9, scope: !2248)
!2253 = !DILocation(line: 1896, column: 5, scope: !2242)
!2254 = !DILocation(line: 1887, column: 40, scope: !2255)
!2255 = !DILexicalBlockFile(scope: !2236, file: !16, discriminator: 2)
!2256 = !DILocation(line: 1887, column: 5, scope: !2255)
!2257 = distinct !{!2257, !2258}
!2258 = !DILocation(line: 1887, column: 5, scope: !222)
!2259 = !DILocation(line: 1898, column: 9, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1898, column: 9)
!2261 = !DILocation(line: 1898, column: 9, scope: !222)
!2262 = !DILocation(line: 1899, column: 35, scope: !2260)
!2263 = !DILocation(line: 1899, column: 9, scope: !2260)
!2264 = !DILocation(line: 1903, column: 9, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1903, column: 9)
!2266 = !DILocation(line: 1903, column: 23, scope: !2265)
!2267 = !DILocation(line: 1904, column: 28, scope: !2265)
!2268 = !DILocation(line: 1904, column: 10, scope: !2265)
!2269 = !DILocation(line: 1903, column: 9, scope: !819)
!2270 = !DILocation(line: 1905, column: 26, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !2265, file: !16, line: 1904, column: 64)
!2272 = !DILocation(line: 1905, column: 9, scope: !2271)
!2273 = !DILocation(line: 1906, column: 9, scope: !2271)
!2274 = !DILocation(line: 1909, column: 34, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1909, column: 9)
!2276 = !DILocation(line: 1909, column: 39, scope: !2275)
!2277 = !DILocation(line: 1909, column: 10, scope: !2275)
!2278 = !DILocation(line: 1909, column: 9, scope: !222)
!2279 = !DILocation(line: 1910, column: 13, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2281, file: !16, line: 1910, column: 13)
!2281 = distinct !DILexicalBlock(scope: !2275, file: !16, line: 1909, column: 52)
!2282 = !DILocation(line: 1910, column: 13, scope: !2281)
!2283 = !DILocation(line: 1911, column: 30, scope: !2284)
!2284 = distinct !DILexicalBlock(scope: !2280, file: !16, line: 1910, column: 28)
!2285 = !DILocation(line: 1911, column: 13, scope: !2284)
!2286 = !DILocation(line: 1912, column: 13, scope: !2284)
!2287 = !DILocation(line: 1921, column: 9, scope: !2281)
!2288 = !DILocation(line: 1922, column: 5, scope: !2281)
!2289 = !DILocation(line: 1925, column: 24, scope: !222)
!2290 = !DILocation(line: 1925, column: 29, scope: !222)
!2291 = !DILocation(line: 1925, column: 5, scope: !222)
!2292 = !DILocation(line: 1927, column: 35, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1927, column: 9)
!2294 = !DILocation(line: 1927, column: 40, scope: !2293)
!2295 = !DILocation(line: 1927, column: 48, scope: !2293)
!2296 = !DILocation(line: 1927, column: 56, scope: !2293)
!2297 = !DILocation(line: 1927, column: 66, scope: !2293)
!2298 = !DILocation(line: 1927, column: 10, scope: !2293)
!2299 = !DILocation(line: 1927, column: 9, scope: !222)
!2300 = !DILocation(line: 1928, column: 26, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2293, file: !16, line: 1927, column: 77)
!2302 = !DILocation(line: 1928, column: 9, scope: !2301)
!2303 = !DILocation(line: 1929, column: 9, scope: !2301)
!2304 = !DILocation(line: 1932, column: 22, scope: !222)
!2305 = !DILocation(line: 1932, column: 27, scope: !222)
!2306 = !DILocation(line: 1932, column: 33, scope: !222)
!2307 = !DILocation(line: 1932, column: 5, scope: !222)
!2308 = !DILocation(line: 1934, column: 29, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1934, column: 9)
!2310 = !DILocation(line: 1934, column: 34, scope: !2309)
!2311 = !DILocation(line: 1934, column: 40, scope: !2309)
!2312 = !DILocation(line: 1934, column: 45, scope: !2309)
!2313 = !DILocation(line: 1934, column: 52, scope: !2309)
!2314 = !DILocation(line: 1934, column: 10, scope: !2309)
!2315 = !DILocation(line: 1934, column: 9, scope: !222)
!2316 = !DILocation(line: 1935, column: 9, scope: !2309)
!2317 = !DILocation(line: 1937, column: 10, scope: !2318)
!2318 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1937, column: 9)
!2319 = !DILocation(line: 1937, column: 9, scope: !222)
!2320 = !DILocation(line: 1938, column: 30, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2318, file: !16, line: 1937, column: 24)
!2322 = !DILocation(line: 1938, column: 19, scope: !2321)
!2323 = !DILocation(line: 1938, column: 28, scope: !2321)
!2324 = !DILocation(line: 1939, column: 31, scope: !2321)
!2325 = !DILocation(line: 1939, column: 9, scope: !2321)
!2326 = !DILocation(line: 1940, column: 22, scope: !2321)
!2327 = !DILocation(line: 1940, column: 31, scope: !2321)
!2328 = !DILocation(line: 1940, column: 9, scope: !2321)
!2329 = !DILocation(line: 1941, column: 5, scope: !2321)
!2330 = !DILocation(line: 1943, column: 17, scope: !2331)
!2331 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1943, column: 9)
!2332 = !DILocation(line: 1943, column: 9, scope: !2331)
!2333 = !DILocation(line: 1943, column: 9, scope: !222)
!2334 = !DILocation(line: 1944, column: 14, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2336, file: !16, line: 1944, column: 13)
!2336 = distinct !DILexicalBlock(scope: !2331, file: !16, line: 1943, column: 27)
!2337 = !DILocation(line: 1944, column: 27, scope: !2335)
!2338 = !DILocation(line: 1944, column: 56, scope: !2339)
!2339 = !DILexicalBlockFile(scope: !2335, file: !16, discriminator: 1)
!2340 = !DILocation(line: 1944, column: 69, scope: !2339)
!2341 = !DILocation(line: 1944, column: 31, scope: !2339)
!2342 = !DILocation(line: 1944, column: 13, scope: !2339)
!2343 = !DILocation(line: 1945, column: 24, scope: !2344)
!2344 = distinct !DILexicalBlock(scope: !2335, file: !16, line: 1944, column: 80)
!2345 = !DILocation(line: 1945, column: 13, scope: !2344)
!2346 = !DILocation(line: 1946, column: 13, scope: !2344)
!2347 = !DILocation(line: 1948, column: 23, scope: !2336)
!2348 = !DILocation(line: 1948, column: 17, scope: !2336)
!2349 = !DILocation(line: 1948, column: 21, scope: !2336)
!2350 = !DILocation(line: 1949, column: 25, scope: !2336)
!2351 = !DILocation(line: 1949, column: 17, scope: !2336)
!2352 = !DILocation(line: 1949, column: 23, scope: !2336)
!2353 = !DILocation(line: 1950, column: 32, scope: !2336)
!2354 = !DILocation(line: 1950, column: 37, scope: !2336)
!2355 = !DILocation(line: 1950, column: 9, scope: !2336)
!2356 = !DILocation(line: 1951, column: 45, scope: !2336)
!2357 = !DILocation(line: 1951, column: 9, scope: !2336)
!2358 = !DILocation(line: 1952, column: 34, scope: !2336)
!2359 = !DILocation(line: 1952, column: 47, scope: !2336)
!2360 = !DILocation(line: 1952, column: 9, scope: !2336)
!2361 = !DILocation(line: 1953, column: 13, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2336, file: !16, line: 1953, column: 13)
!2363 = !DILocation(line: 1953, column: 19, scope: !2362)
!2364 = !DILocation(line: 1953, column: 22, scope: !2365)
!2365 = !DILexicalBlockFile(scope: !2362, file: !16, discriminator: 1)
!2366 = !DILocation(line: 1953, column: 30, scope: !2365)
!2367 = !DILocation(line: 1953, column: 41, scope: !2368)
!2368 = !DILexicalBlockFile(scope: !2362, file: !16, discriminator: 2)
!2369 = !DILocation(line: 1953, column: 45, scope: !2368)
!2370 = !DILocation(line: 1953, column: 13, scope: !2368)
!2371 = !DILocation(line: 1954, column: 51, scope: !2362)
!2372 = !DILocation(line: 1954, column: 13, scope: !2362)
!2373 = !DILocation(line: 1956, column: 5, scope: !2336)
!2374 = !DILocation(line: 1959, column: 9, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1959, column: 9)
!2376 = !DILocation(line: 1959, column: 26, scope: !2375)
!2377 = !DILocation(line: 1959, column: 9, scope: !222)
!2378 = !DILocation(line: 1960, column: 33, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2380, file: !16, line: 1960, column: 13)
!2380 = distinct !DILexicalBlock(scope: !2375, file: !16, line: 1959, column: 34)
!2381 = !DILocation(line: 1960, column: 13, scope: !2379)
!2382 = !DILocation(line: 1960, column: 38, scope: !2379)
!2383 = !DILocation(line: 1960, column: 13, scope: !2380)
!2384 = !DILocation(line: 1961, column: 24, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2379, file: !16, line: 1960, column: 44)
!2386 = !DILocation(line: 1963, column: 24, scope: !2385)
!2387 = !DILocation(line: 1961, column: 13, scope: !2385)
!2388 = !DILocation(line: 1964, column: 30, scope: !2385)
!2389 = !DILocation(line: 1964, column: 13, scope: !2385)
!2390 = !DILocation(line: 1965, column: 13, scope: !2385)
!2391 = !DILocation(line: 1967, column: 5, scope: !2380)
!2392 = !DILocation(line: 1974, column: 18, scope: !222)
!2393 = !DILocation(line: 1974, column: 5, scope: !222)
!2394 = !DILocation(line: 1976, column: 29, scope: !222)
!2395 = !DILocation(line: 1976, column: 5, scope: !222)
!2396 = !DILocation(line: 1978, column: 25, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1978, column: 9)
!2398 = !DILocation(line: 1978, column: 30, scope: !2397)
!2399 = !DILocation(line: 1978, column: 9, scope: !2397)
!2400 = !DILocation(line: 1978, column: 9, scope: !222)
!2401 = !DILocation(line: 1979, column: 9, scope: !2397)
!2402 = !DILocation(line: 1981, column: 19, scope: !222)
!2403 = !DILocation(line: 1981, column: 11, scope: !222)
!2404 = !DILocation(line: 1981, column: 9, scope: !222)
!2405 = !DILocation(line: 1982, column: 9, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1982, column: 9)
!2407 = !DILocation(line: 1982, column: 13, scope: !2406)
!2408 = !DILocation(line: 1982, column: 9, scope: !222)
!2409 = !DILocation(line: 1983, column: 9, scope: !2406)
!2410 = !DILocation(line: 1985, column: 9, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1985, column: 9)
!2412 = !DILocation(line: 1985, column: 9, scope: !222)
!2413 = !DILocation(line: 1986, column: 37, scope: !2411)
!2414 = !DILocation(line: 1986, column: 9, scope: !2411)
!2415 = !DILocation(line: 1988, column: 9, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !222, file: !16, line: 1988, column: 9)
!2417 = !DILocation(line: 1988, column: 17, scope: !2416)
!2418 = !DILocation(line: 1988, column: 9, scope: !222)
!2419 = !DILocalVariable(name: "sess", scope: !2420, file: !16, line: 1989, type: !404)
!2420 = distinct !DILexicalBlock(scope: !2416, file: !16, line: 1988, column: 25)
!2421 = !DILocation(line: 1989, column: 22, scope: !2420)
!2422 = !DILocalVariable(name: "stmp", scope: !2420, file: !16, line: 1990, type: !305)
!2423 = !DILocation(line: 1990, column: 14, scope: !2420)
!2424 = !DILocation(line: 1990, column: 34, scope: !2420)
!2425 = !DILocation(line: 1990, column: 21, scope: !2420)
!2426 = !DILocation(line: 1991, column: 13, scope: !2427)
!2427 = distinct !DILexicalBlock(scope: !2420, file: !16, line: 1991, column: 13)
!2428 = !DILocation(line: 1991, column: 18, scope: !2427)
!2429 = !DILocation(line: 1991, column: 13, scope: !2420)
!2430 = !DILocation(line: 1992, column: 24, scope: !2431)
!2431 = distinct !DILexicalBlock(scope: !2427, file: !16, line: 1991, column: 26)
!2432 = !DILocation(line: 1992, column: 65, scope: !2431)
!2433 = !DILocation(line: 1992, column: 13, scope: !2431)
!2434 = !DILocation(line: 1993, column: 30, scope: !2431)
!2435 = !DILocation(line: 1993, column: 13, scope: !2431)
!2436 = !DILocation(line: 1994, column: 13, scope: !2431)
!2437 = !DILocation(line: 1996, column: 41, scope: !2420)
!2438 = !DILocation(line: 1996, column: 16, scope: !2420)
!2439 = !DILocation(line: 1996, column: 14, scope: !2420)
!2440 = !DILocation(line: 1997, column: 18, scope: !2420)
!2441 = !DILocation(line: 1997, column: 9, scope: !2420)
!2442 = !DILocation(line: 1998, column: 13, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2420, file: !16, line: 1998, column: 13)
!2444 = !DILocation(line: 1998, column: 18, scope: !2443)
!2445 = !DILocation(line: 1998, column: 13, scope: !2420)
!2446 = !DILocation(line: 1999, column: 24, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2443, file: !16, line: 1998, column: 26)
!2448 = !DILocation(line: 1999, column: 65, scope: !2447)
!2449 = !DILocation(line: 1999, column: 13, scope: !2447)
!2450 = !DILocation(line: 2000, column: 30, scope: !2447)
!2451 = !DILocation(line: 2000, column: 13, scope: !2447)
!2452 = !DILocation(line: 2001, column: 13, scope: !2447)
!2453 = !DILocation(line: 2003, column: 30, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2420, file: !16, line: 2003, column: 13)
!2455 = !DILocation(line: 2003, column: 35, scope: !2454)
!2456 = !DILocation(line: 2003, column: 14, scope: !2454)
!2457 = !DILocation(line: 2003, column: 13, scope: !2420)
!2458 = !DILocation(line: 2004, column: 24, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2454, file: !16, line: 2003, column: 42)
!2460 = !DILocation(line: 2004, column: 13, scope: !2459)
!2461 = !DILocation(line: 2005, column: 30, scope: !2459)
!2462 = !DILocation(line: 2005, column: 13, scope: !2459)
!2463 = !DILocation(line: 2006, column: 13, scope: !2459)
!2464 = !DILocation(line: 2009, column: 26, scope: !2420)
!2465 = !DILocation(line: 2009, column: 9, scope: !2420)
!2466 = !DILocation(line: 2010, column: 5, scope: !2420)
!2467 = !DILocation(line: 2012, column: 9, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2012, column: 9)
!2469 = !DILocation(line: 2012, column: 9, scope: !222)
!2470 = !DILocation(line: 2013, column: 19, scope: !2468)
!2471 = !DILocation(line: 2013, column: 9, scope: !2468)
!2472 = !DILocation(line: 2015, column: 10, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2015, column: 9)
!2474 = !DILocation(line: 2015, column: 23, scope: !2473)
!2475 = !DILocation(line: 2015, column: 27, scope: !2476)
!2476 = !DILexicalBlockFile(scope: !2473, file: !16, discriminator: 1)
!2477 = !DILocation(line: 2015, column: 38, scope: !2476)
!2478 = !DILocation(line: 2015, column: 45, scope: !2476)
!2479 = !DILocation(line: 2015, column: 48, scope: !2480)
!2480 = !DILexicalBlockFile(scope: !2473, file: !16, discriminator: 2)
!2481 = !DILocation(line: 2015, column: 65, scope: !2480)
!2482 = !DILocation(line: 2015, column: 9, scope: !2480)
!2483 = !DILocation(line: 2016, column: 13, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2485, file: !16, line: 2016, column: 13)
!2485 = distinct !DILexicalBlock(scope: !2473, file: !16, line: 2015, column: 75)
!2486 = !DILocation(line: 2016, column: 24, scope: !2484)
!2487 = !DILocation(line: 2016, column: 13, scope: !2485)
!2488 = !DILocation(line: 2017, column: 27, scope: !2484)
!2489 = !DILocation(line: 2017, column: 32, scope: !2484)
!2490 = !DILocation(line: 2017, column: 26, scope: !2484)
!2491 = !DILocation(line: 2017, column: 26, scope: !2492)
!2492 = !DILexicalBlockFile(scope: !2484, file: !16, discriminator: 1)
!2493 = !DILocation(line: 2017, column: 56, scope: !2494)
!2494 = !DILexicalBlockFile(scope: !2484, file: !16, discriminator: 2)
!2495 = !DILocation(line: 2017, column: 26, scope: !2494)
!2496 = !DILocation(line: 2017, column: 26, scope: !2497)
!2497 = !DILexicalBlockFile(scope: !2484, file: !16, discriminator: 3)
!2498 = !DILocation(line: 2017, column: 24, scope: !2497)
!2499 = !DILocation(line: 2017, column: 13, scope: !2497)
!2500 = !DILocation(line: 2018, column: 23, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2485, file: !16, line: 2018, column: 13)
!2502 = !DILocation(line: 2018, column: 41, scope: !2501)
!2503 = !DILocation(line: 2018, column: 14, scope: !2501)
!2504 = !DILocation(line: 2018, column: 13, scope: !2485)
!2505 = !DILocation(line: 2019, column: 24, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2501, file: !16, line: 2018, column: 54)
!2507 = !DILocation(line: 2019, column: 13, scope: !2506)
!2508 = !DILocation(line: 2020, column: 30, scope: !2506)
!2509 = !DILocation(line: 2020, column: 13, scope: !2506)
!2510 = !DILocation(line: 2021, column: 13, scope: !2506)
!2511 = !DILocation(line: 2023, column: 5, scope: !2485)
!2512 = !DILocation(line: 2025, column: 9, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2025, column: 9)
!2514 = !DILocation(line: 2025, column: 26, scope: !2513)
!2515 = !DILocation(line: 2025, column: 9, scope: !222)
!2516 = !DILocation(line: 2026, column: 29, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2518, file: !16, line: 2026, column: 13)
!2518 = distinct !DILexicalBlock(scope: !2513, file: !16, line: 2025, column: 34)
!2519 = !DILocation(line: 2026, column: 34, scope: !2517)
!2520 = !DILocation(line: 2026, column: 13, scope: !2517)
!2521 = !DILocation(line: 2026, column: 52, scope: !2517)
!2522 = !DILocation(line: 2026, column: 13, scope: !2518)
!2523 = !DILocation(line: 2027, column: 24, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2517, file: !16, line: 2026, column: 58)
!2525 = !DILocation(line: 2028, column: 45, scope: !2524)
!2526 = !DILocation(line: 2027, column: 13, scope: !2524)
!2527 = !DILocation(line: 2029, column: 30, scope: !2524)
!2528 = !DILocation(line: 2029, column: 13, scope: !2524)
!2529 = !DILocation(line: 2030, column: 13, scope: !2524)
!2530 = !DILocation(line: 2032, column: 13, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2518, file: !16, line: 2032, column: 13)
!2532 = !DILocation(line: 2032, column: 29, scope: !2531)
!2533 = !DILocation(line: 2032, column: 13, scope: !2518)
!2534 = !DILocation(line: 2033, column: 24, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2531, file: !16, line: 2032, column: 37)
!2536 = !DILocation(line: 2034, column: 65, scope: !2535)
!2537 = !DILocation(line: 2033, column: 13, scope: !2535)
!2538 = !DILocation(line: 2035, column: 13, scope: !2535)
!2539 = !DILocation(line: 2037, column: 31, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2518, file: !16, line: 2037, column: 13)
!2541 = !DILocation(line: 2037, column: 36, scope: !2540)
!2542 = !DILocation(line: 2037, column: 13, scope: !2540)
!2543 = !DILocation(line: 2037, column: 53, scope: !2540)
!2544 = !DILocation(line: 2037, column: 13, scope: !2518)
!2545 = !DILocation(line: 2038, column: 24, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2540, file: !16, line: 2037, column: 59)
!2547 = !DILocation(line: 2039, column: 38, scope: !2546)
!2548 = !DILocation(line: 2038, column: 13, scope: !2546)
!2549 = !DILocation(line: 2040, column: 13, scope: !2546)
!2550 = !DILocation(line: 2042, column: 13, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2518, file: !16, line: 2042, column: 13)
!2552 = !DILocation(line: 2042, column: 13, scope: !2518)
!2553 = !DILocation(line: 2043, column: 32, scope: !2551)
!2554 = !DILocation(line: 2043, column: 13, scope: !2551)
!2555 = !DILocation(line: 2044, column: 5, scope: !2518)
!2556 = !DILocation(line: 2044, column: 16, scope: !2557)
!2557 = !DILexicalBlockFile(scope: !2558, file: !16, discriminator: 1)
!2558 = distinct !DILexicalBlock(scope: !2513, file: !16, line: 2044, column: 16)
!2559 = !DILocation(line: 2044, column: 32, scope: !2557)
!2560 = !DILocation(line: 2045, column: 20, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2558, file: !16, line: 2044, column: 40)
!2562 = !DILocation(line: 2046, column: 51, scope: !2561)
!2563 = !DILocation(line: 2045, column: 9, scope: !2561)
!2564 = !DILocation(line: 2047, column: 9, scope: !2561)
!2565 = !DILocation(line: 2025, column: 38, scope: !2566)
!2566 = !DILexicalBlockFile(scope: !2513, file: !16, discriminator: 1)
!2567 = !DILocation(line: 2051, column: 25, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2051, column: 9)
!2569 = !DILocation(line: 2051, column: 31, scope: !2568)
!2570 = !DILocation(line: 2051, column: 37, scope: !2568)
!2571 = !DILocation(line: 2051, column: 47, scope: !2568)
!2572 = !DILocation(line: 2051, column: 57, scope: !2568)
!2573 = !DILocation(line: 2052, column: 21, scope: !2568)
!2574 = !DILocation(line: 2052, column: 34, scope: !2568)
!2575 = !DILocation(line: 2051, column: 9, scope: !2568)
!2576 = !DILocation(line: 2052, column: 44, scope: !2568)
!2577 = !DILocation(line: 2051, column: 9, scope: !222)
!2578 = !DILocation(line: 2053, column: 20, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2568, file: !16, line: 2052, column: 50)
!2580 = !DILocation(line: 2053, column: 52, scope: !2579)
!2581 = !DILocation(line: 2053, column: 51, scope: !2579)
!2582 = !DILocation(line: 2053, column: 9, scope: !2583)
!2583 = !DILexicalBlockFile(scope: !2579, file: !16, discriminator: 1)
!2584 = !DILocation(line: 2054, column: 25, scope: !2579)
!2585 = !DILocation(line: 2054, column: 9, scope: !2579)
!2586 = !DILocation(line: 2055, column: 9, scope: !2579)
!2587 = !DILocation(line: 2057, column: 16, scope: !222)
!2588 = !DILocation(line: 2057, column: 48, scope: !222)
!2589 = !DILocation(line: 2057, column: 5, scope: !222)
!2590 = !DILocation(line: 2059, column: 9, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2059, column: 9)
!2592 = !DILocation(line: 2059, column: 9, scope: !222)
!2593 = !DILocation(line: 2060, column: 30, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2595, file: !16, line: 2060, column: 13)
!2595 = distinct !DILexicalBlock(scope: !2591, file: !16, line: 2059, column: 17)
!2596 = !DILocation(line: 2060, column: 14, scope: !2594)
!2597 = !DILocation(line: 2060, column: 13, scope: !2595)
!2598 = !DILocation(line: 2061, column: 30, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2594, file: !16, line: 2060, column: 37)
!2600 = !DILocation(line: 2061, column: 13, scope: !2599)
!2601 = !DILocation(line: 2062, column: 13, scope: !2599)
!2602 = !DILocation(line: 2064, column: 20, scope: !2595)
!2603 = !DILocation(line: 2064, column: 9, scope: !2595)
!2604 = !DILocation(line: 2065, column: 5, scope: !2595)
!2605 = !DILocation(line: 2067, column: 9, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2067, column: 9)
!2607 = !DILocation(line: 2067, column: 9, scope: !222)
!2608 = !DILocalVariable(name: "peer_info", scope: !2609, file: !16, line: 2068, type: !2610)
!2609 = distinct !DILexicalBlock(scope: !2606, file: !16, line: 2067, column: 17)
!2610 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "BIO_sock_info_u", file: !250, line: 705, size: 64, align: 64, elements: !2611)
!2611 = !{!2612}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2610, file: !250, line: 706, baseType: !2613, size: 64, align: 64)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64, align: 64)
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIO_ADDR", file: !250, line: 187, baseType: !2615)
!2615 = !DICompositeType(tag: DW_TAG_union_type, name: "bio_addr_st", file: !250, line: 187, flags: DIFlagFwdDecl)
!2616 = !DILocation(line: 2068, column: 31, scope: !2609)
!2617 = !DILocation(line: 2075, column: 34, scope: !2609)
!2618 = !DILocation(line: 2075, column: 20, scope: !2609)
!2619 = !DILocation(line: 2075, column: 18, scope: !2609)
!2620 = !DILocation(line: 2077, column: 31, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !2609, file: !16, line: 2077, column: 13)
!2622 = !DILocation(line: 2077, column: 24, scope: !2621)
!2623 = !DILocation(line: 2077, column: 29, scope: !2621)
!2624 = !DILocation(line: 2077, column: 47, scope: !2621)
!2625 = !DILocation(line: 2077, column: 13, scope: !2609)
!2626 = !DILocation(line: 2078, column: 24, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2621, file: !16, line: 2077, column: 55)
!2628 = !DILocation(line: 2078, column: 13, scope: !2627)
!2629 = !DILocation(line: 2079, column: 29, scope: !2627)
!2630 = !DILocation(line: 2079, column: 13, scope: !2627)
!2631 = !DILocation(line: 2080, column: 13, scope: !2627)
!2632 = !DILocation(line: 2082, column: 28, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2609, file: !16, line: 2082, column: 13)
!2634 = !DILocation(line: 2082, column: 14, scope: !2633)
!2635 = !DILocation(line: 2082, column: 13, scope: !2609)
!2636 = !DILocation(line: 2083, column: 24, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2633, file: !16, line: 2082, column: 67)
!2638 = !DILocation(line: 2084, column: 25, scope: !2637)
!2639 = !DILocation(line: 2084, column: 24, scope: !2637)
!2640 = !DILocation(line: 2083, column: 13, scope: !2637)
!2641 = !DILocation(line: 2085, column: 37, scope: !2637)
!2642 = !DILocation(line: 2085, column: 13, scope: !2637)
!2643 = !DILocation(line: 2086, column: 29, scope: !2637)
!2644 = !DILocation(line: 2086, column: 13, scope: !2637)
!2645 = !DILocation(line: 2087, column: 13, scope: !2637)
!2646 = !DILocation(line: 2090, column: 29, scope: !2609)
!2647 = !DILocation(line: 2090, column: 61, scope: !2609)
!2648 = !DILocation(line: 2090, column: 42, scope: !2609)
!2649 = !DILocation(line: 2090, column: 20, scope: !2609)
!2650 = !DILocation(line: 2090, column: 15, scope: !2609)
!2651 = !DILocation(line: 2091, column: 33, scope: !2609)
!2652 = !DILocation(line: 2091, column: 9, scope: !2609)
!2653 = !DILocation(line: 2092, column: 19, scope: !2609)
!2654 = !DILocation(line: 2092, column: 24, scope: !2609)
!2655 = !DILocation(line: 2094, column: 13, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2609, file: !16, line: 2094, column: 13)
!2657 = !DILocation(line: 2094, column: 13, scope: !2609)
!2658 = !DILocation(line: 2095, column: 21, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2656, file: !16, line: 2094, column: 30)
!2660 = !DILocation(line: 2095, column: 28, scope: !2659)
!2661 = !DILocation(line: 2096, column: 21, scope: !2659)
!2662 = !DILocation(line: 2096, column: 29, scope: !2659)
!2663 = !DILocation(line: 2097, column: 22, scope: !2659)
!2664 = !DILocation(line: 2097, column: 35, scope: !2659)
!2665 = !DILocation(line: 2097, column: 13, scope: !2659)
!2666 = !DILocation(line: 2099, column: 21, scope: !2659)
!2667 = !DILocation(line: 2099, column: 28, scope: !2659)
!2668 = !DILocation(line: 2100, column: 21, scope: !2659)
!2669 = !DILocation(line: 2100, column: 29, scope: !2659)
!2670 = !DILocation(line: 2101, column: 22, scope: !2659)
!2671 = !DILocation(line: 2101, column: 35, scope: !2659)
!2672 = !DILocation(line: 2101, column: 13, scope: !2659)
!2673 = !DILocation(line: 2102, column: 9, scope: !2659)
!2674 = !DILocation(line: 2104, column: 13, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2609, file: !16, line: 2104, column: 13)
!2676 = !DILocation(line: 2104, column: 13, scope: !2609)
!2677 = !DILocation(line: 2105, column: 17, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2679, file: !16, line: 2105, column: 17)
!2679 = distinct !DILexicalBlock(scope: !2675, file: !16, line: 2104, column: 25)
!2680 = !DILocation(line: 2105, column: 40, scope: !2678)
!2681 = !DILocation(line: 2105, column: 30, scope: !2678)
!2682 = !DILocation(line: 2105, column: 28, scope: !2678)
!2683 = !DILocation(line: 2105, column: 17, scope: !2679)
!2684 = !DILocation(line: 2106, column: 28, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2678, file: !16, line: 2105, column: 32)
!2686 = !DILocation(line: 2107, column: 38, scope: !2685)
!2687 = !DILocation(line: 2107, column: 28, scope: !2685)
!2688 = !DILocation(line: 2106, column: 17, scope: !2685)
!2689 = !DILocation(line: 2108, column: 26, scope: !2685)
!2690 = !DILocation(line: 2108, column: 17, scope: !2685)
!2691 = !DILocation(line: 2109, column: 17, scope: !2685)
!2692 = !DILocation(line: 2111, column: 29, scope: !2679)
!2693 = !DILocation(line: 2111, column: 13, scope: !2679)
!2694 = !DILocation(line: 2112, column: 28, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2679, file: !16, line: 2112, column: 17)
!2696 = !DILocation(line: 2112, column: 38, scope: !2695)
!2697 = !DILocation(line: 2112, column: 18, scope: !2695)
!2698 = !DILocation(line: 2112, column: 17, scope: !2679)
!2699 = !DILocation(line: 2113, column: 28, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2695, file: !16, line: 2112, column: 20)
!2701 = !DILocation(line: 2113, column: 17, scope: !2700)
!2702 = !DILocation(line: 2114, column: 26, scope: !2700)
!2703 = !DILocation(line: 2114, column: 17, scope: !2700)
!2704 = !DILocation(line: 2115, column: 17, scope: !2700)
!2705 = !DILocation(line: 2117, column: 9, scope: !2679)
!2706 = !DILocation(line: 2119, column: 22, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2675, file: !16, line: 2117, column: 16)
!2708 = !DILocation(line: 2119, column: 13, scope: !2707)
!2709 = !DILocation(line: 2121, column: 5, scope: !2609)
!2710 = !DILocation(line: 2123, column: 31, scope: !2606)
!2711 = !DILocation(line: 2123, column: 16, scope: !2606)
!2712 = !DILocation(line: 2123, column: 14, scope: !2606)
!2713 = !DILocation(line: 2125, column: 9, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2125, column: 9)
!2715 = !DILocation(line: 2125, column: 9, scope: !222)
!2716 = !DILocalVariable(name: "test", scope: !2717, file: !16, line: 2126, type: !305)
!2717 = distinct !DILexicalBlock(scope: !2714, file: !16, line: 2125, column: 20)
!2718 = !DILocation(line: 2126, column: 14, scope: !2717)
!2719 = !DILocation(line: 2128, column: 24, scope: !2717)
!2720 = !DILocation(line: 2128, column: 16, scope: !2721)
!2721 = !DILexicalBlockFile(scope: !2717, file: !16, discriminator: 1)
!2722 = !DILocation(line: 2128, column: 14, scope: !2717)
!2723 = !DILocation(line: 2129, column: 25, scope: !2717)
!2724 = !DILocation(line: 2129, column: 31, scope: !2717)
!2725 = !DILocation(line: 2129, column: 16, scope: !2717)
!2726 = !DILocation(line: 2129, column: 14, scope: !2717)
!2727 = !DILocation(line: 2130, column: 5, scope: !2717)
!2728 = !DILocation(line: 2132, column: 9, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2132, column: 9)
!2730 = !DILocation(line: 2132, column: 9, scope: !222)
!2731 = !DILocation(line: 2133, column: 26, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2729, file: !16, line: 2132, column: 18)
!2733 = !DILocation(line: 2133, column: 9, scope: !2732)
!2734 = !DILocation(line: 2134, column: 30, scope: !2732)
!2735 = !DILocation(line: 2134, column: 44, scope: !2732)
!2736 = !DILocation(line: 2134, column: 36, scope: !2732)
!2737 = !DILocation(line: 2134, column: 9, scope: !2732)
!2738 = !DILocation(line: 2135, column: 5, scope: !2732)
!2739 = !DILocation(line: 2136, column: 9, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2136, column: 9)
!2741 = !DILocation(line: 2136, column: 9, scope: !222)
!2742 = !DILocation(line: 2142, column: 34, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2740, file: !16, line: 2136, column: 16)
!2744 = !DILocation(line: 2142, column: 13, scope: !2743)
!2745 = !DILocation(line: 2143, column: 19, scope: !2743)
!2746 = !DILocation(line: 2143, column: 33, scope: !2743)
!2747 = !DILocation(line: 2143, column: 45, scope: !2748)
!2748 = !DILexicalBlockFile(scope: !2743, file: !16, discriminator: 1)
!2749 = !DILocation(line: 2143, column: 33, scope: !2748)
!2750 = !DILocation(line: 2143, column: 57, scope: !2751)
!2751 = !DILexicalBlockFile(scope: !2743, file: !16, discriminator: 2)
!2752 = !DILocation(line: 2143, column: 33, scope: !2751)
!2753 = !DILocation(line: 2143, column: 33, scope: !2754)
!2754 = !DILexicalBlockFile(scope: !2743, file: !16, discriminator: 3)
!2755 = !DILocation(line: 2143, column: 32, scope: !2754)
!2756 = !DILocation(line: 2143, column: 9, scope: !2754)
!2757 = !DILocation(line: 2144, column: 5, scope: !2743)
!2758 = !DILocation(line: 2146, column: 9, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2146, column: 9)
!2760 = !DILocation(line: 2146, column: 9, scope: !222)
!2761 = !DILocation(line: 2147, column: 27, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2759, file: !16, line: 2146, column: 24)
!2763 = !DILocation(line: 2147, column: 9, scope: !2762)
!2764 = !DILocation(line: 2148, column: 18, scope: !2762)
!2765 = !DILocation(line: 2148, column: 27, scope: !2762)
!2766 = !DILocation(line: 2148, column: 9, scope: !2762)
!2767 = !DILocation(line: 2149, column: 5, scope: !2762)
!2768 = !DILocation(line: 2151, column: 9, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2151, column: 9)
!2770 = !DILocation(line: 2151, column: 9, scope: !222)
!2771 = !DILocation(line: 2152, column: 18, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2769, file: !16, line: 2151, column: 23)
!2773 = !DILocation(line: 2152, column: 9, scope: !2772)
!2774 = !DILocation(line: 2153, column: 31, scope: !2772)
!2775 = !DILocation(line: 2153, column: 9, scope: !2772)
!2776 = !DILocation(line: 2154, column: 22, scope: !2772)
!2777 = !DILocation(line: 2154, column: 31, scope: !2772)
!2778 = !DILocation(line: 2154, column: 9, scope: !2772)
!2779 = !DILocation(line: 2155, column: 5, scope: !2772)
!2780 = !DILocation(line: 2158, column: 17, scope: !222)
!2781 = !DILocation(line: 2158, column: 22, scope: !222)
!2782 = !DILocation(line: 2158, column: 28, scope: !222)
!2783 = !DILocation(line: 2158, column: 5, scope: !222)
!2784 = !DILocation(line: 2159, column: 27, scope: !222)
!2785 = !DILocation(line: 2159, column: 5, scope: !222)
!2786 = !DILocation(line: 2162, column: 9, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2162, column: 9)
!2788 = !DILocation(line: 2162, column: 37, scope: !2787)
!2789 = !DILocation(line: 2162, column: 26, scope: !2790)
!2790 = !DILexicalBlockFile(scope: !2787, file: !16, discriminator: 1)
!2791 = !DILocation(line: 2162, column: 24, scope: !2787)
!2792 = !DILocation(line: 2162, column: 9, scope: !222)
!2793 = !DILocation(line: 2163, column: 17, scope: !2787)
!2794 = !DILocation(line: 2163, column: 32, scope: !2787)
!2795 = !DILocation(line: 2163, column: 15, scope: !2787)
!2796 = !DILocation(line: 2163, column: 9, scope: !2787)
!2797 = !DILocation(line: 2165, column: 28, scope: !2787)
!2798 = !DILocation(line: 2165, column: 17, scope: !2787)
!2799 = !DILocation(line: 2165, column: 33, scope: !2787)
!2800 = !DILocation(line: 2165, column: 15, scope: !2787)
!2801 = !DILocation(line: 2167, column: 14, scope: !222)
!2802 = !DILocation(line: 2168, column: 15, scope: !222)
!2803 = !DILocation(line: 2169, column: 12, scope: !222)
!2804 = !DILocation(line: 2170, column: 14, scope: !222)
!2805 = !DILocation(line: 2171, column: 15, scope: !222)
!2806 = !DILocation(line: 2173, column: 14, scope: !222)
!2807 = !DILocation(line: 2174, column: 14, scope: !222)
!2808 = !DILocation(line: 2175, column: 14, scope: !222)
!2809 = !DILocation(line: 2176, column: 14, scope: !222)
!2810 = !DILocation(line: 2178, column: 31, scope: !222)
!2811 = !DILocation(line: 2178, column: 5, scope: !222)
!2812 = !DILocation(line: 2180, column: 9, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2178, column: 47)
!2814 = !DILocalVariable(name: "foundit", scope: !2815, file: !16, line: 2192, type: !225)
!2815 = distinct !DILexicalBlock(scope: !2813, file: !16, line: 2183, column: 9)
!2816 = !DILocation(line: 2192, column: 17, scope: !2815)
!2817 = !DILocalVariable(name: "fbio", scope: !2815, file: !16, line: 2193, type: !305)
!2818 = !DILocation(line: 2193, column: 18, scope: !2815)
!2819 = !DILocation(line: 2193, column: 33, scope: !2815)
!2820 = !DILocation(line: 2193, column: 25, scope: !2821)
!2821 = !DILexicalBlockFile(scope: !2815, file: !16, discriminator: 1)
!2822 = !DILocation(line: 2195, column: 22, scope: !2815)
!2823 = !DILocation(line: 2195, column: 28, scope: !2815)
!2824 = !DILocation(line: 2195, column: 13, scope: !2815)
!2825 = !DILocation(line: 2197, column: 13, scope: !2815)
!2826 = distinct !{!2826, !2825}
!2827 = !DILocation(line: 2198, column: 37, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2815, file: !16, line: 2197, column: 16)
!2829 = !DILocation(line: 2198, column: 43, scope: !2828)
!2830 = !DILocation(line: 2198, column: 28, scope: !2828)
!2831 = !DILocation(line: 2198, column: 26, scope: !2828)
!2832 = !DILocation(line: 2199, column: 13, scope: !2828)
!2833 = !DILocation(line: 2199, column: 22, scope: !2821)
!2834 = !DILocation(line: 2199, column: 31, scope: !2821)
!2835 = !DILocation(line: 2199, column: 35, scope: !2821)
!2836 = !DILocation(line: 2199, column: 38, scope: !2837)
!2837 = !DILexicalBlockFile(scope: !2815, file: !16, discriminator: 2)
!2838 = !DILocation(line: 2199, column: 46, scope: !2837)
!2839 = !DILocation(line: 2199, column: 13, scope: !2840)
!2840 = !DILexicalBlockFile(scope: !2828, file: !16, discriminator: 3)
!2841 = !DILocation(line: 2200, column: 17, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2815, file: !16, line: 2200, column: 17)
!2843 = !DILocation(line: 2200, column: 27, scope: !2842)
!2844 = !DILocation(line: 2200, column: 17, scope: !2815)
!2845 = !DILocation(line: 2201, column: 27, scope: !2842)
!2846 = !DILocation(line: 2201, column: 17, scope: !2842)
!2847 = !DILocation(line: 2202, column: 17, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2815, file: !16, line: 2202, column: 17)
!2849 = !DILocation(line: 2202, column: 32, scope: !2848)
!2850 = !DILocation(line: 2202, column: 17, scope: !2815)
!2851 = !DILocation(line: 2203, column: 28, scope: !2848)
!2852 = !DILocation(line: 2203, column: 49, scope: !2848)
!2853 = !DILocation(line: 2203, column: 17, scope: !2848)
!2854 = !DILocation(line: 2205, column: 28, scope: !2848)
!2855 = !DILocation(line: 2205, column: 49, scope: !2848)
!2856 = !DILocation(line: 2205, column: 17, scope: !2848)
!2857 = !DILocation(line: 2206, column: 33, scope: !2815)
!2858 = !DILocation(line: 2206, column: 24, scope: !2815)
!2859 = !DILocation(line: 2206, column: 19, scope: !2815)
!2860 = !DILocation(line: 2211, column: 13, scope: !2815)
!2861 = distinct !{!2861, !2860}
!2862 = !DILocation(line: 2212, column: 37, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2815, file: !16, line: 2211, column: 16)
!2864 = !DILocation(line: 2212, column: 43, scope: !2863)
!2865 = !DILocation(line: 2212, column: 28, scope: !2863)
!2866 = !DILocation(line: 2212, column: 26, scope: !2863)
!2867 = !DILocation(line: 2213, column: 28, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2863, file: !16, line: 2213, column: 21)
!2869 = !DILocation(line: 2213, column: 21, scope: !2868)
!2870 = !DILocation(line: 2213, column: 21, scope: !2863)
!2871 = !DILocation(line: 2214, column: 29, scope: !2868)
!2872 = !DILocation(line: 2214, column: 21, scope: !2868)
!2873 = !DILocation(line: 2215, column: 13, scope: !2863)
!2874 = !DILocation(line: 2215, column: 22, scope: !2821)
!2875 = !DILocation(line: 2215, column: 31, scope: !2821)
!2876 = !DILocation(line: 2215, column: 35, scope: !2821)
!2877 = !DILocation(line: 2215, column: 38, scope: !2837)
!2878 = !DILocation(line: 2215, column: 46, scope: !2837)
!2879 = !DILocation(line: 2215, column: 13, scope: !2880)
!2880 = !DILexicalBlockFile(scope: !2863, file: !16, discriminator: 3)
!2881 = !DILocation(line: 2216, column: 33, scope: !2815)
!2882 = !DILocation(line: 2216, column: 24, scope: !2815)
!2883 = !DILocation(line: 2216, column: 19, scope: !2815)
!2884 = !DILocation(line: 2217, column: 21, scope: !2815)
!2885 = !DILocation(line: 2217, column: 13, scope: !2815)
!2886 = !DILocation(line: 2218, column: 22, scope: !2815)
!2887 = !DILocation(line: 2218, column: 13, scope: !2815)
!2888 = !DILocation(line: 2219, column: 18, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2815, file: !16, line: 2219, column: 17)
!2890 = !DILocation(line: 2219, column: 17, scope: !2815)
!2891 = !DILocation(line: 2220, column: 28, scope: !2889)
!2892 = !DILocation(line: 2220, column: 17, scope: !2889)
!2893 = !DILocation(line: 2223, column: 24, scope: !2815)
!2894 = !DILocation(line: 2223, column: 13, scope: !2815)
!2895 = !DILocation(line: 2224, column: 22, scope: !2815)
!2896 = !DILocation(line: 2224, column: 28, scope: !2815)
!2897 = !DILocation(line: 2224, column: 13, scope: !2815)
!2898 = !DILocation(line: 2226, column: 9, scope: !2813)
!2899 = !DILocation(line: 2229, column: 22, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2813, file: !16, line: 2228, column: 9)
!2901 = !DILocation(line: 2229, column: 28, scope: !2900)
!2902 = !DILocation(line: 2229, column: 13, scope: !2900)
!2903 = !DILocation(line: 2230, column: 24, scope: !2900)
!2904 = !DILocation(line: 2230, column: 13, scope: !2900)
!2905 = !DILocation(line: 2231, column: 33, scope: !2900)
!2906 = !DILocation(line: 2231, column: 39, scope: !2900)
!2907 = !DILocation(line: 2231, column: 24, scope: !2900)
!2908 = !DILocation(line: 2231, column: 22, scope: !2900)
!2909 = !DILocation(line: 2232, column: 17, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2900, file: !16, line: 2232, column: 17)
!2911 = !DILocation(line: 2232, column: 26, scope: !2910)
!2912 = !DILocation(line: 2232, column: 17, scope: !2900)
!2913 = !DILocation(line: 2233, column: 28, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2910, file: !16, line: 2232, column: 31)
!2915 = !DILocation(line: 2233, column: 17, scope: !2914)
!2916 = !DILocation(line: 2234, column: 17, scope: !2914)
!2917 = !DILocation(line: 2237, column: 9, scope: !2813)
!2918 = !DILocalVariable(name: "foundit", scope: !2919, file: !16, line: 2240, type: !225)
!2919 = distinct !DILexicalBlock(scope: !2813, file: !16, line: 2239, column: 9)
!2920 = !DILocation(line: 2240, column: 17, scope: !2919)
!2921 = !DILocalVariable(name: "fbio", scope: !2919, file: !16, line: 2241, type: !305)
!2922 = !DILocation(line: 2241, column: 18, scope: !2919)
!2923 = !DILocation(line: 2241, column: 33, scope: !2919)
!2924 = !DILocation(line: 2241, column: 25, scope: !2925)
!2925 = !DILexicalBlockFile(scope: !2919, file: !16, discriminator: 1)
!2926 = !DILocation(line: 2243, column: 22, scope: !2919)
!2927 = !DILocation(line: 2243, column: 28, scope: !2919)
!2928 = !DILocation(line: 2243, column: 13, scope: !2919)
!2929 = !DILocation(line: 2244, column: 22, scope: !2919)
!2930 = !DILocation(line: 2244, column: 28, scope: !2919)
!2931 = !DILocation(line: 2244, column: 13, scope: !2919)
!2932 = !DILocation(line: 2246, column: 24, scope: !2919)
!2933 = !DILocation(line: 2246, column: 13, scope: !2919)
!2934 = !DILocation(line: 2247, column: 33, scope: !2919)
!2935 = !DILocation(line: 2247, column: 24, scope: !2919)
!2936 = !DILocation(line: 2247, column: 19, scope: !2919)
!2937 = !DILocation(line: 2249, column: 13, scope: !2919)
!2938 = distinct !{!2938, !2937}
!2939 = !DILocation(line: 2250, column: 37, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2919, file: !16, line: 2249, column: 16)
!2941 = !DILocation(line: 2250, column: 43, scope: !2940)
!2942 = !DILocation(line: 2250, column: 28, scope: !2940)
!2943 = !DILocation(line: 2250, column: 26, scope: !2940)
!2944 = !DILocation(line: 2251, column: 28, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2940, file: !16, line: 2251, column: 21)
!2946 = !DILocation(line: 2251, column: 21, scope: !2945)
!2947 = !DILocation(line: 2251, column: 21, scope: !2940)
!2948 = !DILocation(line: 2252, column: 29, scope: !2945)
!2949 = !DILocation(line: 2252, column: 21, scope: !2945)
!2950 = !DILocation(line: 2253, column: 13, scope: !2940)
!2951 = !DILocation(line: 2254, column: 20, scope: !2919)
!2952 = !DILocation(line: 2254, column: 29, scope: !2919)
!2953 = !DILocation(line: 2254, column: 33, scope: !2919)
!2954 = !DILocation(line: 2254, column: 36, scope: !2925)
!2955 = !DILocation(line: 2254, column: 44, scope: !2925)
!2956 = !DILocation(line: 2253, column: 13, scope: !2957)
!2957 = !DILexicalBlockFile(scope: !2940, file: !16, discriminator: 1)
!2958 = !DILocation(line: 2255, column: 33, scope: !2919)
!2959 = !DILocation(line: 2255, column: 24, scope: !2919)
!2960 = !DILocation(line: 2255, column: 19, scope: !2919)
!2961 = !DILocation(line: 2256, column: 21, scope: !2919)
!2962 = !DILocation(line: 2256, column: 13, scope: !2919)
!2963 = !DILocation(line: 2257, column: 22, scope: !2919)
!2964 = !DILocation(line: 2257, column: 13, scope: !2919)
!2965 = !DILocation(line: 2258, column: 18, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2919, file: !16, line: 2258, column: 17)
!2967 = !DILocation(line: 2258, column: 17, scope: !2919)
!2968 = !DILocation(line: 2259, column: 28, scope: !2966)
!2969 = !DILocation(line: 2259, column: 17, scope: !2966)
!2970 = !DILocation(line: 2262, column: 24, scope: !2919)
!2971 = !DILocation(line: 2262, column: 13, scope: !2919)
!2972 = !DILocation(line: 2263, column: 22, scope: !2919)
!2973 = !DILocation(line: 2263, column: 28, scope: !2919)
!2974 = !DILocation(line: 2263, column: 13, scope: !2919)
!2975 = !DILocation(line: 2265, column: 9, scope: !2813)
!2976 = !DILocalVariable(name: "fbio", scope: !2977, file: !16, line: 2268, type: !305)
!2977 = distinct !DILexicalBlock(scope: !2813, file: !16, line: 2267, column: 9)
!2978 = !DILocation(line: 2268, column: 18, scope: !2977)
!2979 = !DILocation(line: 2268, column: 33, scope: !2977)
!2980 = !DILocation(line: 2268, column: 25, scope: !2981)
!2981 = !DILexicalBlockFile(scope: !2977, file: !16, discriminator: 1)
!2982 = !DILocation(line: 2270, column: 22, scope: !2977)
!2983 = !DILocation(line: 2270, column: 28, scope: !2977)
!2984 = !DILocation(line: 2270, column: 13, scope: !2977)
!2985 = !DILocation(line: 2272, column: 13, scope: !2977)
!2986 = distinct !{!2986, !2985}
!2987 = !DILocation(line: 2273, column: 37, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2977, file: !16, line: 2272, column: 16)
!2989 = !DILocation(line: 2273, column: 43, scope: !2988)
!2990 = !DILocation(line: 2273, column: 28, scope: !2988)
!2991 = !DILocation(line: 2273, column: 26, scope: !2988)
!2992 = !DILocation(line: 2274, column: 13, scope: !2988)
!2993 = !DILocation(line: 2275, column: 20, scope: !2977)
!2994 = !DILocation(line: 2275, column: 29, scope: !2977)
!2995 = !DILocation(line: 2275, column: 33, scope: !2977)
!2996 = !DILocation(line: 2275, column: 36, scope: !2981)
!2997 = !DILocation(line: 2275, column: 44, scope: !2981)
!2998 = !DILocation(line: 2274, column: 13, scope: !2999)
!2999 = !DILexicalBlockFile(scope: !2988, file: !16, discriminator: 1)
!3000 = !DILocation(line: 2276, column: 33, scope: !2977)
!3001 = !DILocation(line: 2276, column: 24, scope: !2977)
!3002 = !DILocation(line: 2276, column: 19, scope: !2977)
!3003 = !DILocation(line: 2277, column: 21, scope: !2977)
!3004 = !DILocation(line: 2277, column: 13, scope: !2977)
!3005 = !DILocation(line: 2278, column: 22, scope: !2977)
!3006 = !DILocation(line: 2278, column: 13, scope: !2977)
!3007 = !DILocation(line: 2279, column: 24, scope: !2977)
!3008 = !DILocation(line: 2279, column: 13, scope: !2977)
!3009 = !DILocation(line: 2280, column: 22, scope: !2977)
!3010 = !DILocation(line: 2280, column: 28, scope: !2977)
!3011 = !DILocation(line: 2280, column: 13, scope: !2977)
!3012 = !DILocation(line: 2282, column: 9, scope: !2813)
!3013 = !DILocalVariable(name: "seen", scope: !3014, file: !16, line: 2286, type: !225)
!3014 = distinct !DILexicalBlock(scope: !2813, file: !16, line: 2285, column: 9)
!3015 = !DILocation(line: 2286, column: 17, scope: !3014)
!3016 = !DILocation(line: 2287, column: 24, scope: !3014)
!3017 = !DILocation(line: 2290, column: 24, scope: !3014)
!3018 = !DILocation(line: 2290, column: 39, scope: !3014)
!3019 = !DILocation(line: 2291, column: 24, scope: !3014)
!3020 = !DILocation(line: 2291, column: 36, scope: !3021)
!3021 = !DILexicalBlockFile(scope: !3014, file: !16, discriminator: 1)
!3022 = !DILocation(line: 2291, column: 24, scope: !3021)
!3023 = !DILocation(line: 2291, column: 48, scope: !3024)
!3024 = !DILexicalBlockFile(scope: !3014, file: !16, discriminator: 2)
!3025 = !DILocation(line: 2291, column: 24, scope: !3024)
!3026 = !DILocation(line: 2291, column: 24, scope: !3027)
!3027 = !DILexicalBlockFile(scope: !3014, file: !16, discriminator: 3)
!3028 = !DILocation(line: 2287, column: 13, scope: !3021)
!3029 = !DILocation(line: 2292, column: 29, scope: !3014)
!3030 = !DILocation(line: 2292, column: 35, scope: !3014)
!3031 = !DILocation(line: 2292, column: 20, scope: !3014)
!3032 = !DILocation(line: 2292, column: 18, scope: !3014)
!3033 = !DILocation(line: 2293, column: 17, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3014, file: !16, line: 2293, column: 17)
!3035 = !DILocation(line: 2293, column: 22, scope: !3034)
!3036 = !DILocation(line: 2293, column: 17, scope: !3014)
!3037 = !DILocation(line: 2294, column: 28, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3034, file: !16, line: 2293, column: 27)
!3039 = !DILocation(line: 2294, column: 17, scope: !3038)
!3040 = !DILocation(line: 2295, column: 17, scope: !3038)
!3041 = !DILocation(line: 2297, column: 18, scope: !3014)
!3042 = !DILocation(line: 2297, column: 13, scope: !3014)
!3043 = !DILocation(line: 2297, column: 24, scope: !3014)
!3044 = !DILocation(line: 2298, column: 13, scope: !3014)
!3045 = !DILocation(line: 2299, column: 21, scope: !3014)
!3046 = !DILocation(line: 2298, column: 21, scope: !3021)
!3047 = !DILocation(line: 2300, column: 20, scope: !3014)
!3048 = !DILocation(line: 2300, column: 31, scope: !3021)
!3049 = !DILocation(line: 2300, column: 24, scope: !3021)
!3050 = !DILocation(line: 2300, column: 23, scope: !3021)
!3051 = !DILocation(line: 2298, column: 13, scope: !3024)
!3052 = !DILocation(line: 2303, column: 33, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3014, file: !16, line: 2302, column: 13)
!3054 = !DILocation(line: 2303, column: 39, scope: !3053)
!3055 = !DILocation(line: 2303, column: 24, scope: !3053)
!3056 = !DILocation(line: 2303, column: 22, scope: !3053)
!3057 = !DILocation(line: 2305, column: 21, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3053, file: !16, line: 2305, column: 21)
!3059 = !DILocation(line: 2305, column: 26, scope: !3058)
!3060 = !DILocation(line: 2305, column: 21, scope: !3053)
!3061 = !DILocation(line: 2306, column: 21, scope: !3058)
!3062 = !DILocation(line: 2308, column: 22, scope: !3053)
!3063 = !DILocation(line: 2308, column: 17, scope: !3053)
!3064 = !DILocation(line: 2308, column: 28, scope: !3053)
!3065 = !DILocation(line: 2298, column: 13, scope: !3027)
!3066 = distinct !{!3066, !3044}
!3067 = !DILocation(line: 2310, column: 24, scope: !3014)
!3068 = !DILocation(line: 2310, column: 13, scope: !3014)
!3069 = !DILocation(line: 2312, column: 29, scope: !3014)
!3070 = !DILocation(line: 2312, column: 35, scope: !3014)
!3071 = !DILocation(line: 2312, column: 20, scope: !3014)
!3072 = !DILocation(line: 2312, column: 18, scope: !3014)
!3073 = !DILocation(line: 2313, column: 17, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3014, file: !16, line: 2313, column: 17)
!3075 = !DILocation(line: 2313, column: 22, scope: !3074)
!3076 = !DILocation(line: 2313, column: 17, scope: !3014)
!3077 = !DILocation(line: 2314, column: 28, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3074, file: !16, line: 2313, column: 27)
!3079 = !DILocation(line: 2314, column: 17, scope: !3078)
!3080 = !DILocation(line: 2315, column: 17, scope: !3078)
!3081 = !DILocation(line: 2317, column: 18, scope: !3014)
!3082 = !DILocation(line: 2317, column: 13, scope: !3014)
!3083 = !DILocation(line: 2317, column: 24, scope: !3014)
!3084 = !DILocation(line: 2318, column: 25, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3014, file: !16, line: 2318, column: 17)
!3086 = !DILocation(line: 2318, column: 18, scope: !3085)
!3087 = !DILocation(line: 2318, column: 17, scope: !3014)
!3088 = !DILocation(line: 2319, column: 17, scope: !3085)
!3089 = !DILocation(line: 2320, column: 13, scope: !3014)
!3090 = !DILocation(line: 2320, column: 21, scope: !3014)
!3091 = !DILocation(line: 2322, column: 9, scope: !2813)
!3092 = !DILocalVariable(name: "bytes", scope: !3093, file: !16, line: 2337, type: !225)
!3093 = distinct !DILexicalBlock(scope: !2813, file: !16, line: 2324, column: 9)
!3094 = !DILocation(line: 2337, column: 17, scope: !3093)
!3095 = !DILocation(line: 2340, column: 30, scope: !3093)
!3096 = !DILocation(line: 2340, column: 36, scope: !3093)
!3097 = !DILocation(line: 2340, column: 21, scope: !3093)
!3098 = !DILocation(line: 2340, column: 19, scope: !3093)
!3099 = !DILocation(line: 2341, column: 17, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3093, file: !16, line: 2341, column: 17)
!3101 = !DILocation(line: 2341, column: 23, scope: !3100)
!3102 = !DILocation(line: 2341, column: 28, scope: !3100)
!3103 = !DILocation(line: 2341, column: 38, scope: !3104)
!3104 = !DILexicalBlockFile(scope: !3100, file: !16, discriminator: 1)
!3105 = !DILocation(line: 2341, column: 31, scope: !3104)
!3106 = !DILocation(line: 2341, column: 55, scope: !3104)
!3107 = !DILocation(line: 2341, column: 17, scope: !3104)
!3108 = !DILocation(line: 2342, column: 17, scope: !3100)
!3109 = !DILocation(line: 2344, column: 23, scope: !3093)
!3110 = !DILocation(line: 2344, column: 13, scope: !3093)
!3111 = !DILocation(line: 2345, column: 23, scope: !3093)
!3112 = !DILocation(line: 2345, column: 13, scope: !3093)
!3113 = !DILocation(line: 2346, column: 33, scope: !3093)
!3114 = !DILocation(line: 2346, column: 24, scope: !3093)
!3115 = !DILocation(line: 2346, column: 19, scope: !3093)
!3116 = !DILocation(line: 2348, column: 30, scope: !3093)
!3117 = !DILocation(line: 2348, column: 36, scope: !3093)
!3118 = !DILocation(line: 2348, column: 21, scope: !3093)
!3119 = !DILocation(line: 2348, column: 19, scope: !3093)
!3120 = !DILocation(line: 2349, column: 17, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3093, file: !16, line: 2349, column: 17)
!3122 = !DILocation(line: 2349, column: 23, scope: !3121)
!3123 = !DILocation(line: 2349, column: 28, scope: !3121)
!3124 = !DILocation(line: 2349, column: 38, scope: !3125)
!3125 = !DILexicalBlockFile(scope: !3121, file: !16, discriminator: 1)
!3126 = !DILocation(line: 2349, column: 31, scope: !3125)
!3127 = !DILocation(line: 2349, column: 60, scope: !3125)
!3128 = !DILocation(line: 2349, column: 17, scope: !3125)
!3129 = !DILocation(line: 2350, column: 17, scope: !3121)
!3130 = !DILocation(line: 2352, column: 9, scope: !2813)
!3131 = !DILocalVariable(name: "foundit", scope: !3132, file: !16, line: 2359, type: !262)
!3132 = distinct !DILexicalBlock(scope: !2813, file: !16, line: 2354, column: 9)
!3133 = !DILocation(line: 2359, column: 15, scope: !3132)
!3134 = !DILocalVariable(name: "fbio", scope: !3132, file: !16, line: 2360, type: !305)
!3135 = !DILocation(line: 2360, column: 18, scope: !3132)
!3136 = !DILocation(line: 2360, column: 33, scope: !3132)
!3137 = !DILocation(line: 2360, column: 25, scope: !3138)
!3138 = !DILexicalBlockFile(scope: !3132, file: !16, discriminator: 1)
!3139 = !DILocation(line: 2362, column: 22, scope: !3132)
!3140 = !DILocation(line: 2362, column: 28, scope: !3132)
!3141 = !DILocation(line: 2362, column: 13, scope: !3132)
!3142 = !DILocation(line: 2363, column: 24, scope: !3132)
!3143 = !DILocation(line: 2363, column: 57, scope: !3132)
!3144 = !DILocation(line: 2363, column: 13, scope: !3132)
!3145 = !DILocation(line: 2368, column: 24, scope: !3132)
!3146 = !DILocation(line: 2368, column: 13, scope: !3132)
!3147 = !DILocation(line: 2371, column: 17, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3132, file: !16, line: 2371, column: 17)
!3149 = !DILocation(line: 2371, column: 27, scope: !3148)
!3150 = !DILocation(line: 2371, column: 17, scope: !3132)
!3151 = !DILocalVariable(name: "l", scope: !3152, file: !16, line: 2372, type: !381)
!3152 = distinct !DILexicalBlock(scope: !3148, file: !16, line: 2371, column: 35)
!3153 = !DILocation(line: 2372, column: 24, scope: !3152)
!3154 = !DILocalVariable(name: "proxyauth", scope: !3152, file: !16, line: 2373, type: !227)
!3155 = !DILocation(line: 2373, column: 23, scope: !3152)
!3156 = !DILocalVariable(name: "proxyauthenc", scope: !3152, file: !16, line: 2373, type: !227)
!3157 = !DILocation(line: 2373, column: 35, scope: !3152)
!3158 = !DILocation(line: 2375, column: 28, scope: !3152)
!3159 = !DILocation(line: 2375, column: 21, scope: !3152)
!3160 = !DILocation(line: 2375, column: 19, scope: !3152)
!3161 = !DILocation(line: 2376, column: 21, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3152, file: !16, line: 2376, column: 21)
!3163 = !DILocation(line: 2376, column: 31, scope: !3162)
!3164 = !DILocation(line: 2376, column: 21, scope: !3152)
!3165 = !DILocation(line: 2377, column: 33, scope: !3162)
!3166 = !DILocation(line: 2377, column: 26, scope: !3162)
!3167 = !DILocation(line: 2377, column: 23, scope: !3162)
!3168 = !DILocation(line: 2377, column: 21, scope: !3162)
!3169 = !DILocation(line: 2378, column: 40, scope: !3152)
!3170 = !DILocation(line: 2378, column: 42, scope: !3152)
!3171 = !DILocation(line: 2378, column: 29, scope: !3152)
!3172 = !DILocation(line: 2378, column: 27, scope: !3152)
!3173 = !DILocation(line: 2379, column: 30, scope: !3152)
!3174 = !DILocation(line: 2379, column: 41, scope: !3152)
!3175 = !DILocation(line: 2379, column: 43, scope: !3152)
!3176 = !DILocation(line: 2379, column: 57, scope: !3152)
!3177 = !DILocation(line: 2380, column: 31, scope: !3152)
!3178 = !DILocation(line: 2380, column: 41, scope: !3152)
!3179 = !DILocation(line: 2380, column: 30, scope: !3152)
!3180 = !DILocation(line: 2380, column: 51, scope: !3181)
!3181 = !DILexicalBlockFile(scope: !3152, file: !16, discriminator: 1)
!3182 = !DILocation(line: 2380, column: 30, scope: !3181)
!3183 = !DILocation(line: 2380, column: 30, scope: !3184)
!3184 = !DILexicalBlockFile(scope: !3152, file: !16, discriminator: 2)
!3185 = !DILocation(line: 2380, column: 30, scope: !3186)
!3186 = !DILexicalBlockFile(scope: !3152, file: !16, discriminator: 3)
!3187 = !DILocation(line: 2379, column: 17, scope: !3181)
!3188 = !DILocation(line: 2381, column: 45, scope: !3152)
!3189 = !DILocation(line: 2381, column: 63, scope: !3152)
!3190 = !DILocation(line: 2381, column: 56, scope: !3152)
!3191 = !DILocation(line: 2381, column: 32, scope: !3181)
!3192 = !DILocation(line: 2381, column: 30, scope: !3152)
!3193 = !DILocation(line: 2382, column: 28, scope: !3152)
!3194 = !DILocation(line: 2383, column: 28, scope: !3152)
!3195 = !DILocation(line: 2382, column: 17, scope: !3152)
!3196 = !DILocation(line: 2384, column: 35, scope: !3152)
!3197 = !DILocation(line: 2384, column: 53, scope: !3152)
!3198 = !DILocation(line: 2384, column: 46, scope: !3152)
!3199 = !DILocation(line: 2384, column: 17, scope: !3181)
!3200 = !DILocation(line: 2385, column: 35, scope: !3152)
!3201 = !DILocation(line: 2385, column: 56, scope: !3152)
!3202 = !DILocation(line: 2385, column: 49, scope: !3152)
!3203 = !DILocation(line: 2385, column: 17, scope: !3181)
!3204 = !DILocation(line: 2386, column: 13, scope: !3152)
!3205 = !DILocation(line: 2389, column: 24, scope: !3132)
!3206 = !DILocation(line: 2389, column: 13, scope: !3132)
!3207 = !DILocation(line: 2390, column: 33, scope: !3132)
!3208 = !DILocation(line: 2390, column: 24, scope: !3132)
!3209 = !DILocation(line: 2390, column: 19, scope: !3132)
!3210 = !DILocation(line: 2397, column: 33, scope: !3132)
!3211 = !DILocation(line: 2397, column: 39, scope: !3132)
!3212 = !DILocation(line: 2397, column: 24, scope: !3132)
!3213 = !DILocation(line: 2397, column: 22, scope: !3132)
!3214 = !DILocation(line: 2398, column: 17, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3132, file: !16, line: 2398, column: 17)
!3216 = !DILocation(line: 2398, column: 26, scope: !3215)
!3217 = !DILocation(line: 2398, column: 17, scope: !3132)
!3218 = !DILocation(line: 2399, column: 28, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3215, file: !16, line: 2398, column: 57)
!3220 = !DILocation(line: 2401, column: 60, scope: !3219)
!3221 = !DILocation(line: 2401, column: 66, scope: !3219)
!3222 = !DILocation(line: 2399, column: 17, scope: !3219)
!3223 = !DILocation(line: 2402, column: 37, scope: !3219)
!3224 = !DILocation(line: 2402, column: 28, scope: !3219)
!3225 = !DILocation(line: 2402, column: 23, scope: !3219)
!3226 = !DILocation(line: 2403, column: 25, scope: !3219)
!3227 = !DILocation(line: 2403, column: 17, scope: !3219)
!3228 = !DILocation(line: 2404, column: 26, scope: !3219)
!3229 = !DILocation(line: 2404, column: 17, scope: !3219)
!3230 = !DILocation(line: 2405, column: 17, scope: !3219)
!3231 = !DILocation(line: 2407, column: 17, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3132, file: !16, line: 2407, column: 17)
!3233 = !DILocation(line: 2407, column: 25, scope: !3232)
!3234 = !DILocation(line: 2407, column: 17, scope: !3132)
!3235 = !DILocation(line: 2408, column: 28, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3232, file: !16, line: 2407, column: 33)
!3237 = !DILocation(line: 2410, column: 44, scope: !3236)
!3238 = !DILocation(line: 2408, column: 17, scope: !3236)
!3239 = !DILocation(line: 2411, column: 25, scope: !3236)
!3240 = !DILocation(line: 2412, column: 13, scope: !3236)
!3241 = !DILocation(line: 2412, column: 24, scope: !3242)
!3242 = !DILexicalBlockFile(scope: !3243, file: !16, discriminator: 1)
!3243 = distinct !DILexicalBlock(scope: !3232, file: !16, line: 2412, column: 24)
!3244 = !DILocation(line: 2412, column: 32, scope: !3242)
!3245 = !DILocation(line: 2413, column: 28, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3243, file: !16, line: 2412, column: 40)
!3247 = !DILocation(line: 2413, column: 69, scope: !3246)
!3248 = !DILocation(line: 2414, column: 29, scope: !3246)
!3249 = !DILocation(line: 2413, column: 17, scope: !3246)
!3250 = !DILocation(line: 2415, column: 13, scope: !3246)
!3251 = !DILocation(line: 2416, column: 25, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3243, file: !16, line: 2415, column: 20)
!3253 = !DILocation(line: 2418, column: 17, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3132, file: !16, line: 2418, column: 17)
!3255 = !DILocation(line: 2418, column: 25, scope: !3254)
!3256 = !DILocation(line: 2418, column: 17, scope: !3132)
!3257 = !DILocation(line: 2420, column: 17, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3254, file: !16, line: 2418, column: 41)
!3259 = distinct !{!3259, !3257}
!3260 = !DILocation(line: 2421, column: 41, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3258, file: !16, line: 2420, column: 20)
!3262 = !DILocation(line: 2421, column: 47, scope: !3261)
!3263 = !DILocation(line: 2421, column: 32, scope: !3261)
!3264 = !DILocation(line: 2421, column: 30, scope: !3261)
!3265 = !DILocation(line: 2422, column: 17, scope: !3261)
!3266 = !DILocation(line: 2422, column: 26, scope: !3267)
!3267 = !DILexicalBlockFile(scope: !3258, file: !16, discriminator: 1)
!3268 = !DILocation(line: 2422, column: 35, scope: !3267)
!3269 = !DILocation(line: 2422, column: 17, scope: !3267)
!3270 = !DILocation(line: 2423, column: 13, scope: !3258)
!3271 = !DILocation(line: 2424, column: 33, scope: !3132)
!3272 = !DILocation(line: 2424, column: 24, scope: !3132)
!3273 = !DILocation(line: 2424, column: 19, scope: !3132)
!3274 = !DILocation(line: 2425, column: 21, scope: !3132)
!3275 = !DILocation(line: 2425, column: 13, scope: !3132)
!3276 = !DILocation(line: 2426, column: 22, scope: !3132)
!3277 = !DILocation(line: 2426, column: 13, scope: !3132)
!3278 = !DILocation(line: 2427, column: 17, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3132, file: !16, line: 2427, column: 17)
!3280 = !DILocation(line: 2427, column: 25, scope: !3279)
!3281 = !DILocation(line: 2427, column: 17, scope: !3132)
!3282 = !DILocation(line: 2428, column: 17, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3279, file: !16, line: 2427, column: 37)
!3284 = !DILocation(line: 2431, column: 9, scope: !2813)
!3285 = !DILocalVariable(name: "numeric", scope: !3286, file: !16, line: 2434, type: !225)
!3286 = distinct !DILexicalBlock(scope: !2813, file: !16, line: 2433, column: 9)
!3287 = !DILocation(line: 2434, column: 17, scope: !3286)
!3288 = !DILocalVariable(name: "fbio", scope: !3286, file: !16, line: 2435, type: !305)
!3289 = !DILocation(line: 2435, column: 18, scope: !3286)
!3290 = !DILocation(line: 2435, column: 33, scope: !3286)
!3291 = !DILocation(line: 2435, column: 25, scope: !3292)
!3292 = !DILexicalBlockFile(scope: !3286, file: !16, discriminator: 1)
!3293 = !DILocation(line: 2437, column: 22, scope: !3286)
!3294 = !DILocation(line: 2437, column: 28, scope: !3286)
!3295 = !DILocation(line: 2437, column: 13, scope: !3286)
!3296 = !DILocation(line: 2438, column: 24, scope: !3286)
!3297 = !DILocation(line: 2438, column: 13, scope: !3286)
!3298 = !DILocation(line: 2439, column: 33, scope: !3286)
!3299 = !DILocation(line: 2439, column: 24, scope: !3286)
!3300 = !DILocation(line: 2439, column: 19, scope: !3286)
!3301 = !DILocation(line: 2440, column: 32, scope: !3286)
!3302 = !DILocation(line: 2440, column: 21, scope: !3286)
!3303 = !DILocation(line: 2440, column: 37, scope: !3286)
!3304 = !DILocation(line: 2440, column: 19, scope: !3286)
!3305 = !DILocation(line: 2442, column: 13, scope: !3286)
!3306 = distinct !{!3306, !3305}
!3307 = !DILocation(line: 2443, column: 25, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3286, file: !16, line: 2442, column: 16)
!3309 = !DILocation(line: 2445, column: 16, scope: !3308)
!3310 = distinct !{!3310, !3309}
!3311 = !DILocalVariable(name: "__d0", scope: !3312, file: !16, line: 2445, type: !225)
!3312 = distinct !DILexicalBlock(scope: !3308, file: !16, line: 2445, column: 19)
!3313 = !DILocation(line: 2445, column: 25, scope: !3312)
!3314 = !DILocalVariable(name: "__d1", scope: !3312, file: !16, line: 2445, type: !225)
!3315 = !DILocation(line: 2445, column: 31, scope: !3312)
!3316 = !DILocation(line: 2445, column: 19, scope: !3317)
!3317 = !DILexicalBlockFile(scope: !3312, file: !16, discriminator: 1)
!3318 = !DILocation(line: 2445, column: 168, scope: !3317)
!3319 = !DILocation(line: 2445, column: 37, scope: !3317)
!3320 = !{i32 985639}
!3321 = !DILocation(line: 2445, column: 48, scope: !3317)
!3322 = !DILocation(line: 2446, column: 27, scope: !3308)
!3323 = !DILocation(line: 2446, column: 16, scope: !3308)
!3324 = !DILocation(line: 2446, column: 18, scope: !3308)
!3325 = !DILocation(line: 2446, column: 74, scope: !3308)
!3326 = !DILocation(line: 2446, column: 16, scope: !3327)
!3327 = !DILexicalBlockFile(scope: !3308, file: !16, discriminator: 1)
!3328 = !DILocation(line: 2446, column: 25, scope: !3308)
!3329 = !DILocation(line: 2446, column: 19, scope: !3308)
!3330 = !DILocation(line: 2446, column: 53, scope: !3308)
!3331 = !DILocation(line: 2447, column: 25, scope: !3308)
!3332 = !DILocation(line: 2447, column: 32, scope: !3308)
!3333 = !DILocation(line: 2448, column: 25, scope: !3308)
!3334 = !DILocation(line: 2448, column: 33, scope: !3308)
!3335 = !DILocation(line: 2456, column: 31, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3308, file: !16, line: 2456, column: 21)
!3337 = !DILocation(line: 2456, column: 22, scope: !3336)
!3338 = !DILocation(line: 2457, column: 21, scope: !3336)
!3339 = !DILocation(line: 2457, column: 39, scope: !3340)
!3340 = !DILexicalBlockFile(scope: !3336, file: !16, discriminator: 1)
!3341 = !DILocation(line: 2457, column: 30, scope: !3340)
!3342 = !DILocation(line: 2457, column: 25, scope: !3340)
!3343 = !DILocation(line: 2458, column: 21, scope: !3336)
!3344 = !DILocation(line: 2458, column: 39, scope: !3340)
!3345 = !DILocation(line: 2458, column: 30, scope: !3340)
!3346 = !DILocation(line: 2458, column: 25, scope: !3340)
!3347 = !DILocation(line: 2459, column: 21, scope: !3336)
!3348 = !DILocation(line: 2459, column: 31, scope: !3340)
!3349 = !DILocation(line: 2459, column: 38, scope: !3340)
!3350 = !DILocation(line: 2459, column: 24, scope: !3340)
!3351 = !DILocation(line: 2460, column: 41, scope: !3336)
!3352 = !DILocation(line: 2456, column: 21, scope: !3327)
!3353 = !DILocation(line: 2461, column: 32, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3336, file: !16, line: 2460, column: 46)
!3355 = !DILocation(line: 2461, column: 21, scope: !3354)
!3356 = !DILocation(line: 2464, column: 21, scope: !3354)
!3357 = !DILocation(line: 2467, column: 37, scope: !3308)
!3358 = !DILocation(line: 2467, column: 43, scope: !3308)
!3359 = !DILocation(line: 2467, column: 28, scope: !3308)
!3360 = !DILocation(line: 2467, column: 26, scope: !3308)
!3361 = !DILocation(line: 2468, column: 21, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3308, file: !16, line: 2468, column: 21)
!3363 = !DILocation(line: 2468, column: 30, scope: !3362)
!3364 = !DILocation(line: 2468, column: 34, scope: !3362)
!3365 = !DILocation(line: 2468, column: 44, scope: !3366)
!3366 = !DILexicalBlockFile(scope: !3362, file: !16, discriminator: 1)
!3367 = !DILocation(line: 2468, column: 37, scope: !3366)
!3368 = !DILocation(line: 2468, column: 70, scope: !3366)
!3369 = !DILocation(line: 2468, column: 21, scope: !3366)
!3370 = !DILocation(line: 2469, column: 21, scope: !3362)
!3371 = !DILocation(line: 2472, column: 22, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3308, file: !16, line: 2472, column: 21)
!3373 = !DILocation(line: 2472, column: 30, scope: !3372)
!3374 = !DILocation(line: 2472, column: 37, scope: !3372)
!3375 = !DILocation(line: 2472, column: 40, scope: !3376)
!3376 = !DILexicalBlockFile(scope: !3372, file: !16, discriminator: 1)
!3377 = !DILocation(line: 2472, column: 48, scope: !3376)
!3378 = !DILocation(line: 2473, column: 21, scope: !3372)
!3379 = !DILocation(line: 2473, column: 31, scope: !3376)
!3380 = !DILocation(line: 2473, column: 24, scope: !3376)
!3381 = !DILocation(line: 2473, column: 49, scope: !3376)
!3382 = !DILocation(line: 2472, column: 21, scope: !3383)
!3383 = !DILexicalBlockFile(scope: !3308, file: !16, discriminator: 2)
!3384 = !DILocation(line: 2474, column: 32, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3372, file: !16, line: 2473, column: 57)
!3386 = !DILocation(line: 2474, column: 71, scope: !3385)
!3387 = !DILocation(line: 2474, column: 21, scope: !3385)
!3388 = !DILocation(line: 2475, column: 21, scope: !3385)
!3389 = !DILocation(line: 2477, column: 21, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3308, file: !16, line: 2477, column: 21)
!3391 = !DILocation(line: 2477, column: 29, scope: !3390)
!3392 = !DILocation(line: 2477, column: 21, scope: !3308)
!3393 = !DILocation(line: 2478, column: 32, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3390, file: !16, line: 2477, column: 37)
!3395 = !DILocation(line: 2478, column: 21, scope: !3394)
!3396 = !DILocation(line: 2479, column: 38, scope: !3394)
!3397 = !DILocation(line: 2479, column: 21, scope: !3394)
!3398 = !DILocation(line: 2480, column: 21, scope: !3394)
!3399 = !DILocation(line: 2482, column: 13, scope: !3308)
!3400 = !DILocation(line: 2482, column: 22, scope: !3292)
!3401 = !DILocation(line: 2482, column: 30, scope: !3292)
!3402 = !DILocation(line: 2482, column: 13, scope: !3292)
!3403 = !DILocation(line: 2484, column: 33, scope: !3286)
!3404 = !DILocation(line: 2484, column: 24, scope: !3286)
!3405 = !DILocation(line: 2484, column: 19, scope: !3286)
!3406 = !DILocation(line: 2485, column: 21, scope: !3286)
!3407 = !DILocation(line: 2485, column: 13, scope: !3286)
!3408 = !DILocation(line: 2486, column: 22, scope: !3286)
!3409 = !DILocation(line: 2486, column: 13, scope: !3286)
!3410 = !DILocation(line: 2487, column: 17, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3286, file: !16, line: 2487, column: 17)
!3412 = !DILocation(line: 2487, column: 25, scope: !3411)
!3413 = !DILocation(line: 2487, column: 17, scope: !3286)
!3414 = !DILocation(line: 2488, column: 28, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3411, file: !16, line: 2487, column: 33)
!3416 = !DILocation(line: 2488, column: 17, scope: !3415)
!3417 = !DILocation(line: 2489, column: 21, scope: !3415)
!3418 = !DILocation(line: 2490, column: 17, scope: !3415)
!3419 = !DILocation(line: 2493, column: 9, scope: !2813)
!3420 = !DILocalVariable(name: "bytes", scope: !3421, file: !16, line: 2512, type: !225)
!3421 = distinct !DILexicalBlock(scope: !2813, file: !16, line: 2495, column: 9)
!3422 = !DILocation(line: 2512, column: 17, scope: !3421)
!3423 = !DILocalVariable(name: "ssl_flg", scope: !3421, file: !16, line: 2513, type: !225)
!3424 = !DILocation(line: 2513, column: 17, scope: !3421)
!3425 = !DILocalVariable(name: "pos", scope: !3421, file: !16, line: 2514, type: !225)
!3426 = !DILocation(line: 2514, column: 17, scope: !3421)
!3427 = !DILocalVariable(name: "packet", scope: !3421, file: !16, line: 2515, type: !278)
!3428 = !DILocation(line: 2515, column: 34, scope: !3421)
!3429 = !DILocation(line: 2515, column: 66, scope: !3421)
!3430 = !DILocation(line: 2518, column: 30, scope: !3421)
!3431 = !DILocation(line: 2518, column: 44, scope: !3421)
!3432 = !DILocation(line: 2518, column: 21, scope: !3421)
!3433 = !DILocation(line: 2518, column: 19, scope: !3421)
!3434 = !DILocation(line: 2519, column: 17, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3421, file: !16, line: 2519, column: 17)
!3436 = !DILocation(line: 2519, column: 23, scope: !3435)
!3437 = !DILocation(line: 2519, column: 17, scope: !3421)
!3438 = !DILocation(line: 2520, column: 28, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3435, file: !16, line: 2519, column: 28)
!3440 = !DILocation(line: 2520, column: 17, scope: !3439)
!3441 = !DILocation(line: 2521, column: 17, scope: !3439)
!3442 = !DILocation(line: 2523, column: 24, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3435, file: !16, line: 2523, column: 24)
!3444 = !DILocation(line: 2523, column: 30, scope: !3443)
!3445 = !DILocation(line: 2523, column: 24, scope: !3435)
!3446 = !DILocation(line: 2524, column: 28, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3443, file: !16, line: 2523, column: 36)
!3448 = !DILocation(line: 2524, column: 17, scope: !3447)
!3449 = !DILocation(line: 2525, column: 17, scope: !3447)
!3450 = !DILocation(line: 2526, column: 24, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3443, file: !16, line: 2526, column: 24)
!3452 = !DILocation(line: 2526, column: 38, scope: !3451)
!3453 = !DILocation(line: 2526, column: 36, scope: !3451)
!3454 = !DILocation(line: 2527, column: 35, scope: !3451)
!3455 = !DILocation(line: 2527, column: 45, scope: !3451)
!3456 = !DILocation(line: 2526, column: 48, scope: !3451)
!3457 = !DILocation(line: 2528, column: 35, scope: !3451)
!3458 = !DILocation(line: 2528, column: 45, scope: !3451)
!3459 = !DILocation(line: 2527, column: 51, scope: !3451)
!3460 = !DILocation(line: 2526, column: 30, scope: !3451)
!3461 = !DILocation(line: 2526, column: 24, scope: !3443)
!3462 = !DILocation(line: 2529, column: 28, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3451, file: !16, line: 2528, column: 54)
!3464 = !DILocation(line: 2529, column: 17, scope: !3463)
!3465 = !DILocation(line: 2530, column: 17, scope: !3463)
!3466 = !DILocation(line: 2532, column: 24, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3451, file: !16, line: 2532, column: 24)
!3468 = !DILocation(line: 2532, column: 34, scope: !3467)
!3469 = !DILocation(line: 2532, column: 24, scope: !3451)
!3470 = !DILocation(line: 2533, column: 28, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3467, file: !16, line: 2532, column: 42)
!3472 = !DILocation(line: 2533, column: 17, scope: !3471)
!3473 = !DILocation(line: 2535, column: 17, scope: !3471)
!3474 = !DILocation(line: 2538, column: 17, scope: !3421)
!3475 = !DILocation(line: 2540, column: 13, scope: !3421)
!3476 = !DILocation(line: 2541, column: 21, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3478, file: !16, line: 2541, column: 21)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !16, line: 2540, column: 22)
!3479 = distinct !DILexicalBlock(scope: !3480, file: !16, line: 2540, column: 13)
!3480 = distinct !DILexicalBlock(scope: !3421, file: !16, line: 2540, column: 13)
!3481 = !DILocation(line: 2541, column: 28, scope: !3477)
!3482 = !DILocation(line: 2541, column: 25, scope: !3477)
!3483 = !DILocation(line: 2541, column: 21, scope: !3478)
!3484 = !DILocation(line: 2542, column: 32, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3477, file: !16, line: 2541, column: 35)
!3486 = !DILocation(line: 2542, column: 21, scope: !3485)
!3487 = !DILocation(line: 2543, column: 21, scope: !3485)
!3488 = !DILocation(line: 2544, column: 38, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3477, file: !16, line: 2544, column: 28)
!3490 = !DILocation(line: 2544, column: 28, scope: !3489)
!3491 = !DILocation(line: 2544, column: 42, scope: !3489)
!3492 = !DILocation(line: 2544, column: 28, scope: !3477)
!3493 = !DILocation(line: 2545, column: 21, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3489, file: !16, line: 2544, column: 51)
!3495 = !DILocation(line: 2540, column: 13, scope: !3496)
!3496 = !DILexicalBlockFile(scope: !3479, file: !16, discriminator: 1)
!3497 = distinct !{!3497, !3475}
!3498 = !DILocation(line: 2550, column: 17, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3421, file: !16, line: 2550, column: 17)
!3500 = !DILocation(line: 2550, column: 21, scope: !3499)
!3501 = !DILocation(line: 2550, column: 28, scope: !3499)
!3502 = !DILocation(line: 2550, column: 26, scope: !3499)
!3503 = !DILocation(line: 2550, column: 17, scope: !3421)
!3504 = !DILocation(line: 2551, column: 28, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3499, file: !16, line: 2550, column: 35)
!3506 = !DILocation(line: 2551, column: 17, scope: !3505)
!3507 = !DILocation(line: 2553, column: 17, scope: !3505)
!3508 = !DILocation(line: 2556, column: 17, scope: !3421)
!3509 = !DILocation(line: 2557, column: 27, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3421, file: !16, line: 2557, column: 17)
!3511 = !DILocation(line: 2557, column: 17, scope: !3510)
!3512 = !DILocation(line: 2557, column: 31, scope: !3510)
!3513 = !DILocation(line: 2557, column: 17, scope: !3421)
!3514 = !DILocation(line: 2558, column: 28, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3510, file: !16, line: 2557, column: 40)
!3516 = !DILocation(line: 2558, column: 17, scope: !3515)
!3517 = !DILocation(line: 2560, column: 17, scope: !3515)
!3518 = !DILocation(line: 2564, column: 27, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3421, file: !16, line: 2564, column: 17)
!3520 = !DILocation(line: 2564, column: 20, scope: !3519)
!3521 = !DILocation(line: 2564, column: 42, scope: !3519)
!3522 = !DILocation(line: 2564, column: 46, scope: !3519)
!3523 = !DILocation(line: 2564, column: 35, scope: !3519)
!3524 = !DILocation(line: 2564, column: 51, scope: !3519)
!3525 = !DILocation(line: 2564, column: 32, scope: !3519)
!3526 = !DILocation(line: 2564, column: 60, scope: !3519)
!3527 = !DILocation(line: 2564, column: 58, scope: !3519)
!3528 = !DILocation(line: 2564, column: 17, scope: !3421)
!3529 = !DILocation(line: 2565, column: 28, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3519, file: !16, line: 2564, column: 70)
!3531 = !DILocation(line: 2565, column: 17, scope: !3530)
!3532 = !DILocation(line: 2566, column: 17, scope: !3530)
!3533 = !DILocation(line: 2570, column: 23, scope: !3421)
!3534 = !DILocation(line: 2570, column: 13, scope: !3421)
!3535 = !DILocation(line: 2571, column: 33, scope: !3421)
!3536 = !DILocation(line: 2571, column: 24, scope: !3421)
!3537 = !DILocation(line: 2571, column: 19, scope: !3421)
!3538 = !DILocation(line: 2573, column: 9, scope: !2813)
!3539 = !DILocalVariable(name: "bytes", scope: !3540, file: !16, line: 2580, type: !225)
!3540 = distinct !DILexicalBlock(scope: !2813, file: !16, line: 2575, column: 9)
!3541 = !DILocation(line: 2580, column: 17, scope: !3540)
!3542 = !DILocation(line: 2583, column: 23, scope: !3540)
!3543 = !DILocation(line: 2583, column: 13, scope: !3540)
!3544 = !DILocation(line: 2584, column: 33, scope: !3540)
!3545 = !DILocation(line: 2584, column: 24, scope: !3540)
!3546 = !DILocation(line: 2584, column: 19, scope: !3540)
!3547 = !DILocation(line: 2587, column: 30, scope: !3540)
!3548 = !DILocation(line: 2587, column: 36, scope: !3540)
!3549 = !DILocation(line: 2587, column: 21, scope: !3540)
!3550 = !DILocation(line: 2587, column: 19, scope: !3540)
!3551 = !DILocation(line: 2588, column: 17, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3540, file: !16, line: 2588, column: 17)
!3553 = !DILocation(line: 2588, column: 23, scope: !3552)
!3554 = !DILocation(line: 2588, column: 28, scope: !3552)
!3555 = !DILocation(line: 2588, column: 31, scope: !3556)
!3556 = !DILexicalBlockFile(scope: !3552, file: !16, discriminator: 1)
!3557 = !DILocation(line: 2588, column: 39, scope: !3556)
!3558 = !DILocation(line: 2588, column: 17, scope: !3556)
!3559 = !DILocation(line: 2589, column: 17, scope: !3552)
!3560 = !DILocation(line: 2591, column: 9, scope: !2813)
!3561 = !DILocalVariable(name: "foundit", scope: !3562, file: !16, line: 2594, type: !225)
!3562 = distinct !DILexicalBlock(scope: !2813, file: !16, line: 2593, column: 9)
!3563 = !DILocation(line: 2594, column: 17, scope: !3562)
!3564 = !DILocalVariable(name: "fbio", scope: !3562, file: !16, line: 2595, type: !305)
!3565 = !DILocation(line: 2595, column: 18, scope: !3562)
!3566 = !DILocation(line: 2595, column: 33, scope: !3562)
!3567 = !DILocation(line: 2595, column: 25, scope: !3568)
!3568 = !DILexicalBlockFile(scope: !3562, file: !16, discriminator: 1)
!3569 = !DILocation(line: 2597, column: 22, scope: !3562)
!3570 = !DILocation(line: 2597, column: 28, scope: !3562)
!3571 = !DILocation(line: 2597, column: 13, scope: !3562)
!3572 = !DILocation(line: 2598, column: 22, scope: !3562)
!3573 = !DILocation(line: 2598, column: 28, scope: !3562)
!3574 = !DILocation(line: 2598, column: 13, scope: !3562)
!3575 = !DILocation(line: 2600, column: 24, scope: !3562)
!3576 = !DILocation(line: 2600, column: 13, scope: !3562)
!3577 = !DILocation(line: 2601, column: 33, scope: !3562)
!3578 = !DILocation(line: 2601, column: 24, scope: !3562)
!3579 = !DILocation(line: 2601, column: 19, scope: !3562)
!3580 = !DILocation(line: 2602, column: 22, scope: !3562)
!3581 = !DILocation(line: 2602, column: 28, scope: !3562)
!3582 = !DILocation(line: 2602, column: 13, scope: !3562)
!3583 = !DILocation(line: 2604, column: 24, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3562, file: !16, line: 2604, column: 17)
!3585 = !DILocation(line: 2604, column: 17, scope: !3584)
!3586 = !DILocation(line: 2604, column: 37, scope: !3584)
!3587 = !DILocation(line: 2604, column: 17, scope: !3562)
!3588 = !DILocation(line: 2606, column: 17, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3584, file: !16, line: 2604, column: 45)
!3590 = distinct !{!3590, !3588}
!3591 = !DILocation(line: 2607, column: 41, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3589, file: !16, line: 2606, column: 20)
!3593 = !DILocation(line: 2607, column: 47, scope: !3592)
!3594 = !DILocation(line: 2607, column: 32, scope: !3592)
!3595 = !DILocation(line: 2607, column: 30, scope: !3592)
!3596 = !DILocation(line: 2608, column: 32, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3592, file: !16, line: 2608, column: 25)
!3598 = !DILocation(line: 2608, column: 25, scope: !3597)
!3599 = !DILocation(line: 2608, column: 25, scope: !3592)
!3600 = !DILocation(line: 2609, column: 33, scope: !3597)
!3601 = !DILocation(line: 2609, column: 25, scope: !3597)
!3602 = !DILocation(line: 2610, column: 17, scope: !3592)
!3603 = !DILocation(line: 2610, column: 26, scope: !3604)
!3604 = !DILexicalBlockFile(scope: !3589, file: !16, discriminator: 1)
!3605 = !DILocation(line: 2610, column: 35, scope: !3604)
!3606 = !DILocation(line: 2610, column: 39, scope: !3604)
!3607 = !DILocation(line: 2610, column: 42, scope: !3608)
!3608 = !DILexicalBlockFile(scope: !3589, file: !16, discriminator: 2)
!3609 = !DILocation(line: 2610, column: 50, scope: !3608)
!3610 = !DILocation(line: 2610, column: 17, scope: !3611)
!3611 = !DILexicalBlockFile(scope: !3592, file: !16, discriminator: 3)
!3612 = !DILocation(line: 2611, column: 13, scope: !3589)
!3613 = !DILocation(line: 2612, column: 33, scope: !3562)
!3614 = !DILocation(line: 2612, column: 24, scope: !3562)
!3615 = !DILocation(line: 2612, column: 19, scope: !3562)
!3616 = !DILocation(line: 2613, column: 21, scope: !3562)
!3617 = !DILocation(line: 2613, column: 13, scope: !3562)
!3618 = !DILocation(line: 2614, column: 22, scope: !3562)
!3619 = !DILocation(line: 2614, column: 13, scope: !3562)
!3620 = !DILocation(line: 2615, column: 18, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3562, file: !16, line: 2615, column: 17)
!3622 = !DILocation(line: 2615, column: 17, scope: !3562)
!3623 = !DILocation(line: 2616, column: 28, scope: !3621)
!3624 = !DILocation(line: 2616, column: 17, scope: !3621)
!3625 = !DILocation(line: 2619, column: 24, scope: !3562)
!3626 = !DILocation(line: 2619, column: 13, scope: !3562)
!3627 = !DILocation(line: 2620, column: 33, scope: !3562)
!3628 = !DILocation(line: 2620, column: 39, scope: !3562)
!3629 = !DILocation(line: 2620, column: 24, scope: !3562)
!3630 = !DILocation(line: 2620, column: 22, scope: !3562)
!3631 = !DILocation(line: 2621, column: 17, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3562, file: !16, line: 2621, column: 17)
!3633 = !DILocation(line: 2621, column: 26, scope: !3632)
!3634 = !DILocation(line: 2621, column: 17, scope: !3562)
!3635 = !DILocation(line: 2622, column: 28, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3632, file: !16, line: 2621, column: 31)
!3637 = !DILocation(line: 2622, column: 17, scope: !3636)
!3638 = !DILocation(line: 2623, column: 17, scope: !3636)
!3639 = !DILocation(line: 2625, column: 18, scope: !3562)
!3640 = !DILocation(line: 2625, column: 13, scope: !3562)
!3641 = !DILocation(line: 2625, column: 28, scope: !3562)
!3642 = !DILocation(line: 2626, column: 24, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3562, file: !16, line: 2626, column: 17)
!3644 = !DILocation(line: 2626, column: 17, scope: !3643)
!3645 = !DILocation(line: 2626, column: 37, scope: !3643)
!3646 = !DILocation(line: 2626, column: 17, scope: !3562)
!3647 = !DILocation(line: 2627, column: 28, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3643, file: !16, line: 2626, column: 45)
!3649 = !DILocation(line: 2627, column: 60, scope: !3648)
!3650 = !DILocation(line: 2627, column: 17, scope: !3648)
!3651 = !DILocation(line: 2628, column: 17, scope: !3648)
!3652 = !DILocation(line: 2631, column: 9, scope: !2813)
!3653 = !DILocalVariable(name: "foundit", scope: !3654, file: !16, line: 2634, type: !225)
!3654 = distinct !DILexicalBlock(scope: !2813, file: !16, line: 2633, column: 9)
!3655 = !DILocation(line: 2634, column: 17, scope: !3654)
!3656 = !DILocalVariable(name: "fbio", scope: !3654, file: !16, line: 2635, type: !305)
!3657 = !DILocation(line: 2635, column: 18, scope: !3654)
!3658 = !DILocation(line: 2635, column: 33, scope: !3654)
!3659 = !DILocation(line: 2635, column: 25, scope: !3660)
!3660 = !DILexicalBlockFile(scope: !3654, file: !16, discriminator: 1)
!3661 = !DILocation(line: 2637, column: 22, scope: !3654)
!3662 = !DILocation(line: 2637, column: 28, scope: !3654)
!3663 = !DILocation(line: 2637, column: 13, scope: !3654)
!3664 = !DILocation(line: 2639, column: 13, scope: !3654)
!3665 = distinct !{!3665, !3664}
!3666 = !DILocation(line: 2640, column: 37, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3654, file: !16, line: 2639, column: 16)
!3668 = !DILocation(line: 2640, column: 43, scope: !3667)
!3669 = !DILocation(line: 2640, column: 28, scope: !3667)
!3670 = !DILocation(line: 2640, column: 26, scope: !3667)
!3671 = !DILocation(line: 2645, column: 21, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3667, file: !16, line: 2645, column: 21)
!3673 = !DILocation(line: 2645, column: 30, scope: !3672)
!3674 = !DILocation(line: 2645, column: 34, scope: !3672)
!3675 = !DILocation(line: 2645, column: 37, scope: !3676)
!3676 = !DILexicalBlockFile(scope: !3672, file: !16, discriminator: 1)
!3677 = !DILocation(line: 2645, column: 45, scope: !3676)
!3678 = !DILocation(line: 2645, column: 21, scope: !3676)
!3679 = !DILocation(line: 2646, column: 36, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3672, file: !16, line: 2645, column: 53)
!3681 = !DILocation(line: 2646, column: 21, scope: !3680)
!3682 = !DILocation(line: 2647, column: 33, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3680, file: !16, line: 2647, column: 25)
!3684 = !DILocation(line: 2647, column: 25, scope: !3683)
!3685 = !DILocation(line: 2647, column: 59, scope: !3683)
!3686 = !DILocation(line: 2647, column: 25, scope: !3680)
!3687 = !DILocation(line: 2648, column: 33, scope: !3683)
!3688 = !DILocation(line: 2648, column: 25, scope: !3683)
!3689 = !DILocation(line: 2649, column: 17, scope: !3680)
!3690 = !DILocation(line: 2650, column: 13, scope: !3667)
!3691 = !DILocation(line: 2650, column: 22, scope: !3660)
!3692 = !DILocation(line: 2650, column: 31, scope: !3660)
!3693 = !DILocation(line: 2650, column: 35, scope: !3660)
!3694 = !DILocation(line: 2650, column: 38, scope: !3695)
!3695 = !DILexicalBlockFile(scope: !3654, file: !16, discriminator: 2)
!3696 = !DILocation(line: 2650, column: 46, scope: !3695)
!3697 = !DILocation(line: 2650, column: 13, scope: !3698)
!3698 = !DILexicalBlockFile(scope: !3667, file: !16, discriminator: 3)
!3699 = !DILocation(line: 2651, column: 33, scope: !3654)
!3700 = !DILocation(line: 2651, column: 24, scope: !3654)
!3701 = !DILocation(line: 2651, column: 19, scope: !3654)
!3702 = !DILocation(line: 2652, column: 21, scope: !3654)
!3703 = !DILocation(line: 2652, column: 13, scope: !3654)
!3704 = !DILocation(line: 2653, column: 22, scope: !3654)
!3705 = !DILocation(line: 2653, column: 13, scope: !3654)
!3706 = !DILocation(line: 2654, column: 18, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3654, file: !16, line: 2654, column: 17)
!3708 = !DILocation(line: 2654, column: 17, scope: !3654)
!3709 = !DILocation(line: 2655, column: 28, scope: !3707)
!3710 = !DILocation(line: 2655, column: 17, scope: !3707)
!3711 = !DILocation(line: 2658, column: 24, scope: !3654)
!3712 = !DILocation(line: 2658, column: 13, scope: !3654)
!3713 = !DILocation(line: 2659, column: 33, scope: !3654)
!3714 = !DILocation(line: 2659, column: 39, scope: !3654)
!3715 = !DILocation(line: 2659, column: 24, scope: !3654)
!3716 = !DILocation(line: 2659, column: 22, scope: !3654)
!3717 = !DILocation(line: 2660, column: 17, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3654, file: !16, line: 2660, column: 17)
!3719 = !DILocation(line: 2660, column: 26, scope: !3718)
!3720 = !DILocation(line: 2660, column: 17, scope: !3654)
!3721 = !DILocation(line: 2661, column: 28, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3718, file: !16, line: 2660, column: 31)
!3723 = !DILocation(line: 2661, column: 17, scope: !3722)
!3724 = !DILocation(line: 2662, column: 17, scope: !3722)
!3725 = !DILocation(line: 2664, column: 18, scope: !3654)
!3726 = !DILocation(line: 2664, column: 13, scope: !3654)
!3727 = !DILocation(line: 2664, column: 28, scope: !3654)
!3728 = !DILocation(line: 2665, column: 17, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3654, file: !16, line: 2665, column: 17)
!3730 = !DILocation(line: 2665, column: 26, scope: !3729)
!3731 = !DILocation(line: 2665, column: 17, scope: !3654)
!3732 = !DILocation(line: 2666, column: 28, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3729, file: !16, line: 2665, column: 31)
!3734 = !DILocation(line: 2666, column: 60, scope: !3733)
!3735 = !DILocation(line: 2666, column: 17, scope: !3733)
!3736 = !DILocation(line: 2667, column: 17, scope: !3733)
!3737 = !DILocation(line: 2673, column: 21, scope: !3654)
!3738 = !DILocation(line: 2673, column: 27, scope: !3654)
!3739 = !DILocation(line: 2673, column: 13, scope: !3654)
!3740 = !DILocation(line: 2674, column: 28, scope: !3654)
!3741 = !DILocation(line: 2674, column: 13, scope: !3654)
!3742 = !DILocation(line: 2675, column: 25, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3654, file: !16, line: 2675, column: 17)
!3744 = !DILocation(line: 2675, column: 17, scope: !3743)
!3745 = !DILocation(line: 2675, column: 40, scope: !3743)
!3746 = !DILocation(line: 2675, column: 17, scope: !3654)
!3747 = !DILocation(line: 2676, column: 28, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3743, file: !16, line: 2675, column: 46)
!3749 = !DILocation(line: 2676, column: 67, scope: !3748)
!3750 = !DILocation(line: 2676, column: 17, scope: !3748)
!3751 = !DILocation(line: 2677, column: 17, scope: !3748)
!3752 = !DILocation(line: 2680, column: 9, scope: !2813)
!3753 = !DILocalVariable(name: "errline", scope: !3754, file: !16, line: 2689, type: !277)
!3754 = distinct !DILexicalBlock(scope: !2813, file: !16, line: 2682, column: 9)
!3755 = !DILocation(line: 2689, column: 18, scope: !3754)
!3756 = !DILocalVariable(name: "genstr", scope: !3754, file: !16, line: 2690, type: !227)
!3757 = !DILocation(line: 2690, column: 19, scope: !3754)
!3758 = !DILocalVariable(name: "result", scope: !3754, file: !16, line: 2691, type: !225)
!3759 = !DILocation(line: 2691, column: 17, scope: !3754)
!3760 = !DILocalVariable(name: "atyp", scope: !3754, file: !16, line: 2692, type: !3761)
!3761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3762, size: 64, align: 64)
!3762 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_TYPE", file: !3763, line: 473, baseType: !3764)
!3763 = !DIFile(filename: "include/openssl/asn1.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!3764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asn1_type_st", file: !3763, line: 444, size: 128, align: 64, elements: !3765)
!3765 = !{!3766, !3767}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3764, file: !3763, line: 445, baseType: !225, size: 32, align: 32)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3764, file: !3763, line: 472, baseType: !3768, size: 64, align: 64, offset: 64)
!3768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3764, file: !3763, line: 446, size: 64, align: 64, elements: !3769)
!3769 = !{!3770, !3771, !3773, !3782, !3786, !3789, !3792, !3795, !3798, !3801, !3804, !3807, !3810, !3813, !3816, !3819, !3822, !3825, !3828, !3829, !3830}
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3768, file: !3763, line: 447, baseType: !227, size: 64, align: 64)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "boolean", scope: !3768, file: !3763, line: 448, baseType: !3772, size: 32, align: 32)
!3772 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_BOOLEAN", file: !307, line: 56, baseType: !225)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "asn1_string", scope: !3768, file: !3763, line: 449, baseType: !3774, size: 64, align: 64)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64, align: 64)
!3775 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_STRING", file: !307, line: 55, baseType: !3776)
!3776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asn1_string_st", file: !3763, line: 146, size: 192, align: 64, elements: !3777)
!3777 = !{!3778, !3779, !3780, !3781}
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3776, file: !3763, line: 147, baseType: !225, size: 32, align: 32)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3776, file: !3763, line: 148, baseType: !225, size: 32, align: 32, offset: 32)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3776, file: !3763, line: 149, baseType: !299, size: 64, align: 64, offset: 64)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3776, file: !3763, line: 155, baseType: !277, size: 64, align: 64, offset: 128)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3768, file: !3763, line: 450, baseType: !3783, size: 64, align: 64)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64, align: 64)
!3784 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_OBJECT", file: !307, line: 60, baseType: !3785)
!3785 = !DICompositeType(tag: DW_TAG_structure_type, name: "asn1_object_st", file: !307, line: 60, flags: DIFlagFwdDecl)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !3768, file: !3763, line: 451, baseType: !3787, size: 64, align: 64)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64, align: 64)
!3788 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_INTEGER", file: !307, line: 40, baseType: !3776)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "enumerated", scope: !3768, file: !3763, line: 452, baseType: !3790, size: 64, align: 64)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64, align: 64)
!3791 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_ENUMERATED", file: !307, line: 41, baseType: !3776)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "bit_string", scope: !3768, file: !3763, line: 453, baseType: !3793, size: 64, align: 64)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 64, align: 64)
!3794 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_BIT_STRING", file: !307, line: 42, baseType: !3776)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "octet_string", scope: !3768, file: !3763, line: 454, baseType: !3796, size: 64, align: 64)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64, align: 64)
!3797 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_OCTET_STRING", file: !307, line: 43, baseType: !3776)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "printablestring", scope: !3768, file: !3763, line: 455, baseType: !3799, size: 64, align: 64)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64, align: 64)
!3800 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_PRINTABLESTRING", file: !307, line: 44, baseType: !3776)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "t61string", scope: !3768, file: !3763, line: 456, baseType: !3802, size: 64, align: 64)
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64, align: 64)
!3803 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_T61STRING", file: !307, line: 45, baseType: !3776)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "ia5string", scope: !3768, file: !3763, line: 457, baseType: !3805, size: 64, align: 64)
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3806, size: 64, align: 64)
!3806 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_IA5STRING", file: !307, line: 46, baseType: !3776)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "generalstring", scope: !3768, file: !3763, line: 458, baseType: !3808, size: 64, align: 64)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64, align: 64)
!3809 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_GENERALSTRING", file: !307, line: 47, baseType: !3776)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "bmpstring", scope: !3768, file: !3763, line: 459, baseType: !3811, size: 64, align: 64)
!3811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3812, size: 64, align: 64)
!3812 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_BMPSTRING", file: !307, line: 49, baseType: !3776)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "universalstring", scope: !3768, file: !3763, line: 460, baseType: !3814, size: 64, align: 64)
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 64, align: 64)
!3815 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_UNIVERSALSTRING", file: !307, line: 48, baseType: !3776)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "utctime", scope: !3768, file: !3763, line: 461, baseType: !3817, size: 64, align: 64)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64, align: 64)
!3818 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_UTCTIME", file: !307, line: 50, baseType: !3776)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "generalizedtime", scope: !3768, file: !3763, line: 462, baseType: !3820, size: 64, align: 64)
!3820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3821, size: 64, align: 64)
!3821 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_GENERALIZEDTIME", file: !307, line: 52, baseType: !3776)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "visiblestring", scope: !3768, file: !3763, line: 463, baseType: !3823, size: 64, align: 64)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64, align: 64)
!3824 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_VISIBLESTRING", file: !307, line: 53, baseType: !3776)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "utf8string", scope: !3768, file: !3763, line: 464, baseType: !3826, size: 64, align: 64)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64, align: 64)
!3827 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_UTF8STRING", file: !307, line: 54, baseType: !3776)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !3768, file: !3763, line: 469, baseType: !3774, size: 64, align: 64)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !3768, file: !3763, line: 470, baseType: !3774, size: 64, align: 64)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "asn1_value", scope: !3768, file: !3763, line: 471, baseType: !3831, size: 64, align: 64)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64, align: 64)
!3832 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASN1_VALUE", file: !3763, line: 213, baseType: !3833)
!3833 = !DICompositeType(tag: DW_TAG_structure_type, name: "ASN1_VALUE_st", file: !3763, line: 213, flags: DIFlagFwdDecl)
!3834 = !DILocation(line: 2692, column: 24, scope: !3754)
!3835 = !DILocalVariable(name: "ldapbio", scope: !3754, file: !16, line: 2693, type: !305)
!3836 = !DILocation(line: 2693, column: 18, scope: !3754)
!3837 = !DILocation(line: 2693, column: 36, scope: !3754)
!3838 = !DILocation(line: 2693, column: 28, scope: !3839)
!3839 = !DILexicalBlockFile(scope: !3754, file: !16, discriminator: 1)
!3840 = !DILocalVariable(name: "cnf", scope: !3754, file: !16, line: 2694, type: !3841)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64, align: 64)
!3842 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONF", file: !307, line: 144, baseType: !3843)
!3843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conf_st", file: !3844, line: 103, size: 192, align: 64, elements: !3845)
!3844 = !DIFile(filename: "include/openssl/conf.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!3845 = !{!3846, !3882, !3883}
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "meth", scope: !3843, file: !3844, line: 104, baseType: !3847, size: 64, align: 64)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64, align: 64)
!3848 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONF_METHOD", file: !3844, line: 35, baseType: !3849)
!3849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conf_method_st", file: !3844, line: 37, size: 640, align: 64, elements: !3850)
!3850 = !{!3851, !3852, !3856, !3860, !3861, !3862, !3867, !3873, !3877, !3878}
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3849, file: !3844, line: 38, baseType: !346, size: 64, align: 64)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !3849, file: !3844, line: 39, baseType: !3853, size: 64, align: 64, offset: 64)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64, align: 64)
!3854 = !DISubroutineType(types: !3855)
!3855 = !{!3841, !3847}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3849, file: !3844, line: 40, baseType: !3857, size: 64, align: 64, offset: 128)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64, align: 64)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{!225, !3841}
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3849, file: !3844, line: 41, baseType: !3857, size: 64, align: 64, offset: 192)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_data", scope: !3849, file: !3844, line: 42, baseType: !3857, size: 64, align: 64, offset: 256)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "load_bio", scope: !3849, file: !3844, line: 43, baseType: !3863, size: 64, align: 64, offset: 320)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64, align: 64)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!225, !3841, !305, !3866}
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64, align: 64)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !3849, file: !3844, line: 44, baseType: !3868, size: 64, align: 64, offset: 384)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64, align: 64)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{!225, !3871, !305}
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64, align: 64)
!3872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3842)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "is_number", scope: !3849, file: !3844, line: 45, baseType: !3874, size: 64, align: 64, offset: 448)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64, align: 64)
!3875 = !DISubroutineType(types: !3876)
!3876 = !{!225, !3871, !228}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "to_int", scope: !3849, file: !3844, line: 46, baseType: !3874, size: 64, align: 64, offset: 512)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !3849, file: !3844, line: 47, baseType: !3879, size: 64, align: 64, offset: 576)
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3880, size: 64, align: 64)
!3880 = !DISubroutineType(types: !3881)
!3881 = !{!225, !3841, !346, !3866}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "meth_data", scope: !3843, file: !3844, line: 105, baseType: !268, size: 64, align: 64, offset: 64)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3843, file: !3844, line: 106, baseType: !3884, size: 64, align: 64, offset: 128)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64, align: 64)
!3885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lhash_st_CONF_VALUE", file: !3844, line: 31, size: 64, align: 64, elements: !3886)
!3886 = !{!3887}
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !3885, file: !3844, line: 31, baseType: !3888, size: 64, align: 64)
!3888 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "lh_CONF_VALUE_dummy", file: !3844, line: 31, size: 64, align: 64, elements: !3889)
!3889 = !{!3890, !3891, !3892}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "d1", scope: !3888, file: !3844, line: 31, baseType: !268, size: 64, align: 64)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "d2", scope: !3888, file: !3844, line: 31, baseType: !383, size: 64, align: 64)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "d3", scope: !3888, file: !3844, line: 31, baseType: !225, size: 32, align: 32)
!3893 = !DILocation(line: 2694, column: 19, scope: !3754)
!3894 = !DILocation(line: 2694, column: 25, scope: !3754)
!3895 = !DILocation(line: 2696, column: 17, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3754, file: !16, line: 2696, column: 17)
!3897 = !DILocation(line: 2696, column: 21, scope: !3896)
!3898 = !DILocation(line: 2696, column: 17, scope: !3754)
!3899 = !DILocation(line: 2697, column: 26, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3896, file: !16, line: 2696, column: 29)
!3901 = !DILocation(line: 2697, column: 17, scope: !3900)
!3902 = !DILocation(line: 2698, column: 17, scope: !3900)
!3903 = !DILocation(line: 2700, column: 22, scope: !3754)
!3904 = !DILocation(line: 2700, column: 13, scope: !3754)
!3905 = !DILocation(line: 2701, column: 32, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3754, file: !16, line: 2701, column: 17)
!3907 = !DILocation(line: 2701, column: 37, scope: !3906)
!3908 = !DILocation(line: 2701, column: 17, scope: !3906)
!3909 = !DILocation(line: 2701, column: 56, scope: !3906)
!3910 = !DILocation(line: 2701, column: 17, scope: !3754)
!3911 = !DILocation(line: 2702, column: 26, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3906, file: !16, line: 2701, column: 62)
!3913 = !DILocation(line: 2702, column: 17, scope: !3912)
!3914 = !DILocation(line: 2703, column: 28, scope: !3912)
!3915 = !DILocation(line: 2703, column: 17, scope: !3912)
!3916 = !DILocation(line: 2704, column: 21, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3912, file: !16, line: 2704, column: 21)
!3918 = !DILocation(line: 2704, column: 29, scope: !3917)
!3919 = !DILocation(line: 2704, column: 21, scope: !3912)
!3920 = !DILocation(line: 2705, column: 32, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3917, file: !16, line: 2704, column: 35)
!3922 = !DILocation(line: 2705, column: 21, scope: !3921)
!3923 = !DILocation(line: 2706, column: 21, scope: !3921)
!3924 = !DILocation(line: 2708, column: 32, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3917, file: !16, line: 2707, column: 24)
!3926 = !DILocation(line: 2708, column: 64, scope: !3925)
!3927 = !DILocation(line: 2708, column: 21, scope: !3925)
!3928 = !DILocation(line: 2709, column: 21, scope: !3925)
!3929 = !DILocation(line: 2712, column: 22, scope: !3754)
!3930 = !DILocation(line: 2712, column: 13, scope: !3754)
!3931 = !DILocation(line: 2713, column: 39, scope: !3754)
!3932 = !DILocation(line: 2713, column: 22, scope: !3754)
!3933 = !DILocation(line: 2713, column: 20, scope: !3754)
!3934 = !DILocation(line: 2714, column: 17, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3754, file: !16, line: 2714, column: 17)
!3936 = !DILocation(line: 2714, column: 24, scope: !3935)
!3937 = !DILocation(line: 2714, column: 17, scope: !3754)
!3938 = !DILocation(line: 2715, column: 28, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3935, file: !16, line: 2714, column: 32)
!3940 = !DILocation(line: 2715, column: 17, scope: !3939)
!3941 = !DILocation(line: 2716, column: 28, scope: !3939)
!3942 = !DILocation(line: 2716, column: 17, scope: !3939)
!3943 = !DILocation(line: 2717, column: 17, scope: !3939)
!3944 = !DILocation(line: 2719, column: 40, scope: !3754)
!3945 = !DILocation(line: 2719, column: 48, scope: !3754)
!3946 = !DILocation(line: 2719, column: 20, scope: !3754)
!3947 = !DILocation(line: 2719, column: 18, scope: !3754)
!3948 = !DILocation(line: 2720, column: 17, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3754, file: !16, line: 2720, column: 17)
!3950 = !DILocation(line: 2720, column: 22, scope: !3949)
!3951 = !DILocation(line: 2720, column: 17, scope: !3754)
!3952 = !DILocation(line: 2721, column: 28, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3949, file: !16, line: 2720, column: 30)
!3954 = !DILocation(line: 2721, column: 17, scope: !3953)
!3955 = !DILocation(line: 2722, column: 28, scope: !3953)
!3956 = !DILocation(line: 2722, column: 17, scope: !3953)
!3957 = !DILocation(line: 2723, column: 17, scope: !3953)
!3958 = !DILocation(line: 2725, column: 24, scope: !3754)
!3959 = !DILocation(line: 2725, column: 13, scope: !3754)
!3960 = !DILocation(line: 2728, column: 23, scope: !3754)
!3961 = !DILocation(line: 2728, column: 29, scope: !3754)
!3962 = !DILocation(line: 2728, column: 35, scope: !3754)
!3963 = !DILocation(line: 2728, column: 41, scope: !3754)
!3964 = !DILocation(line: 2728, column: 51, scope: !3754)
!3965 = !DILocation(line: 2729, column: 23, scope: !3754)
!3966 = !DILocation(line: 2729, column: 29, scope: !3754)
!3967 = !DILocation(line: 2729, column: 35, scope: !3754)
!3968 = !DILocation(line: 2729, column: 45, scope: !3754)
!3969 = !DILocation(line: 2728, column: 13, scope: !3754)
!3970 = !DILocation(line: 2730, column: 33, scope: !3754)
!3971 = !DILocation(line: 2730, column: 24, scope: !3754)
!3972 = !DILocation(line: 2730, column: 19, scope: !3754)
!3973 = !DILocation(line: 2731, column: 28, scope: !3754)
!3974 = !DILocation(line: 2731, column: 13, scope: !3754)
!3975 = !DILocation(line: 2733, column: 33, scope: !3754)
!3976 = !DILocation(line: 2733, column: 39, scope: !3754)
!3977 = !DILocation(line: 2733, column: 24, scope: !3754)
!3978 = !DILocation(line: 2733, column: 22, scope: !3754)
!3979 = !DILocation(line: 2734, column: 17, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3754, file: !16, line: 2734, column: 17)
!3981 = !DILocation(line: 2734, column: 26, scope: !3980)
!3982 = !DILocation(line: 2734, column: 17, scope: !3754)
!3983 = !DILocation(line: 2735, column: 28, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3980, file: !16, line: 2734, column: 31)
!3985 = !DILocation(line: 2735, column: 17, scope: !3984)
!3986 = !DILocation(line: 2736, column: 17, scope: !3984)
!3987 = !DILocation(line: 2738, column: 50, scope: !3754)
!3988 = !DILocation(line: 2738, column: 56, scope: !3754)
!3989 = !DILocation(line: 2738, column: 22, scope: !3754)
!3990 = !DILocation(line: 2738, column: 20, scope: !3754)
!3991 = !DILocation(line: 2739, column: 17, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3754, file: !16, line: 2739, column: 17)
!3993 = !DILocation(line: 2739, column: 24, scope: !3992)
!3994 = !DILocation(line: 2739, column: 17, scope: !3754)
!3995 = !DILocation(line: 2740, column: 28, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3992, file: !16, line: 2739, column: 29)
!3997 = !DILocation(line: 2740, column: 17, scope: !3996)
!3998 = !DILocation(line: 2741, column: 17, scope: !3996)
!3999 = !DILocation(line: 2742, column: 24, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3992, file: !16, line: 2742, column: 24)
!4001 = !DILocation(line: 2742, column: 31, scope: !4000)
!4002 = !DILocation(line: 2742, column: 24, scope: !3992)
!4003 = !DILocation(line: 2743, column: 28, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !4000, file: !16, line: 2742, column: 36)
!4005 = !DILocation(line: 2744, column: 28, scope: !4004)
!4006 = !DILocation(line: 2743, column: 17, scope: !4004)
!4007 = !DILocation(line: 2745, column: 17, scope: !4004)
!4008 = !DILocation(line: 2747, column: 22, scope: !3754)
!4009 = !DILocation(line: 2749, column: 9, scope: !2813)
!4010 = !DILocation(line: 2752, column: 9, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2752, column: 9)
!4012 = !DILocation(line: 2752, column: 25, scope: !4011)
!4013 = !DILocation(line: 2753, column: 12, scope: !4011)
!4014 = !DILocation(line: 2753, column: 33, scope: !4015)
!4015 = !DILexicalBlockFile(scope: !4011, file: !16, discriminator: 1)
!4016 = !DILocation(line: 2753, column: 17, scope: !4015)
!4017 = !DILocation(line: 2753, column: 38, scope: !4015)
!4018 = !DILocation(line: 2754, column: 17, scope: !4011)
!4019 = !DILocation(line: 2754, column: 67, scope: !4015)
!4020 = !DILocation(line: 2754, column: 51, scope: !4015)
!4021 = !DILocation(line: 2754, column: 20, scope: !4022)
!4022 = !DILexicalBlockFile(scope: !4015, file: !16, discriminator: 2)
!4023 = !DILocation(line: 2754, column: 73, scope: !4015)
!4024 = !DILocation(line: 2755, column: 17, scope: !4011)
!4025 = !DILocation(line: 2755, column: 21, scope: !4015)
!4026 = !DILocation(line: 2755, column: 29, scope: !4015)
!4027 = !DILocation(line: 2756, column: 20, scope: !4011)
!4028 = !DILocation(line: 2756, column: 54, scope: !4015)
!4029 = !DILocation(line: 2756, column: 23, scope: !4015)
!4030 = !DILocation(line: 2756, column: 63, scope: !4015)
!4031 = !DILocation(line: 2752, column: 9, scope: !819)
!4032 = !DILocalVariable(name: "edfile", scope: !4033, file: !16, line: 2757, type: !305)
!4033 = distinct !DILexicalBlock(scope: !4011, file: !16, line: 2756, column: 70)
!4034 = !DILocation(line: 2757, column: 14, scope: !4033)
!4035 = !DILocation(line: 2757, column: 36, scope: !4033)
!4036 = !DILocation(line: 2757, column: 23, scope: !4033)
!4037 = !DILocalVariable(name: "readbytes", scope: !4033, file: !16, line: 2758, type: !381)
!4038 = !DILocation(line: 2758, column: 16, scope: !4033)
!4039 = !DILocalVariable(name: "writtenbytes", scope: !4033, file: !16, line: 2758, type: !381)
!4040 = !DILocation(line: 2758, column: 27, scope: !4033)
!4041 = !DILocalVariable(name: "finish", scope: !4033, file: !16, line: 2759, type: !225)
!4042 = !DILocation(line: 2759, column: 13, scope: !4033)
!4043 = !DILocation(line: 2761, column: 13, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4033, file: !16, line: 2761, column: 13)
!4045 = !DILocation(line: 2761, column: 20, scope: !4044)
!4046 = !DILocation(line: 2761, column: 13, scope: !4033)
!4047 = !DILocation(line: 2762, column: 24, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4044, file: !16, line: 2761, column: 28)
!4049 = !DILocation(line: 2762, column: 13, scope: !4048)
!4050 = !DILocation(line: 2763, column: 13, scope: !4048)
!4051 = !DILocation(line: 2766, column: 9, scope: !4033)
!4052 = !DILocation(line: 2766, column: 17, scope: !4053)
!4053 = !DILexicalBlockFile(scope: !4033, file: !16, discriminator: 1)
!4054 = !DILocation(line: 2766, column: 16, scope: !4053)
!4055 = !DILocation(line: 2766, column: 9, scope: !4053)
!4056 = !DILocation(line: 2767, column: 30, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !16, line: 2767, column: 17)
!4058 = distinct !DILexicalBlock(scope: !4033, file: !16, line: 2766, column: 25)
!4059 = !DILocation(line: 2767, column: 38, scope: !4057)
!4060 = !DILocation(line: 2767, column: 18, scope: !4057)
!4061 = !DILocation(line: 2767, column: 17, scope: !4058)
!4062 = !DILocation(line: 2768, column: 24, scope: !4057)
!4063 = !DILocation(line: 2768, column: 17, scope: !4057)
!4064 = !DILocation(line: 2770, column: 13, scope: !4058)
!4065 = !DILocation(line: 2770, column: 42, scope: !4066)
!4066 = !DILexicalBlockFile(scope: !4058, file: !16, discriminator: 1)
!4067 = !DILocation(line: 2770, column: 47, scope: !4066)
!4068 = !DILocation(line: 2770, column: 53, scope: !4066)
!4069 = !DILocation(line: 2770, column: 21, scope: !4066)
!4070 = !DILocation(line: 2770, column: 20, scope: !4066)
!4071 = !DILocation(line: 2770, column: 13, scope: !4066)
!4072 = !DILocation(line: 2771, column: 39, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4058, file: !16, line: 2770, column: 80)
!4074 = !DILocation(line: 2771, column: 25, scope: !4073)
!4075 = !DILocation(line: 2771, column: 17, scope: !4073)
!4076 = !DILocation(line: 2776, column: 21, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4073, file: !16, line: 2771, column: 48)
!4078 = distinct !{!4078, !4064}
!4079 = !DILocation(line: 2778, column: 32, scope: !4077)
!4080 = !DILocation(line: 2778, column: 21, scope: !4077)
!4081 = !DILocation(line: 2779, column: 30, scope: !4077)
!4082 = !DILocation(line: 2779, column: 21, scope: !4077)
!4083 = !DILocation(line: 2780, column: 38, scope: !4077)
!4084 = !DILocation(line: 2780, column: 21, scope: !4077)
!4085 = !DILocation(line: 2781, column: 21, scope: !4077)
!4086 = !DILocation(line: 2766, column: 9, scope: !4087)
!4087 = !DILexicalBlockFile(scope: !4033, file: !16, discriminator: 2)
!4088 = distinct !{!4088, !4051}
!4089 = !DILocation(line: 2786, column: 18, scope: !4033)
!4090 = !DILocation(line: 2786, column: 9, scope: !4033)
!4091 = !DILocation(line: 2787, column: 5, scope: !4033)
!4092 = !DILocation(line: 2789, column: 5, scope: !222)
!4093 = !DILocation(line: 2790, column: 8, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !16, line: 2789, column: 14)
!4095 = distinct !DILexicalBlock(scope: !4096, file: !16, line: 2789, column: 5)
!4096 = distinct !DILexicalBlock(scope: !222, file: !16, line: 2789, column: 5)
!4097 = distinct !{!4097, !4093}
!4098 = !DILocalVariable(name: "__d0", scope: !4099, file: !16, line: 2790, type: !225)
!4099 = distinct !DILexicalBlock(scope: !4094, file: !16, line: 2790, column: 11)
!4100 = !DILocation(line: 2790, column: 17, scope: !4099)
!4101 = !DILocalVariable(name: "__d1", scope: !4099, file: !16, line: 2790, type: !225)
!4102 = !DILocation(line: 2790, column: 23, scope: !4099)
!4103 = !DILocation(line: 2790, column: 11, scope: !4104)
!4104 = !DILexicalBlockFile(scope: !4099, file: !16, discriminator: 1)
!4105 = !DILocation(line: 2790, column: 160, scope: !4104)
!4106 = !DILocation(line: 2790, column: 29, scope: !4104)
!4107 = !{i32 1000293}
!4108 = !DILocation(line: 2790, column: 40, scope: !4104)
!4109 = !DILocation(line: 2791, column: 8, scope: !4094)
!4110 = distinct !{!4110, !4109}
!4111 = !DILocalVariable(name: "__d0", scope: !4112, file: !16, line: 2791, type: !225)
!4112 = distinct !DILexicalBlock(scope: !4094, file: !16, line: 2791, column: 11)
!4113 = !DILocation(line: 2791, column: 17, scope: !4112)
!4114 = !DILocalVariable(name: "__d1", scope: !4112, file: !16, line: 2791, type: !225)
!4115 = !DILocation(line: 2791, column: 23, scope: !4112)
!4116 = !DILocation(line: 2791, column: 11, scope: !4117)
!4117 = !DILexicalBlockFile(scope: !4112, file: !16, discriminator: 1)
!4118 = !DILocation(line: 2791, column: 160, scope: !4117)
!4119 = !DILocation(line: 2791, column: 29, scope: !4117)
!4120 = !{i32 1000665}
!4121 = !DILocation(line: 2791, column: 40, scope: !4117)
!4122 = !DILocation(line: 2793, column: 25, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4094, file: !16, line: 2793, column: 13)
!4124 = !DILocation(line: 2793, column: 13, scope: !4123)
!4125 = !DILocation(line: 2793, column: 30, scope: !4123)
!4126 = !DILocation(line: 2793, column: 42, scope: !4127)
!4127 = !DILexicalBlockFile(scope: !4123, file: !16, discriminator: 1)
!4128 = !DILocation(line: 2793, column: 52, scope: !4127)
!4129 = !DILocation(line: 2793, column: 33, scope: !4127)
!4130 = !DILocation(line: 2793, column: 13, scope: !4127)
!4131 = !DILocation(line: 2794, column: 22, scope: !4123)
!4132 = !DILocation(line: 2794, column: 13, scope: !4123)
!4133 = !DILocation(line: 2796, column: 22, scope: !4123)
!4134 = !DILocation(line: 2798, column: 35, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4094, file: !16, line: 2798, column: 13)
!4136 = !DILocation(line: 2798, column: 14, scope: !4135)
!4137 = !DILocation(line: 2798, column: 40, scope: !4135)
!4138 = !DILocation(line: 2798, column: 53, scope: !4139)
!4139 = !DILexicalBlockFile(scope: !4135, file: !16, discriminator: 1)
!4140 = !DILocation(line: 2798, column: 43, scope: !4139)
!4141 = !DILocation(line: 2798, column: 44, scope: !4139)
!4142 = !DILocation(line: 2799, column: 17, scope: !4135)
!4143 = !DILocation(line: 2799, column: 44, scope: !4139)
!4144 = !DILocation(line: 2799, column: 20, scope: !4139)
!4145 = !DILocation(line: 2799, column: 49, scope: !4139)
!4146 = !DILocation(line: 2798, column: 13, scope: !4147)
!4147 = !DILexicalBlockFile(scope: !4094, file: !16, discriminator: 2)
!4148 = !DILocation(line: 2800, column: 21, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4135, file: !16, line: 2799, column: 56)
!4150 = !DILocation(line: 2801, column: 20, scope: !4149)
!4151 = !DILocation(line: 2802, column: 9, scope: !4149)
!4152 = !DILocation(line: 2803, column: 20, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4135, file: !16, line: 2802, column: 16)
!4154 = !DILocation(line: 2804, column: 17, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4153, file: !16, line: 2804, column: 17)
!4156 = !DILocation(line: 2804, column: 17, scope: !4153)
!4157 = !DILocation(line: 2805, column: 25, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4155, file: !16, line: 2804, column: 26)
!4159 = !DILocation(line: 2807, column: 21, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4158, file: !16, line: 2807, column: 21)
!4161 = !DILocation(line: 2807, column: 21, scope: !4158)
!4162 = !DILocation(line: 2808, column: 30, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4160, file: !16, line: 2807, column: 30)
!4164 = !DILocation(line: 2808, column: 21, scope: !4163)
!4165 = !DILocation(line: 2809, column: 39, scope: !4163)
!4166 = !DILocation(line: 2809, column: 21, scope: !4163)
!4167 = !DILocation(line: 2810, column: 17, scope: !4163)
!4168 = !DILocation(line: 2812, column: 29, scope: !4158)
!4169 = !DILocation(line: 2812, column: 40, scope: !4158)
!4170 = !DILocation(line: 2812, column: 45, scope: !4158)
!4171 = !DILocation(line: 2812, column: 17, scope: !4158)
!4172 = !DILocation(line: 2813, column: 21, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4158, file: !16, line: 2813, column: 21)
!4174 = !DILocation(line: 2813, column: 30, scope: !4173)
!4175 = !DILocation(line: 2813, column: 21, scope: !4158)
!4176 = !DILocation(line: 2814, column: 29, scope: !4173)
!4177 = !DILocation(line: 2814, column: 21, scope: !4173)
!4178 = !DILocation(line: 2816, column: 21, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4158, file: !16, line: 2816, column: 21)
!4180 = !DILocation(line: 2816, column: 21, scope: !4158)
!4181 = !DILocation(line: 2817, column: 31, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4179, file: !16, line: 2816, column: 37)
!4183 = !DILocation(line: 2817, column: 40, scope: !4182)
!4184 = !DILocation(line: 2817, column: 46, scope: !4182)
!4185 = !DILocation(line: 2817, column: 21, scope: !4182)
!4186 = !DILocation(line: 2819, column: 26, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4182, file: !16, line: 2819, column: 25)
!4188 = !DILocation(line: 2819, column: 25, scope: !4182)
!4189 = !DILocation(line: 2820, column: 40, scope: !4187)
!4190 = !DILocation(line: 2820, column: 25, scope: !4187)
!4191 = !DILocation(line: 2821, column: 17, scope: !4182)
!4192 = !DILocation(line: 2823, column: 21, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4158, file: !16, line: 2823, column: 21)
!4194 = !DILocation(line: 2823, column: 21, scope: !4158)
!4195 = !DILocation(line: 2824, column: 30, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4193, file: !16, line: 2823, column: 32)
!4197 = !DILocation(line: 2825, column: 32, scope: !4196)
!4198 = !DILocation(line: 2825, column: 21, scope: !4196)
!4199 = !DILocation(line: 2827, column: 37, scope: !4196)
!4200 = !DILocation(line: 2827, column: 21, scope: !4196)
!4201 = !DILocation(line: 2828, column: 43, scope: !4196)
!4202 = !DILocation(line: 2828, column: 21, scope: !4196)
!4203 = !DILocation(line: 2829, column: 48, scope: !4196)
!4204 = !DILocation(line: 2829, column: 37, scope: !4196)
!4205 = !DILocation(line: 2829, column: 21, scope: !4206)
!4206 = !DILexicalBlockFile(scope: !4196, file: !16, discriminator: 1)
!4207 = !DILocation(line: 2830, column: 21, scope: !4196)
!4208 = !DILocation(line: 2832, column: 13, scope: !4158)
!4209 = !DILocation(line: 2835, column: 23, scope: !4094)
!4210 = !DILocation(line: 2835, column: 32, scope: !4094)
!4211 = !DILocation(line: 2835, column: 51, scope: !4212)
!4212 = !DILexicalBlockFile(scope: !4094, file: !16, discriminator: 1)
!4213 = !DILocation(line: 2835, column: 35, scope: !4212)
!4214 = !DILocation(line: 2835, column: 32, scope: !4212)
!4215 = !DILocation(line: 2835, column: 32, scope: !4147)
!4216 = !DILocation(line: 2835, column: 21, scope: !4147)
!4217 = !DILocation(line: 2837, column: 14, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4094, file: !16, line: 2837, column: 13)
!4219 = !DILocation(line: 2837, column: 13, scope: !4094)
!4220 = !DILocation(line: 2839, column: 17, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4222, file: !16, line: 2839, column: 17)
!4222 = distinct !DILexicalBlock(scope: !4218, file: !16, line: 2837, column: 27)
!4223 = !DILocation(line: 2839, column: 17, scope: !4222)
!4224 = !DILocation(line: 2845, column: 21, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4226, file: !16, line: 2845, column: 21)
!4226 = distinct !DILexicalBlock(scope: !4221, file: !16, line: 2839, column: 25)
!4227 = !DILocation(line: 2845, column: 30, scope: !4225)
!4228 = !DILocation(line: 2845, column: 34, scope: !4229)
!4229 = !DILexicalBlockFile(scope: !4225, file: !16, discriminator: 1)
!4230 = !DILocation(line: 2845, column: 21, scope: !4229)
!4231 = !DILocation(line: 2846, column: 20, scope: !4225)
!4232 = !DILocation(line: 2846, column: 22, scope: !4225)
!4233 = !DILocation(line: 2846, column: 78, scope: !4225)
!4234 = !DILocation(line: 2846, column: 20, scope: !4229)
!4235 = !DILocation(line: 2846, column: 29, scope: !4225)
!4236 = !DILocation(line: 2846, column: 23, scope: !4225)
!4237 = !DILocation(line: 2846, column: 57, scope: !4225)
!4238 = !DILocation(line: 2848, column: 21, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4226, file: !16, line: 2848, column: 21)
!4240 = !DILocation(line: 2848, column: 21, scope: !4226)
!4241 = !DILocation(line: 2849, column: 20, scope: !4239)
!4242 = !DILocation(line: 2849, column: 22, scope: !4239)
!4243 = !DILocation(line: 2849, column: 78, scope: !4239)
!4244 = !DILocation(line: 2849, column: 20, scope: !4245)
!4245 = !DILexicalBlockFile(scope: !4239, file: !16, discriminator: 1)
!4246 = !DILocation(line: 2849, column: 29, scope: !4239)
!4247 = !DILocation(line: 2849, column: 23, scope: !4239)
!4248 = !DILocation(line: 2849, column: 57, scope: !4239)
!4249 = !DILocation(line: 2851, column: 13, scope: !4226)
!4250 = !DILocation(line: 2852, column: 17, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4222, file: !16, line: 2852, column: 17)
!4252 = !DILocation(line: 2852, column: 17, scope: !4222)
!4253 = !DILocation(line: 2853, column: 27, scope: !4251)
!4254 = !DILocation(line: 2853, column: 16, scope: !4251)
!4255 = !DILocation(line: 2853, column: 18, scope: !4251)
!4256 = !DILocation(line: 2853, column: 74, scope: !4251)
!4257 = !DILocation(line: 2853, column: 16, scope: !4258)
!4258 = !DILexicalBlockFile(scope: !4251, file: !16, discriminator: 1)
!4259 = !DILocation(line: 2853, column: 25, scope: !4251)
!4260 = !DILocation(line: 2853, column: 19, scope: !4251)
!4261 = !DILocation(line: 2853, column: 53, scope: !4251)
!4262 = !DILocation(line: 2854, column: 17, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4222, file: !16, line: 2854, column: 17)
!4264 = !DILocation(line: 2854, column: 17, scope: !4222)
!4265 = !DILocation(line: 2855, column: 27, scope: !4263)
!4266 = !DILocation(line: 2855, column: 16, scope: !4263)
!4267 = !DILocation(line: 2855, column: 18, scope: !4263)
!4268 = !DILocation(line: 2855, column: 74, scope: !4263)
!4269 = !DILocation(line: 2855, column: 16, scope: !4270)
!4270 = !DILexicalBlockFile(scope: !4263, file: !16, discriminator: 1)
!4271 = !DILocation(line: 2855, column: 25, scope: !4263)
!4272 = !DILocation(line: 2855, column: 19, scope: !4263)
!4273 = !DILocation(line: 2855, column: 53, scope: !4263)
!4274 = !DILocation(line: 2894, column: 24, scope: !4222)
!4275 = !DILocation(line: 2894, column: 31, scope: !4222)
!4276 = !DILocation(line: 2894, column: 49, scope: !4222)
!4277 = !DILocation(line: 2895, column: 29, scope: !4222)
!4278 = !DILocation(line: 2894, column: 17, scope: !4222)
!4279 = !DILocation(line: 2894, column: 15, scope: !4222)
!4280 = !DILocation(line: 2897, column: 17, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4222, file: !16, line: 2897, column: 17)
!4282 = !DILocation(line: 2897, column: 19, scope: !4281)
!4283 = !DILocation(line: 2897, column: 17, scope: !4222)
!4284 = !DILocation(line: 2898, column: 28, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4281, file: !16, line: 2897, column: 24)
!4286 = !DILocation(line: 2899, column: 29, scope: !4285)
!4287 = !DILocation(line: 2899, column: 28, scope: !4285)
!4288 = !DILocation(line: 2898, column: 17, scope: !4285)
!4289 = !DILocation(line: 2900, column: 17, scope: !4285)
!4290 = !DILocation(line: 2902, column: 9, scope: !4222)
!4291 = !DILocation(line: 2904, column: 25, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4094, file: !16, line: 2904, column: 13)
!4293 = !DILocation(line: 2904, column: 13, scope: !4292)
!4294 = !DILocation(line: 2904, column: 30, scope: !4292)
!4295 = !DILocation(line: 2904, column: 42, scope: !4296)
!4296 = !DILexicalBlockFile(scope: !4292, file: !16, discriminator: 1)
!4297 = !DILocation(line: 2904, column: 33, scope: !4296)
!4298 = !DILocation(line: 2904, column: 34, scope: !4296)
!4299 = !DILocation(line: 2904, column: 13, scope: !4296)
!4300 = !DILocation(line: 2905, column: 24, scope: !4292)
!4301 = !DILocation(line: 2905, column: 13, scope: !4292)
!4302 = !DILocation(line: 2907, column: 14, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4094, file: !16, line: 2907, column: 13)
!4304 = !DILocation(line: 2907, column: 26, scope: !4303)
!4305 = !DILocation(line: 2907, column: 39, scope: !4306)
!4306 = !DILexicalBlockFile(scope: !4303, file: !16, discriminator: 1)
!4307 = !DILocation(line: 2907, column: 28, scope: !4306)
!4308 = !DILocation(line: 2907, column: 30, scope: !4306)
!4309 = !DILocation(line: 2907, column: 31, scope: !4306)
!4310 = !DILocation(line: 2907, column: 28, scope: !4311)
!4311 = !DILexicalBlockFile(scope: !4306, file: !16, discriminator: 2)
!4312 = !DILocation(line: 2907, column: 85, scope: !4306)
!4313 = !DILocation(line: 2907, column: 65, scope: !4306)
!4314 = !DILocation(line: 2907, column: 67, scope: !4306)
!4315 = !DILocation(line: 2907, column: 13, scope: !4306)
!4316 = !DILocation(line: 2908, column: 27, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4303, file: !16, line: 2907, column: 66)
!4318 = !DILocation(line: 2908, column: 39, scope: !4317)
!4319 = !DILocation(line: 2908, column: 34, scope: !4317)
!4320 = !DILocation(line: 2908, column: 65, scope: !4317)
!4321 = !DILocation(line: 2908, column: 17, scope: !4317)
!4322 = !DILocation(line: 2908, column: 15, scope: !4317)
!4323 = !DILocation(line: 2909, column: 35, scope: !4317)
!4324 = !DILocation(line: 2909, column: 40, scope: !4317)
!4325 = !DILocation(line: 2909, column: 21, scope: !4317)
!4326 = !DILocation(line: 2909, column: 13, scope: !4317)
!4327 = !DILocation(line: 2911, column: 29, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4317, file: !16, line: 2909, column: 44)
!4329 = !DILocation(line: 2911, column: 26, scope: !4328)
!4330 = !DILocation(line: 2912, column: 29, scope: !4328)
!4331 = !DILocation(line: 2912, column: 26, scope: !4328)
!4332 = !DILocation(line: 2913, column: 21, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4328, file: !16, line: 2913, column: 21)
!4334 = !DILocation(line: 2913, column: 23, scope: !4333)
!4335 = !DILocation(line: 2913, column: 21, scope: !4328)
!4336 = !DILocation(line: 2914, column: 21, scope: !4333)
!4337 = !DILocation(line: 2916, column: 21, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4328, file: !16, line: 2916, column: 21)
!4339 = !DILocation(line: 2916, column: 30, scope: !4338)
!4340 = !DILocation(line: 2916, column: 21, scope: !4328)
!4341 = !DILocation(line: 2917, column: 30, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4338, file: !16, line: 2916, column: 36)
!4343 = !DILocation(line: 2918, column: 31, scope: !4342)
!4344 = !DILocation(line: 2919, column: 17, scope: !4342)
!4345 = !DILocation(line: 2921, column: 30, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4338, file: !16, line: 2919, column: 24)
!4347 = !DILocation(line: 2922, column: 31, scope: !4346)
!4348 = !DILocation(line: 2924, column: 17, scope: !4328)
!4349 = !DILocation(line: 2926, column: 28, scope: !4328)
!4350 = !DILocation(line: 2926, column: 17, scope: !4328)
!4351 = !DILocation(line: 2927, column: 27, scope: !4328)
!4352 = !DILocation(line: 2928, column: 26, scope: !4328)
!4353 = !DILocation(line: 2929, column: 17, scope: !4328)
!4354 = !DILocation(line: 2931, column: 28, scope: !4328)
!4355 = !DILocation(line: 2931, column: 17, scope: !4328)
!4356 = !DILocation(line: 2932, column: 32, scope: !4328)
!4357 = !DILocation(line: 2932, column: 17, scope: !4328)
!4358 = !DILocation(line: 2933, column: 27, scope: !4328)
!4359 = !DILocation(line: 2934, column: 26, scope: !4328)
!4360 = !DILocation(line: 2935, column: 17, scope: !4328)
!4361 = !DILocation(line: 2937, column: 28, scope: !4328)
!4362 = !DILocation(line: 2937, column: 17, scope: !4328)
!4363 = !DILocation(line: 2938, column: 27, scope: !4328)
!4364 = !DILocation(line: 2939, column: 26, scope: !4328)
!4365 = !DILocation(line: 2940, column: 27, scope: !4328)
!4366 = !DILocation(line: 2941, column: 17, scope: !4328)
!4367 = !DILocation(line: 2943, column: 28, scope: !4328)
!4368 = !DILocation(line: 2943, column: 17, scope: !4328)
!4369 = !DILocation(line: 2944, column: 17, scope: !4328)
!4370 = !DILocation(line: 2946, column: 21, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4328, file: !16, line: 2946, column: 21)
!4372 = !DILocation(line: 2946, column: 30, scope: !4371)
!4373 = !DILocation(line: 2946, column: 21, scope: !4328)
!4374 = !DILocation(line: 2947, column: 32, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4371, file: !16, line: 2946, column: 36)
!4376 = !DILocation(line: 2947, column: 21, scope: !4375)
!4377 = !DILocation(line: 2948, column: 25, scope: !4375)
!4378 = !DILocation(line: 2949, column: 21, scope: !4375)
!4379 = !DILocation(line: 2951, column: 30, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4371, file: !16, line: 2950, column: 24)
!4381 = !DILocation(line: 2952, column: 31, scope: !4380)
!4382 = !DILocation(line: 2953, column: 21, scope: !4380)
!4383 = !DILocation(line: 2957, column: 22, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4328, file: !16, line: 2957, column: 21)
!4385 = !DILocation(line: 2957, column: 24, scope: !4384)
!4386 = !DILocation(line: 2957, column: 30, scope: !4384)
!4387 = !DILocation(line: 2957, column: 34, scope: !4388)
!4388 = !DILexicalBlockFile(scope: !4384, file: !16, discriminator: 1)
!4389 = !DILocation(line: 2957, column: 43, scope: !4388)
!4390 = !DILocation(line: 2957, column: 21, scope: !4388)
!4391 = !DILocation(line: 2958, column: 32, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4384, file: !16, line: 2957, column: 50)
!4393 = !DILocation(line: 2959, column: 33, scope: !4392)
!4394 = !DILocation(line: 2959, column: 32, scope: !4392)
!4395 = !DILocation(line: 2958, column: 21, scope: !4392)
!4396 = !DILocation(line: 2960, column: 21, scope: !4392)
!4397 = !DILocation(line: 2962, column: 30, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4384, file: !16, line: 2961, column: 24)
!4399 = !DILocation(line: 2963, column: 31, scope: !4398)
!4400 = !DILocation(line: 2965, column: 17, scope: !4328)
!4401 = !DILocation(line: 2969, column: 34, scope: !4328)
!4402 = !DILocation(line: 2969, column: 17, scope: !4328)
!4403 = !DILocation(line: 2970, column: 17, scope: !4328)
!4404 = !DILocation(line: 2972, column: 9, scope: !4317)
!4405 = !DILocation(line: 2977, column: 19, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4303, file: !16, line: 2977, column: 18)
!4407 = !DILocation(line: 2977, column: 31, scope: !4406)
!4408 = !DILocation(line: 2977, column: 33, scope: !4409)
!4409 = !DILexicalBlockFile(scope: !4406, file: !16, discriminator: 1)
!4410 = !DILocation(line: 2977, column: 35, scope: !4409)
!4411 = !DILocation(line: 2977, column: 36, scope: !4409)
!4412 = !DILocation(line: 2977, column: 33, scope: !4413)
!4413 = !DILexicalBlockFile(scope: !4409, file: !16, discriminator: 2)
!4414 = !DILocation(line: 2977, column: 90, scope: !4409)
!4415 = !DILocation(line: 2977, column: 70, scope: !4409)
!4416 = !DILocation(line: 2977, column: 72, scope: !4409)
!4417 = !DILocation(line: 2977, column: 18, scope: !4409)
!4418 = !DILocation(line: 2983, column: 41, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4406, file: !16, line: 2979, column: 9)
!4420 = !DILocation(line: 2983, column: 36, scope: !4419)
!4421 = !DILocation(line: 2983, column: 53, scope: !4419)
!4422 = !DILocation(line: 2983, column: 17, scope: !4419)
!4423 = !DILocation(line: 2983, column: 15, scope: !4419)
!4424 = !DILocation(line: 2985, column: 17, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4419, file: !16, line: 2985, column: 17)
!4426 = !DILocation(line: 2985, column: 19, scope: !4425)
!4427 = !DILocation(line: 2985, column: 17, scope: !4419)
!4428 = !DILocation(line: 2986, column: 28, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4425, file: !16, line: 2985, column: 25)
!4430 = !DILocation(line: 2986, column: 17, scope: !4429)
!4431 = !DILocation(line: 2987, column: 21, scope: !4429)
!4432 = !DILocation(line: 2988, column: 17, scope: !4429)
!4433 = !DILocation(line: 2991, column: 25, scope: !4419)
!4434 = !DILocation(line: 2991, column: 22, scope: !4419)
!4435 = !DILocation(line: 2992, column: 25, scope: !4419)
!4436 = !DILocation(line: 2992, column: 22, scope: !4419)
!4437 = !DILocation(line: 2993, column: 17, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4419, file: !16, line: 2993, column: 17)
!4439 = !DILocation(line: 2993, column: 26, scope: !4438)
!4440 = !DILocation(line: 2993, column: 17, scope: !4419)
!4441 = !DILocation(line: 2994, column: 26, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4438, file: !16, line: 2993, column: 32)
!4443 = !DILocation(line: 2995, column: 27, scope: !4442)
!4444 = !DILocation(line: 2996, column: 13, scope: !4442)
!4445 = !DILocation(line: 2997, column: 9, scope: !4419)
!4446 = !DILocation(line: 2997, column: 20, scope: !4447)
!4447 = !DILexicalBlockFile(scope: !4448, file: !16, discriminator: 1)
!4448 = distinct !DILexicalBlock(scope: !4406, file: !16, line: 2997, column: 20)
!4449 = !DILocation(line: 2997, column: 32, scope: !4447)
!4450 = !DILocation(line: 2997, column: 45, scope: !4451)
!4451 = !DILexicalBlockFile(scope: !4448, file: !16, discriminator: 2)
!4452 = !DILocation(line: 2997, column: 34, scope: !4451)
!4453 = !DILocation(line: 2997, column: 36, scope: !4451)
!4454 = !DILocation(line: 2997, column: 37, scope: !4451)
!4455 = !DILocation(line: 2997, column: 34, scope: !4456)
!4456 = !DILexicalBlockFile(scope: !4451, file: !16, discriminator: 3)
!4457 = !DILocation(line: 2997, column: 91, scope: !4451)
!4458 = !DILocation(line: 2997, column: 71, scope: !4451)
!4459 = !DILocation(line: 2997, column: 73, scope: !4451)
!4460 = !DILocation(line: 2997, column: 20, scope: !4451)
!4461 = !DILocation(line: 3007, column: 26, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4448, file: !16, line: 2997, column: 71)
!4463 = !DILocation(line: 3007, column: 31, scope: !4462)
!4464 = !DILocation(line: 3007, column: 17, scope: !4462)
!4465 = !DILocation(line: 3007, column: 15, scope: !4462)
!4466 = !DILocation(line: 3009, column: 35, scope: !4462)
!4467 = !DILocation(line: 3009, column: 40, scope: !4462)
!4468 = !DILocation(line: 3009, column: 21, scope: !4462)
!4469 = !DILocation(line: 3009, column: 13, scope: !4462)
!4470 = !DILocation(line: 3011, column: 21, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !16, line: 3011, column: 21)
!4472 = distinct !DILexicalBlock(scope: !4462, file: !16, line: 3009, column: 44)
!4473 = !DILocation(line: 3011, column: 23, scope: !4471)
!4474 = !DILocation(line: 3011, column: 21, scope: !4472)
!4475 = !DILocation(line: 3012, column: 21, scope: !4471)
!4476 = !DILocation(line: 3013, column: 26, scope: !4472)
!4477 = !DILocation(line: 3014, column: 28, scope: !4472)
!4478 = !DILocation(line: 3014, column: 26, scope: !4472)
!4479 = !DILocation(line: 3016, column: 26, scope: !4472)
!4480 = !DILocation(line: 3017, column: 27, scope: !4472)
!4481 = !DILocation(line: 3018, column: 17, scope: !4472)
!4482 = !DILocation(line: 3020, column: 28, scope: !4472)
!4483 = !DILocation(line: 3020, column: 17, scope: !4472)
!4484 = !DILocation(line: 3021, column: 32, scope: !4472)
!4485 = !DILocation(line: 3021, column: 17, scope: !4472)
!4486 = !DILocation(line: 3022, column: 27, scope: !4472)
!4487 = !DILocation(line: 3023, column: 26, scope: !4472)
!4488 = !DILocation(line: 3024, column: 22, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4472, file: !16, line: 3024, column: 21)
!4490 = !DILocation(line: 3024, column: 31, scope: !4489)
!4491 = !DILocation(line: 3024, column: 37, scope: !4489)
!4492 = !DILocation(line: 3024, column: 41, scope: !4493)
!4493 = !DILexicalBlockFile(scope: !4489, file: !16, discriminator: 1)
!4494 = !DILocation(line: 3024, column: 51, scope: !4493)
!4495 = !DILocation(line: 3024, column: 21, scope: !4493)
!4496 = !DILocation(line: 3025, column: 31, scope: !4489)
!4497 = !DILocation(line: 3025, column: 21, scope: !4489)
!4498 = !DILocation(line: 3026, column: 17, scope: !4472)
!4499 = !DILocation(line: 3028, column: 28, scope: !4472)
!4500 = !DILocation(line: 3028, column: 17, scope: !4472)
!4501 = !DILocation(line: 3029, column: 27, scope: !4472)
!4502 = !DILocation(line: 3030, column: 26, scope: !4472)
!4503 = !DILocation(line: 3031, column: 17, scope: !4472)
!4504 = !DILocation(line: 3033, column: 28, scope: !4472)
!4505 = !DILocation(line: 3033, column: 17, scope: !4472)
!4506 = !DILocation(line: 3034, column: 27, scope: !4472)
!4507 = !DILocation(line: 3035, column: 26, scope: !4472)
!4508 = !DILocation(line: 3036, column: 22, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4472, file: !16, line: 3036, column: 21)
!4510 = !DILocation(line: 3036, column: 31, scope: !4509)
!4511 = !DILocation(line: 3036, column: 37, scope: !4509)
!4512 = !DILocation(line: 3036, column: 41, scope: !4513)
!4513 = !DILexicalBlockFile(scope: !4509, file: !16, discriminator: 1)
!4514 = !DILocation(line: 3036, column: 51, scope: !4513)
!4515 = !DILocation(line: 3036, column: 21, scope: !4513)
!4516 = !DILocation(line: 3037, column: 31, scope: !4509)
!4517 = !DILocation(line: 3037, column: 21, scope: !4509)
!4518 = !DILocation(line: 3038, column: 17, scope: !4472)
!4519 = !DILocation(line: 3040, column: 28, scope: !4472)
!4520 = !DILocation(line: 3040, column: 17, scope: !4472)
!4521 = !DILocation(line: 3041, column: 17, scope: !4472)
!4522 = !DILocation(line: 3043, column: 24, scope: !4472)
!4523 = !DILocation(line: 3043, column: 23, scope: !4472)
!4524 = !DILocation(line: 3043, column: 21, scope: !4472)
!4525 = !DILocation(line: 3044, column: 21, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4472, file: !16, line: 3044, column: 21)
!4527 = !DILocation(line: 3044, column: 21, scope: !4472)
!4528 = !DILocation(line: 3045, column: 30, scope: !4526)
!4529 = !DILocation(line: 3045, column: 21, scope: !4526)
!4530 = !DILocation(line: 3047, column: 32, scope: !4526)
!4531 = !DILocation(line: 3047, column: 60, scope: !4526)
!4532 = !DILocation(line: 3047, column: 21, scope: !4526)
!4533 = !DILocation(line: 3048, column: 17, scope: !4472)
!4534 = !DILocation(line: 3050, column: 28, scope: !4472)
!4535 = !DILocation(line: 3050, column: 17, scope: !4472)
!4536 = !DILocation(line: 3051, column: 21, scope: !4472)
!4537 = !DILocation(line: 3052, column: 17, scope: !4472)
!4538 = !DILocation(line: 3056, column: 34, scope: !4472)
!4539 = !DILocation(line: 3056, column: 17, scope: !4472)
!4540 = !DILocation(line: 3057, column: 17, scope: !4472)
!4541 = !DILocation(line: 3059, column: 9, scope: !4462)
!4542 = !DILocation(line: 3064, column: 17, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4448, file: !16, line: 3064, column: 17)
!4544 = !DILocation(line: 3064, column: 19, scope: !4543)
!4545 = !DILocation(line: 3064, column: 20, scope: !4543)
!4546 = !DILocation(line: 3064, column: 17, scope: !4547)
!4547 = !DILexicalBlockFile(scope: !4543, file: !16, discriminator: 1)
!4548 = !DILocation(line: 3064, column: 74, scope: !4543)
!4549 = !DILocation(line: 3064, column: 54, scope: !4543)
!4550 = !DILocation(line: 3064, column: 56, scope: !4543)
!4551 = !DILocation(line: 3064, column: 17, scope: !4448)
!4552 = !DILocation(line: 3067, column: 17, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !16, line: 3067, column: 17)
!4554 = distinct !DILexicalBlock(scope: !4543, file: !16, line: 3066, column: 9)
!4555 = !DILocation(line: 3067, column: 17, scope: !4554)
!4556 = !DILocalVariable(name: "j", scope: !4557, file: !16, line: 3068, type: !225)
!4557 = distinct !DILexicalBlock(scope: !4553, file: !16, line: 3067, column: 23)
!4558 = !DILocation(line: 3068, column: 21, scope: !4557)
!4559 = !DILocalVariable(name: "lf_num", scope: !4557, file: !16, line: 3068, type: !225)
!4560 = !DILocation(line: 3068, column: 24, scope: !4557)
!4561 = !DILocation(line: 3070, column: 36, scope: !4557)
!4562 = !DILocation(line: 3070, column: 21, scope: !4557)
!4563 = !DILocation(line: 3070, column: 19, scope: !4557)
!4564 = !DILocation(line: 3071, column: 24, scope: !4557)
!4565 = !DILocation(line: 3073, column: 24, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4557, file: !16, line: 3073, column: 17)
!4567 = !DILocation(line: 3073, column: 22, scope: !4566)
!4568 = !DILocation(line: 3073, column: 29, scope: !4569)
!4569 = !DILexicalBlockFile(scope: !4570, file: !16, discriminator: 1)
!4570 = distinct !DILexicalBlock(scope: !4566, file: !16, line: 3073, column: 17)
!4571 = !DILocation(line: 3073, column: 33, scope: !4569)
!4572 = !DILocation(line: 3073, column: 31, scope: !4569)
!4573 = !DILocation(line: 3073, column: 17, scope: !4569)
!4574 = !DILocation(line: 3074, column: 30, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4570, file: !16, line: 3074, column: 25)
!4576 = !DILocation(line: 3074, column: 25, scope: !4575)
!4577 = !DILocation(line: 3074, column: 33, scope: !4575)
!4578 = !DILocation(line: 3074, column: 25, scope: !4570)
!4579 = !DILocation(line: 3075, column: 31, scope: !4575)
!4580 = !DILocation(line: 3075, column: 25, scope: !4575)
!4581 = !DILocation(line: 3074, column: 36, scope: !4582)
!4582 = !DILexicalBlockFile(scope: !4575, file: !16, discriminator: 1)
!4583 = !DILocation(line: 3073, column: 37, scope: !4584)
!4584 = !DILexicalBlockFile(scope: !4570, file: !16, discriminator: 2)
!4585 = !DILocation(line: 3073, column: 17, scope: !4584)
!4586 = distinct !{!4586, !4587}
!4587 = !DILocation(line: 3073, column: 17, scope: !4557)
!4588 = !DILocation(line: 3076, column: 26, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4557, file: !16, line: 3076, column: 17)
!4590 = !DILocation(line: 3076, column: 28, scope: !4589)
!4591 = !DILocation(line: 3076, column: 24, scope: !4589)
!4592 = !DILocation(line: 3076, column: 22, scope: !4589)
!4593 = !DILocation(line: 3076, column: 33, scope: !4594)
!4594 = !DILexicalBlockFile(scope: !4595, file: !16, discriminator: 1)
!4595 = distinct !DILexicalBlock(scope: !4589, file: !16, line: 3076, column: 17)
!4596 = !DILocation(line: 3076, column: 35, scope: !4594)
!4597 = !DILocation(line: 3076, column: 17, scope: !4594)
!4598 = !DILocation(line: 3077, column: 45, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4595, file: !16, line: 3076, column: 46)
!4600 = !DILocation(line: 3077, column: 40, scope: !4599)
!4601 = !DILocation(line: 3077, column: 26, scope: !4599)
!4602 = !DILocation(line: 3077, column: 30, scope: !4599)
!4603 = !DILocation(line: 3077, column: 28, scope: !4599)
!4604 = !DILocation(line: 3077, column: 21, scope: !4599)
!4605 = !DILocation(line: 3077, column: 38, scope: !4599)
!4606 = !DILocation(line: 3078, column: 30, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4599, file: !16, line: 3078, column: 25)
!4608 = !DILocation(line: 3078, column: 25, scope: !4607)
!4609 = !DILocation(line: 3078, column: 33, scope: !4607)
!4610 = !DILocation(line: 3078, column: 25, scope: !4599)
!4611 = !DILocation(line: 3079, column: 31, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4607, file: !16, line: 3078, column: 42)
!4613 = !DILocation(line: 3080, column: 26, scope: !4612)
!4614 = !DILocation(line: 3081, column: 30, scope: !4612)
!4615 = !DILocation(line: 3081, column: 34, scope: !4612)
!4616 = !DILocation(line: 3081, column: 32, scope: !4612)
!4617 = !DILocation(line: 3081, column: 25, scope: !4612)
!4618 = !DILocation(line: 3081, column: 42, scope: !4612)
!4619 = !DILocation(line: 3082, column: 21, scope: !4612)
!4620 = !DILocation(line: 3083, column: 17, scope: !4599)
!4621 = !DILocation(line: 3076, column: 42, scope: !4622)
!4622 = !DILexicalBlockFile(scope: !4595, file: !16, discriminator: 2)
!4623 = !DILocation(line: 3076, column: 17, scope: !4622)
!4624 = distinct !{!4624, !4625}
!4625 = !DILocation(line: 3076, column: 17, scope: !4557)
!4626 = !DILocation(line: 3085, column: 13, scope: !4557)
!4627 = !DILocation(line: 3086, column: 36, scope: !4553)
!4628 = !DILocation(line: 3086, column: 21, scope: !4553)
!4629 = !DILocation(line: 3086, column: 19, scope: !4553)
!4630 = !DILocation(line: 3088, column: 17, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4554, file: !16, line: 3088, column: 17)
!4632 = !DILocation(line: 3088, column: 19, scope: !4631)
!4633 = !DILocation(line: 3088, column: 17, scope: !4554)
!4634 = !DILocation(line: 3089, column: 24, scope: !4631)
!4635 = !DILocation(line: 3089, column: 17, scope: !4631)
!4636 = !DILocation(line: 3092, column: 19, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4554, file: !16, line: 3092, column: 17)
!4638 = !DILocation(line: 3092, column: 30, scope: !4637)
!4639 = !DILocation(line: 3092, column: 35, scope: !4640)
!4640 = !DILexicalBlockFile(scope: !4637, file: !16, discriminator: 1)
!4641 = !DILocation(line: 3092, column: 37, scope: !4640)
!4642 = !DILocation(line: 3092, column: 43, scope: !4640)
!4643 = !DILocation(line: 3092, column: 47, scope: !4644)
!4644 = !DILexicalBlockFile(scope: !4637, file: !16, discriminator: 2)
!4645 = !DILocation(line: 3092, column: 55, scope: !4644)
!4646 = !DILocation(line: 3092, column: 62, scope: !4644)
!4647 = !DILocation(line: 3092, column: 65, scope: !4648)
!4648 = !DILexicalBlockFile(scope: !4637, file: !16, discriminator: 3)
!4649 = !DILocation(line: 3092, column: 17, scope: !4648)
!4650 = !DILocation(line: 3093, column: 28, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4637, file: !16, line: 3092, column: 79)
!4652 = !DILocation(line: 3093, column: 17, scope: !4651)
!4653 = !DILocation(line: 3094, column: 21, scope: !4651)
!4654 = !DILocation(line: 3095, column: 17, scope: !4651)
!4655 = !DILocation(line: 3098, column: 19, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4554, file: !16, line: 3098, column: 17)
!4657 = !DILocation(line: 3098, column: 30, scope: !4656)
!4658 = !DILocation(line: 3098, column: 34, scope: !4659)
!4659 = !DILexicalBlockFile(scope: !4656, file: !16, discriminator: 1)
!4660 = !DILocation(line: 3098, column: 42, scope: !4659)
!4661 = !DILocation(line: 3098, column: 49, scope: !4659)
!4662 = !DILocation(line: 3098, column: 52, scope: !4663)
!4663 = !DILexicalBlockFile(scope: !4656, file: !16, discriminator: 2)
!4664 = !DILocation(line: 3098, column: 17, scope: !4663)
!4665 = !DILocation(line: 3099, column: 28, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4656, file: !16, line: 3098, column: 65)
!4667 = !DILocation(line: 3099, column: 17, scope: !4666)
!4668 = !DILocation(line: 3100, column: 33, scope: !4666)
!4669 = !DILocation(line: 3100, column: 17, scope: !4666)
!4670 = !DILocation(line: 3101, column: 26, scope: !4666)
!4671 = !DILocation(line: 3102, column: 6, scope: !4666)
!4672 = !DILocation(line: 3102, column: 18, scope: !4673)
!4673 = !DILexicalBlockFile(scope: !4674, file: !16, discriminator: 1)
!4674 = distinct !DILexicalBlock(scope: !4656, file: !16, line: 3102, column: 17)
!4675 = !DILocation(line: 3102, column: 28, scope: !4673)
!4676 = !DILocation(line: 3102, column: 32, scope: !4677)
!4677 = !DILexicalBlockFile(scope: !4674, file: !16, discriminator: 2)
!4678 = !DILocation(line: 3102, column: 40, scope: !4677)
!4679 = !DILocation(line: 3102, column: 47, scope: !4677)
!4680 = !DILocation(line: 3102, column: 50, scope: !4681)
!4681 = !DILexicalBlockFile(scope: !4674, file: !16, discriminator: 3)
!4682 = !DILocation(line: 3102, column: 58, scope: !4681)
!4683 = !DILocation(line: 3103, column: 21, scope: !4674)
!4684 = !DILocation(line: 3103, column: 24, scope: !4673)
!4685 = !DILocation(line: 3102, column: 17, scope: !4686)
!4686 = !DILexicalBlockFile(scope: !4656, file: !16, discriminator: 4)
!4687 = !DILocation(line: 3104, column: 28, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4674, file: !16, line: 3103, column: 36)
!4689 = !DILocation(line: 3104, column: 17, scope: !4688)
!4690 = !DILocation(line: 3105, column: 32, scope: !4688)
!4691 = !DILocation(line: 3106, column: 32, scope: !4688)
!4692 = !DILocation(line: 3106, column: 40, scope: !4688)
!4693 = !DILocation(line: 3105, column: 17, scope: !4688)
!4694 = !DILocation(line: 3108, column: 26, scope: !4688)
!4695 = !DILocation(line: 3109, column: 13, scope: !4688)
!4696 = !DILocation(line: 3118, column: 28, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4674, file: !16, line: 3117, column: 18)
!4698 = !DILocation(line: 3118, column: 26, scope: !4697)
!4699 = !DILocation(line: 3119, column: 26, scope: !4697)
!4700 = !DILocation(line: 3125, column: 23, scope: !4554)
!4701 = !DILocation(line: 3126, column: 22, scope: !4554)
!4702 = !DILocation(line: 3127, column: 9, scope: !4554)
!4703 = !DILocation(line: 2789, column: 5, scope: !4704)
!4704 = !DILexicalBlockFile(scope: !4095, file: !16, discriminator: 1)
!4705 = distinct !{!4705, !4092}
!4706 = !DILocation(line: 3132, column: 9, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !222, file: !16, line: 3132, column: 9)
!4708 = !DILocation(line: 3132, column: 9, scope: !222)
!4709 = !DILocation(line: 3133, column: 21, scope: !4707)
!4710 = !DILocation(line: 3133, column: 32, scope: !4707)
!4711 = !DILocation(line: 3133, column: 37, scope: !4707)
!4712 = !DILocation(line: 3133, column: 9, scope: !4707)
!4713 = !DILocation(line: 3134, column: 21, scope: !222)
!4714 = !DILocation(line: 3134, column: 5, scope: !222)
!4715 = !DILocation(line: 3146, column: 25, scope: !222)
!4716 = !DILocation(line: 3146, column: 14, scope: !222)
!4717 = !DILocation(line: 3146, column: 5, scope: !819)
!4718 = !DILocation(line: 3152, column: 13, scope: !222)
!4719 = !DILocation(line: 3152, column: 20, scope: !222)
!4720 = !DILocation(line: 3153, column: 13, scope: !222)
!4721 = !DILocation(line: 3153, column: 21, scope: !222)
!4722 = !DILocation(line: 3154, column: 5, scope: !222)
!4723 = distinct !{!4723, !4722}
!4724 = !DILocation(line: 3155, column: 8, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !222, file: !16, line: 3154, column: 8)
!4726 = distinct !{!4726, !4724}
!4727 = !DILocalVariable(name: "__d0", scope: !4728, file: !16, line: 3155, type: !225)
!4728 = distinct !DILexicalBlock(scope: !4725, file: !16, line: 3155, column: 11)
!4729 = !DILocation(line: 3155, column: 17, scope: !4728)
!4730 = !DILocalVariable(name: "__d1", scope: !4728, file: !16, line: 3155, type: !225)
!4731 = !DILocation(line: 3155, column: 23, scope: !4728)
!4732 = !DILocation(line: 3155, column: 11, scope: !4733)
!4733 = !DILexicalBlockFile(scope: !4728, file: !16, discriminator: 1)
!4734 = !DILocation(line: 3155, column: 160, scope: !4733)
!4735 = !DILocation(line: 3155, column: 29, scope: !4733)
!4736 = !{i32 1014944}
!4737 = !DILocation(line: 3155, column: 40, scope: !4733)
!4738 = !DILocation(line: 3156, column: 8, scope: !4725)
!4739 = !DILocation(line: 3156, column: 10, scope: !4725)
!4740 = !DILocation(line: 3156, column: 66, scope: !4725)
!4741 = !DILocation(line: 3156, column: 17, scope: !4725)
!4742 = !DILocation(line: 3156, column: 11, scope: !4725)
!4743 = !DILocation(line: 3156, column: 45, scope: !4725)
!4744 = !DILocation(line: 3157, column: 5, scope: !4725)
!4745 = !DILocation(line: 3157, column: 21, scope: !819)
!4746 = !DILocation(line: 3157, column: 23, scope: !819)
!4747 = !DILocation(line: 3157, column: 14, scope: !819)
!4748 = !DILocation(line: 3157, column: 59, scope: !819)
!4749 = !DILocation(line: 3158, column: 14, scope: !222)
!4750 = !DILocation(line: 3158, column: 26, scope: !819)
!4751 = !DILocation(line: 3158, column: 32, scope: !819)
!4752 = !DILocation(line: 3158, column: 17, scope: !819)
!4753 = !DILocation(line: 3158, column: 46, scope: !819)
!4754 = !DILocation(line: 3157, column: 5, scope: !4755)
!4755 = !DILexicalBlockFile(scope: !4725, file: !16, discriminator: 2)
!4756 = !DILocation(line: 3160, column: 32, scope: !222)
!4757 = !DILocation(line: 3160, column: 21, scope: !222)
!4758 = !DILocation(line: 3160, column: 5, scope: !819)
!4759 = !DILocation(line: 3160, column: 5, scope: !222)
!4760 = !DILocation(line: 3162, column: 9, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !222, file: !16, line: 3162, column: 9)
!4762 = !DILocation(line: 3162, column: 13, scope: !4761)
!4763 = !DILocation(line: 3162, column: 9, scope: !222)
!4764 = !DILocation(line: 3163, column: 13, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !16, line: 3163, column: 13)
!4766 = distinct !DILexicalBlock(scope: !4761, file: !16, line: 3162, column: 21)
!4767 = !DILocation(line: 3163, column: 20, scope: !4765)
!4768 = !DILocation(line: 3163, column: 13, scope: !4766)
!4769 = !DILocation(line: 3164, column: 25, scope: !4765)
!4770 = !DILocation(line: 3164, column: 36, scope: !4765)
!4771 = !DILocation(line: 3164, column: 13, scope: !4765)
!4772 = !DILocation(line: 3165, column: 18, scope: !4766)
!4773 = !DILocation(line: 3165, column: 9, scope: !4766)
!4774 = !DILocation(line: 3166, column: 5, scope: !4766)
!4775 = !DILocation(line: 3167, column: 22, scope: !222)
!4776 = !DILocation(line: 3167, column: 5, scope: !222)
!4777 = !DILocation(line: 3169, column: 28, scope: !222)
!4778 = !DILocation(line: 3169, column: 5, scope: !222)
!4779 = !DILocation(line: 3171, column: 18, scope: !222)
!4780 = !DILocation(line: 3171, column: 5, scope: !222)
!4781 = !DILocation(line: 3172, column: 5, scope: !222)
!4782 = !DILocation(line: 3173, column: 15, scope: !222)
!4783 = !DILocation(line: 3173, column: 5, scope: !222)
!4784 = !DILocation(line: 3174, column: 26, scope: !222)
!4785 = !DILocation(line: 3174, column: 5, scope: !222)
!4786 = !DILocation(line: 3175, column: 19, scope: !222)
!4787 = !DILocation(line: 3175, column: 5, scope: !222)
!4788 = !DILocation(line: 3176, column: 22, scope: !222)
!4789 = !DILocation(line: 3176, column: 5, scope: !222)
!4790 = !DILocation(line: 3177, column: 17, scope: !222)
!4791 = !DILocation(line: 3177, column: 5, scope: !222)
!4792 = !DILocation(line: 3179, column: 25, scope: !222)
!4793 = !DILocation(line: 3179, column: 5, scope: !222)
!4794 = !DILocation(line: 3181, column: 17, scope: !222)
!4795 = !DILocation(line: 3181, column: 5, scope: !222)
!4796 = !DILocation(line: 3182, column: 17, scope: !222)
!4797 = !DILocation(line: 3182, column: 5, scope: !222)
!4798 = !DILocation(line: 3183, column: 17, scope: !222)
!4799 = !DILocation(line: 3183, column: 5, scope: !222)
!4800 = !DILocation(line: 3184, column: 17, scope: !222)
!4801 = !DILocation(line: 3184, column: 5, scope: !222)
!4802 = !DILocation(line: 3185, column: 28, scope: !222)
!4803 = !DILocation(line: 3185, column: 5, scope: !222)
!4804 = !DILocation(line: 3186, column: 21, scope: !222)
!4805 = !DILocation(line: 3186, column: 5, scope: !222)
!4806 = !DILocation(line: 3187, column: 28, scope: !222)
!4807 = !DILocation(line: 3187, column: 5, scope: !222)
!4808 = !DILocation(line: 3188, column: 28, scope: !222)
!4809 = !DILocation(line: 3188, column: 5, scope: !222)
!4810 = !DILocation(line: 3189, column: 23, scope: !222)
!4811 = !DILocation(line: 3189, column: 5, scope: !222)
!4812 = !DILocation(line: 3190, column: 23, scope: !222)
!4813 = !DILocation(line: 3190, column: 5, scope: !222)
!4814 = !DILocation(line: 3191, column: 23, scope: !222)
!4815 = !DILocation(line: 3191, column: 5, scope: !222)
!4816 = !DILocation(line: 3192, column: 23, scope: !222)
!4817 = !DILocation(line: 3192, column: 5, scope: !222)
!4818 = !DILocation(line: 3193, column: 9, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !222, file: !16, line: 3193, column: 9)
!4820 = !DILocation(line: 3193, column: 19, scope: !4819)
!4821 = !DILocation(line: 3193, column: 9, scope: !222)
!4822 = !DILocation(line: 3194, column: 27, scope: !4819)
!4823 = !DILocation(line: 3194, column: 45, scope: !4819)
!4824 = !DILocation(line: 3194, column: 38, scope: !4819)
!4825 = !DILocation(line: 3194, column: 9, scope: !4826)
!4826 = !DILexicalBlockFile(scope: !4819, file: !16, discriminator: 1)
!4827 = !DILocation(line: 3194, column: 9, scope: !4819)
!4828 = !DILocation(line: 3195, column: 20, scope: !222)
!4829 = !DILocation(line: 3195, column: 5, scope: !222)
!4830 = !DILocation(line: 3196, column: 14, scope: !222)
!4831 = !DILocation(line: 3196, column: 5, scope: !222)
!4832 = !DILocation(line: 3197, column: 15, scope: !222)
!4833 = !DILocation(line: 3198, column: 14, scope: !222)
!4834 = !DILocation(line: 3198, column: 5, scope: !222)
!4835 = !DILocation(line: 3199, column: 15, scope: !222)
!4836 = !DILocation(line: 3200, column: 12, scope: !222)
!4837 = !DILocation(line: 3200, column: 5, scope: !222)
!4838 = distinct !DISubprogram(name: "freeandcopy", scope: !16, file: !16, line: 845, type: !4839, isLocal: true, isDefinition: true, scopeLine: 846, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!4839 = !DISubroutineType(types: !4840)
!4840 = !{null, !226, !346}
!4841 = !DILocalVariable(name: "dest", arg: 1, scope: !4838, file: !16, line: 845, type: !226)
!4842 = !DILocation(line: 845, column: 32, scope: !4838)
!4843 = !DILocalVariable(name: "source", arg: 2, scope: !4838, file: !16, line: 845, type: !346)
!4844 = !DILocation(line: 845, column: 50, scope: !4838)
!4845 = !DILocation(line: 847, column: 18, scope: !4838)
!4846 = !DILocation(line: 847, column: 17, scope: !4838)
!4847 = !DILocation(line: 847, column: 5, scope: !4838)
!4848 = !DILocation(line: 848, column: 6, scope: !4838)
!4849 = !DILocation(line: 848, column: 11, scope: !4838)
!4850 = !DILocation(line: 849, column: 9, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4838, file: !16, line: 849, column: 9)
!4852 = !DILocation(line: 849, column: 16, scope: !4851)
!4853 = !DILocation(line: 849, column: 9, scope: !4838)
!4854 = !DILocation(line: 850, column: 31, scope: !4851)
!4855 = !DILocation(line: 850, column: 17, scope: !4851)
!4856 = !DILocation(line: 850, column: 10, scope: !4851)
!4857 = !DILocation(line: 850, column: 15, scope: !4851)
!4858 = !DILocation(line: 850, column: 9, scope: !4851)
!4859 = !DILocation(line: 851, column: 1, scope: !4838)
!4860 = distinct !DISubprogram(name: "sk_OPENSSL_STRING_new_null", scope: !283, file: !283, line: 159, type: !4861, isLocal: true, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!281}
!4863 = !DILocation(line: 159, column: 948, scope: !4860)
!4864 = !DILocation(line: 159, column: 914, scope: !4860)
!4865 = !DILocation(line: 159, column: 907, scope: !4860)
!4866 = distinct !DISubprogram(name: "sk_OPENSSL_STRING_push", scope: !283, file: !283, line: 159, type: !4867, isLocal: true, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!225, !281, !227}
!4869 = !DILocalVariable(name: "sk", arg: 1, scope: !4866, file: !283, line: 159, type: !281)
!4870 = !DILocation(line: 159, column: 2145, scope: !4866)
!4871 = !DILocalVariable(name: "ptr", arg: 2, scope: !4866, file: !283, line: 159, type: !227)
!4872 = !DILocation(line: 159, column: 2155, scope: !4866)
!4873 = !DILocation(line: 159, column: 2202, scope: !4866)
!4874 = !DILocation(line: 159, column: 2185, scope: !4866)
!4875 = !DILocation(line: 159, column: 2220, scope: !4866)
!4876 = !DILocation(line: 159, column: 2169, scope: !4866)
!4877 = !DILocation(line: 159, column: 2162, scope: !4866)
!4878 = distinct !DISubprogram(name: "sk_X509_CRL_new_null", scope: !292, file: !292, line: 228, type: !4879, isLocal: true, isDefinition: true, scopeLine: 228, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!4879 = !DISubroutineType(types: !4880)
!4880 = !{!290}
!4881 = !DILocation(line: 228, column: 886, scope: !4878)
!4882 = !DILocation(line: 228, column: 858, scope: !4878)
!4883 = !DILocation(line: 228, column: 851, scope: !4878)
!4884 = distinct !DISubprogram(name: "sk_X509_CRL_push", scope: !292, file: !292, line: 228, type: !4885, isLocal: true, isDefinition: true, scopeLine: 228, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!4885 = !DISubroutineType(types: !4886)
!4886 = !{!225, !290, !1800}
!4887 = !DILocalVariable(name: "sk", arg: 1, scope: !4884, file: !292, line: 228, type: !290)
!4888 = !DILocation(line: 228, column: 2007, scope: !4884)
!4889 = !DILocalVariable(name: "ptr", arg: 2, scope: !4884, file: !292, line: 228, type: !1800)
!4890 = !DILocation(line: 228, column: 2021, scope: !4884)
!4891 = !DILocation(line: 228, column: 2068, scope: !4884)
!4892 = !DILocation(line: 228, column: 2051, scope: !4884)
!4893 = !DILocation(line: 228, column: 2086, scope: !4884)
!4894 = !DILocation(line: 228, column: 2072, scope: !4884)
!4895 = !DILocation(line: 228, column: 2035, scope: !4884)
!4896 = !DILocation(line: 228, column: 2028, scope: !4884)
!4897 = distinct !DISubprogram(name: "sk_X509_NAME_new_null", scope: !292, file: !292, line: 77, type: !4898, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{!293}
!4900 = !DILocation(line: 77, column: 908, scope: !4897)
!4901 = !DILocation(line: 77, column: 879, scope: !4897)
!4902 = !DILocation(line: 77, column: 872, scope: !4897)
!4903 = distinct !DISubprogram(name: "sk_X509_NAME_pop_free", scope: !292, file: !292, line: 77, type: !4904, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{null, !293, !4906}
!4906 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_X509_NAME_freefunc", file: !292, line: 77, baseType: !4907)
!4907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4908, size: 64, align: 64)
!4908 = !DISubroutineType(types: !4909)
!4909 = !{null, !4910}
!4910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4911, size: 64, align: 64)
!4911 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_NAME", file: !307, line: 129, baseType: !4912)
!4912 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_name_st", file: !307, line: 129, flags: DIFlagFwdDecl)
!4913 = !DILocalVariable(name: "sk", arg: 1, scope: !4903, file: !292, line: 77, type: !293)
!4914 = !DILocation(line: 77, column: 2731, scope: !4903)
!4915 = !DILocalVariable(name: "freefunc", arg: 2, scope: !4903, file: !292, line: 77, type: !4906)
!4916 = !DILocation(line: 77, column: 2757, scope: !4903)
!4917 = !DILocation(line: 77, column: 2806, scope: !4903)
!4918 = !DILocation(line: 77, column: 2789, scope: !4903)
!4919 = !DILocation(line: 77, column: 2831, scope: !4903)
!4920 = !DILocation(line: 77, column: 2810, scope: !4903)
!4921 = !DILocation(line: 77, column: 2769, scope: !4903)
!4922 = !DILocation(line: 77, column: 2842, scope: !4903)
!4923 = distinct !DISubprogram(name: "psk_client_cb", scope: !16, file: !16, line: 119, type: !4924, isLocal: true, isDefinition: true, scopeLine: 123, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{!280, !411, !346, !227, !280, !299, !280}
!4926 = !DILocalVariable(name: "ssl", arg: 1, scope: !4923, file: !16, line: 119, type: !411)
!4927 = !DILocation(line: 119, column: 40, scope: !4923)
!4928 = !DILocalVariable(name: "hint", arg: 2, scope: !4923, file: !16, line: 119, type: !346)
!4929 = !DILocation(line: 119, column: 57, scope: !4923)
!4930 = !DILocalVariable(name: "identity", arg: 3, scope: !4923, file: !16, line: 119, type: !227)
!4931 = !DILocation(line: 119, column: 69, scope: !4923)
!4932 = !DILocalVariable(name: "max_identity_len", arg: 4, scope: !4923, file: !16, line: 120, type: !280)
!4933 = !DILocation(line: 120, column: 48, scope: !4923)
!4934 = !DILocalVariable(name: "psk", arg: 5, scope: !4923, file: !16, line: 121, type: !299)
!4935 = !DILocation(line: 121, column: 50, scope: !4923)
!4936 = !DILocalVariable(name: "max_psk_len", arg: 6, scope: !4923, file: !16, line: 122, type: !280)
!4937 = !DILocation(line: 122, column: 48, scope: !4923)
!4938 = !DILocalVariable(name: "ret", scope: !4923, file: !16, line: 124, type: !225)
!4939 = !DILocation(line: 124, column: 9, scope: !4923)
!4940 = !DILocalVariable(name: "key_len", scope: !4923, file: !16, line: 125, type: !277)
!4941 = !DILocation(line: 125, column: 10, scope: !4923)
!4942 = !DILocalVariable(name: "key", scope: !4923, file: !16, line: 126, type: !299)
!4943 = !DILocation(line: 126, column: 20, scope: !4923)
!4944 = !DILocation(line: 128, column: 9, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4923, file: !16, line: 128, column: 9)
!4946 = !DILocation(line: 128, column: 9, scope: !4923)
!4947 = !DILocation(line: 129, column: 20, scope: !4945)
!4948 = !DILocation(line: 129, column: 9, scope: !4945)
!4949 = !DILocation(line: 130, column: 10, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4923, file: !16, line: 130, column: 9)
!4951 = !DILocation(line: 130, column: 9, scope: !4923)
!4952 = !DILocation(line: 132, column: 13, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4954, file: !16, line: 132, column: 13)
!4954 = distinct !DILexicalBlock(scope: !4950, file: !16, line: 130, column: 16)
!4955 = !DILocation(line: 132, column: 13, scope: !4954)
!4956 = !DILocation(line: 133, column: 24, scope: !4953)
!4957 = !DILocation(line: 133, column: 13, scope: !4953)
!4958 = !DILocation(line: 135, column: 5, scope: !4954)
!4959 = !DILocation(line: 135, column: 16, scope: !4960)
!4960 = !DILexicalBlockFile(scope: !4961, file: !16, discriminator: 1)
!4961 = distinct !DILexicalBlock(scope: !4950, file: !16, line: 135, column: 16)
!4962 = !DILocation(line: 136, column: 20, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4961, file: !16, line: 135, column: 25)
!4964 = !DILocation(line: 136, column: 68, scope: !4963)
!4965 = !DILocation(line: 136, column: 9, scope: !4963)
!4966 = !DILocation(line: 137, column: 5, scope: !4963)
!4967 = !DILocation(line: 142, column: 24, scope: !4923)
!4968 = !DILocation(line: 142, column: 34, scope: !4923)
!4969 = !DILocation(line: 142, column: 58, scope: !4923)
!4970 = !DILocation(line: 142, column: 11, scope: !4923)
!4971 = !DILocation(line: 142, column: 9, scope: !4923)
!4972 = !DILocation(line: 143, column: 9, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4923, file: !16, line: 143, column: 9)
!4974 = !DILocation(line: 143, column: 13, scope: !4973)
!4975 = !DILocation(line: 143, column: 17, scope: !4973)
!4976 = !DILocation(line: 143, column: 34, scope: !4977)
!4977 = !DILexicalBlockFile(scope: !4973, file: !16, discriminator: 1)
!4978 = !DILocation(line: 143, column: 40, scope: !4977)
!4979 = !DILocation(line: 143, column: 38, scope: !4977)
!4980 = !DILocation(line: 143, column: 9, scope: !4977)
!4981 = !DILocation(line: 144, column: 9, scope: !4973)
!4982 = !DILocation(line: 145, column: 9, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4923, file: !16, line: 145, column: 9)
!4984 = !DILocation(line: 145, column: 9, scope: !4923)
!4985 = !DILocation(line: 146, column: 20, scope: !4983)
!4986 = !DILocation(line: 146, column: 65, scope: !4983)
!4987 = !DILocation(line: 147, column: 20, scope: !4983)
!4988 = !DILocation(line: 146, column: 9, scope: !4983)
!4989 = !DILocation(line: 150, column: 30, scope: !4923)
!4990 = !DILocation(line: 150, column: 11, scope: !4923)
!4991 = !DILocation(line: 150, column: 9, scope: !4923)
!4992 = !DILocation(line: 151, column: 9, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4923, file: !16, line: 151, column: 9)
!4994 = !DILocation(line: 151, column: 13, scope: !4993)
!4995 = !DILocation(line: 151, column: 9, scope: !4923)
!4996 = !DILocation(line: 152, column: 20, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4993, file: !16, line: 151, column: 21)
!4998 = !DILocation(line: 153, column: 20, scope: !4997)
!4999 = !DILocation(line: 152, column: 9, scope: !4997)
!5000 = !DILocation(line: 154, column: 9, scope: !4997)
!5001 = !DILocation(line: 156, column: 9, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4923, file: !16, line: 156, column: 9)
!5003 = !DILocation(line: 156, column: 21, scope: !5002)
!5004 = !DILocation(line: 156, column: 34, scope: !5002)
!5005 = !DILocation(line: 156, column: 37, scope: !5006)
!5006 = !DILexicalBlockFile(scope: !5002, file: !16, discriminator: 1)
!5007 = !DILocation(line: 156, column: 53, scope: !5006)
!5008 = !DILocation(line: 156, column: 47, scope: !5006)
!5009 = !DILocation(line: 156, column: 45, scope: !5006)
!5010 = !DILocation(line: 156, column: 9, scope: !5006)
!5011 = !DILocation(line: 157, column: 20, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5002, file: !16, line: 156, column: 66)
!5013 = !DILocation(line: 159, column: 20, scope: !5012)
!5014 = !DILocation(line: 159, column: 33, scope: !5012)
!5015 = !DILocation(line: 157, column: 9, scope: !5012)
!5016 = !DILocation(line: 160, column: 21, scope: !5012)
!5017 = !DILocation(line: 160, column: 9, scope: !5012)
!5018 = !DILocation(line: 161, column: 9, scope: !5012)
!5019 = !DILocation(line: 164, column: 12, scope: !4923)
!5020 = !DILocation(line: 164, column: 17, scope: !4923)
!5021 = !DILocation(line: 164, column: 22, scope: !4923)
!5022 = !DILocation(line: 164, column: 5, scope: !4923)
!5023 = !DILocation(line: 165, column: 17, scope: !4923)
!5024 = !DILocation(line: 165, column: 5, scope: !4923)
!5025 = !DILocation(line: 167, column: 9, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4923, file: !16, line: 167, column: 9)
!5027 = !DILocation(line: 167, column: 9, scope: !4923)
!5028 = !DILocation(line: 168, column: 20, scope: !5026)
!5029 = !DILocation(line: 168, column: 56, scope: !5026)
!5030 = !DILocation(line: 168, column: 9, scope: !5026)
!5031 = !DILocation(line: 170, column: 12, scope: !4923)
!5032 = !DILocation(line: 170, column: 5, scope: !4923)
!5033 = !DILocation(line: 172, column: 9, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4923, file: !16, line: 172, column: 9)
!5035 = !DILocation(line: 172, column: 9, scope: !4923)
!5036 = !DILocation(line: 173, column: 20, scope: !5034)
!5037 = !DILocation(line: 173, column: 9, scope: !5034)
!5038 = !DILocation(line: 174, column: 5, scope: !4923)
!5039 = !DILocation(line: 175, column: 1, scope: !4923)
!5040 = distinct !DISubprogram(name: "psk_use_session_cb", scope: !16, file: !16, line: 181, type: !5041, isLocal: true, isDefinition: true, scopeLine: 184, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{!225, !411, !5043, !5047, !5048, !5049}
!5043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5044, size: 64, align: 64)
!5044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5045)
!5045 = !DIDerivedType(tag: DW_TAG_typedef, name: "EVP_MD", file: !307, line: 91, baseType: !5046)
!5046 = !DICompositeType(tag: DW_TAG_structure_type, name: "evp_md_st", file: !307, line: 91, flags: DIFlagFwdDecl)
!5047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64, align: 64)
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64, align: 64)
!5049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64, align: 64)
!5050 = !DILocalVariable(name: "s", arg: 1, scope: !5040, file: !16, line: 181, type: !411)
!5051 = !DILocation(line: 181, column: 36, scope: !5040)
!5052 = !DILocalVariable(name: "md", arg: 2, scope: !5040, file: !16, line: 181, type: !5043)
!5053 = !DILocation(line: 181, column: 53, scope: !5040)
!5054 = !DILocalVariable(name: "id", arg: 3, scope: !5040, file: !16, line: 182, type: !5047)
!5055 = !DILocation(line: 182, column: 53, scope: !5040)
!5056 = !DILocalVariable(name: "idlen", arg: 4, scope: !5040, file: !16, line: 182, type: !5048)
!5057 = !DILocation(line: 182, column: 65, scope: !5040)
!5058 = !DILocalVariable(name: "sess", arg: 5, scope: !5040, file: !16, line: 183, type: !5049)
!5059 = !DILocation(line: 183, column: 45, scope: !5040)
!5060 = !DILocalVariable(name: "usesess", scope: !5040, file: !16, line: 185, type: !404)
!5061 = !DILocation(line: 185, column: 18, scope: !5040)
!5062 = !DILocalVariable(name: "cipher", scope: !5040, file: !16, line: 186, type: !5063)
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5064, size: 64, align: 64)
!5064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5065)
!5065 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_CIPHER", file: !255, line: 212, baseType: !5066)
!5066 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_cipher_st", file: !255, line: 212, flags: DIFlagFwdDecl)
!5067 = !DILocation(line: 186, column: 23, scope: !5040)
!5068 = !DILocation(line: 188, column: 9, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5040, file: !16, line: 188, column: 9)
!5070 = !DILocation(line: 188, column: 17, scope: !5069)
!5071 = !DILocation(line: 188, column: 9, scope: !5040)
!5072 = !DILocation(line: 189, column: 28, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5069, file: !16, line: 188, column: 25)
!5074 = !DILocation(line: 189, column: 9, scope: !5073)
!5075 = !DILocation(line: 190, column: 19, scope: !5073)
!5076 = !DILocation(line: 190, column: 17, scope: !5073)
!5077 = !DILocation(line: 191, column: 5, scope: !5073)
!5078 = !DILocalVariable(name: "key_len", scope: !5079, file: !16, line: 192, type: !277)
!5079 = distinct !DILexicalBlock(scope: !5069, file: !16, line: 191, column: 12)
!5080 = !DILocation(line: 192, column: 14, scope: !5079)
!5081 = !DILocalVariable(name: "key", scope: !5079, file: !16, line: 193, type: !299)
!5082 = !DILocation(line: 193, column: 24, scope: !5079)
!5083 = !DILocation(line: 193, column: 49, scope: !5079)
!5084 = !DILocation(line: 193, column: 30, scope: !5079)
!5085 = !DILocation(line: 195, column: 13, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5079, file: !16, line: 195, column: 13)
!5087 = !DILocation(line: 195, column: 17, scope: !5086)
!5088 = !DILocation(line: 195, column: 13, scope: !5079)
!5089 = !DILocation(line: 196, column: 24, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5086, file: !16, line: 195, column: 25)
!5091 = !DILocation(line: 197, column: 24, scope: !5090)
!5092 = !DILocation(line: 196, column: 13, scope: !5090)
!5093 = !DILocation(line: 198, column: 13, scope: !5090)
!5094 = !DILocation(line: 202, column: 34, scope: !5079)
!5095 = !DILocation(line: 202, column: 18, scope: !5079)
!5096 = !DILocation(line: 202, column: 16, scope: !5079)
!5097 = !DILocation(line: 203, column: 13, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5079, file: !16, line: 203, column: 13)
!5099 = !DILocation(line: 203, column: 20, scope: !5098)
!5100 = !DILocation(line: 203, column: 13, scope: !5079)
!5101 = !DILocation(line: 204, column: 24, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5098, file: !16, line: 203, column: 28)
!5103 = !DILocation(line: 204, column: 13, scope: !5102)
!5104 = !DILocation(line: 205, column: 25, scope: !5102)
!5105 = !DILocation(line: 205, column: 13, scope: !5102)
!5106 = !DILocation(line: 206, column: 13, scope: !5102)
!5107 = !DILocation(line: 209, column: 19, scope: !5079)
!5108 = !DILocation(line: 209, column: 17, scope: !5079)
!5109 = !DILocation(line: 210, column: 13, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5079, file: !16, line: 210, column: 13)
!5111 = !DILocation(line: 210, column: 21, scope: !5110)
!5112 = !DILocation(line: 211, column: 16, scope: !5110)
!5113 = !DILocation(line: 211, column: 48, scope: !5114)
!5114 = !DILexicalBlockFile(scope: !5110, file: !16, discriminator: 1)
!5115 = !DILocation(line: 211, column: 57, scope: !5114)
!5116 = !DILocation(line: 211, column: 62, scope: !5114)
!5117 = !DILocation(line: 211, column: 20, scope: !5114)
!5118 = !DILocation(line: 212, column: 17, scope: !5110)
!5119 = !DILocation(line: 212, column: 44, scope: !5114)
!5120 = !DILocation(line: 212, column: 53, scope: !5114)
!5121 = !DILocation(line: 212, column: 21, scope: !5114)
!5122 = !DILocation(line: 213, column: 17, scope: !5110)
!5123 = !DILocation(line: 213, column: 54, scope: !5114)
!5124 = !DILocation(line: 213, column: 21, scope: !5114)
!5125 = !DILocation(line: 210, column: 13, scope: !5126)
!5126 = !DILexicalBlockFile(scope: !5079, file: !16, discriminator: 1)
!5127 = !DILocation(line: 214, column: 25, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5110, file: !16, line: 213, column: 72)
!5129 = !DILocation(line: 214, column: 13, scope: !5128)
!5130 = !DILocation(line: 215, column: 13, scope: !5128)
!5131 = !DILocation(line: 217, column: 21, scope: !5079)
!5132 = !DILocation(line: 217, column: 9, scope: !5079)
!5133 = !DILocation(line: 220, column: 38, scope: !5040)
!5134 = !DILocation(line: 220, column: 14, scope: !5040)
!5135 = !DILocation(line: 220, column: 12, scope: !5040)
!5136 = !DILocation(line: 221, column: 9, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5040, file: !16, line: 221, column: 9)
!5138 = !DILocation(line: 221, column: 16, scope: !5137)
!5139 = !DILocation(line: 221, column: 9, scope: !5040)
!5140 = !DILocation(line: 222, column: 9, scope: !5137)
!5141 = !DILocation(line: 224, column: 9, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5040, file: !16, line: 224, column: 9)
!5143 = !DILocation(line: 224, column: 12, scope: !5142)
!5144 = !DILocation(line: 224, column: 19, scope: !5142)
!5145 = !DILocation(line: 224, column: 54, scope: !5146)
!5146 = !DILexicalBlockFile(scope: !5142, file: !16, discriminator: 1)
!5147 = !DILocation(line: 224, column: 22, scope: !5146)
!5148 = !DILocation(line: 224, column: 65, scope: !5146)
!5149 = !DILocation(line: 224, column: 62, scope: !5146)
!5150 = !DILocation(line: 224, column: 9, scope: !5146)
!5151 = !DILocation(line: 226, column: 10, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5142, file: !16, line: 224, column: 69)
!5153 = !DILocation(line: 226, column: 13, scope: !5152)
!5154 = !DILocation(line: 227, column: 10, scope: !5152)
!5155 = !DILocation(line: 227, column: 16, scope: !5152)
!5156 = !DILocation(line: 228, column: 10, scope: !5152)
!5157 = !DILocation(line: 228, column: 15, scope: !5152)
!5158 = !DILocation(line: 229, column: 26, scope: !5152)
!5159 = !DILocation(line: 229, column: 9, scope: !5152)
!5160 = !DILocation(line: 230, column: 5, scope: !5152)
!5161 = !DILocation(line: 231, column: 17, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5142, file: !16, line: 230, column: 12)
!5163 = !DILocation(line: 231, column: 10, scope: !5162)
!5164 = !DILocation(line: 231, column: 15, scope: !5162)
!5165 = !DILocation(line: 232, column: 32, scope: !5162)
!5166 = !DILocation(line: 232, column: 10, scope: !5162)
!5167 = !DILocation(line: 232, column: 13, scope: !5162)
!5168 = !DILocation(line: 233, column: 25, scope: !5162)
!5169 = !DILocation(line: 233, column: 18, scope: !5162)
!5170 = !DILocation(line: 233, column: 10, scope: !5162)
!5171 = !DILocation(line: 233, column: 16, scope: !5162)
!5172 = !DILocation(line: 236, column: 5, scope: !5040)
!5173 = !DILocation(line: 239, column: 22, scope: !5040)
!5174 = !DILocation(line: 239, column: 5, scope: !5040)
!5175 = !DILocation(line: 240, column: 5, scope: !5040)
!5176 = !DILocation(line: 241, column: 1, scope: !5040)
!5177 = distinct !DISubprogram(name: "next_proto_cb", scope: !16, file: !16, line: 382, type: !5178, isLocal: true, isDefinition: true, scopeLine: 385, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!5178 = !DISubroutineType(types: !5179)
!5179 = !{!225, !411, !325, !299, !278, !280, !268}
!5180 = !DILocalVariable(name: "s", arg: 1, scope: !5177, file: !16, line: 382, type: !411)
!5181 = !DILocation(line: 382, column: 31, scope: !5177)
!5182 = !DILocalVariable(name: "out", arg: 2, scope: !5177, file: !16, line: 382, type: !325)
!5183 = !DILocation(line: 382, column: 50, scope: !5177)
!5184 = !DILocalVariable(name: "outlen", arg: 3, scope: !5177, file: !16, line: 382, type: !299)
!5185 = !DILocation(line: 382, column: 70, scope: !5177)
!5186 = !DILocalVariable(name: "in", arg: 4, scope: !5177, file: !16, line: 383, type: !278)
!5187 = !DILocation(line: 383, column: 47, scope: !5177)
!5188 = !DILocalVariable(name: "inlen", arg: 5, scope: !5177, file: !16, line: 383, type: !280)
!5189 = !DILocation(line: 383, column: 64, scope: !5177)
!5190 = !DILocalVariable(name: "arg", arg: 6, scope: !5177, file: !16, line: 384, type: !268)
!5191 = !DILocation(line: 384, column: 32, scope: !5177)
!5192 = !DILocalVariable(name: "ctx", scope: !5177, file: !16, line: 386, type: !5193)
!5193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64, align: 64)
!5194 = !DILocation(line: 386, column: 25, scope: !5177)
!5195 = !DILocation(line: 386, column: 31, scope: !5177)
!5196 = !DILocation(line: 388, column: 10, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5177, file: !16, line: 388, column: 9)
!5198 = !DILocation(line: 388, column: 9, scope: !5177)
!5199 = !DILocalVariable(name: "i", scope: !5200, file: !16, line: 390, type: !280)
!5200 = distinct !DILexicalBlock(scope: !5197, file: !16, line: 388, column: 19)
!5201 = !DILocation(line: 390, column: 18, scope: !5200)
!5202 = !DILocation(line: 391, column: 20, scope: !5200)
!5203 = !DILocation(line: 391, column: 9, scope: !5200)
!5204 = !DILocation(line: 392, column: 16, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5200, file: !16, line: 392, column: 9)
!5206 = !DILocation(line: 392, column: 14, scope: !5205)
!5207 = !DILocation(line: 392, column: 21, scope: !5208)
!5208 = !DILexicalBlockFile(scope: !5209, file: !16, discriminator: 1)
!5209 = distinct !DILexicalBlock(scope: !5205, file: !16, line: 392, column: 9)
!5210 = !DILocation(line: 392, column: 25, scope: !5208)
!5211 = !DILocation(line: 392, column: 23, scope: !5208)
!5212 = !DILocation(line: 392, column: 9, scope: !5208)
!5213 = !DILocation(line: 393, column: 17, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5215, file: !16, line: 393, column: 17)
!5215 = distinct !DILexicalBlock(scope: !5209, file: !16, line: 392, column: 33)
!5216 = !DILocation(line: 393, column: 17, scope: !5215)
!5217 = !DILocation(line: 394, column: 27, scope: !5214)
!5218 = !DILocation(line: 394, column: 17, scope: !5214)
!5219 = !DILocation(line: 395, column: 23, scope: !5215)
!5220 = !DILocation(line: 395, column: 38, scope: !5215)
!5221 = !DILocation(line: 395, column: 40, scope: !5215)
!5222 = !DILocation(line: 395, column: 35, scope: !5215)
!5223 = !DILocation(line: 395, column: 49, scope: !5215)
!5224 = !DILocation(line: 395, column: 46, scope: !5215)
!5225 = !DILocation(line: 395, column: 13, scope: !5215)
!5226 = !DILocation(line: 396, column: 21, scope: !5215)
!5227 = !DILocation(line: 396, column: 18, scope: !5215)
!5228 = !DILocation(line: 396, column: 24, scope: !5215)
!5229 = !DILocation(line: 396, column: 15, scope: !5215)
!5230 = !DILocation(line: 392, column: 9, scope: !5231)
!5231 = !DILexicalBlockFile(scope: !5209, file: !16, discriminator: 2)
!5232 = distinct !{!5232, !5233}
!5233 = !DILocation(line: 392, column: 9, scope: !5200)
!5234 = !DILocation(line: 398, column: 19, scope: !5200)
!5235 = !DILocation(line: 398, column: 9, scope: !5200)
!5236 = !DILocation(line: 399, column: 5, scope: !5200)
!5237 = !DILocation(line: 402, column: 31, scope: !5177)
!5238 = !DILocation(line: 402, column: 36, scope: !5177)
!5239 = !DILocation(line: 402, column: 44, scope: !5177)
!5240 = !DILocation(line: 402, column: 48, scope: !5177)
!5241 = !DILocation(line: 402, column: 55, scope: !5177)
!5242 = !DILocation(line: 402, column: 60, scope: !5177)
!5243 = !DILocation(line: 402, column: 66, scope: !5177)
!5244 = !DILocation(line: 402, column: 71, scope: !5177)
!5245 = !DILocation(line: 402, column: 9, scope: !5177)
!5246 = !DILocation(line: 401, column: 5, scope: !5177)
!5247 = !DILocation(line: 401, column: 10, scope: !5177)
!5248 = !DILocation(line: 401, column: 17, scope: !5177)
!5249 = !DILocation(line: 403, column: 5, scope: !5177)
!5250 = distinct !DISubprogram(name: "serverinfo_cli_parse_cb", scope: !16, file: !16, line: 407, type: !5251, isLocal: true, isDefinition: true, scopeLine: 410, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!5251 = !DISubroutineType(types: !5252)
!5252 = !{!225, !411, !280, !278, !381, !5253, !268}
!5253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64, align: 64)
!5254 = !DILocalVariable(name: "s", arg: 1, scope: !5250, file: !16, line: 407, type: !411)
!5255 = !DILocation(line: 407, column: 41, scope: !5250)
!5256 = !DILocalVariable(name: "ext_type", arg: 2, scope: !5250, file: !16, line: 407, type: !280)
!5257 = !DILocation(line: 407, column: 57, scope: !5250)
!5258 = !DILocalVariable(name: "in", arg: 3, scope: !5250, file: !16, line: 408, type: !278)
!5259 = !DILocation(line: 408, column: 57, scope: !5250)
!5260 = !DILocalVariable(name: "inlen", arg: 4, scope: !5250, file: !16, line: 408, type: !381)
!5261 = !DILocation(line: 408, column: 68, scope: !5250)
!5262 = !DILocalVariable(name: "al", arg: 5, scope: !5250, file: !16, line: 409, type: !5253)
!5263 = !DILocation(line: 409, column: 41, scope: !5250)
!5264 = !DILocalVariable(name: "arg", arg: 6, scope: !5250, file: !16, line: 409, type: !268)
!5265 = !DILocation(line: 409, column: 51, scope: !5250)
!5266 = !DILocalVariable(name: "pem_name", scope: !5250, file: !16, line: 411, type: !5267)
!5267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 800, align: 8, elements: !686)
!5268 = !DILocation(line: 411, column: 10, scope: !5250)
!5269 = !DILocalVariable(name: "ext_buf", scope: !5250, file: !16, line: 412, type: !5270)
!5270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 524320, align: 8, elements: !5271)
!5271 = !{!5272}
!5272 = !DISubrange(count: 65540)
!5273 = !DILocation(line: 412, column: 19, scope: !5250)
!5274 = !DILocation(line: 415, column: 11, scope: !5250)
!5275 = !DILocation(line: 416, column: 34, scope: !5250)
!5276 = !DILocation(line: 416, column: 43, scope: !5250)
!5277 = !DILocation(line: 416, column: 18, scope: !5250)
!5278 = !DILocation(line: 416, column: 5, scope: !5250)
!5279 = !DILocation(line: 416, column: 16, scope: !5250)
!5280 = !DILocation(line: 417, column: 34, scope: !5250)
!5281 = !DILocation(line: 417, column: 18, scope: !5250)
!5282 = !DILocation(line: 417, column: 5, scope: !5250)
!5283 = !DILocation(line: 417, column: 16, scope: !5250)
!5284 = !DILocation(line: 418, column: 34, scope: !5250)
!5285 = !DILocation(line: 418, column: 40, scope: !5250)
!5286 = !DILocation(line: 418, column: 18, scope: !5250)
!5287 = !DILocation(line: 418, column: 5, scope: !5250)
!5288 = !DILocation(line: 418, column: 16, scope: !5250)
!5289 = !DILocation(line: 419, column: 34, scope: !5250)
!5290 = !DILocation(line: 419, column: 18, scope: !5250)
!5291 = !DILocation(line: 419, column: 5, scope: !5250)
!5292 = !DILocation(line: 419, column: 16, scope: !5250)
!5293 = !DILocation(line: 420, column: 12, scope: !5250)
!5294 = !DILocation(line: 420, column: 20, scope: !5250)
!5295 = !DILocation(line: 420, column: 25, scope: !5250)
!5296 = !DILocation(line: 420, column: 29, scope: !5250)
!5297 = !DILocation(line: 420, column: 5, scope: !5250)
!5298 = !DILocation(line: 422, column: 18, scope: !5250)
!5299 = !DILocation(line: 423, column: 18, scope: !5250)
!5300 = !DILocation(line: 422, column: 5, scope: !5250)
!5301 = !DILocation(line: 424, column: 19, scope: !5250)
!5302 = !DILocation(line: 424, column: 30, scope: !5250)
!5303 = !DILocation(line: 424, column: 44, scope: !5250)
!5304 = !DILocation(line: 424, column: 57, scope: !5250)
!5305 = !DILocation(line: 424, column: 55, scope: !5250)
!5306 = !DILocation(line: 424, column: 5, scope: !5250)
!5307 = !DILocation(line: 425, column: 5, scope: !5250)
!5308 = distinct !DISubprogram(name: "ssl_servername_cb", scope: !16, file: !16, line: 249, type: !5309, isLocal: true, isDefinition: true, scopeLine: 250, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!5309 = !DISubroutineType(types: !5310)
!5310 = !{!225, !411, !5253, !268}
!5311 = !DILocalVariable(name: "s", arg: 1, scope: !5308, file: !16, line: 249, type: !411)
!5312 = !DILocation(line: 249, column: 35, scope: !5308)
!5313 = !DILocalVariable(name: "ad", arg: 2, scope: !5308, file: !16, line: 249, type: !5253)
!5314 = !DILocation(line: 249, column: 43, scope: !5308)
!5315 = !DILocalVariable(name: "arg", arg: 3, scope: !5308, file: !16, line: 249, type: !268)
!5316 = !DILocation(line: 249, column: 53, scope: !5308)
!5317 = !DILocalVariable(name: "p", scope: !5308, file: !16, line: 251, type: !300)
!5318 = !DILocation(line: 251, column: 16, scope: !5308)
!5319 = !DILocation(line: 251, column: 34, scope: !5308)
!5320 = !DILocation(line: 251, column: 20, scope: !5308)
!5321 = !DILocalVariable(name: "hn", scope: !5308, file: !16, line: 252, type: !346)
!5322 = !DILocation(line: 252, column: 17, scope: !5308)
!5323 = !DILocation(line: 252, column: 41, scope: !5308)
!5324 = !DILocation(line: 252, column: 22, scope: !5308)
!5325 = !DILocation(line: 253, column: 33, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5308, file: !16, line: 253, column: 9)
!5327 = !DILocation(line: 253, column: 9, scope: !5326)
!5328 = !DILocation(line: 253, column: 36, scope: !5326)
!5329 = !DILocation(line: 253, column: 9, scope: !5308)
!5330 = !DILocation(line: 254, column: 38, scope: !5326)
!5331 = !DILocation(line: 254, column: 19, scope: !5326)
!5332 = !DILocation(line: 254, column: 41, scope: !5326)
!5333 = !DILocation(line: 254, column: 44, scope: !5334)
!5334 = !DILexicalBlockFile(scope: !5326, file: !16, discriminator: 1)
!5335 = !DILocation(line: 254, column: 47, scope: !5334)
!5336 = !DILocation(line: 254, column: 41, scope: !5337)
!5337 = !DILexicalBlockFile(scope: !5326, file: !16, discriminator: 2)
!5338 = !DILocation(line: 254, column: 9, scope: !5337)
!5339 = !DILocation(line: 254, column: 12, scope: !5337)
!5340 = !DILocation(line: 254, column: 16, scope: !5337)
!5341 = !DILocation(line: 256, column: 20, scope: !5326)
!5342 = !DILocation(line: 256, column: 9, scope: !5326)
!5343 = !DILocation(line: 258, column: 5, scope: !5308)
!5344 = distinct !DISubprogram(name: "ssl_give_srp_client_pwd_cb", scope: !16, file: !16, line: 351, type: !5345, isLocal: true, isDefinition: true, scopeLine: 352, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!5345 = !DISubroutineType(types: !5346)
!5346 = !{!227, !411, !268}
!5347 = !DILocalVariable(name: "s", arg: 1, scope: !5344, file: !16, line: 351, type: !411)
!5348 = !DILocation(line: 351, column: 46, scope: !5344)
!5349 = !DILocalVariable(name: "arg", arg: 2, scope: !5344, file: !16, line: 351, type: !268)
!5350 = !DILocation(line: 351, column: 55, scope: !5344)
!5351 = !DILocalVariable(name: "srp_arg", scope: !5344, file: !16, line: 353, type: !310)
!5352 = !DILocation(line: 353, column: 14, scope: !5344)
!5353 = !DILocation(line: 353, column: 35, scope: !5344)
!5354 = !DILocation(line: 353, column: 24, scope: !5344)
!5355 = !DILocalVariable(name: "pass", scope: !5344, file: !16, line: 354, type: !227)
!5356 = !DILocation(line: 354, column: 11, scope: !5344)
!5357 = !DILocation(line: 354, column: 18, scope: !5344)
!5358 = !DILocalVariable(name: "cb_tmp", scope: !5344, file: !16, line: 355, type: !5359)
!5359 = !DIDerivedType(tag: DW_TAG_typedef, name: "PW_CB_DATA", file: !5360, line: 18, baseType: !5361)
!5360 = !DIFile(filename: "apps/include/apps_ui.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!5361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pw_cb_data", file: !5360, line: 15, size: 128, align: 64, elements: !5362)
!5362 = !{!5363, !5364}
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "password", scope: !5361, file: !5360, line: 16, baseType: !288, size: 64, align: 64)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "prompt_info", scope: !5361, file: !5360, line: 17, baseType: !346, size: 64, align: 64, offset: 64)
!5365 = !DILocation(line: 355, column: 16, scope: !5344)
!5366 = !DILocalVariable(name: "l", scope: !5344, file: !16, line: 356, type: !225)
!5367 = !DILocation(line: 356, column: 9, scope: !5344)
!5368 = !DILocation(line: 358, column: 31, scope: !5344)
!5369 = !DILocation(line: 358, column: 40, scope: !5344)
!5370 = !DILocation(line: 358, column: 12, scope: !5344)
!5371 = !DILocation(line: 358, column: 21, scope: !5344)
!5372 = !DILocation(line: 359, column: 12, scope: !5344)
!5373 = !DILocation(line: 359, column: 24, scope: !5344)
!5374 = !DILocation(line: 360, column: 32, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5344, file: !16, line: 360, column: 9)
!5376 = !DILocation(line: 360, column: 14, scope: !5375)
!5377 = !DILocation(line: 360, column: 12, scope: !5375)
!5378 = !DILocation(line: 360, column: 57, scope: !5375)
!5379 = !DILocation(line: 360, column: 9, scope: !5344)
!5380 = !DILocation(line: 361, column: 20, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5375, file: !16, line: 360, column: 62)
!5382 = !DILocation(line: 361, column: 9, scope: !5381)
!5383 = !DILocation(line: 362, column: 21, scope: !5381)
!5384 = !DILocation(line: 362, column: 9, scope: !5381)
!5385 = !DILocation(line: 363, column: 9, scope: !5381)
!5386 = !DILocation(line: 365, column: 7, scope: !5344)
!5387 = !DILocation(line: 365, column: 14, scope: !5344)
!5388 = !DILocation(line: 365, column: 12, scope: !5344)
!5389 = !DILocation(line: 365, column: 17, scope: !5344)
!5390 = !DILocation(line: 367, column: 12, scope: !5344)
!5391 = !DILocation(line: 367, column: 5, scope: !5344)
!5392 = !DILocation(line: 368, column: 1, scope: !5344)
!5393 = distinct !DISubprogram(name: "ssl_srp_verify_param_cb", scope: !16, file: !16, line: 313, type: !5394, isLocal: true, isDefinition: true, scopeLine: 314, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!5394 = !DISubroutineType(types: !5395)
!5395 = !{!225, !411, !268}
!5396 = !DILocalVariable(name: "s", arg: 1, scope: !5393, file: !16, line: 313, type: !411)
!5397 = !DILocation(line: 313, column: 41, scope: !5393)
!5398 = !DILocalVariable(name: "arg", arg: 2, scope: !5393, file: !16, line: 313, type: !268)
!5399 = !DILocation(line: 313, column: 50, scope: !5393)
!5400 = !DILocalVariable(name: "srp_arg", scope: !5393, file: !16, line: 315, type: !310)
!5401 = !DILocation(line: 315, column: 14, scope: !5393)
!5402 = !DILocation(line: 315, column: 35, scope: !5393)
!5403 = !DILocation(line: 315, column: 24, scope: !5393)
!5404 = !DILocalVariable(name: "N", scope: !5393, file: !16, line: 316, type: !5405)
!5405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5406, size: 64, align: 64)
!5406 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIGNUM", file: !307, line: 80, baseType: !5407)
!5407 = !DICompositeType(tag: DW_TAG_structure_type, name: "bignum_st", file: !307, line: 80, flags: DIFlagFwdDecl)
!5408 = !DILocation(line: 316, column: 13, scope: !5393)
!5409 = !DILocalVariable(name: "g", scope: !5393, file: !16, line: 316, type: !5405)
!5410 = !DILocation(line: 316, column: 23, scope: !5393)
!5411 = !DILocation(line: 318, column: 29, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5393, file: !16, line: 318, column: 9)
!5413 = !DILocation(line: 318, column: 15, scope: !5412)
!5414 = !DILocation(line: 318, column: 13, scope: !5412)
!5415 = !DILocation(line: 318, column: 33, scope: !5412)
!5416 = !DILocation(line: 318, column: 41, scope: !5412)
!5417 = !DILocation(line: 318, column: 64, scope: !5418)
!5418 = !DILexicalBlockFile(scope: !5412, file: !16, discriminator: 1)
!5419 = !DILocation(line: 318, column: 50, scope: !5418)
!5420 = !DILocation(line: 318, column: 48, scope: !5418)
!5421 = !DILocation(line: 318, column: 68, scope: !5418)
!5422 = !DILocation(line: 318, column: 9, scope: !5418)
!5423 = !DILocation(line: 319, column: 9, scope: !5412)
!5424 = !DILocation(line: 320, column: 9, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5393, file: !16, line: 320, column: 9)
!5426 = !DILocation(line: 320, column: 18, scope: !5425)
!5427 = !DILocation(line: 320, column: 24, scope: !5425)
!5428 = !DILocation(line: 320, column: 27, scope: !5429)
!5429 = !DILexicalBlockFile(scope: !5425, file: !16, discriminator: 1)
!5430 = !DILocation(line: 320, column: 36, scope: !5429)
!5431 = !DILocation(line: 320, column: 40, scope: !5429)
!5432 = !DILocation(line: 320, column: 43, scope: !5433)
!5433 = !DILexicalBlockFile(scope: !5425, file: !16, discriminator: 2)
!5434 = !DILocation(line: 320, column: 52, scope: !5433)
!5435 = !DILocation(line: 320, column: 56, scope: !5433)
!5436 = !DILocation(line: 320, column: 9, scope: !5433)
!5437 = !DILocation(line: 321, column: 20, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5425, file: !16, line: 320, column: 62)
!5439 = !DILocation(line: 321, column: 9, scope: !5438)
!5440 = !DILocation(line: 322, column: 20, scope: !5438)
!5441 = !DILocation(line: 322, column: 9, scope: !5438)
!5442 = !DILocation(line: 323, column: 18, scope: !5438)
!5443 = !DILocation(line: 323, column: 27, scope: !5438)
!5444 = !DILocation(line: 323, column: 9, scope: !5438)
!5445 = !DILocation(line: 324, column: 20, scope: !5438)
!5446 = !DILocation(line: 324, column: 9, scope: !5438)
!5447 = !DILocation(line: 325, column: 18, scope: !5438)
!5448 = !DILocation(line: 325, column: 27, scope: !5438)
!5449 = !DILocation(line: 325, column: 9, scope: !5438)
!5450 = !DILocation(line: 326, column: 20, scope: !5438)
!5451 = !DILocation(line: 326, column: 9, scope: !5438)
!5452 = !DILocation(line: 327, column: 5, scope: !5438)
!5453 = !DILocation(line: 329, column: 34, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5393, file: !16, line: 329, column: 9)
!5455 = !DILocation(line: 329, column: 37, scope: !5454)
!5456 = !DILocation(line: 329, column: 9, scope: !5454)
!5457 = !DILocation(line: 329, column: 9, scope: !5393)
!5458 = !DILocation(line: 330, column: 9, scope: !5454)
!5459 = !DILocation(line: 332, column: 9, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5393, file: !16, line: 332, column: 9)
!5461 = !DILocation(line: 332, column: 18, scope: !5460)
!5462 = !DILocation(line: 332, column: 22, scope: !5460)
!5463 = !DILocation(line: 332, column: 9, scope: !5393)
!5464 = !DILocation(line: 333, column: 13, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5466, file: !16, line: 333, column: 13)
!5466 = distinct !DILexicalBlock(scope: !5460, file: !16, line: 332, column: 28)
!5467 = !DILocation(line: 333, column: 22, scope: !5465)
!5468 = !DILocation(line: 333, column: 13, scope: !5466)
!5469 = !DILocation(line: 334, column: 24, scope: !5465)
!5470 = !DILocation(line: 334, column: 13, scope: !5465)
!5471 = !DILocation(line: 342, column: 25, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5466, file: !16, line: 342, column: 13)
!5473 = !DILocation(line: 342, column: 13, scope: !5472)
!5474 = !DILocation(line: 342, column: 28, scope: !5472)
!5475 = !DILocation(line: 342, column: 45, scope: !5472)
!5476 = !DILocation(line: 342, column: 67, scope: !5477)
!5477 = !DILexicalBlockFile(scope: !5472, file: !16, discriminator: 1)
!5478 = !DILocation(line: 342, column: 70, scope: !5477)
!5479 = !DILocation(line: 342, column: 48, scope: !5477)
!5480 = !DILocation(line: 342, column: 13, scope: !5477)
!5481 = !DILocation(line: 343, column: 13, scope: !5472)
!5482 = !DILocation(line: 344, column: 5, scope: !5466)
!5483 = !DILocation(line: 345, column: 16, scope: !5393)
!5484 = !DILocation(line: 345, column: 5, scope: !5393)
!5485 = !DILocation(line: 346, column: 5, scope: !5393)
!5486 = !DILocation(line: 347, column: 1, scope: !5393)
!5487 = distinct !DISubprogram(name: "new_session_cb", scope: !16, file: !16, line: 853, type: !5488, isLocal: true, isDefinition: true, scopeLine: 854, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!5488 = !DISubroutineType(types: !5489)
!5489 = !{!225, !411, !404}
!5490 = !DILocalVariable(name: "s", arg: 1, scope: !5487, file: !16, line: 853, type: !411)
!5491 = !DILocation(line: 853, column: 32, scope: !5487)
!5492 = !DILocalVariable(name: "sess", arg: 2, scope: !5487, file: !16, line: 853, type: !404)
!5493 = !DILocation(line: 853, column: 48, scope: !5487)
!5494 = !DILocation(line: 856, column: 9, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5487, file: !16, line: 856, column: 9)
!5496 = !DILocation(line: 856, column: 18, scope: !5495)
!5497 = !DILocation(line: 856, column: 9, scope: !5487)
!5498 = !DILocalVariable(name: "stmp", scope: !5499, file: !16, line: 857, type: !305)
!5499 = distinct !DILexicalBlock(scope: !5495, file: !16, line: 856, column: 26)
!5500 = !DILocation(line: 857, column: 14, scope: !5499)
!5501 = !DILocation(line: 857, column: 34, scope: !5499)
!5502 = !DILocation(line: 857, column: 21, scope: !5499)
!5503 = !DILocation(line: 859, column: 13, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5499, file: !16, line: 859, column: 13)
!5505 = !DILocation(line: 859, column: 18, scope: !5504)
!5506 = !DILocation(line: 859, column: 13, scope: !5499)
!5507 = !DILocation(line: 860, column: 24, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5504, file: !16, line: 859, column: 26)
!5509 = !DILocation(line: 860, column: 68, scope: !5508)
!5510 = !DILocation(line: 860, column: 13, scope: !5508)
!5511 = !DILocation(line: 861, column: 9, scope: !5508)
!5512 = !DILocation(line: 862, column: 39, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5504, file: !16, line: 861, column: 16)
!5514 = !DILocation(line: 862, column: 45, scope: !5513)
!5515 = !DILocation(line: 862, column: 13, scope: !5513)
!5516 = !DILocation(line: 863, column: 22, scope: !5513)
!5517 = !DILocation(line: 863, column: 13, scope: !5513)
!5518 = !DILocation(line: 865, column: 5, scope: !5499)
!5519 = !DILocation(line: 871, column: 21, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5487, file: !16, line: 871, column: 9)
!5521 = !DILocation(line: 871, column: 9, scope: !5520)
!5522 = !DILocation(line: 871, column: 24, scope: !5520)
!5523 = !DILocation(line: 871, column: 9, scope: !5487)
!5524 = !DILocation(line: 872, column: 20, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5520, file: !16, line: 871, column: 35)
!5526 = !DILocation(line: 872, column: 9, scope: !5525)
!5527 = !DILocation(line: 874, column: 27, scope: !5525)
!5528 = !DILocation(line: 874, column: 38, scope: !5525)
!5529 = !DILocation(line: 874, column: 9, scope: !5525)
!5530 = !DILocation(line: 875, column: 20, scope: !5525)
!5531 = !DILocation(line: 875, column: 9, scope: !5525)
!5532 = !DILocation(line: 876, column: 5, scope: !5525)
!5533 = !DILocation(line: 882, column: 5, scope: !5487)
!5534 = distinct !DISubprogram(name: "tlsa_import_rrset", scope: !16, file: !16, line: 551, type: !5535, isLocal: true, isDefinition: true, scopeLine: 552, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!5535 = !DISubroutineType(types: !5536)
!5536 = !{!225, !411, !281}
!5537 = !DILocalVariable(name: "con", arg: 1, scope: !5534, file: !16, line: 551, type: !411)
!5538 = !DILocation(line: 551, column: 35, scope: !5534)
!5539 = !DILocalVariable(name: "rrset", arg: 2, scope: !5534, file: !16, line: 551, type: !281)
!5540 = !DILocation(line: 551, column: 72, scope: !5534)
!5541 = !DILocalVariable(name: "num", scope: !5534, file: !16, line: 553, type: !225)
!5542 = !DILocation(line: 553, column: 9, scope: !5534)
!5543 = !DILocation(line: 553, column: 37, scope: !5534)
!5544 = !DILocation(line: 553, column: 15, scope: !5534)
!5545 = !DILocalVariable(name: "count", scope: !5534, file: !16, line: 554, type: !225)
!5546 = !DILocation(line: 554, column: 9, scope: !5534)
!5547 = !DILocalVariable(name: "i", scope: !5534, file: !16, line: 555, type: !225)
!5548 = !DILocation(line: 555, column: 9, scope: !5534)
!5549 = !DILocation(line: 557, column: 12, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5534, file: !16, line: 557, column: 5)
!5551 = !DILocation(line: 557, column: 10, scope: !5550)
!5552 = !DILocation(line: 557, column: 17, scope: !5553)
!5553 = !DILexicalBlockFile(scope: !5554, file: !16, discriminator: 1)
!5554 = distinct !DILexicalBlock(scope: !5550, file: !16, line: 557, column: 5)
!5555 = !DILocation(line: 557, column: 21, scope: !5553)
!5556 = !DILocation(line: 557, column: 19, scope: !5553)
!5557 = !DILocation(line: 557, column: 5, scope: !5553)
!5558 = !DILocalVariable(name: "rrdata", scope: !5559, file: !16, line: 558, type: !227)
!5559 = distinct !DILexicalBlock(scope: !5554, file: !16, line: 557, column: 31)
!5560 = !DILocation(line: 558, column: 15, scope: !5559)
!5561 = !DILocation(line: 558, column: 48, scope: !5559)
!5562 = !DILocation(line: 558, column: 55, scope: !5559)
!5563 = !DILocation(line: 558, column: 24, scope: !5559)
!5564 = !DILocation(line: 559, column: 28, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5559, file: !16, line: 559, column: 13)
!5566 = !DILocation(line: 559, column: 33, scope: !5565)
!5567 = !DILocation(line: 559, column: 13, scope: !5565)
!5568 = !DILocation(line: 559, column: 41, scope: !5565)
!5569 = !DILocation(line: 559, column: 13, scope: !5559)
!5570 = !DILocation(line: 560, column: 13, scope: !5565)
!5571 = !DILocation(line: 561, column: 5, scope: !5559)
!5572 = !DILocation(line: 557, column: 26, scope: !5573)
!5573 = !DILexicalBlockFile(scope: !5554, file: !16, discriminator: 2)
!5574 = !DILocation(line: 557, column: 5, scope: !5573)
!5575 = distinct !{!5575, !5576}
!5576 = !DILocation(line: 557, column: 5, scope: !5534)
!5577 = !DILocation(line: 562, column: 12, scope: !5534)
!5578 = !DILocation(line: 562, column: 18, scope: !5534)
!5579 = !DILocation(line: 562, column: 5, scope: !5534)
!5580 = distinct !DISubprogram(name: "ocsp_resp_cb", scope: !16, file: !16, line: 3425, type: !5394, isLocal: true, isDefinition: true, scopeLine: 3426, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!5581 = !DILocalVariable(name: "s", arg: 1, scope: !5580, file: !16, line: 3425, type: !411)
!5582 = !DILocation(line: 3425, column: 30, scope: !5580)
!5583 = !DILocalVariable(name: "arg", arg: 2, scope: !5580, file: !16, line: 3425, type: !268)
!5584 = !DILocation(line: 3425, column: 39, scope: !5580)
!5585 = !DILocalVariable(name: "p", scope: !5580, file: !16, line: 3427, type: !278)
!5586 = !DILocation(line: 3427, column: 26, scope: !5580)
!5587 = !DILocalVariable(name: "len", scope: !5580, file: !16, line: 3428, type: !225)
!5588 = !DILocation(line: 3428, column: 9, scope: !5580)
!5589 = !DILocalVariable(name: "rsp", scope: !5580, file: !16, line: 3429, type: !5590)
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5591, size: 64, align: 64)
!5591 = !DIDerivedType(tag: DW_TAG_typedef, name: "OCSP_RESPONSE", file: !307, line: 170, baseType: !5592)
!5592 = !DICompositeType(tag: DW_TAG_structure_type, name: "ocsp_response_st", file: !307, line: 170, flags: DIFlagFwdDecl)
!5593 = !DILocation(line: 3429, column: 20, scope: !5580)
!5594 = !DILocation(line: 3430, column: 20, scope: !5580)
!5595 = !DILocation(line: 3430, column: 27, scope: !5580)
!5596 = !DILocation(line: 3430, column: 11, scope: !5580)
!5597 = !DILocation(line: 3430, column: 9, scope: !5580)
!5598 = !DILocation(line: 3431, column: 14, scope: !5580)
!5599 = !DILocation(line: 3431, column: 5, scope: !5580)
!5600 = !DILocation(line: 3432, column: 9, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5580, file: !16, line: 3432, column: 9)
!5602 = !DILocation(line: 3432, column: 11, scope: !5601)
!5603 = !DILocation(line: 3432, column: 9, scope: !5580)
!5604 = !DILocation(line: 3433, column: 18, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5601, file: !16, line: 3432, column: 19)
!5606 = !DILocation(line: 3433, column: 9, scope: !5605)
!5607 = !DILocation(line: 3434, column: 9, scope: !5605)
!5608 = !DILocation(line: 3436, column: 38, scope: !5580)
!5609 = !DILocation(line: 3436, column: 11, scope: !5580)
!5610 = !DILocation(line: 3436, column: 9, scope: !5580)
!5611 = !DILocation(line: 3437, column: 9, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5580, file: !16, line: 3437, column: 9)
!5613 = !DILocation(line: 3437, column: 13, scope: !5612)
!5614 = !DILocation(line: 3437, column: 9, scope: !5580)
!5615 = !DILocation(line: 3438, column: 18, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5612, file: !16, line: 3437, column: 21)
!5617 = !DILocation(line: 3438, column: 9, scope: !5616)
!5618 = !DILocation(line: 3439, column: 25, scope: !5616)
!5619 = !DILocation(line: 3439, column: 38, scope: !5616)
!5620 = !DILocation(line: 3439, column: 41, scope: !5616)
!5621 = !DILocation(line: 3439, column: 9, scope: !5616)
!5622 = !DILocation(line: 3440, column: 9, scope: !5616)
!5623 = !DILocation(line: 3442, column: 14, scope: !5580)
!5624 = !DILocation(line: 3442, column: 5, scope: !5580)
!5625 = !DILocation(line: 3443, column: 25, scope: !5580)
!5626 = !DILocation(line: 3443, column: 30, scope: !5580)
!5627 = !DILocation(line: 3443, column: 5, scope: !5580)
!5628 = !DILocation(line: 3444, column: 14, scope: !5580)
!5629 = !DILocation(line: 3444, column: 5, scope: !5580)
!5630 = !DILocation(line: 3445, column: 24, scope: !5580)
!5631 = !DILocation(line: 3445, column: 5, scope: !5580)
!5632 = !DILocation(line: 3446, column: 5, scope: !5580)
!5633 = !DILocation(line: 3447, column: 1, scope: !5580)
!5634 = distinct !DISubprogram(name: "base64encode", scope: !16, file: !16, line: 3537, type: !5635, isLocal: true, isDefinition: true, scopeLine: 3538, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!5635 = !DISubroutineType(types: !5636)
!5636 = !{!227, !288, !381}
!5637 = !DILocalVariable(name: "buf", arg: 1, scope: !5634, file: !16, line: 3537, type: !288)
!5638 = !DILocation(line: 3537, column: 40, scope: !5634)
!5639 = !DILocalVariable(name: "len", arg: 2, scope: !5634, file: !16, line: 3537, type: !381)
!5640 = !DILocation(line: 3537, column: 52, scope: !5634)
!5641 = !DILocalVariable(name: "i", scope: !5634, file: !16, line: 3539, type: !225)
!5642 = !DILocation(line: 3539, column: 9, scope: !5634)
!5643 = !DILocalVariable(name: "outl", scope: !5634, file: !16, line: 3540, type: !381)
!5644 = !DILocation(line: 3540, column: 12, scope: !5634)
!5645 = !DILocalVariable(name: "out", scope: !5634, file: !16, line: 3541, type: !227)
!5646 = !DILocation(line: 3541, column: 11, scope: !5634)
!5647 = !DILocation(line: 3544, column: 13, scope: !5634)
!5648 = !DILocation(line: 3544, column: 17, scope: !5634)
!5649 = !DILocation(line: 3544, column: 10, scope: !5634)
!5650 = !DILocation(line: 3545, column: 9, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5634, file: !16, line: 3545, column: 9)
!5652 = !DILocation(line: 3545, column: 13, scope: !5651)
!5653 = !DILocation(line: 3545, column: 17, scope: !5651)
!5654 = !DILocation(line: 3545, column: 9, scope: !5634)
!5655 = !DILocation(line: 3546, column: 13, scope: !5651)
!5656 = !DILocation(line: 3546, column: 9, scope: !5651)
!5657 = !DILocation(line: 3547, column: 10, scope: !5634)
!5658 = !DILocation(line: 3548, column: 22, scope: !5634)
!5659 = !DILocation(line: 3548, column: 27, scope: !5634)
!5660 = !DILocation(line: 3548, column: 11, scope: !5634)
!5661 = !DILocation(line: 3548, column: 9, scope: !5634)
!5662 = !DILocation(line: 3550, column: 42, scope: !5634)
!5663 = !DILocation(line: 3550, column: 47, scope: !5634)
!5664 = !DILocation(line: 3550, column: 52, scope: !5634)
!5665 = !DILocation(line: 3550, column: 9, scope: !5634)
!5666 = !DILocation(line: 3550, column: 7, scope: !5634)
!5667 = !DILocation(line: 3552, column: 9, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5634, file: !16, line: 3552, column: 9)
!5669 = !DILocation(line: 3552, column: 11, scope: !5668)
!5670 = !DILocation(line: 3552, column: 9, scope: !5634)
!5671 = !DILocation(line: 3553, column: 10, scope: !5668)
!5672 = !DILocation(line: 3553, column: 14, scope: !5668)
!5673 = !DILocation(line: 3553, column: 9, scope: !5668)
!5674 = !DILocation(line: 3554, column: 12, scope: !5634)
!5675 = !DILocation(line: 3554, column: 5, scope: !5634)
!5676 = distinct !DISubprogram(name: "ldap_ExtendedResponse_parse", scope: !16, file: !16, line: 3450, type: !5677, isLocal: true, isDefinition: true, scopeLine: 3451, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!5677 = !DISubroutineType(types: !5678)
!5678 = !{!225, !346, !277}
!5679 = !DILocalVariable(name: "buf", arg: 1, scope: !5676, file: !16, line: 3450, type: !346)
!5680 = !DILocation(line: 3450, column: 52, scope: !5676)
!5681 = !DILocalVariable(name: "rem", arg: 2, scope: !5676, file: !16, line: 3450, type: !277)
!5682 = !DILocation(line: 3450, column: 62, scope: !5676)
!5683 = !DILocalVariable(name: "cur", scope: !5676, file: !16, line: 3452, type: !278)
!5684 = !DILocation(line: 3452, column: 26, scope: !5676)
!5685 = !DILocalVariable(name: "end", scope: !5676, file: !16, line: 3452, type: !278)
!5686 = !DILocation(line: 3452, column: 32, scope: !5676)
!5687 = !DILocalVariable(name: "len", scope: !5676, file: !16, line: 3453, type: !277)
!5688 = !DILocation(line: 3453, column: 10, scope: !5676)
!5689 = !DILocalVariable(name: "tag", scope: !5676, file: !16, line: 3454, type: !225)
!5690 = !DILocation(line: 3454, column: 9, scope: !5676)
!5691 = !DILocalVariable(name: "xclass", scope: !5676, file: !16, line: 3454, type: !225)
!5692 = !DILocation(line: 3454, column: 14, scope: !5676)
!5693 = !DILocalVariable(name: "inf", scope: !5676, file: !16, line: 3454, type: !225)
!5694 = !DILocation(line: 3454, column: 22, scope: !5676)
!5695 = !DILocalVariable(name: "ret", scope: !5676, file: !16, line: 3454, type: !225)
!5696 = !DILocation(line: 3454, column: 27, scope: !5676)
!5697 = !DILocation(line: 3456, column: 34, scope: !5676)
!5698 = !DILocation(line: 3456, column: 9, scope: !5676)
!5699 = !DILocation(line: 3457, column: 11, scope: !5676)
!5700 = !DILocation(line: 3457, column: 17, scope: !5676)
!5701 = !DILocation(line: 3457, column: 15, scope: !5676)
!5702 = !DILocation(line: 3457, column: 9, scope: !5676)
!5703 = !DILocation(line: 3487, column: 54, scope: !5676)
!5704 = !DILocation(line: 3487, column: 11, scope: !5676)
!5705 = !DILocation(line: 3487, column: 9, scope: !5676)
!5706 = !DILocation(line: 3488, column: 9, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5676, file: !16, line: 3488, column: 9)
!5708 = !DILocation(line: 3488, column: 13, scope: !5707)
!5709 = !DILocation(line: 3488, column: 21, scope: !5707)
!5710 = !DILocation(line: 3488, column: 24, scope: !5711)
!5711 = !DILexicalBlockFile(scope: !5707, file: !16, discriminator: 1)
!5712 = !DILocation(line: 3488, column: 28, scope: !5711)
!5713 = !DILocation(line: 3488, column: 34, scope: !5711)
!5714 = !DILocation(line: 3489, column: 16, scope: !5707)
!5715 = !DILocation(line: 3489, column: 22, scope: !5707)
!5716 = !DILocation(line: 3489, column: 20, scope: !5707)
!5717 = !DILocation(line: 3489, column: 14, scope: !5707)
!5718 = !DILocation(line: 3489, column: 27, scope: !5707)
!5719 = !DILocation(line: 3489, column: 33, scope: !5707)
!5720 = !DILocation(line: 3489, column: 31, scope: !5707)
!5721 = !DILocation(line: 3488, column: 9, scope: !5722)
!5722 = !DILexicalBlockFile(scope: !5676, file: !16, discriminator: 2)
!5723 = !DILocation(line: 3490, column: 20, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5707, file: !16, line: 3489, column: 39)
!5725 = !DILocation(line: 3490, column: 9, scope: !5724)
!5726 = !DILocation(line: 3491, column: 9, scope: !5724)
!5727 = !DILocation(line: 3494, column: 11, scope: !5676)
!5728 = !DILocation(line: 3494, column: 9, scope: !5676)
!5729 = !DILocation(line: 3497, column: 54, scope: !5676)
!5730 = !DILocation(line: 3497, column: 11, scope: !5676)
!5731 = !DILocation(line: 3497, column: 9, scope: !5676)
!5732 = !DILocation(line: 3498, column: 9, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5676, file: !16, line: 3498, column: 9)
!5734 = !DILocation(line: 3498, column: 13, scope: !5733)
!5735 = !DILocation(line: 3498, column: 21, scope: !5733)
!5736 = !DILocation(line: 3498, column: 24, scope: !5737)
!5737 = !DILexicalBlockFile(scope: !5733, file: !16, discriminator: 1)
!5738 = !DILocation(line: 3498, column: 28, scope: !5737)
!5739 = !DILocation(line: 3498, column: 33, scope: !5737)
!5740 = !DILocation(line: 3499, column: 16, scope: !5733)
!5741 = !DILocation(line: 3499, column: 22, scope: !5733)
!5742 = !DILocation(line: 3499, column: 20, scope: !5733)
!5743 = !DILocation(line: 3499, column: 14, scope: !5733)
!5744 = !DILocation(line: 3499, column: 27, scope: !5733)
!5745 = !DILocation(line: 3499, column: 33, scope: !5733)
!5746 = !DILocation(line: 3499, column: 31, scope: !5733)
!5747 = !DILocation(line: 3498, column: 9, scope: !5722)
!5748 = !DILocation(line: 3500, column: 20, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5733, file: !16, line: 3499, column: 39)
!5750 = !DILocation(line: 3500, column: 9, scope: !5749)
!5751 = !DILocation(line: 3501, column: 9, scope: !5749)
!5752 = !DILocation(line: 3504, column: 12, scope: !5676)
!5753 = !DILocation(line: 3504, column: 9, scope: !5676)
!5754 = !DILocation(line: 3507, column: 11, scope: !5676)
!5755 = !DILocation(line: 3507, column: 17, scope: !5676)
!5756 = !DILocation(line: 3507, column: 15, scope: !5676)
!5757 = !DILocation(line: 3507, column: 9, scope: !5676)
!5758 = !DILocation(line: 3508, column: 54, scope: !5676)
!5759 = !DILocation(line: 3508, column: 11, scope: !5676)
!5760 = !DILocation(line: 3508, column: 9, scope: !5676)
!5761 = !DILocation(line: 3509, column: 9, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5676, file: !16, line: 3509, column: 9)
!5763 = !DILocation(line: 3509, column: 13, scope: !5762)
!5764 = !DILocation(line: 3509, column: 21, scope: !5762)
!5765 = !DILocation(line: 3509, column: 24, scope: !5766)
!5766 = !DILexicalBlockFile(scope: !5762, file: !16, discriminator: 1)
!5767 = !DILocation(line: 3509, column: 31, scope: !5766)
!5768 = !DILocation(line: 3509, column: 39, scope: !5766)
!5769 = !DILocation(line: 3510, column: 9, scope: !5762)
!5770 = !DILocation(line: 3510, column: 13, scope: !5762)
!5771 = !DILocation(line: 3509, column: 9, scope: !5722)
!5772 = !DILocation(line: 3511, column: 20, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5762, file: !16, line: 3510, column: 20)
!5774 = !DILocation(line: 3511, column: 9, scope: !5773)
!5775 = !DILocation(line: 3512, column: 9, scope: !5773)
!5776 = !DILocation(line: 3516, column: 11, scope: !5676)
!5777 = !DILocation(line: 3516, column: 17, scope: !5676)
!5778 = !DILocation(line: 3516, column: 15, scope: !5676)
!5779 = !DILocation(line: 3516, column: 9, scope: !5676)
!5780 = !DILocation(line: 3517, column: 54, scope: !5676)
!5781 = !DILocation(line: 3517, column: 11, scope: !5676)
!5782 = !DILocation(line: 3517, column: 9, scope: !5676)
!5783 = !DILocation(line: 3518, column: 9, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5676, file: !16, line: 3518, column: 9)
!5785 = !DILocation(line: 3518, column: 13, scope: !5784)
!5786 = !DILocation(line: 3518, column: 21, scope: !5784)
!5787 = !DILocation(line: 3518, column: 24, scope: !5788)
!5788 = !DILexicalBlockFile(scope: !5784, file: !16, discriminator: 1)
!5789 = !DILocation(line: 3518, column: 28, scope: !5788)
!5790 = !DILocation(line: 3518, column: 34, scope: !5788)
!5791 = !DILocation(line: 3518, column: 37, scope: !5792)
!5792 = !DILexicalBlockFile(scope: !5784, file: !16, discriminator: 2)
!5793 = !DILocation(line: 3518, column: 41, scope: !5792)
!5794 = !DILocation(line: 3518, column: 46, scope: !5792)
!5795 = !DILocation(line: 3519, column: 16, scope: !5784)
!5796 = !DILocation(line: 3519, column: 22, scope: !5784)
!5797 = !DILocation(line: 3519, column: 20, scope: !5784)
!5798 = !DILocation(line: 3519, column: 14, scope: !5784)
!5799 = !DILocation(line: 3519, column: 27, scope: !5784)
!5800 = !DILocation(line: 3519, column: 33, scope: !5784)
!5801 = !DILocation(line: 3519, column: 31, scope: !5784)
!5802 = !DILocation(line: 3518, column: 9, scope: !5803)
!5803 = !DILexicalBlockFile(scope: !5676, file: !16, discriminator: 3)
!5804 = !DILocation(line: 3520, column: 20, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5784, file: !16, line: 3519, column: 39)
!5806 = !DILocation(line: 3520, column: 9, scope: !5805)
!5807 = !DILocation(line: 3521, column: 9, scope: !5805)
!5808 = !DILocation(line: 3525, column: 14, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5676, file: !16, line: 3525, column: 5)
!5810 = !DILocation(line: 3525, column: 23, scope: !5809)
!5811 = !DILocation(line: 3525, column: 10, scope: !5809)
!5812 = !DILocation(line: 3525, column: 28, scope: !5813)
!5813 = !DILexicalBlockFile(scope: !5814, file: !16, discriminator: 1)
!5814 = distinct !DILexicalBlock(scope: !5809, file: !16, line: 3525, column: 5)
!5815 = !DILocation(line: 3525, column: 34, scope: !5813)
!5816 = !DILocation(line: 3525, column: 32, scope: !5813)
!5817 = !DILocation(line: 3525, column: 5, scope: !5813)
!5818 = !DILocation(line: 3526, column: 13, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5814, file: !16, line: 3525, column: 46)
!5820 = !DILocation(line: 3527, column: 20, scope: !5819)
!5821 = !DILocation(line: 3527, column: 16, scope: !5819)
!5822 = !DILocation(line: 3527, column: 13, scope: !5819)
!5823 = !DILocation(line: 3528, column: 5, scope: !5819)
!5824 = !DILocation(line: 3525, column: 42, scope: !5825)
!5825 = !DILexicalBlockFile(scope: !5814, file: !16, discriminator: 2)
!5826 = !DILocation(line: 3525, column: 5, scope: !5825)
!5827 = distinct !{!5827, !5828}
!5828 = !DILocation(line: 3525, column: 5, scope: !5676)
!5829 = !DILocation(line: 3528, column: 5, scope: !5830)
!5830 = !DILexicalBlockFile(scope: !5809, file: !16, discriminator: 1)
!5831 = !DILocation(line: 3531, column: 12, scope: !5676)
!5832 = !DILocation(line: 3531, column: 5, scope: !5676)
!5833 = distinct !DISubprogram(name: "print_stuff", scope: !16, file: !16, line: 3203, type: !5834, isLocal: true, isDefinition: true, scopeLine: 3204, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!5834 = !DISubroutineType(types: !5835)
!5835 = !{null, !305, !411, !225}
!5836 = !DILocalVariable(name: "bio", arg: 1, scope: !5833, file: !16, line: 3203, type: !305)
!5837 = !DILocation(line: 3203, column: 30, scope: !5833)
!5838 = !DILocalVariable(name: "s", arg: 2, scope: !5833, file: !16, line: 3203, type: !411)
!5839 = !DILocation(line: 3203, column: 40, scope: !5833)
!5840 = !DILocalVariable(name: "full", arg: 3, scope: !5833, file: !16, line: 3203, type: !225)
!5841 = !DILocation(line: 3203, column: 47, scope: !5833)
!5842 = !DILocalVariable(name: "peer", scope: !5833, file: !16, line: 3205, type: !326)
!5843 = !DILocation(line: 3205, column: 11, scope: !5833)
!5844 = !DILocalVariable(name: "sk", scope: !5833, file: !16, line: 3206, type: !458)
!5845 = !DILocation(line: 3206, column: 27, scope: !5833)
!5846 = !DILocalVariable(name: "c", scope: !5833, file: !16, line: 3207, type: !5063)
!5847 = !DILocation(line: 3207, column: 23, scope: !5833)
!5848 = !DILocalVariable(name: "i", scope: !5833, file: !16, line: 3208, type: !225)
!5849 = !DILocation(line: 3208, column: 9, scope: !5833)
!5850 = !DILocalVariable(name: "istls13", scope: !5833, file: !16, line: 3208, type: !225)
!5851 = !DILocation(line: 3208, column: 12, scope: !5833)
!5852 = !DILocation(line: 3208, column: 35, scope: !5833)
!5853 = !DILocation(line: 3208, column: 23, scope: !5833)
!5854 = !DILocation(line: 3208, column: 38, scope: !5833)
!5855 = !DILocalVariable(name: "verify_result", scope: !5833, file: !16, line: 3209, type: !277)
!5856 = !DILocation(line: 3209, column: 10, scope: !5833)
!5857 = !DILocalVariable(name: "comp", scope: !5833, file: !16, line: 3211, type: !5858)
!5858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5859, size: 64, align: 64)
!5859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5860)
!5860 = !DIDerivedType(tag: DW_TAG_typedef, name: "COMP_METHOD", file: !307, line: 155, baseType: !5861)
!5861 = !DICompositeType(tag: DW_TAG_structure_type, name: "comp_method_st", file: !307, line: 155, flags: DIFlagFwdDecl)
!5862 = !DILocation(line: 3211, column: 24, scope: !5833)
!5863 = !DILocalVariable(name: "expansion", scope: !5833, file: !16, line: 3211, type: !5858)
!5864 = !DILocation(line: 3211, column: 31, scope: !5833)
!5865 = !DILocalVariable(name: "exportedkeymat", scope: !5833, file: !16, line: 3213, type: !299)
!5866 = !DILocation(line: 3213, column: 20, scope: !5833)
!5867 = !DILocalVariable(name: "ctx", scope: !5833, file: !16, line: 3215, type: !5868)
!5868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5869, size: 64, align: 64)
!5869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !454)
!5870 = !DILocation(line: 3215, column: 20, scope: !5833)
!5871 = !DILocation(line: 3215, column: 42, scope: !5833)
!5872 = !DILocation(line: 3215, column: 26, scope: !5833)
!5873 = !DILocation(line: 3218, column: 9, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5833, file: !16, line: 3218, column: 9)
!5875 = !DILocation(line: 3218, column: 9, scope: !5833)
!5876 = !DILocalVariable(name: "got_a_chain", scope: !5877, file: !16, line: 3219, type: !225)
!5877 = distinct !DILexicalBlock(scope: !5874, file: !16, line: 3218, column: 15)
!5878 = !DILocation(line: 3219, column: 13, scope: !5877)
!5879 = !DILocation(line: 3221, column: 38, scope: !5877)
!5880 = !DILocation(line: 3221, column: 14, scope: !5877)
!5881 = !DILocation(line: 3221, column: 12, scope: !5877)
!5882 = !DILocation(line: 3222, column: 13, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5877, file: !16, line: 3222, column: 13)
!5884 = !DILocation(line: 3222, column: 16, scope: !5883)
!5885 = !DILocation(line: 3222, column: 13, scope: !5877)
!5886 = !DILocation(line: 3223, column: 25, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5883, file: !16, line: 3222, column: 24)
!5888 = !DILocation(line: 3225, column: 24, scope: !5887)
!5889 = !DILocation(line: 3225, column: 13, scope: !5887)
!5890 = !DILocation(line: 3226, column: 20, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5887, file: !16, line: 3226, column: 13)
!5892 = !DILocation(line: 3226, column: 18, scope: !5891)
!5893 = !DILocation(line: 3226, column: 25, scope: !5894)
!5894 = !DILexicalBlockFile(scope: !5895, file: !16, discriminator: 1)
!5895 = distinct !DILexicalBlock(scope: !5891, file: !16, line: 3226, column: 13)
!5896 = !DILocation(line: 3226, column: 41, scope: !5894)
!5897 = !DILocation(line: 3226, column: 29, scope: !5894)
!5898 = !DILocation(line: 3226, column: 27, scope: !5894)
!5899 = !DILocation(line: 3226, column: 13, scope: !5894)
!5900 = !DILocation(line: 3227, column: 28, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5895, file: !16, line: 3226, column: 51)
!5902 = !DILocation(line: 3227, column: 43, scope: !5901)
!5903 = !DILocation(line: 3227, column: 17, scope: !5901)
!5904 = !DILocation(line: 3228, column: 36, scope: !5901)
!5905 = !DILocation(line: 3228, column: 77, scope: !5901)
!5906 = !DILocation(line: 3228, column: 81, scope: !5901)
!5907 = !DILocation(line: 3228, column: 63, scope: !5901)
!5908 = !DILocation(line: 3228, column: 41, scope: !5909)
!5909 = !DILexicalBlockFile(scope: !5901, file: !16, discriminator: 1)
!5910 = !DILocation(line: 3228, column: 89, scope: !5911)
!5911 = !DILexicalBlockFile(scope: !5901, file: !16, discriminator: 2)
!5912 = !DILocation(line: 3228, column: 17, scope: !5913)
!5913 = !DILexicalBlockFile(scope: !5901, file: !16, discriminator: 3)
!5914 = !DILocation(line: 3229, column: 26, scope: !5901)
!5915 = !DILocation(line: 3229, column: 17, scope: !5901)
!5916 = !DILocation(line: 3230, column: 28, scope: !5901)
!5917 = !DILocation(line: 3230, column: 17, scope: !5901)
!5918 = !DILocation(line: 3231, column: 36, scope: !5901)
!5919 = !DILocation(line: 3231, column: 76, scope: !5901)
!5920 = !DILocation(line: 3231, column: 80, scope: !5901)
!5921 = !DILocation(line: 3231, column: 62, scope: !5901)
!5922 = !DILocation(line: 3231, column: 41, scope: !5909)
!5923 = !DILocation(line: 3231, column: 88, scope: !5911)
!5924 = !DILocation(line: 3231, column: 17, scope: !5913)
!5925 = !DILocation(line: 3232, column: 26, scope: !5901)
!5926 = !DILocation(line: 3232, column: 17, scope: !5901)
!5927 = !DILocation(line: 3233, column: 21, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5901, file: !16, line: 3233, column: 21)
!5929 = !DILocation(line: 3233, column: 21, scope: !5901)
!5930 = !DILocation(line: 3234, column: 40, scope: !5928)
!5931 = !DILocation(line: 3234, column: 59, scope: !5928)
!5932 = !DILocation(line: 3234, column: 63, scope: !5928)
!5933 = !DILocation(line: 3234, column: 45, scope: !5928)
!5934 = !DILocation(line: 3234, column: 21, scope: !5935)
!5935 = !DILexicalBlockFile(scope: !5928, file: !16, discriminator: 1)
!5936 = !DILocation(line: 3234, column: 21, scope: !5928)
!5937 = !DILocation(line: 3235, column: 13, scope: !5901)
!5938 = !DILocation(line: 3226, column: 47, scope: !5939)
!5939 = !DILexicalBlockFile(scope: !5895, file: !16, discriminator: 2)
!5940 = !DILocation(line: 3226, column: 13, scope: !5939)
!5941 = distinct !{!5941, !5942}
!5942 = !DILocation(line: 3226, column: 13, scope: !5887)
!5943 = !DILocation(line: 3236, column: 9, scope: !5887)
!5944 = !DILocation(line: 3238, column: 20, scope: !5877)
!5945 = !DILocation(line: 3238, column: 9, scope: !5877)
!5946 = !DILocation(line: 3239, column: 41, scope: !5877)
!5947 = !DILocation(line: 3239, column: 16, scope: !5877)
!5948 = !DILocation(line: 3239, column: 14, scope: !5877)
!5949 = !DILocation(line: 3240, column: 13, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5877, file: !16, line: 3240, column: 13)
!5951 = !DILocation(line: 3240, column: 18, scope: !5950)
!5952 = !DILocation(line: 3240, column: 13, scope: !5877)
!5953 = !DILocation(line: 3241, column: 24, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5950, file: !16, line: 3240, column: 26)
!5955 = !DILocation(line: 3241, column: 13, scope: !5954)
!5956 = !DILocation(line: 3244, column: 19, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5954, file: !16, line: 3244, column: 17)
!5958 = !DILocation(line: 3244, column: 31, scope: !5957)
!5959 = !DILocation(line: 3244, column: 34, scope: !5960)
!5960 = !DILexicalBlockFile(scope: !5957, file: !16, discriminator: 1)
!5961 = !DILocation(line: 3244, column: 17, scope: !5960)
!5962 = !DILocation(line: 3245, column: 36, scope: !5957)
!5963 = !DILocation(line: 3245, column: 41, scope: !5957)
!5964 = !DILocation(line: 3245, column: 17, scope: !5957)
!5965 = !DILocation(line: 3246, column: 28, scope: !5954)
!5966 = !DILocation(line: 3246, column: 33, scope: !5954)
!5967 = !DILocation(line: 3246, column: 13, scope: !5954)
!5968 = !DILocation(line: 3247, column: 9, scope: !5954)
!5969 = !DILocation(line: 3248, column: 24, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5950, file: !16, line: 3247, column: 16)
!5971 = !DILocation(line: 3248, column: 13, scope: !5970)
!5972 = !DILocation(line: 3250, column: 24, scope: !5877)
!5973 = !DILocation(line: 3250, column: 29, scope: !5877)
!5974 = !DILocation(line: 3250, column: 9, scope: !5877)
!5975 = !DILocation(line: 3252, column: 27, scope: !5877)
!5976 = !DILocation(line: 3252, column: 32, scope: !5877)
!5977 = !DILocation(line: 3252, column: 9, scope: !5877)
!5978 = !DILocation(line: 3253, column: 27, scope: !5877)
!5979 = !DILocation(line: 3253, column: 32, scope: !5877)
!5980 = !DILocation(line: 3253, column: 9, scope: !5877)
!5981 = !DILocation(line: 3265, column: 13, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5877, file: !16, line: 3265, column: 13)
!5983 = !DILocation(line: 3265, column: 18, scope: !5982)
!5984 = !DILocation(line: 3265, column: 25, scope: !5982)
!5985 = !DILocation(line: 3265, column: 48, scope: !5986)
!5986 = !DILexicalBlockFile(scope: !5982, file: !16, discriminator: 1)
!5987 = !DILocation(line: 3265, column: 29, scope: !5986)
!5988 = !DILocation(line: 3265, column: 51, scope: !5986)
!5989 = !DILocation(line: 3265, column: 72, scope: !5990)
!5990 = !DILexicalBlockFile(scope: !5982, file: !16, discriminator: 2)
!5991 = !DILocation(line: 3265, column: 54, scope: !5990)
!5992 = !DILocation(line: 3265, column: 13, scope: !5990)
!5993 = !DILocalVariable(name: "scts", scope: !5994, file: !16, line: 3266, type: !5995)
!5994 = distinct !DILexicalBlock(scope: !5982, file: !16, line: 3265, column: 76)
!5995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5996, size: 64, align: 64)
!5996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5997)
!5997 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_SCT", file: !5998, line: 58, flags: DIFlagFwdDecl)
!5998 = !DIFile(filename: "include/openssl/ct.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!5999 = !DILocation(line: 3266, column: 40, scope: !5994)
!6000 = !DILocation(line: 3266, column: 66, scope: !5994)
!6001 = !DILocation(line: 3266, column: 47, scope: !5994)
!6002 = !DILocalVariable(name: "sct_count", scope: !5994, file: !16, line: 3267, type: !225)
!6003 = !DILocation(line: 3267, column: 17, scope: !5994)
!6004 = !DILocation(line: 3267, column: 29, scope: !5994)
!6005 = !DILocation(line: 3267, column: 34, scope: !5994)
!6006 = !DILocation(line: 3267, column: 54, scope: !6007)
!6007 = !DILexicalBlockFile(scope: !5994, file: !16, discriminator: 1)
!6008 = !DILocation(line: 3267, column: 43, scope: !6007)
!6009 = !DILocation(line: 3267, column: 29, scope: !6007)
!6010 = !DILocation(line: 3267, column: 29, scope: !6011)
!6011 = !DILexicalBlockFile(scope: !5994, file: !16, discriminator: 2)
!6012 = !DILocation(line: 3267, column: 29, scope: !6013)
!6013 = !DILexicalBlockFile(scope: !5994, file: !16, discriminator: 3)
!6014 = !DILocation(line: 3267, column: 17, scope: !6013)
!6015 = !DILocation(line: 3269, column: 24, scope: !5994)
!6016 = !DILocation(line: 3269, column: 57, scope: !5994)
!6017 = !DILocation(line: 3269, column: 13, scope: !5994)
!6018 = !DILocation(line: 3270, column: 17, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !5994, file: !16, line: 3270, column: 17)
!6020 = !DILocation(line: 3270, column: 27, scope: !6019)
!6021 = !DILocation(line: 3270, column: 17, scope: !5994)
!6022 = !DILocalVariable(name: "log_store", scope: !6023, file: !16, line: 3271, type: !6024)
!6023 = distinct !DILexicalBlock(scope: !6019, file: !16, line: 3270, column: 32)
!6024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6025, size: 64, align: 64)
!6025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6026)
!6026 = !DIDerivedType(tag: DW_TAG_typedef, name: "CTLOG_STORE", file: !307, line: 176, baseType: !6027)
!6027 = !DICompositeType(tag: DW_TAG_structure_type, name: "ctlog_store_st", file: !307, line: 176, flags: DIFlagFwdDecl)
!6028 = !DILocation(line: 3271, column: 36, scope: !6023)
!6029 = !DILocation(line: 3271, column: 73, scope: !6023)
!6030 = !DILocation(line: 3271, column: 48, scope: !6023)
!6031 = !DILocation(line: 3273, column: 28, scope: !6023)
!6032 = !DILocation(line: 3273, column: 17, scope: !6023)
!6033 = !DILocation(line: 3274, column: 24, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6023, file: !16, line: 3274, column: 17)
!6035 = !DILocation(line: 3274, column: 22, scope: !6034)
!6036 = !DILocation(line: 3274, column: 29, scope: !6037)
!6037 = !DILexicalBlockFile(scope: !6038, file: !16, discriminator: 1)
!6038 = distinct !DILexicalBlock(scope: !6034, file: !16, line: 3274, column: 17)
!6039 = !DILocation(line: 3274, column: 33, scope: !6037)
!6040 = !DILocation(line: 3274, column: 31, scope: !6037)
!6041 = !DILocation(line: 3274, column: 17, scope: !6037)
!6042 = !DILocalVariable(name: "sct", scope: !6043, file: !16, line: 3275, type: !329)
!6043 = distinct !DILexicalBlock(scope: !6038, file: !16, line: 3274, column: 49)
!6044 = !DILocation(line: 3275, column: 26, scope: !6043)
!6045 = !DILocation(line: 3275, column: 45, scope: !6043)
!6046 = !DILocation(line: 3275, column: 51, scope: !6043)
!6047 = !DILocation(line: 3275, column: 32, scope: !6043)
!6048 = !DILocation(line: 3277, column: 32, scope: !6043)
!6049 = !DILocation(line: 3278, column: 61, scope: !6043)
!6050 = !DILocation(line: 3278, column: 32, scope: !6043)
!6051 = !DILocation(line: 3277, column: 21, scope: !6043)
!6052 = !DILocation(line: 3279, column: 31, scope: !6043)
!6053 = !DILocation(line: 3279, column: 36, scope: !6043)
!6054 = !DILocation(line: 3279, column: 44, scope: !6043)
!6055 = !DILocation(line: 3279, column: 21, scope: !6043)
!6056 = !DILocation(line: 3280, column: 25, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6043, file: !16, line: 3280, column: 25)
!6058 = !DILocation(line: 3280, column: 29, scope: !6057)
!6059 = !DILocation(line: 3280, column: 39, scope: !6057)
!6060 = !DILocation(line: 3280, column: 27, scope: !6057)
!6061 = !DILocation(line: 3280, column: 25, scope: !6043)
!6062 = !DILocation(line: 3281, column: 36, scope: !6057)
!6063 = !DILocation(line: 3281, column: 25, scope: !6057)
!6064 = !DILocation(line: 3282, column: 17, scope: !6043)
!6065 = !DILocation(line: 3274, column: 44, scope: !6066)
!6066 = !DILexicalBlockFile(scope: !6038, file: !16, discriminator: 2)
!6067 = !DILocation(line: 3274, column: 17, scope: !6066)
!6068 = distinct !{!6068, !6069}
!6069 = !DILocation(line: 3274, column: 17, scope: !6023)
!6070 = !DILocation(line: 3283, column: 28, scope: !6023)
!6071 = !DILocation(line: 3283, column: 17, scope: !6023)
!6072 = !DILocation(line: 3284, column: 13, scope: !6023)
!6073 = !DILocation(line: 3285, column: 9, scope: !5994)
!6074 = !DILocation(line: 3288, column: 20, scope: !5877)
!6075 = !DILocation(line: 3291, column: 49, scope: !5877)
!6076 = !DILocation(line: 3291, column: 36, scope: !5877)
!6077 = !DILocation(line: 3291, column: 20, scope: !6078)
!6078 = !DILexicalBlockFile(scope: !5877, file: !16, discriminator: 1)
!6079 = !DILocation(line: 3292, column: 52, scope: !5877)
!6080 = !DILocation(line: 3292, column: 39, scope: !5877)
!6081 = !DILocation(line: 3292, column: 20, scope: !6078)
!6082 = !DILocation(line: 3288, column: 9, scope: !5877)
!6083 = !DILocation(line: 3293, column: 5, scope: !5877)
!6084 = !DILocation(line: 3294, column: 25, scope: !5833)
!6085 = !DILocation(line: 3294, column: 28, scope: !5833)
!6086 = !DILocation(line: 3294, column: 5, scope: !5833)
!6087 = !DILocation(line: 3295, column: 16, scope: !5833)
!6088 = !DILocation(line: 3295, column: 41, scope: !5833)
!6089 = !DILocation(line: 3295, column: 22, scope: !5833)
!6090 = !DILocation(line: 3295, column: 5, scope: !6091)
!6091 = !DILexicalBlockFile(scope: !5833, file: !16, discriminator: 1)
!6092 = !DILocation(line: 3296, column: 32, scope: !5833)
!6093 = !DILocation(line: 3296, column: 9, scope: !5833)
!6094 = !DILocation(line: 3296, column: 7, scope: !5833)
!6095 = !DILocation(line: 3297, column: 16, scope: !5833)
!6096 = !DILocation(line: 3298, column: 39, scope: !5833)
!6097 = !DILocation(line: 3298, column: 16, scope: !5833)
!6098 = !DILocation(line: 3298, column: 63, scope: !5833)
!6099 = !DILocation(line: 3298, column: 43, scope: !6091)
!6100 = !DILocation(line: 3297, column: 5, scope: !5833)
!6101 = !DILocation(line: 3299, column: 9, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !5833, file: !16, line: 3299, column: 9)
!6103 = !DILocation(line: 3299, column: 14, scope: !6102)
!6104 = !DILocation(line: 3299, column: 9, scope: !5833)
!6105 = !DILocalVariable(name: "pktmp", scope: !6106, file: !16, line: 3300, type: !446)
!6106 = distinct !DILexicalBlock(scope: !6102, file: !16, line: 3299, column: 22)
!6107 = !DILocation(line: 3300, column: 19, scope: !6106)
!6108 = !DILocation(line: 3302, column: 34, scope: !6106)
!6109 = !DILocation(line: 3302, column: 17, scope: !6106)
!6110 = !DILocation(line: 3302, column: 15, scope: !6106)
!6111 = !DILocation(line: 3303, column: 20, scope: !6106)
!6112 = !DILocation(line: 3304, column: 34, scope: !6106)
!6113 = !DILocation(line: 3304, column: 20, scope: !6106)
!6114 = !DILocation(line: 3303, column: 9, scope: !6106)
!6115 = !DILocation(line: 3305, column: 5, scope: !6106)
!6116 = !DILocation(line: 3306, column: 16, scope: !5833)
!6117 = !DILocation(line: 3307, column: 26, scope: !5833)
!6118 = !DILocation(line: 3307, column: 16, scope: !5833)
!6119 = !DILocation(line: 3306, column: 5, scope: !5833)
!6120 = !DILocation(line: 3309, column: 40, scope: !5833)
!6121 = !DILocation(line: 3309, column: 12, scope: !5833)
!6122 = !DILocation(line: 3309, column: 10, scope: !5833)
!6123 = !DILocation(line: 3310, column: 43, scope: !5833)
!6124 = !DILocation(line: 3310, column: 17, scope: !5833)
!6125 = !DILocation(line: 3310, column: 15, scope: !5833)
!6126 = !DILocation(line: 3311, column: 16, scope: !5833)
!6127 = !DILocation(line: 3312, column: 16, scope: !5833)
!6128 = !DILocation(line: 3312, column: 41, scope: !6091)
!6129 = !DILocation(line: 3312, column: 23, scope: !6091)
!6130 = !DILocation(line: 3312, column: 16, scope: !6091)
!6131 = !DILocation(line: 3312, column: 16, scope: !6132)
!6132 = !DILexicalBlockFile(scope: !5833, file: !16, discriminator: 2)
!6133 = !DILocation(line: 3312, column: 16, scope: !6134)
!6134 = !DILexicalBlockFile(scope: !5833, file: !16, discriminator: 3)
!6135 = !DILocation(line: 3311, column: 5, scope: !6091)
!6136 = !DILocation(line: 3313, column: 16, scope: !5833)
!6137 = !DILocation(line: 3314, column: 16, scope: !5833)
!6138 = !DILocation(line: 3314, column: 46, scope: !6091)
!6139 = !DILocation(line: 3314, column: 28, scope: !6091)
!6140 = !DILocation(line: 3314, column: 16, scope: !6091)
!6141 = !DILocation(line: 3314, column: 16, scope: !6132)
!6142 = !DILocation(line: 3314, column: 16, scope: !6134)
!6143 = !DILocation(line: 3313, column: 5, scope: !6091)
!6144 = !DILocation(line: 3338, column: 20, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !5833, file: !16, line: 3338, column: 9)
!6146 = !DILocation(line: 3338, column: 27, scope: !6145)
!6147 = !DILocation(line: 3338, column: 9, scope: !5833)
!6148 = !DILocalVariable(name: "proto", scope: !6149, file: !16, line: 3339, type: !278)
!6149 = distinct !DILexicalBlock(scope: !6145, file: !16, line: 3338, column: 34)
!6150 = !DILocation(line: 3339, column: 30, scope: !6149)
!6151 = !DILocalVariable(name: "proto_len", scope: !6149, file: !16, line: 3340, type: !280)
!6152 = !DILocation(line: 3340, column: 22, scope: !6149)
!6153 = !DILocation(line: 3341, column: 40, scope: !6149)
!6154 = !DILocation(line: 3341, column: 9, scope: !6149)
!6155 = !DILocation(line: 3342, column: 20, scope: !6149)
!6156 = !DILocation(line: 3342, column: 60, scope: !6149)
!6157 = !DILocation(line: 3342, column: 9, scope: !6149)
!6158 = !DILocation(line: 3343, column: 19, scope: !6149)
!6159 = !DILocation(line: 3343, column: 24, scope: !6149)
!6160 = !DILocation(line: 3343, column: 31, scope: !6149)
!6161 = !DILocation(line: 3343, column: 9, scope: !6149)
!6162 = !DILocation(line: 3344, column: 19, scope: !6149)
!6163 = !DILocation(line: 3344, column: 9, scope: !6149)
!6164 = !DILocation(line: 3345, column: 5, scope: !6149)
!6165 = !DILocalVariable(name: "proto", scope: !6166, file: !16, line: 3348, type: !278)
!6166 = distinct !DILexicalBlock(scope: !5833, file: !16, line: 3347, column: 5)
!6167 = !DILocation(line: 3348, column: 30, scope: !6166)
!6168 = !DILocalVariable(name: "proto_len", scope: !6166, file: !16, line: 3349, type: !280)
!6169 = !DILocation(line: 3349, column: 22, scope: !6166)
!6170 = !DILocation(line: 3350, column: 32, scope: !6166)
!6171 = !DILocation(line: 3350, column: 9, scope: !6166)
!6172 = !DILocation(line: 3351, column: 13, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6166, file: !16, line: 3351, column: 13)
!6174 = !DILocation(line: 3351, column: 23, scope: !6173)
!6175 = !DILocation(line: 3351, column: 13, scope: !6166)
!6176 = !DILocation(line: 3352, column: 24, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6173, file: !16, line: 3351, column: 28)
!6178 = !DILocation(line: 3352, column: 13, scope: !6177)
!6179 = !DILocation(line: 3353, column: 23, scope: !6177)
!6180 = !DILocation(line: 3353, column: 28, scope: !6177)
!6181 = !DILocation(line: 3353, column: 35, scope: !6177)
!6182 = !DILocation(line: 3353, column: 13, scope: !6177)
!6183 = !DILocation(line: 3354, column: 23, scope: !6177)
!6184 = !DILocation(line: 3354, column: 13, scope: !6177)
!6185 = !DILocation(line: 3355, column: 9, scope: !6177)
!6186 = !DILocation(line: 3356, column: 24, scope: !6173)
!6187 = !DILocation(line: 3356, column: 13, scope: !6173)
!6188 = !DILocalVariable(name: "srtp_profile", scope: !6189, file: !16, line: 3361, type: !6190)
!6189 = distinct !DILexicalBlock(scope: !5833, file: !16, line: 3360, column: 5)
!6190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6191, size: 64, align: 64)
!6191 = !DIDerivedType(tag: DW_TAG_typedef, name: "SRTP_PROTECTION_PROFILE", file: !255, line: 225, baseType: !6192)
!6192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srtp_protection_profile_st", file: !255, line: 222, size: 128, align: 64, elements: !6193)
!6193 = !{!6194, !6195}
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6192, file: !255, line: 223, baseType: !346, size: 64, align: 64)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6192, file: !255, line: 224, baseType: !383, size: 64, align: 64, offset: 64)
!6196 = !DILocation(line: 3361, column: 34, scope: !6189)
!6197 = !DILocation(line: 3362, column: 43, scope: !6189)
!6198 = !DILocation(line: 3362, column: 13, scope: !6189)
!6199 = !DILocation(line: 3364, column: 13, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6189, file: !16, line: 3364, column: 13)
!6201 = !DILocation(line: 3364, column: 13, scope: !6189)
!6202 = !DILocation(line: 3365, column: 24, scope: !6200)
!6203 = !DILocation(line: 3366, column: 24, scope: !6200)
!6204 = !DILocation(line: 3366, column: 38, scope: !6200)
!6205 = !DILocation(line: 3365, column: 13, scope: !6200)
!6206 = !DILocation(line: 3370, column: 9, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !5833, file: !16, line: 3370, column: 9)
!6208 = !DILocation(line: 3370, column: 9, scope: !5833)
!6209 = !DILocation(line: 3371, column: 43, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6207, file: !16, line: 3370, column: 18)
!6211 = !DILocation(line: 3371, column: 17, scope: !6210)
!6212 = !DILocation(line: 3371, column: 9, scope: !6210)
!6213 = !DILocation(line: 3373, column: 24, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6210, file: !16, line: 3371, column: 47)
!6215 = !DILocation(line: 3373, column: 13, scope: !6214)
!6216 = !DILocation(line: 3374, column: 13, scope: !6214)
!6217 = !DILocation(line: 3377, column: 24, scope: !6214)
!6218 = !DILocation(line: 3377, column: 13, scope: !6214)
!6219 = !DILocation(line: 3378, column: 13, scope: !6214)
!6220 = !DILocation(line: 3381, column: 24, scope: !6214)
!6221 = !DILocation(line: 3381, column: 13, scope: !6214)
!6222 = !DILocation(line: 3382, column: 13, scope: !6214)
!6223 = !DILocation(line: 3391, column: 47, scope: !6210)
!6224 = !DILocation(line: 3391, column: 25, scope: !6210)
!6225 = !DILocation(line: 3391, column: 23, scope: !6210)
!6226 = !DILocation(line: 3392, column: 20, scope: !6210)
!6227 = !DILocation(line: 3392, column: 59, scope: !6210)
!6228 = !DILocation(line: 3393, column: 50, scope: !6210)
!6229 = !DILocation(line: 3393, column: 20, scope: !6210)
!6230 = !DILocation(line: 3392, column: 9, scope: !6210)
!6231 = !DILocation(line: 3394, column: 5, scope: !6210)
!6232 = !DILocation(line: 3396, column: 27, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6207, file: !16, line: 3394, column: 12)
!6234 = !DILocation(line: 3396, column: 48, scope: !6233)
!6235 = !DILocation(line: 3396, column: 32, scope: !6233)
!6236 = !DILocation(line: 3396, column: 9, scope: !6237)
!6237 = !DILexicalBlockFile(scope: !6233, file: !16, discriminator: 1)
!6238 = !DILocation(line: 3399, column: 25, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !5833, file: !16, line: 3399, column: 9)
!6240 = !DILocation(line: 3399, column: 9, scope: !6239)
!6241 = !DILocation(line: 3399, column: 28, scope: !6239)
!6242 = !DILocation(line: 3399, column: 35, scope: !6239)
!6243 = !DILocation(line: 3399, column: 38, scope: !6244)
!6244 = !DILexicalBlockFile(scope: !6239, file: !16, discriminator: 1)
!6245 = !DILocation(line: 3399, column: 56, scope: !6244)
!6246 = !DILocation(line: 3399, column: 9, scope: !6244)
!6247 = !DILocation(line: 3400, column: 20, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6239, file: !16, line: 3399, column: 65)
!6249 = !DILocation(line: 3400, column: 9, scope: !6248)
!6250 = !DILocation(line: 3401, column: 20, scope: !6248)
!6251 = !DILocation(line: 3401, column: 46, scope: !6248)
!6252 = !DILocation(line: 3401, column: 9, scope: !6248)
!6253 = !DILocation(line: 3402, column: 20, scope: !6248)
!6254 = !DILocation(line: 3402, column: 51, scope: !6248)
!6255 = !DILocation(line: 3402, column: 9, scope: !6248)
!6256 = !DILocation(line: 3403, column: 37, scope: !6248)
!6257 = !DILocation(line: 3403, column: 26, scope: !6248)
!6258 = !DILocation(line: 3403, column: 24, scope: !6248)
!6259 = !DILocation(line: 3404, column: 41, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6248, file: !16, line: 3404, column: 13)
!6261 = !DILocation(line: 3404, column: 44, scope: !6260)
!6262 = !DILocation(line: 3405, column: 41, scope: !6260)
!6263 = !DILocation(line: 3406, column: 41, scope: !6260)
!6264 = !DILocation(line: 3407, column: 48, scope: !6260)
!6265 = !DILocation(line: 3407, column: 41, scope: !6260)
!6266 = !DILocation(line: 3404, column: 14, scope: !6260)
!6267 = !DILocation(line: 3404, column: 13, scope: !6248)
!6268 = !DILocation(line: 3409, column: 24, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6260, file: !16, line: 3408, column: 53)
!6270 = !DILocation(line: 3409, column: 13, scope: !6269)
!6271 = !DILocation(line: 3410, column: 9, scope: !6269)
!6272 = !DILocation(line: 3411, column: 24, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6260, file: !16, line: 3410, column: 16)
!6274 = !DILocation(line: 3411, column: 13, scope: !6273)
!6275 = !DILocation(line: 3412, column: 20, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6273, file: !16, line: 3412, column: 13)
!6277 = !DILocation(line: 3412, column: 18, scope: !6276)
!6278 = !DILocation(line: 3412, column: 25, scope: !6279)
!6279 = !DILexicalBlockFile(scope: !6280, file: !16, discriminator: 1)
!6280 = distinct !DILexicalBlock(scope: !6276, file: !16, line: 3412, column: 13)
!6281 = !DILocation(line: 3412, column: 29, scope: !6279)
!6282 = !DILocation(line: 3412, column: 27, scope: !6279)
!6283 = !DILocation(line: 3412, column: 13, scope: !6279)
!6284 = !DILocation(line: 3413, column: 28, scope: !6280)
!6285 = !DILocation(line: 3413, column: 56, scope: !6280)
!6286 = !DILocation(line: 3413, column: 41, scope: !6280)
!6287 = !DILocation(line: 3413, column: 17, scope: !6280)
!6288 = !DILocation(line: 3412, column: 47, scope: !6289)
!6289 = !DILexicalBlockFile(scope: !6280, file: !16, discriminator: 2)
!6290 = !DILocation(line: 3412, column: 13, scope: !6289)
!6291 = distinct !{!6291, !6292}
!6292 = !DILocation(line: 3412, column: 13, scope: !6273)
!6293 = !DILocation(line: 3414, column: 24, scope: !6273)
!6294 = !DILocation(line: 3414, column: 13, scope: !6273)
!6295 = !DILocation(line: 3416, column: 21, scope: !6248)
!6296 = !DILocation(line: 3416, column: 9, scope: !6248)
!6297 = !DILocation(line: 3417, column: 5, scope: !6248)
!6298 = !DILocation(line: 3418, column: 16, scope: !5833)
!6299 = !DILocation(line: 3418, column: 5, scope: !5833)
!6300 = !DILocation(line: 3419, column: 15, scope: !5833)
!6301 = !DILocation(line: 3419, column: 5, scope: !5833)
!6302 = !DILocation(line: 3421, column: 25, scope: !5833)
!6303 = !DILocation(line: 3421, column: 16, scope: !5833)
!6304 = !DILocation(line: 3421, column: 11, scope: !5833)
!6305 = !DILocation(line: 3422, column: 1, scope: !5833)
!6306 = distinct !DISubprogram(name: "do_ssl_shutdown", scope: !16, file: !16, line: 94, type: !6307, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6307 = !DISubroutineType(types: !6308)
!6308 = !{null, !411}
!6309 = !DILocalVariable(name: "ssl", arg: 1, scope: !6306, file: !16, line: 94, type: !411)
!6310 = !DILocation(line: 94, column: 34, scope: !6306)
!6311 = !DILocalVariable(name: "ret", scope: !6306, file: !16, line: 96, type: !225)
!6312 = !DILocation(line: 96, column: 9, scope: !6306)
!6313 = !DILocation(line: 98, column: 5, scope: !6306)
!6314 = distinct !{!6314, !6313}
!6315 = !DILocation(line: 100, column: 28, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6306, file: !16, line: 98, column: 8)
!6317 = !DILocation(line: 100, column: 15, scope: !6316)
!6318 = !DILocation(line: 100, column: 13, scope: !6316)
!6319 = !DILocation(line: 101, column: 13, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6316, file: !16, line: 101, column: 13)
!6321 = !DILocation(line: 101, column: 17, scope: !6320)
!6322 = !DILocation(line: 101, column: 13, scope: !6316)
!6323 = !DILocation(line: 102, column: 35, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6320, file: !16, line: 101, column: 22)
!6325 = !DILocation(line: 102, column: 40, scope: !6324)
!6326 = !DILocation(line: 102, column: 21, scope: !6324)
!6327 = !DILocation(line: 102, column: 13, scope: !6324)
!6328 = !DILocation(line: 108, column: 17, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6324, file: !16, line: 102, column: 46)
!6330 = !DILocation(line: 110, column: 17, scope: !6324)
!6331 = !DILocation(line: 111, column: 9, scope: !6324)
!6332 = !DILocation(line: 112, column: 5, scope: !6316)
!6333 = !DILocation(line: 112, column: 14, scope: !6334)
!6334 = !DILexicalBlockFile(scope: !6306, file: !16, discriminator: 1)
!6335 = !DILocation(line: 112, column: 18, scope: !6334)
!6336 = !DILocation(line: 112, column: 5, scope: !6334)
!6337 = !DILocation(line: 113, column: 1, scope: !6306)
!6338 = distinct !DISubprogram(name: "sk_X509_CRL_pop_free", scope: !292, file: !292, line: 228, type: !6339, isLocal: true, isDefinition: true, scopeLine: 228, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6339 = !DISubroutineType(types: !6340)
!6340 = !{null, !290, !6341}
!6341 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_X509_CRL_freefunc", file: !292, line: 228, baseType: !6342)
!6342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6343, size: 64, align: 64)
!6343 = !DISubroutineType(types: !6344)
!6344 = !{null, !1800}
!6345 = !DILocalVariable(name: "sk", arg: 1, scope: !6338, file: !292, line: 228, type: !290)
!6346 = !DILocation(line: 228, column: 2674, scope: !6338)
!6347 = !DILocalVariable(name: "freefunc", arg: 2, scope: !6338, file: !292, line: 228, type: !6341)
!6348 = !DILocation(line: 228, column: 2699, scope: !6338)
!6349 = !DILocation(line: 228, column: 2748, scope: !6338)
!6350 = !DILocation(line: 228, column: 2731, scope: !6338)
!6351 = !DILocation(line: 228, column: 2773, scope: !6338)
!6352 = !DILocation(line: 228, column: 2752, scope: !6338)
!6353 = !DILocation(line: 228, column: 2711, scope: !6338)
!6354 = !DILocation(line: 228, column: 2784, scope: !6338)
!6355 = distinct !DISubprogram(name: "sk_X509_pop_free", scope: !292, file: !292, line: 99, type: !6356, isLocal: true, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6356 = !DISubroutineType(types: !6357)
!6357 = !{null, !458, !6358}
!6358 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_X509_freefunc", file: !292, line: 99, baseType: !6359)
!6359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6360, size: 64, align: 64)
!6360 = !DISubroutineType(types: !6361)
!6361 = !{null, !326}
!6362 = !DILocalVariable(name: "sk", arg: 1, scope: !6355, file: !292, line: 99, type: !458)
!6363 = !DILocation(line: 99, column: 2446, scope: !6355)
!6364 = !DILocalVariable(name: "freefunc", arg: 2, scope: !6355, file: !292, line: 99, type: !6358)
!6365 = !DILocation(line: 99, column: 2467, scope: !6355)
!6366 = !DILocation(line: 99, column: 2516, scope: !6355)
!6367 = !DILocation(line: 99, column: 2499, scope: !6355)
!6368 = !DILocation(line: 99, column: 2541, scope: !6355)
!6369 = !DILocation(line: 99, column: 2520, scope: !6355)
!6370 = !DILocation(line: 99, column: 2479, scope: !6355)
!6371 = !DILocation(line: 99, column: 2552, scope: !6355)
!6372 = distinct !DISubprogram(name: "sk_OPENSSL_STRING_free", scope: !283, file: !283, line: 159, type: !6373, isLocal: true, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6373 = !DISubroutineType(types: !6374)
!6374 = !{null, !281}
!6375 = !DILocalVariable(name: "sk", arg: 1, scope: !6372, file: !283, line: 159, type: !281)
!6376 = !DILocation(line: 159, column: 1482, scope: !6372)
!6377 = !DILocation(line: 159, column: 1521, scope: !6372)
!6378 = !DILocation(line: 159, column: 1504, scope: !6372)
!6379 = !DILocation(line: 159, column: 1488, scope: !6372)
!6380 = !DILocation(line: 159, column: 1526, scope: !6372)
!6381 = distinct !DISubprogram(name: "srp_Verify_N_and_g", scope: !16, file: !16, line: 275, type: !6382, isLocal: true, isDefinition: true, scopeLine: 276, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6382 = !DISubroutineType(types: !6383)
!6383 = !{!225, !6384, !6384}
!6384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6385, size: 64, align: 64)
!6385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5406)
!6386 = !DILocalVariable(name: "N", arg: 1, scope: !6381, file: !16, line: 275, type: !6384)
!6387 = !DILocation(line: 275, column: 45, scope: !6381)
!6388 = !DILocalVariable(name: "g", arg: 2, scope: !6381, file: !16, line: 275, type: !6384)
!6389 = !DILocation(line: 275, column: 62, scope: !6381)
!6390 = !DILocalVariable(name: "bn_ctx", scope: !6381, file: !16, line: 277, type: !6391)
!6391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6392, size: 64, align: 64)
!6392 = !DIDerivedType(tag: DW_TAG_typedef, name: "BN_CTX", file: !307, line: 81, baseType: !6393)
!6393 = !DICompositeType(tag: DW_TAG_structure_type, name: "bignum_ctx", file: !307, line: 81, flags: DIFlagFwdDecl)
!6394 = !DILocation(line: 277, column: 13, scope: !6381)
!6395 = !DILocation(line: 277, column: 22, scope: !6381)
!6396 = !DILocalVariable(name: "p", scope: !6381, file: !16, line: 278, type: !5405)
!6397 = !DILocation(line: 278, column: 13, scope: !6381)
!6398 = !DILocation(line: 278, column: 17, scope: !6381)
!6399 = !DILocalVariable(name: "r", scope: !6381, file: !16, line: 279, type: !5405)
!6400 = !DILocation(line: 279, column: 13, scope: !6381)
!6401 = !DILocation(line: 279, column: 17, scope: !6381)
!6402 = !DILocalVariable(name: "ret", scope: !6381, file: !16, line: 280, type: !225)
!6403 = !DILocation(line: 280, column: 9, scope: !6381)
!6404 = !DILocation(line: 281, column: 9, scope: !6381)
!6405 = !DILocation(line: 281, column: 11, scope: !6381)
!6406 = !DILocation(line: 281, column: 18, scope: !6381)
!6407 = !DILocation(line: 281, column: 21, scope: !6408)
!6408 = !DILexicalBlockFile(scope: !6381, file: !16, discriminator: 1)
!6409 = !DILocation(line: 281, column: 23, scope: !6408)
!6410 = !DILocation(line: 281, column: 31, scope: !6408)
!6411 = !DILocation(line: 281, column: 34, scope: !6412)
!6412 = !DILexicalBlockFile(scope: !6381, file: !16, discriminator: 2)
!6413 = !DILocation(line: 281, column: 41, scope: !6412)
!6414 = !DILocation(line: 281, column: 49, scope: !6412)
!6415 = !DILocation(line: 281, column: 62, scope: !6416)
!6416 = !DILexicalBlockFile(scope: !6381, file: !16, discriminator: 3)
!6417 = !DILocation(line: 281, column: 52, scope: !6416)
!6418 = !DILocation(line: 281, column: 65, scope: !6416)
!6419 = !DILocation(line: 282, column: 24, scope: !6381)
!6420 = !DILocation(line: 282, column: 31, scope: !6381)
!6421 = !DILocation(line: 282, column: 9, scope: !6381)
!6422 = !DILocation(line: 282, column: 73, scope: !6381)
!6423 = !DILocation(line: 282, column: 78, scope: !6381)
!6424 = !DILocation(line: 283, column: 9, scope: !6381)
!6425 = !DILocation(line: 283, column: 11, scope: !6381)
!6426 = !DILocation(line: 283, column: 18, scope: !6381)
!6427 = !DILocation(line: 283, column: 32, scope: !6408)
!6428 = !DILocation(line: 283, column: 35, scope: !6408)
!6429 = !DILocation(line: 283, column: 21, scope: !6408)
!6430 = !DILocation(line: 283, column: 38, scope: !6408)
!6431 = !DILocation(line: 285, column: 24, scope: !6381)
!6432 = !DILocation(line: 285, column: 31, scope: !6381)
!6433 = !DILocation(line: 285, column: 9, scope: !6381)
!6434 = !DILocation(line: 285, column: 73, scope: !6381)
!6435 = !DILocation(line: 285, column: 78, scope: !6381)
!6436 = !DILocation(line: 286, column: 9, scope: !6381)
!6437 = !DILocation(line: 286, column: 11, scope: !6381)
!6438 = !DILocation(line: 286, column: 18, scope: !6381)
!6439 = !DILocation(line: 288, column: 20, scope: !6381)
!6440 = !DILocation(line: 288, column: 23, scope: !6381)
!6441 = !DILocation(line: 288, column: 26, scope: !6381)
!6442 = !DILocation(line: 288, column: 29, scope: !6381)
!6443 = !DILocation(line: 288, column: 32, scope: !6381)
!6444 = !DILocation(line: 288, column: 9, scope: !6381)
!6445 = !DILocation(line: 288, column: 40, scope: !6381)
!6446 = !DILocation(line: 289, column: 21, scope: !6381)
!6447 = !DILocation(line: 289, column: 9, scope: !6381)
!6448 = !DILocation(line: 289, column: 27, scope: !6381)
!6449 = !DILocation(line: 289, column: 37, scope: !6408)
!6450 = !DILocation(line: 289, column: 40, scope: !6408)
!6451 = !DILocation(line: 289, column: 30, scope: !6408)
!6452 = !DILocation(line: 289, column: 43, scope: !6408)
!6453 = !DILocation(line: 289, column: 27, scope: !6412)
!6454 = !DILocation(line: 291, column: 13, scope: !6381)
!6455 = !DILocation(line: 291, column: 5, scope: !6381)
!6456 = !DILocation(line: 292, column: 13, scope: !6381)
!6457 = !DILocation(line: 292, column: 5, scope: !6381)
!6458 = !DILocation(line: 293, column: 17, scope: !6381)
!6459 = !DILocation(line: 293, column: 5, scope: !6381)
!6460 = !DILocation(line: 294, column: 12, scope: !6381)
!6461 = !DILocation(line: 294, column: 5, scope: !6381)
!6462 = distinct !DISubprogram(name: "sk_OPENSSL_STRING_num", scope: !283, file: !283, line: 159, type: !6463, isLocal: true, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6463 = !DISubroutineType(types: !6464)
!6464 = !{!225, !6465}
!6465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6466, size: 64, align: 64)
!6466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !282)
!6467 = !DILocalVariable(name: "sk", arg: 1, scope: !6462, file: !283, line: 159, type: !6465)
!6468 = !DILocation(line: 159, column: 337, scope: !6462)
!6469 = !DILocation(line: 159, column: 388, scope: !6462)
!6470 = !DILocation(line: 159, column: 365, scope: !6462)
!6471 = !DILocation(line: 159, column: 350, scope: !6462)
!6472 = !DILocation(line: 159, column: 343, scope: !6462)
!6473 = distinct !DISubprogram(name: "sk_OPENSSL_STRING_value", scope: !283, file: !283, line: 159, type: !6474, isLocal: true, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6474 = !DISubroutineType(types: !6475)
!6475 = !{!227, !6465, !225}
!6476 = !DILocalVariable(name: "sk", arg: 1, scope: !6473, file: !283, line: 159, type: !6465)
!6477 = !DILocation(line: 159, column: 501, scope: !6473)
!6478 = !DILocalVariable(name: "idx", arg: 2, scope: !6473, file: !283, line: 159, type: !225)
!6479 = !DILocation(line: 159, column: 509, scope: !6473)
!6480 = !DILocation(line: 159, column: 571, scope: !6473)
!6481 = !DILocation(line: 159, column: 548, scope: !6473)
!6482 = !DILocation(line: 159, column: 575, scope: !6473)
!6483 = !DILocation(line: 159, column: 531, scope: !6473)
!6484 = !DILocation(line: 159, column: 516, scope: !6473)
!6485 = !DILocalVariable(name: "con", arg: 1, scope: !408, file: !16, line: 505, type: !411)
!6486 = !DILocation(line: 505, column: 32, scope: !408)
!6487 = !DILocalVariable(name: "rrdata", arg: 2, scope: !408, file: !16, line: 505, type: !346)
!6488 = !DILocation(line: 505, column: 49, scope: !408)
!6489 = !DILocalVariable(name: "f", scope: !408, file: !16, line: 519, type: !6490)
!6490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64, align: 64)
!6491 = !DILocation(line: 519, column: 24, scope: !408)
!6492 = !DILocalVariable(name: "ret", scope: !408, file: !16, line: 520, type: !225)
!6493 = !DILocation(line: 520, column: 9, scope: !408)
!6494 = !DILocalVariable(name: "cp", scope: !408, file: !16, line: 521, type: !346)
!6495 = !DILocation(line: 521, column: 17, scope: !408)
!6496 = !DILocation(line: 521, column: 22, scope: !408)
!6497 = !DILocalVariable(name: "len", scope: !408, file: !16, line: 522, type: !427)
!6498 = !DILocation(line: 522, column: 13, scope: !408)
!6499 = !DILocation(line: 524, column: 12, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !408, file: !16, line: 524, column: 5)
!6501 = !DILocation(line: 524, column: 10, scope: !6500)
!6502 = !DILocation(line: 524, column: 27, scope: !6503)
!6503 = !DILexicalBlockFile(scope: !6504, file: !16, discriminator: 1)
!6504 = distinct !DILexicalBlock(scope: !6500, file: !16, line: 524, column: 5)
!6505 = !DILocation(line: 524, column: 30, scope: !6503)
!6506 = !DILocation(line: 524, column: 5, scope: !6503)
!6507 = !DILocation(line: 526, column: 20, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6509, file: !16, line: 526, column: 13)
!6509 = distinct !DILexicalBlock(scope: !6504, file: !16, line: 524, column: 40)
!6510 = !DILocation(line: 526, column: 23, scope: !6508)
!6511 = !DILocation(line: 526, column: 35, scope: !6508)
!6512 = !DILocation(line: 526, column: 38, scope: !6508)
!6513 = !DILocation(line: 526, column: 18, scope: !6508)
!6514 = !DILocation(line: 526, column: 44, scope: !6508)
!6515 = !DILocation(line: 526, column: 13, scope: !6509)
!6516 = !DILocation(line: 527, column: 24, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6508, file: !16, line: 526, column: 50)
!6518 = !DILocation(line: 528, column: 24, scope: !6517)
!6519 = !DILocation(line: 528, column: 30, scope: !6517)
!6520 = !DILocation(line: 528, column: 33, scope: !6517)
!6521 = !DILocation(line: 528, column: 39, scope: !6517)
!6522 = !DILocation(line: 527, column: 13, scope: !6517)
!6523 = !DILocation(line: 529, column: 13, scope: !6517)
!6524 = !DILocation(line: 531, column: 5, scope: !6509)
!6525 = !DILocation(line: 524, column: 35, scope: !6526)
!6526 = !DILexicalBlockFile(scope: !6504, file: !16, discriminator: 2)
!6527 = !DILocation(line: 524, column: 5, scope: !6526)
!6528 = distinct !{!6528, !6529}
!6529 = !DILocation(line: 524, column: 5, scope: !408)
!6530 = !DILocation(line: 533, column: 29, scope: !408)
!6531 = !DILocation(line: 533, column: 34, scope: !408)
!6532 = !DILocation(line: 533, column: 41, scope: !408)
!6533 = !DILocation(line: 533, column: 51, scope: !408)
!6534 = !DILocation(line: 533, column: 58, scope: !408)
!6535 = !DILocation(line: 533, column: 64, scope: !408)
!6536 = !DILocation(line: 533, column: 11, scope: !408)
!6537 = !DILocation(line: 533, column: 9, scope: !408)
!6538 = !DILocation(line: 534, column: 17, scope: !408)
!6539 = !DILocation(line: 534, column: 5, scope: !408)
!6540 = !DILocation(line: 536, column: 9, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !408, file: !16, line: 536, column: 9)
!6542 = !DILocation(line: 536, column: 13, scope: !6541)
!6543 = !DILocation(line: 536, column: 9, scope: !408)
!6544 = !DILocation(line: 537, column: 26, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6541, file: !16, line: 536, column: 19)
!6546 = !DILocation(line: 537, column: 9, scope: !6545)
!6547 = !DILocation(line: 538, column: 20, scope: !6545)
!6548 = !DILocation(line: 539, column: 20, scope: !6545)
!6549 = !DILocation(line: 539, column: 26, scope: !6545)
!6550 = !DILocation(line: 538, column: 9, scope: !6545)
!6551 = !DILocation(line: 540, column: 9, scope: !6545)
!6552 = !DILocation(line: 542, column: 9, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !408, file: !16, line: 542, column: 9)
!6554 = !DILocation(line: 542, column: 13, scope: !6553)
!6555 = !DILocation(line: 542, column: 9, scope: !408)
!6556 = !DILocation(line: 543, column: 26, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6553, file: !16, line: 542, column: 18)
!6558 = !DILocation(line: 543, column: 9, scope: !6557)
!6559 = !DILocation(line: 544, column: 20, scope: !6557)
!6560 = !DILocation(line: 545, column: 20, scope: !6557)
!6561 = !DILocation(line: 545, column: 26, scope: !6557)
!6562 = !DILocation(line: 544, column: 9, scope: !6557)
!6563 = !DILocation(line: 546, column: 9, scope: !6557)
!6564 = !DILocation(line: 548, column: 12, scope: !408)
!6565 = !DILocation(line: 548, column: 5, scope: !408)
!6566 = !DILocation(line: 549, column: 1, scope: !408)
!6567 = distinct !DISubprogram(name: "checked_uint8", scope: !16, file: !16, line: 475, type: !425, isLocal: true, isDefinition: true, scopeLine: 476, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6568 = !DILocalVariable(name: "inptr", arg: 1, scope: !6567, file: !16, line: 475, type: !431)
!6569 = !DILocation(line: 475, column: 43, scope: !6567)
!6570 = !DILocalVariable(name: "out", arg: 2, scope: !6567, file: !16, line: 475, type: !268)
!6571 = !DILocation(line: 475, column: 56, scope: !6567)
!6572 = !DILocalVariable(name: "result", scope: !6567, file: !16, line: 477, type: !322)
!6573 = !DILocation(line: 477, column: 14, scope: !6567)
!6574 = !DILocation(line: 477, column: 34, scope: !6567)
!6575 = !DILocalVariable(name: "in", scope: !6567, file: !16, line: 478, type: !346)
!6576 = !DILocation(line: 478, column: 17, scope: !6567)
!6577 = !DILocation(line: 478, column: 23, scope: !6567)
!6578 = !DILocation(line: 478, column: 22, scope: !6567)
!6579 = !DILocalVariable(name: "endp", scope: !6567, file: !16, line: 479, type: !227)
!6580 = !DILocation(line: 479, column: 11, scope: !6567)
!6581 = !DILocalVariable(name: "v", scope: !6567, file: !16, line: 480, type: !277)
!6582 = !DILocation(line: 480, column: 10, scope: !6567)
!6583 = !DILocalVariable(name: "e", scope: !6567, file: !16, line: 481, type: !225)
!6584 = !DILocation(line: 481, column: 9, scope: !6567)
!6585 = !DILocation(line: 483, column: 5, scope: !6567)
!6586 = !DILocation(line: 484, column: 16, scope: !6567)
!6587 = !DILocation(line: 484, column: 9, scope: !6567)
!6588 = !DILocation(line: 484, column: 7, scope: !6567)
!6589 = !DILocation(line: 485, column: 9, scope: !6567)
!6590 = !DILocation(line: 485, column: 7, scope: !6567)
!6591 = !DILocation(line: 487, column: 11, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6567, file: !16, line: 487, column: 9)
!6593 = !DILocation(line: 487, column: 13, scope: !6592)
!6594 = !DILocation(line: 487, column: 24, scope: !6592)
!6595 = !DILocation(line: 487, column: 27, scope: !6596)
!6596 = !DILexicalBlockFile(scope: !6592, file: !16, discriminator: 1)
!6597 = !DILocation(line: 487, column: 29, scope: !6596)
!6598 = !DILocation(line: 487, column: 53, scope: !6596)
!6599 = !DILocation(line: 487, column: 56, scope: !6600)
!6600 = !DILexicalBlockFile(scope: !6592, file: !16, discriminator: 2)
!6601 = !DILocation(line: 487, column: 58, scope: !6600)
!6602 = !DILocation(line: 488, column: 9, scope: !6592)
!6603 = !DILocation(line: 488, column: 17, scope: !6592)
!6604 = !DILocation(line: 488, column: 14, scope: !6592)
!6605 = !DILocation(line: 488, column: 20, scope: !6592)
!6606 = !DILocation(line: 488, column: 41, scope: !6596)
!6607 = !DILocation(line: 488, column: 40, scope: !6596)
!6608 = !DILocation(line: 488, column: 44, scope: !6596)
!6609 = !DILocation(line: 488, column: 24, scope: !6596)
!6610 = !DILocation(line: 488, column: 26, scope: !6596)
!6611 = !DILocation(line: 488, column: 25, scope: !6596)
!6612 = !DILocation(line: 488, column: 27, scope: !6596)
!6613 = !DILocation(line: 488, column: 43, scope: !6596)
!6614 = !DILocation(line: 489, column: 9, scope: !6592)
!6615 = !DILocation(line: 489, column: 35, scope: !6592)
!6616 = !DILocation(line: 489, column: 25, scope: !6592)
!6617 = !DILocation(line: 489, column: 16, scope: !6592)
!6618 = !DILocation(line: 489, column: 23, scope: !6592)
!6619 = !DILocation(line: 489, column: 14, scope: !6592)
!6620 = !DILocation(line: 489, column: 11, scope: !6592)
!6621 = !DILocation(line: 487, column: 9, scope: !6622)
!6622 = !DILexicalBlockFile(scope: !6567, file: !16, discriminator: 3)
!6623 = !DILocation(line: 490, column: 9, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6592, file: !16, line: 489, column: 39)
!6625 = !DILocation(line: 492, column: 15, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6567, file: !16, line: 492, column: 5)
!6627 = !DILocation(line: 492, column: 13, scope: !6626)
!6628 = !DILocation(line: 492, column: 10, scope: !6626)
!6629 = !DILocation(line: 492, column: 38, scope: !6630)
!6630 = !DILexicalBlockFile(scope: !6631, file: !16, discriminator: 1)
!6631 = distinct !DILexicalBlock(scope: !6626, file: !16, line: 492, column: 5)
!6632 = !DILocation(line: 492, column: 37, scope: !6630)
!6633 = !DILocation(line: 492, column: 41, scope: !6630)
!6634 = !DILocation(line: 492, column: 21, scope: !6630)
!6635 = !DILocation(line: 492, column: 23, scope: !6630)
!6636 = !DILocation(line: 492, column: 22, scope: !6630)
!6637 = !DILocation(line: 492, column: 24, scope: !6630)
!6638 = !DILocation(line: 492, column: 5, scope: !6630)
!6639 = !DILocation(line: 493, column: 9, scope: !6631)
!6640 = !DILocation(line: 492, column: 39, scope: !6641)
!6641 = !DILexicalBlockFile(scope: !6631, file: !16, discriminator: 2)
!6642 = !DILocation(line: 492, column: 5, scope: !6641)
!6643 = distinct !{!6643, !6644}
!6644 = !DILocation(line: 492, column: 5, scope: !6567)
!6645 = !DILocation(line: 495, column: 14, scope: !6567)
!6646 = !DILocation(line: 495, column: 6, scope: !6567)
!6647 = !DILocation(line: 495, column: 12, scope: !6567)
!6648 = !DILocation(line: 496, column: 5, scope: !6567)
!6649 = !DILocation(line: 497, column: 1, scope: !6567)
!6650 = distinct !DISubprogram(name: "hexdecode", scope: !16, file: !16, line: 432, type: !425, isLocal: true, isDefinition: true, scopeLine: 433, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6651 = !DILocalVariable(name: "inptr", arg: 1, scope: !6650, file: !16, line: 432, type: !431)
!6652 = !DILocation(line: 432, column: 39, scope: !6650)
!6653 = !DILocalVariable(name: "result", arg: 2, scope: !6650, file: !16, line: 432, type: !268)
!6654 = !DILocation(line: 432, column: 52, scope: !6650)
!6655 = !DILocalVariable(name: "out", scope: !6650, file: !16, line: 434, type: !325)
!6656 = !DILocation(line: 434, column: 21, scope: !6650)
!6657 = !DILocation(line: 434, column: 45, scope: !6650)
!6658 = !DILocation(line: 434, column: 27, scope: !6650)
!6659 = !DILocalVariable(name: "in", scope: !6650, file: !16, line: 435, type: !346)
!6660 = !DILocation(line: 435, column: 17, scope: !6650)
!6661 = !DILocation(line: 435, column: 23, scope: !6650)
!6662 = !DILocation(line: 435, column: 22, scope: !6650)
!6663 = !DILocalVariable(name: "ret", scope: !6650, file: !16, line: 436, type: !299)
!6664 = !DILocation(line: 436, column: 20, scope: !6650)
!6665 = !DILocation(line: 436, column: 44, scope: !6650)
!6666 = !DILocation(line: 436, column: 37, scope: !6650)
!6667 = !DILocation(line: 436, column: 48, scope: !6650)
!6668 = !DILocation(line: 436, column: 26, scope: !6669)
!6669 = !DILexicalBlockFile(scope: !6650, file: !16, discriminator: 1)
!6670 = !DILocalVariable(name: "cp", scope: !6650, file: !16, line: 437, type: !299)
!6671 = !DILocation(line: 437, column: 20, scope: !6650)
!6672 = !DILocation(line: 437, column: 25, scope: !6650)
!6673 = !DILocalVariable(name: "byte", scope: !6650, file: !16, line: 438, type: !323)
!6674 = !DILocation(line: 438, column: 13, scope: !6650)
!6675 = !DILocalVariable(name: "nibble", scope: !6650, file: !16, line: 439, type: !225)
!6676 = !DILocation(line: 439, column: 9, scope: !6650)
!6677 = !DILocation(line: 441, column: 9, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6650, file: !16, line: 441, column: 9)
!6679 = !DILocation(line: 441, column: 13, scope: !6678)
!6680 = !DILocation(line: 441, column: 9, scope: !6650)
!6681 = !DILocation(line: 442, column: 9, scope: !6678)
!6682 = !DILocation(line: 444, column: 15, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6650, file: !16, line: 444, column: 5)
!6684 = !DILocation(line: 444, column: 10, scope: !6683)
!6685 = !DILocation(line: 444, column: 21, scope: !6686)
!6686 = !DILexicalBlockFile(scope: !6687, file: !16, discriminator: 1)
!6687 = distinct !DILexicalBlock(scope: !6683, file: !16, line: 444, column: 5)
!6688 = !DILocation(line: 444, column: 20, scope: !6686)
!6689 = !DILocation(line: 444, column: 5, scope: !6686)
!6690 = !DILocalVariable(name: "x", scope: !6691, file: !16, line: 445, type: !225)
!6691 = distinct !DILexicalBlock(scope: !6687, file: !16, line: 444, column: 31)
!6692 = !DILocation(line: 445, column: 13, scope: !6691)
!6693 = !DILocation(line: 447, column: 30, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6691, file: !16, line: 447, column: 12)
!6695 = !DILocation(line: 447, column: 29, scope: !6694)
!6696 = !DILocation(line: 447, column: 33, scope: !6694)
!6697 = !DILocation(line: 447, column: 13, scope: !6694)
!6698 = !DILocation(line: 447, column: 15, scope: !6694)
!6699 = !DILocation(line: 447, column: 14, scope: !6694)
!6700 = !DILocation(line: 447, column: 16, scope: !6694)
!6701 = !DILocation(line: 447, column: 12, scope: !6691)
!6702 = !DILocation(line: 448, column: 13, scope: !6694)
!6703 = !DILocation(line: 449, column: 34, scope: !6691)
!6704 = !DILocation(line: 449, column: 33, scope: !6691)
!6705 = !DILocation(line: 449, column: 13, scope: !6691)
!6706 = !DILocation(line: 449, column: 11, scope: !6691)
!6707 = !DILocation(line: 450, column: 13, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6691, file: !16, line: 450, column: 13)
!6709 = !DILocation(line: 450, column: 15, scope: !6708)
!6710 = !DILocation(line: 450, column: 13, scope: !6691)
!6711 = !DILocation(line: 451, column: 25, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6708, file: !16, line: 450, column: 20)
!6713 = !DILocation(line: 451, column: 13, scope: !6712)
!6714 = !DILocation(line: 452, column: 13, scope: !6712)
!6715 = !DILocation(line: 454, column: 23, scope: !6691)
!6716 = !DILocation(line: 454, column: 17, scope: !6691)
!6717 = !DILocation(line: 454, column: 14, scope: !6691)
!6718 = !DILocation(line: 455, column: 21, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6691, file: !16, line: 455, column: 13)
!6720 = !DILocation(line: 455, column: 27, scope: !6719)
!6721 = !DILocation(line: 455, column: 13, scope: !6691)
!6722 = !DILocation(line: 456, column: 21, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6719, file: !16, line: 455, column: 33)
!6724 = !DILocation(line: 456, column: 16, scope: !6723)
!6725 = !DILocation(line: 456, column: 19, scope: !6723)
!6726 = !DILocation(line: 457, column: 18, scope: !6723)
!6727 = !DILocation(line: 458, column: 9, scope: !6723)
!6728 = !DILocation(line: 459, column: 18, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6719, file: !16, line: 458, column: 16)
!6730 = !DILocation(line: 461, column: 5, scope: !6691)
!6731 = !DILocation(line: 444, column: 25, scope: !6732)
!6732 = !DILexicalBlockFile(scope: !6687, file: !16, discriminator: 2)
!6733 = !DILocation(line: 444, column: 5, scope: !6732)
!6734 = distinct !{!6734, !6735}
!6735 = !DILocation(line: 444, column: 5, scope: !6650)
!6736 = !DILocation(line: 462, column: 9, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6650, file: !16, line: 462, column: 9)
!6738 = !DILocation(line: 462, column: 16, scope: !6737)
!6739 = !DILocation(line: 462, column: 9, scope: !6650)
!6740 = !DILocation(line: 463, column: 21, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6737, file: !16, line: 462, column: 22)
!6742 = !DILocation(line: 463, column: 9, scope: !6741)
!6743 = !DILocation(line: 464, column: 9, scope: !6741)
!6744 = !DILocation(line: 466, column: 14, scope: !6650)
!6745 = !DILocation(line: 466, column: 6, scope: !6650)
!6746 = !DILocation(line: 466, column: 12, scope: !6650)
!6747 = !DILocation(line: 468, column: 12, scope: !6650)
!6748 = !DILocation(line: 468, column: 25, scope: !6650)
!6749 = !DILocation(line: 468, column: 19, scope: !6650)
!6750 = !DILocation(line: 468, column: 23, scope: !6650)
!6751 = !DILocation(line: 468, column: 15, scope: !6650)
!6752 = !DILocation(line: 468, column: 5, scope: !6650)
!6753 = !DILocation(line: 469, column: 1, scope: !6650)
!6754 = distinct !DISubprogram(name: "save_errno", scope: !16, file: !16, line: 81, type: !272, isLocal: true, isDefinition: true, scopeLine: 82, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6755 = !DILocation(line: 83, column: 20, scope: !6754)
!6756 = !DILocation(line: 83, column: 19, scope: !6754)
!6757 = !DILocation(line: 83, column: 17, scope: !6754)
!6758 = !DILocation(line: 84, column: 6, scope: !6754)
!6759 = !DILocation(line: 84, column: 10, scope: !6754)
!6760 = !DILocation(line: 85, column: 1, scope: !6754)
!6761 = distinct !DISubprogram(name: "restore_errno", scope: !16, file: !16, line: 87, type: !6762, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6762 = !DISubroutineType(types: !6763)
!6763 = !{!225}
!6764 = !DILocalVariable(name: "ret", scope: !6761, file: !16, line: 89, type: !225)
!6765 = !DILocation(line: 89, column: 9, scope: !6761)
!6766 = !DILocation(line: 89, column: 16, scope: !6761)
!6767 = !DILocation(line: 89, column: 15, scope: !6761)
!6768 = !DILocation(line: 90, column: 12, scope: !6761)
!6769 = !DILocation(line: 90, column: 6, scope: !6761)
!6770 = !DILocation(line: 90, column: 10, scope: !6761)
!6771 = !DILocation(line: 91, column: 12, scope: !6761)
!6772 = !DILocation(line: 91, column: 5, scope: !6761)
!6773 = distinct !DISubprogram(name: "sk_X509_num", scope: !292, file: !292, line: 99, type: !6774, isLocal: true, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6774 = !DISubroutineType(types: !6775)
!6775 = !{!225, !6776}
!6776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6777, size: 64, align: 64)
!6777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !459)
!6778 = !DILocalVariable(name: "sk", arg: 1, scope: !6773, file: !292, line: 99, type: !6776)
!6779 = !DILocation(line: 99, column: 277, scope: !6773)
!6780 = !DILocation(line: 99, column: 328, scope: !6773)
!6781 = !DILocation(line: 99, column: 305, scope: !6773)
!6782 = !DILocation(line: 99, column: 290, scope: !6773)
!6783 = !DILocation(line: 99, column: 283, scope: !6773)
!6784 = distinct !DISubprogram(name: "sk_X509_value", scope: !292, file: !292, line: 99, type: !6785, isLocal: true, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6785 = !DISubroutineType(types: !6786)
!6786 = !{!326, !6776, !225}
!6787 = !DILocalVariable(name: "sk", arg: 1, scope: !6784, file: !292, line: 99, type: !6776)
!6788 = !DILocation(line: 99, column: 421, scope: !6784)
!6789 = !DILocalVariable(name: "idx", arg: 2, scope: !6784, file: !292, line: 99, type: !225)
!6790 = !DILocation(line: 99, column: 429, scope: !6784)
!6791 = !DILocation(line: 99, column: 491, scope: !6784)
!6792 = !DILocation(line: 99, column: 468, scope: !6784)
!6793 = !DILocation(line: 99, column: 495, scope: !6784)
!6794 = !DILocation(line: 99, column: 451, scope: !6784)
!6795 = !DILocation(line: 99, column: 443, scope: !6784)
!6796 = !DILocation(line: 99, column: 436, scope: !6784)
!6797 = distinct !DISubprogram(name: "sk_SCT_num", scope: !5998, file: !5998, line: 58, type: !6798, isLocal: true, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6798 = !DISubroutineType(types: !6799)
!6799 = !{!225, !5995}
!6800 = !DILocalVariable(name: "sk", arg: 1, scope: !6797, file: !5998, line: 58, type: !5995)
!6801 = !DILocation(line: 58, column: 266, scope: !6797)
!6802 = !DILocation(line: 58, column: 317, scope: !6797)
!6803 = !DILocation(line: 58, column: 294, scope: !6797)
!6804 = !DILocation(line: 58, column: 279, scope: !6797)
!6805 = !DILocation(line: 58, column: 272, scope: !6797)
!6806 = distinct !DISubprogram(name: "sk_SCT_value", scope: !5998, file: !5998, line: 58, type: !6807, isLocal: true, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !229)
!6807 = !DISubroutineType(types: !6808)
!6808 = !{!329, !5995, !225}
!6809 = !DILocalVariable(name: "sk", arg: 1, scope: !6806, file: !5998, line: 58, type: !5995)
!6810 = !DILocation(line: 58, column: 407, scope: !6806)
!6811 = !DILocalVariable(name: "idx", arg: 2, scope: !6806, file: !5998, line: 58, type: !225)
!6812 = !DILocation(line: 58, column: 415, scope: !6806)
!6813 = !DILocation(line: 58, column: 476, scope: !6806)
!6814 = !DILocation(line: 58, column: 453, scope: !6806)
!6815 = !DILocation(line: 58, column: 480, scope: !6806)
!6816 = !DILocation(line: 58, column: 436, scope: !6806)
!6817 = !DILocation(line: 58, column: 429, scope: !6806)
!6818 = !DILocation(line: 58, column: 422, scope: !6806)
